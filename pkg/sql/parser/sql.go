// Code generated by goyacc. DO NOT EDIT.
// GENERATED FILE DO NOT EDIT
// Code generated by goyacc -p sql -o sql.go.tmp sql-gen.y. DO NOT EDIT.

//line sql-gen.y:24
package parser

import (
	"fmt"
	__yyfmt__ "fmt"
	"go/constant"
	"strings"

	"github.com/cockroachdb/cockroach/pkg/geo/geopb"
	"github.com/cockroachdb/cockroach/pkg/roachpb"
	"github.com/cockroachdb/cockroach/pkg/security"
	"github.com/cockroachdb/cockroach/pkg/sql/lexbase"
	"github.com/cockroachdb/cockroach/pkg/sql/privilege"
	"github.com/cockroachdb/cockroach/pkg/sql/scanner"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree"
	"github.com/cockroachdb/cockroach/pkg/sql/types"
	"github.com/cockroachdb/errors"
	"github.com/lib/pq/oid"
)

//line sql-gen.y:24

const MaxUint = ^uint(0)

const MaxInt = int(MaxUint >> 1)

func unimplemented(sqllex sqlLexer, feature string) int {
	sqllex.(*lexer).Unimplemented(feature)
	return 1
}

func purposelyUnimplemented(sqllex sqlLexer, feature string, reason string) int {
	sqllex.(*lexer).PurposelyUnimplemented(feature, reason)
	return 1
}

func setErr(sqllex sqlLexer, err error) int {
	sqllex.(*lexer).setErr(err)
	return 1
}

func unimplementedWithIssue(sqllex sqlLexer, issue int) int {
	sqllex.(*lexer).UnimplementedWithIssue(issue)
	return 1
}

func unimplementedWithIssueDetail(sqllex sqlLexer, issue int, detail string) int {
	sqllex.(*lexer).UnimplementedWithIssueDetail(issue, detail)
	return 1
}

func processBinaryQualOp(
	sqllex sqlLexer,
	op tree.Operator,
	lhs tree.Expr,
	rhs tree.Expr,
) (tree.Expr, int) {
	switch op := op.(type) {
	case tree.BinaryOperator:
		op.IsExplicitOperator = true
		return &tree.BinaryExpr{Operator: op, Left: lhs, Right: rhs}, 0
	case tree.ComparisonOperator:
		op.IsExplicitOperator = true
		return &tree.ComparisonExpr{Operator: op, Left: lhs, Right: rhs}, 0
	case tree.UnaryOperator:

		switch op.Symbol {
		case tree.UnaryComplement:
			return &tree.ComparisonExpr{
				Operator: tree.ComparisonOperator{
					Symbol:             tree.RegMatch,
					IsExplicitOperator: true,
				},
				Left:  lhs,
				Right: rhs,
			}, 0
		default:
			sqllex.Error(fmt.Sprintf("unknown binary operator %s", op))
			return nil, -1
		}
	default:
		sqllex.Error(fmt.Sprintf("unknown binary operator %s", op))
		return nil, 1
	}
}

func processUnaryQualOp(
	sqllex sqlLexer,
	op tree.Operator,
	expr tree.Expr,
) (tree.Expr, int) {
	e, code := processUnaryQualOpInternal(sqllex, op, expr)
	if code != 0 {
		return e, code
	}
	if e, ok := e.(*tree.UnaryExpr); ok {
		e.Operator.IsExplicitOperator = true
	}
	return e, code
}

func processUnaryQualOpInternal(
	sqllex sqlLexer,
	op tree.Operator,
	expr tree.Expr,
) (tree.Expr, int) {
	switch op := op.(type) {
	case tree.UnaryOperator:
		return &tree.UnaryExpr{Operator: op, Expr: expr}, 0
	case tree.BinaryOperator:

		switch op.Symbol {
		case tree.Plus:
			return expr, 0
		case tree.Minus:
			return unaryNegation(expr), 0
		}
	case tree.ComparisonOperator:
		switch op.Symbol {
		case tree.RegMatch:
			return &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryComplement), Expr: expr}, 0
		}
	}
	sqllex.Error(fmt.Sprintf("unknown unary operator %s", op))
	return nil, 1
}

//line sql-gen.y:156

var _ scanner.ScanSymType = &sqlSymType{}

func (s *sqlSymType) ID() int32 {
	return s.id
}

func (s *sqlSymType) SetID(id int32) {
	s.id = id
}

func (s *sqlSymType) Pos() int32 {
	return s.pos
}

func (s *sqlSymType) SetPos(pos int32) {
	s.pos = pos
}

func (s *sqlSymType) Str() string {
	return s.str
}

func (s *sqlSymType) SetStr(str string) {
	s.str = str
}

func (s *sqlSymType) UnionVal() interface{} {
	return s.union.val
}

func (s *sqlSymType) SetUnionVal(val interface{}) {
	s.union.val = val
}

type sqlSymUnion struct {
	val interface{}
}

func (u *sqlSymUnion) numVal() *tree.NumVal {
	return u.val.(*tree.NumVal)
}
func (u *sqlSymUnion) strVal() *tree.StrVal {
	if stmt, ok := u.val.(*tree.StrVal); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) placeholder() *tree.Placeholder {
	return u.val.(*tree.Placeholder)
}
func (u *sqlSymUnion) auditMode() tree.AuditMode {
	return u.val.(tree.AuditMode)
}
func (u *sqlSymUnion) bool() bool {
	return u.val.(bool)
}
func (u *sqlSymUnion) strPtr() *string {
	return u.val.(*string)
}
func (u *sqlSymUnion) strs() []string {
	return u.val.([]string)
}
func (u *sqlSymUnion) user() security.SQLUsername {
	return u.val.(security.SQLUsername)
}
func (u *sqlSymUnion) users() []security.SQLUsername {
	return u.val.([]security.SQLUsername)
}
func (u *sqlSymUnion) newTableIndexName() *tree.TableIndexName {
	tn := u.val.(tree.TableIndexName)
	return &tn
}
func (u *sqlSymUnion) tableIndexName() tree.TableIndexName {
	return u.val.(tree.TableIndexName)
}
func (u *sqlSymUnion) newTableIndexNames() tree.TableIndexNames {
	return u.val.(tree.TableIndexNames)
}
func (u *sqlSymUnion) shardedIndexDef() *tree.ShardedIndexDef {
	return u.val.(*tree.ShardedIndexDef)
}
func (u *sqlSymUnion) nameList() tree.NameList {
	return u.val.(tree.NameList)
}
func (u *sqlSymUnion) enumValueList() tree.EnumValueList {
	return u.val.(tree.EnumValueList)
}
func (u *sqlSymUnion) unresolvedName() *tree.UnresolvedName {
	return u.val.(*tree.UnresolvedName)
}
func (u *sqlSymUnion) unresolvedObjectName() *tree.UnresolvedObjectName {
	return u.val.(*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) unresolvedObjectNames() []*tree.UnresolvedObjectName {
	return u.val.([]*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) functionReference() tree.FunctionReference {
	return u.val.(tree.FunctionReference)
}
func (u *sqlSymUnion) tablePatterns() tree.TablePatterns {
	return u.val.(tree.TablePatterns)
}
func (u *sqlSymUnion) tableNames() tree.TableNames {
	return u.val.(tree.TableNames)
}
func (u *sqlSymUnion) indexFlags() *tree.IndexFlags {
	return u.val.(*tree.IndexFlags)
}
func (u *sqlSymUnion) arraySubscript() *tree.ArraySubscript {
	return u.val.(*tree.ArraySubscript)
}
func (u *sqlSymUnion) arraySubscripts() tree.ArraySubscripts {
	if as, ok := u.val.(tree.ArraySubscripts); ok {
		return as
	}
	return nil
}
func (u *sqlSymUnion) stmt() tree.Statement {
	if stmt, ok := u.val.(tree.Statement); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) cte() *tree.CTE {
	if cte, ok := u.val.(*tree.CTE); ok {
		return cte
	}
	return nil
}
func (u *sqlSymUnion) ctes() []*tree.CTE {
	return u.val.([]*tree.CTE)
}
func (u *sqlSymUnion) with() *tree.With {
	if with, ok := u.val.(*tree.With); ok {
		return with
	}
	return nil
}
func (u *sqlSymUnion) slct() *tree.Select {
	return u.val.(*tree.Select)
}
func (u *sqlSymUnion) selectStmt() tree.SelectStatement {
	return u.val.(tree.SelectStatement)
}
func (u *sqlSymUnion) colDef() *tree.ColumnTableDef {
	return u.val.(*tree.ColumnTableDef)
}
func (u *sqlSymUnion) constraintDef() tree.ConstraintTableDef {
	return u.val.(tree.ConstraintTableDef)
}
func (u *sqlSymUnion) tblDef() tree.TableDef {
	return u.val.(tree.TableDef)
}
func (u *sqlSymUnion) tblDefs() tree.TableDefs {
	return u.val.(tree.TableDefs)
}
func (u *sqlSymUnion) likeTableOption() tree.LikeTableOption {
	return u.val.(tree.LikeTableOption)
}
func (u *sqlSymUnion) likeTableOptionList() []tree.LikeTableOption {
	return u.val.([]tree.LikeTableOption)
}
func (u *sqlSymUnion) colQual() tree.NamedColumnQualification {
	return u.val.(tree.NamedColumnQualification)
}
func (u *sqlSymUnion) colQualElem() tree.ColumnQualification {
	return u.val.(tree.ColumnQualification)
}
func (u *sqlSymUnion) colQuals() []tree.NamedColumnQualification {
	return u.val.([]tree.NamedColumnQualification)
}
func (u *sqlSymUnion) storageParam() tree.StorageParam {
	return u.val.(tree.StorageParam)
}
func (u *sqlSymUnion) storageParams() []tree.StorageParam {
	if params, ok := u.val.([]tree.StorageParam); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) persistence() tree.Persistence {
	return u.val.(tree.Persistence)
}
func (u *sqlSymUnion) colType() *types.T {
	if colType, ok := u.val.(*types.T); ok && colType != nil {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) tableRefCols() []tree.ColumnID {
	if refCols, ok := u.val.([]tree.ColumnID); ok {
		return refCols
	}
	return nil
}
func (u *sqlSymUnion) colTypes() []*types.T {
	return u.val.([]*types.T)
}
func (u *sqlSymUnion) int32() int32 {
	return u.val.(int32)
}
func (u *sqlSymUnion) int64() int64 {
	return u.val.(int64)
}
func (u *sqlSymUnion) seqOpt() tree.SequenceOption {
	return u.val.(tree.SequenceOption)
}
func (u *sqlSymUnion) seqOpts() []tree.SequenceOption {
	return u.val.([]tree.SequenceOption)
}
func (u *sqlSymUnion) expr() tree.Expr {
	if expr, ok := u.val.(tree.Expr); ok {
		return expr
	}
	return nil
}
func (u *sqlSymUnion) exprs() tree.Exprs {
	return u.val.(tree.Exprs)
}
func (u *sqlSymUnion) selExpr() tree.SelectExpr {
	return u.val.(tree.SelectExpr)
}
func (u *sqlSymUnion) selExprs() tree.SelectExprs {
	return u.val.(tree.SelectExprs)
}
func (u *sqlSymUnion) retClause() tree.ReturningClause {
	return u.val.(tree.ReturningClause)
}
func (u *sqlSymUnion) aliasClause() tree.AliasClause {
	return u.val.(tree.AliasClause)
}
func (u *sqlSymUnion) asOfClause() tree.AsOfClause {
	return u.val.(tree.AsOfClause)
}
func (u *sqlSymUnion) tblExpr() tree.TableExpr {
	return u.val.(tree.TableExpr)
}
func (u *sqlSymUnion) tblExprs() tree.TableExprs {
	return u.val.(tree.TableExprs)
}
func (u *sqlSymUnion) from() tree.From {
	return u.val.(tree.From)
}
func (u *sqlSymUnion) int32s() []int32 {
	return u.val.([]int32)
}
func (u *sqlSymUnion) joinCond() tree.JoinCond {
	return u.val.(tree.JoinCond)
}
func (u *sqlSymUnion) when() *tree.When {
	return u.val.(*tree.When)
}
func (u *sqlSymUnion) whens() []*tree.When {
	return u.val.([]*tree.When)
}
func (u *sqlSymUnion) lockingClause() tree.LockingClause {
	return u.val.(tree.LockingClause)
}
func (u *sqlSymUnion) lockingItem() *tree.LockingItem {
	return u.val.(*tree.LockingItem)
}
func (u *sqlSymUnion) lockingStrength() tree.LockingStrength {
	return u.val.(tree.LockingStrength)
}
func (u *sqlSymUnion) lockingWaitPolicy() tree.LockingWaitPolicy {
	return u.val.(tree.LockingWaitPolicy)
}
func (u *sqlSymUnion) updateExpr() *tree.UpdateExpr {
	return u.val.(*tree.UpdateExpr)
}
func (u *sqlSymUnion) updateExprs() tree.UpdateExprs {
	return u.val.(tree.UpdateExprs)
}
func (u *sqlSymUnion) limit() *tree.Limit {
	return u.val.(*tree.Limit)
}
func (u *sqlSymUnion) targetList() tree.TargetList {
	return u.val.(tree.TargetList)
}
func (u *sqlSymUnion) targetListPtr() *tree.TargetList {
	return u.val.(*tree.TargetList)
}
func (u *sqlSymUnion) privilegeType() privilege.Kind {
	return u.val.(privilege.Kind)
}
func (u *sqlSymUnion) privilegeList() privilege.List {
	return u.val.(privilege.List)
}
func (u *sqlSymUnion) onConflict() *tree.OnConflict {
	return u.val.(*tree.OnConflict)
}
func (u *sqlSymUnion) orderBy() tree.OrderBy {
	return u.val.(tree.OrderBy)
}
func (u *sqlSymUnion) order() *tree.Order {
	return u.val.(*tree.Order)
}
func (u *sqlSymUnion) orders() []*tree.Order {
	return u.val.([]*tree.Order)
}
func (u *sqlSymUnion) groupBy() tree.GroupBy {
	return u.val.(tree.GroupBy)
}
func (u *sqlSymUnion) windowFrame() *tree.WindowFrame {
	return u.val.(*tree.WindowFrame)
}
func (u *sqlSymUnion) windowFrameBounds() tree.WindowFrameBounds {
	return u.val.(tree.WindowFrameBounds)
}
func (u *sqlSymUnion) windowFrameBound() *tree.WindowFrameBound {
	return u.val.(*tree.WindowFrameBound)
}
func (u *sqlSymUnion) windowFrameExclusion() tree.WindowFrameExclusion {
	return u.val.(tree.WindowFrameExclusion)
}
func (u *sqlSymUnion) distinctOn() tree.DistinctOn {
	return u.val.(tree.DistinctOn)
}
func (u *sqlSymUnion) dir() tree.Direction {
	return u.val.(tree.Direction)
}
func (u *sqlSymUnion) nullsOrder() tree.NullsOrder {
	return u.val.(tree.NullsOrder)
}
func (u *sqlSymUnion) alterTableCmd() tree.AlterTableCmd {
	return u.val.(tree.AlterTableCmd)
}
func (u *sqlSymUnion) alterTableCmds() tree.AlterTableCmds {
	return u.val.(tree.AlterTableCmds)
}
func (u *sqlSymUnion) alterIndexCmd() tree.AlterIndexCmd {
	return u.val.(tree.AlterIndexCmd)
}
func (u *sqlSymUnion) alterIndexCmds() tree.AlterIndexCmds {
	return u.val.(tree.AlterIndexCmds)
}
func (u *sqlSymUnion) isoLevel() tree.IsolationLevel {
	return u.val.(tree.IsolationLevel)
}
func (u *sqlSymUnion) userPriority() tree.UserPriority {
	return u.val.(tree.UserPriority)
}
func (u *sqlSymUnion) readWriteMode() tree.ReadWriteMode {
	return u.val.(tree.ReadWriteMode)
}
func (u *sqlSymUnion) deferrableMode() tree.DeferrableMode {
	return u.val.(tree.DeferrableMode)
}
func (u *sqlSymUnion) idxElem() tree.IndexElem {
	return u.val.(tree.IndexElem)
}
func (u *sqlSymUnion) idxElems() tree.IndexElemList {
	return u.val.(tree.IndexElemList)
}
func (u *sqlSymUnion) dropBehavior() tree.DropBehavior {
	return u.val.(tree.DropBehavior)
}
func (u *sqlSymUnion) validationBehavior() tree.ValidationBehavior {
	return u.val.(tree.ValidationBehavior)
}
func (u *sqlSymUnion) interleave() *tree.InterleaveDef {
	return u.val.(*tree.InterleaveDef)
}
func (u *sqlSymUnion) partitionBy() *tree.PartitionBy {
	return u.val.(*tree.PartitionBy)
}
func (u *sqlSymUnion) partitionByTable() *tree.PartitionByTable {
	return u.val.(*tree.PartitionByTable)
}
func (u *sqlSymUnion) partitionByIndex() *tree.PartitionByIndex {
	return u.val.(*tree.PartitionByIndex)
}
func (u *sqlSymUnion) createTableOnCommitSetting() tree.CreateTableOnCommitSetting {
	return u.val.(tree.CreateTableOnCommitSetting)
}
func (u *sqlSymUnion) listPartition() tree.ListPartition {
	return u.val.(tree.ListPartition)
}
func (u *sqlSymUnion) listPartitions() []tree.ListPartition {
	return u.val.([]tree.ListPartition)
}
func (u *sqlSymUnion) rangePartition() tree.RangePartition {
	return u.val.(tree.RangePartition)
}
func (u *sqlSymUnion) rangePartitions() []tree.RangePartition {
	return u.val.([]tree.RangePartition)
}
func (u *sqlSymUnion) setZoneConfig() *tree.SetZoneConfig {
	return u.val.(*tree.SetZoneConfig)
}
func (u *sqlSymUnion) tuples() []*tree.Tuple {
	return u.val.([]*tree.Tuple)
}
func (u *sqlSymUnion) tuple() *tree.Tuple {
	return u.val.(*tree.Tuple)
}
func (u *sqlSymUnion) windowDef() *tree.WindowDef {
	return u.val.(*tree.WindowDef)
}
func (u *sqlSymUnion) window() tree.Window {
	return u.val.(tree.Window)
}
func (u *sqlSymUnion) op() tree.Operator {
	return u.val.(tree.Operator)
}
func (u *sqlSymUnion) cmpOp() tree.ComparisonOperator {
	return u.val.(tree.ComparisonOperator)
}
func (u *sqlSymUnion) intervalTypeMetadata() types.IntervalTypeMetadata {
	return u.val.(types.IntervalTypeMetadata)
}
func (u *sqlSymUnion) kvOption() tree.KVOption {
	return u.val.(tree.KVOption)
}
func (u *sqlSymUnion) kvOptions() []tree.KVOption {
	if colType, ok := u.val.([]tree.KVOption); ok {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) backupOptions() *tree.BackupOptions {
	return u.val.(*tree.BackupOptions)
}
func (u *sqlSymUnion) replicationOptions() *tree.ReplicationOptions {
	return u.val.(*tree.ReplicationOptions)
}
func (u *sqlSymUnion) copyOptions() *tree.CopyOptions {
	return u.val.(*tree.CopyOptions)
}
func (u *sqlSymUnion) restoreOptions() *tree.RestoreOptions {
	return u.val.(*tree.RestoreOptions)
}
func (u *sqlSymUnion) transactionModes() tree.TransactionModes {
	return u.val.(tree.TransactionModes)
}
func (u *sqlSymUnion) compositeKeyMatchMethod() tree.CompositeKeyMatchMethod {
	return u.val.(tree.CompositeKeyMatchMethod)
}
func (u *sqlSymUnion) referenceAction() tree.ReferenceAction {
	return u.val.(tree.ReferenceAction)
}
func (u *sqlSymUnion) referenceActions() tree.ReferenceActions {
	return u.val.(tree.ReferenceActions)
}
func (u *sqlSymUnion) createStatsOptions() *tree.CreateStatsOptions {
	return u.val.(*tree.CreateStatsOptions)
}
func (u *sqlSymUnion) scrubOptions() tree.ScrubOptions {
	return u.val.(tree.ScrubOptions)
}
func (u *sqlSymUnion) scrubOption() tree.ScrubOption {
	return u.val.(tree.ScrubOption)
}
func (u *sqlSymUnion) resolvableFuncRefFromName() tree.ResolvableFunctionReference {
	return tree.ResolvableFunctionReference{FunctionReference: u.unresolvedName()}
}
func (u *sqlSymUnion) rowsFromExpr() *tree.RowsFromExpr {
	return u.val.(*tree.RowsFromExpr)
}
func (u *sqlSymUnion) stringOrPlaceholderOptList() tree.StringOrPlaceholderOptList {
	return u.val.(tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) listOfStringOrPlaceholderOptList() []tree.StringOrPlaceholderOptList {
	return u.val.([]tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) fullBackupClause() *tree.FullBackupClause {
	return u.val.(*tree.FullBackupClause)
}
func (u *sqlSymUnion) geoShapeType() geopb.ShapeType {
	return u.val.(geopb.ShapeType)
}
func newNameFromStr(s string) *tree.Name {
	return (*tree.Name)(&s)
}
func (u *sqlSymUnion) typeReference() tree.ResolvableTypeReference {
	return u.val.(tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) typeReferences() []tree.ResolvableTypeReference {
	return u.val.([]tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) alterTypeAddValuePlacement() *tree.AlterTypeAddValuePlacement {
	return u.val.(*tree.AlterTypeAddValuePlacement)
}
func (u *sqlSymUnion) scheduleState() tree.ScheduleState {
	return u.val.(tree.ScheduleState)
}
func (u *sqlSymUnion) executorType() tree.ScheduledJobExecutorType {
	return u.val.(tree.ScheduledJobExecutorType)
}
func (u *sqlSymUnion) refreshDataOption() tree.RefreshDataOption {
	return u.val.(tree.RefreshDataOption)
}
func (u *sqlSymUnion) locality() *tree.Locality {
	return u.val.(*tree.Locality)
}
func (u *sqlSymUnion) survivalGoal() tree.SurvivalGoal {
	return u.val.(tree.SurvivalGoal)
}
func (u *sqlSymUnion) objectNamePrefix() tree.ObjectNamePrefix {
	return u.val.(tree.ObjectNamePrefix)
}
func (u *sqlSymUnion) objectNamePrefixList() tree.ObjectNamePrefixList {
	return u.val.(tree.ObjectNamePrefixList)
}

//line sql-gen.y:837
type sqlSymType struct {
	yys   int
	id    int32
	pos   int32
	str   string
	union sqlSymUnion
}

const IDENT = lexbase.IDENT
const SCONST = lexbase.SCONST
const BCONST = lexbase.BCONST
const BITCONST = lexbase.BITCONST
const ICONST = lexbase.ICONST
const FCONST = lexbase.FCONST
const PLACEHOLDER = lexbase.PLACEHOLDER
const TYPECAST = lexbase.TYPECAST
const TYPEANNOTATE = lexbase.TYPEANNOTATE
const DOT_DOT = lexbase.DOT_DOT
const LESS_EQUALS = lexbase.LESS_EQUALS
const GREATER_EQUALS = lexbase.GREATER_EQUALS
const NOT_EQUALS = lexbase.NOT_EQUALS
const NOT_REGMATCH = lexbase.NOT_REGMATCH
const REGIMATCH = lexbase.REGIMATCH
const NOT_REGIMATCH = lexbase.NOT_REGIMATCH
const ERROR = lexbase.ERROR
const ABORT = lexbase.ABORT
const ACCESS = lexbase.ACCESS
const ACTION = lexbase.ACTION
const ADD = lexbase.ADD
const ADMIN = lexbase.ADMIN
const AFTER = lexbase.AFTER
const AGGREGATE = lexbase.AGGREGATE
const ALL = lexbase.ALL
const ALTER = lexbase.ALTER
const ALWAYS = lexbase.ALWAYS
const ANALYSE = lexbase.ANALYSE
const ANALYZE = lexbase.ANALYZE
const AND = lexbase.AND
const AND_AND = lexbase.AND_AND
const ANY = lexbase.ANY
const ANNOTATE_TYPE = lexbase.ANNOTATE_TYPE
const ARRAY = lexbase.ARRAY
const AS = lexbase.AS
const ASC = lexbase.ASC
const ASYMMETRIC = lexbase.ASYMMETRIC
const AT = lexbase.AT
const ATTRIBUTE = lexbase.ATTRIBUTE
const AUTHORIZATION = lexbase.AUTHORIZATION
const AUTOMATIC = lexbase.AUTOMATIC
const AVAILABILITY = lexbase.AVAILABILITY
const BACKUP = lexbase.BACKUP
const BACKUPS = lexbase.BACKUPS
const BEFORE = lexbase.BEFORE
const BEGIN = lexbase.BEGIN
const BETWEEN = lexbase.BETWEEN
const BIGINT = lexbase.BIGINT
const BIGSERIAL = lexbase.BIGSERIAL
const BINARY = lexbase.BINARY
const BIT = lexbase.BIT
const BUCKET_COUNT = lexbase.BUCKET_COUNT
const BOOLEAN = lexbase.BOOLEAN
const BOTH = lexbase.BOTH
const BOX2D = lexbase.BOX2D
const BUNDLE = lexbase.BUNDLE
const BY = lexbase.BY
const CACHE = lexbase.CACHE
const CANCEL = lexbase.CANCEL
const CANCELQUERY = lexbase.CANCELQUERY
const CASCADE = lexbase.CASCADE
const CASE = lexbase.CASE
const CAST = lexbase.CAST
const CBRT = lexbase.CBRT
const CHANGEFEED = lexbase.CHANGEFEED
const CHAR = lexbase.CHAR
const CHARACTER = lexbase.CHARACTER
const CHARACTERISTICS = lexbase.CHARACTERISTICS
const CHECK = lexbase.CHECK
const CLOSE = lexbase.CLOSE
const CLUSTER = lexbase.CLUSTER
const COALESCE = lexbase.COALESCE
const COLLATE = lexbase.COLLATE
const COLLATION = lexbase.COLLATION
const COLUMN = lexbase.COLUMN
const COLUMNS = lexbase.COLUMNS
const COMMENT = lexbase.COMMENT
const COMMENTS = lexbase.COMMENTS
const COMMIT = lexbase.COMMIT
const COMMITTED = lexbase.COMMITTED
const COMPACT = lexbase.COMPACT
const COMPLETE = lexbase.COMPLETE
const CONCAT = lexbase.CONCAT
const CONCURRENTLY = lexbase.CONCURRENTLY
const CONFIGURATION = lexbase.CONFIGURATION
const CONFIGURATIONS = lexbase.CONFIGURATIONS
const CONFIGURE = lexbase.CONFIGURE
const CONFLICT = lexbase.CONFLICT
const CONNECTION = lexbase.CONNECTION
const CONSTRAINT = lexbase.CONSTRAINT
const CONSTRAINTS = lexbase.CONSTRAINTS
const CONTAINS = lexbase.CONTAINS
const CONTROLCHANGEFEED = lexbase.CONTROLCHANGEFEED
const CONTROLJOB = lexbase.CONTROLJOB
const CONVERSION = lexbase.CONVERSION
const CONVERT = lexbase.CONVERT
const COPY = lexbase.COPY
const COVERING = lexbase.COVERING
const CREATE = lexbase.CREATE
const CREATEDB = lexbase.CREATEDB
const CREATELOGIN = lexbase.CREATELOGIN
const CREATEROLE = lexbase.CREATEROLE
const CROSS = lexbase.CROSS
const CSV = lexbase.CSV
const CUBE = lexbase.CUBE
const CURRENT = lexbase.CURRENT
const CURRENT_CATALOG = lexbase.CURRENT_CATALOG
const CURRENT_DATE = lexbase.CURRENT_DATE
const CURRENT_SCHEMA = lexbase.CURRENT_SCHEMA
const CURRENT_ROLE = lexbase.CURRENT_ROLE
const CURRENT_TIME = lexbase.CURRENT_TIME
const CURRENT_TIMESTAMP = lexbase.CURRENT_TIMESTAMP
const CURRENT_USER = lexbase.CURRENT_USER
const CURSOR = lexbase.CURSOR
const CYCLE = lexbase.CYCLE
const DATA = lexbase.DATA
const DATABASE = lexbase.DATABASE
const DATABASES = lexbase.DATABASES
const DATE = lexbase.DATE
const DAY = lexbase.DAY
const DEC = lexbase.DEC
const DECIMAL = lexbase.DECIMAL
const DEFAULT = lexbase.DEFAULT
const DEFAULTS = lexbase.DEFAULTS
const DEALLOCATE = lexbase.DEALLOCATE
const DECLARE = lexbase.DECLARE
const DEFERRABLE = lexbase.DEFERRABLE
const DEFERRED = lexbase.DEFERRED
const DELETE = lexbase.DELETE
const DELIMITER = lexbase.DELIMITER
const DESC = lexbase.DESC
const DESTINATION = lexbase.DESTINATION
const DETACHED = lexbase.DETACHED
const DISCARD = lexbase.DISCARD
const DISTINCT = lexbase.DISTINCT
const DO = lexbase.DO
const DOMAIN = lexbase.DOMAIN
const DOUBLE = lexbase.DOUBLE
const DROP = lexbase.DROP
const ELSE = lexbase.ELSE
const ENCODING = lexbase.ENCODING
const ENCRYPTION_PASSPHRASE = lexbase.ENCRYPTION_PASSPHRASE
const END = lexbase.END
const ENUM = lexbase.ENUM
const ENUMS = lexbase.ENUMS
const ESCAPE = lexbase.ESCAPE
const EXCEPT = lexbase.EXCEPT
const EXCLUDE = lexbase.EXCLUDE
const EXCLUDING = lexbase.EXCLUDING
const EXISTS = lexbase.EXISTS
const EXECUTE = lexbase.EXECUTE
const EXECUTION = lexbase.EXECUTION
const EXPERIMENTAL = lexbase.EXPERIMENTAL
const EXPERIMENTAL_FINGERPRINTS = lexbase.EXPERIMENTAL_FINGERPRINTS
const EXPERIMENTAL_REPLICA = lexbase.EXPERIMENTAL_REPLICA
const EXPERIMENTAL_AUDIT = lexbase.EXPERIMENTAL_AUDIT
const EXPIRATION = lexbase.EXPIRATION
const EXPLAIN = lexbase.EXPLAIN
const EXPORT = lexbase.EXPORT
const EXTENSION = lexbase.EXTENSION
const EXTRACT = lexbase.EXTRACT
const EXTRACT_DURATION = lexbase.EXTRACT_DURATION
const FAILURE = lexbase.FAILURE
const FALSE = lexbase.FALSE
const FAMILY = lexbase.FAMILY
const FETCH = lexbase.FETCH
const FETCHVAL = lexbase.FETCHVAL
const FETCHTEXT = lexbase.FETCHTEXT
const FETCHVAL_PATH = lexbase.FETCHVAL_PATH
const FETCHTEXT_PATH = lexbase.FETCHTEXT_PATH
const FILES = lexbase.FILES
const FILTER = lexbase.FILTER
const FIRST = lexbase.FIRST
const FLOAT = lexbase.FLOAT
const FLOAT4 = lexbase.FLOAT4
const FLOAT8 = lexbase.FLOAT8
const FLOORDIV = lexbase.FLOORDIV
const FOLLOWING = lexbase.FOLLOWING
const FOR = lexbase.FOR
const FORCE = lexbase.FORCE
const FORCE_INDEX = lexbase.FORCE_INDEX
const FOREIGN = lexbase.FOREIGN
const FROM = lexbase.FROM
const FULL = lexbase.FULL
const FUNCTION = lexbase.FUNCTION
const GENERATED = lexbase.GENERATED
const GEOGRAPHY = lexbase.GEOGRAPHY
const GEOMETRY = lexbase.GEOMETRY
const GEOMETRYM = lexbase.GEOMETRYM
const GEOMETRYZ = lexbase.GEOMETRYZ
const GEOMETRYZM = lexbase.GEOMETRYZM
const GEOMETRYCOLLECTION = lexbase.GEOMETRYCOLLECTION
const GEOMETRYCOLLECTIONM = lexbase.GEOMETRYCOLLECTIONM
const GEOMETRYCOLLECTIONZ = lexbase.GEOMETRYCOLLECTIONZ
const GEOMETRYCOLLECTIONZM = lexbase.GEOMETRYCOLLECTIONZM
const GLOBAL = lexbase.GLOBAL
const GOAL = lexbase.GOAL
const GRANT = lexbase.GRANT
const GRANTS = lexbase.GRANTS
const GREATEST = lexbase.GREATEST
const GROUP = lexbase.GROUP
const GROUPING = lexbase.GROUPING
const GROUPS = lexbase.GROUPS
const HAVING = lexbase.HAVING
const HASH = lexbase.HASH
const HIGH = lexbase.HIGH
const HISTOGRAM = lexbase.HISTOGRAM
const HOUR = lexbase.HOUR
const IDENTITY = lexbase.IDENTITY
const IF = lexbase.IF
const IFERROR = lexbase.IFERROR
const IFNULL = lexbase.IFNULL
const IGNORE_FOREIGN_KEYS = lexbase.IGNORE_FOREIGN_KEYS
const ILIKE = lexbase.ILIKE
const IMMEDIATE = lexbase.IMMEDIATE
const IMPORT = lexbase.IMPORT
const IN = lexbase.IN
const INCLUDE = lexbase.INCLUDE
const INCLUDE_DEPRECATED_INTERLEAVES = lexbase.INCLUDE_DEPRECATED_INTERLEAVES
const INCLUDING = lexbase.INCLUDING
const INCREMENT = lexbase.INCREMENT
const INCREMENTAL = lexbase.INCREMENTAL
const INET = lexbase.INET
const INET_CONTAINED_BY_OR_EQUALS = lexbase.INET_CONTAINED_BY_OR_EQUALS
const INET_CONTAINS_OR_EQUALS = lexbase.INET_CONTAINS_OR_EQUALS
const INDEX = lexbase.INDEX
const INDEXES = lexbase.INDEXES
const INHERITS = lexbase.INHERITS
const INJECT = lexbase.INJECT
const INTERLEAVE = lexbase.INTERLEAVE
const INITIALLY = lexbase.INITIALLY
const INNER = lexbase.INNER
const INSERT = lexbase.INSERT
const INT = lexbase.INT
const INTEGER = lexbase.INTEGER
const INTERSECT = lexbase.INTERSECT
const INTERVAL = lexbase.INTERVAL
const INTO = lexbase.INTO
const INTO_DB = lexbase.INTO_DB
const INVERTED = lexbase.INVERTED
const IS = lexbase.IS
const ISERROR = lexbase.ISERROR
const ISNULL = lexbase.ISNULL
const ISOLATION = lexbase.ISOLATION
const JOB = lexbase.JOB
const JOBS = lexbase.JOBS
const JOIN = lexbase.JOIN
const JSON = lexbase.JSON
const JSONB = lexbase.JSONB
const JSON_SOME_EXISTS = lexbase.JSON_SOME_EXISTS
const JSON_ALL_EXISTS = lexbase.JSON_ALL_EXISTS
const KEY = lexbase.KEY
const KEYS = lexbase.KEYS
const KMS = lexbase.KMS
const KV = lexbase.KV
const LANGUAGE = lexbase.LANGUAGE
const LAST = lexbase.LAST
const LATERAL = lexbase.LATERAL
const LATEST = lexbase.LATEST
const LC_CTYPE = lexbase.LC_CTYPE
const LC_COLLATE = lexbase.LC_COLLATE
const LEADING = lexbase.LEADING
const LEASE = lexbase.LEASE
const LEAST = lexbase.LEAST
const LEFT = lexbase.LEFT
const LESS = lexbase.LESS
const LEVEL = lexbase.LEVEL
const LIKE = lexbase.LIKE
const LIMIT = lexbase.LIMIT
const LINESTRING = lexbase.LINESTRING
const LINESTRINGM = lexbase.LINESTRINGM
const LINESTRINGZ = lexbase.LINESTRINGZ
const LINESTRINGZM = lexbase.LINESTRINGZM
const LIST = lexbase.LIST
const LOCAL = lexbase.LOCAL
const LOCALITY = lexbase.LOCALITY
const LOCALTIME = lexbase.LOCALTIME
const LOCALTIMESTAMP = lexbase.LOCALTIMESTAMP
const LOCKED = lexbase.LOCKED
const LOGIN = lexbase.LOGIN
const LOOKUP = lexbase.LOOKUP
const LOW = lexbase.LOW
const LSHIFT = lexbase.LSHIFT
const MATCH = lexbase.MATCH
const MATERIALIZED = lexbase.MATERIALIZED
const MERGE = lexbase.MERGE
const MINVALUE = lexbase.MINVALUE
const MAXVALUE = lexbase.MAXVALUE
const METHOD = lexbase.METHOD
const MINUTE = lexbase.MINUTE
const MODIFYCLUSTERSETTING = lexbase.MODIFYCLUSTERSETTING
const MONTH = lexbase.MONTH
const MULTILINESTRING = lexbase.MULTILINESTRING
const MULTILINESTRINGM = lexbase.MULTILINESTRINGM
const MULTILINESTRINGZ = lexbase.MULTILINESTRINGZ
const MULTILINESTRINGZM = lexbase.MULTILINESTRINGZM
const MULTIPOINT = lexbase.MULTIPOINT
const MULTIPOINTM = lexbase.MULTIPOINTM
const MULTIPOINTZ = lexbase.MULTIPOINTZ
const MULTIPOINTZM = lexbase.MULTIPOINTZM
const MULTIPOLYGON = lexbase.MULTIPOLYGON
const MULTIPOLYGONM = lexbase.MULTIPOLYGONM
const MULTIPOLYGONZ = lexbase.MULTIPOLYGONZ
const MULTIPOLYGONZM = lexbase.MULTIPOLYGONZM
const NAN = lexbase.NAN
const NAME = lexbase.NAME
const NAMES = lexbase.NAMES
const NATURAL = lexbase.NATURAL
const NEVER = lexbase.NEVER
const NEXT = lexbase.NEXT
const NO = lexbase.NO
const NOCANCELQUERY = lexbase.NOCANCELQUERY
const NOCONTROLCHANGEFEED = lexbase.NOCONTROLCHANGEFEED
const NOCONTROLJOB = lexbase.NOCONTROLJOB
const NOCREATEDB = lexbase.NOCREATEDB
const NOCREATELOGIN = lexbase.NOCREATELOGIN
const NOCREATEROLE = lexbase.NOCREATEROLE
const NOLOGIN = lexbase.NOLOGIN
const NOMODIFYCLUSTERSETTING = lexbase.NOMODIFYCLUSTERSETTING
const NO_INDEX_JOIN = lexbase.NO_INDEX_JOIN
const NONE = lexbase.NONE
const NON_VOTERS = lexbase.NON_VOTERS
const NORMAL = lexbase.NORMAL
const NOT = lexbase.NOT
const NOTHING = lexbase.NOTHING
const NOTNULL = lexbase.NOTNULL
const NOVIEWACTIVITY = lexbase.NOVIEWACTIVITY
const NOWAIT = lexbase.NOWAIT
const NULL = lexbase.NULL
const NULLIF = lexbase.NULLIF
const NULLS = lexbase.NULLS
const NUMERIC = lexbase.NUMERIC
const OF = lexbase.OF
const OFF = lexbase.OFF
const OFFSET = lexbase.OFFSET
const OID = lexbase.OID
const OIDS = lexbase.OIDS
const OIDVECTOR = lexbase.OIDVECTOR
const ON = lexbase.ON
const ONLY = lexbase.ONLY
const OPT = lexbase.OPT
const OPTION = lexbase.OPTION
const OPTIONS = lexbase.OPTIONS
const OR = lexbase.OR
const ORDER = lexbase.ORDER
const ORDINALITY = lexbase.ORDINALITY
const OTHERS = lexbase.OTHERS
const OUT = lexbase.OUT
const OUTER = lexbase.OUTER
const OVER = lexbase.OVER
const OVERLAPS = lexbase.OVERLAPS
const OVERLAY = lexbase.OVERLAY
const OWNED = lexbase.OWNED
const OWNER = lexbase.OWNER
const OPERATOR = lexbase.OPERATOR
const PARENT = lexbase.PARENT
const PARTIAL = lexbase.PARTIAL
const PARTITION = lexbase.PARTITION
const PARTITIONS = lexbase.PARTITIONS
const PASSWORD = lexbase.PASSWORD
const PAUSE = lexbase.PAUSE
const PAUSED = lexbase.PAUSED
const PHYSICAL = lexbase.PHYSICAL
const PLACING = lexbase.PLACING
const PLAN = lexbase.PLAN
const PLANS = lexbase.PLANS
const POINT = lexbase.POINT
const POINTM = lexbase.POINTM
const POINTZ = lexbase.POINTZ
const POINTZM = lexbase.POINTZM
const POLYGON = lexbase.POLYGON
const POLYGONM = lexbase.POLYGONM
const POLYGONZ = lexbase.POLYGONZ
const POLYGONZM = lexbase.POLYGONZM
const POSITION = lexbase.POSITION
const PRECEDING = lexbase.PRECEDING
const PRECISION = lexbase.PRECISION
const PREPARE = lexbase.PREPARE
const PRESERVE = lexbase.PRESERVE
const PRIMARY = lexbase.PRIMARY
const PRIORITY = lexbase.PRIORITY
const PRIVILEGES = lexbase.PRIVILEGES
const PROCEDURAL = lexbase.PROCEDURAL
const PUBLIC = lexbase.PUBLIC
const PUBLICATION = lexbase.PUBLICATION
const QUERIES = lexbase.QUERIES
const QUERY = lexbase.QUERY
const RANGE = lexbase.RANGE
const RANGES = lexbase.RANGES
const READ = lexbase.READ
const REAL = lexbase.REAL
const REASSIGN = lexbase.REASSIGN
const RECURSIVE = lexbase.RECURSIVE
const RECURRING = lexbase.RECURRING
const REF = lexbase.REF
const REFERENCES = lexbase.REFERENCES
const REFRESH = lexbase.REFRESH
const REGCLASS = lexbase.REGCLASS
const REGION = lexbase.REGION
const REGIONAL = lexbase.REGIONAL
const REGIONS = lexbase.REGIONS
const REGPROC = lexbase.REGPROC
const REGPROCEDURE = lexbase.REGPROCEDURE
const REGNAMESPACE = lexbase.REGNAMESPACE
const REGTYPE = lexbase.REGTYPE
const REINDEX = lexbase.REINDEX
const REMOVE_PATH = lexbase.REMOVE_PATH
const RENAME = lexbase.RENAME
const REPEATABLE = lexbase.REPEATABLE
const REPLACE = lexbase.REPLACE
const REPLICATION = lexbase.REPLICATION
const RELEASE = lexbase.RELEASE
const RESET = lexbase.RESET
const RESTORE = lexbase.RESTORE
const RESTRICT = lexbase.RESTRICT
const RESUME = lexbase.RESUME
const RETURNING = lexbase.RETURNING
const RETRY = lexbase.RETRY
const REVISION_HISTORY = lexbase.REVISION_HISTORY
const REVOKE = lexbase.REVOKE
const RIGHT = lexbase.RIGHT
const ROLE = lexbase.ROLE
const ROLES = lexbase.ROLES
const ROLLBACK = lexbase.ROLLBACK
const ROLLUP = lexbase.ROLLUP
const ROW = lexbase.ROW
const ROWS = lexbase.ROWS
const RSHIFT = lexbase.RSHIFT
const RULE = lexbase.RULE
const RUNNING = lexbase.RUNNING
const SAVEPOINT = lexbase.SAVEPOINT
const SCANS = lexbase.SCANS
const SCATTER = lexbase.SCATTER
const SCHEDULE = lexbase.SCHEDULE
const SCHEDULES = lexbase.SCHEDULES
const SCHEMA = lexbase.SCHEMA
const SCHEMAS = lexbase.SCHEMAS
const SCRUB = lexbase.SCRUB
const SEARCH = lexbase.SEARCH
const SECOND = lexbase.SECOND
const SELECT = lexbase.SELECT
const SEQUENCE = lexbase.SEQUENCE
const SEQUENCES = lexbase.SEQUENCES
const SERIALIZABLE = lexbase.SERIALIZABLE
const SERVER = lexbase.SERVER
const SESSION = lexbase.SESSION
const SESSIONS = lexbase.SESSIONS
const SESSION_USER = lexbase.SESSION_USER
const SET = lexbase.SET
const SETS = lexbase.SETS
const SETTING = lexbase.SETTING
const SETTINGS = lexbase.SETTINGS
const SHARE = lexbase.SHARE
const SHOW = lexbase.SHOW
const SIMILAR = lexbase.SIMILAR
const SIMPLE = lexbase.SIMPLE
const SKIP = lexbase.SKIP
const SKIP_LOCALITIES_CHECK = lexbase.SKIP_LOCALITIES_CHECK
const SKIP_MISSING_FOREIGN_KEYS = lexbase.SKIP_MISSING_FOREIGN_KEYS
const SKIP_MISSING_SEQUENCES = lexbase.SKIP_MISSING_SEQUENCES
const SKIP_MISSING_SEQUENCE_OWNERS = lexbase.SKIP_MISSING_SEQUENCE_OWNERS
const SKIP_MISSING_VIEWS = lexbase.SKIP_MISSING_VIEWS
const SMALLINT = lexbase.SMALLINT
const SMALLSERIAL = lexbase.SMALLSERIAL
const SNAPSHOT = lexbase.SNAPSHOT
const SOME = lexbase.SOME
const SPLIT = lexbase.SPLIT
const SQL = lexbase.SQL
const START = lexbase.START
const STATISTICS = lexbase.STATISTICS
const STATUS = lexbase.STATUS
const STDIN = lexbase.STDIN
const STREAM = lexbase.STREAM
const STRICT = lexbase.STRICT
const STRING = lexbase.STRING
const STORAGE = lexbase.STORAGE
const STORE = lexbase.STORE
const STORED = lexbase.STORED
const STORING = lexbase.STORING
const SUBSTRING = lexbase.SUBSTRING
const SURVIVE = lexbase.SURVIVE
const SURVIVAL = lexbase.SURVIVAL
const SYMMETRIC = lexbase.SYMMETRIC
const SYNTAX = lexbase.SYNTAX
const SYSTEM = lexbase.SYSTEM
const SQRT = lexbase.SQRT
const SUBSCRIPTION = lexbase.SUBSCRIPTION
const STATEMENTS = lexbase.STATEMENTS
const TABLE = lexbase.TABLE
const TABLES = lexbase.TABLES
const TABLESPACE = lexbase.TABLESPACE
const TEMP = lexbase.TEMP
const TEMPLATE = lexbase.TEMPLATE
const TEMPORARY = lexbase.TEMPORARY
const TENANT = lexbase.TENANT
const TESTING_RELOCATE = lexbase.TESTING_RELOCATE
const EXPERIMENTAL_RELOCATE = lexbase.EXPERIMENTAL_RELOCATE
const TEXT = lexbase.TEXT
const THEN = lexbase.THEN
const TIES = lexbase.TIES
const TIME = lexbase.TIME
const TIMETZ = lexbase.TIMETZ
const TIMESTAMP = lexbase.TIMESTAMP
const TIMESTAMPTZ = lexbase.TIMESTAMPTZ
const TO = lexbase.TO
const THROTTLING = lexbase.THROTTLING
const TRAILING = lexbase.TRAILING
const TRACE = lexbase.TRACE
const TRANSACTION = lexbase.TRANSACTION
const TRANSACTIONS = lexbase.TRANSACTIONS
const TREAT = lexbase.TREAT
const TRIGGER = lexbase.TRIGGER
const TRIM = lexbase.TRIM
const TRUE = lexbase.TRUE
const TRUNCATE = lexbase.TRUNCATE
const TRUSTED = lexbase.TRUSTED
const TYPE = lexbase.TYPE
const TYPES = lexbase.TYPES
const TRACING = lexbase.TRACING
const UNBOUNDED = lexbase.UNBOUNDED
const UNCOMMITTED = lexbase.UNCOMMITTED
const UNION = lexbase.UNION
const UNIQUE = lexbase.UNIQUE
const UNKNOWN = lexbase.UNKNOWN
const UNLOGGED = lexbase.UNLOGGED
const UNSPLIT = lexbase.UNSPLIT
const UPDATE = lexbase.UPDATE
const UPSERT = lexbase.UPSERT
const UNTIL = lexbase.UNTIL
const USE = lexbase.USE
const USER = lexbase.USER
const USERS = lexbase.USERS
const USING = lexbase.USING
const UUID = lexbase.UUID
const VALID = lexbase.VALID
const VALIDATE = lexbase.VALIDATE
const VALUE = lexbase.VALUE
const VALUES = lexbase.VALUES
const VARBIT = lexbase.VARBIT
const VARCHAR = lexbase.VARCHAR
const VARIADIC = lexbase.VARIADIC
const VIEW = lexbase.VIEW
const VARYING = lexbase.VARYING
const VIEWACTIVITY = lexbase.VIEWACTIVITY
const VIRTUAL = lexbase.VIRTUAL
const VISIBLE = lexbase.VISIBLE
const VOTERS = lexbase.VOTERS
const WHEN = lexbase.WHEN
const WHERE = lexbase.WHERE
const WINDOW = lexbase.WINDOW
const WITH = lexbase.WITH
const WITHIN = lexbase.WITHIN
const WITHOUT = lexbase.WITHOUT
const WORK = lexbase.WORK
const WRITE = lexbase.WRITE
const YEAR = lexbase.YEAR
const ZONE = lexbase.ZONE
const NOT_LA = lexbase.NOT_LA
const NULLS_LA = lexbase.NULLS_LA
const WITH_LA = lexbase.WITH_LA
const AS_LA = lexbase.AS_LA
const GENERATED_ALWAYS = lexbase.GENERATED_ALWAYS
const CONTAINED_BY = lexbase.CONTAINED_BY
const POSTFIXOP = lexbase.POSTFIXOP
const UMINUS = lexbase.UMINUS
const HELPTOKEN = lexbase.HELPTOKEN

var sqlToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENT",
	"SCONST",
	"BCONST",
	"BITCONST",
	"ICONST",
	"FCONST",
	"PLACEHOLDER",
	"TYPECAST",
	"TYPEANNOTATE",
	"DOT_DOT",
	"LESS_EQUALS",
	"GREATER_EQUALS",
	"NOT_EQUALS",
	"NOT_REGMATCH",
	"REGIMATCH",
	"NOT_REGIMATCH",
	"ERROR",
	"ABORT",
	"ACCESS",
	"ACTION",
	"ADD",
	"ADMIN",
	"AFTER",
	"AGGREGATE",
	"ALL",
	"ALTER",
	"ALWAYS",
	"ANALYSE",
	"ANALYZE",
	"AND",
	"AND_AND",
	"ANY",
	"ANNOTATE_TYPE",
	"ARRAY",
	"AS",
	"ASC",
	"ASYMMETRIC",
	"AT",
	"ATTRIBUTE",
	"AUTHORIZATION",
	"AUTOMATIC",
	"AVAILABILITY",
	"BACKUP",
	"BACKUPS",
	"BEFORE",
	"BEGIN",
	"BETWEEN",
	"BIGINT",
	"BIGSERIAL",
	"BINARY",
	"BIT",
	"BUCKET_COUNT",
	"BOOLEAN",
	"BOTH",
	"BOX2D",
	"BUNDLE",
	"BY",
	"CACHE",
	"CANCEL",
	"CANCELQUERY",
	"CASCADE",
	"CASE",
	"CAST",
	"CBRT",
	"CHANGEFEED",
	"CHAR",
	"CHARACTER",
	"CHARACTERISTICS",
	"CHECK",
	"CLOSE",
	"CLUSTER",
	"COALESCE",
	"COLLATE",
	"COLLATION",
	"COLUMN",
	"COLUMNS",
	"COMMENT",
	"COMMENTS",
	"COMMIT",
	"COMMITTED",
	"COMPACT",
	"COMPLETE",
	"CONCAT",
	"CONCURRENTLY",
	"CONFIGURATION",
	"CONFIGURATIONS",
	"CONFIGURE",
	"CONFLICT",
	"CONNECTION",
	"CONSTRAINT",
	"CONSTRAINTS",
	"CONTAINS",
	"CONTROLCHANGEFEED",
	"CONTROLJOB",
	"CONVERSION",
	"CONVERT",
	"COPY",
	"COVERING",
	"CREATE",
	"CREATEDB",
	"CREATELOGIN",
	"CREATEROLE",
	"CROSS",
	"CSV",
	"CUBE",
	"CURRENT",
	"CURRENT_CATALOG",
	"CURRENT_DATE",
	"CURRENT_SCHEMA",
	"CURRENT_ROLE",
	"CURRENT_TIME",
	"CURRENT_TIMESTAMP",
	"CURRENT_USER",
	"CURSOR",
	"CYCLE",
	"DATA",
	"DATABASE",
	"DATABASES",
	"DATE",
	"DAY",
	"DEC",
	"DECIMAL",
	"DEFAULT",
	"DEFAULTS",
	"DEALLOCATE",
	"DECLARE",
	"DEFERRABLE",
	"DEFERRED",
	"DELETE",
	"DELIMITER",
	"DESC",
	"DESTINATION",
	"DETACHED",
	"DISCARD",
	"DISTINCT",
	"DO",
	"DOMAIN",
	"DOUBLE",
	"DROP",
	"ELSE",
	"ENCODING",
	"ENCRYPTION_PASSPHRASE",
	"END",
	"ENUM",
	"ENUMS",
	"ESCAPE",
	"EXCEPT",
	"EXCLUDE",
	"EXCLUDING",
	"EXISTS",
	"EXECUTE",
	"EXECUTION",
	"EXPERIMENTAL",
	"EXPERIMENTAL_FINGERPRINTS",
	"EXPERIMENTAL_REPLICA",
	"EXPERIMENTAL_AUDIT",
	"EXPIRATION",
	"EXPLAIN",
	"EXPORT",
	"EXTENSION",
	"EXTRACT",
	"EXTRACT_DURATION",
	"FAILURE",
	"FALSE",
	"FAMILY",
	"FETCH",
	"FETCHVAL",
	"FETCHTEXT",
	"FETCHVAL_PATH",
	"FETCHTEXT_PATH",
	"FILES",
	"FILTER",
	"FIRST",
	"FLOAT",
	"FLOAT4",
	"FLOAT8",
	"FLOORDIV",
	"FOLLOWING",
	"FOR",
	"FORCE",
	"FORCE_INDEX",
	"FOREIGN",
	"FROM",
	"FULL",
	"FUNCTION",
	"GENERATED",
	"GEOGRAPHY",
	"GEOMETRY",
	"GEOMETRYM",
	"GEOMETRYZ",
	"GEOMETRYZM",
	"GEOMETRYCOLLECTION",
	"GEOMETRYCOLLECTIONM",
	"GEOMETRYCOLLECTIONZ",
	"GEOMETRYCOLLECTIONZM",
	"GLOBAL",
	"GOAL",
	"GRANT",
	"GRANTS",
	"GREATEST",
	"GROUP",
	"GROUPING",
	"GROUPS",
	"HAVING",
	"HASH",
	"HIGH",
	"HISTOGRAM",
	"HOUR",
	"IDENTITY",
	"IF",
	"IFERROR",
	"IFNULL",
	"IGNORE_FOREIGN_KEYS",
	"ILIKE",
	"IMMEDIATE",
	"IMPORT",
	"IN",
	"INCLUDE",
	"INCLUDE_DEPRECATED_INTERLEAVES",
	"INCLUDING",
	"INCREMENT",
	"INCREMENTAL",
	"INET",
	"INET_CONTAINED_BY_OR_EQUALS",
	"INET_CONTAINS_OR_EQUALS",
	"INDEX",
	"INDEXES",
	"INHERITS",
	"INJECT",
	"INTERLEAVE",
	"INITIALLY",
	"INNER",
	"INSERT",
	"INT",
	"INTEGER",
	"INTERSECT",
	"INTERVAL",
	"INTO",
	"INTO_DB",
	"INVERTED",
	"IS",
	"ISERROR",
	"ISNULL",
	"ISOLATION",
	"JOB",
	"JOBS",
	"JOIN",
	"JSON",
	"JSONB",
	"JSON_SOME_EXISTS",
	"JSON_ALL_EXISTS",
	"KEY",
	"KEYS",
	"KMS",
	"KV",
	"LANGUAGE",
	"LAST",
	"LATERAL",
	"LATEST",
	"LC_CTYPE",
	"LC_COLLATE",
	"LEADING",
	"LEASE",
	"LEAST",
	"LEFT",
	"LESS",
	"LEVEL",
	"LIKE",
	"LIMIT",
	"LINESTRING",
	"LINESTRINGM",
	"LINESTRINGZ",
	"LINESTRINGZM",
	"LIST",
	"LOCAL",
	"LOCALITY",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"LOCKED",
	"LOGIN",
	"LOOKUP",
	"LOW",
	"LSHIFT",
	"MATCH",
	"MATERIALIZED",
	"MERGE",
	"MINVALUE",
	"MAXVALUE",
	"METHOD",
	"MINUTE",
	"MODIFYCLUSTERSETTING",
	"MONTH",
	"MULTILINESTRING",
	"MULTILINESTRINGM",
	"MULTILINESTRINGZ",
	"MULTILINESTRINGZM",
	"MULTIPOINT",
	"MULTIPOINTM",
	"MULTIPOINTZ",
	"MULTIPOINTZM",
	"MULTIPOLYGON",
	"MULTIPOLYGONM",
	"MULTIPOLYGONZ",
	"MULTIPOLYGONZM",
	"NAN",
	"NAME",
	"NAMES",
	"NATURAL",
	"NEVER",
	"NEXT",
	"NO",
	"NOCANCELQUERY",
	"NOCONTROLCHANGEFEED",
	"NOCONTROLJOB",
	"NOCREATEDB",
	"NOCREATELOGIN",
	"NOCREATEROLE",
	"NOLOGIN",
	"NOMODIFYCLUSTERSETTING",
	"NO_INDEX_JOIN",
	"NONE",
	"NON_VOTERS",
	"NORMAL",
	"NOT",
	"NOTHING",
	"NOTNULL",
	"NOVIEWACTIVITY",
	"NOWAIT",
	"NULL",
	"NULLIF",
	"NULLS",
	"NUMERIC",
	"OF",
	"OFF",
	"OFFSET",
	"OID",
	"OIDS",
	"OIDVECTOR",
	"ON",
	"ONLY",
	"OPT",
	"OPTION",
	"OPTIONS",
	"OR",
	"ORDER",
	"ORDINALITY",
	"OTHERS",
	"OUT",
	"OUTER",
	"OVER",
	"OVERLAPS",
	"OVERLAY",
	"OWNED",
	"OWNER",
	"OPERATOR",
	"PARENT",
	"PARTIAL",
	"PARTITION",
	"PARTITIONS",
	"PASSWORD",
	"PAUSE",
	"PAUSED",
	"PHYSICAL",
	"PLACING",
	"PLAN",
	"PLANS",
	"POINT",
	"POINTM",
	"POINTZ",
	"POINTZM",
	"POLYGON",
	"POLYGONM",
	"POLYGONZ",
	"POLYGONZM",
	"POSITION",
	"PRECEDING",
	"PRECISION",
	"PREPARE",
	"PRESERVE",
	"PRIMARY",
	"PRIORITY",
	"PRIVILEGES",
	"PROCEDURAL",
	"PUBLIC",
	"PUBLICATION",
	"QUERIES",
	"QUERY",
	"RANGE",
	"RANGES",
	"READ",
	"REAL",
	"REASSIGN",
	"RECURSIVE",
	"RECURRING",
	"REF",
	"REFERENCES",
	"REFRESH",
	"REGCLASS",
	"REGION",
	"REGIONAL",
	"REGIONS",
	"REGPROC",
	"REGPROCEDURE",
	"REGNAMESPACE",
	"REGTYPE",
	"REINDEX",
	"REMOVE_PATH",
	"RENAME",
	"REPEATABLE",
	"REPLACE",
	"REPLICATION",
	"RELEASE",
	"RESET",
	"RESTORE",
	"RESTRICT",
	"RESUME",
	"RETURNING",
	"RETRY",
	"REVISION_HISTORY",
	"REVOKE",
	"RIGHT",
	"ROLE",
	"ROLES",
	"ROLLBACK",
	"ROLLUP",
	"ROW",
	"ROWS",
	"RSHIFT",
	"RULE",
	"RUNNING",
	"SAVEPOINT",
	"SCANS",
	"SCATTER",
	"SCHEDULE",
	"SCHEDULES",
	"SCHEMA",
	"SCHEMAS",
	"SCRUB",
	"SEARCH",
	"SECOND",
	"SELECT",
	"SEQUENCE",
	"SEQUENCES",
	"SERIALIZABLE",
	"SERVER",
	"SESSION",
	"SESSIONS",
	"SESSION_USER",
	"SET",
	"SETS",
	"SETTING",
	"SETTINGS",
	"SHARE",
	"SHOW",
	"SIMILAR",
	"SIMPLE",
	"SKIP",
	"SKIP_LOCALITIES_CHECK",
	"SKIP_MISSING_FOREIGN_KEYS",
	"SKIP_MISSING_SEQUENCES",
	"SKIP_MISSING_SEQUENCE_OWNERS",
	"SKIP_MISSING_VIEWS",
	"SMALLINT",
	"SMALLSERIAL",
	"SNAPSHOT",
	"SOME",
	"SPLIT",
	"SQL",
	"START",
	"STATISTICS",
	"STATUS",
	"STDIN",
	"STREAM",
	"STRICT",
	"STRING",
	"STORAGE",
	"STORE",
	"STORED",
	"STORING",
	"SUBSTRING",
	"SURVIVE",
	"SURVIVAL",
	"SYMMETRIC",
	"SYNTAX",
	"SYSTEM",
	"SQRT",
	"SUBSCRIPTION",
	"STATEMENTS",
	"TABLE",
	"TABLES",
	"TABLESPACE",
	"TEMP",
	"TEMPLATE",
	"TEMPORARY",
	"TENANT",
	"TESTING_RELOCATE",
	"EXPERIMENTAL_RELOCATE",
	"TEXT",
	"THEN",
	"TIES",
	"TIME",
	"TIMETZ",
	"TIMESTAMP",
	"TIMESTAMPTZ",
	"TO",
	"THROTTLING",
	"TRAILING",
	"TRACE",
	"TRANSACTION",
	"TRANSACTIONS",
	"TREAT",
	"TRIGGER",
	"TRIM",
	"TRUE",
	"TRUNCATE",
	"TRUSTED",
	"TYPE",
	"TYPES",
	"TRACING",
	"UNBOUNDED",
	"UNCOMMITTED",
	"UNION",
	"UNIQUE",
	"UNKNOWN",
	"UNLOGGED",
	"UNSPLIT",
	"UPDATE",
	"UPSERT",
	"UNTIL",
	"USE",
	"USER",
	"USERS",
	"USING",
	"UUID",
	"VALID",
	"VALIDATE",
	"VALUE",
	"VALUES",
	"VARBIT",
	"VARCHAR",
	"VARIADIC",
	"VIEW",
	"VARYING",
	"VIEWACTIVITY",
	"VIRTUAL",
	"VISIBLE",
	"VOTERS",
	"WHEN",
	"WHERE",
	"WINDOW",
	"WITH",
	"WITHIN",
	"WITHOUT",
	"WORK",
	"WRITE",
	"YEAR",
	"ZONE",
	"NOT_LA",
	"NULLS_LA",
	"WITH_LA",
	"AS_LA",
	"GENERATED_ALWAYS",
	"'<'",
	"'>'",
	"'='",
	"'~'",
	"CONTAINED_BY",
	"'?'",
	"POSTFIXOP",
	"'|'",
	"'#'",
	"'&'",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"'%'",
	"'^'",
	"UMINUS",
	"'['",
	"']'",
	"'('",
	"')'",
	"'.'",
	"HELPTOKEN",
	"'@'",
	"','",
	"'{'",
	"'}'",
	"':'",
}

var sqlStatenames = [...]string{}

const sqlEofCode = 1
const sqlErrCode = 2
const sqlInitialStackSize = 16

//line sql-gen.y:13183

//line yacctab:1
var sqlExca = [...]int{
	-1, 0,
	1, 35,
	-2, 1504,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 57,
	259, 399,
	-2, 0,
	-1, 74,
	241, 236,
	508, 236,
	-2, 0,
	-1, 87,
	229, 1264,
	243, 1264,
	259, 395,
	386, 395,
	396, 1034,
	432, 395,
	445, 1034,
	492, 1034,
	519, 395,
	545, 1034,
	-2, 0,
	-1, 93,
	132, 1504,
	236, 1504,
	530, 1504,
	531, 1504,
	-2, 0,
	-1, 109,
	150, 1475,
	169, 1475,
	182, 1475,
	239, 1475,
	272, 1475,
	338, 1475,
	348, 1475,
	525, 1475,
	-2, 1446,
	-1, 148,
	158, 891,
	258, 891,
	389, 853,
	450, 853,
	491, 853,
	511, 891,
	513, 853,
	-2, 0,
	-1, 151,
	4, 1506,
	21, 1506,
	22, 1506,
	23, 1506,
	24, 1506,
	25, 1506,
	26, 1506,
	27, 1506,
	29, 1506,
	30, 1506,
	36, 1506,
	41, 1506,
	42, 1506,
	44, 1506,
	45, 1506,
	46, 1506,
	47, 1506,
	48, 1506,
	49, 1506,
	50, 1506,
	51, 1506,
	53, 1506,
	54, 1506,
	55, 1506,
	56, 1506,
	58, 1506,
	59, 1506,
	60, 1506,
	61, 1506,
	62, 1506,
	63, 1506,
	64, 1506,
	68, 1506,
	69, 1506,
	70, 1506,
	71, 1506,
	73, 1506,
	74, 1506,
	75, 1506,
	79, 1506,
	80, 1506,
	81, 1506,
	82, 1506,
	83, 1506,
	84, 1506,
	85, 1506,
	88, 1506,
	89, 1506,
	90, 1506,
	91, 1506,
	92, 1506,
	94, 1506,
	96, 1506,
	97, 1506,
	98, 1506,
	99, 1506,
	100, 1506,
	101, 1506,
	103, 1506,
	104, 1506,
	105, 1506,
	107, 1506,
	108, 1506,
	109, 1506,
	117, 1506,
	118, 1506,
	119, 1506,
	120, 1506,
	121, 1506,
	123, 1506,
	124, 1506,
	125, 1506,
	127, 1506,
	128, 1506,
	129, 1506,
	131, 1506,
	132, 1506,
	133, 1506,
	135, 1506,
	136, 1506,
	137, 1506,
	140, 1506,
	141, 1506,
	142, 1506,
	144, 1506,
	145, 1506,
	147, 1506,
	148, 1506,
	149, 1506,
	151, 1506,
	152, 1506,
	153, 1506,
	154, 1506,
	155, 1506,
	156, 1506,
	157, 1506,
	158, 1506,
	159, 1506,
	160, 1506,
	161, 1506,
	162, 1506,
	163, 1506,
	164, 1506,
	165, 1506,
	166, 1506,
	168, 1506,
	174, 1506,
	175, 1506,
	176, 1506,
	177, 1506,
	181, 1506,
	183, 1506,
	184, 1506,
	188, 1506,
	189, 1506,
	190, 1506,
	191, 1506,
	192, 1506,
	193, 1506,
	194, 1506,
	195, 1506,
	196, 1506,
	197, 1506,
	198, 1506,
	199, 1506,
	200, 1506,
	202, 1506,
	203, 1506,
	205, 1506,
	206, 1506,
	208, 1506,
	209, 1506,
	210, 1506,
	211, 1506,
	212, 1506,
	213, 1506,
	214, 1506,
	215, 1506,
	216, 1506,
	218, 1506,
	219, 1506,
	221, 1506,
	222, 1506,
	223, 1506,
	224, 1506,
	225, 1506,
	229, 1506,
	230, 1506,
	231, 1506,
	232, 1506,
	233, 1506,
	236, 1506,
	237, 1506,
	238, 1506,
	240, 1506,
	242, 1506,
	243, 1506,
	245, 1506,
	247, 1506,
	248, 1506,
	249, 1506,
	251, 1506,
	255, 1506,
	256, 1506,
	257, 1506,
	258, 1506,
	259, 1506,
	260, 1506,
	262, 1506,
	263, 1506,
	264, 1506,
	266, 1506,
	267, 1506,
	269, 1506,
	270, 1506,
	273, 1506,
	277, 1506,
	278, 1506,
	279, 1506,
	282, 1506,
	283, 1506,
	284, 1506,
	285, 1506,
	287, 1506,
	288, 1506,
	289, 1506,
	290, 1506,
	291, 1506,
	292, 1506,
	293, 1506,
	294, 1506,
	295, 1506,
	296, 1506,
	297, 1506,
	298, 1506,
	299, 1506,
	300, 1506,
	301, 1506,
	302, 1506,
	303, 1506,
	304, 1506,
	305, 1506,
	306, 1506,
	307, 1506,
	308, 1506,
	310, 1506,
	312, 1506,
	313, 1506,
	314, 1506,
	315, 1506,
	316, 1506,
	317, 1506,
	318, 1506,
	319, 1506,
	320, 1506,
	321, 1506,
	322, 1506,
	323, 1506,
	325, 1506,
	326, 1506,
	328, 1506,
	330, 1506,
	331, 1506,
	333, 1506,
	334, 1506,
	335, 1506,
	336, 1506,
	337, 1506,
	340, 1506,
	343, 1506,
	344, 1506,
	345, 1506,
	346, 1506,
	349, 1506,
	350, 1506,
	351, 1506,
	353, 1506,
	355, 1506,
	356, 1506,
	357, 1506,
	358, 1506,
	359, 1506,
	360, 1506,
	361, 1506,
	362, 1506,
	363, 1506,
	364, 1506,
	365, 1506,
	366, 1506,
	368, 1506,
	369, 1506,
	370, 1506,
	371, 1506,
	372, 1506,
	373, 1506,
	374, 1506,
	375, 1506,
	376, 1506,
	377, 1506,
	378, 1506,
	379, 1506,
	380, 1506,
	381, 1506,
	382, 1506,
	384, 1506,
	385, 1506,
	387, 1506,
	388, 1506,
	389, 1506,
	390, 1506,
	391, 1506,
	392, 1506,
	393, 1506,
	394, 1506,
	395, 1506,
	396, 1506,
	397, 1506,
	398, 1506,
	400, 1506,
	402, 1506,
	403, 1506,
	404, 1506,
	409, 1506,
	411, 1506,
	412, 1506,
	413, 1506,
	414, 1506,
	415, 1506,
	416, 1506,
	417, 1506,
	418, 1506,
	419, 1506,
	421, 1506,
	422, 1506,
	423, 1506,
	425, 1506,
	426, 1506,
	427, 1506,
	428, 1506,
	429, 1506,
	430, 1506,
	432, 1506,
	433, 1506,
	434, 1506,
	435, 1506,
	436, 1506,
	437, 1506,
	438, 1506,
	439, 1506,
	440, 1506,
	441, 1506,
	442, 1506,
	443, 1506,
	445, 1506,
	446, 1506,
	447, 1506,
	448, 1506,
	449, 1506,
	450, 1506,
	452, 1506,
	453, 1506,
	454, 1506,
	455, 1506,
	456, 1506,
	457, 1506,
	459, 1506,
	460, 1506,
	461, 1506,
	462, 1506,
	463, 1506,
	464, 1506,
	465, 1506,
	466, 1506,
	468, 1506,
	470, 1506,
	471, 1506,
	472, 1506,
	473, 1506,
	474, 1506,
	475, 1506,
	476, 1506,
	477, 1506,
	478, 1506,
	479, 1506,
	480, 1506,
	481, 1506,
	482, 1506,
	483, 1506,
	484, 1506,
	485, 1506,
	487, 1506,
	488, 1506,
	490, 1506,
	491, 1506,
	493, 1506,
	494, 1506,
	495, 1506,
	496, 1506,
	497, 1506,
	498, 1506,
	499, 1506,
	500, 1506,
	501, 1506,
	503, 1506,
	504, 1506,
	505, 1506,
	506, 1506,
	507, 1506,
	509, 1506,
	511, 1506,
	512, 1506,
	513, 1506,
	514, 1506,
	515, 1506,
	516, 1506,
	518, 1506,
	519, 1506,
	520, 1506,
	521, 1506,
	523, 1506,
	524, 1506,
	527, 1506,
	528, 1506,
	529, 1506,
	530, 1506,
	531, 1506,
	532, 1506,
	533, 1506,
	535, 1506,
	538, 1506,
	539, 1506,
	540, 1506,
	541, 1506,
	542, 1506,
	543, 1506,
	545, 1506,
	546, 1506,
	547, 1506,
	548, 1506,
	550, 1506,
	555, 1506,
	556, 1506,
	557, 1506,
	558, 1506,
	559, 1506,
	560, 1506,
	-2, 0,
	-1, 152,
	1, 1361,
	130, 1361,
	247, 1361,
	327, 1361,
	384, 1361,
	393, 1361,
	564, 1361,
	588, 1361,
	-2, 0,
	-1, 154,
	1, 1361,
	588, 1361,
	-2, 0,
	-1, 155,
	1, 1361,
	588, 1361,
	-2, 0,
	-1, 156,
	1, 1361,
	508, 1361,
	588, 1361,
	-2, 0,
	-1, 184,
	150, 1474,
	169, 1474,
	182, 1474,
	239, 1474,
	272, 1474,
	338, 1474,
	348, 1474,
	525, 1474,
	-2, 1449,
	-1, 230,
	4, 1513,
	5, 1513,
	6, 1513,
	7, 1513,
	8, 1513,
	9, 1513,
	10, 1513,
	21, 1513,
	22, 1513,
	23, 1513,
	24, 1513,
	25, 1513,
	26, 1513,
	27, 1513,
	29, 1513,
	30, 1513,
	36, 1513,
	37, 1513,
	41, 1513,
	42, 1513,
	43, 1513,
	44, 1513,
	45, 1513,
	46, 1513,
	47, 1513,
	48, 1513,
	49, 1513,
	50, 1513,
	51, 1513,
	53, 1513,
	54, 1513,
	55, 1513,
	56, 1513,
	58, 1513,
	59, 1513,
	60, 1513,
	61, 1513,
	62, 1513,
	63, 1513,
	64, 1513,
	65, 1513,
	66, 1513,
	67, 1513,
	68, 1513,
	69, 1513,
	70, 1513,
	71, 1513,
	73, 1513,
	74, 1513,
	75, 1513,
	77, 1513,
	79, 1513,
	80, 1513,
	81, 1513,
	82, 1513,
	83, 1513,
	84, 1513,
	85, 1513,
	88, 1513,
	89, 1513,
	90, 1513,
	91, 1513,
	92, 1513,
	94, 1513,
	96, 1513,
	97, 1513,
	98, 1513,
	99, 1513,
	100, 1513,
	101, 1513,
	103, 1513,
	104, 1513,
	105, 1513,
	106, 1513,
	107, 1513,
	108, 1513,
	109, 1513,
	110, 1513,
	111, 1513,
	112, 1513,
	113, 1513,
	114, 1513,
	115, 1513,
	116, 1513,
	117, 1513,
	118, 1513,
	119, 1513,
	120, 1513,
	121, 1513,
	122, 1513,
	123, 1513,
	124, 1513,
	125, 1513,
	126, 1513,
	127, 1513,
	128, 1513,
	129, 1513,
	131, 1513,
	132, 1513,
	133, 1513,
	135, 1513,
	136, 1513,
	137, 1513,
	140, 1513,
	141, 1513,
	142, 1513,
	144, 1513,
	145, 1513,
	147, 1513,
	148, 1513,
	149, 1513,
	151, 1513,
	152, 1513,
	153, 1513,
	154, 1513,
	155, 1513,
	156, 1513,
	157, 1513,
	158, 1513,
	159, 1513,
	160, 1513,
	161, 1513,
	162, 1513,
	163, 1513,
	164, 1513,
	165, 1513,
	166, 1513,
	167, 1513,
	168, 1513,
	174, 1513,
	175, 1513,
	176, 1513,
	177, 1513,
	181, 1513,
	183, 1513,
	184, 1513,
	187, 1513,
	188, 1513,
	189, 1513,
	190, 1513,
	191, 1513,
	192, 1513,
	193, 1513,
	194, 1513,
	195, 1513,
	196, 1513,
	197, 1513,
	198, 1513,
	199, 1513,
	200, 1513,
	202, 1513,
	203, 1513,
	205, 1513,
	206, 1513,
	208, 1513,
	209, 1513,
	210, 1513,
	211, 1513,
	212, 1513,
	213, 1513,
	214, 1513,
	215, 1513,
	216, 1513,
	217, 1513,
	218, 1513,
	219, 1513,
	221, 1513,
	222, 1513,
	223, 1513,
	224, 1513,
	225, 1513,
	229, 1513,
	230, 1513,
	231, 1513,
	232, 1513,
	233, 1513,
	235, 1513,
	236, 1513,
	237, 1513,
	238, 1513,
	240, 1513,
	242, 1513,
	243, 1513,
	244, 1513,
	245, 1513,
	246, 1513,
	247, 1513,
	248, 1513,
	249, 1513,
	250, 1513,
	251, 1513,
	255, 1513,
	256, 1513,
	257, 1513,
	258, 1513,
	259, 1513,
	260, 1513,
	262, 1513,
	263, 1513,
	264, 1513,
	266, 1513,
	267, 1513,
	268, 1513,
	269, 1513,
	270, 1513,
	271, 1513,
	273, 1513,
	277, 1513,
	278, 1513,
	279, 1513,
	280, 1513,
	281, 1513,
	282, 1513,
	283, 1513,
	284, 1513,
	285, 1513,
	287, 1513,
	288, 1513,
	289, 1513,
	290, 1513,
	291, 1513,
	292, 1513,
	293, 1513,
	294, 1513,
	295, 1513,
	296, 1513,
	297, 1513,
	298, 1513,
	299, 1513,
	300, 1513,
	301, 1513,
	302, 1513,
	303, 1513,
	304, 1513,
	305, 1513,
	306, 1513,
	307, 1513,
	308, 1513,
	310, 1513,
	311, 1513,
	312, 1513,
	313, 1513,
	314, 1513,
	315, 1513,
	316, 1513,
	317, 1513,
	318, 1513,
	319, 1513,
	320, 1513,
	321, 1513,
	322, 1513,
	323, 1513,
	324, 1513,
	325, 1513,
	326, 1513,
	327, 1513,
	328, 1513,
	329, 1513,
	330, 1513,
	331, 1513,
	332, 1513,
	333, 1513,
	334, 1513,
	335, 1513,
	336, 1513,
	337, 1513,
	340, 1513,
	344, 1513,
	345, 1513,
	346, 1513,
	349, 1513,
	350, 1513,
	351, 1513,
	352, 1513,
	353, 1513,
	354, 1513,
	355, 1513,
	356, 1513,
	357, 1513,
	358, 1513,
	359, 1513,
	360, 1513,
	361, 1513,
	362, 1513,
	363, 1513,
	364, 1513,
	365, 1513,
	366, 1513,
	368, 1513,
	369, 1513,
	370, 1513,
	371, 1513,
	372, 1513,
	373, 1513,
	374, 1513,
	375, 1513,
	376, 1513,
	377, 1513,
	378, 1513,
	379, 1513,
	380, 1513,
	381, 1513,
	382, 1513,
	384, 1513,
	385, 1513,
	387, 1513,
	388, 1513,
	389, 1513,
	390, 1513,
	391, 1513,
	392, 1513,
	393, 1513,
	394, 1513,
	395, 1513,
	396, 1513,
	397, 1513,
	398, 1513,
	400, 1513,
	402, 1513,
	403, 1513,
	404, 1513,
	409, 1513,
	411, 1513,
	412, 1513,
	413, 1513,
	414, 1513,
	415, 1513,
	416, 1513,
	417, 1513,
	418, 1513,
	419, 1513,
	421, 1513,
	422, 1513,
	423, 1513,
	424, 1513,
	425, 1513,
	426, 1513,
	427, 1513,
	428, 1513,
	429, 1513,
	430, 1513,
	432, 1513,
	433, 1513,
	434, 1513,
	435, 1513,
	436, 1513,
	437, 1513,
	438, 1513,
	439, 1513,
	440, 1513,
	441, 1513,
	442, 1513,
	443, 1513,
	445, 1513,
	446, 1513,
	447, 1513,
	448, 1513,
	449, 1513,
	450, 1513,
	451, 1513,
	452, 1513,
	453, 1513,
	454, 1513,
	455, 1513,
	456, 1513,
	457, 1513,
	458, 1513,
	459, 1513,
	460, 1513,
	461, 1513,
	462, 1513,
	463, 1513,
	464, 1513,
	465, 1513,
	466, 1513,
	468, 1513,
	470, 1513,
	471, 1513,
	472, 1513,
	473, 1513,
	474, 1513,
	475, 1513,
	476, 1513,
	477, 1513,
	478, 1513,
	479, 1513,
	480, 1513,
	481, 1513,
	482, 1513,
	483, 1513,
	484, 1513,
	485, 1513,
	487, 1513,
	488, 1513,
	489, 1513,
	490, 1513,
	491, 1513,
	493, 1513,
	494, 1513,
	495, 1513,
	496, 1513,
	497, 1513,
	498, 1513,
	499, 1513,
	500, 1513,
	501, 1513,
	503, 1513,
	504, 1513,
	505, 1513,
	506, 1513,
	507, 1513,
	509, 1513,
	511, 1513,
	512, 1513,
	513, 1513,
	514, 1513,
	515, 1513,
	516, 1513,
	517, 1513,
	518, 1513,
	519, 1513,
	520, 1513,
	521, 1513,
	523, 1513,
	524, 1513,
	526, 1513,
	527, 1513,
	528, 1513,
	529, 1513,
	530, 1513,
	531, 1513,
	532, 1513,
	533, 1513,
	534, 1513,
	535, 1513,
	538, 1513,
	539, 1513,
	540, 1513,
	541, 1513,
	542, 1513,
	543, 1513,
	545, 1513,
	546, 1513,
	547, 1513,
	548, 1513,
	550, 1513,
	555, 1513,
	556, 1513,
	557, 1513,
	558, 1513,
	559, 1513,
	560, 1513,
	561, 1513,
	569, 1513,
	576, 1513,
	577, 1513,
	578, 1513,
	585, 1513,
	589, 1513,
	-2, 0,
	-1, 729,
	4, 1262,
	21, 1262,
	22, 1262,
	23, 1262,
	24, 1262,
	25, 1262,
	26, 1262,
	27, 1262,
	29, 1262,
	30, 1262,
	36, 1262,
	41, 1262,
	42, 1262,
	44, 1262,
	45, 1262,
	46, 1262,
	47, 1262,
	48, 1262,
	49, 1262,
	50, 1262,
	51, 1262,
	53, 1262,
	54, 1262,
	55, 1262,
	56, 1262,
	58, 1262,
	59, 1262,
	60, 1262,
	61, 1262,
	62, 1262,
	63, 1262,
	64, 1262,
	68, 1262,
	69, 1262,
	70, 1262,
	71, 1262,
	73, 1262,
	74, 1262,
	75, 1262,
	79, 1262,
	80, 1262,
	81, 1262,
	82, 1262,
	83, 1262,
	84, 1262,
	85, 1262,
	88, 1262,
	89, 1262,
	90, 1262,
	91, 1262,
	92, 1262,
	94, 1262,
	96, 1262,
	97, 1262,
	98, 1262,
	99, 1262,
	100, 1262,
	101, 1262,
	103, 1262,
	104, 1262,
	105, 1262,
	107, 1262,
	108, 1262,
	109, 1262,
	117, 1262,
	118, 1262,
	119, 1262,
	120, 1262,
	121, 1262,
	123, 1262,
	124, 1262,
	125, 1262,
	127, 1262,
	128, 1262,
	129, 1262,
	131, 1262,
	132, 1262,
	133, 1262,
	135, 1262,
	136, 1262,
	137, 1262,
	140, 1262,
	141, 1262,
	142, 1262,
	144, 1262,
	145, 1262,
	147, 1262,
	148, 1262,
	149, 1262,
	151, 1262,
	152, 1262,
	153, 1262,
	154, 1262,
	155, 1262,
	156, 1262,
	157, 1262,
	158, 1262,
	159, 1262,
	160, 1262,
	161, 1262,
	162, 1262,
	163, 1262,
	164, 1262,
	165, 1262,
	166, 1262,
	168, 1262,
	174, 1262,
	175, 1262,
	176, 1262,
	177, 1262,
	181, 1262,
	183, 1262,
	184, 1262,
	188, 1262,
	189, 1262,
	190, 1262,
	191, 1262,
	192, 1262,
	193, 1262,
	194, 1262,
	195, 1262,
	196, 1262,
	197, 1262,
	198, 1262,
	199, 1262,
	200, 1262,
	202, 1262,
	203, 1262,
	205, 1262,
	206, 1262,
	208, 1262,
	209, 1262,
	210, 1262,
	211, 1262,
	212, 1262,
	213, 1262,
	214, 1262,
	215, 1262,
	216, 1262,
	218, 1262,
	219, 1262,
	221, 1262,
	222, 1262,
	223, 1262,
	224, 1262,
	225, 1262,
	229, 1262,
	230, 1262,
	231, 1262,
	232, 1262,
	233, 1262,
	236, 1262,
	237, 1262,
	238, 1262,
	240, 1262,
	242, 1262,
	243, 1262,
	245, 1262,
	247, 1262,
	248, 1262,
	249, 1262,
	251, 1262,
	255, 1262,
	256, 1262,
	257, 1262,
	258, 1262,
	259, 1262,
	260, 1262,
	262, 1262,
	263, 1262,
	264, 1262,
	266, 1262,
	267, 1262,
	269, 1262,
	270, 1262,
	273, 1262,
	277, 1262,
	278, 1262,
	279, 1262,
	282, 1262,
	283, 1262,
	284, 1262,
	285, 1262,
	287, 1262,
	288, 1262,
	289, 1262,
	290, 1262,
	291, 1262,
	292, 1262,
	293, 1262,
	294, 1262,
	295, 1262,
	296, 1262,
	297, 1262,
	298, 1262,
	299, 1262,
	300, 1262,
	301, 1262,
	302, 1262,
	303, 1262,
	304, 1262,
	305, 1262,
	306, 1262,
	307, 1262,
	308, 1262,
	310, 1262,
	312, 1262,
	313, 1262,
	314, 1262,
	315, 1262,
	316, 1262,
	317, 1262,
	318, 1262,
	319, 1262,
	320, 1262,
	321, 1262,
	322, 1262,
	323, 1262,
	325, 1262,
	326, 1262,
	328, 1262,
	330, 1262,
	331, 1262,
	333, 1262,
	334, 1262,
	335, 1262,
	336, 1262,
	337, 1262,
	340, 1262,
	344, 1262,
	345, 1262,
	346, 1262,
	349, 1262,
	350, 1262,
	351, 1262,
	353, 1262,
	355, 1262,
	356, 1262,
	357, 1262,
	358, 1262,
	359, 1262,
	360, 1262,
	361, 1262,
	362, 1262,
	363, 1262,
	364, 1262,
	365, 1262,
	366, 1262,
	368, 1262,
	369, 1262,
	370, 1262,
	371, 1262,
	372, 1262,
	373, 1262,
	374, 1262,
	375, 1262,
	376, 1262,
	377, 1262,
	378, 1262,
	379, 1262,
	380, 1262,
	381, 1262,
	382, 1262,
	384, 1262,
	385, 1262,
	387, 1262,
	388, 1262,
	389, 1262,
	390, 1262,
	391, 1262,
	392, 1262,
	393, 1262,
	394, 1262,
	395, 1262,
	396, 1262,
	397, 1262,
	398, 1262,
	400, 1262,
	402, 1262,
	403, 1262,
	404, 1262,
	409, 1262,
	411, 1262,
	412, 1262,
	413, 1262,
	414, 1262,
	415, 1262,
	416, 1262,
	417, 1262,
	418, 1262,
	419, 1262,
	421, 1262,
	422, 1262,
	423, 1262,
	425, 1262,
	426, 1262,
	427, 1262,
	428, 1262,
	429, 1262,
	430, 1262,
	432, 1262,
	433, 1262,
	434, 1262,
	435, 1262,
	436, 1262,
	437, 1262,
	438, 1262,
	439, 1262,
	440, 1262,
	441, 1262,
	442, 1262,
	443, 1262,
	445, 1262,
	446, 1262,
	447, 1262,
	448, 1262,
	449, 1262,
	450, 1262,
	452, 1262,
	453, 1262,
	454, 1262,
	455, 1262,
	456, 1262,
	457, 1262,
	459, 1262,
	460, 1262,
	461, 1262,
	462, 1262,
	463, 1262,
	464, 1262,
	465, 1262,
	466, 1262,
	468, 1262,
	470, 1262,
	471, 1262,
	472, 1262,
	473, 1262,
	474, 1262,
	475, 1262,
	476, 1262,
	477, 1262,
	478, 1262,
	479, 1262,
	480, 1262,
	481, 1262,
	482, 1262,
	483, 1262,
	484, 1262,
	485, 1262,
	487, 1262,
	488, 1262,
	490, 1262,
	491, 1262,
	493, 1262,
	494, 1262,
	495, 1262,
	496, 1262,
	497, 1262,
	498, 1262,
	499, 1262,
	500, 1262,
	501, 1262,
	503, 1262,
	504, 1262,
	505, 1262,
	506, 1262,
	507, 1262,
	509, 1262,
	511, 1262,
	512, 1262,
	513, 1262,
	514, 1262,
	515, 1262,
	516, 1262,
	518, 1262,
	519, 1262,
	520, 1262,
	521, 1262,
	523, 1262,
	524, 1262,
	527, 1262,
	528, 1262,
	529, 1262,
	530, 1262,
	531, 1262,
	532, 1262,
	533, 1262,
	535, 1262,
	538, 1262,
	539, 1262,
	540, 1262,
	541, 1262,
	542, 1262,
	543, 1262,
	545, 1262,
	546, 1262,
	547, 1262,
	548, 1262,
	550, 1262,
	555, 1262,
	556, 1262,
	557, 1262,
	558, 1262,
	559, 1262,
	560, 1262,
	-2, 0,
	-1, 748,
	186, 2298,
	508, 2298,
	568, 2298,
	587, 2298,
	-2, 0,
	-1, 749,
	186, 2404,
	508, 2404,
	568, 2404,
	587, 2404,
	-2, 0,
	-1, 750,
	186, 2285,
	508, 2285,
	568, 2285,
	587, 2285,
	-2, 0,
	-1, 752,
	186, 2536,
	508, 2536,
	568, 2536,
	587, 2536,
	-2, 0,
	-1, 754,
	186, 2577,
	508, 2577,
	568, 2577,
	587, 2577,
	-2, 0,
	-1, 761,
	186, 2431,
	508, 2431,
	568, 2431,
	587, 2431,
	-2, 687,
	-1, 794,
	587, 2234,
	590, 2234,
	-2, 965,
	-1, 795,
	587, 2236,
	590, 2236,
	-2, 966,
	-1, 796,
	587, 2235,
	590, 2235,
	-2, 967,
	-1, 797,
	590, 2160,
	-2, 968,
	-1, 820,
	182, 251,
	-2, 0,
	-1, 844,
	43, 2207,
	-2, 0,
	-1, 845,
	545, 1240,
	-2, 1035,
	-1, 861,
	4, 1642,
	21, 1642,
	22, 1642,
	23, 1642,
	24, 1642,
	25, 1642,
	26, 1642,
	27, 1642,
	29, 1642,
	30, 1642,
	36, 1642,
	41, 1642,
	42, 1642,
	44, 1642,
	45, 1642,
	46, 1642,
	47, 1642,
	48, 1642,
	49, 1642,
	50, 1642,
	51, 1642,
	53, 1642,
	54, 1642,
	55, 1642,
	56, 1642,
	58, 1642,
	59, 1642,
	60, 1642,
	61, 1642,
	62, 1642,
	63, 1642,
	64, 1642,
	68, 1642,
	69, 1642,
	70, 1642,
	71, 1642,
	73, 1642,
	74, 1642,
	75, 1642,
	79, 1642,
	80, 1642,
	81, 1642,
	82, 1642,
	83, 1642,
	84, 1642,
	85, 1642,
	88, 1642,
	89, 1642,
	90, 1642,
	91, 1642,
	92, 1642,
	94, 1642,
	96, 1642,
	97, 1642,
	98, 1642,
	99, 1642,
	100, 1642,
	101, 1642,
	103, 1642,
	104, 1642,
	105, 1642,
	107, 1642,
	108, 1642,
	109, 1642,
	117, 1642,
	118, 1642,
	119, 1642,
	120, 1642,
	121, 1642,
	123, 1642,
	124, 1642,
	125, 1642,
	127, 1642,
	128, 1642,
	129, 1642,
	131, 1642,
	132, 1642,
	133, 1642,
	135, 1642,
	136, 1642,
	137, 1642,
	140, 1642,
	141, 1642,
	142, 1642,
	144, 1642,
	145, 1642,
	147, 1642,
	148, 1642,
	149, 1642,
	151, 1642,
	152, 1642,
	153, 1642,
	154, 1642,
	155, 1642,
	156, 1642,
	157, 1642,
	158, 1642,
	159, 1642,
	160, 1642,
	161, 1642,
	162, 1642,
	163, 1642,
	164, 1642,
	165, 1642,
	166, 1642,
	168, 1642,
	174, 1642,
	175, 1642,
	176, 1642,
	177, 1642,
	181, 1642,
	183, 1642,
	184, 1642,
	188, 1642,
	189, 1642,
	190, 1642,
	191, 1642,
	192, 1642,
	193, 1642,
	194, 1642,
	195, 1642,
	196, 1642,
	197, 1642,
	198, 1642,
	199, 1642,
	200, 1642,
	202, 1642,
	203, 1642,
	205, 1642,
	206, 1642,
	208, 1642,
	209, 1642,
	210, 1642,
	211, 1642,
	212, 1642,
	213, 1642,
	214, 1642,
	215, 1642,
	216, 1642,
	218, 1642,
	219, 1642,
	221, 1642,
	222, 1642,
	223, 1642,
	224, 1642,
	225, 1642,
	229, 1642,
	230, 1642,
	231, 1642,
	232, 1642,
	233, 1642,
	236, 1642,
	237, 1642,
	238, 1642,
	240, 1642,
	242, 1642,
	243, 1642,
	245, 1642,
	247, 1642,
	248, 1642,
	249, 1642,
	251, 1642,
	255, 1642,
	256, 1642,
	257, 1642,
	258, 1642,
	259, 1642,
	260, 1642,
	262, 1642,
	263, 1642,
	264, 1642,
	266, 1642,
	267, 1642,
	269, 1642,
	270, 1642,
	273, 1642,
	277, 1642,
	278, 1642,
	279, 1642,
	282, 1642,
	283, 1642,
	284, 1642,
	285, 1642,
	287, 1642,
	288, 1642,
	289, 1642,
	290, 1642,
	291, 1642,
	292, 1642,
	293, 1642,
	294, 1642,
	295, 1642,
	296, 1642,
	297, 1642,
	298, 1642,
	299, 1642,
	300, 1642,
	301, 1642,
	302, 1642,
	303, 1642,
	304, 1642,
	305, 1642,
	306, 1642,
	307, 1642,
	308, 1642,
	310, 1642,
	312, 1642,
	313, 1642,
	314, 1642,
	315, 1642,
	316, 1642,
	317, 1642,
	318, 1642,
	319, 1642,
	320, 1642,
	321, 1642,
	322, 1642,
	323, 1642,
	325, 1642,
	326, 1642,
	328, 1642,
	330, 1642,
	331, 1642,
	333, 1642,
	334, 1642,
	335, 1642,
	336, 1642,
	337, 1642,
	340, 1642,
	344, 1642,
	345, 1642,
	346, 1642,
	349, 1642,
	350, 1642,
	351, 1642,
	353, 1642,
	355, 1642,
	356, 1642,
	357, 1642,
	358, 1642,
	359, 1642,
	360, 1642,
	361, 1642,
	362, 1642,
	363, 1642,
	364, 1642,
	365, 1642,
	366, 1642,
	368, 1642,
	369, 1642,
	370, 1642,
	371, 1642,
	372, 1642,
	373, 1642,
	374, 1642,
	375, 1642,
	376, 1642,
	377, 1642,
	378, 1642,
	379, 1642,
	380, 1642,
	381, 1642,
	382, 1642,
	384, 1642,
	385, 1642,
	387, 1642,
	388, 1642,
	389, 1642,
	390, 1642,
	391, 1642,
	392, 1642,
	393, 1642,
	394, 1642,
	395, 1642,
	396, 1642,
	397, 1642,
	398, 1642,
	400, 1642,
	402, 1642,
	403, 1642,
	404, 1642,
	409, 1642,
	411, 1642,
	412, 1642,
	413, 1642,
	414, 1642,
	415, 1642,
	416, 1642,
	417, 1642,
	418, 1642,
	419, 1642,
	421, 1642,
	422, 1642,
	423, 1642,
	425, 1642,
	426, 1642,
	427, 1642,
	428, 1642,
	429, 1642,
	430, 1642,
	432, 1642,
	433, 1642,
	434, 1642,
	435, 1642,
	436, 1642,
	437, 1642,
	438, 1642,
	439, 1642,
	440, 1642,
	441, 1642,
	442, 1642,
	443, 1642,
	445, 1642,
	446, 1642,
	447, 1642,
	448, 1642,
	449, 1642,
	450, 1642,
	452, 1642,
	453, 1642,
	454, 1642,
	455, 1642,
	456, 1642,
	457, 1642,
	459, 1642,
	460, 1642,
	461, 1642,
	462, 1642,
	463, 1642,
	464, 1642,
	465, 1642,
	466, 1642,
	468, 1642,
	470, 1642,
	471, 1642,
	472, 1642,
	473, 1642,
	474, 1642,
	475, 1642,
	476, 1642,
	477, 1642,
	478, 1642,
	479, 1642,
	480, 1642,
	481, 1642,
	482, 1642,
	483, 1642,
	484, 1642,
	485, 1642,
	487, 1642,
	488, 1642,
	490, 1642,
	491, 1642,
	493, 1642,
	494, 1642,
	495, 1642,
	496, 1642,
	497, 1642,
	498, 1642,
	499, 1642,
	500, 1642,
	501, 1642,
	503, 1642,
	504, 1642,
	505, 1642,
	506, 1642,
	507, 1642,
	509, 1642,
	511, 1642,
	512, 1642,
	513, 1642,
	514, 1642,
	515, 1642,
	516, 1642,
	518, 1642,
	519, 1642,
	520, 1642,
	521, 1642,
	523, 1642,
	524, 1642,
	527, 1642,
	528, 1642,
	529, 1642,
	530, 1642,
	531, 1642,
	532, 1642,
	533, 1642,
	535, 1642,
	538, 1642,
	539, 1642,
	540, 1642,
	541, 1642,
	542, 1642,
	543, 1642,
	545, 1642,
	546, 1642,
	547, 1642,
	548, 1642,
	550, 1642,
	555, 1642,
	556, 1642,
	557, 1642,
	558, 1642,
	559, 1642,
	560, 1642,
	-2, 0,
	-1, 871,
	259, 399,
	-2, 0,
	-1, 942,
	389, 854,
	450, 854,
	491, 854,
	513, 854,
	-2, 0,
	-1, 943,
	389, 853,
	450, 853,
	491, 853,
	513, 853,
	-2, 793,
	-1, 947,
	1, 905,
	584, 905,
	586, 905,
	588, 905,
	-2, 0,
	-1, 948,
	1, 828,
	584, 828,
	586, 828,
	588, 828,
	-2, 0,
	-1, 949,
	1, 832,
	584, 832,
	586, 832,
	588, 832,
	-2, 0,
	-1, 950,
	1, 964,
	182, 964,
	584, 964,
	586, 964,
	588, 964,
	-2, 0,
	-1, 958,
	1, 859,
	584, 859,
	586, 859,
	588, 859,
	-2, 0,
	-1, 965,
	1, 905,
	584, 905,
	586, 905,
	588, 905,
	-2, 0,
	-1, 966,
	1, 907,
	584, 907,
	586, 907,
	588, 907,
	-2, 0,
	-1, 967,
	1, 910,
	584, 910,
	586, 910,
	588, 910,
	-2, 0,
	-1, 973,
	1, 928,
	584, 928,
	586, 928,
	588, 928,
	-2, 0,
	-1, 974,
	1, 930,
	584, 930,
	586, 930,
	588, 930,
	-2, 0,
	-1, 979,
	1, 958,
	584, 958,
	586, 958,
	588, 958,
	-2, 0,
	-1, 1026,
	169, 1517,
	182, 1517,
	272, 1517,
	338, 1517,
	-2, 1453,
	-1, 1041,
	169, 1516,
	182, 1516,
	272, 1516,
	338, 1516,
	-2, 1450,
	-1, 1068,
	587, 2233,
	-2, 695,
	-1, 1097,
	5, 2225,
	585, 2223,
	-2, 2214,
	-1, 1105,
	5, 2246,
	585, 2243,
	-2, 2234,
	-1, 1106,
	5, 2247,
	585, 2244,
	-2, 2235,
	-1, 1114,
	587, 2231,
	-2, 2213,
	-1, 1115,
	585, 2660,
	-2, 2232,
	-1, 1138,
	585, 2659,
	-2, 2248,
	-1, 1139,
	5, 1717,
	-2, 2630,
	-1, 1140,
	5, 1718,
	-2, 2631,
	-1, 1141,
	5, 1719,
	-2, 2645,
	-1, 1142,
	5, 1720,
	-2, 2609,
	-1, 1143,
	5, 1721,
	-2, 2643,
	-1, 1144,
	5, 1729,
	-2, 2622,
	-1, 1145,
	5, 1716,
	-2, 2618,
	-1, 1146,
	5, 1716,
	-2, 2617,
	-1, 1147,
	5, 1716,
	-2, 2636,
	-1, 1148,
	5, 1727,
	-2, 2611,
	-1, 1149,
	5, 1732,
	-2, 2610,
	-1, 1150,
	5, 1734,
	-2, 2655,
	-1, 1153,
	5, 1756,
	-2, 2648,
	-1, 1154,
	5, 1748,
	-2, 2649,
	-1, 1155,
	5, 1756,
	-2, 2650,
	-1, 1156,
	5, 1752,
	-2, 2651,
	-1, 1157,
	5, 1702,
	-2, 2623,
	-1, 1158,
	5, 1703,
	-2, 2624,
	-1, 1159,
	5, 1704,
	-2, 2612,
	-1, 1187,
	5, 1739,
	-2, 2656,
	-1, 1188,
	5, 1740,
	-2, 2646,
	-1, 1189,
	5, 1741,
	546, 1741,
	-2, 2613,
	-1, 1190,
	5, 1742,
	546, 1742,
	-2, 2614,
	-1, 1227,
	585, 2243,
	-2, 2234,
	-1, 1228,
	585, 2244,
	-2, 2235,
	-1, 1328,
	186, 2577,
	508, 2577,
	568, 2577,
	587, 2577,
	-2, 0,
	-1, 1331,
	1, 673,
	588, 673,
	-2, 1369,
	-1, 1459,
	357, 2208,
	411, 2208,
	452, 2208,
	578, 2208,
	-2, 2198,
	-1, 1470,
	589, 2208,
	-2, 2210,
	-1, 1479,
	1, 1237,
	584, 1237,
	586, 1237,
	588, 1237,
	-2, 1502,
	-1, 1527,
	396, 1034,
	545, 1034,
	-2, 394,
	-1, 1544,
	43, 2206,
	-2, 1000,
	-1, 1551,
	1, 1237,
	584, 1237,
	586, 1237,
	588, 1237,
	-2, 1502,
	-1, 1559,
	4, 1262,
	21, 1262,
	22, 1262,
	23, 1262,
	24, 1262,
	25, 1262,
	26, 1262,
	27, 1262,
	29, 1262,
	30, 1262,
	36, 1262,
	41, 1262,
	42, 1262,
	44, 1262,
	45, 1262,
	46, 1262,
	47, 1262,
	48, 1262,
	49, 1262,
	50, 1262,
	51, 1262,
	53, 1262,
	54, 1262,
	55, 1262,
	56, 1262,
	58, 1262,
	59, 1262,
	60, 1262,
	61, 1262,
	62, 1262,
	63, 1262,
	64, 1262,
	68, 1262,
	69, 1262,
	70, 1262,
	71, 1262,
	73, 1262,
	74, 1262,
	75, 1262,
	79, 1262,
	80, 1262,
	81, 1262,
	82, 1262,
	83, 1262,
	84, 1262,
	85, 1262,
	88, 1262,
	89, 1262,
	90, 1262,
	91, 1262,
	92, 1262,
	94, 1262,
	96, 1262,
	97, 1262,
	98, 1262,
	99, 1262,
	100, 1262,
	101, 1262,
	103, 1262,
	104, 1262,
	105, 1262,
	107, 1262,
	108, 1262,
	109, 1262,
	117, 1262,
	118, 1262,
	119, 1262,
	120, 1262,
	121, 1262,
	123, 1262,
	124, 1262,
	125, 1262,
	127, 1262,
	128, 1262,
	129, 1262,
	131, 1262,
	132, 1262,
	133, 1262,
	135, 1262,
	136, 1262,
	137, 1262,
	140, 1262,
	141, 1262,
	142, 1262,
	144, 1262,
	145, 1262,
	147, 1262,
	148, 1262,
	149, 1262,
	151, 1262,
	152, 1262,
	153, 1262,
	154, 1262,
	155, 1262,
	156, 1262,
	157, 1262,
	158, 1262,
	159, 1262,
	160, 1262,
	161, 1262,
	162, 1262,
	163, 1262,
	164, 1262,
	165, 1262,
	166, 1262,
	174, 1262,
	175, 1262,
	176, 1262,
	177, 1262,
	181, 1262,
	183, 1262,
	184, 1262,
	188, 1262,
	189, 1262,
	190, 1262,
	191, 1262,
	192, 1262,
	193, 1262,
	194, 1262,
	195, 1262,
	196, 1262,
	197, 1262,
	198, 1262,
	199, 1262,
	200, 1262,
	202, 1262,
	203, 1262,
	205, 1262,
	206, 1262,
	208, 1262,
	209, 1262,
	210, 1262,
	211, 1262,
	212, 1262,
	213, 1262,
	214, 1262,
	215, 1262,
	216, 1262,
	218, 1262,
	219, 1262,
	221, 1262,
	222, 1262,
	223, 1262,
	224, 1262,
	225, 1262,
	230, 1262,
	231, 1262,
	232, 1262,
	233, 1262,
	236, 1262,
	237, 1262,
	238, 1262,
	240, 1262,
	242, 1262,
	243, 1262,
	245, 1262,
	247, 1262,
	248, 1262,
	249, 1262,
	251, 1262,
	255, 1262,
	256, 1262,
	257, 1262,
	258, 1262,
	259, 1262,
	260, 1262,
	262, 1262,
	263, 1262,
	264, 1262,
	266, 1262,
	267, 1262,
	269, 1262,
	270, 1262,
	273, 1262,
	277, 1262,
	278, 1262,
	279, 1262,
	282, 1262,
	283, 1262,
	284, 1262,
	285, 1262,
	287, 1262,
	288, 1262,
	289, 1262,
	290, 1262,
	291, 1262,
	292, 1262,
	293, 1262,
	294, 1262,
	295, 1262,
	296, 1262,
	297, 1262,
	298, 1262,
	299, 1262,
	300, 1262,
	301, 1262,
	302, 1262,
	303, 1262,
	304, 1262,
	305, 1262,
	306, 1262,
	307, 1262,
	308, 1262,
	310, 1262,
	312, 1262,
	313, 1262,
	314, 1262,
	315, 1262,
	316, 1262,
	317, 1262,
	318, 1262,
	319, 1262,
	320, 1262,
	321, 1262,
	322, 1262,
	323, 1262,
	325, 1262,
	326, 1262,
	330, 1262,
	331, 1262,
	333, 1262,
	334, 1262,
	335, 1262,
	336, 1262,
	337, 1262,
	340, 1262,
	342, 1262,
	344, 1262,
	345, 1262,
	346, 1262,
	349, 1262,
	350, 1262,
	351, 1262,
	353, 1262,
	355, 1262,
	356, 1262,
	357, 1262,
	358, 1262,
	359, 1262,
	360, 1262,
	361, 1262,
	362, 1262,
	363, 1262,
	364, 1262,
	365, 1262,
	366, 1262,
	368, 1262,
	369, 1262,
	370, 1262,
	371, 1262,
	372, 1262,
	373, 1262,
	374, 1262,
	375, 1262,
	376, 1262,
	377, 1262,
	378, 1262,
	379, 1262,
	380, 1262,
	381, 1262,
	382, 1262,
	384, 1262,
	385, 1262,
	387, 1262,
	388, 1262,
	389, 1262,
	390, 1262,
	391, 1262,
	392, 1262,
	393, 1262,
	394, 1262,
	395, 1262,
	396, 1262,
	397, 1262,
	398, 1262,
	400, 1262,
	402, 1262,
	403, 1262,
	404, 1262,
	409, 1262,
	411, 1262,
	412, 1262,
	413, 1262,
	414, 1262,
	415, 1262,
	416, 1262,
	417, 1262,
	418, 1262,
	419, 1262,
	421, 1262,
	422, 1262,
	423, 1262,
	425, 1262,
	426, 1262,
	427, 1262,
	428, 1262,
	429, 1262,
	430, 1262,
	432, 1262,
	433, 1262,
	434, 1262,
	435, 1262,
	436, 1262,
	437, 1262,
	438, 1262,
	439, 1262,
	440, 1262,
	441, 1262,
	442, 1262,
	443, 1262,
	445, 1262,
	446, 1262,
	447, 1262,
	448, 1262,
	449, 1262,
	450, 1262,
	452, 1262,
	453, 1262,
	454, 1262,
	455, 1262,
	456, 1262,
	457, 1262,
	459, 1262,
	460, 1262,
	461, 1262,
	462, 1262,
	463, 1262,
	464, 1262,
	465, 1262,
	466, 1262,
	468, 1262,
	470, 1262,
	471, 1262,
	472, 1262,
	473, 1262,
	474, 1262,
	475, 1262,
	476, 1262,
	477, 1262,
	478, 1262,
	479, 1262,
	480, 1262,
	481, 1262,
	482, 1262,
	483, 1262,
	484, 1262,
	485, 1262,
	487, 1262,
	488, 1262,
	490, 1262,
	491, 1262,
	493, 1262,
	494, 1262,
	495, 1262,
	496, 1262,
	497, 1262,
	498, 1262,
	499, 1262,
	500, 1262,
	501, 1262,
	503, 1262,
	504, 1262,
	505, 1262,
	506, 1262,
	507, 1262,
	509, 1262,
	511, 1262,
	512, 1262,
	513, 1262,
	514, 1262,
	515, 1262,
	516, 1262,
	518, 1262,
	519, 1262,
	520, 1262,
	521, 1262,
	523, 1262,
	524, 1262,
	527, 1262,
	528, 1262,
	529, 1262,
	530, 1262,
	531, 1262,
	532, 1262,
	533, 1262,
	535, 1262,
	538, 1262,
	539, 1262,
	540, 1262,
	541, 1262,
	542, 1262,
	543, 1262,
	545, 1262,
	546, 1262,
	547, 1262,
	548, 1262,
	550, 1262,
	555, 1262,
	556, 1262,
	557, 1262,
	558, 1262,
	559, 1262,
	560, 1262,
	-2, 0,
	-1, 1582,
	1, 539,
	584, 539,
	586, 539,
	588, 539,
	-2, 1473,
	-1, 1585,
	4, 2654,
	11, 2654,
	12, 2654,
	14, 2654,
	15, 2654,
	16, 2654,
	17, 2654,
	18, 2654,
	19, 2654,
	21, 2654,
	22, 2654,
	23, 2654,
	24, 2654,
	25, 2654,
	26, 2654,
	27, 2654,
	29, 2654,
	30, 2654,
	33, 2654,
	34, 2654,
	36, 2654,
	38, 2654,
	41, 2654,
	42, 2654,
	44, 2654,
	45, 2654,
	46, 2654,
	47, 2654,
	48, 2654,
	49, 2654,
	50, 2654,
	51, 2654,
	53, 2654,
	54, 2654,
	55, 2654,
	56, 2654,
	58, 2654,
	59, 2654,
	60, 2654,
	61, 2654,
	62, 2654,
	63, 2654,
	64, 2654,
	67, 2654,
	68, 2654,
	69, 2654,
	70, 2654,
	71, 2654,
	73, 2654,
	74, 2654,
	75, 2654,
	76, 2654,
	79, 2654,
	80, 2654,
	81, 2654,
	82, 2654,
	83, 2654,
	84, 2654,
	85, 2654,
	86, 2654,
	88, 2654,
	89, 2654,
	90, 2654,
	91, 2654,
	92, 2654,
	94, 2654,
	95, 2654,
	96, 2654,
	97, 2654,
	98, 2654,
	99, 2654,
	100, 2654,
	101, 2654,
	103, 2654,
	104, 2654,
	105, 2654,
	106, 2654,
	107, 2654,
	108, 2654,
	109, 2654,
	117, 2654,
	118, 2654,
	119, 2654,
	120, 2654,
	121, 2654,
	123, 2654,
	124, 2654,
	125, 2654,
	127, 2654,
	128, 2654,
	129, 2654,
	131, 2654,
	132, 2654,
	133, 2654,
	135, 2654,
	136, 2654,
	137, 2654,
	140, 2654,
	141, 2654,
	142, 2654,
	144, 2654,
	145, 2654,
	147, 2654,
	148, 2654,
	149, 2654,
	151, 2654,
	152, 2654,
	153, 2654,
	154, 2654,
	155, 2654,
	156, 2654,
	157, 2654,
	158, 2654,
	159, 2654,
	160, 2654,
	161, 2654,
	162, 2654,
	163, 2654,
	164, 2654,
	165, 2654,
	166, 2654,
	170, 2654,
	171, 2654,
	172, 2654,
	173, 2654,
	174, 2654,
	175, 2654,
	176, 2654,
	177, 2654,
	180, 2654,
	181, 2654,
	183, 2654,
	184, 2654,
	187, 2654,
	188, 2654,
	189, 2654,
	190, 2654,
	191, 2654,
	192, 2654,
	193, 2654,
	194, 2654,
	195, 2654,
	196, 2654,
	197, 2654,
	198, 2654,
	199, 2654,
	200, 2654,
	202, 2654,
	203, 2654,
	205, 2654,
	206, 2654,
	208, 2654,
	209, 2654,
	210, 2654,
	211, 2654,
	212, 2654,
	213, 2654,
	214, 2654,
	215, 2654,
	216, 2654,
	217, 2654,
	218, 2654,
	219, 2654,
	220, 2654,
	221, 2654,
	222, 2654,
	223, 2654,
	224, 2654,
	225, 2654,
	227, 2654,
	228, 2654,
	230, 2654,
	231, 2654,
	232, 2654,
	233, 2654,
	235, 2654,
	236, 2654,
	237, 2654,
	238, 2654,
	240, 2654,
	242, 2654,
	243, 2654,
	244, 2654,
	245, 2654,
	246, 2654,
	247, 2654,
	248, 2654,
	249, 2654,
	250, 2654,
	251, 2654,
	253, 2654,
	254, 2654,
	255, 2654,
	256, 2654,
	257, 2654,
	258, 2654,
	259, 2654,
	260, 2654,
	262, 2654,
	263, 2654,
	264, 2654,
	266, 2654,
	267, 2654,
	268, 2654,
	269, 2654,
	270, 2654,
	271, 2654,
	273, 2654,
	277, 2654,
	278, 2654,
	279, 2654,
	282, 2654,
	283, 2654,
	284, 2654,
	285, 2654,
	286, 2654,
	287, 2654,
	288, 2654,
	289, 2654,
	290, 2654,
	291, 2654,
	292, 2654,
	293, 2654,
	294, 2654,
	295, 2654,
	296, 2654,
	297, 2654,
	298, 2654,
	299, 2654,
	300, 2654,
	301, 2654,
	302, 2654,
	303, 2654,
	304, 2654,
	305, 2654,
	306, 2654,
	307, 2654,
	308, 2654,
	310, 2654,
	311, 2654,
	312, 2654,
	313, 2654,
	314, 2654,
	315, 2654,
	316, 2654,
	317, 2654,
	318, 2654,
	319, 2654,
	320, 2654,
	321, 2654,
	322, 2654,
	323, 2654,
	325, 2654,
	326, 2654,
	329, 2654,
	330, 2654,
	331, 2654,
	333, 2654,
	334, 2654,
	335, 2654,
	336, 2654,
	337, 2654,
	340, 2654,
	344, 2654,
	345, 2654,
	346, 2654,
	347, 2654,
	349, 2654,
	350, 2654,
	351, 2654,
	353, 2654,
	355, 2654,
	356, 2654,
	357, 2654,
	358, 2654,
	359, 2654,
	360, 2654,
	361, 2654,
	362, 2654,
	363, 2654,
	364, 2654,
	365, 2654,
	366, 2654,
	368, 2654,
	369, 2654,
	370, 2654,
	371, 2654,
	372, 2654,
	373, 2654,
	374, 2654,
	375, 2654,
	376, 2654,
	377, 2654,
	378, 2654,
	379, 2654,
	380, 2654,
	381, 2654,
	382, 2654,
	384, 2654,
	385, 2654,
	387, 2654,
	388, 2654,
	389, 2654,
	390, 2654,
	391, 2654,
	392, 2654,
	393, 2654,
	394, 2654,
	395, 2654,
	396, 2654,
	397, 2654,
	398, 2654,
	400, 2654,
	402, 2654,
	403, 2654,
	404, 2654,
	409, 2654,
	410, 2654,
	411, 2654,
	412, 2654,
	413, 2654,
	414, 2654,
	415, 2654,
	416, 2654,
	417, 2654,
	418, 2654,
	419, 2654,
	421, 2654,
	422, 2654,
	423, 2654,
	424, 2654,
	425, 2654,
	426, 2654,
	427, 2654,
	428, 2654,
	429, 2654,
	430, 2654,
	431, 2654,
	432, 2654,
	433, 2654,
	434, 2654,
	435, 2654,
	436, 2654,
	437, 2654,
	438, 2654,
	439, 2654,
	440, 2654,
	441, 2654,
	442, 2654,
	443, 2654,
	445, 2654,
	446, 2654,
	447, 2654,
	448, 2654,
	449, 2654,
	450, 2654,
	452, 2654,
	453, 2654,
	454, 2654,
	455, 2654,
	456, 2654,
	457, 2654,
	458, 2654,
	459, 2654,
	460, 2654,
	461, 2654,
	462, 2654,
	463, 2654,
	464, 2654,
	465, 2654,
	466, 2654,
	468, 2654,
	470, 2654,
	471, 2654,
	472, 2654,
	473, 2654,
	474, 2654,
	475, 2654,
	476, 2654,
	477, 2654,
	478, 2654,
	479, 2654,
	480, 2654,
	481, 2654,
	482, 2654,
	483, 2654,
	484, 2654,
	485, 2654,
	487, 2654,
	488, 2654,
	489, 2654,
	490, 2654,
	491, 2654,
	493, 2654,
	494, 2654,
	495, 2654,
	496, 2654,
	497, 2654,
	498, 2654,
	499, 2654,
	500, 2654,
	501, 2654,
	503, 2654,
	504, 2654,
	505, 2654,
	506, 2654,
	507, 2654,
	509, 2654,
	511, 2654,
	512, 2654,
	513, 2654,
	514, 2654,
	515, 2654,
	516, 2654,
	518, 2654,
	519, 2654,
	520, 2654,
	521, 2654,
	523, 2654,
	524, 2654,
	527, 2654,
	528, 2654,
	529, 2654,
	530, 2654,
	531, 2654,
	532, 2654,
	533, 2654,
	535, 2654,
	538, 2654,
	539, 2654,
	540, 2654,
	541, 2654,
	542, 2654,
	543, 2654,
	545, 2654,
	546, 2654,
	547, 2654,
	548, 2654,
	550, 2654,
	555, 2654,
	556, 2654,
	557, 2654,
	558, 2654,
	559, 2654,
	560, 2654,
	561, 2654,
	563, 2654,
	566, 2654,
	567, 2654,
	568, 2654,
	569, 2654,
	570, 2654,
	571, 2654,
	573, 2654,
	574, 2654,
	575, 2654,
	576, 2654,
	577, 2654,
	578, 2654,
	579, 2654,
	580, 2654,
	581, 2654,
	583, 2654,
	586, 2654,
	587, 2654,
	589, 2654,
	590, 2654,
	-2, 0,
	-1, 1590,
	186, 2536,
	508, 2536,
	568, 2536,
	587, 2536,
	-2, 0,
	-1, 1639,
	389, 854,
	450, 854,
	491, 854,
	513, 854,
	-2, 0,
	-1, 1666,
	1, 849,
	584, 849,
	586, 849,
	588, 849,
	-2, 0,
	-1, 1667,
	1, 892,
	584, 892,
	586, 892,
	588, 892,
	-2, 0,
	-1, 1668,
	1, 900,
	584, 900,
	586, 900,
	588, 900,
	-2, 0,
	-1, 1671,
	1, 858,
	584, 858,
	586, 858,
	588, 858,
	-2, 0,
	-1, 1673,
	1, 864,
	584, 864,
	586, 864,
	588, 864,
	-2, 0,
	-1, 1676,
	1, 860,
	584, 860,
	586, 860,
	588, 860,
	-2, 0,
	-1, 1681,
	1, 874,
	584, 874,
	586, 874,
	588, 874,
	-2, 0,
	-1, 1715,
	1, 939,
	584, 939,
	586, 939,
	588, 939,
	-2, 0,
	-1, 1730,
	1, 1364,
	588, 1364,
	-2, 1369,
	-1, 1733,
	169, 1516,
	182, 1516,
	272, 1516,
	338, 1516,
	-2, 1454,
	-1, 1833,
	150, 1475,
	169, 1475,
	182, 1475,
	239, 1475,
	272, 1475,
	338, 1475,
	348, 1475,
	525, 1475,
	-2, 1921,
	-1, 1893,
	586, 2094,
	-2, 0,
	-1, 1928,
	150, 1475,
	169, 1475,
	182, 1475,
	239, 1475,
	272, 1475,
	338, 1475,
	348, 1475,
	525, 1475,
	-2, 1603,
	-1, 1963,
	508, 2533,
	587, 2533,
	590, 2533,
	-2, 0,
	-1, 1980,
	585, 1744,
	-2, 1732,
	-1, 2012,
	186, 2533,
	587, 2533,
	590, 2533,
	-2, 0,
	-1, 2060,
	1, 675,
	588, 675,
	-2, 1369,
	-1, 2186,
	220, 252,
	-2, 2242,
	-1, 2187,
	220, 253,
	-2, 302,
	-1, 2291,
	1, 851,
	584, 851,
	586, 851,
	588, 851,
	-2, 0,
	-1, 2292,
	1, 894,
	584, 894,
	586, 894,
	588, 894,
	-2, 0,
	-1, 2293,
	1, 902,
	584, 902,
	586, 902,
	588, 902,
	-2, 0,
	-1, 2294,
	1, 941,
	584, 941,
	586, 941,
	588, 941,
	-2, 0,
	-1, 2331,
	1, 876,
	584, 876,
	586, 876,
	588, 876,
	-2, 0,
	-1, 2391,
	429, 1543,
	430, 1543,
	-2, 1777,
	-1, 2422,
	14, 0,
	15, 0,
	16, 0,
	566, 0,
	567, 0,
	568, 0,
	-2, 1797,
	-1, 2423,
	14, 0,
	15, 0,
	16, 0,
	566, 0,
	567, 0,
	568, 0,
	-2, 1798,
	-1, 2424,
	95, 0,
	253, 0,
	254, 0,
	570, 0,
	571, 0,
	-2, 1799,
	-1, 2425,
	95, 0,
	253, 0,
	254, 0,
	570, 0,
	571, 0,
	-2, 1800,
	-1, 2426,
	95, 0,
	253, 0,
	254, 0,
	570, 0,
	571, 0,
	-2, 1801,
	-1, 2427,
	95, 0,
	253, 0,
	254, 0,
	570, 0,
	571, 0,
	-2, 1802,
	-1, 2428,
	95, 0,
	253, 0,
	254, 0,
	570, 0,
	571, 0,
	-2, 1803,
	-1, 2429,
	14, 0,
	15, 0,
	16, 0,
	566, 0,
	567, 0,
	568, 0,
	-2, 1804,
	-1, 2441,
	14, 0,
	15, 0,
	16, 0,
	566, 0,
	567, 0,
	568, 0,
	-2, 1816,
	-1, 2442,
	14, 0,
	15, 0,
	16, 0,
	566, 0,
	567, 0,
	568, 0,
	-2, 1817,
	-1, 2443,
	14, 0,
	15, 0,
	16, 0,
	566, 0,
	567, 0,
	568, 0,
	-2, 1818,
	-1, 2447,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	217, 0,
	220, 0,
	271, 0,
	458, 0,
	561, 0,
	569, 0,
	-2, 1825,
	-1, 2453,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	217, 0,
	220, 0,
	271, 0,
	458, 0,
	561, 0,
	569, 0,
	-2, 1829,
	-1, 2455,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	217, 0,
	220, 0,
	271, 0,
	458, 0,
	561, 0,
	569, 0,
	-2, 1837,
	-1, 2456,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	217, 0,
	220, 0,
	271, 0,
	458, 0,
	561, 0,
	569, 0,
	-2, 1838,
	-1, 2457,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	217, 0,
	220, 0,
	271, 0,
	458, 0,
	561, 0,
	569, 0,
	-2, 1839,
	-1, 2458,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	217, 0,
	220, 0,
	271, 0,
	458, 0,
	561, 0,
	569, 0,
	-2, 1840,
	-1, 2630,
	5, 2246,
	186, 2105,
	585, 2243,
	-2, 2234,
	-1, 2631,
	186, 2106,
	-2, 2605,
	-1, 2632,
	186, 2107,
	-2, 2430,
	-1, 2633,
	186, 2108,
	-2, 2316,
	-1, 2634,
	186, 2109,
	-2, 2370,
	-1, 2635,
	186, 2110,
	-2, 2415,
	-1, 2636,
	186, 2111,
	-2, 2531,
	-1, 2637,
	186, 2112,
	-2, 1904,
	-1, 2708,
	1, 1604,
	2, 1604,
	106, 1604,
	150, 1604,
	169, 1604,
	182, 1604,
	187, 1604,
	204, 1604,
	207, 1604,
	235, 1604,
	239, 1604,
	250, 1604,
	268, 1604,
	272, 1604,
	311, 1604,
	338, 1604,
	342, 1604,
	348, 1604,
	420, 1604,
	424, 1604,
	525, 1604,
	536, 1604,
	552, 1604,
	553, 1604,
	554, 1604,
	564, 1604,
	584, 1604,
	586, 1604,
	588, 1604,
	590, 1604,
	-2, 1603,
	-1, 2721,
	585, 2215,
	-2, 2229,
	-1, 2723,
	1, 319,
	552, 319,
	-2, 1502,
	-1, 2751,
	585, 1743,
	-2, 1733,
	-1, 2929,
	1, 1237,
	584, 1237,
	586, 1237,
	588, 1237,
	-2, 1502,
	-1, 3098,
	343, 1546,
	-2, 2644,
	-1, 3099,
	343, 1547,
	-2, 2516,
	-1, 3103,
	429, 2171,
	430, 2171,
	-2, 1902,
	-1, 3104,
	429, 2175,
	430, 2175,
	-2, 1903,
	-1, 3105,
	429, 2172,
	430, 2172,
	-2, 1902,
	-1, 3106,
	429, 2176,
	430, 2176,
	-2, 1903,
	-1, 3119,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	217, 0,
	220, 0,
	271, 0,
	458, 0,
	561, 0,
	569, 0,
	-2, 1827,
	-1, 3120,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	217, 0,
	220, 0,
	271, 0,
	458, 0,
	561, 0,
	569, 0,
	-2, 1831,
	-1, 3126,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	217, 0,
	220, 0,
	271, 0,
	458, 0,
	561, 0,
	569, 0,
	-2, 1833,
	-1, 3348,
	1, 672,
	584, 672,
	586, 672,
	588, 672,
	-2, 1369,
	-1, 3504,
	43, 2206,
	-2, 1001,
	-1, 3509,
	1, 1237,
	584, 1237,
	586, 1237,
	588, 1237,
	-2, 1502,
	-1, 3615,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	217, 0,
	220, 0,
	271, 0,
	458, 0,
	561, 0,
	569, 0,
	-2, 1835,
	-1, 3622,
	244, 0,
	246, 0,
	329, 0,
	-2, 1854,
	-1, 3690,
	14, 0,
	15, 0,
	16, 0,
	566, 0,
	567, 0,
	568, 0,
	-2, 1883,
	-1, 3691,
	14, 0,
	15, 0,
	16, 0,
	566, 0,
	567, 0,
	568, 0,
	-2, 1884,
	-1, 3692,
	14, 0,
	15, 0,
	16, 0,
	566, 0,
	567, 0,
	568, 0,
	-2, 1885,
	-1, 3696,
	14, 0,
	15, 0,
	16, 0,
	566, 0,
	567, 0,
	568, 0,
	-2, 1889,
	-1, 3697,
	14, 0,
	15, 0,
	16, 0,
	566, 0,
	567, 0,
	568, 0,
	-2, 1890,
	-1, 3698,
	14, 0,
	15, 0,
	16, 0,
	566, 0,
	567, 0,
	568, 0,
	-2, 1891,
	-1, 3745,
	585, 2216,
	-2, 2230,
	-1, 3911,
	587, 2762,
	-2, 1428,
	-1, 3969,
	244, 0,
	246, 0,
	329, 0,
	-2, 1855,
	-1, 3972,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	217, 0,
	220, 0,
	271, 0,
	458, 0,
	561, 0,
	569, 0,
	-2, 1858,
	-1, 3973,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	217, 0,
	220, 0,
	271, 0,
	458, 0,
	561, 0,
	569, 0,
	-2, 1860,
	-1, 4067,
	587, 2231,
	-2, 1272,
	-1, 4213,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	217, 0,
	220, 0,
	271, 0,
	458, 0,
	561, 0,
	569, 0,
	-2, 1859,
	-1, 4214,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	217, 0,
	220, 0,
	271, 0,
	458, 0,
	561, 0,
	569, 0,
	-2, 1861,
	-1, 4225,
	244, 0,
	-2, 1894,
	-1, 4397,
	244, 0,
	-2, 1895,
	-1, 4581,
	50, 0,
	217, 0,
	271, 0,
	458, 0,
	561, 0,
	569, 0,
	-2, 2608,
}

const sqlPrivate = 57344

const sqlLast = 126783

var sqlAct = [...]int{
	266, 4434, 3493, 2994, 4763, 3257, 4574, 4677, 2814, 3492,
	4633, 3007, 4591, 4580, 4319, 4562, 4573, 4270, 4456, 4704,
	4426, 4477, 2183, 2108, 4452, 4513, 4533, 4530, 3952, 4549,
	1220, 4592, 2878, 4593, 4256, 2858, 4350, 4326, 3655, 4579,
	4063, 4401, 4169, 4130, 4164, 4275, 4234, 4110, 4202, 3607,
	3526, 2401, 2258, 3370, 1300, 3895, 3903, 4646, 4151, 1293,
	1051, 3838, 1231, 1304, 4153, 3112, 1491, 4335, 2645, 4144,
	4064, 2042, 4048, 2663, 3430, 796, 4364, 2470, 3520, 1742,
	3860, 3488, 4174, 2409, 2891, 3876, 3359, 1097, 2116, 759,
	4230, 3478, 1606, 2017, 3029, 3373, 1934, 3565, 2402, 1364,
	3858, 796, 3567, 3748, 2983, 1967, 1295, 2964, 2953, 3016,
	2265, 3018, 3280, 3263, 3272, 3951, 3300, 869, 4, 3026,
	3240, 2980, 4008, 1456, 3015, 3009, 2978, 3261, 2178, 2995,
	1903, 2267, 1647, 4678, 3392, 39, 873, 2177, 2127, 3239,
	1879, 2816, 4402, 2701, 2700, 2406, 2548, 1841, 3367, 3096,
	3025, 2957, 260, 864, 1042, 1811, 2231, 3716, 1546, 2483,
	791, 1463, 259, 2906, 1298, 2154, 2173, 2703, 1050, 175,
	2161, 1101, 2857, 2965, 1904, 2096, 1286, 2100, 2681, 1730,
	1347, 2467, 2040, 2539, 1923, 2086, 1211, 3307, 1106, 2390,
	2373, 2734, 2371, 1272, 3490, 793, 1583, 1604, 2988, 2550,
	2218, 1283, 1549, 2660, 2839, 4478, 1104, 797, 798, 3019,
	2802, 1333, 1214, 690, 1874, 2733, 1913, 676, 1103, 1108,
	2542, 698, 2671, 2690, 1193, 2029, 2520, 802, 2626, 2592,
	1825, 1920, 1743, 1228, 184, 741, 185, 805, 1744, 2372,
	1681, 1666, 753, 2217, 1210, 2374, 1581, 2244, 1486, 2115,
	1574, 4634, 2395, 802, 1082, 2018, 2015, 693, 44, 108,
	43, 41, 175, 805, 32, 30, 1216, 3149, 701, 28,
	1191, 716, 1968, 936, 1729, 1497, 956, 845, 3730, 1749,
	3731, 2031, 3143, 4776, 4766, 3259, 4249, 2680, 3545, 4751,
	2031, 4750, 1046, 2680, 2031, 2680, 888, 157, 4246, 1151,
	2031, 2031, 2031, 3536, 1046, 73, 4740, 46, 45, 4722,
	2192, 4720, 4665, 4274, 4029, 4274, 2192, 4622, 1511, 1342,
	1226, 4623, 74, 3535, 865, 152, 1342, 4615, 4613, 4610,
	1080, 2680, 2680, 4611, 3315, 1490, 4607, 4577, 78, 4576,
	4608, 2192, 3545, 2192, 4575, 2266, 1208, 3332, 2052, 67,
	2192, 73, 3720, 868, 867, 4570, 48, 4569, 154, 2052,
	4560, 2052, 4558, 4555, 4274, 4528, 4274, 4338, 74, 4274,
	4502, 4495, 2763, 4494, 2742, 2680, 47, 2680, 87, 4489,
	2049, 4488, 4482, 4274, 78, 4274, 2192, 4448, 3330, 2673,
	4399, 4121, 1194, 1194, 2742, 4381, 4378, 4375, 4328, 3938,
	2192, 4274, 4329, 4291, 50, 68, 2738, 2192, 1250, 2192,
	1027, 3158, 1026, 51, 3210, 3211, 2049, 3159, 57, 4290,
	1757, 1758, 155, 2192, 87, 4281, 1197, 4280, 1198, 2192,
	49, 4274, 107, 1757, 1758, 3111, 4273, 93, 104, 1223,
	4274, 4241, 2192, 4215, 4193, 2192, 1047, 2742, 2052, 2680,
	1760, 1222, 4503, 1041, 2762, 4182, 1788, 1036, 1099, 3545,
	4403, 4105, 4088, 1760, 871, 2680, 2680, 3971, 4394, 3919,
	3913, 2742, 258, 3562, 3562, 3874, 49, 52, 107, 3875,
	1243, 4382, 3740, 93, 104, 1759, 3741, 3738, 93, 1813,
	3723, 3739, 4338, 3639, 2680, 94, 1195, 2192, 1759, 3635,
	3561, 3552, 3256, 2680, 3562, 3553, 2680, 3251, 3250, 3201,
	3199, 2680, 2680, 3202, 3200, 2052, 2496, 2497, 2498, 2515,
	2516, 2517, 3191, 3189, 3160, 3720, 3192, 2680, 2680, 1510,
	2672, 3033, 4162, 3005, 2680, 2052, 2518, 2254, 3004, 2786,
	2741, 94, 2254, 2680, 2742, 4121, 3148, 4089, 3210, 3211,
	2731, 3228, 3229, 3230, 2680, 2725, 2679, 2253, 3938, 2192,
	2680, 2254, 1244, 1224, 3553, 2881, 2120, 2801, 230, 1813,
	3967, 2065, 2030, 2046, 2049, 2959, 2191, 3210, 3211, 2901,
	3228, 3229, 3230, 3216, 2799, 3210, 3211, 1899, 2508, 1765,
	1485, 3821, 3610, 2545, 3586, 1921, 2166, 2504, 3537, 3966,
	1649, 2717, 1765, 2716, 1757, 1758, 2715, 2714, 2713, 1199,
	1196, 1035, 1034, 1033, 1032, 1031, 232, 3538, 230, 1030,
	1029, 1025, 1024, 3225, 1023, 1022, 1021, 1020, 1019, 1018,
	1017, 1016, 1015, 3073, 1760, 2032, 1014, 1013, 1012, 1011,
	97, 1010, 1009, 934, 2032, 933, 932, 1505, 2032, 1787,
	1789, 931, 3225, 930, 2032, 2032, 2032, 53, 929, 928,
	927, 926, 925, 924, 923, 231, 232, 922, 921, 1759,
	920, 56, 2509, 2510, 2511, 2512, 59, 919, 224, 918,
	917, 2546, 2503, 916, 915, 69, 97, 225, 4024, 3226,
	2049, 58, 183, 100, 914, 103, 913, 912, 911, 54,
	3210, 3211, 910, 156, 909, 2575, 908, 3535, 1780, 186,
	55, 907, 1490, 906, 905, 231, 904, 3216, 903, 902,
	230, 901, 1672, 891, 890, 886, 885, 879, 62, 878,
	863, 862, 819, 148, 1309, 1106, 818, 817, 183, 100,
	816, 103, 808, 807, 806, 1613, 3216, 774, 153, 1843,
	765, 1244, 764, 763, 3216, 2513, 2514, 747, 1106, 186,
	230, 1810, 1106, 2547, 254, 2544, 230, 1810, 232, 253,
	252, 230, 251, 1765, 872, 3225, 1757, 1758, 1367, 148,
	1810, 3232, 1367, 250, 148, 249, 248, 247, 2506, 246,
	1309, 4176, 2049, 2672, 151, 245, 244, 243, 242, 1788,
	241, 240, 239, 238, 237, 3983, 1760, 2773, 232, 187,
	3232, 1106, 1244, 1106, 232, 1106, 2030, 231, 1346, 232,
	2049, 1309, 1351, 3226, 4406, 2561, 2046, 2762, 2366, 236,
	224, 235, 1813, 234, 3227, 233, 3762, 3734, 3563, 225,
	151, 1759, 3303, 1471, 3171, 3154, 3145, 1309, 3056, 2940,
	2746, 1779, 3226, 1781, 1466, 187, 2722, 231, 1504, 3254,
	3226, 186, 2707, 231, 3, 1599, 1924, 1309, 231, 3216,
	224, 1316, 2559, 1306, 1309, 2261, 224, 2094, 2051, 225,
	2973, 224, 1106, 1947, 1106, 225, 1337, 1852, 1309, 1756,
	225, 1493, 1353, 1230, 1106, 1810, 1106, 1489, 3255, 1882,
	4598, 186, 1499, 1844, 4578, 1842, 1881, 866, 1555, 1558,
	2324, 1812, 186, 2549, 4557, 4463, 4391, 4385, 4268, 1882,
	4383, 1277, 1280, 1290, 1810, 1499, 1881, 4229, 1885, 1850,
	3210, 3211, 1810, 2507, 1331, 1782, 1783, 1784, 1785, 4183,
	4161, 4035, 1309, 4006, 4005, 1765, 3999, 1496, 1880, 1503,
	3998, 1509, 802, 1477, 3997, 3990, 1845, 1461, 3989, 2260,
	3987, 1106, 805, 1360, 1106, 1453, 1458, 3982, 3227, 3210,
	3211, 3979, 3228, 3229, 3230, 3226, 3221, 3219, 3220, 3212,
	3213, 3214, 3215, 3217, 3218, 1761, 1762, 1763, 1764, 1766,
	1767, 1812, 1787, 1789, 4178, 1326, 3978, 3227, 1761, 1762,
	1763, 1764, 1766, 1767, 3873, 3227, 3879, 1488, 1487, 1544,
	3766, 3765, 3764, 3210, 3211, 3744, 3711, 3710, 1597, 3709,
	1602, 1586, 1588, 3631, 3626, 3298, 3247, 3238, 1561, 2543,
	1611, 3209, 1616, 3206, 1618, 3205, 175, 175, 3203, 3198,
	3197, 3196, 3193, 3190, 3225, 1499, 3170, 1810, 3153, 3146,
	3144, 1780, 3006, 2708, 2532, 2755, 1207, 1106, 1106, 1106,
	1106, 1106, 1106, 1106, 1106, 3819, 1756, 1843, 2493, 2494,
	2495, 2519, 2505, 2499, 2234, 2501, 2502, 2500, 2487, 2488,
	2489, 2490, 2491, 2492, 1755, 2199, 2197, 3322, 1617, 230,
	1106, 4770, 4714, 4713, 1673, 3880, 1106, 4679, 1690, 3216,
	4632, 4630, 1232, 3222, 3223, 3224, 1577, 3657, 4520, 4455,
	3221, 3219, 3220, 3212, 3213, 3214, 3215, 3217, 3218, 4444,
	3227, 1603, 1498, 1810, 2975, 1317, 1047, 1337, 4441, 4440,
	1337, 4439, 3222, 3223, 3224, 4420, 4405, 232, 3216, 3221,
	3219, 3220, 3212, 3213, 3214, 3215, 3217, 3218, 3219, 3220,
	3212, 3213, 3214, 3215, 3217, 3218, 3252, 4404, 1598, 4407,
	1049, 4379, 4363, 4362, 230, 2473, 4348, 4345, 4344, 4339,
	1612, 1763, 1764, 1766, 1767, 1786, 4287, 4264, 4150, 1728,
	4227, 1734, 3216, 4210, 1832, 4209, 231, 230, 4190, 4189,
	4147, 4122, 2991, 4023, 4004, 3939, 1781, 3933, 3930, 224,
	3807, 1106, 1106, 1106, 1294, 3226, 3806, 1106, 225, 3790,
	3789, 1623, 232, 3787, 1228, 3726, 1228, 3714, 3621, 1830,
	1640, 3564, 3546, 2479, 3512, 3447, 3405, 3372, 3324, 3175,
	186, 1367, 3174, 3169, 1675, 232, 3135, 4177, 2952, 1888,
	1106, 1887, 1886, 796, 3226, 1883, 1875, 1873, 2753, 1985,
	796, 3880, 1459, 1309, 1812, 1470, 1294, 1901, 2752, 2719,
	2712, 231, 3221, 3219, 3220, 3212, 3213, 3214, 3215, 3217,
	3218, 1674, 2678, 1731, 224, 2557, 1829, 1810, 1946, 1902,
	1910, 1897, 1739, 225, 231, 1027, 1896, 1026, 1738, 2574,
	3295, 1895, 1894, 1893, 1733, 1892, 1884, 224, 1891, 1950,
	1890, 1226, 1499, 1226, 1889, 186, 225, 230, 1955, 1870,
	1964, 1735, 1869, 1958, 1868, 1867, 1810, 2013, 2974, 1309,
	1866, 1294, 1294, 1954, 1752, 1753, 1106, 1865, 186, 1931,
	1309, 1864, 1907, 1908, 1863, 1862, 1861, 1860, 1770, 1768,
	1769, 1761, 1762, 1763, 1764, 1766, 1767, 1859, 1106, 1047,
	3227, 1858, 230, 1938, 1367, 232, 1857, 1856, 2262, 1845,
	1194, 1876, 1877, 1831, 1757, 1758, 1828, 2110, 1823, 1575,
	1325, 3210, 3211, 1248, 1239, 4031, 3975, 3761, 3737, 3729,
	3157, 2083, 2744, 2710, 1580, 4247, 175, 4033, 3760, 3227,
	3210, 3211, 3210, 3211, 1760, 802, 1844, 3320, 1826, 2058,
	232, 1932, 802, 3541, 231, 805, 1942, 1953, 2092, 2560,
	1951, 4711, 805, 2057, 2085, 4091, 4703, 224, 2879, 4442,
	1223, 1350, 1223, 4340, 4331, 2085, 225, 4330, 1929, 1759,
	4181, 4336, 1222, 4124, 1222, 2085, 4123, 4090, 1959, 4026,
	3942, 3941, 3940, 1922, 3732, 2008, 3548, 3547, 186, 231,
	1342, 3883, 1882, 3408, 1924, 3608, 2558, 1726, 3833, 1881,
	1337, 1342, 224, 1900, 3195, 3194, 2862, 3117, 1979, 2844,
	2034, 225, 1345, 2163, 4386, 1047, 1941, 4384, 1940, 1939,
	1926, 1349, 1937, 1936, 1309, 1309, 1342, 1935, 2071, 3804,
	3374, 1691, 1348, 186, 1367, 3212, 3213, 3214, 3215, 3217,
	3218, 4267, 1965, 2036, 1007, 3495, 2038, 3494, 2060, 1851,
	230, 1639, 2043, 3557, 2283, 2545, 2045, 1865, 1865, 3439,
	1854, 2048, 2056, 4644, 3222, 3223, 3224, 1648, 2259, 4327,
	230, 3221, 3219, 3220, 3212, 3213, 3214, 3215, 3217, 3218,
	3216, 4618, 4603, 4590, 1224, 3479, 1224, 3030, 1982, 1008,
	2148, 1649, 2153, 2179, 3887, 2158, 3259, 3870, 232, 3216,
	3835, 3830, 3812, 230, 230, 3583, 3346, 230, 4231, 3659,
	2540, 2751, 1898, 2887, 4599, 2054, 2184, 2189, 232, 1878,
	3214, 3215, 3217, 3218, 3486, 2063, 2120, 2228, 1309, 1554,
	1309, 3163, 1309, 1482, 2841, 1320, 1276, 4612, 2088, 4076,
	2078, 4609, 230, 2546, 4283, 3531, 4074, 231, 1309, 1309,
	3782, 232, 232, 4260, 2895, 232, 2898, 2893, 4435, 1309,
	224, 2235, 3350, 4165, 1579, 1343, 4527, 231, 4417, 225,
	2126, 1309, 2886, 1309, 1309, 1309, 1627, 3377, 802, 1206,
	224, 4600, 3799, 3013, 2987, 3471, 4662, 858, 805, 225,
	232, 2990, 4693, 2840, 4663, 3602, 796, 3848, 1045, 4309,
	231, 231, 2269, 3321, 231, 3226, 4078, 2146, 1521, 2181,
	1005, 186, 2224, 224, 224, 1689, 1003, 224, 1106, 1001,
	2787, 999, 225, 225, 2282, 2547, 225, 2544, 4765, 2229,
	2241, 996, 4302, 1488, 1487, 4293, 2337, 4119, 2381, 231,
	4118, 3846, 3845, 2072, 186, 186, 3837, 1973, 186, 1470,
	1580, 2335, 224, 2145, 2805, 988, 2157, 2805, 1810, 3827,
	3826, 225, 3824, 3823, 1529, 3847, 2287, 3811, 3777, 2803,
	3776, 2264, 2803, 1483, 2190, 3475, 3474, 1810, 3314, 3168,
	1584, 1688, 1339, 186, 2249, 3167, 1106, 1044, 1106, 3166,
	3165, 859, 3121, 2904, 2903, 1106, 1470, 2379, 1985, 1985,
	1367, 2238, 1106, 1106, 1106, 1106, 1106, 1106, 1106, 1106,
	1106, 1106, 1106, 1106, 1106, 1106, 1106, 1106, 1106, 1106,
	1106, 1106, 1106, 1106, 1106, 1106, 1106, 1106, 1106, 1106,
	1106, 1106, 1106, 1106, 1106, 1106, 1106, 1106, 2275, 1106,
	2210, 1106, 1106, 1106, 1106, 2209, 2270, 4073, 802, 2251,
	3227, 1530, 2325, 1577, 1350, 2246, 1625, 2246, 805, 2243,
	2247, 4284, 1344, 2383, 1350, 1670, 2370, 1106, 2900, 2889,
	4261, 1106, 1106, 1326, 2255, 2549, 2256, 2877, 2876, 1106,
	3374, 1687, 2872, 1106, 2061, 1106, 1106, 1047, 2259, 1047,
	2871, 2309, 3407, 1367, 4694, 2870, 1046, 2842, 2849, 1106,
	1106, 1106, 1106, 2274, 1106, 1106, 1106, 1106, 1106, 1106,
	1106, 1106, 2848, 2809, 1349, 3352, 3437, 1332, 2842, 1340,
	2732, 2454, 2291, 1732, 1349, 2984, 2292, 2588, 1341, 2587,
	1106, 1106, 1106, 1106, 1106, 1106, 1106, 1106, 1106, 2380,
	2411, 4208, 2381, 1106, 2521, 2522, 1567, 1565, 1566, 1564,
	2358, 2846, 2759, 2736, 2299, 1228, 2355, 3076, 2521, 2537,
	1620, 2348, 1367, 1525, 2331, 2077, 2076, 1669, 2745, 2085,
	2087, 1228, 2117, 2394, 1767, 2208, 3212, 3213, 3214, 3215,
	3217, 3218, 993, 1262, 2583, 4041, 1670, 1106, 1367, 2293,
	1579, 2543, 3584, 2365, 3220, 3212, 3213, 3214, 3215, 3217,
	3218, 2379, 3218, 2629, 2629, 2643, 2113, 2521, 2367, 2120,
	2664, 2666, 1343, 2378, 2369, 2382, 2670, 1979, 1979, 2375,
	2368, 2866, 2859, 2860, 1027, 2485, 2398, 1027, 1027, 2399,
	2400, 4092, 2536, 2859, 2860, 2118, 2119, 1641, 2363, 2540,
	1484, 2128, 1226, 2859, 2860, 1343, 2695, 1667, 4040, 2279,
	1912, 1724, 1538, 2151, 2794, 1725, 4060, 3036, 1226, 2357,
	2720, 2227, 2724, 2300, 2132, 2114, 3079, 2469, 2687, 4075,
	2407, 2408, 2469, 1043, 3438, 4428, 3132, 772, 1621, 1543,
	2377, 1700, 1704, 1649, 1931, 861, 860, 2080, 1669, 2818,
	4056, 2832, 4662, 1309, 1309, 2481, 1637, 1982, 1982, 1342,
	2341, 3094, 2296, 3349, 3109, 3130, 1737, 1194, 2735, 983,
	1668, 2534, 1324, 4698, 1942, 2585, 4724, 2709, 2831, 1649,
	2586, 2129, 2897, 2589, 2739, 2590, 2591, 2248, 1047, 1339,
	3592, 1916, 2686, 1040, 1686, 1367, 2290, 4072, 1047, 3591,
	3070, 1550, 1047, 2380, 4057, 2694, 2776, 2699, 2782, 2477,
	2705, 2706, 2894, 2549, 2896, 2892, 2475, 2758, 2625, 2638,
	2655, 1223, 1339, 3648, 2668, 3645, 2021, 688, 3785, 1985,
	2676, 2677, 2688, 1222, 1235, 175, 4117, 1223, 3825, 1919,
	1884, 2692, 2693, 1929, 3808, 3796, 770, 2804, 1683, 1222,
	1548, 3822, 3769, 683, 1914, 4430, 3756, 2779, 3078, 4596,
	899, 2082, 2821, 4707, 4207, 3473, 3435, 1367, 4699, 1344,
	1626, 2747, 1917, 2808, 2845, 2790, 1233, 2378, 2899, 2354,
	997, 1309, 2347, 2869, 2847, 984, 997, 2133, 3075, 997,
	1047, 998, 2021, 3108, 2792, 2808, 1337, 1106, 1106, 2081,
	1106, 997, 1344, 2021, 2754, 2336, 3127, 3646, 4674, 1876,
	1877, 2810, 2364, 2784, 2778, 1915, 1973, 1973, 809, 1237,
	2334, 2775, 796, 4682, 1309, 2757, 1340, 2767, 2761, 2793,
	3128, 2770, 2807, 2771, 3133, 1341, 4499, 2890, 2785, 2777,
	2164, 4681, 856, 2730, 855, 1224, 3274, 3855, 3424, 1038,
	2791, 983, 4727, 2134, 2135, 1309, 2451, 2998, 4651, 1340,
	2768, 1224, 2867, 3794, 2465, 2851, 2772, 1309, 1341, 1309,
	3416, 3528, 3027, 2549, 2167, 1040, 2788, 2130, 4701, 2174,
	2783, 2931, 2356, 2956, 1309, 1236, 2298, 1701, 3957, 3077,
	2160, 2196, 2195, 2463, 2971, 2935, 1524, 3956, 4070, 2835,
	2937, 3856, 3425, 3101, 3102, 4052, 2861, 2863, 2864, 2865,
	4053, 2813, 2850, 2823, 2826, 2159, 1261, 2963, 892, 2131,
	1624, 1039, 983, 1527, 3417, 2868, 3037, 3038, 1918, 1106,
	4754, 2941, 4597, 3809, 2944, 2932, 2946, 3044, 3045, 3046,
	2031, 2140, 3854, 3423, 802, 4373, 1040, 880, 1979, 2155,
	2176, 4509, 2164, 2875, 805, 2806, 771, 2549, 3361, 3031,
	2820, 4055, 2885, 3529, 4564, 3415, 4565, 984, 4252, 2880,
	2874, 3057, 3054, 3058, 802, 985, 2930, 4058, 2118, 2119,
	2989, 3034, 2873, 2989, 805, 2967, 3039, 1106, 3040, 4436,
	3351, 4450, 2168, 1106, 1106, 2141, 1550, 3012, 4365, 1488,
	2938, 2852, 3450, 1698, 2175, 773, 1342, 3002, 2156, 769,
	1622, 4366, 2950, 4705, 3059, 3129, 4429, 2961, 3000, 737,
	2960, 4497, 175, 2449, 1702, 3131, 2452, 3081, 1982, 3083,
	3051, 4595, 994, 1294, 2459, 2136, 2139, 2123, 984, 1342,
	3273, 3528, 2982, 3061, 4367, 3063, 2993, 3065, 1246, 1106,
	1106, 3003, 4071, 2460, 3389, 1106, 4139, 3014, 2461, 3067,
	4498, 1584, 2466, 1584, 810, 811, 3032, 4700, 1106, 1106,
	3393, 3074, 2152, 3123, 1106, 1106, 3053, 2448, 2468, 4625,
	1106, 1871, 1294, 3318, 3001, 4204, 2805, 4650, 3062, 4626,
	3064, 2124, 3066, 3863, 684, 2723, 2164, 2089, 2090, 2111,
	3060, 2824, 3861, 2819, 4054, 3953, 4369, 1916, 1636, 1638,
	3388, 2137, 4220, 1699, 1703, 2295, 986, 4706, 1736, 1294,
	1294, 3395, 1055, 4673, 1323, 1106, 1106, 1106, 4547, 4368,
	3124, 1106, 2122, 900, 4538, 3084, 3136, 3137, 3086, 4102,
	3100, 1106, 706, 4061, 1822, 3173, 2691, 4370, 1234, 2289,
	2476, 4708, 2531, 3089, 4728, 1919, 2704, 985, 1106, 1046,
	3091, 3090, 3362, 4154, 893, 894, 3661, 1064, 3863, 987,
	2689, 685, 2394, 3795, 4715, 4149, 3095, 3861, 3947, 3865,
	3757, 1251, 4155, 3958, 3394, 3604, 3092, 1973, 1917, 1654,
	4457, 3110, 3878, 881, 882, 4594, 4661, 4659, 3156, 3151,
	3152, 4476, 4347, 3901, 3155, 813, 812, 2171, 3700, 3516,
	2216, 1459, 1912, 1909, 3864, 1249, 1242, 675, 1746, 1747,
	686, 4203, 687, 4002, 4282, 1746, 3954, 2397, 985, 2121,
	2073, 1741, 4356, 3122, 4733, 4416, 3902, 3841, 1470, 3282,
	3828, 3308, 3781, 2462, 3715, 3750, 3368, 3644, 1106, 1106,
	1106, 1106, 3517, 2464, 3865, 3508, 3364, 2972, 1106, 1106,
	1106, 2169, 2966, 1106, 2450, 814, 815, 2954, 2242, 2236,
	2230, 4140, 2070, 1106, 1228, 1367, 2222, 3147, 2202, 1106,
	1518, 1106, 3266, 3267, 4755, 4649, 1253, 4458, 3773, 3864,
	1228, 2682, 2387, 1916, 2032, 746, 1037, 4514, 986, 3751,
	3605, 2808, 2170, 3859, 2853, 4479, 2342, 2066, 1367, 3904,
	1746, 4170, 2951, 1264, 3959, 4325, 3234, 3235, 3236, 3237,
	1228, 1745, 3162, 1367, 4323, 3752, 2685, 3749, 1745, 4624,
	4263, 3380, 3376, 1047, 3283, 3375, 3249, 3575, 3728, 3115,
	2280, 1919, 3093, 1985, 1918, 3271, 3568, 1367, 2068, 3270,
	3301, 987, 3268, 895, 896, 4271, 1914, 1044, 4205, 1677,
	1676, 1226, 1671, 1309, 1309, 2729, 3288, 2684, 2728, 986,
	2727, 2726, 2683, 1470, 1917, 3869, 2958, 1226, 4423, 3862,
	4320, 1294, 883, 884, 3281, 1573, 1106, 1747, 1559, 2069,
	4371, 2825, 4152, 3278, 1747, 4131, 4372, 3701, 3960, 3313,
	1106, 1571, 1560, 3276, 898, 2829, 3702, 1226, 2110, 3297,
	1309, 3356, 3357, 1745, 3788, 1985, 3285, 1915, 3558, 2240,
	3482, 4003, 987, 3328, 3778, 4670, 4454, 4187, 1470, 2388,
	1470, 4250, 3378, 1106, 3331, 3382, 3316, 3035, 2936, 3277,
	4732, 2934, 2110, 3570, 3286, 3340, 3347, 3260, 2268, 1309,
	3289, 3290, 3306, 1630, 3862, 3294, 3333, 3334, 3569, 4272,
	3353, 3244, 3245, 3246, 4258, 3451, 4524, 3275, 1822, 4511,
	3287, 1309, 4009, 1309, 3717, 3302, 2854, 2855, 3379, 1720,
	1223, 3384, 4459, 3774, 3386, 2556, 4542, 1722, 2163, 4672,
	1367, 4517, 1222, 3292, 2350, 3293, 1223, 2163, 4186, 1719,
	4424, 1309, 3453, 3363, 3455, 1309, 1717, 3459, 1222, 4259,
	1695, 3465, 4614, 3440, 1693, 3310, 3311, 3312, 3410, 1337,
	4443, 1665, 3365, 3284, 3753, 4226, 1223, 1663, 1309, 1655,
	1918, 4001, 1661, 1659, 3412, 1309, 3868, 1309, 1222, 3241,
	3620, 1367, 3413, 3581, 1954, 3580, 1657, 3566, 796, 3433,
	3242, 3575, 3325, 3326, 1651, 3327, 3426, 3341, 1646, 1309,
	3568, 3491, 1979, 3337, 3427, 3329, 3429, 3348, 3309, 1644,
	1569, 1309, 3400, 3401, 3448, 3402, 3403, 3404, 4518, 3354,
	3204, 745, 3134, 2955, 3779, 2333, 3460, 4425, 1228, 2888,
	3466, 2843, 3524, 3336, 3461, 3428, 3338, 3339, 3467, 3027,
	2756, 3342, 2359, 3343, 1224, 3344, 3414, 1949, 3027, 1945,
	3500, 3396, 1723, 1309, 1309, 3319, 2143, 3522, 3442, 3443,
	1224, 3444, 3445, 3446, 1572, 3406, 1608, 3477, 3419, 3480,
	3507, 3600, 3599, 1741, 1979, 3420, 1309, 3515, 3072, 3421,
	1570, 3422, 1982, 897, 3533, 3071, 3042, 2376, 1682, 2304,
	1224, 2221, 3441, 2201, 3436, 2014, 3449, 3570, 1855, 3544,
	1619, 1542, 3576, 3571, 3572, 3573, 3574, 3472, 3462, 3468,
	2555, 1721, 3569, 3452, 2352, 1226, 1367, 4589, 2351, 1367,
	4103, 3832, 2120, 1718, 3831, 4510, 4104, 3369, 4087, 4168,
	1716, 2149, 4109, 4100, 1694, 4045, 3585, 2021, 1692, 995,
	802, 3900, 3891, 3844, 2851, 1664, 3829, 3802, 3484, 3518,
	805, 1662, 1106, 3503, 1982, 3525, 1660, 1658, 1106, 1106,
	3476, 3505, 1106, 1106, 1106, 3800, 1106, 3504, 1584, 3578,
	1656, 3780, 3511, 3506, 2144, 1106, 1985, 3496, 1650, 2985,
	2977, 3530, 1645, 3577, 1106, 4163, 3560, 2970, 3556, 1106,
	3539, 3598, 2962, 1643, 1568, 1367, 2948, 2933, 3542, 3543,
	3532, 2774, 3523, 2769, 1106, 2332, 2200, 2198, 3554, 2180,
	2165, 2138, 1367, 175, 175, 2125, 2112, 2053, 3597, 2050,
	2047, 2044, 1985, 1985, 1106, 1106, 2039, 1106, 1106, 1106,
	2037, 3616, 3617, 2033, 1223, 3588, 2698, 3589, 2024, 3590,
	4647, 1973, 3641, 3521, 4638, 1106, 1222, 1750, 1957, 1106,
	3606, 1985, 1985, 1106, 1106, 1106, 1106, 1106, 1106, 1106,
	1106, 1106, 1106, 1106, 1106, 1106, 1106, 1106, 1106, 1106,
	1106, 1106, 1106, 3579, 1106, 1203, 3673, 3594, 3674, 4663,
	4154, 3623, 1106, 1106, 1985, 3603, 1470, 1470, 3113, 1106,
	1047, 2074, 3087, 3595, 1000, 1002, 1004, 3085, 3463, 4155,
	1106, 1204, 3601, 2174, 4552, 4192, 4185, 4184, 4116, 4037,
	3028, 1228, 1228, 1973, 2362, 1106, 3576, 3571, 3572, 3573,
	3574, 3680, 3681, 3682, 3683, 3684, 3685, 3686, 3687, 3688,
	3689, 3690, 3691, 3692, 3693, 3694, 3695, 3696, 3697, 3698,
	3699, 3630, 3703, 3628, 1367, 3633, 3634, 3640, 2093, 1523,
	2805, 3746, 4358, 3647, 3649, 3650, 3656, 1751, 1224, 1470,
	2360, 2805, 3712, 2830, 2239, 2803, 3912, 3663, 4351, 2120,
	1714, 1715, 1285, 2294, 3671, 2328, 2827, 1284, 3672, 2323,
	4551, 2301, 4079, 3114, 2227, 4111, 1642, 3676, 4393, 2142,
	3733, 2833, 733, 1106, 4010, 1979, 3678, 3988, 1226, 1226,
	3704, 3391, 2834, 2856, 1114, 1754, 2361, 1318, 1252, 3651,
	3713, 1205, 3719, 1106, 4666, 2152, 3464, 4619, 1757, 1758,
	3705, 3754, 3755, 2834, 3724, 3725, 1757, 1758, 4657, 2947,
	689, 3840, 3670, 2330, 255, 3888, 3767, 3768, 2223, 3770,
	1329, 1979, 1979, 2150, 2895, 2893, 1106, 1106, 1760, 1285,
	262, 262, 262, 3839, 678, 679, 2902, 694, 678, 694,
	704, 175, 1285, 744, 3721, 3722, 789, 762, 2882, 2884,
	1979, 1979, 768, 2838, 2836, 1982, 3735, 4504, 3736, 262,
	846, 672, 2883, 1759, 2147, 700, 2837, 4470, 1106, 4464,
	1294, 1759, 4422, 4342, 2407, 3664, 4318, 4251, 3898, 877,
	3890, 3877, 3743, 1979, 3510, 262, 2992, 2669, 2059, 1966,
	4702, 4269, 1309, 3317, 4731, 1309, 2151, 1223, 1223, 3813,
	4544, 1982, 1982, 2407, 3679, 4545, 4544, 3210, 3211, 1222,
	1222, 4545, 1985, 1757, 1758, 2797, 2798, 3817, 3818, 3820,
	2795, 2796, 4466, 1629, 1490, 4676, 3980, 2551, 3759, 1628,
	1982, 1982, 3784, 3842, 2797, 3834, 3708, 2795, 2584, 1697,
	3897, 3836, 1696, 1309, 3763, 4343, 3805, 4303, 4113, 1106,
	4108, 2101, 3810, 4107, 3976, 3758, 2102, 1228, 1106, 3652,
	3914, 3457, 3454, 1982, 2998, 1849, 1848, 4717, 1309, 1309,
	1309, 4683, 1470, 4508, 3905, 4507, 4506, 4409, 3921, 4321,
	3851, 2851, 4297, 3771, 4248, 1309, 4245, 3772, 3852, 4243,
	4142, 3027, 4128, 3867, 4077, 4032, 3936, 3918, 3909, 3872,
	3798, 1309, 3791, 3514, 3513, 3385, 3906, 1367, 3857, 678,
	678, 3866, 3335, 3069, 1973, 3050, 3885, 262, 3049, 3048,
	3047, 1224, 1224, 3925, 2976, 2949, 2828, 2765, 3801, 2760,
	3803, 1367, 2749, 2748, 1106, 1106, 2737, 2480, 2353, 3937,
	1106, 1106, 1985, 2329, 1226, 1106, 1106, 2322, 1106, 3884,
	3889, 2321, 3853, 1106, 2320, 2319, 2021, 2021, 2318, 2237,
	1973, 1973, 2211, 3871, 1106, 2207, 3893, 3892, 2206, 2103,
	2205, 2204, 3907, 2203, 2027, 2026, 2025, 1835, 2023, 3910,
	1106, 1840, 1956, 1713, 3916, 3915, 2107, 1712, 3894, 1973,
	1973, 3920, 3943, 3945, 1652, 3961, 1537, 1536, 3928, 3908,
	3932, 3843, 3935, 2021, 3931, 1535, 1534, 1533, 3926, 3927,
	3944, 1532, 1531, 1526, 1522, 3962, 1520, 1519, 3934, 1476,
	1475, 3974, 1973, 1474, 1473, 1358, 1357, 1356, 1355, 1354,
	1322, 1979, 1321, 1271, 3955, 1270, 1269, 3946, 1268, 1267,
	1266, 1228, 2021, 1265, 1263, 1258, 3950, 3970, 1257, 1228,
	1256, 1255, 1254, 1367, 1186, 1367, 870, 8, 2104, 2109,
	2064, 1006, 1228, 1223, 2021, 992, 2021, 4427, 4059, 2349,
	92, 1528, 832, 1309, 1309, 1222, 86, 2172, 3797, 962,
	4541, 1512, 4449, 1367, 3369, 840, 4526, 3886, 3387, 2905,
	2303, 1653, 3301, 2305, 2021, 3296, 2711, 4496, 2021, 3984,
	3172, 4400, 4219, 2554, 1853, 4038, 4039, 3253, 1228, 88,
	1228, 1982, 1090, 4015, 1136, 4138, 4137, 4000, 4046, 3783,
	3017, 4135, 4134, 1970, 1972, 1054, 1370, 4563, 1226, 4080,
	2075, 1096, 1309, 2091, 2084, 2750, 1226, 4018, 4065, 2628,
	4065, 2105, 1367, 1113, 1309, 1110, 1974, 1309, 1976, 1226,
	4068, 1112, 4007, 1111, 4011, 1975, 4021, 1872, 1367, 1109,
	4014, 1979, 4016, 4017, 4012, 4013, 1969, 3896, 2996, 3540,
	1578, 4025, 1576, 4112, 4042, 4114, 4081, 4069, 4022, 964,
	2079, 2474, 2538, 4030, 3399, 3161, 1846, 1224, 2111, 1309,
	1309, 1070, 1092, 4082, 4083, 1226, 4036, 1226, 2535, 1247,
	1081, 1069, 3279, 175, 4132, 3258, 3527, 3742, 2386, 1309,
	4044, 850, 3207, 2541, 1238, 2652, 4085, 2644, 2640, 3345,
	2986, 1367, 1727, 4233, 4101, 4086, 1309, 4115, 1824, 4094,
	2997, 1352, 4097, 1074, 2472, 1837, 3139, 4095, 3397, 2396,
	4098, 1982, 4106, 4126, 3534, 3299, 1294, 1223, 2743, 4548,
	3660, 1228, 2215, 1202, 4129, 1223, 1201, 4171, 1245, 1222,
	1200, 1309, 1309, 1309, 4532, 4529, 2162, 1222, 1223, 4120,
	1973, 4099, 3929, 3489, 1367, 2067, 2789, 4160, 4125, 3398,
	1222, 4065, 4127, 2484, 3497, 1086, 1106, 1106, 1106, 4172,
	1469, 4188, 2346, 3264, 1365, 3559, 1539, 767, 1464, 2227,
	4276, 4096, 4156, 1098, 1367, 4166, 1809, 4133, 4175, 1106,
	4148, 2926, 1106, 1106, 1223, 2925, 1223, 4157, 4419, 1338,
	4191, 1336, 1106, 1335, 1334, 1985, 1222, 4690, 1222, 4753,
	1106, 1106, 4173, 4141, 3793, 3792, 229, 3107, 1226, 1748,
	1740, 226, 228, 227, 4143, 1367, 4158, 1309, 4211, 3747,
	3305, 4617, 3815, 3481, 4197, 23, 22, 4195, 21, 4199,
	112, 4194, 42, 20, 150, 1240, 2106, 128, 4159, 4179,
	1367, 1224, 147, 4206, 146, 120, 4200, 145, 1106, 1224,
	144, 143, 142, 149, 141, 140, 135, 1106, 139, 4180,
	4225, 138, 1224, 137, 136, 1106, 2188, 134, 1260, 1985,
	1973, 132, 133, 127, 131, 130, 129, 4222, 1106, 126,
	262, 1106, 262, 262, 125, 1289, 262, 1299, 124, 123,
	122, 4254, 121, 4239, 4240, 1106, 119, 118, 1319, 117,
	4228, 116, 1367, 4279, 115, 114, 4242, 762, 1224, 1309,
	1224, 113, 758, 755, 1309, 1309, 4265, 61, 60, 111,
	110, 19, 4216, 4255, 40, 14, 65, 1223, 66, 18,
	13, 262, 35, 262, 262, 1289, 91, 262, 262, 1222,
	4262, 4296, 102, 1299, 101, 4253, 3491, 36, 4333, 99,
	98, 34, 17, 4308, 262, 16, 1492, 15, 96, 1367,
	95, 33, 1309, 31, 4324, 4299, 11, 9, 37, 4294,
	1933, 12, 4298, 5, 180, 179, 182, 1516, 178, 181,
	1228, 1228, 90, 177, 176, 4305, 89, 29, 10, 172,
	4334, 3882, 4313, 4352, 4310, 81, 1541, 174, 173, 1299,
	1106, 1106, 4311, 262, 262, 171, 1289, 4316, 4322, 4317,
	4065, 4065, 4341, 4314, 1979, 4355, 170, 1106, 1985, 4332,
	4376, 4377, 169, 82, 79, 4353, 4361, 762, 168, 262,
	262, 85, 167, 80, 4357, 84, 4380, 83, 27, 6,
	64, 7, 4354, 4349, 4201, 3582, 105, 106, 38, 4360,
	4175, 1224, 877, 4359, 4374, 1106, 77, 76, 1106, 75,
	2391, 26, 63, 25, 213, 1228, 4312, 1226, 1226, 4300,
	4388, 4337, 212, 4389, 4390, 211, 210, 209, 1228, 208,
	207, 206, 201, 4415, 200, 4397, 205, 203, 1979, 202,
	2227, 204, 199, 216, 1982, 4065, 4288, 4289, 215, 221,
	220, 219, 218, 4408, 217, 214, 4410, 223, 4065, 198,
	1294, 197, 196, 194, 190, 4411, 2110, 4414, 4438, 189,
	193, 1106, 1106, 4398, 4437, 195, 4304, 262, 4306, 192,
	4307, 1106, 4432, 4453, 191, 4431, 1228, 188, 2021, 1228,
	222, 4286, 72, 1309, 165, 166, 71, 262, 164, 163,
	162, 161, 1226, 1309, 1309, 4445, 160, 159, 158, 4447,
	70, 24, 2, 1, 4392, 1226, 4065, 4487, 1982, 4065,
	1309, 0, 0, 0, 0, 0, 4473, 0, 0, 4475,
	2478, 4461, 4462, 0, 1106, 1106, 1223, 1223, 4468, 4460,
	4472, 0, 4465, 4467, 1106, 0, 1835, 0, 1222, 1222,
	4484, 4481, 4483, 0, 0, 2646, 4480, 4485, 4486, 0,
	0, 0, 0, 0, 0, 0, 0, 1948, 0, 0,
	0, 4491, 0, 1226, 4490, 0, 1226, 0, 0, 0,
	0, 4519, 1106, 1106, 0, 1106, 4501, 1979, 0, 4523,
	4505, 4492, 0, 4493, 4451, 0, 0, 0, 0, 0,
	2651, 0, 4546, 1973, 4550, 0, 4337, 4500, 4531, 4534,
	0, 0, 0, 4543, 0, 0, 0, 0, 4471, 4522,
	0, 1223, 4521, 0, 0, 0, 0, 0, 4568, 0,
	4572, 0, 0, 1222, 1223, 4540, 0, 0, 1106, 1106,
	1106, 0, 0, 4536, 0, 0, 1222, 4553, 4571, 0,
	0, 0, 4566, 0, 0, 4535, 0, 0, 4539, 4559,
	1224, 1224, 0, 0, 4567, 0, 0, 1982, 1106, 0,
	4606, 0, 0, 0, 4446, 0, 4601, 1973, 4585, 4586,
	0, 0, 0, 4588, 0, 4587, 0, 0, 0, 0,
	2095, 0, 1223, 0, 0, 1223, 0, 678, 0, 0,
	4629, 0, 0, 0, 1222, 4620, 0, 1222, 4627, 0,
	0, 0, 0, 0, 0, 0, 4643, 0, 262, 0,
	262, 4631, 1106, 0, 262, 0, 4641, 4602, 4604, 0,
	0, 0, 4628, 4642, 0, 4648, 4635, 1492, 1289, 262,
	4554, 262, 4636, 0, 4637, 1224, 4556, 262, 1492, 694,
	0, 0, 0, 0, 262, 1492, 0, 0, 1224, 4664,
	0, 4668, 4639, 4640, 4656, 4660, 4658, 0, 4645, 2028,
	4667, 1228, 4550, 1228, 2110, 0, 4669, 4531, 4671, 0,
	4534, 262, 4675, 4654, 4655, 0, 4688, 4685, 262, 4697,
	4686, 4453, 4684, 4680, 0, 0, 0, 4696, 4695, 4692,
	0, 4065, 0, 4065, 0, 0, 0, 0, 0, 0,
	4710, 4687, 0, 4689, 0, 0, 1224, 0, 0, 1224,
	4712, 1470, 0, 4709, 0, 2021, 1973, 0, 762, 0,
	2193, 0, 0, 0, 4718, 0, 0, 2021, 4725, 0,
	2021, 4719, 4691, 1106, 1106, 4721, 0, 0, 4723, 0,
	0, 0, 1106, 4726, 1106, 1106, 4729, 0, 1226, 0,
	1226, 0, 4743, 0, 4744, 0, 0, 4738, 4747, 4749,
	4735, 4748, 0, 2998, 4746, 0, 4742, 4741, 264, 0,
	0, 0, 0, 4745, 0, 4757, 4716, 0, 0, 4756,
	4759, 4752, 0, 4761, 0, 4762, 0, 4764, 0, 0,
	4760, 0, 2021, 4767, 4758, 0, 4616, 0, 0, 4060,
	0, 1106, 4772, 4768, 4774, 0, 0, 4769, 4775, 0,
	4777, 4778, 1294, 4764, 0, 4771, 0, 4736, 4737, 3210,
	3211, 0, 3228, 3229, 3230, 0, 0, 0, 0, 0,
	1757, 1758, 0, 4056, 0, 0, 0, 4049, 0, 0,
	1303, 3625, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1788, 4047, 0, 0, 0, 0, 0,
	1760, 0, 0, 4051, 0, 0, 0, 1223, 0, 1223,
	0, 0, 0, 0, 4773, 0, 0, 262, 0, 1222,
	262, 1222, 0, 0, 0, 0, 1813, 4057, 0, 0,
	0, 0, 0, 0, 3225, 1759, 1479, 0, 0, 0,
	0, 2101, 0, 0, 0, 2101, 2102, 0, 0, 0,
	2102, 0, 1757, 1758, 0, 1790, 1791, 1792, 1801, 1802,
	1803, 0, 0, 0, 0, 0, 0, 1514, 0, 4050,
	0, 0, 0, 262, 1794, 1788, 0, 262, 0, 3097,
	0, 0, 1760, 262, 0, 0, 0, 0, 0, 262,
	0, 1807, 0, 1551, 0, 0, 1068, 0, 0, 0,
	0, 0, 0, 0, 0, 262, 1061, 262, 1813, 0,
	0, 678, 0, 262, 0, 0, 0, 1759, 0, 0,
	1592, 0, 0, 0, 2651, 762, 2410, 1779, 3216, 877,
	0, 1224, 0, 1224, 1605, 0, 1776, 0, 0, 1765,
	0, 0, 3210, 3211, 0, 3228, 3229, 3230, 0, 0,
	0, 0, 0, 0, 262, 0, 1289, 262, 0, 2103,
	2646, 2646, 2021, 2103, 3624, 0, 0, 0, 0, 0,
	0, 762, 0, 0, 0, 0, 2107, 0, 262, 0,
	2107, 0, 0, 0, 0, 2302, 1787, 1789, 1631, 0,
	262, 262, 3232, 262, 0, 262, 0, 262, 0, 262,
	0, 0, 0, 0, 0, 2651, 2651, 0, 0, 0,
	0, 1782, 1783, 1784, 1785, 0, 0, 3225, 0, 2552,
	0, 1765, 0, 0, 2338, 0, 0, 2339, 4052, 2340,
	0, 0, 0, 4053, 3226, 0, 1757, 1758, 0, 0,
	73, 262, 262, 262, 262, 1780, 0, 0, 2104, 2109,
	0, 0, 2104, 2109, 0, 0, 0, 74, 1798, 1788,
	0, 1808, 0, 0, 0, 0, 1760, 744, 1787, 1789,
	0, 762, 0, 78, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4055, 1804, 0, 1805, 0, 0,
	0, 0, 1813, 0, 1774, 1775, 0, 0, 0, 0,
	4058, 1759, 0, 0, 0, 0, 1810, 0, 0, 0,
	0, 3216, 1796, 87, 2721, 0, 0, 1810, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1780, 0, 0,
	0, 2105, 0, 0, 0, 2105, 0, 0, 0, 0,
	2646, 2646, 2646, 2646, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 871, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2486, 49, 0, 107, 0, 0,
	1806, 0, 93, 104, 2099, 3232, 0, 0, 2111, 3227,
	0, 0, 2111, 0, 0, 2651, 2651, 2651, 2651, 0,
	1781, 0, 0, 0, 0, 0, 0, 0, 0, 1810,
	0, 0, 0, 0, 0, 1765, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3226, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4054, 2097, 0,
	94, 0, 3355, 0, 678, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1812, 262,
	0, 1786, 1787, 1789, 0, 0, 0, 0, 678, 0,
	0, 2800, 0, 0, 2921, 262, 4061, 678, 0, 2098,
	0, 0, 1781, 0, 0, 0, 0, 0, 0, 262,
	3210, 3211, 0, 3228, 3229, 3230, 0, 0, 0, 1810,
	0, 0, 0, 0, 0, 262, 1299, 2913, 2911, 1799,
	0, 0, 0, 0, 2915, 2917, 2907, 0, 0, 0,
	0, 1780, 0, 0, 3222, 3223, 3224, 0, 0, 0,
	0, 3221, 3219, 3220, 3212, 3213, 3214, 3215, 3217, 3218,
	1812, 0, 1770, 1768, 1769, 1761, 1762, 1763, 1764, 1766,
	1767, 0, 0, 0, 262, 1299, 0, 0, 0, 694,
	0, 0, 0, 0, 0, 3225, 2106, 0, 0, 2764,
	2106, 0, 3227, 0, 0, 262, 0, 0, 262, 0,
	0, 0, 262, 0, 262, 97, 0, 0, 0, 1289,
	0, 262, 262, 1810, 1299, 1299, 2780, 0, 0, 3210,
	3211, 262, 3228, 3229, 3230, 0, 0, 0, 0, 0,
	0, 0, 1797, 0, 0, 0, 0, 1771, 1772, 1778,
	1800, 1777, 1773, 0, 1770, 1768, 1769, 1761, 1762, 1763,
	1764, 1766, 1767, 0, 0, 0, 0, 183, 100, 0,
	103, 0, 0, 0, 0, 0, 2817, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 262, 0, 3216,
	0, 0, 0, 0, 0, 230, 1781, 0, 0, 0,
	262, 0, 0, 872, 3225, 0, 1068, 0, 148, 0,
	1068, 0, 0, 262, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2909, 0, 1451, 0, 0, 3233,
	1451, 0, 0, 0, 0, 2923, 0, 3222, 3223, 3224,
	262, 0, 0, 232, 3221, 3219, 3220, 3212, 3213, 3214,
	3215, 3217, 3218, 3232, 1812, 0, 2922, 2914, 2912, 2916,
	2918, 2908, 2910, 2924, 0, 0, 262, 2939, 0, 151,
	0, 2920, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 187, 0, 0, 0, 0, 0,
	0, 1492, 231, 0, 262, 3226, 262, 0, 3216, 0,
	0, 0, 0, 262, 2927, 224, 0, 0, 0, 0,
	0, 0, 0, 2981, 225, 0, 0, 0, 0, 0,
	0, 0, 0, 2817, 0, 678, 0, 0, 0, 0,
	0, 0, 0, 0, 3010, 877, 186, 2817, 2817, 1768,
	1769, 1761, 1762, 1763, 1764, 1766, 1767, 0, 0, 0,
	0, 0, 0, 0, 262, 2646, 2646, 0, 0, 0,
	0, 0, 3232, 0, 0, 0, 0, 1810, 0, 0,
	0, 0, 0, 262, 1289, 262, 0, 0, 2257, 1492,
	0, 1492, 1299, 262, 0, 0, 1289, 0, 1289, 0,
	1289, 0, 0, 0, 1303, 2271, 0, 0, 0, 0,
	2651, 2651, 0, 0, 3226, 2273, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2281, 0, 2284,
	2285, 2286, 0, 0, 0, 0, 0, 0, 0, 262,
	262, 262, 262, 1289, 0, 0, 1289, 0, 262, 0,
	3227, 262, 0, 0, 0, 2646, 2646, 2646, 2646, 2646,
	2646, 2646, 2646, 2646, 2646, 2646, 2646, 2646, 2646, 2646,
	2646, 2646, 2646, 2646, 2646, 0, 2646, 0, 0, 0,
	0, 0, 262, 0, 0, 0, 1810, 0, 0, 2928,
	262, 0, 0, 0, 0, 0, 0, 0, 2919, 0,
	2651, 2651, 2651, 2651, 2651, 2651, 2651, 2651, 2651, 2651,
	2651, 2651, 2651, 2651, 2651, 2651, 2651, 2651, 2651, 2651,
	0, 2651, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1757, 1758, 0, 0, 0, 0, 0, 3227,
	2621, 2622, 2623, 2624, 2617, 2618, 2619, 2620, 0, 0,
	0, 0, 0, 0, 0, 1788, 0, 0, 0, 0,
	0, 0, 1760, 0, 0, 3222, 3223, 3224, 0, 0,
	0, 3265, 3221, 3219, 3220, 3212, 3213, 3214, 3215, 3217,
	3218, 0, 0, 0, 0, 0, 0, 0, 1813, 0,
	0, 0, 0, 0, 0, 0, 1492, 1759, 0, 0,
	0, 0, 0, 0, 3291, 0, 0, 1779, 0, 0,
	0, 0, 0, 0, 0, 0, 1776, 0, 0, 3304,
	0, 0, 2597, 2598, 2599, 2600, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3323, 0, 2609, 2610, 2611, 2612, 2605,
	2606, 2607, 2608, 2613, 2614, 2615, 2616, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1451,
	3965, 0, 0, 0, 3222, 3223, 3224, 0, 0, 0,
	0, 3221, 3219, 3220, 3212, 3213, 3214, 3215, 3217, 3218,
	1793, 1782, 1783, 1784, 1785, 0, 0, 0, 0, 0,
	73, 1765, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 74, 0, 2593,
	2594, 2595, 2596, 2601, 2602, 2603, 2604, 0, 0, 0,
	0, 0, 0, 78, 0, 0, 0, 0, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1787, 1789,
	0, 0, 0, 0, 262, 0, 0, 0, 0, 678,
	0, 0, 0, 0, 678, 0, 0, 678, 0, 0,
	678, 678, 0, 87, 1774, 1775, 678, 0, 0, 0,
	0, 0, 0, 0, 262, 0, 1068, 0, 0, 0,
	0, 0, 1451, 0, 0, 0, 0, 1492, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1780, 0, 0,
	0, 0, 0, 871, 0, 0, 0, 0, 0, 0,
	0, 1492, 0, 0, 0, 0, 0, 107, 0, 2781,
	1303, 0, 93, 104, 262, 0, 0, 3304, 262, 262,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2817, 2817, 262,
	0, 3360, 0, 0, 0, 0, 0, 2817, 0, 1810,
	3371, 0, 0, 0, 0, 0, 0, 0, 2817, 3371,
	94, 2817, 3371, 0, 0, 3371, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	262, 262, 3360, 0, 262, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1786, 1451, 0, 3360, 0, 262, 0, 3432, 3432,
	0, 0, 1289, 0, 0, 0, 0, 0, 0, 0,
	0, 1793, 1781, 0, 0, 0, 0, 2929, 2817, 0,
	2817, 0, 3458, 2817, 3360, 0, 0, 2817, 3360, 0,
	0, 0, 1464, 0, 0, 1365, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 262, 0,
	1757, 1758, 0, 1790, 1791, 1792, 1801, 1802, 1803, 0,
	1812, 0, 262, 3485, 0, 2740, 3487, 2817, 0, 0,
	262, 0, 0, 1788, 262, 0, 0, 1299, 0, 0,
	1760, 0, 0, 0, 0, 97, 0, 0, 0, 1807,
	0, 0, 262, 0, 0, 0, 0, 2981, 0, 0,
	1289, 3637, 262, 0, 0, 2817, 1813, 678, 0, 0,
	3043, 0, 0, 0, 2817, 1759, 0, 0, 3653, 0,
	0, 0, 0, 0, 0, 1779, 0, 0, 0, 0,
	0, 0, 0, 0, 1776, 262, 2981, 183, 100, 2981,
	103, 1777, 1773, 0, 1770, 1768, 1769, 1761, 1762, 1763,
	1764, 1766, 1767, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 230, 0, 0, 0, 0,
	0, 3587, 0, 872, 0, 0, 1757, 1758, 148, 0,
	0, 1793, 0, 0, 0, 0, 0, 1793, 3593, 0,
	0, 1289, 262, 1793, 262, 0, 0, 0, 0, 1788,
	1289, 0, 0, 0, 0, 0, 1760, 0, 0, 1782,
	1783, 1784, 1785, 232, 0, 0, 0, 0, 0, 1765,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	262, 0, 1813, 0, 0, 0, 0, 0, 0, 151,
	0, 1759, 1757, 1758, 0, 0, 0, 0, 1451, 0,
	3745, 1779, 0, 0, 187, 0, 1798, 0, 0, 1808,
	1776, 0, 231, 0, 0, 1788, 1787, 1789, 0, 0,
	0, 0, 1760, 0, 2646, 224, 0, 0, 0, 0,
	0, 0, 1793, 1804, 225, 1805, 0, 1793, 3658, 0,
	0, 0, 1774, 1775, 0, 0, 1793, 0, 1813, 0,
	0, 1793, 0, 0, 0, 0, 186, 1759, 0, 0,
	1796, 0, 0, 0, 3619, 0, 0, 1779, 0, 2651,
	0, 0, 0, 0, 0, 1780, 1776, 0, 0, 0,
	2646, 0, 0, 0, 0, 1782, 1783, 1784, 1785, 0,
	73, 1451, 0, 0, 0, 1765, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 74, 0, 0,
	0, 0, 0, 0, 0, 1793, 0, 0, 1806, 0,
	0, 1793, 0, 78, 0, 2651, 0, 0, 0, 0,
	3614, 0, 0, 0, 0, 262, 262, 0, 0, 0,
	0, 0, 1787, 1789, 0, 0, 0, 1810, 0, 0,
	0, 1782, 1783, 1784, 1785, 0, 0, 678, 678, 0,
	1451, 1765, 0, 87, 0, 0, 0, 0, 1774, 1775,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1492,
	1492, 0, 0, 0, 0, 0, 1451, 0, 0, 0,
	0, 0, 0, 0, 1492, 1492, 0, 1492, 0, 1786,
	0, 1780, 0, 871, 0, 0, 0, 0, 1787, 1789,
	0, 0, 0, 0, 0, 49, 0, 107, 0, 0,
	1781, 0, 93, 104, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1774, 1775, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1799, 0, 2646,
	0, 1793, 1793, 1793, 1793, 1793, 1793, 1793, 1793, 0,
	775, 0, 0, 0, 0, 0, 0, 1780, 0, 0,
	0, 1793, 762, 1810, 0, 0, 73, 0, 1812, 0,
	94, 0, 0, 0, 1793, 786, 0, 0, 0, 0,
	0, 0, 0, 74, 2651, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3432, 0, 0, 0, 78,
	0, 0, 0, 0, 0, 0, 0, 0, 262, 0,
	0, 0, 0, 0, 0, 1786, 0, 0, 0, 2650,
	0, 0, 0, 1451, 0, 0, 0, 0, 3360, 1810,
	262, 0, 1793, 0, 0, 0, 1781, 0, 1793, 87,
	1797, 262, 0, 0, 0, 1771, 1772, 1778, 1800, 1777,
	1773, 262, 1770, 1768, 1769, 1761, 1762, 1763, 1764, 1766,
	1767, 262, 0, 0, 0, 0, 262, 0, 780, 0,
	0, 262, 0, 0, 787, 0, 0, 0, 0, 871,
	0, 1786, 0, 0, 0, 0, 0, 0, 785, 0,
	2817, 262, 0, 107, 1812, 1451, 0, 0, 93, 104,
	3010, 3010, 1781, 0, 0, 0, 877, 877, 2817, 0,
	0, 0, 2981, 2981, 0, 97, 877, 2817, 0, 0,
	0, 4020, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 784, 0, 0, 262,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4034,
	0, 0, 739, 0, 0, 0, 94, 0, 0, 0,
	1812, 0, 0, 0, 0, 0, 0, 183, 100, 0,
	103, 0, 0, 0, 0, 1777, 1773, 782, 1770, 1768,
	1769, 1761, 1762, 1763, 1764, 1766, 1767, 0, 0, 0,
	0, 0, 0, 0, 3469, 230, 0, 0, 0, 0,
	0, 0, 0, 872, 0, 0, 0, 0, 148, 0,
	0, 0, 3985, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3501, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 790, 3509, 0, 0,
	0, 1777, 1773, 232, 1770, 1768, 1769, 1761, 1762, 1763,
	1764, 1766, 1767, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 151,
	0, 0, 0, 0, 0, 262, 0, 0, 0, 3550,
	3551, 1492, 0, 262, 187, 0, 0, 0, 0, 0,
	0, 0, 231, 0, 0, 0, 262, 0, 0, 0,
	0, 97, 0, 0, 0, 224, 0, 0, 0, 777,
	0, 1299, 0, 0, 225, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1299, 0, 0, 0, 0, 0,
	0, 2817, 2817, 0, 3432, 2817, 1589, 0, 0, 781,
	1365, 0, 4067, 0, 4067, 1492, 0, 0, 0, 0,
	0, 0, 0, 183, 100, 2817, 103, 3371, 0, 0,
	0, 1492, 1492, 262, 3360, 0, 0, 0, 0, 0,
	4217, 0, 0, 738, 0, 0, 0, 3360, 0, 262,
	3360, 230, 262, 0, 3432, 0, 0, 788, 0, 872,
	0, 0, 0, 779, 148, 0, 0, 0, 0, 2817,
	0, 2817, 262, 0, 0, 0, 0, 0, 0, 0,
	0, 4217, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1911, 0, 0, 0, 0, 232,
	2817, 0, 0, 0, 0, 4145, 2410, 0, 0, 0,
	776, 0, 0, 0, 0, 0, 262, 0, 0, 0,
	0, 0, 0, 1793, 0, 151, 262, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 783, 0,
	187, 0, 0, 0, 0, 0, 0, 0, 231, 0,
	0, 0, 740, 0, 0, 4067, 0, 0, 1492, 0,
	0, 224, 0, 778, 0, 0, 0, 0, 2410, 0,
	225, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1793, 0, 0, 0, 1793, 0, 0, 0,
	0, 0, 186, 0, 0, 0, 0, 0, 0, 0,
	1793, 0, 0, 0, 0, 0, 0, 0, 0, 1793,
	1793, 1793, 1793, 1793, 1793, 1793, 1793, 1793, 1793, 1793,
	1793, 1793, 1793, 1793, 1793, 1793, 1793, 1793, 1793, 1793,
	1793, 1793, 1793, 1793, 1793, 1793, 1793, 1793, 1793, 1793,
	1793, 1793, 1793, 1793, 1793, 0, 0, 0, 0, 0,
	1793, 0, 1793, 1793, 1793, 1793, 0, 0, 0, 0,
	0, 0, 0, 0, 2650, 2650, 0, 0, 0, 0,
	2817, 0, 3371, 1451, 0, 4257, 0, 0, 0, 1793,
	0, 0, 1053, 262, 0, 0, 0, 0, 0, 0,
	4277, 0, 4277, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1451, 0, 0, 0,
	0, 0, 0, 0, 762, 0, 0, 0, 0, 0,
	0, 1451, 0, 0, 0, 3432, 0, 1289, 0, 0,
	1793, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3360, 0, 262, 1451, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1793, 0, 0, 1793, 4257, 0, 1793, 0, 0, 1793,
	0, 0, 2817, 1793, 1793, 1793, 1793, 1793, 1793, 1793,
	0, 0, 0, 0, 1068, 0, 0, 0, 0, 0,
	4346, 0, 0, 0, 0, 0, 0, 0, 1068, 0,
	0, 0, 1492, 0, 0, 0, 0, 0, 3849, 0,
	0, 0, 0, 0, 4067, 4067, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 262, 262, 0, 0, 0, 0, 0, 1793,
	0, 0, 3231, 0, 2650, 2650, 2650, 2650, 0, 0,
	0, 1793, 0, 1793, 0, 0, 3658, 0, 1793, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1492, 0, 0, 1492, 3432, 4413, 0, 0, 0,
	0, 1757, 1758, 4257, 3922, 3923, 3924, 0, 1451, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4067,
	0, 1303, 0, 0, 1788, 0, 0, 0, 0, 0,
	0, 1760, 4067, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 262, 0, 0, 1813, 0, 1451,
	0, 0, 0, 0, 0, 0, 1759, 0, 0, 0,
	0, 1757, 1758, 0, 4145, 0, 1779, 1801, 1802, 1803,
	0, 0, 0, 0, 0, 1776, 0, 0, 0, 0,
	4067, 0, 262, 4067, 1788, 0, 0, 0, 0, 0,
	0, 1760, 0, 3371, 0, 0, 0, 0, 0, 0,
	1807, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1813, 0, 1492,
	0, 1492, 0, 0, 0, 0, 1759, 0, 0, 3613,
	0, 0, 0, 0, 0, 0, 1779, 0, 0, 0,
	0, 0, 0, 0, 0, 1776, 0, 0, 0, 0,
	1782, 1783, 1784, 1785, 0, 4515, 0, 0, 0, 0,
	1765, 0, 1757, 1758, 0, 0, 0, 0, 4277, 0,
	0, 262, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1451, 1788, 0, 1451, 0, 0,
	2817, 0, 1760, 0, 0, 0, 0, 0, 0, 4027,
	4028, 0, 0, 0, 0, 0, 0, 1787, 1789, 0,
	0, 262, 0, 0, 0, 0, 0, 0, 1813, 0,
	1782, 1783, 1784, 1785, 0, 0, 0, 1759, 0, 0,
	1765, 0, 0, 1774, 1775, 0, 0, 0, 3658, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1793,
	1793, 0, 1793, 0, 0, 1492, 0, 0, 0, 73,
	0, 0, 0, 1451, 0, 0, 1780, 1798, 0, 0,
	1808, 0, 0, 0, 0, 0, 74, 1787, 1789, 0,
	1451, 0, 262, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 78, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1774, 1775, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1303, 0, 0, 0, 0,
	0, 1796, 0, 0, 4257, 0, 0, 0, 0, 0,
	1138, 1765, 87, 0, 0, 0, 1780, 0, 1810, 1314,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2817, 0,
	0, 0, 1053, 0, 0, 4067, 1053, 4067, 0, 0,
	1492, 0, 871, 0, 0, 1793, 0, 0, 1787, 1789,
	0, 0, 0, 0, 49, 0, 107, 4196, 0, 4198,
	1786, 93, 104, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1810, 0,
	0, 1781, 1451, 0, 1492, 1494, 0, 1500, 0, 1506,
	0, 0, 0, 0, 0, 0, 1793, 1793, 0, 2650,
	2650, 0, 0, 1793, 0, 0, 0, 1780, 0, 0,
	0, 0, 0, 3231, 3231, 0, 0, 1793, 1793, 94,
	3010, 0, 0, 0, 0, 0, 0, 1793, 0, 2817,
	1786, 0, 0, 0, 0, 0, 0, 0, 0, 1812,
	0, 1793, 0, 4244, 3010, 0, 0, 0, 0, 0,
	0, 1781, 0, 1793, 0, 0, 1595, 0, 1600, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1609, 0,
	1614, 0, 0, 0, 0, 0, 0, 0, 1799, 1810,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2650,
	2650, 2650, 2650, 2650, 2650, 2650, 2650, 2650, 2650, 2650,
	2650, 2650, 2650, 2650, 2650, 2650, 2650, 2650, 2650, 1812,
	2650, 3231, 3231, 3231, 3231, 0, 0, 0, 0, 0,
	1777, 1773, 0, 1770, 1768, 1769, 1761, 1762, 1763, 1764,
	1766, 1767, 0, 1229, 0, 1678, 0, 0, 1684, 0,
	4315, 0, 0, 0, 0, 0, 1793, 0, 0, 0,
	0, 0, 1781, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 97, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1797, 0, 0, 0, 0, 0, 0, 0, 1800,
	1777, 1773, 0, 1770, 1768, 1769, 1761, 1762, 1763, 1764,
	1766, 1767, 0, 0, 0, 0, 0, 0, 0, 0,
	1812, 0, 0, 0, 0, 0, 183, 100, 0, 103,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1814, 1815, 1816, 1817, 1818, 1819, 1820, 1821, 0,
	0, 0, 0, 0, 230, 0, 0, 0, 0, 0,
	0, 0, 872, 0, 0, 1757, 1758, 148, 1790, 1791,
	1792, 1801, 1802, 1803, 1834, 1451, 0, 1793, 0, 0,
	1847, 0, 0, 0, 0, 0, 0, 0, 1788, 0,
	0, 0, 0, 0, 0, 1760, 0, 0, 0, 1451,
	0, 0, 232, 0, 1807, 0, 1769, 1761, 1762, 1763,
	1764, 1766, 1767, 0, 0, 0, 0, 0, 0, 0,
	0, 1813, 0, 0, 0, 0, 0, 0, 151, 0,
	1759, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1779, 0, 0, 187, 0, 0, 0, 0, 0, 1776,
	0, 231, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 224, 0, 0, 0, 0, 0,
	0, 0, 0, 225, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1905, 1905, 1905, 0, 1303,
	1303, 0, 0, 0, 0, 1587, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1303, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1451, 0, 1451, 1782, 1783, 1784, 1785, 0, 0,
	0, 0, 0, 0, 1765, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1451, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1798, 0, 0, 1808, 0, 0, 0, 0, 0,
	0, 1787, 1789, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1793, 1793,
	0, 0, 1793, 3231, 3231, 1793, 0, 1774, 1775, 1793,
	1451, 0, 0, 0, 0, 0, 1793, 0, 0, 0,
	0, 0, 0, 0, 0, 1796, 1451, 0, 0, 1793,
	0, 0, 1053, 0, 0, 0, 0, 0, 0, 0,
	1780, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1793, 1793, 1793, 1793, 1793, 0, 0, 0,
	0, 0, 1793, 0, 1793, 0, 0, 3231, 3231, 3231,
	3231, 3231, 3231, 3231, 3231, 3231, 3231, 3231, 3231, 3231,
	3231, 3231, 3231, 3231, 3231, 3231, 3231, 0, 0, 1451,
	3231, 0, 0, 1793, 1793, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1793, 0, 0, 0, 0,
	0, 0, 1810, 0, 1793, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1451, 0, 1229, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1793, 0, 1786, 0, 0, 0, 0, 0,
	0, 0, 1451, 1793, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1781, 0, 0, 1229, 0,
	0, 0, 1229, 0, 0, 0, 0, 0, 0, 0,
	1229, 1793, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1799, 1451, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1229, 0, 0, 0, 0, 0, 0, 1451, 0,
	0, 0, 0, 1812, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1229, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1229, 0, 1068,
	0, 0, 0, 0, 1229, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1229, 0,
	1451, 0, 0, 0, 1793, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1797, 0, 0, 0, 0,
	1771, 1772, 1778, 1800, 1777, 1773, 0, 1770, 1768, 1769,
	1761, 1762, 1763, 1764, 1766, 1767, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1793, 1793, 1229, 0, 0, 1793, 1793, 1451, 0, 1793,
	1793, 0, 2326, 0, 1793, 0, 0, 0, 1793, 0,
	0, 0, 0, 1793, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2650, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2385, 0, 2389, 0, 0, 0, 0, 0, 0, 2403,
	0, 0, 0, 0, 2650, 0, 2412, 2413, 2414, 2415,
	2416, 2417, 2418, 2419, 2420, 2421, 2422, 2423, 2424, 2425,
	2426, 2427, 2428, 2429, 2430, 2431, 2432, 2433, 2434, 2435,
	2436, 2437, 2438, 2439, 2440, 2441, 2442, 2443, 2444, 2445,
	2446, 2447, 0, 2453, 0, 2455, 2456, 2457, 2458, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2482, 0, 0, 0, 0, 0, 0, 0, 1068,
	1068, 0, 0, 1834, 0, 0, 0, 2533, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2563, 2566, 2569, 2572, 0, 2576, 2577,
	2578, 2579, 2580, 2581, 2582, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2642, 0, 2654, 2656,
	2661, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1793,
	1793, 1793, 0, 0, 0, 0, 0, 0, 0, 0,
	1793, 1793, 3231, 2650, 0, 0, 0, 0, 0, 1793,
	0, 0, 1793, 0, 1229, 0, 1229, 0, 0, 0,
	0, 1068, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1229, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3231, 0, 0, 0, 0, 0, 0, 1986,
	0, 0, 0, 1229, 0, 1793, 0, 0, 0, 0,
	0, 0, 1793, 0, 0, 0, 0, 0, 0, 1793,
	0, 0, 0, 0, 0, 0, 0, 0, 1793, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1757, 1758, 0, 1790, 1791, 1792, 1801, 1802,
	1803, 0, 0, 0, 0, 0, 0, 0, 0, 821,
	0, 0, 0, 0, 1794, 1788, 0, 0, 0, 1229,
	0, 0, 1760, 0, 0, 0, 0, 0, 0, 823,
	1229, 1807, 0, 0, 824, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1813, 0,
	0, 0, 0, 0, 1229, 0, 0, 1759, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1779, 0, 0,
	0, 0, 0, 825, 3231, 842, 1776, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1793, 0, 0, 1793, 0,
	826, 0, 0, 0, 0, 827, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 851, 0, 0,
	0, 0, 0, 828, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1793, 849, 0, 0,
	0, 1782, 1783, 1784, 1785, 0, 0, 0, 0, 0,
	0, 1765, 0, 0, 0, 0, 0, 0, 0, 0,
	822, 2942, 2943, 0, 2945, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1229, 1229, 0, 0, 0, 0,
	0, 0, 829, 0, 1229, 830, 0, 0, 1798, 0,
	0, 1808, 0, 0, 0, 0, 853, 0, 1787, 1789,
	0, 739, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1757, 1758, 0, 0, 1804, 0, 1805, 0, 0,
	0, 0, 0, 0, 1774, 1775, 0, 0, 0, 0,
	0, 0, 0, 0, 1788, 0, 0, 0, 0, 0,
	0, 1760, 1796, 0, 0, 0, 0, 0, 0, 0,
	0, 1793, 0, 0, 0, 0, 0, 1780, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1813, 0, 0,
	0, 0, 1793, 0, 0, 852, 1759, 0, 1229, 0,
	1229, 0, 1229, 0, 0, 847, 1779, 0, 0, 0,
	0, 0, 0, 3068, 0, 1776, 0, 0, 1229, 1229,
	1806, 0, 0, 0, 0, 0, 0, 0, 0, 1229,
	0, 0, 0, 0, 0, 0, 0, 0, 1795, 0,
	0, 1229, 0, 1229, 1229, 1229, 0, 0, 0, 1810,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 831, 0, 0, 0, 0, 3125,
	0, 0, 0, 0, 0, 833, 0, 1814, 1815, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1782, 1783, 1784, 1785, 0, 0, 0, 0, 0, 0,
	1765, 1786, 0, 0, 0, 834, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1793, 0, 0,
	0, 1793, 1781, 0, 0, 0, 0, 0, 0, 0,
	0, 843, 0, 3119, 3120, 0, 0, 0, 0, 3126,
	0, 0, 738, 0, 0, 0, 0, 1787, 1789, 1799,
	0, 0, 0, 0, 820, 0, 844, 0, 3140, 3141,
	0, 0, 0, 0, 2533, 835, 0, 0, 1986, 1986,
	1229, 0, 0, 1774, 1775, 0, 0, 0, 0, 0,
	1812, 0, 0, 1218, 0, 0, 0, 0, 0, 0,
	841, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1780, 836, 0, 3150,
	0, 837, 856, 0, 855, 0, 0, 0, 838, 0,
	0, 0, 0, 0, 0, 3164, 0, 0, 0, 257,
	257, 674, 839, 0, 0, 0, 0, 848, 0, 0,
	0, 0, 3176, 857, 0, 854, 0, 0, 0, 0,
	0, 740, 1797, 0, 0, 0, 0, 1771, 1772, 1778,
	1800, 1777, 1773, 1229, 1770, 1768, 1769, 1761, 1762, 1763,
	1764, 1766, 1767, 0, 0, 0, 0, 3993, 1810, 0,
	0, 3992, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1229, 0, 0, 0, 0,
	1786, 0, 1229, 0, 0, 0, 0, 0, 0, 0,
	0, 1229, 2661, 2661, 2661, 0, 0, 0, 0, 0,
	0, 1781, 0, 0, 0, 0, 0, 1905, 1229, 0,
	0, 0, 0, 0, 0, 3269, 0, 0, 0, 0,
	0, 0, 0, 1757, 1758, 0, 1790, 1791, 1792, 1801,
	1802, 1803, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1794, 1788, 0, 0, 0,
	0, 0, 0, 1760, 0, 0, 0, 0, 0, 1812,
	0, 0, 1807, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1813,
	0, 0, 0, 0, 0, 0, 0, 0, 1759, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1779, 0,
	0, 0, 0, 0, 0, 0, 0, 1776, 0, 0,
	0, 0, 0, 1229, 1229, 0, 0, 0, 0, 0,
	1053, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1757, 1758, 0, 0, 1053, 0, 0, 0, 0, 0,
	1777, 1773, 0, 1770, 1768, 1769, 1761, 1762, 1763, 1764,
	1766, 1767, 0, 1788, 0, 1229, 0, 0, 0, 0,
	1760, 0, 0, 0, 0, 0, 0, 3390, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1782, 1783, 1784, 1785, 1813, 0, 0, 1986,
	0, 0, 1765, 0, 0, 1759, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1779, 0, 0, 0, 0,
	0, 0, 0, 0, 1776, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1229, 0, 1798,
	0, 0, 1808, 0, 0, 0, 0, 0, 0, 1787,
	1789, 1229, 0, 0, 0, 0, 0, 0, 0, 1757,
	1758, 0, 0, 0, 0, 0, 1804, 0, 1805, 0,
	0, 0, 0, 0, 0, 1774, 1775, 0, 3118, 0,
	0, 0, 1788, 0, 0, 0, 0, 0, 0, 1760,
	0, 0, 0, 1796, 1229, 0, 0, 0, 0, 1782,
	1783, 1784, 1785, 0, 0, 0, 0, 0, 1780, 1765,
	0, 0, 0, 0, 0, 1813, 0, 0, 0, 0,
	0, 0, 0, 0, 1759, 1229, 0, 0, 0, 0,
	0, 0, 0, 0, 1779, 0, 0, 1229, 0, 1229,
	0, 0, 0, 1776, 0, 0, 0, 0, 0, 0,
	0, 1806, 0, 0, 1229, 0, 1787, 1789, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1795,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1810, 0, 1774, 1775, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1780, 0, 0, 1782, 1783,
	1784, 1785, 0, 0, 0, 0, 0, 0, 1765, 0,
	0, 0, 1786, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1781, 0, 0, 2403, 0, 0, 0,
	0, 0, 3611, 3612, 0, 0, 3615, 0, 0, 0,
	3618, 0, 0, 0, 0, 1787, 1789, 0, 0, 3622,
	1799, 0, 0, 0, 0, 0, 0, 1810, 3629, 0,
	0, 0, 0, 3269, 0, 0, 0, 0, 0, 0,
	0, 1774, 1775, 0, 0, 0, 0, 0, 3642, 0,
	0, 1812, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3665, 3666,
	0, 3667, 3668, 3669, 1780, 0, 0, 0, 0, 1786,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3675,
	0, 0, 0, 3677, 0, 0, 0, 0, 0, 0,
	1781, 0, 0, 0, 0, 0, 0, 0, 0, 1275,
	0, 1275, 1275, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1797, 0, 0, 3706, 3707, 1771, 1772,
	1778, 1800, 1777, 1773, 0, 1770, 1768, 1769, 1761, 1762,
	1763, 1764, 1766, 1767, 3718, 0, 1810, 0, 3185, 0,
	0, 0, 3186, 0, 0, 0, 0, 0, 1812, 3727,
	1362, 0, 0, 0, 0, 0, 1468, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1786, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1781,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3775, 0, 1777,
	1773, 0, 1770, 1768, 1769, 1761, 1762, 1763, 1764, 1766,
	1767, 0, 0, 0, 0, 0, 0, 3786, 1593, 1594,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1812, 0, 0,
	0, 0, 0, 0, 1229, 1229, 0, 0, 0, 0,
	0, 3814, 0, 0, 0, 0, 0, 0, 0, 0,
	1229, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1229, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1229, 0, 0, 1229, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1986, 0, 0, 1705, 1229, 1777, 1773,
	0, 1770, 1768, 1769, 1761, 1762, 1763, 1764, 1766, 1767,
	0, 0, 0, 1229, 1229, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1905, 0, 0, 0, 0, 0, 0,
	1229, 0, 3917, 0, 0, 1986, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1229,
	0, 0, 0, 0, 0, 0, 1115, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1229, 0, 1229, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3963, 3964,
	1229, 0, 0, 0, 3968, 3969, 0, 0, 0, 3972,
	3973, 1229, 263, 263, 263, 1229, 0, 3977, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3981, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1229, 0,
	0, 263, 0, 0, 3986, 1229, 0, 1229, 0, 0,
	0, 1229, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 263, 0, 1229,
	0, 0, 1757, 1758, 0, 1790, 1791, 1792, 1801, 1802,
	1803, 1229, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1794, 1788, 0, 0, 1229, 0,
	0, 0, 1760, 1943, 0, 0, 0, 0, 0, 0,
	0, 1807, 0, 0, 0, 0, 0, 0, 1952, 0,
	1468, 0, 0, 1229, 1229, 0, 0, 0, 1813, 0,
	0, 0, 0, 0, 0, 0, 0, 1759, 0, 0,
	0, 0, 0, 0, 0, 0, 1229, 1779, 0, 0,
	0, 0, 0, 0, 0, 0, 1776, 0, 0, 0,
	1275, 0, 0, 0, 0, 0, 0, 1468, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1229, 0, 0, 1229,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1782, 1783, 1784, 1785, 0, 0, 0, 0, 0,
	0, 1765, 0, 0, 0, 0, 1986, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1229, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1798, 0,
	0, 1808, 1229, 0, 0, 0, 0, 0, 1787, 1789,
	0, 0, 1986, 1986, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1804, 0, 1805, 0, 0,
	0, 0, 0, 0, 1774, 1775, 0, 0, 0, 0,
	0, 1986, 1986, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1796, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1780, 0, 0,
	4212, 4213, 4214, 0, 1986, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2403, 0, 0, 4223, 4224, 0, 0,
	0, 1229, 1229, 0, 0, 0, 0, 0, 0, 0,
	1806, 0, 0, 0, 4232, 4235, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1795, 0,
	0, 0, 0, 0, 1229, 0, 0, 0, 0, 1810,
	0, 0, 2213, 0, 0, 0, 2220, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2233, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4278, 0, 0, 2245, 0, 2245, 0, 0, 4285,
	0, 0, 2252, 0, 0, 0, 0, 0, 0, 0,
	0, 1786, 4292, 0, 0, 1053, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4301,
	0, 0, 1781, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2220, 0, 0, 2277, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1799,
	0, 0, 0, 0, 0, 0, 0, 2297, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2310, 0, 2312, 0, 2314, 0, 2316, 0, 2317, 0,
	1812, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1229, 0, 0, 1229, 0, 0, 0, 0,
	2343, 2344, 2345, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1986, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1797, 0, 0, 0, 0, 1771, 1772, 1778,
	1800, 1777, 1773, 1229, 1770, 1768, 1769, 1761, 1762, 1763,
	1764, 1766, 1767, 0, 0, 0, 0, 1229, 0, 4418,
	0, 3991, 4421, 0, 0, 0, 0, 0, 1229, 1229,
	1229, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1229, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1229, 263, 0, 263, 263, 0, 1229, 263, 0,
	1312, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1053, 1053, 0, 0, 0,
	0, 1229, 0, 0, 0, 4469, 0, 0, 0, 0,
	0, 0, 1986, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 263, 1312, 263, 263, 0, 1312, 263,
	263, 0, 0, 0, 0, 0, 1312, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 263, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2403,
	0, 0, 0, 0, 0, 0, 0, 1312, 4235, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1312, 0, 263, 263, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1053, 2718, 0,
	0, 1229, 0, 1312, 0, 0, 0, 0, 0, 1229,
	1312, 263, 263, 1229, 0, 1229, 0, 0, 0, 0,
	0, 0, 1229, 0, 1312, 0, 0, 0, 0, 0,
	0, 0, 0, 1229, 1229, 0, 0, 0, 0, 0,
	0, 0, 0, 1229, 0, 0, 0, 0, 0, 0,
	0, 0, 4584, 4584, 4584, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1229, 0,
	1229, 0, 0, 0, 0, 0, 0, 0, 1312, 0,
	0, 0, 4605, 0, 2766, 0, 0, 1275, 0, 0,
	0, 1275, 1229, 1275, 0, 0, 0, 0, 0, 0,
	0, 0, 1229, 0, 1229, 1102, 0, 1229, 0, 263,
	2233, 0, 0, 0, 0, 0, 0, 0, 1229, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 263,
	0, 0, 0, 0, 0, 0, 4584, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1229,
	1229, 261, 261, 261, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1229,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	803, 1229, 0, 0, 0, 0, 1229, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 803, 0, 0, 0,
	0, 1229, 0, 0, 0, 0, 0, 0, 0, 1468,
	0, 1229, 1229, 1229, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1229, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4584, 4730, 0,
	0, 0, 0, 0, 1229, 0, 4734, 0, 0, 0,
	0, 0, 0, 2220, 0, 0, 0, 0, 0, 0,
	0, 0, 2233, 0, 0, 1986, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1229, 0, 1229, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1229, 0, 0, 3041, 0, 0, 0, 0, 1225, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3052, 0, 3055, 0, 263, 0, 0, 1986,
	0, 0, 0, 0, 0, 0, 0, 1312, 0, 0,
	0, 263, 263, 263, 0, 0, 0, 0, 0, 263,
	0, 0, 0, 0, 0, 0, 263, 0, 0, 1312,
	0, 0, 1229, 0, 0, 0, 0, 0, 0, 1229,
	0, 0, 0, 0, 1229, 1229, 0, 0, 3080, 1468,
	3082, 1468, 0, 263, 0, 0, 0, 3088, 0, 0,
	263, 0, 0, 0, 0, 0, 0, 0, 0, 1091,
	109, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1229,
	0, 1275, 1229, 0, 0, 1312, 0, 0, 0, 3116,
	0, 0, 0, 0, 0, 0, 1312, 0, 0, 0,
	1229, 1229, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1312, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1986, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 109, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1229, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1229, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1028, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1048, 0, 0, 263,
	1312, 1312, 263, 0, 0, 0, 1229, 0, 0, 1229,
	1312, 0, 0, 1229, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1229, 1229, 0, 0, 0, 1757, 1758,
	0, 1790, 1791, 1792, 1801, 1802, 1803, 0, 0, 0,
	1229, 0, 1212, 0, 0, 0, 0, 0, 0, 0,
	1794, 1788, 0, 0, 0, 263, 0, 0, 1760, 263,
	0, 0, 0, 0, 0, 263, 0, 1807, 0, 0,
	0, 263, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1813, 0, 0, 263, 0, 263,
	0, 0, 0, 1759, 0, 263, 0, 0, 0, 0,
	0, 0, 0, 1779, 1312, 0, 1312, 0, 1312, 0,
	0, 0, 1776, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1312, 1312, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1312, 263, 0, 0, 263,
	0, 0, 0, 0, 0, 0, 0, 1312, 0, 1312,
	1312, 1312, 0, 0, 0, 0, 0, 0, 0, 0,
	263, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 263, 263, 0, 263, 0, 263, 0, 263,
	0, 263, 0, 0, 0, 0, 0, 1782, 1783, 1784,
	1785, 0, 0, 0, 0, 0, 0, 1765, 0, 0,
	0, 0, 0, 1275, 0, 0, 0, 1468, 1468, 0,
	0, 261, 0, 261, 261, 0, 0, 261, 0, 0,
	0, 0, 0, 263, 263, 263, 263, 0, 0, 0,
	0, 0, 0, 0, 1798, 0, 0, 1808, 3358, 0,
	0, 0, 0, 0, 1787, 1789, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1804, 261, 1805, 261, 261, 0, 0, 261, 261,
	1774, 1775, 0, 0, 0, 0, 1312, 0, 0, 3409,
	3411, 0, 0, 2233, 0, 803, 0, 0, 1796, 0,
	0, 1229, 0, 1229, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1780, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 261, 261, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1806, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	261, 261, 0, 0, 1795, 0, 0, 0, 0, 1312,
	0, 0, 0, 0, 0, 1810, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3498,
	0, 0, 0, 3502, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1786, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1312, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1781, 0,
	0, 0, 0, 0, 3555, 0, 0, 0, 261, 0,
	0, 263, 0, 0, 1312, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1799, 0, 263, 261, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1812, 0, 0, 0,
	0, 3596, 0, 1468, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 263, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 109, 0, 263, 0, 3609,
	263, 0, 0, 0, 263, 0, 263, 0, 0, 0,
	0, 0, 0, 263, 263, 0, 0, 0, 0, 1312,
	1312, 0, 0, 263, 0, 0, 0, 0, 1797, 0,
	0, 0, 0, 1771, 1772, 1778, 1800, 1777, 1773, 0,
	1770, 1768, 1769, 1761, 1762, 1763, 1764, 1766, 1767, 0,
	0, 0, 0, 2529, 0, 0, 0, 2530, 0, 0,
	0, 1312, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 109, 0, 109, 0, 109, 0, 0, 0, 263,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 263, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 263, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1048, 109, 109, 0,
	0, 0, 263, 1312, 0, 0, 0, 0, 0, 0,
	0, 0, 109, 0, 109, 0, 0, 1312, 0, 1927,
	0, 1225, 0, 0, 109, 261, 109, 0, 263, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	261, 1927, 261, 0, 0, 0, 0, 0, 803, 0,
	0, 935, 0, 983, 0, 803, 263, 0, 263, 0,
	1312, 0, 0, 0, 0, 263, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 943, 0, 0,
	0, 0, 261, 0, 0, 0, 0, 0, 109, 261,
	0, 1312, 0, 957, 0, 941, 940, 0, 0, 0,
	0, 0, 0, 1312, 0, 1312, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 263, 959, 0, 0,
	1312, 0, 0, 942, 0, 0, 0, 0, 945, 0,
	0, 0, 0, 991, 0, 263, 0, 263, 0, 0,
	0, 0, 954, 955, 0, 263, 0, 0, 0, 0,
	0, 972, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 984,
	947, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1028, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 263, 263, 263, 263, 0, 0, 948, 0, 0,
	263, 1827, 0, 263, 0, 0, 981, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1833,
	0, 0, 0, 1839, 0, 0, 0, 0, 0, 2233,
	0, 0, 0, 0, 263, 0, 982, 0, 0, 0,
	2233, 0, 263, 0, 0, 0, 0, 0, 0, 0,
	3881, 950, 0, 0, 0, 0, 0, 0, 0, 939,
	0, 0, 0, 0, 0, 2233, 0, 0, 0, 0,
	3899, 0, 0, 0, 0, 0, 0, 0, 951, 952,
	0, 0, 0, 0, 0, 0, 0, 0, 261, 0,
	0, 803, 0, 0, 0, 0, 0, 960, 958, 0,
	0, 0, 0, 0, 0, 953, 0, 0, 0, 969,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 988, 980, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3948, 0,
	0, 0, 0, 1925, 261, 1928, 0, 109, 261, 0,
	0, 0, 0, 0, 261, 0, 0, 0, 0, 985,
	261, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 261, 0, 261, 0,
	0, 0, 0, 0, 261, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 946, 0, 0, 990, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 261, 0, 0, 261, 0,
	0, 0, 0, 0, 0, 0, 944, 0, 0, 0,
	976, 977, 0, 0, 0, 0, 0, 0, 0, 261,
	267, 0, 0, 979, 0, 0, 0, 0, 0, 0,
	0, 803, 261, 0, 261, 0, 261, 0, 261, 0,
	261, 0, 0, 0, 0, 974, 0, 0, 0, 0,
	0, 0, 989, 970, 0, 0, 963, 961, 0, 966,
	0, 0, 0, 0, 0, 967, 0, 0, 937, 0,
	986, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1312, 261, 261, 261, 261, 0, 0, 0, 0,
	0, 0, 938, 0, 0, 795, 0, 0, 0, 0,
	0, 0, 0, 0, 978, 0, 968, 0, 0, 0,
	0, 0, 965, 0, 1312, 0, 0, 0, 0, 0,
	0, 795, 0, 987, 0, 0, 0, 0, 0, 1312,
	0, 971, 4084, 0, 0, 0, 0, 0, 0, 0,
	949, 0, 0, 0, 0, 0, 0, 0, 2233, 0,
	0, 0, 0, 1312, 973, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1312,
	1312, 0, 0, 0, 0, 0, 263, 0, 0, 975,
	263, 263, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 263, 0, 0, 0, 2233, 1312, 0, 0, 0,
	0, 0, 0, 0, 0, 4167, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 263, 263, 0, 1312, 263, 0, 0, 0,
	0, 0, 0, 263, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1312, 263, 1312,
	0, 0, 0, 0, 0, 0, 0, 1048, 0, 1048,
	1225, 0, 0, 0, 0, 0, 1312, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1225, 1312, 0, 0,
	0, 1312, 0, 0, 0, 0, 0, 0, 0, 0,
	261, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1312, 0, 261, 0, 0, 0,
	263, 1312, 0, 1312, 0, 0, 0, 1312, 0, 0,
	0, 0, 0, 0, 263, 0, 0, 0, 0, 0,
	0, 0, 263, 0, 0, 1312, 263, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 109, 1312, 0, 0,
	0, 0, 4266, 0, 263, 261, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 261, 0, 0, 261,
	0, 0, 0, 261, 0, 261, 0, 0, 0, 1312,
	1312, 0, 261, 261, 0, 0, 0, 263, 0, 0,
	0, 0, 261, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1312, 2233, 0, 0, 0, 0, 0, 1028,
	0, 0, 1028, 1028, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1312, 0, 263, 1312, 263, 0, 261, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 261, 0, 0, 0, 0, 0, 0, 2471, 0,
	0, 0, 0, 0, 261, 0, 0, 0, 0, 0,
	0, 0, 263, 0, 0, 0, 0, 0, 1048, 0,
	0, 4387, 1468, 0, 0, 0, 0, 0, 1833, 0,
	0, 261, 1833, 0, 0, 0, 0, 0, 1107, 0,
	0, 0, 1757, 1758, 0, 1790, 1791, 1792, 1801, 1802,
	1803, 1312, 0, 0, 0, 0, 0, 803, 0, 0,
	0, 0, 0, 0, 1794, 1788, 0, 0, 1312, 0,
	0, 0, 1760, 0, 0, 0, 0, 0, 0, 0,
	0, 1807, 0, 0, 0, 261, 0, 803, 0, 0,
	0, 0, 0, 0, 261, 0, 0, 0, 1813, 0,
	0, 0, 0, 0, 1212, 0, 0, 1759, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1779, 0, 0,
	1928, 0, 0, 0, 0, 0, 1776, 0, 0, 0,
	0, 0, 0, 0, 0, 724, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 261, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 707, 109, 0, 0, 0,
	708, 4474, 0, 0, 261, 0, 261, 0, 0, 0,
	0, 0, 0, 0, 261, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 709,
	1312, 1782, 1783, 1784, 1785, 0, 0, 0, 0, 0,
	710, 1765, 0, 0, 0, 0, 0, 0, 0, 0,
	261, 261, 261, 261, 0, 0, 0, 0, 0, 261,
	0, 711, 261, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1310, 0, 0, 0, 1798, 0,
	4525, 1808, 0, 730, 0, 0, 0, 0, 1787, 1789,
	0, 0, 0, 261, 0, 0, 0, 0, 0, 0,
	0, 261, 0, 712, 0, 1804, 0, 1805, 0, 0,
	0, 0, 0, 0, 1774, 1775, 0, 0, 1368, 0,
	4561, 0, 1368, 0, 0, 0, 713, 0, 0, 0,
	1310, 0, 1796, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1780, 714, 0,
	0, 715, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1310, 0, 0, 0, 0, 0, 739, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	263, 0, 0, 0, 0, 0, 0, 1310, 0, 0,
	1806, 4621, 729, 0, 0, 0, 0, 0, 1312, 0,
	0, 1312, 263, 0, 0, 0, 0, 1310, 1795, 0,
	0, 0, 0, 263, 1310, 109, 0, 0, 109, 1810,
	109, 0, 0, 263, 0, 0, 0, 0, 1310, 0,
	0, 0, 0, 263, 0, 0, 0, 0, 263, 0,
	0, 0, 0, 263, 0, 0, 0, 0, 0, 1312,
	0, 726, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 109, 0, 0, 109, 0, 0,
	0, 1786, 0, 109, 1312, 1312, 1312, 0, 0, 0,
	0, 0, 1310, 0, 0, 0, 0, 0, 0, 0,
	0, 1312, 1781, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1312, 0, 0,
	0, 263, 0, 1312, 0, 0, 0, 0, 0, 1799,
	0, 717, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1312, 0, 0,
	0, 0, 0, 109, 0, 0, 0, 0, 0, 737,
	1812, 718, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1225,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1225, 0, 0, 738, 0,
	0, 0, 0, 0, 0, 719, 0, 0, 0, 0,
	734, 735, 732, 0, 0, 0, 0, 0, 727, 0,
	0, 720, 0, 0, 0, 1927, 0, 0, 0, 0,
	0, 0, 1797, 0, 0, 0, 0, 1771, 1772, 1778,
	1800, 1777, 1773, 0, 1770, 1768, 1769, 1761, 1762, 1763,
	1764, 1766, 1767, 0, 0, 0, 0, 0, 0, 0,
	0, 3627, 0, 721, 0, 728, 0, 0, 0, 1312,
	0, 1312, 0, 0, 722, 261, 0, 0, 0, 261,
	261, 0, 2471, 0, 0, 0, 0, 0, 723, 1312,
	1312, 0, 0, 731, 0, 0, 0, 0, 0, 1312,
	0, 0, 0, 1833, 0, 0, 0, 740, 0, 0,
	261, 0, 0, 0, 0, 0, 0, 0, 725, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 263, 0, 0, 1312, 0,
	0, 261, 261, 0, 0, 261, 0, 0, 1312, 0,
	1312, 263, 1927, 1312, 263, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1312, 0, 0, 261, 0, 724,
	0, 1368, 0, 0, 263, 0, 0, 0, 0, 0,
	0, 0, 0, 795, 0, 0, 0, 0, 0, 707,
	795, 0, 0, 1310, 708, 1312, 1312, 0, 0, 0,
	0, 0, 1311, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1312, 0, 0, 263, 0,
	0, 0, 0, 0, 0, 0, 0, 1312, 263, 261,
	0, 0, 1312, 709, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 803, 710, 0, 1369, 0, 0, 0,
	1369, 261, 0, 0, 0, 261, 0, 0, 1311, 1310,
	0, 0, 0, 0, 0, 711, 0, 1312, 1312, 1312,
	1310, 0, 0, 261, 0, 0, 0, 0, 0, 0,
	1312, 0, 0, 1225, 0, 0, 0, 730, 0, 1311,
	0, 0, 0, 1212, 1368, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 712, 0, 1212,
	1312, 0, 0, 0, 0, 1311, 261, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	713, 0, 0, 0, 0, 1311, 0, 0, 0, 0,
	0, 0, 1311, 0, 0, 0, 0, 0, 0, 0,
	0, 1312, 714, 1312, 0, 715, 1311, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 739, 0, 261, 0, 261, 1312, 0, 0, 0,
	0, 0, 0, 0, 0, 263, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 729, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1311, 261, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1310, 1310, 0, 0, 0, 0,
	0, 0, 0, 0, 1368, 0, 0, 0, 1312, 0,
	0, 0, 0, 0, 0, 1312, 263, 0, 0, 0,
	1312, 1312, 0, 0, 0, 726, 109, 109, 0, 109,
	109, 109, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1312, 0, 0, 1312, 0,
	0, 0, 109, 109, 0, 109, 109, 109, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 736, 0, 717, 0, 0, 1310, 0,
	1310, 0, 1310, 0, 263, 263, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1310, 1310,
	0, 0, 0, 737, 0, 718, 0, 0, 0, 1310,
	0, 0, 0, 0, 0, 0, 1225, 1225, 0, 0,
	0, 1310, 0, 1310, 1310, 1310, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 738, 0, 0, 0, 795, 0, 0, 719,
	0, 0, 0, 0, 734, 735, 732, 1212, 0, 0,
	1048, 0, 727, 0, 0, 720, 0, 0, 0, 0,
	0, 0, 0, 0, 109, 109, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 263, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 721, 0, 728,
	0, 0, 0, 0, 0, 0, 0, 0, 722, 0,
	0, 0, 0, 0, 263, 0, 0, 0, 0, 1312,
	0, 0, 723, 0, 0, 0, 0, 731, 0, 1312,
	1312, 0, 0, 0, 0, 0, 0, 0, 0, 1369,
	1368, 740, 0, 0, 0, 0, 1312, 0, 0, 0,
	0, 0, 725, 0, 0, 0, 0, 0, 0, 0,
	0, 1311, 0, 0, 0, 1757, 1758, 0, 1790, 1791,
	1792, 1801, 1802, 1803, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1794, 1788, 261,
	0, 0, 0, 0, 0, 1760, 0, 0, 0, 0,
	0, 0, 0, 263, 1807, 0, 0, 0, 0, 0,
	0, 261, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1813, 261, 0, 0, 0, 0, 1311, 0, 0,
	1759, 0, 261, 1368, 0, 0, 0, 0, 1311, 0,
	1779, 0, 261, 263, 0, 0, 0, 261, 0, 1776,
	0, 0, 261, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1369, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1225, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1368, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 109, 0, 263, 0, 0, 0, 0, 0,
	261, 0, 0, 0, 1782, 1783, 1784, 1785, 1368, 0,
	1212, 1212, 0, 0, 1765, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1798, 0, 0, 1808, 0, 0, 0, 0, 0,
	0, 1787, 1789, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1311, 1311, 0, 0, 0, 0, 1804, 0,
	1805, 0, 1369, 0, 0, 0, 0, 1774, 1775, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1796, 0, 0, 0, 0,
	0, 0, 0, 1310, 1310, 0, 0, 0, 0, 0,
	1780, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1225, 0, 0, 0,
	0, 0, 0, 0, 1225, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1368, 0, 1927, 0, 0,
	0, 0, 0, 1806, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1311, 0, 1311, 0,
	1311, 1795, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1810, 0, 0, 0, 1311, 1311, 0, 0,
	0, 0, 0, 1927, 0, 1927, 0, 1311, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1311,
	0, 1311, 1311, 1311, 261, 0, 0, 1368, 0, 1757,
	1758, 0, 1790, 1791, 1792, 1801, 1802, 1803, 0, 0,
	261, 1310, 0, 261, 1786, 0, 0, 0, 0, 0,
	109, 1794, 1788, 0, 0, 0, 0, 0, 0, 1760,
	0, 0, 0, 261, 0, 1781, 0, 0, 1807, 0,
	0, 0, 0, 0, 0, 0, 1212, 0, 0, 0,
	0, 0, 795, 0, 1310, 1813, 0, 0, 0, 0,
	0, 0, 1799, 0, 1759, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1779, 0, 0, 261, 0, 0,
	0, 0, 0, 1776, 0, 1310, 0, 261, 0, 0,
	0, 109, 0, 1812, 0, 0, 0, 1310, 0, 1310,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1310, 0, 1927, 0, 1369, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1782, 1783,
	1784, 1785, 0, 0, 0, 1797, 0, 0, 1765, 0,
	1771, 1772, 1778, 1800, 1777, 1773, 0, 1770, 1768, 1769,
	1761, 1762, 1763, 1764, 1766, 1767, 0, 0, 0, 0,
	0, 0, 0, 0, 3188, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1798, 0, 0, 1808, 0,
	0, 1369, 0, 0, 0, 1787, 1789, 0, 0, 0,
	0, 0, 0, 0, 109, 0, 0, 0, 0, 0,
	1212, 0, 1804, 0, 1805, 0, 0, 0, 1212, 0,
	0, 1774, 1775, 0, 261, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1796,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1780, 0, 0, 0, 0, 0,
	1369, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 261, 1369, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1806, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1795, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1810, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1927, 1927, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 109, 0, 0,
	0, 0, 0, 261, 261, 0, 0, 0, 1786, 0,
	109, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1311, 1311, 0, 0, 0, 0, 0, 0, 1781,
	0, 0, 0, 109, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1799, 0, 0, 0,
	0, 0, 0, 1369, 0, 0, 0, 0, 0, 0,
	1927, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1927, 0, 0, 0, 1812, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 261, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1368, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1369, 0, 0, 0, 0,
	0, 1927, 0, 261, 1927, 0, 0, 0, 1368, 1311,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1797,
	0, 0, 0, 1368, 1771, 1772, 1778, 1800, 1777, 1773,
	0, 1770, 1768, 1769, 1761, 1762, 1763, 1764, 1766, 1767,
	0, 0, 0, 0, 0, 0, 0, 1368, 3187, 0,
	0, 0, 1311, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1310, 1310, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1311, 0, 0, 0, 0, 0, 0,
	0, 0, 261, 0, 0, 1311, 0, 1311, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1310, 0, 1311, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1757, 1758, 0, 1790, 1791, 1792, 1801,
	1802, 1803, 261, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1794, 1788, 0, 0, 1310,
	0, 0, 0, 1760, 0, 0, 0, 0, 0, 0,
	0, 2471, 1807, 0, 0, 0, 0, 0, 0, 0,
	0, 1310, 0, 1310, 0, 0, 0, 0, 0, 1813,
	0, 0, 0, 0, 0, 0, 0, 0, 1759, 0,
	1368, 0, 0, 0, 0, 0, 0, 0, 1779, 0,
	0, 1310, 0, 261, 0, 1310, 0, 1776, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1310, 0,
	0, 0, 0, 0, 0, 1310, 0, 1310, 0, 0,
	0, 1368, 0, 0, 0, 0, 0, 0, 795, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1310,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1310, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1782, 1783, 1784, 1785, 1927, 0, 1927, 0,
	0, 0, 1765, 0, 0, 0, 0, 0, 109, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1310, 1310, 0, 0, 0, 0, 0,
	0, 0, 109, 0, 0, 0, 0, 0, 0, 1798,
	0, 0, 1808, 0, 0, 0, 1310, 0, 0, 1787,
	1789, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1804, 0, 1805, 0,
	0, 0, 0, 0, 0, 1774, 1775, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1368, 0, 0, 1368,
	0, 0, 0, 1796, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1780, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1806, 0, 0, 109, 0, 0, 0, 0, 0,
	109, 0, 0, 0, 0, 1368, 0, 0, 0, 1795,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1810, 0, 1368, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1369, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1786, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1369, 0, 0, 0,
	0, 0, 0, 1781, 0, 0, 0, 0, 0, 0,
	0, 1369, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1799, 0, 0, 0, 0, 1369, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1311, 1311, 0, 0, 0, 0, 0, 0, 0,
	0, 1812, 0, 0, 1368, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1311, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1797, 0, 0, 0, 1311, 1771, 1772,
	1778, 1800, 1777, 1773, 0, 1770, 1768, 1769, 1761, 1762,
	1763, 1764, 1766, 1767, 0, 0, 0, 0, 0, 1311,
	0, 1311, 3184, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1369, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1311,
	0, 0, 0, 1311, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1311, 0, 0, 0,
	0, 0, 0, 1311, 0, 1311, 0, 0, 0, 1369,
	0, 0, 1310, 0, 0, 1310, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1311, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1311,
	0, 0, 0, 0, 0, 1757, 1758, 0, 1790, 1791,
	1792, 1801, 1802, 1803, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1310, 0, 0, 0, 1794, 1788, 0,
	0, 0, 0, 0, 0, 1760, 0, 0, 0, 0,
	0, 1311, 1311, 0, 1807, 0, 0, 0, 1310, 1310,
	1310, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1813, 0, 0, 1311, 1310, 0, 0, 0, 0,
	1759, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1779, 1310, 0, 0, 0, 0, 0, 1368, 0, 1776,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1369, 0, 0, 1369, 0, 0,
	0, 1368, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1757, 1758, 0, 1790, 1791, 1792, 1801,
	1802, 1803, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1794, 1788, 0, 0, 0,
	0, 0, 0, 1760, 1782, 1783, 1784, 1785, 0, 0,
	0, 0, 1807, 0, 1765, 0, 0, 0, 0, 0,
	0, 0, 0, 1369, 0, 0, 0, 0, 0, 1813,
	0, 0, 0, 0, 0, 0, 0, 0, 1759, 0,
	1369, 0, 0, 0, 0, 0, 0, 0, 1779, 0,
	0, 1798, 0, 0, 1808, 0, 0, 1776, 0, 0,
	0, 1787, 1789, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1368, 0, 1368, 0, 0, 1804, 0,
	1805, 0, 0, 0, 0, 0, 0, 1774, 1775, 0,
	0, 0, 0, 1310, 1310, 0, 0, 0, 0, 0,
	0, 0, 0, 1368, 0, 1796, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1780, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1782, 1783, 1784, 1785, 0, 0, 0, 0,
	0, 0, 1765, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1310, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1368, 1806, 1310, 0, 0, 1310, 0, 0,
	0, 0, 1369, 0, 0, 0, 0, 0, 1368, 1798,
	0, 1795, 1808, 0, 0, 0, 0, 0, 0, 1787,
	1789, 0, 1810, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1804, 0, 1805, 1310,
	1310, 0, 0, 0, 0, 1774, 1775, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1310,
	0, 0, 0, 1796, 0, 0, 0, 0, 0, 0,
	0, 1368, 0, 0, 1786, 0, 1310, 0, 1780, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1781, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1310, 1310, 1310, 0, 0, 0, 0, 0, 0,
	0, 1806, 1799, 0, 1368, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1795,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1810, 0, 0, 1812, 1368, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1311, 0, 0, 1311, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1368, 0, 1310, 0, 0,
	0, 0, 1786, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1368, 1311, 0, 1781, 0, 1797, 0, 0, 0, 0,
	1771, 1772, 1778, 1800, 1777, 1773, 0, 1770, 1768, 1769,
	1761, 1762, 1763, 1764, 1766, 1767, 1311, 1311, 1311, 0,
	1799, 0, 0, 0, 3183, 0, 0, 0, 0, 0,
	0, 0, 0, 1311, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1311,
	0, 1812, 1368, 0, 0, 1369, 0, 0, 0, 1310,
	0, 0, 0, 0, 1310, 1310, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1369,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1368,
	0, 0, 1310, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1797, 0, 0, 0, 0, 1771, 1772,
	1778, 1800, 1777, 1773, 0, 1770, 1768, 1769, 1761, 1762,
	1763, 1764, 1766, 1767, 0, 0, 0, 0, 0, 0,
	0, 0, 3182, 0, 1757, 1758, 0, 1790, 1791, 1792,
	1801, 1802, 1803, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1794, 1788, 0, 0,
	0, 0, 0, 0, 1760, 0, 0, 0, 0, 0,
	0, 0, 0, 1807, 0, 0, 0, 0, 0, 0,
	0, 1369, 0, 1369, 0, 0, 0, 0, 0, 0,
	1813, 0, 0, 0, 0, 0, 0, 0, 0, 1759,
	0, 1311, 1311, 0, 0, 0, 0, 0, 0, 1779,
	0, 1369, 0, 0, 0, 0, 0, 0, 1776, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1311, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1369, 0, 1311, 1310, 0, 1311, 0, 0, 0, 0,
	0, 0, 0, 1310, 1310, 0, 1369, 0, 0, 0,
	0, 0, 0, 1782, 1783, 1784, 1785, 0, 0, 0,
	1310, 0, 0, 1765, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1311, 1311, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1311, 0, 0,
	1798, 0, 0, 1808, 0, 0, 0, 0, 0, 1369,
	1787, 1789, 0, 0, 1311, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1804, 0, 1805,
	0, 0, 0, 0, 0, 0, 1774, 1775, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1311,
	1311, 1311, 0, 0, 1796, 0, 0, 0, 0, 0,
	0, 0, 1369, 0, 0, 0, 0, 0, 0, 1780,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1369, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1806, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1795, 0, 0, 1369, 0, 1311, 0, 0, 0, 0,
	0, 1810, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1369, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1786, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1781, 0, 0, 0, 0, 0,
	1369, 0, 0, 0, 0, 0, 0, 1311, 0, 0,
	0, 0, 1311, 1311, 0, 0, 0, 0, 0, 0,
	0, 1799, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1812, 0, 0, 0, 0, 1369, 0, 0,
	1311, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1797, 0, 0, 0, 0, 1771,
	1772, 1778, 1800, 1777, 1773, 0, 1770, 1768, 1769, 1761,
	1762, 1763, 1764, 1766, 1767, 0, 0, 0, 0, 0,
	0, 0, 0, 2530, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1366, 0,
	0, 1311, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1311, 1311, 0, 0, 271, 273, 272, 274, 275,
	276, 277, 1371, 278, 279, 1372, 1373, 1374, 1311, 1375,
	620, 1376, 1377, 1378, 1379, 280, 281, 1169, 282, 283,
	284, 285, 286, 287, 621, 622, 0, 288, 623, 289,
	624, 1380, 625, 290, 291, 292, 293, 294, 295, 1381,
	1382, 0, 296, 626, 627, 628, 1383, 297, 298, 629,
	1384, 1313, 1385, 299, 300, 301, 302, 303, 304, 305,
	0, 1386, 307, 308, 309, 306, 310, 1387, 311, 0,
	312, 313, 314, 315, 316, 317, 1388, 318, 319, 320,
	1170, 321, 322, 323, 1389, 1390, 1392, 1391, 1393, 1394,
	1395, 324, 325, 326, 327, 328, 0, 329, 630, 631,
	1396, 333, 330, 331, 1397, 334, 332, 335, 1398, 336,
	337, 338, 1399, 1400, 339, 340, 341, 1401, 342, 343,
	1402, 344, 345, 346, 1403, 347, 348, 632, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 633, 634,
	360, 1404, 268, 1405, 0, 0, 0, 0, 361, 362,
	363, 635, 0, 0, 0, 364, 1406, 365, 366, 1407,
	1408, 1171, 367, 368, 636, 637, 369, 370, 371, 372,
	373, 374, 375, 376, 377, 1409, 378, 638, 1410, 639,
	379, 1411, 380, 381, 382, 383, 384, 640, 641, 642,
	463, 1173, 385, 386, 1412, 387, 388, 389, 390, 391,
	0, 0, 0, 269, 392, 393, 394, 396, 1413, 1172,
	395, 643, 644, 1414, 645, 1415, 397, 398, 1174, 646,
	1175, 399, 400, 401, 1176, 402, 0, 0, 0, 403,
	404, 405, 406, 407, 408, 1416, 409, 411, 410, 1417,
	412, 647, 1177, 413, 414, 1178, 1418, 415, 0, 0,
	0, 416, 417, 420, 1419, 1420, 418, 419, 421, 422,
	0, 423, 424, 426, 429, 425, 427, 428, 430, 443,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 445, 0, 444, 1179, 446, 447, 448, 453,
	455, 456, 451, 452, 454, 457, 458, 450, 1180, 459,
	449, 1421, 270, 1181, 460, 461, 1422, 648, 462, 649,
	464, 465, 1423, 0, 466, 0, 1424, 1425, 468, 469,
	470, 1426, 1427, 471, 472, 650, 1182, 473, 1183, 651,
	474, 475, 467, 476, 477, 478, 479, 480, 481, 482,
	483, 1428, 484, 485, 652, 486, 487, 488, 653, 489,
	490, 491, 654, 492, 655, 493, 494, 1429, 495, 496,
	0, 497, 498, 499, 500, 501, 502, 503, 656, 504,
	506, 505, 507, 1430, 508, 0, 509, 510, 511, 0,
	0, 0, 0, 512, 0, 514, 515, 516, 517, 513,
	518, 519, 520, 521, 1431, 522, 523, 524, 1184, 525,
	526, 527, 528, 657, 529, 0, 530, 531, 537, 538,
	539, 532, 533, 540, 541, 542, 543, 544, 1432, 546,
	547, 545, 548, 549, 550, 1433, 551, 552, 534, 535,
	553, 554, 1185, 555, 556, 557, 558, 559, 560, 561,
	658, 0, 562, 1434, 563, 564, 565, 567, 536, 568,
	573, 574, 659, 569, 570, 571, 572, 660, 576, 577,
	1435, 578, 579, 0, 575, 566, 1436, 580, 581, 582,
	583, 584, 585, 586, 354, 587, 1437, 588, 661, 662,
	663, 664, 1438, 597, 1439, 589, 590, 591, 665, 592,
	666, 1440, 593, 594, 595, 596, 0, 598, 599, 1441,
	1442, 600, 601, 602, 604, 605, 603, 606, 1443, 607,
	1444, 0, 608, 609, 610, 667, 668, 669, 1445, 612,
	611, 613, 670, 1446, 614, 1447, 1448, 1449, 1450, 615,
	616, 671, 617, 618, 619, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1366,
	0, 0, 0, 0, 0, 0, 0, 2696, 0, 0,
	0, 0, 0, 0, 0, 2697, 271, 273, 272, 274,
	275, 276, 277, 1371, 278, 279, 1372, 1373, 1374, 0,
	1375, 620, 1376, 1377, 1378, 1379, 280, 281, 1169, 282,
	283, 284, 285, 286, 287, 621, 622, 0, 288, 623,
	289, 624, 1380, 625, 290, 291, 292, 293, 294, 295,
	1381, 1382, 0, 296, 626, 627, 628, 1383, 297, 298,
	629, 1384, 1313, 1385, 299, 300, 301, 302, 303, 304,
	305, 0, 1386, 307, 308, 309, 306, 310, 1387, 311,
	0, 312, 313, 314, 315, 316, 317, 1388, 318, 319,
	320, 1170, 321, 322, 323, 1389, 1390, 1392, 1391, 1393,
	1394, 1395, 324, 325, 326, 327, 328, 0, 329, 630,
	631, 1396, 333, 330, 331, 1397, 334, 332, 335, 1398,
	336, 337, 338, 1399, 1400, 339, 340, 341, 1401, 342,
	343, 1402, 344, 345, 346, 1403, 347, 348, 632, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 633,
	634, 360, 1404, 268, 1405, 0, 0, 0, 0, 361,
	362, 363, 635, 0, 0, 0, 364, 1406, 365, 366,
	1407, 1408, 1171, 367, 368, 636, 637, 369, 370, 371,
	372, 373, 374, 375, 376, 377, 1409, 378, 638, 1410,
	639, 379, 1411, 380, 381, 382, 383, 384, 640, 641,
	642, 463, 1173, 385, 386, 1412, 387, 388, 389, 390,
	391, 0, 0, 0, 269, 392, 393, 394, 396, 1413,
	1172, 395, 643, 644, 1414, 645, 1415, 397, 398, 1174,
	646, 1175, 399, 400, 401, 1176, 402, 0, 0, 0,
	403, 404, 405, 406, 407, 408, 1416, 409, 411, 410,
	1417, 412, 647, 1177, 413, 414, 1178, 1418, 415, 0,
	0, 0, 416, 417, 420, 1419, 1420, 418, 419, 421,
	422, 0, 423, 424, 426, 429, 425, 427, 428, 430,
	443, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 445, 0, 444, 1179, 446, 447, 448,
	453, 455, 456, 451, 452, 454, 457, 458, 450, 1180,
	459, 449, 1421, 270, 1181, 460, 461, 1422, 648, 462,
	649, 464, 465, 1423, 0, 466, 0, 1424, 1425, 468,
	469, 470, 1426, 1427, 471, 472, 650, 1182, 473, 1183,
	651, 474, 475, 467, 476, 477, 478, 479, 480, 481,
	482, 483, 1428, 484, 485, 652, 486, 487, 488, 653,
	489, 490, 491, 654, 492, 655, 493, 494, 1429, 495,
	496, 0, 497, 498, 499, 500, 501, 502, 503, 656,
	504, 506, 505, 507, 1430, 508, 0, 509, 510, 511,
	0, 0, 0, 0, 512, 0, 514, 515, 516, 517,
	513, 518, 519, 520, 521, 1431, 522, 523, 524, 1184,
	525, 526, 527, 528, 657, 529, 0, 530, 531, 537,
	538, 539, 532, 533, 540, 541, 542, 543, 544, 1432,
	546, 547, 545, 548, 549, 550, 1433, 551, 552, 534,
	535, 553, 554, 1185, 555, 556, 557, 558, 559, 560,
	561, 658, 0, 562, 1434, 563, 564, 565, 567, 536,
	568, 573, 574, 659, 569, 570, 571, 572, 660, 576,
	577, 1435, 578, 579, 0, 575, 566, 1436, 580, 581,
	582, 583, 584, 585, 586, 354, 587, 1437, 588, 661,
	662, 663, 664, 1438, 597, 1439, 589, 590, 591, 665,
	592, 666, 1440, 593, 594, 595, 596, 0, 598, 599,
	1441, 1442, 600, 601, 602, 604, 605, 603, 606, 1443,
	607, 1444, 0, 608, 609, 610, 667, 668, 669, 1445,
	612, 611, 613, 670, 1446, 614, 1447, 1448, 1449, 1450,
	615, 616, 671, 617, 618, 619, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1366, 0,
	0, 0, 0, 3636, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3638, 271, 273, 272, 274, 275,
	276, 277, 1371, 278, 279, 1372, 1373, 1374, 0, 1375,
	620, 1376, 1377, 1378, 1379, 280, 281, 1169, 282, 283,
	284, 285, 286, 287, 621, 622, 0, 288, 623, 289,
	624, 1380, 625, 290, 291, 292, 293, 294, 295, 1381,
	1382, 0, 296, 626, 627, 628, 1383, 297, 298, 629,
	1384, 1313, 1385, 299, 300, 301, 302, 303, 304, 305,
	0, 1386, 307, 308, 309, 306, 310, 1387, 311, 0,
	312, 313, 314, 315, 316, 317, 1388, 318, 319, 320,
	1170, 321, 322, 323, 1389, 1390, 1392, 1391, 1393, 1394,
	1395, 324, 325, 326, 327, 328, 0, 329, 630, 631,
	1396, 333, 330, 331, 1397, 334, 332, 335, 1398, 336,
	337, 338, 1399, 1400, 339, 340, 341, 1401, 342, 343,
	1402, 344, 345, 346, 1403, 347, 348, 632, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 633, 634,
	360, 1404, 268, 1405, 0, 0, 0, 0, 361, 362,
	363, 635, 0, 0, 0, 364, 1406, 365, 366, 1407,
	1408, 1171, 367, 368, 636, 637, 369, 370, 371, 372,
	373, 374, 375, 376, 377, 1409, 378, 638, 1410, 639,
	379, 1411, 380, 381, 382, 383, 384, 640, 641, 642,
	463, 1173, 385, 386, 1412, 387, 388, 389, 390, 391,
	0, 0, 0, 269, 392, 393, 394, 396, 1413, 1172,
	395, 643, 644, 1414, 645, 1415, 397, 398, 1174, 646,
	1175, 399, 400, 401, 1176, 402, 0, 0, 0, 403,
	404, 405, 406, 407, 408, 1416, 409, 411, 410, 1417,
	412, 647, 1177, 413, 414, 1178, 1418, 415, 0, 0,
	0, 416, 417, 420, 1419, 1420, 418, 419, 421, 422,
	0, 423, 424, 426, 429, 425, 427, 428, 430, 443,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 445, 0, 444, 1179, 446, 447, 448, 453,
	455, 456, 451, 452, 454, 457, 458, 450, 1180, 459,
	449, 1421, 270, 1181, 460, 461, 1422, 648, 462, 649,
	464, 465, 1423, 0, 466, 0, 1424, 1425, 468, 469,
	470, 1426, 1427, 471, 472, 650, 1182, 473, 1183, 651,
	474, 475, 467, 476, 477, 478, 479, 480, 481, 482,
	483, 1428, 484, 485, 652, 486, 487, 488, 653, 489,
	490, 491, 654, 492, 655, 493, 494, 1429, 495, 496,
	0, 497, 498, 499, 500, 501, 502, 503, 656, 504,
	506, 505, 507, 1430, 508, 0, 509, 510, 511, 0,
	0, 0, 0, 512, 0, 514, 515, 516, 517, 513,
	518, 519, 520, 521, 1431, 522, 523, 524, 1184, 525,
	526, 527, 528, 657, 529, 0, 530, 531, 537, 538,
	539, 532, 533, 540, 541, 542, 543, 544, 1432, 546,
	547, 545, 548, 549, 550, 1433, 551, 552, 534, 535,
	553, 554, 1185, 555, 556, 557, 558, 559, 560, 561,
	658, 0, 562, 1434, 563, 564, 565, 567, 536, 568,
	573, 574, 659, 569, 570, 571, 572, 660, 576, 577,
	1435, 578, 579, 0, 575, 566, 1436, 580, 581, 582,
	583, 584, 585, 586, 354, 587, 1437, 588, 661, 662,
	663, 664, 1438, 597, 1439, 589, 590, 591, 665, 592,
	666, 1440, 593, 594, 595, 596, 0, 598, 599, 1441,
	1442, 600, 601, 602, 604, 605, 603, 606, 1443, 607,
	1444, 0, 608, 609, 610, 667, 668, 669, 1445, 612,
	611, 613, 670, 1446, 614, 1447, 1448, 1449, 1450, 615,
	616, 671, 617, 618, 619, 0, 0, 0, 0, 0,
	0, 1366, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4019, 271, 273,
	272, 274, 275, 276, 277, 1371, 278, 279, 1372, 1373,
	1374, 0, 1375, 620, 1376, 1377, 1378, 1379, 280, 281,
	1169, 282, 283, 284, 285, 286, 287, 621, 622, 0,
	288, 623, 289, 624, 1380, 625, 290, 291, 292, 293,
	294, 295, 1381, 1382, 0, 296, 626, 627, 628, 1383,
	297, 298, 629, 1384, 1313, 1385, 299, 300, 301, 302,
	303, 304, 305, 0, 1386, 307, 308, 309, 306, 310,
	1387, 311, 0, 312, 313, 314, 315, 316, 317, 1388,
	318, 319, 320, 1170, 321, 322, 323, 1389, 1390, 1392,
	1391, 1393, 1394, 1395, 324, 325, 326, 327, 328, 0,
	329, 630, 631, 1396, 333, 330, 331, 1397, 334, 332,
	335, 1398, 336, 337, 338, 1399, 1400, 339, 340, 341,
	1401, 342, 343, 1402, 344, 345, 346, 1403, 347, 348,
	632, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 633, 634, 360, 1404, 268, 1405, 0, 0, 0,
	0, 361, 362, 363, 635, 0, 0, 0, 364, 1406,
	365, 366, 1407, 1408, 1171, 367, 368, 636, 637, 369,
	370, 371, 372, 373, 374, 375, 376, 377, 1409, 378,
	638, 1410, 639, 379, 1411, 380, 381, 382, 383, 384,
	640, 641, 642, 463, 1173, 385, 386, 1412, 387, 388,
	389, 390, 391, 0, 0, 0, 269, 392, 393, 394,
	396, 1413, 1172, 395, 643, 644, 1414, 645, 1415, 397,
	398, 1174, 646, 1175, 399, 400, 401, 1176, 402, 0,
	0, 0, 403, 404, 405, 406, 407, 408, 1416, 409,
	411, 410, 1417, 412, 647, 1177, 413, 414, 1178, 1418,
	415, 0, 0, 0, 416, 417, 420, 1419, 1420, 418,
	419, 421, 422, 0, 423, 424, 426, 429, 425, 427,
	428, 430, 443, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 445, 0, 444, 1179, 446,
	447, 448, 453, 455, 456, 451, 452, 454, 457, 458,
	450, 1180, 459, 449, 1421, 270, 1181, 460, 461, 1422,
	648, 462, 649, 464, 465, 1423, 0, 466, 0, 1424,
	1425, 468, 469, 470, 1426, 1427, 471, 472, 650, 1182,
	473, 1183, 651, 474, 475, 467, 476, 477, 478, 479,
	480, 481, 482, 483, 1428, 484, 485, 652, 486, 487,
	488, 653, 489, 490, 491, 654, 492, 655, 493, 494,
	1429, 495, 496, 0, 497, 498, 499, 500, 501, 502,
	503, 656, 504, 506, 505, 507, 1430, 508, 0, 509,
	510, 511, 0, 0, 0, 0, 512, 0, 514, 515,
	516, 517, 513, 518, 519, 520, 521, 1431, 522, 523,
	524, 1184, 525, 526, 527, 528, 657, 529, 0, 530,
	531, 537, 538, 539, 532, 533, 540, 541, 542, 543,
	544, 1432, 546, 547, 545, 548, 549, 550, 1433, 551,
	552, 534, 535, 553, 554, 1185, 555, 556, 557, 558,
	559, 560, 561, 658, 0, 562, 1434, 563, 564, 565,
	567, 536, 568, 573, 574, 659, 569, 570, 571, 572,
	660, 576, 577, 1435, 578, 579, 0, 575, 566, 1436,
	580, 581, 582, 583, 584, 585, 586, 354, 587, 1437,
	588, 661, 662, 663, 664, 1438, 597, 1439, 589, 590,
	591, 665, 592, 666, 1440, 593, 594, 595, 596, 0,
	598, 599, 1441, 1442, 600, 601, 602, 604, 605, 603,
	606, 1443, 607, 1444, 0, 608, 609, 610, 667, 668,
	669, 1445, 612, 611, 613, 670, 1446, 614, 1447, 1448,
	1449, 1450, 615, 616, 671, 617, 618, 619, 0, 1366,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4218, 271, 273, 272, 274,
	275, 276, 277, 1371, 278, 279, 1372, 1373, 1374, 0,
	1375, 620, 1376, 1377, 1378, 1379, 280, 281, 1169, 282,
	283, 284, 285, 286, 287, 621, 622, 0, 288, 623,
	289, 624, 1380, 625, 290, 291, 292, 293, 294, 295,
	1381, 1382, 0, 296, 626, 627, 628, 1383, 297, 298,
	629, 1384, 1313, 1385, 299, 300, 301, 302, 303, 304,
	305, 0, 1386, 307, 308, 309, 306, 310, 1387, 311,
	0, 312, 313, 314, 315, 316, 317, 1388, 318, 319,
	320, 1170, 321, 322, 323, 1389, 1390, 1392, 1391, 1393,
	1394, 1395, 324, 325, 326, 327, 328, 0, 329, 630,
	631, 1396, 333, 330, 331, 1397, 334, 332, 335, 1398,
	336, 337, 338, 1399, 1400, 339, 340, 341, 1401, 342,
	343, 1402, 344, 345, 346, 1403, 347, 348, 632, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 633,
	634, 360, 1404, 268, 1405, 0, 0, 0, 0, 361,
	362, 363, 635, 0, 0, 0, 364, 1406, 365, 366,
	1407, 1408, 1171, 367, 368, 636, 637, 369, 370, 371,
	372, 373, 374, 375, 376, 377, 1409, 378, 638, 1410,
	639, 379, 1411, 380, 381, 382, 383, 384, 640, 641,
	642, 463, 1173, 385, 386, 1412, 387, 388, 389, 390,
	391, 0, 0, 0, 269, 392, 393, 394, 396, 1413,
	1172, 395, 643, 644, 1414, 645, 1415, 397, 398, 1174,
	646, 1175, 399, 400, 401, 1176, 402, 0, 0, 0,
	403, 404, 405, 406, 407, 408, 1416, 409, 411, 410,
	1417, 412, 647, 1177, 413, 414, 1178, 1418, 415, 0,
	0, 0, 416, 417, 420, 1419, 1420, 418, 419, 421,
	422, 0, 423, 424, 426, 429, 425, 427, 428, 430,
	443, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 445, 0, 444, 1179, 446, 447, 448,
	453, 455, 456, 451, 452, 454, 457, 458, 450, 1180,
	459, 449, 1421, 270, 1181, 460, 461, 1422, 648, 462,
	649, 464, 465, 1423, 0, 466, 0, 1424, 1425, 468,
	469, 470, 1426, 1427, 471, 472, 650, 1182, 473, 1183,
	651, 474, 475, 467, 476, 477, 478, 479, 480, 481,
	482, 483, 1428, 484, 485, 652, 486, 487, 488, 653,
	489, 490, 491, 654, 492, 655, 493, 494, 1429, 495,
	496, 0, 497, 498, 499, 500, 501, 502, 503, 656,
	504, 506, 505, 507, 1430, 508, 0, 509, 510, 511,
	0, 0, 0, 0, 512, 0, 514, 515, 516, 517,
	513, 518, 519, 520, 521, 1431, 522, 523, 524, 1184,
	525, 526, 527, 528, 657, 529, 0, 530, 531, 537,
	538, 539, 532, 533, 540, 541, 542, 543, 544, 1432,
	546, 547, 545, 548, 549, 550, 1433, 551, 552, 534,
	535, 553, 554, 1185, 555, 556, 557, 558, 559, 560,
	561, 658, 0, 562, 1434, 563, 564, 565, 567, 536,
	568, 573, 574, 659, 569, 570, 571, 572, 660, 576,
	577, 1435, 578, 579, 0, 575, 566, 1436, 580, 581,
	582, 583, 584, 585, 586, 354, 587, 1437, 588, 661,
	662, 663, 664, 1438, 597, 1439, 589, 590, 591, 665,
	592, 666, 1440, 593, 594, 595, 596, 0, 598, 599,
	1441, 1442, 600, 601, 602, 604, 605, 603, 606, 1443,
	607, 1444, 0, 608, 609, 610, 667, 668, 669, 1445,
	612, 611, 613, 670, 1446, 614, 1447, 1448, 1449, 1450,
	615, 616, 671, 617, 618, 619, 0, 1366, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4093, 271, 273, 272, 274, 275, 276,
	277, 1371, 278, 279, 1372, 1373, 1374, 0, 1375, 620,
	1376, 1377, 1378, 1379, 280, 281, 1169, 282, 283, 284,
	285, 286, 287, 621, 622, 0, 288, 623, 289, 624,
	1380, 625, 290, 291, 292, 293, 294, 295, 1381, 1382,
	0, 296, 626, 627, 628, 1383, 297, 298, 629, 1384,
	1313, 1385, 299, 300, 301, 302, 303, 304, 305, 0,
	1386, 307, 308, 309, 306, 310, 1387, 311, 0, 312,
	313, 314, 315, 316, 317, 1388, 318, 319, 320, 1170,
	321, 322, 323, 1389, 1390, 1392, 1391, 1393, 1394, 1395,
	324, 325, 326, 327, 328, 0, 329, 630, 631, 1396,
	333, 330, 331, 1397, 334, 332, 335, 1398, 336, 337,
	338, 1399, 1400, 339, 340, 341, 1401, 342, 343, 1402,
	344, 345, 346, 1403, 347, 348, 632, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 633, 634, 360,
	1404, 268, 1405, 0, 0, 0, 0, 361, 362, 363,
	635, 0, 0, 0, 364, 1406, 365, 366, 1407, 1408,
	1171, 367, 368, 636, 637, 369, 370, 371, 372, 373,
	374, 375, 376, 377, 1409, 378, 638, 1410, 639, 379,
	1411, 380, 381, 382, 383, 384, 640, 641, 642, 463,
	1173, 385, 386, 1412, 387, 388, 389, 390, 391, 0,
	0, 0, 269, 392, 393, 394, 396, 1413, 1172, 395,
	643, 644, 1414, 645, 1415, 397, 398, 1174, 646, 1175,
	399, 400, 401, 1176, 402, 0, 0, 0, 403, 404,
	405, 406, 407, 408, 1416, 409, 411, 410, 1417, 412,
	647, 1177, 413, 414, 1178, 1418, 415, 0, 0, 0,
	416, 417, 420, 1419, 1420, 418, 419, 421, 422, 0,
	423, 424, 426, 429, 425, 427, 428, 430, 443, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 445, 0, 444, 1179, 446, 447, 448, 453, 455,
	456, 451, 452, 454, 457, 458, 450, 1180, 459, 449,
	1421, 270, 1181, 460, 461, 1422, 648, 462, 649, 464,
	465, 1423, 0, 466, 0, 1424, 1425, 468, 469, 470,
	1426, 1427, 471, 472, 650, 1182, 473, 1183, 651, 474,
	475, 467, 476, 477, 478, 479, 480, 481, 482, 483,
	1428, 484, 485, 652, 486, 487, 488, 653, 489, 490,
	491, 654, 492, 655, 493, 494, 1429, 495, 496, 0,
	497, 498, 499, 500, 501, 502, 503, 656, 504, 506,
	505, 507, 1430, 508, 0, 509, 510, 511, 0, 0,
	0, 0, 512, 0, 514, 515, 516, 517, 513, 518,
	519, 520, 521, 1431, 522, 523, 524, 1184, 525, 526,
	527, 528, 657, 529, 0, 530, 531, 537, 538, 539,
	532, 533, 540, 541, 542, 543, 544, 1432, 546, 547,
	545, 548, 549, 550, 1433, 551, 552, 534, 535, 553,
	554, 1185, 555, 556, 557, 558, 559, 560, 561, 658,
	0, 562, 1434, 563, 564, 565, 567, 536, 568, 573,
	574, 659, 569, 570, 571, 572, 660, 576, 577, 1435,
	578, 579, 0, 575, 566, 1436, 580, 581, 582, 583,
	584, 585, 586, 354, 587, 1437, 588, 661, 662, 663,
	664, 1438, 597, 1439, 589, 590, 591, 665, 592, 666,
	1440, 593, 594, 595, 596, 0, 598, 599, 1441, 1442,
	600, 601, 602, 604, 605, 603, 606, 1443, 607, 1444,
	0, 608, 609, 610, 667, 668, 669, 1445, 612, 611,
	613, 670, 1446, 614, 1447, 1448, 1449, 1450, 615, 616,
	671, 617, 618, 619, 0, 1366, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3949, 271, 273, 272, 274, 275, 276, 277, 1371,
	278, 279, 1372, 1373, 1374, 0, 1375, 620, 1376, 1377,
	1378, 1379, 280, 281, 1169, 282, 283, 284, 285, 286,
	287, 621, 622, 0, 288, 623, 289, 624, 1380, 625,
	290, 291, 292, 293, 294, 295, 1381, 1382, 0, 296,
	626, 627, 628, 1383, 297, 298, 629, 1384, 1313, 1385,
	299, 300, 301, 302, 303, 304, 305, 0, 1386, 307,
	308, 309, 306, 310, 1387, 311, 0, 312, 313, 314,
	315, 316, 317, 1388, 318, 319, 320, 1170, 321, 322,
	323, 1389, 1390, 1392, 1391, 1393, 1394, 1395, 324, 325,
	326, 327, 328, 0, 329, 630, 631, 1396, 333, 330,
	331, 1397, 334, 332, 335, 1398, 336, 337, 338, 1399,
	1400, 339, 340, 341, 1401, 342, 343, 1402, 344, 345,
	346, 1403, 347, 348, 632, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 633, 634, 360, 1404, 268,
	1405, 0, 0, 0, 0, 361, 362, 363, 635, 0,
	0, 0, 364, 1406, 365, 366, 1407, 1408, 1171, 367,
	368, 636, 637, 369, 370, 371, 372, 373, 374, 375,
	376, 377, 1409, 378, 638, 1410, 639, 379, 1411, 380,
	381, 382, 383, 384, 640, 641, 642, 463, 1173, 385,
	386, 1412, 387, 388, 389, 390, 391, 0, 0, 0,
	269, 392, 393, 394, 396, 1413, 1172, 395, 643, 644,
	1414, 645, 1415, 397, 398, 1174, 646, 1175, 399, 400,
	401, 1176, 402, 0, 0, 0, 403, 404, 405, 406,
	407, 408, 1416, 409, 411, 410, 1417, 412, 647, 1177,
	413, 414, 1178, 1418, 415, 0, 0, 0, 416, 417,
	420, 1419, 1420, 418, 419, 421, 422, 0, 423, 424,
	426, 429, 425, 427, 428, 430, 443, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 445,
	0, 444, 1179, 446, 447, 448, 453, 455, 456, 451,
	452, 454, 457, 458, 450, 1180, 459, 449, 1421, 270,
	1181, 460, 461, 1422, 648, 462, 649, 464, 465, 1423,
	0, 466, 0, 1424, 1425, 468, 469, 470, 1426, 1427,
	471, 472, 650, 1182, 473, 1183, 651, 474, 475, 467,
	476, 477, 478, 479, 480, 481, 482, 483, 1428, 484,
	485, 652, 486, 487, 488, 653, 489, 490, 491, 654,
	492, 655, 493, 494, 1429, 495, 496, 0, 497, 498,
	499, 500, 501, 502, 503, 656, 504, 506, 505, 507,
	1430, 508, 0, 509, 510, 511, 0, 0, 0, 0,
	512, 0, 514, 515, 516, 517, 513, 518, 519, 520,
	521, 1431, 522, 523, 524, 1184, 525, 526, 527, 528,
	657, 529, 0, 530, 531, 537, 538, 539, 532, 533,
	540, 541, 542, 543, 544, 1432, 546, 547, 545, 548,
	549, 550, 1433, 551, 552, 534, 535, 553, 554, 1185,
	555, 556, 557, 558, 559, 560, 561, 658, 0, 562,
	1434, 563, 564, 565, 567, 536, 568, 573, 574, 659,
	569, 570, 571, 572, 660, 576, 577, 1435, 578, 579,
	0, 575, 566, 1436, 580, 581, 582, 583, 584, 585,
	586, 354, 587, 1437, 588, 661, 662, 663, 664, 1438,
	597, 1439, 589, 590, 591, 665, 592, 666, 1440, 593,
	594, 595, 596, 0, 598, 599, 1441, 1442, 600, 601,
	602, 604, 605, 603, 606, 1443, 607, 1444, 0, 608,
	609, 610, 667, 668, 669, 1445, 612, 611, 613, 670,
	1446, 614, 1447, 1448, 1449, 1450, 615, 616, 671, 617,
	618, 619, 0, 1366, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3654,
	271, 273, 272, 274, 275, 276, 277, 1371, 278, 279,
	1372, 1373, 1374, 0, 1375, 620, 1376, 1377, 1378, 1379,
	280, 281, 1169, 282, 283, 284, 285, 286, 287, 621,
	622, 0, 288, 623, 289, 624, 1380, 625, 290, 291,
	292, 293, 294, 295, 1381, 1382, 0, 296, 626, 627,
	628, 1383, 297, 298, 629, 1384, 1313, 1385, 299, 300,
	301, 302, 303, 304, 305, 0, 1386, 307, 308, 309,
	306, 310, 1387, 311, 0, 312, 313, 314, 315, 316,
	317, 1388, 318, 319, 320, 1170, 321, 322, 323, 1389,
	1390, 1392, 1391, 1393, 1394, 1395, 324, 325, 326, 327,
	328, 0, 329, 630, 631, 1396, 333, 330, 331, 1397,
	334, 332, 335, 1398, 336, 337, 338, 1399, 1400, 339,
	340, 341, 1401, 342, 343, 1402, 344, 345, 346, 1403,
	347, 348, 632, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 633, 634, 360, 1404, 268, 1405, 0,
	0, 0, 0, 361, 362, 363, 635, 0, 0, 0,
	364, 1406, 365, 366, 1407, 1408, 1171, 367, 368, 636,
	637, 369, 370, 371, 372, 373, 374, 375, 376, 377,
	1409, 378, 638, 1410, 639, 379, 1411, 380, 381, 382,
	383, 384, 640, 641, 642, 463, 1173, 385, 386, 1412,
	387, 388, 389, 390, 391, 0, 0, 0, 269, 392,
	393, 394, 396, 1413, 1172, 395, 643, 644, 1414, 645,
	1415, 397, 398, 1174, 646, 1175, 399, 400, 401, 1176,
	402, 0, 0, 0, 403, 404, 405, 406, 407, 408,
	1416, 409, 411, 410, 1417, 412, 647, 1177, 413, 414,
	1178, 1418, 415, 0, 0, 0, 416, 417, 420, 1419,
	1420, 418, 419, 421, 422, 0, 423, 424, 426, 429,
	425, 427, 428, 430, 443, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 445, 0, 444,
	1179, 446, 447, 448, 453, 455, 456, 451, 452, 454,
	457, 458, 450, 1180, 459, 449, 1421, 270, 1181, 460,
	461, 1422, 648, 462, 649, 464, 465, 1423, 0, 466,
	0, 1424, 1425, 468, 469, 470, 1426, 1427, 471, 472,
	650, 1182, 473, 1183, 651, 474, 475, 467, 476, 477,
	478, 479, 480, 481, 482, 483, 1428, 484, 485, 652,
	486, 487, 488, 653, 489, 490, 491, 654, 492, 655,
	493, 494, 1429, 495, 496, 0, 497, 498, 499, 500,
	501, 502, 503, 656, 504, 506, 505, 507, 1430, 508,
	0, 509, 510, 511, 0, 0, 0, 0, 512, 0,
	514, 515, 516, 517, 513, 518, 519, 520, 521, 1431,
	522, 523, 524, 1184, 525, 526, 527, 528, 657, 529,
	0, 530, 531, 537, 538, 539, 532, 533, 540, 541,
	542, 543, 544, 1432, 546, 547, 545, 548, 549, 550,
	1433, 551, 552, 534, 535, 553, 554, 1185, 555, 556,
	557, 558, 559, 560, 561, 658, 0, 562, 1434, 563,
	564, 565, 567, 536, 568, 573, 574, 659, 569, 570,
	571, 572, 660, 576, 577, 1435, 578, 579, 0, 575,
	566, 1436, 580, 581, 582, 583, 584, 585, 586, 354,
	587, 1437, 588, 661, 662, 663, 664, 1438, 597, 1439,
	589, 590, 591, 665, 592, 666, 1440, 593, 594, 595,
	596, 0, 598, 599, 1441, 1442, 600, 601, 602, 604,
	605, 603, 606, 1443, 607, 1444, 0, 608, 609, 610,
	667, 668, 669, 1445, 612, 611, 613, 670, 1446, 614,
	1447, 1448, 1449, 1450, 615, 616, 671, 617, 618, 619,
	0, 1366, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3483, 271, 273,
	272, 274, 275, 276, 277, 1371, 278, 279, 1372, 1373,
	1374, 0, 1375, 620, 1376, 1377, 1378, 1379, 280, 281,
	1169, 282, 283, 284, 285, 286, 287, 621, 622, 0,
	288, 623, 289, 624, 1380, 625, 290, 291, 292, 293,
	294, 295, 1381, 1382, 0, 296, 626, 627, 628, 1383,
	297, 298, 629, 1384, 1313, 1385, 299, 300, 301, 302,
	303, 304, 305, 0, 1386, 307, 308, 309, 306, 310,
	1387, 311, 0, 312, 313, 314, 315, 316, 317, 1388,
	318, 319, 320, 1170, 321, 322, 323, 1389, 1390, 1392,
	1391, 1393, 1394, 1395, 324, 325, 326, 327, 328, 0,
	329, 630, 631, 1396, 333, 330, 331, 1397, 334, 332,
	335, 1398, 336, 337, 338, 1399, 1400, 339, 340, 341,
	1401, 342, 343, 1402, 344, 345, 346, 1403, 347, 348,
	632, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 633, 634, 360, 1404, 268, 1405, 0, 0, 0,
	0, 361, 362, 363, 635, 0, 0, 0, 364, 1406,
	365, 366, 1407, 1408, 1171, 367, 368, 636, 637, 369,
	370, 371, 372, 373, 374, 375, 376, 377, 1409, 378,
	638, 1410, 639, 379, 1411, 380, 381, 382, 383, 384,
	640, 641, 642, 463, 1173, 385, 386, 1412, 387, 388,
	389, 390, 391, 0, 0, 0, 269, 392, 393, 394,
	396, 1413, 1172, 395, 643, 644, 1414, 645, 1415, 397,
	398, 1174, 646, 1175, 399, 400, 401, 1176, 402, 0,
	0, 0, 403, 404, 405, 406, 407, 408, 1416, 409,
	411, 410, 1417, 412, 647, 1177, 413, 414, 1178, 1418,
	415, 0, 0, 0, 416, 417, 420, 1419, 1420, 418,
	419, 421, 422, 0, 423, 424, 426, 429, 425, 427,
	428, 430, 443, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 445, 0, 444, 1179, 446,
	447, 448, 453, 455, 456, 451, 452, 454, 457, 458,
	450, 1180, 459, 449, 1421, 270, 1181, 460, 461, 1422,
	648, 462, 649, 464, 465, 1423, 0, 466, 0, 1424,
	1425, 468, 469, 470, 1426, 1427, 471, 472, 650, 1182,
	473, 1183, 651, 474, 475, 467, 476, 477, 478, 479,
	480, 481, 482, 483, 1428, 484, 485, 652, 486, 487,
	488, 653, 489, 490, 491, 654, 492, 655, 493, 494,
	1429, 495, 496, 0, 497, 498, 499, 500, 501, 502,
	503, 656, 504, 506, 505, 507, 1430, 508, 0, 509,
	510, 511, 0, 0, 0, 0, 512, 0, 514, 515,
	516, 517, 513, 518, 519, 520, 521, 1431, 522, 523,
	524, 1184, 525, 526, 527, 528, 657, 529, 0, 530,
	531, 537, 538, 539, 532, 533, 540, 541, 542, 543,
	544, 1432, 546, 547, 545, 548, 549, 550, 1433, 551,
	552, 534, 535, 553, 554, 1185, 555, 556, 557, 558,
	559, 560, 561, 658, 0, 562, 1434, 563, 564, 565,
	567, 536, 568, 573, 574, 659, 569, 570, 571, 572,
	660, 576, 577, 1435, 578, 579, 0, 575, 566, 1436,
	580, 581, 582, 583, 584, 585, 586, 354, 587, 1437,
	588, 661, 662, 663, 664, 1438, 597, 1439, 589, 590,
	591, 665, 592, 666, 1440, 593, 594, 595, 596, 0,
	598, 599, 1441, 1442, 600, 601, 602, 604, 605, 603,
	606, 1443, 607, 1444, 0, 608, 609, 610, 667, 668,
	669, 1445, 612, 611, 613, 670, 1446, 614, 1447, 1448,
	1449, 1450, 615, 616, 671, 617, 618, 619, 0, 1366,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2553, 271, 273, 272, 274,
	275, 276, 277, 1371, 278, 279, 1372, 1373, 1374, 0,
	1375, 620, 1376, 1377, 1378, 1379, 280, 281, 1169, 282,
	283, 284, 285, 286, 287, 621, 622, 0, 288, 623,
	289, 624, 1380, 625, 290, 291, 292, 293, 294, 295,
	1381, 1382, 0, 296, 626, 627, 628, 1383, 297, 298,
	629, 1384, 1313, 1385, 299, 300, 301, 302, 303, 304,
	305, 0, 1386, 307, 308, 309, 306, 310, 1387, 311,
	0, 312, 313, 314, 315, 316, 317, 1388, 318, 319,
	320, 1170, 321, 322, 323, 1389, 1390, 1392, 1391, 1393,
	1394, 1395, 324, 325, 326, 327, 328, 0, 329, 630,
	631, 1396, 333, 330, 331, 1397, 334, 332, 335, 1398,
	336, 337, 338, 1399, 1400, 339, 340, 341, 1401, 342,
	343, 1402, 344, 345, 346, 1403, 347, 348, 632, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 633,
	634, 360, 1404, 268, 1405, 0, 0, 0, 0, 361,
	362, 363, 635, 0, 0, 0, 364, 1406, 365, 366,
	1407, 1408, 1171, 367, 368, 636, 637, 369, 370, 371,
	372, 373, 374, 375, 376, 377, 1409, 378, 638, 1410,
	639, 379, 1411, 380, 381, 382, 383, 384, 640, 641,
	642, 463, 1173, 385, 386, 1412, 387, 388, 389, 390,
	391, 0, 0, 0, 269, 392, 393, 394, 396, 1413,
	1172, 395, 643, 644, 1414, 645, 1415, 397, 398, 1174,
	646, 1175, 399, 400, 401, 1176, 402, 0, 0, 0,
	403, 404, 405, 406, 407, 408, 1416, 409, 411, 410,
	1417, 412, 647, 1177, 413, 414, 1178, 1418, 415, 0,
	0, 0, 416, 417, 420, 1419, 1420, 418, 419, 421,
	422, 0, 423, 424, 426, 429, 425, 427, 428, 430,
	443, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 445, 0, 444, 1179, 446, 447, 448,
	453, 455, 456, 451, 452, 454, 457, 458, 450, 1180,
	459, 449, 1421, 270, 1181, 460, 461, 1422, 648, 462,
	649, 464, 465, 1423, 0, 466, 0, 1424, 1425, 468,
	469, 470, 1426, 1427, 471, 472, 650, 1182, 473, 1183,
	651, 474, 475, 467, 476, 477, 478, 479, 480, 481,
	482, 483, 1428, 484, 485, 652, 486, 487, 488, 653,
	489, 490, 491, 654, 492, 655, 493, 494, 1429, 495,
	496, 0, 497, 498, 499, 500, 501, 502, 503, 656,
	504, 506, 505, 507, 1430, 508, 0, 509, 510, 511,
	0, 0, 0, 0, 512, 0, 514, 515, 516, 517,
	513, 518, 519, 520, 521, 1431, 522, 523, 524, 1184,
	525, 526, 527, 528, 657, 529, 0, 530, 531, 537,
	538, 539, 532, 533, 540, 541, 542, 543, 544, 1432,
	546, 547, 545, 548, 549, 550, 1433, 551, 552, 534,
	535, 553, 554, 1185, 555, 556, 557, 558, 559, 560,
	561, 658, 0, 562, 1434, 563, 564, 565, 567, 536,
	568, 573, 574, 659, 569, 570, 571, 572, 660, 576,
	577, 1435, 578, 579, 0, 575, 566, 1436, 580, 581,
	582, 583, 584, 585, 586, 354, 587, 1437, 588, 661,
	662, 663, 664, 1438, 597, 1439, 589, 590, 591, 665,
	592, 666, 1440, 593, 594, 595, 596, 0, 598, 599,
	1441, 1442, 600, 601, 602, 604, 605, 603, 606, 1443,
	607, 1444, 0, 608, 609, 610, 667, 668, 669, 1445,
	612, 611, 613, 670, 1446, 614, 1447, 1448, 1449, 1450,
	615, 616, 671, 617, 618, 619, 1462, 0, 1366, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2194, 0, 271, 273, 272, 274, 275,
	276, 277, 1371, 278, 279, 1372, 1373, 1374, 0, 1375,
	620, 1376, 1377, 1378, 1379, 280, 281, 1169, 282, 283,
	284, 285, 286, 287, 621, 622, 0, 288, 623, 289,
	624, 1380, 625, 290, 291, 292, 293, 294, 295, 1381,
	1382, 0, 296, 626, 627, 628, 1383, 297, 298, 629,
	1384, 1313, 1385, 299, 300, 301, 302, 303, 304, 305,
	0, 1386, 307, 308, 309, 306, 310, 1387, 311, 0,
	312, 313, 314, 315, 316, 317, 1388, 318, 319, 320,
	1170, 321, 322, 323, 1389, 1390, 1392, 1391, 1393, 1394,
	1395, 324, 325, 326, 327, 328, 0, 329, 630, 631,
	1396, 333, 330, 331, 1397, 334, 332, 335, 1398, 336,
	337, 338, 1399, 1400, 339, 340, 341, 1401, 342, 343,
	1402, 344, 345, 346, 1403, 347, 348, 632, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 633, 634,
	360, 1404, 268, 1405, 0, 0, 0, 0, 361, 362,
	363, 635, 0, 0, 0, 364, 1406, 365, 366, 1407,
	1408, 1171, 367, 368, 636, 637, 369, 370, 371, 372,
	373, 374, 375, 376, 377, 1409, 378, 638, 1410, 639,
	379, 1411, 380, 381, 382, 383, 384, 640, 641, 642,
	463, 1173, 385, 386, 1412, 387, 388, 389, 390, 391,
	0, 0, 0, 269, 392, 393, 394, 396, 1413, 1172,
	395, 643, 644, 1414, 645, 1415, 397, 398, 1174, 646,
	1175, 399, 400, 401, 1176, 402, 0, 0, 0, 403,
	404, 405, 406, 407, 408, 1416, 409, 411, 410, 1417,
	412, 647, 1177, 413, 414, 1178, 1418, 415, 0, 0,
	0, 416, 417, 420, 1419, 1420, 418, 419, 421, 422,
	0, 423, 424, 426, 429, 425, 427, 428, 430, 443,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 445, 0, 444, 1179, 446, 447, 448, 453,
	455, 456, 451, 452, 454, 457, 458, 450, 1180, 459,
	449, 1421, 270, 1181, 460, 461, 1422, 648, 462, 649,
	464, 465, 1423, 0, 466, 0, 1424, 1425, 468, 469,
	470, 1426, 1427, 471, 472, 650, 1182, 473, 1183, 651,
	474, 475, 467, 476, 477, 478, 479, 480, 481, 482,
	483, 1428, 484, 485, 652, 486, 487, 488, 653, 489,
	490, 491, 654, 492, 655, 493, 494, 1429, 495, 496,
	0, 497, 498, 499, 500, 501, 502, 503, 656, 504,
	506, 505, 507, 1430, 508, 0, 509, 510, 511, 0,
	0, 0, 0, 512, 0, 514, 515, 516, 517, 513,
	518, 519, 520, 521, 1431, 522, 523, 524, 1184, 525,
	526, 527, 528, 657, 529, 0, 530, 531, 537, 538,
	539, 532, 533, 540, 541, 542, 543, 544, 1432, 546,
	547, 545, 548, 549, 550, 1433, 551, 552, 534, 535,
	553, 554, 1185, 555, 556, 557, 558, 559, 560, 561,
	658, 0, 562, 1434, 563, 564, 565, 567, 536, 568,
	573, 574, 659, 569, 570, 571, 572, 660, 576, 577,
	1435, 578, 579, 0, 575, 566, 1436, 580, 581, 582,
	583, 584, 585, 586, 354, 587, 1437, 588, 661, 662,
	663, 664, 1438, 597, 1439, 589, 590, 591, 665, 592,
	666, 1440, 593, 594, 595, 596, 0, 598, 599, 1441,
	1442, 600, 601, 602, 604, 605, 603, 606, 1443, 607,
	1444, 0, 608, 609, 610, 667, 668, 669, 1445, 612,
	611, 613, 670, 1446, 614, 1447, 1448, 1449, 1450, 615,
	616, 671, 617, 618, 619, 1363, 0, 1366, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 271, 273, 272, 274, 275, 276,
	277, 1371, 278, 279, 1372, 1373, 1374, 0, 1375, 620,
	1376, 1377, 1378, 1379, 280, 281, 1169, 282, 283, 284,
	285, 286, 287, 621, 622, 0, 288, 623, 289, 624,
	1380, 625, 290, 291, 292, 293, 294, 295, 1381, 1382,
	0, 296, 626, 627, 628, 1383, 297, 298, 629, 1384,
	1313, 1385, 299, 300, 301, 302, 303, 304, 305, 0,
	1386, 307, 308, 309, 306, 310, 1387, 311, 0, 312,
	313, 314, 315, 316, 317, 1388, 318, 319, 320, 1170,
	321, 322, 323, 1389, 1390, 1392, 1391, 1393, 1394, 1395,
	324, 325, 326, 327, 328, 0, 329, 630, 631, 1396,
	333, 330, 331, 1397, 334, 332, 335, 1398, 336, 337,
	338, 1399, 1400, 339, 340, 341, 1401, 342, 343, 1402,
	344, 345, 346, 1403, 347, 348, 632, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 633, 634, 360,
	1404, 268, 1405, 0, 0, 0, 0, 361, 362, 363,
	635, 0, 0, 0, 364, 1406, 365, 366, 1407, 1408,
	1171, 367, 368, 636, 637, 369, 370, 371, 372, 373,
	374, 375, 376, 377, 1409, 378, 638, 1410, 639, 379,
	1411, 380, 381, 382, 383, 384, 640, 641, 642, 463,
	1173, 385, 386, 1412, 387, 388, 389, 390, 391, 0,
	0, 0, 269, 392, 393, 394, 396, 1413, 1172, 395,
	643, 644, 1414, 645, 1415, 397, 398, 1174, 646, 1175,
	399, 400, 401, 1176, 402, 0, 0, 0, 403, 404,
	405, 406, 407, 408, 1416, 409, 411, 410, 1417, 412,
	647, 1177, 413, 414, 1178, 1418, 415, 0, 0, 0,
	416, 417, 420, 1419, 1420, 418, 419, 421, 422, 0,
	423, 424, 426, 429, 425, 427, 428, 430, 443, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 445, 0, 444, 1179, 446, 447, 448, 453, 455,
	456, 451, 452, 454, 457, 458, 450, 1180, 459, 449,
	1421, 270, 1181, 460, 461, 1422, 648, 462, 649, 464,
	465, 1423, 0, 466, 0, 1424, 1425, 468, 469, 470,
	1426, 1427, 471, 472, 650, 1182, 473, 1183, 651, 474,
	475, 467, 476, 477, 478, 479, 480, 481, 482, 483,
	1428, 484, 485, 652, 486, 487, 488, 653, 489, 490,
	491, 654, 492, 655, 493, 494, 1429, 495, 496, 0,
	497, 498, 499, 500, 501, 502, 503, 656, 504, 506,
	505, 507, 1430, 508, 0, 509, 510, 511, 0, 0,
	0, 0, 512, 0, 514, 515, 516, 517, 513, 518,
	519, 520, 521, 1431, 522, 523, 524, 1184, 525, 526,
	527, 528, 657, 529, 0, 530, 531, 537, 538, 539,
	532, 533, 540, 541, 542, 543, 544, 1432, 546, 547,
	545, 548, 549, 550, 1433, 551, 552, 534, 535, 553,
	554, 1185, 555, 556, 557, 558, 559, 560, 561, 658,
	0, 562, 1434, 563, 564, 565, 567, 536, 568, 573,
	574, 659, 569, 570, 571, 572, 660, 576, 577, 1435,
	578, 579, 0, 575, 566, 1436, 580, 581, 582, 583,
	584, 585, 586, 354, 587, 1437, 588, 661, 662, 663,
	664, 1438, 597, 1439, 589, 590, 591, 665, 592, 666,
	1440, 593, 594, 595, 596, 0, 598, 599, 1441, 1442,
	600, 601, 602, 604, 605, 603, 606, 1443, 607, 1444,
	0, 608, 609, 610, 667, 668, 669, 1445, 612, 611,
	613, 670, 1446, 614, 1447, 1448, 1449, 1450, 615, 616,
	671, 617, 618, 619, 1366, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 271, 273, 272, 274, 275, 276, 277, 1371, 278,
	279, 1372, 1373, 1374, 0, 1375, 620, 1376, 1377, 1378,
	1379, 280, 281, 1169, 282, 283, 284, 285, 286, 287,
	621, 622, 0, 288, 623, 289, 624, 1380, 625, 290,
	291, 292, 293, 294, 295, 1381, 1382, 0, 296, 626,
	627, 628, 1383, 297, 298, 629, 1384, 1313, 1385, 299,
	300, 301, 302, 303, 304, 305, 0, 1386, 307, 308,
	309, 306, 310, 1387, 311, 0, 312, 313, 314, 315,
	316, 317, 1388, 318, 319, 320, 1170, 321, 322, 323,
	1389, 1390, 1392, 1391, 1393, 1394, 1395, 324, 325, 326,
	327, 328, 0, 329, 630, 631, 1396, 333, 330, 331,
	1397, 334, 332, 335, 1398, 336, 337, 338, 1399, 1400,
	339, 340, 341, 1401, 342, 343, 1402, 344, 345, 346,
	1403, 347, 348, 632, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 633, 634, 360, 1404, 268, 1405,
	0, 0, 0, 0, 361, 362, 363, 635, 0, 0,
	0, 364, 1406, 365, 366, 1407, 1408, 1171, 367, 368,
	636, 637, 369, 370, 371, 372, 373, 374, 375, 376,
	377, 1409, 378, 638, 1410, 639, 379, 1411, 380, 381,
	382, 383, 384, 640, 641, 642, 463, 1173, 385, 386,
	1412, 387, 388, 389, 390, 391, 0, 0, 0, 269,
	392, 393, 394, 396, 1413, 1172, 395, 643, 644, 1414,
	645, 1415, 397, 398, 1174, 646, 1175, 399, 400, 401,
	1176, 402, 0, 0, 0, 403, 404, 405, 406, 407,
	408, 1416, 409, 411, 410, 1417, 412, 647, 1177, 413,
	414, 1178, 1418, 415, 0, 0, 0, 416, 417, 420,
	1419, 1420, 418, 419, 421, 422, 0, 423, 424, 426,
	429, 425, 427, 428, 430, 443, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 442, 445, 0,
	444, 1179, 446, 447, 448, 453, 455, 456, 451, 452,
	454, 457, 458, 450, 1180, 459, 449, 1421, 270, 1181,
	460, 461, 1422, 648, 462, 649, 464, 465, 1423, 0,
	466, 0, 1424, 1425, 468, 469, 470, 1426, 1427, 471,
	472, 650, 1182, 473, 1183, 651, 474, 475, 467, 476,
	477, 478, 479, 480, 481, 482, 483, 1428, 484, 485,
	652, 486, 487, 488, 653, 489, 490, 491, 654, 492,
	655, 493, 494, 1429, 495, 496, 0, 497, 498, 499,
	500, 501, 502, 503, 656, 504, 506, 505, 507, 1430,
	508, 0, 509, 510, 511, 0, 0, 0, 0, 512,
	0, 514, 515, 516, 517, 513, 518, 519, 520, 521,
	1431, 522, 523, 524, 1184, 525, 526, 527, 528, 657,
	529, 0, 530, 531, 537, 538, 539, 532, 533, 540,
	541, 542, 543, 544, 1432, 546, 547, 545, 548, 549,
	550, 1433, 551, 552, 534, 535, 553, 554, 1185, 555,
	556, 557, 558, 559, 560, 561, 658, 0, 562, 1434,
	563, 564, 565, 567, 536, 568, 573, 574, 659, 569,
	570, 571, 572, 660, 576, 577, 1435, 578, 579, 0,
	575, 566, 1436, 580, 581, 582, 583, 584, 585, 586,
	354, 587, 1437, 588, 661, 662, 663, 664, 1438, 597,
	1439, 589, 590, 591, 665, 592, 666, 1440, 593, 594,
	595, 596, 0, 598, 599, 1441, 1442, 600, 601, 602,
	604, 605, 603, 606, 1443, 607, 1444, 0, 608, 609,
	610, 667, 668, 669, 1445, 612, 611, 613, 670, 1446,
	614, 1447, 1448, 1449, 1450, 615, 616, 671, 617, 618,
	619, 2528, 0, 1105, 1077, 1078, 1079, 1075, 1076, 1088,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	271, 273, 272, 274, 275, 276, 277, 2525, 278, 279,
	0, 0, 0, 0, 0, 1129, 1093, 0, 0, 0,
	280, 281, 1169, 282, 283, 284, 285, 286, 287, 621,
	1142, 0, 288, 1149, 289, 1148, 0, 1159, 290, 291,
	292, 293, 294, 295, 1095, 1128, 1060, 296, 1189, 1190,
	628, 0, 297, 298, 1135, 0, 1116, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 316,
	317, 0, 318, 319, 320, 1170, 321, 322, 323, 1119,
	1117, 1118, 1125, 1121, 1120, 1124, 324, 325, 326, 327,
	328, 1152, 329, 1146, 1145, 1065, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 2526, 0, 339,
	1137, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 1071, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 1160, 1161, 360, 1084, 268, 0, 0,
	0, 0, 0, 361, 362, 363, 1144, 0, 0, 0,
	364, 0, 365, 366, 0, 0, 1171, 367, 368, 1157,
	1158, 369, 370, 371, 372, 373, 374, 375, 376, 377,
	0, 378, 1167, 0, 1094, 379, 0, 380, 381, 382,
	383, 384, 1130, 1131, 1134, 463, 1173, 385, 386, 0,
	387, 388, 389, 390, 391, 0, 0, 0, 269, 392,
	393, 394, 396, 0, 1172, 395, 1139, 1140, 0, 1100,
	0, 397, 398, 1174, 1132, 1175, 399, 400, 401, 1176,
	402, 0, 0, 0, 403, 404, 405, 406, 407, 408,
	0, 409, 411, 410, 0, 412, 1168, 1177, 413, 414,
	1178, 0, 415, 0, 0, 0, 416, 417, 420, 1123,
	1122, 418, 419, 421, 422, 0, 423, 424, 426, 429,
	425, 427, 428, 430, 443, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 445, 0, 444,
	1179, 446, 447, 448, 453, 455, 456, 451, 452, 454,
	457, 458, 450, 1180, 459, 449, 1062, 270, 1181, 460,
	461, 1085, 1133, 462, 1147, 464, 465, 0, 0, 466,
	0, 0, 0, 468, 469, 470, 0, 0, 471, 472,
	650, 1182, 473, 1183, 1162, 474, 475, 1072, 476, 477,
	478, 479, 480, 481, 482, 483, 0, 484, 485, 652,
	486, 487, 488, 653, 489, 490, 491, 1163, 492, 655,
	493, 494, 0, 495, 496, 0, 497, 498, 499, 500,
	501, 502, 503, 1143, 504, 506, 505, 507, 0, 508,
	0, 509, 510, 511, 0, 0, 0, 0, 512, 0,
	514, 515, 516, 517, 513, 518, 519, 520, 521, 0,
	522, 523, 524, 1184, 525, 526, 527, 528, 1073, 529,
	0, 530, 531, 537, 538, 539, 532, 533, 540, 541,
	542, 543, 544, 0, 546, 547, 545, 548, 549, 550,
	1126, 551, 552, 534, 535, 553, 554, 1185, 555, 556,
	557, 558, 559, 560, 561, 1141, 0, 562, 0, 563,
	564, 565, 567, 536, 568, 573, 574, 1188, 569, 570,
	571, 572, 1164, 576, 577, 0, 578, 579, 1059, 575,
	566, 0, 580, 581, 582, 583, 584, 585, 586, 354,
	587, 0, 588, 1153, 1154, 1155, 1156, 0, 597, 0,
	589, 590, 591, 1165, 592, 1166, 1083, 593, 594, 595,
	596, 0, 598, 599, 0, 1066, 600, 601, 602, 604,
	605, 603, 606, 1127, 607, 0, 0, 608, 609, 610,
	667, 1150, 1187, 2524, 612, 611, 613, 670, 0, 614,
	0, 0, 0, 0, 615, 616, 671, 617, 618, 619,
	1063, 0, 0, 0, 0, 0, 0, 0, 1058, 0,
	0, 0, 0, 0, 0, 1056, 1057, 2527, 0, 0,
	0, 0, 0, 0, 1089, 2523, 0, 1049, 1087, 1105,
	1077, 1078, 1079, 1075, 1076, 1088, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 271, 273, 272, 274,
	275, 276, 277, 0, 278, 279, 0, 0, 0, 0,
	0, 1129, 1093, 0, 0, 0, 280, 281, 1169, 282,
	283, 284, 285, 286, 287, 621, 1142, 0, 288, 1149,
	289, 1148, 0, 1159, 290, 291, 292, 293, 294, 295,
	1095, 1128, 1060, 296, 1189, 1190, 628, 0, 297, 298,
	1135, 0, 1116, 0, 299, 300, 301, 302, 303, 304,
	305, 0, 0, 307, 308, 309, 306, 310, 0, 311,
	0, 312, 313, 314, 315, 316, 317, 0, 318, 319,
	320, 1170, 321, 322, 323, 1119, 1117, 1118, 1125, 1121,
	1120, 1124, 324, 325, 326, 327, 328, 1152, 329, 1146,
	1145, 1065, 333, 330, 331, 0, 334, 332, 335, 0,
	336, 337, 338, 0, 0, 339, 1137, 341, 0, 342,
	343, 0, 344, 345, 346, 0, 347, 348, 1071, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 1160,
	1161, 360, 1084, 268, 0, 0, 0, 0, 0, 361,
	362, 363, 1144, 0, 0, 0, 364, 0, 365, 366,
	0, 0, 1171, 367, 368, 1157, 1158, 369, 370, 371,
	372, 373, 374, 375, 376, 377, 0, 378, 1167, 0,
	1094, 379, 0, 380, 381, 382, 383, 384, 1130, 1131,
	1134, 463, 1173, 385, 386, 0, 387, 388, 389, 390,
	391, 0, 0, 0, 269, 392, 393, 394, 396, 0,
	1172, 395, 1139, 1140, 0, 1100, 0, 397, 398, 1174,
	1132, 1175, 399, 400, 401, 1176, 402, 0, 0, 0,
	403, 404, 405, 406, 407, 408, 0, 409, 411, 410,
	0, 412, 1168, 1177, 413, 414, 1178, 0, 415, 0,
	0, 0, 416, 417, 420, 1123, 1122, 418, 419, 421,
	422, 0, 423, 424, 426, 429, 425, 427, 428, 430,
	443, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 445, 0, 444, 1179, 446, 447, 448,
	453, 455, 456, 451, 452, 454, 457, 458, 450, 1180,
	459, 449, 1062, 270, 1181, 460, 461, 1085, 1133, 462,
	1147, 464, 465, 0, 0, 466, 0, 0, 0, 468,
	469, 470, 0, 0, 471, 472, 650, 1182, 473, 1183,
	1162, 474, 475, 1072, 476, 477, 478, 479, 480, 481,
	482, 483, 0, 484, 485, 652, 486, 487, 488, 653,
	489, 490, 491, 1163, 492, 655, 493, 494, 0, 495,
	496, 0, 497, 498, 499, 500, 501, 502, 503, 1143,
	504, 506, 505, 507, 0, 508, 0, 509, 510, 511,
	0, 0, 0, 0, 512, 0, 514, 515, 516, 517,
	513, 518, 519, 520, 521, 0, 522, 523, 524, 1184,
	525, 526, 527, 528, 1073, 529, 0, 530, 531, 537,
	538, 539, 532, 533, 540, 541, 542, 543, 544, 230,
	546, 547, 545, 548, 549, 550, 1126, 551, 552, 534,
	535, 553, 554, 1185, 555, 556, 557, 558, 559, 560,
	561, 1141, 0, 562, 0, 563, 564, 565, 567, 536,
	568, 573, 574, 1188, 569, 570, 571, 572, 1164, 576,
	577, 0, 578, 579, 1059, 575, 566, 232, 580, 581,
	582, 583, 584, 585, 586, 354, 587, 0, 588, 1153,
	1154, 1155, 1156, 0, 597, 0, 589, 590, 591, 1165,
	592, 1166, 1083, 593, 594, 595, 596, 0, 598, 599,
	0, 1066, 600, 601, 602, 604, 605, 603, 606, 1127,
	607, 0, 0, 608, 609, 610, 1585, 1150, 1187, 0,
	612, 611, 613, 670, 0, 614, 0, 0, 0, 224,
	615, 616, 671, 617, 618, 619, 1063, 0, 225, 0,
	0, 0, 0, 0, 1058, 0, 0, 0, 0, 0,
	0, 1056, 1057, 1105, 1077, 1078, 1079, 1075, 1076, 1088,
	1838, 1836, 0, 0, 1087, 0, 0, 0, 0, 0,
	271, 273, 272, 274, 275, 276, 277, 0, 278, 279,
	0, 0, 0, 0, 0, 1129, 1093, 0, 0, 0,
	280, 281, 1169, 282, 283, 284, 285, 286, 287, 621,
	1142, 0, 288, 1149, 289, 1148, 0, 1159, 290, 291,
	292, 293, 294, 295, 1095, 1128, 1060, 296, 1189, 1190,
	628, 0, 297, 298, 1135, 0, 1116, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 316,
	317, 0, 318, 319, 320, 1170, 321, 322, 323, 1119,
	1117, 1118, 1125, 1121, 1120, 1124, 324, 325, 326, 327,
	328, 1152, 329, 1146, 1145, 1065, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	1137, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 1071, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 1160, 1161, 360, 1084, 268, 0, 0,
	0, 0, 0, 361, 362, 363, 1144, 0, 0, 0,
	364, 0, 365, 366, 0, 0, 1171, 367, 368, 1157,
	1158, 369, 370, 371, 372, 373, 374, 375, 376, 377,
	0, 378, 1167, 0, 1094, 379, 0, 380, 381, 382,
	383, 384, 1130, 1131, 1134, 463, 1173, 385, 386, 0,
	387, 388, 389, 390, 391, 0, 0, 0, 269, 392,
	393, 394, 396, 0, 1172, 395, 1139, 1140, 0, 1100,
	0, 397, 398, 1174, 1132, 1175, 399, 400, 401, 1176,
	402, 0, 0, 0, 403, 404, 405, 406, 407, 408,
	0, 409, 411, 410, 0, 412, 1168, 1177, 413, 414,
	1178, 0, 415, 0, 0, 0, 416, 417, 420, 1123,
	1122, 418, 419, 421, 422, 0, 423, 424, 426, 429,
	425, 427, 428, 430, 443, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 445, 0, 444,
	1179, 446, 447, 448, 453, 455, 456, 451, 452, 454,
	457, 458, 450, 1180, 459, 449, 1062, 270, 1181, 460,
	461, 1085, 1133, 462, 1147, 464, 465, 0, 0, 466,
	0, 0, 0, 468, 469, 470, 0, 0, 471, 472,
	650, 1182, 473, 1183, 1162, 474, 475, 1072, 476, 477,
	478, 479, 480, 481, 482, 483, 0, 484, 485, 652,
	486, 487, 488, 653, 489, 490, 491, 1163, 492, 655,
	493, 494, 0, 495, 496, 0, 497, 498, 499, 500,
	501, 502, 503, 1143, 504, 506, 505, 507, 0, 508,
	0, 509, 510, 511, 0, 0, 0, 0, 512, 0,
	514, 515, 516, 517, 513, 518, 519, 520, 521, 0,
	522, 523, 524, 1184, 525, 526, 527, 528, 1073, 529,
	0, 530, 531, 537, 538, 539, 532, 533, 540, 541,
	542, 543, 544, 230, 546, 547, 545, 548, 549, 550,
	1126, 551, 552, 534, 535, 553, 554, 1185, 555, 556,
	557, 558, 559, 560, 561, 1141, 0, 562, 0, 563,
	564, 565, 567, 536, 568, 573, 574, 1188, 569, 570,
	571, 572, 1164, 576, 577, 0, 578, 579, 1059, 575,
	566, 232, 580, 581, 582, 583, 584, 585, 586, 354,
	587, 0, 588, 1153, 1154, 1155, 1156, 0, 597, 0,
	589, 590, 591, 1165, 592, 1166, 1083, 593, 594, 595,
	596, 0, 598, 599, 0, 1066, 600, 601, 602, 604,
	605, 603, 606, 1127, 607, 0, 0, 608, 609, 610,
	1585, 1150, 1187, 0, 612, 611, 613, 670, 0, 614,
	0, 0, 0, 224, 615, 616, 671, 617, 618, 619,
	1063, 0, 225, 0, 0, 0, 0, 0, 1058, 0,
	0, 0, 0, 0, 0, 1056, 1057, 1105, 1077, 1078,
	1079, 1075, 1076, 1088, 1838, 3138, 0, 0, 1087, 0,
	0, 0, 0, 0, 271, 273, 272, 274, 275, 276,
	277, 0, 278, 279, 0, 0, 0, 0, 0, 1129,
	1093, 0, 0, 0, 280, 281, 1169, 282, 283, 284,
	285, 286, 287, 621, 1142, 0, 288, 1149, 289, 1148,
	0, 1159, 290, 291, 292, 293, 294, 295, 1095, 1128,
	1060, 296, 1189, 1190, 628, 0, 297, 298, 1135, 0,
	1116, 0, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 0, 311, 0, 312,
	313, 314, 315, 316, 317, 0, 318, 319, 320, 1170,
	321, 322, 323, 1119, 1117, 1118, 1125, 1121, 1120, 1124,
	324, 325, 326, 327, 328, 1152, 329, 1146, 1145, 1065,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 1137, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 347, 348, 1071, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 1160, 1161, 360,
	1084, 268, 0, 0, 0, 0, 0, 361, 362, 363,
	1144, 0, 0, 0, 364, 0, 365, 366, 0, 0,
	1171, 367, 368, 1157, 1158, 369, 370, 371, 372, 373,
	374, 375, 376, 377, 0, 378, 1167, 0, 1094, 379,
	0, 380, 381, 382, 383, 384, 1130, 1131, 1134, 463,
	1173, 385, 386, 0, 387, 388, 389, 390, 391, 0,
	0, 0, 269, 392, 393, 394, 396, 0, 1172, 395,
	1139, 1140, 0, 1100, 0, 397, 398, 1174, 1132, 1175,
	399, 400, 401, 1176, 402, 0, 0, 0, 403, 404,
	405, 406, 407, 408, 0, 409, 411, 410, 0, 412,
	1168, 1177, 413, 414, 1178, 0, 415, 0, 0, 0,
	416, 417, 420, 1123, 1122, 418, 419, 421, 422, 0,
	423, 424, 426, 429, 425, 427, 428, 430, 443, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 445, 0, 444, 1179, 446, 447, 448, 453, 455,
	456, 451, 452, 454, 457, 458, 450, 1180, 459, 449,
	1062, 270, 1181, 460, 461, 1085, 1133, 462, 1147, 464,
	465, 0, 0, 466, 0, 0, 0, 468, 469, 470,
	0, 0, 471, 472, 650, 1182, 473, 1183, 1162, 474,
	475, 1072, 476, 477, 478, 479, 480, 481, 482, 483,
	0, 484, 485, 652, 486, 487, 488, 653, 489, 490,
	491, 1163, 492, 655, 493, 494, 0, 495, 496, 0,
	497, 498, 499, 500, 501, 502, 503, 1143, 504, 506,
	505, 507, 0, 508, 0, 509, 510, 511, 0, 0,
	0, 0, 512, 0, 514, 515, 516, 517, 513, 518,
	519, 520, 521, 0, 522, 523, 524, 1184, 525, 526,
	527, 528, 1073, 529, 0, 530, 531, 537, 538, 539,
	532, 533, 540, 541, 542, 543, 544, 230, 546, 547,
	545, 548, 549, 550, 1126, 551, 552, 534, 535, 553,
	554, 1185, 555, 556, 557, 558, 559, 560, 561, 1141,
	0, 562, 0, 563, 564, 565, 567, 536, 568, 573,
	574, 1188, 569, 570, 571, 572, 1164, 576, 577, 0,
	578, 579, 1059, 575, 566, 232, 580, 581, 582, 583,
	584, 585, 586, 354, 587, 0, 588, 1153, 1154, 1155,
	1156, 0, 597, 0, 589, 590, 591, 1165, 592, 1166,
	1083, 593, 594, 595, 596, 0, 598, 599, 0, 1066,
	600, 601, 602, 604, 605, 603, 606, 1127, 607, 0,
	0, 608, 609, 610, 1585, 1150, 1187, 0, 612, 611,
	613, 670, 0, 614, 0, 0, 0, 224, 615, 616,
	671, 617, 618, 619, 1063, 0, 225, 0, 0, 0,
	0, 0, 1058, 0, 0, 0, 0, 0, 0, 1056,
	1057, 1105, 1077, 1078, 1079, 1075, 1076, 1088, 1838, 1836,
	0, 0, 1087, 0, 0, 0, 0, 0, 271, 273,
	272, 274, 275, 276, 277, 0, 278, 279, 0, 0,
	0, 0, 0, 1129, 1093, 0, 0, 0, 280, 281,
	1169, 282, 283, 284, 285, 286, 287, 621, 1142, 0,
	288, 1149, 289, 1148, 2657, 1159, 290, 291, 292, 293,
	294, 295, 1095, 1128, 1060, 296, 1189, 1190, 628, 0,
	297, 298, 1135, 0, 1116, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 1170, 321, 322, 323, 1119, 1117, 1118,
	1125, 1121, 1120, 1124, 324, 325, 326, 327, 328, 1152,
	329, 1146, 1145, 1065, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 1137, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	1071, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 1160, 1161, 360, 1084, 268, 0, 0, 0, 0,
	0, 361, 362, 363, 1144, 0, 0, 0, 364, 0,
	365, 366, 0, 2662, 1171, 367, 368, 1157, 1158, 369,
	370, 371, 372, 373, 374, 375, 376, 377, 0, 378,
	1167, 0, 1094, 379, 0, 380, 381, 382, 383, 384,
	1130, 1131, 1134, 463, 1173, 385, 386, 0, 387, 388,
	389, 390, 391, 0, 0, 0, 269, 392, 393, 394,
	396, 0, 1172, 395, 1139, 1140, 0, 1100, 0, 397,
	398, 1174, 1132, 1175, 399, 400, 401, 1176, 402, 0,
	0, 0, 403, 404, 405, 406, 407, 408, 0, 409,
	411, 410, 2658, 412, 1168, 1177, 413, 414, 1178, 0,
	415, 0, 0, 0, 416, 417, 420, 1123, 1122, 418,
	419, 421, 422, 0, 423, 424, 426, 429, 425, 427,
	428, 430, 443, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 445, 0, 444, 1179, 446,
	447, 448, 453, 455, 456, 451, 452, 454, 457, 458,
	450, 1180, 459, 449, 1062, 270, 1181, 460, 461, 1085,
	1133, 462, 1147, 464, 465, 0, 0, 466, 0, 0,
	0, 468, 469, 470, 0, 0, 471, 472, 650, 1182,
	473, 1183, 1162, 474, 475, 1072, 476, 477, 478, 479,
	480, 481, 482, 483, 0, 484, 485, 652, 486, 487,
	488, 653, 489, 490, 491, 1163, 492, 655, 493, 494,
	0, 495, 496, 0, 497, 498, 499, 500, 501, 502,
	503, 1143, 504, 506, 505, 507, 0, 508, 0, 509,
	510, 511, 0, 0, 0, 0, 512, 0, 514, 515,
	516, 517, 513, 518, 519, 520, 521, 0, 522, 523,
	524, 1184, 525, 526, 527, 528, 1073, 529, 0, 530,
	531, 537, 538, 539, 532, 533, 540, 541, 542, 543,
	544, 0, 546, 547, 545, 548, 549, 550, 1126, 551,
	552, 534, 535, 553, 554, 1185, 555, 556, 557, 558,
	559, 560, 561, 1141, 0, 562, 0, 563, 564, 565,
	567, 536, 568, 573, 574, 1188, 569, 570, 571, 572,
	1164, 576, 577, 0, 578, 579, 1059, 575, 566, 0,
	580, 581, 582, 583, 584, 585, 586, 354, 587, 0,
	588, 1153, 1154, 1155, 1156, 0, 597, 2659, 589, 590,
	591, 1165, 592, 1166, 1083, 593, 594, 595, 596, 0,
	598, 599, 0, 1066, 600, 601, 602, 604, 605, 603,
	606, 1127, 607, 0, 0, 608, 609, 610, 667, 1150,
	1187, 0, 612, 611, 613, 670, 0, 614, 0, 0,
	0, 0, 615, 616, 671, 617, 618, 619, 1063, 0,
	0, 0, 0, 0, 0, 0, 1058, 0, 0, 0,
	0, 0, 0, 1056, 1057, 0, 0, 0, 0, 0,
	0, 0, 1089, 0, 0, 2573, 1087, 1105, 1077, 1078,
	1079, 1075, 1076, 1088, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 271, 273, 272, 274, 275, 276,
	277, 0, 278, 279, 0, 0, 0, 0, 0, 1129,
	1093, 0, 0, 0, 280, 281, 1169, 282, 283, 284,
	285, 286, 287, 621, 1142, 0, 288, 1149, 289, 1148,
	0, 1159, 290, 291, 292, 293, 294, 295, 1095, 1128,
	1060, 296, 1189, 1190, 628, 0, 297, 298, 1135, 0,
	1116, 0, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 0, 311, 0, 312,
	313, 314, 315, 316, 317, 0, 318, 319, 320, 1170,
	321, 322, 323, 1119, 1117, 1118, 1125, 1121, 1120, 1124,
	324, 325, 326, 327, 328, 1152, 329, 1146, 1145, 1065,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 1137, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 347, 348, 1071, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 1160, 1161, 360,
	1084, 268, 0, 0, 0, 0, 0, 361, 362, 363,
	1144, 0, 0, 0, 364, 0, 365, 366, 0, 0,
	1171, 367, 368, 1157, 1158, 369, 370, 371, 372, 373,
	374, 375, 376, 377, 0, 378, 1167, 0, 1094, 379,
	0, 380, 381, 382, 383, 384, 1130, 1131, 1134, 463,
	1173, 385, 386, 0, 387, 388, 389, 390, 391, 0,
	0, 0, 269, 392, 393, 394, 396, 0, 1172, 395,
	1139, 1140, 0, 1100, 0, 397, 398, 1174, 1132, 1175,
	399, 400, 401, 1176, 402, 0, 0, 0, 403, 404,
	405, 406, 407, 408, 0, 409, 411, 410, 0, 412,
	1168, 1177, 413, 414, 1178, 0, 415, 0, 0, 0,
	416, 417, 420, 1123, 1122, 418, 419, 421, 422, 0,
	423, 424, 426, 429, 425, 427, 428, 430, 443, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 445, 0, 444, 1179, 446, 447, 448, 453, 455,
	456, 451, 452, 454, 457, 458, 450, 1180, 459, 449,
	1062, 270, 1181, 460, 461, 1085, 1133, 462, 1147, 464,
	465, 0, 0, 466, 0, 0, 0, 468, 469, 470,
	0, 0, 471, 472, 650, 1182, 473, 1183, 1162, 474,
	475, 1072, 476, 477, 478, 479, 480, 481, 482, 483,
	0, 484, 485, 652, 486, 487, 488, 653, 489, 490,
	491, 1163, 492, 655, 493, 494, 0, 495, 496, 0,
	497, 498, 499, 500, 501, 502, 503, 1143, 504, 506,
	505, 507, 0, 508, 0, 509, 510, 511, 0, 0,
	0, 0, 512, 0, 514, 515, 516, 517, 513, 518,
	519, 520, 521, 0, 522, 523, 524, 1184, 525, 526,
	527, 528, 1073, 529, 0, 530, 531, 537, 538, 539,
	532, 533, 540, 541, 542, 543, 544, 0, 546, 547,
	545, 548, 549, 550, 1126, 551, 552, 534, 535, 553,
	554, 1185, 555, 556, 557, 558, 559, 560, 561, 1141,
	0, 562, 0, 563, 564, 565, 567, 536, 568, 573,
	574, 1188, 569, 570, 571, 572, 1164, 576, 577, 0,
	578, 579, 1059, 575, 566, 0, 580, 581, 582, 583,
	584, 585, 586, 354, 587, 0, 588, 1153, 1154, 1155,
	1156, 0, 597, 0, 589, 590, 591, 1165, 592, 1166,
	1083, 593, 594, 595, 596, 0, 598, 599, 0, 1066,
	600, 601, 602, 604, 605, 603, 606, 1127, 607, 0,
	0, 608, 609, 610, 667, 1150, 1187, 0, 612, 611,
	613, 670, 0, 614, 0, 0, 0, 0, 615, 616,
	671, 617, 618, 619, 1063, 0, 0, 0, 0, 0,
	0, 0, 1058, 0, 0, 0, 0, 0, 0, 1056,
	1057, 0, 0, 0, 0, 0, 0, 0, 1089, 2571,
	0, 2570, 1087, 1105, 1077, 1078, 1079, 1075, 1076, 1088,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	271, 273, 272, 274, 275, 276, 277, 0, 278, 279,
	0, 0, 0, 0, 0, 1129, 1093, 0, 0, 0,
	280, 281, 1169, 282, 283, 284, 285, 286, 287, 621,
	1142, 0, 288, 1149, 289, 1148, 0, 1159, 290, 291,
	292, 293, 294, 295, 1095, 1128, 1060, 296, 1189, 1190,
	628, 0, 297, 298, 1135, 0, 1116, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 316,
	317, 0, 318, 319, 320, 1170, 321, 322, 323, 1119,
	1117, 1118, 1125, 1121, 1120, 1124, 324, 325, 326, 327,
	328, 1152, 329, 1146, 1145, 1065, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	1137, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 1071, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 1160, 1161, 360, 1084, 268, 0, 0,
	0, 0, 0, 361, 362, 363, 1144, 0, 0, 0,
	364, 0, 365, 366, 0, 0, 1171, 367, 368, 1157,
	1158, 369, 370, 371, 372, 373, 374, 375, 376, 377,
	0, 378, 1167, 0, 1094, 379, 0, 380, 381, 382,
	383, 384, 1130, 1131, 1134, 463, 1173, 385, 386, 0,
	387, 388, 389, 390, 391, 0, 0, 0, 269, 392,
	393, 394, 396, 0, 1172, 395, 1139, 1140, 0, 1100,
	0, 397, 398, 1174, 1132, 1175, 399, 400, 401, 1176,
	402, 0, 0, 0, 403, 404, 405, 406, 407, 408,
	0, 409, 411, 410, 0, 412, 1168, 1177, 413, 414,
	1178, 0, 415, 0, 0, 0, 416, 417, 420, 1123,
	1122, 418, 419, 421, 422, 0, 423, 424, 426, 429,
	425, 427, 428, 430, 443, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 445, 0, 444,
	1179, 446, 447, 448, 453, 455, 456, 451, 452, 454,
	457, 458, 450, 1180, 459, 449, 1062, 270, 1181, 460,
	461, 1085, 1133, 462, 1147, 464, 465, 0, 0, 466,
	0, 0, 0, 468, 469, 470, 0, 0, 471, 472,
	650, 1182, 473, 1183, 1162, 474, 475, 1072, 476, 477,
	478, 479, 480, 481, 482, 483, 0, 484, 485, 652,
	486, 487, 488, 653, 489, 490, 491, 1163, 492, 655,
	493, 494, 0, 495, 496, 0, 497, 498, 499, 500,
	501, 502, 503, 1143, 504, 506, 505, 507, 0, 508,
	0, 509, 510, 511, 0, 0, 0, 0, 512, 0,
	514, 515, 516, 517, 513, 518, 519, 520, 521, 0,
	522, 523, 524, 1184, 525, 526, 527, 528, 1073, 529,
	0, 530, 531, 537, 538, 539, 532, 533, 540, 541,
	542, 543, 544, 0, 546, 547, 545, 548, 549, 550,
	1126, 551, 552, 534, 535, 553, 554, 1185, 555, 556,
	557, 558, 559, 560, 561, 1141, 0, 562, 0, 563,
	564, 565, 567, 536, 568, 573, 574, 1188, 569, 570,
	571, 572, 1164, 576, 577, 0, 578, 579, 1059, 575,
	566, 0, 580, 581, 582, 583, 584, 585, 586, 354,
	587, 0, 588, 1153, 1154, 1155, 1156, 0, 597, 0,
	589, 590, 591, 1165, 592, 1166, 1083, 593, 594, 595,
	596, 0, 598, 599, 0, 1066, 600, 601, 602, 604,
	605, 603, 606, 1127, 607, 0, 0, 608, 609, 610,
	667, 1150, 1187, 0, 612, 611, 613, 670, 0, 614,
	0, 0, 0, 0, 615, 616, 671, 617, 618, 619,
	1063, 0, 0, 0, 0, 0, 0, 0, 1058, 0,
	0, 0, 0, 0, 0, 1056, 1057, 0, 0, 0,
	0, 0, 0, 0, 1089, 2568, 0, 2567, 1087, 1105,
	1077, 1078, 1079, 1075, 1076, 1088, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 271, 273, 272, 274,
	275, 276, 277, 0, 278, 279, 0, 0, 0, 0,
	0, 1129, 1093, 0, 0, 0, 280, 281, 1169, 282,
	283, 284, 285, 286, 287, 621, 1142, 0, 288, 1149,
	289, 1148, 0, 1159, 290, 291, 292, 293, 294, 295,
	1095, 1128, 1060, 296, 1189, 1190, 628, 0, 297, 298,
	1135, 0, 1116, 0, 299, 300, 301, 302, 303, 304,
	305, 0, 0, 307, 308, 309, 306, 310, 0, 311,
	0, 312, 313, 314, 315, 316, 317, 0, 318, 319,
	320, 1170, 321, 322, 323, 1119, 1117, 1118, 1125, 1121,
	1120, 1124, 324, 325, 326, 327, 328, 1152, 329, 1146,
	1145, 1065, 333, 330, 331, 0, 334, 332, 335, 0,
	336, 337, 338, 0, 0, 339, 1137, 341, 0, 342,
	343, 0, 344, 345, 346, 0, 347, 348, 1071, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 1160,
	1161, 360, 1084, 268, 0, 0, 0, 0, 0, 361,
	362, 363, 1144, 0, 0, 0, 364, 0, 365, 366,
	0, 0, 1171, 367, 368, 1157, 1158, 369, 370, 371,
	372, 373, 374, 375, 376, 377, 0, 378, 1167, 0,
	1094, 379, 0, 380, 381, 382, 383, 384, 1130, 1131,
	1134, 463, 1173, 385, 386, 0, 387, 388, 389, 390,
	391, 0, 0, 0, 269, 392, 393, 394, 396, 0,
	1172, 395, 1139, 1140, 0, 1100, 0, 397, 398, 1174,
	1132, 1175, 399, 400, 401, 1176, 402, 0, 0, 0,
	403, 404, 405, 406, 407, 408, 0, 409, 411, 410,
	0, 412, 1168, 1177, 413, 414, 1178, 0, 415, 0,
	0, 0, 416, 417, 420, 1123, 1122, 418, 419, 421,
	422, 0, 423, 424, 426, 429, 425, 427, 428, 430,
	443, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 445, 0, 444, 1179, 446, 447, 448,
	453, 455, 456, 451, 452, 454, 457, 458, 450, 1180,
	459, 449, 1062, 270, 1181, 460, 461, 1085, 1133, 462,
	1147, 464, 465, 0, 0, 466, 0, 0, 0, 468,
	469, 470, 0, 0, 471, 472, 650, 1182, 473, 1183,
	1162, 474, 475, 1072, 476, 477, 478, 479, 480, 481,
	482, 483, 0, 484, 485, 652, 486, 487, 488, 653,
	489, 490, 491, 1163, 492, 655, 493, 494, 0, 495,
	496, 0, 497, 498, 499, 500, 501, 502, 503, 1143,
	504, 506, 505, 507, 0, 508, 0, 509, 510, 511,
	0, 0, 0, 0, 512, 0, 514, 515, 516, 517,
	513, 518, 519, 520, 521, 0, 522, 523, 524, 1184,
	525, 526, 527, 528, 1073, 529, 0, 530, 531, 537,
	538, 539, 532, 533, 540, 541, 542, 543, 544, 0,
	546, 547, 545, 548, 549, 550, 1126, 551, 552, 534,
	535, 553, 554, 1185, 555, 556, 557, 558, 559, 560,
	561, 1141, 0, 562, 0, 563, 564, 565, 567, 536,
	568, 573, 574, 1188, 569, 570, 571, 572, 1164, 576,
	577, 0, 578, 579, 1059, 575, 566, 0, 580, 581,
	582, 583, 584, 585, 586, 354, 587, 0, 588, 1153,
	1154, 1155, 1156, 0, 597, 0, 589, 590, 591, 1165,
	592, 1166, 1083, 593, 594, 595, 596, 0, 598, 599,
	0, 1066, 600, 601, 602, 604, 605, 603, 606, 1127,
	607, 0, 0, 608, 609, 610, 667, 1150, 1187, 0,
	612, 611, 613, 670, 0, 614, 0, 0, 0, 0,
	615, 616, 671, 617, 618, 619, 1063, 0, 0, 0,
	0, 0, 0, 0, 1058, 0, 0, 0, 0, 0,
	0, 1056, 1057, 0, 0, 0, 0, 0, 0, 0,
	1089, 2565, 0, 2564, 1087, 1105, 1077, 1078, 1079, 1075,
	1076, 1088, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 271, 273, 272, 274, 275, 276, 277, 0,
	278, 279, 0, 0, 0, 0, 0, 1129, 1093, 0,
	0, 0, 280, 281, 1169, 282, 283, 284, 285, 286,
	287, 621, 1142, 0, 288, 1149, 289, 1148, 0, 1159,
	290, 291, 292, 293, 294, 295, 1095, 1128, 1060, 296,
	1189, 1190, 628, 0, 297, 298, 1135, 0, 1116, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 1170, 321, 322,
	323, 1119, 1117, 1118, 1125, 1121, 1120, 1124, 324, 325,
	326, 327, 328, 1152, 329, 1146, 1145, 1065, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 1137, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 1071, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 1160, 1161, 360, 1084, 268,
	0, 0, 0, 0, 0, 361, 362, 363, 1144, 0,
	0, 0, 364, 0, 365, 366, 0, 0, 1171, 367,
	368, 1157, 1158, 369, 370, 371, 372, 373, 374, 375,
	376, 377, 0, 378, 1167, 0, 1094, 379, 0, 380,
	381, 382, 383, 384, 1130, 1131, 1134, 463, 1173, 385,
	386, 0, 387, 388, 389, 390, 391, 0, 0, 0,
	269, 392, 393, 394, 396, 0, 1172, 395, 1139, 1140,
	0, 1100, 0, 397, 398, 1174, 1132, 1175, 399, 400,
	401, 1176, 402, 0, 0, 0, 403, 404, 405, 406,
	407, 408, 0, 409, 411, 410, 0, 412, 1168, 1177,
	413, 414, 1178, 0, 415, 0, 0, 0, 416, 417,
	420, 1123, 1122, 418, 419, 421, 422, 0, 423, 424,
	426, 429, 425, 427, 428, 430, 443, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 445,
	0, 444, 1179, 446, 447, 448, 453, 455, 456, 451,
	452, 454, 457, 458, 450, 1180, 459, 449, 1062, 270,
	1181, 460, 461, 1085, 1133, 462, 1147, 464, 465, 0,
	0, 466, 0, 0, 0, 468, 469, 470, 0, 0,
	471, 472, 650, 1182, 473, 1183, 1162, 474, 475, 1072,
	476, 477, 478, 479, 480, 481, 482, 483, 0, 484,
	485, 652, 486, 487, 488, 653, 489, 490, 491, 1163,
	492, 655, 493, 494, 0, 495, 496, 0, 497, 498,
	499, 500, 501, 502, 503, 1143, 504, 506, 505, 507,
	0, 508, 0, 509, 510, 511, 0, 0, 0, 0,
	512, 0, 514, 515, 516, 517, 513, 518, 519, 520,
	521, 0, 522, 523, 524, 1184, 525, 526, 527, 528,
	1073, 529, 0, 530, 531, 537, 538, 539, 532, 533,
	540, 541, 542, 543, 544, 0, 546, 547, 545, 548,
	549, 550, 1126, 551, 552, 534, 535, 553, 554, 1185,
	555, 556, 557, 558, 559, 560, 561, 1141, 0, 562,
	0, 563, 564, 565, 567, 536, 568, 573, 574, 1188,
	569, 570, 571, 572, 1164, 576, 577, 0, 578, 579,
	1059, 575, 566, 0, 580, 581, 582, 583, 584, 585,
	586, 354, 587, 0, 588, 1153, 1154, 1155, 1156, 0,
	597, 0, 589, 590, 591, 1165, 592, 1166, 1083, 593,
	594, 595, 596, 0, 598, 599, 0, 1066, 600, 601,
	602, 604, 605, 603, 606, 1127, 607, 0, 0, 608,
	609, 610, 667, 1150, 1187, 0, 612, 611, 613, 670,
	0, 614, 0, 0, 0, 0, 615, 616, 671, 617,
	618, 619, 1063, 0, 0, 0, 0, 0, 0, 0,
	1058, 0, 0, 0, 0, 0, 0, 1056, 1057, 0,
	0, 0, 0, 0, 0, 0, 1089, 2562, 0, 1680,
	1087, 1105, 1077, 1078, 1079, 1075, 1076, 1088, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 271, 273,
	272, 274, 275, 276, 277, 0, 278, 279, 0, 0,
	0, 0, 0, 1129, 1093, 0, 0, 0, 280, 281,
	1169, 282, 283, 284, 285, 286, 287, 621, 1142, 0,
	288, 1149, 289, 1148, 0, 1159, 290, 291, 292, 293,
	294, 295, 1095, 1128, 1060, 296, 1189, 1190, 628, 0,
	297, 298, 1135, 0, 1116, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 1170, 321, 322, 323, 1119, 1117, 1118,
	1125, 1121, 1120, 1124, 324, 325, 326, 327, 328, 1152,
	329, 1146, 1145, 1065, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 1137, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	1071, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 1160, 1161, 360, 1084, 268, 0, 0, 0, 0,
	0, 361, 362, 363, 1144, 0, 0, 0, 364, 0,
	365, 366, 0, 0, 1171, 367, 368, 1157, 1158, 369,
	370, 371, 372, 373, 374, 375, 376, 377, 0, 378,
	1167, 0, 1094, 379, 0, 380, 381, 382, 383, 384,
	1130, 1131, 1134, 463, 1173, 385, 386, 0, 387, 388,
	389, 390, 391, 0, 0, 0, 269, 392, 393, 394,
	396, 0, 1172, 395, 1139, 1140, 0, 1100, 0, 397,
	398, 1174, 1132, 1175, 399, 400, 401, 1176, 402, 0,
	0, 0, 403, 404, 405, 406, 407, 408, 0, 409,
	411, 410, 0, 412, 1168, 1177, 413, 414, 1178, 0,
	415, 0, 0, 0, 416, 417, 420, 1123, 1122, 418,
	419, 421, 422, 0, 423, 424, 426, 429, 425, 427,
	428, 430, 443, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 445, 0, 444, 1179, 446,
	447, 448, 453, 455, 456, 451, 452, 454, 457, 458,
	450, 1180, 459, 449, 1062, 270, 1181, 460, 461, 1085,
	1133, 462, 1147, 464, 465, 0, 0, 466, 0, 0,
	0, 468, 469, 470, 0, 0, 471, 472, 650, 1182,
	473, 1183, 1162, 474, 475, 1072, 476, 477, 478, 479,
	480, 481, 482, 483, 0, 484, 485, 652, 486, 487,
	488, 653, 489, 490, 491, 1163, 492, 655, 493, 494,
	0, 495, 496, 0, 497, 498, 499, 500, 501, 502,
	503, 1143, 504, 506, 505, 507, 0, 508, 0, 509,
	510, 511, 0, 0, 0, 0, 512, 0, 514, 515,
	516, 517, 513, 518, 519, 520, 521, 0, 522, 523,
	524, 1184, 525, 526, 527, 528, 1073, 529, 0, 530,
	531, 537, 538, 539, 532, 533, 540, 541, 542, 543,
	544, 0, 546, 547, 545, 548, 549, 550, 1126, 551,
	552, 534, 535, 553, 554, 1185, 555, 556, 557, 558,
	559, 560, 561, 1141, 0, 562, 0, 563, 564, 565,
	567, 536, 568, 573, 574, 1188, 569, 570, 571, 572,
	1164, 576, 577, 0, 578, 579, 1059, 575, 566, 0,
	580, 581, 582, 583, 584, 585, 586, 354, 587, 0,
	588, 1153, 1154, 1155, 1156, 0, 597, 0, 589, 590,
	591, 1165, 592, 1166, 1083, 593, 594, 595, 596, 0,
	598, 599, 0, 1066, 600, 601, 602, 604, 605, 603,
	606, 1127, 607, 0, 0, 608, 609, 610, 667, 1150,
	1187, 0, 612, 611, 613, 670, 0, 614, 1679, 0,
	0, 0, 615, 616, 671, 617, 618, 619, 1063, 0,
	0, 0, 0, 0, 0, 0, 1058, 0, 0, 0,
	0, 0, 0, 1056, 1057, 0, 0, 0, 0, 0,
	0, 0, 1089, 0, 0, 1052, 1087, 1105, 1077, 1078,
	1079, 1075, 1076, 1088, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 271, 273, 272, 274, 275, 276,
	277, 0, 278, 279, 0, 0, 0, 0, 0, 1129,
	1093, 0, 0, 0, 280, 281, 1169, 282, 283, 284,
	285, 286, 287, 621, 1142, 0, 288, 1149, 289, 1148,
	0, 1159, 290, 291, 292, 293, 294, 295, 1095, 1128,
	1060, 296, 1189, 1190, 628, 0, 297, 298, 1135, 0,
	1116, 0, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 0, 311, 0, 312,
	313, 314, 315, 316, 317, 0, 318, 319, 320, 1170,
	321, 322, 323, 1119, 1117, 1118, 1125, 1121, 1120, 1124,
	324, 325, 326, 327, 328, 1152, 329, 1146, 1145, 1065,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 1137, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 347, 348, 1071, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 1160, 1161, 360,
	1084, 268, 0, 0, 0, 0, 0, 361, 362, 363,
	1144, 0, 0, 0, 364, 0, 365, 366, 0, 0,
	1171, 367, 368, 1157, 1158, 369, 370, 371, 372, 373,
	374, 375, 376, 377, 0, 378, 1167, 0, 1094, 379,
	0, 380, 381, 382, 383, 384, 1130, 1131, 1134, 463,
	1173, 385, 386, 0, 387, 388, 389, 390, 391, 0,
	0, 0, 269, 392, 393, 394, 396, 0, 1172, 395,
	1139, 1140, 0, 1100, 0, 397, 398, 1174, 1132, 1175,
	399, 400, 401, 1176, 402, 0, 0, 0, 403, 404,
	405, 406, 407, 408, 0, 409, 411, 410, 0, 412,
	1168, 1177, 413, 414, 1178, 0, 415, 0, 0, 0,
	416, 417, 420, 1123, 1122, 418, 419, 421, 422, 0,
	423, 424, 426, 429, 425, 427, 428, 430, 443, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 445, 0, 444, 1179, 446, 447, 448, 453, 455,
	456, 451, 452, 454, 457, 458, 450, 1180, 459, 449,
	1062, 270, 1181, 460, 461, 1085, 1133, 462, 1147, 464,
	465, 0, 0, 466, 0, 1067, 0, 468, 469, 470,
	0, 0, 471, 472, 650, 1182, 473, 1183, 1162, 474,
	475, 1072, 476, 477, 478, 479, 480, 481, 482, 483,
	0, 484, 485, 652, 486, 487, 488, 653, 489, 490,
	491, 1163, 492, 655, 493, 494, 0, 495, 496, 0,
	497, 498, 499, 500, 501, 502, 503, 1143, 504, 506,
	505, 507, 0, 508, 0, 509, 510, 511, 0, 0,
	0, 0, 512, 0, 514, 515, 516, 517, 513, 518,
	519, 520, 521, 0, 522, 523, 524, 1184, 525, 526,
	527, 528, 1073, 529, 0, 530, 531, 537, 538, 539,
	532, 533, 540, 541, 542, 543, 544, 0, 546, 547,
	545, 548, 549, 550, 1126, 551, 552, 534, 535, 553,
	554, 1185, 555, 556, 557, 558, 559, 560, 561, 1141,
	0, 562, 0, 563, 564, 565, 567, 536, 568, 573,
	574, 1188, 569, 570, 571, 572, 1164, 576, 577, 0,
	578, 579, 1059, 575, 566, 0, 580, 581, 582, 583,
	584, 585, 586, 354, 587, 0, 588, 1153, 1154, 1155,
	1156, 0, 597, 0, 589, 590, 591, 1165, 592, 1166,
	1083, 593, 594, 595, 596, 0, 598, 599, 0, 1066,
	600, 601, 602, 604, 605, 603, 606, 1127, 607, 0,
	0, 608, 609, 610, 667, 1150, 1187, 0, 612, 611,
	613, 670, 0, 614, 0, 0, 0, 0, 615, 616,
	671, 617, 618, 619, 1063, 0, 0, 0, 0, 0,
	0, 0, 1058, 0, 0, 0, 0, 0, 0, 1056,
	1057, 1105, 1077, 1078, 1079, 1075, 1076, 1088, 1089, 0,
	0, 0, 1087, 0, 0, 0, 0, 0, 271, 273,
	272, 274, 275, 276, 277, 0, 278, 279, 0, 0,
	0, 0, 0, 1129, 1093, 0, 0, 0, 280, 281,
	1169, 282, 283, 284, 285, 286, 287, 621, 1142, 0,
	288, 1149, 289, 1148, 0, 1159, 290, 291, 292, 293,
	294, 295, 1095, 1128, 1060, 296, 1189, 1190, 628, 0,
	297, 298, 1135, 0, 1116, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 4537, 317, 0,
	318, 319, 320, 1170, 321, 322, 323, 1119, 1117, 1118,
	1125, 1121, 1120, 1124, 324, 325, 326, 327, 328, 1152,
	329, 1146, 1145, 1065, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 1137, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	1071, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 1160, 1161, 360, 1084, 268, 0, 0, 0, 0,
	0, 361, 362, 363, 1144, 0, 0, 0, 364, 0,
	365, 366, 0, 0, 1171, 367, 368, 1157, 1158, 369,
	370, 371, 372, 373, 374, 375, 376, 377, 0, 378,
	1167, 0, 1094, 379, 0, 380, 381, 382, 383, 384,
	1130, 1131, 1134, 463, 1173, 385, 386, 0, 387, 388,
	389, 390, 391, 0, 0, 0, 269, 392, 393, 394,
	396, 0, 1172, 395, 1139, 1140, 0, 1100, 0, 397,
	398, 1174, 1132, 1175, 399, 400, 401, 1176, 402, 0,
	0, 0, 403, 404, 405, 406, 407, 408, 0, 409,
	411, 410, 0, 412, 1168, 1177, 413, 414, 1178, 0,
	415, 0, 0, 0, 416, 417, 420, 1123, 1122, 418,
	419, 421, 422, 0, 423, 424, 426, 429, 425, 427,
	428, 430, 443, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 445, 0, 444, 1179, 446,
	447, 448, 453, 455, 456, 451, 452, 454, 457, 458,
	450, 1180, 459, 449, 1062, 270, 1181, 460, 461, 1085,
	1133, 462, 1147, 464, 465, 0, 0, 466, 0, 1067,
	0, 468, 469, 470, 0, 0, 471, 472, 650, 1182,
	473, 1183, 1162, 474, 475, 1072, 476, 477, 478, 479,
	480, 481, 482, 483, 0, 484, 485, 652, 486, 487,
	488, 653, 489, 490, 491, 1163, 492, 655, 493, 494,
	0, 495, 496, 0, 497, 498, 499, 500, 501, 502,
	503, 1143, 504, 506, 505, 507, 0, 508, 0, 509,
	510, 511, 0, 0, 0, 0, 512, 0, 514, 515,
	516, 517, 513, 518, 519, 520, 521, 0, 522, 523,
	524, 1184, 525, 526, 527, 528, 1073, 529, 0, 530,
	531, 537, 538, 539, 532, 533, 540, 541, 542, 543,
	544, 0, 546, 547, 545, 548, 549, 550, 1126, 551,
	552, 534, 535, 553, 554, 1185, 555, 556, 557, 558,
	559, 560, 561, 1141, 0, 562, 0, 563, 564, 565,
	567, 536, 568, 573, 574, 1188, 569, 570, 571, 572,
	1164, 576, 577, 0, 578, 579, 1059, 575, 566, 0,
	580, 581, 582, 583, 584, 585, 586, 354, 587, 0,
	588, 1153, 1154, 1155, 1156, 0, 597, 0, 589, 590,
	591, 1165, 592, 1166, 1083, 593, 594, 595, 596, 0,
	598, 599, 0, 1066, 600, 601, 602, 604, 605, 603,
	606, 1127, 607, 0, 0, 608, 609, 610, 667, 1150,
	1187, 0, 612, 611, 613, 670, 0, 614, 0, 0,
	0, 0, 615, 616, 671, 617, 618, 619, 1063, 0,
	0, 0, 0, 0, 0, 0, 1058, 0, 0, 0,
	0, 0, 0, 1056, 1057, 1105, 1077, 1078, 1079, 1075,
	1076, 1088, 1089, 0, 0, 0, 1087, 0, 0, 0,
	0, 0, 271, 273, 272, 274, 275, 276, 277, 0,
	278, 279, 0, 0, 0, 0, 0, 1129, 1093, 0,
	0, 0, 280, 281, 1169, 282, 283, 284, 285, 286,
	287, 621, 1142, 0, 288, 1149, 289, 1148, 0, 1159,
	290, 291, 292, 293, 294, 295, 1095, 1128, 1060, 296,
	1189, 1190, 628, 0, 297, 298, 1135, 0, 1116, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 1170, 321, 322,
	323, 1119, 1117, 1118, 1125, 1121, 1120, 1124, 324, 325,
	326, 327, 328, 1152, 329, 1146, 1145, 1065, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 1137, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 1071, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 1160, 1161, 360, 1084, 268,
	0, 0, 0, 0, 0, 361, 362, 363, 1144, 0,
	0, 0, 364, 0, 365, 366, 0, 0, 1171, 367,
	368, 1157, 1158, 369, 370, 371, 372, 373, 374, 375,
	376, 377, 0, 378, 1167, 0, 1094, 379, 0, 380,
	381, 382, 383, 384, 1130, 1131, 1134, 463, 1173, 385,
	386, 0, 387, 388, 389, 390, 391, 0, 0, 0,
	2405, 392, 393, 394, 396, 0, 1172, 395, 1139, 1140,
	0, 1100, 0, 397, 398, 1174, 1132, 1175, 399, 400,
	401, 1176, 402, 0, 0, 0, 403, 404, 405, 406,
	407, 408, 0, 409, 411, 410, 0, 412, 1168, 1177,
	413, 414, 1178, 0, 415, 0, 0, 0, 416, 417,
	420, 1123, 1122, 418, 419, 421, 422, 0, 423, 424,
	426, 429, 425, 427, 428, 430, 443, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 445,
	0, 444, 1179, 446, 447, 448, 453, 455, 456, 451,
	452, 454, 457, 458, 450, 1180, 459, 449, 1062, 270,
	1181, 460, 461, 1085, 1133, 462, 1147, 464, 465, 0,
	0, 466, 0, 0, 0, 468, 469, 470, 0, 0,
	471, 472, 650, 1182, 473, 1183, 1162, 474, 475, 1072,
	476, 477, 478, 479, 480, 481, 482, 483, 0, 484,
	485, 652, 486, 487, 488, 653, 489, 490, 491, 1163,
	492, 655, 493, 494, 2404, 495, 496, 0, 497, 498,
	499, 500, 501, 502, 503, 1143, 504, 506, 505, 507,
	0, 508, 0, 509, 510, 511, 0, 0, 0, 0,
	512, 0, 514, 515, 516, 517, 513, 518, 519, 520,
	521, 0, 522, 523, 524, 1184, 525, 526, 527, 528,
	1073, 529, 0, 530, 531, 537, 538, 539, 532, 533,
	540, 541, 542, 543, 544, 0, 546, 547, 545, 548,
	549, 550, 1126, 551, 552, 534, 535, 553, 554, 1185,
	555, 556, 557, 558, 559, 560, 561, 1141, 0, 562,
	0, 563, 564, 565, 567, 536, 568, 573, 574, 1188,
	569, 570, 571, 572, 1164, 576, 577, 0, 578, 579,
	1059, 575, 566, 0, 580, 581, 582, 583, 584, 585,
	586, 354, 587, 0, 588, 1153, 1154, 1155, 1156, 0,
	597, 0, 589, 590, 591, 1165, 592, 1166, 1083, 593,
	594, 595, 596, 0, 598, 599, 0, 1066, 600, 601,
	602, 604, 605, 603, 606, 1127, 607, 0, 0, 608,
	609, 610, 667, 1150, 1187, 0, 612, 611, 613, 670,
	0, 614, 0, 0, 0, 0, 615, 616, 671, 617,
	618, 619, 1063, 0, 0, 0, 0, 0, 0, 0,
	1058, 0, 0, 0, 0, 0, 0, 1056, 1057, 1105,
	1077, 1078, 1079, 1075, 1076, 1088, 1089, 0, 0, 0,
	1087, 0, 0, 0, 0, 0, 271, 273, 272, 274,
	275, 276, 277, 0, 278, 279, 0, 0, 0, 0,
	0, 1129, 1093, 0, 0, 0, 280, 281, 1169, 282,
	283, 284, 285, 286, 287, 621, 1142, 0, 288, 1149,
	289, 1148, 0, 1159, 290, 291, 292, 293, 294, 295,
	1095, 1128, 1060, 296, 1189, 1190, 628, 0, 297, 298,
	1135, 0, 1116, 0, 299, 300, 301, 302, 303, 304,
	305, 0, 0, 307, 308, 309, 306, 310, 0, 311,
	0, 312, 313, 314, 315, 316, 317, 0, 318, 319,
	320, 1170, 321, 322, 323, 1119, 1117, 1118, 1125, 1121,
	1120, 1124, 324, 325, 326, 327, 328, 1152, 329, 1146,
	1145, 1065, 333, 330, 331, 0, 334, 332, 335, 0,
	336, 337, 338, 0, 0, 339, 1137, 341, 0, 342,
	343, 0, 344, 345, 346, 0, 347, 348, 1071, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 1160,
	1161, 360, 1084, 268, 0, 0, 0, 0, 0, 361,
	362, 363, 1144, 0, 0, 0, 364, 0, 365, 366,
	0, 0, 1171, 367, 368, 1157, 1158, 369, 370, 371,
	372, 373, 374, 375, 376, 377, 0, 378, 1167, 0,
	1094, 379, 0, 380, 381, 382, 383, 384, 1130, 1131,
	1134, 463, 1173, 385, 386, 0, 387, 388, 389, 390,
	391, 0, 0, 0, 269, 392, 393, 394, 396, 0,
	1172, 395, 1139, 1140, 0, 1100, 0, 397, 398, 1174,
	1132, 1175, 399, 400, 401, 1176, 402, 0, 0, 0,
	403, 404, 405, 406, 407, 408, 0, 409, 411, 410,
	0, 412, 1168, 1177, 413, 414, 1178, 0, 415, 0,
	0, 0, 416, 417, 420, 1123, 1122, 418, 419, 421,
	422, 0, 423, 424, 426, 429, 425, 427, 428, 430,
	443, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 445, 0, 444, 1179, 446, 447, 448,
	453, 455, 456, 451, 452, 454, 457, 458, 450, 1180,
	459, 449, 1062, 270, 1181, 460, 461, 1085, 1133, 462,
	1147, 464, 465, 0, 0, 466, 0, 1067, 0, 468,
	469, 470, 0, 0, 471, 472, 650, 1182, 473, 1183,
	1162, 474, 475, 1072, 476, 477, 478, 479, 480, 481,
	482, 483, 0, 484, 485, 652, 486, 487, 488, 653,
	489, 490, 491, 1163, 492, 655, 493, 494, 0, 495,
	496, 0, 497, 498, 499, 500, 501, 502, 503, 1143,
	504, 506, 505, 507, 0, 508, 0, 509, 510, 511,
	0, 0, 0, 0, 512, 0, 514, 515, 516, 517,
	513, 518, 519, 520, 521, 0, 522, 523, 524, 1184,
	525, 526, 527, 528, 1073, 529, 0, 530, 531, 537,
	538, 539, 532, 533, 540, 541, 542, 543, 544, 0,
	546, 547, 545, 548, 549, 550, 1126, 551, 552, 534,
	535, 553, 554, 1185, 555, 556, 557, 558, 559, 560,
	561, 1141, 0, 562, 0, 563, 564, 565, 567, 536,
	568, 573, 574, 1188, 569, 570, 571, 572, 1164, 576,
	577, 0, 578, 579, 1059, 575, 566, 0, 580, 581,
	582, 583, 584, 585, 586, 354, 587, 0, 588, 1153,
	1154, 1155, 1156, 0, 597, 0, 589, 590, 591, 1165,
	592, 1166, 1083, 593, 594, 595, 596, 0, 598, 599,
	0, 1066, 600, 601, 602, 604, 605, 603, 606, 1127,
	607, 0, 0, 608, 609, 610, 667, 1150, 1187, 0,
	612, 611, 613, 670, 0, 614, 0, 0, 0, 0,
	615, 616, 671, 617, 618, 619, 1063, 0, 0, 0,
	0, 0, 0, 0, 1058, 0, 0, 0, 0, 0,
	0, 1056, 1057, 1105, 1077, 1078, 1079, 1075, 1076, 1088,
	1089, 0, 0, 0, 1087, 0, 0, 0, 0, 0,
	271, 273, 272, 274, 275, 276, 277, 0, 278, 279,
	0, 0, 0, 0, 0, 1129, 1093, 0, 0, 0,
	280, 281, 1169, 282, 283, 284, 285, 286, 287, 621,
	1142, 0, 288, 1149, 289, 1148, 0, 1159, 290, 291,
	292, 293, 294, 295, 1095, 1128, 1060, 296, 1189, 1190,
	628, 0, 297, 298, 1135, 0, 1116, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 4295,
	317, 0, 318, 319, 320, 1170, 321, 322, 323, 1119,
	1117, 1118, 1125, 1121, 1120, 1124, 324, 325, 326, 327,
	328, 1152, 329, 1146, 1145, 1065, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	1137, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 1071, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 1160, 1161, 360, 1084, 268, 0, 0,
	0, 0, 0, 361, 362, 363, 1144, 0, 0, 0,
	364, 0, 365, 366, 0, 0, 1171, 367, 368, 1157,
	1158, 369, 370, 371, 372, 373, 374, 375, 376, 377,
	0, 378, 1167, 0, 1094, 379, 0, 380, 381, 382,
	383, 384, 1130, 1131, 1134, 463, 1173, 385, 386, 0,
	387, 388, 389, 390, 391, 0, 0, 0, 269, 392,
	393, 394, 396, 0, 1172, 395, 1139, 1140, 0, 1100,
	0, 397, 398, 1174, 1132, 1175, 399, 400, 401, 1176,
	402, 0, 0, 0, 403, 404, 405, 406, 407, 408,
	0, 409, 411, 410, 0, 412, 1168, 1177, 413, 414,
	1178, 0, 415, 0, 0, 0, 416, 417, 420, 1123,
	1122, 418, 419, 421, 422, 0, 423, 424, 426, 429,
	425, 427, 428, 430, 443, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 445, 0, 444,
	1179, 446, 447, 448, 453, 455, 456, 451, 452, 454,
	457, 458, 450, 1180, 459, 449, 1062, 270, 1181, 460,
	461, 1085, 1133, 462, 1147, 464, 465, 0, 0, 466,
	0, 1067, 0, 468, 469, 470, 0, 0, 471, 472,
	650, 1182, 473, 1183, 1162, 474, 475, 1072, 476, 477,
	478, 479, 480, 481, 482, 483, 0, 484, 485, 652,
	486, 487, 488, 653, 489, 490, 491, 1163, 492, 655,
	493, 494, 0, 495, 496, 0, 497, 498, 499, 500,
	501, 502, 503, 1143, 504, 506, 505, 507, 0, 508,
	0, 509, 510, 511, 0, 0, 0, 0, 512, 0,
	514, 515, 516, 517, 513, 518, 519, 520, 521, 0,
	522, 523, 524, 1184, 525, 526, 527, 528, 1073, 529,
	0, 530, 531, 537, 538, 539, 532, 533, 540, 541,
	542, 543, 544, 0, 546, 547, 545, 548, 549, 550,
	1126, 551, 552, 534, 535, 553, 554, 1185, 555, 556,
	557, 558, 559, 560, 561, 1141, 0, 562, 0, 563,
	564, 565, 567, 536, 568, 573, 574, 1188, 569, 570,
	571, 572, 1164, 576, 577, 0, 578, 579, 1059, 575,
	566, 0, 580, 581, 582, 583, 584, 585, 586, 354,
	587, 0, 588, 1153, 1154, 1155, 1156, 0, 597, 0,
	589, 590, 591, 1165, 592, 1166, 1083, 593, 594, 595,
	596, 0, 598, 599, 0, 1066, 600, 601, 602, 604,
	605, 603, 606, 1127, 607, 0, 0, 608, 609, 610,
	667, 1150, 1187, 0, 612, 611, 613, 670, 0, 614,
	0, 0, 0, 0, 615, 616, 671, 617, 618, 619,
	1063, 0, 0, 0, 0, 0, 0, 0, 1058, 0,
	0, 0, 0, 0, 0, 1056, 1057, 1105, 1077, 1078,
	1079, 1075, 1076, 1088, 1089, 0, 0, 0, 1087, 0,
	0, 0, 0, 0, 271, 273, 272, 274, 275, 276,
	277, 0, 278, 279, 0, 0, 0, 0, 0, 1129,
	1093, 0, 0, 0, 280, 281, 1169, 282, 283, 284,
	285, 286, 287, 621, 1142, 0, 288, 1149, 289, 1148,
	0, 1159, 290, 291, 292, 293, 294, 295, 1095, 1128,
	1060, 296, 1189, 1190, 628, 0, 297, 298, 1135, 0,
	1116, 0, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 0, 311, 0, 312,
	313, 314, 315, 316, 317, 0, 318, 319, 320, 1170,
	321, 322, 323, 1119, 1117, 1118, 1125, 1121, 1120, 1124,
	324, 325, 326, 327, 328, 1152, 329, 1146, 1145, 1065,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 1137, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 347, 348, 1071, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 1160, 1161, 360,
	1084, 268, 0, 0, 0, 0, 0, 361, 362, 363,
	1144, 0, 0, 0, 364, 0, 365, 366, 0, 0,
	1171, 367, 368, 1157, 1158, 369, 370, 371, 372, 373,
	374, 375, 376, 377, 0, 378, 1167, 0, 1094, 379,
	0, 380, 381, 382, 383, 384, 1130, 1131, 1134, 463,
	1173, 385, 386, 0, 387, 388, 389, 390, 391, 0,
	0, 0, 269, 392, 393, 394, 396, 0, 1172, 395,
	1139, 1140, 0, 1100, 0, 397, 398, 1174, 1132, 1175,
	399, 400, 401, 1176, 402, 0, 0, 0, 403, 404,
	405, 406, 407, 408, 0, 409, 411, 410, 0, 412,
	1168, 1177, 413, 414, 1178, 0, 415, 0, 0, 0,
	416, 417, 420, 1123, 1122, 418, 419, 421, 422, 0,
	423, 424, 426, 429, 425, 427, 428, 430, 443, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 445, 0, 444, 1179, 446, 447, 448, 453, 455,
	456, 451, 452, 454, 457, 458, 450, 1180, 459, 449,
	1062, 3911, 1181, 460, 461, 1085, 1133, 462, 1147, 464,
	465, 0, 0, 466, 0, 0, 0, 468, 469, 470,
	0, 0, 471, 472, 650, 1182, 473, 1183, 1162, 474,
	475, 1072, 476, 477, 478, 479, 480, 481, 482, 483,
	0, 484, 485, 652, 486, 487, 488, 653, 489, 490,
	491, 1163, 492, 655, 493, 494, 0, 495, 496, 0,
	497, 498, 499, 500, 501, 502, 503, 1143, 504, 506,
	505, 507, 0, 508, 0, 509, 510, 511, 0, 0,
	0, 0, 512, 0, 514, 515, 516, 517, 513, 518,
	519, 520, 521, 0, 522, 523, 524, 1184, 525, 526,
	527, 528, 1073, 529, 0, 530, 531, 537, 538, 539,
	532, 533, 540, 541, 542, 543, 544, 0, 546, 547,
	545, 548, 549, 550, 1126, 551, 552, 534, 535, 553,
	554, 1185, 555, 556, 557, 558, 559, 560, 561, 1141,
	0, 562, 0, 563, 564, 565, 567, 536, 568, 573,
	574, 1188, 569, 570, 571, 572, 1164, 576, 577, 0,
	578, 579, 1059, 575, 566, 0, 580, 581, 582, 583,
	584, 585, 586, 354, 587, 0, 588, 1153, 1154, 1155,
	1156, 0, 597, 0, 589, 590, 591, 1165, 592, 1166,
	1083, 593, 594, 595, 596, 0, 598, 599, 0, 1066,
	600, 601, 602, 604, 605, 603, 606, 1127, 607, 0,
	0, 608, 609, 610, 667, 1150, 1187, 0, 612, 611,
	613, 670, 0, 614, 0, 0, 0, 0, 615, 616,
	671, 617, 618, 619, 1063, 0, 0, 0, 0, 0,
	0, 0, 1058, 0, 0, 0, 0, 0, 0, 1056,
	1057, 1906, 0, 0, 0, 0, 0, 0, 1089, 0,
	0, 0, 1087, 1105, 1077, 1078, 1079, 1075, 1076, 1088,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	271, 273, 272, 274, 275, 276, 277, 0, 278, 279,
	0, 0, 0, 0, 0, 1129, 1093, 0, 0, 0,
	280, 281, 1169, 282, 283, 284, 285, 286, 287, 621,
	1142, 0, 288, 1149, 289, 1148, 0, 1159, 290, 291,
	292, 293, 294, 295, 1095, 1128, 1060, 296, 1189, 1190,
	628, 0, 297, 298, 1135, 0, 1116, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 316,
	317, 0, 318, 319, 320, 1170, 321, 322, 323, 1119,
	1117, 1118, 1125, 1121, 1120, 1124, 324, 325, 326, 327,
	328, 1152, 329, 1146, 1145, 1065, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	1137, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 1071, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 1160, 1161, 360, 1084, 268, 0, 0,
	0, 0, 0, 361, 362, 363, 1144, 0, 0, 0,
	364, 0, 365, 366, 0, 0, 1171, 367, 368, 1157,
	1158, 369, 370, 371, 372, 373, 374, 375, 376, 377,
	0, 378, 1167, 0, 1094, 379, 0, 380, 381, 382,
	383, 384, 1130, 1131, 1134, 463, 1173, 385, 386, 0,
	387, 388, 389, 390, 391, 0, 0, 0, 269, 392,
	393, 394, 396, 0, 1172, 395, 1139, 1140, 0, 1100,
	0, 397, 398, 1174, 1132, 1175, 399, 400, 401, 1176,
	402, 0, 0, 0, 403, 404, 405, 406, 407, 408,
	0, 409, 411, 410, 0, 412, 1168, 1177, 413, 414,
	1178, 0, 415, 0, 0, 0, 416, 417, 420, 1123,
	1122, 418, 419, 421, 422, 0, 423, 424, 426, 429,
	425, 427, 428, 430, 443, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 445, 0, 444,
	1179, 446, 447, 448, 453, 455, 456, 451, 452, 454,
	457, 458, 450, 1180, 459, 449, 1062, 270, 1181, 460,
	461, 1085, 1133, 462, 1147, 464, 465, 0, 0, 466,
	0, 0, 0, 468, 469, 470, 0, 0, 471, 472,
	650, 1182, 473, 1183, 1162, 474, 475, 1072, 476, 477,
	478, 479, 480, 481, 482, 483, 0, 484, 485, 652,
	486, 487, 488, 653, 489, 490, 491, 1163, 492, 655,
	493, 494, 0, 495, 496, 0, 497, 498, 499, 500,
	501, 502, 503, 1143, 504, 506, 505, 507, 0, 508,
	0, 509, 510, 511, 0, 0, 0, 0, 512, 0,
	514, 515, 516, 517, 513, 518, 519, 520, 521, 0,
	522, 523, 524, 1184, 525, 526, 527, 528, 1073, 529,
	0, 530, 531, 537, 538, 539, 532, 533, 540, 541,
	542, 543, 544, 0, 546, 547, 545, 548, 549, 550,
	1126, 551, 552, 534, 535, 553, 554, 1185, 555, 556,
	557, 558, 559, 560, 561, 1141, 0, 562, 0, 563,
	564, 565, 567, 536, 568, 573, 574, 1188, 569, 570,
	571, 572, 1164, 576, 577, 0, 578, 579, 1059, 575,
	566, 0, 580, 581, 582, 583, 584, 585, 586, 354,
	587, 0, 588, 1153, 1154, 1155, 1156, 0, 597, 0,
	589, 590, 591, 1165, 592, 1166, 1083, 593, 594, 595,
	596, 0, 598, 599, 0, 1066, 600, 601, 602, 604,
	605, 603, 606, 1127, 607, 0, 0, 608, 609, 610,
	667, 1150, 1187, 3632, 612, 611, 613, 670, 0, 614,
	0, 0, 0, 0, 615, 616, 671, 617, 618, 619,
	1063, 0, 0, 0, 0, 0, 0, 0, 1058, 0,
	0, 0, 0, 0, 0, 1056, 1057, 1105, 1077, 1078,
	1079, 1075, 1076, 1088, 1089, 0, 0, 0, 1087, 0,
	0, 0, 0, 0, 271, 273, 272, 274, 275, 276,
	277, 0, 278, 279, 0, 0, 0, 0, 0, 1129,
	1093, 0, 0, 0, 280, 281, 1169, 282, 283, 284,
	285, 286, 287, 621, 1142, 0, 288, 1149, 289, 1148,
	0, 1159, 290, 291, 292, 293, 294, 295, 1095, 1128,
	1060, 296, 1189, 1190, 628, 0, 297, 298, 1135, 0,
	1116, 0, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 0, 311, 0, 312,
	313, 314, 315, 316, 317, 0, 318, 319, 320, 1170,
	321, 322, 323, 1119, 1117, 1118, 1125, 1121, 1120, 1124,
	324, 325, 326, 327, 328, 1152, 329, 1146, 1145, 1065,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 1137, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 347, 348, 1071, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 1160, 1161, 360,
	1084, 268, 0, 0, 0, 0, 0, 361, 362, 363,
	1144, 0, 0, 0, 364, 0, 365, 366, 0, 0,
	1171, 367, 368, 1157, 1158, 369, 370, 371, 372, 373,
	374, 375, 376, 377, 0, 378, 1167, 0, 1094, 379,
	0, 380, 381, 382, 383, 384, 1130, 1131, 1134, 463,
	1173, 385, 386, 0, 387, 388, 389, 390, 391, 0,
	0, 0, 269, 392, 393, 394, 396, 0, 1172, 395,
	1139, 1140, 0, 1100, 0, 397, 398, 1174, 1132, 1175,
	399, 400, 401, 1176, 402, 0, 0, 0, 403, 404,
	405, 406, 407, 408, 0, 409, 411, 410, 0, 412,
	1168, 1177, 413, 414, 1178, 0, 415, 0, 0, 0,
	416, 417, 420, 1123, 1122, 418, 419, 421, 422, 0,
	423, 424, 426, 429, 425, 427, 428, 430, 443, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 445, 0, 444, 1179, 446, 447, 448, 453, 455,
	456, 451, 452, 454, 457, 458, 450, 1180, 459, 449,
	1062, 270, 1181, 460, 461, 1085, 1133, 462, 1147, 464,
	465, 0, 0, 466, 0, 0, 0, 468, 469, 470,
	0, 0, 471, 472, 650, 1182, 473, 1183, 1162, 474,
	475, 1072, 476, 477, 478, 479, 480, 481, 482, 483,
	0, 484, 485, 652, 486, 487, 488, 653, 489, 490,
	491, 1163, 492, 655, 493, 494, 0, 495, 496, 0,
	497, 498, 499, 500, 501, 502, 503, 1143, 504, 506,
	505, 507, 0, 508, 0, 509, 510, 511, 0, 0,
	0, 0, 512, 0, 514, 515, 516, 517, 513, 518,
	519, 520, 521, 0, 522, 523, 524, 1184, 525, 526,
	527, 528, 1073, 529, 0, 530, 531, 537, 538, 539,
	532, 533, 540, 541, 542, 543, 544, 0, 546, 547,
	545, 548, 549, 550, 1126, 551, 552, 534, 535, 553,
	554, 1185, 555, 556, 557, 558, 559, 560, 561, 1141,
	0, 562, 0, 563, 564, 565, 567, 536, 568, 573,
	574, 1188, 569, 570, 571, 572, 1164, 576, 577, 0,
	578, 579, 1059, 575, 566, 0, 580, 581, 582, 583,
	584, 585, 586, 354, 587, 0, 588, 1153, 1154, 1155,
	1156, 0, 597, 0, 589, 590, 591, 1165, 592, 1166,
	1083, 593, 594, 595, 596, 0, 598, 599, 0, 1066,
	600, 601, 602, 604, 605, 603, 606, 1127, 607, 0,
	0, 608, 609, 610, 667, 1150, 1187, 0, 612, 611,
	613, 670, 0, 614, 0, 0, 0, 0, 615, 616,
	671, 617, 618, 619, 1063, 0, 0, 0, 0, 0,
	0, 0, 1058, 0, 0, 0, 0, 0, 0, 1056,
	1057, 1906, 0, 0, 0, 0, 0, 0, 1089, 0,
	0, 0, 1087, 1105, 1077, 1078, 1079, 1075, 1076, 1088,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	271, 273, 272, 274, 275, 276, 277, 0, 278, 279,
	0, 0, 0, 0, 0, 1129, 1093, 0, 0, 0,
	280, 281, 1169, 282, 283, 284, 285, 286, 287, 621,
	1142, 0, 288, 1149, 289, 1148, 0, 1159, 290, 291,
	292, 293, 294, 295, 1095, 1128, 1060, 296, 1189, 1190,
	628, 0, 297, 298, 1135, 0, 1116, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 316,
	317, 0, 318, 319, 320, 1170, 321, 322, 323, 1119,
	1117, 1118, 1125, 1121, 1120, 1124, 324, 325, 326, 327,
	328, 1152, 329, 1146, 1145, 1065, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	1137, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 1071, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 1160, 1161, 360, 1084, 268, 0, 0,
	0, 0, 0, 361, 362, 363, 1144, 0, 0, 0,
	364, 0, 365, 366, 0, 2662, 1171, 367, 368, 1157,
	1158, 369, 370, 371, 372, 373, 374, 375, 376, 377,
	0, 378, 1167, 0, 1094, 379, 0, 380, 381, 382,
	383, 384, 1130, 1131, 1134, 463, 1173, 385, 386, 0,
	387, 388, 389, 390, 391, 0, 0, 0, 269, 392,
	393, 394, 396, 0, 1172, 395, 1139, 1140, 0, 1100,
	0, 397, 398, 1174, 1132, 1175, 399, 400, 401, 1176,
	402, 0, 0, 0, 403, 404, 405, 406, 407, 408,
	0, 409, 411, 410, 0, 412, 1168, 1177, 413, 414,
	1178, 0, 415, 0, 0, 0, 416, 417, 420, 1123,
	1122, 418, 419, 421, 422, 0, 423, 424, 426, 429,
	425, 427, 428, 430, 443, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 445, 0, 444,
	1179, 446, 447, 448, 453, 455, 456, 451, 452, 454,
	457, 458, 450, 1180, 459, 449, 1062, 270, 1181, 460,
	461, 1085, 1133, 462, 1147, 464, 465, 0, 0, 466,
	0, 0, 0, 468, 469, 470, 0, 0, 471, 472,
	650, 1182, 473, 1183, 1162, 474, 475, 1072, 476, 477,
	478, 479, 480, 481, 482, 483, 0, 484, 485, 652,
	486, 487, 488, 653, 489, 490, 491, 1163, 492, 655,
	493, 494, 0, 495, 496, 0, 497, 498, 499, 500,
	501, 502, 503, 1143, 504, 506, 505, 507, 0, 508,
	0, 509, 510, 511, 0, 0, 0, 0, 512, 0,
	514, 515, 516, 517, 513, 518, 519, 520, 521, 0,
	522, 523, 524, 1184, 525, 526, 527, 528, 1073, 529,
	0, 530, 531, 537, 538, 539, 532, 533, 540, 541,
	542, 543, 544, 0, 546, 547, 545, 548, 549, 550,
	1126, 551, 552, 534, 535, 553, 554, 1185, 555, 556,
	557, 558, 559, 560, 561, 1141, 0, 562, 0, 563,
	564, 565, 567, 536, 568, 573, 574, 1188, 569, 570,
	571, 572, 1164, 576, 577, 0, 578, 579, 1059, 575,
	566, 0, 580, 581, 582, 583, 584, 585, 586, 354,
	587, 0, 588, 1153, 1154, 1155, 1156, 0, 597, 0,
	589, 590, 591, 1165, 592, 1166, 1083, 593, 594, 595,
	596, 0, 598, 599, 0, 1066, 600, 601, 602, 604,
	605, 603, 606, 1127, 607, 0, 0, 608, 609, 610,
	667, 1150, 1187, 0, 612, 611, 613, 670, 0, 614,
	0, 0, 0, 0, 615, 616, 671, 617, 618, 619,
	1063, 0, 0, 0, 0, 0, 0, 0, 1058, 0,
	0, 0, 0, 0, 0, 1056, 1057, 1105, 1077, 1078,
	1079, 1075, 1076, 1088, 1089, 0, 0, 0, 1087, 0,
	0, 0, 0, 0, 271, 273, 272, 274, 275, 276,
	277, 0, 278, 279, 0, 0, 0, 0, 0, 1129,
	1093, 0, 0, 0, 280, 281, 1169, 282, 283, 284,
	285, 286, 287, 621, 1142, 0, 288, 1149, 289, 1148,
	0, 1159, 290, 291, 292, 293, 294, 295, 1095, 1128,
	1060, 296, 1189, 1190, 628, 0, 297, 298, 1135, 0,
	1116, 0, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 0, 311, 0, 312,
	313, 314, 315, 316, 317, 0, 318, 319, 320, 1170,
	321, 322, 323, 1119, 1117, 1118, 1125, 1121, 1120, 1124,
	324, 325, 326, 327, 328, 1152, 329, 1146, 1145, 1065,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 1137, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 347, 348, 1071, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 1160, 1161, 360,
	1084, 268, 0, 0, 0, 0, 0, 361, 362, 363,
	1144, 0, 0, 0, 364, 0, 365, 366, 0, 0,
	1171, 367, 368, 1157, 1158, 369, 370, 371, 372, 373,
	374, 375, 376, 377, 0, 378, 1167, 0, 1094, 379,
	0, 380, 381, 382, 383, 384, 1130, 1131, 1134, 463,
	1173, 385, 386, 0, 387, 388, 389, 390, 391, 0,
	0, 0, 269, 392, 393, 394, 396, 0, 1172, 395,
	1139, 1140, 0, 1100, 0, 397, 398, 1174, 1132, 1175,
	399, 400, 401, 1176, 402, 0, 0, 0, 403, 404,
	405, 406, 407, 408, 0, 409, 411, 410, 0, 412,
	1168, 1177, 413, 414, 1178, 0, 415, 0, 0, 0,
	416, 417, 420, 1123, 1122, 418, 419, 421, 422, 0,
	423, 424, 426, 429, 425, 427, 428, 430, 443, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 445, 0, 444, 1179, 446, 447, 448, 453, 455,
	456, 451, 452, 454, 457, 458, 450, 1180, 459, 449,
	1062, 270, 1181, 460, 461, 1085, 1133, 462, 1147, 464,
	465, 0, 0, 466, 0, 0, 0, 468, 469, 470,
	0, 0, 471, 472, 650, 1182, 473, 1183, 1162, 474,
	475, 1072, 476, 477, 478, 479, 480, 481, 482, 483,
	0, 484, 485, 652, 486, 487, 488, 653, 489, 490,
	491, 1163, 492, 655, 493, 494, 0, 495, 496, 0,
	497, 498, 499, 500, 501, 502, 503, 1143, 504, 506,
	505, 507, 0, 508, 0, 509, 510, 511, 0, 0,
	0, 0, 512, 0, 514, 515, 516, 517, 513, 518,
	519, 520, 521, 0, 522, 523, 524, 1184, 525, 526,
	527, 528, 1073, 529, 0, 530, 531, 537, 538, 539,
	532, 533, 540, 541, 542, 543, 544, 0, 546, 547,
	545, 548, 549, 550, 1126, 551, 552, 534, 535, 553,
	554, 1185, 555, 556, 557, 558, 559, 560, 561, 1141,
	0, 562, 0, 563, 564, 565, 567, 536, 568, 573,
	574, 1188, 569, 570, 571, 572, 1164, 576, 577, 0,
	578, 579, 1059, 575, 566, 0, 580, 581, 582, 583,
	584, 585, 586, 354, 587, 0, 588, 1153, 1154, 1155,
	1156, 0, 597, 0, 589, 590, 591, 1165, 592, 1166,
	1083, 593, 594, 595, 596, 0, 598, 599, 0, 1066,
	600, 601, 602, 604, 605, 603, 606, 1127, 607, 0,
	0, 608, 609, 610, 667, 1150, 1187, 0, 612, 611,
	613, 670, 0, 614, 0, 0, 0, 0, 615, 616,
	671, 617, 618, 619, 1063, 0, 0, 0, 0, 0,
	0, 0, 1058, 0, 0, 0, 0, 0, 0, 1056,
	1057, 0, 0, 0, 0, 0, 0, 0, 1089, 1836,
	0, 2667, 1087, 1105, 1077, 1078, 1079, 1075, 1076, 1088,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	271, 273, 272, 274, 275, 276, 277, 0, 278, 279,
	0, 0, 0, 0, 0, 1129, 1093, 0, 0, 0,
	280, 281, 1169, 282, 283, 284, 285, 286, 287, 621,
	1142, 0, 288, 1149, 289, 1148, 0, 1159, 290, 291,
	292, 293, 294, 295, 1095, 1128, 1060, 296, 1189, 1190,
	628, 0, 297, 298, 1135, 0, 1116, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 316,
	317, 0, 318, 319, 320, 1170, 321, 322, 323, 1119,
	1117, 1118, 1125, 1121, 1120, 1124, 324, 325, 326, 327,
	328, 1152, 329, 1146, 1145, 1065, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	1137, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 1071, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 1160, 1161, 360, 1084, 268, 0, 0,
	0, 0, 0, 361, 362, 363, 1144, 0, 0, 0,
	364, 0, 365, 366, 0, 0, 1171, 367, 368, 1157,
	1158, 369, 370, 371, 372, 373, 374, 375, 376, 377,
	0, 378, 1167, 0, 1094, 379, 0, 380, 381, 382,
	383, 384, 1130, 1131, 1134, 463, 1173, 385, 386, 0,
	387, 388, 389, 390, 391, 0, 0, 0, 269, 392,
	393, 394, 396, 0, 1172, 395, 1139, 1140, 0, 1100,
	0, 397, 398, 1174, 1132, 1175, 399, 400, 401, 1176,
	402, 0, 0, 0, 403, 404, 405, 406, 407, 408,
	0, 409, 411, 410, 0, 412, 1168, 1177, 413, 414,
	1178, 0, 415, 0, 0, 0, 416, 417, 420, 1123,
	1122, 418, 419, 421, 422, 0, 423, 424, 426, 429,
	425, 427, 428, 430, 443, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 445, 0, 444,
	1179, 446, 447, 448, 453, 455, 456, 451, 452, 454,
	457, 458, 450, 1180, 459, 449, 1062, 270, 1181, 460,
	461, 1085, 1133, 462, 1147, 464, 465, 0, 0, 466,
	0, 0, 0, 468, 469, 470, 0, 0, 471, 472,
	650, 1182, 473, 1183, 1162, 474, 475, 1072, 476, 477,
	478, 479, 480, 481, 482, 483, 0, 484, 485, 652,
	486, 487, 488, 653, 489, 490, 491, 1163, 492, 655,
	493, 494, 0, 495, 496, 0, 497, 498, 499, 500,
	501, 502, 503, 1143, 504, 506, 505, 507, 0, 508,
	0, 509, 510, 511, 0, 0, 0, 0, 512, 0,
	514, 515, 516, 517, 513, 518, 519, 520, 521, 0,
	522, 523, 524, 1184, 525, 526, 527, 528, 1073, 529,
	0, 530, 531, 537, 538, 539, 532, 533, 540, 541,
	542, 543, 544, 0, 546, 547, 545, 548, 549, 550,
	1126, 551, 552, 534, 535, 553, 554, 1185, 555, 556,
	557, 558, 559, 560, 561, 1141, 0, 562, 0, 563,
	564, 565, 567, 536, 568, 573, 574, 1188, 569, 570,
	571, 572, 1164, 576, 577, 0, 578, 579, 1059, 575,
	566, 0, 580, 581, 582, 583, 584, 585, 586, 354,
	587, 0, 588, 1153, 1154, 1155, 1156, 0, 597, 0,
	589, 590, 591, 1165, 592, 1166, 1083, 593, 594, 595,
	596, 0, 598, 599, 0, 1066, 600, 601, 602, 604,
	605, 603, 606, 1127, 607, 0, 0, 608, 609, 610,
	667, 1150, 1187, 0, 612, 611, 613, 670, 0, 614,
	0, 0, 0, 0, 615, 616, 671, 617, 618, 619,
	1063, 0, 0, 0, 0, 0, 0, 0, 1058, 0,
	0, 0, 0, 0, 0, 1056, 1057, 0, 0, 0,
	0, 0, 0, 0, 1089, 0, 0, 2665, 1087, 1105,
	1077, 1078, 1079, 1075, 1076, 1088, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 271, 273, 272, 274,
	275, 276, 277, 0, 278, 279, 0, 0, 0, 0,
	0, 1129, 1093, 0, 0, 0, 280, 281, 1169, 282,
	283, 284, 285, 286, 287, 621, 1142, 0, 288, 1149,
	289, 1148, 0, 1159, 290, 291, 292, 293, 294, 295,
	1095, 1128, 1060, 296, 1189, 1190, 628, 0, 297, 298,
	1135, 0, 1116, 0, 299, 300, 301, 302, 303, 304,
	305, 0, 0, 307, 308, 309, 306, 310, 0, 311,
	0, 312, 313, 314, 315, 316, 317, 0, 318, 319,
	320, 1170, 321, 322, 323, 1119, 1117, 1118, 1125, 1121,
	1120, 1124, 324, 325, 326, 327, 328, 1152, 329, 1146,
	1145, 1065, 333, 330, 331, 0, 334, 332, 335, 0,
	336, 337, 338, 0, 0, 339, 1137, 341, 0, 342,
	343, 0, 344, 345, 346, 0, 347, 348, 1071, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 1160,
	1161, 360, 1084, 268, 0, 0, 0, 0, 0, 361,
	362, 363, 1144, 0, 0, 0, 364, 0, 365, 366,
	0, 0, 1171, 367, 368, 1157, 1158, 369, 370, 371,
	372, 373, 374, 375, 376, 377, 0, 378, 1167, 0,
	1094, 379, 0, 380, 381, 382, 383, 384, 1130, 1131,
	1134, 463, 1173, 385, 386, 0, 387, 388, 389, 390,
	391, 0, 0, 0, 269, 392, 393, 394, 396, 0,
	1172, 395, 1139, 1140, 0, 1100, 0, 397, 398, 1174,
	1132, 1175, 399, 400, 401, 1176, 402, 0, 0, 0,
	403, 404, 405, 406, 407, 408, 0, 409, 411, 410,
	0, 412, 1168, 1177, 413, 414, 1178, 0, 415, 0,
	0, 0, 416, 417, 420, 1123, 1122, 418, 419, 421,
	422, 0, 423, 424, 426, 429, 425, 427, 428, 430,
	443, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 445, 0, 444, 1179, 446, 447, 448,
	453, 455, 456, 451, 452, 454, 457, 458, 450, 1180,
	459, 449, 1062, 270, 1181, 460, 461, 1085, 1133, 462,
	1147, 464, 465, 0, 0, 466, 0, 0, 0, 468,
	469, 470, 0, 0, 471, 472, 650, 1182, 473, 1183,
	1162, 474, 475, 1072, 476, 477, 478, 479, 480, 481,
	482, 483, 0, 484, 485, 652, 486, 487, 488, 653,
	489, 490, 491, 1163, 492, 655, 493, 494, 0, 495,
	496, 0, 497, 498, 499, 500, 501, 502, 503, 1143,
	504, 506, 505, 507, 0, 508, 0, 509, 510, 511,
	0, 0, 0, 0, 512, 0, 514, 515, 516, 517,
	513, 518, 519, 520, 521, 0, 522, 523, 524, 1184,
	525, 526, 527, 528, 1073, 529, 0, 530, 531, 537,
	538, 539, 532, 533, 540, 541, 542, 543, 544, 0,
	546, 547, 545, 548, 549, 550, 1126, 551, 552, 534,
	535, 553, 554, 1185, 555, 556, 557, 558, 559, 560,
	561, 1141, 0, 562, 0, 563, 564, 565, 567, 536,
	568, 573, 574, 1188, 569, 570, 571, 572, 1164, 576,
	577, 0, 578, 579, 1059, 575, 566, 0, 580, 581,
	582, 583, 584, 585, 586, 354, 587, 0, 588, 1153,
	1154, 1155, 1156, 0, 597, 0, 589, 590, 591, 1165,
	592, 1166, 1083, 593, 594, 595, 596, 0, 598, 599,
	0, 1066, 600, 601, 602, 604, 605, 603, 606, 1127,
	607, 0, 0, 608, 609, 610, 667, 1150, 1187, 0,
	612, 611, 613, 670, 0, 614, 0, 0, 0, 0,
	615, 616, 671, 617, 618, 619, 1063, 0, 0, 0,
	0, 0, 0, 0, 1058, 0, 0, 0, 0, 0,
	0, 1056, 1057, 0, 0, 0, 0, 0, 0, 0,
	1089, 0, 0, 2653, 1087, 1105, 1077, 1078, 1079, 1075,
	1076, 1088, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 271, 273, 272, 274, 275, 276, 277, 0,
	278, 279, 0, 0, 0, 0, 0, 1129, 1093, 0,
	0, 0, 280, 281, 1169, 282, 283, 284, 285, 286,
	287, 621, 1142, 0, 288, 1149, 289, 1148, 0, 1159,
	290, 291, 292, 293, 294, 295, 1095, 1128, 1060, 296,
	1189, 1190, 628, 0, 297, 298, 1135, 0, 1116, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 1170, 321, 322,
	323, 1119, 1117, 1118, 1125, 1121, 1120, 1124, 324, 325,
	326, 327, 328, 1152, 329, 1146, 1145, 1065, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 1137, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 1071, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 1160, 1161, 360, 1084, 268,
	0, 0, 0, 0, 0, 361, 362, 363, 1144, 0,
	0, 0, 364, 0, 365, 366, 0, 0, 1171, 367,
	368, 1157, 1158, 369, 370, 371, 372, 373, 374, 375,
	376, 377, 0, 378, 1167, 0, 1094, 379, 0, 380,
	381, 382, 383, 384, 1130, 1131, 1134, 463, 1173, 385,
	386, 0, 387, 388, 389, 390, 391, 0, 0, 0,
	269, 392, 393, 394, 396, 0, 1172, 395, 1139, 1140,
	0, 1100, 0, 397, 398, 1174, 1132, 1175, 399, 400,
	401, 1176, 402, 0, 0, 0, 403, 404, 405, 406,
	407, 408, 0, 409, 411, 410, 0, 412, 1168, 1177,
	413, 414, 1178, 0, 415, 0, 0, 0, 416, 417,
	420, 1123, 1122, 418, 419, 421, 422, 0, 423, 424,
	426, 429, 425, 427, 428, 430, 443, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 445,
	0, 444, 1179, 446, 447, 448, 453, 455, 456, 451,
	452, 454, 457, 458, 450, 1180, 459, 449, 1062, 270,
	1181, 460, 461, 1085, 1133, 462, 1147, 464, 465, 0,
	0, 466, 0, 0, 0, 468, 469, 470, 0, 0,
	471, 472, 650, 1182, 473, 1183, 1162, 474, 475, 1072,
	476, 477, 478, 479, 480, 481, 482, 483, 0, 484,
	485, 652, 486, 487, 488, 653, 489, 490, 491, 1163,
	492, 655, 493, 494, 0, 495, 496, 0, 497, 498,
	499, 500, 501, 502, 503, 1143, 504, 506, 505, 507,
	0, 508, 0, 509, 510, 511, 0, 0, 0, 0,
	512, 0, 514, 515, 516, 517, 513, 518, 519, 520,
	521, 0, 522, 523, 524, 1184, 525, 526, 527, 528,
	1073, 529, 0, 530, 531, 537, 538, 539, 532, 533,
	540, 541, 542, 543, 544, 0, 546, 547, 545, 548,
	549, 550, 1126, 551, 552, 534, 535, 553, 554, 1185,
	555, 556, 557, 558, 559, 560, 561, 1141, 0, 562,
	0, 563, 564, 565, 567, 536, 568, 573, 574, 1188,
	569, 570, 571, 572, 1164, 576, 577, 0, 578, 579,
	1059, 575, 566, 0, 580, 581, 582, 583, 584, 585,
	586, 354, 587, 0, 588, 1153, 1154, 1155, 1156, 0,
	597, 0, 589, 590, 591, 1165, 592, 1166, 1083, 593,
	594, 595, 596, 0, 598, 599, 0, 1066, 600, 601,
	602, 604, 605, 603, 606, 1127, 607, 0, 0, 608,
	609, 610, 667, 1150, 1187, 0, 612, 611, 613, 670,
	0, 614, 0, 0, 0, 0, 615, 616, 671, 617,
	618, 619, 1063, 0, 0, 0, 0, 0, 0, 0,
	1058, 0, 0, 0, 0, 0, 0, 1056, 1057, 0,
	0, 0, 0, 0, 0, 0, 1089, 0, 0, 2641,
	1087, 1105, 1077, 1078, 1079, 1075, 1076, 1088, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 271, 273,
	272, 274, 275, 276, 277, 0, 278, 279, 0, 0,
	0, 0, 0, 1129, 1093, 0, 0, 0, 280, 281,
	1169, 282, 283, 284, 285, 286, 287, 621, 1142, 0,
	288, 1149, 289, 1148, 0, 1159, 290, 291, 292, 293,
	294, 295, 1095, 1128, 1060, 296, 1189, 1190, 628, 0,
	297, 298, 1135, 0, 1116, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 1170, 321, 322, 323, 1119, 1117, 1118,
	1125, 1121, 1120, 1124, 324, 325, 326, 327, 328, 1152,
	329, 1146, 1145, 1065, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 1137, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	1071, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 1160, 1161, 360, 1084, 268, 0, 0, 0, 0,
	0, 361, 362, 363, 1144, 0, 0, 0, 364, 0,
	365, 366, 0, 0, 1171, 367, 368, 1157, 1158, 369,
	370, 371, 372, 373, 374, 375, 376, 377, 0, 378,
	1167, 0, 1094, 379, 0, 380, 381, 382, 383, 384,
	1130, 1131, 1134, 463, 1173, 385, 386, 0, 387, 388,
	389, 390, 391, 0, 0, 0, 269, 392, 393, 394,
	396, 0, 1172, 395, 1139, 1140, 0, 1100, 0, 397,
	398, 1174, 1132, 1175, 399, 400, 401, 1176, 402, 0,
	0, 0, 403, 404, 405, 406, 407, 408, 0, 409,
	411, 410, 0, 412, 1168, 1177, 413, 414, 1178, 0,
	415, 0, 0, 0, 416, 417, 420, 1123, 1122, 418,
	419, 421, 422, 0, 423, 424, 426, 429, 425, 427,
	428, 430, 443, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 445, 0, 444, 1179, 446,
	447, 448, 453, 455, 456, 451, 452, 454, 457, 458,
	450, 1180, 459, 449, 1062, 270, 1181, 460, 461, 1085,
	1133, 462, 1147, 464, 465, 0, 0, 466, 0, 0,
	0, 468, 469, 470, 0, 0, 471, 472, 650, 1182,
	473, 1183, 1162, 474, 475, 1072, 476, 477, 478, 479,
	480, 481, 482, 483, 0, 484, 485, 652, 486, 487,
	488, 653, 489, 490, 491, 1163, 492, 655, 493, 494,
	0, 495, 496, 0, 497, 498, 499, 500, 501, 502,
	503, 1143, 504, 506, 505, 507, 0, 508, 0, 509,
	510, 511, 0, 0, 0, 0, 512, 0, 514, 515,
	516, 517, 513, 518, 519, 520, 521, 0, 522, 523,
	524, 1184, 525, 526, 527, 528, 1073, 529, 0, 530,
	531, 537, 538, 539, 532, 533, 540, 541, 542, 543,
	544, 0, 546, 547, 545, 548, 549, 550, 1126, 551,
	552, 534, 535, 553, 554, 1185, 555, 556, 557, 558,
	559, 560, 561, 1141, 0, 562, 0, 563, 564, 565,
	567, 536, 568, 573, 574, 1188, 569, 570, 571, 572,
	1164, 576, 577, 0, 578, 579, 1059, 575, 566, 0,
	580, 581, 582, 583, 584, 585, 586, 354, 587, 0,
	588, 1153, 1154, 1155, 1156, 0, 597, 0, 589, 590,
	591, 1165, 592, 1166, 1083, 593, 594, 595, 596, 0,
	598, 599, 0, 1066, 600, 601, 602, 604, 605, 603,
	606, 1127, 607, 0, 0, 608, 609, 610, 667, 1150,
	1187, 0, 612, 611, 613, 670, 0, 614, 0, 0,
	0, 0, 615, 616, 671, 617, 618, 619, 1063, 0,
	0, 0, 0, 0, 0, 0, 1058, 0, 0, 0,
	0, 0, 0, 1056, 1057, 0, 0, 0, 0, 0,
	0, 0, 1089, 0, 0, 2639, 1087, 2630, 2637, 1078,
	1079, 1075, 1076, 1088, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 271, 273, 272, 274, 275, 276,
	277, 0, 278, 279, 0, 0, 0, 0, 0, 1129,
	1093, 0, 0, 0, 280, 281, 1169, 282, 283, 284,
	285, 286, 287, 621, 1142, 0, 288, 1149, 289, 1148,
	0, 1159, 290, 291, 292, 293, 294, 295, 1095, 1128,
	1060, 296, 1189, 1190, 628, 0, 297, 298, 1135, 0,
	1116, 0, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 0, 311, 0, 312,
	313, 314, 315, 316, 317, 0, 318, 319, 320, 1170,
	321, 322, 323, 1119, 1117, 1118, 1125, 1121, 1120, 1124,
	324, 325, 326, 327, 328, 1152, 2633, 1146, 1145, 1065,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 1137, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 347, 348, 1071, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 1160, 1161, 360,
	1084, 268, 0, 0, 0, 0, 0, 361, 362, 363,
	1144, 0, 0, 0, 364, 0, 365, 366, 0, 0,
	1171, 367, 368, 1157, 1158, 369, 370, 371, 372, 373,
	374, 375, 376, 377, 0, 378, 1167, 0, 1094, 379,
	0, 380, 381, 382, 2634, 384, 1130, 1131, 1134, 463,
	1173, 385, 386, 0, 387, 388, 389, 390, 391, 0,
	0, 0, 269, 392, 393, 394, 396, 0, 1172, 395,
	1139, 1140, 0, 1100, 0, 397, 398, 1174, 1132, 1175,
	399, 400, 401, 1176, 402, 0, 0, 0, 403, 404,
	405, 406, 407, 408, 0, 409, 411, 410, 0, 412,
	1168, 1177, 413, 414, 1178, 0, 415, 0, 0, 0,
	416, 417, 420, 1123, 1122, 418, 419, 421, 422, 0,
	423, 424, 426, 429, 425, 427, 2635, 430, 2632, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 445, 0, 444, 1179, 446, 447, 448, 453, 455,
	456, 451, 452, 454, 457, 458, 450, 1180, 459, 449,
	1062, 270, 1181, 460, 461, 1085, 1133, 462, 1147, 464,
	465, 0, 0, 466, 0, 0, 0, 468, 469, 470,
	0, 0, 471, 472, 650, 1182, 473, 1183, 1162, 474,
	475, 1072, 476, 477, 478, 479, 480, 481, 482, 483,
	0, 484, 485, 652, 486, 487, 488, 653, 489, 490,
	491, 1163, 492, 655, 493, 494, 0, 495, 496, 0,
	497, 498, 499, 500, 501, 502, 503, 1143, 504, 506,
	505, 507, 0, 508, 0, 509, 510, 511, 0, 0,
	0, 0, 512, 0, 514, 515, 516, 517, 513, 518,
	519, 520, 521, 0, 522, 523, 524, 1184, 525, 526,
	527, 528, 1073, 529, 0, 530, 531, 537, 538, 539,
	532, 533, 540, 541, 542, 543, 2636, 0, 546, 547,
	545, 548, 549, 550, 1126, 551, 552, 534, 535, 553,
	554, 1185, 555, 556, 557, 558, 559, 560, 561, 1141,
	0, 562, 0, 563, 564, 565, 567, 536, 568, 573,
	574, 1188, 569, 570, 571, 572, 1164, 576, 577, 0,
	578, 579, 1059, 575, 566, 0, 580, 581, 582, 583,
	584, 585, 586, 354, 587, 0, 588, 1153, 1154, 1155,
	1156, 0, 597, 0, 589, 590, 591, 1165, 592, 1166,
	1083, 593, 594, 595, 596, 0, 598, 599, 0, 1066,
	600, 601, 602, 604, 605, 603, 606, 1127, 607, 0,
	0, 608, 609, 610, 667, 1150, 1187, 0, 612, 611,
	613, 670, 0, 614, 0, 0, 0, 0, 615, 616,
	671, 617, 2631, 619, 1063, 0, 0, 0, 0, 0,
	0, 0, 1058, 0, 0, 0, 0, 0, 0, 1056,
	1057, 0, 0, 0, 0, 0, 0, 0, 1089, 0,
	0, 2627, 1087, 2630, 2637, 1078, 1079, 1075, 1076, 1088,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	271, 273, 272, 274, 275, 276, 277, 0, 278, 279,
	0, 0, 0, 0, 0, 1129, 1093, 0, 0, 0,
	280, 281, 1169, 282, 283, 284, 285, 286, 287, 621,
	1142, 0, 288, 1149, 289, 1148, 0, 1159, 290, 291,
	292, 293, 294, 295, 1095, 1128, 1060, 296, 1189, 1190,
	628, 0, 297, 298, 1135, 0, 1116, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 316,
	317, 0, 318, 319, 320, 1170, 321, 322, 323, 1119,
	1117, 1118, 1125, 1121, 1120, 1124, 324, 325, 326, 327,
	328, 1152, 2633, 1146, 1145, 1065, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	1137, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 1071, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 1160, 1161, 360, 1084, 268, 0, 0,
	0, 0, 0, 361, 362, 363, 1144, 0, 0, 0,
	364, 0, 365, 366, 0, 0, 1171, 367, 368, 1157,
	1158, 369, 370, 371, 372, 373, 374, 375, 376, 377,
	0, 378, 1167, 0, 1094, 379, 0, 380, 381, 382,
	2634, 384, 1130, 1131, 1134, 463, 1173, 385, 386, 0,
	387, 388, 389, 390, 391, 0, 0, 0, 269, 392,
	393, 394, 396, 0, 1172, 395, 1139, 1140, 0, 1100,
	0, 397, 398, 1174, 1132, 1175, 399, 400, 401, 1176,
	402, 0, 0, 0, 403, 404, 405, 406, 407, 408,
	0, 409, 411, 410, 0, 412, 1168, 1177, 413, 414,
	1178, 0, 415, 0, 0, 0, 416, 417, 420, 1123,
	1122, 418, 419, 421, 422, 0, 423, 424, 426, 429,
	425, 427, 2635, 430, 2632, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 445, 0, 444,
	1179, 446, 447, 448, 453, 455, 456, 451, 452, 454,
	457, 458, 450, 1180, 459, 449, 1062, 270, 1181, 460,
	461, 1085, 1133, 462, 1147, 464, 465, 0, 0, 466,
	0, 0, 0, 468, 469, 470, 0, 0, 471, 472,
	650, 1182, 473, 1183, 1162, 474, 475, 1072, 476, 477,
	478, 479, 480, 481, 482, 483, 0, 484, 485, 652,
	486, 487, 488, 653, 489, 490, 491, 1163, 492, 655,
	493, 494, 0, 495, 496, 0, 497, 498, 499, 500,
	501, 502, 503, 1143, 504, 506, 505, 507, 0, 508,
	0, 509, 510, 511, 0, 0, 0, 0, 512, 0,
	514, 515, 516, 517, 513, 518, 519, 520, 521, 0,
	522, 523, 524, 1184, 525, 526, 527, 528, 1073, 529,
	0, 530, 531, 537, 538, 539, 532, 533, 540, 541,
	542, 543, 2636, 0, 546, 547, 545, 548, 549, 550,
	1126, 551, 552, 534, 535, 553, 554, 1185, 555, 556,
	557, 558, 559, 560, 561, 1141, 0, 562, 0, 563,
	564, 565, 567, 536, 568, 573, 574, 1188, 569, 570,
	571, 572, 1164, 576, 577, 0, 578, 579, 1059, 575,
	566, 0, 580, 581, 582, 583, 584, 585, 586, 354,
	587, 0, 588, 1153, 1154, 1155, 1156, 0, 597, 0,
	589, 590, 591, 1165, 592, 1166, 1083, 593, 594, 595,
	596, 0, 598, 599, 0, 1066, 600, 601, 602, 604,
	605, 603, 606, 1127, 607, 0, 0, 608, 609, 610,
	667, 1150, 1187, 0, 612, 611, 613, 670, 0, 614,
	0, 0, 0, 0, 615, 616, 671, 617, 2631, 619,
	1063, 0, 0, 0, 0, 0, 0, 0, 1058, 0,
	0, 0, 0, 0, 0, 1056, 1057, 1105, 1077, 1078,
	1079, 1075, 1076, 1088, 1089, 0, 0, 0, 1087, 0,
	0, 0, 0, 0, 271, 273, 272, 274, 275, 276,
	277, 0, 278, 279, 0, 0, 0, 0, 0, 1129,
	1093, 0, 0, 0, 280, 281, 1169, 282, 283, 284,
	285, 286, 287, 621, 1142, 0, 288, 1149, 289, 1148,
	0, 1159, 290, 291, 292, 293, 294, 295, 1095, 1128,
	1060, 296, 1189, 1190, 628, 0, 297, 298, 1135, 0,
	1116, 0, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 0, 311, 0, 312,
	313, 314, 315, 316, 317, 0, 318, 319, 320, 1170,
	321, 322, 323, 1119, 1117, 1118, 1125, 1121, 1120, 1124,
	324, 325, 326, 327, 328, 1152, 329, 1146, 1145, 1065,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 1137, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 347, 348, 1071, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 1160, 1161, 360,
	1084, 268, 0, 0, 0, 0, 0, 361, 362, 363,
	1144, 0, 0, 0, 364, 0, 365, 366, 0, 0,
	1171, 367, 368, 1157, 1158, 369, 370, 371, 372, 373,
	374, 375, 376, 377, 0, 378, 1167, 0, 1094, 379,
	0, 380, 381, 382, 383, 384, 1130, 1131, 1134, 463,
	1173, 385, 386, 0, 387, 388, 389, 390, 391, 0,
	0, 0, 269, 392, 393, 394, 396, 0, 1172, 395,
	1139, 1140, 0, 1100, 0, 397, 398, 1174, 1132, 1175,
	399, 400, 401, 1176, 402, 0, 0, 0, 403, 404,
	405, 406, 407, 408, 0, 409, 411, 410, 0, 412,
	1168, 1177, 413, 414, 1178, 0, 415, 0, 0, 0,
	416, 417, 420, 1123, 1122, 418, 419, 421, 422, 0,
	423, 424, 426, 429, 425, 427, 428, 430, 443, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 445, 0, 444, 1179, 446, 447, 448, 453, 455,
	456, 451, 452, 454, 457, 458, 450, 1180, 459, 449,
	1062, 270, 1181, 460, 461, 1085, 1133, 462, 1147, 464,
	465, 0, 0, 466, 0, 0, 0, 468, 469, 470,
	0, 0, 471, 472, 650, 1182, 473, 1183, 1162, 474,
	475, 1072, 476, 477, 478, 479, 480, 481, 482, 483,
	0, 484, 485, 652, 486, 487, 488, 653, 489, 490,
	491, 1163, 492, 655, 493, 494, 0, 495, 496, 0,
	497, 498, 499, 500, 501, 502, 503, 1143, 504, 506,
	505, 507, 0, 508, 0, 509, 510, 511, 0, 0,
	0, 0, 512, 0, 514, 515, 516, 517, 513, 518,
	519, 520, 521, 0, 522, 523, 524, 1184, 525, 526,
	527, 528, 1073, 529, 0, 530, 531, 537, 538, 539,
	532, 533, 540, 541, 542, 543, 544, 0, 546, 547,
	545, 548, 549, 550, 1126, 551, 552, 534, 535, 553,
	554, 1185, 555, 556, 557, 558, 559, 560, 561, 1141,
	0, 562, 0, 563, 564, 565, 567, 536, 568, 573,
	574, 1188, 569, 570, 571, 572, 1164, 576, 577, 0,
	578, 579, 1059, 575, 566, 0, 580, 581, 582, 583,
	584, 585, 586, 354, 587, 0, 588, 1153, 1154, 1155,
	1156, 0, 597, 0, 589, 590, 591, 1165, 592, 1166,
	1083, 593, 594, 595, 596, 0, 598, 599, 0, 1066,
	600, 601, 602, 604, 605, 603, 606, 1127, 607, 0,
	0, 608, 609, 610, 667, 1150, 1187, 0, 612, 611,
	613, 670, 0, 614, 0, 0, 0, 0, 615, 616,
	671, 617, 618, 619, 1063, 0, 0, 0, 0, 0,
	0, 0, 1058, 0, 0, 0, 0, 0, 0, 1056,
	1057, 0, 0, 0, 0, 0, 1844, 0, 1089, 0,
	0, 0, 1087, 1105, 1077, 1078, 1079, 1075, 1076, 1088,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	271, 273, 272, 274, 275, 276, 277, 2384, 278, 279,
	0, 0, 0, 0, 0, 1129, 1093, 0, 0, 0,
	280, 281, 1169, 282, 283, 284, 285, 286, 287, 621,
	1142, 0, 288, 1149, 289, 1148, 0, 1159, 290, 291,
	292, 293, 294, 295, 1095, 1128, 1060, 296, 1189, 1190,
	628, 0, 297, 298, 1135, 0, 1116, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 316,
	317, 0, 318, 319, 320, 1170, 321, 322, 323, 1119,
	1117, 1118, 1125, 1121, 1120, 1124, 324, 325, 326, 327,
	328, 1152, 329, 1146, 1145, 1065, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	1137, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 1071, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 1160, 1161, 360, 1084, 268, 0, 0,
	0, 0, 0, 361, 362, 363, 1144, 0, 0, 0,
	364, 0, 365, 366, 0, 0, 1171, 367, 368, 1157,
	1158, 369, 370, 371, 372, 373, 374, 375, 376, 377,
	0, 378, 1167, 0, 1094, 379, 0, 380, 381, 382,
	383, 384, 1130, 1131, 1134, 463, 1173, 385, 386, 0,
	387, 388, 389, 390, 391, 0, 0, 0, 269, 392,
	393, 394, 396, 0, 1172, 395, 1139, 1140, 0, 1100,
	0, 397, 398, 1174, 1132, 1175, 399, 400, 401, 1176,
	402, 0, 0, 0, 403, 404, 405, 406, 407, 408,
	0, 409, 411, 410, 0, 412, 1168, 1177, 413, 414,
	1178, 0, 415, 0, 0, 0, 416, 417, 420, 1123,
	1122, 418, 419, 421, 422, 0, 423, 424, 426, 429,
	425, 427, 428, 430, 443, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 445, 0, 444,
	1179, 446, 447, 448, 453, 455, 456, 451, 452, 454,
	457, 458, 450, 1180, 459, 449, 1062, 270, 1181, 460,
	461, 1085, 1133, 462, 1147, 464, 465, 0, 0, 466,
	0, 0, 0, 468, 469, 470, 0, 0, 471, 472,
	650, 1182, 473, 1183, 1162, 474, 475, 1072, 476, 477,
	478, 479, 480, 481, 482, 483, 0, 484, 485, 652,
	486, 487, 488, 653, 489, 490, 491, 1163, 492, 655,
	493, 494, 0, 495, 496, 0, 497, 498, 499, 500,
	501, 502, 503, 1143, 504, 506, 505, 507, 0, 508,
	0, 509, 510, 511, 0, 0, 0, 0, 512, 0,
	514, 515, 516, 517, 513, 518, 519, 520, 521, 0,
	522, 523, 524, 1184, 525, 526, 527, 528, 1073, 529,
	0, 530, 531, 537, 538, 539, 532, 533, 540, 541,
	542, 543, 544, 0, 546, 547, 545, 548, 549, 550,
	1126, 551, 552, 534, 535, 553, 554, 1185, 555, 556,
	557, 558, 559, 560, 561, 1141, 0, 562, 0, 563,
	564, 565, 567, 536, 568, 573, 574, 1188, 569, 570,
	571, 572, 1164, 576, 577, 0, 578, 579, 1059, 575,
	566, 0, 580, 581, 582, 583, 584, 585, 586, 354,
	587, 0, 588, 1153, 1154, 1155, 1156, 0, 597, 0,
	589, 590, 591, 1165, 592, 1166, 1083, 593, 594, 595,
	596, 0, 598, 599, 0, 1066, 600, 601, 602, 604,
	605, 603, 606, 1127, 607, 0, 0, 608, 609, 610,
	667, 1150, 1187, 0, 612, 611, 613, 670, 0, 614,
	0, 0, 0, 0, 615, 616, 671, 617, 618, 619,
	1063, 0, 0, 0, 0, 0, 0, 0, 1058, 0,
	0, 0, 0, 0, 0, 1056, 1057, 0, 0, 0,
	0, 0, 0, 0, 1089, 0, 0, 2327, 1087, 1105,
	1077, 1078, 1079, 1075, 1076, 1088, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 271, 273, 272, 274,
	275, 276, 277, 0, 278, 279, 0, 0, 0, 0,
	0, 1129, 1093, 0, 0, 0, 280, 281, 1169, 282,
	283, 284, 285, 286, 287, 621, 1142, 0, 288, 1149,
	289, 1148, 0, 1159, 290, 291, 292, 293, 294, 295,
	1095, 1128, 1060, 296, 1189, 1190, 628, 0, 297, 298,
	1135, 0, 1116, 0, 299, 300, 301, 302, 303, 304,
	305, 0, 0, 307, 308, 309, 306, 310, 0, 311,
	0, 312, 313, 314, 315, 316, 317, 0, 318, 319,
	320, 1170, 321, 322, 323, 1119, 1117, 1118, 1125, 1121,
	1120, 1124, 324, 325, 326, 327, 328, 1152, 329, 1146,
	1145, 1065, 333, 330, 331, 0, 334, 332, 335, 0,
	336, 337, 338, 0, 0, 339, 1137, 341, 0, 342,
	343, 0, 344, 345, 346, 0, 347, 348, 1071, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 1160,
	1161, 360, 1084, 268, 0, 0, 0, 0, 0, 361,
	362, 363, 1144, 0, 0, 0, 364, 0, 365, 366,
	0, 0, 1171, 367, 368, 1157, 1158, 369, 370, 371,
	372, 373, 374, 375, 376, 377, 0, 378, 1167, 0,
	1094, 379, 0, 380, 381, 382, 383, 384, 1130, 1131,
	1134, 463, 1173, 385, 386, 0, 387, 388, 389, 390,
	391, 0, 0, 0, 269, 392, 393, 394, 396, 0,
	1172, 395, 1139, 1140, 0, 1100, 0, 397, 398, 1174,
	1132, 1175, 399, 400, 401, 1176, 402, 0, 0, 0,
	403, 404, 405, 406, 407, 408, 0, 409, 411, 410,
	0, 412, 1168, 1177, 413, 414, 1178, 0, 415, 0,
	0, 0, 416, 417, 420, 1123, 1122, 418, 419, 421,
	422, 0, 423, 424, 426, 429, 425, 427, 428, 430,
	443, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 445, 0, 444, 1179, 446, 447, 448,
	453, 455, 456, 451, 452, 454, 457, 458, 450, 1180,
	459, 449, 1062, 270, 1181, 460, 461, 1085, 1133, 462,
	1147, 464, 465, 0, 0, 466, 0, 0, 0, 468,
	469, 470, 0, 0, 471, 472, 650, 1182, 473, 1183,
	1162, 474, 475, 1072, 476, 477, 478, 479, 480, 481,
	482, 483, 0, 484, 485, 652, 486, 487, 488, 653,
	489, 490, 491, 1163, 492, 655, 493, 494, 0, 495,
	496, 0, 497, 498, 499, 500, 501, 502, 503, 1143,
	504, 506, 505, 507, 0, 508, 0, 509, 510, 511,
	0, 0, 0, 0, 512, 0, 514, 515, 516, 517,
	513, 518, 519, 520, 521, 0, 522, 523, 524, 1184,
	525, 526, 527, 528, 1073, 529, 0, 530, 531, 537,
	538, 539, 532, 533, 540, 541, 542, 543, 544, 0,
	546, 547, 545, 548, 549, 550, 1126, 551, 552, 534,
	535, 553, 554, 1185, 555, 556, 557, 558, 559, 560,
	561, 1141, 0, 562, 0, 563, 564, 565, 567, 536,
	568, 573, 574, 1188, 569, 570, 571, 572, 1164, 576,
	577, 0, 578, 579, 1059, 575, 566, 0, 580, 581,
	582, 583, 584, 585, 586, 354, 587, 0, 588, 1153,
	1154, 1155, 1156, 0, 597, 0, 589, 590, 591, 1165,
	592, 1166, 1083, 593, 594, 595, 596, 0, 598, 599,
	0, 1066, 600, 601, 602, 604, 605, 603, 606, 1127,
	607, 0, 0, 608, 609, 610, 667, 1150, 1187, 0,
	612, 611, 613, 670, 0, 614, 0, 0, 0, 0,
	615, 616, 671, 617, 618, 619, 1063, 0, 0, 0,
	0, 0, 0, 0, 1058, 0, 0, 0, 0, 0,
	0, 1056, 1057, 0, 0, 0, 0, 0, 0, 0,
	1089, 0, 0, 1685, 1087, 1105, 1077, 1078, 1079, 1075,
	1076, 1088, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 271, 273, 272, 274, 275, 276, 277, 0,
	278, 279, 0, 0, 0, 0, 0, 1129, 1093, 0,
	0, 0, 280, 281, 1169, 282, 283, 284, 285, 286,
	287, 621, 1142, 0, 288, 1149, 289, 1148, 0, 1159,
	290, 291, 292, 293, 294, 295, 1095, 1128, 1060, 296,
	1189, 1190, 628, 0, 297, 298, 1135, 0, 1116, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 1170, 321, 322,
	323, 1119, 1117, 1118, 1125, 1121, 1120, 1124, 324, 325,
	326, 327, 328, 1152, 329, 1146, 1145, 1065, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 1137, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 1071, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 1160, 1161, 360, 1084, 268,
	0, 0, 0, 0, 0, 361, 362, 363, 1144, 0,
	0, 0, 364, 0, 365, 366, 0, 0, 1171, 367,
	368, 1157, 1158, 369, 370, 371, 372, 373, 374, 375,
	376, 377, 0, 378, 1167, 0, 1094, 379, 0, 380,
	381, 382, 383, 384, 1130, 1131, 1134, 463, 1173, 385,
	386, 0, 387, 388, 389, 390, 391, 0, 0, 0,
	269, 392, 393, 394, 396, 0, 1172, 395, 1139, 1140,
	0, 1100, 0, 397, 398, 1174, 1132, 1175, 399, 400,
	401, 1176, 402, 0, 0, 0, 403, 404, 405, 406,
	407, 408, 0, 409, 411, 410, 0, 412, 1168, 1177,
	413, 414, 1178, 0, 415, 0, 0, 0, 416, 417,
	420, 1123, 1122, 418, 419, 421, 422, 0, 423, 424,
	426, 429, 425, 427, 428, 430, 443, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 445,
	0, 444, 1179, 446, 447, 448, 453, 455, 456, 451,
	452, 454, 457, 458, 450, 1180, 459, 449, 1062, 270,
	1181, 460, 461, 1085, 1133, 462, 1147, 464, 465, 0,
	0, 466, 0, 0, 0, 468, 469, 470, 0, 0,
	471, 472, 650, 1182, 473, 1183, 1162, 474, 475, 1072,
	476, 477, 478, 479, 480, 481, 482, 483, 0, 484,
	485, 652, 486, 487, 488, 653, 489, 490, 491, 1163,
	492, 655, 493, 494, 0, 495, 496, 0, 497, 498,
	499, 500, 501, 502, 503, 1143, 504, 506, 505, 507,
	0, 508, 0, 509, 510, 511, 0, 0, 0, 0,
	512, 0, 514, 515, 516, 517, 513, 518, 519, 520,
	521, 0, 522, 523, 524, 1184, 525, 526, 527, 528,
	1073, 529, 0, 530, 531, 537, 538, 539, 532, 533,
	540, 541, 542, 543, 544, 0, 546, 547, 545, 548,
	549, 550, 1126, 551, 552, 534, 535, 553, 554, 1185,
	555, 556, 557, 558, 559, 560, 561, 1141, 0, 562,
	0, 563, 564, 565, 567, 536, 568, 573, 574, 1188,
	569, 570, 571, 572, 1164, 576, 577, 0, 578, 579,
	1059, 575, 566, 0, 580, 581, 582, 583, 584, 585,
	586, 354, 587, 0, 588, 1153, 1154, 1155, 1156, 0,
	597, 0, 589, 590, 591, 1165, 592, 1166, 1083, 593,
	594, 595, 596, 0, 598, 599, 0, 1066, 600, 601,
	602, 604, 605, 603, 606, 1127, 607, 0, 0, 608,
	609, 610, 667, 1150, 1187, 0, 612, 611, 613, 670,
	0, 614, 0, 0, 0, 0, 615, 616, 671, 617,
	618, 619, 1063, 0, 0, 0, 0, 0, 0, 0,
	1058, 0, 0, 0, 0, 0, 0, 1056, 1057, 0,
	0, 0, 0, 0, 0, 0, 1089, 0, 0, 1615,
	1087, 1105, 1077, 1078, 1079, 1075, 1076, 1088, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 271, 273,
	272, 274, 275, 276, 277, 0, 278, 279, 0, 0,
	0, 0, 0, 1129, 1093, 0, 0, 0, 280, 281,
	1169, 282, 283, 284, 285, 286, 287, 621, 1142, 0,
	288, 1149, 289, 1148, 0, 1159, 290, 291, 292, 293,
	294, 295, 1095, 1128, 1060, 296, 1189, 1190, 628, 0,
	297, 298, 1135, 0, 1116, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 1170, 321, 322, 323, 1119, 1117, 1118,
	1125, 1121, 1120, 1124, 324, 325, 326, 327, 328, 1152,
	329, 1146, 1145, 1065, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 1137, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	1071, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 1160, 1161, 360, 1084, 268, 0, 0, 0, 0,
	0, 361, 362, 363, 1144, 0, 0, 0, 364, 0,
	365, 366, 0, 0, 1171, 367, 368, 1157, 1158, 369,
	370, 371, 372, 373, 374, 375, 376, 377, 0, 378,
	1167, 0, 1094, 379, 0, 380, 381, 382, 383, 384,
	1130, 1131, 1134, 463, 1173, 385, 386, 0, 387, 388,
	389, 390, 391, 0, 0, 0, 269, 392, 393, 394,
	396, 0, 1172, 395, 1139, 1140, 0, 1100, 0, 397,
	398, 1174, 1132, 1175, 399, 400, 401, 1176, 402, 0,
	0, 0, 403, 404, 405, 406, 407, 408, 0, 409,
	411, 410, 0, 412, 1168, 1177, 413, 414, 1178, 0,
	415, 0, 0, 0, 416, 417, 420, 1123, 1122, 418,
	419, 421, 422, 0, 423, 424, 426, 429, 425, 427,
	428, 430, 443, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 445, 0, 444, 1179, 446,
	447, 448, 453, 455, 456, 451, 452, 454, 457, 458,
	450, 1180, 459, 449, 1062, 270, 1181, 460, 461, 1085,
	1133, 462, 1147, 464, 465, 0, 0, 466, 0, 0,
	0, 468, 469, 470, 0, 0, 471, 472, 650, 1182,
	473, 1183, 1162, 474, 475, 1072, 476, 477, 478, 479,
	480, 481, 482, 483, 0, 484, 485, 652, 486, 487,
	488, 653, 489, 490, 491, 1163, 492, 655, 493, 494,
	0, 495, 496, 0, 497, 498, 499, 500, 501, 502,
	503, 1143, 504, 506, 505, 507, 0, 508, 0, 509,
	510, 511, 0, 0, 0, 0, 512, 0, 514, 515,
	516, 517, 513, 518, 519, 520, 521, 0, 522, 523,
	524, 1184, 525, 526, 527, 528, 1073, 529, 0, 530,
	531, 537, 538, 539, 532, 533, 540, 541, 542, 543,
	544, 0, 546, 547, 545, 548, 549, 550, 1126, 551,
	552, 534, 535, 553, 554, 1185, 555, 556, 557, 558,
	559, 560, 561, 1141, 0, 562, 0, 563, 564, 565,
	567, 536, 568, 573, 574, 1188, 569, 570, 571, 572,
	1164, 576, 577, 0, 578, 579, 1059, 575, 566, 0,
	580, 581, 582, 583, 584, 585, 586, 354, 587, 0,
	588, 1153, 1154, 1155, 1156, 0, 597, 0, 589, 590,
	591, 1165, 592, 1166, 1083, 593, 594, 595, 596, 0,
	598, 599, 0, 1066, 600, 601, 602, 604, 605, 603,
	606, 1127, 607, 0, 0, 608, 609, 610, 667, 1150,
	1187, 0, 612, 611, 613, 670, 0, 614, 0, 0,
	0, 0, 615, 616, 671, 617, 618, 619, 1063, 0,
	0, 0, 0, 0, 0, 0, 1058, 0, 0, 0,
	0, 0, 0, 1056, 1057, 0, 0, 0, 0, 0,
	0, 0, 1089, 0, 0, 1610, 1087, 1105, 1077, 1078,
	1079, 1075, 1076, 1088, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 271, 273, 272, 274, 275, 276,
	277, 0, 278, 279, 0, 0, 0, 0, 0, 1129,
	1093, 0, 0, 0, 280, 281, 1169, 282, 283, 284,
	285, 286, 287, 621, 1142, 0, 288, 1149, 289, 1148,
	0, 1159, 290, 291, 292, 293, 294, 295, 1095, 1128,
	1060, 296, 1189, 1190, 628, 0, 297, 298, 1135, 0,
	1116, 0, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 0, 311, 0, 312,
	313, 314, 315, 316, 317, 0, 318, 319, 320, 1170,
	321, 322, 323, 1119, 1117, 1118, 1125, 1121, 1120, 1124,
	324, 325, 326, 327, 328, 1152, 329, 1146, 1145, 1065,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 1137, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 347, 348, 1071, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 1160, 1161, 360,
	1084, 268, 0, 0, 0, 0, 0, 361, 362, 363,
	1144, 0, 0, 0, 364, 0, 365, 366, 0, 0,
	1171, 367, 368, 1157, 1158, 369, 370, 371, 372, 373,
	374, 375, 376, 377, 0, 378, 1167, 0, 1094, 379,
	0, 380, 381, 382, 383, 384, 1130, 1131, 1134, 463,
	1173, 385, 386, 0, 387, 388, 389, 390, 391, 0,
	0, 0, 269, 392, 393, 394, 396, 0, 1172, 395,
	1139, 1140, 0, 1100, 0, 397, 398, 1174, 1132, 1175,
	399, 400, 401, 1176, 402, 0, 0, 0, 403, 404,
	405, 406, 407, 408, 0, 409, 411, 410, 0, 412,
	1168, 1177, 413, 414, 1178, 0, 415, 0, 0, 0,
	416, 417, 420, 1123, 1122, 418, 419, 421, 422, 0,
	423, 424, 426, 429, 425, 427, 428, 430, 443, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 445, 0, 444, 1179, 446, 447, 448, 453, 455,
	456, 451, 452, 454, 457, 458, 450, 1180, 459, 449,
	1062, 270, 1181, 460, 461, 1085, 1133, 462, 1147, 464,
	465, 0, 0, 466, 0, 0, 0, 468, 469, 470,
	0, 0, 471, 472, 650, 1182, 473, 1183, 1162, 474,
	475, 1072, 476, 477, 478, 479, 480, 481, 482, 483,
	0, 484, 485, 652, 486, 487, 488, 653, 489, 490,
	491, 1163, 492, 655, 493, 494, 0, 495, 496, 0,
	497, 498, 499, 500, 501, 502, 503, 1143, 504, 506,
	505, 507, 0, 508, 0, 509, 510, 511, 0, 0,
	0, 0, 512, 0, 514, 515, 516, 517, 513, 518,
	519, 520, 521, 0, 522, 523, 524, 1184, 525, 526,
	527, 528, 1073, 529, 0, 530, 531, 537, 538, 539,
	532, 533, 540, 541, 542, 543, 544, 0, 546, 547,
	545, 548, 549, 550, 1126, 551, 552, 534, 535, 553,
	554, 1185, 555, 556, 557, 558, 559, 560, 561, 1141,
	0, 562, 0, 563, 564, 565, 567, 536, 568, 573,
	574, 1188, 569, 570, 571, 572, 1164, 576, 577, 0,
	578, 579, 1059, 575, 566, 0, 580, 581, 582, 583,
	584, 585, 586, 354, 587, 0, 588, 1153, 1154, 1155,
	1156, 0, 597, 0, 589, 590, 591, 1165, 592, 1166,
	1083, 593, 594, 595, 596, 0, 598, 599, 0, 1066,
	600, 601, 602, 604, 605, 603, 606, 1127, 607, 0,
	0, 608, 609, 610, 667, 1150, 1187, 0, 612, 611,
	613, 670, 0, 614, 0, 0, 0, 0, 615, 616,
	671, 617, 618, 619, 1063, 0, 0, 0, 0, 0,
	0, 0, 1058, 0, 0, 0, 0, 0, 0, 1056,
	1057, 0, 0, 0, 0, 0, 0, 0, 1089, 0,
	0, 1601, 1087, 1105, 1077, 1078, 1079, 1075, 1076, 1088,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	271, 273, 272, 274, 275, 276, 277, 0, 278, 279,
	0, 0, 0, 0, 0, 1129, 1093, 0, 0, 0,
	280, 281, 1169, 282, 283, 284, 285, 286, 287, 621,
	1142, 0, 288, 1149, 289, 1148, 0, 1159, 290, 291,
	292, 293, 294, 295, 1095, 1128, 1060, 296, 1189, 1190,
	628, 0, 297, 298, 1135, 0, 1116, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 316,
	317, 0, 318, 319, 320, 1170, 321, 322, 323, 1119,
	1117, 1118, 1125, 1121, 1120, 1124, 324, 325, 326, 327,
	328, 1152, 329, 1146, 1145, 1065, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	1137, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 1071, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 1160, 1161, 360, 1084, 268, 0, 0,
	0, 0, 0, 361, 362, 363, 1144, 0, 0, 0,
	364, 0, 365, 366, 0, 0, 1171, 367, 368, 1157,
	1158, 369, 370, 371, 372, 373, 374, 375, 376, 377,
	0, 378, 1167, 0, 1094, 379, 0, 380, 381, 382,
	383, 384, 1130, 1131, 1134, 463, 1173, 385, 386, 0,
	387, 388, 389, 390, 391, 0, 0, 0, 269, 392,
	393, 394, 396, 0, 1172, 395, 1139, 1140, 0, 1100,
	0, 397, 398, 1174, 1132, 1175, 399, 400, 401, 1176,
	402, 0, 0, 0, 403, 404, 405, 406, 407, 408,
	0, 409, 411, 410, 0, 412, 1168, 1177, 413, 414,
	1178, 0, 415, 0, 0, 0, 416, 417, 420, 1123,
	1122, 418, 419, 421, 422, 0, 423, 424, 426, 429,
	425, 427, 428, 430, 443, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 445, 0, 444,
	1179, 446, 447, 448, 453, 455, 456, 451, 452, 454,
	457, 458, 450, 1180, 459, 449, 1062, 270, 1181, 460,
	461, 1085, 1133, 462, 1147, 464, 465, 0, 0, 466,
	0, 0, 0, 468, 469, 470, 0, 0, 471, 472,
	650, 1182, 473, 1183, 1162, 474, 475, 1072, 476, 477,
	478, 479, 480, 481, 482, 483, 0, 484, 485, 652,
	486, 487, 488, 653, 489, 490, 491, 1163, 492, 655,
	493, 494, 0, 495, 496, 0, 497, 498, 499, 500,
	501, 502, 503, 1143, 504, 506, 505, 507, 0, 508,
	0, 509, 510, 511, 0, 0, 0, 0, 512, 0,
	514, 515, 516, 517, 513, 518, 519, 520, 521, 0,
	522, 523, 524, 1184, 525, 526, 527, 528, 1073, 529,
	0, 530, 531, 537, 538, 539, 532, 533, 540, 541,
	542, 543, 544, 0, 546, 547, 545, 548, 549, 550,
	1126, 551, 552, 534, 535, 553, 554, 1185, 555, 556,
	557, 558, 559, 560, 561, 1141, 0, 562, 0, 563,
	564, 565, 567, 536, 568, 573, 574, 1188, 569, 570,
	571, 572, 1164, 576, 577, 0, 578, 579, 1059, 575,
	566, 0, 580, 581, 582, 583, 584, 585, 586, 354,
	587, 0, 588, 1153, 1154, 1155, 1156, 0, 597, 0,
	589, 590, 591, 1165, 592, 1166, 1083, 593, 594, 595,
	596, 0, 598, 599, 0, 1066, 600, 601, 602, 604,
	605, 603, 606, 1127, 607, 0, 0, 608, 609, 610,
	667, 1150, 1187, 0, 612, 611, 613, 670, 0, 614,
	0, 0, 0, 0, 615, 616, 671, 617, 618, 619,
	1063, 0, 0, 0, 0, 0, 0, 0, 1058, 0,
	0, 0, 0, 0, 0, 1056, 1057, 0, 0, 0,
	0, 0, 0, 0, 1089, 0, 0, 1596, 1087, 1105,
	1077, 1078, 1079, 1075, 1076, 1088, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 271, 273, 272, 274,
	275, 276, 277, 0, 278, 279, 0, 0, 0, 0,
	0, 1129, 1093, 0, 0, 0, 280, 281, 1169, 282,
	283, 284, 285, 286, 287, 621, 1142, 0, 288, 1149,
	289, 1148, 0, 1159, 290, 291, 292, 293, 294, 295,
	1095, 1128, 1060, 296, 1189, 1190, 628, 0, 297, 298,
	1135, 0, 1116, 0, 299, 300, 301, 302, 303, 304,
	305, 0, 0, 307, 308, 309, 306, 310, 0, 311,
	0, 312, 313, 314, 315, 316, 317, 0, 318, 319,
	320, 1170, 321, 322, 323, 1119, 1117, 1118, 1125, 1121,
	1120, 1124, 324, 325, 326, 327, 328, 1152, 329, 1146,
	1145, 1065, 333, 330, 331, 0, 334, 332, 335, 0,
	336, 337, 338, 0, 0, 339, 1137, 341, 0, 342,
	343, 0, 344, 345, 346, 0, 347, 348, 1071, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 1160,
	1161, 360, 1084, 268, 0, 0, 0, 0, 0, 361,
	362, 363, 1144, 0, 0, 0, 364, 0, 365, 366,
	0, 0, 1171, 367, 368, 1157, 1158, 369, 370, 371,
	372, 373, 374, 375, 376, 377, 0, 378, 1167, 0,
	1094, 379, 0, 380, 381, 382, 383, 384, 1130, 1131,
	1134, 463, 1173, 385, 386, 0, 387, 388, 389, 390,
	391, 0, 0, 0, 269, 392, 393, 394, 396, 0,
	1172, 395, 1139, 1140, 0, 1100, 0, 397, 398, 1174,
	1132, 1175, 399, 400, 401, 1176, 402, 0, 0, 0,
	403, 404, 405, 406, 407, 408, 0, 409, 411, 410,
	0, 412, 1168, 1177, 413, 414, 1178, 0, 415, 0,
	0, 0, 416, 417, 420, 1123, 1122, 418, 419, 421,
	422, 0, 423, 424, 426, 429, 425, 427, 428, 430,
	443, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 445, 0, 444, 1179, 446, 447, 448,
	453, 455, 456, 451, 452, 454, 457, 458, 450, 1180,
	459, 449, 1062, 270, 1181, 460, 461, 1085, 1133, 462,
	1147, 464, 465, 0, 0, 466, 0, 0, 0, 468,
	469, 470, 0, 0, 471, 472, 650, 1182, 473, 1183,
	1162, 474, 475, 1072, 476, 477, 478, 479, 480, 481,
	482, 483, 0, 484, 485, 652, 486, 487, 488, 653,
	489, 490, 491, 1163, 492, 655, 493, 494, 0, 495,
	496, 0, 497, 498, 499, 500, 501, 502, 503, 1143,
	504, 506, 505, 507, 0, 508, 0, 509, 510, 511,
	0, 0, 0, 0, 512, 0, 514, 515, 516, 517,
	513, 518, 519, 520, 521, 0, 522, 523, 524, 1184,
	525, 526, 527, 528, 1073, 529, 0, 530, 531, 537,
	538, 539, 532, 533, 540, 541, 542, 543, 544, 0,
	546, 547, 545, 548, 549, 550, 1126, 551, 552, 534,
	535, 553, 554, 1185, 555, 556, 557, 558, 559, 560,
	561, 1141, 0, 562, 0, 563, 564, 565, 567, 536,
	568, 573, 574, 1188, 569, 570, 571, 572, 1164, 576,
	577, 0, 578, 579, 1059, 575, 566, 0, 580, 581,
	582, 583, 584, 585, 586, 354, 587, 0, 588, 1153,
	1154, 1155, 1156, 0, 597, 0, 589, 590, 591, 1165,
	592, 1166, 1083, 593, 594, 595, 596, 0, 598, 599,
	0, 1066, 600, 601, 602, 604, 605, 603, 606, 1127,
	607, 0, 0, 608, 609, 610, 667, 1150, 1187, 0,
	612, 611, 613, 670, 0, 614, 0, 0, 0, 0,
	615, 616, 671, 617, 618, 619, 1063, 0, 0, 0,
	0, 0, 0, 0, 1058, 0, 0, 0, 0, 0,
	0, 1056, 1057, 0, 0, 0, 0, 0, 0, 0,
	1089, 0, 0, 1508, 1087, 1105, 1077, 1078, 1079, 1075,
	1076, 1088, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 271, 273, 272, 274, 275, 276, 277, 0,
	278, 279, 0, 0, 0, 0, 0, 1129, 1093, 0,
	0, 0, 280, 281, 1169, 282, 283, 284, 285, 286,
	287, 621, 1142, 0, 288, 1149, 289, 1148, 0, 1159,
	290, 291, 292, 293, 294, 295, 1095, 1128, 1060, 296,
	1189, 1190, 628, 0, 297, 298, 1135, 0, 1116, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 1170, 321, 322,
	323, 1119, 1117, 1118, 1125, 1121, 1120, 1124, 324, 325,
	326, 327, 328, 1152, 329, 1146, 1145, 1065, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 1137, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 1071, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 1160, 1161, 360, 1084, 268,
	0, 0, 0, 0, 0, 361, 362, 363, 1144, 0,
	0, 0, 364, 0, 365, 366, 0, 0, 1171, 367,
	368, 1157, 1158, 369, 370, 371, 372, 373, 374, 375,
	376, 377, 0, 378, 1167, 0, 1094, 379, 0, 380,
	381, 382, 383, 384, 1507, 1131, 1134, 463, 1173, 385,
	386, 0, 387, 388, 389, 390, 391, 0, 0, 0,
	269, 392, 393, 394, 396, 0, 1172, 395, 1139, 1140,
	0, 1100, 0, 397, 398, 1174, 1132, 1175, 399, 400,
	401, 1176, 402, 0, 0, 0, 403, 404, 405, 406,
	407, 408, 0, 409, 411, 410, 0, 412, 1168, 1177,
	413, 414, 1178, 0, 415, 0, 0, 0, 416, 417,
	420, 1123, 1122, 418, 419, 421, 422, 0, 423, 424,
	426, 429, 425, 427, 428, 430, 443, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 445,
	0, 444, 1179, 446, 447, 448, 453, 455, 456, 451,
	452, 454, 457, 458, 450, 1180, 459, 449, 1062, 270,
	1181, 460, 461, 1085, 1133, 462, 1147, 464, 465, 0,
	0, 466, 0, 0, 0, 468, 469, 470, 0, 0,
	471, 472, 650, 1182, 473, 1183, 1162, 474, 475, 1072,
	476, 477, 478, 479, 480, 481, 482, 483, 0, 484,
	485, 652, 486, 487, 488, 653, 489, 490, 491, 1163,
	492, 655, 493, 494, 0, 495, 496, 0, 497, 498,
	499, 500, 501, 502, 503, 1143, 504, 506, 505, 507,
	0, 508, 0, 509, 510, 511, 0, 0, 0, 0,
	512, 0, 514, 515, 516, 517, 513, 518, 519, 520,
	521, 0, 522, 523, 524, 1184, 525, 526, 527, 528,
	1073, 529, 0, 530, 531, 537, 538, 539, 532, 533,
	540, 541, 542, 543, 544, 0, 546, 547, 545, 548,
	549, 550, 1126, 551, 552, 534, 535, 553, 554, 1185,
	555, 556, 557, 558, 559, 560, 561, 1141, 0, 562,
	0, 563, 564, 565, 567, 536, 568, 573, 574, 1188,
	569, 570, 571, 572, 1164, 576, 577, 0, 578, 579,
	1059, 575, 566, 0, 580, 581, 582, 583, 584, 585,
	586, 354, 587, 0, 588, 1153, 1154, 1155, 1156, 0,
	597, 0, 589, 590, 591, 1165, 592, 1166, 1083, 593,
	594, 595, 596, 0, 598, 599, 0, 1066, 600, 601,
	602, 604, 605, 603, 606, 1127, 607, 0, 0, 608,
	609, 610, 667, 1150, 1187, 0, 612, 611, 613, 670,
	0, 614, 0, 0, 0, 0, 615, 616, 671, 617,
	618, 619, 1063, 0, 0, 0, 0, 0, 0, 0,
	1058, 0, 0, 0, 0, 0, 0, 1056, 1057, 0,
	0, 0, 0, 0, 0, 0, 1089, 0, 0, 1502,
	1087, 1105, 1077, 1078, 1079, 1075, 1076, 1088, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 271, 273,
	272, 274, 275, 276, 277, 0, 278, 279, 0, 0,
	0, 0, 0, 1129, 1093, 0, 0, 0, 280, 281,
	1169, 282, 283, 284, 285, 286, 287, 621, 1142, 0,
	288, 1149, 289, 1148, 0, 1159, 290, 291, 292, 293,
	294, 295, 1095, 1128, 1060, 296, 1189, 1190, 628, 0,
	297, 298, 1135, 0, 1116, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 1170, 321, 322, 323, 1119, 1117, 1118,
	1125, 1121, 1120, 1124, 324, 325, 326, 327, 328, 1152,
	329, 1146, 1145, 1065, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 1137, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	1071, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 1160, 1161, 360, 1084, 268, 0, 0, 0, 0,
	0, 361, 362, 363, 1144, 0, 0, 0, 364, 0,
	365, 366, 0, 0, 1171, 367, 368, 1157, 1158, 369,
	370, 371, 372, 373, 374, 375, 376, 377, 0, 378,
	1167, 0, 1094, 379, 0, 380, 381, 382, 383, 384,
	1501, 1131, 1134, 463, 1173, 385, 386, 0, 387, 388,
	389, 390, 391, 0, 0, 0, 269, 392, 393, 394,
	396, 0, 1172, 395, 1139, 1140, 0, 1100, 0, 397,
	398, 1174, 1132, 1175, 399, 400, 401, 1176, 402, 0,
	0, 0, 403, 404, 405, 406, 407, 408, 0, 409,
	411, 410, 0, 412, 1168, 1177, 413, 414, 1178, 0,
	415, 0, 0, 0, 416, 417, 420, 1123, 1122, 418,
	419, 421, 422, 0, 423, 424, 426, 429, 425, 427,
	428, 430, 443, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 445, 0, 444, 1179, 446,
	447, 448, 453, 455, 456, 451, 452, 454, 457, 458,
	450, 1180, 459, 449, 1062, 270, 1181, 460, 461, 1085,
	1133, 462, 1147, 464, 465, 0, 0, 466, 0, 0,
	0, 468, 469, 470, 0, 0, 471, 472, 650, 1182,
	473, 1183, 1162, 474, 475, 1072, 476, 477, 478, 479,
	480, 481, 482, 483, 0, 484, 485, 652, 486, 487,
	488, 653, 489, 490, 491, 1163, 492, 655, 493, 494,
	0, 495, 496, 0, 497, 498, 499, 500, 501, 502,
	503, 1143, 504, 506, 505, 507, 0, 508, 0, 509,
	510, 511, 0, 0, 0, 0, 512, 0, 514, 515,
	516, 517, 513, 518, 519, 520, 521, 0, 522, 523,
	524, 1184, 525, 526, 527, 528, 1073, 529, 0, 530,
	531, 537, 538, 539, 532, 533, 540, 541, 542, 543,
	544, 0, 546, 547, 545, 548, 549, 550, 1126, 551,
	552, 534, 535, 553, 554, 1185, 555, 556, 557, 558,
	559, 560, 561, 1141, 0, 562, 0, 563, 564, 565,
	567, 536, 568, 573, 574, 1188, 569, 570, 571, 572,
	1164, 576, 577, 0, 578, 579, 1059, 575, 566, 0,
	580, 581, 582, 583, 584, 585, 586, 354, 587, 0,
	588, 1153, 1154, 1155, 1156, 0, 597, 0, 589, 590,
	591, 1165, 592, 1166, 1083, 593, 594, 595, 596, 0,
	598, 599, 0, 1066, 600, 601, 602, 604, 605, 603,
	606, 1127, 607, 0, 0, 608, 609, 610, 667, 1150,
	1187, 0, 612, 611, 613, 670, 0, 614, 0, 0,
	0, 0, 615, 616, 671, 617, 618, 619, 1063, 0,
	0, 0, 0, 0, 0, 0, 1058, 0, 0, 0,
	0, 0, 0, 1056, 1057, 0, 0, 0, 0, 0,
	0, 0, 1089, 0, 0, 1495, 1087, 1105, 1077, 1078,
	1079, 1075, 1076, 1088, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 271, 273, 272, 274, 275, 276,
	277, 0, 278, 279, 0, 0, 0, 0, 0, 1129,
	1093, 0, 0, 0, 280, 281, 1169, 282, 283, 284,
	285, 286, 287, 621, 1142, 0, 288, 1149, 289, 1148,
	0, 1159, 290, 291, 292, 293, 294, 295, 1095, 1128,
	1060, 296, 1189, 1190, 628, 0, 297, 298, 1135, 0,
	1116, 0, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 0, 311, 0, 312,
	313, 314, 315, 316, 317, 0, 318, 319, 320, 1170,
	321, 322, 323, 1119, 1117, 1118, 1125, 1121, 1120, 1124,
	324, 325, 326, 327, 328, 1152, 329, 1146, 1145, 1065,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 1137, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 347, 348, 1071, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 1160, 1161, 360,
	1084, 268, 0, 0, 0, 0, 0, 361, 362, 363,
	1144, 0, 0, 0, 364, 0, 365, 366, 0, 0,
	1171, 367, 368, 1157, 1158, 369, 370, 371, 372, 373,
	374, 375, 376, 377, 0, 378, 1167, 0, 1094, 379,
	0, 380, 381, 382, 383, 384, 1130, 1131, 1134, 463,
	1173, 385, 386, 0, 387, 388, 389, 390, 391, 0,
	0, 0, 269, 392, 393, 394, 396, 0, 1172, 395,
	1139, 1140, 0, 1100, 0, 397, 398, 1174, 1132, 1175,
	399, 400, 401, 1176, 402, 0, 0, 0, 403, 404,
	405, 406, 407, 408, 0, 409, 411, 410, 0, 412,
	1168, 1177, 413, 414, 1178, 0, 415, 0, 0, 0,
	416, 417, 420, 1123, 1122, 418, 419, 421, 422, 0,
	423, 424, 426, 429, 425, 427, 428, 430, 443, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 445, 0, 444, 1179, 446, 447, 448, 453, 455,
	456, 451, 452, 454, 457, 458, 450, 1180, 459, 449,
	1062, 270, 1181, 460, 461, 1085, 1133, 462, 1147, 464,
	465, 0, 0, 466, 0, 0, 0, 468, 469, 470,
	0, 0, 471, 472, 650, 1182, 473, 1183, 1162, 474,
	475, 1072, 476, 477, 478, 479, 480, 481, 482, 483,
	0, 484, 485, 652, 486, 487, 488, 653, 489, 490,
	491, 1163, 492, 655, 493, 494, 0, 495, 496, 0,
	497, 498, 499, 500, 501, 502, 503, 1143, 504, 506,
	505, 507, 0, 508, 0, 509, 510, 511, 0, 0,
	0, 0, 512, 0, 514, 515, 516, 517, 513, 518,
	519, 520, 521, 0, 522, 523, 524, 1184, 525, 526,
	527, 528, 1073, 529, 0, 530, 531, 537, 538, 539,
	532, 533, 540, 541, 542, 543, 544, 0, 546, 547,
	545, 548, 549, 550, 1126, 551, 552, 534, 535, 553,
	554, 1185, 555, 556, 557, 558, 559, 560, 561, 1141,
	0, 562, 0, 563, 564, 565, 567, 536, 568, 573,
	574, 1188, 569, 570, 571, 572, 1164, 576, 577, 0,
	578, 579, 1059, 575, 566, 0, 580, 581, 582, 583,
	584, 585, 586, 354, 587, 0, 588, 1153, 1154, 1155,
	1156, 0, 597, 0, 589, 590, 591, 1165, 592, 1166,
	1083, 593, 594, 595, 596, 0, 598, 599, 0, 1066,
	600, 601, 602, 604, 605, 603, 606, 1127, 607, 0,
	0, 608, 609, 610, 667, 1150, 1187, 0, 612, 611,
	613, 670, 0, 614, 0, 0, 0, 0, 615, 616,
	671, 617, 618, 619, 1063, 0, 0, 0, 0, 0,
	0, 0, 1058, 0, 0, 0, 0, 0, 0, 1056,
	1057, 0, 0, 0, 0, 0, 0, 0, 1089, 0,
	0, 1315, 1087, 1105, 1077, 1078, 1079, 1075, 1076, 1088,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	271, 273, 272, 274, 275, 276, 277, 0, 278, 279,
	0, 0, 0, 0, 0, 1129, 1093, 0, 0, 0,
	280, 281, 1169, 282, 283, 284, 285, 286, 287, 621,
	1142, 0, 288, 1149, 289, 1148, 0, 1159, 290, 291,
	292, 293, 294, 295, 1095, 1128, 1060, 296, 1189, 1190,
	628, 0, 297, 298, 1135, 0, 1116, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 316,
	317, 0, 318, 319, 320, 1170, 321, 322, 323, 1119,
	1117, 1118, 1125, 1121, 1120, 1124, 324, 325, 326, 327,
	328, 1152, 329, 1146, 1145, 1065, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	1137, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 1071, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 1160, 1161, 360, 1084, 268, 0, 0,
	0, 0, 0, 361, 362, 363, 1144, 0, 0, 0,
	364, 0, 365, 366, 0, 0, 1171, 367, 368, 1157,
	1158, 369, 370, 371, 372, 373, 374, 375, 376, 377,
	0, 378, 1167, 0, 1094, 379, 0, 380, 381, 382,
	383, 384, 1130, 1131, 1134, 463, 1173, 385, 386, 0,
	387, 388, 389, 390, 391, 0, 0, 0, 269, 392,
	393, 394, 396, 0, 1172, 395, 1139, 1140, 0, 1100,
	0, 397, 398, 1174, 1132, 1175, 399, 400, 401, 1176,
	402, 0, 0, 0, 403, 404, 405, 406, 407, 408,
	0, 409, 411, 410, 0, 412, 1168, 1177, 413, 414,
	1178, 0, 415, 0, 0, 0, 416, 417, 420, 1123,
	1122, 418, 419, 421, 422, 0, 423, 424, 426, 429,
	425, 427, 428, 430, 443, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 445, 0, 444,
	1179, 446, 447, 448, 453, 455, 456, 451, 452, 454,
	457, 458, 450, 1180, 459, 449, 1062, 270, 1181, 460,
	461, 1085, 1133, 462, 1147, 464, 465, 0, 0, 466,
	0, 0, 0, 468, 469, 470, 0, 0, 471, 472,
	650, 1182, 473, 1183, 1162, 474, 475, 1072, 476, 477,
	478, 479, 480, 481, 482, 483, 0, 484, 485, 652,
	486, 487, 488, 653, 489, 490, 491, 1163, 492, 655,
	493, 494, 0, 495, 496, 0, 497, 498, 499, 500,
	501, 502, 503, 1143, 504, 506, 505, 507, 0, 508,
	0, 509, 510, 511, 0, 0, 0, 0, 512, 0,
	514, 515, 516, 517, 513, 518, 519, 520, 521, 0,
	522, 523, 524, 1184, 525, 526, 527, 528, 1073, 529,
	0, 530, 531, 537, 538, 539, 532, 533, 540, 541,
	542, 543, 544, 0, 546, 547, 545, 548, 549, 550,
	1126, 551, 552, 534, 535, 553, 554, 1185, 555, 556,
	557, 558, 559, 560, 561, 1141, 0, 562, 0, 563,
	564, 565, 567, 536, 568, 573, 574, 1188, 569, 570,
	571, 572, 1164, 576, 577, 0, 578, 579, 1059, 575,
	566, 0, 580, 581, 582, 583, 584, 585, 586, 354,
	587, 0, 588, 1153, 1154, 1155, 1156, 0, 597, 0,
	589, 590, 591, 1165, 592, 1166, 1083, 593, 594, 595,
	596, 0, 598, 599, 0, 1066, 600, 601, 602, 604,
	605, 603, 606, 1127, 607, 0, 0, 608, 609, 610,
	667, 1150, 1187, 0, 612, 611, 613, 670, 0, 614,
	0, 0, 0, 0, 615, 616, 671, 617, 618, 619,
	1063, 0, 0, 0, 0, 0, 0, 0, 1058, 0,
	0, 0, 0, 0, 0, 1056, 1057, 1105, 1077, 1078,
	1079, 1075, 1076, 1088, 1089, 0, 0, 0, 1087, 0,
	0, 0, 0, 0, 271, 273, 272, 274, 275, 276,
	277, 0, 278, 279, 0, 0, 0, 0, 0, 1129,
	1093, 0, 0, 0, 280, 281, 1169, 282, 283, 284,
	285, 286, 287, 621, 1142, 0, 288, 1149, 289, 1148,
	0, 1159, 290, 291, 292, 293, 294, 295, 1095, 1128,
	1060, 296, 1189, 1190, 628, 0, 297, 298, 1135, 0,
	1116, 0, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 0, 311, 0, 312,
	313, 314, 315, 316, 317, 0, 318, 319, 320, 1170,
	321, 322, 323, 1119, 1117, 1118, 1125, 1121, 1120, 1124,
	324, 325, 326, 327, 328, 1152, 329, 1146, 1145, 1065,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 1137, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 347, 348, 1071, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 1160, 1161, 360,
	1084, 268, 0, 0, 0, 0, 0, 361, 362, 363,
	1144, 0, 0, 0, 364, 0, 365, 366, 0, 0,
	1171, 367, 368, 1157, 1158, 369, 370, 371, 372, 373,
	374, 375, 376, 377, 0, 378, 1167, 0, 1094, 379,
	0, 380, 381, 382, 383, 384, 1130, 1131, 1134, 463,
	1173, 385, 386, 0, 387, 388, 389, 390, 391, 0,
	0, 0, 269, 392, 393, 394, 396, 0, 1172, 395,
	1139, 1140, 0, 1100, 0, 397, 398, 1174, 1132, 1175,
	399, 400, 401, 1176, 402, 0, 0, 0, 403, 404,
	405, 406, 407, 408, 0, 409, 411, 410, 0, 412,
	1168, 1177, 413, 414, 1178, 0, 415, 0, 0, 0,
	416, 417, 420, 1123, 1122, 418, 419, 421, 422, 0,
	423, 424, 426, 429, 425, 427, 428, 430, 443, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 445, 0, 444, 1179, 446, 447, 448, 453, 455,
	456, 451, 452, 454, 457, 458, 450, 1180, 459, 449,
	1062, 270, 1181, 460, 461, 1085, 1133, 462, 1147, 464,
	465, 0, 0, 466, 0, 0, 0, 468, 469, 470,
	0, 0, 471, 472, 650, 1182, 473, 1183, 1162, 474,
	475, 1072, 476, 477, 478, 479, 480, 481, 482, 483,
	0, 484, 485, 652, 486, 487, 488, 653, 489, 490,
	491, 1163, 492, 655, 493, 494, 0, 495, 496, 0,
	497, 498, 499, 500, 501, 502, 503, 1143, 504, 506,
	505, 507, 0, 508, 0, 509, 510, 511, 0, 0,
	0, 0, 512, 0, 514, 515, 516, 517, 513, 518,
	519, 520, 521, 0, 522, 523, 524, 1184, 525, 526,
	527, 528, 1073, 529, 0, 530, 531, 537, 538, 539,
	532, 533, 540, 541, 542, 543, 544, 0, 546, 547,
	545, 548, 549, 550, 1126, 551, 552, 534, 535, 553,
	554, 1185, 555, 556, 557, 558, 559, 560, 561, 1141,
	0, 562, 0, 563, 564, 565, 567, 536, 568, 573,
	574, 1188, 569, 570, 571, 572, 1164, 576, 577, 0,
	578, 579, 1059, 575, 566, 0, 580, 581, 582, 583,
	584, 585, 586, 354, 587, 0, 588, 1153, 1154, 1155,
	1156, 0, 597, 0, 589, 590, 591, 1165, 592, 1166,
	1083, 593, 594, 595, 596, 0, 598, 599, 0, 1066,
	600, 601, 602, 604, 605, 603, 606, 1127, 607, 0,
	0, 608, 609, 610, 667, 1150, 1187, 0, 612, 611,
	613, 670, 0, 614, 0, 0, 0, 0, 615, 616,
	671, 617, 618, 619, 1063, 0, 0, 0, 0, 0,
	0, 0, 1058, 0, 0, 0, 0, 0, 0, 1056,
	1057, 1105, 1077, 1078, 1079, 1075, 1076, 1088, 1089, 0,
	0, 0, 1087, 0, 0, 0, 0, 0, 271, 273,
	272, 274, 275, 276, 277, 0, 278, 279, 0, 0,
	0, 0, 0, 1129, 1093, 0, 0, 0, 280, 281,
	1169, 282, 283, 284, 285, 286, 287, 621, 1142, 0,
	288, 1149, 289, 1148, 0, 1159, 290, 291, 292, 293,
	294, 295, 1095, 1128, 1060, 296, 1189, 1190, 628, 0,
	297, 298, 1135, 0, 1116, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 1170, 321, 322, 4583, 1119, 1117, 1118,
	1125, 1121, 1120, 1124, 324, 325, 326, 327, 328, 1152,
	329, 1146, 1145, 1065, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 1137, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	1071, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 1160, 1161, 360, 1084, 268, 0, 0, 0, 0,
	0, 361, 362, 363, 1144, 0, 0, 0, 364, 0,
	365, 366, 0, 0, 1171, 367, 368, 1157, 1158, 369,
	370, 371, 372, 373, 374, 375, 376, 377, 0, 378,
	1167, 0, 1094, 379, 0, 380, 381, 382, 383, 384,
	1130, 1131, 1134, 463, 1173, 385, 386, 0, 387, 388,
	389, 390, 391, 0, 0, 0, 269, 392, 393, 394,
	396, 0, 1172, 395, 1139, 1140, 0, 1100, 0, 397,
	398, 1174, 1132, 1175, 399, 400, 401, 1176, 402, 0,
	0, 0, 403, 404, 405, 406, 407, 408, 0, 409,
	411, 410, 0, 412, 1168, 1177, 413, 414, 1178, 0,
	415, 0, 0, 0, 416, 417, 420, 1123, 1122, 418,
	419, 421, 422, 0, 423, 424, 426, 429, 425, 427,
	428, 430, 443, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 445, 0, 444, 1179, 446,
	447, 448, 453, 455, 456, 451, 452, 454, 457, 458,
	450, 1180, 459, 449, 1062, 270, 1181, 460, 461, 1085,
	1133, 462, 1147, 464, 465, 0, 0, 466, 0, 0,
	0, 468, 469, 470, 0, 0, 471, 472, 650, 1182,
	473, 1183, 1162, 474, 475, 1072, 476, 477, 478, 479,
	480, 481, 482, 483, 0, 484, 485, 652, 486, 487,
	488, 653, 489, 490, 491, 1163, 492, 655, 493, 494,
	0, 495, 496, 0, 497, 498, 499, 500, 501, 502,
	503, 1143, 504, 506, 505, 507, 0, 508, 0, 509,
	510, 511, 0, 0, 0, 0, 512, 0, 514, 515,
	516, 517, 513, 518, 519, 520, 521, 0, 522, 523,
	524, 1184, 525, 526, 527, 528, 1073, 529, 0, 530,
	531, 537, 538, 539, 532, 533, 540, 541, 542, 543,
	544, 0, 546, 547, 545, 548, 549, 550, 1126, 551,
	552, 534, 535, 553, 554, 1185, 555, 556, 557, 558,
	559, 560, 561, 1141, 0, 562, 0, 563, 564, 565,
	567, 536, 568, 573, 574, 1188, 569, 570, 571, 572,
	1164, 576, 577, 0, 578, 579, 1059, 575, 566, 0,
	580, 581, 582, 583, 584, 585, 586, 354, 587, 0,
	588, 1153, 1154, 1155, 1156, 0, 597, 0, 589, 590,
	591, 1165, 592, 1166, 1083, 593, 594, 595, 596, 0,
	4582, 599, 0, 1066, 600, 601, 602, 604, 605, 603,
	606, 1127, 607, 0, 0, 608, 609, 610, 667, 1150,
	1187, 0, 612, 611, 613, 670, 0, 614, 0, 0,
	0, 0, 615, 616, 671, 617, 618, 619, 1063, 0,
	0, 0, 0, 0, 0, 0, 1058, 0, 0, 0,
	0, 0, 0, 1056, 1057, 1105, 1077, 1078, 1079, 1075,
	1076, 1088, 1089, 0, 0, 0, 1087, 0, 0, 0,
	0, 0, 271, 273, 272, 274, 275, 276, 277, 0,
	278, 279, 0, 0, 0, 0, 0, 1129, 1093, 0,
	0, 0, 280, 281, 1169, 282, 283, 284, 285, 286,
	287, 4581, 1142, 0, 288, 1149, 289, 1148, 0, 1159,
	290, 291, 292, 293, 294, 295, 1095, 1128, 1060, 296,
	1189, 1190, 628, 0, 297, 298, 1135, 0, 1116, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 1170, 321, 322,
	4583, 1119, 1117, 1118, 1125, 1121, 1120, 1124, 324, 325,
	326, 327, 328, 1152, 329, 1146, 1145, 1065, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 1137, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 1071, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 1160, 1161, 360, 1084, 268,
	0, 0, 0, 0, 0, 361, 362, 363, 1144, 0,
	0, 0, 364, 0, 365, 366, 0, 0, 1171, 367,
	368, 1157, 1158, 369, 370, 371, 372, 373, 374, 375,
	376, 377, 0, 378, 1167, 0, 1094, 379, 0, 380,
	381, 382, 383, 384, 1130, 1131, 1134, 463, 1173, 385,
	386, 0, 387, 388, 389, 390, 391, 0, 0, 0,
	269, 392, 393, 394, 396, 0, 1172, 395, 1139, 1140,
	0, 1100, 0, 397, 398, 1174, 1132, 1175, 399, 400,
	401, 1176, 402, 0, 0, 0, 403, 404, 405, 406,
	407, 408, 0, 409, 411, 410, 0, 412, 1168, 1177,
	413, 414, 1178, 0, 415, 0, 0, 0, 416, 417,
	420, 1123, 1122, 418, 419, 421, 422, 0, 423, 424,
	426, 429, 425, 427, 428, 430, 443, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 445,
	0, 444, 1179, 446, 447, 448, 453, 455, 456, 451,
	452, 454, 457, 458, 450, 1180, 459, 449, 1062, 270,
	1181, 460, 461, 1085, 1133, 462, 1147, 464, 465, 0,
	0, 466, 0, 0, 0, 468, 469, 470, 0, 0,
	471, 472, 650, 1182, 473, 1183, 1162, 474, 475, 1072,
	476, 477, 478, 479, 480, 481, 482, 483, 0, 484,
	485, 652, 486, 487, 488, 653, 489, 490, 491, 1163,
	492, 655, 493, 494, 0, 495, 496, 0, 497, 498,
	499, 500, 501, 502, 503, 1143, 504, 506, 505, 507,
	0, 508, 0, 509, 510, 511, 0, 0, 0, 0,
	512, 0, 514, 515, 516, 517, 513, 518, 519, 520,
	521, 0, 522, 523, 524, 1184, 525, 526, 527, 528,
	1073, 529, 0, 530, 531, 537, 538, 539, 532, 533,
	540, 541, 542, 543, 544, 0, 546, 547, 545, 548,
	549, 550, 1126, 551, 552, 534, 535, 553, 554, 1185,
	555, 556, 557, 558, 559, 560, 561, 1141, 0, 562,
	0, 563, 564, 565, 567, 536, 568, 573, 574, 1188,
	569, 570, 571, 572, 1164, 576, 577, 0, 578, 579,
	1059, 575, 566, 0, 580, 581, 582, 583, 584, 585,
	586, 354, 587, 0, 588, 1153, 1154, 1155, 1156, 0,
	597, 0, 589, 590, 591, 1165, 592, 1166, 1083, 593,
	594, 595, 596, 0, 4582, 599, 0, 1066, 600, 601,
	602, 604, 605, 603, 606, 1127, 607, 0, 0, 608,
	609, 610, 667, 1150, 1187, 0, 612, 611, 613, 670,
	0, 614, 0, 0, 0, 0, 615, 616, 671, 617,
	618, 619, 1063, 0, 0, 0, 0, 0, 0, 0,
	1058, 0, 0, 0, 0, 0, 0, 1056, 1057, 1105,
	1077, 1078, 1079, 1075, 1076, 1088, 1089, 0, 0, 0,
	1087, 0, 0, 0, 0, 0, 271, 273, 272, 274,
	275, 276, 277, 0, 278, 279, 0, 0, 0, 0,
	0, 1129, 1093, 0, 0, 0, 280, 281, 1169, 282,
	283, 284, 285, 286, 287, 621, 1142, 0, 288, 1149,
	289, 1148, 0, 1159, 290, 291, 292, 293, 294, 295,
	1095, 1128, 1060, 296, 1189, 1190, 628, 0, 297, 298,
	1135, 0, 1116, 0, 299, 300, 301, 302, 303, 304,
	305, 0, 0, 307, 308, 309, 306, 310, 0, 311,
	0, 312, 313, 314, 315, 316, 317, 0, 318, 319,
	320, 1170, 321, 4237, 323, 1119, 1117, 1118, 1125, 1121,
	1120, 1124, 324, 325, 326, 327, 328, 1152, 329, 1146,
	1145, 1065, 333, 330, 331, 0, 334, 332, 335, 0,
	336, 337, 338, 0, 0, 339, 1137, 341, 0, 342,
	343, 0, 344, 345, 346, 0, 347, 348, 1071, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 1160,
	1161, 360, 1084, 268, 0, 0, 0, 0, 0, 361,
	362, 363, 1144, 0, 0, 0, 364, 0, 365, 366,
	0, 0, 1171, 367, 368, 1157, 1158, 369, 370, 371,
	372, 373, 374, 375, 376, 377, 0, 378, 1167, 0,
	4238, 379, 0, 380, 381, 382, 383, 384, 1130, 1131,
	1134, 463, 1173, 385, 386, 0, 387, 388, 389, 390,
	391, 0, 0, 0, 269, 392, 393, 394, 396, 0,
	1172, 395, 1139, 1140, 0, 1100, 0, 397, 398, 1174,
	1132, 1175, 399, 400, 401, 1176, 402, 0, 0, 0,
	403, 404, 405, 406, 407, 408, 0, 409, 411, 410,
	0, 412, 1168, 1177, 413, 414, 1178, 0, 415, 0,
	0, 0, 416, 417, 420, 1123, 1122, 418, 419, 421,
	422, 0, 423, 424, 426, 429, 425, 427, 428, 430,
	443, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 445, 0, 444, 1179, 446, 447, 448,
	453, 455, 456, 451, 452, 454, 457, 458, 450, 1180,
	459, 449, 1062, 270, 1181, 460, 461, 1085, 1133, 462,
	1147, 464, 465, 0, 0, 466, 0, 0, 0, 468,
	469, 470, 0, 0, 471, 472, 650, 1182, 473, 1183,
	1162, 474, 475, 1072, 476, 477, 478, 479, 480, 481,
	482, 483, 0, 484, 485, 652, 486, 487, 488, 653,
	489, 490, 491, 1163, 492, 655, 493, 494, 0, 495,
	496, 0, 497, 498, 499, 500, 501, 502, 503, 1143,
	504, 506, 505, 507, 0, 508, 0, 509, 510, 511,
	0, 0, 0, 0, 512, 0, 514, 515, 516, 517,
	513, 518, 519, 520, 521, 0, 522, 523, 524, 1184,
	525, 526, 527, 4236, 1073, 529, 0, 530, 531, 537,
	538, 539, 532, 533, 540, 541, 542, 543, 544, 0,
	546, 547, 545, 548, 549, 550, 1126, 551, 552, 534,
	535, 553, 554, 1185, 555, 556, 557, 558, 559, 560,
	561, 1141, 0, 562, 0, 563, 564, 565, 567, 536,
	568, 573, 574, 1188, 569, 570, 571, 572, 1164, 576,
	577, 0, 578, 579, 1059, 575, 566, 0, 580, 581,
	582, 583, 584, 585, 586, 354, 587, 0, 588, 1153,
	1154, 1155, 1156, 0, 597, 0, 589, 590, 591, 1165,
	592, 1166, 1083, 593, 594, 595, 596, 0, 598, 599,
	0, 1066, 600, 601, 602, 604, 605, 603, 606, 1127,
	607, 0, 0, 608, 609, 610, 667, 1150, 1187, 0,
	612, 611, 613, 670, 0, 614, 0, 0, 0, 0,
	615, 616, 671, 617, 618, 619, 1063, 0, 0, 0,
	0, 0, 0, 0, 1058, 0, 0, 0, 0, 0,
	0, 1056, 1057, 1105, 1077, 1078, 1079, 3105, 3106, 1088,
	1089, 0, 0, 0, 1087, 0, 0, 0, 0, 0,
	271, 273, 272, 274, 275, 276, 277, 0, 278, 279,
	0, 0, 0, 0, 0, 1129, 1093, 0, 0, 0,
	280, 281, 1169, 282, 283, 284, 285, 286, 287, 621,
	1142, 0, 288, 1149, 289, 1148, 0, 1159, 290, 291,
	292, 293, 294, 295, 1095, 1128, 1060, 296, 1189, 1190,
	628, 0, 297, 298, 1135, 0, 1116, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 316,
	317, 0, 318, 319, 320, 1170, 321, 322, 323, 1119,
	1117, 1118, 1125, 1121, 1120, 1124, 324, 325, 326, 327,
	328, 1152, 329, 1146, 1145, 1065, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	1137, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 1071, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 1160, 1161, 360, 1084, 268, 0, 0,
	0, 0, 0, 361, 362, 363, 1144, 0, 0, 0,
	364, 0, 365, 366, 0, 0, 1171, 367, 368, 1157,
	1158, 369, 370, 371, 372, 373, 374, 375, 376, 377,
	0, 378, 1167, 0, 1094, 379, 0, 380, 381, 382,
	383, 384, 1130, 1131, 1134, 463, 1173, 385, 386, 0,
	387, 388, 389, 390, 391, 0, 0, 0, 269, 392,
	393, 394, 396, 0, 1172, 395, 1139, 1140, 0, 1100,
	0, 397, 398, 1174, 1132, 1175, 399, 400, 401, 1176,
	402, 0, 0, 0, 403, 404, 405, 406, 407, 408,
	0, 409, 411, 410, 0, 412, 1168, 1177, 413, 414,
	1178, 0, 415, 0, 0, 0, 416, 417, 420, 1123,
	1122, 418, 419, 421, 422, 0, 423, 424, 426, 429,
	425, 427, 428, 430, 443, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 445, 0, 444,
	1179, 446, 447, 448, 453, 455, 456, 451, 452, 454,
	457, 458, 450, 1180, 459, 449, 1062, 270, 1181, 460,
	461, 1085, 1133, 462, 1147, 464, 465, 0, 0, 466,
	0, 0, 0, 468, 469, 470, 0, 0, 471, 472,
	650, 1182, 473, 1183, 1162, 474, 475, 1072, 476, 477,
	478, 479, 480, 481, 482, 483, 0, 484, 485, 652,
	486, 487, 488, 653, 489, 490, 491, 1163, 492, 655,
	493, 494, 0, 495, 496, 0, 497, 498, 499, 500,
	501, 502, 503, 1143, 504, 506, 505, 507, 0, 508,
	0, 509, 510, 511, 0, 0, 0, 0, 512, 0,
	514, 515, 516, 517, 513, 518, 519, 520, 521, 0,
	522, 523, 524, 1184, 525, 526, 527, 528, 1073, 529,
	0, 530, 531, 537, 538, 539, 532, 533, 540, 541,
	542, 543, 544, 0, 546, 547, 545, 548, 549, 550,
	1126, 551, 552, 534, 535, 553, 554, 1185, 555, 556,
	557, 558, 559, 560, 561, 1141, 0, 562, 0, 563,
	564, 565, 567, 536, 568, 573, 574, 1188, 569, 570,
	571, 572, 1164, 576, 577, 0, 578, 579, 1059, 575,
	566, 0, 580, 581, 582, 583, 584, 585, 586, 354,
	587, 0, 588, 1153, 1154, 1155, 1156, 0, 597, 0,
	589, 590, 591, 1165, 592, 1166, 1083, 593, 594, 595,
	596, 0, 598, 599, 0, 1066, 600, 601, 602, 604,
	605, 603, 606, 1127, 607, 0, 0, 608, 609, 610,
	667, 1150, 1187, 0, 612, 611, 613, 670, 0, 614,
	0, 0, 0, 0, 615, 616, 671, 617, 618, 619,
	1063, 0, 0, 0, 0, 0, 0, 0, 1058, 0,
	0, 0, 0, 0, 0, 1056, 1057, 1105, 1077, 1078,
	1079, 3103, 3104, 1088, 1089, 0, 0, 0, 1087, 0,
	0, 0, 0, 0, 271, 273, 272, 274, 275, 276,
	277, 0, 278, 279, 0, 0, 0, 0, 0, 1129,
	1093, 0, 0, 0, 280, 281, 1169, 282, 283, 284,
	285, 286, 287, 621, 1142, 0, 288, 1149, 289, 1148,
	0, 1159, 290, 291, 292, 293, 294, 295, 1095, 1128,
	1060, 296, 1189, 1190, 628, 0, 297, 298, 1135, 0,
	1116, 0, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 0, 311, 0, 312,
	313, 314, 315, 316, 317, 0, 318, 319, 320, 1170,
	321, 322, 323, 1119, 1117, 1118, 1125, 1121, 1120, 1124,
	324, 325, 326, 327, 328, 1152, 329, 1146, 1145, 1065,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 1137, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 347, 348, 1071, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 1160, 1161, 360,
	1084, 268, 0, 0, 0, 0, 0, 361, 362, 363,
	1144, 0, 0, 0, 364, 0, 365, 366, 0, 0,
	1171, 367, 368, 1157, 1158, 369, 370, 371, 372, 373,
	374, 375, 376, 377, 0, 378, 1167, 0, 1094, 379,
	0, 380, 381, 382, 383, 384, 1130, 1131, 1134, 463,
	1173, 385, 386, 0, 387, 388, 389, 390, 391, 0,
	0, 0, 269, 392, 393, 394, 396, 0, 1172, 395,
	1139, 1140, 0, 1100, 0, 397, 398, 1174, 1132, 1175,
	399, 400, 401, 1176, 402, 0, 0, 0, 403, 404,
	405, 406, 407, 408, 0, 409, 411, 410, 0, 412,
	1168, 1177, 413, 414, 1178, 0, 415, 0, 0, 0,
	416, 417, 420, 1123, 1122, 418, 419, 421, 422, 0,
	423, 424, 426, 429, 425, 427, 428, 430, 443, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 445, 0, 444, 1179, 446, 447, 448, 453, 455,
	456, 451, 452, 454, 457, 458, 450, 1180, 459, 449,
	1062, 270, 1181, 460, 461, 1085, 1133, 462, 1147, 464,
	465, 0, 0, 466, 0, 0, 0, 468, 469, 470,
	0, 0, 471, 472, 650, 1182, 473, 1183, 1162, 474,
	475, 1072, 476, 477, 478, 479, 480, 481, 482, 483,
	0, 484, 485, 652, 486, 487, 488, 653, 489, 490,
	491, 1163, 492, 655, 493, 494, 0, 495, 496, 0,
	497, 498, 499, 500, 501, 502, 503, 1143, 504, 506,
	505, 507, 0, 508, 0, 509, 510, 511, 0, 0,
	0, 0, 512, 0, 514, 515, 516, 517, 513, 518,
	519, 520, 521, 0, 522, 523, 524, 1184, 525, 526,
	527, 528, 1073, 529, 0, 530, 531, 537, 538, 539,
	532, 533, 540, 541, 542, 543, 544, 0, 546, 547,
	545, 548, 549, 550, 1126, 551, 552, 534, 535, 553,
	554, 1185, 555, 556, 557, 558, 559, 560, 561, 1141,
	0, 562, 0, 563, 564, 565, 567, 536, 568, 573,
	574, 1188, 569, 570, 571, 572, 1164, 576, 577, 0,
	578, 579, 1059, 575, 566, 0, 580, 581, 582, 583,
	584, 585, 586, 354, 587, 0, 588, 1153, 1154, 1155,
	1156, 0, 597, 0, 589, 590, 591, 1165, 592, 1166,
	1083, 593, 594, 595, 596, 0, 598, 599, 0, 1066,
	600, 601, 602, 604, 605, 603, 606, 1127, 607, 0,
	0, 608, 609, 610, 667, 1150, 1187, 0, 612, 611,
	613, 670, 0, 614, 0, 0, 0, 0, 615, 616,
	671, 617, 618, 619, 1063, 0, 0, 0, 0, 0,
	0, 0, 1058, 0, 0, 0, 0, 0, 0, 1056,
	1057, 1105, 1077, 1078, 1079, 1075, 1076, 1088, 1089, 0,
	0, 0, 1087, 0, 0, 0, 0, 0, 271, 273,
	272, 274, 275, 276, 277, 0, 278, 279, 0, 0,
	0, 0, 0, 1129, 1093, 0, 0, 0, 280, 281,
	1169, 282, 283, 284, 285, 286, 287, 621, 1142, 0,
	288, 1149, 289, 1148, 0, 1159, 290, 291, 292, 293,
	294, 295, 1095, 1128, 1060, 296, 1189, 1190, 628, 0,
	297, 298, 1135, 0, 1116, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 1170, 321, 322, 323, 1119, 1117, 1118,
	1125, 1121, 1120, 1124, 324, 325, 326, 327, 328, 1152,
	329, 1146, 1145, 1065, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 1137, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	1071, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 1160, 1161, 360, 1084, 268, 0, 0, 0, 0,
	0, 361, 362, 363, 1144, 0, 0, 0, 364, 0,
	365, 366, 0, 0, 1171, 367, 368, 1157, 1158, 369,
	370, 371, 372, 373, 374, 375, 376, 377, 0, 378,
	1167, 0, 1094, 379, 0, 380, 381, 382, 383, 384,
	1130, 1131, 1134, 463, 1173, 385, 386, 0, 387, 388,
	389, 390, 391, 0, 0, 0, 269, 392, 393, 394,
	396, 0, 1172, 395, 1139, 1140, 0, 1100, 0, 397,
	398, 1174, 1132, 1175, 399, 400, 401, 1176, 402, 0,
	0, 0, 403, 404, 405, 406, 407, 408, 0, 409,
	411, 410, 0, 412, 1168, 1177, 413, 414, 1178, 0,
	415, 0, 0, 0, 416, 417, 420, 1123, 1122, 418,
	419, 421, 422, 0, 423, 424, 426, 429, 425, 427,
	428, 430, 443, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 445, 0, 444, 1179, 446,
	447, 448, 453, 455, 456, 451, 452, 454, 457, 458,
	450, 1180, 459, 449, 1062, 270, 1181, 460, 461, 1085,
	1133, 462, 1147, 464, 465, 0, 0, 466, 0, 0,
	0, 468, 469, 470, 0, 0, 471, 472, 650, 1182,
	473, 1183, 1162, 474, 475, 1072, 476, 477, 478, 479,
	480, 481, 482, 483, 0, 484, 485, 652, 486, 487,
	488, 653, 489, 490, 491, 1163, 492, 655, 493, 494,
	0, 495, 496, 0, 497, 498, 499, 500, 501, 502,
	503, 1143, 504, 506, 505, 507, 0, 508, 0, 509,
	510, 511, 0, 0, 0, 0, 512, 0, 514, 515,
	516, 517, 513, 518, 519, 520, 521, 0, 522, 523,
	524, 1184, 525, 526, 527, 528, 1073, 529, 0, 530,
	531, 537, 538, 539, 532, 533, 540, 541, 542, 543,
	544, 0, 546, 547, 545, 548, 549, 550, 1126, 551,
	552, 534, 535, 553, 554, 1185, 555, 556, 557, 558,
	559, 560, 561, 1141, 0, 562, 0, 563, 564, 565,
	567, 536, 568, 573, 574, 1188, 569, 570, 571, 572,
	1164, 576, 577, 0, 578, 579, 1059, 575, 566, 0,
	580, 581, 582, 583, 584, 585, 586, 354, 587, 0,
	588, 1153, 1154, 1155, 1156, 0, 597, 0, 589, 590,
	591, 1165, 592, 1166, 1083, 593, 594, 595, 596, 0,
	598, 599, 0, 1066, 600, 601, 602, 604, 605, 603,
	606, 1127, 607, 0, 0, 608, 609, 610, 667, 1150,
	1187, 0, 612, 611, 613, 670, 0, 614, 0, 0,
	0, 0, 615, 616, 671, 617, 618, 619, 1063, 0,
	0, 0, 0, 0, 0, 0, 1058, 0, 0, 0,
	0, 0, 0, 2392, 2393, 1105, 1077, 1078, 1079, 1075,
	1076, 1088, 1089, 0, 0, 0, 1087, 0, 0, 0,
	0, 0, 271, 273, 272, 274, 275, 276, 277, 0,
	278, 279, 0, 0, 0, 0, 0, 1129, 1093, 0,
	0, 0, 280, 281, 1169, 282, 283, 284, 285, 286,
	287, 621, 1142, 0, 288, 1149, 289, 1148, 0, 1159,
	290, 291, 292, 293, 294, 295, 1095, 1128, 0, 296,
	1189, 1190, 628, 0, 297, 298, 1135, 0, 1116, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 1170, 321, 322,
	323, 1119, 1117, 1118, 1125, 1121, 1120, 1124, 324, 325,
	326, 327, 328, 1152, 329, 1146, 1145, 0, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 1137, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 1071, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 1160, 1161, 360, 1084, 268,
	0, 0, 0, 0, 0, 361, 362, 363, 1144, 0,
	0, 0, 364, 0, 365, 366, 0, 0, 1171, 367,
	368, 1157, 1158, 369, 370, 371, 372, 373, 374, 375,
	376, 377, 0, 378, 1167, 0, 1094, 379, 0, 380,
	381, 382, 383, 384, 1130, 1131, 1134, 463, 1173, 385,
	386, 0, 387, 388, 389, 390, 391, 0, 0, 0,
	269, 392, 393, 394, 396, 0, 1172, 395, 1139, 1140,
	0, 1100, 0, 397, 398, 1174, 1132, 1175, 399, 400,
	401, 1176, 402, 0, 0, 0, 403, 404, 405, 406,
	407, 408, 0, 409, 411, 410, 0, 412, 1168, 1177,
	413, 414, 1178, 0, 415, 0, 0, 0, 416, 417,
	420, 1123, 1122, 418, 419, 421, 422, 0, 423, 424,
	426, 429, 425, 427, 428, 430, 443, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 445,
	0, 444, 1179, 446, 447, 448, 453, 455, 456, 451,
	452, 454, 457, 458, 450, 1180, 459, 449, 0, 270,
	1181, 460, 461, 1085, 1133, 462, 1147, 464, 465, 0,
	0, 466, 0, 0, 0, 468, 469, 470, 0, 0,
	471, 472, 650, 1182, 473, 1183, 1162, 474, 475, 1072,
	476, 477, 478, 479, 480, 481, 482, 483, 0, 484,
	485, 652, 486, 487, 488, 653, 489, 490, 491, 1163,
	492, 655, 493, 494, 0, 495, 496, 0, 497, 498,
	499, 500, 501, 502, 503, 1143, 504, 506, 505, 507,
	0, 508, 0, 509, 510, 511, 0, 0, 0, 0,
	512, 0, 514, 515, 516, 517, 513, 518, 519, 520,
	521, 0, 522, 523, 524, 1184, 525, 526, 527, 528,
	1073, 529, 0, 530, 531, 537, 538, 539, 532, 533,
	540, 541, 542, 543, 544, 0, 546, 547, 545, 548,
	549, 550, 1126, 551, 552, 534, 535, 553, 554, 1185,
	555, 556, 557, 558, 559, 560, 561, 1141, 0, 562,
	0, 563, 564, 565, 567, 536, 568, 573, 574, 1188,
	569, 570, 571, 572, 1164, 576, 577, 0, 578, 579,
	0, 575, 566, 0, 580, 581, 582, 583, 584, 585,
	586, 354, 587, 0, 588, 1153, 1154, 1155, 1156, 0,
	597, 0, 589, 590, 591, 1165, 592, 1166, 1083, 593,
	594, 595, 596, 0, 598, 599, 0, 0, 600, 601,
	602, 604, 605, 603, 606, 1127, 607, 0, 0, 608,
	609, 610, 667, 1150, 1187, 0, 612, 611, 613, 670,
	0, 614, 0, 0, 0, 0, 615, 616, 671, 617,
	618, 619, 1105, 1077, 1078, 1079, 1075, 1076, 1088, 0,
	2649, 0, 0, 0, 0, 0, 0, 2647, 2648, 271,
	273, 272, 274, 275, 276, 277, 1089, 278, 279, 0,
	1087, 0, 0, 0, 1129, 1093, 0, 0, 0, 280,
	281, 1169, 282, 283, 284, 285, 286, 287, 621, 1142,
	0, 288, 1149, 289, 1148, 0, 1159, 290, 291, 292,
	293, 294, 295, 1095, 1128, 0, 296, 1189, 1190, 628,
	0, 297, 298, 1135, 0, 1116, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 1170, 321, 322, 323, 1119, 1117,
	1118, 1125, 1121, 1120, 1124, 324, 325, 326, 327, 328,
	1152, 329, 1146, 1145, 0, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 1137,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 1071, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 1160, 1161, 360, 1084, 268, 0, 0, 0,
	0, 0, 361, 362, 363, 1144, 0, 0, 0, 364,
	0, 365, 366, 0, 0, 1171, 367, 368, 1157, 1158,
	369, 370, 371, 372, 373, 374, 375, 376, 377, 0,
	378, 1167, 0, 1094, 379, 0, 380, 381, 382, 383,
	384, 1130, 1131, 1134, 463, 1173, 385, 386, 0, 387,
	388, 389, 390, 391, 0, 0, 0, 269, 392, 393,
	394, 396, 0, 1172, 395, 1139, 1140, 0, 1100, 0,
	397, 398, 1174, 1132, 1175, 399, 400, 401, 1176, 402,
	0, 0, 0, 403, 404, 405, 406, 407, 408, 0,
	409, 411, 410, 0, 412, 1168, 1177, 413, 414, 1178,
	0, 415, 0, 0, 0, 416, 417, 420, 1123, 1122,
	418, 419, 421, 422, 0, 423, 424, 426, 429, 425,
	427, 428, 430, 443, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 445, 0, 444, 1179,
	446, 447, 448, 453, 455, 456, 451, 452, 454, 457,
	458, 450, 1180, 459, 449, 0, 270, 1181, 460, 461,
	1085, 1133, 462, 1147, 464, 465, 0, 0, 466, 0,
	0, 0, 468, 469, 470, 0, 0, 471, 472, 650,
	1182, 473, 1183, 1162, 474, 475, 467, 476, 477, 478,
	479, 480, 481, 482, 483, 0, 484, 485, 652, 486,
	487, 488, 653, 489, 490, 491, 1163, 492, 655, 493,
	494, 0, 495, 496, 0, 497, 498, 499, 500, 501,
	502, 503, 1143, 504, 506, 505, 507, 0, 508, 0,
	509, 510, 511, 0, 0, 0, 0, 512, 0, 514,
	515, 516, 517, 513, 518, 519, 520, 521, 0, 522,
	523, 524, 1184, 525, 526, 527, 528, 3098, 3099, 0,
	530, 531, 537, 538, 539, 532, 533, 540, 541, 542,
	543, 544, 0, 546, 547, 545, 548, 549, 550, 1126,
	551, 552, 534, 535, 553, 554, 1185, 555, 556, 557,
	558, 559, 560, 561, 1141, 0, 562, 0, 563, 564,
	565, 567, 536, 568, 573, 574, 1188, 569, 570, 571,
	572, 1164, 576, 577, 0, 578, 579, 0, 575, 566,
	0, 580, 581, 582, 583, 584, 585, 586, 354, 587,
	0, 588, 1153, 1154, 1155, 1156, 0, 597, 0, 589,
	590, 591, 1165, 592, 1166, 1083, 593, 594, 595, 596,
	0, 598, 599, 0, 0, 600, 601, 602, 604, 605,
	603, 606, 1127, 607, 0, 0, 608, 609, 610, 667,
	1150, 1187, 0, 612, 611, 613, 670, 0, 614, 0,
	0, 0, 0, 615, 616, 671, 617, 618, 619, 1105,
	1077, 1078, 1079, 1075, 1076, 1088, 0, 0, 0, 0,
	0, 0, 0, 0, 2089, 2090, 271, 273, 272, 274,
	275, 276, 277, 1089, 278, 279, 0, 1087, 0, 0,
	0, 1129, 1093, 0, 0, 0, 280, 281, 1169, 282,
	283, 284, 285, 286, 287, 0, 1142, 0, 288, 1149,
	289, 1148, 0, 1159, 290, 291, 292, 293, 294, 295,
	1095, 1128, 1060, 296, 1189, 1190, 628, 0, 297, 298,
	1135, 0, 1116, 0, 299, 300, 301, 302, 303, 304,
	305, 0, 0, 307, 308, 309, 306, 310, 0, 311,
	0, 312, 313, 314, 315, 316, 317, 0, 318, 319,
	320, 1170, 321, 322, 4583, 1119, 1117, 1118, 1125, 1121,
	1120, 1124, 324, 325, 326, 327, 328, 1152, 329, 1146,
	1145, 1065, 333, 330, 331, 0, 334, 332, 335, 0,
	336, 337, 338, 0, 0, 339, 1137, 341, 0, 342,
	343, 0, 344, 345, 346, 0, 347, 348, 1071, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 1160,
	1161, 360, 1084, 268, 0, 0, 0, 0, 0, 361,
	362, 363, 1144, 0, 0, 0, 364, 0, 365, 366,
	0, 0, 1171, 367, 368, 1157, 1158, 369, 370, 371,
	372, 373, 374, 375, 376, 377, 0, 378, 1167, 0,
	1094, 379, 0, 380, 381, 382, 383, 384, 1130, 1131,
	1134, 463, 0, 385, 386, 0, 387, 388, 389, 390,
	391, 0, 0, 0, 269, 392, 393, 394, 396, 0,
	1172, 395, 1139, 1140, 0, 1100, 0, 397, 398, 0,
	1132, 0, 399, 400, 401, 1176, 402, 0, 0, 0,
	403, 404, 405, 406, 407, 408, 0, 409, 411, 410,
	0, 412, 1168, 1177, 413, 414, 0, 0, 415, 0,
	0, 0, 416, 417, 420, 1123, 1122, 418, 419, 421,
	422, 0, 423, 424, 426, 429, 425, 427, 428, 430,
	443, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 445, 0, 444, 1179, 446, 447, 448,
	453, 455, 456, 451, 452, 454, 457, 458, 450, 1180,
	459, 449, 1062, 270, 0, 460, 461, 1085, 1133, 462,
	1147, 464, 465, 0, 0, 466, 0, 0, 0, 468,
	469, 470, 0, 0, 471, 472, 650, 1182, 473, 1183,
	1162, 474, 475, 1072, 476, 477, 478, 479, 480, 481,
	482, 483, 0, 484, 485, 652, 486, 487, 488, 653,
	489, 490, 491, 1163, 492, 655, 493, 494, 0, 495,
	496, 0, 497, 498, 499, 500, 501, 502, 503, 1143,
	504, 506, 505, 507, 0, 508, 0, 509, 510, 511,
	0, 0, 0, 0, 512, 0, 514, 515, 516, 517,
	513, 518, 519, 520, 521, 0, 522, 523, 524, 1184,
	525, 526, 527, 528, 1073, 529, 0, 530, 531, 537,
	538, 539, 532, 533, 540, 541, 542, 543, 544, 0,
	546, 547, 545, 548, 549, 550, 1126, 551, 552, 534,
	535, 553, 554, 0, 555, 556, 557, 558, 559, 560,
	561, 1141, 0, 562, 0, 563, 564, 565, 567, 536,
	568, 573, 574, 1188, 569, 570, 571, 572, 1164, 576,
	577, 0, 578, 579, 1059, 575, 566, 0, 580, 581,
	582, 583, 584, 585, 586, 354, 587, 0, 588, 1153,
	1154, 1155, 1156, 0, 597, 0, 589, 590, 591, 1165,
	592, 1166, 1083, 593, 594, 595, 596, 0, 4582, 599,
	0, 1066, 600, 601, 602, 604, 605, 603, 606, 1127,
	607, 0, 0, 608, 609, 610, 667, 1150, 1187, 0,
	612, 611, 613, 670, 0, 614, 0, 0, 0, 0,
	615, 616, 671, 617, 618, 619, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1049, 0, 1227, 0,
	0, 1056, 1057, 0, 0, 0, 0, 0, 0, 0,
	1089, 0, 0, 0, 1087, 271, 273, 272, 274, 275,
	276, 277, 0, 278, 279, 0, 0, 0, 0, 0,
	1129, 0, 0, 0, 0, 280, 281, 1169, 282, 283,
	284, 285, 286, 287, 621, 622, 0, 288, 623, 289,
	624, 0, 625, 290, 291, 292, 293, 294, 295, 0,
	1128, 0, 296, 626, 627, 628, 0, 297, 298, 1135,
	0, 1116, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	1170, 321, 322, 323, 1119, 1117, 1118, 1125, 1121, 1120,
	1124, 324, 325, 326, 327, 328, 0, 329, 630, 631,
	0, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 340, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 632, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 1160, 1161,
	360, 0, 268, 0, 0, 0, 0, 0, 361, 362,
	363, 635, 0, 0, 0, 364, 0, 365, 366, 0,
	0, 1171, 367, 368, 636, 637, 369, 370, 371, 372,
	373, 374, 375, 376, 377, 0, 378, 1167, 0, 639,
	379, 0, 380, 381, 382, 383, 384, 1130, 1131, 1134,
	463, 1173, 385, 386, 0, 387, 388, 389, 390, 391,
	0, 0, 0, 269, 392, 393, 394, 396, 0, 1172,
	395, 643, 644, 0, 645, 0, 397, 398, 1174, 1132,
	1175, 399, 400, 401, 1176, 402, 0, 0, 0, 403,
	404, 405, 406, 407, 408, 1213, 409, 411, 410, 0,
	412, 1168, 1177, 413, 414, 1178, 0, 415, 0, 0,
	0, 416, 417, 420, 1123, 1122, 418, 419, 421, 422,
	0, 423, 424, 426, 429, 425, 427, 428, 430, 443,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 445, 0, 444, 1179, 446, 447, 448, 453,
	455, 456, 451, 452, 454, 457, 458, 450, 1180, 459,
	449, 0, 270, 1181, 460, 461, 0, 1133, 462, 649,
	464, 465, 0, 0, 466, 0, 0, 1219, 468, 469,
	470, 0, 0, 471, 472, 650, 1182, 473, 1183, 1162,
	474, 475, 467, 476, 477, 478, 479, 480, 481, 482,
	483, 0, 484, 485, 652, 486, 487, 488, 653, 489,
	490, 491, 1163, 492, 655, 493, 494, 0, 495, 496,
	0, 497, 498, 499, 500, 501, 502, 503, 656, 504,
	506, 505, 507, 0, 508, 0, 509, 510, 511, 0,
	0, 0, 0, 512, 0, 514, 515, 516, 517, 513,
	518, 519, 520, 521, 0, 522, 523, 524, 1184, 525,
	526, 527, 528, 657, 1221, 0, 530, 531, 537, 538,
	539, 532, 533, 540, 541, 542, 543, 544, 230, 546,
	547, 545, 548, 549, 550, 1126, 551, 552, 534, 535,
	553, 554, 1185, 555, 556, 557, 558, 559, 560, 561,
	658, 0, 562, 0, 563, 564, 565, 567, 536, 568,
	573, 574, 659, 569, 570, 571, 572, 1164, 576, 577,
	0, 578, 579, 0, 575, 566, 232, 580, 581, 582,
	583, 584, 585, 586, 354, 587, 0, 588, 661, 662,
	663, 664, 0, 597, 0, 589, 590, 591, 1165, 592,
	1166, 0, 593, 594, 595, 596, 0, 598, 599, 0,
	0, 600, 601, 602, 604, 605, 603, 606, 1127, 607,
	0, 0, 608, 609, 610, 1585, 668, 669, 0, 612,
	611, 613, 670, 1227, 614, 0, 0, 0, 224, 615,
	616, 671, 617, 618, 619, 0, 0, 225, 0, 0,
	271, 273, 272, 274, 275, 276, 277, 0, 278, 279,
	0, 0, 0, 0, 0, 1129, 0, 1217, 0, 1930,
	280, 281, 1169, 282, 283, 284, 285, 286, 287, 621,
	622, 0, 288, 623, 289, 624, 0, 625, 290, 291,
	292, 293, 294, 295, 0, 1128, 0, 296, 626, 627,
	628, 0, 297, 298, 1135, 0, 1116, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 316,
	317, 0, 318, 319, 320, 1170, 321, 322, 323, 1119,
	1117, 1118, 1125, 1121, 1120, 1124, 324, 325, 326, 327,
	328, 0, 329, 630, 631, 0, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	340, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 632, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 1160, 1161, 360, 0, 268, 0, 0,
	0, 0, 0, 361, 362, 363, 635, 0, 0, 0,
	364, 0, 365, 366, 0, 0, 1171, 367, 368, 636,
	637, 369, 370, 371, 372, 373, 374, 375, 376, 377,
	0, 378, 1167, 0, 639, 379, 0, 380, 381, 382,
	383, 384, 1130, 1131, 1134, 463, 1173, 385, 386, 0,
	387, 388, 389, 390, 391, 0, 0, 0, 269, 392,
	393, 394, 396, 0, 1172, 395, 643, 644, 0, 645,
	0, 397, 398, 1174, 1132, 1175, 399, 400, 401, 1176,
	402, 0, 0, 0, 403, 404, 405, 406, 407, 408,
	1213, 409, 411, 410, 0, 412, 1168, 1177, 413, 414,
	1178, 0, 415, 0, 0, 0, 416, 417, 420, 1123,
	1122, 418, 419, 421, 422, 0, 423, 424, 426, 429,
	425, 427, 428, 430, 443, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 445, 0, 444,
	1179, 446, 447, 448, 453, 455, 456, 451, 452, 454,
	457, 458, 450, 1180, 459, 449, 0, 270, 1181, 460,
	461, 0, 1133, 462, 649, 464, 465, 0, 0, 466,
	0, 0, 1219, 468, 469, 470, 0, 0, 471, 472,
	650, 1182, 473, 1183, 1162, 474, 475, 467, 476, 477,
	478, 479, 480, 481, 482, 483, 0, 484, 485, 652,
	486, 487, 488, 653, 489, 490, 491, 1163, 492, 655,
	493, 494, 0, 495, 496, 0, 497, 498, 499, 500,
	501, 502, 503, 656, 504, 506, 505, 507, 0, 508,
	0, 509, 510, 511, 0, 0, 0, 0, 512, 0,
	514, 515, 516, 517, 513, 518, 519, 520, 521, 0,
	522, 523, 524, 1184, 525, 526, 527, 528, 657, 1221,
	0, 530, 531, 537, 538, 539, 532, 533, 540, 541,
	542, 543, 544, 230, 546, 547, 545, 548, 549, 550,
	1126, 551, 552, 534, 535, 553, 554, 1185, 555, 556,
	557, 558, 559, 560, 561, 658, 0, 562, 0, 563,
	564, 565, 567, 536, 568, 573, 574, 659, 569, 570,
	571, 572, 1164, 576, 577, 0, 578, 579, 0, 575,
	566, 232, 580, 581, 582, 583, 584, 585, 586, 354,
	587, 0, 588, 661, 662, 663, 664, 0, 597, 0,
	589, 590, 591, 1165, 592, 1166, 0, 593, 594, 595,
	596, 0, 598, 599, 0, 0, 600, 601, 602, 604,
	605, 603, 606, 1127, 607, 0, 0, 608, 609, 610,
	1585, 668, 669, 0, 612, 611, 613, 670, 0, 614,
	0, 0, 0, 224, 615, 616, 671, 617, 618, 619,
	0, 0, 225, 0, 0, 0, 3262, 0, 1227, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1217, 0, 1930, 271, 273, 272, 274, 275,
	276, 277, 0, 278, 279, 0, 0, 0, 0, 0,
	1129, 0, 0, 0, 0, 280, 281, 1169, 282, 283,
	284, 285, 286, 287, 621, 622, 0, 288, 623, 289,
	624, 0, 625, 290, 291, 292, 293, 294, 295, 0,
	1128, 0, 296, 626, 627, 628, 0, 297, 298, 1135,
	0, 1116, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	1170, 321, 322, 323, 1119, 1117, 1118, 1125, 1121, 1120,
	1124, 324, 325, 326, 327, 328, 0, 329, 630, 631,
	0, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 340, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 632, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 1160, 1161,
	360, 0, 268, 0, 0, 0, 0, 0, 361, 362,
	363, 635, 0, 0, 0, 364, 0, 365, 366, 0,
	0, 1171, 367, 368, 636, 637, 369, 370, 371, 372,
	373, 374, 375, 376, 377, 0, 378, 1167, 0, 639,
	379, 0, 380, 381, 382, 383, 384, 1130, 1131, 1134,
	463, 1173, 385, 386, 0, 387, 388, 389, 390, 391,
	0, 0, 0, 269, 392, 393, 394, 396, 0, 1172,
	395, 643, 644, 0, 645, 0, 397, 398, 1174, 1132,
	1175, 399, 400, 401, 1176, 402, 0, 0, 0, 403,
	404, 405, 406, 407, 408, 1213, 409, 411, 410, 0,
	412, 1168, 1177, 413, 414, 1178, 0, 415, 0, 0,
	0, 416, 417, 420, 1123, 1122, 418, 419, 421, 422,
	0, 423, 424, 426, 429, 425, 427, 428, 430, 443,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 445, 0, 444, 1179, 446, 447, 448, 453,
	455, 456, 451, 452, 454, 457, 458, 450, 1180, 459,
	449, 0, 270, 1181, 460, 461, 0, 1133, 462, 649,
	464, 465, 0, 0, 466, 0, 0, 1219, 468, 469,
	470, 0, 0, 471, 472, 650, 1182, 473, 1183, 1162,
	474, 475, 467, 476, 477, 478, 479, 480, 481, 482,
	483, 0, 484, 485, 652, 486, 487, 488, 653, 489,
	490, 491, 1163, 492, 655, 493, 494, 0, 495, 496,
	0, 497, 498, 499, 500, 501, 502, 503, 656, 504,
	506, 505, 507, 0, 508, 0, 509, 510, 511, 0,
	0, 0, 0, 512, 0, 514, 515, 516, 517, 513,
	518, 519, 520, 521, 0, 522, 523, 524, 1184, 525,
	526, 527, 528, 657, 1221, 0, 530, 531, 537, 538,
	539, 532, 533, 540, 541, 542, 543, 544, 0, 546,
	547, 545, 548, 549, 550, 1126, 551, 552, 534, 535,
	553, 554, 1185, 555, 556, 557, 558, 559, 560, 561,
	658, 0, 562, 0, 563, 564, 565, 567, 536, 568,
	573, 574, 659, 569, 570, 571, 572, 1164, 576, 577,
	0, 578, 579, 0, 575, 566, 0, 580, 581, 582,
	583, 584, 585, 586, 354, 587, 0, 588, 661, 662,
	663, 664, 0, 597, 0, 589, 590, 591, 1165, 592,
	1166, 0, 593, 594, 595, 596, 0, 598, 599, 0,
	0, 600, 601, 602, 604, 605, 603, 606, 1127, 607,
	0, 0, 608, 609, 610, 667, 668, 669, 0, 612,
	611, 613, 670, 0, 614, 0, 1209, 0, 1227, 615,
	616, 671, 617, 618, 619, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 271, 273, 272, 274, 275,
	276, 277, 0, 278, 279, 0, 0, 1217, 0, 1215,
	1129, 0, 0, 0, 0, 280, 281, 1169, 282, 283,
	284, 285, 286, 287, 621, 622, 0, 288, 623, 289,
	624, 0, 625, 290, 291, 292, 293, 294, 295, 0,
	1128, 0, 296, 626, 627, 628, 0, 297, 298, 1135,
	0, 1116, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	1170, 321, 322, 323, 1119, 1117, 1118, 1125, 1121, 1120,
	1124, 324, 325, 326, 327, 328, 0, 329, 630, 631,
	0, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 340, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 632, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 1160, 1161,
	360, 0, 268, 0, 0, 0, 0, 0, 361, 362,
	363, 635, 0, 0, 0, 364, 0, 365, 366, 0,
	0, 1171, 367, 368, 636, 637, 369, 370, 371, 372,
	373, 374, 375, 376, 377, 0, 378, 1167, 0, 639,
	379, 0, 380, 381, 382, 383, 384, 1130, 1131, 1134,
	463, 1173, 385, 386, 0, 387, 388, 389, 390, 391,
	0, 0, 0, 269, 392, 393, 394, 396, 0, 1172,
	395, 643, 644, 0, 645, 0, 397, 398, 1174, 1132,
	1175, 399, 400, 401, 1176, 402, 0, 0, 0, 403,
	404, 405, 406, 407, 408, 1213, 409, 411, 410, 0,
	412, 1168, 1177, 413, 414, 1178, 0, 415, 0, 0,
	0, 416, 417, 420, 1123, 1122, 418, 419, 421, 422,
	0, 423, 424, 426, 429, 425, 427, 428, 430, 443,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 445, 0, 444, 1179, 446, 447, 448, 453,
	455, 456, 451, 452, 454, 457, 458, 450, 1180, 459,
	449, 0, 270, 1181, 460, 461, 0, 1133, 462, 649,
	464, 465, 0, 0, 466, 0, 0, 1219, 468, 469,
	470, 0, 0, 471, 472, 650, 1182, 473, 1183, 1162,
	474, 475, 467, 476, 477, 478, 479, 480, 481, 482,
	483, 0, 484, 485, 652, 486, 487, 488, 653, 489,
	490, 491, 1163, 492, 655, 493, 494, 0, 495, 496,
	0, 497, 498, 499, 500, 501, 502, 503, 656, 504,
	506, 505, 507, 0, 508, 0, 509, 510, 511, 0,
	0, 0, 0, 512, 0, 514, 515, 516, 517, 513,
	518, 519, 520, 521, 0, 522, 523, 524, 1184, 525,
	526, 527, 528, 657, 1221, 0, 530, 531, 537, 538,
	539, 532, 533, 540, 541, 542, 543, 544, 0, 546,
	547, 545, 548, 549, 550, 1126, 551, 552, 534, 535,
	553, 554, 1185, 555, 556, 557, 558, 559, 560, 561,
	658, 0, 562, 0, 563, 564, 565, 567, 536, 568,
	573, 574, 659, 569, 570, 571, 572, 1164, 576, 577,
	0, 578, 579, 0, 575, 566, 0, 580, 581, 582,
	583, 584, 585, 586, 354, 587, 0, 588, 661, 662,
	663, 664, 0, 597, 0, 589, 590, 591, 1165, 592,
	1166, 0, 593, 594, 595, 596, 0, 598, 599, 0,
	0, 600, 601, 602, 604, 605, 603, 606, 1127, 607,
	0, 0, 608, 609, 610, 667, 668, 669, 0, 612,
	611, 613, 670, 1227, 614, 0, 0, 0, 0, 615,
	616, 671, 617, 618, 619, 0, 0, 0, 0, 0,
	271, 273, 272, 274, 275, 276, 277, 0, 278, 279,
	0, 0, 0, 0, 0, 1129, 0, 1217, 0, 1215,
	280, 281, 1169, 282, 283, 284, 285, 286, 287, 621,
	622, 0, 288, 623, 289, 624, 0, 625, 290, 291,
	292, 293, 294, 295, 0, 1128, 0, 296, 626, 627,
	628, 0, 297, 298, 1135, 0, 1116, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 316,
	317, 0, 318, 319, 320, 1170, 321, 322, 323, 1119,
	1117, 1118, 1125, 1121, 1120, 1124, 324, 325, 326, 327,
	328, 0, 329, 630, 631, 0, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	340, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 632, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 1160, 1161, 360, 0, 268, 0, 0,
	0, 0, 0, 361, 362, 363, 635, 0, 0, 0,
	364, 0, 365, 366, 0, 0, 1171, 367, 368, 636,
	637, 369, 370, 371, 372, 373, 374, 375, 376, 377,
	0, 378, 1167, 0, 639, 379, 0, 380, 381, 382,
	383, 384, 1130, 1131, 1134, 463, 1173, 385, 386, 0,
	387, 388, 389, 390, 391, 0, 0, 0, 269, 392,
	393, 394, 396, 0, 1172, 395, 643, 644, 0, 645,
	0, 397, 398, 1174, 1132, 1175, 399, 400, 401, 1176,
	402, 0, 0, 0, 403, 404, 405, 406, 407, 408,
	1213, 409, 411, 410, 0, 412, 1168, 1177, 413, 414,
	1178, 0, 415, 0, 0, 0, 416, 417, 420, 1123,
	1122, 418, 419, 421, 422, 0, 423, 424, 426, 429,
	425, 427, 428, 430, 443, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 445, 0, 444,
	1179, 446, 447, 448, 453, 455, 456, 451, 452, 454,
	457, 458, 450, 1180, 459, 449, 0, 270, 1181, 460,
	461, 0, 1133, 462, 649, 464, 465, 0, 0, 466,
	0, 0, 1219, 468, 469, 470, 0, 0, 471, 472,
	650, 1182, 473, 1183, 1162, 474, 475, 467, 476, 477,
	478, 479, 480, 481, 482, 483, 0, 484, 485, 652,
	486, 487, 488, 653, 489, 490, 491, 1163, 492, 655,
	493, 494, 0, 495, 496, 0, 497, 498, 499, 500,
	501, 502, 503, 656, 504, 506, 505, 507, 0, 508,
	0, 509, 510, 511, 0, 0, 0, 0, 512, 0,
	514, 515, 516, 517, 513, 518, 519, 520, 521, 0,
	522, 523, 524, 1184, 525, 526, 527, 528, 657, 1221,
	0, 530, 531, 537, 538, 539, 532, 533, 540, 541,
	542, 543, 544, 0, 546, 547, 545, 548, 549, 550,
	1126, 551, 552, 534, 535, 553, 554, 1185, 555, 556,
	557, 558, 559, 560, 561, 658, 0, 562, 0, 563,
	564, 565, 567, 536, 568, 573, 574, 659, 569, 570,
	571, 572, 1164, 576, 577, 0, 578, 579, 0, 575,
	566, 0, 580, 581, 582, 583, 584, 585, 586, 354,
	587, 0, 588, 661, 662, 663, 664, 0, 597, 0,
	589, 590, 591, 1165, 592, 1166, 0, 593, 594, 595,
	596, 0, 598, 599, 0, 0, 600, 601, 602, 604,
	605, 603, 606, 1127, 607, 0, 0, 608, 609, 610,
	667, 668, 669, 0, 612, 611, 613, 670, 1227, 614,
	0, 0, 0, 0, 615, 616, 671, 617, 618, 619,
	0, 0, 0, 0, 0, 271, 273, 272, 274, 275,
	276, 277, 0, 278, 279, 0, 0, 0, 0, 0,
	1129, 0, 1217, 0, 1215, 280, 281, 1169, 282, 283,
	284, 285, 286, 287, 621, 622, 0, 288, 623, 289,
	624, 0, 625, 290, 291, 292, 293, 294, 295, 0,
	1128, 0, 296, 626, 627, 628, 0, 297, 298, 1135,
	0, 1116, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	1170, 321, 322, 323, 1119, 1117, 1118, 1125, 1121, 1120,
	1124, 324, 325, 326, 327, 328, 0, 329, 630, 631,
	0, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 340, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 632, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 1160, 1161,
	360, 0, 268, 0, 0, 0, 0, 0, 361, 362,
	363, 635, 0, 0, 0, 364, 0, 365, 366, 0,
	0, 1171, 367, 368, 636, 637, 369, 370, 371, 372,
	373, 374, 375, 376, 377, 0, 378, 1167, 0, 639,
	379, 0, 380, 381, 382, 383, 384, 1130, 1131, 1134,
	463, 1173, 385, 386, 0, 387, 388, 389, 390, 391,
	0, 0, 0, 269, 392, 393, 394, 396, 0, 1172,
	395, 643, 644, 0, 645, 0, 397, 398, 1174, 1132,
	1175, 399, 400, 401, 1176, 402, 0, 0, 0, 403,
	404, 405, 406, 407, 408, 0, 409, 411, 410, 0,
	412, 1168, 1177, 413, 414, 1178, 0, 415, 0, 0,
	0, 416, 417, 420, 1123, 1122, 418, 419, 421, 422,
	0, 423, 424, 426, 429, 425, 427, 428, 430, 443,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 445, 0, 444, 1179, 446, 447, 448, 453,
	455, 456, 451, 452, 454, 457, 458, 450, 1180, 459,
	449, 0, 270, 1181, 460, 461, 0, 1133, 462, 649,
	464, 465, 0, 0, 466, 0, 0, 0, 468, 469,
	470, 0, 0, 471, 472, 650, 1182, 473, 1183, 1162,
	474, 475, 467, 476, 477, 478, 479, 480, 481, 482,
	483, 0, 484, 485, 652, 486, 487, 488, 653, 489,
	490, 491, 1163, 492, 655, 493, 494, 0, 495, 496,
	0, 497, 498, 499, 500, 501, 502, 503, 656, 504,
	506, 505, 507, 0, 508, 0, 509, 510, 511, 0,
	0, 0, 0, 512, 0, 514, 515, 516, 517, 513,
	518, 519, 520, 521, 0, 522, 523, 524, 1184, 525,
	526, 527, 528, 657, 529, 0, 530, 531, 537, 538,
	539, 532, 533, 540, 541, 542, 543, 544, 0, 546,
	547, 545, 548, 549, 550, 1126, 551, 552, 534, 535,
	553, 554, 1185, 555, 556, 557, 558, 559, 560, 561,
	658, 0, 562, 0, 563, 564, 565, 567, 536, 568,
	573, 574, 659, 569, 570, 571, 572, 1164, 576, 577,
	0, 578, 579, 0, 575, 566, 0, 580, 581, 582,
	583, 584, 585, 586, 354, 587, 0, 588, 661, 662,
	663, 664, 0, 597, 0, 589, 590, 591, 1165, 592,
	1166, 0, 593, 594, 595, 596, 0, 598, 599, 0,
	0, 600, 601, 602, 604, 605, 603, 606, 1127, 607,
	0, 0, 608, 609, 610, 667, 668, 669, 0, 612,
	611, 613, 670, 1227, 614, 0, 0, 0, 0, 615,
	616, 671, 617, 618, 619, 0, 0, 0, 0, 0,
	271, 273, 272, 274, 275, 276, 277, 0, 278, 279,
	0, 0, 0, 0, 0, 1129, 0, 0, 0, 4066,
	280, 281, 1169, 282, 283, 284, 285, 286, 287, 621,
	622, 0, 288, 623, 289, 624, 0, 625, 290, 291,
	292, 293, 294, 295, 0, 1128, 0, 296, 626, 627,
	628, 0, 297, 298, 1135, 0, 1116, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 316,
	317, 0, 318, 319, 320, 1170, 321, 322, 323, 1119,
	1117, 1118, 1125, 1121, 1120, 1124, 324, 325, 326, 327,
	328, 0, 329, 630, 631, 0, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	340, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 632, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 1160, 1161, 360, 0, 268, 0, 0,
	0, 0, 0, 361, 362, 363, 635, 0, 0, 0,
	364, 0, 365, 366, 0, 0, 1171, 367, 368, 636,
	637, 369, 370, 371, 372, 373, 374, 375, 376, 377,
	0, 378, 1167, 0, 639, 379, 0, 380, 381, 382,
	383, 384, 1130, 1131, 1134, 463, 1173, 385, 386, 0,
	387, 388, 389, 390, 391, 0, 0, 0, 269, 392,
	393, 394, 396, 0, 1172, 395, 643, 644, 0, 645,
	0, 397, 398, 1174, 1132, 1175, 399, 400, 401, 1176,
	402, 0, 0, 0, 403, 404, 405, 406, 407, 408,
	0, 409, 411, 410, 0, 412, 1168, 1177, 413, 414,
	1178, 0, 415, 0, 0, 0, 416, 417, 420, 1123,
	1122, 418, 419, 421, 422, 0, 423, 424, 426, 429,
	425, 427, 428, 430, 443, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 445, 0, 444,
	1179, 446, 447, 448, 453, 455, 456, 451, 452, 454,
	457, 458, 450, 1180, 459, 449, 0, 270, 1181, 460,
	461, 0, 1133, 462, 649, 464, 465, 0, 0, 466,
	0, 0, 0, 468, 469, 470, 0, 0, 471, 472,
	650, 1182, 473, 1183, 1162, 474, 475, 467, 476, 477,
	478, 479, 480, 481, 482, 483, 0, 484, 485, 652,
	486, 487, 488, 653, 489, 490, 491, 1163, 492, 655,
	493, 494, 0, 495, 496, 0, 497, 498, 499, 500,
	501, 502, 503, 656, 504, 506, 505, 507, 0, 508,
	0, 509, 510, 511, 0, 0, 0, 0, 512, 0,
	514, 515, 516, 517, 513, 518, 519, 520, 521, 0,
	522, 523, 524, 1184, 525, 526, 527, 528, 657, 1221,
	0, 530, 531, 537, 538, 539, 532, 533, 540, 541,
	542, 543, 544, 0, 546, 547, 545, 548, 549, 550,
	1126, 551, 552, 534, 535, 553, 554, 1185, 555, 556,
	557, 558, 559, 560, 561, 658, 0, 562, 0, 563,
	564, 565, 567, 536, 568, 573, 574, 659, 569, 570,
	571, 572, 1164, 576, 577, 0, 578, 579, 0, 575,
	566, 0, 580, 581, 582, 583, 584, 585, 586, 354,
	587, 0, 588, 661, 662, 663, 664, 0, 597, 0,
	589, 590, 591, 1165, 592, 1166, 0, 593, 594, 595,
	596, 0, 598, 599, 0, 0, 600, 601, 602, 604,
	605, 603, 606, 1127, 607, 0, 0, 608, 609, 610,
	667, 668, 669, 0, 612, 611, 613, 670, 0, 614,
	265, 0, 0, 0, 615, 616, 671, 617, 618, 619,
	2496, 2497, 2498, 2515, 2516, 2517, 0, 271, 273, 272,
	274, 275, 276, 277, 0, 278, 279, 0, 0, 0,
	2518, 0, 620, 0, 1828, 0, 0, 280, 281, 0,
	282, 283, 284, 285, 286, 287, 621, 622, 0, 288,
	623, 289, 624, 0, 625, 290, 291, 292, 293, 294,
	295, 0, 0, 1813, 296, 626, 627, 628, 0, 297,
	298, 629, 0, 0, 0, 299, 300, 301, 302, 303,
	304, 305, 2508, 0, 307, 308, 309, 306, 310, 0,
	311, 2504, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 0, 321, 322, 323, 0, 0, 0, 0,
	0, 0, 0, 324, 325, 326, 327, 328, 0, 329,
	630, 631, 0, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 340, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 632,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	633, 634, 360, 0, 0, 0, 2509, 2510, 2511, 2512,
	361, 362, 363, 635, 0, 0, 2503, 364, 0, 365,
	366, 0, 0, 0, 367, 368, 636, 637, 369, 370,
	371, 372, 373, 374, 375, 376, 377, 0, 378, 638,
	0, 639, 379, 0, 380, 381, 382, 383, 384, 640,
	641, 642, 463, 0, 385, 386, 0, 387, 388, 389,
	390, 391, 0, 0, 0, 0, 392, 393, 394, 396,
	0, 0, 395, 643, 644, 0, 645, 0, 397, 398,
	0, 646, 0, 399, 400, 401, 0, 402, 0, 2513,
	2514, 403, 404, 405, 406, 407, 408, 0, 409, 411,
	410, 0, 412, 647, 0, 413, 414, 0, 0, 415,
	0, 0, 0, 416, 417, 420, 0, 0, 418, 419,
	421, 422, 2506, 423, 424, 426, 429, 425, 427, 428,
	430, 443, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 442, 445, 0, 444, 0, 446, 447,
	448, 453, 455, 456, 451, 452, 454, 457, 458, 450,
	0, 459, 449, 0, 0, 0, 460, 461, 0, 648,
	462, 649, 464, 465, 0, 0, 466, 0, 0, 0,
	468, 469, 470, 0, 0, 471, 472, 650, 0, 473,
	0, 651, 474, 475, 467, 476, 477, 478, 479, 480,
	481, 482, 483, 0, 484, 485, 652, 486, 487, 488,
	653, 489, 490, 491, 654, 492, 655, 493, 494, 0,
	495, 496, 0, 497, 498, 499, 500, 501, 502, 503,
	656, 504, 506, 505, 507, 0, 508, 0, 509, 510,
	511, 0, 0, 0, 0, 512, 0, 514, 515, 516,
	517, 513, 518, 519, 520, 521, 0, 522, 523, 524,
	0, 525, 526, 527, 528, 657, 529, 2507, 530, 531,
	537, 538, 539, 532, 533, 540, 541, 542, 543, 544,
	0, 546, 547, 545, 548, 549, 550, 0, 551, 552,
	534, 535, 553, 554, 0, 555, 556, 557, 558, 559,
	560, 561, 658, 0, 562, 0, 563, 564, 565, 567,
	536, 568, 573, 574, 659, 569, 570, 571, 572, 660,
	576, 577, 0, 578, 579, 1812, 575, 566, 0, 580,
	581, 582, 583, 584, 585, 586, 354, 587, 0, 588,
	661, 662, 663, 664, 0, 597, 0, 589, 590, 591,
	665, 592, 666, 0, 593, 594, 595, 596, 0, 598,
	599, 0, 0, 600, 601, 602, 604, 605, 603, 606,
	0, 607, 0, 0, 608, 609, 610, 667, 668, 669,
	0, 612, 611, 613, 670, 0, 614, 0, 0, 0,
	0, 615, 616, 671, 617, 618, 619, 0, 0, 1049,
	0, 1308, 2493, 2494, 2495, 2519, 2505, 2499, 0, 2501,
	2502, 2500, 2487, 2488, 2489, 2490, 2491, 2492, 271, 273,
	272, 274, 275, 276, 277, 0, 278, 279, 0, 0,
	0, 0, 0, 620, 0, 0, 0, 0, 280, 281,
	1169, 282, 283, 284, 285, 286, 287, 621, 622, 0,
	288, 623, 289, 624, 0, 625, 290, 291, 292, 293,
	294, 295, 0, 0, 0, 296, 626, 627, 628, 0,
	297, 298, 629, 0, 1313, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 1170, 321, 322, 323, 0, 0, 0,
	0, 0, 0, 0, 324, 325, 326, 327, 328, 0,
	329, 630, 631, 0, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 340, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	632, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 633, 634, 360, 0, 268, 0, 0, 0, 0,
	0, 361, 362, 363, 635, 0, 0, 0, 364, 0,
	365, 366, 0, 0, 1171, 367, 368, 636, 637, 369,
	370, 371, 372, 373, 374, 375, 376, 377, 0, 378,
	638, 0, 639, 379, 0, 380, 381, 382, 383, 384,
	640, 641, 642, 463, 1173, 385, 386, 0, 387, 388,
	389, 390, 391, 0, 0, 0, 0, 392, 393, 394,
	396, 0, 1172, 395, 643, 644, 0, 645, 0, 397,
	398, 1174, 646, 1175, 399, 400, 401, 1176, 402, 0,
	0, 0, 403, 404, 405, 406, 407, 408, 0, 409,
	411, 410, 0, 412, 647, 1177, 413, 414, 1178, 0,
	415, 0, 0, 0, 416, 417, 420, 0, 0, 418,
	419, 421, 422, 0, 423, 424, 426, 429, 425, 427,
	428, 430, 443, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 445, 0, 444, 1179, 446,
	447, 448, 453, 455, 456, 451, 452, 454, 457, 458,
	450, 1180, 459, 449, 0, 0, 1181, 460, 461, 0,
	648, 462, 649, 464, 465, 0, 0, 466, 0, 0,
	0, 468, 469, 470, 0, 0, 471, 472, 650, 1182,
	473, 1183, 651, 474, 475, 467, 476, 477, 478, 479,
	480, 481, 482, 483, 0, 484, 485, 652, 486, 487,
	488, 653, 489, 490, 491, 654, 492, 655, 493, 494,
	0, 495, 496, 0, 497, 498, 499, 500, 501, 502,
	503, 656, 504, 506, 505, 507, 0, 508, 0, 509,
	510, 511, 0, 0, 0, 0, 512, 0, 514, 515,
	516, 517, 513, 518, 519, 520, 521, 0, 522, 523,
	524, 1184, 525, 526, 527, 528, 657, 529, 0, 530,
	531, 537, 538, 539, 532, 533, 540, 541, 542, 543,
	544, 230, 546, 547, 545, 548, 549, 550, 0, 551,
	552, 534, 535, 553, 554, 1185, 555, 556, 557, 558,
	559, 560, 561, 658, 0, 562, 0, 563, 564, 565,
	567, 536, 568, 573, 574, 659, 569, 570, 571, 572,
	660, 576, 577, 0, 578, 579, 0, 575, 566, 232,
	580, 581, 582, 583, 584, 585, 586, 354, 587, 0,
	588, 661, 662, 663, 664, 0, 597, 0, 589, 590,
	591, 665, 592, 666, 0, 593, 594, 595, 596, 0,
	598, 599, 0, 0, 600, 601, 602, 604, 605, 603,
	606, 0, 607, 0, 0, 608, 609, 610, 1585, 668,
	669, 0, 612, 611, 613, 670, 1582, 614, 1308, 0,
	0, 224, 615, 616, 671, 617, 618, 619, 0, 0,
	225, 0, 0, 0, 0, 271, 273, 272, 274, 275,
	276, 277, 0, 278, 279, 0, 0, 0, 0, 0,
	620, 0, 186, 0, 0, 280, 281, 1169, 282, 283,
	284, 285, 286, 287, 621, 622, 0, 288, 623, 289,
	624, 0, 625, 290, 291, 292, 293, 294, 295, 0,
	0, 0, 296, 626, 627, 628, 0, 297, 298, 629,
	0, 1313, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	1170, 321, 322, 323, 0, 0, 0, 0, 0, 0,
	0, 324, 325, 326, 327, 328, 0, 329, 630, 631,
	0, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 340, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 632, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 633, 634,
	360, 0, 268, 0, 0, 0, 0, 0, 361, 362,
	363, 635, 0, 0, 0, 364, 0, 365, 366, 0,
	0, 1171, 367, 368, 636, 637, 369, 370, 371, 372,
	373, 374, 375, 376, 377, 0, 378, 638, 0, 639,
	379, 0, 380, 381, 382, 383, 384, 640, 641, 642,
	463, 1173, 385, 386, 0, 387, 388, 389, 390, 391,
	0, 0, 0, 0, 392, 393, 394, 396, 0, 1172,
	395, 643, 644, 0, 645, 0, 397, 398, 1174, 646,
	1175, 399, 400, 401, 1176, 402, 0, 0, 0, 403,
	404, 405, 406, 407, 408, 0, 409, 411, 410, 0,
	412, 647, 1177, 413, 414, 1178, 0, 415, 0, 0,
	0, 416, 417, 420, 0, 0, 418, 419, 421, 422,
	0, 423, 424, 426, 429, 425, 427, 428, 430, 443,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 445, 0, 444, 1179, 446, 447, 448, 453,
	455, 456, 451, 452, 454, 457, 458, 450, 1180, 459,
	449, 0, 0, 1181, 460, 461, 0, 648, 462, 649,
	464, 465, 0, 0, 466, 0, 0, 0, 468, 469,
	470, 0, 0, 471, 472, 650, 1182, 473, 1183, 651,
	474, 475, 467, 476, 477, 478, 479, 480, 481, 482,
	483, 0, 484, 485, 652, 486, 487, 488, 653, 489,
	490, 491, 654, 492, 655, 493, 494, 0, 495, 496,
	0, 497, 498, 499, 500, 501, 502, 503, 656, 504,
	506, 505, 507, 0, 508, 0, 509, 510, 511, 0,
	0, 0, 0, 512, 0, 514, 515, 516, 517, 513,
	518, 519, 520, 521, 0, 522, 523, 524, 1184, 525,
	526, 527, 528, 657, 529, 0, 530, 531, 537, 538,
	539, 532, 533, 540, 541, 542, 543, 544, 230, 546,
	547, 545, 548, 549, 550, 0, 551, 552, 534, 535,
	553, 554, 1185, 555, 556, 557, 558, 559, 560, 561,
	658, 0, 562, 0, 563, 564, 565, 567, 536, 568,
	573, 574, 659, 569, 570, 571, 572, 660, 576, 577,
	0, 578, 579, 0, 575, 566, 232, 580, 581, 582,
	583, 584, 585, 586, 354, 587, 0, 588, 661, 662,
	663, 664, 0, 597, 0, 589, 590, 591, 665, 592,
	666, 0, 593, 594, 595, 596, 0, 598, 599, 0,
	0, 600, 601, 602, 604, 605, 603, 606, 0, 607,
	0, 0, 608, 609, 610, 1585, 668, 669, 0, 612,
	611, 613, 670, 0, 614, 0, 0, 0, 224, 615,
	616, 671, 617, 618, 619, 1308, 1307, 225, 0, 0,
	0, 1305, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 271, 273, 272, 274, 275, 276, 277, 186,
	278, 279, 0, 0, 0, 0, 0, 620, 0, 0,
	0, 0, 280, 281, 1169, 282, 283, 284, 285, 286,
	287, 621, 622, 0, 288, 623, 289, 624, 0, 625,
	290, 291, 292, 293, 294, 295, 0, 0, 0, 296,
	626, 627, 628, 0, 297, 298, 629, 0, 1313, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 1170, 321, 322,
	323, 0, 0, 0, 0, 0, 0, 0, 324, 325,
	326, 327, 328, 0, 329, 630, 631, 0, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 340, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 632, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 633, 634, 360, 0, 268,
	0, 0, 0, 0, 0, 361, 362, 363, 635, 0,
	0, 0, 364, 0, 365, 366, 0, 0, 1171, 367,
	368, 636, 637, 369, 370, 371, 372, 373, 374, 375,
	376, 377, 0, 378, 638, 0, 639, 379, 0, 380,
	381, 382, 383, 384, 640, 641, 642, 463, 1173, 385,
	386, 0, 387, 388, 389, 390, 391, 0, 0, 0,
	0, 392, 393, 394, 396, 0, 1172, 395, 643, 644,
	0, 645, 0, 397, 398, 1174, 646, 1175, 399, 400,
	401, 1176, 402, 0, 0, 0, 403, 404, 405, 406,
	407, 408, 0, 409, 411, 410, 0, 412, 647, 1177,
	413, 414, 1178, 0, 415, 0, 0, 0, 416, 417,
	420, 0, 0, 418, 419, 421, 422, 0, 423, 424,
	426, 429, 425, 427, 428, 430, 443, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 445,
	0, 444, 1179, 446, 447, 448, 453, 455, 456, 451,
	452, 454, 457, 458, 450, 1180, 459, 449, 0, 0,
	1181, 460, 461, 0, 648, 462, 649, 464, 465, 0,
	0, 466, 0, 0, 0, 468, 469, 470, 0, 0,
	471, 472, 650, 1182, 473, 1183, 651, 474, 475, 467,
	476, 477, 478, 479, 480, 481, 482, 483, 0, 484,
	485, 652, 486, 487, 488, 653, 489, 490, 491, 654,
	492, 655, 493, 494, 0, 495, 496, 0, 497, 498,
	499, 500, 501, 502, 503, 656, 504, 506, 505, 507,
	0, 508, 0, 509, 510, 511, 0, 0, 0, 0,
	512, 0, 514, 515, 516, 517, 513, 518, 519, 520,
	521, 0, 522, 523, 524, 1184, 525, 526, 527, 528,
	657, 529, 0, 530, 531, 537, 538, 539, 532, 533,
	540, 541, 542, 543, 544, 0, 546, 547, 545, 548,
	549, 550, 0, 551, 552, 534, 535, 553, 554, 1185,
	555, 556, 557, 558, 559, 560, 561, 658, 0, 562,
	0, 563, 564, 565, 567, 536, 568, 573, 574, 659,
	569, 570, 571, 572, 660, 576, 577, 0, 578, 579,
	0, 575, 566, 0, 580, 581, 582, 583, 584, 585,
	586, 354, 587, 0, 588, 661, 662, 663, 664, 0,
	597, 0, 589, 590, 591, 665, 592, 666, 0, 593,
	594, 595, 596, 0, 598, 599, 0, 0, 600, 601,
	602, 604, 605, 603, 606, 0, 607, 0, 0, 608,
	609, 610, 667, 668, 669, 0, 612, 611, 613, 670,
	0, 614, 0, 0, 0, 0, 615, 616, 671, 617,
	618, 619, 1308, 1307, 0, 0, 0, 0, 1305, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 271,
	273, 272, 274, 275, 276, 277, 1607, 278, 279, 0,
	0, 0, 0, 0, 620, 0, 0, 0, 0, 280,
	281, 1169, 282, 283, 284, 285, 286, 287, 621, 622,
	0, 288, 623, 289, 624, 0, 625, 290, 291, 292,
	293, 294, 295, 0, 0, 0, 296, 626, 627, 628,
	0, 297, 298, 629, 0, 1313, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 1170, 321, 322, 323, 0, 0,
	0, 0, 0, 0, 0, 324, 325, 326, 327, 328,
	0, 329, 630, 631, 0, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 340,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 632, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 633, 634, 360, 0, 268, 0, 0, 0,
	0, 0, 361, 362, 363, 635, 0, 0, 0, 364,
	0, 365, 366, 0, 0, 1171, 367, 368, 636, 637,
	369, 370, 371, 372, 373, 374, 375, 376, 377, 0,
	378, 638, 0, 639, 379, 0, 380, 381, 382, 383,
	384, 640, 641, 642, 463, 1173, 385, 386, 0, 387,
	388, 389, 390, 391, 0, 0, 0, 0, 392, 393,
	394, 396, 0, 1172, 395, 643, 644, 0, 645, 0,
	397, 398, 1174, 646, 1175, 399, 400, 401, 1176, 402,
	0, 0, 0, 403, 404, 405, 406, 407, 408, 0,
	409, 411, 410, 0, 412, 647, 1177, 413, 414, 1178,
	0, 415, 0, 0, 0, 416, 417, 420, 0, 0,
	418, 419, 421, 422, 0, 423, 424, 426, 429, 425,
	427, 428, 430, 443, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 445, 0, 444, 1179,
	446, 447, 448, 453, 455, 456, 451, 452, 454, 457,
	458, 450, 1180, 459, 449, 0, 0, 1181, 460, 461,
	0, 648, 462, 649, 464, 465, 0, 0, 466, 0,
	0, 0, 468, 469, 470, 0, 0, 471, 472, 650,
	1182, 473, 1183, 651, 474, 475, 467, 476, 477, 478,
	479, 480, 481, 482, 483, 0, 484, 485, 652, 486,
	487, 488, 653, 489, 490, 491, 654, 492, 655, 493,
	494, 0, 495, 496, 0, 497, 498, 499, 500, 501,
	502, 503, 656, 504, 506, 505, 507, 0, 508, 0,
	509, 510, 511, 0, 0, 0, 0, 512, 0, 514,
	515, 516, 517, 513, 518, 519, 520, 521, 0, 522,
	523, 524, 1184, 525, 526, 527, 528, 657, 529, 0,
	530, 531, 537, 538, 539, 532, 533, 540, 541, 542,
	543, 544, 0, 546, 547, 545, 548, 549, 550, 0,
	551, 552, 534, 535, 553, 554, 1185, 555, 556, 557,
	558, 559, 560, 561, 658, 0, 562, 0, 563, 564,
	565, 567, 536, 568, 573, 574, 659, 569, 570, 571,
	572, 660, 576, 577, 0, 578, 579, 0, 575, 566,
	0, 580, 581, 582, 583, 584, 585, 586, 354, 587,
	0, 588, 661, 662, 663, 664, 0, 597, 0, 589,
	590, 591, 665, 592, 666, 0, 593, 594, 595, 596,
	0, 598, 599, 0, 0, 600, 601, 602, 604, 605,
	603, 606, 0, 607, 0, 0, 608, 609, 610, 667,
	668, 669, 0, 612, 611, 613, 670, 0, 614, 0,
	0, 0, 0, 615, 616, 671, 617, 618, 619, 1308,
	1307, 0, 0, 0, 0, 1305, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 271, 273, 272, 274,
	275, 276, 277, 3549, 278, 279, 0, 0, 0, 0,
	0, 620, 0, 0, 0, 0, 280, 281, 1169, 282,
	283, 284, 285, 286, 287, 621, 622, 0, 288, 623,
	289, 624, 0, 625, 290, 291, 292, 293, 294, 295,
	0, 0, 0, 296, 626, 627, 628, 0, 297, 298,
	629, 0, 1313, 0, 299, 300, 301, 302, 303, 304,
	305, 0, 0, 307, 308, 309, 306, 310, 0, 311,
	0, 312, 313, 314, 315, 316, 317, 0, 318, 319,
	320, 1170, 321, 322, 323, 0, 0, 0, 0, 0,
	0, 0, 324, 325, 326, 327, 328, 0, 329, 630,
	631, 0, 333, 330, 331, 0, 334, 332, 335, 0,
	336, 337, 338, 0, 0, 339, 340, 341, 0, 342,
	343, 0, 344, 345, 346, 0, 347, 348, 632, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 633,
	634, 360, 0, 268, 0, 0, 0, 0, 0, 361,
	362, 363, 635, 0, 0, 0, 364, 0, 365, 366,
	0, 0, 1171, 367, 368, 636, 637, 369, 370, 371,
	372, 373, 374, 375, 376, 377, 0, 378, 638, 0,
	639, 379, 0, 380, 381, 382, 383, 384, 640, 641,
	642, 463, 1173, 385, 386, 0, 387, 388, 389, 390,
	391, 0, 0, 0, 0, 392, 393, 394, 396, 0,
	1172, 395, 643, 644, 0, 645, 0, 397, 398, 1174,
	646, 1175, 399, 400, 401, 1176, 402, 0, 0, 0,
	403, 404, 405, 406, 407, 408, 0, 409, 411, 410,
	0, 412, 647, 1177, 413, 414, 1178, 0, 415, 0,
	0, 0, 416, 417, 420, 0, 0, 418, 419, 421,
	422, 0, 423, 424, 426, 429, 425, 427, 428, 430,
	443, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 445, 0, 444, 1179, 446, 447, 448,
	453, 455, 456, 451, 452, 454, 457, 458, 450, 1180,
	459, 449, 0, 0, 1181, 460, 461, 0, 648, 462,
	649, 464, 465, 0, 0, 466, 0, 0, 0, 468,
	469, 470, 0, 0, 471, 472, 650, 1182, 473, 1183,
	651, 474, 475, 467, 476, 477, 478, 479, 480, 481,
	482, 483, 0, 484, 485, 652, 486, 487, 488, 653,
	489, 490, 491, 654, 492, 655, 493, 494, 0, 495,
	496, 0, 497, 498, 499, 500, 501, 502, 503, 656,
	504, 506, 505, 507, 0, 508, 0, 509, 510, 511,
	0, 0, 0, 0, 512, 0, 514, 515, 516, 2272,
	513, 518, 519, 520, 521, 0, 522, 523, 524, 1184,
	525, 526, 527, 528, 657, 529, 0, 530, 531, 537,
	538, 539, 532, 533, 540, 541, 542, 543, 544, 0,
	546, 547, 545, 548, 549, 550, 0, 551, 552, 534,
	535, 553, 554, 1185, 555, 556, 557, 558, 559, 560,
	561, 658, 0, 562, 0, 563, 564, 565, 567, 536,
	568, 573, 574, 659, 569, 570, 571, 572, 660, 576,
	577, 0, 578, 579, 0, 575, 566, 0, 580, 581,
	582, 583, 584, 585, 586, 354, 587, 0, 588, 661,
	662, 663, 664, 0, 597, 0, 589, 590, 591, 665,
	592, 666, 0, 593, 594, 595, 596, 0, 598, 599,
	0, 0, 600, 601, 602, 604, 605, 603, 606, 0,
	607, 0, 0, 608, 609, 610, 667, 668, 669, 0,
	612, 611, 613, 670, 0, 614, 0, 0, 0, 0,
	615, 616, 671, 617, 618, 619, 1308, 2186, 0, 0,
	0, 0, 2187, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 271, 273, 272, 274, 275, 276, 277,
	1607, 278, 279, 0, 0, 0, 0, 0, 620, 0,
	0, 0, 0, 280, 281, 1169, 282, 283, 284, 285,
	286, 287, 621, 622, 0, 288, 623, 289, 624, 0,
	625, 290, 291, 292, 293, 294, 295, 0, 0, 0,
	296, 626, 627, 628, 0, 297, 298, 629, 0, 1313,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 1170, 321,
	322, 323, 0, 0, 0, 0, 0, 0, 0, 324,
	325, 326, 327, 328, 0, 329, 630, 631, 0, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 340, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 632, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 633, 634, 360, 0,
	268, 0, 0, 0, 0, 0, 361, 362, 363, 635,
	0, 0, 0, 364, 0, 365, 366, 0, 0, 1171,
	367, 368, 636, 637, 369, 370, 371, 372, 373, 374,
	375, 376, 377, 0, 378, 638, 0, 639, 379, 0,
	380, 381, 382, 383, 384, 640, 641, 642, 463, 1173,
	385, 386, 0, 387, 388, 389, 390, 391, 0, 0,
	0, 0, 392, 393, 394, 396, 0, 1172, 395, 643,
	644, 0, 645, 0, 397, 398, 1174, 646, 1175, 399,
	400, 401, 1176, 402, 0, 0, 0, 403, 404, 405,
	406, 407, 408, 0, 2185, 411, 410, 0, 412, 647,
	1177, 413, 414, 1178, 0, 415, 0, 0, 0, 416,
	417, 420, 0, 0, 418, 419, 421, 422, 0, 423,
	424, 426, 429, 425, 427, 428, 430, 443, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	445, 0, 444, 1179, 446, 447, 448, 453, 455, 456,
	451, 452, 454, 457, 458, 450, 1180, 459, 449, 0,
	0, 1181, 460, 461, 0, 648, 462, 649, 464, 465,
	0, 0, 466, 0, 0, 0, 468, 469, 470, 0,
	0, 471, 472, 650, 1182, 473, 1183, 651, 474, 475,
	467, 476, 477, 478, 479, 480, 481, 482, 483, 0,
	484, 485, 652, 486, 487, 488, 653, 489, 490, 491,
	654, 492, 655, 493, 494, 0, 495, 496, 0, 497,
	498, 499, 500, 501, 502, 503, 656, 504, 506, 505,
	507, 0, 508, 0, 509, 510, 511, 0, 0, 0,
	0, 512, 0, 514, 515, 516, 517, 513, 518, 519,
	520, 521, 0, 522, 523, 524, 1184, 525, 526, 527,
	528, 657, 529, 0, 530, 531, 537, 538, 539, 532,
	533, 540, 541, 542, 543, 544, 0, 546, 547, 545,
	548, 549, 550, 0, 551, 552, 534, 535, 553, 554,
	1185, 555, 556, 557, 558, 559, 560, 561, 658, 0,
	562, 0, 563, 564, 565, 567, 536, 568, 573, 574,
	659, 569, 570, 571, 572, 660, 576, 577, 0, 578,
	579, 0, 575, 566, 0, 580, 581, 582, 583, 584,
	585, 586, 354, 587, 0, 588, 661, 662, 663, 664,
	0, 597, 0, 589, 590, 591, 665, 592, 666, 0,
	593, 594, 595, 596, 0, 598, 599, 0, 0, 600,
	601, 602, 604, 605, 603, 606, 0, 607, 0, 0,
	608, 609, 610, 667, 668, 669, 0, 612, 611, 613,
	670, 0, 614, 0, 0, 0, 0, 615, 616, 671,
	617, 618, 619, 1308, 1307, 0, 0, 0, 0, 1305,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	271, 273, 272, 274, 275, 276, 277, 1607, 278, 279,
	0, 0, 0, 0, 0, 620, 0, 0, 0, 0,
	280, 281, 1169, 282, 283, 284, 285, 286, 287, 621,
	622, 0, 288, 623, 289, 624, 0, 625, 290, 291,
	292, 293, 294, 295, 0, 0, 0, 296, 626, 627,
	628, 0, 297, 298, 629, 0, 1313, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 316,
	317, 0, 318, 319, 320, 1170, 321, 322, 323, 0,
	0, 0, 0, 0, 0, 0, 324, 325, 326, 327,
	328, 0, 329, 630, 631, 0, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	340, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 632, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 633, 634, 360, 0, 268, 0, 0,
	0, 0, 0, 361, 362, 363, 635, 0, 0, 0,
	364, 0, 365, 366, 0, 0, 1171, 367, 368, 636,
	637, 369, 370, 371, 372, 373, 374, 375, 376, 377,
	0, 378, 638, 0, 639, 379, 0, 380, 381, 382,
	383, 384, 640, 641, 642, 463, 1173, 385, 386, 0,
	387, 388, 389, 390, 391, 0, 0, 0, 0, 392,
	393, 394, 396, 0, 1172, 395, 643, 644, 0, 645,
	0, 397, 398, 1174, 646, 1175, 399, 400, 401, 1176,
	402, 0, 0, 0, 403, 404, 405, 406, 407, 408,
	0, 409, 411, 410, 0, 412, 647, 1177, 413, 414,
	1178, 0, 415, 0, 0, 0, 416, 417, 420, 0,
	0, 418, 419, 421, 422, 0, 423, 424, 426, 429,
	425, 427, 428, 430, 443, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 445, 0, 444,
	1179, 446, 447, 448, 453, 455, 456, 451, 452, 454,
	457, 458, 450, 1180, 459, 449, 0, 0, 1181, 460,
	461, 0, 648, 462, 649, 464, 465, 0, 0, 466,
	0, 0, 0, 468, 469, 470, 0, 0, 471, 472,
	650, 1182, 473, 1183, 651, 474, 475, 467, 476, 477,
	478, 479, 480, 481, 482, 483, 0, 484, 485, 652,
	486, 487, 488, 653, 489, 490, 491, 654, 492, 655,
	493, 494, 0, 495, 496, 0, 497, 498, 499, 500,
	501, 502, 503, 656, 504, 506, 505, 507, 0, 508,
	0, 509, 510, 511, 0, 0, 0, 0, 512, 0,
	514, 515, 516, 517, 513, 518, 519, 520, 521, 0,
	522, 523, 524, 1184, 525, 526, 527, 528, 657, 529,
	0, 530, 531, 537, 538, 539, 532, 533, 540, 541,
	542, 543, 544, 0, 546, 547, 545, 548, 549, 550,
	0, 551, 552, 534, 535, 553, 554, 1185, 555, 556,
	557, 558, 559, 560, 561, 658, 0, 562, 0, 563,
	564, 565, 567, 536, 568, 573, 574, 659, 569, 570,
	571, 572, 660, 576, 577, 0, 578, 579, 0, 575,
	566, 0, 580, 581, 582, 583, 584, 585, 586, 354,
	587, 0, 588, 661, 662, 663, 664, 0, 597, 0,
	589, 590, 591, 665, 592, 666, 0, 593, 594, 595,
	596, 0, 598, 599, 0, 0, 600, 601, 602, 604,
	605, 603, 606, 0, 607, 0, 0, 608, 609, 610,
	667, 668, 669, 0, 612, 611, 613, 670, 1227, 614,
	0, 0, 0, 0, 615, 616, 671, 617, 618, 619,
	0, 0, 0, 0, 0, 271, 273, 272, 274, 275,
	276, 277, 0, 278, 279, 0, 0, 0, 0, 0,
	1129, 0, 0, 0, 1591, 280, 281, 1169, 282, 283,
	284, 285, 286, 287, 621, 622, 0, 288, 623, 289,
	624, 0, 625, 290, 291, 292, 293, 294, 295, 0,
	1128, 0, 296, 626, 627, 628, 0, 297, 298, 1135,
	0, 1116, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	1170, 321, 322, 323, 1119, 1117, 1118, 1125, 1121, 1120,
	1124, 324, 325, 326, 327, 328, 0, 329, 630, 631,
	0, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 340, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 632, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 1160, 1161,
	360, 0, 268, 0, 0, 0, 0, 0, 361, 362,
	363, 635, 0, 0, 0, 364, 0, 365, 366, 0,
	0, 1171, 367, 368, 636, 637, 369, 370, 371, 372,
	373, 374, 375, 376, 377, 0, 378, 1167, 0, 639,
	379, 0, 380, 381, 382, 383, 384, 1130, 1131, 1134,
	463, 1173, 385, 386, 0, 387, 388, 389, 390, 391,
	0, 0, 0, 269, 392, 393, 394, 396, 0, 1172,
	395, 643, 644, 0, 645, 0, 397, 398, 1174, 1132,
	1175, 399, 400, 401, 1176, 402, 0, 0, 0, 403,
	404, 405, 406, 407, 408, 0, 409, 411, 410, 0,
	412, 1168, 1177, 413, 414, 1178, 0, 415, 0, 0,
	0, 416, 417, 420, 1123, 1122, 418, 419, 421, 422,
	0, 423, 424, 426, 429, 425, 427, 428, 430, 443,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 445, 0, 444, 1179, 446, 447, 448, 453,
	455, 456, 451, 452, 454, 457, 458, 450, 1180, 459,
	449, 0, 270, 1181, 460, 461, 0, 1133, 462, 649,
	464, 465, 0, 0, 466, 0, 0, 0, 468, 469,
	470, 0, 0, 471, 472, 650, 1182, 473, 1183, 1162,
	474, 475, 467, 476, 477, 478, 479, 480, 481, 482,
	483, 0, 484, 485, 652, 486, 487, 488, 653, 489,
	490, 491, 1163, 492, 655, 493, 494, 0, 495, 496,
	0, 497, 498, 499, 500, 501, 502, 503, 656, 504,
	506, 505, 507, 0, 508, 0, 509, 510, 511, 0,
	0, 0, 0, 512, 0, 514, 515, 516, 517, 513,
	518, 519, 520, 521, 0, 522, 523, 524, 1184, 525,
	526, 527, 528, 657, 529, 0, 530, 531, 537, 538,
	539, 532, 533, 540, 541, 542, 543, 544, 0, 546,
	547, 545, 548, 549, 550, 1126, 551, 552, 534, 535,
	553, 554, 1185, 555, 556, 557, 558, 559, 560, 561,
	658, 0, 562, 0, 563, 564, 565, 567, 536, 568,
	573, 574, 659, 569, 570, 571, 572, 1164, 576, 577,
	0, 578, 579, 0, 575, 566, 0, 580, 581, 582,
	583, 584, 585, 586, 354, 587, 0, 588, 661, 662,
	663, 664, 0, 597, 0, 589, 590, 591, 1165, 592,
	1166, 0, 593, 594, 595, 596, 0, 598, 599, 0,
	0, 600, 601, 602, 604, 605, 603, 606, 1127, 607,
	0, 0, 608, 609, 610, 667, 668, 669, 0, 612,
	611, 613, 670, 1049, 614, 265, 0, 0, 0, 615,
	616, 671, 617, 618, 619, 0, 0, 0, 0, 0,
	0, 0, 271, 273, 272, 274, 275, 276, 277, 0,
	278, 279, 0, 0, 0, 0, 0, 620, 0, 0,
	0, 0, 280, 281, 0, 282, 283, 284, 285, 286,
	287, 621, 622, 0, 288, 623, 289, 624, 0, 625,
	290, 291, 292, 293, 294, 295, 0, 0, 0, 296,
	626, 627, 628, 0, 297, 298, 629, 0, 0, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 0, 321, 322,
	323, 0, 0, 0, 0, 0, 0, 0, 324, 325,
	326, 327, 328, 0, 329, 630, 631, 0, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 340, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 632, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 633, 634, 360, 0, 0,
	0, 0, 0, 0, 0, 361, 362, 363, 635, 0,
	0, 0, 364, 0, 365, 366, 0, 0, 0, 367,
	368, 636, 637, 369, 370, 371, 372, 373, 374, 375,
	376, 377, 0, 378, 638, 0, 639, 379, 0, 380,
	381, 382, 383, 384, 640, 641, 642, 463, 0, 385,
	386, 0, 387, 388, 389, 390, 391, 0, 0, 0,
	0, 392, 393, 394, 396, 0, 0, 395, 643, 644,
	0, 645, 0, 397, 398, 0, 646, 0, 399, 400,
	401, 0, 402, 0, 0, 0, 403, 404, 405, 406,
	407, 408, 0, 409, 411, 410, 0, 412, 647, 0,
	413, 414, 0, 0, 415, 0, 0, 0, 416, 417,
	420, 0, 0, 418, 419, 421, 422, 0, 423, 424,
	426, 429, 425, 427, 428, 430, 443, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 445,
	0, 444, 0, 446, 447, 448, 453, 455, 456, 451,
	452, 454, 457, 458, 450, 0, 459, 449, 0, 0,
	0, 460, 461, 0, 648, 462, 649, 464, 465, 0,
	0, 466, 0, 0, 0, 468, 469, 470, 0, 0,
	471, 472, 650, 0, 473, 0, 651, 474, 475, 467,
	476, 477, 478, 479, 480, 481, 482, 483, 0, 484,
	485, 652, 486, 487, 488, 653, 489, 490, 491, 654,
	492, 655, 493, 494, 0, 495, 496, 0, 497, 498,
	499, 500, 501, 502, 503, 656, 504, 506, 505, 507,
	0, 508, 0, 509, 510, 511, 0, 0, 0, 0,
	512, 0, 514, 515, 516, 517, 513, 518, 519, 520,
	521, 0, 522, 523, 524, 0, 525, 526, 527, 528,
	657, 529, 0, 530, 531, 537, 538, 539, 532, 533,
	540, 541, 542, 543, 544, 230, 546, 547, 545, 548,
	549, 550, 0, 551, 552, 534, 535, 553, 554, 0,
	555, 556, 557, 558, 559, 560, 561, 658, 0, 562,
	0, 563, 564, 565, 567, 536, 568, 573, 574, 659,
	569, 570, 571, 572, 660, 576, 577, 0, 578, 579,
	0, 575, 566, 232, 580, 581, 582, 583, 584, 585,
	586, 354, 587, 0, 588, 661, 662, 663, 664, 0,
	597, 0, 589, 590, 591, 665, 592, 666, 0, 593,
	594, 595, 596, 0, 598, 599, 0, 0, 600, 601,
	602, 604, 605, 603, 606, 0, 607, 0, 0, 608,
	609, 610, 1585, 668, 669, 0, 612, 611, 613, 670,
	265, 614, 0, 0, 0, 224, 615, 616, 671, 617,
	618, 619, 0, 0, 225, 0, 0, 271, 273, 272,
	274, 275, 276, 277, 0, 278, 279, 0, 0, 0,
	0, 0, 620, 0, 0, 0, 186, 280, 281, 0,
	282, 283, 284, 285, 286, 287, 621, 622, 0, 288,
	623, 289, 624, 0, 625, 290, 291, 292, 293, 294,
	295, 0, 0, 0, 296, 626, 627, 628, 0, 297,
	298, 629, 0, 0, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 0, 321, 322, 323, 0, 0, 0, 0,
	0, 0, 0, 324, 325, 326, 327, 328, 0, 329,
	630, 631, 0, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 340, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 632,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	633, 634, 360, 0, 268, 0, 0, 0, 0, 0,
	361, 362, 363, 635, 0, 0, 0, 364, 0, 365,
	366, 0, 0, 0, 367, 368, 636, 637, 369, 370,
	371, 372, 373, 374, 375, 376, 377, 0, 378, 638,
	0, 639, 379, 0, 380, 381, 382, 383, 384, 640,
	641, 642, 463, 0, 385, 386, 0, 387, 388, 389,
	390, 391, 0, 0, 0, 269, 392, 393, 394, 396,
	0, 0, 395, 643, 644, 0, 645, 0, 397, 398,
	0, 646, 0, 399, 400, 401, 0, 402, 0, 0,
	0, 403, 404, 405, 406, 407, 408, 0, 409, 411,
	410, 0, 412, 647, 0, 413, 414, 0, 0, 415,
	0, 0, 0, 416, 417, 420, 0, 0, 418, 419,
	421, 422, 0, 423, 424, 426, 429, 425, 427, 428,
	430, 443, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 442, 445, 0, 444, 0, 446, 447,
	448, 453, 455, 456, 451, 452, 454, 457, 458, 450,
	0, 459, 449, 0, 270, 0, 460, 461, 0, 648,
	462, 649, 464, 465, 0, 0, 466, 0, 0, 0,
	468, 469, 470, 0, 0, 471, 472, 650, 0, 473,
	0, 651, 474, 475, 467, 476, 477, 478, 479, 480,
	481, 482, 483, 0, 484, 485, 652, 486, 487, 488,
	653, 489, 490, 491, 654, 492, 655, 493, 494, 0,
	495, 496, 0, 497, 498, 499, 500, 501, 502, 503,
	656, 504, 506, 505, 507, 0, 508, 0, 509, 510,
	511, 0, 0, 0, 0, 512, 0, 514, 515, 516,
	517, 513, 518, 519, 520, 521, 0, 522, 523, 524,
	0, 525, 526, 527, 528, 657, 529, 0, 530, 531,
	537, 538, 539, 532, 533, 540, 541, 542, 543, 544,
	0, 546, 547, 545, 548, 549, 550, 0, 551, 552,
	534, 535, 553, 554, 0, 555, 556, 557, 558, 559,
	560, 561, 658, 0, 562, 0, 563, 564, 565, 567,
	536, 568, 573, 574, 659, 569, 570, 571, 572, 660,
	576, 577, 0, 578, 579, 0, 575, 566, 0, 580,
	581, 582, 583, 584, 585, 586, 354, 587, 0, 588,
	661, 662, 663, 664, 0, 597, 0, 589, 590, 591,
	665, 592, 666, 0, 593, 594, 595, 596, 0, 598,
	599, 0, 0, 600, 601, 602, 604, 605, 603, 606,
	0, 607, 0, 0, 608, 609, 610, 667, 668, 669,
	0, 612, 611, 613, 670, 0, 614, 265, 3011, 0,
	0, 615, 616, 671, 617, 618, 619, 0, 0, 0,
	0, 0, 0, 0, 271, 273, 272, 274, 275, 276,
	277, 0, 278, 279, 0, 0, 0, 0, 0, 620,
	0, 1944, 0, 0, 280, 281, 0, 282, 283, 284,
	285, 286, 287, 621, 622, 0, 288, 623, 289, 624,
	0, 625, 290, 291, 292, 293, 294, 295, 0, 0,
	0, 296, 626, 627, 628, 0, 297, 298, 629, 0,
	0, 0, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 0, 311, 0, 312,
	313, 314, 315, 316, 317, 0, 318, 319, 320, 0,
	321, 322, 323, 0, 0, 0, 0, 0, 0, 0,
	324, 325, 326, 327, 328, 0, 329, 630, 631, 0,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 340, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 347, 348, 632, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 633, 634, 360,
	0, 0, 0, 0, 0, 0, 0, 361, 362, 363,
	635, 0, 0, 0, 364, 0, 365, 366, 0, 0,
	0, 367, 368, 636, 637, 369, 370, 371, 372, 373,
	374, 375, 376, 377, 0, 378, 638, 0, 639, 379,
	0, 380, 381, 382, 383, 384, 640, 641, 642, 463,
	0, 385, 386, 0, 387, 388, 389, 390, 391, 0,
	0, 0, 0, 392, 393, 394, 396, 0, 0, 395,
	643, 644, 0, 645, 0, 397, 398, 0, 646, 0,
	399, 400, 401, 0, 402, 0, 0, 0, 403, 404,
	405, 406, 407, 408, 0, 409, 411, 410, 0, 412,
	647, 0, 413, 414, 0, 0, 415, 0, 0, 0,
	416, 417, 420, 0, 0, 418, 419, 421, 422, 0,
	423, 424, 426, 429, 425, 427, 428, 430, 443, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 445, 0, 444, 0, 446, 447, 448, 453, 455,
	456, 451, 452, 454, 457, 458, 450, 0, 459, 449,
	0, 0, 0, 460, 461, 0, 648, 462, 649, 464,
	465, 0, 0, 466, 0, 0, 0, 468, 469, 470,
	0, 0, 471, 472, 650, 0, 473, 0, 651, 474,
	475, 467, 476, 477, 478, 479, 480, 481, 482, 483,
	0, 484, 485, 652, 486, 487, 488, 653, 489, 490,
	491, 654, 492, 655, 493, 494, 0, 495, 496, 0,
	497, 498, 499, 500, 501, 502, 503, 656, 504, 506,
	505, 507, 0, 508, 0, 509, 510, 511, 0, 0,
	0, 0, 512, 0, 514, 515, 516, 517, 513, 518,
	519, 520, 521, 0, 522, 523, 524, 0, 525, 526,
	527, 528, 657, 529, 0, 530, 531, 537, 538, 539,
	532, 533, 540, 541, 542, 543, 544, 0, 546, 547,
	545, 548, 549, 550, 0, 551, 552, 534, 535, 553,
	554, 0, 555, 556, 557, 558, 559, 560, 561, 658,
	0, 562, 0, 563, 564, 565, 567, 536, 568, 573,
	574, 659, 569, 570, 571, 572, 660, 576, 577, 0,
	578, 579, 0, 575, 566, 0, 580, 581, 582, 583,
	584, 585, 586, 354, 587, 0, 588, 661, 662, 663,
	664, 0, 597, 0, 589, 590, 591, 665, 592, 666,
	0, 593, 594, 595, 596, 0, 598, 599, 0, 0,
	600, 601, 602, 604, 605, 603, 606, 0, 607, 0,
	0, 608, 609, 610, 667, 668, 669, 0, 612, 611,
	613, 670, 265, 614, 0, 0, 0, 0, 615, 616,
	671, 617, 618, 619, 0, 0, 0, 0, 0, 271,
	273, 272, 274, 275, 276, 277, 0, 278, 279, 0,
	0, 0, 0, 0, 620, 0, 0, 0, 4739, 280,
	281, 0, 282, 283, 284, 285, 286, 287, 621, 622,
	0, 288, 623, 289, 624, 0, 625, 290, 291, 292,
	293, 294, 295, 0, 0, 0, 296, 626, 627, 628,
	0, 297, 298, 629, 0, 0, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 0, 321, 322, 323, 0, 0,
	0, 0, 0, 0, 0, 324, 325, 326, 327, 328,
	0, 329, 630, 631, 0, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 340,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 632, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 633, 634, 360, 0, 268, 0, 0, 0,
	0, 0, 361, 362, 363, 635, 0, 0, 0, 364,
	0, 365, 366, 0, 0, 0, 367, 368, 636, 637,
	369, 370, 371, 372, 373, 374, 375, 376, 377, 0,
	378, 638, 0, 639, 379, 0, 380, 381, 382, 383,
	384, 640, 641, 642, 463, 0, 385, 386, 0, 387,
	388, 389, 390, 391, 0, 0, 0, 269, 392, 393,
	394, 396, 0, 0, 395, 643, 644, 0, 645, 0,
	397, 398, 0, 646, 0, 399, 400, 401, 0, 402,
	0, 0, 0, 403, 404, 405, 406, 407, 408, 0,
	409, 411, 410, 0, 412, 647, 0, 413, 414, 0,
	0, 415, 0, 0, 0, 416, 417, 420, 0, 0,
	418, 419, 421, 422, 0, 423, 424, 426, 429, 425,
	427, 428, 430, 443, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 445, 0, 444, 0,
	446, 447, 448, 453, 455, 456, 451, 452, 454, 457,
	458, 450, 0, 459, 449, 0, 270, 0, 460, 461,
	0, 648, 462, 649, 464, 465, 0, 0, 466, 0,
	0, 0, 468, 469, 470, 0, 0, 471, 472, 650,
	0, 473, 0, 651, 474, 475, 467, 476, 477, 478,
	479, 480, 481, 482, 483, 0, 484, 485, 652, 486,
	487, 488, 653, 489, 490, 491, 654, 492, 655, 493,
	494, 0, 495, 496, 0, 497, 498, 499, 500, 501,
	502, 503, 656, 504, 506, 505, 507, 0, 508, 0,
	509, 510, 511, 0, 0, 0, 0, 512, 0, 514,
	515, 516, 517, 513, 518, 519, 520, 521, 0, 522,
	523, 524, 0, 525, 526, 527, 528, 657, 529, 0,
	530, 531, 537, 538, 539, 532, 533, 540, 541, 542,
	543, 544, 0, 546, 547, 545, 548, 549, 550, 0,
	551, 552, 534, 535, 553, 554, 0, 555, 556, 557,
	558, 559, 560, 561, 658, 0, 562, 0, 563, 564,
	565, 567, 536, 568, 573, 574, 659, 569, 570, 571,
	572, 660, 576, 577, 0, 578, 579, 0, 575, 566,
	0, 580, 581, 582, 583, 584, 585, 586, 354, 587,
	0, 588, 661, 662, 663, 664, 0, 597, 0, 589,
	590, 591, 665, 592, 666, 0, 593, 594, 595, 596,
	0, 598, 599, 0, 0, 600, 601, 602, 604, 605,
	603, 606, 0, 607, 0, 0, 608, 609, 610, 667,
	668, 669, 265, 612, 611, 613, 670, 0, 614, 0,
	0, 0, 0, 615, 616, 671, 617, 618, 619, 271,
	273, 272, 274, 275, 276, 277, 0, 278, 279, 0,
	0, 0, 0, 0, 620, 0, 0, 0, 0, 280,
	281, 3499, 282, 283, 284, 285, 286, 287, 621, 622,
	0, 288, 623, 289, 624, 0, 625, 290, 291, 292,
	293, 294, 295, 0, 0, 0, 296, 626, 627, 628,
	0, 297, 298, 629, 0, 0, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 0, 321, 322, 323, 0, 0,
	0, 0, 0, 0, 0, 324, 325, 326, 327, 328,
	0, 329, 630, 631, 0, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 340,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 632, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 633, 634, 360, 0, 268, 0, 0, 0,
	0, 0, 361, 362, 363, 635, 0, 0, 0, 364,
	0, 365, 366, 0, 0, 0, 367, 368, 636, 637,
	369, 370, 371, 372, 373, 374, 375, 376, 377, 0,
	378, 638, 0, 639, 379, 0, 380, 381, 382, 383,
	384, 640, 641, 642, 463, 0, 385, 386, 0, 387,
	388, 389, 390, 391, 0, 0, 0, 269, 392, 393,
	394, 396, 0, 0, 395, 643, 644, 0, 645, 0,
	397, 398, 0, 646, 0, 399, 400, 401, 0, 402,
	0, 0, 0, 403, 404, 405, 406, 407, 408, 0,
	409, 411, 410, 0, 412, 647, 0, 413, 414, 0,
	0, 415, 0, 0, 0, 416, 417, 420, 0, 0,
	418, 419, 421, 422, 0, 423, 424, 426, 429, 425,
	427, 428, 430, 443, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 445, 0, 444, 0,
	446, 447, 448, 453, 455, 456, 451, 452, 454, 457,
	458, 450, 0, 459, 449, 0, 270, 0, 460, 461,
	0, 648, 462, 649, 464, 465, 0, 0, 466, 0,
	0, 0, 468, 469, 470, 0, 0, 471, 472, 650,
	0, 473, 0, 651, 474, 475, 467, 476, 477, 478,
	479, 480, 481, 482, 483, 0, 484, 485, 652, 486,
	487, 488, 653, 489, 490, 491, 654, 492, 655, 493,
	494, 0, 495, 496, 0, 497, 498, 499, 500, 501,
	502, 503, 656, 504, 506, 505, 507, 0, 508, 0,
	509, 510, 511, 0, 0, 0, 0, 512, 0, 514,
	515, 516, 517, 513, 518, 519, 520, 521, 0, 522,
	523, 524, 0, 525, 526, 527, 528, 657, 529, 0,
	530, 531, 537, 538, 539, 532, 533, 540, 541, 542,
	543, 544, 0, 546, 547, 545, 548, 549, 550, 0,
	551, 552, 534, 535, 553, 554, 0, 555, 556, 557,
	558, 559, 560, 561, 658, 0, 562, 0, 563, 564,
	565, 567, 536, 568, 573, 574, 659, 569, 570, 571,
	572, 660, 576, 577, 0, 578, 579, 0, 575, 566,
	0, 580, 581, 582, 583, 584, 585, 586, 354, 587,
	0, 588, 661, 662, 663, 664, 0, 597, 0, 589,
	590, 591, 665, 592, 666, 0, 593, 594, 595, 596,
	0, 598, 599, 0, 0, 600, 601, 602, 604, 605,
	603, 606, 0, 607, 0, 0, 608, 609, 610, 667,
	668, 669, 265, 612, 611, 613, 670, 0, 614, 0,
	0, 0, 0, 615, 616, 671, 617, 618, 619, 271,
	273, 272, 274, 275, 276, 277, 0, 278, 279, 0,
	0, 0, 0, 0, 620, 0, 0, 0, 0, 280,
	281, 1579, 282, 283, 284, 285, 286, 287, 621, 622,
	0, 288, 623, 289, 624, 0, 625, 290, 291, 292,
	293, 294, 295, 0, 0, 0, 296, 626, 627, 628,
	0, 297, 298, 629, 0, 0, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 0, 321, 322, 323, 0, 0,
	0, 0, 0, 0, 0, 324, 325, 326, 327, 328,
	0, 329, 630, 631, 0, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 340,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 632, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 633, 634, 360, 0, 0, 0, 0, 0,
	0, 0, 361, 362, 363, 635, 0, 0, 0, 364,
	0, 365, 366, 0, 0, 0, 367, 368, 636, 637,
	369, 370, 371, 372, 373, 374, 375, 376, 377, 0,
	378, 638, 0, 639, 379, 0, 380, 381, 382, 383,
	384, 640, 641, 642, 463, 0, 385, 386, 0, 387,
	388, 389, 390, 391, 0, 0, 0, 0, 392, 393,
	394, 396, 0, 0, 395, 643, 644, 0, 645, 0,
	397, 398, 0, 646, 0, 399, 400, 401, 0, 402,
	0, 0, 0, 403, 404, 405, 406, 407, 408, 0,
	409, 411, 410, 0, 412, 647, 0, 413, 414, 0,
	0, 415, 0, 0, 0, 416, 417, 420, 0, 0,
	418, 419, 421, 422, 0, 423, 424, 426, 429, 425,
	427, 428, 430, 443, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 445, 0, 444, 0,
	446, 447, 448, 453, 455, 456, 451, 452, 454, 457,
	458, 450, 0, 459, 449, 0, 0, 0, 460, 461,
	0, 648, 462, 649, 464, 465, 0, 0, 466, 0,
	0, 0, 468, 469, 470, 0, 0, 471, 472, 650,
	0, 473, 0, 651, 474, 475, 467, 476, 477, 478,
	479, 480, 481, 482, 483, 0, 484, 485, 652, 486,
	487, 488, 653, 489, 490, 491, 654, 492, 655, 493,
	494, 0, 495, 496, 0, 497, 498, 499, 500, 501,
	502, 503, 656, 504, 506, 505, 507, 0, 508, 0,
	509, 510, 511, 0, 0, 0, 0, 512, 0, 514,
	515, 516, 517, 513, 518, 519, 520, 521, 0, 522,
	523, 524, 0, 525, 526, 527, 528, 657, 529, 0,
	530, 531, 537, 538, 539, 532, 533, 540, 541, 542,
	543, 544, 0, 546, 547, 545, 548, 549, 550, 0,
	551, 552, 534, 535, 553, 554, 0, 555, 556, 557,
	558, 559, 560, 561, 658, 0, 562, 0, 563, 564,
	565, 567, 536, 568, 573, 574, 659, 569, 570, 571,
	572, 660, 576, 577, 0, 578, 579, 0, 575, 566,
	0, 580, 581, 582, 583, 584, 585, 586, 354, 587,
	0, 588, 661, 662, 663, 664, 0, 597, 0, 589,
	590, 591, 665, 592, 666, 0, 593, 594, 595, 596,
	0, 598, 599, 0, 0, 600, 601, 602, 604, 605,
	603, 606, 0, 607, 0, 0, 608, 609, 610, 667,
	668, 669, 0, 612, 611, 613, 670, 265, 614, 0,
	0, 0, 0, 615, 616, 671, 617, 618, 619, 0,
	0, 0, 0, 0, 271, 273, 272, 274, 275, 276,
	277, 0, 278, 279, 0, 0, 0, 0, 0, 620,
	0, 0, 0, 2999, 280, 281, 0, 282, 283, 284,
	285, 286, 287, 621, 622, 0, 288, 623, 289, 624,
	0, 625, 290, 291, 292, 293, 294, 295, 0, 0,
	0, 296, 626, 627, 628, 0, 297, 298, 629, 0,
	0, 0, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 0, 311, 0, 312,
	313, 314, 315, 316, 317, 0, 318, 319, 320, 0,
	321, 322, 323, 0, 0, 0, 0, 0, 0, 0,
	324, 325, 326, 327, 328, 0, 329, 630, 631, 0,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 340, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 347, 348, 632, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 633, 634, 360,
	0, 0, 0, 0, 0, 0, 0, 361, 362, 363,
	635, 0, 0, 0, 364, 0, 365, 366, 0, 0,
	0, 367, 368, 636, 637, 369, 370, 371, 372, 373,
	374, 375, 376, 377, 0, 378, 638, 0, 639, 379,
	0, 380, 381, 382, 383, 384, 640, 641, 642, 463,
	0, 385, 386, 0, 387, 388, 389, 390, 391, 0,
	0, 0, 0, 392, 393, 394, 396, 0, 0, 395,
	643, 644, 0, 645, 0, 397, 398, 0, 646, 0,
	399, 400, 401, 0, 402, 0, 0, 0, 403, 404,
	405, 406, 407, 408, 0, 409, 411, 410, 0, 412,
	647, 0, 413, 414, 0, 0, 415, 0, 0, 0,
	416, 417, 420, 0, 0, 418, 419, 421, 422, 0,
	423, 424, 426, 429, 425, 427, 428, 430, 443, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 445, 0, 444, 0, 446, 447, 448, 453, 455,
	456, 451, 452, 454, 457, 458, 450, 0, 459, 449,
	0, 0, 0, 460, 461, 0, 648, 462, 649, 464,
	465, 0, 0, 466, 0, 0, 0, 468, 469, 470,
	0, 0, 471, 472, 650, 0, 473, 0, 651, 474,
	475, 467, 476, 477, 478, 479, 480, 481, 482, 483,
	0, 484, 485, 652, 486, 487, 488, 653, 489, 490,
	491, 654, 492, 655, 493, 494, 0, 495, 496, 0,
	497, 498, 499, 500, 501, 502, 503, 656, 504, 506,
	505, 507, 0, 508, 0, 509, 510, 511, 0, 0,
	0, 0, 512, 0, 514, 515, 516, 517, 513, 518,
	519, 520, 521, 0, 522, 523, 524, 0, 525, 526,
	527, 528, 657, 529, 0, 530, 531, 537, 538, 539,
	532, 533, 540, 541, 542, 543, 544, 0, 546, 547,
	545, 548, 549, 550, 0, 551, 552, 534, 535, 553,
	554, 0, 555, 556, 557, 558, 559, 560, 561, 658,
	0, 562, 0, 563, 564, 565, 567, 536, 568, 573,
	574, 659, 569, 570, 571, 572, 660, 576, 577, 0,
	578, 579, 0, 575, 566, 0, 580, 581, 582, 583,
	584, 585, 586, 354, 587, 0, 588, 661, 662, 663,
	664, 0, 597, 0, 589, 590, 591, 665, 592, 666,
	0, 593, 594, 595, 596, 0, 598, 599, 0, 0,
	600, 601, 602, 604, 605, 603, 606, 0, 607, 0,
	0, 608, 609, 610, 667, 668, 669, 0, 612, 611,
	613, 670, 265, 614, 0, 0, 0, 0, 615, 616,
	671, 617, 618, 619, 0, 0, 0, 0, 0, 271,
	273, 272, 274, 275, 276, 277, 0, 278, 279, 0,
	0, 0, 0, 0, 620, 0, 0, 0, 3657, 280,
	281, 0, 282, 283, 284, 285, 286, 287, 621, 622,
	0, 288, 623, 289, 624, 0, 625, 290, 291, 292,
	293, 294, 295, 0, 0, 0, 296, 626, 627, 628,
	0, 297, 298, 629, 0, 0, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 0, 321, 322, 323, 0, 0,
	0, 0, 0, 0, 0, 324, 325, 326, 327, 328,
	0, 329, 630, 631, 0, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 340,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 632, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 633, 634, 360, 0, 0, 0, 0, 0,
	0, 0, 361, 362, 363, 635, 0, 0, 0, 364,
	0, 365, 366, 0, 0, 0, 367, 368, 636, 637,
	369, 370, 371, 372, 373, 374, 375, 376, 377, 0,
	378, 638, 0, 639, 379, 0, 380, 381, 382, 383,
	384, 640, 641, 642, 463, 0, 385, 386, 0, 387,
	388, 389, 390, 391, 0, 0, 0, 0, 392, 393,
	394, 396, 0, 0, 395, 643, 644, 0, 645, 0,
	397, 398, 0, 646, 0, 399, 400, 401, 0, 402,
	0, 0, 0, 403, 404, 405, 406, 407, 408, 0,
	409, 411, 410, 0, 412, 647, 0, 413, 414, 0,
	0, 415, 0, 0, 0, 416, 417, 420, 0, 0,
	418, 419, 421, 422, 0, 423, 424, 426, 429, 425,
	427, 428, 430, 443, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 445, 0, 444, 0,
	446, 447, 448, 453, 455, 456, 451, 452, 454, 457,
	458, 450, 0, 459, 449, 0, 0, 0, 460, 461,
	0, 648, 462, 649, 464, 465, 0, 0, 466, 0,
	0, 0, 468, 469, 470, 0, 0, 471, 472, 650,
	0, 473, 0, 651, 474, 475, 467, 476, 477, 478,
	479, 480, 481, 482, 483, 0, 484, 485, 652, 486,
	487, 488, 653, 489, 490, 491, 654, 492, 655, 493,
	494, 0, 495, 496, 0, 497, 498, 499, 500, 501,
	502, 503, 656, 504, 506, 505, 507, 0, 508, 0,
	509, 510, 511, 0, 0, 0, 0, 512, 0, 514,
	515, 516, 517, 513, 518, 519, 520, 521, 0, 522,
	523, 524, 0, 525, 526, 527, 528, 657, 529, 0,
	530, 531, 537, 538, 539, 532, 533, 540, 541, 542,
	543, 544, 0, 546, 547, 545, 548, 549, 550, 0,
	551, 552, 534, 535, 553, 554, 0, 555, 556, 557,
	558, 559, 560, 561, 658, 0, 562, 0, 563, 564,
	565, 567, 536, 568, 573, 574, 659, 569, 570, 571,
	572, 660, 576, 577, 0, 578, 579, 0, 575, 566,
	0, 580, 581, 582, 583, 584, 585, 586, 354, 587,
	0, 588, 661, 662, 663, 664, 0, 597, 0, 589,
	590, 591, 665, 592, 666, 0, 593, 594, 595, 596,
	0, 598, 599, 0, 0, 600, 601, 602, 604, 605,
	603, 606, 0, 607, 0, 0, 608, 609, 610, 667,
	668, 669, 0, 612, 611, 613, 670, 889, 614, 794,
	0, 0, 0, 615, 616, 671, 617, 618, 619, 0,
	0, 0, 0, 0, 0, 0, 271, 273, 272, 274,
	275, 276, 277, 0, 278, 279, 0, 0, 0, 0,
	0, 620, 0, 2263, 0, 0, 280, 281, 0, 282,
	283, 284, 285, 286, 287, 621, 622, 0, 288, 623,
	289, 624, 0, 625, 290, 291, 292, 293, 294, 295,
	0, 0, 0, 296, 626, 627, 628, 0, 297, 298,
	629, 0, 0, 0, 299, 300, 301, 302, 303, 304,
	305, 0, 0, 307, 308, 309, 306, 310, 0, 311,
	0, 312, 313, 314, 315, 316, 317, 0, 318, 319,
	320, 0, 321, 322, 323, 0, 0, 0, 0, 0,
	0, 0, 324, 325, 326, 801, 328, 0, 329, 630,
	631, 0, 333, 330, 331, 0, 334, 332, 335, 0,
	336, 337, 338, 0, 0, 339, 340, 341, 0, 342,
	343, 0, 344, 345, 346, 0, 347, 348, 632, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 633,
	634, 360, 0, 268, 0, 0, 0, 0, 0, 361,
	362, 363, 635, 0, 0, 0, 364, 0, 365, 366,
	0, 887, 0, 367, 368, 636, 637, 369, 370, 371,
	372, 373, 374, 375, 376, 377, 0, 378, 638, 0,
	639, 379, 0, 380, 381, 382, 383, 384, 640, 641,
	642, 463, 0, 385, 386, 0, 387, 388, 389, 390,
	391, 0, 0, 0, 269, 392, 393, 394, 396, 0,
	0, 395, 643, 644, 0, 645, 0, 397, 398, 0,
	646, 0, 399, 400, 401, 0, 402, 0, 0, 0,
	403, 404, 405, 406, 407, 408, 0, 409, 411, 410,
	0, 412, 647, 0, 413, 414, 0, 0, 415, 0,
	0, 0, 416, 417, 420, 0, 0, 418, 419, 421,
	422, 0, 423, 424, 426, 429, 425, 427, 428, 430,
	443, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 445, 0, 444, 0, 446, 447, 448,
	453, 455, 456, 451, 452, 454, 457, 458, 450, 0,
	459, 449, 0, 270, 0, 460, 461, 0, 648, 462,
	649, 464, 465, 0, 0, 466, 0, 0, 0, 468,
	469, 470, 0, 0, 471, 472, 650, 0, 473, 0,
	651, 474, 475, 467, 476, 477, 478, 479, 480, 481,
	482, 483, 0, 484, 485, 652, 486, 487, 488, 653,
	489, 490, 491, 654, 492, 655, 493, 494, 0, 495,
	496, 0, 497, 498, 499, 500, 501, 502, 503, 656,
	504, 506, 505, 507, 0, 508, 0, 509, 510, 511,
	0, 0, 0, 0, 512, 0, 514, 515, 516, 517,
	513, 518, 519, 520, 521, 0, 522, 523, 524, 0,
	525, 526, 527, 528, 657, 529, 0, 530, 531, 537,
	538, 539, 532, 533, 540, 541, 542, 543, 544, 0,
	546, 547, 545, 548, 549, 550, 0, 551, 552, 534,
	535, 553, 554, 0, 555, 556, 557, 558, 559, 560,
	561, 658, 0, 562, 0, 563, 564, 565, 567, 536,
	568, 573, 574, 659, 569, 570, 571, 572, 660, 576,
	577, 0, 578, 579, 0, 575, 566, 799, 580, 581,
	582, 583, 584, 800, 586, 354, 587, 0, 588, 661,
	662, 663, 664, 0, 597, 0, 589, 590, 591, 665,
	592, 666, 0, 593, 594, 595, 596, 0, 598, 599,
	0, 0, 600, 601, 602, 604, 605, 603, 606, 0,
	607, 0, 0, 608, 609, 610, 667, 668, 669, 794,
	612, 611, 613, 670, 0, 614, 0, 0, 0, 0,
	615, 616, 671, 617, 618, 619, 271, 273, 272, 274,
	275, 276, 277, 2011, 278, 279, 0, 0, 0, 0,
	0, 620, 0, 804, 0, 0, 280, 281, 0, 282,
	283, 284, 285, 286, 287, 621, 622, 0, 288, 623,
	289, 624, 0, 625, 290, 291, 292, 293, 294, 295,
	0, 0, 0, 296, 626, 627, 628, 0, 297, 298,
	629, 0, 0, 0, 299, 300, 301, 302, 303, 304,
	305, 0, 0, 307, 308, 309, 306, 310, 0, 311,
	0, 312, 313, 314, 315, 316, 317, 0, 318, 319,
	320, 0, 321, 322, 323, 0, 0, 0, 0, 0,
	0, 0, 324, 325, 326, 801, 328, 0, 329, 630,
	631, 0, 333, 330, 331, 0, 334, 332, 335, 0,
	336, 337, 338, 0, 0, 339, 340, 341, 0, 342,
	343, 0, 344, 345, 346, 0, 347, 348, 632, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 633,
	634, 360, 0, 268, 0, 0, 0, 0, 0, 361,
	362, 363, 635, 0, 0, 0, 364, 0, 365, 366,
	0, 0, 0, 367, 368, 636, 637, 369, 370, 371,
	372, 373, 374, 375, 376, 377, 0, 378, 638, 0,
	639, 379, 0, 380, 381, 382, 383, 384, 640, 641,
	642, 463, 0, 385, 386, 0, 387, 388, 389, 390,
	391, 0, 0, 0, 269, 392, 393, 394, 396, 0,
	0, 395, 643, 644, 0, 645, 0, 397, 398, 0,
	646, 0, 399, 400, 401, 0, 402, 0, 0, 0,
	403, 404, 405, 406, 407, 408, 0, 409, 411, 410,
	0, 412, 647, 0, 413, 414, 0, 0, 415, 0,
	0, 0, 416, 417, 420, 0, 0, 418, 419, 421,
	422, 0, 423, 424, 426, 429, 425, 427, 428, 430,
	443, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 445, 0, 444, 0, 446, 447, 448,
	453, 455, 456, 451, 452, 454, 457, 458, 450, 0,
	459, 449, 0, 270, 0, 460, 461, 0, 648, 462,
	649, 464, 465, 0, 0, 466, 0, 0, 0, 468,
	469, 470, 0, 0, 471, 472, 650, 0, 473, 0,
	651, 474, 475, 467, 476, 477, 478, 479, 480, 481,
	482, 483, 0, 484, 485, 652, 486, 487, 488, 653,
	489, 490, 491, 654, 492, 655, 493, 494, 0, 495,
	496, 0, 497, 498, 499, 500, 501, 502, 503, 656,
	504, 506, 505, 507, 0, 508, 0, 509, 510, 511,
	0, 0, 0, 0, 512, 0, 514, 515, 516, 517,
	513, 518, 519, 520, 521, 0, 522, 523, 524, 0,
	525, 526, 527, 528, 657, 529, 0, 530, 531, 537,
	538, 539, 532, 533, 2010, 541, 542, 543, 544, 0,
	2012, 547, 545, 548, 549, 550, 0, 551, 552, 534,
	535, 553, 554, 0, 555, 556, 557, 558, 559, 560,
	561, 658, 0, 562, 0, 563, 564, 565, 567, 536,
	568, 573, 574, 659, 569, 570, 571, 572, 660, 576,
	577, 0, 578, 579, 0, 575, 566, 799, 580, 581,
	582, 583, 584, 800, 586, 354, 587, 0, 588, 661,
	662, 663, 664, 0, 597, 0, 589, 590, 591, 665,
	592, 666, 0, 593, 594, 2009, 596, 0, 598, 599,
	0, 0, 600, 601, 602, 604, 605, 603, 606, 0,
	607, 0, 0, 608, 609, 610, 667, 668, 669, 794,
	612, 611, 613, 670, 0, 614, 0, 0, 0, 0,
	615, 616, 671, 617, 618, 619, 271, 273, 272, 274,
	275, 276, 277, 1962, 278, 279, 0, 0, 0, 0,
	0, 620, 0, 804, 0, 0, 280, 281, 0, 282,
	283, 284, 285, 286, 287, 621, 622, 0, 288, 623,
	289, 624, 0, 625, 290, 291, 292, 293, 294, 295,
	0, 0, 0, 296, 626, 627, 628, 0, 297, 298,
	629, 0, 0, 0, 299, 300, 301, 302, 303, 304,
	305, 0, 0, 307, 308, 309, 306, 310, 0, 311,
	0, 312, 313, 314, 315, 316, 317, 0, 318, 319,
	320, 0, 321, 322, 323, 0, 0, 0, 0, 0,
	0, 0, 324, 325, 326, 801, 328, 0, 329, 630,
	631, 0, 333, 330, 331, 0, 334, 332, 335, 0,
	336, 337, 338, 0, 0, 339, 340, 341, 0, 342,
	343, 0, 344, 345, 346, 0, 347, 348, 632, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 633,
	634, 360, 0, 268, 0, 0, 0, 0, 0, 361,
	362, 363, 635, 0, 0, 0, 364, 0, 365, 366,
	0, 0, 0, 367, 368, 636, 637, 369, 370, 371,
	372, 373, 374, 375, 376, 377, 0, 378, 638, 0,
	639, 379, 0, 380, 381, 382, 383, 384, 640, 641,
	642, 463, 0, 385, 386, 0, 387, 388, 389, 390,
	391, 0, 0, 0, 269, 392, 393, 394, 396, 0,
	0, 395, 643, 644, 0, 645, 0, 397, 398, 0,
	646, 0, 399, 400, 401, 0, 402, 0, 0, 0,
	403, 404, 405, 406, 407, 408, 0, 409, 411, 410,
	0, 412, 647, 0, 413, 414, 0, 0, 415, 0,
	0, 0, 416, 417, 420, 0, 0, 418, 419, 421,
	422, 0, 423, 424, 426, 429, 425, 427, 428, 430,
	443, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 445, 0, 444, 0, 446, 447, 448,
	453, 455, 456, 451, 452, 454, 457, 458, 450, 0,
	459, 449, 0, 270, 0, 460, 461, 0, 648, 462,
	649, 464, 465, 0, 0, 466, 0, 0, 0, 468,
	469, 470, 0, 0, 471, 472, 650, 0, 473, 0,
	651, 474, 475, 467, 476, 477, 478, 479, 480, 481,
	482, 483, 0, 484, 485, 652, 486, 487, 488, 653,
	489, 490, 491, 654, 492, 655, 493, 494, 0, 495,
	496, 0, 497, 498, 499, 500, 501, 502, 503, 656,
	504, 506, 505, 507, 0, 508, 0, 509, 510, 511,
	0, 0, 0, 0, 512, 0, 514, 515, 516, 517,
	513, 518, 519, 520, 521, 0, 522, 523, 524, 0,
	525, 526, 527, 528, 657, 529, 0, 530, 531, 537,
	538, 539, 532, 533, 1961, 541, 542, 543, 544, 0,
	1963, 547, 545, 548, 549, 550, 0, 551, 552, 534,
	535, 553, 554, 0, 555, 556, 557, 558, 559, 560,
	561, 658, 0, 562, 0, 563, 564, 565, 567, 536,
	568, 573, 574, 659, 569, 570, 571, 572, 660, 576,
	577, 0, 578, 579, 0, 575, 566, 799, 580, 581,
	582, 583, 584, 800, 586, 354, 587, 0, 588, 661,
	662, 663, 664, 0, 597, 0, 589, 590, 591, 665,
	592, 666, 0, 593, 594, 1960, 596, 0, 598, 599,
	0, 0, 600, 601, 602, 604, 605, 603, 606, 0,
	607, 0, 0, 608, 609, 610, 667, 668, 669, 0,
	612, 611, 613, 670, 792, 614, 794, 0, 0, 0,
	615, 616, 671, 617, 618, 619, 0, 0, 0, 0,
	0, 0, 0, 271, 273, 272, 274, 275, 276, 277,
	0, 278, 279, 804, 0, 0, 0, 0, 620, 0,
	0, 0, 0, 280, 281, 0, 282, 283, 284, 285,
	286, 287, 621, 622, 0, 288, 623, 289, 624, 0,
	625, 290, 291, 292, 293, 294, 295, 0, 0, 0,
	296, 626, 627, 628, 0, 297, 298, 629, 0, 0,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 0, 321,
	322, 323, 0, 0, 0, 0, 0, 0, 0, 324,
	325, 326, 801, 328, 0, 329, 630, 631, 0, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 340, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 632, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 633, 634, 360, 0,
	268, 0, 0, 0, 0, 0, 361, 362, 363, 635,
	0, 0, 0, 364, 0, 365, 366, 0, 0, 0,
	367, 368, 636, 637, 369, 370, 371, 372, 373, 374,
	375, 376, 377, 0, 378, 638, 0, 639, 379, 0,
	380, 381, 382, 383, 384, 640, 641, 642, 463, 0,
	385, 386, 0, 387, 388, 389, 390, 391, 0, 0,
	0, 269, 392, 393, 394, 396, 0, 0, 395, 643,
	644, 0, 645, 0, 397, 398, 0, 646, 0, 399,
	400, 401, 0, 402, 0, 0, 0, 403, 404, 405,
	406, 407, 408, 0, 409, 411, 410, 0, 412, 647,
	0, 413, 414, 0, 0, 415, 0, 0, 0, 416,
	417, 420, 0, 0, 418, 419, 421, 422, 0, 423,
	424, 426, 429, 425, 427, 428, 430, 443, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	445, 0, 444, 0, 446, 447, 448, 453, 455, 456,
	451, 452, 454, 457, 458, 450, 0, 459, 449, 0,
	270, 0, 460, 461, 0, 648, 462, 649, 464, 465,
	0, 0, 466, 0, 0, 0, 468, 469, 470, 0,
	0, 471, 472, 650, 0, 473, 0, 651, 474, 475,
	467, 476, 477, 478, 479, 480, 481, 482, 483, 0,
	484, 485, 652, 486, 487, 488, 653, 489, 490, 491,
	654, 492, 655, 493, 494, 0, 495, 496, 0, 497,
	498, 499, 500, 501, 502, 503, 656, 504, 506, 505,
	507, 0, 508, 0, 509, 510, 511, 0, 0, 0,
	0, 512, 0, 514, 515, 516, 517, 513, 518, 519,
	520, 521, 0, 522, 523, 524, 0, 525, 526, 527,
	528, 657, 529, 0, 530, 531, 537, 538, 539, 532,
	533, 540, 541, 542, 543, 544, 0, 546, 547, 545,
	548, 549, 550, 0, 551, 552, 534, 535, 553, 554,
	0, 555, 556, 557, 558, 559, 560, 561, 658, 0,
	562, 0, 563, 564, 565, 567, 536, 568, 573, 574,
	659, 569, 570, 571, 572, 660, 576, 577, 0, 578,
	579, 0, 575, 566, 799, 580, 581, 582, 583, 584,
	800, 586, 354, 587, 0, 588, 661, 662, 663, 664,
	0, 597, 0, 589, 590, 591, 665, 592, 666, 0,
	593, 594, 595, 596, 0, 598, 599, 0, 0, 600,
	601, 602, 604, 605, 603, 606, 0, 607, 0, 0,
	608, 609, 610, 667, 668, 669, 1984, 612, 611, 613,
	670, 0, 614, 0, 0, 0, 0, 615, 616, 671,
	617, 618, 619, 271, 273, 272, 274, 275, 276, 277,
	0, 278, 279, 0, 0, 0, 0, 0, 0, 0,
	804, 0, 0, 280, 281, 1169, 282, 283, 284, 285,
	286, 287, 0, 1990, 0, 288, 1980, 289, 1996, 0,
	2003, 290, 291, 292, 293, 294, 295, 0, 0, 0,
	296, 2006, 2007, 0, 0, 297, 298, 0, 0, 1313,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 1170, 321,
	322, 323, 0, 0, 0, 0, 0, 0, 0, 324,
	325, 326, 327, 328, 1152, 329, 1994, 1993, 0, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 1137, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 0, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 0, 0, 360, 0,
	0, 0, 0, 0, 0, 0, 361, 362, 363, 1992,
	0, 0, 0, 364, 0, 365, 366, 0, 0, 1171,
	367, 368, 2001, 2002, 369, 370, 371, 372, 373, 374,
	375, 376, 377, 0, 378, 0, 0, 0, 379, 0,
	380, 381, 382, 383, 384, 0, 0, 0, 463, 1173,
	385, 386, 0, 387, 388, 389, 390, 391, 0, 0,
	0, 0, 392, 393, 394, 396, 0, 1172, 395, 1987,
	1988, 0, 1983, 0, 397, 398, 1174, 0, 1175, 399,
	400, 401, 1176, 402, 0, 0, 0, 403, 404, 405,
	406, 407, 408, 0, 409, 411, 410, 0, 412, 0,
	1177, 413, 414, 1178, 0, 415, 0, 0, 0, 416,
	417, 420, 0, 0, 418, 419, 421, 422, 0, 423,
	424, 426, 429, 425, 427, 428, 430, 443, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	445, 0, 444, 1179, 446, 447, 448, 453, 455, 456,
	451, 452, 454, 457, 458, 450, 1180, 459, 449, 0,
	0, 1181, 460, 461, 0, 0, 462, 1995, 464, 465,
	0, 0, 466, 0, 0, 0, 468, 469, 470, 0,
	0, 471, 472, 0, 1182, 473, 1183, 0, 474, 475,
	467, 476, 477, 478, 479, 480, 481, 482, 483, 0,
	484, 485, 1977, 486, 487, 488, 1978, 489, 490, 491,
	0, 492, 0, 493, 494, 0, 495, 496, 0, 497,
	498, 499, 500, 501, 502, 503, 1991, 504, 506, 505,
	507, 0, 508, 0, 509, 510, 511, 0, 0, 0,
	0, 512, 0, 514, 515, 516, 517, 513, 518, 519,
	520, 521, 0, 522, 523, 524, 1184, 525, 526, 527,
	528, 0, 529, 0, 530, 531, 537, 538, 539, 532,
	533, 540, 541, 542, 543, 544, 0, 546, 547, 545,
	548, 549, 550, 0, 551, 552, 534, 535, 553, 554,
	1185, 555, 556, 557, 558, 559, 560, 561, 1989, 0,
	562, 0, 563, 564, 565, 567, 536, 568, 573, 574,
	2005, 569, 570, 571, 572, 0, 576, 577, 0, 578,
	579, 0, 575, 566, 0, 580, 581, 582, 583, 584,
	585, 586, 354, 587, 0, 588, 1997, 1998, 1999, 2000,
	0, 597, 0, 589, 590, 591, 0, 592, 0, 0,
	593, 594, 595, 596, 0, 598, 599, 0, 0, 600,
	601, 602, 604, 605, 603, 606, 0, 607, 0, 0,
	608, 609, 610, 0, 1981, 2004, 0, 612, 611, 613,
	0, 0, 614, 0, 0, 794, 0, 615, 616, 0,
	617, 618, 619, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 271, 273, 272, 274, 275, 276, 277, 0,
	278, 279, 0, 0, 0, 0, 0, 620, 0, 0,
	0, 1971, 280, 281, 0, 282, 283, 284, 285, 286,
	287, 621, 622, 0, 288, 623, 289, 624, 0, 625,
	290, 291, 292, 293, 294, 295, 0, 0, 0, 296,
	626, 627, 628, 0, 297, 298, 629, 0, 0, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 0, 321, 322,
	323, 0, 0, 0, 0, 0, 0, 0, 324, 325,
	326, 801, 328, 0, 329, 630, 631, 0, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 340, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 632, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 633, 634, 360, 0, 268,
	0, 0, 0, 0, 0, 361, 362, 363, 635, 0,
	0, 0, 364, 0, 365, 366, 0, 0, 0, 367,
	368, 636, 637, 369, 370, 371, 372, 373, 374, 375,
	376, 377, 0, 378, 638, 0, 639, 379, 0, 380,
	381, 382, 383, 384, 640, 641, 642, 463, 0, 385,
	386, 0, 387, 388, 389, 390, 391, 0, 0, 0,
	269, 392, 393, 394, 396, 0, 0, 395, 643, 644,
	0, 645, 0, 397, 398, 0, 646, 0, 399, 400,
	401, 0, 402, 0, 0, 0, 403, 404, 405, 406,
	407, 408, 0, 409, 411, 410, 0, 412, 647, 0,
	413, 414, 0, 0, 415, 0, 0, 0, 416, 417,
	420, 0, 0, 418, 419, 421, 422, 0, 423, 424,
	426, 429, 425, 427, 428, 430, 443, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 445,
	0, 444, 0, 446, 447, 448, 453, 455, 456, 451,
	452, 454, 457, 458, 450, 0, 459, 449, 0, 270,
	0, 460, 461, 0, 648, 462, 649, 464, 465, 0,
	0, 466, 0, 0, 0, 468, 469, 470, 0, 0,
	471, 472, 650, 0, 473, 0, 651, 474, 475, 467,
	476, 477, 478, 479, 480, 481, 482, 483, 0, 484,
	485, 652, 486, 487, 488, 653, 489, 490, 491, 654,
	492, 655, 493, 494, 0, 495, 496, 0, 497, 498,
	499, 500, 501, 502, 503, 656, 504, 506, 505, 507,
	0, 508, 0, 509, 510, 511, 0, 0, 0, 0,
	512, 0, 514, 515, 516, 517, 513, 518, 519, 520,
	521, 0, 522, 523, 524, 0, 525, 526, 527, 528,
	657, 529, 0, 530, 531, 537, 538, 539, 532, 533,
	540, 541, 542, 543, 544, 0, 546, 547, 545, 548,
	549, 550, 0, 551, 552, 534, 535, 553, 554, 0,
	555, 556, 557, 558, 559, 560, 561, 658, 0, 562,
	0, 563, 564, 565, 567, 536, 568, 573, 574, 659,
	569, 570, 571, 572, 660, 576, 577, 0, 578, 579,
	0, 575, 566, 799, 580, 581, 582, 583, 584, 800,
	586, 354, 587, 0, 588, 661, 662, 663, 664, 0,
	597, 0, 589, 590, 591, 665, 592, 666, 0, 593,
	594, 595, 596, 0, 598, 599, 0, 0, 600, 601,
	602, 604, 605, 603, 606, 0, 607, 0, 0, 608,
	609, 610, 667, 668, 669, 794, 612, 611, 613, 670,
	0, 614, 0, 0, 0, 0, 615, 616, 671, 617,
	618, 619, 271, 273, 272, 274, 275, 276, 277, 0,
	278, 279, 0, 0, 0, 0, 0, 620, 0, 804,
	0, 0, 280, 281, 0, 282, 283, 284, 285, 286,
	287, 621, 622, 0, 288, 623, 289, 624, 0, 625,
	290, 291, 292, 293, 294, 295, 0, 0, 0, 296,
	626, 627, 628, 0, 297, 298, 629, 0, 0, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 0, 321, 322,
	323, 0, 0, 0, 0, 0, 0, 0, 324, 325,
	326, 801, 328, 0, 329, 630, 631, 0, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 340, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 632, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 633, 634, 360, 0, 268,
	0, 0, 0, 0, 0, 361, 362, 363, 635, 0,
	0, 0, 364, 0, 365, 366, 0, 0, 0, 367,
	368, 636, 637, 369, 370, 371, 372, 373, 374, 375,
	376, 377, 0, 378, 638, 0, 639, 379, 0, 380,
	381, 382, 383, 384, 640, 641, 642, 463, 0, 385,
	386, 0, 387, 388, 389, 390, 391, 0, 0, 0,
	269, 392, 393, 394, 396, 0, 0, 395, 643, 644,
	0, 645, 0, 397, 398, 0, 646, 0, 399, 400,
	401, 0, 402, 0, 0, 0, 403, 404, 405, 406,
	407, 408, 0, 409, 411, 410, 0, 412, 647, 0,
	413, 414, 0, 0, 415, 0, 0, 0, 416, 417,
	420, 0, 0, 418, 419, 421, 422, 0, 423, 424,
	426, 429, 425, 427, 428, 430, 443, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 445,
	0, 444, 0, 446, 447, 448, 453, 455, 456, 451,
	452, 454, 457, 458, 450, 0, 459, 449, 0, 270,
	0, 460, 461, 0, 648, 462, 649, 464, 465, 0,
	0, 466, 0, 0, 0, 468, 469, 470, 0, 0,
	471, 472, 650, 0, 473, 0, 651, 474, 475, 467,
	476, 477, 478, 479, 480, 481, 482, 483, 0, 484,
	485, 652, 486, 487, 488, 653, 489, 490, 491, 654,
	492, 655, 493, 494, 0, 495, 496, 0, 497, 498,
	499, 500, 501, 502, 503, 656, 504, 506, 505, 507,
	0, 508, 0, 509, 510, 511, 0, 0, 0, 0,
	512, 0, 514, 515, 516, 517, 513, 518, 519, 520,
	521, 0, 522, 523, 524, 0, 2306, 526, 527, 528,
	657, 529, 0, 530, 531, 537, 538, 539, 532, 533,
	2307, 541, 542, 543, 544, 0, 546, 547, 545, 548,
	549, 550, 0, 551, 552, 534, 535, 553, 554, 0,
	555, 556, 557, 558, 559, 560, 561, 658, 0, 562,
	0, 563, 564, 565, 567, 536, 568, 573, 574, 659,
	569, 570, 571, 572, 660, 576, 577, 0, 578, 579,
	0, 575, 566, 799, 580, 581, 582, 583, 584, 800,
	586, 354, 587, 0, 588, 661, 662, 663, 664, 0,
	597, 0, 589, 590, 591, 665, 592, 666, 0, 593,
	594, 2308, 596, 0, 598, 599, 0, 0, 600, 601,
	602, 604, 605, 603, 606, 0, 607, 0, 0, 608,
	609, 610, 667, 668, 669, 0, 612, 611, 613, 670,
	2055, 614, 1308, 2022, 0, 0, 615, 616, 671, 617,
	618, 619, 0, 0, 0, 0, 0, 0, 0, 271,
	273, 272, 274, 275, 276, 277, 0, 278, 279, 804,
	0, 0, 0, 0, 620, 0, 0, 0, 0, 280,
	281, 1169, 282, 283, 284, 285, 286, 287, 621, 622,
	0, 288, 623, 289, 624, 0, 625, 290, 291, 292,
	293, 294, 295, 0, 0, 0, 296, 626, 627, 628,
	0, 297, 298, 629, 0, 1313, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 1170, 321, 322, 323, 0, 0,
	0, 0, 0, 0, 2019, 324, 325, 326, 327, 328,
	0, 329, 630, 631, 0, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 340,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 632, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 633, 634, 360, 0, 268, 0, 0, 0,
	0, 0, 361, 362, 363, 635, 0, 0, 0, 364,
	0, 365, 366, 0, 0, 1171, 367, 368, 636, 637,
	369, 370, 371, 372, 373, 374, 375, 376, 377, 0,
	378, 638, 0, 639, 379, 0, 380, 381, 382, 383,
	384, 640, 641, 642, 463, 1173, 385, 386, 0, 387,
	388, 389, 390, 391, 0, 0, 0, 0, 392, 393,
	394, 396, 0, 1172, 395, 643, 644, 0, 645, 0,
	397, 398, 1174, 646, 1175, 399, 400, 401, 1176, 402,
	0, 0, 0, 403, 404, 405, 406, 407, 408, 0,
	409, 411, 410, 0, 412, 647, 1177, 413, 414, 1178,
	0, 415, 0, 0, 0, 416, 417, 420, 0, 0,
	418, 419, 421, 422, 0, 423, 424, 426, 429, 425,
	427, 428, 430, 443, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 445, 0, 444, 1179,
	446, 447, 448, 453, 455, 456, 451, 452, 454, 457,
	458, 450, 1180, 459, 449, 0, 0, 1181, 460, 461,
	0, 648, 462, 649, 464, 465, 0, 0, 466, 0,
	0, 0, 468, 469, 470, 0, 0, 471, 472, 650,
	1182, 473, 1183, 651, 474, 475, 467, 476, 477, 478,
	479, 480, 481, 482, 483, 0, 484, 485, 652, 486,
	487, 488, 653, 489, 490, 491, 654, 492, 655, 493,
	494, 0, 495, 496, 0, 497, 498, 499, 500, 501,
	502, 503, 656, 504, 506, 505, 507, 0, 508, 0,
	509, 510, 511, 0, 0, 0, 0, 512, 0, 514,
	515, 516, 517, 513, 518, 519, 520, 521, 0, 522,
	523, 524, 1184, 525, 526, 527, 528, 657, 529, 0,
	530, 531, 537, 538, 539, 532, 533, 540, 541, 542,
	543, 544, 0, 546, 547, 545, 548, 549, 550, 2020,
	551, 552, 534, 535, 553, 554, 1185, 555, 556, 557,
	558, 559, 560, 561, 658, 0, 562, 0, 563, 564,
	565, 567, 536, 568, 573, 574, 659, 569, 570, 571,
	572, 660, 576, 577, 0, 578, 579, 0, 575, 566,
	0, 580, 581, 582, 583, 584, 585, 586, 354, 587,
	0, 588, 661, 662, 663, 664, 0, 597, 0, 589,
	590, 591, 665, 592, 666, 0, 593, 594, 595, 596,
	0, 598, 599, 0, 0, 600, 601, 602, 604, 605,
	603, 606, 0, 607, 0, 0, 608, 609, 610, 667,
	668, 669, 0, 612, 611, 613, 670, 2016, 614, 1308,
	2022, 0, 0, 615, 616, 671, 617, 618, 619, 0,
	0, 0, 0, 0, 0, 0, 271, 273, 272, 274,
	275, 276, 277, 0, 278, 279, 0, 0, 0, 0,
	0, 620, 0, 0, 0, 0, 280, 281, 1169, 282,
	283, 284, 285, 286, 287, 621, 622, 0, 288, 623,
	289, 624, 0, 625, 290, 291, 292, 293, 294, 295,
	0, 0, 0, 296, 626, 627, 628, 0, 297, 298,
	629, 0, 1313, 0, 299, 300, 301, 302, 303, 304,
	305, 0, 0, 307, 308, 309, 306, 310, 0, 311,
	0, 312, 313, 314, 315, 316, 317, 0, 318, 319,
	320, 1170, 321, 322, 323, 0, 0, 0, 0, 0,
	0, 2019, 324, 325, 326, 327, 328, 0, 329, 630,
	631, 0, 333, 330, 331, 0, 334, 332, 335, 0,
	336, 337, 338, 0, 0, 339, 340, 341, 0, 342,
	343, 0, 344, 345, 346, 0, 347, 348, 632, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 633,
	634, 360, 0, 268, 0, 0, 0, 0, 0, 361,
	362, 363, 635, 0, 0, 0, 364, 0, 365, 366,
	0, 0, 1171, 367, 368, 636, 637, 369, 370, 371,
	372, 373, 374, 375, 376, 377, 0, 378, 638, 0,
	639, 379, 0, 380, 381, 382, 383, 384, 640, 641,
	642, 463, 1173, 385, 386, 0, 387, 388, 389, 390,
	391, 0, 0, 0, 0, 392, 393, 394, 396, 0,
	1172, 395, 643, 644, 0, 645, 0, 397, 398, 1174,
	646, 1175, 399, 400, 401, 1176, 402, 0, 0, 0,
	403, 404, 405, 406, 407, 408, 0, 409, 411, 410,
	0, 412, 647, 1177, 413, 414, 1178, 0, 415, 0,
	0, 0, 416, 417, 420, 0, 0, 418, 419, 421,
	422, 0, 423, 424, 426, 429, 425, 427, 428, 430,
	443, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 445, 0, 444, 1179, 446, 447, 448,
	453, 455, 456, 451, 452, 454, 457, 458, 450, 1180,
	459, 449, 0, 0, 1181, 460, 461, 0, 648, 462,
	649, 464, 465, 0, 0, 466, 0, 0, 0, 468,
	469, 470, 0, 0, 471, 472, 650, 1182, 473, 1183,
	651, 474, 475, 467, 476, 477, 478, 479, 480, 481,
	482, 483, 0, 484, 485, 652, 486, 487, 488, 653,
	489, 490, 491, 654, 492, 655, 493, 494, 0, 495,
	496, 0, 497, 498, 499, 500, 501, 502, 503, 656,
	504, 506, 505, 507, 0, 508, 0, 509, 510, 511,
	0, 0, 0, 0, 512, 0, 514, 515, 516, 517,
	513, 518, 519, 520, 521, 0, 522, 523, 524, 1184,
	525, 526, 527, 528, 657, 529, 0, 530, 531, 537,
	538, 539, 532, 533, 540, 541, 542, 543, 544, 0,
	546, 547, 545, 548, 549, 550, 2020, 551, 552, 534,
	535, 553, 554, 1185, 555, 556, 557, 558, 559, 560,
	561, 658, 0, 562, 0, 563, 564, 565, 567, 536,
	568, 573, 574, 659, 569, 570, 571, 572, 660, 576,
	577, 0, 578, 579, 0, 575, 566, 0, 580, 581,
	582, 583, 584, 585, 586, 354, 587, 0, 588, 661,
	662, 663, 664, 0, 597, 0, 589, 590, 591, 665,
	592, 666, 0, 593, 594, 595, 596, 0, 598, 599,
	0, 0, 600, 601, 602, 604, 605, 603, 606, 0,
	607, 0, 0, 608, 609, 610, 667, 668, 669, 0,
	612, 611, 613, 670, 0, 614, 1308, 2022, 0, 0,
	615, 616, 671, 617, 618, 619, 0, 0, 0, 0,
	0, 0, 0, 271, 273, 272, 274, 275, 276, 277,
	0, 278, 279, 0, 0, 0, 0, 0, 620, 0,
	0, 0, 0, 280, 281, 1169, 282, 283, 284, 285,
	286, 287, 621, 622, 0, 288, 623, 289, 624, 0,
	625, 290, 291, 292, 293, 294, 295, 0, 0, 0,
	296, 626, 627, 628, 0, 297, 298, 629, 0, 1313,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 1170, 321,
	322, 323, 0, 0, 0, 0, 0, 0, 2019, 324,
	325, 326, 327, 328, 0, 329, 630, 631, 0, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 340, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 632, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 633, 634, 360, 0,
	268, 0, 0, 0, 0, 0, 361, 362, 363, 635,
	0, 0, 0, 364, 0, 365, 366, 0, 0, 1171,
	367, 368, 636, 637, 369, 370, 371, 372, 373, 374,
	375, 376, 377, 0, 378, 638, 0, 639, 379, 0,
	380, 381, 382, 383, 384, 640, 641, 642, 463, 1173,
	385, 386, 0, 387, 388, 389, 390, 391, 0, 0,
	0, 0, 392, 393, 394, 396, 0, 1172, 395, 643,
	644, 0, 645, 0, 397, 398, 1174, 646, 1175, 399,
	400, 401, 1176, 402, 0, 0, 0, 403, 404, 405,
	406, 407, 408, 0, 409, 411, 410, 0, 412, 647,
	1177, 413, 414, 1178, 0, 415, 0, 0, 0, 416,
	417, 420, 0, 0, 418, 419, 421, 422, 0, 423,
	424, 426, 429, 425, 427, 428, 430, 443, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	445, 0, 444, 1179, 446, 447, 448, 453, 455, 456,
	451, 452, 454, 457, 458, 450, 1180, 459, 449, 0,
	0, 1181, 460, 461, 0, 648, 462, 649, 464, 465,
	0, 0, 466, 0, 0, 0, 468, 469, 470, 0,
	0, 471, 472, 650, 1182, 473, 1183, 651, 474, 475,
	467, 476, 477, 478, 479, 480, 481, 482, 483, 0,
	484, 485, 652, 486, 487, 488, 653, 489, 490, 491,
	654, 492, 655, 493, 494, 0, 495, 496, 0, 497,
	498, 499, 500, 501, 502, 503, 656, 504, 506, 505,
	507, 0, 508, 0, 509, 510, 511, 0, 0, 0,
	0, 512, 0, 514, 515, 516, 517, 513, 518, 519,
	520, 521, 0, 522, 523, 524, 1184, 525, 526, 527,
	528, 657, 529, 0, 530, 531, 537, 538, 539, 532,
	533, 540, 541, 542, 543, 544, 0, 546, 547, 545,
	548, 549, 550, 2020, 551, 552, 534, 535, 553, 554,
	1185, 555, 556, 557, 558, 559, 560, 561, 658, 0,
	562, 0, 563, 564, 565, 567, 536, 568, 573, 574,
	659, 569, 570, 571, 572, 660, 576, 577, 0, 578,
	579, 0, 575, 566, 0, 580, 581, 582, 583, 584,
	585, 586, 354, 587, 0, 588, 661, 662, 663, 664,
	0, 597, 0, 589, 590, 591, 665, 592, 666, 0,
	593, 594, 595, 596, 0, 598, 599, 0, 0, 600,
	601, 602, 604, 605, 603, 606, 0, 607, 0, 0,
	608, 609, 610, 667, 668, 669, 0, 612, 611, 613,
	670, 0, 614, 0, 0, 0, 0, 615, 616, 671,
	617, 618, 619, 1308, 1307, 0, 0, 0, 0, 1305,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	271, 273, 272, 274, 275, 276, 277, 0, 278, 279,
	0, 0, 0, 0, 0, 620, 0, 0, 0, 0,
	280, 281, 1169, 282, 283, 284, 285, 286, 287, 621,
	622, 0, 288, 623, 289, 624, 0, 625, 290, 291,
	292, 293, 294, 295, 0, 0, 0, 296, 626, 627,
	628, 0, 297, 298, 629, 0, 1313, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 316,
	317, 0, 318, 319, 320, 1170, 321, 322, 323, 0,
	0, 0, 0, 0, 0, 0, 324, 325, 326, 327,
	328, 0, 329, 630, 631, 0, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	340, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 632, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 633, 634, 360, 0, 268, 0, 0,
	0, 0, 0, 361, 362, 363, 635, 0, 0, 0,
	364, 0, 365, 366, 0, 0, 1171, 367, 368, 636,
	637, 369, 370, 371, 372, 373, 374, 375, 376, 377,
	0, 378, 638, 0, 639, 379, 0, 380, 381, 382,
	383, 384, 640, 641, 642, 463, 1173, 385, 386, 0,
	387, 388, 389, 390, 391, 0, 0, 0, 0, 392,
	393, 394, 396, 0, 1172, 395, 643, 644, 0, 645,
	0, 397, 398, 1174, 646, 1175, 399, 400, 401, 1176,
	402, 0, 0, 0, 403, 404, 405, 406, 407, 408,
	0, 409, 411, 410, 0, 412, 647, 1177, 413, 414,
	1178, 0, 415, 0, 0, 0, 416, 417, 420, 0,
	0, 418, 419, 421, 422, 0, 423, 424, 426, 429,
	425, 427, 428, 430, 443, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 445, 0, 444,
	1179, 446, 447, 448, 453, 455, 456, 451, 452, 454,
	457, 458, 450, 1180, 459, 449, 0, 0, 1181, 460,
	461, 3850, 648, 462, 649, 464, 465, 0, 0, 466,
	0, 0, 0, 468, 469, 470, 0, 0, 471, 472,
	650, 1182, 473, 1183, 651, 474, 475, 467, 476, 477,
	478, 479, 480, 481, 482, 483, 0, 484, 485, 652,
	486, 487, 488, 653, 489, 490, 491, 654, 492, 655,
	493, 494, 0, 495, 496, 0, 497, 498, 499, 500,
	501, 502, 503, 656, 504, 506, 505, 507, 0, 508,
	0, 509, 510, 511, 0, 0, 0, 0, 512, 0,
	514, 515, 516, 517, 513, 518, 519, 520, 521, 0,
	522, 523, 524, 1184, 525, 526, 527, 528, 657, 529,
	0, 530, 531, 537, 538, 539, 532, 533, 540, 541,
	542, 543, 544, 0, 546, 547, 545, 548, 549, 550,
	0, 551, 552, 534, 535, 553, 554, 1185, 555, 556,
	557, 558, 559, 560, 561, 658, 0, 562, 0, 563,
	564, 565, 567, 536, 568, 573, 574, 659, 569, 570,
	571, 572, 660, 576, 577, 0, 578, 579, 0, 575,
	566, 0, 580, 581, 582, 583, 584, 585, 586, 354,
	587, 0, 588, 661, 662, 663, 664, 0, 597, 0,
	589, 590, 591, 665, 592, 666, 0, 593, 594, 595,
	596, 0, 598, 599, 0, 0, 600, 601, 602, 604,
	605, 603, 606, 0, 607, 0, 0, 608, 609, 610,
	667, 668, 669, 0, 612, 611, 613, 670, 0, 614,
	0, 0, 0, 0, 615, 616, 671, 617, 618, 619,
	1308, 1307, 0, 0, 0, 0, 1305, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 271, 273, 272,
	274, 275, 276, 277, 0, 278, 279, 0, 0, 0,
	0, 0, 620, 0, 0, 0, 0, 280, 281, 1169,
	282, 283, 284, 285, 286, 287, 621, 622, 0, 288,
	623, 289, 624, 0, 625, 290, 291, 292, 293, 294,
	295, 0, 0, 0, 296, 626, 627, 628, 0, 297,
	298, 629, 0, 1313, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 1170, 321, 322, 323, 0, 0, 0, 0,
	0, 0, 0, 324, 325, 326, 327, 328, 0, 329,
	630, 631, 0, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 340, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 632,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	633, 634, 360, 0, 268, 0, 0, 0, 0, 0,
	361, 362, 363, 635, 0, 0, 0, 364, 0, 365,
	366, 0, 0, 1171, 367, 368, 636, 637, 369, 370,
	371, 372, 373, 374, 375, 376, 377, 0, 378, 638,
	0, 639, 379, 0, 380, 381, 382, 383, 384, 640,
	641, 642, 463, 1173, 385, 386, 0, 387, 388, 389,
	390, 391, 0, 0, 0, 0, 392, 393, 394, 396,
	0, 1172, 395, 643, 644, 0, 645, 0, 397, 398,
	1174, 646, 1175, 399, 400, 401, 1176, 402, 0, 0,
	0, 403, 404, 405, 406, 407, 408, 0, 409, 411,
	410, 0, 412, 647, 1177, 413, 414, 1178, 0, 415,
	0, 0, 0, 416, 417, 420, 0, 0, 418, 419,
	421, 422, 0, 423, 424, 426, 429, 425, 427, 428,
	430, 443, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 442, 445, 0, 444, 1179, 446, 447,
	448, 453, 455, 456, 451, 452, 454, 457, 458, 450,
	1180, 459, 449, 0, 0, 1181, 460, 461, 3470, 648,
	462, 649, 464, 465, 0, 0, 466, 0, 0, 0,
	468, 469, 470, 0, 0, 471, 472, 650, 1182, 473,
	1183, 651, 474, 475, 467, 476, 477, 478, 479, 480,
	481, 482, 483, 0, 484, 485, 652, 486, 487, 488,
	653, 489, 490, 491, 654, 492, 655, 493, 494, 0,
	495, 496, 0, 497, 498, 499, 500, 501, 502, 503,
	656, 504, 506, 505, 507, 0, 508, 0, 509, 510,
	511, 0, 0, 0, 0, 512, 0, 514, 515, 516,
	517, 513, 518, 519, 520, 521, 0, 522, 523, 524,
	1184, 525, 526, 527, 528, 657, 529, 0, 530, 531,
	537, 538, 539, 532, 533, 540, 541, 542, 543, 544,
	0, 546, 547, 545, 548, 549, 550, 0, 551, 552,
	534, 535, 553, 554, 1185, 555, 556, 557, 558, 559,
	560, 561, 658, 0, 562, 0, 563, 564, 565, 567,
	536, 568, 573, 574, 659, 569, 570, 571, 572, 660,
	576, 577, 0, 578, 579, 0, 575, 566, 0, 580,
	581, 582, 583, 584, 585, 586, 354, 587, 0, 588,
	661, 662, 663, 664, 0, 597, 0, 589, 590, 591,
	665, 592, 666, 0, 593, 594, 595, 596, 0, 598,
	599, 0, 0, 600, 601, 602, 604, 605, 603, 606,
	0, 607, 0, 0, 608, 609, 610, 667, 668, 669,
	265, 612, 611, 613, 670, 0, 614, 0, 0, 0,
	0, 615, 616, 671, 617, 618, 619, 271, 273, 272,
	274, 275, 276, 277, 0, 278, 279, 0, 0, 0,
	0, 0, 620, 0, 0, 0, 0, 280, 281, 0,
	282, 283, 284, 285, 286, 287, 621, 622, 0, 288,
	623, 289, 624, 0, 625, 290, 291, 292, 293, 294,
	295, 0, 0, 0, 296, 626, 627, 628, 0, 297,
	298, 629, 0, 0, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 0, 321, 322, 323, 0, 0, 0, 0,
	0, 0, 0, 324, 325, 326, 327, 328, 0, 329,
	630, 631, 0, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 340, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 632,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	633, 634, 360, 0, 268, 0, 0, 0, 0, 0,
	361, 362, 363, 635, 0, 0, 0, 364, 0, 365,
	366, 0, 0, 0, 367, 368, 636, 637, 369, 370,
	371, 372, 373, 374, 375, 376, 377, 0, 378, 638,
	0, 639, 379, 0, 380, 381, 382, 383, 384, 640,
	641, 642, 463, 0, 385, 386, 0, 387, 388, 389,
	390, 391, 0, 0, 0, 269, 392, 393, 394, 396,
	0, 0, 395, 643, 644, 0, 645, 0, 397, 398,
	0, 646, 0, 399, 400, 401, 0, 402, 0, 0,
	0, 403, 404, 405, 406, 407, 408, 0, 409, 411,
	410, 0, 412, 647, 0, 413, 414, 0, 0, 415,
	0, 0, 0, 416, 417, 420, 0, 0, 418, 419,
	421, 422, 0, 423, 424, 426, 429, 425, 427, 428,
	430, 443, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 442, 445, 0, 444, 0, 446, 447,
	448, 453, 455, 456, 451, 452, 454, 457, 458, 450,
	0, 459, 449, 0, 270, 0, 460, 461, 0, 648,
	462, 649, 464, 465, 0, 0, 466, 0, 0, 0,
	468, 469, 470, 0, 0, 471, 472, 650, 0, 473,
	0, 651, 474, 475, 467, 476, 477, 478, 479, 480,
	481, 482, 483, 0, 484, 485, 652, 486, 487, 488,
	653, 489, 490, 491, 654, 492, 655, 493, 494, 0,
	495, 496, 0, 497, 498, 499, 500, 501, 502, 503,
	656, 504, 506, 505, 507, 0, 508, 0, 509, 510,
	511, 0, 0, 0, 0, 512, 0, 514, 515, 516,
	517, 513, 518, 519, 520, 521, 0, 522, 523, 524,
	0, 525, 526, 527, 528, 657, 529, 0, 530, 531,
	537, 538, 539, 532, 533, 540, 541, 542, 543, 544,
	0, 546, 547, 545, 548, 549, 550, 0, 551, 552,
	534, 535, 553, 554, 0, 555, 556, 557, 558, 559,
	560, 561, 658, 0, 562, 0, 563, 564, 565, 567,
	536, 568, 573, 574, 659, 569, 570, 571, 572, 660,
	576, 577, 0, 578, 579, 0, 575, 566, 0, 580,
	581, 582, 583, 584, 585, 586, 354, 587, 0, 588,
	661, 662, 663, 664, 0, 597, 0, 589, 590, 591,
	665, 592, 666, 0, 593, 594, 595, 596, 0, 598,
	599, 0, 0, 600, 601, 602, 604, 605, 603, 606,
	0, 607, 0, 0, 608, 609, 610, 667, 668, 669,
	0, 612, 611, 613, 670, 0, 614, 0, 0, 0,
	0, 615, 616, 671, 617, 618, 619, 1635, 0, 1308,
	1307, 0, 0, 0, 0, 1305, 0, 0, 0, 0,
	0, 0, 0, 0, 804, 0, 271, 273, 272, 274,
	275, 276, 277, 0, 278, 279, 0, 0, 0, 0,
	0, 620, 0, 0, 0, 0, 280, 281, 1169, 282,
	283, 284, 285, 286, 287, 621, 622, 0, 288, 623,
	289, 624, 0, 625, 290, 291, 292, 293, 294, 295,
	0, 0, 0, 296, 626, 627, 628, 0, 297, 298,
	629, 0, 1313, 0, 299, 300, 301, 302, 303, 304,
	305, 0, 0, 307, 308, 309, 306, 310, 0, 311,
	0, 312, 313, 314, 315, 316, 317, 0, 318, 319,
	320, 1170, 321, 322, 323, 0, 0, 0, 0, 0,
	0, 0, 324, 325, 326, 327, 328, 0, 329, 630,
	631, 0, 333, 330, 331, 0, 334, 332, 335, 0,
	336, 337, 338, 0, 0, 339, 340, 341, 0, 342,
	343, 0, 344, 345, 346, 0, 347, 348, 632, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 633,
	634, 360, 0, 268, 0, 0, 0, 0, 0, 1634,
	362, 363, 635, 0, 0, 0, 364, 0, 365, 366,
	0, 0, 1171, 367, 368, 636, 637, 369, 370, 371,
	372, 373, 374, 375, 376, 377, 0, 378, 638, 0,
	639, 379, 0, 380, 381, 382, 383, 384, 640, 641,
	642, 463, 1173, 385, 386, 0, 387, 388, 389, 390,
	391, 0, 0, 0, 0, 392, 393, 394, 396, 0,
	1172, 395, 643, 644, 0, 645, 0, 397, 398, 1174,
	646, 1175, 399, 400, 401, 1176, 402, 0, 0, 0,
	403, 404, 405, 406, 407, 408, 0, 409, 411, 410,
	0, 412, 647, 1177, 413, 414, 1178, 0, 415, 0,
	0, 0, 416, 417, 420, 0, 0, 418, 419, 421,
	422, 0, 423, 424, 426, 429, 425, 427, 428, 430,
	443, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 445, 0, 444, 1179, 446, 447, 448,
	453, 455, 456, 451, 452, 454, 457, 458, 450, 1180,
	459, 449, 0, 0, 1181, 460, 461, 0, 648, 462,
	649, 464, 465, 0, 0, 466, 0, 0, 0, 468,
	469, 470, 0, 0, 471, 472, 650, 1182, 473, 1183,
	651, 474, 475, 467, 476, 477, 478, 479, 480, 481,
	482, 483, 0, 484, 485, 652, 486, 487, 488, 653,
	489, 490, 491, 654, 492, 655, 493, 494, 0, 495,
	496, 0, 497, 498, 499, 500, 501, 1633, 503, 656,
	504, 506, 505, 507, 0, 508, 0, 509, 510, 511,
	0, 0, 0, 0, 512, 0, 514, 515, 516, 517,
	513, 518, 519, 520, 521, 0, 522, 523, 524, 1184,
	525, 526, 527, 528, 657, 529, 0, 530, 531, 537,
	538, 539, 532, 533, 540, 1632, 542, 543, 544, 0,
	546, 547, 545, 548, 549, 550, 0, 551, 552, 534,
	535, 553, 554, 1185, 555, 556, 557, 558, 559, 560,
	561, 658, 0, 562, 0, 563, 564, 565, 567, 536,
	568, 573, 574, 659, 569, 570, 571, 572, 660, 576,
	577, 0, 578, 579, 0, 575, 566, 0, 580, 581,
	582, 583, 584, 585, 586, 354, 587, 0, 588, 661,
	662, 663, 664, 0, 597, 0, 589, 590, 591, 665,
	592, 666, 0, 593, 594, 595, 596, 0, 598, 599,
	0, 0, 600, 601, 602, 604, 605, 603, 606, 0,
	607, 0, 0, 608, 609, 610, 667, 668, 669, 0,
	612, 611, 613, 670, 0, 614, 0, 0, 0, 0,
	615, 616, 671, 617, 618, 619, 1553, 0, 1308, 1307,
	0, 0, 0, 0, 1305, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 271, 273, 272, 274, 275,
	276, 277, 0, 278, 279, 0, 0, 0, 0, 0,
	620, 0, 0, 0, 0, 280, 281, 1169, 282, 283,
	284, 285, 286, 287, 621, 622, 0, 288, 623, 289,
	624, 0, 625, 290, 291, 292, 293, 294, 295, 0,
	0, 0, 296, 626, 627, 628, 0, 297, 298, 629,
	0, 1313, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	1170, 321, 322, 323, 0, 0, 0, 0, 0, 0,
	0, 324, 325, 326, 327, 328, 0, 329, 630, 631,
	0, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 340, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 632, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 633, 634,
	360, 0, 268, 0, 0, 0, 0, 0, 361, 362,
	363, 635, 0, 0, 0, 364, 0, 365, 366, 0,
	0, 1171, 367, 368, 636, 637, 369, 370, 371, 372,
	373, 374, 375, 376, 377, 0, 378, 638, 0, 639,
	379, 0, 380, 381, 382, 383, 384, 1552, 641, 642,
	463, 1173, 385, 386, 0, 387, 388, 389, 390, 391,
	0, 0, 0, 0, 392, 393, 394, 396, 0, 1172,
	395, 643, 644, 0, 645, 0, 397, 398, 1174, 646,
	1175, 399, 400, 401, 1176, 402, 0, 0, 0, 403,
	404, 405, 406, 407, 408, 0, 409, 411, 410, 0,
	412, 647, 1177, 413, 414, 1178, 0, 415, 0, 0,
	0, 416, 417, 420, 0, 0, 418, 419, 421, 422,
	0, 423, 424, 426, 429, 425, 427, 428, 430, 443,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 445, 0, 444, 1179, 446, 447, 448, 453,
	455, 456, 451, 452, 454, 457, 458, 450, 1180, 459,
	449, 0, 0, 1181, 460, 461, 0, 648, 462, 649,
	464, 465, 0, 0, 466, 0, 0, 0, 468, 469,
	470, 0, 0, 471, 472, 650, 1182, 473, 1183, 651,
	474, 475, 467, 476, 477, 478, 479, 480, 481, 482,
	483, 0, 484, 485, 652, 486, 487, 488, 653, 489,
	490, 491, 654, 492, 655, 493, 494, 0, 495, 496,
	0, 497, 498, 499, 500, 501, 502, 503, 656, 504,
	506, 505, 507, 0, 508, 0, 509, 510, 511, 0,
	0, 0, 0, 512, 0, 514, 515, 516, 517, 513,
	518, 519, 520, 521, 0, 522, 523, 524, 1184, 525,
	526, 527, 528, 657, 529, 0, 530, 531, 537, 538,
	539, 532, 533, 540, 541, 542, 543, 544, 0, 546,
	547, 545, 548, 549, 550, 0, 551, 552, 534, 535,
	553, 554, 1185, 555, 556, 557, 558, 559, 560, 561,
	658, 0, 562, 0, 563, 564, 565, 567, 536, 568,
	573, 574, 659, 569, 570, 571, 572, 660, 576, 577,
	0, 578, 579, 0, 575, 566, 0, 580, 581, 582,
	583, 584, 585, 586, 354, 587, 0, 588, 661, 662,
	663, 664, 0, 597, 0, 589, 590, 591, 665, 592,
	666, 0, 593, 594, 595, 596, 0, 598, 599, 0,
	0, 600, 601, 602, 604, 605, 603, 606, 0, 607,
	0, 0, 608, 609, 610, 667, 668, 669, 0, 612,
	611, 613, 670, 0, 614, 0, 0, 0, 0, 615,
	616, 671, 617, 618, 619, 1513, 0, 1308, 1307, 0,
	0, 0, 0, 1305, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 271, 273, 272, 274, 275, 276,
	277, 0, 278, 279, 0, 0, 0, 0, 0, 620,
	0, 0, 0, 0, 280, 281, 1169, 282, 283, 284,
	285, 286, 287, 621, 622, 0, 288, 623, 289, 624,
	0, 625, 290, 291, 292, 293, 294, 295, 0, 0,
	0, 296, 626, 627, 628, 0, 297, 298, 629, 0,
	1313, 0, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 0, 311, 0, 312,
	313, 314, 315, 316, 317, 0, 318, 319, 320, 1170,
	321, 322, 323, 0, 0, 0, 0, 0, 0, 0,
	324, 325, 326, 327, 328, 0, 329, 630, 631, 0,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 340, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 347, 348, 632, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 633, 634, 360,
	0, 268, 0, 0, 0, 0, 0, 361, 362, 363,
	635, 0, 0, 0, 364, 0, 365, 366, 0, 0,
	1171, 367, 368, 636, 637, 369, 370, 371, 372, 373,
	374, 375, 376, 377, 0, 378, 638, 0, 639, 379,
	0, 380, 381, 382, 383, 384, 640, 641, 642, 463,
	1173, 385, 386, 0, 387, 388, 389, 390, 391, 0,
	0, 0, 0, 392, 393, 394, 396, 0, 1172, 395,
	643, 644, 0, 645, 0, 397, 398, 1174, 646, 1175,
	399, 400, 401, 1176, 402, 0, 0, 0, 403, 404,
	405, 406, 407, 408, 0, 409, 411, 410, 0, 412,
	647, 1177, 413, 414, 1178, 0, 415, 0, 0, 0,
	416, 417, 420, 0, 0, 418, 419, 421, 422, 0,
	423, 424, 426, 429, 425, 427, 428, 430, 443, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 445, 0, 444, 1179, 446, 447, 448, 453, 455,
	456, 451, 452, 454, 457, 458, 450, 1180, 459, 449,
	0, 0, 1181, 460, 461, 0, 648, 462, 649, 464,
	465, 0, 0, 466, 0, 0, 0, 468, 469, 470,
	0, 0, 471, 472, 650, 1182, 473, 1183, 651, 474,
	475, 467, 476, 477, 478, 479, 480, 481, 482, 483,
	0, 484, 485, 652, 486, 487, 488, 653, 489, 490,
	491, 654, 492, 655, 493, 494, 0, 495, 496, 0,
	497, 498, 499, 500, 501, 502, 503, 656, 504, 506,
	505, 507, 0, 508, 0, 509, 510, 511, 0, 0,
	0, 0, 512, 0, 514, 515, 516, 517, 513, 518,
	519, 520, 521, 0, 522, 523, 524, 1184, 525, 526,
	527, 528, 657, 529, 0, 530, 531, 537, 538, 539,
	532, 533, 540, 541, 542, 543, 544, 0, 546, 547,
	545, 548, 549, 550, 0, 551, 552, 534, 535, 553,
	554, 1185, 555, 556, 557, 558, 559, 560, 561, 658,
	0, 562, 0, 563, 564, 565, 567, 536, 568, 573,
	574, 659, 569, 570, 571, 572, 660, 576, 577, 0,
	578, 579, 0, 575, 566, 0, 580, 581, 582, 583,
	584, 585, 586, 354, 587, 0, 588, 661, 662, 663,
	664, 0, 597, 0, 589, 590, 591, 665, 592, 666,
	0, 593, 594, 595, 596, 0, 598, 599, 0, 0,
	600, 601, 602, 604, 605, 603, 606, 0, 607, 0,
	0, 608, 609, 610, 667, 668, 669, 0, 612, 611,
	613, 670, 0, 614, 0, 0, 0, 0, 615, 616,
	671, 617, 618, 619, 1481, 0, 1308, 1307, 0, 0,
	0, 0, 1305, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 271, 273, 272, 274, 275, 276, 277,
	0, 278, 279, 0, 0, 0, 0, 0, 620, 0,
	0, 0, 0, 280, 281, 1169, 282, 283, 284, 285,
	286, 287, 621, 622, 0, 288, 623, 289, 624, 0,
	625, 290, 291, 292, 293, 294, 295, 0, 0, 0,
	296, 626, 627, 628, 0, 297, 298, 629, 0, 1313,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 1170, 321,
	322, 323, 0, 0, 0, 0, 0, 0, 0, 324,
	325, 326, 327, 328, 0, 329, 630, 631, 0, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 340, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 632, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 633, 634, 360, 0,
	268, 0, 0, 0, 0, 0, 361, 362, 363, 635,
	0, 0, 0, 364, 0, 365, 366, 0, 0, 1171,
	367, 368, 636, 637, 369, 370, 371, 372, 373, 374,
	375, 376, 377, 0, 378, 638, 0, 639, 379, 0,
	380, 381, 382, 383, 384, 1480, 641, 642, 463, 1173,
	385, 386, 0, 387, 388, 389, 390, 391, 0, 0,
	0, 0, 392, 393, 394, 396, 0, 1172, 395, 643,
	644, 0, 645, 0, 397, 398, 1174, 646, 1175, 399,
	400, 401, 1176, 402, 0, 0, 0, 403, 404, 405,
	406, 407, 408, 0, 409, 411, 410, 0, 412, 647,
	1177, 413, 414, 1178, 0, 415, 0, 0, 0, 416,
	417, 420, 0, 0, 418, 419, 421, 422, 0, 423,
	424, 426, 429, 425, 427, 428, 430, 443, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	445, 0, 444, 1179, 446, 447, 448, 453, 455, 456,
	451, 452, 454, 457, 458, 450, 1180, 459, 449, 0,
	0, 1181, 460, 461, 0, 648, 462, 649, 464, 465,
	0, 0, 466, 0, 0, 0, 468, 469, 470, 0,
	0, 471, 472, 650, 1182, 473, 1183, 651, 474, 475,
	467, 476, 477, 478, 479, 480, 481, 482, 483, 0,
	484, 485, 652, 486, 487, 488, 653, 489, 490, 491,
	654, 492, 655, 493, 494, 0, 495, 496, 0, 497,
	498, 499, 500, 501, 502, 503, 656, 504, 506, 505,
	507, 0, 508, 0, 509, 510, 511, 0, 0, 0,
	0, 512, 0, 514, 515, 516, 517, 513, 518, 519,
	520, 521, 0, 522, 523, 524, 1184, 525, 526, 527,
	528, 657, 529, 0, 530, 531, 537, 538, 539, 532,
	533, 540, 541, 542, 543, 544, 0, 546, 547, 545,
	548, 549, 550, 0, 551, 552, 534, 535, 553, 554,
	1185, 555, 556, 557, 558, 559, 560, 561, 658, 0,
	562, 0, 563, 564, 565, 567, 536, 568, 573, 574,
	659, 569, 570, 571, 572, 660, 576, 577, 0, 578,
	579, 0, 575, 566, 0, 580, 581, 582, 583, 584,
	585, 586, 354, 587, 0, 588, 661, 662, 663, 664,
	0, 597, 0, 589, 590, 591, 665, 592, 666, 0,
	593, 594, 595, 596, 0, 598, 599, 0, 0, 600,
	601, 602, 604, 605, 603, 606, 0, 607, 0, 0,
	608, 609, 610, 667, 668, 669, 0, 612, 611, 613,
	670, 0, 614, 0, 0, 0, 0, 615, 616, 671,
	617, 618, 619, 1302, 0, 1308, 1307, 0, 0, 0,
	0, 1305, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 271, 273, 272, 274, 275, 276, 277, 0,
	278, 279, 0, 0, 0, 0, 0, 620, 0, 0,
	0, 0, 280, 281, 1169, 282, 283, 284, 285, 286,
	287, 621, 622, 0, 288, 623, 289, 624, 0, 625,
	290, 291, 292, 293, 294, 295, 0, 0, 0, 296,
	626, 627, 628, 0, 297, 298, 629, 0, 1313, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 1170, 321, 322,
	323, 0, 0, 0, 0, 0, 0, 0, 324, 325,
	326, 327, 328, 0, 329, 630, 631, 0, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 340, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 632, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 633, 634, 360, 0, 268,
	0, 0, 0, 0, 0, 361, 362, 363, 635, 0,
	0, 0, 364, 0, 365, 366, 0, 0, 1171, 367,
	368, 636, 637, 369, 370, 371, 372, 373, 374, 375,
	376, 377, 0, 378, 638, 0, 639, 379, 0, 380,
	381, 382, 383, 384, 1301, 641, 642, 463, 1173, 385,
	386, 0, 387, 388, 389, 390, 391, 0, 0, 0,
	0, 392, 393, 394, 396, 0, 1172, 395, 643, 644,
	0, 645, 0, 397, 398, 1174, 646, 1175, 399, 400,
	401, 1176, 402, 0, 0, 0, 403, 404, 405, 406,
	407, 408, 0, 409, 411, 410, 0, 412, 647, 1177,
	413, 414, 1178, 0, 415, 0, 0, 0, 416, 417,
	420, 0, 0, 418, 419, 421, 422, 0, 423, 424,
	426, 429, 425, 427, 428, 430, 443, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 445,
	0, 444, 1179, 446, 447, 448, 453, 455, 456, 451,
	452, 454, 457, 458, 450, 1180, 459, 449, 0, 0,
	1181, 460, 461, 0, 648, 462, 649, 464, 465, 0,
	0, 466, 0, 0, 0, 468, 469, 470, 0, 0,
	471, 472, 650, 1182, 473, 1183, 651, 474, 475, 467,
	476, 477, 478, 479, 480, 481, 482, 483, 0, 484,
	485, 652, 486, 487, 488, 653, 489, 490, 491, 654,
	492, 655, 493, 494, 0, 495, 496, 0, 497, 498,
	499, 500, 501, 502, 503, 656, 504, 506, 505, 507,
	0, 508, 0, 509, 510, 511, 0, 0, 0, 0,
	512, 0, 514, 515, 516, 517, 513, 518, 519, 520,
	521, 0, 522, 523, 524, 1184, 525, 526, 527, 528,
	657, 529, 0, 530, 531, 537, 538, 539, 532, 533,
	540, 541, 542, 543, 544, 0, 546, 547, 545, 548,
	549, 550, 0, 551, 552, 534, 535, 553, 554, 1185,
	555, 556, 557, 558, 559, 560, 561, 658, 0, 562,
	0, 563, 564, 565, 567, 536, 568, 573, 574, 659,
	569, 570, 571, 572, 660, 576, 577, 0, 578, 579,
	0, 575, 566, 0, 580, 581, 582, 583, 584, 585,
	586, 354, 587, 0, 588, 661, 662, 663, 664, 0,
	597, 0, 589, 590, 591, 665, 592, 666, 0, 593,
	594, 595, 596, 0, 598, 599, 0, 0, 600, 601,
	602, 604, 605, 603, 606, 0, 607, 0, 0, 608,
	609, 610, 667, 668, 669, 0, 612, 611, 613, 670,
	0, 614, 0, 0, 0, 0, 615, 616, 671, 617,
	618, 619, 1308, 1307, 0, 0, 0, 0, 1305, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 271,
	273, 272, 274, 275, 276, 277, 0, 278, 279, 0,
	0, 0, 0, 0, 620, 0, 0, 0, 0, 280,
	281, 1169, 282, 283, 284, 285, 286, 287, 621, 622,
	0, 288, 623, 289, 624, 0, 625, 290, 291, 292,
	293, 294, 295, 0, 0, 0, 296, 626, 627, 628,
	0, 297, 298, 629, 0, 1313, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 1170, 321, 322, 323, 0, 0,
	0, 0, 0, 0, 0, 324, 325, 326, 327, 328,
	0, 329, 630, 631, 0, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 340,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 632, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 633, 634, 360, 0, 268, 0, 0, 0,
	0, 0, 361, 362, 363, 635, 0, 0, 0, 364,
	0, 365, 366, 0, 0, 1171, 367, 368, 636, 637,
	369, 370, 371, 372, 373, 374, 375, 376, 377, 0,
	378, 638, 0, 639, 379, 0, 380, 381, 382, 383,
	384, 640, 641, 642, 463, 1173, 385, 386, 0, 387,
	388, 389, 390, 391, 0, 0, 0, 0, 392, 393,
	394, 396, 0, 1172, 395, 643, 644, 0, 645, 0,
	397, 398, 1174, 646, 1175, 399, 400, 401, 1176, 402,
	0, 0, 0, 403, 404, 405, 406, 407, 408, 0,
	409, 411, 410, 0, 412, 647, 1177, 413, 414, 1178,
	0, 415, 0, 0, 0, 416, 417, 420, 0, 0,
	418, 419, 421, 422, 0, 423, 424, 426, 429, 425,
	427, 428, 430, 443, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 445, 0, 444, 1179,
	446, 447, 448, 453, 455, 456, 451, 452, 454, 457,
	458, 450, 1180, 459, 449, 0, 0, 1181, 460, 461,
	0, 648, 462, 649, 464, 465, 0, 0, 466, 0,
	0, 0, 468, 469, 470, 0, 0, 471, 472, 650,
	1182, 473, 1183, 651, 474, 475, 467, 476, 477, 478,
	479, 480, 481, 482, 483, 0, 484, 485, 652, 486,
	487, 488, 653, 489, 490, 491, 654, 492, 655, 493,
	494, 0, 495, 496, 0, 497, 498, 499, 500, 501,
	502, 503, 656, 504, 506, 505, 507, 0, 508, 0,
	509, 510, 511, 0, 0, 0, 0, 512, 0, 514,
	515, 516, 517, 513, 518, 519, 520, 521, 0, 522,
	523, 524, 1184, 525, 526, 527, 528, 657, 529, 0,
	530, 531, 537, 538, 539, 532, 533, 540, 541, 542,
	543, 544, 0, 546, 547, 545, 548, 549, 550, 0,
	551, 552, 534, 535, 553, 554, 1185, 555, 556, 557,
	558, 559, 560, 561, 658, 0, 562, 0, 563, 564,
	565, 567, 536, 568, 573, 574, 659, 569, 570, 571,
	572, 660, 576, 577, 0, 578, 579, 0, 575, 566,
	0, 580, 581, 582, 583, 584, 585, 586, 354, 587,
	0, 588, 661, 662, 663, 664, 0, 597, 0, 589,
	590, 591, 665, 592, 666, 0, 593, 594, 595, 596,
	0, 598, 599, 0, 0, 600, 601, 602, 604, 605,
	603, 606, 0, 607, 0, 0, 608, 609, 610, 667,
	668, 669, 0, 612, 611, 613, 670, 0, 614, 1308,
	2022, 0, 0, 615, 616, 671, 617, 618, 619, 0,
	0, 0, 0, 0, 0, 0, 271, 273, 272, 274,
	275, 276, 277, 0, 278, 279, 0, 0, 0, 0,
	0, 620, 0, 0, 0, 0, 280, 281, 1169, 282,
	283, 284, 285, 286, 287, 621, 622, 0, 288, 623,
	289, 624, 0, 625, 290, 291, 292, 293, 294, 295,
	0, 0, 0, 296, 626, 627, 628, 0, 297, 298,
	629, 0, 1313, 0, 299, 300, 301, 302, 303, 304,
	305, 0, 0, 307, 308, 309, 306, 310, 0, 311,
	0, 312, 313, 314, 315, 316, 317, 0, 318, 319,
	320, 1170, 321, 322, 323, 0, 0, 0, 0, 0,
	0, 0, 324, 325, 326, 327, 328, 0, 329, 630,
	631, 2062, 333, 330, 331, 0, 334, 332, 335, 0,
	336, 337, 338, 0, 0, 339, 340, 341, 0, 342,
	343, 0, 344, 345, 346, 0, 347, 348, 632, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 633,
	634, 360, 0, 268, 0, 0, 0, 0, 0, 361,
	362, 363, 635, 0, 0, 0, 364, 0, 365, 366,
	0, 0, 1171, 367, 368, 636, 637, 369, 370, 371,
	372, 373, 374, 375, 376, 377, 0, 378, 638, 0,
	639, 379, 0, 380, 381, 382, 383, 384, 640, 641,
	642, 463, 1173, 385, 386, 0, 387, 388, 389, 390,
	391, 0, 0, 0, 0, 392, 393, 394, 396, 0,
	1172, 395, 643, 644, 0, 645, 0, 397, 398, 1174,
	646, 1175, 399, 400, 401, 1176, 402, 0, 0, 0,
	403, 404, 405, 406, 407, 408, 0, 409, 411, 410,
	0, 412, 647, 1177, 413, 414, 1178, 0, 415, 0,
	0, 0, 416, 417, 420, 0, 0, 418, 419, 421,
	422, 0, 423, 424, 426, 429, 425, 427, 428, 430,
	443, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 445, 0, 444, 1179, 446, 447, 448,
	453, 455, 456, 451, 452, 454, 457, 458, 450, 1180,
	459, 449, 0, 0, 1181, 460, 461, 0, 648, 462,
	649, 464, 465, 0, 0, 466, 0, 0, 0, 468,
	469, 470, 0, 0, 471, 472, 650, 1182, 473, 1183,
	651, 474, 475, 467, 476, 477, 478, 479, 480, 481,
	482, 483, 0, 484, 485, 652, 486, 487, 488, 653,
	489, 490, 491, 654, 492, 655, 493, 494, 0, 495,
	496, 0, 497, 498, 499, 500, 501, 502, 503, 656,
	504, 506, 505, 507, 0, 508, 0, 509, 510, 511,
	0, 0, 0, 0, 512, 0, 514, 515, 516, 517,
	513, 518, 519, 520, 521, 0, 522, 523, 524, 1184,
	525, 526, 527, 528, 657, 529, 0, 530, 531, 537,
	538, 539, 532, 533, 540, 541, 542, 543, 544, 0,
	546, 547, 545, 548, 549, 550, 0, 551, 552, 534,
	535, 553, 554, 1185, 555, 556, 557, 558, 559, 560,
	561, 658, 0, 562, 0, 563, 564, 565, 567, 536,
	568, 573, 574, 659, 569, 570, 571, 572, 660, 576,
	577, 0, 578, 579, 0, 575, 566, 0, 580, 581,
	582, 583, 584, 585, 586, 354, 587, 0, 588, 661,
	662, 663, 664, 0, 597, 0, 589, 590, 591, 665,
	592, 666, 0, 593, 594, 595, 596, 0, 598, 599,
	0, 0, 600, 601, 602, 604, 605, 603, 606, 0,
	607, 0, 0, 608, 609, 610, 667, 668, 669, 0,
	612, 611, 613, 670, 0, 614, 1308, 1307, 0, 0,
	615, 616, 671, 617, 618, 619, 0, 0, 0, 0,
	0, 0, 0, 271, 273, 272, 274, 275, 276, 277,
	0, 278, 279, 0, 0, 0, 0, 0, 620, 0,
	0, 0, 0, 280, 281, 1169, 282, 283, 284, 285,
	286, 287, 621, 622, 0, 288, 623, 289, 624, 0,
	625, 290, 291, 292, 293, 294, 295, 0, 0, 0,
	296, 626, 627, 628, 0, 297, 298, 629, 0, 1313,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 1170, 321,
	322, 323, 0, 0, 0, 0, 0, 0, 0, 324,
	325, 326, 327, 328, 0, 329, 630, 631, 0, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 340, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 632, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 633, 634, 360, 0,
	268, 0, 0, 0, 0, 0, 361, 362, 363, 635,
	0, 0, 0, 364, 0, 365, 366, 0, 0, 1171,
	367, 368, 636, 637, 369, 370, 371, 372, 373, 374,
	375, 376, 377, 0, 378, 638, 0, 639, 379, 0,
	380, 381, 382, 383, 384, 640, 641, 642, 463, 1173,
	385, 386, 0, 387, 388, 389, 390, 391, 0, 0,
	0, 0, 392, 393, 394, 396, 0, 1172, 395, 643,
	644, 0, 645, 0, 397, 398, 1174, 646, 1175, 399,
	400, 401, 1176, 402, 0, 0, 0, 403, 404, 405,
	406, 407, 408, 0, 409, 411, 410, 0, 412, 647,
	1177, 413, 414, 1178, 0, 415, 0, 0, 0, 416,
	417, 420, 0, 0, 418, 419, 421, 422, 0, 423,
	424, 426, 429, 425, 427, 428, 430, 443, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	445, 0, 444, 1179, 446, 447, 448, 453, 455, 456,
	451, 452, 454, 457, 458, 450, 1180, 459, 449, 0,
	0, 1181, 460, 461, 0, 648, 462, 649, 464, 465,
	0, 0, 466, 0, 0, 0, 468, 469, 470, 0,
	0, 471, 472, 650, 1182, 473, 1183, 651, 474, 475,
	467, 476, 477, 478, 479, 480, 481, 482, 483, 0,
	484, 485, 652, 486, 487, 488, 653, 489, 490, 491,
	654, 492, 655, 493, 494, 0, 495, 496, 0, 497,
	498, 499, 500, 501, 502, 503, 656, 504, 506, 505,
	507, 0, 508, 0, 509, 510, 511, 0, 0, 0,
	0, 512, 0, 514, 515, 516, 517, 513, 518, 519,
	520, 521, 0, 522, 523, 524, 1184, 525, 526, 527,
	528, 657, 529, 0, 530, 531, 537, 538, 539, 532,
	533, 540, 541, 542, 543, 544, 0, 546, 547, 545,
	548, 549, 550, 0, 551, 552, 534, 535, 553, 554,
	1185, 555, 556, 557, 558, 559, 560, 561, 658, 0,
	562, 0, 563, 564, 565, 567, 536, 568, 573, 574,
	659, 569, 570, 571, 572, 660, 576, 577, 0, 578,
	579, 0, 575, 566, 0, 580, 581, 582, 583, 584,
	585, 586, 354, 587, 0, 588, 661, 662, 663, 664,
	0, 597, 0, 589, 590, 591, 665, 592, 666, 0,
	593, 594, 595, 596, 0, 598, 599, 0, 0, 600,
	601, 602, 604, 605, 603, 606, 0, 607, 0, 0,
	608, 609, 610, 667, 668, 669, 1308, 612, 611, 613,
	670, 0, 614, 0, 0, 0, 0, 615, 616, 671,
	617, 618, 619, 271, 273, 272, 274, 275, 276, 277,
	0, 278, 279, 0, 0, 0, 0, 0, 620, 0,
	0, 0, 0, 280, 281, 1169, 282, 283, 284, 285,
	286, 287, 621, 622, 0, 288, 623, 289, 624, 0,
	625, 290, 291, 292, 293, 294, 295, 0, 0, 0,
	296, 626, 627, 628, 0, 297, 298, 629, 0, 1313,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 1170, 321,
	322, 323, 0, 0, 0, 0, 0, 0, 0, 324,
	325, 326, 327, 328, 0, 329, 630, 631, 0, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 340, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 632, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 633, 634, 360, 0,
	268, 0, 0, 0, 0, 0, 361, 362, 363, 635,
	0, 0, 0, 364, 0, 365, 366, 0, 0, 1171,
	367, 368, 636, 637, 369, 370, 371, 372, 373, 374,
	375, 376, 377, 0, 378, 638, 0, 639, 379, 0,
	380, 381, 382, 383, 384, 640, 641, 642, 463, 1173,
	385, 386, 0, 387, 388, 389, 390, 391, 0, 0,
	0, 0, 392, 393, 394, 396, 0, 1172, 395, 643,
	644, 0, 645, 0, 397, 398, 1174, 646, 1175, 399,
	400, 401, 1176, 402, 0, 0, 0, 403, 404, 405,
	406, 407, 408, 0, 409, 411, 410, 0, 412, 647,
	1177, 413, 414, 1178, 0, 415, 0, 0, 0, 416,
	417, 420, 0, 0, 418, 419, 421, 422, 0, 423,
	424, 426, 429, 425, 427, 428, 430, 443, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	445, 0, 444, 1179, 446, 447, 448, 453, 455, 456,
	451, 452, 454, 457, 458, 450, 1180, 459, 449, 0,
	0, 1181, 460, 461, 0, 648, 462, 649, 464, 465,
	0, 0, 466, 0, 0, 0, 468, 469, 470, 0,
	0, 471, 472, 650, 1182, 473, 1183, 651, 474, 475,
	467, 476, 477, 478, 479, 480, 481, 482, 483, 0,
	484, 485, 652, 486, 487, 488, 653, 489, 490, 491,
	654, 492, 655, 493, 494, 0, 495, 496, 0, 497,
	498, 499, 500, 501, 502, 503, 656, 504, 506, 505,
	507, 0, 508, 0, 509, 510, 511, 0, 0, 0,
	0, 512, 0, 514, 515, 516, 517, 513, 518, 519,
	520, 521, 0, 522, 523, 524, 1184, 525, 526, 527,
	528, 657, 529, 0, 530, 531, 537, 538, 539, 532,
	533, 540, 541, 542, 543, 544, 0, 546, 547, 545,
	548, 549, 550, 0, 551, 552, 534, 535, 553, 554,
	1185, 555, 556, 557, 558, 559, 560, 561, 658, 0,
	562, 0, 563, 564, 565, 567, 536, 568, 573, 574,
	659, 569, 570, 571, 572, 660, 576, 577, 0, 578,
	579, 0, 575, 566, 0, 580, 581, 582, 583, 584,
	585, 586, 354, 587, 0, 588, 661, 662, 663, 664,
	0, 597, 0, 589, 590, 591, 665, 592, 666, 0,
	593, 594, 595, 596, 0, 598, 599, 0, 0, 600,
	601, 602, 604, 605, 603, 606, 0, 607, 0, 0,
	608, 609, 610, 667, 668, 669, 265, 612, 611, 613,
	670, 0, 614, 0, 0, 0, 0, 615, 616, 671,
	617, 618, 619, 271, 273, 272, 274, 275, 276, 277,
	0, 278, 279, 0, 0, 0, 0, 0, 620, 0,
	0, 0, 0, 280, 281, 0, 282, 283, 284, 285,
	286, 287, 621, 622, 0, 288, 623, 289, 624, 0,
	625, 290, 291, 292, 293, 294, 295, 0, 0, 0,
	296, 626, 627, 628, 2818, 297, 298, 629, 0, 0,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 2815, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 0, 321,
	322, 323, 0, 0, 0, 0, 0, 0, 0, 324,
	325, 326, 327, 328, 0, 329, 630, 631, 0, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 340, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 2822, 348, 632, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 633, 634, 360, 0,
	3024, 0, 0, 0, 0, 0, 361, 362, 363, 635,
	0, 0, 0, 364, 0, 365, 366, 2821, 0, 0,
	367, 368, 636, 637, 369, 370, 371, 372, 373, 374,
	375, 376, 377, 0, 378, 638, 0, 639, 379, 0,
	380, 381, 382, 383, 384, 640, 641, 642, 463, 0,
	385, 386, 0, 387, 388, 389, 390, 391, 0, 0,
	0, 3021, 392, 393, 394, 396, 0, 0, 395, 643,
	644, 0, 645, 0, 397, 3023, 0, 646, 0, 399,
	400, 401, 0, 402, 0, 0, 0, 403, 404, 405,
	406, 407, 408, 0, 409, 411, 410, 0, 412, 647,
	0, 413, 414, 3020, 0, 415, 0, 0, 0, 416,
	417, 420, 0, 0, 418, 419, 421, 422, 0, 423,
	424, 426, 429, 425, 427, 428, 430, 443, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	445, 0, 444, 0, 446, 447, 448, 453, 455, 456,
	451, 452, 454, 457, 458, 450, 0, 459, 449, 0,
	0, 0, 460, 461, 0, 648, 462, 649, 464, 465,
	0, 0, 466, 0, 0, 0, 468, 469, 470, 0,
	0, 471, 472, 650, 0, 473, 0, 651, 474, 475,
	467, 476, 477, 478, 479, 480, 481, 482, 483, 0,
	484, 485, 652, 486, 487, 488, 653, 489, 490, 491,
	654, 492, 655, 493, 494, 2820, 495, 496, 0, 497,
	498, 499, 500, 501, 502, 503, 656, 504, 506, 505,
	507, 0, 508, 0, 509, 510, 511, 0, 0, 0,
	0, 512, 0, 514, 515, 516, 517, 513, 518, 519,
	520, 521, 0, 522, 523, 524, 0, 525, 526, 527,
	528, 657, 529, 0, 530, 531, 537, 538, 539, 532,
	533, 540, 541, 542, 543, 544, 0, 546, 547, 545,
	548, 549, 550, 0, 551, 552, 534, 535, 553, 554,
	0, 555, 556, 557, 558, 559, 560, 561, 658, 0,
	562, 0, 563, 564, 565, 567, 536, 568, 573, 574,
	659, 569, 570, 571, 572, 660, 576, 577, 0, 578,
	579, 0, 575, 566, 0, 580, 581, 582, 583, 584,
	585, 586, 354, 587, 0, 588, 661, 662, 663, 664,
	0, 597, 0, 589, 590, 591, 665, 592, 666, 0,
	593, 594, 595, 596, 0, 598, 599, 0, 3022, 600,
	601, 602, 604, 605, 603, 606, 0, 607, 0, 0,
	608, 609, 610, 667, 668, 669, 265, 612, 611, 613,
	670, 0, 614, 0, 0, 0, 0, 615, 616, 671,
	617, 618, 619, 271, 273, 272, 274, 275, 276, 277,
	0, 278, 279, 0, 0, 0, 0, 0, 620, 0,
	0, 0, 0, 280, 281, 0, 282, 283, 284, 285,
	286, 287, 621, 622, 0, 288, 623, 289, 624, 0,
	625, 290, 291, 292, 293, 294, 295, 0, 0, 0,
	296, 626, 627, 628, 2818, 297, 298, 629, 0, 0,
	2812, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 2815, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 0, 321,
	322, 323, 0, 0, 0, 0, 0, 0, 0, 324,
	325, 326, 327, 328, 0, 329, 630, 631, 0, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 340, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 2822, 348, 632, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 633, 634, 360, 0,
	0, 0, 0, 0, 0, 0, 361, 362, 363, 635,
	0, 0, 0, 364, 0, 365, 366, 2821, 0, 0,
	367, 368, 636, 637, 369, 370, 371, 372, 373, 374,
	375, 376, 377, 0, 378, 638, 0, 639, 379, 0,
	380, 381, 382, 383, 384, 2811, 641, 642, 463, 0,
	385, 386, 0, 387, 388, 389, 390, 391, 0, 0,
	0, 0, 392, 393, 394, 396, 0, 0, 395, 643,
	644, 0, 645, 0, 397, 398, 0, 646, 0, 399,
	400, 401, 0, 402, 0, 0, 0, 403, 404, 405,
	406, 407, 408, 0, 409, 411, 410, 0, 412, 647,
	0, 413, 414, 0, 0, 415, 0, 0, 0, 416,
	417, 420, 0, 0, 418, 419, 421, 422, 0, 423,
	424, 426, 429, 425, 427, 428, 430, 443, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	445, 0, 444, 0, 446, 447, 448, 453, 455, 456,
	451, 452, 454, 457, 458, 450, 0, 459, 449, 0,
	0, 0, 460, 461, 0, 648, 462, 649, 464, 465,
	0, 0, 466, 0, 0, 0, 468, 469, 470, 0,
	0, 471, 472, 650, 0, 473, 0, 651, 474, 475,
	467, 476, 477, 478, 479, 480, 481, 482, 483, 0,
	484, 485, 652, 486, 487, 488, 653, 489, 490, 491,
	654, 492, 655, 493, 494, 2820, 495, 496, 0, 497,
	498, 499, 500, 501, 502, 503, 656, 504, 506, 505,
	507, 0, 508, 0, 509, 510, 511, 0, 0, 0,
	0, 512, 0, 514, 515, 516, 517, 513, 518, 519,
	520, 521, 0, 522, 523, 524, 0, 525, 526, 527,
	528, 657, 529, 0, 530, 531, 537, 538, 539, 532,
	533, 540, 541, 542, 543, 544, 0, 546, 547, 545,
	548, 549, 550, 0, 551, 552, 534, 535, 553, 554,
	0, 555, 556, 557, 558, 559, 560, 561, 658, 0,
	562, 0, 563, 564, 565, 567, 536, 568, 573, 574,
	659, 569, 570, 571, 572, 660, 576, 577, 0, 578,
	579, 0, 575, 566, 0, 580, 581, 582, 583, 584,
	585, 586, 354, 587, 0, 588, 661, 662, 663, 664,
	0, 597, 0, 589, 590, 591, 665, 592, 666, 0,
	593, 594, 595, 596, 0, 598, 599, 0, 2819, 600,
	601, 602, 604, 605, 603, 606, 0, 607, 0, 0,
	608, 609, 610, 667, 668, 669, 0, 612, 611, 613,
	670, 1711, 614, 265, 0, 0, 0, 615, 616, 671,
	617, 618, 619, 0, 0, 0, 0, 0, 0, 0,
	271, 273, 272, 274, 275, 276, 277, 1710, 278, 279,
	0, 0, 0, 0, 0, 620, 0, 0, 0, 0,
	280, 281, 0, 282, 283, 284, 285, 286, 287, 621,
	622, 0, 288, 623, 289, 624, 0, 625, 290, 291,
	292, 293, 294, 295, 0, 0, 0, 296, 626, 627,
	628, 0, 297, 298, 629, 0, 0, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 316,
	317, 0, 318, 319, 320, 0, 321, 322, 323, 0,
	0, 0, 0, 0, 0, 0, 324, 325, 326, 1709,
	328, 0, 329, 630, 631, 0, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	340, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 632, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 633, 634, 360, 0, 268, 0, 0,
	0, 0, 0, 361, 362, 363, 635, 0, 0, 0,
	364, 0, 365, 366, 0, 0, 0, 367, 368, 636,
	637, 369, 370, 371, 372, 373, 374, 375, 376, 377,
	0, 378, 638, 0, 639, 379, 0, 380, 381, 382,
	383, 384, 640, 641, 642, 463, 0, 385, 386, 0,
	387, 388, 389, 390, 391, 0, 0, 0, 269, 392,
	393, 394, 396, 0, 0, 395, 643, 644, 0, 645,
	0, 397, 398, 0, 646, 0, 399, 400, 401, 0,
	402, 0, 0, 0, 403, 404, 405, 406, 407, 408,
	0, 409, 411, 410, 0, 412, 647, 0, 413, 414,
	0, 0, 415, 0, 0, 0, 416, 417, 420, 0,
	0, 418, 419, 421, 422, 0, 423, 424, 426, 429,
	425, 427, 428, 430, 443, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 445, 0, 444,
	0, 446, 447, 448, 453, 455, 456, 451, 452, 454,
	457, 458, 450, 0, 459, 449, 0, 270, 0, 460,
	461, 0, 648, 462, 649, 464, 465, 0, 0, 466,
	0, 0, 0, 468, 469, 470, 0, 0, 471, 472,
	650, 0, 473, 0, 651, 474, 475, 467, 476, 477,
	478, 479, 480, 481, 482, 483, 0, 484, 485, 652,
	486, 487, 488, 653, 489, 490, 491, 654, 492, 655,
	493, 494, 0, 495, 496, 0, 497, 498, 499, 500,
	501, 502, 503, 656, 504, 506, 505, 507, 0, 508,
	0, 509, 510, 511, 0, 0, 0, 0, 512, 0,
	514, 515, 516, 517, 513, 518, 519, 520, 521, 0,
	522, 523, 524, 0, 525, 526, 527, 528, 657, 529,
	0, 530, 531, 537, 538, 539, 532, 533, 540, 541,
	542, 543, 544, 0, 1708, 547, 545, 548, 549, 550,
	0, 551, 552, 534, 535, 553, 554, 0, 555, 556,
	557, 558, 559, 560, 561, 658, 0, 562, 0, 563,
	564, 565, 567, 536, 568, 573, 574, 659, 569, 570,
	571, 572, 660, 576, 577, 0, 578, 579, 0, 575,
	566, 1706, 580, 581, 582, 583, 584, 585, 586, 354,
	587, 0, 588, 661, 662, 663, 664, 0, 597, 0,
	589, 590, 591, 665, 592, 666, 0, 593, 594, 595,
	596, 0, 598, 599, 0, 0, 600, 601, 602, 604,
	605, 603, 606, 0, 607, 0, 0, 608, 609, 610,
	667, 668, 669, 0, 1707, 611, 613, 670, 1455, 614,
	265, 0, 0, 0, 615, 616, 671, 617, 618, 619,
	0, 0, 0, 0, 0, 0, 0, 271, 273, 272,
	274, 275, 276, 277, 0, 278, 279, 0, 0, 0,
	0, 0, 620, 0, 0, 0, 0, 280, 281, 0,
	282, 283, 284, 285, 286, 287, 621, 622, 0, 288,
	623, 289, 624, 0, 625, 290, 291, 292, 293, 294,
	295, 0, 0, 0, 296, 626, 627, 628, 0, 297,
	298, 629, 0, 0, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 0, 321, 322, 323, 0, 0, 0, 0,
	0, 0, 0, 324, 325, 326, 327, 328, 0, 329,
	630, 631, 0, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 340, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 632,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	633, 634, 360, 0, 268, 0, 0, 0, 0, 0,
	361, 362, 363, 635, 0, 0, 0, 364, 0, 365,
	366, 0, 0, 0, 367, 368, 636, 637, 369, 370,
	371, 372, 373, 374, 375, 376, 377, 0, 378, 638,
	0, 639, 379, 0, 380, 381, 382, 383, 384, 1457,
	641, 642, 463, 0, 385, 386, 0, 387, 388, 389,
	390, 391, 0, 0, 0, 269, 392, 393, 394, 396,
	0, 0, 395, 643, 644, 0, 645, 0, 397, 398,
	0, 646, 0, 399, 400, 401, 0, 402, 0, 0,
	0, 403, 404, 405, 406, 407, 408, 0, 409, 411,
	410, 0, 412, 647, 0, 413, 414, 0, 0, 415,
	0, 0, 0, 416, 417, 420, 0, 0, 418, 419,
	421, 422, 0, 423, 424, 426, 429, 425, 427, 428,
	430, 443, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 442, 445, 0, 444, 0, 446, 447,
	448, 453, 455, 456, 451, 452, 454, 457, 458, 450,
	0, 459, 449, 0, 270, 0, 460, 461, 0, 648,
	462, 649, 464, 465, 0, 0, 466, 0, 0, 1219,
	468, 469, 470, 0, 0, 471, 472, 650, 0, 473,
	0, 651, 474, 475, 467, 476, 477, 478, 479, 480,
	481, 482, 483, 0, 484, 485, 652, 486, 487, 488,
	653, 489, 490, 491, 654, 492, 655, 493, 494, 0,
	495, 496, 0, 497, 498, 499, 500, 501, 502, 503,
	656, 504, 506, 505, 507, 0, 508, 0, 509, 510,
	511, 0, 0, 0, 0, 512, 0, 514, 515, 516,
	517, 513, 518, 519, 520, 521, 0, 522, 523, 524,
	0, 525, 526, 527, 528, 657, 529, 0, 530, 531,
	537, 538, 539, 532, 533, 540, 541, 542, 543, 544,
	0, 546, 547, 545, 548, 549, 550, 0, 551, 552,
	534, 535, 553, 554, 0, 555, 556, 557, 558, 559,
	560, 561, 658, 0, 562, 0, 563, 564, 565, 567,
	536, 568, 573, 574, 659, 569, 570, 571, 572, 660,
	576, 577, 0, 578, 579, 0, 575, 566, 0, 580,
	581, 582, 583, 584, 585, 586, 354, 587, 0, 588,
	661, 662, 663, 664, 0, 597, 0, 589, 590, 591,
	665, 592, 666, 0, 593, 594, 595, 596, 0, 598,
	599, 0, 0, 600, 601, 602, 604, 605, 603, 606,
	0, 607, 0, 0, 608, 609, 610, 667, 668, 669,
	0, 612, 611, 613, 670, 1452, 614, 265, 0, 0,
	0, 615, 616, 671, 617, 618, 619, 0, 0, 0,
	0, 0, 0, 0, 271, 273, 272, 274, 275, 276,
	277, 0, 278, 279, 0, 0, 0, 0, 0, 620,
	0, 0, 0, 0, 280, 281, 0, 282, 283, 284,
	285, 286, 287, 621, 622, 0, 288, 623, 289, 624,
	0, 625, 290, 291, 292, 293, 294, 295, 0, 0,
	0, 296, 626, 627, 628, 0, 297, 298, 629, 0,
	0, 0, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 0, 311, 0, 312,
	313, 314, 315, 316, 317, 0, 318, 319, 320, 0,
	321, 322, 323, 0, 0, 0, 0, 0, 0, 0,
	324, 325, 326, 327, 328, 0, 329, 630, 631, 0,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 340, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 347, 348, 632, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 633, 634, 360,
	0, 268, 0, 0, 0, 0, 0, 361, 362, 363,
	635, 0, 0, 0, 364, 0, 365, 366, 0, 0,
	0, 367, 368, 636, 637, 369, 370, 371, 372, 373,
	374, 375, 376, 377, 0, 378, 638, 0, 639, 379,
	0, 380, 381, 382, 383, 384, 1454, 641, 642, 463,
	0, 385, 386, 0, 387, 388, 389, 390, 391, 0,
	0, 0, 269, 392, 393, 394, 396, 0, 0, 395,
	643, 644, 0, 645, 0, 397, 398, 0, 646, 0,
	399, 400, 401, 0, 402, 0, 0, 0, 403, 404,
	405, 406, 407, 408, 0, 409, 411, 410, 0, 412,
	647, 0, 413, 414, 0, 0, 415, 0, 0, 0,
	416, 417, 420, 0, 0, 418, 419, 421, 422, 0,
	423, 424, 426, 429, 425, 427, 428, 430, 443, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 445, 0, 444, 0, 446, 447, 448, 453, 455,
	456, 451, 452, 454, 457, 458, 450, 0, 459, 449,
	0, 270, 0, 460, 461, 0, 648, 462, 649, 464,
	465, 0, 0, 466, 0, 0, 1219, 468, 469, 470,
	0, 0, 471, 472, 650, 0, 473, 0, 651, 474,
	475, 467, 476, 477, 478, 479, 480, 481, 482, 483,
	0, 484, 485, 652, 486, 487, 488, 653, 489, 490,
	491, 654, 492, 655, 493, 494, 0, 495, 496, 0,
	497, 498, 499, 500, 501, 502, 503, 656, 504, 506,
	505, 507, 0, 508, 0, 509, 510, 511, 0, 0,
	0, 0, 512, 0, 514, 515, 516, 517, 513, 518,
	519, 520, 521, 0, 522, 523, 524, 0, 525, 526,
	527, 528, 657, 529, 0, 530, 531, 537, 538, 539,
	532, 533, 540, 541, 542, 543, 544, 0, 546, 547,
	545, 548, 549, 550, 0, 551, 552, 534, 535, 553,
	554, 0, 555, 556, 557, 558, 559, 560, 561, 658,
	0, 562, 0, 563, 564, 565, 567, 536, 568, 573,
	574, 659, 569, 570, 571, 572, 660, 576, 577, 0,
	578, 579, 0, 575, 566, 0, 580, 581, 582, 583,
	584, 585, 586, 354, 587, 0, 588, 661, 662, 663,
	664, 0, 597, 0, 589, 590, 591, 665, 592, 666,
	0, 593, 594, 595, 596, 0, 598, 599, 0, 0,
	600, 601, 602, 604, 605, 603, 606, 0, 607, 0,
	0, 608, 609, 610, 667, 668, 669, 0, 612, 611,
	613, 670, 1359, 614, 265, 0, 0, 0, 615, 616,
	671, 617, 618, 619, 0, 0, 0, 0, 0, 0,
	0, 271, 273, 272, 274, 275, 276, 277, 0, 278,
	279, 0, 0, 0, 0, 0, 620, 0, 0, 0,
	0, 280, 281, 0, 282, 283, 284, 285, 286, 287,
	621, 622, 0, 288, 623, 289, 624, 0, 625, 290,
	291, 292, 293, 294, 295, 0, 0, 0, 296, 626,
	627, 628, 0, 297, 298, 629, 0, 0, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 311, 0, 312, 313, 314, 315,
	316, 317, 0, 318, 319, 320, 0, 321, 322, 323,
	0, 0, 0, 0, 0, 0, 0, 324, 325, 326,
	327, 328, 0, 329, 630, 631, 0, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 340, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 632, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 633, 634, 360, 0, 268, 0,
	0, 0, 0, 0, 361, 362, 363, 635, 0, 0,
	0, 364, 0, 365, 366, 0, 0, 0, 367, 368,
	636, 637, 369, 370, 371, 372, 373, 374, 375, 376,
	377, 0, 378, 638, 0, 639, 379, 0, 380, 381,
	382, 383, 384, 1361, 641, 642, 463, 0, 385, 386,
	0, 387, 388, 389, 390, 391, 0, 0, 0, 269,
	392, 393, 394, 396, 0, 0, 395, 643, 644, 0,
	645, 0, 397, 398, 0, 646, 0, 399, 400, 401,
	0, 402, 0, 0, 0, 403, 404, 405, 406, 407,
	408, 0, 409, 411, 410, 0, 412, 647, 0, 413,
	414, 0, 0, 415, 0, 0, 0, 416, 417, 420,
	0, 0, 418, 419, 421, 422, 0, 423, 424, 426,
	429, 425, 427, 428, 430, 443, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 442, 445, 0,
	444, 0, 446, 447, 448, 453, 455, 456, 451, 452,
	454, 457, 458, 450, 0, 459, 449, 0, 270, 0,
	460, 461, 0, 648, 462, 649, 464, 465, 0, 0,
	466, 0, 0, 1219, 468, 469, 470, 0, 0, 471,
	472, 650, 0, 473, 0, 651, 474, 475, 467, 476,
	477, 478, 479, 480, 481, 482, 483, 0, 484, 485,
	652, 486, 487, 488, 653, 489, 490, 491, 654, 492,
	655, 493, 494, 0, 495, 496, 0, 497, 498, 499,
	500, 501, 502, 503, 656, 504, 506, 505, 507, 0,
	508, 0, 509, 510, 511, 0, 0, 0, 0, 512,
	0, 514, 515, 516, 517, 513, 518, 519, 520, 521,
	0, 522, 523, 524, 0, 525, 526, 527, 528, 657,
	529, 0, 530, 531, 537, 538, 539, 532, 533, 540,
	541, 542, 543, 544, 0, 546, 547, 545, 548, 549,
	550, 0, 551, 552, 534, 535, 553, 554, 0, 555,
	556, 557, 558, 559, 560, 561, 658, 0, 562, 0,
	563, 564, 565, 567, 536, 568, 573, 574, 659, 569,
	570, 571, 572, 660, 576, 577, 0, 578, 579, 0,
	575, 566, 0, 580, 581, 582, 583, 584, 585, 586,
	354, 587, 0, 588, 661, 662, 663, 664, 0, 597,
	0, 589, 590, 591, 665, 592, 666, 0, 593, 594,
	595, 596, 0, 598, 599, 0, 0, 600, 601, 602,
	604, 605, 603, 606, 0, 607, 0, 0, 608, 609,
	610, 667, 668, 669, 0, 612, 611, 613, 670, 703,
	614, 265, 0, 0, 0, 615, 616, 671, 617, 618,
	619, 0, 0, 0, 0, 0, 0, 0, 271, 273,
	272, 274, 702, 276, 277, 692, 278, 279, 0, 0,
	0, 0, 0, 620, 0, 0, 0, 0, 280, 281,
	0, 282, 283, 284, 285, 286, 287, 621, 622, 0,
	288, 623, 289, 624, 0, 625, 290, 291, 292, 293,
	294, 295, 0, 0, 0, 296, 626, 627, 628, 0,
	297, 298, 629, 0, 0, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 695,
	318, 319, 320, 0, 321, 322, 323, 0, 0, 0,
	0, 0, 0, 0, 324, 325, 326, 327, 328, 0,
	329, 630, 631, 0, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 340, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	632, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 633, 634, 360, 0, 0, 0, 0, 0, 0,
	0, 361, 362, 363, 635, 0, 0, 0, 364, 0,
	365, 366, 0, 0, 0, 367, 368, 636, 637, 369,
	370, 371, 372, 373, 374, 375, 376, 377, 696, 378,
	638, 0, 639, 379, 0, 380, 381, 382, 383, 384,
	640, 641, 642, 463, 0, 385, 386, 0, 387, 388,
	389, 390, 391, 0, 0, 0, 0, 392, 393, 394,
	396, 0, 0, 395, 643, 644, 0, 645, 0, 397,
	398, 0, 646, 0, 399, 400, 401, 0, 402, 0,
	0, 0, 403, 404, 405, 406, 407, 408, 0, 409,
	411, 410, 0, 412, 647, 0, 413, 414, 0, 0,
	415, 0, 0, 0, 416, 417, 420, 0, 0, 418,
	419, 421, 422, 0, 423, 424, 426, 429, 425, 427,
	428, 430, 443, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 445, 0, 444, 0, 446,
	447, 448, 453, 455, 456, 451, 452, 454, 457, 458,
	450, 0, 459, 449, 0, 0, 0, 460, 461, 0,
	648, 462, 649, 464, 465, 0, 0, 466, 0, 0,
	0, 468, 469, 470, 0, 0, 471, 472, 650, 0,
	473, 0, 651, 474, 475, 467, 476, 477, 478, 479,
	480, 481, 482, 483, 0, 484, 485, 652, 486, 487,
	488, 653, 489, 490, 491, 654, 492, 655, 493, 494,
	0, 495, 496, 0, 497, 498, 499, 500, 501, 502,
	503, 656, 504, 506, 505, 507, 0, 508, 0, 509,
	510, 511, 0, 0, 0, 0, 512, 0, 514, 515,
	516, 517, 513, 518, 519, 520, 521, 0, 522, 523,
	524, 0, 525, 526, 527, 528, 657, 529, 0, 530,
	531, 537, 538, 539, 532, 533, 540, 541, 542, 543,
	544, 697, 546, 547, 545, 548, 549, 550, 0, 551,
	552, 534, 535, 553, 554, 0, 555, 556, 557, 558,
	559, 560, 561, 658, 0, 562, 0, 563, 564, 565,
	567, 536, 568, 573, 574, 659, 569, 570, 571, 572,
	660, 576, 577, 0, 578, 579, 0, 575, 566, 0,
	580, 581, 582, 583, 584, 585, 586, 354, 587, 0,
	588, 661, 662, 663, 664, 0, 597, 0, 589, 590,
	591, 665, 592, 666, 0, 593, 594, 595, 596, 0,
	598, 599, 0, 0, 600, 601, 602, 604, 605, 603,
	606, 0, 607, 0, 0, 608, 609, 610, 667, 668,
	669, 0, 612, 611, 613, 670, 691, 614, 265, 0,
	0, 0, 615, 616, 671, 617, 618, 619, 0, 0,
	0, 0, 0, 0, 0, 271, 273, 272, 274, 275,
	276, 277, 692, 278, 279, 0, 0, 0, 0, 0,
	620, 0, 0, 0, 0, 280, 281, 0, 282, 283,
	284, 285, 286, 287, 621, 622, 0, 288, 623, 289,
	624, 0, 625, 290, 291, 292, 293, 294, 295, 0,
	0, 0, 296, 626, 627, 628, 0, 297, 298, 629,
	0, 0, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 695, 318, 319, 320,
	0, 321, 322, 323, 0, 0, 0, 0, 0, 0,
	0, 324, 325, 326, 327, 328, 0, 329, 630, 631,
	0, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 340, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 632, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 633, 634,
	360, 0, 0, 0, 0, 0, 0, 0, 361, 362,
	363, 635, 0, 0, 0, 364, 0, 365, 366, 0,
	0, 0, 367, 368, 636, 637, 369, 370, 371, 372,
	373, 374, 375, 376, 377, 696, 378, 638, 0, 639,
	379, 0, 380, 381, 382, 383, 384, 640, 641, 642,
	463, 0, 385, 386, 0, 387, 388, 389, 390, 391,
	0, 0, 0, 0, 392, 393, 394, 396, 0, 0,
	395, 643, 644, 0, 645, 0, 397, 398, 0, 646,
	0, 399, 400, 401, 0, 402, 0, 0, 0, 403,
	404, 405, 406, 407, 408, 0, 409, 411, 410, 0,
	412, 647, 0, 413, 414, 0, 0, 415, 0, 0,
	0, 416, 417, 420, 0, 0, 418, 419, 421, 422,
	0, 423, 424, 426, 429, 425, 427, 428, 430, 443,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 445, 0, 444, 0, 446, 447, 448, 453,
	455, 456, 451, 452, 454, 457, 458, 450, 0, 459,
	449, 0, 0, 0, 460, 461, 0, 648, 462, 649,
	464, 465, 0, 0, 466, 0, 0, 0, 468, 469,
	470, 0, 0, 471, 472, 650, 0, 473, 0, 651,
	474, 475, 467, 476, 477, 478, 479, 480, 481, 482,
	483, 0, 484, 485, 652, 486, 487, 488, 653, 489,
	490, 491, 654, 492, 655, 493, 494, 0, 495, 496,
	0, 497, 498, 499, 500, 501, 502, 503, 656, 504,
	506, 505, 507, 0, 508, 0, 509, 510, 511, 0,
	0, 0, 0, 512, 0, 514, 515, 516, 517, 513,
	518, 519, 520, 521, 0, 522, 523, 524, 0, 525,
	526, 527, 528, 657, 529, 0, 530, 531, 537, 538,
	539, 532, 533, 540, 541, 542, 543, 544, 697, 546,
	547, 545, 548, 549, 550, 0, 551, 552, 534, 535,
	553, 554, 0, 555, 556, 557, 558, 559, 560, 561,
	658, 0, 562, 0, 563, 564, 565, 567, 536, 568,
	573, 574, 659, 569, 570, 571, 572, 660, 576, 577,
	0, 578, 579, 0, 575, 566, 0, 580, 581, 582,
	583, 584, 585, 586, 354, 587, 0, 588, 661, 662,
	663, 664, 0, 597, 0, 589, 590, 591, 665, 592,
	666, 0, 593, 594, 595, 596, 0, 598, 599, 0,
	0, 600, 601, 602, 604, 605, 603, 606, 0, 607,
	0, 0, 608, 609, 610, 667, 668, 669, 265, 612,
	611, 613, 670, 0, 614, 0, 0, 0, 0, 615,
	616, 671, 617, 618, 619, 271, 273, 272, 274, 275,
	276, 277, 0, 278, 279, 0, 0, 0, 0, 0,
	620, 0, 0, 0, 0, 280, 281, 0, 282, 283,
	284, 285, 286, 287, 621, 622, 0, 288, 623, 289,
	624, 0, 625, 290, 291, 292, 293, 294, 295, 0,
	0, 0, 296, 626, 627, 628, 0, 297, 298, 629,
	0, 0, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	0, 321, 322, 323, 0, 0, 0, 0, 0, 0,
	0, 324, 325, 326, 327, 328, 0, 329, 630, 631,
	0, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 340, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 632, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 633, 634,
	360, 0, 268, 0, 0, 0, 0, 0, 361, 362,
	363, 635, 0, 0, 0, 364, 0, 365, 366, 0,
	0, 0, 367, 368, 636, 637, 369, 370, 371, 372,
	373, 374, 375, 376, 377, 0, 378, 638, 0, 639,
	379, 0, 380, 381, 382, 383, 384, 640, 641, 642,
	463, 0, 385, 386, 0, 387, 388, 389, 390, 391,
	0, 0, 0, 269, 392, 393, 394, 396, 0, 0,
	395, 643, 644, 0, 645, 0, 397, 398, 0, 646,
	0, 399, 400, 401, 0, 402, 0, 0, 0, 403,
	404, 405, 406, 407, 408, 0, 409, 411, 410, 0,
	412, 647, 0, 413, 414, 0, 0, 415, 0, 0,
	0, 416, 417, 420, 0, 0, 418, 419, 421, 422,
	0, 423, 424, 426, 429, 425, 427, 428, 430, 443,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 445, 0, 444, 0, 446, 447, 448, 453,
	455, 456, 451, 452, 454, 457, 458, 450, 0, 459,
	449, 0, 270, 0, 460, 461, 0, 648, 462, 649,
	464, 465, 0, 0, 466, 0, 0, 1219, 468, 469,
	470, 0, 0, 471, 472, 650, 0, 473, 0, 651,
	474, 475, 467, 476, 477, 478, 479, 480, 481, 482,
	483, 0, 484, 485, 652, 486, 487, 488, 653, 489,
	490, 491, 654, 492, 655, 493, 494, 0, 495, 496,
	0, 497, 498, 499, 500, 501, 502, 503, 656, 504,
	506, 505, 507, 0, 508, 0, 509, 510, 511, 0,
	0, 0, 0, 512, 0, 514, 515, 516, 517, 513,
	518, 519, 520, 521, 0, 522, 523, 524, 0, 525,
	526, 527, 528, 657, 529, 0, 530, 531, 537, 538,
	539, 532, 533, 540, 541, 542, 543, 544, 0, 546,
	547, 545, 548, 549, 550, 0, 551, 552, 534, 535,
	553, 554, 0, 555, 556, 557, 558, 559, 560, 561,
	658, 0, 562, 0, 563, 564, 565, 567, 536, 568,
	573, 574, 659, 569, 570, 571, 572, 660, 576, 577,
	0, 578, 579, 0, 575, 566, 0, 580, 581, 582,
	583, 584, 585, 586, 354, 587, 0, 588, 661, 662,
	663, 664, 0, 597, 0, 589, 590, 591, 665, 592,
	666, 0, 593, 594, 595, 596, 0, 598, 599, 0,
	0, 600, 601, 602, 604, 605, 603, 606, 0, 607,
	0, 0, 608, 609, 610, 667, 668, 669, 265, 612,
	611, 613, 670, 0, 614, 0, 0, 0, 0, 615,
	616, 671, 617, 618, 619, 271, 273, 272, 274, 275,
	276, 277, 0, 278, 279, 0, 0, 0, 0, 0,
	620, 0, 0, 0, 0, 280, 281, 0, 282, 283,
	284, 285, 286, 287, 621, 622, 0, 288, 623, 289,
	624, 0, 625, 290, 291, 292, 293, 294, 295, 0,
	0, 0, 296, 626, 627, 628, 0, 297, 298, 629,
	0, 0, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	0, 321, 322, 323, 0, 0, 0, 0, 0, 0,
	0, 324, 325, 326, 327, 328, 0, 329, 630, 631,
	0, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 340, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 632, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 633, 634,
	360, 0, 268, 0, 0, 0, 0, 0, 361, 362,
	363, 635, 0, 0, 0, 364, 0, 365, 366, 0,
	0, 0, 367, 368, 636, 637, 369, 370, 371, 372,
	373, 374, 375, 376, 377, 0, 378, 638, 0, 639,
	379, 0, 380, 381, 382, 383, 384, 640, 641, 642,
	463, 0, 385, 386, 0, 387, 388, 389, 390, 391,
	0, 0, 0, 269, 392, 393, 394, 396, 0, 0,
	395, 643, 644, 0, 645, 0, 397, 398, 0, 646,
	0, 399, 400, 401, 0, 402, 0, 0, 0, 403,
	404, 405, 406, 407, 408, 0, 409, 411, 410, 0,
	412, 647, 0, 413, 414, 0, 0, 415, 0, 0,
	0, 416, 417, 420, 0, 0, 418, 419, 421, 422,
	0, 423, 424, 426, 429, 425, 427, 428, 430, 443,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 445, 0, 444, 0, 446, 447, 448, 453,
	455, 456, 451, 452, 454, 457, 458, 450, 3418, 459,
	449, 0, 270, 0, 460, 461, 0, 648, 462, 649,
	464, 465, 0, 0, 466, 0, 0, 0, 468, 469,
	470, 0, 0, 471, 472, 650, 0, 473, 0, 651,
	474, 475, 467, 476, 477, 478, 479, 480, 481, 482,
	483, 0, 484, 485, 652, 486, 487, 488, 653, 489,
	490, 491, 654, 492, 655, 493, 494, 0, 495, 496,
	0, 497, 498, 499, 500, 501, 502, 503, 656, 504,
	506, 505, 507, 0, 508, 0, 509, 510, 511, 0,
	0, 0, 0, 512, 0, 514, 515, 516, 517, 513,
	518, 519, 520, 521, 0, 522, 523, 524, 0, 525,
	526, 527, 528, 657, 529, 0, 530, 531, 537, 538,
	539, 532, 533, 540, 541, 542, 543, 544, 0, 546,
	547, 545, 548, 549, 550, 0, 551, 552, 534, 535,
	553, 554, 0, 555, 556, 557, 558, 559, 560, 561,
	658, 0, 562, 0, 563, 564, 565, 567, 536, 568,
	573, 574, 659, 569, 570, 571, 572, 660, 576, 577,
	0, 578, 579, 0, 575, 566, 0, 580, 581, 582,
	583, 584, 585, 586, 354, 587, 0, 588, 661, 662,
	663, 664, 0, 597, 0, 589, 590, 591, 665, 592,
	666, 0, 593, 594, 595, 596, 0, 598, 599, 0,
	0, 600, 601, 602, 604, 605, 603, 606, 0, 607,
	0, 0, 608, 609, 610, 667, 668, 669, 0, 612,
	611, 613, 670, 2969, 614, 265, 0, 0, 0, 615,
	616, 671, 617, 618, 619, 0, 0, 0, 0, 0,
	0, 0, 271, 273, 272, 274, 275, 276, 277, 0,
	278, 279, 0, 0, 0, 0, 0, 620, 0, 0,
	0, 0, 280, 281, 0, 282, 283, 284, 285, 286,
	287, 621, 622, 0, 288, 623, 289, 624, 0, 625,
	290, 291, 292, 293, 294, 295, 0, 0, 0, 296,
	626, 627, 628, 0, 297, 298, 629, 0, 0, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 0, 321, 322,
	323, 0, 0, 0, 0, 0, 0, 0, 324, 325,
	326, 327, 328, 0, 329, 630, 631, 0, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 340, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 632, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 633, 634, 360, 0, 268,
	0, 0, 0, 0, 0, 361, 362, 363, 635, 0,
	0, 0, 364, 0, 365, 366, 0, 0, 0, 367,
	368, 636, 637, 369, 370, 371, 372, 373, 374, 375,
	376, 377, 0, 378, 638, 0, 639, 379, 0, 380,
	381, 382, 383, 384, 2968, 641, 642, 463, 0, 385,
	386, 0, 387, 388, 389, 390, 391, 0, 0, 0,
	269, 392, 393, 394, 396, 0, 0, 395, 643, 644,
	0, 645, 0, 397, 398, 0, 646, 0, 399, 400,
	401, 0, 402, 0, 0, 0, 403, 404, 405, 406,
	407, 408, 0, 409, 411, 410, 0, 412, 647, 0,
	413, 414, 0, 0, 415, 0, 0, 0, 416, 417,
	420, 0, 0, 418, 419, 421, 422, 0, 423, 424,
	426, 429, 425, 427, 428, 430, 443, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 445,
	0, 444, 0, 446, 447, 448, 453, 455, 456, 451,
	452, 454, 457, 458, 450, 0, 459, 449, 0, 270,
	0, 460, 461, 0, 648, 462, 649, 464, 465, 0,
	0, 466, 0, 0, 0, 468, 469, 470, 0, 0,
	471, 472, 650, 0, 473, 0, 651, 474, 475, 467,
	476, 477, 478, 479, 480, 481, 482, 483, 0, 484,
	485, 652, 486, 487, 488, 653, 489, 490, 491, 654,
	492, 655, 493, 494, 0, 495, 496, 0, 497, 498,
	499, 500, 501, 502, 503, 656, 504, 506, 505, 507,
	0, 508, 0, 509, 510, 511, 0, 0, 0, 0,
	512, 0, 514, 515, 516, 517, 513, 518, 519, 520,
	521, 0, 522, 523, 524, 0, 525, 526, 527, 528,
	657, 529, 0, 530, 531, 537, 538, 539, 532, 533,
	540, 541, 542, 543, 544, 0, 546, 547, 545, 548,
	549, 550, 0, 551, 552, 534, 535, 553, 554, 0,
	555, 556, 557, 558, 559, 560, 561, 658, 0, 562,
	0, 563, 564, 565, 567, 536, 568, 573, 574, 659,
	569, 570, 571, 572, 660, 576, 577, 0, 578, 579,
	0, 575, 566, 0, 580, 581, 582, 583, 584, 585,
	586, 354, 587, 0, 588, 661, 662, 663, 664, 0,
	597, 0, 589, 590, 591, 665, 592, 666, 0, 593,
	594, 595, 596, 0, 598, 599, 0, 0, 600, 601,
	602, 604, 605, 603, 606, 0, 607, 0, 0, 608,
	609, 610, 667, 668, 669, 0, 612, 611, 613, 670,
	2278, 614, 265, 0, 0, 0, 615, 616, 671, 617,
	618, 619, 0, 0, 0, 0, 0, 0, 0, 271,
	273, 272, 274, 275, 276, 277, 0, 278, 279, 0,
	0, 0, 0, 0, 620, 0, 0, 0, 0, 280,
	281, 0, 282, 283, 284, 285, 286, 287, 621, 622,
	0, 288, 623, 289, 624, 0, 625, 290, 291, 292,
	293, 294, 295, 0, 0, 0, 296, 626, 627, 628,
	0, 297, 298, 629, 0, 0, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 0, 321, 322, 323, 0, 0,
	0, 0, 0, 0, 0, 324, 325, 326, 327, 328,
	0, 329, 630, 631, 0, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 340,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 632, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 633, 634, 360, 0, 268, 0, 0, 0,
	0, 0, 361, 362, 363, 635, 0, 0, 0, 364,
	0, 365, 366, 0, 0, 0, 367, 368, 636, 637,
	369, 370, 371, 372, 373, 374, 375, 376, 377, 0,
	378, 638, 0, 639, 379, 0, 380, 381, 382, 383,
	384, 640, 641, 642, 463, 0, 385, 386, 0, 387,
	388, 389, 390, 391, 0, 0, 0, 269, 392, 393,
	394, 396, 0, 0, 395, 643, 644, 0, 645, 0,
	397, 398, 0, 646, 0, 399, 400, 401, 0, 402,
	0, 0, 0, 403, 404, 405, 406, 407, 408, 0,
	409, 411, 410, 0, 412, 647, 0, 413, 414, 0,
	0, 415, 0, 0, 0, 416, 417, 420, 0, 0,
	418, 419, 421, 422, 0, 423, 424, 426, 429, 425,
	427, 428, 430, 443, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 445, 0, 444, 0,
	446, 447, 448, 453, 455, 456, 451, 452, 454, 457,
	458, 450, 0, 459, 449, 0, 270, 0, 460, 461,
	0, 648, 462, 649, 464, 465, 0, 0, 466, 0,
	0, 0, 468, 469, 470, 0, 0, 471, 472, 650,
	0, 473, 0, 651, 474, 475, 467, 476, 477, 478,
	479, 480, 481, 482, 483, 0, 484, 485, 652, 486,
	487, 488, 653, 489, 490, 491, 654, 492, 655, 493,
	494, 0, 495, 496, 0, 497, 498, 499, 500, 501,
	502, 503, 656, 504, 506, 505, 507, 0, 508, 0,
	509, 510, 511, 0, 0, 0, 0, 512, 0, 514,
	515, 516, 517, 513, 518, 519, 520, 521, 0, 522,
	523, 524, 0, 525, 526, 527, 528, 657, 529, 0,
	530, 531, 537, 538, 539, 532, 533, 540, 541, 542,
	543, 544, 0, 546, 547, 545, 548, 549, 550, 0,
	551, 552, 534, 535, 553, 554, 0, 555, 556, 557,
	558, 559, 560, 561, 658, 0, 562, 0, 563, 564,
	565, 567, 536, 568, 573, 574, 659, 569, 570, 571,
	572, 660, 576, 577, 0, 578, 579, 0, 575, 566,
	0, 580, 581, 582, 583, 584, 585, 586, 354, 587,
	0, 588, 661, 662, 663, 664, 0, 597, 0, 589,
	590, 591, 665, 592, 666, 0, 593, 594, 595, 596,
	0, 598, 599, 0, 0, 600, 601, 602, 604, 605,
	603, 606, 0, 607, 0, 0, 608, 609, 610, 667,
	668, 669, 265, 612, 611, 613, 670, 0, 614, 0,
	0, 0, 0, 615, 616, 671, 617, 618, 619, 271,
	273, 272, 274, 275, 276, 277, 0, 278, 279, 0,
	0, 0, 0, 0, 620, 0, 0, 0, 0, 280,
	281, 0, 282, 283, 284, 285, 286, 287, 621, 622,
	0, 288, 623, 289, 624, 0, 625, 290, 291, 292,
	293, 294, 295, 0, 0, 0, 296, 626, 627, 628,
	0, 297, 298, 629, 0, 0, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 0, 321, 322, 323, 0, 0,
	0, 0, 0, 0, 0, 324, 325, 326, 327, 328,
	0, 329, 630, 631, 0, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 340,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 632, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 633, 634, 360, 0, 268, 0, 0, 0,
	0, 0, 361, 362, 363, 635, 0, 0, 0, 364,
	0, 365, 366, 0, 0, 0, 367, 368, 636, 637,
	369, 370, 371, 372, 373, 374, 375, 376, 377, 0,
	378, 638, 0, 639, 379, 0, 380, 381, 382, 383,
	384, 640, 641, 642, 463, 0, 385, 386, 0, 387,
	388, 389, 390, 391, 0, 0, 0, 269, 392, 393,
	394, 396, 0, 0, 395, 643, 644, 0, 645, 0,
	397, 398, 0, 646, 0, 399, 400, 401, 0, 402,
	0, 0, 0, 403, 404, 405, 406, 407, 408, 0,
	409, 411, 410, 0, 412, 647, 0, 413, 414, 0,
	0, 415, 0, 0, 0, 416, 417, 420, 0, 0,
	418, 419, 421, 422, 0, 423, 424, 426, 429, 425,
	427, 428, 430, 443, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 445, 0, 444, 0,
	446, 447, 448, 453, 455, 456, 451, 452, 454, 457,
	458, 450, 0, 459, 449, 0, 270, 0, 460, 461,
	0, 648, 462, 649, 464, 465, 0, 0, 466, 0,
	0, 0, 468, 469, 470, 0, 0, 471, 472, 650,
	0, 473, 0, 651, 474, 475, 467, 476, 477, 478,
	479, 480, 481, 482, 483, 0, 484, 485, 652, 486,
	487, 488, 653, 489, 490, 491, 654, 492, 655, 493,
	494, 0, 495, 496, 0, 497, 498, 499, 500, 501,
	502, 503, 656, 504, 506, 505, 507, 0, 508, 0,
	509, 510, 511, 0, 0, 0, 0, 512, 0, 514,
	515, 516, 517, 513, 518, 519, 520, 521, 0, 522,
	523, 524, 0, 525, 526, 527, 528, 657, 529, 0,
	530, 531, 537, 538, 539, 532, 533, 540, 541, 542,
	543, 544, 0, 546, 547, 545, 548, 549, 550, 0,
	551, 552, 534, 535, 553, 554, 0, 555, 556, 557,
	558, 559, 560, 561, 658, 0, 562, 0, 563, 564,
	565, 567, 536, 568, 573, 574, 659, 569, 570, 571,
	572, 660, 576, 577, 0, 578, 579, 0, 575, 566,
	2219, 580, 581, 582, 583, 584, 585, 586, 354, 587,
	0, 588, 661, 662, 663, 664, 0, 597, 0, 589,
	590, 591, 665, 592, 666, 0, 593, 594, 595, 596,
	0, 598, 599, 0, 0, 600, 601, 602, 604, 605,
	603, 606, 0, 607, 0, 0, 608, 609, 610, 667,
	668, 669, 0, 612, 611, 613, 670, 2226, 614, 265,
	0, 0, 0, 615, 616, 671, 617, 618, 619, 0,
	0, 0, 0, 0, 0, 0, 271, 273, 272, 274,
	275, 276, 277, 0, 278, 279, 0, 0, 0, 0,
	0, 620, 0, 0, 0, 0, 280, 281, 0, 282,
	283, 284, 285, 286, 287, 621, 622, 0, 288, 623,
	289, 624, 0, 625, 290, 291, 292, 293, 294, 295,
	0, 0, 0, 296, 626, 627, 628, 0, 297, 298,
	629, 0, 0, 0, 299, 300, 301, 302, 303, 304,
	305, 0, 0, 307, 308, 309, 306, 310, 0, 311,
	0, 312, 313, 314, 315, 316, 317, 0, 318, 319,
	320, 0, 321, 322, 323, 0, 0, 0, 0, 0,
	0, 0, 324, 325, 326, 327, 328, 0, 329, 630,
	631, 0, 333, 330, 331, 0, 334, 332, 335, 0,
	336, 337, 338, 0, 0, 339, 340, 341, 0, 342,
	343, 0, 344, 345, 346, 0, 347, 348, 632, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 633,
	634, 360, 0, 268, 0, 0, 0, 0, 0, 361,
	362, 363, 635, 0, 0, 0, 364, 0, 365, 366,
	0, 0, 0, 367, 368, 636, 637, 369, 370, 371,
	372, 373, 374, 375, 376, 377, 0, 378, 638, 0,
	639, 379, 0, 380, 381, 382, 383, 384, 2225, 641,
	642, 463, 0, 385, 386, 0, 387, 388, 389, 390,
	391, 0, 0, 0, 269, 392, 393, 394, 396, 0,
	0, 395, 643, 644, 0, 645, 0, 397, 398, 0,
	646, 0, 399, 400, 401, 0, 402, 0, 0, 0,
	403, 404, 405, 406, 407, 408, 0, 409, 411, 410,
	0, 412, 647, 0, 413, 414, 0, 0, 415, 0,
	0, 0, 416, 417, 420, 0, 0, 418, 419, 421,
	422, 0, 423, 424, 426, 429, 425, 427, 428, 430,
	443, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 445, 0, 444, 0, 446, 447, 448,
	453, 455, 456, 451, 452, 454, 457, 458, 450, 0,
	459, 449, 0, 270, 0, 460, 461, 0, 648, 462,
	649, 464, 465, 0, 0, 466, 0, 0, 0, 468,
	469, 470, 0, 0, 471, 472, 650, 0, 473, 0,
	651, 474, 475, 467, 476, 477, 478, 479, 480, 481,
	482, 483, 0, 484, 485, 652, 486, 487, 488, 653,
	489, 490, 491, 654, 492, 655, 493, 494, 0, 495,
	496, 0, 497, 498, 499, 500, 501, 502, 503, 656,
	504, 506, 505, 507, 0, 508, 0, 509, 510, 511,
	0, 0, 0, 0, 512, 0, 514, 515, 516, 517,
	513, 518, 519, 520, 521, 0, 522, 523, 524, 0,
	525, 526, 527, 528, 657, 529, 0, 530, 531, 537,
	538, 539, 532, 533, 540, 541, 542, 543, 544, 0,
	546, 547, 545, 548, 549, 550, 0, 551, 552, 534,
	535, 553, 554, 0, 555, 556, 557, 558, 559, 560,
	561, 658, 0, 562, 0, 563, 564, 565, 567, 536,
	568, 573, 574, 659, 569, 570, 571, 572, 660, 576,
	577, 0, 578, 579, 0, 575, 566, 0, 580, 581,
	582, 583, 584, 585, 586, 354, 587, 0, 588, 661,
	662, 663, 664, 0, 597, 0, 589, 590, 591, 665,
	592, 666, 0, 593, 594, 595, 596, 0, 598, 599,
	0, 0, 600, 601, 602, 604, 605, 603, 606, 0,
	607, 0, 0, 608, 609, 610, 667, 668, 669, 0,
	612, 611, 613, 670, 2212, 614, 265, 0, 0, 0,
	615, 616, 671, 617, 618, 619, 0, 0, 0, 0,
	0, 0, 0, 271, 273, 272, 274, 275, 276, 277,
	0, 278, 279, 0, 0, 0, 0, 0, 620, 0,
	0, 0, 0, 280, 281, 0, 282, 283, 284, 285,
	286, 287, 621, 622, 0, 288, 623, 289, 624, 0,
	625, 290, 291, 292, 293, 294, 295, 0, 0, 0,
	296, 626, 627, 628, 0, 297, 298, 629, 0, 0,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 0, 321,
	322, 323, 0, 0, 0, 0, 0, 0, 0, 324,
	325, 326, 327, 328, 0, 329, 630, 631, 0, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 340, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 632, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 633, 634, 360, 0,
	268, 0, 0, 0, 0, 0, 361, 362, 363, 635,
	0, 0, 0, 364, 0, 365, 366, 0, 0, 0,
	367, 368, 636, 637, 369, 370, 371, 372, 373, 374,
	375, 376, 377, 0, 378, 638, 0, 639, 379, 0,
	380, 381, 382, 383, 384, 2214, 641, 642, 463, 0,
	385, 386, 0, 387, 388, 389, 390, 391, 0, 0,
	0, 269, 392, 393, 394, 396, 0, 0, 395, 643,
	644, 0, 645, 0, 397, 398, 0, 646, 0, 399,
	400, 401, 0, 402, 0, 0, 0, 403, 404, 405,
	406, 407, 408, 0, 409, 411, 410, 0, 412, 647,
	0, 413, 414, 0, 0, 415, 0, 0, 0, 416,
	417, 420, 0, 0, 418, 419, 421, 422, 0, 423,
	424, 426, 429, 425, 427, 428, 430, 443, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	445, 0, 444, 0, 446, 447, 448, 453, 455, 456,
	451, 452, 454, 457, 458, 450, 0, 459, 449, 0,
	270, 0, 460, 461, 0, 648, 462, 649, 464, 465,
	0, 0, 466, 0, 0, 0, 468, 469, 470, 0,
	0, 471, 472, 650, 0, 473, 0, 651, 474, 475,
	467, 476, 477, 478, 479, 480, 481, 482, 483, 0,
	484, 485, 652, 486, 487, 488, 653, 489, 490, 491,
	654, 492, 655, 493, 494, 0, 495, 496, 0, 497,
	498, 499, 500, 501, 502, 503, 656, 504, 506, 505,
	507, 0, 508, 0, 509, 510, 511, 0, 0, 0,
	0, 512, 0, 514, 515, 516, 517, 513, 518, 519,
	520, 521, 0, 522, 523, 524, 0, 525, 526, 527,
	528, 657, 529, 0, 530, 531, 537, 538, 539, 532,
	533, 540, 541, 542, 543, 544, 0, 546, 547, 545,
	548, 549, 550, 0, 551, 552, 534, 535, 553, 554,
	0, 555, 556, 557, 558, 559, 560, 561, 658, 0,
	562, 0, 563, 564, 565, 567, 536, 568, 573, 574,
	659, 569, 570, 571, 572, 660, 576, 577, 0, 578,
	579, 0, 575, 566, 0, 580, 581, 582, 583, 584,
	585, 586, 354, 587, 0, 588, 661, 662, 663, 664,
	0, 597, 0, 589, 590, 591, 665, 592, 666, 0,
	593, 594, 595, 596, 0, 598, 599, 0, 0, 600,
	601, 602, 604, 605, 603, 606, 0, 607, 0, 0,
	608, 609, 610, 667, 668, 669, 265, 612, 611, 613,
	670, 0, 614, 0, 0, 0, 0, 615, 616, 671,
	617, 618, 619, 271, 273, 272, 274, 275, 276, 277,
	0, 278, 279, 0, 0, 0, 0, 0, 620, 0,
	0, 0, 0, 280, 281, 0, 282, 283, 284, 285,
	286, 287, 621, 622, 0, 288, 623, 289, 624, 0,
	625, 290, 291, 292, 293, 294, 295, 0, 0, 0,
	296, 626, 627, 628, 0, 297, 298, 629, 0, 0,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 0, 321,
	322, 323, 0, 0, 0, 0, 0, 0, 0, 324,
	325, 326, 327, 328, 0, 329, 630, 631, 0, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 340, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 632, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 633, 634, 360, 0,
	268, 0, 0, 0, 0, 0, 361, 362, 363, 635,
	0, 0, 0, 364, 0, 365, 366, 0, 0, 0,
	367, 368, 636, 637, 369, 370, 371, 372, 373, 374,
	375, 376, 377, 0, 378, 638, 0, 639, 379, 0,
	380, 381, 382, 383, 384, 2182, 641, 642, 463, 0,
	385, 386, 0, 387, 388, 389, 390, 391, 0, 0,
	0, 269, 392, 393, 394, 396, 0, 0, 395, 643,
	644, 0, 645, 0, 397, 398, 0, 646, 0, 399,
	400, 401, 0, 402, 0, 0, 0, 403, 404, 405,
	406, 407, 408, 0, 409, 411, 410, 0, 412, 647,
	0, 413, 414, 0, 0, 415, 0, 0, 0, 416,
	417, 420, 0, 0, 418, 419, 421, 422, 0, 423,
	424, 426, 429, 425, 427, 428, 430, 443, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	445, 0, 444, 0, 446, 447, 448, 453, 455, 456,
	451, 452, 454, 457, 458, 450, 0, 459, 449, 0,
	270, 0, 460, 461, 0, 648, 462, 649, 464, 465,
	0, 0, 466, 0, 0, 1219, 468, 469, 470, 0,
	0, 471, 472, 650, 0, 473, 0, 651, 474, 475,
	467, 476, 477, 478, 479, 480, 481, 482, 483, 0,
	484, 485, 652, 486, 487, 488, 653, 489, 490, 491,
	654, 492, 655, 493, 494, 0, 495, 496, 0, 497,
	498, 499, 500, 501, 502, 503, 656, 504, 506, 505,
	507, 0, 508, 0, 509, 510, 511, 0, 0, 0,
	0, 512, 0, 514, 515, 516, 517, 513, 518, 519,
	520, 521, 0, 522, 523, 524, 0, 525, 526, 527,
	528, 657, 529, 0, 530, 531, 537, 538, 539, 532,
	533, 540, 541, 542, 543, 544, 0, 546, 547, 545,
	548, 549, 550, 0, 551, 552, 534, 535, 553, 554,
	0, 555, 556, 557, 558, 559, 560, 561, 658, 0,
	562, 0, 563, 564, 565, 567, 536, 568, 573, 574,
	659, 569, 570, 571, 572, 660, 576, 577, 0, 578,
	579, 0, 575, 566, 0, 580, 581, 582, 583, 584,
	585, 586, 354, 587, 0, 588, 661, 662, 663, 664,
	0, 597, 0, 589, 590, 591, 665, 592, 666, 0,
	593, 594, 595, 596, 0, 598, 599, 0, 0, 600,
	601, 602, 604, 605, 603, 606, 0, 607, 0, 0,
	608, 609, 610, 667, 668, 669, 0, 612, 611, 613,
	670, 1557, 614, 265, 0, 0, 0, 615, 616, 671,
	617, 618, 619, 0, 0, 0, 0, 0, 0, 0,
	271, 273, 272, 274, 275, 276, 277, 0, 278, 279,
	0, 0, 0, 0, 0, 620, 0, 0, 0, 0,
	280, 281, 0, 282, 283, 284, 285, 286, 287, 621,
	622, 0, 288, 623, 289, 624, 0, 625, 290, 291,
	292, 293, 294, 295, 0, 0, 0, 296, 626, 627,
	628, 0, 297, 298, 629, 0, 0, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 316,
	317, 0, 318, 319, 320, 0, 321, 322, 323, 0,
	0, 0, 0, 0, 0, 0, 324, 325, 326, 327,
	328, 0, 329, 630, 631, 0, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	340, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 632, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 633, 634, 360, 0, 268, 0, 0,
	0, 0, 0, 361, 362, 363, 635, 0, 0, 0,
	364, 0, 365, 366, 0, 0, 0, 367, 368, 636,
	637, 369, 370, 371, 372, 373, 374, 375, 376, 377,
	0, 378, 638, 0, 639, 379, 0, 380, 381, 382,
	383, 384, 1556, 641, 642, 463, 0, 385, 386, 0,
	387, 388, 389, 390, 391, 0, 0, 0, 269, 392,
	393, 394, 396, 0, 0, 395, 643, 644, 0, 645,
	0, 397, 398, 0, 646, 0, 399, 400, 401, 0,
	402, 0, 0, 0, 403, 404, 405, 406, 407, 408,
	0, 409, 411, 410, 0, 412, 647, 0, 413, 414,
	0, 0, 415, 0, 0, 0, 416, 417, 420, 0,
	0, 418, 419, 421, 422, 0, 423, 424, 426, 429,
	425, 427, 428, 430, 443, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 445, 0, 444,
	0, 446, 447, 448, 453, 455, 456, 451, 452, 454,
	457, 458, 450, 0, 459, 449, 0, 270, 0, 460,
	461, 0, 648, 462, 649, 464, 465, 0, 0, 466,
	0, 0, 0, 468, 469, 470, 0, 0, 471, 472,
	650, 0, 473, 0, 651, 474, 475, 467, 476, 477,
	478, 479, 480, 481, 482, 483, 0, 484, 485, 652,
	486, 487, 488, 653, 489, 490, 491, 654, 492, 655,
	493, 494, 0, 495, 496, 0, 497, 498, 499, 500,
	501, 502, 503, 656, 504, 506, 505, 507, 0, 508,
	0, 509, 510, 511, 0, 0, 0, 0, 512, 0,
	514, 515, 516, 517, 513, 518, 519, 520, 521, 0,
	522, 523, 524, 0, 525, 526, 527, 528, 657, 529,
	0, 530, 531, 537, 538, 539, 532, 533, 540, 541,
	542, 543, 544, 0, 546, 547, 545, 548, 549, 550,
	0, 551, 552, 534, 535, 553, 554, 0, 555, 556,
	557, 558, 559, 560, 561, 658, 0, 562, 0, 563,
	564, 565, 567, 536, 568, 573, 574, 659, 569, 570,
	571, 572, 660, 576, 577, 0, 578, 579, 0, 575,
	566, 0, 580, 581, 582, 583, 584, 585, 586, 354,
	587, 0, 588, 661, 662, 663, 664, 0, 597, 0,
	589, 590, 591, 665, 592, 666, 0, 593, 594, 595,
	596, 0, 598, 599, 0, 0, 600, 601, 602, 604,
	605, 603, 606, 0, 607, 0, 0, 608, 609, 610,
	667, 668, 669, 0, 612, 611, 613, 670, 1472, 614,
	265, 0, 0, 0, 615, 616, 671, 617, 618, 619,
	0, 0, 0, 0, 0, 0, 0, 271, 273, 272,
	274, 275, 276, 277, 0, 278, 279, 0, 0, 0,
	0, 0, 620, 0, 0, 0, 0, 280, 281, 0,
	282, 283, 284, 285, 286, 287, 621, 622, 0, 288,
	623, 289, 624, 0, 625, 290, 291, 292, 293, 294,
	295, 0, 0, 0, 296, 626, 627, 628, 0, 297,
	298, 629, 0, 0, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 0, 321, 322, 323, 0, 0, 0, 0,
	0, 0, 0, 324, 325, 326, 327, 328, 0, 329,
	630, 631, 0, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 340, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 632,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	633, 634, 360, 0, 268, 0, 0, 0, 0, 0,
	361, 362, 363, 635, 0, 0, 0, 364, 0, 365,
	366, 0, 0, 0, 367, 368, 636, 637, 369, 370,
	371, 372, 373, 374, 375, 376, 377, 0, 378, 638,
	0, 639, 379, 0, 380, 381, 382, 383, 384, 640,
	641, 642, 463, 0, 385, 386, 0, 387, 388, 389,
	390, 391, 0, 0, 0, 269, 392, 393, 394, 396,
	0, 0, 395, 643, 644, 0, 645, 0, 397, 398,
	0, 646, 0, 399, 400, 401, 0, 402, 0, 0,
	0, 403, 404, 405, 406, 407, 408, 0, 409, 411,
	410, 0, 412, 647, 0, 413, 414, 0, 0, 415,
	0, 0, 0, 416, 417, 420, 0, 0, 418, 419,
	421, 422, 0, 423, 424, 426, 429, 425, 427, 428,
	430, 443, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 442, 445, 0, 444, 0, 446, 447,
	448, 453, 455, 456, 451, 452, 454, 457, 458, 450,
	0, 459, 449, 0, 270, 0, 460, 461, 0, 648,
	462, 649, 464, 465, 0, 0, 466, 0, 0, 0,
	468, 469, 470, 0, 0, 471, 472, 650, 0, 473,
	0, 651, 474, 475, 467, 476, 477, 478, 479, 480,
	481, 482, 483, 0, 484, 485, 652, 486, 487, 488,
	653, 489, 490, 491, 654, 492, 655, 493, 494, 0,
	495, 496, 0, 497, 498, 499, 500, 501, 502, 503,
	656, 504, 506, 505, 507, 0, 508, 0, 509, 510,
	511, 0, 0, 0, 0, 512, 0, 514, 515, 516,
	517, 513, 518, 519, 520, 521, 0, 522, 523, 524,
	0, 525, 526, 527, 528, 657, 529, 0, 530, 531,
	537, 538, 539, 532, 533, 540, 541, 542, 543, 544,
	0, 546, 547, 545, 548, 549, 550, 0, 551, 552,
	534, 535, 553, 554, 0, 555, 556, 557, 558, 559,
	560, 561, 658, 0, 562, 0, 563, 564, 565, 567,
	536, 568, 573, 574, 659, 569, 570, 571, 572, 660,
	576, 577, 0, 578, 579, 0, 575, 566, 0, 580,
	581, 582, 583, 584, 585, 586, 354, 587, 0, 588,
	661, 662, 663, 664, 0, 597, 0, 589, 590, 591,
	665, 592, 666, 0, 593, 594, 595, 596, 0, 598,
	599, 0, 0, 600, 601, 602, 604, 605, 603, 606,
	0, 607, 0, 0, 608, 609, 610, 667, 668, 669,
	0, 612, 611, 613, 670, 1465, 614, 265, 0, 0,
	0, 615, 616, 671, 617, 618, 619, 0, 0, 0,
	0, 0, 0, 0, 271, 273, 272, 274, 275, 276,
	277, 0, 278, 279, 0, 0, 0, 0, 0, 620,
	0, 0, 0, 0, 280, 281, 0, 282, 283, 284,
	285, 286, 287, 621, 622, 0, 288, 623, 289, 624,
	0, 625, 290, 291, 292, 293, 294, 295, 0, 0,
	0, 296, 626, 627, 628, 0, 297, 298, 629, 0,
	0, 0, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 0, 311, 0, 312,
	313, 314, 315, 316, 317, 0, 318, 319, 320, 0,
	321, 322, 323, 0, 0, 0, 0, 0, 0, 0,
	324, 325, 326, 327, 328, 0, 329, 630, 631, 0,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 340, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 347, 348, 632, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 633, 634, 360,
	0, 268, 0, 0, 0, 0, 0, 361, 362, 363,
	635, 0, 0, 0, 364, 0, 365, 366, 0, 0,
	0, 367, 368, 636, 637, 369, 370, 371, 372, 373,
	374, 375, 376, 377, 0, 378, 638, 0, 639, 379,
	0, 380, 381, 382, 383, 384, 1467, 641, 642, 463,
	0, 385, 386, 0, 387, 388, 389, 390, 391, 0,
	0, 0, 269, 392, 393, 394, 396, 0, 0, 395,
	643, 644, 0, 645, 0, 397, 398, 0, 646, 0,
	399, 400, 401, 0, 402, 0, 0, 0, 403, 404,
	405, 406, 407, 408, 0, 409, 411, 410, 0, 412,
	647, 0, 413, 414, 0, 0, 415, 0, 0, 0,
	416, 417, 420, 0, 0, 418, 419, 421, 422, 0,
	423, 424, 426, 429, 425, 427, 428, 430, 443, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 445, 0, 444, 0, 446, 447, 448, 453, 455,
	456, 451, 452, 454, 457, 458, 450, 0, 459, 449,
	0, 270, 0, 460, 461, 0, 648, 462, 649, 464,
	465, 0, 0, 466, 0, 0, 0, 468, 469, 470,
	0, 0, 471, 472, 650, 0, 473, 0, 651, 474,
	475, 467, 476, 477, 478, 479, 480, 481, 482, 483,
	0, 484, 485, 652, 486, 487, 488, 653, 489, 490,
	491, 654, 492, 655, 493, 494, 0, 495, 496, 0,
	497, 498, 499, 500, 501, 502, 503, 656, 504, 506,
	505, 507, 0, 508, 0, 509, 510, 511, 0, 0,
	0, 0, 512, 0, 514, 515, 516, 517, 513, 518,
	519, 520, 521, 0, 522, 523, 524, 0, 525, 526,
	527, 528, 657, 529, 0, 530, 531, 537, 538, 539,
	532, 533, 540, 541, 542, 543, 544, 0, 546, 547,
	545, 548, 549, 550, 0, 551, 552, 534, 535, 553,
	554, 0, 555, 556, 557, 558, 559, 560, 561, 658,
	0, 562, 0, 563, 564, 565, 567, 536, 568, 573,
	574, 659, 569, 570, 571, 572, 660, 576, 577, 0,
	578, 579, 0, 575, 566, 0, 580, 581, 582, 583,
	584, 585, 586, 354, 587, 0, 588, 661, 662, 663,
	664, 0, 597, 0, 589, 590, 591, 665, 592, 666,
	0, 593, 594, 595, 596, 0, 598, 599, 0, 0,
	600, 601, 602, 604, 605, 603, 606, 0, 607, 0,
	0, 608, 609, 610, 667, 668, 669, 0, 612, 611,
	613, 670, 1292, 614, 265, 0, 0, 0, 615, 616,
	671, 617, 618, 619, 0, 0, 0, 0, 0, 0,
	0, 271, 273, 272, 274, 275, 276, 277, 0, 278,
	279, 0, 0, 0, 0, 0, 620, 0, 0, 0,
	0, 280, 281, 0, 282, 283, 284, 285, 286, 287,
	621, 622, 0, 288, 623, 289, 624, 0, 625, 290,
	291, 292, 293, 294, 295, 0, 0, 0, 296, 626,
	627, 628, 0, 297, 298, 629, 0, 0, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 311, 0, 312, 313, 314, 315,
	316, 317, 0, 318, 319, 320, 0, 321, 322, 323,
	0, 0, 0, 0, 0, 0, 0, 324, 325, 326,
	327, 328, 0, 329, 630, 631, 0, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 340, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 632, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 633, 634, 360, 0, 268, 0,
	0, 0, 0, 0, 361, 362, 363, 635, 0, 0,
	0, 364, 0, 365, 366, 0, 0, 0, 367, 368,
	636, 637, 369, 370, 371, 372, 373, 374, 375, 376,
	377, 0, 378, 638, 0, 639, 379, 0, 380, 381,
	382, 383, 384, 1291, 641, 642, 463, 0, 385, 386,
	0, 387, 388, 389, 390, 391, 0, 0, 0, 269,
	392, 393, 394, 396, 0, 0, 395, 643, 644, 0,
	645, 0, 397, 398, 0, 646, 0, 399, 400, 401,
	0, 402, 0, 0, 0, 403, 404, 405, 406, 407,
	408, 0, 409, 411, 410, 0, 412, 647, 0, 413,
	414, 0, 0, 415, 0, 0, 0, 416, 417, 420,
	0, 0, 418, 419, 421, 422, 0, 423, 424, 426,
	429, 425, 427, 428, 430, 443, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 442, 445, 0,
	444, 0, 446, 447, 448, 453, 455, 456, 451, 452,
	454, 457, 458, 450, 0, 459, 449, 0, 270, 0,
	460, 461, 0, 648, 462, 649, 464, 465, 0, 0,
	466, 0, 0, 0, 468, 469, 470, 0, 0, 471,
	472, 650, 0, 473, 0, 651, 474, 475, 467, 476,
	477, 478, 479, 480, 481, 482, 483, 0, 484, 485,
	652, 486, 487, 488, 653, 489, 490, 491, 654, 492,
	655, 493, 494, 0, 495, 496, 0, 497, 498, 499,
	500, 501, 502, 503, 656, 504, 506, 505, 507, 0,
	508, 0, 509, 510, 511, 0, 0, 0, 0, 512,
	0, 514, 515, 516, 517, 513, 518, 519, 520, 521,
	0, 522, 523, 524, 0, 525, 526, 527, 528, 657,
	529, 0, 530, 531, 537, 538, 539, 532, 533, 540,
	541, 542, 543, 544, 0, 546, 547, 545, 548, 549,
	550, 0, 551, 552, 534, 535, 553, 554, 0, 555,
	556, 557, 558, 559, 560, 561, 658, 0, 562, 0,
	563, 564, 565, 567, 536, 568, 573, 574, 659, 569,
	570, 571, 572, 660, 576, 577, 0, 578, 579, 0,
	575, 566, 0, 580, 581, 582, 583, 584, 585, 586,
	354, 587, 0, 588, 661, 662, 663, 664, 0, 597,
	0, 589, 590, 591, 665, 592, 666, 0, 593, 594,
	595, 596, 0, 598, 599, 0, 0, 600, 601, 602,
	604, 605, 603, 606, 0, 607, 0, 0, 608, 609,
	610, 667, 668, 669, 0, 612, 611, 613, 670, 1282,
	614, 265, 0, 0, 0, 615, 616, 671, 617, 618,
	619, 0, 0, 0, 0, 0, 0, 0, 271, 273,
	272, 274, 275, 276, 277, 0, 278, 279, 0, 0,
	0, 0, 0, 620, 0, 0, 0, 0, 280, 281,
	0, 282, 283, 284, 285, 286, 287, 621, 622, 0,
	288, 623, 289, 624, 0, 625, 290, 291, 292, 293,
	294, 295, 0, 0, 0, 296, 626, 627, 628, 0,
	297, 298, 629, 0, 0, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 0, 321, 322, 323, 0, 0, 0,
	0, 0, 0, 0, 324, 325, 326, 327, 328, 0,
	329, 630, 631, 0, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 340, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	632, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 633, 634, 360, 0, 268, 0, 0, 0, 0,
	0, 361, 362, 363, 635, 0, 0, 0, 364, 0,
	365, 366, 0, 0, 0, 367, 368, 636, 637, 369,
	370, 371, 372, 373, 374, 375, 376, 377, 0, 378,
	638, 0, 639, 379, 0, 380, 381, 382, 383, 384,
	1281, 641, 642, 463, 0, 385, 386, 0, 387, 388,
	389, 390, 391, 0, 0, 0, 269, 392, 393, 394,
	396, 0, 0, 395, 643, 644, 0, 645, 0, 397,
	398, 0, 646, 0, 399, 400, 401, 0, 402, 0,
	0, 0, 403, 404, 405, 406, 407, 408, 0, 409,
	411, 410, 0, 412, 647, 0, 413, 414, 0, 0,
	415, 0, 0, 0, 416, 417, 420, 0, 0, 418,
	419, 421, 422, 0, 423, 424, 426, 429, 425, 427,
	428, 430, 443, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 445, 0, 444, 0, 446,
	447, 448, 453, 455, 456, 451, 452, 454, 457, 458,
	450, 0, 459, 449, 0, 270, 0, 460, 461, 0,
	648, 462, 649, 464, 465, 0, 0, 466, 0, 0,
	0, 468, 469, 470, 0, 0, 471, 472, 650, 0,
	473, 0, 651, 474, 475, 467, 476, 477, 478, 479,
	480, 481, 482, 483, 0, 484, 485, 652, 486, 487,
	488, 653, 489, 490, 491, 654, 492, 655, 493, 494,
	0, 495, 496, 0, 497, 498, 499, 500, 501, 502,
	503, 656, 504, 506, 505, 507, 0, 508, 0, 509,
	510, 511, 0, 0, 0, 0, 512, 0, 514, 515,
	516, 517, 513, 518, 519, 520, 521, 0, 522, 523,
	524, 0, 525, 526, 527, 528, 657, 529, 0, 530,
	531, 537, 538, 539, 532, 533, 540, 541, 542, 543,
	544, 0, 546, 547, 545, 548, 549, 550, 0, 551,
	552, 534, 535, 553, 554, 0, 555, 556, 557, 558,
	559, 560, 561, 658, 0, 562, 0, 563, 564, 565,
	567, 536, 568, 573, 574, 659, 569, 570, 571, 572,
	660, 576, 577, 0, 578, 579, 0, 575, 566, 0,
	580, 581, 582, 583, 584, 585, 586, 354, 587, 0,
	588, 661, 662, 663, 664, 0, 597, 0, 589, 590,
	591, 665, 592, 666, 0, 593, 594, 595, 596, 0,
	598, 599, 0, 0, 600, 601, 602, 604, 605, 603,
	606, 0, 607, 0, 0, 608, 609, 610, 667, 668,
	669, 0, 612, 611, 613, 670, 1279, 614, 265, 0,
	0, 0, 615, 616, 671, 617, 618, 619, 0, 0,
	0, 0, 0, 0, 0, 271, 273, 272, 274, 275,
	276, 277, 0, 278, 279, 0, 0, 0, 0, 0,
	620, 0, 0, 0, 0, 280, 281, 0, 282, 283,
	284, 285, 286, 287, 621, 622, 0, 288, 623, 289,
	624, 0, 625, 290, 291, 292, 293, 294, 295, 0,
	0, 0, 296, 626, 627, 628, 0, 297, 298, 629,
	0, 0, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	0, 321, 322, 323, 0, 0, 0, 0, 0, 0,
	0, 324, 325, 326, 327, 328, 0, 329, 630, 631,
	0, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 340, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 632, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 633, 634,
	360, 0, 268, 0, 0, 0, 0, 0, 361, 362,
	363, 635, 0, 0, 0, 364, 0, 365, 366, 0,
	0, 0, 367, 368, 636, 637, 369, 370, 371, 372,
	373, 374, 375, 376, 377, 0, 378, 638, 0, 639,
	379, 0, 380, 381, 382, 383, 384, 1278, 641, 642,
	463, 0, 385, 386, 0, 387, 388, 389, 390, 391,
	0, 0, 0, 269, 392, 393, 394, 396, 0, 0,
	395, 643, 644, 0, 645, 0, 397, 398, 0, 646,
	0, 399, 400, 401, 0, 402, 0, 0, 0, 403,
	404, 405, 406, 407, 408, 0, 409, 411, 410, 0,
	412, 647, 0, 413, 414, 0, 0, 415, 0, 0,
	0, 416, 417, 420, 0, 0, 418, 419, 421, 422,
	0, 423, 424, 426, 429, 425, 427, 428, 430, 443,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 445, 0, 444, 0, 446, 447, 448, 453,
	455, 456, 451, 452, 454, 457, 458, 450, 0, 459,
	449, 0, 270, 0, 460, 461, 0, 648, 462, 649,
	464, 465, 0, 0, 466, 0, 0, 0, 468, 469,
	470, 0, 0, 471, 472, 650, 0, 473, 0, 651,
	474, 475, 467, 476, 477, 478, 479, 480, 481, 482,
	483, 0, 484, 485, 652, 486, 487, 488, 653, 489,
	490, 491, 654, 492, 655, 493, 494, 0, 495, 496,
	0, 497, 498, 499, 500, 501, 502, 503, 656, 504,
	506, 505, 507, 0, 508, 0, 509, 510, 511, 0,
	0, 0, 0, 512, 0, 514, 515, 516, 517, 513,
	518, 519, 520, 521, 0, 522, 523, 524, 0, 525,
	526, 527, 528, 657, 529, 0, 530, 531, 537, 538,
	539, 532, 533, 540, 541, 542, 543, 544, 0, 546,
	547, 545, 548, 549, 550, 0, 551, 552, 534, 535,
	553, 554, 0, 555, 556, 557, 558, 559, 560, 561,
	658, 0, 562, 0, 563, 564, 565, 567, 536, 568,
	573, 574, 659, 569, 570, 571, 572, 660, 576, 577,
	0, 578, 579, 0, 575, 566, 0, 580, 581, 582,
	583, 584, 585, 586, 354, 587, 0, 588, 661, 662,
	663, 664, 0, 597, 0, 589, 590, 591, 665, 592,
	666, 0, 593, 594, 595, 596, 0, 598, 599, 0,
	0, 600, 601, 602, 604, 605, 603, 606, 0, 607,
	0, 0, 608, 609, 610, 667, 668, 669, 0, 612,
	611, 613, 670, 1274, 614, 265, 0, 0, 0, 615,
	616, 671, 617, 618, 619, 0, 0, 0, 0, 0,
	0, 0, 271, 273, 272, 274, 275, 276, 277, 0,
	278, 279, 0, 0, 0, 0, 0, 620, 0, 0,
	0, 0, 280, 281, 0, 282, 283, 284, 285, 286,
	287, 621, 622, 0, 288, 623, 289, 624, 0, 625,
	290, 291, 292, 293, 294, 295, 0, 0, 0, 296,
	626, 627, 628, 0, 297, 298, 629, 0, 0, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 0, 321, 322,
	323, 0, 0, 0, 0, 0, 0, 0, 324, 325,
	326, 327, 328, 0, 329, 630, 631, 0, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 340, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 632, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 633, 634, 360, 0, 268,
	0, 0, 0, 0, 0, 361, 362, 363, 635, 0,
	0, 0, 364, 0, 365, 366, 0, 0, 0, 367,
	368, 636, 637, 369, 370, 371, 372, 373, 374, 375,
	376, 377, 0, 378, 638, 0, 639, 379, 0, 380,
	381, 382, 383, 384, 1273, 641, 642, 463, 0, 385,
	386, 0, 387, 388, 389, 390, 391, 0, 0, 0,
	269, 392, 393, 394, 396, 0, 0, 395, 643, 644,
	0, 645, 0, 397, 398, 0, 646, 0, 399, 400,
	401, 0, 402, 0, 0, 0, 403, 404, 405, 406,
	407, 408, 0, 409, 411, 410, 0, 412, 647, 0,
	413, 414, 0, 0, 415, 0, 0, 0, 416, 417,
	420, 0, 0, 418, 419, 421, 422, 0, 423, 424,
	426, 429, 425, 427, 428, 430, 443, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 445,
	0, 444, 0, 446, 447, 448, 453, 455, 456, 451,
	452, 454, 457, 458, 450, 0, 459, 449, 0, 270,
	0, 460, 461, 0, 648, 462, 649, 464, 465, 0,
	0, 466, 0, 0, 0, 468, 469, 470, 0, 0,
	471, 472, 650, 0, 473, 0, 651, 474, 475, 467,
	476, 477, 478, 479, 480, 481, 482, 483, 0, 484,
	485, 652, 486, 487, 488, 653, 489, 490, 491, 654,
	492, 655, 493, 494, 0, 495, 496, 0, 497, 498,
	499, 500, 501, 502, 503, 656, 504, 506, 505, 507,
	0, 508, 0, 509, 510, 511, 0, 0, 0, 0,
	512, 0, 514, 515, 516, 517, 513, 518, 519, 520,
	521, 0, 522, 523, 524, 0, 525, 526, 527, 528,
	657, 529, 0, 530, 531, 537, 538, 539, 532, 533,
	540, 541, 542, 543, 544, 0, 546, 547, 545, 548,
	549, 550, 0, 551, 552, 534, 535, 553, 554, 0,
	555, 556, 557, 558, 559, 560, 561, 658, 0, 562,
	0, 563, 564, 565, 567, 536, 568, 573, 574, 659,
	569, 570, 571, 572, 660, 576, 577, 0, 578, 579,
	0, 575, 566, 0, 580, 581, 582, 583, 584, 585,
	586, 354, 587, 0, 588, 661, 662, 663, 664, 0,
	597, 0, 589, 590, 591, 665, 592, 666, 0, 593,
	594, 595, 596, 0, 598, 599, 0, 0, 600, 601,
	602, 604, 605, 603, 606, 0, 607, 0, 0, 608,
	609, 610, 667, 668, 669, 0, 612, 611, 613, 670,
	673, 614, 265, 0, 0, 0, 615, 616, 671, 617,
	618, 619, 0, 0, 0, 0, 0, 0, 0, 271,
	273, 272, 274, 275, 276, 277, 0, 278, 279, 0,
	0, 0, 0, 0, 620, 0, 0, 0, 0, 280,
	281, 0, 282, 283, 284, 285, 286, 287, 621, 622,
	0, 288, 623, 289, 624, 0, 625, 290, 291, 292,
	293, 294, 295, 0, 0, 0, 296, 626, 627, 628,
	0, 297, 298, 629, 0, 0, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 0, 321, 322, 323, 0, 0,
	0, 0, 0, 0, 0, 324, 325, 326, 327, 328,
	0, 329, 630, 631, 0, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 340,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 632, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 633, 634, 360, 0, 268, 0, 0, 0,
	0, 0, 361, 362, 363, 635, 0, 0, 0, 364,
	0, 365, 366, 0, 0, 0, 367, 368, 636, 637,
	369, 370, 371, 372, 373, 374, 375, 376, 377, 0,
	378, 638, 0, 639, 379, 0, 380, 381, 382, 383,
	384, 640, 641, 642, 463, 0, 385, 386, 0, 387,
	388, 389, 390, 391, 0, 0, 0, 269, 392, 393,
	394, 396, 0, 0, 395, 643, 644, 0, 645, 0,
	397, 398, 0, 646, 0, 399, 400, 401, 0, 402,
	0, 0, 0, 403, 404, 405, 406, 407, 408, 0,
	409, 411, 410, 0, 412, 647, 0, 413, 414, 0,
	0, 415, 0, 0, 0, 416, 417, 420, 0, 0,
	418, 419, 421, 422, 0, 423, 424, 426, 429, 425,
	427, 428, 430, 443, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 445, 0, 444, 0,
	446, 447, 448, 453, 455, 456, 451, 452, 454, 457,
	458, 450, 0, 459, 449, 0, 270, 0, 460, 461,
	0, 648, 462, 649, 464, 465, 0, 0, 466, 0,
	0, 0, 468, 469, 470, 0, 0, 471, 472, 650,
	0, 473, 0, 651, 474, 475, 467, 476, 477, 478,
	479, 480, 481, 482, 483, 0, 484, 485, 652, 486,
	487, 488, 653, 489, 490, 491, 654, 492, 655, 493,
	494, 0, 495, 496, 0, 497, 498, 499, 500, 501,
	502, 503, 656, 504, 506, 505, 507, 0, 508, 0,
	509, 510, 511, 0, 0, 0, 0, 512, 0, 514,
	515, 516, 517, 513, 518, 519, 520, 521, 0, 522,
	523, 524, 0, 525, 526, 527, 528, 657, 529, 0,
	530, 531, 537, 538, 539, 532, 533, 540, 541, 542,
	543, 544, 0, 546, 547, 545, 548, 549, 550, 0,
	551, 552, 534, 535, 553, 554, 0, 555, 556, 557,
	558, 559, 560, 561, 658, 0, 562, 0, 563, 564,
	565, 567, 536, 568, 573, 574, 659, 569, 570, 571,
	572, 660, 576, 577, 0, 578, 579, 0, 575, 566,
	0, 580, 581, 582, 583, 584, 585, 586, 354, 587,
	0, 588, 661, 662, 663, 664, 0, 597, 0, 589,
	590, 591, 665, 592, 666, 0, 593, 594, 595, 596,
	0, 598, 599, 0, 0, 600, 601, 602, 604, 605,
	603, 606, 0, 607, 0, 0, 608, 609, 610, 667,
	668, 669, 0, 612, 611, 613, 670, 256, 614, 265,
	0, 0, 0, 615, 616, 671, 617, 618, 619, 0,
	0, 0, 0, 0, 0, 0, 271, 273, 272, 274,
	275, 276, 277, 0, 278, 279, 0, 0, 0, 0,
	0, 620, 0, 0, 0, 0, 280, 281, 0, 282,
	283, 284, 285, 286, 287, 621, 622, 0, 288, 623,
	289, 624, 0, 625, 290, 291, 292, 293, 294, 295,
	0, 0, 0, 296, 626, 627, 628, 0, 297, 298,
	629, 0, 0, 0, 299, 300, 301, 302, 303, 304,
	305, 0, 0, 307, 308, 309, 306, 310, 0, 311,
	0, 312, 313, 314, 315, 316, 317, 0, 318, 319,
	320, 0, 321, 322, 323, 0, 0, 0, 0, 0,
	0, 0, 324, 325, 326, 327, 328, 0, 329, 630,
	631, 0, 333, 330, 331, 0, 334, 332, 335, 0,
	336, 337, 338, 0, 0, 339, 340, 341, 0, 342,
	343, 0, 344, 345, 346, 0, 347, 348, 632, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 633,
	634, 360, 0, 268, 0, 0, 0, 0, 0, 361,
	362, 363, 635, 0, 0, 0, 364, 0, 365, 366,
	0, 0, 0, 367, 368, 636, 637, 369, 370, 371,
	372, 373, 374, 375, 376, 377, 0, 378, 638, 0,
	639, 379, 0, 380, 381, 382, 383, 384, 640, 641,
	642, 463, 0, 385, 386, 0, 387, 388, 389, 390,
	391, 0, 0, 0, 269, 392, 393, 394, 396, 0,
	0, 395, 643, 644, 0, 645, 0, 397, 398, 0,
	646, 0, 399, 400, 401, 0, 402, 0, 0, 0,
	403, 404, 405, 406, 407, 408, 0, 409, 411, 410,
	0, 412, 647, 0, 413, 414, 0, 0, 415, 0,
	0, 0, 416, 417, 420, 0, 0, 418, 419, 421,
	422, 0, 423, 424, 426, 429, 425, 427, 428, 430,
	443, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 445, 0, 444, 0, 446, 447, 448,
	453, 455, 456, 451, 452, 454, 457, 458, 450, 0,
	459, 449, 0, 270, 0, 460, 461, 0, 648, 462,
	649, 464, 465, 0, 0, 466, 0, 0, 0, 468,
	469, 470, 0, 0, 471, 472, 650, 0, 473, 0,
	651, 474, 475, 467, 476, 477, 478, 479, 480, 481,
	482, 483, 0, 484, 485, 652, 486, 487, 488, 653,
	489, 490, 491, 654, 492, 655, 493, 494, 0, 495,
	496, 0, 497, 498, 499, 500, 501, 502, 503, 656,
	504, 506, 505, 507, 0, 508, 0, 509, 510, 511,
	0, 0, 0, 0, 512, 0, 514, 515, 516, 517,
	513, 518, 519, 520, 521, 0, 522, 523, 524, 0,
	525, 526, 527, 528, 657, 529, 0, 530, 531, 537,
	538, 539, 532, 533, 540, 541, 542, 543, 544, 0,
	546, 547, 545, 548, 549, 550, 0, 551, 552, 534,
	535, 553, 554, 0, 555, 556, 557, 558, 559, 560,
	561, 658, 0, 562, 0, 563, 564, 565, 567, 536,
	568, 573, 574, 659, 569, 570, 571, 572, 660, 576,
	577, 0, 578, 579, 0, 575, 566, 0, 580, 581,
	582, 583, 584, 585, 586, 354, 587, 0, 588, 661,
	662, 663, 664, 0, 597, 0, 589, 590, 591, 665,
	592, 666, 0, 593, 594, 595, 596, 0, 598, 599,
	0, 0, 600, 601, 602, 604, 605, 603, 606, 0,
	607, 0, 0, 608, 609, 610, 667, 668, 669, 265,
	612, 611, 613, 670, 0, 614, 0, 0, 0, 0,
	615, 616, 671, 617, 618, 619, 271, 273, 272, 274,
	275, 276, 277, 0, 278, 279, 0, 0, 0, 0,
	0, 620, 0, 0, 0, 0, 280, 281, 0, 282,
	283, 284, 285, 286, 287, 621, 622, 0, 288, 623,
	289, 624, 0, 625, 290, 291, 292, 293, 294, 295,
	0, 0, 0, 296, 626, 627, 628, 0, 297, 298,
	629, 0, 0, 0, 299, 300, 301, 302, 303, 304,
	305, 0, 0, 307, 308, 309, 306, 310, 0, 311,
	0, 312, 313, 314, 315, 316, 317, 0, 318, 319,
	320, 0, 321, 322, 323, 0, 0, 0, 0, 0,
	0, 0, 324, 325, 326, 327, 328, 0, 329, 630,
	631, 0, 333, 330, 331, 0, 334, 332, 335, 0,
	336, 337, 338, 0, 0, 339, 340, 341, 0, 342,
	343, 0, 344, 345, 346, 0, 347, 348, 632, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 633,
	634, 360, 0, 268, 0, 0, 0, 0, 0, 361,
	362, 363, 635, 0, 0, 0, 364, 0, 365, 366,
	0, 0, 0, 367, 368, 636, 637, 369, 370, 371,
	372, 373, 374, 375, 376, 377, 0, 378, 638, 0,
	639, 379, 0, 380, 381, 382, 383, 384, 640, 641,
	642, 463, 0, 385, 386, 0, 387, 388, 389, 390,
	391, 0, 0, 0, 269, 392, 393, 394, 396, 0,
	0, 395, 643, 644, 0, 645, 0, 397, 398, 0,
	646, 0, 399, 400, 401, 0, 402, 0, 0, 0,
	403, 404, 405, 406, 407, 408, 0, 409, 411, 410,
	0, 412, 647, 0, 413, 414, 0, 0, 415, 0,
	0, 0, 416, 417, 420, 0, 0, 418, 419, 421,
	422, 0, 423, 424, 426, 429, 425, 427, 428, 430,
	443, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 445, 0, 444, 0, 446, 447, 448,
	453, 455, 456, 451, 452, 454, 457, 458, 450, 0,
	459, 449, 0, 270, 0, 460, 461, 0, 648, 462,
	649, 464, 465, 0, 0, 466, 0, 0, 0, 468,
	469, 470, 0, 0, 471, 472, 650, 0, 473, 0,
	651, 474, 475, 467, 476, 477, 478, 479, 480, 481,
	482, 483, 0, 484, 485, 652, 486, 487, 488, 653,
	489, 490, 491, 654, 492, 655, 493, 494, 0, 495,
	496, 0, 497, 498, 499, 500, 501, 502, 503, 656,
	504, 506, 505, 507, 0, 508, 0, 509, 510, 511,
	0, 0, 0, 0, 512, 0, 514, 515, 516, 517,
	513, 518, 519, 520, 521, 0, 522, 523, 524, 0,
	525, 526, 527, 528, 657, 529, 0, 530, 531, 537,
	538, 539, 532, 533, 540, 541, 542, 543, 544, 0,
	546, 547, 545, 548, 549, 550, 0, 551, 552, 534,
	535, 553, 554, 0, 555, 556, 557, 558, 559, 560,
	561, 658, 0, 562, 0, 563, 564, 565, 567, 536,
	568, 573, 574, 659, 569, 570, 571, 572, 660, 576,
	577, 0, 578, 579, 0, 575, 566, 0, 580, 581,
	582, 583, 584, 585, 586, 354, 587, 0, 588, 661,
	662, 663, 664, 0, 597, 0, 589, 590, 591, 665,
	592, 666, 0, 593, 594, 595, 596, 0, 598, 599,
	0, 0, 600, 601, 602, 604, 605, 603, 606, 0,
	607, 0, 0, 608, 609, 610, 667, 668, 669, 265,
	612, 611, 613, 670, 0, 614, 0, 0, 0, 0,
	615, 616, 671, 617, 618, 619, 271, 273, 272, 274,
	275, 276, 277, 0, 278, 279, 0, 0, 0, 0,
	0, 620, 0, 0, 0, 0, 280, 281, 0, 282,
	283, 284, 285, 286, 287, 621, 622, 0, 288, 623,
	289, 624, 0, 625, 290, 291, 292, 293, 294, 295,
	0, 0, 0, 296, 626, 627, 628, 0, 297, 298,
	629, 0, 0, 0, 299, 300, 301, 302, 303, 304,
	305, 0, 0, 307, 308, 309, 306, 310, 0, 311,
	0, 312, 313, 314, 315, 316, 317, 695, 318, 319,
	320, 0, 321, 322, 323, 0, 0, 0, 0, 0,
	0, 0, 324, 325, 326, 327, 328, 0, 329, 630,
	631, 0, 333, 330, 331, 0, 334, 332, 335, 0,
	336, 337, 338, 0, 0, 339, 340, 341, 0, 342,
	343, 0, 344, 345, 346, 0, 347, 348, 632, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 633,
	634, 360, 0, 0, 0, 0, 0, 0, 0, 361,
	362, 363, 635, 0, 0, 0, 364, 0, 365, 366,
	0, 0, 0, 367, 368, 636, 637, 369, 370, 371,
	372, 373, 374, 375, 376, 377, 696, 378, 638, 0,
	639, 379, 0, 380, 381, 382, 383, 384, 640, 641,
	642, 463, 0, 385, 386, 0, 387, 388, 389, 390,
	391, 0, 0, 0, 0, 392, 393, 394, 396, 0,
	0, 395, 643, 644, 0, 645, 0, 397, 398, 0,
	646, 0, 399, 400, 401, 0, 402, 0, 0, 0,
	403, 404, 405, 406, 407, 408, 0, 409, 411, 410,
	0, 412, 647, 0, 413, 414, 0, 0, 415, 0,
	0, 0, 416, 417, 420, 0, 0, 418, 419, 421,
	422, 0, 423, 424, 426, 429, 425, 427, 428, 430,
	443, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 445, 0, 444, 0, 446, 447, 448,
	453, 455, 456, 451, 452, 454, 457, 458, 450, 0,
	459, 449, 0, 0, 0, 460, 461, 0, 648, 462,
	649, 464, 465, 0, 0, 466, 0, 0, 0, 468,
	469, 470, 0, 0, 471, 472, 650, 0, 473, 0,
	651, 474, 475, 467, 476, 477, 478, 479, 480, 481,
	482, 483, 0, 484, 485, 652, 486, 487, 488, 653,
	489, 490, 491, 654, 492, 655, 493, 494, 0, 495,
	496, 0, 497, 498, 499, 500, 501, 502, 503, 656,
	504, 506, 505, 507, 0, 508, 0, 509, 510, 511,
	0, 0, 0, 0, 512, 0, 514, 515, 516, 517,
	513, 518, 519, 520, 521, 0, 522, 523, 524, 0,
	525, 526, 527, 528, 657, 529, 0, 530, 531, 537,
	538, 539, 532, 533, 540, 541, 542, 543, 544, 697,
	546, 547, 545, 548, 549, 550, 0, 551, 552, 534,
	535, 553, 554, 0, 555, 556, 557, 558, 559, 560,
	561, 658, 0, 562, 0, 563, 564, 565, 567, 536,
	568, 573, 574, 659, 569, 570, 571, 572, 660, 576,
	577, 0, 578, 579, 0, 575, 566, 0, 580, 581,
	582, 583, 584, 585, 586, 354, 587, 0, 588, 661,
	662, 663, 664, 0, 597, 0, 589, 590, 591, 665,
	592, 666, 0, 593, 594, 595, 596, 0, 598, 599,
	0, 0, 600, 601, 602, 604, 605, 603, 606, 0,
	607, 0, 0, 608, 609, 610, 667, 668, 669, 265,
	612, 611, 613, 670, 0, 614, 0, 0, 0, 0,
	615, 616, 671, 617, 618, 619, 271, 273, 272, 274,
	275, 276, 277, 0, 278, 279, 0, 0, 0, 0,
	0, 620, 0, 0, 0, 0, 280, 281, 0, 282,
	283, 284, 285, 286, 287, 621, 622, 0, 288, 623,
	289, 624, 0, 625, 290, 291, 292, 293, 294, 295,
	0, 0, 0, 296, 626, 627, 628, 0, 297, 298,
	629, 0, 0, 0, 299, 300, 301, 302, 303, 304,
	305, 0, 0, 307, 308, 309, 306, 310, 0, 311,
	0, 312, 313, 314, 315, 316, 317, 0, 318, 319,
	320, 0, 321, 322, 323, 0, 0, 0, 0, 0,
	0, 0, 324, 325, 326, 2315, 328, 0, 329, 630,
	631, 0, 333, 330, 331, 0, 334, 332, 335, 0,
	336, 337, 338, 0, 0, 339, 340, 341, 0, 342,
	343, 0, 344, 345, 346, 0, 347, 348, 632, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 633,
	634, 360, 0, 268, 0, 0, 0, 0, 0, 361,
	362, 363, 635, 0, 0, 0, 364, 0, 365, 366,
	0, 0, 0, 367, 368, 636, 637, 369, 370, 371,
	372, 373, 374, 375, 376, 377, 0, 378, 638, 0,
	639, 379, 0, 380, 381, 382, 383, 384, 640, 641,
	642, 463, 0, 385, 386, 0, 387, 388, 389, 390,
	391, 0, 0, 0, 269, 392, 393, 394, 396, 0,
	0, 395, 643, 644, 0, 645, 0, 397, 398, 0,
	646, 0, 399, 400, 401, 0, 402, 0, 0, 0,
	403, 404, 405, 406, 407, 408, 0, 409, 411, 410,
	0, 412, 647, 0, 413, 414, 0, 0, 415, 0,
	0, 0, 416, 417, 420, 0, 0, 418, 419, 421,
	422, 0, 423, 424, 426, 429, 425, 427, 428, 430,
	443, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 445, 0, 444, 0, 446, 447, 448,
	453, 455, 456, 451, 452, 454, 457, 458, 450, 0,
	459, 449, 0, 270, 0, 460, 461, 0, 648, 462,
	649, 464, 465, 0, 0, 466, 0, 0, 0, 468,
	469, 470, 0, 0, 471, 472, 650, 0, 473, 0,
	651, 474, 475, 467, 476, 477, 478, 479, 480, 481,
	482, 483, 0, 484, 485, 652, 486, 487, 488, 653,
	489, 490, 491, 654, 492, 655, 493, 494, 0, 495,
	496, 0, 497, 498, 499, 500, 501, 502, 503, 656,
	504, 506, 505, 507, 0, 508, 0, 509, 510, 511,
	0, 0, 0, 0, 512, 0, 514, 515, 516, 517,
	513, 518, 519, 520, 521, 0, 522, 523, 524, 0,
	525, 526, 527, 528, 657, 529, 0, 530, 531, 537,
	538, 539, 532, 533, 540, 541, 542, 543, 544, 0,
	546, 547, 545, 548, 549, 550, 0, 551, 552, 534,
	535, 553, 554, 0, 555, 556, 557, 558, 559, 560,
	561, 658, 0, 562, 0, 563, 564, 565, 567, 536,
	568, 573, 574, 659, 569, 570, 571, 572, 660, 576,
	577, 0, 578, 579, 0, 575, 566, 0, 580, 581,
	582, 583, 584, 585, 586, 354, 587, 0, 588, 661,
	662, 663, 664, 0, 597, 0, 589, 590, 591, 665,
	592, 666, 0, 593, 594, 595, 596, 0, 598, 599,
	0, 0, 600, 601, 602, 604, 605, 603, 606, 0,
	607, 0, 0, 608, 609, 610, 667, 668, 669, 265,
	612, 611, 613, 670, 0, 614, 0, 0, 0, 0,
	615, 616, 671, 617, 618, 619, 271, 273, 272, 274,
	275, 276, 277, 0, 278, 279, 0, 0, 0, 0,
	0, 620, 0, 0, 0, 0, 280, 281, 0, 282,
	283, 284, 285, 286, 287, 621, 622, 0, 288, 623,
	289, 624, 0, 625, 290, 291, 292, 293, 294, 295,
	0, 0, 0, 296, 626, 627, 628, 0, 297, 298,
	629, 0, 0, 0, 299, 300, 301, 302, 303, 304,
	305, 0, 0, 307, 308, 309, 306, 310, 0, 311,
	0, 312, 313, 314, 315, 316, 317, 0, 318, 319,
	320, 0, 321, 322, 323, 0, 0, 0, 0, 0,
	0, 0, 324, 325, 326, 2313, 328, 0, 329, 630,
	631, 0, 333, 330, 331, 0, 334, 332, 335, 0,
	336, 337, 338, 0, 0, 339, 340, 341, 0, 342,
	343, 0, 344, 345, 346, 0, 347, 348, 632, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 633,
	634, 360, 0, 268, 0, 0, 0, 0, 0, 361,
	362, 363, 635, 0, 0, 0, 364, 0, 365, 366,
	0, 0, 0, 367, 368, 636, 637, 369, 370, 371,
	372, 373, 374, 375, 376, 377, 0, 378, 638, 0,
	639, 379, 0, 380, 381, 382, 383, 384, 640, 641,
	642, 463, 0, 385, 386, 0, 387, 388, 389, 390,
	391, 0, 0, 0, 269, 392, 393, 394, 396, 0,
	0, 395, 643, 644, 0, 645, 0, 397, 398, 0,
	646, 0, 399, 400, 401, 0, 402, 0, 0, 0,
	403, 404, 405, 406, 407, 408, 0, 409, 411, 410,
	0, 412, 647, 0, 413, 414, 0, 0, 415, 0,
	0, 0, 416, 417, 420, 0, 0, 418, 419, 421,
	422, 0, 423, 424, 426, 429, 425, 427, 428, 430,
	443, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 445, 0, 444, 0, 446, 447, 448,
	453, 455, 456, 451, 452, 454, 457, 458, 450, 0,
	459, 449, 0, 270, 0, 460, 461, 0, 648, 462,
	649, 464, 465, 0, 0, 466, 0, 0, 0, 468,
	469, 470, 0, 0, 471, 472, 650, 0, 473, 0,
	651, 474, 475, 467, 476, 477, 478, 479, 480, 481,
	482, 483, 0, 484, 485, 652, 486, 487, 488, 653,
	489, 490, 491, 654, 492, 655, 493, 494, 0, 495,
	496, 0, 497, 498, 499, 500, 501, 502, 503, 656,
	504, 506, 505, 507, 0, 508, 0, 509, 510, 511,
	0, 0, 0, 0, 512, 0, 514, 515, 516, 517,
	513, 518, 519, 520, 521, 0, 522, 523, 524, 0,
	525, 526, 527, 528, 657, 529, 0, 530, 531, 537,
	538, 539, 532, 533, 540, 541, 542, 543, 544, 0,
	546, 547, 545, 548, 549, 550, 0, 551, 552, 534,
	535, 553, 554, 0, 555, 556, 557, 558, 559, 560,
	561, 658, 0, 562, 0, 563, 564, 565, 567, 536,
	568, 573, 574, 659, 569, 570, 571, 572, 660, 576,
	577, 0, 578, 579, 0, 575, 566, 0, 580, 581,
	582, 583, 584, 585, 586, 354, 587, 0, 588, 661,
	662, 663, 664, 0, 597, 0, 589, 590, 591, 665,
	592, 666, 0, 593, 594, 595, 596, 0, 598, 599,
	0, 0, 600, 601, 602, 604, 605, 603, 606, 0,
	607, 0, 0, 608, 609, 610, 667, 668, 669, 265,
	612, 611, 613, 670, 0, 614, 0, 0, 0, 0,
	615, 616, 671, 617, 618, 619, 271, 273, 272, 274,
	275, 276, 277, 0, 278, 279, 0, 0, 0, 0,
	0, 620, 0, 0, 0, 0, 280, 281, 0, 282,
	283, 284, 285, 286, 287, 621, 622, 0, 288, 623,
	289, 624, 0, 625, 290, 291, 292, 293, 294, 295,
	0, 0, 0, 296, 626, 627, 628, 0, 297, 298,
	629, 0, 0, 0, 299, 300, 301, 302, 303, 304,
	305, 0, 0, 307, 308, 309, 306, 310, 0, 311,
	0, 312, 313, 314, 315, 316, 317, 0, 318, 319,
	320, 0, 321, 322, 323, 0, 0, 0, 0, 0,
	0, 0, 324, 325, 326, 2311, 328, 0, 329, 630,
	631, 0, 333, 330, 331, 0, 334, 332, 335, 0,
	336, 337, 338, 0, 0, 339, 340, 341, 0, 342,
	343, 0, 344, 345, 346, 0, 347, 348, 632, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 633,
	634, 360, 0, 268, 0, 0, 0, 0, 0, 361,
	362, 363, 635, 0, 0, 0, 364, 0, 365, 366,
	0, 0, 0, 367, 368, 636, 637, 369, 370, 371,
	372, 373, 374, 375, 376, 377, 0, 378, 638, 0,
	639, 379, 0, 380, 381, 382, 383, 384, 640, 641,
	642, 463, 0, 385, 386, 0, 387, 388, 389, 390,
	391, 0, 0, 0, 269, 392, 393, 394, 396, 0,
	0, 395, 643, 644, 0, 645, 0, 397, 398, 0,
	646, 0, 399, 400, 401, 0, 402, 0, 0, 0,
	403, 404, 405, 406, 407, 408, 0, 409, 411, 410,
	0, 412, 647, 0, 413, 414, 0, 0, 415, 0,
	0, 0, 416, 417, 420, 0, 0, 418, 419, 421,
	422, 0, 423, 424, 426, 429, 425, 427, 428, 430,
	443, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 445, 0, 444, 0, 446, 447, 448,
	453, 455, 456, 451, 452, 454, 457, 458, 450, 0,
	459, 449, 0, 270, 0, 460, 461, 0, 648, 462,
	649, 464, 465, 0, 0, 466, 0, 0, 0, 468,
	469, 470, 0, 0, 471, 472, 650, 0, 473, 0,
	651, 474, 475, 467, 476, 477, 478, 479, 480, 481,
	482, 483, 0, 484, 485, 652, 486, 487, 488, 653,
	489, 490, 491, 654, 492, 655, 493, 494, 0, 495,
	496, 0, 497, 498, 499, 500, 501, 502, 503, 656,
	504, 506, 505, 507, 0, 508, 0, 509, 510, 511,
	0, 0, 0, 0, 512, 0, 514, 515, 516, 517,
	513, 518, 519, 520, 521, 0, 522, 523, 524, 0,
	525, 526, 527, 528, 657, 529, 0, 530, 531, 537,
	538, 539, 532, 533, 540, 541, 542, 543, 544, 0,
	546, 547, 545, 548, 549, 550, 0, 551, 552, 534,
	535, 553, 554, 0, 555, 556, 557, 558, 559, 560,
	561, 658, 0, 562, 0, 563, 564, 565, 567, 536,
	568, 573, 574, 659, 569, 570, 571, 572, 660, 576,
	577, 0, 578, 579, 0, 575, 566, 0, 580, 581,
	582, 583, 584, 585, 586, 354, 587, 0, 588, 661,
	662, 663, 664, 0, 597, 0, 589, 590, 591, 665,
	592, 666, 0, 593, 594, 595, 596, 0, 598, 599,
	0, 0, 600, 601, 602, 604, 605, 603, 606, 0,
	607, 0, 0, 608, 609, 610, 667, 668, 669, 265,
	612, 611, 613, 670, 0, 614, 0, 0, 0, 0,
	615, 616, 671, 617, 618, 619, 271, 273, 272, 274,
	275, 276, 277, 0, 278, 279, 0, 0, 0, 0,
	0, 620, 0, 0, 0, 0, 280, 281, 0, 282,
	283, 284, 285, 286, 287, 621, 622, 0, 288, 623,
	289, 624, 0, 625, 290, 291, 292, 293, 294, 295,
	0, 0, 0, 296, 626, 627, 628, 0, 297, 298,
	629, 0, 0, 0, 299, 300, 301, 302, 303, 304,
	305, 0, 0, 307, 308, 309, 306, 310, 0, 311,
	0, 312, 313, 314, 315, 316, 317, 0, 318, 319,
	320, 0, 321, 322, 323, 0, 0, 0, 0, 0,
	0, 0, 324, 325, 326, 327, 328, 0, 329, 630,
	631, 0, 333, 330, 331, 0, 334, 332, 335, 0,
	336, 337, 338, 0, 0, 339, 340, 341, 0, 342,
	343, 0, 344, 345, 346, 0, 347, 348, 632, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 633,
	634, 360, 0, 268, 0, 0, 0, 0, 0, 361,
	362, 363, 635, 0, 0, 0, 364, 0, 365, 366,
	0, 0, 0, 367, 368, 636, 637, 369, 370, 371,
	372, 373, 374, 375, 376, 377, 0, 378, 638, 0,
	639, 379, 0, 380, 381, 382, 383, 384, 2232, 641,
	642, 463, 0, 385, 386, 0, 387, 388, 389, 390,
	391, 0, 0, 0, 269, 392, 393, 394, 396, 0,
	0, 395, 643, 644, 0, 645, 0, 397, 398, 0,
	646, 0, 399, 400, 401, 0, 402, 0, 0, 0,
	403, 404, 405, 406, 407, 408, 0, 409, 411, 410,
	0, 412, 647, 0, 413, 414, 0, 0, 415, 0,
	0, 0, 416, 417, 420, 0, 0, 418, 419, 421,
	422, 0, 423, 424, 426, 429, 425, 427, 428, 430,
	443, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 445, 0, 444, 0, 446, 447, 448,
	453, 455, 456, 451, 452, 454, 457, 458, 450, 0,
	459, 449, 0, 270, 0, 460, 461, 0, 648, 462,
	649, 464, 465, 0, 0, 466, 0, 0, 0, 468,
	469, 470, 0, 0, 471, 472, 650, 0, 473, 0,
	651, 474, 475, 467, 476, 477, 478, 479, 480, 481,
	482, 483, 0, 484, 485, 652, 486, 487, 488, 653,
	489, 490, 491, 654, 492, 655, 493, 494, 0, 495,
	496, 0, 497, 498, 499, 500, 501, 502, 503, 656,
	504, 506, 505, 507, 0, 508, 0, 509, 510, 511,
	0, 0, 0, 0, 512, 0, 514, 515, 516, 517,
	513, 518, 519, 520, 521, 0, 522, 523, 524, 0,
	525, 526, 527, 528, 657, 529, 0, 530, 531, 537,
	538, 539, 532, 533, 540, 541, 542, 543, 544, 0,
	546, 547, 545, 548, 549, 550, 0, 551, 552, 534,
	535, 553, 554, 0, 555, 556, 557, 558, 559, 560,
	561, 658, 0, 562, 0, 563, 564, 565, 567, 536,
	568, 573, 574, 659, 569, 570, 571, 572, 660, 576,
	577, 0, 578, 579, 0, 575, 566, 0, 580, 581,
	582, 583, 584, 585, 586, 354, 587, 0, 588, 661,
	662, 663, 664, 0, 597, 0, 589, 590, 591, 665,
	592, 666, 0, 593, 594, 595, 596, 0, 598, 599,
	0, 0, 600, 601, 602, 604, 605, 603, 606, 0,
	607, 0, 0, 608, 609, 610, 667, 668, 669, 265,
	612, 611, 613, 670, 0, 614, 0, 0, 0, 0,
	615, 616, 671, 617, 618, 619, 271, 273, 272, 274,
	275, 276, 277, 0, 278, 279, 0, 0, 0, 0,
	0, 620, 0, 0, 0, 0, 280, 281, 0, 282,
	283, 284, 285, 286, 287, 621, 622, 0, 288, 623,
	289, 624, 0, 625, 290, 291, 292, 293, 294, 295,
	0, 0, 0, 296, 626, 627, 628, 0, 297, 298,
	629, 0, 0, 0, 299, 300, 301, 302, 303, 304,
	305, 0, 0, 307, 308, 309, 306, 310, 0, 311,
	0, 312, 313, 314, 315, 316, 317, 0, 318, 319,
	320, 0, 321, 322, 323, 0, 0, 0, 0, 0,
	0, 0, 324, 325, 326, 327, 328, 0, 329, 630,
	631, 0, 333, 330, 331, 0, 334, 332, 335, 0,
	336, 337, 338, 0, 0, 339, 340, 341, 0, 342,
	343, 0, 344, 345, 346, 0, 347, 348, 632, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 633,
	634, 360, 0, 268, 0, 0, 0, 0, 0, 361,
	362, 363, 635, 0, 0, 0, 364, 0, 365, 366,
	0, 0, 0, 367, 368, 636, 637, 369, 370, 371,
	372, 373, 374, 375, 376, 377, 0, 378, 638, 0,
	639, 379, 0, 380, 381, 382, 383, 384, 2041, 641,
	642, 463, 0, 385, 386, 0, 387, 388, 389, 390,
	391, 0, 0, 0, 269, 392, 393, 394, 396, 0,
	0, 395, 643, 644, 0, 645, 0, 397, 398, 0,
	646, 0, 399, 400, 401, 0, 402, 0, 0, 0,
	403, 404, 405, 406, 407, 408, 0, 409, 411, 410,
	0, 412, 647, 0, 413, 414, 0, 0, 415, 0,
	0, 0, 416, 417, 420, 0, 0, 418, 419, 421,
	422, 0, 423, 424, 426, 429, 425, 427, 428, 430,
	443, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 445, 0, 444, 0, 446, 447, 448,
	453, 455, 456, 451, 452, 454, 457, 458, 450, 0,
	459, 449, 0, 270, 0, 460, 461, 0, 648, 462,
	649, 464, 465, 0, 0, 466, 0, 0, 0, 468,
	469, 470, 0, 0, 471, 472, 650, 0, 473, 0,
	651, 474, 475, 467, 476, 477, 478, 479, 480, 481,
	482, 483, 0, 484, 485, 652, 486, 487, 488, 653,
	489, 490, 491, 654, 492, 655, 493, 494, 0, 495,
	496, 0, 497, 498, 499, 500, 501, 502, 503, 656,
	504, 506, 505, 507, 0, 508, 0, 509, 510, 511,
	0, 0, 0, 0, 512, 0, 514, 515, 516, 517,
	513, 518, 519, 520, 521, 0, 522, 523, 524, 0,
	525, 526, 527, 528, 657, 529, 0, 530, 531, 537,
	538, 539, 532, 533, 540, 541, 542, 543, 544, 0,
	546, 547, 545, 548, 549, 550, 0, 551, 552, 534,
	535, 553, 554, 0, 555, 556, 557, 558, 559, 560,
	561, 658, 0, 562, 0, 563, 564, 565, 567, 536,
	568, 573, 574, 659, 569, 570, 571, 572, 660, 576,
	577, 0, 578, 579, 0, 575, 566, 0, 580, 581,
	582, 583, 584, 585, 586, 354, 587, 0, 588, 661,
	662, 663, 664, 0, 597, 0, 589, 590, 591, 665,
	592, 666, 0, 593, 594, 595, 596, 0, 598, 599,
	0, 0, 600, 601, 602, 604, 605, 603, 606, 0,
	607, 0, 0, 608, 609, 610, 667, 668, 669, 265,
	612, 611, 613, 670, 0, 614, 0, 0, 0, 0,
	615, 616, 671, 617, 618, 619, 271, 273, 272, 274,
	275, 276, 277, 0, 278, 279, 0, 0, 0, 0,
	0, 620, 0, 0, 0, 0, 280, 281, 0, 282,
	283, 284, 285, 286, 287, 621, 622, 0, 288, 623,
	289, 624, 0, 625, 290, 291, 292, 293, 294, 295,
	0, 0, 0, 296, 626, 627, 628, 0, 297, 298,
	629, 0, 0, 0, 299, 300, 301, 302, 303, 304,
	305, 0, 0, 307, 308, 309, 306, 310, 0, 311,
	0, 312, 313, 314, 315, 316, 317, 0, 318, 319,
	320, 0, 321, 322, 323, 0, 0, 0, 0, 0,
	0, 0, 324, 325, 326, 327, 328, 0, 329, 630,
	631, 0, 333, 330, 331, 0, 334, 332, 335, 0,
	336, 337, 338, 0, 0, 339, 340, 341, 0, 342,
	343, 0, 344, 345, 346, 0, 347, 348, 632, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 633,
	634, 360, 0, 268, 0, 0, 0, 0, 0, 361,
	362, 363, 635, 0, 0, 0, 364, 0, 365, 366,
	0, 0, 0, 367, 368, 636, 637, 369, 370, 371,
	372, 373, 374, 375, 376, 377, 0, 378, 638, 0,
	639, 379, 0, 380, 381, 382, 383, 384, 2035, 641,
	642, 463, 0, 385, 386, 0, 387, 388, 389, 390,
	391, 0, 0, 0, 269, 392, 393, 394, 396, 0,
	0, 395, 643, 644, 0, 645, 0, 397, 398, 0,
	646, 0, 399, 400, 401, 0, 402, 0, 0, 0,
	403, 404, 405, 406, 407, 408, 0, 409, 411, 410,
	0, 412, 647, 0, 413, 414, 0, 0, 415, 0,
	0, 0, 416, 417, 420, 0, 0, 418, 419, 421,
	422, 0, 423, 424, 426, 429, 425, 427, 428, 430,
	443, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 445, 0, 444, 0, 446, 447, 448,
	453, 455, 456, 451, 452, 454, 457, 458, 450, 0,
	459, 449, 0, 270, 0, 460, 461, 0, 648, 462,
	649, 464, 465, 0, 0, 466, 0, 0, 0, 468,
	469, 470, 0, 0, 471, 472, 650, 0, 473, 0,
	651, 474, 475, 467, 476, 477, 478, 479, 480, 481,
	482, 483, 0, 484, 485, 652, 486, 487, 488, 653,
	489, 490, 491, 654, 492, 655, 493, 494, 0, 495,
	496, 0, 497, 498, 499, 500, 501, 502, 503, 656,
	504, 506, 505, 507, 0, 508, 0, 509, 510, 511,
	0, 0, 0, 0, 512, 0, 514, 515, 516, 517,
	513, 518, 519, 520, 521, 0, 522, 523, 524, 0,
	525, 526, 527, 528, 657, 529, 0, 530, 531, 537,
	538, 539, 532, 533, 540, 541, 542, 543, 544, 0,
	546, 547, 545, 548, 549, 550, 0, 551, 552, 534,
	535, 553, 554, 0, 555, 556, 557, 558, 559, 560,
	561, 658, 0, 562, 0, 563, 564, 565, 567, 536,
	568, 573, 574, 659, 569, 570, 571, 572, 660, 576,
	577, 0, 578, 579, 0, 575, 566, 0, 580, 581,
	582, 583, 584, 585, 586, 354, 587, 0, 588, 661,
	662, 663, 664, 0, 597, 0, 589, 590, 591, 665,
	592, 666, 0, 593, 594, 595, 596, 0, 598, 599,
	0, 0, 600, 601, 602, 604, 605, 603, 606, 0,
	607, 0, 0, 608, 609, 610, 667, 668, 669, 0,
	612, 611, 613, 670, 876, 614, 265, 0, 0, 0,
	615, 616, 671, 617, 618, 619, 0, 0, 0, 0,
	0, 0, 0, 271, 273, 272, 274, 275, 276, 277,
	0, 278, 279, 0, 0, 0, 0, 0, 620, 0,
	0, 0, 0, 280, 281, 0, 282, 283, 284, 285,
	286, 287, 621, 622, 0, 288, 623, 289, 624, 0,
	625, 290, 291, 292, 293, 294, 295, 0, 0, 0,
	296, 626, 627, 628, 0, 297, 298, 629, 0, 0,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 0, 321,
	322, 323, 0, 0, 0, 0, 0, 0, 0, 324,
	325, 326, 327, 328, 0, 329, 630, 631, 0, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 340, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 632, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 633, 634, 360, 0,
	0, 0, 0, 0, 0, 0, 361, 362, 363, 635,
	0, 0, 0, 364, 0, 365, 366, 0, 0, 0,
	367, 368, 636, 637, 369, 370, 371, 372, 373, 374,
	375, 376, 377, 0, 378, 638, 0, 639, 379, 0,
	380, 381, 382, 383, 384, 640, 641, 642, 463, 0,
	385, 386, 0, 387, 388, 389, 390, 391, 0, 0,
	0, 0, 392, 393, 394, 396, 0, 0, 395, 643,
	644, 0, 645, 875, 397, 398, 0, 646, 0, 399,
	400, 401, 0, 402, 0, 0, 0, 403, 404, 405,
	406, 407, 408, 0, 409, 411, 410, 0, 412, 647,
	0, 413, 414, 0, 0, 415, 0, 0, 0, 416,
	417, 420, 0, 0, 418, 419, 421, 422, 0, 423,
	424, 426, 429, 425, 427, 428, 430, 443, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	445, 0, 444, 0, 446, 447, 448, 453, 455, 456,
	451, 452, 454, 457, 458, 450, 0, 459, 449, 0,
	0, 0, 460, 461, 0, 648, 462, 649, 464, 465,
	0, 0, 466, 0, 0, 0, 468, 469, 470, 0,
	0, 471, 472, 650, 0, 473, 0, 651, 474, 475,
	467, 476, 477, 478, 479, 480, 481, 482, 483, 0,
	484, 485, 652, 486, 487, 488, 653, 489, 490, 491,
	654, 492, 655, 493, 494, 0, 495, 496, 0, 497,
	498, 499, 500, 501, 502, 503, 656, 504, 506, 505,
	507, 0, 508, 0, 509, 510, 511, 0, 0, 0,
	0, 512, 0, 514, 515, 516, 517, 513, 518, 519,
	520, 521, 0, 522, 523, 524, 0, 525, 526, 527,
	528, 657, 529, 0, 530, 531, 537, 538, 539, 532,
	533, 540, 541, 542, 543, 544, 0, 546, 547, 545,
	548, 549, 550, 0, 551, 552, 534, 535, 553, 554,
	0, 555, 556, 557, 558, 559, 560, 561, 658, 0,
	562, 0, 563, 564, 565, 567, 536, 568, 573, 574,
	659, 569, 570, 571, 572, 660, 576, 577, 0, 578,
	579, 0, 575, 566, 874, 580, 581, 582, 583, 584,
	585, 586, 354, 587, 0, 588, 661, 662, 663, 664,
	0, 597, 0, 589, 590, 591, 665, 592, 666, 0,
	593, 594, 595, 596, 0, 598, 599, 0, 0, 600,
	601, 602, 604, 605, 603, 606, 0, 607, 0, 0,
	608, 609, 610, 667, 668, 669, 265, 612, 611, 613,
	670, 0, 614, 0, 0, 0, 0, 615, 616, 671,
	617, 618, 619, 271, 273, 272, 274, 275, 276, 277,
	0, 278, 279, 0, 0, 0, 0, 0, 620, 0,
	0, 0, 0, 280, 281, 0, 282, 283, 284, 285,
	286, 287, 621, 622, 0, 288, 623, 289, 624, 0,
	625, 290, 291, 292, 293, 294, 295, 0, 0, 0,
	296, 626, 627, 628, 0, 297, 298, 629, 0, 0,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 0, 321,
	322, 323, 0, 0, 0, 0, 0, 0, 0, 324,
	325, 326, 327, 328, 0, 329, 630, 631, 0, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 340, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 632, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 633, 634, 360, 0,
	3024, 0, 0, 0, 0, 0, 361, 362, 363, 635,
	0, 0, 0, 364, 0, 365, 366, 0, 0, 0,
	367, 368, 636, 637, 369, 370, 371, 372, 373, 374,
	375, 376, 377, 0, 378, 638, 0, 639, 379, 0,
	380, 381, 382, 383, 384, 640, 641, 642, 463, 0,
	385, 386, 0, 387, 388, 389, 390, 391, 0, 0,
	0, 0, 392, 393, 394, 396, 0, 0, 395, 643,
	644, 0, 645, 0, 397, 398, 0, 646, 0, 399,
	400, 401, 0, 402, 0, 0, 0, 403, 404, 405,
	406, 407, 408, 0, 409, 411, 410, 0, 412, 647,
	0, 413, 414, 0, 0, 415, 0, 0, 0, 416,
	417, 420, 0, 0, 418, 419, 421, 422, 0, 423,
	424, 426, 429, 425, 427, 428, 430, 443, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	445, 0, 444, 0, 446, 447, 448, 453, 455, 456,
	451, 452, 454, 457, 458, 450, 0, 459, 449, 0,
	0, 0, 460, 461, 0, 648, 462, 649, 464, 465,
	0, 0, 466, 0, 0, 0, 468, 469, 470, 0,
	0, 471, 472, 650, 0, 473, 0, 651, 474, 475,
	467, 476, 477, 478, 479, 480, 481, 482, 483, 0,
	484, 485, 652, 486, 487, 488, 653, 489, 490, 491,
	654, 492, 655, 493, 494, 4136, 495, 496, 0, 497,
	498, 499, 500, 501, 502, 503, 656, 504, 506, 505,
	507, 0, 508, 0, 509, 510, 511, 0, 0, 0,
	0, 512, 0, 514, 515, 516, 517, 513, 518, 519,
	520, 521, 0, 522, 523, 524, 0, 525, 526, 527,
	528, 657, 529, 0, 530, 531, 537, 538, 539, 532,
	533, 540, 541, 542, 543, 544, 0, 546, 547, 545,
	548, 549, 550, 0, 551, 552, 534, 535, 553, 554,
	0, 555, 556, 557, 558, 559, 560, 561, 658, 0,
	562, 0, 563, 564, 565, 567, 536, 568, 573, 574,
	659, 569, 570, 571, 572, 660, 576, 577, 0, 578,
	579, 0, 575, 566, 0, 580, 581, 582, 583, 584,
	585, 586, 354, 587, 0, 588, 661, 662, 663, 664,
	0, 597, 0, 589, 590, 591, 665, 592, 666, 0,
	593, 594, 595, 596, 0, 598, 599, 0, 0, 600,
	601, 602, 604, 605, 603, 606, 0, 607, 0, 0,
	608, 609, 610, 667, 668, 669, 0, 612, 611, 613,
	670, 760, 614, 265, 0, 0, 0, 615, 616, 671,
	617, 618, 619, 0, 0, 0, 0, 0, 0, 0,
	271, 273, 272, 274, 275, 276, 277, 0, 278, 279,
	0, 0, 0, 0, 0, 620, 0, 0, 0, 0,
	280, 281, 1329, 282, 283, 284, 285, 286, 287, 621,
	622, 0, 288, 623, 289, 624, 0, 625, 290, 291,
	292, 293, 294, 295, 0, 0, 0, 296, 626, 627,
	1327, 0, 297, 298, 629, 0, 0, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 316,
	317, 0, 318, 319, 320, 0, 321, 322, 323, 0,
	0, 0, 0, 0, 0, 0, 324, 325, 326, 327,
	328, 0, 329, 630, 631, 0, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	340, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 632, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 633, 634, 360, 0, 0, 0, 0,
	0, 0, 0, 361, 362, 363, 635, 0, 0, 0,
	364, 0, 365, 366, 0, 0, 0, 367, 368, 636,
	637, 369, 370, 371, 372, 373, 374, 375, 376, 377,
	0, 378, 638, 0, 639, 379, 0, 380, 381, 382,
	383, 384, 640, 641, 642, 463, 0, 385, 386, 0,
	387, 388, 389, 390, 391, 0, 0, 0, 0, 392,
	393, 394, 396, 0, 0, 395, 643, 644, 0, 645,
	0, 397, 398, 0, 646, 0, 399, 400, 401, 0,
	402, 0, 0, 0, 403, 404, 405, 406, 407, 408,
	0, 409, 411, 410, 0, 412, 647, 0, 413, 414,
	0, 0, 415, 0, 0, 0, 416, 417, 420, 0,
	0, 418, 419, 421, 422, 0, 423, 424, 426, 429,
	425, 427, 428, 430, 443, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 445, 0, 761,
	0, 446, 447, 448, 453, 455, 456, 451, 452, 454,
	457, 458, 450, 0, 459, 449, 0, 0, 0, 460,
	461, 0, 648, 462, 649, 464, 465, 0, 0, 466,
	0, 0, 0, 468, 469, 470, 0, 0, 471, 472,
	650, 0, 473, 0, 651, 474, 475, 467, 476, 477,
	478, 479, 480, 481, 482, 483, 0, 484, 485, 652,
	486, 487, 488, 653, 489, 490, 491, 654, 492, 655,
	493, 494, 0, 495, 496, 0, 497, 498, 499, 500,
	501, 502, 503, 656, 504, 506, 505, 507, 0, 508,
	0, 509, 510, 511, 0, 0, 0, 0, 512, 0,
	514, 515, 516, 517, 513, 518, 519, 520, 521, 0,
	522, 523, 524, 0, 525, 526, 527, 528, 657, 529,
	0, 530, 531, 537, 538, 539, 532, 533, 757, 541,
	542, 543, 544, 0, 546, 547, 545, 548, 1330, 550,
	0, 551, 552, 534, 535, 553, 554, 0, 555, 556,
	557, 558, 559, 560, 561, 658, 0, 562, 0, 563,
	564, 565, 567, 536, 568, 573, 574, 659, 569, 570,
	571, 572, 660, 576, 577, 0, 578, 579, 0, 575,
	566, 0, 580, 581, 582, 583, 584, 585, 586, 354,
	587, 0, 588, 756, 662, 663, 664, 0, 597, 0,
	589, 590, 591, 665, 592, 666, 0, 593, 594, 595,
	596, 0, 598, 599, 0, 0, 600, 601, 602, 604,
	605, 603, 606, 0, 607, 0, 0, 608, 609, 610,
	667, 668, 669, 0, 612, 611, 613, 670, 760, 614,
	265, 0, 0, 0, 615, 616, 671, 617, 618, 619,
	0, 0, 0, 0, 0, 0, 0, 271, 273, 272,
	274, 275, 276, 277, 0, 278, 279, 0, 0, 0,
	0, 0, 620, 0, 0, 0, 0, 280, 281, 1329,
	282, 283, 284, 285, 286, 287, 621, 622, 0, 288,
	623, 289, 624, 0, 625, 290, 291, 292, 293, 294,
	295, 0, 0, 0, 296, 626, 627, 1327, 0, 297,
	298, 629, 0, 0, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 0, 321, 322, 323, 0, 0, 0, 0,
	0, 0, 0, 324, 325, 326, 327, 328, 0, 329,
	630, 631, 0, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 340, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 632,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	633, 634, 360, 0, 0, 0, 0, 0, 0, 0,
	361, 362, 363, 635, 0, 0, 0, 364, 0, 365,
	366, 0, 0, 0, 367, 368, 636, 637, 369, 370,
	371, 372, 373, 374, 375, 376, 377, 0, 378, 638,
	0, 639, 379, 0, 380, 381, 382, 383, 384, 640,
	641, 642, 463, 0, 385, 386, 0, 387, 388, 389,
	390, 391, 0, 0, 0, 0, 392, 393, 394, 396,
	0, 0, 395, 643, 644, 0, 645, 0, 397, 398,
	0, 646, 0, 399, 400, 401, 0, 402, 0, 0,
	0, 403, 404, 405, 406, 407, 408, 0, 409, 411,
	410, 0, 412, 647, 0, 413, 414, 0, 0, 415,
	0, 0, 0, 416, 417, 420, 0, 0, 418, 419,
	421, 422, 0, 423, 424, 426, 429, 425, 427, 428,
	430, 443, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 442, 445, 0, 761, 0, 446, 447,
	448, 453, 455, 456, 451, 452, 454, 457, 458, 450,
	0, 459, 449, 0, 0, 0, 460, 461, 0, 648,
	462, 649, 464, 465, 0, 0, 466, 0, 0, 0,
	468, 469, 470, 0, 0, 471, 472, 650, 0, 473,
	0, 651, 474, 475, 467, 476, 477, 478, 479, 480,
	481, 482, 483, 0, 484, 485, 652, 486, 487, 488,
	653, 489, 490, 491, 654, 492, 655, 493, 494, 0,
	495, 496, 0, 497, 498, 499, 500, 501, 502, 503,
	656, 504, 506, 505, 507, 0, 508, 0, 509, 510,
	511, 0, 0, 0, 0, 512, 0, 514, 515, 516,
	517, 513, 518, 519, 520, 521, 0, 522, 523, 524,
	0, 525, 526, 527, 528, 657, 529, 0, 530, 531,
	537, 538, 539, 532, 533, 757, 541, 542, 543, 544,
	0, 546, 547, 545, 548, 1330, 550, 0, 551, 552,
	534, 535, 553, 554, 0, 555, 556, 557, 558, 559,
	560, 561, 658, 0, 562, 0, 563, 564, 565, 567,
	536, 568, 573, 574, 659, 569, 570, 571, 572, 660,
	576, 577, 0, 578, 579, 0, 575, 566, 0, 580,
	581, 582, 583, 584, 585, 586, 354, 587, 0, 588,
	756, 662, 663, 664, 0, 597, 0, 589, 1328, 591,
	665, 592, 666, 0, 593, 594, 595, 596, 0, 598,
	599, 0, 0, 600, 601, 602, 604, 605, 603, 606,
	0, 607, 0, 0, 608, 609, 610, 667, 668, 669,
	0, 612, 611, 613, 670, 682, 614, 265, 0, 0,
	0, 615, 616, 671, 617, 618, 619, 0, 0, 0,
	0, 0, 0, 0, 271, 273, 272, 274, 275, 276,
	277, 681, 278, 279, 0, 0, 0, 0, 0, 620,
	0, 0, 0, 0, 280, 281, 0, 282, 283, 284,
	285, 286, 287, 621, 622, 0, 288, 623, 289, 624,
	0, 625, 290, 291, 292, 293, 294, 295, 0, 0,
	0, 296, 626, 627, 628, 0, 297, 298, 629, 0,
	0, 0, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 0, 311, 0, 312,
	313, 314, 315, 316, 317, 0, 318, 319, 320, 0,
	321, 322, 323, 0, 0, 0, 0, 0, 0, 0,
	324, 325, 326, 327, 328, 0, 329, 630, 631, 0,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 340, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 347, 348, 632, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 633, 634, 360,
	0, 0, 0, 0, 0, 0, 0, 361, 362, 363,
	635, 0, 0, 0, 364, 0, 365, 366, 0, 0,
	0, 367, 368, 636, 637, 369, 370, 371, 372, 373,
	374, 375, 376, 377, 0, 378, 638, 0, 639, 379,
	0, 380, 381, 382, 383, 384, 640, 641, 642, 463,
	0, 385, 386, 0, 387, 388, 389, 390, 391, 0,
	0, 0, 0, 392, 393, 394, 396, 0, 0, 395,
	643, 644, 0, 645, 0, 397, 398, 0, 646, 0,
	399, 400, 401, 0, 402, 0, 0, 0, 403, 404,
	405, 406, 407, 408, 0, 409, 411, 410, 0, 412,
	647, 0, 413, 414, 0, 0, 415, 0, 0, 0,
	416, 417, 420, 0, 0, 418, 419, 421, 422, 0,
	423, 424, 426, 429, 425, 427, 428, 430, 443, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 445, 0, 444, 0, 446, 447, 448, 453, 455,
	456, 451, 452, 454, 457, 458, 450, 0, 459, 449,
	0, 0, 0, 460, 461, 0, 648, 462, 649, 464,
	465, 0, 0, 466, 0, 0, 0, 468, 469, 470,
	0, 0, 471, 472, 650, 0, 473, 0, 651, 474,
	475, 467, 476, 477, 478, 479, 480, 481, 482, 483,
	0, 484, 485, 652, 486, 487, 488, 653, 489, 490,
	491, 654, 492, 655, 680, 494, 0, 495, 496, 0,
	497, 498, 499, 500, 501, 502, 503, 656, 504, 506,
	505, 507, 0, 508, 0, 509, 510, 511, 0, 0,
	0, 0, 512, 0, 514, 515, 516, 517, 513, 518,
	519, 520, 521, 0, 522, 523, 524, 0, 525, 526,
	527, 528, 657, 529, 0, 530, 531, 537, 538, 539,
	532, 533, 540, 541, 542, 543, 544, 0, 546, 547,
	545, 548, 549, 550, 0, 551, 552, 534, 535, 553,
	554, 0, 555, 556, 557, 558, 559, 560, 561, 658,
	0, 562, 0, 563, 564, 565, 567, 536, 568, 573,
	574, 659, 569, 570, 571, 572, 660, 576, 577, 0,
	578, 579, 0, 575, 566, 0, 580, 581, 582, 583,
	584, 585, 586, 354, 587, 0, 588, 661, 662, 663,
	664, 0, 597, 0, 589, 590, 591, 665, 592, 666,
	0, 593, 594, 595, 596, 0, 598, 599, 0, 0,
	600, 601, 602, 604, 605, 603, 606, 0, 607, 0,
	0, 608, 609, 610, 667, 668, 669, 0, 612, 611,
	613, 670, 0, 614, 265, 3011, 0, 0, 615, 616,
	671, 617, 618, 619, 0, 0, 0, 0, 0, 0,
	0, 271, 273, 272, 274, 275, 276, 277, 0, 278,
	279, 0, 0, 0, 0, 0, 620, 0, 0, 0,
	0, 280, 281, 0, 282, 283, 284, 285, 286, 287,
	621, 622, 0, 288, 623, 289, 624, 0, 625, 290,
	291, 292, 293, 294, 295, 0, 0, 0, 296, 626,
	627, 628, 0, 297, 298, 629, 0, 0, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 311, 0, 312, 313, 314, 315,
	316, 317, 0, 318, 319, 320, 0, 321, 322, 323,
	0, 0, 0, 0, 0, 0, 0, 324, 325, 326,
	327, 328, 0, 329, 630, 631, 0, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 340, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 632, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 633, 634, 360, 0, 0, 0,
	0, 0, 0, 0, 361, 362, 363, 635, 0, 0,
	0, 364, 0, 365, 366, 0, 0, 0, 367, 368,
	636, 637, 369, 370, 371, 372, 373, 374, 375, 376,
	377, 0, 378, 638, 0, 639, 379, 0, 380, 381,
	382, 383, 384, 640, 641, 642, 463, 0, 385, 386,
	0, 387, 388, 389, 390, 391, 0, 0, 0, 0,
	392, 393, 394, 396, 0, 0, 395, 643, 644, 0,
	645, 0, 397, 398, 0, 646, 0, 399, 400, 401,
	0, 402, 0, 0, 0, 403, 404, 405, 406, 407,
	408, 0, 409, 411, 410, 0, 412, 647, 0, 413,
	414, 0, 0, 415, 0, 0, 0, 416, 417, 420,
	0, 0, 418, 419, 421, 422, 0, 423, 424, 426,
	429, 425, 427, 428, 430, 443, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 442, 445, 0,
	444, 0, 446, 447, 448, 453, 455, 456, 451, 452,
	454, 457, 458, 450, 0, 459, 449, 0, 0, 0,
	460, 461, 0, 648, 462, 649, 464, 465, 0, 0,
	466, 0, 0, 0, 468, 469, 470, 0, 0, 471,
	472, 650, 0, 473, 0, 651, 474, 475, 467, 476,
	477, 478, 479, 480, 481, 482, 483, 0, 484, 485,
	652, 486, 487, 488, 653, 489, 490, 491, 654, 492,
	655, 493, 494, 0, 495, 496, 0, 497, 498, 499,
	500, 501, 502, 503, 656, 504, 506, 505, 507, 0,
	508, 0, 509, 510, 511, 0, 0, 0, 0, 512,
	0, 514, 515, 516, 517, 513, 518, 519, 520, 521,
	0, 522, 523, 524, 0, 525, 526, 527, 528, 657,
	529, 0, 530, 531, 537, 538, 539, 532, 533, 540,
	541, 542, 543, 544, 0, 546, 547, 545, 548, 549,
	550, 0, 551, 552, 534, 535, 553, 554, 0, 555,
	556, 557, 558, 559, 560, 561, 658, 0, 562, 0,
	563, 564, 565, 567, 536, 568, 573, 574, 659, 569,
	570, 571, 572, 660, 576, 577, 0, 578, 579, 0,
	575, 566, 0, 580, 581, 582, 583, 584, 585, 586,
	354, 587, 0, 588, 661, 662, 663, 664, 0, 597,
	0, 589, 590, 591, 665, 592, 666, 0, 593, 594,
	595, 596, 0, 598, 599, 0, 0, 600, 601, 602,
	604, 605, 603, 606, 0, 607, 0, 0, 608, 609,
	610, 667, 668, 669, 0, 612, 611, 613, 670, 0,
	614, 265, 4146, 0, 0, 615, 616, 671, 617, 618,
	619, 0, 0, 0, 0, 0, 0, 0, 271, 273,
	272, 274, 275, 276, 277, 0, 278, 279, 0, 0,
	0, 0, 0, 620, 0, 0, 0, 0, 280, 281,
	0, 282, 283, 284, 285, 286, 287, 621, 622, 0,
	288, 623, 289, 624, 0, 625, 290, 291, 292, 293,
	294, 295, 0, 0, 0, 296, 626, 627, 628, 0,
	297, 298, 629, 0, 0, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 0, 321, 322, 323, 0, 0, 0,
	0, 0, 0, 0, 324, 325, 326, 327, 328, 0,
	329, 630, 631, 0, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 340, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	632, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 633, 634, 360, 0, 0, 0, 0, 0, 0,
	0, 361, 362, 363, 635, 0, 0, 0, 364, 0,
	365, 366, 0, 0, 0, 367, 368, 636, 637, 369,
	370, 371, 372, 373, 374, 375, 376, 377, 0, 378,
	638, 0, 639, 379, 0, 380, 381, 382, 383, 384,
	640, 641, 642, 463, 0, 385, 386, 0, 387, 388,
	389, 390, 391, 0, 0, 0, 0, 392, 393, 394,
	396, 0, 0, 395, 643, 644, 0, 645, 0, 397,
	398, 0, 646, 0, 399, 400, 401, 0, 402, 0,
	0, 0, 403, 404, 405, 406, 407, 408, 0, 409,
	411, 410, 0, 412, 647, 0, 413, 414, 0, 0,
	415, 0, 0, 0, 416, 417, 420, 0, 0, 418,
	419, 421, 422, 0, 423, 424, 426, 429, 425, 427,
	428, 430, 443, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 445, 0, 444, 0, 446,
	447, 448, 453, 455, 456, 451, 452, 454, 457, 458,
	450, 0, 459, 449, 0, 0, 0, 460, 461, 0,
	648, 462, 649, 464, 465, 0, 0, 466, 0, 0,
	0, 468, 469, 470, 0, 0, 471, 472, 650, 0,
	473, 0, 651, 474, 475, 467, 476, 477, 478, 479,
	480, 481, 482, 483, 0, 484, 485, 652, 486, 487,
	488, 653, 489, 490, 491, 654, 492, 655, 493, 494,
	0, 495, 496, 0, 497, 498, 499, 500, 501, 502,
	503, 656, 504, 506, 505, 507, 0, 508, 0, 509,
	510, 511, 0, 0, 0, 0, 512, 0, 514, 515,
	516, 517, 513, 518, 519, 520, 521, 0, 522, 523,
	524, 0, 525, 526, 527, 528, 657, 529, 0, 530,
	531, 537, 538, 539, 532, 533, 540, 541, 542, 543,
	544, 0, 546, 547, 545, 548, 549, 550, 0, 551,
	552, 534, 535, 553, 554, 0, 555, 556, 557, 558,
	559, 560, 561, 658, 0, 562, 0, 563, 564, 565,
	567, 536, 568, 573, 574, 659, 569, 570, 571, 572,
	660, 576, 577, 0, 578, 579, 0, 575, 566, 0,
	580, 581, 582, 583, 584, 585, 586, 354, 587, 0,
	588, 661, 662, 663, 664, 0, 597, 0, 589, 590,
	591, 665, 592, 666, 0, 593, 594, 595, 596, 0,
	598, 599, 0, 0, 600, 601, 602, 604, 605, 603,
	606, 0, 607, 0, 0, 608, 609, 610, 667, 668,
	669, 265, 612, 611, 613, 670, 0, 614, 0, 0,
	0, 0, 615, 616, 671, 617, 618, 619, 271, 273,
	272, 274, 275, 276, 277, 0, 278, 279, 0, 0,
	0, 0, 0, 620, 0, 0, 0, 0, 280, 281,
	0, 282, 283, 284, 285, 286, 287, 621, 622, 0,
	288, 623, 289, 624, 0, 625, 290, 291, 292, 293,
	294, 295, 0, 0, 0, 296, 626, 627, 628, 0,
	297, 298, 629, 0, 0, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 0, 321, 322, 323, 0, 0, 0,
	0, 0, 0, 0, 324, 325, 326, 327, 328, 0,
	329, 630, 631, 0, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 340, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	632, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 633, 634, 360, 0, 0, 0, 0, 0, 0,
	0, 361, 362, 363, 635, 0, 0, 0, 364, 0,
	365, 366, 0, 0, 0, 367, 368, 636, 637, 369,
	370, 371, 372, 373, 374, 375, 376, 377, 0, 378,
	638, 0, 639, 379, 0, 380, 381, 382, 383, 384,
	640, 641, 642, 463, 0, 385, 386, 0, 387, 388,
	389, 390, 391, 0, 0, 0, 0, 392, 393, 394,
	396, 0, 0, 395, 643, 644, 0, 645, 0, 397,
	398, 0, 646, 0, 399, 400, 401, 0, 402, 0,
	0, 0, 403, 404, 405, 406, 407, 408, 0, 409,
	411, 410, 0, 412, 647, 0, 413, 414, 0, 0,
	415, 0, 0, 0, 416, 417, 420, 0, 0, 418,
	419, 421, 422, 0, 423, 424, 426, 429, 425, 427,
	428, 430, 443, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 445, 0, 444, 0, 446,
	447, 448, 453, 455, 456, 451, 452, 454, 457, 458,
	450, 0, 459, 449, 0, 0, 0, 460, 461, 0,
	648, 462, 649, 464, 465, 0, 0, 466, 0, 0,
	0, 468, 469, 470, 0, 0, 471, 472, 650, 0,
	473, 0, 651, 474, 475, 467, 476, 477, 478, 479,
	480, 481, 482, 483, 0, 484, 485, 652, 486, 487,
	488, 653, 489, 490, 491, 654, 492, 655, 493, 494,
	4412, 495, 496, 0, 497, 498, 499, 500, 501, 502,
	503, 656, 504, 506, 505, 507, 0, 508, 0, 509,
	510, 511, 0, 0, 0, 0, 512, 0, 514, 515,
	516, 517, 513, 518, 519, 520, 521, 0, 522, 523,
	524, 0, 525, 526, 527, 528, 657, 529, 0, 530,
	531, 537, 538, 539, 532, 533, 540, 541, 542, 543,
	544, 0, 546, 547, 545, 548, 549, 550, 0, 551,
	552, 534, 535, 553, 554, 0, 555, 556, 557, 558,
	559, 560, 561, 658, 0, 562, 0, 563, 564, 565,
	567, 536, 568, 573, 574, 659, 569, 570, 571, 572,
	660, 576, 577, 0, 578, 579, 0, 575, 566, 0,
	580, 581, 582, 583, 584, 585, 586, 354, 587, 0,
	588, 661, 662, 663, 664, 0, 597, 0, 589, 590,
	591, 665, 592, 666, 0, 593, 594, 595, 596, 0,
	598, 599, 0, 0, 600, 601, 602, 604, 605, 603,
	606, 0, 607, 0, 0, 608, 609, 610, 667, 668,
	669, 265, 612, 611, 613, 670, 0, 614, 0, 0,
	0, 0, 615, 616, 671, 617, 618, 619, 271, 273,
	272, 274, 275, 276, 277, 0, 278, 279, 0, 0,
	0, 0, 0, 620, 0, 0, 0, 0, 280, 281,
	0, 282, 283, 284, 285, 286, 287, 621, 622, 0,
	288, 623, 289, 624, 0, 625, 290, 291, 292, 293,
	294, 295, 0, 0, 0, 296, 626, 627, 628, 0,
	297, 298, 629, 0, 0, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 0, 321, 322, 323, 0, 0, 0,
	0, 0, 0, 0, 324, 325, 326, 327, 328, 0,
	329, 630, 631, 0, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 340, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	632, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 633, 634, 360, 0, 0, 0, 0, 0, 0,
	0, 361, 362, 363, 635, 0, 0, 0, 364, 0,
	365, 366, 0, 0, 0, 367, 368, 636, 637, 369,
	370, 371, 372, 373, 374, 375, 376, 377, 0, 378,
	638, 0, 639, 379, 0, 380, 381, 382, 383, 384,
	640, 641, 642, 463, 0, 385, 386, 0, 387, 388,
	389, 390, 391, 0, 0, 0, 0, 392, 393, 394,
	396, 0, 0, 395, 643, 644, 0, 645, 0, 397,
	398, 0, 646, 0, 399, 400, 401, 0, 402, 0,
	0, 0, 403, 404, 405, 406, 407, 408, 0, 409,
	411, 410, 0, 412, 647, 0, 413, 414, 0, 0,
	415, 0, 0, 0, 416, 417, 420, 0, 0, 418,
	419, 421, 422, 0, 423, 424, 426, 429, 425, 427,
	428, 430, 443, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 445, 0, 444, 0, 446,
	447, 448, 453, 455, 456, 451, 452, 454, 457, 458,
	450, 0, 459, 449, 0, 0, 0, 460, 461, 0,
	648, 462, 649, 464, 465, 0, 0, 466, 0, 0,
	0, 468, 469, 470, 0, 0, 471, 472, 650, 0,
	473, 0, 651, 474, 475, 467, 476, 477, 478, 479,
	480, 481, 482, 483, 0, 484, 485, 652, 486, 487,
	488, 653, 489, 490, 491, 654, 492, 655, 493, 494,
	4043, 495, 496, 0, 497, 498, 499, 500, 501, 502,
	503, 656, 504, 506, 505, 507, 0, 508, 0, 509,
	510, 511, 0, 0, 0, 0, 512, 0, 514, 515,
	516, 517, 513, 518, 519, 520, 521, 0, 522, 523,
	524, 0, 525, 526, 527, 528, 657, 529, 0, 530,
	531, 537, 538, 539, 532, 533, 540, 541, 542, 543,
	544, 0, 546, 547, 545, 548, 549, 550, 0, 551,
	552, 534, 535, 553, 554, 0, 555, 556, 557, 558,
	559, 560, 561, 658, 0, 562, 0, 563, 564, 565,
	567, 536, 568, 573, 574, 659, 569, 570, 571, 572,
	660, 576, 577, 0, 578, 579, 0, 575, 566, 0,
	580, 581, 582, 583, 584, 585, 586, 354, 587, 0,
	588, 661, 662, 663, 664, 0, 597, 0, 589, 590,
	591, 665, 592, 666, 0, 593, 594, 595, 596, 0,
	598, 599, 0, 0, 600, 601, 602, 604, 605, 603,
	606, 0, 607, 0, 0, 608, 609, 610, 667, 668,
	669, 265, 612, 611, 613, 670, 0, 614, 0, 0,
	0, 0, 615, 616, 671, 617, 618, 619, 271, 273,
	272, 274, 275, 276, 277, 0, 278, 279, 0, 0,
	0, 0, 0, 620, 0, 0, 0, 0, 280, 281,
	0, 282, 283, 284, 285, 286, 287, 621, 622, 0,
	288, 623, 289, 624, 0, 625, 290, 291, 292, 293,
	294, 295, 0, 0, 0, 296, 626, 627, 628, 0,
	297, 298, 629, 0, 0, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 0, 321, 322, 323, 0, 0, 0,
	0, 0, 0, 0, 324, 325, 326, 327, 328, 0,
	329, 630, 631, 3816, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 340, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	632, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 633, 634, 360, 0, 0, 0, 0, 0, 0,
	0, 361, 362, 363, 635, 0, 0, 0, 364, 0,
	365, 366, 0, 0, 0, 367, 368, 636, 637, 369,
	370, 371, 372, 373, 374, 375, 376, 377, 0, 378,
	638, 0, 639, 379, 0, 380, 381, 382, 383, 384,
	640, 641, 642, 463, 0, 385, 386, 0, 387, 388,
	389, 390, 391, 0, 0, 0, 0, 392, 393, 394,
	396, 0, 0, 395, 643, 644, 0, 645, 0, 397,
	398, 0, 646, 0, 399, 400, 401, 0, 402, 0,
	0, 0, 403, 404, 405, 406, 407, 408, 0, 409,
	411, 410, 0, 412, 647, 0, 413, 414, 0, 0,
	415, 0, 0, 0, 416, 417, 420, 0, 0, 418,
	419, 421, 422, 0, 423, 424, 426, 429, 425, 427,
	428, 430, 443, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 445, 0, 444, 0, 446,
	447, 448, 453, 455, 456, 451, 452, 454, 457, 458,
	450, 0, 459, 449, 0, 0, 0, 460, 461, 0,
	648, 462, 649, 464, 465, 0, 0, 466, 0, 0,
	0, 468, 469, 470, 0, 0, 471, 472, 650, 0,
	473, 0, 651, 474, 475, 467, 476, 477, 478, 479,
	480, 481, 482, 483, 0, 484, 485, 652, 486, 487,
	488, 653, 489, 490, 491, 654, 492, 655, 493, 494,
	0, 495, 496, 0, 497, 498, 499, 500, 501, 502,
	503, 656, 504, 506, 505, 507, 0, 508, 0, 509,
	510, 511, 0, 0, 0, 0, 512, 0, 514, 515,
	516, 517, 513, 518, 519, 520, 521, 0, 522, 523,
	524, 0, 525, 526, 527, 528, 657, 529, 0, 530,
	531, 537, 538, 539, 532, 533, 540, 541, 542, 543,
	544, 0, 546, 547, 545, 548, 549, 550, 0, 551,
	552, 534, 535, 553, 554, 0, 555, 556, 557, 558,
	559, 560, 561, 658, 0, 562, 0, 563, 564, 565,
	567, 536, 568, 573, 574, 659, 569, 570, 571, 572,
	660, 576, 577, 0, 578, 579, 0, 575, 566, 0,
	580, 581, 582, 583, 584, 585, 586, 354, 587, 0,
	588, 661, 662, 663, 664, 0, 597, 0, 589, 590,
	591, 665, 592, 666, 0, 593, 594, 595, 596, 0,
	598, 599, 0, 0, 600, 601, 602, 604, 605, 603,
	606, 0, 607, 0, 0, 608, 609, 610, 667, 668,
	669, 265, 612, 611, 613, 670, 0, 614, 0, 0,
	0, 0, 615, 616, 671, 617, 618, 619, 271, 273,
	272, 274, 275, 276, 277, 0, 278, 279, 0, 0,
	0, 0, 0, 620, 0, 2702, 0, 0, 280, 281,
	0, 282, 283, 284, 285, 286, 287, 621, 622, 0,
	288, 623, 289, 624, 0, 625, 290, 291, 292, 293,
	294, 295, 0, 0, 0, 296, 626, 627, 628, 0,
	297, 298, 629, 0, 0, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 0, 321, 322, 323, 0, 0, 0,
	0, 0, 0, 0, 324, 325, 326, 327, 328, 0,
	329, 630, 631, 0, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 340, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	632, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 633, 634, 360, 0, 0, 0, 0, 0, 0,
	0, 361, 362, 363, 635, 0, 0, 0, 364, 0,
	365, 366, 0, 0, 0, 367, 368, 636, 637, 369,
	370, 371, 372, 373, 374, 375, 376, 377, 0, 378,
	638, 0, 639, 379, 0, 380, 381, 382, 383, 384,
	640, 641, 642, 463, 0, 385, 386, 0, 387, 388,
	389, 390, 391, 0, 0, 0, 0, 392, 393, 394,
	396, 0, 0, 395, 643, 644, 0, 645, 0, 397,
	398, 0, 646, 0, 399, 400, 401, 0, 402, 0,
	0, 0, 403, 404, 405, 406, 407, 408, 0, 409,
	411, 410, 0, 412, 647, 0, 413, 414, 0, 0,
	415, 0, 0, 0, 416, 417, 420, 0, 0, 418,
	419, 421, 422, 0, 423, 424, 426, 429, 425, 427,
	428, 430, 443, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 445, 0, 444, 0, 446,
	447, 448, 453, 455, 456, 451, 452, 454, 457, 458,
	450, 0, 459, 449, 0, 0, 0, 460, 461, 0,
	648, 462, 649, 464, 465, 0, 0, 466, 0, 0,
	0, 468, 469, 470, 0, 0, 471, 472, 650, 0,
	473, 0, 651, 474, 475, 467, 476, 477, 478, 479,
	480, 481, 482, 483, 0, 484, 485, 652, 486, 487,
	488, 653, 489, 490, 491, 654, 492, 655, 493, 494,
	0, 495, 496, 0, 497, 498, 499, 500, 501, 502,
	503, 656, 504, 506, 505, 507, 0, 508, 0, 509,
	510, 511, 0, 0, 0, 0, 512, 0, 514, 515,
	516, 517, 513, 518, 519, 520, 521, 0, 522, 523,
	524, 0, 525, 526, 527, 528, 657, 529, 0, 530,
	531, 537, 538, 539, 532, 533, 540, 541, 542, 543,
	544, 0, 546, 547, 545, 548, 549, 550, 0, 551,
	552, 534, 535, 553, 554, 0, 555, 556, 557, 558,
	559, 560, 561, 658, 0, 562, 0, 563, 564, 565,
	567, 536, 568, 573, 574, 659, 569, 570, 571, 572,
	660, 576, 577, 0, 578, 579, 0, 575, 566, 0,
	580, 581, 582, 583, 584, 585, 586, 354, 587, 0,
	588, 661, 662, 663, 664, 0, 597, 0, 589, 590,
	591, 665, 592, 666, 0, 593, 594, 595, 596, 0,
	598, 599, 0, 0, 600, 601, 602, 604, 605, 603,
	606, 0, 607, 0, 0, 608, 609, 610, 667, 668,
	669, 0, 612, 611, 613, 670, 0, 614, 265, 3011,
	0, 0, 615, 616, 671, 617, 618, 619, 0, 0,
	0, 0, 0, 0, 0, 271, 273, 272, 274, 275,
	276, 277, 0, 278, 279, 0, 0, 0, 0, 0,
	620, 0, 0, 0, 0, 280, 281, 0, 282, 283,
	284, 285, 286, 287, 621, 622, 0, 288, 623, 289,
	624, 0, 625, 290, 291, 292, 293, 294, 295, 0,
	0, 0, 296, 626, 627, 628, 0, 297, 298, 629,
	0, 0, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	0, 321, 322, 323, 0, 0, 0, 0, 0, 0,
	0, 324, 325, 326, 327, 328, 0, 329, 630, 631,
	0, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 340, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 632, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 633, 634,
	360, 0, 0, 0, 0, 0, 0, 0, 361, 362,
	363, 635, 0, 0, 0, 364, 0, 365, 366, 0,
	0, 0, 367, 368, 636, 637, 369, 370, 371, 372,
	373, 374, 375, 376, 377, 0, 378, 638, 0, 639,
	379, 0, 380, 381, 382, 383, 384, 640, 641, 642,
	463, 0, 385, 386, 0, 387, 388, 389, 390, 391,
	0, 0, 0, 0, 392, 393, 394, 396, 0, 0,
	395, 643, 644, 0, 645, 0, 397, 398, 0, 646,
	0, 399, 400, 401, 0, 402, 0, 0, 0, 403,
	404, 405, 406, 407, 408, 0, 409, 411, 410, 0,
	412, 647, 0, 413, 414, 0, 0, 415, 0, 0,
	0, 416, 417, 420, 0, 0, 418, 419, 421, 422,
	0, 423, 424, 426, 429, 425, 427, 428, 430, 443,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 445, 0, 444, 0, 446, 447, 448, 453,
	455, 456, 451, 452, 454, 457, 458, 450, 0, 459,
	449, 0, 0, 0, 460, 461, 0, 648, 462, 649,
	464, 465, 0, 0, 466, 0, 0, 0, 468, 469,
	3008, 0, 0, 471, 472, 650, 0, 473, 0, 651,
	474, 475, 467, 476, 477, 478, 479, 480, 481, 482,
	483, 0, 484, 485, 652, 486, 487, 488, 653, 489,
	490, 491, 654, 492, 655, 493, 494, 0, 495, 496,
	0, 497, 498, 499, 500, 501, 502, 503, 656, 504,
	506, 505, 507, 0, 508, 0, 509, 510, 511, 0,
	0, 0, 0, 512, 0, 514, 515, 516, 517, 513,
	518, 519, 520, 521, 0, 522, 523, 524, 0, 525,
	526, 527, 528, 657, 529, 0, 530, 531, 537, 538,
	539, 532, 533, 540, 541, 542, 543, 544, 0, 546,
	547, 545, 548, 549, 550, 0, 551, 552, 534, 535,
	553, 554, 0, 555, 556, 557, 558, 559, 560, 561,
	658, 0, 562, 0, 563, 564, 565, 567, 536, 568,
	573, 574, 659, 569, 570, 571, 572, 660, 576, 577,
	0, 578, 579, 0, 575, 566, 0, 580, 581, 582,
	583, 584, 585, 586, 354, 587, 0, 588, 661, 662,
	663, 664, 0, 597, 0, 589, 590, 591, 665, 592,
	666, 0, 593, 594, 595, 596, 0, 598, 599, 0,
	0, 600, 601, 602, 604, 605, 603, 606, 0, 607,
	0, 0, 608, 609, 610, 667, 668, 669, 265, 612,
	611, 613, 670, 0, 614, 0, 0, 0, 0, 615,
	616, 671, 617, 618, 619, 271, 273, 272, 274, 275,
	276, 277, 2288, 278, 279, 0, 0, 0, 0, 0,
	620, 0, 0, 0, 0, 280, 281, 0, 282, 283,
	284, 285, 286, 287, 621, 622, 0, 288, 623, 289,
	624, 0, 625, 290, 291, 292, 293, 294, 295, 0,
	0, 0, 296, 626, 627, 628, 0, 297, 298, 629,
	0, 0, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	0, 321, 322, 323, 0, 0, 0, 0, 0, 0,
	0, 324, 325, 326, 327, 328, 0, 329, 630, 631,
	0, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 340, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 632, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 633, 634,
	360, 0, 0, 0, 0, 0, 0, 0, 361, 362,
	363, 635, 0, 0, 0, 364, 0, 365, 366, 0,
	0, 0, 367, 368, 636, 637, 369, 370, 371, 372,
	373, 374, 375, 376, 377, 0, 378, 638, 0, 639,
	379, 0, 380, 381, 382, 383, 384, 640, 641, 642,
	463, 0, 385, 386, 0, 387, 388, 389, 390, 391,
	0, 0, 0, 0, 392, 393, 394, 396, 0, 0,
	395, 643, 644, 0, 645, 0, 397, 398, 0, 646,
	0, 399, 400, 401, 0, 402, 0, 0, 0, 403,
	404, 405, 406, 407, 408, 0, 409, 411, 410, 0,
	412, 647, 0, 413, 414, 0, 0, 415, 0, 0,
	0, 416, 417, 420, 0, 0, 418, 419, 421, 422,
	0, 423, 424, 426, 429, 425, 427, 428, 430, 443,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 445, 0, 444, 0, 446, 447, 448, 453,
	455, 456, 451, 452, 454, 457, 458, 450, 0, 459,
	449, 0, 0, 0, 460, 461, 0, 648, 462, 649,
	464, 465, 0, 0, 466, 0, 0, 0, 468, 469,
	470, 0, 0, 471, 472, 650, 0, 473, 0, 651,
	474, 475, 467, 476, 477, 478, 479, 480, 481, 482,
	483, 0, 484, 485, 652, 486, 487, 488, 653, 489,
	490, 491, 654, 492, 655, 493, 494, 0, 495, 496,
	0, 497, 498, 499, 500, 501, 502, 503, 656, 504,
	506, 505, 507, 0, 508, 0, 509, 510, 511, 0,
	0, 0, 0, 512, 0, 514, 515, 516, 517, 513,
	518, 519, 520, 521, 0, 522, 523, 524, 0, 525,
	526, 527, 528, 657, 529, 0, 530, 531, 537, 538,
	539, 532, 533, 540, 541, 542, 543, 544, 0, 546,
	547, 545, 548, 549, 550, 0, 551, 552, 534, 535,
	553, 554, 0, 555, 556, 557, 558, 559, 560, 561,
	658, 0, 562, 0, 563, 564, 565, 567, 536, 568,
	573, 574, 659, 569, 570, 571, 572, 660, 576, 577,
	0, 578, 579, 0, 575, 566, 0, 580, 581, 582,
	583, 584, 585, 586, 354, 587, 0, 588, 661, 662,
	663, 664, 0, 597, 0, 589, 590, 591, 665, 592,
	666, 0, 593, 594, 595, 596, 0, 598, 599, 0,
	0, 600, 601, 602, 604, 605, 603, 606, 0, 607,
	0, 0, 608, 609, 610, 667, 668, 669, 0, 612,
	611, 613, 670, 2276, 614, 265, 0, 0, 0, 615,
	616, 671, 617, 618, 619, 0, 0, 0, 0, 0,
	0, 0, 271, 273, 272, 274, 275, 276, 277, 0,
	278, 279, 0, 0, 0, 0, 0, 620, 0, 0,
	0, 0, 280, 281, 0, 282, 283, 284, 285, 286,
	287, 621, 622, 0, 288, 623, 289, 624, 0, 625,
	290, 291, 292, 293, 294, 295, 0, 0, 0, 296,
	626, 627, 628, 0, 297, 298, 629, 0, 0, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 0, 321, 322,
	323, 0, 0, 0, 0, 0, 0, 0, 324, 325,
	326, 327, 328, 0, 329, 630, 631, 0, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 340, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 632, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 633, 634, 360, 0, 0,
	0, 0, 0, 0, 0, 361, 362, 363, 635, 0,
	0, 0, 364, 0, 365, 366, 0, 0, 0, 367,
	368, 636, 637, 369, 370, 371, 372, 373, 374, 375,
	376, 377, 0, 378, 638, 0, 639, 379, 0, 380,
	381, 382, 383, 384, 640, 641, 642, 463, 0, 385,
	386, 0, 387, 388, 389, 390, 391, 0, 0, 0,
	0, 392, 393, 394, 396, 0, 0, 395, 643, 644,
	0, 645, 0, 397, 398, 0, 646, 0, 399, 400,
	401, 0, 402, 0, 0, 0, 403, 404, 405, 406,
	407, 408, 0, 409, 411, 410, 0, 412, 647, 0,
	413, 414, 0, 0, 415, 0, 0, 0, 416, 417,
	420, 0, 0, 418, 419, 421, 422, 0, 423, 424,
	426, 429, 425, 427, 428, 430, 443, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 445,
	0, 444, 0, 446, 447, 448, 453, 455, 456, 451,
	452, 454, 457, 458, 450, 0, 459, 449, 0, 0,
	0, 460, 461, 0, 648, 462, 649, 464, 465, 0,
	0, 466, 0, 0, 0, 468, 469, 470, 0, 0,
	471, 472, 650, 0, 473, 0, 651, 474, 475, 467,
	476, 477, 478, 479, 480, 481, 482, 483, 0, 484,
	485, 652, 486, 487, 488, 653, 489, 490, 491, 654,
	492, 655, 493, 494, 0, 495, 496, 0, 497, 498,
	499, 500, 501, 502, 503, 656, 504, 506, 505, 507,
	0, 508, 0, 509, 510, 511, 0, 0, 0, 0,
	512, 0, 514, 515, 516, 517, 513, 518, 519, 520,
	521, 0, 522, 523, 524, 0, 525, 526, 527, 528,
	657, 529, 0, 530, 531, 537, 538, 539, 532, 533,
	540, 541, 542, 543, 544, 0, 546, 547, 545, 548,
	549, 550, 0, 551, 552, 534, 535, 553, 554, 0,
	555, 556, 557, 558, 559, 560, 561, 658, 0, 562,
	0, 563, 564, 565, 567, 536, 568, 573, 574, 659,
	569, 570, 571, 572, 660, 576, 577, 0, 578, 579,
	0, 575, 566, 0, 580, 581, 582, 583, 584, 585,
	586, 354, 587, 0, 588, 661, 662, 663, 664, 0,
	597, 0, 589, 590, 591, 665, 592, 666, 0, 593,
	594, 595, 596, 0, 598, 599, 0, 0, 600, 601,
	602, 604, 605, 603, 606, 0, 607, 0, 0, 608,
	609, 610, 667, 668, 669, 0, 612, 611, 613, 670,
	760, 614, 265, 0, 0, 0, 615, 616, 671, 617,
	618, 619, 0, 0, 0, 0, 0, 0, 0, 271,
	273, 272, 274, 275, 276, 277, 0, 278, 279, 0,
	0, 0, 0, 0, 620, 0, 0, 0, 0, 280,
	281, 0, 282, 283, 284, 285, 286, 287, 621, 622,
	0, 288, 623, 289, 624, 0, 625, 290, 291, 292,
	293, 294, 295, 0, 0, 0, 296, 626, 627, 628,
	0, 297, 750, 629, 0, 0, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 0, 321, 322, 323, 0, 0,
	0, 0, 0, 0, 0, 324, 325, 326, 327, 328,
	0, 329, 630, 631, 0, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 340,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 632, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 633, 634, 360, 0, 0, 0, 0, 0,
	0, 0, 361, 362, 363, 635, 0, 0, 0, 364,
	0, 365, 366, 0, 0, 0, 367, 368, 636, 637,
	369, 370, 371, 372, 373, 374, 375, 376, 377, 0,
	378, 638, 0, 639, 379, 0, 380, 381, 382, 383,
	384, 640, 641, 642, 463, 0, 385, 386, 0, 387,
	388, 389, 390, 391, 0, 0, 0, 0, 392, 393,
	394, 396, 0, 0, 395, 643, 644, 0, 645, 0,
	397, 398, 0, 646, 0, 399, 400, 401, 0, 402,
	0, 0, 0, 403, 404, 405, 406, 407, 408, 0,
	409, 411, 410, 0, 412, 647, 0, 413, 414, 0,
	0, 415, 0, 0, 0, 416, 417, 420, 0, 0,
	418, 419, 421, 422, 0, 423, 424, 426, 429, 425,
	427, 428, 430, 443, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 445, 0, 761, 0,
	446, 447, 448, 453, 455, 456, 451, 452, 454, 457,
	458, 450, 0, 459, 449, 0, 0, 0, 460, 461,
	0, 648, 462, 649, 464, 465, 0, 0, 466, 0,
	0, 0, 468, 469, 470, 0, 0, 471, 472, 650,
	0, 473, 0, 651, 474, 475, 467, 476, 477, 478,
	479, 480, 481, 482, 483, 0, 484, 485, 652, 486,
	487, 488, 653, 489, 490, 491, 654, 492, 655, 493,
	494, 0, 495, 496, 0, 497, 498, 499, 500, 501,
	502, 503, 656, 504, 506, 505, 507, 0, 508, 0,
	509, 510, 511, 0, 0, 0, 0, 512, 0, 514,
	515, 516, 517, 513, 518, 519, 520, 521, 0, 522,
	523, 524, 0, 525, 526, 527, 528, 657, 529, 0,
	530, 531, 537, 538, 539, 532, 533, 757, 541, 542,
	543, 544, 0, 546, 547, 545, 548, 1590, 550, 0,
	551, 552, 534, 535, 553, 554, 0, 555, 556, 557,
	558, 559, 560, 561, 658, 0, 562, 0, 563, 564,
	565, 567, 536, 568, 573, 574, 659, 569, 570, 571,
	572, 660, 576, 577, 0, 578, 579, 0, 575, 566,
	0, 580, 581, 582, 583, 584, 585, 586, 354, 587,
	0, 588, 756, 662, 663, 664, 0, 597, 0, 589,
	590, 591, 665, 592, 666, 0, 593, 594, 595, 596,
	0, 598, 599, 0, 0, 600, 601, 602, 604, 605,
	603, 606, 0, 607, 0, 0, 608, 609, 610, 667,
	668, 669, 0, 612, 611, 613, 670, 1563, 614, 265,
	0, 0, 0, 615, 616, 671, 617, 618, 619, 0,
	0, 0, 0, 0, 0, 0, 271, 273, 272, 274,
	275, 276, 277, 0, 278, 279, 0, 0, 0, 0,
	0, 620, 0, 0, 0, 0, 280, 281, 0, 282,
	283, 284, 285, 286, 287, 621, 622, 0, 288, 623,
	289, 624, 0, 625, 290, 291, 292, 293, 294, 295,
	0, 0, 0, 296, 626, 627, 628, 0, 297, 298,
	629, 0, 0, 0, 299, 300, 301, 302, 303, 304,
	305, 0, 0, 307, 308, 309, 306, 310, 0, 311,
	0, 312, 313, 314, 315, 316, 317, 0, 318, 319,
	320, 0, 321, 322, 323, 0, 0, 0, 0, 0,
	0, 0, 324, 325, 326, 327, 328, 0, 329, 630,
	631, 0, 333, 330, 331, 0, 334, 332, 335, 0,
	336, 337, 338, 0, 0, 339, 340, 341, 0, 342,
	343, 0, 344, 345, 346, 0, 347, 348, 632, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 633,
	634, 360, 0, 0, 0, 0, 0, 0, 0, 361,
	362, 363, 635, 0, 0, 0, 364, 0, 365, 366,
	0, 0, 0, 367, 368, 636, 637, 369, 370, 371,
	372, 373, 374, 375, 376, 377, 0, 378, 638, 0,
	639, 379, 0, 380, 381, 382, 383, 384, 1562, 641,
	642, 463, 0, 385, 386, 0, 387, 388, 389, 390,
	391, 0, 0, 0, 0, 392, 393, 394, 396, 0,
	0, 395, 643, 644, 0, 645, 0, 397, 398, 0,
	646, 0, 399, 400, 401, 0, 402, 0, 0, 0,
	403, 404, 405, 406, 407, 408, 0, 409, 411, 410,
	0, 412, 647, 0, 413, 414, 0, 0, 415, 0,
	0, 0, 416, 417, 420, 0, 0, 418, 419, 421,
	422, 0, 423, 424, 426, 429, 425, 427, 428, 430,
	443, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 445, 0, 444, 0, 446, 447, 448,
	453, 455, 456, 451, 452, 454, 457, 458, 450, 0,
	459, 449, 0, 0, 0, 460, 461, 0, 648, 462,
	649, 464, 465, 0, 0, 466, 0, 0, 0, 468,
	469, 470, 0, 0, 471, 472, 650, 0, 473, 0,
	651, 474, 475, 467, 476, 477, 478, 479, 480, 481,
	482, 483, 0, 484, 485, 652, 486, 487, 488, 653,
	489, 490, 491, 654, 492, 655, 493, 494, 0, 495,
	496, 0, 497, 498, 499, 500, 501, 502, 503, 656,
	504, 506, 505, 507, 0, 508, 0, 509, 510, 511,
	0, 0, 0, 0, 512, 0, 514, 515, 516, 517,
	513, 518, 519, 520, 521, 0, 522, 523, 524, 0,
	525, 526, 527, 528, 657, 529, 0, 530, 531, 537,
	538, 539, 532, 533, 540, 541, 542, 543, 544, 0,
	546, 547, 545, 548, 549, 550, 0, 551, 552, 534,
	535, 553, 554, 0, 555, 556, 557, 558, 559, 560,
	561, 658, 0, 562, 0, 563, 564, 565, 567, 536,
	568, 573, 574, 659, 569, 570, 571, 572, 660, 576,
	577, 0, 578, 579, 0, 575, 566, 0, 580, 581,
	582, 583, 584, 585, 586, 354, 587, 0, 588, 661,
	662, 663, 664, 0, 597, 0, 589, 590, 591, 665,
	592, 666, 0, 593, 594, 595, 596, 0, 598, 599,
	0, 0, 600, 601, 602, 604, 605, 603, 606, 0,
	607, 0, 0, 608, 609, 610, 667, 668, 669, 0,
	612, 611, 613, 670, 1547, 614, 265, 0, 0, 0,
	615, 616, 671, 617, 618, 619, 0, 0, 0, 0,
	0, 0, 0, 271, 273, 272, 274, 275, 276, 277,
	0, 278, 279, 0, 0, 0, 0, 0, 620, 0,
	0, 0, 0, 280, 281, 0, 282, 283, 284, 285,
	286, 287, 621, 622, 0, 288, 623, 289, 624, 0,
	625, 290, 291, 292, 293, 294, 295, 0, 0, 0,
	296, 626, 627, 628, 0, 297, 298, 629, 0, 0,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 0, 321,
	322, 323, 0, 0, 0, 0, 0, 0, 0, 324,
	325, 326, 327, 328, 0, 329, 630, 631, 0, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 340, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 632, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 633, 634, 360, 0,
	0, 0, 0, 0, 0, 0, 361, 362, 363, 635,
	0, 0, 0, 364, 0, 365, 366, 0, 0, 0,
	367, 368, 636, 637, 369, 370, 371, 372, 373, 374,
	375, 376, 377, 0, 378, 638, 0, 639, 379, 0,
	380, 381, 382, 383, 384, 1545, 641, 642, 463, 0,
	385, 386, 0, 387, 388, 389, 390, 391, 0, 0,
	0, 0, 392, 393, 394, 396, 0, 0, 395, 643,
	644, 0, 645, 0, 397, 398, 0, 646, 0, 399,
	400, 401, 0, 402, 0, 0, 0, 403, 404, 405,
	406, 407, 408, 0, 409, 411, 410, 0, 412, 647,
	0, 413, 414, 0, 0, 415, 0, 0, 0, 416,
	417, 420, 0, 0, 418, 419, 421, 422, 0, 423,
	424, 426, 429, 425, 427, 428, 430, 443, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	445, 0, 444, 0, 446, 447, 448, 453, 455, 456,
	451, 452, 454, 457, 458, 450, 0, 459, 449, 0,
	0, 0, 460, 461, 0, 648, 462, 649, 464, 465,
	0, 0, 466, 0, 0, 0, 468, 469, 470, 0,
	0, 471, 472, 650, 0, 473, 0, 651, 474, 475,
	467, 476, 477, 478, 479, 480, 481, 482, 483, 0,
	484, 485, 652, 486, 487, 488, 653, 489, 490, 491,
	654, 492, 655, 493, 494, 0, 495, 496, 0, 497,
	498, 499, 500, 501, 502, 503, 656, 504, 506, 505,
	507, 0, 508, 0, 509, 510, 511, 0, 0, 0,
	0, 512, 0, 514, 515, 516, 517, 513, 518, 519,
	520, 521, 0, 522, 523, 524, 0, 525, 526, 527,
	528, 657, 529, 0, 530, 531, 537, 538, 539, 532,
	533, 540, 541, 542, 543, 544, 0, 546, 547, 545,
	548, 549, 550, 0, 551, 552, 534, 535, 553, 554,
	0, 555, 556, 557, 558, 559, 560, 561, 658, 0,
	562, 0, 563, 564, 565, 567, 536, 568, 573, 574,
	659, 569, 570, 571, 572, 660, 576, 577, 0, 578,
	579, 0, 575, 566, 0, 580, 581, 582, 583, 584,
	585, 586, 354, 587, 0, 588, 661, 662, 663, 664,
	0, 597, 0, 589, 590, 591, 665, 592, 666, 0,
	593, 594, 595, 596, 0, 598, 599, 0, 0, 600,
	601, 602, 604, 605, 603, 606, 0, 607, 0, 0,
	608, 609, 610, 667, 668, 669, 0, 612, 611, 613,
	670, 1540, 614, 265, 0, 0, 0, 615, 616, 671,
	617, 618, 619, 0, 0, 0, 0, 0, 0, 0,
	271, 273, 272, 274, 275, 276, 277, 0, 278, 279,
	0, 0, 0, 0, 0, 620, 0, 0, 0, 0,
	280, 281, 0, 282, 283, 284, 285, 286, 287, 621,
	622, 0, 288, 623, 289, 624, 0, 625, 290, 291,
	292, 293, 294, 295, 0, 0, 0, 296, 626, 627,
	628, 0, 297, 298, 629, 0, 0, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 316,
	317, 0, 318, 319, 320, 0, 321, 322, 323, 0,
	0, 0, 0, 0, 0, 0, 324, 325, 326, 327,
	328, 0, 329, 630, 631, 0, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	340, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 632, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 633, 634, 360, 0, 0, 0, 0,
	0, 0, 0, 361, 362, 363, 635, 0, 0, 0,
	364, 0, 365, 366, 0, 0, 0, 367, 368, 636,
	637, 369, 370, 371, 372, 373, 374, 375, 376, 377,
	0, 378, 638, 0, 639, 379, 0, 380, 381, 382,
	383, 384, 640, 641, 642, 463, 0, 385, 386, 0,
	387, 388, 389, 390, 391, 0, 0, 0, 0, 392,
	393, 394, 396, 0, 0, 395, 643, 644, 0, 645,
	0, 397, 398, 0, 646, 0, 399, 400, 401, 0,
	402, 0, 0, 0, 403, 404, 405, 406, 407, 408,
	0, 409, 411, 410, 0, 412, 647, 0, 413, 414,
	0, 0, 415, 0, 0, 0, 416, 417, 420, 0,
	0, 418, 419, 421, 422, 0, 423, 424, 426, 429,
	425, 427, 428, 430, 443, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 445, 0, 444,
	0, 446, 447, 448, 453, 455, 456, 451, 452, 454,
	457, 458, 450, 0, 459, 449, 0, 0, 0, 460,
	461, 0, 648, 462, 649, 464, 465, 0, 0, 466,
	0, 0, 0, 468, 469, 470, 0, 0, 471, 472,
	650, 0, 473, 0, 651, 474, 475, 467, 476, 477,
	478, 479, 480, 481, 482, 483, 0, 484, 485, 652,
	486, 487, 488, 653, 489, 490, 491, 654, 492, 655,
	493, 494, 0, 495, 496, 0, 497, 498, 499, 500,
	501, 502, 503, 656, 504, 506, 505, 507, 0, 508,
	0, 509, 510, 511, 0, 0, 0, 0, 512, 0,
	514, 515, 516, 517, 513, 518, 519, 520, 521, 0,
	522, 523, 524, 0, 525, 526, 527, 528, 657, 529,
	0, 530, 531, 537, 538, 539, 532, 533, 540, 541,
	542, 543, 544, 0, 546, 547, 545, 548, 549, 550,
	0, 551, 552, 534, 535, 553, 554, 0, 555, 556,
	557, 558, 559, 560, 561, 658, 0, 562, 0, 563,
	564, 565, 567, 536, 568, 573, 574, 659, 569, 570,
	571, 572, 660, 576, 577, 0, 578, 579, 0, 575,
	566, 0, 580, 581, 582, 583, 584, 585, 586, 354,
	587, 0, 588, 661, 662, 663, 664, 0, 597, 0,
	589, 590, 591, 665, 592, 666, 0, 593, 594, 595,
	596, 0, 598, 599, 0, 0, 600, 601, 602, 604,
	605, 603, 606, 0, 607, 0, 0, 608, 609, 610,
	667, 668, 669, 0, 612, 611, 613, 670, 1517, 614,
	265, 0, 0, 0, 615, 616, 671, 617, 618, 619,
	0, 0, 0, 0, 0, 0, 0, 271, 273, 272,
	274, 275, 276, 277, 0, 278, 279, 0, 0, 0,
	0, 0, 620, 0, 0, 0, 0, 280, 281, 0,
	282, 283, 284, 285, 286, 287, 621, 622, 0, 288,
	623, 289, 624, 0, 625, 290, 291, 292, 293, 294,
	295, 0, 0, 0, 296, 626, 627, 628, 0, 297,
	298, 629, 0, 0, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 0, 321, 322, 323, 0, 0, 0, 0,
	0, 0, 0, 324, 325, 326, 327, 328, 0, 329,
	630, 631, 0, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 340, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 632,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	633, 634, 360, 0, 0, 0, 0, 0, 0, 0,
	361, 362, 363, 635, 0, 0, 0, 364, 0, 365,
	366, 0, 0, 0, 367, 368, 636, 637, 369, 370,
	371, 372, 373, 374, 375, 376, 377, 0, 378, 638,
	0, 639, 379, 0, 380, 381, 382, 383, 384, 1515,
	641, 642, 463, 0, 385, 386, 0, 387, 388, 389,
	390, 391, 0, 0, 0, 0, 392, 393, 394, 396,
	0, 0, 395, 643, 644, 0, 645, 0, 397, 398,
	0, 646, 0, 399, 400, 401, 0, 402, 0, 0,
	0, 403, 404, 405, 406, 407, 408, 0, 409, 411,
	410, 0, 412, 647, 0, 413, 414, 0, 0, 415,
	0, 0, 0, 416, 417, 420, 0, 0, 418, 419,
	421, 422, 0, 423, 424, 426, 429, 425, 427, 428,
	430, 443, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 442, 445, 0, 444, 0, 446, 447,
	448, 453, 455, 456, 451, 452, 454, 457, 458, 450,
	0, 459, 449, 0, 0, 0, 460, 461, 0, 648,
	462, 649, 464, 465, 0, 0, 466, 0, 0, 0,
	468, 469, 470, 0, 0, 471, 472, 650, 0, 473,
	0, 651, 474, 475, 467, 476, 477, 478, 479, 480,
	481, 482, 483, 0, 484, 485, 652, 486, 487, 488,
	653, 489, 490, 491, 654, 492, 655, 493, 494, 0,
	495, 496, 0, 497, 498, 499, 500, 501, 502, 503,
	656, 504, 506, 505, 507, 0, 508, 0, 509, 510,
	511, 0, 0, 0, 0, 512, 0, 514, 515, 516,
	517, 513, 518, 519, 520, 521, 0, 522, 523, 524,
	0, 525, 526, 527, 528, 657, 529, 0, 530, 531,
	537, 538, 539, 532, 533, 540, 541, 542, 543, 544,
	0, 546, 547, 545, 548, 549, 550, 0, 551, 552,
	534, 535, 553, 554, 0, 555, 556, 557, 558, 559,
	560, 561, 658, 0, 562, 0, 563, 564, 565, 567,
	536, 568, 573, 574, 659, 569, 570, 571, 572, 660,
	576, 577, 0, 578, 579, 0, 575, 566, 0, 580,
	581, 582, 583, 584, 585, 586, 354, 587, 0, 588,
	661, 662, 663, 664, 0, 597, 0, 589, 590, 591,
	665, 592, 666, 0, 593, 594, 595, 596, 0, 598,
	599, 0, 0, 600, 601, 602, 604, 605, 603, 606,
	0, 607, 0, 0, 608, 609, 610, 667, 668, 669,
	0, 612, 611, 613, 670, 1478, 614, 265, 0, 0,
	0, 615, 616, 671, 617, 618, 619, 0, 0, 0,
	0, 0, 0, 0, 271, 273, 272, 274, 275, 276,
	277, 0, 278, 279, 0, 0, 0, 0, 0, 620,
	0, 0, 0, 0, 280, 281, 0, 282, 283, 284,
	285, 286, 287, 621, 622, 0, 288, 623, 289, 624,
	0, 625, 290, 291, 292, 293, 294, 295, 0, 0,
	0, 296, 626, 627, 628, 0, 297, 298, 629, 0,
	0, 0, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 0, 311, 0, 312,
	313, 314, 315, 316, 317, 0, 318, 319, 320, 0,
	321, 322, 323, 0, 0, 0, 0, 0, 0, 0,
	324, 325, 326, 327, 328, 0, 329, 630, 631, 0,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 340, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 347, 348, 632, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 633, 634, 360,
	0, 0, 0, 0, 0, 0, 0, 361, 362, 363,
	635, 0, 0, 0, 364, 0, 365, 366, 0, 0,
	0, 367, 368, 636, 637, 369, 370, 371, 372, 373,
	374, 375, 376, 377, 0, 378, 638, 0, 639, 379,
	0, 380, 381, 382, 383, 384, 640, 641, 642, 463,
	0, 385, 386, 0, 387, 388, 389, 390, 391, 0,
	0, 0, 0, 392, 393, 394, 396, 0, 0, 395,
	643, 644, 0, 645, 0, 397, 398, 0, 646, 0,
	399, 400, 401, 0, 402, 0, 0, 0, 403, 404,
	405, 406, 407, 408, 0, 409, 411, 410, 0, 412,
	647, 0, 413, 414, 0, 0, 415, 0, 0, 0,
	416, 417, 420, 0, 0, 418, 419, 421, 422, 0,
	423, 424, 426, 429, 425, 427, 428, 430, 443, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 445, 0, 444, 0, 446, 447, 448, 453, 455,
	456, 451, 452, 454, 457, 458, 450, 0, 459, 449,
	0, 0, 0, 460, 461, 0, 648, 462, 649, 464,
	465, 0, 0, 466, 0, 0, 0, 468, 469, 470,
	0, 0, 471, 472, 650, 0, 473, 0, 651, 474,
	475, 467, 476, 477, 478, 479, 480, 481, 482, 483,
	0, 484, 485, 652, 486, 487, 488, 653, 489, 490,
	491, 654, 492, 655, 493, 494, 0, 495, 496, 0,
	497, 498, 499, 500, 501, 502, 503, 656, 504, 506,
	505, 507, 0, 508, 0, 509, 510, 511, 0, 0,
	0, 0, 512, 0, 514, 515, 516, 517, 513, 518,
	519, 520, 521, 0, 522, 523, 524, 0, 525, 526,
	527, 528, 657, 529, 0, 530, 531, 537, 538, 539,
	532, 533, 540, 541, 542, 543, 544, 0, 546, 547,
	545, 548, 549, 550, 0, 551, 552, 534, 535, 553,
	554, 0, 555, 556, 557, 558, 559, 560, 561, 658,
	0, 562, 0, 563, 564, 565, 567, 536, 568, 573,
	574, 659, 569, 570, 571, 572, 660, 576, 577, 0,
	578, 579, 0, 575, 566, 0, 580, 581, 582, 583,
	584, 585, 586, 354, 587, 0, 588, 661, 662, 663,
	664, 0, 597, 0, 589, 590, 591, 665, 592, 666,
	0, 593, 594, 595, 596, 0, 598, 599, 0, 0,
	600, 601, 602, 604, 605, 603, 606, 0, 607, 0,
	0, 608, 609, 610, 667, 668, 669, 0, 612, 611,
	613, 670, 1460, 614, 265, 0, 0, 0, 615, 616,
	671, 617, 618, 619, 0, 0, 0, 0, 0, 0,
	0, 271, 273, 272, 274, 275, 276, 277, 0, 278,
	279, 0, 0, 0, 0, 0, 620, 0, 0, 0,
	0, 280, 281, 0, 282, 283, 284, 285, 286, 287,
	621, 622, 0, 288, 623, 289, 624, 0, 625, 290,
	291, 292, 293, 294, 295, 0, 0, 0, 296, 626,
	627, 628, 0, 297, 298, 629, 0, 0, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 311, 0, 312, 313, 314, 315,
	316, 317, 0, 318, 319, 320, 0, 321, 322, 323,
	0, 0, 0, 0, 0, 0, 0, 324, 325, 326,
	327, 328, 0, 329, 630, 631, 0, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 340, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 632, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 633, 634, 360, 0, 0, 0,
	0, 0, 0, 0, 361, 362, 363, 635, 0, 0,
	0, 364, 0, 365, 366, 0, 0, 0, 367, 368,
	636, 637, 369, 370, 371, 372, 373, 374, 375, 376,
	377, 0, 378, 638, 0, 639, 379, 0, 380, 381,
	382, 383, 384, 640, 641, 642, 463, 0, 385, 386,
	0, 387, 388, 389, 390, 391, 0, 0, 0, 0,
	392, 393, 394, 396, 0, 0, 395, 643, 644, 0,
	645, 0, 397, 398, 0, 646, 0, 399, 400, 401,
	0, 402, 0, 0, 0, 403, 404, 405, 406, 407,
	408, 0, 409, 411, 410, 0, 412, 647, 0, 413,
	414, 0, 0, 415, 0, 0, 0, 416, 417, 420,
	0, 0, 418, 419, 421, 422, 0, 423, 424, 426,
	429, 425, 427, 428, 430, 443, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 442, 445, 0,
	444, 0, 446, 447, 448, 453, 455, 456, 451, 452,
	454, 457, 458, 450, 0, 459, 449, 0, 0, 0,
	460, 461, 0, 648, 462, 649, 464, 465, 0, 0,
	466, 0, 0, 0, 468, 469, 470, 0, 0, 471,
	472, 650, 0, 473, 0, 651, 474, 475, 467, 476,
	477, 478, 479, 480, 481, 482, 483, 0, 484, 485,
	652, 486, 487, 488, 653, 489, 490, 491, 654, 492,
	655, 493, 494, 0, 495, 496, 0, 497, 498, 499,
	500, 501, 502, 503, 656, 504, 506, 505, 507, 0,
	508, 0, 509, 510, 511, 0, 0, 0, 0, 512,
	0, 514, 515, 516, 517, 513, 518, 519, 520, 521,
	0, 522, 523, 524, 0, 525, 526, 527, 528, 657,
	529, 0, 530, 531, 537, 538, 539, 532, 533, 540,
	541, 542, 543, 544, 0, 546, 547, 545, 548, 549,
	550, 0, 551, 552, 534, 535, 553, 554, 0, 555,
	556, 557, 558, 559, 560, 561, 658, 0, 562, 0,
	563, 564, 565, 567, 536, 568, 573, 574, 659, 569,
	570, 571, 572, 660, 576, 577, 0, 578, 579, 0,
	575, 566, 0, 580, 581, 582, 583, 584, 585, 586,
	354, 587, 0, 588, 661, 662, 663, 664, 0, 597,
	0, 589, 590, 591, 665, 592, 666, 0, 593, 594,
	595, 596, 0, 598, 599, 0, 0, 600, 601, 602,
	604, 605, 603, 606, 0, 607, 0, 0, 608, 609,
	610, 667, 668, 669, 0, 612, 611, 613, 670, 1297,
	614, 265, 0, 0, 0, 615, 616, 671, 617, 618,
	619, 0, 0, 0, 0, 0, 0, 0, 271, 273,
	272, 274, 275, 276, 277, 0, 278, 279, 0, 0,
	0, 0, 0, 620, 0, 0, 0, 0, 280, 281,
	0, 282, 283, 284, 285, 286, 287, 621, 622, 0,
	288, 623, 289, 624, 0, 625, 290, 291, 292, 293,
	294, 295, 0, 0, 0, 296, 626, 627, 628, 0,
	297, 298, 629, 0, 0, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 0, 321, 322, 323, 0, 0, 0,
	0, 0, 0, 0, 324, 325, 326, 327, 328, 0,
	329, 630, 631, 0, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 340, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	632, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 633, 634, 360, 0, 0, 0, 0, 0, 0,
	0, 361, 362, 363, 635, 0, 0, 0, 364, 0,
	365, 366, 0, 0, 0, 367, 368, 636, 637, 369,
	370, 371, 372, 373, 374, 375, 376, 377, 0, 378,
	638, 0, 639, 379, 0, 380, 381, 382, 383, 384,
	1296, 641, 642, 463, 0, 385, 386, 0, 387, 388,
	389, 390, 391, 0, 0, 0, 0, 392, 393, 394,
	396, 0, 0, 395, 643, 644, 0, 645, 0, 397,
	398, 0, 646, 0, 399, 400, 401, 0, 402, 0,
	0, 0, 403, 404, 405, 406, 407, 408, 0, 409,
	411, 410, 0, 412, 647, 0, 413, 414, 0, 0,
	415, 0, 0, 0, 416, 417, 420, 0, 0, 418,
	419, 421, 422, 0, 423, 424, 426, 429, 425, 427,
	428, 430, 443, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 445, 0, 444, 0, 446,
	447, 448, 453, 455, 456, 451, 452, 454, 457, 458,
	450, 0, 459, 449, 0, 0, 0, 460, 461, 0,
	648, 462, 649, 464, 465, 0, 0, 466, 0, 0,
	0, 468, 469, 470, 0, 0, 471, 472, 650, 0,
	473, 0, 651, 474, 475, 467, 476, 477, 478, 479,
	480, 481, 482, 483, 0, 484, 485, 652, 486, 487,
	488, 653, 489, 490, 491, 654, 492, 655, 493, 494,
	0, 495, 496, 0, 497, 498, 499, 500, 501, 502,
	503, 656, 504, 506, 505, 507, 0, 508, 0, 509,
	510, 511, 0, 0, 0, 0, 512, 0, 514, 515,
	516, 517, 513, 518, 519, 520, 521, 0, 522, 523,
	524, 0, 525, 526, 527, 528, 657, 529, 0, 530,
	531, 537, 538, 539, 532, 533, 540, 541, 542, 543,
	544, 0, 546, 547, 545, 548, 549, 550, 0, 551,
	552, 534, 535, 553, 554, 0, 555, 556, 557, 558,
	559, 560, 561, 658, 0, 562, 0, 563, 564, 565,
	567, 536, 568, 573, 574, 659, 569, 570, 571, 572,
	660, 576, 577, 0, 578, 579, 0, 575, 566, 0,
	580, 581, 582, 583, 584, 585, 586, 354, 587, 0,
	588, 661, 662, 663, 664, 0, 597, 0, 589, 590,
	591, 665, 592, 666, 0, 593, 594, 595, 596, 0,
	598, 599, 0, 0, 600, 601, 602, 604, 605, 603,
	606, 0, 607, 0, 0, 608, 609, 610, 667, 668,
	669, 0, 612, 611, 613, 670, 1288, 614, 265, 0,
	0, 0, 615, 616, 671, 617, 618, 619, 0, 0,
	0, 0, 0, 0, 0, 271, 273, 272, 274, 275,
	276, 277, 0, 278, 279, 0, 0, 0, 0, 0,
	620, 0, 0, 0, 0, 280, 281, 0, 282, 283,
	284, 285, 286, 287, 621, 622, 0, 288, 623, 289,
	624, 0, 625, 290, 291, 292, 293, 294, 295, 0,
	0, 0, 296, 626, 627, 628, 0, 297, 298, 629,
	0, 0, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	0, 321, 322, 323, 0, 0, 0, 0, 0, 0,
	0, 324, 325, 326, 327, 328, 0, 329, 630, 631,
	0, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 340, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 632, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 633, 634,
	360, 0, 0, 0, 0, 0, 0, 0, 361, 362,
	363, 635, 0, 0, 0, 364, 0, 365, 366, 0,
	0, 0, 367, 368, 636, 637, 369, 370, 371, 372,
	373, 374, 375, 376, 377, 0, 378, 638, 0, 639,
	379, 0, 380, 381, 382, 383, 384, 1287, 641, 642,
	463, 0, 385, 386, 0, 387, 388, 389, 390, 391,
	0, 0, 0, 0, 392, 393, 394, 396, 0, 0,
	395, 643, 644, 0, 645, 0, 397, 398, 0, 646,
	0, 399, 400, 401, 0, 402, 0, 0, 0, 403,
	404, 405, 406, 407, 408, 0, 409, 411, 410, 0,
	412, 647, 0, 413, 414, 0, 0, 415, 0, 0,
	0, 416, 417, 420, 0, 0, 418, 419, 421, 422,
	0, 423, 424, 426, 429, 425, 427, 428, 430, 443,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 445, 0, 444, 0, 446, 447, 448, 453,
	455, 456, 451, 452, 454, 457, 458, 450, 0, 459,
	449, 0, 0, 0, 460, 461, 0, 648, 462, 649,
	464, 465, 0, 0, 466, 0, 0, 0, 468, 469,
	470, 0, 0, 471, 472, 650, 0, 473, 0, 651,
	474, 475, 467, 476, 477, 478, 479, 480, 481, 482,
	483, 0, 484, 485, 652, 486, 487, 488, 653, 489,
	490, 491, 654, 492, 655, 493, 494, 0, 495, 496,
	0, 497, 498, 499, 500, 501, 502, 503, 656, 504,
	506, 505, 507, 0, 508, 0, 509, 510, 511, 0,
	0, 0, 0, 512, 0, 514, 515, 516, 517, 513,
	518, 519, 520, 521, 0, 522, 523, 524, 0, 525,
	526, 527, 528, 657, 529, 0, 530, 531, 537, 538,
	539, 532, 533, 540, 541, 542, 543, 544, 0, 546,
	547, 545, 548, 549, 550, 0, 551, 552, 534, 535,
	553, 554, 0, 555, 556, 557, 558, 559, 560, 561,
	658, 0, 562, 0, 563, 564, 565, 567, 536, 568,
	573, 574, 659, 569, 570, 571, 572, 660, 576, 577,
	0, 578, 579, 0, 575, 566, 0, 580, 581, 582,
	583, 584, 585, 586, 354, 587, 0, 588, 661, 662,
	663, 664, 0, 597, 0, 589, 590, 591, 665, 592,
	666, 0, 593, 594, 595, 596, 0, 598, 599, 0,
	0, 600, 601, 602, 604, 605, 603, 606, 0, 607,
	0, 0, 608, 609, 610, 667, 668, 669, 265, 612,
	611, 613, 670, 0, 614, 0, 0, 0, 0, 615,
	616, 671, 617, 618, 619, 271, 273, 272, 274, 275,
	276, 277, 1241, 278, 279, 0, 0, 0, 0, 0,
	620, 0, 0, 0, 0, 280, 281, 0, 282, 283,
	284, 285, 286, 287, 621, 622, 0, 288, 623, 289,
	624, 0, 625, 290, 291, 292, 293, 294, 295, 0,
	0, 0, 296, 626, 627, 628, 0, 297, 298, 629,
	0, 0, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	0, 321, 322, 323, 0, 0, 0, 0, 0, 0,
	0, 324, 325, 326, 327, 328, 0, 329, 630, 631,
	0, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 340, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 632, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 633, 634,
	360, 0, 0, 0, 0, 0, 0, 0, 361, 362,
	363, 635, 0, 0, 0, 364, 0, 365, 366, 0,
	0, 0, 367, 368, 636, 637, 369, 370, 371, 372,
	373, 374, 375, 376, 377, 0, 378, 638, 0, 639,
	379, 0, 380, 381, 382, 383, 384, 640, 641, 642,
	463, 0, 385, 386, 0, 387, 388, 389, 390, 391,
	0, 0, 0, 0, 392, 393, 394, 396, 0, 0,
	395, 643, 644, 0, 645, 0, 397, 398, 0, 646,
	0, 399, 400, 401, 0, 402, 0, 0, 0, 403,
	404, 405, 406, 407, 408, 0, 409, 411, 410, 0,
	412, 647, 0, 413, 414, 0, 0, 415, 0, 0,
	0, 416, 417, 420, 0, 0, 418, 419, 421, 422,
	0, 423, 424, 426, 429, 425, 427, 428, 430, 443,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 445, 0, 444, 0, 446, 447, 448, 453,
	455, 456, 451, 452, 454, 457, 458, 450, 0, 459,
	449, 0, 0, 0, 460, 461, 0, 648, 462, 649,
	464, 465, 0, 0, 466, 0, 0, 0, 468, 469,
	470, 0, 0, 471, 472, 650, 0, 473, 0, 651,
	474, 475, 467, 476, 477, 478, 479, 480, 481, 482,
	483, 0, 484, 485, 652, 486, 487, 488, 653, 489,
	490, 491, 654, 492, 655, 493, 494, 0, 495, 496,
	0, 497, 498, 499, 500, 501, 502, 503, 656, 504,
	506, 505, 507, 0, 508, 0, 509, 510, 511, 0,
	0, 0, 0, 512, 0, 514, 515, 516, 517, 513,
	518, 519, 520, 521, 0, 522, 523, 524, 0, 525,
	526, 527, 528, 657, 529, 0, 530, 531, 537, 538,
	539, 532, 533, 540, 541, 542, 543, 544, 0, 546,
	547, 545, 548, 549, 550, 0, 551, 552, 534, 535,
	553, 554, 0, 555, 556, 557, 558, 559, 560, 561,
	658, 0, 562, 0, 563, 564, 565, 567, 536, 568,
	573, 574, 659, 569, 570, 571, 572, 660, 576, 577,
	0, 578, 579, 0, 575, 566, 0, 580, 581, 582,
	583, 584, 585, 586, 354, 587, 0, 588, 661, 662,
	663, 664, 0, 597, 0, 589, 590, 591, 665, 592,
	666, 0, 593, 594, 595, 596, 0, 598, 599, 0,
	0, 600, 601, 602, 604, 605, 603, 606, 0, 607,
	0, 0, 608, 609, 610, 667, 668, 669, 265, 612,
	611, 613, 670, 0, 614, 0, 0, 0, 0, 615,
	616, 671, 617, 618, 619, 271, 273, 272, 274, 275,
	276, 277, 766, 278, 279, 0, 0, 0, 0, 0,
	620, 0, 0, 0, 0, 280, 281, 0, 282, 283,
	284, 285, 286, 287, 621, 622, 0, 288, 623, 289,
	624, 0, 625, 290, 291, 292, 293, 294, 295, 0,
	0, 0, 296, 626, 627, 628, 0, 297, 298, 629,
	0, 0, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	0, 321, 322, 323, 0, 0, 0, 0, 0, 0,
	0, 324, 325, 326, 327, 328, 0, 329, 630, 631,
	0, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 340, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 632, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 633, 634,
	360, 0, 0, 0, 0, 0, 0, 0, 361, 362,
	363, 635, 0, 0, 0, 364, 0, 365, 366, 0,
	0, 0, 367, 368, 636, 637, 369, 370, 371, 372,
	373, 374, 375, 376, 377, 0, 378, 638, 0, 639,
	379, 0, 380, 381, 382, 383, 384, 640, 641, 642,
	463, 0, 385, 386, 0, 387, 388, 389, 390, 391,
	0, 0, 0, 0, 392, 393, 394, 396, 0, 0,
	395, 643, 644, 0, 645, 0, 397, 398, 0, 646,
	0, 399, 400, 401, 0, 402, 0, 0, 0, 403,
	404, 405, 406, 407, 408, 0, 409, 411, 410, 0,
	412, 647, 0, 413, 414, 0, 0, 415, 0, 0,
	0, 416, 417, 420, 0, 0, 418, 419, 421, 422,
	0, 423, 424, 426, 429, 425, 427, 428, 430, 443,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 445, 0, 444, 0, 446, 447, 448, 453,
	455, 456, 451, 452, 454, 457, 458, 450, 0, 459,
	449, 0, 0, 0, 460, 461, 0, 648, 462, 649,
	464, 465, 0, 0, 466, 0, 0, 0, 468, 469,
	470, 0, 0, 471, 472, 650, 0, 473, 0, 651,
	474, 475, 467, 476, 477, 478, 479, 480, 481, 482,
	483, 0, 484, 485, 652, 486, 487, 488, 653, 489,
	490, 491, 654, 492, 655, 493, 494, 0, 495, 496,
	0, 497, 498, 499, 500, 501, 502, 503, 656, 504,
	506, 505, 507, 0, 508, 0, 509, 510, 511, 0,
	0, 0, 0, 512, 0, 514, 515, 516, 517, 513,
	518, 519, 520, 521, 0, 522, 523, 524, 0, 525,
	526, 527, 528, 657, 529, 0, 530, 531, 537, 538,
	539, 532, 533, 540, 541, 542, 543, 544, 0, 546,
	547, 545, 548, 549, 550, 0, 551, 552, 534, 535,
	553, 554, 0, 555, 556, 557, 558, 559, 560, 561,
	658, 0, 562, 0, 563, 564, 565, 567, 536, 568,
	573, 574, 659, 569, 570, 571, 572, 660, 576, 577,
	0, 578, 579, 0, 575, 566, 0, 580, 581, 582,
	583, 584, 585, 586, 354, 587, 0, 588, 661, 662,
	663, 664, 0, 597, 0, 589, 590, 591, 665, 592,
	666, 0, 593, 594, 595, 596, 0, 598, 599, 0,
	0, 600, 601, 602, 604, 605, 603, 606, 0, 607,
	0, 0, 608, 609, 610, 667, 668, 669, 0, 612,
	611, 613, 670, 760, 614, 265, 0, 0, 0, 615,
	616, 671, 617, 618, 619, 0, 0, 0, 0, 0,
	0, 0, 271, 273, 272, 274, 275, 276, 277, 0,
	278, 279, 0, 0, 0, 0, 0, 620, 0, 0,
	0, 0, 280, 281, 0, 282, 283, 284, 285, 286,
	287, 621, 622, 0, 288, 623, 289, 624, 0, 625,
	290, 291, 292, 293, 294, 295, 0, 0, 0, 296,
	626, 627, 628, 0, 297, 750, 629, 0, 0, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 748, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 0, 321, 322,
	323, 0, 0, 0, 0, 0, 0, 0, 324, 325,
	326, 327, 328, 0, 329, 630, 631, 0, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 340, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 632, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 633, 634, 360, 0, 0,
	0, 0, 0, 0, 0, 361, 362, 363, 635, 0,
	0, 0, 364, 0, 365, 366, 0, 0, 0, 367,
	368, 636, 637, 369, 370, 371, 372, 373, 374, 375,
	376, 377, 0, 378, 638, 0, 639, 379, 0, 380,
	381, 382, 383, 384, 640, 641, 642, 463, 0, 385,
	386, 0, 387, 388, 389, 390, 391, 0, 0, 0,
	0, 392, 393, 394, 396, 0, 0, 395, 643, 644,
	0, 645, 0, 397, 398, 0, 646, 0, 399, 400,
	401, 0, 402, 0, 0, 0, 403, 404, 405, 406,
	407, 408, 0, 409, 411, 410, 0, 412, 647, 0,
	413, 414, 0, 0, 415, 0, 0, 0, 416, 749,
	420, 0, 0, 418, 419, 421, 422, 0, 423, 424,
	426, 429, 425, 427, 428, 430, 443, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 445,
	0, 761, 0, 446, 447, 448, 453, 455, 456, 451,
	452, 454, 457, 458, 450, 0, 459, 449, 0, 0,
	0, 460, 461, 0, 648, 462, 649, 464, 465, 0,
	0, 466, 0, 0, 0, 468, 469, 470, 0, 0,
	471, 472, 650, 0, 473, 0, 651, 474, 475, 467,
	476, 477, 478, 479, 480, 481, 482, 483, 0, 484,
	485, 652, 486, 487, 488, 653, 489, 490, 491, 654,
	492, 655, 493, 494, 0, 495, 496, 0, 497, 498,
	499, 500, 501, 502, 503, 656, 504, 506, 505, 507,
	0, 508, 0, 509, 510, 511, 0, 0, 0, 0,
	512, 0, 514, 515, 516, 517, 513, 518, 519, 520,
	521, 0, 522, 523, 524, 0, 525, 526, 527, 528,
	751, 529, 0, 530, 531, 537, 538, 539, 532, 533,
	757, 541, 542, 543, 544, 0, 546, 547, 545, 548,
	752, 550, 0, 551, 552, 534, 535, 553, 554, 0,
	555, 556, 557, 558, 559, 560, 561, 658, 0, 562,
	0, 563, 564, 565, 567, 536, 568, 573, 574, 659,
	569, 570, 571, 572, 660, 576, 577, 0, 578, 579,
	0, 575, 566, 0, 580, 581, 582, 583, 584, 585,
	586, 354, 587, 0, 588, 756, 662, 663, 664, 0,
	597, 0, 589, 754, 591, 665, 592, 666, 0, 593,
	594, 595, 596, 0, 598, 599, 0, 0, 600, 601,
	602, 604, 605, 603, 606, 0, 607, 0, 0, 608,
	609, 610, 667, 668, 669, 0, 612, 611, 613, 670,
	742, 614, 265, 0, 0, 0, 615, 616, 671, 617,
	618, 619, 0, 0, 0, 0, 0, 0, 0, 271,
	273, 272, 274, 275, 276, 277, 0, 278, 279, 0,
	0, 0, 0, 0, 620, 0, 0, 0, 0, 280,
	281, 0, 282, 283, 284, 285, 286, 287, 621, 622,
	0, 288, 623, 289, 624, 0, 625, 290, 291, 292,
	293, 294, 295, 0, 0, 0, 296, 626, 627, 628,
	0, 297, 298, 629, 0, 0, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 0, 321, 322, 323, 0, 0,
	0, 0, 0, 0, 0, 324, 325, 326, 327, 328,
	0, 329, 630, 631, 0, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 340,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 632, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 633, 634, 360, 0, 0, 0, 0, 0,
	0, 0, 361, 362, 363, 635, 0, 0, 0, 364,
	0, 365, 366, 0, 0, 0, 367, 368, 636, 637,
	369, 370, 371, 372, 373, 374, 375, 376, 377, 0,
	378, 638, 0, 639, 379, 0, 380, 381, 382, 383,
	384, 640, 641, 642, 463, 0, 385, 386, 0, 387,
	388, 389, 390, 391, 0, 0, 0, 0, 392, 393,
	394, 396, 0, 0, 395, 643, 644, 0, 645, 0,
	397, 398, 0, 646, 0, 399, 400, 401, 0, 402,
	0, 0, 0, 403, 404, 405, 406, 407, 408, 0,
	409, 411, 410, 0, 412, 647, 0, 413, 414, 0,
	0, 415, 0, 0, 0, 416, 417, 420, 0, 0,
	418, 419, 421, 422, 0, 423, 424, 426, 429, 425,
	427, 428, 430, 443, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 445, 0, 444, 0,
	446, 447, 448, 453, 455, 456, 451, 452, 454, 457,
	458, 450, 0, 459, 449, 0, 0, 0, 460, 461,
	0, 648, 462, 649, 464, 465, 0, 0, 466, 0,
	0, 0, 468, 469, 470, 0, 0, 471, 472, 650,
	0, 473, 0, 651, 474, 475, 467, 476, 477, 478,
	479, 480, 481, 482, 483, 0, 484, 485, 652, 486,
	487, 488, 653, 489, 490, 491, 654, 492, 655, 493,
	494, 0, 495, 496, 0, 497, 498, 499, 500, 501,
	502, 503, 656, 504, 506, 505, 507, 0, 508, 0,
	509, 510, 511, 0, 0, 0, 0, 512, 0, 514,
	515, 516, 517, 513, 518, 519, 520, 521, 0, 522,
	523, 524, 0, 525, 526, 527, 528, 657, 529, 0,
	530, 531, 743, 538, 539, 532, 533, 540, 541, 542,
	543, 544, 0, 546, 547, 545, 548, 549, 550, 0,
	551, 552, 534, 535, 553, 554, 0, 555, 556, 557,
	558, 559, 560, 561, 658, 0, 562, 0, 563, 564,
	565, 567, 536, 568, 573, 574, 659, 569, 570, 571,
	572, 660, 576, 577, 0, 578, 579, 0, 575, 566,
	0, 580, 581, 582, 583, 584, 585, 586, 354, 587,
	0, 588, 661, 662, 663, 664, 0, 597, 0, 589,
	590, 591, 665, 592, 666, 0, 593, 594, 595, 596,
	0, 598, 599, 0, 0, 600, 601, 602, 604, 605,
	603, 606, 0, 607, 0, 0, 608, 609, 610, 667,
	668, 669, 0, 612, 611, 613, 670, 705, 614, 265,
	0, 0, 0, 615, 616, 671, 617, 618, 619, 0,
	0, 0, 0, 0, 0, 0, 271, 273, 272, 274,
	275, 276, 277, 0, 278, 279, 0, 0, 0, 0,
	0, 620, 0, 0, 0, 0, 280, 281, 0, 282,
	283, 284, 285, 286, 287, 621, 622, 0, 288, 623,
	289, 624, 0, 625, 290, 291, 292, 293, 294, 295,
	0, 0, 0, 296, 626, 627, 628, 0, 297, 298,
	629, 0, 0, 0, 299, 300, 301, 302, 303, 304,
	305, 0, 0, 307, 308, 309, 306, 310, 0, 311,
	0, 312, 313, 314, 315, 316, 317, 0, 318, 319,
	320, 0, 321, 322, 323, 0, 0, 0, 0, 0,
	0, 0, 324, 325, 326, 327, 328, 0, 329, 630,
	631, 0, 333, 330, 331, 0, 334, 332, 335, 0,
	336, 337, 338, 0, 0, 339, 340, 341, 0, 342,
	343, 0, 344, 345, 346, 0, 347, 348, 632, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 633,
	634, 360, 0, 0, 0, 0, 0, 0, 0, 361,
	362, 363, 635, 0, 0, 0, 364, 0, 365, 366,
	0, 0, 0, 367, 368, 636, 637, 369, 370, 371,
	372, 373, 374, 375, 376, 377, 0, 378, 638, 0,
	639, 379, 0, 380, 381, 382, 383, 384, 640, 641,
	642, 463, 0, 385, 386, 0, 387, 388, 389, 390,
	391, 0, 0, 0, 0, 392, 393, 394, 396, 0,
	0, 395, 643, 644, 0, 645, 0, 397, 398, 0,
	646, 0, 399, 400, 401, 0, 402, 0, 0, 0,
	403, 404, 405, 406, 407, 408, 0, 409, 411, 410,
	0, 412, 647, 0, 413, 414, 0, 0, 415, 0,
	0, 0, 416, 417, 420, 0, 0, 418, 419, 421,
	422, 0, 423, 424, 426, 429, 425, 427, 428, 430,
	443, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 445, 0, 444, 0, 446, 447, 448,
	453, 455, 456, 451, 452, 454, 457, 458, 450, 0,
	459, 449, 0, 0, 0, 460, 461, 0, 648, 462,
	649, 464, 465, 0, 0, 466, 0, 0, 0, 468,
	469, 470, 0, 0, 471, 472, 650, 0, 473, 0,
	651, 474, 475, 467, 476, 477, 478, 479, 480, 481,
	482, 483, 0, 484, 485, 652, 486, 487, 488, 653,
	489, 490, 491, 654, 492, 655, 493, 494, 0, 495,
	496, 0, 497, 498, 499, 500, 501, 502, 503, 656,
	504, 506, 505, 507, 0, 508, 0, 509, 510, 511,
	0, 0, 0, 0, 512, 0, 514, 515, 516, 517,
	513, 518, 519, 520, 521, 0, 522, 523, 524, 0,
	525, 526, 527, 528, 657, 529, 0, 530, 531, 537,
	538, 539, 532, 533, 540, 541, 542, 543, 544, 0,
	546, 547, 545, 548, 549, 550, 0, 551, 552, 534,
	535, 553, 554, 0, 555, 556, 557, 558, 559, 560,
	561, 658, 0, 562, 0, 563, 564, 565, 567, 536,
	568, 573, 574, 659, 569, 570, 571, 572, 660, 576,
	577, 0, 578, 579, 0, 575, 566, 0, 580, 581,
	582, 583, 584, 585, 586, 354, 587, 0, 588, 661,
	662, 663, 664, 0, 597, 0, 589, 590, 591, 665,
	592, 666, 0, 593, 594, 595, 596, 0, 598, 599,
	0, 0, 600, 601, 602, 604, 605, 603, 606, 0,
	607, 0, 0, 608, 609, 610, 667, 668, 669, 0,
	612, 611, 613, 670, 699, 614, 265, 0, 0, 0,
	615, 616, 671, 617, 618, 619, 0, 0, 0, 0,
	0, 0, 0, 271, 273, 272, 274, 275, 276, 277,
	0, 278, 279, 0, 0, 0, 0, 0, 620, 0,
	0, 0, 0, 280, 281, 0, 282, 283, 284, 285,
	286, 287, 621, 622, 0, 288, 623, 289, 624, 0,
	625, 290, 291, 292, 293, 294, 295, 0, 0, 0,
	296, 626, 627, 628, 0, 297, 298, 629, 0, 0,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 0, 321,
	322, 323, 0, 0, 0, 0, 0, 0, 0, 324,
	325, 326, 327, 328, 0, 329, 630, 631, 0, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 340, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 632, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 633, 634, 360, 0,
	0, 0, 0, 0, 0, 0, 361, 362, 363, 635,
	0, 0, 0, 364, 0, 365, 366, 0, 0, 0,
	367, 368, 636, 637, 369, 370, 371, 372, 373, 374,
	375, 376, 377, 0, 378, 638, 0, 639, 379, 0,
	380, 381, 382, 383, 384, 640, 641, 642, 463, 0,
	385, 386, 0, 387, 388, 389, 390, 391, 0, 0,
	0, 0, 392, 393, 394, 396, 0, 0, 395, 643,
	644, 0, 645, 0, 397, 398, 0, 646, 0, 399,
	400, 401, 0, 402, 0, 0, 0, 403, 404, 405,
	406, 407, 408, 0, 409, 411, 410, 0, 412, 647,
	0, 413, 414, 0, 0, 415, 0, 0, 0, 416,
	417, 420, 0, 0, 418, 419, 421, 422, 0, 423,
	424, 426, 429, 425, 427, 428, 430, 443, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	445, 0, 444, 0, 446, 447, 448, 453, 455, 456,
	451, 452, 454, 457, 458, 450, 0, 459, 449, 0,
	0, 0, 460, 461, 0, 648, 462, 649, 464, 465,
	0, 0, 466, 0, 0, 0, 468, 469, 470, 0,
	0, 471, 472, 650, 0, 473, 0, 651, 474, 475,
	467, 476, 477, 478, 479, 480, 481, 482, 483, 0,
	484, 485, 652, 486, 487, 488, 653, 489, 490, 491,
	654, 492, 655, 493, 494, 0, 495, 496, 0, 497,
	498, 499, 500, 501, 502, 503, 656, 504, 506, 505,
	507, 0, 508, 0, 509, 510, 511, 0, 0, 0,
	0, 512, 0, 514, 515, 516, 517, 513, 518, 519,
	520, 521, 0, 522, 523, 524, 0, 525, 526, 527,
	528, 657, 529, 0, 530, 531, 537, 538, 539, 532,
	533, 540, 541, 542, 543, 544, 0, 546, 547, 545,
	548, 549, 550, 0, 551, 552, 534, 535, 553, 554,
	0, 555, 556, 557, 558, 559, 560, 561, 658, 0,
	562, 0, 563, 564, 565, 567, 536, 568, 573, 574,
	659, 569, 570, 571, 572, 660, 576, 577, 0, 578,
	579, 0, 575, 566, 0, 580, 581, 582, 583, 584,
	585, 586, 354, 587, 0, 588, 661, 662, 663, 664,
	0, 597, 0, 589, 590, 591, 665, 592, 666, 0,
	593, 594, 595, 596, 0, 598, 599, 0, 0, 600,
	601, 602, 604, 605, 603, 606, 0, 607, 0, 0,
	608, 609, 610, 667, 668, 669, 0, 612, 611, 613,
	670, 677, 614, 265, 0, 0, 0, 615, 616, 671,
	617, 618, 619, 0, 0, 0, 0, 0, 0, 0,
	271, 273, 272, 274, 275, 276, 277, 0, 278, 279,
	0, 0, 0, 0, 0, 620, 0, 0, 0, 0,
	280, 281, 0, 282, 283, 284, 285, 286, 287, 621,
	622, 0, 288, 623, 289, 624, 0, 625, 290, 291,
	292, 293, 294, 295, 0, 0, 0, 296, 626, 627,
	628, 0, 297, 298, 629, 0, 0, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 316,
	317, 0, 318, 319, 320, 0, 321, 322, 323, 0,
	0, 0, 0, 0, 0, 0, 324, 325, 326, 327,
	328, 0, 329, 630, 631, 0, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	340, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 632, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 633, 634, 360, 0, 0, 0, 0,
	0, 0, 0, 361, 362, 363, 635, 0, 0, 0,
	364, 0, 365, 366, 0, 0, 0, 367, 368, 636,
	637, 369, 370, 371, 372, 373, 374, 375, 376, 377,
	0, 378, 638, 0, 639, 379, 0, 380, 381, 382,
	383, 384, 640, 641, 642, 463, 0, 385, 386, 0,
	387, 388, 389, 390, 391, 0, 0, 0, 0, 392,
	393, 394, 396, 0, 0, 395, 643, 644, 0, 645,
	0, 397, 398, 0, 646, 0, 399, 400, 401, 0,
	402, 0, 0, 0, 403, 404, 405, 406, 407, 408,
	0, 409, 411, 410, 0, 412, 647, 0, 413, 414,
	0, 0, 415, 0, 0, 0, 416, 417, 420, 0,
	0, 418, 419, 421, 422, 0, 423, 424, 426, 429,
	425, 427, 428, 430, 443, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 445, 0, 444,
	0, 446, 447, 448, 453, 455, 456, 451, 452, 454,
	457, 458, 450, 0, 459, 449, 0, 0, 0, 460,
	461, 0, 648, 462, 649, 464, 465, 0, 0, 466,
	0, 0, 0, 468, 469, 470, 0, 0, 471, 472,
	650, 0, 473, 0, 651, 474, 475, 467, 476, 477,
	478, 479, 480, 481, 482, 483, 0, 484, 485, 652,
	486, 487, 488, 653, 489, 490, 491, 654, 492, 655,
	493, 494, 0, 495, 496, 0, 497, 498, 499, 500,
	501, 502, 503, 656, 504, 506, 505, 507, 0, 508,
	0, 509, 510, 511, 0, 0, 0, 0, 512, 0,
	514, 515, 516, 517, 513, 518, 519, 520, 521, 0,
	522, 523, 524, 0, 525, 526, 527, 528, 657, 529,
	0, 530, 531, 537, 538, 539, 532, 533, 540, 541,
	542, 543, 544, 0, 546, 547, 545, 548, 549, 550,
	0, 551, 552, 534, 535, 553, 554, 0, 555, 556,
	557, 558, 559, 560, 561, 658, 0, 562, 0, 563,
	564, 565, 567, 536, 568, 573, 574, 659, 569, 570,
	571, 572, 660, 576, 577, 0, 578, 579, 0, 575,
	566, 0, 580, 581, 582, 583, 584, 585, 586, 354,
	587, 0, 588, 661, 662, 663, 664, 0, 597, 0,
	589, 590, 591, 665, 592, 666, 0, 593, 594, 595,
	596, 0, 598, 599, 0, 0, 600, 601, 602, 604,
	605, 603, 606, 0, 607, 0, 0, 608, 609, 610,
	667, 668, 669, 265, 612, 611, 613, 670, 0, 614,
	0, 0, 0, 0, 615, 616, 671, 617, 618, 619,
	271, 273, 272, 274, 275, 276, 277, 0, 278, 279,
	0, 0, 0, 0, 0, 620, 0, 0, 0, 0,
	280, 281, 0, 282, 283, 284, 285, 286, 287, 621,
	622, 0, 288, 623, 289, 624, 0, 625, 290, 291,
	292, 293, 294, 295, 0, 0, 0, 296, 626, 627,
	628, 0, 297, 298, 629, 0, 0, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 316,
	317, 0, 318, 319, 320, 0, 321, 322, 323, 0,
	0, 0, 0, 0, 0, 0, 324, 325, 326, 327,
	328, 0, 329, 630, 631, 0, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	340, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 632, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 633, 634, 360, 0, 0, 0, 0,
	0, 0, 0, 361, 362, 363, 635, 0, 0, 0,
	364, 0, 365, 366, 0, 0, 0, 367, 368, 636,
	637, 369, 370, 371, 372, 373, 374, 375, 376, 377,
	0, 378, 638, 0, 639, 379, 0, 380, 381, 382,
	383, 384, 640, 641, 642, 463, 0, 385, 386, 0,
	387, 388, 389, 390, 391, 0, 0, 0, 0, 392,
	393, 394, 396, 0, 0, 395, 643, 644, 0, 645,
	0, 397, 398, 0, 646, 0, 399, 400, 401, 0,
	402, 0, 0, 0, 403, 404, 405, 406, 407, 408,
	0, 409, 411, 410, 0, 412, 647, 0, 413, 414,
	0, 0, 415, 0, 0, 0, 416, 417, 420, 0,
	0, 418, 419, 421, 422, 0, 423, 424, 426, 429,
	425, 427, 428, 430, 443, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 445, 0, 444,
	0, 446, 447, 448, 453, 455, 456, 451, 452, 454,
	457, 458, 450, 0, 459, 449, 0, 0, 0, 460,
	461, 0, 648, 462, 649, 464, 465, 0, 0, 466,
	0, 0, 0, 468, 469, 470, 0, 0, 471, 472,
	650, 0, 473, 0, 651, 474, 475, 467, 476, 477,
	478, 479, 480, 481, 482, 483, 0, 484, 485, 652,
	486, 487, 488, 653, 489, 490, 491, 654, 492, 655,
	493, 494, 0, 495, 496, 0, 497, 498, 499, 500,
	501, 502, 503, 656, 504, 506, 505, 507, 0, 508,
	0, 509, 510, 511, 0, 0, 0, 0, 512, 0,
	514, 515, 516, 517, 513, 518, 519, 520, 521, 0,
	522, 523, 524, 0, 525, 526, 527, 528, 657, 529,
	0, 530, 531, 537, 538, 539, 532, 533, 540, 541,
	542, 543, 544, 0, 546, 547, 545, 548, 549, 550,
	0, 551, 552, 534, 535, 553, 554, 0, 555, 556,
	557, 558, 559, 560, 561, 658, 0, 562, 0, 563,
	564, 565, 567, 536, 568, 573, 574, 659, 569, 570,
	571, 572, 660, 576, 577, 0, 578, 579, 0, 575,
	566, 0, 580, 581, 582, 583, 584, 585, 586, 354,
	587, 0, 588, 661, 662, 663, 664, 0, 597, 0,
	589, 590, 591, 665, 592, 666, 0, 593, 594, 595,
	596, 0, 598, 599, 0, 0, 600, 601, 602, 604,
	605, 603, 606, 0, 607, 0, 0, 608, 609, 610,
	667, 668, 669, 265, 612, 611, 613, 670, 0, 614,
	0, 0, 0, 0, 615, 616, 671, 617, 618, 619,
	271, 273, 272, 274, 275, 276, 277, 0, 278, 279,
	0, 0, 0, 0, 0, 620, 0, 0, 0, 0,
	280, 281, 0, 282, 283, 284, 285, 286, 287, 621,
	622, 0, 288, 623, 289, 624, 0, 625, 290, 291,
	292, 293, 294, 295, 0, 0, 0, 296, 626, 627,
	628, 0, 297, 298, 629, 0, 0, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 316,
	317, 0, 318, 319, 320, 0, 321, 322, 323, 0,
	0, 0, 0, 0, 0, 0, 324, 325, 326, 327,
	328, 0, 329, 630, 631, 0, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	340, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 632, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 633, 634, 360, 0, 0, 0, 0,
	0, 0, 0, 361, 362, 363, 635, 0, 0, 0,
	364, 0, 365, 366, 0, 0, 0, 367, 368, 636,
	637, 369, 370, 371, 372, 373, 374, 375, 376, 377,
	0, 378, 638, 0, 639, 379, 0, 380, 381, 382,
	383, 384, 3519, 641, 642, 463, 0, 385, 386, 0,
	387, 388, 389, 390, 391, 0, 0, 0, 0, 392,
	393, 394, 396, 0, 0, 395, 643, 644, 0, 645,
	0, 397, 398, 0, 646, 0, 399, 400, 401, 0,
	402, 0, 0, 0, 403, 404, 405, 406, 407, 408,
	0, 409, 411, 410, 0, 412, 647, 0, 413, 414,
	0, 0, 415, 0, 0, 0, 416, 417, 420, 0,
	0, 418, 419, 421, 422, 0, 423, 424, 426, 429,
	425, 427, 428, 430, 443, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 445, 0, 444,
	0, 446, 447, 448, 453, 455, 456, 451, 452, 454,
	457, 458, 450, 0, 459, 449, 0, 0, 0, 460,
	461, 0, 648, 462, 649, 464, 465, 0, 0, 466,
	0, 0, 0, 468, 469, 470, 0, 0, 471, 472,
	650, 0, 473, 0, 651, 474, 475, 467, 476, 477,
	478, 479, 480, 481, 482, 483, 0, 484, 485, 652,
	486, 487, 488, 653, 489, 490, 491, 654, 492, 655,
	493, 494, 0, 495, 496, 0, 497, 498, 499, 500,
	501, 502, 503, 656, 504, 506, 505, 507, 0, 508,
	0, 509, 510, 511, 0, 0, 0, 0, 512, 0,
	514, 515, 516, 517, 513, 518, 519, 520, 521, 0,
	522, 523, 524, 0, 525, 526, 527, 528, 657, 529,
	0, 530, 531, 537, 538, 539, 532, 533, 540, 541,
	542, 543, 544, 0, 546, 547, 545, 548, 549, 550,
	0, 551, 552, 534, 535, 553, 554, 0, 555, 556,
	557, 558, 559, 560, 561, 658, 0, 562, 0, 563,
	564, 565, 567, 536, 568, 573, 574, 659, 569, 570,
	571, 572, 660, 576, 577, 0, 578, 579, 0, 575,
	566, 0, 580, 581, 582, 583, 584, 585, 586, 354,
	587, 0, 588, 661, 662, 663, 664, 0, 597, 0,
	589, 590, 591, 665, 592, 666, 0, 593, 594, 595,
	596, 0, 598, 599, 0, 0, 600, 601, 602, 604,
	605, 603, 606, 0, 607, 0, 0, 608, 609, 610,
	667, 668, 669, 265, 612, 611, 613, 670, 0, 614,
	0, 0, 0, 0, 615, 616, 671, 617, 618, 619,
	271, 273, 272, 274, 275, 276, 277, 0, 278, 279,
	0, 0, 0, 0, 0, 620, 0, 0, 0, 0,
	280, 281, 0, 282, 283, 284, 285, 286, 287, 621,
	622, 0, 288, 623, 289, 624, 0, 625, 290, 291,
	292, 293, 294, 295, 0, 0, 0, 296, 626, 627,
	628, 0, 297, 298, 629, 0, 0, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 316,
	317, 0, 318, 319, 320, 0, 321, 322, 323, 0,
	0, 0, 0, 0, 0, 0, 324, 325, 326, 327,
	328, 0, 329, 630, 631, 0, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	340, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 632, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 633, 634, 360, 0, 0, 0, 0,
	0, 0, 0, 361, 362, 363, 635, 0, 0, 0,
	364, 0, 365, 366, 0, 0, 0, 367, 368, 636,
	637, 369, 370, 371, 372, 373, 374, 375, 376, 377,
	0, 378, 638, 0, 639, 379, 0, 380, 381, 382,
	383, 384, 3456, 641, 642, 463, 0, 385, 386, 0,
	387, 388, 389, 390, 391, 0, 0, 0, 0, 392,
	393, 394, 396, 0, 0, 395, 643, 644, 0, 645,
	0, 397, 398, 0, 646, 0, 399, 400, 401, 0,
	402, 0, 0, 0, 403, 404, 405, 406, 407, 408,
	0, 409, 411, 410, 0, 412, 647, 0, 413, 414,
	0, 0, 415, 0, 0, 0, 416, 417, 420, 0,
	0, 418, 419, 421, 422, 0, 423, 424, 426, 429,
	425, 427, 428, 430, 443, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 445, 0, 444,
	0, 446, 447, 448, 453, 455, 456, 451, 452, 454,
	457, 458, 450, 0, 459, 449, 0, 0, 0, 460,
	461, 0, 648, 462, 649, 464, 465, 0, 0, 466,
	0, 0, 0, 468, 469, 470, 0, 0, 471, 472,
	650, 0, 473, 0, 651, 474, 475, 467, 476, 477,
	478, 479, 480, 481, 482, 483, 0, 484, 485, 652,
	486, 487, 488, 653, 489, 490, 491, 654, 492, 655,
	493, 494, 0, 495, 496, 0, 497, 498, 499, 500,
	501, 502, 503, 656, 504, 506, 505, 507, 0, 508,
	0, 509, 510, 511, 0, 0, 0, 0, 512, 0,
	514, 515, 516, 517, 513, 518, 519, 520, 521, 0,
	522, 523, 524, 0, 525, 526, 527, 528, 657, 529,
	0, 530, 531, 537, 538, 539, 532, 533, 540, 541,
	542, 543, 544, 0, 546, 547, 545, 548, 549, 550,
	0, 551, 552, 534, 535, 553, 554, 0, 555, 556,
	557, 558, 559, 560, 561, 658, 0, 562, 0, 563,
	564, 565, 567, 536, 568, 573, 574, 659, 569, 570,
	571, 572, 660, 576, 577, 0, 578, 579, 0, 575,
	566, 0, 580, 581, 582, 583, 584, 585, 586, 354,
	587, 0, 588, 661, 662, 663, 664, 0, 597, 0,
	589, 590, 591, 665, 592, 666, 0, 593, 594, 595,
	596, 0, 598, 599, 0, 0, 600, 601, 602, 604,
	605, 603, 606, 0, 607, 0, 0, 608, 609, 610,
	667, 668, 669, 265, 612, 611, 613, 670, 0, 614,
	0, 0, 0, 0, 615, 616, 671, 617, 618, 619,
	271, 273, 272, 274, 275, 276, 277, 0, 278, 279,
	0, 0, 0, 0, 0, 620, 0, 0, 0, 0,
	280, 281, 0, 282, 283, 284, 285, 286, 287, 621,
	622, 0, 288, 623, 289, 624, 0, 625, 290, 291,
	292, 293, 294, 295, 0, 0, 0, 296, 626, 627,
	628, 0, 297, 298, 629, 0, 0, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 316,
	317, 0, 318, 319, 320, 0, 321, 322, 323, 0,
	0, 0, 0, 0, 0, 0, 324, 325, 326, 327,
	328, 0, 329, 630, 631, 0, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	340, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 632, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 633, 634, 360, 0, 0, 0, 0,
	0, 0, 0, 361, 362, 363, 635, 0, 0, 0,
	364, 0, 365, 366, 0, 0, 0, 367, 368, 636,
	637, 369, 370, 371, 372, 373, 374, 375, 376, 377,
	0, 378, 638, 0, 639, 379, 0, 380, 381, 382,
	383, 384, 3434, 641, 642, 463, 0, 385, 386, 0,
	387, 388, 389, 390, 391, 0, 0, 0, 0, 392,
	393, 394, 396, 0, 0, 395, 643, 644, 0, 645,
	0, 397, 398, 0, 646, 0, 399, 400, 401, 0,
	402, 0, 0, 0, 403, 404, 405, 406, 407, 408,
	0, 409, 411, 410, 0, 412, 647, 0, 413, 414,
	0, 0, 415, 0, 0, 0, 416, 417, 420, 0,
	0, 418, 419, 421, 422, 0, 423, 424, 426, 429,
	425, 427, 428, 430, 443, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 445, 0, 444,
	0, 446, 447, 448, 453, 455, 456, 451, 452, 454,
	457, 458, 450, 0, 459, 449, 0, 0, 0, 460,
	461, 0, 648, 462, 649, 464, 465, 0, 0, 466,
	0, 0, 0, 468, 469, 470, 0, 0, 471, 472,
	650, 0, 473, 0, 651, 474, 475, 467, 476, 477,
	478, 479, 480, 481, 482, 483, 0, 484, 485, 652,
	486, 487, 488, 653, 489, 490, 491, 654, 492, 655,
	493, 494, 0, 495, 496, 0, 497, 498, 499, 500,
	501, 502, 503, 656, 504, 506, 505, 507, 0, 508,
	0, 509, 510, 511, 0, 0, 0, 0, 512, 0,
	514, 515, 516, 517, 513, 518, 519, 520, 521, 0,
	522, 523, 524, 0, 525, 526, 527, 528, 657, 529,
	0, 530, 531, 537, 538, 539, 532, 533, 540, 541,
	542, 543, 544, 0, 546, 547, 545, 548, 549, 550,
	0, 551, 552, 534, 535, 553, 554, 0, 555, 556,
	557, 558, 559, 560, 561, 658, 0, 562, 0, 563,
	564, 565, 567, 536, 568, 573, 574, 659, 569, 570,
	571, 572, 660, 576, 577, 0, 578, 579, 0, 575,
	566, 0, 580, 581, 582, 583, 584, 585, 586, 354,
	587, 0, 588, 661, 662, 663, 664, 0, 597, 0,
	589, 590, 591, 665, 592, 666, 0, 593, 594, 595,
	596, 0, 598, 599, 0, 0, 600, 601, 602, 604,
	605, 603, 606, 0, 607, 0, 0, 608, 609, 610,
	667, 668, 669, 265, 612, 611, 613, 670, 0, 614,
	0, 0, 0, 0, 615, 616, 671, 617, 618, 619,
	271, 273, 272, 274, 275, 276, 277, 0, 278, 279,
	0, 0, 0, 0, 0, 620, 0, 0, 0, 0,
	280, 281, 0, 282, 283, 284, 285, 286, 287, 621,
	622, 0, 288, 623, 289, 624, 0, 625, 290, 291,
	292, 293, 294, 295, 0, 0, 0, 296, 626, 627,
	628, 0, 297, 298, 629, 0, 0, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 316,
	317, 0, 318, 319, 320, 0, 321, 322, 323, 0,
	0, 0, 0, 0, 0, 0, 324, 325, 326, 327,
	328, 0, 329, 630, 631, 0, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	340, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 632, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 633, 634, 360, 0, 0, 0, 0,
	0, 0, 0, 361, 362, 363, 635, 0, 0, 0,
	364, 0, 365, 366, 0, 0, 0, 367, 368, 636,
	637, 369, 370, 371, 372, 373, 374, 375, 376, 377,
	0, 378, 638, 0, 639, 379, 0, 380, 381, 382,
	383, 384, 3431, 641, 642, 463, 0, 385, 386, 0,
	387, 388, 389, 390, 391, 0, 0, 0, 0, 392,
	393, 394, 396, 0, 0, 395, 643, 644, 0, 645,
	0, 397, 398, 0, 646, 0, 399, 400, 401, 0,
	402, 0, 0, 0, 403, 404, 405, 406, 407, 408,
	0, 409, 411, 410, 0, 412, 647, 0, 413, 414,
	0, 0, 415, 0, 0, 0, 416, 417, 420, 0,
	0, 418, 419, 421, 422, 0, 423, 424, 426, 429,
	425, 427, 428, 430, 443, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 445, 0, 444,
	0, 446, 447, 448, 453, 455, 456, 451, 452, 454,
	457, 458, 450, 0, 459, 449, 0, 0, 0, 460,
	461, 0, 648, 462, 649, 464, 465, 0, 0, 466,
	0, 0, 0, 468, 469, 470, 0, 0, 471, 472,
	650, 0, 473, 0, 651, 474, 475, 467, 476, 477,
	478, 479, 480, 481, 482, 483, 0, 484, 485, 652,
	486, 487, 488, 653, 489, 490, 491, 654, 492, 655,
	493, 494, 0, 495, 496, 0, 497, 498, 499, 500,
	501, 502, 503, 656, 504, 506, 505, 507, 0, 508,
	0, 509, 510, 511, 0, 0, 0, 0, 512, 0,
	514, 515, 516, 517, 513, 518, 519, 520, 521, 0,
	522, 523, 524, 0, 525, 526, 527, 528, 657, 529,
	0, 530, 531, 537, 538, 539, 532, 533, 540, 541,
	542, 543, 544, 0, 546, 547, 545, 548, 549, 550,
	0, 551, 552, 534, 535, 553, 554, 0, 555, 556,
	557, 558, 559, 560, 561, 658, 0, 562, 0, 563,
	564, 565, 567, 536, 568, 573, 574, 659, 569, 570,
	571, 572, 660, 576, 577, 0, 578, 579, 0, 575,
	566, 0, 580, 581, 582, 583, 584, 585, 586, 354,
	587, 0, 588, 661, 662, 663, 664, 0, 597, 0,
	589, 590, 591, 665, 592, 666, 0, 593, 594, 595,
	596, 0, 598, 599, 0, 0, 600, 601, 602, 604,
	605, 603, 606, 0, 607, 0, 0, 608, 609, 610,
	667, 668, 669, 265, 612, 611, 613, 670, 0, 614,
	0, 0, 0, 0, 615, 616, 671, 617, 618, 619,
	271, 273, 272, 274, 275, 276, 277, 0, 278, 279,
	0, 0, 0, 0, 0, 620, 0, 0, 0, 0,
	280, 281, 0, 282, 283, 284, 285, 286, 287, 621,
	622, 0, 288, 623, 289, 624, 0, 625, 290, 291,
	292, 293, 294, 295, 0, 0, 0, 296, 626, 627,
	628, 0, 297, 298, 629, 0, 0, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 316,
	317, 0, 318, 319, 320, 0, 321, 322, 323, 0,
	0, 0, 0, 0, 0, 0, 324, 325, 326, 327,
	328, 0, 329, 630, 631, 0, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	340, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 632, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 633, 634, 360, 0, 0, 0, 0,
	0, 0, 0, 361, 362, 363, 635, 0, 0, 0,
	364, 0, 365, 366, 0, 0, 0, 367, 368, 636,
	637, 369, 370, 371, 372, 373, 374, 375, 376, 377,
	0, 378, 638, 0, 639, 379, 0, 380, 381, 382,
	383, 384, 3383, 641, 642, 463, 0, 385, 386, 0,
	387, 388, 389, 390, 391, 0, 0, 0, 0, 392,
	393, 394, 396, 0, 0, 395, 643, 644, 0, 645,
	0, 397, 398, 0, 646, 0, 399, 400, 401, 0,
	402, 0, 0, 0, 403, 404, 405, 406, 407, 408,
	0, 409, 411, 410, 0, 412, 647, 0, 413, 414,
	0, 0, 415, 0, 0, 0, 416, 417, 420, 0,
	0, 418, 419, 421, 422, 0, 423, 424, 426, 429,
	425, 427, 428, 430, 443, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 445, 0, 444,
	0, 446, 447, 448, 453, 455, 456, 451, 452, 454,
	457, 458, 450, 0, 459, 449, 0, 0, 0, 460,
	461, 0, 648, 462, 649, 464, 465, 0, 0, 466,
	0, 0, 0, 468, 469, 470, 0, 0, 471, 472,
	650, 0, 473, 0, 651, 474, 475, 467, 476, 477,
	478, 479, 480, 481, 482, 483, 0, 484, 485, 652,
	486, 487, 488, 653, 489, 490, 491, 654, 492, 655,
	493, 494, 0, 495, 496, 0, 497, 498, 499, 500,
	501, 502, 503, 656, 504, 506, 505, 507, 0, 508,
	0, 509, 510, 511, 0, 0, 0, 0, 512, 0,
	514, 515, 516, 517, 513, 518, 519, 520, 521, 0,
	522, 523, 524, 0, 525, 526, 527, 528, 657, 529,
	0, 530, 531, 537, 538, 539, 532, 533, 540, 541,
	542, 543, 544, 0, 546, 547, 545, 548, 549, 550,
	0, 551, 552, 534, 535, 553, 554, 0, 555, 556,
	557, 558, 559, 560, 561, 658, 0, 562, 0, 563,
	564, 565, 567, 536, 568, 573, 574, 659, 569, 570,
	571, 572, 660, 576, 577, 0, 578, 579, 0, 575,
	566, 0, 580, 581, 582, 583, 584, 585, 586, 354,
	587, 0, 588, 661, 662, 663, 664, 0, 597, 0,
	589, 590, 591, 665, 592, 666, 0, 593, 594, 595,
	596, 0, 598, 599, 0, 0, 600, 601, 602, 604,
	605, 603, 606, 0, 607, 0, 0, 608, 609, 610,
	667, 668, 669, 265, 612, 611, 613, 670, 0, 614,
	0, 0, 0, 0, 615, 616, 671, 617, 618, 619,
	271, 273, 272, 274, 275, 276, 277, 0, 278, 279,
	0, 0, 0, 0, 0, 620, 0, 0, 0, 0,
	280, 281, 0, 282, 283, 284, 285, 286, 287, 621,
	622, 0, 288, 623, 289, 624, 0, 625, 290, 291,
	292, 293, 294, 295, 0, 0, 0, 296, 626, 627,
	628, 0, 297, 298, 629, 0, 0, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 316,
	317, 0, 318, 319, 320, 0, 321, 322, 323, 0,
	0, 0, 0, 0, 0, 0, 324, 325, 326, 327,
	328, 0, 329, 630, 631, 0, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	340, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 632, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 633, 634, 360, 0, 0, 0, 0,
	0, 0, 0, 361, 362, 363, 635, 0, 0, 0,
	364, 0, 365, 366, 0, 0, 0, 367, 368, 636,
	637, 369, 370, 371, 372, 373, 374, 375, 376, 377,
	0, 378, 638, 0, 639, 379, 0, 380, 381, 382,
	383, 384, 3381, 641, 642, 463, 0, 385, 386, 0,
	387, 388, 389, 390, 391, 0, 0, 0, 0, 392,
	393, 394, 396, 0, 0, 395, 643, 644, 0, 645,
	0, 397, 398, 0, 646, 0, 399, 400, 401, 0,
	402, 0, 0, 0, 403, 404, 405, 406, 407, 408,
	0, 409, 411, 410, 0, 412, 647, 0, 413, 414,
	0, 0, 415, 0, 0, 0, 416, 417, 420, 0,
	0, 418, 419, 421, 422, 0, 423, 424, 426, 429,
	425, 427, 428, 430, 443, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 445, 0, 444,
	0, 446, 447, 448, 453, 455, 456, 451, 452, 454,
	457, 458, 450, 0, 459, 449, 0, 0, 0, 460,
	461, 0, 648, 462, 649, 464, 465, 0, 0, 466,
	0, 0, 0, 468, 469, 470, 0, 0, 471, 472,
	650, 0, 473, 0, 651, 474, 475, 467, 476, 477,
	478, 479, 480, 481, 482, 483, 0, 484, 485, 652,
	486, 487, 488, 653, 489, 490, 491, 654, 492, 655,
	493, 494, 0, 495, 496, 0, 497, 498, 499, 500,
	501, 502, 503, 656, 504, 506, 505, 507, 0, 508,
	0, 509, 510, 511, 0, 0, 0, 0, 512, 0,
	514, 515, 516, 517, 513, 518, 519, 520, 521, 0,
	522, 523, 524, 0, 525, 526, 527, 528, 657, 529,
	0, 530, 531, 537, 538, 539, 532, 533, 540, 541,
	542, 543, 544, 0, 546, 547, 545, 548, 549, 550,
	0, 551, 552, 534, 535, 553, 554, 0, 555, 556,
	557, 558, 559, 560, 561, 658, 0, 562, 0, 563,
	564, 565, 567, 536, 568, 573, 574, 659, 569, 570,
	571, 572, 660, 576, 577, 0, 578, 579, 0, 575,
	566, 0, 580, 581, 582, 583, 584, 585, 586, 354,
	587, 0, 588, 661, 662, 663, 664, 0, 597, 0,
	589, 590, 591, 665, 592, 666, 0, 593, 594, 595,
	596, 0, 598, 599, 0, 0, 600, 601, 602, 604,
	605, 603, 606, 0, 607, 0, 0, 608, 609, 610,
	667, 668, 669, 265, 612, 611, 613, 670, 0, 614,
	0, 0, 0, 0, 615, 616, 671, 617, 618, 619,
	271, 273, 272, 274, 275, 276, 277, 0, 278, 279,
	0, 0, 0, 0, 0, 620, 0, 0, 0, 0,
	280, 281, 0, 282, 283, 284, 285, 286, 287, 621,
	622, 0, 288, 623, 289, 624, 0, 625, 290, 291,
	292, 293, 294, 295, 0, 0, 0, 296, 626, 627,
	628, 0, 297, 298, 629, 0, 0, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 316,
	317, 0, 318, 319, 320, 0, 321, 322, 323, 0,
	0, 0, 0, 0, 0, 0, 324, 325, 326, 327,
	328, 0, 329, 630, 631, 0, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	340, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 632, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 633, 634, 360, 0, 0, 0, 0,
	0, 0, 0, 361, 362, 363, 635, 0, 0, 0,
	364, 0, 365, 366, 0, 0, 0, 367, 368, 636,
	637, 369, 370, 371, 372, 373, 374, 375, 376, 377,
	0, 378, 638, 0, 639, 379, 0, 380, 381, 382,
	383, 384, 3366, 641, 642, 463, 0, 385, 386, 0,
	387, 388, 389, 390, 391, 0, 0, 0, 0, 392,
	393, 394, 396, 0, 0, 395, 643, 644, 0, 645,
	0, 397, 398, 0, 646, 0, 399, 400, 401, 0,
	402, 0, 0, 0, 403, 404, 405, 406, 407, 408,
	0, 409, 411, 410, 0, 412, 647, 0, 413, 414,
	0, 0, 415, 0, 0, 0, 416, 417, 420, 0,
	0, 418, 419, 421, 422, 0, 423, 424, 426, 429,
	425, 427, 428, 430, 443, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 445, 0, 444,
	0, 446, 447, 448, 453, 455, 456, 451, 452, 454,
	457, 458, 450, 0, 459, 449, 0, 0, 0, 460,
	461, 0, 648, 462, 649, 464, 465, 0, 0, 466,
	0, 0, 0, 468, 469, 470, 0, 0, 471, 472,
	650, 0, 473, 0, 651, 474, 475, 467, 476, 477,
	478, 479, 480, 481, 482, 483, 0, 484, 485, 652,
	486, 487, 488, 653, 489, 490, 491, 654, 492, 655,
	493, 494, 0, 495, 496, 0, 497, 498, 499, 500,
	501, 502, 503, 656, 504, 506, 505, 507, 0, 508,
	0, 509, 510, 511, 0, 0, 0, 0, 512, 0,
	514, 515, 516, 517, 513, 518, 519, 520, 521, 0,
	522, 523, 524, 0, 525, 526, 527, 528, 657, 529,
	0, 530, 531, 537, 538, 539, 532, 533, 540, 541,
	542, 543, 544, 0, 546, 547, 545, 548, 549, 550,
	0, 551, 552, 534, 535, 553, 554, 0, 555, 556,
	557, 558, 559, 560, 561, 658, 0, 562, 0, 563,
	564, 565, 567, 536, 568, 573, 574, 659, 569, 570,
	571, 572, 660, 576, 577, 0, 578, 579, 0, 575,
	566, 0, 580, 581, 582, 583, 584, 585, 586, 354,
	587, 0, 588, 661, 662, 663, 664, 0, 597, 0,
	589, 590, 591, 665, 592, 666, 0, 593, 594, 595,
	596, 0, 598, 599, 0, 0, 600, 601, 602, 604,
	605, 603, 606, 0, 607, 0, 0, 608, 609, 610,
	667, 668, 669, 265, 612, 611, 613, 670, 0, 614,
	0, 0, 0, 0, 615, 616, 671, 617, 618, 619,
	271, 273, 272, 274, 275, 276, 277, 0, 278, 279,
	0, 0, 0, 0, 0, 620, 0, 0, 0, 0,
	280, 281, 0, 282, 283, 284, 285, 286, 287, 621,
	622, 0, 288, 623, 289, 624, 0, 625, 290, 291,
	292, 293, 294, 295, 0, 0, 0, 296, 626, 627,
	628, 0, 297, 298, 629, 0, 0, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 316,
	317, 0, 318, 319, 320, 0, 321, 322, 323, 0,
	0, 0, 0, 0, 0, 0, 324, 325, 326, 327,
	328, 0, 329, 630, 631, 0, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	340, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 632, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 633, 634, 360, 0, 0, 0, 0,
	0, 0, 0, 361, 362, 363, 635, 0, 0, 0,
	364, 0, 365, 366, 0, 0, 0, 367, 368, 636,
	637, 369, 370, 371, 372, 373, 374, 375, 376, 377,
	0, 378, 638, 0, 639, 379, 0, 380, 381, 382,
	383, 384, 2979, 641, 642, 463, 0, 385, 386, 0,
	387, 388, 389, 390, 391, 0, 0, 0, 0, 392,
	393, 394, 396, 0, 0, 395, 643, 644, 0, 645,
	0, 397, 398, 0, 646, 0, 399, 400, 401, 0,
	402, 0, 0, 0, 403, 404, 405, 406, 407, 408,
	0, 409, 411, 410, 0, 412, 647, 0, 413, 414,
	0, 0, 415, 0, 0, 0, 416, 417, 420, 0,
	0, 418, 419, 421, 422, 0, 423, 424, 426, 429,
	425, 427, 428, 430, 443, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 445, 0, 444,
	0, 446, 447, 448, 453, 455, 456, 451, 452, 454,
	457, 458, 450, 0, 459, 449, 0, 0, 0, 460,
	461, 0, 648, 462, 649, 464, 465, 0, 0, 466,
	0, 0, 0, 468, 469, 470, 0, 0, 471, 472,
	650, 0, 473, 0, 651, 474, 475, 467, 476, 477,
	478, 479, 480, 481, 482, 483, 0, 484, 485, 652,
	486, 487, 488, 653, 489, 490, 491, 654, 492, 655,
	493, 494, 0, 495, 496, 0, 497, 498, 499, 500,
	501, 502, 503, 656, 504, 506, 505, 507, 0, 508,
	0, 509, 510, 511, 0, 0, 0, 0, 512, 0,
	514, 515, 516, 517, 513, 518, 519, 520, 521, 0,
	522, 523, 524, 0, 525, 526, 527, 528, 657, 529,
	0, 530, 531, 537, 538, 539, 532, 533, 540, 541,
	542, 543, 544, 0, 546, 547, 545, 548, 549, 550,
	0, 551, 552, 534, 535, 553, 554, 0, 555, 556,
	557, 558, 559, 560, 561, 658, 0, 562, 0, 563,
	564, 565, 567, 536, 568, 573, 574, 659, 569, 570,
	571, 572, 660, 576, 577, 0, 578, 579, 0, 575,
	566, 0, 580, 581, 582, 583, 584, 585, 586, 354,
	587, 0, 588, 661, 662, 663, 664, 0, 597, 0,
	589, 590, 591, 665, 592, 666, 0, 593, 594, 595,
	596, 0, 598, 599, 0, 0, 600, 601, 602, 604,
	605, 603, 606, 0, 607, 0, 0, 608, 609, 610,
	667, 668, 669, 265, 612, 611, 613, 670, 0, 614,
	0, 0, 0, 0, 615, 616, 671, 617, 618, 619,
	271, 273, 272, 274, 275, 276, 277, 0, 278, 279,
	0, 0, 0, 0, 0, 620, 0, 0, 0, 0,
	280, 281, 0, 282, 283, 284, 285, 286, 287, 621,
	622, 0, 288, 623, 289, 624, 0, 625, 290, 291,
	292, 293, 294, 295, 0, 0, 0, 296, 626, 627,
	628, 0, 297, 298, 629, 0, 0, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 316,
	317, 0, 318, 319, 320, 0, 321, 322, 323, 0,
	0, 0, 0, 0, 0, 0, 324, 325, 326, 327,
	328, 0, 329, 630, 631, 0, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	340, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 632, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 633, 634, 360, 0, 0, 0, 0,
	0, 0, 0, 361, 362, 363, 635, 0, 0, 0,
	364, 0, 365, 366, 0, 0, 0, 367, 368, 636,
	637, 369, 370, 371, 372, 373, 374, 375, 376, 377,
	0, 378, 638, 0, 639, 379, 0, 380, 381, 382,
	383, 384, 640, 641, 642, 463, 0, 385, 386, 0,
	387, 388, 389, 390, 391, 0, 0, 0, 0, 392,
	393, 394, 396, 0, 0, 395, 643, 644, 0, 645,
	0, 397, 398, 0, 646, 0, 399, 400, 401, 0,
	402, 0, 0, 0, 403, 404, 405, 406, 407, 408,
	0, 409, 411, 410, 0, 412, 647, 0, 413, 414,
	0, 0, 415, 0, 0, 0, 416, 417, 420, 0,
	0, 418, 419, 421, 422, 0, 423, 424, 426, 429,
	425, 427, 428, 430, 443, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 445, 0, 444,
	0, 446, 447, 448, 453, 455, 456, 451, 452, 454,
	457, 458, 450, 0, 459, 449, 0, 0, 0, 460,
	461, 0, 648, 462, 649, 464, 465, 0, 0, 466,
	0, 0, 0, 468, 469, 470, 0, 0, 471, 472,
	650, 0, 473, 0, 651, 474, 475, 467, 476, 477,
	478, 479, 480, 481, 482, 483, 0, 484, 485, 652,
	486, 487, 488, 653, 489, 490, 491, 654, 492, 655,
	493, 494, 0, 495, 496, 0, 497, 498, 499, 500,
	501, 502, 503, 656, 504, 506, 505, 507, 0, 508,
	0, 509, 510, 511, 0, 0, 0, 0, 512, 0,
	514, 515, 516, 517, 513, 518, 519, 520, 521, 0,
	522, 523, 524, 0, 525, 526, 527, 528, 657, 529,
	0, 530, 531, 743, 538, 539, 532, 533, 540, 541,
	542, 543, 544, 0, 546, 547, 545, 548, 549, 550,
	0, 551, 552, 534, 535, 553, 554, 0, 555, 556,
	557, 558, 559, 560, 561, 658, 0, 562, 0, 563,
	564, 565, 567, 536, 568, 573, 574, 659, 569, 570,
	571, 572, 660, 576, 577, 0, 578, 579, 0, 575,
	566, 0, 580, 581, 582, 583, 584, 585, 586, 354,
	587, 0, 588, 661, 662, 663, 664, 0, 597, 0,
	589, 590, 591, 665, 592, 666, 0, 593, 594, 595,
	596, 0, 598, 599, 0, 0, 600, 601, 602, 604,
	605, 603, 606, 0, 607, 0, 0, 608, 609, 610,
	667, 668, 669, 265, 612, 611, 613, 670, 0, 614,
	0, 0, 0, 0, 615, 616, 671, 617, 618, 619,
	271, 273, 272, 274, 275, 276, 277, 0, 278, 279,
	0, 0, 0, 0, 0, 620, 0, 2250, 0, 0,
	280, 281, 0, 282, 283, 284, 285, 286, 287, 621,
	622, 0, 288, 623, 289, 624, 0, 625, 290, 291,
	292, 293, 294, 295, 0, 0, 0, 296, 626, 627,
	628, 0, 297, 298, 629, 0, 0, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 316,
	317, 0, 318, 319, 320, 0, 321, 322, 323, 0,
	0, 0, 0, 0, 0, 0, 324, 325, 326, 327,
	328, 0, 329, 630, 631, 0, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	340, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 632, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 633, 634, 360, 0, 0, 0, 0,
	0, 0, 0, 361, 362, 363, 635, 0, 0, 0,
	364, 0, 365, 366, 0, 0, 0, 367, 368, 636,
	637, 369, 370, 371, 372, 373, 374, 375, 376, 377,
	0, 378, 638, 0, 639, 379, 0, 380, 381, 382,
	383, 384, 640, 641, 642, 463, 0, 385, 386, 0,
	387, 388, 389, 390, 391, 0, 0, 0, 0, 392,
	393, 394, 396, 0, 0, 395, 643, 644, 0, 645,
	0, 397, 398, 0, 646, 0, 399, 400, 401, 0,
	402, 0, 0, 0, 403, 404, 405, 406, 407, 408,
	0, 409, 411, 410, 0, 412, 647, 0, 413, 414,
	0, 0, 415, 0, 0, 0, 416, 417, 420, 0,
	0, 418, 419, 421, 422, 0, 423, 424, 426, 429,
	425, 427, 428, 430, 443, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 445, 0, 444,
	0, 446, 447, 448, 453, 455, 456, 451, 452, 454,
	457, 458, 450, 0, 459, 449, 0, 0, 0, 460,
	461, 0, 648, 462, 649, 464, 465, 0, 0, 466,
	0, 0, 0, 468, 469, 470, 0, 0, 471, 472,
	650, 0, 473, 0, 651, 474, 475, 467, 476, 477,
	478, 479, 480, 481, 482, 483, 0, 484, 485, 652,
	486, 487, 488, 653, 489, 490, 491, 654, 492, 655,
	493, 494, 0, 495, 496, 0, 497, 498, 499, 500,
	501, 502, 503, 656, 504, 506, 505, 507, 0, 508,
	0, 509, 510, 511, 0, 0, 0, 0, 512, 0,
	514, 515, 516, 517, 513, 518, 519, 520, 521, 0,
	522, 523, 524, 0, 525, 526, 527, 528, 657, 529,
	0, 530, 531, 537, 538, 539, 532, 533, 540, 541,
	542, 543, 544, 0, 546, 547, 545, 548, 549, 550,
	0, 0, 552, 534, 535, 553, 554, 0, 555, 556,
	557, 558, 559, 560, 561, 658, 0, 562, 0, 563,
	564, 565, 567, 536, 568, 573, 574, 659, 569, 570,
	571, 572, 660, 576, 577, 0, 578, 579, 0, 575,
	566, 0, 580, 581, 582, 583, 584, 585, 586, 354,
	587, 0, 588, 661, 662, 663, 664, 0, 597, 0,
	589, 590, 591, 665, 592, 666, 0, 593, 594, 595,
	596, 0, 598, 599, 0, 0, 600, 601, 602, 604,
	605, 603, 606, 0, 607, 0, 0, 608, 609, 610,
	667, 668, 669, 265, 612, 611, 613, 670, 0, 614,
	0, 0, 0, 0, 615, 616, 671, 617, 618, 619,
	271, 273, 272, 274, 275, 276, 277, 0, 278, 279,
	0, 0, 0, 0, 0, 620, 0, 0, 0, 0,
	280, 281, 0, 282, 283, 284, 285, 286, 287, 621,
	622, 0, 288, 623, 289, 624, 0, 625, 290, 291,
	292, 293, 294, 295, 0, 0, 0, 296, 626, 627,
	628, 0, 297, 298, 629, 0, 0, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 316,
	317, 0, 318, 319, 320, 0, 321, 322, 323, 0,
	0, 0, 0, 0, 0, 0, 324, 325, 326, 327,
	328, 0, 329, 630, 631, 0, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	340, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 632, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 633, 634, 360, 0, 0, 0, 0,
	0, 0, 0, 361, 362, 363, 635, 0, 0, 0,
	364, 0, 365, 366, 0, 0, 0, 367, 368, 636,
	637, 369, 370, 371, 372, 373, 374, 375, 376, 377,
	0, 378, 638, 0, 639, 379, 0, 380, 381, 382,
	383, 384, 1259, 641, 642, 463, 0, 385, 386, 0,
	387, 388, 389, 390, 391, 0, 0, 0, 0, 392,
	393, 394, 396, 0, 0, 395, 643, 644, 0, 645,
	0, 397, 398, 0, 646, 0, 399, 400, 401, 0,
	402, 0, 0, 0, 403, 404, 405, 406, 407, 408,
	0, 409, 411, 410, 0, 412, 647, 0, 413, 414,
	0, 0, 415, 0, 0, 0, 416, 417, 420, 0,
	0, 418, 419, 421, 422, 0, 423, 424, 426, 429,
	425, 427, 428, 430, 443, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 445, 0, 444,
	0, 446, 447, 448, 453, 455, 456, 451, 452, 454,
	457, 458, 450, 0, 459, 449, 0, 0, 0, 460,
	461, 0, 648, 462, 649, 464, 465, 0, 0, 466,
	0, 0, 0, 468, 469, 470, 0, 0, 471, 472,
	650, 0, 473, 0, 651, 474, 475, 467, 476, 477,
	478, 479, 480, 481, 482, 483, 0, 484, 485, 652,
	486, 487, 488, 653, 489, 490, 491, 654, 492, 655,
	493, 494, 0, 495, 496, 0, 497, 498, 499, 500,
	501, 502, 503, 656, 504, 506, 505, 507, 0, 508,
	0, 509, 510, 511, 0, 0, 0, 0, 512, 0,
	514, 515, 516, 517, 513, 518, 519, 520, 521, 0,
	522, 523, 524, 0, 525, 526, 527, 528, 657, 529,
	0, 530, 531, 537, 538, 539, 532, 533, 540, 541,
	542, 543, 544, 0, 546, 547, 545, 548, 549, 550,
	0, 551, 552, 534, 535, 553, 554, 0, 555, 556,
	557, 558, 559, 560, 561, 658, 0, 562, 0, 563,
	564, 565, 567, 536, 568, 573, 574, 659, 569, 570,
	571, 572, 660, 576, 577, 0, 578, 579, 0, 575,
	566, 0, 580, 581, 582, 583, 584, 585, 586, 354,
	587, 0, 588, 661, 662, 663, 664, 0, 597, 0,
	589, 590, 591, 665, 592, 666, 0, 593, 594, 595,
	596, 0, 598, 599, 0, 0, 600, 601, 602, 604,
	605, 603, 606, 0, 607, 0, 0, 608, 609, 610,
	667, 668, 669, 265, 612, 611, 613, 670, 0, 614,
	0, 0, 0, 0, 615, 616, 671, 617, 618, 619,
	271, 273, 272, 274, 275, 276, 277, 0, 278, 279,
	0, 0, 0, 0, 0, 620, 0, 0, 0, 0,
	280, 281, 0, 282, 283, 284, 285, 286, 287, 621,
	622, 0, 288, 623, 289, 624, 0, 625, 290, 291,
	292, 293, 294, 295, 0, 0, 0, 296, 626, 627,
	628, 0, 297, 298, 629, 0, 0, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 316,
	317, 0, 318, 319, 320, 0, 321, 322, 323, 0,
	0, 0, 0, 0, 0, 0, 324, 325, 326, 327,
	328, 0, 329, 630, 631, 0, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	340, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 632, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 633, 634, 360, 0, 0, 0, 0,
	0, 0, 0, 361, 362, 363, 635, 0, 0, 0,
	364, 0, 365, 366, 0, 0, 0, 367, 368, 636,
	637, 369, 370, 371, 372, 373, 374, 375, 376, 377,
	0, 378, 638, 0, 639, 379, 0, 380, 381, 382,
	383, 384, 640, 641, 642, 463, 0, 385, 386, 0,
	387, 388, 389, 390, 391, 0, 0, 0, 0, 392,
	393, 394, 396, 0, 0, 395, 643, 644, 0, 645,
	0, 397, 398, 0, 646, 0, 399, 400, 401, 0,
	402, 0, 0, 0, 403, 404, 405, 406, 407, 408,
	0, 409, 411, 410, 0, 412, 647, 0, 413, 414,
	0, 0, 415, 0, 0, 0, 416, 417, 420, 0,
	0, 418, 419, 421, 422, 0, 423, 424, 426, 429,
	425, 427, 428, 430, 443, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 445, 0, 444,
	0, 446, 447, 448, 453, 455, 456, 451, 452, 454,
	457, 458, 450, 0, 459, 449, 0, 0, 0, 460,
	461, 0, 648, 462, 649, 464, 465, 0, 0, 466,
	0, 0, 0, 468, 469, 470, 0, 0, 471, 472,
	650, 0, 473, 0, 651, 474, 475, 467, 476, 477,
	478, 479, 480, 481, 482, 483, 0, 484, 485, 652,
	486, 487, 488, 653, 489, 490, 491, 654, 492, 655,
	493, 494, 0, 495, 496, 0, 497, 498, 499, 500,
	501, 502, 503, 656, 504, 1192, 505, 507, 0, 508,
	0, 509, 510, 511, 0, 0, 0, 0, 512, 0,
	514, 515, 516, 517, 513, 518, 519, 520, 521, 0,
	522, 523, 524, 0, 525, 526, 527, 528, 657, 529,
	0, 530, 531, 537, 538, 539, 532, 533, 540, 541,
	542, 543, 544, 0, 546, 547, 545, 548, 549, 550,
	0, 551, 552, 534, 535, 553, 554, 0, 555, 556,
	557, 558, 559, 560, 561, 658, 0, 562, 0, 563,
	564, 565, 567, 536, 568, 573, 574, 659, 569, 570,
	571, 572, 660, 576, 577, 0, 578, 579, 0, 575,
	566, 0, 580, 581, 582, 583, 584, 585, 586, 354,
	587, 0, 588, 661, 662, 663, 664, 0, 597, 0,
	589, 590, 591, 665, 592, 666, 0, 593, 594, 595,
	596, 0, 598, 599, 0, 0, 600, 601, 602, 604,
	605, 603, 606, 0, 607, 0, 0, 608, 609, 610,
	667, 668, 669, 265, 612, 611, 613, 670, 0, 614,
	0, 0, 0, 0, 615, 616, 671, 617, 618, 619,
	271, 273, 272, 274, 275, 276, 277, 0, 278, 279,
	0, 0, 0, 0, 0, 620, 0, 0, 0, 0,
	280, 281, 0, 282, 283, 284, 285, 286, 287, 621,
	622, 0, 288, 623, 289, 624, 0, 625, 290, 291,
	292, 293, 294, 295, 0, 0, 0, 296, 626, 627,
	628, 0, 297, 298, 629, 0, 0, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 316,
	317, 0, 318, 319, 320, 0, 321, 322, 323, 0,
	0, 0, 0, 0, 0, 0, 324, 325, 326, 327,
	328, 0, 329, 630, 631, 0, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	340, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 632, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 633, 634, 360, 0, 0, 0, 0,
	0, 0, 0, 361, 362, 363, 635, 0, 0, 0,
	364, 0, 365, 366, 0, 0, 0, 367, 368, 636,
	637, 369, 370, 371, 372, 373, 374, 375, 376, 377,
	0, 378, 638, 0, 639, 0, 0, 380, 381, 382,
	383, 384, 640, 641, 642, 463, 0, 385, 386, 0,
	387, 388, 389, 390, 391, 0, 0, 0, 0, 392,
	393, 394, 396, 0, 0, 395, 643, 644, 0, 645,
	0, 397, 398, 0, 646, 0, 399, 400, 401, 0,
	402, 0, 0, 0, 403, 404, 405, 406, 407, 408,
	0, 409, 411, 410, 0, 412, 647, 0, 413, 414,
	0, 0, 415, 0, 0, 0, 416, 417, 420, 0,
	0, 418, 419, 421, 422, 0, 423, 424, 426, 429,
	425, 427, 428, 430, 443, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 445, 0, 444,
	0, 446, 447, 448, 453, 455, 456, 451, 452, 454,
	457, 458, 450, 0, 459, 449, 0, 0, 0, 460,
	461, 0, 648, 462, 649, 464, 465, 0, 0, 466,
	0, 0, 0, 468, 469, 470, 0, 0, 471, 472,
	650, 0, 473, 0, 651, 474, 475, 467, 476, 477,
	0, 479, 480, 481, 482, 483, 0, 484, 485, 652,
	486, 487, 488, 653, 489, 490, 491, 654, 492, 655,
	493, 494, 0, 495, 496, 0, 497, 498, 499, 500,
	0, 502, 503, 656, 504, 506, 505, 507, 0, 508,
	0, 509, 510, 511, 0, 0, 0, 0, 512, 0,
	514, 515, 516, 517, 513, 518, 519, 520, 521, 0,
	522, 523, 524, 0, 525, 526, 527, 528, 657, 0,
	0, 530, 531, 537, 538, 539, 532, 533, 540, 541,
	542, 543, 544, 0, 546, 547, 545, 548, 549, 550,
	0, 551, 552, 534, 535, 553, 554, 0, 555, 556,
	557, 558, 559, 560, 561, 658, 0, 562, 0, 563,
	564, 565, 567, 536, 568, 573, 574, 659, 569, 570,
	571, 572, 660, 576, 577, 0, 578, 579, 0, 575,
	566, 0, 580, 581, 582, 583, 584, 585, 586, 354,
	587, 0, 588, 661, 662, 663, 664, 0, 597, 0,
	589, 590, 591, 665, 592, 666, 0, 593, 594, 595,
	596, 0, 598, 599, 0, 0, 600, 601, 602, 604,
	605, 603, 606, 0, 607, 0, 0, 608, 609, 610,
	667, 668, 669, 0, 612, 611, 613, 670, 0, 614,
	0, 0, 0, 0, 615, 616, 671, 617, 618, 619,
	1757, 1758, 0, 1790, 1791, 1792, 1801, 1802, 1803, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1794, 1788, 0, 0, 0, 0, 0, 0,
	1760, 0, 0, 0, 0, 0, 0, 0, 0, 1807,
	0, 1757, 1758, 0, 1790, 1791, 1792, 1801, 1802, 1803,
	0, 0, 0, 0, 0, 0, 1813, 0, 0, 0,
	0, 0, 0, 1794, 1788, 1759, 0, 0, 0, 0,
	0, 1760, 0, 0, 0, 1779, 0, 0, 0, 0,
	1807, 0, 0, 0, 1776, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1813, 0, 0,
	0, 0, 0, 0, 0, 0, 1759, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1779, 0, 0, 0,
	0, 0, 0, 0, 0, 1776, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1782,
	1783, 1784, 1785, 0, 0, 0, 0, 0, 0, 1765,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1782, 1783, 1784, 1785, 0, 0, 1798, 0, 0, 1808,
	1765, 0, 0, 0, 0, 0, 1787, 1789, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1804, 0, 1805, 0, 0, 0, 0,
	0, 0, 1774, 1775, 0, 0, 0, 1798, 0, 0,
	1808, 0, 0, 0, 0, 0, 0, 1787, 1789, 0,
	1796, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1804, 1780, 1805, 0, 0, 0,
	0, 0, 0, 1774, 1775, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1796, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1780, 0, 1806, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1795, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1810, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1806,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1795, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1810, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1786,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1781, 1757, 1758, 0, 1790, 1791, 1792, 1801, 1802, 1803,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1786, 0, 0, 1794, 1788, 0, 0, 1799, 0, 0,
	0, 1760, 0, 0, 0, 0, 0, 0, 0, 0,
	1807, 1781, 1757, 1758, 0, 1790, 1791, 1792, 1801, 1802,
	1803, 0, 0, 0, 0, 0, 0, 1813, 1812, 0,
	0, 0, 0, 0, 1794, 1788, 1759, 0, 1799, 0,
	0, 0, 1760, 0, 0, 0, 1779, 0, 0, 0,
	0, 1807, 0, 0, 0, 1776, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1813, 1812,
	0, 0, 0, 0, 0, 0, 0, 1759, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1779, 0, 0,
	0, 0, 0, 0, 0, 0, 1776, 0, 0, 0,
	1797, 0, 0, 0, 0, 1771, 1772, 1778, 1800, 1777,
	1773, 0, 1770, 1768, 1769, 1761, 1762, 1763, 1764, 1766,
	1767, 0, 0, 0, 0, 4516, 0, 0, 0, 0,
	1782, 1783, 1784, 1785, 0, 0, 0, 0, 0, 0,
	1765, 1797, 0, 0, 0, 0, 1771, 1772, 1778, 1800,
	1777, 1773, 0, 1770, 1768, 1769, 1761, 1762, 1763, 1764,
	1766, 1767, 0, 0, 0, 0, 4512, 0, 0, 0,
	0, 1782, 1783, 1784, 1785, 0, 0, 1798, 0, 0,
	1808, 1765, 0, 0, 0, 0, 0, 1787, 1789, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1804, 0, 1805, 0, 0, 0,
	0, 0, 0, 1774, 1775, 0, 0, 0, 1798, 0,
	0, 1808, 0, 0, 0, 0, 0, 0, 1787, 1789,
	0, 1796, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1804, 1780, 1805, 0, 0,
	0, 0, 0, 0, 1774, 1775, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1796, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1780, 0, 1806,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1795, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1810, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1806, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1795, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1810,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1786, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1781, 1757, 1758, 0, 1790, 1791, 1792, 1801, 1802,
	1803, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1786, 0, 0, 1794, 1788, 0, 0, 1799, 0,
	0, 0, 1760, 0, 0, 0, 0, 0, 0, 0,
	0, 1807, 1781, 1757, 1758, 0, 1790, 1791, 1792, 1801,
	1802, 1803, 0, 0, 0, 0, 0, 0, 1813, 1812,
	0, 0, 0, 0, 0, 1794, 1788, 1759, 0, 1799,
	0, 0, 0, 1760, 0, 0, 0, 1779, 0, 0,
	0, 0, 1807, 0, 0, 0, 1776, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1813,
	1812, 0, 0, 0, 0, 0, 0, 0, 1759, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1779, 0,
	0, 0, 0, 0, 0, 0, 0, 1776, 0, 0,
	0, 1797, 0, 0, 0, 0, 1771, 1772, 1778, 1800,
	1777, 1773, 0, 1770, 1768, 1769, 1761, 1762, 1763, 1764,
	1766, 1767, 0, 0, 0, 0, 4433, 0, 0, 0,
	0, 1782, 1783, 1784, 1785, 0, 0, 0, 0, 0,
	0, 1765, 1797, 0, 0, 0, 0, 1771, 1772, 1778,
	1800, 1777, 1773, 0, 1770, 1768, 1769, 1761, 1762, 1763,
	1764, 1766, 1767, 0, 0, 0, 0, 4396, 0, 0,
	0, 0, 1782, 1783, 1784, 1785, 0, 0, 1798, 0,
	0, 1808, 1765, 0, 0, 0, 0, 0, 1787, 1789,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1804, 0, 1805, 0, 0,
	0, 0, 0, 0, 1774, 1775, 0, 0, 0, 1798,
	0, 0, 1808, 0, 0, 0, 0, 0, 0, 1787,
	1789, 0, 1796, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1804, 1780, 1805, 0,
	0, 0, 0, 0, 0, 1774, 1775, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1796, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1780, 0,
	1806, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1795, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1810,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1806, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1795,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1810, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1786, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1781, 1757, 1758, 0, 1790, 1791, 1792, 1801,
	1802, 1803, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1786, 0, 0, 1794, 1788, 0, 0, 1799,
	0, 0, 0, 1760, 0, 0, 0, 0, 0, 0,
	0, 0, 1807, 1781, 1757, 1758, 0, 1790, 1791, 1792,
	1801, 1802, 1803, 0, 0, 0, 0, 0, 0, 1813,
	1812, 0, 0, 0, 0, 0, 1794, 1788, 1759, 0,
	1799, 0, 0, 0, 1760, 0, 0, 0, 1779, 0,
	0, 0, 0, 1807, 0, 0, 0, 1776, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1813, 1812, 0, 0, 0, 0, 0, 0, 0, 1759,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1779,
	0, 0, 0, 0, 0, 0, 0, 0, 1776, 0,
	0, 0, 1797, 0, 0, 0, 0, 1771, 1772, 1778,
	1800, 1777, 1773, 0, 1770, 1768, 1769, 1761, 1762, 1763,
	1764, 1766, 1767, 0, 0, 0, 0, 4395, 0, 0,
	0, 0, 1782, 1783, 1784, 1785, 0, 0, 0, 0,
	0, 0, 1765, 1797, 0, 0, 0, 0, 1771, 1772,
	1778, 1800, 1777, 1773, 0, 1770, 1768, 1769, 1761, 1762,
	1763, 1764, 1766, 1767, 0, 0, 0, 0, 4221, 0,
	0, 0, 0, 1782, 1783, 1784, 1785, 0, 0, 1798,
	0, 0, 1808, 1765, 0, 0, 0, 0, 0, 1787,
	1789, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1804, 0, 1805, 0,
	0, 0, 0, 0, 0, 1774, 1775, 0, 0, 0,
	1798, 0, 0, 1808, 0, 0, 0, 0, 0, 0,
	1787, 1789, 0, 1796, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1804, 1780, 1805,
	0, 0, 0, 0, 0, 0, 1774, 1775, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1796, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1780,
	0, 1806, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1795,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1810, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1806, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1795, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1810, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1786, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1781, 1757, 1758, 0, 1790, 1791, 1792,
	1801, 1802, 1803, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1786, 0, 0, 1794, 1788, 0, 0,
	1799, 0, 0, 0, 1760, 0, 0, 0, 0, 0,
	0, 0, 0, 1807, 1781, 1757, 1758, 0, 1790, 1791,
	1792, 1801, 1802, 1803, 0, 0, 0, 0, 0, 0,
	1813, 1812, 0, 0, 0, 0, 0, 1794, 1788, 1759,
	0, 1799, 0, 0, 0, 1760, 0, 0, 0, 1779,
	0, 0, 0, 0, 1807, 0, 0, 0, 1776, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1813, 1812, 0, 0, 0, 0, 0, 0, 0,
	1759, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1779, 0, 0, 0, 0, 0, 0, 0, 0, 1776,
	0, 0, 0, 1797, 0, 0, 0, 0, 1771, 1772,
	1778, 1800, 1777, 1773, 0, 1770, 1768, 1769, 1761, 1762,
	1763, 1764, 1766, 1767, 0, 0, 0, 0, 4062, 0,
	0, 0, 0, 1782, 1783, 1784, 1785, 0, 0, 0,
	0, 0, 0, 1765, 1797, 0, 0, 0, 0, 1771,
	1772, 1778, 1800, 1777, 1773, 0, 1770, 1768, 1769, 1761,
	1762, 1763, 1764, 1766, 1767, 0, 0, 0, 0, 3996,
	0, 0, 0, 0, 1782, 1783, 1784, 1785, 0, 0,
	1798, 0, 0, 1808, 1765, 0, 0, 0, 0, 0,
	1787, 1789, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1804, 0, 1805,
	0, 0, 0, 0, 0, 0, 1774, 1775, 0, 0,
	0, 1798, 0, 0, 1808, 0, 0, 0, 0, 0,
	0, 1787, 1789, 0, 1796, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1804, 1780,
	1805, 0, 0, 0, 0, 0, 0, 1774, 1775, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1796, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1780, 0, 1806, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1795, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1810, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1806, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1795, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1810, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1786, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1781, 1757, 1758, 0, 1790, 1791,
	1792, 1801, 1802, 1803, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1786, 0, 0, 1794, 1788, 0,
	0, 1799, 0, 0, 0, 1760, 0, 0, 0, 0,
	0, 0, 0, 0, 1807, 1781, 1757, 1758, 0, 1790,
	1791, 1792, 1801, 1802, 1803, 0, 0, 0, 0, 0,
	0, 1813, 1812, 0, 0, 0, 0, 0, 1794, 1788,
	1759, 0, 1799, 0, 0, 0, 1760, 0, 0, 0,
	1779, 0, 0, 0, 0, 1807, 0, 0, 0, 1776,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1813, 1812, 0, 0, 0, 0, 0, 0,
	0, 1759, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1779, 0, 0, 0, 0, 0, 0, 0, 0,
	1776, 0, 0, 0, 1797, 0, 0, 0, 0, 1771,
	1772, 1778, 1800, 1777, 1773, 0, 1770, 1768, 1769, 1761,
	1762, 1763, 1764, 1766, 1767, 0, 0, 0, 0, 3995,
	0, 0, 0, 0, 1782, 1783, 1784, 1785, 0, 0,
	0, 0, 0, 0, 1765, 1797, 0, 0, 0, 0,
	1771, 1772, 1778, 1800, 1777, 1773, 0, 1770, 1768, 1769,
	1761, 1762, 1763, 1764, 1766, 1767, 0, 0, 0, 0,
	3994, 0, 0, 0, 0, 1782, 1783, 1784, 1785, 0,
	0, 1798, 0, 0, 1808, 1765, 0, 0, 0, 0,
	0, 1787, 1789, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1804, 0,
	1805, 0, 0, 0, 0, 0, 0, 1774, 1775, 0,
	0, 0, 1798, 0, 0, 1808, 0, 0, 0, 0,
	0, 0, 1787, 1789, 0, 1796, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1804,
	1780, 1805, 0, 0, 0, 0, 0, 0, 1774, 1775,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1796, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1780, 0, 1806, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1795, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1810, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1806, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1795, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1810, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1786, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1781, 1757, 1758, 0, 1790,
	1791, 1792, 1801, 1802, 1803, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1786, 0, 0, 1794, 1788,
	0, 0, 1799, 0, 0, 0, 1760, 0, 0, 0,
	0, 0, 0, 0, 0, 1807, 1781, 1757, 1758, 0,
	1790, 1791, 1792, 1801, 1802, 1803, 0, 0, 0, 0,
	0, 0, 1813, 1812, 0, 0, 0, 0, 0, 1794,
	1788, 1759, 0, 1799, 0, 0, 0, 1760, 0, 0,
	0, 1779, 0, 0, 0, 0, 1807, 0, 0, 0,
	1776, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1813, 1812, 0, 0, 0, 0, 0,
	0, 0, 1759, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1779, 0, 0, 0, 0, 0, 0, 0,
	0, 1776, 0, 0, 0, 1797, 0, 0, 0, 0,
	1771, 1772, 1778, 1800, 1777, 1773, 0, 1770, 1768, 1769,
	1761, 1762, 1763, 1764, 1766, 1767, 0, 0, 0, 0,
	3662, 0, 0, 0, 0, 1782, 1783, 1784, 1785, 0,
	0, 0, 0, 0, 0, 1765, 1797, 0, 0, 0,
	0, 1771, 1772, 1778, 1800, 1777, 1773, 0, 1770, 1768,
	1769, 1761, 1762, 1763, 1764, 1766, 1767, 0, 0, 0,
	0, 3180, 0, 0, 0, 0, 1782, 1783, 1784, 1785,
	0, 0, 1798, 0, 0, 1808, 1765, 0, 0, 0,
	0, 0, 1787, 1789, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1804,
	0, 1805, 0, 0, 0, 0, 0, 0, 1774, 1775,
	0, 0, 0, 1798, 0, 0, 1808, 0, 0, 0,
	0, 0, 0, 1787, 1789, 0, 1796, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1804, 1780, 1805, 0, 0, 0, 0, 0, 0, 1774,
	1775, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1796, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1780, 0, 1806, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1795, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1810, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1806, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1795, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1810, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1786, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1781, 1757, 1758, 0,
	1790, 1791, 1792, 1801, 1802, 1803, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1786, 0, 0, 1794,
	1788, 0, 0, 1799, 0, 0, 0, 1760, 0, 0,
	0, 0, 0, 0, 0, 0, 1807, 1781, 1757, 1758,
	0, 1790, 1791, 1792, 1801, 1802, 1803, 0, 0, 0,
	0, 0, 0, 1813, 1812, 0, 0, 0, 0, 0,
	1794, 1788, 1759, 0, 1799, 0, 0, 0, 1760, 0,
	0, 0, 1779, 0, 0, 0, 0, 1807, 0, 0,
	0, 1776, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1813, 1812, 0, 0, 0, 0,
	0, 0, 0, 1759, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1779, 0, 0, 0, 0, 0, 0,
	0, 0, 1776, 0, 0, 0, 1797, 0, 0, 0,
	0, 1771, 1772, 1778, 1800, 1777, 1773, 0, 1770, 1768,
	1769, 1761, 1762, 1763, 1764, 1766, 1767, 0, 0, 0,
	0, 3179, 0, 0, 0, 0, 1782, 1783, 1784, 1785,
	0, 0, 0, 0, 0, 0, 1765, 1797, 0, 0,
	0, 0, 1771, 1772, 1778, 1800, 1777, 1773, 0, 1770,
	1768, 1769, 1761, 1762, 1763, 1764, 1766, 1767, 0, 0,
	0, 0, 3178, 0, 0, 0, 0, 1782, 1783, 1784,
	1785, 0, 0, 1798, 0, 0, 1808, 1765, 0, 0,
	0, 0, 0, 1787, 1789, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1804, 0, 1805, 0, 0, 0, 0, 0, 0, 1774,
	1775, 0, 0, 0, 1798, 0, 0, 1808, 0, 0,
	0, 0, 0, 0, 1787, 1789, 0, 1796, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1804, 1780, 1805, 0, 0, 0, 0, 0, 0,
	1774, 1775, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1796, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1780, 0, 1806, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1795, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1810, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1806, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1795, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1810, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1786, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1781, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1786, 0, 0,
	0, 0, 0, 0, 1799, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1757, 1758, 1781, 1790,
	1791, 1792, 1801, 1802, 1803, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1812, 0, 0, 1794, 1788,
	0, 0, 0, 0, 0, 1799, 1760, 0, 0, 0,
	0, 0, 0, 0, 0, 1807, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1813, 0, 0, 0, 1812, 0, 0, 0,
	0, 1759, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1779, 0, 0, 0, 0, 0, 0, 0, 0,
	1776, 0, 0, 0, 0, 0, 0, 1797, 0, 0,
	0, 0, 1771, 1772, 1778, 1800, 1777, 1773, 0, 1770,
	1768, 1769, 1761, 1762, 1763, 1764, 1766, 1767, 0, 0,
	0, 0, 3177, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1797, 0,
	0, 0, 0, 1771, 1772, 1778, 1800, 1777, 1773, 0,
	1770, 1768, 1769, 1761, 1762, 1763, 1764, 1766, 1767, 0,
	0, 3142, 0, 0, 0, 1782, 1783, 1784, 1785, 0,
	0, 0, 0, 0, 0, 1765, 4653, 0, 0, 1757,
	1758, 0, 1790, 1791, 1792, 1801, 1802, 1803, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1794, 1788, 0, 0, 0, 0, 0, 0, 1760,
	0, 0, 1798, 0, 0, 1808, 0, 0, 1807, 0,
	0, 0, 1787, 1789, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1813, 0, 0, 0, 1804,
	0, 1805, 0, 0, 1759, 0, 0, 0, 1774, 1775,
	0, 0, 0, 0, 1779, 0, 0, 0, 0, 0,
	0, 0, 0, 1776, 0, 0, 1796, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1780, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1757, 1758, 0,
	1790, 1791, 1792, 1801, 1802, 1803, 0, 0, 0, 0,
	0, 0, 0, 0, 1806, 0, 0, 0, 0, 1794,
	1788, 0, 0, 0, 0, 3113, 0, 1760, 1782, 1783,
	1784, 1785, 1795, 0, 0, 0, 1807, 0, 1765, 0,
	3242, 0, 0, 1810, 3241, 0, 0, 0, 0, 0,
	0, 0, 0, 1813, 0, 0, 0, 0, 0, 0,
	0, 0, 1759, 0, 4652, 0, 0, 0, 0, 0,
	0, 0, 1779, 0, 0, 1798, 0, 0, 1808, 0,
	0, 1776, 0, 0, 0, 1787, 1789, 0, 0, 0,
	0, 0, 0, 0, 0, 1786, 0, 0, 0, 0,
	0, 0, 1804, 0, 1805, 0, 0, 0, 0, 0,
	0, 1774, 1775, 0, 0, 0, 1781, 0, 0, 0,
	3114, 0, 0, 0, 0, 0, 0, 0, 0, 1796,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1799, 1780, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1782, 1783, 1784, 1785,
	0, 0, 0, 0, 0, 0, 1765, 0, 0, 0,
	0, 0, 0, 0, 1812, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1806, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1798, 0, 1795, 1808, 0, 0, 0,
	0, 0, 0, 1787, 1789, 0, 1810, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1804, 0, 1805, 0, 0, 0, 0, 0, 0, 1774,
	1775, 0, 0, 0, 0, 0, 1797, 0, 0, 0,
	0, 1771, 1772, 1778, 1800, 1777, 1773, 1796, 1770, 1768,
	1769, 1761, 1762, 1763, 1764, 1766, 1767, 0, 1786, 0,
	0, 0, 1780, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1781,
	0, 2675, 0, 0, 0, 0, 0, 0, 1757, 1758,
	0, 1790, 1791, 1792, 1801, 1802, 1803, 0, 0, 0,
	0, 0, 0, 0, 0, 1806, 1799, 0, 0, 0,
	1794, 1788, 0, 0, 0, 2674, 0, 0, 1760, 0,
	0, 0, 0, 1795, 0, 0, 0, 1807, 0, 0,
	0, 0, 0, 0, 1810, 0, 0, 1812, 0, 0,
	0, 0, 0, 0, 1813, 0, 0, 0, 0, 0,
	0, 0, 0, 1759, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1779, 0, 0, 0, 0, 0, 0,
	0, 0, 1776, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1786, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1781, 0, 1797,
	0, 0, 0, 0, 1771, 1772, 1778, 1800, 1777, 1773,
	0, 1770, 1768, 1769, 1761, 1762, 1763, 1764, 1766, 1767,
	0, 0, 0, 0, 1799, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1782, 1783, 1784,
	1785, 0, 0, 0, 0, 0, 0, 1765, 0, 0,
	0, 0, 0, 0, 0, 1812, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1798, 0, 0, 1808, 0, 0,
	0, 0, 0, 0, 1787, 1789, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1804, 0, 1805, 0, 0, 0, 0, 0, 0,
	1774, 1775, 0, 0, 0, 0, 0, 1797, 0, 0,
	0, 0, 1771, 1772, 1778, 1800, 1777, 1773, 1796, 1770,
	1768, 1769, 1761, 1762, 1763, 1764, 1766, 1767, 0, 0,
	0, 1757, 1758, 1780, 1790, 1791, 1792, 1801, 1802, 1803,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1794, 1788, 0, 0, 0, 0, 0,
	0, 1760, 0, 0, 0, 0, 0, 0, 0, 0,
	1807, 0, 0, 0, 0, 0, 1806, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1813, 0, 0,
	0, 0, 0, 0, 1795, 0, 1759, 0, 0, 0,
	0, 0, 0, 0, 0, 1810, 1779, 0, 0, 0,
	0, 0, 0, 0, 0, 1776, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1757, 1758,
	0, 1790, 1791, 1792, 1801, 1802, 1803, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1786, 0, 0,
	1794, 1788, 0, 0, 0, 0, 0, 0, 1760, 0,
	0, 0, 0, 0, 0, 0, 0, 1807, 1781, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1782, 1783, 1784, 1785, 1813, 0, 0, 0, 0, 0,
	1765, 0, 0, 1759, 0, 1799, 0, 0, 0, 0,
	0, 0, 0, 1779, 0, 0, 0, 0, 0, 0,
	0, 0, 1776, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1812, 1798, 0, 0,
	1808, 0, 0, 0, 0, 0, 0, 1787, 1789, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1804, 0, 1805, 0, 0, 0,
	0, 0, 0, 1774, 1775, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1796, 0, 0, 0, 0, 0, 1782, 1783, 1784,
	1785, 0, 0, 0, 0, 0, 1780, 1765, 1797, 0,
	0, 0, 0, 1771, 1772, 1778, 1800, 1777, 1773, 0,
	1770, 1768, 1769, 1761, 1762, 1763, 1764, 1766, 1767, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1798, 0, 0, 1808, 0, 1806,
	0, 0, 0, 0, 1787, 1789, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1795, 1046, 0,
	0, 1804, 0, 1805, 0, 0, 0, 0, 1810, 0,
	1774, 1775, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1796, 0,
	0, 0, 1757, 1758, 0, 1790, 1791, 1792, 1801, 1802,
	1803, 0, 0, 1780, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1794, 1788, 0, 0, 0, 0,
	1786, 0, 1760, 0, 0, 0, 0, 0, 0, 0,
	0, 1807, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1781, 0, 0, 0, 0, 1806, 0, 1813, 0,
	0, 0, 0, 0, 0, 0, 0, 1759, 0, 0,
	0, 0, 0, 0, 1795, 0, 0, 1779, 1799, 0,
	0, 0, 0, 0, 0, 1810, 1776, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1812,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1786, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1781, 0,
	0, 1782, 1783, 1784, 1785, 0, 0, 0, 0, 0,
	0, 1765, 0, 0, 0, 0, 0, 3248, 0, 0,
	0, 1797, 0, 0, 0, 1799, 1771, 1772, 1778, 1800,
	1777, 1773, 0, 1770, 1768, 1769, 1761, 1762, 1763, 1764,
	1766, 1767, 0, 0, 0, 0, 0, 0, 1798, 0,
	0, 1808, 0, 0, 0, 0, 1812, 0, 1787, 1789,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3643,
	0, 0, 0, 0, 0, 1804, 0, 1805, 0, 0,
	0, 0, 0, 0, 1774, 1775, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1796, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1780, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1797, 0,
	0, 0, 0, 1771, 1772, 1778, 1800, 1777, 1773, 0,
	1770, 1768, 1769, 1761, 1762, 1763, 1764, 1766, 1767, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1806, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1795, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1810,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1757, 1758, 0,
	1790, 1791, 1792, 1801, 1802, 1803, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1794,
	1788, 0, 0, 0, 3243, 0, 0, 1760, 0, 0,
	0, 1786, 0, 0, 0, 0, 1807, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1781, 1813, 0, 0, 0, 0, 0, 0,
	0, 0, 1759, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1779, 0, 0, 0, 0, 0, 0, 1799,
	0, 1776, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1812, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1782, 1783, 1784, 1785,
	0, 0, 0, 0, 0, 0, 1765, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1797, 0, 0, 0, 0, 1771, 1772, 1778,
	1800, 1777, 1773, 0, 1770, 1768, 1769, 1761, 1762, 1763,
	1764, 1766, 1767, 1798, 0, 0, 1808, 0, 0, 0,
	0, 0, 0, 1787, 1789, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1804, 0, 1805, 0, 0, 0, 0, 0, 0, 1774,
	1775, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1796, 0, 0,
	0, 1757, 1758, 0, 1790, 1791, 1792, 1801, 1802, 1803,
	0, 0, 1780, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1794, 1788, 0, 0, 0, 0, 0,
	0, 1760, 0, 0, 0, 0, 0, 0, 0, 0,
	1807, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1806, 0, 1813, 0, 0,
	0, 0, 0, 0, 0, 0, 1759, 0, 0, 0,
	0, 0, 0, 1795, 0, 0, 1779, 0, 0, 0,
	0, 0, 0, 0, 1810, 1776, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1757, 1758,
	0, 1790, 1791, 1792, 1801, 1802, 1803, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1794, 1788, 0, 0, 0, 3181, 1786, 0, 1760, 0,
	0, 0, 0, 0, 0, 0, 0, 1807, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1781, 0, 0,
	1782, 1783, 1784, 1785, 1813, 0, 0, 0, 0, 0,
	1765, 0, 0, 1759, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1779, 1799, 0, 0, 0, 0, 0,
	0, 0, 1776, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1798, 0, 0,
	1808, 0, 0, 0, 0, 1812, 0, 1787, 1789, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1804, 0, 1805, 0, 0, 0,
	0, 0, 0, 1774, 1775, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1796, 0, 0, 0, 0, 0, 1782, 1783, 1784,
	1785, 0, 0, 0, 0, 0, 1780, 1765, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1797, 0, 0,
	0, 0, 1771, 1772, 1778, 1800, 1777, 1773, 0, 1770,
	1768, 1769, 1761, 1762, 1763, 1764, 1766, 1767, 0, 0,
	0, 0, 0, 0, 1798, 0, 0, 1808, 0, 1806,
	0, 0, 0, 0, 1787, 1789, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1795, 0, 0,
	0, 1804, 0, 1805, 0, 0, 0, 0, 1810, 0,
	1774, 1775, 0, 0, 0, 0, 0, 3208, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1796, 0,
	0, 0, 1757, 1758, 0, 1790, 1791, 1792, 1801, 1802,
	1803, 0, 0, 1780, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1794, 1788, 0, 0, 0, 0,
	1786, 0, 1760, 0, 0, 0, 0, 0, 0, 0,
	0, 1807, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1781, 0, 0, 0, 0, 1806, 0, 1813, 0,
	0, 0, 0, 0, 0, 0, 0, 1759, 0, 0,
	0, 0, 0, 0, 1795, 0, 0, 1779, 1799, 0,
	0, 0, 0, 0, 0, 1810, 1776, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1812,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1786, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1781, 0,
	0, 1782, 1783, 1784, 1785, 0, 0, 0, 0, 0,
	0, 1765, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1797, 0, 0, 0, 1799, 1771, 1772, 1778, 1800,
	1777, 1773, 0, 1770, 1768, 1769, 1761, 1762, 1763, 1764,
	1766, 1767, 0, 0, 0, 0, 0, 0, 1798, 0,
	0, 1808, 0, 0, 0, 0, 1812, 0, 1787, 1789,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1804, 0, 1805, 0, 0,
	0, 0, 0, 0, 1774, 1775, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1796, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1780, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1797, 0,
	0, 0, 0, 1771, 1772, 1778, 1800, 1777, 1773, 0,
	1770, 1768, 1769, 1761, 1762, 1763, 1764, 1766, 1767, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1806, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1795, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1810,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1786, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1781, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1799,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1812, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1797, 0, 0, 0, 0, 1771, 1772, 1778,
	1800, 1777, 1773, 0, 1770, 1768, 1769, 1761, 1762, 1763,
	1764, 1766, 1767,
}

var sqlPact = [...]int{
	276, -1000, -1000, -1000, -1000, 247, -1000, -1000, 245, 243,
	241, 216, 215, 214, 213, 212, 210, 209, 208, -1000,
	-1000, -1000, -1000, -1000, -1000, 207, -1000, -1000, 201, -1000,
	199, 198, 197, -1000, -1000, 195, -1000, 184, -1000, -1000,
	-1000, -1000, 182, 181, 176, 91765, 91218, 92305, 2275, 112439,
	98813, 2125, 82494, 111892, 81947, 111345, 2186, 14657, 110798, 2693,
	169, -1000, 110251, 165, 164, 162, -1000, 109704, -1000, 1917,
	-1000, 159, -1000, 6758, 68222, 156, 155, 154, 2216, 152,
	-1000, 149, 148, -1000, -1000, 144, -1000, 9267, 1515, -1000,
	143, 142, -1000, 322, 96632, 141, 139, 2345, 138, 137,
	66595, 136, 135, 2316, 2802, -1000, -1000, 2092, -1000, -1000,
	133, 131, 130, 128, 126, 125, 123, 118, 116, 114,
	110, -1000, 109, 108, 106, 96, 95, -1000, 92, 91,
	89, -1000, 82, -1000, 80, 79, 76, 75, 74, 73,
	72, 71, 70, 65, 63, 58, 57, 55, 13029, -1000,
	-1000, 1940, 1689, 1679, 1677, 1674, 1668, 992, 54, 53,
	51, 50, 49, 48, 44, 43, 42, 41, 40, 39,
	38, 37, 36, 34, 33, 174, 32, 31, 27, 26,
	25, 24, 23, 2247, -1000, 1508, 1158, 31413, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 119459, 112979, 22, -162, 21, -1000,
	3233, 1054, 55074, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 306, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 517, 2056, 789, -1000, -1000, -1000,
	109164, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2274,
	-28, -1000, 2063, -1000, -1000, -1000, -1000, -1000, 788, -1000,
	2273, 222, 2236, -1000, -1000, -1000, 3308, 2394, 3730, 3729,
	3728, 3726, 3723, 118919, 1824, 3722, 2454, 3721, 3718, 3717,
	3716, 3714, 3713, 3711, -1000, 90671, 1051, 90124, 89577, 3335,
	108624, 89030, 108077, 75941, 47139, 1123, 3307, -1000, -1000, -1000,
	-1000, -1000, -1000, 112979, -1000, 1050, -1000, -1000, 3710, 3708,
	2070, 785, 98266, -1000, 1875, -1000, 912, 33135, -1000, 1306,
	-1000, 33135, 305, -1000, -1000, -1000, -1000, -1000, -1000, 3707,
	3706, 3705, 3704, 3703, -1000, -1000, 81400, 24473, 80853, 80306,
	107530, 23914, 88483, 87936, 3702, 3701, 3698, 3697, 106983, 75382,
	1048, 1492, -1000, -1000, -1000, -1000, -1000, -1000, 0, 73146,
	3496, 112979, -1000, 304, -1000, -1000, -1000, -1000, -1000, -1000,
	46553, 1120, 45967, 645, 45381, 316, -1000, -1000, -1000, -1000,
	74823, -1000, 106436, 2388, 3695, 3694, 1153, 3692, 3211, 1804,
	3691, 1910, 1292, 3690, 3689, 3685, 3684, 3683, 3675, 3674,
	1520, 105889, 2879, 1563, 105342, 1705, 74264, 1044, 87389, 92305,
	2559, 104795, 1412, 1411, -1000, -1000, -1000, -1000, 2968, 2799,
	2783, 1367, -1000, -1000, -1000, -1000, 58364, 7860, 6561, -1000,
	-1000, 14053, 104248, 61149, 92305, 92305, -1000, -1000, -1000, -1000,
	-1000, 44795, 863, 44209, 1119, -1000, -1000, 58921, 2840, -1000,
	-1000, -1000, -1000, 43623, 743, 43037, 1086, 112979, -1000, 2878,
	1918, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 2318, 1634, 3501,
	2633, 73705, 2054, 1437, 3272, 2967, 2956, 1525, 2952, 3672,
	2587, 2944, 2931, 2930, 2925, 2919, 1557, 2513, 720, 2511,
	30827, 2866, 1710, 42451, 1583, 1489, 2912, 2908, 3517, 2013,
	2039, 2040, 79759, 3665, 3661, 3242, 2904, 2897, 2679, 2885,
	-1000, 2826, 1519, -1000, -1000, -1000, -1000, 1455, -1000, -1000,
	-1000, -1000, 83034, -1000, -1000, 1495, -1000, -1000, 1495, -1000,
	-1000, -1000, -1000, -1000, 1375, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1508, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 2065, -1000, 2064,
	-1000, -1000, 2449, 3179, 3179, 3179, 3305, 498, 480, -1000,
	174, -1000, -1000, 126201, -1000, -1000, 47713, 47713, 47713, 47713,
	47713, 47713, 47713, 47713, 2190, -1000, 783, -1000, -1000, 815,
	-1000, 781, 691, 634, -1000, -1000, -1000, -1000, -1000, -1000,
	778, -1000, -1000, -1000, -1000, -1000, -1000, 3496, -1000, 27323,
	-1000, -1000, -1000, 320, 774, 47713, -1000, -1000, 3541, 3540,
	924, -1000, 300, 965, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2876, 772, 771, -1000,
	766, 762, 752, 751, 750, -1000, -1000, -1000, 749, 746,
	742, 735, 730, 729, 727, 724, -1000, 2101, -1000, -1000,
	-1000, -1000, -1000, -1000, 662, 661, 661, 661, -1000, 1033,
	-1000, -1000, -1000, 363, 660, 343, 657, 656, 654, -1000,
	719, 715, 713, 710, 708, 707, 706, 701, 696, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1026, -1000, -1000, -1000,
	-1000, -3, 112979, -1000, 517, -3, -1000, -1000, 694, -1000,
	35443, 35443, 35443, -1000, -1000, 2271, 47713, -1000, 2506, -1000,
	6, 6, 891, 56709, -1000, 53959, 891, 327, 828, 62786,
	-1000, 2823, -1000, -1000, 693, 296, -1000, -1000, -1000, -1000,
	25030, 2821, 112979, 112979, 92305, 92305, 92305, 3660, 3071, 47713,
	-1000, -1000, 67675, 112979, 92845, -1000, -1000, 3431, 68762, 67135,
	112979, 2873, 70945, 3656, -1000, -1000, -1000, -1000, -1000, 3045,
	3654, 3653, 3652, -1000, 112979, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 226, 3040, -1000, -1000, 96085, 226, 3037, -1000,
	226, 3033, -1000, 95545, -1000, -1000, 2276, 3028, -1000, -1000,
	236, 3027, -1000, -1000, -1000, 230, 3026, -1000, -1000, 291,
	-75, 3024, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 126201, -1000, -1000, -1000, 70398, -1000,
	3245, -1000, -1000, 112979, -1000, 47713, -1000, 3430, 1842, 77045,
	3357, -19, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2437,
	2463, 1145, 2294, -1000, 3121, 1921, -1000, 33135, 3199, -1000,
	-1000, -1000, 290, 25030, -1000, -1000, -1000, -1000, -1000, -1000,
	4847, 3023, 1496, -1000, 2293, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2080, 3022, -1000, 1963, 3018, 1984, -1000,
	-1000, 2992, -1000, 3239, -1000, -1000, 1879, 3017, 7, -1000,
	-1000, 2250, -1000, -1000, -1000, -1000, -1000, 1993, -1000, 999,
	3016, -1000, 86842, 60592, 58921, 73146, -14, -1000, -1000, -1000,
	-1000, -181, -1000, 23355, 126201, -1000, -1000, -1000, -1000, 1854,
	126201, 933, -1000, -1000, 3014, -1000, 126201, 932, -1000, -1000,
	3013, -1000, 2871, -1000, -1000, 2351, -1000, -1000, 3651, -1000,
	-1000, 3649, -1000, 3648, 3646, 3643, -1000, 1747, 2033, 3640,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 86302, 2268,
	-1000, -1000, 85208, 2869, -1000, 2349, 3355, -1000, 85755, 1042,
	-1000, 999, 2343, -1000, 95005, 1036, 2342, -1000, 3637, 3322,
	2590, 999, 2341, -1000, -1000, -1000, -1000, -1000, 1041, -1000,
	64418, -1000, 64418, -1000, 1635, -1000, 118379, 6, 92305, 3496,
	-1000, -29, -1000, -1000, -1000, 1054, -1000, 57817, -1000, 57817,
	97719, 76498, 974, 773, 66048, 126201, -1000, -1000, -1000, -1000,
	126201, -1000, -1000, -1000, -245, 2628, -1000, 76498, 60035, 126201,
	-1000, -1000, -1000, -1000, 126201, -1000, -1000, -1000, 76498, 85208,
	-1000, 103701, 84668, -1000, -1000, 1517, 2489, -1000, -1000, -1000,
	76498, 1294, 76498, 76498, 76498, -1000, 103154, -1000, -1000, 2094,
	1436, 3244, 2060, 92305, -1000, 1794, -1000, -1000, -1000, 3261,
	112979, -1000, -1000, 2867, -1000, 69851, 94465, -1000, 93925, -1000,
	93385, -1000, 92305, -1000, 92305, -1000, 3636, 3633, 3632, -1000,
	-1000, 3629, -1000, 3625, 3254, -1000, 908, 41865, 126201, 3250,
	-1000, 3621, 3347, 2866, 126201, -1000, 2983, 1709, 1694, 112979,
	-1000, -1000, 112979, -1000, 112979, -1000, -1000, -1000, 1587, -1000,
	-1000, 2436, -1000, -1000, -1000, -1000, 92305, 92305, 92305, 92305,
	1428, -1000, -1000, -1000, 2892, 3616, 1687, -1000, 1790, -1000,
	2816, 3246, -1000, 1506, 1777, -1000, -1000, 238, -1000, -1000,
	-19, -1000, 117839, -1000, 2449, -1000, 112979, -1000, 2456, 2851,
	2865, 1647, 2281, 2541, -1000, 41279, 2516, 51157, 2291, 174,
	-1000, -1000, 174, 174, 32561, -1000, -1000, 68762, 68762, 25030,
	1396, 47713, 47713, 47713, 47713, 47713, 47713, 47713, 47713, 47713,
	47713, 47713, 47713, 47713, 47713, 47713, 47713, 47713, 47713, 47713,
	47713, 47713, 47713, 47713, 47713, 47713, 47713, 47713, 47713, 47713,
	47713, 47713, 47713, 47713, 47713, 47713, 47713, 2206, 47713, 1373,
	47713, 47713, 47713, 47713, 2126, -1000, -1000, 1992, 580, 2081,
	691, -1000, -1000, -1000, 3482, 3482, 3482, 409, 409, 409,
	6289, 6289, 638, 3615, 815, -1000, 47713, -1000, 124, 57256,
	47713, 25589, -1000, 480, 12317, 2514, -1000, 468, 26175, -1000,
	-1000, -1000, 27323, 634, 40693, 47713, 1019, 126201, -1000, -1000,
	1392, 3499, 22797, 2895, 2681, 690, 870, 823, 30241, 29655,
	29069, 28483, 703, 47713, 47713, 47713, 47713, 47713, 47713, 47713,
	47713, -1000, -1000, 3510, -1000, 3499, -1000, -1000, -1000, -1000,
	3499, 1385, 1383, 3499, -1000, 3499, 3499, 5649, 5649, 40119,
	39533, 38947, 51731, 38361, 47713, 27897, 37775, 37189, -1000, 112979,
	-3, 3429, 47713, 203, -1000, 124557, -1000, 203, 203, 687,
	-30, 126201, 2483, 2483, 55619, 2320, 2194, 2194, 2194, -1000,
	891, 18304, 891, 102067, 2207, 891, 891, 275, 303, 467,
	53414, 2506, 102067, 799, 675, 20, 19, 18, -1000, -1000,
	15, 13, -1000, -1000, 92305, 674, 25589, 25030, 269, 2020,
	-31, 2527, 2526, 2524, -1000, 2521, -1000, 1813, -36, 1372,
	92305, 112979, 1420, 3614, -148, -1000, 5971, -46, -1000, 1345,
	263, 3499, -1000, -1000, -1000, -1000, -1000, 3611, 3610, -1000,
	1025, 673, 663, 470, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 662, 661, 661, 661, -1000, 363, 660, 343,
	657, 656, 654, -1000, -1000, -1000, -1000, -1000, 2814, 92305,
	112979, 1419, 3607, -181, 92845, -136, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 112979, -1000, -1000, -1000, 3605, -1000,
	92305, -1000, -1000, 92305, 226, 3010, -1000, 92305, -1000, 92305,
	217, 3008, -1000, -1000, 112979, -1000, 92305, 92305, -1000, 112979,
	112979, 112979, 76498, 76498, 237, -1000, 92305, 913, -47, 1168,
	-19, -1000, -1000, -1000, 1495, -1000, 1782, -1000, -1000, -1000,
	-1000, -1000, -1000, 1526, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 924, -1000, -1000, -1000, -1000, -1000, -1000, 3492,
	3487, -6, -1000, -1000, 25030, -1000, -23, 1639, 1916, 1365,
	-1000, 79212, 2408, 3243, 3604, 2574, 3230, 1626, -1000, 1578,
	-1000, 3323, 83034, 3393, 3405, 1328, -1000, 2805, -1000, -1000,
	909, 1682, 1745, 1364, 1350, 83034, 1963, -1000, 68762, -1000,
	2586, 3303, 1417, 1406, 1417, 1417, 1427, -1000, 83034, 1744,
	1347, 1342, 1334, 1980, 1968, -1000, -1000, 2089, -1000, 1330,
	1329, 850, 1967, -1000, -25, 3387, 3401, 1307, -1000, 2803,
	1321, -1000, -1000, -1000, 3302, 92305, 25030, 1575, 1572, 1574,
	1739, 1320, -11, -1000, 3374, 1246, 1245, -1000, 5231, -1000,
	76498, 1924, 3004, 2621, 886, 2618, -1000, -1000, -1000, 886,
	-14, 73146, 112979, 262, -1000, 124, 47713, 47713, 124, 47713,
	124, 3343, 3003, -1000, -1000, -1000, -1000, -1000, 3603, 2000,
	2453, -1000, -1000, 653, 2340, 2797, 112979, 2535, -15, 92305,
	-1000, 69311, 2999, 71492, 1963, 2335, -1000, -1000, 84121, -1000,
	2994, 517, 2330, -1000, 733, 3602, 2987, -1000, 117299, -1000,
	3245, 1389, 2986, 1108, 1066, 3428, -1000, 1066, 64958, -1000,
	112979, -1000, 6, 5041, 78132, -48, -53, 466, -1000, 102614,
	112979, 1107, 78672, 112979, 3151, 993, 58921, -1000, 58921, -55,
	-245, 2617, 1541, 974, 974, 886, -1000, 886, -1000, 92305,
	2864, -1000, -1000, 76498, 974, 974, 974, -1000, -1000, -1000,
	-1000, 3598, 3597, 3596, 3593, -1000, -1000, 997, 92305, 112979,
	92305, -1000, 261, -1000, 112979, -1000, 112979, 112979, 92305, -1000,
	997, 112979, 997, 112979, 997, 112979, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 124, -1000, -1000, 126201, -1000, 47713, -1000,
	-1000, 3591, 1651, -1000, 2863, -1000, 2856, -1000, 46, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1797,
	-1000, -1000, -1000, -1000, 92305, 92305, 92305, 92305, 112979, 3137,
	-1000, 112979, 3131, 92305, -1000, -1000, 83034, -1000, 2456, 2851,
	-1000, -1000, -1000, -1000, -1000, -1000, 1443, 2243, -1000, 2487,
	-1000, 1605, -1000, -1000, -1000, 126201, 52288, -1000, -1000, 126201,
	1874, -1000, 50583, 50009, -1000, -1000, 1733, 92305, 2518, -1000,
	2518, -155, -1000, 124256, 2484, 92305, -1000, -1000, -1000, -1000,
	-1000, 907, 593, 593, 1353, 1353, 1353, 1353, 3367, 7781,
	422, 5055, 7680, 7680, 765, 765, 765, 765, 765, 7680,
	4789, 409, 409, 4789, 4789, 4789, 4789, 4789, 409, 409,
	409, 7680, 7680, 7680, 409, 6289, 4871, 10019, 47713, 47713,
	1244, 1987, 580, 9470, 47713, 10138, 10138, 10138, 10138, -1000,
	1898, -1000, -1000, -1000, -1000, 2796, 651, 51731, 51731, -1000,
	-1000, -1000, -1000, 26749, 47713, -1000, -1000, -1000, -1000, 36603,
	-1000, -1000, 123537, -311, 464, -1000, 259, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	463, -141, -44, -1000, 47713, 47713, 47713, 462, -1000, 258,
	47713, 112979, -1000, 17633, 796, -173, -1000, -62, 1448, -1000,
	47713, -1000, -1000, 1242, -1000, 1241, 1237, 1231, -1000, 648,
	460, -1000, 257, -1000, 2192, 647, 644, 47713, -1000, -1000,
	-1000, -1000, -1000, 123496, -1000, -1000, 123116, -1000, -1000, 123075,
	-1000, -1000, 122695, -1000, -1000, -1000, 125937, 17052, 16924, 16242,
	9912, 15588, 15204, -63, 457, -64, 456, 905, 904, 455,
	454, 453, -76, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -77, 452, -1000, 2794, -141,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 449, -1000,
	447, -1000, 125830, -141, 445, 5299, -1000, 51731, 51731, 51731,
	51731, -1000, 441, -1000, 124128, -1000, 125566, 36029, 36029, 36029,
	440, 125201, 47713, -141, -78, -1000, -79, -1000, -1000, 571,
	-84, 1004, 35443, 54524, 25030, -1000, 1004, 1004, 47713, -1000,
	47713, 2499, -1000, -1000, -1000, -1000, 2495, 1904, 2483, 55619,
	-1000, -1000, -1000, -1000, 102067, -1000, 3496, 2600, -1000, 102067,
	-1000, -1000, 112979, 517, -1000, 102067, 102067, 25030, 891, -1000,
	891, 102067, 704, -1000, -1000, -1000, -1000, -1000, 439, 61694,
	-44, 255, 25030, 999, -1000, -1000, 2636, 2636, 2636, 2636,
	-1000, -1000, 112979, 1230, -17, -174, 2616, -1000, 3448, -1000,
	2115, -1000, 68762, -1000, 814, 1079, 25030, -1000, -1000, -1000,
	643, -1000, 3499, 3499, -1000, 3499, 112979, 2779, 202, 2614,
	-1000, 161, 71492, 71492, 3590, -1000, -1000, 226, -1000, 92305,
	226, 226, -1000, 92305, 92305, 2276, -1000, 236, -1000, 230,
	-1000, -1000, -75, -1000, 1012, 33135, -1000, 1495, -1000, -1000,
	1539, -1000, 1997, -1000, 1371, -1000, -1000, -1000, -1000, 33135,
	-1000, 4851, 112979, 112979, 92305, -1000, 112979, -1000, 2159, 71492,
	-1000, 2329, 116759, 2319, 68762, 112979, -1000, -1000, 642, 934,
	2480, 2477, 1101, 112979, 112979, 2476, 116219, 115679, -1000, 3583,
	112979, 2117, 47713, 3301, 2193, 3507, 124, 124, -1000, 124,
	124, 124, -1000, 641, 1316, 92305, 92305, 112979, 71492, 92305,
	1913, -1000, -1000, -1000, -1000, -1000, 83574, -1000, -1000, 3509,
	3506, -1000, 1417, -1000, -1000, -1000, 1417, 1963, 1891, 112979,
	71492, 92305, 71492, 115139, 114599, -1000, 1727, 112979, 1474, -1000,
	850, 2135, 124, 124, -1000, 124, 124, 124, 640, 25030,
	1991, -1000, 2860, 112979, 3537, 114059, 3536, 112979, 112979, 112979,
	71492, 3234, 112979, 112979, 71492, 5231, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 72606, 1113, 999,
	1726, 1228, 1227, 83034, 58921, 991, 58921, 2595, -1000, -1000,
	22239, -1000, 126201, 126201, -1000, 126201, -1000, 69311, 112979, -1000,
	1039, 112979, 78672, 951, 2984, 63878, -181, 974, 76498, 92305,
	-15, 2535, 112979, -1000, -1000, 1963, 2980, 517, 2328, -1000,
	76498, 3426, 2979, 639, 3582, 3581, -1000, 92305, 2267, 2325,
	-1000, -1000, 113519, 3059, 850, 112979, 1004, 55619, 2021, -1000,
	62241, 1064, 112979, 1851, 117, -1000, -1000, -1000, 30, 112979,
	-1000, 825, -1000, -1000, 5041, 5041, 974, -248, 637, -1000,
	879, 878, 59478, 76498, -85, -1000, -1000, -1000, -1000, 2319,
	92305, 112979, 1284, 2589, 112979, -86, -1000, 251, 636, -1000,
	2601, -1000, -245, -1000, 993, 58921, 2759, 2757, -1000, -1000,
	1011, -1000, 1460, 974, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 5, 112979, -181, -181, -16,
	-17, -1000, 997, -1000, 997, -1000, 997, -1000, 126201, -1000,
	-1000, 1650, 1641, 112979, -1000, 25030, 112979, 92305, 25030, 92305,
	2850, 2849, -1000, -1000, -1000, 112979, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1125, -1000, 1874, 2242, -1000, 634, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2418, -1000,
	-18, 32561, 893, -1000, -1000, 92305, 3, 47713, 47713, 7610,
	6481, 47713, 51731, 51731, -1000, 47713, 6415, -1000, -1000, -1000,
	-1000, -1000, 2754, 633, 47713, 68762, 4961, 4778, -1000, 438,
	13951, 4789, -1000, 47713, -1000, 502, -1000, 437, 34869, -1000,
	124830, -56, -87, -1000, 18875, -141, -93, -1000, -1000, 813,
	-1000, 3056, -1000, 47713, 124937, 2352, 1914, 1830, 1670, 3499,
	3534, 21681, -1000, 65503, 1017, 2218, 122654, -1000, -1000, -1000,
	-1000, 68762, 68762, 47713, 47713, -1000, 47713, 47713, 47713, -1000,
	-1000, -1000, 3499, 896, -1000, -1000, -1000, 896, -1000, -1000,
	1417, -1000, 1417, -1000, 47713, -1000, -1000, 2753, 47713, -1000,
	68762, 68762, 51731, 51731, 51731, 51731, 51731, 51731, 51731, 51731,
	51731, 51731, 51731, 51731, 51731, 51731, 51731, 51731, 51731, 51731,
	51731, 51731, 2470, 51731, 3476, 3476, 3476, 1360, -1000, 2768,
	2753, 47713, 47713, 68762, 433, 431, 430, -1000, 47713, -141,
	-1000, -1000, 6747, 632, -1000, 2356, -1000, 2670, -1000, 47713,
	-1000, -238, -1000, 2506, -1000, -1000, 2670, 2670, -96, 126201,
	55619, 55619, -1000, 630, 47713, 2488, -1000, -1000, 795, -312,
	-1000, 876, -1000, -1000, -1000, -1000, -1000, 517, -1000, -1000,
	-1000, 250, 102067, 102067, 794, -1000, -99, -1000, -1000, -104,
	-1000, 3424, 429, 25030, -1000, 1004, 2592, -1000, -1000, -1000,
	-1000, -1000, -1000, -181, 112979, 112979, 1717, 2235, 3530, -1000,
	3500, 805, 793, 249, 3499, 426, 425, 424, -181, 112979,
	112979, 1713, 112979, -1000, -1000, -1000, -1000, 226, -1000, -1000,
	-1000, 217, -1000, -1000, -1000, -1000, 2569, -1000, -19, -1000,
	-1000, -1000, 47713, -1000, -1000, 3232, 1222, 1220, -1000, -1000,
	-1000, -1000, 2764, -1000, 2978, -1000, 2315, -1000, 1072, -1000,
	1977, -1000, 47713, 628, 2585, 625, 624, 3580, 2121, 3578,
	1106, 2972, 2276, 2954, 2276, -1000, -1000, -1000, 931, -1000,
	126201, 2193, -1000, 621, 615, -1000, -23, 1636, 1894, 1219,
	1008, -1000, -1000, -1000, -1000, 47713, 47713, 101527, -1000, 476,
	3239, 2, -1000, -1000, -1000, 1712, 1215, 1214, -1000, -1000,
	-1000, -1000, 1963, 1699, 1212, 1211, -1000, -1000, -1000, -1000,
	-1000, 2313, -1000, -1000, 2953, 1007, -1000, 2918, 2915, 898,
	112979, -1000, 1006, -1000, -1000, -1000, -1000, 47713, -1000, -25,
	1198, 3365, 2310, 92305, -1000, 2276, 2950, 1194, -1000, 1193,
	-1000, -1000, -1000, 3363, 3362, 1205, -1000, -1000, -1000, -1000,
	-1000, 72049, -1000, 112979, 71492, 92305, 1890, 886, -1000, 2357,
	886, 991, 2750, -1000, 2534, 1003, 92305, 3577, 418, -111,
	-26, 68762, 3423, -1000, 2252, 666, 92305, 897, -1000, 3496,
	-1000, -1000, -1000, 1000, -1000, 3352, 92305, 3422, 2949, 999,
	124, 92305, 3515, -1000, -1000, 3420, 92305, 2948, 2261, 2309,
	2445, 850, 77592, 999, 2211, -65, -1000, 1851, 34283, 3235,
	-116, -1000, -1000, -1000, 1004, 64958, 55619, 47713, 3575, -117,
	-1000, -1000, -1000, -1000, -1000, 99360, 99360, 76498, 76498, 76498,
	974, 112979, 112979, 78672, -1000, -1000, 613, 112979, 112979, 612,
	-1000, 112979, 112979, 3574, 76498, -32, 610, -1000, 874, 873,
	872, -1000, -1000, -1000, -1000, -1000, -1000, 993, -1000, -245,
	58921, 124, -1000, 2232, 92305, -1000, 21123, -1000, -1000, -1000,
	-1000, -1000, -1000, 997, -1000, -1000, 2144, 2290, 2144, 1868,
	1859, -1000, -1000, 2240, -1000, -1000, -1000, -1000, 2538, 3209,
	25030, 3375, 10138, 47713, 47713, 5821, 566, 537, 10138, 47713,
	47713, 68762, 8304, -119, 47713, 47713, -1000, 47713, 792, 126201,
	-1000, 3529, 47713, 410, 385, -1000, -1000, -1000, 3498, -1000,
	-1000, -1000, 126201, 47713, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 381, -1000, 218, -1000, -1000, -1000, 119999, -1000, 47713,
	374, 3297, -1000, 372, 369, 10911, 9241, 122274, 122233, 121853,
	368, -1000, -1000, 364, 360, 126201, 2768, 126201, -1000, -1000,
	1002, 1002, 1381, 1381, 1381, 1381, 3476, 1379, 919, 574,
	689, 689, 689, 403, 1360, 1360, 689, 689, 689, 1360,
	2745, 2485, 609, 5408, -1000, -1000, 126201, 126201, 358, -1000,
	-1000, -1000, -141, 357, 6747, -1000, 2665, 3294, 126201, -1000,
	55619, 2665, 2665, -1000, -1000, 1904, 112979, 126201, 55619, -1000,
	2600, -1000, 19444, -1000, 25030, -1000, -1000, -1000, -1000, 3496,
	-1000, 61694, -1000, 608, -1000, 101, -1000, 2592, -1000, 871,
	-1000, -1000, 76498, 76498, -181, -240, 112979, -1000, -1000, 791,
	3573, 804, 25030, 355, -1000, -1000, -1000, -181, -181, 112979,
	-181, -1000, -1000, -1000, 3150, 126201, 112979, 112979, 1516, 100987,
	112979, 2942, -1000, 4731, -1000, 1101, 121812, 56164, -1000, 56164,
	112979, -1000, -1000, -1000, 1971, 1480, 3572, 1146, -1000, 3263,
	112979, -1000, 112979, -1000, -1000, -1000, 112979, 112979, 92305, 112979,
	-1000, 71492, 2928, -124, 126201, -43, -1000, 869, -1000, 1413,
	-1000, 20565, 112979, 71492, 92305, 112979, 71492, 92305, 2940, 112979,
	2180, -1000, -1000, 2914, -1000, 2926, -125, 25030, -1000, 3528,
	3525, 2939, 3269, -1000, 112979, 3523, 112979, 92305, 3149, -1000,
	-1000, -1000, -1000, -1000, 1697, 1192, 1189, 991, -45, 606,
	-1000, 868, -1000, -1000, 865, -1000, 991, -1000, 76498, 58921,
	3570, 517, -1000, 2564, -1000, 97172, 2288, 124, -1000, 3568,
	99907, 605, -1000, 2229, -1000, 594, -1000, 2446, 71492, 1963,
	124, 92305, -1000, -1000, 517, 354, -58, -1000, 2998, 1087,
	25030, 92305, 2936, 2448, 850, 77592, -1000, 1389, 2541, -1000,
	-60, -1000, 652, 124, 2211, -1000, -65, 126201, -1000, 862,
	-1000, -131, -1000, -1000, 353, -1000, 3148, 3147, -1000, 2675,
	56164, 604, 603, 112979, 3146, -1000, -1000, -142, 2815, 2815,
	76498, 58921, 76498, -1000, 993, 886, -1000, 2392, -1000, -1000,
	-1000, -1000, -1000, 25030, 1672, -1000, 600, 598, -1000, -1000,
	-1000, -1000, 3209, 10138, 10138, 47713, 47713, 47713, 10138, 8304,
	-143, -1000, 10138, 10138, -141, -1000, -1000, 124830, -1000, -1000,
	-1000, 126201, -1000, 20007, 2151, -1000, 121432, -1000, 32561, -1000,
	-1000, 47713, 47713, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 51731, 2739, 595, 68762, -1000, -1000, 341, 1015, 47713,
	49435, 2506, 1015, 1015, -1000, -145, -1000, -1000, -1000, 3496,
	101, -1000, -1000, 3567, 25030, -1000, 76498, -1000, -1000, 3564,
	-210, 802, -1000, 3562, -1000, -1000, 100, -1000, -1000, -1000,
	2611, 3419, -1000, 1966, -1000, 112979, -1000, 112979, -1000, 25030,
	112979, 2696, 1281, -1000, 934, 2475, 592, 51731, 92305, 916,
	-1000, 3441, 2625, -150, -1000, 112979, 47713, 112979, -159, -161,
	2292, -1000, -1000, 1272, 47713, -1000, -1000, -1000, 68762, 591,
	2276, 2276, -167, -183, -1000, -1000, -1000, 47713, 1187, 112979,
	33709, -1000, 3560, 3239, -1000, -1000, -1000, -1000, -1000, -1000,
	112979, -1000, 112979, -1000, 47713, 1184, -1000, -1000, -1000, 3522,
	2276, 25030, 2276, -1000, 2276, 3269, 1139, 112979, 71492, 92305,
	-1000, 2432, 2432, 76498, 58921, -1000, -75, 991, -1000, 3418,
	2547, 3557, -1000, -1000, -1000, -1000, 2469, -1000, -1000, 112979,
	2460, 975, -1000, -188, -1000, 859, 856, 78672, 951, 922,
	-1000, -98, 584, -1000, 855, -1000, -1000, -1000, -1000, 517,
	3415, -1000, 3520, 583, 582, 112979, 2260, 581, 25030, 3236,
	850, 77592, -1000, 3059, 1851, -1000, 2304, 112979, 3219, -1000,
	2541, 580, -1000, 974, 578, 577, 2317, 2317, -189, 56164,
	56164, -190, 576, 974, -1000, -191, -1000, -1000, -1000, -1000,
	-1000, -109, -1000, 892, 889, -1000, -1000, 92305, 92305, 47713,
	47713, -1000, 10138, 10138, 10138, -1000, 330, -1000, -1000, 2211,
	3288, -1000, -122, 121391, 121011, 958, 51731, 68762, -196, -1000,
	-1000, 112979, 126201, -130, -1000, 126201, 572, 551, 371, -1000,
	-1000, -1000, 575, -1000, -1000, -1000, 112979, 3555, -1000, 112979,
	100447, 112979, -1000, -1000, 1978, -1000, -1000, -1000, 112979, 2308,
	-1000, -1000, -1000, 1092, 47713, 5408, 550, 47713, -1000, 3414,
	-1000, 2544, 2769, 1934, 56164, -1000, 3209, -1000, 120970, -1000,
	1082, 1990, -1000, -1000, -1000, 126201, 3269, 56164, -1000, -1000,
	546, 544, 126201, 543, 851, 2734, -1000, -1000, -1000, -1000,
	-1000, 126201, 534, 3365, -1000, -1000, -1000, -1000, 2276, 92305,
	-1000, -1000, -1000, -1000, -199, -1000, -1000, 1994, 124, 2138,
	2606, -1000, 2288, 524, -1000, -1000, 2248, 2568, -1000, 99907,
	33135, 33135, 329, 3411, 922, -1000, 3493, -1000, 3123, 3123,
	47713, 3409, 124, -1000, 3515, 56164, -1000, 92305, 56164, 2259,
	2089, 2433, 77592, -1000, 2445, -1000, -1000, -204, 112979, 1851,
	-1000, -1000, 76498, 76498, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1082, -205, -207, -1000, 76498,
	-1000, -1000, 2392, -1000, 112979, -1000, 112979, -1000, -1000, -213,
	-215, -1000, 2030, 47713, 32561, -1000, -1000, 958, -216, -1000,
	-138, -1000, 3399, 49435, 3554, 3553, 3551, -1000, -181, -1000,
	-181, -1000, 1949, -1000, -1000, -1000, 2932, 2661, 120590, 2410,
	112979, 120549, -1000, 2760, -1000, -1000, 2547, 523, -1000, -1000,
	-1000, -1000, 893, 112979, 2547, 2658, 92305, 1090, -221, 2144,
	2144, 47713, 31987, 2175, 47713, -1000, -1000, 3269, -1000, 2699,
	3481, -1000, 951, -1000, 2169, 112979, -1000, 3258, -1000, 3145,
	-1000, -1000, -1000, 2564, 124, -1000, -1000, -1000, -223, 126201,
	124, -1000, 328, -224, 1087, -226, 92305, 1962, -1000, 850,
	-1000, 2448, 1004, -1000, -1000, -229, -231, 1934, 1082, 2135,
	-242, -1000, -247, -249, -1000, -1000, 318, 48861, 48861, 48861,
	-141, -155, -1000, 112979, 522, -1000, -1000, -1000, -1000, -1000,
	2909, 989, -1000, 2253, 1972, 314, 1093, -1000, -1000, 2135,
	112979, -1000, -1000, -1000, 988, 517, -1000, 47713, 1082, -250,
	-1000, 1060, -257, -1000, 1056, -258, -1000, 2726, -1000, -259,
	2276, 987, 3331, -1000, -1000, -1000, 2248, 92305, -269, -1000,
	-1000, 2347, -1000, 2547, 975, -1000, -1000, -1000, 1082, 516,
	1934, 515, 1529, 850, -1000, -1000, 1417, 3236, 3065, 974,
	974, 2547, 1934, 969, -1000, 974, -1000, -1000, -1000, 3049,
	-1000, 52845, 2306, 1829, 123955, 3049, 3049, -1000, -1000, 112979,
	3333, -1000, 2255, 2254, 1522, -1000, -1000, -1000, -1000, -1000,
	-1000, 2625, -274, 3319, 2410, 126201, 2547, -1000, 2144, 2605,
	-1000, 2144, 2703, -1000, 2164, -1000, -1000, -1000, 1771, 3475,
	2422, 512, -1000, 112979, 1811, 1793, 3549, 2138, 2248, 1934,
	56164, 2547, 56164, -1000, -1000, 112979, -1000, 2089, 1324, -1000,
	-1000, 2135, 2547, 1004, 510, -1000, -1000, 1964, 3437, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 848, -1000, 3107,
	-1000, 1116, 2099, 2099, 1004, -1000, 843, 2253, -1000, -1000,
	508, -1000, 507, -1000, 2228, -1000, -1000, -1000, -1000, 112979,
	-1000, -1000, 3545, -1000, 951, -1000, 2547, -275, 2135, -277,
	-1000, -181, 1962, -1000, 1624, 969, 2135, -1000, 1823, -1000,
	-1000, 2204, 48287, 47713, -1000, 3451, -1000, -1000, 2508, -1000,
	-1000, 47713, 2625, 47713, 47713, 63333, -280, -1000, 2248, 2135,
	1082, 969, 1934, 1529, 64958, 1004, 969, -1000, -1000, -1000,
	126201, -1000, -1000, -1000, 126201, -1000, -295, -297, -248, 99360,
	2266, 2422, 969, 1934, 1004, 2547, -1000, -267, -1000, 1004,
	2135, 1180, -302, -1000, -1000, -1000, -1000, 1004, 2547, -1000,
	2135, -1000, -1000, -1000, -1000, 506, -1000, -1000, 2135, 969,
	47713, 969, 1004, -303, 1004, -1000, 2135, -1000, -1000,
}

var sqlPgo = [...]int{
	0, 4373, 4372, 4371, 4370, 4368, 4367, 4366, 4361, 4360,
	4359, 4358, 4356, 4355, 4354, 4352, 4350, 4347, 4344, 4339,
	4335, 4330, 4329, 4324, 4323, 4322, 4321, 4319, 4317, 4315,
	4314, 4312, 4311, 4310, 4309, 4308, 4303, 4302, 4301, 4299,
	4297, 4296, 4294, 4292, 4291, 4290, 4289, 4287, 4286, 4285,
	4282, 4274, 4273, 4272, 4271, 4269, 4267, 4266, 4258, 4257,
	4256, 4255, 4254, 48, 4251, 4250, 4249, 4248, 4247, 4245,
	4243, 4242, 4241, 4238, 4234, 4233, 4232, 4226, 4215, 4208,
	4207, 4205, 4201, 4200, 67, 4199, 269, 4198, 4197, 4196,
	4194, 4193, 4192, 4189, 4188, 4186, 4185, 4184, 4183, 265,
	4181, 117, 153, 4180, 4178, 3736, 4177, 4176, 264, 4173,
	4171, 4170, 4168, 275, 4167, 4165, 4162, 4161, 4160, 4159,
	4157, 4154, 4152, 4146, 4142, 92, 197, 4140, 4139, 135,
	4138, 4136, 4135, 4134, 4131, 4130, 4129, 4128, 4127, 4123,
	242, 4122, 261, 4121, 4115, 4114, 4111, 4109, 4107, 4106,
	4102, 4100, 4099, 4098, 4094, 4089, 4086, 4085, 4084, 4083,
	4082, 4081, 4077, 4074, 4073, 4071, 4068, 4066, 4065, 4064,
	4063, 4062, 4061, 4060, 4057, 4055, 4054, 4052, 4047, 4044,
	241, 273, 187, 4043, 4042, 260, 258, 4040, 4038, 4036,
	4035, 4033, 125, 11, 52, 4032, 4031, 91, 80, 100,
	94, 102, 97, 4030, 103, 4029, 136, 69, 4024, 9,
	2, 259, 236, 12109, 234, 4023, 4022, 4021, 245, 190,
	4020, 238, 4019, 4017, 4016, 4015, 4014, 65, 49, 177,
	175, 170, 165, 225, 4009, 148, 104, 78, 56, 42,
	15, 74, 205, 21, 4007, 251, 10, 133, 7, 36,
	4004, 4003, 4001, 3999, 3364, 121, 3998, 257, 235, 163,
	3995, 3991, 3986, 330, 3983, 3980, 47, 3977, 176, 84,
	126, 8, 119, 3976, 142, 34, 3975, 167, 53, 3973,
	161, 99, 83, 11785, 9733, 3972, 3970, 123, 59, 156,
	472, 162, 152, 191, 86, 164, 158, 106, 208, 207,
	171, 87, 3965, 247, 3964, 3394, 71, 182, 155, 4936,
	3963, 3956, 3955, 81, 194, 108, 3953, 3952, 76, 18,
	14, 4, 6, 134, 24, 23, 16, 3946, 28, 115,
	43, 27, 3945, 26, 3944, 3940, 3938, 3936, 3933, 62,
	150, 3932, 267, 3930, 154, 51, 40, 3929, 66, 213,
	3928, 222, 127, 3925, 3924, 248, 200, 193, 3919, 73,
	226, 3916, 3915, 3914, 3913, 3911, 130, 3, 129, 3910,
	3908, 157, 3903, 46, 239, 192, 3902, 50, 3900, 3899,
	173, 107, 138, 279, 132, 223, 114, 216, 178, 228,
	3898, 3897, 3895, 203, 3894, 3893, 220, 146, 3892, 3891,
	201, 276, 95, 44, 79, 232, 82, 189, 149, 3888,
	198, 3887, 3886, 274, 179, 211, 1, 20, 109, 124,
	3885, 5, 230, 159, 231, 112, 3882, 7234, 68, 2522,
	3881, 3880, 139, 120, 77, 122, 147, 254, 105, 3879,
	3878, 2567, 3872, 3871, 3866, 3865, 183, 3862, 3861, 3860,
	143, 144, 184, 3859, 98, 70, 45, 29, 113, 244,
	266, 116, 212, 186, 250, 3852, 3850, 3849, 174, 3848,
	131, 110, 151, 196, 246, 55, 3847, 272, 3846, 145,
	458, 61, 140, 3839, 214, 3837, 3835, 3833, 3831, 3828,
	3826, 3825, 299, 229, 3823, 3819, 3815, 35, 185, 3814,
	252, 199, 172, 96, 60, 3813, 89, 3196, 3811, 219,
	873, 63, 255, 93, 256, 3810, 4076, 54, 3807, 0,
	13958, 7960, 10816, 13430, 3806, 4738, 3805, 3804, 3803, 209,
	141, 3802, 3801, 3800, 111, 3799, 85, 3798, 3796, 72,
	3795, 25, 12, 19, 33, 31, 218, 206, 3794, 3792,
	30, 128, 168, 3789, 270, 224, 3787, 3784, 3783, 3782,
	90, 3781, 41, 3780, 38, 3779, 3777, 39, 13, 57,
	3776, 3775, 195, 3773, 215, 243, 3771, 160, 3770, 3390,
	137, 3769, 3768, 3767, 64, 58, 249, 88, 3766, 277,
	3765, 3352, 3762, 3761, 22, 3760, 3759, 240, 204, 180,
	210, 3758, 3757, 166, 3756, 3752, 3751, 271, 3750, 3749,
	37, 3748, 17, 3747, 3745, 202, 3099, 3741, 3740, 32,
	3734, 181,
}

var sqlR1 = [...]int{
	0, 1, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 3, 3, 3, 3,
	3, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 5,
	5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
	5, 11, 11, 7, 7, 7, 7, 8, 8, 8,
	8, 8, 49, 49, 9, 9, 9, 9, 9, 9,
	9, 9, 9, 36, 31, 31, 32, 32, 33, 34,
	34, 10, 10, 6, 6, 6, 6, 6, 6, 6,
	6, 6, 17, 17, 37, 37, 18, 18, 39, 39,
	19, 19, 40, 40, 586, 586, 598, 598, 22, 22,
	42, 42, 23, 43, 16, 587, 587, 587, 587, 35,
	24, 44, 28, 28, 28, 28, 28, 195, 195, 195,
	195, 21, 21, 38, 38, 230, 230, 229, 229, 229,
	229, 229, 229, 229, 229, 229, 229, 229, 229, 229,
	229, 229, 229, 229, 229, 229, 229, 229, 229, 229,
	229, 229, 229, 582, 582, 232, 232, 231, 225, 225,
	226, 226, 588, 588, 233, 233, 233, 235, 235, 13,
	13, 13, 13, 13, 13, 13, 13, 13, 13, 481,
	481, 481, 514, 514, 513, 513, 513, 512, 512, 602,
	602, 603, 603, 603, 603, 603, 128, 128, 379, 379,
	379, 52, 52, 52, 52, 52, 577, 577, 197, 197,
	197, 199, 199, 198, 198, 198, 198, 198, 75, 75,
	593, 593, 594, 594, 592, 595, 595, 595, 196, 196,
	196, 124, 124, 124, 124, 124, 124, 125, 125, 126,
	126, 200, 200, 200, 202, 202, 201, 201, 201, 201,
	201, 201, 201, 201, 201, 206, 15, 15, 15, 15,
	109, 109, 109, 109, 109, 109, 109, 109, 109, 104,
	104, 516, 516, 517, 517, 191, 191, 192, 192, 192,
	192, 193, 193, 194, 194, 194, 66, 66, 203, 203,
	205, 205, 204, 204, 204, 204, 204, 54, 54, 54,
	54, 54, 54, 54, 55, 55, 55, 55, 55, 56,
	56, 56, 56, 56, 56, 57, 57, 57, 57, 57,
	57, 64, 64, 64, 64, 64, 182, 182, 67, 67,
	67, 67, 67, 67, 67, 67, 67, 67, 67, 67,
	67, 72, 72, 72, 72, 604, 604, 604, 604, 604,
	604, 604, 604, 604, 604, 604, 604, 604, 604, 604,
	604, 604, 604, 604, 605, 605, 606, 606, 607, 607,
	608, 608, 608, 608, 608, 608, 608, 608, 608, 608,
	608, 608, 608, 608, 608, 608, 608, 608, 608, 70,
	70, 70, 70, 70, 70, 70, 70, 70, 70, 70,
	70, 70, 70, 70, 70, 70, 81, 81, 341, 341,
	304, 304, 82, 82, 82, 83, 83, 84, 84, 68,
	68, 575, 575, 356, 356, 472, 472, 69, 583, 583,
	583, 585, 585, 584, 584, 86, 86, 378, 378, 87,
	87, 87, 87, 87, 87, 88, 88, 88, 88, 88,
	88, 88, 89, 89, 89, 89, 89, 89, 89, 89,
	89, 89, 89, 89, 89, 89, 96, 96, 96, 96,
	96, 97, 97, 97, 94, 94, 94, 91, 91, 91,
	90, 90, 90, 95, 95, 95, 574, 293, 293, 93,
	93, 93, 92, 92, 92, 357, 357, 98, 98, 98,
	98, 305, 99, 99, 99, 99, 99, 99, 99, 99,
	102, 102, 101, 101, 101, 101, 101, 101, 101, 101,
	101, 101, 101, 101, 101, 101, 101, 101, 101, 101,
	101, 101, 101, 101, 101, 101, 101, 101, 101, 101,
	101, 101, 101, 103, 103, 103, 103, 103, 103, 103,
	103, 103, 103, 103, 103, 474, 474, 100, 100, 100,
	439, 439, 105, 105, 105, 394, 394, 106, 106, 106,
	106, 106, 107, 107, 107, 107, 107, 107, 107, 107,
	107, 127, 127, 127, 127, 127, 127, 127, 127, 579,
	579, 349, 349, 257, 257, 257, 257, 117, 117, 117,
	117, 118, 118, 118, 119, 119, 187, 187, 134, 134,
	134, 134, 134, 133, 133, 133, 133, 133, 133, 58,
	58, 58, 59, 59, 60, 60, 61, 61, 62, 62,
	63, 63, 63, 63, 63, 136, 136, 599, 599, 138,
	135, 135, 135, 137, 137, 137, 137, 139, 140, 140,
	140, 140, 140, 140, 140, 140, 141, 141, 506, 506,
	365, 365, 504, 504, 526, 526, 505, 505, 311, 311,
	311, 311, 311, 312, 312, 312, 515, 515, 515, 515,
	515, 515, 142, 142, 142, 142, 142, 142, 142, 142,
	142, 142, 142, 142, 142, 142, 142, 142, 142, 142,
	142, 142, 142, 142, 142, 142, 142, 142, 142, 142,
	142, 142, 142, 142, 142, 142, 142, 142, 142, 142,
	142, 142, 142, 142, 142, 142, 142, 142, 142, 142,
	142, 142, 142, 142, 142, 142, 142, 142, 142, 142,
	142, 142, 142, 142, 142, 142, 142, 142, 142, 142,
	142, 188, 188, 189, 190, 190, 190, 190, 190, 165,
	165, 165, 181, 181, 181, 181, 181, 181, 181, 168,
	168, 168, 152, 152, 143, 143, 143, 143, 143, 143,
	143, 147, 147, 147, 147, 147, 147, 147, 147, 144,
	144, 154, 154, 154, 154, 154, 148, 148, 149, 149,
	149, 149, 175, 175, 151, 151, 153, 153, 153, 153,
	153, 153, 153, 153, 153, 145, 145, 145, 145, 156,
	156, 156, 156, 401, 401, 401, 180, 180, 155, 155,
	155, 155, 155, 155, 155, 155, 155, 155, 155, 155,
	155, 155, 155, 155, 178, 178, 178, 178, 178, 178,
	596, 596, 597, 597, 172, 172, 172, 172, 172, 172,
	453, 453, 166, 166, 166, 166, 171, 171, 171, 171,
	174, 174, 174, 174, 384, 384, 163, 163, 163, 164,
	164, 164, 169, 169, 170, 167, 167, 173, 173, 173,
	173, 146, 146, 146, 146, 146, 146, 146, 176, 176,
	162, 162, 177, 177, 177, 177, 177, 177, 177, 177,
	177, 177, 177, 609, 609, 158, 158, 158, 157, 157,
	157, 157, 160, 160, 161, 161, 161, 161, 161, 161,
	159, 150, 179, 576, 576, 572, 572, 572, 572, 572,
	572, 572, 572, 573, 573, 573, 573, 578, 578, 110,
	110, 110, 110, 110, 120, 120, 120, 120, 120, 111,
	111, 111, 111, 111, 113, 113, 112, 112, 112, 112,
	76, 76, 76, 76, 76, 14, 14, 14, 77, 77,
	248, 248, 209, 209, 209, 330, 330, 210, 210, 319,
	319, 319, 319, 207, 207, 208, 208, 78, 78, 610,
	610, 610, 589, 589, 589, 590, 590, 590, 590, 590,
	590, 313, 313, 314, 314, 419, 419, 419, 419, 419,
	317, 317, 317, 318, 318, 318, 318, 318, 318, 318,
	318, 318, 320, 320, 234, 234, 234, 328, 329, 329,
	321, 321, 327, 326, 326, 325, 325, 324, 324, 322,
	323, 323, 323, 332, 332, 331, 334, 334, 333, 418,
	535, 535, 537, 537, 537, 537, 537, 537, 537, 539,
	539, 539, 539, 539, 539, 539, 539, 539, 539, 539,
	539, 402, 402, 611, 611, 533, 533, 533, 534, 529,
	529, 530, 530, 530, 530, 530, 315, 315, 316, 316,
	316, 316, 531, 532, 347, 347, 457, 536, 536, 538,
	538, 540, 612, 612, 612, 612, 612, 612, 613, 613,
	613, 417, 417, 416, 416, 339, 339, 541, 541, 541,
	541, 542, 542, 542, 542, 542, 545, 544, 543, 543,
	543, 543, 543, 80, 80, 80, 381, 381, 380, 380,
	382, 382, 382, 382, 382, 382, 382, 382, 382, 382,
	382, 382, 382, 382, 382, 184, 184, 260, 260, 74,
	74, 74, 12, 12, 12, 591, 591, 591, 79, 79,
	79, 79, 79, 79, 259, 259, 259, 259, 259, 259,
	259, 259, 259, 259, 259, 259, 259, 259, 259, 259,
	259, 259, 259, 259, 581, 581, 580, 580, 261, 261,
	615, 615, 85, 85, 85, 85, 85, 85, 85, 85,
	475, 475, 476, 476, 73, 73, 73, 73, 73, 403,
	403, 400, 400, 399, 399, 346, 346, 455, 455, 455,
	456, 265, 265, 266, 266, 227, 227, 227, 30, 29,
	20, 20, 25, 25, 26, 26, 247, 247, 247, 247,
	247, 247, 247, 247, 247, 27, 27, 46, 46, 46,
	46, 47, 47, 47, 47, 50, 50, 51, 51, 45,
	45, 45, 45, 48, 48, 41, 41, 600, 600, 601,
	601, 116, 116, 121, 121, 121, 121, 121, 122, 122,
	122, 122, 123, 123, 123, 123, 132, 132, 183, 183,
	183, 183, 183, 183, 183, 53, 53, 53, 53, 65,
	65, 65, 65, 130, 617, 617, 617, 131, 131, 131,
	616, 616, 258, 258, 413, 413, 414, 414, 618, 618,
	415, 415, 415, 415, 415, 251, 250, 252, 252, 253,
	253, 71, 71, 71, 243, 243, 242, 240, 240, 518,
	518, 245, 245, 245, 246, 246, 236, 236, 237, 237,
	238, 238, 239, 239, 249, 249, 619, 619, 108, 108,
	108, 186, 186, 303, 303, 303, 410, 410, 410, 340,
	340, 272, 272, 412, 412, 412, 412, 377, 377, 377,
	185, 185, 354, 354, 367, 367, 368, 368, 469, 469,
	369, 114, 114, 115, 115, 129, 129, 213, 213, 211,
	211, 211, 211, 211, 211, 211, 211, 218, 218, 219,
	219, 220, 220, 221, 222, 222, 222, 222, 358, 358,
	223, 223, 223, 212, 212, 212, 214, 214, 214, 214,
	214, 214, 214, 217, 217, 217, 217, 224, 224, 224,
	216, 216, 552, 552, 552, 554, 554, 556, 556, 555,
	555, 551, 551, 553, 553, 614, 614, 383, 383, 383,
	337, 338, 335, 335, 336, 336, 344, 344, 342, 343,
	343, 345, 345, 454, 454, 454, 228, 228, 228, 374,
	374, 374, 374, 375, 375, 406, 406, 404, 404, 404,
	404, 405, 405, 407, 407, 407, 408, 408, 409, 409,
	371, 371, 372, 372, 373, 373, 373, 373, 435, 435,
	215, 215, 215, 351, 351, 351, 352, 352, 425, 425,
	425, 425, 425, 425, 426, 426, 424, 424, 424, 424,
	458, 458, 458, 458, 458, 458, 458, 458, 458, 459,
	460, 460, 353, 353, 461, 411, 411, 570, 570, 570,
	571, 571, 452, 452, 462, 462, 462, 462, 462, 462,
	450, 450, 451, 451, 470, 471, 471, 387, 387, 387,
	387, 385, 385, 388, 388, 388, 388, 388, 386, 386,
	463, 463, 463, 463, 376, 376, 464, 464, 464, 464,
	465, 466, 466, 467, 467, 420, 421, 421, 477, 477,
	477, 477, 479, 350, 350, 350, 350, 350, 528, 527,
	527, 478, 478, 478, 478, 478, 478, 478, 478, 478,
	493, 493, 493, 493, 493, 493, 493, 493, 493, 493,
	493, 493, 493, 493, 493, 493, 493, 493, 493, 493,
	493, 493, 493, 493, 493, 493, 493, 493, 493, 493,
	493, 493, 494, 494, 494, 494, 494, 494, 494, 480,
	480, 480, 480, 480, 484, 484, 484, 483, 483, 483,
	483, 483, 483, 483, 483, 483, 483, 483, 485, 485,
	490, 490, 491, 491, 491, 486, 487, 492, 492, 492,
	492, 620, 620, 496, 496, 488, 488, 488, 488, 488,
	488, 488, 488, 488, 482, 482, 482, 489, 489, 489,
	396, 396, 396, 396, 396, 396, 396, 396, 396, 396,
	396, 396, 396, 395, 395, 397, 397, 427, 427, 427,
	427, 427, 427, 427, 427, 427, 427, 427, 427, 427,
	427, 427, 427, 427, 427, 427, 427, 427, 427, 427,
	427, 427, 427, 427, 427, 427, 427, 427, 427, 427,
	427, 427, 427, 427, 427, 427, 427, 427, 427, 427,
	427, 427, 427, 427, 427, 427, 427, 427, 427, 427,
	427, 427, 427, 427, 427, 427, 427, 427, 427, 427,
	427, 427, 427, 427, 427, 427, 427, 427, 427, 427,
	427, 427, 427, 427, 427, 427, 427, 427, 427, 427,
	427, 427, 427, 427, 427, 427, 427, 428, 428, 428,
	428, 428, 428, 428, 428, 428, 428, 428, 428, 428,
	428, 428, 428, 428, 428, 428, 428, 428, 428, 428,
	428, 428, 428, 428, 428, 428, 428, 428, 429, 429,
	429, 429, 430, 430, 430, 430, 430, 430, 430, 430,
	430, 430, 430, 430, 430, 430, 430, 430, 430, 430,
	430, 430, 430, 430, 430, 430, 430, 546, 546, 546,
	546, 546, 546, 546, 546, 431, 431, 549, 549, 550,
	550, 547, 547, 547, 547, 547, 547, 547, 547, 547,
	547, 547, 547, 547, 547, 547, 547, 547, 547, 547,
	547, 547, 547, 547, 548, 548, 548, 548, 548, 548,
	548, 548, 548, 548, 548, 548, 548, 548, 548, 548,
	548, 548, 548, 548, 548, 548, 548, 548, 548, 548,
	548, 548, 548, 548, 548, 548, 548, 548, 548, 548,
	557, 557, 558, 558, 560, 560, 561, 561, 562, 563,
	563, 563, 564, 565, 565, 559, 559, 566, 566, 566,
	566, 567, 567, 568, 568, 568, 568, 568, 569, 569,
	569, 569, 569, 441, 441, 442, 442, 448, 448, 448,
	308, 308, 308, 308, 308, 308, 308, 308, 308, 308,
	308, 308, 308, 308, 308, 308, 308, 308, 308, 308,
	308, 308, 308, 308, 308, 308, 308, 308, 308, 308,
	308, 308, 308, 308, 308, 310, 310, 309, 262, 262,
	262, 262, 262, 262, 363, 363, 361, 361, 361, 364,
	364, 362, 362, 360, 360, 359, 359, 438, 438, 436,
	436, 440, 440, 389, 389, 495, 495, 495, 495, 495,
	495, 495, 495, 390, 390, 390, 398, 391, 391, 392,
	392, 392, 392, 392, 432, 433, 393, 393, 393, 434,
	434, 443, 447, 447, 446, 445, 445, 444, 444, 422,
	422, 423, 423, 370, 370, 621, 621, 366, 366, 468,
	468, 468, 468, 307, 307, 355, 355, 306, 306, 298,
	298, 299, 299, 299, 299, 348, 348, 449, 449, 497,
	497, 498, 498, 499, 499, 500, 500, 501, 502, 503,
	437, 437, 282, 281, 269, 270, 280, 279, 278, 268,
	271, 275, 276, 277, 273, 274, 289, 288, 287, 241,
	244, 294, 295, 295, 297, 297, 296, 296, 284, 285,
	286, 473, 267, 300, 300, 301, 301, 301, 302, 302,
	302, 302, 263, 263, 264, 264, 290, 290, 291, 292,
	292, 283, 283, 283, 254, 254, 254, 255, 255, 256,
	256, 511, 511, 508, 508, 508, 509, 509, 509, 510,
	510, 510, 510, 507, 507, 507, 507, 507, 519, 519,
	519, 519, 519, 519, 519, 519, 519, 519, 519, 519,
	519, 519, 519, 519, 519, 519, 519, 519, 519, 519,
	519, 519, 519, 519, 519, 519, 519, 519, 519, 519,
	519, 519, 519, 519, 519, 519, 519, 519, 519, 519,
	519, 519, 519, 519, 519, 519, 519, 519, 519, 519,
	519, 519, 519, 519, 519, 519, 519, 519, 519, 519,
	519, 519, 519, 519, 519, 519, 519, 519, 519, 519,
	519, 519, 519, 519, 519, 519, 519, 519, 519, 519,
	519, 519, 519, 519, 519, 519, 519, 519, 519, 519,
	519, 519, 519, 519, 519, 519, 519, 519, 519, 519,
	519, 519, 519, 519, 519, 519, 519, 519, 519, 519,
	519, 519, 519, 519, 519, 519, 519, 519, 519, 519,
	519, 519, 519, 519, 519, 519, 519, 519, 519, 519,
	519, 519, 519, 519, 519, 519, 519, 519, 519, 519,
	519, 519, 519, 519, 519, 519, 519, 519, 519, 519,
	519, 519, 519, 519, 519, 519, 519, 519, 519, 519,
	519, 519, 519, 519, 519, 519, 519, 519, 519, 519,
	519, 519, 519, 519, 519, 519, 519, 519, 519, 519,
	519, 519, 519, 519, 519, 519, 519, 519, 519, 519,
	519, 519, 519, 519, 519, 519, 519, 519, 519, 519,
	519, 519, 519, 519, 519, 519, 519, 519, 519, 519,
	519, 519, 519, 519, 519, 519, 519, 519, 519, 519,
	519, 519, 519, 519, 519, 519, 519, 519, 519, 519,
	519, 519, 519, 519, 519, 519, 519, 519, 519, 519,
	519, 519, 519, 519, 519, 519, 519, 519, 519, 519,
	519, 519, 519, 519, 519, 519, 519, 519, 519, 519,
	519, 519, 519, 519, 519, 519, 519, 519, 519, 519,
	519, 519, 519, 519, 519, 519, 519, 519, 519, 519,
	519, 519, 519, 519, 519, 519, 519, 519, 519, 519,
	519, 519, 519, 519, 519, 519, 519, 519, 519, 519,
	519, 519, 519, 519, 519, 519, 519, 519, 519, 519,
	519, 519, 519, 519, 519, 519, 519, 519, 519, 519,
	519, 519, 519, 519, 519, 519, 519, 519, 519, 519,
	519, 519, 519, 519, 519, 519, 519, 519, 519, 519,
	519, 519, 519, 519, 519, 519, 519, 523, 523, 523,
	523, 523, 523, 523, 523, 523, 523, 523, 523, 523,
	523, 523, 523, 523, 523, 523, 523, 523, 523, 523,
	523, 523, 523, 523, 523, 523, 523, 523, 523, 523,
	523, 523, 523, 523, 523, 523, 523, 523, 523, 523,
	523, 523, 523, 523, 523, 523, 523, 523, 523, 520,
	520, 521, 521, 521, 521, 521, 521, 521, 521, 521,
	521, 521, 521, 521, 521, 521, 521, 521, 521, 522,
	524, 524, 524, 524, 524, 524, 524, 524, 524, 524,
	524, 524, 524, 524, 524, 524, 524, 524, 524, 524,
	524, 524, 524, 524, 524, 524, 524, 524, 524, 524,
	524, 524, 524, 524, 524, 524, 524, 524, 524, 524,
	524, 524, 524, 524, 524, 524, 524, 524, 524, 524,
	524, 524, 524, 524, 524, 524, 524, 524, 524, 524,
	524, 524, 524, 524, 524, 524, 524, 524, 524, 524,
	524, 524, 524, 524, 524, 524, 524, 524, 524, 524,
	524, 525, 525,
}

var sqlR2 = [...]int{
	0, 1, 1, 1, 1, 2, 1, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 1, 1, 1, 1, 0, 1, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	3, 1, 3, 1, 1, 1, 3, 1, 1, 1,
	1, 3, 4, 6, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 6, 6, 9, 6, 8, 4, 4,
	5, 1, 3, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 4, 6, 4, 6, 6, 9, 6, 9,
	6, 5, 6, 5, 1, 1, 1, 0, 6, 6,
	6, 6, 6, 6, 4, 4, 4, 4, 3, 4,
	4, 4, 7, 7, 9, 8, 9, 5, 3, 5,
	7, 4, 12, 4, 12, 1, 3, 5, 5, 2,
	5, 3, 6, 4, 4, 6, 5, 6, 5, 6,
	4, 8, 3, 4, 2, 3, 10, 3, 6, 4,
	3, 1, 3, 2, 1, 1, 3, 1, 3, 2,
	2, 3, 2, 0, 1, 1, 0, 2, 0, 7,
	10, 6, 8, 6, 6, 6, 9, 4, 3, 2,
	2, 0, 1, 3, 1, 1, 1, 1, 1, 1,
	3, 6, 4, 6, 7, 9, 6, 2, 2, 3,
	0, 8, 6, 8, 7, 2, 0, 1, 2, 5,
	0, 1, 3, 3, 1, 1, 3, 1, 12, 3,
	1, 0, 1, 1, 2, 3, 3, 0, 4, 6,
	0, 5, 7, 6, 8, 8, 2, 1, 3, 1,
	3, 2, 5, 0, 1, 3, 3, 3, 3, 1,
	1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
	6, 4, 9, 7, 12, 12, 12, 9, 2, 7,
	2, 1, 1, 1, 3, 3, 0, 3, 1, 3,
	1, 1, 3, 2, 5, 0, 7, 5, 2, 0,
	1, 2, 3, 1, 1, 2, 2, 1, 2, 1,
	2, 1, 2, 2, 3, 3, 3, 3, 3, 3,
	5, 3, 3, 5, 3, 3, 5, 3, 3, 5,
	3, 6, 6, 6, 6, 4, 1, 1, 1, 2,
	1, 1, 2, 1, 2, 1, 1, 1, 2, 1,
	2, 6, 3, 8, 3, 4, 3, 3, 4, 3,
	4, 4, 4, 3, 5, 7, 3, 3, 4, 3,
	3, 3, 3, 3, 2, 0, 1, 0, 1, 0,
	4, 3, 3, 3, 3, 3, 6, 4, 4, 4,
	3, 5, 3, 3, 3, 3, 3, 3, 3, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 4,
	1, 2, 1, 2, 1, 2, 7, 3, 2, 0,
	1, 3, 3, 1, 0, 1, 2, 2, 1, 6,
	5, 1, 2, 1, 3, 2, 0, 7, 2, 5,
	0, 1, 3, 3, 1, 9, 3, 2, 0, 2,
	2, 2, 2, 2, 2, 1, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 4, 6, 5, 7,
	3, 4, 6, 3, 4, 6, 3, 5, 7, 3,
	4, 6, 3, 4, 6, 3, 1, 1, 3, 4,
	6, 3, 3, 5, 3, 1, 3, 2, 2, 2,
	2, 1, 2, 2, 5, 3, 3, 6, 6, 3,
	1, 1, 1, 1, 2, 1, 1, 1, 2, 1,
	1, 2, 1, 2, 1, 2, 1, 1, 1, 2,
	1, 1, 2, 1, 1, 1, 1, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	1, 1, 2, 1, 2, 1, 3, 5, 7, 2,
	3, 0, 3, 5, 2, 3, 0, 2, 3, 2,
	3, 2, 6, 4, 7, 7, 7, 9, 10, 5,
	2, 6, 4, 7, 7, 7, 10, 5, 2, 2,
	1, 1, 3, 1, 1, 1, 1, 1, 2, 1,
	2, 2, 3, 2, 4, 3, 2, 2, 1, 2,
	1, 3, 3, 1, 2, 1, 2, 1, 2, 1,
	1, 3, 5, 4, 6, 4, 3, 0, 1, 3,
	2, 4, 2, 4, 1, 6, 3, 1, 1, 5,
	3, 2, 6, 3, 3, 4, 4, 3, 1, 3,
	2, 3, 3, 1, 3, 1, 2, 1, 1, 2,
	2, 3, 1, 1, 1, 1, 1, 3, 2, 2,
	1, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	1, 2, 1, 2, 1, 2, 1, 1, 2, 1,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 2, 1,
	1, 2, 2, 1, 3, 3, 3, 3, 3, 2,
	3, 3, 1, 1, 1, 1, 1, 2, 2, 5,
	7, 3, 3, 3, 4, 4, 6, 5, 5, 5,
	3, 4, 4, 3, 4, 4, 3, 4, 4, 5,
	3, 5, 5, 5, 7, 3, 3, 3, 2, 6,
	4, 3, 2, 3, 4, 3, 5, 3, 6, 5,
	6, 3, 5, 6, 3, 4, 3, 4, 3, 3,
	4, 4, 5, 0, 1, 1, 1, 1, 3, 2,
	3, 4, 3, 4, 3, 5, 3, 4, 4, 3,
	4, 5, 3, 4, 3, 4, 4, 5, 3, 3,
	1, 1, 0, 2, 5, 4, 6, 4, 6, 4,
	1, 0, 3, 4, 4, 5, 7, 5, 3, 3,
	3, 4, 4, 5, 2, 0, 4, 2, 3, 4,
	2, 3, 3, 3, 4, 3, 3, 4, 3, 3,
	3, 3, 4, 4, 4, 4, 4, 3, 2, 3,
	2, 3, 6, 6, 7, 9, 7, 9, 4, 3,
	4, 4, 5, 1, 1, 10, 10, 3, 5, 5,
	5, 3, 5, 6, 4, 4, 5, 5, 2, 3,
	2, 5, 4, 2, 0, 1, 1, 1, 1, 3,
	2, 2, 2, 2, 2, 2, 1, 2, 0, 1,
	2, 1, 2, 2, 1, 2, 1, 2, 2, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 6, 5, 8, 3, 6, 6, 3, 13, 16,
	1, 0, 1, 2, 3, 0, 2, 0, 4, 0,
	4, 5, 4, 3, 3, 1, 3, 10, 13, 0,
	2, 3, 1, 1, 0, 1, 2, 2, 2, 2,
	1, 1, 0, 1, 3, 1, 1, 1, 2, 3,
	3, 3, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 8, 0, 1, 1, 0, 2, 1, 0,
	1, 0, 1, 1, 0, 1, 4, 1, 0, 3,
	7, 7, 1, 1, 3, 7, 1, 3, 11, 3,
	2, 0, 3, 1, 2, 2, 3, 2, 6, 2,
	1, 2, 2, 2, 8, 4, 2, 5, 5, 5,
	2, 2, 0, 1, 3, 11, 12, 9, 5, 3,
	1, 5, 10, 7, 11, 3, 3, 0, 2, 4,
	3, 3, 1, 5, 1, 3, 1, 2, 0, 1,
	2, 2, 0, 1, 3, 3, 2, 2, 1, 1,
	1, 4, 0, 6, 0, 3, 0, 2, 2, 2,
	0, 1, 1, 2, 2, 0, 3, 3, 2, 1,
	1, 2, 2, 5, 8, 4, 1, 0, 1, 2,
	2, 1, 2, 3, 3, 2, 2, 3, 2, 2,
	2, 2, 2, 3, 1, 4, 2, 2, 2, 4,
	7, 3, 4, 6, 3, 1, 1, 1, 8, 10,
	11, 7, 10, 5, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 2, 2, 0, 3, 3,
	0, 1, 8, 11, 3, 6, 6, 5, 3, 4,
	1, 0, 1, 3, 17, 20, 16, 19, 4, 2,
	0, 1, 0, 1, 0, 1, 3, 2, 4, 2,
	3, 1, 0, 2, 0, 1, 1, 0, 9, 6,
	6, 8, 6, 8, 5, 7, 2, 6, 7, 4,
	4, 5, 2, 4, 6, 6, 8, 6, 7, 8,
	9, 6, 7, 8, 9, 6, 8, 6, 8, 6,
	7, 8, 9, 6, 8, 6, 8, 1, 0, 2,
	0, 2, 2, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 2, 2, 1, 2,
	1, 2, 1, 2, 1, 3, 2, 3, 2, 2,
	2, 2, 2, 2, 1, 1, 0, 2, 4, 2,
	1, 0, 2, 1, 1, 0, 1, 3, 1, 0,
	1, 1, 1, 1, 1, 2, 3, 2, 2, 1,
	2, 12, 15, 3, 1, 0, 4, 3, 0, 1,
	1, 4, 4, 5, 1, 0, 3, 0, 3, 0,
	3, 0, 3, 0, 4, 0, 1, 0, 6, 7,
	3, 6, 3, 1, 3, 1, 1, 4, 2, 1,
	3, 1, 3, 4, 8, 11, 5, 2, 2, 0,
	10, 3, 2, 0, 1, 3, 1, 1, 3, 3,
	5, 6, 4, 5, 4, 1, 1, 3, 3, 1,
	2, 4, 4, 2, 3, 5, 5, 1, 3, 1,
	0, 1, 2, 3, 2, 4, 2, 3, 0, 2,
	0, 2, 1, 2, 1, 1, 1, 2, 1, 2,
	1, 2, 1, 8, 8, 8, 2, 4, 4, 4,
	2, 2, 2, 2, 3, 1, 3, 1, 2, 6,
	7, 1, 0, 1, 0, 1, 0, 1, 1, 0,
	1, 5, 1, 0, 1, 0, 1, 0, 3, 3,
	5, 1, 3, 3, 4, 5, 2, 2, 0, 2,
	2, 1, 1, 1, 0, 1, 0, 2, 2, 5,
	4, 2, 3, 1, 1, 1, 1, 1, 1, 1,
	3, 0, 1, 3, 1, 3, 3, 3, 2, 0,
	4, 2, 5, 3, 2, 0, 1, 3, 3, 5,
	1, 1, 1, 1, 1, 3, 2, 4, 4, 0,
	4, 4, 3, 4, 1, 5, 3, 4, 5, 5,
	1, 5, 1, 3, 2, 0, 3, 0, 2, 3,
	1, 3, 2, 0, 3, 5, 6, 4, 6, 4,
	3, 2, 1, 0, 5, 1, 0, 2, 2, 2,
	1, 1, 0, 1, 1, 1, 1, 0, 4, 2,
	1, 2, 2, 4, 1, 3, 1, 2, 3, 2,
	4, 1, 0, 1, 0, 2, 1, 0, 2, 5,
	7, 2, 1, 2, 4, 3, 5, 0, 1, 3,
	5, 1, 2, 1, 1, 1, 1, 1, 2, 2,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 4, 4, 6, 6, 1,
	1, 1, 1, 1, 3, 5, 0, 1, 1, 1,
	1, 1, 2, 2, 2, 2, 2, 1, 3, 0,
	5, 4, 1, 2, 1, 4, 1, 1, 2, 1,
	1, 1, 1, 1, 0, 1, 2, 5, 1, 4,
	2, 5, 1, 4, 3, 3, 0, 1, 2, 4,
	1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
	3, 3, 3, 1, 0, 1, 4, 1, 3, 3,
	3, 5, 2, 2, 2, 2, 2, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 2,
	3, 3, 3, 2, 2, 3, 5, 4, 6, 3,
	5, 4, 6, 4, 6, 5, 7, 3, 3, 3,
	3, 3, 4, 3, 2, 4, 2, 3, 3, 4,
	3, 4, 3, 4, 5, 6, 6, 7, 6, 7,
	6, 7, 3, 4, 4, 1, 3, 1, 3, 3,
	2, 2, 2, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 2, 3, 5, 6, 6, 7, 1, 2,
	1, 2, 1, 1, 1, 1, 1, 6, 1, 1,
	1, 1, 1, 1, 2, 1, 5, 5, 6, 3,
	1, 1, 1, 2, 2, 2, 4, 3, 5, 6,
	8, 6, 5, 4, 3, 2, 2, 4, 1, 1,
	1, 5, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 6, 6, 8, 8, 6, 4, 6,
	6, 6, 4, 1, 3, 3, 3, 3, 3, 4,
	3, 3, 4, 3, 3, 4, 3, 3, 4, 3,
	3, 3, 4, 3, 4, 3, 4, 3, 4, 4,
	3, 6, 5, 5, 5, 4, 4, 3, 4, 3,
	5, 0, 5, 0, 2, 0, 1, 3, 3, 2,
	2, 0, 6, 1, 0, 3, 0, 3, 3, 3,
	0, 1, 4, 2, 2, 2, 2, 2, 3, 2,
	2, 3, 0, 4, 1, 1, 5, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 3, 4, 1, 1,
	1, 2, 1, 2, 2, 3, 1, 2, 3, 2,
	3, 2, 3, 1, 0, 1, 3, 1, 3, 3,
	3, 1, 3, 3, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 4, 3, 1, 2, 3, 0, 3,
	3, 2, 2, 1, 2, 2, 3, 2, 1, 1,
	1, 5, 1, 2, 4, 2, 0, 1, 0, 3,
	5, 1, 0, 1, 2, 1, 0, 1, 3, 3,
	2, 1, 1, 1, 3, 1, 3, 3, 1, 1,
	1, 1, 5, 3, 1, 1, 3, 1, 1, 1,
	1, 2, 2, 1, 1, 2, 2, 1, 1, 1,
	3, 5, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 3, 1, 3, 1, 0, 1, 1,
	1, 1, 1, 1, 1, 3, 5, 7, 1, 7,
	5, 3, 1, 1, 1, 1, 1, 1, 1, 3,
	5, 1, 1, 1, 1, 1, 1, 1, 0, 3,
	0, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1,
}

var sqlChk = [...]int{
	-1000, -1, -2, 588, -101, -98, -66, -64, -105, -106,
	-87, -107, -100, -127, -132, -114, -115, -116, -128, -134,
	-183, -188, -189, -190, -3, -52, -54, -67, -86, -88,
	-99, -109, -108, -110, -117, -124, -120, -104, -58, -129,
	-133, -142, -184, -185, -186, 32, 31, 100, 80, 154,
	128, 137, 201, 381, 423, 434, 395, 142, 415, 400,
	-137, -138, 452, -53, -65, -131, -130, 73, 129, 409,
	-4, -12, -15, 29, 46, -55, -56, -57, 62, -74,
	-70, -81, -75, -68, -69, -72, -604, 102, -553, -89,
	-92, -123, -608, 161, 219, -111, -112, 364, -118, -119,
	417, -121, -122, 419, 162, -60, -59, 156, -211, -213,
	-135, -136, -187, -143, -144, -145, -146, -147, -148, -149,
	-175, -150, -151, -152, -153, -154, -155, -159, -178, -156,
	-157, -158, -161, -160, -162, -167, -163, -164, -165, -166,
	-168, -169, -171, -172, -173, -174, -176, -177, 457, -170,
	-179, 518, 49, 472, 82, 146, 427, 21, -5, -6,
	-7, -8, -9, -10, -11, -14, -13, -71, -73, -76,
	-77, -78, -85, -79, -80, -552, -90, -91, -94, -96,
	-97, -93, -95, 416, -214, -212, 585, 533, -17, -22,
	-23, -18, -19, -21, -24, -20, -25, -26, -27, -37,
	-42, -43, -39, -40, -38, -41, -44, -45, -46, -47,
	-48, -49, -50, -51, -29, -35, -36, -30, -31, -32,
	-33, -34, -16, -28, 554, 563, -217, -215, -216, -224,
	444, 541, 492, 588, 588, 588, 588, 588, 588, 588,
	588, 588, 588, 588, 588, 588, 588, 588, 588, 588,
	588, 588, 588, 588, 588, -305, 2, -284, -290, -291,
	-292, -283, -254, -522, -525, 4, -519, -523, 168, 229,
	328, 21, 23, 22, 24, 25, 26, 27, 29, 30,
	41, 42, 44, 45, 46, 47, 48, 49, 53, 55,
	59, 60, 61, 62, 63, 64, 68, 73, 74, 79,
	80, 81, 82, 83, 84, 85, 91, 88, 89, 90,
	92, 94, 96, 97, 98, 99, 100, 101, 103, 104,
	105, 107, 108, 109, 117, 118, 119, 120, 121, 123,
	128, 129, 132, 127, 131, 133, 135, 136, 137, 140,
	141, 142, 144, 145, 147, 148, 149, 151, 152, 154,
	155, 156, 159, 157, 500, 158, 160, 161, 162, 163,
	166, 174, 175, 176, 181, 183, 184, 188, 189, 192,
	193, 194, 195, 196, 197, 198, 199, 200, 202, 206,
	208, 209, 210, 211, 212, 218, 219, 221, 222, 223,
	224, 225, 230, 231, 232, 236, 233, 242, 243, 247,
	248, 249, 251, 255, 256, 257, 258, 259, 260, 262,
	264, 263, 266, 269, 270, 273, 277, 278, 282, 283,
	279, 284, 285, 287, 288, 291, 289, 292, 293, 290,
	294, 296, 297, 298, 299, 300, 301, 302, 303, 304,
	305, 306, 307, 295, 310, 308, 312, 313, 314, 326,
	323, 318, 319, 315, 320, 316, 317, 321, 322, 325,
	330, 331, 334, 216, 336, 337, 340, 358, 344, 345,
	346, 349, 350, 353, 356, 357, 359, 360, 361, 362,
	363, 364, 365, 366, 368, 369, 371, 372, 373, 375,
	376, 377, 379, 381, 382, 384, 385, 387, 388, 389,
	390, 391, 392, 393, 395, 397, 396, 398, 400, 402,
	403, 404, 409, 415, 411, 412, 413, 414, 416, 417,
	418, 419, 421, 422, 423, 425, 426, 427, 428, 430,
	432, 433, 437, 438, 454, 455, 474, 434, 435, 436,
	439, 440, 441, 442, 443, 447, 445, 446, 448, 449,
	450, 452, 453, 456, 457, 459, 460, 461, 462, 463,
	464, 465, 468, 470, 471, 472, 491, 473, 475, 479,
	480, 481, 482, 476, 477, 490, 484, 485, 487, 488,
	493, 494, 495, 496, 497, 498, 499, 501, 503, 511,
	512, 513, 515, 518, 519, 520, 521, 509, 523, 524,
	527, 528, 529, 532, 530, 531, 533, 535, 538, 539,
	540, 546, 545, 547, 550, 555, 556, 558, 559, 560,
	36, 50, 51, 54, 56, 58, 69, 70, 71, 75,
	124, 125, 153, 164, 165, 177, 190, 191, 203, 205,
	213, 214, 215, 237, 238, 240, 245, 267, 333, 335,
	351, 355, 370, 374, 378, 380, 394, 429, 466, 478,
	483, 504, 505, 506, 507, 514, 516, 541, 542, 543,
	548, 557, -305, 2, -284, 342, -277, 2, -254, -254,
	381, 28, 2, 28, 369, 446, 495, 497, 2, -579,
	-349, 2, 28, -257, -254, 102, 201, 444, -277, 2,
	-579, -349, 25, 2, -254, 2, 356, 22, 27, 66,
	77, 98, 140, 163, 185, 188, -607, 358, 388, 432,
	448, 490, 501, 515, 2, 545, 288, 445, 492, 229,
	120, 520, 439, -591, 437, 438, 356, 386, 425, 204,
	534, -258, 2, 434, -254, 288, 2, 588, 94, 278,
	74, 429, 449, -140, 512, -139, 504, 439, -141, -506,
	2, 310, -254, 588, 588, 588, 28, -267, -254, 492,
	229, 439, 120, 488, 588, 2, 492, 361, 545, 445,
	120, 391, 229, 520, 188, 140, 27, 126, 439, -591,
	288, -577, 2, -572, 4, -523, -519, -299, -298, 492,
	498, 120, -292, -283, 578, -291, 588, 588, 588, 2,
	248, 249, 390, 389, 449, 450, 588, 588, 588, 588,
	437, 2, 163, 22, 27, 66, 93, 98, 126, 185,
	188, 347, -605, 358, 388, 448, 490, 494, 501, 515,
	-590, 473, 68, 414, 439, -589, -591, 288, 520, 140,
	-399, 120, 278, 199, 528, 497, 495, 526, 132, 236,
	531, 530, 588, 588, -102, 2, 585, 32, 31, -101,
	-105, 142, 452, -206, 492, 241, 2, -254, 588, 588,
	2, 248, 249, 437, 438, 588, 588, 186, -572, 2,
	588, 588, 2, 248, 249, 437, 438, 241, 2, 68,
	441, 588, 588, 588, 588, 588, 588, 588, 588, 588,
	588, 588, 588, 588, 588, 588, 588, 588, 588, 588,
	588, 588, 588, 588, 588, 588, 588, 588, 588, 588,
	588, 588, 588, 588, 588, 2, -181, 449, 473, 210,
	47, 46, 74, 28, 387, 79, 362, 121, 148, 521,
	202, 229, 230, 256, 93, 94, -401, 44, 249, 68,
	248, 438, -596, 437, -453, 493, 440, 446, 487, 260,
	434, 512, 102, 535, 426, 560, 391, 392, 485, 404,
	279, 157, 187, 4, 120, 310, 451, 504, 278, 433,
	365, 84, -614, 2, 492, -616, 2, 512, 512, 2,
	-616, 2, -616, 2, -616, 2, -617, 512, 557, 588,
	588, 588, 588, 588, 588, 588, 588, 588, 588, 588,
	588, 588, 588, 588, 588, 588, -212, -214, -213, 588,
	588, 588, 588, 588, 588, 588, -181, 449, 2, 74,
	28, -342, -344, 525, 239, 150, 348, -211, -213, 2,
	-552, -504, 2, -427, -526, -429, 576, 577, 569, 489,
	67, -309, 327, 561, -441, 126, 526, 342, -525, -430,
	-443, 153, 358, 429, -364, 8, 9, 5, 6, 7,
	-263, -431, -437, 517, 167, 332, -302, 589, 10, 585,
	-549, -213, -442, 37, 205, 65, -508, -301, -264, -480,
	240, -300, -283, -546, -547, 4, -519, -520, -509, -483,
	-491, -487, -488, -494, -254, -522, 77, 111, 112, 110,
	115, 114, 281, 280, 116, 113, 451, 534, 66, 36,
	213, 214, 245, 333, 215, 75, -548, 141, -521, 237,
	238, 466, 51, 394, 177, 125, 124, 335, 56, 54,
	542, -492, 122, 504, 505, 506, 507, 190, 191, 58,
	164, 165, 355, 378, 483, 514, 516, 203, 267, 43,
	106, 187, 235, 217, 244, 246, 250, 268, 271, 311,
	324, 329, 352, 354, 424, 458, -620, 543, 478, 69,
	70, -554, 396, -555, -277, -554, 588, 588, 590, 588,
	-335, -337, -338, 2, 28, 138, 585, 2, -458, 2,
	-459, -463, -213, 261, -462, 585, -460, 583, -284, 343,
	-550, 430, -546, -547, -263, -283, -301, 4, -519, -521,
	587, -339, 585, 120, 492, 78, 229, 163, -394, 585,
	-254, 28, 342, 508, 590, -336, 385, -439, 585, 342,
	186, 345, 60, 292, 2, 2, 2, 2, 2, 213,
	-254, 492, 119, 2, 259, 2, 2, 2, 2, 2,
	2, 2, -357, 213, 2, -284, 545, -357, 213, 2,
	-357, 213, 2, -400, 2, 87, -268, 213, 2, -254,
	-293, 213, 2, -288, -290, -297, 213, 2, -295, -254,
	-517, 213, 2, -516, -511, 10, -510, 5, 4, -519,
	-523, -520, -522, 77, -427, 2, -129, 2, 60, -254,
	545, 2, 2, 454, 2, 585, -140, 71, 512, 43,
	449, -414, 2, -415, -250, -251, -252, -470, -253, 247,
	384, 393, 564, 130, 327, 560, -504, -599, 186, 568,
	508, -504, -365, 587, 2, 2, 2, 2, 2, 2,
	-463, 213, -284, 2, -281, -507, 4, -519, -523, -520,
	-524, 28, 31, 32, 33, 35, 37, 38, 39, 40,
	57, 65, 66, 72, 76, 78, 87, 93, 102, 110,
	111, 113, 112, 114, 115, 116, 126, 130, 134, 138,
	139, 143, 146, 150, 167, 169, 182, 185, 186, 201,
	204, 207, 220, 234, 239, 241, 261, 265, 272, 280,
	281, 327, 332, 338, 342, 343, 347, 348, 367, 383,
	399, 420, 444, 451, 469, 486, 492, 502, 508, 510,
	517, 525, 526, 534, 536, 544, 549, 551, 552, 553,
	554, -525, 2, -463, 213, 2, -287, 213, -463, -290,
	2, -268, 2, -280, -507, 2, -306, 213, -284, -286,
	-290, -288, 2, 2, 2, 2, 2, -295, 2, -516,
	213, 2, 545, 241, 508, 590, -355, -298, -299, -503,
	8, -348, -254, 587, -427, 2, -129, -113, 2, 182,
	-427, 213, 2, -129, 213, 2, -427, 213, 2, -129,
	213, 2, -593, 2, -516, 213, -254, 2, 292, 2,
	2, 515, 2, 98, 492, 119, 2, 413, -606, 432,
	519, 2, 2, 2, 2, 2, 2, 2, 492, -273,
	2, -254, 182, 476, -295, 213, -296, 2, 445, -615,
	396, -516, 213, 2, 545, -288, 213, 2, -288, 229,
	243, -268, 213, 2, 497, 495, 497, 495, 186, 2,
	241, 2, 241, 2, -464, 2, -465, -459, -466, 583,
	343, -474, 2, -473, -510, 541, -102, 585, -102, 585,
	449, 585, -516, -284, -284, -427, 2, -129, -113, 2,
	-427, 2, -129, 2, -126, -516, -125, 585, 186, -427,
	2, -129, -113, 2, -427, 2, -129, 2, -206, 182,
	2, 120, 492, -181, 2, 182, 536, 2, 8, 2,
	220, -516, 440, 392, 174, 2, 454, 2, 455, 74,
	-401, 560, 74, 186, 2, 186, 2, -384, 2, 554,
	186, 2, 2, -576, 2, 342, 186, 2, 186, 2,
	186, 2, 186, 2, 186, 2, -180, 450, 513, 491,
	389, 249, 2, -129, 551, -113, 249, 248, -427, 551,
	2, -597, 182, 438, -427, 2, 511, 258, 158, 186,
	-384, 2, 186, 2, 186, 2, 5, 2, 390, 474,
	2, 247, 384, 474, 2, -284, 492, 545, 445, 120,
	28, 2, 2, 2, 88, 89, 186, 2, 186, 2,
	200, 186, 2, 186, 492, 560, 2, -376, -463, -413,
	-414, -413, 508, -342, -344, -181, 454, 2, -218, -374,
	-220, 182, -404, -405, -221, 272, 169, 338, -222, -383,
	28, 138, -383, -383, 60, 586, 586, 11, 12, 76,
	41, 576, 577, 578, 579, 180, 580, 581, 574, 575,
	573, 566, 567, 571, 253, 254, 95, 570, 568, 86,
	286, 431, 170, 171, 172, 173, 410, 227, 34, 228,
	14, 15, 16, -309, 33, 347, 271, 561, 217, 458,
	569, 17, 18, 19, 244, 246, 329, 50, 220, -262,
	358, -308, 489, 67, -427, -427, -427, -427, -427, -427,
	-427, -427, 354, 585, -370, -422, 583, -213, 585, 585,
	585, 585, -503, -213, -427, -441, 586, -362, 585, -213,
	-441, -436, 585, 429, 583, 585, -444, -427, 5, 5,
	5, 585, 587, -557, 555, 182, 585, 585, 585, 585,
	585, 585, 585, 585, 585, 585, 585, 585, 585, 585,
	585, 380, -485, 585, -484, 585, -484, -484, 546, -482,
	585, 563, 556, 585, -482, 585, 585, 585, 585, 585,
	585, 585, 585, 585, 585, 585, 585, 585, 546, 590,
	-554, -339, 585, -366, -468, -427, 578, -366, -366, 342,
	-359, -427, 106, -387, 250, 311, 187, 268, 424, 235,
	-424, 589, -424, -452, 563, -213, -460, -283, -213, -462,
	585, -458, -452, -103, -503, -86, -99, -108, -129, -142,
	-185, -186, 578, -284, 585, 186, 585, 587, -507, 186,
	-348, -268, -284, -300, -301, -306, 2, 137, -359, -572,
	520, 439, 28, 445, -348, -257, 38, -438, -477, -478,
	-528, 589, -527, -480, -490, -486, -489, 370, 374, -509,
	54, 542, -492, 240, 4, -519, -521, 237, 238, 466,
	51, 394, 177, 125, 124, 335, 56, 504, 505, 506,
	507, 190, 191, 58, 543, 478, 69, 70, -572, 520,
	439, 28, 445, -348, 182, -514, 2, -513, -512, 116,
	451, -510, 5, 2, 153, 2, 2, 2, -254, -233,
	590, 64, 418, 153, -357, 213, -233, 153, -233, 153,
	-307, 213, -306, -233, 153, -233, 590, 153, -233, 590,
	153, 587, 590, 153, -514, 2, -400, -506, -359, 38,
	-414, 2, 126, -512, -618, 590, 270, -312, 285, 326,
	209, 343, 558, 336, 130, -515, 5, 4, -437, -449,
	126, 278, 240, -497, -499, 8, -498, 9, -500, 576,
	577, -505, -504, 109, 587, -507, -230, 411, 452, 357,
	-229, 24, 29, 142, 231, 314, 539, 159, -325, 232,
	-322, 361, 153, 470, 529, -586, -587, 436, 499, 500,
	90, 336, 452, 357, 411, 153, -380, -382, 38, 118,
	314, 356, 61, 224, 290, 291, 472, 548, 153, 452,
	357, 411, 357, 24, 142, -245, -242, 452, -587, 99,
	411, 484, 383, -587, -232, 470, 529, -586, -587, 436,
	411, -231, -327, -322, 361, 153, 589, 24, 142, 411,
	452, 357, -602, -603, 29, 411, 357, -580, -551, 554,
	153, -463, 213, -594, -125, 262, 5, 10, -516, -125,
	-355, 590, 590, -507, 578, 438, 437, 153, 153, 153,
	153, 182, 327, 2, 2, 2, 2, 2, 188, -589,
	-607, 2, 2, -284, 213, -341, 342, -575, -356, 492,
	-284, 182, 327, 43, -287, 213, 2, -290, 545, -580,
	327, -289, 213, -284, 38, 585, 327, 2, -400, 2,
	229, -551, 327, -464, -303, -284, -459, -303, 452, -277,
	38, -424, -284, 586, 590, -474, -474, -516, -194, 554,
	186, 102, 585, 585, -206, -471, 590, -470, 220, -517,
	-126, -516, 414, -516, -575, -268, 2, -284, 2, 492,
	251, -516, -194, 220, -516, -516, -516, -506, 28, 455,
	2, -180, 450, 513, 89, 455, 2, -284, 492, 120,
	229, 80, -254, -578, 182, -573, 425, 439, 520, -572,
	-284, 120, -284, 120, -284, 120, -284, -284, 2, 2,
	2, 2, 2, 85, 2, -129, -427, 2, 85, 2,
	46, -597, 182, 2, 511, 2, 511, 2, -254, -254,
	-254, 473, 270, -284, -284, -284, -285, -290, 493, -609,
	2, 186, 182, 2, 492, 229, 492, 229, 120, 186,
	74, 120, 28, 492, 435, -233, 590, -258, -218, -374,
	-506, -375, -374, -219, -218, -221, 182, 393, 530, 314,
	456, 255, -405, -404, 28, -427, -409, 176, 313, -427,
	-407, -429, 576, 577, -498, -500, -358, 336, -212, -212,
	-212, -345, -454, -427, 383, 229, -479, -477, -477, -282,
	-507, 504, -427, -427, -427, -427, -427, -427, -427, -427,
	-427, -427, -427, -427, -427, -427, -427, -427, -427, -427,
	-427, -427, -427, -427, -427, -427, -427, -427, -427, -427,
	-427, -427, -427, -427, -427, -427, -427, -427, 271, 217,
	458, 50, 220, -427, 508, -427, -427, -427, -427, 308,
	327, 332, 517, 167, 527, 138, 336, -621, 486, 40,
	-434, -213, -363, 585, -448, 35, 469, 28, -441, 585,
	2, -422, -427, -423, -310, -308, -254, 576, 577, 578,
	579, 580, 581, 566, 567, 568, 14, 15, 16, 571,
	575, 573, 574, 180, 95, 570, 286, 431, 86, 170,
	171, 172, 173, 253, 254, 17, 18, 19, 34, 569,
	-360, -359, -359, 586, 544, 28, 138, 578, 2, 586,
	590, 38, 586, -427, -360, -440, -436, -359, -447, -446,
	551, -395, -396, 559, 295, 123, 211, 293, -397, 443,
	-501, 8, -507, 578, -558, 175, 204, 585, 586, 2,
	586, 2, 586, -427, 2, 586, -427, 2, 586, -427,
	2, 586, -427, 2, 586, 2, -427, -427, -427, -427,
	-427, -427, -427, -359, 8, -501, -501, 504, 504, -501,
	-501, -501, -493, 370, 371, 372, 373, 273, 274, 275,
	276, 374, 375, 376, 377, 300, 301, 302, 303, 296,
	297, 298, 299, 304, 305, 306, 307, 195, 196, 197,
	198, 191, 192, 193, 194, -493, -389, 2, -495, -359,
	4, 559, 295, 123, 211, 293, 443, 5, -389, 2,
	-390, 2, -427, -359, -391, -428, -429, 576, 577, 569,
	-309, -441, -392, 2, -427, -360, -427, 57, 265, 510,
	-393, -427, 186, -359, -359, 2, -359, 2, -555, 38,
	-359, -351, 590, 186, 38, 4, -351, -351, 585, 586,
	590, -388, 208, 289, 284, 243, -388, -458, -387, 250,
	-385, 352, -385, -385, -452, -269, 583, 591, -507, -452,
	-451, -450, 38, -277, 349, -452, -452, 587, 586, -451,
	584, -570, 585, 588, 588, 588, 588, 588, -284, 585,
	-359, -507, 587, 475, 2, 586, 244, 244, 244, 244,
	430, 586, 508, -574, -293, -297, 493, 2, 554, -101,
	344, 586, 590, -350, 37, 583, 587, -501, 2, 2,
	-496, 546, 585, 585, -396, 585, 186, -574, -297, 493,
	2, -349, 590, 508, -254, 2, -284, -357, -233, 153,
	-357, -357, -233, 590, 153, -268, -288, -293, -295, -297,
	-254, -516, -517, -233, -289, -599, 586, 512, -415, -311,
	393, 468, 412, 447, 488, 8, 9, 8, 9, 590,
	-507, 590, -600, 93, 508, 78, 439, -247, 279, 508,
	-418, 213, 78, -529, -271, 93, -530, -254, 72, 526,
	383, 185, 151, -600, 93, 383, -600, 93, 2, 231,
	93, 452, 473, 28, 60, -463, 41, 41, 28, -598,
	325, 266, 550, 186, 560, 492, 229, 439, 508, 508,
	-463, -382, -477, 118, 290, 291, 60, -502, -497, 576,
	577, -502, 60, -502, -502, -502, 554, -287, -463, 439,
	508, 508, 508, 402, 402, -242, 508, 508, -619, 568,
	402, 590, 41, 41, 28, -598, 325, 266, 186, 508,
	-306, -269, 540, 42, 540, 42, 540, 508, 42, 439,
	508, 590, 42, 508, 508, -581, -259, 105, 320, 283,
	321, 97, 317, 96, 316, 103, 318, 104, 319, 547,
	330, 63, 315, 294, 322, -260, -261, 363, 538, -516,
	452, 357, 411, 153, 220, -471, 220, -471, -298, -254,
	587, -129, -427, -427, -129, -427, -129, 46, 153, 2,
	-615, 259, 585, -315, 327, 186, -348, -472, 241, 590,
	-356, -572, 153, -513, -381, -380, 327, -289, 213, 2,
	153, -339, 327, 147, 585, 391, 2, 153, -270, 213,
	-255, -254, -400, -236, 496, 153, -378, 536, -410, -129,
	585, 126, 38, -410, -367, -368, -469, -369, -271, 585,
	-277, -424, -102, -473, 586, 586, 586, -193, 346, -192,
	-254, 5, -206, 536, -314, -419, -418, -533, -534, -529,
	271, 229, 526, 243, 168, -340, -272, -271, 119, -200,
	554, -125, -126, 586, -471, 220, 476, -194, -194, -471,
	-471, -284, 182, -516, -194, -194, -194, 2, 2, 2,
	2, -384, -284, -268, -306, -284, 587, -348, -348, -297,
	-293, -384, -268, -384, -268, -384, -268, -129, -427, 2,
	449, 182, 182, 587, -384, 391, 120, 492, 361, 229,
	-284, -306, -284, -306, -268, 120, -268, 121, -284, -463,
	-375, -219, 343, 255, 456, -407, -408, -429, 429, 430,
	-408, 429, 430, 8, 9, 8, 9, -223, 460, 331,
	-357, 590, -227, 39, 134, 255, -284, 560, 149, -427,
	-427, 508, -621, 486, -434, 149, -427, 308, 332, 517,
	167, 527, 138, 336, 186, 585, -428, -428, 586, -361,
	-427, -427, 584, 593, 586, 587, 586, -344, 590, -342,
	-427, -359, -359, 586, 587, -359, -348, 584, 584, 590,
	586, -445, -446, 143, -427, 508, 508, 508, 508, 585,
	586, 587, -563, 353, 585, 585, -427, 586, 586, 586,
	586, 38, 590, 590, 590, 586, 590, 590, 590, 586,
	586, 586, 590, 586, 560, 560, 586, 586, 586, 586,
	590, 586, 590, 586, 186, 586, 586, -398, 367, 586,
	11, 12, 576, 577, 578, 579, 180, 580, 581, 574,
	575, 573, 566, 567, 568, 86, 286, 431, 14, 15,
	16, -309, 244, 220, -428, -428, -428, -428, 586, -432,
	-433, 186, 182, 38, -393, -393, -393, 586, 186, -359,
	586, 586, 585, -556, 288, 327, 586, -421, -420, 552,
	-468, -352, 2, -458, -279, -507, -421, -421, -359, -427,
	250, 250, -386, 536, 342, -388, -458, -451, -503, -426,
	-425, 184, 39, 134, 323, 216, -451, -277, -339, -451,
	-451, -507, -452, -452, -450, 586, -571, -503, 586, -353,
	-461, -550, -344, 587, -507, -203, -551, -182, 5, 332,
	-182, -182, -182, -348, 508, 508, 220, 25, 368, -477,
	583, 584, 8, -507, 585, -501, -501, -501, -348, 186,
	186, 220, 186, -513, -513, 2, -233, -357, -233, -233,
	-306, -307, -233, -233, -233, -379, 554, -504, -414, 524,
	83, 393, 504, -504, -229, 411, -271, -271, -284, -294,
	-254, 199, 403, -513, 327, -418, 213, -235, 327, -477,
	-278, -254, 585, -402, 556, 255, 255, 536, -271, -278,
	255, 213, -271, 213, -278, 2, -278, -582, 393, 337,
	-427, 60, -323, 277, 391, 328, -230, 411, 452, 357,
	-129, -129, -129, -129, -129, 585, -599, 536, 137, -284,
	-306, -284, -294, -513, -289, 452, 357, 411, 324, -300,
	-502, -502, -380, 452, 357, 411, -294, -513, -287, -513,
	-241, 213, -254, -241, 213, 439, -268, 402, 560, 45,
	-619, -231, -129, -129, -129, -129, -129, 585, -269, -232,
	411, 5, 213, -271, 5, -271, 213, 5, -254, -271,
	-294, -513, -603, 24, 142, -271, -294, -513, -259, -516,
	332, 532, -580, 439, 508, 508, -463, -125, -197, 554,
	-125, -191, 225, 578, -577, -254, 545, -254, -313, -316,
	-314, -271, -209, -210, 556, 554, 153, -304, -284, 583,
	-194, -516, -284, -472, -295, -296, 153, -339, 327, -516,
	38, 153, 585, 2, 2, -288, 342, 327, -270, 213,
	-237, 144, -619, -268, -421, -352, -377, -412, 420, 342,
	-340, 541, -277, -377, -354, 590, 186, 568, 587, -340,
	-467, 578, -102, -102, -194, 590, 585, 568, 568, 585,
	-516, -516, 586, 590, -235, -284, -270, 229, 229, -276,
	-255, 586, 590, 587, 585, -202, 346, -201, 145, 257,
	242, 462, 463, 464, 465, 136, 461, -471, -200, -126,
	186, 186, -61, 554, 492, -194, 589, -254, -384, -384,
	-384, 449, 449, -254, -280, -268, -284, -281, -306, 182,
	182, -268, 530, -408, 343, 282, -454, -228, 562, -284,
	589, -427, -427, 149, 149, -427, -428, -428, -427, 149,
	186, 585, -427, -438, 33, 33, 586, 590, -423, -427,
	-308, 586, 544, -344, -344, 586, 578, -507, 589, 586,
	-436, 146, -427, 502, 295, 211, 293, -397, 293, -397,
	-397, -501, 5, -507, 578, -564, -274, 585, -254, 552,
	-343, 348, 586, -479, -477, -427, -427, -427, -427, -427,
	-501, -482, -482, -497, -497, -427, -432, -427, -479, -477,
	-428, -428, -428, -428, -428, -428, -428, -428, -428, -428,
	-428, -428, -428, -428, -428, -428, -428, -428, -428, -428,
	138, 327, 336, -428, -433, -432, -427, -427, -477, 586,
	586, 586, -359, -101, 585, 288, -371, 204, -427, -471,
	590, -371, -371, 586, -458, -458, 585, -427, 250, 584,
	590, 592, 568, -339, 587, -450, -451, 584, 586, 590,
	586, 590, -411, 38, 586, -507, -421, -205, -204, 135,
	53, 107, 133, 332, -348, -348, 439, 345, 5, 8,
	583, 584, 587, -501, 586, 586, 586, -348, -348, 439,
	-348, -233, -233, 119, 314, -427, 508, 508, 60, 220,
	153, 327, 538, -535, -530, 151, -427, 585, 229, 585,
	585, 2, -225, -226, 142, 452, 24, -601, 2, 536,
	153, -233, 153, -233, 558, -323, 585, 585, 508, 439,
	-247, 508, 554, -359, -427, -195, 126, -506, -587, 589,
	-587, 589, 439, 508, 508, 439, 508, 508, 327, 153,
	554, 166, 166, 560, -241, 554, -359, 508, -481, 48,
	26, 327, -288, -233, 153, 508, 508, 520, 452, -516,
	332, -294, -513, -289, 452, 357, 411, -471, -199, 346,
	-198, 145, 422, 136, 257, 222, -471, -197, 186, 241,
	554, -289, 2, 586, 586, 590, -536, 38, 340, 340,
	585, -284, -82, 554, -470, -503, -583, 554, 43, -287,
	38, 153, -580, -129, -289, -475, -476, 5, 38, -284,
	153, 342, 327, -238, 264, -619, -511, -551, -344, -377,
	-366, 328, 91, 586, -421, -368, -352, -427, 2, 586,
	-192, -193, -516, -516, -516, -194, -206, -206, -419, -317,
	585, -270, -255, 585, -206, -272, 2, -517, 590, 585,
	568, 568, 568, -200, -471, -125, -129, 346, -284, 578,
	-384, -329, -328, 361, 336, -329, 429, 429, 343, 176,
	260, -227, -269, -427, -427, 149, 33, 33, -427, -427,
	-438, 586, -427, -427, -359, 584, 5, -427, 586, 586,
	8, -427, 586, 587, -565, -254, -427, 586, 60, 586,
	586, 590, 590, 586, 586, 586, 586, 586, 586, 586,
	-433, 186, 138, 336, 585, 586, 586, -101, -435, 207,
	60, -458, -435, -435, -386, -348, -458, -425, -269, 583,
	-507, -503, -461, 585, 587, -204, 568, -516, -516, 554,
	-297, 584, 2, 583, -507, 586, -297, 119, -271, -271,
	492, 429, -241, 383, -418, 153, -537, 93, -539, 76,
	168, 102, 327, 332, 526, 383, 72, 126, 399, -611,
	38, 565, 586, -346, -455, -550, 585, -254, -346, -348,
	327, 481, 126, 327, 126, 549, 119, 2, 520, 79,
	-271, -278, -348, -348, -284, -294, -513, 160, 586, 590,
	568, 2, 578, 578, -294, -513, -289, -294, -513, -287,
	153, -241, 359, 166, 160, 586, -269, 5, 5, 153,
	-266, 76, -271, 5, -271, -288, 119, 439, 508, 508,
	-197, 590, 585, 568, 568, -197, -517, -125, 2, -339,
	-330, 231, -271, -534, -531, -532, 383, -538, -540, 168,
	383, -129, 2, -208, -207, -254, 5, 585, -315, 346,
	584, -585, 346, -584, 117, 136, -513, -381, -129, -289,
	-339, 586, 590, 147, -403, 536, -269, -284, 153, -239,
	263, -619, -511, -236, -406, -404, 139, 585, 342, -129,
	-344, 568, 586, 586, 119, 119, 223, 152, -346, 585,
	585, -348, 119, 586, -201, -202, -516, -125, -516, -200,
	-471, -62, -63, 229, 93, 366, -281, 492, 229, 585,
	585, -227, -427, -427, -427, 586, -344, -507, 578, -559,
	361, 586, -454, -427, -427, -428, 186, 585, -438, 586,
	-560, 553, -427, -372, -373, -427, 428, 108, 205, -560,
	-560, 586, -503, 2, -516, 2, 508, 583, 2, 186,
	220, 38, 402, -418, -278, -282, -275, -254, 168, 213,
	332, 549, -402, 255, 585, -428, -284, 585, 2, 30,
	-612, 130, 234, 586, 590, -456, -265, -254, -427, -456,
	586, 586, 332, 332, 549, -427, -477, 585, -233, -233,
	586, 586, -427, 508, -506, 100, -504, 2, -587, -241,
	-268, -427, 508, 5, -233, -282, -233, -233, -266, 520,
	-294, -513, -289, -198, -199, -516, -125, -197, 38, -320,
	233, 2, -536, 255, -275, 255, -610, 554, 586, 590,
	568, 568, -313, -209, -83, -84, 509, -470, 590, 585,
	568, -339, 38, 5, 585, 585, -254, 342, 585, -269,
	-249, 92, -619, -511, -237, -377, 328, -348, 93, -406,
	-434, -194, 585, 585, -318, 81, 94, 127, 212, 189,
	230, 473, 479, 28, -318, 586, -346, -346, 586, 585,
	-194, 586, 590, 28, 585, 28, 585, -284, -306, -359,
	-359, 586, -344, 60, 590, 586, 586, -428, -438, 586,
	-561, -562, -274, 590, 585, 585, 453, 584, -348, 2,
	-348, -241, 383, -254, -539, -275, 327, 536, -427, -256,
	585, -427, 38, 234, 131, 218, -417, -613, 101, 482,
	221, -455, -227, 586, -416, 536, 399, -266, -346, 585,
	585, 585, 568, 186, 585, -481, -233, -288, 586, -592,
	397, -129, -324, -325, 220, 585, -319, 342, 119, 314,
	-207, -504, -504, 586, 38, -84, 9, -584, -585, -427,
	38, -129, -475, -346, -284, -346, 342, -243, -242, 272,
	-511, -238, 586, -278, -377, -517, -517, -416, 586, 586,
	-517, -63, -348, -348, 586, 586, -566, 391, 430, 206,
	-359, -345, 586, 590, 38, -373, 2, 2, 2, 402,
	153, 208, 586, -541, 287, -254, 586, 131, 218, -320,
	585, -228, -456, -320, 208, -284, -588, 536, 586, -332,
	-331, -328, -334, -333, -328, -359, -504, 100, 359, -359,
	-266, -595, 187, -594, 5, 10, -209, 359, -347, -457,
	-271, 82, 119, -330, -129, 586, -129, 586, 586, -403,
	586, -284, -240, -518, 402, 404, -619, -239, -421, 586,
	586, -417, -416, -326, -322, 586, 586, 586, 586, -567,
	-568, 50, 523, 109, -427, -567, -567, -562, -564, 168,
	554, -542, -545, -544, 342, 459, 187, 360, 586, 481,
	548, -326, -348, 554, -339, -427, -416, 586, 590, 541,
	586, 590, 541, 586, 186, 586, -233, -196, 554, 46,
	-319, -284, 586, 590, 382, 132, 142, -320, -610, -416,
	585, -417, 585, -246, -245, -619, -497, -249, 139, -194,
	-194, -320, -417, -210, 554, -194, -569, 151, -568, 379,
	181, 429, 379, 181, -569, -569, -275, 55, -544, 342,
	-545, 342, 530, 132, -612, 586, 55, -541, -320, -331,
	220, -333, 186, 359, 437, -594, 30, -248, -247, 585,
	-457, 430, 430, 2, -324, -319, -417, -346, -320, -346,
	-244, -348, -243, 328, 530, -326, -320, -421, 109, 204,
	503, 314, 33, 568, -543, 314, 418, 64, 452, -543,
	-421, 568, -542, 585, 585, 346, -348, 2, -209, -320,
	586, -326, 586, -240, 452, -210, -326, 429, 350, -568,
	-427, 23, 332, 126, -427, -612, -359, -359, -193, 585,
	586, -319, -326, -416, -210, -417, -246, -367, -421, -210,
	586, 586, -193, -234, 64, 418, -248, -210, -417, -421,
	-320, -421, -421, -321, -322, 508, 586, -421, -320, -326,
	585, -326, -210, -359, -210, -421, 586, -421, -321,
}

var sqlDef = [...]int{
	-2, -2, 1, 2, 3, 4, 6, 7, 8, 10,
	12, 14, 16, 18, 20, 22, 24, 26, 28, 30,
	31, 32, 33, 34, 542, 543, 545, 546, 547, 549,
	550, 552, 554, 556, 557, 558, 560, 561, 563, 564,
	565, 566, 567, 569, 571, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, -2, 0, 0,
	638, 640, 0, 1338, 1340, 1342, 1344, 0, 783, 0,
	36, 37, 39, 0, -2, 327, 329, 331, 0, 358,
	360, 361, 363, 365, 366, 367, 369, -2, 0, 475,
	476, 478, 480, -2, 0, 979, 981, 0, 627, 629,
	0, 984, 986, 0, 0, 649, 650, 0, 1445, -2,
	643, 645, 647, 712, 714, 716, 718, 720, 722, 724,
	726, 728, 729, 731, 733, 735, 737, 739, 740, 742,
	744, 746, 747, 749, 750, 752, 754, 756, 758, 760,
	762, 764, 766, 768, 770, 772, 774, 776, -2, 779,
	780, -2, -2, 0, -2, -2, -2, 1356, 41, 43,
	45, 47, 49, 51, 53, 55, 57, 419, 421, 423,
	425, 427, 430, 432, 434, 1503, 482, 484, 486, 488,
	490, 492, 494, 0, -2, 1517, 0, 0, 59, 60,
	61, 62, 63, 64, 65, 66, 67, 68, 69, 103,
	104, 105, 106, 107, 108, 109, 110, 73, 74, 75,
	77, 78, 79, 80, 84, 85, 86, 87, 88, 89,
	90, 91, 101, 71, 0, 0, 1476, 1478, 1480, 1482,
	-2, 0, 0, 5, 9, 11, 13, 15, 17, 19,
	21, 23, 25, 27, 29, 544, 548, 551, 553, 555,
	559, 562, 568, 570, 572, 527, 528, 531, 2208, 2226,
	2227, 2228, 2231, 2232, 2233, 2234, 2235, 2236, 2679, 2761,
	2762, 2258, 2259, 2260, 2261, 2262, 2263, 2264, 2265, 2266,
	2267, 2268, 2269, 2270, 2271, 2272, 2273, 2274, 2275, 2276,
	2277, 2278, 2279, 2280, 2281, 2282, 2283, 2284, 2285, 2286,
	2287, 2288, 2289, 2290, 2291, 2292, 2293, 2294, 2295, 2296,
	2297, 2298, 2299, 2300, 2301, 2302, 2303, 2304, 2305, 2306,
	2307, 2308, 2309, 2310, 2311, 2312, 2313, 2314, 2315, 2316,
	2317, 2318, 2319, 2320, 2321, 2322, 2323, 2324, 2325, 2326,
	2327, 2328, 2329, 2330, 2331, 2332, 2333, 2334, 2335, 2336,
	2337, 2338, 2339, 2340, 2341, 2342, 2343, 2344, 2345, 2346,
	2347, 2348, 2349, 2350, 2351, 2352, 2353, 2354, 2355, 2356,
	2357, 2358, 2359, 2360, 2361, 2362, 2363, 2364, 2365, 2366,
	2367, 2368, 2369, 2370, 2371, 2372, 2373, 2374, 2375, 2376,
	2377, 2378, 2379, 2380, 2381, 2382, 2383, 2384, 2385, 2386,
	2387, 2388, 2389, 2390, 2391, 2392, 2393, 2394, 2395, 2396,
	2397, 2398, 2399, 2400, 2401, 2402, 2403, 2404, 2405, 2406,
	2407, 2408, 2409, 2410, 2411, 2412, 2413, 2414, 2415, 2416,
	2417, 2418, 2419, 2420, 2421, 2422, 2423, 2424, 2425, 2426,
	2427, 2428, 2429, 2430, 2431, 2432, 2433, 2434, 2435, 2436,
	2437, 2438, 2439, 2440, 2441, 2442, 2443, 2444, 2445, 2446,
	2447, 2448, 2449, 2450, 2451, 2452, 2453, 2454, 2455, 2456,
	2457, 2458, 2459, 2460, 2461, 2462, 2463, 2464, 2465, 2466,
	2467, 2468, 2469, 2470, 2471, 2472, 2473, 2474, 2475, 2476,
	2477, 2478, 2479, 2480, 2481, 2482, 2483, 2484, 2485, 2486,
	2487, 2488, 2489, 2490, 2491, 2492, 2493, 2494, 2495, 2496,
	2497, 2498, 2499, 2500, 2501, 2502, 2503, 2504, 2505, 2506,
	2507, 2508, 2509, 2510, 2511, 2512, 2513, 2514, 2515, 2516,
	2517, 2518, 2519, 2520, 2521, 2522, 2523, 2524, 2525, 2526,
	2527, 2528, 2529, 2530, 2531, 2532, 2533, 2534, 2535, 2536,
	2537, 2538, 2539, 2540, 2541, 2542, 2543, 2544, 2545, 2546,
	2547, 2548, 2549, 2550, 2551, 2552, 2553, 2554, 2555, 2556,
	2557, 2558, 2559, 2560, 2561, 2562, 2563, 2564, 2565, 2566,
	2567, 2568, 2569, 2570, 2571, 2572, 2573, 2574, 2575, 2576,
	2577, 2578, 2579, 2580, 2581, 2582, 2583, 2584, 2585, 2586,
	2587, 2588, 2589, 2590, 2591, 2592, 2593, 2594, 2595, 2596,
	2597, 2598, 2599, 2600, 2601, 2602, 2603, 2604, 2605, 2606,
	2607, 2608, 2609, 2610, 2611, 2612, 2613, 2614, 2615, 2616,
	2617, 2618, 2619, 2620, 2621, 2622, 2623, 2624, 2625, 2626,
	2627, 2628, 2629, 2630, 2631, 2632, 2633, 2634, 2635, 2636,
	2637, 2638, 2639, 2640, 2641, 2642, 2643, 2644, 2645, 2646,
	2647, 2648, 2649, 2650, 2651, 2652, 2653, 2654, 2655, 2656,
	2657, 2658, 529, 530, 1156, 0, 596, 594, 2193, 597,
	2480, 599, 601, 469, 470, 471, 472, 473, 474, 0,
	620, 610, 1515, 621, 623, 624, 625, 626, 591, 589,
	0, 620, 2262, 618, 1336, 1337, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 481, 0, 0, 0, 0, -2,
	0, 0, 0, 0, 0, 0, 0, 398, 1205, 1206,
	1207, 1321, 1322, 2524, 1363, 0, 227, 639, -2, -2,
	-2, 2644, -2, 671, -2, 678, 2648, 2527, 683, 0,
	685, -2, 688, 1339, 1341, 1343, 781, 782, 2212, 0,
	0, 0, 0, 0, 38, 40, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 235, 237, -2, -2, -2, -2, 0, 0,
	2572, 2314, 2161, 2228, 2164, 2159, 328, 330, 332, 333,
	0, 0, 0, 0, 0, 0, 359, 362, 364, 368,
	-2, 370, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 397, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, -2, -2, 0, 0, 0, 0,
	0, 0, 0, 0, 1040, 1032, 1033, 1263, 0, 0,
	0, -2, 477, 479, 532, 533, 0, 1504, 1504, 540,
	541, -2, 0, 0, 0, 0, 298, 285, 980, 982,
	983, 0, 0, 0, 0, 628, 630, 0, 0, 266,
	985, 987, 988, 0, 0, 0, 0, 0, 300, 0,
	0, 644, 646, 648, 713, 715, 717, 719, 721, 723,
	725, 727, 730, 732, 734, 736, 738, 741, 743, 745,
	748, 751, 753, 755, 757, 759, 761, 763, 765, 767,
	769, 771, 773, 775, 777, 778, 789, 0, 0, 0,
	0, 0, -2, -2, 0, 0, 0, -2, -2, -2,
	-2, 0, 0, 0, 0, 0, 0, 0, -2, 0,
	0, 882, 0, 0, 0, -2, -2, -2, 0, 0,
	0, 0, 0, -2, -2, 0, 0, 0, 0, -2,
	960, 0, 0, 792, 794, 795, 796, 0, 855, 880,
	881, 890, 0, 1196, 1505, 1365, 1346, 1360, 1365, 1348,
	1349, 1350, 1351, 1352, 1357, 1359, 1353, 1354, 1355, 42,
	44, 46, 48, 50, 52, 54, 56, 58, 420, 422,
	424, 426, 428, 431, 433, 435, -2, 1474, 1475, 483,
	485, 487, 489, 491, 493, 495, 631, 0, 633, 0,
	793, -2, 0, 1509, 1509, 1509, 0, 0, 1475, 1473,
	0, 636, 637, 692, 693, 1777, 0, 0, 0, 0,
	0, 0, 0, 0, 2035, 1865, 0, 694, -2, 1898,
	1900, 2619, 2454, 2644, 2034, 1902, 1903, 1904, 1905, 1906,
	0, 1908, 1909, 1910, 1911, 1912, 1913, 0, 1915, 0,
	1920, 1921, 1922, 0, 2626, 2138, 2222, -2, 0, 0,
	2632, 2218, 0, 2001, 1938, -2, -2, 2245, 2224, 1709,
	1710, 1711, 1712, 1713, -2, -2, 2662, 1942, 1943, 1944,
	1945, 1946, 1947, 1948, 1949, 1950, 1951, 1952, 0, 2607,
	2627, 2628, 2633, 2635, 2629, 2616, 1963, 2327, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, 1736, 1745, -2, -2, -2, -2, -2, -2, -2,
	2620, 2621, 2638, 2641, 2647, 2652, 2653, 2625, 2634, 2661,
	2663, 2664, 2665, 2666, 2667, 2668, 2669, 2670, 2671, 2672,
	2673, 2674, 2675, 2676, 2677, 2678, 1737, -2, -2, -2,
	-2, 1492, 2493, 1495, 1156, 1493, 1477, 1479, 0, 1481,
	0, 0, 0, 1486, 1512, 1510, 0, 1561, 1490, 1491,
	1579, 1579, 1603, 0, 1584, 0, 1603, 1504, 1630, 0,
	1590, 2516, 1939, 1940, 0, 2228, 2223, -2, -2, 2659,
	0, 0, 0, 0, 0, 0, 0, 0, 592, 0,
	598, 600, 0, 0, 0, 619, 1514, 0, 0, 0,
	0, 0, 0, 0, 401, 402, 403, 404, 405, 2627,
	0, 0, 0, 410, 0, 412, 413, 414, 415, 416,
	417, 418, 196, 2627, 500, 525, 0, 196, 2627, 503,
	196, 2627, 506, 0, 509, 1261, 196, 2627, 512, 2189,
	196, 2627, 515, 517, 2197, 196, 2627, 521, 2204, 2202,
	522, 2627, 524, 303, 301, 302, 2241, 2242, 2249, 2250,
	2251, 2252, 2660, 2662, 1332, 1333, 1334, 1335, 0, 1362,
	1262, 641, 642, 0, 666, 0, 670, 2615, -2, 0,
	2536, -2, 674, 1366, 1370, 1371, 1372, 1373, 1374, 0,
	0, 0, 0, 1379, 0, 0, 680, 0, 0, 667,
	668, 686, 689, 0, 784, 785, 786, 787, 788, 70,
	0, 2627, 1630, 72, 0, 2183, 2253, 2254, 2255, 2256,
	2257, 2680, 2681, 2682, 2683, 2684, 2685, 2686, 2687, 2688,
	2689, 2690, 2691, 2692, 2693, 2694, 2695, 2696, 2697, 2698,
	2699, 2700, 2701, 2702, 2703, 2704, 2705, 2706, 2707, 2708,
	2709, 2710, 2711, 2712, 2713, 2714, 2715, 2716, 2717, 2718,
	2719, 2720, 2721, 2722, 2723, 2724, 2725, 2726, 2727, 2728,
	2729, 2730, 2731, 2732, 2733, 2734, 2735, 2736, 2737, 2738,
	2739, 2740, 2741, 2742, 2743, 2744, 2745, 2746, 2747, 2748,
	2749, 2750, 2751, 2752, 2753, 2754, 2755, 2756, 2757, 2758,
	2759, 2760, 76, 0, 2627, 81, 0, 2627, 0, -2,
	92, 0, 102, 0, 2186, 111, 0, 2627, 0, 2158,
	-2, 0, 208, 286, 287, 288, 289, 0, 1007, -2,
	2627, 1204, 0, 0, 0, 0, 970, 2155, 2160, 971,
	2179, 972, 2165, 0, 334, 335, 336, 337, 338, 0,
	339, 2627, 341, 342, 0, 344, 345, 2627, 347, 348,
	0, 350, 0, 249, 250, 2627, 372, 374, 0, 376,
	377, 0, 379, 0, 0, 0, 383, -2, 399, 0,
	396, 386, 387, 389, 390, 391, 392, 393, 0, 439,
	437, 2194, 0, 0, -2, 2627, 0, 1004, 0, 0,
	1241, -2, 2627, 1201, 0, 1248, 2627, 1244, 0, -2,
	0, 1502, 2627, 1383, 1036, 1037, 1038, 1039, 1642, 466,
	0, 1410, 0, 1412, 0, 1431, 1636, 1579, 0, 0,
	1641, 0, -2, 585, 2211, -2, 535, 0, 536, 0,
	-2, 0, 315, 0, 0, 989, 990, 991, 992, 993,
	996, 997, 998, 999, 1616, 267, 269, 0, 0, 1323,
	1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 0, 0,
	651, 0, 0, 790, 791, 0, 0, 801, 802, 803,
	0, 315, 2528, 2489, 2348, 810, 0, 813, 816, -2,
	0, 0, 0, 0, 820, 0, 825, 826, 827, 0,
	0, 831, 833, 978, 835, 0, 0, 837, 0, 841,
	0, 844, 0, 846, 0, 848, -2, -2, -2, 856,
	857, -2, 862, -2, 0, 866, -2, 0, 869, 0,
	872, -2, 0, 882, 878, 879, 0, 0, 0, 0,
	898, 899, 0, 908, 0, 911, 912, 913, 0, 915,
	916, 0, 918, 919, 920, 921, 0, 2599, 2533, 2314,
	0, 927, 929, 931, 0, -2, 0, 947, 0, 951,
	0, 0, 959, 0, 0, 797, 798, 196, 1634, 1345,
	-2, 1347, 0, -2, 0, 632, 0, 635, 1534, 1460,
	1457, 0, 1531, 1532, 1461, 0, 0, 0, 1468, 0,
	1507, 1508, 0, 0, 0, 1447, 1448, 0, 0, 0,
	0, 2040, 2041, 2042, 2043, 2056, 2044, 2045, 2055, 2053,
	2054, 2046, 2047, 2052, 2066, 2067, 2057, 2058, 2048, 2061,
	2059, 2060, 2062, 2063, 2064, 2065, 0, 0, 2071, 0,
	2049, 2050, 2051, 2079, 0, 0, 2080, 0, 2082, 0,
	2072, 2068, 2069, 2070, 0, 1844, 1846, 2146, 0, 0,
	0, 2078, 2073, 2074, 1782, 1783, 1784, 1785, 1786, 1819,
	1823, 1824, 0, 0, 1899, 2143, 2142, 1901, 0, 0,
	2094, 0, 1914, -2, 0, 2035, 2089, 0, 0, 1923,
	1924, 1925, 0, 0, 2094, 0, 0, 2137, 1935, 1936,
	1774, 0, 0, 2003, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1723, 1722, 0, 1724, 0, 1725, 1726, 1733, 1746,
	0, 0, 0, 0, 1750, 0, 0, 0, 0, 0,
	0, 0, 2118, -2, 0, 0, 0, 0, 1738, 0,
	1494, 0, 0, 1565, 2147, 2151, 2152, 1565, 1565, 0,
	0, 2095, 1627, 1627, 0, 0, 1622, 1622, 1622, 1620,
	1603, 0, 1603, 1613, 0, 1603, 1603, 0, -2, 1584,
	0, 0, 1613, 0, 1597, 573, 575, 577, 579, 580,
	581, 583, 1631, 1632, 0, 0, 0, 0, 2229, 0,
	0, 0, 0, 0, 2214, 0, 355, 0, 0, 0,
	2582, 2527, 0, -2, 603, 622, 1504, 0, 2097, 1657,
	1661, 0, 1663, 1664, 1665, 1666, 1667, 0, 0, 1658,
	-2, 1734, 1736, 1757, 2246, 2247, 2248, 1717, 1718, 1719,
	1720, 1721, 1729, 1716, 1716, 1716, 1727, 1756, 1748, 1756,
	1752, 1702, 1703, 1704, 1739, 1740, 1741, 1742, 0, 2582,
	2527, 0, -2, 612, 0, 0, 1442, 212, 214, 215,
	216, 217, 218, 400, 0, 407, 408, 409, 0, 496,
	0, 194, 195, 0, 196, 2627, 501, 0, 504, 0,
	196, 2627, 2153, 510, 0, 513, 0, 0, 519, 0,
	0, 0, 0, 0, 196, 1444, 0, 0, 0, 0,
	-2, 676, 681, 682, 0, 1368, 0, 1375, 703, 704,
	705, 1377, 1378, 0, 1380, 679, 706, 707, 708, 709,
	710, 711, 0, 2167, 2168, 2169, 2170, 2173, 2174, 0,
	0, 677, 696, 684, 0, 690, 112, 1318, 0, 0,
	155, 0, 1318, 1318, 0, 0, 0, 0, 181, 0,
	1075, 0, 0, 0, 0, 127, 140, 151, 124, 125,
	0, 0, 0, 0, 0, 0, 82, 1178, 0, 1181,
	0, 0, 0, 0, 0, 0, 0, 1194, 0, 0,
	0, 0, 0, 0, 0, 98, 99, 0, 139, 0,
	0, 1407, 0, 134, 114, 0, 0, 127, 141, 153,
	0, 185, 187, 1072, 0, 0, 0, 0, 0, 0,
	0, 0, 207, 219, 0, 0, 0, 1202, 0, 1501,
	0, 0, 2627, 0, 1616, 2396, -2, -2, 267, 1616,
	969, 0, 0, 2229, 2163, 0, 0, 0, 0, 0,
	0, 0, 0, 375, 378, 380, 381, 382, 0, 1240,
	0, 388, 429, 1127, 2627, 0, 0, 456, 451, 0,
	453, 0, 0, 0, 1177, 2627, 1175, 2198, 0, 1199,
	0, 1156, 2627, 2196, 0, 0, 0, 1249, 2238, 1258,
	1262, 1397, 0, 468, 0, 1413, 1415, 0, 0, 1637,
	0, 1639, 1579, 1504, 0, 0, 0, 0, 291, 0,
	0, 0, 0, 0, 0, 273, 0, 1615, 0, 0,
	1616, 267, 2504, 315, 315, 1616, 653, 1616, 655, 0,
	0, 804, 805, 0, 315, 315, 315, 811, 812, 814,
	815, -2, -2, -2, -2, 817, 818, 905, 0, 0,
	0, 904, 830, 834, 0, 963, 2512, 2527, 2582, 976,
	905, 2314, 905, 2314, 905, 2314, 845, 847, 850, 893,
	901, 861, 868, 0, 863, 867, 870, 873, 0, 875,
	883, -2, 0, 885, 0, 887, 0, 889, 905, 906,
	909, 914, 917, 922, 923, 924, 925, 2209, 926, 0,
	938, 943, 944, 940, 0, 0, 0, 0, 0, 0,
	954, 955, 0, 0, 962, 1195, 0, 1358, 1534, 1460,
	634, 1451, 1533, 1452, 1459, 1462, 0, 0, 1464, 0,
	1466, 0, 1529, 1530, 1537, 1538, 0, 1548, 1549, 1541,
	0, -2, 0, 0, 1544, 1545, 1470, 0, 1487, 1488,
	1489, 1518, 1521, 1277, 0, 2761, 1778, 1652, 1779, 1780,
	2182, 0, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794,
	1795, 1796, -2, -2, -2, -2, -2, -2, -2, -2,
	1805, 1806, 1807, 1808, 1809, 1810, 1811, 1812, 1813, 1814,
	1815, -2, -2, -2, 1820, 1821, 1822, -2, 2081, 2083,
	0, 2146, 0, -2, 0, -2, -2, -2, -2, 1841,
	0, 1843, 1848, 1850, 1852, 0, 0, 0, 0, 2145,
	1862, 2129, 2130, 0, 0, 2037, 2038, 2039, 1847, 0,
	1866, 2144, 2141, 0, 0, 2075, 0, 2040, 2041, 2042,
	2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052,
	2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062,
	2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072,
	0, 2093, 1517, 1927, 0, 0, 0, 0, 1934, 1919,
	2091, 0, 2090, 0, 0, 0, 2101, 0, 2136, 2132,
	0, 2180, 1773, 1760, 1761, 1762, 1763, 1764, 1765, 1775,
	0, 2177, 2215, 2221, 2011, 0, 0, 0, 1964, 1965,
	1966, 1967, 1968, 0, 1970, 1971, 0, 1973, 1974, 0,
	1976, 1977, 0, 1979, 1980, 1981, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1670, 1671, 1672, 1673, 1674, 1675, 1676,
	1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686,
	1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696,
	1697, 1698, 1699, 1700, 1701, 0, 0, 1983, 0, 2104,
	-2, -2, -2, -2, -2, -2, -2, -2, 0, 1985,
	0, 1987, 2095, 2115, 0, 0, 1867, 0, 0, 0,
	0, 2035, 0, 1990, 2095, 2123, 0, 0, 0, 0,
	0, 2095, 0, 2128, 0, 1997, 0, 1999, 1496, 0,
	0, 1647, 0, 0, 0, 2150, 1647, 1647, 0, 1560,
	0, 0, 1623, 1624, 1625, 1626, 0, 0, 1627, 0,
	1617, 1621, 1618, 1619, 1613, 1576, 0, 0, 2184, 1613,
	1582, 1612, 0, 1156, 1602, 1613, 1613, 0, -2, 1586,
	1603, 0, 0, 574, 576, 578, 582, 584, 0, 0,
	1517, -2, 0, -2, 317, 1155, 0, 0, 0, 0,
	593, 595, 0, 0, 516, 0, 0, 609, 0, 587,
	0, 590, 0, 1648, 1651, 0, 0, 1662, 1668, 1669,
	0, -2, 0, 0, 1758, 0, 0, 0, 0, 0,
	617, 0, 0, 0, 0, 411, 526, 196, 498, 0,
	196, 196, 507, 0, 0, 196, 518, 196, 2205, 196,
	2203, 304, 523, 1443, 230, 0, 669, 0, 1367, 1376,
	0, 700, 0, 702, 0, 2171, 2175, 2172, 2176, 0,
	691, 0, 0, 0, 0, 1317, 0, 1284, 0, 0,
	159, 2627, 0, 198, 0, 0, 1120, 2190, 0, 1112,
	0, 0, 2334, 0, 0, 0, 0, 0, 174, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 121, 0,
	0, 0, 126, 0, 0, 0, 0, 0, 0, 0,
	0, 1179, 1180, 1182, 1189, 1191, 0, 1185, 2178, 0,
	0, 1186, 0, 1188, 1190, 1192, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 100, 0, 0, 0, 1406,
	1407, 0, 0, 0, 123, 0, 0, 0, 0, 0,
	0, 2157, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1236, 1234, 1214, 1215, 1216,
	1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226,
	1227, 1228, 1229, 1230, 1231, 1232, 1233, 0, 0, -2,
	0, 0, 0, 0, 0, 240, 0, 306, 2156, 2166,
	0, 994, 995, 340, 343, 346, 349, 236, 0, 384,
	0, 0, 1042, 1017, 0, 0, 438, 315, 0, 0,
	452, 456, 2207, 1002, 1173, 1176, 0, 1156, 2627, 1213,
	0, 0, 0, 0, 0, 0, 1247, 0, 0, 2627,
	2185, 2237, 2238, 1399, 1407, 0, 1647, 0, 1429, 1416,
	0, 0, 0, 1429, 1433, 1434, 1436, 1437, 0, 0,
	1638, 1644, 534, 586, 1504, 1504, 315, 313, 2457, 311,
	308, 310, 0, 0, 0, 1043, 1045, 1046, 1047, 198,
	0, 2238, 1112, 2385, 2238, 0, 1419, 1421, 0, 261,
	0, 270, 1616, 268, 273, 0, 0, 0, 450, 652,
	657, 799, 0, 315, 807, 808, 809, 852, 895, 903,
	942, 819, 821, 822, 823, 0, 0, 977, 973, 974,
	975, 836, 905, 839, 905, 842, 905, 865, 871, 877,
	884, 0, 0, 0, 897, 0, 0, 0, 0, 0,
	0, 0, 948, 949, 950, 952, 957, 956, 961, 1635,
	1455, 1456, 1458, 0, 1467, 0, 0, 1543, -2, -2,
	1542, 1546, 1547, -2, -2, -2, -2, 1463, 0, 1472,
	1469, 0, 1528, 1275, 1276, 0, 0, 0, 0, -2,
	-2, 0, 0, 0, 1863, 0, -2, 1842, 1845, 1849,
	1851, 1853, 0, 0, 0, 0, 0, 0, 2084, 0,
	2086, 1864, 2139, 2142, 2077, 0, 2033, 0, 0, 1516,
	1517, 1517, 0, 1933, 0, 2092, 0, 2099, 2100, 0,
	1926, 0, 2133, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1937, 0, 0, 0, 0, 1969, 1972, 1975,
	1978, 0, 0, 0, 0, 1958, 0, 0, 0, 1962,
	1728, 1714, 0, 1756, 1754, 1755, 1749, 1756, 1753, 1706,
	0, 1705, 0, 1982, 0, 1984, 1986, 0, 0, 1988,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1870, 1871, 1872, 1892, 1989, 2121,
	2122, 0, 0, 0, 0, 0, 0, 1995, 0, 2127,
	1996, 1998, 1504, 0, 1497, 0, 1562, 1551, 1646, 0,
	2148, 1616, 1564, 1566, 2149, 2187, 1551, 1551, 0, 2096,
	0, 0, 1607, 0, 0, 0, 1609, 1580, 0, 0,
	1574, 0, 1570, 1571, 1572, 1573, 1581, 1156, 1611, 1583,
	1587, 2215, 0, 1613, 0, 1598, 0, 1600, 1633, 0,
	1592, 1595, 0, 0, 2230, 1647, 0, 351, 356, 357,
	352, 353, 354, 602, 0, 0, 0, 0, 0, 2098,
	0, 1653, 0, 1659, 0, 0, 0, 0, 611, 0,
	0, 0, 0, 213, 1441, 406, 497, 196, 502, 505,
	2154, 196, 511, 514, 520, 226, 0, 665, -2, 698,
	699, 701, 0, 697, 156, 1318, 0, 0, 1280, 1282,
	2201, 1286, 1292, 1295, 0, 161, 2627, 172, 0, 1091,
	0, 2188, 0, 0, 0, 0, 0, 0, 1320, 0,
	0, 2627, 196, 2627, 196, 175, 177, 180, 0, 184,
	182, 0, 1079, 0, 0, 1082, 113, 1318, 0, 0,
	116, 120, 128, 129, 132, 0, 0, 0, 138, 0,
	0, 0, 1297, 1301, 1309, 0, 0, 0, 1183, 1184,
	1187, 1193, 83, 0, 0, 0, 1305, 1307, 1313, 93,
	94, 2627, 2199, 96, 2627, 0, 1279, 0, 0, 0,
	0, 186, 118, 122, 130, 131, 133, 0, 1315, 115,
	0, 211, 0, 0, 201, 196, 2627, 0, 203, 0,
	204, 205, 220, 0, 0, 0, 1005, 1006, 1235, 1197,
	1198, 0, 1203, 0, 0, 0, 0, 1616, 232, 0,
	1616, 240, 0, 2162, 0, 371, 0, 0, 0, 0,
	1041, 1138, 0, 1012, 0, 0, 0, 444, 440, 0,
	449, 455, 454, 460, -2, 0, 0, 0, 0, -2,
	0, 0, 1251, 1245, 1246, 0, 0, 0, 0, 2627,
	1401, 1407, 0, 1502, 1517, 467, 1408, 1429, 0, 0,
	0, 1418, 1414, 1411, 1647, 0, 0, 0, 0, 0,
	1640, 1643, 537, 538, 290, 0, 0, 0, 0, 0,
	315, 0, 0, 0, 1048, 1052, 0, 2238, 2238, 0,
	2192, 0, 0, 0, 0, 271, 0, 274, 0, 0,
	0, 279, 280, 281, 282, 283, 284, 273, 263, 1616,
	0, 0, 654, 0, 0, 806, 0, 829, 838, 840,
	843, 886, 888, 905, 932, 933, 1069, 0, 1069, 0,
	0, 953, 1465, 0, 1540, 1471, 1522, 1523, 0, 1277,
	0, 1781, 1826, 0, 0, -2, 0, 0, 1830, 0,
	0, 0, -2, 0, 0, 0, 2085, 2087, 0, 2141,
	2076, 1928, 0, 0, 0, 1932, 1916, 1917, 0, 2036,
	2102, 2131, 2135, 0, 1766, 1767, 1768, 1769, 1770, 1771,
	1772, 0, 2181, 2216, 2220, 2009, 2010, 2014, 2195, 0,
	0, 0, 1941, 0, 0, 0, 0, 0, 0, 0,
	0, 1747, 1751, 0, 0, 2103, 2114, 2116, 1868, 1869,
	1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882,
	-2, -2, -2, 1886, 1887, 1888, -2, -2, -2, 1893,
	0, 0, 0, 2117, 2119, 2120, 2124, 2125, 0, 1992,
	1993, 1994, 2126, 0, 1504, 1498, 1559, 0, 1645, 1563,
	0, 1559, 1559, 1511, 1605, 0, 0, 1629, 0, 1577,
	0, 1578, 0, 1610, 0, 1585, 1588, 1589, 1599, 0,
	1591, 0, 1594, 0, 1928, -2, 316, 318, 320, 0,
	323, 324, 0, 0, 605, 606, 0, 604, 588, 0,
	0, 1655, 0, 0, 1731, 1735, 1759, 614, 615, 0,
	613, 499, 508, 228, 0, 1614, 0, 0, 0, 0,
	0, 0, 197, 1089, 1119, 0, 0, 0, 1111, 0,
	0, 1125, 163, 164, 0, 0, 0, 0, 173, 0,
	0, 170, 0, 179, 183, 1076, 0, 0, 0, 0,
	1285, 0, 0, 0, 135, 136, 137, 0, 142, 0,
	143, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1391, 1392, 0, 1386, 0, 0, 0, 199, 0,
	0, 0, 1274, 222, 0, 0, 0, 0, 0, 1238,
	1239, 1298, 1302, 1310, 0, 0, 0, 240, 238, 0,
	241, 0, 244, 245, 0, 247, 240, 234, 0, 0,
	0, 1156, 385, 1015, 1126, 0, 1128, 0, 1013, 0,
	0, 1127, 436, 0, 443, 0, 457, 0, 0, 1177,
	0, 0, 1200, 1211, 1156, 0, 1250, 1252, 0, 1260,
	0, 0, 0, 1403, 1407, 0, 1396, 1397, 1536, 1409,
	1427, -2, 0, 0, 1517, 1435, 1432, 1438, 1439, 0,
	312, 0, 307, 309, 0, 293, 0, 0, 1044, 1049,
	0, 0, 0, 0, 0, 1420, 1422, 0, 0, 0,
	0, 0, 0, 262, 273, 1616, 299, 0, 800, 824,
	896, 934, 1068, 0, 0, 936, 0, 0, 1539, 1526,
	1527, 1524, 1277, 1828, 1832, 0, 0, 0, 1834, -2,
	0, 1856, -2, -2, 2088, 2140, 1907, 1517, 1929, 1931,
	1918, 2134, 1776, 0, 2016, 2013, 0, 2000, 0, 1953,
	1954, 0, 0, 1957, 1959, 1960, 1961, 1715, 1708, 1707,
	2113, 0, 0, 0, 0, 1991, 1499, 0, 2005, 0,
	0, 1567, 2005, 2005, 1606, 0, 1608, 1575, 1568, 0,
	2216, 1601, 1593, 0, 0, 321, 0, 325, 326, 0,
	0, 1649, 1654, 0, 1660, 1730, 0, 229, 157, 158,
	1289, 1293, 1290, 0, 160, 0, 1090, 0, 1093, 0,
	0, 0, 0, 1100, 1112, 0, 0, 0, 0, 0,
	1113, 0, 1142, 0, 1265, 1272, 0, -2, 0, 0,
	0, 166, 189, 0, 0, 190, 1319, 168, 0, 0,
	196, 196, 0, 0, 1281, 1283, 1296, 0, 0, 0,
	0, 145, 0, 0, 1299, 1303, 1311, 1306, 1308, 1314,
	0, 97, 0, 1393, 0, 0, 1316, 209, 210, 0,
	196, 0, 196, 202, 196, 1274, 0, 0, 0, 0,
	231, 0, 0, 0, 0, 233, 305, 240, 373, 0,
	1063, 0, 1138, 1130, 1131, 1132, 0, 1137, 1139, 0,
	0, 1029, 1014, 0, 1025, 0, 0, 1042, 1017, 0,
	441, 458, 0, 461, 0, 464, 1003, 1174, 1208, 1156,
	0, 1242, 0, 0, 0, 0, 0, 0, 0, 1405,
	1407, 0, 1398, 1399, 1429, 1535, 0, 0, 0, 1417,
	1536, 0, 314, 315, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 315, 275, 0, 276, 277, 278, 264,
	265, 656, 658, 0, 0, 664, 1067, 0, 0, 0,
	0, 1525, 1836, -2, -2, 1857, 0, 2217, 2219, 1517,
	0, 2002, 1519, 0, 0, -2, 0, 0, 0, 1500,
	1483, 0, 1558, 1550, 1552, 1554, 2515, 2309, 2626, 1484,
	1485, 1628, 0, 1596, 322, 607, 0, 0, 1656, 0,
	0, 0, 1291, 162, 0, 1094, 1095, 2191, 1097, 0,
	1099, 1101, 1102, 1103, 0, 1106, 2240, 0, 1110, 0,
	1121, 1143, 0, 1152, 0, 1267, 1277, 1271, 0, 1269,
	1154, 0, 165, 167, 191, 188, 1274, 0, 169, 178,
	0, 0, 117, 0, 0, 2303, 148, 146, 144, 95,
	1278, 119, 0, 211, 221, 1273, 223, 206, 196, 0,
	1300, 1304, 1312, 242, 0, 243, 246, 0, 0, 1078,
	0, 1016, 1129, 0, 1140, 1141, 1019, 0, 1018, 0,
	0, 0, 0, 0, 442, 445, 0, 448, 0, 0,
	0, 0, 0, 1253, 1251, 0, 1259, 0, 0, 0,
	1385, 0, 0, 1400, 1401, 465, 1423, 0, 0, 1429,
	1440, 292, 0, 0, 1050, 1053, 1054, 1055, 1056, 1057,
	1058, 1059, 1060, 1061, 1051, 1154, 0, 0, 1118, 0,
	297, 272, 0, 660, 0, 662, 0, 935, 937, 0,
	0, 1930, 2020, 0, 0, 1955, 1956, -2, 0, 1896,
	2004, 2006, 0, 0, 0, 0, 0, 1569, 608, 1650,
	616, 1287, 0, 1294, 1092, 1096, 0, 0, 0, 1160,
	0, 0, 1114, 0, 1146, 1147, 1063, 0, 1148, 1149,
	1150, 1266, 1528, 1272, 1063, 0, 0, 193, 0, 0,
	0, 0, 0, 0, 0, 200, 224, 1274, 239, 257,
	0, 1209, 1017, 1077, 0, 0, 1027, 0, 1030, 0,
	1026, 1023, 1024, 1015, 0, 446, 447, 462, 0, 463,
	0, 1212, 0, 0, 1260, 0, 0, 1388, 1384, 1407,
	1402, 1403, 1647, 1426, 1430, 0, 0, 1152, 1154, 1074,
	0, 659, 0, 0, 945, 946, 0, 0, 0, 0,
	2015, 1520, 1897, 0, 0, 1553, 1555, 1556, 1557, 1288,
	0, 0, 1105, 1165, 0, 0, 0, 1144, 1145, 1074,
	0, 1270, 1268, 1123, 0, 1156, 171, 0, 1154, 0,
	1083, 0, 0, 1086, 0, 0, 149, 2303, 147, 0,
	196, 260, 0, 254, 252, 253, 1019, 0, 0, 1134,
	1136, 0, 1031, 1063, 1029, 459, 1210, 1243, 1154, 0,
	1152, 0, 1395, 1407, 1389, 1390, 0, 1405, 0, 315,
	315, 1063, 1152, 1017, 1073, 315, 661, 663, 2012, 2032,
	2021, -2, 2585, 2310, 0, 2032, 2032, 2007, 2008, 0,
	0, 1107, 1161, 1162, 0, 1157, 1158, 1159, 2239, 1108,
	1109, 1142, 0, 0, 1160, 192, 1063, 1080, 0, 0,
	1081, 0, 0, 152, 0, 154, 225, 248, 0, 0,
	1011, 0, 1133, 0, 0, 0, 0, 1078, 1019, 1152,
	0, 1063, 0, 1381, 1394, 0, 1404, 1385, 0, 294,
	295, 1074, 1063, 1647, 0, 296, 2017, 0, 0, 2023,
	2024, 2025, 2026, 2027, 2018, 2019, 1098, 0, 1163, 0,
	1164, 0, 0, 0, 1647, 1151, 0, 1165, 176, 1084,
	0, 1087, 0, 150, 0, 255, 256, 1008, 1010, 0,
	1135, 1020, 0, 1022, 1017, 1028, 1063, 0, 1074, 0,
	1387, 2200, 1388, 1424, 0, 1017, 1074, 1117, 0, 2029,
	2030, 0, 0, 0, 1166, 0, 1169, 1170, 0, 1167,
	1122, 0, 1142, 0, 0, 0, 0, 1021, 1019, 1074,
	1154, 1017, 1152, 1395, 0, 1647, 1017, 2028, 2031, 2022,
	1104, 1168, 1171, 1172, 1153, 1124, 0, 0, 258, 0,
	1066, 1011, 1017, 1152, 1647, 1063, 1382, 1647, 1115, 1647,
	1071, 0, 0, 1062, 1064, 1065, 1009, 1647, 1063, 1256,
	1074, 1425, 1116, 1085, 1070, 0, 259, 1254, 1074, 1017,
	0, 1017, 1647, 0, 1647, 1257, 1071, 1255, 1088,
}

var sqlTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 574, 3, 580, 575, 3,
	585, 586, 578, 576, 590, 577, 587, 579, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 593, 3,
	566, 568, 567, 571, 589, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 583, 3, 584, 581, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 591, 573, 592, 569,
}

var sqlTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 243, 244, 245, 246, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257,
}

var sqlTok3 = [...]int{
	57600, 258, 57601, 259, 57602, 260, 57603, 261, 57604, 262,
	57605, 263, 57606, 264, 57607, 265, 57608, 266, 57609, 267,
	57610, 268, 57611, 269, 57612, 270, 57613, 271, 57614, 272,
	57615, 273, 57616, 274, 57617, 275, 57618, 276, 57619, 277,
	57620, 278, 57621, 279, 57622, 280, 57623, 281, 57624, 282,
	57625, 283, 57626, 284, 57627, 285, 57628, 286, 57629, 287,
	57630, 288, 57631, 289, 57632, 290, 57633, 291, 57634, 292,
	57635, 293, 57636, 294, 57637, 295, 57638, 296, 57639, 297,
	57640, 298, 57641, 299, 57642, 300, 57643, 301, 57644, 302,
	57645, 303, 57646, 304, 57647, 305, 57648, 306, 57649, 307,
	57650, 308, 57651, 309, 57652, 310, 57653, 311, 57654, 312,
	57655, 313, 57656, 314, 57657, 315, 57658, 316, 57659, 317,
	57660, 318, 57661, 319, 57662, 320, 57663, 321, 57664, 322,
	57665, 323, 57666, 324, 57667, 325, 57668, 326, 57669, 327,
	57670, 328, 57671, 329, 57672, 330, 57673, 331, 57674, 332,
	57675, 333, 57676, 334, 57677, 335, 57678, 336, 57679, 337,
	57680, 338, 57681, 339, 57682, 340, 57683, 341, 57684, 342,
	57685, 343, 57686, 344, 57687, 345, 57688, 346, 57689, 347,
	57690, 348, 57691, 349, 57692, 350, 57693, 351, 57694, 352,
	57695, 353, 57696, 354, 57697, 355, 57698, 356, 57699, 357,
	57700, 358, 57701, 359, 57702, 360, 57703, 361, 57704, 362,
	57705, 363, 57706, 364, 57707, 365, 57708, 366, 57709, 367,
	57710, 368, 57711, 369, 57712, 370, 57713, 371, 57714, 372,
	57715, 373, 57716, 374, 57717, 375, 57718, 376, 57719, 377,
	57720, 378, 57721, 379, 57722, 380, 57723, 381, 57724, 382,
	57725, 383, 57726, 384, 57727, 385, 57728, 386, 57729, 387,
	57730, 388, 57731, 389, 57732, 390, 57733, 391, 57734, 392,
	57735, 393, 57736, 394, 57737, 395, 57738, 396, 57739, 397,
	57740, 398, 57741, 399, 57742, 400, 57743, 401, 57744, 402,
	57745, 403, 57746, 404, 57747, 405, 57748, 406, 57749, 407,
	57750, 408, 57751, 409, 57752, 410, 57753, 411, 57754, 412,
	57755, 413, 57756, 414, 57757, 415, 57758, 416, 57759, 417,
	57760, 418, 57761, 419, 57762, 420, 57763, 421, 57764, 422,
	57765, 423, 57766, 424, 57767, 425, 57768, 426, 57769, 427,
	57770, 428, 57771, 429, 57772, 430, 57773, 431, 57774, 432,
	57775, 433, 57776, 434, 57777, 435, 57778, 436, 57779, 437,
	57780, 438, 57781, 439, 57782, 440, 57783, 441, 57784, 442,
	57785, 443, 57786, 444, 57787, 445, 57788, 446, 57789, 447,
	57790, 448, 57791, 449, 57792, 450, 57793, 451, 57794, 452,
	57795, 453, 57796, 454, 57797, 455, 57798, 456, 57799, 457,
	57800, 458, 57801, 459, 57802, 460, 57803, 461, 57804, 462,
	57805, 463, 57806, 464, 57807, 465, 57808, 466, 57809, 467,
	57810, 468, 57811, 469, 57812, 470, 57813, 471, 57814, 472,
	57815, 473, 57816, 474, 57817, 475, 57818, 476, 57819, 477,
	57820, 478, 57821, 479, 57822, 480, 57823, 481, 57824, 482,
	57825, 483, 57826, 484, 57827, 485, 57828, 486, 57829, 487,
	57830, 488, 57831, 489, 57832, 490, 57833, 491, 57834, 492,
	57835, 493, 57836, 494, 57837, 495, 57838, 496, 57839, 497,
	57840, 498, 57841, 499, 57842, 500, 57843, 501, 57844, 502,
	57845, 503, 57846, 504, 57847, 505, 57848, 506, 57849, 507,
	57850, 508, 57851, 509, 57852, 510, 57853, 511, 57854, 512,
	57855, 513, 57856, 514, 57857, 515, 57858, 516, 57859, 517,
	57860, 518, 57861, 519, 57862, 520, 57863, 521, 57864, 522,
	57865, 523, 57866, 524, 57867, 525, 57868, 526, 57869, 527,
	57870, 528, 57871, 529, 57872, 530, 57873, 531, 57874, 532,
	57875, 533, 57876, 534, 57877, 535, 57878, 536, 57879, 537,
	57880, 538, 57881, 539, 57882, 540, 57883, 541, 57884, 542,
	57885, 543, 57886, 544, 57887, 545, 57888, 546, 57889, 547,
	57890, 548, 57891, 549, 57892, 550, 57893, 551, 57894, 552,
	57895, 553, 57896, 554, 57897, 555, 57898, 556, 57899, 557,
	57900, 558, 57901, 559, 57902, 560, 57903, 561, 57904, 562,
	57905, 563, 57906, 564, 57907, 565, 57908, 570, 57909, 572,
	57910, 582, 57911, 588, 0,
}

var sqlErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	sqlDebug        = 0
	sqlErrorVerbose = false
)

type sqlLexer interface {
	Lex(lval *sqlSymType) int
	Error(s string)
}

type sqlParser interface {
	Parse(sqlLexer) int
	Lookahead() int
}

type sqlParserImpl struct {
	lval  sqlSymType
	stack [sqlInitialStackSize]sqlSymType
	char  int
}

func (p *sqlParserImpl) Lookahead() int {
	return p.char
}

func sqlNewParser() sqlParser {
	return &sqlParserImpl{}
}

const sqlFlag = -1000

func sqlTokname(c int) string {
	if c >= 1 && c-1 < len(sqlToknames) {
		if sqlToknames[c-1] != "" {
			return sqlToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func sqlStatname(s int) string {
	if s >= 0 && s < len(sqlStatenames) {
		if sqlStatenames[s] != "" {
			return sqlStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func sqlErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !sqlErrorVerbose {
		return "syntax error"
	}

	for _, e := range sqlErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + sqlTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := sqlPact[state]
	for tok := TOKSTART; tok-1 < len(sqlToknames); tok++ {
		if n := base + tok; n >= 0 && n < sqlLast && sqlChk[sqlAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if sqlDef[state] == -2 {
		i := 0
		for sqlExca[i] != -1 || sqlExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; sqlExca[i] >= 0; i += 2 {
			tok := sqlExca[i]
			if tok < TOKSTART || sqlExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if sqlExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += sqlTokname(tok)
	}
	return res
}

func sqllex1(lex sqlLexer, lval *sqlSymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = sqlTok1[0]
		goto out
	}
	if char < len(sqlTok1) {
		token = sqlTok1[char]
		goto out
	}
	if char >= sqlPrivate {
		if char < sqlPrivate+len(sqlTok2) {
			token = sqlTok2[char-sqlPrivate]
			goto out
		}
	}
	for i := 0; i < len(sqlTok3); i += 2 {
		token = sqlTok3[i+0]
		if token == char {
			token = sqlTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = sqlTok2[1] /* unknown char */
	}
	if sqlDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", sqlTokname(token), uint(char))
	}
	return char, token
}

func sqlParse(sqllex sqlLexer) int {
	return sqlNewParser().Parse(sqllex)
}

func (sqlrcvr *sqlParserImpl) Parse(sqllex sqlLexer) int {
	var sqln int
	var sqlVAL sqlSymType
	var sqlDollar []sqlSymType
	_ = sqlDollar // silence set and not used
	sqlS := sqlrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	sqlstate := 0
	sqlrcvr.char = -1
	sqltoken := -1 // sqlrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		sqlstate = -1
		sqlrcvr.char = -1
		sqltoken = -1
	}()
	sqlp := -1
	goto sqlstack

ret0:
	return 0

ret1:
	return 1

sqlstack:
	/* put a state and value onto the stack */
	if sqlDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", sqlTokname(sqltoken), sqlStatname(sqlstate))
	}

	sqlp++
	if sqlp >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlS[sqlp] = sqlVAL
	sqlS[sqlp].yys = sqlstate

sqlnewstate:
	sqln = sqlPact[sqlstate]
	if sqln <= sqlFlag {
		goto sqldefault /* simple state */
	}
	if sqlrcvr.char < 0 {
		sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
	}
	sqln += sqltoken
	if sqln < 0 || sqln >= sqlLast {
		goto sqldefault
	}
	sqln = sqlAct[sqln]
	if sqlChk[sqln] == sqltoken { /* valid shift */
		sqlrcvr.char = -1
		sqltoken = -1
		sqlVAL = sqlrcvr.lval
		sqlstate = sqln
		if Errflag > 0 {
			Errflag--
		}
		goto sqlstack
	}

sqldefault:
	/* default state action */
	sqln = sqlDef[sqlstate]
	if sqln == -2 {
		if sqlrcvr.char < 0 {
			sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if sqlExca[xi+0] == -1 && sqlExca[xi+1] == sqlstate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			sqln = sqlExca[xi+0]
			if sqln < 0 || sqln == sqltoken {
				break
			}
		}
		sqln = sqlExca[xi+1]
		if sqln < 0 {
			goto ret0
		}
	}
	if sqln == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			sqllex.Error(sqlErrorMessage(sqlstate, sqltoken))
			Nerrs++
			if sqlDebug >= 1 {
				__yyfmt__.Printf("%s", sqlStatname(sqlstate))
				__yyfmt__.Printf(" saw %s\n", sqlTokname(sqltoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for sqlp >= 0 {
				sqln = sqlPact[sqlS[sqlp].yys] + sqlErrCode
				if sqln >= 0 && sqln < sqlLast {
					sqlstate = sqlAct[sqln] /* simulate a shift of "error" */
					if sqlChk[sqlstate] == sqlErrCode {
						goto sqlstack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if sqlDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", sqlS[sqlp].yys)
				}
				sqlp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if sqlDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", sqlTokname(sqltoken))
			}
			if sqltoken == sqlEofCode {
				goto ret1
			}
			sqlrcvr.char = -1
			sqltoken = -1
			goto sqlnewstate /* try again in the same state */
		}
	}

	/* reduction by production sqln */
	if sqlDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", sqln, sqlStatname(sqlstate))
	}

	sqlnt := sqln
	sqlpt := sqlp
	_ = sqlpt // guard against "declared and not used"

	sqlp -= sqlR2[sqln]
	// sqlp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if sqlp+1 >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlVAL = sqlS[sqlp+1]

	/* consult goto table to find next state */
	sqln = sqlR1[sqln]
	sqlg := sqlPgo[sqln]
	sqlj := sqlg + sqlS[sqlp].yys + 1

	if sqlj >= sqlLast {
		sqlstate = sqlAct[sqlg]
	} else {
		sqlstate = sqlAct[sqlj]
		if sqlChk[sqlstate] != -sqln {
			sqlstate = sqlAct[sqlg]
		}
	}
	// dummy call; replaced with literal code
	switch sqlnt {

	case 1:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1419
		{
			sqllex.(*lexer).SetStmt(sqlDollar[1].union.stmt())
		}
	case 2:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1424
		{
			return helpWith(sqllex, "")
		}
	case 5:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1426
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 9:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1429
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 11:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1430
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 13:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1431
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 15:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1432
		{
			return helpWith(sqllex, "GRANT")
		}
	case 17:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1433
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 19:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1434
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 21:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1435
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 23:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1436
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 25:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1437
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 27:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1438
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 29:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1439
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 35:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1446
		{
			sqlVAL.union.val = tree.Statement(nil)
		}
	case 38:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1455
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 40:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1457
		{
			return helpWith(sqllex, "ALTER")
		}
	case 42:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1460
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 44:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1461
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 46:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1462
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 48:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1463
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 50:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1464
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 52:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1465
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 54:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1466
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 56:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1467
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 58:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1468
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 70:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1527
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 72:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1553
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 76:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1567
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 81:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1585
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 82:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1589
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[3].union.unresolvedObjectName(), Options: sqlDollar[4].union.seqOpts(), IfExists: false}
		}
	case 83:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1593
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[5].union.unresolvedObjectName(), Options: sqlDollar[6].union.seqOpts(), IfExists: true}
		}
	case 92:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1619
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 93:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1623
		{
			sqlVAL.union.val = &tree.AlterDatabaseOwner{Name: tree.Name(sqlDollar[3].str), Owner: sqlDollar[6].union.user()}
		}
	case 94:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1629
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 95:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1636
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:        tree.Name(sqlDollar[3].str),
				Region:      tree.Name(sqlDollar[9].str),
				IfNotExists: true,
			}
		}
	case 96:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1646
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 97:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1653
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:     tree.Name(sqlDollar[3].str),
				Region:   tree.Name(sqlDollar[8].str),
				IfExists: true,
			}
		}
	case 98:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1663
		{
			sqlVAL.union.val = &tree.AlterDatabaseSurvivalGoal{
				Name:         tree.Name(sqlDollar[3].str),
				SurvivalGoal: sqlDollar[4].union.survivalGoal(),
			}
		}
	case 99:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1672
		{
			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[4].str),
			}
		}
	case 100:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1679
		{
			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[5].str),
			}
		}
	case 102:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1703
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 111:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1735
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 112:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1739
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[3].union.unresolvedObjectName(), IfExists: false, Cmds: sqlDollar[4].union.alterTableCmds()}
		}
	case 113:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1743
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[5].union.unresolvedObjectName(), IfExists: true, Cmds: sqlDollar[6].union.alterTableCmds()}
		}
	case 114:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1749
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[3].union.tableIndexName(), IfExists: false, Cmds: sqlDollar[4].union.alterIndexCmds()}
		}
	case 115:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1753
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[5].union.tableIndexName(), IfExists: true, Cmds: sqlDollar[6].union.alterIndexCmds()}
		}
	case 116:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1759
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   tree.Expr(nil),
			}
		}
	case 117:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1768
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   sqlDollar[9].union.expr(),
			}
		}
	case 118:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1779
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: tree.Expr(nil)}
		}
	case 119:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1783
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: sqlDollar[9].union.expr()}
		}
	case 120:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1789
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 121:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1797
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				All:          true,
			}
		}
	case 122:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1807
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 123:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1811
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), All: true}
		}
	case 126:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1820
		{
		}
	case 127:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1821
		{
		}
	case 128:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1825
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 129:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1834
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:      tree.TableIndexName{Table: name},
				Rows:              sqlDollar[6].union.slct(),
				RelocateNonVoters: true,
			}
		}
	case 130:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1846
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 131:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1851
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), RelocateNonVoters: true}
		}
	case 132:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1858
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:  tree.TableIndexName{Table: name},
				Rows:          sqlDollar[6].union.slct(),
				RelocateLease: true,
			}
		}
	case 133:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1870
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), RelocateLease: true}
		}
	case 134:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1877
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 135:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1885
		{

			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: sqlDollar[4].union.expr()}
		}
	case 136:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1890
		{
			sqlVAL.union.val = &tree.SetZoneConfig{Options: sqlDollar[4].union.kvOptions()}
		}
	case 137:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1894
		{

			sqlVAL.union.val = &tree.SetZoneConfig{SetDefault: true}
		}
	case 138:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1899
		{
			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: tree.DNull}
		}
	case 139:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1905
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{Database: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 140:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1913
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
			}
			sqlVAL.union.val = s
		}
	case 141:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1924
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[3].union.tableIndexName(),
			}
			sqlVAL.union.val = s
		}
	case 142:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1934
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 143:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1944
		{
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 144:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1953
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[9].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			s.AllIndexes = true
			sqlVAL.union.val = s
		}
	case 145:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1964
		{
			err := errors.New("index name should not be specified in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION ... OF INDEX")
			return setErr(sqllex, err)
		}
	case 146:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1970
		{
			err := errors.New("index wildcard unsupported in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION <partition> OF INDEX <tablename>@*")
			return setErr(sqllex, err)
		}
	case 147:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1978
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), "."))}}
		}
	case 148:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1982
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), ".")), Value: sqlDollar[3].union.expr()}}
		}
	case 149:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1986
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), ".")), Value: sqlDollar[5].union.expr()})
		}
	case 150:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1990
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), "."))})
		}
	case 151:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1996
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 152:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2001
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{
				TableOrIndex: tree.TableIndexName{Table: name},
				From:         sqlDollar[7].union.exprs(),
				To:           sqlDollar[11].union.exprs(),
			}
		}
	case 153:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2012
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName()}
		}
	case 154:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2016
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName(), From: sqlDollar[7].union.exprs(), To: sqlDollar[11].union.exprs()}
		}
	case 155:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2022
		{
			sqlVAL.union.val = tree.AlterTableCmds{sqlDollar[1].union.alterTableCmd()}
		}
	case 156:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2026
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterTableCmds(), sqlDollar[3].union.alterTableCmd())
		}
	case 157:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2033
		{
			sqlVAL.union.val = &tree.AlterTableRenameColumn{Column: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 158:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2038
		{
			sqlVAL.union.val = &tree.AlterTableRenameConstraint{Constraint: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 159:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2043
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[2].union.colDef()}
		}
	case 160:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2048
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[5].union.colDef()}
		}
	case 161:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2053
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[3].union.colDef()}
		}
	case 162:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2058
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[6].union.colDef()}
		}
	case 163:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2063
		{
			sqlVAL.union.val = &tree.AlterTableSetDefault{Column: tree.Name(sqlDollar[3].str), Default: sqlDollar[4].union.expr()}
		}
	case 164:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2068
		{
			sqlVAL.union.val = &tree.AlterTableSetVisible{Column: tree.Name(sqlDollar[3].str), Visible: sqlDollar[4].union.bool()}
		}
	case 165:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2073
		{
			sqlVAL.union.val = &tree.AlterTableDropNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 166:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2078
		{
			sqlVAL.union.val = &tree.AlterTableDropStored{Column: tree.Name(sqlDollar[3].str)}
		}
	case 167:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2083
		{
			sqlVAL.union.val = &tree.AlterTableSetNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 168:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2087
		{
			return unimplemented(sqllex, "alter table alter column add")
		}
	case 169:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2092
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     true,
				Column:       tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 170:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2101
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     false,
				Column:       tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 171:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2113
		{
			sqlVAL.union.val = &tree.AlterTableAlterColumnType{
				Column:    tree.Name(sqlDollar[3].str),
				ToType:    sqlDollar[6].union.typeReference(),
				Collation: sqlDollar[7].str,
				Using:     sqlDollar[8].union.expr(),
			}
		}
	case 172:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2123
		{
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      sqlDollar[2].union.constraintDef(),
				ValidationBehavior: sqlDollar[3].union.validationBehavior(),
			}
		}
	case 173:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2130
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "alter constraint")
		}
	case 174:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2133
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table inherits")
		}
	case 175:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2139
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table no inherits")
		}
	case 176:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2146
		{
			sqlVAL.union.val = &tree.AlterTableAlterPrimaryKey{
				Columns:    sqlDollar[7].union.idxElems(),
				Sharded:    sqlDollar[9].union.shardedIndexDef(),
				Interleave: sqlDollar[10].union.interleave(),
			}
		}
	case 177:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2154
		{
			sqlVAL.union.val = &tree.AlterTableValidateConstraint{
				Constraint: tree.Name(sqlDollar[3].str),
			}
		}
	case 178:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2161
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     true,
				Constraint:   tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 179:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2170
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     false,
				Constraint:   tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 180:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2179
		{
			sqlVAL.union.val = &tree.AlterTableSetAudit{Mode: sqlDollar[3].union.auditMode()}
		}
	case 181:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2184
		{
			sqlVAL.union.val = &tree.AlterTablePartitionByTable{
				PartitionByTable: sqlDollar[1].union.partitionByTable(),
			}
		}
	case 182:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2191
		{

			sqlVAL.union.val = &tree.AlterTableInjectStats{
				Stats: sqlDollar[3].union.expr(),
			}
		}
	case 183:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2199
		{
			sqlVAL.union.val = tree.AuditModeReadWrite
		}
	case 184:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2200
		{
			sqlVAL.union.val = tree.AuditModeDisable
		}
	case 185:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2204
		{
			sqlVAL.union.val = tree.AlterIndexCmds{sqlDollar[1].union.alterIndexCmd()}
		}
	case 186:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2208
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterIndexCmds(), sqlDollar[3].union.alterIndexCmd())
		}
	case 187:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2214
		{
			sqlVAL.union.val = &tree.AlterIndexPartitionBy{
				PartitionByIndex: sqlDollar[1].union.partitionByIndex(),
			}
		}
	case 188:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2222
		{
			sqlVAL.union.val = sqlDollar[3].union.expr()
		}
	case 189:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2226
		{
			sqlVAL.union.val = nil
		}
	case 190:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2232
		{
			sqlVAL.union.val = true
		}
	case 191:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2236
		{
			sqlVAL.union.val = false
		}
	case 192:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2242
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 193:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2246
		{
			sqlVAL.union.val = nil
		}
	case 194:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2253
		{
			sqlVAL.union.val = tree.DropCascade
		}
	case 195:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2257
		{
			sqlVAL.union.val = tree.DropRestrict
		}
	case 196:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2261
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 197:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2267
		{
			sqlVAL.union.val = tree.ValidationSkip
		}
	case 198:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2271
		{
			sqlVAL.union.val = tree.ValidationDefault
		}
	case 199:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2296
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[6].str),
					IfNotExists: false,
					Placement:   sqlDollar[7].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 200:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2307
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[9].str),
					IfNotExists: true,
					Placement:   sqlDollar[10].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 201:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2318
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeDropValue{
					Val: tree.EnumValue(sqlDollar[6].str),
				},
			}
		}
	case 202:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2327
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRenameValue{
					OldVal: tree.EnumValue(sqlDollar[6].str),
					NewVal: tree.EnumValue(sqlDollar[8].str),
				},
			}
		}
	case 203:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2337
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 204:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2346
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeSetSchema{
					Schema: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 205:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2355
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeOwner{
					Owner: sqlDollar[6].union.user(),
				},
			}
		}
	case 206:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2364
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 207:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2368
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 208:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2371
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 209:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2375
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      true,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 210:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2382
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      false,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 211:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2389
		{
			sqlVAL.union.val = (*tree.AlterTypeAddValuePlacement)(nil)
		}
	case 212:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2395
		{
			sqlVAL.union.val = []security.SQLUsername{sqlDollar[1].union.user()}
		}
	case 213:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2399
		{
			sqlVAL.union.val = append(sqlDollar[1].union.users(), sqlDollar[3].union.user())
		}
	case 214:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2404
		{
			sqlVAL.union.val = sqlDollar[1].union.user()
		}
	case 215:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2406
		{

			sqlVAL.union.val = security.MakeSQLUsernameFromPreNormalizedString(sqlDollar[1].str)
		}
	case 216:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2411
		{

			sqlVAL.union.val = security.MakeSQLUsernameFromPreNormalizedString(sqlDollar[1].str)
		}
	case 217:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2418
		{

			sqlVAL.union.val = security.MakeSQLUsernameFromPreNormalizedString(sqlDollar[1].str)
		}
	case 218:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2426
		{

			sqlVAL.union.val, _ = security.MakeSQLUsernameFromUserInput(sqlDollar[1].str, security.UsernameValidation)
		}
	case 226:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2450
		{
			sqlVAL.union.val = &tree.RefreshMaterializedView{
				Name:              sqlDollar[5].union.unresolvedObjectName(),
				Concurrently:      sqlDollar[4].union.bool(),
				RefreshDataOption: sqlDollar[6].union.refreshDataOption(),
			}
		}
	case 227:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2457
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 228:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2461
		{
			sqlVAL.union.val = tree.RefreshDataWithData
		}
	case 229:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2465
		{
			sqlVAL.union.val = tree.RefreshDataClear
		}
	case 230:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2469
		{
			sqlVAL.union.val = tree.RefreshDataDefault
		}
	case 231:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2499
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: false,
				Subdir:         sqlDollar[4].union.expr(),
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 232:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2511
		{
			sqlVAL.union.val = &tree.Backup{
				Targets: sqlDollar[2].union.targetListPtr(),
				To:      sqlDollar[4].union.stringOrPlaceholderOptList(),
				Nested:  true,
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *sqlDollar[6].union.backupOptions(),
			}
		}
	case 233:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2521
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: true,
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 234:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2532
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:         sqlDollar[2].union.targetListPtr(),
				To:              sqlDollar[4].union.stringOrPlaceholderOptList(),
				IncrementalFrom: sqlDollar[6].union.exprs(),
				AsOf:            sqlDollar[5].union.asOfClause(),
				Options:         *sqlDollar[7].union.backupOptions(),
			}
		}
	case 235:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2541
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 236:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2545
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 237:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2549
		{
			t := sqlDollar[1].union.targetList()
			sqlVAL.union.val = &t
		}
	case 238:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2557
		{
			sqlVAL.union.val = sqlDollar[2].union.backupOptions()
		}
	case 239:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2561
		{
			sqlVAL.union.val = sqlDollar[4].union.backupOptions()
		}
	case 240:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2565
		{
			sqlVAL.union.val = &tree.BackupOptions{}
		}
	case 241:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2572
		{
			sqlVAL.union.val = sqlDollar[1].union.backupOptions()
		}
	case 242:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2576
		{
			if err := sqlDollar[1].union.backupOptions().CombineWith(sqlDollar[3].union.backupOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 243:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2585
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 244:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2589
		{
			sqlVAL.union.val = &tree.BackupOptions{CaptureRevisionHistory: true}
		}
	case 245:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2593
		{
			sqlVAL.union.val = &tree.BackupOptions{Detached: true}
		}
	case 246:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2597
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 247:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2601
		{
			sqlVAL.union.val = &tree.BackupOptions{IncludeDeprecatedInterleaves: true}
		}
	case 248:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2682
		{
			sqlVAL.union.val = &tree.ScheduledBackup{
				ScheduleLabel:   sqlDollar[3].union.expr(),
				Recurrence:      sqlDollar[10].union.expr(),
				FullBackup:      sqlDollar[11].union.fullBackupClause(),
				To:              sqlDollar[8].union.stringOrPlaceholderOptList(),
				Targets:         sqlDollar[6].union.targetListPtr(),
				BackupOptions:   *(sqlDollar[9].union.backupOptions()),
				ScheduleOptions: sqlDollar[12].union.kvOptions(),
			}
		}
	case 249:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2693
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 251:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2698
		{
			sqlVAL.union.val = nil
		}
	case 252:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2706
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 253:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2710
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 254:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2720
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 255:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2728
		{
			sqlVAL.union.val = &tree.FullBackupClause{Recurrence: sqlDollar[3].union.expr()}
		}
	case 256:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2732
		{
			sqlVAL.union.val = &tree.FullBackupClause{AlwaysFull: true}
		}
	case 257:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2736
		{
			sqlVAL.union.val = (*tree.FullBackupClause)(nil)
		}
	case 258:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2742
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 259:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2746
		{
			sqlVAL.union.val = sqlDollar[5].union.kvOptions()
		}
	case 260:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2750
		{
			sqlVAL.union.val = nil
		}
	case 261:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2782
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				From:               sqlDollar[3].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[4].union.asOfClause(),
				Options:            *(sqlDollar[5].union.restoreOptions()),
			}
		}
	case 262:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2791
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				Subdir:             sqlDollar[3].union.expr(),
				From:               sqlDollar[5].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[6].union.asOfClause(),
				Options:            *(sqlDollar[7].union.restoreOptions()),
			}
		}
	case 263:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2801
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[4].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *(sqlDollar[6].union.restoreOptions()),
			}
		}
	case 264:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2810
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				Subdir:  sqlDollar[4].union.expr(),
				From:    sqlDollar[6].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[7].union.asOfClause(),
				Options: *(sqlDollar[8].union.restoreOptions()),
			}
		}
	case 265:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2820
		{
			sqlVAL.union.val = &tree.StreamIngestion{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[7].union.stringOrPlaceholderOptList(),
				AsOf:    sqlDollar[8].union.asOfClause(),
			}
		}
	case 266:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2827
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 267:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2831
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList{sqlDollar[1].union.expr()}
		}
	case 268:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2835
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList(sqlDollar[2].union.exprs())
		}
	case 269:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2841
		{
			sqlVAL.union.val = []tree.StringOrPlaceholderOptList{sqlDollar[1].union.stringOrPlaceholderOptList()}
		}
	case 270:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2845
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listOfStringOrPlaceholderOptList(), sqlDollar[3].union.stringOrPlaceholderOptList())
		}
	case 271:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2852
		{
			sqlVAL.union.val = sqlDollar[2].union.restoreOptions()
		}
	case 272:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2856
		{
			sqlVAL.union.val = sqlDollar[4].union.restoreOptions()
		}
	case 273:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2860
		{
			sqlVAL.union.val = &tree.RestoreOptions{}
		}
	case 274:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2867
		{
			sqlVAL.union.val = sqlDollar[1].union.restoreOptions()
		}
	case 275:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2871
		{
			if err := sqlDollar[1].union.restoreOptions().CombineWith(sqlDollar[3].union.restoreOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 276:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2880
		{
			sqlVAL.union.val = &tree.RestoreOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 277:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2884
		{
			sqlVAL.union.val = &tree.RestoreOptions{DecryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 278:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2888
		{
			sqlVAL.union.val = &tree.RestoreOptions{IntoDB: sqlDollar[3].union.expr()}
		}
	case 279:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2892
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingFKs: true}
		}
	case 280:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2896
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequences: true}
		}
	case 281:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2900
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequenceOwners: true}
		}
	case 282:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2904
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingViews: true}
		}
	case 283:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2908
		{
			sqlVAL.union.val = &tree.RestoreOptions{Detached: true}
		}
	case 284:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2912
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipLocalitiesCheck: true}
		}
	case 285:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2918
		{
			sqlVAL.str = strings.ToUpper(sqlDollar[1].str)
		}
	case 286:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2924
		{
			return unimplemented(sqllex, "alter function")
		}
	case 287:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2928
		{
			return unimplemented(sqllex, "alter domain")
		}
	case 288:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2932
		{
			return unimplemented(sqllex, "alter aggregate")
		}
	case 289:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2936
		{
			return unimplemented(sqllex, "alter default privileges")
		}
	case 290:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2974
		{

			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[4].union.expr()}, Options: sqlDollar[6].union.kvOptions()}
		}
	case 291:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2979
		{
			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[3].union.expr()}, Options: sqlDollar[4].union.kvOptions()}
		}
	case 292:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2983
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[7].union.expr()}, Options: sqlDollar[9].union.kvOptions()}
		}
	case 293:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2989
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[6].union.expr()}, Options: sqlDollar[7].union.kvOptions()}
		}
	case 294:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2994
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateFile: sqlDollar[6].union.expr(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 295:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2999
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateDefs: sqlDollar[5].union.tblDefs(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 296:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:3004
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: sqlDollar[5].union.nameList(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 297:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3009
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: nil, FileFormat: sqlDollar[4].str, Files: sqlDollar[7].union.exprs(), Options: sqlDollar[9].union.kvOptions()}
		}
	case 298:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3013
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 299:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3029
		{
			sqlVAL.union.val = &tree.Export{Query: sqlDollar[7].union.slct(), FileFormat: sqlDollar[3].str, File: sqlDollar[4].union.expr(), Options: sqlDollar[5].union.kvOptions()}
		}
	case 300:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3032
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 301:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3036
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 302:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3040
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 303:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3048
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 304:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3052
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 305:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3058
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 306:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3062
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 307:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3068
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 308:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3072
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 309:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3076
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 310:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3080
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 311:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3086
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 312:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3090
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[3].union.kvOption())
		}
	case 313:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3096
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 314:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3100
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 315:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3104
		{
			sqlVAL.union.val = nil
		}
	case 316:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3116
		{

			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			if sqlDollar[7].union.expr() != nil {
				return unimplementedWithIssue(sqllex, 54580)
			}
			sqlVAL.union.val = &tree.CopyFrom{
				Table:   name,
				Columns: sqlDollar[3].union.nameList(),
				Stdin:   true,
				Options: *sqlDollar[6].union.copyOptions(),
			}
		}
	case 317:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3130
		{
			return unimplemented(sqllex, "copy from unsupported format")
		}
	case 318:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3136
		{
			sqlVAL.union.val = sqlDollar[2].union.copyOptions()
		}
	case 319:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3140
		{
			sqlVAL.union.val = &tree.CopyOptions{}
		}
	case 320:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3146
		{
			sqlVAL.union.val = sqlDollar[1].union.copyOptions()
		}
	case 321:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3150
		{
			if err := sqlDollar[1].union.copyOptions().CombineWith(sqlDollar[2].union.copyOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 322:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3158
		{
			sqlVAL.union.val = &tree.CopyOptions{Destination: sqlDollar[3].union.expr()}
		}
	case 323:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3162
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatBinary}
		}
	case 324:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3166
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatCSV}
		}
	case 325:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3170
		{
			sqlVAL.union.val = &tree.CopyOptions{Delimiter: sqlDollar[2].union.expr()}
		}
	case 326:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3174
		{
			sqlVAL.union.val = &tree.CopyOptions{Null: sqlDollar[2].union.expr()}
		}
	case 328:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3182
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 330:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3183
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 332:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3184
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 333:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3185
		{
			return helpWith(sqllex, "CANCEL")
		}
	case 334:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3195
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.CancelJob,
			}
		}
	case 335:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3203
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 336:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3205
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 337:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3209
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 338:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3212
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 339:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3222
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 340:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3231
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 341:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3239
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 342:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3241
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 343:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3245
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 344:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3248
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 345:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3258
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 346:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3267
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 347:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3275
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 348:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3277
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 349:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3281
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 350:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3284
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 351:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3288
		{
			sqlVAL.union.val = &tree.CommentOnDatabase{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 352:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3292
		{
			sqlVAL.union.val = &tree.CommentOnTable{Table: sqlDollar[4].union.unresolvedObjectName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 353:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3296
		{
			varName, err := sqlDollar[4].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[4].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = &tree.CommentOnColumn{ColumnItem: columnItem, Comment: sqlDollar[6].union.strPtr()}
		}
	case 354:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3309
		{
			sqlVAL.union.val = &tree.CommentOnIndex{Index: sqlDollar[4].union.tableIndexName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 355:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3312
		{
			return unimplemented(sqllex, "comment on extension")
		}
	case 356:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3316
		{
			t := sqlDollar[1].str
			sqlVAL.union.val = &t
		}
	case 357:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3321
		{
			var str *string
			sqlVAL.union.val = str
		}
	case 359:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3333
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 362:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3335
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 364:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3336
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 368:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3339
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 369:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3340
		{
		}
	case 370:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3341
		{
			return helpWith(sqllex, "CREATE")
		}
	case 371:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3348
		{
			sqlVAL.union.val = &tree.CreateExtension{IfNotExists: true, Name: sqlDollar[6].str}
		}
	case 372:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3351
		{
			sqlVAL.union.val = &tree.CreateExtension{Name: sqlDollar[3].str}
		}
	case 373:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3354
		{
			return unimplemented(sqllex, "create extension if not exists with")
		}
	case 374:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3355
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 375:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3358
		{
			return unimplemented(sqllex, "create access method")
		}
	case 376:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3359
		{
			return unimplemented(sqllex, "create aggregate")
		}
	case 377:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3360
		{
			return unimplemented(sqllex, "create cast")
		}
	case 378:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3361
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create constraint")
		}
	case 379:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3362
		{
			return unimplemented(sqllex, "create conversion")
		}
	case 380:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3363
		{
			return unimplemented(sqllex, "create def conv")
		}
	case 381:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3364
		{
			return unimplemented(sqllex, "create foreign table")
		}
	case 382:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3365
		{
			return unimplemented(sqllex, "create fdw")
		}
	case 383:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3366
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 384:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3367
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 385:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3368
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create language "+sqlDollar[6].str)
		}
	case 386:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3369
		{
			return unimplementedWithIssue(sqllex, 65017)
		}
	case 387:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3370
		{
			return unimplemented(sqllex, "create publication")
		}
	case 388:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3371
		{
			return unimplemented(sqllex, "create rule")
		}
	case 389:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3372
		{
			return unimplemented(sqllex, "create server")
		}
	case 390:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3373
		{
			return unimplemented(sqllex, "create subscription")
		}
	case 391:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3374
		{
			return unimplementedWithIssueDetail(sqllex, 54113, "create tablespace")
		}
	case 392:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3375
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "create text")
		}
	case 393:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3376
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create trigger")
		}
	case 394:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3379
		{
		}
	case 395:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3380
		{
		}
	case 396:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3383
		{
		}
	case 397:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3384
		{
		}
	case 398:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3387
		{
		}
	case 399:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3388
		{
		}
	case 400:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3391
		{
			return unimplemented(sqllex, "drop access method")
		}
	case 401:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3392
		{
			return unimplemented(sqllex, "drop aggregate")
		}
	case 402:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3393
		{
			return unimplemented(sqllex, "drop cast")
		}
	case 403:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3394
		{
			return unimplemented(sqllex, "drop collation")
		}
	case 404:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3395
		{
			return unimplemented(sqllex, "drop conversion")
		}
	case 405:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3396
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "drop")
		}
	case 406:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3397
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[5].str)
		}
	case 407:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3398
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[3].str)
		}
	case 408:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3399
		{
			return unimplemented(sqllex, "drop foreign table")
		}
	case 409:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3400
		{
			return unimplemented(sqllex, "drop fdw")
		}
	case 410:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3401
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop function")
		}
	case 411:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3402
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop language "+sqlDollar[4].str)
		}
	case 412:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3403
		{
			return unimplemented(sqllex, "drop operator")
		}
	case 413:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3404
		{
			return unimplemented(sqllex, "drop publication")
		}
	case 414:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3405
		{
			return unimplemented(sqllex, "drop rule")
		}
	case 415:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3406
		{
			return unimplemented(sqllex, "drop server")
		}
	case 416:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3407
		{
			return unimplemented(sqllex, "drop subscription")
		}
	case 417:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3408
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "drop text")
		}
	case 418:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3409
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "drop")
		}
	case 420:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3412
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 422:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3413
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 424:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3414
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 426:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3415
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 428:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3416
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 429:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3418
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 431:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3419
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 433:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3420
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 435:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3421
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 436:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3431
		{
			sqlVAL.union.val = &tree.CreateStats{
				Name:        tree.Name(sqlDollar[3].str),
				ColumnNames: sqlDollar[4].union.nameList(),
				Table:       sqlDollar[6].union.tblExpr(),
				Options:     *sqlDollar[7].union.createStatsOptions(),
			}
		}
	case 437:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3439
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 438:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3443
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 439:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3447
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 440:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3453
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 441:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3457
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
			}
		}
	case 442:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3466
		{

			sqlVAL.union.val = sqlDollar[3].union.createStatsOptions()
		}
	case 443:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3473
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 444:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3479
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{}
		}
	case 445:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3485
		{
			sqlVAL.union.val = sqlDollar[1].union.createStatsOptions()
		}
	case 446:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3489
		{
			a := sqlDollar[1].union.createStatsOptions()
			b := sqlDollar[2].union.createStatsOptions()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 447:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3500
		{

			value, _ := constant.Float64Val(sqlDollar[2].union.numVal().AsConstantValue())
			if value < 0.0 || value >= 1.0 {
				sqllex.Error("THROTTLING fraction must be between 0 and 1")
				return 1
			}
			sqlVAL.union.val = &tree.CreateStatsOptions{
				Throttling: value,
			}
		}
	case 448:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3512
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 449:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3527
		{
			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				SinkURI: sqlDollar[5].union.expr(),
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 450:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3535
		{

			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 451:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3545
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[1].union.tablePatterns()}
		}
	case 452:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3549
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 453:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3555
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()}
		}
	case 454:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3559
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedObjectName().ToUnresolvedName())
		}
	case 455:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3566
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 456:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3570
		{

			sqlVAL.union.val = nil
		}
	case 457:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3587
		{
			sqlVAL.union.val = &tree.ReplicationStream{
				Targets: sqlDollar[5].union.targetList(),
				SinkURI: sqlDollar[6].union.expr(),
				Options: *sqlDollar[7].union.replicationOptions(),
			}
		}
	case 458:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3598
		{
			sqlVAL.union.val = sqlDollar[2].union.replicationOptions()
		}
	case 459:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3602
		{
			sqlVAL.union.val = sqlDollar[4].union.replicationOptions()
		}
	case 460:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3606
		{
			sqlVAL.union.val = &tree.ReplicationOptions{}
		}
	case 461:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3613
		{
			sqlVAL.union.val = sqlDollar[1].union.replicationOptions()
		}
	case 462:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3617
		{
			if err := sqlDollar[1].union.replicationOptions().CombineWith(sqlDollar[3].union.replicationOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 463:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3626
		{
			sqlVAL.union.val = &tree.ReplicationOptions{Cursor: sqlDollar[3].union.expr()}
		}
	case 464:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3630
		{
			sqlVAL.union.val = &tree.ReplicationOptions{Detached: true}
		}
	case 465:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3643
		{
			sqlVAL.union.val = &tree.Delete{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[4].union.tblExpr(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[6].union.expr()),
				OrderBy:   sqlDollar[7].union.orderBy(),
				Limit:     sqlDollar[8].union.limit(),
				Returning: sqlDollar[9].union.retClause(),
			}
		}
	case 466:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3653
		{
			return helpWith(sqllex, "DELETE")
		}
	case 467:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3656
		{
			return unimplementedWithIssueDetail(sqllex, 40963, "delete using")
		}
	case 468:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3657
		{
		}
	case 469:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3665
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeAll}
		}
	case 470:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3668
		{
			return unimplemented(sqllex, "discard plans")
		}
	case 471:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3669
		{
			return unimplemented(sqllex, "discard sequences")
		}
	case 472:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3670
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 473:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3671
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 474:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3672
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 477:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3681
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 479:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3682
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 480:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3683
		{
		}
	case 481:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3684
		{
			return helpWith(sqllex, "DROP")
		}
	case 483:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3687
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 485:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3688
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 487:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3689
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 489:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3690
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 491:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3691
		{
			return helpWith(sqllex, "DROP SEQUENCE")
		}
	case 493:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3692
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 495:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3693
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 496:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3701
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 497:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3705
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 498:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3709
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[4].union.tableNames(),
				IfExists:       false,
				DropBehavior:   sqlDollar[5].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 499:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3718
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[6].union.tableNames(),
				IfExists:       true,
				DropBehavior:   sqlDollar[7].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 500:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3726
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 501:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3734
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 502:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3738
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 503:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3741
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 504:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3749
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 505:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3753
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 506:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3756
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 507:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3764
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[4].union.newTableIndexNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[5].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 508:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3773
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[6].union.newTableIndexNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[7].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 509:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3781
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 510:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3789
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[3].str),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 511:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3797
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[5].str),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 512:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3804
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 513:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3811
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[3].union.unresolvedObjectNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 514:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3819
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[5].union.unresolvedObjectNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 515:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3826
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 516:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3830
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[1].union.unresolvedObjectNames()}
		}
	case 517:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3836
		{
			sqlVAL.union.val = []*tree.UnresolvedObjectName{sqlDollar[1].union.unresolvedObjectName()}
		}
	case 518:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3840
		{
			sqlVAL.union.val = append(sqlDollar[1].union.unresolvedObjectNames(), sqlDollar[3].union.unresolvedObjectName())
		}
	case 519:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3849
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[3].union.objectNamePrefixList(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 520:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3857
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[5].union.objectNamePrefixList(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 521:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3864
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 522:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3872
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[3].union.exprs(), IfExists: false, IsRole: sqlDollar[2].union.bool()}
		}
	case 523:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3876
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[5].union.exprs(), IfExists: true, IsRole: sqlDollar[2].union.bool()}
		}
	case 524:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3879
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 525:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3883
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 526:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3888
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 527:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3901
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 528:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3906
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 529:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3908
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 530:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3913
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 531:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3917
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 532:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3940
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(nil, sqlDollar[2].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 533:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3947
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 534:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3949
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(sqlDollar[3].union.strs(), sqlDollar[5].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 535:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3957
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 536:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3965
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 537:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3973
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 538:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3981
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 539:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3992
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 544:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4000
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 548:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4003
		{
			return helpWith(sqllex, "DELETE")
		}
	case 551:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4005
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 553:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4006
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 555:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4007
		{
			return helpWith(sqllex, "INSERT")
		}
	case 559:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4010
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 562:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4012
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 564:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4015
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 568:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4020
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 570:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4021
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 572:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4022
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 574:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4027
		{
			return helpWith(sqllex, "DELETE")
		}
	case 576:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4028
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 578:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4029
		{
			return helpWith(sqllex, "INSERT")
		}
	case 579:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4031
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 582:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4035
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 584:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4036
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 585:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4040
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 586:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4044
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 587:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4054
		{
			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: sqlDollar[5].union.stmt(),
			}
		}
	case 588:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4062
		{

			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: &tree.CannedOptPlan{Plan: sqlDollar[7].str},
			}
		}
	case 589:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4070
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 590:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4074
		{
			sqlVAL.union.val = sqlDollar[2].union.typeReferences()
		}
	case 591:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4078
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference(nil)
		}
	case 592:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4088
		{
			sqlVAL.union.val = &tree.Execute{
				Name:   tree.Name(sqlDollar[2].str),
				Params: sqlDollar[3].union.exprs(),
			}
		}
	case 593:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4095
		{

			sqlVAL.union.val = &tree.Execute{
				Name:        tree.Name(sqlDollar[2].str),
				Params:      sqlDollar[3].union.exprs(),
				DiscardRows: true,
			}
		}
	case 594:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4103
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 595:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4107
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 596:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4111
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 597:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4121
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[2].str)}
		}
	case 598:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4125
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[3].str)}
		}
	case 599:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4129
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 600:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4133
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 601:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4136
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 602:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4159
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 603:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4163
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 604:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4167
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: true}
		}
	case 605:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4171
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.nameList()}
		}
	case 606:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4175
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees: sqlDollar[7].union.nameList(),
			}
		}
	case 607:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4185
		{
			return unimplemented(sqllex, "grant privileges on schema with")
		}
	case 608:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4189
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas:           sqlDollar[8].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees: sqlDollar[10].union.nameList(),
			}
		}
	case 609:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4200
		{
			return unimplemented(sqllex, "grant privileges on sequence")
		}
	case 610:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4203
		{
			return helpWith(sqllex, "GRANT")
		}
	case 611:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4226
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 612:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4230
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 613:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4234
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[5].union.nameList(), Members: sqlDollar[7].union.nameList(), AdminOption: true}
		}
	case 614:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4238
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.nameList()}
		}
	case 615:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4242
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees: sqlDollar[7].union.nameList(),
			}
		}
	case 616:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4252
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas:           sqlDollar[8].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees: sqlDollar[10].union.nameList(),
			}
		}
	case 617:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4263
		{
			return unimplemented(sqllex, "revoke privileges on sequence")
		}
	case 618:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4266
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 619:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4271
		{
			sqlVAL.union.val = privilege.List{privilege.ALL}
		}
	case 620:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4275
		{
			privList, err := privilege.ListFromStrings(sqlDollar[1].union.nameList().ToStrings())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = privList
		}
	case 621:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4285
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 622:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4289
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 628:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4303
		{
			return helpWith(sqllex, "RESET")
		}
	case 630:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4304
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 631:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4312
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 632:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4316
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[3].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 633:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4319
		{
			return helpWith(sqllex, "RESET")
		}
	case 634:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4327
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: tree.DefaultVal{}}
		}
	case 635:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4330
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 636:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4341
		{
			sqlVAL.union.val = &tree.SetVar{Name: "database", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 637:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4344
		{
			return helpWith(sqllex, "USE")
		}
	case 639:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4348
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 640:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4349
		{
		}
	case 641:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4350
		{
			return unimplemented(sqllex, "set constraints")
		}
	case 642:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4351
		{
			return unimplementedWithIssue(sqllex, 32562)
		}
	case 644:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4355
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 646:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4356
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 648:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4357
		{
			return helpWith(sqllex, "USE")
		}
	case 651:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4373
		{
			return helpWith(sqllex, "SCRUB")
		}
	case 652:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4388
		{
			sqlVAL.union.val = &tree.Scrub{Typ: tree.ScrubDatabase, Database: tree.Name(sqlDollar[4].str), AsOf: sqlDollar[5].union.asOfClause()}
		}
	case 653:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4391
		{
			return helpWith(sqllex, "SCRUB DATABASE")
		}
	case 654:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4409
		{
			sqlVAL.union.val = &tree.Scrub{
				Typ:     tree.ScrubTable,
				Table:   sqlDollar[4].union.unresolvedObjectName(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: sqlDollar[6].union.scrubOptions(),
			}
		}
	case 655:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4417
		{
			return helpWith(sqllex, "SCRUB TABLE")
		}
	case 656:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4421
		{
			sqlVAL.union.val = sqlDollar[3].union.scrubOptions()
		}
	case 657:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4425
		{
			sqlVAL.union.val = tree.ScrubOptions{}
		}
	case 658:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4431
		{
			sqlVAL.union.val = tree.ScrubOptions{sqlDollar[1].union.scrubOption()}
		}
	case 659:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4435
		{
			sqlVAL.union.val = append(sqlDollar[1].union.scrubOptions(), sqlDollar[3].union.scrubOption())
		}
	case 660:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4441
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{}
		}
	case 661:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4445
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{IndexNames: sqlDollar[3].union.nameList()}
		}
	case 662:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4449
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{}
		}
	case 663:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4453
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{ConstraintNames: sqlDollar[3].union.nameList()}
		}
	case 664:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4457
		{
			sqlVAL.union.val = &tree.ScrubOptionPhysical{}
		}
	case 665:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4468
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: sqlDollar[6].union.expr()}
		}
	case 666:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4471
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 669:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4481
		{
			sqlVAL.union.val = &tree.SetVar{Values: sqlDollar[4].union.exprs()}
		}
	case 670:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4497
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 671:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4501
		{
			sqlVAL.union.val = sqlDollar[2].union.stmt()
		}
	case 672:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4506
		{
			sqlVAL.union.val = &tree.SetSessionCharacteristics{Modes: sqlDollar[6].union.transactionModes()}
		}
	case 673:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4525
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[3].union.transactionModes()}
		}
	case 674:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4528
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 675:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4530
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[4].union.transactionModes()}
		}
	case 676:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4533
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 677:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4537
		{

			varName := sqlDollar[1].union.strs()
			if len(varName) == 1 && varName[0] == "tracing" {
				sqlVAL.union.val = &tree.SetTracing{Values: sqlDollar[3].union.exprs()}
			} else {
				sqlVAL.union.val = &tree.SetVar{Name: strings.Join(sqlDollar[1].union.strs(), "."), Values: sqlDollar[3].union.exprs()}
			}
		}
	case 679:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4556
		{

			sqlVAL.union.val = &tree.SetVar{Name: "timezone", Values: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 680:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4563
		{

			sqlVAL.union.val = &tree.SetVar{Name: "search_path", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 681:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4568
		{

			sqlVAL.union.val = &tree.SetSessionAuthorizationDefault{}
		}
	case 682:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4573
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 684:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4578
		{
			return unimplemented(sqllex, "set from current")
		}
	case 685:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4579
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 686:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4587
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 687:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4592
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 688:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4599
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 689:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4603
		{
			sqlVAL.union.val = append([]string{sqlDollar[1].str}, sqlDollar[2].union.strs()...)
		}
	case 690:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4609
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 691:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4613
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 693:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4620
		{
			sqlVAL.union.val = tree.Expr(&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}})
		}
	case 696:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4641
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 697:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4645
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 698:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4651
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 699:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4655
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 700:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4659
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 701:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4663
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 702:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4667
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 703:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4673
		{
			sqlVAL.union.val = tree.Low
		}
	case 704:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4677
		{
			sqlVAL.union.val = tree.Normal
		}
	case 705:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4681
		{
			sqlVAL.union.val = tree.High
		}
	case 706:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4692
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 707:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4696
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 708:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4700
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 710:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4705
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 711:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4709
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 713:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4724
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 715:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4725
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 717:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4726
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 719:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4727
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 721:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4728
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 723:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4729
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 725:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4730
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 727:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4731
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 730:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4733
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 732:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4734
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 734:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4735
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 736:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4736
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 738:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4737
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 741:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4739
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 743:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4740
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 745:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4741
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 748:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4743
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 751:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4745
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 753:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4746
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 755:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4747
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 757:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4748
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 759:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4749
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 761:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4750
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 763:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4751
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 765:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4752
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 767:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4753
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 769:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4754
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 771:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4755
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 773:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4756
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 775:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4757
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 777:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4758
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 778:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4759
		{
			return helpWith(sqllex, "SHOW")
		}
	case 781:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4766
		{
		}
	case 782:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4767
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 783:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4770
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 784:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4774
		{

			return purposelyUnimplemented(sqllex, "reindex table", "CockroachDB does not require reindexing.")
		}
	case 785:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4779
		{

			return purposelyUnimplemented(sqllex, "reindex index", "CockroachDB does not require reindexing.")
		}
	case 786:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4784
		{

			return purposelyUnimplemented(sqllex, "reindex schema", "CockroachDB does not require reindexing.")
		}
	case 787:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4789
		{

			return purposelyUnimplemented(sqllex, "reindex database", "CockroachDB does not require reindexing.")
		}
	case 788:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4794
		{

			return purposelyUnimplemented(sqllex, "reindex system", "CockroachDB does not require reindexing.")
		}
	case 789:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4804
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[2].str}
		}
	case 790:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4805
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[3].str}
		}
	case 791:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4806
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 795:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4817
		{
			sqlVAL.str = "client_encoding"
		}
	case 797:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4820
		{
			sqlVAL.str = "timezone"
		}
	case 798:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4821
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 799:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4835
		{
			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 800:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4839
		{

			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[7].union.unresolvedObjectName(), UsingJSON: true}
		}
	case 801:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4843
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 802:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4854
		{

			id, err := sqlDollar[3].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ShowHistogram{HistogramID: id}
		}
	case 803:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4862
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 804:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4870
		{
			sqlVAL.union.val = &tree.ShowBackup{
				InCollection: sqlDollar[4].union.expr(),
			}
		}
	case 805:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4876
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupDefaultDetails,
				Path:    sqlDollar[3].union.expr(),
				Options: sqlDollar[4].union.kvOptions(),
			}
		}
	case 806:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4884
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:      tree.BackupDefaultDetails,
				Path:         sqlDollar[3].union.expr(),
				InCollection: sqlDollar[5].union.expr(),
				Options:      sqlDollar[6].union.kvOptions(),
			}
		}
	case 807:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4893
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:              tree.BackupDefaultDetails,
				ShouldIncludeSchemas: true,
				Path:                 sqlDollar[4].union.expr(),
				Options:              sqlDollar[5].union.kvOptions(),
			}
		}
	case 808:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4902
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupRangeDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 809:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4911
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupFileDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 810:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4919
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 811:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4929
		{
			sqlVAL.union.val = &tree.ShowClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), ".")}
		}
	case 812:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4933
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 813:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4936
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 814:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4938
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 815:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4941
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 816:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4943
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 817:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4947
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 818:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4950
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 819:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4958
		{
			sqlVAL.union.val = &tree.ShowColumns{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 820:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4961
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 821:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4969
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 822:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4973
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsDB: true, Database: tree.Name(sqlDollar[5].str)}
		}
	case 823:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4977
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsIndex: true, Index: sqlDollar[5].union.tableIndexName()}
		}
	case 824:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4981
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 825:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4984
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 826:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4992
		{
			sqlVAL.union.val = &tree.ShowDatabases{WithComment: sqlDollar[3].union.bool()}
		}
	case 827:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4995
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 828:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5002
		{
			sqlVAL.union.val = &tree.ShowEnums{}
		}
	case 829:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5006
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
			}
		}
	case 830:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5016
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
			}
		}
	case 831:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5025
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 832:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5032
		{
			sqlVAL.union.val = &tree.ShowTypes{}
		}
	case 833:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5035
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 834:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5048
		{
			lst := sqlDollar[3].union.targetListPtr()
			if lst != nil && lst.ForRoles {
				sqlVAL.union.val = &tree.ShowRoleGrants{Roles: lst.Roles, Grantees: sqlDollar[4].union.nameList()}
			} else {
				sqlVAL.union.val = &tree.ShowGrants{Targets: lst, Grantees: sqlDollar[4].union.nameList()}
			}
		}
	case 835:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5056
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 836:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5064
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 837:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5067
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 838:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5069
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 839:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5073
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 840:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5077
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 841:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5080
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 842:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5082
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 843:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5086
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 844:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5089
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 845:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5097
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 846:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5100
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 847:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5102
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 848:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5105
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 849:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5113
		{
			sqlVAL.union.val = &tree.ShowQueries{All: false, Cluster: sqlDollar[2].union.bool()}
		}
	case 850:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5116
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 851:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5118
		{
			sqlVAL.union.val = &tree.ShowQueries{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 852:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5121
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 853:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5125
		{
			sqlVAL.union.val = true
		}
	case 854:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5127
		{
			sqlVAL.union.val = true
		}
	case 855:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5129
		{
			sqlVAL.union.val = false
		}
	case 858:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5146
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: true}
		}
	case 859:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5150
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: false}
		}
	case 860:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5154
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{}
		}
	case 861:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5157
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 862:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5158
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 863:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5159
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 864:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5161
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[3].union.slct()}
		}
	case 865:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5165
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[5].union.slct(), Block: true}
		}
	case 866:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5169
		{
			sqlVAL.union.val = &tree.ShowJobs{Schedules: sqlDollar[3].union.slct()}
		}
	case 867:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5173
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{Jobs: sqlDollar[4].union.slct()}
		}
	case 868:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5176
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 869:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5178
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
			}
		}
	case 870:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5186
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[4].union.expr()}}},
				},
			}
		}
	case 871:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5194
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				Block: true,
			}
		}
	case 872:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5202
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 873:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5203
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 874:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5213
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ExecutorType:   sqlDollar[3].union.executorType(),
			}
		}
	case 875:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5219
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 876:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5221
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: sqlDollar[2].union.scheduleState(),
				ExecutorType:   sqlDollar[4].union.executorType(),
			}
		}
	case 877:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5227
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 878:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5229
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ScheduleID:     sqlDollar[3].union.expr(),
			}
		}
	case 879:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5235
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 880:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5239
		{
			sqlVAL.union.val = tree.ActiveSchedules
		}
	case 881:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5243
		{
			sqlVAL.union.val = tree.PausedSchedules
		}
	case 882:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5249
		{
			sqlVAL.union.val = tree.InvalidExecutor
		}
	case 883:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5253
		{
			sqlVAL.union.val = tree.ScheduledBackupExecutor
		}
	case 884:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5264
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceRaw, Compact: sqlDollar[2].union.bool()}
		}
	case 885:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5267
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 886:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5269
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceKV, Compact: sqlDollar[2].union.bool()}
		}
	case 887:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5272
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 888:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5274
		{

			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceReplica, Compact: sqlDollar[2].union.bool()}
		}
	case 889:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5278
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 890:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5281
		{
			sqlVAL.union.val = true
		}
	case 891:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5282
		{
			sqlVAL.union.val = false
		}
	case 892:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5290
		{
			sqlVAL.union.val = &tree.ShowSessions{Cluster: sqlDollar[2].union.bool()}
		}
	case 893:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5293
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 894:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5295
		{
			sqlVAL.union.val = &tree.ShowSessions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 895:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5298
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 896:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5306
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
				WithComment: sqlDollar[7].union.bool()}
		}
	case 897:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5316
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
				WithComment: sqlDollar[5].union.bool()}
		}
	case 898:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5326
		{
			sqlVAL.union.val = &tree.ShowTables{WithComment: sqlDollar[3].union.bool()}
		}
	case 899:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5329
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 900:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5336
		{
			sqlVAL.union.val = &tree.ShowTransactions{Cluster: sqlDollar[2].union.bool()}
		}
	case 901:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5339
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 902:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5341
		{
			sqlVAL.union.val = &tree.ShowTransactions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 903:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5344
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 904:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5347
		{
			sqlVAL.union.val = true
		}
	case 905:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5348
		{
			sqlVAL.union.val = false
		}
	case 906:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5355
		{
			sqlVAL.union.val = &tree.ShowSchemas{Database: tree.Name(sqlDollar[4].str)}
		}
	case 907:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5359
		{
			sqlVAL.union.val = &tree.ShowSchemas{}
		}
	case 908:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5362
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 909:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5369
		{
			sqlVAL.union.val = &tree.ShowSequences{Database: tree.Name(sqlDollar[4].str)}
		}
	case 910:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5373
		{
			sqlVAL.union.val = &tree.ShowSequences{}
		}
	case 911:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5376
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 912:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5383
		{

			sqlVAL.union.val = &tree.ShowSyntax{Statement: sqlDollar[3].str}
		}
	case 913:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5387
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 914:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5391
		{

			sqlVAL.union.val = &tree.ShowLastQueryStatistics{}
		}
	case 915:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5401
		{
			sqlVAL.union.val = &tree.ShowSavepointStatus{}
		}
	case 916:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5404
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 917:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5412
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_isolation"}
		}
	case 918:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5417
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_priority"}
		}
	case 919:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5422
		{

			sqlVAL.union.val = &tree.ShowTransactionStatus{}
		}
	case 920:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5426
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 921:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5436
		{
			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[3].union.unresolvedObjectName()}
		}
	case 922:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5440
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeTable, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 923:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5445
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeView, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 924:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5450
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeSequence, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 925:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5455
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeDatabase, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 926:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5460
		{
			sqlVAL.union.val = &tree.ShowCreateAllTables{}
		}
	case 927:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5463
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 928:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5471
		{
			sqlVAL.union.val = &tree.ShowUsers{}
		}
	case 929:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5474
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 930:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5482
		{
			sqlVAL.union.val = &tree.ShowRoles{}
		}
	case 931:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5485
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 932:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5495
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[6].str)}}
		}
	case 933:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5499
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{Database: tree.Name(sqlDollar[6].str)}}
		}
	case 934:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5503
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 935:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5511
		{
			name := sqlDollar[9].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 936:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5519
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 937:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5526
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[9].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 938:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5532
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 939:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5534
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 940:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5537
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 941:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5539
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 942:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5542
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 944:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5546
		{
		}
	case 945:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5555
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: tree.TableIndexName{Table: name},
			}
		}
	case 946:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5563
		{
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: sqlDollar[5].union.tableIndexName(),
			}
		}
	case 947:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5569
		{
			return helpWith(sqllex, "SHOW RANGE")
		}
	case 948:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5578
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 949:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5583
		{
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: sqlDollar[5].union.tableIndexName()}
		}
	case 950:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5587
		{
			sqlVAL.union.val = &tree.ShowRanges{DatabaseName: tree.Name(sqlDollar[5].str)}
		}
	case 951:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5590
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 952:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5599
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{}
		}
	case 953:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5603
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{
				DatabaseName: tree.Name(sqlDollar[6].str),
			}
		}
	case 954:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5619
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromCluster,
			}
		}
	case 955:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5625
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
			}
		}
	case 956:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5631
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromAllDatabases,
			}
		}
	case 957:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5637
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
				DatabaseName:    tree.Name(sqlDollar[5].str),
			}
		}
	case 958:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5644
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDefault,
			}
		}
	case 959:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5649
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 960:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5653
		{
			sqlVAL.union.val = &tree.ShowVar{Name: "locality"}
		}
	case 961:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5659
		{

			sqlVAL.union.val = &tree.ShowFingerprints{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 962:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5666
		{

			sqlVAL.union.val = &tree.ShowFullTableScans{}
		}
	case 963:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5673
		{
			tmp := sqlDollar[2].union.targetList()
			sqlVAL.union.val = &tmp
		}
	case 964:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5678
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 965:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5798
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 966:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5802
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 967:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5806
		{

			sqlVAL.union.val = tree.TargetList{
				Tables:   tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}},
				ForRoles: sqlDollar[1].str == "role",
			}
		}
	case 968:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5845
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{sqlDollar[1].union.unresolvedName()}}
		}
	case 969:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5849
		{
			remainderPats := sqlDollar[3].union.tablePatterns()
			sqlVAL.union.val = tree.TargetList{Tables: append(tree.TablePatterns{sqlDollar[1].union.unresolvedName()}, remainderPats...)}
		}
	case 970:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5854
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 971:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5858
		{
			tenID := uint64(sqlDollar[2].union.int64())
			if tenID == 0 {
				return setErr(sqllex, errors.New("invalid tenant ID"))
			}
			sqlVAL.union.val = tree.TargetList{Tenant: roachpb.MakeTenantID(tenID)}
		}
	case 972:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5866
		{
			sqlVAL.union.val = tree.TargetList{Databases: sqlDollar[2].union.nameList()}
		}
	case 973:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5875
		{
			sqlVAL.union.val = tree.TargetList{ForRoles: true, Roles: sqlDollar[2].union.nameList()}
		}
	case 974:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5879
		{
			sqlVAL.union.val = tree.TargetList{Schemas: sqlDollar[2].union.objectNamePrefixList()}
		}
	case 975:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5883
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[2].union.unresolvedObjectNames()}
		}
	case 977:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5890
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 978:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5894
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 980:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5907
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 982:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5908
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 983:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5909
		{
			return helpWith(sqllex, "PAUSE")
		}
	case 985:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5919
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 987:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5920
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 988:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5921
		{
			return helpWith(sqllex, "RESUME")
		}
	case 989:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5931
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
			}
		}
	case 990:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5939
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 991:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5941
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 992:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5945
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 993:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5948
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 994:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5953
		{
			sqlVAL.union.val = sqlDollar[3].union.slct()
		}
	case 995:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5957
		{
			sqlVAL.union.val = &tree.Select{
				Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
			}
		}
	case 996:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5972
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseSchedule,
			}
		}
	case 997:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5980
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 998:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5982
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.PauseSchedule,
			}
		}
	case 999:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5988
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1000:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5996
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
			}
		}
	case 1001:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6002
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
			}
		}
	case 1002:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6009
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:   sqlDollar[3].union.objectNamePrefix(),
				AuthRole: sqlDollar[5].union.user(),
			}
		}
	case 1003:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6016
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
				AuthRole:    sqlDollar[8].union.user(),
			}
		}
	case 1004:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6023
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 1005:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6034
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 1006:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6043
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaOwner{
					Owner: sqlDollar[6].union.user(),
				},
			}
		}
	case 1007:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6051
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 1008:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:6090
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      false,
				Interleave:       sqlDollar[9].union.interleave(),
				Defs:             sqlDollar[6].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[10].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[11].union.storageParams(),
				OnCommit:         sqlDollar[12].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[13].union.locality(),
			}
		}
	case 1009:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:6106
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      true,
				Interleave:       sqlDollar[12].union.interleave(),
				Defs:             sqlDollar[9].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[13].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[14].union.storageParams(),
				OnCommit:         sqlDollar[15].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[16].union.locality(),
			}
		}
	case 1010:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6124
		{
			sqlVAL.union.val = sqlDollar[1].union.locality()
		}
	case 1011:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6128
		{
			sqlVAL.union.val = (*tree.Locality)(nil)
		}
	case 1013:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6135
		{

			sqlVAL.union.val = nil
		}
	case 1014:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6141
		{
			return unimplemented(sqllex, "create table with oids")
		}
	case 1015:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6147
		{
			sqlVAL.str = ""
		}
	case 1016:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6151
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "create table inherits")
		}
	case 1017:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6157
		{
			sqlVAL.union.val = nil
		}
	case 1018:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6161
		{
			sqlVAL.union.val = sqlDollar[3].union.storageParams()
		}
	case 1019:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6166
		{
			sqlVAL.union.val = tree.CreateTableOnCommitUnset
		}
	case 1020:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6170
		{
			sqlVAL.union.val = tree.CreateTableOnCommitPreserveRows
		}
	case 1021:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6174
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "delete rows")
		}
	case 1022:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6178
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "drop")
		}
	case 1023:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6184
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 1024:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6188
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 1025:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6194
		{
			sqlVAL.union.val = []tree.StorageParam{sqlDollar[1].union.storageParam()}
		}
	case 1026:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6198
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParams(), sqlDollar[3].union.storageParam())
		}
	case 1027:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6204
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Interleave:    nil,
				Defs:          sqlDollar[5].union.tblDefs(),
				AsSource:      sqlDollar[8].union.slct(),
				StorageParams: sqlDollar[6].union.storageParams(),
				OnCommit:      sqlDollar[10].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 1028:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:6218
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Interleave:    nil,
				Defs:          sqlDollar[8].union.tblDefs(),
				AsSource:      sqlDollar[11].union.slct(),
				StorageParams: sqlDollar[9].union.storageParams(),
				OnCommit:      sqlDollar[13].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 1029:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6233
		{
		}
	case 1030:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6234
		{
		}
	case 1031:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6235
		{
			return unimplemented(sqllex, "create table as with no data")
		}
	case 1032:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6253
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1033:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6254
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1034:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6255
		{
			sqlVAL.union.val = tree.PersistencePermanent
		}
	case 1036:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6259
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1037:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6260
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1038:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6261
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1039:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6262
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1040:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6263
		{
			sqlVAL.union.val = tree.PersistenceUnlogged
		}
	case 1042:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6268
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1043:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6274
		{
			sqlVAL.union.val = tree.TableDefs{sqlDollar[1].union.tblDef()}
		}
	case 1044:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6278
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1045:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6284
		{
			sqlVAL.union.val = sqlDollar[1].union.colDef()
		}
	case 1048:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6290
		{
			def := sqlDollar[1].union.constraintDef()
			valBehavior := sqlDollar[2].union.validationBehavior()
			if u, ok := def.(*tree.UniqueConstraintTableDef); ok && valBehavior == tree.ValidationSkip {
				typ := "PRIMARY KEY"
				if !u.PrimaryKey {
					typ = "UNIQUE"
				}
				return purposelyUnimplemented(sqllex, "table constraint", typ+" constraints cannot be marked NOT VALID")
			}
			sqlVAL.union.val = def
		}
	case 1049:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6303
		{
			sqlVAL.union.val = &tree.LikeTableDef{
				Name:    sqlDollar[2].union.unresolvedObjectName().ToTableName(),
				Options: sqlDollar[3].union.likeTableOptionList(),
			}
		}
	case 1050:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6312
		{
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), sqlDollar[3].union.likeTableOption())
		}
	case 1051:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6316
		{
			opt := sqlDollar[3].union.likeTableOption()
			opt.Excluded = true
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), opt)
		}
	case 1052:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6322
		{
			sqlVAL.union.val = []tree.LikeTableOption(nil)
		}
	case 1053:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6327
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding comments")
		}
	case 1054:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6328
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptConstraints}
		}
	case 1055:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6329
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptDefaults}
		}
	case 1056:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6330
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding identity")
		}
	case 1057:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6331
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptGenerated}
		}
	case 1058:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6332
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptIndexes}
		}
	case 1059:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6333
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding statistics")
		}
	case 1060:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6334
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding storage")
		}
	case 1061:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6335
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptAll}
		}
	case 1062:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6340
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.InterleaveDef{
				Parent:       name,
				Fields:       sqlDollar[6].union.nameList(),
				DropBehavior: sqlDollar[8].union.dropBehavior(),
			}
		}
	case 1063:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6349
		{
			sqlVAL.union.val = (*tree.InterleaveDef)(nil)
		}
	case 1064:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6356
		{

			sqlVAL.union.val = tree.DropCascade
		}
	case 1065:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6361
		{

			sqlVAL.union.val = tree.DropRestrict
		}
	case 1066:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6366
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 1067:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6372
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1069:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6379
		{
			sqlVAL.str = ""
		}
	case 1071:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6386
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1072:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6392
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1073:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6400
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1074:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6406
		{
			sqlVAL.union.val = (*tree.PartitionByIndex)(nil)
		}
	case 1075:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6412
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1076:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6418
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				All:         true,
				PartitionBy: sqlDollar[4].union.partitionBy(),
			}
		}
	case 1078:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6428
		{
			sqlVAL.union.val = (*tree.PartitionByTable)(nil)
		}
	case 1079:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6434
		{
			sqlVAL.union.val = sqlDollar[3].union.partitionBy()
		}
	case 1080:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6440
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				List:   sqlDollar[6].union.listPartitions(),
			}
		}
	case 1081:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6447
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				Range:  sqlDollar[6].union.rangePartitions(),
			}
		}
	case 1082:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6454
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1083:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6460
		{
			sqlVAL.union.val = []tree.ListPartition{sqlDollar[1].union.listPartition()}
		}
	case 1084:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6464
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listPartitions(), sqlDollar[3].union.listPartition())
		}
	case 1085:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6470
		{
			sqlVAL.union.val = tree.ListPartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				Exprs:        sqlDollar[5].union.exprs(),
				Subpartition: sqlDollar[7].union.partitionBy(),
			}
		}
	case 1086:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6480
		{
			sqlVAL.union.val = []tree.RangePartition{sqlDollar[1].union.rangePartition()}
		}
	case 1087:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6484
		{
			sqlVAL.union.val = append(sqlDollar[1].union.rangePartitions(), sqlDollar[3].union.rangePartition())
		}
	case 1088:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6490
		{
			sqlVAL.union.val = tree.RangePartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				From:         sqlDollar[5].union.exprs(),
				To:           sqlDollar[9].union.exprs(),
				Subpartition: sqlDollar[11].union.partitionBy(),
			}
		}
	case 1089:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6504
		{
			typ := sqlDollar[2].union.typeReference()
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), typ, tree.IsReferenceSerialType(typ), sqlDollar[3].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = tableDef
		}
	case 1090:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6515
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1091:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6519
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1092:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6525
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Name: tree.Name(sqlDollar[2].str), Qualification: sqlDollar[3].union.colQualElem()}
		}
	case 1093:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6529
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1094:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6533
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: tree.ColumnCollation(sqlDollar[2].str)}
		}
	case 1095:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6537
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1096:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6541
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[3].str), Create: true}}
		}
	case 1097:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6545
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Create: true}}
		}
	case 1098:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6549
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[6].str), Create: true, IfNotExists: true}}
		}
	case 1099:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6567
		{
			sqlVAL.union.val = tree.NotNullConstraint{}
		}
	case 1100:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6571
		{
			sqlVAL.union.val = tree.NullConstraint{}
		}
	case 1101:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6575
		{
			sqlVAL.union.val = tree.HiddenConstraint{}
		}
	case 1102:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6579
		{
			sqlVAL.union.val = tree.UniqueConstraint{
				WithoutIndex: sqlDollar[2].union.bool(),
			}
		}
	case 1103:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6585
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 1104:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6589
		{
			sqlVAL.union.val = tree.ShardedPrimaryKeyConstraint{
				Sharded:      true,
				ShardBuckets: sqlDollar[8].union.expr(),
			}
		}
	case 1105:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6596
		{
			sqlVAL.union.val = &tree.ColumnCheckConstraint{Expr: sqlDollar[3].union.expr()}
		}
	case 1106:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6600
		{
			sqlVAL.union.val = &tree.ColumnDefault{Expr: sqlDollar[2].union.expr()}
		}
	case 1107:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6604
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ColumnFKConstraint{
				Table:   name,
				Col:     tree.Name(sqlDollar[3].str),
				Actions: sqlDollar[5].union.referenceActions(),
				Match:   sqlDollar[4].union.compositeKeyMatchMethod(),
			}
		}
	case 1108:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6614
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: false}
		}
	case 1109:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6618
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: true}
		}
	case 1110:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6622
		{
			sqllex.Error("use AS ( <expr> ) STORED or AS ( <expr> ) VIRTUAL")
			return 1
		}
	case 1111:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6629
		{

			sqlVAL.union.val = true
		}
	case 1112:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6634
		{
			sqlVAL.union.val = false
		}
	case 1113:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6640
		{
		}
	case 1114:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6641
		{
		}
	case 1115:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6646
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[2].str),
				Columns:          sqlDollar[4].union.idxElems(),
				Sharded:          sqlDollar[6].union.shardedIndexDef(),
				Storing:          sqlDollar[7].union.nameList(),
				Interleave:       sqlDollar[8].union.interleave(),
				PartitionByIndex: sqlDollar[9].union.partitionByIndex(),
				StorageParams:    sqlDollar[10].union.storageParams(),
				Predicate:        sqlDollar[11].union.expr(),
			}
		}
	case 1116:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:6659
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Name:             tree.Name(sqlDollar[3].str),
					Columns:          sqlDollar[5].union.idxElems(),
					Sharded:          sqlDollar[7].union.shardedIndexDef(),
					Storing:          sqlDollar[8].union.nameList(),
					Interleave:       sqlDollar[9].union.interleave(),
					PartitionByIndex: sqlDollar[10].union.partitionByIndex(),
					StorageParams:    sqlDollar[11].union.storageParams(),
					Predicate:        sqlDollar[12].union.expr(),
				},
			}
		}
	case 1117:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:6674
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[3].str),
				Columns:          sqlDollar[5].union.idxElems(),
				Inverted:         true,
				PartitionByIndex: sqlDollar[7].union.partitionByIndex(),
				StorageParams:    sqlDollar[8].union.storageParams(),
				Predicate:        sqlDollar[9].union.expr(),
			}
		}
	case 1118:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6687
		{
			sqlVAL.union.val = &tree.FamilyTableDef{
				Name:    tree.Name(sqlDollar[2].str),
				Columns: sqlDollar[4].union.nameList(),
			}
		}
	case 1119:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6699
		{
			sqlVAL.union.val = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val.(tree.ConstraintTableDef).SetName(tree.Name(sqlDollar[2].str))
		}
	case 1120:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6704
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1121:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6710
		{
			sqlVAL.union.val = &tree.CheckConstraintTableDef{
				Expr: sqlDollar[3].union.expr(),
			}
		}
	case 1122:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6717
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				WithoutIndex: sqlDollar[2].union.bool(),
				IndexTableDef: tree.IndexTableDef{
					Columns:          sqlDollar[4].union.idxElems(),
					Storing:          sqlDollar[6].union.nameList(),
					Interleave:       sqlDollar[7].union.interleave(),
					PartitionByIndex: sqlDollar[8].union.partitionByIndex(),
					Predicate:        sqlDollar[10].union.expr(),
				},
			}
		}
	case 1123:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6730
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:    sqlDollar[4].union.idxElems(),
					Sharded:    sqlDollar[6].union.shardedIndexDef(),
					Interleave: sqlDollar[7].union.interleave(),
				},
				PrimaryKey: true,
			}
		}
	case 1124:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6742
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ForeignKeyConstraintTableDef{
				Table:    name,
				FromCols: sqlDollar[4].union.nameList(),
				ToCols:   sqlDollar[8].union.nameList(),
				Match:    sqlDollar[9].union.compositeKeyMatchMethod(),
				Actions:  sqlDollar[10].union.referenceActions(),
			}
		}
	case 1125:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6753
		{
			return unimplementedWithIssueDetail(sqllex, 46657, "add constraint exclude using")
		}
	case 1126:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6760
		{
			sqlVAL.union.val = sqlDollar[2].union.val
		}
	case 1127:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6764
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1128:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6770
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), nil, false, sqlDollar[2].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef
			sqlVAL.union.val = tree.TableDefs{colToTableDef}
		}
	case 1129:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6780
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[3].str), nil, false, sqlDollar[4].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef

			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), colToTableDef)
		}
	case 1130:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6791
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1131:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6795
		{
			var constraintToTableDef tree.TableDef = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), constraintToTableDef)
		}
	case 1132:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6802
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1133:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6808
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns: sqlDollar[4].union.idxElems(),
				},
				PrimaryKey: true,
			}
		}
	case 1134:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6819
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1135:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6823
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1136:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6829
		{
			sqlVAL.union.val = tree.IndexElem{Column: tree.Name(sqlDollar[1].str)}
		}
	case 1137:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6835
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1138:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6839
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1139:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6845
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1140:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6849
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1141:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6855
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 1142:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6860
		{
		}
	case 1143:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6861
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "deferrable")
		}
	case 1144:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6862
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially deferred")
		}
	case 1145:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6863
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially immediate")
		}
	case 1146:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6864
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially deferred")
		}
	case 1147:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6865
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially immediate")
		}
	case 1151:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6883
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1152:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6887
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1153:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6893
		{
			sqlVAL.union.val = &tree.ShardedIndexDef{
				ShardBuckets: sqlDollar[6].union.expr(),
			}
		}
	case 1154:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6899
		{
			sqlVAL.union.val = (*tree.ShardedIndexDef)(nil)
		}
	case 1155:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6905
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1156:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6909
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1157:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6929
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1158:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6933
		{
			sqlVAL.union.val = tree.MatchFull
		}
	case 1159:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6937
		{
			return unimplementedWithIssueDetail(sqllex, 20305, "match partial")
		}
	case 1160:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6941
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1161:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6950
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction()}
		}
	case 1162:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6954
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction()}
		}
	case 1163:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6958
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction(), Delete: sqlDollar[2].union.referenceAction()}
		}
	case 1164:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6962
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction(), Update: sqlDollar[2].union.referenceAction()}
		}
	case 1165:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6966
		{
			sqlVAL.union.val = tree.ReferenceActions{}
		}
	case 1166:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6972
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1167:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6978
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1168:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6986
		{
			sqlVAL.union.val = tree.NoAction
		}
	case 1169:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6990
		{
			sqlVAL.union.val = tree.Restrict
		}
	case 1170:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6994
		{
			sqlVAL.union.val = tree.Cascade
		}
	case 1171:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6998
		{
			sqlVAL.union.val = tree.SetNull
		}
	case 1172:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7002
		{
			sqlVAL.union.val = tree.SetDefault
		}
	case 1173:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7021
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name:        name,
				Persistence: sqlDollar[2].union.persistence(),
				Options:     sqlDollar[5].union.seqOpts(),
			}
		}
	case 1174:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7030
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name: name, Options: sqlDollar[8].union.seqOpts(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
			}
		}
	case 1175:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7038
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 1177:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7042
		{
			sqlVAL.union.val = []tree.SequenceOption(nil)
		}
	case 1178:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7045
		{
			sqlVAL.union.val = []tree.SequenceOption{sqlDollar[1].union.seqOpt()}
		}
	case 1179:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7046
		{
			sqlVAL.union.val = append(sqlDollar[1].union.seqOpts(), sqlDollar[2].union.seqOpt())
		}
	case 1180:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7049
		{
			return unimplementedWithIssueDetail(sqllex, 25110, sqlDollar[2].union.typeReference().SQLString())
		}
	case 1181:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7050
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCycle}
		}
	case 1182:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7052
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptNoCycle}
		}
	case 1183:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7053
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: nil}
		}
	case 1184:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7054
		{
			varName, err := sqlDollar[3].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[3].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: columnItem}
		}
	case 1185:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7064
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCache, IntVal: &x}
		}
	case 1186:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7066
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x}
		}
	case 1187:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7068
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x, OptionalWord: true}
		}
	case 1188:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7070
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue, IntVal: &x}
		}
	case 1189:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7072
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue}
		}
	case 1190:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7073
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue, IntVal: &x}
		}
	case 1191:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7075
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue}
		}
	case 1192:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7076
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x}
		}
	case 1193:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7078
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x, OptionalWord: true}
		}
	case 1194:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7080
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptVirtual}
		}
	case 1195:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7088
		{
			sqlVAL.union.val = &tree.Truncate{Tables: sqlDollar[3].union.tableNames(), DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 1196:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7091
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 1197:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7095
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[2].union.expr()}
		}
	case 1198:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7099
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: tree.DNull}
		}
	case 1199:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7109
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1200:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7113
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[6].union.expr(), IfNotExists: true, KVOptions: sqlDollar[7].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1201:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7116
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 1202:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7124
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1203:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7128
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[5].union.expr(), IfExists: true, KVOptions: sqlDollar[6].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1204:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7131
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 1205:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7137
		{
			sqlVAL.union.val = true
		}
	case 1206:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7141
		{

			sqlVAL.union.val = true
		}
	case 1207:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7146
		{
			sqlVAL.union.val = false
		}
	case 1208:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7156
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[6].union.nameList(),
				AsSource:    sqlDollar[8].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: false,
				Replace:     false,
			}
		}
	case 1209:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7170
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[8].union.nameList(),
				AsSource:    sqlDollar[10].union.slct(),
				Persistence: sqlDollar[4].union.persistence(),
				IfNotExists: false,
				Replace:     true,
			}
		}
	case 1210:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7182
		{
			name := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[9].union.nameList(),
				AsSource:    sqlDollar[11].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
				Replace:     false,
			}
		}
	case 1211:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7194
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[5].union.nameList(),
				AsSource:     sqlDollar[7].union.slct(),
				Materialized: true,
			}
		}
	case 1212:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7204
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[8].union.nameList(),
				AsSource:     sqlDollar[10].union.slct(),
				Materialized: true,
				IfNotExists:  true,
			}
		}
	case 1213:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7214
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 1214:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7218
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1215:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7222
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1216:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7226
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1217:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7230
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1218:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7234
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1219:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7238
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1220:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7242
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1221:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7246
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1222:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7250
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1223:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7254
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1224:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7258
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1225:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7262
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1226:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7266
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1227:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7270
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1228:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7274
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1229:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7278
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1230:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7282
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1231:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7286
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1234:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7295
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 1235:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7299
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[2].union.kvOption())
		}
	case 1236:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7305
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 1237:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7309
		{
			sqlVAL.union.val = nil
		}
	case 1238:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7315
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: sqlDollar[3].union.expr()}
		}
	case 1239:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7319
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: tree.DNull}
		}
	case 1240:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7324
		{
		}
	case 1241:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7325
		{
			return unimplemented(sqllex, "create recursive view")
		}
	case 1242:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7334
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:   sqlDollar[3].union.unresolvedObjectName(),
				Variety:    tree.Enum,
				EnumLabels: sqlDollar[7].union.enumValueList(),
			}
		}
	case 1243:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7342
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:    sqlDollar[6].union.unresolvedObjectName(),
				Variety:     tree.Enum,
				EnumLabels:  sqlDollar[10].union.enumValueList(),
				IfNotExists: true,
			}
		}
	case 1244:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7350
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 1245:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7352
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1246:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7354
		{
			return unimplementedWithIssue(sqllex, 27791)
		}
	case 1247:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7356
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "base")
		}
	case 1248:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7358
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "shell")
		}
	case 1249:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7360
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "create")
		}
	case 1250:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7364
		{
			sqlVAL.union.val = sqlDollar[1].union.enumValueList()
		}
	case 1251:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7368
		{
			sqlVAL.union.val = tree.EnumValueList(nil)
		}
	case 1252:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7374
		{
			sqlVAL.union.val = tree.EnumValueList{tree.EnumValue(sqlDollar[1].str)}
		}
	case 1253:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7378
		{
			sqlVAL.union.val = append(sqlDollar[1].union.enumValueList(), tree.EnumValue(sqlDollar[3].str))
		}
	case 1254:
		sqlDollar = sqlS[sqlpt-17 : sqlpt+1]
//line sql-gen.y:7398
		{
			table := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[5].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Columns:          sqlDollar[10].union.idxElems(),
				Sharded:          sqlDollar[12].union.shardedIndexDef(),
				Storing:          sqlDollar[13].union.nameList(),
				Interleave:       sqlDollar[14].union.interleave(),
				PartitionByIndex: sqlDollar[15].union.partitionByIndex(),
				StorageParams:    sqlDollar[16].union.storageParams(),
				Predicate:        sqlDollar[17].union.expr(),
				Inverted:         sqlDollar[8].union.bool(),
				Concurrently:     sqlDollar[4].union.bool(),
			}
		}
	case 1255:
		sqlDollar = sqlS[sqlpt-20 : sqlpt+1]
//line sql-gen.y:7416
		{
			table := sqlDollar[10].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[8].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Sharded:          sqlDollar[15].union.shardedIndexDef(),
				Storing:          sqlDollar[16].union.nameList(),
				Interleave:       sqlDollar[17].union.interleave(),
				PartitionByIndex: sqlDollar[18].union.partitionByIndex(),
				Inverted:         sqlDollar[11].union.bool(),
				StorageParams:    sqlDollar[19].union.storageParams(),
				Predicate:        sqlDollar[20].union.expr(),
				Concurrently:     sqlDollar[4].union.bool(),
			}
		}
	case 1256:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:7435
		{
			table := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[6].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				Columns:          sqlDollar[10].union.idxElems(),
				Storing:          sqlDollar[12].union.nameList(),
				Interleave:       sqlDollar[13].union.interleave(),
				PartitionByIndex: sqlDollar[14].union.partitionByIndex(),
				StorageParams:    sqlDollar[15].union.storageParams(),
				Predicate:        sqlDollar[16].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
			}
		}
	case 1257:
		sqlDollar = sqlS[sqlpt-19 : sqlpt+1]
//line sql-gen.y:7452
		{
			table := sqlDollar[11].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[9].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Storing:          sqlDollar[15].union.nameList(),
				Interleave:       sqlDollar[16].union.interleave(),
				PartitionByIndex: sqlDollar[17].union.partitionByIndex(),
				StorageParams:    sqlDollar[18].union.storageParams(),
				Predicate:        sqlDollar[19].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
			}
		}
	case 1258:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7469
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 1259:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7473
		{

			switch sqlDollar[2].str {
			case "gin", "gist":
				sqlVAL.union.val = true
			case "btree":
				sqlVAL.union.val = false
			case "hash", "spgist", "brin":
				return unimplemented(sqllex, "index using "+sqlDollar[2].str)
			default:
				sqllex.Error("unrecognized access method: " + sqlDollar[2].str)
				return 1
			}
		}
	case 1260:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7488
		{
			sqlVAL.union.val = false
		}
	case 1261:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7494
		{
			sqlVAL.union.val = true
		}
	case 1262:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7498
		{
			sqlVAL.union.val = false
		}
	case 1263:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7504
		{
			sqlVAL.union.val = true
		}
	case 1264:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7508
		{
			sqlVAL.union.val = false
		}
	case 1265:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7514
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1266:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7518
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1267:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7527
		{
			e := sqlDollar[2].union.idxElem()
			e.Expr = sqlDollar[1].union.expr()
			sqlVAL.union.val = e
		}
	case 1268:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7533
		{
			e := sqlDollar[4].union.idxElem()
			e.Expr = sqlDollar[2].union.expr()
			sqlVAL.union.val = e
		}
	case 1269:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7539
		{
			e := sqlDollar[2].union.idxElem()
			e.Column = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = e
		}
	case 1270:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7547
		{

			opClass := sqlDollar[1].str
			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()
			if opClass != "" {
				if opClass == "gin_trgm_ops" || opClass == "gist_trgm_ops" {
					return unimplementedWithIssueDetail(sqllex, 41285, "index using "+opClass)
				}
				return unimplementedWithIssue(sqllex, 47420)
			}

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = tree.IndexElem{Direction: dir, NullsOrder: nullsOrder}
		}
	case 1271:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7571
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1272:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7572
		{
			sqlVAL.str = ""
		}
	case 1273:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7575
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1274:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7576
		{
			sqlVAL.str = ""
		}
	case 1275:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7580
		{
			sqlVAL.union.val = tree.Ascending
		}
	case 1276:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7584
		{
			sqlVAL.union.val = tree.Descending
		}
	case 1277:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7588
		{
			sqlVAL.union.val = tree.DefaultDirection
		}
	case 1278:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7594
		{
			sqlVAL.union.val = &tree.ReparentDatabase{Name: tree.Name(sqlDollar[3].str), Parent: tree.Name(sqlDollar[9].str)}
		}
	case 1279:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7600
		{
			sqlVAL.union.val = &tree.RenameDatabase{Name: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[6].str)}
		}
	case 1280:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7606
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: false}
		}
	case 1281:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7612
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: false}
		}
	case 1282:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7620
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false,
			}
		}
	case 1283:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7626
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true,
			}
		}
	case 1284:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7634
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Locality: sqlDollar[5].union.locality(),
				IfExists: false,
			}
		}
	case 1285:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7642
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Locality: sqlDollar[7].union.locality(),
				IfExists: true,
			}
		}
	case 1286:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7652
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelGlobal,
			}
		}
	case 1287:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7658
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[6].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1288:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7665
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1289:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7671
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1290:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7677
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[4].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1291:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7684
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1292:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7690
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1293:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7696
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelRow,
			}
		}
	case 1294:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7702
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel:       tree.LocalityLevelRow,
				RegionalByRowColumn: tree.Name(sqlDollar[6].str),
			}
		}
	case 1295:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7711
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.user(),
				IfExists: false,
			}
		}
	case 1296:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7719
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.user(),
				IfExists: true,
			}
		}
	case 1297:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7729
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsView: true,
			}
		}
	case 1298:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7735
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[7].str),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1299:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7745
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsView: true,
			}
		}
	case 1300:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7751
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[9].str),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1301:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7763
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.user(),
				IfExists: false,
				IsView:   true,
			}
		}
	case 1302:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7772
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Owner:          sqlDollar[7].union.user(),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1303:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7782
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.user(),
				IfExists: true,
				IsView:   true,
			}
		}
	case 1304:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7791
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Owner:          sqlDollar[9].union.user(),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1305:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7803
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsSequence: true,
			}
		}
	case 1306:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7809
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsSequence: true,
			}
		}
	case 1307:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7817
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[3].union.unresolvedObjectName(),
				Owner:      sqlDollar[6].union.user(),
				IfExists:   false,
				IsSequence: true,
			}
		}
	case 1308:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7826
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[5].union.unresolvedObjectName(),
				Owner:      sqlDollar[8].union.user(),
				IfExists:   true,
				IsSequence: true,
			}
		}
	case 1309:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7837
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: true}
		}
	case 1310:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7843
		{
			name := sqlDollar[4].union.unresolvedObjectName()
			newName := sqlDollar[7].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1311:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7855
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: true}
		}
	case 1312:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7861
		{
			name := sqlDollar[6].union.unresolvedObjectName()
			newName := sqlDollar[9].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1313:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7875
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsSequence: true}
		}
	case 1314:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7881
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsSequence: true}
		}
	case 1315:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7889
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[3].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[6].str), IfExists: false}
		}
	case 1316:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7893
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[5].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[8].str), IfExists: true}
		}
	case 1317:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7898
		{
		}
	case 1318:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7899
		{
		}
	case 1319:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7902
		{
		}
	case 1320:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7903
		{
		}
	case 1321:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7911
		{
			sqlVAL.union.val = &tree.ReleaseSavepoint{Savepoint: tree.Name(sqlDollar[2].str)}
		}
	case 1322:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7914
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 1323:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7924
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeJob,
			}
		}
	case 1324:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7932
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1325:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7934
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1326:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7938
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1327:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7941
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1328:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7954
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeSchedule,
			}
		}
	case 1329:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7962
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1330:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7964
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.ResumeSchedule,
			}
		}
	case 1331:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7970
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1332:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7983
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.DropSchedule,
			}
		}
	case 1333:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7991
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1334:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7993
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.DropSchedule,
			}
		}
	case 1335:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7999
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1336:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8007
		{
			sqlVAL.union.val = &tree.Savepoint{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1337:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8010
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 1339:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8014
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1341:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8015
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1343:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8016
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1345:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8032
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1346:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8035
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1347:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8037
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1348:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8040
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1349:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8050
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1350:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8053
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1351:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8055
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1352:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8058
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1353:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8062
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1354:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8067
		{
		}
	case 1355:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8068
		{
		}
	case 1356:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8069
		{
		}
	case 1357:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8079
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1358:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8083
		{
			sqlVAL.union.val = &tree.RollbackToSavepoint{Savepoint: tree.Name(sqlDollar[4].str)}
		}
	case 1359:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8086
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1360:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8089
		{
		}
	case 1361:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8090
		{
		}
	case 1362:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8094
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1363:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8098
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1364:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8104
		{
			sqlVAL.union.val = &tree.BeginTransaction{Modes: sqlDollar[1].union.transactionModes()}
		}
	case 1365:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8108
		{
			sqlVAL.union.val = &tree.BeginTransaction{}
		}
	case 1366:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8114
		{
			sqlVAL.union.val = sqlDollar[1].union.transactionModes()
		}
	case 1367:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8118
		{
			a := sqlDollar[1].union.transactionModes()
			b := sqlDollar[3].union.transactionModes()
			err := a.Merge(b)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1368:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8131
		{
		}
	case 1369:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8133
		{
		}
	case 1370:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8137
		{

			sqlVAL.union.val = tree.TransactionModes{Isolation: sqlDollar[1].union.isoLevel()}
		}
	case 1371:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8142
		{
			sqlVAL.union.val = tree.TransactionModes{UserPriority: sqlDollar[1].union.userPriority()}
		}
	case 1372:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8146
		{
			sqlVAL.union.val = tree.TransactionModes{ReadWriteMode: sqlDollar[1].union.readWriteMode()}
		}
	case 1373:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8150
		{
			sqlVAL.union.val = tree.TransactionModes{AsOf: sqlDollar[1].union.asOfClause()}
		}
	case 1374:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8154
		{
			sqlVAL.union.val = tree.TransactionModes{Deferrable: sqlDollar[1].union.deferrableMode()}
		}
	case 1375:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8160
		{
			sqlVAL.union.val = sqlDollar[2].union.userPriority()
		}
	case 1376:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8166
		{
			sqlVAL.union.val = sqlDollar[3].union.isoLevel()
		}
	case 1377:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8172
		{
			sqlVAL.union.val = tree.ReadOnly
		}
	case 1378:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8176
		{
			sqlVAL.union.val = tree.ReadWrite
		}
	case 1379:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8182
		{
			sqlVAL.union.val = tree.Deferrable
		}
	case 1380:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8186
		{
			sqlVAL.union.val = tree.NotDeferrable
		}
	case 1381:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:8196
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				Name:            tree.Name(sqlDollar[3].str),
				Template:        sqlDollar[5].str,
				Encoding:        sqlDollar[6].str,
				Collate:         sqlDollar[7].str,
				CType:           sqlDollar[8].str,
				ConnectionLimit: sqlDollar[9].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[10].str),
				Regions:         sqlDollar[11].union.nameList(),
				SurvivalGoal:    sqlDollar[12].union.survivalGoal(),
			}
		}
	case 1382:
		sqlDollar = sqlS[sqlpt-15 : sqlpt+1]
//line sql-gen.y:8210
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				IfNotExists:     true,
				Name:            tree.Name(sqlDollar[6].str),
				Template:        sqlDollar[8].str,
				Encoding:        sqlDollar[9].str,
				Collate:         sqlDollar[10].str,
				CType:           sqlDollar[11].str,
				ConnectionLimit: sqlDollar[12].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[13].str),
				Regions:         sqlDollar[14].union.nameList(),
				SurvivalGoal:    sqlDollar[15].union.survivalGoal(),
			}
		}
	case 1383:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8224
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 1385:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8229
		{
			sqlVAL.str = ""
		}
	case 1386:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8234
		{
			sqlVAL.str = sqlDollar[4].str
		}
	case 1387:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8240
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1388:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8244
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1389:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8250
		{

		}
	case 1391:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8257
		{
			sqlVAL.union.val = tree.SurvivalGoalRegionFailure
		}
	case 1392:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8261
		{
			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1393:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8265
		{

			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1395:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8274
		{
			sqlVAL.union.val = tree.SurvivalGoalDefault
		}
	case 1396:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8280
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1397:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8284
		{
			sqlVAL.str = ""
		}
	case 1398:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8290
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1399:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8294
		{
			sqlVAL.str = ""
		}
	case 1400:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8300
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1401:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8304
		{
			sqlVAL.str = ""
		}
	case 1402:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8310
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1403:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8314
		{
			sqlVAL.str = ""
		}
	case 1404:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8320
		{
			ret, err := sqlDollar[4].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = ret
		}
	case 1405:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8328
		{
			sqlVAL.union.val = int32(-1)
		}
	case 1406:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8333
		{
		}
	case 1407:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8334
		{
		}
	case 1408:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8349
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1409:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8356
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = sqlDollar[6].union.onConflict()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[7].union.retClause()
		}
	case 1410:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8363
		{
			return helpWith(sqllex, "INSERT")
		}
	case 1411:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8374
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = &tree.OnConflict{}
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1412:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8381
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 1413:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8385
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &name
		}
	case 1414:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8394
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &name, As: tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}}
		}
	case 1415:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8399
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1416:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8405
		{
			sqlVAL.union.val = &tree.Insert{Rows: sqlDollar[1].union.slct()}
		}
	case 1417:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8409
		{
			sqlVAL.union.val = &tree.Insert{Columns: sqlDollar[2].union.nameList(), Rows: sqlDollar[4].union.slct()}
		}
	case 1418:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8413
		{
			sqlVAL.union.val = &tree.Insert{Rows: &tree.Select{}}
		}
	case 1419:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8419
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1420:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8423
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1422:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8443
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1423:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8447
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:   tree.NameList(nil),
				DoNothing: true,
			}
		}
	case 1424:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8454
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				DoNothing:        true,
			}
		}
	case 1425:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:8462
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				Exprs:            sqlDollar[10].union.updateExprs(),
				Where:            tree.NewWhere(tree.AstWhere, sqlDollar[11].union.expr()),
			}
		}
	case 1426:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8470
		{
			return unimplementedWithIssue(sqllex, 28161)
		}
	case 1427:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8474
		{
			ret := tree.ReturningExprs(sqlDollar[2].union.selExprs())
			sqlVAL.union.val = &ret
		}
	case 1428:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8479
		{
			sqlVAL.union.val = tree.ReturningNothingClause
		}
	case 1429:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8483
		{
			sqlVAL.union.val = tree.AbsentReturningClause
		}
	case 1430:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:8500
		{
			sqlVAL.union.val = &tree.Update{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[3].union.tblExpr(),
				Exprs:     sqlDollar[5].union.updateExprs(),
				From:      sqlDollar[6].union.tblExprs(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[7].union.expr()),
				OrderBy:   sqlDollar[8].union.orderBy(),
				Limit:     sqlDollar[9].union.limit(),
				Returning: sqlDollar[10].union.retClause(),
			}
		}
	case 1431:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8512
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 1432:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8515
		{
			sqlVAL.union.val = sqlDollar[2].union.tblExprs()
		}
	case 1433:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8518
		{
			sqlVAL.union.val = tree.TableExprs{}
		}
	case 1434:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8524
		{
			sqlVAL.union.val = tree.UpdateExprs{sqlDollar[1].union.updateExpr()}
		}
	case 1435:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8528
		{
			sqlVAL.union.val = append(sqlDollar[1].union.updateExprs(), sqlDollar[3].union.updateExpr())
		}
	case 1438:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8541
		{
			sqlVAL.union.val = &tree.UpdateExpr{Names: tree.NameList{tree.Name(sqlDollar[1].str)}, Expr: sqlDollar[3].union.expr()}
		}
	case 1439:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8544
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1440:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8548
		{
			sqlVAL.union.val = &tree.UpdateExpr{Tuple: true, Names: sqlDollar[2].union.nameList(), Expr: sqlDollar[5].union.expr()}
		}
	case 1441:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8559
		{
			sqlVAL.union.val = &tree.ReassignOwnedBy{
				OldRoles: sqlDollar[4].union.users(),
				NewRole:  sqlDollar[6].union.user(),
			}
		}
	case 1442:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8565
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 1443:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8574
		{
			sqlVAL.union.val = &tree.DropOwnedBy{
				Roles:        sqlDollar[4].union.users(),
				DropBehavior: sqlDollar[5].union.dropBehavior(),
			}
		}
	case 1444:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8580
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 1446:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8621
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1447:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8627
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: sqlDollar[2].union.slct()}
		}
	case 1448:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8631
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: &tree.Select{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1449:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8646
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1450:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8650
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy()}
		}
	case 1451:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8654
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[3].union.lockingClause()}
		}
	case 1452:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8658
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[3].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1453:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8662
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt()}
		}
	case 1454:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8666
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy()}
		}
	case 1455:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8670
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[5].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1456:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8674
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[5].union.lockingClause()}
		}
	case 1457:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8679
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1458:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8680
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1459:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8683
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1460:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8684
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1461:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8688
		{
			sqlVAL.union.val = tree.LockingClause{sqlDollar[1].union.lockingItem()}
		}
	case 1462:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8692
		{
			sqlVAL.union.val = append(sqlDollar[1].union.lockingClause(), sqlDollar[2].union.lockingItem())
		}
	case 1463:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8698
		{
			sqlVAL.union.val = &tree.LockingItem{
				Strength:   sqlDollar[1].union.lockingStrength(),
				Targets:    sqlDollar[2].union.tableNames(),
				WaitPolicy: sqlDollar[3].union.lockingWaitPolicy(),
			}
		}
	case 1464:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8707
		{
			sqlVAL.union.val = tree.ForUpdate
		}
	case 1465:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8708
		{
			sqlVAL.union.val = tree.ForNoKeyUpdate
		}
	case 1466:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8709
		{
			sqlVAL.union.val = tree.ForShare
		}
	case 1467:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8710
		{
			sqlVAL.union.val = tree.ForKeyShare
		}
	case 1468:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8713
		{
			sqlVAL.union.val = tree.TableNames{}
		}
	case 1469:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8714
		{
			sqlVAL.union.val = sqlDollar[2].union.tableNames()
		}
	case 1470:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8717
		{
			sqlVAL.union.val = tree.LockWaitBlock
		}
	case 1471:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8718
		{
			sqlVAL.union.val = tree.LockWaitSkip
		}
	case 1472:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8719
		{
			sqlVAL.union.val = tree.LockWaitError
		}
	case 1473:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8724
		{
			return helpWith(sqllex, "<SELECTCLAUSE>")
		}
	case 1477:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8759
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1479:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8760
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1481:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8761
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1483:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8783
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:   sqlDollar[3].union.selExprs(),
				From:    sqlDollar[4].union.from(),
				Where:   tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy: sqlDollar[6].union.groupBy(),
				Having:  tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:  sqlDollar[8].union.window(),
			}
		}
	case 1484:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8796
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct: sqlDollar[2].union.bool(),
				Exprs:    sqlDollar[3].union.selExprs(),
				From:     sqlDollar[4].union.from(),
				Where:    tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:  sqlDollar[6].union.groupBy(),
				Having:   tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:   sqlDollar[8].union.window(),
			}
		}
	case 1485:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8810
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct:   true,
				DistinctOn: sqlDollar[2].union.distinctOn(),
				Exprs:      sqlDollar[3].union.selExprs(),
				From:       sqlDollar[4].union.from(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:    sqlDollar[6].union.groupBy(),
				Having:     tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:     sqlDollar[8].union.window(),
			}
		}
	case 1486:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8822
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1487:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8826
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.UnionOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1488:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8835
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.IntersectOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1489:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8844
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.ExceptOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1490:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8859
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:       tree.SelectExprs{tree.StarSelectExpr()},
				From:        tree.From{Tables: tree.TableExprs{sqlDollar[2].union.tblExpr()}},
				TableSelect: true,
			}
		}
	case 1491:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8866
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1492:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8878
		{
			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1493:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8882
		{

			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1494:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8887
		{
			sqlVAL.union.val = &tree.With{Recursive: true, CTEList: sqlDollar[3].union.ctes()}
		}
	case 1495:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8893
		{
			sqlVAL.union.val = []*tree.CTE{sqlDollar[1].union.cte()}
		}
	case 1496:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8897
		{
			sqlVAL.union.val = append(sqlDollar[1].union.ctes(), sqlDollar[3].union.cte())
		}
	case 1497:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8903
		{
			sqlVAL.union.val = true
		}
	case 1498:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8907
		{
			sqlVAL.union.val = false
		}
	case 1499:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8913
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Set: false,
				},
				Stmt: sqlDollar[5].union.stmt(),
			}
		}
	case 1500:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8923
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Materialize: sqlDollar[4].union.bool(),
					Set:         true,
				},
				Stmt: sqlDollar[6].union.stmt(),
			}
		}
	case 1501:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8935
		{
		}
	case 1502:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8936
		{
		}
	case 1503:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8940
		{
			sqlVAL.union.val = sqlDollar[1].union.with()
		}
	case 1504:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8944
		{
			sqlVAL.union.val = nil
		}
	case 1505:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8949
		{
		}
	case 1506:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8950
		{
		}
	case 1507:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8954
		{
			sqlVAL.union.val = true
		}
	case 1508:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8958
		{
			sqlVAL.union.val = false
		}
	case 1509:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8962
		{
			sqlVAL.union.val = false
		}
	case 1510:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8968
		{
			sqlVAL.union.val = true
		}
	case 1511:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8974
		{
			sqlVAL.union.val = tree.DistinctOn(sqlDollar[4].union.exprs())
		}
	case 1512:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8979
		{
		}
	case 1513:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8980
		{
		}
	case 1514:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8983
		{
		}
	case 1515:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8984
		{
		}
	case 1516:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8988
		{
			sqlVAL.union.val = sqlDollar[1].union.orderBy()
		}
	case 1517:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8992
		{
			sqlVAL.union.val = tree.OrderBy(nil)
		}
	case 1518:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8998
		{
			sqlVAL.union.val = tree.OrderBy(sqlDollar[3].union.orders())
		}
	case 1519:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9004
		{
			sqlVAL.union.val = tree.OrderBy([]*tree.Order{sqlDollar[3].union.order()})
		}
	case 1520:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9008
		{
			sqllex.Error("multiple ORDER BY clauses are not supported in this function")
			return 1
		}
	case 1521:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9015
		{
			sqlVAL.union.val = []*tree.Order{sqlDollar[1].union.order()}
		}
	case 1522:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9019
		{
			sqlVAL.union.val = append(sqlDollar[1].union.orders(), sqlDollar[3].union.order())
		}
	case 1523:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9025
		{

			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = &tree.Order{
				OrderType:  tree.OrderByColumn,
				Expr:       sqlDollar[1].union.expr(),
				Direction:  dir,
				NullsOrder: nullsOrder,
			}
		}
	case 1524:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9046
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{OrderType: tree.OrderByIndex, Direction: sqlDollar[4].union.dir(), Table: name}
		}
	case 1525:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9051
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{
				OrderType: tree.OrderByIndex,
				Direction: sqlDollar[5].union.dir(),
				Table:     name,
				Index:     tree.UnrestrictedName(sqlDollar[4].str),
			}
		}
	case 1526:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9063
		{
			sqlVAL.union.val = tree.NullsFirst
		}
	case 1527:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9067
		{
			sqlVAL.union.val = tree.NullsLast
		}
	case 1528:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9071
		{
			sqlVAL.union.val = tree.DefaultNullsOrder
		}
	case 1529:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9077
		{
			if sqlDollar[1].union.limit() == nil {
				sqlVAL.union.val = sqlDollar[2].union.limit()
			} else {
				sqlVAL.union.val = sqlDollar[1].union.limit()
				sqlVAL.union.val.(*tree.Limit).Offset = sqlDollar[2].union.limit().Offset
			}
		}
	case 1530:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9086
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
			if sqlDollar[2].union.limit() != nil {
				sqlVAL.union.val.(*tree.Limit).Count = sqlDollar[2].union.limit().Count
				sqlVAL.union.val.(*tree.Limit).LimitAll = sqlDollar[2].union.limit().LimitAll
			}
		}
	case 1533:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9097
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
		}
	case 1534:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9098
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1536:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9102
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1537:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9106
		{
			sqlVAL.union.val = &tree.Limit{LimitAll: true}
		}
	case 1538:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9110
		{
			if sqlDollar[2].union.expr() == nil {
				sqlVAL.union.val = (*tree.Limit)(nil)
			} else {
				sqlVAL.union.val = &tree.Limit{Count: sqlDollar[2].union.expr()}
			}
		}
	case 1539:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9124
		{
			sqlVAL.union.val = &tree.Limit{Count: sqlDollar[3].union.expr()}
		}
	case 1540:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9128
		{
			sqlVAL.union.val = &tree.Limit{
				Count: tree.NewNumVal(constant.MakeInt64(1), "", false),
			}
		}
	case 1541:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9136
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1542:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9143
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1546:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9165
		{
		}
	case 1547:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9166
		{
		}
	case 1548:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9169
		{
		}
	case 1549:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9170
		{
		}
	case 1550:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9187
		{
			sqlVAL.union.val = tree.GroupBy(sqlDollar[3].union.exprs())
		}
	case 1551:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9191
		{
			sqlVAL.union.val = tree.GroupBy(nil)
		}
	case 1552:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9196
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1553:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9197
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1554:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9203
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1555:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9204
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "rollup")
		}
	case 1556:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9205
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "cube")
		}
	case 1557:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9206
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "grouping sets")
		}
	case 1558:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9210
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1559:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9214
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1560:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9233
		{
			sqlVAL.union.val = &tree.ValuesClause{Rows: []tree.Exprs{sqlDollar[3].union.exprs()}}
		}
	case 1561:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9236
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1562:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9238
		{
			valNode := sqlDollar[1].union.selectStmt().(*tree.ValuesClause)
			valNode.Rows = append(valNode.Rows, sqlDollar[4].union.exprs())
			sqlVAL.union.val = valNode
		}
	case 1563:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9250
		{
			sqlVAL.union.val = tree.From{Tables: sqlDollar[2].union.tblExprs(), AsOf: sqlDollar[3].union.asOfClause()}
		}
	case 1564:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9253
		{
			return helpWith(sqllex, "<SOURCE>")
		}
	case 1565:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9255
		{
			sqlVAL.union.val = tree.From{}
		}
	case 1566:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9261
		{
			sqlVAL.union.val = tree.TableExprs{sqlDollar[1].union.tblExpr()}
		}
	case 1567:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9265
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblExprs(), sqlDollar[3].union.tblExpr())
		}
	case 1568:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9271
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1569:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9275
		{

			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[4].union.int64())}
		}
	case 1570:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9280
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Ascending}
		}
	case 1571:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9285
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Descending}
		}
	case 1572:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9291
		{
			sqlVAL.union.val = &tree.IndexFlags{NoIndexJoin: true}
		}
	case 1573:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9296
		{

			sqlVAL.union.val = &tree.IndexFlags{IgnoreForeignKeys: true}
		}
	case 1574:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9303
		{
			sqlVAL.union.val = sqlDollar[1].union.indexFlags()
		}
	case 1575:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9308
		{
			a := sqlDollar[1].union.indexFlags()
			b := sqlDollar[3].union.indexFlags()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1576:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9319
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1577:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9323
		{
			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[3].union.int64())}
		}
	case 1578:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9327
		{
			flags := sqlDollar[3].union.indexFlags()
			if err := flags.Check(); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = flags
		}
	case 1579:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9335
		{
			sqlVAL.union.val = (*tree.IndexFlags)(nil)
		}
	case 1580:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9366
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1581:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9376
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1582:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9386
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[1].union.selectStmt()},
				Ordinality: sqlDollar[2].union.bool(),
				As:         sqlDollar[3].union.aliasClause(),
			}
		}
	case 1583:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9394
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[2].union.selectStmt()},
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1584:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9403
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1585:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9407
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1586:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9411
		{
			f := sqlDollar[1].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[2].union.bool(),

				As: sqlDollar[3].union.aliasClause(),
			}
		}
	case 1587:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9422
		{
			f := sqlDollar[2].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1588:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9446
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.StatementSource{Statement: sqlDollar[2].union.stmt()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1589:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9452
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
				Columns: sqlDollar[3].union.tableRefCols(),
				As:      sqlDollar[4].union.aliasClause(),
			}
		}
	case 1590:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9463
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: tree.Exprs{sqlDollar[1].union.expr()}}
		}
	case 1591:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9467
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: sqlDollar[4].union.exprs()}
		}
	case 1592:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9473
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1593:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9475
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1594:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9479
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1595:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9485
		{
		}
	case 1596:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9487
		{
			return unimplemented(sqllex, "ROWS FROM with col_def_list")
		}
	case 1597:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9490
		{
			sqlVAL.union.val = nil
		}
	case 1598:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9491
		{
			sqlVAL.union.val = []tree.ColumnID{}
		}
	case 1599:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9492
		{
			sqlVAL.union.val = sqlDollar[2].union.tableRefCols()
		}
	case 1600:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9496
		{
			sqlVAL.union.val = []tree.ColumnID{tree.ColumnID(sqlDollar[1].union.int64())}
		}
	case 1601:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9500
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tableRefCols(), tree.ColumnID(sqlDollar[3].union.int64()))
		}
	case 1602:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9506
		{
			sqlVAL.union.val = true
		}
	case 1603:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9510
		{
			sqlVAL.union.val = false
		}
	case 1604:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9530
		{
			sqlVAL.union.val = &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}
		}
	case 1605:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9534
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: tree.AstCross, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Hint: sqlDollar[3].str}
		}
	case 1606:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9538
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[2].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Cond: sqlDollar[6].union.joinCond(), Hint: sqlDollar[3].str}
		}
	case 1607:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9542
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[3].union.tblExpr(), Cond: sqlDollar[4].union.joinCond()}
		}
	case 1608:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9546
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[3].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[6].union.tblExpr(), Cond: tree.NaturalJoinCond{}, Hint: sqlDollar[4].str}
		}
	case 1609:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9550
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[4].union.tblExpr(), Cond: tree.NaturalJoinCond{}}
		}
	case 1610:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9556
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str), Cols: sqlDollar[3].union.nameList()}
		}
	case 1611:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9560
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()}
		}
	case 1613:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9567
		{
			sqlVAL.union.val = tree.AliasClause{}
		}
	case 1614:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9573
		{
			sqlVAL.union.val = tree.AsOfClause{Expr: sqlDollar[5].union.expr()}
		}
	case 1616:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9580
		{
			sqlVAL.union.val = tree.AsOfClause{}
		}
	case 1617:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9586
		{
			sqlVAL.str = tree.AstFull
		}
	case 1618:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9590
		{
			sqlVAL.str = tree.AstLeft
		}
	case 1619:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9594
		{
			sqlVAL.str = tree.AstRight
		}
	case 1620:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9598
		{
			sqlVAL.str = tree.AstInner
		}
	case 1621:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9604
		{
		}
	case 1622:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9605
		{
		}
	case 1623:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9629
		{
			sqlVAL.str = tree.AstHash
		}
	case 1624:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9633
		{
			sqlVAL.str = tree.AstMerge
		}
	case 1625:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9637
		{
			sqlVAL.str = tree.AstLookup
		}
	case 1626:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9641
		{
			sqlVAL.str = tree.AstInverted
		}
	case 1627:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9645
		{
			sqlVAL.str = ""
		}
	case 1628:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9658
		{
			sqlVAL.union.val = &tree.UsingJoinCond{Cols: sqlDollar[3].union.nameList()}
		}
	case 1629:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9662
		{
			sqlVAL.union.val = &tree.OnJoinCond{Expr: sqlDollar[2].union.expr()}
		}
	case 1630:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9667
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1631:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9668
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1632:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9669
		{
			sqlVAL.union.val = sqlDollar[2].union.unresolvedObjectName()
		}
	case 1633:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9670
		{
			sqlVAL.union.val = sqlDollar[3].union.unresolvedObjectName()
		}
	case 1634:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9674
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 1635:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9679
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 1636:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9693
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1637:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9697
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str)}
			sqlVAL.union.val = alias
		}
	case 1638:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9703
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = alias
		}
	case 1639:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9709
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 1640:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9719
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[3].union.indexFlags(),
			}
		}
	case 1641:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9729
		{
			sqlVAL.union.val = true
		}
	case 1642:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9733
		{
			sqlVAL.union.val = false
		}
	case 1643:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9739
		{
			sqlVAL.union.val = true
		}
	case 1644:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9743
		{
			sqlVAL.union.val = false
		}
	case 1645:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9749
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1647:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9756
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1648:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9768
		{
			if bounds := sqlDollar[2].union.int32s(); bounds != nil {
				var err error
				sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), bounds)
				if err != nil {
					return setErr(sqllex, err)
				}
			} else {
				sqlVAL.union.val = sqlDollar[1].union.typeReference()
			}
		}
	case 1649:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9781
		{

			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1650:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9789
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1651:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9790
		{
			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1652:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9800
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1653:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9807
		{
			sqlVAL.union.val = []int32{-1}
		}
	case 1654:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9808
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1655:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9810
		{

			bound, err := sqlDollar[2].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = []int32{bound}
		}
	case 1656:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9818
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1657:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9819
		{
			sqlVAL.union.val = []int32(nil)
		}
	case 1659:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9831
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1660:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9838
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1661:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9847
		{

			if sqlDollar[1].str == "char" {
				sqlVAL.union.val = types.MakeQChar(0)
			} else if sqlDollar[1].str == "serial" {
				switch sqllex.(*lexer).nakedIntType.Width() {
				case 32:
					sqlVAL.union.val = &types.Serial4Type
				default:
					sqlVAL.union.val = &types.Serial8Type
				}
			} else {

				var ok bool
				var err error
				var unimp int
				sqlVAL.union.val, ok, unimp = types.TypeForNonKeywordTypeName(sqlDollar[1].str)
				if !ok {
					switch unimp {
					case 0:

						aIdx := sqllex.(*lexer).NewAnnotation()
						sqlVAL.union.val, err = tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
						if err != nil {
							return setErr(sqllex, err)
						}
					case -1:
						return unimplemented(sqllex, "type name "+sqlDollar[1].str)
					default:
						return unimplementedWithIssueDetail(sqllex, unimp, sqlDollar[1].str)
					}
				}
			}
		}
	case 1662:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9887
		{
			id := sqlDollar[2].union.int32()
			sqlVAL.union.val = &tree.OIDTypeReference{OID: oid.Oid(id)}
		}
	case 1663:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9892
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1668:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9899
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "point")
		}
	case 1669:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9900
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "polygon")
		}
	case 1670:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9903
		{
			sqlVAL.union.val = geopb.ShapeType_Point
		}
	case 1671:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9904
		{
			sqlVAL.union.val = geopb.ShapeType_PointM
		}
	case 1672:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9905
		{
			sqlVAL.union.val = geopb.ShapeType_PointZ
		}
	case 1673:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9906
		{
			sqlVAL.union.val = geopb.ShapeType_PointZM
		}
	case 1674:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9907
		{
			sqlVAL.union.val = geopb.ShapeType_LineString
		}
	case 1675:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9908
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringM
		}
	case 1676:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9909
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZ
		}
	case 1677:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9910
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZM
		}
	case 1678:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9911
		{
			sqlVAL.union.val = geopb.ShapeType_Polygon
		}
	case 1679:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9912
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonM
		}
	case 1680:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9913
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZ
		}
	case 1681:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9914
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZM
		}
	case 1682:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9915
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPoint
		}
	case 1683:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9916
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointM
		}
	case 1684:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9917
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZ
		}
	case 1685:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9918
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZM
		}
	case 1686:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9919
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineString
		}
	case 1687:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9920
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringM
		}
	case 1688:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9921
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZ
		}
	case 1689:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9922
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZM
		}
	case 1690:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9923
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygon
		}
	case 1691:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9924
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonM
		}
	case 1692:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9925
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZ
		}
	case 1693:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9926
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZM
		}
	case 1694:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9927
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollection
		}
	case 1695:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9928
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionM
		}
	case 1696:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9929
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZ
		}
	case 1697:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9930
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZM
		}
	case 1698:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9931
		{
			sqlVAL.union.val = geopb.ShapeType_Geometry
		}
	case 1699:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9932
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryM
		}
	case 1700:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9933
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZ
		}
	case 1701:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9934
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZM
		}
	case 1702:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9937
		{
			sqlVAL.union.val = types.Geography
		}
	case 1703:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9938
		{
			sqlVAL.union.val = types.Geometry
		}
	case 1704:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9939
		{
			sqlVAL.union.val = types.Box2D
		}
	case 1705:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9941
		{
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1706:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9945
		{
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1707:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9949
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1708:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9957
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1714:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9983
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), 0)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1715:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9991
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), sqlDollar[4].union.int32())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1716:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9999
		{
			sqlVAL.union.val = nil
		}
	case 1717:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10006
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1718:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10010
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1719:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10014
		{
			sqlVAL.union.val = types.Int2
		}
	case 1720:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10018
		{
			sqlVAL.union.val = types.Int
		}
	case 1721:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10022
		{
			sqlVAL.union.val = types.Float4
		}
	case 1722:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10026
		{
			sqlVAL.union.val = sqlDollar[2].union.colType()
		}
	case 1723:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10030
		{
			sqlVAL.union.val = types.Float
		}
	case 1724:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10034
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1725:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10042
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1726:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10050
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1727:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10058
		{
			sqlVAL.union.val = types.Bool
		}
	case 1728:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10064
		{
			nv := sqlDollar[2].union.numVal()
			prec, err := nv.AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			typ, err := newFloat(prec)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = typ
		}
	case 1729:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10077
		{
			sqlVAL.union.val = types.Float
		}
	case 1730:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10083
		{
			bit, err := newBitType(sqlDollar[4].union.int32(), sqlDollar[2].union.bool())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1731:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10089
		{
			bit, err := newBitType(sqlDollar[3].union.int32(), true)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1732:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10097
		{
			sqlVAL.union.val = types.MakeBit(1)
		}
	case 1733:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10101
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1734:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10105
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1735:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10111
		{
			colTyp := *sqlDollar[1].union.colType()
			n := sqlDollar[3].union.int32()
			if n == 0 {
				sqllex.Error(fmt.Sprintf("length for type %s must be at least 1", colTyp.SQLString()))
				return 1
			}
			sqlVAL.union.val = types.MakeScalar(types.StringFamily, colTyp.Oid(), colTyp.Precision(), n, colTyp.Locale())
		}
	case 1736:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10123
		{
			sqlVAL.union.val = sqlDollar[1].union.colType()
		}
	case 1737:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10129
		{
			sqlVAL.union.val = types.MakeChar(1)
		}
	case 1738:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10133
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1739:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10137
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1740:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10141
		{
			sqlVAL.union.val = types.String
		}
	case 1743:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10150
		{
			sqlVAL.union.val = true
		}
	case 1744:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10151
		{
			sqlVAL.union.val = false
		}
	case 1745:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10156
		{
			sqlVAL.union.val = types.Date
		}
	case 1746:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10160
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimeTZ
			} else {
				sqlVAL.union.val = types.Time
			}
		}
	case 1747:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10168
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimeTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTime(prec)
			}
		}
	case 1748:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10180
		{
			sqlVAL.union.val = types.TimeTZ
		}
	case 1749:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10182
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimeTZ(prec)
		}
	case 1750:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10191
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimestampTZ
			} else {
				sqlVAL.union.val = types.Timestamp
			}
		}
	case 1751:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10199
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimestampTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTimestamp(prec)
			}
		}
	case 1752:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10212
		{
			sqlVAL.union.val = types.TimestampTZ
		}
	case 1753:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10216
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimestampTZ(prec)
		}
	case 1754:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10226
		{
			sqlVAL.union.val = true
		}
	case 1755:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10227
		{
			sqlVAL.union.val = false
		}
	case 1756:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10228
		{
			sqlVAL.union.val = false
		}
	case 1757:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10232
		{
			sqlVAL.union.val = types.Interval
		}
	case 1758:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10236
		{
			sqlVAL.union.val = types.MakeInterval(sqlDollar[2].union.intervalTypeMetadata())
		}
	case 1759:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10240
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeInterval(types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true})
		}
	case 1760:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10251
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_YEAR,
				},
			}
		}
	case 1761:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10259
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1762:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10267
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_DAY,
				},
			}
		}
	case 1763:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10275
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1764:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10283
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1765:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10291
		{
			sqlVAL.union.val = sqlDollar[1].union.intervalTypeMetadata()
		}
	case 1766:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10297
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_YEAR,
					DurationType:     types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1767:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10306
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1768:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10315
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1769:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10324
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_DAY
			sqlVAL.union.val = ret
		}
	case 1770:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10330
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_HOUR,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1771:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10339
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_HOUR
			sqlVAL.union.val = ret
		}
	case 1772:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10345
		{
			sqlVAL.union.val = sqlDollar[3].union.intervalTypeMetadata()
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_MINUTE
			sqlVAL.union.val = ret
		}
	case 1774:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10355
		{
			sqlVAL.union.val = nil
		}
	case 1775:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10361
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
			}
		}
	case 1776:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10369
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
				PrecisionIsSet: true,
				Precision:      prec,
			}
		}
	case 1778:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10406
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1779:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10410
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1780:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10414
		{
			sqlVAL.union.val = &tree.CollateExpr{Expr: sqlDollar[1].union.expr(), Locale: sqlDollar[3].str}
		}
	case 1781:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10418
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("timezone"), Exprs: tree.Exprs{sqlDollar[5].union.expr(), sqlDollar[1].union.expr()}}
		}
	case 1782:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10429
		{

			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1783:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10434
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1784:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10438
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryComplement), Expr: sqlDollar[2].union.expr()}
		}
	case 1785:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10442
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnarySqrt), Expr: sqlDollar[2].union.expr()}
		}
	case 1786:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10446
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryCbrt), Expr: sqlDollar[2].union.expr()}
		}
	case 1787:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10450
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Plus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1788:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10454
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Minus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1789:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10458
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Mult), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1790:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10462
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Div), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1791:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10466
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.FloorDiv), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1792:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10470
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Mod), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1793:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10474
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Pow), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1794:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10478
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitxor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1795:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10482
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitand), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1796:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10486
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1797:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10490
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.LT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1798:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10494
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.GT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1799:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10498
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.JSONExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1800:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10502
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.JSONSomeExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1801:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10506
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.JSONAllExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1802:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10510
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.Contains), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1803:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10514
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.ContainedBy), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1804:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10518
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.EQ), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1805:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10522
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Concat), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1806:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10526
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.LShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1807:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10530
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.RShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1808:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10534
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.JSONFetchVal), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1809:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10538
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.JSONFetchText), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1810:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10542
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.JSONFetchValPath), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1811:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10546
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.JSONFetchTextPath), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1812:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10550
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("json_remove_path"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1813:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10554
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contained_by_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1814:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10558
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.Overlaps), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1815:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10562
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contains_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1816:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10566
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.LE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1817:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10570
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.GE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1818:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10574
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1819:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10578
		{
			var retCode int
			sqlVAL.union.val, retCode = processUnaryQualOp(sqllex, sqlDollar[1].union.op(), sqlDollar[2].union.expr())
			if retCode != 0 {
				return retCode
			}
		}
	case 1820:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10586
		{
			{
				var retCode int
				sqlVAL.union.val, retCode = processBinaryQualOp(sqllex, sqlDollar[2].union.op(), sqlDollar[1].union.expr(), sqlDollar[3].union.expr())
				if retCode != 0 {
					return retCode
				}
			}
		}
	case 1821:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10596
		{
			sqlVAL.union.val = &tree.AndExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1822:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10600
		{
			sqlVAL.union.val = &tree.OrExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1823:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10604
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1824:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10608
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1825:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10612
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.Like), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1826:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10616
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1827:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10620
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotLike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1828:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10624
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1829:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10628
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.ILike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1830:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10632
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1831:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10636
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotILike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1832:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10640
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1833:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10644
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.SimilarTo), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1834:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10648
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1835:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10652
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotSimilarTo), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1836:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10656
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[5].union.expr(), sqlDollar[7].union.expr()}}
		}
	case 1837:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10660
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.RegMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1838:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10664
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotRegMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1839:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10668
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.RegIMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1840:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10672
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotRegIMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1841:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10676
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.EQ), Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1842:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10680
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NE), Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1843:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10684
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1844:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10688
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1845:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10692
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1846:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10696
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1847:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10699
		{
			return unimplemented(sqllex, "overlaps")
		}
	case 1848:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10701
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1849:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10705
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1850:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10709
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1851:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10713
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1852:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10717
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1853:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10721
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1854:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10725
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1855:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10729
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1856:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10733
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1857:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10737
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1858:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10741
		{
			sqlVAL.union.val = &tree.RangeCond{Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1859:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10745
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1860:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10749
		{
			sqlVAL.union.val = &tree.RangeCond{Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1861:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10753
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1862:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10757
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.In), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1863:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10761
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotIn), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1864:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10765
		{
			op := sqlDollar[3].union.cmpOp()
			subOp := sqlDollar[2].union.op()
			subOpCmp, ok := subOp.(tree.ComparisonOperator)
			if !ok {
				sqllex.Error(fmt.Sprintf("%s %s <array> is invalid because %q is not a boolean operator",
					subOp, op, subOp))
				return 1
			}
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator:    op,
				SubOperator: subOpCmp,
				Left:        sqlDollar[1].union.expr(),
				Right:       sqlDollar[4].union.expr(),
			}
		}
	case 1865:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10782
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 1866:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10787
		{
			return unimplemented(sqllex, "UNIQUE predicate")
		}
	case 1868:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10799
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1869:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10803
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1870:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10807
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1871:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10811
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1872:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10815
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryComplement), Expr: sqlDollar[2].union.expr()}
		}
	case 1873:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10819
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Plus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1874:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10823
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Minus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1875:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10827
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Mult), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1876:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10831
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Div), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1877:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10835
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.FloorDiv), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1878:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10839
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Mod), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1879:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10843
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Pow), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1880:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10847
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitxor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1881:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10851
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitand), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1882:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10855
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1883:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10859
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.LT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1884:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10863
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.GT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1885:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10867
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.EQ), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1886:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10871
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Concat), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1887:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10875
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.LShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1888:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10879
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.RShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1889:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10883
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.LE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1890:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10887
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.GE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1891:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10891
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1892:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10895
		{
			var retCode int
			sqlVAL.union.val, retCode = processUnaryQualOp(sqllex, sqlDollar[1].union.op(), sqlDollar[2].union.expr())
			if retCode != 0 {
				return retCode
			}
		}
	case 1893:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10903
		{
			{
				var retCode int
				sqlVAL.union.val, retCode = processBinaryQualOp(sqllex, sqlDollar[2].union.op(), sqlDollar[1].union.expr(), sqlDollar[3].union.expr())
				if retCode != 0 {
					return retCode
				}
			}
		}
	case 1894:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10913
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1895:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10917
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1896:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10921
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1897:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10925
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1899:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10939
		{
			sqlVAL.union.val = &tree.IndirectionExpr{
				Expr:        sqlDollar[1].union.expr(),
				Indirection: sqlDollar[2].union.arraySubscripts(),
			}
		}
	case 1901:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10947
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[2].union.selectStmt(), Exists: true}
		}
	case 1902:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10983
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1903:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10987
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1904:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10991
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 1905:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10995
		{
			sqlVAL.union.val = tree.NewBytesStrVal(sqlDollar[1].str)
		}
	case 1906:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10999
		{
			d, err := tree.ParseDBitArray(sqlDollar[1].str)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 1907:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11004
		{
			return unimplemented(sqllex, sqlDollar[1].union.unresolvedName().String()+"(...) SCONST")
		}
	case 1908:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11006
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1909:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11010
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1910:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11014
		{
			sqlVAL.union.val = tree.MakeDBool(true)
		}
	case 1911:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11018
		{
			sqlVAL.union.val = tree.MakeDBool(false)
		}
	case 1912:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11022
		{
			sqlVAL.union.val = tree.DNull
		}
	case 1913:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11026
		{
			sqlVAL.union.val = tree.Expr(sqlDollar[1].union.unresolvedName())
		}
	case 1914:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11030
		{
			colNum := sqlDollar[2].union.int64()
			if colNum < 1 || colNum > int64(MaxInt) {
				sqllex.Error(fmt.Sprintf("invalid column ordinal: @%d", colNum))
				return 1
			}
			sqlVAL.union.val = tree.NewOrdinalReference(int(colNum - 1))
		}
	case 1915:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11039
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 1916:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11046
		{
			sqlVAL.union.val = &tree.TupleStar{Expr: sqlDollar[2].union.expr()}
		}
	case 1917:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11050
		{
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ColName: tree.Name(sqlDollar[5].str)}
		}
	case 1918:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11054
		{
			idx, err := sqlDollar[6].union.numVal().AsInt32()
			if err != nil || idx <= 0 {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ByIndex: true, ColIndex: int(idx - 1)}
		}
	case 1919:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11060
		{
			sqlVAL.union.val = &tree.ParenExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1921:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11065
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1922:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11069
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 1923:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11073
		{
			sqlVAL.union.val = &tree.ArrayFlatten{Subquery: &tree.Subquery{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1924:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11077
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.tuple().Exprs}
		}
	case 1925:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11081
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1926:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11084
		{
			return unimplemented(sqllex, "d_expr grouping")
		}
	case 1927:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11088
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName()}
		}
	case 1928:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11092
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: sqlDollar[3].union.exprs(), OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 1929:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11095
		{
			return unimplemented(sqllex, "variadic")
		}
	case 1930:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11096
		{
			return unimplemented(sqllex, "variadic")
		}
	case 1931:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11098
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.AllFuncType, Exprs: sqlDollar[4].union.exprs(), OrderBy: sqlDollar[5].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 1932:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11104
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.DistinctFuncType, Exprs: sqlDollar[4].union.exprs()}
		}
	case 1933:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11108
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: tree.Exprs{tree.StarExpr()}}
		}
	case 1934:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11111
		{
			return helpWithFunction(sqllex, sqlDollar[1].union.resolvableFuncRefFromName())
		}
	case 1935:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11120
		{
			name := sqlDollar[1].union.unresolvedName()
			if name.NumParts == 1 {
				typName := name.Parts[0]

				if typName == "char" {
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: types.MakeQChar(0), SyntaxMode: tree.CastPrepend}
				} else if typName == "serial" {
					switch sqllex.(*lexer).nakedIntType.Width() {
					case 32:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial4Type, SyntaxMode: tree.CastPrepend}
					default:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial8Type, SyntaxMode: tree.CastPrepend}
					}
				} else {

					var typ tree.ResolvableTypeReference
					var ok bool
					var err error
					var unimp int
					typ, ok, unimp = types.TypeForNonKeywordTypeName(typName)
					if !ok {
						switch unimp {
						case 0:

							aIdx := sqllex.(*lexer).NewAnnotation()
							typ, err = name.ToUnresolvedObjectName(aIdx)
							if err != nil {
								return setErr(sqllex, err)
							}
						case -1:
							return unimplemented(sqllex, "type name "+typName)
						default:
							return unimplementedWithIssueDetail(sqllex, unimp, typName)
						}
					}
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: typ, SyntaxMode: tree.CastPrepend}
				}
			} else {
				aIdx := sqllex.(*lexer).NewAnnotation()
				res, err := name.ToUnresolvedObjectName(aIdx)
				if err != nil {
					return setErr(sqllex, err)
				}
				sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: res, SyntaxMode: tree.CastPrepend}
			}
		}
	case 1936:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11173
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: sqlDollar[1].union.colType(), SyntaxMode: tree.CastPrepend}
		}
	case 1937:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11186
		{
			f := sqlDollar[1].union.expr().(*tree.FuncExpr)
			w := sqlDollar[2].union.expr().(*tree.FuncExpr)
			if w.AggType != 0 {
				f.AggType = w.AggType
				f.OrderBy = w.OrderBy
			}
			f.Filter = sqlDollar[3].union.expr()
			f.WindowDef = sqlDollar[4].union.windowDef()
			sqlVAL.union.val = f
		}
	case 1938:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11198
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1939:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11207
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1940:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11208
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1941:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11213
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("pg_collation_for"), Exprs: tree.Exprs{sqlDollar[4].union.expr()}}
		}
	case 1942:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11217
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1943:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11221
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1944:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11227
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_database")}
		}
	case 1945:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11231
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1946:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11235
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1947:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11239
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1948:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11243
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1949:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11247
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1950:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11253
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1951:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11257
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1952:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11261
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1953:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11265
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.CastExplicit}
		}
	case 1954:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11269
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.AnnotateExplicit}
		}
	case 1955:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11273
		{
			sqlVAL.union.val = &tree.IfExpr{Cond: sqlDollar[3].union.expr(), True: sqlDollar[5].union.expr(), Else: sqlDollar[7].union.expr()}
		}
	case 1956:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11277
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr(), ErrCode: sqlDollar[7].union.expr()}
		}
	case 1957:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11281
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr()}
		}
	case 1958:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11285
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr()}
		}
	case 1959:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11289
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), ErrCode: sqlDollar[5].union.expr()}
		}
	case 1960:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11293
		{
			sqlVAL.union.val = &tree.NullIfExpr{Expr1: sqlDollar[3].union.expr(), Expr2: sqlDollar[5].union.expr()}
		}
	case 1961:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11297
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "IFNULL", Exprs: tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1962:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11301
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "COALESCE", Exprs: sqlDollar[3].union.exprs()}
		}
	case 1964:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11308
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1965:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11311
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1966:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11313
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1967:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11316
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1968:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11318
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1969:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11322
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1970:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11325
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1971:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11327
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1972:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11331
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1973:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11334
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1974:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11336
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1975:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11340
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1976:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11343
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1977:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11345
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1978:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11349
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1979:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11352
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1980:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11354
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1981:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11357
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1982:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11359
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1983:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11362
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1984:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11364
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1985:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11367
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1986:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11369
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1987:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11372
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1988:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11374
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("strpos"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1989:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11378
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1990:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11381
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1991:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11382
		{
			return unimplemented(sqllex, "treat")
		}
	case 1992:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11384
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1993:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11388
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ltrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1994:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11392
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("rtrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1995:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11396
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1996:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11400
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1997:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11403
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1998:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11405
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1999:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11408
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2000:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11414
		{
			sqlVAL.union.val = &tree.FuncExpr{OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.OrderedSetAgg}
		}
	case 2001:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11418
		{
			sqlVAL.union.val = &tree.FuncExpr{}
		}
	case 2002:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11424
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 2003:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11428
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2004:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11435
		{
			sqlVAL.union.val = sqlDollar[2].union.window()
		}
	case 2005:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11439
		{
			sqlVAL.union.val = tree.Window(nil)
		}
	case 2006:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11445
		{
			sqlVAL.union.val = tree.Window{sqlDollar[1].union.windowDef()}
		}
	case 2007:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11449
		{
			sqlVAL.union.val = append(sqlDollar[1].union.window(), sqlDollar[3].union.windowDef())
		}
	case 2008:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11455
		{
			n := sqlDollar[3].union.windowDef()
			n.Name = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = n
		}
	case 2009:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11463
		{
			sqlVAL.union.val = sqlDollar[2].union.windowDef()
		}
	case 2010:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11467
		{
			sqlVAL.union.val = &tree.WindowDef{Name: tree.Name(sqlDollar[2].str)}
		}
	case 2011:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11471
		{
			sqlVAL.union.val = (*tree.WindowDef)(nil)
		}
	case 2012:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11478
		{
			sqlVAL.union.val = &tree.WindowDef{
				RefName:    tree.Name(sqlDollar[2].str),
				Partitions: sqlDollar[3].union.exprs(),
				OrderBy:    sqlDollar[4].union.orderBy(),
				Frame:      sqlDollar[5].union.windowFrame(),
			}
		}
	case 2014:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11498
		{
			sqlVAL.str = ""
		}
	case 2015:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11504
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 2016:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11508
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2017:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11514
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.RANGE,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2018:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11522
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.ROWS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2019:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11530
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.GROUPS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2020:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11538
		{
			sqlVAL.union.val = (*tree.WindowFrame)(nil)
		}
	case 2021:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11544
		{
			startBound := sqlDollar[1].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.BoundType == tree.OffsetFollowing:
				sqllex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound}
		}
	case 2022:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11557
		{
			startBound := sqlDollar[2].union.windowFrameBound()
			endBound := sqlDollar[4].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.BoundType == tree.UnboundedPreceding:
				sqllex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.BoundType == tree.CurrentRow && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.CurrentRow:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound, EndBound: endBound}
		}
	case 2023:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11585
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedPreceding}
		}
	case 2024:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11589
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedFollowing}
		}
	case 2025:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11593
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.CurrentRow}
		}
	case 2026:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11597
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetPreceding,
			}
		}
	case 2027:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11604
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetFollowing,
			}
		}
	case 2028:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11613
		{
			sqlVAL.union.val = tree.ExcludeCurrentRow
		}
	case 2029:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11617
		{
			sqlVAL.union.val = tree.ExcludeGroup
		}
	case 2030:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11621
		{
			sqlVAL.union.val = tree.ExcludeTies
		}
	case 2031:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11625
		{

			sqlVAL.union.val = tree.NoExclusion
		}
	case 2032:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11630
		{
			sqlVAL.union.val = tree.NoExclusion
		}
	case 2033:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11643
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[3].union.exprs(), Row: true}
		}
	case 2034:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11647
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 2036:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11654
		{
			t := sqlDollar[2].union.tuple()
			labels := sqlDollar[4].union.nameList()
			t.Labels = make([]string, len(labels))
			for i, l := range labels {
				t.Labels[i] = string(l)
			}
			sqlVAL.union.val = t
		}
	case 2037:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11666
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Any)
		}
	case 2038:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11670
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Some)
		}
	case 2039:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11674
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.All)
		}
	case 2040:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11690
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Plus)
		}
	case 2041:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11691
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Minus)
		}
	case 2042:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11692
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Mult)
		}
	case 2043:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11693
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Div)
		}
	case 2044:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11694
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Mod)
		}
	case 2045:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11695
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Pow)
		}
	case 2046:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11696
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.LT)
		}
	case 2047:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11697
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.GT)
		}
	case 2048:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11698
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.EQ)
		}
	case 2049:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11699
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.LE)
		}
	case 2050:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11700
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.GE)
		}
	case 2051:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11701
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NE)
		}
	case 2052:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11703
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.JSONExists)
		}
	case 2053:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11704
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Bitand)
		}
	case 2054:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11705
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Bitor)
		}
	case 2055:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11706
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Bitxor)
		}
	case 2056:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11707
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.FloorDiv)
		}
	case 2057:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11708
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Contains)
		}
	case 2058:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11709
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.ContainedBy)
		}
	case 2059:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11710
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.LShift)
		}
	case 2060:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11711
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.RShift)
		}
	case 2061:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11712
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Concat)
		}
	case 2062:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11713
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.JSONFetchVal)
		}
	case 2063:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11714
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.JSONFetchText)
		}
	case 2064:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11715
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.JSONFetchValPath)
		}
	case 2065:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11716
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.JSONFetchTextPath)
		}
	case 2066:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11717
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.JSONSomeExists)
		}
	case 2067:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11718
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.JSONAllExists)
		}
	case 2068:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11719
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NotRegMatch)
		}
	case 2069:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11720
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.RegIMatch)
		}
	case 2070:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11721
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NotRegIMatch)
		}
	case 2071:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11722
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Overlaps)
		}
	case 2072:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11723
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnaryComplement)
		}
	case 2073:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11724
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnarySqrt)
		}
	case 2074:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11725
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnaryCbrt)
		}
	case 2076:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11730
		{

			if sqlDollar[1].str != "pg_catalog" {
				return unimplementedWithIssue(sqllex, 65017)
			}
			sqlVAL.union = sqlDollar[3].union
		}
	case 2077:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11746
		{
			sqlVAL.union = sqlDollar[3].union
		}
	case 2080:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11753
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Like)
		}
	case 2081:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11754
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NotLike)
		}
	case 2082:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11755
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.ILike)
		}
	case 2083:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11756
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NotILike)
		}
	case 2084:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11779
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2085:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11783
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2086:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11789
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2087:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11793
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2088:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11797
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2089:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11808
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2090:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11812
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2091:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11818
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2092:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11822
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2094:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11829
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2095:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11835
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2096:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11839
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2097:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11845
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference{sqlDollar[1].union.typeReference()}
		}
	case 2098:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11849
		{
			sqlVAL.union.val = append(sqlDollar[1].union.typeReferences(), sqlDollar[3].union.typeReference())
		}
	case 2099:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11855
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2100:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11859
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2101:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11865
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2102:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11869
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2103:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11875
		{
			sqlVAL.union.val = tree.Exprs{tree.NewStrVal(strings.ToLower(sqlDollar[1].str)), sqlDollar[3].union.expr()}
		}
	case 2104:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11879
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2113:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11902
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr(), sqlDollar[4].union.expr()}
		}
	case 2114:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11906
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2115:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11910
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2116:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11916
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2117:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11923
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[1].union.expr()}
		}
	case 2118:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11927
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2119:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11944
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2120:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11948
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2121:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11952
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2122:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11956
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), tree.NewDInt(1), sqlDollar[2].union.expr()}
		}
	case 2123:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11960
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2124:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11966
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2125:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11972
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2126:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11978
		{
			sqlVAL.union.val = append(sqlDollar[3].union.exprs(), sqlDollar[1].union.expr())
		}
	case 2127:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11982
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 2128:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11986
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2129:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11992
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 2131:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12004
		{
			sqlVAL.union.val = &tree.CaseExpr{Expr: sqlDollar[2].union.expr(), Whens: sqlDollar[3].union.whens(), Else: sqlDollar[4].union.expr()}
		}
	case 2132:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12011
		{
			sqlVAL.union.val = []*tree.When{sqlDollar[1].union.when()}
		}
	case 2133:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12015
		{
			sqlVAL.union.val = append(sqlDollar[1].union.whens(), sqlDollar[2].union.when())
		}
	case 2134:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12021
		{
			sqlVAL.union.val = &tree.When{Cond: sqlDollar[2].union.expr(), Val: sqlDollar[4].union.expr()}
		}
	case 2135:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12027
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2136:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12031
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2138:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12038
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2139:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12044
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr()}
		}
	case 2140:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12048
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr(), End: sqlDollar[4].union.expr(), Slice: true}
		}
	case 2142:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12055
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2143:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12061
		{
			sqlVAL.union.val = tree.ArraySubscripts{sqlDollar[1].union.arraySubscript()}
		}
	case 2144:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12065
		{
			sqlVAL.union.val = append(sqlDollar[1].union.arraySubscripts(), sqlDollar[2].union.arraySubscript())
		}
	case 2145:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12070
		{
		}
	case 2146:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12071
		{
		}
	case 2147:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12075
		{
			sqlVAL.union.val = tree.SelectExprs{sqlDollar[1].union.selExpr()}
		}
	case 2148:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12079
		{
			sqlVAL.union.val = append(sqlDollar[1].union.selExprs(), sqlDollar[3].union.selExpr())
		}
	case 2149:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12085
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 2150:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12094
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 2151:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12098
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2152:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12102
		{
			sqlVAL.union.val = tree.StarSelectExpr()
		}
	case 2153:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12110
		{
			sqlVAL.union.val = tree.TableIndexNames{sqlDollar[1].union.newTableIndexName()}
		}
	case 2154:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12114
		{
			sqlVAL.union.val = append(sqlDollar[1].union.newTableIndexNames(), sqlDollar[3].union.newTableIndexName())
		}
	case 2155:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12120
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedName()}
		}
	case 2156:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12124
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedName())
		}
	case 2157:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12143
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: tree.UnrestrictedName(sqlDollar[3].str),
			}
		}
	case 2158:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12151
		{

			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			indexName := tree.UnrestrictedName(name.ObjectName)
			name.ObjectName = ""
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: indexName,
			}
		}
	case 2159:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12174
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2161:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12183
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2162:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12187
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2163:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12191
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2164:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12195
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 1}
		}
	case 2165:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12201
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 2166:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12205
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 2171:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12220
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2172:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12224
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2175:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12236
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2176:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12240
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2177:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12249
		{
			val, err := sqlDollar[1].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2178:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12260
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2179:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12269
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2180:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12277
		{
			var t *types.T
			if sqlDollar[3].union.val == nil {
				t = types.Interval
			} else {
				t = types.MakeInterval(sqlDollar[3].union.intervalTypeMetadata())
			}
			sqlVAL.union.val = &tree.CastExpr{
				Expr: tree.NewStrVal(sqlDollar[2].str),
				Type: t,

				SyntaxMode: tree.CastShort,
			}
		}
	case 2181:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12294
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = &tree.CastExpr{
				Expr: tree.NewStrVal(sqlDollar[5].str),
				Type: types.MakeInterval(
					types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true},
				),

				SyntaxMode: tree.CastShort,
			}
		}
	case 2200:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12379
		{
			sqlVAL.union.val = sqlDollar[1].union.nameList()
		}
	case 2202:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12387
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{SchemaName: tree.Name(sqlDollar[1].str), ExplicitSchema: true}
		}
	case 2203:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12391
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{CatalogName: tree.Name(sqlDollar[1].str), SchemaName: tree.Name(sqlDollar[3].str), ExplicitCatalog: true, ExplicitSchema: true}
		}
	case 2204:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12397
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{sqlDollar[1].union.objectNamePrefix()}
		}
	case 2205:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12401
		{
			sqlVAL.union.val = append(sqlDollar[1].union.objectNamePrefixList(), sqlDollar[3].union.objectNamePrefix())
		}
	case 2207:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12409
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{ExplicitSchema: false}
		}
	case 2213:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12436
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2215:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12443
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 2, Parts: tree.NameParts{sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2216:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12447
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 3, Parts: tree.NameParts{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2217:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12451
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 4, Parts: tree.NameParts{sqlDollar[7].str, sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2219:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12465
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 4, Parts: tree.NameParts{"", sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2220:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12469
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2221:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12473
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2222:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12486
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2224:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12495
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2228:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12513
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2229:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12526
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2230:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12533
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2238:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12558
		{
			sqlVAL.str = ""
		}
	case 2239:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12564
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 2240:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12568
		{
			sqlVAL.str = ""
		}
	}
	goto sqlstack /* stack new state and value */
}
