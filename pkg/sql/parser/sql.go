// Code generated by goyacc. DO NOT EDIT.
// GENERATED FILE DO NOT EDIT
// Code generated by goyacc -p sql -o sql.go.tmp sql-gen.y. DO NOT EDIT.

//line sql-gen.y:24
package parser

import (
	"fmt"
	__yyfmt__ "fmt"
	"go/constant"
	"strings"

	"github.com/cockroachdb/cockroach/pkg/geo/geopb"
	"github.com/cockroachdb/cockroach/pkg/roachpb"
	"github.com/cockroachdb/cockroach/pkg/sql/lex"
	"github.com/cockroachdb/cockroach/pkg/sql/privilege"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree"
	"github.com/cockroachdb/cockroach/pkg/sql/types"
	"github.com/cockroachdb/errors"
	"github.com/lib/pq/oid"
)

//line sql-gen.y:24

const MaxUint = ^uint(0)

const MaxInt = int(MaxUint >> 1)

func unimplemented(sqllex sqlLexer, feature string) int {
	sqllex.(*lexer).Unimplemented(feature)
	return 1
}
func purposelyUnimplemented(sqllex sqlLexer, feature string, reason string) int {
	sqllex.(*lexer).PurposelyUnimplemented(feature, reason)
	return 1
}

func setErr(sqllex sqlLexer, err error) int {
	sqllex.(*lexer).setErr(err)
	return 1
}

func unimplementedWithIssue(sqllex sqlLexer, issue int) int {
	sqllex.(*lexer).UnimplementedWithIssue(issue)
	return 1
}

func unimplementedWithIssueDetail(sqllex sqlLexer, issue int, detail string) int {
	sqllex.(*lexer).UnimplementedWithIssueDetail(issue, detail)
	return 1
}

//line sql-gen.y:73

type sqlSymUnion struct {
	val interface{}
}

func (u *sqlSymUnion) numVal() *tree.NumVal {
	return u.val.(*tree.NumVal)
}
func (u *sqlSymUnion) strVal() *tree.StrVal {
	if stmt, ok := u.val.(*tree.StrVal); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) placeholder() *tree.Placeholder {
	return u.val.(*tree.Placeholder)
}
func (u *sqlSymUnion) auditMode() tree.AuditMode {
	return u.val.(tree.AuditMode)
}
func (u *sqlSymUnion) bool() bool {
	return u.val.(bool)
}
func (u *sqlSymUnion) strPtr() *string {
	return u.val.(*string)
}
func (u *sqlSymUnion) strs() []string {
	return u.val.([]string)
}
func (u *sqlSymUnion) newTableIndexName() *tree.TableIndexName {
	tn := u.val.(tree.TableIndexName)
	return &tn
}
func (u *sqlSymUnion) tableIndexName() tree.TableIndexName {
	return u.val.(tree.TableIndexName)
}
func (u *sqlSymUnion) newTableIndexNames() tree.TableIndexNames {
	return u.val.(tree.TableIndexNames)
}
func (u *sqlSymUnion) shardedIndexDef() *tree.ShardedIndexDef {
	return u.val.(*tree.ShardedIndexDef)
}
func (u *sqlSymUnion) nameList() tree.NameList {
	return u.val.(tree.NameList)
}
func (u *sqlSymUnion) unresolvedName() *tree.UnresolvedName {
	return u.val.(*tree.UnresolvedName)
}
func (u *sqlSymUnion) unresolvedObjectName() *tree.UnresolvedObjectName {
	return u.val.(*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) unresolvedObjectNames() []*tree.UnresolvedObjectName {
	return u.val.([]*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) functionReference() tree.FunctionReference {
	return u.val.(tree.FunctionReference)
}
func (u *sqlSymUnion) tablePatterns() tree.TablePatterns {
	return u.val.(tree.TablePatterns)
}
func (u *sqlSymUnion) tableNames() tree.TableNames {
	return u.val.(tree.TableNames)
}
func (u *sqlSymUnion) indexFlags() *tree.IndexFlags {
	return u.val.(*tree.IndexFlags)
}
func (u *sqlSymUnion) arraySubscript() *tree.ArraySubscript {
	return u.val.(*tree.ArraySubscript)
}
func (u *sqlSymUnion) arraySubscripts() tree.ArraySubscripts {
	if as, ok := u.val.(tree.ArraySubscripts); ok {
		return as
	}
	return nil
}
func (u *sqlSymUnion) stmt() tree.Statement {
	if stmt, ok := u.val.(tree.Statement); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) cte() *tree.CTE {
	if cte, ok := u.val.(*tree.CTE); ok {
		return cte
	}
	return nil
}
func (u *sqlSymUnion) ctes() []*tree.CTE {
	return u.val.([]*tree.CTE)
}
func (u *sqlSymUnion) with() *tree.With {
	if with, ok := u.val.(*tree.With); ok {
		return with
	}
	return nil
}
func (u *sqlSymUnion) slct() *tree.Select {
	return u.val.(*tree.Select)
}
func (u *sqlSymUnion) selectStmt() tree.SelectStatement {
	return u.val.(tree.SelectStatement)
}
func (u *sqlSymUnion) colDef() *tree.ColumnTableDef {
	return u.val.(*tree.ColumnTableDef)
}
func (u *sqlSymUnion) constraintDef() tree.ConstraintTableDef {
	return u.val.(tree.ConstraintTableDef)
}
func (u *sqlSymUnion) tblDef() tree.TableDef {
	return u.val.(tree.TableDef)
}
func (u *sqlSymUnion) tblDefs() tree.TableDefs {
	return u.val.(tree.TableDefs)
}
func (u *sqlSymUnion) likeTableOption() tree.LikeTableOption {
	return u.val.(tree.LikeTableOption)
}
func (u *sqlSymUnion) likeTableOptionList() []tree.LikeTableOption {
	return u.val.([]tree.LikeTableOption)
}
func (u *sqlSymUnion) colQual() tree.NamedColumnQualification {
	return u.val.(tree.NamedColumnQualification)
}
func (u *sqlSymUnion) colQualElem() tree.ColumnQualification {
	return u.val.(tree.ColumnQualification)
}
func (u *sqlSymUnion) colQuals() []tree.NamedColumnQualification {
	return u.val.([]tree.NamedColumnQualification)
}
func (u *sqlSymUnion) storageParam() tree.StorageParam {
	return u.val.(tree.StorageParam)
}
func (u *sqlSymUnion) storageParams() []tree.StorageParam {
	if params, ok := u.val.([]tree.StorageParam); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) persistence() tree.Persistence {
	return u.val.(tree.Persistence)
}
func (u *sqlSymUnion) colType() *types.T {
	if colType, ok := u.val.(*types.T); ok && colType != nil {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) tableRefCols() []tree.ColumnID {
	if refCols, ok := u.val.([]tree.ColumnID); ok {
		return refCols
	}
	return nil
}
func (u *sqlSymUnion) colTypes() []*types.T {
	return u.val.([]*types.T)
}
func (u *sqlSymUnion) int32() int32 {
	return u.val.(int32)
}
func (u *sqlSymUnion) int64() int64 {
	return u.val.(int64)
}
func (u *sqlSymUnion) seqOpt() tree.SequenceOption {
	return u.val.(tree.SequenceOption)
}
func (u *sqlSymUnion) seqOpts() []tree.SequenceOption {
	return u.val.([]tree.SequenceOption)
}
func (u *sqlSymUnion) expr() tree.Expr {
	if expr, ok := u.val.(tree.Expr); ok {
		return expr
	}
	return nil
}
func (u *sqlSymUnion) exprs() tree.Exprs {
	return u.val.(tree.Exprs)
}
func (u *sqlSymUnion) selExpr() tree.SelectExpr {
	return u.val.(tree.SelectExpr)
}
func (u *sqlSymUnion) selExprs() tree.SelectExprs {
	return u.val.(tree.SelectExprs)
}
func (u *sqlSymUnion) retClause() tree.ReturningClause {
	return u.val.(tree.ReturningClause)
}
func (u *sqlSymUnion) aliasClause() tree.AliasClause {
	return u.val.(tree.AliasClause)
}
func (u *sqlSymUnion) asOfClause() tree.AsOfClause {
	return u.val.(tree.AsOfClause)
}
func (u *sqlSymUnion) tblExpr() tree.TableExpr {
	return u.val.(tree.TableExpr)
}
func (u *sqlSymUnion) tblExprs() tree.TableExprs {
	return u.val.(tree.TableExprs)
}
func (u *sqlSymUnion) from() tree.From {
	return u.val.(tree.From)
}
func (u *sqlSymUnion) int32s() []int32 {
	return u.val.([]int32)
}
func (u *sqlSymUnion) joinCond() tree.JoinCond {
	return u.val.(tree.JoinCond)
}
func (u *sqlSymUnion) when() *tree.When {
	return u.val.(*tree.When)
}
func (u *sqlSymUnion) whens() []*tree.When {
	return u.val.([]*tree.When)
}
func (u *sqlSymUnion) lockingClause() tree.LockingClause {
	return u.val.(tree.LockingClause)
}
func (u *sqlSymUnion) lockingItem() *tree.LockingItem {
	return u.val.(*tree.LockingItem)
}
func (u *sqlSymUnion) lockingStrength() tree.LockingStrength {
	return u.val.(tree.LockingStrength)
}
func (u *sqlSymUnion) lockingWaitPolicy() tree.LockingWaitPolicy {
	return u.val.(tree.LockingWaitPolicy)
}
func (u *sqlSymUnion) updateExpr() *tree.UpdateExpr {
	return u.val.(*tree.UpdateExpr)
}
func (u *sqlSymUnion) updateExprs() tree.UpdateExprs {
	return u.val.(tree.UpdateExprs)
}
func (u *sqlSymUnion) limit() *tree.Limit {
	return u.val.(*tree.Limit)
}
func (u *sqlSymUnion) targetList() tree.TargetList {
	return u.val.(tree.TargetList)
}
func (u *sqlSymUnion) targetListPtr() *tree.TargetList {
	return u.val.(*tree.TargetList)
}
func (u *sqlSymUnion) privilegeType() privilege.Kind {
	return u.val.(privilege.Kind)
}
func (u *sqlSymUnion) privilegeList() privilege.List {
	return u.val.(privilege.List)
}
func (u *sqlSymUnion) onConflict() *tree.OnConflict {
	return u.val.(*tree.OnConflict)
}
func (u *sqlSymUnion) orderBy() tree.OrderBy {
	return u.val.(tree.OrderBy)
}
func (u *sqlSymUnion) order() *tree.Order {
	return u.val.(*tree.Order)
}
func (u *sqlSymUnion) orders() []*tree.Order {
	return u.val.([]*tree.Order)
}
func (u *sqlSymUnion) groupBy() tree.GroupBy {
	return u.val.(tree.GroupBy)
}
func (u *sqlSymUnion) windowFrame() *tree.WindowFrame {
	return u.val.(*tree.WindowFrame)
}
func (u *sqlSymUnion) windowFrameBounds() tree.WindowFrameBounds {
	return u.val.(tree.WindowFrameBounds)
}
func (u *sqlSymUnion) windowFrameBound() *tree.WindowFrameBound {
	return u.val.(*tree.WindowFrameBound)
}
func (u *sqlSymUnion) windowFrameExclusion() tree.WindowFrameExclusion {
	return u.val.(tree.WindowFrameExclusion)
}
func (u *sqlSymUnion) distinctOn() tree.DistinctOn {
	return u.val.(tree.DistinctOn)
}
func (u *sqlSymUnion) dir() tree.Direction {
	return u.val.(tree.Direction)
}
func (u *sqlSymUnion) nullsOrder() tree.NullsOrder {
	return u.val.(tree.NullsOrder)
}
func (u *sqlSymUnion) alterTableCmd() tree.AlterTableCmd {
	return u.val.(tree.AlterTableCmd)
}
func (u *sqlSymUnion) alterTableCmds() tree.AlterTableCmds {
	return u.val.(tree.AlterTableCmds)
}
func (u *sqlSymUnion) alterIndexCmd() tree.AlterIndexCmd {
	return u.val.(tree.AlterIndexCmd)
}
func (u *sqlSymUnion) alterIndexCmds() tree.AlterIndexCmds {
	return u.val.(tree.AlterIndexCmds)
}
func (u *sqlSymUnion) isoLevel() tree.IsolationLevel {
	return u.val.(tree.IsolationLevel)
}
func (u *sqlSymUnion) userPriority() tree.UserPriority {
	return u.val.(tree.UserPriority)
}
func (u *sqlSymUnion) readWriteMode() tree.ReadWriteMode {
	return u.val.(tree.ReadWriteMode)
}
func (u *sqlSymUnion) idxElem() tree.IndexElem {
	return u.val.(tree.IndexElem)
}
func (u *sqlSymUnion) idxElems() tree.IndexElemList {
	return u.val.(tree.IndexElemList)
}
func (u *sqlSymUnion) dropBehavior() tree.DropBehavior {
	return u.val.(tree.DropBehavior)
}
func (u *sqlSymUnion) validationBehavior() tree.ValidationBehavior {
	return u.val.(tree.ValidationBehavior)
}
func (u *sqlSymUnion) interleave() *tree.InterleaveDef {
	return u.val.(*tree.InterleaveDef)
}
func (u *sqlSymUnion) partitionBy() *tree.PartitionBy {
	return u.val.(*tree.PartitionBy)
}
func (u *sqlSymUnion) createTableOnCommitSetting() tree.CreateTableOnCommitSetting {
	return u.val.(tree.CreateTableOnCommitSetting)
}
func (u *sqlSymUnion) listPartition() tree.ListPartition {
	return u.val.(tree.ListPartition)
}
func (u *sqlSymUnion) listPartitions() []tree.ListPartition {
	return u.val.([]tree.ListPartition)
}
func (u *sqlSymUnion) rangePartition() tree.RangePartition {
	return u.val.(tree.RangePartition)
}
func (u *sqlSymUnion) rangePartitions() []tree.RangePartition {
	return u.val.([]tree.RangePartition)
}
func (u *sqlSymUnion) setZoneConfig() *tree.SetZoneConfig {
	return u.val.(*tree.SetZoneConfig)
}
func (u *sqlSymUnion) tuples() []*tree.Tuple {
	return u.val.([]*tree.Tuple)
}
func (u *sqlSymUnion) tuple() *tree.Tuple {
	return u.val.(*tree.Tuple)
}
func (u *sqlSymUnion) windowDef() *tree.WindowDef {
	return u.val.(*tree.WindowDef)
}
func (u *sqlSymUnion) window() tree.Window {
	return u.val.(tree.Window)
}
func (u *sqlSymUnion) op() tree.Operator {
	return u.val.(tree.Operator)
}
func (u *sqlSymUnion) cmpOp() tree.ComparisonOperator {
	return u.val.(tree.ComparisonOperator)
}
func (u *sqlSymUnion) intervalTypeMetadata() types.IntervalTypeMetadata {
	return u.val.(types.IntervalTypeMetadata)
}
func (u *sqlSymUnion) kvOption() tree.KVOption {
	return u.val.(tree.KVOption)
}
func (u *sqlSymUnion) kvOptions() []tree.KVOption {
	if colType, ok := u.val.([]tree.KVOption); ok {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) backupOptions() *tree.BackupOptions {
	return u.val.(*tree.BackupOptions)
}
func (u *sqlSymUnion) copyOptions() *tree.CopyOptions {
	return u.val.(*tree.CopyOptions)
}
func (u *sqlSymUnion) restoreOptions() *tree.RestoreOptions {
	return u.val.(*tree.RestoreOptions)
}
func (u *sqlSymUnion) transactionModes() tree.TransactionModes {
	return u.val.(tree.TransactionModes)
}
func (u *sqlSymUnion) compositeKeyMatchMethod() tree.CompositeKeyMatchMethod {
	return u.val.(tree.CompositeKeyMatchMethod)
}
func (u *sqlSymUnion) referenceAction() tree.ReferenceAction {
	return u.val.(tree.ReferenceAction)
}
func (u *sqlSymUnion) referenceActions() tree.ReferenceActions {
	return u.val.(tree.ReferenceActions)
}
func (u *sqlSymUnion) createStatsOptions() *tree.CreateStatsOptions {
	return u.val.(*tree.CreateStatsOptions)
}
func (u *sqlSymUnion) scrubOptions() tree.ScrubOptions {
	return u.val.(tree.ScrubOptions)
}
func (u *sqlSymUnion) scrubOption() tree.ScrubOption {
	return u.val.(tree.ScrubOption)
}
func (u *sqlSymUnion) resolvableFuncRefFromName() tree.ResolvableFunctionReference {
	return tree.ResolvableFunctionReference{FunctionReference: u.unresolvedName()}
}
func (u *sqlSymUnion) rowsFromExpr() *tree.RowsFromExpr {
	return u.val.(*tree.RowsFromExpr)
}
func (u *sqlSymUnion) stringOrPlaceholderOptList() tree.StringOrPlaceholderOptList {
	return u.val.(tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) listOfStringOrPlaceholderOptList() []tree.StringOrPlaceholderOptList {
	return u.val.([]tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) fullBackupClause() *tree.FullBackupClause {
	return u.val.(*tree.FullBackupClause)
}
func (u *sqlSymUnion) geoShapeType() geopb.ShapeType {
	return u.val.(geopb.ShapeType)
}
func newNameFromStr(s string) *tree.Name {
	return (*tree.Name)(&s)
}
func (u *sqlSymUnion) typeReference() tree.ResolvableTypeReference {
	return u.val.(tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) typeReferences() []tree.ResolvableTypeReference {
	return u.val.([]tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) alterTypeAddValuePlacement() *tree.AlterTypeAddValuePlacement {
	return u.val.(*tree.AlterTypeAddValuePlacement)
}
func (u *sqlSymUnion) scheduleState() tree.ScheduleState {
	return u.val.(tree.ScheduleState)
}
func (u *sqlSymUnion) executorType() tree.ScheduledJobExecutorType {
	return u.val.(tree.ScheduledJobExecutorType)
}

//line sql-gen.y:675
type sqlSymType struct {
	yys   int
	id    int32
	pos   int32
	str   string
	union sqlSymUnion
}

const IDENT = lex.IDENT
const SCONST = lex.SCONST
const BCONST = lex.BCONST
const BITCONST = lex.BITCONST
const ICONST = lex.ICONST
const FCONST = lex.FCONST
const PLACEHOLDER = lex.PLACEHOLDER
const TYPECAST = lex.TYPECAST
const TYPEANNOTATE = lex.TYPEANNOTATE
const DOT_DOT = lex.DOT_DOT
const LESS_EQUALS = lex.LESS_EQUALS
const GREATER_EQUALS = lex.GREATER_EQUALS
const NOT_EQUALS = lex.NOT_EQUALS
const NOT_REGMATCH = lex.NOT_REGMATCH
const REGIMATCH = lex.REGIMATCH
const NOT_REGIMATCH = lex.NOT_REGIMATCH
const ERROR = lex.ERROR
const ABORT = lex.ABORT
const ACTION = lex.ACTION
const ADD = lex.ADD
const ADMIN = lex.ADMIN
const AFTER = lex.AFTER
const AGGREGATE = lex.AGGREGATE
const ALL = lex.ALL
const ALTER = lex.ALTER
const ALWAYS = lex.ALWAYS
const ANALYSE = lex.ANALYSE
const ANALYZE = lex.ANALYZE
const AND = lex.AND
const AND_AND = lex.AND_AND
const ANY = lex.ANY
const ANNOTATE_TYPE = lex.ANNOTATE_TYPE
const ARRAY = lex.ARRAY
const AS = lex.AS
const ASC = lex.ASC
const ASYMMETRIC = lex.ASYMMETRIC
const AT = lex.AT
const ATTRIBUTE = lex.ATTRIBUTE
const AUTHORIZATION = lex.AUTHORIZATION
const AUTOMATIC = lex.AUTOMATIC
const BACKUP = lex.BACKUP
const BEFORE = lex.BEFORE
const BEGIN = lex.BEGIN
const BETWEEN = lex.BETWEEN
const BIGINT = lex.BIGINT
const BIGSERIAL = lex.BIGSERIAL
const BINARY = lex.BINARY
const BIT = lex.BIT
const BUCKET_COUNT = lex.BUCKET_COUNT
const BOOLEAN = lex.BOOLEAN
const BOTH = lex.BOTH
const BUNDLE = lex.BUNDLE
const BY = lex.BY
const CACHE = lex.CACHE
const CANCEL = lex.CANCEL
const CASCADE = lex.CASCADE
const CASE = lex.CASE
const CAST = lex.CAST
const CBRT = lex.CBRT
const CHANGEFEED = lex.CHANGEFEED
const CHAR = lex.CHAR
const CHARACTER = lex.CHARACTER
const CHARACTERISTICS = lex.CHARACTERISTICS
const CHECK = lex.CHECK
const CLOSE = lex.CLOSE
const CLUSTER = lex.CLUSTER
const COALESCE = lex.COALESCE
const COLLATE = lex.COLLATE
const COLLATION = lex.COLLATION
const COLUMN = lex.COLUMN
const COLUMNS = lex.COLUMNS
const COMMENT = lex.COMMENT
const COMMENTS = lex.COMMENTS
const COMMIT = lex.COMMIT
const COMMITTED = lex.COMMITTED
const COMPACT = lex.COMPACT
const COMPLETE = lex.COMPLETE
const CONCAT = lex.CONCAT
const CONCURRENTLY = lex.CONCURRENTLY
const CONFIGURATION = lex.CONFIGURATION
const CONFIGURATIONS = lex.CONFIGURATIONS
const CONFIGURE = lex.CONFIGURE
const CONFLICT = lex.CONFLICT
const CONSTRAINT = lex.CONSTRAINT
const CONSTRAINTS = lex.CONSTRAINTS
const CONTAINS = lex.CONTAINS
const CONVERSION = lex.CONVERSION
const COPY = lex.COPY
const COVERING = lex.COVERING
const CREATE = lex.CREATE
const CREATEROLE = lex.CREATEROLE
const CROSS = lex.CROSS
const CUBE = lex.CUBE
const CURRENT = lex.CURRENT
const CURRENT_CATALOG = lex.CURRENT_CATALOG
const CURRENT_DATE = lex.CURRENT_DATE
const CURRENT_SCHEMA = lex.CURRENT_SCHEMA
const CURRENT_ROLE = lex.CURRENT_ROLE
const CURRENT_TIME = lex.CURRENT_TIME
const CURRENT_TIMESTAMP = lex.CURRENT_TIMESTAMP
const CURRENT_USER = lex.CURRENT_USER
const CYCLE = lex.CYCLE
const DATA = lex.DATA
const DATABASE = lex.DATABASE
const DATABASES = lex.DATABASES
const DATE = lex.DATE
const DAY = lex.DAY
const DEC = lex.DEC
const DECIMAL = lex.DECIMAL
const DEFAULT = lex.DEFAULT
const DEFAULTS = lex.DEFAULTS
const DEALLOCATE = lex.DEALLOCATE
const DECLARE = lex.DECLARE
const DEFERRABLE = lex.DEFERRABLE
const DEFERRED = lex.DEFERRED
const DELETE = lex.DELETE
const DESC = lex.DESC
const DESTINATION = lex.DESTINATION
const DETACHED = lex.DETACHED
const DISCARD = lex.DISCARD
const DISTINCT = lex.DISTINCT
const DO = lex.DO
const DOMAIN = lex.DOMAIN
const DOUBLE = lex.DOUBLE
const DROP = lex.DROP
const ELSE = lex.ELSE
const ENCODING = lex.ENCODING
const ENCRYPTION_PASSPHRASE = lex.ENCRYPTION_PASSPHRASE
const END = lex.END
const ENUM = lex.ENUM
const ENUMS = lex.ENUMS
const ESCAPE = lex.ESCAPE
const EXCEPT = lex.EXCEPT
const EXCLUDE = lex.EXCLUDE
const EXCLUDING = lex.EXCLUDING
const EXISTS = lex.EXISTS
const EXECUTE = lex.EXECUTE
const EXECUTION = lex.EXECUTION
const EXPERIMENTAL = lex.EXPERIMENTAL
const EXPERIMENTAL_FINGERPRINTS = lex.EXPERIMENTAL_FINGERPRINTS
const EXPERIMENTAL_REPLICA = lex.EXPERIMENTAL_REPLICA
const EXPERIMENTAL_AUDIT = lex.EXPERIMENTAL_AUDIT
const EXPIRATION = lex.EXPIRATION
const EXPLAIN = lex.EXPLAIN
const EXPORT = lex.EXPORT
const EXTENSION = lex.EXTENSION
const EXTRACT = lex.EXTRACT
const EXTRACT_DURATION = lex.EXTRACT_DURATION
const FALSE = lex.FALSE
const FAMILY = lex.FAMILY
const FETCH = lex.FETCH
const FETCHVAL = lex.FETCHVAL
const FETCHTEXT = lex.FETCHTEXT
const FETCHVAL_PATH = lex.FETCHVAL_PATH
const FETCHTEXT_PATH = lex.FETCHTEXT_PATH
const FILES = lex.FILES
const FILTER = lex.FILTER
const FIRST = lex.FIRST
const FLOAT = lex.FLOAT
const FLOAT4 = lex.FLOAT4
const FLOAT8 = lex.FLOAT8
const FLOORDIV = lex.FLOORDIV
const FOLLOWING = lex.FOLLOWING
const FOR = lex.FOR
const FORCE_INDEX = lex.FORCE_INDEX
const FOREIGN = lex.FOREIGN
const FROM = lex.FROM
const FULL = lex.FULL
const FUNCTION = lex.FUNCTION
const GENERATED = lex.GENERATED
const GEOGRAPHY = lex.GEOGRAPHY
const GEOMETRY = lex.GEOMETRY
const GEOMETRYCOLLECTION = lex.GEOMETRYCOLLECTION
const GLOBAL = lex.GLOBAL
const GRANT = lex.GRANT
const GRANTS = lex.GRANTS
const GREATEST = lex.GREATEST
const GROUP = lex.GROUP
const GROUPING = lex.GROUPING
const GROUPS = lex.GROUPS
const HAVING = lex.HAVING
const HASH = lex.HASH
const HIGH = lex.HIGH
const HISTOGRAM = lex.HISTOGRAM
const HOUR = lex.HOUR
const IDENTITY = lex.IDENTITY
const IF = lex.IF
const IFERROR = lex.IFERROR
const IFNULL = lex.IFNULL
const IGNORE_FOREIGN_KEYS = lex.IGNORE_FOREIGN_KEYS
const ILIKE = lex.ILIKE
const IMMEDIATE = lex.IMMEDIATE
const IMPORT = lex.IMPORT
const IN = lex.IN
const INCLUDE = lex.INCLUDE
const INCLUDING = lex.INCLUDING
const INCREMENT = lex.INCREMENT
const INCREMENTAL = lex.INCREMENTAL
const INET = lex.INET
const INET_CONTAINED_BY_OR_EQUALS = lex.INET_CONTAINED_BY_OR_EQUALS
const INET_CONTAINS_OR_EQUALS = lex.INET_CONTAINS_OR_EQUALS
const INDEX = lex.INDEX
const INDEXES = lex.INDEXES
const INJECT = lex.INJECT
const INTERLEAVE = lex.INTERLEAVE
const INITIALLY = lex.INITIALLY
const INNER = lex.INNER
const INSERT = lex.INSERT
const INT = lex.INT
const INTEGER = lex.INTEGER
const INTERSECT = lex.INTERSECT
const INTERVAL = lex.INTERVAL
const INTO = lex.INTO
const INTO_DB = lex.INTO_DB
const INVERTED = lex.INVERTED
const IS = lex.IS
const ISERROR = lex.ISERROR
const ISNULL = lex.ISNULL
const ISOLATION = lex.ISOLATION
const JOB = lex.JOB
const JOBS = lex.JOBS
const JOIN = lex.JOIN
const JSON = lex.JSON
const JSONB = lex.JSONB
const JSON_SOME_EXISTS = lex.JSON_SOME_EXISTS
const JSON_ALL_EXISTS = lex.JSON_ALL_EXISTS
const KEY = lex.KEY
const KEYS = lex.KEYS
const KMS = lex.KMS
const KV = lex.KV
const LANGUAGE = lex.LANGUAGE
const LAST = lex.LAST
const LATERAL = lex.LATERAL
const LATEST = lex.LATEST
const LC_CTYPE = lex.LC_CTYPE
const LC_COLLATE = lex.LC_COLLATE
const LEADING = lex.LEADING
const LEASE = lex.LEASE
const LEAST = lex.LEAST
const LEFT = lex.LEFT
const LESS = lex.LESS
const LEVEL = lex.LEVEL
const LIKE = lex.LIKE
const LIMIT = lex.LIMIT
const LINESTRING = lex.LINESTRING
const LIST = lex.LIST
const LOCAL = lex.LOCAL
const LOCALTIME = lex.LOCALTIME
const LOCALTIMESTAMP = lex.LOCALTIMESTAMP
const LOCKED = lex.LOCKED
const LOGIN = lex.LOGIN
const LOOKUP = lex.LOOKUP
const LOW = lex.LOW
const LSHIFT = lex.LSHIFT
const MATCH = lex.MATCH
const MATERIALIZED = lex.MATERIALIZED
const MERGE = lex.MERGE
const MINVALUE = lex.MINVALUE
const MAXVALUE = lex.MAXVALUE
const MINUTE = lex.MINUTE
const MONTH = lex.MONTH
const MULTILINESTRING = lex.MULTILINESTRING
const MULTIPOINT = lex.MULTIPOINT
const MULTIPOLYGON = lex.MULTIPOLYGON
const NAN = lex.NAN
const NAME = lex.NAME
const NAMES = lex.NAMES
const NATURAL = lex.NATURAL
const NEVER = lex.NEVER
const NEXT = lex.NEXT
const NO = lex.NO
const NOCREATEROLE = lex.NOCREATEROLE
const NOLOGIN = lex.NOLOGIN
const NO_INDEX_JOIN = lex.NO_INDEX_JOIN
const NONE = lex.NONE
const NORMAL = lex.NORMAL
const NOT = lex.NOT
const NOTHING = lex.NOTHING
const NOTNULL = lex.NOTNULL
const NOWAIT = lex.NOWAIT
const NULL = lex.NULL
const NULLIF = lex.NULLIF
const NULLS = lex.NULLS
const NUMERIC = lex.NUMERIC
const OF = lex.OF
const OFF = lex.OFF
const OFFSET = lex.OFFSET
const OID = lex.OID
const OIDS = lex.OIDS
const OIDVECTOR = lex.OIDVECTOR
const ON = lex.ON
const ONLY = lex.ONLY
const OPT = lex.OPT
const OPTION = lex.OPTION
const OPTIONS = lex.OPTIONS
const OR = lex.OR
const ORDER = lex.ORDER
const ORDINALITY = lex.ORDINALITY
const OTHERS = lex.OTHERS
const OUT = lex.OUT
const OUTER = lex.OUTER
const OVER = lex.OVER
const OVERLAPS = lex.OVERLAPS
const OVERLAY = lex.OVERLAY
const OWNED = lex.OWNED
const OWNER = lex.OWNER
const OPERATOR = lex.OPERATOR
const PARENT = lex.PARENT
const PARTIAL = lex.PARTIAL
const PARTITION = lex.PARTITION
const PARTITIONS = lex.PARTITIONS
const PASSWORD = lex.PASSWORD
const PAUSE = lex.PAUSE
const PAUSED = lex.PAUSED
const PHYSICAL = lex.PHYSICAL
const PLACING = lex.PLACING
const PLAN = lex.PLAN
const PLANS = lex.PLANS
const POINT = lex.POINT
const POLYGON = lex.POLYGON
const POSITION = lex.POSITION
const PRECEDING = lex.PRECEDING
const PRECISION = lex.PRECISION
const PREPARE = lex.PREPARE
const PRESERVE = lex.PRESERVE
const PRIMARY = lex.PRIMARY
const PRIORITY = lex.PRIORITY
const PROCEDURAL = lex.PROCEDURAL
const PUBLIC = lex.PUBLIC
const PUBLICATION = lex.PUBLICATION
const QUERIES = lex.QUERIES
const QUERY = lex.QUERY
const RANGE = lex.RANGE
const RANGES = lex.RANGES
const READ = lex.READ
const REAL = lex.REAL
const RECURSIVE = lex.RECURSIVE
const RECURRING = lex.RECURRING
const REF = lex.REF
const REFERENCES = lex.REFERENCES
const REGCLASS = lex.REGCLASS
const REGPROC = lex.REGPROC
const REGPROCEDURE = lex.REGPROCEDURE
const REGNAMESPACE = lex.REGNAMESPACE
const REGTYPE = lex.REGTYPE
const REINDEX = lex.REINDEX
const REMOVE_PATH = lex.REMOVE_PATH
const RENAME = lex.RENAME
const REPEATABLE = lex.REPEATABLE
const REPLACE = lex.REPLACE
const RELEASE = lex.RELEASE
const RESET = lex.RESET
const RESTORE = lex.RESTORE
const RESTRICT = lex.RESTRICT
const RESUME = lex.RESUME
const RETURNING = lex.RETURNING
const RETRY = lex.RETRY
const REVISION_HISTORY = lex.REVISION_HISTORY
const REVOKE = lex.REVOKE
const RIGHT = lex.RIGHT
const ROLE = lex.ROLE
const ROLES = lex.ROLES
const ROLLBACK = lex.ROLLBACK
const ROLLUP = lex.ROLLUP
const ROW = lex.ROW
const ROWS = lex.ROWS
const RSHIFT = lex.RSHIFT
const RULE = lex.RULE
const RUNNING = lex.RUNNING
const SAVEPOINT = lex.SAVEPOINT
const SCATTER = lex.SCATTER
const SCHEDULE = lex.SCHEDULE
const SCHEDULES = lex.SCHEDULES
const SCHEMA = lex.SCHEMA
const SCHEMAS = lex.SCHEMAS
const SCRUB = lex.SCRUB
const SEARCH = lex.SEARCH
const SECOND = lex.SECOND
const SELECT = lex.SELECT
const SEQUENCE = lex.SEQUENCE
const SEQUENCES = lex.SEQUENCES
const SERIALIZABLE = lex.SERIALIZABLE
const SERVER = lex.SERVER
const SESSION = lex.SESSION
const SESSIONS = lex.SESSIONS
const SESSION_USER = lex.SESSION_USER
const SET = lex.SET
const SETTING = lex.SETTING
const SETTINGS = lex.SETTINGS
const SHARE = lex.SHARE
const SHOW = lex.SHOW
const SIMILAR = lex.SIMILAR
const SIMPLE = lex.SIMPLE
const SKIP = lex.SKIP
const SKIP_MISSING_FOREIGN_KEYS = lex.SKIP_MISSING_FOREIGN_KEYS
const SKIP_MISSING_SEQUENCES = lex.SKIP_MISSING_SEQUENCES
const SKIP_MISSING_SEQUENCE_OWNERS = lex.SKIP_MISSING_SEQUENCE_OWNERS
const SKIP_MISSING_VIEWS = lex.SKIP_MISSING_VIEWS
const SMALLINT = lex.SMALLINT
const SMALLSERIAL = lex.SMALLSERIAL
const SNAPSHOT = lex.SNAPSHOT
const SOME = lex.SOME
const SPLIT = lex.SPLIT
const SQL = lex.SQL
const START = lex.START
const STATISTICS = lex.STATISTICS
const STATUS = lex.STATUS
const STDIN = lex.STDIN
const STRICT = lex.STRICT
const STRING = lex.STRING
const STORAGE = lex.STORAGE
const STORE = lex.STORE
const STORED = lex.STORED
const STORING = lex.STORING
const SUBSTRING = lex.SUBSTRING
const SYMMETRIC = lex.SYMMETRIC
const SYNTAX = lex.SYNTAX
const SYSTEM = lex.SYSTEM
const SQRT = lex.SQRT
const SUBSCRIPTION = lex.SUBSCRIPTION
const TABLE = lex.TABLE
const TABLES = lex.TABLES
const TEMP = lex.TEMP
const TEMPLATE = lex.TEMPLATE
const TEMPORARY = lex.TEMPORARY
const TENANT = lex.TENANT
const TESTING_RELOCATE = lex.TESTING_RELOCATE
const EXPERIMENTAL_RELOCATE = lex.EXPERIMENTAL_RELOCATE
const TEXT = lex.TEXT
const THEN = lex.THEN
const TIES = lex.TIES
const TIME = lex.TIME
const TIMETZ = lex.TIMETZ
const TIMESTAMP = lex.TIMESTAMP
const TIMESTAMPTZ = lex.TIMESTAMPTZ
const TO = lex.TO
const THROTTLING = lex.THROTTLING
const TRAILING = lex.TRAILING
const TRACE = lex.TRACE
const TRANSACTION = lex.TRANSACTION
const TREAT = lex.TREAT
const TRIGGER = lex.TRIGGER
const TRIM = lex.TRIM
const TRUE = lex.TRUE
const TRUNCATE = lex.TRUNCATE
const TRUSTED = lex.TRUSTED
const TYPE = lex.TYPE
const TRACING = lex.TRACING
const UNBOUNDED = lex.UNBOUNDED
const UNCOMMITTED = lex.UNCOMMITTED
const UNION = lex.UNION
const UNIQUE = lex.UNIQUE
const UNKNOWN = lex.UNKNOWN
const UNLOGGED = lex.UNLOGGED
const UNSPLIT = lex.UNSPLIT
const UPDATE = lex.UPDATE
const UPSERT = lex.UPSERT
const UNTIL = lex.UNTIL
const USE = lex.USE
const USER = lex.USER
const USERS = lex.USERS
const USING = lex.USING
const UUID = lex.UUID
const VALID = lex.VALID
const VALIDATE = lex.VALIDATE
const VALUE = lex.VALUE
const VALUES = lex.VALUES
const VARBIT = lex.VARBIT
const VARCHAR = lex.VARCHAR
const VARIADIC = lex.VARIADIC
const VIEW = lex.VIEW
const VARYING = lex.VARYING
const VIRTUAL = lex.VIRTUAL
const WHEN = lex.WHEN
const WHERE = lex.WHERE
const WINDOW = lex.WINDOW
const WITH = lex.WITH
const WITHIN = lex.WITHIN
const WITHOUT = lex.WITHOUT
const WORK = lex.WORK
const WRITE = lex.WRITE
const YEAR = lex.YEAR
const ZONE = lex.ZONE
const NOT_LA = lex.NOT_LA
const WITH_LA = lex.WITH_LA
const AS_LA = lex.AS_LA
const GENERATED_ALWAYS = lex.GENERATED_ALWAYS
const CONTAINED_BY = lex.CONTAINED_BY
const POSTFIXOP = lex.POSTFIXOP
const UMINUS = lex.UMINUS
const HELPTOKEN = lex.HELPTOKEN

var sqlToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENT",
	"SCONST",
	"BCONST",
	"BITCONST",
	"ICONST",
	"FCONST",
	"PLACEHOLDER",
	"TYPECAST",
	"TYPEANNOTATE",
	"DOT_DOT",
	"LESS_EQUALS",
	"GREATER_EQUALS",
	"NOT_EQUALS",
	"NOT_REGMATCH",
	"REGIMATCH",
	"NOT_REGIMATCH",
	"ERROR",
	"ABORT",
	"ACTION",
	"ADD",
	"ADMIN",
	"AFTER",
	"AGGREGATE",
	"ALL",
	"ALTER",
	"ALWAYS",
	"ANALYSE",
	"ANALYZE",
	"AND",
	"AND_AND",
	"ANY",
	"ANNOTATE_TYPE",
	"ARRAY",
	"AS",
	"ASC",
	"ASYMMETRIC",
	"AT",
	"ATTRIBUTE",
	"AUTHORIZATION",
	"AUTOMATIC",
	"BACKUP",
	"BEFORE",
	"BEGIN",
	"BETWEEN",
	"BIGINT",
	"BIGSERIAL",
	"BINARY",
	"BIT",
	"BUCKET_COUNT",
	"BOOLEAN",
	"BOTH",
	"BUNDLE",
	"BY",
	"CACHE",
	"CANCEL",
	"CASCADE",
	"CASE",
	"CAST",
	"CBRT",
	"CHANGEFEED",
	"CHAR",
	"CHARACTER",
	"CHARACTERISTICS",
	"CHECK",
	"CLOSE",
	"CLUSTER",
	"COALESCE",
	"COLLATE",
	"COLLATION",
	"COLUMN",
	"COLUMNS",
	"COMMENT",
	"COMMENTS",
	"COMMIT",
	"COMMITTED",
	"COMPACT",
	"COMPLETE",
	"CONCAT",
	"CONCURRENTLY",
	"CONFIGURATION",
	"CONFIGURATIONS",
	"CONFIGURE",
	"CONFLICT",
	"CONSTRAINT",
	"CONSTRAINTS",
	"CONTAINS",
	"CONVERSION",
	"COPY",
	"COVERING",
	"CREATE",
	"CREATEROLE",
	"CROSS",
	"CUBE",
	"CURRENT",
	"CURRENT_CATALOG",
	"CURRENT_DATE",
	"CURRENT_SCHEMA",
	"CURRENT_ROLE",
	"CURRENT_TIME",
	"CURRENT_TIMESTAMP",
	"CURRENT_USER",
	"CYCLE",
	"DATA",
	"DATABASE",
	"DATABASES",
	"DATE",
	"DAY",
	"DEC",
	"DECIMAL",
	"DEFAULT",
	"DEFAULTS",
	"DEALLOCATE",
	"DECLARE",
	"DEFERRABLE",
	"DEFERRED",
	"DELETE",
	"DESC",
	"DESTINATION",
	"DETACHED",
	"DISCARD",
	"DISTINCT",
	"DO",
	"DOMAIN",
	"DOUBLE",
	"DROP",
	"ELSE",
	"ENCODING",
	"ENCRYPTION_PASSPHRASE",
	"END",
	"ENUM",
	"ENUMS",
	"ESCAPE",
	"EXCEPT",
	"EXCLUDE",
	"EXCLUDING",
	"EXISTS",
	"EXECUTE",
	"EXECUTION",
	"EXPERIMENTAL",
	"EXPERIMENTAL_FINGERPRINTS",
	"EXPERIMENTAL_REPLICA",
	"EXPERIMENTAL_AUDIT",
	"EXPIRATION",
	"EXPLAIN",
	"EXPORT",
	"EXTENSION",
	"EXTRACT",
	"EXTRACT_DURATION",
	"FALSE",
	"FAMILY",
	"FETCH",
	"FETCHVAL",
	"FETCHTEXT",
	"FETCHVAL_PATH",
	"FETCHTEXT_PATH",
	"FILES",
	"FILTER",
	"FIRST",
	"FLOAT",
	"FLOAT4",
	"FLOAT8",
	"FLOORDIV",
	"FOLLOWING",
	"FOR",
	"FORCE_INDEX",
	"FOREIGN",
	"FROM",
	"FULL",
	"FUNCTION",
	"GENERATED",
	"GEOGRAPHY",
	"GEOMETRY",
	"GEOMETRYCOLLECTION",
	"GLOBAL",
	"GRANT",
	"GRANTS",
	"GREATEST",
	"GROUP",
	"GROUPING",
	"GROUPS",
	"HAVING",
	"HASH",
	"HIGH",
	"HISTOGRAM",
	"HOUR",
	"IDENTITY",
	"IF",
	"IFERROR",
	"IFNULL",
	"IGNORE_FOREIGN_KEYS",
	"ILIKE",
	"IMMEDIATE",
	"IMPORT",
	"IN",
	"INCLUDE",
	"INCLUDING",
	"INCREMENT",
	"INCREMENTAL",
	"INET",
	"INET_CONTAINED_BY_OR_EQUALS",
	"INET_CONTAINS_OR_EQUALS",
	"INDEX",
	"INDEXES",
	"INJECT",
	"INTERLEAVE",
	"INITIALLY",
	"INNER",
	"INSERT",
	"INT",
	"INTEGER",
	"INTERSECT",
	"INTERVAL",
	"INTO",
	"INTO_DB",
	"INVERTED",
	"IS",
	"ISERROR",
	"ISNULL",
	"ISOLATION",
	"JOB",
	"JOBS",
	"JOIN",
	"JSON",
	"JSONB",
	"JSON_SOME_EXISTS",
	"JSON_ALL_EXISTS",
	"KEY",
	"KEYS",
	"KMS",
	"KV",
	"LANGUAGE",
	"LAST",
	"LATERAL",
	"LATEST",
	"LC_CTYPE",
	"LC_COLLATE",
	"LEADING",
	"LEASE",
	"LEAST",
	"LEFT",
	"LESS",
	"LEVEL",
	"LIKE",
	"LIMIT",
	"LINESTRING",
	"LIST",
	"LOCAL",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"LOCKED",
	"LOGIN",
	"LOOKUP",
	"LOW",
	"LSHIFT",
	"MATCH",
	"MATERIALIZED",
	"MERGE",
	"MINVALUE",
	"MAXVALUE",
	"MINUTE",
	"MONTH",
	"MULTILINESTRING",
	"MULTIPOINT",
	"MULTIPOLYGON",
	"NAN",
	"NAME",
	"NAMES",
	"NATURAL",
	"NEVER",
	"NEXT",
	"NO",
	"NOCREATEROLE",
	"NOLOGIN",
	"NO_INDEX_JOIN",
	"NONE",
	"NORMAL",
	"NOT",
	"NOTHING",
	"NOTNULL",
	"NOWAIT",
	"NULL",
	"NULLIF",
	"NULLS",
	"NUMERIC",
	"OF",
	"OFF",
	"OFFSET",
	"OID",
	"OIDS",
	"OIDVECTOR",
	"ON",
	"ONLY",
	"OPT",
	"OPTION",
	"OPTIONS",
	"OR",
	"ORDER",
	"ORDINALITY",
	"OTHERS",
	"OUT",
	"OUTER",
	"OVER",
	"OVERLAPS",
	"OVERLAY",
	"OWNED",
	"OWNER",
	"OPERATOR",
	"PARENT",
	"PARTIAL",
	"PARTITION",
	"PARTITIONS",
	"PASSWORD",
	"PAUSE",
	"PAUSED",
	"PHYSICAL",
	"PLACING",
	"PLAN",
	"PLANS",
	"POINT",
	"POLYGON",
	"POSITION",
	"PRECEDING",
	"PRECISION",
	"PREPARE",
	"PRESERVE",
	"PRIMARY",
	"PRIORITY",
	"PROCEDURAL",
	"PUBLIC",
	"PUBLICATION",
	"QUERIES",
	"QUERY",
	"RANGE",
	"RANGES",
	"READ",
	"REAL",
	"RECURSIVE",
	"RECURRING",
	"REF",
	"REFERENCES",
	"REGCLASS",
	"REGPROC",
	"REGPROCEDURE",
	"REGNAMESPACE",
	"REGTYPE",
	"REINDEX",
	"REMOVE_PATH",
	"RENAME",
	"REPEATABLE",
	"REPLACE",
	"RELEASE",
	"RESET",
	"RESTORE",
	"RESTRICT",
	"RESUME",
	"RETURNING",
	"RETRY",
	"REVISION_HISTORY",
	"REVOKE",
	"RIGHT",
	"ROLE",
	"ROLES",
	"ROLLBACK",
	"ROLLUP",
	"ROW",
	"ROWS",
	"RSHIFT",
	"RULE",
	"RUNNING",
	"SAVEPOINT",
	"SCATTER",
	"SCHEDULE",
	"SCHEDULES",
	"SCHEMA",
	"SCHEMAS",
	"SCRUB",
	"SEARCH",
	"SECOND",
	"SELECT",
	"SEQUENCE",
	"SEQUENCES",
	"SERIALIZABLE",
	"SERVER",
	"SESSION",
	"SESSIONS",
	"SESSION_USER",
	"SET",
	"SETTING",
	"SETTINGS",
	"SHARE",
	"SHOW",
	"SIMILAR",
	"SIMPLE",
	"SKIP",
	"SKIP_MISSING_FOREIGN_KEYS",
	"SKIP_MISSING_SEQUENCES",
	"SKIP_MISSING_SEQUENCE_OWNERS",
	"SKIP_MISSING_VIEWS",
	"SMALLINT",
	"SMALLSERIAL",
	"SNAPSHOT",
	"SOME",
	"SPLIT",
	"SQL",
	"START",
	"STATISTICS",
	"STATUS",
	"STDIN",
	"STRICT",
	"STRING",
	"STORAGE",
	"STORE",
	"STORED",
	"STORING",
	"SUBSTRING",
	"SYMMETRIC",
	"SYNTAX",
	"SYSTEM",
	"SQRT",
	"SUBSCRIPTION",
	"TABLE",
	"TABLES",
	"TEMP",
	"TEMPLATE",
	"TEMPORARY",
	"TENANT",
	"TESTING_RELOCATE",
	"EXPERIMENTAL_RELOCATE",
	"TEXT",
	"THEN",
	"TIES",
	"TIME",
	"TIMETZ",
	"TIMESTAMP",
	"TIMESTAMPTZ",
	"TO",
	"THROTTLING",
	"TRAILING",
	"TRACE",
	"TRANSACTION",
	"TREAT",
	"TRIGGER",
	"TRIM",
	"TRUE",
	"TRUNCATE",
	"TRUSTED",
	"TYPE",
	"TRACING",
	"UNBOUNDED",
	"UNCOMMITTED",
	"UNION",
	"UNIQUE",
	"UNKNOWN",
	"UNLOGGED",
	"UNSPLIT",
	"UPDATE",
	"UPSERT",
	"UNTIL",
	"USE",
	"USER",
	"USERS",
	"USING",
	"UUID",
	"VALID",
	"VALIDATE",
	"VALUE",
	"VALUES",
	"VARBIT",
	"VARCHAR",
	"VARIADIC",
	"VIEW",
	"VARYING",
	"VIRTUAL",
	"WHEN",
	"WHERE",
	"WINDOW",
	"WITH",
	"WITHIN",
	"WITHOUT",
	"WORK",
	"WRITE",
	"YEAR",
	"ZONE",
	"NOT_LA",
	"WITH_LA",
	"AS_LA",
	"GENERATED_ALWAYS",
	"'<'",
	"'>'",
	"'='",
	"'~'",
	"CONTAINED_BY",
	"'?'",
	"POSTFIXOP",
	"'|'",
	"'#'",
	"'&'",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"'%'",
	"'^'",
	"UMINUS",
	"'['",
	"']'",
	"'('",
	"')'",
	"'.'",
	"HELPTOKEN",
	"'@'",
	"','",
	"'{'",
	"'}'",
	"':'",
}
var sqlStatenames = [...]string{}

const sqlEofCode = 1
const sqlErrCode = 2
const sqlInitialStackSize = 16

//line sql-gen.y:11455

//line yacctab:1
var sqlExca = [...]int{
	-1, 0,
	1, 29,
	-2, 1290,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 67,
	216, 190,
	439, 190,
	-2, 0,
	-1, 77,
	205, 1098,
	218, 1098,
	234, 329,
	331, 329,
	340, 896,
	371, 329,
	383, 896,
	424, 896,
	449, 329,
	474, 896,
	-2, 0,
	-1, 83,
	234, 333,
	-2, 0,
	-1, 84,
	119, 1290,
	211, 1290,
	459, 1290,
	460, 1290,
	-2, 0,
	-1, 100,
	136, 1261,
	154, 1261,
	167, 1261,
	214, 1261,
	247, 1261,
	290, 1261,
	300, 1261,
	454, 1261,
	-2, 1232,
	-1, 134,
	144, 782,
	233, 782,
	334, 751,
	388, 751,
	442, 782,
	-2, 0,
	-1, 136,
	4, 1292,
	21, 1292,
	22, 1292,
	23, 1292,
	24, 1292,
	25, 1292,
	26, 1292,
	28, 1292,
	29, 1292,
	35, 1292,
	40, 1292,
	41, 1292,
	42, 1292,
	43, 1292,
	44, 1292,
	45, 1292,
	46, 1292,
	47, 1292,
	48, 1292,
	50, 1292,
	51, 1292,
	52, 1292,
	53, 1292,
	55, 1292,
	56, 1292,
	57, 1292,
	58, 1292,
	59, 1292,
	63, 1292,
	64, 1292,
	65, 1292,
	66, 1292,
	68, 1292,
	69, 1292,
	70, 1292,
	74, 1292,
	75, 1292,
	76, 1292,
	77, 1292,
	78, 1292,
	79, 1292,
	80, 1292,
	83, 1292,
	84, 1292,
	85, 1292,
	86, 1292,
	88, 1292,
	90, 1292,
	91, 1292,
	92, 1292,
	94, 1292,
	96, 1292,
	97, 1292,
	105, 1292,
	106, 1292,
	107, 1292,
	108, 1292,
	110, 1292,
	111, 1292,
	112, 1292,
	114, 1292,
	115, 1292,
	116, 1292,
	118, 1292,
	119, 1292,
	121, 1292,
	122, 1292,
	123, 1292,
	126, 1292,
	127, 1292,
	128, 1292,
	130, 1292,
	131, 1292,
	133, 1292,
	134, 1292,
	135, 1292,
	137, 1292,
	138, 1292,
	139, 1292,
	140, 1292,
	141, 1292,
	142, 1292,
	143, 1292,
	144, 1292,
	145, 1292,
	146, 1292,
	147, 1292,
	148, 1292,
	149, 1292,
	150, 1292,
	151, 1292,
	153, 1292,
	159, 1292,
	160, 1292,
	161, 1292,
	162, 1292,
	166, 1292,
	168, 1292,
	172, 1292,
	173, 1292,
	174, 1292,
	175, 1292,
	176, 1292,
	177, 1292,
	179, 1292,
	180, 1292,
	182, 1292,
	183, 1292,
	185, 1292,
	186, 1292,
	187, 1292,
	188, 1292,
	189, 1292,
	190, 1292,
	191, 1292,
	192, 1292,
	193, 1292,
	195, 1292,
	196, 1292,
	198, 1292,
	199, 1292,
	200, 1292,
	201, 1292,
	205, 1292,
	206, 1292,
	207, 1292,
	208, 1292,
	211, 1292,
	212, 1292,
	213, 1292,
	215, 1292,
	217, 1292,
	218, 1292,
	220, 1292,
	222, 1292,
	223, 1292,
	224, 1292,
	226, 1292,
	230, 1292,
	231, 1292,
	232, 1292,
	233, 1292,
	234, 1292,
	235, 1292,
	237, 1292,
	238, 1292,
	239, 1292,
	241, 1292,
	242, 1292,
	244, 1292,
	245, 1292,
	248, 1292,
	249, 1292,
	250, 1292,
	253, 1292,
	254, 1292,
	255, 1292,
	256, 1292,
	258, 1292,
	259, 1292,
	260, 1292,
	261, 1292,
	262, 1292,
	263, 1292,
	264, 1292,
	265, 1292,
	266, 1292,
	267, 1292,
	268, 1292,
	270, 1292,
	272, 1292,
	273, 1292,
	274, 1292,
	275, 1292,
	276, 1292,
	277, 1292,
	279, 1292,
	281, 1292,
	283, 1292,
	285, 1292,
	286, 1292,
	287, 1292,
	288, 1292,
	289, 1292,
	292, 1292,
	295, 1292,
	296, 1292,
	297, 1292,
	298, 1292,
	301, 1292,
	302, 1292,
	303, 1292,
	305, 1292,
	307, 1292,
	308, 1292,
	309, 1292,
	310, 1292,
	311, 1292,
	312, 1292,
	313, 1292,
	314, 1292,
	315, 1292,
	316, 1292,
	317, 1292,
	318, 1292,
	320, 1292,
	321, 1292,
	322, 1292,
	323, 1292,
	324, 1292,
	325, 1292,
	326, 1292,
	327, 1292,
	328, 1292,
	330, 1292,
	332, 1292,
	333, 1292,
	334, 1292,
	335, 1292,
	336, 1292,
	337, 1292,
	338, 1292,
	339, 1292,
	340, 1292,
	341, 1292,
	342, 1292,
	349, 1292,
	351, 1292,
	352, 1292,
	353, 1292,
	354, 1292,
	355, 1292,
	356, 1292,
	357, 1292,
	358, 1292,
	360, 1292,
	361, 1292,
	362, 1292,
	364, 1292,
	365, 1292,
	366, 1292,
	367, 1292,
	368, 1292,
	369, 1292,
	371, 1292,
	372, 1292,
	373, 1292,
	374, 1292,
	375, 1292,
	376, 1292,
	377, 1292,
	378, 1292,
	379, 1292,
	380, 1292,
	381, 1292,
	383, 1292,
	384, 1292,
	385, 1292,
	386, 1292,
	387, 1292,
	388, 1292,
	390, 1292,
	391, 1292,
	392, 1292,
	393, 1292,
	394, 1292,
	396, 1292,
	397, 1292,
	398, 1292,
	399, 1292,
	400, 1292,
	401, 1292,
	402, 1292,
	404, 1292,
	406, 1292,
	407, 1292,
	408, 1292,
	409, 1292,
	410, 1292,
	411, 1292,
	412, 1292,
	413, 1292,
	414, 1292,
	415, 1292,
	416, 1292,
	417, 1292,
	418, 1292,
	420, 1292,
	421, 1292,
	423, 1292,
	425, 1292,
	426, 1292,
	427, 1292,
	428, 1292,
	429, 1292,
	430, 1292,
	431, 1292,
	432, 1292,
	434, 1292,
	435, 1292,
	436, 1292,
	437, 1292,
	438, 1292,
	440, 1292,
	442, 1292,
	443, 1292,
	444, 1292,
	445, 1292,
	446, 1292,
	448, 1292,
	449, 1292,
	450, 1292,
	452, 1292,
	453, 1292,
	456, 1292,
	457, 1292,
	458, 1292,
	459, 1292,
	460, 1292,
	461, 1292,
	462, 1292,
	464, 1292,
	467, 1292,
	468, 1292,
	469, 1292,
	470, 1292,
	471, 1292,
	472, 1292,
	474, 1292,
	475, 1292,
	476, 1292,
	481, 1292,
	482, 1292,
	483, 1292,
	484, 1292,
	485, 1292,
	486, 1292,
	-2, 0,
	-1, 137,
	1, 1166,
	222, 1166,
	330, 1166,
	338, 1166,
	489, 1166,
	513, 1166,
	-2, 0,
	-1, 139,
	1, 1166,
	513, 1166,
	-2, 0,
	-1, 140,
	1, 1166,
	513, 1166,
	-2, 0,
	-1, 141,
	1, 1166,
	439, 1166,
	513, 1166,
	-2, 0,
	-1, 170,
	136, 1260,
	154, 1260,
	167, 1260,
	214, 1260,
	247, 1260,
	290, 1260,
	300, 1260,
	454, 1260,
	-2, 1235,
	-1, 206,
	4, 1299,
	5, 1299,
	6, 1299,
	7, 1299,
	8, 1299,
	9, 1299,
	10, 1299,
	21, 1299,
	22, 1299,
	23, 1299,
	24, 1299,
	25, 1299,
	26, 1299,
	28, 1299,
	29, 1299,
	35, 1299,
	36, 1299,
	40, 1299,
	41, 1299,
	42, 1299,
	43, 1299,
	44, 1299,
	45, 1299,
	46, 1299,
	47, 1299,
	48, 1299,
	50, 1299,
	51, 1299,
	52, 1299,
	53, 1299,
	55, 1299,
	56, 1299,
	57, 1299,
	58, 1299,
	59, 1299,
	60, 1299,
	61, 1299,
	62, 1299,
	63, 1299,
	64, 1299,
	65, 1299,
	66, 1299,
	68, 1299,
	69, 1299,
	70, 1299,
	72, 1299,
	74, 1299,
	75, 1299,
	76, 1299,
	77, 1299,
	78, 1299,
	79, 1299,
	80, 1299,
	83, 1299,
	84, 1299,
	85, 1299,
	86, 1299,
	88, 1299,
	90, 1299,
	91, 1299,
	92, 1299,
	94, 1299,
	95, 1299,
	96, 1299,
	97, 1299,
	98, 1299,
	99, 1299,
	100, 1299,
	101, 1299,
	102, 1299,
	103, 1299,
	104, 1299,
	105, 1299,
	106, 1299,
	107, 1299,
	108, 1299,
	109, 1299,
	110, 1299,
	111, 1299,
	112, 1299,
	113, 1299,
	114, 1299,
	115, 1299,
	116, 1299,
	118, 1299,
	119, 1299,
	121, 1299,
	122, 1299,
	123, 1299,
	126, 1299,
	127, 1299,
	128, 1299,
	130, 1299,
	131, 1299,
	133, 1299,
	134, 1299,
	135, 1299,
	137, 1299,
	138, 1299,
	139, 1299,
	140, 1299,
	141, 1299,
	142, 1299,
	143, 1299,
	144, 1299,
	145, 1299,
	146, 1299,
	147, 1299,
	148, 1299,
	149, 1299,
	150, 1299,
	151, 1299,
	152, 1299,
	153, 1299,
	159, 1299,
	160, 1299,
	161, 1299,
	162, 1299,
	166, 1299,
	168, 1299,
	171, 1299,
	172, 1299,
	173, 1299,
	174, 1299,
	175, 1299,
	176, 1299,
	177, 1299,
	179, 1299,
	180, 1299,
	182, 1299,
	183, 1299,
	185, 1299,
	186, 1299,
	187, 1299,
	188, 1299,
	189, 1299,
	190, 1299,
	191, 1299,
	192, 1299,
	193, 1299,
	194, 1299,
	195, 1299,
	196, 1299,
	198, 1299,
	199, 1299,
	200, 1299,
	201, 1299,
	205, 1299,
	206, 1299,
	207, 1299,
	208, 1299,
	210, 1299,
	211, 1299,
	212, 1299,
	213, 1299,
	215, 1299,
	217, 1299,
	218, 1299,
	219, 1299,
	220, 1299,
	221, 1299,
	222, 1299,
	223, 1299,
	224, 1299,
	225, 1299,
	226, 1299,
	230, 1299,
	231, 1299,
	232, 1299,
	233, 1299,
	234, 1299,
	235, 1299,
	237, 1299,
	238, 1299,
	239, 1299,
	241, 1299,
	242, 1299,
	243, 1299,
	244, 1299,
	245, 1299,
	246, 1299,
	248, 1299,
	249, 1299,
	250, 1299,
	251, 1299,
	252, 1299,
	253, 1299,
	254, 1299,
	255, 1299,
	256, 1299,
	258, 1299,
	259, 1299,
	260, 1299,
	261, 1299,
	262, 1299,
	263, 1299,
	264, 1299,
	265, 1299,
	266, 1299,
	267, 1299,
	268, 1299,
	270, 1299,
	271, 1299,
	272, 1299,
	273, 1299,
	274, 1299,
	275, 1299,
	276, 1299,
	277, 1299,
	278, 1299,
	279, 1299,
	280, 1299,
	281, 1299,
	282, 1299,
	283, 1299,
	284, 1299,
	285, 1299,
	286, 1299,
	287, 1299,
	288, 1299,
	289, 1299,
	292, 1299,
	296, 1299,
	297, 1299,
	298, 1299,
	301, 1299,
	302, 1299,
	303, 1299,
	304, 1299,
	305, 1299,
	306, 1299,
	307, 1299,
	308, 1299,
	309, 1299,
	310, 1299,
	311, 1299,
	312, 1299,
	313, 1299,
	314, 1299,
	315, 1299,
	316, 1299,
	317, 1299,
	318, 1299,
	320, 1299,
	321, 1299,
	322, 1299,
	323, 1299,
	324, 1299,
	325, 1299,
	326, 1299,
	327, 1299,
	328, 1299,
	330, 1299,
	332, 1299,
	333, 1299,
	334, 1299,
	335, 1299,
	336, 1299,
	337, 1299,
	338, 1299,
	339, 1299,
	340, 1299,
	341, 1299,
	342, 1299,
	349, 1299,
	351, 1299,
	352, 1299,
	353, 1299,
	354, 1299,
	355, 1299,
	356, 1299,
	357, 1299,
	358, 1299,
	360, 1299,
	361, 1299,
	362, 1299,
	363, 1299,
	364, 1299,
	365, 1299,
	366, 1299,
	367, 1299,
	368, 1299,
	369, 1299,
	371, 1299,
	372, 1299,
	373, 1299,
	374, 1299,
	375, 1299,
	376, 1299,
	377, 1299,
	378, 1299,
	379, 1299,
	380, 1299,
	381, 1299,
	383, 1299,
	384, 1299,
	385, 1299,
	386, 1299,
	387, 1299,
	388, 1299,
	389, 1299,
	390, 1299,
	391, 1299,
	392, 1299,
	393, 1299,
	394, 1299,
	395, 1299,
	396, 1299,
	397, 1299,
	398, 1299,
	399, 1299,
	400, 1299,
	401, 1299,
	402, 1299,
	404, 1299,
	406, 1299,
	407, 1299,
	408, 1299,
	409, 1299,
	410, 1299,
	411, 1299,
	412, 1299,
	413, 1299,
	414, 1299,
	415, 1299,
	416, 1299,
	417, 1299,
	418, 1299,
	420, 1299,
	421, 1299,
	422, 1299,
	423, 1299,
	425, 1299,
	426, 1299,
	427, 1299,
	428, 1299,
	429, 1299,
	430, 1299,
	431, 1299,
	432, 1299,
	434, 1299,
	435, 1299,
	436, 1299,
	437, 1299,
	438, 1299,
	440, 1299,
	442, 1299,
	443, 1299,
	444, 1299,
	445, 1299,
	446, 1299,
	447, 1299,
	448, 1299,
	449, 1299,
	450, 1299,
	452, 1299,
	453, 1299,
	455, 1299,
	456, 1299,
	457, 1299,
	458, 1299,
	459, 1299,
	460, 1299,
	461, 1299,
	462, 1299,
	463, 1299,
	464, 1299,
	467, 1299,
	468, 1299,
	469, 1299,
	470, 1299,
	471, 1299,
	472, 1299,
	474, 1299,
	475, 1299,
	476, 1299,
	481, 1299,
	482, 1299,
	483, 1299,
	484, 1299,
	485, 1299,
	486, 1299,
	487, 1299,
	494, 1299,
	501, 1299,
	502, 1299,
	503, 1299,
	510, 1299,
	514, 1299,
	-2, 0,
	-1, 615,
	170, 2006,
	439, 2006,
	493, 2006,
	512, 2006,
	-2, 0,
	-1, 616,
	170, 2093,
	439, 2093,
	493, 2093,
	512, 2093,
	-2, 0,
	-1, 617,
	170, 1994,
	439, 1994,
	493, 1994,
	512, 1994,
	-2, 0,
	-1, 619,
	170, 2191,
	439, 2191,
	493, 2191,
	512, 2191,
	-2, 0,
	-1, 621,
	170, 2225,
	439, 2225,
	493, 2225,
	512, 2225,
	-2, 0,
	-1, 628,
	170, 2108,
	439, 2108,
	493, 2108,
	512, 2108,
	-2, 601,
	-1, 658,
	512, 1946,
	515, 1946,
	-2, 836,
	-1, 659,
	512, 1948,
	515, 1948,
	-2, 837,
	-1, 660,
	512, 1947,
	515, 1947,
	-2, 838,
	-1, 661,
	515, 1881,
	-2, 839,
	-1, 683,
	167, 204,
	-2, 0,
	-1, 706,
	474, 1075,
	-2, 897,
	-1, 744,
	4, 1096,
	21, 1096,
	22, 1096,
	23, 1096,
	24, 1096,
	25, 1096,
	26, 1096,
	28, 1096,
	29, 1096,
	35, 1096,
	40, 1096,
	41, 1096,
	42, 1096,
	43, 1096,
	44, 1096,
	45, 1096,
	46, 1096,
	47, 1096,
	48, 1096,
	50, 1096,
	51, 1096,
	52, 1096,
	53, 1096,
	55, 1096,
	56, 1096,
	57, 1096,
	58, 1096,
	59, 1096,
	63, 1096,
	64, 1096,
	65, 1096,
	66, 1096,
	68, 1096,
	69, 1096,
	70, 1096,
	74, 1096,
	75, 1096,
	76, 1096,
	77, 1096,
	78, 1096,
	79, 1096,
	80, 1096,
	83, 1096,
	84, 1096,
	85, 1096,
	86, 1096,
	88, 1096,
	90, 1096,
	91, 1096,
	92, 1096,
	94, 1096,
	96, 1096,
	97, 1096,
	105, 1096,
	106, 1096,
	107, 1096,
	108, 1096,
	110, 1096,
	111, 1096,
	112, 1096,
	114, 1096,
	115, 1096,
	116, 1096,
	118, 1096,
	119, 1096,
	121, 1096,
	122, 1096,
	123, 1096,
	126, 1096,
	127, 1096,
	128, 1096,
	130, 1096,
	131, 1096,
	133, 1096,
	134, 1096,
	135, 1096,
	137, 1096,
	138, 1096,
	139, 1096,
	140, 1096,
	141, 1096,
	142, 1096,
	143, 1096,
	144, 1096,
	145, 1096,
	146, 1096,
	147, 1096,
	148, 1096,
	149, 1096,
	150, 1096,
	151, 1096,
	153, 1096,
	159, 1096,
	160, 1096,
	161, 1096,
	162, 1096,
	166, 1096,
	168, 1096,
	172, 1096,
	173, 1096,
	174, 1096,
	175, 1096,
	176, 1096,
	177, 1096,
	179, 1096,
	180, 1096,
	182, 1096,
	183, 1096,
	185, 1096,
	186, 1096,
	187, 1096,
	188, 1096,
	189, 1096,
	190, 1096,
	191, 1096,
	192, 1096,
	193, 1096,
	195, 1096,
	196, 1096,
	198, 1096,
	199, 1096,
	200, 1096,
	201, 1096,
	205, 1096,
	206, 1096,
	207, 1096,
	208, 1096,
	211, 1096,
	212, 1096,
	213, 1096,
	215, 1096,
	217, 1096,
	218, 1096,
	220, 1096,
	222, 1096,
	223, 1096,
	224, 1096,
	226, 1096,
	230, 1096,
	231, 1096,
	232, 1096,
	233, 1096,
	234, 1096,
	235, 1096,
	237, 1096,
	238, 1096,
	239, 1096,
	241, 1096,
	242, 1096,
	244, 1096,
	245, 1096,
	248, 1096,
	249, 1096,
	250, 1096,
	253, 1096,
	254, 1096,
	255, 1096,
	256, 1096,
	258, 1096,
	259, 1096,
	260, 1096,
	261, 1096,
	262, 1096,
	263, 1096,
	264, 1096,
	265, 1096,
	266, 1096,
	267, 1096,
	268, 1096,
	270, 1096,
	272, 1096,
	273, 1096,
	274, 1096,
	275, 1096,
	276, 1096,
	277, 1096,
	279, 1096,
	281, 1096,
	283, 1096,
	285, 1096,
	286, 1096,
	287, 1096,
	288, 1096,
	289, 1096,
	292, 1096,
	296, 1096,
	297, 1096,
	298, 1096,
	301, 1096,
	302, 1096,
	303, 1096,
	305, 1096,
	307, 1096,
	308, 1096,
	309, 1096,
	310, 1096,
	311, 1096,
	312, 1096,
	313, 1096,
	314, 1096,
	315, 1096,
	316, 1096,
	317, 1096,
	318, 1096,
	320, 1096,
	321, 1096,
	322, 1096,
	323, 1096,
	324, 1096,
	325, 1096,
	326, 1096,
	327, 1096,
	328, 1096,
	330, 1096,
	332, 1096,
	333, 1096,
	334, 1096,
	335, 1096,
	336, 1096,
	337, 1096,
	338, 1096,
	339, 1096,
	340, 1096,
	341, 1096,
	342, 1096,
	349, 1096,
	351, 1096,
	352, 1096,
	353, 1096,
	354, 1096,
	355, 1096,
	356, 1096,
	357, 1096,
	358, 1096,
	360, 1096,
	361, 1096,
	362, 1096,
	364, 1096,
	365, 1096,
	366, 1096,
	367, 1096,
	368, 1096,
	369, 1096,
	371, 1096,
	372, 1096,
	373, 1096,
	374, 1096,
	375, 1096,
	376, 1096,
	377, 1096,
	378, 1096,
	379, 1096,
	380, 1096,
	381, 1096,
	383, 1096,
	384, 1096,
	385, 1096,
	386, 1096,
	387, 1096,
	388, 1096,
	390, 1096,
	391, 1096,
	392, 1096,
	393, 1096,
	394, 1096,
	396, 1096,
	397, 1096,
	398, 1096,
	399, 1096,
	400, 1096,
	401, 1096,
	402, 1096,
	404, 1096,
	406, 1096,
	407, 1096,
	408, 1096,
	409, 1096,
	410, 1096,
	411, 1096,
	412, 1096,
	413, 1096,
	414, 1096,
	415, 1096,
	416, 1096,
	417, 1096,
	418, 1096,
	420, 1096,
	421, 1096,
	423, 1096,
	425, 1096,
	426, 1096,
	427, 1096,
	428, 1096,
	429, 1096,
	430, 1096,
	431, 1096,
	432, 1096,
	434, 1096,
	435, 1096,
	436, 1096,
	437, 1096,
	438, 1096,
	440, 1096,
	442, 1096,
	443, 1096,
	444, 1096,
	445, 1096,
	446, 1096,
	448, 1096,
	449, 1096,
	450, 1096,
	452, 1096,
	453, 1096,
	456, 1096,
	457, 1096,
	458, 1096,
	459, 1096,
	460, 1096,
	461, 1096,
	462, 1096,
	464, 1096,
	467, 1096,
	468, 1096,
	469, 1096,
	470, 1096,
	471, 1096,
	472, 1096,
	474, 1096,
	475, 1096,
	476, 1096,
	481, 1096,
	482, 1096,
	483, 1096,
	484, 1096,
	485, 1096,
	486, 1096,
	-2, 0,
	-1, 822,
	334, 752,
	388, 752,
	-2, 0,
	-1, 823,
	334, 751,
	388, 751,
	-2, 697,
	-1, 827,
	1, 792,
	509, 792,
	511, 792,
	513, 792,
	-2, 0,
	-1, 828,
	1, 730,
	509, 730,
	511, 730,
	513, 730,
	-2, 0,
	-1, 829,
	1, 835,
	167, 835,
	509, 835,
	511, 835,
	513, 835,
	-2, 0,
	-1, 837,
	1, 755,
	509, 755,
	511, 755,
	513, 755,
	-2, 0,
	-1, 843,
	1, 792,
	509, 792,
	511, 792,
	513, 792,
	-2, 0,
	-1, 844,
	1, 794,
	509, 794,
	511, 794,
	513, 794,
	-2, 0,
	-1, 845,
	1, 797,
	509, 797,
	511, 797,
	513, 797,
	-2, 0,
	-1, 851,
	1, 814,
	509, 814,
	511, 814,
	513, 814,
	-2, 0,
	-1, 852,
	1, 816,
	509, 816,
	511, 816,
	513, 816,
	-2, 0,
	-1, 901,
	154, 1301,
	167, 1301,
	247, 1301,
	290, 1301,
	-2, 1239,
	-1, 916,
	154, 1300,
	167, 1300,
	247, 1300,
	290, 1300,
	-2, 1236,
	-1, 942,
	512, 1945,
	-2, 609,
	-1, 970,
	5, 1937,
	510, 1935,
	-2, 1926,
	-1, 978,
	5, 1958,
	510, 1955,
	-2, 1946,
	-1, 979,
	5, 1959,
	510, 1956,
	-2, 1947,
	-1, 987,
	512, 1943,
	-2, 1925,
	-1, 988,
	510, 2303,
	-2, 1944,
	-1, 1011,
	510, 2302,
	-2, 1960,
	-1, 1012,
	5, 1465,
	-2, 2273,
	-1, 1013,
	5, 1466,
	-2, 2274,
	-1, 1014,
	5, 1467,
	-2, 2288,
	-1, 1015,
	5, 1468,
	-2, 2253,
	-1, 1016,
	5, 1469,
	-2, 2286,
	-1, 1017,
	5, 1477,
	-2, 2265,
	-1, 1018,
	5, 1464,
	-2, 2261,
	-1, 1019,
	5, 1464,
	-2, 2260,
	-1, 1020,
	5, 1464,
	-2, 2279,
	-1, 1021,
	5, 1475,
	-2, 2255,
	-1, 1022,
	5, 1480,
	-2, 2254,
	-1, 1023,
	5, 1482,
	-2, 2298,
	-1, 1026,
	5, 1504,
	-2, 2291,
	-1, 1027,
	5, 1496,
	-2, 2292,
	-1, 1028,
	5, 1504,
	-2, 2293,
	-1, 1029,
	5, 1500,
	-2, 2294,
	-1, 1030,
	5, 1451,
	-2, 2266,
	-1, 1031,
	5, 1452,
	-2, 2267,
	-1, 1058,
	5, 1487,
	-2, 2299,
	-1, 1059,
	5, 1488,
	-2, 2289,
	-1, 1060,
	5, 1489,
	475, 1489,
	-2, 2256,
	-1, 1061,
	5, 1490,
	475, 1490,
	-2, 2257,
	-1, 1098,
	510, 1955,
	-2, 1946,
	-1, 1099,
	510, 1956,
	-2, 1947,
	-1, 1128,
	170, 2225,
	439, 2225,
	493, 2225,
	512, 2225,
	-2, 0,
	-1, 1131,
	1, 587,
	513, 587,
	-2, 1174,
	-1, 1256,
	351, 1921,
	390, 1921,
	503, 1921,
	-2, 1919,
	-1, 1268,
	514, 1921,
	-2, 1922,
	-1, 1275,
	1, 1072,
	509, 1072,
	511, 1072,
	513, 1072,
	-2, 1288,
	-1, 1328,
	340, 896,
	474, 896,
	-2, 328,
	-1, 1350,
	1, 1072,
	509, 1072,
	511, 1072,
	513, 1072,
	-2, 1288,
	-1, 1356,
	4, 1096,
	21, 1096,
	22, 1096,
	23, 1096,
	24, 1096,
	25, 1096,
	26, 1096,
	28, 1096,
	29, 1096,
	35, 1096,
	40, 1096,
	41, 1096,
	42, 1096,
	43, 1096,
	44, 1096,
	45, 1096,
	46, 1096,
	47, 1096,
	48, 1096,
	50, 1096,
	51, 1096,
	52, 1096,
	53, 1096,
	55, 1096,
	56, 1096,
	57, 1096,
	58, 1096,
	59, 1096,
	63, 1096,
	64, 1096,
	65, 1096,
	66, 1096,
	68, 1096,
	69, 1096,
	70, 1096,
	74, 1096,
	75, 1096,
	76, 1096,
	77, 1096,
	78, 1096,
	79, 1096,
	80, 1096,
	83, 1096,
	84, 1096,
	85, 1096,
	86, 1096,
	88, 1096,
	90, 1096,
	91, 1096,
	92, 1096,
	94, 1096,
	96, 1096,
	97, 1096,
	105, 1096,
	106, 1096,
	107, 1096,
	108, 1096,
	110, 1096,
	111, 1096,
	112, 1096,
	114, 1096,
	115, 1096,
	116, 1096,
	118, 1096,
	119, 1096,
	121, 1096,
	122, 1096,
	123, 1096,
	126, 1096,
	127, 1096,
	128, 1096,
	130, 1096,
	131, 1096,
	133, 1096,
	134, 1096,
	135, 1096,
	137, 1096,
	138, 1096,
	139, 1096,
	140, 1096,
	141, 1096,
	142, 1096,
	143, 1096,
	144, 1096,
	145, 1096,
	146, 1096,
	147, 1096,
	148, 1096,
	149, 1096,
	150, 1096,
	151, 1096,
	159, 1096,
	160, 1096,
	161, 1096,
	162, 1096,
	166, 1096,
	168, 1096,
	172, 1096,
	173, 1096,
	174, 1096,
	175, 1096,
	176, 1096,
	177, 1096,
	179, 1096,
	180, 1096,
	182, 1096,
	183, 1096,
	185, 1096,
	186, 1096,
	187, 1096,
	188, 1096,
	189, 1096,
	190, 1096,
	191, 1096,
	192, 1096,
	193, 1096,
	195, 1096,
	196, 1096,
	198, 1096,
	199, 1096,
	200, 1096,
	201, 1096,
	206, 1096,
	207, 1096,
	208, 1096,
	211, 1096,
	212, 1096,
	213, 1096,
	215, 1096,
	217, 1096,
	218, 1096,
	220, 1096,
	222, 1096,
	223, 1096,
	224, 1096,
	226, 1096,
	230, 1096,
	231, 1096,
	232, 1096,
	233, 1096,
	234, 1096,
	235, 1096,
	237, 1096,
	238, 1096,
	239, 1096,
	241, 1096,
	242, 1096,
	244, 1096,
	245, 1096,
	248, 1096,
	249, 1096,
	250, 1096,
	253, 1096,
	254, 1096,
	255, 1096,
	256, 1096,
	258, 1096,
	259, 1096,
	260, 1096,
	261, 1096,
	262, 1096,
	263, 1096,
	264, 1096,
	265, 1096,
	266, 1096,
	267, 1096,
	268, 1096,
	270, 1096,
	272, 1096,
	273, 1096,
	274, 1096,
	275, 1096,
	276, 1096,
	277, 1096,
	279, 1096,
	283, 1096,
	285, 1096,
	286, 1096,
	287, 1096,
	288, 1096,
	289, 1096,
	292, 1096,
	294, 1096,
	296, 1096,
	297, 1096,
	298, 1096,
	301, 1096,
	302, 1096,
	303, 1096,
	305, 1096,
	307, 1096,
	308, 1096,
	309, 1096,
	310, 1096,
	311, 1096,
	312, 1096,
	313, 1096,
	314, 1096,
	315, 1096,
	316, 1096,
	317, 1096,
	318, 1096,
	320, 1096,
	321, 1096,
	322, 1096,
	323, 1096,
	324, 1096,
	325, 1096,
	326, 1096,
	327, 1096,
	328, 1096,
	330, 1096,
	332, 1096,
	333, 1096,
	334, 1096,
	335, 1096,
	336, 1096,
	337, 1096,
	338, 1096,
	339, 1096,
	340, 1096,
	341, 1096,
	342, 1096,
	349, 1096,
	351, 1096,
	352, 1096,
	353, 1096,
	354, 1096,
	355, 1096,
	356, 1096,
	357, 1096,
	358, 1096,
	360, 1096,
	361, 1096,
	362, 1096,
	364, 1096,
	365, 1096,
	366, 1096,
	367, 1096,
	368, 1096,
	369, 1096,
	371, 1096,
	372, 1096,
	373, 1096,
	374, 1096,
	375, 1096,
	376, 1096,
	377, 1096,
	378, 1096,
	379, 1096,
	380, 1096,
	381, 1096,
	383, 1096,
	384, 1096,
	385, 1096,
	386, 1096,
	387, 1096,
	388, 1096,
	390, 1096,
	391, 1096,
	392, 1096,
	393, 1096,
	394, 1096,
	396, 1096,
	397, 1096,
	398, 1096,
	399, 1096,
	400, 1096,
	401, 1096,
	402, 1096,
	404, 1096,
	406, 1096,
	407, 1096,
	408, 1096,
	409, 1096,
	410, 1096,
	411, 1096,
	412, 1096,
	413, 1096,
	414, 1096,
	415, 1096,
	416, 1096,
	417, 1096,
	418, 1096,
	420, 1096,
	421, 1096,
	423, 1096,
	425, 1096,
	426, 1096,
	427, 1096,
	428, 1096,
	429, 1096,
	430, 1096,
	431, 1096,
	432, 1096,
	434, 1096,
	435, 1096,
	436, 1096,
	437, 1096,
	438, 1096,
	440, 1096,
	442, 1096,
	443, 1096,
	444, 1096,
	445, 1096,
	446, 1096,
	448, 1096,
	449, 1096,
	450, 1096,
	452, 1096,
	453, 1096,
	456, 1096,
	457, 1096,
	458, 1096,
	459, 1096,
	460, 1096,
	461, 1096,
	462, 1096,
	464, 1096,
	467, 1096,
	468, 1096,
	469, 1096,
	470, 1096,
	471, 1096,
	472, 1096,
	474, 1096,
	475, 1096,
	476, 1096,
	481, 1096,
	482, 1096,
	483, 1096,
	484, 1096,
	485, 1096,
	486, 1096,
	-2, 0,
	-1, 1428,
	1, 464,
	509, 464,
	511, 464,
	513, 464,
	-2, 1259,
	-1, 1431,
	4, 2297,
	11, 2297,
	12, 2297,
	14, 2297,
	15, 2297,
	16, 2297,
	17, 2297,
	18, 2297,
	19, 2297,
	21, 2297,
	22, 2297,
	23, 2297,
	24, 2297,
	25, 2297,
	26, 2297,
	28, 2297,
	29, 2297,
	32, 2297,
	33, 2297,
	35, 2297,
	37, 2297,
	40, 2297,
	41, 2297,
	42, 2297,
	43, 2297,
	44, 2297,
	45, 2297,
	46, 2297,
	47, 2297,
	48, 2297,
	50, 2297,
	51, 2297,
	52, 2297,
	53, 2297,
	55, 2297,
	56, 2297,
	57, 2297,
	58, 2297,
	59, 2297,
	63, 2297,
	64, 2297,
	65, 2297,
	66, 2297,
	68, 2297,
	69, 2297,
	70, 2297,
	71, 2297,
	74, 2297,
	75, 2297,
	76, 2297,
	77, 2297,
	78, 2297,
	79, 2297,
	80, 2297,
	81, 2297,
	83, 2297,
	84, 2297,
	85, 2297,
	86, 2297,
	88, 2297,
	89, 2297,
	90, 2297,
	91, 2297,
	92, 2297,
	94, 2297,
	95, 2297,
	96, 2297,
	97, 2297,
	105, 2297,
	106, 2297,
	107, 2297,
	108, 2297,
	110, 2297,
	111, 2297,
	112, 2297,
	114, 2297,
	115, 2297,
	116, 2297,
	118, 2297,
	119, 2297,
	121, 2297,
	122, 2297,
	123, 2297,
	126, 2297,
	127, 2297,
	128, 2297,
	130, 2297,
	131, 2297,
	133, 2297,
	134, 2297,
	135, 2297,
	137, 2297,
	138, 2297,
	139, 2297,
	140, 2297,
	141, 2297,
	142, 2297,
	143, 2297,
	144, 2297,
	145, 2297,
	146, 2297,
	147, 2297,
	148, 2297,
	149, 2297,
	150, 2297,
	151, 2297,
	155, 2297,
	156, 2297,
	157, 2297,
	158, 2297,
	159, 2297,
	160, 2297,
	161, 2297,
	162, 2297,
	165, 2297,
	166, 2297,
	168, 2297,
	171, 2297,
	172, 2297,
	173, 2297,
	174, 2297,
	175, 2297,
	176, 2297,
	177, 2297,
	179, 2297,
	180, 2297,
	182, 2297,
	183, 2297,
	185, 2297,
	186, 2297,
	187, 2297,
	188, 2297,
	189, 2297,
	190, 2297,
	191, 2297,
	192, 2297,
	193, 2297,
	194, 2297,
	195, 2297,
	196, 2297,
	197, 2297,
	198, 2297,
	199, 2297,
	200, 2297,
	201, 2297,
	203, 2297,
	204, 2297,
	206, 2297,
	207, 2297,
	208, 2297,
	210, 2297,
	211, 2297,
	212, 2297,
	213, 2297,
	215, 2297,
	217, 2297,
	218, 2297,
	219, 2297,
	220, 2297,
	221, 2297,
	222, 2297,
	223, 2297,
	224, 2297,
	225, 2297,
	226, 2297,
	228, 2297,
	229, 2297,
	230, 2297,
	231, 2297,
	232, 2297,
	233, 2297,
	234, 2297,
	235, 2297,
	237, 2297,
	238, 2297,
	239, 2297,
	241, 2297,
	242, 2297,
	243, 2297,
	244, 2297,
	245, 2297,
	246, 2297,
	248, 2297,
	249, 2297,
	250, 2297,
	253, 2297,
	254, 2297,
	255, 2297,
	256, 2297,
	257, 2297,
	258, 2297,
	259, 2297,
	260, 2297,
	261, 2297,
	262, 2297,
	263, 2297,
	264, 2297,
	265, 2297,
	266, 2297,
	267, 2297,
	268, 2297,
	270, 2297,
	271, 2297,
	272, 2297,
	273, 2297,
	274, 2297,
	275, 2297,
	276, 2297,
	277, 2297,
	279, 2297,
	282, 2297,
	283, 2297,
	285, 2297,
	286, 2297,
	287, 2297,
	288, 2297,
	289, 2297,
	292, 2297,
	296, 2297,
	297, 2297,
	298, 2297,
	299, 2297,
	301, 2297,
	302, 2297,
	303, 2297,
	305, 2297,
	307, 2297,
	308, 2297,
	309, 2297,
	310, 2297,
	311, 2297,
	312, 2297,
	313, 2297,
	314, 2297,
	315, 2297,
	316, 2297,
	317, 2297,
	318, 2297,
	320, 2297,
	321, 2297,
	322, 2297,
	323, 2297,
	324, 2297,
	325, 2297,
	326, 2297,
	327, 2297,
	328, 2297,
	330, 2297,
	332, 2297,
	333, 2297,
	334, 2297,
	335, 2297,
	336, 2297,
	337, 2297,
	338, 2297,
	339, 2297,
	340, 2297,
	341, 2297,
	342, 2297,
	349, 2297,
	350, 2297,
	351, 2297,
	352, 2297,
	353, 2297,
	354, 2297,
	355, 2297,
	356, 2297,
	357, 2297,
	358, 2297,
	360, 2297,
	361, 2297,
	362, 2297,
	363, 2297,
	364, 2297,
	365, 2297,
	366, 2297,
	367, 2297,
	368, 2297,
	369, 2297,
	370, 2297,
	371, 2297,
	372, 2297,
	373, 2297,
	374, 2297,
	375, 2297,
	376, 2297,
	377, 2297,
	378, 2297,
	379, 2297,
	380, 2297,
	381, 2297,
	383, 2297,
	384, 2297,
	385, 2297,
	386, 2297,
	387, 2297,
	388, 2297,
	390, 2297,
	391, 2297,
	392, 2297,
	393, 2297,
	394, 2297,
	395, 2297,
	396, 2297,
	397, 2297,
	398, 2297,
	399, 2297,
	400, 2297,
	401, 2297,
	402, 2297,
	404, 2297,
	406, 2297,
	407, 2297,
	408, 2297,
	409, 2297,
	410, 2297,
	411, 2297,
	412, 2297,
	413, 2297,
	414, 2297,
	415, 2297,
	416, 2297,
	417, 2297,
	418, 2297,
	420, 2297,
	421, 2297,
	423, 2297,
	425, 2297,
	426, 2297,
	427, 2297,
	428, 2297,
	429, 2297,
	430, 2297,
	431, 2297,
	432, 2297,
	434, 2297,
	435, 2297,
	436, 2297,
	437, 2297,
	438, 2297,
	440, 2297,
	442, 2297,
	443, 2297,
	444, 2297,
	445, 2297,
	446, 2297,
	448, 2297,
	449, 2297,
	450, 2297,
	452, 2297,
	453, 2297,
	456, 2297,
	457, 2297,
	458, 2297,
	459, 2297,
	460, 2297,
	461, 2297,
	462, 2297,
	464, 2297,
	467, 2297,
	468, 2297,
	469, 2297,
	470, 2297,
	471, 2297,
	472, 2297,
	474, 2297,
	475, 2297,
	476, 2297,
	481, 2297,
	482, 2297,
	483, 2297,
	484, 2297,
	485, 2297,
	486, 2297,
	487, 2297,
	488, 2297,
	491, 2297,
	492, 2297,
	493, 2297,
	494, 2297,
	495, 2297,
	496, 2297,
	498, 2297,
	499, 2297,
	500, 2297,
	501, 2297,
	502, 2297,
	503, 2297,
	504, 2297,
	505, 2297,
	506, 2297,
	508, 2297,
	511, 2297,
	512, 2297,
	514, 2297,
	515, 2297,
	-2, 0,
	-1, 1436,
	170, 2191,
	439, 2191,
	493, 2191,
	512, 2191,
	-2, 0,
	-1, 1484,
	334, 752,
	388, 752,
	-2, 0,
	-1, 1509,
	1, 747,
	509, 747,
	511, 747,
	513, 747,
	-2, 0,
	-1, 1510,
	1, 783,
	509, 783,
	511, 783,
	513, 783,
	-2, 0,
	-1, 1511,
	1, 754,
	509, 754,
	511, 754,
	513, 754,
	-2, 0,
	-1, 1513,
	1, 758,
	509, 758,
	511, 758,
	513, 758,
	-2, 0,
	-1, 1519,
	1, 765,
	509, 765,
	511, 765,
	513, 765,
	-2, 0,
	-1, 1547,
	1, 2245,
	509, 2245,
	511, 2245,
	512, 2245,
	513, 2245,
	-2, 812,
	-1, 1548,
	1, 2188,
	509, 2188,
	511, 2188,
	512, 2188,
	513, 2188,
	-2, 813,
	-1, 1563,
	1, 1169,
	513, 1169,
	-2, 1174,
	-1, 1566,
	154, 1300,
	167, 1300,
	247, 1300,
	290, 1300,
	-2, 1240,
	-1, 1660,
	136, 1261,
	154, 1261,
	167, 1261,
	214, 1261,
	247, 1261,
	290, 1261,
	300, 1261,
	454, 1261,
	-2, 1665,
	-1, 1720,
	511, 1815,
	-2, 0,
	-1, 1755,
	136, 1261,
	154, 1261,
	167, 1261,
	214, 1261,
	247, 1261,
	290, 1261,
	300, 1261,
	454, 1261,
	-2, 1381,
	-1, 1802,
	510, 1492,
	-2, 1480,
	-1, 1835,
	1, 589,
	513, 589,
	-2, 1174,
	-1, 2061,
	1, 749,
	509, 749,
	511, 749,
	513, 749,
	-2, 0,
	-1, 2062,
	1, 785,
	509, 785,
	511, 785,
	513, 785,
	-2, 0,
	-1, 2092,
	1, 767,
	509, 767,
	511, 767,
	513, 767,
	-2, 0,
	-1, 2138,
	368, 1327,
	369, 1327,
	-2, 1525,
	-1, 2169,
	14, 0,
	15, 0,
	16, 0,
	491, 0,
	492, 0,
	493, 0,
	-2, 1545,
	-1, 2170,
	14, 0,
	15, 0,
	16, 0,
	491, 0,
	492, 0,
	493, 0,
	-2, 1546,
	-1, 2171,
	89, 0,
	228, 0,
	229, 0,
	495, 0,
	496, 0,
	-2, 1547,
	-1, 2172,
	89, 0,
	228, 0,
	229, 0,
	495, 0,
	496, 0,
	-2, 1548,
	-1, 2173,
	89, 0,
	228, 0,
	229, 0,
	495, 0,
	496, 0,
	-2, 1549,
	-1, 2174,
	89, 0,
	228, 0,
	229, 0,
	495, 0,
	496, 0,
	-2, 1550,
	-1, 2175,
	89, 0,
	228, 0,
	229, 0,
	495, 0,
	496, 0,
	-2, 1551,
	-1, 2176,
	14, 0,
	15, 0,
	16, 0,
	491, 0,
	492, 0,
	493, 0,
	-2, 1552,
	-1, 2188,
	14, 0,
	15, 0,
	16, 0,
	491, 0,
	492, 0,
	493, 0,
	-2, 1564,
	-1, 2189,
	14, 0,
	15, 0,
	16, 0,
	491, 0,
	492, 0,
	493, 0,
	-2, 1565,
	-1, 2190,
	14, 0,
	15, 0,
	16, 0,
	491, 0,
	492, 0,
	493, 0,
	-2, 1566,
	-1, 2193,
	17, 0,
	18, 0,
	19, 0,
	47, 0,
	194, 0,
	197, 0,
	246, 0,
	395, 0,
	487, 0,
	494, 0,
	-2, 1571,
	-1, 2199,
	17, 0,
	18, 0,
	19, 0,
	47, 0,
	194, 0,
	197, 0,
	246, 0,
	395, 0,
	487, 0,
	494, 0,
	-2, 1575,
	-1, 2201,
	17, 0,
	18, 0,
	19, 0,
	47, 0,
	194, 0,
	197, 0,
	246, 0,
	395, 0,
	487, 0,
	494, 0,
	-2, 1583,
	-1, 2202,
	17, 0,
	18, 0,
	19, 0,
	47, 0,
	194, 0,
	197, 0,
	246, 0,
	395, 0,
	487, 0,
	494, 0,
	-2, 1584,
	-1, 2203,
	17, 0,
	18, 0,
	19, 0,
	47, 0,
	194, 0,
	197, 0,
	246, 0,
	395, 0,
	487, 0,
	494, 0,
	-2, 1585,
	-1, 2204,
	17, 0,
	18, 0,
	19, 0,
	47, 0,
	194, 0,
	197, 0,
	246, 0,
	395, 0,
	487, 0,
	494, 0,
	-2, 1586,
	-1, 2316,
	5, 1958,
	170, 1826,
	510, 1955,
	-2, 1946,
	-1, 2317,
	170, 1827,
	-2, 2249,
	-1, 2318,
	170, 1828,
	-2, 2107,
	-1, 2319,
	170, 1829,
	-2, 2017,
	-1, 2320,
	170, 1830,
	-2, 2061,
	-1, 2321,
	170, 1831,
	-2, 2102,
	-1, 2322,
	170, 1832,
	-2, 2186,
	-1, 2323,
	170, 1833,
	-2, 1648,
	-1, 2392,
	1, 1382,
	2, 1382,
	95, 1382,
	136, 1382,
	154, 1382,
	167, 1382,
	171, 1382,
	181, 1382,
	184, 1382,
	210, 1382,
	214, 1382,
	225, 1382,
	243, 1382,
	247, 1382,
	271, 1382,
	290, 1382,
	294, 1382,
	300, 1382,
	359, 1382,
	363, 1382,
	454, 1382,
	465, 1382,
	478, 1382,
	479, 1382,
	480, 1382,
	489, 1382,
	509, 1382,
	511, 1382,
	513, 1382,
	515, 1382,
	-2, 1381,
	-1, 2405,
	510, 1927,
	-2, 1941,
	-1, 2407,
	1, 264,
	-2, 1288,
	-1, 2429,
	510, 1491,
	-2, 1481,
	-1, 2546,
	1, 1072,
	509, 1072,
	511, 1072,
	513, 1072,
	-2, 1288,
	-1, 2710,
	295, 1330,
	-2, 2287,
	-1, 2711,
	295, 1331,
	-2, 2172,
	-1, 2715,
	368, 1892,
	369, 1892,
	-2, 1646,
	-1, 2716,
	368, 1896,
	369, 1896,
	-2, 1647,
	-1, 2717,
	368, 1893,
	369, 1893,
	-2, 1646,
	-1, 2718,
	368, 1897,
	369, 1897,
	-2, 1647,
	-1, 2731,
	17, 0,
	18, 0,
	19, 0,
	47, 0,
	194, 0,
	197, 0,
	246, 0,
	395, 0,
	487, 0,
	494, 0,
	-2, 1573,
	-1, 2732,
	17, 0,
	18, 0,
	19, 0,
	47, 0,
	194, 0,
	197, 0,
	246, 0,
	395, 0,
	487, 0,
	494, 0,
	-2, 1577,
	-1, 2738,
	17, 0,
	18, 0,
	19, 0,
	47, 0,
	194, 0,
	197, 0,
	246, 0,
	395, 0,
	487, 0,
	494, 0,
	-2, 1579,
	-1, 2936,
	222, 1174,
	330, 1174,
	338, 1174,
	489, 1174,
	-2, 586,
	-1, 3062,
	1, 1072,
	509, 1072,
	511, 1072,
	513, 1072,
	-2, 1288,
	-1, 3164,
	17, 0,
	18, 0,
	19, 0,
	47, 0,
	194, 0,
	197, 0,
	246, 0,
	395, 0,
	487, 0,
	494, 0,
	-2, 1581,
	-1, 3171,
	219, 0,
	221, 0,
	282, 0,
	-2, 1600,
	-1, 3238,
	14, 0,
	15, 0,
	16, 0,
	491, 0,
	492, 0,
	493, 0,
	-2, 1629,
	-1, 3239,
	14, 0,
	15, 0,
	16, 0,
	491, 0,
	492, 0,
	493, 0,
	-2, 1630,
	-1, 3240,
	14, 0,
	15, 0,
	16, 0,
	491, 0,
	492, 0,
	493, 0,
	-2, 1631,
	-1, 3244,
	14, 0,
	15, 0,
	16, 0,
	491, 0,
	492, 0,
	493, 0,
	-2, 1635,
	-1, 3245,
	14, 0,
	15, 0,
	16, 0,
	491, 0,
	492, 0,
	493, 0,
	-2, 1636,
	-1, 3246,
	14, 0,
	15, 0,
	16, 0,
	491, 0,
	492, 0,
	493, 0,
	-2, 1637,
	-1, 3292,
	510, 1928,
	-2, 1942,
	-1, 3415,
	512, 2403,
	-2, 1218,
	-1, 3471,
	219, 0,
	221, 0,
	282, 0,
	-2, 1601,
	-1, 3474,
	17, 0,
	18, 0,
	19, 0,
	47, 0,
	194, 0,
	197, 0,
	246, 0,
	395, 0,
	487, 0,
	494, 0,
	-2, 1604,
	-1, 3475,
	17, 0,
	18, 0,
	19, 0,
	47, 0,
	194, 0,
	197, 0,
	246, 0,
	395, 0,
	487, 0,
	494, 0,
	-2, 1606,
	-1, 3679,
	17, 0,
	18, 0,
	19, 0,
	47, 0,
	194, 0,
	197, 0,
	246, 0,
	395, 0,
	487, 0,
	494, 0,
	-2, 1605,
	-1, 3680,
	17, 0,
	18, 0,
	19, 0,
	47, 0,
	194, 0,
	197, 0,
	246, 0,
	395, 0,
	487, 0,
	494, 0,
	-2, 1607,
	-1, 3691,
	219, 0,
	-2, 1638,
	-1, 3837,
	219, 0,
	-2, 1639,
	-1, 3985,
	47, 0,
	194, 0,
	246, 0,
	395, 0,
	487, 0,
	494, 0,
	-2, 2252,
}

const sqlPrivate = 57344

const sqlLast = 101348

var sqlAct = [...]int{

	239, 3766, 3995, 3723, 3606, 3859, 3984, 2630, 3880, 4092,
	3960, 3944, 3941, 2865, 3954, 3454, 3048, 3926, 3726, 3996,
	3711, 4042, 2462, 3997, 2602, 3773, 3203, 2032, 2866, 3841,
	3983, 1102, 3637, 3591, 2148, 926, 1294, 3632, 3077, 3668,
	1419, 3318, 3407, 1278, 3782, 2041, 943, 3356, 2954, 3540,
	2016, 3619, 1789, 3804, 2216, 1414, 3642, 3386, 3072, 3070,
	3044, 1575, 3034, 1451, 36, 3371, 1887, 2156, 660, 3369,
	3156, 2523, 981, 626, 2348, 3319, 3696, 2639, 1761, 2149,
	2724, 1160, 2652, 917, 3124, 2591, 3122, 2574, 2565, 3294,
	2848, 2577, 660, 2641, 2880, 2908, 2888, 1091, 1253, 3453,
	4, 3510, 2649, 2632, 2638, 2869, 1897, 2603, 1492, 1730,
	2464, 1936, 2586, 3842, 2588, 758, 2847, 2500, 2385, 2153,
	2229, 1261, 1668, 1450, 2014, 1935, 2258, 655, 2537, 1930,
	2260, 1914, 3018, 2648, 2708, 1706, 1921, 1871, 1874, 2387,
	2575, 2249, 2213, 974, 2499, 3263, 2871, 3767, 1418, 1563,
	233, 1731, 232, 2384, 2915, 925, 161, 2366, 1861, 2039,
	1144, 2137, 2120, 2345, 938, 2118, 1415, 3046, 1411, 1429,
	2596, 1405, 1971, 1348, 979, 2453, 594, 661, 1258, 662,
	1133, 2642, 1082, 1750, 1701, 752, 580, 1085, 2252, 1024,
	602, 1740, 2356, 1790, 1064, 2374, 1280, 2312, 2302, 2230,
	1653, 1576, 1577, 99, 610, 2119, 1519, 1081, 1970, 1099,
	2121, 657, 1991, 620, 1371, 732, 1886, 1395, 666, 706,
	669, 1289, 2142, 955, 597, 972, 1427, 41, 605, 40,
	38, 29, 27, 25, 1062, 817, 170, 1562, 1087, 1582,
	161, 171, 666, 1300, 669, 2759, 835, 3277, 2755, 3278,
	2007, 2007, 4150, 2007, 4145, 2007, 2365, 2007, 3103, 4133,
	4132, 2867, 4109, 2365, 2365, 1747, 3556, 970, 4107, 4103,
	4025, 4019, 3556, 1944, 4026, 2365, 4017, 4014, 4011, 4006,
	2365, 4015, 4012, 1944, 3981, 3980, 3979, 3975, 1944, 1944,
	2025, 2025, 921, 3087, 1293, 3974, 1590, 1591, 3086, 2025,
	977, 921, 3969, 773, 3967, 976, 3556, 3939, 3556, 3920,
	1141, 3556, 3913, 2420, 2820, 2821, 2365, 3912, 1621, 3907,
	3906, 2365, 3900, 3556, 3556, 1593, 1944, 3873, 1141, 3839,
	3821, 3598, 753, 2420, 3443, 3818, 2040, 2934, 3815, 1944,
	1065, 1065, 3556, 3775, 3743, 3742, 3734, 3776, 1944, 1944,
	1944, 2358, 1118, 3733, 3267, 1079, 1592, 3556, 66, 3702,
	756, 755, 3103, 1944, 3681, 3661, 1612, 3650, 2420, 2025,
	1068, 3103, 1069, 3586, 67, 3575, 922, 2365, 3555, 2365,
	3473, 3423, 3556, 2416, 2420, 3119, 1590, 1591, 71, 1623,
	1624, 1625, 1633, 1634, 1635, 231, 3417, 3384, 902, 2723,
	3119, 3385, 3287, 901, 2768, 911, 3288, 1626, 1621, 2005,
	2769, 1113, 3285, 2365, 1314, 1593, 3286, 916, 1944, 3921,
	3270, 3187, 1639, 77, 2365, 1944, 3183, 3118, 3110, 3834,
	2365, 3119, 3111, 84, 2864, 2859, 1066, 3822, 2365, 2365,
	1615, 1616, 1617, 1618, 2858, 2811, 1592, 2809, 2365, 2812,
	1598, 2810, 2025, 2801, 3267, 2799, 1612, 2802, 83, 2365,
	2357, 2770, 2655, 2628, 1609, 2365, 2025, 2028, 2826, 2627,
	2437, 2419, 98, 2028, 2365, 2420, 1097, 84, 95, 2414,
	2408, 2364, 2027, 2365, 1944, 2365, 2028, 1114, 1620, 1622,
	3631, 3598, 3576, 1944, 3443, 3111, 2514, 2255, 2452, 206,
	2820, 2821, 1891, 2838, 2839, 2840, 1841, 2365, 2006, 1094,
	2571, 1943, 2531, 2450, 1093, 1726, 2758, 1288, 3348, 3159,
	3137, 1748, 1924, 2401, 3088, 1494, 85, 2400, 2399, 2398,
	1615, 1616, 1617, 1618, 1308, 1512, 2820, 2821, 2397, 1070,
	1598, 208, 1613, 3089, 2285, 1067, 910, 909, 2008, 2008,
	908, 2008, 907, 2008, 906, 2008, 905, 2688, 3526, 206,
	2836, 904, 900, 1590, 1591, 899, 898, 897, 896, 1630,
	2835, 895, 1640, 894, 893, 2256, 892, 891, 1620, 1622,
	890, 889, 888, 887, 886, 885, 884, 207, 866, 815,
	814, 813, 1593, 1459, 1636, 812, 1637, 200, 811, 810,
	809, 208, 1313, 1607, 1608, 201, 808, 807, 806, 805,
	804, 803, 802, 801, 800, 799, 798, 797, 796, 795,
	794, 1628, 793, 1592, 792, 979, 791, 172, 790, 979,
	1293, 789, 1613, 788, 787, 1619, 4002, 786, 3086, 776,
	775, 771, 770, 764, 1163, 763, 88, 207, 1163, 723,
	2257, 2254, 1283, 722, 2826, 1614, 682, 1638, 681, 680,
	1143, 672, 671, 670, 1148, 640, 632, 1137, 206, 631,
	630, 614, 227, 2837, 1627, 979, 226, 979, 225, 979,
	134, 224, 1114, 223, 1283, 169, 91, 172, 94, 222,
	2826, 221, 220, 219, 3825, 3485, 2357, 1114, 218, 1264,
	1302, 1590, 1591, 217, 3982, 1269, 2616, 2023, 1283, 2020,
	208, 2006, 206, 2113, 216, 215, 214, 1598, 213, 212,
	757, 211, 1307, 1621, 134, 1619, 210, 209, 3302, 3281,
	1593, 2820, 2821, 3120, 2838, 2839, 2840, 2820, 2821, 2911,
	1299, 2781, 1306, 1292, 1312, 1614, 2836, 2764, 2552, 1283,
	979, 2424, 3469, 2406, 208, 1283, 207, 1751, 1302, 1283,
	2391, 1592, 2582, 2271, 1353, 1355, 200, 979, 2259, 979,
	1631, 1131, 2269, 1283, 201, 1869, 1774, 1679, 136, 979,
	1589, 979, 2836, 1603, 1601, 1602, 1594, 1595, 1596, 1597,
	1599, 1600, 173, 1296, 206, 1150, 172, 3721, 2862, 1272,
	207, 2835, 2829, 2830, 2822, 2823, 2824, 2825, 2827, 2828,
	200, 1101, 3887, 3831, 666, 1425, 669, 1709, 201, 2863,
	2820, 2821, 1283, 1708, 1709, 1156, 1670, 1250, 1255, 2035,
	1708, 3695, 1443, 1126, 1448, 3651, 208, 3630, 3533, 979,
	754, 1291, 979, 1290, 1457, 1712, 1462, 3823, 3646, 3508,
	3507, 3501, 1707, 1078, 1344, 1598, 1432, 1434, 3500, 2837,
	3499, 3492, 1629, 2820, 2821, 3491, 1604, 1605, 1611, 1632,
	1610, 1606, 2253, 1603, 1601, 1602, 1594, 1595, 1596, 1597,
	1599, 1600, 207, 3489, 3484, 2826, 3929, 3481, 3480, 3383,
	1358, 2826, 200, 1620, 1622, 2837, 3306, 2433, 1464, 3305,
	201, 3304, 1513, 3390, 3291, 953, 2034, 3258, 2820, 2821,
	3257, 161, 161, 3256, 206, 206, 1137, 3179, 3175, 1137,
	2906, 2855, 172, 1670, 1408, 2846, 1590, 1591, 1677, 1374,
	3114, 3346, 979, 979, 979, 979, 979, 979, 979, 2841,
	2819, 2816, 2815, 2813, 2808, 2807, 2806, 1613, 2803, 2800,
	2780, 1430, 1528, 2763, 1445, 1593, 208, 208, 922, 2756,
	1399, 1402, 2629, 979, 2392, 2584, 1671, 1301, 1669, 979,
	2242, 1589, 1951, 206, 2826, 1982, 1588, 2836, 2835, 4144,
	2832, 2833, 2834, 2836, 4101, 1567, 1592, 2831, 2829, 2830,
	2822, 2823, 2824, 2825, 2827, 2828, 1949, 4100, 4035, 2927,
	4033, 4024, 207, 207, 1103, 3205, 1463, 3879, 3869, 3866,
	1514, 1444, 200, 200, 3865, 208, 2599, 2826, 3864, 3858,
	201, 201, 3851, 1458, 3819, 2830, 2822, 2823, 2824, 2825,
	2827, 2828, 2820, 2821, 3803, 2422, 3802, 2219, 3790, 1659,
	3787, 1256, 172, 172, 1268, 1271, 3739, 1590, 1591, 2860,
	1561, 3717, 3843, 2284, 1469, 1596, 1597, 1599, 1600, 3693,
	1614, 207, 2826, 3676, 3645, 2225, 2836, 3675, 3658, 1621,
	1485, 200, 979, 979, 979, 3657, 1593, 3623, 979, 201,
	1598, 1515, 3599, 3525, 3506, 1099, 3444, 1099, 3438, 3435,
	2837, 3336, 3335, 3322, 3321, 3273, 2837, 1728, 3261, 3170,
	1657, 172, 1163, 3121, 1271, 1271, 2519, 1592, 3104, 3063,
	979, 1564, 3007, 660, 1095, 2982, 2957, 1807, 660, 1302,
	2956, 3389, 2929, 1572, 2785, 2784, 979, 1662, 1571, 2779,
	1283, 1667, 1302, 2903, 2747, 2564, 1715, 1714, 1713, 2583,
	1777, 1710, 1271, 1702, 1700, 979, 2431, 1566, 1568, 2430,
	1786, 1163, 1737, 1765, 2836, 1830, 2403, 2396, 1782, 1585,
	1586, 2363, 902, 2267, 1711, 1773, 922, 901, 1729, 1724,
	1723, 1722, 1721, 1838, 1137, 1720, 1719, 3826, 1718, 2837,
	1867, 1717, 1734, 1735, 1784, 1716, 2826, 1697, 1696, 1801,
	1602, 1594, 1595, 1596, 1597, 1599, 1600, 1832, 1695, 1694,
	1833, 1598, 1693, 1065, 1703, 1704, 1692, 1691, 1690, 1590,
	1591, 2832, 2833, 2834, 1689, 1688, 1687, 1686, 2831, 2829,
	2830, 2822, 2823, 2824, 2825, 2827, 2828, 2822, 2823, 2824,
	2825, 2827, 2828, 1758, 1685, 2957, 3706, 1684, 1593, 1620,
	1622, 1683, 1672, 2485, 161, 1658, 2036, 206, 1656, 1651,
	1780, 1125, 1116, 1109, 3626, 3529, 3477, 3301, 3284, 3276,
	1858, 2767, 2394, 666, 3531, 669, 3300, 2837, 666, 1592,
	669, 1759, 2270, 1671, 1756, 2925, 2820, 2821, 1835, 1654,
	1769, 2268, 3578, 1778, 1147, 206, 4098, 1283, 1283, 208,
	922, 4091, 3867, 1613, 1860, 3073, 3778, 1163, 1727, 3777,
	3649, 3601, 1141, 1860, 1880, 3720, 1804, 2831, 2829, 2830,
	2822, 2823, 2824, 2825, 2827, 2828, 1768, 3600, 1767, 1766,
	1764, 1763, 1762, 1753, 1785, 1911, 1751, 208, 1913, 1829,
	3824, 1918, 3577, 3528, 206, 207, 2985, 3446, 1146, 1787,
	3445, 3279, 1795, 1692, 3783, 200, 3106, 206, 1749, 3105,
	1939, 1941, 1097, 201, 1097, 2824, 2825, 2827, 2828, 2805,
	3393, 1077, 1860, 1559, 1449, 1863, 1853, 1692, 1426, 1141,
	2804, 2729, 2487, 207, 1781, 172, 208, 1138, 1145, 1142,
	1847, 1529, 1709, 200, 206, 1094, 206, 1094, 1708, 208,
	1093, 201, 1093, 1141, 1896, 2831, 2829, 2830, 2822, 2823,
	2824, 2825, 2827, 2828, 3334, 1681, 1614, 882, 2033, 924,
	2504, 3774, 1922, 2598, 4022, 1493, 1594, 1595, 1596, 1597,
	1599, 1600, 207, 3050, 4007, 3049, 208, 3994, 208, 3035,
	2653, 1494, 200, 1678, 1283, 207, 1283, 1937, 1283, 666,
	201, 669, 3353, 3339, 2867, 200, 1975, 883, 1983, 3135,
	3697, 3207, 2773, 201, 1283, 1283, 4003, 2250, 2429, 1725,
	1705, 1891, 172, 3042, 1484, 1283, 1291, 1979, 1290, 1332,
	1988, 930, 207, 4016, 207, 172, 1980, 4013, 1283, 1283,
	1283, 1917, 200, 3082, 200, 1139, 3313, 3860, 2525, 3633,
	201, 3938, 201, 1140, 2042, 3848, 1473, 2960, 3329, 660,
	2926, 3899, 2528, 1268, 2053, 2331, 2636, 2423, 2595, 1836,
	1942, 3032, 172, 1996, 172, 4058, 4004, 3151, 3759, 3566,
	1320, 2438, 2822, 2823, 2824, 2825, 2827, 2828, 1985, 3366,
	2538, 2938, 880, 4140, 1603, 1601, 1602, 1594, 1595, 1596,
	1597, 1599, 1600, 3752, 878, 1962, 876, 874, 1961, 1527,
	718, 2098, 2456, 3745, 4059, 2057, 2038, 2096, 871, 3379,
	3362, 3361, 3355, 3352, 1526, 3350, 2454, 3310, 3309, 1848,
	1330, 2778, 2456, 1374, 2777, 1993, 2776, 1993, 2043, 979,
	1990, 979, 1994, 1132, 2775, 1286, 2454, 2255, 979, 3365,
	920, 1807, 1807, 1163, 2940, 979, 979, 979, 979, 979,
	979, 979, 979, 979, 979, 979, 979, 979, 979, 979,
	979, 979, 979, 979, 979, 979, 979, 979, 979, 979,
	979, 979, 979, 979, 979, 979, 979, 979, 979, 979,
	1430, 979, 1430, 979, 979, 979, 979, 922, 2130, 922,
	1998, 1999, 719, 2117, 1141, 862, 2047, 1147, 1331, 666,
	1126, 669, 1147, 1525, 2733, 979, 2535, 2534, 979, 979,
	2029, 1471, 2030, 1801, 1801, 2256, 979, 2530, 919, 2521,
	979, 2513, 979, 979, 2046, 2512, 2491, 2415, 2984, 3898,
	1163, 2200, 1565, 2298, 2297, 2158, 979, 979, 979, 979,
	2540, 979, 979, 979, 979, 979, 979, 979, 979, 2592,
	1364, 1146, 1363, 1362, 1600, 1361, 1146, 3136, 868, 1466,
	2075, 2539, 2541, 1960, 2111, 2110, 3674, 979, 979, 979,
	979, 979, 979, 979, 979, 979, 1385, 2489, 2092, 1138,
	979, 2051, 2231, 2232, 1339, 2445, 2407, 2691, 2215, 2141,
	2257, 2254, 1099, 1978, 206, 2107, 2231, 2247, 206, 1163,
	1888, 2544, 1852, 1851, 921, 2478, 1860, 1862, 1099, 2102,
	2706, 1538, 1326, 1570, 2215, 3562, 2508, 3972, 3728, 3325,
	2114, 2828, 2293, 2116, 979, 1163, 2122, 2129, 2115, 2477,
	1804, 1804, 1884, 3579, 2154, 2155, 208, 2501, 2502, 206,
	208, 2315, 2315, 2329, 2246, 2231, 2501, 2502, 2349, 2351,
	2250, 1268, 1995, 1138, 2355, 2128, 1889, 1890, 1287, 2010,
	2061, 1891, 2012, 2109, 1467, 2224, 1795, 1795, 2017, 902,
	2379, 2019, 902, 902, 2145, 2022, 1542, 2146, 2147, 1482,
	1662, 208, 207, 2295, 1885, 2694, 207, 1139, 2296, 4086,
	1283, 2299, 200, 2300, 2301, 1140, 200, 1558, 2404, 2126,
	201, 1124, 2065, 2227, 201, 2501, 2502, 2128, 2259, 1494,
	922, 1855, 1524, 2197, 2062, 2060, 1065, 3142, 2223, 922,
	1163, 2244, 172, 922, 3730, 2221, 172, 207, 3141, 1769,
	2685, 1486, 2068, 1838, 2336, 2259, 1137, 200, 2371, 2417,
	721, 720, 1898, 1494, 4058, 201, 3552, 3351, 2370, 1807,
	2527, 2126, 4000, 2545, 1758, 2721, 2937, 4095, 918, 2466,
	3196, 1139, 1902, 2393, 2311, 2324, 2524, 172, 3337, 1140,
	2340, 2353, 1521, 4087, 2425, 1163, 3548, 2361, 2362, 784,
	2526, 2378, 3560, 2383, 2372, 3673, 2389, 2390, 2455, 1283,
	2376, 2377, 3349, 2693, 161, 1756, 2488, 638, 3338, 979,
	979, 2484, 979, 2458, 1590, 1591, 592, 1711, 4102, 1472,
	1899, 922, 2253, 1857, 2106, 2124, 2690, 716, 2127, 715,
	2112, 1801, 3549, 872, 2522, 2529, 1621, 2511, 2490, 3316,
	2069, 587, 2518, 1593, 1875, 872, 2457, 872, 873, 1876,
	1095, 2097, 1095, 2436, 2432, 3917, 1141, 2095, 1856, 872,
	857, 1703, 1704, 2493, 1948, 1947, 2568, 2509, 2435, 1097,
	2195, 2469, 2553, 2198, 1592, 2556, 4089, 2558, 2606, 2720,
	2127, 2439, 2999, 915, 4075, 1097, 1283, 1283, 2259, 1283,
	4074, 3326, 2108, 1875, 2125, 1106, 2992, 2413, 1876, 1882,
	4112, 1283, 1094, 4001, 1384, 637, 1539, 1093, 2503, 2505,
	2506, 2507, 2471, 2474, 2692, 1903, 2597, 2461, 1094, 2597,
	2650, 2998, 2194, 1093, 2713, 2714, 2480, 2624, 3561, 1104,
	1141, 1910, 1349, 2658, 2659, 2991, 2619, 1920, 2492, 2744,
	1325, 673, 2664, 2665, 2666, 4047, 2125, 3125, 1804, 1877,
	979, 2510, 2494, 3729, 666, 3193, 669, 1894, 3459, 2547,
	1919, 2549, 3458, 858, 2654, 1328, 1879, 2742, 1598, 2674,
	1909, 2675, 3080, 3079, 4125, 1347, 1904, 1905, 2735, 1934,
	2672, 1291, 4093, 2550, 1795, 1509, 3125, 3999, 2625, 1900,
	869, 1468, 1915, 1891, 979, 2562, 1893, 2608, 1877, 3544,
	979, 979, 2007, 3545, 2214, 2572, 1620, 1622, 3915, 3861,
	2635, 1349, 1569, 2682, 1540, 1879, 1889, 1890, 2696, 2590,
	2698, 1933, 3875, 1901, 2211, 2601, 2441, 1107, 1881, 1537,
	3194, 2468, 2621, 3126, 2939, 2669, 4088, 3079, 1882, 1510,
	2443, 3916, 1536, 161, 1916, 2676, 1698, 2678, 3547, 2680,
	2620, 2622, 2209, 751, 3615, 979, 979, 2618, 2626, 2067,
	1613, 979, 3550, 2656, 2637, 4094, 2923, 2660, 2689, 2661,
	2971, 2196, 3126, 2444, 979, 979, 3010, 1881, 1481, 1483,
	979, 979, 1882, 2739, 4028, 1430, 979, 2612, 4046, 2613,
	2973, 2614, 2442, 4029, 1541, 979, 979, 979, 4096, 2740,
	1123, 979, 2064, 2745, 3455, 785, 2222, 2671, 3686, 1864,
	1865, 979, 4068, 2736, 3123, 2059, 2677, 2456, 2679, 2970,
	2681, 639, 2975, 1906, 636, 2241, 859, 2375, 979, 3949,
	3878, 2472, 2712, 3374, 1882, 588, 1650, 2783, 2766, 2703,
	3670, 2702, 3372, 921, 4113, 2388, 3209, 4123, 2259, 2699,
	3625, 3449, 2141, 3460, 3297, 2707, 2701, 2467, 2336, 1119,
	3153, 2704, 674, 675, 1256, 1739, 1497, 3881, 2205, 3998,
	2761, 2762, 2977, 1614, 3546, 2765, 2757, 2974, 4057, 1268,
	2206, 4055, 3895, 1882, 2207, 3789, 3405, 3066, 2212, 1969,
	1736, 1907, 1117, 1112, 979, 979, 979, 579, 589, 3388,
	2734, 1580, 3456, 979, 979, 979, 1579, 777, 979, 3553,
	3736, 2978, 2144, 3504, 3127, 3128, 3129, 3130, 979, 1099,
	1163, 1872, 2722, 1470, 979, 857, 979, 3847, 1892, 1849,
	3616, 3157, 3735, 3715, 1099, 2874, 2875, 3406, 2336, 2336,
	590, 1743, 591, 3375, 3359, 860, 1105, 4045, 915, 3312,
	2772, 3067, 1163, 3127, 3128, 3129, 3130, 3061, 3669, 1912,
	1873, 4118, 2741, 765, 1099, 2916, 2952, 1163, 2948, 2576,
	2566, 2743, 4126, 677, 676, 1989, 1271, 1271, 1981, 2896,
	1746, 1807, 2857, 922, 2615, 1163, 1974, 3565, 1956, 1878,
	3247, 861, 3192, 4027, 3564, 1741, 1875, 979, 2876, 1578,
	2008, 1876, 1601, 1602, 1594, 1595, 1596, 1597, 1599, 1600,
	3262, 979, 2921, 1744, 3927, 3882, 3154, 2103, 2134, 2886,
	2890, 1579, 1842, 1807, 3408, 1268, 678, 679, 858, 3638,
	2563, 2933, 2935, 1387, 3772, 2905, 2944, 2945, 1878, 979,
	3770, 1742, 1580, 3716, 1137, 2963, 2941, 2208, 2910, 2959,
	913, 2958, 857, 1801, 2961, 2727, 2210, 2965, 2336, 2336,
	2336, 2909, 2705, 1268, 2882, 1268, 2852, 2853, 2854, 2868,
	2052, 3671, 3373, 2473, 2902, 915, 3275, 3505, 3461, 2914,
	2884, 2962, 1163, 2879, 2967, 2968, 2895, 2878, 1925, 1846,
	2883, 1283, 2885, 1932, 1650, 1801, 1283, 2894, 2949, 2495,
	2987, 1877, 2891, 2897, 2898, 1283, 2979, 2980, 3013, 1283,
	2981, 3016, 1511, 1163, 1578, 3024, 3026, 914, 1879, 2367,
	660, 2930, 2931, 1743, 2932, 2918, 2919, 2920, 778, 779,
	2135, 1283, 4117, 1745, 3019, 2412, 2900, 2411, 2901, 3019,
	3004, 3005, 1283, 2990, 3006, 2410, 3248, 3047, 2936, 2409,
	2889, 2942, 3462, 3008, 3249, 858, 1099, 3055, 1498, 1844,
	1880, 3563, 1746, 1356, 1370, 2570, 2947, 919, 3075, 3060,
	1804, 3001, 3036, 3724, 2924, 2893, 1357, 2373, 2976, 3854,
	1881, 2650, 1845, 3883, 766, 767, 1097, 3607, 1880, 2369,
	2650, 859, 1579, 1931, 2368, 1744, 1283, 1283, 3115, 2989,
	3084, 1097, 2994, 2382, 1368, 1574, 1795, 1095, 2983, 2995,
	2997, 3003, 1804, 2996, 3009, 783, 2953, 3102, 1283, 1094,
	3000, 3022, 1922, 1095, 1093, 3029, 1987, 3095, 3028, 3038,
	1922, 1097, 3033, 4065, 1094, 2881, 3655, 3374, 3017, 1093,
	3768, 2657, 2493, 3027, 2917, 3935, 3372, 3040, 1795, 2548,
	3930, 1163, 3002, 3855, 1163, 2496, 2497, 3011, 3924, 2892,
	3511, 3076, 3264, 3068, 1094, 3725, 3713, 2266, 3953, 1093,
	666, 4067, 669, 4018, 3868, 3692, 1556, 3503, 1554, 3378,
	780, 781, 3058, 1533, 979, 1578, 1882, 2849, 3100, 3101,
	979, 979, 3081, 3169, 979, 979, 979, 3654, 979, 3131,
	3083, 3090, 3096, 3714, 3133, 3148, 1531, 979, 1807, 1508,
	860, 1506, 1504, 1502, 1500, 1745, 979, 3113, 859, 979,
	2814, 1491, 3117, 2746, 2943, 1163, 1781, 3931, 1580, 2567,
	3856, 2520, 3074, 2486, 979, 3147, 768, 769, 1489, 1366,
	2434, 3132, 1163, 161, 161, 1776, 3138, 3375, 3139, 1772,
	3140, 1557, 1807, 1807, 979, 979, 861, 979, 979, 979,
	3172, 1454, 922, 3155, 2094, 2850, 3150, 3149, 1574, 3993,
	2687, 2686, 3144, 2663, 1928, 979, 2123, 2105, 1369, 979,
	1801, 1807, 1807, 979, 979, 979, 979, 979, 979, 979,
	979, 979, 979, 979, 979, 979, 979, 979, 979, 979,
	979, 979, 3152, 979, 3181, 3182, 1520, 2072, 1953, 1831,
	979, 979, 1807, 3370, 1682, 1465, 1926, 979, 1367, 2265,
	1343, 3585, 3923, 1097, 1801, 1801, 3574, 4069, 979, 782,
	3145, 3636, 3590, 3537, 3404, 912, 3177, 860, 3398, 1099,
	1099, 1878, 3012, 979, 1555, 1268, 1553, 2310, 2306, 3189,
	4043, 1532, 3188, 1801, 1801, 1927, 1094, 3204, 870, 2336,
	2336, 1093, 3364, 3195, 3197, 3198, 3332, 3330, 1978, 3311,
	3199, 3211, 1163, 3059, 1530, 3071, 3373, 1507, 3051, 1505,
	1503, 1501, 1499, 861, 1801, 2617, 2593, 3280, 3221, 1490,
	3222, 3259, 2581, 3218, 3224, 2573, 2560, 1804, 3251, 3219,
	3226, 979, 2026, 3220, 2024, 2021, 1488, 1365, 2018, 2013,
	2011, 2009, 2000, 1952, 1950, 1938, 1923, 979, 979, 1908,
	2304, 3260, 1895, 1883, 3796, 3252, 1583, 3023, 1783, 2093,
	4059, 3307, 1932, 1795, 2725, 3963, 3660, 2308, 2309, 2307,
	3296, 1804, 1804, 979, 979, 2154, 3212, 2336, 2336, 2336,
	2336, 2336, 2336, 2336, 2336, 2336, 2336, 2336, 2336, 2336,
	2336, 2336, 2336, 2336, 2336, 2336, 1074, 2336, 979, 3653,
	1804, 1804, 1268, 1268, 2154, 3227, 161, 1795, 1795, 3282,
	3268, 3269, 3092, 3093, 3094, 3271, 3272, 3652, 3097, 3266,
	3098, 1075, 3099, 1283, 2303, 2305, 1322, 3597, 875, 877,
	879, 1804, 1868, 2651, 3798, 3255, 1795, 1795, 1807, 2476,
	2456, 3295, 2138, 3345, 3347, 3283, 2726, 3340, 3344, 3416,
	3303, 2456, 2063, 1584, 2454, 3315, 1891, 1551, 1552, 3360,
	651, 1407, 1931, 1283, 2089, 2475, 1986, 1795, 2088, 3962,
	979, 1406, 3354, 2070, 3567, 3592, 1487, 3833, 1099, 979,
	1268, 3512, 1590, 1591, 3490, 2498, 3813, 2479, 3394, 3418,
	3377, 1587, 4061, 4053, 2493, 3358, 1283, 1283, 1283, 2606,
	4023, 2559, 3426, 1590, 1591, 2091, 3410, 3413, 1839, 2525,
	1801, 1593, 1283, 2533, 593, 3357, 2532, 2517, 1076, 2515,
	3409, 2483, 2481, 3395, 3381, 3922, 3430, 4090, 1163, 3722,
	2516, 2922, 2650, 228, 2482, 3805, 1097, 1097, 707, 3891,
	3888, 3853, 1592, 3765, 748, 3397, 1407, 3806, 3396, 3412,
	1163, 1407, 3442, 979, 979, 3387, 3290, 987, 2600, 979,
	979, 1807, 2354, 1592, 979, 979, 604, 979, 1834, 1094,
	1094, 979, 1788, 3807, 1093, 1093, 3411, 576, 3399, 3414,
	1739, 2332, 979, 3420, 3419, 4116, 3376, 1293, 3448, 2820,
	2821, 1590, 1591, 3890, 3955, 2448, 2449, 3425, 979, 3956,
	235, 235, 235, 3482, 582, 583, 3433, 598, 582, 598,
	608, 613, 3440, 3472, 629, 3431, 3432, 3436, 4071, 635,
	3437, 3464, 2261, 3955, 3439, 235, 3786, 1804, 3956, 3463,
	1475, 2953, 3809, 1801, 2446, 2447, 1474, 3299, 3457, 2448,
	2446, 3476, 3452, 762, 2294, 3753, 3593, 1535, 3808, 235,
	1534, 3589, 3588, 3478, 1095, 3402, 1743, 3298, 1099, 3200,
	3014, 1676, 1675, 1795, 3552, 3810, 1099, 4104, 4076, 1095,
	1163, 3844, 1163, 3749, 3707, 3704, 3622, 1161, 3530, 1099,
	3441, 1262, 3447, 3422, 3382, 3380, 3328, 3323, 3091, 3065,
	3064, 2684, 2668, 1163, 3548, 1746, 2667, 2610, 3541, 1095,
	3517, 2585, 2561, 2427, 2426, 3502, 2226, 2090, 2087, 2086,
	1741, 2085, 979, 2084, 3539, 2003, 2002, 2001, 1984, 1964,
	3543, 1963, 3534, 3535, 1959, 1958, 1957, 1955, 1744, 1954,
	1550, 1549, 1495, 1394, 1393, 1392, 1391, 1390, 1389, 1163,
	3549, 3520, 1388, 3568, 1386, 1097, 1163, 1381, 1380, 3559,
	1804, 1379, 3509, 3558, 1378, 3523, 1742, 3516, 582, 582,
	3514, 3515, 3570, 3571, 3519, 3331, 235, 3333, 1377, 1283,
	1283, 3569, 1338, 3527, 3524, 3594, 2909, 3595, 1094, 3536,
	3542, 1337, 1336, 1093, 1335, 1334, 1795, 1333, 1327, 1321,
	1319, 3557, 1318, 1154, 1153, 1163, 1152, 1151, 3608, 1271,
	1283, 1122, 1121, 3605, 3513, 1057, 1840, 161, 881, 3603,
	867, 3596, 3518, 3727, 3551, 1544, 82, 3587, 1329, 694,
	76, 1929, 3327, 840, 3363, 3952, 979, 1315, 3874, 3602,
	702, 3937, 3582, 3604, 2969, 2536, 1283, 1283, 2071, 1496,
	2073, 3584, 3617, 3640, 2904, 1978, 1163, 2395, 1745, 3914,
	3486, 2782, 3628, 3840, 3685, 2264, 1680, 3639, 979, 979,
	979, 2861, 78, 963, 3643, 3659, 3634, 3656, 3811, 3609,
	3624, 1009, 3647, 3812, 3627, 3614, 1163, 3573, 3613, 3538,
	3629, 979, 3314, 2640, 979, 979, 3611, 3641, 3581, 3610,
	3583, 1095, 3648, 1792, 979, 1794, 3424, 1807, 929, 1166,
	1850, 969, 979, 979, 1866, 1859, 2428, 3544, 2314, 986,
	983, 3545, 1796, 1798, 985, 984, 1797, 1163, 3662, 1283,
	3666, 3663, 1699, 982, 1791, 1097, 3401, 3672, 3400, 2569,
	2604, 1373, 1163, 1097, 842, 3677, 1854, 2220, 2248, 2771,
	979, 1673, 944, 965, 2245, 1115, 1097, 979, 954, 3694,
	2887, 3078, 3289, 3682, 3644, 979, 3547, 1807, 1094, 2133,
	3688, 710, 2817, 1093, 2251, 979, 1094, 1108, 979, 1801,
	3550, 1093, 2337, 2330, 2326, 2594, 979, 3699, 3709, 1094,
	1560, 3700, 3701, 1163, 1093, 1652, 2605, 1149, 947, 2218,
	3703, 1283, 1283, 1664, 2751, 2709, 2143, 3085, 2907, 3710,
	2421, 3959, 3208, 3748, 1968, 3708, 1073, 1072, 1071, 3943,
	3940, 3434, 3045, 1843, 2440, 1642, 3052, 959, 3732, 1267,
	3758, 2872, 3731, 3116, 1340, 634, 3771, 1163, 971, 1801,
	1283, 3780, 1641, 2543, 2542, 3850, 3047, 3750, 1136, 1135,
	3746, 1134, 2951, 4124, 3324, 205, 2719, 1581, 979, 979,
	3755, 3785, 1573, 202, 3760, 3763, 3769, 3764, 2336, 3761,
	204, 3784, 203, 3618, 3293, 2913, 979, 979, 4021, 3801,
	3342, 3795, 3797, 3793, 3779, 2332, 2332, 3037, 20, 3820,
	19, 18, 3546, 979, 1807, 103, 1804, 3792, 39, 3816,
	3817, 3794, 17, 117, 3800, 3799, 133, 132, 3791, 3814,
	3643, 131, 130, 129, 2336, 135, 128, 127, 979, 2748,
	2749, 979, 122, 126, 125, 3828, 124, 3553, 123, 121,
	120, 3857, 1795, 119, 3846, 118, 116, 115, 114, 113,
	979, 112, 111, 110, 109, 1775, 3838, 108, 1978, 107,
	3829, 3830, 1110, 106, 105, 104, 1804, 625, 622, 3845,
	3738, 1271, 55, 54, 102, 101, 1801, 16, 37, 3832,
	14, 59, 3862, 60, 13, 32, 81, 93, 979, 979,
	1120, 3863, 92, 3877, 1095, 1095, 33, 629, 979, 90,
	89, 979, 1795, 1283, 1870, 31, 641, 15, 87, 86,
	30, 3870, 28, 1283, 1283, 2332, 2332, 2332, 11, 9,
	235, 8, 235, 235, 1259, 3872, 235, 235, 1274, 34,
	1283, 3905, 1760, 12, 3885, 3886, 3889, 3784, 3884, 3892,
	3876, 235, 3894, 1295, 979, 979, 3896, 3897, 3902, 2843,
	2844, 2845, 5, 3903, 3904, 166, 165, 3901, 168, 164,
	167, 80, 163, 162, 79, 26, 10, 2336, 1324, 3932,
	3908, 3910, 3909, 3911, 3934, 158, 3781, 979, 979, 3919,
	979, 1342, 3392, 1274, 74, 160, 235, 235, 159, 1259,
	3942, 3945, 157, 1804, 156, 155, 3957, 75, 72, 235,
	154, 153, 3964, 73, 152, 3933, 24, 1383, 6, 58,
	7, 646, 3961, 3947, 3667, 3134, 3951, 96, 3918, 235,
	235, 235, 3977, 1259, 235, 1274, 979, 979, 979, 1795,
	97, 3978, 35, 70, 3976, 629, 69, 235, 235, 3973,
	3971, 3968, 68, 23, 57, 22, 4005, 195, 194, 979,
	1945, 3946, 2336, 2336, 3950, 4010, 193, 3989, 3990, 3992,
	762, 3991, 192, 3965, 191, 190, 3966, 185, 184, 189,
	187, 186, 188, 183, 197, 196, 4030, 199, 4008, 182,
	180, 176, 175, 4032, 179, 653, 181, 178, 3740, 3741,
	1422, 4039, 177, 174, 198, 150, 979, 151, 4034, 65,
	149, 4031, 4044, 1095, 148, 2606, 4040, 4036, 147, 648,
	146, 3754, 4037, 4038, 3756, 3757, 145, 4041, 144, 143,
	64, 4050, 4051, 21, 4052, 4063, 2, 4056, 235, 4060,
	4054, 1, 0, 0, 0, 4064, 4062, 4066, 3942, 0,
	0, 3945, 0, 0, 979, 235, 979, 4073, 4070, 4081,
	4078, 4084, 0, 0, 0, 4085, 0, 4077, 0, 3961,
	4083, 4079, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4072, 0, 0, 0, 4099, 0, 0, 0, 4097,
	1268, 0, 0, 0, 0, 4080, 0, 4082, 0, 0,
	0, 0, 0, 4108, 4106, 0, 4105, 4111, 0, 0,
	0, 979, 979, 0, 0, 0, 66, 4114, 4110, 979,
	0, 979, 979, 4120, 0, 0, 0, 643, 4127, 0,
	0, 0, 67, 4128, 0, 0, 0, 0, 0, 0,
	0, 0, 4129, 0, 0, 4131, 71, 0, 4130, 0,
	647, 4134, 0, 0, 4139, 4138, 0, 0, 0, 0,
	4143, 4136, 4142, 4141, 4146, 979, 0, 4137, 0, 0,
	0, 0, 4151, 0, 0, 1271, 0, 4147, 652, 0,
	4149, 77, 0, 0, 0, 0, 0, 0, 3871, 0,
	0, 650, 0, 1095, 0, 4121, 4122, 645, 0, 0,
	0, 1095, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1095, 0, 83, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2332, 2332, 0, 0,
	98, 0, 0, 0, 0, 84, 95, 0, 642, 4148,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 582, 0, 0, 0, 0, 2157, 0, 0, 0,
	3165, 3166, 0, 0, 649, 0, 0, 0, 0, 0,
	0, 0, 235, 0, 235, 1590, 1591, 654, 235, 0,
	0, 0, 0, 0, 85, 0, 0, 0, 644, 0,
	0, 1295, 1259, 235, 0, 235, 0, 1621, 0, 0,
	235, 1295, 598, 0, 1593, 235, 1295, 0, 0, 0,
	0, 629, 0, 0, 2332, 2332, 2332, 2332, 2332, 2332,
	2332, 2332, 2332, 2332, 2332, 2332, 2332, 2332, 2332, 2332,
	2332, 2332, 2332, 0, 2332, 1592, 0, 0, 0, 0,
	0, 0, 0, 2262, 0, 0, 0, 0, 3228, 3229,
	3230, 3231, 3232, 3233, 3234, 3235, 3236, 3237, 3238, 3239,
	3240, 3241, 3242, 3243, 3244, 3245, 3246, 0, 3250, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4020, 0, 0, 2418, 0, 0, 0, 0, 1738,
	0, 0, 0, 0, 0, 1590, 1591, 0, 1623, 1624,
	1625, 1633, 1634, 1635, 88, 0, 0, 0, 0, 66,
	0, 0, 0, 0, 0, 0, 1626, 1621, 0, 0,
	0, 0, 0, 0, 1593, 67, 0, 0, 0, 1598,
	0, 1639, 0, 0, 0, 0, 0, 0, 2405, 71,
	0, 0, 0, 169, 91, 0, 94, 0, 0, 0,
	0, 0, 0, 0, 0, 1592, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1612, 0, 1620, 1622, 0,
	206, 0, 0, 1609, 77, 0, 235, 0, 757, 0,
	0, 0, 134, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 83,
	0, 0, 208, 0, 0, 0, 0, 0, 0, 0,
	0, 1613, 0, 98, 0, 0, 0, 235, 84, 95,
	0, 235, 0, 2451, 0, 235, 136, 0, 0, 1615,
	1616, 1617, 1618, 0, 0, 0, 0, 0, 0, 1598,
	173, 0, 0, 235, 0, 235, 0, 235, 207, 0,
	0, 582, 0, 928, 0, 0, 0, 0, 200, 0,
	0, 0, 0, 0, 0, 2004, 201, 85, 1630, 0,
	0, 1640, 0, 0, 0, 0, 0, 1620, 1622, 0,
	0, 0, 0, 235, 0, 0, 0, 0, 172, 0,
	0, 0, 0, 1636, 0, 1637, 0, 0, 0, 0,
	0, 0, 1607, 1608, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 629, 0, 0, 0, 762, 0,
	1628, 0, 0, 0, 1614, 0, 0, 0, 0, 0,
	0, 1613, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1275, 235, 0, 1259, 235, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1638, 0, 0, 629,
	0, 0, 0, 0, 0, 0, 235, 0, 0, 0,
	0, 0, 0, 1627, 1317, 0, 235, 235, 0, 235,
	0, 235, 0, 235, 0, 235, 0, 88, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1350, 0,
	0, 0, 0, 0, 0, 2099, 0, 0, 2100, 0,
	2101, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 235, 0, 1619, 0, 169, 91, 0, 94,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 613, 1614, 0, 0, 629, 0, 1438,
	0, 0, 0, 206, 0, 1594, 1595, 1596, 1597, 1599,
	1600, 757, 0, 1452, 0, 134, 0, 0, 0, 1631,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1590, 1591, 0, 1623, 1624, 1625, 1633, 1634, 1635, 0,
	0, 0, 0, 0, 0, 208, 0, 0, 0, 0,
	0, 1626, 1621, 0, 0, 0, 0, 0, 0, 1593,
	0, 0, 1476, 0, 0, 0, 1639, 0, 0, 136,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 173, 0, 0, 0, 0, 0, 0,
	1592, 207, 0, 0, 0, 0, 0, 0, 0, 0,
	1612, 200, 0, 0, 0, 0, 0, 0, 1609, 201,
	0, 1629, 0, 0, 0, 1604, 1605, 1611, 1632, 1610,
	1606, 0, 1603, 1601, 1602, 1594, 1595, 1596, 1597, 1599,
	1600, 172, 0, 0, 0, 3495, 0, 0, 0, 3494,
	0, 0, 1590, 1591, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 582, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1621, 0, 0, 0, 0, 235,
	0, 1593, 0, 0, 1615, 1616, 1617, 1618, 582, 0,
	0, 0, 0, 1089, 1598, 235, 0, 582, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 235,
	0, 0, 1592, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1612, 1630, 0, 0, 1640, 0, 0, 0,
	1609, 0, 1620, 1622, 0, 0, 230, 230, 578, 0,
	0, 0, 0, 0, 0, 2332, 0, 0, 1636, 0,
	1637, 0, 0, 0, 0, 0, 0, 1607, 1608, 0,
	0, 0, 2820, 2821, 928, 2838, 2839, 2840, 928, 598,
	0, 0, 0, 2873, 0, 1628, 3467, 0, 0, 3691,
	0, 0, 0, 3468, 0, 0, 1613, 0, 0, 0,
	0, 2332, 0, 0, 0, 0, 1615, 1616, 1617, 1618,
	0, 0, 0, 0, 0, 2899, 1598, 0, 0, 0,
	0, 1638, 0, 2465, 1297, 0, 1303, 0, 1309, 0,
	2912, 235, 0, 0, 0, 3718, 0, 0, 1627, 0,
	0, 0, 2835, 235, 0, 0, 0, 0, 2928, 0,
	0, 0, 0, 0, 1620, 1622, 235, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 235, 0, 0, 0, 0, 0, 0, 0, 1607,
	1608, 0, 0, 0, 0, 0, 0, 0, 0, 1619,
	0, 235, 2551, 0, 0, 0, 0, 2820, 2821, 1423,
	2838, 2839, 2840, 0, 0, 0, 0, 0, 1613, 1614,
	0, 0, 0, 0, 0, 0, 1441, 1295, 1446, 0,
	235, 0, 0, 0, 0, 0, 2826, 235, 1455, 0,
	1460, 0, 0, 2589, 1631, 0, 0, 0, 0, 0,
	0, 0, 0, 2465, 2332, 582, 0, 0, 2609, 0,
	0, 0, 0, 0, 235, 0, 0, 235, 0, 235,
	0, 235, 0, 0, 0, 0, 1259, 2835, 235, 235,
	0, 1274, 1274, 0, 0, 0, 2912, 0, 3837, 0,
	2841, 2633, 762, 0, 2465, 2465, 0, 0, 1516, 0,
	0, 1522, 0, 0, 0, 0, 0, 0, 0, 235,
	0, 1619, 0, 0, 0, 2820, 2821, 0, 2838, 2839,
	2840, 0, 0, 0, 0, 235, 1259, 235, 2836, 0,
	1295, 1614, 1295, 0, 0, 1259, 1629, 1259, 0, 1259,
	1604, 1605, 1611, 1632, 1610, 1606, 0, 1603, 1601, 1602,
	1594, 1595, 1596, 1597, 1599, 1600, 0, 1452, 1452, 0,
	3925, 2826, 0, 0, 235, 235, 235, 235, 1259, 235,
	0, 235, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2835, 0, 0, 0, 0,
	0, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 0, 0,
	0, 0, 235, 0, 0, 0, 0, 0, 0, 0,
	235, 0, 0, 0, 0, 2841, 0, 0, 0, 0,
	0, 0, 1661, 0, 1262, 0, 0, 1161, 1674, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2837, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2836, 0, 0, 1610, 1606, 0, 1603,
	1601, 1602, 1594, 1595, 1596, 1597, 1599, 1600, 0, 2826,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	237, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3185, 1295,
	0, 2842, 0, 0, 0, 0, 0, 0, 2031, 0,
	0, 0, 0, 0, 0, 3201, 0, 0, 0, 0,
	0, 0, 0, 2841, 0, 2044, 0, 0, 0, 0,
	0, 1732, 1732, 1732, 0, 2045, 2820, 2821, 0, 2838,
	2839, 2840, 0, 0, 0, 0, 0, 0, 2054, 2055,
	2056, 0, 0, 0, 0, 0, 0, 3174, 0, 0,
	0, 2836, 2832, 2833, 2834, 0, 2837, 0, 0, 2831,
	2829, 2830, 2822, 2823, 2824, 2825, 2827, 2828, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 928, 0, 2835, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 235, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 235, 0, 0, 0, 0, 582, 0, 0, 0,
	0, 582, 0, 0, 582, 3292, 0, 582, 582, 0,
	0, 0, 0, 582, 942, 0, 1158, 0, 0, 0,
	0, 235, 1266, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1295, 2837, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2832, 2833, 2834,
	2826, 0, 1295, 0, 2831, 2829, 2830, 2822, 2823, 2824,
	2825, 2827, 2828, 0, 0, 0, 0, 0, 0, 0,
	0, 2465, 2465, 235, 0, 1274, 0, 0, 2465, 0,
	0, 2955, 0, 0, 0, 0, 0, 0, 0, 2465,
	2955, 0, 2465, 2955, 2955, 1375, 0, 0, 0, 0,
	0, 0, 0, 0, 2841, 0, 235, 235, 1274, 235,
	0, 0, 0, 0, 0, 1398, 1398, 1398, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1274,
	235, 1259, 0, 1439, 1440, 0, 0, 0, 0, 0,
	0, 0, 2836, 2465, 0, 3015, 2465, 1274, 0, 0,
	2465, 2465, 1274, 0, 0, 2832, 2833, 2834, 0, 0,
	0, 0, 2831, 2829, 2830, 2822, 2823, 2824, 2825, 2827,
	2828, 0, 0, 0, 0, 0, 0, 235, 3041, 0,
	0, 3043, 2465, 0, 0, 235, 0, 0, 0, 235,
	0, 1274, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2589, 0,
	0, 1259, 0, 235, 0, 0, 2465, 0, 582, 0,
	0, 0, 142, 0, 1543, 2465, 0, 0, 0, 66,
	0, 43, 42, 0, 235, 235, 0, 0, 66, 0,
	0, 0, 0, 0, 0, 67, 0, 137, 0, 0,
	0, 0, 0, 0, 67, 2837, 0, 0, 0, 71,
	0, 235, 2589, 0, 0, 2589, 0, 0, 71, 61,
	0, 0, 0, 0, 0, 0, 45, 0, 139, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 44, 0, 77, 0, 0, 0, 0, 0,
	0, 0, 0, 77, 0, 0, 3143, 0, 0, 1259,
	235, 0, 235, 0, 0, 0, 47, 62, 0, 0,
	0, 0, 0, 0, 48, 0, 0, 0, 0, 83,
	0, 0, 0, 140, 0, 0, 0, 0, 83, 0,
	0, 46, 0, 98, 0, 235, 0, 0, 84, 95,
	0, 0, 98, 0, 0, 0, 0, 84, 95, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2546,
	0, 0, 0, 0, 0, 3522, 2832, 2833, 2834, 49,
	0, 0, 0, 2831, 2829, 2830, 2822, 2823, 2824, 2825,
	2827, 2828, 0, 0, 0, 0, 3532, 85, 2132, 0,
	2136, 3206, 0, 0, 0, 0, 85, 2150, 0, 0,
	0, 0, 0, 0, 2159, 2160, 2161, 2162, 2163, 2164,
	2165, 2166, 2167, 2168, 2169, 2170, 2171, 2172, 2173, 2174,
	2175, 2176, 2177, 2178, 2179, 2180, 2181, 2182, 2183, 2184,
	2185, 2186, 2187, 2188, 2189, 2190, 2191, 2192, 2193, 0,
	2199, 0, 2201, 2202, 2203, 2204, 2623, 0, 0, 0,
	0, 0, 66, 0, 1770, 942, 0, 0, 0, 942,
	0, 1452, 0, 0, 2228, 0, 0, 0, 67, 1779,
	0, 1266, 0, 0, 1247, 1661, 0, 0, 1247, 2243,
	0, 0, 71, 0, 0, 0, 235, 235, 0, 0,
	0, 0, 0, 0, 0, 2273, 2276, 2279, 2282, 0,
	2286, 2287, 2288, 2289, 2290, 2291, 2292, 88, 582, 582,
	0, 0, 0, 0, 0, 0, 88, 77, 50, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2328, 0,
	2339, 2341, 2346, 0, 0, 0, 0, 0, 0, 1161,
	63, 0, 1295, 0, 0, 53, 169, 91, 0, 94,
	0, 0, 83, 51, 0, 169, 91, 141, 94, 0,
	0, 0, 0, 0, 52, 0, 98, 0, 0, 3683,
	0, 84, 95, 206, 0, 0, 0, 0, 0, 0,
	0, 56, 206, 0, 0, 134, 0, 0, 0, 0,
	757, 0, 629, 0, 134, 0, 0, 0, 0, 138,
	0, 0, 0, 0, 0, 0, 0, 0, 1590, 1591,
	3683, 0, 0, 0, 0, 208, 0, 0, 0, 0,
	85, 235, 0, 0, 208, 2157, 0, 1590, 1591, 0,
	1621, 0, 0, 0, 0, 0, 0, 1593, 0, 136,
	0, 0, 0, 0, 0, 0, 0, 0, 136, 1621,
	235, 0, 0, 173, 0, 0, 1593, 0, 0, 235,
	0, 207, 173, 0, 0, 0, 0, 235, 1592, 0,
	207, 200, 0, 0, 235, 0, 2157, 0, 1612, 201,
	200, 0, 0, 0, 0, 0, 1609, 1592, 201, 0,
	0, 0, 0, 0, 2465, 235, 0, 1612, 0, 0,
	0, 172, 0, 1966, 3, 1609, 0, 1973, 0, 0,
	1435, 2633, 2633, 0, 0, 0, 0, 762, 762, 2465,
	0, 0, 2589, 2589, 0, 0, 762, 2465, 0, 1375,
	0, 1992, 3168, 1992, 0, 0, 0, 0, 0, 0,
	88, 0, 0, 0, 235, 0, 0, 0, 0, 0,
	0, 3163, 1615, 1616, 1617, 1618, 0, 0, 2554, 2555,
	0, 2557, 1598, 0, 0, 0, 0, 0, 0, 1266,
	0, 1615, 1616, 1617, 1618, 0, 0, 0, 0, 169,
	91, 1598, 94, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1620, 1622, 0, 0, 0, 0, 206, 0, 0, 0,
	0, 0, 0, 3487, 757, 0, 0, 0, 134, 1620,
	1622, 0, 0, 0, 0, 1607, 1608, 0, 0, 1973,
	0, 0, 2049, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1607, 1608, 0, 0, 208, 0,
	0, 0, 2066, 0, 1613, 0, 0, 0, 0, 0,
	0, 0, 0, 2076, 0, 2078, 0, 2080, 0, 2082,
	0, 2083, 136, 1613, 0, 235, 0, 0, 0, 0,
	0, 1295, 0, 235, 0, 0, 173, 0, 0, 0,
	0, 0, 0, 0, 207, 0, 235, 0, 0, 2683,
	0, 0, 0, 0, 200, 0, 0, 0, 2104, 0,
	0, 0, 201, 0, 0, 0, 0, 2465, 2465, 2465,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1295, 0, 1247, 0, 1433, 0, 0, 0, 2465, 0,
	2955, 0, 0, 1295, 1295, 235, 1274, 1619, 0, 1643,
	1644, 0, 0, 0, 0, 0, 0, 1274, 235, 1274,
	235, 0, 0, 0, 0, 3030, 1619, 1614, 0, 1452,
	2465, 0, 2465, 235, 0, 942, 0, 0, 0, 0,
	0, 1247, 0, 0, 0, 0, 1614, 0, 0, 0,
	0, 3056, 0, 2465, 0, 0, 0, 3620, 0, 0,
	0, 0, 3062, 0, 2731, 2732, 235, 0, 0, 0,
	2738, 0, 0, 235, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2752,
	2753, 0, 0, 0, 0, 2243, 0, 988, 0, 0,
	0, 0, 0, 0, 2760, 0, 1295, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3108, 3109, 0, 0,
	2774, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2786, 1452, 0,
	236, 236, 236, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1610, 1606, 0, 1603, 1601, 1602, 1594, 1595,
	1596, 1597, 1599, 1600, 0, 236, 0, 0, 0, 0,
	0, 1610, 1606, 0, 1603, 1601, 1602, 1594, 1595, 1596,
	1597, 1599, 1600, 0, 0, 0, 0, 1247, 0, 236,
	0, 0, 0, 0, 0, 2402, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2465, 0, 2955, 0, 0,
	3712, 0, 2346, 2346, 2346, 0, 2820, 2821, 235, 2838,
	2839, 2840, 0, 0, 0, 0, 0, 1732, 0, 0,
	0, 0, 0, 0, 0, 2877, 0, 3173, 0, 0,
	0, 0, 0, 0, 629, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3712, 0, 0, 2835, 0, 0, 0,
	0, 2465, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3788, 0, 0, 0, 0, 928, 0, 0, 0,
	0, 0, 0, 1295, 0, 0, 0, 0, 0, 0,
	928, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 235, 235, 0, 0, 0, 0, 1266, 2972, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3206, 0, 0, 0, 0,
	2826, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3712, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1973, 0, 0, 0,
	0, 0, 0, 2580, 0, 0, 0, 0, 0, 0,
	0, 0, 1590, 1591, 0, 1623, 1624, 1625, 1633, 1634,
	1635, 0, 0, 0, 2841, 0, 0, 235, 0, 0,
	2611, 0, 0, 1398, 1621, 1398, 0, 1398, 0, 0,
	0, 1593, 0, 0, 3620, 0, 0, 0, 1639, 0,
	0, 0, 0, 0, 0, 0, 0, 235, 0, 0,
	0, 0, 2836, 0, 0, 0, 2955, 0, 0, 0,
	0, 0, 1592, 0, 0, 2662, 0, 0, 0, 0,
	0, 0, 1612, 1247, 0, 0, 0, 0, 0, 0,
	1609, 2670, 1295, 2673, 1295, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3367, 0, 0, 0, 0, 0, 3928,
	0, 0, 0, 0, 0, 0, 1295, 0, 0, 235,
	2695, 1266, 2697, 1266, 0, 2700, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 235, 2465, 0, 0,
	0, 0, 0, 0, 0, 0, 1615, 1616, 1617, 1618,
	0, 0, 0, 235, 0, 0, 1598, 0, 1398, 0,
	1247, 0, 0, 0, 0, 2837, 2728, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3427, 3428, 3429, 3206,
	0, 0, 0, 2150, 0, 1630, 0, 0, 1640, 3160,
	3161, 0, 0, 3164, 1620, 1622, 0, 3167, 0, 0,
	0, 0, 0, 0, 0, 0, 3171, 0, 0, 0,
	1636, 0, 1637, 0, 0, 3178, 0, 0, 2877, 1607,
	1608, 0, 0, 0, 0, 0, 0, 0, 0, 1247,
	2465, 0, 0, 3190, 0, 0, 0, 1628, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1613, 0,
	0, 3712, 0, 3213, 3214, 1247, 3215, 3216, 3217, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1638, 3223, 0, 0, 0, 3225, 0,
	0, 0, 1295, 0, 2465, 0, 2832, 2833, 2834, 0,
	0, 0, 0, 2831, 2829, 2830, 2822, 2823, 2824, 2825,
	2827, 2828, 0, 0, 0, 0, 0, 0, 0, 3253,
	3254, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3265, 0, 0,
	236, 1167, 236, 236, 0, 1167, 236, 236, 0, 1167,
	0, 1619, 3274, 0, 0, 0, 0, 0, 0, 0,
	1247, 236, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1614, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1167, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2633, 0, 0, 0, 0, 1631, 0, 0, 0,
	0, 0, 0, 2633, 0, 1167, 236, 236, 0, 0,
	3308, 0, 0, 0, 0, 1247, 0, 0, 0, 236,
	0, 0, 0, 0, 0, 0, 3317, 3320, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 236,
	236, 236, 0, 0, 236, 0, 1167, 0, 0, 0,
	0, 0, 1167, 3341, 0, 0, 1167, 236, 236, 0,
	1452, 1590, 1591, 0, 0, 0, 0, 0, 0, 0,
	1167, 0, 0, 0, 0, 0, 0, 0, 0, 2946,
	0, 0, 0, 1621, 0, 0, 0, 0, 1629, 0,
	1593, 0, 1604, 1605, 1611, 1632, 1610, 1606, 0, 1603,
	1601, 1602, 1594, 1595, 1596, 1597, 1599, 1600, 0, 0,
	0, 0, 2986, 2988, 0, 2580, 0, 0, 0, 1167,
	0, 1592, 0, 0, 0, 0, 3664, 3665, 0, 0,
	0, 1612, 0, 0, 0, 0, 0, 0, 0, 1609,
	0, 0, 0, 0, 0, 0, 0, 0, 236, 1732,
	0, 0, 0, 0, 0, 0, 0, 0, 3421, 0,
	0, 0, 0, 0, 0, 236, 0, 975, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3162, 0, 0, 0, 0,
	0, 3053, 0, 0, 0, 3057, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1615, 1616, 1617, 1618, 3705,
	234, 234, 234, 0, 0, 1598, 0, 0, 0, 0,
	1590, 1591, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3465, 3466, 0, 667, 0, 0, 3470, 3471,
	1266, 1266, 1621, 3474, 3475, 0, 0, 0, 0, 1593,
	3479, 0, 0, 1620, 1622, 0, 0, 0, 0, 667,
	0, 3483, 0, 0, 0, 0, 0, 3112, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3488, 1607, 1608,
	1592, 3762, 1452, 0, 0, 0, 0, 0, 0, 0,
	1612, 0, 0, 0, 0, 0, 0, 0, 1609, 0,
	0, 0, 0, 0, 0, 0, 0, 1613, 0, 0,
	0, 0, 0, 0, 0, 0, 3146, 0, 1266, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2737, 0, 0, 0, 0, 0,
	0, 3158, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1615, 1616, 1617, 1618, 0, 0,
	0, 0, 0, 0, 1598, 0, 1096, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 236, 0,
	0, 3320, 0, 0, 0, 964, 100, 0, 0, 1167,
	1619, 0, 0, 236, 236, 236, 0, 0, 0, 0,
	236, 0, 1620, 1622, 0, 236, 0, 0, 0, 0,
	1614, 0, 0, 0, 0, 0, 0, 1167, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1607, 1608, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1167, 0,
	1247, 0, 0, 0, 0, 0, 1590, 1591, 0, 0,
	0, 0, 1633, 1634, 1635, 0, 1613, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1621, 0,
	100, 0, 1247, 0, 0, 1593, 0, 0, 0, 0,
	0, 0, 1639, 0, 0, 0, 0, 1247, 0, 0,
	0, 0, 0, 0, 0, 3320, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1247, 1592, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1612, 942, 0, 0,
	0, 0, 0, 0, 1609, 0, 0, 3678, 3679, 3680,
	0, 942, 0, 0, 0, 1610, 1606, 0, 1603, 1601,
	1602, 1594, 1595, 1596, 1597, 1599, 1600, 903, 0, 1619,
	2150, 0, 0, 3689, 3690, 0, 0, 0, 923, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1614,
	0, 3698, 0, 0, 1167, 1167, 236, 0, 0, 0,
	0, 0, 0, 0, 1167, 0, 0, 0, 0, 0,
	1615, 1616, 1617, 1618, 1083, 0, 0, 0, 0, 0,
	1598, 0, 1247, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3320, 0, 0, 0,
	0, 0, 0, 0, 3737, 0, 0, 236, 0, 1630,
	0, 236, 1640, 1247, 3744, 236, 0, 928, 1620, 1622,
	0, 0, 0, 0, 0, 3751, 0, 0, 0, 0,
	0, 0, 0, 236, 0, 236, 2580, 236, 0, 0,
	0, 0, 0, 1607, 1608, 3391, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3403, 1628, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1613, 236, 1610, 1606, 0, 1603, 1601, 1602,
	1594, 1595, 1596, 1597, 1599, 1600, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3320, 3320, 0,
	0, 1167, 0, 1167, 0, 1167, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1167, 1167, 0, 0, 0, 0, 0, 0, 0,
	3450, 0, 1167, 236, 0, 0, 236, 0, 0, 0,
	0, 0, 0, 0, 0, 1167, 1167, 1167, 0, 0,
	0, 1247, 0, 0, 1247, 0, 236, 3849, 0, 0,
	3852, 0, 0, 0, 0, 1619, 236, 236, 0, 236,
	0, 236, 0, 236, 0, 236, 0, 0, 0, 3320,
	234, 0, 234, 234, 0, 1614, 234, 234, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 667, 0, 0, 0, 0, 0, 0, 0, 0,
	1631, 0, 236, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1247, 0, 3320, 0, 0,
	3320, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1247, 0, 0, 0, 234, 234, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 234,
	1167, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2150, 0, 0, 0, 0, 234,
	234, 234, 0, 0, 234, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 234, 234, 0,
	0, 0, 1629, 0, 0, 0, 0, 928, 0, 1632,
	1610, 1606, 0, 1603, 1601, 1602, 1594, 1595, 1596, 1597,
	1599, 1600, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3572, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2580, 0, 0, 1167, 1590, 1591,
	0, 0, 0, 0, 0, 3988, 3988, 3988, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1621, 0, 1247, 0, 0, 0, 0, 1593, 4009, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 234, 0,
	0, 0, 2580, 0, 0, 0, 0, 0, 0, 3635,
	0, 0, 0, 0, 0, 234, 0, 0, 1592, 0,
	0, 0, 0, 0, 0, 0, 1167, 0, 1612, 0,
	0, 0, 0, 0, 0, 3988, 1609, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 236,
	0, 100, 1167, 100, 0, 100, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2730, 3320, 0, 3320, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1615, 1616, 1617, 1618, 0, 0, 0, 0,
	0, 0, 1598, 0, 0, 0, 0, 1167, 0, 0,
	0, 0, 0, 0, 0, 0, 100, 0, 0, 0,
	923, 100, 100, 0, 0, 0, 0, 0, 0, 0,
	3988, 4115, 0, 100, 0, 100, 0, 1167, 4119, 0,
	1620, 1622, 0, 0, 3719, 100, 0, 100, 0, 0,
	0, 236, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 236, 0, 1607, 1608, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 236, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 236, 1167, 0, 1613, 0, 0, 0, 1247, 0,
	0, 0, 0, 100, 0, 0, 1167, 0, 0, 0,
	0, 236, 0, 0, 0, 0, 0, 0, 0, 0,
	1247, 0, 1754, 0, 1096, 0, 0, 0, 234, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	236, 0, 0, 234, 1754, 234, 0, 236, 0, 0,
	667, 0, 0, 0, 0, 667, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3827, 1266, 0,
	0, 0, 0, 0, 236, 0, 0, 236, 0, 236,
	0, 236, 0, 0, 0, 0, 0, 1619, 236, 236,
	0, 903, 0, 1167, 1167, 0, 1167, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1614, 1167, 0,
	0, 1655, 0, 0, 0, 0, 0, 0, 0, 236,
	0, 0, 0, 0, 0, 0, 0, 0, 1660, 0,
	0, 0, 1666, 0, 0, 236, 0, 236, 0, 0,
	1247, 0, 1247, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1247, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 236, 236, 236, 236, 0, 236,
	0, 236, 0, 3893, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1247,
	0, 0, 236, 0, 0, 0, 1247, 0, 0, 0,
	236, 0, 0, 0, 0, 0, 667, 0, 0, 0,
	0, 0, 1610, 1606, 0, 1603, 1601, 1602, 1594, 1595,
	1596, 1597, 1599, 1600, 0, 0, 0, 0, 0, 0,
	1752, 0, 1755, 0, 100, 3936, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1247, 0, 0, 0, 0,
	0, 0, 3958, 0, 0, 0, 0, 234, 0, 0,
	0, 234, 0, 0, 0, 234, 0, 0, 0, 3970,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 234, 0, 234, 0, 234, 0, 0,
	0, 0, 0, 0, 0, 0, 1247, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 234, 0, 0, 1247, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1247, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1247, 234, 0, 0, 234, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 234, 1167, 0, 0,
	0, 0, 0, 0, 0, 0, 667, 234, 942, 234,
	0, 234, 0, 234, 0, 234, 0, 0, 0, 0,
	0, 0, 0, 1247, 0, 0, 0, 0, 0, 1167,
	1011, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1167, 0, 0, 0, 0, 0,
	0, 0, 234, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1167, 0, 0, 0, 0, 1247, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 236, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1590, 1591, 0,
	1623, 1624, 1625, 1633, 1634, 1635, 236, 236, 0, 236,
	0, 0, 0, 0, 0, 0, 236, 0, 1626, 1621,
	0, 0, 0, 0, 0, 0, 1593, 0, 240, 0,
	236, 0, 0, 1639, 0, 0, 0, 0, 0, 1167,
	0, 0, 0, 0, 0, 0, 0, 0, 1167, 923,
	0, 923, 0, 1167, 0, 0, 0, 1592, 0, 0,
	0, 0, 1167, 0, 0, 0, 1167, 1612, 0, 0,
	1167, 0, 0, 0, 0, 1609, 0, 236, 0, 0,
	0, 0, 0, 0, 0, 236, 0, 0, 1167, 236,
	0, 0, 0, 0, 0, 0, 659, 0, 0, 1167,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1100,
	659, 0, 0, 0, 0, 0, 0, 0, 0, 1096,
	0, 0, 0, 0, 236, 236, 0, 0, 0, 0,
	0, 1615, 1616, 1617, 1618, 1096, 0, 0, 0, 0,
	0, 1598, 0, 1167, 1167, 0, 0, 0, 0, 234,
	0, 236, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1167, 0, 0, 942, 0,
	1630, 0, 0, 1640, 0, 0, 0, 0, 0, 1620,
	1622, 0, 0, 0, 0, 0, 0, 0, 903, 0,
	0, 903, 903, 0, 0, 1636, 0, 1637, 1167, 0,
	236, 1167, 236, 0, 1607, 1608, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1628, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1613, 0, 236, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2217, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 740, 1638, 0,
	0, 234, 923, 0, 0, 0, 0, 0, 0, 0,
	0, 1660, 1167, 234, 0, 1660, 0, 0, 0, 0,
	0, 724, 0, 0, 0, 0, 234, 0, 0, 1167,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 234, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 725, 0, 0, 0,
	0, 667, 0, 0, 0, 0, 1619, 726, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 727, 1614, 1083, 0, 0,
	234, 0, 0, 0, 0, 0, 0, 234, 0, 0,
	0, 0, 745, 1755, 0, 0, 0, 0, 0, 0,
	0, 1631, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 728, 0, 0, 234, 0, 0, 234, 0, 234,
	0, 234, 0, 0, 100, 0, 0, 0, 234, 234,
	0, 0, 0, 0, 729, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1167,
	0, 0, 0, 0, 730, 0, 0, 731, 0, 234,
	0, 0, 0, 0, 0, 0, 653, 0, 0, 0,
	0, 0, 0, 0, 0, 234, 0, 234, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	744, 0, 0, 1629, 0, 0, 0, 1604, 1605, 1611,
	1632, 1610, 1606, 0, 1603, 1601, 1602, 1594, 1595, 1596,
	1597, 1599, 1600, 0, 234, 234, 234, 234, 0, 234,
	0, 234, 100, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 236, 234, 100, 0, 0, 0, 0, 0, 0,
	234, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1167, 0, 0, 0, 1100, 0, 0, 0, 1100, 0,
	236, 0, 1100, 100, 0, 0, 100, 0, 100, 236,
	0, 0, 0, 0, 0, 733, 0, 236, 0, 0,
	0, 0, 0, 0, 236, 0, 0, 0, 0, 0,
	1167, 0, 0, 0, 1100, 0, 751, 0, 734, 0,
	0, 0, 0, 0, 0, 0, 0, 100, 0, 0,
	100, 0, 0, 0, 0, 0, 0, 0, 1100, 0,
	0, 0, 0, 1167, 1167, 1167, 0, 0, 0, 652,
	0, 0, 0, 0, 0, 0, 735, 0, 0, 1167,
	749, 750, 747, 100, 0, 0, 0, 0, 742, 0,
	0, 736, 0, 0, 236, 1167, 0, 0, 0, 1100,
	0, 0, 0, 0, 0, 1100, 0, 0, 0, 1100,
	0, 0, 1164, 0, 0, 0, 1164, 1167, 0, 0,
	1284, 0, 0, 1100, 0, 0, 0, 0, 737, 743,
	0, 0, 0, 0, 0, 0, 0, 738, 0, 0,
	0, 0, 0, 0, 100, 0, 0, 0, 0, 0,
	739, 0, 1284, 0, 0, 746, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 654, 0,
	0, 0, 1100, 0, 0, 0, 1284, 0, 0, 741,
	0, 0, 0, 0, 0, 0, 1096, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1096, 0, 0, 1590, 1591, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1284, 0, 0,
	0, 0, 0, 1284, 0, 0, 1621, 1284, 0, 0,
	0, 1754, 0, 1593, 0, 0, 0, 1167, 0, 1167,
	0, 1284, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2217, 0, 0, 0, 0, 0,
	1167, 0, 0, 0, 1592, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1612, 1660, 0, 0, 0, 0,
	0, 0, 1609, 234, 0, 0, 0, 0, 0, 0,
	1284, 0, 0, 0, 0, 236, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1167, 0, 236, 980,
	236, 0, 0, 1167, 0, 0, 234, 234, 0, 234,
	0, 0, 0, 236, 0, 0, 1754, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1167, 1167, 0, 0,
	234, 0, 0, 0, 0, 0, 0, 0, 1615, 1616,
	1617, 1618, 0, 0, 0, 0, 236, 0, 1598, 0,
	0, 0, 1167, 236, 0, 0, 0, 1167, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 667, 0, 0,
	0, 0, 0, 0, 0, 234, 1620, 1622, 0, 234,
	0, 0, 0, 1167, 1167, 0, 0, 0, 0, 0,
	0, 0, 0, 1167, 1083, 0, 0, 0, 0, 0,
	0, 1607, 1608, 1096, 0, 0, 0, 0, 0, 1083,
	0, 0, 0, 0, 0, 1100, 0, 1100, 0, 0,
	0, 0, 0, 1167, 234, 234, 0, 0, 0, 0,
	1613, 0, 1100, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1808, 0, 0,
	0, 234, 0, 0, 0, 0, 0, 0, 0, 0,
	1100, 0, 0, 0, 1167, 0, 1167, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1167,
	0, 1100, 0, 0, 0, 0, 0, 0, 236, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	234, 0, 234, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 100, 100, 0,
	0, 100, 0, 1619, 0, 0, 0, 0, 0, 0,
	1167, 0, 0, 0, 0, 234, 0, 0, 1167, 1167,
	0, 0, 0, 1614, 0, 0, 0, 0, 0, 0,
	1164, 100, 100, 0, 0, 100, 0, 0, 0, 0,
	0, 659, 0, 0, 0, 0, 659, 0, 0, 0,
	0, 0, 0, 0, 1167, 0, 0, 1167, 1284, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1164,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 236, 236, 0, 0, 0, 0, 1100, 1100, 0,
	0, 0, 0, 0, 0, 0, 0, 1100, 0, 0,
	0, 1083, 0, 0, 923, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 100, 100, 0, 0, 0, 1610, 1606,
	0, 1603, 1601, 1602, 1594, 1595, 1596, 1597, 1599, 1600,
	0, 0, 0, 0, 0, 0, 1096, 1096, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 236, 0, 0,
	0, 684, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 685, 0, 236, 0, 0,
	1167, 0, 0, 0, 0, 1284, 1284, 0, 0, 0,
	1167, 1167, 0, 0, 0, 1164, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1167, 0, 0,
	686, 0, 704, 0, 1100, 0, 1100, 0, 1100, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1100, 1100, 687, 0, 0, 688,
	0, 0, 0, 0, 0, 1100, 0, 0, 0, 236,
	0, 0, 0, 0, 0, 0, 711, 0, 1100, 1100,
	1100, 0, 689, 0, 0, 0, 236, 0, 0, 0,
	0, 234, 0, 0, 0, 709, 0, 0, 0, 0,
	0, 0, 0, 236, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 690, 0,
	234, 0, 0, 0, 0, 0, 0, 0, 0, 234,
	0, 0, 0, 0, 0, 0, 0, 234, 691, 0,
	0, 692, 0, 0, 234, 0, 713, 0, 0, 0,
	653, 0, 1284, 0, 1284, 0, 1284, 0, 0, 0,
	0, 0, 0, 0, 0, 1096, 100, 0, 0, 0,
	0, 0, 1284, 1284, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1284, 1083, 1083, 0, 0, 0, 0,
	0, 1808, 1808, 1100, 0, 0, 1284, 1284, 1284, 0,
	0, 0, 0, 1165, 0, 0, 0, 1165, 0, 0,
	0, 1285, 0, 0, 234, 0, 0, 659, 0, 712,
	0, 0, 0, 0, 0, 0, 0, 0, 695, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1285, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1285, 693, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 696,
	1100, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 697, 0, 0, 0, 0, 0, 1285, 0,
	0, 1164, 0, 0, 1285, 0, 0, 0, 1285, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1285, 652, 0, 0, 0, 0, 0, 0,
	0, 0, 1100, 0, 683, 1096, 705, 0, 0, 1100,
	0, 0, 0, 1096, 0, 698, 0, 0, 1100, 0,
	0, 0, 0, 0, 0, 0, 1754, 0, 0, 0,
	0, 0, 0, 0, 0, 1100, 0, 0, 703, 0,
	0, 1285, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 699, 1083, 0, 716, 0, 715, 1164, 0,
	0, 700, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 701, 234, 0, 0, 0, 708,
	0, 0, 0, 0, 717, 0, 714, 0, 234, 0,
	234, 0, 654, 0, 0, 0, 0, 0, 0, 100,
	1100, 0, 0, 234, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1164, 0, 0,
	1100, 0, 0, 0, 0, 0, 234, 0, 0, 0,
	0, 0, 0, 234, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1164, 0, 0, 0, 0, 0, 1808,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1100, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1100,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1284, 0,
	0, 0, 0, 0, 0, 0, 0, 100, 0, 0,
	0, 0, 0, 1083, 0, 0, 0, 0, 0, 0,
	0, 1083, 0, 0, 0, 0, 0, 0, 1164, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1100, 1100, 234, 1100,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1100, 0, 1164, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1284, 0, 0,
	0, 1165, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1285,
	0, 0, 0, 100, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 100, 0, 0, 0, 0, 0, 0,
	1165, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 100, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1590, 1591, 0, 1623, 1624, 1625,
	1633, 1634, 1635, 0, 1284, 1284, 0, 1284, 0, 0,
	0, 234, 234, 0, 0, 1626, 1621, 0, 0, 1284,
	0, 0, 0, 1593, 0, 0, 0, 0, 0, 0,
	1639, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1592, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1612, 0, 0, 0, 0, 0,
	0, 0, 1609, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 234, 0, 0,
	0, 0, 0, 0, 0, 0, 1285, 1285, 0, 0,
	0, 0, 0, 0, 0, 0, 1165, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 234, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1615, 1616,
	1617, 1618, 0, 0, 0, 0, 0, 0, 1598, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1630, 0, 0,
	1640, 0, 0, 0, 0, 0, 1620, 1622, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 234,
	0, 0, 1636, 0, 1637, 0, 0, 0, 0, 0,
	0, 1607, 1608, 0, 0, 2217, 234, 0, 0, 1100,
	1100, 0, 0, 0, 0, 0, 0, 0, 0, 1628,
	0, 0, 0, 234, 1100, 0, 0, 0, 0, 0,
	1613, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1100, 1285, 0, 1285, 0, 1285, 0, 0,
	0, 0, 0, 0, 1100, 1638, 0, 1100, 0, 0,
	0, 0, 0, 1285, 1285, 0, 0, 0, 0, 0,
	0, 1808, 1627, 0, 1285, 1100, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1285, 1285, 1285,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1808, 0, 0, 0, 0, 0, 0,
	0, 100, 0, 1619, 0, 0, 0, 0, 1164, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1614, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1164, 0, 0, 0, 0, 0, 0, 0, 1631, 0,
	0, 0, 1100, 0, 0, 1164, 0, 0, 0, 0,
	0, 1100, 0, 0, 0, 0, 1100, 0, 0, 0,
	0, 0, 0, 1164, 0, 1100, 0, 0, 0, 1100,
	0, 0, 1165, 1100, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1100, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1100, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 100, 0, 1100, 100, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1629, 0, 0, 0, 1604, 1605, 1611, 1632, 1610, 1606,
	0, 1603, 1601, 1602, 1594, 1595, 1596, 1597, 1599, 1600,
	0, 0, 0, 0, 2795, 0, 1100, 1100, 2796, 1165,
	1164, 0, 0, 0, 0, 0, 0, 0, 0, 1284,
	0, 0, 0, 0, 1284, 0, 0, 0, 1100, 0,
	0, 0, 0, 1284, 0, 0, 0, 1284, 0, 0,
	0, 1164, 0, 0, 0, 0, 0, 0, 659, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1284,
	0, 1100, 0, 0, 1100, 0, 0, 0, 0, 0,
	1284, 0, 0, 0, 0, 0, 0, 0, 1165, 0,
	0, 0, 0, 1590, 1591, 0, 1623, 1624, 1625, 1633,
	1634, 1635, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1165, 1621, 0, 0, 0, 0,
	0, 0, 1593, 0, 0, 0, 0, 0, 1808, 1639,
	0, 0, 0, 0, 1284, 1284, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1100, 0, 0, 0, 0,
	0, 0, 0, 1592, 0, 0, 1284, 0, 0, 0,
	0, 0, 1100, 1612, 0, 0, 0, 0, 0, 0,
	0, 1609, 1808, 1808, 0, 0, 0, 0, 0, 1285,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1164,
	0, 0, 1164, 0, 0, 0, 0, 0, 0, 0,
	0, 1808, 1808, 0, 0, 0, 0, 0, 0, 1165,
	0, 0, 0, 1590, 1591, 0, 1623, 1624, 1625, 1633,
	1634, 1635, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1808, 0, 1626, 1621, 0, 1615, 1616, 1617,
	1618, 0, 1593, 0, 0, 0, 0, 1598, 0, 1639,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1100,
	1100, 0, 0, 1164, 1165, 0, 0, 0, 0, 0,
	0, 0, 0, 1592, 0, 0, 1630, 0, 1285, 1640,
	1164, 0, 0, 1612, 0, 1620, 1622, 0, 0, 0,
	0, 1609, 1100, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1607, 1608, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1628, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1613,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1615, 1616, 1617,
	1618, 0, 0, 0, 0, 1285, 1285, 1598, 1285, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1285, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1630, 0, 0, 1640,
	0, 0, 0, 0, 0, 1620, 1622, 0, 0, 0,
	1164, 0, 0, 1100, 0, 0, 0, 0, 0, 0,
	0, 1636, 0, 1637, 0, 0, 0, 0, 1808, 0,
	1607, 1608, 1619, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1628, 0,
	0, 0, 1614, 1100, 0, 0, 0, 0, 0, 1613,
	0, 0, 0, 0, 0, 0, 0, 0, 1100, 0,
	0, 0, 0, 0, 0, 0, 0, 1631, 0, 0,
	0, 0, 0, 0, 1638, 0, 1100, 1100, 1100, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1627, 1100, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1100, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1284, 0, 0, 0, 0, 0, 0, 0, 0,
	1100, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1808, 1619, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1629,
	0, 1284, 1614, 1604, 1605, 1611, 1632, 1610, 1606, 0,
	1603, 1601, 1602, 1594, 1595, 1596, 1597, 1599, 1600, 0,
	0, 0, 0, 0, 0, 0, 0, 1631, 0, 0,
	0, 0, 0, 0, 1284, 1284, 1284, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1284, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1164, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1100, 0,
	0, 0, 0, 0, 0, 0, 1100, 0, 1164, 0,
	1100, 0, 1100, 0, 0, 0, 0, 0, 0, 1100,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1100, 0, 0, 0, 0, 0, 1629,
	0, 0, 0, 1604, 1605, 1611, 1632, 1610, 1606, 1165,
	1603, 1601, 1602, 1594, 1595, 1596, 1597, 1599, 1600, 0,
	0, 0, 0, 2239, 0, 0, 0, 2240, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1100,
	0, 1165, 0, 0, 0, 0, 1100, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1165, 0, 0, 0,
	1590, 1591, 0, 1623, 1624, 1625, 1633, 1634, 1635, 1100,
	1100, 0, 0, 0, 1165, 0, 0, 0, 0, 0,
	0, 1626, 1621, 0, 0, 0, 0, 0, 1164, 1593,
	1164, 0, 0, 0, 0, 1100, 1639, 0, 0, 0,
	1100, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1164, 0, 0, 0, 0, 0, 0, 0, 0,
	1592, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1612, 0, 0, 0, 0, 0, 1100, 1100, 1609, 0,
	0, 0, 0, 0, 0, 0, 1100, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1164, 0, 0,
	0, 0, 0, 0, 1164, 0, 0, 0, 0, 0,
	0, 1165, 0, 0, 0, 0, 1100, 0, 0, 0,
	1285, 0, 0, 0, 0, 1285, 0, 1284, 1284, 0,
	0, 0, 0, 0, 1285, 0, 0, 1808, 1285, 0,
	0, 0, 1165, 0, 1615, 1616, 1617, 1618, 0, 0,
	0, 0, 0, 1164, 1598, 0, 0, 1100, 1284, 1100,
	1285, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1285, 1100, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1630, 0, 0, 1640, 0, 0, 0,
	0, 0, 1620, 1622, 1284, 1284, 0, 1808, 0, 0,
	0, 0, 0, 0, 1164, 0, 0, 0, 1636, 0,
	1637, 0, 0, 0, 0, 0, 0, 1607, 1608, 0,
	0, 0, 0, 1100, 0, 1285, 1285, 0, 0, 0,
	0, 1100, 1100, 0, 1164, 1628, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1613, 1285, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1100, 0, 0,
	1100, 1638, 0, 0, 0, 1164, 0, 1284, 0, 0,
	1165, 0, 0, 1165, 0, 0, 0, 0, 1627, 0,
	1164, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1808, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1619,
	0, 1164, 0, 0, 0, 0, 0, 0, 0, 1284,
	1284, 0, 0, 0, 1165, 0, 0, 0, 0, 1614,
	0, 1590, 1591, 0, 1623, 1624, 1625, 1633, 1634, 1635,
	0, 1165, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1626, 1621, 1631, 1164, 0, 0, 1284, 0,
	1593, 0, 0, 0, 0, 0, 0, 1639, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1592, 0, 1100, 0, 0, 0, 0, 0, 0,
	0, 1612, 0, 1100, 1100, 0, 0, 0, 0, 1609,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1100, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1629, 0, 0, 0,
	1604, 1605, 1611, 1632, 1610, 1606, 0, 1603, 1601, 1602,
	1594, 1595, 1596, 1597, 1599, 1600, 0, 0, 0, 0,
	0, 1165, 0, 0, 3493, 1615, 1616, 1617, 1618, 0,
	0, 0, 0, 0, 0, 1598, 0, 0, 0, 0,
	0, 1590, 1591, 0, 1623, 1624, 1625, 1633, 1634, 1635,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1284, 1626, 1621, 1630, 0, 0, 1640, 0, 0,
	1593, 1284, 1284, 1620, 1622, 0, 0, 1639, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1284, 1636,
	0, 1637, 0, 0, 0, 0, 0, 0, 1607, 1608,
	0, 1592, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1612, 0, 0, 0, 0, 1628, 0, 0, 1609,
	0, 0, 0, 0, 0, 0, 0, 1613, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1285, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1638, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1627,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1285, 0, 0, 1615, 1616, 1617, 1618, 0,
	0, 0, 0, 0, 0, 1598, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1285, 1285, 1285, 0, 0,
	1619, 0, 0, 0, 1630, 0, 0, 1640, 0, 0,
	0, 1285, 0, 1620, 1622, 0, 0, 0, 0, 0,
	1614, 0, 0, 0, 0, 0, 0, 1165, 0, 1636,
	0, 1637, 0, 0, 0, 0, 0, 0, 1607, 1608,
	0, 0, 0, 0, 0, 1631, 0, 0, 0, 1165,
	0, 0, 0, 0, 0, 0, 1628, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1613, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1638, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1627,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1629, 0, 0,
	0, 1604, 1605, 1611, 1632, 1610, 1606, 0, 1603, 1601,
	1602, 1594, 1595, 1596, 1597, 1599, 1600, 0, 0, 0,
	1619, 0, 0, 0, 0, 3176, 0, 0, 0, 1165,
	0, 1165, 0, 0, 0, 0, 0, 0, 0, 0,
	1614, 0, 0, 0, 0, 0, 816, 0, 857, 0,
	0, 0, 1165, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1631, 0, 0, 0, 0,
	0, 823, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 836, 821, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1165, 0,
	0, 0, 0, 0, 0, 1165, 0, 0, 0, 0,
	0, 0, 0, 822, 0, 0, 0, 0, 825, 0,
	0, 0, 0, 865, 0, 0, 0, 0, 1285, 1285,
	0, 833, 834, 0, 0, 0, 0, 850, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 858, 827, 0, 1165, 0, 0, 1629, 0, 1285,
	0, 1604, 1605, 1611, 1632, 1610, 1606, 0, 1603, 1601,
	1602, 1594, 1595, 1596, 1597, 1599, 1600, 0, 828, 0,
	0, 0, 0, 0, 0, 2798, 0, 856, 0, 0,
	0, 0, 0, 0, 0, 1285, 1285, 0, 0, 0,
	0, 0, 0, 0, 0, 1165, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 829, 0, 0, 0, 0, 0, 0,
	0, 820, 0, 0, 0, 1165, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 830,
	831, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 838, 837, 0,
	0, 0, 0, 0, 0, 832, 1165, 0, 1285, 847,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1165, 0, 0, 862, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 859, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1165, 0, 0, 0, 0, 0, 0, 0,
	1285, 1285, 0, 0, 0, 0, 0, 0, 826, 0,
	0, 864, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 824, 0, 0, 0,
	854, 855, 0, 0, 0, 0, 1165, 0, 0, 1285,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 852,
	0, 0, 0, 0, 0, 0, 863, 848, 0, 841,
	839, 0, 844, 0, 0, 0, 0, 0, 845, 0,
	0, 818, 0, 860, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 819, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 846, 0, 0, 0, 0, 843,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 861,
	0, 0, 0, 0, 0, 0, 0, 849, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 851, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	853, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1162, 0, 1285, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1285, 1285, 0, 0, 0, 244, 245, 246,
	247, 248, 249, 1168, 250, 251, 1169, 1170, 1171, 1285,
	1172, 525, 1173, 1174, 1175, 1176, 252, 253, 255, 254,
	256, 257, 258, 526, 527, 0, 259, 528, 260, 529,
	1177, 261, 262, 263, 264, 265, 1178, 1179, 0, 266,
	530, 531, 532, 1180, 267, 268, 533, 1181, 1248, 1182,
	269, 270, 271, 272, 273, 274, 275, 0, 1183, 277,
	278, 279, 276, 1184, 280, 0, 281, 282, 283, 1185,
	284, 1041, 285, 286, 1186, 1187, 1189, 1188, 1190, 1191,
	1192, 287, 288, 289, 290, 0, 291, 534, 535, 1193,
	295, 292, 293, 1194, 296, 294, 1195, 297, 298, 299,
	1196, 1197, 300, 301, 302, 1198, 303, 304, 1199, 305,
	306, 307, 1200, 308, 309, 536, 310, 311, 312, 314,
	316, 313, 317, 318, 319, 320, 537, 538, 1201, 241,
	1202, 0, 0, 0, 0, 321, 322, 323, 539, 0,
	0, 0, 324, 1203, 325, 1204, 1205, 1042, 326, 327,
	540, 541, 328, 329, 1206, 330, 542, 1207, 543, 331,
	1208, 332, 333, 334, 335, 336, 544, 545, 546, 393,
	1044, 337, 338, 1209, 339, 340, 341, 342, 0, 0,
	0, 242, 343, 344, 346, 1210, 1043, 345, 547, 548,
	1211, 549, 1212, 347, 348, 1045, 550, 1046, 349, 350,
	351, 1047, 352, 0, 0, 0, 353, 354, 355, 356,
	357, 358, 1213, 359, 361, 360, 1214, 362, 551, 1048,
	363, 364, 1049, 1215, 365, 366, 367, 1216, 1217, 368,
	369, 370, 371, 0, 372, 373, 375, 377, 374, 376,
	381, 378, 379, 380, 383, 0, 382, 1050, 384, 385,
	386, 389, 390, 388, 1051, 387, 1218, 243, 1052, 391,
	1219, 552, 392, 553, 394, 395, 1220, 0, 396, 0,
	1221, 1222, 398, 399, 400, 1223, 1224, 401, 402, 554,
	1053, 403, 1054, 555, 404, 405, 397, 406, 407, 408,
	409, 410, 411, 412, 413, 1225, 414, 415, 556, 557,
	558, 416, 559, 417, 418, 1226, 419, 0, 420, 421,
	422, 423, 424, 425, 426, 560, 428, 427, 429, 1227,
	0, 0, 0, 0, 0, 430, 0, 432, 433, 434,
	431, 435, 436, 437, 438, 1228, 439, 440, 441, 1055,
	442, 443, 444, 445, 561, 446, 0, 447, 448, 454,
	455, 449, 450, 456, 457, 458, 459, 460, 1229, 462,
	463, 461, 464, 465, 466, 1230, 467, 451, 452, 468,
	469, 1056, 470, 471, 472, 473, 474, 475, 562, 0,
	476, 1231, 477, 478, 479, 480, 453, 481, 486, 563,
	482, 483, 484, 485, 564, 1232, 488, 489, 0, 487,
	1233, 490, 491, 492, 493, 494, 495, 315, 496, 1234,
	497, 565, 566, 567, 568, 1235, 504, 1236, 498, 499,
	569, 500, 570, 1237, 501, 502, 503, 0, 505, 506,
	1238, 1239, 507, 508, 509, 511, 512, 510, 513, 1240,
	514, 1241, 0, 515, 516, 517, 571, 572, 573, 1242,
	519, 518, 574, 1243, 1244, 1245, 1246, 520, 521, 575,
	522, 523, 524, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1162, 0, 0, 0,
	0, 0, 0, 0, 2380, 0, 0, 0, 0, 0,
	0, 0, 2381, 244, 245, 246, 247, 248, 249, 1168,
	250, 251, 1169, 1170, 1171, 0, 1172, 525, 1173, 1174,
	1175, 1176, 252, 253, 255, 254, 256, 257, 258, 526,
	527, 0, 259, 528, 260, 529, 1177, 261, 262, 263,
	264, 265, 1178, 1179, 0, 266, 530, 531, 532, 1180,
	267, 268, 533, 1181, 1248, 1182, 269, 270, 271, 272,
	273, 274, 275, 0, 1183, 277, 278, 279, 276, 1184,
	280, 0, 281, 282, 283, 1185, 284, 1041, 285, 286,
	1186, 1187, 1189, 1188, 1190, 1191, 1192, 287, 288, 289,
	290, 0, 291, 534, 535, 1193, 295, 292, 293, 1194,
	296, 294, 1195, 297, 298, 299, 1196, 1197, 300, 301,
	302, 1198, 303, 304, 1199, 305, 306, 307, 1200, 308,
	309, 536, 310, 311, 312, 314, 316, 313, 317, 318,
	319, 320, 537, 538, 1201, 241, 1202, 0, 0, 0,
	0, 321, 322, 323, 539, 0, 0, 0, 324, 1203,
	325, 1204, 1205, 1042, 326, 327, 540, 541, 328, 329,
	1206, 330, 542, 1207, 543, 331, 1208, 332, 333, 334,
	335, 336, 544, 545, 546, 393, 1044, 337, 338, 1209,
	339, 340, 341, 342, 0, 0, 0, 242, 343, 344,
	346, 1210, 1043, 345, 547, 548, 1211, 549, 1212, 347,
	348, 1045, 550, 1046, 349, 350, 351, 1047, 352, 0,
	0, 0, 353, 354, 355, 356, 357, 358, 1213, 359,
	361, 360, 1214, 362, 551, 1048, 363, 364, 1049, 1215,
	365, 366, 367, 1216, 1217, 368, 369, 370, 371, 0,
	372, 373, 375, 377, 374, 376, 381, 378, 379, 380,
	383, 0, 382, 1050, 384, 385, 386, 389, 390, 388,
	1051, 387, 1218, 243, 1052, 391, 1219, 552, 392, 553,
	394, 395, 1220, 0, 396, 0, 1221, 1222, 398, 399,
	400, 1223, 1224, 401, 402, 554, 1053, 403, 1054, 555,
	404, 405, 397, 406, 407, 408, 409, 410, 411, 412,
	413, 1225, 414, 415, 556, 557, 558, 416, 559, 417,
	418, 1226, 419, 0, 420, 421, 422, 423, 424, 425,
	426, 560, 428, 427, 429, 1227, 0, 0, 0, 0,
	0, 430, 0, 432, 433, 434, 431, 435, 436, 437,
	438, 1228, 439, 440, 441, 1055, 442, 443, 444, 445,
	561, 446, 0, 447, 448, 454, 455, 449, 450, 456,
	457, 458, 459, 460, 1229, 462, 463, 461, 464, 465,
	466, 1230, 467, 451, 452, 468, 469, 1056, 470, 471,
	472, 473, 474, 475, 562, 0, 476, 1231, 477, 478,
	479, 480, 453, 481, 486, 563, 482, 483, 484, 485,
	564, 1232, 488, 489, 0, 487, 1233, 490, 491, 492,
	493, 494, 495, 315, 496, 1234, 497, 565, 566, 567,
	568, 1235, 504, 1236, 498, 499, 569, 500, 570, 1237,
	501, 502, 503, 0, 505, 506, 1238, 1239, 507, 508,
	509, 511, 512, 510, 513, 1240, 514, 1241, 0, 515,
	516, 517, 571, 572, 573, 1242, 519, 518, 574, 1243,
	1244, 1245, 1246, 520, 521, 575, 522, 523, 524, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1162, 0, 0, 0, 0, 3184, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3186, 244, 245, 246,
	247, 248, 249, 1168, 250, 251, 1169, 1170, 1171, 0,
	1172, 525, 1173, 1174, 1175, 1176, 252, 253, 255, 254,
	256, 257, 258, 526, 527, 0, 259, 528, 260, 529,
	1177, 261, 262, 263, 264, 265, 1178, 1179, 0, 266,
	530, 531, 532, 1180, 267, 268, 533, 1181, 1248, 1182,
	269, 270, 271, 272, 273, 274, 275, 0, 1183, 277,
	278, 279, 276, 1184, 280, 0, 281, 282, 283, 1185,
	284, 1041, 285, 286, 1186, 1187, 1189, 1188, 1190, 1191,
	1192, 287, 288, 289, 290, 0, 291, 534, 535, 1193,
	295, 292, 293, 1194, 296, 294, 1195, 297, 298, 299,
	1196, 1197, 300, 301, 302, 1198, 303, 304, 1199, 305,
	306, 307, 1200, 308, 309, 536, 310, 311, 312, 314,
	316, 313, 317, 318, 319, 320, 537, 538, 1201, 241,
	1202, 0, 0, 0, 0, 321, 322, 323, 539, 0,
	0, 0, 324, 1203, 325, 1204, 1205, 1042, 326, 327,
	540, 541, 328, 329, 1206, 330, 542, 1207, 543, 331,
	1208, 332, 333, 334, 335, 336, 544, 545, 546, 393,
	1044, 337, 338, 1209, 339, 340, 341, 342, 0, 0,
	0, 242, 343, 344, 346, 1210, 1043, 345, 547, 548,
	1211, 549, 1212, 347, 348, 1045, 550, 1046, 349, 350,
	351, 1047, 352, 0, 0, 0, 353, 354, 355, 356,
	357, 358, 1213, 359, 361, 360, 1214, 362, 551, 1048,
	363, 364, 1049, 1215, 365, 366, 367, 1216, 1217, 368,
	369, 370, 371, 0, 372, 373, 375, 377, 374, 376,
	381, 378, 379, 380, 383, 0, 382, 1050, 384, 385,
	386, 389, 390, 388, 1051, 387, 1218, 243, 1052, 391,
	1219, 552, 392, 553, 394, 395, 1220, 0, 396, 0,
	1221, 1222, 398, 399, 400, 1223, 1224, 401, 402, 554,
	1053, 403, 1054, 555, 404, 405, 397, 406, 407, 408,
	409, 410, 411, 412, 413, 1225, 414, 415, 556, 557,
	558, 416, 559, 417, 418, 1226, 419, 0, 420, 421,
	422, 423, 424, 425, 426, 560, 428, 427, 429, 1227,
	0, 0, 0, 0, 0, 430, 0, 432, 433, 434,
	431, 435, 436, 437, 438, 1228, 439, 440, 441, 1055,
	442, 443, 444, 445, 561, 446, 0, 447, 448, 454,
	455, 449, 450, 456, 457, 458, 459, 460, 1229, 462,
	463, 461, 464, 465, 466, 1230, 467, 451, 452, 468,
	469, 1056, 470, 471, 472, 473, 474, 475, 562, 0,
	476, 1231, 477, 478, 479, 480, 453, 481, 486, 563,
	482, 483, 484, 485, 564, 1232, 488, 489, 0, 487,
	1233, 490, 491, 492, 493, 494, 495, 315, 496, 1234,
	497, 565, 566, 567, 568, 1235, 504, 1236, 498, 499,
	569, 500, 570, 1237, 501, 502, 503, 0, 505, 506,
	1238, 1239, 507, 508, 509, 511, 512, 510, 513, 1240,
	514, 1241, 0, 515, 516, 517, 571, 572, 573, 1242,
	519, 518, 574, 1243, 1244, 1245, 1246, 520, 521, 575,
	522, 523, 524, 0, 0, 0, 0, 0, 1162, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3521, 244, 245, 246, 247, 248,
	249, 1168, 250, 251, 1169, 1170, 1171, 0, 1172, 525,
	1173, 1174, 1175, 1176, 252, 253, 255, 254, 256, 257,
	258, 526, 527, 0, 259, 528, 260, 529, 1177, 261,
	262, 263, 264, 265, 1178, 1179, 0, 266, 530, 531,
	532, 1180, 267, 268, 533, 1181, 1248, 1182, 269, 270,
	271, 272, 273, 274, 275, 0, 1183, 277, 278, 279,
	276, 1184, 280, 0, 281, 282, 283, 1185, 284, 1041,
	285, 286, 1186, 1187, 1189, 1188, 1190, 1191, 1192, 287,
	288, 289, 290, 0, 291, 534, 535, 1193, 295, 292,
	293, 1194, 296, 294, 1195, 297, 298, 299, 1196, 1197,
	300, 301, 302, 1198, 303, 304, 1199, 305, 306, 307,
	1200, 308, 309, 536, 310, 311, 312, 314, 316, 313,
	317, 318, 319, 320, 537, 538, 1201, 241, 1202, 0,
	0, 0, 0, 321, 322, 323, 539, 0, 0, 0,
	324, 1203, 325, 1204, 1205, 1042, 326, 327, 540, 541,
	328, 329, 1206, 330, 542, 1207, 543, 331, 1208, 332,
	333, 334, 335, 336, 544, 545, 546, 393, 1044, 337,
	338, 1209, 339, 340, 341, 342, 0, 0, 0, 242,
	343, 344, 346, 1210, 1043, 345, 547, 548, 1211, 549,
	1212, 347, 348, 1045, 550, 1046, 349, 350, 351, 1047,
	352, 0, 0, 0, 353, 354, 355, 356, 357, 358,
	1213, 359, 361, 360, 1214, 362, 551, 1048, 363, 364,
	1049, 1215, 365, 366, 367, 1216, 1217, 368, 369, 370,
	371, 0, 372, 373, 375, 377, 374, 376, 381, 378,
	379, 380, 383, 0, 382, 1050, 384, 385, 386, 389,
	390, 388, 1051, 387, 1218, 243, 1052, 391, 1219, 552,
	392, 553, 394, 395, 1220, 0, 396, 0, 1221, 1222,
	398, 399, 400, 1223, 1224, 401, 402, 554, 1053, 403,
	1054, 555, 404, 405, 397, 406, 407, 408, 409, 410,
	411, 412, 413, 1225, 414, 415, 556, 557, 558, 416,
	559, 417, 418, 1226, 419, 0, 420, 421, 422, 423,
	424, 425, 426, 560, 428, 427, 429, 1227, 0, 0,
	0, 0, 0, 430, 0, 432, 433, 434, 431, 435,
	436, 437, 438, 1228, 439, 440, 441, 1055, 442, 443,
	444, 445, 561, 446, 0, 447, 448, 454, 455, 449,
	450, 456, 457, 458, 459, 460, 1229, 462, 463, 461,
	464, 465, 466, 1230, 467, 451, 452, 468, 469, 1056,
	470, 471, 472, 473, 474, 475, 562, 0, 476, 1231,
	477, 478, 479, 480, 453, 481, 486, 563, 482, 483,
	484, 485, 564, 1232, 488, 489, 0, 487, 1233, 490,
	491, 492, 493, 494, 495, 315, 496, 1234, 497, 565,
	566, 567, 568, 1235, 504, 1236, 498, 499, 569, 500,
	570, 1237, 501, 502, 503, 0, 505, 506, 1238, 1239,
	507, 508, 509, 511, 512, 510, 513, 1240, 514, 1241,
	0, 515, 516, 517, 571, 572, 573, 1242, 519, 518,
	574, 1243, 1244, 1245, 1246, 520, 521, 575, 522, 523,
	524, 1162, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3684, 244, 245,
	246, 247, 248, 249, 1168, 250, 251, 1169, 1170, 1171,
	0, 1172, 525, 1173, 1174, 1175, 1176, 252, 253, 255,
	254, 256, 257, 258, 526, 527, 0, 259, 528, 260,
	529, 1177, 261, 262, 263, 264, 265, 1178, 1179, 0,
	266, 530, 531, 532, 1180, 267, 268, 533, 1181, 1248,
	1182, 269, 270, 271, 272, 273, 274, 275, 0, 1183,
	277, 278, 279, 276, 1184, 280, 0, 281, 282, 283,
	1185, 284, 1041, 285, 286, 1186, 1187, 1189, 1188, 1190,
	1191, 1192, 287, 288, 289, 290, 0, 291, 534, 535,
	1193, 295, 292, 293, 1194, 296, 294, 1195, 297, 298,
	299, 1196, 1197, 300, 301, 302, 1198, 303, 304, 1199,
	305, 306, 307, 1200, 308, 309, 536, 310, 311, 312,
	314, 316, 313, 317, 318, 319, 320, 537, 538, 1201,
	241, 1202, 0, 0, 0, 0, 321, 322, 323, 539,
	0, 0, 0, 324, 1203, 325, 1204, 1205, 1042, 326,
	327, 540, 541, 328, 329, 1206, 330, 542, 1207, 543,
	331, 1208, 332, 333, 334, 335, 336, 544, 545, 546,
	393, 1044, 337, 338, 1209, 339, 340, 341, 342, 0,
	0, 0, 242, 343, 344, 346, 1210, 1043, 345, 547,
	548, 1211, 549, 1212, 347, 348, 1045, 550, 1046, 349,
	350, 351, 1047, 352, 0, 0, 0, 353, 354, 355,
	356, 357, 358, 1213, 359, 361, 360, 1214, 362, 551,
	1048, 363, 364, 1049, 1215, 365, 366, 367, 1216, 1217,
	368, 369, 370, 371, 0, 372, 373, 375, 377, 374,
	376, 381, 378, 379, 380, 383, 0, 382, 1050, 384,
	385, 386, 389, 390, 388, 1051, 387, 1218, 243, 1052,
	391, 1219, 552, 392, 553, 394, 395, 1220, 0, 396,
	0, 1221, 1222, 398, 399, 400, 1223, 1224, 401, 402,
	554, 1053, 403, 1054, 555, 404, 405, 397, 406, 407,
	408, 409, 410, 411, 412, 413, 1225, 414, 415, 556,
	557, 558, 416, 559, 417, 418, 1226, 419, 0, 420,
	421, 422, 423, 424, 425, 426, 560, 428, 427, 429,
	1227, 0, 0, 0, 0, 0, 430, 0, 432, 433,
	434, 431, 435, 436, 437, 438, 1228, 439, 440, 441,
	1055, 442, 443, 444, 445, 561, 446, 0, 447, 448,
	454, 455, 449, 450, 456, 457, 458, 459, 460, 1229,
	462, 463, 461, 464, 465, 466, 1230, 467, 451, 452,
	468, 469, 1056, 470, 471, 472, 473, 474, 475, 562,
	0, 476, 1231, 477, 478, 479, 480, 453, 481, 486,
	563, 482, 483, 484, 485, 564, 1232, 488, 489, 0,
	487, 1233, 490, 491, 492, 493, 494, 495, 315, 496,
	1234, 497, 565, 566, 567, 568, 1235, 504, 1236, 498,
	499, 569, 500, 570, 1237, 501, 502, 503, 0, 505,
	506, 1238, 1239, 507, 508, 509, 511, 512, 510, 513,
	1240, 514, 1241, 0, 515, 516, 517, 571, 572, 573,
	1242, 519, 518, 574, 1243, 1244, 1245, 1246, 520, 521,
	575, 522, 523, 524, 1162, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3580, 244, 245, 246, 247, 248, 249, 1168, 250, 251,
	1169, 1170, 1171, 0, 1172, 525, 1173, 1174, 1175, 1176,
	252, 253, 255, 254, 256, 257, 258, 526, 527, 0,
	259, 528, 260, 529, 1177, 261, 262, 263, 264, 265,
	1178, 1179, 0, 266, 530, 531, 532, 1180, 267, 268,
	533, 1181, 1248, 1182, 269, 270, 271, 272, 273, 274,
	275, 0, 1183, 277, 278, 279, 276, 1184, 280, 0,
	281, 282, 283, 1185, 284, 1041, 285, 286, 1186, 1187,
	1189, 1188, 1190, 1191, 1192, 287, 288, 289, 290, 0,
	291, 534, 535, 1193, 295, 292, 293, 1194, 296, 294,
	1195, 297, 298, 299, 1196, 1197, 300, 301, 302, 1198,
	303, 304, 1199, 305, 306, 307, 1200, 308, 309, 536,
	310, 311, 312, 314, 316, 313, 317, 318, 319, 320,
	537, 538, 1201, 241, 1202, 0, 0, 0, 0, 321,
	322, 323, 539, 0, 0, 0, 324, 1203, 325, 1204,
	1205, 1042, 326, 327, 540, 541, 328, 329, 1206, 330,
	542, 1207, 543, 331, 1208, 332, 333, 334, 335, 336,
	544, 545, 546, 393, 1044, 337, 338, 1209, 339, 340,
	341, 342, 0, 0, 0, 242, 343, 344, 346, 1210,
	1043, 345, 547, 548, 1211, 549, 1212, 347, 348, 1045,
	550, 1046, 349, 350, 351, 1047, 352, 0, 0, 0,
	353, 354, 355, 356, 357, 358, 1213, 359, 361, 360,
	1214, 362, 551, 1048, 363, 364, 1049, 1215, 365, 366,
	367, 1216, 1217, 368, 369, 370, 371, 0, 372, 373,
	375, 377, 374, 376, 381, 378, 379, 380, 383, 0,
	382, 1050, 384, 385, 386, 389, 390, 388, 1051, 387,
	1218, 243, 1052, 391, 1219, 552, 392, 553, 394, 395,
	1220, 0, 396, 0, 1221, 1222, 398, 399, 400, 1223,
	1224, 401, 402, 554, 1053, 403, 1054, 555, 404, 405,
	397, 406, 407, 408, 409, 410, 411, 412, 413, 1225,
	414, 415, 556, 557, 558, 416, 559, 417, 418, 1226,
	419, 0, 420, 421, 422, 423, 424, 425, 426, 560,
	428, 427, 429, 1227, 0, 0, 0, 0, 0, 430,
	0, 432, 433, 434, 431, 435, 436, 437, 438, 1228,
	439, 440, 441, 1055, 442, 443, 444, 445, 561, 446,
	0, 447, 448, 454, 455, 449, 450, 456, 457, 458,
	459, 460, 1229, 462, 463, 461, 464, 465, 466, 1230,
	467, 451, 452, 468, 469, 1056, 470, 471, 472, 473,
	474, 475, 562, 0, 476, 1231, 477, 478, 479, 480,
	453, 481, 486, 563, 482, 483, 484, 485, 564, 1232,
	488, 489, 0, 487, 1233, 490, 491, 492, 493, 494,
	495, 315, 496, 1234, 497, 565, 566, 567, 568, 1235,
	504, 1236, 498, 499, 569, 500, 570, 1237, 501, 502,
	503, 0, 505, 506, 1238, 1239, 507, 508, 509, 511,
	512, 510, 513, 1240, 514, 1241, 0, 515, 516, 517,
	571, 572, 573, 1242, 519, 518, 574, 1243, 1244, 1245,
	1246, 520, 521, 575, 522, 523, 524, 1162, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3451, 244, 245, 246, 247, 248, 249,
	1168, 250, 251, 1169, 1170, 1171, 0, 1172, 525, 1173,
	1174, 1175, 1176, 252, 253, 255, 254, 256, 257, 258,
	526, 527, 0, 259, 528, 260, 529, 1177, 261, 262,
	263, 264, 265, 1178, 1179, 0, 266, 530, 531, 532,
	1180, 267, 268, 533, 1181, 1248, 1182, 269, 270, 271,
	272, 273, 274, 275, 0, 1183, 277, 278, 279, 276,
	1184, 280, 0, 281, 282, 283, 1185, 284, 1041, 285,
	286, 1186, 1187, 1189, 1188, 1190, 1191, 1192, 287, 288,
	289, 290, 0, 291, 534, 535, 1193, 295, 292, 293,
	1194, 296, 294, 1195, 297, 298, 299, 1196, 1197, 300,
	301, 302, 1198, 303, 304, 1199, 305, 306, 307, 1200,
	308, 309, 536, 310, 311, 312, 314, 316, 313, 317,
	318, 319, 320, 537, 538, 1201, 241, 1202, 0, 0,
	0, 0, 321, 322, 323, 539, 0, 0, 0, 324,
	1203, 325, 1204, 1205, 1042, 326, 327, 540, 541, 328,
	329, 1206, 330, 542, 1207, 543, 331, 1208, 332, 333,
	334, 335, 336, 544, 545, 546, 393, 1044, 337, 338,
	1209, 339, 340, 341, 342, 0, 0, 0, 242, 343,
	344, 346, 1210, 1043, 345, 547, 548, 1211, 549, 1212,
	347, 348, 1045, 550, 1046, 349, 350, 351, 1047, 352,
	0, 0, 0, 353, 354, 355, 356, 357, 358, 1213,
	359, 361, 360, 1214, 362, 551, 1048, 363, 364, 1049,
	1215, 365, 366, 367, 1216, 1217, 368, 369, 370, 371,
	0, 372, 373, 375, 377, 374, 376, 381, 378, 379,
	380, 383, 0, 382, 1050, 384, 385, 386, 389, 390,
	388, 1051, 387, 1218, 243, 1052, 391, 1219, 552, 392,
	553, 394, 395, 1220, 0, 396, 0, 1221, 1222, 398,
	399, 400, 1223, 1224, 401, 402, 554, 1053, 403, 1054,
	555, 404, 405, 397, 406, 407, 408, 409, 410, 411,
	412, 413, 1225, 414, 415, 556, 557, 558, 416, 559,
	417, 418, 1226, 419, 0, 420, 421, 422, 423, 424,
	425, 426, 560, 428, 427, 429, 1227, 0, 0, 0,
	0, 0, 430, 0, 432, 433, 434, 431, 435, 436,
	437, 438, 1228, 439, 440, 441, 1055, 442, 443, 444,
	445, 561, 446, 0, 447, 448, 454, 455, 449, 450,
	456, 457, 458, 459, 460, 1229, 462, 463, 461, 464,
	465, 466, 1230, 467, 451, 452, 468, 469, 1056, 470,
	471, 472, 473, 474, 475, 562, 0, 476, 1231, 477,
	478, 479, 480, 453, 481, 486, 563, 482, 483, 484,
	485, 564, 1232, 488, 489, 0, 487, 1233, 490, 491,
	492, 493, 494, 495, 315, 496, 1234, 497, 565, 566,
	567, 568, 1235, 504, 1236, 498, 499, 569, 500, 570,
	1237, 501, 502, 503, 0, 505, 506, 1238, 1239, 507,
	508, 509, 511, 512, 510, 513, 1240, 514, 1241, 0,
	515, 516, 517, 571, 572, 573, 1242, 519, 518, 574,
	1243, 1244, 1245, 1246, 520, 521, 575, 522, 523, 524,
	1162, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3202, 244, 245, 246,
	247, 248, 249, 1168, 250, 251, 1169, 1170, 1171, 0,
	1172, 525, 1173, 1174, 1175, 1176, 252, 253, 255, 254,
	256, 257, 258, 526, 527, 0, 259, 528, 260, 529,
	1177, 261, 262, 263, 264, 265, 1178, 1179, 0, 266,
	530, 531, 532, 1180, 267, 268, 533, 1181, 1248, 1182,
	269, 270, 271, 272, 273, 274, 275, 0, 1183, 277,
	278, 279, 276, 1184, 280, 0, 281, 282, 283, 1185,
	284, 1041, 285, 286, 1186, 1187, 1189, 1188, 1190, 1191,
	1192, 287, 288, 289, 290, 0, 291, 534, 535, 1193,
	295, 292, 293, 1194, 296, 294, 1195, 297, 298, 299,
	1196, 1197, 300, 301, 302, 1198, 303, 304, 1199, 305,
	306, 307, 1200, 308, 309, 536, 310, 311, 312, 314,
	316, 313, 317, 318, 319, 320, 537, 538, 1201, 241,
	1202, 0, 0, 0, 0, 321, 322, 323, 539, 0,
	0, 0, 324, 1203, 325, 1204, 1205, 1042, 326, 327,
	540, 541, 328, 329, 1206, 330, 542, 1207, 543, 331,
	1208, 332, 333, 334, 335, 336, 544, 545, 546, 393,
	1044, 337, 338, 1209, 339, 340, 341, 342, 0, 0,
	0, 242, 343, 344, 346, 1210, 1043, 345, 547, 548,
	1211, 549, 1212, 347, 348, 1045, 550, 1046, 349, 350,
	351, 1047, 352, 0, 0, 0, 353, 354, 355, 356,
	357, 358, 1213, 359, 361, 360, 1214, 362, 551, 1048,
	363, 364, 1049, 1215, 365, 366, 367, 1216, 1217, 368,
	369, 370, 371, 0, 372, 373, 375, 377, 374, 376,
	381, 378, 379, 380, 383, 0, 382, 1050, 384, 385,
	386, 389, 390, 388, 1051, 387, 1218, 243, 1052, 391,
	1219, 552, 392, 553, 394, 395, 1220, 0, 396, 0,
	1221, 1222, 398, 399, 400, 1223, 1224, 401, 402, 554,
	1053, 403, 1054, 555, 404, 405, 397, 406, 407, 408,
	409, 410, 411, 412, 413, 1225, 414, 415, 556, 557,
	558, 416, 559, 417, 418, 1226, 419, 0, 420, 421,
	422, 423, 424, 425, 426, 560, 428, 427, 429, 1227,
	0, 0, 0, 0, 0, 430, 0, 432, 433, 434,
	431, 435, 436, 437, 438, 1228, 439, 440, 441, 1055,
	442, 443, 444, 445, 561, 446, 0, 447, 448, 454,
	455, 449, 450, 456, 457, 458, 459, 460, 1229, 462,
	463, 461, 464, 465, 466, 1230, 467, 451, 452, 468,
	469, 1056, 470, 471, 472, 473, 474, 475, 562, 0,
	476, 1231, 477, 478, 479, 480, 453, 481, 486, 563,
	482, 483, 484, 485, 564, 1232, 488, 489, 0, 487,
	1233, 490, 491, 492, 493, 494, 495, 315, 496, 1234,
	497, 565, 566, 567, 568, 1235, 504, 1236, 498, 499,
	569, 500, 570, 1237, 501, 502, 503, 0, 505, 506,
	1238, 1239, 507, 508, 509, 511, 512, 510, 513, 1240,
	514, 1241, 0, 515, 516, 517, 571, 572, 573, 1242,
	519, 518, 574, 1243, 1244, 1245, 1246, 520, 521, 575,
	522, 523, 524, 1162, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3039,
	244, 245, 246, 247, 248, 249, 1168, 250, 251, 1169,
	1170, 1171, 0, 1172, 525, 1173, 1174, 1175, 1176, 252,
	253, 255, 254, 256, 257, 258, 526, 527, 0, 259,
	528, 260, 529, 1177, 261, 262, 263, 264, 265, 1178,
	1179, 0, 266, 530, 531, 532, 1180, 267, 268, 533,
	1181, 1248, 1182, 269, 270, 271, 272, 273, 274, 275,
	0, 1183, 277, 278, 279, 276, 1184, 280, 0, 281,
	282, 283, 1185, 284, 1041, 285, 286, 1186, 1187, 1189,
	1188, 1190, 1191, 1192, 287, 288, 289, 290, 0, 291,
	534, 535, 1193, 295, 292, 293, 1194, 296, 294, 1195,
	297, 298, 299, 1196, 1197, 300, 301, 302, 1198, 303,
	304, 1199, 305, 306, 307, 1200, 308, 309, 536, 310,
	311, 312, 314, 316, 313, 317, 318, 319, 320, 537,
	538, 1201, 241, 1202, 0, 0, 0, 0, 321, 322,
	323, 539, 0, 0, 0, 324, 1203, 325, 1204, 1205,
	1042, 326, 327, 540, 541, 328, 329, 1206, 330, 542,
	1207, 543, 331, 1208, 332, 333, 334, 335, 336, 544,
	545, 546, 393, 1044, 337, 338, 1209, 339, 340, 341,
	342, 0, 0, 0, 242, 343, 344, 346, 1210, 1043,
	345, 547, 548, 1211, 549, 1212, 347, 348, 1045, 550,
	1046, 349, 350, 351, 1047, 352, 0, 0, 0, 353,
	354, 355, 356, 357, 358, 1213, 359, 361, 360, 1214,
	362, 551, 1048, 363, 364, 1049, 1215, 365, 366, 367,
	1216, 1217, 368, 369, 370, 371, 0, 372, 373, 375,
	377, 374, 376, 381, 378, 379, 380, 383, 0, 382,
	1050, 384, 385, 386, 389, 390, 388, 1051, 387, 1218,
	243, 1052, 391, 1219, 552, 392, 553, 394, 395, 1220,
	0, 396, 0, 1221, 1222, 398, 399, 400, 1223, 1224,
	401, 402, 554, 1053, 403, 1054, 555, 404, 405, 397,
	406, 407, 408, 409, 410, 411, 412, 413, 1225, 414,
	415, 556, 557, 558, 416, 559, 417, 418, 1226, 419,
	0, 420, 421, 422, 423, 424, 425, 426, 560, 428,
	427, 429, 1227, 0, 0, 0, 0, 0, 430, 0,
	432, 433, 434, 431, 435, 436, 437, 438, 1228, 439,
	440, 441, 1055, 442, 443, 444, 445, 561, 446, 0,
	447, 448, 454, 455, 449, 450, 456, 457, 458, 459,
	460, 1229, 462, 463, 461, 464, 465, 466, 1230, 467,
	451, 452, 468, 469, 1056, 470, 471, 472, 473, 474,
	475, 562, 0, 476, 1231, 477, 478, 479, 480, 453,
	481, 486, 563, 482, 483, 484, 485, 564, 1232, 488,
	489, 0, 487, 1233, 490, 491, 492, 493, 494, 495,
	315, 496, 1234, 497, 565, 566, 567, 568, 1235, 504,
	1236, 498, 499, 569, 500, 570, 1237, 501, 502, 503,
	0, 505, 506, 1238, 1239, 507, 508, 509, 511, 512,
	510, 513, 1240, 514, 1241, 0, 515, 516, 517, 571,
	572, 573, 1242, 519, 518, 574, 1243, 1244, 1245, 1246,
	520, 521, 575, 522, 523, 524, 1162, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2263, 244, 245, 246, 247, 248, 249, 1168,
	250, 251, 1169, 1170, 1171, 0, 1172, 525, 1173, 1174,
	1175, 1176, 252, 253, 255, 254, 256, 257, 258, 526,
	527, 0, 259, 528, 260, 529, 1177, 261, 262, 263,
	264, 265, 1178, 1179, 0, 266, 530, 531, 532, 1180,
	267, 268, 533, 1181, 1248, 1182, 269, 270, 271, 272,
	273, 274, 275, 0, 1183, 277, 278, 279, 276, 1184,
	280, 0, 281, 282, 283, 1185, 284, 1041, 285, 286,
	1186, 1187, 1189, 1188, 1190, 1191, 1192, 287, 288, 289,
	290, 0, 291, 534, 535, 1193, 295, 292, 293, 1194,
	296, 294, 1195, 297, 298, 299, 1196, 1197, 300, 301,
	302, 1198, 303, 304, 1199, 305, 306, 307, 1200, 308,
	309, 536, 310, 311, 312, 314, 316, 313, 317, 318,
	319, 320, 537, 538, 1201, 241, 1202, 0, 0, 0,
	0, 321, 322, 323, 539, 0, 0, 0, 324, 1203,
	325, 1204, 1205, 1042, 326, 327, 540, 541, 328, 329,
	1206, 330, 542, 1207, 543, 331, 1208, 332, 333, 334,
	335, 336, 544, 545, 546, 393, 1044, 337, 338, 1209,
	339, 340, 341, 342, 0, 0, 0, 242, 343, 344,
	346, 1210, 1043, 345, 547, 548, 1211, 549, 1212, 347,
	348, 1045, 550, 1046, 349, 350, 351, 1047, 352, 0,
	0, 0, 353, 354, 355, 356, 357, 358, 1213, 359,
	361, 360, 1214, 362, 551, 1048, 363, 364, 1049, 1215,
	365, 366, 367, 1216, 1217, 368, 369, 370, 371, 0,
	372, 373, 375, 377, 374, 376, 381, 378, 379, 380,
	383, 0, 382, 1050, 384, 385, 386, 389, 390, 388,
	1051, 387, 1218, 243, 1052, 391, 1219, 552, 392, 553,
	394, 395, 1220, 0, 396, 0, 1221, 1222, 398, 399,
	400, 1223, 1224, 401, 402, 554, 1053, 403, 1054, 555,
	404, 405, 397, 406, 407, 408, 409, 410, 411, 412,
	413, 1225, 414, 415, 556, 557, 558, 416, 559, 417,
	418, 1226, 419, 0, 420, 421, 422, 423, 424, 425,
	426, 560, 428, 427, 429, 1227, 0, 0, 0, 0,
	0, 430, 0, 432, 433, 434, 431, 435, 436, 437,
	438, 1228, 439, 440, 441, 1055, 442, 443, 444, 445,
	561, 446, 0, 447, 448, 454, 455, 449, 450, 456,
	457, 458, 459, 460, 1229, 462, 463, 461, 464, 465,
	466, 1230, 467, 451, 452, 468, 469, 1056, 470, 471,
	472, 473, 474, 475, 562, 0, 476, 1231, 477, 478,
	479, 480, 453, 481, 486, 563, 482, 483, 484, 485,
	564, 1232, 488, 489, 0, 487, 1233, 490, 491, 492,
	493, 494, 495, 315, 496, 1234, 497, 565, 566, 567,
	568, 1235, 504, 1236, 498, 499, 569, 500, 570, 1237,
	501, 502, 503, 0, 505, 506, 1238, 1239, 507, 508,
	509, 511, 512, 510, 513, 1240, 514, 1241, 0, 515,
	516, 517, 571, 572, 573, 1242, 519, 518, 574, 1243,
	1244, 1245, 1246, 520, 521, 575, 522, 523, 524, 1260,
	0, 1162, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1946, 0, 0, 244, 245,
	246, 247, 248, 249, 1168, 250, 251, 1169, 1170, 1171,
	0, 1172, 525, 1173, 1174, 1175, 1176, 252, 253, 255,
	254, 256, 257, 258, 526, 527, 0, 259, 528, 260,
	529, 1177, 261, 262, 263, 264, 265, 1178, 1179, 0,
	266, 530, 531, 532, 1180, 267, 268, 533, 1181, 1248,
	1182, 269, 270, 271, 272, 273, 274, 275, 0, 1183,
	277, 278, 279, 276, 1184, 280, 0, 281, 282, 283,
	1185, 284, 1041, 285, 286, 1186, 1187, 1189, 1188, 1190,
	1191, 1192, 287, 288, 289, 290, 0, 291, 534, 535,
	1193, 295, 292, 293, 1194, 296, 294, 1195, 297, 298,
	299, 1196, 1197, 300, 301, 302, 1198, 303, 304, 1199,
	305, 306, 307, 1200, 308, 309, 536, 310, 311, 312,
	314, 316, 313, 317, 318, 319, 320, 537, 538, 1201,
	241, 1202, 0, 0, 0, 0, 321, 322, 323, 539,
	0, 0, 0, 324, 1203, 325, 1204, 1205, 1042, 326,
	327, 540, 541, 328, 329, 1206, 330, 542, 1207, 543,
	331, 1208, 332, 333, 334, 335, 336, 544, 545, 546,
	393, 1044, 337, 338, 1209, 339, 340, 341, 342, 0,
	0, 0, 242, 343, 344, 346, 1210, 1043, 345, 547,
	548, 1211, 549, 1212, 347, 348, 1045, 550, 1046, 349,
	350, 351, 1047, 352, 0, 0, 0, 353, 354, 355,
	356, 357, 358, 1213, 359, 361, 360, 1214, 362, 551,
	1048, 363, 364, 1049, 1215, 365, 366, 367, 1216, 1217,
	368, 369, 370, 371, 0, 372, 373, 375, 377, 374,
	376, 381, 378, 379, 380, 383, 0, 382, 1050, 384,
	385, 386, 389, 390, 388, 1051, 387, 1218, 243, 1052,
	391, 1219, 552, 392, 553, 394, 395, 1220, 0, 396,
	0, 1221, 1222, 398, 399, 400, 1223, 1224, 401, 402,
	554, 1053, 403, 1054, 555, 404, 405, 397, 406, 407,
	408, 409, 410, 411, 412, 413, 1225, 414, 415, 556,
	557, 558, 416, 559, 417, 418, 1226, 419, 0, 420,
	421, 422, 423, 424, 425, 426, 560, 428, 427, 429,
	1227, 0, 0, 0, 0, 0, 430, 0, 432, 433,
	434, 431, 435, 436, 437, 438, 1228, 439, 440, 441,
	1055, 442, 443, 444, 445, 561, 446, 0, 447, 448,
	454, 455, 449, 450, 456, 457, 458, 459, 460, 1229,
	462, 463, 461, 464, 465, 466, 1230, 467, 451, 452,
	468, 469, 1056, 470, 471, 472, 473, 474, 475, 562,
	0, 476, 1231, 477, 478, 479, 480, 453, 481, 486,
	563, 482, 483, 484, 485, 564, 1232, 488, 489, 0,
	487, 1233, 490, 491, 492, 493, 494, 495, 315, 496,
	1234, 497, 565, 566, 567, 568, 1235, 504, 1236, 498,
	499, 569, 500, 570, 1237, 501, 502, 503, 0, 505,
	506, 1238, 1239, 507, 508, 509, 511, 512, 510, 513,
	1240, 514, 1241, 0, 515, 516, 517, 571, 572, 573,
	1242, 519, 518, 574, 1243, 1244, 1245, 1246, 520, 521,
	575, 522, 523, 524, 1159, 0, 1162, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 244, 245, 246, 247, 248, 249, 1168,
	250, 251, 1169, 1170, 1171, 0, 1172, 525, 1173, 1174,
	1175, 1176, 252, 253, 255, 254, 256, 257, 258, 526,
	527, 0, 259, 528, 260, 529, 1177, 261, 262, 263,
	264, 265, 1178, 1179, 0, 266, 530, 531, 532, 1180,
	267, 268, 533, 1181, 1248, 1182, 269, 270, 271, 272,
	273, 274, 275, 0, 1183, 277, 278, 279, 276, 1184,
	280, 0, 281, 282, 283, 1185, 284, 1041, 285, 286,
	1186, 1187, 1189, 1188, 1190, 1191, 1192, 287, 288, 289,
	290, 0, 291, 534, 535, 1193, 295, 292, 293, 1194,
	296, 294, 1195, 297, 298, 299, 1196, 1197, 300, 301,
	302, 1198, 303, 304, 1199, 305, 306, 307, 1200, 308,
	309, 536, 310, 311, 312, 314, 316, 313, 317, 318,
	319, 320, 537, 538, 1201, 241, 1202, 0, 0, 0,
	0, 321, 322, 323, 539, 0, 0, 0, 324, 1203,
	325, 1204, 1205, 1042, 326, 327, 540, 541, 328, 329,
	1206, 330, 542, 1207, 543, 331, 1208, 332, 333, 334,
	335, 336, 544, 545, 546, 393, 1044, 337, 338, 1209,
	339, 340, 341, 342, 0, 0, 0, 242, 343, 344,
	346, 1210, 1043, 345, 547, 548, 1211, 549, 1212, 347,
	348, 1045, 550, 1046, 349, 350, 351, 1047, 352, 0,
	0, 0, 353, 354, 355, 356, 357, 358, 1213, 359,
	361, 360, 1214, 362, 551, 1048, 363, 364, 1049, 1215,
	365, 366, 367, 1216, 1217, 368, 369, 370, 371, 0,
	372, 373, 375, 377, 374, 376, 381, 378, 379, 380,
	383, 0, 382, 1050, 384, 385, 386, 389, 390, 388,
	1051, 387, 1218, 243, 1052, 391, 1219, 552, 392, 553,
	394, 395, 1220, 0, 396, 0, 1221, 1222, 398, 399,
	400, 1223, 1224, 401, 402, 554, 1053, 403, 1054, 555,
	404, 405, 397, 406, 407, 408, 409, 410, 411, 412,
	413, 1225, 414, 415, 556, 557, 558, 416, 559, 417,
	418, 1226, 419, 0, 420, 421, 422, 423, 424, 425,
	426, 560, 428, 427, 429, 1227, 0, 0, 0, 0,
	0, 430, 0, 432, 433, 434, 431, 435, 436, 437,
	438, 1228, 439, 440, 441, 1055, 442, 443, 444, 445,
	561, 446, 0, 447, 448, 454, 455, 449, 450, 456,
	457, 458, 459, 460, 1229, 462, 463, 461, 464, 465,
	466, 1230, 467, 451, 452, 468, 469, 1056, 470, 471,
	472, 473, 474, 475, 562, 0, 476, 1231, 477, 478,
	479, 480, 453, 481, 486, 563, 482, 483, 484, 485,
	564, 1232, 488, 489, 0, 487, 1233, 490, 491, 492,
	493, 494, 495, 315, 496, 1234, 497, 565, 566, 567,
	568, 1235, 504, 1236, 498, 499, 569, 500, 570, 1237,
	501, 502, 503, 0, 505, 506, 1238, 1239, 507, 508,
	509, 511, 512, 510, 513, 1240, 514, 1241, 0, 515,
	516, 517, 571, 572, 573, 1242, 519, 518, 574, 1243,
	1244, 1245, 1246, 520, 521, 575, 522, 523, 524, 1162,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 244, 245, 246, 247,
	248, 249, 1168, 250, 251, 1169, 1170, 1171, 0, 1172,
	525, 1173, 1174, 1175, 1176, 252, 253, 255, 254, 256,
	257, 258, 526, 527, 0, 259, 528, 260, 529, 1177,
	261, 262, 263, 264, 265, 1178, 1179, 0, 266, 530,
	531, 532, 1180, 267, 268, 533, 1181, 1248, 1182, 269,
	270, 271, 272, 273, 274, 275, 0, 1183, 277, 278,
	279, 276, 1184, 280, 0, 281, 282, 283, 1185, 284,
	1041, 285, 286, 1186, 1187, 1189, 1188, 1190, 1191, 1192,
	287, 288, 289, 290, 0, 291, 534, 535, 1193, 295,
	292, 293, 1194, 296, 294, 1195, 297, 298, 299, 1196,
	1197, 300, 301, 302, 1198, 303, 304, 1199, 305, 306,
	307, 1200, 308, 309, 536, 310, 311, 312, 314, 316,
	313, 317, 318, 319, 320, 537, 538, 1201, 241, 1202,
	0, 0, 0, 0, 321, 322, 323, 539, 0, 0,
	0, 324, 1203, 325, 1204, 1205, 1042, 326, 327, 540,
	541, 328, 329, 1206, 330, 542, 1207, 543, 331, 1208,
	332, 333, 334, 335, 336, 544, 545, 546, 393, 1044,
	337, 338, 1209, 339, 340, 341, 342, 0, 0, 0,
	242, 343, 344, 346, 1210, 1043, 345, 547, 548, 1211,
	549, 1212, 347, 348, 1045, 550, 1046, 349, 350, 351,
	1047, 352, 0, 0, 0, 353, 354, 355, 356, 357,
	358, 1213, 359, 361, 360, 1214, 362, 551, 1048, 363,
	364, 1049, 1215, 365, 366, 367, 1216, 1217, 368, 369,
	370, 371, 0, 372, 373, 375, 377, 374, 376, 381,
	378, 379, 380, 383, 0, 382, 1050, 384, 385, 386,
	389, 390, 388, 1051, 387, 1218, 243, 1052, 391, 1219,
	552, 392, 553, 394, 395, 1220, 0, 396, 0, 1221,
	1222, 398, 399, 400, 1223, 1224, 401, 402, 554, 1053,
	403, 1054, 555, 404, 405, 397, 406, 407, 408, 409,
	410, 411, 412, 413, 1225, 414, 415, 556, 557, 558,
	416, 559, 417, 418, 1226, 419, 0, 420, 421, 422,
	423, 424, 425, 426, 560, 428, 427, 429, 1227, 0,
	0, 0, 0, 0, 430, 0, 432, 433, 434, 431,
	435, 436, 437, 438, 1228, 439, 440, 441, 1055, 442,
	443, 444, 445, 561, 446, 0, 447, 448, 454, 455,
	449, 450, 456, 457, 458, 459, 460, 1229, 462, 463,
	461, 464, 465, 466, 1230, 467, 451, 452, 468, 469,
	1056, 470, 471, 472, 473, 474, 475, 562, 0, 476,
	1231, 477, 478, 479, 480, 453, 481, 486, 563, 482,
	483, 484, 485, 564, 1232, 488, 489, 0, 487, 1233,
	490, 491, 492, 493, 494, 495, 315, 496, 1234, 497,
	565, 566, 567, 568, 1235, 504, 1236, 498, 499, 569,
	500, 570, 1237, 501, 502, 503, 0, 505, 506, 1238,
	1239, 507, 508, 509, 511, 512, 510, 513, 1240, 514,
	1241, 0, 515, 516, 517, 571, 572, 573, 1242, 519,
	518, 574, 1243, 1244, 1245, 1246, 520, 521, 575, 522,
	523, 524, 2238, 0, 978, 950, 951, 952, 948, 949,
	961, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 244, 245, 246, 247, 248, 249, 2235, 250, 251,
	0, 0, 0, 0, 0, 1002, 966, 0, 0, 0,
	252, 253, 255, 254, 256, 257, 258, 526, 1015, 0,
	259, 1022, 260, 1021, 0, 261, 262, 263, 264, 265,
	968, 1001, 935, 266, 1060, 1061, 532, 0, 267, 268,
	1008, 0, 989, 0, 269, 270, 271, 272, 273, 274,
	275, 0, 0, 277, 278, 279, 276, 0, 280, 0,
	281, 282, 283, 0, 284, 1041, 285, 286, 992, 990,
	991, 998, 994, 993, 997, 287, 288, 289, 290, 1025,
	291, 1019, 1018, 939, 295, 292, 293, 0, 296, 294,
	0, 297, 298, 299, 2236, 0, 300, 1010, 302, 0,
	303, 304, 0, 305, 306, 307, 0, 308, 309, 945,
	310, 311, 312, 314, 316, 313, 317, 318, 319, 320,
	1032, 1033, 957, 241, 0, 0, 0, 0, 0, 321,
	322, 323, 1017, 0, 0, 0, 324, 0, 325, 0,
	0, 1042, 326, 327, 1030, 1031, 328, 329, 0, 330,
	1039, 0, 967, 331, 0, 332, 333, 334, 335, 336,
	1003, 1004, 1007, 393, 1044, 337, 338, 0, 339, 340,
	341, 342, 0, 0, 0, 242, 343, 344, 346, 0,
	1043, 345, 1012, 1013, 0, 973, 0, 347, 348, 1045,
	1005, 1046, 349, 350, 351, 1047, 352, 0, 0, 0,
	353, 354, 355, 356, 357, 358, 0, 359, 361, 360,
	0, 362, 1040, 1048, 363, 364, 1049, 0, 365, 366,
	367, 996, 995, 368, 369, 370, 371, 0, 372, 373,
	375, 377, 374, 376, 381, 378, 379, 380, 383, 0,
	382, 1050, 384, 385, 386, 389, 390, 388, 1051, 387,
	936, 243, 1052, 391, 958, 1006, 392, 1020, 394, 395,
	0, 0, 396, 0, 0, 0, 398, 399, 400, 0,
	0, 401, 402, 554, 1053, 403, 1054, 1034, 404, 405,
	397, 406, 407, 408, 409, 410, 411, 412, 413, 0,
	414, 415, 556, 557, 1035, 416, 559, 417, 418, 0,
	419, 0, 420, 421, 422, 423, 424, 425, 426, 1016,
	428, 427, 429, 0, 0, 0, 0, 0, 0, 430,
	0, 432, 433, 434, 431, 435, 436, 437, 438, 0,
	439, 440, 441, 1055, 442, 443, 444, 445, 946, 446,
	0, 447, 448, 454, 455, 449, 450, 456, 457, 458,
	459, 460, 0, 462, 463, 461, 464, 465, 466, 999,
	467, 451, 452, 468, 469, 1056, 470, 471, 472, 473,
	474, 475, 1014, 0, 476, 0, 477, 478, 479, 480,
	453, 481, 486, 1059, 482, 483, 484, 485, 1036, 0,
	488, 489, 934, 487, 0, 490, 491, 492, 493, 494,
	495, 315, 496, 0, 497, 1026, 1027, 1028, 1029, 0,
	504, 0, 498, 499, 1037, 500, 1038, 956, 501, 502,
	503, 0, 505, 506, 0, 940, 507, 508, 509, 511,
	512, 510, 513, 1000, 514, 0, 0, 515, 516, 517,
	571, 1023, 1058, 2234, 519, 518, 574, 0, 0, 0,
	0, 520, 521, 575, 522, 523, 524, 937, 0, 0,
	0, 0, 0, 0, 933, 0, 0, 0, 0, 0,
	0, 931, 932, 2237, 0, 0, 0, 0, 0, 0,
	962, 2233, 0, 924, 960, 978, 950, 951, 952, 948,
	949, 961, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 244, 245, 246, 247, 248, 249, 0, 250,
	251, 0, 0, 0, 0, 0, 1002, 966, 0, 0,
	0, 252, 253, 255, 254, 256, 257, 258, 526, 1015,
	0, 259, 1022, 260, 1021, 0, 261, 262, 263, 264,
	265, 968, 1001, 935, 266, 1060, 1061, 532, 0, 267,
	268, 1008, 0, 989, 0, 269, 270, 271, 272, 273,
	274, 275, 0, 0, 277, 278, 279, 276, 0, 280,
	0, 281, 282, 283, 0, 284, 1041, 285, 286, 992,
	990, 991, 998, 994, 993, 997, 287, 288, 289, 290,
	1025, 291, 1019, 1018, 939, 295, 292, 293, 0, 296,
	294, 0, 297, 298, 299, 0, 0, 300, 1010, 302,
	0, 303, 304, 0, 305, 306, 307, 0, 308, 309,
	945, 310, 311, 312, 314, 316, 313, 317, 318, 319,
	320, 1032, 1033, 957, 241, 0, 0, 0, 0, 0,
	321, 322, 323, 1017, 0, 0, 0, 324, 0, 325,
	0, 0, 1042, 326, 327, 1030, 1031, 328, 329, 0,
	330, 1039, 0, 967, 331, 0, 332, 333, 334, 335,
	336, 1003, 1004, 1007, 393, 1044, 337, 338, 0, 339,
	340, 341, 342, 0, 0, 0, 242, 343, 344, 346,
	0, 1043, 345, 1012, 1013, 0, 973, 0, 347, 348,
	1045, 1005, 1046, 349, 350, 351, 1047, 352, 0, 0,
	0, 353, 354, 355, 356, 357, 358, 0, 359, 361,
	360, 0, 362, 1040, 1048, 363, 364, 1049, 0, 365,
	366, 367, 996, 995, 368, 369, 370, 371, 0, 372,
	373, 375, 377, 374, 376, 381, 378, 379, 380, 383,
	0, 382, 1050, 384, 385, 386, 389, 390, 388, 1051,
	387, 936, 243, 1052, 391, 958, 1006, 392, 1020, 394,
	395, 0, 0, 396, 0, 0, 0, 398, 399, 400,
	0, 0, 401, 402, 554, 1053, 403, 1054, 1034, 404,
	405, 397, 406, 407, 408, 409, 410, 411, 412, 413,
	0, 414, 415, 556, 557, 1035, 416, 559, 417, 418,
	0, 419, 0, 420, 421, 422, 423, 424, 425, 426,
	1016, 428, 427, 429, 0, 0, 0, 0, 0, 0,
	430, 0, 432, 433, 434, 431, 435, 436, 437, 438,
	0, 439, 440, 441, 1055, 442, 443, 444, 445, 946,
	446, 0, 447, 448, 454, 455, 449, 450, 456, 457,
	458, 459, 460, 206, 462, 463, 461, 464, 465, 466,
	999, 467, 451, 452, 468, 469, 1056, 470, 471, 472,
	473, 474, 475, 1014, 0, 476, 0, 477, 478, 479,
	480, 453, 481, 486, 1059, 482, 483, 484, 485, 1036,
	0, 488, 489, 934, 487, 208, 490, 491, 492, 493,
	494, 495, 315, 496, 0, 497, 1026, 1027, 1028, 1029,
	0, 504, 0, 498, 499, 1037, 500, 1038, 956, 501,
	502, 503, 0, 505, 506, 0, 940, 507, 508, 509,
	511, 512, 510, 513, 1000, 514, 0, 0, 515, 516,
	517, 1431, 1023, 1058, 0, 519, 518, 574, 0, 0,
	0, 200, 520, 521, 575, 522, 523, 524, 937, 201,
	0, 0, 0, 0, 0, 933, 0, 0, 0, 0,
	0, 0, 931, 932, 978, 950, 951, 952, 948, 949,
	961, 1665, 1663, 0, 0, 960, 0, 0, 0, 0,
	0, 244, 245, 246, 247, 248, 249, 0, 250, 251,
	0, 0, 0, 0, 0, 1002, 966, 0, 0, 0,
	252, 253, 255, 254, 256, 257, 258, 526, 1015, 0,
	259, 1022, 260, 1021, 0, 261, 262, 263, 264, 265,
	968, 1001, 935, 266, 1060, 1061, 532, 0, 267, 268,
	1008, 0, 989, 0, 269, 270, 271, 272, 273, 274,
	275, 0, 0, 277, 278, 279, 276, 0, 280, 0,
	281, 282, 283, 0, 284, 1041, 285, 286, 992, 990,
	991, 998, 994, 993, 997, 287, 288, 289, 290, 1025,
	291, 1019, 1018, 939, 295, 292, 293, 0, 296, 294,
	0, 297, 298, 299, 0, 0, 300, 1010, 302, 0,
	303, 304, 0, 305, 306, 307, 0, 308, 309, 945,
	310, 311, 312, 314, 316, 313, 317, 318, 319, 320,
	1032, 1033, 957, 241, 0, 0, 0, 0, 0, 321,
	322, 323, 1017, 0, 0, 0, 324, 0, 325, 0,
	0, 1042, 326, 327, 1030, 1031, 328, 329, 0, 330,
	1039, 0, 967, 331, 0, 332, 333, 334, 335, 336,
	1003, 1004, 1007, 393, 1044, 337, 338, 0, 339, 340,
	341, 342, 0, 0, 0, 242, 343, 344, 346, 0,
	1043, 345, 1012, 1013, 0, 973, 0, 347, 348, 1045,
	1005, 1046, 349, 350, 351, 1047, 352, 0, 0, 0,
	353, 354, 355, 356, 357, 358, 0, 359, 361, 360,
	0, 362, 1040, 1048, 363, 364, 1049, 0, 365, 366,
	367, 996, 995, 368, 369, 370, 371, 0, 372, 373,
	375, 377, 374, 376, 381, 378, 379, 380, 383, 0,
	382, 1050, 384, 385, 386, 389, 390, 388, 1051, 387,
	936, 243, 1052, 391, 958, 1006, 392, 1020, 394, 395,
	0, 0, 396, 0, 0, 0, 398, 399, 400, 0,
	0, 401, 402, 554, 1053, 403, 1054, 1034, 404, 405,
	397, 406, 407, 408, 409, 410, 411, 412, 413, 0,
	414, 415, 556, 557, 1035, 416, 559, 417, 418, 0,
	419, 0, 420, 421, 422, 423, 424, 425, 426, 1016,
	428, 427, 429, 0, 0, 0, 0, 0, 0, 430,
	0, 432, 433, 434, 431, 435, 436, 437, 438, 0,
	439, 440, 441, 1055, 442, 443, 444, 445, 946, 446,
	0, 447, 448, 454, 455, 449, 450, 456, 457, 458,
	459, 460, 206, 462, 463, 461, 464, 465, 466, 999,
	467, 451, 452, 468, 469, 1056, 470, 471, 472, 473,
	474, 475, 1014, 0, 476, 0, 477, 478, 479, 480,
	453, 481, 486, 1059, 482, 483, 484, 485, 1036, 0,
	488, 489, 934, 487, 208, 490, 491, 492, 493, 494,
	495, 315, 496, 0, 497, 1026, 1027, 1028, 1029, 0,
	504, 0, 498, 499, 1037, 500, 1038, 956, 501, 502,
	503, 0, 505, 506, 0, 940, 507, 508, 509, 511,
	512, 510, 513, 1000, 514, 0, 0, 515, 516, 517,
	1431, 1023, 1058, 0, 519, 518, 574, 0, 0, 0,
	200, 520, 521, 575, 522, 523, 524, 937, 201, 0,
	0, 0, 0, 0, 933, 0, 0, 0, 0, 0,
	0, 931, 932, 978, 950, 951, 952, 948, 949, 961,
	1665, 2750, 0, 0, 960, 0, 0, 0, 0, 0,
	244, 245, 246, 247, 248, 249, 0, 250, 251, 0,
	0, 0, 0, 0, 1002, 966, 0, 0, 0, 252,
	253, 255, 254, 256, 257, 258, 526, 1015, 0, 259,
	1022, 260, 1021, 0, 261, 262, 263, 264, 265, 968,
	1001, 935, 266, 1060, 1061, 532, 0, 267, 268, 1008,
	0, 989, 0, 269, 270, 271, 272, 273, 274, 275,
	0, 0, 277, 278, 279, 276, 0, 280, 0, 281,
	282, 283, 0, 284, 1041, 285, 286, 992, 990, 991,
	998, 994, 993, 997, 287, 288, 289, 290, 1025, 291,
	1019, 1018, 939, 295, 292, 293, 0, 296, 294, 0,
	297, 298, 299, 0, 0, 300, 1010, 302, 0, 303,
	304, 0, 305, 306, 307, 0, 308, 309, 945, 310,
	311, 312, 314, 316, 313, 317, 318, 319, 320, 1032,
	1033, 957, 241, 0, 0, 0, 0, 0, 321, 322,
	323, 1017, 0, 0, 0, 324, 0, 325, 0, 0,
	1042, 326, 327, 1030, 1031, 328, 329, 0, 330, 1039,
	0, 967, 331, 0, 332, 333, 334, 335, 336, 1003,
	1004, 1007, 393, 1044, 337, 338, 0, 339, 340, 341,
	342, 0, 0, 0, 242, 343, 344, 346, 0, 1043,
	345, 1012, 1013, 0, 973, 0, 347, 348, 1045, 1005,
	1046, 349, 350, 351, 1047, 352, 0, 0, 0, 353,
	354, 355, 356, 357, 358, 0, 359, 361, 360, 0,
	362, 1040, 1048, 363, 364, 1049, 0, 365, 366, 367,
	996, 995, 368, 369, 370, 371, 0, 372, 373, 375,
	377, 374, 376, 381, 378, 379, 380, 383, 0, 382,
	1050, 384, 385, 386, 389, 390, 388, 1051, 387, 936,
	243, 1052, 391, 958, 1006, 392, 1020, 394, 395, 0,
	0, 396, 0, 0, 0, 398, 399, 400, 0, 0,
	401, 402, 554, 1053, 403, 1054, 1034, 404, 405, 397,
	406, 407, 408, 409, 410, 411, 412, 413, 0, 414,
	415, 556, 557, 1035, 416, 559, 417, 418, 0, 419,
	0, 420, 421, 422, 423, 424, 425, 426, 1016, 428,
	427, 429, 0, 0, 0, 0, 0, 0, 430, 0,
	432, 433, 434, 431, 435, 436, 437, 438, 0, 439,
	440, 441, 1055, 442, 443, 444, 445, 946, 446, 0,
	447, 448, 454, 455, 449, 450, 456, 457, 458, 459,
	460, 206, 462, 463, 461, 464, 465, 466, 999, 467,
	451, 452, 468, 469, 1056, 470, 471, 472, 473, 474,
	475, 1014, 0, 476, 0, 477, 478, 479, 480, 453,
	481, 486, 1059, 482, 483, 484, 485, 1036, 0, 488,
	489, 934, 487, 208, 490, 491, 492, 493, 494, 495,
	315, 496, 0, 497, 1026, 1027, 1028, 1029, 0, 504,
	0, 498, 499, 1037, 500, 1038, 956, 501, 502, 503,
	0, 505, 506, 0, 940, 507, 508, 509, 511, 512,
	510, 513, 1000, 514, 0, 0, 515, 516, 517, 1431,
	1023, 1058, 0, 519, 518, 574, 0, 0, 0, 200,
	520, 521, 575, 522, 523, 524, 937, 201, 0, 0,
	0, 0, 0, 933, 0, 0, 0, 0, 0, 0,
	931, 932, 978, 950, 951, 952, 948, 949, 961, 1665,
	1663, 0, 0, 960, 0, 0, 0, 0, 0, 244,
	245, 246, 247, 248, 249, 0, 250, 251, 0, 0,
	0, 0, 0, 1002, 966, 0, 0, 0, 252, 253,
	255, 254, 256, 257, 258, 526, 1015, 0, 259, 1022,
	260, 1021, 2342, 261, 262, 263, 264, 265, 968, 1001,
	935, 266, 1060, 1061, 532, 0, 267, 268, 1008, 0,
	989, 0, 269, 270, 271, 272, 273, 274, 275, 0,
	0, 277, 278, 279, 276, 0, 280, 0, 281, 282,
	283, 0, 284, 1041, 285, 286, 992, 990, 991, 998,
	994, 993, 997, 287, 288, 289, 290, 1025, 291, 1019,
	1018, 939, 295, 292, 293, 0, 296, 294, 0, 297,
	298, 299, 0, 0, 300, 1010, 302, 0, 303, 304,
	0, 305, 306, 307, 0, 308, 309, 945, 310, 311,
	312, 314, 316, 313, 317, 318, 319, 320, 1032, 1033,
	957, 241, 0, 0, 0, 0, 0, 321, 322, 323,
	1017, 0, 0, 0, 324, 0, 325, 0, 2347, 1042,
	326, 327, 1030, 1031, 328, 329, 0, 330, 1039, 0,
	967, 331, 0, 332, 333, 334, 335, 336, 1003, 1004,
	1007, 393, 1044, 337, 338, 0, 339, 340, 341, 342,
	0, 0, 0, 242, 343, 344, 346, 0, 1043, 345,
	1012, 1013, 0, 973, 0, 347, 348, 1045, 1005, 1046,
	349, 350, 351, 1047, 352, 0, 0, 0, 353, 354,
	355, 356, 357, 358, 0, 359, 361, 360, 2343, 362,
	1040, 1048, 363, 364, 1049, 0, 365, 366, 367, 996,
	995, 368, 369, 370, 371, 0, 372, 373, 375, 377,
	374, 376, 381, 378, 379, 380, 383, 0, 382, 1050,
	384, 385, 386, 389, 390, 388, 1051, 387, 936, 243,
	1052, 391, 958, 1006, 392, 1020, 394, 395, 0, 0,
	396, 0, 0, 0, 398, 399, 400, 0, 0, 401,
	402, 554, 1053, 403, 1054, 1034, 404, 405, 397, 406,
	407, 408, 409, 410, 411, 412, 413, 0, 414, 415,
	556, 557, 1035, 416, 559, 417, 418, 0, 419, 0,
	420, 421, 422, 423, 424, 425, 426, 1016, 428, 427,
	429, 0, 0, 0, 0, 0, 0, 430, 0, 432,
	433, 434, 431, 435, 436, 437, 438, 0, 439, 440,
	441, 1055, 442, 443, 444, 445, 946, 446, 0, 447,
	448, 454, 455, 449, 450, 456, 457, 458, 459, 460,
	0, 462, 463, 461, 464, 465, 466, 999, 467, 451,
	452, 468, 469, 1056, 470, 471, 472, 473, 474, 475,
	1014, 0, 476, 0, 477, 478, 479, 480, 453, 481,
	486, 1059, 482, 483, 484, 485, 1036, 0, 488, 489,
	934, 487, 0, 490, 491, 492, 493, 494, 495, 315,
	496, 0, 497, 1026, 1027, 1028, 1029, 0, 504, 2344,
	498, 499, 1037, 500, 1038, 956, 501, 502, 503, 0,
	505, 506, 0, 940, 507, 508, 509, 511, 512, 510,
	513, 1000, 514, 0, 0, 515, 516, 517, 571, 1023,
	1058, 0, 519, 518, 574, 0, 0, 0, 0, 520,
	521, 575, 522, 523, 524, 937, 0, 0, 0, 0,
	0, 0, 933, 0, 0, 0, 0, 0, 0, 931,
	932, 0, 0, 0, 0, 0, 0, 0, 962, 0,
	0, 2283, 960, 978, 950, 951, 952, 948, 949, 961,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	244, 245, 246, 247, 248, 249, 0, 250, 251, 0,
	0, 0, 0, 0, 1002, 966, 0, 0, 0, 252,
	253, 255, 254, 256, 257, 258, 526, 1015, 0, 259,
	1022, 260, 1021, 0, 261, 262, 263, 264, 265, 968,
	1001, 935, 266, 1060, 1061, 532, 0, 267, 268, 1008,
	0, 989, 0, 269, 270, 271, 272, 273, 274, 275,
	0, 0, 277, 278, 279, 276, 0, 280, 0, 281,
	282, 283, 0, 284, 1041, 285, 286, 992, 990, 991,
	998, 994, 993, 997, 287, 288, 289, 290, 1025, 291,
	1019, 1018, 939, 295, 292, 293, 0, 296, 294, 0,
	297, 298, 299, 0, 0, 300, 1010, 302, 0, 303,
	304, 0, 305, 306, 307, 0, 308, 309, 945, 310,
	311, 312, 314, 316, 313, 317, 318, 319, 320, 1032,
	1033, 957, 241, 0, 0, 0, 0, 0, 321, 322,
	323, 1017, 0, 0, 0, 324, 0, 325, 0, 0,
	1042, 326, 327, 1030, 1031, 328, 329, 0, 330, 1039,
	0, 967, 331, 0, 332, 333, 334, 335, 336, 1003,
	1004, 1007, 393, 1044, 337, 338, 0, 339, 340, 341,
	342, 0, 0, 0, 242, 343, 344, 346, 0, 1043,
	345, 1012, 1013, 0, 973, 0, 347, 348, 1045, 1005,
	1046, 349, 350, 351, 1047, 352, 0, 0, 0, 353,
	354, 355, 356, 357, 358, 0, 359, 361, 360, 0,
	362, 1040, 1048, 363, 364, 1049, 0, 365, 366, 367,
	996, 995, 368, 369, 370, 371, 0, 372, 373, 375,
	377, 374, 376, 381, 378, 379, 380, 383, 0, 382,
	1050, 384, 385, 386, 389, 390, 388, 1051, 387, 936,
	243, 1052, 391, 958, 1006, 392, 1020, 394, 395, 0,
	0, 396, 0, 0, 0, 398, 399, 400, 0, 0,
	401, 402, 554, 1053, 403, 1054, 1034, 404, 405, 397,
	406, 407, 408, 409, 410, 411, 412, 413, 0, 414,
	415, 556, 557, 1035, 416, 559, 417, 418, 0, 419,
	0, 420, 421, 422, 423, 424, 425, 426, 1016, 428,
	427, 429, 0, 0, 0, 0, 0, 0, 430, 0,
	432, 433, 434, 431, 435, 436, 437, 438, 0, 439,
	440, 441, 1055, 442, 443, 444, 445, 946, 446, 0,
	447, 448, 454, 455, 449, 450, 456, 457, 458, 459,
	460, 0, 462, 463, 461, 464, 465, 466, 999, 467,
	451, 452, 468, 469, 1056, 470, 471, 472, 473, 474,
	475, 1014, 0, 476, 0, 477, 478, 479, 480, 453,
	481, 486, 1059, 482, 483, 484, 485, 1036, 0, 488,
	489, 934, 487, 0, 490, 491, 492, 493, 494, 495,
	315, 496, 0, 497, 1026, 1027, 1028, 1029, 0, 504,
	0, 498, 499, 1037, 500, 1038, 956, 501, 502, 503,
	0, 505, 506, 0, 940, 507, 508, 509, 511, 512,
	510, 513, 1000, 514, 0, 0, 515, 516, 517, 571,
	1023, 1058, 0, 519, 518, 574, 0, 0, 0, 0,
	520, 521, 575, 522, 523, 524, 937, 0, 0, 0,
	0, 0, 0, 933, 0, 0, 0, 0, 0, 0,
	931, 932, 0, 0, 0, 0, 0, 0, 0, 962,
	2281, 0, 2280, 960, 978, 950, 951, 952, 948, 949,
	961, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 244, 245, 246, 247, 248, 249, 0, 250, 251,
	0, 0, 0, 0, 0, 1002, 966, 0, 0, 0,
	252, 253, 255, 254, 256, 257, 258, 526, 1015, 0,
	259, 1022, 260, 1021, 0, 261, 262, 263, 264, 265,
	968, 1001, 935, 266, 1060, 1061, 532, 0, 267, 268,
	1008, 0, 989, 0, 269, 270, 271, 272, 273, 274,
	275, 0, 0, 277, 278, 279, 276, 0, 280, 0,
	281, 282, 283, 0, 284, 1041, 285, 286, 992, 990,
	991, 998, 994, 993, 997, 287, 288, 289, 290, 1025,
	291, 1019, 1018, 939, 295, 292, 293, 0, 296, 294,
	0, 297, 298, 299, 0, 0, 300, 1010, 302, 0,
	303, 304, 0, 305, 306, 307, 0, 308, 309, 945,
	310, 311, 312, 314, 316, 313, 317, 318, 319, 320,
	1032, 1033, 957, 241, 0, 0, 0, 0, 0, 321,
	322, 323, 1017, 0, 0, 0, 324, 0, 325, 0,
	0, 1042, 326, 327, 1030, 1031, 328, 329, 0, 330,
	1039, 0, 967, 331, 0, 332, 333, 334, 335, 336,
	1003, 1004, 1007, 393, 1044, 337, 338, 0, 339, 340,
	341, 342, 0, 0, 0, 242, 343, 344, 346, 0,
	1043, 345, 1012, 1013, 0, 973, 0, 347, 348, 1045,
	1005, 1046, 349, 350, 351, 1047, 352, 0, 0, 0,
	353, 354, 355, 356, 357, 358, 0, 359, 361, 360,
	0, 362, 1040, 1048, 363, 364, 1049, 0, 365, 366,
	367, 996, 995, 368, 369, 370, 371, 0, 372, 373,
	375, 377, 374, 376, 381, 378, 379, 380, 383, 0,
	382, 1050, 384, 385, 386, 389, 390, 388, 1051, 387,
	936, 243, 1052, 391, 958, 1006, 392, 1020, 394, 395,
	0, 0, 396, 0, 0, 0, 398, 399, 400, 0,
	0, 401, 402, 554, 1053, 403, 1054, 1034, 404, 405,
	397, 406, 407, 408, 409, 410, 411, 412, 413, 0,
	414, 415, 556, 557, 1035, 416, 559, 417, 418, 0,
	419, 0, 420, 421, 422, 423, 424, 425, 426, 1016,
	428, 427, 429, 0, 0, 0, 0, 0, 0, 430,
	0, 432, 433, 434, 431, 435, 436, 437, 438, 0,
	439, 440, 441, 1055, 442, 443, 444, 445, 946, 446,
	0, 447, 448, 454, 455, 449, 450, 456, 457, 458,
	459, 460, 0, 462, 463, 461, 464, 465, 466, 999,
	467, 451, 452, 468, 469, 1056, 470, 471, 472, 473,
	474, 475, 1014, 0, 476, 0, 477, 478, 479, 480,
	453, 481, 486, 1059, 482, 483, 484, 485, 1036, 0,
	488, 489, 934, 487, 0, 490, 491, 492, 493, 494,
	495, 315, 496, 0, 497, 1026, 1027, 1028, 1029, 0,
	504, 0, 498, 499, 1037, 500, 1038, 956, 501, 502,
	503, 0, 505, 506, 0, 940, 507, 508, 509, 511,
	512, 510, 513, 1000, 514, 0, 0, 515, 516, 517,
	571, 1023, 1058, 0, 519, 518, 574, 0, 0, 0,
	0, 520, 521, 575, 522, 523, 524, 937, 0, 0,
	0, 0, 0, 0, 933, 0, 0, 0, 0, 0,
	0, 931, 932, 0, 0, 0, 0, 0, 0, 0,
	962, 2278, 0, 2277, 960, 978, 950, 951, 952, 948,
	949, 961, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 244, 245, 246, 247, 248, 249, 0, 250,
	251, 0, 0, 0, 0, 0, 1002, 966, 0, 0,
	0, 252, 253, 255, 254, 256, 257, 258, 526, 1015,
	0, 259, 1022, 260, 1021, 0, 261, 262, 263, 264,
	265, 968, 1001, 935, 266, 1060, 1061, 532, 0, 267,
	268, 1008, 0, 989, 0, 269, 270, 271, 272, 273,
	274, 275, 0, 0, 277, 278, 279, 276, 0, 280,
	0, 281, 282, 283, 0, 284, 1041, 285, 286, 992,
	990, 991, 998, 994, 993, 997, 287, 288, 289, 290,
	1025, 291, 1019, 1018, 939, 295, 292, 293, 0, 296,
	294, 0, 297, 298, 299, 0, 0, 300, 1010, 302,
	0, 303, 304, 0, 305, 306, 307, 0, 308, 309,
	945, 310, 311, 312, 314, 316, 313, 317, 318, 319,
	320, 1032, 1033, 957, 241, 0, 0, 0, 0, 0,
	321, 322, 323, 1017, 0, 0, 0, 324, 0, 325,
	0, 0, 1042, 326, 327, 1030, 1031, 328, 329, 0,
	330, 1039, 0, 967, 331, 0, 332, 333, 334, 335,
	336, 1003, 1004, 1007, 393, 1044, 337, 338, 0, 339,
	340, 341, 342, 0, 0, 0, 242, 343, 344, 346,
	0, 1043, 345, 1012, 1013, 0, 973, 0, 347, 348,
	1045, 1005, 1046, 349, 350, 351, 1047, 352, 0, 0,
	0, 353, 354, 355, 356, 357, 358, 0, 359, 361,
	360, 0, 362, 1040, 1048, 363, 364, 1049, 0, 365,
	366, 367, 996, 995, 368, 369, 370, 371, 0, 372,
	373, 375, 377, 374, 376, 381, 378, 379, 380, 383,
	0, 382, 1050, 384, 385, 386, 389, 390, 388, 1051,
	387, 936, 243, 1052, 391, 958, 1006, 392, 1020, 394,
	395, 0, 0, 396, 0, 0, 0, 398, 399, 400,
	0, 0, 401, 402, 554, 1053, 403, 1054, 1034, 404,
	405, 397, 406, 407, 408, 409, 410, 411, 412, 413,
	0, 414, 415, 556, 557, 1035, 416, 559, 417, 418,
	0, 419, 0, 420, 421, 422, 423, 424, 425, 426,
	1016, 428, 427, 429, 0, 0, 0, 0, 0, 0,
	430, 0, 432, 433, 434, 431, 435, 436, 437, 438,
	0, 439, 440, 441, 1055, 442, 443, 444, 445, 946,
	446, 0, 447, 448, 454, 455, 449, 450, 456, 457,
	458, 459, 460, 0, 462, 463, 461, 464, 465, 466,
	999, 467, 451, 452, 468, 469, 1056, 470, 471, 472,
	473, 474, 475, 1014, 0, 476, 0, 477, 478, 479,
	480, 453, 481, 486, 1059, 482, 483, 484, 485, 1036,
	0, 488, 489, 934, 487, 0, 490, 491, 492, 493,
	494, 495, 315, 496, 0, 497, 1026, 1027, 1028, 1029,
	0, 504, 0, 498, 499, 1037, 500, 1038, 956, 501,
	502, 503, 0, 505, 506, 0, 940, 507, 508, 509,
	511, 512, 510, 513, 1000, 514, 0, 0, 515, 516,
	517, 571, 1023, 1058, 0, 519, 518, 574, 0, 0,
	0, 0, 520, 521, 575, 522, 523, 524, 937, 0,
	0, 0, 0, 0, 0, 933, 0, 0, 0, 0,
	0, 0, 931, 932, 0, 0, 0, 0, 0, 0,
	0, 962, 2275, 0, 2274, 960, 978, 950, 951, 952,
	948, 949, 961, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 244, 245, 246, 247, 248, 249, 0,
	250, 251, 0, 0, 0, 0, 0, 1002, 966, 0,
	0, 0, 252, 253, 255, 254, 256, 257, 258, 526,
	1015, 0, 259, 1022, 260, 1021, 0, 261, 262, 263,
	264, 265, 968, 1001, 935, 266, 1060, 1061, 532, 0,
	267, 268, 1008, 0, 989, 0, 269, 270, 271, 272,
	273, 274, 275, 0, 0, 277, 278, 279, 276, 0,
	280, 0, 281, 282, 283, 0, 284, 1041, 285, 286,
	992, 990, 991, 998, 994, 993, 997, 287, 288, 289,
	290, 1025, 291, 1019, 1018, 939, 295, 292, 293, 0,
	296, 294, 0, 297, 298, 299, 0, 0, 300, 1010,
	302, 0, 303, 304, 0, 305, 306, 307, 0, 308,
	309, 945, 310, 311, 312, 314, 316, 313, 317, 318,
	319, 320, 1032, 1033, 957, 241, 0, 0, 0, 0,
	0, 321, 322, 323, 1017, 0, 0, 0, 324, 0,
	325, 0, 0, 1042, 326, 327, 1030, 1031, 328, 329,
	0, 330, 1039, 0, 967, 331, 0, 332, 333, 334,
	335, 336, 1003, 1004, 1007, 393, 1044, 337, 338, 0,
	339, 340, 341, 342, 0, 0, 0, 242, 343, 344,
	346, 0, 1043, 345, 1012, 1013, 0, 973, 0, 347,
	348, 1045, 1005, 1046, 349, 350, 351, 1047, 352, 0,
	0, 0, 353, 354, 355, 356, 357, 358, 0, 359,
	361, 360, 0, 362, 1040, 1048, 363, 364, 1049, 0,
	365, 366, 367, 996, 995, 368, 369, 370, 371, 0,
	372, 373, 375, 377, 374, 376, 381, 378, 379, 380,
	383, 0, 382, 1050, 384, 385, 386, 389, 390, 388,
	1051, 387, 936, 243, 1052, 391, 958, 1006, 392, 1020,
	394, 395, 0, 0, 396, 0, 0, 0, 398, 399,
	400, 0, 0, 401, 402, 554, 1053, 403, 1054, 1034,
	404, 405, 397, 406, 407, 408, 409, 410, 411, 412,
	413, 0, 414, 415, 556, 557, 1035, 416, 559, 417,
	418, 0, 419, 0, 420, 421, 422, 423, 424, 425,
	426, 1016, 428, 427, 429, 0, 0, 0, 0, 0,
	0, 430, 0, 432, 433, 434, 431, 435, 436, 437,
	438, 0, 439, 440, 441, 1055, 442, 443, 444, 445,
	946, 446, 0, 447, 448, 454, 455, 449, 450, 456,
	457, 458, 459, 460, 0, 462, 463, 461, 464, 465,
	466, 999, 467, 451, 452, 468, 469, 1056, 470, 471,
	472, 473, 474, 475, 1014, 0, 476, 0, 477, 478,
	479, 480, 453, 481, 486, 1059, 482, 483, 484, 485,
	1036, 0, 488, 489, 934, 487, 0, 490, 491, 492,
	493, 494, 495, 315, 496, 0, 497, 1026, 1027, 1028,
	1029, 0, 504, 0, 498, 499, 1037, 500, 1038, 956,
	501, 502, 503, 0, 505, 506, 0, 940, 507, 508,
	509, 511, 512, 510, 513, 1000, 514, 0, 0, 515,
	516, 517, 571, 1023, 1058, 0, 519, 518, 574, 0,
	0, 0, 0, 520, 521, 575, 522, 523, 524, 937,
	0, 0, 0, 0, 0, 0, 933, 0, 0, 0,
	0, 0, 0, 931, 932, 0, 0, 0, 0, 0,
	0, 0, 962, 2272, 0, 1518, 960, 978, 950, 951,
	952, 948, 949, 961, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 244, 245, 246, 247, 248, 249,
	0, 250, 251, 0, 0, 0, 0, 0, 1002, 966,
	0, 0, 0, 252, 253, 255, 254, 256, 257, 258,
	526, 1015, 0, 259, 1022, 260, 1021, 0, 261, 262,
	263, 264, 265, 968, 1001, 935, 266, 1060, 1061, 532,
	0, 267, 268, 1008, 0, 989, 0, 269, 270, 271,
	272, 273, 274, 275, 0, 0, 277, 278, 279, 276,
	0, 280, 0, 281, 282, 283, 0, 284, 1041, 285,
	286, 992, 990, 991, 998, 994, 993, 997, 287, 288,
	289, 290, 1025, 291, 1019, 1018, 939, 295, 292, 293,
	0, 296, 294, 0, 297, 298, 299, 0, 0, 300,
	1010, 302, 0, 303, 304, 0, 305, 306, 307, 0,
	308, 309, 945, 310, 311, 312, 314, 316, 313, 317,
	318, 319, 320, 1032, 1033, 957, 241, 0, 0, 0,
	0, 0, 321, 322, 323, 1017, 0, 0, 0, 324,
	0, 325, 0, 0, 1042, 326, 327, 1030, 1031, 328,
	329, 0, 330, 1039, 0, 967, 331, 0, 332, 333,
	334, 335, 336, 1003, 1004, 1007, 393, 1044, 337, 338,
	0, 339, 340, 341, 342, 0, 0, 0, 242, 343,
	344, 346, 0, 1043, 345, 1012, 1013, 0, 973, 0,
	347, 348, 1045, 1005, 1046, 349, 350, 351, 1047, 352,
	0, 0, 0, 353, 354, 355, 356, 357, 358, 0,
	359, 361, 360, 0, 362, 1040, 1048, 363, 364, 1049,
	0, 365, 366, 367, 996, 995, 368, 369, 370, 371,
	0, 372, 373, 375, 377, 374, 376, 381, 378, 379,
	380, 383, 0, 382, 1050, 384, 385, 386, 389, 390,
	388, 1051, 387, 936, 243, 1052, 391, 958, 1006, 392,
	1020, 394, 395, 0, 0, 396, 0, 0, 0, 398,
	399, 400, 0, 0, 401, 402, 554, 1053, 403, 1054,
	1034, 404, 405, 397, 406, 407, 408, 409, 410, 411,
	412, 413, 0, 414, 415, 556, 557, 1035, 416, 559,
	417, 418, 0, 419, 0, 420, 421, 422, 423, 424,
	425, 426, 1016, 428, 427, 429, 0, 0, 0, 0,
	0, 0, 430, 0, 432, 433, 434, 431, 435, 436,
	437, 438, 0, 439, 440, 441, 1055, 442, 443, 444,
	445, 946, 446, 0, 447, 448, 454, 455, 449, 450,
	456, 457, 458, 459, 460, 0, 462, 463, 461, 464,
	465, 466, 999, 467, 451, 452, 468, 469, 1056, 470,
	471, 472, 473, 474, 475, 1014, 0, 476, 0, 477,
	478, 479, 480, 453, 481, 486, 1059, 482, 483, 484,
	485, 1036, 0, 488, 489, 934, 487, 0, 490, 491,
	492, 493, 494, 495, 315, 496, 0, 497, 1026, 1027,
	1028, 1029, 0, 504, 0, 498, 499, 1037, 500, 1038,
	956, 501, 502, 503, 0, 505, 506, 0, 940, 507,
	508, 509, 511, 512, 510, 513, 1000, 514, 0, 0,
	515, 516, 517, 571, 1023, 1058, 0, 519, 518, 574,
	1517, 0, 0, 0, 520, 521, 575, 522, 523, 524,
	937, 0, 0, 0, 0, 0, 0, 933, 0, 0,
	0, 0, 0, 0, 931, 932, 0, 0, 0, 0,
	0, 0, 0, 962, 0, 0, 927, 960, 978, 950,
	951, 952, 948, 949, 961, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 244, 245, 246, 247, 248,
	249, 0, 250, 251, 0, 0, 0, 0, 0, 1002,
	966, 0, 0, 0, 252, 253, 255, 254, 256, 257,
	258, 526, 1015, 0, 259, 1022, 260, 1021, 0, 261,
	262, 263, 264, 265, 968, 1001, 935, 266, 1060, 1061,
	532, 0, 267, 268, 1008, 0, 989, 0, 269, 270,
	271, 272, 273, 274, 275, 0, 0, 277, 278, 279,
	276, 0, 280, 0, 281, 282, 283, 0, 284, 1041,
	285, 286, 992, 990, 991, 998, 994, 993, 997, 287,
	288, 289, 290, 1025, 291, 1019, 1018, 939, 295, 292,
	293, 0, 296, 294, 0, 297, 298, 299, 0, 0,
	300, 1010, 302, 0, 303, 304, 0, 305, 306, 307,
	0, 308, 309, 945, 310, 311, 312, 314, 316, 313,
	317, 318, 319, 320, 1032, 1033, 957, 241, 0, 0,
	0, 0, 0, 321, 322, 323, 1017, 0, 0, 0,
	324, 0, 325, 0, 0, 1042, 326, 327, 1030, 1031,
	328, 329, 0, 330, 1039, 0, 967, 331, 0, 332,
	333, 334, 335, 336, 1003, 1004, 1007, 393, 1044, 337,
	338, 0, 339, 340, 341, 342, 0, 0, 0, 242,
	343, 344, 346, 0, 1043, 345, 1012, 1013, 0, 973,
	0, 347, 348, 1045, 1005, 1046, 349, 350, 351, 1047,
	352, 0, 0, 0, 353, 354, 355, 356, 357, 358,
	0, 359, 361, 360, 0, 362, 1040, 1048, 363, 364,
	1049, 0, 365, 366, 367, 996, 995, 368, 369, 370,
	371, 0, 372, 373, 375, 377, 374, 376, 381, 378,
	379, 380, 383, 0, 382, 1050, 384, 385, 386, 389,
	390, 388, 1051, 387, 936, 243, 1052, 391, 958, 1006,
	392, 1020, 394, 395, 0, 0, 396, 0, 941, 0,
	398, 399, 400, 0, 0, 401, 402, 554, 1053, 403,
	1054, 1034, 404, 405, 397, 406, 407, 408, 409, 410,
	411, 412, 413, 0, 414, 415, 556, 557, 1035, 416,
	559, 417, 418, 0, 419, 0, 420, 421, 422, 423,
	424, 425, 426, 1016, 428, 427, 429, 0, 0, 0,
	0, 0, 0, 430, 0, 432, 433, 434, 431, 435,
	436, 437, 438, 0, 439, 440, 441, 1055, 442, 443,
	444, 445, 946, 446, 0, 447, 448, 454, 455, 449,
	450, 456, 457, 458, 459, 460, 0, 462, 463, 461,
	464, 465, 466, 999, 467, 451, 452, 468, 469, 1056,
	470, 471, 472, 473, 474, 475, 1014, 0, 476, 0,
	477, 478, 479, 480, 453, 481, 486, 1059, 482, 483,
	484, 485, 1036, 0, 488, 489, 934, 487, 0, 490,
	491, 492, 493, 494, 495, 315, 496, 0, 497, 1026,
	1027, 1028, 1029, 0, 504, 0, 498, 499, 1037, 500,
	1038, 956, 501, 502, 503, 0, 505, 506, 0, 940,
	507, 508, 509, 511, 512, 510, 513, 1000, 514, 0,
	0, 515, 516, 517, 571, 1023, 1058, 0, 519, 518,
	574, 0, 0, 0, 0, 520, 521, 575, 522, 523,
	524, 937, 0, 0, 0, 0, 0, 0, 933, 0,
	0, 0, 0, 0, 0, 931, 932, 978, 950, 951,
	952, 948, 949, 961, 962, 0, 0, 0, 960, 0,
	0, 0, 0, 0, 244, 245, 246, 247, 248, 249,
	0, 250, 251, 0, 0, 0, 0, 0, 1002, 966,
	0, 0, 0, 252, 253, 255, 254, 256, 257, 258,
	526, 1015, 0, 259, 1022, 260, 1021, 0, 261, 262,
	263, 264, 265, 968, 1001, 935, 266, 1060, 1061, 532,
	0, 267, 268, 1008, 0, 989, 0, 269, 270, 271,
	272, 273, 274, 275, 0, 0, 277, 278, 279, 276,
	0, 280, 0, 281, 3948, 283, 0, 284, 1041, 285,
	286, 992, 990, 991, 998, 994, 993, 997, 287, 288,
	289, 290, 1025, 291, 1019, 1018, 939, 295, 292, 293,
	0, 296, 294, 0, 297, 298, 299, 0, 0, 300,
	1010, 302, 0, 303, 304, 0, 305, 306, 307, 0,
	308, 309, 945, 310, 311, 312, 314, 316, 313, 317,
	318, 319, 320, 1032, 1033, 957, 241, 0, 0, 0,
	0, 0, 321, 322, 323, 1017, 0, 0, 0, 324,
	0, 325, 0, 0, 1042, 326, 327, 1030, 1031, 328,
	329, 0, 330, 1039, 0, 967, 331, 0, 332, 333,
	334, 335, 336, 1003, 1004, 1007, 393, 1044, 337, 338,
	0, 339, 340, 341, 342, 0, 0, 0, 242, 343,
	344, 346, 0, 1043, 345, 1012, 1013, 0, 973, 0,
	347, 348, 1045, 1005, 1046, 349, 350, 351, 1047, 352,
	0, 0, 0, 353, 354, 355, 356, 357, 358, 0,
	359, 361, 360, 0, 362, 1040, 1048, 363, 364, 1049,
	0, 365, 366, 367, 996, 995, 368, 369, 370, 371,
	0, 372, 373, 375, 377, 374, 376, 381, 378, 379,
	380, 383, 0, 382, 1050, 384, 385, 386, 389, 390,
	388, 1051, 387, 936, 243, 1052, 391, 958, 1006, 392,
	1020, 394, 395, 0, 0, 396, 0, 941, 0, 398,
	399, 400, 0, 0, 401, 402, 554, 1053, 403, 1054,
	1034, 404, 405, 397, 406, 407, 408, 409, 410, 411,
	412, 413, 0, 414, 415, 556, 557, 1035, 416, 559,
	417, 418, 0, 419, 0, 420, 421, 422, 423, 424,
	425, 426, 1016, 428, 427, 429, 0, 0, 0, 0,
	0, 0, 430, 0, 432, 433, 434, 431, 435, 436,
	437, 438, 0, 439, 440, 441, 1055, 442, 443, 444,
	445, 946, 446, 0, 447, 448, 454, 455, 449, 450,
	456, 457, 458, 459, 460, 0, 462, 463, 461, 464,
	465, 466, 999, 467, 451, 452, 468, 469, 1056, 470,
	471, 472, 473, 474, 475, 1014, 0, 476, 0, 477,
	478, 479, 480, 453, 481, 486, 1059, 482, 483, 484,
	485, 1036, 0, 488, 489, 934, 487, 0, 490, 491,
	492, 493, 494, 495, 315, 496, 0, 497, 1026, 1027,
	1028, 1029, 0, 504, 0, 498, 499, 1037, 500, 1038,
	956, 501, 502, 503, 0, 505, 506, 0, 940, 507,
	508, 509, 511, 512, 510, 513, 1000, 514, 0, 0,
	515, 516, 517, 571, 1023, 1058, 0, 519, 518, 574,
	0, 0, 0, 0, 520, 521, 575, 522, 523, 524,
	937, 0, 0, 0, 0, 0, 0, 933, 0, 0,
	0, 0, 0, 0, 931, 932, 978, 950, 951, 952,
	948, 949, 961, 962, 0, 0, 0, 960, 0, 0,
	0, 0, 0, 244, 245, 246, 247, 248, 249, 0,
	250, 251, 0, 0, 0, 0, 0, 1002, 966, 0,
	0, 0, 252, 253, 255, 254, 256, 257, 258, 526,
	1015, 0, 259, 1022, 260, 1021, 0, 261, 262, 263,
	264, 265, 968, 1001, 935, 266, 1060, 1061, 532, 0,
	267, 268, 1008, 0, 989, 0, 269, 270, 271, 272,
	273, 274, 275, 0, 0, 277, 278, 279, 276, 0,
	280, 0, 281, 282, 283, 0, 284, 1041, 285, 286,
	992, 990, 991, 998, 994, 993, 997, 287, 288, 289,
	290, 1025, 291, 1019, 1018, 939, 295, 292, 293, 0,
	296, 294, 0, 297, 298, 299, 0, 0, 300, 1010,
	302, 0, 303, 304, 0, 305, 306, 307, 0, 308,
	309, 945, 310, 311, 312, 314, 316, 313, 317, 318,
	319, 320, 1032, 1033, 957, 241, 0, 0, 0, 0,
	0, 321, 322, 323, 1017, 0, 0, 0, 324, 0,
	325, 0, 0, 1042, 326, 327, 1030, 1031, 328, 329,
	0, 330, 1039, 0, 967, 331, 0, 332, 333, 334,
	335, 336, 1003, 1004, 1007, 393, 1044, 337, 338, 0,
	339, 340, 341, 342, 0, 0, 0, 2152, 343, 344,
	346, 0, 1043, 345, 1012, 1013, 0, 973, 0, 347,
	348, 1045, 1005, 1046, 349, 350, 351, 1047, 352, 0,
	0, 0, 353, 354, 355, 356, 357, 358, 0, 359,
	361, 360, 0, 362, 1040, 1048, 363, 364, 1049, 0,
	365, 366, 367, 996, 995, 368, 369, 370, 371, 0,
	372, 373, 375, 377, 374, 376, 381, 378, 379, 380,
	383, 0, 382, 1050, 384, 385, 386, 389, 390, 388,
	1051, 387, 936, 243, 1052, 391, 958, 1006, 392, 1020,
	394, 395, 0, 0, 396, 0, 0, 0, 398, 399,
	400, 0, 0, 401, 402, 554, 1053, 403, 1054, 1034,
	404, 405, 397, 406, 407, 408, 409, 410, 411, 412,
	413, 0, 414, 415, 556, 557, 1035, 416, 559, 417,
	418, 2151, 419, 0, 420, 421, 422, 423, 424, 425,
	426, 1016, 428, 427, 429, 0, 0, 0, 0, 0,
	0, 430, 0, 432, 433, 434, 431, 435, 436, 437,
	438, 0, 439, 440, 441, 1055, 442, 443, 444, 445,
	946, 446, 0, 447, 448, 454, 455, 449, 450, 456,
	457, 458, 459, 460, 0, 462, 463, 461, 464, 465,
	466, 999, 467, 451, 452, 468, 469, 1056, 470, 471,
	472, 473, 474, 475, 1014, 0, 476, 0, 477, 478,
	479, 480, 453, 481, 486, 1059, 482, 483, 484, 485,
	1036, 0, 488, 489, 934, 487, 0, 490, 491, 492,
	493, 494, 495, 315, 496, 0, 497, 1026, 1027, 1028,
	1029, 0, 504, 0, 498, 499, 1037, 500, 1038, 956,
	501, 502, 503, 0, 505, 506, 0, 940, 507, 508,
	509, 511, 512, 510, 513, 1000, 514, 0, 0, 515,
	516, 517, 571, 1023, 1058, 0, 519, 518, 574, 0,
	0, 0, 0, 520, 521, 575, 522, 523, 524, 937,
	0, 0, 0, 0, 0, 0, 933, 0, 0, 0,
	0, 0, 0, 931, 932, 978, 950, 951, 952, 948,
	949, 961, 962, 0, 0, 0, 960, 0, 0, 0,
	0, 0, 244, 245, 246, 247, 248, 249, 0, 250,
	251, 0, 0, 0, 0, 0, 1002, 966, 0, 0,
	0, 252, 253, 255, 254, 256, 257, 258, 526, 1015,
	0, 259, 1022, 260, 1021, 0, 261, 262, 263, 264,
	265, 968, 1001, 935, 266, 1060, 1061, 532, 0, 267,
	268, 1008, 0, 989, 0, 269, 270, 271, 272, 273,
	274, 275, 0, 0, 277, 278, 279, 276, 0, 280,
	0, 281, 3747, 283, 0, 284, 1041, 285, 286, 992,
	990, 991, 998, 994, 993, 997, 287, 288, 289, 290,
	1025, 291, 1019, 1018, 939, 295, 292, 293, 0, 296,
	294, 0, 297, 298, 299, 0, 0, 300, 1010, 302,
	0, 303, 304, 0, 305, 306, 307, 0, 308, 309,
	945, 310, 311, 312, 314, 316, 313, 317, 318, 319,
	320, 1032, 1033, 957, 241, 0, 0, 0, 0, 0,
	321, 322, 323, 1017, 0, 0, 0, 324, 0, 325,
	0, 0, 1042, 326, 327, 1030, 1031, 328, 329, 0,
	330, 1039, 0, 967, 331, 0, 332, 333, 334, 335,
	336, 1003, 1004, 1007, 393, 1044, 337, 338, 0, 339,
	340, 341, 342, 0, 0, 0, 242, 343, 344, 346,
	0, 1043, 345, 1012, 1013, 0, 973, 0, 347, 348,
	1045, 1005, 1046, 349, 350, 351, 1047, 352, 0, 0,
	0, 353, 354, 355, 356, 357, 358, 0, 359, 361,
	360, 0, 362, 1040, 1048, 363, 364, 1049, 0, 365,
	366, 367, 996, 995, 368, 369, 370, 371, 0, 372,
	373, 375, 377, 374, 376, 381, 378, 379, 380, 383,
	0, 382, 1050, 384, 385, 386, 389, 390, 388, 1051,
	387, 936, 243, 1052, 391, 958, 1006, 392, 1020, 394,
	395, 0, 0, 396, 0, 941, 0, 398, 399, 400,
	0, 0, 401, 402, 554, 1053, 403, 1054, 1034, 404,
	405, 397, 406, 407, 408, 409, 410, 411, 412, 413,
	0, 414, 415, 556, 557, 1035, 416, 559, 417, 418,
	0, 419, 0, 420, 421, 422, 423, 424, 425, 426,
	1016, 428, 427, 429, 0, 0, 0, 0, 0, 0,
	430, 0, 432, 433, 434, 431, 435, 436, 437, 438,
	0, 439, 440, 441, 1055, 442, 443, 444, 445, 946,
	446, 0, 447, 448, 454, 455, 449, 450, 456, 457,
	458, 459, 460, 0, 462, 463, 461, 464, 465, 466,
	999, 467, 451, 452, 468, 469, 1056, 470, 471, 472,
	473, 474, 475, 1014, 0, 476, 0, 477, 478, 479,
	480, 453, 481, 486, 1059, 482, 483, 484, 485, 1036,
	0, 488, 489, 934, 487, 0, 490, 491, 492, 493,
	494, 495, 315, 496, 0, 497, 1026, 1027, 1028, 1029,
	0, 504, 0, 498, 499, 1037, 500, 1038, 956, 501,
	502, 503, 0, 505, 506, 0, 940, 507, 508, 509,
	511, 512, 510, 513, 1000, 514, 0, 0, 515, 516,
	517, 571, 1023, 1058, 0, 519, 518, 574, 0, 0,
	0, 0, 520, 521, 575, 522, 523, 524, 937, 0,
	0, 0, 0, 0, 0, 933, 0, 0, 0, 0,
	0, 0, 931, 932, 978, 950, 951, 952, 948, 949,
	961, 962, 0, 0, 0, 960, 0, 0, 0, 0,
	0, 244, 245, 246, 247, 248, 249, 0, 250, 251,
	0, 0, 0, 0, 0, 1002, 966, 0, 0, 0,
	252, 253, 255, 254, 256, 257, 258, 526, 1015, 0,
	259, 1022, 260, 1021, 0, 261, 262, 263, 264, 265,
	968, 1001, 935, 266, 1060, 1061, 532, 0, 267, 268,
	1008, 0, 989, 0, 269, 270, 271, 272, 273, 274,
	275, 0, 0, 277, 278, 279, 276, 0, 280, 0,
	281, 282, 283, 0, 284, 1041, 285, 286, 992, 990,
	991, 998, 994, 993, 997, 287, 288, 289, 290, 1025,
	291, 1019, 1018, 939, 295, 292, 293, 0, 296, 294,
	0, 297, 298, 299, 0, 0, 300, 1010, 302, 0,
	303, 304, 0, 305, 306, 307, 0, 308, 309, 945,
	310, 311, 312, 314, 316, 313, 317, 318, 319, 320,
	1032, 1033, 957, 241, 0, 0, 0, 0, 0, 321,
	322, 323, 1017, 0, 0, 0, 324, 0, 325, 0,
	0, 1042, 326, 327, 1030, 1031, 328, 329, 0, 330,
	1039, 0, 967, 331, 0, 332, 333, 334, 335, 336,
	1003, 1004, 1007, 393, 1044, 337, 338, 0, 339, 340,
	341, 342, 0, 0, 0, 242, 343, 344, 346, 0,
	1043, 345, 1012, 1013, 0, 973, 0, 347, 348, 1045,
	1005, 1046, 349, 350, 351, 1047, 352, 0, 0, 0,
	353, 354, 355, 356, 357, 358, 0, 359, 361, 360,
	0, 362, 1040, 1048, 363, 364, 1049, 0, 365, 366,
	367, 996, 995, 368, 369, 370, 371, 0, 372, 373,
	375, 377, 374, 376, 381, 378, 379, 380, 383, 0,
	382, 1050, 384, 385, 386, 389, 390, 388, 1051, 387,
	936, 3415, 1052, 391, 958, 1006, 392, 1020, 394, 395,
	0, 0, 396, 0, 0, 0, 398, 399, 400, 0,
	0, 401, 402, 554, 1053, 403, 1054, 1034, 404, 405,
	397, 406, 407, 408, 409, 410, 411, 412, 413, 0,
	414, 415, 556, 557, 1035, 416, 559, 417, 418, 0,
	419, 0, 420, 421, 422, 423, 424, 425, 426, 1016,
	428, 427, 429, 0, 0, 0, 0, 0, 0, 430,
	0, 432, 433, 434, 431, 435, 436, 437, 438, 0,
	439, 440, 441, 1055, 442, 443, 444, 445, 946, 446,
	0, 447, 448, 454, 455, 449, 450, 456, 457, 458,
	459, 460, 0, 462, 463, 461, 464, 465, 466, 999,
	467, 451, 452, 468, 469, 1056, 470, 471, 472, 473,
	474, 475, 1014, 0, 476, 0, 477, 478, 479, 480,
	453, 481, 486, 1059, 482, 483, 484, 485, 1036, 0,
	488, 489, 934, 487, 0, 490, 491, 492, 493, 494,
	495, 315, 496, 0, 497, 1026, 1027, 1028, 1029, 0,
	504, 0, 498, 499, 1037, 500, 1038, 956, 501, 502,
	503, 0, 505, 506, 0, 940, 507, 508, 509, 511,
	512, 510, 513, 1000, 514, 0, 0, 515, 516, 517,
	571, 1023, 1058, 0, 519, 518, 574, 0, 0, 0,
	0, 520, 521, 575, 522, 523, 524, 937, 0, 0,
	0, 0, 0, 0, 933, 0, 0, 0, 0, 0,
	0, 931, 932, 1733, 0, 0, 0, 0, 0, 0,
	962, 0, 0, 0, 960, 978, 950, 951, 952, 948,
	949, 961, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 244, 245, 246, 247, 248, 249, 0, 250,
	251, 0, 0, 0, 0, 0, 1002, 966, 0, 0,
	0, 252, 253, 255, 254, 256, 257, 258, 526, 1015,
	0, 259, 1022, 260, 1021, 0, 261, 262, 263, 264,
	265, 968, 1001, 935, 266, 1060, 1061, 532, 0, 267,
	268, 1008, 0, 989, 0, 269, 270, 271, 272, 273,
	274, 275, 0, 0, 277, 278, 279, 276, 0, 280,
	0, 281, 282, 283, 0, 284, 1041, 285, 286, 992,
	990, 991, 998, 994, 993, 997, 287, 288, 289, 290,
	1025, 291, 1019, 1018, 939, 295, 292, 293, 0, 296,
	294, 0, 297, 298, 299, 0, 0, 300, 1010, 302,
	0, 303, 304, 0, 305, 306, 307, 0, 308, 309,
	945, 310, 311, 312, 314, 316, 313, 317, 318, 319,
	320, 1032, 1033, 957, 241, 0, 0, 0, 0, 0,
	321, 322, 323, 1017, 0, 0, 0, 324, 0, 325,
	0, 0, 1042, 326, 327, 1030, 1031, 328, 329, 0,
	330, 1039, 0, 967, 331, 0, 332, 333, 334, 335,
	336, 1003, 1004, 1007, 393, 1044, 337, 338, 0, 339,
	340, 341, 342, 0, 0, 0, 242, 343, 344, 346,
	0, 1043, 345, 1012, 1013, 0, 973, 0, 347, 348,
	1045, 1005, 1046, 349, 350, 351, 1047, 352, 0, 0,
	0, 353, 354, 355, 356, 357, 358, 0, 359, 361,
	360, 0, 362, 1040, 1048, 363, 364, 1049, 0, 365,
	366, 367, 996, 995, 368, 369, 370, 371, 0, 372,
	373, 375, 377, 374, 376, 381, 378, 379, 380, 383,
	0, 382, 1050, 384, 385, 386, 389, 390, 388, 1051,
	387, 936, 243, 1052, 391, 958, 1006, 392, 1020, 394,
	395, 0, 0, 396, 0, 0, 0, 398, 399, 400,
	0, 0, 401, 402, 554, 1053, 403, 1054, 1034, 404,
	405, 397, 406, 407, 408, 409, 410, 411, 412, 413,
	0, 414, 415, 556, 557, 1035, 416, 559, 417, 418,
	0, 419, 0, 420, 421, 422, 423, 424, 425, 426,
	1016, 428, 427, 429, 0, 0, 0, 0, 0, 0,
	430, 0, 432, 433, 434, 431, 435, 436, 437, 438,
	0, 439, 440, 441, 1055, 442, 443, 444, 445, 946,
	446, 0, 447, 448, 454, 455, 449, 450, 456, 457,
	458, 459, 460, 0, 462, 463, 461, 464, 465, 466,
	999, 467, 451, 452, 468, 469, 1056, 470, 471, 472,
	473, 474, 475, 1014, 0, 476, 0, 477, 478, 479,
	480, 453, 481, 486, 1059, 482, 483, 484, 485, 1036,
	0, 488, 489, 934, 487, 0, 490, 491, 492, 493,
	494, 495, 315, 496, 0, 497, 1026, 1027, 1028, 1029,
	0, 504, 0, 498, 499, 1037, 500, 1038, 956, 501,
	502, 503, 0, 505, 506, 0, 940, 507, 508, 509,
	511, 512, 510, 513, 1000, 514, 0, 0, 515, 516,
	517, 571, 1023, 1058, 3180, 519, 518, 574, 0, 0,
	0, 0, 520, 521, 575, 522, 523, 524, 937, 0,
	0, 0, 0, 0, 0, 933, 0, 0, 0, 0,
	0, 0, 931, 932, 978, 950, 951, 952, 948, 949,
	961, 962, 0, 0, 0, 960, 0, 0, 0, 0,
	0, 244, 245, 246, 247, 248, 249, 0, 250, 251,
	0, 0, 0, 0, 0, 1002, 966, 0, 0, 0,
	252, 253, 255, 254, 256, 257, 258, 526, 1015, 0,
	259, 1022, 260, 1021, 0, 261, 262, 263, 264, 265,
	968, 1001, 935, 266, 1060, 1061, 532, 0, 267, 268,
	1008, 0, 989, 0, 269, 270, 271, 272, 273, 274,
	275, 0, 0, 277, 278, 279, 276, 0, 280, 0,
	281, 282, 283, 0, 284, 1041, 285, 286, 992, 990,
	991, 998, 994, 993, 997, 287, 288, 289, 290, 1025,
	291, 1019, 1018, 939, 295, 292, 293, 0, 296, 294,
	0, 297, 298, 299, 0, 0, 300, 1010, 302, 0,
	303, 304, 0, 305, 306, 307, 0, 308, 309, 945,
	310, 311, 312, 314, 316, 313, 317, 318, 319, 320,
	1032, 1033, 957, 241, 0, 0, 0, 0, 0, 321,
	322, 323, 1017, 0, 0, 0, 324, 0, 325, 0,
	0, 1042, 326, 327, 1030, 1031, 328, 329, 0, 330,
	1039, 0, 967, 331, 0, 332, 333, 334, 335, 336,
	1003, 1004, 1007, 393, 1044, 337, 338, 0, 339, 340,
	341, 342, 0, 0, 0, 242, 343, 344, 346, 0,
	1043, 345, 1012, 1013, 0, 973, 0, 347, 348, 1045,
	1005, 1046, 349, 350, 351, 1047, 352, 0, 0, 0,
	353, 354, 355, 356, 357, 358, 0, 359, 361, 360,
	0, 362, 1040, 1048, 363, 364, 1049, 0, 365, 366,
	367, 996, 995, 368, 369, 370, 371, 0, 372, 373,
	375, 377, 374, 376, 381, 378, 379, 380, 383, 0,
	382, 1050, 384, 385, 386, 389, 390, 388, 1051, 387,
	936, 243, 1052, 391, 958, 1006, 392, 1020, 394, 395,
	0, 0, 396, 0, 941, 0, 398, 399, 400, 0,
	0, 401, 402, 554, 1053, 403, 1054, 1034, 404, 405,
	397, 406, 407, 408, 409, 410, 411, 412, 413, 0,
	414, 415, 556, 557, 1035, 416, 559, 417, 418, 0,
	419, 0, 420, 421, 422, 423, 424, 425, 426, 1016,
	428, 427, 429, 0, 0, 0, 0, 0, 0, 430,
	0, 432, 433, 434, 431, 435, 436, 437, 438, 0,
	439, 440, 441, 1055, 442, 443, 444, 445, 946, 446,
	0, 447, 448, 454, 455, 449, 450, 456, 457, 458,
	459, 460, 0, 462, 463, 461, 464, 465, 466, 999,
	467, 451, 452, 468, 469, 1056, 470, 471, 472, 473,
	474, 475, 1014, 0, 476, 0, 477, 478, 479, 480,
	453, 481, 486, 1059, 482, 483, 484, 485, 1036, 0,
	488, 489, 934, 487, 0, 490, 491, 492, 493, 494,
	495, 315, 496, 0, 497, 1026, 1027, 1028, 1029, 0,
	504, 0, 498, 499, 1037, 500, 1038, 956, 501, 502,
	503, 0, 505, 506, 0, 940, 507, 508, 509, 511,
	512, 510, 513, 1000, 514, 0, 0, 515, 516, 517,
	571, 1023, 1058, 0, 519, 518, 574, 0, 0, 0,
	0, 520, 521, 575, 522, 523, 524, 937, 0, 0,
	0, 0, 0, 0, 933, 0, 0, 0, 0, 0,
	0, 931, 932, 978, 950, 951, 952, 948, 949, 961,
	962, 0, 0, 0, 960, 0, 0, 0, 0, 0,
	244, 245, 246, 247, 248, 249, 0, 250, 251, 0,
	0, 0, 0, 0, 1002, 966, 0, 0, 0, 252,
	253, 255, 254, 256, 257, 258, 526, 1015, 0, 259,
	1022, 260, 1021, 0, 261, 262, 263, 264, 265, 968,
	1001, 935, 266, 1060, 1061, 532, 0, 267, 268, 1008,
	0, 989, 0, 269, 270, 271, 272, 273, 274, 275,
	0, 0, 277, 278, 279, 276, 0, 280, 0, 281,
	282, 283, 0, 284, 1041, 285, 286, 992, 990, 991,
	998, 994, 993, 997, 287, 288, 289, 290, 1025, 291,
	1019, 1018, 939, 295, 292, 293, 0, 296, 294, 0,
	297, 298, 299, 0, 0, 300, 1010, 302, 0, 303,
	304, 0, 305, 306, 307, 0, 308, 309, 945, 310,
	311, 312, 314, 316, 313, 317, 318, 319, 320, 1032,
	1033, 957, 241, 0, 0, 0, 0, 0, 321, 322,
	323, 1017, 0, 0, 0, 324, 0, 325, 0, 0,
	1042, 326, 327, 1030, 1031, 328, 329, 0, 330, 1039,
	0, 967, 331, 0, 332, 333, 334, 335, 336, 1003,
	1004, 1007, 393, 1044, 337, 338, 0, 339, 340, 341,
	342, 0, 0, 0, 242, 343, 344, 346, 0, 1043,
	345, 1012, 1013, 0, 973, 0, 347, 348, 1045, 1005,
	1046, 349, 350, 351, 1047, 352, 0, 0, 0, 353,
	354, 355, 356, 357, 358, 0, 359, 361, 360, 0,
	362, 1040, 1048, 363, 364, 1049, 0, 365, 366, 367,
	996, 995, 368, 369, 370, 371, 0, 372, 373, 375,
	377, 374, 376, 381, 378, 379, 380, 383, 0, 382,
	1050, 384, 385, 386, 389, 390, 388, 1051, 387, 936,
	243, 1052, 391, 958, 1006, 392, 1020, 394, 395, 0,
	0, 396, 0, 0, 0, 398, 399, 400, 0, 0,
	401, 402, 554, 1053, 403, 1054, 1034, 404, 405, 397,
	406, 407, 408, 409, 410, 411, 412, 413, 0, 414,
	415, 556, 557, 1035, 416, 559, 417, 418, 0, 419,
	0, 420, 421, 422, 423, 424, 425, 426, 1016, 428,
	427, 429, 0, 0, 0, 0, 0, 0, 430, 0,
	432, 433, 434, 431, 435, 436, 437, 438, 0, 439,
	440, 441, 1055, 442, 443, 444, 445, 946, 446, 0,
	447, 448, 454, 455, 449, 450, 456, 457, 458, 459,
	460, 0, 462, 463, 461, 464, 465, 466, 999, 467,
	451, 452, 468, 469, 1056, 470, 471, 472, 473, 474,
	475, 1014, 0, 476, 0, 477, 478, 479, 480, 453,
	481, 486, 1059, 482, 483, 484, 485, 1036, 0, 488,
	489, 934, 487, 0, 490, 491, 492, 493, 494, 495,
	315, 496, 0, 497, 1026, 1027, 1028, 1029, 0, 504,
	0, 498, 499, 1037, 500, 1038, 956, 501, 502, 503,
	0, 505, 506, 0, 940, 507, 508, 509, 511, 512,
	510, 513, 1000, 514, 0, 0, 515, 516, 517, 571,
	1023, 1058, 0, 519, 518, 574, 0, 0, 0, 0,
	520, 521, 575, 522, 523, 524, 937, 0, 0, 0,
	0, 0, 0, 933, 0, 0, 0, 0, 0, 0,
	931, 932, 1733, 0, 0, 0, 0, 0, 0, 962,
	0, 0, 0, 960, 978, 950, 951, 952, 948, 949,
	961, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 244, 245, 246, 247, 248, 249, 0, 250, 251,
	0, 0, 0, 0, 0, 1002, 966, 0, 0, 0,
	252, 253, 255, 254, 256, 257, 258, 526, 1015, 0,
	259, 1022, 260, 1021, 0, 261, 262, 263, 264, 265,
	968, 1001, 935, 266, 1060, 1061, 532, 0, 267, 268,
	1008, 0, 989, 0, 269, 270, 271, 272, 273, 274,
	275, 0, 0, 277, 278, 279, 276, 0, 280, 0,
	281, 282, 283, 0, 284, 1041, 285, 286, 992, 990,
	991, 998, 994, 993, 997, 287, 288, 289, 290, 1025,
	291, 1019, 1018, 939, 295, 292, 293, 0, 296, 294,
	0, 297, 298, 299, 0, 0, 300, 1010, 302, 0,
	303, 304, 0, 305, 306, 307, 0, 308, 309, 945,
	310, 311, 312, 314, 316, 313, 317, 318, 319, 320,
	1032, 1033, 957, 241, 0, 0, 0, 0, 0, 321,
	322, 323, 1017, 0, 0, 0, 324, 0, 325, 0,
	2347, 1042, 326, 327, 1030, 1031, 328, 329, 0, 330,
	1039, 0, 967, 331, 0, 332, 333, 334, 335, 336,
	1003, 1004, 1007, 393, 1044, 337, 338, 0, 339, 340,
	341, 342, 0, 0, 0, 242, 343, 344, 346, 0,
	1043, 345, 1012, 1013, 0, 973, 0, 347, 348, 1045,
	1005, 1046, 349, 350, 351, 1047, 352, 0, 0, 0,
	353, 354, 355, 356, 357, 358, 0, 359, 361, 360,
	0, 362, 1040, 1048, 363, 364, 1049, 0, 365, 366,
	367, 996, 995, 368, 369, 370, 371, 0, 372, 373,
	375, 377, 374, 376, 381, 378, 379, 380, 383, 0,
	382, 1050, 384, 385, 386, 389, 390, 388, 1051, 387,
	936, 243, 1052, 391, 958, 1006, 392, 1020, 394, 395,
	0, 0, 396, 0, 0, 0, 398, 399, 400, 0,
	0, 401, 402, 554, 1053, 403, 1054, 1034, 404, 405,
	397, 406, 407, 408, 409, 410, 411, 412, 413, 0,
	414, 415, 556, 557, 1035, 416, 559, 417, 418, 0,
	419, 0, 420, 421, 422, 423, 424, 425, 426, 1016,
	428, 427, 429, 0, 0, 0, 0, 0, 0, 430,
	0, 432, 433, 434, 431, 435, 436, 437, 438, 0,
	439, 440, 441, 1055, 442, 443, 444, 445, 946, 446,
	0, 447, 448, 454, 455, 449, 450, 456, 457, 458,
	459, 460, 0, 462, 463, 461, 464, 465, 466, 999,
	467, 451, 452, 468, 469, 1056, 470, 471, 472, 473,
	474, 475, 1014, 0, 476, 0, 477, 478, 479, 480,
	453, 481, 486, 1059, 482, 483, 484, 485, 1036, 0,
	488, 489, 934, 487, 0, 490, 491, 492, 493, 494,
	495, 315, 496, 0, 497, 1026, 1027, 1028, 1029, 0,
	504, 0, 498, 499, 1037, 500, 1038, 956, 501, 502,
	503, 0, 505, 506, 0, 940, 507, 508, 509, 511,
	512, 510, 513, 1000, 514, 0, 0, 515, 516, 517,
	571, 1023, 1058, 0, 519, 518, 574, 0, 0, 0,
	0, 520, 521, 575, 522, 523, 524, 937, 0, 0,
	0, 0, 0, 0, 933, 0, 0, 0, 0, 0,
	0, 931, 932, 978, 950, 951, 952, 948, 949, 961,
	962, 0, 0, 0, 960, 0, 0, 0, 0, 0,
	244, 245, 246, 247, 248, 249, 0, 250, 251, 0,
	0, 0, 0, 0, 1002, 966, 0, 0, 0, 252,
	253, 255, 254, 256, 257, 258, 526, 1015, 0, 259,
	1022, 260, 1021, 0, 261, 262, 263, 264, 265, 968,
	1001, 935, 266, 1060, 1061, 532, 0, 267, 268, 1008,
	0, 989, 0, 269, 270, 271, 272, 273, 274, 275,
	0, 0, 277, 278, 279, 276, 0, 280, 0, 281,
	282, 283, 0, 284, 1041, 285, 286, 992, 990, 991,
	998, 994, 993, 997, 287, 288, 289, 290, 1025, 291,
	1019, 1018, 939, 295, 292, 293, 0, 296, 294, 0,
	297, 298, 299, 0, 0, 300, 1010, 302, 0, 303,
	304, 0, 305, 306, 307, 0, 308, 309, 945, 310,
	311, 312, 314, 316, 313, 317, 318, 319, 320, 1032,
	1033, 957, 241, 0, 0, 0, 0, 0, 321, 322,
	323, 1017, 0, 0, 0, 324, 0, 325, 0, 0,
	1042, 326, 327, 1030, 1031, 328, 329, 0, 330, 1039,
	0, 967, 331, 0, 332, 333, 334, 335, 336, 1003,
	1004, 1007, 393, 1044, 337, 338, 0, 339, 340, 341,
	342, 0, 0, 0, 242, 343, 344, 346, 0, 1043,
	345, 1012, 1013, 0, 973, 0, 347, 348, 1045, 1005,
	1046, 349, 350, 351, 1047, 352, 0, 0, 0, 353,
	354, 355, 356, 357, 358, 0, 359, 361, 360, 0,
	362, 1040, 1048, 363, 364, 1049, 0, 365, 366, 367,
	996, 995, 368, 369, 370, 371, 0, 372, 373, 375,
	377, 374, 376, 381, 378, 379, 380, 383, 0, 382,
	1050, 384, 385, 386, 389, 390, 388, 1051, 387, 936,
	243, 1052, 391, 958, 1006, 392, 1020, 394, 395, 0,
	0, 396, 0, 0, 0, 398, 399, 400, 0, 0,
	401, 402, 554, 1053, 403, 1054, 1034, 404, 405, 397,
	406, 407, 408, 409, 410, 411, 412, 413, 0, 414,
	415, 556, 557, 1035, 416, 559, 417, 418, 0, 419,
	0, 420, 421, 422, 423, 424, 425, 426, 1016, 428,
	427, 429, 0, 0, 0, 0, 0, 0, 430, 0,
	432, 433, 434, 431, 435, 436, 437, 438, 0, 439,
	440, 441, 1055, 442, 443, 444, 445, 946, 446, 0,
	447, 448, 454, 455, 449, 450, 456, 457, 458, 459,
	460, 0, 462, 463, 461, 464, 465, 466, 999, 467,
	451, 452, 468, 469, 1056, 470, 471, 472, 473, 474,
	475, 1014, 0, 476, 0, 477, 478, 479, 480, 453,
	481, 486, 1059, 482, 483, 484, 485, 1036, 0, 488,
	489, 934, 487, 0, 490, 491, 492, 493, 494, 495,
	315, 496, 0, 497, 1026, 1027, 1028, 1029, 0, 504,
	0, 498, 499, 1037, 500, 1038, 956, 501, 502, 503,
	0, 505, 506, 0, 940, 507, 508, 509, 511, 512,
	510, 513, 1000, 514, 0, 0, 515, 516, 517, 571,
	1023, 1058, 0, 519, 518, 574, 0, 0, 0, 0,
	520, 521, 575, 522, 523, 524, 937, 0, 0, 0,
	0, 0, 0, 933, 0, 0, 0, 0, 0, 0,
	931, 932, 0, 0, 0, 0, 0, 0, 0, 962,
	1663, 0, 2352, 960, 978, 950, 951, 952, 948, 949,
	961, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 244, 245, 246, 247, 248, 249, 0, 250, 251,
	0, 0, 0, 0, 0, 1002, 966, 0, 0, 0,
	252, 253, 255, 254, 256, 257, 258, 526, 1015, 0,
	259, 1022, 260, 1021, 0, 261, 262, 263, 264, 265,
	968, 1001, 935, 266, 1060, 1061, 532, 0, 267, 268,
	1008, 0, 989, 0, 269, 270, 271, 272, 273, 274,
	275, 0, 0, 277, 278, 279, 276, 0, 280, 0,
	281, 282, 283, 0, 284, 1041, 285, 286, 992, 990,
	991, 998, 994, 993, 997, 287, 288, 289, 290, 1025,
	291, 1019, 1018, 939, 295, 292, 293, 0, 296, 294,
	0, 297, 298, 299, 0, 0, 300, 1010, 302, 0,
	303, 304, 0, 305, 306, 307, 0, 308, 309, 945,
	310, 311, 312, 314, 316, 313, 317, 318, 319, 320,
	1032, 1033, 957, 241, 0, 0, 0, 0, 0, 321,
	322, 323, 1017, 0, 0, 0, 324, 0, 325, 0,
	0, 1042, 326, 327, 1030, 1031, 328, 329, 0, 330,
	1039, 0, 967, 331, 0, 332, 333, 334, 335, 336,
	1003, 1004, 1007, 393, 1044, 337, 338, 0, 339, 340,
	341, 342, 0, 0, 0, 242, 343, 344, 346, 0,
	1043, 345, 1012, 1013, 0, 973, 0, 347, 348, 1045,
	1005, 1046, 349, 350, 351, 1047, 352, 0, 0, 0,
	353, 354, 355, 356, 357, 358, 0, 359, 361, 360,
	0, 362, 1040, 1048, 363, 364, 1049, 0, 365, 366,
	367, 996, 995, 368, 369, 370, 371, 0, 372, 373,
	375, 377, 374, 376, 381, 378, 379, 380, 383, 0,
	382, 1050, 384, 385, 386, 389, 390, 388, 1051, 387,
	936, 243, 1052, 391, 958, 1006, 392, 1020, 394, 395,
	0, 0, 396, 0, 0, 0, 398, 399, 400, 0,
	0, 401, 402, 554, 1053, 403, 1054, 1034, 404, 405,
	397, 406, 407, 408, 409, 410, 411, 412, 413, 0,
	414, 415, 556, 557, 1035, 416, 559, 417, 418, 0,
	419, 0, 420, 421, 422, 423, 424, 425, 426, 1016,
	428, 427, 429, 0, 0, 0, 0, 0, 0, 430,
	0, 432, 433, 434, 431, 435, 436, 437, 438, 0,
	439, 440, 441, 1055, 442, 443, 444, 445, 946, 446,
	0, 447, 448, 454, 455, 449, 450, 456, 457, 458,
	459, 460, 0, 462, 463, 461, 464, 465, 466, 999,
	467, 451, 452, 468, 469, 1056, 470, 471, 472, 473,
	474, 475, 1014, 0, 476, 0, 477, 478, 479, 480,
	453, 481, 486, 1059, 482, 483, 484, 485, 1036, 0,
	488, 489, 934, 487, 0, 490, 491, 492, 493, 494,
	495, 315, 496, 0, 497, 1026, 1027, 1028, 1029, 0,
	504, 0, 498, 499, 1037, 500, 1038, 956, 501, 502,
	503, 0, 505, 506, 0, 940, 507, 508, 509, 511,
	512, 510, 513, 1000, 514, 0, 0, 515, 516, 517,
	571, 1023, 1058, 0, 519, 518, 574, 0, 0, 0,
	0, 520, 521, 575, 522, 523, 524, 937, 0, 0,
	0, 0, 0, 0, 933, 0, 0, 0, 0, 0,
	0, 931, 932, 0, 0, 0, 0, 0, 0, 0,
	962, 0, 0, 2350, 960, 978, 950, 951, 952, 948,
	949, 961, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 244, 245, 246, 247, 248, 249, 0, 250,
	251, 0, 0, 0, 0, 0, 1002, 966, 0, 0,
	0, 252, 253, 255, 254, 256, 257, 258, 526, 1015,
	0, 259, 1022, 260, 1021, 0, 261, 262, 263, 264,
	265, 968, 1001, 935, 266, 1060, 1061, 532, 0, 267,
	268, 1008, 0, 989, 0, 269, 270, 271, 272, 273,
	274, 275, 0, 0, 277, 278, 279, 276, 0, 280,
	0, 281, 282, 283, 0, 284, 1041, 285, 286, 992,
	990, 991, 998, 994, 993, 997, 287, 288, 289, 290,
	1025, 291, 1019, 1018, 939, 295, 292, 293, 0, 296,
	294, 0, 297, 298, 299, 0, 0, 300, 1010, 302,
	0, 303, 304, 0, 305, 306, 307, 0, 308, 309,
	945, 310, 311, 312, 314, 316, 313, 317, 318, 319,
	320, 1032, 1033, 957, 241, 0, 0, 0, 0, 0,
	321, 322, 323, 1017, 0, 0, 0, 324, 0, 325,
	0, 0, 1042, 326, 327, 1030, 1031, 328, 329, 0,
	330, 1039, 0, 967, 331, 0, 332, 333, 334, 335,
	336, 1003, 1004, 1007, 393, 1044, 337, 338, 0, 339,
	340, 341, 342, 0, 0, 0, 242, 343, 344, 346,
	0, 1043, 345, 1012, 1013, 0, 973, 0, 347, 348,
	1045, 1005, 1046, 349, 350, 351, 1047, 352, 0, 0,
	0, 353, 354, 355, 356, 357, 358, 0, 359, 361,
	360, 0, 362, 1040, 1048, 363, 364, 1049, 0, 365,
	366, 367, 996, 995, 368, 369, 370, 371, 0, 372,
	373, 375, 377, 374, 376, 381, 378, 379, 380, 383,
	0, 382, 1050, 384, 385, 386, 389, 390, 388, 1051,
	387, 936, 243, 1052, 391, 958, 1006, 392, 1020, 394,
	395, 0, 0, 396, 0, 0, 0, 398, 399, 400,
	0, 0, 401, 402, 554, 1053, 403, 1054, 1034, 404,
	405, 397, 406, 407, 408, 409, 410, 411, 412, 413,
	0, 414, 415, 556, 557, 1035, 416, 559, 417, 418,
	0, 419, 0, 420, 421, 422, 423, 424, 425, 426,
	1016, 428, 427, 429, 0, 0, 0, 0, 0, 0,
	430, 0, 432, 433, 434, 431, 435, 436, 437, 438,
	0, 439, 440, 441, 1055, 442, 443, 444, 445, 946,
	446, 0, 447, 448, 454, 455, 449, 450, 456, 457,
	458, 459, 460, 0, 462, 463, 461, 464, 465, 466,
	999, 467, 451, 452, 468, 469, 1056, 470, 471, 472,
	473, 474, 475, 1014, 0, 476, 0, 477, 478, 479,
	480, 453, 481, 486, 1059, 482, 483, 484, 485, 1036,
	0, 488, 489, 934, 487, 0, 490, 491, 492, 493,
	494, 495, 315, 496, 0, 497, 1026, 1027, 1028, 1029,
	0, 504, 0, 498, 499, 1037, 500, 1038, 956, 501,
	502, 503, 0, 505, 506, 0, 940, 507, 508, 509,
	511, 512, 510, 513, 1000, 514, 0, 0, 515, 516,
	517, 571, 1023, 1058, 0, 519, 518, 574, 0, 0,
	0, 0, 520, 521, 575, 522, 523, 524, 937, 0,
	0, 0, 0, 0, 0, 933, 0, 0, 0, 0,
	0, 0, 931, 932, 0, 0, 0, 0, 0, 0,
	0, 962, 0, 0, 2338, 960, 978, 950, 951, 952,
	948, 949, 961, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 244, 245, 246, 247, 248, 249, 0,
	250, 251, 0, 0, 0, 0, 0, 1002, 966, 0,
	0, 0, 252, 253, 255, 254, 256, 257, 258, 526,
	1015, 0, 259, 1022, 260, 1021, 0, 261, 262, 263,
	264, 265, 968, 1001, 935, 266, 1060, 1061, 532, 0,
	267, 268, 1008, 0, 989, 0, 269, 270, 271, 272,
	273, 274, 275, 0, 0, 277, 278, 279, 276, 0,
	280, 0, 281, 282, 283, 0, 284, 1041, 285, 286,
	992, 990, 991, 998, 994, 993, 997, 287, 288, 289,
	290, 1025, 291, 1019, 1018, 939, 295, 292, 293, 0,
	296, 294, 0, 297, 298, 299, 0, 0, 300, 1010,
	302, 0, 303, 304, 0, 305, 306, 307, 0, 308,
	309, 945, 310, 311, 312, 314, 316, 313, 317, 318,
	319, 320, 1032, 1033, 957, 241, 0, 0, 0, 0,
	0, 321, 322, 323, 1017, 0, 0, 0, 324, 0,
	325, 0, 0, 1042, 326, 327, 1030, 1031, 328, 329,
	0, 330, 1039, 0, 967, 331, 0, 332, 333, 334,
	335, 336, 1003, 1004, 1007, 393, 1044, 337, 338, 0,
	339, 340, 341, 342, 0, 0, 0, 242, 343, 344,
	346, 0, 1043, 345, 1012, 1013, 0, 973, 0, 347,
	348, 1045, 1005, 1046, 349, 350, 351, 1047, 352, 0,
	0, 0, 353, 354, 355, 356, 357, 358, 0, 359,
	361, 360, 0, 362, 1040, 1048, 363, 364, 1049, 0,
	365, 366, 367, 996, 995, 368, 369, 370, 371, 0,
	372, 373, 375, 377, 374, 376, 381, 378, 379, 380,
	383, 0, 382, 1050, 384, 385, 386, 389, 390, 388,
	1051, 387, 936, 243, 1052, 391, 958, 1006, 392, 1020,
	394, 395, 0, 0, 396, 0, 0, 0, 398, 399,
	400, 0, 0, 401, 402, 554, 1053, 403, 1054, 1034,
	404, 405, 397, 406, 407, 408, 409, 410, 411, 412,
	413, 0, 414, 415, 556, 557, 1035, 416, 559, 417,
	418, 0, 419, 0, 420, 421, 422, 423, 424, 425,
	426, 1016, 428, 427, 429, 0, 0, 0, 0, 0,
	0, 430, 0, 432, 433, 434, 431, 435, 436, 437,
	438, 0, 439, 440, 441, 1055, 442, 443, 444, 445,
	946, 446, 0, 447, 448, 454, 455, 449, 450, 456,
	457, 458, 459, 460, 0, 462, 463, 461, 464, 465,
	466, 999, 467, 451, 452, 468, 469, 1056, 470, 471,
	472, 473, 474, 475, 1014, 0, 476, 0, 477, 478,
	479, 480, 453, 481, 486, 1059, 482, 483, 484, 485,
	1036, 0, 488, 489, 934, 487, 0, 490, 491, 492,
	493, 494, 495, 315, 496, 0, 497, 1026, 1027, 1028,
	1029, 0, 504, 0, 498, 499, 1037, 500, 1038, 956,
	501, 502, 503, 0, 505, 506, 0, 940, 507, 508,
	509, 511, 512, 510, 513, 1000, 514, 0, 0, 515,
	516, 517, 571, 1023, 1058, 0, 519, 518, 574, 0,
	0, 0, 0, 520, 521, 575, 522, 523, 524, 937,
	0, 0, 0, 0, 0, 0, 933, 0, 0, 0,
	0, 0, 0, 931, 932, 0, 0, 0, 0, 0,
	0, 0, 962, 0, 0, 2327, 960, 978, 950, 951,
	952, 948, 949, 961, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 244, 245, 246, 247, 248, 249,
	0, 250, 251, 0, 0, 0, 0, 0, 1002, 966,
	0, 0, 0, 252, 253, 255, 254, 256, 257, 258,
	526, 1015, 0, 259, 1022, 260, 1021, 0, 261, 262,
	263, 264, 265, 968, 1001, 935, 266, 1060, 1061, 532,
	0, 267, 268, 1008, 0, 989, 0, 269, 270, 271,
	272, 273, 274, 275, 0, 0, 277, 278, 279, 276,
	0, 280, 0, 281, 282, 283, 0, 284, 1041, 285,
	286, 992, 990, 991, 998, 994, 993, 997, 287, 288,
	289, 290, 1025, 291, 1019, 1018, 939, 295, 292, 293,
	0, 296, 294, 0, 297, 298, 299, 0, 0, 300,
	1010, 302, 0, 303, 304, 0, 305, 306, 307, 0,
	308, 309, 945, 310, 311, 312, 314, 316, 313, 317,
	318, 319, 320, 1032, 1033, 957, 241, 0, 0, 0,
	0, 0, 321, 322, 323, 1017, 0, 0, 0, 324,
	0, 325, 0, 0, 1042, 326, 327, 1030, 1031, 328,
	329, 0, 330, 1039, 0, 967, 331, 0, 332, 333,
	334, 335, 336, 1003, 1004, 1007, 393, 1044, 337, 338,
	0, 339, 340, 341, 342, 0, 0, 0, 242, 343,
	344, 346, 0, 1043, 345, 1012, 1013, 0, 973, 0,
	347, 348, 1045, 1005, 1046, 349, 350, 351, 1047, 352,
	0, 0, 0, 353, 354, 355, 356, 357, 358, 0,
	359, 361, 360, 0, 362, 1040, 1048, 363, 364, 1049,
	0, 365, 366, 367, 996, 995, 368, 369, 370, 371,
	0, 372, 373, 375, 377, 374, 376, 381, 378, 379,
	380, 383, 0, 382, 1050, 384, 385, 386, 389, 390,
	388, 1051, 387, 936, 243, 1052, 391, 958, 1006, 392,
	1020, 394, 395, 0, 0, 396, 0, 0, 0, 398,
	399, 400, 0, 0, 401, 402, 554, 1053, 403, 1054,
	1034, 404, 405, 397, 406, 407, 408, 409, 410, 411,
	412, 413, 0, 414, 415, 556, 557, 1035, 416, 559,
	417, 418, 0, 419, 0, 420, 421, 422, 423, 424,
	425, 426, 1016, 428, 427, 429, 0, 0, 0, 0,
	0, 0, 430, 0, 432, 433, 434, 431, 435, 436,
	437, 438, 0, 439, 440, 441, 1055, 442, 443, 444,
	445, 946, 446, 0, 447, 448, 454, 455, 449, 450,
	456, 457, 458, 459, 460, 0, 462, 463, 461, 464,
	465, 466, 999, 467, 451, 452, 468, 469, 1056, 470,
	471, 472, 473, 474, 475, 1014, 0, 476, 0, 477,
	478, 479, 480, 453, 481, 486, 1059, 482, 483, 484,
	485, 1036, 0, 488, 489, 934, 487, 0, 490, 491,
	492, 493, 494, 495, 315, 496, 0, 497, 1026, 1027,
	1028, 1029, 0, 504, 0, 498, 499, 1037, 500, 1038,
	956, 501, 502, 503, 0, 505, 506, 0, 940, 507,
	508, 509, 511, 512, 510, 513, 1000, 514, 0, 0,
	515, 516, 517, 571, 1023, 1058, 0, 519, 518, 574,
	0, 0, 0, 0, 520, 521, 575, 522, 523, 524,
	937, 0, 0, 0, 0, 0, 0, 933, 0, 0,
	0, 0, 0, 0, 931, 932, 0, 0, 0, 0,
	0, 0, 0, 962, 0, 0, 2325, 960, 2316, 2323,
	951, 952, 948, 949, 961, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 244, 245, 246, 247, 248,
	249, 0, 250, 251, 0, 0, 0, 0, 0, 1002,
	966, 0, 0, 0, 252, 253, 255, 254, 256, 257,
	258, 526, 1015, 0, 259, 1022, 260, 1021, 0, 261,
	262, 263, 264, 265, 968, 1001, 935, 266, 1060, 1061,
	532, 0, 267, 268, 1008, 0, 989, 0, 269, 270,
	271, 272, 273, 274, 275, 0, 0, 277, 278, 279,
	276, 0, 280, 0, 281, 282, 283, 0, 284, 1041,
	285, 286, 992, 990, 991, 998, 994, 993, 997, 287,
	288, 289, 290, 1025, 2319, 1019, 1018, 939, 295, 292,
	293, 0, 296, 294, 0, 297, 298, 299, 0, 0,
	300, 1010, 302, 0, 303, 304, 0, 305, 306, 307,
	0, 308, 309, 945, 310, 311, 312, 314, 316, 313,
	317, 318, 319, 320, 1032, 1033, 957, 241, 0, 0,
	0, 0, 0, 321, 322, 323, 1017, 0, 0, 0,
	324, 0, 325, 0, 0, 1042, 326, 327, 1030, 1031,
	328, 329, 0, 330, 1039, 0, 967, 331, 0, 332,
	333, 334, 2320, 336, 1003, 1004, 1007, 393, 1044, 337,
	338, 0, 339, 340, 341, 342, 0, 0, 0, 242,
	343, 344, 346, 0, 1043, 345, 1012, 1013, 0, 973,
	0, 347, 348, 1045, 1005, 1046, 349, 350, 351, 1047,
	352, 0, 0, 0, 353, 354, 355, 356, 357, 358,
	0, 359, 361, 360, 0, 362, 1040, 1048, 363, 364,
	1049, 0, 365, 366, 367, 996, 995, 368, 369, 370,
	371, 0, 372, 373, 375, 377, 374, 2321, 2318, 378,
	379, 380, 383, 0, 382, 1050, 384, 385, 386, 389,
	390, 388, 1051, 387, 936, 243, 1052, 391, 958, 1006,
	392, 1020, 394, 395, 0, 0, 396, 0, 0, 0,
	398, 399, 400, 0, 0, 401, 402, 554, 1053, 403,
	1054, 1034, 404, 405, 397, 406, 407, 408, 409, 410,
	411, 412, 413, 0, 414, 415, 556, 557, 1035, 416,
	559, 417, 418, 0, 419, 0, 420, 421, 422, 423,
	424, 425, 426, 1016, 428, 427, 429, 0, 0, 0,
	0, 0, 0, 430, 0, 432, 433, 434, 431, 435,
	436, 437, 438, 0, 439, 440, 441, 1055, 442, 443,
	444, 445, 946, 446, 0, 447, 448, 454, 455, 449,
	450, 456, 457, 458, 459, 2322, 0, 462, 463, 461,
	464, 465, 466, 999, 467, 451, 452, 468, 469, 1056,
	470, 471, 472, 473, 474, 475, 1014, 0, 476, 0,
	477, 478, 479, 480, 453, 481, 486, 1059, 482, 483,
	484, 485, 1036, 0, 488, 489, 934, 487, 0, 490,
	491, 492, 493, 494, 495, 315, 496, 0, 497, 1026,
	1027, 1028, 1029, 0, 504, 0, 498, 499, 1037, 500,
	1038, 956, 501, 502, 503, 0, 505, 506, 0, 940,
	507, 508, 509, 511, 512, 510, 513, 1000, 514, 0,
	0, 515, 516, 517, 571, 1023, 1058, 0, 519, 518,
	574, 0, 0, 0, 0, 520, 521, 575, 522, 2317,
	524, 937, 0, 0, 0, 0, 0, 0, 933, 0,
	0, 0, 0, 0, 0, 931, 932, 0, 0, 0,
	0, 0, 0, 0, 962, 0, 0, 2313, 960, 2316,
	2323, 951, 952, 948, 949, 961, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 244, 245, 246, 247,
	248, 249, 0, 250, 251, 0, 0, 0, 0, 0,
	1002, 966, 0, 0, 0, 252, 253, 255, 254, 256,
	257, 258, 526, 1015, 0, 259, 1022, 260, 1021, 0,
	261, 262, 263, 264, 265, 968, 1001, 935, 266, 1060,
	1061, 532, 0, 267, 268, 1008, 0, 989, 0, 269,
	270, 271, 272, 273, 274, 275, 0, 0, 277, 278,
	279, 276, 0, 280, 0, 281, 282, 283, 0, 284,
	1041, 285, 286, 992, 990, 991, 998, 994, 993, 997,
	287, 288, 289, 290, 1025, 2319, 1019, 1018, 939, 295,
	292, 293, 0, 296, 294, 0, 297, 298, 299, 0,
	0, 300, 1010, 302, 0, 303, 304, 0, 305, 306,
	307, 0, 308, 309, 945, 310, 311, 312, 314, 316,
	313, 317, 318, 319, 320, 1032, 1033, 957, 241, 0,
	0, 0, 0, 0, 321, 322, 323, 1017, 0, 0,
	0, 324, 0, 325, 0, 0, 1042, 326, 327, 1030,
	1031, 328, 329, 0, 330, 1039, 0, 967, 331, 0,
	332, 333, 334, 2320, 336, 1003, 1004, 1007, 393, 1044,
	337, 338, 0, 339, 340, 341, 342, 0, 0, 0,
	242, 343, 344, 346, 0, 1043, 345, 1012, 1013, 0,
	973, 0, 347, 348, 1045, 1005, 1046, 349, 350, 351,
	1047, 352, 0, 0, 0, 353, 354, 355, 356, 357,
	358, 0, 359, 361, 360, 0, 362, 1040, 1048, 363,
	364, 1049, 0, 365, 366, 367, 996, 995, 368, 369,
	370, 371, 0, 372, 373, 375, 377, 374, 2321, 2318,
	378, 379, 380, 383, 0, 382, 1050, 384, 385, 386,
	389, 390, 388, 1051, 387, 936, 243, 1052, 391, 958,
	1006, 392, 1020, 394, 395, 0, 0, 396, 0, 0,
	0, 398, 399, 400, 0, 0, 401, 402, 554, 1053,
	403, 1054, 1034, 404, 405, 397, 406, 407, 408, 409,
	410, 411, 412, 413, 0, 414, 415, 556, 557, 1035,
	416, 559, 417, 418, 0, 419, 0, 420, 421, 422,
	423, 424, 425, 426, 1016, 428, 427, 429, 0, 0,
	0, 0, 0, 0, 430, 0, 432, 433, 434, 431,
	435, 436, 437, 438, 0, 439, 440, 441, 1055, 442,
	443, 444, 445, 946, 446, 0, 447, 448, 454, 455,
	449, 450, 456, 457, 458, 459, 2322, 0, 462, 463,
	461, 464, 465, 466, 999, 467, 451, 452, 468, 469,
	1056, 470, 471, 472, 473, 474, 475, 1014, 0, 476,
	0, 477, 478, 479, 480, 453, 481, 486, 1059, 482,
	483, 484, 485, 1036, 0, 488, 489, 934, 487, 0,
	490, 491, 492, 493, 494, 495, 315, 496, 0, 497,
	1026, 1027, 1028, 1029, 0, 504, 0, 498, 499, 1037,
	500, 1038, 956, 501, 502, 503, 0, 505, 506, 0,
	940, 507, 508, 509, 511, 512, 510, 513, 1000, 514,
	0, 0, 515, 516, 517, 571, 1023, 1058, 0, 519,
	518, 574, 0, 0, 0, 0, 520, 521, 575, 522,
	2317, 524, 937, 0, 0, 0, 0, 0, 0, 933,
	0, 0, 0, 0, 0, 0, 931, 932, 978, 950,
	951, 952, 948, 949, 961, 962, 0, 0, 0, 960,
	0, 0, 0, 0, 0, 244, 245, 246, 247, 248,
	249, 0, 250, 251, 0, 0, 0, 0, 0, 1002,
	966, 0, 0, 0, 252, 253, 255, 254, 256, 257,
	258, 526, 1015, 0, 259, 1022, 260, 1021, 0, 261,
	262, 263, 264, 265, 968, 1001, 935, 266, 1060, 1061,
	532, 0, 267, 268, 1008, 0, 989, 0, 269, 270,
	271, 272, 273, 274, 275, 0, 0, 277, 278, 279,
	276, 0, 280, 0, 281, 282, 283, 0, 284, 1041,
	285, 286, 992, 990, 991, 998, 994, 993, 997, 287,
	288, 289, 290, 1025, 291, 1019, 1018, 939, 295, 292,
	293, 0, 296, 294, 0, 297, 298, 299, 0, 0,
	300, 1010, 302, 0, 303, 304, 0, 305, 306, 307,
	0, 308, 309, 945, 310, 311, 312, 314, 316, 313,
	317, 318, 319, 320, 1032, 1033, 957, 241, 0, 0,
	0, 0, 0, 321, 322, 323, 1017, 0, 0, 0,
	324, 0, 325, 0, 0, 1042, 326, 327, 1030, 1031,
	328, 329, 0, 330, 1039, 0, 967, 331, 0, 332,
	333, 334, 335, 336, 1003, 1004, 1007, 393, 1044, 337,
	338, 0, 339, 340, 341, 342, 0, 0, 0, 242,
	343, 344, 346, 0, 1043, 345, 1012, 1013, 0, 973,
	0, 347, 348, 1045, 1005, 1046, 349, 350, 351, 1047,
	352, 0, 0, 0, 353, 354, 355, 356, 357, 358,
	0, 359, 361, 360, 0, 362, 1040, 1048, 363, 364,
	1049, 0, 365, 366, 367, 996, 995, 368, 369, 370,
	371, 0, 372, 373, 375, 377, 374, 376, 381, 378,
	379, 380, 383, 0, 382, 1050, 384, 385, 386, 389,
	390, 388, 1051, 387, 936, 243, 1052, 391, 958, 1006,
	392, 1020, 394, 395, 0, 0, 396, 0, 0, 0,
	398, 399, 400, 0, 0, 401, 402, 554, 1053, 403,
	1054, 1034, 404, 405, 397, 406, 407, 408, 409, 410,
	411, 412, 413, 0, 414, 415, 556, 557, 1035, 416,
	559, 417, 418, 0, 419, 0, 420, 421, 422, 423,
	424, 425, 426, 1016, 428, 427, 429, 0, 0, 0,
	0, 0, 0, 430, 0, 432, 433, 434, 431, 435,
	436, 437, 438, 0, 439, 440, 441, 1055, 442, 443,
	444, 445, 946, 446, 0, 447, 448, 454, 455, 449,
	450, 456, 457, 458, 459, 460, 0, 462, 463, 461,
	464, 465, 466, 999, 467, 451, 452, 468, 469, 1056,
	470, 471, 472, 473, 474, 475, 1014, 0, 476, 0,
	477, 478, 479, 480, 453, 481, 486, 1059, 482, 483,
	484, 485, 1036, 0, 488, 489, 934, 487, 0, 490,
	491, 492, 493, 494, 495, 315, 496, 0, 497, 1026,
	1027, 1028, 1029, 0, 504, 0, 498, 499, 1037, 500,
	1038, 956, 501, 502, 503, 0, 505, 506, 0, 940,
	507, 508, 509, 511, 512, 510, 513, 1000, 514, 0,
	0, 515, 516, 517, 571, 1023, 1058, 0, 519, 518,
	574, 0, 0, 0, 0, 520, 521, 575, 522, 523,
	524, 937, 0, 0, 0, 0, 0, 0, 933, 0,
	0, 0, 0, 0, 0, 931, 932, 0, 0, 0,
	0, 0, 1671, 0, 962, 0, 0, 0, 960, 978,
	950, 951, 952, 948, 949, 961, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 244, 245, 246, 247,
	248, 249, 2131, 250, 251, 0, 0, 0, 0, 0,
	1002, 966, 0, 0, 0, 252, 253, 255, 254, 256,
	257, 258, 526, 1015, 0, 259, 1022, 260, 1021, 0,
	261, 262, 263, 264, 265, 968, 1001, 935, 266, 1060,
	1061, 532, 0, 267, 268, 1008, 0, 989, 0, 269,
	270, 271, 272, 273, 274, 275, 0, 0, 277, 278,
	279, 276, 0, 280, 0, 281, 282, 283, 0, 284,
	1041, 285, 286, 992, 990, 991, 998, 994, 993, 997,
	287, 288, 289, 290, 1025, 291, 1019, 1018, 939, 295,
	292, 293, 0, 296, 294, 0, 297, 298, 299, 0,
	0, 300, 1010, 302, 0, 303, 304, 0, 305, 306,
	307, 0, 308, 309, 945, 310, 311, 312, 314, 316,
	313, 317, 318, 319, 320, 1032, 1033, 957, 241, 0,
	0, 0, 0, 0, 321, 322, 323, 1017, 0, 0,
	0, 324, 0, 325, 0, 0, 1042, 326, 327, 1030,
	1031, 328, 329, 0, 330, 1039, 0, 967, 331, 0,
	332, 333, 334, 335, 336, 1003, 1004, 1007, 393, 1044,
	337, 338, 0, 339, 340, 341, 342, 0, 0, 0,
	242, 343, 344, 346, 0, 1043, 345, 1012, 1013, 0,
	973, 0, 347, 348, 1045, 1005, 1046, 349, 350, 351,
	1047, 352, 0, 0, 0, 353, 354, 355, 356, 357,
	358, 0, 359, 361, 360, 0, 362, 1040, 1048, 363,
	364, 1049, 0, 365, 366, 367, 996, 995, 368, 369,
	370, 371, 0, 372, 373, 375, 377, 374, 376, 381,
	378, 379, 380, 383, 0, 382, 1050, 384, 385, 386,
	389, 390, 388, 1051, 387, 936, 243, 1052, 391, 958,
	1006, 392, 1020, 394, 395, 0, 0, 396, 0, 0,
	0, 398, 399, 400, 0, 0, 401, 402, 554, 1053,
	403, 1054, 1034, 404, 405, 397, 406, 407, 408, 409,
	410, 411, 412, 413, 0, 414, 415, 556, 557, 1035,
	416, 559, 417, 418, 0, 419, 0, 420, 421, 422,
	423, 424, 425, 426, 1016, 428, 427, 429, 0, 0,
	0, 0, 0, 0, 430, 0, 432, 433, 434, 431,
	435, 436, 437, 438, 0, 439, 440, 441, 1055, 442,
	443, 444, 445, 946, 446, 0, 447, 448, 454, 455,
	449, 450, 456, 457, 458, 459, 460, 0, 462, 463,
	461, 464, 465, 466, 999, 467, 451, 452, 468, 469,
	1056, 470, 471, 472, 473, 474, 475, 1014, 0, 476,
	0, 477, 478, 479, 480, 453, 481, 486, 1059, 482,
	483, 484, 485, 1036, 0, 488, 489, 934, 487, 0,
	490, 491, 492, 493, 494, 495, 315, 496, 0, 497,
	1026, 1027, 1028, 1029, 0, 504, 0, 498, 499, 1037,
	500, 1038, 956, 501, 502, 503, 0, 505, 506, 0,
	940, 507, 508, 509, 511, 512, 510, 513, 1000, 514,
	0, 0, 515, 516, 517, 571, 1023, 1058, 0, 519,
	518, 574, 0, 0, 0, 0, 520, 521, 575, 522,
	523, 524, 937, 0, 0, 0, 0, 0, 0, 933,
	0, 0, 0, 0, 0, 0, 931, 932, 0, 0,
	0, 0, 0, 0, 0, 962, 0, 0, 1523, 960,
	978, 950, 951, 952, 948, 949, 961, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 244, 245, 246,
	247, 248, 249, 0, 250, 251, 0, 0, 0, 0,
	0, 1002, 966, 0, 0, 0, 252, 253, 255, 254,
	256, 257, 258, 526, 1015, 0, 259, 1022, 260, 1021,
	0, 261, 262, 263, 264, 265, 968, 1001, 935, 266,
	1060, 1061, 532, 0, 267, 268, 1008, 0, 989, 0,
	269, 270, 271, 272, 273, 274, 275, 0, 0, 277,
	278, 279, 276, 0, 280, 0, 281, 282, 283, 0,
	284, 1041, 285, 286, 992, 990, 991, 998, 994, 993,
	997, 287, 288, 289, 290, 1025, 291, 1019, 1018, 939,
	295, 292, 293, 0, 296, 294, 0, 297, 298, 299,
	0, 0, 300, 1010, 302, 0, 303, 304, 0, 305,
	306, 307, 0, 308, 309, 945, 310, 311, 312, 314,
	316, 313, 317, 318, 319, 320, 1032, 1033, 957, 241,
	0, 0, 0, 0, 0, 321, 322, 323, 1017, 0,
	0, 0, 324, 0, 325, 0, 0, 1042, 326, 327,
	1030, 1031, 328, 329, 0, 330, 1039, 0, 967, 331,
	0, 332, 333, 334, 335, 336, 1003, 1004, 1007, 393,
	1044, 337, 338, 0, 339, 340, 341, 342, 0, 0,
	0, 242, 343, 344, 346, 0, 1043, 345, 1012, 1013,
	0, 973, 0, 347, 348, 1045, 1005, 1046, 349, 350,
	351, 1047, 352, 0, 0, 0, 353, 354, 355, 356,
	357, 358, 0, 359, 361, 360, 0, 362, 1040, 1048,
	363, 364, 1049, 0, 365, 366, 367, 996, 995, 368,
	369, 370, 371, 0, 372, 373, 375, 377, 374, 376,
	381, 378, 379, 380, 383, 0, 382, 1050, 384, 385,
	386, 389, 390, 388, 1051, 387, 936, 243, 1052, 391,
	958, 1006, 392, 1020, 394, 395, 0, 0, 396, 0,
	0, 0, 398, 399, 400, 0, 0, 401, 402, 554,
	1053, 403, 1054, 1034, 404, 405, 397, 406, 407, 408,
	409, 410, 411, 412, 413, 0, 414, 415, 556, 557,
	1035, 416, 559, 417, 418, 0, 419, 0, 420, 421,
	422, 423, 424, 425, 426, 1016, 428, 427, 429, 0,
	0, 0, 0, 0, 0, 430, 0, 432, 433, 434,
	431, 435, 436, 437, 438, 0, 439, 440, 441, 1055,
	442, 443, 444, 445, 946, 446, 0, 447, 448, 454,
	455, 449, 450, 456, 457, 458, 459, 460, 0, 462,
	463, 461, 464, 465, 466, 999, 467, 451, 452, 468,
	469, 1056, 470, 471, 472, 473, 474, 475, 1014, 0,
	476, 0, 477, 478, 479, 480, 453, 481, 486, 1059,
	482, 483, 484, 485, 1036, 0, 488, 489, 934, 487,
	0, 490, 491, 492, 493, 494, 495, 315, 496, 0,
	497, 1026, 1027, 1028, 1029, 0, 504, 0, 498, 499,
	1037, 500, 1038, 956, 501, 502, 503, 0, 505, 506,
	0, 940, 507, 508, 509, 511, 512, 510, 513, 1000,
	514, 0, 0, 515, 516, 517, 571, 1023, 1058, 0,
	519, 518, 574, 0, 0, 0, 0, 520, 521, 575,
	522, 523, 524, 937, 0, 0, 0, 0, 0, 0,
	933, 0, 0, 0, 0, 0, 0, 931, 932, 0,
	0, 0, 0, 0, 0, 0, 962, 0, 0, 1461,
	960, 978, 950, 951, 952, 948, 949, 961, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 244, 245,
	246, 247, 248, 249, 0, 250, 251, 0, 0, 0,
	0, 0, 1002, 966, 0, 0, 0, 252, 253, 255,
	254, 256, 257, 258, 526, 1015, 0, 259, 1022, 260,
	1021, 0, 261, 262, 263, 264, 265, 968, 1001, 935,
	266, 1060, 1061, 532, 0, 267, 268, 1008, 0, 989,
	0, 269, 270, 271, 272, 273, 274, 275, 0, 0,
	277, 278, 279, 276, 0, 280, 0, 281, 282, 283,
	0, 284, 1041, 285, 286, 992, 990, 991, 998, 994,
	993, 997, 287, 288, 289, 290, 1025, 291, 1019, 1018,
	939, 295, 292, 293, 0, 296, 294, 0, 297, 298,
	299, 0, 0, 300, 1010, 302, 0, 303, 304, 0,
	305, 306, 307, 0, 308, 309, 945, 310, 311, 312,
	314, 316, 313, 317, 318, 319, 320, 1032, 1033, 957,
	241, 0, 0, 0, 0, 0, 321, 322, 323, 1017,
	0, 0, 0, 324, 0, 325, 0, 0, 1042, 326,
	327, 1030, 1031, 328, 329, 0, 330, 1039, 0, 967,
	331, 0, 332, 333, 334, 335, 336, 1003, 1004, 1007,
	393, 1044, 337, 338, 0, 339, 340, 341, 342, 0,
	0, 0, 242, 343, 344, 346, 0, 1043, 345, 1012,
	1013, 0, 973, 0, 347, 348, 1045, 1005, 1046, 349,
	350, 351, 1047, 352, 0, 0, 0, 353, 354, 355,
	356, 357, 358, 0, 359, 361, 360, 0, 362, 1040,
	1048, 363, 364, 1049, 0, 365, 366, 367, 996, 995,
	368, 369, 370, 371, 0, 372, 373, 375, 377, 374,
	376, 381, 378, 379, 380, 383, 0, 382, 1050, 384,
	385, 386, 389, 390, 388, 1051, 387, 936, 243, 1052,
	391, 958, 1006, 392, 1020, 394, 395, 0, 0, 396,
	0, 0, 0, 398, 399, 400, 0, 0, 401, 402,
	554, 1053, 403, 1054, 1034, 404, 405, 397, 406, 407,
	408, 409, 410, 411, 412, 413, 0, 414, 415, 556,
	557, 1035, 416, 559, 417, 418, 0, 419, 0, 420,
	421, 422, 423, 424, 425, 426, 1016, 428, 427, 429,
	0, 0, 0, 0, 0, 0, 430, 0, 432, 433,
	434, 431, 435, 436, 437, 438, 0, 439, 440, 441,
	1055, 442, 443, 444, 445, 946, 446, 0, 447, 448,
	454, 455, 449, 450, 456, 457, 458, 459, 460, 0,
	462, 463, 461, 464, 465, 466, 999, 467, 451, 452,
	468, 469, 1056, 470, 471, 472, 473, 474, 475, 1014,
	0, 476, 0, 477, 478, 479, 480, 453, 481, 486,
	1059, 482, 483, 484, 485, 1036, 0, 488, 489, 934,
	487, 0, 490, 491, 492, 493, 494, 495, 315, 496,
	0, 497, 1026, 1027, 1028, 1029, 0, 504, 0, 498,
	499, 1037, 500, 1038, 956, 501, 502, 503, 0, 505,
	506, 0, 940, 507, 508, 509, 511, 512, 510, 513,
	1000, 514, 0, 0, 515, 516, 517, 571, 1023, 1058,
	0, 519, 518, 574, 0, 0, 0, 0, 520, 521,
	575, 522, 523, 524, 937, 0, 0, 0, 0, 0,
	0, 933, 0, 0, 0, 0, 0, 0, 931, 932,
	0, 0, 0, 0, 0, 0, 0, 962, 0, 0,
	1456, 960, 978, 950, 951, 952, 948, 949, 961, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 244,
	245, 246, 247, 248, 249, 0, 250, 251, 0, 0,
	0, 0, 0, 1002, 966, 0, 0, 0, 252, 253,
	255, 254, 256, 257, 258, 526, 1015, 0, 259, 1022,
	260, 1021, 0, 261, 262, 263, 264, 265, 968, 1001,
	935, 266, 1060, 1061, 532, 0, 267, 268, 1008, 0,
	989, 0, 269, 270, 271, 272, 273, 274, 275, 0,
	0, 277, 278, 279, 276, 0, 280, 0, 281, 282,
	283, 0, 284, 1041, 285, 286, 992, 990, 991, 998,
	994, 993, 997, 287, 288, 289, 290, 1025, 291, 1019,
	1018, 939, 295, 292, 293, 0, 296, 294, 0, 297,
	298, 299, 0, 0, 300, 1010, 302, 0, 303, 304,
	0, 305, 306, 307, 0, 308, 309, 945, 310, 311,
	312, 314, 316, 313, 317, 318, 319, 320, 1032, 1033,
	957, 241, 0, 0, 0, 0, 0, 321, 322, 323,
	1017, 0, 0, 0, 324, 0, 325, 0, 0, 1042,
	326, 327, 1030, 1031, 328, 329, 0, 330, 1039, 0,
	967, 331, 0, 332, 333, 334, 335, 336, 1003, 1004,
	1007, 393, 1044, 337, 338, 0, 339, 340, 341, 342,
	0, 0, 0, 242, 343, 344, 346, 0, 1043, 345,
	1012, 1013, 0, 973, 0, 347, 348, 1045, 1005, 1046,
	349, 350, 351, 1047, 352, 0, 0, 0, 353, 354,
	355, 356, 357, 358, 0, 359, 361, 360, 0, 362,
	1040, 1048, 363, 364, 1049, 0, 365, 366, 367, 996,
	995, 368, 369, 370, 371, 0, 372, 373, 375, 377,
	374, 376, 381, 378, 379, 380, 383, 0, 382, 1050,
	384, 385, 386, 389, 390, 388, 1051, 387, 936, 243,
	1052, 391, 958, 1006, 392, 1020, 394, 395, 0, 0,
	396, 0, 0, 0, 398, 399, 400, 0, 0, 401,
	402, 554, 1053, 403, 1054, 1034, 404, 405, 397, 406,
	407, 408, 409, 410, 411, 412, 413, 0, 414, 415,
	556, 557, 1035, 416, 559, 417, 418, 0, 419, 0,
	420, 421, 422, 423, 424, 425, 426, 1016, 428, 427,
	429, 0, 0, 0, 0, 0, 0, 430, 0, 432,
	433, 434, 431, 435, 436, 437, 438, 0, 439, 440,
	441, 1055, 442, 443, 444, 445, 946, 446, 0, 447,
	448, 454, 455, 449, 450, 456, 457, 458, 459, 460,
	0, 462, 463, 461, 464, 465, 466, 999, 467, 451,
	452, 468, 469, 1056, 470, 471, 472, 473, 474, 475,
	1014, 0, 476, 0, 477, 478, 479, 480, 453, 481,
	486, 1059, 482, 483, 484, 485, 1036, 0, 488, 489,
	934, 487, 0, 490, 491, 492, 493, 494, 495, 315,
	496, 0, 497, 1026, 1027, 1028, 1029, 0, 504, 0,
	498, 499, 1037, 500, 1038, 956, 501, 502, 503, 0,
	505, 506, 0, 940, 507, 508, 509, 511, 512, 510,
	513, 1000, 514, 0, 0, 515, 516, 517, 571, 1023,
	1058, 0, 519, 518, 574, 0, 0, 0, 0, 520,
	521, 575, 522, 523, 524, 937, 0, 0, 0, 0,
	0, 0, 933, 0, 0, 0, 0, 0, 0, 931,
	932, 0, 0, 0, 0, 0, 0, 0, 962, 0,
	0, 1447, 960, 978, 950, 951, 952, 948, 949, 961,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	244, 245, 246, 247, 248, 249, 0, 250, 251, 0,
	0, 0, 0, 0, 1002, 966, 0, 0, 0, 252,
	253, 255, 254, 256, 257, 258, 526, 1015, 0, 259,
	1022, 260, 1021, 0, 261, 262, 263, 264, 265, 968,
	1001, 935, 266, 1060, 1061, 532, 0, 267, 268, 1008,
	0, 989, 0, 269, 270, 271, 272, 273, 274, 275,
	0, 0, 277, 278, 279, 276, 0, 280, 0, 281,
	282, 283, 0, 284, 1041, 285, 286, 992, 990, 991,
	998, 994, 993, 997, 287, 288, 289, 290, 1025, 291,
	1019, 1018, 939, 295, 292, 293, 0, 296, 294, 0,
	297, 298, 299, 0, 0, 300, 1010, 302, 0, 303,
	304, 0, 305, 306, 307, 0, 308, 309, 945, 310,
	311, 312, 314, 316, 313, 317, 318, 319, 320, 1032,
	1033, 957, 241, 0, 0, 0, 0, 0, 321, 322,
	323, 1017, 0, 0, 0, 324, 0, 325, 0, 0,
	1042, 326, 327, 1030, 1031, 328, 329, 0, 330, 1039,
	0, 967, 331, 0, 332, 333, 334, 335, 336, 1003,
	1004, 1007, 393, 1044, 337, 338, 0, 339, 340, 341,
	342, 0, 0, 0, 242, 343, 344, 346, 0, 1043,
	345, 1012, 1013, 0, 973, 0, 347, 348, 1045, 1005,
	1046, 349, 350, 351, 1047, 352, 0, 0, 0, 353,
	354, 355, 356, 357, 358, 0, 359, 361, 360, 0,
	362, 1040, 1048, 363, 364, 1049, 0, 365, 366, 367,
	996, 995, 368, 369, 370, 371, 0, 372, 373, 375,
	377, 374, 376, 381, 378, 379, 380, 383, 0, 382,
	1050, 384, 385, 386, 389, 390, 388, 1051, 387, 936,
	243, 1052, 391, 958, 1006, 392, 1020, 394, 395, 0,
	0, 396, 0, 0, 0, 398, 399, 400, 0, 0,
	401, 402, 554, 1053, 403, 1054, 1034, 404, 405, 397,
	406, 407, 408, 409, 410, 411, 412, 413, 0, 414,
	415, 556, 557, 1035, 416, 559, 417, 418, 0, 419,
	0, 420, 421, 422, 423, 424, 425, 426, 1016, 428,
	427, 429, 0, 0, 0, 0, 0, 0, 430, 0,
	432, 433, 434, 431, 435, 436, 437, 438, 0, 439,
	440, 441, 1055, 442, 443, 444, 445, 946, 446, 0,
	447, 448, 454, 455, 449, 450, 456, 457, 458, 459,
	460, 0, 462, 463, 461, 464, 465, 466, 999, 467,
	451, 452, 468, 469, 1056, 470, 471, 472, 473, 474,
	475, 1014, 0, 476, 0, 477, 478, 479, 480, 453,
	481, 486, 1059, 482, 483, 484, 485, 1036, 0, 488,
	489, 934, 487, 0, 490, 491, 492, 493, 494, 495,
	315, 496, 0, 497, 1026, 1027, 1028, 1029, 0, 504,
	0, 498, 499, 1037, 500, 1038, 956, 501, 502, 503,
	0, 505, 506, 0, 940, 507, 508, 509, 511, 512,
	510, 513, 1000, 514, 0, 0, 515, 516, 517, 571,
	1023, 1058, 0, 519, 518, 574, 0, 0, 0, 0,
	520, 521, 575, 522, 523, 524, 937, 0, 0, 0,
	0, 0, 0, 933, 0, 0, 0, 0, 0, 0,
	931, 932, 0, 0, 0, 0, 0, 0, 0, 962,
	0, 0, 1442, 960, 978, 950, 951, 952, 948, 949,
	961, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 244, 245, 246, 247, 248, 249, 0, 250, 251,
	0, 0, 0, 0, 0, 1002, 966, 0, 0, 0,
	252, 253, 255, 254, 256, 257, 258, 526, 1015, 0,
	259, 1022, 260, 1021, 0, 261, 262, 263, 264, 265,
	968, 1001, 935, 266, 1060, 1061, 532, 0, 267, 268,
	1008, 0, 989, 0, 269, 270, 271, 272, 273, 274,
	275, 0, 0, 277, 278, 279, 276, 0, 280, 0,
	281, 282, 283, 0, 284, 1041, 285, 286, 992, 990,
	991, 998, 994, 993, 997, 287, 288, 289, 290, 1025,
	291, 1019, 1018, 939, 295, 292, 293, 0, 296, 294,
	0, 297, 298, 299, 0, 0, 300, 1010, 302, 0,
	303, 304, 0, 305, 306, 307, 0, 308, 309, 945,
	310, 311, 312, 314, 316, 313, 317, 318, 319, 320,
	1032, 1033, 957, 241, 0, 0, 0, 0, 0, 321,
	322, 323, 1017, 0, 0, 0, 324, 0, 325, 0,
	0, 1042, 326, 327, 1030, 1031, 328, 329, 0, 330,
	1039, 0, 967, 331, 0, 332, 333, 334, 335, 336,
	1003, 1004, 1007, 393, 1044, 337, 338, 0, 339, 340,
	341, 342, 0, 0, 0, 242, 343, 344, 346, 0,
	1043, 345, 1012, 1013, 0, 973, 0, 347, 348, 1045,
	1005, 1046, 349, 350, 351, 1047, 352, 0, 0, 0,
	353, 354, 355, 356, 357, 358, 0, 359, 361, 360,
	0, 362, 1040, 1048, 363, 364, 1049, 0, 365, 366,
	367, 996, 995, 368, 369, 370, 371, 0, 372, 373,
	375, 377, 374, 376, 381, 378, 379, 380, 383, 0,
	382, 1050, 384, 385, 386, 389, 390, 388, 1051, 387,
	936, 243, 1052, 391, 958, 1006, 392, 1020, 394, 395,
	0, 0, 396, 0, 0, 0, 398, 399, 400, 0,
	0, 401, 402, 554, 1053, 403, 1054, 1034, 404, 405,
	397, 406, 407, 408, 409, 410, 411, 412, 413, 0,
	414, 415, 556, 557, 1035, 416, 559, 417, 418, 0,
	419, 0, 420, 421, 422, 423, 424, 425, 426, 1016,
	428, 427, 429, 0, 0, 0, 0, 0, 0, 430,
	0, 432, 433, 434, 431, 435, 436, 437, 438, 0,
	439, 440, 441, 1055, 442, 443, 444, 445, 946, 446,
	0, 447, 448, 454, 455, 449, 450, 456, 457, 458,
	459, 460, 0, 462, 463, 461, 464, 465, 466, 999,
	467, 451, 452, 468, 469, 1056, 470, 471, 472, 473,
	474, 475, 1014, 0, 476, 0, 477, 478, 479, 480,
	453, 481, 486, 1059, 482, 483, 484, 485, 1036, 0,
	488, 489, 934, 487, 0, 490, 491, 492, 493, 494,
	495, 315, 496, 0, 497, 1026, 1027, 1028, 1029, 0,
	504, 0, 498, 499, 1037, 500, 1038, 956, 501, 502,
	503, 0, 505, 506, 0, 940, 507, 508, 509, 511,
	512, 510, 513, 1000, 514, 0, 0, 515, 516, 517,
	571, 1023, 1058, 0, 519, 518, 574, 0, 0, 0,
	0, 520, 521, 575, 522, 523, 524, 937, 0, 0,
	0, 0, 0, 0, 933, 0, 0, 0, 0, 0,
	0, 931, 932, 0, 0, 0, 0, 0, 0, 0,
	962, 0, 0, 1424, 960, 978, 950, 951, 952, 948,
	949, 961, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 244, 245, 246, 247, 248, 249, 0, 250,
	251, 0, 0, 0, 0, 0, 1002, 966, 0, 0,
	0, 252, 253, 255, 254, 256, 257, 258, 526, 1015,
	0, 259, 1022, 260, 1021, 0, 261, 262, 263, 264,
	265, 968, 1001, 935, 266, 1060, 1061, 532, 0, 267,
	268, 1008, 0, 989, 0, 269, 270, 271, 272, 273,
	274, 275, 0, 0, 277, 278, 279, 276, 0, 280,
	0, 281, 282, 283, 0, 284, 1041, 285, 286, 992,
	990, 991, 998, 994, 993, 997, 287, 288, 289, 290,
	1025, 291, 1019, 1018, 939, 295, 292, 293, 0, 296,
	294, 0, 297, 298, 299, 0, 0, 300, 1010, 302,
	0, 303, 304, 0, 305, 306, 307, 0, 308, 309,
	945, 310, 311, 312, 314, 316, 313, 317, 318, 319,
	320, 1032, 1033, 957, 241, 0, 0, 0, 0, 0,
	321, 322, 323, 1017, 0, 0, 0, 324, 0, 325,
	0, 0, 1042, 326, 327, 1030, 1031, 328, 329, 0,
	330, 1039, 0, 967, 331, 0, 332, 333, 334, 335,
	336, 1003, 1004, 1007, 393, 1044, 337, 338, 0, 339,
	340, 341, 342, 0, 0, 0, 242, 343, 344, 346,
	0, 1043, 345, 1012, 1013, 0, 973, 0, 347, 348,
	1045, 1005, 1046, 349, 350, 351, 1047, 352, 0, 0,
	0, 353, 354, 355, 356, 357, 358, 0, 359, 361,
	360, 0, 362, 1040, 1048, 363, 364, 1049, 0, 365,
	366, 367, 996, 995, 368, 369, 370, 371, 0, 372,
	373, 375, 377, 374, 376, 381, 378, 379, 380, 383,
	0, 382, 1050, 384, 385, 386, 389, 390, 388, 1051,
	387, 936, 243, 1052, 391, 958, 1006, 392, 1020, 394,
	395, 0, 0, 396, 0, 0, 0, 398, 399, 400,
	0, 0, 401, 402, 554, 1053, 403, 1054, 1034, 404,
	405, 397, 406, 407, 408, 409, 410, 411, 412, 413,
	0, 414, 415, 556, 557, 1035, 416, 559, 417, 418,
	0, 419, 0, 420, 421, 422, 423, 424, 425, 426,
	1016, 428, 427, 429, 0, 0, 0, 0, 0, 0,
	430, 0, 432, 433, 434, 431, 435, 436, 437, 438,
	0, 439, 440, 441, 1055, 442, 443, 444, 445, 946,
	446, 0, 447, 448, 454, 455, 449, 450, 456, 457,
	458, 459, 460, 0, 462, 463, 461, 464, 465, 466,
	999, 467, 451, 452, 468, 469, 1056, 470, 471, 472,
	473, 474, 475, 1014, 0, 476, 0, 477, 478, 479,
	480, 453, 481, 486, 1059, 482, 483, 484, 485, 1036,
	0, 488, 489, 934, 487, 0, 490, 491, 492, 493,
	494, 495, 315, 496, 0, 497, 1026, 1027, 1028, 1029,
	0, 504, 0, 498, 499, 1037, 500, 1038, 956, 501,
	502, 503, 0, 505, 506, 0, 940, 507, 508, 509,
	511, 512, 510, 513, 1000, 514, 0, 0, 515, 516,
	517, 571, 1023, 1058, 0, 519, 518, 574, 0, 0,
	0, 0, 520, 521, 575, 522, 523, 524, 937, 0,
	0, 0, 0, 0, 0, 933, 0, 0, 0, 0,
	0, 0, 931, 932, 0, 0, 0, 0, 0, 0,
	0, 962, 0, 0, 1311, 960, 978, 950, 951, 952,
	948, 949, 961, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 244, 245, 246, 247, 248, 249, 0,
	250, 251, 0, 0, 0, 0, 0, 1002, 966, 0,
	0, 0, 252, 253, 255, 254, 256, 257, 258, 526,
	1015, 0, 259, 1022, 260, 1021, 0, 261, 262, 263,
	264, 265, 968, 1001, 935, 266, 1060, 1061, 532, 0,
	267, 268, 1008, 0, 989, 0, 269, 270, 271, 272,
	273, 274, 275, 0, 0, 277, 278, 279, 276, 0,
	280, 0, 281, 282, 283, 0, 284, 1041, 285, 286,
	992, 990, 991, 998, 994, 993, 997, 287, 288, 289,
	290, 1025, 291, 1019, 1018, 939, 295, 292, 293, 0,
	296, 294, 0, 297, 298, 299, 0, 0, 300, 1010,
	302, 0, 303, 304, 0, 305, 306, 307, 0, 308,
	309, 945, 310, 311, 312, 314, 316, 313, 317, 318,
	319, 320, 1032, 1033, 957, 241, 0, 0, 0, 0,
	0, 321, 322, 323, 1017, 0, 0, 0, 324, 0,
	325, 0, 0, 1042, 326, 327, 1030, 1031, 328, 329,
	0, 330, 1039, 0, 967, 331, 0, 332, 333, 334,
	335, 336, 1310, 1004, 1007, 393, 1044, 337, 338, 0,
	339, 340, 341, 342, 0, 0, 0, 242, 343, 344,
	346, 0, 1043, 345, 1012, 1013, 0, 973, 0, 347,
	348, 1045, 1005, 1046, 349, 350, 351, 1047, 352, 0,
	0, 0, 353, 354, 355, 356, 357, 358, 0, 359,
	361, 360, 0, 362, 1040, 1048, 363, 364, 1049, 0,
	365, 366, 367, 996, 995, 368, 369, 370, 371, 0,
	372, 373, 375, 377, 374, 376, 381, 378, 379, 380,
	383, 0, 382, 1050, 384, 385, 386, 389, 390, 388,
	1051, 387, 936, 243, 1052, 391, 958, 1006, 392, 1020,
	394, 395, 0, 0, 396, 0, 0, 0, 398, 399,
	400, 0, 0, 401, 402, 554, 1053, 403, 1054, 1034,
	404, 405, 397, 406, 407, 408, 409, 410, 411, 412,
	413, 0, 414, 415, 556, 557, 1035, 416, 559, 417,
	418, 0, 419, 0, 420, 421, 422, 423, 424, 425,
	426, 1016, 428, 427, 429, 0, 0, 0, 0, 0,
	0, 430, 0, 432, 433, 434, 431, 435, 436, 437,
	438, 0, 439, 440, 441, 1055, 442, 443, 444, 445,
	946, 446, 0, 447, 448, 454, 455, 449, 450, 456,
	457, 458, 459, 460, 0, 462, 463, 461, 464, 465,
	466, 999, 467, 451, 452, 468, 469, 1056, 470, 471,
	472, 473, 474, 475, 1014, 0, 476, 0, 477, 478,
	479, 480, 453, 481, 486, 1059, 482, 483, 484, 485,
	1036, 0, 488, 489, 934, 487, 0, 490, 491, 492,
	493, 494, 495, 315, 496, 0, 497, 1026, 1027, 1028,
	1029, 0, 504, 0, 498, 499, 1037, 500, 1038, 956,
	501, 502, 503, 0, 505, 506, 0, 940, 507, 508,
	509, 511, 512, 510, 513, 1000, 514, 0, 0, 515,
	516, 517, 571, 1023, 1058, 0, 519, 518, 574, 0,
	0, 0, 0, 520, 521, 575, 522, 523, 524, 937,
	0, 0, 0, 0, 0, 0, 933, 0, 0, 0,
	0, 0, 0, 931, 932, 0, 0, 0, 0, 0,
	0, 0, 962, 0, 0, 1305, 960, 978, 950, 951,
	952, 948, 949, 961, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 244, 245, 246, 247, 248, 249,
	0, 250, 251, 0, 0, 0, 0, 0, 1002, 966,
	0, 0, 0, 252, 253, 255, 254, 256, 257, 258,
	526, 1015, 0, 259, 1022, 260, 1021, 0, 261, 262,
	263, 264, 265, 968, 1001, 935, 266, 1060, 1061, 532,
	0, 267, 268, 1008, 0, 989, 0, 269, 270, 271,
	272, 273, 274, 275, 0, 0, 277, 278, 279, 276,
	0, 280, 0, 281, 282, 283, 0, 284, 1041, 285,
	286, 992, 990, 991, 998, 994, 993, 997, 287, 288,
	289, 290, 1025, 291, 1019, 1018, 939, 295, 292, 293,
	0, 296, 294, 0, 297, 298, 299, 0, 0, 300,
	1010, 302, 0, 303, 304, 0, 305, 306, 307, 0,
	308, 309, 945, 310, 311, 312, 314, 316, 313, 317,
	318, 319, 320, 1032, 1033, 957, 241, 0, 0, 0,
	0, 0, 321, 322, 323, 1017, 0, 0, 0, 324,
	0, 325, 0, 0, 1042, 326, 327, 1030, 1031, 328,
	329, 0, 330, 1039, 0, 967, 331, 0, 332, 333,
	334, 335, 336, 1304, 1004, 1007, 393, 1044, 337, 338,
	0, 339, 340, 341, 342, 0, 0, 0, 242, 343,
	344, 346, 0, 1043, 345, 1012, 1013, 0, 973, 0,
	347, 348, 1045, 1005, 1046, 349, 350, 351, 1047, 352,
	0, 0, 0, 353, 354, 355, 356, 357, 358, 0,
	359, 361, 360, 0, 362, 1040, 1048, 363, 364, 1049,
	0, 365, 366, 367, 996, 995, 368, 369, 370, 371,
	0, 372, 373, 375, 377, 374, 376, 381, 378, 379,
	380, 383, 0, 382, 1050, 384, 385, 386, 389, 390,
	388, 1051, 387, 936, 243, 1052, 391, 958, 1006, 392,
	1020, 394, 395, 0, 0, 396, 0, 0, 0, 398,
	399, 400, 0, 0, 401, 402, 554, 1053, 403, 1054,
	1034, 404, 405, 397, 406, 407, 408, 409, 410, 411,
	412, 413, 0, 414, 415, 556, 557, 1035, 416, 559,
	417, 418, 0, 419, 0, 420, 421, 422, 423, 424,
	425, 426, 1016, 428, 427, 429, 0, 0, 0, 0,
	0, 0, 430, 0, 432, 433, 434, 431, 435, 436,
	437, 438, 0, 439, 440, 441, 1055, 442, 443, 444,
	445, 946, 446, 0, 447, 448, 454, 455, 449, 450,
	456, 457, 458, 459, 460, 0, 462, 463, 461, 464,
	465, 466, 999, 467, 451, 452, 468, 469, 1056, 470,
	471, 472, 473, 474, 475, 1014, 0, 476, 0, 477,
	478, 479, 480, 453, 481, 486, 1059, 482, 483, 484,
	485, 1036, 0, 488, 489, 934, 487, 0, 490, 491,
	492, 493, 494, 495, 315, 496, 0, 497, 1026, 1027,
	1028, 1029, 0, 504, 0, 498, 499, 1037, 500, 1038,
	956, 501, 502, 503, 0, 505, 506, 0, 940, 507,
	508, 509, 511, 512, 510, 513, 1000, 514, 0, 0,
	515, 516, 517, 571, 1023, 1058, 0, 519, 518, 574,
	0, 0, 0, 0, 520, 521, 575, 522, 523, 524,
	937, 0, 0, 0, 0, 0, 0, 933, 0, 0,
	0, 0, 0, 0, 931, 932, 0, 0, 0, 0,
	0, 0, 0, 962, 0, 0, 1298, 960, 978, 950,
	951, 952, 948, 949, 961, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 244, 245, 246, 247, 248,
	249, 0, 250, 251, 0, 0, 0, 0, 0, 1002,
	966, 0, 0, 0, 252, 253, 255, 254, 256, 257,
	258, 526, 1015, 0, 259, 1022, 260, 1021, 0, 261,
	262, 263, 264, 265, 968, 1001, 935, 266, 1060, 1061,
	532, 0, 267, 268, 1008, 0, 989, 0, 269, 270,
	271, 272, 273, 274, 275, 0, 0, 277, 278, 279,
	276, 0, 280, 0, 281, 282, 283, 0, 284, 1041,
	285, 286, 992, 990, 991, 998, 994, 993, 997, 287,
	288, 289, 290, 1025, 291, 1019, 1018, 939, 295, 292,
	293, 0, 296, 294, 0, 297, 298, 299, 0, 0,
	300, 1010, 302, 0, 303, 304, 0, 305, 306, 307,
	0, 308, 309, 945, 310, 311, 312, 314, 316, 313,
	317, 318, 319, 320, 1032, 1033, 957, 241, 0, 0,
	0, 0, 0, 321, 322, 323, 1017, 0, 0, 0,
	324, 0, 325, 0, 0, 1042, 326, 327, 1030, 1031,
	328, 329, 0, 330, 1039, 0, 967, 331, 0, 332,
	333, 334, 335, 336, 1003, 1004, 1007, 393, 1044, 337,
	338, 0, 339, 340, 341, 342, 0, 0, 0, 242,
	343, 344, 346, 0, 1043, 345, 1012, 1013, 0, 973,
	0, 347, 348, 1045, 1005, 1046, 349, 350, 351, 1047,
	352, 0, 0, 0, 353, 354, 355, 356, 357, 358,
	0, 359, 361, 360, 0, 362, 1040, 1048, 363, 364,
	1049, 0, 365, 366, 367, 996, 995, 368, 369, 370,
	371, 0, 372, 373, 375, 377, 374, 376, 381, 378,
	379, 380, 383, 0, 382, 1050, 384, 385, 386, 389,
	390, 388, 1051, 387, 936, 243, 1052, 391, 958, 1006,
	392, 1020, 394, 395, 0, 0, 396, 0, 0, 0,
	398, 399, 400, 0, 0, 401, 402, 554, 1053, 403,
	1054, 1034, 404, 405, 397, 406, 407, 408, 409, 410,
	411, 412, 413, 0, 414, 415, 556, 557, 1035, 416,
	559, 417, 418, 0, 419, 0, 420, 421, 422, 423,
	424, 425, 426, 1016, 428, 427, 429, 0, 0, 0,
	0, 0, 0, 430, 0, 432, 433, 434, 431, 435,
	436, 437, 438, 0, 439, 440, 441, 1055, 442, 443,
	444, 445, 946, 446, 0, 447, 448, 454, 455, 449,
	450, 456, 457, 458, 459, 460, 0, 462, 463, 461,
	464, 465, 466, 999, 467, 451, 452, 468, 469, 1056,
	470, 471, 472, 473, 474, 475, 1014, 0, 476, 0,
	477, 478, 479, 480, 453, 481, 486, 1059, 482, 483,
	484, 485, 1036, 0, 488, 489, 934, 487, 0, 490,
	491, 492, 493, 494, 495, 315, 496, 0, 497, 1026,
	1027, 1028, 1029, 0, 504, 0, 498, 499, 1037, 500,
	1038, 956, 501, 502, 503, 0, 505, 506, 0, 940,
	507, 508, 509, 511, 512, 510, 513, 1000, 514, 0,
	0, 515, 516, 517, 571, 1023, 1058, 0, 519, 518,
	574, 0, 0, 0, 0, 520, 521, 575, 522, 523,
	524, 937, 0, 0, 0, 0, 0, 0, 933, 0,
	0, 0, 0, 0, 0, 931, 932, 978, 950, 951,
	952, 948, 949, 961, 962, 0, 0, 0, 960, 0,
	0, 0, 0, 0, 244, 245, 246, 247, 248, 249,
	0, 250, 251, 0, 0, 0, 0, 0, 1002, 966,
	0, 0, 0, 252, 253, 255, 254, 256, 257, 258,
	526, 1015, 0, 259, 1022, 260, 1021, 0, 261, 262,
	263, 264, 265, 968, 1001, 935, 266, 1060, 1061, 532,
	0, 267, 268, 1008, 0, 989, 0, 269, 270, 271,
	272, 273, 274, 275, 0, 0, 277, 278, 279, 276,
	0, 280, 0, 281, 282, 283, 0, 284, 1041, 285,
	286, 992, 990, 991, 998, 994, 993, 997, 287, 288,
	289, 290, 1025, 291, 1019, 1018, 939, 295, 292, 293,
	0, 296, 294, 0, 297, 298, 299, 0, 0, 300,
	1010, 302, 0, 303, 304, 0, 305, 306, 307, 0,
	308, 309, 945, 310, 311, 312, 314, 316, 313, 317,
	318, 319, 320, 1032, 1033, 957, 241, 0, 0, 0,
	0, 0, 321, 322, 323, 1017, 0, 0, 0, 324,
	0, 325, 0, 0, 1042, 326, 327, 1030, 1031, 328,
	329, 0, 330, 1039, 0, 967, 331, 0, 332, 333,
	334, 335, 336, 1003, 1004, 1007, 393, 1044, 337, 338,
	0, 339, 340, 341, 342, 0, 0, 0, 242, 343,
	344, 346, 0, 1043, 345, 1012, 1013, 0, 973, 0,
	347, 348, 1045, 1005, 1046, 349, 350, 351, 1047, 352,
	0, 0, 0, 353, 354, 355, 356, 357, 358, 0,
	359, 361, 360, 0, 362, 1040, 1048, 363, 364, 1049,
	0, 365, 366, 367, 996, 995, 368, 369, 370, 371,
	0, 372, 373, 375, 377, 374, 376, 381, 378, 379,
	380, 383, 0, 382, 1050, 384, 385, 386, 389, 390,
	388, 1051, 387, 936, 243, 1052, 391, 958, 1006, 392,
	1020, 394, 395, 0, 0, 396, 0, 0, 0, 398,
	399, 400, 0, 0, 401, 402, 554, 1053, 403, 1054,
	1034, 404, 405, 397, 406, 407, 408, 409, 410, 411,
	412, 413, 0, 414, 415, 556, 557, 1035, 416, 559,
	417, 418, 0, 419, 0, 420, 421, 422, 423, 424,
	425, 426, 1016, 428, 427, 429, 0, 0, 0, 0,
	0, 0, 430, 0, 432, 433, 434, 431, 435, 436,
	437, 438, 0, 439, 440, 441, 1055, 442, 443, 444,
	445, 946, 446, 0, 447, 448, 454, 455, 449, 450,
	456, 457, 458, 459, 460, 0, 462, 463, 461, 464,
	465, 466, 999, 467, 451, 452, 468, 469, 1056, 470,
	471, 472, 473, 474, 475, 1014, 0, 476, 0, 477,
	478, 479, 480, 453, 481, 486, 1059, 482, 483, 484,
	485, 1036, 0, 488, 489, 934, 487, 0, 490, 491,
	492, 493, 494, 495, 315, 496, 0, 497, 1026, 1027,
	1028, 1029, 0, 504, 0, 498, 499, 1037, 500, 1038,
	956, 501, 502, 503, 0, 505, 506, 0, 940, 507,
	508, 509, 511, 512, 510, 513, 1000, 514, 0, 0,
	515, 516, 517, 571, 1023, 1058, 0, 519, 518, 574,
	0, 0, 0, 0, 520, 521, 575, 522, 523, 524,
	937, 0, 0, 0, 0, 0, 0, 933, 0, 0,
	0, 0, 0, 0, 931, 932, 978, 950, 951, 952,
	948, 949, 961, 962, 0, 0, 0, 960, 0, 0,
	0, 0, 0, 244, 245, 246, 247, 248, 249, 0,
	250, 251, 0, 0, 0, 0, 0, 1002, 966, 0,
	0, 0, 252, 253, 255, 254, 256, 257, 258, 526,
	1015, 0, 259, 1022, 260, 1021, 0, 261, 262, 263,
	264, 265, 968, 1001, 935, 266, 1060, 1061, 532, 0,
	267, 268, 1008, 0, 989, 0, 269, 270, 271, 272,
	273, 274, 275, 0, 0, 277, 278, 279, 276, 0,
	280, 0, 281, 282, 283, 0, 284, 1041, 285, 3987,
	992, 990, 991, 998, 994, 993, 997, 287, 288, 289,
	290, 1025, 291, 1019, 1018, 939, 295, 292, 293, 0,
	296, 294, 0, 297, 298, 299, 0, 0, 300, 1010,
	302, 0, 303, 304, 0, 305, 306, 307, 0, 308,
	309, 945, 310, 311, 312, 314, 316, 313, 317, 318,
	319, 320, 1032, 1033, 957, 241, 0, 0, 0, 0,
	0, 321, 322, 323, 1017, 0, 0, 0, 324, 0,
	325, 0, 0, 1042, 326, 327, 1030, 1031, 328, 329,
	0, 330, 1039, 0, 967, 331, 0, 332, 333, 334,
	335, 336, 1003, 1004, 1007, 393, 1044, 337, 338, 0,
	339, 340, 341, 342, 0, 0, 0, 242, 343, 344,
	346, 0, 1043, 345, 1012, 1013, 0, 973, 0, 347,
	348, 1045, 1005, 1046, 349, 350, 351, 1047, 352, 0,
	0, 0, 353, 354, 355, 356, 357, 358, 0, 359,
	361, 360, 0, 362, 1040, 1048, 363, 364, 1049, 0,
	365, 366, 367, 996, 995, 368, 369, 370, 371, 0,
	372, 373, 375, 377, 374, 376, 381, 378, 379, 380,
	383, 0, 382, 1050, 384, 385, 386, 389, 390, 388,
	1051, 387, 936, 243, 1052, 391, 958, 1006, 392, 1020,
	394, 395, 0, 0, 396, 0, 0, 0, 398, 399,
	400, 0, 0, 401, 402, 554, 1053, 403, 1054, 1034,
	404, 405, 397, 406, 407, 408, 409, 410, 411, 412,
	413, 0, 414, 415, 556, 557, 1035, 416, 559, 417,
	418, 0, 419, 0, 420, 421, 422, 423, 424, 425,
	426, 1016, 428, 427, 429, 0, 0, 0, 0, 0,
	0, 430, 0, 432, 433, 434, 431, 435, 436, 437,
	438, 0, 439, 440, 441, 1055, 442, 443, 444, 445,
	946, 446, 0, 447, 448, 454, 455, 449, 450, 456,
	457, 458, 459, 460, 0, 462, 463, 461, 464, 465,
	466, 999, 467, 451, 452, 468, 469, 1056, 470, 471,
	472, 473, 474, 475, 1014, 0, 476, 0, 477, 478,
	479, 480, 453, 481, 486, 1059, 482, 483, 484, 485,
	1036, 0, 488, 489, 934, 487, 0, 490, 491, 492,
	493, 494, 495, 315, 496, 0, 497, 1026, 1027, 1028,
	1029, 0, 504, 0, 498, 499, 1037, 500, 1038, 956,
	501, 502, 503, 0, 3986, 506, 0, 940, 507, 508,
	509, 511, 512, 510, 513, 1000, 514, 0, 0, 515,
	516, 517, 571, 1023, 1058, 0, 519, 518, 574, 0,
	0, 0, 0, 520, 521, 575, 522, 523, 524, 937,
	0, 0, 0, 0, 0, 0, 933, 0, 0, 0,
	0, 0, 0, 931, 932, 978, 950, 951, 952, 948,
	949, 961, 962, 0, 0, 0, 960, 0, 0, 0,
	0, 0, 244, 245, 246, 247, 248, 249, 0, 250,
	251, 0, 0, 0, 0, 0, 1002, 966, 0, 0,
	0, 252, 253, 255, 254, 256, 257, 258, 3985, 1015,
	0, 259, 1022, 260, 1021, 0, 261, 262, 263, 264,
	265, 968, 1001, 935, 266, 1060, 1061, 532, 0, 267,
	268, 1008, 0, 989, 0, 269, 270, 271, 272, 273,
	274, 275, 0, 0, 277, 278, 279, 276, 0, 280,
	0, 281, 282, 283, 0, 284, 1041, 285, 3987, 992,
	990, 991, 998, 994, 993, 997, 287, 288, 289, 290,
	1025, 291, 1019, 1018, 939, 295, 292, 293, 0, 296,
	294, 0, 297, 298, 299, 0, 0, 300, 1010, 302,
	0, 303, 304, 0, 305, 306, 307, 0, 308, 309,
	945, 310, 311, 312, 314, 316, 313, 317, 318, 319,
	320, 1032, 1033, 957, 241, 0, 0, 0, 0, 0,
	321, 322, 323, 1017, 0, 0, 0, 324, 0, 325,
	0, 0, 1042, 326, 327, 1030, 1031, 328, 329, 0,
	330, 1039, 0, 967, 331, 0, 332, 333, 334, 335,
	336, 1003, 1004, 1007, 393, 1044, 337, 338, 0, 339,
	340, 341, 342, 0, 0, 0, 242, 343, 344, 346,
	0, 1043, 345, 1012, 1013, 0, 973, 0, 347, 348,
	1045, 1005, 1046, 349, 350, 351, 1047, 352, 0, 0,
	0, 353, 354, 355, 356, 357, 358, 0, 359, 361,
	360, 0, 362, 1040, 1048, 363, 364, 1049, 0, 365,
	366, 367, 996, 995, 368, 369, 370, 371, 0, 372,
	373, 375, 377, 374, 376, 381, 378, 379, 380, 383,
	0, 382, 1050, 384, 385, 386, 389, 390, 388, 1051,
	387, 936, 243, 1052, 391, 958, 1006, 392, 1020, 394,
	395, 0, 0, 396, 0, 0, 0, 398, 399, 400,
	0, 0, 401, 402, 554, 1053, 403, 1054, 1034, 404,
	405, 397, 406, 407, 408, 409, 410, 411, 412, 413,
	0, 414, 415, 556, 557, 1035, 416, 559, 417, 418,
	0, 419, 0, 420, 421, 422, 423, 424, 425, 426,
	1016, 428, 427, 429, 0, 0, 0, 0, 0, 0,
	430, 0, 432, 433, 434, 431, 435, 436, 437, 438,
	0, 439, 440, 441, 1055, 442, 443, 444, 445, 946,
	446, 0, 447, 448, 454, 455, 449, 450, 456, 457,
	458, 459, 460, 0, 462, 463, 461, 464, 465, 466,
	999, 467, 451, 452, 468, 469, 1056, 470, 471, 472,
	473, 474, 475, 1014, 0, 476, 0, 477, 478, 479,
	480, 453, 481, 486, 1059, 482, 483, 484, 485, 1036,
	0, 488, 489, 934, 487, 0, 490, 491, 492, 493,
	494, 495, 315, 496, 0, 497, 1026, 1027, 1028, 1029,
	0, 504, 0, 498, 499, 1037, 500, 1038, 956, 501,
	502, 503, 0, 3986, 506, 0, 940, 507, 508, 509,
	511, 512, 510, 513, 1000, 514, 0, 0, 515, 516,
	517, 571, 1023, 1058, 0, 519, 518, 574, 0, 0,
	0, 0, 520, 521, 575, 522, 523, 524, 937, 0,
	0, 0, 0, 0, 0, 933, 0, 0, 0, 0,
	0, 0, 931, 932, 978, 950, 951, 952, 2717, 2718,
	961, 962, 0, 0, 0, 960, 0, 0, 0, 0,
	0, 244, 245, 246, 247, 248, 249, 0, 250, 251,
	0, 0, 0, 0, 0, 1002, 966, 0, 0, 0,
	252, 253, 255, 254, 256, 257, 258, 526, 1015, 0,
	259, 1022, 260, 1021, 0, 261, 262, 263, 264, 265,
	968, 1001, 935, 266, 1060, 1061, 532, 0, 267, 268,
	1008, 0, 989, 0, 269, 270, 271, 272, 273, 274,
	275, 0, 0, 277, 278, 279, 276, 0, 280, 0,
	281, 282, 283, 0, 284, 1041, 285, 286, 992, 990,
	991, 998, 994, 993, 997, 287, 288, 289, 290, 1025,
	291, 1019, 1018, 939, 295, 292, 293, 0, 296, 294,
	0, 297, 298, 299, 0, 0, 300, 1010, 302, 0,
	303, 304, 0, 305, 306, 307, 0, 308, 309, 945,
	310, 311, 312, 314, 316, 313, 317, 318, 319, 320,
	1032, 1033, 957, 241, 0, 0, 0, 0, 0, 321,
	322, 323, 1017, 0, 0, 0, 324, 0, 325, 0,
	0, 1042, 326, 327, 1030, 1031, 328, 329, 0, 330,
	1039, 0, 967, 331, 0, 332, 333, 334, 335, 336,
	1003, 1004, 1007, 393, 1044, 337, 338, 0, 339, 340,
	341, 342, 0, 0, 0, 242, 343, 344, 346, 0,
	1043, 345, 1012, 1013, 0, 973, 0, 347, 348, 1045,
	1005, 1046, 349, 350, 351, 1047, 352, 0, 0, 0,
	353, 354, 355, 356, 357, 358, 0, 359, 361, 360,
	0, 362, 1040, 1048, 363, 364, 1049, 0, 365, 366,
	367, 996, 995, 368, 369, 370, 371, 0, 372, 373,
	375, 377, 374, 376, 381, 378, 379, 380, 383, 0,
	382, 1050, 384, 385, 386, 389, 390, 388, 1051, 387,
	936, 243, 1052, 391, 958, 1006, 392, 1020, 394, 395,
	0, 0, 396, 0, 0, 0, 398, 399, 400, 0,
	0, 401, 402, 554, 1053, 403, 1054, 1034, 404, 405,
	397, 406, 407, 408, 409, 410, 411, 412, 413, 0,
	414, 415, 556, 557, 1035, 416, 559, 417, 418, 0,
	419, 0, 420, 421, 422, 423, 424, 425, 426, 1016,
	428, 427, 429, 0, 0, 0, 0, 0, 0, 430,
	0, 432, 433, 434, 431, 435, 436, 437, 438, 0,
	439, 440, 441, 1055, 442, 443, 444, 445, 946, 446,
	0, 447, 448, 454, 455, 449, 450, 456, 457, 458,
	459, 460, 0, 462, 463, 461, 464, 465, 466, 999,
	467, 451, 452, 468, 469, 1056, 470, 471, 472, 473,
	474, 475, 1014, 0, 476, 0, 477, 478, 479, 480,
	453, 481, 486, 1059, 482, 483, 484, 485, 1036, 0,
	488, 489, 934, 487, 0, 490, 491, 492, 493, 494,
	495, 315, 496, 0, 497, 1026, 1027, 1028, 1029, 0,
	504, 0, 498, 499, 1037, 500, 1038, 956, 501, 502,
	503, 0, 505, 506, 0, 940, 507, 508, 509, 511,
	512, 510, 513, 1000, 514, 0, 0, 515, 516, 517,
	571, 1023, 1058, 0, 519, 518, 574, 0, 0, 0,
	0, 520, 521, 575, 522, 523, 524, 937, 0, 0,
	0, 0, 0, 0, 933, 0, 0, 0, 0, 0,
	0, 931, 932, 978, 950, 951, 952, 2715, 2716, 961,
	962, 0, 0, 0, 960, 0, 0, 0, 0, 0,
	244, 245, 246, 247, 248, 249, 0, 250, 251, 0,
	0, 0, 0, 0, 1002, 966, 0, 0, 0, 252,
	253, 255, 254, 256, 257, 258, 526, 1015, 0, 259,
	1022, 260, 1021, 0, 261, 262, 263, 264, 265, 968,
	1001, 935, 266, 1060, 1061, 532, 0, 267, 268, 1008,
	0, 989, 0, 269, 270, 271, 272, 273, 274, 275,
	0, 0, 277, 278, 279, 276, 0, 280, 0, 281,
	282, 283, 0, 284, 1041, 285, 286, 992, 990, 991,
	998, 994, 993, 997, 287, 288, 289, 290, 1025, 291,
	1019, 1018, 939, 295, 292, 293, 0, 296, 294, 0,
	297, 298, 299, 0, 0, 300, 1010, 302, 0, 303,
	304, 0, 305, 306, 307, 0, 308, 309, 945, 310,
	311, 312, 314, 316, 313, 317, 318, 319, 320, 1032,
	1033, 957, 241, 0, 0, 0, 0, 0, 321, 322,
	323, 1017, 0, 0, 0, 324, 0, 325, 0, 0,
	1042, 326, 327, 1030, 1031, 328, 329, 0, 330, 1039,
	0, 967, 331, 0, 332, 333, 334, 335, 336, 1003,
	1004, 1007, 393, 1044, 337, 338, 0, 339, 340, 341,
	342, 0, 0, 0, 242, 343, 344, 346, 0, 1043,
	345, 1012, 1013, 0, 973, 0, 347, 348, 1045, 1005,
	1046, 349, 350, 351, 1047, 352, 0, 0, 0, 353,
	354, 355, 356, 357, 358, 0, 359, 361, 360, 0,
	362, 1040, 1048, 363, 364, 1049, 0, 365, 366, 367,
	996, 995, 368, 369, 370, 371, 0, 372, 373, 375,
	377, 374, 376, 381, 378, 379, 380, 383, 0, 382,
	1050, 384, 385, 386, 389, 390, 388, 1051, 387, 936,
	243, 1052, 391, 958, 1006, 392, 1020, 394, 395, 0,
	0, 396, 0, 0, 0, 398, 399, 400, 0, 0,
	401, 402, 554, 1053, 403, 1054, 1034, 404, 405, 397,
	406, 407, 408, 409, 410, 411, 412, 413, 0, 414,
	415, 556, 557, 1035, 416, 559, 417, 418, 0, 419,
	0, 420, 421, 422, 423, 424, 425, 426, 1016, 428,
	427, 429, 0, 0, 0, 0, 0, 0, 430, 0,
	432, 433, 434, 431, 435, 436, 437, 438, 0, 439,
	440, 441, 1055, 442, 443, 444, 445, 946, 446, 0,
	447, 448, 454, 455, 449, 450, 456, 457, 458, 459,
	460, 0, 462, 463, 461, 464, 465, 466, 999, 467,
	451, 452, 468, 469, 1056, 470, 471, 472, 473, 474,
	475, 1014, 0, 476, 0, 477, 478, 479, 480, 453,
	481, 486, 1059, 482, 483, 484, 485, 1036, 0, 488,
	489, 934, 487, 0, 490, 491, 492, 493, 494, 495,
	315, 496, 0, 497, 1026, 1027, 1028, 1029, 0, 504,
	0, 498, 499, 1037, 500, 1038, 956, 501, 502, 503,
	0, 505, 506, 0, 940, 507, 508, 509, 511, 512,
	510, 513, 1000, 514, 0, 0, 515, 516, 517, 571,
	1023, 1058, 0, 519, 518, 574, 0, 0, 0, 0,
	520, 521, 575, 522, 523, 524, 937, 0, 0, 0,
	0, 0, 0, 933, 0, 0, 0, 0, 0, 0,
	931, 932, 978, 950, 951, 952, 948, 949, 961, 962,
	0, 0, 0, 960, 0, 0, 0, 0, 0, 244,
	245, 246, 247, 248, 249, 0, 250, 251, 0, 0,
	0, 0, 0, 1002, 966, 0, 0, 0, 252, 253,
	255, 254, 256, 257, 258, 526, 1015, 0, 259, 1022,
	260, 1021, 0, 261, 262, 263, 264, 265, 968, 1001,
	935, 266, 1060, 1061, 532, 0, 267, 268, 1008, 0,
	989, 0, 269, 270, 271, 272, 273, 274, 275, 0,
	0, 277, 278, 279, 276, 0, 280, 0, 281, 282,
	283, 0, 284, 1041, 285, 286, 992, 990, 991, 998,
	994, 993, 997, 287, 288, 289, 290, 1025, 291, 1019,
	1018, 939, 295, 292, 293, 0, 296, 294, 0, 297,
	298, 299, 0, 0, 300, 1010, 302, 0, 303, 304,
	0, 305, 306, 307, 0, 308, 309, 945, 310, 311,
	312, 314, 316, 313, 317, 318, 319, 320, 1032, 1033,
	957, 241, 0, 0, 0, 0, 0, 321, 322, 323,
	1017, 0, 0, 0, 324, 0, 325, 0, 0, 1042,
	326, 327, 1030, 1031, 328, 329, 0, 330, 1039, 0,
	967, 331, 0, 332, 333, 334, 335, 336, 1003, 1004,
	1007, 393, 1044, 337, 338, 0, 339, 340, 341, 342,
	0, 0, 0, 242, 343, 344, 346, 0, 1043, 345,
	1012, 1013, 0, 973, 0, 347, 348, 1045, 1005, 1046,
	349, 350, 351, 1047, 352, 0, 0, 0, 353, 354,
	355, 356, 357, 358, 0, 359, 361, 360, 0, 362,
	1040, 1048, 363, 364, 1049, 0, 365, 366, 367, 996,
	995, 368, 369, 370, 371, 0, 372, 373, 375, 377,
	374, 376, 381, 378, 379, 380, 383, 0, 382, 1050,
	384, 385, 386, 389, 390, 388, 1051, 387, 936, 243,
	1052, 391, 958, 1006, 392, 1020, 394, 395, 0, 0,
	396, 0, 0, 0, 398, 399, 400, 0, 0, 401,
	402, 554, 1053, 403, 1054, 1034, 404, 405, 397, 406,
	407, 408, 409, 410, 411, 412, 413, 0, 414, 415,
	556, 557, 1035, 416, 559, 417, 418, 0, 419, 0,
	420, 421, 422, 423, 424, 425, 426, 1016, 428, 427,
	429, 0, 0, 0, 0, 0, 0, 430, 0, 432,
	433, 434, 431, 435, 436, 437, 438, 0, 439, 440,
	441, 1055, 442, 443, 444, 445, 946, 446, 0, 447,
	448, 454, 455, 449, 450, 456, 457, 458, 459, 460,
	0, 462, 463, 461, 464, 465, 466, 999, 467, 451,
	452, 468, 469, 1056, 470, 471, 472, 473, 474, 475,
	1014, 0, 476, 0, 477, 478, 479, 480, 453, 481,
	486, 1059, 482, 483, 484, 485, 1036, 0, 488, 489,
	934, 487, 0, 490, 491, 492, 493, 494, 495, 315,
	496, 0, 497, 1026, 1027, 1028, 1029, 0, 504, 0,
	498, 499, 1037, 500, 1038, 956, 501, 502, 503, 0,
	505, 506, 0, 940, 507, 508, 509, 511, 512, 510,
	513, 1000, 514, 0, 0, 515, 516, 517, 571, 1023,
	1058, 0, 519, 518, 574, 0, 0, 0, 0, 520,
	521, 575, 522, 523, 524, 937, 0, 0, 0, 0,
	0, 0, 933, 0, 0, 0, 0, 0, 0, 2139,
	2140, 978, 950, 951, 952, 948, 949, 961, 962, 0,
	0, 0, 960, 0, 0, 0, 0, 0, 244, 245,
	246, 247, 248, 249, 0, 250, 251, 0, 0, 0,
	0, 0, 1002, 966, 0, 0, 0, 252, 253, 255,
	254, 256, 257, 258, 526, 1015, 0, 259, 1022, 260,
	1021, 0, 261, 262, 263, 264, 265, 968, 1001, 0,
	266, 1060, 1061, 532, 0, 267, 268, 1008, 0, 989,
	0, 269, 270, 271, 272, 273, 274, 275, 0, 0,
	277, 278, 279, 276, 0, 280, 0, 281, 282, 283,
	0, 284, 1041, 285, 286, 992, 990, 991, 998, 994,
	993, 997, 287, 288, 289, 290, 1025, 291, 1019, 1018,
	0, 295, 292, 293, 0, 296, 294, 0, 297, 298,
	299, 0, 0, 300, 1010, 302, 0, 303, 304, 0,
	305, 306, 307, 0, 308, 309, 945, 310, 311, 312,
	314, 316, 313, 317, 318, 319, 320, 1032, 1033, 957,
	241, 0, 0, 0, 0, 0, 321, 322, 323, 1017,
	0, 0, 0, 324, 0, 325, 0, 0, 1042, 326,
	327, 1030, 1031, 328, 329, 0, 330, 1039, 0, 967,
	331, 0, 332, 333, 334, 335, 336, 1003, 1004, 1007,
	393, 1044, 337, 338, 0, 339, 340, 341, 342, 0,
	0, 0, 242, 343, 344, 346, 0, 1043, 345, 1012,
	1013, 0, 973, 0, 347, 348, 1045, 1005, 1046, 349,
	350, 351, 1047, 352, 0, 0, 0, 353, 354, 355,
	356, 357, 358, 0, 359, 361, 360, 0, 362, 1040,
	1048, 363, 364, 1049, 0, 365, 366, 367, 996, 995,
	368, 369, 370, 371, 0, 372, 373, 375, 377, 374,
	376, 381, 378, 379, 380, 383, 0, 382, 1050, 384,
	385, 386, 389, 390, 388, 1051, 387, 0, 243, 1052,
	391, 958, 1006, 392, 1020, 394, 395, 0, 0, 396,
	0, 0, 0, 398, 399, 400, 0, 0, 401, 402,
	554, 1053, 403, 1054, 1034, 404, 405, 397, 406, 407,
	408, 409, 410, 411, 412, 413, 0, 414, 415, 556,
	557, 1035, 416, 559, 417, 418, 0, 419, 0, 420,
	421, 422, 423, 424, 425, 426, 1016, 428, 427, 429,
	0, 0, 0, 0, 0, 0, 430, 0, 432, 433,
	434, 431, 435, 436, 437, 438, 0, 439, 440, 441,
	1055, 442, 443, 444, 445, 946, 446, 0, 447, 448,
	454, 455, 449, 450, 456, 457, 458, 459, 460, 0,
	462, 463, 461, 464, 465, 466, 999, 467, 451, 452,
	468, 469, 1056, 470, 471, 472, 473, 474, 475, 1014,
	0, 476, 0, 477, 478, 479, 480, 453, 481, 486,
	1059, 482, 483, 484, 485, 1036, 0, 488, 489, 0,
	487, 0, 490, 491, 492, 493, 494, 495, 315, 496,
	0, 497, 1026, 1027, 1028, 1029, 0, 504, 0, 498,
	499, 1037, 500, 1038, 956, 501, 502, 503, 0, 505,
	506, 0, 0, 507, 508, 509, 511, 512, 510, 513,
	1000, 514, 0, 0, 515, 516, 517, 571, 1023, 1058,
	0, 519, 518, 574, 0, 0, 0, 0, 520, 521,
	575, 522, 523, 524, 978, 950, 951, 952, 948, 949,
	961, 2335, 0, 0, 0, 0, 0, 0, 2333, 2334,
	0, 244, 245, 246, 247, 248, 249, 962, 250, 251,
	0, 960, 0, 0, 0, 1002, 966, 0, 0, 0,
	252, 253, 255, 254, 256, 257, 258, 526, 1015, 0,
	259, 1022, 260, 1021, 0, 261, 262, 263, 264, 265,
	968, 1001, 0, 266, 1060, 1061, 532, 0, 267, 268,
	1008, 0, 989, 0, 269, 270, 271, 272, 273, 274,
	275, 0, 0, 277, 278, 279, 276, 0, 280, 0,
	281, 282, 283, 0, 284, 1041, 285, 286, 992, 990,
	991, 998, 994, 993, 997, 287, 288, 289, 290, 1025,
	291, 1019, 1018, 0, 295, 292, 293, 0, 296, 294,
	0, 297, 298, 299, 0, 0, 300, 1010, 302, 0,
	303, 304, 0, 305, 306, 307, 0, 308, 309, 945,
	310, 311, 312, 314, 316, 313, 317, 318, 319, 320,
	1032, 1033, 957, 241, 0, 0, 0, 0, 0, 321,
	322, 323, 1017, 0, 0, 0, 324, 0, 325, 0,
	0, 1042, 326, 327, 1030, 1031, 328, 329, 0, 330,
	1039, 0, 967, 331, 0, 332, 333, 334, 335, 336,
	1003, 1004, 1007, 393, 1044, 337, 338, 0, 339, 340,
	341, 342, 0, 0, 0, 242, 343, 344, 346, 0,
	1043, 345, 1012, 1013, 0, 973, 0, 347, 348, 1045,
	1005, 1046, 349, 350, 351, 1047, 352, 0, 0, 0,
	353, 354, 355, 356, 357, 358, 0, 359, 361, 360,
	0, 362, 1040, 1048, 363, 364, 1049, 0, 365, 366,
	367, 996, 995, 368, 369, 370, 371, 0, 372, 373,
	375, 377, 374, 376, 381, 378, 379, 380, 383, 0,
	382, 1050, 384, 385, 386, 389, 390, 388, 1051, 387,
	0, 243, 1052, 391, 958, 1006, 392, 1020, 394, 395,
	0, 0, 396, 0, 0, 0, 398, 399, 400, 0,
	0, 401, 402, 554, 1053, 403, 1054, 1034, 404, 405,
	397, 406, 407, 408, 409, 410, 411, 412, 413, 0,
	414, 415, 556, 557, 1035, 416, 559, 417, 418, 0,
	419, 0, 420, 421, 422, 423, 424, 425, 426, 1016,
	428, 427, 429, 0, 0, 0, 0, 0, 0, 430,
	0, 432, 433, 434, 431, 435, 436, 437, 438, 0,
	439, 440, 441, 1055, 442, 443, 444, 445, 2710, 2711,
	0, 447, 448, 454, 455, 449, 450, 456, 457, 458,
	459, 460, 0, 462, 463, 461, 464, 465, 466, 999,
	467, 451, 452, 468, 469, 1056, 470, 471, 472, 473,
	474, 475, 1014, 0, 476, 0, 477, 478, 479, 480,
	453, 481, 486, 1059, 482, 483, 484, 485, 1036, 0,
	488, 489, 0, 487, 0, 490, 491, 492, 493, 494,
	495, 315, 496, 0, 497, 1026, 1027, 1028, 1029, 0,
	504, 0, 498, 499, 1037, 500, 1038, 956, 501, 502,
	503, 0, 505, 506, 0, 0, 507, 508, 509, 511,
	512, 510, 513, 1000, 514, 0, 0, 515, 516, 517,
	571, 1023, 1058, 0, 519, 518, 574, 0, 0, 0,
	0, 520, 521, 575, 522, 523, 524, 978, 950, 951,
	952, 948, 949, 961, 0, 0, 0, 0, 0, 0,
	0, 1864, 1865, 0, 244, 245, 246, 247, 248, 249,
	962, 250, 251, 0, 960, 0, 0, 0, 1002, 966,
	0, 0, 0, 252, 253, 255, 254, 256, 257, 258,
	0, 1015, 0, 259, 1022, 260, 1021, 0, 261, 262,
	263, 264, 265, 968, 1001, 935, 266, 1060, 1061, 532,
	0, 267, 268, 1008, 0, 989, 0, 269, 270, 271,
	272, 273, 274, 275, 0, 0, 277, 278, 279, 276,
	0, 280, 0, 281, 282, 283, 0, 284, 1041, 285,
	3987, 992, 990, 991, 998, 994, 993, 997, 287, 288,
	289, 290, 1025, 291, 1019, 1018, 939, 295, 292, 293,
	0, 296, 294, 0, 297, 298, 299, 0, 0, 300,
	1010, 302, 0, 303, 304, 0, 305, 306, 307, 0,
	308, 309, 945, 310, 311, 312, 314, 316, 313, 317,
	318, 319, 320, 1032, 1033, 957, 241, 0, 0, 0,
	0, 0, 321, 322, 323, 1017, 0, 0, 0, 324,
	0, 325, 0, 0, 1042, 326, 327, 1030, 1031, 328,
	329, 0, 330, 1039, 0, 967, 331, 0, 332, 333,
	334, 335, 336, 1003, 1004, 1007, 393, 0, 337, 338,
	0, 339, 340, 341, 342, 0, 0, 0, 242, 343,
	344, 346, 0, 1043, 345, 1012, 1013, 0, 973, 0,
	347, 348, 0, 1005, 0, 349, 350, 351, 1047, 352,
	0, 0, 0, 353, 354, 355, 356, 357, 358, 0,
	359, 361, 360, 0, 362, 1040, 1048, 363, 364, 0,
	0, 365, 366, 367, 996, 995, 368, 369, 370, 371,
	0, 372, 373, 375, 377, 374, 376, 381, 378, 379,
	380, 383, 0, 382, 1050, 384, 385, 386, 389, 390,
	388, 1051, 387, 936, 243, 0, 391, 958, 1006, 392,
	1020, 394, 395, 0, 0, 396, 0, 0, 0, 398,
	399, 400, 0, 0, 401, 402, 554, 1053, 403, 1054,
	1034, 404, 405, 397, 406, 407, 408, 409, 410, 411,
	412, 413, 0, 414, 415, 556, 557, 1035, 416, 559,
	417, 418, 0, 419, 0, 420, 421, 422, 423, 424,
	425, 426, 1016, 428, 427, 429, 0, 0, 0, 0,
	0, 0, 430, 0, 432, 433, 434, 431, 435, 436,
	437, 438, 0, 439, 440, 441, 1055, 442, 443, 444,
	445, 946, 446, 0, 447, 448, 454, 455, 449, 450,
	456, 457, 458, 459, 460, 0, 462, 463, 461, 464,
	465, 466, 999, 467, 451, 452, 468, 469, 0, 470,
	471, 472, 473, 474, 475, 1014, 0, 476, 0, 477,
	478, 479, 480, 453, 481, 486, 1059, 482, 483, 484,
	485, 1036, 0, 488, 489, 934, 487, 0, 490, 491,
	492, 493, 494, 495, 315, 496, 0, 497, 1026, 1027,
	1028, 1029, 0, 504, 0, 498, 499, 1037, 500, 1038,
	956, 501, 502, 503, 0, 3986, 506, 0, 940, 507,
	508, 509, 511, 512, 510, 513, 1000, 514, 0, 0,
	515, 516, 517, 571, 1023, 1058, 0, 519, 518, 574,
	0, 0, 0, 0, 520, 521, 575, 522, 523, 524,
	978, 950, 951, 952, 948, 949, 961, 0, 0, 0,
	0, 0, 0, 0, 931, 932, 0, 244, 245, 246,
	247, 248, 249, 962, 250, 251, 0, 960, 0, 0,
	0, 1002, 966, 0, 0, 0, 252, 253, 255, 254,
	256, 257, 258, 526, 1015, 0, 259, 1022, 260, 1021,
	0, 261, 262, 263, 264, 265, 0, 1001, 0, 266,
	1060, 1061, 532, 0, 267, 268, 1008, 0, 989, 0,
	269, 270, 271, 272, 273, 274, 275, 0, 0, 277,
	278, 279, 276, 0, 280, 0, 281, 282, 283, 0,
	284, 1041, 285, 286, 992, 990, 991, 998, 994, 993,
	997, 287, 288, 289, 290, 1025, 291, 1019, 1018, 0,
	295, 292, 293, 0, 296, 294, 0, 297, 298, 299,
	0, 0, 300, 1010, 302, 0, 303, 304, 0, 305,
	306, 307, 0, 308, 309, 536, 310, 311, 312, 314,
	316, 313, 317, 318, 319, 320, 1032, 1033, 957, 241,
	0, 0, 0, 0, 0, 321, 322, 323, 1017, 0,
	0, 0, 324, 0, 325, 0, 0, 1042, 326, 327,
	1030, 1031, 328, 329, 0, 330, 1039, 0, 967, 331,
	0, 332, 333, 334, 335, 336, 1003, 1004, 1007, 393,
	1044, 337, 338, 0, 339, 340, 341, 342, 0, 0,
	0, 242, 343, 344, 346, 0, 1043, 345, 1012, 1013,
	0, 973, 0, 347, 348, 1045, 1005, 1046, 349, 350,
	351, 1047, 352, 0, 0, 0, 353, 354, 355, 356,
	357, 358, 0, 359, 361, 360, 0, 362, 1040, 1048,
	363, 364, 1049, 0, 365, 366, 367, 996, 995, 368,
	369, 370, 371, 0, 372, 373, 375, 377, 374, 376,
	381, 378, 379, 380, 383, 0, 382, 1050, 384, 385,
	386, 389, 390, 388, 1051, 387, 0, 243, 1052, 391,
	958, 1006, 392, 1020, 394, 395, 0, 0, 396, 0,
	0, 0, 398, 399, 400, 0, 0, 401, 402, 554,
	1053, 403, 1054, 1034, 404, 405, 397, 406, 407, 408,
	409, 410, 411, 412, 413, 0, 414, 415, 556, 557,
	1035, 416, 559, 417, 418, 0, 419, 0, 420, 421,
	422, 423, 424, 425, 426, 1016, 428, 427, 429, 0,
	0, 0, 0, 0, 0, 430, 0, 432, 433, 434,
	431, 435, 436, 437, 438, 0, 439, 440, 441, 1055,
	442, 443, 444, 445, 946, 446, 0, 447, 448, 454,
	455, 449, 450, 456, 457, 458, 459, 460, 0, 462,
	463, 461, 464, 465, 466, 999, 467, 451, 452, 468,
	469, 1056, 470, 471, 472, 473, 474, 475, 1014, 0,
	476, 0, 477, 478, 479, 480, 453, 481, 486, 1059,
	482, 483, 484, 485, 1036, 0, 488, 489, 0, 487,
	0, 490, 491, 492, 493, 494, 495, 315, 496, 0,
	497, 1026, 1027, 1028, 1029, 0, 504, 0, 498, 499,
	1037, 500, 1038, 956, 501, 502, 503, 0, 505, 506,
	0, 0, 507, 508, 509, 511, 512, 510, 513, 1000,
	514, 0, 0, 515, 516, 517, 571, 1023, 1058, 0,
	519, 518, 574, 0, 924, 0, 1098, 520, 521, 575,
	522, 523, 524, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 244, 245, 246, 247, 248, 249, 0,
	250, 251, 0, 0, 0, 0, 962, 1002, 0, 0,
	960, 0, 252, 253, 255, 254, 256, 257, 258, 526,
	527, 0, 259, 528, 260, 529, 0, 261, 262, 263,
	264, 265, 0, 1001, 0, 266, 530, 531, 532, 0,
	267, 268, 1008, 0, 989, 0, 269, 270, 271, 272,
	273, 274, 275, 0, 0, 277, 278, 279, 276, 0,
	280, 0, 281, 282, 283, 0, 284, 1041, 285, 286,
	992, 990, 991, 998, 994, 993, 997, 287, 288, 289,
	290, 0, 291, 534, 535, 0, 295, 292, 293, 0,
	296, 294, 0, 297, 298, 299, 0, 0, 300, 301,
	302, 0, 303, 304, 0, 305, 306, 307, 0, 308,
	309, 536, 310, 311, 312, 314, 316, 313, 317, 318,
	319, 320, 1032, 1033, 0, 241, 0, 0, 0, 0,
	0, 321, 322, 323, 539, 0, 0, 0, 324, 0,
	325, 0, 0, 1042, 326, 327, 540, 541, 328, 329,
	0, 330, 1039, 0, 543, 331, 0, 332, 333, 334,
	335, 336, 1003, 1004, 1007, 393, 1044, 337, 338, 0,
	339, 340, 341, 342, 0, 0, 0, 242, 343, 344,
	346, 0, 1043, 345, 547, 548, 0, 549, 0, 347,
	348, 1045, 1005, 1046, 349, 350, 351, 1047, 352, 0,
	0, 0, 353, 354, 355, 356, 357, 358, 1084, 359,
	361, 360, 0, 362, 1040, 1048, 363, 364, 1049, 0,
	365, 366, 367, 996, 995, 368, 369, 370, 371, 0,
	372, 373, 375, 377, 374, 376, 381, 378, 379, 380,
	383, 0, 382, 1050, 384, 385, 386, 389, 390, 388,
	1051, 387, 0, 243, 1052, 391, 0, 1006, 392, 553,
	394, 395, 0, 0, 396, 0, 0, 1090, 398, 399,
	400, 0, 0, 401, 402, 554, 1053, 403, 1054, 1034,
	404, 405, 397, 406, 407, 408, 409, 410, 411, 412,
	413, 0, 414, 415, 556, 557, 1035, 416, 559, 417,
	418, 0, 419, 0, 420, 421, 422, 423, 424, 425,
	426, 560, 428, 427, 429, 0, 0, 0, 0, 0,
	0, 430, 0, 432, 433, 434, 431, 435, 436, 437,
	438, 0, 439, 440, 441, 1055, 442, 443, 444, 445,
	561, 1092, 0, 447, 448, 454, 455, 449, 450, 456,
	457, 458, 459, 460, 206, 462, 463, 461, 464, 465,
	466, 999, 467, 451, 452, 468, 469, 1056, 470, 471,
	472, 473, 474, 475, 562, 0, 476, 0, 477, 478,
	479, 480, 453, 481, 486, 563, 482, 483, 484, 485,
	1036, 0, 488, 489, 0, 487, 208, 490, 491, 492,
	493, 494, 495, 315, 496, 0, 497, 565, 566, 567,
	568, 0, 504, 0, 498, 499, 1037, 500, 1038, 0,
	501, 502, 503, 0, 505, 506, 0, 0, 507, 508,
	509, 511, 512, 510, 513, 1000, 514, 0, 0, 515,
	516, 517, 1431, 572, 573, 0, 519, 518, 574, 0,
	1098, 0, 200, 520, 521, 575, 522, 523, 524, 0,
	201, 0, 0, 0, 0, 0, 0, 244, 245, 246,
	247, 248, 249, 0, 250, 251, 0, 0, 0, 0,
	1088, 1002, 1757, 0, 0, 0, 252, 253, 255, 254,
	256, 257, 258, 526, 527, 0, 259, 528, 260, 529,
	0, 261, 262, 263, 264, 265, 0, 1001, 0, 266,
	530, 531, 532, 0, 267, 268, 1008, 0, 989, 0,
	269, 270, 271, 272, 273, 274, 275, 0, 0, 277,
	278, 279, 276, 0, 280, 0, 281, 282, 283, 0,
	284, 1041, 285, 286, 992, 990, 991, 998, 994, 993,
	997, 287, 288, 289, 290, 0, 291, 534, 535, 0,
	295, 292, 293, 0, 296, 294, 0, 297, 298, 299,
	0, 0, 300, 301, 302, 0, 303, 304, 0, 305,
	306, 307, 0, 308, 309, 536, 310, 311, 312, 314,
	316, 313, 317, 318, 319, 320, 1032, 1033, 0, 241,
	0, 0, 0, 0, 0, 321, 322, 323, 539, 0,
	0, 0, 324, 0, 325, 0, 0, 1042, 326, 327,
	540, 541, 328, 329, 0, 330, 1039, 0, 543, 331,
	0, 332, 333, 334, 335, 336, 1003, 1004, 1007, 393,
	1044, 337, 338, 0, 339, 340, 341, 342, 0, 0,
	0, 242, 343, 344, 346, 0, 1043, 345, 547, 548,
	0, 549, 0, 347, 348, 1045, 1005, 1046, 349, 350,
	351, 1047, 352, 0, 0, 0, 353, 354, 355, 356,
	357, 358, 1084, 359, 361, 360, 0, 362, 1040, 1048,
	363, 364, 1049, 0, 365, 366, 367, 996, 995, 368,
	369, 370, 371, 0, 372, 373, 375, 377, 374, 376,
	381, 378, 379, 380, 383, 0, 382, 1050, 384, 385,
	386, 389, 390, 388, 1051, 387, 0, 243, 1052, 391,
	0, 1006, 392, 553, 394, 395, 0, 0, 396, 0,
	0, 1090, 398, 399, 400, 0, 0, 401, 402, 554,
	1053, 403, 1054, 1034, 404, 405, 397, 406, 407, 408,
	409, 410, 411, 412, 413, 0, 414, 415, 556, 557,
	1035, 416, 559, 417, 418, 0, 419, 0, 420, 421,
	422, 423, 424, 425, 426, 560, 428, 427, 429, 0,
	0, 0, 0, 0, 0, 430, 0, 432, 433, 434,
	431, 435, 436, 437, 438, 0, 439, 440, 441, 1055,
	442, 443, 444, 445, 561, 1092, 0, 447, 448, 454,
	455, 449, 450, 456, 457, 458, 459, 460, 206, 462,
	463, 461, 464, 465, 466, 999, 467, 451, 452, 468,
	469, 1056, 470, 471, 472, 473, 474, 475, 562, 0,
	476, 0, 477, 478, 479, 480, 453, 481, 486, 563,
	482, 483, 484, 485, 1036, 0, 488, 489, 0, 487,
	208, 490, 491, 492, 493, 494, 495, 315, 496, 0,
	497, 565, 566, 567, 568, 0, 504, 0, 498, 499,
	1037, 500, 1038, 0, 501, 502, 503, 0, 505, 506,
	0, 0, 507, 508, 509, 511, 512, 510, 513, 1000,
	514, 0, 0, 515, 516, 517, 1431, 572, 573, 0,
	519, 518, 574, 0, 0, 0, 200, 520, 521, 575,
	522, 523, 524, 0, 201, 0, 0, 0, 2870, 0,
	1098, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1088, 0, 1757, 244, 245, 246,
	247, 248, 249, 0, 250, 251, 0, 0, 0, 0,
	0, 1002, 0, 0, 0, 0, 252, 253, 255, 254,
	256, 257, 258, 526, 527, 0, 259, 528, 260, 529,
	0, 261, 262, 263, 264, 265, 0, 1001, 0, 266,
	530, 531, 532, 0, 267, 268, 1008, 0, 989, 0,
	269, 270, 271, 272, 273, 274, 275, 0, 0, 277,
	278, 279, 276, 0, 280, 0, 281, 282, 283, 0,
	284, 1041, 285, 286, 992, 990, 991, 998, 994, 993,
	997, 287, 288, 289, 290, 0, 291, 534, 535, 0,
	295, 292, 293, 0, 296, 294, 0, 297, 298, 299,
	0, 0, 300, 301, 302, 0, 303, 304, 0, 305,
	306, 307, 0, 308, 309, 536, 310, 311, 312, 314,
	316, 313, 317, 318, 319, 320, 1032, 1033, 0, 241,
	0, 0, 0, 0, 0, 321, 322, 323, 539, 0,
	0, 0, 324, 0, 325, 0, 0, 1042, 326, 327,
	540, 541, 328, 329, 0, 330, 1039, 0, 543, 331,
	0, 332, 333, 334, 335, 336, 1003, 1004, 1007, 393,
	1044, 337, 338, 0, 339, 340, 341, 342, 0, 0,
	0, 242, 343, 344, 346, 0, 1043, 345, 547, 548,
	0, 549, 0, 347, 348, 1045, 1005, 1046, 349, 350,
	351, 1047, 352, 0, 0, 0, 353, 354, 355, 356,
	357, 358, 1084, 359, 361, 360, 0, 362, 1040, 1048,
	363, 364, 1049, 0, 365, 366, 367, 996, 995, 368,
	369, 370, 371, 0, 372, 373, 375, 377, 374, 376,
	381, 378, 379, 380, 383, 0, 382, 1050, 384, 385,
	386, 389, 390, 388, 1051, 387, 0, 243, 1052, 391,
	0, 1006, 392, 553, 394, 395, 0, 0, 396, 0,
	0, 1090, 398, 399, 400, 0, 0, 401, 402, 554,
	1053, 403, 1054, 1034, 404, 405, 397, 406, 407, 408,
	409, 410, 411, 412, 413, 0, 414, 415, 556, 557,
	1035, 416, 559, 417, 418, 0, 419, 0, 420, 421,
	422, 423, 424, 425, 426, 560, 428, 427, 429, 0,
	0, 0, 0, 0, 0, 430, 0, 432, 433, 434,
	431, 435, 436, 437, 438, 0, 439, 440, 441, 1055,
	442, 443, 444, 445, 561, 1092, 0, 447, 448, 454,
	455, 449, 450, 456, 457, 458, 459, 460, 0, 462,
	463, 461, 464, 465, 466, 999, 467, 451, 452, 468,
	469, 1056, 470, 471, 472, 473, 474, 475, 562, 0,
	476, 0, 477, 478, 479, 480, 453, 481, 486, 563,
	482, 483, 484, 485, 1036, 0, 488, 489, 0, 487,
	0, 490, 491, 492, 493, 494, 495, 315, 496, 0,
	497, 565, 566, 567, 568, 0, 504, 0, 498, 499,
	1037, 500, 1038, 0, 501, 502, 503, 0, 505, 506,
	0, 0, 507, 508, 509, 511, 512, 510, 513, 1000,
	514, 0, 0, 515, 516, 517, 571, 572, 573, 0,
	519, 518, 574, 0, 1080, 0, 1098, 520, 521, 575,
	522, 523, 524, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 244, 245, 246, 247, 248, 249, 0,
	250, 251, 0, 0, 1088, 0, 1086, 1002, 0, 0,
	0, 0, 252, 253, 255, 254, 256, 257, 258, 526,
	527, 0, 259, 528, 260, 529, 0, 261, 262, 263,
	264, 265, 0, 1001, 0, 266, 530, 531, 532, 0,
	267, 268, 1008, 0, 989, 0, 269, 270, 271, 272,
	273, 274, 275, 0, 0, 277, 278, 279, 276, 0,
	280, 0, 281, 282, 283, 0, 284, 1041, 285, 286,
	992, 990, 991, 998, 994, 993, 997, 287, 288, 289,
	290, 0, 291, 534, 535, 0, 295, 292, 293, 0,
	296, 294, 0, 297, 298, 299, 0, 0, 300, 301,
	302, 0, 303, 304, 0, 305, 306, 307, 0, 308,
	309, 536, 310, 311, 312, 314, 316, 313, 317, 318,
	319, 320, 1032, 1033, 0, 241, 0, 0, 0, 0,
	0, 321, 322, 323, 539, 0, 0, 0, 324, 0,
	325, 0, 0, 1042, 326, 327, 540, 541, 328, 329,
	0, 330, 1039, 0, 543, 331, 0, 332, 333, 334,
	335, 336, 1003, 1004, 1007, 393, 1044, 337, 338, 0,
	339, 340, 341, 342, 0, 0, 0, 242, 343, 344,
	346, 0, 1043, 345, 547, 548, 0, 549, 0, 347,
	348, 1045, 1005, 1046, 349, 350, 351, 1047, 352, 0,
	0, 0, 353, 354, 355, 356, 357, 358, 1084, 359,
	361, 360, 0, 362, 1040, 1048, 363, 364, 1049, 0,
	365, 366, 367, 996, 995, 368, 369, 370, 371, 0,
	372, 373, 375, 377, 374, 376, 381, 378, 379, 380,
	383, 0, 382, 1050, 384, 385, 386, 389, 390, 388,
	1051, 387, 0, 243, 1052, 391, 0, 1006, 392, 553,
	394, 395, 0, 0, 396, 0, 0, 1090, 398, 399,
	400, 0, 0, 401, 402, 554, 1053, 403, 1054, 1034,
	404, 405, 397, 406, 407, 408, 409, 410, 411, 412,
	413, 0, 414, 415, 556, 557, 1035, 416, 559, 417,
	418, 0, 419, 0, 420, 421, 422, 423, 424, 425,
	426, 560, 428, 427, 429, 0, 0, 0, 0, 0,
	0, 430, 0, 432, 433, 434, 431, 435, 436, 437,
	438, 0, 439, 440, 441, 1055, 442, 443, 444, 445,
	561, 1092, 0, 447, 448, 454, 455, 449, 450, 456,
	457, 458, 459, 460, 0, 462, 463, 461, 464, 465,
	466, 999, 467, 451, 452, 468, 469, 1056, 470, 471,
	472, 473, 474, 475, 562, 0, 476, 0, 477, 478,
	479, 480, 453, 481, 486, 563, 482, 483, 484, 485,
	1036, 0, 488, 489, 0, 487, 0, 490, 491, 492,
	493, 494, 495, 315, 496, 0, 497, 565, 566, 567,
	568, 0, 504, 0, 498, 499, 1037, 500, 1038, 0,
	501, 502, 503, 0, 505, 506, 0, 0, 507, 508,
	509, 511, 512, 510, 513, 1000, 514, 0, 0, 515,
	516, 517, 571, 572, 573, 0, 519, 518, 574, 0,
	1098, 0, 0, 520, 521, 575, 522, 523, 524, 0,
	0, 0, 0, 0, 0, 0, 0, 244, 245, 246,
	247, 248, 249, 0, 250, 251, 0, 0, 0, 0,
	1088, 1002, 1086, 0, 0, 0, 252, 253, 255, 254,
	256, 257, 258, 526, 527, 0, 259, 528, 260, 529,
	0, 261, 262, 263, 264, 265, 0, 1001, 0, 266,
	530, 531, 532, 0, 267, 268, 1008, 0, 989, 0,
	269, 270, 271, 272, 273, 274, 275, 0, 0, 277,
	278, 279, 276, 0, 280, 0, 281, 282, 283, 0,
	284, 1041, 285, 286, 992, 990, 991, 998, 994, 993,
	997, 287, 288, 289, 290, 0, 291, 534, 535, 0,
	295, 292, 293, 0, 296, 294, 0, 297, 298, 299,
	0, 0, 300, 301, 302, 0, 303, 304, 0, 305,
	306, 307, 0, 308, 309, 536, 310, 311, 312, 314,
	316, 313, 317, 318, 319, 320, 1032, 1033, 0, 241,
	0, 0, 0, 0, 0, 321, 322, 323, 539, 0,
	0, 0, 324, 0, 325, 0, 0, 1042, 326, 327,
	540, 541, 328, 329, 0, 330, 1039, 0, 543, 331,
	0, 332, 333, 334, 335, 336, 1003, 1004, 1007, 393,
	1044, 337, 338, 0, 339, 340, 341, 342, 0, 0,
	0, 242, 343, 344, 346, 0, 1043, 345, 547, 548,
	0, 549, 0, 347, 348, 1045, 1005, 1046, 349, 350,
	351, 1047, 352, 0, 0, 0, 353, 354, 355, 356,
	357, 358, 1084, 359, 361, 360, 0, 362, 1040, 1048,
	363, 364, 1049, 0, 365, 366, 367, 996, 995, 368,
	369, 370, 371, 0, 372, 373, 375, 377, 374, 376,
	381, 378, 379, 380, 383, 0, 382, 1050, 384, 385,
	386, 389, 390, 388, 1051, 387, 0, 243, 1052, 391,
	0, 1006, 392, 553, 394, 395, 0, 0, 396, 0,
	0, 1090, 398, 399, 400, 0, 0, 401, 402, 554,
	1053, 403, 1054, 1034, 404, 405, 397, 406, 407, 408,
	409, 410, 411, 412, 413, 0, 414, 415, 556, 557,
	1035, 416, 559, 417, 418, 0, 419, 0, 420, 421,
	422, 423, 424, 425, 426, 560, 428, 427, 429, 0,
	0, 0, 0, 0, 0, 430, 0, 432, 433, 434,
	431, 435, 436, 437, 438, 0, 439, 440, 441, 1055,
	442, 443, 444, 445, 561, 1092, 0, 447, 448, 454,
	455, 449, 450, 456, 457, 458, 459, 460, 0, 462,
	463, 461, 464, 465, 466, 999, 467, 451, 452, 468,
	469, 1056, 470, 471, 472, 473, 474, 475, 562, 0,
	476, 0, 477, 478, 479, 480, 453, 481, 486, 563,
	482, 483, 484, 485, 1036, 0, 488, 489, 0, 487,
	0, 490, 491, 492, 493, 494, 495, 315, 496, 0,
	497, 565, 566, 567, 568, 0, 504, 0, 498, 499,
	1037, 500, 1038, 0, 501, 502, 503, 0, 505, 506,
	0, 0, 507, 508, 509, 511, 512, 510, 513, 1000,
	514, 0, 0, 515, 516, 517, 571, 572, 573, 0,
	519, 518, 574, 0, 1098, 0, 0, 520, 521, 575,
	522, 523, 524, 0, 0, 0, 0, 0, 0, 0,
	0, 244, 245, 246, 247, 248, 249, 0, 250, 251,
	0, 0, 0, 0, 1088, 1002, 1086, 0, 0, 0,
	252, 253, 255, 254, 256, 257, 258, 526, 527, 0,
	259, 528, 260, 529, 0, 261, 262, 263, 264, 265,
	0, 1001, 0, 266, 530, 531, 532, 0, 267, 268,
	1008, 0, 989, 0, 269, 270, 271, 272, 273, 274,
	275, 0, 0, 277, 278, 279, 276, 0, 280, 0,
	281, 282, 283, 0, 284, 1041, 285, 286, 992, 990,
	991, 998, 994, 993, 997, 287, 288, 289, 290, 0,
	291, 534, 535, 0, 295, 292, 293, 0, 296, 294,
	0, 297, 298, 299, 0, 0, 300, 301, 302, 0,
	303, 304, 0, 305, 306, 307, 0, 308, 309, 536,
	310, 311, 312, 314, 316, 313, 317, 318, 319, 320,
	1032, 1033, 0, 241, 0, 0, 0, 0, 0, 321,
	322, 323, 539, 0, 0, 0, 324, 0, 325, 0,
	0, 1042, 326, 327, 540, 541, 328, 329, 0, 330,
	1039, 0, 543, 331, 0, 332, 333, 334, 335, 336,
	1003, 1004, 1007, 393, 1044, 337, 338, 0, 339, 340,
	341, 342, 0, 0, 0, 242, 343, 344, 346, 0,
	1043, 345, 547, 548, 0, 549, 0, 347, 348, 1045,
	1005, 1046, 349, 350, 351, 1047, 352, 0, 0, 0,
	353, 354, 355, 356, 357, 358, 0, 359, 361, 360,
	0, 362, 1040, 1048, 363, 364, 1049, 0, 365, 366,
	367, 996, 995, 368, 369, 370, 371, 0, 372, 373,
	375, 377, 374, 376, 381, 378, 379, 380, 383, 0,
	382, 1050, 384, 385, 386, 389, 390, 388, 1051, 387,
	0, 243, 1052, 391, 0, 1006, 392, 553, 394, 395,
	0, 0, 396, 0, 0, 0, 398, 399, 400, 0,
	0, 401, 402, 554, 1053, 403, 1054, 1034, 404, 405,
	397, 406, 407, 408, 409, 410, 411, 412, 413, 0,
	414, 415, 556, 557, 1035, 416, 559, 417, 418, 0,
	419, 0, 420, 421, 422, 423, 424, 425, 426, 560,
	428, 427, 429, 0, 0, 0, 0, 0, 0, 430,
	0, 432, 433, 434, 431, 435, 436, 437, 438, 0,
	439, 440, 441, 1055, 442, 443, 444, 445, 561, 1092,
	0, 447, 448, 454, 455, 449, 450, 456, 457, 458,
	459, 460, 0, 462, 463, 461, 464, 465, 466, 999,
	467, 451, 452, 468, 469, 1056, 470, 471, 472, 473,
	474, 475, 562, 0, 476, 0, 477, 478, 479, 480,
	453, 481, 486, 563, 482, 483, 484, 485, 1036, 0,
	488, 489, 0, 487, 0, 490, 491, 492, 493, 494,
	495, 315, 496, 0, 497, 565, 566, 567, 568, 0,
	504, 0, 498, 499, 1037, 500, 1038, 0, 501, 502,
	503, 0, 505, 506, 0, 0, 507, 508, 509, 511,
	512, 510, 513, 1000, 514, 0, 0, 515, 516, 517,
	571, 572, 573, 0, 519, 518, 574, 0, 924, 0,
	1282, 520, 521, 575, 522, 523, 524, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 244, 245, 246,
	247, 248, 249, 0, 250, 251, 0, 0, 0, 0,
	1656, 525, 0, 0, 0, 0, 252, 253, 255, 254,
	256, 257, 258, 526, 527, 0, 259, 528, 260, 529,
	0, 261, 262, 263, 264, 265, 0, 0, 0, 266,
	530, 531, 532, 0, 267, 268, 533, 0, 1248, 0,
	269, 270, 271, 272, 273, 274, 275, 0, 0, 277,
	278, 279, 276, 0, 280, 0, 281, 282, 283, 0,
	284, 1041, 285, 286, 0, 0, 0, 0, 0, 0,
	0, 287, 288, 289, 290, 0, 291, 534, 535, 0,
	295, 292, 293, 0, 296, 294, 0, 297, 298, 299,
	0, 0, 300, 301, 302, 0, 303, 304, 0, 305,
	306, 307, 0, 308, 309, 536, 310, 311, 312, 314,
	316, 313, 317, 318, 319, 320, 537, 538, 0, 241,
	0, 0, 0, 0, 0, 321, 322, 323, 539, 0,
	0, 0, 324, 0, 325, 0, 0, 1042, 326, 327,
	540, 541, 328, 329, 0, 330, 542, 0, 543, 331,
	0, 332, 333, 334, 335, 336, 544, 545, 546, 393,
	1044, 337, 338, 0, 339, 340, 341, 342, 0, 0,
	0, 0, 343, 344, 346, 0, 1043, 345, 547, 548,
	0, 549, 0, 347, 348, 1045, 550, 1046, 349, 350,
	351, 1047, 352, 0, 0, 0, 353, 354, 355, 356,
	357, 358, 0, 359, 361, 360, 0, 362, 551, 1048,
	363, 364, 1049, 0, 365, 366, 367, 0, 0, 368,
	369, 370, 371, 0, 372, 373, 375, 377, 374, 376,
	381, 378, 379, 380, 383, 0, 382, 1050, 384, 385,
	386, 389, 390, 388, 1051, 387, 0, 0, 1052, 391,
	0, 552, 392, 553, 394, 395, 0, 0, 396, 0,
	0, 0, 398, 399, 400, 0, 0, 401, 402, 554,
	1053, 403, 1054, 555, 404, 405, 397, 406, 407, 408,
	409, 410, 411, 412, 413, 0, 414, 415, 556, 557,
	558, 416, 559, 417, 418, 0, 419, 0, 420, 421,
	422, 423, 424, 425, 426, 560, 428, 427, 429, 0,
	0, 0, 0, 0, 0, 430, 0, 432, 433, 434,
	431, 435, 436, 437, 438, 0, 439, 440, 441, 1055,
	442, 443, 444, 445, 561, 446, 0, 447, 448, 454,
	455, 449, 450, 456, 457, 458, 459, 460, 206, 462,
	463, 461, 464, 465, 466, 0, 467, 451, 452, 468,
	469, 1056, 470, 471, 472, 473, 474, 475, 562, 0,
	476, 0, 477, 478, 479, 480, 453, 481, 486, 563,
	482, 483, 484, 485, 564, 0, 488, 489, 0, 487,
	208, 490, 491, 492, 493, 494, 495, 315, 496, 0,
	497, 565, 566, 567, 568, 0, 504, 0, 498, 499,
	569, 500, 570, 0, 501, 502, 503, 0, 505, 506,
	0, 0, 507, 508, 509, 511, 512, 510, 513, 0,
	514, 0, 0, 515, 516, 517, 1431, 572, 573, 0,
	519, 518, 574, 0, 0, 0, 200, 520, 521, 575,
	522, 523, 524, 0, 201, 0, 0, 0, 1428, 0,
	1282, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 172, 244, 245, 246,
	247, 248, 249, 0, 250, 251, 0, 0, 0, 0,
	0, 525, 0, 0, 0, 0, 252, 253, 255, 254,
	256, 257, 258, 526, 527, 0, 259, 528, 260, 529,
	0, 261, 262, 263, 264, 265, 0, 0, 0, 266,
	530, 531, 532, 0, 267, 268, 533, 0, 1248, 0,
	269, 270, 271, 272, 273, 274, 275, 0, 0, 277,
	278, 279, 276, 0, 280, 0, 281, 282, 283, 0,
	284, 1041, 285, 286, 0, 0, 0, 0, 0, 0,
	0, 287, 288, 289, 290, 0, 291, 534, 535, 0,
	295, 292, 293, 0, 296, 294, 0, 297, 298, 299,
	0, 0, 300, 301, 302, 0, 303, 304, 0, 305,
	306, 307, 0, 308, 309, 536, 310, 311, 312, 314,
	316, 313, 317, 318, 319, 320, 537, 538, 0, 241,
	0, 0, 0, 0, 0, 321, 322, 323, 539, 0,
	0, 0, 324, 0, 325, 0, 0, 1042, 326, 327,
	540, 541, 328, 329, 0, 330, 542, 0, 543, 331,
	0, 332, 333, 334, 335, 336, 544, 545, 546, 393,
	1044, 337, 338, 0, 339, 340, 341, 342, 0, 0,
	0, 0, 343, 344, 346, 0, 1043, 345, 547, 548,
	0, 549, 0, 347, 348, 1045, 550, 1046, 349, 350,
	351, 1047, 352, 0, 0, 0, 353, 354, 355, 356,
	357, 358, 0, 359, 361, 360, 0, 362, 551, 1048,
	363, 364, 1049, 0, 365, 366, 367, 0, 0, 368,
	369, 370, 371, 0, 372, 373, 375, 377, 374, 376,
	381, 378, 379, 380, 383, 0, 382, 1050, 384, 385,
	386, 389, 390, 388, 1051, 387, 0, 0, 1052, 391,
	0, 552, 392, 553, 394, 395, 0, 0, 396, 0,
	0, 0, 398, 399, 400, 0, 0, 401, 402, 554,
	1053, 403, 1054, 555, 404, 405, 397, 406, 407, 408,
	409, 410, 411, 412, 413, 0, 414, 415, 556, 557,
	558, 416, 559, 417, 418, 0, 419, 0, 420, 421,
	422, 423, 424, 425, 426, 560, 428, 427, 429, 0,
	0, 0, 0, 0, 0, 430, 0, 432, 433, 434,
	431, 435, 436, 437, 438, 0, 439, 440, 441, 1055,
	442, 443, 444, 445, 561, 446, 0, 447, 448, 454,
	455, 449, 450, 456, 457, 458, 459, 460, 206, 462,
	463, 461, 464, 465, 466, 0, 467, 451, 452, 468,
	469, 1056, 470, 471, 472, 473, 474, 475, 562, 0,
	476, 0, 477, 478, 479, 480, 453, 481, 486, 563,
	482, 483, 484, 485, 564, 0, 488, 489, 0, 487,
	208, 490, 491, 492, 493, 494, 495, 315, 496, 0,
	497, 565, 566, 567, 568, 0, 504, 0, 498, 499,
	569, 500, 570, 0, 501, 502, 503, 0, 505, 506,
	0, 0, 507, 508, 509, 511, 512, 510, 513, 0,
	514, 0, 0, 515, 516, 517, 1431, 572, 573, 0,
	519, 518, 574, 0, 0, 0, 200, 520, 521, 575,
	522, 523, 524, 0, 201, 0, 0, 0, 0, 0,
	1282, 1281, 0, 0, 0, 0, 1279, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 172, 244, 245, 246,
	247, 248, 249, 0, 250, 251, 0, 0, 0, 0,
	0, 525, 0, 0, 0, 0, 252, 253, 255, 254,
	256, 257, 258, 526, 527, 0, 259, 528, 260, 529,
	0, 261, 262, 263, 264, 265, 0, 0, 0, 266,
	530, 531, 532, 0, 267, 268, 533, 0, 1248, 0,
	269, 270, 271, 272, 273, 274, 275, 0, 0, 277,
	278, 279, 276, 0, 280, 0, 281, 282, 283, 0,
	284, 1041, 285, 286, 0, 0, 0, 0, 0, 0,
	0, 287, 288, 289, 290, 0, 291, 534, 535, 0,
	295, 292, 293, 0, 296, 294, 0, 297, 298, 299,
	0, 0, 300, 301, 302, 0, 303, 304, 0, 305,
	306, 307, 0, 308, 309, 536, 310, 311, 312, 314,
	316, 313, 317, 318, 319, 320, 537, 538, 0, 241,
	0, 0, 0, 0, 0, 321, 322, 323, 539, 0,
	0, 0, 324, 0, 325, 0, 0, 1042, 326, 327,
	540, 541, 328, 329, 0, 330, 542, 0, 543, 331,
	0, 332, 333, 334, 335, 336, 544, 545, 546, 393,
	1044, 337, 338, 0, 339, 340, 341, 342, 0, 0,
	0, 0, 343, 344, 346, 0, 1043, 345, 547, 548,
	0, 549, 0, 347, 348, 1045, 550, 1046, 349, 350,
	351, 1047, 352, 0, 0, 0, 353, 354, 355, 356,
	357, 358, 0, 359, 361, 360, 0, 362, 551, 1048,
	363, 364, 1049, 0, 365, 366, 367, 0, 0, 368,
	369, 370, 371, 0, 372, 373, 375, 377, 374, 376,
	381, 378, 379, 380, 383, 0, 382, 1050, 384, 385,
	386, 389, 390, 388, 1051, 387, 0, 0, 1052, 391,
	0, 552, 392, 553, 394, 395, 0, 0, 396, 0,
	0, 0, 398, 399, 400, 0, 0, 401, 402, 554,
	1053, 403, 1054, 555, 404, 405, 397, 406, 407, 408,
	409, 410, 411, 412, 413, 0, 414, 415, 556, 557,
	558, 416, 559, 417, 418, 0, 419, 0, 420, 421,
	422, 423, 424, 425, 426, 560, 428, 427, 429, 0,
	0, 0, 0, 0, 0, 430, 0, 432, 433, 434,
	431, 435, 436, 437, 438, 0, 439, 440, 441, 1055,
	442, 443, 444, 445, 561, 446, 0, 447, 448, 454,
	455, 449, 450, 456, 457, 458, 459, 460, 0, 462,
	463, 461, 464, 465, 466, 0, 467, 451, 452, 468,
	469, 1056, 470, 471, 472, 473, 474, 475, 562, 0,
	476, 0, 477, 478, 479, 480, 453, 481, 486, 563,
	482, 483, 484, 485, 564, 0, 488, 489, 0, 487,
	0, 490, 491, 492, 493, 494, 495, 315, 496, 0,
	497, 565, 566, 567, 568, 0, 504, 0, 498, 499,
	569, 500, 570, 0, 501, 502, 503, 0, 505, 506,
	0, 0, 507, 508, 509, 511, 512, 510, 513, 0,
	514, 0, 0, 515, 516, 517, 571, 572, 573, 0,
	519, 518, 574, 0, 0, 0, 0, 520, 521, 575,
	522, 523, 524, 1282, 1281, 0, 0, 0, 0, 1279,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	244, 245, 246, 247, 248, 249, 1453, 250, 251, 0,
	0, 0, 0, 0, 525, 0, 0, 0, 0, 252,
	253, 255, 254, 256, 257, 258, 526, 527, 0, 259,
	528, 260, 529, 0, 261, 262, 263, 264, 265, 0,
	0, 0, 266, 530, 531, 532, 0, 267, 268, 533,
	0, 1248, 0, 269, 270, 271, 272, 273, 274, 275,
	0, 0, 277, 278, 279, 276, 0, 280, 0, 281,
	282, 283, 0, 284, 1041, 285, 286, 0, 0, 0,
	0, 0, 0, 0, 287, 288, 289, 290, 0, 291,
	534, 535, 0, 295, 292, 293, 0, 296, 294, 0,
	297, 298, 299, 0, 0, 300, 301, 302, 0, 303,
	304, 0, 305, 306, 307, 0, 308, 309, 536, 310,
	311, 312, 314, 316, 313, 317, 318, 319, 320, 537,
	538, 0, 241, 0, 0, 0, 0, 0, 321, 322,
	323, 539, 0, 0, 0, 324, 0, 325, 0, 0,
	1042, 326, 327, 540, 541, 328, 329, 0, 330, 542,
	0, 543, 331, 0, 332, 333, 334, 335, 336, 544,
	545, 546, 393, 1044, 337, 338, 0, 339, 340, 341,
	342, 0, 0, 0, 0, 343, 344, 346, 0, 1043,
	345, 547, 548, 0, 549, 0, 347, 348, 1045, 550,
	1046, 349, 350, 351, 1047, 352, 0, 0, 0, 353,
	354, 355, 356, 357, 358, 0, 359, 361, 360, 0,
	362, 551, 1048, 363, 364, 1049, 0, 365, 366, 367,
	0, 0, 368, 369, 370, 371, 0, 372, 373, 375,
	377, 374, 376, 381, 378, 379, 380, 383, 0, 382,
	1050, 384, 385, 386, 389, 390, 388, 1051, 387, 0,
	0, 1052, 391, 0, 552, 392, 553, 394, 395, 0,
	0, 396, 0, 0, 0, 398, 399, 400, 0, 0,
	401, 402, 554, 1053, 403, 1054, 555, 404, 405, 397,
	406, 407, 408, 409, 410, 411, 412, 413, 0, 414,
	415, 556, 557, 558, 416, 559, 417, 418, 0, 419,
	0, 420, 421, 422, 423, 424, 425, 426, 560, 428,
	427, 429, 0, 0, 0, 0, 0, 0, 430, 0,
	432, 433, 434, 431, 435, 436, 437, 438, 0, 439,
	440, 441, 1055, 442, 443, 444, 445, 561, 446, 0,
	447, 448, 454, 455, 449, 450, 456, 457, 458, 459,
	460, 0, 462, 463, 461, 464, 465, 466, 0, 467,
	451, 452, 468, 469, 1056, 470, 471, 472, 473, 474,
	475, 562, 0, 476, 0, 477, 478, 479, 480, 453,
	481, 486, 563, 482, 483, 484, 485, 564, 0, 488,
	489, 0, 487, 0, 490, 491, 492, 493, 494, 495,
	315, 496, 0, 497, 565, 566, 567, 568, 0, 504,
	0, 498, 499, 569, 500, 570, 0, 501, 502, 503,
	0, 505, 506, 0, 0, 507, 508, 509, 511, 512,
	510, 513, 0, 514, 0, 0, 515, 516, 517, 571,
	572, 573, 0, 519, 518, 574, 0, 0, 0, 0,
	520, 521, 575, 522, 523, 524, 1282, 1281, 0, 0,
	0, 0, 1279, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 244, 245, 246, 247, 248, 249, 3107,
	250, 251, 0, 0, 0, 0, 0, 525, 0, 0,
	0, 0, 252, 253, 255, 254, 256, 257, 258, 526,
	527, 0, 259, 528, 260, 529, 0, 261, 262, 263,
	264, 265, 0, 0, 0, 266, 530, 531, 532, 0,
	267, 268, 533, 0, 1248, 0, 269, 270, 271, 272,
	273, 274, 275, 0, 0, 277, 278, 279, 276, 0,
	280, 0, 281, 282, 283, 0, 284, 1041, 285, 286,
	0, 0, 0, 0, 0, 0, 0, 287, 288, 289,
	290, 0, 291, 534, 535, 0, 295, 292, 293, 0,
	296, 294, 0, 297, 298, 299, 0, 0, 300, 301,
	302, 0, 303, 304, 0, 305, 306, 307, 0, 308,
	309, 536, 310, 311, 312, 314, 316, 313, 317, 318,
	319, 320, 537, 538, 0, 241, 0, 0, 0, 0,
	0, 321, 322, 323, 539, 0, 0, 0, 324, 0,
	325, 0, 0, 1042, 326, 327, 540, 541, 328, 329,
	0, 330, 542, 0, 543, 331, 0, 332, 333, 334,
	335, 336, 544, 545, 546, 393, 1044, 337, 338, 0,
	339, 340, 341, 342, 0, 0, 0, 0, 343, 344,
	346, 0, 1043, 345, 547, 548, 0, 549, 0, 347,
	348, 1045, 550, 1046, 349, 350, 351, 1047, 352, 0,
	0, 0, 353, 354, 355, 356, 357, 358, 0, 1940,
	361, 360, 0, 362, 551, 1048, 363, 364, 1049, 0,
	365, 366, 367, 0, 0, 368, 369, 370, 371, 0,
	372, 373, 375, 377, 374, 376, 381, 378, 379, 380,
	383, 0, 382, 1050, 384, 385, 386, 389, 390, 388,
	1051, 387, 0, 0, 1052, 391, 0, 552, 392, 553,
	394, 395, 0, 0, 396, 0, 0, 0, 398, 399,
	400, 0, 0, 401, 402, 554, 1053, 403, 1054, 555,
	404, 405, 397, 406, 407, 408, 409, 410, 411, 412,
	413, 0, 414, 415, 556, 557, 558, 416, 559, 417,
	418, 0, 419, 0, 420, 421, 422, 423, 424, 425,
	426, 560, 428, 427, 429, 0, 0, 0, 0, 0,
	0, 430, 0, 432, 433, 434, 431, 435, 436, 437,
	438, 0, 439, 440, 441, 1055, 442, 443, 444, 445,
	561, 446, 0, 447, 448, 454, 455, 449, 450, 456,
	457, 458, 459, 460, 0, 462, 463, 461, 464, 465,
	466, 0, 467, 451, 452, 468, 469, 1056, 470, 471,
	472, 473, 474, 475, 562, 0, 476, 0, 477, 478,
	479, 480, 453, 481, 486, 563, 482, 483, 484, 485,
	564, 0, 488, 489, 0, 487, 0, 490, 491, 492,
	493, 494, 495, 315, 496, 0, 497, 565, 566, 567,
	568, 0, 504, 0, 498, 499, 569, 500, 570, 0,
	501, 502, 503, 0, 505, 506, 0, 0, 507, 508,
	509, 511, 512, 510, 513, 0, 514, 0, 0, 515,
	516, 517, 571, 572, 573, 0, 519, 518, 574, 0,
	0, 0, 0, 520, 521, 575, 522, 523, 524, 1282,
	1281, 0, 0, 0, 0, 1279, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 244, 245, 246, 247,
	248, 249, 1453, 250, 251, 0, 0, 0, 0, 0,
	525, 0, 0, 0, 0, 252, 253, 255, 254, 256,
	257, 258, 526, 527, 0, 259, 528, 260, 529, 0,
	261, 262, 263, 264, 265, 0, 0, 0, 266, 530,
	531, 532, 0, 267, 268, 533, 0, 1248, 0, 269,
	270, 271, 272, 273, 274, 275, 0, 0, 277, 278,
	279, 276, 0, 280, 0, 281, 282, 283, 0, 284,
	1041, 285, 286, 0, 0, 0, 0, 0, 0, 0,
	287, 288, 289, 290, 0, 291, 534, 535, 0, 295,
	292, 293, 0, 296, 294, 0, 297, 298, 299, 0,
	0, 300, 301, 302, 0, 303, 304, 0, 305, 306,
	307, 0, 308, 309, 536, 310, 311, 312, 314, 316,
	313, 317, 318, 319, 320, 537, 538, 0, 241, 0,
	0, 0, 0, 0, 321, 322, 323, 539, 0, 0,
	0, 324, 0, 325, 0, 0, 1042, 326, 327, 540,
	541, 328, 329, 0, 330, 542, 0, 543, 331, 0,
	332, 333, 334, 335, 336, 544, 545, 546, 393, 1044,
	337, 338, 0, 339, 340, 341, 342, 0, 0, 0,
	0, 343, 344, 346, 0, 1043, 345, 547, 548, 0,
	549, 0, 347, 348, 1045, 550, 1046, 349, 350, 351,
	1047, 352, 0, 0, 0, 353, 354, 355, 356, 357,
	358, 0, 359, 361, 360, 0, 362, 551, 1048, 363,
	364, 1049, 0, 365, 366, 367, 0, 0, 368, 369,
	370, 371, 0, 372, 373, 375, 377, 374, 376, 381,
	378, 379, 380, 383, 0, 382, 1050, 384, 385, 386,
	389, 390, 388, 1051, 387, 0, 0, 1052, 391, 0,
	552, 392, 553, 394, 395, 0, 0, 396, 0, 0,
	0, 398, 399, 400, 0, 0, 401, 402, 554, 1053,
	403, 1054, 555, 404, 405, 397, 406, 407, 408, 409,
	410, 411, 412, 413, 0, 414, 415, 556, 557, 558,
	416, 559, 417, 418, 0, 419, 0, 420, 421, 422,
	423, 424, 425, 426, 560, 428, 427, 429, 0, 0,
	0, 0, 0, 0, 430, 0, 432, 433, 434, 431,
	435, 436, 437, 438, 0, 439, 440, 441, 1055, 442,
	443, 444, 445, 561, 446, 0, 447, 448, 454, 455,
	449, 450, 456, 457, 458, 459, 460, 0, 462, 463,
	461, 464, 465, 466, 0, 467, 451, 452, 468, 469,
	1056, 470, 471, 472, 473, 474, 475, 562, 0, 476,
	0, 477, 478, 479, 480, 453, 481, 486, 563, 482,
	483, 484, 485, 564, 0, 488, 489, 0, 487, 0,
	490, 491, 492, 493, 494, 495, 315, 496, 0, 497,
	565, 566, 567, 568, 0, 504, 0, 498, 499, 569,
	500, 570, 0, 501, 502, 503, 0, 505, 506, 0,
	0, 507, 508, 509, 511, 512, 510, 513, 0, 514,
	0, 0, 515, 516, 517, 571, 572, 573, 0, 519,
	518, 574, 1098, 0, 0, 0, 520, 521, 575, 522,
	523, 524, 0, 0, 0, 0, 0, 0, 0, 244,
	245, 246, 247, 248, 249, 0, 250, 251, 0, 0,
	0, 0, 0, 1002, 0, 1437, 0, 0, 252, 253,
	255, 254, 256, 257, 258, 526, 527, 0, 259, 528,
	260, 529, 0, 261, 262, 263, 264, 265, 0, 1001,
	0, 266, 530, 531, 532, 0, 267, 268, 1008, 0,
	989, 0, 269, 270, 271, 272, 273, 274, 275, 0,
	0, 277, 278, 279, 276, 0, 280, 0, 281, 282,
	283, 0, 284, 1041, 285, 286, 992, 990, 991, 998,
	994, 993, 997, 287, 288, 289, 290, 0, 291, 534,
	535, 0, 295, 292, 293, 0, 296, 294, 0, 297,
	298, 299, 0, 0, 300, 301, 302, 0, 303, 304,
	0, 305, 306, 307, 0, 308, 309, 536, 310, 311,
	312, 314, 316, 313, 317, 318, 319, 320, 1032, 1033,
	0, 241, 0, 0, 0, 0, 0, 321, 322, 323,
	539, 0, 0, 0, 324, 0, 325, 0, 0, 1042,
	326, 327, 540, 541, 328, 329, 0, 330, 1039, 0,
	543, 331, 0, 332, 333, 334, 335, 336, 1003, 1004,
	1007, 393, 1044, 337, 338, 0, 339, 340, 341, 342,
	0, 0, 0, 242, 343, 344, 346, 0, 1043, 345,
	547, 548, 0, 549, 0, 347, 348, 1045, 1005, 1046,
	349, 350, 351, 1047, 352, 0, 0, 0, 353, 354,
	355, 356, 357, 358, 0, 359, 361, 360, 0, 362,
	1040, 1048, 363, 364, 1049, 0, 365, 366, 367, 996,
	995, 368, 369, 370, 371, 0, 372, 373, 375, 377,
	374, 376, 381, 378, 379, 380, 383, 0, 382, 1050,
	384, 385, 386, 389, 390, 388, 1051, 387, 0, 243,
	1052, 391, 0, 1006, 392, 553, 394, 395, 0, 0,
	396, 0, 0, 0, 398, 399, 400, 0, 0, 401,
	402, 554, 1053, 403, 1054, 1034, 404, 405, 397, 406,
	407, 408, 409, 410, 411, 412, 413, 0, 414, 415,
	556, 557, 1035, 416, 559, 417, 418, 0, 419, 0,
	420, 421, 422, 423, 424, 425, 426, 560, 428, 427,
	429, 0, 0, 0, 0, 0, 0, 430, 0, 432,
	433, 434, 431, 435, 436, 437, 438, 0, 439, 440,
	441, 1055, 442, 443, 444, 445, 561, 446, 0, 447,
	448, 454, 455, 449, 450, 456, 457, 458, 459, 460,
	0, 462, 463, 461, 464, 465, 466, 999, 467, 451,
	452, 468, 469, 1056, 470, 471, 472, 473, 474, 475,
	562, 0, 476, 0, 477, 478, 479, 480, 453, 481,
	486, 563, 482, 483, 484, 485, 1036, 0, 488, 489,
	0, 487, 0, 490, 491, 492, 493, 494, 495, 315,
	496, 0, 497, 565, 566, 567, 568, 0, 504, 0,
	498, 499, 1037, 500, 1038, 0, 501, 502, 503, 0,
	505, 506, 0, 0, 507, 508, 509, 511, 512, 510,
	513, 1000, 514, 0, 0, 515, 516, 517, 571, 572,
	573, 0, 519, 518, 574, 924, 0, 238, 0, 520,
	521, 575, 522, 523, 524, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 244, 245, 246, 247, 248, 249,
	0, 250, 251, 0, 0, 0, 0, 0, 525, 0,
	0, 0, 0, 252, 253, 255, 254, 256, 257, 258,
	526, 527, 0, 259, 528, 260, 529, 0, 261, 262,
	263, 264, 265, 0, 0, 0, 266, 530, 531, 532,
	0, 267, 268, 533, 0, 0, 0, 269, 270, 271,
	272, 273, 274, 275, 0, 0, 277, 278, 279, 276,
	0, 280, 0, 281, 282, 283, 0, 284, 0, 285,
	286, 0, 0, 0, 0, 0, 0, 0, 287, 288,
	289, 290, 0, 291, 534, 535, 0, 295, 292, 293,
	0, 296, 294, 0, 297, 298, 299, 0, 0, 300,
	301, 302, 0, 303, 304, 0, 305, 306, 307, 0,
	308, 309, 536, 310, 311, 312, 314, 316, 313, 317,
	318, 319, 320, 537, 538, 0, 0, 0, 0, 0,
	0, 0, 321, 322, 323, 539, 0, 0, 0, 324,
	0, 325, 0, 0, 0, 326, 327, 540, 541, 328,
	329, 0, 330, 542, 0, 543, 331, 0, 332, 333,
	334, 335, 336, 544, 545, 546, 393, 0, 337, 338,
	0, 339, 340, 341, 342, 0, 0, 0, 0, 343,
	344, 346, 0, 0, 345, 547, 548, 0, 549, 0,
	347, 348, 0, 550, 0, 349, 350, 351, 0, 352,
	0, 0, 0, 353, 354, 355, 356, 357, 358, 0,
	359, 361, 360, 0, 362, 551, 0, 363, 364, 0,
	0, 365, 366, 367, 0, 0, 368, 369, 370, 371,
	0, 372, 373, 375, 377, 374, 376, 381, 378, 379,
	380, 383, 0, 382, 0, 384, 385, 386, 389, 390,
	388, 0, 387, 0, 0, 0, 391, 0, 552, 392,
	553, 394, 395, 0, 0, 396, 0, 0, 0, 398,
	399, 400, 0, 0, 401, 402, 554, 0, 403, 0,
	555, 404, 405, 397, 406, 407, 408, 409, 410, 411,
	412, 413, 0, 414, 415, 556, 557, 558, 416, 559,
	417, 418, 0, 419, 0, 420, 421, 422, 423, 424,
	425, 426, 560, 428, 427, 429, 0, 0, 0, 0,
	0, 0, 430, 0, 432, 433, 434, 431, 435, 436,
	437, 438, 0, 439, 440, 441, 0, 442, 443, 444,
	445, 561, 446, 0, 447, 448, 454, 455, 449, 450,
	456, 457, 458, 459, 460, 206, 462, 463, 461, 464,
	465, 466, 0, 467, 451, 452, 468, 469, 0, 470,
	471, 472, 473, 474, 475, 562, 0, 476, 0, 477,
	478, 479, 480, 453, 481, 486, 563, 482, 483, 484,
	485, 564, 0, 488, 489, 0, 487, 208, 490, 491,
	492, 493, 494, 495, 315, 496, 0, 497, 565, 566,
	567, 568, 0, 504, 0, 498, 499, 569, 500, 570,
	0, 501, 502, 503, 0, 505, 506, 0, 0, 507,
	508, 509, 511, 512, 510, 513, 0, 514, 0, 0,
	515, 516, 517, 1431, 572, 573, 0, 519, 518, 574,
	238, 0, 0, 200, 520, 521, 575, 522, 523, 524,
	0, 201, 0, 0, 0, 0, 0, 244, 245, 246,
	247, 248, 249, 0, 250, 251, 0, 0, 0, 0,
	0, 525, 0, 172, 0, 0, 252, 253, 255, 254,
	256, 257, 258, 526, 527, 0, 259, 528, 260, 529,
	0, 261, 262, 263, 264, 265, 0, 0, 0, 266,
	530, 531, 532, 0, 267, 268, 533, 0, 0, 0,
	269, 270, 271, 272, 273, 274, 275, 0, 0, 277,
	278, 279, 276, 0, 280, 0, 281, 282, 283, 0,
	284, 0, 285, 286, 0, 0, 0, 0, 0, 0,
	0, 287, 288, 289, 290, 0, 291, 534, 535, 0,
	295, 292, 293, 0, 296, 294, 0, 297, 298, 299,
	0, 0, 300, 301, 302, 0, 303, 304, 0, 305,
	306, 307, 0, 308, 309, 536, 310, 311, 312, 314,
	316, 313, 317, 318, 319, 320, 537, 538, 0, 241,
	0, 0, 0, 0, 0, 321, 322, 323, 539, 0,
	0, 0, 324, 0, 325, 0, 0, 0, 326, 327,
	540, 541, 328, 329, 0, 330, 542, 0, 543, 331,
	0, 332, 333, 334, 335, 336, 544, 545, 546, 393,
	0, 337, 338, 0, 339, 340, 341, 342, 0, 0,
	0, 242, 343, 344, 346, 0, 0, 345, 547, 548,
	0, 549, 0, 347, 348, 0, 550, 0, 349, 350,
	351, 0, 352, 0, 0, 0, 353, 354, 355, 356,
	357, 358, 0, 359, 361, 360, 0, 362, 551, 0,
	363, 364, 0, 0, 365, 366, 367, 0, 0, 368,
	369, 370, 371, 0, 372, 373, 375, 377, 374, 376,
	381, 378, 379, 380, 383, 0, 382, 0, 384, 385,
	386, 389, 390, 388, 0, 387, 0, 243, 0, 391,
	0, 552, 392, 553, 394, 395, 0, 0, 396, 0,
	0, 0, 398, 399, 400, 0, 0, 401, 402, 554,
	0, 403, 0, 555, 404, 405, 397, 406, 407, 408,
	409, 410, 411, 412, 413, 0, 414, 415, 556, 557,
	558, 416, 559, 417, 418, 0, 419, 0, 420, 421,
	422, 423, 424, 425, 426, 560, 428, 427, 429, 0,
	0, 0, 0, 0, 0, 430, 0, 432, 433, 434,
	431, 435, 436, 437, 438, 0, 439, 440, 441, 0,
	442, 443, 444, 445, 561, 446, 0, 447, 448, 454,
	455, 449, 450, 456, 457, 458, 459, 460, 0, 462,
	463, 461, 464, 465, 466, 0, 467, 451, 452, 468,
	469, 0, 470, 471, 472, 473, 474, 475, 562, 0,
	476, 0, 477, 478, 479, 480, 453, 481, 486, 563,
	482, 483, 484, 485, 564, 0, 488, 489, 0, 487,
	0, 490, 491, 492, 493, 494, 495, 315, 496, 0,
	497, 565, 566, 567, 568, 0, 504, 0, 498, 499,
	569, 500, 570, 0, 501, 502, 503, 0, 505, 506,
	0, 0, 507, 508, 509, 511, 512, 510, 513, 0,
	514, 0, 0, 515, 516, 517, 571, 572, 573, 0,
	519, 518, 574, 0, 1372, 0, 238, 520, 521, 575,
	522, 523, 524, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 244, 245, 246, 247, 248, 249, 0,
	250, 251, 0, 0, 0, 0, 1771, 525, 0, 0,
	0, 0, 252, 253, 255, 254, 256, 257, 258, 526,
	527, 0, 259, 528, 260, 529, 0, 261, 262, 263,
	264, 265, 0, 0, 0, 266, 530, 531, 532, 0,
	267, 268, 533, 0, 0, 0, 269, 270, 271, 272,
	273, 274, 275, 0, 0, 277, 278, 279, 276, 0,
	280, 0, 281, 282, 283, 0, 284, 0, 285, 286,
	0, 0, 0, 0, 0, 0, 0, 287, 288, 289,
	290, 0, 291, 534, 535, 0, 295, 292, 293, 0,
	296, 294, 0, 297, 298, 299, 0, 0, 300, 301,
	302, 0, 303, 304, 0, 305, 306, 307, 0, 308,
	309, 536, 310, 311, 312, 314, 316, 313, 317, 318,
	319, 320, 537, 538, 0, 241, 0, 0, 0, 0,
	0, 321, 322, 323, 539, 0, 0, 0, 324, 0,
	325, 0, 0, 0, 326, 327, 540, 541, 328, 329,
	0, 330, 542, 0, 543, 331, 0, 332, 333, 334,
	335, 336, 544, 545, 546, 393, 0, 337, 338, 0,
	339, 340, 341, 342, 0, 0, 0, 242, 343, 344,
	346, 0, 0, 345, 547, 548, 0, 549, 0, 347,
	348, 0, 550, 0, 349, 350, 351, 0, 352, 0,
	0, 0, 353, 354, 355, 356, 357, 358, 0, 359,
	361, 360, 0, 362, 551, 0, 363, 364, 0, 0,
	365, 366, 367, 0, 0, 368, 369, 370, 371, 0,
	372, 373, 375, 377, 374, 376, 381, 378, 379, 380,
	383, 0, 382, 0, 384, 385, 386, 389, 390, 388,
	0, 387, 0, 243, 0, 391, 0, 552, 392, 553,
	394, 395, 0, 0, 396, 0, 0, 0, 398, 399,
	400, 0, 0, 401, 402, 554, 0, 403, 0, 555,
	404, 405, 397, 406, 407, 408, 409, 410, 411, 412,
	413, 0, 414, 415, 556, 557, 558, 416, 559, 417,
	418, 0, 419, 0, 420, 421, 422, 423, 424, 425,
	426, 560, 428, 427, 429, 0, 0, 0, 0, 0,
	0, 430, 0, 432, 433, 434, 431, 435, 436, 437,
	438, 0, 439, 440, 441, 0, 442, 443, 444, 445,
	561, 446, 0, 447, 448, 454, 455, 449, 450, 456,
	457, 458, 459, 460, 0, 462, 463, 461, 464, 465,
	466, 0, 467, 451, 452, 468, 469, 0, 470, 471,
	472, 473, 474, 475, 562, 0, 476, 0, 477, 478,
	479, 480, 453, 481, 486, 563, 482, 483, 484, 485,
	564, 0, 488, 489, 0, 487, 0, 490, 491, 492,
	493, 494, 495, 315, 496, 0, 497, 565, 566, 567,
	568, 0, 504, 0, 498, 499, 569, 500, 570, 0,
	501, 502, 503, 0, 505, 506, 0, 0, 507, 508,
	509, 511, 512, 510, 513, 0, 514, 0, 0, 515,
	516, 517, 571, 572, 573, 0, 519, 518, 574, 0,
	238, 2634, 0, 520, 521, 575, 522, 523, 524, 0,
	0, 0, 0, 0, 0, 0, 0, 244, 245, 246,
	247, 248, 249, 0, 250, 251, 0, 0, 0, 0,
	1376, 525, 0, 0, 0, 0, 252, 253, 255, 254,
	256, 257, 258, 526, 527, 0, 259, 528, 260, 529,
	0, 261, 262, 263, 264, 265, 0, 0, 0, 266,
	530, 531, 532, 0, 267, 268, 533, 0, 0, 0,
	269, 270, 271, 272, 273, 274, 275, 0, 0, 277,
	278, 279, 276, 0, 280, 0, 281, 282, 283, 0,
	284, 0, 285, 286, 0, 0, 0, 0, 0, 0,
	0, 287, 288, 289, 290, 0, 291, 534, 535, 0,
	295, 292, 293, 0, 296, 294, 0, 297, 298, 299,
	0, 0, 300, 301, 302, 0, 303, 304, 0, 305,
	306, 307, 0, 308, 309, 536, 310, 311, 312, 314,
	316, 313, 317, 318, 319, 320, 537, 538, 0, 0,
	0, 0, 0, 0, 0, 321, 322, 323, 539, 0,
	0, 0, 324, 0, 325, 0, 0, 0, 326, 327,
	540, 541, 328, 329, 0, 330, 542, 0, 543, 331,
	0, 332, 333, 334, 335, 336, 544, 545, 546, 393,
	0, 337, 338, 0, 339, 340, 341, 342, 0, 0,
	0, 0, 343, 344, 346, 0, 0, 345, 547, 548,
	0, 549, 0, 347, 348, 0, 550, 0, 349, 350,
	351, 0, 352, 0, 0, 0, 353, 354, 355, 356,
	357, 358, 0, 359, 361, 360, 0, 362, 551, 0,
	363, 364, 0, 0, 365, 366, 367, 0, 0, 368,
	369, 370, 371, 0, 372, 373, 375, 377, 374, 376,
	381, 378, 379, 380, 383, 0, 382, 0, 384, 385,
	386, 389, 390, 388, 0, 387, 0, 0, 0, 391,
	0, 552, 392, 553, 394, 395, 0, 0, 396, 0,
	0, 0, 398, 399, 400, 0, 0, 401, 402, 554,
	0, 403, 0, 555, 404, 405, 397, 406, 407, 408,
	409, 410, 411, 412, 413, 0, 414, 415, 556, 557,
	558, 416, 559, 417, 418, 0, 419, 0, 420, 421,
	422, 423, 424, 425, 426, 560, 428, 427, 429, 0,
	0, 0, 0, 0, 0, 430, 0, 432, 433, 434,
	431, 435, 436, 437, 438, 0, 439, 440, 441, 0,
	442, 443, 444, 445, 561, 446, 0, 447, 448, 454,
	455, 449, 450, 456, 457, 458, 459, 460, 0, 462,
	463, 461, 464, 465, 466, 0, 467, 451, 452, 468,
	469, 0, 470, 471, 472, 473, 474, 475, 562, 0,
	476, 0, 477, 478, 479, 480, 453, 481, 486, 563,
	482, 483, 484, 485, 564, 0, 488, 489, 0, 487,
	0, 490, 491, 492, 493, 494, 495, 315, 496, 0,
	497, 565, 566, 567, 568, 0, 504, 0, 498, 499,
	569, 500, 570, 0, 501, 502, 503, 0, 505, 506,
	0, 0, 507, 508, 509, 511, 512, 510, 513, 0,
	514, 0, 0, 515, 516, 517, 571, 572, 573, 0,
	519, 518, 574, 238, 0, 0, 0, 520, 521, 575,
	522, 523, 524, 0, 0, 0, 0, 0, 0, 0,
	244, 245, 246, 247, 248, 249, 0, 250, 251, 0,
	0, 0, 0, 0, 525, 0, 4135, 0, 0, 252,
	253, 255, 254, 256, 257, 258, 526, 527, 0, 259,
	528, 260, 529, 0, 261, 262, 263, 264, 265, 0,
	0, 0, 266, 530, 531, 532, 0, 267, 268, 533,
	0, 0, 0, 269, 270, 271, 272, 273, 274, 275,
	0, 0, 277, 278, 279, 276, 0, 280, 0, 281,
	282, 283, 0, 284, 0, 285, 286, 0, 0, 0,
	0, 0, 0, 0, 287, 288, 289, 290, 0, 291,
	534, 535, 0, 295, 292, 293, 0, 296, 294, 0,
	297, 298, 299, 0, 0, 300, 301, 302, 0, 303,
	304, 0, 305, 306, 307, 0, 308, 309, 536, 310,
	311, 312, 314, 316, 313, 317, 318, 319, 320, 537,
	538, 0, 241, 0, 0, 0, 0, 0, 321, 322,
	323, 539, 0, 0, 0, 324, 0, 325, 0, 0,
	0, 326, 327, 540, 541, 328, 329, 0, 330, 542,
	0, 543, 331, 0, 332, 333, 334, 335, 336, 544,
	545, 546, 393, 0, 337, 338, 0, 339, 340, 341,
	342, 0, 0, 0, 242, 343, 344, 346, 0, 0,
	345, 547, 548, 0, 549, 0, 347, 348, 0, 550,
	0, 349, 350, 351, 0, 352, 0, 0, 0, 353,
	354, 355, 356, 357, 358, 0, 359, 361, 360, 0,
	362, 551, 0, 363, 364, 0, 0, 365, 366, 367,
	0, 0, 368, 369, 370, 371, 0, 372, 373, 375,
	377, 374, 376, 381, 378, 379, 380, 383, 0, 382,
	0, 384, 385, 386, 389, 390, 388, 0, 387, 0,
	243, 0, 391, 0, 552, 392, 553, 394, 395, 0,
	0, 396, 0, 0, 0, 398, 399, 400, 0, 0,
	401, 402, 554, 0, 403, 0, 555, 404, 405, 397,
	406, 407, 408, 409, 410, 411, 412, 413, 0, 414,
	415, 556, 557, 558, 416, 559, 417, 418, 0, 419,
	0, 420, 421, 422, 423, 424, 425, 426, 560, 428,
	427, 429, 0, 0, 0, 0, 0, 0, 430, 0,
	432, 433, 434, 431, 435, 436, 437, 438, 0, 439,
	440, 441, 0, 442, 443, 444, 445, 561, 446, 0,
	447, 448, 454, 455, 449, 450, 456, 457, 458, 459,
	460, 0, 462, 463, 461, 464, 465, 466, 0, 467,
	451, 452, 468, 469, 0, 470, 471, 472, 473, 474,
	475, 562, 0, 476, 0, 477, 478, 479, 480, 453,
	481, 486, 563, 482, 483, 484, 485, 564, 0, 488,
	489, 0, 487, 0, 490, 491, 492, 493, 494, 495,
	315, 496, 0, 497, 565, 566, 567, 568, 0, 504,
	0, 498, 499, 569, 500, 570, 0, 501, 502, 503,
	0, 505, 506, 0, 0, 507, 508, 509, 511, 512,
	510, 513, 0, 514, 0, 0, 515, 516, 517, 571,
	572, 573, 238, 519, 518, 574, 0, 0, 0, 0,
	520, 521, 575, 522, 523, 524, 0, 0, 0, 244,
	245, 246, 247, 248, 249, 0, 250, 251, 0, 0,
	0, 0, 0, 525, 0, 0, 0, 3054, 252, 253,
	255, 254, 256, 257, 258, 526, 527, 0, 259, 528,
	260, 529, 0, 261, 262, 263, 264, 265, 0, 0,
	0, 266, 530, 531, 532, 0, 267, 268, 533, 0,
	0, 0, 269, 270, 271, 272, 273, 274, 275, 0,
	0, 277, 278, 279, 276, 0, 280, 0, 281, 282,
	283, 0, 284, 0, 285, 286, 0, 0, 0, 0,
	0, 0, 0, 287, 288, 289, 290, 0, 291, 534,
	535, 0, 295, 292, 293, 0, 296, 294, 0, 297,
	298, 299, 0, 0, 300, 301, 302, 0, 303, 304,
	0, 305, 306, 307, 0, 308, 309, 536, 310, 311,
	312, 314, 316, 313, 317, 318, 319, 320, 537, 538,
	0, 241, 0, 0, 0, 0, 0, 321, 322, 323,
	539, 0, 0, 0, 324, 0, 325, 0, 0, 0,
	326, 327, 540, 541, 328, 329, 0, 330, 542, 0,
	543, 331, 0, 332, 333, 334, 335, 336, 544, 545,
	546, 393, 0, 337, 338, 0, 339, 340, 341, 342,
	0, 0, 0, 242, 343, 344, 346, 0, 0, 345,
	547, 548, 0, 549, 0, 347, 348, 0, 550, 0,
	349, 350, 351, 0, 352, 0, 0, 0, 353, 354,
	355, 356, 357, 358, 0, 359, 361, 360, 0, 362,
	551, 0, 363, 364, 0, 0, 365, 366, 367, 0,
	0, 368, 369, 370, 371, 0, 372, 373, 375, 377,
	374, 376, 381, 378, 379, 380, 383, 0, 382, 0,
	384, 385, 386, 389, 390, 388, 0, 387, 0, 243,
	0, 391, 0, 552, 392, 553, 394, 395, 0, 0,
	396, 0, 0, 0, 398, 399, 400, 0, 0, 401,
	402, 554, 0, 403, 0, 555, 404, 405, 397, 406,
	407, 408, 409, 410, 411, 412, 413, 0, 414, 415,
	556, 557, 558, 416, 559, 417, 418, 0, 419, 0,
	420, 421, 422, 423, 424, 425, 426, 560, 428, 427,
	429, 0, 0, 0, 0, 0, 0, 430, 0, 432,
	433, 434, 431, 435, 436, 437, 438, 0, 439, 440,
	441, 0, 442, 443, 444, 445, 561, 446, 0, 447,
	448, 454, 455, 449, 450, 456, 457, 458, 459, 460,
	0, 462, 463, 461, 464, 465, 466, 0, 467, 451,
	452, 468, 469, 0, 470, 471, 472, 473, 474, 475,
	562, 0, 476, 0, 477, 478, 479, 480, 453, 481,
	486, 563, 482, 483, 484, 485, 564, 0, 488, 489,
	0, 487, 0, 490, 491, 492, 493, 494, 495, 315,
	496, 0, 497, 565, 566, 567, 568, 0, 504, 0,
	498, 499, 569, 500, 570, 0, 501, 502, 503, 0,
	505, 506, 0, 0, 507, 508, 509, 511, 512, 510,
	513, 0, 514, 0, 0, 515, 516, 517, 571, 572,
	573, 238, 519, 518, 574, 0, 0, 0, 0, 520,
	521, 575, 522, 523, 524, 0, 0, 0, 244, 245,
	246, 247, 248, 249, 0, 250, 251, 0, 0, 0,
	0, 0, 525, 0, 0, 0, 1376, 252, 253, 255,
	254, 256, 257, 258, 526, 527, 0, 259, 528, 260,
	529, 0, 261, 262, 263, 264, 265, 0, 0, 0,
	266, 530, 531, 532, 0, 267, 268, 533, 0, 0,
	0, 269, 270, 271, 272, 273, 274, 275, 0, 0,
	277, 278, 279, 276, 0, 280, 0, 281, 282, 283,
	0, 284, 0, 285, 286, 0, 0, 0, 0, 0,
	0, 0, 287, 288, 289, 290, 0, 291, 534, 535,
	0, 295, 292, 293, 0, 296, 294, 0, 297, 298,
	299, 0, 0, 300, 301, 302, 0, 303, 304, 0,
	305, 306, 307, 0, 308, 309, 536, 310, 311, 312,
	314, 316, 313, 317, 318, 319, 320, 537, 538, 0,
	0, 0, 0, 0, 0, 0, 321, 322, 323, 539,
	0, 0, 0, 324, 0, 325, 0, 0, 0, 326,
	327, 540, 541, 328, 329, 0, 330, 542, 0, 543,
	331, 0, 332, 333, 334, 335, 336, 544, 545, 546,
	393, 0, 337, 338, 0, 339, 340, 341, 342, 0,
	0, 0, 0, 343, 344, 346, 0, 0, 345, 547,
	548, 0, 549, 0, 347, 348, 0, 550, 0, 349,
	350, 351, 0, 352, 0, 0, 0, 353, 354, 355,
	356, 357, 358, 0, 359, 361, 360, 0, 362, 551,
	0, 363, 364, 0, 0, 365, 366, 367, 0, 0,
	368, 369, 370, 371, 0, 372, 373, 375, 377, 374,
	376, 381, 378, 379, 380, 383, 0, 382, 0, 384,
	385, 386, 389, 390, 388, 0, 387, 0, 0, 0,
	391, 0, 552, 392, 553, 394, 395, 0, 0, 396,
	0, 0, 0, 398, 399, 400, 0, 0, 401, 402,
	554, 0, 403, 0, 555, 404, 405, 397, 406, 407,
	408, 409, 410, 411, 412, 413, 0, 414, 415, 556,
	557, 558, 416, 559, 417, 418, 0, 419, 0, 420,
	421, 422, 423, 424, 425, 426, 560, 428, 427, 429,
	0, 0, 0, 0, 0, 0, 430, 0, 432, 433,
	434, 431, 435, 436, 437, 438, 0, 439, 440, 441,
	0, 442, 443, 444, 445, 561, 446, 0, 447, 448,
	454, 455, 449, 450, 456, 457, 458, 459, 460, 0,
	462, 463, 461, 464, 465, 466, 0, 467, 451, 452,
	468, 469, 0, 470, 471, 472, 473, 474, 475, 562,
	0, 476, 0, 477, 478, 479, 480, 453, 481, 486,
	563, 482, 483, 484, 485, 564, 0, 488, 489, 0,
	487, 0, 490, 491, 492, 493, 494, 495, 315, 496,
	0, 497, 565, 566, 567, 568, 0, 504, 0, 498,
	499, 569, 500, 570, 0, 501, 502, 503, 0, 505,
	506, 0, 0, 507, 508, 509, 511, 512, 510, 513,
	0, 514, 0, 0, 515, 516, 517, 571, 572, 573,
	0, 519, 518, 574, 238, 0, 0, 0, 520, 521,
	575, 522, 523, 524, 0, 0, 0, 0, 0, 0,
	0, 244, 245, 246, 247, 248, 249, 0, 250, 251,
	0, 0, 0, 0, 0, 525, 0, 2607, 0, 0,
	252, 253, 255, 254, 256, 257, 258, 526, 527, 0,
	259, 528, 260, 529, 0, 261, 262, 263, 264, 265,
	0, 0, 0, 266, 530, 531, 532, 0, 267, 268,
	533, 0, 0, 0, 269, 270, 271, 272, 273, 274,
	275, 0, 0, 277, 278, 279, 276, 0, 280, 0,
	281, 282, 283, 0, 284, 0, 285, 286, 0, 0,
	0, 0, 0, 0, 0, 287, 288, 289, 290, 0,
	291, 534, 535, 0, 295, 292, 293, 0, 296, 294,
	0, 297, 298, 299, 0, 0, 300, 301, 302, 0,
	303, 304, 0, 305, 306, 307, 0, 308, 309, 536,
	310, 311, 312, 314, 316, 313, 317, 318, 319, 320,
	537, 538, 0, 0, 0, 0, 0, 0, 0, 321,
	322, 323, 539, 0, 0, 0, 324, 0, 325, 0,
	0, 0, 326, 327, 540, 541, 328, 329, 0, 330,
	542, 0, 543, 331, 0, 332, 333, 334, 335, 336,
	544, 545, 546, 393, 0, 337, 338, 0, 339, 340,
	341, 342, 0, 0, 0, 0, 343, 344, 346, 0,
	0, 345, 547, 548, 0, 549, 0, 347, 348, 0,
	550, 0, 349, 350, 351, 0, 352, 0, 0, 0,
	353, 354, 355, 356, 357, 358, 0, 359, 361, 360,
	0, 362, 551, 0, 363, 364, 0, 0, 365, 366,
	367, 0, 0, 368, 369, 370, 371, 0, 372, 373,
	375, 377, 374, 376, 381, 378, 379, 380, 383, 0,
	382, 0, 384, 385, 386, 389, 390, 388, 0, 387,
	0, 0, 0, 391, 0, 552, 392, 553, 394, 395,
	0, 0, 396, 0, 0, 0, 398, 399, 400, 0,
	0, 401, 402, 554, 0, 403, 0, 555, 404, 405,
	397, 406, 407, 408, 409, 410, 411, 412, 413, 0,
	414, 415, 556, 557, 558, 416, 559, 417, 418, 0,
	419, 0, 420, 421, 422, 423, 424, 425, 426, 560,
	428, 427, 429, 0, 0, 0, 0, 0, 0, 430,
	0, 432, 433, 434, 431, 435, 436, 437, 438, 0,
	439, 440, 441, 0, 442, 443, 444, 445, 561, 446,
	0, 447, 448, 454, 455, 449, 450, 456, 457, 458,
	459, 460, 0, 462, 463, 461, 464, 465, 466, 0,
	467, 451, 452, 468, 469, 0, 470, 471, 472, 473,
	474, 475, 562, 0, 476, 0, 477, 478, 479, 480,
	453, 481, 486, 563, 482, 483, 484, 485, 564, 0,
	488, 489, 0, 487, 0, 490, 491, 492, 493, 494,
	495, 315, 496, 0, 497, 565, 566, 567, 568, 0,
	504, 0, 498, 499, 569, 500, 570, 0, 501, 502,
	503, 0, 505, 506, 0, 0, 507, 508, 509, 511,
	512, 510, 513, 0, 514, 0, 0, 515, 516, 517,
	571, 572, 573, 0, 519, 518, 574, 238, 0, 0,
	0, 520, 521, 575, 522, 523, 524, 0, 0, 0,
	0, 0, 0, 0, 244, 245, 246, 247, 248, 249,
	0, 250, 251, 0, 0, 0, 0, 0, 525, 0,
	3205, 0, 0, 252, 253, 255, 254, 256, 257, 258,
	526, 527, 0, 259, 528, 260, 529, 0, 261, 262,
	263, 264, 265, 0, 0, 0, 266, 530, 531, 532,
	0, 267, 268, 533, 0, 0, 0, 269, 270, 271,
	272, 273, 274, 275, 0, 0, 277, 278, 279, 276,
	0, 280, 0, 281, 282, 283, 0, 284, 0, 285,
	286, 0, 0, 0, 0, 0, 0, 0, 287, 288,
	289, 290, 0, 291, 534, 535, 0, 295, 292, 293,
	0, 296, 294, 0, 297, 298, 299, 0, 0, 300,
	301, 302, 0, 303, 304, 0, 305, 306, 307, 0,
	308, 309, 536, 310, 311, 312, 314, 316, 313, 317,
	318, 319, 320, 537, 538, 0, 0, 0, 0, 0,
	0, 0, 321, 322, 323, 539, 0, 0, 0, 324,
	0, 325, 0, 0, 0, 326, 327, 540, 541, 328,
	329, 0, 330, 542, 0, 543, 331, 0, 332, 333,
	334, 335, 336, 544, 545, 546, 393, 0, 337, 338,
	0, 339, 340, 341, 342, 0, 0, 0, 0, 343,
	344, 346, 0, 0, 345, 547, 548, 0, 549, 0,
	347, 348, 0, 550, 0, 349, 350, 351, 0, 352,
	0, 0, 0, 353, 354, 355, 356, 357, 358, 0,
	359, 361, 360, 0, 362, 551, 0, 363, 364, 0,
	0, 365, 366, 367, 0, 0, 368, 369, 370, 371,
	0, 372, 373, 375, 377, 374, 376, 381, 378, 379,
	380, 383, 0, 382, 0, 384, 385, 386, 389, 390,
	388, 0, 387, 0, 0, 0, 391, 0, 552, 392,
	553, 394, 395, 0, 0, 396, 0, 0, 0, 398,
	399, 400, 0, 0, 401, 402, 554, 0, 403, 0,
	555, 404, 405, 397, 406, 407, 408, 409, 410, 411,
	412, 413, 0, 414, 415, 556, 557, 558, 416, 559,
	417, 418, 0, 419, 0, 420, 421, 422, 423, 424,
	425, 426, 560, 428, 427, 429, 0, 0, 0, 0,
	0, 0, 430, 0, 432, 433, 434, 431, 435, 436,
	437, 438, 0, 439, 440, 441, 0, 442, 443, 444,
	445, 561, 446, 0, 447, 448, 454, 455, 449, 450,
	456, 457, 458, 459, 460, 0, 462, 463, 461, 464,
	465, 466, 0, 467, 451, 452, 468, 469, 0, 470,
	471, 472, 473, 474, 475, 562, 0, 476, 0, 477,
	478, 479, 480, 453, 481, 486, 563, 482, 483, 484,
	485, 564, 0, 488, 489, 0, 487, 0, 490, 491,
	492, 493, 494, 495, 315, 496, 0, 497, 565, 566,
	567, 568, 0, 504, 0, 498, 499, 569, 500, 570,
	0, 501, 502, 503, 0, 505, 506, 0, 0, 507,
	508, 509, 511, 512, 510, 513, 0, 514, 0, 0,
	515, 516, 517, 571, 572, 573, 0, 519, 518, 574,
	0, 774, 0, 658, 520, 521, 575, 522, 523, 524,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	244, 245, 246, 247, 248, 249, 0, 250, 251, 0,
	0, 0, 0, 2037, 525, 0, 0, 0, 0, 252,
	253, 255, 254, 256, 257, 258, 526, 527, 0, 259,
	528, 260, 529, 0, 261, 262, 263, 264, 265, 0,
	0, 0, 266, 530, 531, 532, 0, 267, 268, 533,
	0, 0, 0, 269, 270, 271, 272, 273, 274, 275,
	0, 0, 277, 278, 279, 276, 0, 280, 0, 281,
	282, 283, 0, 284, 0, 285, 286, 0, 0, 0,
	0, 0, 0, 0, 287, 288, 665, 290, 0, 291,
	534, 535, 0, 295, 292, 293, 0, 296, 294, 0,
	297, 298, 299, 0, 0, 300, 301, 302, 0, 303,
	304, 0, 305, 306, 307, 0, 308, 309, 536, 310,
	311, 312, 314, 316, 313, 317, 318, 319, 320, 537,
	538, 0, 241, 0, 0, 0, 0, 0, 321, 322,
	323, 539, 0, 0, 0, 324, 0, 325, 0, 772,
	0, 326, 327, 540, 541, 328, 329, 0, 330, 542,
	0, 543, 331, 0, 332, 333, 334, 335, 336, 544,
	545, 546, 393, 0, 337, 338, 0, 339, 340, 341,
	342, 0, 0, 0, 242, 343, 344, 346, 0, 0,
	345, 547, 548, 0, 549, 0, 347, 348, 0, 550,
	0, 349, 350, 351, 0, 352, 0, 0, 0, 353,
	354, 355, 356, 357, 358, 0, 359, 361, 360, 0,
	362, 551, 0, 363, 364, 0, 0, 365, 366, 367,
	0, 0, 368, 369, 370, 371, 0, 372, 373, 375,
	377, 374, 376, 381, 378, 379, 380, 383, 0, 382,
	0, 384, 385, 386, 389, 390, 388, 0, 387, 0,
	243, 0, 391, 0, 552, 392, 553, 394, 395, 0,
	0, 396, 0, 0, 0, 398, 399, 400, 0, 0,
	401, 402, 554, 0, 403, 0, 555, 404, 405, 397,
	406, 407, 408, 409, 410, 411, 412, 413, 0, 414,
	415, 556, 557, 558, 416, 559, 417, 418, 0, 419,
	0, 420, 421, 422, 423, 424, 425, 426, 560, 428,
	427, 429, 0, 0, 0, 0, 0, 0, 430, 0,
	432, 433, 434, 431, 435, 436, 437, 438, 0, 439,
	440, 441, 0, 442, 443, 444, 445, 561, 446, 0,
	447, 448, 454, 455, 449, 450, 456, 457, 458, 459,
	460, 0, 462, 463, 461, 464, 465, 466, 0, 467,
	451, 452, 468, 469, 0, 470, 471, 472, 473, 474,
	475, 562, 0, 476, 0, 477, 478, 479, 480, 453,
	481, 486, 563, 482, 483, 484, 485, 564, 0, 488,
	489, 0, 487, 663, 490, 491, 492, 493, 664, 495,
	315, 496, 0, 497, 565, 566, 567, 568, 0, 504,
	0, 498, 499, 569, 500, 570, 0, 501, 502, 503,
	0, 505, 506, 0, 0, 507, 508, 509, 511, 512,
	510, 513, 0, 514, 0, 0, 515, 516, 517, 571,
	572, 573, 0, 519, 518, 574, 0, 656, 0, 658,
	520, 521, 575, 522, 523, 524, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 244, 245, 246, 247,
	248, 249, 668, 250, 251, 0, 0, 0, 0, 0,
	525, 0, 0, 0, 0, 252, 253, 255, 254, 256,
	257, 258, 526, 527, 0, 259, 528, 260, 529, 0,
	261, 262, 263, 264, 265, 0, 0, 0, 266, 530,
	531, 532, 0, 267, 268, 533, 0, 0, 0, 269,
	270, 271, 272, 273, 274, 275, 0, 0, 277, 278,
	279, 276, 0, 280, 0, 281, 282, 283, 0, 284,
	0, 285, 286, 0, 0, 0, 0, 0, 0, 0,
	287, 288, 665, 290, 0, 291, 534, 535, 0, 295,
	292, 293, 0, 296, 294, 0, 297, 298, 299, 0,
	0, 300, 301, 302, 0, 303, 304, 0, 305, 306,
	307, 0, 308, 309, 536, 310, 311, 312, 314, 316,
	313, 317, 318, 319, 320, 537, 538, 0, 241, 0,
	0, 0, 0, 0, 321, 322, 323, 539, 0, 0,
	0, 324, 0, 325, 0, 0, 0, 326, 327, 540,
	541, 328, 329, 0, 330, 542, 0, 543, 331, 0,
	332, 333, 334, 335, 336, 544, 545, 546, 393, 0,
	337, 338, 0, 339, 340, 341, 342, 0, 0, 0,
	242, 343, 344, 346, 0, 0, 345, 547, 548, 0,
	549, 0, 347, 348, 0, 550, 0, 349, 350, 351,
	0, 352, 0, 0, 0, 353, 354, 355, 356, 357,
	358, 0, 359, 361, 360, 0, 362, 551, 0, 363,
	364, 0, 0, 365, 366, 367, 0, 0, 368, 369,
	370, 371, 0, 372, 373, 375, 377, 374, 376, 381,
	378, 379, 380, 383, 0, 382, 0, 384, 385, 386,
	389, 390, 388, 0, 387, 0, 243, 0, 391, 0,
	552, 392, 553, 394, 395, 0, 0, 396, 0, 0,
	0, 398, 399, 400, 0, 0, 401, 402, 554, 0,
	403, 0, 555, 404, 405, 397, 406, 407, 408, 409,
	410, 411, 412, 413, 0, 414, 415, 556, 557, 558,
	416, 559, 417, 418, 0, 419, 0, 420, 421, 422,
	423, 424, 425, 426, 560, 428, 427, 429, 0, 0,
	0, 0, 0, 0, 430, 0, 432, 433, 434, 431,
	435, 436, 437, 438, 0, 439, 440, 441, 0, 442,
	443, 444, 445, 561, 446, 0, 447, 448, 454, 455,
	449, 450, 456, 457, 458, 459, 460, 0, 462, 463,
	461, 464, 465, 466, 0, 467, 451, 452, 468, 469,
	0, 470, 471, 472, 473, 474, 475, 562, 0, 476,
	0, 477, 478, 479, 480, 453, 481, 486, 563, 482,
	483, 484, 485, 564, 0, 488, 489, 0, 487, 663,
	490, 491, 492, 493, 664, 495, 315, 496, 0, 497,
	565, 566, 567, 568, 0, 504, 0, 498, 499, 569,
	500, 570, 0, 501, 502, 503, 0, 505, 506, 0,
	0, 507, 508, 509, 511, 512, 510, 513, 0, 514,
	0, 0, 515, 516, 517, 571, 572, 573, 658, 519,
	518, 574, 0, 0, 0, 0, 520, 521, 575, 522,
	523, 524, 0, 0, 0, 244, 245, 246, 247, 248,
	249, 0, 250, 251, 0, 0, 0, 0, 668, 525,
	0, 0, 0, 0, 252, 253, 255, 254, 256, 257,
	258, 526, 527, 0, 259, 528, 260, 529, 0, 261,
	262, 263, 264, 265, 0, 0, 0, 266, 530, 531,
	532, 0, 267, 268, 533, 0, 0, 0, 269, 270,
	271, 272, 273, 274, 275, 0, 0, 277, 278, 279,
	276, 0, 280, 0, 281, 282, 283, 0, 284, 0,
	285, 286, 0, 0, 0, 0, 0, 0, 0, 287,
	288, 665, 290, 0, 291, 534, 535, 0, 295, 292,
	293, 0, 296, 294, 0, 297, 298, 299, 0, 0,
	300, 301, 302, 0, 303, 304, 0, 305, 306, 307,
	0, 308, 309, 536, 310, 311, 312, 314, 316, 313,
	317, 318, 319, 320, 537, 538, 0, 241, 0, 0,
	0, 0, 0, 321, 322, 323, 539, 0, 0, 0,
	324, 0, 325, 0, 0, 0, 326, 327, 540, 541,
	328, 329, 0, 330, 542, 0, 543, 331, 0, 332,
	333, 334, 335, 336, 544, 545, 546, 393, 0, 337,
	338, 0, 339, 340, 341, 342, 0, 0, 0, 242,
	343, 344, 346, 0, 0, 345, 547, 548, 0, 549,
	0, 347, 348, 0, 550, 0, 349, 350, 351, 0,
	352, 0, 0, 0, 353, 354, 355, 356, 357, 358,
	0, 359, 361, 360, 0, 362, 551, 0, 363, 364,
	0, 0, 365, 366, 367, 0, 0, 368, 369, 370,
	371, 0, 372, 373, 375, 377, 374, 376, 381, 378,
	379, 380, 383, 0, 382, 0, 384, 385, 386, 389,
	390, 388, 0, 387, 0, 243, 0, 391, 0, 552,
	392, 553, 394, 395, 0, 0, 396, 0, 0, 0,
	398, 399, 400, 0, 0, 401, 402, 554, 0, 403,
	0, 555, 404, 405, 397, 406, 407, 408, 409, 410,
	411, 412, 413, 0, 414, 415, 556, 557, 558, 416,
	559, 417, 418, 0, 419, 0, 420, 421, 422, 423,
	424, 425, 426, 560, 428, 427, 429, 0, 0, 0,
	0, 0, 0, 430, 0, 432, 433, 434, 431, 435,
	436, 437, 438, 0, 439, 440, 441, 0, 442, 443,
	444, 445, 561, 446, 0, 447, 448, 454, 455, 449,
	450, 456, 457, 458, 459, 460, 0, 462, 463, 461,
	464, 465, 466, 0, 467, 451, 452, 468, 469, 0,
	470, 471, 472, 473, 474, 475, 562, 0, 476, 0,
	477, 478, 479, 480, 453, 481, 486, 563, 482, 483,
	484, 485, 564, 0, 488, 489, 0, 487, 663, 490,
	491, 492, 493, 664, 495, 315, 496, 0, 497, 565,
	566, 567, 568, 0, 504, 0, 498, 499, 569, 500,
	570, 0, 501, 502, 503, 0, 505, 506, 0, 0,
	507, 508, 509, 511, 512, 510, 513, 0, 514, 0,
	0, 515, 516, 517, 571, 572, 573, 658, 519, 518,
	574, 0, 0, 0, 0, 520, 521, 575, 522, 523,
	524, 0, 0, 0, 244, 245, 246, 247, 248, 249,
	0, 250, 251, 0, 0, 0, 0, 668, 525, 0,
	0, 0, 0, 252, 253, 255, 254, 256, 257, 258,
	526, 527, 0, 259, 528, 260, 529, 0, 261, 262,
	263, 264, 265, 0, 0, 0, 266, 530, 531, 532,
	0, 267, 268, 533, 0, 0, 0, 269, 270, 271,
	272, 273, 274, 275, 0, 0, 277, 278, 279, 276,
	0, 280, 0, 281, 282, 283, 0, 284, 0, 285,
	286, 0, 0, 0, 0, 0, 0, 0, 287, 288,
	665, 290, 0, 291, 534, 535, 0, 295, 292, 293,
	0, 296, 294, 0, 297, 298, 299, 0, 0, 300,
	301, 302, 0, 303, 304, 0, 305, 306, 307, 0,
	308, 309, 536, 310, 311, 312, 314, 316, 313, 317,
	318, 319, 320, 537, 538, 0, 241, 0, 0, 0,
	0, 0, 321, 322, 323, 539, 0, 0, 0, 324,
	0, 325, 0, 0, 0, 326, 327, 540, 541, 328,
	329, 0, 330, 542, 0, 543, 331, 0, 332, 333,
	334, 335, 336, 544, 545, 546, 393, 0, 337, 338,
	0, 339, 340, 341, 342, 0, 0, 0, 242, 343,
	344, 346, 0, 0, 345, 547, 548, 0, 549, 0,
	347, 348, 0, 550, 0, 349, 350, 351, 0, 352,
	0, 0, 0, 353, 354, 355, 356, 357, 358, 0,
	359, 361, 360, 0, 362, 551, 0, 363, 364, 0,
	0, 365, 366, 367, 0, 0, 368, 369, 370, 371,
	0, 372, 373, 375, 377, 374, 376, 381, 378, 379,
	380, 383, 0, 382, 0, 384, 385, 386, 389, 390,
	388, 0, 387, 0, 243, 0, 391, 0, 552, 392,
	553, 394, 395, 0, 0, 396, 0, 0, 0, 398,
	399, 400, 0, 0, 401, 402, 554, 0, 403, 0,
	555, 404, 405, 397, 406, 407, 408, 409, 410, 411,
	412, 413, 0, 414, 415, 556, 557, 558, 416, 559,
	417, 418, 0, 419, 0, 420, 421, 422, 423, 424,
	425, 426, 560, 428, 427, 429, 0, 0, 0, 0,
	0, 0, 430, 0, 432, 433, 434, 431, 435, 436,
	437, 438, 0, 439, 440, 441, 0, 2074, 443, 444,
	445, 561, 446, 0, 447, 448, 454, 455, 449, 450,
	456, 457, 458, 459, 460, 0, 462, 463, 461, 464,
	465, 466, 0, 467, 451, 452, 468, 469, 0, 470,
	471, 472, 473, 474, 475, 562, 0, 476, 0, 477,
	478, 479, 480, 453, 481, 486, 563, 482, 483, 484,
	485, 564, 0, 488, 489, 0, 487, 663, 490, 491,
	492, 493, 664, 495, 315, 496, 0, 497, 565, 566,
	567, 568, 0, 504, 0, 498, 499, 569, 500, 570,
	0, 501, 502, 503, 0, 505, 506, 0, 0, 507,
	508, 509, 511, 512, 510, 513, 0, 514, 0, 0,
	515, 516, 517, 571, 572, 573, 1806, 519, 518, 574,
	0, 0, 0, 0, 520, 521, 575, 522, 523, 524,
	0, 0, 0, 244, 245, 246, 247, 248, 249, 0,
	250, 251, 0, 0, 0, 0, 668, 0, 0, 0,
	0, 0, 252, 253, 255, 254, 256, 257, 258, 0,
	1812, 0, 259, 1802, 260, 1818, 0, 261, 262, 263,
	264, 265, 0, 0, 0, 266, 1827, 1828, 0, 0,
	267, 268, 0, 0, 1248, 0, 269, 270, 271, 272,
	273, 274, 275, 0, 0, 277, 278, 279, 276, 0,
	280, 0, 281, 282, 283, 0, 284, 1041, 285, 286,
	0, 0, 0, 0, 0, 0, 0, 287, 288, 289,
	290, 1025, 291, 1816, 1815, 0, 295, 292, 293, 0,
	296, 294, 0, 297, 298, 299, 0, 0, 300, 1010,
	302, 0, 303, 304, 0, 305, 306, 307, 0, 308,
	309, 0, 310, 311, 312, 314, 316, 313, 317, 318,
	319, 320, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 321, 322, 323, 1814, 0, 0, 0, 324, 0,
	325, 0, 0, 1042, 326, 327, 1823, 1824, 328, 329,
	0, 330, 0, 0, 0, 331, 0, 332, 333, 334,
	335, 336, 0, 0, 0, 393, 1044, 337, 338, 0,
	339, 340, 341, 342, 0, 0, 0, 0, 343, 344,
	346, 0, 1043, 345, 1809, 1810, 0, 1805, 0, 347,
	348, 1045, 0, 1046, 349, 350, 351, 1047, 352, 0,
	0, 0, 353, 354, 355, 356, 357, 358, 0, 359,
	361, 360, 0, 362, 0, 1048, 363, 364, 1049, 0,
	365, 366, 367, 0, 0, 368, 369, 370, 371, 0,
	372, 373, 375, 377, 374, 376, 381, 378, 379, 380,
	383, 0, 382, 1050, 384, 385, 386, 389, 390, 388,
	1051, 387, 0, 0, 1052, 391, 0, 0, 392, 1817,
	394, 395, 0, 0, 396, 0, 0, 0, 398, 399,
	400, 0, 0, 401, 402, 0, 1053, 403, 1054, 0,
	404, 405, 397, 406, 407, 408, 409, 410, 411, 412,
	413, 0, 414, 415, 1799, 1800, 0, 416, 0, 417,
	418, 0, 419, 0, 420, 421, 422, 423, 424, 425,
	426, 1813, 428, 427, 429, 0, 0, 0, 0, 0,
	0, 430, 0, 432, 433, 434, 431, 435, 436, 437,
	438, 0, 439, 440, 441, 1055, 442, 443, 444, 445,
	0, 446, 0, 447, 448, 454, 455, 449, 450, 456,
	457, 458, 459, 460, 0, 462, 463, 461, 464, 465,
	466, 0, 467, 451, 452, 468, 469, 1056, 470, 471,
	472, 473, 474, 475, 1811, 0, 476, 0, 477, 478,
	479, 480, 453, 481, 486, 1826, 482, 483, 484, 485,
	0, 0, 488, 489, 0, 487, 0, 490, 491, 492,
	493, 494, 495, 315, 496, 0, 497, 1819, 1820, 1821,
	1822, 0, 504, 0, 498, 499, 0, 500, 0, 0,
	501, 502, 503, 0, 505, 506, 0, 0, 507, 508,
	509, 511, 512, 510, 513, 0, 514, 0, 0, 515,
	516, 517, 0, 1803, 1825, 0, 519, 518, 0, 0,
	0, 0, 0, 520, 521, 0, 522, 523, 524, 1282,
	1281, 0, 0, 0, 0, 1279, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 244, 245, 246, 247,
	248, 249, 0, 250, 251, 0, 1793, 0, 0, 0,
	525, 0, 0, 0, 0, 252, 253, 255, 254, 256,
	257, 258, 526, 527, 0, 259, 528, 260, 529, 0,
	261, 262, 263, 264, 265, 0, 0, 0, 266, 530,
	531, 532, 0, 267, 268, 533, 0, 1248, 0, 269,
	270, 271, 272, 273, 274, 275, 0, 0, 277, 278,
	279, 276, 0, 280, 0, 281, 282, 283, 0, 284,
	1041, 285, 286, 0, 0, 0, 0, 0, 0, 0,
	287, 288, 289, 290, 0, 291, 534, 535, 0, 295,
	292, 293, 0, 296, 294, 0, 297, 298, 299, 0,
	0, 300, 301, 302, 0, 303, 304, 0, 305, 306,
	307, 0, 308, 309, 536, 310, 311, 312, 314, 316,
	313, 317, 318, 319, 320, 537, 538, 0, 241, 0,
	0, 0, 0, 0, 321, 322, 323, 539, 0, 0,
	0, 324, 0, 325, 0, 0, 1042, 326, 327, 540,
	541, 328, 329, 0, 330, 542, 0, 543, 331, 0,
	332, 333, 334, 335, 336, 544, 545, 546, 393, 1044,
	337, 338, 0, 339, 340, 341, 342, 0, 0, 0,
	0, 343, 344, 346, 0, 1043, 345, 547, 548, 0,
	549, 0, 347, 348, 1045, 550, 1046, 349, 350, 351,
	1047, 352, 0, 0, 0, 353, 354, 355, 356, 357,
	358, 0, 359, 361, 360, 0, 362, 551, 1048, 363,
	364, 1049, 0, 365, 366, 367, 0, 0, 368, 369,
	370, 371, 0, 372, 373, 375, 377, 374, 376, 381,
	378, 379, 380, 383, 0, 382, 1050, 384, 385, 386,
	389, 390, 388, 1051, 387, 0, 0, 1052, 391, 3368,
	552, 392, 553, 394, 395, 0, 0, 396, 0, 0,
	0, 398, 399, 400, 0, 0, 401, 402, 554, 1053,
	403, 1054, 555, 404, 405, 397, 406, 407, 408, 409,
	410, 411, 412, 413, 0, 414, 415, 556, 557, 558,
	416, 559, 417, 418, 0, 419, 0, 420, 421, 422,
	423, 424, 425, 426, 560, 428, 427, 429, 0, 0,
	0, 0, 0, 0, 430, 0, 432, 433, 434, 431,
	435, 436, 437, 438, 0, 439, 440, 441, 1055, 442,
	443, 444, 445, 561, 446, 0, 447, 448, 454, 455,
	449, 450, 456, 457, 458, 459, 460, 0, 462, 463,
	461, 464, 465, 466, 0, 467, 451, 452, 468, 469,
	1056, 470, 471, 472, 473, 474, 475, 562, 0, 476,
	0, 477, 478, 479, 480, 453, 481, 486, 563, 482,
	483, 484, 485, 564, 0, 488, 489, 0, 487, 0,
	490, 491, 492, 493, 494, 495, 315, 496, 0, 497,
	565, 566, 567, 568, 0, 504, 0, 498, 499, 569,
	500, 570, 0, 501, 502, 503, 0, 505, 506, 0,
	0, 507, 508, 509, 511, 512, 510, 513, 0, 514,
	0, 0, 515, 516, 517, 571, 572, 573, 0, 519,
	518, 574, 0, 0, 0, 0, 520, 521, 575, 522,
	523, 524, 1282, 1281, 0, 0, 0, 0, 1279, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 244,
	245, 246, 247, 248, 249, 0, 250, 251, 0, 0,
	0, 0, 0, 525, 0, 0, 0, 0, 252, 253,
	255, 254, 256, 257, 258, 526, 527, 0, 259, 528,
	260, 529, 0, 261, 262, 263, 264, 265, 0, 0,
	0, 266, 530, 531, 532, 0, 267, 268, 533, 0,
	1248, 0, 269, 270, 271, 272, 273, 274, 275, 0,
	0, 277, 278, 279, 276, 0, 280, 0, 281, 282,
	283, 0, 284, 1041, 285, 286, 0, 0, 0, 0,
	0, 0, 0, 287, 288, 289, 290, 0, 291, 534,
	535, 0, 295, 292, 293, 0, 296, 294, 0, 297,
	298, 299, 0, 0, 300, 301, 302, 0, 303, 304,
	0, 305, 306, 307, 0, 308, 309, 536, 310, 311,
	312, 314, 316, 313, 317, 318, 319, 320, 537, 538,
	0, 241, 0, 0, 0, 0, 0, 321, 322, 323,
	539, 0, 0, 0, 324, 0, 325, 0, 0, 1042,
	326, 327, 540, 541, 328, 329, 0, 330, 542, 0,
	543, 331, 0, 332, 333, 334, 335, 336, 544, 545,
	546, 393, 1044, 337, 338, 0, 339, 340, 341, 342,
	0, 0, 0, 0, 343, 344, 346, 0, 1043, 345,
	547, 548, 0, 549, 0, 347, 348, 1045, 550, 1046,
	349, 350, 351, 1047, 352, 0, 0, 0, 353, 354,
	355, 356, 357, 358, 0, 359, 361, 360, 0, 362,
	551, 1048, 363, 364, 1049, 0, 365, 366, 367, 0,
	0, 368, 369, 370, 371, 0, 372, 373, 375, 377,
	374, 376, 381, 378, 379, 380, 383, 0, 382, 1050,
	384, 385, 386, 389, 390, 388, 1051, 387, 0, 0,
	1052, 391, 3031, 552, 392, 553, 394, 395, 0, 0,
	396, 0, 0, 0, 398, 399, 400, 0, 0, 401,
	402, 554, 1053, 403, 1054, 555, 404, 405, 397, 406,
	407, 408, 409, 410, 411, 412, 413, 0, 414, 415,
	556, 557, 558, 416, 559, 417, 418, 0, 419, 0,
	420, 421, 422, 423, 424, 425, 426, 560, 428, 427,
	429, 0, 0, 0, 0, 0, 0, 430, 0, 432,
	433, 434, 431, 435, 436, 437, 438, 0, 439, 440,
	441, 1055, 442, 443, 444, 445, 561, 446, 0, 447,
	448, 454, 455, 449, 450, 456, 457, 458, 459, 460,
	0, 462, 463, 461, 464, 465, 466, 0, 467, 451,
	452, 468, 469, 1056, 470, 471, 472, 473, 474, 475,
	562, 0, 476, 0, 477, 478, 479, 480, 453, 481,
	486, 563, 482, 483, 484, 485, 564, 0, 488, 489,
	0, 487, 0, 490, 491, 492, 493, 494, 495, 315,
	496, 0, 497, 565, 566, 567, 568, 0, 504, 0,
	498, 499, 569, 500, 570, 0, 501, 502, 503, 0,
	505, 506, 0, 0, 507, 508, 509, 511, 512, 510,
	513, 0, 514, 0, 0, 515, 516, 517, 571, 572,
	573, 0, 519, 518, 574, 1282, 1281, 0, 0, 520,
	521, 575, 522, 523, 524, 0, 0, 0, 0, 0,
	0, 0, 244, 245, 246, 247, 248, 249, 0, 250,
	251, 0, 0, 0, 0, 0, 525, 0, 0, 0,
	0, 252, 253, 255, 254, 256, 257, 258, 526, 527,
	0, 259, 528, 260, 529, 0, 261, 262, 263, 264,
	265, 0, 0, 0, 266, 530, 531, 532, 0, 267,
	268, 533, 0, 1248, 0, 269, 270, 271, 272, 273,
	274, 275, 0, 0, 277, 278, 279, 276, 0, 280,
	0, 281, 282, 283, 0, 284, 1041, 285, 286, 0,
	0, 0, 0, 0, 0, 3020, 287, 288, 289, 290,
	0, 291, 534, 535, 0, 295, 292, 293, 0, 296,
	294, 0, 297, 298, 299, 0, 0, 300, 301, 302,
	0, 303, 304, 0, 305, 306, 307, 0, 308, 309,
	536, 310, 311, 312, 314, 316, 313, 317, 318, 319,
	320, 537, 538, 0, 241, 0, 0, 0, 0, 0,
	321, 322, 323, 539, 0, 0, 0, 324, 0, 325,
	0, 0, 1042, 326, 327, 540, 541, 328, 329, 0,
	330, 542, 0, 543, 331, 0, 332, 333, 334, 335,
	336, 544, 545, 546, 393, 1044, 337, 338, 0, 339,
	340, 341, 342, 0, 0, 0, 0, 343, 344, 346,
	0, 1043, 345, 547, 548, 0, 549, 0, 347, 348,
	1045, 550, 1046, 349, 350, 351, 1047, 352, 0, 0,
	0, 353, 354, 355, 356, 357, 358, 0, 359, 361,
	360, 0, 362, 551, 1048, 363, 364, 1049, 0, 365,
	366, 367, 0, 0, 368, 369, 370, 371, 0, 372,
	373, 375, 377, 374, 376, 381, 378, 379, 380, 383,
	0, 382, 1050, 384, 385, 386, 389, 390, 388, 1051,
	387, 0, 0, 1052, 391, 0, 552, 392, 553, 394,
	395, 0, 0, 396, 0, 0, 0, 398, 399, 400,
	0, 0, 401, 402, 554, 1053, 403, 1054, 555, 404,
	405, 397, 406, 407, 408, 409, 410, 411, 412, 413,
	0, 414, 415, 556, 557, 558, 416, 559, 417, 418,
	0, 419, 0, 420, 421, 422, 423, 424, 425, 426,
	560, 428, 427, 429, 0, 0, 0, 0, 0, 0,
	430, 0, 432, 433, 434, 431, 435, 436, 437, 438,
	0, 439, 440, 441, 1055, 442, 443, 444, 445, 561,
	446, 0, 447, 448, 454, 455, 449, 450, 456, 457,
	458, 459, 460, 0, 462, 463, 461, 464, 465, 466,
	3021, 467, 451, 452, 468, 469, 1056, 470, 471, 472,
	473, 474, 475, 562, 0, 476, 0, 477, 478, 479,
	480, 453, 481, 486, 563, 482, 483, 484, 485, 564,
	0, 488, 489, 0, 487, 0, 490, 491, 492, 493,
	494, 495, 315, 496, 0, 497, 565, 566, 567, 568,
	0, 504, 0, 498, 499, 569, 500, 570, 0, 501,
	502, 503, 0, 505, 506, 0, 0, 507, 508, 509,
	511, 512, 510, 513, 0, 514, 0, 0, 515, 516,
	517, 571, 572, 573, 238, 519, 518, 574, 0, 0,
	0, 0, 520, 521, 575, 522, 523, 524, 0, 0,
	0, 244, 245, 246, 247, 248, 249, 0, 250, 251,
	0, 0, 0, 0, 0, 525, 0, 0, 0, 0,
	252, 253, 255, 254, 256, 257, 258, 526, 527, 0,
	259, 528, 260, 529, 0, 261, 262, 263, 264, 265,
	0, 0, 0, 266, 530, 531, 532, 0, 267, 268,
	533, 0, 0, 0, 269, 270, 271, 272, 273, 274,
	275, 0, 0, 277, 278, 279, 276, 0, 280, 0,
	281, 282, 283, 0, 284, 0, 285, 286, 0, 0,
	0, 0, 0, 0, 0, 287, 288, 289, 290, 0,
	291, 534, 535, 0, 295, 292, 293, 0, 296, 294,
	0, 297, 298, 299, 0, 0, 300, 301, 302, 0,
	303, 304, 0, 305, 306, 307, 0, 308, 309, 536,
	310, 311, 312, 314, 316, 313, 317, 318, 319, 320,
	537, 538, 0, 241, 0, 0, 0, 0, 0, 321,
	322, 323, 539, 0, 0, 0, 324, 0, 325, 0,
	0, 0, 326, 327, 540, 541, 328, 329, 0, 330,
	542, 0, 543, 331, 0, 332, 333, 334, 335, 336,
	544, 545, 546, 393, 0, 337, 338, 0, 339, 340,
	341, 342, 0, 0, 0, 242, 343, 344, 346, 0,
	0, 345, 547, 548, 0, 549, 0, 347, 348, 0,
	550, 0, 349, 350, 351, 0, 352, 0, 0, 0,
	353, 354, 355, 356, 357, 358, 0, 359, 361, 360,
	0, 362, 551, 0, 363, 364, 0, 0, 365, 366,
	367, 0, 0, 368, 369, 370, 371, 0, 372, 373,
	375, 377, 374, 376, 381, 378, 379, 380, 383, 0,
	382, 0, 384, 385, 386, 389, 390, 388, 0, 387,
	0, 243, 0, 391, 0, 552, 392, 553, 394, 395,
	0, 0, 396, 0, 0, 0, 398, 399, 400, 0,
	0, 401, 402, 554, 0, 403, 0, 555, 404, 405,
	397, 406, 407, 408, 409, 410, 411, 412, 413, 0,
	414, 415, 556, 557, 558, 416, 559, 417, 418, 0,
	419, 0, 420, 421, 422, 423, 424, 425, 426, 560,
	428, 427, 429, 0, 0, 0, 0, 0, 0, 430,
	0, 432, 433, 434, 431, 435, 436, 437, 438, 0,
	439, 440, 441, 0, 442, 443, 444, 445, 561, 446,
	0, 447, 448, 454, 455, 449, 450, 456, 457, 458,
	459, 460, 0, 462, 463, 461, 464, 465, 466, 0,
	467, 451, 452, 468, 469, 0, 470, 471, 472, 473,
	474, 475, 562, 0, 476, 0, 477, 478, 479, 480,
	453, 481, 486, 563, 482, 483, 484, 485, 564, 0,
	488, 489, 0, 487, 0, 490, 491, 492, 493, 494,
	495, 315, 496, 0, 497, 565, 566, 567, 568, 0,
	504, 0, 498, 499, 569, 500, 570, 0, 501, 502,
	503, 0, 505, 506, 0, 0, 507, 508, 509, 511,
	512, 510, 513, 0, 514, 0, 0, 515, 516, 517,
	571, 572, 573, 0, 519, 518, 574, 0, 0, 0,
	0, 520, 521, 575, 522, 523, 524, 1480, 0, 1282,
	1281, 0, 0, 0, 0, 1279, 0, 0, 0, 0,
	0, 0, 0, 668, 0, 0, 244, 245, 246, 247,
	248, 249, 0, 250, 251, 0, 0, 0, 0, 0,
	525, 0, 0, 0, 0, 252, 253, 255, 254, 256,
	257, 258, 526, 527, 0, 259, 528, 260, 529, 0,
	261, 262, 263, 264, 265, 0, 0, 0, 266, 530,
	531, 532, 0, 267, 268, 533, 0, 1248, 0, 269,
	270, 271, 272, 273, 274, 275, 0, 0, 277, 278,
	279, 276, 0, 280, 0, 281, 282, 283, 0, 284,
	1041, 285, 286, 0, 0, 0, 0, 0, 0, 0,
	287, 288, 289, 290, 0, 291, 534, 535, 0, 295,
	292, 293, 0, 296, 294, 0, 297, 298, 299, 0,
	0, 300, 301, 302, 0, 303, 304, 0, 305, 306,
	307, 0, 308, 309, 536, 310, 311, 312, 314, 316,
	313, 317, 318, 319, 320, 537, 538, 0, 241, 0,
	0, 0, 0, 0, 1479, 322, 323, 539, 0, 0,
	0, 324, 0, 325, 0, 0, 1042, 326, 327, 540,
	541, 328, 329, 0, 330, 542, 0, 543, 331, 0,
	332, 333, 334, 335, 336, 544, 545, 546, 393, 1044,
	337, 338, 0, 339, 340, 341, 342, 0, 0, 0,
	0, 343, 344, 346, 0, 1043, 345, 547, 548, 0,
	549, 0, 347, 348, 1045, 550, 1046, 349, 350, 351,
	1047, 352, 0, 0, 0, 353, 354, 355, 356, 357,
	358, 0, 359, 361, 360, 0, 362, 551, 1048, 363,
	364, 1049, 0, 365, 366, 367, 0, 0, 368, 369,
	370, 371, 0, 372, 373, 375, 377, 374, 376, 381,
	378, 379, 380, 383, 0, 382, 1050, 384, 385, 386,
	389, 390, 388, 1051, 387, 0, 0, 1052, 391, 0,
	552, 392, 553, 394, 395, 0, 0, 396, 0, 0,
	0, 398, 399, 400, 0, 0, 401, 402, 554, 1053,
	403, 1054, 555, 404, 405, 397, 406, 407, 408, 409,
	410, 411, 412, 413, 0, 414, 415, 556, 557, 558,
	416, 559, 417, 418, 0, 419, 0, 420, 421, 422,
	423, 424, 1478, 426, 560, 428, 427, 429, 0, 0,
	0, 0, 0, 0, 430, 0, 432, 433, 434, 431,
	435, 436, 437, 438, 0, 439, 440, 441, 1055, 442,
	443, 444, 445, 561, 446, 0, 447, 448, 454, 455,
	449, 450, 456, 1477, 458, 459, 460, 0, 462, 463,
	461, 464, 465, 466, 0, 467, 451, 452, 468, 469,
	1056, 470, 471, 472, 473, 474, 475, 562, 0, 476,
	0, 477, 478, 479, 480, 453, 481, 486, 563, 482,
	483, 484, 485, 564, 0, 488, 489, 0, 487, 0,
	490, 491, 492, 493, 494, 495, 315, 496, 0, 497,
	565, 566, 567, 568, 0, 504, 0, 498, 499, 569,
	500, 570, 0, 501, 502, 503, 0, 505, 506, 0,
	0, 507, 508, 509, 511, 512, 510, 513, 0, 514,
	0, 0, 515, 516, 517, 571, 572, 573, 0, 519,
	518, 574, 0, 0, 0, 0, 520, 521, 575, 522,
	523, 524, 1421, 0, 1282, 1281, 0, 0, 0, 0,
	1279, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 244, 245, 246, 247, 248, 249, 0, 250, 251,
	0, 0, 0, 0, 0, 525, 0, 0, 0, 0,
	252, 253, 255, 254, 256, 257, 258, 526, 527, 0,
	259, 528, 260, 529, 0, 261, 262, 263, 264, 265,
	0, 0, 0, 266, 530, 531, 532, 0, 267, 268,
	533, 0, 1248, 0, 269, 270, 271, 272, 273, 274,
	275, 0, 0, 277, 278, 279, 276, 0, 280, 0,
	281, 282, 283, 0, 284, 1041, 285, 286, 0, 0,
	0, 0, 0, 0, 0, 287, 288, 289, 290, 0,
	291, 534, 535, 0, 295, 292, 293, 0, 296, 294,
	0, 297, 298, 299, 0, 0, 300, 301, 302, 0,
	303, 304, 0, 305, 306, 307, 0, 308, 309, 536,
	310, 311, 312, 314, 316, 313, 317, 318, 319, 320,
	537, 538, 0, 241, 0, 0, 0, 0, 0, 321,
	322, 323, 539, 0, 0, 0, 324, 0, 325, 0,
	0, 1042, 326, 327, 540, 541, 328, 329, 0, 330,
	542, 0, 543, 331, 0, 332, 333, 334, 335, 336,
	1420, 545, 546, 393, 1044, 337, 338, 0, 339, 340,
	341, 342, 0, 0, 0, 0, 343, 344, 346, 0,
	1043, 345, 547, 548, 0, 549, 0, 347, 348, 1045,
	550, 1046, 349, 350, 351, 1047, 352, 0, 0, 0,
	353, 354, 355, 356, 357, 358, 0, 359, 361, 360,
	0, 362, 551, 1048, 363, 364, 1049, 0, 365, 366,
	367, 0, 0, 368, 369, 370, 371, 0, 372, 373,
	375, 377, 374, 376, 381, 378, 379, 380, 383, 0,
	382, 1050, 384, 385, 386, 389, 390, 388, 1051, 387,
	0, 0, 1052, 391, 0, 552, 392, 553, 394, 395,
	0, 0, 396, 0, 0, 0, 398, 399, 400, 0,
	0, 401, 402, 554, 1053, 403, 1054, 555, 404, 405,
	397, 406, 407, 408, 409, 410, 411, 412, 413, 0,
	414, 415, 556, 557, 558, 416, 559, 417, 418, 0,
	419, 0, 420, 421, 422, 423, 424, 425, 426, 560,
	428, 427, 429, 0, 0, 0, 0, 0, 0, 430,
	0, 432, 433, 434, 431, 435, 436, 437, 438, 0,
	439, 440, 441, 1055, 442, 443, 444, 445, 561, 446,
	0, 447, 448, 454, 455, 449, 450, 456, 457, 458,
	459, 460, 0, 462, 463, 461, 464, 465, 466, 0,
	467, 451, 452, 468, 469, 1056, 470, 471, 472, 473,
	474, 475, 562, 0, 476, 0, 477, 478, 479, 480,
	453, 481, 486, 563, 482, 483, 484, 485, 564, 0,
	488, 489, 0, 487, 0, 490, 491, 492, 493, 494,
	495, 315, 496, 0, 497, 565, 566, 567, 568, 0,
	504, 0, 498, 499, 569, 500, 570, 0, 501, 502,
	503, 0, 505, 506, 0, 0, 507, 508, 509, 511,
	512, 510, 513, 0, 514, 0, 0, 515, 516, 517,
	571, 572, 573, 0, 519, 518, 574, 0, 0, 0,
	0, 520, 521, 575, 522, 523, 524, 1352, 0, 1282,
	1281, 0, 0, 0, 0, 1279, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 244, 245, 246, 247,
	248, 249, 0, 250, 251, 0, 0, 0, 0, 0,
	525, 0, 0, 0, 0, 252, 253, 255, 254, 256,
	257, 258, 526, 527, 0, 259, 528, 260, 529, 0,
	261, 262, 263, 264, 265, 0, 0, 0, 266, 530,
	531, 532, 0, 267, 268, 533, 0, 1248, 0, 269,
	270, 271, 272, 273, 274, 275, 0, 0, 277, 278,
	279, 276, 0, 280, 0, 281, 282, 283, 0, 284,
	1041, 285, 286, 0, 0, 0, 0, 0, 0, 0,
	287, 288, 289, 290, 0, 291, 534, 535, 0, 295,
	292, 293, 0, 296, 294, 0, 297, 298, 299, 0,
	0, 300, 301, 302, 0, 303, 304, 0, 305, 306,
	307, 0, 308, 309, 536, 310, 311, 312, 314, 316,
	313, 317, 318, 319, 320, 537, 538, 0, 241, 0,
	0, 0, 0, 0, 321, 322, 323, 539, 0, 0,
	0, 324, 0, 325, 0, 0, 1042, 326, 327, 540,
	541, 328, 329, 0, 330, 542, 0, 543, 331, 0,
	332, 333, 334, 335, 336, 1351, 545, 546, 393, 1044,
	337, 338, 0, 339, 340, 341, 342, 0, 0, 0,
	0, 343, 344, 346, 0, 1043, 345, 547, 548, 0,
	549, 0, 347, 348, 1045, 550, 1046, 349, 350, 351,
	1047, 352, 0, 0, 0, 353, 354, 355, 356, 357,
	358, 0, 359, 361, 360, 0, 362, 551, 1048, 363,
	364, 1049, 0, 365, 366, 367, 0, 0, 368, 369,
	370, 371, 0, 372, 373, 375, 377, 374, 376, 381,
	378, 379, 380, 383, 0, 382, 1050, 384, 385, 386,
	389, 390, 388, 1051, 387, 0, 0, 1052, 391, 0,
	552, 392, 553, 394, 395, 0, 0, 396, 0, 0,
	0, 398, 399, 400, 0, 0, 401, 402, 554, 1053,
	403, 1054, 555, 404, 405, 397, 406, 407, 408, 409,
	410, 411, 412, 413, 0, 414, 415, 556, 557, 558,
	416, 559, 417, 418, 0, 419, 0, 420, 421, 422,
	423, 424, 425, 426, 560, 428, 427, 429, 0, 0,
	0, 0, 0, 0, 430, 0, 432, 433, 434, 431,
	435, 436, 437, 438, 0, 439, 440, 441, 1055, 442,
	443, 444, 445, 561, 446, 0, 447, 448, 454, 455,
	449, 450, 456, 457, 458, 459, 460, 0, 462, 463,
	461, 464, 465, 466, 0, 467, 451, 452, 468, 469,
	1056, 470, 471, 472, 473, 474, 475, 562, 0, 476,
	0, 477, 478, 479, 480, 453, 481, 486, 563, 482,
	483, 484, 485, 564, 0, 488, 489, 0, 487, 0,
	490, 491, 492, 493, 494, 495, 315, 496, 0, 497,
	565, 566, 567, 568, 0, 504, 0, 498, 499, 569,
	500, 570, 0, 501, 502, 503, 0, 505, 506, 0,
	0, 507, 508, 509, 511, 512, 510, 513, 0, 514,
	0, 0, 515, 516, 517, 571, 572, 573, 0, 519,
	518, 574, 0, 0, 0, 0, 520, 521, 575, 522,
	523, 524, 1316, 0, 1282, 1281, 0, 0, 0, 0,
	1279, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 244, 245, 246, 247, 248, 249, 0, 250, 251,
	0, 0, 0, 0, 0, 525, 0, 0, 0, 0,
	252, 253, 255, 254, 256, 257, 258, 526, 527, 0,
	259, 528, 260, 529, 0, 261, 262, 263, 264, 265,
	0, 0, 0, 266, 530, 531, 532, 0, 267, 268,
	533, 0, 1248, 0, 269, 270, 271, 272, 273, 274,
	275, 0, 0, 277, 278, 279, 276, 0, 280, 0,
	281, 282, 283, 0, 284, 1041, 285, 286, 0, 0,
	0, 0, 0, 0, 0, 287, 288, 289, 290, 0,
	291, 534, 535, 0, 295, 292, 293, 0, 296, 294,
	0, 297, 298, 299, 0, 0, 300, 301, 302, 0,
	303, 304, 0, 305, 306, 307, 0, 308, 309, 536,
	310, 311, 312, 314, 316, 313, 317, 318, 319, 320,
	537, 538, 0, 241, 0, 0, 0, 0, 0, 321,
	322, 323, 539, 0, 0, 0, 324, 0, 325, 0,
	0, 1042, 326, 327, 540, 541, 328, 329, 0, 330,
	542, 0, 543, 331, 0, 332, 333, 334, 335, 336,
	544, 545, 546, 393, 1044, 337, 338, 0, 339, 340,
	341, 342, 0, 0, 0, 0, 343, 344, 346, 0,
	1043, 345, 547, 548, 0, 549, 0, 347, 348, 1045,
	550, 1046, 349, 350, 351, 1047, 352, 0, 0, 0,
	353, 354, 355, 356, 357, 358, 0, 359, 361, 360,
	0, 362, 551, 1048, 363, 364, 1049, 0, 365, 366,
	367, 0, 0, 368, 369, 370, 371, 0, 372, 373,
	375, 377, 374, 376, 381, 378, 379, 380, 383, 0,
	382, 1050, 384, 385, 386, 389, 390, 388, 1051, 387,
	0, 0, 1052, 391, 0, 552, 392, 553, 394, 395,
	0, 0, 396, 0, 0, 0, 398, 399, 400, 0,
	0, 401, 402, 554, 1053, 403, 1054, 555, 404, 405,
	397, 406, 407, 408, 409, 410, 411, 412, 413, 0,
	414, 415, 556, 557, 558, 416, 559, 417, 418, 0,
	419, 0, 420, 421, 422, 423, 424, 425, 426, 560,
	428, 427, 429, 0, 0, 0, 0, 0, 0, 430,
	0, 432, 433, 434, 431, 435, 436, 437, 438, 0,
	439, 440, 441, 1055, 442, 443, 444, 445, 561, 446,
	0, 447, 448, 454, 455, 449, 450, 456, 457, 458,
	459, 460, 0, 462, 463, 461, 464, 465, 466, 0,
	467, 451, 452, 468, 469, 1056, 470, 471, 472, 473,
	474, 475, 562, 0, 476, 0, 477, 478, 479, 480,
	453, 481, 486, 563, 482, 483, 484, 485, 564, 0,
	488, 489, 0, 487, 0, 490, 491, 492, 493, 494,
	495, 315, 496, 0, 497, 565, 566, 567, 568, 0,
	504, 0, 498, 499, 569, 500, 570, 0, 501, 502,
	503, 0, 505, 506, 0, 0, 507, 508, 509, 511,
	512, 510, 513, 0, 514, 0, 0, 515, 516, 517,
	571, 572, 573, 0, 519, 518, 574, 0, 0, 0,
	0, 520, 521, 575, 522, 523, 524, 1277, 0, 1282,
	1281, 0, 0, 0, 0, 1279, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 244, 245, 246, 247,
	248, 249, 0, 250, 251, 0, 0, 0, 0, 0,
	525, 0, 0, 0, 0, 252, 253, 255, 254, 256,
	257, 258, 526, 527, 0, 259, 528, 260, 529, 0,
	261, 262, 263, 264, 265, 0, 0, 0, 266, 530,
	531, 532, 0, 267, 268, 533, 0, 1248, 0, 269,
	270, 271, 272, 273, 274, 275, 0, 0, 277, 278,
	279, 276, 0, 280, 0, 281, 282, 283, 0, 284,
	1041, 285, 286, 0, 0, 0, 0, 0, 0, 0,
	287, 288, 289, 290, 0, 291, 534, 535, 0, 295,
	292, 293, 0, 296, 294, 0, 297, 298, 299, 0,
	0, 300, 301, 302, 0, 303, 304, 0, 305, 306,
	307, 0, 308, 309, 536, 310, 311, 312, 314, 316,
	313, 317, 318, 319, 320, 537, 538, 0, 241, 0,
	0, 0, 0, 0, 321, 322, 323, 539, 0, 0,
	0, 324, 0, 325, 0, 0, 1042, 326, 327, 540,
	541, 328, 329, 0, 330, 542, 0, 543, 331, 0,
	332, 333, 334, 335, 336, 1276, 545, 546, 393, 1044,
	337, 338, 0, 339, 340, 341, 342, 0, 0, 0,
	0, 343, 344, 346, 0, 1043, 345, 547, 548, 0,
	549, 0, 347, 348, 1045, 550, 1046, 349, 350, 351,
	1047, 352, 0, 0, 0, 353, 354, 355, 356, 357,
	358, 0, 359, 361, 360, 0, 362, 551, 1048, 363,
	364, 1049, 0, 365, 366, 367, 0, 0, 368, 369,
	370, 371, 0, 372, 373, 375, 377, 374, 376, 381,
	378, 379, 380, 383, 0, 382, 1050, 384, 385, 386,
	389, 390, 388, 1051, 387, 0, 0, 1052, 391, 0,
	552, 392, 553, 394, 395, 0, 0, 396, 0, 0,
	0, 398, 399, 400, 0, 0, 401, 402, 554, 1053,
	403, 1054, 555, 404, 405, 397, 406, 407, 408, 409,
	410, 411, 412, 413, 0, 414, 415, 556, 557, 558,
	416, 559, 417, 418, 0, 419, 0, 420, 421, 422,
	423, 424, 425, 426, 560, 428, 427, 429, 0, 0,
	0, 0, 0, 0, 430, 0, 432, 433, 434, 431,
	435, 436, 437, 438, 0, 439, 440, 441, 1055, 442,
	443, 444, 445, 561, 446, 0, 447, 448, 454, 455,
	449, 450, 456, 457, 458, 459, 460, 0, 462, 463,
	461, 464, 465, 466, 0, 467, 451, 452, 468, 469,
	1056, 470, 471, 472, 473, 474, 475, 562, 0, 476,
	0, 477, 478, 479, 480, 453, 481, 486, 563, 482,
	483, 484, 485, 564, 0, 488, 489, 0, 487, 0,
	490, 491, 492, 493, 494, 495, 315, 496, 0, 497,
	565, 566, 567, 568, 0, 504, 0, 498, 499, 569,
	500, 570, 0, 501, 502, 503, 0, 505, 506, 0,
	0, 507, 508, 509, 511, 512, 510, 513, 0, 514,
	0, 0, 515, 516, 517, 571, 572, 573, 0, 519,
	518, 574, 0, 0, 0, 0, 520, 521, 575, 522,
	523, 524, 1282, 1281, 0, 0, 0, 0, 1279, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 244,
	245, 246, 247, 248, 249, 0, 250, 251, 0, 0,
	0, 0, 0, 525, 0, 0, 0, 0, 252, 253,
	255, 254, 256, 257, 258, 526, 527, 0, 259, 528,
	260, 529, 0, 261, 262, 263, 264, 265, 0, 0,
	0, 266, 530, 531, 532, 0, 267, 268, 533, 0,
	1248, 0, 269, 270, 271, 272, 273, 274, 275, 0,
	0, 277, 278, 279, 276, 0, 280, 0, 281, 282,
	283, 0, 284, 1041, 285, 286, 0, 0, 0, 0,
	0, 0, 0, 287, 288, 289, 290, 0, 291, 534,
	535, 0, 295, 292, 293, 0, 296, 294, 0, 297,
	298, 299, 0, 0, 300, 301, 302, 0, 303, 304,
	0, 305, 306, 307, 0, 308, 309, 536, 310, 311,
	312, 314, 316, 313, 317, 318, 319, 320, 537, 538,
	0, 241, 0, 0, 0, 0, 0, 321, 322, 323,
	539, 0, 0, 0, 324, 0, 325, 0, 0, 1042,
	326, 327, 540, 541, 328, 329, 0, 330, 542, 0,
	543, 331, 0, 332, 333, 334, 335, 336, 544, 545,
	546, 393, 1044, 337, 338, 0, 339, 340, 341, 342,
	0, 0, 0, 0, 343, 344, 346, 0, 1043, 345,
	547, 548, 0, 549, 0, 347, 348, 1045, 550, 1046,
	349, 350, 351, 1047, 352, 0, 0, 0, 353, 354,
	355, 356, 357, 358, 0, 359, 361, 360, 0, 362,
	551, 1048, 363, 364, 1049, 0, 365, 366, 367, 0,
	0, 368, 369, 370, 371, 0, 372, 373, 375, 377,
	374, 376, 381, 378, 379, 380, 383, 0, 382, 1050,
	384, 385, 386, 389, 390, 388, 1051, 387, 0, 0,
	1052, 391, 0, 552, 392, 553, 394, 395, 0, 0,
	396, 0, 0, 0, 398, 399, 400, 0, 0, 401,
	402, 554, 1053, 403, 1054, 555, 404, 405, 397, 406,
	407, 408, 409, 410, 411, 412, 413, 0, 414, 415,
	556, 557, 558, 416, 559, 417, 418, 0, 419, 0,
	420, 421, 422, 423, 424, 425, 426, 560, 428, 427,
	429, 0, 0, 0, 0, 0, 0, 430, 0, 432,
	433, 434, 431, 435, 436, 437, 438, 0, 439, 440,
	441, 1055, 442, 443, 444, 445, 561, 446, 0, 447,
	448, 454, 455, 449, 450, 456, 457, 458, 459, 460,
	0, 462, 463, 461, 464, 465, 466, 0, 467, 451,
	452, 468, 469, 1056, 470, 471, 472, 473, 474, 475,
	562, 0, 476, 0, 477, 478, 479, 480, 453, 481,
	486, 563, 482, 483, 484, 485, 564, 0, 488, 489,
	0, 487, 0, 490, 491, 492, 493, 494, 495, 315,
	496, 0, 497, 565, 566, 567, 568, 0, 504, 0,
	498, 499, 569, 500, 570, 0, 501, 502, 503, 0,
	505, 506, 0, 0, 507, 508, 509, 511, 512, 510,
	513, 0, 514, 0, 0, 515, 516, 517, 571, 572,
	573, 0, 519, 518, 574, 1282, 1281, 0, 0, 520,
	521, 575, 522, 523, 524, 0, 0, 0, 0, 0,
	0, 0, 244, 245, 246, 247, 248, 249, 0, 250,
	251, 0, 0, 0, 0, 0, 525, 0, 0, 0,
	0, 252, 253, 255, 254, 256, 257, 258, 526, 527,
	0, 259, 528, 260, 529, 0, 261, 262, 263, 264,
	265, 0, 0, 0, 266, 530, 531, 532, 0, 267,
	268, 533, 0, 1248, 0, 269, 270, 271, 272, 273,
	274, 275, 0, 0, 277, 278, 279, 276, 0, 280,
	0, 281, 282, 283, 0, 284, 1041, 285, 286, 0,
	0, 0, 0, 0, 0, 0, 287, 288, 289, 290,
	0, 291, 534, 535, 1837, 295, 292, 293, 0, 296,
	294, 0, 297, 298, 299, 0, 0, 300, 301, 302,
	0, 303, 304, 0, 305, 306, 307, 0, 308, 309,
	536, 310, 311, 312, 314, 316, 313, 317, 318, 319,
	320, 537, 538, 0, 241, 0, 0, 0, 0, 0,
	321, 322, 323, 539, 0, 0, 0, 324, 0, 325,
	0, 0, 1042, 326, 327, 540, 541, 328, 329, 0,
	330, 542, 0, 543, 331, 0, 332, 333, 334, 335,
	336, 544, 545, 546, 393, 1044, 337, 338, 0, 339,
	340, 341, 342, 0, 0, 0, 0, 343, 344, 346,
	0, 1043, 345, 547, 548, 0, 549, 0, 347, 348,
	1045, 550, 1046, 349, 350, 351, 1047, 352, 0, 0,
	0, 353, 354, 355, 356, 357, 358, 0, 359, 361,
	360, 0, 362, 551, 1048, 363, 364, 1049, 0, 365,
	366, 367, 0, 0, 368, 369, 370, 371, 0, 372,
	373, 375, 377, 374, 376, 381, 378, 379, 380, 383,
	0, 382, 1050, 384, 385, 386, 389, 390, 388, 1051,
	387, 0, 0, 1052, 391, 0, 552, 392, 553, 394,
	395, 0, 0, 396, 0, 0, 0, 398, 399, 400,
	0, 0, 401, 402, 554, 1053, 403, 1054, 555, 404,
	405, 397, 406, 407, 408, 409, 410, 411, 412, 413,
	0, 414, 415, 556, 557, 558, 416, 559, 417, 418,
	0, 419, 0, 420, 421, 422, 423, 424, 425, 426,
	560, 428, 427, 429, 0, 0, 0, 0, 0, 0,
	430, 0, 432, 433, 434, 431, 435, 436, 437, 438,
	0, 439, 440, 441, 1055, 442, 443, 444, 445, 561,
	446, 0, 447, 448, 454, 455, 449, 450, 456, 457,
	458, 459, 460, 0, 462, 463, 461, 464, 465, 466,
	0, 467, 451, 452, 468, 469, 1056, 470, 471, 472,
	473, 474, 475, 562, 0, 476, 0, 477, 478, 479,
	480, 453, 481, 486, 563, 482, 483, 484, 485, 564,
	0, 488, 489, 0, 487, 0, 490, 491, 492, 493,
	494, 495, 315, 496, 0, 497, 565, 566, 567, 568,
	0, 504, 0, 498, 499, 569, 500, 570, 0, 501,
	502, 503, 0, 505, 506, 0, 0, 507, 508, 509,
	511, 512, 510, 513, 0, 514, 0, 0, 515, 516,
	517, 571, 572, 573, 0, 519, 518, 574, 1282, 1281,
	0, 0, 520, 521, 575, 522, 523, 524, 0, 0,
	0, 0, 0, 0, 0, 244, 245, 246, 247, 248,
	249, 0, 250, 251, 0, 0, 0, 0, 0, 525,
	0, 0, 0, 0, 252, 253, 255, 254, 256, 257,
	258, 526, 527, 0, 259, 528, 260, 529, 0, 261,
	262, 263, 264, 265, 0, 0, 0, 266, 530, 531,
	532, 0, 267, 268, 533, 0, 1248, 0, 269, 270,
	271, 272, 273, 274, 275, 0, 0, 277, 278, 279,
	276, 0, 280, 0, 281, 282, 283, 0, 284, 1041,
	285, 286, 0, 0, 0, 0, 0, 0, 0, 287,
	288, 289, 290, 0, 291, 534, 535, 0, 295, 292,
	293, 0, 296, 294, 0, 297, 298, 299, 0, 0,
	300, 301, 302, 0, 303, 304, 0, 305, 306, 307,
	0, 308, 309, 536, 310, 311, 312, 314, 316, 313,
	317, 318, 319, 320, 537, 538, 0, 241, 0, 0,
	0, 0, 0, 321, 322, 323, 539, 0, 0, 0,
	324, 0, 325, 0, 0, 1042, 326, 327, 540, 541,
	328, 329, 0, 330, 542, 0, 543, 331, 0, 332,
	333, 334, 335, 336, 544, 545, 546, 393, 1044, 337,
	338, 0, 339, 340, 341, 342, 0, 0, 0, 0,
	343, 344, 346, 0, 1043, 345, 547, 548, 0, 549,
	0, 347, 348, 1045, 550, 1046, 349, 350, 351, 1047,
	352, 0, 0, 0, 353, 354, 355, 356, 357, 358,
	0, 359, 361, 360, 0, 362, 551, 1048, 363, 364,
	1049, 0, 365, 366, 367, 0, 0, 368, 369, 370,
	371, 0, 372, 373, 375, 377, 374, 376, 381, 378,
	379, 380, 383, 0, 382, 1050, 384, 385, 386, 389,
	390, 388, 1051, 387, 0, 0, 1052, 391, 0, 552,
	392, 553, 394, 395, 0, 0, 396, 0, 0, 0,
	398, 399, 400, 0, 0, 401, 402, 554, 1053, 403,
	1054, 555, 404, 405, 397, 406, 407, 408, 409, 410,
	411, 412, 413, 0, 414, 415, 556, 557, 558, 416,
	559, 417, 418, 0, 419, 0, 420, 421, 422, 423,
	424, 425, 426, 560, 428, 427, 429, 0, 0, 0,
	0, 0, 0, 430, 0, 432, 433, 434, 431, 435,
	436, 437, 438, 0, 439, 440, 441, 1055, 442, 443,
	444, 445, 561, 446, 0, 447, 448, 454, 455, 449,
	450, 456, 457, 458, 459, 460, 0, 462, 463, 461,
	464, 465, 466, 0, 467, 451, 452, 468, 469, 1056,
	470, 471, 472, 473, 474, 475, 562, 0, 476, 0,
	477, 478, 479, 480, 453, 481, 486, 563, 482, 483,
	484, 485, 564, 0, 488, 489, 0, 487, 0, 490,
	491, 492, 493, 494, 495, 315, 496, 0, 497, 565,
	566, 567, 568, 0, 504, 0, 498, 499, 569, 500,
	570, 0, 501, 502, 503, 0, 505, 506, 0, 0,
	507, 508, 509, 511, 512, 510, 513, 0, 514, 0,
	0, 515, 516, 517, 571, 572, 573, 1282, 519, 518,
	574, 0, 0, 0, 0, 520, 521, 575, 522, 523,
	524, 0, 0, 0, 244, 245, 246, 247, 248, 249,
	0, 250, 251, 0, 0, 0, 0, 0, 525, 0,
	0, 0, 0, 252, 253, 255, 254, 256, 257, 258,
	526, 527, 0, 259, 528, 260, 529, 0, 261, 262,
	263, 264, 265, 0, 0, 0, 266, 530, 531, 532,
	0, 267, 268, 533, 0, 1248, 0, 269, 270, 271,
	272, 273, 274, 275, 0, 0, 277, 278, 279, 276,
	0, 280, 0, 281, 282, 283, 0, 284, 1041, 285,
	286, 0, 0, 0, 0, 0, 0, 0, 287, 288,
	289, 290, 0, 291, 534, 535, 0, 295, 292, 293,
	0, 296, 294, 0, 297, 298, 299, 0, 0, 300,
	301, 302, 0, 303, 304, 0, 305, 306, 307, 0,
	308, 309, 536, 310, 311, 312, 314, 316, 313, 317,
	318, 319, 320, 537, 538, 0, 241, 0, 0, 0,
	0, 0, 321, 322, 323, 539, 0, 0, 0, 324,
	0, 325, 0, 0, 1042, 326, 327, 540, 541, 328,
	329, 0, 330, 542, 0, 543, 331, 0, 332, 333,
	334, 335, 336, 544, 545, 546, 393, 1044, 337, 338,
	0, 339, 340, 341, 342, 0, 0, 0, 0, 343,
	344, 346, 0, 1043, 345, 547, 548, 0, 549, 0,
	347, 348, 1045, 550, 1046, 349, 350, 351, 1047, 352,
	0, 0, 0, 353, 354, 355, 356, 357, 358, 0,
	359, 361, 360, 0, 362, 551, 1048, 363, 364, 1049,
	0, 365, 366, 367, 0, 0, 368, 369, 370, 371,
	0, 372, 373, 375, 377, 374, 376, 381, 378, 379,
	380, 383, 0, 382, 1050, 384, 385, 386, 389, 390,
	388, 1051, 387, 0, 0, 1052, 391, 0, 552, 392,
	553, 394, 395, 0, 0, 396, 0, 0, 0, 398,
	399, 400, 0, 0, 401, 402, 554, 1053, 403, 1054,
	555, 404, 405, 397, 406, 407, 408, 409, 410, 411,
	412, 413, 0, 414, 415, 556, 557, 558, 416, 559,
	417, 418, 0, 419, 0, 420, 421, 422, 423, 424,
	425, 426, 560, 428, 427, 429, 0, 0, 0, 0,
	0, 0, 430, 0, 432, 433, 434, 431, 435, 436,
	437, 438, 0, 439, 440, 441, 1055, 442, 443, 444,
	445, 561, 446, 0, 447, 448, 454, 455, 449, 450,
	456, 457, 458, 459, 460, 0, 462, 463, 461, 464,
	465, 466, 0, 467, 451, 452, 468, 469, 1056, 470,
	471, 472, 473, 474, 475, 562, 0, 476, 0, 477,
	478, 479, 480, 453, 481, 486, 563, 482, 483, 484,
	485, 564, 0, 488, 489, 0, 487, 0, 490, 491,
	492, 493, 494, 495, 315, 496, 0, 497, 565, 566,
	567, 568, 0, 504, 0, 498, 499, 569, 500, 570,
	0, 501, 502, 503, 0, 505, 506, 0, 0, 507,
	508, 509, 511, 512, 510, 513, 0, 514, 0, 0,
	515, 516, 517, 571, 572, 573, 238, 519, 518, 574,
	0, 0, 0, 0, 520, 521, 575, 522, 523, 524,
	0, 0, 0, 244, 245, 246, 247, 248, 249, 0,
	250, 251, 0, 0, 0, 0, 0, 525, 0, 0,
	0, 0, 252, 253, 255, 254, 256, 257, 258, 526,
	527, 0, 259, 528, 260, 529, 0, 261, 262, 263,
	264, 265, 0, 0, 0, 266, 530, 531, 532, 2466,
	267, 268, 533, 0, 0, 0, 269, 270, 271, 272,
	273, 274, 275, 0, 0, 277, 278, 279, 276, 2463,
	280, 0, 281, 282, 283, 0, 284, 0, 285, 286,
	0, 0, 0, 0, 0, 0, 0, 287, 288, 289,
	290, 0, 291, 534, 535, 0, 295, 292, 293, 0,
	296, 294, 0, 297, 298, 299, 0, 0, 300, 301,
	302, 0, 303, 304, 0, 305, 306, 307, 0, 2470,
	309, 536, 310, 311, 312, 314, 316, 313, 317, 318,
	319, 320, 537, 538, 0, 2647, 0, 0, 0, 0,
	0, 321, 322, 323, 539, 0, 0, 0, 324, 0,
	325, 2469, 0, 0, 326, 327, 540, 541, 328, 329,
	0, 330, 542, 0, 543, 331, 0, 332, 333, 334,
	335, 336, 544, 545, 546, 393, 0, 337, 338, 0,
	339, 340, 341, 342, 0, 0, 0, 2644, 343, 344,
	346, 0, 0, 345, 547, 548, 0, 549, 0, 347,
	2646, 0, 550, 0, 349, 350, 351, 0, 352, 0,
	0, 0, 353, 354, 355, 356, 357, 358, 0, 359,
	361, 360, 0, 362, 551, 0, 363, 364, 2643, 0,
	365, 366, 367, 0, 0, 368, 369, 370, 371, 0,
	372, 373, 375, 377, 374, 376, 381, 378, 379, 380,
	383, 0, 382, 0, 384, 385, 386, 389, 390, 388,
	0, 387, 0, 0, 0, 391, 0, 552, 392, 553,
	394, 395, 0, 0, 396, 0, 0, 0, 398, 399,
	400, 0, 0, 401, 402, 554, 0, 403, 0, 555,
	404, 405, 397, 406, 407, 408, 409, 410, 411, 412,
	413, 0, 414, 415, 556, 557, 558, 416, 559, 417,
	418, 2468, 419, 0, 420, 421, 422, 423, 424, 425,
	426, 560, 428, 427, 429, 0, 0, 0, 0, 0,
	0, 430, 0, 432, 433, 434, 431, 435, 436, 437,
	438, 0, 439, 440, 441, 0, 442, 443, 444, 445,
	561, 446, 0, 447, 448, 454, 455, 449, 450, 456,
	457, 458, 459, 460, 0, 462, 463, 461, 464, 465,
	466, 0, 467, 451, 452, 468, 469, 0, 470, 471,
	472, 473, 474, 475, 562, 0, 476, 0, 477, 478,
	479, 480, 453, 481, 486, 563, 482, 483, 484, 485,
	564, 0, 488, 489, 0, 487, 0, 490, 491, 492,
	493, 494, 495, 315, 496, 0, 497, 565, 566, 567,
	568, 0, 504, 0, 498, 499, 569, 500, 570, 0,
	501, 502, 503, 0, 505, 506, 0, 2645, 507, 508,
	509, 511, 512, 510, 513, 0, 514, 0, 0, 515,
	516, 517, 571, 572, 573, 238, 519, 518, 574, 0,
	0, 0, 0, 520, 521, 575, 522, 523, 524, 0,
	0, 0, 244, 245, 246, 247, 248, 249, 0, 250,
	251, 0, 0, 0, 0, 0, 525, 0, 0, 0,
	0, 252, 253, 255, 254, 256, 257, 258, 526, 527,
	0, 259, 528, 260, 529, 0, 261, 262, 263, 264,
	265, 0, 0, 0, 266, 530, 531, 532, 2466, 267,
	268, 533, 0, 0, 2460, 269, 270, 271, 272, 273,
	274, 275, 0, 0, 277, 278, 279, 276, 2463, 280,
	0, 281, 282, 283, 0, 284, 0, 285, 286, 0,
	0, 0, 0, 0, 0, 0, 287, 288, 289, 290,
	0, 291, 534, 535, 0, 295, 292, 293, 0, 296,
	294, 0, 297, 298, 299, 0, 0, 300, 301, 302,
	0, 303, 304, 0, 305, 306, 307, 0, 2470, 309,
	536, 310, 311, 312, 314, 316, 313, 317, 318, 319,
	320, 537, 538, 0, 0, 0, 0, 0, 0, 0,
	321, 322, 323, 539, 0, 0, 0, 324, 0, 325,
	2469, 0, 0, 326, 327, 540, 541, 328, 329, 0,
	330, 542, 0, 543, 331, 0, 332, 333, 334, 335,
	336, 2459, 545, 546, 393, 0, 337, 338, 0, 339,
	340, 341, 342, 0, 0, 0, 0, 343, 344, 346,
	0, 0, 345, 547, 548, 0, 549, 0, 347, 348,
	0, 550, 0, 349, 350, 351, 0, 352, 0, 0,
	0, 353, 354, 355, 356, 357, 358, 0, 359, 361,
	360, 0, 362, 551, 0, 363, 364, 0, 0, 365,
	366, 367, 0, 0, 368, 369, 370, 371, 0, 372,
	373, 375, 377, 374, 376, 381, 378, 379, 380, 383,
	0, 382, 0, 384, 385, 386, 389, 390, 388, 0,
	387, 0, 0, 0, 391, 0, 552, 392, 553, 394,
	395, 0, 0, 396, 0, 0, 0, 398, 399, 400,
	0, 0, 401, 402, 554, 0, 403, 0, 555, 404,
	405, 397, 406, 407, 408, 409, 410, 411, 412, 413,
	0, 414, 415, 556, 557, 558, 416, 559, 417, 418,
	2468, 419, 0, 420, 421, 422, 423, 424, 425, 426,
	560, 428, 427, 429, 0, 0, 0, 0, 0, 0,
	430, 0, 432, 433, 434, 431, 435, 436, 437, 438,
	0, 439, 440, 441, 0, 442, 443, 444, 445, 561,
	446, 0, 447, 448, 454, 455, 449, 450, 456, 457,
	458, 459, 460, 0, 462, 463, 461, 464, 465, 466,
	0, 467, 451, 452, 468, 469, 0, 470, 471, 472,
	473, 474, 475, 562, 0, 476, 0, 477, 478, 479,
	480, 453, 481, 486, 563, 482, 483, 484, 485, 564,
	0, 488, 489, 0, 487, 0, 490, 491, 492, 493,
	494, 495, 315, 496, 0, 497, 565, 566, 567, 568,
	0, 504, 0, 498, 499, 569, 500, 570, 0, 501,
	502, 503, 0, 505, 506, 0, 2467, 507, 508, 509,
	511, 512, 510, 513, 0, 514, 0, 0, 515, 516,
	517, 571, 572, 573, 0, 519, 518, 574, 1545, 0,
	238, 0, 520, 521, 575, 522, 523, 524, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 244, 245, 246,
	247, 248, 249, 0, 250, 251, 0, 0, 0, 0,
	0, 525, 0, 0, 0, 0, 252, 253, 255, 254,
	256, 257, 258, 526, 527, 0, 259, 528, 260, 529,
	0, 261, 262, 263, 264, 265, 0, 0, 0, 266,
	530, 531, 532, 0, 267, 268, 533, 0, 0, 0,
	269, 270, 271, 272, 273, 274, 275, 0, 0, 277,
	278, 279, 276, 0, 280, 0, 281, 282, 283, 0,
	284, 0, 285, 286, 0, 0, 0, 0, 0, 0,
	0, 287, 288, 289, 290, 0, 291, 534, 535, 0,
	295, 292, 293, 0, 296, 294, 0, 297, 298, 299,
	0, 0, 300, 301, 302, 0, 303, 304, 0, 305,
	306, 307, 0, 308, 309, 536, 310, 311, 312, 314,
	316, 313, 317, 318, 319, 320, 537, 538, 0, 241,
	0, 0, 0, 0, 0, 321, 322, 323, 539, 0,
	0, 0, 324, 0, 325, 0, 0, 0, 326, 327,
	540, 541, 328, 329, 0, 330, 542, 0, 543, 331,
	0, 332, 333, 334, 335, 336, 544, 545, 546, 393,
	0, 337, 338, 0, 339, 340, 341, 342, 0, 0,
	0, 242, 343, 344, 346, 0, 0, 345, 547, 548,
	0, 549, 0, 347, 348, 0, 550, 0, 349, 350,
	351, 0, 352, 0, 0, 0, 353, 354, 355, 356,
	357, 358, 0, 359, 361, 360, 0, 362, 551, 0,
	363, 364, 0, 0, 365, 366, 367, 0, 0, 368,
	369, 370, 371, 0, 372, 373, 375, 377, 374, 376,
	381, 378, 379, 380, 383, 0, 382, 0, 384, 385,
	386, 389, 390, 388, 0, 387, 0, 243, 0, 391,
	0, 552, 392, 553, 394, 395, 0, 0, 396, 0,
	0, 0, 398, 399, 400, 0, 0, 401, 402, 554,
	0, 403, 0, 555, 404, 405, 397, 406, 407, 408,
	409, 410, 411, 412, 413, 0, 414, 415, 556, 557,
	558, 416, 559, 417, 418, 0, 419, 0, 420, 421,
	422, 423, 424, 425, 426, 560, 428, 427, 429, 0,
	0, 0, 0, 0, 0, 430, 0, 432, 433, 434,
	431, 435, 436, 437, 438, 0, 439, 440, 441, 0,
	442, 443, 444, 445, 561, 446, 0, 447, 448, 454,
	455, 449, 450, 456, 457, 458, 459, 460, 0, 1548,
	463, 461, 464, 465, 466, 0, 467, 451, 452, 468,
	469, 0, 470, 471, 472, 473, 474, 475, 562, 0,
	476, 0, 477, 478, 479, 480, 453, 481, 486, 563,
	482, 483, 484, 485, 564, 0, 488, 489, 0, 487,
	1546, 490, 491, 492, 493, 494, 495, 315, 496, 0,
	497, 565, 566, 567, 568, 0, 504, 0, 498, 499,
	569, 500, 570, 0, 501, 502, 503, 0, 505, 506,
	0, 0, 507, 508, 509, 511, 512, 510, 513, 0,
	514, 0, 0, 515, 516, 517, 571, 572, 573, 0,
	1547, 518, 574, 1252, 0, 238, 0, 520, 521, 575,
	522, 523, 524, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 244, 245, 246, 247, 248, 249, 0, 250,
	251, 0, 0, 0, 0, 0, 525, 0, 0, 0,
	0, 252, 253, 255, 254, 256, 257, 258, 526, 527,
	0, 259, 528, 260, 529, 0, 261, 262, 263, 264,
	265, 0, 0, 0, 266, 530, 531, 532, 0, 267,
	268, 533, 0, 0, 0, 269, 270, 271, 272, 273,
	274, 275, 0, 0, 277, 278, 279, 276, 0, 280,
	0, 281, 282, 283, 0, 284, 0, 285, 286, 0,
	0, 0, 0, 0, 0, 0, 287, 288, 289, 290,
	0, 291, 534, 535, 0, 295, 292, 293, 0, 296,
	294, 0, 297, 298, 299, 0, 0, 300, 301, 302,
	0, 303, 304, 0, 305, 306, 307, 0, 308, 309,
	536, 310, 311, 312, 314, 316, 313, 317, 318, 319,
	320, 537, 538, 0, 241, 0, 0, 0, 0, 0,
	321, 322, 323, 539, 0, 0, 0, 324, 0, 325,
	0, 0, 0, 326, 327, 540, 541, 328, 329, 0,
	330, 542, 0, 543, 331, 0, 332, 333, 334, 335,
	336, 1254, 545, 546, 393, 0, 337, 338, 0, 339,
	340, 341, 342, 0, 0, 0, 242, 343, 344, 346,
	0, 0, 345, 547, 548, 0, 549, 0, 347, 348,
	0, 550, 0, 349, 350, 351, 0, 352, 0, 0,
	0, 353, 354, 355, 356, 357, 358, 0, 359, 361,
	360, 0, 362, 551, 0, 363, 364, 0, 0, 365,
	366, 367, 0, 0, 368, 369, 370, 371, 0, 372,
	373, 375, 377, 374, 376, 381, 378, 379, 380, 383,
	0, 382, 0, 384, 385, 386, 389, 390, 388, 0,
	387, 0, 243, 0, 391, 0, 552, 392, 553, 394,
	395, 0, 0, 396, 0, 0, 1090, 398, 399, 400,
	0, 0, 401, 402, 554, 0, 403, 0, 555, 404,
	405, 397, 406, 407, 408, 409, 410, 411, 412, 413,
	0, 414, 415, 556, 557, 558, 416, 559, 417, 418,
	0, 419, 0, 420, 421, 422, 423, 424, 425, 426,
	560, 428, 427, 429, 0, 0, 0, 0, 0, 0,
	430, 0, 432, 433, 434, 431, 435, 436, 437, 438,
	0, 439, 440, 441, 0, 442, 443, 444, 445, 561,
	446, 0, 447, 448, 454, 455, 449, 450, 456, 457,
	458, 459, 460, 0, 462, 463, 461, 464, 465, 466,
	0, 467, 451, 452, 468, 469, 0, 470, 471, 472,
	473, 474, 475, 562, 0, 476, 0, 477, 478, 479,
	480, 453, 481, 486, 563, 482, 483, 484, 485, 564,
	0, 488, 489, 0, 487, 0, 490, 491, 492, 493,
	494, 495, 315, 496, 0, 497, 565, 566, 567, 568,
	0, 504, 0, 498, 499, 569, 500, 570, 0, 501,
	502, 503, 0, 505, 506, 0, 0, 507, 508, 509,
	511, 512, 510, 513, 0, 514, 0, 0, 515, 516,
	517, 571, 572, 573, 0, 519, 518, 574, 1249, 0,
	238, 0, 520, 521, 575, 522, 523, 524, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 244, 245, 246,
	247, 248, 249, 0, 250, 251, 0, 0, 0, 0,
	0, 525, 0, 0, 0, 0, 252, 253, 255, 254,
	256, 257, 258, 526, 527, 0, 259, 528, 260, 529,
	0, 261, 262, 263, 264, 265, 0, 0, 0, 266,
	530, 531, 532, 0, 267, 268, 533, 0, 0, 0,
	269, 270, 271, 272, 273, 274, 275, 0, 0, 277,
	278, 279, 276, 0, 280, 0, 281, 282, 283, 0,
	284, 0, 285, 286, 0, 0, 0, 0, 0, 0,
	0, 287, 288, 289, 290, 0, 291, 534, 535, 0,
	295, 292, 293, 0, 296, 294, 0, 297, 298, 299,
	0, 0, 300, 301, 302, 0, 303, 304, 0, 305,
	306, 307, 0, 308, 309, 536, 310, 311, 312, 314,
	316, 313, 317, 318, 319, 320, 537, 538, 0, 241,
	0, 0, 0, 0, 0, 321, 322, 323, 539, 0,
	0, 0, 324, 0, 325, 0, 0, 0, 326, 327,
	540, 541, 328, 329, 0, 330, 542, 0, 543, 331,
	0, 332, 333, 334, 335, 336, 1251, 545, 546, 393,
	0, 337, 338, 0, 339, 340, 341, 342, 0, 0,
	0, 242, 343, 344, 346, 0, 0, 345, 547, 548,
	0, 549, 0, 347, 348, 0, 550, 0, 349, 350,
	351, 0, 352, 0, 0, 0, 353, 354, 355, 356,
	357, 358, 0, 359, 361, 360, 0, 362, 551, 0,
	363, 364, 0, 0, 365, 366, 367, 0, 0, 368,
	369, 370, 371, 0, 372, 373, 375, 377, 374, 376,
	381, 378, 379, 380, 383, 0, 382, 0, 384, 385,
	386, 389, 390, 388, 0, 387, 0, 243, 0, 391,
	0, 552, 392, 553, 394, 395, 0, 0, 396, 0,
	0, 1090, 398, 399, 400, 0, 0, 401, 402, 554,
	0, 403, 0, 555, 404, 405, 397, 406, 407, 408,
	409, 410, 411, 412, 413, 0, 414, 415, 556, 557,
	558, 416, 559, 417, 418, 0, 419, 0, 420, 421,
	422, 423, 424, 425, 426, 560, 428, 427, 429, 0,
	0, 0, 0, 0, 0, 430, 0, 432, 433, 434,
	431, 435, 436, 437, 438, 0, 439, 440, 441, 0,
	442, 443, 444, 445, 561, 446, 0, 447, 448, 454,
	455, 449, 450, 456, 457, 458, 459, 460, 0, 462,
	463, 461, 464, 465, 466, 0, 467, 451, 452, 468,
	469, 0, 470, 471, 472, 473, 474, 475, 562, 0,
	476, 0, 477, 478, 479, 480, 453, 481, 486, 563,
	482, 483, 484, 485, 564, 0, 488, 489, 0, 487,
	0, 490, 491, 492, 493, 494, 495, 315, 496, 0,
	497, 565, 566, 567, 568, 0, 504, 0, 498, 499,
	569, 500, 570, 0, 501, 502, 503, 0, 505, 506,
	0, 0, 507, 508, 509, 511, 512, 510, 513, 0,
	514, 0, 0, 515, 516, 517, 571, 572, 573, 0,
	519, 518, 574, 1155, 0, 238, 0, 520, 521, 575,
	522, 523, 524, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 244, 245, 246, 247, 248, 249, 0, 250,
	251, 0, 0, 0, 0, 0, 525, 0, 0, 0,
	0, 252, 253, 255, 254, 256, 257, 258, 526, 527,
	0, 259, 528, 260, 529, 0, 261, 262, 263, 264,
	265, 0, 0, 0, 266, 530, 531, 532, 0, 267,
	268, 533, 0, 0, 0, 269, 270, 271, 272, 273,
	274, 275, 0, 0, 277, 278, 279, 276, 0, 280,
	0, 281, 282, 283, 0, 284, 0, 285, 286, 0,
	0, 0, 0, 0, 0, 0, 287, 288, 289, 290,
	0, 291, 534, 535, 0, 295, 292, 293, 0, 296,
	294, 0, 297, 298, 299, 0, 0, 300, 301, 302,
	0, 303, 304, 0, 305, 306, 307, 0, 308, 309,
	536, 310, 311, 312, 314, 316, 313, 317, 318, 319,
	320, 537, 538, 0, 241, 0, 0, 0, 0, 0,
	321, 322, 323, 539, 0, 0, 0, 324, 0, 325,
	0, 0, 0, 326, 327, 540, 541, 328, 329, 0,
	330, 542, 0, 543, 331, 0, 332, 333, 334, 335,
	336, 1157, 545, 546, 393, 0, 337, 338, 0, 339,
	340, 341, 342, 0, 0, 0, 242, 343, 344, 346,
	0, 0, 345, 547, 548, 0, 549, 0, 347, 348,
	0, 550, 0, 349, 350, 351, 0, 352, 0, 0,
	0, 353, 354, 355, 356, 357, 358, 0, 359, 361,
	360, 0, 362, 551, 0, 363, 364, 0, 0, 365,
	366, 367, 0, 0, 368, 369, 370, 371, 0, 372,
	373, 375, 377, 374, 376, 381, 378, 379, 380, 383,
	0, 382, 0, 384, 385, 386, 389, 390, 388, 0,
	387, 0, 243, 0, 391, 0, 552, 392, 553, 394,
	395, 0, 0, 396, 0, 0, 1090, 398, 399, 400,
	0, 0, 401, 402, 554, 0, 403, 0, 555, 404,
	405, 397, 406, 407, 408, 409, 410, 411, 412, 413,
	0, 414, 415, 556, 557, 558, 416, 559, 417, 418,
	0, 419, 0, 420, 421, 422, 423, 424, 425, 426,
	560, 428, 427, 429, 0, 0, 0, 0, 0, 0,
	430, 0, 432, 433, 434, 431, 435, 436, 437, 438,
	0, 439, 440, 441, 0, 442, 443, 444, 445, 561,
	446, 0, 447, 448, 454, 455, 449, 450, 456, 457,
	458, 459, 460, 0, 462, 463, 461, 464, 465, 466,
	0, 467, 451, 452, 468, 469, 0, 470, 471, 472,
	473, 474, 475, 562, 0, 476, 0, 477, 478, 479,
	480, 453, 481, 486, 563, 482, 483, 484, 485, 564,
	0, 488, 489, 0, 487, 0, 490, 491, 492, 493,
	494, 495, 315, 496, 0, 497, 565, 566, 567, 568,
	0, 504, 0, 498, 499, 569, 500, 570, 0, 501,
	502, 503, 0, 505, 506, 0, 0, 507, 508, 509,
	511, 512, 510, 513, 0, 514, 0, 0, 515, 516,
	517, 571, 572, 573, 0, 519, 518, 574, 607, 0,
	238, 0, 520, 521, 575, 522, 523, 524, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 244, 245, 246,
	606, 248, 249, 596, 250, 251, 0, 0, 0, 0,
	0, 525, 0, 0, 0, 0, 252, 253, 255, 254,
	256, 257, 258, 526, 527, 0, 259, 528, 260, 529,
	0, 261, 262, 263, 264, 265, 0, 0, 0, 266,
	530, 531, 532, 0, 267, 268, 533, 0, 0, 0,
	269, 270, 271, 272, 273, 274, 275, 0, 0, 277,
	278, 279, 276, 0, 280, 0, 281, 282, 283, 599,
	284, 0, 285, 286, 0, 0, 0, 0, 0, 0,
	0, 287, 288, 289, 290, 0, 291, 534, 535, 0,
	295, 292, 293, 0, 296, 294, 0, 297, 298, 299,
	0, 0, 300, 301, 302, 0, 303, 304, 0, 305,
	306, 307, 0, 308, 309, 536, 310, 311, 312, 314,
	316, 313, 317, 318, 319, 320, 537, 538, 0, 0,
	0, 0, 0, 0, 0, 321, 322, 323, 539, 0,
	0, 0, 324, 0, 325, 0, 0, 0, 326, 327,
	540, 541, 328, 329, 600, 330, 542, 0, 543, 331,
	0, 332, 333, 334, 335, 336, 544, 545, 546, 393,
	0, 337, 338, 0, 339, 340, 341, 342, 0, 0,
	0, 0, 343, 344, 346, 0, 0, 345, 547, 548,
	0, 549, 0, 347, 348, 0, 550, 0, 349, 350,
	351, 0, 352, 0, 0, 0, 353, 354, 355, 356,
	357, 358, 0, 359, 361, 360, 0, 362, 551, 0,
	363, 364, 0, 0, 365, 366, 367, 0, 0, 368,
	369, 370, 371, 0, 372, 373, 375, 377, 374, 376,
	381, 378, 379, 380, 383, 0, 382, 0, 384, 385,
	386, 389, 390, 388, 0, 387, 0, 0, 0, 391,
	0, 552, 392, 553, 394, 395, 0, 0, 396, 0,
	0, 0, 398, 399, 400, 0, 0, 401, 402, 554,
	0, 403, 0, 555, 404, 405, 397, 406, 407, 408,
	409, 410, 411, 412, 413, 0, 414, 415, 556, 557,
	558, 416, 559, 417, 418, 0, 419, 0, 420, 421,
	422, 423, 424, 425, 426, 560, 428, 427, 429, 0,
	0, 0, 0, 0, 0, 430, 0, 432, 433, 434,
	431, 435, 436, 437, 438, 0, 439, 440, 441, 0,
	442, 443, 444, 445, 561, 446, 0, 447, 448, 454,
	455, 449, 450, 456, 457, 458, 459, 460, 601, 462,
	463, 461, 464, 465, 466, 0, 467, 451, 452, 468,
	469, 0, 470, 471, 472, 473, 474, 475, 562, 0,
	476, 0, 477, 478, 479, 480, 453, 481, 486, 563,
	482, 483, 484, 485, 564, 0, 488, 489, 0, 487,
	0, 490, 491, 492, 493, 494, 495, 315, 496, 0,
	497, 565, 566, 567, 568, 0, 504, 0, 498, 499,
	569, 500, 570, 0, 501, 502, 503, 0, 505, 506,
	0, 0, 507, 508, 509, 511, 512, 510, 513, 0,
	514, 0, 0, 515, 516, 517, 571, 572, 573, 0,
	519, 518, 574, 595, 0, 238, 0, 520, 521, 575,
	522, 523, 524, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 244, 245, 246, 247, 248, 249, 596, 250,
	251, 0, 0, 0, 0, 0, 525, 0, 0, 0,
	0, 252, 253, 255, 254, 256, 257, 258, 526, 527,
	0, 259, 528, 260, 529, 0, 261, 262, 263, 264,
	265, 0, 0, 0, 266, 530, 531, 532, 0, 267,
	268, 533, 0, 0, 0, 269, 270, 271, 272, 273,
	274, 275, 0, 0, 277, 278, 279, 276, 0, 280,
	0, 281, 282, 283, 599, 284, 0, 285, 286, 0,
	0, 0, 0, 0, 0, 0, 287, 288, 289, 290,
	0, 291, 534, 535, 0, 295, 292, 293, 0, 296,
	294, 0, 297, 298, 299, 0, 0, 300, 301, 302,
	0, 303, 304, 0, 305, 306, 307, 0, 308, 309,
	536, 310, 311, 312, 314, 316, 313, 317, 318, 319,
	320, 537, 538, 0, 0, 0, 0, 0, 0, 0,
	321, 322, 323, 539, 0, 0, 0, 324, 0, 325,
	0, 0, 0, 326, 327, 540, 541, 328, 329, 600,
	330, 542, 0, 543, 331, 0, 332, 333, 334, 335,
	336, 544, 545, 546, 393, 0, 337, 338, 0, 339,
	340, 341, 342, 0, 0, 0, 0, 343, 344, 346,
	0, 0, 345, 547, 548, 0, 549, 0, 347, 348,
	0, 550, 0, 349, 350, 351, 0, 352, 0, 0,
	0, 353, 354, 355, 356, 357, 358, 0, 359, 361,
	360, 0, 362, 551, 0, 363, 364, 0, 0, 365,
	366, 367, 0, 0, 368, 369, 370, 371, 0, 372,
	373, 375, 377, 374, 376, 381, 378, 379, 380, 383,
	0, 382, 0, 384, 385, 386, 389, 390, 388, 0,
	387, 0, 0, 0, 391, 0, 552, 392, 553, 394,
	395, 0, 0, 396, 0, 0, 0, 398, 399, 400,
	0, 0, 401, 402, 554, 0, 403, 0, 555, 404,
	405, 397, 406, 407, 408, 409, 410, 411, 412, 413,
	0, 414, 415, 556, 557, 558, 416, 559, 417, 418,
	0, 419, 0, 420, 421, 422, 423, 424, 425, 426,
	560, 428, 427, 429, 0, 0, 0, 0, 0, 0,
	430, 0, 432, 433, 434, 431, 435, 436, 437, 438,
	0, 439, 440, 441, 0, 442, 443, 444, 445, 561,
	446, 0, 447, 448, 454, 455, 449, 450, 456, 457,
	458, 459, 460, 601, 462, 463, 461, 464, 465, 466,
	0, 467, 451, 452, 468, 469, 0, 470, 471, 472,
	473, 474, 475, 562, 0, 476, 0, 477, 478, 479,
	480, 453, 481, 486, 563, 482, 483, 484, 485, 564,
	0, 488, 489, 0, 487, 0, 490, 491, 492, 493,
	494, 495, 315, 496, 0, 497, 565, 566, 567, 568,
	0, 504, 0, 498, 499, 569, 500, 570, 0, 501,
	502, 503, 0, 505, 506, 0, 0, 507, 508, 509,
	511, 512, 510, 513, 0, 514, 0, 0, 515, 516,
	517, 571, 572, 573, 238, 519, 518, 574, 0, 0,
	0, 0, 520, 521, 575, 522, 523, 524, 0, 0,
	0, 244, 245, 246, 247, 248, 249, 0, 250, 251,
	0, 0, 0, 0, 0, 525, 0, 0, 0, 0,
	252, 253, 255, 254, 256, 257, 258, 526, 527, 0,
	259, 528, 260, 529, 0, 261, 262, 263, 264, 265,
	0, 0, 0, 266, 530, 531, 532, 0, 267, 268,
	533, 0, 0, 0, 269, 270, 271, 272, 273, 274,
	275, 0, 0, 277, 278, 279, 276, 0, 280, 0,
	281, 282, 283, 0, 284, 0, 285, 286, 0, 0,
	0, 0, 0, 0, 0, 287, 288, 289, 290, 0,
	291, 534, 535, 0, 295, 292, 293, 0, 296, 294,
	0, 297, 298, 299, 0, 0, 300, 301, 302, 0,
	303, 304, 0, 305, 306, 307, 0, 308, 309, 536,
	310, 311, 312, 314, 316, 313, 317, 318, 319, 320,
	537, 538, 0, 241, 0, 0, 0, 0, 0, 321,
	322, 323, 539, 0, 0, 0, 324, 0, 325, 0,
	0, 0, 326, 327, 540, 541, 328, 329, 0, 330,
	542, 0, 543, 331, 0, 332, 333, 334, 335, 336,
	544, 545, 546, 393, 0, 337, 338, 0, 339, 340,
	341, 342, 0, 0, 0, 242, 343, 344, 346, 0,
	0, 345, 547, 548, 0, 549, 0, 347, 348, 0,
	550, 0, 349, 350, 351, 0, 352, 0, 0, 0,
	353, 354, 355, 356, 357, 358, 0, 359, 361, 360,
	0, 362, 551, 0, 363, 364, 0, 0, 365, 366,
	367, 0, 0, 368, 369, 370, 371, 0, 372, 373,
	375, 377, 374, 376, 381, 378, 379, 380, 383, 0,
	382, 0, 384, 385, 386, 389, 390, 388, 2993, 387,
	0, 243, 0, 391, 0, 552, 392, 553, 394, 395,
	0, 0, 396, 0, 0, 0, 398, 399, 400, 0,
	0, 401, 402, 554, 0, 403, 0, 555, 404, 405,
	397, 406, 407, 408, 409, 410, 411, 412, 413, 0,
	414, 415, 556, 557, 558, 416, 559, 417, 418, 0,
	419, 0, 420, 421, 422, 423, 424, 425, 426, 560,
	428, 427, 429, 0, 0, 0, 0, 0, 0, 430,
	0, 432, 433, 434, 431, 435, 436, 437, 438, 0,
	439, 440, 441, 0, 442, 443, 444, 445, 561, 446,
	0, 447, 448, 454, 455, 449, 450, 456, 457, 458,
	459, 460, 0, 462, 463, 461, 464, 465, 466, 0,
	467, 451, 452, 468, 469, 0, 470, 471, 472, 473,
	474, 475, 562, 0, 476, 0, 477, 478, 479, 480,
	453, 481, 486, 563, 482, 483, 484, 485, 564, 0,
	488, 489, 0, 487, 0, 490, 491, 492, 493, 494,
	495, 315, 496, 0, 497, 565, 566, 567, 568, 0,
	504, 0, 498, 499, 569, 500, 570, 0, 501, 502,
	503, 0, 505, 506, 0, 0, 507, 508, 509, 511,
	512, 510, 513, 0, 514, 0, 0, 515, 516, 517,
	571, 572, 573, 238, 519, 518, 574, 0, 0, 0,
	0, 520, 521, 575, 522, 523, 524, 0, 0, 0,
	244, 245, 246, 247, 248, 249, 0, 250, 251, 0,
	0, 0, 0, 0, 525, 0, 0, 0, 0, 252,
	253, 255, 254, 256, 257, 258, 526, 527, 0, 259,
	528, 260, 529, 0, 261, 262, 263, 264, 265, 0,
	0, 0, 266, 530, 531, 532, 0, 267, 268, 533,
	0, 0, 0, 269, 270, 271, 272, 273, 274, 275,
	0, 0, 277, 278, 279, 276, 0, 280, 0, 281,
	282, 283, 0, 284, 0, 285, 286, 0, 0, 0,
	0, 0, 0, 0, 287, 288, 289, 290, 0, 291,
	534, 535, 0, 295, 292, 293, 0, 296, 294, 0,
	297, 298, 299, 0, 0, 300, 301, 302, 0, 303,
	304, 0, 305, 306, 307, 0, 308, 309, 536, 310,
	311, 312, 314, 316, 313, 317, 318, 319, 320, 537,
	538, 0, 241, 0, 0, 0, 0, 0, 321, 322,
	323, 539, 0, 0, 0, 324, 0, 325, 0, 0,
	0, 326, 327, 540, 541, 328, 329, 0, 330, 542,
	0, 543, 331, 0, 332, 333, 334, 335, 336, 544,
	545, 546, 393, 0, 337, 338, 0, 339, 340, 341,
	342, 0, 0, 0, 242, 343, 344, 346, 0, 0,
	345, 547, 548, 0, 549, 0, 347, 348, 0, 550,
	0, 349, 350, 351, 0, 352, 0, 0, 0, 353,
	354, 355, 356, 357, 358, 0, 359, 361, 360, 0,
	362, 551, 0, 363, 364, 0, 0, 365, 366, 367,
	0, 0, 368, 369, 370, 371, 0, 372, 373, 375,
	377, 374, 376, 381, 378, 379, 380, 383, 0, 382,
	0, 384, 385, 386, 389, 390, 388, 0, 387, 0,
	243, 0, 391, 0, 552, 392, 553, 394, 395, 0,
	0, 396, 0, 0, 1090, 398, 399, 400, 0, 0,
	401, 402, 554, 0, 403, 0, 555, 404, 405, 397,
	406, 407, 408, 409, 410, 411, 412, 413, 0, 414,
	415, 556, 557, 558, 416, 559, 417, 418, 0, 419,
	0, 420, 421, 422, 423, 424, 425, 426, 560, 428,
	427, 429, 0, 0, 0, 0, 0, 0, 430, 0,
	432, 433, 434, 431, 435, 436, 437, 438, 0, 439,
	440, 441, 0, 442, 443, 444, 445, 561, 446, 0,
	447, 448, 454, 455, 449, 450, 456, 457, 458, 459,
	460, 0, 462, 463, 461, 464, 465, 466, 0, 467,
	451, 452, 468, 469, 0, 470, 471, 472, 473, 474,
	475, 562, 0, 476, 0, 477, 478, 479, 480, 453,
	481, 486, 563, 482, 483, 484, 485, 564, 0, 488,
	489, 0, 487, 0, 490, 491, 492, 493, 494, 495,
	315, 496, 0, 497, 565, 566, 567, 568, 0, 504,
	0, 498, 499, 569, 500, 570, 0, 501, 502, 503,
	0, 505, 506, 0, 0, 507, 508, 509, 511, 512,
	510, 513, 0, 514, 0, 0, 515, 516, 517, 571,
	572, 573, 0, 519, 518, 574, 2579, 0, 238, 0,
	520, 521, 575, 522, 523, 524, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 244, 245, 246, 247, 248,
	249, 0, 250, 251, 0, 0, 0, 0, 0, 525,
	0, 0, 0, 0, 252, 253, 255, 254, 256, 257,
	258, 526, 527, 0, 259, 528, 260, 529, 0, 261,
	262, 263, 264, 265, 0, 0, 0, 266, 530, 531,
	532, 0, 267, 268, 533, 0, 0, 0, 269, 270,
	271, 272, 273, 274, 275, 0, 0, 277, 278, 279,
	276, 0, 280, 0, 281, 282, 283, 0, 284, 0,
	285, 286, 0, 0, 0, 0, 0, 0, 0, 287,
	288, 289, 290, 0, 291, 534, 535, 0, 295, 292,
	293, 0, 296, 294, 0, 297, 298, 299, 0, 0,
	300, 301, 302, 0, 303, 304, 0, 305, 306, 307,
	0, 308, 309, 536, 310, 311, 312, 314, 316, 313,
	317, 318, 319, 320, 537, 538, 0, 241, 0, 0,
	0, 0, 0, 321, 322, 323, 539, 0, 0, 0,
	324, 0, 325, 0, 0, 0, 326, 327, 540, 541,
	328, 329, 0, 330, 542, 0, 543, 331, 0, 332,
	333, 334, 335, 336, 2578, 545, 546, 393, 0, 337,
	338, 0, 339, 340, 341, 342, 0, 0, 0, 242,
	343, 344, 346, 0, 0, 345, 547, 548, 0, 549,
	0, 347, 348, 0, 550, 0, 349, 350, 351, 0,
	352, 0, 0, 0, 353, 354, 355, 356, 357, 358,
	0, 359, 361, 360, 0, 362, 551, 0, 363, 364,
	0, 0, 365, 366, 367, 0, 0, 368, 369, 370,
	371, 0, 372, 373, 375, 377, 374, 376, 381, 378,
	379, 380, 383, 0, 382, 0, 384, 385, 386, 389,
	390, 388, 0, 387, 0, 243, 0, 391, 0, 552,
	392, 553, 394, 395, 0, 0, 396, 0, 0, 0,
	398, 399, 400, 0, 0, 401, 402, 554, 0, 403,
	0, 555, 404, 405, 397, 406, 407, 408, 409, 410,
	411, 412, 413, 0, 414, 415, 556, 557, 558, 416,
	559, 417, 418, 0, 419, 0, 420, 421, 422, 423,
	424, 425, 426, 560, 428, 427, 429, 0, 0, 0,
	0, 0, 0, 430, 0, 432, 433, 434, 431, 435,
	436, 437, 438, 0, 439, 440, 441, 0, 442, 443,
	444, 445, 561, 446, 0, 447, 448, 454, 455, 449,
	450, 456, 457, 458, 459, 460, 0, 462, 463, 461,
	464, 465, 466, 0, 467, 451, 452, 468, 469, 0,
	470, 471, 472, 473, 474, 475, 562, 0, 476, 0,
	477, 478, 479, 480, 453, 481, 486, 563, 482, 483,
	484, 485, 564, 0, 488, 489, 0, 487, 0, 490,
	491, 492, 493, 494, 495, 315, 496, 0, 497, 565,
	566, 567, 568, 0, 504, 0, 498, 499, 569, 500,
	570, 0, 501, 502, 503, 0, 505, 506, 0, 0,
	507, 508, 509, 511, 512, 510, 513, 0, 514, 0,
	0, 515, 516, 517, 571, 572, 573, 0, 519, 518,
	574, 2050, 0, 238, 0, 520, 521, 575, 522, 523,
	524, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	244, 245, 246, 247, 248, 249, 0, 250, 251, 0,
	0, 0, 0, 0, 525, 0, 0, 0, 0, 252,
	253, 255, 254, 256, 257, 258, 526, 527, 0, 259,
	528, 260, 529, 0, 261, 262, 263, 264, 265, 0,
	0, 0, 266, 530, 531, 532, 0, 267, 268, 533,
	0, 0, 0, 269, 270, 271, 272, 273, 274, 275,
	0, 0, 277, 278, 279, 276, 0, 280, 0, 281,
	282, 283, 0, 284, 0, 285, 286, 0, 0, 0,
	0, 0, 0, 0, 287, 288, 289, 290, 0, 291,
	534, 535, 0, 295, 292, 293, 0, 296, 294, 0,
	297, 298, 299, 0, 0, 300, 301, 302, 0, 303,
	304, 0, 305, 306, 307, 0, 308, 309, 536, 310,
	311, 312, 314, 316, 313, 317, 318, 319, 320, 537,
	538, 0, 241, 0, 0, 0, 0, 0, 321, 322,
	323, 539, 0, 0, 0, 324, 0, 325, 0, 0,
	0, 326, 327, 540, 541, 328, 329, 0, 330, 542,
	0, 543, 331, 0, 332, 333, 334, 335, 336, 544,
	545, 546, 393, 0, 337, 338, 0, 339, 340, 341,
	342, 0, 0, 0, 242, 343, 344, 346, 0, 0,
	345, 547, 548, 0, 549, 0, 347, 348, 0, 550,
	0, 349, 350, 351, 0, 352, 0, 0, 0, 353,
	354, 355, 356, 357, 358, 0, 359, 361, 360, 0,
	362, 551, 0, 363, 364, 0, 0, 365, 366, 367,
	0, 0, 368, 369, 370, 371, 0, 372, 373, 375,
	377, 374, 376, 381, 378, 379, 380, 383, 0, 382,
	0, 384, 385, 386, 389, 390, 388, 0, 387, 0,
	243, 0, 391, 0, 552, 392, 553, 394, 395, 0,
	0, 396, 0, 0, 0, 398, 399, 400, 0, 0,
	401, 402, 554, 0, 403, 0, 555, 404, 405, 397,
	406, 407, 408, 409, 410, 411, 412, 413, 0, 414,
	415, 556, 557, 558, 416, 559, 417, 418, 0, 419,
	0, 420, 421, 422, 423, 424, 425, 426, 560, 428,
	427, 429, 0, 0, 0, 0, 0, 0, 430, 0,
	432, 433, 434, 431, 435, 436, 437, 438, 0, 439,
	440, 441, 0, 442, 443, 444, 445, 561, 446, 0,
	447, 448, 454, 455, 449, 450, 456, 457, 458, 459,
	460, 0, 462, 463, 461, 464, 465, 466, 0, 467,
	451, 452, 468, 469, 0, 470, 471, 472, 473, 474,
	475, 562, 0, 476, 0, 477, 478, 479, 480, 453,
	481, 486, 563, 482, 483, 484, 485, 564, 0, 488,
	489, 0, 487, 0, 490, 491, 492, 493, 494, 495,
	315, 496, 0, 497, 565, 566, 567, 568, 0, 504,
	0, 498, 499, 569, 500, 570, 0, 501, 502, 503,
	0, 505, 506, 0, 0, 507, 508, 509, 511, 512,
	510, 513, 0, 514, 0, 0, 515, 516, 517, 571,
	572, 573, 238, 519, 518, 574, 0, 0, 0, 0,
	520, 521, 575, 522, 523, 524, 0, 0, 0, 244,
	245, 246, 247, 248, 249, 0, 250, 251, 0, 0,
	0, 0, 0, 525, 0, 0, 0, 0, 252, 253,
	255, 254, 256, 257, 258, 526, 527, 0, 259, 528,
	260, 529, 0, 261, 262, 263, 264, 265, 0, 0,
	0, 266, 530, 531, 532, 0, 267, 268, 533, 0,
	0, 0, 269, 270, 271, 272, 273, 274, 275, 0,
	0, 277, 278, 279, 276, 0, 280, 0, 281, 282,
	283, 0, 284, 0, 285, 286, 0, 0, 0, 0,
	0, 0, 0, 287, 288, 289, 290, 0, 291, 534,
	535, 0, 295, 292, 293, 0, 296, 294, 0, 297,
	298, 299, 0, 0, 300, 301, 302, 0, 303, 304,
	0, 305, 306, 307, 0, 308, 309, 536, 310, 311,
	312, 314, 316, 313, 317, 318, 319, 320, 537, 538,
	0, 241, 0, 0, 0, 0, 0, 321, 322, 323,
	539, 0, 0, 0, 324, 0, 325, 0, 0, 0,
	326, 327, 540, 541, 328, 329, 0, 330, 542, 0,
	543, 331, 0, 332, 333, 334, 335, 336, 544, 545,
	546, 393, 0, 337, 338, 0, 339, 340, 341, 342,
	0, 0, 0, 242, 343, 344, 346, 0, 0, 345,
	547, 548, 0, 549, 0, 347, 348, 0, 550, 0,
	349, 350, 351, 0, 352, 0, 0, 0, 353, 354,
	355, 356, 357, 358, 0, 359, 361, 360, 0, 362,
	551, 0, 363, 364, 0, 0, 365, 366, 367, 0,
	0, 368, 369, 370, 371, 0, 372, 373, 375, 377,
	374, 376, 381, 378, 379, 380, 383, 0, 382, 0,
	384, 385, 386, 389, 390, 388, 0, 387, 0, 243,
	0, 391, 0, 552, 392, 553, 394, 395, 0, 0,
	396, 0, 0, 0, 398, 399, 400, 0, 0, 401,
	402, 554, 0, 403, 0, 555, 404, 405, 397, 406,
	407, 408, 409, 410, 411, 412, 413, 0, 414, 415,
	556, 557, 558, 416, 559, 417, 418, 0, 419, 0,
	420, 421, 422, 423, 424, 425, 426, 560, 428, 427,
	429, 0, 0, 0, 0, 0, 0, 430, 0, 432,
	433, 434, 431, 435, 436, 437, 438, 0, 439, 440,
	441, 0, 442, 443, 444, 445, 561, 446, 0, 447,
	448, 454, 455, 449, 450, 456, 457, 458, 459, 460,
	0, 462, 463, 461, 464, 465, 466, 0, 467, 451,
	452, 468, 469, 0, 470, 471, 472, 473, 474, 475,
	562, 0, 476, 0, 477, 478, 479, 480, 453, 481,
	486, 563, 482, 483, 484, 485, 564, 0, 488, 489,
	0, 487, 1972, 490, 491, 492, 493, 494, 495, 315,
	496, 0, 497, 565, 566, 567, 568, 0, 504, 0,
	498, 499, 569, 500, 570, 0, 501, 502, 503, 0,
	505, 506, 0, 0, 507, 508, 509, 511, 512, 510,
	513, 0, 514, 0, 0, 515, 516, 517, 571, 572,
	573, 0, 519, 518, 574, 1977, 0, 238, 0, 520,
	521, 575, 522, 523, 524, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 244, 245, 246, 247, 248, 249,
	0, 250, 251, 0, 0, 0, 0, 0, 525, 0,
	0, 0, 0, 252, 253, 255, 254, 256, 257, 258,
	526, 527, 0, 259, 528, 260, 529, 0, 261, 262,
	263, 264, 265, 0, 0, 0, 266, 530, 531, 532,
	0, 267, 268, 533, 0, 0, 0, 269, 270, 271,
	272, 273, 274, 275, 0, 0, 277, 278, 279, 276,
	0, 280, 0, 281, 282, 283, 0, 284, 0, 285,
	286, 0, 0, 0, 0, 0, 0, 0, 287, 288,
	289, 290, 0, 291, 534, 535, 0, 295, 292, 293,
	0, 296, 294, 0, 297, 298, 299, 0, 0, 300,
	301, 302, 0, 303, 304, 0, 305, 306, 307, 0,
	308, 309, 536, 310, 311, 312, 314, 316, 313, 317,
	318, 319, 320, 537, 538, 0, 241, 0, 0, 0,
	0, 0, 321, 322, 323, 539, 0, 0, 0, 324,
	0, 325, 0, 0, 0, 326, 327, 540, 541, 328,
	329, 0, 330, 542, 0, 543, 331, 0, 332, 333,
	334, 335, 336, 1976, 545, 546, 393, 0, 337, 338,
	0, 339, 340, 341, 342, 0, 0, 0, 242, 343,
	344, 346, 0, 0, 345, 547, 548, 0, 549, 0,
	347, 348, 0, 550, 0, 349, 350, 351, 0, 352,
	0, 0, 0, 353, 354, 355, 356, 357, 358, 0,
	359, 361, 360, 0, 362, 551, 0, 363, 364, 0,
	0, 365, 366, 367, 0, 0, 368, 369, 370, 371,
	0, 372, 373, 375, 377, 374, 376, 381, 378, 379,
	380, 383, 0, 382, 0, 384, 385, 386, 389, 390,
	388, 0, 387, 0, 243, 0, 391, 0, 552, 392,
	553, 394, 395, 0, 0, 396, 0, 0, 0, 398,
	399, 400, 0, 0, 401, 402, 554, 0, 403, 0,
	555, 404, 405, 397, 406, 407, 408, 409, 410, 411,
	412, 413, 0, 414, 415, 556, 557, 558, 416, 559,
	417, 418, 0, 419, 0, 420, 421, 422, 423, 424,
	425, 426, 560, 428, 427, 429, 0, 0, 0, 0,
	0, 0, 430, 0, 432, 433, 434, 431, 435, 436,
	437, 438, 0, 439, 440, 441, 0, 442, 443, 444,
	445, 561, 446, 0, 447, 448, 454, 455, 449, 450,
	456, 457, 458, 459, 460, 0, 462, 463, 461, 464,
	465, 466, 0, 467, 451, 452, 468, 469, 0, 470,
	471, 472, 473, 474, 475, 562, 0, 476, 0, 477,
	478, 479, 480, 453, 481, 486, 563, 482, 483, 484,
	485, 564, 0, 488, 489, 0, 487, 0, 490, 491,
	492, 493, 494, 495, 315, 496, 0, 497, 565, 566,
	567, 568, 0, 504, 0, 498, 499, 569, 500, 570,
	0, 501, 502, 503, 0, 505, 506, 0, 0, 507,
	508, 509, 511, 512, 510, 513, 0, 514, 0, 0,
	515, 516, 517, 571, 572, 573, 0, 519, 518, 574,
	1965, 0, 238, 0, 520, 521, 575, 522, 523, 524,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 244,
	245, 246, 247, 248, 249, 0, 250, 251, 0, 0,
	0, 0, 0, 525, 0, 0, 0, 0, 252, 253,
	255, 254, 256, 257, 258, 526, 527, 0, 259, 528,
	260, 529, 0, 261, 262, 263, 264, 265, 0, 0,
	0, 266, 530, 531, 532, 0, 267, 268, 533, 0,
	0, 0, 269, 270, 271, 272, 273, 274, 275, 0,
	0, 277, 278, 279, 276, 0, 280, 0, 281, 282,
	283, 0, 284, 0, 285, 286, 0, 0, 0, 0,
	0, 0, 0, 287, 288, 289, 290, 0, 291, 534,
	535, 0, 295, 292, 293, 0, 296, 294, 0, 297,
	298, 299, 0, 0, 300, 301, 302, 0, 303, 304,
	0, 305, 306, 307, 0, 308, 309, 536, 310, 311,
	312, 314, 316, 313, 317, 318, 319, 320, 537, 538,
	0, 241, 0, 0, 0, 0, 0, 321, 322, 323,
	539, 0, 0, 0, 324, 0, 325, 0, 0, 0,
	326, 327, 540, 541, 328, 329, 0, 330, 542, 0,
	543, 331, 0, 332, 333, 334, 335, 336, 1967, 545,
	546, 393, 0, 337, 338, 0, 339, 340, 341, 342,
	0, 0, 0, 242, 343, 344, 346, 0, 0, 345,
	547, 548, 0, 549, 0, 347, 348, 0, 550, 0,
	349, 350, 351, 0, 352, 0, 0, 0, 353, 354,
	355, 356, 357, 358, 0, 359, 361, 360, 0, 362,
	551, 0, 363, 364, 0, 0, 365, 366, 367, 0,
	0, 368, 369, 370, 371, 0, 372, 373, 375, 377,
	374, 376, 381, 378, 379, 380, 383, 0, 382, 0,
	384, 385, 386, 389, 390, 388, 0, 387, 0, 243,
	0, 391, 0, 552, 392, 553, 394, 395, 0, 0,
	396, 0, 0, 0, 398, 399, 400, 0, 0, 401,
	402, 554, 0, 403, 0, 555, 404, 405, 397, 406,
	407, 408, 409, 410, 411, 412, 413, 0, 414, 415,
	556, 557, 558, 416, 559, 417, 418, 0, 419, 0,
	420, 421, 422, 423, 424, 425, 426, 560, 428, 427,
	429, 0, 0, 0, 0, 0, 0, 430, 0, 432,
	433, 434, 431, 435, 436, 437, 438, 0, 439, 440,
	441, 0, 442, 443, 444, 445, 561, 446, 0, 447,
	448, 454, 455, 449, 450, 456, 457, 458, 459, 460,
	0, 462, 463, 461, 464, 465, 466, 0, 467, 451,
	452, 468, 469, 0, 470, 471, 472, 473, 474, 475,
	562, 0, 476, 0, 477, 478, 479, 480, 453, 481,
	486, 563, 482, 483, 484, 485, 564, 0, 488, 489,
	0, 487, 0, 490, 491, 492, 493, 494, 495, 315,
	496, 0, 497, 565, 566, 567, 568, 0, 504, 0,
	498, 499, 569, 500, 570, 0, 501, 502, 503, 0,
	505, 506, 0, 0, 507, 508, 509, 511, 512, 510,
	513, 0, 514, 0, 0, 515, 516, 517, 571, 572,
	573, 0, 519, 518, 574, 1413, 0, 238, 0, 520,
	521, 575, 522, 523, 524, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 244, 245, 246, 247, 248, 249,
	0, 250, 251, 0, 0, 0, 0, 0, 525, 0,
	0, 0, 0, 252, 253, 255, 254, 256, 257, 258,
	526, 527, 0, 259, 528, 260, 529, 0, 261, 262,
	263, 264, 265, 0, 0, 0, 266, 530, 531, 532,
	0, 267, 268, 533, 0, 0, 0, 269, 270, 271,
	272, 273, 274, 275, 0, 0, 277, 278, 279, 276,
	0, 280, 0, 281, 282, 283, 0, 284, 0, 285,
	286, 0, 0, 0, 0, 0, 0, 0, 287, 288,
	289, 290, 0, 291, 534, 535, 0, 295, 292, 293,
	0, 296, 294, 0, 297, 298, 299, 0, 0, 300,
	301, 302, 0, 303, 304, 0, 305, 306, 307, 0,
	308, 309, 536, 310, 311, 312, 314, 316, 313, 317,
	318, 319, 320, 537, 538, 0, 241, 0, 0, 0,
	0, 0, 321, 322, 323, 539, 0, 0, 0, 324,
	0, 325, 0, 0, 0, 326, 327, 540, 541, 328,
	329, 0, 330, 542, 0, 543, 331, 0, 332, 333,
	334, 335, 336, 1412, 545, 546, 393, 0, 337, 338,
	0, 339, 340, 341, 342, 0, 0, 0, 242, 343,
	344, 346, 0, 0, 345, 547, 548, 0, 549, 0,
	347, 348, 0, 550, 0, 349, 350, 351, 0, 352,
	0, 0, 0, 353, 354, 355, 356, 357, 358, 0,
	359, 361, 360, 0, 362, 551, 0, 363, 364, 0,
	0, 365, 366, 367, 0, 0, 368, 369, 370, 371,
	0, 372, 373, 375, 377, 374, 376, 381, 378, 379,
	380, 383, 0, 382, 0, 384, 385, 386, 389, 390,
	388, 0, 387, 0, 243, 0, 391, 0, 552, 392,
	553, 394, 395, 0, 0, 396, 0, 0, 0, 398,
	399, 400, 0, 0, 401, 402, 554, 0, 403, 0,
	555, 404, 405, 397, 406, 407, 408, 409, 410, 411,
	412, 413, 0, 414, 415, 556, 557, 558, 416, 559,
	417, 418, 0, 419, 0, 420, 421, 422, 423, 424,
	425, 426, 560, 428, 427, 429, 0, 0, 0, 0,
	0, 0, 430, 0, 432, 433, 434, 431, 435, 436,
	437, 438, 0, 439, 440, 441, 0, 442, 443, 444,
	445, 561, 446, 0, 447, 448, 454, 455, 449, 450,
	456, 457, 458, 459, 460, 0, 462, 463, 461, 464,
	465, 466, 0, 467, 451, 452, 468, 469, 0, 470,
	471, 472, 473, 474, 475, 562, 0, 476, 0, 477,
	478, 479, 480, 453, 481, 486, 563, 482, 483, 484,
	485, 564, 0, 488, 489, 0, 487, 0, 490, 491,
	492, 493, 494, 495, 315, 496, 0, 497, 565, 566,
	567, 568, 0, 504, 0, 498, 499, 569, 500, 570,
	0, 501, 502, 503, 0, 505, 506, 0, 0, 507,
	508, 509, 511, 512, 510, 513, 0, 514, 0, 0,
	515, 516, 517, 571, 572, 573, 0, 519, 518, 574,
	1404, 0, 238, 0, 520, 521, 575, 522, 523, 524,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 244,
	245, 246, 247, 248, 249, 0, 250, 251, 0, 0,
	0, 0, 0, 525, 0, 0, 0, 0, 252, 253,
	255, 254, 256, 257, 258, 526, 527, 0, 259, 528,
	260, 529, 0, 261, 262, 263, 264, 265, 0, 0,
	0, 266, 530, 531, 532, 0, 267, 268, 533, 0,
	0, 0, 269, 270, 271, 272, 273, 274, 275, 0,
	0, 277, 278, 279, 276, 0, 280, 0, 281, 282,
	283, 0, 284, 0, 285, 286, 0, 0, 0, 0,
	0, 0, 0, 287, 288, 289, 290, 0, 291, 534,
	535, 0, 295, 292, 293, 0, 296, 294, 0, 297,
	298, 299, 0, 0, 300, 301, 302, 0, 303, 304,
	0, 305, 306, 307, 0, 308, 309, 536, 310, 311,
	312, 314, 316, 313, 317, 318, 319, 320, 537, 538,
	0, 241, 0, 0, 0, 0, 0, 321, 322, 323,
	539, 0, 0, 0, 324, 0, 325, 0, 0, 0,
	326, 327, 540, 541, 328, 329, 0, 330, 542, 0,
	543, 331, 0, 332, 333, 334, 335, 336, 1403, 545,
	546, 393, 0, 337, 338, 0, 339, 340, 341, 342,
	0, 0, 0, 242, 343, 344, 346, 0, 0, 345,
	547, 548, 0, 549, 0, 347, 348, 0, 550, 0,
	349, 350, 351, 0, 352, 0, 0, 0, 353, 354,
	355, 356, 357, 358, 0, 359, 361, 360, 0, 362,
	551, 0, 363, 364, 0, 0, 365, 366, 367, 0,
	0, 368, 369, 370, 371, 0, 372, 373, 375, 377,
	374, 376, 381, 378, 379, 380, 383, 0, 382, 0,
	384, 385, 386, 389, 390, 388, 0, 387, 0, 243,
	0, 391, 0, 552, 392, 553, 394, 395, 0, 0,
	396, 0, 0, 0, 398, 399, 400, 0, 0, 401,
	402, 554, 0, 403, 0, 555, 404, 405, 397, 406,
	407, 408, 409, 410, 411, 412, 413, 0, 414, 415,
	556, 557, 558, 416, 559, 417, 418, 0, 419, 0,
	420, 421, 422, 423, 424, 425, 426, 560, 428, 427,
	429, 0, 0, 0, 0, 0, 0, 430, 0, 432,
	433, 434, 431, 435, 436, 437, 438, 0, 439, 440,
	441, 0, 442, 443, 444, 445, 561, 446, 0, 447,
	448, 454, 455, 449, 450, 456, 457, 458, 459, 460,
	0, 462, 463, 461, 464, 465, 466, 0, 467, 451,
	452, 468, 469, 0, 470, 471, 472, 473, 474, 475,
	562, 0, 476, 0, 477, 478, 479, 480, 453, 481,
	486, 563, 482, 483, 484, 485, 564, 0, 488, 489,
	0, 487, 0, 490, 491, 492, 493, 494, 495, 315,
	496, 0, 497, 565, 566, 567, 568, 0, 504, 0,
	498, 499, 569, 500, 570, 0, 501, 502, 503, 0,
	505, 506, 0, 0, 507, 508, 509, 511, 512, 510,
	513, 0, 514, 0, 0, 515, 516, 517, 571, 572,
	573, 0, 519, 518, 574, 1401, 0, 238, 0, 520,
	521, 575, 522, 523, 524, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 244, 245, 246, 247, 248, 249,
	0, 250, 251, 0, 0, 0, 0, 0, 525, 0,
	0, 0, 0, 252, 253, 255, 254, 256, 257, 258,
	526, 527, 0, 259, 528, 260, 529, 0, 261, 262,
	263, 264, 265, 0, 0, 0, 266, 530, 531, 532,
	0, 267, 268, 533, 0, 0, 0, 269, 270, 271,
	272, 273, 274, 275, 0, 0, 277, 278, 279, 276,
	0, 280, 0, 281, 282, 283, 0, 284, 0, 285,
	286, 0, 0, 0, 0, 0, 0, 0, 287, 288,
	289, 290, 0, 291, 534, 535, 0, 295, 292, 293,
	0, 296, 294, 0, 297, 298, 299, 0, 0, 300,
	301, 302, 0, 303, 304, 0, 305, 306, 307, 0,
	308, 309, 536, 310, 311, 312, 314, 316, 313, 317,
	318, 319, 320, 537, 538, 0, 241, 0, 0, 0,
	0, 0, 321, 322, 323, 539, 0, 0, 0, 324,
	0, 325, 0, 0, 0, 326, 327, 540, 541, 328,
	329, 0, 330, 542, 0, 543, 331, 0, 332, 333,
	334, 335, 336, 1400, 545, 546, 393, 0, 337, 338,
	0, 339, 340, 341, 342, 0, 0, 0, 242, 343,
	344, 346, 0, 0, 345, 547, 548, 0, 549, 0,
	347, 348, 0, 550, 0, 349, 350, 351, 0, 352,
	0, 0, 0, 353, 354, 355, 356, 357, 358, 0,
	359, 361, 360, 0, 362, 551, 0, 363, 364, 0,
	0, 365, 366, 367, 0, 0, 368, 369, 370, 371,
	0, 372, 373, 375, 377, 374, 376, 381, 378, 379,
	380, 383, 0, 382, 0, 384, 385, 386, 389, 390,
	388, 0, 387, 0, 243, 0, 391, 0, 552, 392,
	553, 394, 395, 0, 0, 396, 0, 0, 0, 398,
	399, 400, 0, 0, 401, 402, 554, 0, 403, 0,
	555, 404, 405, 397, 406, 407, 408, 409, 410, 411,
	412, 413, 0, 414, 415, 556, 557, 558, 416, 559,
	417, 418, 0, 419, 0, 420, 421, 422, 423, 424,
	425, 426, 560, 428, 427, 429, 0, 0, 0, 0,
	0, 0, 430, 0, 432, 433, 434, 431, 435, 436,
	437, 438, 0, 439, 440, 441, 0, 442, 443, 444,
	445, 561, 446, 0, 447, 448, 454, 455, 449, 450,
	456, 457, 458, 459, 460, 0, 462, 463, 461, 464,
	465, 466, 0, 467, 451, 452, 468, 469, 0, 470,
	471, 472, 473, 474, 475, 562, 0, 476, 0, 477,
	478, 479, 480, 453, 481, 486, 563, 482, 483, 484,
	485, 564, 0, 488, 489, 0, 487, 0, 490, 491,
	492, 493, 494, 495, 315, 496, 0, 497, 565, 566,
	567, 568, 0, 504, 0, 498, 499, 569, 500, 570,
	0, 501, 502, 503, 0, 505, 506, 0, 0, 507,
	508, 509, 511, 512, 510, 513, 0, 514, 0, 0,
	515, 516, 517, 571, 572, 573, 0, 519, 518, 574,
	1397, 0, 238, 0, 520, 521, 575, 522, 523, 524,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 244,
	245, 246, 247, 248, 249, 0, 250, 251, 0, 0,
	0, 0, 0, 525, 0, 0, 0, 0, 252, 253,
	255, 254, 256, 257, 258, 526, 527, 0, 259, 528,
	260, 529, 0, 261, 262, 263, 264, 265, 0, 0,
	0, 266, 530, 531, 532, 0, 267, 268, 533, 0,
	0, 0, 269, 270, 271, 272, 273, 274, 275, 0,
	0, 277, 278, 279, 276, 0, 280, 0, 281, 282,
	283, 0, 284, 0, 285, 286, 0, 0, 0, 0,
	0, 0, 0, 287, 288, 289, 290, 0, 291, 534,
	535, 0, 295, 292, 293, 0, 296, 294, 0, 297,
	298, 299, 0, 0, 300, 301, 302, 0, 303, 304,
	0, 305, 306, 307, 0, 308, 309, 536, 310, 311,
	312, 314, 316, 313, 317, 318, 319, 320, 537, 538,
	0, 241, 0, 0, 0, 0, 0, 321, 322, 323,
	539, 0, 0, 0, 324, 0, 325, 0, 0, 0,
	326, 327, 540, 541, 328, 329, 0, 330, 542, 0,
	543, 331, 0, 332, 333, 334, 335, 336, 1396, 545,
	546, 393, 0, 337, 338, 0, 339, 340, 341, 342,
	0, 0, 0, 242, 343, 344, 346, 0, 0, 345,
	547, 548, 0, 549, 0, 347, 348, 0, 550, 0,
	349, 350, 351, 0, 352, 0, 0, 0, 353, 354,
	355, 356, 357, 358, 0, 359, 361, 360, 0, 362,
	551, 0, 363, 364, 0, 0, 365, 366, 367, 0,
	0, 368, 369, 370, 371, 0, 372, 373, 375, 377,
	374, 376, 381, 378, 379, 380, 383, 0, 382, 0,
	384, 385, 386, 389, 390, 388, 0, 387, 0, 243,
	0, 391, 0, 552, 392, 553, 394, 395, 0, 0,
	396, 0, 0, 0, 398, 399, 400, 0, 0, 401,
	402, 554, 0, 403, 0, 555, 404, 405, 397, 406,
	407, 408, 409, 410, 411, 412, 413, 0, 414, 415,
	556, 557, 558, 416, 559, 417, 418, 0, 419, 0,
	420, 421, 422, 423, 424, 425, 426, 560, 428, 427,
	429, 0, 0, 0, 0, 0, 0, 430, 0, 432,
	433, 434, 431, 435, 436, 437, 438, 0, 439, 440,
	441, 0, 442, 443, 444, 445, 561, 446, 0, 447,
	448, 454, 455, 449, 450, 456, 457, 458, 459, 460,
	0, 462, 463, 461, 464, 465, 466, 0, 467, 451,
	452, 468, 469, 0, 470, 471, 472, 473, 474, 475,
	562, 0, 476, 0, 477, 478, 479, 480, 453, 481,
	486, 563, 482, 483, 484, 485, 564, 0, 488, 489,
	0, 487, 0, 490, 491, 492, 493, 494, 495, 315,
	496, 0, 497, 565, 566, 567, 568, 0, 504, 0,
	498, 499, 569, 500, 570, 0, 501, 502, 503, 0,
	505, 506, 0, 0, 507, 508, 509, 511, 512, 510,
	513, 0, 514, 0, 0, 515, 516, 517, 571, 572,
	573, 0, 519, 518, 574, 1354, 0, 238, 0, 520,
	521, 575, 522, 523, 524, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 244, 245, 246, 247, 248, 249,
	0, 250, 251, 0, 0, 0, 0, 0, 525, 0,
	0, 0, 0, 252, 253, 255, 254, 256, 257, 258,
	526, 527, 0, 259, 528, 260, 529, 0, 261, 262,
	263, 264, 265, 0, 0, 0, 266, 530, 531, 532,
	0, 267, 268, 533, 0, 0, 0, 269, 270, 271,
	272, 273, 274, 275, 0, 0, 277, 278, 279, 276,
	0, 280, 0, 281, 282, 283, 0, 284, 0, 285,
	286, 0, 0, 0, 0, 0, 0, 0, 287, 288,
	289, 290, 0, 291, 534, 535, 0, 295, 292, 293,
	0, 296, 294, 0, 297, 298, 299, 0, 0, 300,
	301, 302, 0, 303, 304, 0, 305, 306, 307, 0,
	308, 309, 536, 310, 311, 312, 314, 316, 313, 317,
	318, 319, 320, 537, 538, 0, 241, 0, 0, 0,
	0, 0, 321, 322, 323, 539, 0, 0, 0, 324,
	0, 325, 0, 0, 0, 326, 327, 540, 541, 328,
	329, 0, 330, 542, 0, 543, 331, 0, 332, 333,
	334, 335, 336, 544, 545, 546, 393, 0, 337, 338,
	0, 339, 340, 341, 342, 0, 0, 0, 242, 343,
	344, 346, 0, 0, 345, 547, 548, 0, 549, 0,
	347, 348, 0, 550, 0, 349, 350, 351, 0, 352,
	0, 0, 0, 353, 354, 355, 356, 357, 358, 0,
	359, 361, 360, 0, 362, 551, 0, 363, 364, 0,
	0, 365, 366, 367, 0, 0, 368, 369, 370, 371,
	0, 372, 373, 375, 377, 374, 376, 381, 378, 379,
	380, 383, 0, 382, 0, 384, 385, 386, 389, 390,
	388, 0, 387, 0, 243, 0, 391, 0, 552, 392,
	553, 394, 395, 0, 0, 396, 0, 0, 0, 398,
	399, 400, 0, 0, 401, 402, 554, 0, 403, 0,
	555, 404, 405, 397, 406, 407, 408, 409, 410, 411,
	412, 413, 0, 414, 415, 556, 557, 558, 416, 559,
	417, 418, 0, 419, 0, 420, 421, 422, 423, 424,
	425, 426, 560, 428, 427, 429, 0, 0, 0, 0,
	0, 0, 430, 0, 432, 433, 434, 431, 435, 436,
	437, 438, 0, 439, 440, 441, 0, 442, 443, 444,
	445, 561, 446, 0, 447, 448, 454, 455, 449, 450,
	456, 457, 458, 459, 460, 0, 462, 463, 461, 464,
	465, 466, 0, 467, 451, 452, 468, 469, 0, 470,
	471, 472, 473, 474, 475, 562, 0, 476, 0, 477,
	478, 479, 480, 453, 481, 486, 563, 482, 483, 484,
	485, 564, 0, 488, 489, 0, 487, 0, 490, 491,
	492, 493, 494, 495, 315, 496, 0, 497, 565, 566,
	567, 568, 0, 504, 0, 498, 499, 569, 500, 570,
	0, 501, 502, 503, 0, 505, 506, 0, 0, 507,
	508, 509, 511, 512, 510, 513, 0, 514, 0, 0,
	515, 516, 517, 571, 572, 573, 0, 519, 518, 574,
	1270, 0, 238, 0, 520, 521, 575, 522, 523, 524,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 244,
	245, 246, 247, 248, 249, 0, 250, 251, 0, 0,
	0, 0, 0, 525, 0, 0, 0, 0, 252, 253,
	255, 254, 256, 257, 258, 526, 527, 0, 259, 528,
	260, 529, 0, 261, 262, 263, 264, 265, 0, 0,
	0, 266, 530, 531, 532, 0, 267, 268, 533, 0,
	0, 0, 269, 270, 271, 272, 273, 274, 275, 0,
	0, 277, 278, 279, 276, 0, 280, 0, 281, 282,
	283, 0, 284, 0, 285, 286, 0, 0, 0, 0,
	0, 0, 0, 287, 288, 289, 290, 0, 291, 534,
	535, 0, 295, 292, 293, 0, 296, 294, 0, 297,
	298, 299, 0, 0, 300, 301, 302, 0, 303, 304,
	0, 305, 306, 307, 0, 308, 309, 536, 310, 311,
	312, 314, 316, 313, 317, 318, 319, 320, 537, 538,
	0, 241, 0, 0, 0, 0, 0, 321, 322, 323,
	539, 0, 0, 0, 324, 0, 325, 0, 0, 0,
	326, 327, 540, 541, 328, 329, 0, 330, 542, 0,
	543, 331, 0, 332, 333, 334, 335, 336, 544, 545,
	546, 393, 0, 337, 338, 0, 339, 340, 341, 342,
	0, 0, 0, 242, 343, 344, 346, 0, 0, 345,
	547, 548, 0, 549, 0, 347, 348, 0, 550, 0,
	349, 350, 351, 0, 352, 0, 0, 0, 353, 354,
	355, 356, 357, 358, 0, 359, 361, 360, 0, 362,
	551, 0, 363, 364, 0, 0, 365, 366, 367, 0,
	0, 368, 369, 370, 371, 0, 372, 373, 375, 377,
	374, 376, 381, 378, 379, 380, 383, 0, 382, 0,
	384, 385, 386, 389, 390, 388, 0, 387, 0, 243,
	0, 391, 0, 552, 392, 553, 394, 395, 0, 0,
	396, 0, 0, 0, 398, 399, 400, 0, 0, 401,
	402, 554, 0, 403, 0, 555, 404, 405, 397, 406,
	407, 408, 409, 410, 411, 412, 413, 0, 414, 415,
	556, 557, 558, 416, 559, 417, 418, 0, 419, 0,
	420, 421, 422, 423, 424, 425, 426, 560, 428, 427,
	429, 0, 0, 0, 0, 0, 0, 430, 0, 432,
	433, 434, 431, 435, 436, 437, 438, 0, 439, 440,
	441, 0, 442, 443, 444, 445, 561, 446, 0, 447,
	448, 454, 455, 449, 450, 456, 457, 458, 459, 460,
	0, 462, 463, 461, 464, 465, 466, 0, 467, 451,
	452, 468, 469, 0, 470, 471, 472, 473, 474, 475,
	562, 0, 476, 0, 477, 478, 479, 480, 453, 481,
	486, 563, 482, 483, 484, 485, 564, 0, 488, 489,
	0, 487, 0, 490, 491, 492, 493, 494, 495, 315,
	496, 0, 497, 565, 566, 567, 568, 0, 504, 0,
	498, 499, 569, 500, 570, 0, 501, 502, 503, 0,
	505, 506, 0, 0, 507, 508, 509, 511, 512, 510,
	513, 0, 514, 0, 0, 515, 516, 517, 571, 572,
	573, 0, 519, 518, 574, 1263, 0, 238, 0, 520,
	521, 575, 522, 523, 524, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 244, 245, 246, 247, 248, 249,
	0, 250, 251, 0, 0, 0, 0, 0, 525, 0,
	0, 0, 0, 252, 253, 255, 254, 256, 257, 258,
	526, 527, 0, 259, 528, 260, 529, 0, 261, 262,
	263, 264, 265, 0, 0, 0, 266, 530, 531, 532,
	0, 267, 268, 533, 0, 0, 0, 269, 270, 271,
	272, 273, 274, 275, 0, 0, 277, 278, 279, 276,
	0, 280, 0, 281, 282, 283, 0, 284, 0, 285,
	286, 0, 0, 0, 0, 0, 0, 0, 287, 288,
	289, 290, 0, 291, 534, 535, 0, 295, 292, 293,
	0, 296, 294, 0, 297, 298, 299, 0, 0, 300,
	301, 302, 0, 303, 304, 0, 305, 306, 307, 0,
	308, 309, 536, 310, 311, 312, 314, 316, 313, 317,
	318, 319, 320, 537, 538, 0, 241, 0, 0, 0,
	0, 0, 321, 322, 323, 539, 0, 0, 0, 324,
	0, 325, 0, 0, 0, 326, 327, 540, 541, 328,
	329, 0, 330, 542, 0, 543, 331, 0, 332, 333,
	334, 335, 336, 1265, 545, 546, 393, 0, 337, 338,
	0, 339, 340, 341, 342, 0, 0, 0, 242, 343,
	344, 346, 0, 0, 345, 547, 548, 0, 549, 0,
	347, 348, 0, 550, 0, 349, 350, 351, 0, 352,
	0, 0, 0, 353, 354, 355, 356, 357, 358, 0,
	359, 361, 360, 0, 362, 551, 0, 363, 364, 0,
	0, 365, 366, 367, 0, 0, 368, 369, 370, 371,
	0, 372, 373, 375, 377, 374, 376, 381, 378, 379,
	380, 383, 0, 382, 0, 384, 385, 386, 389, 390,
	388, 0, 387, 0, 243, 0, 391, 0, 552, 392,
	553, 394, 395, 0, 0, 396, 0, 0, 0, 398,
	399, 400, 0, 0, 401, 402, 554, 0, 403, 0,
	555, 404, 405, 397, 406, 407, 408, 409, 410, 411,
	412, 413, 0, 414, 415, 556, 557, 558, 416, 559,
	417, 418, 0, 419, 0, 420, 421, 422, 423, 424,
	425, 426, 560, 428, 427, 429, 0, 0, 0, 0,
	0, 0, 430, 0, 432, 433, 434, 431, 435, 436,
	437, 438, 0, 439, 440, 441, 0, 442, 443, 444,
	445, 561, 446, 0, 447, 448, 454, 455, 449, 450,
	456, 457, 458, 459, 460, 0, 462, 463, 461, 464,
	465, 466, 0, 467, 451, 452, 468, 469, 0, 470,
	471, 472, 473, 474, 475, 562, 0, 476, 0, 477,
	478, 479, 480, 453, 481, 486, 563, 482, 483, 484,
	485, 564, 0, 488, 489, 0, 487, 0, 490, 491,
	492, 493, 494, 495, 315, 496, 0, 497, 565, 566,
	567, 568, 0, 504, 0, 498, 499, 569, 500, 570,
	0, 501, 502, 503, 0, 505, 506, 0, 0, 507,
	508, 509, 511, 512, 510, 513, 0, 514, 0, 0,
	515, 516, 517, 571, 572, 573, 0, 519, 518, 574,
	577, 0, 238, 0, 520, 521, 575, 522, 523, 524,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 244,
	245, 246, 247, 248, 249, 0, 250, 251, 0, 0,
	0, 0, 0, 525, 0, 0, 0, 0, 252, 253,
	255, 254, 256, 257, 258, 526, 527, 0, 259, 528,
	260, 529, 0, 261, 262, 263, 264, 265, 0, 0,
	0, 266, 530, 531, 532, 0, 267, 268, 533, 0,
	0, 0, 269, 270, 271, 272, 273, 274, 275, 0,
	0, 277, 278, 279, 276, 0, 280, 0, 281, 282,
	283, 0, 284, 0, 285, 286, 0, 0, 0, 0,
	0, 0, 0, 287, 288, 289, 290, 0, 291, 534,
	535, 0, 295, 292, 293, 0, 296, 294, 0, 297,
	298, 299, 0, 0, 300, 301, 302, 0, 303, 304,
	0, 305, 306, 307, 0, 308, 309, 536, 310, 311,
	312, 314, 316, 313, 317, 318, 319, 320, 537, 538,
	0, 241, 0, 0, 0, 0, 0, 321, 322, 323,
	539, 0, 0, 0, 324, 0, 325, 0, 0, 0,
	326, 327, 540, 541, 328, 329, 0, 330, 542, 0,
	543, 331, 0, 332, 333, 334, 335, 336, 544, 545,
	546, 393, 0, 337, 338, 0, 339, 340, 341, 342,
	0, 0, 0, 242, 343, 344, 346, 0, 0, 345,
	547, 548, 0, 549, 0, 347, 348, 0, 550, 0,
	349, 350, 351, 0, 352, 0, 0, 0, 353, 354,
	355, 356, 357, 358, 0, 359, 361, 360, 0, 362,
	551, 0, 363, 364, 0, 0, 365, 366, 367, 0,
	0, 368, 369, 370, 371, 0, 372, 373, 375, 377,
	374, 376, 381, 378, 379, 380, 383, 0, 382, 0,
	384, 385, 386, 389, 390, 388, 0, 387, 0, 243,
	0, 391, 0, 552, 392, 553, 394, 395, 0, 0,
	396, 0, 0, 0, 398, 399, 400, 0, 0, 401,
	402, 554, 0, 403, 0, 555, 404, 405, 397, 406,
	407, 408, 409, 410, 411, 412, 413, 0, 414, 415,
	556, 557, 558, 416, 559, 417, 418, 0, 419, 0,
	420, 421, 422, 423, 424, 425, 426, 560, 428, 427,
	429, 0, 0, 0, 0, 0, 0, 430, 0, 432,
	433, 434, 431, 435, 436, 437, 438, 0, 439, 440,
	441, 0, 442, 443, 444, 445, 561, 446, 0, 447,
	448, 454, 455, 449, 450, 456, 457, 458, 459, 460,
	0, 462, 463, 461, 464, 465, 466, 0, 467, 451,
	452, 468, 469, 0, 470, 471, 472, 473, 474, 475,
	562, 0, 476, 0, 477, 478, 479, 480, 453, 481,
	486, 563, 482, 483, 484, 485, 564, 0, 488, 489,
	0, 487, 0, 490, 491, 492, 493, 494, 495, 315,
	496, 0, 497, 565, 566, 567, 568, 0, 504, 0,
	498, 499, 569, 500, 570, 0, 501, 502, 503, 0,
	505, 506, 0, 0, 507, 508, 509, 511, 512, 510,
	513, 0, 514, 0, 0, 515, 516, 517, 571, 572,
	573, 0, 519, 518, 574, 229, 0, 238, 0, 520,
	521, 575, 522, 523, 524, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 244, 245, 246, 247, 248, 249,
	0, 250, 251, 0, 0, 0, 0, 0, 525, 0,
	0, 0, 0, 252, 253, 255, 254, 256, 257, 258,
	526, 527, 0, 259, 528, 260, 529, 0, 261, 262,
	263, 264, 265, 0, 0, 0, 266, 530, 531, 532,
	0, 267, 268, 533, 0, 0, 0, 269, 270, 271,
	272, 273, 274, 275, 0, 0, 277, 278, 279, 276,
	0, 280, 0, 281, 282, 283, 0, 284, 0, 285,
	286, 0, 0, 0, 0, 0, 0, 0, 287, 288,
	289, 290, 0, 291, 534, 535, 0, 295, 292, 293,
	0, 296, 294, 0, 297, 298, 299, 0, 0, 300,
	301, 302, 0, 303, 304, 0, 305, 306, 307, 0,
	308, 309, 536, 310, 311, 312, 314, 316, 313, 317,
	318, 319, 320, 537, 538, 0, 241, 0, 0, 0,
	0, 0, 321, 322, 323, 539, 0, 0, 0, 324,
	0, 325, 0, 0, 0, 326, 327, 540, 541, 328,
	329, 0, 330, 542, 0, 543, 331, 0, 332, 333,
	334, 335, 336, 544, 545, 546, 393, 0, 337, 338,
	0, 339, 340, 341, 342, 0, 0, 0, 242, 343,
	344, 346, 0, 0, 345, 547, 548, 0, 549, 0,
	347, 348, 0, 550, 0, 349, 350, 351, 0, 352,
	0, 0, 0, 353, 354, 355, 356, 357, 358, 0,
	359, 361, 360, 0, 362, 551, 0, 363, 364, 0,
	0, 365, 366, 367, 0, 0, 368, 369, 370, 371,
	0, 372, 373, 375, 377, 374, 376, 381, 378, 379,
	380, 383, 0, 382, 0, 384, 385, 386, 389, 390,
	388, 0, 387, 0, 243, 0, 391, 0, 552, 392,
	553, 394, 395, 0, 0, 396, 0, 0, 0, 398,
	399, 400, 0, 0, 401, 402, 554, 0, 403, 0,
	555, 404, 405, 397, 406, 407, 408, 409, 410, 411,
	412, 413, 0, 414, 415, 556, 557, 558, 416, 559,
	417, 418, 0, 419, 0, 420, 421, 422, 423, 424,
	425, 426, 560, 428, 427, 429, 0, 0, 0, 0,
	0, 0, 430, 0, 432, 433, 434, 431, 435, 436,
	437, 438, 0, 439, 440, 441, 0, 442, 443, 444,
	445, 561, 446, 0, 447, 448, 454, 455, 449, 450,
	456, 457, 458, 459, 460, 0, 462, 463, 461, 464,
	465, 466, 0, 467, 451, 452, 468, 469, 0, 470,
	471, 472, 473, 474, 475, 562, 0, 476, 0, 477,
	478, 479, 480, 453, 481, 486, 563, 482, 483, 484,
	485, 564, 0, 488, 489, 0, 487, 0, 490, 491,
	492, 493, 494, 495, 315, 496, 0, 497, 565, 566,
	567, 568, 0, 504, 0, 498, 499, 569, 500, 570,
	0, 501, 502, 503, 0, 505, 506, 0, 0, 507,
	508, 509, 511, 512, 510, 513, 0, 514, 0, 0,
	515, 516, 517, 571, 572, 573, 238, 519, 518, 574,
	0, 0, 0, 0, 520, 521, 575, 522, 523, 524,
	0, 0, 0, 244, 245, 246, 247, 248, 249, 0,
	250, 251, 0, 0, 0, 0, 0, 525, 0, 0,
	0, 0, 252, 253, 255, 254, 256, 257, 258, 526,
	527, 0, 259, 528, 260, 529, 0, 261, 262, 263,
	264, 265, 0, 0, 0, 266, 530, 531, 532, 0,
	267, 268, 533, 0, 0, 0, 269, 270, 271, 272,
	273, 274, 275, 0, 0, 277, 278, 279, 276, 0,
	280, 0, 281, 282, 283, 0, 284, 0, 285, 286,
	0, 0, 0, 0, 0, 0, 0, 287, 288, 289,
	290, 0, 291, 534, 535, 0, 295, 292, 293, 0,
	296, 294, 0, 297, 298, 299, 0, 0, 300, 301,
	302, 0, 303, 304, 0, 305, 306, 307, 0, 308,
	309, 536, 310, 311, 312, 314, 316, 313, 317, 318,
	319, 320, 537, 538, 0, 241, 0, 0, 0, 0,
	0, 321, 322, 323, 539, 0, 0, 0, 324, 0,
	325, 0, 0, 0, 326, 327, 540, 541, 328, 329,
	0, 330, 542, 0, 543, 331, 0, 332, 333, 334,
	335, 336, 544, 545, 546, 393, 0, 337, 338, 0,
	339, 340, 341, 342, 0, 0, 0, 242, 343, 344,
	346, 0, 0, 345, 547, 548, 0, 549, 0, 347,
	348, 0, 550, 0, 349, 350, 351, 0, 352, 0,
	0, 0, 353, 354, 355, 356, 357, 358, 0, 359,
	361, 360, 0, 362, 551, 0, 363, 364, 0, 0,
	365, 366, 367, 0, 0, 368, 369, 370, 371, 0,
	372, 373, 375, 377, 374, 376, 381, 378, 379, 380,
	383, 0, 382, 0, 384, 385, 386, 389, 390, 388,
	0, 387, 0, 243, 0, 391, 0, 552, 392, 553,
	394, 395, 0, 0, 396, 0, 0, 0, 398, 399,
	400, 0, 0, 401, 402, 554, 0, 403, 0, 555,
	404, 405, 397, 406, 407, 408, 409, 410, 411, 412,
	413, 0, 414, 415, 556, 557, 558, 416, 559, 417,
	418, 0, 419, 0, 420, 421, 422, 423, 424, 425,
	426, 560, 428, 427, 429, 0, 0, 0, 0, 0,
	0, 430, 0, 432, 433, 434, 431, 435, 436, 437,
	438, 0, 439, 440, 441, 0, 442, 443, 444, 445,
	561, 446, 0, 447, 448, 454, 455, 449, 450, 456,
	457, 458, 459, 460, 0, 462, 463, 461, 464, 465,
	466, 0, 467, 451, 452, 468, 469, 0, 470, 471,
	472, 473, 474, 475, 562, 0, 476, 0, 477, 478,
	479, 480, 453, 481, 486, 563, 482, 483, 484, 485,
	564, 0, 488, 489, 0, 487, 0, 490, 491, 492,
	493, 494, 495, 315, 496, 0, 497, 565, 566, 567,
	568, 0, 504, 0, 498, 499, 569, 500, 570, 0,
	501, 502, 503, 0, 505, 506, 0, 0, 507, 508,
	509, 511, 512, 510, 513, 0, 514, 0, 0, 515,
	516, 517, 571, 572, 573, 238, 519, 518, 574, 0,
	0, 0, 0, 520, 521, 575, 522, 523, 524, 0,
	0, 0, 244, 245, 246, 247, 248, 249, 0, 250,
	251, 0, 0, 0, 0, 0, 525, 0, 0, 0,
	0, 252, 253, 255, 254, 256, 257, 258, 526, 527,
	0, 259, 528, 260, 529, 0, 261, 262, 263, 264,
	265, 0, 0, 0, 266, 530, 531, 532, 0, 267,
	268, 533, 0, 0, 0, 269, 270, 271, 272, 273,
	274, 275, 0, 0, 277, 278, 279, 276, 0, 280,
	0, 281, 282, 283, 599, 284, 0, 285, 286, 0,
	0, 0, 0, 0, 0, 0, 287, 288, 289, 290,
	0, 291, 534, 535, 0, 295, 292, 293, 0, 296,
	294, 0, 297, 298, 299, 0, 0, 300, 301, 302,
	0, 303, 304, 0, 305, 306, 307, 0, 308, 309,
	536, 310, 311, 312, 314, 316, 313, 317, 318, 319,
	320, 537, 538, 0, 0, 0, 0, 0, 0, 0,
	321, 322, 323, 539, 0, 0, 0, 324, 0, 325,
	0, 0, 0, 326, 327, 540, 541, 328, 329, 600,
	330, 542, 0, 543, 331, 0, 332, 333, 334, 335,
	336, 544, 545, 546, 393, 0, 337, 338, 0, 339,
	340, 341, 342, 0, 0, 0, 0, 343, 344, 346,
	0, 0, 345, 547, 548, 0, 549, 0, 347, 348,
	0, 550, 0, 349, 350, 351, 0, 352, 0, 0,
	0, 353, 354, 355, 356, 357, 358, 0, 359, 361,
	360, 0, 362, 551, 0, 363, 364, 0, 0, 365,
	366, 367, 0, 0, 368, 369, 370, 371, 0, 372,
	373, 375, 377, 374, 376, 381, 378, 379, 380, 383,
	0, 382, 0, 384, 385, 386, 389, 390, 388, 0,
	387, 0, 0, 0, 391, 0, 552, 392, 553, 394,
	395, 0, 0, 396, 0, 0, 0, 398, 399, 400,
	0, 0, 401, 402, 554, 0, 403, 0, 555, 404,
	405, 397, 406, 407, 408, 409, 410, 411, 412, 413,
	0, 414, 415, 556, 557, 558, 416, 559, 417, 418,
	0, 419, 0, 420, 421, 422, 423, 424, 425, 426,
	560, 428, 427, 429, 0, 0, 0, 0, 0, 0,
	430, 0, 432, 433, 434, 431, 435, 436, 437, 438,
	0, 439, 440, 441, 0, 442, 443, 444, 445, 561,
	446, 0, 447, 448, 454, 455, 449, 450, 456, 457,
	458, 459, 460, 601, 462, 463, 461, 464, 465, 466,
	0, 467, 451, 452, 468, 469, 0, 470, 471, 472,
	473, 474, 475, 562, 0, 476, 0, 477, 478, 479,
	480, 453, 481, 486, 563, 482, 483, 484, 485, 564,
	0, 488, 489, 0, 487, 0, 490, 491, 492, 493,
	494, 495, 315, 496, 0, 497, 565, 566, 567, 568,
	0, 504, 0, 498, 499, 569, 500, 570, 0, 501,
	502, 503, 0, 505, 506, 0, 0, 507, 508, 509,
	511, 512, 510, 513, 0, 514, 0, 0, 515, 516,
	517, 571, 572, 573, 238, 519, 518, 574, 0, 0,
	0, 0, 520, 521, 575, 522, 523, 524, 0, 0,
	0, 244, 245, 246, 247, 248, 249, 0, 250, 251,
	0, 0, 0, 0, 0, 525, 0, 0, 0, 0,
	252, 253, 255, 254, 256, 257, 258, 526, 527, 0,
	259, 528, 260, 529, 0, 261, 262, 263, 264, 265,
	0, 0, 0, 266, 530, 531, 532, 0, 267, 268,
	533, 0, 0, 0, 269, 270, 271, 272, 273, 274,
	275, 0, 0, 277, 278, 279, 276, 0, 280, 0,
	281, 282, 283, 0, 284, 0, 285, 286, 0, 0,
	0, 0, 0, 0, 0, 287, 288, 2081, 290, 0,
	291, 534, 535, 0, 295, 292, 293, 0, 296, 294,
	0, 297, 298, 299, 0, 0, 300, 301, 302, 0,
	303, 304, 0, 305, 306, 307, 0, 308, 309, 536,
	310, 311, 312, 314, 316, 313, 317, 318, 319, 320,
	537, 538, 0, 241, 0, 0, 0, 0, 0, 321,
	322, 323, 539, 0, 0, 0, 324, 0, 325, 0,
	0, 0, 326, 327, 540, 541, 328, 329, 0, 330,
	542, 0, 543, 331, 0, 332, 333, 334, 335, 336,
	544, 545, 546, 393, 0, 337, 338, 0, 339, 340,
	341, 342, 0, 0, 0, 242, 343, 344, 346, 0,
	0, 345, 547, 548, 0, 549, 0, 347, 348, 0,
	550, 0, 349, 350, 351, 0, 352, 0, 0, 0,
	353, 354, 355, 356, 357, 358, 0, 359, 361, 360,
	0, 362, 551, 0, 363, 364, 0, 0, 365, 366,
	367, 0, 0, 368, 369, 370, 371, 0, 372, 373,
	375, 377, 374, 376, 381, 378, 379, 380, 383, 0,
	382, 0, 384, 385, 386, 389, 390, 388, 0, 387,
	0, 243, 0, 391, 0, 552, 392, 553, 394, 395,
	0, 0, 396, 0, 0, 0, 398, 399, 400, 0,
	0, 401, 402, 554, 0, 403, 0, 555, 404, 405,
	397, 406, 407, 408, 409, 410, 411, 412, 413, 0,
	414, 415, 556, 557, 558, 416, 559, 417, 418, 0,
	419, 0, 420, 421, 422, 423, 424, 425, 426, 560,
	428, 427, 429, 0, 0, 0, 0, 0, 0, 430,
	0, 432, 433, 434, 431, 435, 436, 437, 438, 0,
	439, 440, 441, 0, 442, 443, 444, 445, 561, 446,
	0, 447, 448, 454, 455, 449, 450, 456, 457, 458,
	459, 460, 0, 462, 463, 461, 464, 465, 466, 0,
	467, 451, 452, 468, 469, 0, 470, 471, 472, 473,
	474, 475, 562, 0, 476, 0, 477, 478, 479, 480,
	453, 481, 486, 563, 482, 483, 484, 485, 564, 0,
	488, 489, 0, 487, 0, 490, 491, 492, 493, 494,
	495, 315, 496, 0, 497, 565, 566, 567, 568, 0,
	504, 0, 498, 499, 569, 500, 570, 0, 501, 502,
	503, 0, 505, 506, 0, 0, 507, 508, 509, 511,
	512, 510, 513, 0, 514, 0, 0, 515, 516, 517,
	571, 572, 573, 238, 519, 518, 574, 0, 0, 0,
	0, 520, 521, 575, 522, 523, 524, 0, 0, 0,
	244, 245, 246, 247, 248, 249, 0, 250, 251, 0,
	0, 0, 0, 0, 525, 0, 0, 0, 0, 252,
	253, 255, 254, 256, 257, 258, 526, 527, 0, 259,
	528, 260, 529, 0, 261, 262, 263, 264, 265, 0,
	0, 0, 266, 530, 531, 532, 0, 267, 268, 533,
	0, 0, 0, 269, 270, 271, 272, 273, 274, 275,
	0, 0, 277, 278, 279, 276, 0, 280, 0, 281,
	282, 283, 0, 284, 0, 285, 286, 0, 0, 0,
	0, 0, 0, 0, 287, 288, 2079, 290, 0, 291,
	534, 535, 0, 295, 292, 293, 0, 296, 294, 0,
	297, 298, 299, 0, 0, 300, 301, 302, 0, 303,
	304, 0, 305, 306, 307, 0, 308, 309, 536, 310,
	311, 312, 314, 316, 313, 317, 318, 319, 320, 537,
	538, 0, 241, 0, 0, 0, 0, 0, 321, 322,
	323, 539, 0, 0, 0, 324, 0, 325, 0, 0,
	0, 326, 327, 540, 541, 328, 329, 0, 330, 542,
	0, 543, 331, 0, 332, 333, 334, 335, 336, 544,
	545, 546, 393, 0, 337, 338, 0, 339, 340, 341,
	342, 0, 0, 0, 242, 343, 344, 346, 0, 0,
	345, 547, 548, 0, 549, 0, 347, 348, 0, 550,
	0, 349, 350, 351, 0, 352, 0, 0, 0, 353,
	354, 355, 356, 357, 358, 0, 359, 361, 360, 0,
	362, 551, 0, 363, 364, 0, 0, 365, 366, 367,
	0, 0, 368, 369, 370, 371, 0, 372, 373, 375,
	377, 374, 376, 381, 378, 379, 380, 383, 0, 382,
	0, 384, 385, 386, 389, 390, 388, 0, 387, 0,
	243, 0, 391, 0, 552, 392, 553, 394, 395, 0,
	0, 396, 0, 0, 0, 398, 399, 400, 0, 0,
	401, 402, 554, 0, 403, 0, 555, 404, 405, 397,
	406, 407, 408, 409, 410, 411, 412, 413, 0, 414,
	415, 556, 557, 558, 416, 559, 417, 418, 0, 419,
	0, 420, 421, 422, 423, 424, 425, 426, 560, 428,
	427, 429, 0, 0, 0, 0, 0, 0, 430, 0,
	432, 433, 434, 431, 435, 436, 437, 438, 0, 439,
	440, 441, 0, 442, 443, 444, 445, 561, 446, 0,
	447, 448, 454, 455, 449, 450, 456, 457, 458, 459,
	460, 0, 462, 463, 461, 464, 465, 466, 0, 467,
	451, 452, 468, 469, 0, 470, 471, 472, 473, 474,
	475, 562, 0, 476, 0, 477, 478, 479, 480, 453,
	481, 486, 563, 482, 483, 484, 485, 564, 0, 488,
	489, 0, 487, 0, 490, 491, 492, 493, 494, 495,
	315, 496, 0, 497, 565, 566, 567, 568, 0, 504,
	0, 498, 499, 569, 500, 570, 0, 501, 502, 503,
	0, 505, 506, 0, 0, 507, 508, 509, 511, 512,
	510, 513, 0, 514, 0, 0, 515, 516, 517, 571,
	572, 573, 238, 519, 518, 574, 0, 0, 0, 0,
	520, 521, 575, 522, 523, 524, 0, 0, 0, 244,
	245, 246, 247, 248, 249, 0, 250, 251, 0, 0,
	0, 0, 0, 525, 0, 0, 0, 0, 252, 253,
	255, 254, 256, 257, 258, 526, 527, 0, 259, 528,
	260, 529, 0, 261, 262, 263, 264, 265, 0, 0,
	0, 266, 530, 531, 532, 0, 267, 268, 533, 0,
	0, 0, 269, 270, 271, 272, 273, 274, 275, 0,
	0, 277, 278, 279, 276, 0, 280, 0, 281, 282,
	283, 0, 284, 0, 285, 286, 0, 0, 0, 0,
	0, 0, 0, 287, 288, 2077, 290, 0, 291, 534,
	535, 0, 295, 292, 293, 0, 296, 294, 0, 297,
	298, 299, 0, 0, 300, 301, 302, 0, 303, 304,
	0, 305, 306, 307, 0, 308, 309, 536, 310, 311,
	312, 314, 316, 313, 317, 318, 319, 320, 537, 538,
	0, 241, 0, 0, 0, 0, 0, 321, 322, 323,
	539, 0, 0, 0, 324, 0, 325, 0, 0, 0,
	326, 327, 540, 541, 328, 329, 0, 330, 542, 0,
	543, 331, 0, 332, 333, 334, 335, 336, 544, 545,
	546, 393, 0, 337, 338, 0, 339, 340, 341, 342,
	0, 0, 0, 242, 343, 344, 346, 0, 0, 345,
	547, 548, 0, 549, 0, 347, 348, 0, 550, 0,
	349, 350, 351, 0, 352, 0, 0, 0, 353, 354,
	355, 356, 357, 358, 0, 359, 361, 360, 0, 362,
	551, 0, 363, 364, 0, 0, 365, 366, 367, 0,
	0, 368, 369, 370, 371, 0, 372, 373, 375, 377,
	374, 376, 381, 378, 379, 380, 383, 0, 382, 0,
	384, 385, 386, 389, 390, 388, 0, 387, 0, 243,
	0, 391, 0, 552, 392, 553, 394, 395, 0, 0,
	396, 0, 0, 0, 398, 399, 400, 0, 0, 401,
	402, 554, 0, 403, 0, 555, 404, 405, 397, 406,
	407, 408, 409, 410, 411, 412, 413, 0, 414, 415,
	556, 557, 558, 416, 559, 417, 418, 0, 419, 0,
	420, 421, 422, 423, 424, 425, 426, 560, 428, 427,
	429, 0, 0, 0, 0, 0, 0, 430, 0, 432,
	433, 434, 431, 435, 436, 437, 438, 0, 439, 440,
	441, 0, 442, 443, 444, 445, 561, 446, 0, 447,
	448, 454, 455, 449, 450, 456, 457, 458, 459, 460,
	0, 462, 463, 461, 464, 465, 466, 0, 467, 451,
	452, 468, 469, 0, 470, 471, 472, 473, 474, 475,
	562, 0, 476, 0, 477, 478, 479, 480, 453, 481,
	486, 563, 482, 483, 484, 485, 564, 0, 488, 489,
	0, 487, 0, 490, 491, 492, 493, 494, 495, 315,
	496, 0, 497, 565, 566, 567, 568, 0, 504, 0,
	498, 499, 569, 500, 570, 0, 501, 502, 503, 0,
	505, 506, 0, 0, 507, 508, 509, 511, 512, 510,
	513, 0, 514, 0, 0, 515, 516, 517, 571, 572,
	573, 238, 519, 518, 574, 0, 0, 0, 0, 520,
	521, 575, 522, 523, 524, 0, 0, 0, 244, 245,
	246, 247, 248, 249, 0, 250, 251, 0, 0, 0,
	0, 0, 525, 0, 0, 0, 0, 252, 253, 255,
	254, 256, 257, 258, 526, 527, 0, 259, 528, 260,
	529, 0, 261, 262, 263, 264, 265, 0, 0, 0,
	266, 530, 531, 532, 0, 267, 268, 533, 0, 0,
	0, 269, 270, 271, 272, 273, 274, 275, 0, 0,
	277, 278, 279, 276, 0, 280, 0, 281, 282, 283,
	0, 284, 0, 285, 286, 0, 0, 0, 0, 0,
	0, 0, 287, 288, 289, 290, 0, 291, 534, 535,
	0, 295, 292, 293, 0, 296, 294, 0, 297, 298,
	299, 0, 0, 300, 301, 302, 0, 303, 304, 0,
	305, 306, 307, 0, 308, 309, 536, 310, 311, 312,
	314, 316, 313, 317, 318, 319, 320, 537, 538, 0,
	241, 0, 0, 0, 0, 0, 321, 322, 323, 539,
	0, 0, 0, 324, 0, 325, 0, 0, 0, 326,
	327, 540, 541, 328, 329, 0, 330, 542, 0, 543,
	331, 0, 332, 333, 334, 335, 336, 2015, 545, 546,
	393, 0, 337, 338, 0, 339, 340, 341, 342, 0,
	0, 0, 242, 343, 344, 346, 0, 0, 345, 547,
	548, 0, 549, 0, 347, 348, 0, 550, 0, 349,
	350, 351, 0, 352, 0, 0, 0, 353, 354, 355,
	356, 357, 358, 0, 359, 361, 360, 0, 362, 551,
	0, 363, 364, 0, 0, 365, 366, 367, 0, 0,
	368, 369, 370, 371, 0, 372, 373, 375, 377, 374,
	376, 381, 378, 379, 380, 383, 0, 382, 0, 384,
	385, 386, 389, 390, 388, 0, 387, 0, 243, 0,
	391, 0, 552, 392, 553, 394, 395, 0, 0, 396,
	0, 0, 0, 398, 399, 400, 0, 0, 401, 402,
	554, 0, 403, 0, 555, 404, 405, 397, 406, 407,
	408, 409, 410, 411, 412, 413, 0, 414, 415, 556,
	557, 558, 416, 559, 417, 418, 0, 419, 0, 420,
	421, 422, 423, 424, 425, 426, 560, 428, 427, 429,
	0, 0, 0, 0, 0, 0, 430, 0, 432, 433,
	434, 431, 435, 436, 437, 438, 0, 439, 440, 441,
	0, 442, 443, 444, 445, 561, 446, 0, 447, 448,
	454, 455, 449, 450, 456, 457, 458, 459, 460, 0,
	462, 463, 461, 464, 465, 466, 0, 467, 451, 452,
	468, 469, 0, 470, 471, 472, 473, 474, 475, 562,
	0, 476, 0, 477, 478, 479, 480, 453, 481, 486,
	563, 482, 483, 484, 485, 564, 0, 488, 489, 0,
	487, 0, 490, 491, 492, 493, 494, 495, 315, 496,
	0, 497, 565, 566, 567, 568, 0, 504, 0, 498,
	499, 569, 500, 570, 0, 501, 502, 503, 0, 505,
	506, 0, 0, 507, 508, 509, 511, 512, 510, 513,
	0, 514, 0, 0, 515, 516, 517, 571, 572, 573,
	0, 519, 518, 574, 761, 0, 238, 0, 520, 521,
	575, 522, 523, 524, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 244, 245, 246, 247, 248, 249, 0,
	250, 251, 0, 0, 0, 0, 0, 525, 0, 0,
	0, 0, 252, 253, 255, 254, 256, 257, 258, 526,
	527, 0, 259, 528, 260, 529, 0, 261, 262, 263,
	264, 265, 0, 0, 0, 266, 530, 531, 532, 0,
	267, 268, 533, 0, 0, 0, 269, 270, 271, 272,
	273, 274, 275, 0, 0, 277, 278, 279, 276, 0,
	280, 0, 281, 282, 283, 0, 284, 0, 285, 286,
	0, 0, 0, 0, 0, 0, 0, 287, 288, 289,
	290, 0, 291, 534, 535, 0, 295, 292, 293, 0,
	296, 294, 0, 297, 298, 299, 0, 0, 300, 301,
	302, 0, 303, 304, 0, 305, 306, 307, 0, 308,
	309, 536, 310, 311, 312, 314, 316, 313, 317, 318,
	319, 320, 537, 538, 0, 0, 0, 0, 0, 0,
	0, 321, 322, 323, 539, 0, 0, 0, 324, 0,
	325, 0, 0, 0, 326, 327, 540, 541, 328, 329,
	0, 330, 542, 0, 543, 331, 0, 332, 333, 334,
	335, 336, 544, 545, 546, 393, 0, 337, 338, 0,
	339, 340, 341, 342, 0, 0, 0, 0, 343, 344,
	346, 0, 0, 345, 547, 548, 0, 549, 760, 347,
	348, 0, 550, 0, 349, 350, 351, 0, 352, 0,
	0, 0, 353, 354, 355, 356, 357, 358, 0, 359,
	361, 360, 0, 362, 551, 0, 363, 364, 0, 0,
	365, 366, 367, 0, 0, 368, 369, 370, 371, 0,
	372, 373, 375, 377, 374, 376, 381, 378, 379, 380,
	383, 0, 382, 0, 384, 385, 386, 389, 390, 388,
	0, 387, 0, 0, 0, 391, 0, 552, 392, 553,
	394, 395, 0, 0, 396, 0, 0, 0, 398, 399,
	400, 0, 0, 401, 402, 554, 0, 403, 0, 555,
	404, 405, 397, 406, 407, 408, 409, 410, 411, 412,
	413, 0, 414, 415, 556, 557, 558, 416, 559, 417,
	418, 0, 419, 0, 420, 421, 422, 423, 424, 425,
	426, 560, 428, 427, 429, 0, 0, 0, 0, 0,
	0, 430, 0, 432, 433, 434, 431, 435, 436, 437,
	438, 0, 439, 440, 441, 0, 442, 443, 444, 445,
	561, 446, 0, 447, 448, 454, 455, 449, 450, 456,
	457, 458, 459, 460, 0, 462, 463, 461, 464, 465,
	466, 0, 467, 451, 452, 468, 469, 0, 470, 471,
	472, 473, 474, 475, 562, 0, 476, 0, 477, 478,
	479, 480, 453, 481, 486, 563, 482, 483, 484, 485,
	564, 0, 488, 489, 0, 487, 759, 490, 491, 492,
	493, 494, 495, 315, 496, 0, 497, 565, 566, 567,
	568, 0, 504, 0, 498, 499, 569, 500, 570, 0,
	501, 502, 503, 0, 505, 506, 0, 0, 507, 508,
	509, 511, 512, 510, 513, 0, 514, 0, 0, 515,
	516, 517, 571, 572, 573, 238, 519, 518, 574, 0,
	0, 0, 0, 520, 521, 575, 522, 523, 524, 0,
	0, 0, 244, 245, 246, 247, 248, 249, 0, 250,
	251, 0, 0, 0, 0, 0, 525, 0, 0, 0,
	0, 252, 253, 255, 254, 256, 257, 258, 526, 527,
	0, 259, 528, 260, 529, 0, 261, 262, 263, 264,
	265, 0, 0, 0, 266, 530, 531, 532, 0, 267,
	268, 533, 0, 0, 0, 269, 270, 271, 272, 273,
	274, 275, 0, 0, 277, 278, 279, 276, 0, 280,
	0, 281, 282, 283, 0, 284, 0, 285, 286, 0,
	0, 0, 0, 0, 0, 0, 287, 288, 289, 290,
	0, 291, 534, 535, 0, 295, 292, 293, 0, 296,
	294, 0, 297, 298, 299, 0, 0, 300, 301, 302,
	0, 303, 304, 0, 305, 306, 307, 0, 308, 309,
	536, 310, 311, 312, 314, 316, 313, 317, 318, 319,
	320, 537, 538, 0, 2647, 0, 0, 0, 0, 0,
	321, 322, 323, 539, 0, 0, 0, 324, 0, 325,
	0, 0, 0, 326, 327, 540, 541, 328, 329, 0,
	330, 542, 0, 543, 331, 0, 332, 333, 334, 335,
	336, 544, 545, 546, 393, 0, 337, 338, 0, 339,
	340, 341, 342, 0, 0, 0, 0, 343, 344, 346,
	0, 0, 345, 547, 548, 0, 549, 0, 347, 348,
	0, 550, 0, 349, 350, 351, 0, 352, 0, 0,
	0, 353, 354, 355, 356, 357, 358, 0, 359, 361,
	360, 0, 362, 551, 0, 363, 364, 0, 0, 365,
	366, 367, 0, 0, 368, 369, 370, 371, 0, 372,
	373, 375, 377, 374, 376, 381, 378, 379, 380, 383,
	0, 382, 0, 384, 385, 386, 389, 390, 388, 0,
	387, 0, 0, 0, 391, 0, 552, 392, 553, 394,
	395, 0, 0, 396, 0, 0, 0, 398, 399, 400,
	0, 0, 401, 402, 554, 0, 403, 0, 555, 404,
	405, 397, 406, 407, 408, 409, 410, 411, 412, 413,
	0, 414, 415, 556, 557, 558, 416, 559, 417, 418,
	3612, 419, 0, 420, 421, 422, 423, 424, 425, 426,
	560, 428, 427, 429, 0, 0, 0, 0, 0, 0,
	430, 0, 432, 433, 434, 431, 435, 436, 437, 438,
	0, 439, 440, 441, 0, 442, 443, 444, 445, 561,
	446, 0, 447, 448, 454, 455, 449, 450, 456, 457,
	458, 459, 460, 0, 462, 463, 461, 464, 465, 466,
	0, 467, 451, 452, 468, 469, 0, 470, 471, 472,
	473, 474, 475, 562, 0, 476, 0, 477, 478, 479,
	480, 453, 481, 486, 563, 482, 483, 484, 485, 564,
	0, 488, 489, 0, 487, 0, 490, 491, 492, 493,
	494, 495, 315, 496, 0, 497, 565, 566, 567, 568,
	0, 504, 0, 498, 499, 569, 500, 570, 0, 501,
	502, 503, 0, 505, 506, 0, 0, 507, 508, 509,
	511, 512, 510, 513, 0, 514, 0, 0, 515, 516,
	517, 571, 572, 573, 0, 519, 518, 574, 586, 0,
	238, 0, 520, 521, 575, 522, 523, 524, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 244, 245, 246,
	247, 248, 249, 585, 250, 251, 0, 0, 0, 0,
	0, 525, 0, 0, 0, 0, 252, 253, 255, 254,
	256, 257, 258, 526, 527, 0, 259, 528, 260, 529,
	0, 261, 262, 263, 264, 265, 0, 0, 0, 266,
	530, 531, 532, 0, 267, 268, 533, 0, 0, 0,
	269, 270, 271, 272, 273, 274, 275, 0, 0, 277,
	278, 279, 276, 0, 280, 0, 281, 282, 283, 0,
	284, 0, 285, 286, 0, 0, 0, 0, 0, 0,
	0, 287, 288, 289, 290, 0, 291, 534, 535, 0,
	295, 292, 293, 0, 296, 294, 0, 297, 298, 299,
	0, 0, 300, 301, 302, 0, 303, 304, 0, 305,
	306, 307, 0, 308, 309, 536, 310, 311, 312, 314,
	316, 313, 317, 318, 319, 320, 537, 538, 0, 0,
	0, 0, 0, 0, 0, 321, 322, 323, 539, 0,
	0, 0, 324, 0, 325, 0, 0, 0, 326, 327,
	540, 541, 328, 329, 0, 330, 542, 0, 543, 331,
	0, 332, 333, 334, 335, 336, 544, 545, 546, 393,
	0, 337, 338, 0, 339, 340, 341, 342, 0, 0,
	0, 0, 343, 344, 346, 0, 0, 345, 547, 548,
	0, 549, 0, 347, 348, 0, 550, 0, 349, 350,
	351, 0, 352, 0, 0, 0, 353, 354, 355, 356,
	357, 358, 0, 359, 361, 360, 0, 362, 551, 0,
	363, 364, 0, 0, 365, 366, 367, 0, 0, 368,
	369, 370, 371, 0, 372, 373, 375, 377, 374, 376,
	381, 378, 379, 380, 383, 0, 382, 0, 384, 385,
	386, 389, 390, 388, 0, 387, 0, 0, 0, 391,
	0, 552, 392, 553, 394, 395, 0, 0, 396, 0,
	0, 0, 398, 399, 400, 0, 0, 401, 402, 554,
	0, 403, 0, 555, 404, 405, 397, 406, 407, 408,
	409, 410, 411, 412, 413, 0, 414, 415, 556, 557,
	558, 416, 559, 584, 418, 0, 419, 0, 420, 421,
	422, 423, 424, 425, 426, 560, 428, 427, 429, 0,
	0, 0, 0, 0, 0, 430, 0, 432, 433, 434,
	431, 435, 436, 437, 438, 0, 439, 440, 441, 0,
	442, 443, 444, 445, 561, 446, 0, 447, 448, 454,
	455, 449, 450, 456, 457, 458, 459, 460, 0, 462,
	463, 461, 464, 465, 466, 0, 467, 451, 452, 468,
	469, 0, 470, 471, 472, 473, 474, 475, 562, 0,
	476, 0, 477, 478, 479, 480, 453, 481, 486, 563,
	482, 483, 484, 485, 564, 0, 488, 489, 0, 487,
	0, 490, 491, 492, 493, 494, 495, 315, 496, 0,
	497, 565, 566, 567, 568, 0, 504, 0, 498, 499,
	569, 500, 570, 0, 501, 502, 503, 0, 505, 506,
	0, 0, 507, 508, 509, 511, 512, 510, 513, 0,
	514, 0, 0, 515, 516, 517, 571, 572, 573, 0,
	519, 518, 574, 238, 2634, 0, 0, 520, 521, 575,
	522, 523, 524, 0, 0, 0, 0, 0, 0, 0,
	244, 245, 246, 247, 248, 249, 0, 250, 251, 0,
	0, 0, 0, 0, 525, 0, 0, 0, 0, 252,
	253, 255, 254, 256, 257, 258, 526, 527, 0, 259,
	528, 260, 529, 0, 261, 262, 263, 264, 265, 0,
	0, 0, 266, 530, 531, 532, 0, 267, 268, 533,
	0, 0, 0, 269, 270, 271, 272, 273, 274, 275,
	0, 0, 277, 278, 279, 276, 0, 280, 0, 281,
	282, 283, 0, 284, 0, 285, 286, 0, 0, 0,
	0, 0, 0, 0, 287, 288, 289, 290, 0, 291,
	534, 535, 0, 295, 292, 293, 0, 296, 294, 0,
	297, 298, 299, 0, 0, 300, 301, 302, 0, 303,
	304, 0, 305, 306, 307, 0, 308, 309, 536, 310,
	311, 312, 314, 316, 313, 317, 318, 319, 320, 537,
	538, 0, 0, 0, 0, 0, 0, 0, 321, 322,
	323, 539, 0, 0, 0, 324, 0, 325, 0, 0,
	0, 326, 327, 540, 541, 328, 329, 0, 330, 542,
	0, 543, 331, 0, 332, 333, 334, 335, 336, 544,
	545, 546, 393, 0, 337, 338, 0, 339, 340, 341,
	342, 0, 0, 0, 0, 343, 344, 346, 0, 0,
	345, 547, 548, 0, 549, 0, 347, 348, 0, 550,
	0, 349, 350, 351, 0, 352, 0, 0, 0, 353,
	354, 355, 356, 357, 358, 0, 359, 361, 360, 0,
	362, 551, 0, 363, 364, 0, 0, 365, 366, 367,
	0, 0, 368, 369, 370, 371, 0, 372, 373, 375,
	377, 374, 376, 381, 378, 379, 380, 383, 0, 382,
	0, 384, 385, 386, 389, 390, 388, 0, 387, 0,
	0, 0, 391, 0, 552, 392, 553, 394, 395, 0,
	0, 396, 0, 0, 0, 398, 399, 400, 0, 0,
	401, 402, 554, 0, 403, 0, 555, 404, 405, 397,
	406, 407, 408, 409, 410, 411, 412, 413, 0, 414,
	415, 556, 557, 558, 416, 559, 417, 418, 0, 419,
	0, 420, 421, 422, 423, 424, 425, 426, 560, 428,
	427, 429, 0, 0, 0, 0, 0, 0, 430, 0,
	432, 433, 434, 431, 435, 436, 437, 438, 0, 439,
	440, 441, 0, 442, 443, 444, 445, 561, 446, 0,
	447, 448, 454, 455, 449, 450, 456, 457, 458, 459,
	460, 0, 462, 463, 461, 464, 465, 466, 0, 467,
	451, 452, 468, 469, 0, 470, 471, 472, 473, 474,
	475, 562, 0, 476, 0, 477, 478, 479, 480, 453,
	481, 486, 563, 482, 483, 484, 485, 564, 0, 488,
	489, 0, 487, 0, 490, 491, 492, 493, 494, 495,
	315, 496, 0, 497, 565, 566, 567, 568, 0, 504,
	0, 498, 499, 569, 500, 570, 0, 501, 502, 503,
	0, 505, 506, 0, 0, 507, 508, 509, 511, 512,
	510, 513, 0, 514, 0, 0, 515, 516, 517, 571,
	572, 573, 0, 519, 518, 574, 238, 3621, 0, 0,
	520, 521, 575, 522, 523, 524, 0, 0, 0, 0,
	0, 0, 0, 244, 245, 246, 247, 248, 249, 0,
	250, 251, 0, 0, 0, 0, 0, 525, 0, 0,
	0, 0, 252, 253, 255, 254, 256, 257, 258, 526,
	527, 0, 259, 528, 260, 529, 0, 261, 262, 263,
	264, 265, 0, 0, 0, 266, 530, 531, 532, 0,
	267, 268, 533, 0, 0, 0, 269, 270, 271, 272,
	273, 274, 275, 0, 0, 277, 278, 279, 276, 0,
	280, 0, 281, 282, 283, 0, 284, 0, 285, 286,
	0, 0, 0, 0, 0, 0, 0, 287, 288, 289,
	290, 0, 291, 534, 535, 0, 295, 292, 293, 0,
	296, 294, 0, 297, 298, 299, 0, 0, 300, 301,
	302, 0, 303, 304, 0, 305, 306, 307, 0, 308,
	309, 536, 310, 311, 312, 314, 316, 313, 317, 318,
	319, 320, 537, 538, 0, 0, 0, 0, 0, 0,
	0, 321, 322, 323, 539, 0, 0, 0, 324, 0,
	325, 0, 0, 0, 326, 327, 540, 541, 328, 329,
	0, 330, 542, 0, 543, 331, 0, 332, 333, 334,
	335, 336, 544, 545, 546, 393, 0, 337, 338, 0,
	339, 340, 341, 342, 0, 0, 0, 0, 343, 344,
	346, 0, 0, 345, 547, 548, 0, 549, 0, 347,
	348, 0, 550, 0, 349, 350, 351, 0, 352, 0,
	0, 0, 353, 354, 355, 356, 357, 358, 0, 359,
	361, 360, 0, 362, 551, 0, 363, 364, 0, 0,
	365, 366, 367, 0, 0, 368, 369, 370, 371, 0,
	372, 373, 375, 377, 374, 376, 381, 378, 379, 380,
	383, 0, 382, 0, 384, 385, 386, 389, 390, 388,
	0, 387, 0, 0, 0, 391, 0, 552, 392, 553,
	394, 395, 0, 0, 396, 0, 0, 0, 398, 399,
	400, 0, 0, 401, 402, 554, 0, 403, 0, 555,
	404, 405, 397, 406, 407, 408, 409, 410, 411, 412,
	413, 0, 414, 415, 556, 557, 558, 416, 559, 417,
	418, 0, 419, 0, 420, 421, 422, 423, 424, 425,
	426, 560, 428, 427, 429, 0, 0, 0, 0, 0,
	0, 430, 0, 432, 433, 434, 431, 435, 436, 437,
	438, 0, 439, 440, 441, 0, 442, 443, 444, 445,
	561, 446, 0, 447, 448, 454, 455, 449, 450, 456,
	457, 458, 459, 460, 0, 462, 463, 461, 464, 465,
	466, 0, 467, 451, 452, 468, 469, 0, 470, 471,
	472, 473, 474, 475, 562, 0, 476, 0, 477, 478,
	479, 480, 453, 481, 486, 563, 482, 483, 484, 485,
	564, 0, 488, 489, 0, 487, 0, 490, 491, 492,
	493, 494, 495, 315, 496, 0, 497, 565, 566, 567,
	568, 0, 504, 0, 498, 499, 569, 500, 570, 0,
	501, 502, 503, 0, 505, 506, 0, 0, 507, 508,
	509, 511, 512, 510, 513, 0, 514, 0, 0, 515,
	516, 517, 571, 572, 573, 238, 519, 518, 574, 0,
	0, 0, 0, 520, 521, 575, 522, 523, 524, 0,
	0, 0, 244, 245, 246, 247, 248, 249, 0, 250,
	251, 0, 0, 0, 0, 0, 525, 0, 0, 0,
	0, 252, 253, 255, 254, 256, 257, 258, 526, 527,
	0, 259, 528, 260, 529, 0, 261, 262, 263, 264,
	265, 0, 0, 0, 266, 530, 531, 532, 0, 267,
	268, 533, 0, 0, 0, 269, 270, 271, 272, 273,
	274, 275, 0, 0, 277, 278, 279, 276, 0, 280,
	0, 281, 282, 283, 0, 284, 0, 285, 286, 0,
	0, 0, 0, 0, 0, 0, 287, 288, 289, 290,
	0, 291, 534, 535, 3343, 295, 292, 293, 0, 296,
	294, 0, 297, 298, 299, 0, 0, 300, 301, 302,
	0, 303, 304, 0, 305, 306, 307, 0, 308, 309,
	536, 310, 311, 312, 314, 316, 313, 317, 318, 319,
	320, 537, 538, 0, 0, 0, 0, 0, 0, 0,
	321, 322, 323, 539, 0, 0, 0, 324, 0, 325,
	0, 0, 0, 326, 327, 540, 541, 328, 329, 0,
	330, 542, 0, 543, 331, 0, 332, 333, 334, 335,
	336, 544, 545, 546, 393, 0, 337, 338, 0, 339,
	340, 341, 342, 0, 0, 0, 0, 343, 344, 346,
	0, 0, 345, 547, 548, 0, 549, 0, 347, 348,
	0, 550, 0, 349, 350, 351, 0, 352, 0, 0,
	0, 353, 354, 355, 356, 357, 358, 0, 359, 361,
	360, 0, 362, 551, 0, 363, 364, 0, 0, 365,
	366, 367, 0, 0, 368, 369, 370, 371, 0, 372,
	373, 375, 377, 374, 376, 381, 378, 379, 380, 383,
	0, 382, 0, 384, 385, 386, 389, 390, 388, 0,
	387, 0, 0, 0, 391, 0, 552, 392, 553, 394,
	395, 0, 0, 396, 0, 0, 0, 398, 399, 400,
	0, 0, 401, 402, 554, 0, 403, 0, 555, 404,
	405, 397, 406, 407, 408, 409, 410, 411, 412, 413,
	0, 414, 415, 556, 557, 558, 416, 559, 417, 418,
	0, 419, 0, 420, 421, 422, 423, 424, 425, 426,
	560, 428, 427, 429, 0, 0, 0, 0, 0, 0,
	430, 0, 432, 433, 434, 431, 435, 436, 437, 438,
	0, 439, 440, 441, 0, 442, 443, 444, 445, 561,
	446, 0, 447, 448, 454, 455, 449, 450, 456, 457,
	458, 459, 460, 0, 462, 463, 461, 464, 465, 466,
	0, 467, 451, 452, 468, 469, 0, 470, 471, 472,
	473, 474, 475, 562, 0, 476, 0, 477, 478, 479,
	480, 453, 481, 486, 563, 482, 483, 484, 485, 564,
	0, 488, 489, 0, 487, 0, 490, 491, 492, 493,
	494, 495, 315, 496, 0, 497, 565, 566, 567, 568,
	0, 504, 0, 498, 499, 569, 500, 570, 0, 501,
	502, 503, 0, 505, 506, 0, 0, 507, 508, 509,
	511, 512, 510, 513, 0, 514, 0, 0, 515, 516,
	517, 571, 572, 573, 238, 519, 518, 574, 0, 0,
	0, 0, 520, 521, 575, 522, 523, 524, 0, 0,
	0, 244, 245, 246, 247, 248, 249, 0, 250, 251,
	0, 0, 0, 0, 0, 525, 0, 2386, 0, 0,
	252, 253, 255, 254, 256, 257, 258, 526, 527, 0,
	259, 528, 260, 529, 0, 261, 262, 263, 264, 265,
	0, 0, 0, 266, 530, 531, 532, 0, 267, 268,
	533, 0, 0, 0, 269, 270, 271, 272, 273, 274,
	275, 0, 0, 277, 278, 279, 276, 0, 280, 0,
	281, 282, 283, 0, 284, 0, 285, 286, 0, 0,
	0, 0, 0, 0, 0, 287, 288, 289, 290, 0,
	291, 534, 535, 0, 295, 292, 293, 0, 296, 294,
	0, 297, 298, 299, 0, 0, 300, 301, 302, 0,
	303, 304, 0, 305, 306, 307, 0, 308, 309, 536,
	310, 311, 312, 314, 316, 313, 317, 318, 319, 320,
	537, 538, 0, 0, 0, 0, 0, 0, 0, 321,
	322, 323, 539, 0, 0, 0, 324, 0, 325, 0,
	0, 0, 326, 327, 540, 541, 328, 329, 0, 330,
	542, 0, 543, 331, 0, 332, 333, 334, 335, 336,
	544, 545, 546, 393, 0, 337, 338, 0, 339, 340,
	341, 342, 0, 0, 0, 0, 343, 344, 346, 0,
	0, 345, 547, 548, 0, 549, 0, 347, 348, 0,
	550, 0, 349, 350, 351, 0, 352, 0, 0, 0,
	353, 354, 355, 356, 357, 358, 0, 359, 361, 360,
	0, 362, 551, 0, 363, 364, 0, 0, 365, 366,
	367, 0, 0, 368, 369, 370, 371, 0, 372, 373,
	375, 377, 374, 376, 381, 378, 379, 380, 383, 0,
	382, 0, 384, 385, 386, 389, 390, 388, 0, 387,
	0, 0, 0, 391, 0, 552, 392, 553, 394, 395,
	0, 0, 396, 0, 0, 0, 398, 399, 400, 0,
	0, 401, 402, 554, 0, 403, 0, 555, 404, 405,
	397, 406, 407, 408, 409, 410, 411, 412, 413, 0,
	414, 415, 556, 557, 558, 416, 559, 417, 418, 0,
	419, 0, 420, 421, 422, 423, 424, 425, 426, 560,
	428, 427, 429, 0, 0, 0, 0, 0, 0, 430,
	0, 432, 433, 434, 431, 435, 436, 437, 438, 0,
	439, 440, 441, 0, 442, 443, 444, 445, 561, 446,
	0, 447, 448, 454, 455, 449, 450, 456, 457, 458,
	459, 460, 0, 462, 463, 461, 464, 465, 466, 0,
	467, 451, 452, 468, 469, 0, 470, 471, 472, 473,
	474, 475, 562, 0, 476, 0, 477, 478, 479, 480,
	453, 481, 486, 563, 482, 483, 484, 485, 564, 0,
	488, 489, 0, 487, 0, 490, 491, 492, 493, 494,
	495, 315, 496, 0, 497, 565, 566, 567, 568, 0,
	504, 0, 498, 499, 569, 500, 570, 0, 501, 502,
	503, 0, 505, 506, 0, 0, 507, 508, 509, 511,
	512, 510, 513, 0, 514, 0, 0, 515, 516, 517,
	571, 572, 573, 0, 519, 518, 574, 238, 2634, 0,
	0, 520, 521, 575, 522, 523, 524, 0, 0, 0,
	0, 0, 0, 0, 244, 245, 246, 247, 248, 249,
	0, 250, 251, 0, 0, 0, 0, 0, 525, 0,
	0, 0, 0, 252, 253, 255, 254, 256, 257, 258,
	526, 527, 0, 259, 528, 260, 529, 0, 261, 262,
	263, 264, 265, 0, 0, 0, 266, 530, 531, 532,
	0, 267, 268, 533, 0, 0, 0, 269, 270, 271,
	272, 273, 274, 275, 0, 0, 277, 278, 279, 276,
	0, 280, 0, 281, 282, 283, 0, 284, 0, 285,
	286, 0, 0, 0, 0, 0, 0, 0, 287, 288,
	289, 290, 0, 291, 534, 535, 0, 295, 292, 293,
	0, 296, 294, 0, 297, 298, 299, 0, 0, 300,
	301, 302, 0, 303, 304, 0, 305, 306, 307, 0,
	308, 309, 536, 310, 311, 312, 314, 316, 313, 317,
	318, 319, 320, 537, 538, 0, 0, 0, 0, 0,
	0, 0, 321, 322, 323, 539, 0, 0, 0, 324,
	0, 325, 0, 0, 0, 326, 327, 540, 541, 328,
	329, 0, 330, 542, 0, 543, 331, 0, 332, 333,
	334, 335, 336, 544, 545, 546, 393, 0, 337, 338,
	0, 339, 340, 341, 342, 0, 0, 0, 0, 343,
	344, 346, 0, 0, 345, 547, 548, 0, 549, 0,
	347, 348, 0, 550, 0, 349, 350, 351, 0, 352,
	0, 0, 0, 353, 354, 355, 356, 357, 358, 0,
	359, 361, 360, 0, 362, 551, 0, 363, 364, 0,
	0, 365, 366, 367, 0, 0, 368, 369, 370, 371,
	0, 372, 373, 375, 377, 374, 376, 381, 378, 379,
	380, 383, 0, 382, 0, 384, 385, 386, 389, 390,
	388, 0, 387, 0, 0, 0, 391, 0, 552, 392,
	553, 394, 395, 0, 0, 396, 0, 0, 0, 398,
	399, 2631, 0, 0, 401, 402, 554, 0, 403, 0,
	555, 404, 405, 397, 406, 407, 408, 409, 410, 411,
	412, 413, 0, 414, 415, 556, 557, 558, 416, 559,
	417, 418, 0, 419, 0, 420, 421, 422, 423, 424,
	425, 426, 560, 428, 427, 429, 0, 0, 0, 0,
	0, 0, 430, 0, 432, 433, 434, 431, 435, 436,
	437, 438, 0, 439, 440, 441, 0, 442, 443, 444,
	445, 561, 446, 0, 447, 448, 454, 455, 449, 450,
	456, 457, 458, 459, 460, 0, 462, 463, 461, 464,
	465, 466, 0, 467, 451, 452, 468, 469, 0, 470,
	471, 472, 473, 474, 475, 562, 0, 476, 0, 477,
	478, 479, 480, 453, 481, 486, 563, 482, 483, 484,
	485, 564, 0, 488, 489, 0, 487, 0, 490, 491,
	492, 493, 494, 495, 315, 496, 0, 497, 565, 566,
	567, 568, 0, 504, 0, 498, 499, 569, 500, 570,
	0, 501, 502, 503, 0, 505, 506, 0, 0, 507,
	508, 509, 511, 512, 510, 513, 0, 514, 0, 0,
	515, 516, 517, 571, 572, 573, 238, 519, 518, 574,
	0, 0, 0, 0, 520, 521, 575, 522, 523, 524,
	0, 0, 0, 244, 245, 246, 247, 248, 249, 2058,
	250, 251, 0, 0, 0, 0, 0, 525, 0, 0,
	0, 0, 252, 253, 255, 254, 256, 257, 258, 526,
	527, 0, 259, 528, 260, 529, 0, 261, 262, 263,
	264, 265, 0, 0, 0, 266, 530, 531, 532, 0,
	267, 268, 533, 0, 0, 0, 269, 270, 271, 272,
	273, 274, 275, 0, 0, 277, 278, 279, 276, 0,
	280, 0, 281, 282, 283, 0, 284, 0, 285, 286,
	0, 0, 0, 0, 0, 0, 0, 287, 288, 289,
	290, 0, 291, 534, 535, 0, 295, 292, 293, 0,
	296, 294, 0, 297, 298, 299, 0, 0, 300, 301,
	302, 0, 303, 304, 0, 305, 306, 307, 0, 308,
	309, 536, 310, 311, 312, 314, 316, 313, 317, 318,
	319, 320, 537, 538, 0, 0, 0, 0, 0, 0,
	0, 321, 322, 323, 539, 0, 0, 0, 324, 0,
	325, 0, 0, 0, 326, 327, 540, 541, 328, 329,
	0, 330, 542, 0, 543, 331, 0, 332, 333, 334,
	335, 336, 544, 545, 546, 393, 0, 337, 338, 0,
	339, 340, 341, 342, 0, 0, 0, 0, 343, 344,
	346, 0, 0, 345, 547, 548, 0, 549, 0, 347,
	348, 0, 550, 0, 349, 350, 351, 0, 352, 0,
	0, 0, 353, 354, 355, 356, 357, 358, 0, 359,
	361, 360, 0, 362, 551, 0, 363, 364, 0, 0,
	365, 366, 367, 0, 0, 368, 369, 370, 371, 0,
	372, 373, 375, 377, 374, 376, 381, 378, 379, 380,
	383, 0, 382, 0, 384, 385, 386, 389, 390, 388,
	0, 387, 0, 0, 0, 391, 0, 552, 392, 553,
	394, 395, 0, 0, 396, 0, 0, 0, 398, 399,
	400, 0, 0, 401, 402, 554, 0, 403, 0, 555,
	404, 405, 397, 406, 407, 408, 409, 410, 411, 412,
	413, 0, 414, 415, 556, 557, 558, 416, 559, 417,
	418, 0, 419, 0, 420, 421, 422, 423, 424, 425,
	426, 560, 428, 427, 429, 0, 0, 0, 0, 0,
	0, 430, 0, 432, 433, 434, 431, 435, 436, 437,
	438, 0, 439, 440, 441, 0, 442, 443, 444, 445,
	561, 446, 0, 447, 448, 454, 455, 449, 450, 456,
	457, 458, 459, 460, 0, 462, 463, 461, 464, 465,
	466, 0, 467, 451, 452, 468, 469, 0, 470, 471,
	472, 473, 474, 475, 562, 0, 476, 0, 477, 478,
	479, 480, 453, 481, 486, 563, 482, 483, 484, 485,
	564, 0, 488, 489, 0, 487, 0, 490, 491, 492,
	493, 494, 495, 315, 496, 0, 497, 565, 566, 567,
	568, 0, 504, 0, 498, 499, 569, 500, 570, 0,
	501, 502, 503, 0, 505, 506, 0, 0, 507, 508,
	509, 511, 512, 510, 513, 0, 514, 0, 0, 515,
	516, 517, 571, 572, 573, 0, 519, 518, 574, 2048,
	0, 238, 0, 520, 521, 575, 522, 523, 524, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 244, 245,
	246, 247, 248, 249, 0, 250, 251, 0, 0, 0,
	0, 0, 525, 0, 0, 0, 0, 252, 253, 255,
	254, 256, 257, 258, 526, 527, 0, 259, 528, 260,
	529, 0, 261, 262, 263, 264, 265, 0, 0, 0,
	266, 530, 531, 532, 0, 267, 268, 533, 0, 0,
	0, 269, 270, 271, 272, 273, 274, 275, 0, 0,
	277, 278, 279, 276, 0, 280, 0, 281, 282, 283,
	0, 284, 0, 285, 286, 0, 0, 0, 0, 0,
	0, 0, 287, 288, 289, 290, 0, 291, 534, 535,
	0, 295, 292, 293, 0, 296, 294, 0, 297, 298,
	299, 0, 0, 300, 301, 302, 0, 303, 304, 0,
	305, 306, 307, 0, 308, 309, 536, 310, 311, 312,
	314, 316, 313, 317, 318, 319, 320, 537, 538, 0,
	0, 0, 0, 0, 0, 0, 321, 322, 323, 539,
	0, 0, 0, 324, 0, 325, 0, 0, 0, 326,
	327, 540, 541, 328, 329, 0, 330, 542, 0, 543,
	331, 0, 332, 333, 334, 335, 336, 544, 545, 546,
	393, 0, 337, 338, 0, 339, 340, 341, 342, 0,
	0, 0, 0, 343, 344, 346, 0, 0, 345, 547,
	548, 0, 549, 0, 347, 348, 0, 550, 0, 349,
	350, 351, 0, 352, 0, 0, 0, 353, 354, 355,
	356, 357, 358, 0, 359, 361, 360, 0, 362, 551,
	0, 363, 364, 0, 0, 365, 366, 367, 0, 0,
	368, 369, 370, 371, 0, 372, 373, 375, 377, 374,
	376, 381, 378, 379, 380, 383, 0, 382, 0, 384,
	385, 386, 389, 390, 388, 0, 387, 0, 0, 0,
	391, 0, 552, 392, 553, 394, 395, 0, 0, 396,
	0, 0, 0, 398, 399, 400, 0, 0, 401, 402,
	554, 0, 403, 0, 555, 404, 405, 397, 406, 407,
	408, 409, 410, 411, 412, 413, 0, 414, 415, 556,
	557, 558, 416, 559, 417, 418, 0, 419, 0, 420,
	421, 422, 423, 424, 425, 426, 560, 428, 427, 429,
	0, 0, 0, 0, 0, 0, 430, 0, 432, 433,
	434, 431, 435, 436, 437, 438, 0, 439, 440, 441,
	0, 442, 443, 444, 445, 561, 446, 0, 447, 448,
	454, 455, 449, 450, 456, 457, 458, 459, 460, 0,
	462, 463, 461, 464, 465, 466, 0, 467, 451, 452,
	468, 469, 0, 470, 471, 472, 473, 474, 475, 562,
	0, 476, 0, 477, 478, 479, 480, 453, 481, 486,
	563, 482, 483, 484, 485, 564, 0, 488, 489, 0,
	487, 0, 490, 491, 492, 493, 494, 495, 315, 496,
	0, 497, 565, 566, 567, 568, 0, 504, 0, 498,
	499, 569, 500, 570, 0, 501, 502, 503, 0, 505,
	506, 0, 0, 507, 508, 509, 511, 512, 510, 513,
	0, 514, 0, 0, 515, 516, 517, 571, 572, 573,
	0, 519, 518, 574, 627, 0, 238, 0, 520, 521,
	575, 522, 523, 524, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 244, 245, 246, 247, 248, 249, 0,
	250, 251, 0, 0, 0, 0, 0, 525, 0, 0,
	0, 0, 252, 253, 1129, 254, 256, 257, 258, 526,
	527, 0, 259, 528, 260, 529, 0, 261, 262, 263,
	264, 265, 0, 0, 0, 266, 530, 531, 1127, 0,
	267, 268, 533, 0, 0, 0, 269, 270, 271, 272,
	273, 274, 275, 0, 0, 277, 278, 279, 276, 0,
	280, 0, 281, 282, 283, 0, 284, 0, 285, 286,
	0, 0, 0, 0, 0, 0, 0, 287, 288, 289,
	290, 0, 291, 534, 535, 0, 295, 292, 293, 0,
	296, 294, 0, 297, 298, 299, 0, 0, 300, 301,
	302, 0, 303, 304, 0, 305, 306, 307, 0, 308,
	309, 536, 310, 311, 312, 314, 316, 313, 317, 318,
	319, 320, 537, 538, 0, 0, 0, 0, 0, 0,
	0, 321, 322, 323, 539, 0, 0, 0, 324, 0,
	325, 0, 0, 0, 326, 327, 540, 541, 328, 329,
	0, 330, 542, 0, 543, 331, 0, 332, 333, 334,
	335, 336, 544, 545, 546, 393, 0, 337, 338, 0,
	339, 340, 341, 342, 0, 0, 0, 0, 343, 344,
	346, 0, 0, 345, 547, 548, 0, 549, 0, 347,
	348, 0, 550, 0, 349, 350, 351, 0, 352, 0,
	0, 0, 353, 354, 355, 356, 357, 358, 0, 359,
	361, 360, 0, 362, 551, 0, 363, 364, 0, 0,
	365, 366, 367, 0, 0, 368, 369, 370, 371, 0,
	372, 373, 375, 377, 374, 376, 381, 378, 379, 380,
	383, 0, 628, 0, 384, 385, 386, 389, 390, 388,
	0, 387, 0, 0, 0, 391, 0, 552, 392, 553,
	394, 395, 0, 0, 396, 0, 0, 0, 398, 399,
	400, 0, 0, 401, 402, 554, 0, 403, 0, 555,
	404, 405, 397, 406, 407, 408, 409, 410, 411, 412,
	413, 0, 414, 415, 556, 557, 558, 416, 559, 417,
	418, 0, 419, 0, 420, 421, 422, 423, 424, 425,
	426, 560, 428, 427, 429, 0, 0, 0, 0, 0,
	0, 430, 0, 432, 433, 434, 431, 435, 436, 437,
	438, 0, 439, 440, 441, 0, 442, 443, 444, 445,
	561, 446, 0, 447, 448, 454, 455, 449, 450, 624,
	457, 458, 459, 460, 0, 462, 463, 461, 464, 1130,
	466, 0, 467, 451, 452, 468, 469, 0, 470, 471,
	472, 473, 474, 475, 562, 0, 476, 0, 477, 478,
	479, 480, 453, 481, 486, 563, 482, 483, 484, 485,
	564, 0, 488, 489, 0, 487, 0, 490, 491, 492,
	493, 494, 495, 315, 496, 0, 497, 623, 566, 567,
	568, 0, 504, 0, 498, 499, 569, 500, 570, 0,
	501, 502, 503, 0, 505, 506, 0, 0, 507, 508,
	509, 511, 512, 510, 513, 0, 514, 0, 0, 515,
	516, 517, 571, 572, 573, 0, 519, 518, 574, 627,
	0, 238, 0, 520, 521, 575, 522, 523, 524, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 244, 245,
	246, 247, 248, 249, 0, 250, 251, 0, 0, 0,
	0, 0, 525, 0, 0, 0, 0, 252, 253, 255,
	254, 256, 257, 258, 526, 527, 0, 259, 528, 260,
	529, 0, 261, 262, 263, 264, 265, 0, 0, 0,
	266, 530, 531, 532, 0, 267, 617, 533, 0, 0,
	0, 269, 270, 271, 272, 273, 274, 275, 0, 0,
	277, 278, 279, 276, 0, 280, 0, 281, 282, 283,
	0, 284, 0, 285, 286, 0, 0, 0, 0, 0,
	0, 0, 287, 288, 289, 290, 0, 291, 534, 535,
	0, 295, 292, 293, 0, 296, 294, 0, 297, 298,
	299, 0, 0, 300, 301, 302, 0, 303, 304, 0,
	305, 306, 307, 0, 308, 309, 536, 310, 311, 312,
	314, 316, 313, 317, 318, 319, 320, 537, 538, 0,
	0, 0, 0, 0, 0, 0, 321, 322, 323, 539,
	0, 0, 0, 324, 0, 325, 0, 0, 0, 326,
	327, 540, 541, 328, 329, 0, 330, 542, 0, 543,
	331, 0, 332, 333, 334, 335, 336, 544, 545, 546,
	393, 0, 337, 338, 0, 339, 340, 341, 342, 0,
	0, 0, 0, 343, 344, 346, 0, 0, 345, 547,
	548, 0, 549, 0, 347, 348, 0, 550, 0, 349,
	350, 351, 0, 352, 0, 0, 0, 353, 354, 355,
	356, 357, 358, 0, 359, 361, 360, 0, 362, 551,
	0, 363, 364, 0, 0, 365, 366, 367, 0, 0,
	368, 369, 370, 371, 0, 372, 373, 375, 377, 374,
	376, 381, 378, 379, 380, 383, 0, 628, 0, 384,
	385, 386, 389, 390, 388, 0, 387, 0, 0, 0,
	391, 0, 552, 392, 553, 394, 395, 0, 0, 396,
	0, 0, 0, 398, 399, 400, 0, 0, 401, 402,
	554, 0, 403, 0, 555, 404, 405, 397, 406, 407,
	408, 409, 410, 411, 412, 413, 0, 414, 415, 556,
	557, 558, 416, 559, 417, 418, 0, 419, 0, 420,
	421, 422, 423, 424, 425, 426, 560, 428, 427, 429,
	0, 0, 0, 0, 0, 0, 430, 0, 432, 433,
	434, 431, 435, 436, 437, 438, 0, 439, 440, 441,
	0, 442, 443, 444, 445, 561, 446, 0, 447, 448,
	454, 455, 449, 450, 624, 457, 458, 459, 460, 0,
	462, 463, 461, 464, 1436, 466, 0, 467, 451, 452,
	468, 469, 0, 470, 471, 472, 473, 474, 475, 562,
	0, 476, 0, 477, 478, 479, 480, 453, 481, 486,
	563, 482, 483, 484, 485, 564, 0, 488, 489, 0,
	487, 0, 490, 491, 492, 493, 494, 495, 315, 496,
	0, 497, 623, 566, 567, 568, 0, 504, 0, 498,
	499, 569, 500, 570, 0, 501, 502, 503, 0, 505,
	506, 0, 0, 507, 508, 509, 511, 512, 510, 513,
	0, 514, 0, 0, 515, 516, 517, 571, 572, 573,
	0, 519, 518, 574, 1417, 0, 238, 0, 520, 521,
	575, 522, 523, 524, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 244, 245, 246, 247, 248, 249, 0,
	250, 251, 0, 0, 0, 0, 0, 525, 0, 0,
	0, 0, 252, 253, 255, 254, 256, 257, 258, 526,
	527, 0, 259, 528, 260, 529, 0, 261, 262, 263,
	264, 265, 0, 0, 0, 266, 530, 531, 532, 0,
	267, 268, 533, 0, 0, 0, 269, 270, 271, 272,
	273, 274, 275, 0, 0, 277, 278, 279, 276, 0,
	280, 0, 281, 282, 283, 0, 284, 0, 285, 286,
	0, 0, 0, 0, 0, 0, 0, 287, 288, 289,
	290, 0, 291, 534, 535, 0, 295, 292, 293, 0,
	296, 294, 0, 297, 298, 299, 0, 0, 300, 301,
	302, 0, 303, 304, 0, 305, 306, 307, 0, 308,
	309, 536, 310, 311, 312, 314, 316, 313, 317, 318,
	319, 320, 537, 538, 0, 0, 0, 0, 0, 0,
	0, 321, 322, 323, 539, 0, 0, 0, 324, 0,
	325, 0, 0, 0, 326, 327, 540, 541, 328, 329,
	0, 330, 542, 0, 543, 331, 0, 332, 333, 334,
	335, 336, 1416, 545, 546, 393, 0, 337, 338, 0,
	339, 340, 341, 342, 0, 0, 0, 0, 343, 344,
	346, 0, 0, 345, 547, 548, 0, 549, 0, 347,
	348, 0, 550, 0, 349, 350, 351, 0, 352, 0,
	0, 0, 353, 354, 355, 356, 357, 358, 0, 359,
	361, 360, 0, 362, 551, 0, 363, 364, 0, 0,
	365, 366, 367, 0, 0, 368, 369, 370, 371, 0,
	372, 373, 375, 377, 374, 376, 381, 378, 379, 380,
	383, 0, 382, 0, 384, 385, 386, 389, 390, 388,
	0, 387, 0, 0, 0, 391, 0, 552, 392, 553,
	394, 395, 0, 0, 396, 0, 0, 0, 398, 399,
	400, 0, 0, 401, 402, 554, 0, 403, 0, 555,
	404, 405, 397, 406, 407, 408, 409, 410, 411, 412,
	413, 0, 414, 415, 556, 557, 558, 416, 559, 417,
	418, 0, 419, 0, 420, 421, 422, 423, 424, 425,
	426, 560, 428, 427, 429, 0, 0, 0, 0, 0,
	0, 430, 0, 432, 433, 434, 431, 435, 436, 437,
	438, 0, 439, 440, 441, 0, 442, 443, 444, 445,
	561, 446, 0, 447, 448, 454, 455, 449, 450, 456,
	457, 458, 459, 460, 0, 462, 463, 461, 464, 465,
	466, 0, 467, 451, 452, 468, 469, 0, 470, 471,
	472, 473, 474, 475, 562, 0, 476, 0, 477, 478,
	479, 480, 453, 481, 486, 563, 482, 483, 484, 485,
	564, 0, 488, 489, 0, 487, 0, 490, 491, 492,
	493, 494, 495, 315, 496, 0, 497, 565, 566, 567,
	568, 0, 504, 0, 498, 499, 569, 500, 570, 0,
	501, 502, 503, 0, 505, 506, 0, 0, 507, 508,
	509, 511, 512, 510, 513, 0, 514, 0, 0, 515,
	516, 517, 571, 572, 573, 0, 519, 518, 574, 1410,
	0, 238, 0, 520, 521, 575, 522, 523, 524, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 244, 245,
	246, 247, 248, 249, 0, 250, 251, 0, 0, 0,
	0, 0, 525, 0, 0, 0, 0, 252, 253, 255,
	254, 256, 257, 258, 526, 527, 0, 259, 528, 260,
	529, 0, 261, 262, 263, 264, 265, 0, 0, 0,
	266, 530, 531, 532, 0, 267, 268, 533, 0, 0,
	0, 269, 270, 271, 272, 273, 274, 275, 0, 0,
	277, 278, 279, 276, 0, 280, 0, 281, 282, 283,
	0, 284, 0, 285, 286, 0, 0, 0, 0, 0,
	0, 0, 287, 288, 289, 290, 0, 291, 534, 535,
	0, 295, 292, 293, 0, 296, 294, 0, 297, 298,
	299, 0, 0, 300, 301, 302, 0, 303, 304, 0,
	305, 306, 307, 0, 308, 309, 536, 310, 311, 312,
	314, 316, 313, 317, 318, 319, 320, 537, 538, 0,
	0, 0, 0, 0, 0, 0, 321, 322, 323, 539,
	0, 0, 0, 324, 0, 325, 0, 0, 0, 326,
	327, 540, 541, 328, 329, 0, 330, 542, 0, 543,
	331, 0, 332, 333, 334, 335, 336, 1409, 545, 546,
	393, 0, 337, 338, 0, 339, 340, 341, 342, 0,
	0, 0, 0, 343, 344, 346, 0, 0, 345, 547,
	548, 0, 549, 0, 347, 348, 0, 550, 0, 349,
	350, 351, 0, 352, 0, 0, 0, 353, 354, 355,
	356, 357, 358, 0, 359, 361, 360, 0, 362, 551,
	0, 363, 364, 0, 0, 365, 366, 367, 0, 0,
	368, 369, 370, 371, 0, 372, 373, 375, 377, 374,
	376, 381, 378, 379, 380, 383, 0, 382, 0, 384,
	385, 386, 389, 390, 388, 0, 387, 0, 0, 0,
	391, 0, 552, 392, 553, 394, 395, 0, 0, 396,
	0, 0, 0, 398, 399, 400, 0, 0, 401, 402,
	554, 0, 403, 0, 555, 404, 405, 397, 406, 407,
	408, 409, 410, 411, 412, 413, 0, 414, 415, 556,
	557, 558, 416, 559, 417, 418, 0, 419, 0, 420,
	421, 422, 423, 424, 425, 426, 560, 428, 427, 429,
	0, 0, 0, 0, 0, 0, 430, 0, 432, 433,
	434, 431, 435, 436, 437, 438, 0, 439, 440, 441,
	0, 442, 443, 444, 445, 561, 446, 0, 447, 448,
	454, 455, 449, 450, 456, 457, 458, 459, 460, 0,
	462, 463, 461, 464, 465, 466, 0, 467, 451, 452,
	468, 469, 0, 470, 471, 472, 473, 474, 475, 562,
	0, 476, 0, 477, 478, 479, 480, 453, 481, 486,
	563, 482, 483, 484, 485, 564, 0, 488, 489, 0,
	487, 0, 490, 491, 492, 493, 494, 495, 315, 496,
	0, 497, 565, 566, 567, 568, 0, 504, 0, 498,
	499, 569, 500, 570, 0, 501, 502, 503, 0, 505,
	506, 0, 0, 507, 508, 509, 511, 512, 510, 513,
	0, 514, 0, 0, 515, 516, 517, 571, 572, 573,
	0, 519, 518, 574, 1360, 0, 238, 0, 520, 521,
	575, 522, 523, 524, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 244, 245, 246, 247, 248, 249, 0,
	250, 251, 0, 0, 0, 0, 0, 525, 0, 0,
	0, 0, 252, 253, 255, 254, 256, 257, 258, 526,
	527, 0, 259, 528, 260, 529, 0, 261, 262, 263,
	264, 265, 0, 0, 0, 266, 530, 531, 532, 0,
	267, 268, 533, 0, 0, 0, 269, 270, 271, 272,
	273, 274, 275, 0, 0, 277, 278, 279, 276, 0,
	280, 0, 281, 282, 283, 0, 284, 0, 285, 286,
	0, 0, 0, 0, 0, 0, 0, 287, 288, 289,
	290, 0, 291, 534, 535, 0, 295, 292, 293, 0,
	296, 294, 0, 297, 298, 299, 0, 0, 300, 301,
	302, 0, 303, 304, 0, 305, 306, 307, 0, 308,
	309, 536, 310, 311, 312, 314, 316, 313, 317, 318,
	319, 320, 537, 538, 0, 0, 0, 0, 0, 0,
	0, 321, 322, 323, 539, 0, 0, 0, 324, 0,
	325, 0, 0, 0, 326, 327, 540, 541, 328, 329,
	0, 330, 542, 0, 543, 331, 0, 332, 333, 334,
	335, 336, 1359, 545, 546, 393, 0, 337, 338, 0,
	339, 340, 341, 342, 0, 0, 0, 0, 343, 344,
	346, 0, 0, 345, 547, 548, 0, 549, 0, 347,
	348, 0, 550, 0, 349, 350, 351, 0, 352, 0,
	0, 0, 353, 354, 355, 356, 357, 358, 0, 359,
	361, 360, 0, 362, 551, 0, 363, 364, 0, 0,
	365, 366, 367, 0, 0, 368, 369, 370, 371, 0,
	372, 373, 375, 377, 374, 376, 381, 378, 379, 380,
	383, 0, 382, 0, 384, 385, 386, 389, 390, 388,
	0, 387, 0, 0, 0, 391, 0, 552, 392, 553,
	394, 395, 0, 0, 396, 0, 0, 0, 398, 399,
	400, 0, 0, 401, 402, 554, 0, 403, 0, 555,
	404, 405, 397, 406, 407, 408, 409, 410, 411, 412,
	413, 0, 414, 415, 556, 557, 558, 416, 559, 417,
	418, 0, 419, 0, 420, 421, 422, 423, 424, 425,
	426, 560, 428, 427, 429, 0, 0, 0, 0, 0,
	0, 430, 0, 432, 433, 434, 431, 435, 436, 437,
	438, 0, 439, 440, 441, 0, 442, 443, 444, 445,
	561, 446, 0, 447, 448, 454, 455, 449, 450, 456,
	457, 458, 459, 460, 0, 462, 463, 461, 464, 465,
	466, 0, 467, 451, 452, 468, 469, 0, 470, 471,
	472, 473, 474, 475, 562, 0, 476, 0, 477, 478,
	479, 480, 453, 481, 486, 563, 482, 483, 484, 485,
	564, 0, 488, 489, 0, 487, 0, 490, 491, 492,
	493, 494, 495, 315, 496, 0, 497, 565, 566, 567,
	568, 0, 504, 0, 498, 499, 569, 500, 570, 0,
	501, 502, 503, 0, 505, 506, 0, 0, 507, 508,
	509, 511, 512, 510, 513, 0, 514, 0, 0, 515,
	516, 517, 571, 572, 573, 0, 519, 518, 574, 1346,
	0, 238, 0, 520, 521, 575, 522, 523, 524, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 244, 245,
	246, 247, 248, 249, 0, 250, 251, 0, 0, 0,
	0, 0, 525, 0, 0, 0, 0, 252, 253, 255,
	254, 256, 257, 258, 526, 527, 0, 259, 528, 260,
	529, 0, 261, 262, 263, 264, 265, 0, 0, 0,
	266, 530, 531, 532, 0, 267, 268, 533, 0, 0,
	0, 269, 270, 271, 272, 273, 274, 275, 0, 0,
	277, 278, 279, 276, 0, 280, 0, 281, 282, 283,
	0, 284, 0, 285, 286, 0, 0, 0, 0, 0,
	0, 0, 287, 288, 289, 290, 0, 291, 534, 535,
	0, 295, 292, 293, 0, 296, 294, 0, 297, 298,
	299, 0, 0, 300, 301, 302, 0, 303, 304, 0,
	305, 306, 307, 0, 308, 309, 536, 310, 311, 312,
	314, 316, 313, 317, 318, 319, 320, 537, 538, 0,
	0, 0, 0, 0, 0, 0, 321, 322, 323, 539,
	0, 0, 0, 324, 0, 325, 0, 0, 0, 326,
	327, 540, 541, 328, 329, 0, 330, 542, 0, 543,
	331, 0, 332, 333, 334, 335, 336, 1345, 545, 546,
	393, 0, 337, 338, 0, 339, 340, 341, 342, 0,
	0, 0, 0, 343, 344, 346, 0, 0, 345, 547,
	548, 0, 549, 0, 347, 348, 0, 550, 0, 349,
	350, 351, 0, 352, 0, 0, 0, 353, 354, 355,
	356, 357, 358, 0, 359, 361, 360, 0, 362, 551,
	0, 363, 364, 0, 0, 365, 366, 367, 0, 0,
	368, 369, 370, 371, 0, 372, 373, 375, 377, 374,
	376, 381, 378, 379, 380, 383, 0, 382, 0, 384,
	385, 386, 389, 390, 388, 0, 387, 0, 0, 0,
	391, 0, 552, 392, 553, 394, 395, 0, 0, 396,
	0, 0, 0, 398, 399, 400, 0, 0, 401, 402,
	554, 0, 403, 0, 555, 404, 405, 397, 406, 407,
	408, 409, 410, 411, 412, 413, 0, 414, 415, 556,
	557, 558, 416, 559, 417, 418, 0, 419, 0, 420,
	421, 422, 423, 424, 425, 426, 560, 428, 427, 429,
	0, 0, 0, 0, 0, 0, 430, 0, 432, 433,
	434, 431, 435, 436, 437, 438, 0, 439, 440, 441,
	0, 442, 443, 444, 445, 561, 446, 0, 447, 448,
	454, 455, 449, 450, 456, 457, 458, 459, 460, 0,
	462, 463, 461, 464, 465, 466, 0, 467, 451, 452,
	468, 469, 0, 470, 471, 472, 473, 474, 475, 562,
	0, 476, 0, 477, 478, 479, 480, 453, 481, 486,
	563, 482, 483, 484, 485, 564, 0, 488, 489, 0,
	487, 0, 490, 491, 492, 493, 494, 495, 315, 496,
	0, 497, 565, 566, 567, 568, 0, 504, 0, 498,
	499, 569, 500, 570, 0, 501, 502, 503, 0, 505,
	506, 0, 0, 507, 508, 509, 511, 512, 510, 513,
	0, 514, 0, 0, 515, 516, 517, 571, 572, 573,
	0, 519, 518, 574, 1341, 0, 238, 0, 520, 521,
	575, 522, 523, 524, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 244, 245, 246, 247, 248, 249, 0,
	250, 251, 0, 0, 0, 0, 0, 525, 0, 0,
	0, 0, 252, 253, 255, 254, 256, 257, 258, 526,
	527, 0, 259, 528, 260, 529, 0, 261, 262, 263,
	264, 265, 0, 0, 0, 266, 530, 531, 532, 0,
	267, 268, 533, 0, 0, 0, 269, 270, 271, 272,
	273, 274, 275, 0, 0, 277, 278, 279, 276, 0,
	280, 0, 281, 282, 283, 0, 284, 0, 285, 286,
	0, 0, 0, 0, 0, 0, 0, 287, 288, 289,
	290, 0, 291, 534, 535, 0, 295, 292, 293, 0,
	296, 294, 0, 297, 298, 299, 0, 0, 300, 301,
	302, 0, 303, 304, 0, 305, 306, 307, 0, 308,
	309, 536, 310, 311, 312, 314, 316, 313, 317, 318,
	319, 320, 537, 538, 0, 0, 0, 0, 0, 0,
	0, 321, 322, 323, 539, 0, 0, 0, 324, 0,
	325, 0, 0, 0, 326, 327, 540, 541, 328, 329,
	0, 330, 542, 0, 543, 331, 0, 332, 333, 334,
	335, 336, 544, 545, 546, 393, 0, 337, 338, 0,
	339, 340, 341, 342, 0, 0, 0, 0, 343, 344,
	346, 0, 0, 345, 547, 548, 0, 549, 0, 347,
	348, 0, 550, 0, 349, 350, 351, 0, 352, 0,
	0, 0, 353, 354, 355, 356, 357, 358, 0, 359,
	361, 360, 0, 362, 551, 0, 363, 364, 0, 0,
	365, 366, 367, 0, 0, 368, 369, 370, 371, 0,
	372, 373, 375, 377, 374, 376, 381, 378, 379, 380,
	383, 0, 382, 0, 384, 385, 386, 389, 390, 388,
	0, 387, 0, 0, 0, 391, 0, 552, 392, 553,
	394, 395, 0, 0, 396, 0, 0, 0, 398, 399,
	400, 0, 0, 401, 402, 554, 0, 403, 0, 555,
	404, 405, 397, 406, 407, 408, 409, 410, 411, 412,
	413, 0, 414, 415, 556, 557, 558, 416, 559, 417,
	418, 0, 419, 0, 420, 421, 422, 423, 424, 425,
	426, 560, 428, 427, 429, 0, 0, 0, 0, 0,
	0, 430, 0, 432, 433, 434, 431, 435, 436, 437,
	438, 0, 439, 440, 441, 0, 442, 443, 444, 445,
	561, 446, 0, 447, 448, 454, 455, 449, 450, 456,
	457, 458, 459, 460, 0, 462, 463, 461, 464, 465,
	466, 0, 467, 451, 452, 468, 469, 0, 470, 471,
	472, 473, 474, 475, 562, 0, 476, 0, 477, 478,
	479, 480, 453, 481, 486, 563, 482, 483, 484, 485,
	564, 0, 488, 489, 0, 487, 0, 490, 491, 492,
	493, 494, 495, 315, 496, 0, 497, 565, 566, 567,
	568, 0, 504, 0, 498, 499, 569, 500, 570, 0,
	501, 502, 503, 0, 505, 506, 0, 0, 507, 508,
	509, 511, 512, 510, 513, 0, 514, 0, 0, 515,
	516, 517, 571, 572, 573, 0, 519, 518, 574, 1273,
	0, 238, 0, 520, 521, 575, 522, 523, 524, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 244, 245,
	246, 247, 248, 249, 0, 250, 251, 0, 0, 0,
	0, 0, 525, 0, 0, 0, 0, 252, 253, 255,
	254, 256, 257, 258, 526, 527, 0, 259, 528, 260,
	529, 0, 261, 262, 263, 264, 265, 0, 0, 0,
	266, 530, 531, 532, 0, 267, 268, 533, 0, 0,
	0, 269, 270, 271, 272, 273, 274, 275, 0, 0,
	277, 278, 279, 276, 0, 280, 0, 281, 282, 283,
	0, 284, 0, 285, 286, 0, 0, 0, 0, 0,
	0, 0, 287, 288, 289, 290, 0, 291, 534, 535,
	0, 295, 292, 293, 0, 296, 294, 0, 297, 298,
	299, 0, 0, 300, 301, 302, 0, 303, 304, 0,
	305, 306, 307, 0, 308, 309, 536, 310, 311, 312,
	314, 316, 313, 317, 318, 319, 320, 537, 538, 0,
	0, 0, 0, 0, 0, 0, 321, 322, 323, 539,
	0, 0, 0, 324, 0, 325, 0, 0, 0, 326,
	327, 540, 541, 328, 329, 0, 330, 542, 0, 543,
	331, 0, 332, 333, 334, 335, 336, 544, 545, 546,
	393, 0, 337, 338, 0, 339, 340, 341, 342, 0,
	0, 0, 0, 343, 344, 346, 0, 0, 345, 547,
	548, 0, 549, 0, 347, 348, 0, 550, 0, 349,
	350, 351, 0, 352, 0, 0, 0, 353, 354, 355,
	356, 357, 358, 0, 359, 361, 360, 0, 362, 551,
	0, 363, 364, 0, 0, 365, 366, 367, 0, 0,
	368, 369, 370, 371, 0, 372, 373, 375, 377, 374,
	376, 381, 378, 379, 380, 383, 0, 382, 0, 384,
	385, 386, 389, 390, 388, 0, 387, 0, 0, 0,
	391, 0, 552, 392, 553, 394, 395, 0, 0, 396,
	0, 0, 0, 398, 399, 400, 0, 0, 401, 402,
	554, 0, 403, 0, 555, 404, 405, 397, 406, 407,
	408, 409, 410, 411, 412, 413, 0, 414, 415, 556,
	557, 558, 416, 559, 417, 418, 0, 419, 0, 420,
	421, 422, 423, 424, 425, 426, 560, 428, 427, 429,
	0, 0, 0, 0, 0, 0, 430, 0, 432, 433,
	434, 431, 435, 436, 437, 438, 0, 439, 440, 441,
	0, 442, 443, 444, 445, 561, 446, 0, 447, 448,
	454, 455, 449, 450, 456, 457, 458, 459, 460, 0,
	462, 463, 461, 464, 465, 466, 0, 467, 451, 452,
	468, 469, 0, 470, 471, 472, 473, 474, 475, 562,
	0, 476, 0, 477, 478, 479, 480, 453, 481, 486,
	563, 482, 483, 484, 485, 564, 0, 488, 489, 0,
	487, 0, 490, 491, 492, 493, 494, 495, 315, 496,
	0, 497, 565, 566, 567, 568, 0, 504, 0, 498,
	499, 569, 500, 570, 0, 501, 502, 503, 0, 505,
	506, 0, 0, 507, 508, 509, 511, 512, 510, 513,
	0, 514, 0, 0, 515, 516, 517, 571, 572, 573,
	0, 519, 518, 574, 1257, 0, 238, 0, 520, 521,
	575, 522, 523, 524, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 244, 245, 246, 247, 248, 249, 0,
	250, 251, 0, 0, 0, 0, 0, 525, 0, 0,
	0, 0, 252, 253, 255, 254, 256, 257, 258, 526,
	527, 0, 259, 528, 260, 529, 0, 261, 262, 263,
	264, 265, 0, 0, 0, 266, 530, 531, 532, 0,
	267, 268, 533, 0, 0, 0, 269, 270, 271, 272,
	273, 274, 275, 0, 0, 277, 278, 279, 276, 0,
	280, 0, 281, 282, 283, 0, 284, 0, 285, 286,
	0, 0, 0, 0, 0, 0, 0, 287, 288, 289,
	290, 0, 291, 534, 535, 0, 295, 292, 293, 0,
	296, 294, 0, 297, 298, 299, 0, 0, 300, 301,
	302, 0, 303, 304, 0, 305, 306, 307, 0, 308,
	309, 536, 310, 311, 312, 314, 316, 313, 317, 318,
	319, 320, 537, 538, 0, 0, 0, 0, 0, 0,
	0, 321, 322, 323, 539, 0, 0, 0, 324, 0,
	325, 0, 0, 0, 326, 327, 540, 541, 328, 329,
	0, 330, 542, 0, 543, 331, 0, 332, 333, 334,
	335, 336, 544, 545, 546, 393, 0, 337, 338, 0,
	339, 340, 341, 342, 0, 0, 0, 0, 343, 344,
	346, 0, 0, 345, 547, 548, 0, 549, 0, 347,
	348, 0, 550, 0, 349, 350, 351, 0, 352, 0,
	0, 0, 353, 354, 355, 356, 357, 358, 0, 359,
	361, 360, 0, 362, 551, 0, 363, 364, 0, 0,
	365, 366, 367, 0, 0, 368, 369, 370, 371, 0,
	372, 373, 375, 377, 374, 376, 381, 378, 379, 380,
	383, 0, 382, 0, 384, 385, 386, 389, 390, 388,
	0, 387, 0, 0, 0, 391, 0, 552, 392, 553,
	394, 395, 0, 0, 396, 0, 0, 0, 398, 399,
	400, 0, 0, 401, 402, 554, 0, 403, 0, 555,
	404, 405, 397, 406, 407, 408, 409, 410, 411, 412,
	413, 0, 414, 415, 556, 557, 558, 416, 559, 417,
	418, 0, 419, 0, 420, 421, 422, 423, 424, 425,
	426, 560, 428, 427, 429, 0, 0, 0, 0, 0,
	0, 430, 0, 432, 433, 434, 431, 435, 436, 437,
	438, 0, 439, 440, 441, 0, 442, 443, 444, 445,
	561, 446, 0, 447, 448, 454, 455, 449, 450, 456,
	457, 458, 459, 460, 0, 462, 463, 461, 464, 465,
	466, 0, 467, 451, 452, 468, 469, 0, 470, 471,
	472, 473, 474, 475, 562, 0, 476, 0, 477, 478,
	479, 480, 453, 481, 486, 563, 482, 483, 484, 485,
	564, 0, 488, 489, 0, 487, 0, 490, 491, 492,
	493, 494, 495, 315, 496, 0, 497, 565, 566, 567,
	568, 0, 504, 0, 498, 499, 569, 500, 570, 0,
	501, 502, 503, 0, 505, 506, 0, 0, 507, 508,
	509, 511, 512, 510, 513, 0, 514, 0, 0, 515,
	516, 517, 571, 572, 573, 0, 519, 518, 574, 627,
	0, 238, 0, 520, 521, 575, 522, 523, 524, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 244, 245,
	246, 247, 248, 249, 0, 250, 251, 0, 0, 0,
	0, 0, 525, 0, 0, 0, 0, 252, 253, 1129,
	254, 256, 257, 258, 526, 527, 0, 259, 528, 260,
	529, 0, 261, 262, 263, 264, 265, 0, 0, 0,
	266, 530, 531, 1127, 0, 267, 268, 533, 0, 0,
	0, 269, 270, 271, 272, 273, 274, 275, 0, 0,
	277, 278, 279, 276, 0, 280, 0, 281, 282, 283,
	0, 284, 0, 285, 286, 0, 0, 0, 0, 0,
	0, 0, 287, 288, 289, 290, 0, 291, 534, 535,
	0, 295, 292, 293, 0, 296, 294, 0, 297, 298,
	299, 0, 0, 300, 301, 302, 0, 303, 304, 0,
	305, 306, 307, 0, 308, 309, 536, 310, 311, 312,
	314, 316, 313, 317, 318, 319, 320, 537, 538, 0,
	0, 0, 0, 0, 0, 0, 321, 322, 323, 539,
	0, 0, 0, 324, 0, 325, 0, 0, 0, 326,
	327, 540, 541, 328, 329, 0, 330, 542, 0, 543,
	331, 0, 332, 333, 334, 335, 336, 544, 545, 546,
	393, 0, 337, 338, 0, 339, 340, 341, 342, 0,
	0, 0, 0, 343, 344, 346, 0, 0, 345, 547,
	548, 0, 549, 0, 347, 348, 0, 550, 0, 349,
	350, 351, 0, 352, 0, 0, 0, 353, 354, 355,
	356, 357, 358, 0, 359, 361, 360, 0, 362, 551,
	0, 363, 364, 0, 0, 365, 366, 367, 0, 0,
	368, 369, 370, 371, 0, 372, 373, 375, 377, 374,
	376, 381, 378, 379, 380, 383, 0, 628, 0, 384,
	385, 386, 389, 390, 388, 0, 387, 0, 0, 0,
	391, 0, 552, 392, 553, 394, 395, 0, 0, 396,
	0, 0, 0, 398, 399, 400, 0, 0, 401, 402,
	554, 0, 403, 0, 555, 404, 405, 397, 406, 407,
	408, 409, 410, 411, 412, 413, 0, 414, 415, 556,
	557, 558, 416, 559, 417, 418, 0, 419, 0, 420,
	421, 422, 423, 424, 425, 426, 560, 428, 427, 429,
	0, 0, 0, 0, 0, 0, 430, 0, 432, 433,
	434, 431, 435, 436, 437, 438, 0, 439, 440, 441,
	0, 442, 443, 444, 445, 561, 446, 0, 447, 448,
	454, 455, 449, 450, 624, 457, 458, 459, 460, 0,
	462, 463, 461, 464, 1130, 466, 0, 467, 451, 452,
	468, 469, 0, 470, 471, 472, 473, 474, 475, 562,
	0, 476, 0, 477, 478, 479, 480, 453, 481, 486,
	563, 482, 483, 484, 485, 564, 0, 488, 489, 0,
	487, 0, 490, 491, 492, 493, 494, 495, 315, 496,
	0, 497, 623, 566, 567, 568, 0, 504, 0, 498,
	1128, 569, 500, 570, 0, 501, 502, 503, 0, 505,
	506, 0, 0, 507, 508, 509, 511, 512, 510, 513,
	0, 514, 0, 0, 515, 516, 517, 571, 572, 573,
	238, 519, 518, 574, 0, 0, 0, 0, 520, 521,
	575, 522, 523, 524, 0, 0, 0, 244, 245, 246,
	247, 248, 249, 1111, 250, 251, 0, 0, 0, 0,
	0, 525, 0, 0, 0, 0, 252, 253, 255, 254,
	256, 257, 258, 526, 527, 0, 259, 528, 260, 529,
	0, 261, 262, 263, 264, 265, 0, 0, 0, 266,
	530, 531, 532, 0, 267, 268, 533, 0, 0, 0,
	269, 270, 271, 272, 273, 274, 275, 0, 0, 277,
	278, 279, 276, 0, 280, 0, 281, 282, 283, 0,
	284, 0, 285, 286, 0, 0, 0, 0, 0, 0,
	0, 287, 288, 289, 290, 0, 291, 534, 535, 0,
	295, 292, 293, 0, 296, 294, 0, 297, 298, 299,
	0, 0, 300, 301, 302, 0, 303, 304, 0, 305,
	306, 307, 0, 308, 309, 536, 310, 311, 312, 314,
	316, 313, 317, 318, 319, 320, 537, 538, 0, 0,
	0, 0, 0, 0, 0, 321, 322, 323, 539, 0,
	0, 0, 324, 0, 325, 0, 0, 0, 326, 327,
	540, 541, 328, 329, 0, 330, 542, 0, 543, 331,
	0, 332, 333, 334, 335, 336, 544, 545, 546, 393,
	0, 337, 338, 0, 339, 340, 341, 342, 0, 0,
	0, 0, 343, 344, 346, 0, 0, 345, 547, 548,
	0, 549, 0, 347, 348, 0, 550, 0, 349, 350,
	351, 0, 352, 0, 0, 0, 353, 354, 355, 356,
	357, 358, 0, 359, 361, 360, 0, 362, 551, 0,
	363, 364, 0, 0, 365, 366, 367, 0, 0, 368,
	369, 370, 371, 0, 372, 373, 375, 377, 374, 376,
	381, 378, 379, 380, 383, 0, 382, 0, 384, 385,
	386, 389, 390, 388, 0, 387, 0, 0, 0, 391,
	0, 552, 392, 553, 394, 395, 0, 0, 396, 0,
	0, 0, 398, 399, 400, 0, 0, 401, 402, 554,
	0, 403, 0, 555, 404, 405, 397, 406, 407, 408,
	409, 410, 411, 412, 413, 0, 414, 415, 556, 557,
	558, 416, 559, 417, 418, 0, 419, 0, 420, 421,
	422, 423, 424, 425, 426, 560, 428, 427, 429, 0,
	0, 0, 0, 0, 0, 430, 0, 432, 433, 434,
	431, 435, 436, 437, 438, 0, 439, 440, 441, 0,
	442, 443, 444, 445, 561, 446, 0, 447, 448, 454,
	455, 449, 450, 456, 457, 458, 459, 460, 0, 462,
	463, 461, 464, 465, 466, 0, 467, 451, 452, 468,
	469, 0, 470, 471, 472, 473, 474, 475, 562, 0,
	476, 0, 477, 478, 479, 480, 453, 481, 486, 563,
	482, 483, 484, 485, 564, 0, 488, 489, 0, 487,
	0, 490, 491, 492, 493, 494, 495, 315, 496, 0,
	497, 565, 566, 567, 568, 0, 504, 0, 498, 499,
	569, 500, 570, 0, 501, 502, 503, 0, 505, 506,
	0, 0, 507, 508, 509, 511, 512, 510, 513, 0,
	514, 0, 0, 515, 516, 517, 571, 572, 573, 238,
	519, 518, 574, 0, 0, 0, 0, 520, 521, 575,
	522, 523, 524, 0, 0, 0, 244, 245, 246, 247,
	248, 249, 633, 250, 251, 0, 0, 0, 0, 0,
	525, 0, 0, 0, 0, 252, 253, 255, 254, 256,
	257, 258, 526, 527, 0, 259, 528, 260, 529, 0,
	261, 262, 263, 264, 265, 0, 0, 0, 266, 530,
	531, 532, 0, 267, 268, 533, 0, 0, 0, 269,
	270, 271, 272, 273, 274, 275, 0, 0, 277, 278,
	279, 276, 0, 280, 0, 281, 282, 283, 0, 284,
	0, 285, 286, 0, 0, 0, 0, 0, 0, 0,
	287, 288, 289, 290, 0, 291, 534, 535, 0, 295,
	292, 293, 0, 296, 294, 0, 297, 298, 299, 0,
	0, 300, 301, 302, 0, 303, 304, 0, 305, 306,
	307, 0, 308, 309, 536, 310, 311, 312, 314, 316,
	313, 317, 318, 319, 320, 537, 538, 0, 0, 0,
	0, 0, 0, 0, 321, 322, 323, 539, 0, 0,
	0, 324, 0, 325, 0, 0, 0, 326, 327, 540,
	541, 328, 329, 0, 330, 542, 0, 543, 331, 0,
	332, 333, 334, 335, 336, 544, 545, 546, 393, 0,
	337, 338, 0, 339, 340, 341, 342, 0, 0, 0,
	0, 343, 344, 346, 0, 0, 345, 547, 548, 0,
	549, 0, 347, 348, 0, 550, 0, 349, 350, 351,
	0, 352, 0, 0, 0, 353, 354, 355, 356, 357,
	358, 0, 359, 361, 360, 0, 362, 551, 0, 363,
	364, 0, 0, 365, 366, 367, 0, 0, 368, 369,
	370, 371, 0, 372, 373, 375, 377, 374, 376, 381,
	378, 379, 380, 383, 0, 382, 0, 384, 385, 386,
	389, 390, 388, 0, 387, 0, 0, 0, 391, 0,
	552, 392, 553, 394, 395, 0, 0, 396, 0, 0,
	0, 398, 399, 400, 0, 0, 401, 402, 554, 0,
	403, 0, 555, 404, 405, 397, 406, 407, 408, 409,
	410, 411, 412, 413, 0, 414, 415, 556, 557, 558,
	416, 559, 417, 418, 0, 419, 0, 420, 421, 422,
	423, 424, 425, 426, 560, 428, 427, 429, 0, 0,
	0, 0, 0, 0, 430, 0, 432, 433, 434, 431,
	435, 436, 437, 438, 0, 439, 440, 441, 0, 442,
	443, 444, 445, 561, 446, 0, 447, 448, 454, 455,
	449, 450, 456, 457, 458, 459, 460, 0, 462, 463,
	461, 464, 465, 466, 0, 467, 451, 452, 468, 469,
	0, 470, 471, 472, 473, 474, 475, 562, 0, 476,
	0, 477, 478, 479, 480, 453, 481, 486, 563, 482,
	483, 484, 485, 564, 0, 488, 489, 0, 487, 0,
	490, 491, 492, 493, 494, 495, 315, 496, 0, 497,
	565, 566, 567, 568, 0, 504, 0, 498, 499, 569,
	500, 570, 0, 501, 502, 503, 0, 505, 506, 0,
	0, 507, 508, 509, 511, 512, 510, 513, 0, 514,
	0, 0, 515, 516, 517, 571, 572, 573, 0, 519,
	518, 574, 627, 0, 238, 0, 520, 521, 575, 522,
	523, 524, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 244, 245, 246, 247, 248, 249, 0, 250, 251,
	0, 0, 0, 0, 0, 525, 0, 0, 0, 0,
	252, 253, 255, 254, 256, 257, 258, 526, 527, 0,
	259, 528, 260, 529, 0, 261, 262, 263, 264, 265,
	0, 0, 0, 266, 530, 531, 532, 0, 267, 617,
	533, 0, 0, 0, 269, 270, 271, 272, 273, 274,
	275, 0, 0, 277, 278, 279, 276, 0, 615, 0,
	281, 282, 283, 0, 284, 0, 285, 286, 0, 0,
	0, 0, 0, 0, 0, 287, 288, 289, 290, 0,
	291, 534, 535, 0, 295, 292, 293, 0, 296, 294,
	0, 297, 298, 299, 0, 0, 300, 301, 302, 0,
	303, 304, 0, 305, 306, 307, 0, 308, 309, 536,
	310, 311, 312, 314, 316, 313, 317, 318, 319, 320,
	537, 538, 0, 0, 0, 0, 0, 0, 0, 321,
	322, 323, 539, 0, 0, 0, 324, 0, 325, 0,
	0, 0, 326, 327, 540, 541, 328, 329, 0, 330,
	542, 0, 543, 331, 0, 332, 333, 334, 335, 336,
	544, 545, 546, 393, 0, 337, 338, 0, 339, 340,
	341, 342, 0, 0, 0, 0, 343, 344, 346, 0,
	0, 345, 547, 548, 0, 549, 0, 347, 348, 0,
	550, 0, 349, 350, 351, 0, 352, 0, 0, 0,
	353, 354, 355, 356, 357, 358, 0, 359, 361, 360,
	0, 362, 551, 0, 363, 364, 0, 0, 365, 366,
	616, 0, 0, 368, 369, 370, 371, 0, 372, 373,
	375, 377, 374, 376, 381, 378, 379, 380, 383, 0,
	628, 0, 384, 385, 386, 389, 390, 388, 0, 387,
	0, 0, 0, 391, 0, 552, 392, 553, 394, 395,
	0, 0, 396, 0, 0, 0, 398, 399, 400, 0,
	0, 401, 402, 554, 0, 403, 0, 555, 404, 405,
	397, 406, 407, 408, 409, 410, 411, 412, 413, 0,
	414, 415, 556, 557, 558, 416, 559, 417, 418, 0,
	419, 0, 420, 421, 422, 423, 424, 425, 426, 560,
	428, 427, 429, 0, 0, 0, 0, 0, 0, 430,
	0, 432, 433, 434, 431, 435, 436, 437, 438, 0,
	439, 440, 441, 0, 442, 443, 444, 445, 618, 446,
	0, 447, 448, 454, 455, 449, 450, 624, 457, 458,
	459, 460, 0, 462, 463, 461, 464, 619, 466, 0,
	467, 451, 452, 468, 469, 0, 470, 471, 472, 473,
	474, 475, 562, 0, 476, 0, 477, 478, 479, 480,
	453, 481, 486, 563, 482, 483, 484, 485, 564, 0,
	488, 489, 0, 487, 0, 490, 491, 492, 493, 494,
	495, 315, 496, 0, 497, 623, 566, 567, 568, 0,
	504, 0, 498, 621, 569, 500, 570, 0, 501, 502,
	503, 0, 505, 506, 0, 0, 507, 508, 509, 511,
	512, 510, 513, 0, 514, 0, 0, 515, 516, 517,
	571, 572, 573, 0, 519, 518, 574, 611, 0, 238,
	0, 520, 521, 575, 522, 523, 524, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 244, 245, 246, 247,
	248, 249, 0, 250, 251, 0, 0, 0, 0, 0,
	525, 0, 0, 0, 0, 252, 253, 255, 254, 256,
	257, 258, 526, 527, 0, 259, 528, 260, 529, 0,
	261, 262, 263, 264, 265, 0, 0, 0, 266, 530,
	531, 532, 0, 267, 268, 533, 0, 0, 0, 269,
	270, 271, 272, 273, 274, 275, 0, 0, 277, 278,
	279, 276, 0, 280, 0, 281, 282, 283, 0, 284,
	0, 285, 286, 0, 0, 0, 0, 0, 0, 0,
	287, 288, 289, 290, 0, 291, 534, 535, 0, 295,
	292, 293, 0, 296, 294, 0, 297, 298, 299, 0,
	0, 300, 301, 302, 0, 303, 304, 0, 305, 306,
	307, 0, 308, 309, 536, 310, 311, 312, 314, 316,
	313, 317, 318, 319, 320, 537, 538, 0, 0, 0,
	0, 0, 0, 0, 321, 322, 323, 539, 0, 0,
	0, 324, 0, 325, 0, 0, 0, 326, 327, 540,
	541, 328, 329, 0, 330, 542, 0, 543, 331, 0,
	332, 333, 334, 335, 336, 544, 545, 546, 393, 0,
	337, 338, 0, 339, 340, 341, 342, 0, 0, 0,
	0, 343, 344, 346, 0, 0, 345, 547, 548, 0,
	549, 0, 347, 348, 0, 550, 0, 349, 350, 351,
	0, 352, 0, 0, 0, 353, 354, 355, 356, 357,
	358, 0, 359, 361, 360, 0, 362, 551, 0, 363,
	364, 0, 0, 365, 366, 367, 0, 0, 368, 369,
	370, 371, 0, 372, 373, 375, 377, 374, 376, 381,
	378, 379, 380, 383, 0, 382, 0, 384, 385, 386,
	389, 390, 388, 0, 387, 0, 0, 0, 391, 0,
	552, 392, 553, 394, 395, 0, 0, 396, 0, 0,
	0, 398, 399, 400, 0, 0, 401, 402, 554, 0,
	403, 0, 555, 404, 405, 397, 406, 407, 408, 409,
	410, 411, 412, 413, 0, 414, 415, 556, 557, 558,
	416, 559, 417, 418, 0, 419, 0, 420, 421, 422,
	423, 424, 425, 426, 560, 428, 427, 429, 0, 0,
	0, 0, 0, 0, 430, 0, 432, 433, 434, 431,
	435, 436, 437, 438, 0, 439, 440, 441, 0, 442,
	443, 444, 445, 561, 446, 0, 447, 448, 612, 455,
	449, 450, 456, 457, 458, 459, 460, 0, 462, 463,
	461, 464, 465, 466, 0, 467, 451, 452, 468, 469,
	0, 470, 471, 472, 473, 474, 475, 562, 0, 476,
	0, 477, 478, 479, 480, 453, 481, 486, 563, 482,
	483, 484, 485, 564, 0, 488, 489, 0, 487, 0,
	490, 491, 492, 493, 494, 495, 315, 496, 0, 497,
	565, 566, 567, 568, 0, 504, 0, 498, 499, 569,
	500, 570, 0, 501, 502, 503, 0, 505, 506, 0,
	0, 507, 508, 509, 511, 512, 510, 513, 0, 514,
	0, 0, 515, 516, 517, 571, 572, 573, 0, 519,
	518, 574, 609, 0, 238, 0, 520, 521, 575, 522,
	523, 524, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 244, 245, 246, 247, 248, 249, 0, 250, 251,
	0, 0, 0, 0, 0, 525, 0, 0, 0, 0,
	252, 253, 255, 254, 256, 257, 258, 526, 527, 0,
	259, 528, 260, 529, 0, 261, 262, 263, 264, 265,
	0, 0, 0, 266, 530, 531, 532, 0, 267, 268,
	533, 0, 0, 0, 269, 270, 271, 272, 273, 274,
	275, 0, 0, 277, 278, 279, 276, 0, 280, 0,
	281, 282, 283, 0, 284, 0, 285, 286, 0, 0,
	0, 0, 0, 0, 0, 287, 288, 289, 290, 0,
	291, 534, 535, 0, 295, 292, 293, 0, 296, 294,
	0, 297, 298, 299, 0, 0, 300, 301, 302, 0,
	303, 304, 0, 305, 306, 307, 0, 308, 309, 536,
	310, 311, 312, 314, 316, 313, 317, 318, 319, 320,
	537, 538, 0, 0, 0, 0, 0, 0, 0, 321,
	322, 323, 539, 0, 0, 0, 324, 0, 325, 0,
	0, 0, 326, 327, 540, 541, 328, 329, 0, 330,
	542, 0, 543, 331, 0, 332, 333, 334, 335, 336,
	544, 545, 546, 393, 0, 337, 338, 0, 339, 340,
	341, 342, 0, 0, 0, 0, 343, 344, 346, 0,
	0, 345, 547, 548, 0, 549, 0, 347, 348, 0,
	550, 0, 349, 350, 351, 0, 352, 0, 0, 0,
	353, 354, 355, 356, 357, 358, 0, 359, 361, 360,
	0, 362, 551, 0, 363, 364, 0, 0, 365, 366,
	367, 0, 0, 368, 369, 370, 371, 0, 372, 373,
	375, 377, 374, 376, 381, 378, 379, 380, 383, 0,
	382, 0, 384, 385, 386, 389, 390, 388, 0, 387,
	0, 0, 0, 391, 0, 552, 392, 553, 394, 395,
	0, 0, 396, 0, 0, 0, 398, 399, 400, 0,
	0, 401, 402, 554, 0, 403, 0, 555, 404, 405,
	397, 406, 407, 408, 409, 410, 411, 412, 413, 0,
	414, 415, 556, 557, 558, 416, 559, 417, 418, 0,
	419, 0, 420, 421, 422, 423, 424, 425, 426, 560,
	428, 427, 429, 0, 0, 0, 0, 0, 0, 430,
	0, 432, 433, 434, 431, 435, 436, 437, 438, 0,
	439, 440, 441, 0, 442, 443, 444, 445, 561, 446,
	0, 447, 448, 454, 455, 449, 450, 456, 457, 458,
	459, 460, 0, 462, 463, 461, 464, 465, 466, 0,
	467, 451, 452, 468, 469, 0, 470, 471, 472, 473,
	474, 475, 562, 0, 476, 0, 477, 478, 479, 480,
	453, 481, 486, 563, 482, 483, 484, 485, 564, 0,
	488, 489, 0, 487, 0, 490, 491, 492, 493, 494,
	495, 315, 496, 0, 497, 565, 566, 567, 568, 0,
	504, 0, 498, 499, 569, 500, 570, 0, 501, 502,
	503, 0, 505, 506, 0, 0, 507, 508, 509, 511,
	512, 510, 513, 0, 514, 0, 0, 515, 516, 517,
	571, 572, 573, 0, 519, 518, 574, 603, 0, 238,
	0, 520, 521, 575, 522, 523, 524, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 244, 245, 246, 247,
	248, 249, 0, 250, 251, 0, 0, 0, 0, 0,
	525, 0, 0, 0, 0, 252, 253, 255, 254, 256,
	257, 258, 526, 527, 0, 259, 528, 260, 529, 0,
	261, 262, 263, 264, 265, 0, 0, 0, 266, 530,
	531, 532, 0, 267, 268, 533, 0, 0, 0, 269,
	270, 271, 272, 273, 274, 275, 0, 0, 277, 278,
	279, 276, 0, 280, 0, 281, 282, 283, 0, 284,
	0, 285, 286, 0, 0, 0, 0, 0, 0, 0,
	287, 288, 289, 290, 0, 291, 534, 535, 0, 295,
	292, 293, 0, 296, 294, 0, 297, 298, 299, 0,
	0, 300, 301, 302, 0, 303, 304, 0, 305, 306,
	307, 0, 308, 309, 536, 310, 311, 312, 314, 316,
	313, 317, 318, 319, 320, 537, 538, 0, 0, 0,
	0, 0, 0, 0, 321, 322, 323, 539, 0, 0,
	0, 324, 0, 325, 0, 0, 0, 326, 327, 540,
	541, 328, 329, 0, 330, 542, 0, 543, 331, 0,
	332, 333, 334, 335, 336, 544, 545, 546, 393, 0,
	337, 338, 0, 339, 340, 341, 342, 0, 0, 0,
	0, 343, 344, 346, 0, 0, 345, 547, 548, 0,
	549, 0, 347, 348, 0, 550, 0, 349, 350, 351,
	0, 352, 0, 0, 0, 353, 354, 355, 356, 357,
	358, 0, 359, 361, 360, 0, 362, 551, 0, 363,
	364, 0, 0, 365, 366, 367, 0, 0, 368, 369,
	370, 371, 0, 372, 373, 375, 377, 374, 376, 381,
	378, 379, 380, 383, 0, 382, 0, 384, 385, 386,
	389, 390, 388, 0, 387, 0, 0, 0, 391, 0,
	552, 392, 553, 394, 395, 0, 0, 396, 0, 0,
	0, 398, 399, 400, 0, 0, 401, 402, 554, 0,
	403, 0, 555, 404, 405, 397, 406, 407, 408, 409,
	410, 411, 412, 413, 0, 414, 415, 556, 557, 558,
	416, 559, 417, 418, 0, 419, 0, 420, 421, 422,
	423, 424, 425, 426, 560, 428, 427, 429, 0, 0,
	0, 0, 0, 0, 430, 0, 432, 433, 434, 431,
	435, 436, 437, 438, 0, 439, 440, 441, 0, 442,
	443, 444, 445, 561, 446, 0, 447, 448, 454, 455,
	449, 450, 456, 457, 458, 459, 460, 0, 462, 463,
	461, 464, 465, 466, 0, 467, 451, 452, 468, 469,
	0, 470, 471, 472, 473, 474, 475, 562, 0, 476,
	0, 477, 478, 479, 480, 453, 481, 486, 563, 482,
	483, 484, 485, 564, 0, 488, 489, 0, 487, 0,
	490, 491, 492, 493, 494, 495, 315, 496, 0, 497,
	565, 566, 567, 568, 0, 504, 0, 498, 499, 569,
	500, 570, 0, 501, 502, 503, 0, 505, 506, 0,
	0, 507, 508, 509, 511, 512, 510, 513, 0, 514,
	0, 0, 515, 516, 517, 571, 572, 573, 0, 519,
	518, 574, 581, 0, 238, 0, 520, 521, 575, 522,
	523, 524, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 244, 245, 246, 247, 248, 249, 0, 250, 251,
	0, 0, 0, 0, 0, 525, 0, 0, 0, 0,
	252, 253, 255, 254, 256, 257, 258, 526, 527, 0,
	259, 528, 260, 529, 0, 261, 262, 263, 264, 265,
	0, 0, 0, 266, 530, 531, 532, 0, 267, 268,
	533, 0, 0, 0, 269, 270, 271, 272, 273, 274,
	275, 0, 0, 277, 278, 279, 276, 0, 280, 0,
	281, 282, 283, 0, 284, 0, 285, 286, 0, 0,
	0, 0, 0, 0, 0, 287, 288, 289, 290, 0,
	291, 534, 535, 0, 295, 292, 293, 0, 296, 294,
	0, 297, 298, 299, 0, 0, 300, 301, 302, 0,
	303, 304, 0, 305, 306, 307, 0, 308, 309, 536,
	310, 311, 312, 314, 316, 313, 317, 318, 319, 320,
	537, 538, 0, 0, 0, 0, 0, 0, 0, 321,
	322, 323, 539, 0, 0, 0, 324, 0, 325, 0,
	0, 0, 326, 327, 540, 541, 328, 329, 0, 330,
	542, 0, 543, 331, 0, 332, 333, 334, 335, 336,
	544, 545, 546, 393, 0, 337, 338, 0, 339, 340,
	341, 342, 0, 0, 0, 0, 343, 344, 346, 0,
	0, 345, 547, 548, 0, 549, 0, 347, 348, 0,
	550, 0, 349, 350, 351, 0, 352, 0, 0, 0,
	353, 354, 355, 356, 357, 358, 0, 359, 361, 360,
	0, 362, 551, 0, 363, 364, 0, 0, 365, 366,
	367, 0, 0, 368, 369, 370, 371, 0, 372, 373,
	375, 377, 374, 376, 381, 378, 379, 380, 383, 0,
	382, 0, 384, 385, 386, 389, 390, 388, 0, 387,
	0, 0, 0, 391, 0, 552, 392, 553, 394, 395,
	0, 0, 396, 0, 0, 0, 398, 399, 400, 0,
	0, 401, 402, 554, 0, 403, 0, 555, 404, 405,
	397, 406, 407, 408, 409, 410, 411, 412, 413, 0,
	414, 415, 556, 557, 558, 416, 559, 417, 418, 0,
	419, 0, 420, 421, 422, 423, 424, 425, 426, 560,
	428, 427, 429, 0, 0, 0, 0, 0, 0, 430,
	0, 432, 433, 434, 431, 435, 436, 437, 438, 0,
	439, 440, 441, 0, 442, 443, 444, 445, 561, 446,
	0, 447, 448, 454, 455, 449, 450, 456, 457, 458,
	459, 460, 0, 462, 463, 461, 464, 465, 466, 0,
	467, 451, 452, 468, 469, 0, 470, 471, 472, 473,
	474, 475, 562, 0, 476, 0, 477, 478, 479, 480,
	453, 481, 486, 563, 482, 483, 484, 485, 564, 0,
	488, 489, 0, 487, 0, 490, 491, 492, 493, 494,
	495, 315, 496, 0, 497, 565, 566, 567, 568, 0,
	504, 0, 498, 499, 569, 500, 570, 0, 501, 502,
	503, 0, 505, 506, 0, 0, 507, 508, 509, 511,
	512, 510, 513, 0, 514, 0, 0, 515, 516, 517,
	571, 572, 573, 238, 519, 518, 574, 0, 0, 0,
	0, 520, 521, 575, 522, 523, 524, 0, 0, 0,
	244, 245, 246, 247, 248, 249, 0, 250, 251, 0,
	0, 0, 0, 0, 525, 0, 0, 0, 0, 252,
	253, 255, 254, 256, 257, 258, 526, 527, 0, 259,
	528, 260, 529, 0, 261, 262, 263, 264, 265, 0,
	0, 0, 266, 530, 531, 532, 0, 267, 268, 533,
	0, 0, 0, 269, 270, 271, 272, 273, 274, 275,
	0, 0, 277, 278, 279, 276, 0, 280, 0, 281,
	282, 283, 0, 284, 0, 285, 286, 0, 0, 0,
	0, 0, 0, 0, 287, 288, 289, 290, 0, 291,
	534, 535, 0, 295, 292, 293, 0, 296, 294, 0,
	297, 298, 299, 0, 0, 300, 301, 302, 0, 303,
	304, 0, 305, 306, 307, 0, 308, 309, 536, 310,
	311, 312, 314, 316, 313, 317, 318, 319, 320, 537,
	538, 0, 0, 0, 0, 0, 0, 0, 321, 322,
	323, 539, 0, 0, 0, 324, 0, 325, 0, 0,
	0, 326, 327, 540, 541, 328, 329, 0, 330, 542,
	0, 543, 331, 0, 332, 333, 334, 335, 336, 544,
	545, 546, 393, 0, 337, 338, 0, 339, 340, 341,
	342, 0, 0, 0, 0, 343, 344, 346, 0, 0,
	345, 547, 548, 0, 549, 0, 347, 348, 0, 550,
	0, 349, 350, 351, 0, 352, 0, 0, 0, 353,
	354, 355, 356, 357, 358, 0, 359, 361, 360, 0,
	362, 551, 0, 363, 364, 0, 0, 365, 366, 367,
	0, 0, 368, 369, 370, 371, 0, 372, 373, 375,
	377, 374, 376, 381, 378, 379, 380, 383, 0, 382,
	0, 384, 385, 386, 389, 390, 388, 0, 387, 0,
	0, 0, 391, 0, 552, 392, 553, 394, 395, 0,
	0, 396, 0, 0, 0, 398, 399, 400, 0, 0,
	401, 402, 554, 0, 403, 0, 555, 404, 405, 397,
	406, 407, 408, 409, 410, 411, 412, 413, 0, 414,
	415, 556, 557, 558, 416, 559, 417, 418, 0, 419,
	0, 420, 421, 422, 423, 424, 425, 426, 560, 428,
	427, 429, 0, 0, 0, 0, 0, 0, 430, 0,
	432, 433, 434, 431, 435, 436, 437, 438, 0, 439,
	440, 441, 0, 442, 443, 444, 445, 561, 446, 0,
	447, 448, 454, 455, 449, 450, 456, 457, 458, 459,
	460, 0, 462, 463, 461, 464, 465, 466, 0, 467,
	451, 452, 468, 469, 0, 470, 471, 472, 473, 474,
	475, 562, 0, 476, 0, 477, 478, 479, 480, 453,
	481, 486, 563, 482, 483, 484, 485, 564, 0, 488,
	489, 0, 487, 0, 490, 491, 492, 493, 494, 495,
	315, 496, 0, 497, 565, 566, 567, 568, 0, 504,
	0, 498, 499, 569, 500, 570, 0, 501, 502, 503,
	0, 505, 506, 0, 0, 507, 508, 509, 511, 512,
	510, 513, 0, 514, 0, 0, 515, 516, 517, 571,
	572, 573, 238, 519, 518, 574, 0, 0, 0, 0,
	520, 521, 575, 522, 523, 524, 0, 0, 0, 244,
	245, 246, 247, 248, 249, 0, 250, 251, 0, 0,
	0, 0, 0, 525, 0, 0, 0, 0, 252, 253,
	255, 254, 256, 257, 258, 526, 527, 0, 259, 528,
	260, 529, 0, 261, 262, 263, 264, 265, 0, 0,
	0, 266, 530, 531, 532, 0, 267, 268, 533, 0,
	0, 0, 269, 270, 271, 272, 273, 274, 275, 0,
	0, 277, 278, 279, 276, 0, 280, 0, 281, 282,
	283, 0, 284, 0, 285, 286, 0, 0, 0, 0,
	0, 0, 0, 287, 288, 289, 290, 0, 291, 534,
	535, 0, 295, 292, 293, 0, 296, 294, 0, 297,
	298, 299, 0, 0, 300, 301, 302, 0, 303, 304,
	0, 305, 306, 307, 0, 308, 309, 536, 310, 311,
	312, 314, 316, 313, 317, 318, 319, 320, 537, 538,
	0, 0, 0, 0, 0, 0, 0, 321, 322, 323,
	539, 0, 0, 0, 324, 0, 325, 0, 0, 0,
	326, 327, 540, 541, 328, 329, 0, 330, 542, 0,
	543, 331, 0, 332, 333, 334, 335, 336, 3069, 545,
	546, 393, 0, 337, 338, 0, 339, 340, 341, 342,
	0, 0, 0, 0, 343, 344, 346, 0, 0, 345,
	547, 548, 0, 549, 0, 347, 348, 0, 550, 0,
	349, 350, 351, 0, 352, 0, 0, 0, 353, 354,
	355, 356, 357, 358, 0, 359, 361, 360, 0, 362,
	551, 0, 363, 364, 0, 0, 365, 366, 367, 0,
	0, 368, 369, 370, 371, 0, 372, 373, 375, 377,
	374, 376, 381, 378, 379, 380, 383, 0, 382, 0,
	384, 385, 386, 389, 390, 388, 0, 387, 0, 0,
	0, 391, 0, 552, 392, 553, 394, 395, 0, 0,
	396, 0, 0, 0, 398, 399, 400, 0, 0, 401,
	402, 554, 0, 403, 0, 555, 404, 405, 397, 406,
	407, 408, 409, 410, 411, 412, 413, 0, 414, 415,
	556, 557, 558, 416, 559, 417, 418, 0, 419, 0,
	420, 421, 422, 423, 424, 425, 426, 560, 428, 427,
	429, 0, 0, 0, 0, 0, 0, 430, 0, 432,
	433, 434, 431, 435, 436, 437, 438, 0, 439, 440,
	441, 0, 442, 443, 444, 445, 561, 446, 0, 447,
	448, 454, 455, 449, 450, 456, 457, 458, 459, 460,
	0, 462, 463, 461, 464, 465, 466, 0, 467, 451,
	452, 468, 469, 0, 470, 471, 472, 473, 474, 475,
	562, 0, 476, 0, 477, 478, 479, 480, 453, 481,
	486, 563, 482, 483, 484, 485, 564, 0, 488, 489,
	0, 487, 0, 490, 491, 492, 493, 494, 495, 315,
	496, 0, 497, 565, 566, 567, 568, 0, 504, 0,
	498, 499, 569, 500, 570, 0, 501, 502, 503, 0,
	505, 506, 0, 0, 507, 508, 509, 511, 512, 510,
	513, 0, 514, 0, 0, 515, 516, 517, 571, 572,
	573, 238, 519, 518, 574, 0, 0, 0, 0, 520,
	521, 575, 522, 523, 524, 0, 0, 0, 244, 245,
	246, 247, 248, 249, 0, 250, 251, 0, 0, 0,
	0, 0, 525, 0, 0, 0, 0, 252, 253, 255,
	254, 256, 257, 258, 526, 527, 0, 259, 528, 260,
	529, 0, 261, 262, 263, 264, 265, 0, 0, 0,
	266, 530, 531, 532, 0, 267, 268, 533, 0, 0,
	0, 269, 270, 271, 272, 273, 274, 275, 0, 0,
	277, 278, 279, 276, 0, 280, 0, 281, 282, 283,
	0, 284, 0, 285, 286, 0, 0, 0, 0, 0,
	0, 0, 287, 288, 289, 290, 0, 291, 534, 535,
	0, 295, 292, 293, 0, 296, 294, 0, 297, 298,
	299, 0, 0, 300, 301, 302, 0, 303, 304, 0,
	305, 306, 307, 0, 308, 309, 536, 310, 311, 312,
	314, 316, 313, 317, 318, 319, 320, 537, 538, 0,
	0, 0, 0, 0, 0, 0, 321, 322, 323, 539,
	0, 0, 0, 324, 0, 325, 0, 0, 0, 326,
	327, 540, 541, 328, 329, 0, 330, 542, 0, 543,
	331, 0, 332, 333, 334, 335, 336, 3025, 545, 546,
	393, 0, 337, 338, 0, 339, 340, 341, 342, 0,
	0, 0, 0, 343, 344, 346, 0, 0, 345, 547,
	548, 0, 549, 0, 347, 348, 0, 550, 0, 349,
	350, 351, 0, 352, 0, 0, 0, 353, 354, 355,
	356, 357, 358, 0, 359, 361, 360, 0, 362, 551,
	0, 363, 364, 0, 0, 365, 366, 367, 0, 0,
	368, 369, 370, 371, 0, 372, 373, 375, 377, 374,
	376, 381, 378, 379, 380, 383, 0, 382, 0, 384,
	385, 386, 389, 390, 388, 0, 387, 0, 0, 0,
	391, 0, 552, 392, 553, 394, 395, 0, 0, 396,
	0, 0, 0, 398, 399, 400, 0, 0, 401, 402,
	554, 0, 403, 0, 555, 404, 405, 397, 406, 407,
	408, 409, 410, 411, 412, 413, 0, 414, 415, 556,
	557, 558, 416, 559, 417, 418, 0, 419, 0, 420,
	421, 422, 423, 424, 425, 426, 560, 428, 427, 429,
	0, 0, 0, 0, 0, 0, 430, 0, 432, 433,
	434, 431, 435, 436, 437, 438, 0, 439, 440, 441,
	0, 442, 443, 444, 445, 561, 446, 0, 447, 448,
	454, 455, 449, 450, 456, 457, 458, 459, 460, 0,
	462, 463, 461, 464, 465, 466, 0, 467, 451, 452,
	468, 469, 0, 470, 471, 472, 473, 474, 475, 562,
	0, 476, 0, 477, 478, 479, 480, 453, 481, 486,
	563, 482, 483, 484, 485, 564, 0, 488, 489, 0,
	487, 0, 490, 491, 492, 493, 494, 495, 315, 496,
	0, 497, 565, 566, 567, 568, 0, 504, 0, 498,
	499, 569, 500, 570, 0, 501, 502, 503, 0, 505,
	506, 0, 0, 507, 508, 509, 511, 512, 510, 513,
	0, 514, 0, 0, 515, 516, 517, 571, 572, 573,
	238, 519, 518, 574, 0, 0, 0, 0, 520, 521,
	575, 522, 523, 524, 0, 0, 0, 244, 245, 246,
	247, 248, 249, 0, 250, 251, 0, 0, 0, 0,
	0, 525, 0, 0, 0, 0, 252, 253, 255, 254,
	256, 257, 258, 526, 527, 0, 259, 528, 260, 529,
	0, 261, 262, 263, 264, 265, 0, 0, 0, 266,
	530, 531, 532, 0, 267, 268, 533, 0, 0, 0,
	269, 270, 271, 272, 273, 274, 275, 0, 0, 277,
	278, 279, 276, 0, 280, 0, 281, 282, 283, 0,
	284, 0, 285, 286, 0, 0, 0, 0, 0, 0,
	0, 287, 288, 289, 290, 0, 291, 534, 535, 0,
	295, 292, 293, 0, 296, 294, 0, 297, 298, 299,
	0, 0, 300, 301, 302, 0, 303, 304, 0, 305,
	306, 307, 0, 308, 309, 536, 310, 311, 312, 314,
	316, 313, 317, 318, 319, 320, 537, 538, 0, 0,
	0, 0, 0, 0, 0, 321, 322, 323, 539, 0,
	0, 0, 324, 0, 325, 0, 0, 0, 326, 327,
	540, 541, 328, 329, 0, 330, 542, 0, 543, 331,
	0, 332, 333, 334, 335, 336, 2966, 545, 546, 393,
	0, 337, 338, 0, 339, 340, 341, 342, 0, 0,
	0, 0, 343, 344, 346, 0, 0, 345, 547, 548,
	0, 549, 0, 347, 348, 0, 550, 0, 349, 350,
	351, 0, 352, 0, 0, 0, 353, 354, 355, 356,
	357, 358, 0, 359, 361, 360, 0, 362, 551, 0,
	363, 364, 0, 0, 365, 366, 367, 0, 0, 368,
	369, 370, 371, 0, 372, 373, 375, 377, 374, 376,
	381, 378, 379, 380, 383, 0, 382, 0, 384, 385,
	386, 389, 390, 388, 0, 387, 0, 0, 0, 391,
	0, 552, 392, 553, 394, 395, 0, 0, 396, 0,
	0, 0, 398, 399, 400, 0, 0, 401, 402, 554,
	0, 403, 0, 555, 404, 405, 397, 406, 407, 408,
	409, 410, 411, 412, 413, 0, 414, 415, 556, 557,
	558, 416, 559, 417, 418, 0, 419, 0, 420, 421,
	422, 423, 424, 425, 426, 560, 428, 427, 429, 0,
	0, 0, 0, 0, 0, 430, 0, 432, 433, 434,
	431, 435, 436, 437, 438, 0, 439, 440, 441, 0,
	442, 443, 444, 445, 561, 446, 0, 447, 448, 454,
	455, 449, 450, 456, 457, 458, 459, 460, 0, 462,
	463, 461, 464, 465, 466, 0, 467, 451, 452, 468,
	469, 0, 470, 471, 472, 473, 474, 475, 562, 0,
	476, 0, 477, 478, 479, 480, 453, 481, 486, 563,
	482, 483, 484, 485, 564, 0, 488, 489, 0, 487,
	0, 490, 491, 492, 493, 494, 495, 315, 496, 0,
	497, 565, 566, 567, 568, 0, 504, 0, 498, 499,
	569, 500, 570, 0, 501, 502, 503, 0, 505, 506,
	0, 0, 507, 508, 509, 511, 512, 510, 513, 0,
	514, 0, 0, 515, 516, 517, 571, 572, 573, 238,
	519, 518, 574, 0, 0, 0, 0, 520, 521, 575,
	522, 523, 524, 0, 0, 0, 244, 245, 246, 247,
	248, 249, 0, 250, 251, 0, 0, 0, 0, 0,
	525, 0, 0, 0, 0, 252, 253, 255, 254, 256,
	257, 258, 526, 527, 0, 259, 528, 260, 529, 0,
	261, 262, 263, 264, 265, 0, 0, 0, 266, 530,
	531, 532, 0, 267, 268, 533, 0, 0, 0, 269,
	270, 271, 272, 273, 274, 275, 0, 0, 277, 278,
	279, 276, 0, 280, 0, 281, 282, 283, 0, 284,
	0, 285, 286, 0, 0, 0, 0, 0, 0, 0,
	287, 288, 289, 290, 0, 291, 534, 535, 0, 295,
	292, 293, 0, 296, 294, 0, 297, 298, 299, 0,
	0, 300, 301, 302, 0, 303, 304, 0, 305, 306,
	307, 0, 308, 309, 536, 310, 311, 312, 314, 316,
	313, 317, 318, 319, 320, 537, 538, 0, 0, 0,
	0, 0, 0, 0, 321, 322, 323, 539, 0, 0,
	0, 324, 0, 325, 0, 0, 0, 326, 327, 540,
	541, 328, 329, 0, 330, 542, 0, 543, 331, 0,
	332, 333, 334, 335, 336, 2964, 545, 546, 393, 0,
	337, 338, 0, 339, 340, 341, 342, 0, 0, 0,
	0, 343, 344, 346, 0, 0, 345, 547, 548, 0,
	549, 0, 347, 348, 0, 550, 0, 349, 350, 351,
	0, 352, 0, 0, 0, 353, 354, 355, 356, 357,
	358, 0, 359, 361, 360, 0, 362, 551, 0, 363,
	364, 0, 0, 365, 366, 367, 0, 0, 368, 369,
	370, 371, 0, 372, 373, 375, 377, 374, 376, 381,
	378, 379, 380, 383, 0, 382, 0, 384, 385, 386,
	389, 390, 388, 0, 387, 0, 0, 0, 391, 0,
	552, 392, 553, 394, 395, 0, 0, 396, 0, 0,
	0, 398, 399, 400, 0, 0, 401, 402, 554, 0,
	403, 0, 555, 404, 405, 397, 406, 407, 408, 409,
	410, 411, 412, 413, 0, 414, 415, 556, 557, 558,
	416, 559, 417, 418, 0, 419, 0, 420, 421, 422,
	423, 424, 425, 426, 560, 428, 427, 429, 0, 0,
	0, 0, 0, 0, 430, 0, 432, 433, 434, 431,
	435, 436, 437, 438, 0, 439, 440, 441, 0, 442,
	443, 444, 445, 561, 446, 0, 447, 448, 454, 455,
	449, 450, 456, 457, 458, 459, 460, 0, 462, 463,
	461, 464, 465, 466, 0, 467, 451, 452, 468, 469,
	0, 470, 471, 472, 473, 474, 475, 562, 0, 476,
	0, 477, 478, 479, 480, 453, 481, 486, 563, 482,
	483, 484, 485, 564, 0, 488, 489, 0, 487, 0,
	490, 491, 492, 493, 494, 495, 315, 496, 0, 497,
	565, 566, 567, 568, 0, 504, 0, 498, 499, 569,
	500, 570, 0, 501, 502, 503, 0, 505, 506, 0,
	0, 507, 508, 509, 511, 512, 510, 513, 0, 514,
	0, 0, 515, 516, 517, 571, 572, 573, 238, 519,
	518, 574, 0, 0, 0, 0, 520, 521, 575, 522,
	523, 524, 0, 0, 0, 244, 245, 246, 247, 248,
	249, 0, 250, 251, 0, 0, 0, 0, 0, 525,
	0, 0, 0, 0, 252, 253, 255, 254, 256, 257,
	258, 526, 527, 0, 259, 528, 260, 529, 0, 261,
	262, 263, 264, 265, 0, 0, 0, 266, 530, 531,
	532, 0, 267, 268, 533, 0, 0, 0, 269, 270,
	271, 272, 273, 274, 275, 0, 0, 277, 278, 279,
	276, 0, 280, 0, 281, 282, 283, 0, 284, 0,
	285, 286, 0, 0, 0, 0, 0, 0, 0, 287,
	288, 289, 290, 0, 291, 534, 535, 0, 295, 292,
	293, 0, 296, 294, 0, 297, 298, 299, 0, 0,
	300, 301, 302, 0, 303, 304, 0, 305, 306, 307,
	0, 308, 309, 536, 310, 311, 312, 314, 316, 313,
	317, 318, 319, 320, 537, 538, 0, 0, 0, 0,
	0, 0, 0, 321, 322, 323, 539, 0, 0, 0,
	324, 0, 325, 0, 0, 0, 326, 327, 540, 541,
	328, 329, 0, 330, 542, 0, 543, 331, 0, 332,
	333, 334, 335, 336, 2950, 545, 546, 393, 0, 337,
	338, 0, 339, 340, 341, 342, 0, 0, 0, 0,
	343, 344, 346, 0, 0, 345, 547, 548, 0, 549,
	0, 347, 348, 0, 550, 0, 349, 350, 351, 0,
	352, 0, 0, 0, 353, 354, 355, 356, 357, 358,
	0, 359, 361, 360, 0, 362, 551, 0, 363, 364,
	0, 0, 365, 366, 367, 0, 0, 368, 369, 370,
	371, 0, 372, 373, 375, 377, 374, 376, 381, 378,
	379, 380, 383, 0, 382, 0, 384, 385, 386, 389,
	390, 388, 0, 387, 0, 0, 0, 391, 0, 552,
	392, 553, 394, 395, 0, 0, 396, 0, 0, 0,
	398, 399, 400, 0, 0, 401, 402, 554, 0, 403,
	0, 555, 404, 405, 397, 406, 407, 408, 409, 410,
	411, 412, 413, 0, 414, 415, 556, 557, 558, 416,
	559, 417, 418, 0, 419, 0, 420, 421, 422, 423,
	424, 425, 426, 560, 428, 427, 429, 0, 0, 0,
	0, 0, 0, 430, 0, 432, 433, 434, 431, 435,
	436, 437, 438, 0, 439, 440, 441, 0, 442, 443,
	444, 445, 561, 446, 0, 447, 448, 454, 455, 449,
	450, 456, 457, 458, 459, 460, 0, 462, 463, 461,
	464, 465, 466, 0, 467, 451, 452, 468, 469, 0,
	470, 471, 472, 473, 474, 475, 562, 0, 476, 0,
	477, 478, 479, 480, 453, 481, 486, 563, 482, 483,
	484, 485, 564, 0, 488, 489, 0, 487, 0, 490,
	491, 492, 493, 494, 495, 315, 496, 0, 497, 565,
	566, 567, 568, 0, 504, 0, 498, 499, 569, 500,
	570, 0, 501, 502, 503, 0, 505, 506, 0, 0,
	507, 508, 509, 511, 512, 510, 513, 0, 514, 0,
	0, 515, 516, 517, 571, 572, 573, 238, 519, 518,
	574, 0, 0, 0, 0, 520, 521, 575, 522, 523,
	524, 0, 0, 0, 244, 245, 246, 247, 248, 249,
	0, 250, 251, 0, 0, 0, 0, 0, 525, 0,
	0, 0, 0, 252, 253, 255, 254, 256, 257, 258,
	526, 527, 0, 259, 528, 260, 529, 0, 261, 262,
	263, 264, 265, 0, 0, 0, 266, 530, 531, 532,
	0, 267, 268, 533, 0, 0, 0, 269, 270, 271,
	272, 273, 274, 275, 0, 0, 277, 278, 279, 276,
	0, 280, 0, 281, 282, 283, 0, 284, 0, 285,
	286, 0, 0, 0, 0, 0, 0, 0, 287, 288,
	289, 290, 0, 291, 534, 535, 0, 295, 292, 293,
	0, 296, 294, 0, 297, 298, 299, 0, 0, 300,
	301, 302, 0, 303, 304, 0, 305, 306, 307, 0,
	308, 309, 536, 310, 311, 312, 314, 316, 313, 317,
	318, 319, 320, 537, 538, 0, 0, 0, 0, 0,
	0, 0, 321, 322, 323, 539, 0, 0, 0, 324,
	0, 325, 0, 0, 0, 326, 327, 540, 541, 328,
	329, 0, 330, 542, 0, 543, 331, 0, 332, 333,
	334, 335, 336, 2587, 545, 546, 393, 0, 337, 338,
	0, 339, 340, 341, 342, 0, 0, 0, 0, 343,
	344, 346, 0, 0, 345, 547, 548, 0, 549, 0,
	347, 348, 0, 550, 0, 349, 350, 351, 0, 352,
	0, 0, 0, 353, 354, 355, 356, 357, 358, 0,
	359, 361, 360, 0, 362, 551, 0, 363, 364, 0,
	0, 365, 366, 367, 0, 0, 368, 369, 370, 371,
	0, 372, 373, 375, 377, 374, 376, 381, 378, 379,
	380, 383, 0, 382, 0, 384, 385, 386, 389, 390,
	388, 0, 387, 0, 0, 0, 391, 0, 552, 392,
	553, 394, 395, 0, 0, 396, 0, 0, 0, 398,
	399, 400, 0, 0, 401, 402, 554, 0, 403, 0,
	555, 404, 405, 397, 406, 407, 408, 409, 410, 411,
	412, 413, 0, 414, 415, 556, 557, 558, 416, 559,
	417, 418, 0, 419, 0, 420, 421, 422, 423, 424,
	425, 426, 560, 428, 427, 429, 0, 0, 0, 0,
	0, 0, 430, 0, 432, 433, 434, 431, 435, 436,
	437, 438, 0, 439, 440, 441, 0, 442, 443, 444,
	445, 561, 446, 0, 447, 448, 454, 455, 449, 450,
	456, 457, 458, 459, 460, 0, 462, 463, 461, 464,
	465, 466, 0, 467, 451, 452, 468, 469, 0, 470,
	471, 472, 473, 474, 475, 562, 0, 476, 0, 477,
	478, 479, 480, 453, 481, 486, 563, 482, 483, 484,
	485, 564, 0, 488, 489, 0, 487, 0, 490, 491,
	492, 493, 494, 495, 315, 496, 0, 497, 565, 566,
	567, 568, 0, 504, 0, 498, 499, 569, 500, 570,
	0, 501, 502, 503, 0, 505, 506, 0, 0, 507,
	508, 509, 511, 512, 510, 513, 0, 514, 0, 0,
	515, 516, 517, 571, 572, 573, 238, 519, 518, 574,
	0, 0, 0, 0, 520, 521, 575, 522, 523, 524,
	0, 0, 0, 244, 245, 246, 247, 248, 249, 0,
	250, 251, 0, 0, 0, 0, 0, 525, 0, 0,
	0, 0, 252, 253, 255, 254, 256, 257, 258, 526,
	527, 0, 259, 528, 260, 529, 0, 261, 262, 263,
	264, 265, 0, 0, 0, 266, 530, 531, 532, 0,
	267, 268, 533, 0, 0, 0, 269, 270, 271, 272,
	273, 274, 275, 0, 0, 277, 278, 279, 276, 0,
	280, 0, 281, 282, 283, 0, 284, 0, 285, 286,
	0, 0, 0, 0, 0, 0, 0, 287, 288, 289,
	290, 0, 291, 534, 535, 0, 295, 292, 293, 0,
	296, 294, 0, 297, 298, 299, 0, 0, 300, 301,
	302, 0, 303, 304, 0, 305, 306, 307, 0, 308,
	309, 536, 310, 311, 312, 314, 316, 313, 317, 318,
	319, 320, 537, 538, 0, 0, 0, 0, 0, 0,
	0, 321, 322, 323, 539, 0, 0, 0, 324, 0,
	325, 0, 0, 0, 326, 327, 540, 541, 328, 329,
	0, 330, 542, 0, 543, 331, 0, 332, 333, 334,
	335, 336, 544, 545, 546, 393, 0, 337, 338, 0,
	339, 340, 341, 342, 0, 0, 0, 0, 343, 344,
	346, 0, 0, 345, 547, 548, 0, 549, 0, 347,
	348, 0, 550, 0, 349, 350, 351, 0, 352, 0,
	0, 0, 353, 354, 355, 356, 357, 358, 0, 359,
	361, 360, 0, 362, 551, 0, 363, 364, 0, 0,
	365, 366, 367, 0, 0, 368, 369, 370, 371, 0,
	372, 373, 375, 377, 374, 376, 381, 378, 379, 380,
	383, 0, 382, 0, 384, 385, 386, 389, 390, 388,
	0, 387, 0, 0, 0, 391, 0, 552, 392, 553,
	394, 395, 0, 0, 396, 0, 0, 0, 398, 399,
	400, 0, 0, 401, 402, 554, 0, 403, 0, 555,
	404, 405, 397, 406, 407, 408, 409, 410, 411, 412,
	413, 0, 414, 415, 556, 557, 558, 416, 559, 417,
	418, 0, 419, 0, 420, 421, 422, 423, 424, 425,
	426, 560, 428, 427, 429, 0, 0, 0, 0, 0,
	0, 430, 0, 432, 433, 434, 431, 435, 436, 437,
	438, 0, 439, 440, 441, 0, 442, 443, 444, 445,
	561, 446, 0, 447, 448, 612, 455, 449, 450, 456,
	457, 458, 459, 460, 0, 462, 463, 461, 464, 465,
	466, 0, 467, 451, 452, 468, 469, 0, 470, 471,
	472, 473, 474, 475, 562, 0, 476, 0, 477, 478,
	479, 480, 453, 481, 486, 563, 482, 483, 484, 485,
	564, 0, 488, 489, 0, 487, 0, 490, 491, 492,
	493, 494, 495, 315, 496, 0, 497, 565, 566, 567,
	568, 0, 504, 0, 498, 499, 569, 500, 570, 0,
	501, 502, 503, 0, 505, 506, 0, 0, 507, 508,
	509, 511, 512, 510, 513, 0, 514, 0, 0, 515,
	516, 517, 571, 572, 573, 238, 519, 518, 574, 0,
	0, 0, 0, 520, 521, 575, 522, 523, 524, 0,
	0, 0, 244, 245, 246, 247, 248, 249, 0, 250,
	251, 0, 0, 0, 0, 0, 525, 0, 1997, 0,
	0, 252, 253, 255, 254, 256, 257, 258, 526, 527,
	0, 259, 528, 260, 529, 0, 261, 262, 263, 264,
	265, 0, 0, 0, 266, 530, 531, 532, 0, 267,
	268, 533, 0, 0, 0, 269, 270, 271, 272, 273,
	274, 275, 0, 0, 277, 278, 279, 276, 0, 280,
	0, 281, 282, 283, 0, 284, 0, 285, 286, 0,
	0, 0, 0, 0, 0, 0, 287, 288, 289, 290,
	0, 291, 534, 535, 0, 295, 292, 293, 0, 296,
	294, 0, 297, 298, 299, 0, 0, 300, 301, 302,
	0, 303, 304, 0, 305, 306, 307, 0, 308, 309,
	536, 310, 311, 312, 314, 316, 313, 317, 318, 319,
	320, 537, 538, 0, 0, 0, 0, 0, 0, 0,
	321, 322, 323, 539, 0, 0, 0, 324, 0, 325,
	0, 0, 0, 326, 327, 540, 541, 328, 329, 0,
	330, 542, 0, 543, 331, 0, 332, 333, 334, 335,
	336, 544, 545, 546, 393, 0, 337, 338, 0, 339,
	340, 341, 342, 0, 0, 0, 0, 343, 344, 346,
	0, 0, 345, 547, 548, 0, 549, 0, 347, 348,
	0, 550, 0, 349, 350, 351, 0, 352, 0, 0,
	0, 353, 354, 355, 356, 357, 358, 0, 359, 361,
	360, 0, 362, 551, 0, 363, 364, 0, 0, 365,
	366, 367, 0, 0, 368, 369, 370, 371, 0, 372,
	373, 375, 377, 374, 376, 381, 378, 379, 380, 383,
	0, 382, 0, 384, 385, 386, 389, 390, 388, 0,
	387, 0, 0, 0, 391, 0, 552, 392, 553, 394,
	395, 0, 0, 396, 0, 0, 0, 398, 399, 400,
	0, 0, 401, 402, 554, 0, 403, 0, 555, 404,
	405, 397, 406, 407, 408, 409, 410, 411, 412, 413,
	0, 414, 415, 556, 557, 558, 416, 559, 417, 418,
	0, 419, 0, 420, 421, 422, 423, 424, 425, 426,
	560, 428, 427, 429, 0, 0, 0, 0, 0, 0,
	430, 0, 432, 433, 434, 431, 435, 436, 437, 438,
	0, 439, 440, 441, 0, 442, 443, 444, 445, 561,
	446, 0, 447, 448, 454, 455, 449, 450, 456, 457,
	458, 459, 460, 0, 462, 463, 461, 464, 465, 466,
	0, 0, 451, 452, 468, 469, 0, 470, 471, 472,
	473, 474, 475, 562, 0, 476, 0, 477, 478, 479,
	480, 453, 481, 486, 563, 482, 483, 484, 485, 564,
	0, 488, 489, 0, 487, 0, 490, 491, 492, 493,
	494, 495, 315, 496, 0, 497, 565, 566, 567, 568,
	0, 504, 0, 498, 499, 569, 500, 570, 0, 501,
	502, 503, 0, 505, 506, 0, 0, 507, 508, 509,
	511, 512, 510, 513, 0, 514, 0, 0, 515, 516,
	517, 571, 572, 573, 238, 519, 518, 574, 0, 0,
	0, 0, 520, 521, 575, 522, 523, 524, 0, 0,
	0, 244, 245, 246, 247, 248, 249, 0, 250, 251,
	0, 0, 0, 0, 0, 525, 0, 0, 0, 0,
	252, 253, 255, 254, 256, 257, 258, 526, 527, 0,
	259, 528, 260, 529, 0, 261, 262, 263, 264, 265,
	0, 0, 0, 266, 530, 531, 532, 0, 267, 268,
	533, 0, 0, 0, 269, 270, 271, 272, 273, 274,
	275, 0, 0, 277, 278, 279, 276, 0, 280, 0,
	281, 282, 283, 0, 284, 0, 285, 286, 0, 0,
	0, 0, 0, 0, 0, 287, 288, 289, 290, 0,
	291, 534, 535, 0, 295, 292, 293, 0, 296, 294,
	0, 297, 298, 299, 0, 0, 300, 301, 302, 0,
	303, 304, 0, 305, 306, 307, 0, 308, 309, 536,
	310, 311, 312, 314, 316, 313, 317, 318, 319, 320,
	537, 538, 0, 0, 0, 0, 0, 0, 0, 321,
	322, 323, 539, 0, 0, 0, 324, 0, 325, 0,
	0, 0, 326, 327, 540, 541, 328, 329, 0, 330,
	542, 0, 543, 331, 0, 332, 333, 334, 335, 336,
	1382, 545, 546, 393, 0, 337, 338, 0, 339, 340,
	341, 342, 0, 0, 0, 0, 343, 344, 346, 0,
	0, 345, 547, 548, 0, 549, 0, 347, 348, 0,
	550, 0, 349, 350, 351, 0, 352, 0, 0, 0,
	353, 354, 355, 356, 357, 358, 0, 359, 361, 360,
	0, 362, 551, 0, 363, 364, 0, 0, 365, 366,
	367, 0, 0, 368, 369, 370, 371, 0, 372, 373,
	375, 377, 374, 376, 381, 378, 379, 380, 383, 0,
	382, 0, 384, 385, 386, 389, 390, 388, 0, 387,
	0, 0, 0, 391, 0, 552, 392, 553, 394, 395,
	0, 0, 396, 0, 0, 0, 398, 399, 400, 0,
	0, 401, 402, 554, 0, 403, 0, 555, 404, 405,
	397, 406, 407, 408, 409, 410, 411, 412, 413, 0,
	414, 415, 556, 557, 558, 416, 559, 417, 418, 0,
	419, 0, 420, 421, 422, 423, 424, 425, 426, 560,
	428, 427, 429, 0, 0, 0, 0, 0, 0, 430,
	0, 432, 433, 434, 431, 435, 436, 437, 438, 0,
	439, 440, 441, 0, 442, 443, 444, 445, 561, 446,
	0, 447, 448, 454, 455, 449, 450, 456, 457, 458,
	459, 460, 0, 462, 463, 461, 464, 465, 466, 0,
	467, 451, 452, 468, 469, 0, 470, 471, 472, 473,
	474, 475, 562, 0, 476, 0, 477, 478, 479, 480,
	453, 481, 486, 563, 482, 483, 484, 485, 564, 0,
	488, 489, 0, 487, 0, 490, 491, 492, 493, 494,
	495, 315, 496, 0, 497, 565, 566, 567, 568, 0,
	504, 0, 498, 499, 569, 500, 570, 0, 501, 502,
	503, 0, 505, 506, 0, 0, 507, 508, 509, 511,
	512, 510, 513, 0, 514, 0, 0, 515, 516, 517,
	571, 572, 573, 238, 519, 518, 574, 0, 0, 0,
	0, 520, 521, 575, 522, 523, 524, 0, 0, 0,
	244, 245, 246, 247, 248, 249, 0, 250, 251, 0,
	0, 0, 0, 0, 525, 0, 0, 0, 0, 252,
	253, 255, 254, 256, 257, 258, 526, 527, 0, 259,
	528, 260, 529, 0, 261, 262, 263, 264, 265, 0,
	0, 0, 266, 530, 531, 532, 0, 267, 268, 533,
	0, 0, 0, 269, 270, 271, 272, 273, 274, 275,
	0, 0, 277, 278, 279, 276, 0, 280, 0, 281,
	282, 283, 0, 284, 0, 285, 286, 0, 0, 0,
	0, 0, 0, 0, 287, 288, 289, 290, 0, 291,
	534, 535, 0, 295, 292, 293, 0, 296, 294, 0,
	297, 298, 299, 0, 0, 300, 301, 302, 0, 303,
	304, 0, 305, 306, 307, 0, 308, 309, 536, 310,
	311, 312, 314, 316, 313, 317, 318, 319, 320, 537,
	538, 0, 0, 0, 0, 0, 0, 0, 321, 322,
	323, 539, 0, 0, 0, 324, 0, 325, 0, 0,
	0, 326, 327, 540, 541, 328, 329, 0, 330, 542,
	0, 543, 331, 0, 332, 333, 334, 335, 336, 1323,
	545, 546, 393, 0, 337, 338, 0, 339, 340, 341,
	342, 0, 0, 0, 0, 343, 344, 346, 0, 0,
	345, 547, 548, 0, 549, 0, 347, 348, 0, 550,
	0, 349, 350, 351, 0, 352, 0, 0, 0, 353,
	354, 355, 356, 357, 358, 0, 359, 361, 360, 0,
	362, 551, 0, 363, 364, 0, 0, 365, 366, 367,
	0, 0, 368, 369, 370, 371, 0, 372, 373, 375,
	377, 374, 376, 381, 378, 379, 380, 383, 0, 382,
	0, 384, 385, 386, 389, 390, 388, 0, 387, 0,
	0, 0, 391, 0, 552, 392, 553, 394, 395, 0,
	0, 396, 0, 0, 0, 398, 399, 400, 0, 0,
	401, 402, 554, 0, 403, 0, 555, 404, 405, 397,
	406, 407, 408, 409, 410, 411, 412, 413, 0, 414,
	415, 556, 557, 558, 416, 559, 417, 418, 0, 419,
	0, 420, 421, 422, 423, 424, 425, 426, 560, 428,
	427, 429, 0, 0, 0, 0, 0, 0, 430, 0,
	432, 433, 434, 431, 435, 436, 437, 438, 0, 439,
	440, 441, 0, 442, 443, 444, 445, 561, 446, 0,
	447, 448, 454, 455, 449, 450, 456, 457, 458, 459,
	460, 0, 462, 463, 461, 464, 465, 466, 0, 467,
	451, 452, 468, 469, 0, 470, 471, 472, 473, 474,
	475, 562, 0, 476, 0, 477, 478, 479, 480, 453,
	481, 486, 563, 482, 483, 484, 485, 564, 0, 488,
	489, 0, 487, 0, 490, 491, 492, 493, 494, 495,
	315, 496, 0, 497, 565, 566, 567, 568, 0, 504,
	0, 498, 499, 569, 500, 570, 0, 501, 502, 503,
	0, 505, 506, 0, 0, 507, 508, 509, 511, 512,
	510, 513, 0, 514, 0, 0, 515, 516, 517, 571,
	572, 573, 238, 519, 518, 574, 0, 0, 0, 0,
	520, 521, 575, 522, 523, 524, 0, 0, 0, 244,
	245, 246, 247, 248, 249, 0, 250, 251, 0, 0,
	0, 0, 0, 525, 0, 0, 0, 0, 252, 253,
	255, 254, 256, 257, 258, 526, 527, 0, 259, 528,
	260, 529, 0, 261, 262, 263, 264, 265, 0, 0,
	0, 266, 530, 531, 532, 0, 267, 268, 533, 0,
	0, 0, 269, 270, 271, 272, 273, 274, 275, 0,
	0, 277, 278, 279, 276, 0, 280, 0, 281, 282,
	283, 0, 284, 0, 285, 286, 0, 0, 0, 0,
	0, 0, 0, 287, 288, 289, 290, 0, 291, 534,
	535, 0, 295, 292, 293, 0, 296, 294, 0, 297,
	298, 299, 0, 0, 300, 301, 302, 0, 303, 304,
	0, 305, 306, 307, 0, 308, 309, 536, 310, 311,
	312, 314, 316, 313, 317, 318, 319, 320, 537, 538,
	0, 0, 0, 0, 0, 0, 0, 321, 322, 323,
	539, 0, 0, 0, 324, 0, 325, 0, 0, 0,
	326, 327, 540, 541, 328, 329, 0, 330, 542, 0,
	543, 331, 0, 332, 333, 334, 335, 336, 544, 545,
	546, 393, 0, 337, 338, 0, 339, 340, 341, 342,
	0, 0, 0, 0, 343, 344, 346, 0, 0, 345,
	547, 548, 0, 549, 0, 347, 348, 0, 550, 0,
	349, 350, 351, 0, 352, 0, 0, 0, 353, 354,
	355, 356, 357, 358, 0, 359, 361, 360, 0, 362,
	551, 0, 363, 364, 0, 0, 365, 366, 367, 0,
	0, 368, 369, 370, 371, 0, 372, 373, 375, 377,
	374, 376, 381, 378, 379, 380, 383, 0, 382, 0,
	384, 385, 386, 389, 390, 388, 0, 387, 0, 0,
	0, 391, 0, 552, 392, 553, 394, 395, 0, 0,
	396, 0, 0, 0, 398, 399, 400, 0, 0, 401,
	402, 554, 0, 403, 0, 555, 404, 405, 397, 406,
	407, 408, 409, 410, 411, 412, 413, 0, 414, 415,
	556, 557, 558, 416, 559, 417, 418, 0, 419, 0,
	420, 421, 422, 423, 424, 425, 426, 560, 1063, 427,
	429, 0, 0, 0, 0, 0, 0, 430, 0, 432,
	433, 434, 431, 435, 436, 437, 438, 0, 439, 440,
	441, 0, 442, 443, 444, 445, 561, 446, 0, 447,
	448, 454, 455, 449, 450, 456, 457, 458, 459, 460,
	0, 462, 463, 461, 464, 465, 466, 0, 467, 451,
	452, 468, 469, 0, 470, 471, 472, 473, 474, 475,
	562, 0, 476, 0, 477, 478, 479, 480, 453, 481,
	486, 563, 482, 483, 484, 485, 564, 0, 488, 489,
	0, 487, 0, 490, 491, 492, 493, 494, 495, 315,
	496, 0, 497, 565, 566, 567, 568, 0, 504, 0,
	498, 499, 569, 500, 570, 0, 501, 502, 503, 0,
	505, 506, 0, 0, 507, 508, 509, 511, 512, 510,
	513, 0, 514, 0, 0, 515, 516, 517, 571, 572,
	573, 238, 519, 518, 574, 0, 0, 0, 0, 520,
	521, 575, 522, 523, 524, 0, 0, 0, 244, 245,
	246, 247, 248, 249, 0, 250, 251, 0, 0, 0,
	0, 0, 525, 0, 0, 0, 0, 252, 253, 255,
	254, 256, 257, 258, 526, 527, 0, 259, 528, 260,
	529, 0, 261, 262, 263, 264, 265, 0, 0, 0,
	266, 530, 531, 532, 0, 267, 268, 533, 0, 0,
	0, 269, 270, 271, 272, 273, 274, 275, 0, 0,
	277, 278, 279, 276, 0, 280, 0, 281, 282, 283,
	0, 284, 0, 285, 286, 0, 0, 0, 0, 0,
	0, 0, 287, 288, 289, 290, 0, 291, 534, 535,
	0, 295, 292, 293, 0, 296, 294, 0, 297, 298,
	299, 0, 0, 300, 301, 302, 0, 303, 304, 0,
	305, 306, 307, 0, 308, 309, 536, 310, 311, 312,
	314, 316, 313, 317, 318, 319, 320, 537, 538, 0,
	0, 0, 0, 0, 0, 0, 321, 322, 323, 539,
	0, 0, 0, 324, 0, 325, 0, 0, 0, 326,
	327, 540, 541, 328, 329, 0, 330, 542, 0, 543,
	0, 0, 332, 333, 334, 335, 336, 544, 545, 546,
	393, 0, 337, 338, 0, 339, 340, 341, 342, 0,
	0, 0, 0, 343, 344, 346, 0, 0, 345, 547,
	548, 0, 549, 0, 347, 348, 0, 550, 0, 349,
	350, 351, 0, 352, 0, 0, 0, 353, 354, 355,
	356, 357, 358, 0, 359, 361, 360, 0, 362, 551,
	0, 363, 364, 0, 0, 365, 366, 367, 0, 0,
	368, 369, 370, 371, 0, 372, 373, 375, 377, 374,
	376, 381, 378, 379, 380, 383, 0, 382, 0, 384,
	385, 386, 389, 390, 388, 0, 387, 0, 0, 0,
	391, 0, 552, 392, 553, 394, 395, 0, 0, 396,
	0, 0, 0, 398, 399, 400, 0, 0, 401, 402,
	554, 0, 403, 0, 555, 404, 405, 397, 406, 407,
	0, 409, 410, 411, 412, 413, 0, 414, 415, 556,
	557, 558, 416, 559, 417, 418, 0, 419, 0, 420,
	421, 422, 423, 0, 425, 426, 560, 428, 427, 429,
	0, 0, 0, 0, 0, 0, 430, 0, 432, 433,
	434, 431, 435, 436, 437, 438, 0, 439, 440, 441,
	0, 442, 443, 444, 445, 561, 0, 0, 447, 448,
	454, 455, 449, 450, 456, 457, 458, 459, 460, 0,
	462, 463, 461, 464, 465, 466, 0, 467, 451, 452,
	468, 469, 0, 470, 471, 472, 473, 474, 475, 562,
	0, 476, 0, 477, 478, 479, 480, 453, 481, 486,
	563, 482, 483, 484, 485, 564, 0, 488, 489, 0,
	487, 0, 490, 491, 492, 493, 494, 495, 315, 496,
	0, 497, 565, 566, 567, 568, 0, 504, 0, 498,
	499, 569, 500, 570, 0, 501, 502, 503, 0, 505,
	506, 0, 0, 507, 508, 509, 511, 512, 510, 513,
	0, 514, 0, 0, 515, 516, 517, 571, 572, 573,
	0, 519, 518, 574, 0, 0, 0, 0, 520, 521,
	575, 522, 523, 524, 1590, 1591, 0, 1623, 1624, 1625,
	1633, 1634, 1635, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1626, 1621, 0, 0, 0,
	0, 0, 0, 1593, 0, 0, 0, 0, 0, 0,
	1639, 0, 0, 0, 0, 0, 0, 0, 1590, 1591,
	0, 1623, 1624, 1625, 1633, 1634, 1635, 0, 0, 0,
	0, 0, 0, 0, 1592, 0, 0, 0, 0, 1626,
	1621, 0, 0, 0, 1612, 0, 0, 1593, 0, 0,
	0, 0, 1609, 0, 1639, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1592, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1612, 0,
	0, 0, 0, 0, 0, 0, 1609, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1615, 1616,
	1617, 1618, 0, 0, 0, 0, 0, 0, 1598, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1630, 0, 0,
	1640, 0, 1615, 1616, 1617, 1618, 1620, 1622, 0, 0,
	0, 0, 1598, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1636, 0, 1637, 0, 0, 0, 0, 0,
	0, 1607, 1608, 0, 0, 0, 0, 0, 0, 0,
	0, 1630, 0, 0, 1640, 0, 0, 0, 0, 1628,
	1620, 1622, 0, 0, 0, 0, 0, 0, 0, 0,
	1613, 0, 0, 0, 0, 0, 1636, 0, 1637, 0,
	0, 0, 0, 0, 0, 1607, 1608, 0, 0, 0,
	0, 0, 0, 0, 0, 1638, 0, 0, 0, 0,
	0, 0, 0, 1628, 0, 0, 0, 0, 0, 0,
	0, 0, 1627, 0, 1613, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1638,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1627, 0, 0, 0,
	0, 0, 0, 1619, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1614, 0, 0, 0, 0, 1590, 1591,
	0, 1623, 1624, 1625, 1633, 1634, 1635, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1619, 1631, 1626,
	1621, 0, 0, 0, 0, 0, 0, 1593, 0, 0,
	0, 0, 0, 0, 1639, 0, 0, 1614, 0, 0,
	0, 0, 1590, 1591, 0, 1623, 1624, 1625, 1633, 1634,
	1635, 0, 0, 0, 0, 0, 0, 0, 1592, 0,
	0, 0, 1631, 1626, 1621, 0, 0, 0, 1612, 0,
	0, 1593, 0, 0, 0, 0, 1609, 0, 1639, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1592, 0, 0, 0, 0, 0, 0, 0,
	1629, 0, 1612, 0, 1604, 1605, 1611, 1632, 1610, 1606,
	1609, 1603, 1601, 1602, 1594, 1595, 1596, 1597, 1599, 1600,
	0, 0, 0, 0, 0, 0, 0, 0, 2797, 0,
	0, 0, 1615, 1616, 1617, 1618, 0, 0, 0, 0,
	0, 0, 1598, 0, 1629, 0, 0, 0, 1604, 1605,
	1611, 1632, 1610, 1606, 0, 1603, 1601, 1602, 1594, 1595,
	1596, 1597, 1599, 1600, 0, 0, 0, 0, 0, 0,
	0, 1630, 2794, 0, 1640, 0, 1615, 1616, 1617, 1618,
	1620, 1622, 0, 0, 0, 0, 1598, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1636, 0, 1637, 0,
	0, 0, 0, 0, 0, 1607, 1608, 0, 0, 0,
	0, 0, 0, 0, 0, 1630, 0, 0, 1640, 0,
	0, 0, 0, 1628, 1620, 1622, 0, 0, 0, 0,
	0, 0, 0, 0, 1613, 0, 0, 0, 0, 0,
	1636, 0, 1637, 0, 0, 0, 0, 0, 0, 1607,
	1608, 0, 0, 0, 0, 0, 0, 0, 0, 1638,
	0, 0, 0, 0, 0, 0, 0, 1628, 0, 0,
	0, 0, 0, 0, 0, 0, 1627, 0, 1613, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1638, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1627, 0, 0, 0, 0, 0, 0, 1619, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1614, 0, 0,
	0, 0, 1590, 1591, 0, 1623, 1624, 1625, 1633, 1634,
	1635, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1619, 1631, 1626, 1621, 0, 0, 0, 0, 0,
	0, 1593, 0, 0, 0, 0, 0, 0, 1639, 0,
	0, 1614, 0, 0, 0, 0, 1590, 1591, 0, 1623,
	1624, 1625, 1633, 1634, 1635, 0, 0, 0, 0, 0,
	0, 0, 1592, 0, 0, 0, 1631, 1626, 1621, 0,
	0, 0, 1612, 0, 0, 1593, 0, 0, 0, 0,
	1609, 0, 1639, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1592, 0, 0, 0,
	0, 0, 0, 0, 1629, 0, 1612, 0, 1604, 1605,
	1611, 1632, 1610, 1606, 1609, 1603, 1601, 1602, 1594, 1595,
	1596, 1597, 1599, 1600, 0, 0, 0, 0, 0, 0,
	0, 0, 2793, 0, 0, 0, 1615, 1616, 1617, 1618,
	0, 0, 0, 0, 0, 0, 1598, 0, 1629, 0,
	0, 0, 1604, 1605, 1611, 1632, 1610, 1606, 0, 1603,
	1601, 1602, 1594, 1595, 1596, 1597, 1599, 1600, 0, 0,
	0, 0, 0, 0, 0, 1630, 2792, 0, 1640, 0,
	1615, 1616, 1617, 1618, 1620, 1622, 0, 0, 0, 0,
	1598, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1636, 0, 1637, 0, 0, 0, 0, 0, 0, 1607,
	1608, 0, 0, 0, 0, 0, 0, 0, 0, 1630,
	0, 0, 1640, 0, 0, 0, 0, 1628, 1620, 1622,
	0, 0, 0, 0, 0, 0, 0, 0, 1613, 0,
	0, 0, 0, 0, 1636, 0, 1637, 0, 0, 0,
	0, 0, 0, 1607, 1608, 0, 0, 0, 0, 0,
	0, 0, 0, 1638, 0, 0, 0, 0, 0, 0,
	0, 1628, 0, 0, 0, 0, 0, 0, 0, 0,
	1627, 0, 1613, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1638, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1627, 0, 0, 0, 0, 0,
	0, 1619, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1614, 0, 0, 0, 0, 1590, 1591, 0, 1623,
	1624, 1625, 1633, 1634, 1635, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1619, 1631, 1626, 1621, 0,
	0, 0, 0, 0, 0, 1593, 0, 0, 0, 0,
	0, 0, 1639, 0, 0, 1614, 0, 0, 0, 0,
	1590, 1591, 0, 1623, 1624, 1625, 1633, 1634, 1635, 0,
	0, 0, 0, 0, 0, 0, 1592, 0, 0, 0,
	1631, 1626, 1621, 0, 0, 0, 1612, 0, 0, 1593,
	0, 0, 0, 0, 1609, 0, 1639, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1592, 0, 0, 0, 0, 0, 0, 0, 1629, 0,
	1612, 0, 1604, 1605, 1611, 1632, 1610, 1606, 1609, 1603,
	1601, 1602, 1594, 1595, 1596, 1597, 1599, 1600, 0, 0,
	0, 0, 0, 0, 0, 0, 2240, 0, 0, 0,
	1615, 1616, 1617, 1618, 0, 0, 0, 0, 0, 0,
	1598, 0, 1629, 0, 0, 0, 1604, 1605, 1611, 1632,
	1610, 1606, 0, 1603, 1601, 1602, 1594, 1595, 1596, 1597,
	1599, 1600, 0, 0, 0, 0, 3836, 0, 0, 1630,
	0, 0, 1640, 0, 1615, 1616, 1617, 1618, 1620, 1622,
	0, 0, 0, 0, 1598, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1636, 0, 1637, 0, 0, 0,
	0, 0, 0, 1607, 1608, 0, 0, 0, 0, 0,
	0, 0, 0, 1630, 0, 0, 1640, 0, 0, 0,
	0, 1628, 1620, 1622, 0, 0, 0, 0, 0, 0,
	0, 0, 1613, 0, 0, 0, 0, 0, 1636, 0,
	1637, 0, 0, 0, 0, 0, 0, 1607, 1608, 0,
	0, 0, 0, 0, 0, 0, 0, 1638, 0, 0,
	0, 0, 0, 0, 0, 1628, 0, 0, 0, 0,
	0, 0, 0, 0, 1627, 0, 1613, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1638, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1627, 0,
	0, 0, 0, 0, 0, 1619, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1590, 1591, 1614, 1623, 1624, 1625, 1633,
	1634, 1635, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1626, 1621, 0, 0, 0, 1619,
	1631, 0, 1593, 0, 0, 0, 0, 0, 0, 1639,
	0, 0, 0, 0, 0, 0, 0, 1590, 1591, 1614,
	1623, 1624, 1625, 1633, 1634, 1635, 0, 0, 0, 0,
	0, 0, 0, 1592, 0, 0, 0, 0, 1626, 1621,
	0, 0, 0, 1612, 1631, 0, 1593, 0, 0, 0,
	0, 1609, 0, 1639, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1592, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1612, 0, 0,
	0, 0, 1629, 0, 0, 1609, 1604, 1605, 1611, 1632,
	1610, 1606, 0, 1603, 1601, 1602, 1594, 1595, 1596, 1597,
	1599, 1600, 0, 0, 0, 0, 3835, 1615, 1616, 1617,
	1618, 0, 0, 0, 0, 0, 0, 1598, 0, 0,
	0, 0, 0, 0, 0, 0, 1629, 0, 0, 0,
	1604, 1605, 1611, 1632, 1610, 1606, 0, 1603, 1601, 1602,
	1594, 1595, 1596, 1597, 1599, 1600, 1630, 0, 0, 1640,
	3687, 1615, 1616, 1617, 1618, 1620, 1622, 0, 0, 0,
	0, 1598, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1636, 0, 1637, 0, 0, 0, 0, 0, 0,
	1607, 1608, 0, 0, 0, 0, 0, 0, 0, 0,
	1630, 0, 0, 1640, 0, 0, 0, 0, 1628, 1620,
	1622, 0, 0, 0, 0, 0, 0, 0, 0, 1613,
	0, 0, 0, 0, 0, 1636, 0, 1637, 0, 0,
	0, 0, 0, 0, 1607, 1608, 0, 0, 0, 0,
	0, 0, 0, 0, 1638, 0, 0, 0, 0, 0,
	0, 0, 1628, 0, 0, 0, 0, 0, 0, 0,
	0, 1627, 0, 1613, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1638, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1627, 0, 0, 0, 0,
	0, 0, 1619, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1590, 1591, 1614, 1623, 1624, 1625, 1633, 1634, 1635, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1626, 1621, 0, 0, 0, 1619, 1631, 0, 1593,
	0, 0, 0, 0, 0, 0, 1639, 0, 0, 0,
	0, 0, 0, 0, 1590, 1591, 1614, 1623, 1624, 1625,
	1633, 1634, 1635, 0, 0, 0, 0, 0, 0, 0,
	1592, 0, 0, 0, 0, 1626, 1621, 0, 0, 0,
	1612, 1631, 0, 1593, 0, 0, 0, 0, 1609, 0,
	1639, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1592, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1612, 0, 0, 0, 0, 1629,
	0, 0, 1609, 1604, 1605, 1611, 1632, 1610, 1606, 0,
	1603, 1601, 1602, 1594, 1595, 1596, 1597, 1599, 1600, 0,
	0, 0, 0, 3554, 1615, 1616, 1617, 1618, 0, 0,
	0, 0, 0, 0, 1598, 0, 0, 0, 0, 0,
	0, 0, 0, 1629, 0, 0, 0, 1604, 1605, 1611,
	1632, 1610, 1606, 0, 1603, 1601, 1602, 1594, 1595, 1596,
	1597, 1599, 1600, 1630, 0, 0, 1640, 3498, 1615, 1616,
	1617, 1618, 1620, 1622, 0, 0, 0, 0, 1598, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1636, 0,
	1637, 0, 0, 0, 0, 0, 0, 1607, 1608, 0,
	0, 0, 0, 0, 0, 0, 0, 1630, 0, 0,
	1640, 0, 0, 0, 0, 1628, 1620, 1622, 0, 0,
	0, 0, 0, 0, 0, 0, 1613, 0, 0, 0,
	0, 0, 1636, 0, 1637, 0, 0, 0, 0, 0,
	0, 1607, 1608, 0, 0, 0, 0, 0, 0, 0,
	0, 1638, 0, 0, 0, 0, 0, 0, 0, 1628,
	0, 0, 0, 0, 0, 0, 0, 0, 1627, 0,
	1613, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1638, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1627, 0, 0, 0, 0, 0, 0, 1619,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1590, 1591, 1614,
	1623, 1624, 1625, 1633, 1634, 1635, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1626, 1621,
	0, 0, 0, 1619, 1631, 0, 1593, 0, 0, 0,
	0, 0, 0, 1639, 0, 0, 0, 0, 0, 0,
	0, 1590, 1591, 1614, 1623, 1624, 1625, 1633, 1634, 1635,
	0, 0, 0, 0, 0, 0, 0, 1592, 0, 0,
	0, 0, 1626, 1621, 0, 0, 0, 1612, 1631, 0,
	1593, 0, 0, 0, 0, 1609, 0, 1639, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1592, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1612, 0, 0, 0, 0, 1629, 0, 0, 1609,
	1604, 1605, 1611, 1632, 1610, 1606, 0, 1603, 1601, 1602,
	1594, 1595, 1596, 1597, 1599, 1600, 0, 0, 0, 0,
	3497, 1615, 1616, 1617, 1618, 0, 0, 0, 0, 0,
	0, 1598, 0, 0, 0, 0, 0, 0, 0, 0,
	1629, 0, 0, 0, 1604, 1605, 1611, 1632, 1610, 1606,
	0, 1603, 1601, 1602, 1594, 1595, 1596, 1597, 1599, 1600,
	1630, 0, 0, 1640, 3496, 1615, 1616, 1617, 1618, 1620,
	1622, 0, 0, 0, 0, 1598, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1636, 0, 1637, 0, 0,
	0, 0, 0, 0, 1607, 1608, 0, 0, 0, 0,
	0, 0, 0, 0, 1630, 0, 0, 1640, 0, 0,
	0, 0, 1628, 1620, 1622, 0, 0, 0, 0, 0,
	0, 0, 0, 1613, 0, 0, 0, 0, 0, 1636,
	0, 1637, 0, 0, 0, 0, 0, 0, 1607, 1608,
	0, 0, 0, 0, 0, 0, 0, 0, 1638, 0,
	0, 0, 0, 0, 0, 0, 1628, 0, 0, 0,
	0, 0, 0, 0, 0, 1627, 0, 1613, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1638, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1627,
	0, 0, 0, 0, 0, 0, 1619, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1590, 1591, 1614, 1623, 1624, 1625,
	1633, 1634, 1635, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1626, 1621, 0, 0, 0,
	1619, 1631, 0, 1593, 0, 0, 0, 0, 0, 0,
	1639, 0, 0, 0, 0, 0, 0, 0, 1590, 1591,
	1614, 1623, 1624, 1625, 1633, 1634, 1635, 0, 0, 0,
	0, 0, 0, 0, 1592, 0, 0, 0, 0, 1626,
	1621, 0, 0, 0, 1612, 1631, 0, 1593, 0, 0,
	0, 0, 1609, 0, 1639, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1592, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1612, 0,
	0, 0, 0, 1629, 0, 0, 1609, 1604, 1605, 1611,
	1632, 1610, 1606, 0, 1603, 1601, 1602, 1594, 1595, 1596,
	1597, 1599, 1600, 0, 0, 0, 0, 3210, 1615, 1616,
	1617, 1618, 0, 0, 0, 0, 0, 0, 1598, 0,
	0, 0, 0, 0, 0, 0, 0, 1629, 0, 0,
	0, 1604, 1605, 1611, 1632, 1610, 1606, 0, 1603, 1601,
	1602, 1594, 1595, 1596, 1597, 1599, 1600, 1630, 0, 0,
	1640, 2790, 1615, 1616, 1617, 1618, 1620, 1622, 0, 0,
	0, 0, 1598, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1636, 0, 1637, 0, 0, 0, 0, 0,
	0, 1607, 1608, 0, 0, 0, 0, 0, 0, 0,
	0, 1630, 0, 0, 1640, 0, 0, 0, 0, 1628,
	1620, 1622, 0, 0, 0, 0, 0, 0, 0, 0,
	1613, 0, 0, 0, 0, 0, 1636, 0, 1637, 0,
	0, 0, 0, 0, 0, 1607, 1608, 0, 0, 0,
	0, 0, 0, 0, 0, 1638, 0, 0, 0, 0,
	0, 0, 0, 1628, 0, 0, 0, 0, 0, 0,
	0, 0, 1627, 0, 1613, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1638,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1627, 0, 0, 0,
	0, 0, 0, 1619, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1590, 1591, 1614, 1623, 1624, 1625, 1633, 1634, 1635,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1626, 1621, 0, 0, 0, 1619, 1631, 0,
	1593, 0, 0, 0, 0, 0, 0, 1639, 0, 0,
	0, 0, 0, 0, 0, 1590, 1591, 1614, 1623, 1624,
	1625, 1633, 1634, 1635, 0, 0, 0, 0, 0, 0,
	0, 1592, 0, 0, 0, 0, 1626, 1621, 0, 0,
	0, 1612, 1631, 0, 1593, 0, 0, 0, 0, 1609,
	0, 1639, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1592, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1612, 0, 0, 0, 0,
	1629, 0, 0, 1609, 1604, 1605, 1611, 1632, 1610, 1606,
	0, 1603, 1601, 1602, 1594, 1595, 1596, 1597, 1599, 1600,
	0, 0, 0, 0, 2789, 1615, 1616, 1617, 1618, 0,
	0, 0, 0, 0, 0, 1598, 0, 0, 0, 0,
	0, 0, 0, 0, 1629, 0, 0, 0, 1604, 1605,
	1611, 1632, 1610, 1606, 0, 1603, 1601, 1602, 1594, 1595,
	1596, 1597, 1599, 1600, 1630, 0, 0, 1640, 2788, 1615,
	1616, 1617, 1618, 1620, 1622, 0, 0, 0, 0, 1598,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1636,
	0, 1637, 0, 0, 0, 0, 0, 0, 1607, 1608,
	0, 0, 0, 0, 0, 0, 0, 0, 1630, 0,
	0, 1640, 0, 0, 0, 0, 1628, 1620, 1622, 0,
	0, 0, 0, 0, 0, 0, 0, 1613, 0, 0,
	0, 0, 0, 1636, 0, 1637, 0, 0, 0, 0,
	0, 0, 1607, 1608, 0, 0, 0, 0, 0, 0,
	0, 0, 1638, 0, 0, 0, 0, 0, 0, 0,
	1628, 0, 0, 0, 0, 0, 0, 0, 0, 1627,
	0, 1613, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1638, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1627, 0, 0, 0, 0, 0, 0,
	1619, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1590, 1591,
	1614, 1623, 1624, 1625, 1633, 1634, 1635, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1626,
	1621, 0, 0, 0, 1619, 1631, 0, 1593, 0, 0,
	0, 0, 0, 0, 1639, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1614, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1592, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1612, 1631,
	0, 0, 0, 0, 0, 0, 1609, 0, 0, 0,
	1590, 1591, 0, 1623, 1624, 1625, 1633, 1634, 1635, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1626, 1621, 0, 0, 0, 0, 2725, 0, 1593,
	0, 0, 0, 0, 0, 0, 1639, 1629, 0, 0,
	0, 1604, 1605, 1611, 1632, 1610, 1606, 0, 1603, 1601,
	1602, 1594, 1595, 1596, 1597, 1599, 1600, 0, 0, 0,
	1592, 2787, 1615, 1616, 1617, 1618, 0, 0, 0, 0,
	1612, 0, 1598, 4049, 0, 0, 0, 0, 1609, 0,
	0, 1629, 0, 0, 0, 1604, 1605, 1611, 1632, 1610,
	1606, 0, 1603, 1601, 1602, 1594, 1595, 1596, 1597, 1599,
	1600, 1630, 0, 2754, 1640, 0, 0, 0, 0, 2726,
	1620, 1622, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1636, 0, 1637, 0,
	0, 0, 0, 0, 0, 1607, 1608, 0, 0, 0,
	0, 0, 0, 0, 1615, 1616, 1617, 1618, 0, 0,
	0, 0, 0, 1628, 1598, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1613, 0, 0, 0, 0, 1590,
	1591, 0, 1623, 1624, 1625, 1633, 1634, 1635, 0, 0,
	0, 0, 0, 1630, 0, 0, 1640, 0, 0, 1638,
	1626, 1621, 1620, 1622, 0, 0, 0, 0, 1593, 0,
	0, 0, 0, 0, 0, 1639, 1627, 0, 1636, 0,
	1637, 0, 0, 0, 0, 0, 0, 1607, 1608, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1592,
	0, 0, 4048, 0, 0, 1628, 0, 0, 0, 1612,
	0, 0, 0, 0, 0, 0, 1613, 1609, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1619, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1638, 0, 0, 0, 0, 0, 1614, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1627, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1631, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1615, 1616, 1617, 1618, 0, 0, 0,
	0, 0, 0, 1598, 0, 2850, 0, 0, 2849, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1619,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1630, 0, 0, 1640, 0, 0, 0, 1614,
	0, 1620, 1622, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1636, 0, 1637,
	0, 0, 0, 0, 1631, 0, 1607, 1608, 0, 0,
	0, 0, 0, 0, 1629, 0, 0, 0, 1604, 1605,
	1611, 1632, 1610, 1606, 1628, 1603, 1601, 1602, 1594, 1595,
	1596, 1597, 1599, 1600, 0, 1613, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1638, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1627, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1629, 0, 0, 0,
	1604, 1605, 1611, 1632, 1610, 1606, 0, 1603, 1601, 1602,
	1594, 1595, 1596, 1597, 1599, 1600, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1619, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2360,
	0, 0, 0, 0, 0, 0, 1590, 1591, 1614, 1623,
	1624, 1625, 1633, 1634, 1635, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1626, 1621, 0,
	0, 0, 2359, 1631, 0, 1593, 0, 0, 0, 0,
	0, 0, 1639, 0, 0, 0, 0, 0, 0, 0,
	1590, 1591, 0, 1623, 1624, 1625, 1633, 1634, 1635, 0,
	0, 0, 0, 0, 0, 0, 1592, 0, 0, 0,
	0, 1626, 1621, 0, 0, 0, 1612, 0, 0, 1593,
	0, 0, 0, 0, 1609, 0, 1639, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1592, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1612, 0, 0, 0, 0, 1629, 0, 0, 1609, 1604,
	1605, 1611, 1632, 1610, 1606, 0, 1603, 1601, 1602, 1594,
	1595, 1596, 1597, 1599, 1600, 0, 0, 0, 0, 0,
	1615, 1616, 1617, 1618, 0, 0, 0, 0, 0, 0,
	1598, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1630,
	0, 0, 1640, 0, 1615, 1616, 1617, 1618, 1620, 1622,
	0, 0, 0, 0, 1598, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1636, 0, 1637, 0, 0, 0,
	0, 0, 0, 1607, 1608, 0, 0, 0, 0, 0,
	0, 0, 0, 1630, 0, 0, 1640, 0, 0, 0,
	0, 1628, 1620, 1622, 0, 0, 0, 0, 0, 0,
	0, 0, 1613, 0, 0, 0, 0, 0, 1636, 0,
	1637, 0, 0, 0, 0, 0, 0, 1607, 1608, 0,
	0, 0, 0, 0, 0, 0, 0, 1638, 0, 0,
	0, 0, 0, 0, 0, 1628, 0, 0, 0, 0,
	0, 0, 0, 0, 1627, 0, 1613, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1638, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1627, 921,
	0, 0, 0, 0, 0, 1619, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1590, 1591, 1614, 1623, 1624, 1625, 1633,
	1634, 1635, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1626, 1621, 0, 0, 0, 1619,
	1631, 0, 1593, 0, 0, 0, 0, 0, 0, 1639,
	0, 0, 0, 0, 0, 0, 0, 1590, 1591, 1614,
	1623, 1624, 1625, 1633, 1634, 1635, 0, 0, 0, 0,
	0, 0, 0, 1592, 0, 0, 0, 0, 1626, 1621,
	0, 0, 0, 1612, 1631, 0, 1593, 0, 0, 0,
	0, 1609, 0, 1639, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1592, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1612, 0, 0,
	0, 0, 1629, 0, 0, 1609, 1604, 1605, 1611, 1632,
	1610, 1606, 0, 1603, 1601, 1602, 1594, 1595, 1596, 1597,
	1599, 1600, 0, 0, 0, 0, 0, 1615, 1616, 1617,
	1618, 0, 0, 0, 0, 0, 0, 1598, 0, 0,
	0, 0, 0, 0, 0, 0, 1629, 0, 0, 0,
	1604, 1605, 1611, 1632, 1610, 1606, 0, 1603, 1601, 1602,
	1594, 1595, 1596, 1597, 1599, 1600, 1630, 0, 0, 1640,
	0, 1615, 1616, 1617, 1618, 1620, 1622, 0, 0, 0,
	0, 1598, 0, 0, 0, 0, 2856, 0, 0, 0,
	0, 1636, 0, 1637, 0, 0, 0, 0, 0, 0,
	1607, 1608, 0, 0, 0, 0, 0, 0, 0, 0,
	1630, 0, 0, 1640, 0, 0, 0, 0, 1628, 1620,
	1622, 0, 0, 0, 0, 0, 0, 0, 0, 1613,
	0, 0, 0, 0, 0, 1636, 0, 1637, 0, 0,
	0, 0, 0, 0, 1607, 1608, 0, 0, 0, 0,
	0, 0, 0, 0, 1638, 0, 0, 0, 0, 0,
	0, 0, 1628, 0, 0, 0, 0, 0, 0, 0,
	0, 1627, 0, 1613, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1638, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1627, 0, 0, 0, 0,
	0, 0, 1619, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1614, 1590, 1591, 0, 1623, 1624, 1625, 1633,
	1634, 1635, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1626, 1621, 1619, 1631, 0, 2851,
	0, 0, 1593, 0, 0, 0, 0, 0, 0, 1639,
	0, 0, 0, 0, 0, 0, 1614, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1592, 0, 3191, 0, 0, 0, 0,
	0, 1631, 0, 1612, 0, 0, 0, 0, 0, 0,
	0, 1609, 0, 0, 0, 0, 1590, 1591, 0, 1623,
	1624, 1625, 1633, 1634, 1635, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1626, 1621, 0,
	0, 0, 0, 0, 0, 1593, 0, 0, 0, 1629,
	0, 0, 1639, 1604, 1605, 1611, 1632, 1610, 1606, 0,
	1603, 1601, 1602, 1594, 1595, 1596, 1597, 1599, 1600, 0,
	0, 0, 0, 0, 0, 0, 1592, 1615, 1616, 1617,
	1618, 0, 0, 0, 0, 0, 1612, 1598, 0, 0,
	0, 0, 0, 1629, 1609, 0, 0, 1604, 1605, 1611,
	1632, 1610, 1606, 0, 1603, 1601, 1602, 1594, 1595, 1596,
	1597, 1599, 1600, 0, 0, 0, 1630, 0, 0, 1640,
	0, 0, 0, 0, 0, 1620, 1622, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1636, 0, 1637, 0, 0, 0, 0, 0, 0,
	1607, 1608, 0, 0, 0, 0, 0, 0, 0, 0,
	1615, 1616, 1617, 1618, 0, 0, 0, 0, 1628, 0,
	1598, 0, 0, 0, 0, 0, 0, 0, 0, 1613,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1630,
	0, 0, 1640, 0, 1638, 0, 0, 0, 1620, 1622,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1627, 0, 0, 1636, 0, 1637, 0, 0, 0,
	0, 0, 0, 1607, 1608, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1590,
	1591, 1628, 1623, 1624, 1625, 1633, 1634, 1635, 0, 0,
	0, 0, 1613, 0, 0, 0, 0, 0, 0, 0,
	1626, 1621, 1619, 0, 0, 2791, 0, 0, 1593, 0,
	0, 0, 0, 0, 0, 1639, 0, 1638, 0, 0,
	0, 0, 1614, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1627, 0, 0, 0, 0, 1592,
	0, 0, 0, 0, 0, 0, 0, 1631, 0, 1612,
	0, 0, 0, 0, 2818, 0, 0, 1609, 0, 0,
	0, 0, 1590, 1591, 0, 1623, 1624, 1625, 1633, 1634,
	1635, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1626, 1621, 1619, 0, 0, 0, 0,
	0, 1593, 0, 0, 0, 0, 0, 0, 1639, 0,
	0, 0, 0, 0, 0, 1614, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1592, 1615, 1616, 1617, 1618, 0, 0, 0,
	1631, 0, 1612, 1598, 0, 0, 0, 0, 0, 1629,
	1609, 0, 0, 1604, 1605, 1611, 1632, 1610, 1606, 0,
	1603, 1601, 1602, 1594, 1595, 1596, 1597, 1599, 1600, 0,
	0, 0, 1630, 0, 0, 1640, 0, 0, 0, 0,
	0, 1620, 1622, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1636, 0, 1637,
	0, 0, 0, 0, 0, 0, 1607, 1608, 0, 0,
	0, 0, 0, 0, 0, 0, 1615, 1616, 1617, 1618,
	0, 0, 0, 0, 1628, 0, 1598, 0, 0, 0,
	0, 0, 1629, 0, 0, 1613, 1604, 1605, 1611, 1632,
	1610, 1606, 0, 1603, 1601, 1602, 1594, 1595, 1596, 1597,
	1599, 1600, 0, 0, 0, 1630, 0, 0, 1640, 0,
	1638, 0, 0, 0, 1620, 1622, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1627, 0, 0,
	1636, 0, 1637, 0, 0, 0, 0, 0, 0, 1607,
	1608, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1628, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1613, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1619, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1638, 0, 0, 0, 0, 1614, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1627, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1631, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1619, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1614, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1631, 0, 0, 0,
	0, 0, 0, 0, 0, 1629, 0, 0, 0, 1604,
	1605, 1611, 1632, 1610, 1606, 0, 1603, 1601, 1602, 1594,
	1595, 1596, 1597, 1599, 1600, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1629, 0,
	0, 0, 1604, 1605, 1611, 1632, 1610, 1606, 0, 1603,
	1601, 1602, 1594, 1595, 1596, 1597, 1599, 1600,
}
var sqlPact = [...]int{

	5751, -1000, -1000, -1000, -1000, 214, -1000, -1000, 213, 208,
	206, 205, 203, 202, 201, 190, -1000, -1000, -1000, -1000,
	-1000, -1000, 185, -1000, -1000, 180, -1000, 179, 178, 176,
	-1000, -1000, 170, -1000, 168, -1000, -1000, -1000, -1000, 165,
	163, 159, 73713, 73238, 74182, 2043, 89310, 77946, 1954, 66131,
	88835, 65656, 88360, 87885, 158, -1000, 87410, 157, 156, 153,
	-1000, 86935, -1000, 1840, -1000, 152, 3794, 54705, 150, 149,
	148, 2079, 146, -1000, 145, 143, -1000, 10359, 1431, -1000,
	140, 136, -1000, 9345, 330, 77002, 132, 130, 2401, 129,
	128, 54229, 127, 126, 2345, 2653, -1000, -1000, 1866, -1000,
	-1000, 124, 121, 120, 118, 115, 113, 111, 109, 107,
	106, -1000, 105, 104, 103, 102, 101, 100, 99, 98,
	-1000, 97, 96, 95, 94, 93, 87, 86, 85, 82,
	78, 77, 76, -1000, 13244, 75, 1706, 1556, 1545, 1544,
	1542, 1530, 964, 73, 72, 71, 70, 69, 68, 67,
	64, 63, -1000, 61, 60, 58, 55, 54, 53, 52,
	49, 177, 48, 43, 41, 39, 37, 34, 33, 2488,
	-1000, 1454, 1407, 25124, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	94938, 89779, 32, -143, 26, -1000, 3004, 851, 45172, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 299, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 494, 1962,
	743, -1000, -1000, -1000, 86466, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2039, -28, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 742, -1000, 2038, 182, 2002, -1000, -1000, -1000,
	-1000, -1000, 89779, -1000, -1000, 3410, 3409, 1849, 741, 85997,
	-1000, 1581, -1000, 893, 28130, -1000, 1208, -1000, 28130, 283,
	-1000, -1000, -1000, -1000, -1000, -1000, 3405, 3404, 3402, 3401,
	-1000, -1000, 65181, 19082, 64706, 64231, 85522, 18597, 72763, 72288,
	85047, 60445, -1000, -1000, -1000, 1369, -1000, -1000, -1000, -1000,
	-1000, -1000, 2, 58020, 3189, 89779, -1000, 281, -1000, -1000,
	-1000, -1000, -1000, -1000, 38314, 965, 37803, 532, 37292, 412,
	-1000, -1000, -1000, 59960, -1000, 3400, 3398, 1075, 3397, 2946,
	94469, 1656, 3396, 1752, 1199, 995, 3395, 3393, 3392, 3390,
	3389, 3380, 1310, 84572, 2693, 84097, 1732, 59475, 71813, 74182,
	2398, 83622, 1277, 1274, -1000, -1000, -1000, -1000, 2777, 2642,
	2602, 50922, -1000, -1000, 3376, 3362, 3359, 3356, 3355, 94000,
	1620, 3352, 2239, 3350, 3346, 3345, 3344, 3343, 3342, 3341,
	-1000, 71338, 70863, 70388, 3079, 83147, 69913, 82672, 58990, 36781,
	1366, -1000, -1000, -1000, 47086, 5984, 5760, 82197, 49025, 74182,
	74182, -1000, -1000, -1000, -1000, -1000, 36270, 952, 35759, 1362,
	-1000, -1000, 47576, 2631, -1000, -1000, -1000, -1000, 35248, 591,
	34737, 1004, 89779, -1000, 2688, 1707, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2361, 1494,
	3238, 58505, 1827, 1395, 3017, 2776, 2759, 1413, 3340, 2304,
	2752, 2751, 2750, 2749, 2747, 1791, 2328, 533, 24613, 2679,
	1546, 34226, 1420, 1379, 2744, 2721, 3255, 1847, 1759, 1824,
	63756, 3339, 3338, 2984, 2716, 2714, 2621, -1000, -1000, -1000,
	-1000, 1361, -1000, -1000, -1000, -1000, -1000, 67069, -1000, -1000,
	1155, -1000, -1000, 1155, -1000, -1000, -1000, -1000, -1000, 1243,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1454, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1996, -1000, 1761, -1000, -1000, 2478, 2939, 2939,
	2939, 3045, 465, 460, -1000, 177, -1000, -1000, 100841, -1000,
	-1000, 38813, 38813, 38813, 38813, 38813, 38813, 38813, 1970, -1000,
	739, -1000, -1000, 771, -1000, 738, 590, -1000, -1000, -1000,
	-1000, -1000, -1000, 735, -1000, -1000, -1000, -1000, -1000, -1000,
	3189, -1000, 21559, -1000, -1000, -1000, 458, 732, 38813, -1000,
	-1000, 3267, 3266, 923, -1000, 265, 924, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2687,
	731, 727, -1000, 724, 707, 706, 705, 704, -1000, -1000,
	-1000, 698, 697, 696, 692, 689, 688, 678, 677, -1000,
	1860, -1000, -1000, -1000, -1000, -1000, -1000, 634, 633, 633,
	633, -1000, 985, -1000, -1000, -1000, 342, 631, 335, 628,
	627, 626, 675, 671, 668, 666, 665, 662, 661, 660,
	659, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 984, -1000, -1000,
	-1000, -1000, 0, 89779, -1000, 494, 0, -1000, -1000, 658,
	-1000, 28629, 28629, 28629, -1000, -1000, 2036, 38813, -1000, 3095,
	-1000, 7, 7, 838, 46120, -1000, 44206, 838, 286, 777,
	50446, -1000, 2619, -1000, -1000, 655, 264, -1000, -1000, -1000,
	-1000, 19565, 2615, 89779, 89779, 74182, 74182, 74182, 2845, 38813,
	-1000, -1000, 55174, 89779, 74651, 3145, 56112, 55174, 89779, 2682,
	-1000, -1000, -1000, 89779, -1000, 38813, -1000, 3141, 1507, 61401,
	3076, -9, -1000, -1000, -1000, -1000, -1000, -1000, 2217, 2343,
	1085, 2081, 1748, -1000, 28130, 2945, -1000, -1000, -1000, 263,
	19565, -1000, -1000, -1000, -1000, -1000, 2010, 2824, 1376, -1000,
	2080, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1746, 2823, -1000, 1855, 2820, 1720, -1000, -1000, 2048, -1000,
	-1000, 2981, -1000, -1000, 1726, 2817, 8, -1000, -1000, 2505,
	-1000, -1000, 1810, -1000, -1000, 957, 2816, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 48542, 47576, 58020, -4,
	-1000, -1000, -1000, -1000, -22, -1000, 18112, 100841, -1000, -1000,
	-1000, -1000, 1629, 100841, 857, -1000, -1000, 2815, -1000, 100841,
	833, -1000, -1000, 2814, -1000, 2681, -1000, -1000, -1000, -1000,
	3337, -1000, 3335, 2148, 3334, 3333, 3332, -1000, 1541, 1862,
	3329, -1000, 3327, -1000, -1000, -1000, -1000, -1000, -1000, 69438,
	2035, -1000, -1000, 68488, -1000, 2146, -1000, 68963, 993, -1000,
	957, 2138, -1000, 938, -1000, 3326, 3074, 2461, 957, 2135,
	-1000, -1000, -1000, -1000, -1000, 52338, -1000, 52338, -1000, 52338,
	-1000, 1412, -1000, 93531, 7, 7, 3189, -1000, -1000, -1000,
	-1000, -1000, 2813, 3325, 3324, 3323, -1000, 89779, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 196, 2812, -1000, -1000, 196,
	2811, -1000, 196, 2810, -1000, 76527, -1000, -1000, 2083, 2809,
	-1000, 194, 2806, -1000, -1000, 192, 2805, -1000, -1000, -63,
	2803, -1000, -1000, 100841, -1000, -1000, -1000, -29, -1000, -1000,
	-1000, 851, -1000, 46596, -1000, 46596, 81722, 60928, 928, 736,
	53753, 100841, -1000, -1000, -1000, -1000, 100841, -1000, -1000, -1000,
	-179, -1000, -1000, 60928, 47576, 100841, -1000, -1000, -1000, -1000,
	100841, -1000, -1000, -1000, 60928, 68488, -1000, 81247, 68019, -1000,
	-1000, 1307, 2284, -1000, -1000, -1000, 928, 60928, 60928, 60928,
	-1000, 80772, -1000, -1000, 1863, 1476, 2978, 1850, 74182, -1000,
	1775, -1000, -1000, -1000, 3008, -1000, 2680, -1000, 55643, 76058,
	-1000, 75589, -1000, 75120, -1000, 74182, -1000, 74182, -1000, 3321,
	3319, 3317, -1000, 3316, 2998, -1000, 100841, 2994, -1000, 3315,
	3071, 2679, 100841, -1000, 2802, 1555, 1549, 89779, -1000, -1000,
	89779, -1000, 89779, -1000, -1000, -1000, 1350, -1000, -1000, 2212,
	-1000, -1000, -1000, -1000, 74182, -1000, -1000, -1000, -1000, -1000,
	-1000, 2650, -1000, 1540, -1000, 1608, -1000, 1290, -1000, -1000,
	198, -1000, -1000, -9, -1000, 93062, -1000, 2478, -1000, 89779,
	-1000, 2192, 2641, 2649, 1627, 2051, 2307, -1000, 33715, 2297,
	41308, 2064, 177, -1000, -1000, 177, 177, 26122, -1000, -1000,
	56112, 56112, 19565, 1250, 38813, 38813, 38813, 38813, 38813, 38813,
	38813, 38813, 38813, 38813, 38813, 38813, 38813, 38813, 38813, 38813,
	38813, 38813, 38813, 38813, 38813, 38813, 38813, 38813, 38813, 38813,
	38813, 38813, 38813, 38813, 38813, 38813, 38813, 38813, 38813, 1816,
	38813, 1242, 38813, 38813, 38813, 38813, 2040, -1000, -1000, 1725,
	527, 1841, -1000, 3190, 3190, 3190, 915, 915, 6901, 6901,
	555, 3314, 771, -1000, 38813, -1000, 117, 38813, 20050, -1000,
	460, 11812, 2228, -1000, 459, 20561, -1000, -1000, -1000, 21559,
	590, 33204, 38813, 980, 100841, -1000, -1000, 1477, 3224, 17629,
	2699, 2526, 653, 770, 761, 24102, 23591, 23080, 22569, 542,
	38813, 38813, 38813, 38813, 38813, 38813, 38813, 38813, -1000, -1000,
	3246, -1000, 3224, -1000, -1000, -1000, -1000, 3224, 1249, 1248,
	3224, -1000, 3224, 3224, 2712, 2712, 32705, 32194, 31683, 41807,
	31172, 38813, 22058, 30661, 30150, -1000, 89779, 0, 3135, 38813,
	181, -1000, 99725, -1000, 181, 181, 651, -30, 100841, 2374,
	2374, 45646, 2392, 1963, 1963, 1963, -1000, 838, 13736, 838,
	79830, 1984, 838, 838, 248, 269, 453, 43732, 3095, 79830,
	753, 647, 25, 16, 15, -1000, -1000, 14, 10, -1000,
	-1000, 74182, 646, 20050, 19565, 241, 1325, -31, 2370, 2366,
	2358, -1000, 2356, 1668, -32, 1238, -97, -1000, 4068, -40,
	-1000, 999, 239, 3224, -1000, -1000, -1000, -1000, -1000, 3312,
	3311, -1000, 983, 639, 636, 387, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 634, 633, 633, 633, -1000, 342,
	631, 335, 628, 627, 626, -1000, -1000, -1000, -1000, 2610,
	-22, 74651, 845, -41, 1078, -9, -1000, -1000, -1000, 61401,
	1155, -1000, 1828, -1000, -1000, -1000, -1000, -1000, -1000, 1314,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 923, -1000, -1000,
	-1000, -1000, -1000, -1000, 3236, 3197, -2, -1000, -1000, 19565,
	-1000, -17, 1499, 1609, -1000, 63281, 2184, 2988, 2962, 1389,
	-1000, 1346, 3041, 67069, 3092, 3104, 1002, -1000, 2603, -1000,
	-1000, 886, 1522, 1601, 1237, 67069, 1855, -1000, 56112, -1000,
	2434, 3039, 1295, 1354, 1295, 1295, 1286, -1000, 67069, 1600,
	1236, -1000, 1232, -1000, -19, 3089, 3100, 865, -1000, 2601,
	1230, -1000, -1000, 74182, 19565, 1447, 1461, 1598, 1228, -3,
	-1000, 3085, 3082, 1218, 1217, -1000, 1436, -1000, 60928, 813,
	2492, 813, -4, 58020, 89779, 236, -1000, 117, 38813, 38813,
	117, 38813, 117, 3067, -1000, -1000, 2797, -1000, -1000, -1000,
	3310, 1811, 2236, -1000, -1000, -1000, 625, 2130, 2599, 89779,
	2389, -5, 74182, -1000, 2796, 1855, 2129, -1000, -1000, 67544,
	-1000, 2793, 629, 3309, -1000, 92593, -1000, 2989, 1272, 2787,
	1043, 903, 3131, -1000, 903, 52807, -1000, 89779, -1000, -1000,
	89779, -1000, -1000, -1000, 3305, -1000, 74182, -1000, -1000, 74182,
	-1000, 74182, -1000, 74182, 191, 2786, -1000, -1000, 89779, -1000,
	74182, 74182, -1000, 89779, 89779, 60928, 60928, 4361, 62343, -42,
	-48, 451, -1000, 80303, 89779, 1041, 62812, 89779, 2937, 950,
	47576, -1000, -49, -179, 2484, 928, 928, 813, -1000, 813,
	-1000, 74182, 2646, -1000, 928, 928, 928, -1000, -1000, -1000,
	-1000, 3304, 3300, -1000, -1000, -1000, 951, 74182, 89779, 74182,
	-1000, -1000, 89779, -1000, 89779, -1000, 951, 89779, 951, 89779,
	951, 89779, -1000, -1000, -1000, -1000, -1000, -1000, 117, 38813,
	-1000, -1000, 3299, 1493, -1000, 2644, -1000, 2643, -1000, 45,
	-1000, -1000, -1000, -1000, -1000, 1630, 74182, 74182, 74182, 74182,
	89779, 74182, -1000, 67069, -1000, 2192, 2641, -1000, -1000, -1000,
	-1000, -1000, -1000, 1575, 2006, -1000, 2272, -1000, 1367, -1000,
	-1000, -1000, 100841, 42290, -1000, -1000, 100841, 1696, -1000, 40809,
	40310, -1000, -1000, 1622, 74182, 2393, -1000, 2393, -116, -1000,
	99199, 2265, 74182, -1000, -1000, -1000, -1000, -1000, 885, 552,
	552, 1198, 1198, 1198, 1198, 3081, 690, 4244, 1943, 7745,
	7745, 285, 285, 285, 285, 285, 7745, 1036, 915, 915,
	1036, 1036, 1036, 1036, 1036, 915, 915, 915, 7745, 7745,
	7745, 6901, 9066, 8267, 38813, 38813, 1215, 1699, 527, 7509,
	38813, 9833, 9833, 9833, 9833, -1000, 1955, -1000, -1000, -1000,
	-1000, 2593, 624, 41807, 41807, -1000, -1000, -1000, -1000, 21060,
	38813, -1000, -1000, -1000, -1000, 29639, -1000, -1000, 98804, -270,
	448, -102, 1, -1000, 38813, 38813, 38813, 442, -1000, 235,
	38813, 89779, -1000, 96611, 752, -105, -1000, -50, 1323, -1000,
	38813, -1000, -1000, 1145, -1000, 1137, 1135, 1132, -1000, 619,
	439, -1000, 229, -1000, 1972, 615, 614, 38813, -1000, -1000,
	-1000, -1000, -1000, 98760, -1000, -1000, 98447, -1000, -1000, 98403,
	-1000, -1000, 98090, -1000, -1000, -1000, 100758, 96291, 96247, 95927,
	11113, 95883, 12870, -56, 438, -58, 437, 884, 873, 435,
	434, 433, -64, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -66, 432, -1000, 2590, -102, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 431, -1000, 430, -1000, 100525, -102,
	429, 5214, -1000, 41807, 41807, 41807, -1000, 414, -1000, 99368,
	-1000, 100442, 29140, 29140, 29140, 410, 100126, 38813, -102, -67,
	-1000, -76, -1000, -1000, 539, -77, 966, 28629, 44696, 19565,
	-1000, 966, 966, 38813, -1000, 38813, 2302, -1000, -1000, -1000,
	2298, 2210, 2374, 45646, -1000, -1000, -1000, -1000, 79830, -1000,
	3189, 2422, -1000, 79830, -1000, -1000, 89779, 494, -1000, 79830,
	79830, 19565, 838, -1000, 838, 79830, 622, -1000, -1000, -1000,
	-1000, -1000, 409, 49498, 1, 227, 19565, 957, -1000, 2400,
	2400, 2400, 2400, -1000, -1000, 89779, 3117, -1000, 1886, -1000,
	56112, -1000, 767, 991, 19565, -1000, -1000, -1000, 612, -1000,
	3224, 3224, -1000, 3224, 89779, 167, 28130, -1000, 1155, -1000,
	-1000, 1453, -1000, 1836, -1000, 1159, -1000, -1000, -1000, -1000,
	28130, -1000, 2413, 89779, 89779, 74182, -1000, 89779, -1000, 2128,
	92124, 2126, 56112, 89779, -1000, -1000, 610, 606, 2261, 2259,
	1032, 89779, 89779, 2255, 91655, 91186, 89779, 1921, 38813, 1981,
	1961, 117, 117, -1000, -1000, 117, 605, 1213, 74182, 74182,
	89779, 74182, 1685, -1000, -1000, -1000, -1000, -1000, 66600, -1000,
	-1000, 3242, 3241, -1000, 1295, -1000, -1000, -1000, 1295, 1855,
	1671, 89779, 74182, 89779, 1909, 117, 117, -1000, -1000, 117,
	602, 19565, 1865, -1000, 2692, 89779, 3265, 89779, 89779, 89779,
	57551, 2944, 90717, 89779, 89779, 57551, 1436, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 57078, 1050, 957, 949, 47576, 2468,
	-1000, -1000, 17146, -1000, 100841, 100841, -1000, 100841, -1000, 55174,
	89779, -1000, 989, 89779, 62812, 943, 2779, 51869, -22, 928,
	60928, 74182, -5, 89779, -1000, 1855, 2774, 494, 2117, -1000,
	-1000, 60928, 599, 3298, 3297, -1000, 2033, 2111, -1000, -1000,
	90248, 2785, 802, 89779, 966, 45646, 1818, -1000, 49973, 1013,
	89779, 1754, 123, -1000, -1000, -1000, 31, 89779, -1000, 3296,
	-1000, -1000, 196, 196, 196, -1000, 74182, 74182, 2083, -1000,
	194, -1000, 192, -1000, -63, -1000, -1000, 4361, 4361, 928,
	-153, 598, -1000, 856, 853, 48059, 60928, -83, -1000, -1000,
	-1000, -1000, -1000, 74182, 89779, 725, 2433, 89779, -84, -1000,
	221, 593, -1000, 1956, -1000, -1000, 950, 47576, 2574, -1000,
	-1000, 969, -1000, 1283, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 6, -22, -22, -1000, 951, -1000, 951,
	-1000, 951, -1000, 100841, -1000, -1000, 1491, 1480, 89779, -1000,
	19565, 89779, 74182, 19565, 74182, 2640, 2639, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1058, -1000, 1696, 2005, -1000,
	590, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2203, -1000, -7, 26122, 2085, -1000, -1000, 74182, 5, 38813,
	38813, 7350, 6176, 38813, 41807, 41807, -1000, 38813, 6157, -1000,
	-1000, -1000, -1000, -1000, 2563, 589, 38813, 56112, 6705, 5435,
	-1000, 407, 12710, 1036, -1000, 38813, -1000, 406, 27631, -1000,
	99769, -8, -85, -1000, 14232, -102, -90, -1000, -1000, 765,
	-1000, 2757, -1000, 38813, 100082, 2168, 1907, 1647, 1504, 3224,
	3264, 16663, -1000, 53280, 973, 1986, 98046, -1000, -1000, -1000,
	-1000, 56112, 56112, 38813, 38813, -1000, 38813, 38813, 38813, -1000,
	-1000, -1000, 3224, 900, -1000, -1000, -1000, 900, -1000, -1000,
	1295, -1000, 1295, -1000, 38813, -1000, -1000, 2557, 38813, -1000,
	56112, 56112, 41807, 41807, 41807, 41807, 41807, 41807, 41807, 41807,
	41807, 41807, 41807, 41807, 41807, 41807, 41807, 41807, 41807, 41807,
	41807, 2306, 41807, 3188, 3188, 3188, -1000, 2638, 2557, 38813,
	38813, 56112, 402, 399, 396, -1000, 38813, -102, -1000, -1000,
	4361, 588, -1000, 2191, -1000, 2521, -1000, 38813, -1000, -161,
	-1000, 3095, -1000, -1000, 2521, 2521, -91, 100841, 45646, 45646,
	-1000, 585, 38813, 2291, -1000, -1000, 750, -268, -1000, 848,
	-1000, -1000, -1000, -1000, -1000, 494, -1000, -1000, -1000, 217,
	79830, 79830, 749, -1000, -99, -1000, -1000, -109, -1000, 3129,
	393, 19565, -1000, -1000, 2930, -1000, -1000, -1000, -1000, -1000,
	-1000, -22, 1997, 3262, -1000, 3239, 758, 748, 216, 3224,
	390, 388, 385, -22, 89779, -1000, -9, -1000, -1000, -1000,
	38813, -1000, -1000, 2977, 1129, 1128, -1000, -1000, 2770, -1000,
	2109, -1000, 1019, -1000, 1842, -1000, 38813, 38813, 584, 583,
	3295, 1641, 3294, 1033, 2768, 2083, 2767, 2083, -1000, -1000,
	920, -1000, 100841, 582, 581, -1000, -17, 1479, 1571, 963,
	-1000, -1000, 38813, 38813, 79361, -1000, 417, 2981, 4, -1000,
	-1000, 1565, 1126, -1000, -1000, -1000, -1000, 1855, 1520, 1124,
	-1000, -1000, -1000, -1000, 962, -1000, -1000, 38813, -1000, -19,
	1123, 3080, 2104, 74182, 1122, -1000, 1121, -1000, -1000, -1000,
	-1000, -1000, -1000, 3078, 2083, 2763, 1139, -1000, -1000, -1000,
	-1000, -1000, 56595, -1000, -1000, 2555, 813, 949, 2549, -1000,
	1120, 3293, 74182, 3292, 378, -114, -20, 56112, 3128, 2047,
	611, 74182, 880, -1000, 3189, -1000, -1000, -1000, -1000, 74182,
	3118, 2739, 957, 3260, -1000, -1000, 74182, 2735, 2032, 2097,
	2225, 802, 61874, -1000, 957, 1983, -61, -1000, 1754, 27120,
	2973, -115, -1000, -1000, -1000, 966, 52807, 45646, 38813, 3291,
	-130, -1000, -1000, -1000, -1000, -1000, 191, -1000, -1000, -1000,
	-1000, -1000, -1000, 78419, 78419, 60928, 60928, 60928, 928, 89779,
	89779, 62812, -1000, 579, 89779, 89779, 578, -1000, 89779, 89779,
	3288, 60928, -21, 576, -1000, 847, 844, -1000, -1000, -1000,
	-1000, -1000, -179, 117, -1000, 1993, 74182, 16180, -1000, -1000,
	-1000, -1000, -1000, 951, -1000, -1000, 1931, 2054, 1931, 1734,
	1730, -1000, 1998, -1000, -1000, -1000, -1000, 2357, 2936, 19565,
	3102, 9833, 38813, 38813, 4871, 4981, 720, 9833, 38813, 38813,
	56112, 11692, -131, 38813, 38813, -1000, 38813, 747, 100841, 3258,
	38813, 377, 376, -1000, -1000, -1000, 3205, -1000, -1000, -1000,
	100841, 38813, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 373,
	-1000, 183, -1000, -1000, -1000, 95407, -1000, 38813, 372, 3038,
	-1000, 354, 350, 12349, 4364, 97733, 97689, 97376, 349, -1000,
	-1000, 347, 340, 100841, 2638, 100841, -1000, -1000, 852, 852,
	1265, 1265, 1265, 1265, 3188, 525, 726, 303, 897, 897,
	897, 809, 1021, 1021, 897, 897, 897, 2547, 2229, 574,
	5106, -1000, -1000, 100841, 100841, 339, -1000, -1000, -1000, -102,
	338, 4361, -1000, 2516, 3035, 100841, -1000, 45646, 2516, 2516,
	-1000, -1000, 2210, 89779, 100841, 45646, -1000, 2422, -1000, 14726,
	-1000, 19565, -1000, -1000, -1000, -1000, 3189, -1000, 49498, -1000,
	573, -1000, 46, 2930, -1000, 840, -1000, -1000, -1000, 746,
	3286, 756, 19565, 327, -1000, -1000, -1000, -22, 100841, 89779,
	89779, 89779, 2734, -1000, 3237, -1000, 1032, 97332, -133, -1000,
	99199, 38813, 89779, -1000, -1000, 1652, 2321, 1069, -1000, 3010,
	89779, -1000, 89779, -1000, -1000, 89779, 89779, 74182, 89779, 2720,
	-136, 100841, -23, -1000, 839, -1000, 1280, -1000, 15697, 89779,
	74182, 89779, 74182, 2715, -138, 19565, -1000, 3257, 3256, 2733,
	3014, 3251, 89779, -1000, 89779, 74182, 2931, -1000, -1000, -24,
	572, -1000, 824, -1000, -1000, 808, 949, -1000, 60928, 47576,
	-1000, 494, -1000, 2419, -1000, 77471, 2041, 117, -1000, 78892,
	3284, 567, -1000, 1992, -1000, 745, 1855, 117, 74182, -1000,
	326, -25, -1000, 1024, 19565, 74182, 2732, 2231, 802, 61874,
	-1000, 1272, 2307, -1000, -55, -1000, 554, 117, 1983, -1000,
	-61, 100841, -1000, 807, -1000, -1000, -144, -1000, -1000, 324,
	-1000, 2921, 2903, -1000, 2538, 38813, 565, 558, 89779, 2870,
	-1000, -1000, -146, 1995, 1995, 60928, 60928, 950, -1000, 2193,
	-1000, -1000, -1000, -1000, -1000, 19565, 1511, -1000, 557, 553,
	-1000, -1000, -1000, -1000, 2936, 9833, 9833, 38813, 38813, 38813,
	9833, 11692, -147, -1000, 9833, 9833, -102, -1000, -1000, 99769,
	-1000, -1000, -1000, 100841, -1000, 15214, 1935, -1000, 97019, -1000,
	26122, -1000, -1000, 38813, 38813, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 41807, 2545, 549, 56112, -1000, -1000, 320,
	971, 38813, 38813, 3095, 971, 971, -1000, -152, -1000, -1000,
	-1000, 3189, 46, -1000, -1000, 3283, 19565, -1000, 60928, 728,
	-1000, 3282, -1000, -1000, -1000, -1000, -1000, 89779, -1000, 89779,
	-1000, 19565, 89779, 2553, 2089, -1000, -1000, 2253, 541, 41807,
	74182, 795, -1000, 3110, 2496, 1676, 38813, 2085, -158, -165,
	2088, -1000, -1000, 2066, 38813, -1000, 56112, 536, 2083, 2083,
	-166, -167, -1000, -1000, 38813, 1114, 89779, 26621, -1000, 3281,
	2981, -1000, -1000, -1000, -1000, 38813, 1104, -1000, -1000, -1000,
	3250, 2083, 19565, -1000, 2083, 2083, 3014, 1068, 2151, 2151,
	60928, 47576, -1000, -63, 949, 3116, 1909, 2483, -1000, -1000,
	-1000, -1000, 2250, -1000, -1000, 89779, 2244, 931, -168, -1000,
	806, 803, -1000, 62812, 943, 904, -1000, -1000, -1000, 494,
	-1000, 3231, 530, 89779, 2031, 528, 19565, -1000, 802, 61874,
	-1000, 2785, 1754, -1000, 2839, 89779, 2957, -1000, 2307, 527,
	-1000, 928, 526, 524, 3069, 3069, -173, 38813, 38813, -176,
	514, 928, -1000, -181, -1000, -1000, -1000, -78, -1000, 820,
	667, -1000, -1000, 74182, 74182, 38813, 38813, -1000, 9833, 9833,
	9833, -1000, 302, -1000, -1000, 1983, 3031, -1000, -86, 96975,
	96655, 489, 41807, 56112, -182, -1000, -1000, 89779, 100841, -102,
	-1000, -1000, -1000, 543, -1000, -1000, 3279, -1000, -1000, 1859,
	-1000, -1000, -1000, 89779, 2087, -1000, 1030, 38813, 5106, 512,
	38813, -1000, 3114, -1000, 2410, 2575, 2419, 509, -1000, -1000,
	-1000, -1000, -1000, 1022, 1806, -1000, -1000, 100841, 3014, 38813,
	-1000, -1000, 508, 504, 100841, 499, 799, 2544, -1000, -1000,
	-1000, 100841, 498, 3080, -1000, -1000, -1000, -1000, 2083, 74182,
	-1000, -184, -1000, -1000, 1821, 117, 943, -1000, 1959, 2041,
	497, -1000, -1000, 2013, 2349, -1000, 78892, 43256, 43256, 301,
	3113, 904, -1000, 3194, -1000, 3112, -1000, 38813, -1000, 74182,
	38813, 2028, 61874, -1000, 2225, -1000, 1220, -189, 89779, 1754,
	-1000, -1000, 60928, 60928, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1022, -191, -192, -1000, 60928,
	-1000, -1000, 2193, -1000, 89779, -1000, 89779, -1000, -1000, -194,
	-199, -1000, 1812, 38813, 26122, -1000, -1000, 489, -202, -1000,
	-96, -1000, 3098, -1000, -1000, -1000, -1000, 2723, 2513, 4759,
	2196, 89779, 375, -1000, 2572, -1000, -1000, 1909, 89779, 2419,
	2500, 74182, 1026, -204, 1931, 1931, 38813, 25623, 1958, 38813,
	-1000, -1000, 3014, -1000, 2537, 3228, -1000, 2013, 74182, 89779,
	-1000, 3002, -1000, 2869, -1000, -1000, -1000, 2419, 117, -1000,
	-1000, 117, -207, 1024, -209, 74182, -1000, 2231, 1377, -1000,
	966, -1000, -1000, -216, -224, 1676, 1022, 966, -225, -1000,
	-226, -227, -1000, -1000, 193, 39811, 39811, 39811, -102, -116,
	-1000, 89779, 495, 2656, 947, -1000, 2015, 1731, 125, 1040,
	-1000, -1000, 2496, -232, -1000, 944, 494, -1000, 38813, 1022,
	-233, -1000, 1007, -234, -1000, 1003, -235, -1000, 2543, -1000,
	-240, 2083, 934, 3066, -1000, -1000, -1000, -1000, 491, -241,
	-1000, -1000, 2105, -1000, 1909, 931, -1000, 1022, 490, 1676,
	488, -1000, 52807, -1000, 928, 928, 2419, 1676, -1000, 928,
	-1000, -1000, -1000, 2753, -1000, 42773, 2062, 1717, 99117, 2753,
	2753, -1000, -1000, 89779, 3051, -1000, 2027, 2024, 1435, -1000,
	-1000, -1000, -1000, -1000, -1000, 966, -1000, 3050, 2196, 100841,
	2419, -1000, 1931, 2476, -1000, 1931, 2541, -1000, 1941, -1000,
	-1000, -1000, 2725, 3199, 89779, -1000, 89779, 1661, 1655, 3276,
	943, 2013, 1676, 38813, 2419, 38813, -217, -1000, -1000, 1909,
	2419, -1000, -1000, 1742, 3105, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 798, -1000, 2851, -1000, 1056, 1848, 1848,
	-1000, 793, 2015, -1000, -1000, 487, -1000, 474, -1000, 1583,
	-1000, -1000, -242, -1000, -1000, 3275, -1000, 2013, -1000, 2419,
	-243, 1909, -249, -1000, 966, 1909, 1672, -1000, -1000, 1982,
	39312, 38813, -1000, 3173, -1000, -1000, 2288, -1000, 38813, 2496,
	38813, 38813, 1989, 2055, -1000, -1000, 1909, 1022, 966, 1676,
	-1000, 966, -1000, -1000, -1000, 100841, -1000, -1000, -1000, 100841,
	-1000, -251, -252, 51396, -1000, -1000, -1000, 966, 1676, -1000,
	2419, -1000, 1909, 1094, -153, 78419, -1000, 2419, 1909, -1000,
	469, -257, 1909, 966, 38813, -1000, 966, -1000, -259, -1000,
	1909, -1000,
}
var sqlPgo = [...]int{

	0, 4021, 4016, 4013, 4010, 4009, 4008, 4006, 4000, 3998,
	3994, 3990, 3989, 3987, 3985, 3984, 3983, 3982, 3977, 3976,
	3974, 3972, 3971, 3970, 3969, 3967, 3965, 3964, 3963, 3962,
	3961, 3960, 3959, 3958, 3957, 3955, 3954, 3952, 3946, 3938,
	3937, 3935, 3934, 3933, 3932, 3926, 3923, 3922, 3920, 3907,
	3905, 3904, 39, 3900, 3899, 3898, 3896, 3894, 3893, 3891,
	3890, 3888, 3887, 3885, 3884, 3882, 3878, 3875, 3874, 3872,
	3866, 44, 3865, 233, 3856, 3855, 3854, 3853, 3852, 3851,
	3850, 3849, 3848, 3846, 3845, 3842, 232, 3823, 100, 3822,
	3819, 3811, 3809, 3808, 231, 3802, 3800, 3799, 3798, 243,
	3797, 3795, 3790, 3789, 3786, 3782, 3777, 3776, 3775, 63,
	123, 3774, 64, 3773, 3771, 3770, 3768, 3767, 3765, 3764,
	3763, 3762, 3758, 213, 3757, 230, 3755, 3754, 3753, 3749,
	3747, 3744, 3743, 3742, 3741, 3739, 3738, 3737, 3736, 3735,
	3733, 3730, 3729, 3728, 3726, 3724, 3723, 3722, 3717, 3716,
	3715, 3713, 3712, 3711, 3707, 3706, 3703, 235, 154, 3702,
	3698, 229, 227, 3695, 3691, 3690, 3688, 3687, 103, 7,
	27, 3680, 3678, 62, 65, 69, 82, 84, 86, 3675,
	89, 3674, 115, 51, 3673, 16, 203, 241, 7695, 236,
	3672, 3670, 3663, 210, 162, 3662, 202, 3657, 3656, 3655,
	3654, 80, 70, 138, 137, 136, 131, 409, 3653, 3652,
	85, 59, 42, 32, 3651, 3649, 3648, 3167, 114, 3645,
	224, 204, 128, 3644, 3643, 3642, 905, 3638, 33, 3635,
	178, 71, 112, 22, 102, 3634, 113, 20, 3633, 139,
	48, 3631, 121, 81, 67, 7467, 4923, 3629, 98, 55,
	91, 395, 152, 150, 168, 148, 166, 179, 177, 143,
	267, 3627, 212, 3626, 3143, 50, 124, 3625, 3624, 3623,
	60, 167, 88, 3622, 3621, 53, 8, 4, 1, 147,
	15, 99, 12, 3620, 11, 3619, 3618, 3617, 3616, 31,
	133, 3614, 245, 3612, 83, 34, 41, 3611, 36, 176,
	3610, 192, 105, 3608, 3607, 221, 172, 217, 3606, 74,
	199, 3604, 3603, 3599, 3598, 3597, 109, 24, 107, 3596,
	3595, 145, 205, 165, 3590, 38, 3585, 140, 87, 106,
	239, 108, 195, 94, 191, 157, 197, 3584, 3583, 3582,
	163, 3577, 3574, 188, 126, 3572, 3571, 171, 246, 37,
	61, 201, 56, 161, 134, 3569, 170, 3564, 3562, 3561,
	237, 149, 180, 5, 18, 77, 104, 28, 13, 200,
	120, 265, 96, 3560, 4369, 1505, 1471, 46, 3558, 116,
	90, 54, 101, 122, 223, 52, 3555, 3554, 164, 3553,
	3552, 3551, 3549, 141, 3548, 3547, 3546, 118, 153, 183,
	3544, 79, 75, 10, 146, 207, 238, 95, 187, 182,
	214, 3541, 151, 3540, 45, 159, 3539, 169, 226, 3538,
	3536, 193, 3534, 119, 225, 47, 135, 3533, 184, 3532,
	3526, 3525, 3524, 3523, 3522, 3520, 189, 198, 3519, 3518,
	3516, 117, 158, 3515, 222, 130, 144, 78, 35, 3514,
	73, 2643, 3511, 72, 196, 43, 3510, 3980, 40, 0,
	9949, 8990, 6597, 9108, 3509, 5390, 3508, 3505, 3503, 181,
	110, 3499, 3496, 3493, 93, 3492, 57, 3489, 3488, 49,
	3485, 17, 2, 9, 23, 19, 305, 300, 3481, 3473,
	97, 111, 155, 3472, 234, 194, 3471, 3466, 3465, 3464,
	76, 3463, 29, 3461, 26, 3460, 3459, 30, 6, 21,
	3457, 3454, 211, 3450, 208, 3449, 127, 3448, 3124, 125,
	3445, 3444, 216, 66, 3441, 219, 3440, 3070, 3440, 3438,
	3437, 14, 3435, 3433, 206, 160, 175, 3432, 132, 3431,
	129, 3430, 3429, 3428, 215, 3426, 3425, 25, 3424, 3,
	3423, 3420, 173, 2898, 3418, 3416, 58, 3415, 142,
}
var sqlR1 = [...]int{

	0, 1, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	3, 3, 3, 3, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 5, 5, 5, 5, 5, 5, 5, 5,
	5, 5, 11, 11, 7, 7, 7, 8, 8, 8,
	8, 39, 39, 9, 9, 9, 10, 10, 6, 6,
	6, 6, 6, 6, 6, 6, 6, 16, 16, 28,
	28, 17, 17, 30, 30, 18, 18, 31, 31, 522,
	522, 21, 33, 22, 34, 15, 523, 523, 523, 523,
	27, 23, 35, 25, 25, 25, 25, 25, 171, 171,
	171, 171, 20, 20, 29, 29, 204, 204, 203, 203,
	203, 203, 203, 203, 203, 203, 203, 203, 203, 203,
	203, 203, 203, 203, 203, 203, 203, 203, 203, 203,
	521, 521, 206, 206, 205, 200, 200, 524, 524, 207,
	207, 207, 209, 209, 13, 13, 13, 13, 13, 13,
	13, 13, 13, 425, 425, 425, 538, 538, 538, 539,
	539, 540, 540, 540, 540, 540, 41, 41, 41, 41,
	516, 516, 173, 173, 173, 175, 175, 174, 174, 174,
	174, 62, 62, 530, 530, 531, 531, 529, 528, 528,
	532, 532, 532, 172, 172, 172, 108, 108, 108, 108,
	109, 109, 110, 110, 176, 176, 176, 178, 178, 177,
	177, 177, 177, 177, 177, 182, 95, 95, 95, 95,
	95, 95, 95, 95, 95, 90, 90, 457, 457, 458,
	458, 167, 167, 168, 168, 168, 168, 169, 169, 170,
	170, 170, 55, 179, 179, 181, 181, 180, 180, 43,
	43, 43, 43, 43, 43, 43, 44, 44, 44, 44,
	44, 45, 45, 45, 45, 45, 45, 46, 46, 46,
	46, 46, 46, 53, 53, 53, 53, 158, 158, 56,
	56, 56, 56, 56, 56, 56, 56, 56, 541, 541,
	541, 541, 541, 541, 541, 541, 541, 541, 541, 541,
	541, 541, 541, 541, 541, 541, 541, 541, 542, 542,
	543, 543, 544, 544, 545, 545, 545, 545, 545, 545,
	545, 545, 545, 545, 545, 545, 545, 545, 545, 545,
	545, 545, 58, 58, 58, 58, 58, 58, 58, 58,
	58, 58, 58, 58, 58, 58, 58, 58, 58, 58,
	68, 68, 291, 291, 263, 263, 69, 69, 69, 70,
	70, 71, 71, 57, 57, 514, 514, 306, 306, 416,
	416, 73, 73, 326, 326, 74, 74, 74, 74, 74,
	74, 75, 75, 75, 75, 75, 75, 75, 76, 76,
	76, 76, 76, 76, 76, 76, 76, 76, 76, 76,
	76, 76, 83, 83, 83, 84, 84, 84, 81, 81,
	81, 78, 78, 78, 77, 77, 77, 82, 82, 82,
	254, 254, 80, 80, 80, 256, 256, 79, 79, 79,
	307, 307, 85, 85, 85, 85, 264, 86, 86, 86,
	86, 86, 86, 86, 86, 88, 88, 88, 88, 88,
	88, 88, 88, 88, 88, 88, 88, 88, 88, 88,
	88, 88, 88, 88, 88, 88, 88, 88, 88, 88,
	88, 88, 88, 88, 88, 88, 89, 89, 89, 89,
	89, 89, 89, 89, 89, 89, 89, 89, 418, 418,
	87, 87, 87, 386, 386, 91, 91, 91, 341, 341,
	92, 92, 92, 92, 92, 93, 93, 93, 93, 111,
	111, 111, 111, 518, 518, 299, 299, 220, 220, 220,
	220, 101, 101, 101, 101, 102, 102, 102, 103, 103,
	163, 163, 117, 117, 117, 117, 117, 116, 116, 116,
	116, 116, 116, 47, 47, 47, 48, 48, 49, 49,
	50, 50, 51, 51, 52, 52, 52, 52, 52, 119,
	119, 535, 535, 121, 118, 118, 118, 120, 120, 120,
	120, 122, 123, 123, 123, 123, 123, 123, 123, 123,
	124, 124, 450, 450, 315, 315, 448, 448, 466, 466,
	449, 449, 268, 268, 268, 268, 268, 269, 269, 269,
	456, 456, 456, 456, 456, 456, 125, 125, 125, 125,
	125, 125, 125, 125, 125, 125, 125, 125, 125, 125,
	125, 125, 125, 125, 125, 125, 125, 125, 125, 125,
	125, 125, 125, 125, 125, 125, 125, 125, 125, 125,
	125, 125, 125, 125, 125, 125, 125, 125, 125, 125,
	125, 125, 125, 125, 125, 125, 125, 125, 125, 125,
	125, 125, 125, 125, 125, 125, 164, 164, 165, 166,
	166, 166, 166, 145, 145, 145, 157, 157, 157, 157,
	157, 157, 157, 148, 148, 148, 135, 135, 126, 126,
	126, 126, 126, 130, 130, 130, 130, 130, 130, 130,
	130, 127, 127, 137, 137, 137, 137, 137, 131, 131,
	132, 132, 134, 134, 136, 136, 136, 136, 136, 136,
	136, 136, 136, 128, 128, 128, 128, 139, 139, 139,
	139, 348, 348, 348, 138, 138, 138, 138, 138, 138,
	138, 138, 138, 138, 138, 156, 156, 156, 156, 156,
	156, 533, 533, 534, 534, 152, 152, 152, 152, 152,
	152, 400, 400, 146, 146, 146, 146, 151, 151, 151,
	151, 331, 331, 143, 143, 143, 144, 144, 144, 149,
	149, 150, 147, 147, 153, 153, 153, 153, 129, 129,
	129, 546, 546, 546, 154, 154, 142, 142, 155, 155,
	155, 155, 155, 155, 155, 155, 141, 141, 141, 140,
	140, 140, 140, 133, 515, 515, 512, 512, 512, 512,
	512, 512, 512, 512, 513, 513, 517, 517, 96, 96,
	96, 96, 96, 104, 104, 104, 104, 104, 97, 97,
	97, 97, 97, 99, 99, 98, 98, 98, 98, 63,
	63, 63, 14, 14, 14, 64, 64, 185, 185, 185,
	185, 276, 276, 276, 276, 183, 183, 184, 184, 65,
	65, 547, 547, 547, 525, 525, 525, 526, 526, 526,
	526, 526, 526, 270, 270, 271, 271, 366, 366, 366,
	366, 366, 274, 274, 274, 275, 275, 275, 275, 275,
	275, 275, 275, 275, 277, 277, 208, 208, 208, 280,
	281, 281, 278, 278, 279, 279, 279, 283, 283, 282,
	285, 285, 284, 365, 475, 475, 477, 477, 477, 477,
	477, 477, 477, 479, 479, 479, 479, 479, 479, 479,
	479, 479, 479, 479, 548, 548, 473, 473, 473, 474,
	469, 469, 470, 470, 470, 470, 470, 272, 272, 273,
	273, 273, 273, 471, 472, 297, 297, 403, 476, 476,
	478, 478, 480, 549, 549, 549, 549, 549, 549, 550,
	550, 550, 364, 364, 363, 363, 289, 289, 481, 481,
	481, 481, 482, 482, 482, 482, 482, 485, 484, 483,
	483, 483, 483, 483, 67, 67, 67, 328, 328, 327,
	327, 329, 329, 329, 329, 329, 329, 329, 329, 329,
	329, 329, 329, 329, 329, 329, 160, 160, 223, 223,
	61, 61, 61, 12, 12, 12, 527, 527, 527, 66,
	66, 66, 66, 222, 222, 222, 222, 222, 222, 520,
	520, 519, 519, 224, 224, 552, 552, 72, 72, 72,
	72, 72, 72, 72, 419, 419, 420, 420, 60, 60,
	60, 60, 60, 349, 349, 347, 347, 346, 346, 296,
	296, 402, 228, 228, 201, 201, 201, 26, 19, 19,
	24, 24, 37, 37, 40, 40, 36, 36, 38, 38,
	32, 32, 536, 536, 537, 537, 100, 100, 105, 105,
	105, 105, 105, 106, 106, 106, 106, 107, 107, 107,
	107, 115, 115, 159, 159, 159, 159, 159, 159, 159,
	42, 42, 42, 42, 54, 54, 54, 54, 113, 554,
	554, 554, 114, 114, 114, 553, 553, 221, 221, 360,
	360, 361, 361, 555, 555, 362, 362, 362, 362, 215,
	214, 216, 216, 59, 59, 59, 210, 210, 211, 211,
	212, 212, 213, 213, 556, 556, 94, 94, 94, 162,
	162, 262, 262, 262, 356, 356, 356, 290, 290, 234,
	234, 359, 359, 357, 357, 357, 357, 325, 325, 325,
	161, 161, 304, 304, 317, 317, 318, 318, 413, 413,
	319, 112, 112, 188, 188, 186, 186, 186, 186, 186,
	186, 186, 186, 193, 193, 194, 194, 195, 195, 196,
	197, 197, 197, 197, 308, 308, 198, 198, 198, 187,
	187, 187, 189, 189, 189, 189, 189, 189, 189, 192,
	192, 192, 192, 199, 199, 199, 191, 191, 492, 492,
	492, 494, 494, 496, 496, 495, 495, 491, 491, 493,
	493, 551, 551, 330, 330, 330, 287, 288, 286, 286,
	294, 294, 292, 293, 293, 295, 295, 401, 401, 401,
	202, 202, 202, 322, 322, 322, 322, 323, 323, 352,
	352, 350, 350, 350, 350, 351, 351, 353, 353, 353,
	354, 354, 355, 355, 321, 321, 382, 382, 190, 190,
	190, 301, 301, 301, 302, 302, 372, 372, 372, 372,
	372, 372, 373, 373, 371, 371, 371, 371, 404, 404,
	404, 404, 404, 404, 404, 404, 404, 405, 406, 406,
	303, 303, 407, 358, 358, 510, 510, 510, 511, 511,
	399, 399, 408, 408, 408, 408, 408, 408, 397, 397,
	398, 398, 414, 415, 415, 334, 334, 334, 334, 332,
	332, 335, 335, 335, 335, 333, 333, 409, 409, 409,
	409, 324, 324, 410, 410, 410, 410, 411, 367, 368,
	368, 421, 421, 421, 421, 423, 300, 300, 300, 300,
	300, 468, 467, 467, 422, 422, 422, 422, 422, 422,
	422, 422, 422, 437, 437, 437, 437, 437, 437, 437,
	437, 438, 438, 438, 438, 438, 438, 424, 424, 424,
	424, 424, 428, 428, 428, 427, 427, 427, 427, 427,
	427, 427, 427, 427, 427, 427, 429, 429, 434, 434,
	435, 435, 435, 430, 431, 436, 436, 436, 436, 557,
	557, 440, 440, 432, 432, 432, 432, 432, 432, 432,
	432, 432, 426, 426, 426, 433, 433, 433, 343, 343,
	343, 343, 343, 343, 343, 343, 343, 343, 343, 343,
	343, 342, 342, 344, 344, 374, 374, 374, 374, 374,
	374, 374, 374, 374, 374, 374, 374, 374, 374, 374,
	374, 374, 374, 374, 374, 374, 374, 374, 374, 374,
	374, 374, 374, 374, 374, 374, 374, 374, 374, 374,
	374, 374, 374, 374, 374, 374, 374, 374, 374, 374,
	374, 374, 374, 374, 374, 374, 374, 374, 374, 374,
	374, 374, 374, 374, 374, 374, 374, 374, 374, 374,
	374, 374, 374, 374, 374, 374, 374, 374, 374, 374,
	374, 374, 374, 374, 374, 374, 374, 374, 374, 374,
	374, 374, 374, 375, 375, 375, 375, 375, 375, 375,
	375, 375, 375, 375, 375, 375, 375, 375, 375, 375,
	375, 375, 375, 375, 375, 375, 375, 375, 375, 375,
	375, 375, 376, 376, 376, 376, 377, 377, 377, 377,
	377, 377, 377, 377, 377, 377, 377, 377, 377, 377,
	377, 377, 377, 377, 377, 377, 377, 377, 377, 377,
	377, 486, 486, 486, 486, 486, 486, 486, 486, 378,
	378, 489, 489, 490, 490, 487, 487, 487, 487, 487,
	487, 487, 487, 487, 487, 487, 487, 487, 487, 487,
	487, 487, 487, 487, 487, 487, 487, 487, 488, 488,
	488, 488, 488, 488, 488, 488, 488, 488, 488, 488,
	488, 488, 488, 488, 488, 488, 488, 488, 488, 488,
	488, 488, 488, 488, 488, 488, 488, 488, 488, 488,
	488, 488, 488, 488, 497, 497, 498, 498, 500, 500,
	501, 501, 502, 503, 503, 503, 504, 505, 505, 499,
	499, 506, 506, 506, 506, 507, 507, 508, 508, 508,
	508, 508, 509, 509, 509, 509, 509, 388, 388, 389,
	389, 395, 395, 395, 267, 267, 267, 267, 267, 267,
	267, 267, 267, 267, 267, 267, 267, 267, 267, 267,
	225, 225, 225, 225, 225, 313, 313, 311, 311, 311,
	314, 314, 312, 312, 310, 310, 309, 309, 385, 385,
	383, 383, 387, 387, 336, 336, 439, 439, 439, 439,
	439, 439, 439, 439, 337, 337, 337, 345, 338, 338,
	339, 339, 339, 339, 339, 379, 380, 340, 340, 340,
	381, 381, 390, 394, 394, 393, 392, 392, 391, 391,
	369, 369, 370, 370, 320, 320, 558, 558, 316, 316,
	412, 412, 412, 412, 266, 266, 305, 305, 265, 265,
	257, 257, 258, 258, 258, 258, 298, 298, 396, 396,
	441, 441, 442, 442, 443, 443, 444, 444, 445, 446,
	447, 384, 384, 244, 243, 231, 232, 242, 241, 240,
	230, 233, 237, 238, 239, 235, 236, 250, 249, 248,
	255, 246, 247, 417, 229, 259, 259, 260, 260, 260,
	261, 261, 261, 261, 226, 226, 227, 227, 251, 251,
	252, 253, 253, 245, 245, 245, 217, 217, 217, 218,
	218, 219, 219, 455, 455, 452, 452, 452, 453, 453,
	453, 454, 454, 454, 454, 451, 451, 451, 451, 451,
	459, 459, 459, 459, 459, 459, 459, 459, 459, 459,
	459, 459, 459, 459, 459, 459, 459, 459, 459, 459,
	459, 459, 459, 459, 459, 459, 459, 459, 459, 459,
	459, 459, 459, 459, 459, 459, 459, 459, 459, 459,
	459, 459, 459, 459, 459, 459, 459, 459, 459, 459,
	459, 459, 459, 459, 459, 459, 459, 459, 459, 459,
	459, 459, 459, 459, 459, 459, 459, 459, 459, 459,
	459, 459, 459, 459, 459, 459, 459, 459, 459, 459,
	459, 459, 459, 459, 459, 459, 459, 459, 459, 459,
	459, 459, 459, 459, 459, 459, 459, 459, 459, 459,
	459, 459, 459, 459, 459, 459, 459, 459, 459, 459,
	459, 459, 459, 459, 459, 459, 459, 459, 459, 459,
	459, 459, 459, 459, 459, 459, 459, 459, 459, 459,
	459, 459, 459, 459, 459, 459, 459, 459, 459, 459,
	459, 459, 459, 459, 459, 459, 459, 459, 459, 459,
	459, 459, 459, 459, 459, 459, 459, 459, 459, 459,
	459, 459, 459, 459, 459, 459, 459, 459, 459, 459,
	459, 459, 459, 459, 459, 459, 459, 459, 459, 459,
	459, 459, 459, 459, 459, 459, 459, 459, 459, 459,
	459, 459, 459, 459, 459, 459, 459, 459, 459, 459,
	459, 459, 459, 459, 459, 459, 459, 459, 459, 459,
	459, 459, 459, 459, 459, 459, 459, 459, 459, 459,
	459, 459, 459, 459, 459, 459, 459, 459, 459, 459,
	459, 459, 459, 459, 459, 459, 459, 459, 459, 459,
	459, 459, 459, 459, 459, 459, 459, 459, 459, 459,
	459, 459, 459, 459, 459, 459, 459, 459, 459, 459,
	459, 459, 459, 459, 459, 459, 459, 459, 459, 459,
	459, 459, 459, 459, 459, 459, 459, 459, 459, 459,
	459, 463, 463, 463, 463, 463, 463, 463, 463, 463,
	463, 463, 463, 463, 463, 463, 463, 463, 463, 463,
	463, 463, 463, 463, 463, 463, 463, 463, 463, 463,
	463, 463, 463, 463, 463, 463, 463, 463, 463, 463,
	463, 463, 463, 463, 463, 463, 463, 463, 463, 463,
	463, 463, 460, 460, 461, 461, 461, 461, 461, 461,
	461, 461, 461, 461, 461, 461, 461, 461, 461, 461,
	461, 462, 464, 464, 464, 464, 464, 464, 464, 464,
	464, 464, 464, 464, 464, 464, 464, 464, 464, 464,
	464, 464, 464, 464, 464, 464, 464, 464, 464, 464,
	464, 464, 464, 464, 464, 464, 464, 464, 464, 464,
	464, 464, 464, 464, 464, 464, 464, 464, 464, 464,
	464, 464, 464, 464, 464, 464, 464, 464, 464, 464,
	464, 464, 464, 464, 464, 464, 464, 464, 464, 464,
	464, 464, 464, 464, 464, 464, 464, 464, 464, 464,
	464, 464, 465, 465,
}
var sqlR2 = [...]int{

	0, 1, 1, 1, 1, 2, 1, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 1, 1, 1, 1, 0,
	1, 1, 2, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 1, 3, 1, 1, 3, 1, 1, 1,
	3, 4, 6, 1, 1, 3, 1, 3, 1, 1,
	1, 1, 1, 1, 1, 1, 3, 4, 6, 4,
	6, 6, 9, 6, 9, 6, 5, 6, 5, 1,
	1, 5, 5, 6, 6, 4, 4, 4, 4, 3,
	4, 4, 4, 7, 7, 9, 8, 9, 5, 3,
	5, 7, 4, 12, 4, 12, 1, 3, 5, 5,
	2, 5, 3, 6, 4, 6, 5, 6, 6, 4,
	8, 3, 4, 10, 3, 6, 4, 3, 1, 3,
	2, 1, 1, 3, 1, 3, 2, 2, 0, 1,
	1, 0, 2, 0, 7, 10, 8, 6, 6, 6,
	9, 4, 3, 2, 2, 0, 1, 1, 1, 1,
	3, 6, 4, 6, 7, 9, 6, 8, 7, 2,
	0, 1, 2, 5, 0, 1, 3, 3, 1, 1,
	3, 12, 3, 1, 0, 1, 1, 2, 2, 1,
	3, 3, 0, 5, 7, 0, 5, 6, 8, 2,
	1, 3, 1, 3, 2, 5, 0, 1, 3, 3,
	3, 1, 1, 1, 1, 1, 6, 4, 9, 7,
	12, 12, 12, 9, 2, 7, 2, 1, 1, 1,
	3, 3, 0, 3, 1, 3, 1, 1, 3, 2,
	5, 0, 6, 2, 0, 1, 2, 3, 1, 1,
	2, 1, 2, 1, 2, 2, 3, 3, 3, 3,
	3, 3, 5, 3, 3, 5, 3, 3, 5, 3,
	3, 5, 3, 6, 6, 6, 6, 1, 1, 1,
	2, 1, 1, 2, 1, 2, 1, 2, 3, 3,
	4, 3, 4, 7, 4, 4, 4, 3, 5, 7,
	4, 3, 3, 4, 3, 3, 3, 3, 2, 0,
	1, 0, 1, 0, 3, 3, 3, 3, 3, 6,
	4, 4, 4, 3, 5, 3, 3, 3, 3, 3,
	3, 3, 1, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 4, 1, 2, 1, 2, 1, 2,
	7, 3, 2, 0, 1, 3, 3, 1, 0, 1,
	2, 2, 1, 6, 5, 1, 2, 1, 3, 2,
	0, 9, 3, 2, 0, 2, 2, 2, 2, 2,
	2, 1, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 4, 6, 3, 4, 6, 3, 4, 6,
	3, 5, 7, 3, 4, 6, 3, 4, 6, 3,
	1, 3, 4, 6, 3, 1, 3, 3, 5, 3,
	1, 3, 2, 2, 2, 2, 1, 2, 2, 5,
	3, 3, 6, 6, 3, 1, 1, 2, 1, 1,
	1, 2, 1, 1, 2, 1, 2, 1, 2, 1,
	1, 1, 2, 1, 1, 2, 1, 1, 1, 1,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 1, 1, 2, 1, 2, 1, 3,
	5, 7, 2, 3, 0, 3, 5, 2, 3, 0,
	2, 3, 2, 3, 2, 6, 4, 7, 2, 6,
	4, 7, 2, 1, 1, 1, 3, 1, 1, 1,
	1, 1, 2, 1, 2, 2, 3, 2, 4, 3,
	2, 2, 1, 2, 1, 3, 3, 1, 2, 1,
	2, 1, 2, 1, 1, 3, 5, 4, 6, 4,
	3, 0, 1, 3, 2, 4, 2, 4, 1, 6,
	3, 1, 1, 5, 3, 2, 6, 3, 3, 4,
	4, 3, 1, 3, 2, 3, 3, 1, 3, 1,
	2, 1, 1, 2, 2, 3, 1, 1, 1, 1,
	1, 3, 2, 2, 1, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 2, 2, 1, 3,
	3, 3, 3, 2, 3, 3, 1, 1, 1, 1,
	1, 2, 2, 5, 7, 3, 3, 3, 4, 5,
	5, 5, 3, 4, 4, 3, 4, 4, 3, 4,
	4, 5, 3, 5, 5, 5, 7, 3, 3, 3,
	2, 3, 4, 3, 5, 3, 6, 5, 6, 3,
	5, 6, 3, 4, 3, 4, 3, 3, 4, 4,
	5, 0, 1, 1, 3, 2, 4, 3, 3, 5,
	3, 4, 3, 5, 3, 3, 4, 4, 5, 3,
	3, 1, 1, 0, 2, 5, 4, 6, 4, 6,
	4, 1, 0, 3, 4, 4, 5, 7, 5, 3,
	3, 2, 0, 4, 2, 3, 4, 2, 3, 3,
	3, 4, 3, 3, 4, 3, 3, 3, 3, 4,
	3, 1, 1, 1, 2, 3, 2, 3, 6, 6,
	7, 9, 7, 9, 3, 4, 10, 10, 3, 5,
	5, 5, 3, 5, 2, 0, 1, 1, 1, 1,
	3, 2, 2, 2, 2, 1, 2, 0, 1, 2,
	1, 2, 2, 1, 2, 1, 2, 2, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	6, 3, 6, 6, 3, 11, 14, 0, 2, 4,
	3, 0, 4, 5, 4, 3, 3, 1, 3, 10,
	13, 0, 2, 3, 1, 1, 0, 1, 2, 2,
	2, 2, 1, 1, 0, 1, 3, 1, 1, 1,
	1, 3, 3, 3, 0, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 8, 0, 1, 1, 0, 2,
	1, 0, 1, 0, 9, 9, 3, 1, 3, 7,
	1, 3, 11, 3, 2, 0, 3, 1, 2, 2,
	3, 2, 6, 2, 1, 1, 2, 8, 4, 2,
	5, 5, 5, 2, 1, 3, 10, 11, 7, 5,
	3, 1, 5, 9, 7, 11, 3, 3, 0, 2,
	4, 3, 3, 1, 5, 1, 3, 1, 2, 0,
	1, 2, 2, 0, 1, 3, 3, 2, 2, 1,
	1, 1, 4, 0, 6, 0, 3, 0, 2, 2,
	2, 0, 1, 1, 2, 2, 0, 3, 3, 2,
	1, 1, 2, 2, 5, 8, 4, 1, 0, 1,
	2, 2, 1, 2, 3, 3, 2, 2, 3, 2,
	2, 2, 2, 2, 3, 1, 4, 2, 2, 2,
	4, 7, 3, 4, 6, 3, 1, 1, 1, 8,
	10, 11, 5, 1, 1, 1, 1, 1, 1, 1,
	2, 2, 0, 3, 3, 0, 1, 8, 3, 6,
	6, 5, 3, 4, 1, 0, 1, 3, 16, 19,
	15, 18, 4, 2, 0, 1, 0, 1, 0, 1,
	3, 3, 2, 0, 1, 1, 0, 6, 6, 8,
	6, 8, 6, 8, 6, 8, 6, 8, 6, 8,
	6, 8, 1, 0, 2, 0, 2, 2, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 2, 2, 1, 2, 1, 2, 1, 2, 1,
	3, 2, 3, 2, 2, 2, 2, 2, 2, 1,
	1, 0, 2, 4, 2, 1, 0, 2, 1, 1,
	0, 1, 3, 1, 0, 1, 1, 1, 1, 2,
	3, 2, 2, 8, 11, 3, 3, 0, 3, 0,
	3, 0, 3, 0, 1, 0, 6, 7, 3, 6,
	3, 1, 3, 1, 1, 4, 2, 1, 3, 1,
	3, 8, 5, 3, 4, 3, 0, 2, 2, 0,
	10, 3, 2, 0, 1, 3, 1, 1, 3, 3,
	5, 1, 1, 3, 3, 1, 2, 4, 4, 2,
	3, 5, 5, 1, 3, 1, 0, 1, 2, 3,
	2, 4, 2, 3, 0, 2, 0, 2, 1, 2,
	1, 1, 1, 2, 1, 2, 1, 2, 1, 8,
	8, 8, 2, 4, 4, 4, 2, 2, 2, 2,
	3, 1, 3, 1, 2, 6, 7, 1, 0, 1,
	0, 1, 0, 1, 1, 0, 1, 5, 1, 0,
	1, 0, 3, 3, 5, 1, 3, 3, 4, 5,
	2, 2, 0, 2, 2, 1, 1, 1, 0, 1,
	0, 2, 2, 5, 4, 2, 3, 1, 1, 1,
	1, 1, 1, 1, 3, 0, 2, 0, 4, 2,
	5, 3, 2, 0, 1, 3, 3, 5, 1, 1,
	1, 1, 1, 3, 2, 4, 4, 0, 4, 4,
	3, 4, 1, 5, 3, 4, 5, 5, 1, 5,
	1, 3, 2, 0, 3, 0, 2, 3, 1, 3,
	2, 0, 3, 5, 6, 4, 6, 4, 3, 2,
	1, 0, 5, 1, 0, 2, 2, 2, 1, 1,
	0, 1, 1, 1, 0, 4, 2, 1, 2, 2,
	4, 1, 3, 1, 2, 3, 2, 2, 2, 1,
	0, 2, 5, 7, 2, 1, 2, 4, 3, 5,
	0, 1, 3, 5, 1, 2, 1, 1, 1, 1,
	1, 2, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 4, 4, 6, 6, 1, 1, 1,
	1, 1, 3, 5, 0, 1, 1, 1, 1, 1,
	2, 2, 2, 2, 2, 1, 3, 0, 5, 4,
	1, 2, 1, 4, 1, 1, 2, 1, 1, 1,
	1, 1, 0, 1, 2, 5, 1, 4, 2, 5,
	1, 4, 3, 3, 0, 1, 2, 4, 1, 1,
	1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
	3, 1, 0, 1, 4, 1, 3, 3, 3, 5,
	2, 2, 2, 2, 2, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 2,
	2, 3, 5, 4, 6, 3, 5, 4, 6, 4,
	6, 5, 7, 3, 3, 3, 3, 3, 4, 3,
	2, 4, 2, 3, 3, 4, 3, 4, 3, 4,
	5, 6, 6, 7, 6, 7, 6, 7, 3, 4,
	4, 1, 3, 1, 3, 3, 2, 2, 2, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 5, 6,
	6, 7, 1, 2, 1, 2, 1, 1, 1, 1,
	1, 6, 1, 1, 1, 1, 1, 1, 2, 1,
	5, 5, 6, 3, 1, 1, 1, 2, 2, 2,
	4, 3, 5, 6, 8, 6, 5, 4, 3, 2,
	2, 4, 1, 1, 1, 5, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 6, 6, 8,
	8, 6, 4, 6, 6, 6, 4, 1, 3, 3,
	3, 3, 3, 4, 3, 3, 4, 3, 3, 4,
	3, 3, 4, 3, 3, 3, 4, 3, 4, 3,
	4, 3, 4, 4, 3, 6, 5, 5, 5, 4,
	4, 3, 4, 3, 5, 0, 5, 0, 2, 0,
	1, 3, 3, 2, 2, 0, 6, 1, 0, 3,
	0, 3, 3, 3, 0, 1, 4, 2, 2, 2,
	2, 2, 3, 2, 2, 3, 0, 4, 1, 1,
	5, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 1, 2, 2, 3, 1, 2, 3,
	2, 3, 2, 3, 1, 0, 1, 3, 1, 3,
	3, 3, 1, 3, 3, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 4, 3, 1, 2, 3, 0,
	3, 3, 2, 2, 1, 2, 2, 3, 2, 1,
	1, 1, 5, 1, 2, 4, 2, 0, 1, 0,
	3, 5, 1, 0, 1, 2, 1, 0, 1, 3,
	3, 2, 1, 1, 1, 3, 1, 3, 3, 1,
	1, 1, 1, 5, 3, 1, 1, 3, 1, 1,
	1, 1, 2, 2, 1, 1, 2, 2, 1, 1,
	1, 3, 5, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 5, 7,
	1, 7, 5, 3, 1, 1, 1, 1, 1, 1,
	1, 3, 5, 1, 1, 1, 1, 1, 1, 1,
	0, 3, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1,
}
var sqlChk = [...]int{

	-1000, -1, -2, 513, -88, -85, -55, -53, -91, -92,
	-74, -93, -87, -111, -115, -100, -117, -159, -164, -165,
	-166, -3, -41, -43, -56, -73, -75, -86, -95, -94,
	-96, -101, -108, -104, -90, -47, -112, -116, -125, -160,
	-161, -162, 31, 30, 91, 75, 140, 115, 123, 178,
	327, 362, 373, 354, -120, -121, 390, -42, -54, -114,
	-113, 68, 116, 349, -4, -12, 28, 44, -44, -45,
	-46, 58, -61, -58, -68, -62, -541, 93, -493, -76,
	-79, -107, -545, 128, 147, 196, -97, -98, 316, -102,
	-103, 356, -105, -106, 358, 148, -49, -48, 142, -186,
	-188, -118, -119, -163, -126, -127, -128, -129, -130, -131,
	-132, -133, -134, -135, -136, -137, -138, -156, -139, -140,
	-141, -142, -147, -143, -144, -145, -146, -148, -149, -151,
	-152, -153, -154, -155, 394, -150, 448, 46, 408, 77,
	132, 366, 21, -5, -6, -7, -8, -9, -10, -11,
	-14, -13, -57, -59, -60, -63, -64, -65, -72, -66,
	-67, -492, -77, -78, -81, -83, -84, -80, -82, 355,
	-189, -187, 510, 462, -16, -21, -22, -17, -18, -20,
	-23, -19, -24, -28, -33, -34, -30, -31, -29, -32,
	-35, -36, -37, -38, -39, -40, -26, -27, -15, -25,
	480, 488, -192, -190, -191, -199, 382, 470, 424, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, -264, 2,
	-246, -251, -252, -253, -245, -217, -462, -465, 4, -459,
	-463, 153, 205, 281, 21, 22, 23, 24, 25, 26,
	28, 29, 40, 41, 43, 42, 44, 45, 46, 50,
	52, 55, 56, 57, 58, 59, 63, 68, 69, 74,
	75, 76, 77, 78, 79, 80, 86, 83, 84, 85,
	88, 90, 91, 92, 94, 96, 97, 105, 106, 107,
	108, 110, 115, 116, 119, 114, 118, 121, 122, 123,
	126, 127, 128, 130, 131, 133, 134, 135, 137, 138,
	140, 141, 142, 145, 143, 431, 144, 146, 147, 148,
	149, 159, 160, 161, 166, 168, 172, 173, 176, 177,
	179, 183, 185, 186, 187, 188, 189, 195, 196, 198,
	199, 200, 201, 206, 207, 211, 208, 217, 218, 222,
	223, 224, 226, 230, 231, 232, 233, 234, 235, 237,
	239, 238, 241, 244, 245, 248, 249, 250, 253, 254,
	255, 256, 258, 259, 262, 260, 263, 261, 265, 266,
	267, 264, 270, 268, 272, 273, 274, 279, 277, 275,
	276, 283, 286, 193, 288, 289, 292, 310, 296, 297,
	298, 301, 302, 305, 308, 309, 311, 312, 313, 314,
	315, 316, 317, 318, 320, 321, 325, 327, 328, 330,
	332, 333, 334, 335, 336, 337, 338, 341, 340, 342,
	349, 354, 351, 352, 353, 355, 356, 357, 358, 360,
	361, 362, 364, 365, 366, 367, 369, 371, 372, 375,
	376, 391, 392, 410, 373, 374, 377, 378, 379, 380,
	381, 385, 383, 384, 386, 387, 388, 390, 393, 394,
	396, 397, 398, 399, 400, 401, 404, 406, 407, 408,
	409, 411, 414, 415, 416, 417, 412, 423, 420, 421,
	425, 426, 427, 428, 429, 430, 432, 434, 442, 443,
	445, 448, 449, 450, 440, 452, 453, 456, 457, 458,
	461, 459, 460, 462, 464, 467, 468, 469, 475, 474,
	481, 482, 484, 485, 486, 35, 47, 48, 51, 53,
	64, 65, 66, 70, 111, 112, 139, 150, 151, 162,
	174, 175, 180, 182, 190, 191, 192, 212, 213, 215,
	220, 242, 285, 287, 303, 307, 322, 323, 324, 326,
	339, 368, 402, 413, 418, 435, 436, 437, 438, 444,
	446, 470, 471, 472, 476, 483, -264, 2, -246, 294,
	-239, 2, -217, -217, 327, 27, 2, 27, 321, 384,
	426, 428, 2, -518, -299, 2, 27, -220, -217, 93,
	178, 382, -239, 2, -518, -299, 24, 2, -217, 2,
	-221, 2, 373, -217, 513, 88, 250, 69, 368, 387,
	-123, 443, -122, 435, 377, -124, -450, 2, 270, -217,
	513, 513, 513, 27, -229, -217, 424, 205, 107, 421,
	513, 2, 424, 313, 474, 383, 107, 336, 205, 450,
	377, -527, 364, 181, 463, -516, 2, -512, 4, -463,
	-459, -258, -257, 424, 429, 107, -253, -245, 503, -252,
	513, 513, 513, 2, 223, 224, 335, 334, 387, 388,
	513, 513, 513, 375, 2, 26, 61, 87, 90, 113,
	149, 169, 172, 299, -542, 259, 310, 333, 386, 423,
	432, 445, -526, 409, 63, 377, -525, -527, 450, 126,
	-346, 107, 250, 177, 457, 428, 426, 455, 119, 211,
	460, 459, 513, 513, 26, 61, 72, 90, 126, 149,
	169, 172, -544, 310, 333, 371, 386, 423, 432, 445,
	2, 474, 383, 424, 205, 107, 450, 377, -527, 375,
	376, 331, -88, 2, 510, 31, 30, 390, -182, 424,
	216, 2, -217, 513, 513, 2, 223, 224, 375, 376,
	513, 513, 170, -512, 2, 513, 513, 2, 223, 224,
	375, 376, 216, 2, 63, 379, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 2, -157, 387, 409,
	187, 44, 69, 27, 332, 74, 314, 108, 134, 179,
	205, 206, 231, 87, 88, -348, 43, 224, 223, 376,
	-533, 375, -400, 425, 378, 384, 420, 235, 373, 443,
	93, 464, 365, 486, 336, 337, 143, 4, 107, 270,
	389, 435, 250, 372, 317, 79, 513, -551, 2, 424,
	-553, 2, 443, 443, 2, -553, 2, -553, 2, -553,
	2, -554, 443, 483, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, -187, -189, -188, 513, 513, 513, 513, 513, 513,
	513, -157, 387, 2, 69, 27, -292, -294, 454, 214,
	136, 300, -186, -188, 2, -492, -448, 2, -374, -466,
	-376, 501, 502, 494, 422, 62, 280, 487, -388, 113,
	455, 294, -465, -377, -390, 139, 368, -314, 8, 9,
	5, 6, 7, -226, -378, -384, 447, 152, 284, -261,
	514, 10, 510, -489, -188, -389, 36, 182, 60, -452,
	-260, -227, -424, 215, -259, -245, -486, -487, 4, -459,
	-460, -453, -427, -435, -431, -432, -438, -217, -462, 72,
	99, 100, 98, 103, 102, 252, 251, 104, 101, 389,
	463, 61, 35, 190, 191, 220, 285, 192, 70, -488,
	127, -461, 212, 213, 402, 48, 339, 162, 112, 111,
	287, 53, 51, 471, -436, 109, 435, 436, 437, 438,
	174, 175, 150, 151, 307, 324, 418, 444, 446, 180,
	242, 95, 171, 210, 194, 219, 221, 225, 243, 246,
	271, 278, 282, 304, 306, 363, 395, -557, 472, 413,
	64, 65, -494, 340, -495, -239, -494, 513, 513, 515,
	513, -286, -287, -288, 2, 27, 124, 510, 2, -404,
	2, -405, -409, -188, 236, -408, 510, -406, 508, -246,
	295, -490, 369, -486, -487, -226, -245, -260, 4, -459,
	-461, 512, -289, 510, 107, 424, 73, 205, -341, 510,
	-217, 27, 294, 439, 515, -386, 510, 294, 170, 297,
	-217, 2, 2, 391, 2, 510, -123, 66, 443, 42,
	387, -361, 2, -362, -214, -215, -216, -414, 222, 330,
	338, 489, 486, -448, -535, 170, 493, 439, -448, -315,
	512, 2, 2, 2, 2, 2, -409, 190, -246, 2,
	-243, -451, 4, -459, -463, -460, -464, -462, 27, 30,
	31, 32, 34, 36, 37, 38, 39, 54, 60, 61,
	67, 71, 73, 82, 87, 93, 98, 99, 101, 100,
	102, 103, 104, 113, 117, 120, 124, 125, 129, 132,
	136, 152, 154, 167, 169, 170, 178, 181, 184, 197,
	209, 214, 216, 236, 240, 247, 251, 252, 280, 284,
	290, 294, 295, 299, 300, 319, 329, 343, 359, 382,
	389, 405, 419, 424, 433, 439, 441, 447, 454, 455,
	463, 465, 473, 477, 478, 479, 480, -465, 72, 2,
	-409, 190, 2, -248, 190, -409, -251, 2, -230, -217,
	2, -242, -451, 2, -265, 190, -246, -247, -251, -249,
	2, -251, -255, 2, -217, -457, 190, 2, -455, 10,
	-454, 5, 4, -459, -463, -460, 216, 439, 515, -305,
	-257, -258, -447, 8, -298, -217, 512, -374, 2, -112,
	-99, 2, 167, -374, 190, 2, -112, 190, 2, -374,
	190, 2, -112, 190, 2, -530, 2, -457, 2, 2,
	445, 2, 90, 190, -217, 424, 106, 2, 353, -543,
	371, 449, 474, 2, 2, 2, 2, 2, 2, 424,
	-235, 2, -217, 167, -255, 190, 2, 383, -552, 340,
	-457, 190, 2, -249, 2, -249, 205, 218, -230, 190,
	2, 428, 426, 428, 426, 170, 2, 216, 2, 216,
	2, -410, 2, -411, -405, -246, 508, 2, 2, 2,
	2, 2, 190, -217, 424, 106, 2, 234, 2, 2,
	2, 2, 2, 2, 2, -307, 190, 2, -246, -307,
	190, 2, -307, 190, 2, -347, 2, 82, -230, 190,
	2, -254, 190, 2, -249, -256, 190, 2, -255, -458,
	190, 2, -457, -374, 2, -112, 2, -418, 2, -417,
	-454, 470, -88, 510, -88, 510, 387, 510, -457, -246,
	-246, -374, 2, -112, -99, 2, -374, 2, -112, 2,
	-110, -109, -457, 510, 170, -374, 2, -112, -99, 2,
	-374, 2, -112, 2, -182, 167, 2, 107, 424, -157,
	2, 167, 465, 2, 8, 2, -457, 378, 337, 159,
	2, 391, 2, 392, 69, -348, 486, 69, 170, 2,
	170, 2, -331, 2, 480, 2, -515, 2, 294, 170,
	2, 170, 2, 170, 2, 170, 2, 170, 2, 334,
	388, 224, 2, -112, 477, -99, -374, 477, 2, -534,
	167, 376, -374, 2, 442, 233, 144, 170, -331, 2,
	170, 2, 170, 2, 5, 2, 335, 410, 2, 222,
	330, 410, 2, -246, -546, 2, 424, 474, 383, 2,
	2, 83, 84, 170, 2, 170, 2, 170, 486, 2,
	-324, -409, -360, -361, -360, 439, -292, -294, -157, 391,
	2, -193, -322, -195, 167, -350, -351, -196, 247, 154,
	290, -197, -330, 27, 124, -330, -330, 56, 511, 511,
	11, 12, 71, 40, 501, 502, 503, 504, 165, 505,
	506, 499, 500, 498, 491, 492, 496, 228, 229, 89,
	495, 493, 81, 257, 370, 155, 156, 157, 158, 350,
	203, 33, 204, 14, 15, 16, 32, 299, 246, 487,
	194, 395, 494, 17, 18, 19, 219, 221, 282, 47,
	197, -225, -267, -374, -374, -374, -374, -374, -374, -374,
	306, 510, -320, -369, 508, -188, 510, 510, 510, -447,
	-188, -374, -388, 511, -312, 510, -188, -388, -383, 510,
	368, 508, 510, -391, -374, 5, 5, 5, 510, 512,
	-497, 481, 167, 510, 510, 510, 510, 510, 510, 510,
	510, 510, 510, 510, 510, 510, 510, 510, 326, -429,
	510, -428, 510, -428, -428, 475, -426, 510, 488, 482,
	510, -426, 510, 510, 510, 510, 510, 510, 510, 510,
	510, 510, 510, 510, 510, 475, 515, -494, -289, 510,
	-316, -412, -374, 503, -316, -316, 294, -309, -374, 95,
	-334, 225, 271, 171, 243, 363, 210, -371, 514, -371,
	-399, 488, -188, -406, -245, -188, -408, 510, -404, -399,
	-89, -447, -73, -86, -94, -112, -125, -161, -162, 503,
	-246, 510, 170, 510, 512, -451, 170, -298, -230, -246,
	-259, -260, -265, 123, -309, -512, -298, -220, 37, -385,
	-421, -422, -468, 514, -467, -424, -434, -430, -433, 322,
	323, -453, 51, 471, -436, 215, 4, -459, -461, 212,
	213, 402, 48, 339, 162, 112, 111, 287, 53, 435,
	436, 437, 438, 174, 175, 472, 413, 64, 65, -512,
	-298, 167, -450, -309, 37, -361, 2, 113, -455, 42,
	-555, 515, 245, -269, 256, 279, 186, 295, 484, 288,
	-456, 5, 4, -384, -396, 113, 250, 215, -441, -443,
	8, -442, 9, -444, 501, 502, -449, -448, 97, 512,
	-451, -204, 351, 390, -203, 23, 28, 128, 468, 145,
	-279, 207, 313, 139, 406, 458, -522, -523, 374, 430,
	431, 85, 288, 390, 351, 139, -327, -329, 37, 105,
	274, 308, 57, 200, 261, 262, 408, 476, 139, 390,
	351, -523, 351, -523, -206, 406, 458, -522, -523, 374,
	351, -205, -279, 139, 514, 23, 351, 390, 309, -539,
	-540, 128, 28, 351, 309, -519, -491, 480, 139, -109,
	237, -109, -305, 515, 515, -451, 503, 376, 375, 139,
	139, 139, 139, 167, 2, 2, 280, 2, 2, 2,
	172, -525, -544, 2, 2, 2, -246, 190, -291, 294,
	-514, -306, 424, -246, 280, -248, 190, 2, -251, 474,
	-519, 280, 37, 510, 2, -347, 2, 205, -491, 280,
	-410, -262, -246, -405, -262, 390, -239, 37, -371, -371,
	139, 2, 2, 2, -217, -207, 515, 59, 357, 139,
	-207, 139, -207, 139, -266, 190, -265, -207, 139, -207,
	515, 139, -207, 515, 139, 515, 139, 511, 515, -418,
	-418, -457, -170, 480, 170, 93, 510, 510, -182, -415,
	515, -414, -458, -110, -457, -457, -514, -230, 2, -246,
	2, 424, 226, -170, -457, -457, -457, -450, 27, 392,
	2, 334, 388, 84, 392, 2, -246, 424, 107, 205,
	75, -517, 167, -513, 364, -512, -246, 107, -246, 107,
	-246, 107, -246, -246, 2, 2, 2, 2, 80, 80,
	2, 44, -534, 167, 2, 442, 2, 442, 2, -217,
	-217, -217, 409, 245, -246, 167, 424, 205, 424, 205,
	107, 424, -207, 515, -221, -193, -322, -450, -323, -322,
	-194, -193, -196, 167, 338, 459, 274, 393, 230, -351,
	-350, 27, -374, -355, 161, 273, -374, -353, -376, 501,
	502, -442, -444, -308, 288, -187, -187, -187, -295, -401,
	-374, 329, 205, -423, -421, -421, -244, -451, 435, -374,
	-374, -374, -374, -374, -374, -374, -374, -374, -374, -374,
	-374, -374, -374, -374, -374, -374, -374, -374, -374, -374,
	-374, -374, -374, -374, -374, -374, -374, -374, -374, -374,
	-374, -374, -374, -374, 246, 194, 395, 47, 197, -374,
	439, -374, -374, -374, -374, 268, 280, 284, 447, 152,
	456, 124, 288, -558, 419, 39, -381, -188, -313, 510,
	-395, 34, 405, 27, -388, 510, 2, -369, -374, -370,
	-310, -309, -309, 511, 473, 27, 124, 503, 2, 511,
	515, 37, 511, -374, -310, -387, -383, -309, -394, -393,
	477, -342, -343, 485, 264, 110, 188, 263, -344, 381,
	-445, 8, -451, 503, -498, 160, 181, 510, 511, 2,
	511, 2, 511, -374, 2, 511, -374, 2, 511, -374,
	2, 511, -374, 2, 511, 2, -374, -374, -374, -374,
	-374, -374, -374, -309, 8, -445, -445, 435, 435, -445,
	-445, -445, -437, 322, 248, 323, 176, 267, 265, 266,
	175, -437, -336, 2, -439, -309, 4, 485, 264, 110,
	188, 263, 381, 5, -336, 2, -337, 2, -374, -309,
	-338, -375, -376, 501, 502, 494, -388, -339, 2, -374,
	-310, -374, 54, 240, 441, -340, -374, 170, -309, -309,
	2, -309, 2, -495, 37, -309, -301, 515, 170, 37,
	4, -301, -301, 510, 511, 515, -335, 185, 260, 255,
	-335, -404, -334, 225, -332, 304, -332, -332, -399, -231,
	508, 516, -451, -399, -398, -397, 37, -239, 301, -399,
	-399, 512, 511, -398, 509, -510, 510, 513, 513, 513,
	513, 513, -246, 510, -309, -451, 512, 411, 511, 219,
	219, 219, 219, 369, 511, 439, 480, -88, 296, 511,
	515, -300, 36, 508, 512, -445, 2, 2, -440, 475,
	510, 510, -343, 510, 170, -299, -535, 511, 443, -362,
	-268, 338, 404, 352, 385, 421, 8, 9, 8, 9,
	515, -451, 515, -536, 87, 439, 73, 377, -365, 190,
	73, -469, -233, 87, -470, -217, 67, 455, 329, 169,
	137, -536, 87, 329, -536, 87, 87, 390, 409, 56,
	-409, 40, 40, 27, -112, 241, 170, 486, 424, 205,
	377, 439, -409, -329, -421, 105, 261, 262, 56, -446,
	-441, 501, 502, -446, 56, -446, -446, -446, 480, -248,
	-409, 377, 439, 439, 515, 40, 40, 27, -112, 241,
	170, 439, -265, -231, 469, 41, 469, 439, 41, 377,
	439, 515, 41, 41, 439, 439, -520, -222, 94, 275,
	254, 276, -223, -224, 315, 467, -457, -415, 197, -415,
	-257, -217, 512, -112, -374, -374, -112, -374, -112, 44,
	139, 2, -552, 234, 510, -272, 280, 170, -298, -416,
	216, 515, -306, 139, -328, -327, 280, -250, 190, 2,
	-246, 139, 133, 510, 336, 2, -232, 190, -218, -217,
	-347, -210, 427, 139, -326, 465, -356, -112, 510, 113,
	37, -356, -317, -318, -413, -319, -233, 510, -239, -217,
	2, -246, -307, -307, -307, -207, 515, 139, -230, -249,
	-254, -255, -256, -457, -458, -88, -417, 511, 511, 511,
	-169, 298, -168, -217, 5, -182, 465, -271, -366, -365,
	-473, -474, -469, 246, 205, 455, 218, 153, -290, -234,
	-233, 106, -176, 480, -109, 511, -415, 197, -170, -170,
	-415, -415, -246, 167, -170, -170, -170, 2, 2, -331,
	-246, -230, -265, -246, -298, -298, -331, -230, -331, -230,
	-331, -230, -112, -374, 2, 387, 167, 167, 512, -331,
	336, 107, 424, 313, 205, -246, -265, -246, -265, -230,
	-246, -409, -323, -194, 295, 230, 393, -353, -354, -376,
	368, 369, -354, 368, 369, 8, 9, 8, 9, -198,
	397, 283, -307, 515, -201, 38, 120, 230, -246, 486,
	135, -374, -374, 439, -558, 419, -381, 135, -374, 268,
	284, 447, 152, 456, 124, 288, 170, 510, -375, -375,
	511, -311, -374, -374, 509, 518, 511, -294, 515, -292,
	-374, -309, -309, 511, 512, -309, -298, 509, 509, 515,
	511, -392, -393, 129, -374, 439, 439, 439, 439, 510,
	511, 512, -503, 305, 510, 510, -374, 511, 511, 511,
	511, 37, 515, 515, 515, 511, 515, 515, 515, 511,
	511, 511, 515, 511, 486, 486, 511, 511, 511, 511,
	515, 511, 515, 511, 170, 511, 511, -345, 319, 511,
	11, 12, 501, 502, 503, 504, 165, 505, 506, 499,
	500, 498, 491, 492, 493, 81, 257, 370, 14, 15,
	16, 219, 197, -375, -375, -375, 511, -379, -380, 170,
	167, 37, -340, -340, -340, 511, 170, -309, 511, 511,
	510, -496, 259, 280, 511, -368, -367, 478, -412, -302,
	2, -404, -241, -451, -368, -368, -309, -374, 225, 225,
	-333, 465, 294, -335, -404, -398, -447, -373, -372, 168,
	38, 120, 277, 193, -398, -239, -289, -398, -398, -451,
	-399, -399, -397, 511, -511, -447, 511, -303, -407, -490,
	-294, 512, -451, -179, -491, -158, 5, 284, -158, -158,
	-158, -298, 24, 320, -421, 508, 509, 8, -451, 510,
	-445, -445, -445, -298, 170, -448, -361, 453, 78, 338,
	435, -448, -203, 351, -233, -233, -246, -255, 280, -365,
	190, -209, 280, -421, -240, -217, 510, 510, 230, 230,
	465, -233, -240, 230, 190, -233, 190, -240, -240, -521,
	338, 289, -374, 249, 336, 281, -204, 351, 390, -112,
	-112, -112, 510, -535, 465, 123, -246, -265, -246, -255,
	-250, 390, 351, 278, -259, -446, -446, -327, 390, 351,
	-255, -248, -230, -205, -112, -112, -112, 510, -231, -206,
	351, 5, 190, -233, 5, -217, -233, -255, -538, -455,
	104, 389, -540, 23, -233, 190, -233, -255, -538, -222,
	-457, 284, 461, -519, -173, 480, -109, -167, 201, 503,
	-516, -217, 474, -217, -270, -273, -271, -233, -185, 482,
	480, 139, -263, -246, 508, -170, -457, -246, -255, 139,
	-289, 280, -457, 510, 2, 2, 294, 280, -232, 190,
	-211, 130, -556, 493, -230, -368, -302, -325, -359, 359,
	294, -290, 470, -239, -325, -304, 515, 170, 493, 512,
	-290, 2, -207, -207, -207, -265, -266, -207, -207, -207,
	-88, -88, -170, 515, 510, 493, 493, 510, -457, -457,
	511, 515, -246, -232, 205, 205, -238, -218, 511, 515,
	512, 510, -178, 298, -177, 131, 217, 398, 399, 400,
	401, -176, -110, 170, -50, 480, 424, 514, -331, -331,
	-331, 387, 387, -217, -242, -230, -246, -243, -265, 167,
	167, 459, -354, 295, 253, -401, -202, 286, -246, 514,
	-374, -374, 135, 135, -374, -375, -375, -374, 135, 170,
	510, -374, -385, 32, 32, 511, 515, -370, -374, 511,
	473, -294, -294, 511, 503, -451, 514, 511, -383, 132,
	-374, 433, 264, 188, 263, -344, 263, -344, -344, -445,
	5, -451, 503, -504, -236, 510, -217, 478, -293, 300,
	511, -423, -421, -374, -374, -374, -374, -374, -445, -426,
	-426, -441, -441, -374, -379, -374, -423, -421, -375, -375,
	-375, -375, -375, -375, -375, -375, -375, -375, -375, -375,
	-375, -375, -375, -375, -375, -375, -375, 124, 280, 288,
	-375, -380, -379, -374, -374, -421, 511, 511, 511, -309,
	-88, 510, 259, -321, 181, -374, -415, 515, -321, -321,
	511, -404, -404, 510, -374, 225, 509, 515, 517, 493,
	-289, 512, -397, -398, 509, 511, 515, 511, 515, -358,
	37, 511, -451, -181, -180, 121, 50, 297, 5, 8,
	508, 509, 512, -445, 511, 511, 511, -298, -374, 439,
	439, 139, 280, 467, -475, -470, 137, -374, -296, -402,
	-374, 510, 510, 2, -200, 128, 390, -537, 2, 465,
	139, -207, 139, -207, 484, 510, 510, 439, 377, 480,
	-309, -374, -171, 113, -450, -523, 514, -523, 514, 377,
	439, 377, 439, 480, -309, 439, -425, 45, 25, 280,
	-249, 439, 439, -207, 139, 450, 390, -457, 284, -175,
	298, -174, 131, 361, 122, 232, -415, -173, 170, 439,
	2, -250, 2, 511, 511, 515, -476, 37, 292, 510,
	292, -246, -69, 480, -414, -447, -248, 37, 139, -519,
	-419, -420, 5, -246, 139, 294, 280, -212, 239, -556,
	-455, -491, -294, -325, -316, 281, 86, 511, -368, -318,
	-302, -374, 2, 511, -207, -168, -169, -457, -457, -457,
	-170, -182, -182, -366, -274, 510, -232, -218, 510, -182,
	-234, 2, -458, 515, 510, 493, 493, -415, -112, 298,
	-246, 503, -331, -281, -280, 313, 288, -281, 368, 368,
	295, 161, 235, -201, -231, -374, -374, 135, 32, 32,
	-374, -374, -385, 511, -374, -374, -309, 509, 5, -374,
	511, 511, 8, -374, 511, 512, -505, -217, -374, 511,
	56, 511, 511, 515, 515, 511, 511, 511, 511, 511,
	511, 511, -380, 170, 124, 288, 510, 511, 511, -88,
	-382, 184, 56, -404, -382, -382, -333, -298, -404, -372,
	-231, 508, -451, -447, -407, 510, 512, -180, 493, 509,
	2, 508, -451, 511, -233, -233, -365, 139, -477, 87,
	-479, 71, 153, 93, 280, 284, 455, 329, 67, 113,
	343, -548, 37, 490, 511, 511, 515, -201, -296, -298,
	280, 416, 113, 280, 113, 106, 450, 74, -233, -240,
	-298, -298, -246, -255, 146, 511, 515, 493, 2, 503,
	503, -255, -250, -255, -248, 146, 511, -231, 5, 5,
	139, -228, 71, 5, -233, -233, -249, 106, 515, 510,
	493, 493, -173, -458, -109, -289, -277, 208, -233, -474,
	-471, -472, 329, -478, -480, 153, 329, -112, -184, -183,
	-217, 5, 2, 510, -272, 298, 509, -328, -112, -250,
	511, 515, -349, 465, -231, -246, 139, -213, 238, -556,
	-455, -210, -352, -350, -357, 510, 294, -112, -294, 493,
	511, 511, 106, 106, 199, 138, -296, 510, 510, -298,
	106, 511, -177, -178, -457, -457, -176, -51, -52, 205,
	87, 318, -243, 424, 205, 510, 510, -201, -374, -374,
	-374, 511, -294, -451, 503, -499, 313, 511, -401, -374,
	-374, -375, 170, 510, -385, 511, -500, 479, -374, -309,
	-500, -500, 511, -447, 2, -457, 508, 2, -365, -240,
	-244, -237, -217, 153, 190, 284, 230, 510, -375, -246,
	510, 2, 29, -549, 117, 209, -364, -550, 92, 417,
	198, -402, -202, 511, 511, 284, 284, -374, -421, 510,
	-207, -207, 511, 511, -374, 439, -450, 91, -448, 2,
	-523, -374, 439, 5, -207, -244, -207, -207, -228, 450,
	-174, -175, -457, -109, -173, 37, -278, -279, 197, -476,
	230, -237, 230, -547, 480, 511, 515, 493, 493, -270,
	-185, -70, -71, 440, -414, -289, 5, 510, -217, 294,
	510, -231, -556, -455, -211, -325, 125, -298, 87, -352,
	-381, -170, 510, 510, -275, 76, 88, 114, 189, 173,
	206, 409, 414, 27, -275, 511, -296, -296, 511, 510,
	-170, 511, 515, 27, 510, 27, 510, -246, -265, -309,
	-309, 511, -294, 56, 515, 511, 511, -375, -385, 511,
	-501, -502, -236, 509, 2, -479, -237, 280, 465, -374,
	-219, 510, -374, 37, 209, 118, 195, -277, 510, -363,
	465, 343, -228, -296, 510, 510, 510, 493, 170, 510,
	-425, -207, -249, 511, -529, 341, -112, -185, 311, 510,
	-276, 294, 106, 274, -183, -377, -377, 511, 37, -71,
	9, 37, -296, -246, -296, 294, -455, -212, 459, 281,
	511, -240, -325, -458, -458, -363, 511, 511, -458, -52,
	-298, -298, 511, 511, -506, 336, 369, 183, -309, -295,
	511, 515, 37, 139, 185, 511, -481, 258, -217, 511,
	118, 195, -278, -298, -277, 185, -246, -524, 465, 511,
	-283, -282, -280, -285, -284, -280, -309, -448, 91, 311,
	-309, -228, -532, 171, -531, 5, 10, -276, -246, -297,
	-403, -233, 77, 106, -277, -112, -112, 511, -349, 511,
	-246, -213, 390, -367, 511, 511, -364, -363, -368, 511,
	511, 511, 511, -507, -508, 47, 452, 97, -374, -507,
	-507, -502, -504, 153, 480, -482, -485, -484, 294, 396,
	171, 312, 511, 416, 476, -549, 511, 480, -289, -374,
	-363, 511, 515, 470, 511, 515, 470, 511, 170, 511,
	-207, -172, 480, 44, 510, 511, 515, 328, 119, 128,
	-278, -547, -363, 510, -364, 510, -317, -170, -170, -277,
	-364, -170, -509, 137, -508, 325, 166, 368, 325, 166,
	-509, -509, -237, 52, -484, 294, -485, 294, 459, 119,
	-368, 52, -481, -277, -282, 197, -284, 170, 311, 142,
	-531, 29, -298, -403, 369, 369, 2, -185, -276, -364,
	-296, -277, -296, -368, -278, -277, 97, 181, 434, 274,
	32, 493, -483, 274, 357, 59, 390, -483, 493, -482,
	510, 510, 375, 511, 2, -276, -277, 511, -278, 511,
	-368, -278, 368, 302, -508, -374, 22, 284, 113, -374,
	-549, -309, -309, 298, -208, 59, 357, -278, -363, -368,
	-364, -368, 511, 511, -169, 510, -368, -364, -277, -278,
	439, -169, -277, -278, 510, 511, -278, -368, -309, -368,
	511, -278,
}
var sqlDef = [...]int{

	-2, -2, 1, 2, 3, 4, 6, 7, 8, 10,
	12, 14, 16, 18, 20, 22, 24, 25, 26, 27,
	28, 465, 466, 468, 469, 470, 472, 473, 475, 477,
	479, 480, 481, 483, 484, 486, 487, 488, 489, 490,
	492, 494, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 552, 554, 0, 1143, 1145, 1147,
	1149, 0, 688, 0, 30, 31, 0, -2, 269, 271,
	273, 0, 299, 301, 302, 304, 306, -2, 0, 401,
	402, 404, 406, -2, -2, 0, 848, 850, 0, 541,
	543, 0, 853, 855, 0, 0, 563, 564, 0, 1231,
	-2, 557, 559, 561, 626, 628, 630, 632, 634, 636,
	638, 640, 641, 643, 645, 647, 649, 651, 653, 655,
	657, 658, 660, 662, 664, 666, 668, 670, 672, 674,
	676, 678, 680, 682, -2, 684, -2, -2, 0, -2,
	-2, -2, 1161, 34, 36, 38, 40, 42, 44, 46,
	48, 50, 352, 353, 355, 357, 359, 361, 364, 366,
	368, 1289, 408, 410, 412, 414, 416, 418, 420, 0,
	-2, 1301, 0, 0, 52, 53, 54, 55, 56, 57,
	58, 59, 60, 78, 79, 80, 81, 82, 83, 84,
	85, 64, 65, 67, 68, 69, 73, 74, 76, 62,
	0, 0, 1262, 1264, 1266, 1268, -2, 0, 0, 5,
	9, 11, 13, 15, 17, 19, 21, 23, 467, 471,
	474, 476, 478, 482, 485, 491, 493, 495, 452, 453,
	456, 1921, 1938, 1939, 1940, 1943, 1944, 1945, 1946, 1947,
	1948, 2321, 2402, 2403, 1970, 1971, 1972, 1973, 1974, 1975,
	1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985,
	1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995,
	1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005,
	2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015,
	2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025,
	2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035,
	2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045,
	2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055,
	2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065,
	2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075,
	2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084, 2085,
	2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095,
	2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104, 2105,
	2106, 2107, 2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115,
	2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2125,
	2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135,
	2136, 2137, 2138, 2139, 2140, 2141, 2142, 2143, 2144, 2145,
	2146, 2147, 2148, 2149, 2150, 2151, 2152, 2153, 2154, 2155,
	2156, 2157, 2158, 2159, 2160, 2161, 2162, 2163, 2164, 2165,
	2166, 2167, 2168, 2169, 2170, 2171, 2172, 2173, 2174, 2175,
	2176, 2177, 2178, 2179, 2180, 2181, 2182, 2183, 2184, 2185,
	2186, 2187, 2188, 2189, 2190, 2191, 2192, 2193, 2194, 2195,
	2196, 2197, 2198, 2199, 2200, 2201, 2202, 2203, 2204, 2205,
	2206, 2207, 2208, 2209, 2210, 2211, 2212, 2213, 2214, 2215,
	2216, 2217, 2218, 2219, 2220, 2221, 2222, 2223, 2224, 2225,
	2226, 2227, 2228, 2229, 2230, 2231, 2232, 2233, 2234, 2235,
	2236, 2237, 2238, 2239, 2240, 2241, 2242, 2243, 2244, 2245,
	2246, 2247, 2248, 2249, 2250, 2251, 2252, 2253, 2254, 2255,
	2256, 2257, 2258, 2259, 2260, 2261, 2262, 2263, 2264, 2265,
	2266, 2267, 2268, 2269, 2270, 2271, 2272, 2273, 2274, 2275,
	2276, 2277, 2278, 2279, 2280, 2281, 2282, 2283, 2284, 2285,
	2286, 2287, 2288, 2289, 2290, 2291, 2292, 2293, 2294, 2295,
	2296, 2297, 2298, 2299, 2300, 2301, 454, 455, 1007, 0,
	519, 517, 1914, 520, 2143, 522, 524, 395, 396, 397,
	398, 399, 400, 0, 534, 528, 533, 535, 537, 538,
	539, 540, 514, 512, 0, 534, 1973, 532, 1141, 1142,
	1126, 1127, 2180, 1168, 553, -2, -2, -2, 2287, -2,
	585, -2, 592, 2291, 2182, 597, 0, 599, -2, 602,
	1144, 1146, 1148, 686, 687, 1924, 0, 0, 0, 0,
	32, 33, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1056, 1057, 1058, 0, 189, 191, -2, -2,
	-2, -2, 0, 0, 2220, 2015, 1882, 1940, 1885, 1880,
	270, 272, 274, 275, 0, 0, 0, 0, 0, 0,
	300, 303, 305, -2, 307, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 331, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, -2, 0, 0, 0,
	0, 0, 0, 0, 902, 894, 895, 1097, 0, 0,
	0, 0, 403, 405, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	407, 0, 0, 0, -2, 0, 0, 0, 0, 0,
	0, 332, 457, 458, 0, 1290, 1290, 0, 0, 0,
	0, 244, 235, 849, 851, 852, 0, 0, 0, 0,
	542, 544, 0, 0, 219, 854, 856, 857, 0, 0,
	0, 0, 0, 246, 0, 0, 558, 560, 562, 627,
	629, 631, 633, 635, 637, 639, 642, 644, 646, 648,
	650, 652, 654, 656, 659, 661, 663, 665, 667, 669,
	671, 673, 675, 677, 679, 681, 683, 693, 0, 0,
	0, 0, -2, -2, 0, 0, 0, -2, -2, -2,
	0, 0, 0, 0, 0, 0, 0, -2, 0, 773,
	0, 0, 0, -2, -2, -2, 0, 0, 0, 0,
	0, -2, -2, 0, 0, 0, 0, 696, 698, 699,
	700, 0, 753, 771, 772, 781, 685, 0, 1047, 1291,
	1170, 1151, 1165, 1170, 1153, 1154, 1155, 1156, 1157, 1162,
	1164, 1158, 1159, 1160, 35, 37, 39, 41, 43, 45,
	47, 49, 51, 354, 356, 358, 360, 362, 365, 367,
	369, -2, 1260, 1261, 409, 411, 413, 415, 417, 419,
	421, 545, 0, 547, 0, 697, -2, 0, 1295, 1295,
	1295, 0, 0, 1261, 1259, 0, 550, 551, 606, 607,
	1525, 0, 0, 0, 0, 0, 0, 0, 1779, 1611,
	0, 608, -2, 1642, 1644, 2262, 2287, 1778, 1646, 1647,
	1648, 1649, 1650, 0, 1652, 1653, 1654, 1655, 1656, 1657,
	0, 1659, 0, 1664, 1665, 1666, 0, 2269, 1859, 1934,
	-2, 0, 0, 2275, 1930, 0, 1745, 1682, -2, -2,
	1957, 1936, 1457, 1458, 1459, 1460, 1461, -2, -2, 2304,
	1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695,
	1696, 0, 2251, 2270, 2271, 2276, 2278, 2272, 2259, 1707,
	2027, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, 1484, 1493, -2, -2, -2, -2,
	-2, -2, 2263, 2264, 2281, 2284, 2290, 2295, 2296, 2268,
	2277, 2305, 2306, 2307, 2308, 2309, 2310, 2311, 2312, 2313,
	2314, 2315, 2316, 2317, 2318, 2319, 2320, 1485, -2, -2,
	-2, -2, 1278, 2154, 1281, 1007, 1279, 1263, 1265, 0,
	1267, 0, 0, 0, 1272, 1298, 1296, 0, 1339, 1276,
	1277, 1357, 1357, 1381, 0, 1362, 0, 1381, 1290, 1407,
	0, 1368, 2172, 1683, 1684, 0, 1940, 1935, -2, -2,
	2302, 0, 0, 0, 0, 0, 0, 0, 515, 0,
	521, 523, 0, 0, 0, 0, 0, 0, 0, 0,
	1167, 555, 556, 0, 580, 0, 584, 2258, -2, 1981,
	2191, -2, 588, 1171, 1175, 1176, 1177, 1178, 0, 0,
	0, 0, 0, 594, 0, 0, 581, 582, 600, 603,
	0, 689, 690, 691, 692, 61, 0, 2270, 1407, 63,
	0, 1904, 1965, 1966, 1967, 1968, 1969, 2303, 2322, 2323,
	2324, 2325, 2326, 2327, 2328, 2329, 2330, 2331, 2332, 2333,
	2334, 2335, 2336, 2337, 2338, 2339, 2340, 2341, 2342, 2343,
	2344, 2345, 2346, 2347, 2348, 2349, 2350, 2351, 2352, 2353,
	2354, 2355, 2356, 2357, 2358, 2359, 2360, 2361, 2362, 2363,
	2364, 2365, 2366, 2367, 2368, 2369, 2370, 2371, 2372, 2373,
	2374, 2375, 2376, 2377, 2378, 2379, 2380, 2381, 2382, 2383,
	2384, 2385, 2386, 2387, 2388, 2389, 2390, 2391, 2392, 2393,
	2394, 2395, 2396, 2397, 2398, 2399, 2400, 2401, 2304, 66,
	0, 2270, 70, 0, 2270, 0, -2, 75, 0, 1910,
	77, 0, 1907, 86, 0, 2270, 0, 1879, -2, 0,
	172, 1918, 0, 874, 1920, -2, 2270, 1055, 247, 248,
	1953, 1954, 1961, 1962, 1963, 1964, 0, 0, 0, 841,
	1876, 1881, 842, 1900, 843, 1886, 0, 276, 277, 278,
	279, 280, 0, 281, 2270, 283, 284, 0, 286, 287,
	2270, 289, 290, 0, 292, 0, 202, 203, 308, 309,
	0, 311, 0, 2270, 0, 0, 0, 317, -2, 333,
	0, 330, 0, 321, 322, 324, 325, 326, 327, 0,
	373, 371, 1915, 0, 869, 2270, 871, 0, 0, 1076,
	-2, 2270, 1052, 1082, 1078, 0, -2, 0, 1288, 2270,
	1185, 898, 899, 900, 901, 0, 392, 0, 1198, 0,
	1200, 0, 1221, 1413, 1357, 1357, 0, 334, 335, 336,
	337, 338, 2270, 0, 0, 0, 343, 0, 345, 346,
	347, 348, 349, 350, 351, 161, 2270, 424, 450, 161,
	2270, 427, 161, 2270, 430, 0, 433, 1095, 161, 2270,
	436, 161, 2270, 439, 440, 161, 2270, 444, 445, 447,
	2270, 449, 249, 1137, 1138, 1139, 1140, 0, -2, 508,
	1923, -2, 460, 0, 461, 0, -2, 0, 261, 0,
	0, 858, 859, 860, 861, 862, 865, 866, 867, 868,
	1394, 222, 220, 0, 0, 1128, 1129, 1130, 1131, 1132,
	1133, 1134, 1135, 1136, 0, 0, 565, 0, 0, 694,
	695, 0, 0, 705, 706, 707, 261, 2183, 2151, 2047,
	712, 0, 715, 718, -2, 0, 0, 0, 0, 722,
	0, 727, 728, 729, 0, 731, 847, 733, 0, 0,
	735, 0, 739, 0, 742, 0, 744, 0, 746, -2,
	-2, -2, 757, -2, 0, 760, 762, 0, 764, -2,
	0, 773, 769, 770, 0, 0, 0, 0, 789, 790,
	0, 795, 0, 798, 799, 800, 0, 802, 803, 0,
	805, 806, 807, 808, 0, 810, 811, -2, -2, 815,
	817, 0, 824, 0, 828, 0, 832, 0, 701, 702,
	161, 1411, 1150, -2, 1152, 0, -2, 0, 546, 0,
	549, 1318, 1246, 1243, 0, 1315, 1316, 1247, 0, 0,
	0, 1254, 0, 1293, 1294, 0, 0, 0, 1233, 1234,
	0, 0, 0, 0, 1784, 1785, 1786, 1787, 1788, 1789,
	1792, 1793, 1790, 1791, 1794, 1795, 0, 0, 0, 0,
	0, 1796, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1797, 1798, 1799, 0, 0, 1801, 0,
	1803, 0, 0, 0, 0, 0, 0, 1590, 1592, 1867,
	0, 0, 1800, 1530, 1531, 1532, 1533, 1534, 1569, 1570,
	0, 0, 1643, 1864, 1863, 1645, 0, 1815, 0, 1658,
	-2, 0, 1779, 1810, 0, 0, 1667, 1668, 1669, 0,
	0, 1815, 0, 0, 1858, 1679, 1680, 1522, 0, 0,
	1747, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1471, 1470,
	0, 1472, 0, 1473, 1474, 1481, 1494, 0, 0, 0,
	0, 1498, 0, 0, 0, 0, 0, 0, 0, 1839,
	-2, 0, 0, 0, 0, 1486, 0, 1280, 0, 0,
	1343, 1868, 1872, 1873, 1343, 1343, 0, 0, 1816, 1404,
	1404, 0, 0, 1400, 1400, 1400, 1398, 1381, 0, 1381,
	1391, 0, 1381, 1381, 0, -2, 1362, 0, 0, 1391,
	0, 1375, 496, 498, 500, 502, 503, 504, 506, 1408,
	1409, 0, 0, 0, 0, 1941, 0, 0, 0, 0,
	0, 1926, 0, 0, 0, 0, 526, 536, 1290, 0,
	1818, 1430, 1434, 0, 1436, 1437, 1438, 1439, 1440, 0,
	0, 1431, -2, 1482, 1484, 1505, 1958, 1959, 1960, 1465,
	1466, 1467, 1468, 1469, 1477, 1464, 1464, 1464, 1475, 1504,
	1496, 1504, 1500, 1451, 1452, 1487, 1488, 1489, 1490, 0,
	530, 0, 0, 0, 0, -2, 590, 595, 596, 0,
	0, 1173, 0, 1179, 617, 618, 619, 1181, 1182, 0,
	593, 620, 621, 622, 623, 624, 625, 0, 1888, 1889,
	1890, 1891, 1894, 1895, 0, 0, 591, 610, 598, 0,
	604, 87, 1123, 0, 126, 0, 1123, 1123, 0, 0,
	148, 0, 0, 0, 0, 0, 0, 111, 122, 99,
	100, 0, 0, 0, 0, 0, 71, 1029, 0, 1032,
	0, 0, 0, 0, 0, 0, 0, 1045, 0, 0,
	0, 110, 0, 105, 89, 0, 0, 0, 112, 124,
	0, 152, 154, 0, 0, 0, 0, 0, 0, 171,
	179, 0, 0, 0, 0, 1053, 0, 1287, 0, 1394,
	2085, 1394, 840, 0, 0, 1941, 1884, 0, 0, 0,
	0, 0, 0, 0, 310, 312, 0, 314, 315, 316,
	0, 1075, 0, 323, 320, 363, 978, 2270, 0, 0,
	390, 385, 0, 387, 0, 1028, 2270, 1026, 1919, 0,
	1050, 0, 0, 0, 1083, 1950, 1092, 1096, 1187, 0,
	394, 0, 1201, 1203, 0, 0, 1414, 0, 1416, 1417,
	0, 340, 341, 342, 0, 422, 0, 159, 160, 0,
	425, 0, 428, 0, 161, 2270, 1874, 434, 0, 437,
	0, 0, 442, 0, 0, 0, 0, 1290, 0, 0,
	0, 0, 237, 0, 0, 0, 0, 0, 0, 226,
	0, 1393, 0, 1394, 220, 261, 261, 1394, 567, 1394,
	569, 0, 0, 708, 261, 261, 261, 713, 714, 716,
	717, -2, -2, 825, 719, 720, 792, 0, 0, 0,
	791, 732, 0, 834, 2168, 845, 792, 2015, 792, 2015,
	792, 2015, 743, 745, 748, 784, 756, 761, 0, 0,
	766, 774, -2, 0, 776, 0, 778, 0, 780, 792,
	793, 796, 801, 804, 809, 0, 0, 0, 0, 0,
	0, 0, 1046, 0, 1163, 1318, 1246, 548, 1237, 1317,
	1238, 1245, 1248, 0, 0, 1250, 0, 1252, 0, 1313,
	1314, 1321, 1322, 0, 1332, 1333, 1325, 0, -2, 0,
	0, 1328, 1329, 1256, 0, 1273, 1274, 1275, 1302, 1305,
	1106, 0, 2402, 1526, 1425, 1527, 1528, 1903, 0, 1535,
	1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, -2,
	-2, -2, -2, -2, -2, -2, -2, 1553, 1554, 1555,
	1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, -2, -2,
	-2, 1567, 1568, -2, 1802, 1804, 0, 1867, 0, -2,
	0, -2, -2, -2, -2, 1587, 0, 1589, 1594, 1596,
	1598, 0, 0, 0, 0, 1866, 1608, 1850, 1851, 0,
	0, 1781, 1782, 1783, 1593, 0, 1612, 1865, 1862, 0,
	0, 1814, 1301, 1671, 0, 0, 0, 0, 1678, 1663,
	1812, 0, 1811, 0, 0, 0, 1822, 0, 1857, 1853,
	0, 1901, 1521, 1508, 1509, 1510, 1511, 1512, 1513, 1523,
	0, 1898, 1927, 1933, 1755, 0, 0, 0, 1708, 1709,
	1710, 1711, 1712, 0, 1714, 1715, 0, 1717, 1718, 0,
	1720, 1721, 0, 1723, 1724, 1725, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1443, 1444, 1445, 1446, 1447, 1448, 1449,
	1450, 0, 0, 1727, 0, 1825, -2, -2, -2, -2,
	-2, -2, -2, -2, 0, 1729, 0, 1731, 1816, 1836,
	0, 0, 1613, 0, 0, 0, 1779, 0, 1734, 1816,
	1844, 0, 0, 0, 0, 0, 1816, 0, 1849, 0,
	1741, 0, 1743, 1282, 0, 0, 1420, 0, 0, 0,
	1871, 1420, 1420, 0, 1338, 0, 0, 1401, 1402, 1403,
	0, 0, 1404, 0, 1395, 1399, 1396, 1397, 1391, 1354,
	0, 0, 1905, 1391, 1360, 1390, 0, 1007, 1380, 1391,
	1391, 0, -2, 1364, 1381, 0, 0, 497, 499, 501,
	505, 507, 0, 0, 1301, -2, 0, -2, 1006, 0,
	0, 0, 0, 516, 518, 0, 0, 510, 0, 513,
	0, 1421, 1424, 0, 0, 1435, 1441, 1442, 0, -2,
	0, 0, 1506, 0, 0, 0, 0, 583, 0, 1172,
	1180, 0, 614, 0, 616, 0, 1892, 1896, 1893, 1897,
	0, 605, 0, 0, 0, 0, 1122, 0, 130, 2270,
	0, 163, 0, 0, 971, 1911, 0, 0, 0, 0,
	2034, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 96, 101, 0, 0, 0, 0, 0,
	0, 0, 0, 1030, 1031, 1033, 1040, 1042, 0, 1036,
	1899, 0, 0, 1037, 0, 1039, 1041, 1043, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 98, 102, 0,
	0, 0, 0, 1878, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1071, 1069, 1063, 1064,
	1065, 1066, 1067, 1068, 0, 0, -2, 194, 0, 252,
	1877, 1887, 0, 863, 864, 282, 285, 288, 291, 190,
	0, 318, 0, 0, 904, 877, 0, 0, 372, 261,
	0, 0, 386, 0, 1024, 1027, 0, 1007, 2270, 1062,
	1917, 0, 0, 0, 0, 1081, 0, 2270, 1906, 1949,
	1950, 1189, 1195, 0, 1420, 0, 1219, 1204, 0, 0,
	0, 1219, 1223, 1224, 1226, 1227, 0, 0, 1415, 0,
	344, 451, 161, 161, 161, 431, 0, 0, 161, 441,
	161, 446, 161, 250, 448, 459, 509, 1290, 1290, 261,
	259, 2126, 257, 254, 256, 0, 0, 0, 905, 907,
	908, 909, 910, 0, 1950, 0, 2074, 1950, 0, 1207,
	1209, 0, 216, 0, 223, 221, 226, 0, 0, 384,
	566, 571, 703, 0, 709, 710, 711, 750, 786, 721,
	723, 724, 725, 0, 846, 844, 734, 792, 737, 792,
	740, 792, 759, 763, 768, 775, 0, 0, 0, 788,
	0, 0, 0, 0, 0, 0, 0, 829, 830, 831,
	833, 1412, 1241, 1242, 1244, 0, 1253, 0, 0, 1327,
	-2, -2, 1326, 1330, 1331, -2, -2, -2, -2, 1249,
	0, 1258, 1255, 0, 1312, 1104, 1105, 0, 0, 0,
	0, -2, -2, 0, 0, 0, 1609, 0, -2, 1588,
	1591, 1595, 1597, 1599, 0, 0, 0, 0, 0, 0,
	1805, 0, 1807, 1610, 1860, 1863, 1777, 0, 0, 1300,
	1301, 1301, 0, 1677, 0, 1813, 0, 1820, 1821, 0,
	1670, 0, 1854, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1681, 0, 0, 0, 0, 1713, 1716, 1719,
	1722, 0, 0, 0, 0, 1702, 0, 0, 0, 1706,
	1476, 1462, 0, 1504, 1502, 1503, 1497, 1504, 1501, 1454,
	0, 1453, 0, 1726, 0, 1728, 1730, 0, 0, 1732,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1616, 1617, 1618, 1733, 1842, 1843, 0,
	0, 0, 0, 0, 0, 1739, 0, 1848, 1740, 1742,
	1290, 0, 1283, 0, 1340, 1335, 1419, 0, 1869, 1394,
	1342, 1344, 1870, 1908, 1335, 1335, 0, 1817, 0, 0,
	1385, 0, 0, 0, 1387, 1358, 0, 0, 1352, 0,
	1348, 1349, 1350, 1351, 1359, 1007, 1389, 1361, 1365, 1927,
	0, 1391, 0, 1376, 0, 1378, 1410, 0, 1370, 1373,
	0, 0, 1942, 262, 0, 293, 297, 298, 294, 295,
	296, 525, 0, 0, 1819, 0, 1426, 0, 1432, 0,
	0, 0, 0, 529, 0, 579, -2, 612, 613, 615,
	0, 611, 127, 1123, 0, 0, 1108, 1110, 0, 132,
	2270, 141, 0, 945, 0, 1909, 0, 0, 0, 0,
	0, 1125, 0, 0, 2270, 161, 2270, 161, 144, 147,
	0, 151, 149, 0, 0, 936, 88, 1123, 0, 91,
	95, 103, 0, 0, 0, 109, 0, 0, 0, 1112,
	1116, 0, 0, 1034, 1035, 1038, 1044, 72, 0, 0,
	1114, 1118, 1107, 153, 93, 97, 104, 0, 1120, 90,
	0, 175, 0, 0, 0, 167, 0, 168, 169, 176,
	177, 178, 180, 0, 161, 2270, 0, 872, 873, 1070,
	1048, 1049, 0, 1054, 186, 0, 1394, 194, 0, 1883,
	0, 0, 0, 0, 0, 0, 903, 989, 0, 0,
	0, 0, 378, 374, 0, 383, 389, 388, 870, 0,
	0, 0, -2, 1085, 1079, 1080, 0, 0, 0, 2270,
	1191, 1195, 0, 1194, 1288, 1301, 393, 1196, 1219, 0,
	0, 0, 1206, 1202, 1199, 1420, 0, 0, 0, 0,
	0, 339, 423, 426, 429, 1875, 161, 435, 438, 443,
	462, 463, 236, 0, 0, 0, 0, 0, 261, 0,
	0, 0, 914, 0, 1950, 1950, 0, 1913, 0, 0,
	0, 0, 224, 0, 227, 0, 0, 231, 232, 233,
	234, 217, 1394, 0, 568, 0, 0, 0, 736, 738,
	741, 777, 779, 792, 818, 819, 931, 0, 931, 0,
	0, 1251, 0, 1324, 1257, 1306, 1307, 0, 1106, 0,
	1529, 1572, 0, 0, -2, 0, 0, 1576, 0, 0,
	0, -2, 0, 0, 0, 1806, 1808, 0, 1862, 1672,
	0, 0, 0, 1676, 1660, 1661, 0, 1780, 1823, 1852,
	1856, 0, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 0,
	1902, 1928, 1932, 1753, 1754, 1758, 1916, 0, 0, 0,
	1685, 0, 0, 0, 0, 0, 0, 0, 0, 1495,
	1499, 0, 0, 1824, 1835, 1837, 1614, 1615, 1619, 1620,
	1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, -2, -2,
	-2, 1632, 1633, 1634, -2, -2, -2, 0, 0, 0,
	1838, 1840, 1841, 1845, 1846, 0, 1736, 1737, 1738, 1847,
	0, 1290, 1284, 1337, 0, 1418, 1341, 0, 1337, 1337,
	1297, 1383, 0, 0, 1406, 0, 1355, 0, 1356, 0,
	1388, 0, 1363, 1366, 1367, 1377, 0, 1369, 0, 1372,
	0, 1672, -2, 263, 265, 0, 268, 527, 511, 0,
	0, 1428, 0, 0, 1479, 1483, 1507, 531, 1392, 0,
	0, 0, 0, 162, 943, 970, 0, 0, 0, 1099,
	1106, 0, 0, 976, 134, 0, 0, 0, 142, 0,
	0, 139, 0, 146, 150, 0, 0, 0, 0, 0,
	0, 106, 107, 108, 0, 113, 0, 114, 0, 0,
	0, 0, 0, 0, 0, 0, 164, 0, 0, 0,
	1103, 0, 0, 182, 0, 0, 0, 1073, 1074, 192,
	0, 195, 0, 198, 199, 0, 194, 188, 0, 0,
	313, 1007, 319, 925, 977, 0, 979, 0, 878, 0,
	0, 978, 370, 0, 377, 0, 1028, 0, 0, 1051,
	0, 1084, 1086, 1094, 0, 0, 0, 1193, 1195, 0,
	1186, 1187, 1320, 1197, 1217, -2, 1216, 0, 1301, 1225,
	1222, 1228, 1229, 0, 432, 258, 0, 253, 255, 0,
	239, 0, 0, 906, 911, 0, 0, 0, 0, 0,
	1208, 1210, 0, 0, 0, 0, 0, 226, 245, 0,
	704, 726, 787, 820, 930, 0, 0, 822, 0, 0,
	1323, 1310, 1311, 1308, 1106, 1574, 1578, 0, 0, 0,
	1580, -2, 0, 1602, -2, -2, 1809, 1861, 1651, 1301,
	1673, 1675, 1662, 1855, 1524, 0, 1760, 1757, 0, 1744,
	0, 1697, 1698, 0, 0, 1701, 1703, 1704, 1705, 1463,
	1456, 1455, 1834, 0, 0, 0, 0, 1735, 1285, 0,
	1749, 0, 0, 1345, 1749, 1749, 1384, 0, 1386, 1353,
	1346, 0, 1928, 1379, 1371, 0, 0, 266, 0, 1422,
	1427, 0, 1433, 1478, 128, 129, 131, 0, 944, 0,
	947, 0, 0, 0, 0, 954, 955, 0, 0, 0,
	0, 0, 964, 0, 993, 1003, 0, 1312, 0, 0,
	0, 136, 156, 0, 0, 1124, 0, 0, 161, 161,
	0, 0, 1109, 1111, 0, 0, 0, 0, 116, 0,
	0, 1113, 1117, 1115, 1119, 0, 0, 1121, 173, 174,
	0, 161, 0, 166, 161, 161, 1103, 0, 0, 0,
	0, 0, 187, 251, 194, 0, 933, 0, 989, 981,
	982, 983, 0, 988, 990, 0, 0, 891, 0, 887,
	0, 0, 880, 904, 877, 0, 375, 1025, 1059, 1007,
	1077, 0, 0, 0, 0, 0, 0, 1183, 1195, 0,
	1188, 1189, 1219, 1319, 0, 0, 0, 1205, 1320, 0,
	260, 261, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 261, 228, 0, 229, 230, 218, 570, 572, 0,
	0, 578, 929, 0, 0, 0, 0, 1309, 1582, -2,
	-2, 1603, 0, 1929, 1931, 1301, 0, 1746, 1303, 0,
	0, -2, 0, 0, 0, 1286, 1269, 0, 1336, 1334,
	1270, 1271, 1405, 0, 1374, 267, 0, 1429, 133, 0,
	948, 949, 1912, 951, 0, 953, 956, 0, 959, 1952,
	0, 963, 0, 972, 994, 0, 925, 0, 999, 1000,
	1001, 1100, 1101, 1005, 0, 135, 137, 155, 1103, 0,
	138, 145, 0, 0, 92, 0, 0, 2008, 119, 117,
	115, 94, 0, 175, 181, 1102, 170, 183, 161, 0,
	196, 0, 197, 200, 0, 0, 877, 932, 0, 980,
	0, 991, 992, 881, 0, 879, 0, 0, 0, 0,
	0, 376, 379, 0, 382, 0, 1087, 0, 1093, 0,
	0, 0, 0, 1190, 1191, 391, 0, 0, 0, 1219,
	1230, 238, 0, 0, 912, 915, 916, 917, 918, 919,
	920, 921, 922, 923, 913, 1005, 0, 0, 969, 0,
	243, 225, 0, 574, 0, 576, 0, 821, 823, 0,
	0, 1674, 1764, 0, 0, 1699, 1700, -2, 0, 1640,
	1748, 1750, 0, 1347, 1423, 946, 950, 0, 0, 0,
	1011, 0, 0, 965, 0, 997, 998, 933, 0, 925,
	0, 0, 158, 0, 0, 0, 0, 0, 0, 0,
	165, 184, 1103, 193, 212, 0, 1060, 881, 0, 0,
	889, 0, 892, 0, 888, 885, 886, 925, 0, 380,
	381, 0, 0, 1094, 0, 0, 1192, 1193, 0, 1212,
	1213, 1215, 1220, 0, 0, 1003, 1005, 1420, 0, 573,
	0, 0, 826, 827, 0, 0, 0, 0, 1759, 1304,
	1641, 0, 0, 0, 0, 958, 1016, 0, 0, 0,
	995, 996, 993, 0, 974, 0, 1007, 140, 0, 1005,
	0, 937, 0, 0, 940, 0, 0, 120, 2008, 118,
	0, 161, 215, 0, 207, 205, 206, 875, 0, 0,
	985, 987, 0, 893, 933, 891, 1061, 1005, 0, 1003,
	0, 1184, 0, 1214, 261, 261, 925, 1003, 968, 261,
	575, 577, 1756, 1776, 1765, -2, 2231, 2012, 0, 1776,
	1776, 1751, 1752, 0, 0, 960, 1012, 1013, 0, 1008,
	1009, 1010, 1951, 961, 962, 1420, 1002, 0, 1011, 157,
	925, 934, 0, 0, 935, 0, 0, 123, 0, 125,
	185, 201, 0, 0, 0, 984, 0, 0, 0, 0,
	877, 881, 1003, 0, 925, 0, 1420, 240, 241, 933,
	925, 242, 1761, 0, 0, 1767, 1768, 1769, 1770, 1771,
	1762, 1763, 952, 0, 1014, 0, 1015, 0, 0, 0,
	973, 0, 1016, 143, 938, 0, 941, 0, 121, 0,
	210, 211, 0, 986, 882, 0, 884, 881, 890, 925,
	0, 933, 0, 1211, 1420, 933, 0, 1773, 1774, 0,
	0, 0, 1017, 0, 1020, 1021, 0, 1018, 0, 993,
	0, 0, 0, 928, 883, 876, 933, 1005, 1420, 1003,
	966, 1420, 1772, 1775, 1766, 957, 1019, 1022, 1023, 1004,
	975, 0, 0, 0, 924, 926, 927, 1420, 1003, 1090,
	925, 967, 933, 0, 213, 0, 1088, 925, 933, 939,
	0, 0, 933, 1420, 0, 214, 1420, 1091, 0, 1089,
	933, 942,
}
var sqlTok1 = [...]int{

	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 499, 3, 505, 500, 3,
	510, 511, 503, 501, 515, 502, 512, 504, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 518, 3,
	491, 493, 492, 496, 514, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 508, 3, 509, 506, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 516, 498, 517, 494,
}
var sqlTok2 = [...]int{

	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 243, 244, 245, 246, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257,
}
var sqlTok3 = [...]int{
	57600, 258, 57601, 259, 57602, 260, 57603, 261, 57604, 262,
	57605, 263, 57606, 264, 57607, 265, 57608, 266, 57609, 267,
	57610, 268, 57611, 269, 57612, 270, 57613, 271, 57614, 272,
	57615, 273, 57616, 274, 57617, 275, 57618, 276, 57619, 277,
	57620, 278, 57621, 279, 57622, 280, 57623, 281, 57624, 282,
	57625, 283, 57626, 284, 57627, 285, 57628, 286, 57629, 287,
	57630, 288, 57631, 289, 57632, 290, 57633, 291, 57634, 292,
	57635, 293, 57636, 294, 57637, 295, 57638, 296, 57639, 297,
	57640, 298, 57641, 299, 57642, 300, 57643, 301, 57644, 302,
	57645, 303, 57646, 304, 57647, 305, 57648, 306, 57649, 307,
	57650, 308, 57651, 309, 57652, 310, 57653, 311, 57654, 312,
	57655, 313, 57656, 314, 57657, 315, 57658, 316, 57659, 317,
	57660, 318, 57661, 319, 57662, 320, 57663, 321, 57664, 322,
	57665, 323, 57666, 324, 57667, 325, 57668, 326, 57669, 327,
	57670, 328, 57671, 329, 57672, 330, 57673, 331, 57674, 332,
	57675, 333, 57676, 334, 57677, 335, 57678, 336, 57679, 337,
	57680, 338, 57681, 339, 57682, 340, 57683, 341, 57684, 342,
	57685, 343, 57686, 344, 57687, 345, 57688, 346, 57689, 347,
	57690, 348, 57691, 349, 57692, 350, 57693, 351, 57694, 352,
	57695, 353, 57696, 354, 57697, 355, 57698, 356, 57699, 357,
	57700, 358, 57701, 359, 57702, 360, 57703, 361, 57704, 362,
	57705, 363, 57706, 364, 57707, 365, 57708, 366, 57709, 367,
	57710, 368, 57711, 369, 57712, 370, 57713, 371, 57714, 372,
	57715, 373, 57716, 374, 57717, 375, 57718, 376, 57719, 377,
	57720, 378, 57721, 379, 57722, 380, 57723, 381, 57724, 382,
	57725, 383, 57726, 384, 57727, 385, 57728, 386, 57729, 387,
	57730, 388, 57731, 389, 57732, 390, 57733, 391, 57734, 392,
	57735, 393, 57736, 394, 57737, 395, 57738, 396, 57739, 397,
	57740, 398, 57741, 399, 57742, 400, 57743, 401, 57744, 402,
	57745, 403, 57746, 404, 57747, 405, 57748, 406, 57749, 407,
	57750, 408, 57751, 409, 57752, 410, 57753, 411, 57754, 412,
	57755, 413, 57756, 414, 57757, 415, 57758, 416, 57759, 417,
	57760, 418, 57761, 419, 57762, 420, 57763, 421, 57764, 422,
	57765, 423, 57766, 424, 57767, 425, 57768, 426, 57769, 427,
	57770, 428, 57771, 429, 57772, 430, 57773, 431, 57774, 432,
	57775, 433, 57776, 434, 57777, 435, 57778, 436, 57779, 437,
	57780, 438, 57781, 439, 57782, 440, 57783, 441, 57784, 442,
	57785, 443, 57786, 444, 57787, 445, 57788, 446, 57789, 447,
	57790, 448, 57791, 449, 57792, 450, 57793, 451, 57794, 452,
	57795, 453, 57796, 454, 57797, 455, 57798, 456, 57799, 457,
	57800, 458, 57801, 459, 57802, 460, 57803, 461, 57804, 462,
	57805, 463, 57806, 464, 57807, 465, 57808, 466, 57809, 467,
	57810, 468, 57811, 469, 57812, 470, 57813, 471, 57814, 472,
	57815, 473, 57816, 474, 57817, 475, 57818, 476, 57819, 477,
	57820, 478, 57821, 479, 57822, 480, 57823, 481, 57824, 482,
	57825, 483, 57826, 484, 57827, 485, 57828, 486, 57829, 487,
	57830, 488, 57831, 489, 57832, 490, 57833, 495, 57834, 497,
	57835, 507, 57836, 513, 0,
}

var sqlErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	sqlDebug        = 0
	sqlErrorVerbose = false
)

type sqlLexer interface {
	Lex(lval *sqlSymType) int
	Error(s string)
}

type sqlParser interface {
	Parse(sqlLexer) int
	Lookahead() int
}

type sqlParserImpl struct {
	lval  sqlSymType
	stack [sqlInitialStackSize]sqlSymType
	char  int
}

func (p *sqlParserImpl) Lookahead() int {
	return p.char
}

func sqlNewParser() sqlParser {
	return &sqlParserImpl{}
}

const sqlFlag = -1000

func sqlTokname(c int) string {
	if c >= 1 && c-1 < len(sqlToknames) {
		if sqlToknames[c-1] != "" {
			return sqlToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func sqlStatname(s int) string {
	if s >= 0 && s < len(sqlStatenames) {
		if sqlStatenames[s] != "" {
			return sqlStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func sqlErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !sqlErrorVerbose {
		return "syntax error"
	}

	for _, e := range sqlErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + sqlTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := sqlPact[state]
	for tok := TOKSTART; tok-1 < len(sqlToknames); tok++ {
		if n := base + tok; n >= 0 && n < sqlLast && sqlChk[sqlAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if sqlDef[state] == -2 {
		i := 0
		for sqlExca[i] != -1 || sqlExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; sqlExca[i] >= 0; i += 2 {
			tok := sqlExca[i]
			if tok < TOKSTART || sqlExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if sqlExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += sqlTokname(tok)
	}
	return res
}

func sqllex1(lex sqlLexer, lval *sqlSymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = sqlTok1[0]
		goto out
	}
	if char < len(sqlTok1) {
		token = sqlTok1[char]
		goto out
	}
	if char >= sqlPrivate {
		if char < sqlPrivate+len(sqlTok2) {
			token = sqlTok2[char-sqlPrivate]
			goto out
		}
	}
	for i := 0; i < len(sqlTok3); i += 2 {
		token = sqlTok3[i+0]
		if token == char {
			token = sqlTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = sqlTok2[1] /* unknown char */
	}
	if sqlDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", sqlTokname(token), uint(char))
	}
	return char, token
}

func sqlParse(sqllex sqlLexer) int {
	return sqlNewParser().Parse(sqllex)
}

func (sqlrcvr *sqlParserImpl) Parse(sqllex sqlLexer) int {
	var sqln int
	var sqlVAL sqlSymType
	var sqlDollar []sqlSymType
	_ = sqlDollar // silence set and not used
	sqlS := sqlrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	sqlstate := 0
	sqlrcvr.char = -1
	sqltoken := -1 // sqlrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		sqlstate = -1
		sqlrcvr.char = -1
		sqltoken = -1
	}()
	sqlp := -1
	goto sqlstack

ret0:
	return 0

ret1:
	return 1

sqlstack:
	/* put a state and value onto the stack */
	if sqlDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", sqlTokname(sqltoken), sqlStatname(sqlstate))
	}

	sqlp++
	if sqlp >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlS[sqlp] = sqlVAL
	sqlS[sqlp].yys = sqlstate

sqlnewstate:
	sqln = sqlPact[sqlstate]
	if sqln <= sqlFlag {
		goto sqldefault /* simple state */
	}
	if sqlrcvr.char < 0 {
		sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
	}
	sqln += sqltoken
	if sqln < 0 || sqln >= sqlLast {
		goto sqldefault
	}
	sqln = sqlAct[sqln]
	if sqlChk[sqln] == sqltoken { /* valid shift */
		sqlrcvr.char = -1
		sqltoken = -1
		sqlVAL = sqlrcvr.lval
		sqlstate = sqln
		if Errflag > 0 {
			Errflag--
		}
		goto sqlstack
	}

sqldefault:
	/* default state action */
	sqln = sqlDef[sqlstate]
	if sqln == -2 {
		if sqlrcvr.char < 0 {
			sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if sqlExca[xi+0] == -1 && sqlExca[xi+1] == sqlstate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			sqln = sqlExca[xi+0]
			if sqln < 0 || sqln == sqltoken {
				break
			}
		}
		sqln = sqlExca[xi+1]
		if sqln < 0 {
			goto ret0
		}
	}
	if sqln == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			sqllex.Error(sqlErrorMessage(sqlstate, sqltoken))
			Nerrs++
			if sqlDebug >= 1 {
				__yyfmt__.Printf("%s", sqlStatname(sqlstate))
				__yyfmt__.Printf(" saw %s\n", sqlTokname(sqltoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for sqlp >= 0 {
				sqln = sqlPact[sqlS[sqlp].yys] + sqlErrCode
				if sqln >= 0 && sqln < sqlLast {
					sqlstate = sqlAct[sqln] /* simulate a shift of "error" */
					if sqlChk[sqlstate] == sqlErrCode {
						goto sqlstack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if sqlDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", sqlS[sqlp].yys)
				}
				sqlp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if sqlDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", sqlTokname(sqltoken))
			}
			if sqltoken == sqlEofCode {
				goto ret1
			}
			sqlrcvr.char = -1
			sqltoken = -1
			goto sqlnewstate /* try again in the same state */
		}
	}

	/* reduction by production sqln */
	if sqlDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", sqln, sqlStatname(sqlstate))
	}

	sqlnt := sqln
	sqlpt := sqlp
	_ = sqlpt // guard against "declared and not used"

	sqlp -= sqlR2[sqln]
	// sqlp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if sqlp+1 >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlVAL = sqlS[sqlp+1]

	/* consult goto table to find next state */
	sqln = sqlR1[sqln]
	sqlg := sqlPgo[sqln]
	sqlj := sqlg + sqlS[sqlp].yys + 1

	if sqlj >= sqlLast {
		sqlstate = sqlAct[sqlg]
	} else {
		sqlstate = sqlAct[sqlj]
		if sqlChk[sqlstate] != -sqln {
			sqlstate = sqlAct[sqlg]
		}
	}
	// dummy call; replaced with literal code
	switch sqlnt {

	case 1:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1207
		{
			sqllex.(*lexer).SetStmt(sqlDollar[1].union.stmt())
		}
	case 2:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1212
		{
			return helpWith(sqllex, "")
		}
	case 5:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1214
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 9:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1217
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 11:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1218
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 13:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1219
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 15:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1220
		{
			return helpWith(sqllex, "GRANT")
		}
	case 17:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1221
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 19:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1222
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 21:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1223
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 23:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1224
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 29:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1231
		{
			sqlVAL.union.val = tree.Statement(nil)
		}
	case 32:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1240
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 33:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1241
		{
			return helpWith(sqllex, "ALTER")
		}
	case 35:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1244
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 37:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1245
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 39:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1246
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 41:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1247
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 43:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1248
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 45:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1249
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 47:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1250
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 49:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1251
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 51:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1252
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 61:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1308
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 63:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1334
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 66:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1347
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 70:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1364
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 71:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1368
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[3].union.unresolvedObjectName(), Options: sqlDollar[4].union.seqOpts(), IfExists: false}
		}
	case 72:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1372
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[5].union.unresolvedObjectName(), Options: sqlDollar[6].union.seqOpts(), IfExists: true}
		}
	case 75:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1386
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 77:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1405
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 86:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1437
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 87:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1441
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[3].union.unresolvedObjectName(), IfExists: false, Cmds: sqlDollar[4].union.alterTableCmds()}
		}
	case 88:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1445
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[5].union.unresolvedObjectName(), IfExists: true, Cmds: sqlDollar[6].union.alterTableCmds()}
		}
	case 89:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1451
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[3].union.tableIndexName(), IfExists: false, Cmds: sqlDollar[4].union.alterIndexCmds()}
		}
	case 90:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1455
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[5].union.tableIndexName(), IfExists: true, Cmds: sqlDollar[6].union.alterIndexCmds()}
		}
	case 91:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1461
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   tree.Expr(nil),
			}
		}
	case 92:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1470
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   sqlDollar[9].union.expr(),
			}
		}
	case 93:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1481
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: tree.Expr(nil)}
		}
	case 94:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1485
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: sqlDollar[9].union.expr()}
		}
	case 95:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1491
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 96:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1499
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				All:          true,
			}
		}
	case 97:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1509
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 98:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1513
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), All: true}
		}
	case 101:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1523
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[5].union.slct(),
			}
		}
	case 102:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1534
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[5].union.slct()}
		}
	case 103:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1541
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:  tree.TableIndexName{Table: name},
				Rows:          sqlDollar[6].union.slct(),
				RelocateLease: true,
			}
		}
	case 104:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1553
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), RelocateLease: true}
		}
	case 105:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1560
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 106:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1568
		{

			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: sqlDollar[4].union.expr()}
		}
	case 107:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1573
		{
			sqlVAL.union.val = &tree.SetZoneConfig{Options: sqlDollar[4].union.kvOptions()}
		}
	case 108:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1577
		{

			sqlVAL.union.val = &tree.SetZoneConfig{SetDefault: true}
		}
	case 109:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1582
		{
			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: tree.DNull}
		}
	case 110:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1588
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{Database: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 111:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1596
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
			}
			sqlVAL.union.val = s
		}
	case 112:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1607
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[3].union.tableIndexName(),
			}
			sqlVAL.union.val = s
		}
	case 113:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1617
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 114:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1627
		{
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 115:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1636
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[9].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			s.AllIndexes = true
			sqlVAL.union.val = s
		}
	case 116:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1647
		{
			err := errors.New("index name should not be specified in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION ... OF INDEX")
			return setErr(sqllex, err)
		}
	case 117:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1653
		{
			err := errors.New("index wildcard unsupported in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION <partition> OF INDEX <tablename>@*")
			return setErr(sqllex, err)
		}
	case 118:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1661
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), "."))}}
		}
	case 119:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1665
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), ".")), Value: sqlDollar[3].union.expr()}}
		}
	case 120:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1669
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), ".")), Value: sqlDollar[5].union.expr()})
		}
	case 121:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1673
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), "."))})
		}
	case 122:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1679
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 123:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:1684
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{
				TableOrIndex: tree.TableIndexName{Table: name},
				From:         sqlDollar[7].union.exprs(),
				To:           sqlDollar[11].union.exprs(),
			}
		}
	case 124:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1695
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName()}
		}
	case 125:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:1699
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName(), From: sqlDollar[7].union.exprs(), To: sqlDollar[11].union.exprs()}
		}
	case 126:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1705
		{
			sqlVAL.union.val = tree.AlterTableCmds{sqlDollar[1].union.alterTableCmd()}
		}
	case 127:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1709
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterTableCmds(), sqlDollar[3].union.alterTableCmd())
		}
	case 128:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1716
		{
			sqlVAL.union.val = &tree.AlterTableRenameColumn{Column: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 129:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1721
		{
			sqlVAL.union.val = &tree.AlterTableRenameConstraint{Constraint: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 130:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1726
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[2].union.colDef()}
		}
	case 131:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1731
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[5].union.colDef()}
		}
	case 132:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1736
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[3].union.colDef()}
		}
	case 133:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1741
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[6].union.colDef()}
		}
	case 134:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1746
		{
			sqlVAL.union.val = &tree.AlterTableSetDefault{Column: tree.Name(sqlDollar[3].str), Default: sqlDollar[4].union.expr()}
		}
	case 135:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1751
		{
			sqlVAL.union.val = &tree.AlterTableDropNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 136:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1756
		{
			sqlVAL.union.val = &tree.AlterTableDropStored{Column: tree.Name(sqlDollar[3].str)}
		}
	case 137:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1761
		{
			sqlVAL.union.val = &tree.AlterTableSetNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 138:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1766
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     true,
				Column:       tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 139:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1775
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     false,
				Column:       tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 140:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1787
		{
			sqlVAL.union.val = &tree.AlterTableAlterColumnType{
				Column:    tree.Name(sqlDollar[3].str),
				ToType:    sqlDollar[6].union.typeReference(),
				Collation: sqlDollar[7].str,
				Using:     sqlDollar[8].union.expr(),
			}
		}
	case 141:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1797
		{
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      sqlDollar[2].union.constraintDef(),
				ValidationBehavior: sqlDollar[3].union.validationBehavior(),
			}
		}
	case 142:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1804
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "alter constraint")
		}
	case 143:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:1808
		{
			sqlVAL.union.val = &tree.AlterTableAlterPrimaryKey{
				Columns:    sqlDollar[7].union.idxElems(),
				Sharded:    sqlDollar[9].union.shardedIndexDef(),
				Interleave: sqlDollar[10].union.interleave(),
			}
		}
	case 144:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1816
		{
			sqlVAL.union.val = &tree.AlterTableValidateConstraint{
				Constraint: tree.Name(sqlDollar[3].str),
			}
		}
	case 145:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1823
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     true,
				Constraint:   tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 146:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1832
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     false,
				Constraint:   tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 147:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1841
		{
			sqlVAL.union.val = &tree.AlterTableSetAudit{Mode: sqlDollar[3].union.auditMode()}
		}
	case 148:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1846
		{
			sqlVAL.union.val = &tree.AlterTablePartitionBy{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 149:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1853
		{

			sqlVAL.union.val = &tree.AlterTableInjectStats{
				Stats: sqlDollar[3].union.expr(),
			}
		}
	case 150:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1861
		{
			sqlVAL.union.val = tree.AuditModeReadWrite
		}
	case 151:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1862
		{
			sqlVAL.union.val = tree.AuditModeDisable
		}
	case 152:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1866
		{
			sqlVAL.union.val = tree.AlterIndexCmds{sqlDollar[1].union.alterIndexCmd()}
		}
	case 153:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1870
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterIndexCmds(), sqlDollar[3].union.alterIndexCmd())
		}
	case 154:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1876
		{
			sqlVAL.union.val = &tree.AlterIndexPartitionBy{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 155:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1884
		{
			sqlVAL.union.val = sqlDollar[3].union.expr()
		}
	case 156:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1888
		{
			sqlVAL.union.val = nil
		}
	case 157:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1894
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 158:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1898
		{
			sqlVAL.union.val = nil
		}
	case 159:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1905
		{
			sqlVAL.union.val = tree.DropCascade
		}
	case 160:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1909
		{
			sqlVAL.union.val = tree.DropRestrict
		}
	case 161:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1913
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 162:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1919
		{
			sqlVAL.union.val = tree.ValidationSkip
		}
	case 163:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1923
		{
			sqlVAL.union.val = tree.ValidationDefault
		}
	case 164:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1948
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      sqlDollar[6].str,
					IfNotExists: false,
					Placement:   sqlDollar[7].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 165:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:1959
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      sqlDollar[9].str,
					IfNotExists: true,
					Placement:   sqlDollar[10].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 166:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1970
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRenameValue{
					OldVal: sqlDollar[6].str,
					NewVal: sqlDollar[8].str,
				},
			}
		}
	case 167:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1980
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRename{
					NewName: sqlDollar[6].str,
				},
			}
		}
	case 168:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1989
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeSetSchema{
					Schema: sqlDollar[6].str,
				},
			}
		}
	case 169:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1998
		{
			return unimplementedWithIssueDetail(sqllex, 48700, "ALTER TYPE OWNER TO")
		}
	case 170:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2002
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 171:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2006
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 172:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2009
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 173:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2013
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      true,
				ExistingVal: sqlDollar[2].str,
			}
		}
	case 174:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2020
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      false,
				ExistingVal: sqlDollar[2].str,
			}
		}
	case 175:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2027
		{
			sqlVAL.union.val = (*tree.AlterTypeAddValuePlacement)(nil)
		}
	case 186:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2072
		{
			sqlVAL.union.val = &tree.Backup{
				Targets: sqlDollar[2].union.targetListPtr(),
				To:      sqlDollar[4].union.stringOrPlaceholderOptList(),
				Nested:  true,
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *sqlDollar[6].union.backupOptions(),
			}
		}
	case 187:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2082
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: true,
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 188:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2093
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:         sqlDollar[2].union.targetListPtr(),
				To:              sqlDollar[4].union.stringOrPlaceholderOptList(),
				IncrementalFrom: sqlDollar[6].union.exprs(),
				AsOf:            sqlDollar[5].union.asOfClause(),
				Options:         *sqlDollar[7].union.backupOptions(),
			}
		}
	case 189:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2102
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 190:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2106
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 191:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2110
		{
			t := sqlDollar[1].union.targetList()
			sqlVAL.union.val = &t
		}
	case 192:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2118
		{
			sqlVAL.union.val = sqlDollar[2].union.backupOptions()
		}
	case 193:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2122
		{
			sqlVAL.union.val = sqlDollar[4].union.backupOptions()
		}
	case 194:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2126
		{
			sqlVAL.union.val = &tree.BackupOptions{}
		}
	case 195:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2133
		{
			sqlVAL.union.val = sqlDollar[1].union.backupOptions()
		}
	case 196:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2137
		{
			if err := sqlDollar[1].union.backupOptions().CombineWith(sqlDollar[3].union.backupOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 197:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2146
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 198:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2150
		{
			sqlVAL.union.val = &tree.BackupOptions{CaptureRevisionHistory: true}
		}
	case 199:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2154
		{
			sqlVAL.union.val = &tree.BackupOptions{Detached: true}
		}
	case 200:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2158
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 201:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2239
		{
			sqlVAL.union.val = &tree.ScheduledBackup{
				ScheduleName:    sqlDollar[3].union.expr(),
				Recurrence:      sqlDollar[10].union.expr(),
				FullBackup:      sqlDollar[11].union.fullBackupClause(),
				To:              sqlDollar[8].union.stringOrPlaceholderOptList(),
				Targets:         sqlDollar[6].union.targetListPtr(),
				BackupOptions:   *(sqlDollar[9].union.backupOptions()),
				ScheduleOptions: sqlDollar[12].union.kvOptions(),
			}
		}
	case 202:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2250
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 204:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2255
		{
			sqlVAL.union.val = nil
		}
	case 205:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2263
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 206:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2267
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 207:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2277
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 208:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2283
		{
			sqlVAL.union.val = nil
		}
	case 210:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2292
		{
			sqlVAL.union.val = &tree.FullBackupClause{Recurrence: sqlDollar[3].union.expr()}
		}
	case 211:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2296
		{
			sqlVAL.union.val = &tree.FullBackupClause{AlwaysFull: true}
		}
	case 212:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2300
		{
			sqlVAL.union.val = (*tree.FullBackupClause)(nil)
		}
	case 213:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2306
		{
			sqlVAL.union.val = sqlDollar[5].union.kvOptions()
		}
	case 214:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2310
		{
			sqlVAL.union.val = sqlDollar[6].union.kvOptions()
		}
	case 215:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2314
		{
			sqlVAL.union.val = nil
		}
	case 216:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2340
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				From:               sqlDollar[3].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[4].union.asOfClause(),
				Options:            *(sqlDollar[5].union.restoreOptions()),
			}
		}
	case 217:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2349
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[4].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *(sqlDollar[6].union.restoreOptions()),
			}
		}
	case 218:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2358
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				Subdir:  sqlDollar[4].union.expr(),
				From:    sqlDollar[6].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[7].union.asOfClause(),
				Options: *(sqlDollar[8].union.restoreOptions()),
			}
		}
	case 219:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2367
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 220:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2371
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList{sqlDollar[1].union.expr()}
		}
	case 221:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2375
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList(sqlDollar[2].union.exprs())
		}
	case 222:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2381
		{
			sqlVAL.union.val = []tree.StringOrPlaceholderOptList{sqlDollar[1].union.stringOrPlaceholderOptList()}
		}
	case 223:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2385
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listOfStringOrPlaceholderOptList(), sqlDollar[3].union.stringOrPlaceholderOptList())
		}
	case 224:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2392
		{
			sqlVAL.union.val = sqlDollar[2].union.restoreOptions()
		}
	case 225:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2396
		{
			sqlVAL.union.val = sqlDollar[4].union.restoreOptions()
		}
	case 226:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2400
		{
			sqlVAL.union.val = &tree.RestoreOptions{}
		}
	case 227:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2407
		{
			sqlVAL.union.val = sqlDollar[1].union.restoreOptions()
		}
	case 228:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2411
		{
			if err := sqlDollar[1].union.restoreOptions().CombineWith(sqlDollar[3].union.restoreOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 229:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2420
		{
			sqlVAL.union.val = &tree.RestoreOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 230:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2424
		{
			sqlVAL.union.val = &tree.RestoreOptions{IntoDB: sqlDollar[3].union.expr()}
		}
	case 231:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2428
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingFKs: true}
		}
	case 232:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2432
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequences: true}
		}
	case 233:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2436
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequenceOwners: true}
		}
	case 234:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2440
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingViews: true}
		}
	case 235:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2446
		{
			sqlVAL.str = strings.ToUpper(sqlDollar[1].str)
		}
	case 236:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2483
		{

			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[4].union.expr()}, Options: sqlDollar[6].union.kvOptions()}
		}
	case 237:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2488
		{
			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[3].union.expr()}, Options: sqlDollar[4].union.kvOptions()}
		}
	case 238:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2492
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[7].union.expr()}, Options: sqlDollar[9].union.kvOptions()}
		}
	case 239:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2498
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[6].union.expr()}, Options: sqlDollar[7].union.kvOptions()}
		}
	case 240:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2503
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateFile: sqlDollar[6].union.expr(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 241:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2508
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateDefs: sqlDollar[5].union.tblDefs(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 242:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2513
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: sqlDollar[5].union.nameList(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 243:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2518
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: nil, FileFormat: sqlDollar[4].str, Files: sqlDollar[7].union.exprs(), Options: sqlDollar[9].union.kvOptions()}
		}
	case 244:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2522
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 245:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2538
		{
			sqlVAL.union.val = &tree.Export{Query: sqlDollar[7].union.slct(), FileFormat: sqlDollar[3].str, File: sqlDollar[4].union.expr(), Options: sqlDollar[5].union.kvOptions()}
		}
	case 246:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2541
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 247:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2545
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 248:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2549
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 249:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2557
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 250:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2561
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 251:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2567
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 252:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2571
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 253:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2577
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 254:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2581
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 255:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2585
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 256:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2589
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 257:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2595
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 258:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2599
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[3].union.kvOption())
		}
	case 259:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2605
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 260:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2609
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 261:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2613
		{
			sqlVAL.union.val = nil
		}
	case 262:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2625
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CopyFrom{
				Table:   name,
				Columns: sqlDollar[3].union.nameList(),
				Stdin:   true,
				Options: *sqlDollar[6].union.copyOptions(),
			}
		}
	case 263:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2637
		{
			sqlVAL.union.val = sqlDollar[2].union.copyOptions()
		}
	case 264:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2641
		{
			sqlVAL.union.val = &tree.CopyOptions{}
		}
	case 265:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2647
		{
			sqlVAL.union.val = sqlDollar[1].union.copyOptions()
		}
	case 266:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2651
		{
			if err := sqlDollar[1].union.copyOptions().CombineWith(sqlDollar[2].union.copyOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 267:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2659
		{
			sqlVAL.union.val = &tree.CopyOptions{Destination: sqlDollar[3].union.expr()}
		}
	case 268:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2663
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatBinary}
		}
	case 270:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2671
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 272:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2672
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 274:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2673
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 275:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2674
		{
			return helpWith(sqllex, "CANCEL")
		}
	case 276:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2684
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.CancelJob,
			}
		}
	case 277:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2692
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 278:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2694
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 279:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2698
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 280:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2701
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 281:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2711
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 282:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2720
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 283:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2728
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 284:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2730
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 285:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2734
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 286:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2737
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 287:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2747
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 288:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2756
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 289:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2764
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 290:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2766
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 291:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2770
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 292:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2773
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 293:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2777
		{
			sqlVAL.union.val = &tree.CommentOnDatabase{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 294:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2781
		{
			sqlVAL.union.val = &tree.CommentOnTable{Table: sqlDollar[4].union.unresolvedObjectName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 295:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2785
		{
			varName, err := sqlDollar[4].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[4].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = &tree.CommentOnColumn{ColumnItem: columnItem, Comment: sqlDollar[6].union.strPtr()}
		}
	case 296:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2798
		{
			sqlVAL.union.val = &tree.CommentOnIndex{Index: sqlDollar[4].union.tableIndexName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 297:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2804
		{
			t := sqlDollar[1].str
			sqlVAL.union.val = &t
		}
	case 298:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2809
		{
			var str *string
			sqlVAL.union.val = str
		}
	case 300:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2821
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 303:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2823
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 305:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2824
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 306:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2825
		{
		}
	case 307:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2826
		{
			return helpWith(sqllex, "CREATE")
		}
	case 308:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2829
		{
			return unimplemented(sqllex, "create aggregate")
		}
	case 309:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2830
		{
			return unimplemented(sqllex, "create cast")
		}
	case 310:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2831
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create constraint")
		}
	case 311:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2832
		{
			return unimplemented(sqllex, "create conversion")
		}
	case 312:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2833
		{
			return unimplemented(sqllex, "create def conv")
		}
	case 313:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2834
		{
			return unimplemented(sqllex, "create extension "+sqlDollar[6].str)
		}
	case 314:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2835
		{
			return unimplemented(sqllex, "create extension "+sqlDollar[3].str)
		}
	case 315:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2836
		{
			return unimplemented(sqllex, "create foreign table")
		}
	case 316:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2837
		{
			return unimplemented(sqllex, "create fdw")
		}
	case 317:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2838
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 318:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2839
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 319:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2840
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create language "+sqlDollar[6].str)
		}
	case 320:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2841
		{
			return unimplementedWithIssue(sqllex, 41649)
		}
	case 321:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2842
		{
			return unimplemented(sqllex, "create operator")
		}
	case 322:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2843
		{
			return unimplemented(sqllex, "create publication")
		}
	case 323:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2844
		{
			return unimplemented(sqllex, "create rule")
		}
	case 324:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2845
		{
			return unimplemented(sqllex, "create server")
		}
	case 325:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2846
		{
			return unimplemented(sqllex, "create subscription")
		}
	case 326:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2847
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "create text")
		}
	case 327:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2848
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create")
		}
	case 328:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2851
		{
		}
	case 329:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2852
		{
		}
	case 330:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2855
		{
		}
	case 331:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2856
		{
		}
	case 332:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2859
		{
		}
	case 333:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2860
		{
		}
	case 334:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2863
		{
			return unimplemented(sqllex, "drop aggregate")
		}
	case 335:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2864
		{
			return unimplemented(sqllex, "drop cast")
		}
	case 336:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2865
		{
			return unimplemented(sqllex, "drop collation")
		}
	case 337:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2866
		{
			return unimplemented(sqllex, "drop conversion")
		}
	case 338:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2867
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "drop")
		}
	case 339:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2868
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[5].str)
		}
	case 340:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2869
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[3].str)
		}
	case 341:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2870
		{
			return unimplemented(sqllex, "drop foreign table")
		}
	case 342:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2871
		{
			return unimplemented(sqllex, "drop fdw")
		}
	case 343:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2872
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop function")
		}
	case 344:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2873
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop language "+sqlDollar[4].str)
		}
	case 345:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2874
		{
			return unimplemented(sqllex, "drop operator")
		}
	case 346:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2875
		{
			return unimplemented(sqllex, "drop publication")
		}
	case 347:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2876
		{
			return unimplemented(sqllex, "drop rule")
		}
	case 348:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2877
		{
			return unimplemented(sqllex, "drop server")
		}
	case 349:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2878
		{
			return unimplemented(sqllex, "drop subscription")
		}
	case 350:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2879
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "drop text")
		}
	case 351:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2880
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "drop")
		}
	case 354:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2884
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 356:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2885
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 358:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2886
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 360:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2887
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 362:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2888
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 363:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2890
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 365:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2891
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 367:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2892
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 369:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2893
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 370:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2903
		{
			sqlVAL.union.val = &tree.CreateStats{
				Name:        tree.Name(sqlDollar[3].str),
				ColumnNames: sqlDollar[4].union.nameList(),
				Table:       sqlDollar[6].union.tblExpr(),
				Options:     *sqlDollar[7].union.createStatsOptions(),
			}
		}
	case 371:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2911
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 372:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2915
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 373:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2919
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 374:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2925
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 375:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2929
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
			}
		}
	case 376:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2938
		{

			sqlVAL.union.val = sqlDollar[3].union.createStatsOptions()
		}
	case 377:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2945
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 378:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2951
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{}
		}
	case 379:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2957
		{
			sqlVAL.union.val = sqlDollar[1].union.createStatsOptions()
		}
	case 380:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2961
		{
			a := sqlDollar[1].union.createStatsOptions()
			b := sqlDollar[2].union.createStatsOptions()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 381:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2972
		{

			value, _ := constant.Float64Val(sqlDollar[2].union.numVal().AsConstantValue())
			if value < 0.0 || value >= 1.0 {
				sqllex.Error("THROTTLING fraction must be between 0 and 1")
				return 1
			}
			sqlVAL.union.val = &tree.CreateStatsOptions{
				Throttling: value,
			}
		}
	case 382:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2984
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 383:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2992
		{
			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				SinkURI: sqlDollar[5].union.expr(),
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 384:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3000
		{

			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 385:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3010
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[1].union.tablePatterns()}
		}
	case 386:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3014
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 387:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3020
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()}
		}
	case 388:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3024
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedObjectName().ToUnresolvedName())
		}
	case 389:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3031
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 390:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3035
		{

			sqlVAL.union.val = nil
		}
	case 391:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3049
		{
			sqlVAL.union.val = &tree.Delete{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[4].union.tblExpr(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[6].union.expr()),
				OrderBy:   sqlDollar[7].union.orderBy(),
				Limit:     sqlDollar[8].union.limit(),
				Returning: sqlDollar[9].union.retClause(),
			}
		}
	case 392:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3059
		{
			return helpWith(sqllex, "DELETE")
		}
	case 393:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3062
		{
			return unimplementedWithIssueDetail(sqllex, 40963, "delete using")
		}
	case 394:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3063
		{
		}
	case 395:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3071
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeAll}
		}
	case 396:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3074
		{
			return unimplemented(sqllex, "discard plans")
		}
	case 397:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3075
		{
			return unimplemented(sqllex, "discard sequences")
		}
	case 398:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3076
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 399:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3077
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 400:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3078
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 403:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3087
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 405:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3088
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 406:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3089
		{
		}
	case 407:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3090
		{
			return helpWith(sqllex, "DROP")
		}
	case 409:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3093
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 411:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3094
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 413:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3095
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 415:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3096
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 417:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3097
		{
			return helpWith(sqllex, "DROP SEQUENCE")
		}
	case 419:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3098
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 421:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3099
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 422:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3107
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 423:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3111
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 424:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3114
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 425:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3122
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 426:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3126
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 427:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3129
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 428:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3137
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 429:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3141
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 430:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3144
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 431:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3152
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[4].union.newTableIndexNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[5].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 432:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3161
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[6].union.newTableIndexNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[7].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 433:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3169
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 434:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3177
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[3].str),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 435:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3185
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[5].str),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 436:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3192
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 437:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3199
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[3].union.unresolvedObjectNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 438:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3207
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[5].union.unresolvedObjectNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 439:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3214
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 440:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3218
		{
			sqlVAL.union.val = []*tree.UnresolvedObjectName{sqlDollar[1].union.unresolvedObjectName()}
		}
	case 441:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3222
		{
			sqlVAL.union.val = append(sqlDollar[1].union.unresolvedObjectNames(), sqlDollar[3].union.unresolvedObjectName())
		}
	case 442:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3231
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[3].union.strs(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 443:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3239
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[5].union.strs(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 444:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3246
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 445:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3250
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 446:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3254
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 447:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3264
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[3].union.exprs(), IfExists: false, IsRole: sqlDollar[2].union.bool()}
		}
	case 448:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3268
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[5].union.exprs(), IfExists: true, IsRole: sqlDollar[2].union.bool()}
		}
	case 449:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3271
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 450:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3275
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 451:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3280
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 452:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3293
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 453:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3298
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 454:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3300
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 455:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3305
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 456:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3309
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 457:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3331
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(nil, sqlDollar[2].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 458:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3338
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 459:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3340
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(sqlDollar[3].union.strs(), sqlDollar[5].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 460:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3348
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"DISTSQL", "ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 461:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3356
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"DISTSQL", "ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 462:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3364
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 463:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3372
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 464:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3383
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 467:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3387
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 471:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3390
		{
			return helpWith(sqllex, "DELETE")
		}
	case 474:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3392
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 476:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3393
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 478:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3394
		{
			return helpWith(sqllex, "INSERT")
		}
	case 482:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3397
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 485:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3399
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 487:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3402
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 491:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3407
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 493:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3408
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 495:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3409
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 497:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3414
		{
			return helpWith(sqllex, "DELETE")
		}
	case 499:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3415
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 501:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3416
		{
			return helpWith(sqllex, "INSERT")
		}
	case 502:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3418
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 505:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3422
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 507:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3423
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 508:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3427
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 509:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3431
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 510:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3441
		{
			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: sqlDollar[5].union.stmt(),
			}
		}
	case 511:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3449
		{

			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: &tree.CannedOptPlan{Plan: sqlDollar[7].str},
			}
		}
	case 512:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3457
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 513:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3461
		{
			sqlVAL.union.val = sqlDollar[2].union.typeReferences()
		}
	case 514:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3465
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference(nil)
		}
	case 515:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3475
		{
			sqlVAL.union.val = &tree.Execute{
				Name:   tree.Name(sqlDollar[2].str),
				Params: sqlDollar[3].union.exprs(),
			}
		}
	case 516:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3482
		{

			sqlVAL.union.val = &tree.Execute{
				Name:        tree.Name(sqlDollar[2].str),
				Params:      sqlDollar[3].union.exprs(),
				DiscardRows: true,
			}
		}
	case 517:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3490
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 518:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3494
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 519:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3498
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 520:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3508
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[2].str)}
		}
	case 521:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3512
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[3].str)}
		}
	case 522:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3516
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 523:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3520
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 524:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3523
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 525:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3543
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 526:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3547
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 527:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3551
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: true}
		}
	case 528:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3554
		{
			return helpWith(sqllex, "GRANT")
		}
	case 529:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3574
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 530:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3578
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 531:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3582
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[5].union.nameList(), Members: sqlDollar[7].union.nameList(), AdminOption: true}
		}
	case 532:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3585
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 533:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3590
		{
			sqlVAL.union.val = privilege.List{privilege.ALL}
		}
	case 534:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3594
		{
			privList, err := privilege.ListFromStrings(sqlDollar[1].union.nameList().ToStrings())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = privList
		}
	case 535:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3604
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 536:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3608
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 542:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3622
		{
			return helpWith(sqllex, "RESET")
		}
	case 544:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3623
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 545:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3631
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 546:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3635
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[3].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 547:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3638
		{
			return helpWith(sqllex, "RESET")
		}
	case 548:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3646
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: tree.DefaultVal{}}
		}
	case 549:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3649
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 550:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3660
		{
			sqlVAL.union.val = &tree.SetVar{Name: "database", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 551:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3663
		{
			return helpWith(sqllex, "USE")
		}
	case 553:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3667
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 554:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3668
		{
		}
	case 555:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3669
		{
			return unimplemented(sqllex, "set constraints")
		}
	case 556:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3670
		{
			return unimplementedWithIssue(sqllex, 32562)
		}
	case 558:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3674
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 560:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3675
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 562:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3676
		{
			return helpWith(sqllex, "USE")
		}
	case 565:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3692
		{
			return helpWith(sqllex, "SCRUB")
		}
	case 566:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3707
		{
			sqlVAL.union.val = &tree.Scrub{Typ: tree.ScrubDatabase, Database: tree.Name(sqlDollar[4].str), AsOf: sqlDollar[5].union.asOfClause()}
		}
	case 567:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3710
		{
			return helpWith(sqllex, "SCRUB DATABASE")
		}
	case 568:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3728
		{
			sqlVAL.union.val = &tree.Scrub{
				Typ:     tree.ScrubTable,
				Table:   sqlDollar[4].union.unresolvedObjectName(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: sqlDollar[6].union.scrubOptions(),
			}
		}
	case 569:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3736
		{
			return helpWith(sqllex, "SCRUB TABLE")
		}
	case 570:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3740
		{
			sqlVAL.union.val = sqlDollar[3].union.scrubOptions()
		}
	case 571:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3744
		{
			sqlVAL.union.val = tree.ScrubOptions{}
		}
	case 572:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3750
		{
			sqlVAL.union.val = tree.ScrubOptions{sqlDollar[1].union.scrubOption()}
		}
	case 573:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3754
		{
			sqlVAL.union.val = append(sqlDollar[1].union.scrubOptions(), sqlDollar[3].union.scrubOption())
		}
	case 574:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3760
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{}
		}
	case 575:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3764
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{IndexNames: sqlDollar[3].union.nameList()}
		}
	case 576:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3768
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{}
		}
	case 577:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3772
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{ConstraintNames: sqlDollar[3].union.nameList()}
		}
	case 578:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3776
		{
			sqlVAL.union.val = &tree.ScrubOptionPhysical{}
		}
	case 579:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3787
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: sqlDollar[6].union.expr()}
		}
	case 580:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3790
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 583:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3800
		{
			sqlVAL.union.val = &tree.SetVar{Values: sqlDollar[4].union.exprs()}
		}
	case 584:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3816
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 585:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3820
		{
			sqlVAL.union.val = sqlDollar[2].union.stmt()
		}
	case 586:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3825
		{
			sqlVAL.union.val = &tree.SetSessionCharacteristics{Modes: sqlDollar[6].union.transactionModes()}
		}
	case 587:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3842
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[3].union.transactionModes()}
		}
	case 588:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3845
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 589:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3847
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[4].union.transactionModes()}
		}
	case 590:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3850
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 591:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3854
		{

			varName := sqlDollar[1].union.strs()
			if len(varName) == 1 && varName[0] == "tracing" {
				sqlVAL.union.val = &tree.SetTracing{Values: sqlDollar[3].union.exprs()}
			} else {
				sqlVAL.union.val = &tree.SetVar{Name: strings.Join(sqlDollar[1].union.strs(), "."), Values: sqlDollar[3].union.exprs()}
			}
		}
	case 593:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3873
		{

			sqlVAL.union.val = &tree.SetVar{Name: "timezone", Values: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 594:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3880
		{

			sqlVAL.union.val = &tree.SetVar{Name: "search_path", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 595:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3885
		{

			sqlVAL.union.val = &tree.SetSessionAuthorizationDefault{}
		}
	case 596:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3890
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 598:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3895
		{
			return unimplemented(sqllex, "set from current")
		}
	case 599:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3896
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 600:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3904
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 601:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3909
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 602:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3916
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 603:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3920
		{
			sqlVAL.union.val = append([]string{sqlDollar[1].str}, sqlDollar[2].union.strs()...)
		}
	case 604:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3926
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 605:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3930
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 607:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3937
		{
			sqlVAL.union.val = tree.Expr(&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}})
		}
	case 610:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3958
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 611:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3962
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 612:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3968
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 613:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3972
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 614:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3976
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 615:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3980
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 616:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3984
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 617:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3990
		{
			sqlVAL.union.val = tree.Low
		}
	case 618:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3994
		{
			sqlVAL.union.val = tree.Normal
		}
	case 619:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3998
		{
			sqlVAL.union.val = tree.High
		}
	case 620:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4009
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 621:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4013
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 622:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4017
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 624:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4022
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 625:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4026
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 627:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4040
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 629:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4041
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 631:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4042
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 633:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4043
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 635:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4044
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 637:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4045
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 639:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4046
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 642:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4048
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 644:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4049
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 646:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4050
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 648:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4051
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 650:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4052
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 652:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4053
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 654:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4054
		{
			return helpWith(sqllex, "SHOW QUERIES")
		}
	case 656:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4055
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 659:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4057
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 661:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4058
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 663:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4059
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 665:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4060
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 667:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4061
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 669:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4062
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 671:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4063
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 673:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4064
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 675:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4065
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 677:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4066
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 679:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4067
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 681:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4068
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 683:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4070
		{
			return helpWith(sqllex, "SHOW")
		}
	case 685:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4071
		{
			return helpWith(sqllex, "SHOW LAST QUERY STATISTICS")
		}
	case 686:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4076
		{
		}
	case 687:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4077
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 688:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4080
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 689:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4084
		{

			return purposelyUnimplemented(sqllex, "reindex table", "CockroachDB does not require reindexing.")
		}
	case 690:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4089
		{

			return purposelyUnimplemented(sqllex, "reindex index", "CockroachDB does not require reindexing.")
		}
	case 691:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4094
		{

			return purposelyUnimplemented(sqllex, "reindex database", "CockroachDB does not require reindexing.")
		}
	case 692:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4099
		{

			return purposelyUnimplemented(sqllex, "reindex system", "CockroachDB does not require reindexing.")
		}
	case 693:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4109
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[2].str}
		}
	case 694:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4110
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[3].str}
		}
	case 695:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4111
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 699:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4122
		{
			sqlVAL.str = "client_encoding"
		}
	case 701:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4125
		{
			sqlVAL.str = "timezone"
		}
	case 702:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4126
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 703:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4140
		{
			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 704:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4144
		{

			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[7].union.unresolvedObjectName(), UsingJSON: true}
		}
	case 705:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4148
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 706:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4159
		{

			id, err := sqlDollar[3].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ShowHistogram{HistogramID: id}
		}
	case 707:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4167
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 708:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4175
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupDefaultDetails,
				Path:    sqlDollar[3].union.expr(),
				Options: sqlDollar[4].union.kvOptions(),
			}
		}
	case 709:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4183
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:              tree.BackupDefaultDetails,
				ShouldIncludeSchemas: true,
				Path:                 sqlDollar[4].union.expr(),
				Options:              sqlDollar[5].union.kvOptions(),
			}
		}
	case 710:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4192
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupRangeDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 711:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4201
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupFileDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 712:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4209
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 713:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4219
		{
			sqlVAL.union.val = &tree.ShowClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), ".")}
		}
	case 714:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4223
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 715:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4226
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 716:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4228
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 717:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4231
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 718:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4233
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 719:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4237
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 720:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4240
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 721:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4248
		{
			sqlVAL.union.val = &tree.ShowColumns{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 722:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4251
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 723:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4259
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 724:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4263
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsDB: true, Database: tree.Name(sqlDollar[5].str)}
		}
	case 725:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4267
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsIndex: true, Index: sqlDollar[5].union.tableIndexName()}
		}
	case 726:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4271
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 727:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4274
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 728:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4282
		{
			sqlVAL.union.val = &tree.ShowDatabases{WithComment: sqlDollar[3].union.bool()}
		}
	case 729:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4285
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 730:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4292
		{
			sqlVAL.union.val = &tree.ShowEnums{}
		}
	case 731:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4295
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 732:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4308
		{
			lst := sqlDollar[3].union.targetListPtr()
			if lst != nil && lst.ForRoles {
				sqlVAL.union.val = &tree.ShowRoleGrants{Roles: lst.Roles, Grantees: sqlDollar[4].union.nameList()}
			} else {
				sqlVAL.union.val = &tree.ShowGrants{Targets: lst, Grantees: sqlDollar[4].union.nameList()}
			}
		}
	case 733:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4316
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 734:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4324
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 735:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4327
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 736:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4329
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 737:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4333
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 738:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4337
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 739:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4340
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 740:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4342
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 741:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4346
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 742:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4349
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 743:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4357
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 744:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4360
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 745:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4362
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 746:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4365
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 747:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4373
		{
			sqlVAL.union.val = &tree.ShowQueries{All: false, Cluster: sqlDollar[2].union.bool()}
		}
	case 748:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4376
		{
			return helpWith(sqllex, "SHOW QUERIES")
		}
	case 749:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4378
		{
			sqlVAL.union.val = &tree.ShowQueries{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 750:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4381
		{
			return helpWith(sqllex, "SHOW QUERIES")
		}
	case 751:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4385
		{
			sqlVAL.union.val = true
		}
	case 752:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4387
		{
			sqlVAL.union.val = true
		}
	case 753:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4389
		{
			sqlVAL.union.val = false
		}
	case 754:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4400
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: true}
		}
	case 755:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4404
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: false}
		}
	case 756:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4407
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 757:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4408
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 758:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4410
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[3].union.slct()}
		}
	case 759:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4414
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[5].union.slct(), Block: true}
		}
	case 760:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4418
		{
			sqlVAL.union.val = &tree.ShowJobs{Schedules: sqlDollar[3].union.slct()}
		}
	case 761:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4421
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 762:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4423
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
			}
		}
	case 763:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4431
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				Block: true,
			}
		}
	case 764:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4439
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 765:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4449
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ExecutorType:   sqlDollar[3].union.executorType(),
			}
		}
	case 766:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4455
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 767:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4457
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: sqlDollar[2].union.scheduleState(),
				ExecutorType:   sqlDollar[4].union.executorType(),
			}
		}
	case 768:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4463
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 769:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4465
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ScheduleID:     sqlDollar[3].union.expr(),
			}
		}
	case 770:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4471
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 771:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4475
		{
			sqlVAL.union.val = tree.ActiveSchedules
		}
	case 772:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4479
		{
			sqlVAL.union.val = tree.PausedSchedules
		}
	case 773:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4485
		{
			sqlVAL.union.val = tree.InvalidExecutor
		}
	case 774:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4489
		{
			sqlVAL.union.val = tree.ScheduledBackupExecutor
		}
	case 775:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4500
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceRaw, Compact: sqlDollar[2].union.bool()}
		}
	case 776:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4503
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 777:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4505
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceKV, Compact: sqlDollar[2].union.bool()}
		}
	case 778:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4508
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 779:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4510
		{

			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceReplica, Compact: sqlDollar[2].union.bool()}
		}
	case 780:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4514
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 781:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4517
		{
			sqlVAL.union.val = true
		}
	case 782:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4518
		{
			sqlVAL.union.val = false
		}
	case 783:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4526
		{
			sqlVAL.union.val = &tree.ShowSessions{Cluster: sqlDollar[2].union.bool()}
		}
	case 784:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4529
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 785:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4531
		{
			sqlVAL.union.val = &tree.ShowSessions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 786:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4534
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 787:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4542
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
				WithComment: sqlDollar[7].union.bool()}
		}
	case 788:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4552
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
				WithComment: sqlDollar[5].union.bool()}
		}
	case 789:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4562
		{
			sqlVAL.union.val = &tree.ShowTables{WithComment: sqlDollar[3].union.bool()}
		}
	case 790:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4565
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 791:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4568
		{
			sqlVAL.union.val = true
		}
	case 792:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4569
		{
			sqlVAL.union.val = false
		}
	case 793:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4576
		{
			sqlVAL.union.val = &tree.ShowSchemas{Database: tree.Name(sqlDollar[4].str)}
		}
	case 794:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4580
		{
			sqlVAL.union.val = &tree.ShowSchemas{}
		}
	case 795:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4583
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 796:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4590
		{
			sqlVAL.union.val = &tree.ShowSequences{Database: tree.Name(sqlDollar[4].str)}
		}
	case 797:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4594
		{
			sqlVAL.union.val = &tree.ShowSequences{}
		}
	case 798:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4597
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 799:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4604
		{

			sqlVAL.union.val = &tree.ShowSyntax{Statement: sqlDollar[3].str}
		}
	case 800:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4608
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 801:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4615
		{

			sqlVAL.union.val = &tree.ShowLastQueryStatistics{}
		}
	case 802:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4625
		{
			sqlVAL.union.val = &tree.ShowSavepointStatus{}
		}
	case 803:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4628
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 804:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4636
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_isolation"}
		}
	case 805:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4641
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_priority"}
		}
	case 806:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4646
		{

			sqlVAL.union.val = &tree.ShowTransactionStatus{}
		}
	case 807:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4650
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 808:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4658
		{
			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[3].union.unresolvedObjectName()}
		}
	case 809:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4662
		{

			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 810:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4666
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 814:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4679
		{
			sqlVAL.union.val = &tree.ShowUsers{}
		}
	case 815:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4682
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 816:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4690
		{
			sqlVAL.union.val = &tree.ShowRoles{}
		}
	case 817:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4693
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 818:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4697
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[6].str)}}
		}
	case 819:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4701
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{Database: tree.Name(sqlDollar[6].str)}}
		}
	case 820:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4705
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 821:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4713
		{
			name := sqlDollar[9].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 822:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4721
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 823:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4728
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[9].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 824:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4735
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 825:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4739
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 826:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4750
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: tree.TableIndexName{Table: name},
			}
		}
	case 827:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4758
		{
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: sqlDollar[5].union.tableIndexName(),
			}
		}
	case 828:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4764
		{
			return helpWith(sqllex, "SHOW RANGE")
		}
	case 829:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4773
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 830:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4778
		{
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: sqlDollar[5].union.tableIndexName()}
		}
	case 831:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4782
		{
			sqlVAL.union.val = &tree.ShowRanges{DatabaseName: tree.Name(sqlDollar[5].str)}
		}
	case 832:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4785
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 833:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4789
		{

			sqlVAL.union.val = &tree.ShowFingerprints{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 834:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4796
		{
			tmp := sqlDollar[2].union.targetList()
			sqlVAL.union.val = &tmp
		}
	case 835:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4801
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 836:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4921
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 837:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4925
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 838:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4929
		{

			sqlVAL.union.val = tree.TargetList{
				Tables:   tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}},
				ForRoles: sqlDollar[1].str == "role",
			}
		}
	case 839:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4968
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{sqlDollar[1].union.unresolvedName()}}
		}
	case 840:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4972
		{
			remainderPats := sqlDollar[3].union.tablePatterns()
			sqlVAL.union.val = tree.TargetList{Tables: append(tree.TablePatterns{sqlDollar[1].union.unresolvedName()}, remainderPats...)}
		}
	case 841:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4977
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 842:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4981
		{
			tenID := uint64(sqlDollar[2].union.int64())
			if tenID == 0 {
				return setErr(sqllex, errors.New("invalid tenant ID"))
			}
			sqlVAL.union.val = tree.TargetList{Tenant: roachpb.MakeTenantID(tenID)}
		}
	case 843:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4989
		{
			sqlVAL.union.val = tree.TargetList{Databases: sqlDollar[2].union.nameList()}
		}
	case 844:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4998
		{
			sqlVAL.union.val = tree.TargetList{ForRoles: true, Roles: sqlDollar[2].union.nameList()}
		}
	case 846:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5005
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 847:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5009
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 849:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5022
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 851:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5023
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 852:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5024
		{
			return helpWith(sqllex, "PAUSE")
		}
	case 854:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5034
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 856:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5035
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 857:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5036
		{
			return helpWith(sqllex, "RESUME")
		}
	case 858:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5046
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
			}
		}
	case 859:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5054
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 860:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5056
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 861:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5060
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 862:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5063
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 863:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5068
		{
			sqlVAL.union.val = sqlDollar[3].union.slct()
		}
	case 864:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5072
		{
			sqlVAL.union.val = &tree.Select{
				Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
			}
		}
	case 865:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5087
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseSchedule,
			}
		}
	case 866:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5095
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 867:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5097
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.PauseSchedule,
			}
		}
	case 868:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5103
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 869:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5111
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema: sqlDollar[3].str,
			}
		}
	case 870:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5117
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].str,
				IfNotExists: true,
			}
		}
	case 871:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5123
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 872:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5134
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].str,
				Cmd: &tree.AlterSchemaRename{
					NewName: sqlDollar[6].str,
				},
			}
		}
	case 873:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5143
		{
			return unimplementedWithIssueDetail(sqllex, 50882, "ALTER SCHEMA OWNER TO")
		}
	case 874:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5146
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 875:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5185
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Interleave:    sqlDollar[8].union.interleave(),
				Defs:          sqlDollar[6].union.tblDefs(),
				AsSource:      nil,
				PartitionBy:   sqlDollar[9].union.partitionBy(),
				Persistence:   sqlDollar[2].union.persistence(),
				StorageParams: sqlDollar[10].union.storageParams(),
				OnCommit:      sqlDollar[11].union.createTableOnCommitSetting(),
			}
		}
	case 876:
		sqlDollar = sqlS[sqlpt-14 : sqlpt+1]
//line sql-gen.y:5200
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Interleave:    sqlDollar[11].union.interleave(),
				Defs:          sqlDollar[9].union.tblDefs(),
				AsSource:      nil,
				PartitionBy:   sqlDollar[12].union.partitionBy(),
				Persistence:   sqlDollar[2].union.persistence(),
				StorageParams: sqlDollar[13].union.storageParams(),
				OnCommit:      sqlDollar[14].union.createTableOnCommitSetting(),
			}
		}
	case 877:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5217
		{
			sqlVAL.union.val = nil
		}
	case 878:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5221
		{

			sqlVAL.union.val = nil
		}
	case 879:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5227
		{

			sqlVAL.union.val = sqlDollar[3].union.storageParams()
		}
	case 880:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5232
		{
			return unimplemented(sqllex, "create table with oids")
		}
	case 881:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5238
		{
			sqlVAL.union.val = tree.CreateTableOnCommitUnset
		}
	case 882:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5242
		{

			sqlVAL.union.val = tree.CreateTableOnCommitPreserveRows
		}
	case 883:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5247
		{

			return unimplementedWithIssueDetail(sqllex, 46556, "delete rows")
		}
	case 884:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5252
		{

			return unimplementedWithIssueDetail(sqllex, 46556, "drop")
		}
	case 885:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5259
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 886:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5263
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 887:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5269
		{
			sqlVAL.union.val = []tree.StorageParam{sqlDollar[1].union.storageParam()}
		}
	case 888:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5273
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParams(), sqlDollar[3].union.storageParam())
		}
	case 889:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5279
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Interleave:    nil,
				Defs:          sqlDollar[5].union.tblDefs(),
				AsSource:      sqlDollar[8].union.slct(),
				StorageParams: sqlDollar[6].union.storageParams(),
				OnCommit:      sqlDollar[10].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 890:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:5293
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Interleave:    nil,
				Defs:          sqlDollar[8].union.tblDefs(),
				AsSource:      sqlDollar[11].union.slct(),
				StorageParams: sqlDollar[9].union.storageParams(),
				OnCommit:      sqlDollar[13].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 891:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5308
		{
		}
	case 892:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5309
		{
		}
	case 893:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5310
		{
			return unimplemented(sqllex, "create table as with no data")
		}
	case 894:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5328
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 895:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5329
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 896:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5330
		{
			sqlVAL.union.val = tree.PersistencePermanent
		}
	case 898:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5334
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 899:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5335
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 900:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5336
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 901:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5337
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 902:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5338
		{
			sqlVAL.union.val = tree.PersistenceUnlogged
		}
	case 904:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5343
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 905:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5349
		{
			sqlVAL.union.val = tree.TableDefs{sqlDollar[1].union.tblDef()}
		}
	case 906:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5353
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 907:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5359
		{
			sqlVAL.union.val = sqlDollar[1].union.colDef()
		}
	case 910:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5365
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 911:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5369
		{
			sqlVAL.union.val = &tree.LikeTableDef{
				Name:    sqlDollar[2].union.unresolvedObjectName().ToTableName(),
				Options: sqlDollar[3].union.likeTableOptionList(),
			}
		}
	case 912:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5378
		{
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), sqlDollar[3].union.likeTableOption())
		}
	case 913:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5382
		{
			opt := sqlDollar[3].union.likeTableOption()
			opt.Excluded = true
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), opt)
		}
	case 914:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5388
		{
			sqlVAL.union.val = []tree.LikeTableOption(nil)
		}
	case 915:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5393
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding comments")
		}
	case 916:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5394
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptConstraints}
		}
	case 917:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5395
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptDefaults}
		}
	case 918:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5396
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding identity")
		}
	case 919:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5397
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptGenerated}
		}
	case 920:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5398
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptIndexes}
		}
	case 921:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5399
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding statistics")
		}
	case 922:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5400
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding storage")
		}
	case 923:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5401
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptAll}
		}
	case 924:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5406
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.InterleaveDef{
				Parent:       name,
				Fields:       sqlDollar[6].union.nameList(),
				DropBehavior: sqlDollar[8].union.dropBehavior(),
			}
		}
	case 925:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5415
		{
			sqlVAL.union.val = (*tree.InterleaveDef)(nil)
		}
	case 926:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5422
		{

			sqlVAL.union.val = tree.DropCascade
		}
	case 927:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5427
		{

			sqlVAL.union.val = tree.DropRestrict
		}
	case 928:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5432
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 929:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5438
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 931:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5445
		{
			sqlVAL.str = ""
		}
	case 933:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5452
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 934:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5458
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[5].union.nameList(),
				List:   sqlDollar[8].union.listPartitions(),
			}
		}
	case 935:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5465
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[5].union.nameList(),
				Range:  sqlDollar[8].union.rangePartitions(),
			}
		}
	case 936:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5472
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 937:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5478
		{
			sqlVAL.union.val = []tree.ListPartition{sqlDollar[1].union.listPartition()}
		}
	case 938:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5482
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listPartitions(), sqlDollar[3].union.listPartition())
		}
	case 939:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5488
		{
			sqlVAL.union.val = tree.ListPartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				Exprs:        sqlDollar[5].union.exprs(),
				Subpartition: sqlDollar[7].union.partitionBy(),
			}
		}
	case 940:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5498
		{
			sqlVAL.union.val = []tree.RangePartition{sqlDollar[1].union.rangePartition()}
		}
	case 941:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5502
		{
			sqlVAL.union.val = append(sqlDollar[1].union.rangePartitions(), sqlDollar[3].union.rangePartition())
		}
	case 942:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5508
		{
			sqlVAL.union.val = tree.RangePartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				From:         sqlDollar[5].union.exprs(),
				To:           sqlDollar[9].union.exprs(),
				Subpartition: sqlDollar[11].union.partitionBy(),
			}
		}
	case 943:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5522
		{
			typ := sqlDollar[2].union.typeReference()
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), typ, tree.IsReferenceSerialType(typ), sqlDollar[3].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = tableDef
		}
	case 944:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5533
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 945:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5537
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 946:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5543
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Name: tree.Name(sqlDollar[2].str), Qualification: sqlDollar[3].union.colQualElem()}
		}
	case 947:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5547
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 948:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5551
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: tree.ColumnCollation(sqlDollar[2].str)}
		}
	case 949:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5555
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 950:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5559
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[3].str), Create: true}}
		}
	case 951:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5563
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Create: true}}
		}
	case 952:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5567
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[6].str), Create: true, IfNotExists: true}}
		}
	case 953:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5585
		{
			sqlVAL.union.val = tree.NotNullConstraint{}
		}
	case 954:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5589
		{
			sqlVAL.union.val = tree.NullConstraint{}
		}
	case 955:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5593
		{
			sqlVAL.union.val = tree.UniqueConstraint{}
		}
	case 956:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5597
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 957:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5601
		{
			sqlVAL.union.val = tree.ShardedPrimaryKeyConstraint{
				Sharded:      true,
				ShardBuckets: sqlDollar[8].union.expr(),
			}
		}
	case 958:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5608
		{
			sqlVAL.union.val = &tree.ColumnCheckConstraint{Expr: sqlDollar[3].union.expr()}
		}
	case 959:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5612
		{
			sqlVAL.union.val = &tree.ColumnDefault{Expr: sqlDollar[2].union.expr()}
		}
	case 960:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5616
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ColumnFKConstraint{
				Table:   name,
				Col:     tree.Name(sqlDollar[3].str),
				Actions: sqlDollar[5].union.referenceActions(),
				Match:   sqlDollar[4].union.compositeKeyMatchMethod(),
			}
		}
	case 961:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5626
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr()}
		}
	case 962:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5630
		{
			return unimplemented(sqllex, "virtual computed columns")
		}
	case 963:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5634
		{
			sqllex.Error("use AS ( <expr> ) STORED")
			return 1
		}
	case 964:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5641
		{
		}
	case 965:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5642
		{
		}
	case 966:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5647
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:        tree.Name(sqlDollar[2].str),
				Columns:     sqlDollar[4].union.idxElems(),
				Sharded:     sqlDollar[6].union.shardedIndexDef(),
				Storing:     sqlDollar[7].union.nameList(),
				Interleave:  sqlDollar[8].union.interleave(),
				PartitionBy: sqlDollar[9].union.partitionBy(),
				Predicate:   sqlDollar[10].union.expr(),
			}
		}
	case 967:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5659
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Name:        tree.Name(sqlDollar[3].str),
					Columns:     sqlDollar[5].union.idxElems(),
					Sharded:     sqlDollar[7].union.shardedIndexDef(),
					Storing:     sqlDollar[8].union.nameList(),
					Interleave:  sqlDollar[9].union.interleave(),
					PartitionBy: sqlDollar[10].union.partitionBy(),
					Predicate:   sqlDollar[11].union.expr(),
				},
			}
		}
	case 968:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5673
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:      tree.Name(sqlDollar[3].str),
				Columns:   sqlDollar[5].union.idxElems(),
				Inverted:  true,
				Predicate: sqlDollar[7].union.expr(),
			}
		}
	case 969:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5684
		{
			sqlVAL.union.val = &tree.FamilyTableDef{
				Name:    tree.Name(sqlDollar[2].str),
				Columns: sqlDollar[4].union.nameList(),
			}
		}
	case 970:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5696
		{
			sqlVAL.union.val = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val.(tree.ConstraintTableDef).SetName(tree.Name(sqlDollar[2].str))
		}
	case 971:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5701
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 972:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5707
		{
			sqlVAL.union.val = &tree.CheckConstraintTableDef{
				Expr: sqlDollar[3].union.expr(),
			}
		}
	case 973:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5713
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:     sqlDollar[3].union.idxElems(),
					Storing:     sqlDollar[5].union.nameList(),
					Interleave:  sqlDollar[6].union.interleave(),
					PartitionBy: sqlDollar[7].union.partitionBy(),
					Predicate:   sqlDollar[9].union.expr(),
				},
			}
		}
	case 974:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5725
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:    sqlDollar[4].union.idxElems(),
					Sharded:    sqlDollar[6].union.shardedIndexDef(),
					Interleave: sqlDollar[7].union.interleave(),
				},
				PrimaryKey: true,
			}
		}
	case 975:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5737
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ForeignKeyConstraintTableDef{
				Table:    name,
				FromCols: sqlDollar[4].union.nameList(),
				ToCols:   sqlDollar[8].union.nameList(),
				Match:    sqlDollar[9].union.compositeKeyMatchMethod(),
				Actions:  sqlDollar[10].union.referenceActions(),
			}
		}
	case 976:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5748
		{
			return unimplementedWithIssueDetail(sqllex, 46657, "add constraint exclude using")
		}
	case 977:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5755
		{
			sqlVAL.union.val = sqlDollar[2].union.val
		}
	case 978:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5759
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 979:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5765
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), nil, false, sqlDollar[2].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef
			sqlVAL.union.val = tree.TableDefs{colToTableDef}
		}
	case 980:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5775
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[3].str), nil, false, sqlDollar[4].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef

			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), colToTableDef)
		}
	case 981:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5786
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 982:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5790
		{
			var constraintToTableDef tree.TableDef = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), constraintToTableDef)
		}
	case 983:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5797
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 984:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5803
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns: sqlDollar[4].union.idxElems(),
				},
				PrimaryKey: true,
			}
		}
	case 985:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5814
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 986:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5818
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 987:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5824
		{
			sqlVAL.union.val = tree.IndexElem{Column: tree.Name(sqlDollar[1].str)}
		}
	case 988:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5830
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 989:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5834
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 990:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5840
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 991:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5844
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 992:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5850
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 993:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5855
		{
		}
	case 994:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5856
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "deferrable")
		}
	case 995:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5857
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially deferred")
		}
	case 996:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5858
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially immediate")
		}
	case 997:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5859
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially deferred")
		}
	case 998:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5860
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially immediate")
		}
	case 1002:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5878
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1003:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5882
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1004:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5888
		{
			sqlVAL.union.val = &tree.ShardedIndexDef{
				ShardBuckets: sqlDollar[6].union.expr(),
			}
		}
	case 1005:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5894
		{
			sqlVAL.union.val = (*tree.ShardedIndexDef)(nil)
		}
	case 1006:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5900
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1007:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5904
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1008:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5924
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1009:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5928
		{
			sqlVAL.union.val = tree.MatchFull
		}
	case 1010:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5932
		{
			return unimplementedWithIssueDetail(sqllex, 20305, "match partial")
		}
	case 1011:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5936
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1012:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5945
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction()}
		}
	case 1013:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5949
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction()}
		}
	case 1014:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5953
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction(), Delete: sqlDollar[2].union.referenceAction()}
		}
	case 1015:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5957
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction(), Update: sqlDollar[2].union.referenceAction()}
		}
	case 1016:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5961
		{
			sqlVAL.union.val = tree.ReferenceActions{}
		}
	case 1017:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5967
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1018:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5973
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1019:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5981
		{
			sqlVAL.union.val = tree.NoAction
		}
	case 1020:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5985
		{
			sqlVAL.union.val = tree.Restrict
		}
	case 1021:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5989
		{
			sqlVAL.union.val = tree.Cascade
		}
	case 1022:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5993
		{
			sqlVAL.union.val = tree.SetNull
		}
	case 1023:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5997
		{
			sqlVAL.union.val = tree.SetDefault
		}
	case 1024:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6016
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name:        name,
				Persistence: sqlDollar[2].union.persistence(),
				Options:     sqlDollar[5].union.seqOpts(),
			}
		}
	case 1025:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6025
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name: name, Options: sqlDollar[8].union.seqOpts(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
			}
		}
	case 1026:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6033
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 1028:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6037
		{
			sqlVAL.union.val = []tree.SequenceOption(nil)
		}
	case 1029:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6040
		{
			sqlVAL.union.val = []tree.SequenceOption{sqlDollar[1].union.seqOpt()}
		}
	case 1030:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6041
		{
			sqlVAL.union.val = append(sqlDollar[1].union.seqOpts(), sqlDollar[2].union.seqOpt())
		}
	case 1031:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6044
		{
			return unimplementedWithIssueDetail(sqllex, 25110, sqlDollar[2].union.typeReference().SQLString())
		}
	case 1032:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6045
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCycle}
		}
	case 1033:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6047
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptNoCycle}
		}
	case 1034:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6048
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: nil}
		}
	case 1035:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6049
		{
			varName, err := sqlDollar[3].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[3].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: columnItem}
		}
	case 1036:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6059
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCache, IntVal: &x}
		}
	case 1037:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6062
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x}
		}
	case 1038:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6064
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x, OptionalWord: true}
		}
	case 1039:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6066
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue, IntVal: &x}
		}
	case 1040:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6068
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue}
		}
	case 1041:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6069
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue, IntVal: &x}
		}
	case 1042:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6071
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue}
		}
	case 1043:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6072
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x}
		}
	case 1044:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6074
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x, OptionalWord: true}
		}
	case 1045:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6076
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptVirtual}
		}
	case 1046:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6084
		{
			sqlVAL.union.val = &tree.Truncate{Tables: sqlDollar[3].union.tableNames(), DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 1047:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6087
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 1048:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6091
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[2].union.expr()}
		}
	case 1049:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6095
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: tree.DNull}
		}
	case 1050:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6105
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1051:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6109
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[6].union.expr(), IfNotExists: true, KVOptions: sqlDollar[7].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1052:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6112
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 1053:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6120
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1054:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6124
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[5].union.expr(), IfExists: true, KVOptions: sqlDollar[6].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1055:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6127
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 1056:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6133
		{
			sqlVAL.union.val = true
		}
	case 1057:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6137
		{

			sqlVAL.union.val = true
		}
	case 1058:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6142
		{
			sqlVAL.union.val = false
		}
	case 1059:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6152
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[6].union.nameList(),
				AsSource:    sqlDollar[8].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: false,
				Replace:     false,
			}
		}
	case 1060:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6166
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[8].union.nameList(),
				AsSource:    sqlDollar[10].union.slct(),
				Persistence: sqlDollar[4].union.persistence(),
				IfNotExists: false,
				Replace:     true,
			}
		}
	case 1061:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6178
		{
			name := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[9].union.nameList(),
				AsSource:    sqlDollar[11].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
				Replace:     false,
			}
		}
	case 1062:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6189
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 1063:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6193
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1064:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6197
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1065:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6201
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1066:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6205
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1069:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6213
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 1070:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6217
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[2].union.kvOption())
		}
	case 1071:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6223
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 1072:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6227
		{
			sqlVAL.union.val = nil
		}
	case 1073:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6233
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: sqlDollar[3].union.expr()}
		}
	case 1074:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6237
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: tree.DNull}
		}
	case 1075:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6242
		{
		}
	case 1076:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6243
		{
			return unimplemented(sqllex, "create recursive view")
		}
	case 1077:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6252
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:   sqlDollar[3].union.unresolvedObjectName(),
				Variety:    tree.Enum,
				EnumLabels: sqlDollar[7].union.strs(),
			}
		}
	case 1078:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6259
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 1079:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6261
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1080:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6263
		{
			return unimplementedWithIssue(sqllex, 27791)
		}
	case 1081:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6265
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "base")
		}
	case 1082:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6267
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "shell")
		}
	case 1083:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6269
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "create")
		}
	case 1084:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6273
		{
			sqlVAL.union.val = sqlDollar[1].union.strs()
		}
	case 1085:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6277
		{
			sqlVAL.union.val = []string(nil)
		}
	case 1086:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6283
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 1087:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6287
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 1088:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:6305
		{
			table := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:         tree.Name(sqlDollar[5].str),
				Table:        table,
				Unique:       sqlDollar[2].union.bool(),
				Columns:      sqlDollar[10].union.idxElems(),
				Sharded:      sqlDollar[12].union.shardedIndexDef(),
				Storing:      sqlDollar[13].union.nameList(),
				Interleave:   sqlDollar[14].union.interleave(),
				PartitionBy:  sqlDollar[15].union.partitionBy(),
				Predicate:    sqlDollar[16].union.expr(),
				Inverted:     sqlDollar[8].union.bool(),
				Concurrently: sqlDollar[4].union.bool(),
			}
		}
	case 1089:
		sqlDollar = sqlS[sqlpt-19 : sqlpt+1]
//line sql-gen.y:6322
		{
			table := sqlDollar[10].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:         tree.Name(sqlDollar[8].str),
				Table:        table,
				Unique:       sqlDollar[2].union.bool(),
				IfNotExists:  true,
				Columns:      sqlDollar[13].union.idxElems(),
				Sharded:      sqlDollar[15].union.shardedIndexDef(),
				Storing:      sqlDollar[16].union.nameList(),
				Interleave:   sqlDollar[17].union.interleave(),
				PartitionBy:  sqlDollar[18].union.partitionBy(),
				Inverted:     sqlDollar[11].union.bool(),
				Predicate:    sqlDollar[19].union.expr(),
				Concurrently: sqlDollar[4].union.bool(),
			}
		}
	case 1090:
		sqlDollar = sqlS[sqlpt-15 : sqlpt+1]
//line sql-gen.y:6340
		{
			table := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:         tree.Name(sqlDollar[6].str),
				Table:        table,
				Unique:       sqlDollar[2].union.bool(),
				Inverted:     true,
				Columns:      sqlDollar[10].union.idxElems(),
				Storing:      sqlDollar[12].union.nameList(),
				Interleave:   sqlDollar[13].union.interleave(),
				PartitionBy:  sqlDollar[14].union.partitionBy(),
				Predicate:    sqlDollar[15].union.expr(),
				Concurrently: sqlDollar[5].union.bool(),
			}
		}
	case 1091:
		sqlDollar = sqlS[sqlpt-18 : sqlpt+1]
//line sql-gen.y:6356
		{
			table := sqlDollar[11].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:         tree.Name(sqlDollar[9].str),
				Table:        table,
				Unique:       sqlDollar[2].union.bool(),
				Inverted:     true,
				IfNotExists:  true,
				Columns:      sqlDollar[13].union.idxElems(),
				Storing:      sqlDollar[15].union.nameList(),
				Interleave:   sqlDollar[16].union.interleave(),
				PartitionBy:  sqlDollar[17].union.partitionBy(),
				Predicate:    sqlDollar[18].union.expr(),
				Concurrently: sqlDollar[5].union.bool(),
			}
		}
	case 1092:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6372
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 1093:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6376
		{

			switch sqlDollar[2].str {
			case "gin", "gist":
				sqlVAL.union.val = true
			case "btree":
				sqlVAL.union.val = false
			case "hash", "spgist", "brin":
				return unimplemented(sqllex, "index using "+sqlDollar[2].str)
			default:
				sqllex.Error("unrecognized access method: " + sqlDollar[2].str)
				return 1
			}
		}
	case 1094:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6391
		{
			sqlVAL.union.val = false
		}
	case 1095:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6397
		{
			sqlVAL.union.val = true
		}
	case 1096:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6401
		{
			sqlVAL.union.val = false
		}
	case 1097:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6407
		{
			sqlVAL.union.val = true
		}
	case 1098:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6411
		{
			sqlVAL.union.val = false
		}
	case 1099:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6417
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1100:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6421
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1101:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6430
		{

			e := sqlDollar[1].union.expr()
			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			if colName, ok := e.(*tree.UnresolvedName); ok && colName.NumParts == 1 {
				sqlVAL.union.val = tree.IndexElem{Column: tree.Name(colName.Parts[0]), Direction: dir, NullsOrder: nullsOrder}
			} else {
				return unimplementedWithIssueDetail(sqllex, 9682, fmt.Sprintf("%T", e))
			}
		}
	case 1102:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6452
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1103:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6453
		{
			sqlVAL.str = ""
		}
	case 1104:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6457
		{
			sqlVAL.union.val = tree.Ascending
		}
	case 1105:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6461
		{
			sqlVAL.union.val = tree.Descending
		}
	case 1106:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6465
		{
			sqlVAL.union.val = tree.DefaultDirection
		}
	case 1107:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6471
		{
			sqlVAL.union.val = &tree.RenameDatabase{Name: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[6].str)}
		}
	case 1108:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6477
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: false}
		}
	case 1109:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6483
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: false}
		}
	case 1110:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6491
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: sqlDollar[6].str, IfExists: false,
			}
		}
	case 1111:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6497
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: sqlDollar[8].str, IfExists: true,
			}
		}
	case 1112:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6505
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: sqlDollar[6].str, IfExists: false, IsView: true,
			}
		}
	case 1113:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6511
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: sqlDollar[8].str, IfExists: true, IsView: true,
			}
		}
	case 1114:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6519
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: sqlDollar[6].str, IfExists: false, IsSequence: true,
			}
		}
	case 1115:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6525
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: sqlDollar[8].str, IfExists: true, IsSequence: true,
			}
		}
	case 1116:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6533
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: true}
		}
	case 1117:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6539
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: true}
		}
	case 1118:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6547
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsSequence: true}
		}
	case 1119:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6553
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsSequence: true}
		}
	case 1120:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6561
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[3].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[6].str), IfExists: false}
		}
	case 1121:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6565
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[5].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[8].str), IfExists: true}
		}
	case 1122:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6570
		{
		}
	case 1123:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6571
		{
		}
	case 1124:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6574
		{
		}
	case 1125:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6575
		{
		}
	case 1126:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6583
		{
			sqlVAL.union.val = &tree.ReleaseSavepoint{Savepoint: tree.Name(sqlDollar[2].str)}
		}
	case 1127:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6586
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 1128:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6596
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeJob,
			}
		}
	case 1129:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6604
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1130:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6606
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1131:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6610
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1132:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6613
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1133:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6626
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeSchedule,
			}
		}
	case 1134:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6634
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1135:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6636
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.ResumeSchedule,
			}
		}
	case 1136:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6642
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1137:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6655
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.DropSchedule,
			}
		}
	case 1138:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6663
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1139:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6665
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.DropSchedule,
			}
		}
	case 1140:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6671
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1141:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6679
		{
			sqlVAL.union.val = &tree.Savepoint{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1142:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6682
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 1144:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6686
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1146:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6687
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1148:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6688
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1150:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6704
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1151:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6707
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1152:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6709
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1153:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6712
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1154:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6722
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1155:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6725
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1156:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6727
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1157:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6730
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1158:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6734
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1159:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6739
		{
		}
	case 1160:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6740
		{
		}
	case 1161:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6741
		{
		}
	case 1162:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6751
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1163:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6755
		{
			sqlVAL.union.val = &tree.RollbackToSavepoint{Savepoint: tree.Name(sqlDollar[4].str)}
		}
	case 1164:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6758
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1165:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6761
		{
		}
	case 1166:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6762
		{
		}
	case 1167:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6766
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1168:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6770
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1169:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6776
		{
			sqlVAL.union.val = &tree.BeginTransaction{Modes: sqlDollar[1].union.transactionModes()}
		}
	case 1170:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6780
		{
			sqlVAL.union.val = &tree.BeginTransaction{}
		}
	case 1171:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6786
		{
			sqlVAL.union.val = sqlDollar[1].union.transactionModes()
		}
	case 1172:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6790
		{
			a := sqlDollar[1].union.transactionModes()
			b := sqlDollar[3].union.transactionModes()
			err := a.Merge(b)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1173:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6803
		{
		}
	case 1174:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6805
		{
		}
	case 1175:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6809
		{

			sqlVAL.union.val = tree.TransactionModes{Isolation: sqlDollar[1].union.isoLevel()}
		}
	case 1176:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6814
		{
			sqlVAL.union.val = tree.TransactionModes{UserPriority: sqlDollar[1].union.userPriority()}
		}
	case 1177:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6818
		{
			sqlVAL.union.val = tree.TransactionModes{ReadWriteMode: sqlDollar[1].union.readWriteMode()}
		}
	case 1178:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6822
		{
			sqlVAL.union.val = tree.TransactionModes{AsOf: sqlDollar[1].union.asOfClause()}
		}
	case 1179:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6828
		{
			sqlVAL.union.val = sqlDollar[2].union.userPriority()
		}
	case 1180:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6834
		{
			sqlVAL.union.val = sqlDollar[3].union.isoLevel()
		}
	case 1181:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6840
		{
			sqlVAL.union.val = tree.ReadOnly
		}
	case 1182:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6844
		{
			sqlVAL.union.val = tree.ReadWrite
		}
	case 1183:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6854
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				Name:     tree.Name(sqlDollar[3].str),
				Template: sqlDollar[5].str,
				Encoding: sqlDollar[6].str,
				Collate:  sqlDollar[7].str,
				CType:    sqlDollar[8].str,
			}
		}
	case 1184:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6864
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				IfNotExists: true,
				Name:        tree.Name(sqlDollar[6].str),
				Template:    sqlDollar[8].str,
				Encoding:    sqlDollar[9].str,
				Collate:     sqlDollar[10].str,
				CType:       sqlDollar[11].str,
			}
		}
	case 1185:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6874
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 1186:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6878
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1187:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6882
		{
			sqlVAL.str = ""
		}
	case 1188:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6888
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1189:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6892
		{
			sqlVAL.str = ""
		}
	case 1190:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6898
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1191:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6902
		{
			sqlVAL.str = ""
		}
	case 1192:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6908
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1193:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6912
		{
			sqlVAL.str = ""
		}
	case 1194:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6917
		{
		}
	case 1195:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6918
		{
		}
	case 1196:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6930
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1197:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6937
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = sqlDollar[6].union.onConflict()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[7].union.retClause()
		}
	case 1198:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6944
		{
			return helpWith(sqllex, "INSERT")
		}
	case 1199:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6955
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = &tree.OnConflict{}
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1200:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6962
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 1201:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6966
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &name
		}
	case 1202:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6975
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &name, As: tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}}
		}
	case 1203:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6980
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1204:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6986
		{
			sqlVAL.union.val = &tree.Insert{Rows: sqlDollar[1].union.slct()}
		}
	case 1205:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6990
		{
			sqlVAL.union.val = &tree.Insert{Columns: sqlDollar[2].union.nameList(), Rows: sqlDollar[4].union.slct()}
		}
	case 1206:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6994
		{
			sqlVAL.union.val = &tree.Insert{Rows: &tree.Select{}}
		}
	case 1207:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7000
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1208:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7004
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1210:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7024
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1211:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7028
		{
			sqlVAL.union.val = &tree.OnConflict{Columns: sqlDollar[3].union.nameList(), Exprs: sqlDollar[7].union.updateExprs(), Where: tree.NewWhere(tree.AstWhere, sqlDollar[8].union.expr())}
		}
	case 1212:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7032
		{
			sqlVAL.union.val = &tree.OnConflict{Columns: sqlDollar[3].union.nameList(), DoNothing: true}
		}
	case 1213:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7038
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1214:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7041
		{
			return unimplementedWithIssue(sqllex, 32557)
		}
	case 1215:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7042
		{
			return unimplementedWithIssue(sqllex, 28161)
		}
	case 1216:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7044
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1217:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7050
		{
			ret := tree.ReturningExprs(sqlDollar[2].union.selExprs())
			sqlVAL.union.val = &ret
		}
	case 1218:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7055
		{
			sqlVAL.union.val = tree.ReturningNothingClause
		}
	case 1219:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7059
		{
			sqlVAL.union.val = tree.AbsentReturningClause
		}
	case 1220:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7076
		{
			sqlVAL.union.val = &tree.Update{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[3].union.tblExpr(),
				Exprs:     sqlDollar[5].union.updateExprs(),
				From:      sqlDollar[6].union.tblExprs(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[7].union.expr()),
				OrderBy:   sqlDollar[8].union.orderBy(),
				Limit:     sqlDollar[9].union.limit(),
				Returning: sqlDollar[10].union.retClause(),
			}
		}
	case 1221:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7088
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 1222:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7091
		{
			sqlVAL.union.val = sqlDollar[2].union.tblExprs()
		}
	case 1223:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7094
		{
			sqlVAL.union.val = tree.TableExprs{}
		}
	case 1224:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7100
		{
			sqlVAL.union.val = tree.UpdateExprs{sqlDollar[1].union.updateExpr()}
		}
	case 1225:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7104
		{
			sqlVAL.union.val = append(sqlDollar[1].union.updateExprs(), sqlDollar[3].union.updateExpr())
		}
	case 1228:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7117
		{
			sqlVAL.union.val = &tree.UpdateExpr{Names: tree.NameList{tree.Name(sqlDollar[1].str)}, Expr: sqlDollar[3].union.expr()}
		}
	case 1229:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7120
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1230:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7124
		{
			sqlVAL.union.val = &tree.UpdateExpr{Tuple: true, Names: sqlDollar[2].union.nameList(), Expr: sqlDollar[5].union.expr()}
		}
	case 1232:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7167
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1233:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7173
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: sqlDollar[2].union.slct()}
		}
	case 1234:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7177
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: &tree.Select{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1235:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7192
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1236:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7196
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy()}
		}
	case 1237:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7200
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[3].union.lockingClause()}
		}
	case 1238:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7204
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[3].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1239:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7208
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt()}
		}
	case 1240:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7212
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy()}
		}
	case 1241:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7216
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[5].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1242:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7220
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[5].union.lockingClause()}
		}
	case 1243:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7225
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1244:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7226
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1245:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7229
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1246:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7230
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1247:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7234
		{
			sqlVAL.union.val = tree.LockingClause{sqlDollar[1].union.lockingItem()}
		}
	case 1248:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7238
		{
			sqlVAL.union.val = append(sqlDollar[1].union.lockingClause(), sqlDollar[2].union.lockingItem())
		}
	case 1249:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7244
		{
			sqlVAL.union.val = &tree.LockingItem{
				Strength:   sqlDollar[1].union.lockingStrength(),
				Targets:    sqlDollar[2].union.tableNames(),
				WaitPolicy: sqlDollar[3].union.lockingWaitPolicy(),
			}
		}
	case 1250:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7253
		{
			sqlVAL.union.val = tree.ForUpdate
		}
	case 1251:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7254
		{
			sqlVAL.union.val = tree.ForNoKeyUpdate
		}
	case 1252:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7255
		{
			sqlVAL.union.val = tree.ForShare
		}
	case 1253:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7256
		{
			sqlVAL.union.val = tree.ForKeyShare
		}
	case 1254:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7259
		{
			sqlVAL.union.val = tree.TableNames{}
		}
	case 1255:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7260
		{
			sqlVAL.union.val = sqlDollar[2].union.tableNames()
		}
	case 1256:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7263
		{
			sqlVAL.union.val = tree.LockWaitBlock
		}
	case 1257:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7264
		{
			sqlVAL.union.val = tree.LockWaitSkip
		}
	case 1258:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7265
		{
			sqlVAL.union.val = tree.LockWaitError
		}
	case 1259:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7270
		{
			return helpWith(sqllex, "<SELECTCLAUSE>")
		}
	case 1263:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7305
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1265:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7306
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1267:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7307
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1269:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7329
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:   sqlDollar[3].union.selExprs(),
				From:    sqlDollar[4].union.from(),
				Where:   tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy: sqlDollar[6].union.groupBy(),
				Having:  tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:  sqlDollar[8].union.window(),
			}
		}
	case 1270:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7342
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct: sqlDollar[2].union.bool(),
				Exprs:    sqlDollar[3].union.selExprs(),
				From:     sqlDollar[4].union.from(),
				Where:    tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:  sqlDollar[6].union.groupBy(),
				Having:   tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:   sqlDollar[8].union.window(),
			}
		}
	case 1271:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7356
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct:   true,
				DistinctOn: sqlDollar[2].union.distinctOn(),
				Exprs:      sqlDollar[3].union.selExprs(),
				From:       sqlDollar[4].union.from(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:    sqlDollar[6].union.groupBy(),
				Having:     tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:     sqlDollar[8].union.window(),
			}
		}
	case 1272:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7368
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1273:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7372
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.UnionOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1274:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7381
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.IntersectOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1275:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7390
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.ExceptOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1276:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7405
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:       tree.SelectExprs{tree.StarSelectExpr()},
				From:        tree.From{Tables: tree.TableExprs{sqlDollar[2].union.tblExpr()}},
				TableSelect: true,
			}
		}
	case 1277:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7412
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1278:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7424
		{
			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1279:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7428
		{

			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1280:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7433
		{
			sqlVAL.union.val = &tree.With{Recursive: true, CTEList: sqlDollar[3].union.ctes()}
		}
	case 1281:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7439
		{
			sqlVAL.union.val = []*tree.CTE{sqlDollar[1].union.cte()}
		}
	case 1282:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7443
		{
			sqlVAL.union.val = append(sqlDollar[1].union.ctes(), sqlDollar[3].union.cte())
		}
	case 1283:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7449
		{
			sqlVAL.union.val = true
		}
	case 1284:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7453
		{
			sqlVAL.union.val = false
		}
	case 1285:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7459
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Set: false,
				},
				Stmt: sqlDollar[5].union.stmt(),
			}
		}
	case 1286:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7469
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Materialize: sqlDollar[4].union.bool(),
					Set:         true,
				},
				Stmt: sqlDollar[6].union.stmt(),
			}
		}
	case 1287:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7481
		{
		}
	case 1288:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7482
		{
		}
	case 1289:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7486
		{
			sqlVAL.union.val = sqlDollar[1].union.with()
		}
	case 1290:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7490
		{
			sqlVAL.union.val = nil
		}
	case 1291:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7495
		{
		}
	case 1292:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7496
		{
		}
	case 1293:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7500
		{
			sqlVAL.union.val = true
		}
	case 1294:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7504
		{
			sqlVAL.union.val = false
		}
	case 1295:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7508
		{
			sqlVAL.union.val = false
		}
	case 1296:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7514
		{
			sqlVAL.union.val = true
		}
	case 1297:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7520
		{
			sqlVAL.union.val = tree.DistinctOn(sqlDollar[4].union.exprs())
		}
	case 1298:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7525
		{
		}
	case 1299:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7526
		{
		}
	case 1300:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7530
		{
			sqlVAL.union.val = sqlDollar[1].union.orderBy()
		}
	case 1301:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7534
		{
			sqlVAL.union.val = tree.OrderBy(nil)
		}
	case 1302:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7540
		{
			sqlVAL.union.val = tree.OrderBy(sqlDollar[3].union.orders())
		}
	case 1303:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7546
		{
			sqlVAL.union.val = tree.OrderBy([]*tree.Order{sqlDollar[3].union.order()})
		}
	case 1304:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7550
		{
			sqllex.Error("multiple ORDER BY clauses are not supported in this function")
			return 1
		}
	case 1305:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7557
		{
			sqlVAL.union.val = []*tree.Order{sqlDollar[1].union.order()}
		}
	case 1306:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7561
		{
			sqlVAL.union.val = append(sqlDollar[1].union.orders(), sqlDollar[3].union.order())
		}
	case 1307:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7567
		{

			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = &tree.Order{
				OrderType:  tree.OrderByColumn,
				Expr:       sqlDollar[1].union.expr(),
				Direction:  dir,
				NullsOrder: nullsOrder,
			}
		}
	case 1308:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7588
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{OrderType: tree.OrderByIndex, Direction: sqlDollar[4].union.dir(), Table: name}
		}
	case 1309:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7593
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{
				OrderType: tree.OrderByIndex,
				Direction: sqlDollar[5].union.dir(),
				Table:     name,
				Index:     tree.UnrestrictedName(sqlDollar[4].str),
			}
		}
	case 1310:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7605
		{
			sqlVAL.union.val = tree.NullsFirst
		}
	case 1311:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7609
		{
			sqlVAL.union.val = tree.NullsLast
		}
	case 1312:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7613
		{
			sqlVAL.union.val = tree.DefaultNullsOrder
		}
	case 1313:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7622
		{
			if sqlDollar[1].union.limit() == nil {
				sqlVAL.union.val = sqlDollar[2].union.limit()
			} else {
				sqlVAL.union.val = sqlDollar[1].union.limit()
				sqlVAL.union.val.(*tree.Limit).Offset = sqlDollar[2].union.limit().Offset
			}
		}
	case 1314:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7631
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
			if sqlDollar[2].union.limit() != nil {
				sqlVAL.union.val.(*tree.Limit).Count = sqlDollar[2].union.limit().Count
				sqlVAL.union.val.(*tree.Limit).LimitAll = sqlDollar[2].union.limit().LimitAll
			}
		}
	case 1317:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7642
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
		}
	case 1318:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7643
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1320:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7647
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1321:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7651
		{
			sqlVAL.union.val = &tree.Limit{LimitAll: true}
		}
	case 1322:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7655
		{
			if sqlDollar[2].union.expr() == nil {
				sqlVAL.union.val = (*tree.Limit)(nil)
			} else {
				sqlVAL.union.val = &tree.Limit{Count: sqlDollar[2].union.expr()}
			}
		}
	case 1323:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7669
		{
			sqlVAL.union.val = &tree.Limit{Count: sqlDollar[3].union.expr()}
		}
	case 1324:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7673
		{
			sqlVAL.union.val = &tree.Limit{
				Count: tree.NewNumVal(constant.MakeInt64(1), "", false),
			}
		}
	case 1325:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7681
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1326:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7688
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1330:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7710
		{
		}
	case 1331:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7711
		{
		}
	case 1332:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7714
		{
		}
	case 1333:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7715
		{
		}
	case 1334:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7732
		{
			sqlVAL.union.val = tree.GroupBy(sqlDollar[3].union.exprs())
		}
	case 1335:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7736
		{
			sqlVAL.union.val = tree.GroupBy(nil)
		}
	case 1336:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7742
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1337:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7746
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1338:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7765
		{
			sqlVAL.union.val = &tree.ValuesClause{Rows: []tree.Exprs{sqlDollar[3].union.exprs()}}
		}
	case 1339:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7768
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1340:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7770
		{
			valNode := sqlDollar[1].union.selectStmt().(*tree.ValuesClause)
			valNode.Rows = append(valNode.Rows, sqlDollar[4].union.exprs())
			sqlVAL.union.val = valNode
		}
	case 1341:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7782
		{
			sqlVAL.union.val = tree.From{Tables: sqlDollar[2].union.tblExprs(), AsOf: sqlDollar[3].union.asOfClause()}
		}
	case 1342:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7785
		{
			return helpWith(sqllex, "<SOURCE>")
		}
	case 1343:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7787
		{
			sqlVAL.union.val = tree.From{}
		}
	case 1344:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7793
		{
			sqlVAL.union.val = tree.TableExprs{sqlDollar[1].union.tblExpr()}
		}
	case 1345:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7797
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblExprs(), sqlDollar[3].union.tblExpr())
		}
	case 1346:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7803
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1347:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7807
		{

			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[4].union.int64())}
		}
	case 1348:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7812
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Ascending}
		}
	case 1349:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7817
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Descending}
		}
	case 1350:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7823
		{
			sqlVAL.union.val = &tree.IndexFlags{NoIndexJoin: true}
		}
	case 1351:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7828
		{

			sqlVAL.union.val = &tree.IndexFlags{IgnoreForeignKeys: true}
		}
	case 1352:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7835
		{
			sqlVAL.union.val = sqlDollar[1].union.indexFlags()
		}
	case 1353:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7840
		{
			a := sqlDollar[1].union.indexFlags()
			b := sqlDollar[3].union.indexFlags()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1354:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7851
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1355:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7855
		{
			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[3].union.int64())}
		}
	case 1356:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7859
		{
			flags := sqlDollar[3].union.indexFlags()
			if err := flags.Check(); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = flags
		}
	case 1357:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7867
		{
			sqlVAL.union.val = (*tree.IndexFlags)(nil)
		}
	case 1358:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7898
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1359:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7908
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1360:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7918
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[1].union.selectStmt()},
				Ordinality: sqlDollar[2].union.bool(),
				As:         sqlDollar[3].union.aliasClause(),
			}
		}
	case 1361:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7926
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[2].union.selectStmt()},
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1362:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7935
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1363:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7939
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1364:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7943
		{
			f := sqlDollar[1].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[2].union.bool(),

				As: sqlDollar[3].union.aliasClause(),
			}
		}
	case 1365:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7954
		{
			f := sqlDollar[2].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1366:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7978
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.StatementSource{Statement: sqlDollar[2].union.stmt()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1367:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7984
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
				Columns: sqlDollar[3].union.tableRefCols(),
				As:      sqlDollar[4].union.aliasClause(),
			}
		}
	case 1368:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7995
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: tree.Exprs{sqlDollar[1].union.expr()}}
		}
	case 1369:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7999
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: sqlDollar[4].union.exprs()}
		}
	case 1370:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8005
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1371:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8007
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1372:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8011
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1373:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8017
		{
		}
	case 1374:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8019
		{
			return unimplemented(sqllex, "ROWS FROM with col_def_list")
		}
	case 1375:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8022
		{
			sqlVAL.union.val = nil
		}
	case 1376:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8023
		{
			sqlVAL.union.val = []tree.ColumnID{}
		}
	case 1377:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8024
		{
			sqlVAL.union.val = sqlDollar[2].union.tableRefCols()
		}
	case 1378:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8028
		{
			sqlVAL.union.val = []tree.ColumnID{tree.ColumnID(sqlDollar[1].union.int64())}
		}
	case 1379:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8032
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tableRefCols(), tree.ColumnID(sqlDollar[3].union.int64()))
		}
	case 1380:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8038
		{
			sqlVAL.union.val = true
		}
	case 1381:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8042
		{
			sqlVAL.union.val = false
		}
	case 1382:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8062
		{
			sqlVAL.union.val = &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}
		}
	case 1383:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8066
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: tree.AstCross, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Hint: sqlDollar[3].str}
		}
	case 1384:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8070
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[2].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Cond: sqlDollar[6].union.joinCond(), Hint: sqlDollar[3].str}
		}
	case 1385:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8074
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[3].union.tblExpr(), Cond: sqlDollar[4].union.joinCond()}
		}
	case 1386:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8078
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[3].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[6].union.tblExpr(), Cond: tree.NaturalJoinCond{}, Hint: sqlDollar[4].str}
		}
	case 1387:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8082
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[4].union.tblExpr(), Cond: tree.NaturalJoinCond{}}
		}
	case 1388:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8088
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str), Cols: sqlDollar[3].union.nameList()}
		}
	case 1389:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8092
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()}
		}
	case 1391:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8099
		{
			sqlVAL.union.val = tree.AliasClause{}
		}
	case 1392:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8105
		{
			sqlVAL.union.val = tree.AsOfClause{Expr: sqlDollar[5].union.expr()}
		}
	case 1394:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8112
		{
			sqlVAL.union.val = tree.AsOfClause{}
		}
	case 1395:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8118
		{
			sqlVAL.str = tree.AstFull
		}
	case 1396:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8122
		{
			sqlVAL.str = tree.AstLeft
		}
	case 1397:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8126
		{
			sqlVAL.str = tree.AstRight
		}
	case 1398:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8130
		{
			sqlVAL.str = tree.AstInner
		}
	case 1399:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8136
		{
		}
	case 1400:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8137
		{
		}
	case 1401:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8158
		{
			sqlVAL.str = tree.AstHash
		}
	case 1402:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8162
		{
			sqlVAL.str = tree.AstMerge
		}
	case 1403:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8166
		{
			sqlVAL.str = tree.AstLookup
		}
	case 1404:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8170
		{
			sqlVAL.str = ""
		}
	case 1405:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8183
		{
			sqlVAL.union.val = &tree.UsingJoinCond{Cols: sqlDollar[3].union.nameList()}
		}
	case 1406:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8187
		{
			sqlVAL.union.val = &tree.OnJoinCond{Expr: sqlDollar[2].union.expr()}
		}
	case 1407:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8192
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1408:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8193
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1409:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8194
		{
			sqlVAL.union.val = sqlDollar[2].union.unresolvedObjectName()
		}
	case 1410:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8195
		{
			sqlVAL.union.val = sqlDollar[3].union.unresolvedObjectName()
		}
	case 1411:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8199
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 1412:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8204
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 1413:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8218
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1414:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8222
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str)}
			sqlVAL.union.val = alias
		}
	case 1415:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8228
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = alias
		}
	case 1416:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8234
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 1417:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8244
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 1418:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8254
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1420:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8261
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1421:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8273
		{
			if bounds := sqlDollar[2].union.int32s(); bounds != nil {
				var err error
				sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), bounds)
				if err != nil {
					return setErr(sqllex, err)
				}
			} else {
				sqlVAL.union.val = sqlDollar[1].union.typeReference()
			}
		}
	case 1422:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8286
		{

			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1423:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8294
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1424:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8295
		{
			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1425:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8305
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1426:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8312
		{
			sqlVAL.union.val = []int32{-1}
		}
	case 1427:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8313
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1428:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8315
		{

			bound, err := sqlDollar[2].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = []int32{bound}
		}
	case 1429:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8323
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1430:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8324
		{
			sqlVAL.union.val = []int32(nil)
		}
	case 1432:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8336
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1433:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8343
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1434:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8352
		{

			if sqlDollar[1].str == "char" {
				sqlVAL.union.val = types.MakeQChar(0)
			} else if sqlDollar[1].str == "serial" {
				switch sqllex.(*lexer).nakedIntType.Width() {
				case 32:
					sqlVAL.union.val = &types.Serial4Type
				default:
					sqlVAL.union.val = &types.Serial8Type
				}
			} else {

				var ok bool
				var err error
				var unimp int
				sqlVAL.union.val, ok, unimp = types.TypeForNonKeywordTypeName(sqlDollar[1].str)
				if !ok {
					switch unimp {
					case 0:

						aIdx := sqllex.(*lexer).NewAnnotation()
						sqlVAL.union.val, err = tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
						if err != nil {
							return setErr(sqllex, err)
						}
					case -1:
						return unimplemented(sqllex, "type name "+sqlDollar[1].str)
					default:
						return unimplementedWithIssueDetail(sqllex, unimp, sqlDollar[1].str)
					}
				}
			}
		}
	case 1435:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8392
		{
			id := sqlDollar[2].union.int32()
			sqlVAL.union.val = &tree.OIDTypeReference{OID: oid.Oid(id)}
		}
	case 1436:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8397
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1441:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8404
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "point")
		}
	case 1442:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8405
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "polygon")
		}
	case 1443:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8408
		{
			sqlVAL.union.val = geopb.ShapeType_Point
		}
	case 1444:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8409
		{
			sqlVAL.union.val = geopb.ShapeType_LineString
		}
	case 1445:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8410
		{
			sqlVAL.union.val = geopb.ShapeType_Polygon
		}
	case 1446:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8411
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollection
		}
	case 1447:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8412
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygon
		}
	case 1448:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8413
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineString
		}
	case 1449:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8414
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPoint
		}
	case 1450:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8415
		{
			sqlVAL.union.val = geopb.ShapeType_Geometry
		}
	case 1451:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8418
		{
			sqlVAL.union.val = types.Geography
		}
	case 1452:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8419
		{
			sqlVAL.union.val = types.Geometry
		}
	case 1453:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8421
		{
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1454:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8425
		{
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1455:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8429
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1456:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8437
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1462:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8463
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), 0)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1463:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8471
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), sqlDollar[4].union.int32())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1464:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8479
		{
			sqlVAL.union.val = nil
		}
	case 1465:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8486
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1466:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8490
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1467:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8494
		{
			sqlVAL.union.val = types.Int2
		}
	case 1468:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8498
		{
			sqlVAL.union.val = types.Int
		}
	case 1469:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8502
		{
			sqlVAL.union.val = types.Float4
		}
	case 1470:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8506
		{
			sqlVAL.union.val = sqlDollar[2].union.colType()
		}
	case 1471:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8510
		{
			sqlVAL.union.val = types.Float
		}
	case 1472:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8514
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1473:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8522
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1474:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8530
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1475:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8538
		{
			sqlVAL.union.val = types.Bool
		}
	case 1476:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8544
		{
			nv := sqlDollar[2].union.numVal()
			prec, err := nv.AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			typ, err := newFloat(prec)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = typ
		}
	case 1477:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8557
		{
			sqlVAL.union.val = types.Float
		}
	case 1478:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8563
		{
			bit, err := newBitType(sqlDollar[4].union.int32(), sqlDollar[2].union.bool())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1479:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8569
		{
			bit, err := newBitType(sqlDollar[3].union.int32(), true)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1480:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8577
		{
			sqlVAL.union.val = types.MakeBit(1)
		}
	case 1481:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8581
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1482:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8585
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1483:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8591
		{
			colTyp := *sqlDollar[1].union.colType()
			n := sqlDollar[3].union.int32()
			if n == 0 {
				sqllex.Error(fmt.Sprintf("length for type %s must be at least 1", colTyp.SQLString()))
				return 1
			}
			sqlVAL.union.val = types.MakeScalar(types.StringFamily, colTyp.Oid(), colTyp.Precision(), n, colTyp.Locale())
		}
	case 1484:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8603
		{
			sqlVAL.union.val = sqlDollar[1].union.colType()
		}
	case 1485:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8609
		{
			sqlVAL.union.val = types.MakeChar(1)
		}
	case 1486:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8613
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1487:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8617
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1488:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8621
		{
			sqlVAL.union.val = types.String
		}
	case 1491:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8630
		{
			sqlVAL.union.val = true
		}
	case 1492:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8631
		{
			sqlVAL.union.val = false
		}
	case 1493:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8636
		{
			sqlVAL.union.val = types.Date
		}
	case 1494:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8640
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimeTZ
			} else {
				sqlVAL.union.val = types.Time
			}
		}
	case 1495:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8648
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimeTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTime(prec)
			}
		}
	case 1496:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8660
		{
			sqlVAL.union.val = types.TimeTZ
		}
	case 1497:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8662
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimeTZ(prec)
		}
	case 1498:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8671
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimestampTZ
			} else {
				sqlVAL.union.val = types.Timestamp
			}
		}
	case 1499:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8679
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimestampTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTimestamp(prec)
			}
		}
	case 1500:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8692
		{
			sqlVAL.union.val = types.TimestampTZ
		}
	case 1501:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8696
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimestampTZ(prec)
		}
	case 1502:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8706
		{
			sqlVAL.union.val = true
		}
	case 1503:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8707
		{
			sqlVAL.union.val = false
		}
	case 1504:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8708
		{
			sqlVAL.union.val = false
		}
	case 1505:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8712
		{
			sqlVAL.union.val = types.Interval
		}
	case 1506:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8716
		{
			sqlVAL.union.val = types.MakeInterval(sqlDollar[2].union.intervalTypeMetadata())
		}
	case 1507:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8720
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeInterval(types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true})
		}
	case 1508:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8731
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_YEAR,
				},
			}
		}
	case 1509:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8739
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1510:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8747
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_DAY,
				},
			}
		}
	case 1511:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8755
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1512:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8763
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1513:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8771
		{
			sqlVAL.union.val = sqlDollar[1].union.intervalTypeMetadata()
		}
	case 1514:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8777
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_YEAR,
					DurationType:     types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1515:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8786
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1516:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8795
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1517:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8804
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_DAY
			sqlVAL.union.val = ret
		}
	case 1518:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8810
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_HOUR,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1519:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8819
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_HOUR
			sqlVAL.union.val = ret
		}
	case 1520:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8825
		{
			sqlVAL.union.val = sqlDollar[3].union.intervalTypeMetadata()
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_MINUTE
			sqlVAL.union.val = ret
		}
	case 1522:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8835
		{
			sqlVAL.union.val = nil
		}
	case 1523:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8841
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
			}
		}
	case 1524:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8849
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
				PrecisionIsSet: true,
				Precision:      prec,
			}
		}
	case 1526:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8886
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1527:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8890
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1528:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8894
		{
			sqlVAL.union.val = &tree.CollateExpr{Expr: sqlDollar[1].union.expr(), Locale: sqlDollar[3].str}
		}
	case 1529:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8898
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("timezone"), Exprs: tree.Exprs{sqlDollar[5].union.expr(), sqlDollar[1].union.expr()}}
		}
	case 1530:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8909
		{

			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1531:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8914
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1532:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8918
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryComplement, Expr: sqlDollar[2].union.expr()}
		}
	case 1533:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8922
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnarySqrt, Expr: sqlDollar[2].union.expr()}
		}
	case 1534:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8926
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryCbrt, Expr: sqlDollar[2].union.expr()}
		}
	case 1535:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8930
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Plus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1536:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8934
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Minus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1537:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8938
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mult, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1538:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8942
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Div, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1539:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8946
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.FloorDiv, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1540:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8950
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mod, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1541:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8954
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Pow, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1542:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8958
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitxor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1543:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8962
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitand, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1544:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8966
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1545:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8970
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1546:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8974
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1547:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8978
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1548:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8982
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONSomeExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1549:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8986
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONAllExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1550:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8990
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Contains, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1551:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8994
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.ContainedBy, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1552:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8998
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1553:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9002
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Concat, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1554:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9006
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.LShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1555:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9010
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.RShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1556:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9014
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchVal, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1557:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9018
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchText, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1558:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9022
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchValPath, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1559:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9026
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchTextPath, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1560:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9030
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("json_remove_path"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1561:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9034
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contained_by_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1562:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9038
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Overlaps, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1563:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9042
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contains_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1564:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9046
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1565:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9050
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1566:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9054
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1567:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9058
		{
			sqlVAL.union.val = &tree.AndExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1568:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9062
		{
			sqlVAL.union.val = &tree.OrExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1569:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9066
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1570:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9070
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1571:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9074
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Like, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1572:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9078
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1573:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9082
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotLike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1574:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9086
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1575:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9090
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.ILike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1576:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9094
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1577:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9098
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotILike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1578:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9102
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1579:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9106
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.SimilarTo, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1580:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9110
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1581:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9114
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotSimilarTo, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1582:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9118
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[5].union.expr(), sqlDollar[7].union.expr()}}
		}
	case 1583:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9122
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.RegMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1584:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9126
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotRegMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1585:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9130
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.RegIMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1586:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9134
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotRegIMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1587:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9138
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1588:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9142
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1589:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9146
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1590:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9150
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1591:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9154
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1592:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9158
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1593:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9161
		{
			return unimplemented(sqllex, "overlaps")
		}
	case 1594:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9163
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1595:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9167
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1596:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9171
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1597:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9175
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1598:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9179
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1599:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9183
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1600:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9187
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1601:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9191
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1602:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9195
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1603:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9199
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1604:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9203
		{
			sqlVAL.union.val = &tree.RangeCond{Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1605:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9207
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1606:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9211
		{
			sqlVAL.union.val = &tree.RangeCond{Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1607:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9215
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1608:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9219
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.In, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1609:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9223
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotIn, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1610:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9227
		{
			op := sqlDollar[3].union.cmpOp()
			subOp := sqlDollar[2].union.op()
			subOpCmp, ok := subOp.(tree.ComparisonOperator)
			if !ok {
				sqllex.Error(fmt.Sprintf("%s %s <array> is invalid because %q is not a boolean operator",
					subOp, op, subOp))
				return 1
			}
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator:    op,
				SubOperator: subOpCmp,
				Left:        sqlDollar[1].union.expr(),
				Right:       sqlDollar[4].union.expr(),
			}
		}
	case 1611:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9244
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 1612:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9249
		{
			return unimplemented(sqllex, "UNIQUE predicate")
		}
	case 1614:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9261
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1615:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9265
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1616:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9269
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1617:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9273
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1618:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9277
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryComplement, Expr: sqlDollar[2].union.expr()}
		}
	case 1619:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9281
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Plus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1620:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9285
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Minus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1621:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9289
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mult, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1622:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9293
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Div, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1623:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9297
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.FloorDiv, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1624:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9301
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mod, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1625:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9305
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Pow, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1626:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9309
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitxor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1627:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9313
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitand, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1628:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9317
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1629:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9321
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1630:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9325
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1631:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9329
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1632:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9333
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Concat, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1633:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9337
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.LShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1634:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9341
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.RShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1635:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9345
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1636:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9349
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1637:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9353
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1638:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9357
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1639:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9361
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1640:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9365
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1641:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9369
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1643:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9383
		{
			sqlVAL.union.val = &tree.IndirectionExpr{
				Expr:        sqlDollar[1].union.expr(),
				Indirection: sqlDollar[2].union.arraySubscripts(),
			}
		}
	case 1645:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9391
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[2].union.selectStmt(), Exists: true}
		}
	case 1646:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9427
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1647:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9431
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1648:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9435
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 1649:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9439
		{
			sqlVAL.union.val = tree.NewBytesStrVal(sqlDollar[1].str)
		}
	case 1650:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9443
		{
			d, err := tree.ParseDBitArray(sqlDollar[1].str)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 1651:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9448
		{
			return unimplemented(sqllex, sqlDollar[1].union.unresolvedName().String()+"(...) SCONST")
		}
	case 1652:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9450
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1653:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9454
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1654:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9458
		{
			sqlVAL.union.val = tree.MakeDBool(true)
		}
	case 1655:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9462
		{
			sqlVAL.union.val = tree.MakeDBool(false)
		}
	case 1656:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9466
		{
			sqlVAL.union.val = tree.DNull
		}
	case 1657:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9470
		{
			sqlVAL.union.val = tree.Expr(sqlDollar[1].union.unresolvedName())
		}
	case 1658:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9474
		{
			colNum := sqlDollar[2].union.int64()
			if colNum < 1 || colNum > int64(MaxInt) {
				sqllex.Error(fmt.Sprintf("invalid column ordinal: @%d", colNum))
				return 1
			}
			sqlVAL.union.val = tree.NewOrdinalReference(int(colNum - 1))
		}
	case 1659:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9483
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 1660:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9490
		{
			sqlVAL.union.val = &tree.TupleStar{Expr: sqlDollar[2].union.expr()}
		}
	case 1661:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9494
		{
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ColName: sqlDollar[5].str}
		}
	case 1662:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9498
		{
			idx, err := sqlDollar[6].union.numVal().AsInt32()
			if err != nil || idx <= 0 {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ByIndex: true, ColIndex: int(idx - 1)}
		}
	case 1663:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9504
		{
			sqlVAL.union.val = &tree.ParenExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1665:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9509
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1666:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9513
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 1667:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9517
		{
			sqlVAL.union.val = &tree.ArrayFlatten{Subquery: &tree.Subquery{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1668:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9521
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.tuple().Exprs}
		}
	case 1669:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9525
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1670:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9528
		{
			return unimplemented(sqllex, "d_expr grouping")
		}
	case 1671:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9532
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName()}
		}
	case 1672:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9536
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: sqlDollar[3].union.exprs(), OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 1673:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9539
		{
			return unimplemented(sqllex, "variadic")
		}
	case 1674:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9540
		{
			return unimplemented(sqllex, "variadic")
		}
	case 1675:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9542
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.AllFuncType, Exprs: sqlDollar[4].union.exprs(), OrderBy: sqlDollar[5].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 1676:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9548
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.DistinctFuncType, Exprs: sqlDollar[4].union.exprs()}
		}
	case 1677:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9552
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: tree.Exprs{tree.StarExpr()}}
		}
	case 1678:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9555
		{
			return helpWithFunction(sqllex, sqlDollar[1].union.resolvableFuncRefFromName())
		}
	case 1679:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9564
		{
			name := sqlDollar[1].union.unresolvedName()
			if name.NumParts == 1 {
				typName := name.Parts[0]

				if typName == "char" {
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: types.MakeQChar(0), SyntaxMode: tree.CastPrepend}
				} else if typName == "serial" {
					switch sqllex.(*lexer).nakedIntType.Width() {
					case 32:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial4Type, SyntaxMode: tree.CastPrepend}
					default:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial8Type, SyntaxMode: tree.CastPrepend}
					}
				} else {

					var typ tree.ResolvableTypeReference
					var ok bool
					var err error
					var unimp int
					typ, ok, unimp = types.TypeForNonKeywordTypeName(typName)
					if !ok {
						switch unimp {
						case 0:

							aIdx := sqllex.(*lexer).NewAnnotation()
							typ, err = name.ToUnresolvedObjectName(aIdx)
							if err != nil {
								return setErr(sqllex, err)
							}
						case -1:
							return unimplemented(sqllex, "type name "+typName)
						default:
							return unimplementedWithIssueDetail(sqllex, unimp, typName)
						}
					}
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: typ, SyntaxMode: tree.CastPrepend}
				}
			} else {
				aIdx := sqllex.(*lexer).NewAnnotation()
				res, err := name.ToUnresolvedObjectName(aIdx)
				if err != nil {
					return setErr(sqllex, err)
				}
				sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: res, SyntaxMode: tree.CastPrepend}
			}
		}
	case 1680:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9617
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: sqlDollar[1].union.colType(), SyntaxMode: tree.CastPrepend}
		}
	case 1681:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9630
		{
			f := sqlDollar[1].union.expr().(*tree.FuncExpr)
			w := sqlDollar[2].union.expr().(*tree.FuncExpr)
			if w.AggType != 0 {
				f.AggType = w.AggType
				f.OrderBy = w.OrderBy
			}
			f.Filter = sqlDollar[3].union.expr()
			f.WindowDef = sqlDollar[4].union.windowDef()
			sqlVAL.union.val = f
		}
	case 1682:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9642
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1683:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9651
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1684:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9652
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1685:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9657
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("pg_collation_for"), Exprs: tree.Exprs{sqlDollar[4].union.expr()}}
		}
	case 1686:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9661
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1687:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9665
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1688:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9671
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_database")}
		}
	case 1689:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9675
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1690:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9679
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1691:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9683
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1692:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9687
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1693:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9691
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1694:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9697
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1695:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9701
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1696:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9705
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1697:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9709
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.CastExplicit}
		}
	case 1698:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9713
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.AnnotateExplicit}
		}
	case 1699:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9717
		{
			sqlVAL.union.val = &tree.IfExpr{Cond: sqlDollar[3].union.expr(), True: sqlDollar[5].union.expr(), Else: sqlDollar[7].union.expr()}
		}
	case 1700:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9721
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr(), ErrCode: sqlDollar[7].union.expr()}
		}
	case 1701:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9725
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr()}
		}
	case 1702:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9729
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr()}
		}
	case 1703:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9733
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), ErrCode: sqlDollar[5].union.expr()}
		}
	case 1704:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9737
		{
			sqlVAL.union.val = &tree.NullIfExpr{Expr1: sqlDollar[3].union.expr(), Expr2: sqlDollar[5].union.expr()}
		}
	case 1705:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9741
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "IFNULL", Exprs: tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1706:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9745
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "COALESCE", Exprs: sqlDollar[3].union.exprs()}
		}
	case 1708:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9752
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1709:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9755
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1710:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9757
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1711:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9760
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1712:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9762
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1713:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9766
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1714:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9769
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1715:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9771
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1716:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9775
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1717:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9778
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1718:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9780
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1719:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9784
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1720:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9787
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1721:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9789
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1722:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9793
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1723:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9796
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1724:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9798
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1725:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9801
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1726:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9803
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1727:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9806
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1728:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9808
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1729:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9811
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1730:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9813
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1731:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9816
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1732:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9818
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("strpos"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1733:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9822
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1734:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9825
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1735:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9826
		{
			return unimplemented(sqllex, "treat")
		}
	case 1736:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9828
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1737:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9832
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ltrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1738:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9836
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("rtrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1739:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9840
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1740:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9844
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1741:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9847
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1742:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9849
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1743:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9852
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1744:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9858
		{
			sqlVAL.union.val = &tree.FuncExpr{OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.OrderedSetAgg}
		}
	case 1745:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9862
		{
			sqlVAL.union.val = &tree.FuncExpr{}
		}
	case 1746:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9868
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 1747:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9872
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1748:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9879
		{
			sqlVAL.union.val = sqlDollar[2].union.window()
		}
	case 1749:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9883
		{
			sqlVAL.union.val = tree.Window(nil)
		}
	case 1750:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9889
		{
			sqlVAL.union.val = tree.Window{sqlDollar[1].union.windowDef()}
		}
	case 1751:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9893
		{
			sqlVAL.union.val = append(sqlDollar[1].union.window(), sqlDollar[3].union.windowDef())
		}
	case 1752:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9899
		{
			n := sqlDollar[3].union.windowDef()
			n.Name = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = n
		}
	case 1753:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9907
		{
			sqlVAL.union.val = sqlDollar[2].union.windowDef()
		}
	case 1754:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9911
		{
			sqlVAL.union.val = &tree.WindowDef{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1755:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9915
		{
			sqlVAL.union.val = (*tree.WindowDef)(nil)
		}
	case 1756:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9922
		{
			sqlVAL.union.val = &tree.WindowDef{
				RefName:    tree.Name(sqlDollar[2].str),
				Partitions: sqlDollar[3].union.exprs(),
				OrderBy:    sqlDollar[4].union.orderBy(),
				Frame:      sqlDollar[5].union.windowFrame(),
			}
		}
	case 1758:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9942
		{
			sqlVAL.str = ""
		}
	case 1759:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9948
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 1760:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9952
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 1761:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9958
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.RANGE,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1762:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9966
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.ROWS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1763:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9974
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.GROUPS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1764:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9982
		{
			sqlVAL.union.val = (*tree.WindowFrame)(nil)
		}
	case 1765:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9988
		{
			startBound := sqlDollar[1].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.BoundType == tree.OffsetFollowing:
				sqllex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound}
		}
	case 1766:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10001
		{
			startBound := sqlDollar[2].union.windowFrameBound()
			endBound := sqlDollar[4].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.BoundType == tree.UnboundedPreceding:
				sqllex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.BoundType == tree.CurrentRow && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.CurrentRow:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound, EndBound: endBound}
		}
	case 1767:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10029
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedPreceding}
		}
	case 1768:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10033
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedFollowing}
		}
	case 1769:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10037
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.CurrentRow}
		}
	case 1770:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10041
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetPreceding,
			}
		}
	case 1771:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10048
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetFollowing,
			}
		}
	case 1772:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10057
		{
			sqlVAL.union.val = tree.ExcludeCurrentRow
		}
	case 1773:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10061
		{
			sqlVAL.union.val = tree.ExcludeGroup
		}
	case 1774:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10065
		{
			sqlVAL.union.val = tree.ExcludeTies
		}
	case 1775:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10069
		{

			sqlVAL.union.val = tree.NoExclusion
		}
	case 1776:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10074
		{
			sqlVAL.union.val = tree.NoExclusion
		}
	case 1777:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10087
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[3].union.exprs(), Row: true}
		}
	case 1778:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10091
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 1780:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10098
		{
			t := sqlDollar[2].union.tuple()
			labels := sqlDollar[4].union.nameList()
			t.Labels = make([]string, len(labels))
			for i, l := range labels {
				t.Labels[i] = string(l)
			}
			sqlVAL.union.val = t
		}
	case 1781:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10110
		{
			sqlVAL.union.val = tree.Any
		}
	case 1782:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10114
		{
			sqlVAL.union.val = tree.Some
		}
	case 1783:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10118
		{
			sqlVAL.union.val = tree.All
		}
	case 1784:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10123
		{
			sqlVAL.union.val = tree.Plus
		}
	case 1785:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10124
		{
			sqlVAL.union.val = tree.Minus
		}
	case 1786:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10125
		{
			sqlVAL.union.val = tree.Mult
		}
	case 1787:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10126
		{
			sqlVAL.union.val = tree.Div
		}
	case 1788:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10127
		{
			sqlVAL.union.val = tree.FloorDiv
		}
	case 1789:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10128
		{
			sqlVAL.union.val = tree.Mod
		}
	case 1790:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10129
		{
			sqlVAL.union.val = tree.Bitand
		}
	case 1791:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10130
		{
			sqlVAL.union.val = tree.Bitor
		}
	case 1792:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10131
		{
			sqlVAL.union.val = tree.Pow
		}
	case 1793:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10132
		{
			sqlVAL.union.val = tree.Bitxor
		}
	case 1794:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10133
		{
			sqlVAL.union.val = tree.LT
		}
	case 1795:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10134
		{
			sqlVAL.union.val = tree.GT
		}
	case 1796:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10135
		{
			sqlVAL.union.val = tree.EQ
		}
	case 1797:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10136
		{
			sqlVAL.union.val = tree.LE
		}
	case 1798:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10137
		{
			sqlVAL.union.val = tree.GE
		}
	case 1799:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10138
		{
			sqlVAL.union.val = tree.NE
		}
	case 1801:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10142
		{
			sqlVAL.union.val = tree.Like
		}
	case 1802:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10143
		{
			sqlVAL.union.val = tree.NotLike
		}
	case 1803:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10144
		{
			sqlVAL.union.val = tree.ILike
		}
	case 1804:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10145
		{
			sqlVAL.union.val = tree.NotILike
		}
	case 1805:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10168
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 1806:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10172
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1807:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10178
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1808:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10182
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1809:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10186
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 1810:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10197
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 1811:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10201
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1812:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10207
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1813:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10211
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 1815:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10218
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 1816:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10224
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1817:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10228
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1818:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10234
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference{sqlDollar[1].union.typeReference()}
		}
	case 1819:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10238
		{
			sqlVAL.union.val = append(sqlDollar[1].union.typeReferences(), sqlDollar[3].union.typeReference())
		}
	case 1820:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10244
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1821:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10248
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1822:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10254
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1823:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10258
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1824:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10264
		{
			sqlVAL.union.val = tree.Exprs{tree.NewStrVal(sqlDollar[1].str), sqlDollar[3].union.expr()}
		}
	case 1825:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10268
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1834:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10291
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr(), sqlDollar[4].union.expr()}
		}
	case 1835:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10295
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 1836:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10299
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1837:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10305
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1838:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10312
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[1].union.expr()}
		}
	case 1839:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10316
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 1840:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10333
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 1841:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10337
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[2].union.expr()}
		}
	case 1842:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10341
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr()}
		}
	case 1843:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10345
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), tree.NewDInt(1), sqlDollar[2].union.expr()}
		}
	case 1844:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10349
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1845:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10355
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1846:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10361
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1847:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10367
		{
			sqlVAL.union.val = append(sqlDollar[3].union.exprs(), sqlDollar[1].union.expr())
		}
	case 1848:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10371
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 1849:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10375
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1850:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10381
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1852:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10393
		{
			sqlVAL.union.val = &tree.CaseExpr{Expr: sqlDollar[2].union.expr(), Whens: sqlDollar[3].union.whens(), Else: sqlDollar[4].union.expr()}
		}
	case 1853:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10400
		{
			sqlVAL.union.val = []*tree.When{sqlDollar[1].union.when()}
		}
	case 1854:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10404
		{
			sqlVAL.union.val = append(sqlDollar[1].union.whens(), sqlDollar[2].union.when())
		}
	case 1855:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10410
		{
			sqlVAL.union.val = &tree.When{Cond: sqlDollar[2].union.expr(), Val: sqlDollar[4].union.expr()}
		}
	case 1856:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10416
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1857:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10420
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1859:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10427
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1860:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10433
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr()}
		}
	case 1861:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10437
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr(), End: sqlDollar[4].union.expr(), Slice: true}
		}
	case 1863:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10444
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1864:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10450
		{
			sqlVAL.union.val = tree.ArraySubscripts{sqlDollar[1].union.arraySubscript()}
		}
	case 1865:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10454
		{
			sqlVAL.union.val = append(sqlDollar[1].union.arraySubscripts(), sqlDollar[2].union.arraySubscript())
		}
	case 1866:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10459
		{
		}
	case 1867:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10460
		{
		}
	case 1868:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10464
		{
			sqlVAL.union.val = tree.SelectExprs{sqlDollar[1].union.selExpr()}
		}
	case 1869:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10468
		{
			sqlVAL.union.val = append(sqlDollar[1].union.selExprs(), sqlDollar[3].union.selExpr())
		}
	case 1870:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10474
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1871:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10483
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1872:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10487
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1873:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10491
		{
			sqlVAL.union.val = tree.StarSelectExpr()
		}
	case 1874:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10499
		{
			sqlVAL.union.val = tree.TableIndexNames{sqlDollar[1].union.newTableIndexName()}
		}
	case 1875:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10503
		{
			sqlVAL.union.val = append(sqlDollar[1].union.newTableIndexNames(), sqlDollar[3].union.newTableIndexName())
		}
	case 1876:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10509
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedName()}
		}
	case 1877:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10513
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedName())
		}
	case 1878:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10532
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: tree.UnrestrictedName(sqlDollar[3].str),
			}
		}
	case 1879:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10540
		{

			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			indexName := tree.UnrestrictedName(name.ObjectName)
			name.ObjectName = ""
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: indexName,
			}
		}
	case 1880:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10563
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 1882:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10572
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 1883:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10576
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1884:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10580
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 1885:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10584
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 1}
		}
	case 1886:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10590
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1887:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10594
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1892:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10609
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 1893:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10613
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 1896:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10625
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 1897:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10629
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 1898:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10638
		{
			val, err := sqlDollar[1].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 1899:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10649
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 1900:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10658
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 1901:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10666
		{
			var err error
			var d tree.Datum
			if sqlDollar[3].union.val == nil {
				d, err = tree.ParseDInterval(sqlDollar[2].str)
			} else {
				d, err = tree.ParseDIntervalWithTypeMetadata(sqlDollar[2].str, sqlDollar[3].union.intervalTypeMetadata())
			}
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 1902:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10678
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			d, err := tree.ParseDIntervalWithTypeMetadata(sqlDollar[5].str, types.IntervalTypeMetadata{
				Precision:      prec,
				PrecisionIsSet: true,
			})
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 1925:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10779
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 1927:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10786
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 2, Parts: tree.NameParts{sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1928:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10790
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 3, Parts: tree.NameParts{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1929:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10794
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 4, Parts: tree.NameParts{sqlDollar[7].str, sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1931:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10808
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 4, Parts: tree.NameParts{"", sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1932:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10812
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1933:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10816
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 1934:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10829
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 1936:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10838
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 1940:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10856
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1941:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10869
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1942:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10876
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1950:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10901
		{
			sqlVAL.str = ""
		}
	case 1951:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10907
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1952:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10911
		{
			sqlVAL.str = ""
		}
	}
	goto sqlstack /* stack new state and value */
}
