// Code generated by goyacc. DO NOT EDIT.
// GENERATED FILE DO NOT EDIT
// Code generated by goyacc -p sql -o sql.go.tmp sql-gen.y. DO NOT EDIT.

//line sql-gen.y:24
package parser

import (
	"fmt"
	__yyfmt__ "fmt"
	"go/constant"
	"math"
	"strings"

	"github.com/cockroachdb/cockroach/pkg/geo/geopb"
	"github.com/cockroachdb/cockroach/pkg/roachpb"
	"github.com/cockroachdb/cockroach/pkg/security"
	"github.com/cockroachdb/cockroach/pkg/sql/lexbase"
	"github.com/cockroachdb/cockroach/pkg/sql/privilege"
	"github.com/cockroachdb/cockroach/pkg/sql/scanner"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree/treebin"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree/treecmp"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree/treewindow"
	"github.com/cockroachdb/cockroach/pkg/sql/types"
	"github.com/cockroachdb/errors"
	"github.com/lib/pq/oid"
)

//line sql-gen.y:24

const MaxUint = ^uint(0)

const MaxInt = int(MaxUint >> 1)

func unimplemented(sqllex sqlLexer, feature string) int {
	sqllex.(*lexer).Unimplemented(feature)
	return 1
}

func purposelyUnimplemented(sqllex sqlLexer, feature string, reason string) int {
	sqllex.(*lexer).PurposelyUnimplemented(feature, reason)
	return 1
}

func setErr(sqllex sqlLexer, err error) int {
	sqllex.(*lexer).setErr(err)
	return 1
}

func unimplementedWithIssue(sqllex sqlLexer, issue int) int {
	sqllex.(*lexer).UnimplementedWithIssue(issue)
	return 1
}

func unimplementedWithIssueDetail(sqllex sqlLexer, issue int, detail string) int {
	sqllex.(*lexer).UnimplementedWithIssueDetail(issue, detail)
	return 1
}

func processBinaryQualOp(
	sqllex sqlLexer,
	op tree.Operator,
	lhs tree.Expr,
	rhs tree.Expr,
) (tree.Expr, int) {
	switch op := op.(type) {
	case treebin.BinaryOperator:
		op.IsExplicitOperator = true
		return &tree.BinaryExpr{Operator: op, Left: lhs, Right: rhs}, 0
	case treecmp.ComparisonOperator:
		op.IsExplicitOperator = true
		return &tree.ComparisonExpr{Operator: op, Left: lhs, Right: rhs}, 0
	case tree.UnaryOperator:

		switch op.Symbol {
		case tree.UnaryComplement:
			return &tree.ComparisonExpr{
				Operator: treecmp.ComparisonOperator{
					Symbol:             treecmp.RegMatch,
					IsExplicitOperator: true,
				},
				Left:  lhs,
				Right: rhs,
			}, 0
		default:
			sqllex.Error(fmt.Sprintf("unknown binary operator %s", op))
			return nil, -1
		}
	default:
		sqllex.Error(fmt.Sprintf("unknown binary operator %s", op))
		return nil, 1
	}
}

func processUnaryQualOp(
	sqllex sqlLexer,
	op tree.Operator,
	expr tree.Expr,
) (tree.Expr, int) {
	e, code := processUnaryQualOpInternal(sqllex, op, expr)
	if code != 0 {
		return e, code
	}
	if e, ok := e.(*tree.UnaryExpr); ok {
		e.Operator.IsExplicitOperator = true
	}
	return e, code
}

func processUnaryQualOpInternal(
	sqllex sqlLexer,
	op tree.Operator,
	expr tree.Expr,
) (tree.Expr, int) {
	switch op := op.(type) {
	case tree.UnaryOperator:
		return &tree.UnaryExpr{Operator: op, Expr: expr}, 0
	case treebin.BinaryOperator:

		switch op.Symbol {
		case treebin.Plus:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryPlus),
				Expr:     expr,
			}, 0
		case treebin.Minus:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryMinus),
				Expr:     expr,
			}, 0
		}
	case treecmp.ComparisonOperator:
		switch op.Symbol {
		case treecmp.RegMatch:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryComplement),
				Expr:     expr,
			}, 0
		}
	}
	sqllex.Error(fmt.Sprintf("unknown unary operator %s", op))
	return nil, 1
}

//line sql-gen.y:168

var _ scanner.ScanSymType = &sqlSymType{}

func (s *sqlSymType) ID() int32 {
	return s.id
}

func (s *sqlSymType) SetID(id int32) {
	s.id = id
}

func (s *sqlSymType) Pos() int32 {
	return s.pos
}

func (s *sqlSymType) SetPos(pos int32) {
	s.pos = pos
}

func (s *sqlSymType) Str() string {
	return s.str
}

func (s *sqlSymType) SetStr(str string) {
	s.str = str
}

func (s *sqlSymType) UnionVal() interface{} {
	return s.union.val
}

func (s *sqlSymType) SetUnionVal(val interface{}) {
	s.union.val = val
}

type sqlSymUnion struct {
	val interface{}
}

func (u *sqlSymUnion) numVal() *tree.NumVal {
	return u.val.(*tree.NumVal)
}
func (u *sqlSymUnion) strVal() *tree.StrVal {
	if stmt, ok := u.val.(*tree.StrVal); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) placeholder() *tree.Placeholder {
	return u.val.(*tree.Placeholder)
}
func (u *sqlSymUnion) auditMode() tree.AuditMode {
	return u.val.(tree.AuditMode)
}
func (u *sqlSymUnion) bool() bool {
	return u.val.(bool)
}
func (u *sqlSymUnion) strPtr() *string {
	return u.val.(*string)
}
func (u *sqlSymUnion) strs() []string {
	return u.val.([]string)
}
func (u *sqlSymUnion) roleSpec() tree.RoleSpec {
	return u.val.(tree.RoleSpec)
}
func (u *sqlSymUnion) roleSpecList() tree.RoleSpecList {
	return u.val.(tree.RoleSpecList)
}
func (u *sqlSymUnion) user() security.SQLUsername {
	return u.val.(security.SQLUsername)
}
func (u *sqlSymUnion) userPtr() *security.SQLUsername {
	return u.val.(*security.SQLUsername)
}
func (u *sqlSymUnion) users() []security.SQLUsername {
	return u.val.([]security.SQLUsername)
}
func (u *sqlSymUnion) newTableIndexName() *tree.TableIndexName {
	tn := u.val.(tree.TableIndexName)
	return &tn
}
func (u *sqlSymUnion) tableIndexName() tree.TableIndexName {
	return u.val.(tree.TableIndexName)
}
func (u *sqlSymUnion) newTableIndexNames() tree.TableIndexNames {
	return u.val.(tree.TableIndexNames)
}
func (u *sqlSymUnion) shardedIndexDef() *tree.ShardedIndexDef {
	return u.val.(*tree.ShardedIndexDef)
}
func (u *sqlSymUnion) nameList() tree.NameList {
	return u.val.(tree.NameList)
}
func (u *sqlSymUnion) enumValueList() tree.EnumValueList {
	return u.val.(tree.EnumValueList)
}
func (u *sqlSymUnion) unresolvedName() *tree.UnresolvedName {
	return u.val.(*tree.UnresolvedName)
}
func (u *sqlSymUnion) unresolvedObjectName() *tree.UnresolvedObjectName {
	return u.val.(*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) unresolvedObjectNames() []*tree.UnresolvedObjectName {
	return u.val.([]*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) functionReference() tree.FunctionReference {
	return u.val.(tree.FunctionReference)
}
func (u *sqlSymUnion) tablePatterns() tree.TablePatterns {
	return u.val.(tree.TablePatterns)
}
func (u *sqlSymUnion) tableNames() tree.TableNames {
	return u.val.(tree.TableNames)
}
func (u *sqlSymUnion) indexFlags() *tree.IndexFlags {
	return u.val.(*tree.IndexFlags)
}
func (u *sqlSymUnion) arraySubscript() *tree.ArraySubscript {
	return u.val.(*tree.ArraySubscript)
}
func (u *sqlSymUnion) arraySubscripts() tree.ArraySubscripts {
	if as, ok := u.val.(tree.ArraySubscripts); ok {
		return as
	}
	return nil
}
func (u *sqlSymUnion) stmt() tree.Statement {
	if stmt, ok := u.val.(tree.Statement); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) cte() *tree.CTE {
	if cte, ok := u.val.(*tree.CTE); ok {
		return cte
	}
	return nil
}
func (u *sqlSymUnion) ctes() []*tree.CTE {
	return u.val.([]*tree.CTE)
}
func (u *sqlSymUnion) with() *tree.With {
	if with, ok := u.val.(*tree.With); ok {
		return with
	}
	return nil
}
func (u *sqlSymUnion) slct() *tree.Select {
	return u.val.(*tree.Select)
}
func (u *sqlSymUnion) selectStmt() tree.SelectStatement {
	return u.val.(tree.SelectStatement)
}
func (u *sqlSymUnion) colDef() *tree.ColumnTableDef {
	return u.val.(*tree.ColumnTableDef)
}
func (u *sqlSymUnion) constraintDef() tree.ConstraintTableDef {
	return u.val.(tree.ConstraintTableDef)
}
func (u *sqlSymUnion) tblDef() tree.TableDef {
	return u.val.(tree.TableDef)
}
func (u *sqlSymUnion) tblDefs() tree.TableDefs {
	return u.val.(tree.TableDefs)
}
func (u *sqlSymUnion) likeTableOption() tree.LikeTableOption {
	return u.val.(tree.LikeTableOption)
}
func (u *sqlSymUnion) likeTableOptionList() []tree.LikeTableOption {
	return u.val.([]tree.LikeTableOption)
}
func (u *sqlSymUnion) colQual() tree.NamedColumnQualification {
	return u.val.(tree.NamedColumnQualification)
}
func (u *sqlSymUnion) colQualElem() tree.ColumnQualification {
	return u.val.(tree.ColumnQualification)
}
func (u *sqlSymUnion) colQuals() []tree.NamedColumnQualification {
	return u.val.([]tree.NamedColumnQualification)
}
func (u *sqlSymUnion) storageParam() tree.StorageParam {
	return u.val.(tree.StorageParam)
}
func (u *sqlSymUnion) storageParams() []tree.StorageParam {
	if params, ok := u.val.([]tree.StorageParam); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) storageParamKeys() []tree.Name {
	if params, ok := u.val.([]tree.Name); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) persistence() tree.Persistence {
	return u.val.(tree.Persistence)
}
func (u *sqlSymUnion) colType() *types.T {
	if colType, ok := u.val.(*types.T); ok && colType != nil {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) tableRefCols() []tree.ColumnID {
	if refCols, ok := u.val.([]tree.ColumnID); ok {
		return refCols
	}
	return nil
}
func (u *sqlSymUnion) colTypes() []*types.T {
	return u.val.([]*types.T)
}
func (u *sqlSymUnion) int32() int32 {
	return u.val.(int32)
}
func (u *sqlSymUnion) int64() int64 {
	return u.val.(int64)
}
func (u *sqlSymUnion) seqOpt() tree.SequenceOption {
	return u.val.(tree.SequenceOption)
}
func (u *sqlSymUnion) seqOpts() []tree.SequenceOption {
	return u.val.([]tree.SequenceOption)
}
func (u *sqlSymUnion) expr() tree.Expr {
	if expr, ok := u.val.(tree.Expr); ok {
		return expr
	}
	return nil
}
func (u *sqlSymUnion) exprs() tree.Exprs {
	return u.val.(tree.Exprs)
}
func (u *sqlSymUnion) selExpr() tree.SelectExpr {
	return u.val.(tree.SelectExpr)
}
func (u *sqlSymUnion) selExprs() tree.SelectExprs {
	return u.val.(tree.SelectExprs)
}
func (u *sqlSymUnion) retClause() tree.ReturningClause {
	return u.val.(tree.ReturningClause)
}
func (u *sqlSymUnion) aliasClause() tree.AliasClause {
	return u.val.(tree.AliasClause)
}
func (u *sqlSymUnion) asOfClause() tree.AsOfClause {
	return u.val.(tree.AsOfClause)
}
func (u *sqlSymUnion) tblExpr() tree.TableExpr {
	return u.val.(tree.TableExpr)
}
func (u *sqlSymUnion) tblExprs() tree.TableExprs {
	return u.val.(tree.TableExprs)
}
func (u *sqlSymUnion) from() tree.From {
	return u.val.(tree.From)
}
func (u *sqlSymUnion) int32s() []int32 {
	return u.val.([]int32)
}
func (u *sqlSymUnion) joinCond() tree.JoinCond {
	return u.val.(tree.JoinCond)
}
func (u *sqlSymUnion) when() *tree.When {
	return u.val.(*tree.When)
}
func (u *sqlSymUnion) whens() []*tree.When {
	return u.val.([]*tree.When)
}
func (u *sqlSymUnion) lockingClause() tree.LockingClause {
	return u.val.(tree.LockingClause)
}
func (u *sqlSymUnion) lockingItem() *tree.LockingItem {
	return u.val.(*tree.LockingItem)
}
func (u *sqlSymUnion) lockingStrength() tree.LockingStrength {
	return u.val.(tree.LockingStrength)
}
func (u *sqlSymUnion) lockingWaitPolicy() tree.LockingWaitPolicy {
	return u.val.(tree.LockingWaitPolicy)
}
func (u *sqlSymUnion) updateExpr() *tree.UpdateExpr {
	return u.val.(*tree.UpdateExpr)
}
func (u *sqlSymUnion) updateExprs() tree.UpdateExprs {
	return u.val.(tree.UpdateExprs)
}
func (u *sqlSymUnion) limit() *tree.Limit {
	return u.val.(*tree.Limit)
}
func (u *sqlSymUnion) targetList() tree.TargetList {
	return u.val.(tree.TargetList)
}
func (u *sqlSymUnion) targetListPtr() *tree.TargetList {
	return u.val.(*tree.TargetList)
}
func (u *sqlSymUnion) changefeedTargets() tree.ChangefeedTargets {
	return u.val.(tree.ChangefeedTargets)
}
func (u *sqlSymUnion) changefeedTarget() tree.ChangefeedTarget {
	return u.val.(tree.ChangefeedTarget)
}
func (u *sqlSymUnion) privilegeType() privilege.Kind {
	return u.val.(privilege.Kind)
}
func (u *sqlSymUnion) privilegeList() privilege.List {
	return u.val.(privilege.List)
}
func (u *sqlSymUnion) onConflict() *tree.OnConflict {
	return u.val.(*tree.OnConflict)
}
func (u *sqlSymUnion) orderBy() tree.OrderBy {
	return u.val.(tree.OrderBy)
}
func (u *sqlSymUnion) order() *tree.Order {
	return u.val.(*tree.Order)
}
func (u *sqlSymUnion) orders() []*tree.Order {
	return u.val.([]*tree.Order)
}
func (u *sqlSymUnion) groupBy() tree.GroupBy {
	return u.val.(tree.GroupBy)
}
func (u *sqlSymUnion) windowFrame() *tree.WindowFrame {
	return u.val.(*tree.WindowFrame)
}
func (u *sqlSymUnion) windowFrameBounds() tree.WindowFrameBounds {
	return u.val.(tree.WindowFrameBounds)
}
func (u *sqlSymUnion) windowFrameBound() *tree.WindowFrameBound {
	return u.val.(*tree.WindowFrameBound)
}
func (u *sqlSymUnion) windowFrameExclusion() treewindow.WindowFrameExclusion {
	return u.val.(treewindow.WindowFrameExclusion)
}
func (u *sqlSymUnion) distinctOn() tree.DistinctOn {
	return u.val.(tree.DistinctOn)
}
func (u *sqlSymUnion) dir() tree.Direction {
	return u.val.(tree.Direction)
}
func (u *sqlSymUnion) nullsOrder() tree.NullsOrder {
	return u.val.(tree.NullsOrder)
}
func (u *sqlSymUnion) alterChangefeedCmd() tree.AlterChangefeedCmd {
	return u.val.(tree.AlterChangefeedCmd)
}
func (u *sqlSymUnion) alterChangefeedCmds() tree.AlterChangefeedCmds {
	return u.val.(tree.AlterChangefeedCmds)
}
func (u *sqlSymUnion) backupKMS() tree.BackupKMS {
	return u.val.(tree.BackupKMS)
}
func (u *sqlSymUnion) alterBackupCmd() tree.AlterBackupCmd {
	return u.val.(tree.AlterBackupCmd)
}
func (u *sqlSymUnion) alterBackupCmds() tree.AlterBackupCmds {
	return u.val.(tree.AlterBackupCmds)
}
func (u *sqlSymUnion) alterTableCmd() tree.AlterTableCmd {
	return u.val.(tree.AlterTableCmd)
}
func (u *sqlSymUnion) alterTableCmds() tree.AlterTableCmds {
	return u.val.(tree.AlterTableCmds)
}
func (u *sqlSymUnion) alterIndexCmd() tree.AlterIndexCmd {
	return u.val.(tree.AlterIndexCmd)
}
func (u *sqlSymUnion) alterIndexCmds() tree.AlterIndexCmds {
	return u.val.(tree.AlterIndexCmds)
}
func (u *sqlSymUnion) isoLevel() tree.IsolationLevel {
	return u.val.(tree.IsolationLevel)
}
func (u *sqlSymUnion) userPriority() tree.UserPriority {
	return u.val.(tree.UserPriority)
}
func (u *sqlSymUnion) readWriteMode() tree.ReadWriteMode {
	return u.val.(tree.ReadWriteMode)
}
func (u *sqlSymUnion) deferrableMode() tree.DeferrableMode {
	return u.val.(tree.DeferrableMode)
}
func (u *sqlSymUnion) idxElem() tree.IndexElem {
	return u.val.(tree.IndexElem)
}
func (u *sqlSymUnion) idxElems() tree.IndexElemList {
	return u.val.(tree.IndexElemList)
}
func (u *sqlSymUnion) dropBehavior() tree.DropBehavior {
	return u.val.(tree.DropBehavior)
}
func (u *sqlSymUnion) validationBehavior() tree.ValidationBehavior {
	return u.val.(tree.ValidationBehavior)
}
func (u *sqlSymUnion) partitionBy() *tree.PartitionBy {
	return u.val.(*tree.PartitionBy)
}
func (u *sqlSymUnion) partitionByTable() *tree.PartitionByTable {
	return u.val.(*tree.PartitionByTable)
}
func (u *sqlSymUnion) partitionByIndex() *tree.PartitionByIndex {
	return u.val.(*tree.PartitionByIndex)
}
func (u *sqlSymUnion) createTableOnCommitSetting() tree.CreateTableOnCommitSetting {
	return u.val.(tree.CreateTableOnCommitSetting)
}
func (u *sqlSymUnion) listPartition() tree.ListPartition {
	return u.val.(tree.ListPartition)
}
func (u *sqlSymUnion) listPartitions() []tree.ListPartition {
	return u.val.([]tree.ListPartition)
}
func (u *sqlSymUnion) rangePartition() tree.RangePartition {
	return u.val.(tree.RangePartition)
}
func (u *sqlSymUnion) rangePartitions() []tree.RangePartition {
	return u.val.([]tree.RangePartition)
}
func (u *sqlSymUnion) relocateSubject() tree.RelocateSubject {
	return u.val.(tree.RelocateSubject)
}
func (u *sqlSymUnion) setZoneConfig() *tree.SetZoneConfig {
	return u.val.(*tree.SetZoneConfig)
}
func (u *sqlSymUnion) tuples() []*tree.Tuple {
	return u.val.([]*tree.Tuple)
}
func (u *sqlSymUnion) tuple() *tree.Tuple {
	return u.val.(*tree.Tuple)
}
func (u *sqlSymUnion) windowDef() *tree.WindowDef {
	return u.val.(*tree.WindowDef)
}
func (u *sqlSymUnion) window() tree.Window {
	return u.val.(tree.Window)
}
func (u *sqlSymUnion) op() tree.Operator {
	return u.val.(tree.Operator)
}
func (u *sqlSymUnion) cmpOp() treecmp.ComparisonOperator {
	return u.val.(treecmp.ComparisonOperator)
}
func (u *sqlSymUnion) intervalTypeMetadata() types.IntervalTypeMetadata {
	return u.val.(types.IntervalTypeMetadata)
}
func (u *sqlSymUnion) kvOption() tree.KVOption {
	return u.val.(tree.KVOption)
}
func (u *sqlSymUnion) kvOptions() []tree.KVOption {
	if colType, ok := u.val.([]tree.KVOption); ok {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) backupOptions() *tree.BackupOptions {
	return u.val.(*tree.BackupOptions)
}
func (u *sqlSymUnion) replicationOptions() *tree.ReplicationOptions {
	return u.val.(*tree.ReplicationOptions)
}
func (u *sqlSymUnion) copyOptions() *tree.CopyOptions {
	return u.val.(*tree.CopyOptions)
}
func (u *sqlSymUnion) restoreOptions() *tree.RestoreOptions {
	return u.val.(*tree.RestoreOptions)
}
func (u *sqlSymUnion) transactionModes() tree.TransactionModes {
	return u.val.(tree.TransactionModes)
}
func (u *sqlSymUnion) compositeKeyMatchMethod() tree.CompositeKeyMatchMethod {
	return u.val.(tree.CompositeKeyMatchMethod)
}
func (u *sqlSymUnion) referenceAction() tree.ReferenceAction {
	return u.val.(tree.ReferenceAction)
}
func (u *sqlSymUnion) referenceActions() tree.ReferenceActions {
	return u.val.(tree.ReferenceActions)
}
func (u *sqlSymUnion) createStatsOptions() *tree.CreateStatsOptions {
	return u.val.(*tree.CreateStatsOptions)
}
func (u *sqlSymUnion) scrubOptions() tree.ScrubOptions {
	return u.val.(tree.ScrubOptions)
}
func (u *sqlSymUnion) scrubOption() tree.ScrubOption {
	return u.val.(tree.ScrubOption)
}
func (u *sqlSymUnion) resolvableFuncRefFromName() tree.ResolvableFunctionReference {
	return tree.ResolvableFunctionReference{FunctionReference: u.unresolvedName()}
}
func (u *sqlSymUnion) rowsFromExpr() *tree.RowsFromExpr {
	return u.val.(*tree.RowsFromExpr)
}
func (u *sqlSymUnion) stringOrPlaceholderOptList() tree.StringOrPlaceholderOptList {
	return u.val.(tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) listOfStringOrPlaceholderOptList() []tree.StringOrPlaceholderOptList {
	return u.val.([]tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) fullBackupClause() *tree.FullBackupClause {
	return u.val.(*tree.FullBackupClause)
}

func (u *sqlSymUnion) scheduleLabelSpec() *tree.ScheduleLabelSpec {
	return u.val.(*tree.ScheduleLabelSpec)
}

func (u *sqlSymUnion) geoShapeType() geopb.ShapeType {
	return u.val.(geopb.ShapeType)
}
func newNameFromStr(s string) *tree.Name {
	return (*tree.Name)(&s)
}
func (u *sqlSymUnion) typeReference() tree.ResolvableTypeReference {
	return u.val.(tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) typeReferences() []tree.ResolvableTypeReference {
	return u.val.([]tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) alterTypeAddValuePlacement() *tree.AlterTypeAddValuePlacement {
	return u.val.(*tree.AlterTypeAddValuePlacement)
}
func (u *sqlSymUnion) scheduleState() tree.ScheduleState {
	return u.val.(tree.ScheduleState)
}
func (u *sqlSymUnion) executorType() tree.ScheduledJobExecutorType {
	return u.val.(tree.ScheduledJobExecutorType)
}
func (u *sqlSymUnion) refreshDataOption() tree.RefreshDataOption {
	return u.val.(tree.RefreshDataOption)
}
func (u *sqlSymUnion) locality() *tree.Locality {
	return u.val.(*tree.Locality)
}
func (u *sqlSymUnion) survivalGoal() tree.SurvivalGoal {
	return u.val.(tree.SurvivalGoal)
}
func (u *sqlSymUnion) dataPlacement() tree.DataPlacement {
	return u.val.(tree.DataPlacement)
}
func (u *sqlSymUnion) objectNamePrefix() tree.ObjectNamePrefix {
	return u.val.(tree.ObjectNamePrefix)
}
func (u *sqlSymUnion) objectNamePrefixList() tree.ObjectNamePrefixList {
	return u.val.(tree.ObjectNamePrefixList)
}
func (u *sqlSymUnion) abbreviatedGrant() tree.AbbreviatedGrant {
	return u.val.(tree.AbbreviatedGrant)
}
func (u *sqlSymUnion) abbreviatedRevoke() tree.AbbreviatedRevoke {
	return u.val.(tree.AbbreviatedRevoke)
}
func (u *sqlSymUnion) alterDefaultPrivilegesTargetObject() tree.AlterDefaultPrivilegesTargetObject {
	return u.val.(tree.AlterDefaultPrivilegesTargetObject)
}
func (u *sqlSymUnion) setVar() *tree.SetVar {
	return u.val.(*tree.SetVar)
}
func (u *sqlSymUnion) cursorSensitivity() tree.CursorSensitivity {
	return u.val.(tree.CursorSensitivity)
}
func (u *sqlSymUnion) cursorScrollOption() tree.CursorScrollOption {
	return u.val.(tree.CursorScrollOption)
}
func (u *sqlSymUnion) cursorStmt() tree.CursorStmt {
	return u.val.(tree.CursorStmt)
}

//line sql-gen.y:929
type sqlSymType struct {
	yys   int
	id    int32
	pos   int32
	str   string
	union sqlSymUnion
}

const IDENT = lexbase.IDENT
const SCONST = lexbase.SCONST
const BCONST = lexbase.BCONST
const BITCONST = lexbase.BITCONST
const ICONST = lexbase.ICONST
const FCONST = lexbase.FCONST
const PLACEHOLDER = lexbase.PLACEHOLDER
const TYPECAST = lexbase.TYPECAST
const TYPEANNOTATE = lexbase.TYPEANNOTATE
const DOT_DOT = lexbase.DOT_DOT
const LESS_EQUALS = lexbase.LESS_EQUALS
const GREATER_EQUALS = lexbase.GREATER_EQUALS
const NOT_EQUALS = lexbase.NOT_EQUALS
const NOT_REGMATCH = lexbase.NOT_REGMATCH
const REGIMATCH = lexbase.REGIMATCH
const NOT_REGIMATCH = lexbase.NOT_REGIMATCH
const ERROR = lexbase.ERROR
const ABORT = lexbase.ABORT
const ABSOLUTE = lexbase.ABSOLUTE
const ACCESS = lexbase.ACCESS
const ACTION = lexbase.ACTION
const ADD = lexbase.ADD
const ADMIN = lexbase.ADMIN
const AFTER = lexbase.AFTER
const AGGREGATE = lexbase.AGGREGATE
const ALL = lexbase.ALL
const ALTER = lexbase.ALTER
const ALWAYS = lexbase.ALWAYS
const ANALYSE = lexbase.ANALYSE
const ANALYZE = lexbase.ANALYZE
const AND = lexbase.AND
const AND_AND = lexbase.AND_AND
const ANY = lexbase.ANY
const ANNOTATE_TYPE = lexbase.ANNOTATE_TYPE
const ARRAY = lexbase.ARRAY
const AS = lexbase.AS
const ASC = lexbase.ASC
const ASENSITIVE = lexbase.ASENSITIVE
const ASYMMETRIC = lexbase.ASYMMETRIC
const AT = lexbase.AT
const ATTRIBUTE = lexbase.ATTRIBUTE
const AUTHORIZATION = lexbase.AUTHORIZATION
const AUTOMATIC = lexbase.AUTOMATIC
const AVAILABILITY = lexbase.AVAILABILITY
const BACKUP = lexbase.BACKUP
const BACKUPS = lexbase.BACKUPS
const BACKWARD = lexbase.BACKWARD
const BEFORE = lexbase.BEFORE
const BEGIN = lexbase.BEGIN
const BETWEEN = lexbase.BETWEEN
const BIGINT = lexbase.BIGINT
const BIGSERIAL = lexbase.BIGSERIAL
const BINARY = lexbase.BINARY
const BIT = lexbase.BIT
const BUCKET_COUNT = lexbase.BUCKET_COUNT
const BOOLEAN = lexbase.BOOLEAN
const BOTH = lexbase.BOTH
const BOX2D = lexbase.BOX2D
const BUNDLE = lexbase.BUNDLE
const BY = lexbase.BY
const CACHE = lexbase.CACHE
const CANCEL = lexbase.CANCEL
const CANCELQUERY = lexbase.CANCELQUERY
const CASCADE = lexbase.CASCADE
const CASE = lexbase.CASE
const CAST = lexbase.CAST
const CBRT = lexbase.CBRT
const CHANGEFEED = lexbase.CHANGEFEED
const CHAR = lexbase.CHAR
const CHARACTER = lexbase.CHARACTER
const CHARACTERISTICS = lexbase.CHARACTERISTICS
const CHECK = lexbase.CHECK
const CLOSE = lexbase.CLOSE
const CLUSTER = lexbase.CLUSTER
const COALESCE = lexbase.COALESCE
const COLLATE = lexbase.COLLATE
const COLLATION = lexbase.COLLATION
const COLUMN = lexbase.COLUMN
const COLUMNS = lexbase.COLUMNS
const COMMENT = lexbase.COMMENT
const COMMENTS = lexbase.COMMENTS
const COMMIT = lexbase.COMMIT
const COMMITTED = lexbase.COMMITTED
const COMPACT = lexbase.COMPACT
const COMPLETE = lexbase.COMPLETE
const COMPLETIONS = lexbase.COMPLETIONS
const CONCAT = lexbase.CONCAT
const CONCURRENTLY = lexbase.CONCURRENTLY
const CONFIGURATION = lexbase.CONFIGURATION
const CONFIGURATIONS = lexbase.CONFIGURATIONS
const CONFIGURE = lexbase.CONFIGURE
const CONFLICT = lexbase.CONFLICT
const CONNECTION = lexbase.CONNECTION
const CONSTRAINT = lexbase.CONSTRAINT
const CONSTRAINTS = lexbase.CONSTRAINTS
const CONTAINS = lexbase.CONTAINS
const CONTROLCHANGEFEED = lexbase.CONTROLCHANGEFEED
const CONTROLJOB = lexbase.CONTROLJOB
const CONVERSION = lexbase.CONVERSION
const CONVERT = lexbase.CONVERT
const COPY = lexbase.COPY
const COVERING = lexbase.COVERING
const CREATE = lexbase.CREATE
const CREATEDB = lexbase.CREATEDB
const CREATELOGIN = lexbase.CREATELOGIN
const CREATEROLE = lexbase.CREATEROLE
const CROSS = lexbase.CROSS
const CSV = lexbase.CSV
const CUBE = lexbase.CUBE
const CURRENT = lexbase.CURRENT
const CURRENT_CATALOG = lexbase.CURRENT_CATALOG
const CURRENT_DATE = lexbase.CURRENT_DATE
const CURRENT_SCHEMA = lexbase.CURRENT_SCHEMA
const CURRENT_ROLE = lexbase.CURRENT_ROLE
const CURRENT_TIME = lexbase.CURRENT_TIME
const CURRENT_TIMESTAMP = lexbase.CURRENT_TIMESTAMP
const CURRENT_USER = lexbase.CURRENT_USER
const CURSOR = lexbase.CURSOR
const CYCLE = lexbase.CYCLE
const DATA = lexbase.DATA
const DATABASE = lexbase.DATABASE
const DATABASES = lexbase.DATABASES
const DATE = lexbase.DATE
const DAY = lexbase.DAY
const DEBUG_PAUSE_ON = lexbase.DEBUG_PAUSE_ON
const DEC = lexbase.DEC
const DECIMAL = lexbase.DECIMAL
const DEFAULT = lexbase.DEFAULT
const DEFAULTS = lexbase.DEFAULTS
const DEALLOCATE = lexbase.DEALLOCATE
const DECLARE = lexbase.DECLARE
const DEFERRABLE = lexbase.DEFERRABLE
const DEFERRED = lexbase.DEFERRED
const DELETE = lexbase.DELETE
const DELIMITER = lexbase.DELIMITER
const DESC = lexbase.DESC
const DESTINATION = lexbase.DESTINATION
const DETACHED = lexbase.DETACHED
const DISCARD = lexbase.DISCARD
const DISTINCT = lexbase.DISTINCT
const DO = lexbase.DO
const DOMAIN = lexbase.DOMAIN
const DOUBLE = lexbase.DOUBLE
const DROP = lexbase.DROP
const ELSE = lexbase.ELSE
const ENCODING = lexbase.ENCODING
const ENCRYPTED = lexbase.ENCRYPTED
const ENCRYPTION_PASSPHRASE = lexbase.ENCRYPTION_PASSPHRASE
const END = lexbase.END
const ENUM = lexbase.ENUM
const ENUMS = lexbase.ENUMS
const ESCAPE = lexbase.ESCAPE
const EXCEPT = lexbase.EXCEPT
const EXCLUDE = lexbase.EXCLUDE
const EXCLUDING = lexbase.EXCLUDING
const EXISTS = lexbase.EXISTS
const EXECUTE = lexbase.EXECUTE
const EXECUTION = lexbase.EXECUTION
const EXPERIMENTAL = lexbase.EXPERIMENTAL
const EXPERIMENTAL_FINGERPRINTS = lexbase.EXPERIMENTAL_FINGERPRINTS
const EXPERIMENTAL_REPLICA = lexbase.EXPERIMENTAL_REPLICA
const EXPERIMENTAL_AUDIT = lexbase.EXPERIMENTAL_AUDIT
const EXPERIMENTAL_RELOCATE = lexbase.EXPERIMENTAL_RELOCATE
const EXPIRATION = lexbase.EXPIRATION
const EXPLAIN = lexbase.EXPLAIN
const EXPORT = lexbase.EXPORT
const EXTENSION = lexbase.EXTENSION
const EXTRACT = lexbase.EXTRACT
const EXTRACT_DURATION = lexbase.EXTRACT_DURATION
const FAILURE = lexbase.FAILURE
const FALSE = lexbase.FALSE
const FAMILY = lexbase.FAMILY
const FETCH = lexbase.FETCH
const FETCHVAL = lexbase.FETCHVAL
const FETCHTEXT = lexbase.FETCHTEXT
const FETCHVAL_PATH = lexbase.FETCHVAL_PATH
const FETCHTEXT_PATH = lexbase.FETCHTEXT_PATH
const FILES = lexbase.FILES
const FILTER = lexbase.FILTER
const FIRST = lexbase.FIRST
const FLOAT = lexbase.FLOAT
const FLOAT4 = lexbase.FLOAT4
const FLOAT8 = lexbase.FLOAT8
const FLOORDIV = lexbase.FLOORDIV
const FOLLOWING = lexbase.FOLLOWING
const FOR = lexbase.FOR
const FORCE = lexbase.FORCE
const FORCE_INDEX = lexbase.FORCE_INDEX
const FORCE_ZIGZAG = lexbase.FORCE_ZIGZAG
const FOREIGN = lexbase.FOREIGN
const FORWARD = lexbase.FORWARD
const FREEZE = lexbase.FREEZE
const FROM = lexbase.FROM
const FULL = lexbase.FULL
const FUNCTION = lexbase.FUNCTION
const FUNCTIONS = lexbase.FUNCTIONS
const GENERATED = lexbase.GENERATED
const GEOGRAPHY = lexbase.GEOGRAPHY
const GEOMETRY = lexbase.GEOMETRY
const GEOMETRYM = lexbase.GEOMETRYM
const GEOMETRYZ = lexbase.GEOMETRYZ
const GEOMETRYZM = lexbase.GEOMETRYZM
const GEOMETRYCOLLECTION = lexbase.GEOMETRYCOLLECTION
const GEOMETRYCOLLECTIONM = lexbase.GEOMETRYCOLLECTIONM
const GEOMETRYCOLLECTIONZ = lexbase.GEOMETRYCOLLECTIONZ
const GEOMETRYCOLLECTIONZM = lexbase.GEOMETRYCOLLECTIONZM
const GLOBAL = lexbase.GLOBAL
const GOAL = lexbase.GOAL
const GRANT = lexbase.GRANT
const GRANTS = lexbase.GRANTS
const GREATEST = lexbase.GREATEST
const GROUP = lexbase.GROUP
const GROUPING = lexbase.GROUPING
const GROUPS = lexbase.GROUPS
const HAVING = lexbase.HAVING
const HASH = lexbase.HASH
const HEADER = lexbase.HEADER
const HIGH = lexbase.HIGH
const HISTOGRAM = lexbase.HISTOGRAM
const HOLD = lexbase.HOLD
const HOUR = lexbase.HOUR
const IDENTITY = lexbase.IDENTITY
const IF = lexbase.IF
const IFERROR = lexbase.IFERROR
const IFNULL = lexbase.IFNULL
const IGNORE_FOREIGN_KEYS = lexbase.IGNORE_FOREIGN_KEYS
const ILIKE = lexbase.ILIKE
const IMMEDIATE = lexbase.IMMEDIATE
const IMPORT = lexbase.IMPORT
const IN = lexbase.IN
const INCLUDE = lexbase.INCLUDE
const INCLUDING = lexbase.INCLUDING
const INCREMENT = lexbase.INCREMENT
const INCREMENTAL = lexbase.INCREMENTAL
const INCREMENTAL_LOCATION = lexbase.INCREMENTAL_LOCATION
const INET = lexbase.INET
const INET_CONTAINED_BY_OR_EQUALS = lexbase.INET_CONTAINED_BY_OR_EQUALS
const INET_CONTAINS_OR_EQUALS = lexbase.INET_CONTAINS_OR_EQUALS
const INDEX = lexbase.INDEX
const INDEXES = lexbase.INDEXES
const INHERITS = lexbase.INHERITS
const INJECT = lexbase.INJECT
const INITIALLY = lexbase.INITIALLY
const INNER = lexbase.INNER
const INSENSITIVE = lexbase.INSENSITIVE
const INSERT = lexbase.INSERT
const INT = lexbase.INT
const INTEGER = lexbase.INTEGER
const INTERSECT = lexbase.INTERSECT
const INTERVAL = lexbase.INTERVAL
const INTO = lexbase.INTO
const INTO_DB = lexbase.INTO_DB
const INVERTED = lexbase.INVERTED
const IS = lexbase.IS
const ISERROR = lexbase.ISERROR
const ISNULL = lexbase.ISNULL
const ISOLATION = lexbase.ISOLATION
const JOB = lexbase.JOB
const JOBS = lexbase.JOBS
const JOIN = lexbase.JOIN
const JSON = lexbase.JSON
const JSONB = lexbase.JSONB
const JSON_SOME_EXISTS = lexbase.JSON_SOME_EXISTS
const JSON_ALL_EXISTS = lexbase.JSON_ALL_EXISTS
const KEY = lexbase.KEY
const KEYS = lexbase.KEYS
const KMS = lexbase.KMS
const KV = lexbase.KV
const LANGUAGE = lexbase.LANGUAGE
const LAST = lexbase.LAST
const LATERAL = lexbase.LATERAL
const LATEST = lexbase.LATEST
const LC_CTYPE = lexbase.LC_CTYPE
const LC_COLLATE = lexbase.LC_COLLATE
const LEADING = lexbase.LEADING
const LEASE = lexbase.LEASE
const LEAST = lexbase.LEAST
const LEFT = lexbase.LEFT
const LESS = lexbase.LESS
const LEVEL = lexbase.LEVEL
const LIKE = lexbase.LIKE
const LIMIT = lexbase.LIMIT
const LINESTRING = lexbase.LINESTRING
const LINESTRINGM = lexbase.LINESTRINGM
const LINESTRINGZ = lexbase.LINESTRINGZ
const LINESTRINGZM = lexbase.LINESTRINGZM
const LIST = lexbase.LIST
const LOCAL = lexbase.LOCAL
const LOCALITY = lexbase.LOCALITY
const LOCALTIME = lexbase.LOCALTIME
const LOCALTIMESTAMP = lexbase.LOCALTIMESTAMP
const LOCKED = lexbase.LOCKED
const LOGIN = lexbase.LOGIN
const LOOKUP = lexbase.LOOKUP
const LOW = lexbase.LOW
const LSHIFT = lexbase.LSHIFT
const MATCH = lexbase.MATCH
const MATERIALIZED = lexbase.MATERIALIZED
const MERGE = lexbase.MERGE
const MINVALUE = lexbase.MINVALUE
const MAXVALUE = lexbase.MAXVALUE
const METHOD = lexbase.METHOD
const MINUTE = lexbase.MINUTE
const MODIFYCLUSTERSETTING = lexbase.MODIFYCLUSTERSETTING
const MONTH = lexbase.MONTH
const MOVE = lexbase.MOVE
const MULTILINESTRING = lexbase.MULTILINESTRING
const MULTILINESTRINGM = lexbase.MULTILINESTRINGM
const MULTILINESTRINGZ = lexbase.MULTILINESTRINGZ
const MULTILINESTRINGZM = lexbase.MULTILINESTRINGZM
const MULTIPOINT = lexbase.MULTIPOINT
const MULTIPOINTM = lexbase.MULTIPOINTM
const MULTIPOINTZ = lexbase.MULTIPOINTZ
const MULTIPOINTZM = lexbase.MULTIPOINTZM
const MULTIPOLYGON = lexbase.MULTIPOLYGON
const MULTIPOLYGONM = lexbase.MULTIPOLYGONM
const MULTIPOLYGONZ = lexbase.MULTIPOLYGONZ
const MULTIPOLYGONZM = lexbase.MULTIPOLYGONZM
const NAN = lexbase.NAN
const NAME = lexbase.NAME
const NAMES = lexbase.NAMES
const NATURAL = lexbase.NATURAL
const NEVER = lexbase.NEVER
const NEW_DB_NAME = lexbase.NEW_DB_NAME
const NEW_KMS = lexbase.NEW_KMS
const NEXT = lexbase.NEXT
const NO = lexbase.NO
const NOCANCELQUERY = lexbase.NOCANCELQUERY
const NOCONTROLCHANGEFEED = lexbase.NOCONTROLCHANGEFEED
const NOCONTROLJOB = lexbase.NOCONTROLJOB
const NOCREATEDB = lexbase.NOCREATEDB
const NOCREATELOGIN = lexbase.NOCREATELOGIN
const NOCREATEROLE = lexbase.NOCREATEROLE
const NOLOGIN = lexbase.NOLOGIN
const NOMODIFYCLUSTERSETTING = lexbase.NOMODIFYCLUSTERSETTING
const NOSQLLOGIN = lexbase.NOSQLLOGIN
const NO_INDEX_JOIN = lexbase.NO_INDEX_JOIN
const NO_ZIGZAG_JOIN = lexbase.NO_ZIGZAG_JOIN
const NO_FULL_SCAN = lexbase.NO_FULL_SCAN
const NONE = lexbase.NONE
const NONVOTERS = lexbase.NONVOTERS
const NORMAL = lexbase.NORMAL
const NOT = lexbase.NOT
const NOTHING = lexbase.NOTHING
const NOTNULL = lexbase.NOTNULL
const NOVIEWACTIVITY = lexbase.NOVIEWACTIVITY
const NOVIEWACTIVITYREDACTED = lexbase.NOVIEWACTIVITYREDACTED
const NOVIEWCLUSTERSETTING = lexbase.NOVIEWCLUSTERSETTING
const NOWAIT = lexbase.NOWAIT
const NULL = lexbase.NULL
const NULLIF = lexbase.NULLIF
const NULLS = lexbase.NULLS
const NUMERIC = lexbase.NUMERIC
const OF = lexbase.OF
const OFF = lexbase.OFF
const OFFSET = lexbase.OFFSET
const OID = lexbase.OID
const OIDS = lexbase.OIDS
const OIDVECTOR = lexbase.OIDVECTOR
const OLD_KMS = lexbase.OLD_KMS
const ON = lexbase.ON
const ONLY = lexbase.ONLY
const OPT = lexbase.OPT
const OPTION = lexbase.OPTION
const OPTIONS = lexbase.OPTIONS
const OR = lexbase.OR
const ORDER = lexbase.ORDER
const ORDINALITY = lexbase.ORDINALITY
const OTHERS = lexbase.OTHERS
const OUT = lexbase.OUT
const OUTER = lexbase.OUTER
const OVER = lexbase.OVER
const OVERLAPS = lexbase.OVERLAPS
const OVERLAY = lexbase.OVERLAY
const OWNED = lexbase.OWNED
const OWNER = lexbase.OWNER
const OPERATOR = lexbase.OPERATOR
const PARENT = lexbase.PARENT
const PARTIAL = lexbase.PARTIAL
const PARTITION = lexbase.PARTITION
const PARTITIONS = lexbase.PARTITIONS
const PASSWORD = lexbase.PASSWORD
const PAUSE = lexbase.PAUSE
const PAUSED = lexbase.PAUSED
const PHYSICAL = lexbase.PHYSICAL
const PLACEMENT = lexbase.PLACEMENT
const PLACING = lexbase.PLACING
const PLAN = lexbase.PLAN
const PLANS = lexbase.PLANS
const POINT = lexbase.POINT
const POINTM = lexbase.POINTM
const POINTZ = lexbase.POINTZ
const POINTZM = lexbase.POINTZM
const POLYGON = lexbase.POLYGON
const POLYGONM = lexbase.POLYGONM
const POLYGONZ = lexbase.POLYGONZ
const POLYGONZM = lexbase.POLYGONZM
const POSITION = lexbase.POSITION
const PRECEDING = lexbase.PRECEDING
const PRECISION = lexbase.PRECISION
const PREPARE = lexbase.PREPARE
const PRESERVE = lexbase.PRESERVE
const PRIMARY = lexbase.PRIMARY
const PRIOR = lexbase.PRIOR
const PRIORITY = lexbase.PRIORITY
const PRIVILEGES = lexbase.PRIVILEGES
const PROCEDURAL = lexbase.PROCEDURAL
const PUBLIC = lexbase.PUBLIC
const PUBLICATION = lexbase.PUBLICATION
const QUERIES = lexbase.QUERIES
const QUERY = lexbase.QUERY
const QUOTE = lexbase.QUOTE
const RANGE = lexbase.RANGE
const RANGES = lexbase.RANGES
const READ = lexbase.READ
const REAL = lexbase.REAL
const REASON = lexbase.REASON
const REASSIGN = lexbase.REASSIGN
const RECURSIVE = lexbase.RECURSIVE
const RECURRING = lexbase.RECURRING
const REF = lexbase.REF
const REFERENCES = lexbase.REFERENCES
const REFRESH = lexbase.REFRESH
const REGCLASS = lexbase.REGCLASS
const REGION = lexbase.REGION
const REGIONAL = lexbase.REGIONAL
const REGIONS = lexbase.REGIONS
const REGNAMESPACE = lexbase.REGNAMESPACE
const REGPROC = lexbase.REGPROC
const REGPROCEDURE = lexbase.REGPROCEDURE
const REGROLE = lexbase.REGROLE
const REGTYPE = lexbase.REGTYPE
const REINDEX = lexbase.REINDEX
const RELATIVE = lexbase.RELATIVE
const RELOCATE = lexbase.RELOCATE
const REMOVE_PATH = lexbase.REMOVE_PATH
const RENAME = lexbase.RENAME
const REPEATABLE = lexbase.REPEATABLE
const REPLACE = lexbase.REPLACE
const REPLICATION = lexbase.REPLICATION
const RELEASE = lexbase.RELEASE
const RESET = lexbase.RESET
const RESTORE = lexbase.RESTORE
const RESTRICT = lexbase.RESTRICT
const RESTRICTED = lexbase.RESTRICTED
const RESUME = lexbase.RESUME
const RETURNING = lexbase.RETURNING
const RETRY = lexbase.RETRY
const REVISION_HISTORY = lexbase.REVISION_HISTORY
const REVOKE = lexbase.REVOKE
const RIGHT = lexbase.RIGHT
const ROLE = lexbase.ROLE
const ROLES = lexbase.ROLES
const ROLLBACK = lexbase.ROLLBACK
const ROLLUP = lexbase.ROLLUP
const ROUTINES = lexbase.ROUTINES
const ROW = lexbase.ROW
const ROWS = lexbase.ROWS
const RSHIFT = lexbase.RSHIFT
const RULE = lexbase.RULE
const RUNNING = lexbase.RUNNING
const SAVEPOINT = lexbase.SAVEPOINT
const SCANS = lexbase.SCANS
const SCATTER = lexbase.SCATTER
const SCHEDULE = lexbase.SCHEDULE
const SCHEDULES = lexbase.SCHEDULES
const SCROLL = lexbase.SCROLL
const SCHEMA = lexbase.SCHEMA
const SCHEMAS = lexbase.SCHEMAS
const SCRUB = lexbase.SCRUB
const SEARCH = lexbase.SEARCH
const SECOND = lexbase.SECOND
const SELECT = lexbase.SELECT
const SEQUENCE = lexbase.SEQUENCE
const SEQUENCES = lexbase.SEQUENCES
const SERIALIZABLE = lexbase.SERIALIZABLE
const SERVER = lexbase.SERVER
const SESSION = lexbase.SESSION
const SESSIONS = lexbase.SESSIONS
const SESSION_USER = lexbase.SESSION_USER
const SET = lexbase.SET
const SETS = lexbase.SETS
const SETTING = lexbase.SETTING
const SETTINGS = lexbase.SETTINGS
const SHARE = lexbase.SHARE
const SHOW = lexbase.SHOW
const SIMILAR = lexbase.SIMILAR
const SIMPLE = lexbase.SIMPLE
const SKIP = lexbase.SKIP
const SKIP_LOCALITIES_CHECK = lexbase.SKIP_LOCALITIES_CHECK
const SKIP_MISSING_FOREIGN_KEYS = lexbase.SKIP_MISSING_FOREIGN_KEYS
const SKIP_MISSING_SEQUENCES = lexbase.SKIP_MISSING_SEQUENCES
const SKIP_MISSING_SEQUENCE_OWNERS = lexbase.SKIP_MISSING_SEQUENCE_OWNERS
const SKIP_MISSING_VIEWS = lexbase.SKIP_MISSING_VIEWS
const SMALLINT = lexbase.SMALLINT
const SMALLSERIAL = lexbase.SMALLSERIAL
const SNAPSHOT = lexbase.SNAPSHOT
const SOME = lexbase.SOME
const SPLIT = lexbase.SPLIT
const SQL = lexbase.SQL
const SQLLOGIN = lexbase.SQLLOGIN
const START = lexbase.START
const STATE = lexbase.STATE
const STATISTICS = lexbase.STATISTICS
const STATUS = lexbase.STATUS
const STDIN = lexbase.STDIN
const STREAM = lexbase.STREAM
const STRICT = lexbase.STRICT
const STRING = lexbase.STRING
const STORAGE = lexbase.STORAGE
const STORE = lexbase.STORE
const STORED = lexbase.STORED
const STORING = lexbase.STORING
const SUBSTRING = lexbase.SUBSTRING
const SUPER = lexbase.SUPER
const SURVIVE = lexbase.SURVIVE
const SURVIVAL = lexbase.SURVIVAL
const SYMMETRIC = lexbase.SYMMETRIC
const SYNTAX = lexbase.SYNTAX
const SYSTEM = lexbase.SYSTEM
const SQRT = lexbase.SQRT
const SUBSCRIPTION = lexbase.SUBSCRIPTION
const STATEMENTS = lexbase.STATEMENTS
const TABLE = lexbase.TABLE
const TABLES = lexbase.TABLES
const TABLESPACE = lexbase.TABLESPACE
const TEMP = lexbase.TEMP
const TEMPLATE = lexbase.TEMPLATE
const TEMPORARY = lexbase.TEMPORARY
const TENANT = lexbase.TENANT
const TENANTS = lexbase.TENANTS
const TESTING_RELOCATE = lexbase.TESTING_RELOCATE
const TEXT = lexbase.TEXT
const THEN = lexbase.THEN
const TIES = lexbase.TIES
const TIME = lexbase.TIME
const TIMETZ = lexbase.TIMETZ
const TIMESTAMP = lexbase.TIMESTAMP
const TIMESTAMPTZ = lexbase.TIMESTAMPTZ
const TO = lexbase.TO
const THROTTLING = lexbase.THROTTLING
const TRAILING = lexbase.TRAILING
const TRACE = lexbase.TRACE
const TRANSACTION = lexbase.TRANSACTION
const TRANSACTIONS = lexbase.TRANSACTIONS
const TRANSFER = lexbase.TRANSFER
const TREAT = lexbase.TREAT
const TRIGGER = lexbase.TRIGGER
const TRIM = lexbase.TRIM
const TRUE = lexbase.TRUE
const TRUNCATE = lexbase.TRUNCATE
const TRUSTED = lexbase.TRUSTED
const TYPE = lexbase.TYPE
const TYPES = lexbase.TYPES
const TRACING = lexbase.TRACING
const UNBOUNDED = lexbase.UNBOUNDED
const UNCOMMITTED = lexbase.UNCOMMITTED
const UNION = lexbase.UNION
const UNIQUE = lexbase.UNIQUE
const UNKNOWN = lexbase.UNKNOWN
const UNLOGGED = lexbase.UNLOGGED
const UNSPLIT = lexbase.UNSPLIT
const UPDATE = lexbase.UPDATE
const UPSERT = lexbase.UPSERT
const UNSET = lexbase.UNSET
const UNTIL = lexbase.UNTIL
const USE = lexbase.USE
const USER = lexbase.USER
const USERS = lexbase.USERS
const USING = lexbase.USING
const UUID = lexbase.UUID
const VALID = lexbase.VALID
const VALIDATE = lexbase.VALIDATE
const VALUE = lexbase.VALUE
const VALUES = lexbase.VALUES
const VARBIT = lexbase.VARBIT
const VARCHAR = lexbase.VARCHAR
const VARIADIC = lexbase.VARIADIC
const VIEW = lexbase.VIEW
const VARYING = lexbase.VARYING
const VIEWACTIVITY = lexbase.VIEWACTIVITY
const VIEWACTIVITYREDACTED = lexbase.VIEWACTIVITYREDACTED
const VIEWCLUSTERSETTING = lexbase.VIEWCLUSTERSETTING
const VIRTUAL = lexbase.VIRTUAL
const VISIBLE = lexbase.VISIBLE
const VOTERS = lexbase.VOTERS
const WHEN = lexbase.WHEN
const WHERE = lexbase.WHERE
const WINDOW = lexbase.WINDOW
const WITH = lexbase.WITH
const WITHIN = lexbase.WITHIN
const WITHOUT = lexbase.WITHOUT
const WORK = lexbase.WORK
const WRITE = lexbase.WRITE
const YEAR = lexbase.YEAR
const ZONE = lexbase.ZONE
const NOT_LA = lexbase.NOT_LA
const NULLS_LA = lexbase.NULLS_LA
const WITH_LA = lexbase.WITH_LA
const AS_LA = lexbase.AS_LA
const GENERATED_ALWAYS = lexbase.GENERATED_ALWAYS
const GENERATED_BY_DEFAULT = lexbase.GENERATED_BY_DEFAULT
const RESET_ALL = lexbase.RESET_ALL
const ROLE_ALL = lexbase.ROLE_ALL
const USER_ALL = lexbase.USER_ALL
const ON_LA = lexbase.ON_LA
const TENANT_ALL = lexbase.TENANT_ALL
const CONTAINED_BY = lexbase.CONTAINED_BY
const POSTFIXOP = lexbase.POSTFIXOP
const INTERVAL_SIMPLE = lexbase.INTERVAL_SIMPLE
const UMINUS = lexbase.UMINUS
const HELPTOKEN = lexbase.HELPTOKEN

var sqlToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENT",
	"SCONST",
	"BCONST",
	"BITCONST",
	"ICONST",
	"FCONST",
	"PLACEHOLDER",
	"TYPECAST",
	"TYPEANNOTATE",
	"DOT_DOT",
	"LESS_EQUALS",
	"GREATER_EQUALS",
	"NOT_EQUALS",
	"NOT_REGMATCH",
	"REGIMATCH",
	"NOT_REGIMATCH",
	"ERROR",
	"ABORT",
	"ABSOLUTE",
	"ACCESS",
	"ACTION",
	"ADD",
	"ADMIN",
	"AFTER",
	"AGGREGATE",
	"ALL",
	"ALTER",
	"ALWAYS",
	"ANALYSE",
	"ANALYZE",
	"AND",
	"AND_AND",
	"ANY",
	"ANNOTATE_TYPE",
	"ARRAY",
	"AS",
	"ASC",
	"ASENSITIVE",
	"ASYMMETRIC",
	"AT",
	"ATTRIBUTE",
	"AUTHORIZATION",
	"AUTOMATIC",
	"AVAILABILITY",
	"BACKUP",
	"BACKUPS",
	"BACKWARD",
	"BEFORE",
	"BEGIN",
	"BETWEEN",
	"BIGINT",
	"BIGSERIAL",
	"BINARY",
	"BIT",
	"BUCKET_COUNT",
	"BOOLEAN",
	"BOTH",
	"BOX2D",
	"BUNDLE",
	"BY",
	"CACHE",
	"CANCEL",
	"CANCELQUERY",
	"CASCADE",
	"CASE",
	"CAST",
	"CBRT",
	"CHANGEFEED",
	"CHAR",
	"CHARACTER",
	"CHARACTERISTICS",
	"CHECK",
	"CLOSE",
	"CLUSTER",
	"COALESCE",
	"COLLATE",
	"COLLATION",
	"COLUMN",
	"COLUMNS",
	"COMMENT",
	"COMMENTS",
	"COMMIT",
	"COMMITTED",
	"COMPACT",
	"COMPLETE",
	"COMPLETIONS",
	"CONCAT",
	"CONCURRENTLY",
	"CONFIGURATION",
	"CONFIGURATIONS",
	"CONFIGURE",
	"CONFLICT",
	"CONNECTION",
	"CONSTRAINT",
	"CONSTRAINTS",
	"CONTAINS",
	"CONTROLCHANGEFEED",
	"CONTROLJOB",
	"CONVERSION",
	"CONVERT",
	"COPY",
	"COVERING",
	"CREATE",
	"CREATEDB",
	"CREATELOGIN",
	"CREATEROLE",
	"CROSS",
	"CSV",
	"CUBE",
	"CURRENT",
	"CURRENT_CATALOG",
	"CURRENT_DATE",
	"CURRENT_SCHEMA",
	"CURRENT_ROLE",
	"CURRENT_TIME",
	"CURRENT_TIMESTAMP",
	"CURRENT_USER",
	"CURSOR",
	"CYCLE",
	"DATA",
	"DATABASE",
	"DATABASES",
	"DATE",
	"DAY",
	"DEBUG_PAUSE_ON",
	"DEC",
	"DECIMAL",
	"DEFAULT",
	"DEFAULTS",
	"DEALLOCATE",
	"DECLARE",
	"DEFERRABLE",
	"DEFERRED",
	"DELETE",
	"DELIMITER",
	"DESC",
	"DESTINATION",
	"DETACHED",
	"DISCARD",
	"DISTINCT",
	"DO",
	"DOMAIN",
	"DOUBLE",
	"DROP",
	"ELSE",
	"ENCODING",
	"ENCRYPTED",
	"ENCRYPTION_PASSPHRASE",
	"END",
	"ENUM",
	"ENUMS",
	"ESCAPE",
	"EXCEPT",
	"EXCLUDE",
	"EXCLUDING",
	"EXISTS",
	"EXECUTE",
	"EXECUTION",
	"EXPERIMENTAL",
	"EXPERIMENTAL_FINGERPRINTS",
	"EXPERIMENTAL_REPLICA",
	"EXPERIMENTAL_AUDIT",
	"EXPERIMENTAL_RELOCATE",
	"EXPIRATION",
	"EXPLAIN",
	"EXPORT",
	"EXTENSION",
	"EXTRACT",
	"EXTRACT_DURATION",
	"FAILURE",
	"FALSE",
	"FAMILY",
	"FETCH",
	"FETCHVAL",
	"FETCHTEXT",
	"FETCHVAL_PATH",
	"FETCHTEXT_PATH",
	"FILES",
	"FILTER",
	"FIRST",
	"FLOAT",
	"FLOAT4",
	"FLOAT8",
	"FLOORDIV",
	"FOLLOWING",
	"FOR",
	"FORCE",
	"FORCE_INDEX",
	"FORCE_ZIGZAG",
	"FOREIGN",
	"FORWARD",
	"FREEZE",
	"FROM",
	"FULL",
	"FUNCTION",
	"FUNCTIONS",
	"GENERATED",
	"GEOGRAPHY",
	"GEOMETRY",
	"GEOMETRYM",
	"GEOMETRYZ",
	"GEOMETRYZM",
	"GEOMETRYCOLLECTION",
	"GEOMETRYCOLLECTIONM",
	"GEOMETRYCOLLECTIONZ",
	"GEOMETRYCOLLECTIONZM",
	"GLOBAL",
	"GOAL",
	"GRANT",
	"GRANTS",
	"GREATEST",
	"GROUP",
	"GROUPING",
	"GROUPS",
	"HAVING",
	"HASH",
	"HEADER",
	"HIGH",
	"HISTOGRAM",
	"HOLD",
	"HOUR",
	"IDENTITY",
	"IF",
	"IFERROR",
	"IFNULL",
	"IGNORE_FOREIGN_KEYS",
	"ILIKE",
	"IMMEDIATE",
	"IMPORT",
	"IN",
	"INCLUDE",
	"INCLUDING",
	"INCREMENT",
	"INCREMENTAL",
	"INCREMENTAL_LOCATION",
	"INET",
	"INET_CONTAINED_BY_OR_EQUALS",
	"INET_CONTAINS_OR_EQUALS",
	"INDEX",
	"INDEXES",
	"INHERITS",
	"INJECT",
	"INITIALLY",
	"INNER",
	"INSENSITIVE",
	"INSERT",
	"INT",
	"INTEGER",
	"INTERSECT",
	"INTERVAL",
	"INTO",
	"INTO_DB",
	"INVERTED",
	"IS",
	"ISERROR",
	"ISNULL",
	"ISOLATION",
	"JOB",
	"JOBS",
	"JOIN",
	"JSON",
	"JSONB",
	"JSON_SOME_EXISTS",
	"JSON_ALL_EXISTS",
	"KEY",
	"KEYS",
	"KMS",
	"KV",
	"LANGUAGE",
	"LAST",
	"LATERAL",
	"LATEST",
	"LC_CTYPE",
	"LC_COLLATE",
	"LEADING",
	"LEASE",
	"LEAST",
	"LEFT",
	"LESS",
	"LEVEL",
	"LIKE",
	"LIMIT",
	"LINESTRING",
	"LINESTRINGM",
	"LINESTRINGZ",
	"LINESTRINGZM",
	"LIST",
	"LOCAL",
	"LOCALITY",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"LOCKED",
	"LOGIN",
	"LOOKUP",
	"LOW",
	"LSHIFT",
	"MATCH",
	"MATERIALIZED",
	"MERGE",
	"MINVALUE",
	"MAXVALUE",
	"METHOD",
	"MINUTE",
	"MODIFYCLUSTERSETTING",
	"MONTH",
	"MOVE",
	"MULTILINESTRING",
	"MULTILINESTRINGM",
	"MULTILINESTRINGZ",
	"MULTILINESTRINGZM",
	"MULTIPOINT",
	"MULTIPOINTM",
	"MULTIPOINTZ",
	"MULTIPOINTZM",
	"MULTIPOLYGON",
	"MULTIPOLYGONM",
	"MULTIPOLYGONZ",
	"MULTIPOLYGONZM",
	"NAN",
	"NAME",
	"NAMES",
	"NATURAL",
	"NEVER",
	"NEW_DB_NAME",
	"NEW_KMS",
	"NEXT",
	"NO",
	"NOCANCELQUERY",
	"NOCONTROLCHANGEFEED",
	"NOCONTROLJOB",
	"NOCREATEDB",
	"NOCREATELOGIN",
	"NOCREATEROLE",
	"NOLOGIN",
	"NOMODIFYCLUSTERSETTING",
	"NOSQLLOGIN",
	"NO_INDEX_JOIN",
	"NO_ZIGZAG_JOIN",
	"NO_FULL_SCAN",
	"NONE",
	"NONVOTERS",
	"NORMAL",
	"NOT",
	"NOTHING",
	"NOTNULL",
	"NOVIEWACTIVITY",
	"NOVIEWACTIVITYREDACTED",
	"NOVIEWCLUSTERSETTING",
	"NOWAIT",
	"NULL",
	"NULLIF",
	"NULLS",
	"NUMERIC",
	"OF",
	"OFF",
	"OFFSET",
	"OID",
	"OIDS",
	"OIDVECTOR",
	"OLD_KMS",
	"ON",
	"ONLY",
	"OPT",
	"OPTION",
	"OPTIONS",
	"OR",
	"ORDER",
	"ORDINALITY",
	"OTHERS",
	"OUT",
	"OUTER",
	"OVER",
	"OVERLAPS",
	"OVERLAY",
	"OWNED",
	"OWNER",
	"OPERATOR",
	"PARENT",
	"PARTIAL",
	"PARTITION",
	"PARTITIONS",
	"PASSWORD",
	"PAUSE",
	"PAUSED",
	"PHYSICAL",
	"PLACEMENT",
	"PLACING",
	"PLAN",
	"PLANS",
	"POINT",
	"POINTM",
	"POINTZ",
	"POINTZM",
	"POLYGON",
	"POLYGONM",
	"POLYGONZ",
	"POLYGONZM",
	"POSITION",
	"PRECEDING",
	"PRECISION",
	"PREPARE",
	"PRESERVE",
	"PRIMARY",
	"PRIOR",
	"PRIORITY",
	"PRIVILEGES",
	"PROCEDURAL",
	"PUBLIC",
	"PUBLICATION",
	"QUERIES",
	"QUERY",
	"QUOTE",
	"RANGE",
	"RANGES",
	"READ",
	"REAL",
	"REASON",
	"REASSIGN",
	"RECURSIVE",
	"RECURRING",
	"REF",
	"REFERENCES",
	"REFRESH",
	"REGCLASS",
	"REGION",
	"REGIONAL",
	"REGIONS",
	"REGNAMESPACE",
	"REGPROC",
	"REGPROCEDURE",
	"REGROLE",
	"REGTYPE",
	"REINDEX",
	"RELATIVE",
	"RELOCATE",
	"REMOVE_PATH",
	"RENAME",
	"REPEATABLE",
	"REPLACE",
	"REPLICATION",
	"RELEASE",
	"RESET",
	"RESTORE",
	"RESTRICT",
	"RESTRICTED",
	"RESUME",
	"RETURNING",
	"RETRY",
	"REVISION_HISTORY",
	"REVOKE",
	"RIGHT",
	"ROLE",
	"ROLES",
	"ROLLBACK",
	"ROLLUP",
	"ROUTINES",
	"ROW",
	"ROWS",
	"RSHIFT",
	"RULE",
	"RUNNING",
	"SAVEPOINT",
	"SCANS",
	"SCATTER",
	"SCHEDULE",
	"SCHEDULES",
	"SCROLL",
	"SCHEMA",
	"SCHEMAS",
	"SCRUB",
	"SEARCH",
	"SECOND",
	"SELECT",
	"SEQUENCE",
	"SEQUENCES",
	"SERIALIZABLE",
	"SERVER",
	"SESSION",
	"SESSIONS",
	"SESSION_USER",
	"SET",
	"SETS",
	"SETTING",
	"SETTINGS",
	"SHARE",
	"SHOW",
	"SIMILAR",
	"SIMPLE",
	"SKIP",
	"SKIP_LOCALITIES_CHECK",
	"SKIP_MISSING_FOREIGN_KEYS",
	"SKIP_MISSING_SEQUENCES",
	"SKIP_MISSING_SEQUENCE_OWNERS",
	"SKIP_MISSING_VIEWS",
	"SMALLINT",
	"SMALLSERIAL",
	"SNAPSHOT",
	"SOME",
	"SPLIT",
	"SQL",
	"SQLLOGIN",
	"START",
	"STATE",
	"STATISTICS",
	"STATUS",
	"STDIN",
	"STREAM",
	"STRICT",
	"STRING",
	"STORAGE",
	"STORE",
	"STORED",
	"STORING",
	"SUBSTRING",
	"SUPER",
	"SURVIVE",
	"SURVIVAL",
	"SYMMETRIC",
	"SYNTAX",
	"SYSTEM",
	"SQRT",
	"SUBSCRIPTION",
	"STATEMENTS",
	"TABLE",
	"TABLES",
	"TABLESPACE",
	"TEMP",
	"TEMPLATE",
	"TEMPORARY",
	"TENANT",
	"TENANTS",
	"TESTING_RELOCATE",
	"TEXT",
	"THEN",
	"TIES",
	"TIME",
	"TIMETZ",
	"TIMESTAMP",
	"TIMESTAMPTZ",
	"TO",
	"THROTTLING",
	"TRAILING",
	"TRACE",
	"TRANSACTION",
	"TRANSACTIONS",
	"TRANSFER",
	"TREAT",
	"TRIGGER",
	"TRIM",
	"TRUE",
	"TRUNCATE",
	"TRUSTED",
	"TYPE",
	"TYPES",
	"TRACING",
	"UNBOUNDED",
	"UNCOMMITTED",
	"UNION",
	"UNIQUE",
	"UNKNOWN",
	"UNLOGGED",
	"UNSPLIT",
	"UPDATE",
	"UPSERT",
	"UNSET",
	"UNTIL",
	"USE",
	"USER",
	"USERS",
	"USING",
	"UUID",
	"VALID",
	"VALIDATE",
	"VALUE",
	"VALUES",
	"VARBIT",
	"VARCHAR",
	"VARIADIC",
	"VIEW",
	"VARYING",
	"VIEWACTIVITY",
	"VIEWACTIVITYREDACTED",
	"VIEWCLUSTERSETTING",
	"VIRTUAL",
	"VISIBLE",
	"VOTERS",
	"WHEN",
	"WHERE",
	"WINDOW",
	"WITH",
	"WITHIN",
	"WITHOUT",
	"WORK",
	"WRITE",
	"YEAR",
	"ZONE",
	"NOT_LA",
	"NULLS_LA",
	"WITH_LA",
	"AS_LA",
	"GENERATED_ALWAYS",
	"GENERATED_BY_DEFAULT",
	"RESET_ALL",
	"ROLE_ALL",
	"USER_ALL",
	"ON_LA",
	"TENANT_ALL",
	"'<'",
	"'>'",
	"'='",
	"'~'",
	"CONTAINED_BY",
	"'?'",
	"POSTFIXOP",
	"'|'",
	"'#'",
	"'&'",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"'%'",
	"'^'",
	"INTERVAL_SIMPLE",
	"UMINUS",
	"'['",
	"']'",
	"'('",
	"')'",
	"'.'",
	"HELPTOKEN",
	"'@'",
	"','",
	"'{'",
	"'}'",
	"':'",
}

var sqlStatenames = [...]string{}

const sqlEofCode = 1
const sqlErrCode = 2
const sqlInitialStackSize = 16

//line sql-gen.y:14579

//line yacctab:1
var sqlExca = [...]int{
	-1, 0,
	1, 41,
	-2, 1726,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 59,
	272, 450,
	-2, 0,
	-1, 71,
	8, 907,
	29, 907,
	621, 907,
	622, 907,
	-2, 0,
	-1, 72,
	8, 907,
	29, 907,
	621, 907,
	622, 907,
	-2, 0,
	-1, 79,
	254, 266,
	543, 266,
	-2, 0,
	-1, 93,
	242, 1459,
	256, 1459,
	272, 446,
	410, 446,
	422, 1206,
	463, 446,
	477, 1206,
	527, 1206,
	555, 446,
	582, 1206,
	-2, 0,
	-1, 99,
	137, 1726,
	249, 1726,
	566, 1726,
	567, 1726,
	-2, 0,
	-1, 117,
	156, 1697,
	176, 1697,
	189, 1697,
	252, 1697,
	285, 1697,
	359, 1697,
	370, 1697,
	561, 1697,
	-2, 1668,
	-1, 159,
	164, 1037,
	271, 1037,
	413, 998,
	482, 998,
	526, 998,
	546, 1037,
	548, 998,
	-2, 0,
	-1, 164,
	4, 1728,
	21, 1728,
	22, 1728,
	23, 1728,
	24, 1728,
	25, 1728,
	26, 1728,
	27, 1728,
	28, 1728,
	30, 1728,
	31, 1728,
	37, 1728,
	41, 1728,
	43, 1728,
	44, 1728,
	46, 1728,
	47, 1728,
	48, 1728,
	49, 1728,
	50, 1728,
	51, 1728,
	52, 1728,
	53, 1728,
	54, 1728,
	56, 1728,
	57, 1728,
	58, 1728,
	59, 1728,
	61, 1728,
	62, 1728,
	63, 1728,
	64, 1728,
	65, 1728,
	66, 1728,
	67, 1728,
	71, 1728,
	72, 1728,
	73, 1728,
	74, 1728,
	76, 1728,
	77, 1728,
	78, 1728,
	82, 1728,
	83, 1728,
	84, 1728,
	85, 1728,
	86, 1728,
	87, 1728,
	88, 1728,
	89, 1728,
	92, 1728,
	93, 1728,
	94, 1728,
	95, 1728,
	96, 1728,
	98, 1728,
	100, 1728,
	101, 1728,
	102, 1728,
	103, 1728,
	104, 1728,
	105, 1728,
	107, 1728,
	108, 1728,
	109, 1728,
	111, 1728,
	112, 1728,
	113, 1728,
	121, 1728,
	122, 1728,
	123, 1728,
	124, 1728,
	125, 1728,
	127, 1728,
	128, 1728,
	129, 1728,
	130, 1728,
	132, 1728,
	133, 1728,
	134, 1728,
	136, 1728,
	137, 1728,
	138, 1728,
	140, 1728,
	141, 1728,
	142, 1728,
	145, 1728,
	146, 1728,
	147, 1728,
	149, 1728,
	150, 1728,
	151, 1728,
	153, 1728,
	154, 1728,
	155, 1728,
	157, 1728,
	158, 1728,
	159, 1728,
	160, 1728,
	161, 1728,
	162, 1728,
	163, 1728,
	164, 1728,
	165, 1728,
	166, 1728,
	167, 1728,
	168, 1728,
	169, 1728,
	170, 1728,
	171, 1728,
	172, 1728,
	173, 1728,
	175, 1728,
	181, 1728,
	182, 1728,
	183, 1728,
	184, 1728,
	188, 1728,
	190, 1728,
	191, 1728,
	192, 1728,
	194, 1728,
	195, 1728,
	198, 1728,
	199, 1728,
	200, 1728,
	201, 1728,
	202, 1728,
	203, 1728,
	204, 1728,
	205, 1728,
	206, 1728,
	207, 1728,
	208, 1728,
	209, 1728,
	210, 1728,
	211, 1728,
	213, 1728,
	214, 1728,
	216, 1728,
	217, 1728,
	219, 1728,
	220, 1728,
	221, 1728,
	222, 1728,
	223, 1728,
	224, 1728,
	225, 1728,
	226, 1728,
	227, 1728,
	228, 1728,
	229, 1728,
	231, 1728,
	232, 1728,
	234, 1728,
	235, 1728,
	236, 1728,
	237, 1728,
	238, 1728,
	242, 1728,
	243, 1728,
	244, 1728,
	245, 1728,
	248, 1728,
	249, 1728,
	250, 1728,
	251, 1728,
	253, 1728,
	255, 1728,
	256, 1728,
	258, 1728,
	260, 1728,
	261, 1728,
	262, 1728,
	264, 1728,
	268, 1728,
	269, 1728,
	270, 1728,
	271, 1728,
	272, 1728,
	273, 1728,
	275, 1728,
	276, 1728,
	277, 1728,
	279, 1728,
	280, 1728,
	282, 1728,
	283, 1728,
	286, 1728,
	287, 1728,
	288, 1728,
	289, 1728,
	290, 1728,
	291, 1728,
	292, 1728,
	295, 1728,
	296, 1728,
	297, 1728,
	298, 1728,
	300, 1728,
	301, 1728,
	302, 1728,
	303, 1728,
	304, 1728,
	305, 1728,
	306, 1728,
	307, 1728,
	308, 1728,
	309, 1728,
	310, 1728,
	311, 1728,
	312, 1728,
	313, 1728,
	314, 1728,
	315, 1728,
	316, 1728,
	317, 1728,
	318, 1728,
	319, 1728,
	320, 1728,
	321, 1728,
	322, 1728,
	324, 1728,
	326, 1728,
	327, 1728,
	328, 1728,
	329, 1728,
	330, 1728,
	331, 1728,
	332, 1728,
	333, 1728,
	334, 1728,
	335, 1728,
	336, 1728,
	337, 1728,
	338, 1728,
	339, 1728,
	340, 1728,
	341, 1728,
	342, 1728,
	344, 1728,
	345, 1728,
	347, 1728,
	349, 1728,
	350, 1728,
	351, 1728,
	352, 1728,
	354, 1728,
	355, 1728,
	356, 1728,
	357, 1728,
	358, 1728,
	361, 1728,
	363, 1728,
	365, 1728,
	366, 1728,
	367, 1728,
	368, 1728,
	371, 1728,
	372, 1728,
	373, 1728,
	375, 1728,
	377, 1728,
	378, 1728,
	379, 1728,
	380, 1728,
	381, 1728,
	382, 1728,
	383, 1728,
	384, 1728,
	385, 1728,
	386, 1728,
	387, 1728,
	388, 1728,
	389, 1728,
	391, 1728,
	392, 1728,
	393, 1728,
	394, 1728,
	395, 1728,
	396, 1728,
	397, 1728,
	398, 1728,
	399, 1728,
	400, 1728,
	401, 1728,
	402, 1728,
	403, 1728,
	404, 1728,
	405, 1728,
	407, 1728,
	408, 1728,
	409, 1728,
	411, 1728,
	412, 1728,
	413, 1728,
	414, 1728,
	415, 1728,
	416, 1728,
	417, 1728,
	418, 1728,
	419, 1728,
	420, 1728,
	421, 1728,
	422, 1728,
	423, 1728,
	424, 1728,
	426, 1728,
	428, 1728,
	429, 1728,
	430, 1728,
	436, 1728,
	437, 1728,
	438, 1728,
	440, 1728,
	441, 1728,
	442, 1728,
	443, 1728,
	444, 1728,
	445, 1728,
	446, 1728,
	447, 1728,
	448, 1728,
	449, 1728,
	451, 1728,
	452, 1728,
	453, 1728,
	455, 1728,
	456, 1728,
	457, 1728,
	458, 1728,
	459, 1728,
	460, 1728,
	461, 1728,
	463, 1728,
	464, 1728,
	465, 1728,
	466, 1728,
	467, 1728,
	468, 1728,
	469, 1728,
	470, 1728,
	471, 1728,
	472, 1728,
	473, 1728,
	474, 1728,
	475, 1728,
	477, 1728,
	478, 1728,
	479, 1728,
	480, 1728,
	481, 1728,
	482, 1728,
	484, 1728,
	485, 1728,
	486, 1728,
	487, 1728,
	488, 1728,
	489, 1728,
	491, 1728,
	492, 1728,
	493, 1728,
	494, 1728,
	495, 1728,
	496, 1728,
	497, 1728,
	498, 1728,
	500, 1728,
	502, 1728,
	503, 1728,
	504, 1728,
	505, 1728,
	506, 1728,
	507, 1728,
	508, 1728,
	509, 1728,
	510, 1728,
	511, 1728,
	512, 1728,
	513, 1728,
	514, 1728,
	515, 1728,
	516, 1728,
	517, 1728,
	518, 1728,
	519, 1728,
	520, 1728,
	522, 1728,
	523, 1728,
	525, 1728,
	526, 1728,
	528, 1728,
	529, 1728,
	530, 1728,
	531, 1728,
	532, 1728,
	533, 1728,
	535, 1728,
	536, 1728,
	538, 1728,
	539, 1728,
	540, 1728,
	541, 1728,
	542, 1728,
	544, 1728,
	546, 1728,
	547, 1728,
	548, 1728,
	549, 1728,
	550, 1728,
	551, 1728,
	552, 1728,
	554, 1728,
	555, 1728,
	556, 1728,
	557, 1728,
	559, 1728,
	560, 1728,
	563, 1728,
	564, 1728,
	565, 1728,
	566, 1728,
	567, 1728,
	568, 1728,
	569, 1728,
	570, 1728,
	572, 1728,
	575, 1728,
	576, 1728,
	577, 1728,
	578, 1728,
	579, 1728,
	580, 1728,
	582, 1728,
	583, 1728,
	584, 1728,
	585, 1728,
	586, 1728,
	587, 1728,
	588, 1728,
	589, 1728,
	594, 1728,
	595, 1728,
	596, 1728,
	597, 1728,
	598, 1728,
	599, 1728,
	-2, 0,
	-1, 165,
	1, 1576,
	135, 1576,
	260, 1576,
	346, 1576,
	408, 1576,
	418, 1576,
	603, 1576,
	634, 1576,
	-2, 0,
	-1, 167,
	1, 1576,
	634, 1576,
	-2, 0,
	-1, 168,
	1, 1576,
	634, 1576,
	-2, 0,
	-1, 169,
	1, 1576,
	543, 1576,
	634, 1576,
	-2, 0,
	-1, 201,
	156, 1696,
	176, 1696,
	189, 1696,
	252, 1696,
	285, 1696,
	359, 1696,
	370, 1696,
	561, 1696,
	-2, 1671,
	-1, 251,
	4, 1735,
	5, 1735,
	6, 1735,
	7, 1735,
	8, 1735,
	9, 1735,
	10, 1735,
	21, 1735,
	22, 1735,
	23, 1735,
	24, 1735,
	25, 1735,
	26, 1735,
	27, 1735,
	28, 1735,
	30, 1735,
	31, 1735,
	37, 1735,
	38, 1735,
	41, 1735,
	43, 1735,
	44, 1735,
	45, 1735,
	46, 1735,
	47, 1735,
	48, 1735,
	49, 1735,
	50, 1735,
	51, 1735,
	52, 1735,
	53, 1735,
	54, 1735,
	56, 1735,
	57, 1735,
	58, 1735,
	59, 1735,
	61, 1735,
	62, 1735,
	63, 1735,
	64, 1735,
	65, 1735,
	66, 1735,
	67, 1735,
	68, 1735,
	69, 1735,
	70, 1735,
	71, 1735,
	72, 1735,
	73, 1735,
	74, 1735,
	76, 1735,
	77, 1735,
	78, 1735,
	80, 1735,
	82, 1735,
	83, 1735,
	84, 1735,
	85, 1735,
	86, 1735,
	87, 1735,
	88, 1735,
	89, 1735,
	92, 1735,
	93, 1735,
	94, 1735,
	95, 1735,
	96, 1735,
	98, 1735,
	100, 1735,
	101, 1735,
	102, 1735,
	103, 1735,
	104, 1735,
	105, 1735,
	107, 1735,
	108, 1735,
	109, 1735,
	110, 1735,
	111, 1735,
	112, 1735,
	113, 1735,
	114, 1735,
	115, 1735,
	116, 1735,
	117, 1735,
	118, 1735,
	119, 1735,
	120, 1735,
	121, 1735,
	122, 1735,
	123, 1735,
	124, 1735,
	125, 1735,
	126, 1735,
	127, 1735,
	128, 1735,
	129, 1735,
	130, 1735,
	131, 1735,
	132, 1735,
	133, 1735,
	134, 1735,
	136, 1735,
	137, 1735,
	138, 1735,
	140, 1735,
	141, 1735,
	142, 1735,
	145, 1735,
	146, 1735,
	147, 1735,
	149, 1735,
	150, 1735,
	151, 1735,
	153, 1735,
	154, 1735,
	155, 1735,
	157, 1735,
	158, 1735,
	159, 1735,
	160, 1735,
	161, 1735,
	162, 1735,
	163, 1735,
	164, 1735,
	165, 1735,
	166, 1735,
	167, 1735,
	168, 1735,
	169, 1735,
	170, 1735,
	171, 1735,
	172, 1735,
	173, 1735,
	174, 1735,
	175, 1735,
	181, 1735,
	182, 1735,
	183, 1735,
	184, 1735,
	188, 1735,
	190, 1735,
	191, 1735,
	192, 1735,
	194, 1735,
	195, 1735,
	197, 1735,
	198, 1735,
	199, 1735,
	200, 1735,
	201, 1735,
	202, 1735,
	203, 1735,
	204, 1735,
	205, 1735,
	206, 1735,
	207, 1735,
	208, 1735,
	209, 1735,
	210, 1735,
	211, 1735,
	213, 1735,
	214, 1735,
	216, 1735,
	217, 1735,
	219, 1735,
	220, 1735,
	221, 1735,
	222, 1735,
	223, 1735,
	224, 1735,
	225, 1735,
	226, 1735,
	227, 1735,
	228, 1735,
	229, 1735,
	230, 1735,
	231, 1735,
	232, 1735,
	234, 1735,
	235, 1735,
	236, 1735,
	237, 1735,
	238, 1735,
	242, 1735,
	243, 1735,
	244, 1735,
	245, 1735,
	247, 1735,
	248, 1735,
	249, 1735,
	250, 1735,
	251, 1735,
	253, 1735,
	255, 1735,
	256, 1735,
	257, 1735,
	258, 1735,
	259, 1735,
	260, 1735,
	261, 1735,
	262, 1735,
	263, 1735,
	264, 1735,
	268, 1735,
	269, 1735,
	270, 1735,
	271, 1735,
	272, 1735,
	273, 1735,
	275, 1735,
	276, 1735,
	277, 1735,
	279, 1735,
	280, 1735,
	281, 1735,
	282, 1735,
	283, 1735,
	284, 1735,
	286, 1735,
	287, 1735,
	288, 1735,
	289, 1735,
	290, 1735,
	291, 1735,
	292, 1735,
	293, 1735,
	294, 1735,
	295, 1735,
	296, 1735,
	297, 1735,
	298, 1735,
	300, 1735,
	301, 1735,
	302, 1735,
	303, 1735,
	304, 1735,
	305, 1735,
	306, 1735,
	307, 1735,
	308, 1735,
	309, 1735,
	310, 1735,
	311, 1735,
	312, 1735,
	313, 1735,
	314, 1735,
	315, 1735,
	316, 1735,
	317, 1735,
	318, 1735,
	319, 1735,
	320, 1735,
	321, 1735,
	322, 1735,
	324, 1735,
	325, 1735,
	326, 1735,
	327, 1735,
	328, 1735,
	329, 1735,
	330, 1735,
	331, 1735,
	332, 1735,
	333, 1735,
	334, 1735,
	335, 1735,
	336, 1735,
	337, 1735,
	338, 1735,
	339, 1735,
	340, 1735,
	341, 1735,
	342, 1735,
	343, 1735,
	344, 1735,
	345, 1735,
	346, 1735,
	347, 1735,
	348, 1735,
	349, 1735,
	350, 1735,
	351, 1735,
	352, 1735,
	353, 1735,
	354, 1735,
	355, 1735,
	356, 1735,
	357, 1735,
	358, 1735,
	361, 1735,
	363, 1735,
	366, 1735,
	367, 1735,
	368, 1735,
	371, 1735,
	372, 1735,
	373, 1735,
	374, 1735,
	375, 1735,
	376, 1735,
	377, 1735,
	378, 1735,
	379, 1735,
	380, 1735,
	381, 1735,
	382, 1735,
	383, 1735,
	384, 1735,
	385, 1735,
	386, 1735,
	387, 1735,
	388, 1735,
	389, 1735,
	391, 1735,
	392, 1735,
	393, 1735,
	394, 1735,
	395, 1735,
	396, 1735,
	397, 1735,
	398, 1735,
	399, 1735,
	400, 1735,
	401, 1735,
	402, 1735,
	403, 1735,
	404, 1735,
	405, 1735,
	407, 1735,
	408, 1735,
	409, 1735,
	411, 1735,
	412, 1735,
	413, 1735,
	414, 1735,
	415, 1735,
	416, 1735,
	417, 1735,
	418, 1735,
	419, 1735,
	420, 1735,
	421, 1735,
	422, 1735,
	423, 1735,
	424, 1735,
	426, 1735,
	428, 1735,
	429, 1735,
	430, 1735,
	436, 1735,
	437, 1735,
	438, 1735,
	440, 1735,
	441, 1735,
	442, 1735,
	443, 1735,
	444, 1735,
	445, 1735,
	446, 1735,
	447, 1735,
	448, 1735,
	449, 1735,
	451, 1735,
	452, 1735,
	453, 1735,
	454, 1735,
	455, 1735,
	456, 1735,
	457, 1735,
	458, 1735,
	459, 1735,
	460, 1735,
	461, 1735,
	463, 1735,
	464, 1735,
	465, 1735,
	466, 1735,
	467, 1735,
	468, 1735,
	469, 1735,
	470, 1735,
	471, 1735,
	472, 1735,
	473, 1735,
	474, 1735,
	475, 1735,
	477, 1735,
	478, 1735,
	479, 1735,
	480, 1735,
	481, 1735,
	482, 1735,
	483, 1735,
	484, 1735,
	485, 1735,
	486, 1735,
	487, 1735,
	488, 1735,
	489, 1735,
	490, 1735,
	491, 1735,
	492, 1735,
	493, 1735,
	494, 1735,
	495, 1735,
	496, 1735,
	497, 1735,
	498, 1735,
	500, 1735,
	502, 1735,
	503, 1735,
	504, 1735,
	505, 1735,
	506, 1735,
	507, 1735,
	508, 1735,
	509, 1735,
	510, 1735,
	511, 1735,
	512, 1735,
	513, 1735,
	514, 1735,
	515, 1735,
	516, 1735,
	517, 1735,
	518, 1735,
	519, 1735,
	520, 1735,
	522, 1735,
	523, 1735,
	524, 1735,
	525, 1735,
	526, 1735,
	528, 1735,
	529, 1735,
	530, 1735,
	531, 1735,
	532, 1735,
	533, 1735,
	535, 1735,
	536, 1735,
	538, 1735,
	539, 1735,
	540, 1735,
	541, 1735,
	542, 1735,
	544, 1735,
	546, 1735,
	547, 1735,
	548, 1735,
	549, 1735,
	550, 1735,
	551, 1735,
	552, 1735,
	553, 1735,
	554, 1735,
	555, 1735,
	556, 1735,
	557, 1735,
	559, 1735,
	560, 1735,
	562, 1735,
	563, 1735,
	564, 1735,
	565, 1735,
	566, 1735,
	567, 1735,
	568, 1735,
	569, 1735,
	570, 1735,
	571, 1735,
	572, 1735,
	575, 1735,
	576, 1735,
	577, 1735,
	578, 1735,
	579, 1735,
	580, 1735,
	582, 1735,
	583, 1735,
	584, 1735,
	585, 1735,
	586, 1735,
	587, 1735,
	588, 1735,
	589, 1735,
	594, 1735,
	595, 1735,
	596, 1735,
	597, 1735,
	598, 1735,
	599, 1735,
	600, 1735,
	614, 1735,
	621, 1735,
	622, 1735,
	623, 1735,
	631, 1735,
	635, 1735,
	-2, 0,
	-1, 796,
	4, 1457,
	21, 1457,
	22, 1457,
	23, 1457,
	24, 1457,
	25, 1457,
	26, 1457,
	27, 1457,
	28, 1457,
	30, 1457,
	31, 1457,
	37, 1457,
	41, 1457,
	43, 1457,
	44, 1457,
	46, 1457,
	47, 1457,
	48, 1457,
	49, 1457,
	50, 1457,
	51, 1457,
	52, 1457,
	53, 1457,
	54, 1457,
	56, 1457,
	57, 1457,
	58, 1457,
	59, 1457,
	61, 1457,
	62, 1457,
	63, 1457,
	64, 1457,
	65, 1457,
	66, 1457,
	67, 1457,
	71, 1457,
	72, 1457,
	73, 1457,
	74, 1457,
	76, 1457,
	77, 1457,
	78, 1457,
	82, 1457,
	83, 1457,
	84, 1457,
	85, 1457,
	86, 1457,
	87, 1457,
	88, 1457,
	89, 1457,
	92, 1457,
	93, 1457,
	94, 1457,
	95, 1457,
	96, 1457,
	98, 1457,
	100, 1457,
	101, 1457,
	102, 1457,
	103, 1457,
	104, 1457,
	105, 1457,
	107, 1457,
	108, 1457,
	109, 1457,
	111, 1457,
	112, 1457,
	113, 1457,
	121, 1457,
	122, 1457,
	123, 1457,
	124, 1457,
	125, 1457,
	127, 1457,
	128, 1457,
	129, 1457,
	130, 1457,
	132, 1457,
	133, 1457,
	134, 1457,
	136, 1457,
	137, 1457,
	138, 1457,
	140, 1457,
	141, 1457,
	142, 1457,
	145, 1457,
	146, 1457,
	147, 1457,
	149, 1457,
	150, 1457,
	151, 1457,
	153, 1457,
	154, 1457,
	155, 1457,
	157, 1457,
	158, 1457,
	159, 1457,
	160, 1457,
	161, 1457,
	162, 1457,
	163, 1457,
	164, 1457,
	165, 1457,
	166, 1457,
	167, 1457,
	168, 1457,
	169, 1457,
	170, 1457,
	171, 1457,
	172, 1457,
	173, 1457,
	175, 1457,
	181, 1457,
	182, 1457,
	183, 1457,
	184, 1457,
	188, 1457,
	190, 1457,
	191, 1457,
	192, 1457,
	194, 1457,
	195, 1457,
	198, 1457,
	199, 1457,
	200, 1457,
	201, 1457,
	202, 1457,
	203, 1457,
	204, 1457,
	205, 1457,
	206, 1457,
	207, 1457,
	208, 1457,
	209, 1457,
	210, 1457,
	211, 1457,
	213, 1457,
	214, 1457,
	216, 1457,
	217, 1457,
	219, 1457,
	220, 1457,
	221, 1457,
	222, 1457,
	223, 1457,
	224, 1457,
	225, 1457,
	226, 1457,
	227, 1457,
	228, 1457,
	229, 1457,
	231, 1457,
	232, 1457,
	234, 1457,
	235, 1457,
	236, 1457,
	237, 1457,
	238, 1457,
	242, 1457,
	243, 1457,
	244, 1457,
	245, 1457,
	248, 1457,
	249, 1457,
	250, 1457,
	251, 1457,
	253, 1457,
	255, 1457,
	256, 1457,
	258, 1457,
	260, 1457,
	261, 1457,
	262, 1457,
	264, 1457,
	268, 1457,
	269, 1457,
	270, 1457,
	271, 1457,
	272, 1457,
	273, 1457,
	275, 1457,
	276, 1457,
	277, 1457,
	279, 1457,
	280, 1457,
	282, 1457,
	283, 1457,
	286, 1457,
	287, 1457,
	288, 1457,
	289, 1457,
	290, 1457,
	291, 1457,
	292, 1457,
	295, 1457,
	296, 1457,
	297, 1457,
	298, 1457,
	300, 1457,
	301, 1457,
	302, 1457,
	303, 1457,
	304, 1457,
	305, 1457,
	306, 1457,
	307, 1457,
	308, 1457,
	309, 1457,
	310, 1457,
	311, 1457,
	312, 1457,
	313, 1457,
	314, 1457,
	315, 1457,
	316, 1457,
	317, 1457,
	318, 1457,
	319, 1457,
	320, 1457,
	321, 1457,
	322, 1457,
	324, 1457,
	326, 1457,
	327, 1457,
	328, 1457,
	329, 1457,
	330, 1457,
	331, 1457,
	332, 1457,
	333, 1457,
	334, 1457,
	335, 1457,
	336, 1457,
	337, 1457,
	338, 1457,
	339, 1457,
	340, 1457,
	341, 1457,
	342, 1457,
	344, 1457,
	345, 1457,
	347, 1457,
	349, 1457,
	350, 1457,
	351, 1457,
	352, 1457,
	354, 1457,
	355, 1457,
	356, 1457,
	357, 1457,
	358, 1457,
	361, 1457,
	363, 1457,
	366, 1457,
	367, 1457,
	368, 1457,
	371, 1457,
	372, 1457,
	373, 1457,
	375, 1457,
	377, 1457,
	378, 1457,
	379, 1457,
	380, 1457,
	381, 1457,
	382, 1457,
	383, 1457,
	384, 1457,
	385, 1457,
	386, 1457,
	387, 1457,
	388, 1457,
	389, 1457,
	391, 1457,
	392, 1457,
	393, 1457,
	394, 1457,
	395, 1457,
	396, 1457,
	397, 1457,
	398, 1457,
	399, 1457,
	400, 1457,
	401, 1457,
	402, 1457,
	403, 1457,
	404, 1457,
	405, 1457,
	407, 1457,
	408, 1457,
	409, 1457,
	411, 1457,
	412, 1457,
	413, 1457,
	414, 1457,
	415, 1457,
	416, 1457,
	417, 1457,
	418, 1457,
	419, 1457,
	420, 1457,
	421, 1457,
	422, 1457,
	423, 1457,
	424, 1457,
	426, 1457,
	428, 1457,
	429, 1457,
	430, 1457,
	436, 1457,
	437, 1457,
	438, 1457,
	440, 1457,
	441, 1457,
	442, 1457,
	443, 1457,
	444, 1457,
	445, 1457,
	446, 1457,
	447, 1457,
	448, 1457,
	449, 1457,
	451, 1457,
	452, 1457,
	453, 1457,
	455, 1457,
	456, 1457,
	457, 1457,
	458, 1457,
	459, 1457,
	460, 1457,
	461, 1457,
	463, 1457,
	464, 1457,
	465, 1457,
	466, 1457,
	467, 1457,
	468, 1457,
	469, 1457,
	470, 1457,
	471, 1457,
	472, 1457,
	473, 1457,
	474, 1457,
	475, 1457,
	477, 1457,
	478, 1457,
	479, 1457,
	480, 1457,
	481, 1457,
	482, 1457,
	484, 1457,
	485, 1457,
	486, 1457,
	487, 1457,
	488, 1457,
	489, 1457,
	491, 1457,
	492, 1457,
	493, 1457,
	494, 1457,
	495, 1457,
	496, 1457,
	497, 1457,
	498, 1457,
	500, 1457,
	502, 1457,
	503, 1457,
	504, 1457,
	505, 1457,
	506, 1457,
	507, 1457,
	508, 1457,
	509, 1457,
	510, 1457,
	511, 1457,
	512, 1457,
	513, 1457,
	514, 1457,
	515, 1457,
	516, 1457,
	517, 1457,
	518, 1457,
	519, 1457,
	520, 1457,
	522, 1457,
	523, 1457,
	525, 1457,
	526, 1457,
	528, 1457,
	529, 1457,
	530, 1457,
	531, 1457,
	532, 1457,
	533, 1457,
	535, 1457,
	536, 1457,
	538, 1457,
	539, 1457,
	540, 1457,
	541, 1457,
	542, 1457,
	544, 1457,
	546, 1457,
	547, 1457,
	548, 1457,
	549, 1457,
	550, 1457,
	551, 1457,
	552, 1457,
	554, 1457,
	555, 1457,
	556, 1457,
	557, 1457,
	559, 1457,
	560, 1457,
	563, 1457,
	564, 1457,
	565, 1457,
	566, 1457,
	567, 1457,
	568, 1457,
	569, 1457,
	570, 1457,
	572, 1457,
	575, 1457,
	576, 1457,
	577, 1457,
	578, 1457,
	579, 1457,
	580, 1457,
	582, 1457,
	583, 1457,
	584, 1457,
	585, 1457,
	586, 1457,
	587, 1457,
	588, 1457,
	589, 1457,
	594, 1457,
	595, 1457,
	596, 1457,
	597, 1457,
	598, 1457,
	599, 1457,
	-2, 0,
	-1, 815,
	196, 2531,
	543, 2531,
	613, 2531,
	633, 2531,
	-2, 0,
	-1, 816,
	196, 2517,
	543, 2517,
	613, 2517,
	633, 2517,
	-2, 0,
	-1, 818,
	196, 2798,
	543, 2798,
	613, 2798,
	633, 2798,
	-2, 0,
	-1, 821,
	196, 2647,
	543, 2647,
	613, 2647,
	633, 2647,
	-2, 0,
	-1, 822,
	196, 2842,
	543, 2842,
	613, 2842,
	633, 2842,
	-2, 0,
	-1, 830,
	196, 2675,
	543, 2675,
	613, 2675,
	633, 2675,
	-2, 773,
	-1, 846,
	8, 906,
	29, 906,
	621, 906,
	622, 906,
	-2, 911,
	-1, 850,
	1, 2585,
	634, 2585,
	-2, 911,
	-1, 851,
	1, 2635,
	634, 2635,
	-2, 911,
	-1, 854,
	1, 2680,
	634, 2680,
	-2, 904,
	-1, 855,
	1, 2736,
	634, 2736,
	-2, 905,
	-1, 856,
	1, 2590,
	634, 2590,
	-2, 908,
	-1, 857,
	1, 2504,
	634, 2504,
	-2, 909,
	-1, 892,
	633, 2463,
	636, 2463,
	-2, 1123,
	-1, 893,
	633, 2465,
	636, 2465,
	-2, 1124,
	-1, 894,
	633, 2464,
	636, 2464,
	-2, 1125,
	-1, 895,
	636, 2389,
	-2, 1126,
	-1, 920,
	189, 285,
	-2, 0,
	-1, 944,
	45, 2436,
	-2, 0,
	-1, 945,
	582, 1435,
	-2, 1207,
	-1, 961,
	4, 1869,
	21, 1869,
	22, 1869,
	23, 1869,
	24, 1869,
	25, 1869,
	26, 1869,
	27, 1869,
	28, 1869,
	30, 1869,
	31, 1869,
	37, 1869,
	41, 1869,
	43, 1869,
	44, 1869,
	46, 1869,
	47, 1869,
	48, 1869,
	49, 1869,
	50, 1869,
	51, 1869,
	52, 1869,
	53, 1869,
	54, 1869,
	56, 1869,
	57, 1869,
	58, 1869,
	59, 1869,
	61, 1869,
	62, 1869,
	63, 1869,
	64, 1869,
	65, 1869,
	66, 1869,
	67, 1869,
	71, 1869,
	72, 1869,
	73, 1869,
	74, 1869,
	76, 1869,
	77, 1869,
	78, 1869,
	82, 1869,
	83, 1869,
	84, 1869,
	85, 1869,
	86, 1869,
	87, 1869,
	88, 1869,
	89, 1869,
	92, 1869,
	93, 1869,
	94, 1869,
	95, 1869,
	96, 1869,
	98, 1869,
	100, 1869,
	101, 1869,
	102, 1869,
	103, 1869,
	104, 1869,
	105, 1869,
	107, 1869,
	108, 1869,
	109, 1869,
	111, 1869,
	112, 1869,
	113, 1869,
	121, 1869,
	122, 1869,
	123, 1869,
	124, 1869,
	125, 1869,
	127, 1869,
	128, 1869,
	129, 1869,
	130, 1869,
	132, 1869,
	133, 1869,
	134, 1869,
	136, 1869,
	137, 1869,
	138, 1869,
	140, 1869,
	141, 1869,
	142, 1869,
	145, 1869,
	146, 1869,
	147, 1869,
	149, 1869,
	150, 1869,
	151, 1869,
	153, 1869,
	154, 1869,
	155, 1869,
	157, 1869,
	158, 1869,
	159, 1869,
	160, 1869,
	161, 1869,
	162, 1869,
	163, 1869,
	164, 1869,
	165, 1869,
	166, 1869,
	167, 1869,
	168, 1869,
	169, 1869,
	170, 1869,
	171, 1869,
	172, 1869,
	173, 1869,
	175, 1869,
	181, 1869,
	182, 1869,
	183, 1869,
	184, 1869,
	188, 1869,
	190, 1869,
	191, 1869,
	192, 1869,
	194, 1869,
	195, 1869,
	198, 1869,
	199, 1869,
	200, 1869,
	201, 1869,
	202, 1869,
	203, 1869,
	204, 1869,
	205, 1869,
	206, 1869,
	207, 1869,
	208, 1869,
	209, 1869,
	210, 1869,
	211, 1869,
	213, 1869,
	214, 1869,
	216, 1869,
	217, 1869,
	219, 1869,
	220, 1869,
	221, 1869,
	222, 1869,
	223, 1869,
	224, 1869,
	225, 1869,
	226, 1869,
	227, 1869,
	228, 1869,
	229, 1869,
	231, 1869,
	232, 1869,
	234, 1869,
	235, 1869,
	236, 1869,
	237, 1869,
	238, 1869,
	242, 1869,
	243, 1869,
	244, 1869,
	245, 1869,
	248, 1869,
	249, 1869,
	250, 1869,
	251, 1869,
	253, 1869,
	255, 1869,
	256, 1869,
	258, 1869,
	260, 1869,
	261, 1869,
	262, 1869,
	264, 1869,
	268, 1869,
	269, 1869,
	270, 1869,
	271, 1869,
	272, 1869,
	273, 1869,
	275, 1869,
	276, 1869,
	277, 1869,
	279, 1869,
	280, 1869,
	282, 1869,
	283, 1869,
	286, 1869,
	287, 1869,
	288, 1869,
	289, 1869,
	290, 1869,
	291, 1869,
	292, 1869,
	295, 1869,
	296, 1869,
	297, 1869,
	298, 1869,
	300, 1869,
	301, 1869,
	302, 1869,
	303, 1869,
	304, 1869,
	305, 1869,
	306, 1869,
	307, 1869,
	308, 1869,
	309, 1869,
	310, 1869,
	311, 1869,
	312, 1869,
	313, 1869,
	314, 1869,
	315, 1869,
	316, 1869,
	317, 1869,
	318, 1869,
	319, 1869,
	320, 1869,
	321, 1869,
	322, 1869,
	324, 1869,
	326, 1869,
	327, 1869,
	328, 1869,
	329, 1869,
	330, 1869,
	331, 1869,
	332, 1869,
	333, 1869,
	334, 1869,
	335, 1869,
	336, 1869,
	337, 1869,
	338, 1869,
	339, 1869,
	340, 1869,
	341, 1869,
	342, 1869,
	344, 1869,
	345, 1869,
	347, 1869,
	349, 1869,
	350, 1869,
	351, 1869,
	352, 1869,
	354, 1869,
	355, 1869,
	356, 1869,
	357, 1869,
	358, 1869,
	361, 1869,
	363, 1869,
	366, 1869,
	367, 1869,
	368, 1869,
	371, 1869,
	372, 1869,
	373, 1869,
	375, 1869,
	377, 1869,
	378, 1869,
	379, 1869,
	380, 1869,
	381, 1869,
	382, 1869,
	383, 1869,
	384, 1869,
	385, 1869,
	386, 1869,
	387, 1869,
	388, 1869,
	389, 1869,
	391, 1869,
	392, 1869,
	393, 1869,
	394, 1869,
	395, 1869,
	396, 1869,
	397, 1869,
	398, 1869,
	399, 1869,
	400, 1869,
	401, 1869,
	402, 1869,
	403, 1869,
	404, 1869,
	405, 1869,
	407, 1869,
	408, 1869,
	409, 1869,
	411, 1869,
	412, 1869,
	413, 1869,
	414, 1869,
	415, 1869,
	416, 1869,
	417, 1869,
	418, 1869,
	419, 1869,
	420, 1869,
	421, 1869,
	422, 1869,
	423, 1869,
	424, 1869,
	426, 1869,
	428, 1869,
	429, 1869,
	430, 1869,
	436, 1869,
	437, 1869,
	438, 1869,
	440, 1869,
	441, 1869,
	442, 1869,
	443, 1869,
	444, 1869,
	445, 1869,
	446, 1869,
	447, 1869,
	448, 1869,
	449, 1869,
	451, 1869,
	452, 1869,
	453, 1869,
	455, 1869,
	456, 1869,
	457, 1869,
	458, 1869,
	459, 1869,
	460, 1869,
	461, 1869,
	463, 1869,
	464, 1869,
	465, 1869,
	466, 1869,
	467, 1869,
	468, 1869,
	469, 1869,
	470, 1869,
	471, 1869,
	472, 1869,
	473, 1869,
	474, 1869,
	475, 1869,
	477, 1869,
	478, 1869,
	479, 1869,
	480, 1869,
	481, 1869,
	482, 1869,
	484, 1869,
	485, 1869,
	486, 1869,
	487, 1869,
	488, 1869,
	489, 1869,
	491, 1869,
	492, 1869,
	493, 1869,
	494, 1869,
	495, 1869,
	496, 1869,
	497, 1869,
	498, 1869,
	500, 1869,
	502, 1869,
	503, 1869,
	504, 1869,
	505, 1869,
	506, 1869,
	507, 1869,
	508, 1869,
	509, 1869,
	510, 1869,
	511, 1869,
	512, 1869,
	513, 1869,
	514, 1869,
	515, 1869,
	516, 1869,
	517, 1869,
	518, 1869,
	519, 1869,
	520, 1869,
	522, 1869,
	523, 1869,
	525, 1869,
	526, 1869,
	528, 1869,
	529, 1869,
	530, 1869,
	531, 1869,
	532, 1869,
	533, 1869,
	535, 1869,
	536, 1869,
	538, 1869,
	539, 1869,
	540, 1869,
	541, 1869,
	542, 1869,
	544, 1869,
	546, 1869,
	547, 1869,
	548, 1869,
	549, 1869,
	550, 1869,
	551, 1869,
	552, 1869,
	554, 1869,
	555, 1869,
	556, 1869,
	557, 1869,
	559, 1869,
	560, 1869,
	563, 1869,
	564, 1869,
	565, 1869,
	566, 1869,
	567, 1869,
	568, 1869,
	569, 1869,
	570, 1869,
	572, 1869,
	575, 1869,
	576, 1869,
	577, 1869,
	578, 1869,
	579, 1869,
	580, 1869,
	582, 1869,
	583, 1869,
	584, 1869,
	585, 1869,
	586, 1869,
	587, 1869,
	588, 1869,
	589, 1869,
	594, 1869,
	595, 1869,
	596, 1869,
	597, 1869,
	598, 1869,
	599, 1869,
	-2, 0,
	-1, 971,
	272, 450,
	-2, 0,
	-1, 1050,
	413, 999,
	482, 999,
	526, 999,
	548, 999,
	-2, 0,
	-1, 1051,
	413, 998,
	482, 998,
	526, 998,
	548, 998,
	-2, 924,
	-1, 1055,
	1, 1051,
	630, 1051,
	632, 1051,
	634, 1051,
	-2, 0,
	-1, 1057,
	1, 973,
	630, 973,
	632, 973,
	634, 973,
	-2, 0,
	-1, 1058,
	1, 977,
	630, 977,
	632, 977,
	634, 977,
	-2, 0,
	-1, 1059,
	1, 1122,
	189, 1122,
	630, 1122,
	632, 1122,
	634, 1122,
	-2, 0,
	-1, 1067,
	1, 1004,
	630, 1004,
	632, 1004,
	634, 1004,
	-2, 0,
	-1, 1074,
	1, 1051,
	630, 1051,
	632, 1051,
	634, 1051,
	-2, 0,
	-1, 1075,
	1, 1053,
	630, 1053,
	632, 1053,
	634, 1053,
	-2, 0,
	-1, 1076,
	1, 1056,
	630, 1056,
	632, 1056,
	634, 1056,
	-2, 0,
	-1, 1084,
	1, 1086,
	630, 1086,
	632, 1086,
	634, 1086,
	-2, 0,
	-1, 1085,
	1, 1088,
	630, 1088,
	632, 1088,
	634, 1088,
	-2, 0,
	-1, 1090,
	1, 1116,
	630, 1116,
	632, 1116,
	634, 1116,
	-2, 0,
	-1, 1144,
	176, 1739,
	189, 1739,
	285, 1739,
	359, 1739,
	-2, 1675,
	-1, 1160,
	176, 1738,
	189, 1738,
	285, 1738,
	359, 1738,
	-2, 1672,
	-1, 1187,
	633, 2462,
	-2, 781,
	-1, 1216,
	5, 2454,
	631, 2452,
	-2, 2443,
	-1, 1224,
	5, 2475,
	631, 2472,
	-2, 2463,
	-1, 1225,
	5, 2476,
	631, 2473,
	-2, 2464,
	-1, 1233,
	633, 2460,
	-2, 2442,
	-1, 1234,
	631, 2930,
	-2, 2461,
	-1, 1257,
	631, 2929,
	-2, 2477,
	-1, 1258,
	5, 1944,
	-2, 2900,
	-1, 1259,
	5, 1945,
	-2, 2901,
	-1, 1260,
	5, 1946,
	-2, 2915,
	-1, 1261,
	5, 1947,
	-2, 2879,
	-1, 1262,
	5, 1948,
	-2, 2913,
	-1, 1263,
	5, 1956,
	-2, 2892,
	-1, 1264,
	5, 1943,
	-2, 2888,
	-1, 1265,
	5, 1943,
	-2, 2887,
	-1, 1266,
	5, 1943,
	-2, 2906,
	-1, 1267,
	5, 1954,
	-2, 2881,
	-1, 1268,
	5, 1959,
	-2, 2880,
	-1, 1269,
	5, 1961,
	-2, 2925,
	-1, 1272,
	5, 1983,
	-2, 2918,
	-1, 1273,
	5, 1975,
	-2, 2919,
	-1, 1274,
	5, 1983,
	-2, 2920,
	-1, 1275,
	5, 1979,
	-2, 2921,
	-1, 1276,
	5, 1929,
	-2, 2893,
	-1, 1277,
	5, 1930,
	-2, 2894,
	-1, 1278,
	5, 1931,
	-2, 2882,
	-1, 1306,
	5, 1966,
	-2, 2926,
	-1, 1307,
	5, 1967,
	-2, 2916,
	-1, 1308,
	5, 1968,
	583, 1968,
	-2, 2883,
	-1, 1309,
	5, 1969,
	583, 1969,
	-2, 2884,
	-1, 1347,
	631, 2472,
	-2, 2463,
	-1, 1348,
	631, 2473,
	-2, 2464,
	-1, 1446,
	196, 2842,
	543, 2842,
	613, 2842,
	633, 2842,
	-2, 0,
	-1, 1451,
	1, 757,
	634, 757,
	-2, 1584,
	-1, 1598,
	379, 2437,
	440, 2437,
	484, 2437,
	623, 2437,
	-2, 2427,
	-1, 1604,
	196, 145,
	279, 145,
	344, 145,
	589, 145,
	-2, 2838,
	-1, 1605,
	196, 146,
	279, 146,
	344, 146,
	589, 146,
	-2, 2576,
	-1, 1606,
	196, 147,
	279, 147,
	344, 147,
	589, 147,
	-2, 2759,
	-1, 1612,
	635, 2437,
	-2, 2439,
	-1, 1636,
	1, 1432,
	445, 1387,
	484, 1387,
	606, 1387,
	630, 1432,
	632, 1432,
	634, 1432,
	-2, 1724,
	-1, 1642,
	212, 1529,
	233, 1529,
	453, 1529,
	-2, 0,
	-1, 1691,
	422, 1206,
	582, 1206,
	-2, 445,
	-1, 1708,
	45, 2435,
	-2, 1169,
	-1, 1715,
	1, 1432,
	630, 1432,
	632, 1432,
	634, 1432,
	-2, 1724,
	-1, 1723,
	4, 1457,
	21, 1457,
	22, 1457,
	23, 1457,
	24, 1457,
	25, 1457,
	26, 1457,
	27, 1457,
	28, 1457,
	30, 1457,
	31, 1457,
	37, 1457,
	41, 1457,
	43, 1457,
	44, 1457,
	46, 1457,
	47, 1457,
	48, 1457,
	49, 1457,
	50, 1457,
	51, 1457,
	52, 1457,
	53, 1457,
	54, 1457,
	56, 1457,
	57, 1457,
	58, 1457,
	59, 1457,
	61, 1457,
	62, 1457,
	63, 1457,
	64, 1457,
	65, 1457,
	66, 1457,
	67, 1457,
	71, 1457,
	72, 1457,
	73, 1457,
	74, 1457,
	76, 1457,
	77, 1457,
	78, 1457,
	82, 1457,
	83, 1457,
	84, 1457,
	85, 1457,
	86, 1457,
	87, 1457,
	88, 1457,
	89, 1457,
	92, 1457,
	93, 1457,
	94, 1457,
	95, 1457,
	96, 1457,
	98, 1457,
	100, 1457,
	101, 1457,
	102, 1457,
	103, 1457,
	104, 1457,
	105, 1457,
	107, 1457,
	108, 1457,
	109, 1457,
	111, 1457,
	112, 1457,
	113, 1457,
	121, 1457,
	122, 1457,
	123, 1457,
	124, 1457,
	125, 1457,
	127, 1457,
	128, 1457,
	129, 1457,
	130, 1457,
	132, 1457,
	133, 1457,
	134, 1457,
	136, 1457,
	137, 1457,
	138, 1457,
	140, 1457,
	141, 1457,
	142, 1457,
	145, 1457,
	146, 1457,
	147, 1457,
	149, 1457,
	150, 1457,
	151, 1457,
	153, 1457,
	154, 1457,
	155, 1457,
	157, 1457,
	158, 1457,
	159, 1457,
	160, 1457,
	161, 1457,
	162, 1457,
	163, 1457,
	164, 1457,
	165, 1457,
	166, 1457,
	167, 1457,
	168, 1457,
	169, 1457,
	170, 1457,
	171, 1457,
	172, 1457,
	173, 1457,
	181, 1457,
	182, 1457,
	183, 1457,
	184, 1457,
	188, 1457,
	190, 1457,
	191, 1457,
	192, 1457,
	194, 1457,
	195, 1457,
	198, 1457,
	199, 1457,
	200, 1457,
	201, 1457,
	202, 1457,
	203, 1457,
	204, 1457,
	205, 1457,
	206, 1457,
	207, 1457,
	208, 1457,
	209, 1457,
	210, 1457,
	211, 1457,
	213, 1457,
	214, 1457,
	216, 1457,
	217, 1457,
	219, 1457,
	220, 1457,
	221, 1457,
	222, 1457,
	223, 1457,
	224, 1457,
	225, 1457,
	226, 1457,
	227, 1457,
	228, 1457,
	229, 1457,
	231, 1457,
	232, 1457,
	234, 1457,
	235, 1457,
	236, 1457,
	237, 1457,
	238, 1457,
	243, 1457,
	244, 1457,
	245, 1457,
	248, 1457,
	249, 1457,
	250, 1457,
	251, 1457,
	253, 1457,
	255, 1457,
	256, 1457,
	258, 1457,
	260, 1457,
	261, 1457,
	262, 1457,
	264, 1457,
	268, 1457,
	269, 1457,
	270, 1457,
	271, 1457,
	272, 1457,
	273, 1457,
	275, 1457,
	276, 1457,
	277, 1457,
	279, 1457,
	280, 1457,
	282, 1457,
	283, 1457,
	286, 1457,
	287, 1457,
	288, 1457,
	289, 1457,
	290, 1457,
	291, 1457,
	292, 1457,
	295, 1457,
	296, 1457,
	297, 1457,
	298, 1457,
	300, 1457,
	301, 1457,
	302, 1457,
	303, 1457,
	304, 1457,
	305, 1457,
	306, 1457,
	307, 1457,
	308, 1457,
	309, 1457,
	310, 1457,
	311, 1457,
	312, 1457,
	313, 1457,
	314, 1457,
	315, 1457,
	316, 1457,
	317, 1457,
	318, 1457,
	319, 1457,
	320, 1457,
	321, 1457,
	322, 1457,
	324, 1457,
	326, 1457,
	327, 1457,
	328, 1457,
	329, 1457,
	330, 1457,
	331, 1457,
	332, 1457,
	333, 1457,
	334, 1457,
	335, 1457,
	336, 1457,
	337, 1457,
	338, 1457,
	339, 1457,
	340, 1457,
	341, 1457,
	342, 1457,
	344, 1457,
	345, 1457,
	349, 1457,
	350, 1457,
	351, 1457,
	352, 1457,
	354, 1457,
	355, 1457,
	356, 1457,
	357, 1457,
	358, 1457,
	361, 1457,
	363, 1457,
	364, 1457,
	366, 1457,
	367, 1457,
	368, 1457,
	371, 1457,
	372, 1457,
	373, 1457,
	375, 1457,
	377, 1457,
	378, 1457,
	379, 1457,
	380, 1457,
	381, 1457,
	382, 1457,
	383, 1457,
	384, 1457,
	385, 1457,
	386, 1457,
	387, 1457,
	388, 1457,
	389, 1457,
	391, 1457,
	392, 1457,
	393, 1457,
	394, 1457,
	395, 1457,
	396, 1457,
	397, 1457,
	398, 1457,
	399, 1457,
	400, 1457,
	401, 1457,
	402, 1457,
	403, 1457,
	404, 1457,
	405, 1457,
	407, 1457,
	408, 1457,
	409, 1457,
	411, 1457,
	412, 1457,
	413, 1457,
	414, 1457,
	415, 1457,
	416, 1457,
	417, 1457,
	418, 1457,
	419, 1457,
	420, 1457,
	421, 1457,
	422, 1457,
	423, 1457,
	424, 1457,
	426, 1457,
	428, 1457,
	429, 1457,
	430, 1457,
	436, 1457,
	437, 1457,
	438, 1457,
	440, 1457,
	441, 1457,
	442, 1457,
	443, 1457,
	444, 1457,
	445, 1457,
	446, 1457,
	447, 1457,
	448, 1457,
	449, 1457,
	451, 1457,
	452, 1457,
	453, 1457,
	455, 1457,
	456, 1457,
	457, 1457,
	458, 1457,
	459, 1457,
	460, 1457,
	461, 1457,
	463, 1457,
	464, 1457,
	465, 1457,
	466, 1457,
	467, 1457,
	468, 1457,
	469, 1457,
	470, 1457,
	471, 1457,
	472, 1457,
	473, 1457,
	474, 1457,
	475, 1457,
	477, 1457,
	478, 1457,
	479, 1457,
	480, 1457,
	481, 1457,
	482, 1457,
	484, 1457,
	485, 1457,
	486, 1457,
	487, 1457,
	488, 1457,
	489, 1457,
	491, 1457,
	492, 1457,
	493, 1457,
	494, 1457,
	495, 1457,
	496, 1457,
	497, 1457,
	498, 1457,
	500, 1457,
	502, 1457,
	503, 1457,
	504, 1457,
	505, 1457,
	506, 1457,
	507, 1457,
	508, 1457,
	509, 1457,
	510, 1457,
	511, 1457,
	512, 1457,
	513, 1457,
	514, 1457,
	515, 1457,
	516, 1457,
	517, 1457,
	518, 1457,
	519, 1457,
	520, 1457,
	522, 1457,
	523, 1457,
	525, 1457,
	526, 1457,
	528, 1457,
	529, 1457,
	530, 1457,
	531, 1457,
	532, 1457,
	533, 1457,
	535, 1457,
	536, 1457,
	538, 1457,
	539, 1457,
	540, 1457,
	541, 1457,
	542, 1457,
	544, 1457,
	546, 1457,
	547, 1457,
	548, 1457,
	549, 1457,
	550, 1457,
	551, 1457,
	552, 1457,
	554, 1457,
	555, 1457,
	556, 1457,
	557, 1457,
	559, 1457,
	560, 1457,
	563, 1457,
	564, 1457,
	565, 1457,
	566, 1457,
	567, 1457,
	568, 1457,
	569, 1457,
	570, 1457,
	572, 1457,
	575, 1457,
	576, 1457,
	577, 1457,
	578, 1457,
	579, 1457,
	580, 1457,
	582, 1457,
	583, 1457,
	584, 1457,
	585, 1457,
	586, 1457,
	587, 1457,
	588, 1457,
	589, 1457,
	594, 1457,
	595, 1457,
	596, 1457,
	597, 1457,
	598, 1457,
	599, 1457,
	-2, 0,
	-1, 1746,
	1, 592,
	630, 592,
	632, 592,
	634, 592,
	-2, 1695,
	-1, 1749,
	4, 2924,
	11, 2924,
	12, 2924,
	14, 2924,
	15, 2924,
	16, 2924,
	17, 2924,
	18, 2924,
	19, 2924,
	21, 2924,
	22, 2924,
	23, 2924,
	24, 2924,
	25, 2924,
	26, 2924,
	27, 2924,
	28, 2924,
	30, 2924,
	31, 2924,
	34, 2924,
	35, 2924,
	37, 2924,
	39, 2924,
	41, 2924,
	43, 2924,
	44, 2924,
	46, 2924,
	47, 2924,
	48, 2924,
	49, 2924,
	50, 2924,
	51, 2924,
	52, 2924,
	53, 2924,
	54, 2924,
	56, 2924,
	57, 2924,
	58, 2924,
	59, 2924,
	61, 2924,
	62, 2924,
	63, 2924,
	64, 2924,
	65, 2924,
	66, 2924,
	67, 2924,
	70, 2924,
	71, 2924,
	72, 2924,
	73, 2924,
	74, 2924,
	76, 2924,
	77, 2924,
	78, 2924,
	79, 2924,
	82, 2924,
	83, 2924,
	84, 2924,
	85, 2924,
	86, 2924,
	87, 2924,
	88, 2924,
	89, 2924,
	90, 2924,
	92, 2924,
	93, 2924,
	94, 2924,
	95, 2924,
	96, 2924,
	98, 2924,
	99, 2924,
	100, 2924,
	101, 2924,
	102, 2924,
	103, 2924,
	104, 2924,
	105, 2924,
	107, 2924,
	108, 2924,
	109, 2924,
	110, 2924,
	111, 2924,
	112, 2924,
	113, 2924,
	121, 2924,
	122, 2924,
	123, 2924,
	124, 2924,
	125, 2924,
	127, 2924,
	128, 2924,
	129, 2924,
	130, 2924,
	132, 2924,
	133, 2924,
	134, 2924,
	136, 2924,
	137, 2924,
	138, 2924,
	140, 2924,
	141, 2924,
	142, 2924,
	145, 2924,
	146, 2924,
	147, 2924,
	149, 2924,
	150, 2924,
	151, 2924,
	153, 2924,
	154, 2924,
	155, 2924,
	157, 2924,
	158, 2924,
	159, 2924,
	160, 2924,
	161, 2924,
	162, 2924,
	163, 2924,
	164, 2924,
	165, 2924,
	166, 2924,
	167, 2924,
	168, 2924,
	169, 2924,
	170, 2924,
	171, 2924,
	172, 2924,
	173, 2924,
	177, 2924,
	178, 2924,
	179, 2924,
	180, 2924,
	181, 2924,
	182, 2924,
	183, 2924,
	184, 2924,
	187, 2924,
	188, 2924,
	190, 2924,
	191, 2924,
	192, 2924,
	194, 2924,
	195, 2924,
	197, 2924,
	198, 2924,
	199, 2924,
	200, 2924,
	201, 2924,
	202, 2924,
	203, 2924,
	204, 2924,
	205, 2924,
	206, 2924,
	207, 2924,
	208, 2924,
	209, 2924,
	210, 2924,
	211, 2924,
	213, 2924,
	214, 2924,
	216, 2924,
	217, 2924,
	219, 2924,
	220, 2924,
	221, 2924,
	222, 2924,
	223, 2924,
	224, 2924,
	225, 2924,
	226, 2924,
	227, 2924,
	228, 2924,
	229, 2924,
	230, 2924,
	231, 2924,
	232, 2924,
	233, 2924,
	234, 2924,
	235, 2924,
	236, 2924,
	237, 2924,
	238, 2924,
	240, 2924,
	241, 2924,
	243, 2924,
	244, 2924,
	245, 2924,
	247, 2924,
	248, 2924,
	249, 2924,
	250, 2924,
	251, 2924,
	253, 2924,
	255, 2924,
	256, 2924,
	257, 2924,
	258, 2924,
	259, 2924,
	260, 2924,
	261, 2924,
	262, 2924,
	263, 2924,
	264, 2924,
	266, 2924,
	267, 2924,
	268, 2924,
	269, 2924,
	270, 2924,
	271, 2924,
	272, 2924,
	273, 2924,
	275, 2924,
	276, 2924,
	277, 2924,
	279, 2924,
	280, 2924,
	281, 2924,
	282, 2924,
	283, 2924,
	284, 2924,
	286, 2924,
	287, 2924,
	288, 2924,
	289, 2924,
	290, 2924,
	291, 2924,
	292, 2924,
	295, 2924,
	296, 2924,
	297, 2924,
	298, 2924,
	299, 2924,
	300, 2924,
	301, 2924,
	302, 2924,
	303, 2924,
	304, 2924,
	305, 2924,
	306, 2924,
	307, 2924,
	308, 2924,
	309, 2924,
	310, 2924,
	311, 2924,
	312, 2924,
	313, 2924,
	314, 2924,
	315, 2924,
	316, 2924,
	317, 2924,
	318, 2924,
	319, 2924,
	320, 2924,
	321, 2924,
	322, 2924,
	324, 2924,
	325, 2924,
	326, 2924,
	327, 2924,
	328, 2924,
	329, 2924,
	330, 2924,
	331, 2924,
	332, 2924,
	333, 2924,
	334, 2924,
	335, 2924,
	336, 2924,
	337, 2924,
	338, 2924,
	339, 2924,
	340, 2924,
	341, 2924,
	342, 2924,
	344, 2924,
	345, 2924,
	348, 2924,
	349, 2924,
	350, 2924,
	351, 2924,
	352, 2924,
	354, 2924,
	355, 2924,
	356, 2924,
	357, 2924,
	358, 2924,
	361, 2924,
	363, 2924,
	366, 2924,
	367, 2924,
	368, 2924,
	369, 2924,
	371, 2924,
	372, 2924,
	373, 2924,
	375, 2924,
	377, 2924,
	378, 2924,
	379, 2924,
	380, 2924,
	381, 2924,
	382, 2924,
	383, 2924,
	384, 2924,
	385, 2924,
	386, 2924,
	387, 2924,
	388, 2924,
	389, 2924,
	391, 2924,
	392, 2924,
	393, 2924,
	394, 2924,
	395, 2924,
	396, 2924,
	397, 2924,
	398, 2924,
	399, 2924,
	400, 2924,
	401, 2924,
	402, 2924,
	403, 2924,
	404, 2924,
	405, 2924,
	407, 2924,
	408, 2924,
	409, 2924,
	411, 2924,
	412, 2924,
	413, 2924,
	414, 2924,
	415, 2924,
	416, 2924,
	417, 2924,
	418, 2924,
	419, 2924,
	420, 2924,
	421, 2924,
	422, 2924,
	423, 2924,
	424, 2924,
	426, 2924,
	428, 2924,
	429, 2924,
	430, 2924,
	436, 2924,
	437, 2924,
	438, 2924,
	439, 2924,
	440, 2924,
	441, 2924,
	442, 2924,
	443, 2924,
	444, 2924,
	445, 2924,
	446, 2924,
	447, 2924,
	448, 2924,
	449, 2924,
	451, 2924,
	452, 2924,
	453, 2924,
	454, 2924,
	455, 2924,
	456, 2924,
	457, 2924,
	458, 2924,
	459, 2924,
	460, 2924,
	461, 2924,
	462, 2924,
	463, 2924,
	464, 2924,
	465, 2924,
	466, 2924,
	467, 2924,
	468, 2924,
	469, 2924,
	470, 2924,
	471, 2924,
	472, 2924,
	473, 2924,
	474, 2924,
	475, 2924,
	477, 2924,
	478, 2924,
	479, 2924,
	480, 2924,
	481, 2924,
	482, 2924,
	484, 2924,
	485, 2924,
	486, 2924,
	487, 2924,
	488, 2924,
	489, 2924,
	490, 2924,
	491, 2924,
	492, 2924,
	493, 2924,
	494, 2924,
	495, 2924,
	496, 2924,
	497, 2924,
	498, 2924,
	500, 2924,
	502, 2924,
	503, 2924,
	504, 2924,
	505, 2924,
	506, 2924,
	507, 2924,
	508, 2924,
	509, 2924,
	510, 2924,
	511, 2924,
	512, 2924,
	513, 2924,
	514, 2924,
	515, 2924,
	516, 2924,
	517, 2924,
	518, 2924,
	519, 2924,
	520, 2924,
	522, 2924,
	523, 2924,
	524, 2924,
	525, 2924,
	526, 2924,
	528, 2924,
	529, 2924,
	530, 2924,
	531, 2924,
	532, 2924,
	533, 2924,
	535, 2924,
	536, 2924,
	538, 2924,
	539, 2924,
	540, 2924,
	541, 2924,
	542, 2924,
	544, 2924,
	546, 2924,
	547, 2924,
	548, 2924,
	549, 2924,
	550, 2924,
	551, 2924,
	552, 2924,
	554, 2924,
	555, 2924,
	556, 2924,
	557, 2924,
	559, 2924,
	560, 2924,
	563, 2924,
	564, 2924,
	565, 2924,
	566, 2924,
	567, 2924,
	568, 2924,
	569, 2924,
	570, 2924,
	572, 2924,
	575, 2924,
	576, 2924,
	577, 2924,
	578, 2924,
	579, 2924,
	580, 2924,
	582, 2924,
	583, 2924,
	584, 2924,
	585, 2924,
	586, 2924,
	587, 2924,
	588, 2924,
	589, 2924,
	594, 2924,
	595, 2924,
	596, 2924,
	597, 2924,
	598, 2924,
	599, 2924,
	600, 2924,
	602, 2924,
	611, 2924,
	612, 2924,
	613, 2924,
	614, 2924,
	615, 2924,
	616, 2924,
	618, 2924,
	619, 2924,
	620, 2924,
	621, 2924,
	622, 2924,
	623, 2924,
	624, 2924,
	625, 2924,
	626, 2924,
	629, 2924,
	632, 2924,
	633, 2924,
	635, 2924,
	636, 2924,
	-2, 0,
	-1, 1754,
	196, 2798,
	543, 2798,
	613, 2798,
	633, 2798,
	-2, 0,
	-1, 1808,
	413, 999,
	482, 999,
	526, 999,
	548, 999,
	-2, 0,
	-1, 1819,
	1, 1529,
	630, 1529,
	632, 1529,
	634, 1529,
	-2, 0,
	-1, 1836,
	1, 994,
	630, 994,
	632, 994,
	634, 994,
	-2, 0,
	-1, 1837,
	1, 1038,
	630, 1038,
	632, 1038,
	634, 1038,
	-2, 0,
	-1, 1838,
	1, 1046,
	630, 1046,
	632, 1046,
	634, 1046,
	-2, 0,
	-1, 1841,
	1, 1003,
	630, 1003,
	632, 1003,
	634, 1003,
	-2, 0,
	-1, 1843,
	1, 1009,
	630, 1009,
	632, 1009,
	634, 1009,
	-2, 0,
	-1, 1846,
	1, 1005,
	630, 1005,
	632, 1005,
	634, 1005,
	-2, 0,
	-1, 1851,
	1, 1019,
	630, 1019,
	632, 1019,
	634, 1019,
	-2, 0,
	-1, 1885,
	1, 2780,
	630, 2780,
	632, 2780,
	633, 2780,
	634, 2780,
	-2, 0,
	-1, 1889,
	1, 1097,
	630, 1097,
	632, 1097,
	634, 1097,
	-2, 0,
	-1, 1906,
	1, 1579,
	634, 1579,
	-2, 1584,
	-1, 1909,
	176, 1738,
	189, 1738,
	285, 1738,
	359, 1738,
	-2, 1676,
	-1, 2009,
	156, 1697,
	176, 1697,
	189, 1697,
	252, 1697,
	285, 1697,
	359, 1697,
	370, 1697,
	561, 1697,
	-2, 2148,
	-1, 2070,
	632, 2323,
	-2, 0,
	-1, 2106,
	156, 1697,
	176, 1697,
	189, 1697,
	252, 1697,
	285, 1697,
	359, 1697,
	370, 1697,
	561, 1697,
	-2, 1830,
	-1, 2146,
	543, 2795,
	633, 2795,
	636, 2795,
	-2, 0,
	-1, 2163,
	631, 1971,
	-2, 1959,
	-1, 2195,
	196, 2795,
	633, 2795,
	636, 2795,
	-2, 0,
	-1, 2238,
	1, 759,
	634, 759,
	-2, 1584,
	-1, 2412,
	233, 280,
	-2, 2471,
	-1, 2413,
	233, 281,
	-2, 336,
	-1, 2524,
	1, 996,
	630, 996,
	632, 996,
	634, 996,
	-2, 0,
	-1, 2525,
	1, 1040,
	630, 1040,
	632, 1040,
	634, 1040,
	-2, 0,
	-1, 2526,
	1, 1048,
	630, 1048,
	632, 1048,
	634, 1048,
	-2, 0,
	-1, 2527,
	1, 1099,
	630, 1099,
	632, 1099,
	634, 1099,
	-2, 0,
	-1, 2568,
	1, 1021,
	630, 1021,
	632, 1021,
	634, 1021,
	-2, 0,
	-1, 2590,
	1, 1082,
	630, 1082,
	632, 1082,
	634, 1082,
	-2, 0,
	-1, 2637,
	460, 1765,
	461, 1765,
	-2, 2004,
	-1, 2668,
	14, 0,
	15, 0,
	16, 0,
	611, 0,
	612, 0,
	613, 0,
	-2, 2024,
	-1, 2669,
	14, 0,
	15, 0,
	16, 0,
	611, 0,
	612, 0,
	613, 0,
	-2, 2025,
	-1, 2670,
	99, 0,
	266, 0,
	267, 0,
	615, 0,
	616, 0,
	-2, 2026,
	-1, 2671,
	99, 0,
	266, 0,
	267, 0,
	615, 0,
	616, 0,
	-2, 2027,
	-1, 2672,
	99, 0,
	266, 0,
	267, 0,
	615, 0,
	616, 0,
	-2, 2028,
	-1, 2673,
	99, 0,
	266, 0,
	267, 0,
	615, 0,
	616, 0,
	-2, 2029,
	-1, 2674,
	99, 0,
	266, 0,
	267, 0,
	615, 0,
	616, 0,
	-2, 2030,
	-1, 2675,
	14, 0,
	15, 0,
	16, 0,
	611, 0,
	612, 0,
	613, 0,
	-2, 2031,
	-1, 2687,
	14, 0,
	15, 0,
	16, 0,
	611, 0,
	612, 0,
	613, 0,
	-2, 2043,
	-1, 2688,
	14, 0,
	15, 0,
	16, 0,
	611, 0,
	612, 0,
	613, 0,
	-2, 2044,
	-1, 2689,
	14, 0,
	15, 0,
	16, 0,
	611, 0,
	612, 0,
	613, 0,
	-2, 2045,
	-1, 2693,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	230, 0,
	233, 0,
	284, 0,
	490, 0,
	600, 0,
	614, 0,
	-2, 2052,
	-1, 2699,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	230, 0,
	233, 0,
	284, 0,
	490, 0,
	600, 0,
	614, 0,
	-2, 2056,
	-1, 2701,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	230, 0,
	233, 0,
	284, 0,
	490, 0,
	600, 0,
	614, 0,
	-2, 2064,
	-1, 2702,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	230, 0,
	233, 0,
	284, 0,
	490, 0,
	600, 0,
	614, 0,
	-2, 2065,
	-1, 2703,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	230, 0,
	233, 0,
	284, 0,
	490, 0,
	600, 0,
	614, 0,
	-2, 2066,
	-1, 2704,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	230, 0,
	233, 0,
	284, 0,
	490, 0,
	600, 0,
	614, 0,
	-2, 2067,
	-1, 2878,
	5, 2475,
	196, 2334,
	631, 2472,
	-2, 2463,
	-1, 2879,
	196, 2335,
	-2, 2875,
	-1, 2880,
	196, 2336,
	-2, 2673,
	-1, 2881,
	196, 2337,
	-2, 2549,
	-1, 2882,
	196, 2338,
	-2, 2611,
	-1, 2883,
	196, 2339,
	-2, 2658,
	-1, 2884,
	196, 2340,
	-2, 2793,
	-1, 2885,
	196, 2341,
	-2, 2131,
	-1, 2957,
	1, 1831,
	2, 1831,
	110, 1831,
	156, 1831,
	176, 1831,
	189, 1831,
	197, 1831,
	215, 1831,
	218, 1831,
	247, 1831,
	252, 1831,
	263, 1831,
	281, 1831,
	285, 1831,
	325, 1831,
	359, 1831,
	364, 1831,
	370, 1831,
	450, 1831,
	454, 1831,
	561, 1831,
	573, 1831,
	591, 1831,
	592, 1831,
	593, 1831,
	603, 1831,
	630, 1831,
	632, 1831,
	634, 1831,
	636, 1831,
	-2, 1830,
	-1, 2970,
	631, 2444,
	-2, 2458,
	-1, 2972,
	1, 353,
	591, 353,
	-2, 1724,
	-1, 3002,
	631, 1970,
	-2, 1960,
	-1, 3216,
	1, 1432,
	445, 1387,
	484, 1387,
	606, 1387,
	630, 1432,
	632, 1432,
	634, 1432,
	-2, 1724,
	-1, 3397,
	365, 1768,
	-2, 2914,
	-1, 3398,
	365, 1769,
	-2, 2777,
	-1, 3402,
	460, 2400,
	461, 2400,
	-2, 2129,
	-1, 3403,
	460, 2404,
	461, 2404,
	-2, 2130,
	-1, 3404,
	460, 2401,
	461, 2401,
	-2, 2129,
	-1, 3405,
	460, 2405,
	461, 2405,
	-2, 2130,
	-1, 3418,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	230, 0,
	233, 0,
	284, 0,
	490, 0,
	600, 0,
	614, 0,
	-2, 2054,
	-1, 3419,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	230, 0,
	233, 0,
	284, 0,
	490, 0,
	600, 0,
	614, 0,
	-2, 2058,
	-1, 3425,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	230, 0,
	233, 0,
	284, 0,
	490, 0,
	600, 0,
	614, 0,
	-2, 2060,
	-1, 3652,
	1, 754,
	630, 754,
	632, 754,
	634, 754,
	-2, 1584,
	-1, 3850,
	45, 2435,
	-2, 1170,
	-1, 3855,
	1, 1432,
	630, 1432,
	632, 1432,
	634, 1432,
	-2, 1724,
	-1, 3964,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	230, 0,
	233, 0,
	284, 0,
	490, 0,
	600, 0,
	614, 0,
	-2, 2062,
	-1, 3971,
	257, 0,
	259, 0,
	348, 0,
	-2, 2081,
	-1, 4039,
	14, 0,
	15, 0,
	16, 0,
	611, 0,
	612, 0,
	613, 0,
	-2, 2110,
	-1, 4040,
	14, 0,
	15, 0,
	16, 0,
	611, 0,
	612, 0,
	613, 0,
	-2, 2111,
	-1, 4041,
	14, 0,
	15, 0,
	16, 0,
	611, 0,
	612, 0,
	613, 0,
	-2, 2112,
	-1, 4045,
	14, 0,
	15, 0,
	16, 0,
	611, 0,
	612, 0,
	613, 0,
	-2, 2116,
	-1, 4046,
	14, 0,
	15, 0,
	16, 0,
	611, 0,
	612, 0,
	613, 0,
	-2, 2117,
	-1, 4047,
	14, 0,
	15, 0,
	16, 0,
	611, 0,
	612, 0,
	613, 0,
	-2, 2118,
	-1, 4095,
	631, 2445,
	-2, 2459,
	-1, 4311,
	633, 3031,
	-2, 1650,
	-1, 4370,
	257, 0,
	259, 0,
	348, 0,
	-2, 2082,
	-1, 4373,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	230, 0,
	233, 0,
	284, 0,
	490, 0,
	600, 0,
	614, 0,
	-2, 2085,
	-1, 4374,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	230, 0,
	233, 0,
	284, 0,
	490, 0,
	600, 0,
	614, 0,
	-2, 2087,
	-1, 4497,
	633, 2460,
	-2, 1467,
	-1, 4659,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	230, 0,
	233, 0,
	284, 0,
	490, 0,
	600, 0,
	614, 0,
	-2, 2086,
	-1, 4660,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	230, 0,
	233, 0,
	284, 0,
	490, 0,
	600, 0,
	614, 0,
	-2, 2088,
	-1, 4671,
	257, 0,
	-2, 2121,
	-1, 4864,
	257, 0,
	-2, 2122,
	-1, 5085,
	53, 0,
	230, 0,
	284, 0,
	490, 0,
	600, 0,
	614, 0,
	-2, 2878,
}

const sqlPrivate = 57344

const sqlLast = 146670

var sqlAct = [...]int{
	291, 5203, 5020, 5276, 1427, 3556, 4905, 5131, 3290, 3140,
	5147, 4913, 5019, 4732, 5084, 5071, 5097, 3170, 5217, 1340,
	3073, 3835, 3836, 5031, 4976, 1652, 5053, 5098, 2409, 1424,
	4957, 5010, 5034, 5099, 4353, 5156, 1483, 4833, 3847, 4810,
	5095, 4797, 4618, 4781, 2298, 4004, 1351, 4868, 4613, 5083,
	4574, 4547, 2647, 4607, 4112, 4737, 4680, 4648, 3678, 3956,
	2499, 4493, 1170, 4303, 1622, 1772, 4295, 3872, 4600, 4816,
	4598, 3411, 4942, 3260, 4218, 4494, 1417, 4474, 3741, 3074,
	894, 2497, 2487, 2910, 755, 2716, 3312, 3866, 4623, 3820,
	1918, 1419, 4268, 3809, 1161, 4249, 2655, 4251, 2220, 3825,
	3684, 1502, 2150, 4676, 827, 2307, 3681, 3902, 894, 3666,
	2130, 3900, 3155, 3279, 3248, 3824, 3667, 3827, 3274, 1595,
	3668, 2984, 3276, 2648, 2112, 2460, 3802, 3801, 4098, 3571,
	973, 3602, 3539, 969, 4, 3291, 3609, 3579, 4352, 3307,
	2385, 766, 1770, 3560, 2396, 3223, 2335, 3171, 2319, 5132,
	2398, 3705, 2652, 2056, 2081, 3562, 2950, 4869, 4409, 2794,
	1987, 891, 4065, 2017, 2729, 3395, 3252, 964, 3306, 2495,
	1422, 3538, 1169, 191, 1710, 889, 2207, 2952, 2447, 1183,
	823, 2397, 3185, 2383, 2356, 2375, 3261, 1220, 2286, 2785,
	2218, 1466, 2363, 2949, 1816, 2101, 1906, 285, 284, 2290,
	1396, 2930, 2713, 1481, 1485, 1225, 2636, 2619, 1331, 2082,
	2617, 2985, 3284, 2907, 800, 1747, 895, 2446, 896, 1713,
	1044, 2378, 116, 3099, 4977, 3059, 3098, 2788, 3828, 742,
	1453, 1334, 3013, 764, 1624, 2091, 2939, 2920, 1227, 1313,
	2098, 2051, 1188, 2874, 2766, 2796, 2840, 808, 1919, 2001,
	201, 1920, 2618, 1851, 1348, 1836, 202, 819, 2406, 1407,
	1330, 2473, 1745, 2151, 120, 1646, 1738, 2387, 106, 990,
	2620, 1603, 191, 2641, 5148, 1201, 46, 900, 903, 1216,
	5204, 759, 1336, 45, 1223, 43, 34, 756, 283, 768,
	32, 30, 783, 884, 1311, 1478, 1925, 945, 1905, 3448,
	1658, 1065, 4079, 3442, 4080, 900, 903, 2209, 946, 5287,
	2209, 4113, 5279, 2929, 2209, 2209, 3782, 2209, 2209, 3558,
	5093, 4705, 5267, 4699, 1933, 1934, 2929, 1966, 1967, 1968,
	1977, 1978, 1979, 5266, 5236, 5234, 5177, 2929, 4736, 4736,
	2418, 5133, 5123, 4702, 1165, 5134, 2929, 1970, 1964, 5121,
	3254, 5118, 3882, 2929, 2230, 5119, 1936, 5115, 5081, 5080,
	3637, 5116, 2418, 2418, 3881, 3634, 1983, 1165, 5079, 1222,
	5069, 1651, 3317, 5067, 4736, 5062, 5057, 4736, 5056, 4819,
	4736, 5029, 4736, 1989, 4996, 4736, 843, 4989, 2993, 4988,
	4981, 2929, 1935, 2929, 2418, 4956, 4953, 4935, 4866, 2418,
	4736, 4564, 2993, 1955, 4847, 1462, 4812, 4755, 4329, 1328,
	4146, 2418, 1952, 4754, 4743, 4742, 2227, 2418, 2418, 4736,
	1154, 4735, 4445, 1314, 1314, 4736, 1166, 1933, 1934, 4687,
	4661, 4634, 4631, 2418, 2993, 3317, 3782, 4542, 2496, 4521,
	4372, 2929, 1145, 2929, 2993, 1933, 1934, 3619, 1144, 1462,
	4319, 1964, 3015, 1410, 3895, 3457, 836, 839, 4313, 1936,
	4265, 3458, 3895, 4177, 4266, 2230, 4145, 4178, 2488, 1964,
	4146, 4090, 1782, 1366, 4088, 4091, 4072, 1936, 4089, 3988,
	2929, 3984, 4069, 2418, 3894, 2929, 1989, 3782, 3895, 2989,
	1958, 1959, 1960, 1961, 1317, 1935, 1318, 3509, 3510, 3555,
	1941, 3550, 1160, 2929, 1989, 2929, 1955, 2418, 3549, 2230,
	3500, 3253, 2929, 1935, 3501, 3498, 3490, 3488, 3459, 3499,
	3491, 2929, 2929, 3316, 3301, 3300, 3038, 3317, 2483, 2483,
	2929, 99, 2230, 1346, 3410, 2992, 1199, 1842, 1343, 2993,
	2227, 1315, 2922, 1974, 2982, 2230, 1984, 2791, 2929, 1374,
	2929, 2974, 2928, 1963, 1965, 2418, 2929, 2482, 1763, 4997,
	4870, 2483, 251, 4861, 4849, 4819, 1367, 3317, 4069, 2921,
	1980, 4611, 1981, 4564, 2227, 4522, 3524, 4329, 4267, 1950,
	1951, 3147, 2312, 3058, 2244, 2208, 2224, 3253, 1367, 2417,
	3165, 3049, 2077, 1958, 1959, 1960, 1961, 1972, 1645, 4195,
	3959, 3931, 2099, 1941, 2368, 3883, 2966, 2965, 1651, 2964,
	2929, 1818, 1956, 253, 2963, 3509, 3510, 2962, 251, 1319,
	1316, 1941, 1153, 1342, 1152, 3884, 2463, 1151, 1150, 1149,
	1148, 4625, 1147, 3447, 1143, 1142, 1141, 1140, 1139, 1138,
	1137, 1136, 1135, 1134, 2792, 2742, 2743, 2744, 2761, 2762,
	2763, 3366, 3269, 1133, 1132, 1131, 1963, 1965, 1130, 1660,
	1129, 1982, 1128, 1127, 252, 1126, 2764, 1125, 1124, 253,
	1106, 1042, 1041, 3515, 1963, 1965, 1040, 1039, 1038, 245,
	3509, 3510, 1971, 1037, 1036, 1035, 1034, 2210, 246, 1033,
	2210, 1032, 1031, 1986, 2210, 2210, 1672, 2210, 2210, 3509,
	3510, 1989, 1030, 1029, 1028, 1027, 1026, 1025, 1024, 1023,
	1022, 1021, 1020, 1019, 1018, 1956, 1017, 203, 1016, 1015,
	252, 2754, 1014, 1013, 1660, 1012, 2793, 1011, 2790, 1010,
	2750, 1009, 3253, 1956, 1008, 1007, 1006, 995, 994, 993,
	988, 987, 1666, 980, 979, 1660, 978, 963, 962, 919,
	918, 917, 1962, 916, 907, 906, 905, 904, 4852, 4427,
	2227, 2227, 866, 41, 865, 834, 833, 832, 814, 279,
	278, 277, 276, 203, 1659, 1957, 4873, 275, 274, 273,
	272, 3066, 271, 2227, 270, 3525, 269, 268, 267, 266,
	1344, 3515, 3881, 265, 264, 263, 1986, 262, 5108, 261,
	1367, 1429, 1225, 1975, 260, 2227, 259, 2560, 2755, 2756,
	2757, 2758, 258, 257, 1986, 256, 255, 254, 2749, 4384,
	4122, 4084, 3896, 3605, 3553, 3470, 3453, 3444, 3346, 1225,
	1225, 1225, 3233, 3066, 2997, 2971, 2059, 1988, 2102, 251,
	2956, 2059, 2609, 2058, 2823, 2271, 2229, 2125, 2058, 2821,
	2028, 4627, 159, 2019, 1786, 1962, 3515, 2807, 2805, 1900,
	1654, 1474, 1350, 5107, 1767, 5104, 1986, 5082, 1932, 3554,
	1505, 5066, 2062, 4278, 1225, 3515, 2230, 2057, 1957, 3025,
	1225, 1627, 1225, 2208, 2227, 1429, 2224, 2612, 4961, 1636,
	253, 1470, 1471, 1472, 4858, 2795, 1957, 2759, 2760, 4675,
	4632, 4850, 4610, 3525, 1457, 3509, 3510, 4727, 4451, 4407,
	1225, 4406, 1225, 1973, 1225, 3271, 4400, 4399, 4398, 4391,
	1671, 1627, 2021, 3287, 1947, 1948, 1954, 1976, 1953, 1949,
	2752, 1946, 1944, 1945, 1937, 1938, 1939, 1940, 1942, 1943,
	1988, 252, 4390, 4388, 4383, 4394, 251, 1429, 3526, 4393,
	4380, 1715, 1613, 4379, 4264, 1435, 245, 4126, 1988, 1168,
	4183, 1660, 3509, 3510, 4125, 246, 1665, 1627, 3525, 4124,
	4094, 4060, 4059, 1608, 1627, 4058, 3980, 3975, 2026, 3600,
	3546, 3537, 2921, 1225, 1986, 1225, 3508, 3525, 3505, 1367,
	1627, 3504, 3502, 3497, 203, 1401, 1404, 253, 3496, 1225,
	3495, 1225, 1449, 3492, 3489, 3469, 3452, 3445, 3443, 3302,
	1414, 251, 3064, 2957, 2778, 1932, 1931, 2019, 2789, 1451,
	2425, 1327, 2020, 1649, 2018, 1719, 1722, 2423, 5282, 5225,
	5224, 5146, 251, 5144, 1946, 1944, 1945, 1937, 1938, 1939,
	1940, 1942, 1943, 1352, 4006, 5021, 4279, 3626, 252, 1986,
	1627, 3006, 1488, 1489, 1634, 1937, 1938, 1939, 1940, 1942,
	1943, 1632, 253, 245, 4940, 4875, 3526, 4925, 1986, 4921,
	1225, 4920, 246, 1225, 4919, 4899, 1443, 1498, 4898, 1592,
	1597, 3515, 4896, 253, 4872, 4871, 4845, 1418, 2719, 4831,
	4828, 4827, 4820, 2753, 4808, 900, 903, 4807, 4751, 4722,
	4673, 203, 4656, 4655, 3520, 3518, 3519, 3511, 3512, 3513,
	3514, 3516, 3517, 252, 1648, 1708, 1647, 1484, 4626, 1739,
	3063, 4594, 4590, 4193, 1630, 1844, 4587, 4565, 245, 4426,
	3270, 3526, 4405, 1787, 252, 1750, 1752, 246, 3515, 4330,
	191, 191, 1480, 4279, 4181, 4180, 1490, 1491, 4161, 245,
	3526, 4160, 4158, 3063, 3551, 1988, 4075, 4063, 246, 3970,
	1598, 2006, 3897, 1612, 1418, 3891, 203, 3858, 3762, 3716,
	251, 3683, 3063, 3628, 3474, 3473, 1225, 1225, 1225, 1225,
	1225, 1225, 1225, 1225, 3468, 3434, 3247, 203, 2725, 1166,
	3091, 2065, 1457, 3525, 2064, 1457, 2063, 2060, 2052, 2050,
	3004, 1748, 3003, 2968, 2961, 2927, 2803, 2005, 2124, 1225,
	2080, 2074, 2073, 2072, 2071, 1225, 251, 2070, 2464, 2069,
	2068, 253, 1741, 3518, 3519, 3511, 3512, 3513, 3514, 3516,
	3517, 1477, 3597, 2067, 2066, 4700, 2047, 1418, 1418, 1910,
	2046, 2045, 2739, 2740, 2741, 2765, 2751, 2745, 251, 2747,
	2748, 2746, 2733, 2734, 2735, 2736, 2737, 2738, 2044, 2043,
	2042, 2041, 2995, 2040, 2039, 2038, 1792, 253, 251, 1860,
	78, 2037, 252, 2036, 1986, 2035, 2034, 2033, 2032, 2021,
	2007, 251, 2004, 1999, 1762, 1442, 1371, 245, 79, 3519,
	3511, 3512, 3513, 3514, 3516, 3517, 246, 1362, 4874, 253,
	1781, 4597, 4447, 4376, 4121, 84, 3520, 3518, 3519, 3511,
	3512, 3513, 3514, 3516, 3517, 4087, 1904, 4078, 252, 253,
	3456, 1225, 1225, 1225, 4449, 203, 1600, 1225, 251, 2959,
	4120, 2008, 253, 245, 1348, 1744, 1348, 2020, 251, 3624,
	2002, 3887, 246, 2120, 1467, 1469, 93, 3141, 5216, 3719,
	252, 1505, 4929, 1809, 4922, 4821, 3526, 4630, 4568, 4567,
	4853, 2079, 4566, 1225, 4523, 245, 894, 1429, 1845, 4524,
	252, 203, 2168, 894, 246, 1429, 1911, 1429, 2128, 253,
	4429, 1933, 1934, 252, 4337, 245, 4336, 971, 2011, 253,
	3509, 3510, 2016, 4335, 246, 4334, 2147, 4333, 245, 4332,
	51, 4331, 115, 203, 2197, 1725, 2199, 246, 99, 112,
	2088, 4147, 1907, 1936, 1915, 1468, 4082, 4081, 1933, 1934,
	1145, 3899, 3898, 3286, 3786, 3784, 1144, 3783, 2061, 251,
	252, 1166, 1914, 251, 2256, 2255, 203, 1429, 1484, 2264,
	252, 1484, 5100, 1225, 1909, 245, 2141, 1484, 5173, 1935,
	1936, 1462, 5171, 4817, 246, 245, 2135, 3752, 2346, 5096,
	1928, 1929, 2102, 4282, 246, 2136, 2232, 1225, 1482, 1484,
	3957, 2059, 100, 1462, 2822, 1505, 2085, 2086, 2058, 2820,
	253, 4209, 1744, 203, 253, 3494, 1935, 2806, 2804, 1902,
	1314, 2109, 2042, 203, 3493, 3416, 3117, 3183, 1808, 2042,
	3102, 2301, 2262, 4851, 3509, 3510, 1465, 2053, 2054, 4176,
	191, 2250, 1462, 1122, 3685, 3511, 3512, 3513, 3514, 3516,
	3517, 1861, 2030, 1463, 1933, 1934, 2236, 2142, 1457, 2269,
	2399, 252, 2110, 4489, 2191, 252, 4726, 3838, 4272, 3837,
	4141, 1817, 4142, 3335, 2133, 2235, 245, 3333, 4891, 3331,
	245, 4892, 2516, 2488, 4811, 246, 1936, 5129, 1166, 246,
	4608, 2259, 1123, 900, 903, 3313, 1434, 2107, 4892, 4482,
	900, 903, 2100, 3810, 3513, 3514, 3516, 3517, 2214, 4554,
	1818, 2216, 2400, 4287, 203, 4261, 4215, 2221, 203, 4206,
	4186, 2223, 1935, 3925, 1941, 3650, 2226, 2581, 2493, 1743,
	2431, 2212, 4677, 3558, 2027, 4008, 3100, 2078, 3462, 5105,
	2162, 2365, 2786, 1346, 2119, 1346, 2104, 3143, 1343, 2345,
	1343, 2118, 4508, 2117, 2115, 4483, 104, 3002, 2114, 2113,
	4505, 4746, 2075, 4718, 2055, 3818, 2134, 2457, 1718, 1641,
	1438, 1400, 3162, 2238, 1627, 1627, 1612, 5120, 1459, 2148,
	1326, 5117, 4534, 3877, 3159, 1505, 2791, 4152, 4914, 4614,
	3157, 5028, 1796, 3688, 4171, 3283, 3793, 1775, 3345, 3625,
	5174, 2355, 4749, 5208, 1657, 5153, 1664, 5175, 1670, 4745,
	3515, 5106, 2355, 2261, 4724, 199, 107, 2379, 3951, 111,
	2352, 1469, 4228, 958, 4776, 3654, 1612, 4510, 2234, 1693,
	1941, 2590, 3121, 1342, 2587, 1342, 2342, 1685, 2350, 2410,
	2415, 3039, 1102, 1120, 2360, 1859, 251, 1840, 3225, 2574,
	5278, 2260, 1118, 4930, 972, 1116, 1840, 2572, 1114, 159,
	1486, 1487, 4769, 3076, 1464, 4757, 4557, 1111, 1643, 2265,
	4556, 2257, 3062, 2251, 4226, 4225, 1743, 1761, 1858, 1766,
	1469, 2312, 1627, 2792, 1627, 2355, 1627, 3062, 3060, 4217,
	2588, 1468, 4201, 1780, 4227, 1785, 4200, 253, 4198, 4197,
	4185, 4144, 2306, 3060, 1627, 1627, 4143, 2278, 2279, 2076,
	3718, 3799, 2318, 3280, 2282, 2283, 2525, 3798, 1627, 2589,
	3754, 1694, 3618, 3467, 164, 1837, 1460, 3466, 3465, 3464,
	1627, 3420, 1627, 1627, 1627, 959, 1461, 2129, 3181, 2380,
	204, 3180, 3164, 3153, 3145, 4155, 3135, 3134, 252, 3127,
	1468, 2402, 2403, 2310, 3126, 2340, 894, 2353, 3125, 3107,
	1839, 1843, 2453, 245, 3106, 2793, 3067, 2790, 3750, 1839,
	4478, 2983, 246, 900, 903, 4504, 200, 4479, 1225, 1794,
	2404, 3079, 2526, 2996, 806, 1857, 3656, 2836, 4484, 2337,
	2458, 1838, 1648, 4506, 1647, 2276, 4747, 2277, 4719, 2835,
	1344, 203, 1344, 1986, 2351, 2339, 2470, 2284, 2285, 2700,
	2359, 2336, 1270, 2515, 1908, 2657, 1225, 4456, 3010, 2491,
	2400, 3685, 5209, 1986, 5154, 2389, 2987, 3046, 2389, 2388,
	4481, 2392, 2388, 2488, 806, 1108, 1731, 2488, 1730, 2488,
	2520, 2416, 2488, 2437, 3926, 4654, 2354, 2501, 2478, 4485,
	3104, 1729, 1225, 1728, 1225, 4466, 1689, 2354, 2312, 1164,
	2599, 1225, 5211, 2239, 2168, 2168, 1505, 2343, 1225, 1225,
	1225, 1225, 1225, 1225, 1225, 1225, 1225, 1225, 1225, 1225,
	1225, 1225, 1225, 1225, 1225, 1225, 1225, 1225, 1225, 1225,
	1225, 1225, 1225, 1225, 1225, 1225, 1225, 1225, 1225, 1225,
	1225, 1225, 1225, 1225, 1166, 1225, 1166, 1225, 1225, 1225,
	1225, 2338, 2480, 2467, 1218, 2439, 1748, 2545, 1748, 2438,
	4525, 1462, 4465, 1741, 2607, 2475, 1943, 2475, 2476, 2472,
	2354, 2456, 2512, 1225, 2795, 3517, 2507, 1225, 1225, 3751,
	2629, 2348, 1443, 1898, 2484, 1225, 2485, 2616, 1386, 1225,
	1810, 1225, 1225, 900, 903, 1163, 3320, 1644, 1702, 1505,
	1939, 1940, 1942, 1943, 5212, 1225, 1225, 1225, 1225, 1789,
	1707, 1225, 1225, 1225, 1225, 1225, 1225, 1225, 1225, 2627,
	2786, 2266, 2267, 2090, 1486, 1487, 4480, 3130, 2627, 2715,
	1486, 1487, 3361, 2715, 3078, 2524, 1463, 1225, 1225, 1225,
	1225, 1225, 1225, 1225, 1225, 1225, 1871, 1225, 2535, 3090,
	2611, 1225, 1486, 1487, 1452, 4907, 1901, 4507, 1875, 3374,
	2767, 2768, 2579, 1348, 805, 2311, 3393, 5240, 4490, 4491,
	1505, 2116, 1877, 2566, 2767, 2783, 5174, 2568, 2529, 1348,
	5102, 2625, 1818, 3408, 3511, 3512, 3513, 3514, 3516, 3517,
	2625, 5210, 961, 960, 2308, 1225, 1505, 2789, 2640, 2893,
	1856, 2831, 1818, 754, 1937, 1938, 1939, 1940, 1942, 1943,
	2094, 3161, 1806, 1165, 805, 2523, 2381, 3131, 863, 5214,
	2877, 2877, 2891, 2973, 2767, 3089, 2613, 2911, 2913, 2304,
	749, 1790, 3128, 2615, 2919, 2477, 2731, 2628, 2621, 3653,
	2602, 2586, 2162, 2162, 2697, 3160, 1145, 2390, 2724, 1145,
	1145, 2614, 2644, 4168, 2782, 2645, 2646, 3158, 1441, 1913,
	2097, 1459, 2309, 3156, 2011, 2723, 4786, 2653, 2654, 2623,
	4653, 2393, 2721, 3431, 4182, 3103, 2092, 3377, 2969, 3938,
	807, 2711, 2944, 2334, 4909, 2598, 2391, 1463, 3937, 3061,
	3077, 4502, 2305, 2347, 2095, 2532, 3363, 1166, 3042, 1714,
	2382, 1429, 1429, 1795, 3429, 3033, 2986, 1166, 2795, 4882,
	2349, 1166, 2709, 4555, 2508, 956, 4199, 955, 2936, 1632,
	2727, 3044, 3129, 3407, 4196, 1314, 1632, 4129, 1112, 4116,
	807, 3034, 1004, 2573, 2109, 2780, 861, 1112, 2093, 2626,
	1112, 2571, 1505, 1113, 2344, 3805, 3994, 1464, 2626, 2346,
	2120, 3012, 1112, 2990, 1712, 3009, 3797, 3748, 2601, 3045,
	3659, 3997, 3163, 2935, 2943, 5103, 2948, 3124, 2833, 2954,
	2955, 3028, 4241, 2834, 2958, 4166, 2837, 3573, 2838, 2839,
	3043, 2886, 2873, 2320, 3008, 2902, 3105, 2917, 2341, 2915,
	3031, 2168, 191, 2925, 2926, 1457, 2422, 2421, 3053, 2937,
	1688, 1166, 2941, 2942, 1162, 1853, 2061, 5186, 2324, 1460,
	2107, 2608, 1459, 2533, 3400, 3401, 1872, 2624, 3376, 1461,
	2369, 2695, 5195, 2348, 2698, 2376, 2624, 5213, 3995, 5194,
	3036, 2981, 5242, 4242, 4993, 5161, 4358, 4357, 3735, 1505,
	3932, 3806, 1346, 3803, 5220, 3874, 3370, 1343, 3727, 3875,
	3220, 3373, 3426, 2332, 2315, 1627, 2312, 1691, 1346, 3020,
	2705, 3068, 2366, 1343, 3005, 3024, 2321, 2096, 3030, 3139,
	2998, 5005, 1429, 2209, 5101, 2694, 3216, 4240, 3174, 3035,
	4710, 3747, 3019, 3427, 2706, 1174, 3022, 3432, 3023, 2053,
	2054, 2707, 1385, 1225, 1225, 2712, 1225, 3037, 1464, 3736,
	1109, 3014, 1418, 4915, 3744, 3672, 4500, 3029, 3065, 3728,
	2345, 3221, 2395, 4937, 2333, 2316, 5073, 3142, 5074, 3765,
	3122, 894, 996, 1429, 4503, 1714, 4787, 3259, 2310, 1793,
	2795, 1094, 1342, 3311, 908, 3874, 3154, 3109, 3052, 4785,
	3310, 3251, 2370, 3734, 3040, 4783, 3655, 804, 1342, 997,
	3700, 1418, 2349, 3726, 1627, 3219, 1158, 1869, 2331, 2314,
	1460, 915, 3375, 1819, 1873, 862, 4908, 1627, 3294, 1627,
	1461, 1642, 4438, 2394, 1369, 1627, 3303, 3267, 4584, 4439,
	2325, 3308, 3094, 1418, 1418, 2048, 3572, 1627, 3081, 3084,
	3071, 3622, 3133, 750, 3175, 4782, 3108, 2795, 3115, 3116,
	3118, 3119, 3120, 2347, 1462, 5160, 1356, 2090, 3422, 3123,
	3699, 1429, 2714, 1429, 3182, 5139, 2366, 864, 4951, 3217,
	3218, 860, 1358, 3790, 4784, 5140, 4354, 4650, 2567, 2162,
	2302, 3706, 3314, 4991, 1791, 1225, 3132, 3137, 4666, 981,
	3347, 4437, 3348, 2600, 5184, 3144, 5039, 2326, 2327, 1353,
	3228, 1095, 1870, 3263, 3110, 3230, 3151, 2291, 4536, 3323,
	3324, 3062, 2292, 2528, 1874, 5238, 986, 3168, 3169, 3167,
	3330, 3332, 3334, 4943, 2322, 4501, 1876, 3082, 4992, 751,
	2561, 2696, 3257, 3428, 3804, 900, 903, 4944, 3708, 1598,
	3305, 2708, 3226, 3430, 2094, 1359, 1805, 1807, 2531, 1344,
	2522, 2710, 3343, 1225, 1648, 3349, 3231, 5218, 773, 1225,
	1225, 3315, 4167, 2777, 2390, 1344, 1998, 3321, 900, 903,
	3298, 4945, 2323, 1360, 3673, 191, 1612, 3296, 3245, 3472,
	2972, 752, 2940, 753, 1005, 3054, 3055, 2722, 5243, 3056,
	3057, 3318, 1440, 1912, 2097, 2366, 3027, 2953, 3325, 1165,
	3326, 4010, 5227, 2391, 4596, 1462, 4601, 3707, 4344, 3289,
	2092, 4697, 1824, 4560, 4117, 1225, 1225, 1357, 3379, 3299,
	3381, 1225, 4649, 4958, 2373, 1375, 4602, 1373, 2095, 2293,
	4359, 998, 999, 3953, 1225, 1225, 3138, 3391, 1748, 4947,
	1225, 1225, 3297, 909, 910, 3340, 1225, 2297, 5045, 3278,
	2311, 4975, 2362, 1100, 1099, 2094, 4830, 4559, 4558, 4585,
	1156, 3351, 1094, 3353, 4946, 3355, 4301, 3357, 3358, 5159,
	3862, 3226, 2093, 3636, 5219, 2980, 3350, 2445, 2087, 2361,
	1372, 1365, 4948, 741, 4777, 2371, 4277, 1158, 1922, 1923,
	3367, 1225, 1225, 1225, 2578, 4403, 4049, 1225, 4489, 2328,
	4355, 1096, 4254, 2210, 3423, 2097, 2643, 1225, 4254, 2313,
	2252, 5221, 4252, 3610, 2357, 1922, 5248, 4744, 4252, 4694,
	4839, 2938, 3399, 3455, 1225, 2249, 2294, 2299, 1917, 2372,
	3679, 4889, 1632, 5138, 4482, 1157, 4302, 4221, 4475, 2095,
	4202, 3388, 1612, 3390, 4153, 3389, 4151, 2309, 982, 983,
	3863, 3854, 3675, 1418, 3268, 3262, 4473, 2640, 3249, 3394,
	2471, 2465, 2459, 2451, 3409, 4477, 2430, 2429, 4651, 2633,
	4959, 4824, 3178, 3993, 1682, 3450, 3451, 2358, 4137, 3111,
	3454, 2329, 1095, 3446, 1377, 4064, 5011, 813, 3954, 3066,
	4483, 3581, 1922, 4978, 2580, 912, 911, 1921, 2931, 4256,
	2245, 2096, 2247, 4304, 4619, 4256, 4360, 3246, 1612, 1388,
	1612, 4803, 2295, 1632, 1632, 4801, 1225, 1225, 1225, 1225,
	3421, 2513, 4721, 3691, 1921, 1225, 1225, 1225, 3687, 4077,
	1225, 4255, 1097, 3686, 4476, 2934, 3083, 4255, 1000, 1001,
	3414, 3392, 1225, 1348, 1505, 1094, 1354, 3570, 1225, 2248,
	1225, 3565, 3566, 4599, 3569, 1847, 1846, 2505, 2494, 1348,
	1098, 3712, 1166, 913, 914, 2302, 2427, 1841, 4111, 2979,
	1158, 1923, 2978, 1723, 2977, 2976, 2933, 1505, 2975, 1737,
	4260, 2932, 3254, 1735, 1163, 4902, 4575, 1724, 1003, 1348,
	3582, 4733, 1505, 3087, 3461, 4273, 4361, 2275, 1923, 4050,
	1998, 1921, 1355, 4159, 1429, 2469, 3342, 3813, 3603, 4404,
	4051, 4148, 2096, 3548, 2168, 2634, 1101, 2386, 1505, 3590,
	5181, 3352, 3710, 3354, 4708, 3356, 4805, 2300, 1429, 4250,
	852, 3567, 4706, 3617, 1100, 1099, 1429, 3224, 5247, 3922,
	3638, 5025, 3580, 3587, 3635, 3620, 4949, 3319, 3229, 3227,
	2498, 2399, 4950, 1799, 4729, 984, 985, 3632, 1225, 5017,
	3112, 3113, 3766, 4728, 4716, 1095, 3711, 853, 4903, 4460,
	1225, 4459, 5008, 4410, 1825, 4066, 3382, 4960, 4823, 3384,
	3586, 2301, 1096, 4698, 3604, 4138, 2802, 4442, 1429, 1894,
	3577, 5047, 3674, 5185, 2168, 1632, 1632, 1632, 1632, 5183,
	3663, 3664, 4734, 4804, 1896, 4478, 3599, 1893, 2594, 5122,
	4933, 1225, 4479, 4253, 3575, 4717, 4923, 2301, 4704, 4253,
	3651, 4672, 3689, 4484, 1891, 3693, 1865, 1429, 4789, 1863,
	1835, 3724, 3657, 3612, 3613, 3614, 3615, 3596, 3543, 3544,
	3545, 1457, 4453, 3608, 3644, 1833, 1429, 4402, 1429, 3589,
	3738, 3559, 3740, 1831, 5018, 1829, 1827, 3576, 2296, 3574,
	4259, 3611, 3588, 4904, 3540, 4481, 1225, 1225, 3591, 3592,
	2365, 1821, 3753, 3594, 1505, 3595, 3969, 2365, 1815, 1813,
	1733, 4149, 2570, 3923, 4485, 1429, 812, 3920, 2537, 3776,
	3676, 3583, 3584, 3585, 3755, 3671, 3633, 3503, 3768, 3433,
	3770, 3250, 1429, 3774, 2274, 3234, 3788, 3780, 3237, 3690,
	3239, 3152, 3695, 1097, 3146, 3697, 3640, 1100, 1099, 3642,
	3643, 3101, 1346, 3721, 3646, 2384, 3647, 1343, 3648, 3745,
	3007, 1736, 3703, 2603, 1627, 1734, 3723, 3645, 1346, 1155,
	1002, 1098, 3641, 1343, 2504, 2489, 2127, 1429, 1627, 2123,
	1627, 1897, 2162, 3725, 1505, 3737, 3652, 3285, 1774, 2408,
	3285, 894, 1627, 4458, 3541, 1096, 3739, 3949, 1346, 3629,
	3630, 3781, 3631, 1343, 2165, 1627, 3807, 3623, 3660, 3948,
	3940, 1917, 3365, 3767, 3364, 3328, 3763, 1429, 3823, 2622,
	1852, 3855, 2540, 4442, 3775, 2596, 2450, 1101, 1895, 2428,
	2198, 1892, 2595, 3709, 1348, 2196, 2031, 1788, 3870, 1706,
	3868, 3787, 1342, 3808, 3717, 3811, 2801, 5094, 1890, 1310,
	1864, 4480, 3730, 1862, 1834, 3846, 1627, 3308, 1342, 3733,
	3853, 3256, 2162, 4537, 1612, 1612, 3308, 4208, 1627, 1832,
	1627, 3731, 4541, 3359, 4207, 3732, 1110, 1830, 4520, 1828,
	1826, 5007, 1627, 4617, 1627, 3843, 1627, 3682, 1342, 3764,
	3758, 4546, 4533, 4490, 4491, 1820, 4471, 4470, 4300, 2569,
	3861, 3777, 1814, 1812, 1732, 2536, 2156, 3879, 4291, 4224,
	3785, 3795, 4204, 4174, 3133, 4172, 4150, 3789, 3857, 3852,
	3839, 3281, 3273, 3266, 1505, 3258, 1097, 1505, 3242, 3241,
	3222, 3026, 3021, 2426, 2424, 3890, 2401, 2367, 2330, 2317,
	2303, 2231, 2228, 1612, 2134, 2225, 3941, 3864, 3796, 2222,
	2217, 2215, 2211, 2202, 1098, 3918, 2947, 5157, 4612, 3990,
	3109, 1225, 3927, 3867, 5152, 2456, 3815, 1225, 1225, 5078,
	1323, 1225, 1225, 1225, 3849, 1225, 2407, 3871, 2140, 3850,
	4601, 3800, 3844, 3851, 1225, 2168, 3778, 5175, 900, 903,
	3412, 2376, 1926, 1225, 4901, 2253, 3385, 1324, 1225, 3383,
	4602, 2241, 2242, 3215, 1505, 3876, 5059, 4969, 2606, 1344,
	1101, 4633, 3919, 1225, 3885, 4553, 3878, 4457, 3888, 3889,
	3309, 1505, 3658, 191, 191, 1344, 3947, 2270, 3946, 1687,
	4841, 2168, 2168, 1225, 1225, 3916, 1225, 1225, 1225, 3088,
	4834, 3921, 4312, 2312, 1115, 1117, 1119, 1888, 1889, 2527,
	1409, 2468, 1408, 2564, 1225, 1344, 2604, 2559, 1225, 1166,
	2168, 2168, 1225, 1225, 1225, 1225, 1225, 1225, 1225, 1225,
	1225, 1225, 1225, 1225, 1225, 1225, 1225, 1225, 1225, 1225,
	1225, 1225, 2534, 1225, 3955, 289, 4022, 3972, 4023, 3413,
	5058, 1225, 1225, 2168, 3982, 3983, 4511, 3934, 1225, 3935,
	3062, 3936, 4548, 2605, 3179, 1157, 1927, 3062, 3779, 1225,
	3952, 1325, 1418, 1346, 1933, 1934, 3060, 1811, 1343, 1479,
	1348, 1348, 841, 3085, 1225, 1933, 1934, 3092, 2240, 4860,
	4731, 4411, 4389, 3704, 3093, 3114, 1930, 1436, 1376, 3749,
	1409, 1409, 5169, 1476, 4220, 280, 1936, 5130, 3240, 4288,
	2452, 1632, 1632, 1447, 3159, 3979, 1505, 3977, 4730, 3157,
	3166, 3093, 3148, 4096, 3150, 3097, 3095, 1868, 4219, 1429,
	1429, 5016, 3989, 4998, 5215, 3996, 3998, 3999, 3149, 3096,
	4005, 4061, 1935, 4012, 1429, 1429, 4083, 894, 1429, 4968,
	4962, 844, 844, 1935, 738, 858, 4020, 4900, 4114, 4115,
	4021, 4825, 4796, 1342, 4709, 4298, 4290, 1225, 4276, 4093,
	3856, 3288, 4027, 4127, 4128, 2918, 1612, 4134, 2237, 3794,
	2149, 4053, 3136, 2162, 1640, 1639, 1633, 1159, 4025, 3621,
	2386, 5246, 3509, 3510, 1225, 4062, 1933, 1934, 2281, 3048,
	4964, 1632, 1632, 1632, 1632, 1632, 1632, 1632, 1632, 1632,
	1632, 1632, 1632, 1632, 1632, 1632, 1632, 1632, 1632, 1632,
	1632, 4054, 1632, 1651, 4000, 4381, 5049, 1225, 1225, 2162,
	2162, 5050, 5049, 2797, 191, 4073, 4074, 5050, 4070, 4071,
	4068, 2280, 3047, 1798, 1650, 3869, 4119, 4019, 1651, 1797,
	1187, 3368, 5188, 2832, 2653, 4013, 2281, 2280, 2162, 2162,
	1867, 4085, 4297, 1866, 4826, 1225, 1225, 4770, 4550, 4545,
	4544, 4154, 4440, 1225, 4436, 4435, 4377, 4351, 4118, 4001,
	3772, 3769, 3371, 2653, 4028, 2025, 2024, 3387, 2610, 5231,
	5196, 2162, 5064, 5002, 1627, 1627, 5001, 1627, 5000, 4086,
	4932, 1627, 4931, 4878, 1627, 4876, 4799, 4761, 4130, 1429,
	4187, 4701, 4696, 4238, 4695, 4693, 4057, 4692, 4690, 4592,
	4572, 4509, 4448, 4434, 4433, 4432, 2165, 2165, 4135, 4325,
	1344, 4318, 4136, 4191, 2168, 4263, 4192, 4194, 3944, 4170,
	4162, 3860, 4210, 3859, 900, 903, 3696, 3950, 3639, 3372,
	3362, 3339, 3338, 3337, 3336, 4222, 4216, 3272, 3244, 1346,
	1346, 3243, 4232, 3086, 1343, 1343, 4179, 3017, 3011, 3713,
	3714, 4184, 3715, 3000, 2999, 2988, 2726, 2597, 2565, 1627,
	4173, 2558, 4175, 2557, 4123, 1225, 2556, 4305, 2555, 2554,
	2466, 2440, 3109, 1348, 1225, 4285, 4314, 4269, 4243, 4244,
	2436, 2435, 2434, 1627, 2433, 2432, 2205, 4246, 1627, 1627,
	1627, 2204, 3294, 2203, 2201, 2139, 4258, 2138, 4237, 4320,
	1887, 1886, 3759, 3760, 1822, 3761, 3308, 1701, 2156, 2156,
	1700, 1627, 4283, 1627, 1699, 4239, 3175, 1698, 1697, 1696,
	4229, 1695, 1505, 4306, 1690, 1686, 1684, 1683, 1617, 1342,
	1342, 4309, 1616, 4236, 4262, 1615, 1496, 4223, 1495, 4271,
	1494, 1493, 4247, 1492, 1439, 1395, 4275, 1394, 4326, 1393,
	1505, 1392, 1391, 1225, 1225, 4308, 1233, 4284, 1390, 1225,
	1225, 2168, 4289, 1389, 1225, 1225, 4322, 1225, 4248, 1387,
	1382, 4257, 1225, 4294, 1381, 1380, 4340, 1379, 1378, 970,
	8, 1305, 2243, 1225, 1121, 1107, 4906, 4488, 4487, 4486,
	4292, 2593, 98, 4338, 1692, 932, 92, 2374, 4341, 1225,
	4169, 4346, 4347, 4348, 287, 287, 287, 4315, 744, 745,
	4307, 760, 744, 760, 771, 4323, 4316, 811, 1071, 4310,
	4362, 831, 5046, 4936, 1675, 4324, 838, 838, 838, 838,
	940, 5027, 4286, 3698, 3184, 2539, 287, 1823, 2541, 3598,
	2960, 4990, 4385, 3471, 4867, 4665, 2800, 1418, 2029, 3552,
	4375, 94, 2162, 1209, 1255, 4342, 4583, 977, 4582, 4472,
	1348, 4156, 4363, 4371, 287, 3826, 4579, 4578, 1348, 2153,
	2155, 1173, 1505, 1505, 1508, 1505, 4356, 3682, 5072, 4339,
	2254, 5237, 1348, 1215, 2268, 2263, 3001, 2876, 1232, 1229,
	2157, 4416, 2159, 1627, 1627, 1231, 1344, 1344, 1230, 2158,
	2049, 3603, 1228, 2152, 4296, 3292, 3886, 1742, 1740, 1073,
	2258, 2720, 2784, 1505, 3460, 2022, 1189, 1211, 2781, 1370,
	1200, 3578, 3557, 3873, 4350, 4092, 2632, 950, 3506, 2787,
	1361, 2456, 2899, 2892, 2888, 3649, 3282, 1903, 1225, 4679,
	2000, 3293, 1899, 1473, 1193, 2718, 2013, 3438, 4401, 1348,
	2642, 1348, 1346, 3880, 4461, 4462, 3601, 1343, 2994, 4443,
	4444, 5052, 4009, 3369, 2444, 1322, 1321, 1368, 4495, 1320,
	4495, 5033, 5030, 2364, 4586, 3821, 1429, 4499, 3822, 2246,
	4519, 3041, 2730, 4512, 4419, 4421, 1505, 4408, 1429, 3840,
	1205, 1429, 4528, 2165, 4415, 4531, 4515, 4516, 4446, 2162,
	4464, 1611, 744, 744, 4424, 1225, 2585, 4418, 1505, 3942,
	287, 4452, 4498, 4425, 4455, 4412, 4428, 3563, 4467, 4413,
	4414, 4274, 1703, 4417, 4738, 1217, 191, 1985, 3211, 2291,
	3210, 4895, 1458, 1456, 2292, 4549, 1455, 4551, 4441, 1454,
	4469, 5205, 1342, 4454, 3177, 2377, 4165, 4164, 4163, 250,
	1627, 1627, 3406, 4463, 1924, 1916, 247, 249, 248, 3702,
	4097, 3607, 5128, 4189, 3812, 25, 1503, 845, 846, 847,
	3051, 4513, 2273, 4535, 1475, 4140, 24, 4576, 23, 1429,
	22, 21, 121, 4603, 4518, 44, 20, 163, 161, 4514,
	138, 1505, 158, 157, 4552, 2156, 1627, 4527, 130, 4573,
	4530, 156, 155, 154, 4620, 153, 152, 160, 151, 150,
	4570, 4532, 145, 149, 4529, 148, 4571, 147, 146, 144,
	4543, 142, 1627, 1627, 1627, 1627, 1627, 1627, 1627, 2637,
	143, 4609, 4563, 137, 141, 140, 139, 136, 135, 1346,
	134, 4569, 133, 132, 1343, 1505, 131, 1346, 129, 162,
	128, 2293, 1343, 4604, 1187, 1187, 1187, 1225, 1225, 1225,
	4621, 1346, 127, 205, 4562, 4561, 1343, 126, 125, 2297,
	124, 123, 122, 4581, 4577, 1505, 824, 825, 63, 4593,
	1225, 4588, 62, 1225, 1225, 4595, 4589, 118, 4638, 4624,
	119, 19, 4642, 1225, 42, 1589, 2168, 14, 67, 4629,
	68, 1225, 1225, 4615, 18, 13, 37, 4606, 97, 1344,
	1418, 4622, 110, 109, 108, 38, 4644, 105, 1505, 36,
	1627, 17, 16, 15, 103, 4657, 102, 4635, 1346, 1342,
	1346, 101, 4636, 1343, 35, 1343, 33, 1342, 11, 9,
	39, 2111, 12, 5, 1429, 196, 4652, 195, 2294, 2299,
	198, 1342, 194, 197, 96, 193, 192, 95, 31, 10,
	188, 4815, 4281, 4662, 87, 190, 1505, 189, 187, 186,
	185, 88, 85, 4703, 1225, 2894, 184, 91, 183, 86,
	2456, 90, 89, 29, 6, 66, 7, 1225, 4647, 3924,
	113, 114, 40, 83, 82, 81, 1225, 80, 4674, 28,
	4645, 2168, 4646, 4668, 65, 4715, 1418, 4685, 4686, 27,
	180, 1225, 229, 228, 1225, 227, 226, 225, 1342, 224,
	1342, 223, 222, 217, 221, 219, 218, 220, 216, 1225,
	241, 240, 1225, 239, 2295, 4688, 238, 4689, 232, 1505,
	231, 237, 236, 4741, 235, 234, 233, 1429, 230, 244,
	4764, 4779, 76, 215, 214, 213, 211, 1627, 1627, 1627,
	4711, 207, 4714, 210, 212, 209, 208, 2301, 4712, 206,
	4713, 4720, 1632, 243, 242, 77, 4760, 178, 1348, 179,
	75, 177, 176, 2289, 175, 174, 173, 2302, 172, 171,
	74, 182, 181, 4788, 4775, 26, 1344, 4495, 2, 1,
	0, 0, 4763, 0, 1344, 3823, 4809, 4814, 1505, 4798,
	4293, 1627, 0, 4802, 0, 0, 0, 4758, 1344, 4835,
	0, 0, 4762, 4793, 4794, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2162, 4772, 0, 0, 0, 4806,
	0, 0, 4840, 4822, 2287, 0, 1225, 1225, 0, 2300,
	0, 4791, 4790, 1632, 0, 4795, 4778, 0, 0, 4800,
	0, 0, 0, 1225, 2168, 0, 2291, 0, 4818, 0,
	0, 2292, 0, 4780, 4813, 4836, 0, 4343, 0, 4752,
	4753, 4838, 0, 0, 0, 1344, 0, 1344, 2288, 0,
	1429, 0, 0, 1429, 0, 1429, 1429, 0, 0, 0,
	4837, 0, 0, 1363, 0, 4844, 4843, 4846, 4842, 0,
	4624, 0, 0, 1225, 4771, 1225, 4773, 1225, 4774, 4877,
	4832, 0, 4879, 4848, 4880, 4881, 0, 1348, 0, 4856,
	4857, 0, 0, 0, 4890, 0, 0, 1384, 0, 2162,
	1225, 0, 1348, 4855, 0, 4888, 4495, 2126, 0, 287,
	4859, 287, 287, 0, 1413, 287, 1423, 0, 0, 0,
	0, 4495, 0, 0, 4750, 0, 4865, 1437, 0, 0,
	0, 0, 0, 0, 0, 831, 0, 4883, 831, 0,
	2296, 4887, 4886, 0, 0, 0, 0, 0, 2293, 0,
	0, 0, 4917, 0, 0, 0, 0, 0, 1348, 1348,
	4911, 838, 4910, 4918, 0, 0, 2297, 0, 0, 4939,
	0, 0, 1225, 0, 0, 0, 4941, 4495, 4495, 1348,
	0, 0, 1348, 0, 0, 287, 1627, 287, 287, 1413,
	0, 287, 287, 3435, 3436, 4926, 1627, 0, 4495, 2414,
	1423, 4495, 1632, 4928, 0, 0, 0, 0, 0, 0,
	0, 1225, 1225, 0, 287, 0, 1653, 1346, 0, 4954,
	4955, 1225, 1343, 0, 4934, 0, 2165, 4986, 4952, 4987,
	0, 2272, 1673, 0, 0, 4963, 1589, 0, 4965, 1680,
	4972, 4966, 0, 4974, 4971, 2294, 2299, 4818, 0, 0,
	4979, 4980, 0, 0, 1632, 0, 4984, 4985, 1705, 0,
	4983, 1423, 2162, 0, 4995, 287, 287, 0, 1413, 0,
	0, 0, 1225, 1225, 0, 0, 1225, 4999, 0, 1632,
	1627, 1429, 5003, 0, 1429, 0, 5024, 0, 0, 831,
	0, 287, 287, 1612, 4994, 5006, 0, 0, 4982, 0,
	0, 0, 4927, 1768, 5032, 5035, 2165, 1342, 0, 0,
	5043, 5054, 0, 5044, 1776, 5055, 5048, 0, 5023, 977,
	5051, 5022, 5014, 5015, 5004, 0, 0, 4539, 2156, 0,
	5041, 2295, 0, 0, 0, 5037, 0, 5077, 5075, 0,
	4765, 0, 1225, 1225, 1225, 5042, 0, 0, 0, 0,
	0, 0, 1187, 0, 0, 5036, 0, 0, 0, 5040,
	1589, 0, 5060, 0, 0, 0, 1346, 0, 0, 0,
	0, 1343, 5068, 5076, 5065, 3533, 3534, 3535, 3536, 1225,
	0, 1346, 0, 5109, 2302, 0, 1343, 0, 0, 0,
	4591, 5114, 5089, 5090, 5092, 5091, 0, 5110, 3396, 0,
	287, 0, 0, 0, 4605, 0, 0, 0, 2156, 0,
	0, 2419, 5135, 2301, 0, 1418, 5111, 0, 5136, 0,
	5137, 0, 0, 5112, 287, 0, 5145, 4628, 0, 5143,
	0, 0, 5149, 0, 0, 0, 1225, 1346, 1346, 5127,
	0, 3661, 1343, 1343, 1429, 0, 2300, 0, 5125, 0,
	5158, 5142, 5141, 0, 0, 4798, 1342, 0, 1346, 0,
	0, 1346, 5150, 1343, 5151, 5176, 1343, 0, 5168, 0,
	0, 1342, 0, 5166, 1344, 5164, 5165, 5172, 0, 2894,
	2894, 0, 5170, 5167, 0, 3662, 0, 5179, 0, 0,
	5180, 0, 0, 5192, 5178, 1348, 0, 1348, 5191, 0,
	5199, 5032, 5182, 0, 5035, 5054, 5189, 0, 5201, 5187,
	5193, 5190, 5155, 5197, 4495, 0, 4495, 0, 0, 0,
	0, 0, 0, 5198, 0, 5206, 5207, 1342, 1342, 0,
	0, 0, 0, 0, 0, 0, 1429, 0, 0, 0,
	1589, 0, 0, 0, 5222, 5223, 0, 0, 1342, 5230,
	0, 1342, 0, 0, 0, 5229, 5200, 0, 5202, 0,
	0, 0, 5233, 0, 5228, 5226, 1225, 1225, 5124, 5241,
	0, 5126, 4707, 5239, 5235, 1225, 1225, 2296, 5232, 0,
	5244, 3294, 0, 0, 5255, 0, 0, 5249, 0, 0,
	5257, 5260, 0, 5261, 4100, 5253, 5259, 5265, 5262, 5264,
	5263, 0, 5256, 0, 3509, 3510, 5258, 3527, 3528, 3529,
	0, 3294, 5269, 1429, 5270, 5274, 5271, 5273, 0, 5277,
	5275, 0, 5268, 1344, 5272, 0, 0, 4368, 0, 744,
	0, 0, 0, 1225, 5280, 0, 0, 5284, 1344, 5286,
	5277, 5288, 0, 0, 0, 5281, 0, 0, 0, 4101,
	287, 0, 287, 5283, 0, 0, 287, 0, 5250, 5251,
	0, 2894, 2894, 2894, 2894, 0, 0, 2165, 0, 1653,
	1413, 2131, 287, 0, 287, 2137, 4102, 0, 4099, 0,
	0, 0, 287, 3524, 760, 0, 0, 4110, 0, 287,
	0, 0, 2656, 4108, 1344, 1344, 0, 0, 0, 3912,
	0, 0, 0, 0, 0, 2206, 0, 0, 0, 0,
	0, 0, 3910, 2165, 2165, 1344, 5285, 287, 1344, 0,
	0, 0, 3903, 0, 287, 3912, 0, 0, 4109, 0,
	0, 0, 0, 4105, 0, 0, 0, 0, 3910, 0,
	0, 0, 2165, 2165, 0, 0, 0, 0, 3903, 0,
	0, 0, 0, 5252, 0, 0, 0, 831, 4106, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2156,
	0, 0, 0, 0, 1346, 2165, 1346, 0, 0, 1343,
	3515, 1343, 0, 965, 0, 2798, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 838, 0, 838, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 838, 838, 3914,
	0, 78, 0, 968, 967, 2156, 2156, 0, 0, 0,
	0, 1589, 0, 0, 0, 0, 3905, 0, 0, 79,
	0, 0, 0, 0, 0, 3914, 0, 0, 0, 0,
	0, 3904, 0, 0, 2156, 2156, 84, 0, 0, 0,
	3531, 0, 3905, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1342, 0, 1342, 3904, 0, 0,
	0, 0, 1933, 1934, 0, 0, 0, 2156, 0, 0,
	0, 4924, 2970, 0, 0, 0, 0, 93, 0, 0,
	0, 4103, 3525, 0, 0, 0, 1964, 0, 3913, 4104,
	0, 3965, 3966, 0, 1936, 0, 0, 0, 0, 0,
	4938, 0, 0, 0, 1589, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3913, 0, 0, 0, 971, 0,
	0, 1989, 0, 0, 0, 0, 0, 0, 0, 4970,
	1935, 51, 0, 115, 0, 0, 0, 0, 0, 99,
	112, 1955, 0, 4107, 0, 0, 0, 0, 287, 0,
	1952, 0, 287, 3509, 3510, 3901, 3527, 3528, 3529, 0,
	0, 0, 0, 1986, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1589, 4367, 0, 0, 0,
	0, 4029, 4030, 4031, 4032, 4033, 4034, 4035, 4036, 4037,
	4038, 4039, 4040, 4041, 4042, 4043, 4044, 4045, 4046, 4047,
	4048, 1589, 4052, 100, 0, 0, 4366, 0, 0, 287,
	0, 0, 0, 287, 0, 0, 0, 0, 3050, 287,
	0, 1344, 0, 1344, 0, 287, 0, 0, 1958, 1959,
	1960, 1961, 3524, 0, 0, 0, 0, 0, 1941, 0,
	0, 287, 0, 287, 0, 3526, 2165, 744, 0, 287,
	0, 0, 0, 0, 3911, 3906, 3907, 3908, 3909, 0,
	0, 831, 0, 0, 0, 977, 5061, 0, 0, 0,
	1620, 0, 5063, 0, 0, 0, 0, 0, 0, 0,
	3911, 3906, 3907, 3908, 3909, 0, 0, 0, 0, 0,
	0, 1963, 1965, 0, 3915, 287, 0, 1413, 287, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1677, 0, 831, 0, 0, 0, 0, 1950, 1951, 287,
	3915, 0, 0, 0, 0, 0, 0, 2538, 0, 3515,
	0, 0, 287, 287, 0, 287, 0, 287, 0, 287,
	0, 287, 0, 0, 0, 0, 0, 1589, 2156, 0,
	1956, 0, 0, 0, 0, 0, 0, 104, 0, 0,
	0, 0, 0, 1756, 0, 0, 2575, 0, 0, 2576,
	0, 2577, 0, 0, 0, 0, 0, 2894, 2894, 1771,
	0, 0, 0, 0, 0, 0, 287, 287, 287, 287,
	0, 0, 0, 2165, 3521, 3522, 3523, 0, 0, 3531,
	0, 3520, 3518, 3519, 3511, 3512, 3513, 3514, 3516, 3517,
	0, 0, 0, 0, 0, 811, 199, 107, 0, 831,
	111, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1986, 0, 0, 0, 0, 0, 0, 0, 1800,
	0, 3525, 0, 0, 1589, 0, 0, 251, 0, 0,
	0, 0, 0, 0, 0, 972, 0, 0, 0, 0,
	159, 0, 0, 0, 0, 0, 0, 2894, 2894, 2894,
	2894, 2894, 2894, 2894, 2894, 2894, 2894, 2894, 2894, 2894,
	2894, 2894, 2894, 2894, 2894, 2894, 2894, 0, 2894, 0,
	1962, 0, 0, 0, 0, 2156, 0, 0, 253, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2732, 1957, 0, 0, 0, 0, 0, 0,
	0, 78, 1986, 0, 0, 164, 0, 0, 1933, 1934,
	0, 1966, 1967, 1968, 1977, 1978, 1979, 0, 0, 79,
	0, 204, 0, 0, 0, 0, 0, 0, 0, 252,
	0, 1970, 1964, 0, 0, 0, 84, 0, 0, 0,
	1936, 0, 0, 0, 245, 0, 0, 0, 0, 0,
	1983, 0, 0, 246, 0, 1988, 0, 200, 0, 0,
	0, 0, 0, 0, 744, 0, 0, 1989, 0, 0,
	0, 0, 0, 0, 0, 0, 1935, 93, 0, 287,
	0, 0, 966, 0, 3526, 0, 0, 1955, 744, 0,
	0, 0, 0, 0, 0, 287, 1952, 744, 0, 0,
	0, 0, 0, 3509, 3510, 0, 3527, 3528, 3529, 287,
	0, 0, 0, 0, 0, 0, 0, 0, 971, 0,
	0, 0, 0, 0, 0, 0, 3974, 0, 0, 0,
	287, 1423, 0, 115, 0, 0, 0, 0, 0, 99,
	112, 0, 0, 0, 0, 0, 1953, 1949, 0, 1946,
	1944, 1945, 1937, 1938, 1939, 1940, 1942, 1943, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1958, 1959, 1960, 1961, 0, 287,
	1423, 0, 3524, 760, 1941, 760, 0, 0, 0, 3016,
	0, 0, 0, 0, 0, 287, 0, 0, 287, 0,
	0, 0, 287, 100, 287, 0, 0, 0, 0, 1413,
	0, 287, 287, 0, 1423, 1423, 3032, 0, 0, 0,
	0, 287, 0, 0, 0, 0, 0, 1974, 0, 0,
	1984, 0, 0, 3521, 3522, 3523, 0, 1963, 1965, 0,
	3520, 3518, 3519, 3511, 3512, 3513, 3514, 3516, 3517, 0,
	0, 0, 0, 0, 1980, 0, 1981, 0, 0, 0,
	0, 0, 0, 1950, 1951, 838, 838, 0, 0, 838,
	838, 0, 0, 0, 0, 0, 0, 0, 3075, 3515,
	78, 1972, 0, 0, 0, 0, 0, 0, 0, 0,
	287, 0, 0, 0, 0, 0, 1956, 0, 79, 0,
	0, 0, 0, 0, 287, 0, 0, 0, 2165, 0,
	0, 0, 0, 0, 0, 84, 0, 287, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 831, 0,
	0, 0, 0, 0, 0, 0, 0, 2991, 0, 0,
	0, 0, 0, 0, 0, 1982, 0, 0, 0, 3531,
	3564, 0, 0, 0, 287, 1180, 93, 104, 0, 0,
	0, 0, 0, 0, 78, 0, 287, 287, 3172, 1653,
	0, 0, 0, 0, 0, 0, 0, 1986, 0, 0,
	0, 0, 79, 3593, 0, 0, 0, 0, 0, 0,
	0, 3525, 0, 0, 0, 0, 0, 971, 3606, 84,
	0, 0, 0, 0, 287, 3232, 0, 0, 0, 0,
	2156, 0, 115, 2165, 0, 0, 199, 107, 99, 112,
	111, 0, 0, 0, 3627, 0, 0, 0, 0, 0,
	0, 0, 1653, 0, 0, 287, 1962, 287, 0, 0,
	93, 0, 0, 0, 287, 0, 0, 251, 0, 0,
	0, 0, 0, 0, 3277, 972, 0, 0, 0, 1957,
	159, 0, 0, 0, 3075, 0, 744, 0, 0, 0,
	0, 0, 1986, 0, 0, 3172, 977, 3075, 0, 1589,
	0, 971, 100, 0, 0, 0, 0, 1975, 0, 0,
	0, 0, 0, 0, 51, 0, 115, 0, 253, 287,
	0, 0, 99, 112, 0, 0, 0, 0, 0, 0,
	0, 0, 1589, 0, 0, 2156, 0, 0, 287, 1413,
	287, 1988, 0, 0, 0, 164, 0, 1589, 0, 0,
	1423, 287, 0, 0, 1413, 0, 1413, 0, 1413, 0,
	0, 204, 0, 0, 0, 0, 0, 0, 0, 252,
	0, 0, 4671, 1589, 3526, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 245, 0, 100, 0, 0, 0,
	0, 0, 0, 246, 0, 0, 2165, 200, 0, 0,
	0, 0, 0, 0, 0, 287, 287, 287, 287, 1413,
	0, 0, 1413, 1187, 287, 0, 0, 1973, 0, 287,
	0, 0, 203, 0, 0, 1187, 0, 0, 1947, 1948,
	1954, 1976, 1953, 1949, 0, 1946, 1944, 1945, 1937, 1938,
	1939, 1940, 1942, 1943, 0, 2486, 0, 0, 0, 0,
	287, 0, 0, 4723, 0, 0, 104, 0, 287, 0,
	0, 0, 0, 2500, 2502, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2506, 0, 0,
	3606, 0, 0, 0, 0, 0, 0, 0, 0, 2514,
	0, 2517, 2518, 2519, 0, 0, 0, 0, 2156, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 199, 107, 0, 0, 111,
	0, 0, 0, 3521, 3522, 3523, 0, 0, 0, 1589,
	3520, 3518, 3519, 3511, 3512, 3513, 3514, 3516, 3517, 0,
	104, 0, 0, 0, 0, 0, 251, 0, 0, 1933,
	1934, 0, 0, 0, 972, 0, 0, 0, 0, 159,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1964, 0, 0, 0, 0, 0, 0,
	0, 1936, 0, 0, 1653, 0, 0, 1933, 1934, 0,
	0, 0, 0, 0, 0, 0, 0, 253, 0, 199,
	107, 0, 0, 111, 0, 0, 0, 0, 1989, 1589,
	0, 1964, 0, 0, 0, 0, 0, 1935, 0, 1936,
	3943, 0, 0, 1503, 164, 0, 0, 0, 1933, 1934,
	251, 1966, 1967, 1968, 1977, 1978, 1979, 0, 972, 0,
	204, 0, 4864, 159, 0, 0, 1989, 0, 252, 0,
	0, 1970, 1964, 0, 0, 1935, 0, 0, 2894, 0,
	1936, 0, 0, 245, 0, 0, 0, 0, 0, 0,
	1983, 0, 246, 0, 0, 0, 200, 0, 0, 0,
	0, 253, 0, 0, 0, 0, 0, 1989, 0, 0,
	0, 0, 0, 0, 4894, 0, 1935, 0, 0, 0,
	3986, 203, 0, 0, 0, 0, 0, 1955, 164, 0,
	0, 0, 0, 0, 0, 0, 1952, 4002, 0, 4916,
	0, 0, 0, 0, 204, 1941, 0, 0, 0, 287,
	0, 0, 252, 0, 0, 0, 0, 0, 0, 2894,
	0, 0, 0, 0, 0, 287, 0, 245, 0, 1589,
	744, 0, 1589, 0, 0, 744, 246, 0, 744, 0,
	200, 744, 744, 1941, 0, 0, 0, 744, 0, 0,
	0, 0, 0, 0, 0, 287, 0, 0, 1963, 1965,
	0, 0, 0, 1933, 1934, 1753, 0, 287, 0, 0,
	0, 0, 0, 0, 1958, 1959, 1960, 1961, 0, 0,
	0, 0, 0, 0, 1941, 0, 0, 1964, 0, 0,
	0, 0, 0, 0, 0, 1936, 1963, 1965, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 287, 1589,
	0, 0, 287, 287, 0, 0, 0, 1956, 0, 0,
	0, 0, 1989, 0, 0, 0, 1589, 1974, 0, 0,
	1984, 1935, 4095, 0, 0, 0, 0, 1963, 1965, 0,
	0, 0, 0, 0, 0, 0, 3075, 3075, 287, 0,
	3669, 2131, 0, 0, 1980, 1956, 1981, 3075, 0, 2137,
	0, 0, 0, 1950, 1951, 0, 0, 0, 3075, 2137,
	0, 3075, 2137, 0, 0, 2137, 0, 0, 3669, 0,
	0, 1972, 0, 0, 0, 0, 0, 0, 0, 0,
	287, 287, 2131, 0, 287, 0, 1956, 0, 1986, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2894, 0,
	0, 2131, 0, 287, 0, 3743, 0, 3743, 0, 0,
	0, 0, 1413, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1986, 0, 0, 1941,
	0, 0, 0, 0, 3075, 1982, 3075, 0, 3773, 3075,
	2131, 0, 0, 3075, 0, 0, 0, 0, 0, 0,
	2894, 1589, 0, 0, 170, 0, 1971, 2131, 0, 0,
	831, 0, 0, 78, 0, 48, 47, 1986, 0, 0,
	1957, 0, 0, 0, 0, 2894, 0, 0, 0, 0,
	0, 79, 1963, 1965, 0, 165, 0, 0, 0, 0,
	0, 0, 1413, 0, 0, 0, 0, 0, 84, 287,
	0, 0, 0, 0, 0, 0, 0, 0, 1957, 69,
	0, 0, 0, 0, 0, 0, 50, 287, 167, 3817,
	0, 0, 0, 3819, 3075, 0, 1962, 287, 0, 0,
	287, 0, 1988, 3848, 0, 1423, 0, 49, 0, 93,
	0, 1956, 0, 0, 3176, 0, 0, 0, 0, 1957,
	287, 0, 0, 0, 0, 3277, 0, 0, 1413, 0,
	287, 0, 0, 3075, 0, 744, 52, 70, 0, 0,
	1988, 0, 3075, 0, 0, 53, 0, 1975, 0, 0,
	59, 0, 0, 0, 0, 168, 0, 0, 0, 0,
	0, 0, 0, 51, 0, 115, 0, 0, 0, 0,
	0, 99, 112, 0, 0, 0, 0, 0, 0, 71,
	0, 1988, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1986, 3933, 0, 0, 1946, 1944, 1945, 1937,
	1938, 1939, 1940, 1942, 1943, 0, 0, 0, 0, 0,
	0, 0, 0, 3939, 0, 54, 0, 1653, 0, 0,
	0, 1413, 287, 0, 287, 0, 0, 0, 0, 0,
	1413, 0, 0, 0, 3322, 100, 1945, 1937, 1938, 1939,
	1940, 1942, 1943, 0, 0, 0, 3329, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1973, 0, 0,
	0, 287, 0, 0, 0, 0, 0, 0, 1947, 1948,
	1954, 1976, 1953, 1949, 1957, 1946, 1944, 1945, 1937, 1938,
	1939, 1940, 1942, 1943, 0, 0, 0, 0, 0, 3484,
	0, 0, 0, 3485, 0, 0, 0, 0, 1933, 1934,
	0, 1966, 1967, 1968, 1977, 1978, 1979, 0, 0, 0,
	0, 0, 72, 0, 0, 0, 0, 0, 0, 4007,
	0, 1970, 1964, 0, 0, 0, 0, 0, 0, 0,
	1936, 0, 0, 0, 0, 0, 1988, 0, 0, 0,
	1983, 0, 0, 0, 0, 0, 0, 1589, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1989, 0, 0,
	0, 0, 0, 0, 0, 0, 1935, 0, 0, 2089,
	0, 4423, 0, 0, 0, 1589, 0, 1955, 0, 0,
	0, 0, 0, 0, 0, 0, 1952, 0, 1969, 104,
	0, 0, 0, 0, 0, 0, 1338, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 55, 0, 4450,
	0, 0, 0, 0, 0, 0, 287, 287, 0, 0,
	0, 0, 0, 0, 58, 0, 0, 0, 0, 61,
	0, 1944, 1945, 1937, 1938, 1939, 1940, 1942, 1943, 73,
	0, 744, 744, 0, 282, 282, 740, 60, 199, 107,
	0, 0, 111, 0, 0, 0, 56, 0, 0, 0,
	169, 0, 0, 0, 1958, 1959, 1960, 1961, 57, 0,
	0, 0, 0, 0, 1941, 0, 0, 0, 0, 251,
	0, 0, 0, 287, 0, 0, 0, 64, 0, 0,
	0, 0, 159, 0, 0, 0, 0, 1589, 1589, 0,
	1589, 0, 0, 0, 0, 0, 0, 0, 166, 0,
	0, 0, 0, 0, 0, 0, 0, 1974, 0, 0,
	1984, 0, 0, 0, 0, 0, 0, 1963, 1965, 0,
	253, 0, 0, 0, 0, 0, 0, 0, 1589, 0,
	0, 0, 0, 0, 1980, 0, 1981, 0, 0, 0,
	0, 0, 0, 1950, 1951, 0, 0, 164, 0, 0,
	0, 0, 0, 1187, 0, 831, 0, 0, 0, 0,
	0, 1972, 0, 204, 1172, 0, 0, 0, 0, 0,
	0, 252, 0, 0, 0, 0, 1956, 0, 0, 0,
	0, 4203, 0, 0, 4205, 0, 245, 0, 0, 0,
	3743, 0, 0, 0, 0, 246, 0, 0, 0, 200,
	0, 1589, 0, 0, 0, 287, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3172,
	0, 0, 0, 1589, 203, 1982, 0, 3, 0, 0,
	0, 1503, 0, 0, 2131, 0, 287, 0, 1969, 0,
	760, 760, 1423, 0, 0, 0, 1971, 0, 0, 0,
	0, 0, 0, 0, 0, 287, 0, 1986, 0, 0,
	0, 4663, 0, 0, 0, 0, 287, 3277, 0, 0,
	3277, 2137, 0, 0, 0, 0, 287, 0, 0, 0,
	0, 0, 0, 3848, 0, 0, 0, 0, 0, 287,
	0, 0, 0, 0, 287, 0, 0, 0, 0, 287,
	0, 0, 0, 0, 4663, 0, 1589, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1962, 0, 3075, 287,
	0, 0, 0, 0, 78, 0, 0, 0, 3172, 0,
	0, 977, 3075, 0, 0, 0, 0, 0, 0, 1957,
	0, 0, 79, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2656, 0, 0, 0, 0, 0, 0, 84,
	1589, 0, 0, 287, 0, 0, 0, 1975, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1589, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	93, 1988, 0, 0, 0, 0, 0, 0, 1969, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1969, 2656, 0, 0, 0, 0,
	0, 0, 0, 1589, 0, 0, 0, 0, 0, 0,
	0, 971, 0, 4386, 0, 0, 3509, 3510, 0, 3527,
	3528, 3529, 0, 0, 51, 0, 115, 0, 0, 0,
	0, 1969, 99, 112, 0, 0, 0, 1969, 0, 3973,
	0, 0, 0, 1969, 0, 0, 0, 1973, 0, 0,
	0, 1589, 0, 0, 0, 0, 0, 0, 1947, 1948,
	1954, 1976, 1953, 1949, 0, 1946, 1944, 1945, 1937, 1938,
	1939, 1940, 1942, 1943, 0, 0, 287, 0, 0, 2775,
	0, 0, 1653, 2776, 287, 0, 0, 1933, 1934, 0,
	0, 0, 0, 0, 0, 3524, 100, 0, 287, 1187,
	0, 0, 0, 3791, 0, 0, 0, 0, 0, 0,
	0, 1964, 0, 0, 0, 0, 0, 3509, 3510, 1936,
	3527, 3528, 3529, 1423, 1589, 0, 0, 0, 0, 0,
	0, 3816, 0, 0, 0, 1969, 1423, 0, 287, 1423,
	1969, 0, 0, 0, 3845, 0, 1989, 0, 0, 0,
	3075, 3075, 0, 3669, 1969, 1935, 3743, 3075, 0, 1969,
	0, 0, 0, 0, 0, 4497, 1955, 4497, 1653, 0,
	0, 0, 0, 0, 0, 1952, 0, 0, 0, 3075,
	0, 2137, 0, 0, 0, 3669, 0, 1653, 1653, 287,
	2131, 0, 3515, 1589, 0, 3893, 3524, 0, 0, 0,
	0, 0, 0, 2131, 0, 287, 2131, 3917, 287, 0,
	0, 3743, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3928, 0, 3929, 1969, 3930, 0, 0, 0, 0,
	1969, 3075, 0, 3075, 287, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	104, 0, 0, 1958, 1959, 1960, 1961, 0, 0, 0,
	0, 0, 3531, 1941, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3075, 3075, 0, 0, 0, 0, 3277,
	3277, 0, 0, 0, 0, 0, 3669, 0, 0, 0,
	0, 0, 0, 3515, 0, 0, 0, 0, 287, 0,
	0, 0, 0, 0, 3525, 0, 0, 0, 287, 199,
	107, 0, 0, 111, 0, 0, 1963, 1965, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1432, 0, 0, 0, 0, 0, 0, 0, 3532,
	251, 0, 1950, 1951, 0, 0, 0, 0, 972, 1399,
	0, 1399, 1399, 159, 0, 0, 0, 0, 1172, 1172,
	1172, 0, 0, 3531, 0, 0, 1969, 1969, 1969, 1969,
	1969, 1969, 1969, 1969, 0, 1956, 3509, 3510, 0, 3527,
	3528, 3529, 0, 0, 0, 1986, 1969, 0, 0, 0,
	0, 253, 0, 0, 0, 0, 0, 0, 0, 1969,
	0, 0, 0, 1602, 0, 3525, 0, 0, 0, 1618,
	0, 0, 0, 0, 0, 0, 0, 0, 164, 0,
	0, 0, 0, 0, 0, 1500, 0, 0, 0, 0,
	0, 1610, 0, 0, 204, 0, 0, 0, 0, 1655,
	0, 1661, 252, 1667, 0, 2898, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3524, 1986, 245, 0, 1969,
	0, 0, 0, 0, 0, 1969, 246, 3526, 0, 0,
	200, 0, 0, 0, 0, 0, 0, 3075, 2137, 0,
	2137, 0, 0, 3848, 0, 0, 1986, 0, 0, 0,
	0, 0, 287, 0, 0, 1751, 0, 0, 1187, 0,
	0, 0, 4739, 0, 4739, 3509, 3510, 0, 3527, 3528,
	3529, 0, 1759, 0, 1764, 1962, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1778, 831,
	1783, 1757, 1758, 0, 0, 0, 0, 0, 1957, 0,
	3743, 1653, 0, 1413, 0, 0, 0, 0, 0, 0,
	0, 0, 3515, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2131, 0, 287, 0, 0, 0, 3526, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3524, 0, 0, 0, 0, 0,
	0, 3848, 0, 0, 4497, 0, 0, 1653, 0, 1848,
	1988, 3075, 1854, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3521, 3522, 3523, 0,
	0, 4829, 3531, 3520, 3518, 3519, 3511, 3512, 3513, 3514,
	3516, 3517, 0, 1653, 0, 0, 0, 0, 0, 0,
	1878, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	287, 287, 0, 0, 3525, 0, 0, 0, 0, 0,
	0, 0, 0, 4230, 4231, 0, 0, 0, 0, 0,
	4233, 3515, 0, 4234, 4007, 0, 0, 0, 0, 0,
	0, 1953, 1949, 0, 1946, 1944, 1945, 1937, 1938, 1939,
	1940, 1942, 1943, 0, 0, 1990, 1991, 1992, 1993, 1994,
	1995, 1996, 1997, 0, 0, 3743, 4885, 3521, 3522, 3523,
	0, 0, 0, 3848, 3520, 3518, 3519, 3511, 3512, 3513,
	3514, 3516, 3517, 0, 0, 0, 0, 0, 2010, 0,
	0, 0, 0, 4497, 2023, 1986, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4497, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1210, 117, 0, 0,
	0, 0, 4321, 287, 0, 0, 0, 2500, 4327, 4328,
	0, 0, 0, 3525, 0, 0, 760, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4497, 4497, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3526, 0, 0,
	0, 0, 0, 0, 0, 4497, 0, 287, 4497, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2137, 0,
	2083, 2083, 2083, 0, 0, 0, 0, 0, 1653, 0,
	1653, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1986, 0, 117, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1423,
	0, 0, 0, 0, 0, 0, 2121, 0, 0, 0,
	0, 0, 0, 5012, 0, 0, 0, 0, 0, 0,
	0, 0, 2132, 0, 1610, 0, 0, 0, 0, 4739,
	0, 0, 287, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1969, 0,
	0, 0, 0, 0, 0, 0, 0, 3075, 0, 0,
	0, 0, 0, 0, 0, 0, 3526, 1399, 0, 0,
	0, 0, 0, 0, 1610, 0, 0, 1969, 1146, 0,
	0, 0, 0, 0, 0, 0, 3521, 3522, 3523, 0,
	1167, 0, 287, 3520, 3518, 3519, 3511, 3512, 3513, 3514,
	3516, 3517, 4430, 4431, 0, 0, 1172, 0, 0, 0,
	0, 0, 0, 0, 4007, 0, 0, 1969, 0, 0,
	0, 1969, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1969, 0, 0, 1653, 0,
	1332, 0, 0, 0, 1969, 1969, 1969, 1969, 1969, 1969,
	1969, 1969, 1969, 1969, 1969, 1969, 1969, 1969, 1969, 1969,
	1969, 1969, 1969, 1969, 1969, 1969, 1969, 1969, 1969, 1969,
	1969, 1969, 1969, 1969, 1969, 1969, 1969, 1969, 1969, 1969,
	0, 0, 0, 0, 0, 1969, 0, 1969, 1969, 1969,
	1969, 0, 0, 0, 0, 0, 0, 3202, 0, 2898,
	2898, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3848, 0, 0, 1969, 3521, 3522, 3523, 0, 0,
	0, 0, 3520, 3518, 3519, 3511, 3512, 3513, 3514, 3516,
	3517, 3192, 3190, 0, 867, 0, 0, 0, 3194, 3196,
	3186, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3075, 0, 0, 0, 0, 0, 0, 0, 2500,
	878, 4497, 0, 4497, 0, 1969, 1653, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	880, 3212, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1969, 0, 0, 1969, 0,
	0, 1969, 0, 879, 1969, 0, 0, 0, 0, 0,
	1969, 1969, 1969, 1969, 1969, 1969, 1969, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3075, 0, 0,
	0, 4637, 0, 4639, 4640, 4641, 0, 4643, 0, 0,
	0, 0, 0, 0, 3172, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 872, 3075, 0, 0,
	0, 0, 0, 888, 0, 0, 0, 0, 0, 2442,
	0, 3172, 0, 2449, 0, 0, 1969, 877, 0, 3530,
	0, 2898, 2898, 2898, 2898, 2462, 0, 1969, 0, 1969,
	0, 0, 0, 0, 1969, 0, 0, 0, 0, 0,
	0, 2474, 0, 2474, 0, 0, 0, 0, 0, 2481,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3188, 0, 4691,
	876, 0, 0, 0, 0, 0, 0, 0, 3204, 0,
	0, 0, 0, 0, 0, 0, 0, 806, 0, 0,
	0, 0, 0, 0, 0, 2449, 0, 0, 2510, 0,
	0, 0, 3203, 3193, 3191, 3195, 3197, 3187, 3189, 3205,
	3207, 0, 0, 0, 874, 0, 0, 0, 0, 2530,
	3199, 3201, 3209, 0, 0, 0, 0, 2562, 0, 0,
	0, 0, 0, 2546, 0, 2548, 0, 2550, 0, 2552,
	0, 2553, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3213, 0, 0, 0,
	0, 0, 0, 0, 0, 2591, 0, 0, 0, 0,
	0, 0, 0, 887, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2582, 2583, 2584, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2631, 0, 2635, 0, 0, 4792, 0, 0, 0,
	2649, 0, 0, 0, 0, 0, 0, 2658, 2659, 2660,
	2661, 2662, 2663, 2664, 2665, 2666, 2667, 2668, 2669, 2670,
	2671, 2672, 2673, 2674, 2675, 2676, 2677, 2678, 2679, 2680,
	2681, 2682, 2683, 2684, 2685, 2686, 2687, 2688, 2689, 2690,
	2691, 2692, 2693, 0, 2699, 869, 2701, 2702, 2703, 2704,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3206, 0, 0, 0, 0,
	0, 0, 2728, 0, 0, 0, 0, 791, 873, 0,
	0, 0, 0, 0, 2010, 0, 0, 0, 2779, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 774, 0,
	0, 0, 0, 775, 2809, 2812, 2815, 2818, 0, 0,
	2824, 2825, 2826, 2827, 2828, 2829, 2830, 805, 0, 117,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 883, 0, 0, 3214, 0, 2890, 871,
	2901, 2903, 2908, 0, 776, 3198, 3200, 3208, 0, 0,
	0, 1969, 1969, 0, 1969, 777, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 778, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 868,
	0, 0, 0, 0, 0, 881, 0, 0, 0, 797,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 875, 2967,
	779, 0, 0, 0, 0, 0, 0, 117, 0, 117,
	0, 117, 0, 807, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 870, 780, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 781, 885,
	886, 0, 882, 782, 0, 2500, 1969, 0, 0, 0,
	0, 0, 0, 1167, 117, 117, 0, 0, 0, 0,
	806, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	117, 0, 117, 0, 0, 3018, 0, 0, 1399, 0,
	0, 0, 1399, 0, 1399, 0, 117, 796, 117, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2462, 0, 0, 1969, 1969, 0, 2898, 2898, 0,
	0, 1969, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3530, 3530, 0, 0, 1969, 1969, 0, 0, 0,
	0, 0, 0, 0, 0, 1969, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 793, 0, 0, 1969,
	0, 0, 0, 0, 117, 0, 0, 0, 0, 0,
	0, 1969, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2898, 2898, 2898,
	2898, 2898, 2898, 2898, 2898, 2898, 2898, 2898, 2898, 2898,
	2898, 2898, 2898, 2898, 2898, 2898, 2898, 0, 2898, 3530,
	3530, 3530, 3530, 803, 0, 784, 0, 0, 0, 0,
	0, 0, 0, 0, 1610, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2449, 2449, 0, 0,
	0, 0, 0, 1221, 1969, 804, 1146, 785, 0, 0,
	0, 0, 3235, 3236, 0, 3238, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2003, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2009, 0, 0, 0, 2015,
	805, 286, 286, 286, 0, 0, 0, 0, 786, 0,
	0, 0, 0, 801, 802, 3255, 799, 0, 0, 0,
	0, 0, 794, 0, 2462, 787, 0, 0, 0, 0,
	0, 0, 0, 901, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 901, 0, 0, 0, 0, 0, 0, 0, 0,
	788, 0, 795, 0, 0, 0, 0, 0, 0, 3327,
	0, 789, 0, 0, 0, 0, 0, 1969, 0, 0,
	0, 0, 0, 0, 0, 0, 790, 0, 3341, 0,
	3344, 798, 0, 0, 3360, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 807, 0, 0, 0,
	2103, 0, 2106, 0, 117, 1933, 1934, 792, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1969, 1969, 0, 0, 0, 0, 0, 1964,
	0, 0, 0, 0, 0, 0, 0, 1936, 0, 0,
	0, 0, 0, 0, 0, 3378, 1610, 3380, 1610, 0,
	0, 0, 0, 0, 3386, 0, 0, 0, 1990, 1991,
	0, 0, 0, 0, 1989, 0, 0, 0, 0, 0,
	0, 0, 0, 1935, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1955, 0, 0, 1345, 0, 0,
	1399, 0, 0, 1952, 0, 0, 0, 0, 3415, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3418, 3419, 0, 0, 0, 0,
	3425, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3439,
	3440, 0, 0, 0, 0, 2779, 0, 0, 0, 3968,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1958, 1959, 1960, 1961, 0, 0, 0, 0, 0,
	0, 1941, 0, 0, 0, 0, 0, 0, 0, 0,
	3449, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3463, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3475, 0, 0, 1969, 1969, 0, 0,
	1969, 3530, 3530, 1969, 1963, 1965, 0, 1969, 0, 0,
	0, 0, 0, 0, 1969, 2869, 2870, 2871, 2872, 2865,
	2866, 2867, 2868, 0, 0, 0, 0, 1969, 0, 0,
	1950, 1951, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1969, 1969, 1969, 1969, 1969, 0, 0, 0, 0, 0,
	1969, 0, 1969, 1956, 0, 3530, 3530, 3530, 3530, 3530,
	3530, 3530, 3530, 3530, 3530, 3530, 3530, 3530, 3530, 3530,
	3530, 3530, 3530, 3530, 3530, 0, 0, 0, 3530, 0,
	0, 1969, 1969, 0, 2908, 2908, 2908, 0, 0, 2845,
	2846, 2847, 2848, 1969, 0, 0, 0, 0, 0, 0,
	0, 2083, 1969, 0, 0, 0, 0, 0, 0, 3568,
	0, 0, 0, 2857, 2858, 2859, 2860, 2853, 2854, 2855,
	2856, 2861, 2862, 2863, 2864, 0, 0, 0, 0, 1257,
	0, 0, 0, 0, 1986, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1969, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1167, 0,
	1167, 0, 0, 1969, 0, 0, 0, 3616, 0, 0,
	0, 0, 0, 1962, 0, 0, 2841, 2842, 2843, 2844,
	2849, 2850, 2851, 2852, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1969, 0, 1957, 1172, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1399, 1172,
	0, 0, 1610, 1610, 0, 0, 0, 1969, 1969, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3665, 0,
	3701, 0, 0, 117, 0, 0, 0, 0, 1988, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3720, 3722, 0, 0, 2462, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3756, 3757, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1969, 0, 0, 0, 0, 0, 0,
	0, 0, 1146, 0, 0, 1146, 1146, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1953,
	1949, 0, 1946, 1944, 1945, 1937, 1938, 1939, 1940, 1942,
	1943, 0, 0, 1349, 0, 0, 286, 0, 286, 286,
	1969, 1969, 286, 0, 0, 1969, 1969, 0, 0, 1969,
	1969, 0, 0, 0, 1969, 0, 0, 0, 1969, 0,
	0, 2717, 0, 1969, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2898, 0,
	0, 1167, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2009, 0, 0, 0, 2009, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3841, 0, 0,
	2449, 0, 286, 0, 286, 286, 0, 0, 286, 286,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 901, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2898,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1332,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2106, 0, 0, 0, 0,
	0, 0, 286, 286, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1969, 0, 286, 286,
	0, 0, 0, 0, 0, 0, 117, 0, 0, 0,
	0, 0, 3945, 0, 1610, 0, 0, 0, 0, 0,
	2649, 0, 0, 0, 0, 0, 3960, 3961, 0, 0,
	3964, 0, 0, 0, 3967, 0, 0, 0, 0, 0,
	0, 1933, 1934, 3971, 1966, 1967, 1968, 1977, 1978, 1979,
	0, 3958, 3978, 0, 0, 0, 0, 3568, 0, 0,
	0, 0, 0, 0, 1970, 1964, 0, 0, 0, 0,
	0, 0, 3991, 1936, 0, 0, 0, 0, 0, 1933,
	1934, 0, 0, 1983, 0, 1977, 1978, 1979, 0, 0,
	0, 0, 4014, 4015, 0, 4016, 4017, 4018, 0, 0,
	1989, 0, 0, 1964, 0, 0, 0, 286, 0, 1935,
	0, 1936, 0, 4024, 1969, 1969, 1969, 4026, 0, 0,
	1955, 1983, 0, 0, 0, 1969, 1969, 3530, 2898, 1952,
	0, 286, 0, 0, 1969, 0, 0, 1969, 1989, 0,
	0, 0, 0, 0, 0, 0, 0, 1935, 0, 0,
	4055, 4056, 0, 0, 0, 0, 0, 0, 1955, 0,
	0, 0, 0, 0, 0, 0, 0, 1952, 4067, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3530,
	2898, 0, 0, 4076, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1969, 0, 0, 0,
	0, 0, 0, 0, 1969, 2898, 0, 1958, 1959, 1960,
	1961, 0, 1969, 0, 0, 0, 0, 1941, 0, 0,
	0, 0, 1969, 0, 1969, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1958, 1959, 1960, 1961, 0,
	0, 0, 0, 0, 0, 1941, 0, 0, 0, 0,
	1974, 0, 0, 1984, 0, 0, 4139, 0, 0, 0,
	1963, 1965, 0, 0, 0, 0, 0, 0, 117, 0,
	0, 117, 0, 117, 0, 0, 0, 1980, 0, 1981,
	0, 0, 0, 4157, 0, 0, 1950, 1951, 1974, 0,
	0, 1984, 0, 0, 0, 0, 0, 0, 1963, 1965,
	0, 0, 0, 0, 1972, 0, 0, 0, 0, 0,
	3530, 0, 0, 0, 0, 0, 0, 4188, 0, 1956,
	117, 0, 0, 117, 1950, 1951, 0, 0, 0, 117,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1969,
	3530, 0, 1972, 1969, 0, 0, 0, 2105, 0, 1345,
	0, 0, 0, 286, 4211, 4212, 0, 1956, 0, 0,
	0, 0, 3530, 0, 0, 0, 0, 0, 1982, 286,
	2105, 286, 0, 0, 0, 0, 0, 0, 0, 901,
	0, 0, 0, 0, 0, 0, 901, 0, 0, 1971,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1986, 0, 0, 0, 0, 0, 117, 0, 0, 0,
	0, 0, 0, 1969, 286, 0, 0, 0, 0, 1349,
	0, 286, 0, 0, 0, 0, 2462, 0, 0, 0,
	1349, 0, 0, 0, 0, 0, 0, 0, 1986, 0,
	0, 0, 0, 0, 0, 2462, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4270, 0, 0, 1962,
	0, 0, 0, 0, 0, 0, 4280, 0, 0, 0,
	1349, 0, 0, 0, 2083, 0, 0, 0, 0, 0,
	0, 0, 1957, 4317, 2462, 0, 0, 0, 0, 4299,
	0, 0, 0, 0, 0, 0, 0, 1962, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1975, 0, 0, 0, 0, 0, 1349, 0, 0, 0,
	1957, 0, 0, 1349, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1969, 0, 0, 0, 0, 1349,
	0, 0, 0, 0, 1988, 2717, 0, 0, 1975, 0,
	0, 0, 0, 4345, 0, 0, 0, 0, 0, 1969,
	0, 0, 4364, 4365, 0, 0, 2009, 0, 4369, 4370,
	0, 0, 0, 4373, 4374, 0, 0, 0, 0, 0,
	0, 4378, 1988, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4382, 0, 0, 0, 0, 0, 0, 1349,
	0, 0, 0, 0, 0, 0, 0, 0, 4387, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1973, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1947, 1948, 1954, 1976, 1953, 1949, 0, 1946, 1944,
	1945, 1937, 1938, 1939, 1940, 1942, 1943, 0, 0, 0,
	0, 0, 0, 0, 0, 286, 4392, 0, 1973, 901,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1976, 1953, 1949, 0, 1946, 1944, 1945, 1937,
	1938, 1939, 1940, 1942, 1943, 0, 0, 0, 0, 0,
	0, 1969, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 286, 0, 0, 0,
	286, 0, 0, 0, 0, 0, 286, 0, 0, 0,
	0, 0, 286, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1172, 286, 0,
	286, 0, 0, 0, 0, 0, 286, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1332,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1332, 0, 0, 0, 0,
	0, 791, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 286, 0, 0, 286, 0, 0, 0, 4517,
	0, 0, 774, 0, 4540, 0, 0, 775, 0, 0,
	0, 0, 0, 0, 0, 2462, 286, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 901,
	286, 0, 286, 0, 286, 0, 286, 0, 286, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 776, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 777,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1349, 0, 1349, 0, 0, 0, 0,
	0, 778, 0, 286, 286, 286, 286, 0, 0, 0,
	1349, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 797, 0, 0, 0, 0, 2462, 0,
	0, 2169, 0, 0, 0, 0, 1933, 1934, 4616, 0,
	0, 0, 0, 0, 779, 0, 0, 0, 0, 0,
	0, 0, 117, 117, 0, 117, 0, 0, 0, 0,
	1964, 0, 0, 0, 0, 0, 0, 0, 1936, 780,
	0, 0, 0, 0, 0, 0, 4658, 4659, 4660, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 781, 0, 0, 1989, 0, 782, 0, 2649,
	0, 0, 4669, 4670, 1935, 117, 117, 0, 117, 0,
	0, 0, 0, 0, 806, 1955, 0, 0, 0, 0,
	4678, 4681, 0, 0, 1952, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1349, 0, 0, 0, 0, 0,
	0, 796, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3963, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	793, 0, 1958, 1959, 1960, 1961, 4740, 0, 0, 0,
	0, 0, 1941, 0, 0, 4748, 1345, 0, 0, 0,
	0, 0, 4725, 0, 0, 0, 0, 0, 0, 0,
	4756, 0, 1345, 1172, 0, 0, 0, 0, 0, 0,
	1332, 0, 0, 1167, 0, 0, 286, 0, 4766, 0,
	0, 4768, 0, 0, 0, 0, 0, 117, 117, 0,
	0, 0, 0, 0, 0, 1963, 1965, 286, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 784,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1950, 1951, 0, 2462, 0, 0, 0, 0, 0,
	0, 0, 0, 1349, 1349, 0, 0, 0, 0, 804,
	0, 785, 0, 0, 1349, 0, 286, 0, 0, 0,
	0, 0, 0, 0, 1956, 0, 0, 0, 0, 0,
	0, 0, 286, 0, 0, 286, 0, 0, 0, 286,
	0, 286, 0, 0, 0, 0, 0, 0, 286, 286,
	0, 0, 0, 0, 805, 0, 0, 0, 286, 0,
	0, 0, 786, 0, 0, 0, 0, 801, 802, 0,
	799, 0, 0, 0, 0, 0, 794, 0, 0, 787,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4854, 1610, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1986, 0, 0, 0, 0,
	0, 1349, 0, 1349, 0, 1349, 0, 0, 0, 0,
	0, 0, 0, 0, 788, 0, 795, 286, 0, 0,
	0, 0, 4893, 1349, 1349, 789, 4897, 0, 0, 0,
	0, 286, 0, 0, 0, 0, 0, 1349, 0, 0,
	790, 0, 0, 0, 286, 798, 0, 0, 0, 1349,
	0, 1349, 1349, 1349, 1962, 0, 0, 0, 0, 0,
	807, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 792, 0, 0, 0, 0, 0, 1957, 0, 0,
	0, 286, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 286, 286, 0, 0, 0, 117, 0,
	1933, 1934, 0, 1966, 1967, 1968, 1977, 1978, 1979, 0,
	0, 0, 0, 0, 0, 0, 1332, 1332, 0, 0,
	0, 4967, 0, 1970, 1964, 0, 0, 0, 0, 0,
	0, 901, 1936, 0, 0, 0, 0, 0, 0, 1988,
	0, 0, 1983, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4973, 0, 1989,
	0, 2649, 286, 0, 901, 0, 0, 0, 1935, 0,
	4681, 286, 0, 0, 0, 0, 0, 0, 0, 1955,
	0, 0, 0, 2169, 2169, 1349, 0, 0, 1952, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1172, 0, 0, 0, 286, 0, 0, 0,
	1953, 1949, 0, 1946, 1944, 1945, 1937, 1938, 1939, 1940,
	1942, 1943, 5026, 0, 0, 286, 0, 286, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 286, 0,
	0, 0, 0, 0, 0, 0, 1958, 1959, 1960, 1961,
	0, 0, 0, 0, 0, 0, 1941, 0, 1349, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 5088, 5088, 5088, 0, 0, 0, 0, 0, 0,
	0, 0, 5070, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 286, 286, 286, 286, 0, 0, 0, 1974,
	0, 286, 1984, 0, 0, 0, 286, 0, 5113, 1963,
	1965, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1349, 0, 0, 0, 1980, 0, 1981, 1349,
	0, 0, 0, 0, 0, 1950, 1951, 286, 1349, 0,
	0, 0, 0, 0, 0, 286, 0, 0, 0, 0,
	0, 0, 0, 1972, 0, 1349, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 5088, 0, 0, 1956, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 117, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1332,
	0, 0, 0, 0, 0, 0, 0, 1982, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1971, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1986,
	117, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1933, 1934, 0, 1966, 1967, 1968, 1977, 1978, 1979,
	0, 0, 0, 0, 0, 5088, 5245, 0, 0, 0,
	0, 1349, 0, 0, 1970, 1964, 0, 0, 1962, 0,
	0, 0, 0, 1936, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1983, 0, 0, 0, 0, 0, 0,
	0, 1957, 0, 0, 0, 0, 0, 0, 0, 0,
	1989, 0, 0, 0, 0, 0, 0, 0, 0, 1935,
	2169, 0, 0, 0, 0, 0, 0, 0, 0, 1975,
	1955, 0, 0, 0, 0, 0, 0, 0, 0, 1952,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	117, 0, 0, 1988, 0, 0, 1332, 0, 1349, 0,
	0, 0, 0, 0, 1332, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1349, 0, 1345, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1345, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1958, 1959, 1960,
	1961, 0, 0, 0, 0, 0, 0, 1941, 0, 0,
	0, 0, 2105, 0, 0, 0, 0, 0, 0, 1973,
	0, 0, 0, 0, 286, 0, 0, 0, 0, 0,
	1947, 1948, 1954, 1976, 1953, 1949, 0, 1946, 1944, 1945,
	1937, 1938, 1939, 1940, 1942, 1943, 0, 0, 0, 0,
	1974, 0, 0, 1984, 0, 3976, 0, 0, 0, 0,
	1963, 1965, 0, 1349, 0, 286, 0, 0, 0, 286,
	286, 0, 0, 0, 0, 0, 1349, 1980, 1349, 1981,
	0, 0, 0, 0, 1349, 0, 1950, 1951, 0, 0,
	117, 0, 0, 0, 0, 0, 1349, 0, 0, 0,
	0, 0, 0, 0, 1972, 286, 0, 1933, 1934, 0,
	1966, 1967, 1968, 1977, 1978, 1979, 0, 0, 0, 1956,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1964, 0, 0, 0, 0, 0, 1933, 1934, 1936,
	1966, 1967, 1968, 1977, 1978, 1979, 0, 286, 286, 1983,
	0, 286, 0, 117, 0, 0, 0, 0, 2105, 0,
	1970, 1964, 0, 0, 0, 0, 1989, 117, 1982, 1936,
	286, 0, 0, 0, 0, 1935, 0, 0, 0, 1983,
	0, 0, 0, 0, 0, 0, 1955, 0, 0, 1971,
	117, 0, 0, 0, 0, 1952, 1989, 0, 0, 0,
	1986, 0, 0, 0, 0, 1935, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1955, 0, 0, 0,
	0, 0, 0, 0, 0, 1952, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1962,
	0, 0, 0, 0, 0, 0, 286, 0, 0, 0,
	0, 0, 0, 1958, 1959, 1960, 1961, 0, 0, 0,
	0, 0, 1957, 1941, 901, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 286, 0, 0, 286, 0, 0,
	0, 0, 0, 1958, 1959, 1960, 1961, 0, 0, 0,
	1975, 0, 0, 1941, 0, 0, 0, 286, 0, 0,
	0, 0, 0, 0, 0, 0, 1974, 1345, 0, 1984,
	0, 0, 0, 0, 0, 117, 1963, 1965, 0, 0,
	0, 0, 0, 0, 1988, 0, 0, 0, 0, 1234,
	0, 0, 0, 0, 0, 0, 1974, 0, 0, 1984,
	0, 0, 1950, 1951, 0, 0, 1963, 1965, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1972, 0, 0, 1980, 0, 1981, 0, 0, 0, 0,
	0, 0, 1950, 1951, 0, 1956, 0, 288, 288, 288,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1972, 0, 0, 0, 0, 0, 0, 0, 0, 286,
	1973, 286, 0, 0, 0, 1956, 0, 0, 0, 288,
	0, 1947, 1948, 1954, 1976, 1953, 1949, 0, 1946, 1944,
	1945, 1937, 1938, 1939, 1940, 1942, 1943, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3487, 288, 286, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1982, 0, 1986, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1971, 0, 0, 0, 0,
	0, 0, 1349, 1349, 0, 0, 1986, 2717, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1349, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1962, 1349, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1349, 0,
	0, 1349, 0, 0, 0, 0, 0, 0, 1957, 0,
	0, 0, 0, 0, 0, 1962, 0, 0, 0, 0,
	0, 0, 0, 2169, 0, 0, 0, 1349, 0, 0,
	0, 0, 0, 0, 0, 0, 1975, 0, 1957, 0,
	0, 0, 0, 0, 0, 292, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1345, 1345, 0, 1975, 0, 0, 0,
	1988, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 117, 0, 0, 0, 0, 0,
	1988, 0, 0, 2169, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 117, 0, 893, 0, 0, 0, 0,
	901, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1973, 0, 0, 0,
	0, 0, 117, 893, 0, 0, 0, 1947, 1948, 1954,
	1976, 1953, 1949, 0, 1946, 1944, 1945, 1937, 1938, 1939,
	1940, 1942, 1943, 0, 0, 0, 1973, 0, 0, 0,
	0, 0, 0, 1349, 0, 0, 0, 1947, 1948, 1954,
	1976, 1953, 1949, 0, 1946, 1944, 1945, 1937, 1938, 1939,
	1940, 1942, 1943, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3486, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1349, 0, 0, 0, 0, 0, 0,
	1933, 1934, 0, 0, 0, 0, 0, 1349, 0, 1349,
	0, 0, 286, 1349, 0, 0, 0, 0, 0, 0,
	0, 1349, 0, 0, 1964, 0, 0, 0, 0, 0,
	0, 0, 1936, 0, 1349, 0, 0, 0, 0, 117,
	0, 0, 0, 286, 0, 117, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1989,
	0, 0, 286, 1349, 0, 0, 0, 0, 1935, 0,
	0, 0, 0, 286, 0, 0, 0, 0, 0, 1955,
	0, 0, 0, 286, 0, 1349, 0, 0, 1952, 0,
	0, 0, 0, 0, 0, 0, 286, 1349, 0, 1349,
	0, 286, 0, 0, 0, 0, 286, 0, 0, 0,
	0, 1349, 0, 1349, 0, 1349, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1345, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3962, 0, 0, 0, 0, 0,
	0, 0, 0, 1349, 0, 0, 1349, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1958, 1959, 1960, 1961,
	286, 0, 0, 0, 0, 0, 1941, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2169, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1963,
	1965, 0, 0, 1349, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1349, 0, 0, 0, 0, 1950, 1951, 0, 0, 0,
	2169, 2169, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1956, 2169,
	2169, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1345, 0, 0, 0, 0, 0, 0,
	0, 1345, 2169, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2105, 0, 0, 0, 0,
	0, 0, 288, 0, 288, 288, 0, 0, 288, 1349,
	1349, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1986,
	0, 0, 0, 0, 0, 286, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1349, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2105, 0, 2105, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 288, 1509,
	288, 288, 0, 0, 288, 288, 286, 0, 1962, 0,
	1509, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 286, 0, 0, 286, 0, 288, 0, 0,
	0, 1957, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1509, 286, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 288, 288,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1988, 0, 0, 1509, 0, 0, 0,
	0, 0, 0, 1509, 288, 288, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 286, 0, 0, 0, 1509,
	0, 0, 0, 0, 0, 286, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1349, 1349, 0, 1349, 0, 0, 0,
	1349, 0, 0, 1349, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1226, 0, 0, 0, 0, 0, 0, 0, 0, 1509,
	0, 0, 0, 2169, 1953, 1949, 0, 1946, 1944, 1945,
	1937, 1938, 1939, 1940, 1942, 1943, 0, 0, 0, 0,
	0, 0, 1933, 1934, 0, 1966, 1967, 1968, 1977, 1978,
	1979, 0, 0, 288, 0, 0, 1933, 1934, 0, 0,
	0, 0, 0, 0, 0, 0, 1964, 0, 1349, 0,
	0, 0, 0, 0, 1936, 0, 0, 288, 0, 0,
	1964, 0, 1349, 0, 1983, 1506, 0, 0, 1936, 0,
	0, 0, 1349, 0, 0, 0, 1628, 1349, 1349, 1349,
	0, 1989, 0, 0, 0, 0, 0, 0, 0, 0,
	1935, 0, 0, 0, 0, 1989, 0, 0, 0, 0,
	1349, 1955, 1349, 0, 1935, 0, 0, 0, 0, 0,
	1952, 1349, 0, 0, 0, 1955, 1628, 0, 0, 0,
	0, 0, 0, 0, 1952, 0, 0, 0, 0, 286,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1349,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2169, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1628, 0, 0, 0, 0, 0, 0, 1628,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3424, 0, 0, 0, 0, 1628, 0, 0, 1958, 1959,
	1960, 1961, 0, 0, 0, 0, 0, 0, 1941, 0,
	0, 286, 1958, 1959, 1960, 1961, 0, 0, 0, 0,
	0, 0, 1941, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2105, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1974, 0, 0, 1984, 1628, 0, 0, 0, 1349,
	0, 1963, 1965, 0, 0, 0, 0, 1349, 0, 0,
	0, 1349, 1349, 0, 1349, 1963, 1965, 0, 1980, 0,
	1981, 1349, 0, 0, 0, 0, 0, 1950, 1951, 0,
	0, 0, 1349, 1349, 0, 0, 0, 0, 0, 288,
	0, 1950, 1951, 0, 0, 1972, 0, 286, 286, 0,
	1509, 0, 1349, 0, 0, 288, 288, 288, 0, 0,
	1956, 0, 0, 0, 0, 288, 0, 0, 0, 0,
	0, 0, 288, 0, 1956, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1349, 0,
	1349, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	288, 0, 0, 0, 0, 0, 0, 288, 0, 1982,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1349, 0, 0, 0, 0,
	2105, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1986, 0, 0, 0, 2105, 0, 1349, 0, 0,
	0, 0, 0, 0, 0, 1986, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	286, 0, 0, 0, 1509, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1349,
	1349, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1962, 2105, 2105, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1962, 0, 0, 0, 0, 0,
	0, 0, 2105, 1957, 286, 2105, 0, 0, 0, 0,
	1349, 0, 0, 0, 0, 1349, 0, 1957, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1975, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1349, 1349, 1349, 1349, 1349, 1349, 1349, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1349, 1988, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1506, 0, 0, 1988,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 286,
	0, 893, 0, 0, 1349, 0, 0, 0, 893, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2169, 0, 0, 0, 0,
	0, 288, 0, 1509, 1509, 288, 0, 0, 0, 0,
	0, 0, 0, 0, 1509, 0, 0, 1349, 0, 1349,
	0, 1973, 0, 0, 0, 0, 0, 0, 0, 286,
	0, 0, 1947, 1948, 1954, 1976, 1953, 1949, 0, 1946,
	1944, 1945, 1937, 1938, 1939, 1940, 1942, 1943, 0, 0,
	1953, 1949, 0, 1946, 1944, 1945, 1937, 1938, 1939, 1940,
	1942, 1943, 288, 0, 0, 1349, 288, 0, 0, 0,
	0, 0, 288, 0, 0, 0, 0, 0, 288, 0,
	1506, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 288, 0, 288, 0, 0, 0,
	2169, 0, 288, 0, 0, 0, 0, 0, 0, 0,
	0, 1509, 0, 1509, 0, 1509, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1509, 1509, 0, 0, 0, 1349, 0,
	0, 0, 0, 0, 0, 0, 0, 1509, 288, 0,
	0, 288, 0, 0, 0, 0, 1349, 1349, 1349, 1509,
	0, 1509, 1509, 1509, 0, 0, 0, 0, 0, 0,
	0, 0, 288, 0, 0, 0, 0, 1349, 0, 0,
	0, 0, 0, 0, 0, 288, 288, 0, 288, 0,
	288, 0, 288, 0, 288, 0, 0, 0, 2105, 0,
	2105, 0, 0, 0, 0, 0, 0, 1349, 0, 0,
	1349, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 288,
	288, 288, 288, 0, 0, 0, 0, 0, 0, 1628,
	1628, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1506, 0, 0, 2169, 0, 0, 0, 0, 0, 0,
	1507, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1629, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1509, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1933, 1934, 0,
	1966, 1967, 1968, 1977, 1978, 1979, 0, 0, 0, 0,
	0, 1629, 0, 0, 0, 0, 1349, 0, 0, 0,
	1970, 1964, 0, 0, 0, 0, 0, 0, 0, 1936,
	0, 1349, 0, 0, 0, 0, 0, 0, 0, 1983,
	0, 0, 0, 0, 0, 0, 0, 1628, 0, 1628,
	0, 1628, 0, 0, 0, 0, 1989, 1629, 0, 0,
	0, 0, 0, 0, 1629, 1935, 0, 0, 0, 1628,
	1628, 0, 0, 0, 0, 0, 1955, 0, 1509, 0,
	1629, 0, 0, 1628, 0, 1952, 0, 1349, 1349, 0,
	0, 0, 0, 0, 0, 1628, 0, 1628, 1628, 1628,
	0, 0, 0, 0, 0, 0, 0, 0, 1349, 0,
	0, 1349, 0, 0, 0, 1349, 0, 0, 0, 0,
	0, 893, 0, 0, 0, 1349, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1629, 0, 0, 0, 0, 0, 0, 0, 0, 1509,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1958, 1959, 1960, 1961, 0, 0, 0,
	0, 0, 288, 1941, 0, 1509, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 288, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1349,
	0, 0, 0, 0, 0, 0, 1974, 0, 0, 1984,
	0, 0, 0, 0, 0, 0, 1963, 1965, 0, 0,
	0, 1506, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 288, 1980, 0, 1981, 0, 0, 0, 0,
	0, 0, 1950, 1951, 0, 0, 0, 0, 288, 0,
	0, 288, 0, 0, 0, 288, 0, 288, 0, 0,
	1972, 0, 0, 0, 288, 288, 0, 0, 0, 0,
	0, 0, 0, 0, 288, 1956, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1509, 0, 0, 1506, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1982, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 288, 0, 1971, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1986, 288, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	288, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1506, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 288, 1509, 0,
	0, 1506, 0, 0, 1349, 1962, 1349, 0, 0, 288,
	288, 0, 0, 0, 1509, 0, 0, 0, 0, 0,
	0, 1507, 0, 0, 0, 0, 0, 0, 1957, 1933,
	1934, 0, 1966, 1967, 1968, 1977, 1978, 1979, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 288, 0, 0,
	0, 0, 1970, 1964, 0, 0, 1975, 0, 0, 0,
	0, 1936, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1983, 0, 0, 0, 0, 0, 0, 288, 0,
	288, 0, 0, 0, 0, 0, 0, 288, 1989, 0,
	1988, 0, 0, 0, 0, 0, 0, 1935, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1955, 0,
	0, 0, 0, 1509, 0, 0, 0, 1952, 0, 0,
	0, 0, 0, 0, 0, 0, 1509, 0, 1509, 0,
	0, 0, 0, 0, 1509, 0, 0, 0, 0, 0,
	0, 0, 288, 0, 0, 1507, 1509, 1506, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 288, 0, 288, 0, 0, 1973, 0, 0, 0,
	0, 0, 0, 0, 288, 0, 0, 1947, 1948, 1954,
	1976, 1953, 1949, 0, 1946, 1944, 1945, 1937, 1938, 1939,
	1940, 1942, 1943, 0, 0, 1958, 1959, 1960, 1961, 0,
	0, 0, 3483, 0, 0, 1941, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 288, 288,
	288, 288, 0, 0, 0, 0, 0, 288, 0, 0,
	0, 0, 288, 0, 1506, 0, 0, 0, 1974, 0,
	0, 1984, 0, 0, 0, 0, 0, 0, 1963, 1965,
	1628, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 288, 0, 1980, 0, 1981, 0, 0,
	0, 288, 0, 0, 1950, 1951, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1972, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1629, 1629, 0, 1956, 0, 0,
	0, 0, 0, 0, 0, 1507, 893, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1628,
	0, 0, 0, 0, 0, 0, 1982, 0, 0, 0,
	0, 0, 1628, 0, 1628, 0, 0, 0, 0, 0,
	1628, 0, 0, 0, 0, 0, 0, 1971, 0, 0,
	0, 0, 1628, 0, 0, 0, 0, 0, 1986, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1629, 0, 1629, 0, 1629, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1629, 1629, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1962, 1629, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1629, 0, 1629, 1629, 1629, 0, 0, 0, 0, 0,
	1957, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1975, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1988, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1509, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1509, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1509, 0, 0, 0, 0, 1507, 0, 0, 0,
	288, 0, 0, 0, 0, 0, 0, 0, 1973, 0,
	0, 0, 0, 0, 0, 0, 0, 1509, 0, 1947,
	1948, 1954, 1976, 1953, 1949, 0, 1946, 1944, 1945, 1937,
	1938, 1939, 1940, 1942, 1943, 0, 0, 0, 0, 0,
	0, 288, 0, 0, 3482, 288, 288, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 288, 0, 0, 921, 0, 0, 0, 0, 1507,
	1933, 1934, 0, 1966, 1967, 1968, 1977, 1978, 1979, 0,
	0, 0, 0, 0, 0, 923, 0, 0, 0, 0,
	924, 0, 0, 1970, 1964, 0, 0, 0, 0, 0,
	0, 0, 1936, 288, 288, 0, 0, 288, 0, 0,
	0, 0, 1983, 0, 288, 1933, 1934, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 288, 0, 0, 1989,
	0, 925, 0, 942, 0, 0, 0, 0, 1935, 1964,
	1507, 0, 0, 0, 0, 0, 0, 1936, 0, 1955,
	0, 0, 0, 1509, 0, 0, 0, 0, 1952, 926,
	0, 0, 0, 0, 927, 0, 1507, 0, 0, 1506,
	0, 0, 0, 0, 1989, 0, 0, 0, 0, 0,
	0, 0, 0, 1935, 0, 0, 951, 0, 0, 0,
	0, 0, 0, 928, 1955, 0, 0, 0, 0, 0,
	0, 0, 1506, 1952, 0, 0, 0, 949, 0, 0,
	0, 0, 0, 1509, 0, 0, 0, 1506, 0, 0,
	0, 0, 288, 0, 0, 0, 0, 1509, 0, 1509,
	0, 0, 922, 1509, 0, 0, 1958, 1959, 1960, 1961,
	288, 1509, 0, 1506, 0, 0, 1941, 0, 0, 0,
	288, 0, 0, 288, 1509, 929, 0, 0, 0, 3417,
	930, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 953, 288, 0, 0, 0, 806, 0, 0,
	0, 1958, 1959, 1960, 1961, 0, 0, 0, 0, 1974,
	0, 1941, 1984, 0, 0, 0, 0, 0, 0, 1963,
	1965, 0, 0, 0, 0, 1509, 0, 0, 0, 0,
	0, 0, 1507, 0, 0, 0, 1980, 1509, 1981, 1509,
	0, 0, 0, 0, 0, 1950, 1951, 0, 0, 0,
	0, 1509, 0, 1509, 0, 1509, 0, 0, 0, 0,
	0, 0, 0, 1972, 1963, 1965, 0, 0, 0, 0,
	0, 0, 0, 952, 0, 0, 0, 0, 1956, 0,
	0, 0, 0, 947, 0, 0, 0, 0, 0, 0,
	1950, 1951, 0, 1509, 0, 288, 1509, 288, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1506,
	0, 0, 0, 1956, 0, 0, 0, 1982, 0, 1507,
	0, 0, 0, 0, 288, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1629, 0, 0, 1971, 0,
	0, 931, 0, 0, 0, 0, 0, 0, 0, 1986,
	0, 0, 933, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1509, 0, 0, 0, 0, 0, 1628,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1509, 0, 0, 1628, 934, 1628, 0, 0, 0, 1506,
	0, 0, 0, 0, 1986, 0, 893, 1628, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1962, 0,
	1628, 0, 0, 0, 0, 943, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 805, 0, 0,
	0, 1957, 0, 0, 1629, 0, 0, 0, 0, 0,
	920, 0, 0, 944, 0, 0, 0, 1629, 0, 1629,
	0, 0, 935, 1962, 0, 1629, 0, 0, 0, 1975,
	0, 1628, 0, 0, 0, 0, 0, 1629, 0, 0,
	0, 0, 0, 1628, 0, 1628, 1957, 0, 0, 941,
	0, 0, 0, 0, 0, 0, 0, 1628, 0, 1628,
	0, 1628, 0, 1988, 0, 0, 0, 936, 0, 0,
	0, 937, 956, 0, 955, 0, 0, 0, 938, 0,
	0, 0, 0, 0, 0, 1509, 0, 0, 0, 0,
	0, 0, 0, 939, 0, 0, 0, 0, 948, 1506,
	0, 0, 1506, 0, 957, 0, 954, 0, 1988, 0,
	0, 0, 0, 807, 0, 0, 288, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1973,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1947, 1948, 1954, 1976, 1953, 1949, 0, 1946, 1944, 1945,
	1937, 1938, 1939, 1940, 1942, 1943, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3481, 0, 0, 0, 1506,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1506, 0, 0, 1953,
	1949, 0, 1946, 1944, 1945, 1937, 1938, 1939, 1940, 1942,
	1943, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 288, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1509, 1509, 0, 1509, 0, 0, 0,
	1509, 0, 0, 1509, 0, 0, 0, 0, 0, 288,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 288, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 288,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 288,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1506, 288, 0, 0, 0, 0, 288, 0, 0,
	0, 0, 288, 0, 0, 0, 0, 0, 1509, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 893, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1509, 0, 0, 0, 0, 1509, 1509, 1509,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1509, 0, 1509, 0, 0, 0, 288, 0, 0, 0,
	0, 1509, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1509,
	0, 0, 0, 0, 1507, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1507, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1507, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1628,
	1628, 0, 1628, 0, 0, 0, 1628, 0, 1507, 1628,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1509, 1509, 0, 1509, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1509, 1509, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1628, 0, 0, 0, 0, 0,
	0, 0, 1509, 0, 0, 0, 0, 0, 0, 0,
	0, 288, 0, 0, 0, 0, 0, 0, 1628, 0,
	0, 0, 0, 1628, 1628, 1628, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1628, 0, 1628, 0,
	0, 0, 0, 0, 0, 0, 0, 1506, 0, 0,
	0, 0, 288, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1507, 1509, 0, 0, 288, 0,
	0, 288, 0, 0, 0, 1506, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1509, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 288, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1629, 0, 0, 0, 0, 1509,
	1509, 0, 0, 0, 0, 0, 0, 0, 1629, 0,
	1629, 0, 0, 0, 1507, 0, 0, 0, 0, 0,
	0, 0, 1629, 0, 0, 0, 0, 0, 0, 0,
	0, 288, 0, 0, 0, 1629, 0, 0, 0, 0,
	1509, 288, 0, 0, 0, 1509, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1506, 1506, 0,
	1506, 1509, 1509, 1509, 1509, 1509, 1509, 1509, 0, 0,
	0, 0, 0, 0, 0, 0, 1629, 0, 1628, 1628,
	0, 0, 0, 0, 1509, 0, 0, 0, 1629, 0,
	1629, 0, 0, 0, 0, 0, 0, 0, 1506, 0,
	0, 0, 1629, 0, 1629, 0, 1629, 0, 0, 0,
	0, 0, 0, 0, 1509, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1507, 0, 0, 1507, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1509, 0, 1509,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1506, 1933, 1934, 0, 1966, 1967, 1968, 1977, 1978,
	1979, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1506, 0, 1970, 1964, 0, 0, 0,
	0, 0, 0, 0, 1936, 1509, 0, 0, 0, 0,
	0, 0, 0, 0, 1983, 288, 0, 0, 0, 0,
	0, 0, 0, 0, 1507, 0, 0, 0, 0, 0,
	0, 1989, 0, 0, 0, 1628, 1628, 0, 0, 0,
	1935, 1507, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1955, 0, 0, 0, 0, 0, 0, 0, 0,
	1952, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1506, 0, 1509, 0,
	0, 1628, 0, 0, 0, 0, 0, 288, 0, 0,
	0, 0, 0, 0, 0, 0, 1509, 1509, 1509, 0,
	0, 0, 0, 0, 0, 0, 0, 1628, 1628, 1628,
	1628, 1628, 1628, 1628, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1506, 0, 0, 0, 0, 0, 0, 0, 1958, 1959,
	1960, 1961, 0, 0, 0, 0, 0, 1509, 1941, 0,
	1509, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1506, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1507, 0, 0, 0,
	0, 0, 0, 288, 288, 0, 0, 0, 0, 0,
	0, 1974, 0, 0, 1984, 0, 0, 0, 0, 0,
	0, 1963, 1965, 1506, 0, 1628, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1980, 0,
	1981, 0, 0, 0, 0, 0, 0, 1950, 1951, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1972, 0, 0, 0, 0,
	0, 1506, 0, 0, 0, 0, 0, 0, 0, 0,
	1956, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 288, 0, 0, 1982,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1506, 0, 0, 0, 0, 0,
	1971, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1986, 1628, 1628, 1628, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1629, 1629, 0, 1629, 0, 0,
	288, 1629, 0, 0, 1629, 1509, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1509, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1506, 0, 0, 1628, 0, 0, 0,
	1962, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1957, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1629,
	0, 0, 0, 0, 0, 288, 0, 0, 0, 0,
	0, 1975, 0, 0, 0, 0, 0, 0, 0, 1509,
	0, 0, 0, 1629, 0, 0, 0, 0, 1629, 1629,
	1629, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1988, 0, 0, 0, 0,
	0, 1629, 0, 1629, 0, 0, 0, 0, 0, 0,
	0, 0, 1507, 0, 0, 288, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1507, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1973, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1947, 1948, 1954, 1976, 1953, 1949, 0, 1946,
	1944, 1945, 1937, 1938, 1939, 1940, 1942, 1943, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2776, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1628, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1628, 0, 0, 0, 0, 0, 1933, 1934, 0,
	1966, 1967, 1968, 1977, 1978, 1979, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1970, 1964, 1507, 1507, 0, 1507, 0, 0, 0, 1936,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1983,
	0, 0, 0, 1629, 1629, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1989, 0, 0, 0,
	0, 0, 0, 1507, 0, 1935, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1628, 1955, 0, 0, 0,
	0, 0, 0, 0, 0, 1952, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1507, 0, 0, 0,
	0, 0, 0, 0, 0, 1933, 1934, 0, 1966, 1967,
	1968, 1977, 1978, 1979, 0, 0, 0, 0, 1507, 0,
	0, 0, 0, 1958, 1959, 1960, 1961, 0, 1970, 1964,
	0, 0, 0, 1941, 0, 0, 0, 1936, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1983, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1629, 1629, 0, 0, 1989, 0, 0, 0, 0, 0,
	0, 0, 0, 1935, 0, 0, 1974, 0, 0, 1984,
	0, 0, 0, 0, 1955, 0, 1963, 1965, 0, 0,
	0, 0, 0, 1952, 0, 0, 0, 0, 0, 0,
	0, 1507, 0, 1980, 0, 1981, 1629, 0, 0, 0,
	0, 0, 1950, 1951, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1972, 0, 1629, 1629, 1629, 1629, 1629, 1629, 1629, 0,
	0, 0, 0, 0, 0, 1956, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1507, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1958, 1959, 1960, 1961, 0, 0, 0, 0, 0,
	0, 1941, 0, 0, 0, 1507, 0, 0, 0, 0,
	0, 0, 0, 0, 1982, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1971, 0, 0, 0, 0,
	0, 0, 0, 0, 1974, 0, 1986, 1984, 1507, 0,
	1629, 0, 0, 0, 1963, 1965, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1980, 0, 1981, 0, 0, 0, 0, 0, 0,
	1950, 1951, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1507, 0, 1972, 0,
	0, 0, 0, 0, 0, 1962, 0, 0, 0, 0,
	0, 0, 0, 1956, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1957, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1975, 0, 0, 0,
	0, 0, 1982, 0, 0, 0, 0, 0, 0, 1507,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1971, 0, 0, 0, 1629, 1629, 1629,
	1988, 0, 0, 0, 1986, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1507, 0,
	0, 1629, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1962, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1973, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1957, 1947, 1948, 1954,
	1976, 1953, 1949, 0, 1946, 1944, 1945, 1937, 1938, 1939,
	1940, 1942, 1943, 0, 0, 0, 0, 0, 5013, 0,
	0, 0, 0, 0, 1975, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1988, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1973, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1947, 1948, 1954, 1976, 1953,
	1949, 0, 1946, 1944, 1945, 1937, 1938, 1939, 1940, 1942,
	1943, 0, 0, 0, 0, 0, 5009, 0, 0, 0,
	0, 0, 0, 0, 0, 1504, 1629, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1629, 0, 0, 0,
	0, 0, 296, 297, 299, 298, 300, 301, 302, 303,
	1510, 304, 305, 1511, 1512, 1513, 0, 1514, 686, 1515,
	1516, 1517, 306, 1518, 307, 308, 1288, 309, 310, 311,
	312, 313, 314, 315, 687, 688, 0, 316, 689, 317,
	690, 1519, 691, 318, 319, 320, 321, 322, 323, 1520,
	1521, 0, 324, 692, 693, 694, 1522, 325, 326, 695,
	1523, 1590, 1524, 327, 328, 329, 330, 331, 332, 333,
	334, 0, 1525, 336, 337, 338, 335, 339, 1526, 340,
	1629, 341, 342, 343, 344, 345, 346, 1527, 347, 348,
	349, 1289, 350, 351, 352, 1528, 1529, 1531, 1530, 1532,
	1533, 1534, 353, 354, 355, 356, 357, 0, 358, 360,
	696, 697, 1535, 363, 359, 361, 1536, 364, 362, 365,
	1537, 366, 367, 368, 1538, 1539, 369, 370, 371, 1540,
	372, 373, 374, 1541, 375, 376, 377, 1542, 378, 379,
	698, 380, 381, 382, 384, 386, 383, 385, 387, 388,
	389, 390, 699, 700, 391, 1543, 293, 1544, 0, 0,
	0, 0, 392, 393, 394, 701, 0, 0, 0, 395,
	1545, 396, 397, 398, 1546, 399, 400, 1547, 1290, 401,
	402, 403, 702, 703, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 1548, 413, 704, 1549, 705, 414, 1550,
	415, 416, 417, 418, 419, 420, 421, 706, 707, 708,
	510, 1292, 422, 423, 1551, 424, 425, 426, 427, 428,
	0, 0, 0, 294, 429, 430, 431, 1552, 1291, 511,
	432, 709, 710, 1553, 711, 1554, 433, 434, 1293, 712,
	1294, 435, 436, 437, 1295, 438, 0, 0, 0, 439,
	440, 441, 442, 443, 444, 1555, 445, 447, 446, 1556,
	448, 713, 1296, 449, 450, 1297, 1557, 451, 452, 453,
	454, 455, 456, 459, 1558, 1559, 457, 458, 460, 461,
	0, 462, 463, 465, 468, 464, 466, 467, 469, 482,
	483, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 485, 0, 484, 1298, 486, 487, 488,
	489, 490, 497, 499, 500, 495, 496, 498, 501, 502,
	504, 492, 493, 494, 1299, 503, 491, 1560, 295, 1300,
	505, 506, 507, 508, 1561, 714, 509, 715, 512, 513,
	1562, 0, 514, 0, 515, 1563, 1564, 517, 518, 519,
	1565, 1566, 520, 521, 716, 1301, 522, 1302, 717, 523,
	524, 516, 525, 526, 527, 528, 529, 530, 531, 532,
	533, 1567, 534, 535, 718, 536, 537, 538, 719, 539,
	540, 541, 720, 542, 721, 543, 544, 1568, 545, 546,
	547, 0, 548, 549, 550, 551, 552, 553, 554, 555,
	722, 556, 557, 559, 558, 560, 1569, 561, 0, 562,
	563, 564, 0, 0, 0, 0, 0, 565, 566, 568,
	0, 569, 570, 571, 572, 567, 573, 574, 575, 576,
	577, 1570, 578, 579, 580, 1303, 581, 582, 583, 584,
	585, 723, 586, 0, 587, 588, 595, 596, 597, 589,
	590, 591, 598, 599, 600, 601, 602, 1571, 604, 605,
	603, 606, 607, 608, 1572, 609, 610, 592, 593, 611,
	612, 1304, 613, 614, 615, 616, 617, 618, 619, 724,
	0, 620, 1573, 621, 622, 623, 624, 625, 627, 594,
	628, 633, 634, 725, 629, 630, 631, 632, 726, 636,
	637, 638, 1574, 639, 640, 0, 635, 626, 1575, 641,
	642, 643, 644, 645, 646, 0, 647, 648, 1576, 649,
	727, 728, 729, 730, 1577, 659, 1578, 650, 651, 652,
	653, 731, 654, 732, 1579, 655, 656, 657, 658, 0,
	660, 661, 1580, 1581, 662, 663, 665, 667, 668, 664,
	666, 669, 1582, 670, 1583, 0, 671, 672, 673, 733,
	734, 735, 1584, 675, 674, 676, 677, 678, 736, 679,
	680, 1585, 1586, 1587, 1588, 681, 682, 737, 683, 684,
	685, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1504, 0, 0, 0, 0, 0, 0, 0,
	2945, 0, 0, 0, 0, 0, 0, 0, 2946, 296,
	297, 299, 298, 300, 301, 302, 303, 1510, 304, 305,
	1511, 1512, 1513, 0, 1514, 686, 1515, 1516, 1517, 306,
	1518, 307, 308, 1288, 309, 310, 311, 312, 313, 314,
	315, 687, 688, 0, 316, 689, 317, 690, 1519, 691,
	318, 319, 320, 321, 322, 323, 1520, 1521, 0, 324,
	692, 693, 694, 1522, 325, 326, 695, 1523, 1590, 1524,
	327, 328, 329, 330, 331, 332, 333, 334, 0, 1525,
	336, 337, 338, 335, 339, 1526, 340, 0, 341, 342,
	343, 344, 345, 346, 1527, 347, 348, 349, 1289, 350,
	351, 352, 1528, 1529, 1531, 1530, 1532, 1533, 1534, 353,
	354, 355, 356, 357, 0, 358, 360, 696, 697, 1535,
	363, 359, 361, 1536, 364, 362, 365, 1537, 366, 367,
	368, 1538, 1539, 369, 370, 371, 1540, 372, 373, 374,
	1541, 375, 376, 377, 1542, 378, 379, 698, 380, 381,
	382, 384, 386, 383, 385, 387, 388, 389, 390, 699,
	700, 391, 1543, 293, 1544, 0, 0, 0, 0, 392,
	393, 394, 701, 0, 0, 0, 395, 1545, 396, 397,
	398, 1546, 399, 400, 1547, 1290, 401, 402, 403, 702,
	703, 404, 405, 406, 407, 408, 409, 410, 411, 412,
	1548, 413, 704, 1549, 705, 414, 1550, 415, 416, 417,
	418, 419, 420, 421, 706, 707, 708, 510, 1292, 422,
	423, 1551, 424, 425, 426, 427, 428, 0, 0, 0,
	294, 429, 430, 431, 1552, 1291, 511, 432, 709, 710,
	1553, 711, 1554, 433, 434, 1293, 712, 1294, 435, 436,
	437, 1295, 438, 0, 0, 0, 439, 440, 441, 442,
	443, 444, 1555, 445, 447, 446, 1556, 448, 713, 1296,
	449, 450, 1297, 1557, 451, 452, 453, 454, 455, 456,
	459, 1558, 1559, 457, 458, 460, 461, 0, 462, 463,
	465, 468, 464, 466, 467, 469, 482, 483, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	485, 0, 484, 1298, 486, 487, 488, 489, 490, 497,
	499, 500, 495, 496, 498, 501, 502, 504, 492, 493,
	494, 1299, 503, 491, 1560, 295, 1300, 505, 506, 507,
	508, 1561, 714, 509, 715, 512, 513, 1562, 0, 514,
	0, 515, 1563, 1564, 517, 518, 519, 1565, 1566, 520,
	521, 716, 1301, 522, 1302, 717, 523, 524, 516, 525,
	526, 527, 528, 529, 530, 531, 532, 533, 1567, 534,
	535, 718, 536, 537, 538, 719, 539, 540, 541, 720,
	542, 721, 543, 544, 1568, 545, 546, 547, 0, 548,
	549, 550, 551, 552, 553, 554, 555, 722, 556, 557,
	559, 558, 560, 1569, 561, 0, 562, 563, 564, 0,
	0, 0, 0, 0, 565, 566, 568, 0, 569, 570,
	571, 572, 567, 573, 574, 575, 576, 577, 1570, 578,
	579, 580, 1303, 581, 582, 583, 584, 585, 723, 586,
	0, 587, 588, 595, 596, 597, 589, 590, 591, 598,
	599, 600, 601, 602, 1571, 604, 605, 603, 606, 607,
	608, 1572, 609, 610, 592, 593, 611, 612, 1304, 613,
	614, 615, 616, 617, 618, 619, 724, 0, 620, 1573,
	621, 622, 623, 624, 625, 627, 594, 628, 633, 634,
	725, 629, 630, 631, 632, 726, 636, 637, 638, 1574,
	639, 640, 0, 635, 626, 1575, 641, 642, 643, 644,
	645, 646, 0, 647, 648, 1576, 649, 727, 728, 729,
	730, 1577, 659, 1578, 650, 651, 652, 653, 731, 654,
	732, 1579, 655, 656, 657, 658, 0, 660, 661, 1580,
	1581, 662, 663, 665, 667, 668, 664, 666, 669, 1582,
	670, 1583, 0, 671, 672, 673, 733, 734, 735, 1584,
	675, 674, 676, 677, 678, 736, 679, 680, 1585, 1586,
	1587, 1588, 681, 682, 737, 683, 684, 685, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1504, 0, 0,
	0, 3985, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3987, 296, 297, 299, 298, 300, 301,
	302, 303, 1510, 304, 305, 1511, 1512, 1513, 0, 1514,
	686, 1515, 1516, 1517, 306, 1518, 307, 308, 1288, 309,
	310, 311, 312, 313, 314, 315, 687, 688, 0, 316,
	689, 317, 690, 1519, 691, 318, 319, 320, 321, 322,
	323, 1520, 1521, 0, 324, 692, 693, 694, 1522, 325,
	326, 695, 1523, 1590, 1524, 327, 328, 329, 330, 331,
	332, 333, 334, 0, 1525, 336, 337, 338, 335, 339,
	1526, 340, 0, 341, 342, 343, 344, 345, 346, 1527,
	347, 348, 349, 1289, 350, 351, 352, 1528, 1529, 1531,
	1530, 1532, 1533, 1534, 353, 354, 355, 356, 357, 0,
	358, 360, 696, 697, 1535, 363, 359, 361, 1536, 364,
	362, 365, 1537, 366, 367, 368, 1538, 1539, 369, 370,
	371, 1540, 372, 373, 374, 1541, 375, 376, 377, 1542,
	378, 379, 698, 380, 381, 382, 384, 386, 383, 385,
	387, 388, 389, 390, 699, 700, 391, 1543, 293, 1544,
	0, 0, 0, 0, 392, 393, 394, 701, 0, 0,
	0, 395, 1545, 396, 397, 398, 1546, 399, 400, 1547,
	1290, 401, 402, 403, 702, 703, 404, 405, 406, 407,
	408, 409, 410, 411, 412, 1548, 413, 704, 1549, 705,
	414, 1550, 415, 416, 417, 418, 419, 420, 421, 706,
	707, 708, 510, 1292, 422, 423, 1551, 424, 425, 426,
	427, 428, 0, 0, 0, 294, 429, 430, 431, 1552,
	1291, 511, 432, 709, 710, 1553, 711, 1554, 433, 434,
	1293, 712, 1294, 435, 436, 437, 1295, 438, 0, 0,
	0, 439, 440, 441, 442, 443, 444, 1555, 445, 447,
	446, 1556, 448, 713, 1296, 449, 450, 1297, 1557, 451,
	452, 453, 454, 455, 456, 459, 1558, 1559, 457, 458,
	460, 461, 0, 462, 463, 465, 468, 464, 466, 467,
	469, 482, 483, 470, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 485, 0, 484, 1298, 486,
	487, 488, 489, 490, 497, 499, 500, 495, 496, 498,
	501, 502, 504, 492, 493, 494, 1299, 503, 491, 1560,
	295, 1300, 505, 506, 507, 508, 1561, 714, 509, 715,
	512, 513, 1562, 0, 514, 0, 515, 1563, 1564, 517,
	518, 519, 1565, 1566, 520, 521, 716, 1301, 522, 1302,
	717, 523, 524, 516, 525, 526, 527, 528, 529, 530,
	531, 532, 533, 1567, 534, 535, 718, 536, 537, 538,
	719, 539, 540, 541, 720, 542, 721, 543, 544, 1568,
	545, 546, 547, 0, 548, 549, 550, 551, 552, 553,
	554, 555, 722, 556, 557, 559, 558, 560, 1569, 561,
	0, 562, 563, 564, 0, 0, 0, 0, 0, 565,
	566, 568, 0, 569, 570, 571, 572, 567, 573, 574,
	575, 576, 577, 1570, 578, 579, 580, 1303, 581, 582,
	583, 584, 585, 723, 586, 0, 587, 588, 595, 596,
	597, 589, 590, 591, 598, 599, 600, 601, 602, 1571,
	604, 605, 603, 606, 607, 608, 1572, 609, 610, 592,
	593, 611, 612, 1304, 613, 614, 615, 616, 617, 618,
	619, 724, 0, 620, 1573, 621, 622, 623, 624, 625,
	627, 594, 628, 633, 634, 725, 629, 630, 631, 632,
	726, 636, 637, 638, 1574, 639, 640, 0, 635, 626,
	1575, 641, 642, 643, 644, 645, 646, 0, 647, 648,
	1576, 649, 727, 728, 729, 730, 1577, 659, 1578, 650,
	651, 652, 653, 731, 654, 732, 1579, 655, 656, 657,
	658, 0, 660, 661, 1580, 1581, 662, 663, 665, 667,
	668, 664, 666, 669, 1582, 670, 1583, 0, 671, 672,
	673, 733, 734, 735, 1584, 675, 674, 676, 677, 678,
	736, 679, 680, 1585, 1586, 1587, 1588, 681, 682, 737,
	683, 684, 685, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1504, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4422, 296, 297, 299, 298, 300, 301, 302,
	303, 1510, 304, 305, 1511, 1512, 1513, 0, 1514, 686,
	1515, 1516, 1517, 306, 1518, 307, 308, 1288, 309, 310,
	311, 312, 313, 314, 315, 687, 688, 0, 316, 689,
	317, 690, 1519, 691, 318, 319, 320, 321, 322, 323,
	1520, 1521, 0, 324, 692, 693, 694, 1522, 325, 326,
	695, 1523, 1590, 1524, 327, 328, 329, 330, 331, 332,
	333, 334, 0, 1525, 336, 337, 338, 335, 339, 1526,
	340, 0, 341, 342, 343, 344, 345, 346, 1527, 347,
	348, 349, 1289, 350, 351, 352, 1528, 1529, 1531, 1530,
	1532, 1533, 1534, 353, 354, 355, 356, 357, 0, 358,
	360, 696, 697, 1535, 363, 359, 361, 1536, 364, 362,
	365, 1537, 366, 367, 368, 1538, 1539, 369, 370, 371,
	1540, 372, 373, 374, 1541, 375, 376, 377, 1542, 378,
	379, 698, 380, 381, 382, 384, 386, 383, 385, 387,
	388, 389, 390, 699, 700, 391, 1543, 293, 1544, 0,
	0, 0, 0, 392, 393, 394, 701, 0, 0, 0,
	395, 1545, 396, 397, 398, 1546, 399, 400, 1547, 1290,
	401, 402, 403, 702, 703, 404, 405, 406, 407, 408,
	409, 410, 411, 412, 1548, 413, 704, 1549, 705, 414,
	1550, 415, 416, 417, 418, 419, 420, 421, 706, 707,
	708, 510, 1292, 422, 423, 1551, 424, 425, 426, 427,
	428, 0, 0, 0, 294, 429, 430, 431, 1552, 1291,
	511, 432, 709, 710, 1553, 711, 1554, 433, 434, 1293,
	712, 1294, 435, 436, 437, 1295, 438, 0, 0, 0,
	439, 440, 441, 442, 443, 444, 1555, 445, 447, 446,
	1556, 448, 713, 1296, 449, 450, 1297, 1557, 451, 452,
	453, 454, 455, 456, 459, 1558, 1559, 457, 458, 460,
	461, 0, 462, 463, 465, 468, 464, 466, 467, 469,
	482, 483, 470, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 485, 0, 484, 1298, 486, 487,
	488, 489, 490, 497, 499, 500, 495, 496, 498, 501,
	502, 504, 492, 493, 494, 1299, 503, 491, 1560, 295,
	1300, 505, 506, 507, 508, 1561, 714, 509, 715, 512,
	513, 1562, 0, 514, 0, 515, 1563, 1564, 517, 518,
	519, 1565, 1566, 520, 521, 716, 1301, 522, 1302, 717,
	523, 524, 516, 525, 526, 527, 528, 529, 530, 531,
	532, 533, 1567, 534, 535, 718, 536, 537, 538, 719,
	539, 540, 541, 720, 542, 721, 543, 544, 1568, 545,
	546, 547, 0, 548, 549, 550, 551, 552, 553, 554,
	555, 722, 556, 557, 559, 558, 560, 1569, 561, 0,
	562, 563, 564, 0, 0, 0, 0, 0, 565, 566,
	568, 0, 569, 570, 571, 572, 567, 573, 574, 575,
	576, 577, 1570, 578, 579, 580, 1303, 581, 582, 583,
	584, 585, 723, 586, 0, 587, 588, 595, 596, 597,
	589, 590, 591, 598, 599, 600, 601, 602, 1571, 604,
	605, 603, 606, 607, 608, 1572, 609, 610, 592, 593,
	611, 612, 1304, 613, 614, 615, 616, 617, 618, 619,
	724, 0, 620, 1573, 621, 622, 623, 624, 625, 627,
	594, 628, 633, 634, 725, 629, 630, 631, 632, 726,
	636, 637, 638, 1574, 639, 640, 0, 635, 626, 1575,
	641, 642, 643, 644, 645, 646, 0, 647, 648, 1576,
	649, 727, 728, 729, 730, 1577, 659, 1578, 650, 651,
	652, 653, 731, 654, 732, 1579, 655, 656, 657, 658,
	0, 660, 661, 1580, 1581, 662, 663, 665, 667, 668,
	664, 666, 669, 1582, 670, 1583, 0, 671, 672, 673,
	733, 734, 735, 1584, 675, 674, 676, 677, 678, 736,
	679, 680, 1585, 1586, 1587, 1588, 681, 682, 737, 683,
	684, 685, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1504, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4420, 296, 297, 299, 298, 300, 301, 302, 303,
	1510, 304, 305, 1511, 1512, 1513, 0, 1514, 686, 1515,
	1516, 1517, 306, 1518, 307, 308, 1288, 309, 310, 311,
	312, 313, 314, 315, 687, 688, 0, 316, 689, 317,
	690, 1519, 691, 318, 319, 320, 321, 322, 323, 1520,
	1521, 0, 324, 692, 693, 694, 1522, 325, 326, 695,
	1523, 1590, 1524, 327, 328, 329, 330, 331, 332, 333,
	334, 0, 1525, 336, 337, 338, 335, 339, 1526, 340,
	0, 341, 342, 343, 344, 345, 346, 1527, 347, 348,
	349, 1289, 350, 351, 352, 1528, 1529, 1531, 1530, 1532,
	1533, 1534, 353, 354, 355, 356, 357, 0, 358, 360,
	696, 697, 1535, 363, 359, 361, 1536, 364, 362, 365,
	1537, 366, 367, 368, 1538, 1539, 369, 370, 371, 1540,
	372, 373, 374, 1541, 375, 376, 377, 1542, 378, 379,
	698, 380, 381, 382, 384, 386, 383, 385, 387, 388,
	389, 390, 699, 700, 391, 1543, 293, 1544, 0, 0,
	0, 0, 392, 393, 394, 701, 0, 0, 0, 395,
	1545, 396, 397, 398, 1546, 399, 400, 1547, 1290, 401,
	402, 403, 702, 703, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 1548, 413, 704, 1549, 705, 414, 1550,
	415, 416, 417, 418, 419, 420, 421, 706, 707, 708,
	510, 1292, 422, 423, 1551, 424, 425, 426, 427, 428,
	0, 0, 0, 294, 429, 430, 431, 1552, 1291, 511,
	432, 709, 710, 1553, 711, 1554, 433, 434, 1293, 712,
	1294, 435, 436, 437, 1295, 438, 0, 0, 0, 439,
	440, 441, 442, 443, 444, 1555, 445, 447, 446, 1556,
	448, 713, 1296, 449, 450, 1297, 1557, 451, 452, 453,
	454, 455, 456, 459, 1558, 1559, 457, 458, 460, 461,
	0, 462, 463, 465, 468, 464, 466, 467, 469, 482,
	483, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 485, 0, 484, 1298, 486, 487, 488,
	489, 490, 497, 499, 500, 495, 496, 498, 501, 502,
	504, 492, 493, 494, 1299, 503, 491, 1560, 295, 1300,
	505, 506, 507, 508, 1561, 714, 509, 715, 512, 513,
	1562, 0, 514, 0, 515, 1563, 1564, 517, 518, 519,
	1565, 1566, 520, 521, 716, 1301, 522, 1302, 717, 523,
	524, 516, 525, 526, 527, 528, 529, 530, 531, 532,
	533, 1567, 534, 535, 718, 536, 537, 538, 719, 539,
	540, 541, 720, 542, 721, 543, 544, 1568, 545, 546,
	547, 0, 548, 549, 550, 551, 552, 553, 554, 555,
	722, 556, 557, 559, 558, 560, 1569, 561, 0, 562,
	563, 564, 0, 0, 0, 0, 0, 565, 566, 568,
	0, 569, 570, 571, 572, 567, 573, 574, 575, 576,
	577, 1570, 578, 579, 580, 1303, 581, 582, 583, 584,
	585, 723, 586, 0, 587, 588, 595, 596, 597, 589,
	590, 591, 598, 599, 600, 601, 602, 1571, 604, 605,
	603, 606, 607, 608, 1572, 609, 610, 592, 593, 611,
	612, 1304, 613, 614, 615, 616, 617, 618, 619, 724,
	0, 620, 1573, 621, 622, 623, 624, 625, 627, 594,
	628, 633, 634, 725, 629, 630, 631, 632, 726, 636,
	637, 638, 1574, 639, 640, 0, 635, 626, 1575, 641,
	642, 643, 644, 645, 646, 0, 647, 648, 1576, 649,
	727, 728, 729, 730, 1577, 659, 1578, 650, 651, 652,
	653, 731, 654, 732, 1579, 655, 656, 657, 658, 0,
	660, 661, 1580, 1581, 662, 663, 665, 667, 668, 664,
	666, 669, 1582, 670, 1583, 0, 671, 672, 673, 733,
	734, 735, 1584, 675, 674, 676, 677, 678, 736, 679,
	680, 1585, 1586, 1587, 1588, 681, 682, 737, 683, 684,
	685, 0, 0, 0, 0, 0, 0, 0, 1504, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4664, 296, 297, 299, 298, 300,
	301, 302, 303, 1510, 304, 305, 1511, 1512, 1513, 0,
	1514, 686, 1515, 1516, 1517, 306, 1518, 307, 308, 1288,
	309, 310, 311, 312, 313, 314, 315, 687, 688, 0,
	316, 689, 317, 690, 1519, 691, 318, 319, 320, 321,
	322, 323, 1520, 1521, 0, 324, 692, 693, 694, 1522,
	325, 326, 695, 1523, 1590, 1524, 327, 328, 329, 330,
	331, 332, 333, 334, 0, 1525, 336, 337, 338, 335,
	339, 1526, 340, 0, 341, 342, 343, 344, 345, 346,
	1527, 347, 348, 349, 1289, 350, 351, 352, 1528, 1529,
	1531, 1530, 1532, 1533, 1534, 353, 354, 355, 356, 357,
	0, 358, 360, 696, 697, 1535, 363, 359, 361, 1536,
	364, 362, 365, 1537, 366, 367, 368, 1538, 1539, 369,
	370, 371, 1540, 372, 373, 374, 1541, 375, 376, 377,
	1542, 378, 379, 698, 380, 381, 382, 384, 386, 383,
	385, 387, 388, 389, 390, 699, 700, 391, 1543, 293,
	1544, 0, 0, 0, 0, 392, 393, 394, 701, 0,
	0, 0, 395, 1545, 396, 397, 398, 1546, 399, 400,
	1547, 1290, 401, 402, 403, 702, 703, 404, 405, 406,
	407, 408, 409, 410, 411, 412, 1548, 413, 704, 1549,
	705, 414, 1550, 415, 416, 417, 418, 419, 420, 421,
	706, 707, 708, 510, 1292, 422, 423, 1551, 424, 425,
	426, 427, 428, 0, 0, 0, 294, 429, 430, 431,
	1552, 1291, 511, 432, 709, 710, 1553, 711, 1554, 433,
	434, 1293, 712, 1294, 435, 436, 437, 1295, 438, 0,
	0, 0, 439, 440, 441, 442, 443, 444, 1555, 445,
	447, 446, 1556, 448, 713, 1296, 449, 450, 1297, 1557,
	451, 452, 453, 454, 455, 456, 459, 1558, 1559, 457,
	458, 460, 461, 0, 462, 463, 465, 468, 464, 466,
	467, 469, 482, 483, 470, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 485, 0, 484, 1298,
	486, 487, 488, 489, 490, 497, 499, 500, 495, 496,
	498, 501, 502, 504, 492, 493, 494, 1299, 503, 491,
	1560, 295, 1300, 505, 506, 507, 508, 1561, 714, 509,
	715, 512, 513, 1562, 0, 514, 0, 515, 1563, 1564,
	517, 518, 519, 1565, 1566, 520, 521, 716, 1301, 522,
	1302, 717, 523, 524, 516, 525, 526, 527, 528, 529,
	530, 531, 532, 533, 1567, 534, 535, 718, 536, 537,
	538, 719, 539, 540, 541, 720, 542, 721, 543, 544,
	1568, 545, 546, 547, 0, 548, 549, 550, 551, 552,
	553, 554, 555, 722, 556, 557, 559, 558, 560, 1569,
	561, 0, 562, 563, 564, 0, 0, 0, 0, 0,
	565, 566, 568, 0, 569, 570, 571, 572, 567, 573,
	574, 575, 576, 577, 1570, 578, 579, 580, 1303, 581,
	582, 583, 584, 585, 723, 586, 0, 587, 588, 595,
	596, 597, 589, 590, 591, 598, 599, 600, 601, 602,
	1571, 604, 605, 603, 606, 607, 608, 1572, 609, 610,
	592, 593, 611, 612, 1304, 613, 614, 615, 616, 617,
	618, 619, 724, 0, 620, 1573, 621, 622, 623, 624,
	625, 627, 594, 628, 633, 634, 725, 629, 630, 631,
	632, 726, 636, 637, 638, 1574, 639, 640, 0, 635,
	626, 1575, 641, 642, 643, 644, 645, 646, 0, 647,
	648, 1576, 649, 727, 728, 729, 730, 1577, 659, 1578,
	650, 651, 652, 653, 731, 654, 732, 1579, 655, 656,
	657, 658, 0, 660, 661, 1580, 1581, 662, 663, 665,
	667, 668, 664, 666, 669, 1582, 670, 1583, 0, 671,
	672, 673, 733, 734, 735, 1584, 675, 674, 676, 677,
	678, 736, 679, 680, 1585, 1586, 1587, 1588, 681, 682,
	737, 683, 684, 685, 0, 0, 0, 0, 0, 0,
	0, 1504, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4526, 296, 297,
	299, 298, 300, 301, 302, 303, 1510, 304, 305, 1511,
	1512, 1513, 0, 1514, 686, 1515, 1516, 1517, 306, 1518,
	307, 308, 1288, 309, 310, 311, 312, 313, 314, 315,
	687, 688, 0, 316, 689, 317, 690, 1519, 691, 318,
	319, 320, 321, 322, 323, 1520, 1521, 0, 324, 692,
	693, 694, 1522, 325, 326, 695, 1523, 1590, 1524, 327,
	328, 329, 330, 331, 332, 333, 334, 0, 1525, 336,
	337, 338, 335, 339, 1526, 340, 0, 341, 342, 343,
	344, 345, 346, 1527, 347, 348, 349, 1289, 350, 351,
	352, 1528, 1529, 1531, 1530, 1532, 1533, 1534, 353, 354,
	355, 356, 357, 0, 358, 360, 696, 697, 1535, 363,
	359, 361, 1536, 364, 362, 365, 1537, 366, 367, 368,
	1538, 1539, 369, 370, 371, 1540, 372, 373, 374, 1541,
	375, 376, 377, 1542, 378, 379, 698, 380, 381, 382,
	384, 386, 383, 385, 387, 388, 389, 390, 699, 700,
	391, 1543, 293, 1544, 0, 0, 0, 0, 392, 393,
	394, 701, 0, 0, 0, 395, 1545, 396, 397, 398,
	1546, 399, 400, 1547, 1290, 401, 402, 403, 702, 703,
	404, 405, 406, 407, 408, 409, 410, 411, 412, 1548,
	413, 704, 1549, 705, 414, 1550, 415, 416, 417, 418,
	419, 420, 421, 706, 707, 708, 510, 1292, 422, 423,
	1551, 424, 425, 426, 427, 428, 0, 0, 0, 294,
	429, 430, 431, 1552, 1291, 511, 432, 709, 710, 1553,
	711, 1554, 433, 434, 1293, 712, 1294, 435, 436, 437,
	1295, 438, 0, 0, 0, 439, 440, 441, 442, 443,
	444, 1555, 445, 447, 446, 1556, 448, 713, 1296, 449,
	450, 1297, 1557, 451, 452, 453, 454, 455, 456, 459,
	1558, 1559, 457, 458, 460, 461, 0, 462, 463, 465,
	468, 464, 466, 467, 469, 482, 483, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 485,
	0, 484, 1298, 486, 487, 488, 489, 490, 497, 499,
	500, 495, 496, 498, 501, 502, 504, 492, 493, 494,
	1299, 503, 491, 1560, 295, 1300, 505, 506, 507, 508,
	1561, 714, 509, 715, 512, 513, 1562, 0, 514, 0,
	515, 1563, 1564, 517, 518, 519, 1565, 1566, 520, 521,
	716, 1301, 522, 1302, 717, 523, 524, 516, 525, 526,
	527, 528, 529, 530, 531, 532, 533, 1567, 534, 535,
	718, 536, 537, 538, 719, 539, 540, 541, 720, 542,
	721, 543, 544, 1568, 545, 546, 547, 0, 548, 549,
	550, 551, 552, 553, 554, 555, 722, 556, 557, 559,
	558, 560, 1569, 561, 0, 562, 563, 564, 0, 0,
	0, 0, 0, 565, 566, 568, 0, 569, 570, 571,
	572, 567, 573, 574, 575, 576, 577, 1570, 578, 579,
	580, 1303, 581, 582, 583, 584, 585, 723, 586, 0,
	587, 588, 595, 596, 597, 589, 590, 591, 598, 599,
	600, 601, 602, 1571, 604, 605, 603, 606, 607, 608,
	1572, 609, 610, 592, 593, 611, 612, 1304, 613, 614,
	615, 616, 617, 618, 619, 724, 0, 620, 1573, 621,
	622, 623, 624, 625, 627, 594, 628, 633, 634, 725,
	629, 630, 631, 632, 726, 636, 637, 638, 1574, 639,
	640, 0, 635, 626, 1575, 641, 642, 643, 644, 645,
	646, 0, 647, 648, 1576, 649, 727, 728, 729, 730,
	1577, 659, 1578, 650, 651, 652, 653, 731, 654, 732,
	1579, 655, 656, 657, 658, 0, 660, 661, 1580, 1581,
	662, 663, 665, 667, 668, 664, 666, 669, 1582, 670,
	1583, 0, 671, 672, 673, 733, 734, 735, 1584, 675,
	674, 676, 677, 678, 736, 679, 680, 1585, 1586, 1587,
	1588, 681, 682, 737, 683, 684, 685, 0, 0, 0,
	0, 0, 0, 0, 1504, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4349, 296, 297, 299, 298, 300, 301, 302, 303, 1510,
	304, 305, 1511, 1512, 1513, 0, 1514, 686, 1515, 1516,
	1517, 306, 1518, 307, 308, 1288, 309, 310, 311, 312,
	313, 314, 315, 687, 688, 0, 316, 689, 317, 690,
	1519, 691, 318, 319, 320, 321, 322, 323, 1520, 1521,
	0, 324, 692, 693, 694, 1522, 325, 326, 695, 1523,
	1590, 1524, 327, 328, 329, 330, 331, 332, 333, 334,
	0, 1525, 336, 337, 338, 335, 339, 1526, 340, 0,
	341, 342, 343, 344, 345, 346, 1527, 347, 348, 349,
	1289, 350, 351, 352, 1528, 1529, 1531, 1530, 1532, 1533,
	1534, 353, 354, 355, 356, 357, 0, 358, 360, 696,
	697, 1535, 363, 359, 361, 1536, 364, 362, 365, 1537,
	366, 367, 368, 1538, 1539, 369, 370, 371, 1540, 372,
	373, 374, 1541, 375, 376, 377, 1542, 378, 379, 698,
	380, 381, 382, 384, 386, 383, 385, 387, 388, 389,
	390, 699, 700, 391, 1543, 293, 1544, 0, 0, 0,
	0, 392, 393, 394, 701, 0, 0, 0, 395, 1545,
	396, 397, 398, 1546, 399, 400, 1547, 1290, 401, 402,
	403, 702, 703, 404, 405, 406, 407, 408, 409, 410,
	411, 412, 1548, 413, 704, 1549, 705, 414, 1550, 415,
	416, 417, 418, 419, 420, 421, 706, 707, 708, 510,
	1292, 422, 423, 1551, 424, 425, 426, 427, 428, 0,
	0, 0, 294, 429, 430, 431, 1552, 1291, 511, 432,
	709, 710, 1553, 711, 1554, 433, 434, 1293, 712, 1294,
	435, 436, 437, 1295, 438, 0, 0, 0, 439, 440,
	441, 442, 443, 444, 1555, 445, 447, 446, 1556, 448,
	713, 1296, 449, 450, 1297, 1557, 451, 452, 453, 454,
	455, 456, 459, 1558, 1559, 457, 458, 460, 461, 0,
	462, 463, 465, 468, 464, 466, 467, 469, 482, 483,
	470, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 485, 0, 484, 1298, 486, 487, 488, 489,
	490, 497, 499, 500, 495, 496, 498, 501, 502, 504,
	492, 493, 494, 1299, 503, 491, 1560, 295, 1300, 505,
	506, 507, 508, 1561, 714, 509, 715, 512, 513, 1562,
	0, 514, 0, 515, 1563, 1564, 517, 518, 519, 1565,
	1566, 520, 521, 716, 1301, 522, 1302, 717, 523, 524,
	516, 525, 526, 527, 528, 529, 530, 531, 532, 533,
	1567, 534, 535, 718, 536, 537, 538, 719, 539, 540,
	541, 720, 542, 721, 543, 544, 1568, 545, 546, 547,
	0, 548, 549, 550, 551, 552, 553, 554, 555, 722,
	556, 557, 559, 558, 560, 1569, 561, 0, 562, 563,
	564, 0, 0, 0, 0, 0, 565, 566, 568, 0,
	569, 570, 571, 572, 567, 573, 574, 575, 576, 577,
	1570, 578, 579, 580, 1303, 581, 582, 583, 584, 585,
	723, 586, 0, 587, 588, 595, 596, 597, 589, 590,
	591, 598, 599, 600, 601, 602, 1571, 604, 605, 603,
	606, 607, 608, 1572, 609, 610, 592, 593, 611, 612,
	1304, 613, 614, 615, 616, 617, 618, 619, 724, 0,
	620, 1573, 621, 622, 623, 624, 625, 627, 594, 628,
	633, 634, 725, 629, 630, 631, 632, 726, 636, 637,
	638, 1574, 639, 640, 0, 635, 626, 1575, 641, 642,
	643, 644, 645, 646, 0, 647, 648, 1576, 649, 727,
	728, 729, 730, 1577, 659, 1578, 650, 651, 652, 653,
	731, 654, 732, 1579, 655, 656, 657, 658, 0, 660,
	661, 1580, 1581, 662, 663, 665, 667, 668, 664, 666,
	669, 1582, 670, 1583, 0, 671, 672, 673, 733, 734,
	735, 1584, 675, 674, 676, 677, 678, 736, 679, 680,
	1585, 1586, 1587, 1588, 681, 682, 737, 683, 684, 685,
	0, 0, 0, 0, 0, 0, 0, 1504, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4003, 296, 297, 299, 298, 300, 301,
	302, 303, 1510, 304, 305, 1511, 1512, 1513, 0, 1514,
	686, 1515, 1516, 1517, 306, 1518, 307, 308, 1288, 309,
	310, 311, 312, 313, 314, 315, 687, 688, 0, 316,
	689, 317, 690, 1519, 691, 318, 319, 320, 321, 322,
	323, 1520, 1521, 0, 324, 692, 693, 694, 1522, 325,
	326, 695, 1523, 1590, 1524, 327, 328, 329, 330, 331,
	332, 333, 334, 0, 1525, 336, 337, 338, 335, 339,
	1526, 340, 0, 341, 342, 343, 344, 345, 346, 1527,
	347, 348, 349, 1289, 350, 351, 352, 1528, 1529, 1531,
	1530, 1532, 1533, 1534, 353, 354, 355, 356, 357, 0,
	358, 360, 696, 697, 1535, 363, 359, 361, 1536, 364,
	362, 365, 1537, 366, 367, 368, 1538, 1539, 369, 370,
	371, 1540, 372, 373, 374, 1541, 375, 376, 377, 1542,
	378, 379, 698, 380, 381, 382, 384, 386, 383, 385,
	387, 388, 389, 390, 699, 700, 391, 1543, 293, 1544,
	0, 0, 0, 0, 392, 393, 394, 701, 0, 0,
	0, 395, 1545, 396, 397, 398, 1546, 399, 400, 1547,
	1290, 401, 402, 403, 702, 703, 404, 405, 406, 407,
	408, 409, 410, 411, 412, 1548, 413, 704, 1549, 705,
	414, 1550, 415, 416, 417, 418, 419, 420, 421, 706,
	707, 708, 510, 1292, 422, 423, 1551, 424, 425, 426,
	427, 428, 0, 0, 0, 294, 429, 430, 431, 1552,
	1291, 511, 432, 709, 710, 1553, 711, 1554, 433, 434,
	1293, 712, 1294, 435, 436, 437, 1295, 438, 0, 0,
	0, 439, 440, 441, 442, 443, 444, 1555, 445, 447,
	446, 1556, 448, 713, 1296, 449, 450, 1297, 1557, 451,
	452, 453, 454, 455, 456, 459, 1558, 1559, 457, 458,
	460, 461, 0, 462, 463, 465, 468, 464, 466, 467,
	469, 482, 483, 470, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 485, 0, 484, 1298, 486,
	487, 488, 489, 490, 497, 499, 500, 495, 496, 498,
	501, 502, 504, 492, 493, 494, 1299, 503, 491, 1560,
	295, 1300, 505, 506, 507, 508, 1561, 714, 509, 715,
	512, 513, 1562, 0, 514, 0, 515, 1563, 1564, 517,
	518, 519, 1565, 1566, 520, 521, 716, 1301, 522, 1302,
	717, 523, 524, 516, 525, 526, 527, 528, 529, 530,
	531, 532, 533, 1567, 534, 535, 718, 536, 537, 538,
	719, 539, 540, 541, 720, 542, 721, 543, 544, 1568,
	545, 546, 547, 0, 548, 549, 550, 551, 552, 553,
	554, 555, 722, 556, 557, 559, 558, 560, 1569, 561,
	0, 562, 563, 564, 0, 0, 0, 0, 0, 565,
	566, 568, 0, 569, 570, 571, 572, 567, 573, 574,
	575, 576, 577, 1570, 578, 579, 580, 1303, 581, 582,
	583, 584, 585, 723, 586, 0, 587, 588, 595, 596,
	597, 589, 590, 591, 598, 599, 600, 601, 602, 1571,
	604, 605, 603, 606, 607, 608, 1572, 609, 610, 592,
	593, 611, 612, 1304, 613, 614, 615, 616, 617, 618,
	619, 724, 0, 620, 1573, 621, 622, 623, 624, 625,
	627, 594, 628, 633, 634, 725, 629, 630, 631, 632,
	726, 636, 637, 638, 1574, 639, 640, 0, 635, 626,
	1575, 641, 642, 643, 644, 645, 646, 0, 647, 648,
	1576, 649, 727, 728, 729, 730, 1577, 659, 1578, 650,
	651, 652, 653, 731, 654, 732, 1579, 655, 656, 657,
	658, 0, 660, 661, 1580, 1581, 662, 663, 665, 667,
	668, 664, 666, 669, 1582, 670, 1583, 0, 671, 672,
	673, 733, 734, 735, 1584, 675, 674, 676, 677, 678,
	736, 679, 680, 1585, 1586, 1587, 1588, 681, 682, 737,
	683, 684, 685, 0, 0, 0, 0, 0, 0, 0,
	1504, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3814, 296, 297, 299,
	298, 300, 301, 302, 303, 1510, 304, 305, 1511, 1512,
	1513, 0, 1514, 686, 1515, 1516, 1517, 306, 1518, 307,
	308, 1288, 309, 310, 311, 312, 313, 314, 315, 687,
	688, 0, 316, 689, 317, 690, 1519, 691, 318, 319,
	320, 321, 322, 323, 1520, 1521, 0, 324, 692, 693,
	694, 1522, 325, 326, 695, 1523, 1590, 1524, 327, 328,
	329, 330, 331, 332, 333, 334, 0, 1525, 336, 337,
	338, 335, 339, 1526, 340, 0, 341, 342, 343, 344,
	345, 346, 1527, 347, 348, 349, 1289, 350, 351, 352,
	1528, 1529, 1531, 1530, 1532, 1533, 1534, 353, 354, 355,
	356, 357, 0, 358, 360, 696, 697, 1535, 363, 359,
	361, 1536, 364, 362, 365, 1537, 366, 367, 368, 1538,
	1539, 369, 370, 371, 1540, 372, 373, 374, 1541, 375,
	376, 377, 1542, 378, 379, 698, 380, 381, 382, 384,
	386, 383, 385, 387, 388, 389, 390, 699, 700, 391,
	1543, 293, 1544, 0, 0, 0, 0, 392, 393, 394,
	701, 0, 0, 0, 395, 1545, 396, 397, 398, 1546,
	399, 400, 1547, 1290, 401, 402, 403, 702, 703, 404,
	405, 406, 407, 408, 409, 410, 411, 412, 1548, 413,
	704, 1549, 705, 414, 1550, 415, 416, 417, 418, 419,
	420, 421, 706, 707, 708, 510, 1292, 422, 423, 1551,
	424, 425, 426, 427, 428, 0, 0, 0, 294, 429,
	430, 431, 1552, 1291, 511, 432, 709, 710, 1553, 711,
	1554, 433, 434, 1293, 712, 1294, 435, 436, 437, 1295,
	438, 0, 0, 0, 439, 440, 441, 442, 443, 444,
	1555, 445, 447, 446, 1556, 448, 713, 1296, 449, 450,
	1297, 1557, 451, 452, 453, 454, 455, 456, 459, 1558,
	1559, 457, 458, 460, 461, 0, 462, 463, 465, 468,
	464, 466, 467, 469, 482, 483, 470, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 485, 0,
	484, 1298, 486, 487, 488, 489, 490, 497, 499, 500,
	495, 496, 498, 501, 502, 504, 492, 493, 494, 1299,
	503, 491, 1560, 295, 1300, 505, 506, 507, 508, 1561,
	714, 509, 715, 512, 513, 1562, 0, 514, 0, 515,
	1563, 1564, 517, 518, 519, 1565, 1566, 520, 521, 716,
	1301, 522, 1302, 717, 523, 524, 516, 525, 526, 527,
	528, 529, 530, 531, 532, 533, 1567, 534, 535, 718,
	536, 537, 538, 719, 539, 540, 541, 720, 542, 721,
	543, 544, 1568, 545, 546, 547, 0, 548, 549, 550,
	551, 552, 553, 554, 555, 722, 556, 557, 559, 558,
	560, 1569, 561, 0, 562, 563, 564, 0, 0, 0,
	0, 0, 565, 566, 568, 0, 569, 570, 571, 572,
	567, 573, 574, 575, 576, 577, 1570, 578, 579, 580,
	1303, 581, 582, 583, 584, 585, 723, 586, 0, 587,
	588, 595, 596, 597, 589, 590, 591, 598, 599, 600,
	601, 602, 1571, 604, 605, 603, 606, 607, 608, 1572,
	609, 610, 592, 593, 611, 612, 1304, 613, 614, 615,
	616, 617, 618, 619, 724, 0, 620, 1573, 621, 622,
	623, 624, 625, 627, 594, 628, 633, 634, 725, 629,
	630, 631, 632, 726, 636, 637, 638, 1574, 639, 640,
	0, 635, 626, 1575, 641, 642, 643, 644, 645, 646,
	0, 647, 648, 1576, 649, 727, 728, 729, 730, 1577,
	659, 1578, 650, 651, 652, 653, 731, 654, 732, 1579,
	655, 656, 657, 658, 0, 660, 661, 1580, 1581, 662,
	663, 665, 667, 668, 664, 666, 669, 1582, 670, 1583,
	0, 671, 672, 673, 733, 734, 735, 1584, 675, 674,
	676, 677, 678, 736, 679, 680, 1585, 1586, 1587, 1588,
	681, 682, 737, 683, 684, 685, 0, 0, 0, 0,
	0, 0, 0, 1504, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2799,
	296, 297, 299, 298, 300, 301, 302, 303, 1510, 304,
	305, 1511, 1512, 1513, 0, 1514, 686, 1515, 1516, 1517,
	306, 1518, 307, 308, 1288, 309, 310, 311, 312, 313,
	314, 315, 687, 688, 0, 316, 689, 317, 690, 1519,
	691, 318, 319, 320, 321, 322, 323, 1520, 1521, 0,
	324, 692, 693, 694, 1522, 325, 326, 695, 1523, 1590,
	1524, 327, 328, 329, 330, 331, 332, 333, 334, 0,
	1525, 336, 337, 338, 335, 339, 1526, 340, 0, 341,
	342, 343, 344, 345, 346, 1527, 347, 348, 349, 1289,
	350, 351, 352, 1528, 1529, 1531, 1530, 1532, 1533, 1534,
	353, 354, 355, 356, 357, 0, 358, 360, 696, 697,
	1535, 363, 359, 361, 1536, 364, 362, 365, 1537, 366,
	367, 368, 1538, 1539, 369, 370, 371, 1540, 372, 373,
	374, 1541, 375, 376, 377, 1542, 378, 379, 698, 380,
	381, 382, 384, 386, 383, 385, 387, 388, 389, 390,
	699, 700, 391, 1543, 293, 1544, 0, 0, 0, 0,
	392, 393, 394, 701, 0, 0, 0, 395, 1545, 396,
	397, 398, 1546, 399, 400, 1547, 1290, 401, 402, 403,
	702, 703, 404, 405, 406, 407, 408, 409, 410, 411,
	412, 1548, 413, 704, 1549, 705, 414, 1550, 415, 416,
	417, 418, 419, 420, 421, 706, 707, 708, 510, 1292,
	422, 423, 1551, 424, 425, 426, 427, 428, 0, 0,
	0, 294, 429, 430, 431, 1552, 1291, 511, 432, 709,
	710, 1553, 711, 1554, 433, 434, 1293, 712, 1294, 435,
	436, 437, 1295, 438, 0, 0, 0, 439, 440, 441,
	442, 443, 444, 1555, 445, 447, 446, 1556, 448, 713,
	1296, 449, 450, 1297, 1557, 451, 452, 453, 454, 455,
	456, 459, 1558, 1559, 457, 458, 460, 461, 0, 462,
	463, 465, 468, 464, 466, 467, 469, 482, 483, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 485, 0, 484, 1298, 486, 487, 488, 489, 490,
	497, 499, 500, 495, 496, 498, 501, 502, 504, 492,
	493, 494, 1299, 503, 491, 1560, 295, 1300, 505, 506,
	507, 508, 1561, 714, 509, 715, 512, 513, 1562, 0,
	514, 0, 515, 1563, 1564, 517, 518, 519, 1565, 1566,
	520, 521, 716, 1301, 522, 1302, 717, 523, 524, 516,
	525, 526, 527, 528, 529, 530, 531, 532, 533, 1567,
	534, 535, 718, 536, 537, 538, 719, 539, 540, 541,
	720, 542, 721, 543, 544, 1568, 545, 546, 547, 0,
	548, 549, 550, 551, 552, 553, 554, 555, 722, 556,
	557, 559, 558, 560, 1569, 561, 0, 562, 563, 564,
	0, 0, 0, 0, 0, 565, 566, 568, 0, 569,
	570, 571, 572, 567, 573, 574, 575, 576, 577, 1570,
	578, 579, 580, 1303, 581, 582, 583, 584, 585, 723,
	586, 0, 587, 588, 595, 596, 597, 589, 590, 591,
	598, 599, 600, 601, 602, 1571, 604, 605, 603, 606,
	607, 608, 1572, 609, 610, 592, 593, 611, 612, 1304,
	613, 614, 615, 616, 617, 618, 619, 724, 0, 620,
	1573, 621, 622, 623, 624, 625, 627, 594, 628, 633,
	634, 725, 629, 630, 631, 632, 726, 636, 637, 638,
	1574, 639, 640, 0, 635, 626, 1575, 641, 642, 643,
	644, 645, 646, 0, 647, 648, 1576, 649, 727, 728,
	729, 730, 1577, 659, 1578, 650, 651, 652, 653, 731,
	654, 732, 1579, 655, 656, 657, 658, 0, 660, 661,
	1580, 1581, 662, 663, 665, 667, 668, 664, 666, 669,
	1582, 670, 1583, 0, 671, 672, 673, 733, 734, 735,
	1584, 675, 674, 676, 677, 678, 736, 679, 680, 1585,
	1586, 1587, 1588, 681, 682, 737, 683, 684, 685, 0,
	0, 0, 0, 0, 1501, 0, 1504, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2420, 296, 297, 299, 298, 300, 301, 302,
	303, 1510, 304, 305, 1511, 1512, 1513, 0, 1514, 686,
	1515, 1516, 1517, 306, 1518, 307, 308, 1288, 309, 310,
	311, 312, 313, 314, 315, 687, 688, 0, 316, 689,
	317, 690, 1519, 691, 318, 319, 320, 321, 322, 323,
	1520, 1521, 0, 324, 692, 693, 694, 1522, 325, 326,
	695, 1523, 1590, 1524, 327, 328, 329, 330, 331, 332,
	333, 334, 0, 1525, 336, 337, 338, 335, 339, 1526,
	340, 0, 341, 342, 343, 344, 345, 346, 1527, 347,
	348, 349, 1289, 350, 351, 352, 1528, 1529, 1531, 1530,
	1532, 1533, 1534, 353, 354, 355, 356, 357, 0, 358,
	360, 696, 697, 1535, 363, 359, 361, 1536, 364, 362,
	365, 1537, 366, 367, 368, 1538, 1539, 369, 370, 371,
	1540, 372, 373, 374, 1541, 375, 376, 377, 1542, 378,
	379, 698, 380, 381, 382, 384, 386, 383, 385, 387,
	388, 389, 390, 699, 700, 391, 1543, 293, 1544, 0,
	0, 0, 0, 392, 393, 394, 701, 0, 0, 0,
	395, 1545, 396, 397, 398, 1546, 399, 400, 1547, 1290,
	401, 402, 403, 702, 703, 404, 405, 406, 407, 408,
	409, 410, 411, 412, 1548, 413, 704, 1549, 705, 414,
	1550, 415, 416, 417, 418, 419, 420, 421, 706, 707,
	708, 510, 1292, 422, 423, 1551, 424, 425, 426, 427,
	428, 0, 0, 0, 294, 429, 430, 431, 1552, 1291,
	511, 432, 709, 710, 1553, 711, 1554, 433, 434, 1293,
	712, 1294, 435, 436, 437, 1295, 438, 0, 0, 0,
	439, 440, 441, 442, 443, 444, 1555, 445, 447, 446,
	1556, 448, 713, 1296, 449, 450, 1297, 1557, 451, 452,
	453, 454, 455, 456, 459, 1558, 1559, 457, 458, 460,
	461, 0, 462, 463, 465, 468, 464, 466, 467, 469,
	482, 483, 470, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 485, 0, 484, 1298, 486, 487,
	488, 489, 490, 497, 499, 500, 495, 496, 498, 501,
	502, 504, 492, 493, 494, 1299, 503, 491, 1560, 295,
	1300, 505, 506, 507, 508, 1561, 714, 509, 715, 512,
	513, 1562, 0, 514, 0, 515, 1563, 1564, 517, 518,
	519, 1565, 1566, 520, 521, 716, 1301, 522, 1302, 717,
	523, 524, 516, 525, 526, 527, 528, 529, 530, 531,
	532, 533, 1567, 534, 535, 718, 536, 537, 538, 719,
	539, 540, 541, 720, 542, 721, 543, 544, 1568, 545,
	546, 547, 0, 548, 549, 550, 551, 552, 553, 554,
	555, 722, 556, 557, 559, 558, 560, 1569, 561, 0,
	562, 563, 564, 0, 0, 0, 0, 0, 565, 566,
	568, 0, 569, 570, 571, 572, 567, 573, 574, 575,
	576, 577, 1570, 578, 579, 580, 1303, 581, 582, 583,
	584, 585, 723, 586, 0, 587, 588, 595, 596, 597,
	589, 590, 591, 598, 599, 600, 601, 602, 1571, 604,
	605, 603, 606, 607, 608, 1572, 609, 610, 592, 593,
	611, 612, 1304, 613, 614, 615, 616, 617, 618, 619,
	724, 0, 620, 1573, 621, 622, 623, 624, 625, 627,
	594, 628, 633, 634, 725, 629, 630, 631, 632, 726,
	636, 637, 638, 1574, 639, 640, 0, 635, 626, 1575,
	641, 642, 643, 644, 645, 646, 0, 647, 648, 1576,
	649, 727, 728, 729, 730, 1577, 659, 1578, 650, 651,
	652, 653, 731, 654, 732, 1579, 655, 656, 657, 658,
	0, 660, 661, 1580, 1581, 662, 663, 665, 667, 668,
	664, 666, 669, 1582, 670, 1583, 0, 671, 672, 673,
	733, 734, 735, 1584, 675, 674, 676, 677, 678, 736,
	679, 680, 1585, 1586, 1587, 1588, 681, 682, 737, 683,
	684, 685, 1504, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 296,
	297, 299, 298, 300, 301, 302, 303, 1510, 304, 305,
	1511, 1512, 1513, 0, 1514, 686, 1515, 1516, 1517, 306,
	1518, 307, 308, 1288, 309, 310, 311, 312, 313, 314,
	315, 687, 688, 0, 316, 689, 317, 690, 1519, 691,
	318, 319, 320, 321, 322, 323, 1520, 1521, 0, 324,
	692, 693, 694, 1522, 325, 326, 695, 1523, 1590, 1524,
	327, 328, 329, 330, 331, 332, 333, 334, 0, 1525,
	336, 337, 338, 335, 339, 1526, 340, 0, 341, 342,
	343, 344, 345, 346, 1527, 347, 348, 349, 1289, 350,
	351, 352, 1528, 1529, 1531, 1530, 1532, 1533, 1534, 353,
	354, 355, 356, 357, 0, 358, 360, 696, 697, 1535,
	363, 359, 361, 1536, 364, 362, 365, 1537, 366, 367,
	368, 1538, 1539, 369, 370, 371, 1540, 372, 373, 374,
	1541, 375, 376, 377, 1542, 378, 379, 698, 380, 381,
	382, 384, 386, 383, 385, 387, 388, 389, 390, 699,
	700, 391, 1543, 293, 1544, 0, 0, 0, 0, 392,
	393, 394, 701, 0, 0, 0, 395, 1545, 396, 397,
	398, 1546, 399, 400, 1547, 1290, 401, 402, 403, 702,
	703, 404, 405, 406, 407, 408, 409, 410, 411, 412,
	1548, 413, 704, 1549, 705, 414, 1550, 415, 416, 417,
	418, 419, 420, 421, 706, 707, 708, 510, 1292, 422,
	423, 1551, 424, 425, 426, 427, 428, 0, 0, 0,
	294, 429, 430, 431, 1552, 1291, 511, 432, 709, 710,
	1553, 711, 1554, 433, 434, 1293, 712, 1294, 435, 436,
	437, 1295, 438, 0, 0, 0, 439, 440, 441, 442,
	443, 444, 1555, 445, 447, 446, 1556, 448, 713, 1296,
	449, 450, 1297, 1557, 451, 452, 453, 454, 455, 456,
	459, 1558, 1559, 457, 458, 460, 461, 0, 462, 463,
	465, 468, 464, 466, 467, 469, 482, 483, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	485, 0, 484, 1298, 486, 487, 488, 489, 490, 497,
	499, 500, 495, 496, 498, 501, 502, 504, 492, 493,
	494, 1299, 503, 491, 1560, 295, 1300, 505, 506, 507,
	508, 1561, 714, 509, 715, 512, 513, 1562, 0, 514,
	0, 515, 1563, 1564, 517, 518, 519, 1565, 1566, 520,
	521, 716, 1301, 522, 1302, 717, 523, 524, 516, 525,
	526, 527, 528, 529, 530, 531, 532, 533, 1567, 534,
	535, 718, 536, 537, 538, 719, 539, 540, 541, 720,
	542, 721, 543, 544, 1568, 545, 546, 547, 0, 548,
	549, 550, 551, 552, 553, 554, 555, 722, 556, 557,
	559, 558, 560, 1569, 561, 0, 562, 563, 564, 0,
	0, 0, 0, 0, 565, 566, 568, 0, 569, 570,
	571, 572, 567, 573, 574, 575, 576, 577, 1570, 578,
	579, 580, 1303, 581, 582, 583, 584, 585, 723, 586,
	0, 587, 588, 595, 596, 597, 589, 590, 591, 598,
	599, 600, 601, 602, 1571, 604, 605, 603, 606, 607,
	608, 1572, 609, 610, 592, 593, 611, 612, 1304, 613,
	614, 615, 616, 617, 618, 619, 724, 0, 620, 1573,
	621, 622, 623, 624, 625, 627, 594, 628, 633, 634,
	725, 629, 630, 631, 632, 726, 636, 637, 638, 1574,
	639, 640, 0, 635, 626, 1575, 641, 642, 643, 644,
	645, 646, 0, 647, 648, 1576, 649, 727, 728, 729,
	730, 1577, 659, 1578, 650, 651, 652, 653, 731, 654,
	732, 1579, 655, 656, 657, 658, 0, 660, 661, 1580,
	1581, 662, 663, 665, 667, 668, 664, 666, 669, 1582,
	670, 1583, 0, 671, 672, 673, 733, 734, 735, 1584,
	675, 674, 676, 677, 678, 736, 679, 680, 1585, 1586,
	1587, 1588, 681, 682, 737, 683, 684, 685, 2774, 0,
	1224, 1196, 1197, 1198, 1194, 1195, 1207, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 296, 297, 299,
	298, 300, 301, 302, 303, 2771, 304, 305, 0, 0,
	0, 0, 0, 1248, 1212, 0, 0, 306, 0, 307,
	308, 1288, 309, 310, 311, 312, 313, 314, 315, 687,
	1261, 0, 316, 1268, 317, 1267, 0, 1278, 318, 319,
	320, 321, 322, 323, 1214, 1247, 1179, 324, 1308, 1309,
	694, 0, 325, 326, 1254, 0, 1235, 0, 327, 328,
	329, 330, 331, 332, 333, 334, 0, 0, 336, 337,
	338, 335, 339, 0, 340, 0, 341, 342, 343, 344,
	345, 346, 0, 347, 348, 349, 1289, 350, 351, 352,
	1238, 1236, 1237, 1244, 1240, 1239, 1243, 353, 354, 355,
	356, 357, 1271, 358, 360, 1265, 1264, 1184, 363, 359,
	361, 0, 364, 362, 365, 0, 366, 367, 368, 2772,
	0, 369, 1256, 371, 0, 372, 373, 374, 0, 375,
	376, 377, 0, 378, 379, 1190, 380, 381, 382, 384,
	386, 383, 385, 387, 388, 389, 390, 1279, 1280, 391,
	1203, 293, 0, 0, 0, 0, 0, 392, 393, 394,
	1263, 0, 0, 0, 395, 0, 396, 397, 398, 0,
	399, 400, 0, 1290, 401, 402, 403, 1276, 1277, 404,
	405, 406, 407, 408, 409, 410, 411, 412, 0, 413,
	1286, 0, 1213, 414, 0, 415, 416, 417, 418, 419,
	420, 421, 1249, 1250, 1253, 510, 1292, 422, 423, 0,
	424, 425, 426, 427, 428, 0, 0, 0, 294, 429,
	430, 431, 0, 1291, 511, 432, 1258, 1259, 0, 1219,
	0, 433, 434, 1293, 1251, 1294, 435, 436, 437, 1295,
	438, 0, 0, 0, 439, 440, 441, 442, 443, 444,
	0, 445, 447, 446, 0, 448, 1287, 1296, 449, 450,
	1297, 0, 451, 452, 453, 454, 455, 456, 459, 1242,
	1241, 457, 458, 460, 461, 0, 462, 463, 465, 468,
	464, 466, 467, 469, 482, 483, 470, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 485, 0,
	484, 1298, 486, 487, 488, 489, 490, 497, 499, 500,
	495, 496, 498, 501, 502, 504, 492, 493, 494, 1299,
	503, 491, 1181, 295, 1300, 505, 506, 507, 508, 1204,
	1252, 509, 1266, 512, 513, 0, 0, 514, 0, 515,
	0, 0, 517, 518, 519, 0, 0, 520, 521, 716,
	1301, 522, 1302, 1281, 523, 524, 1191, 525, 526, 527,
	528, 529, 530, 531, 532, 533, 0, 534, 535, 718,
	536, 537, 538, 719, 539, 540, 541, 1282, 542, 721,
	543, 544, 0, 545, 546, 547, 0, 548, 549, 550,
	551, 552, 553, 554, 555, 1262, 556, 557, 559, 558,
	560, 0, 561, 0, 562, 563, 564, 0, 0, 0,
	0, 0, 565, 566, 568, 0, 569, 570, 571, 572,
	567, 573, 574, 575, 576, 577, 0, 578, 579, 580,
	1303, 581, 582, 583, 584, 585, 1192, 586, 0, 587,
	588, 595, 596, 597, 589, 590, 591, 598, 599, 600,
	601, 602, 0, 604, 605, 603, 606, 607, 608, 1245,
	609, 610, 592, 593, 611, 612, 1304, 613, 614, 615,
	616, 617, 618, 619, 1260, 0, 620, 0, 621, 622,
	623, 624, 625, 627, 594, 628, 633, 634, 1307, 629,
	630, 631, 632, 1283, 636, 637, 638, 0, 639, 640,
	1178, 635, 626, 0, 641, 642, 643, 644, 645, 646,
	0, 647, 648, 0, 649, 1272, 1273, 1274, 1275, 0,
	659, 0, 650, 651, 652, 653, 1284, 654, 1285, 1202,
	655, 656, 657, 658, 0, 660, 661, 0, 1185, 662,
	663, 665, 667, 668, 664, 666, 669, 1246, 670, 0,
	0, 671, 672, 673, 733, 1269, 1306, 2770, 675, 674,
	676, 677, 678, 736, 679, 680, 0, 0, 0, 0,
	681, 682, 737, 683, 684, 685, 1182, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1177, 0, 0, 0, 0, 0, 0, 1175, 1176, 2773,
	0, 0, 0, 0, 0, 0, 0, 1208, 2769, 0,
	1168, 1206, 1224, 1196, 1197, 1198, 1194, 1195, 1207, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 296,
	297, 299, 298, 300, 301, 302, 303, 0, 304, 305,
	0, 0, 0, 0, 0, 1248, 1212, 0, 0, 306,
	0, 307, 308, 1288, 309, 310, 311, 312, 313, 314,
	315, 687, 1261, 0, 316, 1268, 317, 1267, 0, 1278,
	318, 319, 320, 321, 322, 323, 1214, 1247, 1179, 324,
	1308, 1309, 694, 0, 325, 326, 1254, 0, 1235, 0,
	327, 328, 329, 330, 331, 332, 333, 334, 0, 0,
	336, 337, 338, 335, 339, 0, 340, 0, 341, 342,
	343, 344, 345, 346, 0, 347, 348, 349, 1289, 350,
	351, 352, 1238, 1236, 1237, 1244, 1240, 1239, 1243, 353,
	354, 355, 356, 357, 1271, 358, 360, 1265, 1264, 1184,
	363, 359, 361, 0, 364, 362, 365, 0, 366, 367,
	368, 0, 0, 369, 1256, 371, 0, 372, 373, 374,
	0, 375, 376, 377, 0, 378, 379, 1190, 380, 381,
	382, 384, 386, 383, 385, 387, 388, 389, 390, 1279,
	1280, 391, 1203, 293, 0, 0, 0, 0, 0, 392,
	393, 394, 1263, 0, 0, 0, 395, 0, 396, 397,
	398, 0, 399, 400, 0, 1290, 401, 402, 403, 1276,
	1277, 404, 405, 406, 407, 408, 409, 410, 411, 412,
	0, 413, 1286, 0, 1213, 414, 0, 415, 416, 417,
	418, 419, 420, 421, 1249, 1250, 1253, 510, 1292, 422,
	423, 0, 424, 425, 426, 427, 428, 0, 0, 0,
	294, 429, 430, 431, 0, 1291, 511, 432, 1258, 1259,
	0, 1219, 0, 433, 434, 1293, 1251, 1294, 435, 436,
	437, 1295, 438, 0, 0, 0, 439, 440, 441, 442,
	443, 444, 0, 445, 447, 446, 0, 448, 1287, 1296,
	449, 450, 1297, 0, 451, 452, 453, 454, 455, 456,
	459, 1242, 1241, 457, 458, 460, 461, 0, 462, 463,
	465, 468, 464, 466, 467, 469, 482, 483, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	485, 0, 484, 1298, 486, 487, 488, 489, 490, 497,
	499, 500, 495, 496, 498, 501, 502, 504, 492, 493,
	494, 1299, 503, 491, 1181, 295, 1300, 505, 506, 507,
	508, 1204, 1252, 509, 1266, 512, 513, 0, 0, 514,
	0, 515, 0, 0, 517, 518, 519, 0, 0, 520,
	521, 716, 1301, 522, 1302, 1281, 523, 524, 1191, 525,
	526, 527, 528, 529, 530, 531, 532, 533, 0, 534,
	535, 718, 536, 537, 538, 719, 539, 540, 541, 1282,
	542, 721, 543, 544, 0, 545, 546, 547, 0, 548,
	549, 550, 551, 552, 553, 554, 555, 1262, 556, 557,
	559, 558, 560, 0, 561, 0, 562, 563, 564, 0,
	0, 0, 0, 0, 565, 566, 568, 0, 569, 570,
	571, 572, 567, 573, 574, 575, 576, 577, 0, 578,
	579, 580, 1303, 581, 582, 583, 584, 585, 1192, 586,
	0, 587, 588, 595, 596, 597, 589, 590, 591, 598,
	599, 600, 601, 602, 251, 604, 605, 603, 606, 607,
	608, 1245, 609, 610, 592, 593, 611, 612, 1304, 613,
	614, 615, 616, 617, 618, 619, 1260, 0, 620, 0,
	621, 622, 623, 624, 625, 627, 594, 628, 633, 634,
	1307, 629, 630, 631, 632, 1283, 636, 637, 638, 0,
	639, 640, 1178, 635, 626, 253, 641, 642, 643, 644,
	645, 646, 0, 647, 648, 0, 649, 1272, 1273, 1274,
	1275, 0, 659, 0, 650, 651, 652, 653, 1284, 654,
	1285, 1202, 655, 656, 657, 658, 0, 660, 661, 0,
	1185, 662, 663, 665, 667, 668, 664, 666, 669, 1246,
	670, 0, 0, 671, 672, 673, 1749, 1269, 1306, 0,
	675, 674, 676, 677, 678, 736, 679, 680, 0, 0,
	0, 245, 681, 682, 737, 683, 684, 685, 1182, 0,
	246, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1177, 0, 0, 0, 0, 0, 0, 1175,
	1176, 1224, 1196, 1197, 1198, 1194, 1195, 1207, 0, 2014,
	2012, 0, 0, 1206, 0, 0, 0, 0, 296, 297,
	299, 298, 300, 301, 302, 303, 0, 304, 305, 0,
	0, 0, 0, 0, 1248, 1212, 0, 0, 306, 0,
	307, 308, 1288, 309, 310, 311, 312, 313, 314, 315,
	687, 1261, 0, 316, 1268, 317, 1267, 0, 1278, 318,
	319, 320, 321, 322, 323, 1214, 1247, 1179, 324, 1308,
	1309, 694, 0, 325, 326, 1254, 0, 1235, 0, 327,
	328, 329, 330, 331, 332, 333, 334, 0, 0, 336,
	337, 338, 335, 339, 0, 340, 0, 341, 342, 343,
	344, 345, 346, 0, 347, 348, 349, 1289, 350, 351,
	352, 1238, 1236, 1237, 1244, 1240, 1239, 1243, 353, 354,
	355, 356, 357, 1271, 358, 360, 1265, 1264, 1184, 363,
	359, 361, 0, 364, 362, 365, 0, 366, 367, 368,
	0, 0, 369, 1256, 371, 0, 372, 373, 374, 0,
	375, 376, 377, 0, 378, 379, 1190, 380, 381, 382,
	384, 386, 383, 385, 387, 388, 389, 390, 1279, 1280,
	391, 1203, 293, 0, 0, 0, 0, 0, 392, 393,
	394, 1263, 0, 0, 0, 395, 0, 396, 397, 398,
	0, 399, 400, 0, 1290, 401, 402, 403, 1276, 1277,
	404, 405, 406, 407, 408, 409, 410, 411, 412, 0,
	413, 1286, 0, 1213, 414, 0, 415, 416, 417, 418,
	419, 420, 421, 1249, 1250, 1253, 510, 1292, 422, 423,
	0, 424, 425, 426, 427, 428, 0, 0, 0, 294,
	429, 430, 431, 0, 1291, 511, 432, 1258, 1259, 0,
	1219, 0, 433, 434, 1293, 1251, 1294, 435, 436, 437,
	1295, 438, 0, 0, 0, 439, 440, 441, 442, 443,
	444, 0, 445, 447, 446, 0, 448, 1287, 1296, 449,
	450, 1297, 0, 451, 452, 453, 454, 455, 456, 459,
	1242, 1241, 457, 458, 460, 461, 0, 462, 463, 465,
	468, 464, 466, 467, 469, 482, 483, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 485,
	0, 484, 1298, 486, 487, 488, 489, 490, 497, 499,
	500, 495, 496, 498, 501, 502, 504, 492, 493, 494,
	1299, 503, 491, 1181, 295, 1300, 505, 506, 507, 508,
	1204, 1252, 509, 1266, 512, 513, 0, 0, 514, 0,
	515, 0, 0, 517, 518, 519, 0, 0, 520, 521,
	716, 1301, 522, 1302, 1281, 523, 524, 1191, 525, 526,
	527, 528, 529, 530, 531, 532, 533, 0, 534, 535,
	718, 536, 537, 538, 719, 539, 540, 541, 1282, 542,
	721, 543, 544, 0, 545, 546, 547, 0, 548, 549,
	550, 551, 552, 553, 554, 555, 1262, 556, 557, 559,
	558, 560, 0, 561, 0, 562, 563, 564, 0, 0,
	0, 0, 0, 565, 566, 568, 0, 569, 570, 571,
	572, 567, 573, 574, 575, 576, 577, 0, 578, 579,
	580, 1303, 581, 582, 583, 584, 585, 1192, 586, 0,
	587, 588, 595, 596, 597, 589, 590, 591, 598, 599,
	600, 601, 602, 251, 604, 605, 603, 606, 607, 608,
	1245, 609, 610, 592, 593, 611, 612, 1304, 613, 614,
	615, 616, 617, 618, 619, 1260, 0, 620, 0, 621,
	622, 623, 624, 625, 627, 594, 628, 633, 634, 1307,
	629, 630, 631, 632, 1283, 636, 637, 638, 0, 639,
	640, 1178, 635, 626, 253, 641, 642, 643, 644, 645,
	646, 0, 647, 648, 0, 649, 1272, 1273, 1274, 1275,
	0, 659, 0, 650, 651, 652, 653, 1284, 654, 1285,
	1202, 655, 656, 657, 658, 0, 660, 661, 0, 1185,
	662, 663, 665, 667, 668, 664, 666, 669, 1246, 670,
	0, 0, 671, 672, 673, 1749, 1269, 1306, 0, 675,
	674, 676, 677, 678, 736, 679, 680, 0, 0, 0,
	245, 681, 682, 737, 683, 684, 685, 1182, 0, 246,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1177, 0, 0, 0, 0, 0, 0, 1175, 1176,
	1224, 1196, 1197, 1198, 1194, 1195, 1207, 0, 2014, 3437,
	0, 0, 1206, 0, 0, 0, 0, 296, 297, 299,
	298, 300, 301, 302, 303, 0, 304, 305, 0, 0,
	0, 0, 0, 1248, 1212, 0, 0, 306, 0, 307,
	308, 1288, 309, 310, 311, 312, 313, 314, 315, 687,
	1261, 0, 316, 1268, 317, 1267, 0, 1278, 318, 319,
	320, 321, 322, 323, 1214, 1247, 1179, 324, 1308, 1309,
	694, 0, 325, 326, 1254, 0, 1235, 0, 327, 328,
	329, 330, 331, 332, 333, 334, 0, 0, 336, 337,
	338, 335, 339, 0, 340, 0, 341, 342, 343, 344,
	345, 346, 0, 347, 348, 349, 1289, 350, 351, 352,
	1238, 1236, 1237, 1244, 1240, 1239, 1243, 353, 354, 355,
	356, 357, 1271, 358, 360, 1265, 1264, 1184, 363, 359,
	361, 0, 364, 362, 365, 0, 366, 367, 368, 0,
	0, 369, 1256, 371, 0, 372, 373, 374, 0, 375,
	376, 377, 0, 378, 379, 1190, 380, 381, 382, 384,
	386, 383, 385, 387, 388, 389, 390, 1279, 1280, 391,
	1203, 293, 0, 0, 0, 0, 0, 392, 393, 394,
	1263, 0, 0, 0, 395, 0, 396, 397, 398, 0,
	399, 400, 0, 1290, 401, 402, 403, 1276, 1277, 404,
	405, 406, 407, 408, 409, 410, 411, 412, 0, 413,
	1286, 0, 1213, 414, 0, 415, 416, 417, 418, 419,
	420, 421, 1249, 1250, 1253, 510, 1292, 422, 423, 0,
	424, 425, 426, 427, 428, 0, 0, 0, 294, 429,
	430, 431, 0, 1291, 511, 432, 1258, 1259, 0, 1219,
	0, 433, 434, 1293, 1251, 1294, 435, 436, 437, 1295,
	438, 0, 0, 0, 439, 440, 441, 442, 443, 444,
	0, 445, 447, 446, 0, 448, 1287, 1296, 449, 450,
	1297, 0, 451, 452, 453, 454, 455, 456, 459, 1242,
	1241, 457, 458, 460, 461, 0, 462, 463, 465, 468,
	464, 466, 467, 469, 482, 483, 470, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 485, 0,
	484, 1298, 486, 487, 488, 489, 490, 497, 499, 500,
	495, 496, 498, 501, 502, 504, 492, 493, 494, 1299,
	503, 491, 1181, 295, 1300, 505, 506, 507, 508, 1204,
	1252, 509, 1266, 512, 513, 0, 0, 514, 0, 515,
	0, 0, 517, 518, 519, 0, 0, 520, 521, 716,
	1301, 522, 1302, 1281, 523, 524, 1191, 525, 526, 527,
	528, 529, 530, 531, 532, 533, 0, 534, 535, 718,
	536, 537, 538, 719, 539, 540, 541, 1282, 542, 721,
	543, 544, 0, 545, 546, 547, 0, 548, 549, 550,
	551, 552, 553, 554, 555, 1262, 556, 557, 559, 558,
	560, 0, 561, 0, 562, 563, 564, 0, 0, 0,
	0, 0, 565, 566, 568, 0, 569, 570, 571, 572,
	567, 573, 574, 575, 576, 577, 0, 578, 579, 580,
	1303, 581, 582, 583, 584, 585, 1192, 586, 0, 587,
	588, 595, 596, 597, 589, 590, 591, 598, 599, 600,
	601, 602, 251, 604, 605, 603, 606, 607, 608, 1245,
	609, 610, 592, 593, 611, 612, 1304, 613, 614, 615,
	616, 617, 618, 619, 1260, 0, 620, 0, 621, 622,
	623, 624, 625, 627, 594, 628, 633, 634, 1307, 629,
	630, 631, 632, 1283, 636, 637, 638, 0, 639, 640,
	1178, 635, 626, 253, 641, 642, 643, 644, 645, 646,
	0, 647, 648, 0, 649, 1272, 1273, 1274, 1275, 0,
	659, 0, 650, 651, 652, 653, 1284, 654, 1285, 1202,
	655, 656, 657, 658, 0, 660, 661, 0, 1185, 662,
	663, 665, 667, 668, 664, 666, 669, 1246, 670, 0,
	0, 671, 672, 673, 1749, 1269, 1306, 0, 675, 674,
	676, 677, 678, 736, 679, 680, 0, 0, 0, 245,
	681, 682, 737, 683, 684, 685, 1182, 0, 246, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1177, 0, 0, 0, 0, 0, 0, 1175, 1176, 1224,
	1196, 1197, 1198, 1194, 1195, 1207, 0, 2014, 2012, 0,
	0, 1206, 0, 0, 0, 0, 296, 297, 299, 298,
	300, 301, 302, 303, 0, 304, 305, 0, 0, 0,
	0, 0, 1248, 1212, 0, 0, 306, 0, 307, 308,
	1288, 309, 310, 311, 312, 313, 314, 315, 687, 1261,
	0, 316, 1268, 317, 1267, 2904, 1278, 318, 319, 320,
	321, 322, 323, 1214, 1247, 1179, 324, 1308, 1309, 694,
	0, 325, 326, 1254, 0, 1235, 0, 327, 328, 329,
	330, 331, 332, 333, 334, 0, 0, 336, 337, 338,
	335, 339, 0, 340, 0, 341, 342, 343, 344, 345,
	346, 0, 347, 348, 349, 1289, 350, 351, 352, 1238,
	1236, 1237, 1244, 1240, 1239, 1243, 353, 354, 355, 356,
	357, 1271, 358, 360, 1265, 1264, 1184, 363, 359, 361,
	0, 364, 362, 365, 0, 366, 367, 368, 0, 0,
	369, 1256, 371, 0, 372, 373, 374, 0, 375, 376,
	377, 0, 378, 379, 1190, 380, 381, 382, 384, 386,
	383, 385, 387, 388, 389, 390, 1279, 1280, 391, 1203,
	293, 0, 0, 0, 0, 0, 392, 393, 394, 1263,
	0, 0, 0, 395, 0, 396, 397, 398, 0, 399,
	400, 2909, 1290, 401, 402, 403, 1276, 1277, 404, 405,
	406, 407, 408, 409, 410, 411, 412, 0, 413, 1286,
	0, 1213, 414, 0, 415, 416, 417, 418, 419, 420,
	421, 1249, 1250, 1253, 510, 1292, 422, 423, 0, 424,
	425, 426, 427, 428, 0, 0, 0, 294, 429, 430,
	431, 0, 1291, 511, 432, 1258, 1259, 0, 1219, 0,
	433, 434, 1293, 1251, 1294, 435, 436, 437, 1295, 438,
	0, 0, 0, 439, 440, 441, 442, 443, 444, 0,
	445, 447, 446, 2905, 448, 1287, 1296, 449, 450, 1297,
	0, 451, 452, 453, 454, 455, 456, 459, 1242, 1241,
	457, 458, 460, 461, 0, 462, 463, 465, 468, 464,
	466, 467, 469, 482, 483, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 485, 0, 484,
	1298, 486, 487, 488, 489, 490, 497, 499, 500, 495,
	496, 498, 501, 502, 504, 492, 493, 494, 1299, 503,
	491, 1181, 295, 1300, 505, 506, 507, 508, 1204, 1252,
	509, 1266, 512, 513, 0, 0, 514, 0, 515, 0,
	0, 517, 518, 519, 0, 0, 520, 521, 716, 1301,
	522, 1302, 1281, 523, 524, 1191, 525, 526, 527, 528,
	529, 530, 531, 532, 533, 0, 534, 535, 718, 536,
	537, 538, 719, 539, 540, 541, 1282, 542, 721, 543,
	544, 0, 545, 546, 547, 0, 548, 549, 550, 551,
	552, 553, 554, 555, 1262, 556, 557, 559, 558, 560,
	0, 561, 0, 562, 563, 564, 0, 0, 0, 0,
	0, 565, 566, 568, 0, 569, 570, 571, 572, 567,
	573, 574, 575, 576, 577, 0, 578, 579, 580, 1303,
	581, 582, 583, 584, 585, 1192, 586, 0, 587, 588,
	595, 596, 597, 589, 590, 591, 598, 599, 600, 601,
	602, 0, 604, 605, 603, 606, 607, 608, 1245, 609,
	610, 592, 593, 611, 612, 1304, 613, 614, 615, 616,
	617, 618, 619, 1260, 0, 620, 0, 621, 622, 623,
	624, 625, 627, 594, 628, 633, 634, 1307, 629, 630,
	631, 632, 1283, 636, 637, 638, 0, 639, 640, 1178,
	635, 626, 0, 641, 642, 643, 644, 645, 646, 0,
	647, 648, 0, 649, 1272, 1273, 1274, 1275, 0, 659,
	2906, 650, 651, 652, 653, 1284, 654, 1285, 1202, 655,
	656, 657, 658, 0, 660, 661, 0, 1185, 662, 663,
	665, 667, 668, 664, 666, 669, 1246, 670, 0, 0,
	671, 672, 673, 733, 1269, 1306, 0, 675, 674, 676,
	677, 678, 736, 679, 680, 0, 0, 0, 0, 681,
	682, 737, 683, 684, 685, 1182, 0, 0, 0, 2819,
	0, 1224, 1196, 1197, 1198, 1194, 1195, 1207, 0, 1177,
	0, 0, 0, 0, 0, 0, 1175, 1176, 296, 297,
	299, 298, 300, 301, 302, 303, 1208, 304, 305, 0,
	1206, 0, 0, 0, 1248, 1212, 0, 0, 306, 0,
	307, 308, 1288, 309, 310, 311, 312, 313, 314, 315,
	687, 1261, 0, 316, 1268, 317, 1267, 0, 1278, 318,
	319, 320, 321, 322, 323, 1214, 1247, 1179, 324, 1308,
	1309, 694, 0, 325, 326, 1254, 0, 1235, 0, 327,
	328, 329, 330, 331, 332, 333, 334, 0, 0, 336,
	337, 338, 335, 339, 0, 340, 0, 341, 342, 343,
	344, 345, 346, 0, 347, 348, 349, 1289, 350, 351,
	352, 1238, 1236, 1237, 1244, 1240, 1239, 1243, 353, 354,
	355, 356, 357, 1271, 358, 360, 1265, 1264, 1184, 363,
	359, 361, 0, 364, 362, 365, 0, 366, 367, 368,
	0, 0, 369, 1256, 371, 0, 372, 373, 374, 0,
	375, 376, 377, 0, 378, 379, 1190, 380, 381, 382,
	384, 386, 383, 385, 387, 388, 389, 390, 1279, 1280,
	391, 1203, 293, 0, 0, 0, 0, 0, 392, 393,
	394, 1263, 0, 0, 0, 395, 0, 396, 397, 398,
	0, 399, 400, 0, 1290, 401, 402, 403, 1276, 1277,
	404, 405, 406, 407, 408, 409, 410, 411, 412, 0,
	413, 1286, 0, 1213, 414, 0, 415, 416, 417, 418,
	419, 420, 421, 1249, 1250, 1253, 510, 1292, 422, 423,
	0, 424, 425, 426, 427, 428, 0, 0, 0, 294,
	429, 430, 431, 0, 1291, 511, 432, 1258, 1259, 0,
	1219, 0, 433, 434, 1293, 1251, 1294, 435, 436, 437,
	1295, 438, 0, 0, 0, 439, 440, 441, 442, 443,
	444, 0, 445, 447, 446, 0, 448, 1287, 1296, 449,
	450, 1297, 0, 451, 452, 453, 454, 455, 456, 459,
	1242, 1241, 457, 458, 460, 461, 0, 462, 463, 465,
	468, 464, 466, 467, 469, 482, 483, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 485,
	0, 484, 1298, 486, 487, 488, 489, 490, 497, 499,
	500, 495, 496, 498, 501, 502, 504, 492, 493, 494,
	1299, 503, 491, 1181, 295, 1300, 505, 506, 507, 508,
	1204, 1252, 509, 1266, 512, 513, 0, 0, 514, 0,
	515, 0, 0, 517, 518, 519, 0, 0, 520, 521,
	716, 1301, 522, 1302, 1281, 523, 524, 1191, 525, 526,
	527, 528, 529, 530, 531, 532, 533, 0, 534, 535,
	718, 536, 537, 538, 719, 539, 540, 541, 1282, 542,
	721, 543, 544, 0, 545, 546, 547, 0, 548, 549,
	550, 551, 552, 553, 554, 555, 1262, 556, 557, 559,
	558, 560, 0, 561, 0, 562, 563, 564, 0, 0,
	0, 0, 0, 565, 566, 568, 0, 569, 570, 571,
	572, 567, 573, 574, 575, 576, 577, 0, 578, 579,
	580, 1303, 581, 582, 583, 584, 585, 1192, 586, 0,
	587, 588, 595, 596, 597, 589, 590, 591, 598, 599,
	600, 601, 602, 0, 604, 605, 603, 606, 607, 608,
	1245, 609, 610, 592, 593, 611, 612, 1304, 613, 614,
	615, 616, 617, 618, 619, 1260, 0, 620, 0, 621,
	622, 623, 624, 625, 627, 594, 628, 633, 634, 1307,
	629, 630, 631, 632, 1283, 636, 637, 638, 0, 639,
	640, 1178, 635, 626, 0, 641, 642, 643, 644, 645,
	646, 0, 647, 648, 0, 649, 1272, 1273, 1274, 1275,
	0, 659, 0, 650, 651, 652, 653, 1284, 654, 1285,
	1202, 655, 656, 657, 658, 0, 660, 661, 0, 1185,
	662, 663, 665, 667, 668, 664, 666, 669, 1246, 670,
	0, 0, 671, 672, 673, 733, 1269, 1306, 0, 675,
	674, 676, 677, 678, 736, 679, 680, 0, 0, 0,
	0, 681, 682, 737, 683, 684, 685, 1182, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1177, 0, 0, 0, 0, 0, 0, 1175, 1176,
	0, 0, 0, 0, 0, 0, 0, 0, 1208, 2817,
	0, 2816, 1206, 1224, 1196, 1197, 1198, 1194, 1195, 1207,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	296, 297, 299, 298, 300, 301, 302, 303, 0, 304,
	305, 0, 0, 0, 0, 0, 1248, 1212, 0, 0,
	306, 0, 307, 308, 1288, 309, 310, 311, 312, 313,
	314, 315, 687, 1261, 0, 316, 1268, 317, 1267, 0,
	1278, 318, 319, 320, 321, 322, 323, 1214, 1247, 1179,
	324, 1308, 1309, 694, 0, 325, 326, 1254, 0, 1235,
	0, 327, 328, 329, 330, 331, 332, 333, 334, 0,
	0, 336, 337, 338, 335, 339, 0, 340, 0, 341,
	342, 343, 344, 345, 346, 0, 347, 348, 349, 1289,
	350, 351, 352, 1238, 1236, 1237, 1244, 1240, 1239, 1243,
	353, 354, 355, 356, 357, 1271, 358, 360, 1265, 1264,
	1184, 363, 359, 361, 0, 364, 362, 365, 0, 366,
	367, 368, 0, 0, 369, 1256, 371, 0, 372, 373,
	374, 0, 375, 376, 377, 0, 378, 379, 1190, 380,
	381, 382, 384, 386, 383, 385, 387, 388, 389, 390,
	1279, 1280, 391, 1203, 293, 0, 0, 0, 0, 0,
	392, 393, 394, 1263, 0, 0, 0, 395, 0, 396,
	397, 398, 0, 399, 400, 0, 1290, 401, 402, 403,
	1276, 1277, 404, 405, 406, 407, 408, 409, 410, 411,
	412, 0, 413, 1286, 0, 1213, 414, 0, 415, 416,
	417, 418, 419, 420, 421, 1249, 1250, 1253, 510, 1292,
	422, 423, 0, 424, 425, 426, 427, 428, 0, 0,
	0, 294, 429, 430, 431, 0, 1291, 511, 432, 1258,
	1259, 0, 1219, 0, 433, 434, 1293, 1251, 1294, 435,
	436, 437, 1295, 438, 0, 0, 0, 439, 440, 441,
	442, 443, 444, 0, 445, 447, 446, 0, 448, 1287,
	1296, 449, 450, 1297, 0, 451, 452, 453, 454, 455,
	456, 459, 1242, 1241, 457, 458, 460, 461, 0, 462,
	463, 465, 468, 464, 466, 467, 469, 482, 483, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 485, 0, 484, 1298, 486, 487, 488, 489, 490,
	497, 499, 500, 495, 496, 498, 501, 502, 504, 492,
	493, 494, 1299, 503, 491, 1181, 295, 1300, 505, 506,
	507, 508, 1204, 1252, 509, 1266, 512, 513, 0, 0,
	514, 0, 515, 0, 0, 517, 518, 519, 0, 0,
	520, 521, 716, 1301, 522, 1302, 1281, 523, 524, 1191,
	525, 526, 527, 528, 529, 530, 531, 532, 533, 0,
	534, 535, 718, 536, 537, 538, 719, 539, 540, 541,
	1282, 542, 721, 543, 544, 0, 545, 546, 547, 0,
	548, 549, 550, 551, 552, 553, 554, 555, 1262, 556,
	557, 559, 558, 560, 0, 561, 0, 562, 563, 564,
	0, 0, 0, 0, 0, 565, 566, 568, 0, 569,
	570, 571, 572, 567, 573, 574, 575, 576, 577, 0,
	578, 579, 580, 1303, 581, 582, 583, 584, 585, 1192,
	586, 0, 587, 588, 595, 596, 597, 589, 590, 591,
	598, 599, 600, 601, 602, 0, 604, 605, 603, 606,
	607, 608, 1245, 609, 610, 592, 593, 611, 612, 1304,
	613, 614, 615, 616, 617, 618, 619, 1260, 0, 620,
	0, 621, 622, 623, 624, 625, 627, 594, 628, 633,
	634, 1307, 629, 630, 631, 632, 1283, 636, 637, 638,
	0, 639, 640, 1178, 635, 626, 0, 641, 642, 643,
	644, 645, 646, 0, 647, 648, 0, 649, 1272, 1273,
	1274, 1275, 0, 659, 0, 650, 651, 652, 653, 1284,
	654, 1285, 1202, 655, 656, 657, 658, 0, 660, 661,
	0, 1185, 662, 663, 665, 667, 668, 664, 666, 669,
	1246, 670, 0, 0, 671, 672, 673, 733, 1269, 1306,
	0, 675, 674, 676, 677, 678, 736, 679, 680, 0,
	0, 0, 0, 681, 682, 737, 683, 684, 685, 1182,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1177, 0, 0, 0, 0, 0, 0,
	1175, 1176, 0, 0, 0, 0, 0, 0, 0, 0,
	1208, 2814, 0, 2813, 1206, 1224, 1196, 1197, 1198, 1194,
	1195, 1207, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 296, 297, 299, 298, 300, 301, 302, 303,
	0, 304, 305, 0, 0, 0, 0, 0, 1248, 1212,
	0, 0, 306, 0, 307, 308, 1288, 309, 310, 311,
	312, 313, 314, 315, 687, 1261, 0, 316, 1268, 317,
	1267, 0, 1278, 318, 319, 320, 321, 322, 323, 1214,
	1247, 1179, 324, 1308, 1309, 694, 0, 325, 326, 1254,
	0, 1235, 0, 327, 328, 329, 330, 331, 332, 333,
	334, 0, 0, 336, 337, 338, 335, 339, 0, 340,
	0, 341, 342, 343, 344, 345, 346, 0, 347, 348,
	349, 1289, 350, 351, 352, 1238, 1236, 1237, 1244, 1240,
	1239, 1243, 353, 354, 355, 356, 357, 1271, 358, 360,
	1265, 1264, 1184, 363, 359, 361, 0, 364, 362, 365,
	0, 366, 367, 368, 0, 0, 369, 1256, 371, 0,
	372, 373, 374, 0, 375, 376, 377, 0, 378, 379,
	1190, 380, 381, 382, 384, 386, 383, 385, 387, 388,
	389, 390, 1279, 1280, 391, 1203, 293, 0, 0, 0,
	0, 0, 392, 393, 394, 1263, 0, 0, 0, 395,
	0, 396, 397, 398, 0, 399, 400, 0, 1290, 401,
	402, 403, 1276, 1277, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 0, 413, 1286, 0, 1213, 414, 0,
	415, 416, 417, 418, 419, 420, 421, 1249, 1250, 1253,
	510, 1292, 422, 423, 0, 424, 425, 426, 427, 428,
	0, 0, 0, 294, 429, 430, 431, 0, 1291, 511,
	432, 1258, 1259, 0, 1219, 0, 433, 434, 1293, 1251,
	1294, 435, 436, 437, 1295, 438, 0, 0, 0, 439,
	440, 441, 442, 443, 444, 0, 445, 447, 446, 0,
	448, 1287, 1296, 449, 450, 1297, 0, 451, 452, 453,
	454, 455, 456, 459, 1242, 1241, 457, 458, 460, 461,
	0, 462, 463, 465, 468, 464, 466, 467, 469, 482,
	483, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 485, 0, 484, 1298, 486, 487, 488,
	489, 490, 497, 499, 500, 495, 496, 498, 501, 502,
	504, 492, 493, 494, 1299, 503, 491, 1181, 295, 1300,
	505, 506, 507, 508, 1204, 1252, 509, 1266, 512, 513,
	0, 0, 514, 0, 515, 0, 0, 517, 518, 519,
	0, 0, 520, 521, 716, 1301, 522, 1302, 1281, 523,
	524, 1191, 525, 526, 527, 528, 529, 530, 531, 532,
	533, 0, 534, 535, 718, 536, 537, 538, 719, 539,
	540, 541, 1282, 542, 721, 543, 544, 0, 545, 546,
	547, 0, 548, 549, 550, 551, 552, 553, 554, 555,
	1262, 556, 557, 559, 558, 560, 0, 561, 0, 562,
	563, 564, 0, 0, 0, 0, 0, 565, 566, 568,
	0, 569, 570, 571, 572, 567, 573, 574, 575, 576,
	577, 0, 578, 579, 580, 1303, 581, 582, 583, 584,
	585, 1192, 586, 0, 587, 588, 595, 596, 597, 589,
	590, 591, 598, 599, 600, 601, 602, 0, 604, 605,
	603, 606, 607, 608, 1245, 609, 610, 592, 593, 611,
	612, 1304, 613, 614, 615, 616, 617, 618, 619, 1260,
	0, 620, 0, 621, 622, 623, 624, 625, 627, 594,
	628, 633, 634, 1307, 629, 630, 631, 632, 1283, 636,
	637, 638, 0, 639, 640, 1178, 635, 626, 0, 641,
	642, 643, 644, 645, 646, 0, 647, 648, 0, 649,
	1272, 1273, 1274, 1275, 0, 659, 0, 650, 651, 652,
	653, 1284, 654, 1285, 1202, 655, 656, 657, 658, 0,
	660, 661, 0, 1185, 662, 663, 665, 667, 668, 664,
	666, 669, 1246, 670, 0, 0, 671, 672, 673, 733,
	1269, 1306, 0, 675, 674, 676, 677, 678, 736, 679,
	680, 0, 0, 0, 0, 681, 682, 737, 683, 684,
	685, 1182, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1177, 0, 0, 0, 0,
	0, 0, 1175, 1176, 0, 0, 0, 0, 0, 0,
	0, 0, 1208, 2811, 0, 2810, 1206, 1224, 1196, 1197,
	1198, 1194, 1195, 1207, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 296, 297, 299, 298, 300, 301,
	302, 303, 0, 304, 305, 0, 0, 0, 0, 0,
	1248, 1212, 0, 0, 306, 0, 307, 308, 1288, 309,
	310, 311, 312, 313, 314, 315, 687, 1261, 0, 316,
	1268, 317, 1267, 0, 1278, 318, 319, 320, 321, 322,
	323, 1214, 1247, 1179, 324, 1308, 1309, 694, 0, 325,
	326, 1254, 0, 1235, 0, 327, 328, 329, 330, 331,
	332, 333, 334, 0, 0, 336, 337, 338, 335, 339,
	0, 340, 0, 341, 342, 343, 344, 345, 346, 0,
	347, 348, 349, 1289, 350, 351, 352, 1238, 1236, 1237,
	1244, 1240, 1239, 1243, 353, 354, 355, 356, 357, 1271,
	358, 360, 1265, 1264, 1184, 363, 359, 361, 0, 364,
	362, 365, 0, 366, 367, 368, 0, 0, 369, 1256,
	371, 0, 372, 373, 374, 0, 375, 376, 377, 0,
	378, 379, 1190, 380, 381, 382, 384, 386, 383, 385,
	387, 388, 389, 390, 1279, 1280, 391, 1203, 293, 0,
	0, 0, 0, 0, 392, 393, 394, 1263, 0, 0,
	0, 395, 0, 396, 397, 398, 0, 399, 400, 0,
	1290, 401, 402, 403, 1276, 1277, 404, 405, 406, 407,
	408, 409, 410, 411, 412, 0, 413, 1286, 0, 1213,
	414, 0, 415, 416, 417, 418, 419, 420, 421, 1249,
	1250, 1253, 510, 1292, 422, 423, 0, 424, 425, 426,
	427, 428, 0, 0, 0, 294, 429, 430, 431, 0,
	1291, 511, 432, 1258, 1259, 0, 1219, 0, 433, 434,
	1293, 1251, 1294, 435, 436, 437, 1295, 438, 0, 0,
	0, 439, 440, 441, 442, 443, 444, 0, 445, 447,
	446, 0, 448, 1287, 1296, 449, 450, 1297, 0, 451,
	452, 453, 454, 455, 456, 459, 1242, 1241, 457, 458,
	460, 461, 0, 462, 463, 465, 468, 464, 466, 467,
	469, 482, 483, 470, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 485, 0, 484, 1298, 486,
	487, 488, 489, 490, 497, 499, 500, 495, 496, 498,
	501, 502, 504, 492, 493, 494, 1299, 503, 491, 1181,
	295, 1300, 505, 506, 507, 508, 1204, 1252, 509, 1266,
	512, 513, 0, 0, 514, 0, 515, 0, 0, 517,
	518, 519, 0, 0, 520, 521, 716, 1301, 522, 1302,
	1281, 523, 524, 1191, 525, 526, 527, 528, 529, 530,
	531, 532, 533, 0, 534, 535, 718, 536, 537, 538,
	719, 539, 540, 541, 1282, 542, 721, 543, 544, 0,
	545, 546, 547, 0, 548, 549, 550, 551, 552, 553,
	554, 555, 1262, 556, 557, 559, 558, 560, 0, 561,
	0, 562, 563, 564, 0, 0, 0, 0, 0, 565,
	566, 568, 0, 569, 570, 571, 572, 567, 573, 574,
	575, 576, 577, 0, 578, 579, 580, 1303, 581, 582,
	583, 584, 585, 1192, 586, 0, 587, 588, 595, 596,
	597, 589, 590, 591, 598, 599, 600, 601, 602, 0,
	604, 605, 603, 606, 607, 608, 1245, 609, 610, 592,
	593, 611, 612, 1304, 613, 614, 615, 616, 617, 618,
	619, 1260, 0, 620, 0, 621, 622, 623, 624, 625,
	627, 594, 628, 633, 634, 1307, 629, 630, 631, 632,
	1283, 636, 637, 638, 0, 639, 640, 1178, 635, 626,
	0, 641, 642, 643, 644, 645, 646, 0, 647, 648,
	0, 649, 1272, 1273, 1274, 1275, 0, 659, 0, 650,
	651, 652, 653, 1284, 654, 1285, 1202, 655, 656, 657,
	658, 0, 660, 661, 0, 1185, 662, 663, 665, 667,
	668, 664, 666, 669, 1246, 670, 0, 0, 671, 672,
	673, 733, 1269, 1306, 0, 675, 674, 676, 677, 678,
	736, 679, 680, 0, 0, 0, 0, 681, 682, 737,
	683, 684, 685, 1182, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1177, 0, 0,
	0, 0, 0, 0, 1175, 1176, 0, 0, 0, 0,
	0, 0, 0, 0, 1208, 2808, 0, 1850, 1206, 1224,
	1196, 1197, 1198, 1194, 1195, 1207, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 296, 297, 299, 298,
	300, 301, 302, 303, 0, 304, 305, 0, 0, 0,
	0, 0, 1248, 1212, 0, 0, 306, 0, 307, 308,
	1288, 309, 310, 311, 312, 313, 314, 315, 687, 1261,
	0, 316, 1268, 317, 1267, 0, 1278, 318, 319, 320,
	321, 322, 323, 1214, 1247, 1179, 324, 1308, 1309, 694,
	0, 325, 326, 1254, 0, 1235, 0, 327, 328, 329,
	330, 331, 332, 333, 334, 0, 0, 336, 337, 338,
	335, 339, 0, 340, 0, 341, 342, 343, 344, 345,
	346, 0, 347, 348, 349, 1289, 350, 351, 352, 1238,
	1236, 1237, 1244, 1240, 1239, 1243, 353, 354, 355, 356,
	357, 1271, 358, 360, 1265, 1264, 1184, 363, 359, 361,
	0, 364, 362, 365, 0, 366, 367, 368, 0, 0,
	369, 1256, 371, 0, 372, 373, 374, 0, 375, 376,
	377, 0, 378, 379, 1190, 380, 381, 382, 384, 386,
	383, 385, 387, 388, 389, 390, 1279, 1280, 391, 1203,
	293, 0, 0, 0, 0, 0, 392, 393, 394, 1263,
	0, 0, 0, 395, 0, 396, 397, 398, 0, 399,
	400, 0, 1290, 401, 402, 403, 1276, 1277, 404, 405,
	406, 407, 408, 409, 410, 411, 412, 0, 413, 1286,
	0, 1213, 414, 0, 415, 416, 417, 418, 419, 420,
	421, 1249, 1250, 1253, 510, 1292, 422, 423, 0, 424,
	425, 426, 427, 428, 0, 0, 0, 294, 429, 430,
	431, 0, 1291, 511, 432, 1258, 1259, 0, 1219, 0,
	433, 434, 1293, 1251, 1294, 435, 436, 437, 1295, 438,
	0, 0, 0, 439, 440, 441, 442, 443, 444, 0,
	445, 447, 446, 0, 448, 1287, 1296, 449, 450, 1297,
	0, 451, 452, 453, 454, 455, 456, 459, 1242, 1241,
	457, 458, 460, 461, 0, 462, 463, 465, 468, 464,
	466, 467, 469, 482, 483, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 485, 0, 484,
	1298, 486, 487, 488, 489, 490, 497, 499, 500, 495,
	496, 498, 501, 502, 504, 492, 493, 494, 1299, 503,
	491, 1181, 295, 1300, 505, 506, 507, 508, 1204, 1252,
	509, 1266, 512, 513, 0, 0, 514, 0, 515, 0,
	0, 517, 518, 519, 0, 0, 520, 521, 716, 1301,
	522, 1302, 1281, 523, 524, 1191, 525, 526, 527, 528,
	529, 530, 531, 532, 533, 0, 534, 535, 718, 536,
	537, 538, 719, 539, 540, 541, 1282, 542, 721, 543,
	544, 0, 545, 546, 547, 0, 548, 549, 550, 551,
	552, 553, 554, 555, 1262, 556, 557, 559, 558, 560,
	0, 561, 0, 562, 563, 564, 0, 0, 0, 0,
	0, 565, 566, 568, 0, 569, 570, 571, 572, 567,
	573, 574, 575, 576, 577, 0, 578, 579, 580, 1303,
	581, 582, 583, 584, 585, 1192, 586, 0, 587, 588,
	595, 596, 597, 589, 590, 591, 598, 599, 600, 601,
	602, 0, 604, 605, 603, 606, 607, 608, 1245, 609,
	610, 592, 593, 611, 612, 1304, 613, 614, 615, 616,
	617, 618, 619, 1260, 0, 620, 0, 621, 622, 623,
	624, 625, 627, 594, 628, 633, 634, 1307, 629, 630,
	631, 632, 1283, 636, 637, 638, 0, 639, 640, 1178,
	635, 626, 0, 641, 642, 643, 644, 645, 646, 0,
	647, 648, 0, 649, 1272, 1273, 1274, 1275, 0, 659,
	0, 650, 651, 652, 653, 1284, 654, 1285, 1202, 655,
	656, 657, 658, 0, 660, 661, 0, 1185, 662, 663,
	665, 667, 668, 664, 666, 669, 1246, 670, 0, 0,
	671, 672, 673, 733, 1269, 1306, 0, 675, 674, 676,
	677, 678, 736, 679, 680, 1849, 0, 0, 0, 681,
	682, 737, 683, 684, 685, 1182, 0, 0, 0, 1171,
	0, 1224, 1196, 1197, 1198, 1194, 1195, 1207, 0, 1177,
	0, 0, 0, 0, 0, 0, 1175, 1176, 296, 297,
	299, 298, 300, 301, 302, 303, 1208, 304, 305, 0,
	1206, 0, 0, 0, 1248, 1212, 0, 0, 306, 0,
	307, 308, 1288, 309, 310, 311, 312, 313, 314, 315,
	687, 1261, 0, 316, 1268, 317, 1267, 0, 1278, 318,
	319, 320, 321, 322, 323, 1214, 1247, 1179, 324, 1308,
	1309, 694, 0, 325, 326, 1254, 0, 1235, 0, 327,
	328, 329, 330, 331, 332, 333, 334, 0, 0, 336,
	337, 338, 335, 339, 0, 340, 0, 341, 342, 343,
	344, 345, 346, 0, 347, 348, 349, 1289, 350, 351,
	352, 1238, 1236, 1237, 1244, 1240, 1239, 1243, 353, 354,
	355, 356, 357, 1271, 358, 360, 1265, 1264, 1184, 363,
	359, 361, 0, 364, 362, 365, 0, 366, 367, 368,
	0, 0, 369, 1256, 371, 0, 372, 373, 374, 0,
	375, 376, 377, 0, 378, 379, 1190, 380, 381, 382,
	384, 386, 383, 385, 387, 388, 389, 390, 1279, 1280,
	391, 1203, 293, 0, 0, 0, 0, 0, 392, 393,
	394, 1263, 0, 0, 0, 395, 0, 396, 397, 398,
	0, 399, 400, 0, 1290, 401, 402, 403, 1276, 1277,
	404, 405, 406, 407, 408, 409, 410, 411, 412, 0,
	413, 1286, 0, 1213, 414, 0, 415, 416, 417, 418,
	419, 420, 421, 1249, 1250, 1253, 510, 1292, 422, 423,
	0, 424, 425, 426, 427, 428, 0, 0, 0, 294,
	429, 430, 431, 0, 1291, 511, 432, 1258, 1259, 0,
	1219, 0, 433, 434, 1293, 1251, 1294, 435, 436, 437,
	1295, 438, 0, 0, 0, 439, 440, 441, 442, 443,
	444, 0, 445, 447, 446, 0, 448, 1287, 1296, 449,
	450, 1297, 0, 451, 452, 453, 454, 455, 456, 459,
	1242, 1241, 457, 458, 460, 461, 0, 462, 463, 465,
	468, 464, 466, 467, 469, 482, 483, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 485,
	0, 484, 1298, 486, 487, 488, 489, 490, 497, 499,
	500, 495, 496, 498, 501, 502, 504, 492, 493, 494,
	1299, 503, 491, 1181, 295, 1300, 505, 506, 507, 508,
	1204, 1252, 509, 1266, 512, 513, 0, 0, 514, 0,
	515, 1186, 0, 517, 518, 519, 0, 0, 520, 521,
	716, 1301, 522, 1302, 1281, 523, 524, 1191, 525, 526,
	527, 528, 529, 530, 531, 532, 533, 0, 534, 535,
	718, 536, 537, 538, 719, 539, 540, 541, 1282, 542,
	721, 543, 544, 0, 545, 546, 547, 0, 548, 549,
	550, 551, 552, 553, 554, 555, 1262, 556, 557, 559,
	558, 560, 0, 561, 0, 562, 563, 564, 0, 0,
	0, 0, 0, 565, 566, 568, 0, 569, 570, 571,
	572, 567, 573, 574, 575, 576, 577, 0, 578, 579,
	580, 1303, 581, 582, 583, 584, 585, 1192, 586, 0,
	587, 588, 595, 596, 597, 589, 590, 591, 598, 599,
	600, 601, 602, 0, 604, 605, 603, 606, 607, 608,
	1245, 609, 610, 592, 593, 611, 612, 1304, 613, 614,
	615, 616, 617, 618, 619, 1260, 0, 620, 0, 621,
	622, 623, 624, 625, 627, 594, 628, 633, 634, 1307,
	629, 630, 631, 632, 1283, 636, 637, 638, 0, 639,
	640, 1178, 635, 626, 0, 641, 642, 643, 644, 645,
	646, 0, 647, 648, 0, 649, 1272, 1273, 1274, 1275,
	0, 659, 0, 650, 651, 652, 653, 1284, 654, 1285,
	1202, 655, 656, 657, 658, 0, 660, 661, 0, 1185,
	662, 663, 665, 667, 668, 664, 666, 669, 1246, 670,
	0, 0, 671, 672, 673, 733, 1269, 1306, 0, 675,
	674, 676, 677, 678, 736, 679, 680, 0, 0, 0,
	0, 681, 682, 737, 683, 684, 685, 1182, 0, 0,
	0, 0, 0, 1224, 1196, 1197, 1198, 1194, 1195, 1207,
	0, 1177, 0, 0, 0, 0, 0, 0, 1175, 1176,
	296, 297, 299, 298, 300, 301, 302, 303, 1208, 304,
	305, 0, 1206, 0, 0, 0, 1248, 1212, 0, 0,
	306, 0, 307, 308, 1288, 309, 310, 311, 312, 313,
	314, 315, 687, 1261, 0, 316, 1268, 317, 1267, 0,
	1278, 318, 319, 320, 321, 322, 323, 1214, 1247, 1179,
	324, 1308, 1309, 694, 0, 325, 326, 1254, 0, 1235,
	0, 327, 328, 329, 330, 331, 332, 333, 334, 0,
	0, 336, 337, 338, 335, 339, 0, 340, 0, 341,
	342, 343, 344, 5038, 346, 0, 347, 348, 349, 1289,
	350, 351, 352, 1238, 1236, 1237, 1244, 1240, 1239, 1243,
	353, 354, 355, 356, 357, 1271, 358, 360, 1265, 1264,
	1184, 363, 359, 361, 0, 364, 362, 365, 0, 366,
	367, 368, 0, 0, 369, 1256, 371, 0, 372, 373,
	374, 0, 375, 376, 377, 0, 378, 379, 1190, 380,
	381, 382, 384, 386, 383, 385, 387, 388, 389, 390,
	1279, 1280, 391, 1203, 293, 0, 0, 0, 0, 0,
	392, 393, 394, 1263, 0, 0, 0, 395, 0, 396,
	397, 398, 0, 399, 400, 0, 1290, 401, 402, 403,
	1276, 1277, 404, 405, 406, 407, 408, 409, 410, 411,
	412, 0, 413, 1286, 0, 1213, 414, 0, 415, 416,
	417, 418, 419, 420, 421, 1249, 1250, 1253, 510, 1292,
	422, 423, 0, 424, 425, 426, 427, 428, 0, 0,
	0, 294, 429, 430, 431, 0, 1291, 511, 432, 1258,
	1259, 0, 1219, 0, 433, 434, 1293, 1251, 1294, 435,
	436, 437, 1295, 438, 0, 0, 0, 439, 440, 441,
	442, 443, 444, 0, 445, 447, 446, 0, 448, 1287,
	1296, 449, 450, 1297, 0, 451, 452, 453, 454, 455,
	456, 459, 1242, 1241, 457, 458, 460, 461, 0, 462,
	463, 465, 468, 464, 466, 467, 469, 482, 483, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 485, 0, 484, 1298, 486, 487, 488, 489, 490,
	497, 499, 500, 495, 496, 498, 501, 502, 504, 492,
	493, 494, 1299, 503, 491, 1181, 295, 1300, 505, 506,
	507, 508, 1204, 1252, 509, 1266, 512, 513, 0, 0,
	514, 0, 515, 1186, 0, 517, 518, 519, 0, 0,
	520, 521, 716, 1301, 522, 1302, 1281, 523, 524, 1191,
	525, 526, 527, 528, 529, 530, 531, 532, 533, 0,
	534, 535, 718, 536, 537, 538, 719, 539, 540, 541,
	1282, 542, 721, 543, 544, 0, 545, 546, 547, 0,
	548, 549, 550, 551, 552, 553, 554, 555, 1262, 556,
	557, 559, 558, 560, 0, 561, 0, 562, 563, 564,
	0, 0, 0, 0, 0, 565, 566, 568, 0, 569,
	570, 571, 572, 567, 573, 574, 575, 576, 577, 0,
	578, 579, 580, 1303, 581, 582, 583, 584, 585, 1192,
	586, 0, 587, 588, 595, 596, 597, 589, 590, 591,
	598, 599, 600, 601, 602, 0, 604, 605, 603, 606,
	607, 608, 1245, 609, 610, 592, 593, 611, 612, 1304,
	613, 614, 615, 616, 617, 618, 619, 1260, 0, 620,
	0, 621, 622, 623, 624, 625, 627, 594, 628, 633,
	634, 1307, 629, 630, 631, 632, 1283, 636, 637, 638,
	0, 639, 640, 1178, 635, 626, 0, 641, 642, 643,
	644, 645, 646, 0, 647, 648, 0, 649, 1272, 1273,
	1274, 1275, 0, 659, 0, 650, 651, 652, 653, 1284,
	654, 1285, 1202, 655, 656, 657, 658, 0, 660, 661,
	0, 1185, 662, 663, 665, 667, 668, 664, 666, 669,
	1246, 670, 0, 0, 671, 672, 673, 733, 1269, 1306,
	0, 675, 674, 676, 677, 678, 736, 679, 680, 0,
	0, 0, 0, 681, 682, 737, 683, 684, 685, 1182,
	0, 0, 0, 0, 0, 1224, 1196, 1197, 1198, 1194,
	1195, 1207, 0, 1177, 0, 0, 0, 0, 0, 0,
	1175, 1176, 296, 297, 299, 298, 300, 301, 302, 303,
	1208, 304, 305, 0, 1206, 0, 0, 0, 1248, 1212,
	0, 0, 306, 0, 307, 308, 1288, 309, 310, 311,
	312, 313, 314, 315, 687, 1261, 0, 316, 1268, 317,
	1267, 0, 1278, 318, 319, 320, 321, 322, 323, 1214,
	1247, 1179, 324, 1308, 1309, 694, 0, 325, 326, 1254,
	0, 1235, 0, 327, 328, 329, 330, 331, 332, 333,
	334, 0, 0, 336, 337, 338, 335, 339, 0, 340,
	0, 341, 342, 343, 344, 345, 346, 0, 347, 348,
	349, 1289, 350, 351, 352, 1238, 1236, 1237, 1244, 1240,
	1239, 1243, 353, 354, 355, 356, 357, 1271, 358, 360,
	1265, 1264, 1184, 363, 359, 361, 0, 364, 362, 365,
	0, 366, 367, 368, 0, 0, 369, 1256, 371, 0,
	372, 373, 374, 0, 375, 376, 377, 0, 378, 379,
	1190, 380, 381, 382, 384, 386, 383, 385, 387, 388,
	389, 390, 1279, 1280, 391, 1203, 293, 0, 0, 0,
	0, 0, 392, 393, 394, 1263, 0, 0, 0, 395,
	0, 396, 397, 398, 0, 399, 400, 0, 1290, 401,
	402, 403, 1276, 1277, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 0, 413, 1286, 0, 1213, 414, 0,
	415, 416, 417, 418, 419, 420, 421, 1249, 1250, 1253,
	510, 1292, 422, 423, 0, 424, 425, 426, 427, 428,
	0, 0, 0, 2651, 429, 430, 431, 0, 1291, 511,
	432, 1258, 1259, 0, 1219, 0, 433, 434, 1293, 1251,
	1294, 435, 436, 437, 1295, 438, 0, 0, 0, 439,
	440, 441, 442, 443, 444, 0, 445, 447, 446, 0,
	448, 1287, 1296, 449, 450, 1297, 0, 451, 452, 453,
	454, 455, 456, 459, 1242, 1241, 457, 458, 460, 461,
	0, 462, 463, 465, 468, 464, 466, 467, 469, 482,
	483, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 485, 0, 484, 1298, 486, 487, 488,
	489, 490, 497, 499, 500, 495, 496, 498, 501, 502,
	504, 492, 493, 494, 1299, 503, 491, 1181, 295, 1300,
	505, 506, 507, 508, 1204, 1252, 509, 1266, 512, 513,
	0, 0, 514, 0, 515, 0, 0, 517, 518, 519,
	0, 0, 520, 521, 716, 1301, 522, 1302, 1281, 523,
	524, 1191, 525, 526, 527, 528, 529, 530, 531, 532,
	533, 0, 534, 535, 718, 536, 537, 538, 719, 539,
	540, 541, 1282, 542, 721, 543, 544, 2650, 545, 546,
	547, 0, 548, 549, 550, 551, 552, 553, 554, 555,
	1262, 556, 557, 559, 558, 560, 0, 561, 0, 562,
	563, 564, 0, 0, 0, 0, 0, 565, 566, 568,
	0, 569, 570, 571, 572, 567, 573, 574, 575, 576,
	577, 0, 578, 579, 580, 1303, 581, 582, 583, 584,
	585, 1192, 586, 0, 587, 588, 595, 596, 597, 589,
	590, 591, 598, 599, 600, 601, 602, 0, 604, 605,
	603, 606, 607, 608, 1245, 609, 610, 592, 593, 611,
	612, 1304, 613, 614, 615, 616, 617, 618, 619, 1260,
	0, 620, 0, 621, 622, 623, 624, 625, 627, 594,
	628, 633, 634, 1307, 629, 630, 631, 632, 1283, 636,
	637, 638, 0, 639, 640, 1178, 635, 626, 0, 641,
	642, 643, 644, 645, 646, 0, 647, 648, 0, 649,
	1272, 1273, 1274, 1275, 0, 659, 0, 650, 651, 652,
	653, 1284, 654, 1285, 1202, 655, 656, 657, 658, 0,
	660, 661, 0, 1185, 662, 663, 665, 667, 668, 664,
	666, 669, 1246, 670, 0, 0, 671, 672, 673, 733,
	1269, 1306, 0, 675, 674, 676, 677, 678, 736, 679,
	680, 0, 0, 0, 0, 681, 682, 737, 683, 684,
	685, 1182, 0, 0, 0, 0, 0, 1224, 1196, 1197,
	1198, 1194, 1195, 1207, 0, 1177, 0, 0, 0, 0,
	0, 0, 1175, 1176, 296, 297, 299, 298, 300, 301,
	302, 303, 1208, 304, 305, 0, 1206, 0, 0, 0,
	1248, 1212, 0, 0, 306, 0, 307, 308, 1288, 309,
	310, 311, 312, 313, 314, 315, 687, 1261, 0, 316,
	1268, 317, 1267, 0, 1278, 318, 319, 320, 321, 322,
	323, 1214, 1247, 1179, 324, 1308, 1309, 694, 0, 325,
	326, 1254, 0, 1235, 0, 327, 328, 329, 330, 331,
	332, 333, 334, 0, 0, 336, 337, 338, 335, 339,
	0, 340, 0, 341, 342, 343, 344, 4759, 346, 0,
	347, 348, 349, 1289, 350, 351, 352, 1238, 1236, 1237,
	1244, 1240, 1239, 1243, 353, 354, 355, 356, 357, 1271,
	358, 360, 1265, 1264, 1184, 363, 359, 361, 0, 364,
	362, 365, 0, 366, 367, 368, 0, 0, 369, 1256,
	371, 0, 372, 373, 374, 0, 375, 376, 377, 0,
	378, 379, 1190, 380, 381, 382, 384, 386, 383, 385,
	387, 388, 389, 390, 1279, 1280, 391, 1203, 293, 0,
	0, 0, 0, 0, 392, 393, 394, 1263, 0, 0,
	0, 395, 0, 396, 397, 398, 0, 399, 400, 0,
	1290, 401, 402, 403, 1276, 1277, 404, 405, 406, 407,
	408, 409, 410, 411, 412, 0, 413, 1286, 0, 1213,
	414, 0, 415, 416, 417, 418, 419, 420, 421, 1249,
	1250, 1253, 510, 1292, 422, 423, 0, 424, 425, 426,
	427, 428, 0, 0, 0, 294, 429, 430, 431, 0,
	1291, 511, 432, 1258, 1259, 0, 1219, 0, 433, 434,
	1293, 1251, 1294, 435, 436, 437, 1295, 438, 0, 0,
	0, 439, 440, 441, 442, 443, 444, 0, 445, 447,
	446, 0, 448, 1287, 1296, 449, 450, 1297, 0, 451,
	452, 453, 454, 455, 456, 459, 1242, 1241, 457, 458,
	460, 461, 0, 462, 463, 465, 468, 464, 466, 467,
	469, 482, 483, 470, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 485, 0, 484, 1298, 486,
	487, 488, 489, 490, 497, 499, 500, 495, 496, 498,
	501, 502, 504, 492, 493, 494, 1299, 503, 491, 1181,
	295, 1300, 505, 506, 507, 508, 1204, 1252, 509, 1266,
	512, 513, 0, 0, 514, 0, 515, 1186, 0, 517,
	518, 519, 0, 0, 520, 521, 716, 1301, 522, 1302,
	1281, 523, 524, 1191, 525, 526, 527, 528, 529, 530,
	531, 532, 533, 0, 534, 535, 718, 536, 537, 538,
	719, 539, 540, 541, 1282, 542, 721, 543, 544, 0,
	545, 546, 547, 0, 548, 549, 550, 551, 552, 553,
	554, 555, 1262, 556, 557, 559, 558, 560, 0, 561,
	0, 562, 563, 564, 0, 0, 0, 0, 0, 565,
	566, 568, 0, 569, 570, 571, 572, 567, 573, 574,
	575, 576, 577, 0, 578, 579, 580, 1303, 581, 582,
	583, 584, 585, 1192, 586, 0, 587, 588, 595, 596,
	597, 589, 590, 591, 598, 599, 600, 601, 602, 0,
	604, 605, 603, 606, 607, 608, 1245, 609, 610, 592,
	593, 611, 612, 1304, 613, 614, 615, 616, 617, 618,
	619, 1260, 0, 620, 0, 621, 622, 623, 624, 625,
	627, 594, 628, 633, 634, 1307, 629, 630, 631, 632,
	1283, 636, 637, 638, 0, 639, 640, 1178, 635, 626,
	0, 641, 642, 643, 644, 645, 646, 0, 647, 648,
	0, 649, 1272, 1273, 1274, 1275, 0, 659, 0, 650,
	651, 652, 653, 1284, 654, 1285, 1202, 655, 656, 657,
	658, 0, 660, 661, 0, 1185, 662, 663, 665, 667,
	668, 664, 666, 669, 1246, 670, 0, 0, 671, 672,
	673, 733, 1269, 1306, 0, 675, 674, 676, 677, 678,
	736, 679, 680, 0, 0, 0, 0, 681, 682, 737,
	683, 684, 685, 1182, 0, 0, 0, 0, 0, 1224,
	1196, 1197, 1198, 1194, 1195, 1207, 0, 1177, 0, 0,
	0, 0, 0, 0, 1175, 1176, 296, 297, 299, 298,
	300, 301, 302, 303, 1208, 304, 305, 0, 1206, 0,
	0, 0, 1248, 1212, 0, 0, 306, 0, 307, 308,
	1288, 309, 310, 311, 312, 313, 314, 315, 687, 1261,
	0, 316, 1268, 317, 1267, 0, 1278, 318, 319, 320,
	321, 322, 323, 1214, 1247, 1179, 324, 1308, 1309, 694,
	0, 325, 326, 1254, 0, 1235, 0, 327, 328, 329,
	330, 331, 332, 333, 334, 0, 0, 336, 337, 338,
	335, 339, 0, 340, 0, 341, 342, 343, 344, 345,
	346, 0, 347, 348, 349, 1289, 350, 351, 352, 1238,
	1236, 1237, 1244, 1240, 1239, 1243, 353, 354, 355, 356,
	357, 1271, 358, 360, 1265, 1264, 1184, 363, 359, 361,
	0, 364, 362, 365, 0, 366, 367, 368, 0, 0,
	369, 1256, 371, 0, 372, 373, 374, 0, 375, 376,
	377, 0, 378, 379, 1190, 380, 381, 382, 384, 386,
	383, 385, 387, 388, 389, 390, 1279, 1280, 391, 1203,
	293, 0, 0, 0, 0, 0, 392, 393, 394, 1263,
	0, 0, 0, 395, 0, 396, 397, 398, 0, 399,
	400, 0, 1290, 401, 402, 403, 1276, 1277, 404, 405,
	406, 407, 408, 409, 410, 411, 412, 0, 413, 1286,
	0, 1213, 414, 0, 415, 416, 417, 418, 419, 420,
	421, 1249, 1250, 1253, 510, 1292, 422, 423, 0, 424,
	425, 426, 427, 428, 0, 0, 0, 294, 429, 430,
	431, 0, 1291, 511, 432, 1258, 1259, 0, 1219, 0,
	433, 434, 1293, 1251, 1294, 435, 436, 437, 1295, 438,
	0, 0, 0, 439, 440, 441, 442, 443, 444, 0,
	445, 447, 446, 0, 448, 1287, 1296, 449, 450, 1297,
	0, 451, 452, 453, 454, 455, 456, 459, 1242, 1241,
	457, 458, 460, 461, 0, 462, 463, 465, 468, 464,
	466, 467, 469, 482, 483, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 485, 0, 484,
	1298, 486, 487, 488, 489, 490, 497, 499, 500, 495,
	496, 498, 501, 502, 504, 492, 493, 494, 1299, 503,
	491, 1181, 295, 1300, 505, 506, 507, 508, 1204, 1252,
	509, 1266, 512, 513, 0, 0, 514, 0, 515, 1186,
	0, 517, 518, 519, 0, 0, 520, 521, 716, 1301,
	522, 1302, 1281, 523, 524, 1191, 525, 526, 527, 528,
	529, 530, 531, 532, 533, 0, 534, 535, 718, 536,
	537, 538, 719, 539, 540, 541, 1282, 542, 721, 543,
	544, 0, 545, 546, 547, 0, 548, 549, 550, 551,
	552, 553, 554, 555, 1262, 556, 557, 559, 558, 560,
	0, 561, 0, 562, 563, 564, 0, 0, 0, 0,
	0, 565, 566, 568, 0, 569, 570, 571, 572, 567,
	573, 574, 575, 576, 577, 0, 578, 579, 580, 1303,
	581, 582, 583, 584, 585, 1192, 586, 0, 587, 588,
	595, 596, 597, 589, 590, 591, 598, 599, 600, 601,
	602, 0, 604, 605, 603, 606, 607, 608, 1245, 609,
	610, 592, 593, 611, 612, 1304, 613, 614, 615, 616,
	617, 618, 619, 1260, 0, 620, 0, 621, 622, 623,
	624, 625, 627, 594, 628, 633, 634, 1307, 629, 630,
	631, 632, 1283, 636, 637, 638, 0, 639, 640, 1178,
	635, 626, 0, 641, 642, 643, 644, 645, 646, 0,
	647, 648, 0, 649, 1272, 1273, 1274, 1275, 0, 659,
	0, 650, 651, 652, 653, 1284, 654, 1285, 1202, 655,
	656, 657, 658, 0, 660, 661, 0, 1185, 662, 663,
	665, 667, 668, 664, 666, 669, 1246, 670, 0, 0,
	671, 672, 673, 733, 1269, 1306, 0, 675, 674, 676,
	677, 678, 736, 679, 680, 0, 0, 0, 0, 681,
	682, 737, 683, 684, 685, 1182, 0, 0, 0, 0,
	0, 1224, 1196, 1197, 1198, 1194, 1195, 1207, 0, 1177,
	0, 0, 0, 0, 0, 0, 1175, 1176, 296, 297,
	299, 298, 300, 301, 302, 303, 1208, 304, 305, 0,
	1206, 0, 0, 0, 1248, 1212, 0, 0, 306, 0,
	307, 308, 1288, 309, 310, 311, 312, 313, 314, 315,
	687, 1261, 0, 316, 1268, 317, 1267, 0, 1278, 318,
	319, 320, 321, 322, 323, 1214, 1247, 1179, 324, 1308,
	1309, 694, 0, 325, 326, 1254, 0, 1235, 0, 327,
	328, 329, 330, 331, 332, 333, 334, 0, 0, 336,
	337, 338, 335, 339, 0, 340, 0, 341, 342, 343,
	344, 345, 346, 0, 347, 348, 349, 1289, 350, 351,
	352, 1238, 1236, 1237, 1244, 1240, 1239, 1243, 353, 354,
	355, 356, 357, 1271, 358, 360, 1265, 1264, 1184, 363,
	359, 361, 0, 364, 362, 365, 0, 366, 367, 368,
	0, 0, 369, 1256, 371, 0, 372, 373, 374, 0,
	375, 376, 377, 0, 378, 379, 1190, 380, 381, 382,
	384, 386, 383, 385, 387, 388, 389, 390, 1279, 1280,
	391, 1203, 293, 0, 0, 0, 0, 0, 392, 393,
	394, 1263, 0, 0, 0, 395, 0, 396, 397, 398,
	0, 399, 400, 0, 1290, 401, 402, 403, 1276, 1277,
	404, 405, 406, 407, 408, 409, 410, 411, 412, 0,
	413, 1286, 0, 1213, 414, 0, 415, 416, 417, 418,
	419, 420, 421, 1249, 1250, 1253, 510, 1292, 422, 423,
	0, 424, 425, 426, 427, 428, 0, 0, 0, 294,
	429, 430, 431, 0, 1291, 511, 432, 1258, 1259, 0,
	1219, 0, 433, 434, 1293, 1251, 1294, 435, 436, 437,
	1295, 438, 0, 0, 0, 439, 440, 441, 442, 443,
	444, 0, 445, 447, 446, 0, 448, 1287, 1296, 449,
	450, 1297, 0, 451, 452, 453, 454, 455, 456, 459,
	1242, 1241, 457, 458, 460, 461, 0, 462, 463, 465,
	468, 464, 466, 467, 469, 482, 483, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 485,
	0, 484, 1298, 486, 487, 488, 489, 490, 497, 499,
	500, 495, 496, 498, 501, 502, 504, 492, 493, 494,
	1299, 503, 491, 1181, 4311, 1300, 505, 506, 507, 508,
	1204, 1252, 509, 1266, 512, 513, 0, 0, 514, 0,
	515, 0, 0, 517, 518, 519, 0, 0, 520, 521,
	716, 1301, 522, 1302, 1281, 523, 524, 1191, 525, 526,
	527, 528, 529, 530, 531, 532, 533, 0, 534, 535,
	718, 536, 537, 538, 719, 539, 540, 541, 1282, 542,
	721, 543, 544, 0, 545, 546, 547, 0, 548, 549,
	550, 551, 552, 553, 554, 555, 1262, 556, 557, 559,
	558, 560, 0, 561, 0, 562, 563, 564, 0, 0,
	0, 0, 0, 565, 566, 568, 0, 569, 570, 571,
	572, 567, 573, 574, 575, 576, 577, 0, 578, 579,
	580, 1303, 581, 582, 583, 584, 585, 1192, 586, 0,
	587, 588, 595, 596, 597, 589, 590, 591, 598, 599,
	600, 601, 602, 0, 604, 605, 603, 606, 607, 608,
	1245, 609, 610, 592, 593, 611, 612, 1304, 613, 614,
	615, 616, 617, 618, 619, 1260, 0, 620, 0, 621,
	622, 623, 624, 625, 627, 594, 628, 633, 634, 1307,
	629, 630, 631, 632, 1283, 636, 637, 638, 0, 639,
	640, 1178, 635, 626, 0, 641, 642, 643, 644, 645,
	646, 0, 647, 648, 0, 649, 1272, 1273, 1274, 1275,
	0, 659, 0, 650, 651, 652, 653, 1284, 654, 1285,
	1202, 655, 656, 657, 658, 0, 660, 661, 0, 1185,
	662, 663, 665, 667, 668, 664, 666, 669, 1246, 670,
	0, 0, 671, 672, 673, 733, 1269, 1306, 0, 675,
	674, 676, 677, 678, 736, 679, 680, 0, 0, 0,
	0, 681, 682, 737, 683, 684, 685, 1182, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1177, 0, 0, 0, 0, 0, 0, 1175, 1176,
	2084, 1224, 1196, 1197, 1198, 1194, 1195, 1207, 1208, 0,
	0, 0, 1206, 0, 0, 0, 0, 0, 296, 297,
	299, 298, 300, 301, 302, 303, 0, 304, 305, 0,
	0, 0, 0, 0, 1248, 1212, 0, 0, 306, 0,
	307, 308, 1288, 309, 310, 311, 312, 313, 314, 315,
	687, 1261, 0, 316, 1268, 317, 1267, 0, 1278, 318,
	319, 320, 321, 322, 323, 1214, 1247, 1179, 324, 1308,
	1309, 694, 0, 325, 326, 1254, 0, 1235, 0, 327,
	328, 329, 330, 331, 332, 333, 334, 0, 0, 336,
	337, 338, 335, 339, 0, 340, 0, 341, 342, 343,
	344, 345, 346, 0, 347, 348, 349, 1289, 350, 351,
	352, 1238, 1236, 1237, 1244, 1240, 1239, 1243, 353, 354,
	355, 356, 357, 1271, 358, 360, 1265, 1264, 1184, 363,
	359, 361, 0, 364, 362, 365, 0, 366, 367, 368,
	0, 0, 369, 1256, 371, 0, 372, 373, 374, 0,
	375, 376, 377, 0, 378, 379, 1190, 380, 381, 382,
	384, 386, 383, 385, 387, 388, 389, 390, 1279, 1280,
	391, 1203, 293, 0, 0, 0, 0, 0, 392, 393,
	394, 1263, 0, 0, 0, 395, 0, 396, 397, 398,
	0, 399, 400, 0, 1290, 401, 402, 403, 1276, 1277,
	404, 405, 406, 407, 408, 409, 410, 411, 412, 0,
	413, 1286, 0, 1213, 414, 0, 415, 416, 417, 418,
	419, 420, 421, 1249, 1250, 1253, 510, 1292, 422, 423,
	0, 424, 425, 426, 427, 428, 0, 0, 0, 294,
	429, 430, 431, 0, 1291, 511, 432, 1258, 1259, 0,
	1219, 0, 433, 434, 1293, 1251, 1294, 435, 436, 437,
	1295, 438, 0, 0, 0, 439, 440, 441, 442, 443,
	444, 0, 445, 447, 446, 0, 448, 1287, 1296, 449,
	450, 1297, 0, 451, 452, 453, 454, 455, 456, 459,
	1242, 1241, 457, 458, 460, 461, 0, 462, 463, 465,
	468, 464, 466, 467, 469, 482, 483, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 485,
	0, 484, 1298, 486, 487, 488, 489, 490, 497, 499,
	500, 495, 496, 498, 501, 502, 504, 492, 493, 494,
	1299, 503, 491, 1181, 295, 1300, 505, 506, 507, 508,
	1204, 1252, 509, 1266, 512, 513, 0, 0, 514, 0,
	515, 0, 0, 517, 518, 519, 0, 0, 520, 521,
	716, 1301, 522, 1302, 1281, 523, 524, 1191, 525, 526,
	527, 528, 529, 530, 531, 532, 533, 0, 534, 535,
	718, 536, 537, 538, 719, 539, 540, 541, 1282, 542,
	721, 543, 544, 0, 545, 546, 547, 0, 548, 549,
	550, 551, 552, 553, 554, 555, 1262, 556, 557, 559,
	558, 560, 0, 561, 0, 562, 563, 564, 0, 0,
	0, 0, 0, 565, 566, 568, 0, 569, 570, 571,
	572, 567, 573, 574, 575, 576, 577, 0, 578, 579,
	580, 1303, 581, 582, 583, 584, 585, 1192, 586, 0,
	587, 588, 595, 596, 597, 589, 590, 591, 598, 599,
	600, 601, 602, 0, 604, 605, 603, 606, 607, 608,
	1245, 609, 610, 592, 593, 611, 612, 1304, 613, 614,
	615, 616, 617, 618, 619, 1260, 0, 620, 0, 621,
	622, 623, 624, 625, 627, 594, 628, 633, 634, 1307,
	629, 630, 631, 632, 1283, 636, 637, 638, 0, 639,
	640, 1178, 635, 626, 0, 641, 642, 643, 644, 645,
	646, 0, 647, 648, 0, 649, 1272, 1273, 1274, 1275,
	0, 659, 0, 650, 651, 652, 653, 1284, 654, 1285,
	1202, 655, 656, 657, 658, 0, 660, 661, 0, 1185,
	662, 663, 665, 667, 668, 664, 666, 669, 1246, 670,
	0, 0, 671, 672, 673, 733, 1269, 1306, 3981, 675,
	674, 676, 677, 678, 736, 679, 680, 0, 0, 0,
	0, 681, 682, 737, 683, 684, 685, 1182, 0, 0,
	0, 0, 0, 1224, 1196, 1197, 1198, 1194, 1195, 1207,
	0, 1177, 0, 0, 0, 0, 0, 0, 1175, 1176,
	296, 297, 299, 298, 300, 301, 302, 303, 1208, 304,
	305, 0, 1206, 0, 0, 0, 1248, 1212, 0, 0,
	306, 0, 307, 308, 1288, 309, 310, 311, 312, 313,
	314, 315, 687, 1261, 0, 316, 1268, 317, 1267, 0,
	1278, 318, 319, 320, 321, 322, 323, 1214, 1247, 1179,
	324, 1308, 1309, 694, 0, 325, 326, 1254, 0, 1235,
	0, 327, 328, 329, 330, 331, 332, 333, 334, 0,
	0, 336, 337, 338, 335, 339, 0, 340, 0, 341,
	342, 343, 344, 345, 346, 0, 347, 348, 349, 1289,
	350, 351, 352, 1238, 1236, 1237, 1244, 1240, 1239, 1243,
	353, 354, 355, 356, 357, 1271, 358, 360, 1265, 1264,
	1184, 363, 359, 361, 0, 364, 362, 365, 0, 366,
	367, 368, 0, 0, 369, 1256, 371, 0, 372, 373,
	374, 0, 375, 376, 377, 0, 378, 379, 1190, 380,
	381, 382, 384, 386, 383, 385, 387, 388, 389, 390,
	1279, 1280, 391, 1203, 293, 0, 0, 0, 0, 0,
	392, 393, 394, 1263, 0, 0, 0, 395, 0, 396,
	397, 398, 0, 399, 400, 0, 1290, 401, 402, 403,
	1276, 1277, 404, 405, 406, 407, 408, 409, 410, 411,
	412, 0, 413, 1286, 0, 1213, 414, 0, 415, 416,
	417, 418, 419, 420, 421, 1249, 1250, 1253, 510, 1292,
	422, 423, 0, 424, 425, 426, 427, 428, 0, 0,
	0, 294, 429, 430, 431, 0, 1291, 511, 432, 1258,
	1259, 0, 1219, 0, 433, 434, 1293, 1251, 1294, 435,
	436, 437, 1295, 438, 0, 0, 0, 439, 440, 441,
	442, 443, 444, 0, 445, 447, 446, 0, 448, 1287,
	1296, 449, 450, 1297, 0, 451, 452, 453, 454, 455,
	456, 459, 1242, 1241, 457, 458, 460, 461, 0, 462,
	463, 465, 468, 464, 466, 467, 469, 482, 483, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 485, 0, 484, 1298, 486, 487, 488, 489, 490,
	497, 499, 500, 495, 496, 498, 501, 502, 504, 492,
	493, 494, 1299, 503, 491, 1181, 295, 1300, 505, 506,
	507, 508, 1204, 1252, 509, 1266, 512, 513, 0, 0,
	514, 0, 515, 0, 0, 517, 518, 519, 0, 0,
	520, 521, 716, 1301, 522, 1302, 1281, 523, 524, 1191,
	525, 526, 527, 528, 529, 530, 531, 532, 533, 0,
	534, 535, 718, 536, 537, 538, 719, 539, 540, 541,
	1282, 542, 721, 543, 544, 0, 545, 546, 547, 0,
	548, 549, 550, 551, 552, 553, 554, 555, 1262, 556,
	557, 559, 558, 560, 0, 561, 0, 562, 563, 564,
	0, 0, 0, 0, 0, 565, 566, 568, 0, 569,
	570, 571, 572, 567, 573, 574, 575, 576, 577, 0,
	578, 579, 580, 1303, 581, 582, 583, 584, 585, 1192,
	586, 0, 587, 588, 595, 596, 597, 589, 590, 591,
	598, 599, 600, 601, 602, 0, 604, 605, 603, 606,
	607, 608, 1245, 609, 610, 592, 593, 611, 612, 1304,
	613, 614, 615, 616, 617, 618, 619, 1260, 0, 620,
	0, 621, 622, 623, 624, 625, 627, 594, 628, 633,
	634, 1307, 629, 630, 631, 632, 1283, 636, 637, 638,
	0, 639, 640, 1178, 635, 626, 0, 641, 642, 643,
	644, 645, 646, 0, 647, 648, 0, 649, 1272, 1273,
	1274, 1275, 0, 659, 0, 650, 651, 652, 653, 1284,
	654, 1285, 1202, 655, 656, 657, 658, 0, 660, 661,
	0, 1185, 662, 663, 665, 667, 668, 664, 666, 669,
	1246, 670, 0, 0, 671, 672, 673, 733, 1269, 1306,
	0, 675, 674, 676, 677, 678, 736, 679, 680, 0,
	0, 0, 0, 681, 682, 737, 683, 684, 685, 1182,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1177, 0, 0, 0, 0, 0, 0,
	1175, 1176, 2084, 1224, 1196, 1197, 1198, 1194, 1195, 1207,
	1208, 0, 0, 0, 1206, 0, 0, 0, 0, 0,
	296, 297, 299, 298, 300, 301, 302, 303, 0, 304,
	305, 0, 0, 0, 0, 0, 1248, 1212, 0, 0,
	306, 0, 307, 308, 1288, 309, 310, 311, 312, 313,
	314, 315, 687, 1261, 0, 316, 1268, 317, 1267, 0,
	1278, 318, 319, 320, 321, 322, 323, 1214, 1247, 1179,
	324, 1308, 1309, 694, 0, 325, 326, 1254, 0, 1235,
	0, 327, 328, 329, 330, 331, 332, 333, 334, 0,
	0, 336, 337, 338, 335, 339, 0, 340, 0, 341,
	342, 343, 344, 345, 346, 0, 347, 348, 349, 1289,
	350, 351, 352, 1238, 1236, 1237, 1244, 1240, 1239, 1243,
	353, 354, 355, 356, 357, 1271, 358, 360, 1265, 1264,
	1184, 363, 359, 361, 0, 364, 362, 365, 0, 366,
	367, 368, 0, 0, 369, 1256, 371, 0, 372, 373,
	374, 0, 375, 376, 377, 0, 378, 379, 1190, 380,
	381, 382, 384, 386, 383, 385, 387, 388, 389, 390,
	1279, 1280, 391, 1203, 293, 0, 0, 0, 0, 0,
	392, 393, 394, 1263, 0, 0, 0, 395, 0, 396,
	397, 398, 0, 399, 400, 2909, 1290, 401, 402, 403,
	1276, 1277, 404, 405, 406, 407, 408, 409, 410, 411,
	412, 0, 413, 1286, 0, 1213, 414, 0, 415, 416,
	417, 418, 419, 420, 421, 1249, 1250, 1253, 510, 1292,
	422, 423, 0, 424, 425, 426, 427, 428, 0, 0,
	0, 294, 429, 430, 431, 0, 1291, 511, 432, 1258,
	1259, 0, 1219, 0, 433, 434, 1293, 1251, 1294, 435,
	436, 437, 1295, 438, 0, 0, 0, 439, 440, 441,
	442, 443, 444, 0, 445, 447, 446, 0, 448, 1287,
	1296, 449, 450, 1297, 0, 451, 452, 453, 454, 455,
	456, 459, 1242, 1241, 457, 458, 460, 461, 0, 462,
	463, 465, 468, 464, 466, 467, 469, 482, 483, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 485, 0, 484, 1298, 486, 487, 488, 489, 490,
	497, 499, 500, 495, 496, 498, 501, 502, 504, 492,
	493, 494, 1299, 503, 491, 1181, 295, 1300, 505, 506,
	507, 508, 1204, 1252, 509, 1266, 512, 513, 0, 0,
	514, 0, 515, 0, 0, 517, 518, 519, 0, 0,
	520, 521, 716, 1301, 522, 1302, 1281, 523, 524, 1191,
	525, 526, 527, 528, 529, 530, 531, 532, 533, 0,
	534, 535, 718, 536, 537, 538, 719, 539, 540, 541,
	1282, 542, 721, 543, 544, 0, 545, 546, 547, 0,
	548, 549, 550, 551, 552, 553, 554, 555, 1262, 556,
	557, 559, 558, 560, 0, 561, 0, 562, 563, 564,
	0, 0, 0, 0, 0, 565, 566, 568, 0, 569,
	570, 571, 572, 567, 573, 574, 575, 576, 577, 0,
	578, 579, 580, 1303, 581, 582, 583, 584, 585, 1192,
	586, 0, 587, 588, 595, 596, 597, 589, 590, 591,
	598, 599, 600, 601, 602, 0, 604, 605, 603, 606,
	607, 608, 1245, 609, 610, 592, 593, 611, 612, 1304,
	613, 614, 615, 616, 617, 618, 619, 1260, 0, 620,
	0, 621, 622, 623, 624, 625, 627, 594, 628, 633,
	634, 1307, 629, 630, 631, 632, 1283, 636, 637, 638,
	0, 639, 640, 1178, 635, 626, 0, 641, 642, 643,
	644, 645, 646, 0, 647, 648, 0, 649, 1272, 1273,
	1274, 1275, 0, 659, 0, 650, 651, 652, 653, 1284,
	654, 1285, 1202, 655, 656, 657, 658, 0, 660, 661,
	0, 1185, 662, 663, 665, 667, 668, 664, 666, 669,
	1246, 670, 0, 0, 671, 672, 673, 733, 1269, 1306,
	0, 675, 674, 676, 677, 678, 736, 679, 680, 0,
	0, 0, 0, 681, 682, 737, 683, 684, 685, 1182,
	0, 0, 0, 0, 0, 1224, 1196, 1197, 1198, 1194,
	1195, 1207, 0, 1177, 0, 0, 0, 0, 0, 0,
	1175, 1176, 296, 297, 299, 298, 300, 301, 302, 303,
	1208, 304, 305, 0, 1206, 0, 0, 0, 1248, 1212,
	0, 0, 306, 0, 307, 308, 1288, 309, 310, 311,
	312, 313, 314, 315, 687, 1261, 0, 316, 1268, 317,
	1267, 0, 1278, 318, 319, 320, 321, 322, 323, 1214,
	1247, 1179, 324, 1308, 1309, 694, 0, 325, 326, 1254,
	0, 1235, 0, 327, 328, 329, 330, 331, 332, 333,
	334, 0, 0, 336, 337, 338, 335, 339, 0, 340,
	0, 341, 342, 343, 344, 345, 346, 0, 347, 348,
	349, 1289, 350, 351, 352, 1238, 1236, 1237, 1244, 1240,
	1239, 1243, 353, 354, 355, 356, 357, 1271, 358, 360,
	1265, 1264, 1184, 363, 359, 361, 0, 364, 362, 365,
	0, 366, 367, 368, 0, 0, 369, 1256, 371, 0,
	372, 373, 374, 0, 375, 376, 377, 0, 378, 379,
	1190, 380, 381, 382, 384, 386, 383, 385, 387, 388,
	389, 390, 1279, 1280, 391, 1203, 293, 0, 0, 0,
	0, 0, 392, 393, 394, 1263, 0, 0, 0, 395,
	0, 396, 397, 398, 0, 399, 400, 0, 1290, 401,
	402, 403, 1276, 1277, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 0, 413, 1286, 0, 1213, 414, 0,
	415, 416, 417, 418, 419, 420, 421, 1249, 1250, 1253,
	510, 1292, 422, 423, 0, 424, 425, 426, 427, 428,
	0, 0, 0, 294, 429, 430, 431, 0, 1291, 511,
	432, 1258, 1259, 0, 1219, 0, 433, 434, 1293, 1251,
	1294, 435, 436, 437, 1295, 438, 0, 0, 0, 439,
	440, 441, 442, 443, 444, 0, 445, 447, 446, 0,
	448, 1287, 1296, 449, 450, 1297, 0, 451, 452, 453,
	454, 455, 456, 459, 1242, 1241, 457, 458, 460, 461,
	0, 462, 463, 465, 468, 464, 466, 467, 469, 482,
	483, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 485, 0, 484, 1298, 486, 487, 488,
	489, 490, 497, 499, 500, 495, 496, 498, 501, 502,
	504, 492, 493, 494, 1299, 503, 491, 1181, 295, 1300,
	505, 506, 507, 508, 1204, 1252, 509, 1266, 512, 513,
	0, 0, 514, 0, 515, 0, 0, 517, 518, 519,
	0, 0, 520, 521, 716, 1301, 522, 1302, 1281, 523,
	524, 1191, 525, 526, 527, 528, 529, 530, 531, 532,
	533, 0, 534, 535, 718, 536, 537, 538, 719, 539,
	540, 541, 1282, 542, 721, 543, 544, 0, 545, 546,
	547, 0, 548, 549, 550, 551, 552, 553, 554, 555,
	1262, 556, 557, 559, 558, 560, 0, 561, 0, 562,
	563, 564, 0, 0, 0, 0, 0, 565, 566, 568,
	0, 569, 570, 571, 572, 567, 573, 574, 575, 576,
	577, 0, 578, 579, 580, 1303, 581, 582, 583, 584,
	585, 1192, 586, 0, 587, 588, 595, 596, 597, 589,
	590, 591, 598, 599, 600, 601, 602, 0, 604, 605,
	603, 606, 607, 608, 1245, 609, 610, 592, 593, 611,
	612, 1304, 613, 614, 615, 616, 617, 618, 619, 1260,
	0, 620, 0, 621, 622, 623, 624, 625, 627, 594,
	628, 633, 634, 1307, 629, 630, 631, 632, 1283, 636,
	637, 638, 0, 639, 640, 1178, 635, 626, 0, 641,
	642, 643, 644, 645, 646, 0, 647, 648, 0, 649,
	1272, 1273, 1274, 1275, 0, 659, 0, 650, 651, 652,
	653, 1284, 654, 1285, 1202, 655, 656, 657, 658, 0,
	660, 661, 0, 1185, 662, 663, 665, 667, 668, 664,
	666, 669, 1246, 670, 0, 0, 671, 672, 673, 733,
	1269, 1306, 0, 675, 674, 676, 677, 678, 736, 679,
	680, 0, 0, 0, 0, 681, 682, 737, 683, 684,
	685, 1182, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1177, 0, 0, 0, 0,
	0, 0, 1175, 1176, 0, 0, 0, 0, 0, 0,
	0, 0, 1208, 2012, 0, 2914, 1206, 1224, 1196, 1197,
	1198, 1194, 1195, 1207, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 296, 297, 299, 298, 300, 301,
	302, 303, 0, 304, 305, 0, 0, 0, 0, 0,
	1248, 1212, 0, 0, 306, 0, 307, 308, 1288, 309,
	310, 311, 312, 313, 314, 315, 687, 1261, 0, 316,
	1268, 317, 1267, 0, 1278, 318, 319, 320, 321, 322,
	323, 1214, 1247, 1179, 324, 1308, 1309, 694, 0, 325,
	326, 1254, 0, 1235, 0, 327, 328, 329, 330, 331,
	332, 333, 334, 0, 0, 336, 337, 338, 335, 339,
	0, 340, 0, 341, 342, 343, 344, 345, 346, 0,
	347, 348, 349, 1289, 350, 351, 352, 1238, 1236, 1237,
	1244, 1240, 1239, 1243, 353, 354, 355, 356, 357, 1271,
	358, 360, 1265, 1264, 1184, 363, 359, 361, 0, 364,
	362, 365, 0, 366, 367, 368, 0, 0, 369, 1256,
	371, 0, 372, 373, 374, 0, 375, 376, 377, 0,
	378, 379, 1190, 380, 381, 382, 384, 386, 383, 385,
	387, 388, 389, 390, 1279, 1280, 391, 1203, 293, 0,
	0, 0, 0, 0, 392, 393, 394, 1263, 0, 0,
	0, 395, 0, 396, 397, 398, 0, 399, 400, 0,
	1290, 401, 402, 403, 1276, 1277, 404, 405, 406, 407,
	408, 409, 410, 411, 412, 0, 413, 1286, 0, 1213,
	414, 0, 415, 416, 417, 418, 419, 420, 421, 1249,
	1250, 1253, 510, 1292, 422, 423, 0, 424, 425, 426,
	427, 428, 0, 0, 0, 294, 429, 430, 431, 0,
	1291, 511, 432, 1258, 1259, 0, 1219, 0, 433, 434,
	1293, 1251, 1294, 435, 436, 437, 1295, 438, 0, 0,
	0, 439, 440, 441, 442, 443, 444, 0, 445, 447,
	446, 0, 448, 1287, 1296, 449, 450, 1297, 0, 451,
	452, 453, 454, 455, 456, 459, 1242, 1241, 457, 458,
	460, 461, 0, 462, 463, 465, 468, 464, 466, 467,
	469, 482, 483, 470, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 485, 0, 484, 1298, 486,
	487, 488, 489, 490, 497, 499, 500, 495, 496, 498,
	501, 502, 504, 492, 493, 494, 1299, 503, 491, 1181,
	295, 1300, 505, 506, 507, 508, 1204, 1252, 509, 1266,
	512, 513, 0, 0, 514, 0, 515, 0, 0, 517,
	518, 519, 0, 0, 520, 521, 716, 1301, 522, 1302,
	1281, 523, 524, 1191, 525, 526, 527, 528, 529, 530,
	531, 532, 533, 0, 534, 535, 718, 536, 537, 538,
	719, 539, 540, 541, 1282, 542, 721, 543, 544, 0,
	545, 546, 547, 0, 548, 549, 550, 551, 552, 553,
	554, 555, 1262, 556, 557, 559, 558, 560, 0, 561,
	0, 562, 563, 564, 0, 0, 0, 0, 0, 565,
	566, 568, 0, 569, 570, 571, 572, 567, 573, 574,
	575, 576, 577, 0, 578, 579, 580, 1303, 581, 582,
	583, 584, 585, 1192, 586, 0, 587, 588, 595, 596,
	597, 589, 590, 591, 598, 599, 600, 601, 602, 0,
	604, 605, 603, 606, 607, 608, 1245, 609, 610, 592,
	593, 611, 612, 1304, 613, 614, 615, 616, 617, 618,
	619, 1260, 0, 620, 0, 621, 622, 623, 624, 625,
	627, 594, 628, 633, 634, 1307, 629, 630, 631, 632,
	1283, 636, 637, 638, 0, 639, 640, 1178, 635, 626,
	0, 641, 642, 643, 644, 645, 646, 0, 647, 648,
	0, 649, 1272, 1273, 1274, 1275, 0, 659, 0, 650,
	651, 652, 653, 1284, 654, 1285, 1202, 655, 656, 657,
	658, 0, 660, 661, 0, 1185, 662, 663, 665, 667,
	668, 664, 666, 669, 1246, 670, 0, 0, 671, 672,
	673, 733, 1269, 1306, 0, 675, 674, 676, 677, 678,
	736, 679, 680, 0, 0, 0, 0, 681, 682, 737,
	683, 684, 685, 1182, 0, 0, 0, 2912, 0, 1224,
	1196, 1197, 1198, 1194, 1195, 1207, 0, 1177, 0, 0,
	0, 0, 0, 0, 1175, 1176, 296, 297, 299, 298,
	300, 301, 302, 303, 1208, 304, 305, 0, 1206, 0,
	0, 0, 1248, 1212, 0, 0, 306, 0, 307, 308,
	1288, 309, 310, 311, 312, 313, 314, 315, 687, 1261,
	0, 316, 1268, 317, 1267, 0, 1278, 318, 319, 320,
	321, 322, 323, 1214, 1247, 1179, 324, 1308, 1309, 694,
	0, 325, 326, 1254, 0, 1235, 0, 327, 328, 329,
	330, 331, 332, 333, 334, 0, 0, 336, 337, 338,
	335, 339, 0, 340, 0, 341, 342, 343, 344, 345,
	346, 0, 347, 348, 349, 1289, 350, 351, 352, 1238,
	1236, 1237, 1244, 1240, 1239, 1243, 353, 354, 355, 356,
	357, 1271, 358, 360, 1265, 1264, 1184, 363, 359, 361,
	0, 364, 362, 365, 0, 366, 367, 368, 0, 0,
	369, 1256, 371, 0, 372, 373, 374, 0, 375, 376,
	377, 0, 378, 379, 1190, 380, 381, 382, 384, 386,
	383, 385, 387, 388, 389, 390, 1279, 1280, 391, 1203,
	293, 0, 0, 0, 0, 0, 392, 393, 394, 1263,
	0, 0, 0, 395, 0, 396, 397, 398, 0, 399,
	400, 0, 1290, 401, 402, 403, 1276, 1277, 404, 405,
	406, 407, 408, 409, 410, 411, 412, 0, 413, 1286,
	0, 1213, 414, 0, 415, 416, 417, 418, 419, 420,
	421, 1249, 1250, 1253, 510, 1292, 422, 423, 0, 424,
	425, 426, 427, 428, 0, 0, 0, 294, 429, 430,
	431, 0, 1291, 511, 432, 1258, 1259, 0, 1219, 0,
	433, 434, 1293, 1251, 1294, 435, 436, 437, 1295, 438,
	0, 0, 0, 439, 440, 441, 442, 443, 444, 0,
	445, 447, 446, 0, 448, 1287, 1296, 449, 450, 1297,
	0, 451, 452, 453, 454, 455, 456, 459, 1242, 1241,
	457, 458, 460, 461, 0, 462, 463, 465, 468, 464,
	466, 467, 469, 482, 483, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 485, 0, 484,
	1298, 486, 487, 488, 489, 490, 497, 499, 500, 495,
	496, 498, 501, 502, 504, 492, 493, 494, 1299, 503,
	491, 1181, 295, 1300, 505, 506, 507, 508, 1204, 1252,
	509, 1266, 512, 513, 0, 0, 514, 0, 515, 0,
	0, 517, 518, 519, 0, 0, 520, 521, 716, 1301,
	522, 1302, 1281, 523, 524, 1191, 525, 526, 527, 528,
	529, 530, 531, 532, 533, 0, 534, 535, 718, 536,
	537, 538, 719, 539, 540, 541, 1282, 542, 721, 543,
	544, 0, 545, 546, 547, 0, 548, 549, 550, 551,
	552, 553, 554, 555, 1262, 556, 557, 559, 558, 560,
	0, 561, 0, 562, 563, 564, 0, 0, 0, 0,
	0, 565, 566, 568, 0, 569, 570, 571, 572, 567,
	573, 574, 575, 576, 577, 0, 578, 579, 580, 1303,
	581, 582, 583, 584, 585, 1192, 586, 0, 587, 588,
	595, 596, 597, 589, 590, 591, 598, 599, 600, 601,
	602, 0, 604, 605, 603, 606, 607, 608, 1245, 609,
	610, 592, 593, 611, 612, 1304, 613, 614, 615, 616,
	617, 618, 619, 1260, 0, 620, 0, 621, 622, 623,
	624, 625, 627, 594, 628, 633, 634, 1307, 629, 630,
	631, 632, 1283, 636, 637, 638, 0, 639, 640, 1178,
	635, 626, 0, 641, 642, 643, 644, 645, 646, 0,
	647, 648, 0, 649, 1272, 1273, 1274, 1275, 0, 659,
	0, 650, 651, 652, 653, 1284, 654, 1285, 1202, 655,
	656, 657, 658, 0, 660, 661, 0, 1185, 662, 663,
	665, 667, 668, 664, 666, 669, 1246, 670, 0, 0,
	671, 672, 673, 733, 1269, 1306, 0, 675, 674, 676,
	677, 678, 736, 679, 680, 0, 0, 0, 0, 681,
	682, 737, 683, 684, 685, 1182, 0, 0, 0, 2900,
	0, 1224, 1196, 1197, 1198, 1194, 1195, 1207, 0, 1177,
	0, 0, 0, 0, 0, 0, 1175, 1176, 296, 297,
	299, 298, 300, 301, 302, 303, 1208, 304, 305, 0,
	1206, 0, 0, 0, 1248, 1212, 0, 0, 306, 0,
	307, 308, 1288, 309, 310, 311, 312, 313, 314, 315,
	687, 1261, 0, 316, 1268, 317, 1267, 0, 1278, 318,
	319, 320, 321, 322, 323, 1214, 1247, 1179, 324, 1308,
	1309, 694, 0, 325, 326, 1254, 0, 1235, 0, 327,
	328, 329, 330, 331, 332, 333, 334, 0, 0, 336,
	337, 338, 335, 339, 0, 340, 0, 341, 342, 343,
	344, 345, 346, 0, 347, 348, 349, 1289, 350, 351,
	352, 1238, 1236, 1237, 1244, 1240, 1239, 1243, 353, 354,
	355, 356, 357, 1271, 358, 360, 1265, 1264, 1184, 363,
	359, 361, 0, 364, 362, 365, 0, 366, 367, 368,
	0, 0, 369, 1256, 371, 0, 372, 373, 374, 0,
	375, 376, 377, 0, 378, 379, 1190, 380, 381, 382,
	384, 386, 383, 385, 387, 388, 389, 390, 1279, 1280,
	391, 1203, 293, 0, 0, 0, 0, 0, 392, 393,
	394, 1263, 0, 0, 0, 395, 0, 396, 397, 398,
	0, 399, 400, 0, 1290, 401, 402, 403, 1276, 1277,
	404, 405, 406, 407, 408, 409, 410, 411, 412, 0,
	413, 1286, 0, 1213, 414, 0, 415, 416, 417, 418,
	419, 420, 421, 1249, 1250, 1253, 510, 1292, 422, 423,
	0, 424, 425, 426, 427, 428, 0, 0, 0, 294,
	429, 430, 431, 0, 1291, 511, 432, 1258, 1259, 0,
	1219, 0, 433, 434, 1293, 1251, 1294, 435, 436, 437,
	1295, 438, 0, 0, 0, 439, 440, 441, 442, 443,
	444, 0, 445, 447, 446, 0, 448, 1287, 1296, 449,
	450, 1297, 0, 451, 452, 453, 454, 455, 456, 459,
	1242, 1241, 457, 458, 460, 461, 0, 462, 463, 465,
	468, 464, 466, 467, 469, 482, 483, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 485,
	0, 484, 1298, 486, 487, 488, 489, 490, 497, 499,
	500, 495, 496, 498, 501, 502, 504, 492, 493, 494,
	1299, 503, 491, 1181, 295, 1300, 505, 506, 507, 508,
	1204, 1252, 509, 1266, 512, 513, 0, 0, 514, 0,
	515, 0, 0, 517, 518, 519, 0, 0, 520, 521,
	716, 1301, 522, 1302, 1281, 523, 524, 1191, 525, 526,
	527, 528, 529, 530, 531, 532, 533, 0, 534, 535,
	718, 536, 537, 538, 719, 539, 540, 541, 1282, 542,
	721, 543, 544, 0, 545, 546, 547, 0, 548, 549,
	550, 551, 552, 553, 554, 555, 1262, 556, 557, 559,
	558, 560, 0, 561, 0, 562, 563, 564, 0, 0,
	0, 0, 0, 565, 566, 568, 0, 569, 570, 571,
	572, 567, 573, 574, 575, 576, 577, 0, 578, 579,
	580, 1303, 581, 582, 583, 584, 585, 1192, 586, 0,
	587, 588, 595, 596, 597, 589, 590, 591, 598, 599,
	600, 601, 602, 0, 604, 605, 603, 606, 607, 608,
	1245, 609, 610, 592, 593, 611, 612, 1304, 613, 614,
	615, 616, 617, 618, 619, 1260, 0, 620, 0, 621,
	622, 623, 624, 625, 627, 594, 628, 633, 634, 1307,
	629, 630, 631, 632, 1283, 636, 637, 638, 0, 639,
	640, 1178, 635, 626, 0, 641, 642, 643, 644, 645,
	646, 0, 647, 648, 0, 649, 1272, 1273, 1274, 1275,
	0, 659, 0, 650, 651, 652, 653, 1284, 654, 1285,
	1202, 655, 656, 657, 658, 0, 660, 661, 0, 1185,
	662, 663, 665, 667, 668, 664, 666, 669, 1246, 670,
	0, 0, 671, 672, 673, 733, 1269, 1306, 0, 675,
	674, 676, 677, 678, 736, 679, 680, 0, 0, 0,
	0, 681, 682, 737, 683, 684, 685, 1182, 0, 0,
	0, 2889, 0, 1224, 1196, 1197, 1198, 1194, 1195, 1207,
	0, 1177, 0, 0, 0, 0, 0, 0, 1175, 1176,
	296, 297, 299, 298, 300, 301, 302, 303, 1208, 304,
	305, 0, 1206, 0, 0, 0, 1248, 1212, 0, 0,
	306, 0, 307, 308, 1288, 309, 310, 311, 312, 313,
	314, 315, 687, 1261, 0, 316, 1268, 317, 1267, 0,
	1278, 318, 319, 320, 321, 322, 323, 1214, 1247, 1179,
	324, 1308, 1309, 694, 0, 325, 326, 1254, 0, 1235,
	0, 327, 328, 329, 330, 331, 332, 333, 334, 0,
	0, 336, 337, 338, 335, 339, 0, 340, 0, 341,
	342, 343, 344, 345, 346, 0, 347, 348, 349, 1289,
	350, 351, 352, 1238, 1236, 1237, 1244, 1240, 1239, 1243,
	353, 354, 355, 356, 357, 1271, 358, 360, 1265, 1264,
	1184, 363, 359, 361, 0, 364, 362, 365, 0, 366,
	367, 368, 0, 0, 369, 1256, 371, 0, 372, 373,
	374, 0, 375, 376, 377, 0, 378, 379, 1190, 380,
	381, 382, 384, 386, 383, 385, 387, 388, 389, 390,
	1279, 1280, 391, 1203, 293, 0, 0, 0, 0, 0,
	392, 393, 394, 1263, 0, 0, 0, 395, 0, 396,
	397, 398, 0, 399, 400, 0, 1290, 401, 402, 403,
	1276, 1277, 404, 405, 406, 407, 408, 409, 410, 411,
	412, 0, 413, 1286, 0, 1213, 414, 0, 415, 416,
	417, 418, 419, 420, 421, 1249, 1250, 1253, 510, 1292,
	422, 423, 0, 424, 425, 426, 427, 428, 0, 0,
	0, 294, 429, 430, 431, 0, 1291, 511, 432, 1258,
	1259, 0, 1219, 0, 433, 434, 1293, 1251, 1294, 435,
	436, 437, 1295, 438, 0, 0, 0, 439, 440, 441,
	442, 443, 444, 0, 445, 447, 446, 0, 448, 1287,
	1296, 449, 450, 1297, 0, 451, 452, 453, 454, 455,
	456, 459, 1242, 1241, 457, 458, 460, 461, 0, 462,
	463, 465, 468, 464, 466, 467, 469, 482, 483, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 485, 0, 484, 1298, 486, 487, 488, 489, 490,
	497, 499, 500, 495, 496, 498, 501, 502, 504, 492,
	493, 494, 1299, 503, 491, 1181, 295, 1300, 505, 506,
	507, 508, 1204, 1252, 509, 1266, 512, 513, 0, 0,
	514, 0, 515, 0, 0, 517, 518, 519, 0, 0,
	520, 521, 716, 1301, 522, 1302, 1281, 523, 524, 1191,
	525, 526, 527, 528, 529, 530, 531, 532, 533, 0,
	534, 535, 718, 536, 537, 538, 719, 539, 540, 541,
	1282, 542, 721, 543, 544, 0, 545, 546, 547, 0,
	548, 549, 550, 551, 552, 553, 554, 555, 1262, 556,
	557, 559, 558, 560, 0, 561, 0, 562, 563, 564,
	0, 0, 0, 0, 0, 565, 566, 568, 0, 569,
	570, 571, 572, 567, 573, 574, 575, 576, 577, 0,
	578, 579, 580, 1303, 581, 582, 583, 584, 585, 1192,
	586, 0, 587, 588, 595, 596, 597, 589, 590, 591,
	598, 599, 600, 601, 602, 0, 604, 605, 603, 606,
	607, 608, 1245, 609, 610, 592, 593, 611, 612, 1304,
	613, 614, 615, 616, 617, 618, 619, 1260, 0, 620,
	0, 621, 622, 623, 624, 625, 627, 594, 628, 633,
	634, 1307, 629, 630, 631, 632, 1283, 636, 637, 638,
	0, 639, 640, 1178, 635, 626, 0, 641, 642, 643,
	644, 645, 646, 0, 647, 648, 0, 649, 1272, 1273,
	1274, 1275, 0, 659, 0, 650, 651, 652, 653, 1284,
	654, 1285, 1202, 655, 656, 657, 658, 0, 660, 661,
	0, 1185, 662, 663, 665, 667, 668, 664, 666, 669,
	1246, 670, 0, 0, 671, 672, 673, 733, 1269, 1306,
	0, 675, 674, 676, 677, 678, 736, 679, 680, 0,
	0, 0, 0, 681, 682, 737, 683, 684, 685, 1182,
	0, 0, 0, 2887, 0, 2878, 2885, 1197, 1198, 1194,
	1195, 1207, 0, 1177, 0, 0, 0, 0, 0, 0,
	1175, 1176, 296, 297, 299, 298, 300, 301, 302, 303,
	1208, 304, 305, 0, 1206, 0, 0, 0, 1248, 1212,
	0, 0, 306, 0, 307, 308, 1288, 309, 310, 311,
	312, 313, 314, 315, 687, 1261, 0, 316, 1268, 317,
	1267, 0, 1278, 318, 319, 320, 321, 322, 323, 1214,
	1247, 1179, 324, 1308, 1309, 694, 0, 325, 326, 1254,
	0, 1235, 0, 327, 328, 329, 330, 331, 332, 333,
	334, 0, 0, 336, 337, 338, 335, 339, 0, 340,
	0, 341, 342, 343, 344, 345, 346, 0, 347, 348,
	349, 1289, 350, 351, 352, 1238, 1236, 1237, 1244, 1240,
	1239, 1243, 353, 354, 355, 356, 357, 1271, 2881, 360,
	1265, 1264, 1184, 363, 359, 361, 0, 364, 362, 365,
	0, 366, 367, 368, 0, 0, 369, 1256, 371, 0,
	372, 373, 374, 0, 375, 376, 377, 0, 378, 379,
	1190, 380, 381, 382, 384, 386, 383, 385, 387, 388,
	389, 390, 1279, 1280, 391, 1203, 293, 0, 0, 0,
	0, 0, 392, 393, 394, 1263, 0, 0, 0, 395,
	0, 396, 397, 398, 0, 399, 400, 0, 1290, 401,
	402, 403, 1276, 1277, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 0, 413, 1286, 0, 1213, 414, 0,
	415, 416, 417, 418, 419, 2882, 421, 1249, 1250, 1253,
	510, 1292, 422, 423, 0, 424, 425, 426, 427, 428,
	0, 0, 0, 294, 429, 430, 431, 0, 1291, 511,
	432, 1258, 1259, 0, 1219, 0, 433, 434, 1293, 1251,
	1294, 435, 436, 437, 1295, 438, 0, 0, 0, 439,
	440, 441, 442, 443, 444, 0, 445, 447, 446, 0,
	448, 1287, 1296, 449, 450, 1297, 0, 451, 452, 453,
	454, 455, 456, 459, 1242, 1241, 457, 458, 460, 461,
	0, 462, 463, 465, 468, 464, 466, 2883, 469, 2880,
	483, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 485, 0, 484, 1298, 486, 487, 488,
	489, 490, 497, 499, 500, 495, 496, 498, 501, 502,
	504, 492, 493, 494, 1299, 503, 491, 1181, 295, 1300,
	505, 506, 507, 508, 1204, 1252, 509, 1266, 512, 513,
	0, 0, 514, 0, 515, 0, 0, 517, 518, 519,
	0, 0, 520, 521, 716, 1301, 522, 1302, 1281, 523,
	524, 1191, 525, 526, 527, 528, 529, 530, 531, 532,
	533, 0, 534, 535, 718, 536, 537, 538, 719, 539,
	540, 541, 1282, 542, 721, 543, 544, 0, 545, 546,
	547, 0, 548, 549, 550, 551, 552, 553, 554, 555,
	1262, 556, 557, 559, 558, 560, 0, 561, 0, 562,
	563, 564, 0, 0, 0, 0, 0, 565, 566, 568,
	0, 569, 570, 571, 572, 567, 573, 574, 575, 576,
	577, 0, 578, 579, 580, 1303, 581, 582, 583, 584,
	585, 1192, 586, 0, 587, 588, 595, 596, 597, 589,
	590, 591, 598, 599, 600, 601, 2884, 0, 604, 605,
	603, 606, 607, 608, 1245, 609, 610, 592, 593, 611,
	612, 1304, 613, 614, 615, 616, 617, 618, 619, 1260,
	0, 620, 0, 621, 622, 623, 624, 625, 627, 594,
	628, 633, 634, 1307, 629, 630, 631, 632, 1283, 636,
	637, 638, 0, 639, 640, 1178, 635, 626, 0, 641,
	642, 643, 644, 645, 646, 0, 647, 648, 0, 649,
	1272, 1273, 1274, 1275, 0, 659, 0, 650, 651, 652,
	653, 1284, 654, 1285, 1202, 655, 656, 657, 658, 0,
	660, 661, 0, 1185, 662, 663, 665, 667, 668, 664,
	666, 669, 1246, 670, 0, 0, 671, 672, 673, 733,
	1269, 1306, 0, 675, 674, 676, 677, 678, 736, 679,
	680, 0, 0, 0, 0, 681, 682, 737, 683, 2879,
	685, 1182, 0, 0, 0, 2875, 0, 2878, 2885, 1197,
	1198, 1194, 1195, 1207, 0, 1177, 0, 0, 0, 0,
	0, 0, 1175, 1176, 296, 297, 299, 298, 300, 301,
	302, 303, 1208, 304, 305, 0, 1206, 0, 0, 0,
	1248, 1212, 0, 0, 306, 0, 307, 308, 1288, 309,
	310, 311, 312, 313, 314, 315, 687, 1261, 0, 316,
	1268, 317, 1267, 0, 1278, 318, 319, 320, 321, 322,
	323, 1214, 1247, 1179, 324, 1308, 1309, 694, 0, 325,
	326, 1254, 0, 1235, 0, 327, 328, 329, 330, 331,
	332, 333, 334, 0, 0, 336, 337, 338, 335, 339,
	0, 340, 0, 341, 342, 343, 344, 345, 346, 0,
	347, 348, 349, 1289, 350, 351, 352, 1238, 1236, 1237,
	1244, 1240, 1239, 1243, 353, 354, 355, 356, 357, 1271,
	2881, 360, 1265, 1264, 1184, 363, 359, 361, 0, 364,
	362, 365, 0, 366, 367, 368, 0, 0, 369, 1256,
	371, 0, 372, 373, 374, 0, 375, 376, 377, 0,
	378, 379, 1190, 380, 381, 382, 384, 386, 383, 385,
	387, 388, 389, 390, 1279, 1280, 391, 1203, 293, 0,
	0, 0, 0, 0, 392, 393, 394, 1263, 0, 0,
	0, 395, 0, 396, 397, 398, 0, 399, 400, 0,
	1290, 401, 402, 403, 1276, 1277, 404, 405, 406, 407,
	408, 409, 410, 411, 412, 0, 413, 1286, 0, 1213,
	414, 0, 415, 416, 417, 418, 419, 2882, 421, 1249,
	1250, 1253, 510, 1292, 422, 423, 0, 424, 425, 426,
	427, 428, 0, 0, 0, 294, 429, 430, 431, 0,
	1291, 511, 432, 1258, 1259, 0, 1219, 0, 433, 434,
	1293, 1251, 1294, 435, 436, 437, 1295, 438, 0, 0,
	0, 439, 440, 441, 442, 443, 444, 0, 445, 447,
	446, 0, 448, 1287, 1296, 449, 450, 1297, 0, 451,
	452, 453, 454, 455, 456, 459, 1242, 1241, 457, 458,
	460, 461, 0, 462, 463, 465, 468, 464, 466, 2883,
	469, 2880, 483, 470, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 485, 0, 484, 1298, 486,
	487, 488, 489, 490, 497, 499, 500, 495, 496, 498,
	501, 502, 504, 492, 493, 494, 1299, 503, 491, 1181,
	295, 1300, 505, 506, 507, 508, 1204, 1252, 509, 1266,
	512, 513, 0, 0, 514, 0, 515, 0, 0, 517,
	518, 519, 0, 0, 520, 521, 716, 1301, 522, 1302,
	1281, 523, 524, 1191, 525, 526, 527, 528, 529, 530,
	531, 532, 533, 0, 534, 535, 718, 536, 537, 538,
	719, 539, 540, 541, 1282, 542, 721, 543, 544, 0,
	545, 546, 547, 0, 548, 549, 550, 551, 552, 553,
	554, 555, 1262, 556, 557, 559, 558, 560, 0, 561,
	0, 562, 563, 564, 0, 0, 0, 0, 0, 565,
	566, 568, 0, 569, 570, 571, 572, 567, 573, 574,
	575, 576, 577, 0, 578, 579, 580, 1303, 581, 582,
	583, 584, 585, 1192, 586, 0, 587, 588, 595, 596,
	597, 589, 590, 591, 598, 599, 600, 601, 2884, 0,
	604, 605, 603, 606, 607, 608, 1245, 609, 610, 592,
	593, 611, 612, 1304, 613, 614, 615, 616, 617, 618,
	619, 1260, 0, 620, 0, 621, 622, 623, 624, 625,
	627, 594, 628, 633, 634, 1307, 629, 630, 631, 632,
	1283, 636, 637, 638, 0, 639, 640, 1178, 635, 626,
	0, 641, 642, 643, 644, 645, 646, 0, 647, 648,
	0, 649, 1272, 1273, 1274, 1275, 0, 659, 0, 650,
	651, 652, 653, 1284, 654, 1285, 1202, 655, 656, 657,
	658, 0, 660, 661, 0, 1185, 662, 663, 665, 667,
	668, 664, 666, 669, 1246, 670, 0, 0, 671, 672,
	673, 733, 1269, 1306, 0, 675, 674, 676, 677, 678,
	736, 679, 680, 0, 0, 0, 0, 681, 682, 737,
	683, 2879, 685, 1182, 0, 0, 0, 0, 0, 1224,
	1196, 1197, 1198, 1194, 1195, 1207, 0, 1177, 0, 0,
	0, 0, 0, 0, 1175, 1176, 296, 297, 299, 298,
	300, 301, 302, 303, 1208, 304, 305, 0, 1206, 0,
	0, 0, 1248, 1212, 0, 0, 306, 0, 307, 308,
	1288, 309, 310, 311, 312, 313, 314, 315, 687, 1261,
	0, 316, 1268, 317, 1267, 0, 1278, 318, 319, 320,
	321, 322, 323, 1214, 1247, 1179, 324, 1308, 1309, 694,
	0, 325, 326, 1254, 0, 1235, 0, 327, 328, 329,
	330, 331, 332, 333, 334, 0, 0, 336, 337, 338,
	335, 339, 0, 340, 0, 341, 342, 343, 344, 345,
	346, 0, 347, 348, 349, 1289, 350, 351, 352, 1238,
	1236, 1237, 1244, 1240, 1239, 1243, 353, 354, 355, 356,
	357, 1271, 358, 360, 1265, 1264, 1184, 363, 359, 361,
	0, 364, 362, 365, 0, 366, 367, 368, 0, 0,
	369, 1256, 371, 0, 372, 373, 374, 0, 375, 376,
	377, 0, 378, 379, 1190, 380, 381, 382, 384, 386,
	383, 385, 387, 388, 389, 390, 1279, 1280, 391, 1203,
	293, 0, 0, 0, 0, 0, 392, 393, 394, 1263,
	0, 0, 0, 395, 0, 396, 397, 398, 0, 399,
	400, 0, 1290, 401, 402, 403, 1276, 1277, 404, 405,
	406, 407, 408, 409, 410, 411, 412, 0, 413, 1286,
	0, 1213, 414, 0, 415, 416, 417, 418, 419, 420,
	421, 1249, 1250, 1253, 510, 1292, 422, 423, 0, 424,
	425, 426, 427, 428, 0, 0, 0, 294, 429, 430,
	431, 0, 1291, 511, 432, 1258, 1259, 0, 1219, 0,
	433, 434, 1293, 1251, 1294, 435, 436, 437, 1295, 438,
	0, 0, 0, 439, 440, 441, 442, 443, 444, 0,
	445, 447, 446, 0, 448, 1287, 1296, 449, 450, 1297,
	0, 451, 452, 453, 454, 455, 456, 459, 1242, 1241,
	457, 458, 460, 461, 0, 462, 463, 465, 468, 464,
	466, 467, 469, 482, 483, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 485, 0, 484,
	1298, 486, 487, 488, 489, 490, 497, 499, 500, 495,
	496, 498, 501, 502, 504, 492, 493, 494, 1299, 503,
	491, 1181, 295, 1300, 505, 506, 507, 508, 1204, 1252,
	509, 1266, 512, 513, 0, 0, 514, 0, 515, 0,
	0, 517, 518, 519, 0, 0, 520, 521, 716, 1301,
	522, 1302, 1281, 523, 524, 1191, 525, 526, 527, 528,
	529, 530, 531, 532, 533, 0, 534, 535, 718, 536,
	537, 538, 719, 539, 540, 541, 1282, 542, 721, 543,
	544, 0, 545, 546, 547, 0, 548, 549, 550, 551,
	552, 553, 554, 555, 1262, 556, 557, 559, 558, 560,
	0, 561, 0, 562, 563, 564, 0, 0, 0, 0,
	0, 565, 566, 568, 0, 569, 570, 571, 572, 567,
	573, 574, 575, 576, 577, 0, 578, 579, 580, 1303,
	581, 582, 583, 584, 585, 1192, 586, 0, 587, 588,
	595, 596, 597, 589, 590, 591, 598, 599, 600, 601,
	602, 0, 604, 605, 603, 606, 607, 608, 1245, 609,
	610, 592, 593, 611, 612, 1304, 613, 614, 615, 616,
	617, 618, 619, 1260, 0, 620, 0, 621, 622, 623,
	624, 625, 627, 594, 628, 633, 634, 1307, 629, 630,
	631, 632, 1283, 636, 637, 638, 0, 639, 640, 1178,
	635, 626, 0, 641, 642, 643, 644, 645, 646, 0,
	647, 648, 0, 649, 1272, 1273, 1274, 1275, 0, 659,
	0, 650, 651, 652, 653, 1284, 654, 1285, 1202, 655,
	656, 657, 658, 0, 660, 661, 0, 1185, 662, 663,
	665, 667, 668, 664, 666, 669, 1246, 670, 0, 0,
	671, 672, 673, 733, 1269, 1306, 0, 675, 674, 676,
	677, 678, 736, 679, 680, 0, 0, 0, 0, 681,
	682, 737, 683, 684, 685, 1182, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1177,
	0, 0, 0, 0, 0, 0, 1175, 1176, 0, 0,
	0, 0, 0, 0, 2020, 0, 1208, 0, 0, 0,
	1206, 1224, 1196, 1197, 1198, 1194, 1195, 1207, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 296, 297,
	299, 298, 300, 301, 302, 303, 2630, 304, 305, 0,
	0, 0, 0, 0, 1248, 1212, 0, 0, 306, 0,
	307, 308, 1288, 309, 310, 311, 312, 313, 314, 315,
	687, 1261, 0, 316, 1268, 317, 1267, 0, 1278, 318,
	319, 320, 321, 322, 323, 1214, 1247, 1179, 324, 1308,
	1309, 694, 0, 325, 326, 1254, 0, 1235, 0, 327,
	328, 329, 330, 331, 332, 333, 334, 0, 0, 336,
	337, 338, 335, 339, 0, 340, 0, 341, 342, 343,
	344, 345, 346, 0, 347, 348, 349, 1289, 350, 351,
	352, 1238, 1236, 1237, 1244, 1240, 1239, 1243, 353, 354,
	355, 356, 357, 1271, 358, 360, 1265, 1264, 1184, 363,
	359, 361, 0, 364, 362, 365, 0, 366, 367, 368,
	0, 0, 369, 1256, 371, 0, 372, 373, 374, 0,
	375, 376, 377, 0, 378, 379, 1190, 380, 381, 382,
	384, 386, 383, 385, 387, 388, 389, 390, 1279, 1280,
	391, 1203, 293, 0, 0, 0, 0, 0, 392, 393,
	394, 1263, 0, 0, 0, 395, 0, 396, 397, 398,
	0, 399, 400, 0, 1290, 401, 402, 403, 1276, 1277,
	404, 405, 406, 407, 408, 409, 410, 411, 412, 0,
	413, 1286, 0, 1213, 414, 0, 415, 416, 417, 418,
	419, 420, 421, 1249, 1250, 1253, 510, 1292, 422, 423,
	0, 424, 425, 426, 427, 428, 0, 0, 0, 294,
	429, 430, 431, 0, 1291, 511, 432, 1258, 1259, 0,
	1219, 0, 433, 434, 1293, 1251, 1294, 435, 436, 437,
	1295, 438, 0, 0, 0, 439, 440, 441, 442, 443,
	444, 0, 445, 447, 446, 0, 448, 1287, 1296, 449,
	450, 1297, 0, 451, 452, 453, 454, 455, 456, 459,
	1242, 1241, 457, 458, 460, 461, 0, 462, 463, 465,
	468, 464, 466, 467, 469, 482, 483, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 485,
	0, 484, 1298, 486, 487, 488, 489, 490, 497, 499,
	500, 495, 496, 498, 501, 502, 504, 492, 493, 494,
	1299, 503, 491, 1181, 295, 1300, 505, 506, 507, 508,
	1204, 1252, 509, 1266, 512, 513, 0, 0, 514, 0,
	515, 0, 0, 517, 518, 519, 0, 0, 520, 521,
	716, 1301, 522, 1302, 1281, 523, 524, 1191, 525, 526,
	527, 528, 529, 530, 531, 532, 533, 0, 534, 535,
	718, 536, 537, 538, 719, 539, 540, 541, 1282, 542,
	721, 543, 544, 0, 545, 546, 547, 0, 548, 549,
	550, 551, 552, 553, 554, 555, 1262, 556, 557, 559,
	558, 560, 0, 561, 0, 562, 563, 564, 0, 0,
	0, 0, 0, 565, 566, 568, 0, 569, 570, 571,
	572, 567, 573, 574, 575, 576, 577, 0, 578, 579,
	580, 1303, 581, 582, 583, 584, 585, 1192, 586, 0,
	587, 588, 595, 596, 597, 589, 590, 591, 598, 599,
	600, 601, 602, 0, 604, 605, 603, 606, 607, 608,
	1245, 609, 610, 592, 593, 611, 612, 1304, 613, 614,
	615, 616, 617, 618, 619, 1260, 0, 620, 0, 621,
	622, 623, 624, 625, 627, 594, 628, 633, 634, 1307,
	629, 630, 631, 632, 1283, 636, 637, 638, 0, 639,
	640, 1178, 635, 626, 0, 641, 642, 643, 644, 645,
	646, 0, 647, 648, 0, 649, 1272, 1273, 1274, 1275,
	0, 659, 0, 650, 651, 652, 653, 1284, 654, 1285,
	1202, 655, 656, 657, 658, 0, 660, 661, 0, 1185,
	662, 663, 665, 667, 668, 664, 666, 669, 1246, 670,
	0, 0, 671, 672, 673, 733, 1269, 1306, 0, 675,
	674, 676, 677, 678, 736, 679, 680, 0, 0, 0,
	0, 681, 682, 737, 683, 684, 685, 1182, 0, 0,
	0, 2592, 0, 1224, 1196, 1197, 1198, 1194, 1195, 1207,
	0, 1177, 0, 0, 0, 0, 0, 0, 1175, 1176,
	296, 297, 299, 298, 300, 301, 302, 303, 1208, 304,
	305, 0, 1206, 0, 0, 0, 1248, 1212, 0, 0,
	306, 0, 307, 308, 1288, 309, 310, 311, 312, 313,
	314, 315, 687, 1261, 0, 316, 1268, 317, 1267, 0,
	1278, 318, 319, 320, 321, 322, 323, 1214, 1247, 1179,
	324, 1308, 1309, 694, 0, 325, 326, 1254, 0, 1235,
	0, 327, 328, 329, 330, 331, 332, 333, 334, 0,
	0, 336, 337, 338, 335, 339, 0, 340, 0, 341,
	342, 343, 344, 345, 346, 0, 347, 348, 349, 1289,
	350, 351, 352, 1238, 1236, 1237, 1244, 1240, 1239, 1243,
	353, 354, 355, 356, 357, 1271, 358, 360, 1265, 1264,
	1184, 363, 359, 361, 0, 364, 362, 365, 0, 366,
	367, 368, 0, 0, 369, 1256, 371, 0, 372, 373,
	374, 0, 375, 376, 377, 0, 378, 379, 1190, 380,
	381, 382, 384, 386, 383, 385, 387, 388, 389, 390,
	1279, 1280, 391, 1203, 293, 0, 0, 0, 0, 0,
	392, 393, 394, 1263, 0, 0, 0, 395, 0, 396,
	397, 398, 0, 399, 400, 0, 1290, 401, 402, 403,
	1276, 1277, 404, 405, 406, 407, 408, 409, 410, 411,
	412, 0, 413, 1286, 0, 1213, 414, 0, 415, 416,
	417, 418, 419, 420, 421, 1249, 1250, 1253, 510, 1292,
	422, 423, 0, 424, 425, 426, 427, 428, 0, 0,
	0, 294, 429, 430, 431, 0, 1291, 511, 432, 1258,
	1259, 0, 1219, 0, 433, 434, 1293, 1251, 1294, 435,
	436, 437, 1295, 438, 0, 0, 0, 439, 440, 441,
	442, 443, 444, 0, 445, 447, 446, 0, 448, 1287,
	1296, 449, 450, 1297, 0, 451, 452, 453, 454, 455,
	456, 459, 1242, 1241, 457, 458, 460, 461, 0, 462,
	463, 465, 468, 464, 466, 467, 469, 482, 483, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 485, 0, 484, 1298, 486, 487, 488, 489, 490,
	497, 499, 500, 495, 496, 498, 501, 502, 504, 492,
	493, 494, 1299, 503, 491, 1181, 295, 1300, 505, 506,
	507, 508, 1204, 1252, 509, 1266, 512, 513, 0, 0,
	514, 0, 515, 0, 0, 517, 518, 519, 0, 0,
	520, 521, 716, 1301, 522, 1302, 1281, 523, 524, 1191,
	525, 526, 527, 528, 529, 530, 531, 532, 533, 0,
	534, 535, 718, 536, 537, 538, 719, 539, 540, 541,
	1282, 542, 721, 543, 544, 0, 545, 546, 547, 0,
	548, 549, 550, 551, 552, 553, 554, 555, 1262, 556,
	557, 559, 558, 560, 0, 561, 0, 562, 563, 564,
	0, 0, 0, 0, 0, 565, 566, 568, 0, 569,
	570, 571, 572, 567, 573, 574, 575, 576, 577, 0,
	578, 579, 580, 1303, 581, 582, 583, 584, 585, 1192,
	586, 0, 587, 588, 595, 596, 597, 589, 590, 591,
	598, 599, 600, 601, 602, 0, 604, 605, 603, 606,
	607, 608, 1245, 609, 610, 592, 593, 611, 612, 1304,
	613, 614, 615, 616, 617, 618, 619, 1260, 0, 620,
	0, 621, 622, 623, 624, 625, 627, 594, 628, 633,
	634, 1307, 629, 630, 631, 632, 1283, 636, 637, 638,
	0, 639, 640, 1178, 635, 626, 0, 641, 642, 643,
	644, 645, 646, 0, 647, 648, 0, 649, 1272, 1273,
	1274, 1275, 0, 659, 0, 650, 651, 652, 653, 1284,
	654, 1285, 1202, 655, 656, 657, 658, 0, 660, 661,
	0, 1185, 662, 663, 665, 667, 668, 664, 666, 669,
	1246, 670, 0, 0, 671, 672, 673, 733, 1269, 1306,
	0, 675, 674, 676, 677, 678, 736, 679, 680, 0,
	0, 0, 0, 681, 682, 737, 683, 684, 685, 1182,
	0, 0, 0, 2563, 0, 1224, 1196, 1197, 1198, 1194,
	1195, 1207, 0, 1177, 0, 0, 0, 0, 0, 0,
	1175, 1176, 296, 297, 299, 298, 300, 301, 302, 303,
	1208, 304, 305, 0, 1206, 0, 0, 0, 1248, 1212,
	0, 0, 306, 0, 307, 308, 1288, 309, 310, 311,
	312, 313, 314, 315, 687, 1261, 0, 316, 1268, 317,
	1267, 0, 1278, 318, 319, 320, 321, 322, 323, 1214,
	1247, 1179, 324, 1308, 1309, 694, 0, 325, 326, 1254,
	0, 1235, 0, 327, 328, 329, 330, 331, 332, 333,
	334, 0, 0, 336, 337, 338, 335, 339, 0, 340,
	0, 341, 342, 343, 344, 345, 346, 0, 347, 348,
	349, 1289, 350, 351, 352, 1238, 1236, 1237, 1244, 1240,
	1239, 1243, 353, 354, 355, 356, 357, 1271, 358, 360,
	1265, 1264, 1184, 363, 359, 361, 0, 364, 362, 365,
	0, 366, 367, 368, 0, 0, 369, 1256, 371, 0,
	372, 373, 374, 0, 375, 376, 377, 0, 378, 379,
	1190, 380, 381, 382, 384, 386, 383, 385, 387, 388,
	389, 390, 1279, 1280, 391, 1203, 293, 0, 0, 0,
	0, 0, 392, 393, 394, 1263, 0, 0, 0, 395,
	0, 396, 397, 398, 0, 399, 400, 0, 1290, 401,
	402, 403, 1276, 1277, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 0, 413, 1286, 0, 1213, 414, 0,
	415, 416, 417, 418, 419, 420, 421, 1249, 1250, 1253,
	510, 1292, 422, 423, 0, 424, 425, 426, 427, 428,
	0, 0, 0, 294, 429, 430, 431, 0, 1291, 511,
	432, 1258, 1259, 0, 1219, 0, 433, 434, 1293, 1251,
	1294, 435, 436, 437, 1295, 438, 0, 0, 0, 439,
	440, 441, 442, 443, 444, 0, 445, 447, 446, 0,
	448, 1287, 1296, 449, 450, 1297, 0, 451, 452, 453,
	454, 455, 456, 459, 1242, 1241, 457, 458, 460, 461,
	0, 462, 463, 465, 468, 464, 466, 467, 469, 482,
	483, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 485, 0, 484, 1298, 486, 487, 488,
	489, 490, 497, 499, 500, 495, 496, 498, 501, 502,
	504, 492, 493, 494, 1299, 503, 491, 1181, 295, 1300,
	505, 506, 507, 508, 1204, 1252, 509, 1266, 512, 513,
	0, 0, 514, 0, 515, 0, 0, 517, 518, 519,
	0, 0, 520, 521, 716, 1301, 522, 1302, 1281, 523,
	524, 1191, 525, 526, 527, 528, 529, 530, 531, 532,
	533, 0, 534, 535, 718, 536, 537, 538, 719, 539,
	540, 541, 1282, 542, 721, 543, 544, 0, 545, 546,
	547, 0, 548, 549, 550, 551, 552, 553, 554, 555,
	1262, 556, 557, 559, 558, 560, 0, 561, 0, 562,
	563, 564, 0, 0, 0, 0, 0, 565, 566, 568,
	0, 569, 570, 571, 572, 567, 573, 574, 575, 576,
	577, 0, 578, 579, 580, 1303, 581, 582, 583, 584,
	585, 1192, 586, 0, 587, 588, 595, 596, 597, 589,
	590, 591, 598, 599, 600, 601, 602, 0, 604, 605,
	603, 606, 607, 608, 1245, 609, 610, 592, 593, 611,
	612, 1304, 613, 614, 615, 616, 617, 618, 619, 1260,
	0, 620, 0, 621, 622, 623, 624, 625, 627, 594,
	628, 633, 634, 1307, 629, 630, 631, 632, 1283, 636,
	637, 638, 0, 639, 640, 1178, 635, 626, 0, 641,
	642, 643, 644, 645, 646, 0, 647, 648, 0, 649,
	1272, 1273, 1274, 1275, 0, 659, 0, 650, 651, 652,
	653, 1284, 654, 1285, 1202, 655, 656, 657, 658, 0,
	660, 661, 0, 1185, 662, 663, 665, 667, 668, 664,
	666, 669, 1246, 670, 0, 0, 671, 672, 673, 733,
	1269, 1306, 0, 675, 674, 676, 677, 678, 736, 679,
	680, 0, 0, 0, 0, 681, 682, 737, 683, 684,
	685, 1182, 0, 0, 0, 1855, 0, 1224, 1196, 1197,
	1198, 1194, 1195, 1207, 0, 1177, 0, 0, 0, 0,
	0, 0, 1175, 1176, 296, 297, 299, 298, 300, 301,
	302, 303, 1208, 304, 305, 0, 1206, 0, 0, 0,
	1248, 1212, 0, 0, 306, 0, 307, 308, 1288, 309,
	310, 311, 312, 313, 314, 315, 687, 1261, 0, 316,
	1268, 317, 1267, 0, 1278, 318, 319, 320, 321, 322,
	323, 1214, 1247, 1179, 324, 1308, 1309, 694, 0, 325,
	326, 1254, 0, 1235, 0, 327, 328, 329, 330, 331,
	332, 333, 334, 0, 0, 336, 337, 338, 335, 339,
	0, 340, 0, 341, 342, 343, 344, 345, 346, 0,
	347, 348, 349, 1289, 350, 351, 352, 1238, 1236, 1237,
	1244, 1240, 1239, 1243, 353, 354, 355, 356, 357, 1271,
	358, 360, 1265, 1264, 1184, 363, 359, 361, 0, 364,
	362, 365, 0, 366, 367, 368, 0, 0, 369, 1256,
	371, 0, 372, 373, 374, 0, 375, 376, 377, 0,
	378, 379, 1190, 380, 381, 382, 384, 386, 383, 385,
	387, 388, 389, 390, 1279, 1280, 391, 1203, 293, 0,
	0, 0, 0, 0, 392, 393, 394, 1263, 0, 0,
	0, 395, 0, 396, 397, 398, 0, 399, 400, 0,
	1290, 401, 402, 403, 1276, 1277, 404, 405, 406, 407,
	408, 409, 410, 411, 412, 0, 413, 1286, 0, 1213,
	414, 0, 415, 416, 417, 418, 419, 420, 421, 1249,
	1250, 1253, 510, 1292, 422, 423, 0, 424, 425, 426,
	427, 428, 0, 0, 0, 294, 429, 430, 431, 0,
	1291, 511, 432, 1258, 1259, 0, 1219, 0, 433, 434,
	1293, 1251, 1294, 435, 436, 437, 1295, 438, 0, 0,
	0, 439, 440, 441, 442, 443, 444, 0, 445, 447,
	446, 0, 448, 1287, 1296, 449, 450, 1297, 0, 451,
	452, 453, 454, 455, 456, 459, 1242, 1241, 457, 458,
	460, 461, 0, 462, 463, 465, 468, 464, 466, 467,
	469, 482, 483, 470, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 485, 0, 484, 1298, 486,
	487, 488, 489, 490, 497, 499, 500, 495, 496, 498,
	501, 502, 504, 492, 493, 494, 1299, 503, 491, 1181,
	295, 1300, 505, 506, 507, 508, 1204, 1252, 509, 1266,
	512, 513, 0, 0, 514, 0, 515, 0, 0, 517,
	518, 519, 0, 0, 520, 521, 716, 1301, 522, 1302,
	1281, 523, 524, 1191, 525, 526, 527, 528, 529, 530,
	531, 532, 533, 0, 534, 535, 718, 536, 537, 538,
	719, 539, 540, 541, 1282, 542, 721, 543, 544, 0,
	545, 546, 547, 0, 548, 549, 550, 551, 552, 553,
	554, 555, 1262, 556, 557, 559, 558, 560, 0, 561,
	0, 562, 563, 564, 0, 0, 0, 0, 0, 565,
	566, 568, 0, 569, 570, 571, 572, 567, 573, 574,
	575, 576, 577, 0, 578, 579, 580, 1303, 581, 582,
	583, 584, 585, 1192, 586, 0, 587, 588, 595, 596,
	597, 589, 590, 591, 598, 599, 600, 601, 602, 0,
	604, 605, 603, 606, 607, 608, 1245, 609, 610, 592,
	593, 611, 612, 1304, 613, 614, 615, 616, 617, 618,
	619, 1260, 0, 620, 0, 621, 622, 623, 624, 625,
	627, 594, 628, 633, 634, 1307, 629, 630, 631, 632,
	1283, 636, 637, 638, 0, 639, 640, 1178, 635, 626,
	0, 641, 642, 643, 644, 645, 646, 0, 647, 648,
	0, 649, 1272, 1273, 1274, 1275, 0, 659, 0, 650,
	651, 652, 653, 1284, 654, 1285, 1202, 655, 656, 657,
	658, 0, 660, 661, 0, 1185, 662, 663, 665, 667,
	668, 664, 666, 669, 1246, 670, 0, 0, 671, 672,
	673, 733, 1269, 1306, 0, 675, 674, 676, 677, 678,
	736, 679, 680, 0, 0, 0, 0, 681, 682, 737,
	683, 684, 685, 1182, 0, 0, 0, 1784, 0, 1224,
	1196, 1197, 1198, 1194, 1195, 1207, 0, 1177, 0, 0,
	0, 0, 0, 0, 1175, 1176, 296, 297, 299, 298,
	300, 301, 302, 303, 1208, 304, 305, 0, 1206, 0,
	0, 0, 1248, 1212, 0, 0, 306, 0, 307, 308,
	1288, 309, 310, 311, 312, 313, 314, 315, 687, 1261,
	0, 316, 1268, 317, 1267, 0, 1278, 318, 319, 320,
	321, 322, 323, 1214, 1247, 1179, 324, 1308, 1309, 694,
	0, 325, 326, 1254, 0, 1235, 0, 327, 328, 329,
	330, 331, 332, 333, 334, 0, 0, 336, 337, 338,
	335, 339, 0, 340, 0, 341, 342, 343, 344, 345,
	346, 0, 347, 348, 349, 1289, 350, 351, 352, 1238,
	1236, 1237, 1244, 1240, 1239, 1243, 353, 354, 355, 356,
	357, 1271, 358, 360, 1265, 1264, 1184, 363, 359, 361,
	0, 364, 362, 365, 0, 366, 367, 368, 0, 0,
	369, 1256, 371, 0, 372, 373, 374, 0, 375, 376,
	377, 0, 378, 379, 1190, 380, 381, 382, 384, 386,
	383, 385, 387, 388, 389, 390, 1279, 1280, 391, 1203,
	293, 0, 0, 0, 0, 0, 392, 393, 394, 1263,
	0, 0, 0, 395, 0, 396, 397, 398, 0, 399,
	400, 0, 1290, 401, 402, 403, 1276, 1277, 404, 405,
	406, 407, 408, 409, 410, 411, 412, 0, 413, 1286,
	0, 1213, 414, 0, 415, 416, 417, 418, 419, 420,
	421, 1249, 1250, 1253, 510, 1292, 422, 423, 0, 424,
	425, 426, 427, 428, 0, 0, 0, 294, 429, 430,
	431, 0, 1291, 511, 432, 1258, 1259, 0, 1219, 0,
	433, 434, 1293, 1251, 1294, 435, 436, 437, 1295, 438,
	0, 0, 0, 439, 440, 441, 442, 443, 444, 0,
	445, 447, 446, 0, 448, 1287, 1296, 449, 450, 1297,
	0, 451, 452, 453, 454, 455, 456, 459, 1242, 1241,
	457, 458, 460, 461, 0, 462, 463, 465, 468, 464,
	466, 467, 469, 482, 483, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 485, 0, 484,
	1298, 486, 487, 488, 489, 490, 497, 499, 500, 495,
	496, 498, 501, 502, 504, 492, 493, 494, 1299, 503,
	491, 1181, 295, 1300, 505, 506, 507, 508, 1204, 1252,
	509, 1266, 512, 513, 0, 0, 514, 0, 515, 0,
	0, 517, 518, 519, 0, 0, 520, 521, 716, 1301,
	522, 1302, 1281, 523, 524, 1191, 525, 526, 527, 528,
	529, 530, 531, 532, 533, 0, 534, 535, 718, 536,
	537, 538, 719, 539, 540, 541, 1282, 542, 721, 543,
	544, 0, 545, 546, 547, 0, 548, 549, 550, 551,
	552, 553, 554, 555, 1262, 556, 557, 559, 558, 560,
	0, 561, 0, 562, 563, 564, 0, 0, 0, 0,
	0, 565, 566, 568, 0, 569, 570, 571, 572, 567,
	573, 574, 575, 576, 577, 0, 578, 579, 580, 1303,
	581, 582, 583, 584, 585, 1192, 586, 0, 587, 588,
	595, 596, 597, 589, 590, 591, 598, 599, 600, 601,
	602, 0, 604, 605, 603, 606, 607, 608, 1245, 609,
	610, 592, 593, 611, 612, 1304, 613, 614, 615, 616,
	617, 618, 619, 1260, 0, 620, 0, 621, 622, 623,
	624, 625, 627, 594, 628, 633, 634, 1307, 629, 630,
	631, 632, 1283, 636, 637, 638, 0, 639, 640, 1178,
	635, 626, 0, 641, 642, 643, 644, 645, 646, 0,
	647, 648, 0, 649, 1272, 1273, 1274, 1275, 0, 659,
	0, 650, 651, 652, 653, 1284, 654, 1285, 1202, 655,
	656, 657, 658, 0, 660, 661, 0, 1185, 662, 663,
	665, 667, 668, 664, 666, 669, 1246, 670, 0, 0,
	671, 672, 673, 733, 1269, 1306, 0, 675, 674, 676,
	677, 678, 736, 679, 680, 0, 0, 0, 0, 681,
	682, 737, 683, 684, 685, 1182, 0, 0, 0, 1779,
	0, 1224, 1196, 1197, 1198, 1194, 1195, 1207, 0, 1177,
	0, 0, 0, 0, 0, 0, 1175, 1176, 296, 297,
	299, 298, 300, 301, 302, 303, 1208, 304, 305, 0,
	1206, 0, 0, 0, 1248, 1212, 0, 0, 306, 0,
	307, 308, 1288, 309, 310, 311, 312, 313, 314, 315,
	687, 1261, 0, 316, 1268, 317, 1267, 0, 1278, 318,
	319, 320, 321, 322, 323, 1214, 1247, 1179, 324, 1308,
	1309, 694, 0, 325, 326, 1254, 0, 1235, 0, 327,
	328, 329, 330, 331, 332, 333, 334, 0, 0, 336,
	337, 338, 335, 339, 0, 340, 0, 341, 342, 343,
	344, 345, 346, 0, 347, 348, 349, 1289, 350, 351,
	352, 1238, 1236, 1237, 1244, 1240, 1239, 1243, 353, 354,
	355, 356, 357, 1271, 358, 360, 1265, 1264, 1184, 363,
	359, 361, 0, 364, 362, 365, 0, 366, 367, 368,
	0, 0, 369, 1256, 371, 0, 372, 373, 374, 0,
	375, 376, 377, 0, 378, 379, 1190, 380, 381, 382,
	384, 386, 383, 385, 387, 388, 389, 390, 1279, 1280,
	391, 1203, 293, 0, 0, 0, 0, 0, 392, 393,
	394, 1263, 0, 0, 0, 395, 0, 396, 397, 398,
	0, 399, 400, 0, 1290, 401, 402, 403, 1276, 1277,
	404, 405, 406, 407, 408, 409, 410, 411, 412, 0,
	413, 1286, 0, 1213, 414, 0, 415, 416, 417, 418,
	419, 420, 421, 1249, 1250, 1253, 510, 1292, 422, 423,
	0, 424, 425, 426, 427, 428, 0, 0, 0, 294,
	429, 430, 431, 0, 1291, 511, 432, 1258, 1259, 0,
	1219, 0, 433, 434, 1293, 1251, 1294, 435, 436, 437,
	1295, 438, 0, 0, 0, 439, 440, 441, 442, 443,
	444, 0, 445, 447, 446, 0, 448, 1287, 1296, 449,
	450, 1297, 0, 451, 452, 453, 454, 455, 456, 459,
	1242, 1241, 457, 458, 460, 461, 0, 462, 463, 465,
	468, 464, 466, 467, 469, 482, 483, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 485,
	0, 484, 1298, 486, 487, 488, 489, 490, 497, 499,
	500, 495, 496, 498, 501, 502, 504, 492, 493, 494,
	1299, 503, 491, 1181, 295, 1300, 505, 506, 507, 508,
	1204, 1252, 509, 1266, 512, 513, 0, 0, 514, 0,
	515, 0, 0, 517, 518, 519, 0, 0, 520, 521,
	716, 1301, 522, 1302, 1281, 523, 524, 1191, 525, 526,
	527, 528, 529, 530, 531, 532, 533, 0, 534, 535,
	718, 536, 537, 538, 719, 539, 540, 541, 1282, 542,
	721, 543, 544, 0, 545, 546, 547, 0, 548, 549,
	550, 551, 552, 553, 554, 555, 1262, 556, 557, 559,
	558, 560, 0, 561, 0, 562, 563, 564, 0, 0,
	0, 0, 0, 565, 566, 568, 0, 569, 570, 571,
	572, 567, 573, 574, 575, 576, 577, 0, 578, 579,
	580, 1303, 581, 582, 583, 584, 585, 1192, 586, 0,
	587, 588, 595, 596, 597, 589, 590, 591, 598, 599,
	600, 601, 602, 0, 604, 605, 603, 606, 607, 608,
	1245, 609, 610, 592, 593, 611, 612, 1304, 613, 614,
	615, 616, 617, 618, 619, 1260, 0, 620, 0, 621,
	622, 623, 624, 625, 627, 594, 628, 633, 634, 1307,
	629, 630, 631, 632, 1283, 636, 637, 638, 0, 639,
	640, 1178, 635, 626, 0, 641, 642, 643, 644, 645,
	646, 0, 647, 648, 0, 649, 1272, 1273, 1274, 1275,
	0, 659, 0, 650, 651, 652, 653, 1284, 654, 1285,
	1202, 655, 656, 657, 658, 0, 660, 661, 0, 1185,
	662, 663, 665, 667, 668, 664, 666, 669, 1246, 670,
	0, 0, 671, 672, 673, 733, 1269, 1306, 0, 675,
	674, 676, 677, 678, 736, 679, 680, 0, 0, 0,
	0, 681, 682, 737, 683, 684, 685, 1182, 0, 0,
	0, 1765, 0, 1224, 1196, 1197, 1198, 1194, 1195, 1207,
	0, 1177, 0, 0, 0, 0, 0, 0, 1175, 1176,
	296, 297, 299, 298, 300, 301, 302, 303, 1208, 304,
	305, 0, 1206, 0, 0, 0, 1248, 1212, 0, 0,
	306, 0, 307, 308, 1288, 309, 310, 311, 312, 313,
	314, 315, 687, 1261, 0, 316, 1268, 317, 1267, 0,
	1278, 318, 319, 320, 321, 322, 323, 1214, 1247, 1179,
	324, 1308, 1309, 694, 0, 325, 326, 1254, 0, 1235,
	0, 327, 328, 329, 330, 331, 332, 333, 334, 0,
	0, 336, 337, 338, 335, 339, 0, 340, 0, 341,
	342, 343, 344, 345, 346, 0, 347, 348, 349, 1289,
	350, 351, 352, 1238, 1236, 1237, 1244, 1240, 1239, 1243,
	353, 354, 355, 356, 357, 1271, 358, 360, 1265, 1264,
	1184, 363, 359, 361, 0, 364, 362, 365, 0, 366,
	367, 368, 0, 0, 369, 1256, 371, 0, 372, 373,
	374, 0, 375, 376, 377, 0, 378, 379, 1190, 380,
	381, 382, 384, 386, 383, 385, 387, 388, 389, 390,
	1279, 1280, 391, 1203, 293, 0, 0, 0, 0, 0,
	392, 393, 394, 1263, 0, 0, 0, 395, 0, 396,
	397, 398, 0, 399, 400, 0, 1290, 401, 402, 403,
	1276, 1277, 404, 405, 406, 407, 408, 409, 410, 411,
	412, 0, 413, 1286, 0, 1213, 414, 0, 415, 416,
	417, 418, 419, 420, 421, 1249, 1250, 1253, 510, 1292,
	422, 423, 0, 424, 425, 426, 427, 428, 0, 0,
	0, 294, 429, 430, 431, 0, 1291, 511, 432, 1258,
	1259, 0, 1219, 0, 433, 434, 1293, 1251, 1294, 435,
	436, 437, 1295, 438, 0, 0, 0, 439, 440, 441,
	442, 443, 444, 0, 445, 447, 446, 0, 448, 1287,
	1296, 449, 450, 1297, 0, 451, 452, 453, 454, 455,
	456, 459, 1242, 1241, 457, 458, 460, 461, 0, 462,
	463, 465, 468, 464, 466, 467, 469, 482, 483, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 485, 0, 484, 1298, 486, 487, 488, 489, 490,
	497, 499, 500, 495, 496, 498, 501, 502, 504, 492,
	493, 494, 1299, 503, 491, 1181, 295, 1300, 505, 506,
	507, 508, 1204, 1252, 509, 1266, 512, 513, 0, 0,
	514, 0, 515, 0, 0, 517, 518, 519, 0, 0,
	520, 521, 716, 1301, 522, 1302, 1281, 523, 524, 1191,
	525, 526, 527, 528, 529, 530, 531, 532, 533, 0,
	534, 535, 718, 536, 537, 538, 719, 539, 540, 541,
	1282, 542, 721, 543, 544, 0, 545, 546, 547, 0,
	548, 549, 550, 551, 552, 553, 554, 555, 1262, 556,
	557, 559, 558, 560, 0, 561, 0, 562, 563, 564,
	0, 0, 0, 0, 0, 565, 566, 568, 0, 569,
	570, 571, 572, 567, 573, 574, 575, 576, 577, 0,
	578, 579, 580, 1303, 581, 582, 583, 584, 585, 1192,
	586, 0, 587, 588, 595, 596, 597, 589, 590, 591,
	598, 599, 600, 601, 602, 0, 604, 605, 603, 606,
	607, 608, 1245, 609, 610, 592, 593, 611, 612, 1304,
	613, 614, 615, 616, 617, 618, 619, 1260, 0, 620,
	0, 621, 622, 623, 624, 625, 627, 594, 628, 633,
	634, 1307, 629, 630, 631, 632, 1283, 636, 637, 638,
	0, 639, 640, 1178, 635, 626, 0, 641, 642, 643,
	644, 645, 646, 0, 647, 648, 0, 649, 1272, 1273,
	1274, 1275, 0, 659, 0, 650, 651, 652, 653, 1284,
	654, 1285, 1202, 655, 656, 657, 658, 0, 660, 661,
	0, 1185, 662, 663, 665, 667, 668, 664, 666, 669,
	1246, 670, 0, 0, 671, 672, 673, 733, 1269, 1306,
	0, 675, 674, 676, 677, 678, 736, 679, 680, 0,
	0, 0, 0, 681, 682, 737, 683, 684, 685, 1182,
	0, 0, 0, 1760, 0, 1224, 1196, 1197, 1198, 1194,
	1195, 1207, 0, 1177, 0, 0, 0, 0, 0, 0,
	1175, 1176, 296, 297, 299, 298, 300, 301, 302, 303,
	1208, 304, 305, 0, 1206, 0, 0, 0, 1248, 1212,
	0, 0, 306, 0, 307, 308, 1288, 309, 310, 311,
	312, 313, 314, 315, 687, 1261, 0, 316, 1268, 317,
	1267, 0, 1278, 318, 319, 320, 321, 322, 323, 1214,
	1247, 1179, 324, 1308, 1309, 694, 0, 325, 326, 1254,
	0, 1235, 0, 327, 328, 329, 330, 331, 332, 333,
	334, 0, 0, 336, 337, 338, 335, 339, 0, 340,
	0, 341, 342, 343, 344, 345, 346, 0, 347, 348,
	349, 1289, 350, 351, 352, 1238, 1236, 1237, 1244, 1240,
	1239, 1243, 353, 354, 355, 356, 357, 1271, 358, 360,
	1265, 1264, 1184, 363, 359, 361, 0, 364, 362, 365,
	0, 366, 367, 368, 0, 0, 369, 1256, 371, 0,
	372, 373, 374, 0, 375, 376, 377, 0, 378, 379,
	1190, 380, 381, 382, 384, 386, 383, 385, 387, 388,
	389, 390, 1279, 1280, 391, 1203, 293, 0, 0, 0,
	0, 0, 392, 393, 394, 1263, 0, 0, 0, 395,
	0, 396, 397, 398, 0, 399, 400, 0, 1290, 401,
	402, 403, 1276, 1277, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 0, 413, 1286, 0, 1213, 414, 0,
	415, 416, 417, 418, 419, 420, 421, 1249, 1250, 1253,
	510, 1292, 422, 423, 0, 424, 425, 426, 427, 428,
	0, 0, 0, 294, 429, 430, 431, 0, 1291, 511,
	432, 1258, 1259, 0, 1219, 0, 433, 434, 1293, 1251,
	1294, 435, 436, 437, 1295, 438, 0, 0, 0, 439,
	440, 441, 442, 443, 444, 0, 445, 447, 446, 0,
	448, 1287, 1296, 449, 450, 1297, 0, 451, 452, 453,
	454, 455, 456, 459, 1242, 1241, 457, 458, 460, 461,
	0, 462, 463, 465, 468, 464, 466, 467, 469, 482,
	483, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 485, 0, 484, 1298, 486, 487, 488,
	489, 490, 497, 499, 500, 495, 496, 498, 501, 502,
	504, 492, 493, 494, 1299, 503, 491, 1181, 295, 1300,
	505, 506, 507, 508, 1204, 1252, 509, 1266, 512, 513,
	0, 0, 514, 0, 515, 0, 0, 517, 518, 519,
	0, 0, 520, 521, 716, 1301, 522, 1302, 1281, 523,
	524, 1191, 525, 526, 527, 528, 529, 530, 531, 532,
	533, 0, 534, 535, 718, 536, 537, 538, 719, 539,
	540, 541, 1282, 542, 721, 543, 544, 0, 545, 546,
	547, 0, 548, 549, 550, 551, 552, 553, 554, 555,
	1262, 556, 557, 559, 558, 560, 0, 561, 0, 562,
	563, 564, 0, 0, 0, 0, 0, 565, 566, 568,
	0, 569, 570, 571, 572, 567, 573, 574, 575, 576,
	577, 0, 578, 579, 580, 1303, 581, 582, 583, 584,
	585, 1192, 586, 0, 587, 588, 595, 596, 597, 589,
	590, 591, 598, 599, 600, 601, 602, 0, 604, 605,
	603, 606, 607, 608, 1245, 609, 610, 592, 593, 611,
	612, 1304, 613, 614, 615, 616, 617, 618, 619, 1260,
	0, 620, 0, 621, 622, 623, 624, 625, 627, 594,
	628, 633, 634, 1307, 629, 630, 631, 632, 1283, 636,
	637, 638, 0, 639, 640, 1178, 635, 626, 0, 641,
	642, 643, 644, 645, 646, 0, 647, 648, 0, 649,
	1272, 1273, 1274, 1275, 0, 659, 0, 650, 651, 652,
	653, 1284, 654, 1285, 1202, 655, 656, 657, 658, 0,
	660, 661, 0, 1185, 662, 663, 665, 667, 668, 664,
	666, 669, 1246, 670, 0, 0, 671, 672, 673, 733,
	1269, 1306, 0, 675, 674, 676, 677, 678, 736, 679,
	680, 0, 0, 0, 0, 681, 682, 737, 683, 684,
	685, 1182, 0, 0, 0, 1669, 0, 1224, 1196, 1197,
	1198, 1194, 1195, 1207, 0, 1177, 0, 0, 0, 0,
	0, 0, 1175, 1176, 296, 297, 299, 298, 300, 301,
	302, 303, 1208, 304, 305, 0, 1206, 0, 0, 0,
	1248, 1212, 0, 0, 306, 0, 307, 308, 1288, 309,
	310, 311, 312, 313, 314, 315, 687, 1261, 0, 316,
	1268, 317, 1267, 0, 1278, 318, 319, 320, 321, 322,
	323, 1214, 1247, 1179, 324, 1308, 1309, 694, 0, 325,
	326, 1254, 0, 1235, 0, 327, 328, 329, 330, 331,
	332, 333, 334, 0, 0, 336, 337, 338, 335, 339,
	0, 340, 0, 341, 342, 343, 344, 345, 346, 0,
	347, 348, 349, 1289, 350, 351, 352, 1238, 1236, 1237,
	1244, 1240, 1239, 1243, 353, 354, 355, 356, 357, 1271,
	358, 360, 1265, 1264, 1184, 363, 359, 361, 0, 364,
	362, 365, 0, 366, 367, 368, 0, 0, 369, 1256,
	371, 0, 372, 373, 374, 0, 375, 376, 377, 0,
	378, 379, 1190, 380, 381, 382, 384, 386, 383, 385,
	387, 388, 389, 390, 1279, 1280, 391, 1203, 293, 0,
	0, 0, 0, 0, 392, 393, 394, 1263, 0, 0,
	0, 395, 0, 396, 397, 398, 0, 399, 400, 0,
	1290, 401, 402, 403, 1276, 1277, 404, 405, 406, 407,
	408, 409, 410, 411, 412, 0, 413, 1286, 0, 1213,
	414, 0, 415, 416, 417, 418, 419, 420, 421, 1668,
	1250, 1253, 510, 1292, 422, 423, 0, 424, 425, 426,
	427, 428, 0, 0, 0, 294, 429, 430, 431, 0,
	1291, 511, 432, 1258, 1259, 0, 1219, 0, 433, 434,
	1293, 1251, 1294, 435, 436, 437, 1295, 438, 0, 0,
	0, 439, 440, 441, 442, 443, 444, 0, 445, 447,
	446, 0, 448, 1287, 1296, 449, 450, 1297, 0, 451,
	452, 453, 454, 455, 456, 459, 1242, 1241, 457, 458,
	460, 461, 0, 462, 463, 465, 468, 464, 466, 467,
	469, 482, 483, 470, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 485, 0, 484, 1298, 486,
	487, 488, 489, 490, 497, 499, 500, 495, 496, 498,
	501, 502, 504, 492, 493, 494, 1299, 503, 491, 1181,
	295, 1300, 505, 506, 507, 508, 1204, 1252, 509, 1266,
	512, 513, 0, 0, 514, 0, 515, 0, 0, 517,
	518, 519, 0, 0, 520, 521, 716, 1301, 522, 1302,
	1281, 523, 524, 1191, 525, 526, 527, 528, 529, 530,
	531, 532, 533, 0, 534, 535, 718, 536, 537, 538,
	719, 539, 540, 541, 1282, 542, 721, 543, 544, 0,
	545, 546, 547, 0, 548, 549, 550, 551, 552, 553,
	554, 555, 1262, 556, 557, 559, 558, 560, 0, 561,
	0, 562, 563, 564, 0, 0, 0, 0, 0, 565,
	566, 568, 0, 569, 570, 571, 572, 567, 573, 574,
	575, 576, 577, 0, 578, 579, 580, 1303, 581, 582,
	583, 584, 585, 1192, 586, 0, 587, 588, 595, 596,
	597, 589, 590, 591, 598, 599, 600, 601, 602, 0,
	604, 605, 603, 606, 607, 608, 1245, 609, 610, 592,
	593, 611, 612, 1304, 613, 614, 615, 616, 617, 618,
	619, 1260, 0, 620, 0, 621, 622, 623, 624, 625,
	627, 594, 628, 633, 634, 1307, 629, 630, 631, 632,
	1283, 636, 637, 638, 0, 639, 640, 1178, 635, 626,
	0, 641, 642, 643, 644, 645, 646, 0, 647, 648,
	0, 649, 1272, 1273, 1274, 1275, 0, 659, 0, 650,
	651, 652, 653, 1284, 654, 1285, 1202, 655, 656, 657,
	658, 0, 660, 661, 0, 1185, 662, 663, 665, 667,
	668, 664, 666, 669, 1246, 670, 0, 0, 671, 672,
	673, 733, 1269, 1306, 0, 675, 674, 676, 677, 678,
	736, 679, 680, 0, 0, 0, 0, 681, 682, 737,
	683, 684, 685, 1182, 0, 0, 0, 1663, 0, 1224,
	1196, 1197, 1198, 1194, 1195, 1207, 0, 1177, 0, 0,
	0, 0, 0, 0, 1175, 1176, 296, 297, 299, 298,
	300, 301, 302, 303, 1208, 304, 305, 0, 1206, 0,
	0, 0, 1248, 1212, 0, 0, 306, 0, 307, 308,
	1288, 309, 310, 311, 312, 313, 314, 315, 687, 1261,
	0, 316, 1268, 317, 1267, 0, 1278, 318, 319, 320,
	321, 322, 323, 1214, 1247, 1179, 324, 1308, 1309, 694,
	0, 325, 326, 1254, 0, 1235, 0, 327, 328, 329,
	330, 331, 332, 333, 334, 0, 0, 336, 337, 338,
	335, 339, 0, 340, 0, 341, 342, 343, 344, 345,
	346, 0, 347, 348, 349, 1289, 350, 351, 352, 1238,
	1236, 1237, 1244, 1240, 1239, 1243, 353, 354, 355, 356,
	357, 1271, 358, 360, 1265, 1264, 1184, 363, 359, 361,
	0, 364, 362, 365, 0, 366, 367, 368, 0, 0,
	369, 1256, 371, 0, 372, 373, 374, 0, 375, 376,
	377, 0, 378, 379, 1190, 380, 381, 382, 384, 386,
	383, 385, 387, 388, 389, 390, 1279, 1280, 391, 1203,
	293, 0, 0, 0, 0, 0, 392, 393, 394, 1263,
	0, 0, 0, 395, 0, 396, 397, 398, 0, 399,
	400, 0, 1290, 401, 402, 403, 1276, 1277, 404, 405,
	406, 407, 408, 409, 410, 411, 412, 0, 413, 1286,
	0, 1213, 414, 0, 415, 416, 417, 418, 419, 420,
	421, 1662, 1250, 1253, 510, 1292, 422, 423, 0, 424,
	425, 426, 427, 428, 0, 0, 0, 294, 429, 430,
	431, 0, 1291, 511, 432, 1258, 1259, 0, 1219, 0,
	433, 434, 1293, 1251, 1294, 435, 436, 437, 1295, 438,
	0, 0, 0, 439, 440, 441, 442, 443, 444, 0,
	445, 447, 446, 0, 448, 1287, 1296, 449, 450, 1297,
	0, 451, 452, 453, 454, 455, 456, 459, 1242, 1241,
	457, 458, 460, 461, 0, 462, 463, 465, 468, 464,
	466, 467, 469, 482, 483, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 485, 0, 484,
	1298, 486, 487, 488, 489, 490, 497, 499, 500, 495,
	496, 498, 501, 502, 504, 492, 493, 494, 1299, 503,
	491, 1181, 295, 1300, 505, 506, 507, 508, 1204, 1252,
	509, 1266, 512, 513, 0, 0, 514, 0, 515, 0,
	0, 517, 518, 519, 0, 0, 520, 521, 716, 1301,
	522, 1302, 1281, 523, 524, 1191, 525, 526, 527, 528,
	529, 530, 531, 532, 533, 0, 534, 535, 718, 536,
	537, 538, 719, 539, 540, 541, 1282, 542, 721, 543,
	544, 0, 545, 546, 547, 0, 548, 549, 550, 551,
	552, 553, 554, 555, 1262, 556, 557, 559, 558, 560,
	0, 561, 0, 562, 563, 564, 0, 0, 0, 0,
	0, 565, 566, 568, 0, 569, 570, 571, 572, 567,
	573, 574, 575, 576, 577, 0, 578, 579, 580, 1303,
	581, 582, 583, 584, 585, 1192, 586, 0, 587, 588,
	595, 596, 597, 589, 590, 591, 598, 599, 600, 601,
	602, 0, 604, 605, 603, 606, 607, 608, 1245, 609,
	610, 592, 593, 611, 612, 1304, 613, 614, 615, 616,
	617, 618, 619, 1260, 0, 620, 0, 621, 622, 623,
	624, 625, 627, 594, 628, 633, 634, 1307, 629, 630,
	631, 632, 1283, 636, 637, 638, 0, 639, 640, 1178,
	635, 626, 0, 641, 642, 643, 644, 645, 646, 0,
	647, 648, 0, 649, 1272, 1273, 1274, 1275, 0, 659,
	0, 650, 651, 652, 653, 1284, 654, 1285, 1202, 655,
	656, 657, 658, 0, 660, 661, 0, 1185, 662, 663,
	665, 667, 668, 664, 666, 669, 1246, 670, 0, 0,
	671, 672, 673, 733, 1269, 1306, 0, 675, 674, 676,
	677, 678, 736, 679, 680, 0, 0, 0, 0, 681,
	682, 737, 683, 684, 685, 1182, 0, 0, 0, 1656,
	0, 1224, 1196, 1197, 1198, 1194, 1195, 1207, 0, 1177,
	0, 0, 0, 0, 0, 0, 1175, 1176, 296, 297,
	299, 298, 300, 301, 302, 303, 1208, 304, 305, 0,
	1206, 0, 0, 0, 1248, 1212, 0, 0, 306, 0,
	307, 308, 1288, 309, 310, 311, 312, 313, 314, 315,
	687, 1261, 0, 316, 1268, 317, 1267, 0, 1278, 318,
	319, 320, 321, 322, 323, 1214, 1247, 1179, 324, 1308,
	1309, 694, 0, 325, 326, 1254, 0, 1235, 0, 327,
	328, 329, 330, 331, 332, 333, 334, 0, 0, 336,
	337, 338, 335, 339, 0, 340, 0, 341, 342, 343,
	344, 345, 346, 0, 347, 348, 349, 1289, 350, 351,
	352, 1238, 1236, 1237, 1244, 1240, 1239, 1243, 353, 354,
	355, 356, 357, 1271, 358, 360, 1265, 1264, 1184, 363,
	359, 361, 0, 364, 362, 365, 0, 366, 367, 368,
	0, 0, 369, 1256, 371, 0, 372, 373, 374, 0,
	375, 376, 377, 0, 378, 379, 1190, 380, 381, 382,
	384, 386, 383, 385, 387, 388, 389, 390, 1279, 1280,
	391, 1203, 293, 0, 0, 0, 0, 0, 392, 393,
	394, 1263, 0, 0, 0, 395, 0, 396, 397, 398,
	0, 399, 400, 0, 1290, 401, 402, 403, 1276, 1277,
	404, 405, 406, 407, 408, 409, 410, 411, 412, 0,
	413, 1286, 0, 1213, 414, 0, 415, 416, 417, 418,
	419, 420, 421, 1249, 1250, 1253, 510, 1292, 422, 423,
	0, 424, 425, 426, 427, 428, 0, 0, 0, 294,
	429, 430, 431, 0, 1291, 511, 432, 1258, 1259, 0,
	1219, 0, 433, 434, 1293, 1251, 1294, 435, 436, 437,
	1295, 438, 0, 0, 0, 439, 440, 441, 442, 443,
	444, 0, 445, 447, 446, 0, 448, 1287, 1296, 449,
	450, 1297, 0, 451, 452, 453, 454, 455, 456, 459,
	1242, 1241, 457, 458, 460, 461, 0, 462, 463, 465,
	468, 464, 466, 467, 469, 482, 483, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 485,
	0, 484, 1298, 486, 487, 488, 489, 490, 497, 499,
	500, 495, 496, 498, 501, 502, 504, 492, 493, 494,
	1299, 503, 491, 1181, 295, 1300, 505, 506, 507, 508,
	1204, 1252, 509, 1266, 512, 513, 0, 0, 514, 0,
	515, 0, 0, 517, 518, 519, 0, 0, 520, 521,
	716, 1301, 522, 1302, 1281, 523, 524, 1191, 525, 526,
	527, 528, 529, 530, 531, 532, 533, 0, 534, 535,
	718, 536, 537, 538, 719, 539, 540, 541, 1282, 542,
	721, 543, 544, 0, 545, 546, 547, 0, 548, 549,
	550, 551, 552, 553, 554, 555, 1262, 556, 557, 559,
	558, 560, 0, 561, 0, 562, 563, 564, 0, 0,
	0, 0, 0, 565, 566, 568, 0, 569, 570, 571,
	572, 567, 573, 574, 575, 576, 577, 0, 578, 579,
	580, 1303, 581, 582, 583, 584, 585, 1192, 586, 0,
	587, 588, 595, 596, 597, 589, 590, 591, 598, 599,
	600, 601, 602, 0, 604, 605, 603, 606, 607, 608,
	1245, 609, 610, 592, 593, 611, 612, 1304, 613, 614,
	615, 616, 617, 618, 619, 1260, 0, 620, 0, 621,
	622, 623, 624, 625, 627, 594, 628, 633, 634, 1307,
	629, 630, 631, 632, 1283, 636, 637, 638, 0, 639,
	640, 1178, 635, 626, 0, 641, 642, 643, 644, 645,
	646, 0, 647, 648, 0, 649, 1272, 1273, 1274, 1275,
	0, 659, 0, 650, 651, 652, 653, 1284, 654, 1285,
	1202, 655, 656, 657, 658, 0, 660, 661, 0, 1185,
	662, 663, 665, 667, 668, 664, 666, 669, 1246, 670,
	0, 0, 671, 672, 673, 733, 1269, 1306, 0, 675,
	674, 676, 677, 678, 736, 679, 680, 0, 0, 0,
	0, 681, 682, 737, 683, 684, 685, 1182, 0, 0,
	0, 1619, 0, 1224, 1196, 1197, 1198, 1194, 1195, 1207,
	0, 1177, 0, 0, 0, 0, 0, 0, 1175, 1176,
	296, 297, 299, 298, 300, 301, 302, 303, 1208, 304,
	305, 0, 1206, 0, 0, 0, 1248, 1212, 0, 0,
	306, 0, 307, 308, 1288, 309, 310, 311, 312, 313,
	314, 315, 687, 1261, 0, 316, 1268, 317, 1267, 0,
	1278, 318, 319, 320, 321, 322, 323, 1214, 1247, 1179,
	324, 1308, 1309, 694, 0, 325, 326, 1254, 0, 1235,
	0, 327, 328, 329, 330, 331, 332, 333, 334, 0,
	0, 336, 337, 338, 335, 339, 0, 340, 0, 341,
	342, 343, 344, 345, 346, 0, 347, 348, 349, 1289,
	350, 351, 352, 1238, 1236, 1237, 1244, 1240, 1239, 1243,
	353, 354, 355, 356, 357, 1271, 358, 360, 1265, 1264,
	1184, 363, 359, 361, 0, 364, 362, 365, 0, 366,
	367, 368, 0, 0, 369, 1256, 371, 0, 372, 373,
	374, 0, 375, 376, 377, 0, 378, 379, 1190, 380,
	381, 382, 384, 386, 383, 385, 387, 388, 389, 390,
	1279, 1280, 391, 1203, 293, 0, 0, 0, 0, 0,
	392, 393, 394, 1263, 0, 0, 0, 395, 0, 396,
	397, 398, 0, 399, 400, 0, 1290, 401, 402, 403,
	1276, 1277, 404, 405, 406, 407, 408, 409, 410, 411,
	412, 0, 413, 1286, 0, 1213, 414, 0, 415, 416,
	417, 418, 419, 420, 421, 1249, 1250, 1253, 510, 1292,
	422, 423, 0, 424, 425, 426, 427, 428, 0, 0,
	0, 294, 429, 430, 431, 0, 1291, 511, 432, 1258,
	1259, 0, 1219, 0, 433, 434, 1293, 1251, 1294, 435,
	436, 437, 1295, 438, 0, 0, 0, 439, 440, 441,
	442, 443, 444, 0, 445, 447, 446, 0, 448, 1287,
	1296, 449, 450, 1297, 0, 451, 452, 453, 454, 455,
	456, 459, 1242, 1241, 457, 458, 460, 461, 0, 462,
	463, 465, 468, 464, 466, 467, 469, 482, 483, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 485, 0, 484, 1298, 486, 487, 488, 489, 490,
	497, 499, 500, 495, 496, 498, 501, 502, 504, 492,
	493, 494, 1299, 503, 491, 1181, 295, 1300, 505, 506,
	507, 508, 1204, 1252, 509, 1266, 512, 513, 0, 0,
	514, 0, 515, 0, 0, 517, 518, 519, 0, 0,
	520, 521, 716, 1301, 522, 1302, 1281, 523, 524, 1191,
	525, 526, 527, 528, 529, 530, 531, 532, 533, 0,
	534, 535, 718, 536, 537, 538, 719, 539, 540, 541,
	1282, 542, 721, 543, 544, 0, 545, 546, 547, 0,
	548, 549, 550, 551, 552, 553, 554, 555, 1262, 556,
	557, 559, 558, 560, 0, 561, 0, 562, 563, 564,
	0, 0, 0, 0, 0, 565, 566, 568, 0, 569,
	570, 571, 572, 567, 573, 574, 575, 576, 577, 0,
	578, 579, 580, 1303, 581, 582, 583, 584, 585, 1192,
	586, 0, 587, 588, 595, 596, 597, 589, 590, 591,
	598, 599, 600, 601, 602, 0, 604, 605, 603, 606,
	607, 608, 1245, 609, 610, 592, 593, 611, 612, 1304,
	613, 614, 615, 616, 617, 618, 619, 1260, 0, 620,
	0, 621, 622, 623, 624, 625, 627, 594, 628, 633,
	634, 1307, 629, 630, 631, 632, 1283, 636, 637, 638,
	0, 639, 640, 1178, 635, 626, 0, 641, 642, 643,
	644, 645, 646, 0, 647, 648, 0, 649, 1272, 1273,
	1274, 1275, 0, 659, 0, 650, 651, 652, 653, 1284,
	654, 1285, 1202, 655, 656, 657, 658, 0, 660, 661,
	0, 1185, 662, 663, 665, 667, 668, 664, 666, 669,
	1246, 670, 0, 0, 671, 672, 673, 733, 1269, 1306,
	0, 675, 674, 676, 677, 678, 736, 679, 680, 0,
	0, 0, 0, 681, 682, 737, 683, 684, 685, 1182,
	0, 0, 0, 1601, 0, 1224, 1196, 1197, 1198, 1194,
	1195, 1207, 0, 1177, 0, 0, 0, 0, 0, 0,
	1175, 1176, 296, 297, 299, 298, 300, 301, 302, 303,
	1208, 304, 305, 0, 1206, 0, 0, 0, 1248, 1212,
	0, 0, 306, 0, 307, 308, 1288, 309, 310, 311,
	312, 313, 314, 315, 687, 1261, 0, 316, 1268, 317,
	1267, 0, 1278, 318, 319, 320, 321, 322, 323, 1214,
	1247, 1179, 324, 1308, 1309, 694, 0, 325, 326, 1254,
	0, 1235, 0, 327, 328, 329, 330, 331, 332, 333,
	334, 0, 0, 336, 337, 338, 335, 339, 0, 340,
	0, 341, 342, 343, 344, 345, 346, 0, 347, 348,
	349, 1289, 350, 351, 352, 1238, 1236, 1237, 1244, 1240,
	1239, 1243, 353, 354, 355, 356, 357, 1271, 358, 360,
	1265, 1264, 1184, 363, 359, 361, 0, 364, 362, 365,
	0, 366, 367, 368, 0, 0, 369, 1256, 371, 0,
	372, 373, 374, 0, 375, 376, 377, 0, 378, 379,
	1190, 380, 381, 382, 384, 386, 383, 1605, 387, 388,
	389, 390, 1279, 1280, 391, 1203, 293, 0, 0, 0,
	0, 0, 392, 393, 394, 1263, 0, 0, 0, 395,
	0, 396, 397, 398, 0, 399, 400, 0, 1290, 401,
	402, 403, 1276, 1277, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 0, 413, 1286, 0, 1213, 414, 0,
	415, 416, 417, 418, 419, 420, 421, 1249, 1250, 1253,
	510, 1292, 422, 423, 0, 424, 425, 426, 427, 428,
	0, 0, 0, 294, 429, 430, 431, 0, 1291, 511,
	432, 1258, 1259, 0, 1219, 0, 433, 434, 1293, 1251,
	1294, 435, 436, 437, 1295, 438, 0, 0, 0, 439,
	440, 441, 442, 443, 444, 0, 445, 447, 446, 0,
	448, 1287, 1296, 449, 450, 1297, 0, 451, 452, 453,
	454, 455, 456, 459, 1242, 1241, 457, 458, 460, 461,
	0, 462, 463, 465, 468, 464, 466, 467, 469, 482,
	483, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 485, 0, 484, 1298, 486, 487, 488,
	489, 490, 497, 499, 500, 495, 496, 498, 501, 502,
	504, 492, 493, 494, 1299, 503, 491, 1181, 295, 1300,
	505, 506, 507, 508, 1204, 1252, 509, 1266, 512, 513,
	0, 0, 514, 0, 515, 0, 0, 517, 518, 519,
	0, 0, 520, 521, 716, 1301, 522, 1302, 1281, 523,
	524, 1191, 525, 526, 527, 528, 529, 530, 531, 532,
	533, 0, 534, 535, 718, 536, 537, 538, 719, 539,
	540, 541, 1282, 542, 721, 543, 544, 0, 545, 546,
	547, 0, 548, 549, 550, 551, 552, 553, 554, 555,
	1262, 556, 557, 559, 558, 560, 0, 561, 0, 562,
	563, 564, 0, 0, 0, 0, 0, 565, 566, 1606,
	0, 569, 570, 571, 572, 567, 573, 574, 575, 576,
	577, 0, 578, 579, 580, 1303, 581, 582, 583, 584,
	585, 1192, 586, 0, 587, 588, 595, 596, 597, 589,
	590, 591, 598, 599, 600, 601, 602, 0, 604, 605,
	603, 606, 607, 608, 1245, 609, 610, 592, 593, 611,
	612, 1304, 613, 614, 615, 616, 617, 618, 619, 1260,
	0, 620, 0, 621, 622, 623, 624, 625, 627, 594,
	628, 633, 634, 1307, 629, 630, 631, 632, 1283, 636,
	637, 638, 0, 639, 640, 1178, 635, 626, 0, 641,
	642, 643, 644, 645, 646, 0, 1604, 648, 0, 649,
	1272, 1273, 1274, 1275, 0, 659, 0, 650, 651, 652,
	653, 1284, 654, 1285, 1202, 655, 656, 657, 658, 0,
	660, 661, 0, 1185, 662, 663, 665, 667, 668, 664,
	666, 669, 1246, 670, 0, 0, 671, 672, 673, 733,
	1269, 1306, 0, 675, 674, 676, 677, 678, 736, 679,
	680, 0, 0, 0, 0, 681, 682, 737, 683, 684,
	685, 1182, 0, 0, 0, 1433, 0, 1224, 1196, 1197,
	1198, 1194, 1195, 1207, 0, 1177, 0, 0, 0, 0,
	0, 0, 1175, 1176, 296, 297, 299, 298, 300, 301,
	302, 303, 1208, 304, 305, 0, 1206, 0, 0, 0,
	1248, 1212, 0, 0, 306, 0, 307, 308, 1288, 309,
	310, 311, 312, 313, 314, 315, 687, 1261, 0, 316,
	1268, 317, 1267, 0, 1278, 318, 319, 320, 321, 322,
	323, 1214, 1247, 1179, 324, 1308, 1309, 694, 0, 325,
	326, 1254, 0, 1235, 0, 327, 328, 329, 330, 331,
	332, 333, 334, 0, 0, 336, 337, 338, 335, 339,
	0, 340, 0, 341, 342, 343, 344, 345, 346, 0,
	347, 348, 349, 1289, 350, 351, 352, 1238, 1236, 1237,
	1244, 1240, 1239, 1243, 353, 354, 355, 356, 357, 1271,
	358, 360, 1265, 1264, 1184, 363, 359, 361, 0, 364,
	362, 365, 0, 366, 367, 368, 0, 0, 369, 1256,
	371, 0, 372, 373, 374, 0, 375, 376, 377, 0,
	378, 379, 1190, 380, 381, 382, 384, 386, 383, 385,
	387, 388, 389, 390, 1279, 1280, 391, 1203, 293, 0,
	0, 0, 0, 0, 392, 393, 394, 1263, 0, 0,
	0, 395, 0, 396, 397, 398, 0, 399, 400, 0,
	1290, 401, 402, 403, 1276, 1277, 404, 405, 406, 407,
	408, 409, 410, 411, 412, 0, 413, 1286, 0, 1213,
	414, 0, 415, 416, 417, 418, 419, 420, 421, 1249,
	1250, 1253, 510, 1292, 422, 423, 0, 424, 425, 426,
	427, 428, 0, 0, 0, 294, 429, 430, 431, 0,
	1291, 511, 432, 1258, 1259, 0, 1219, 0, 433, 434,
	1293, 1251, 1294, 435, 436, 437, 1295, 438, 0, 0,
	0, 439, 440, 441, 442, 443, 444, 0, 445, 447,
	446, 0, 448, 1287, 1296, 449, 450, 1297, 0, 451,
	452, 453, 454, 455, 456, 459, 1242, 1241, 457, 458,
	460, 461, 0, 462, 463, 465, 468, 464, 466, 467,
	469, 482, 483, 470, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 485, 0, 484, 1298, 486,
	487, 488, 489, 490, 497, 499, 500, 495, 496, 498,
	501, 502, 504, 492, 493, 494, 1299, 503, 491, 1181,
	295, 1300, 505, 506, 507, 508, 1204, 1252, 509, 1266,
	512, 513, 0, 0, 514, 0, 515, 0, 0, 517,
	518, 519, 0, 0, 520, 521, 716, 1301, 522, 1302,
	1281, 523, 524, 1191, 525, 526, 527, 528, 529, 530,
	531, 532, 533, 0, 534, 535, 718, 536, 537, 538,
	719, 539, 540, 541, 1282, 542, 721, 543, 544, 0,
	545, 546, 547, 0, 548, 549, 550, 551, 552, 553,
	554, 555, 1262, 556, 557, 559, 558, 560, 0, 561,
	0, 562, 563, 564, 0, 0, 0, 0, 0, 565,
	566, 568, 0, 569, 570, 571, 572, 567, 573, 574,
	575, 576, 577, 0, 578, 579, 580, 1303, 581, 582,
	583, 584, 585, 1192, 586, 0, 587, 588, 595, 596,
	597, 589, 590, 591, 598, 599, 600, 601, 602, 0,
	604, 605, 603, 606, 607, 608, 1245, 609, 610, 592,
	593, 611, 612, 1304, 613, 614, 615, 616, 617, 618,
	619, 1260, 0, 620, 0, 621, 622, 623, 624, 625,
	627, 594, 628, 633, 634, 1307, 629, 630, 631, 632,
	1283, 636, 637, 638, 0, 639, 640, 1178, 635, 626,
	0, 641, 642, 643, 644, 645, 646, 0, 647, 648,
	0, 649, 1272, 1273, 1274, 1275, 0, 659, 0, 650,
	651, 652, 653, 1284, 654, 1285, 1202, 655, 656, 657,
	658, 0, 660, 661, 0, 1185, 662, 663, 665, 667,
	668, 664, 666, 669, 1246, 670, 0, 0, 671, 672,
	673, 733, 1269, 1306, 0, 675, 674, 676, 677, 678,
	736, 679, 680, 0, 0, 0, 0, 681, 682, 737,
	683, 684, 685, 1182, 0, 0, 0, 0, 0, 1224,
	1196, 1197, 1198, 1194, 1195, 1207, 0, 1177, 0, 0,
	0, 0, 0, 0, 1175, 1176, 296, 297, 299, 298,
	300, 301, 302, 303, 1208, 304, 305, 0, 1206, 0,
	0, 0, 1248, 1212, 0, 0, 306, 0, 307, 308,
	1288, 309, 310, 311, 312, 313, 314, 315, 687, 1261,
	0, 316, 1268, 317, 1267, 0, 1278, 318, 319, 320,
	321, 322, 323, 1214, 1247, 1179, 324, 1308, 1309, 694,
	0, 325, 326, 1254, 0, 1235, 0, 327, 328, 329,
	330, 331, 332, 333, 334, 0, 0, 336, 337, 338,
	335, 339, 0, 340, 0, 341, 342, 343, 344, 345,
	346, 0, 347, 348, 349, 1289, 350, 351, 352, 1238,
	1236, 1237, 1244, 1240, 1239, 1243, 353, 354, 355, 356,
	357, 1271, 358, 360, 1265, 1264, 1184, 363, 359, 361,
	0, 364, 362, 365, 0, 366, 367, 368, 0, 0,
	369, 1256, 371, 0, 372, 373, 374, 0, 375, 376,
	377, 0, 378, 379, 1190, 380, 381, 382, 384, 386,
	383, 385, 387, 388, 389, 390, 1279, 1280, 391, 1203,
	293, 0, 0, 0, 0, 0, 392, 393, 394, 1263,
	0, 0, 0, 395, 0, 396, 397, 398, 0, 399,
	400, 0, 1290, 401, 402, 403, 1276, 1277, 404, 405,
	406, 407, 408, 409, 410, 411, 412, 0, 413, 1286,
	0, 1213, 414, 0, 415, 416, 417, 418, 419, 420,
	421, 1249, 1250, 1253, 510, 1292, 422, 423, 0, 424,
	425, 426, 427, 428, 0, 0, 0, 294, 429, 430,
	431, 0, 1291, 511, 432, 1258, 1259, 0, 1219, 0,
	433, 434, 1293, 1251, 1294, 435, 436, 437, 1295, 438,
	0, 0, 0, 439, 440, 441, 442, 443, 444, 0,
	445, 447, 446, 0, 448, 1287, 1296, 449, 450, 1297,
	0, 451, 452, 453, 454, 455, 456, 459, 1242, 1241,
	457, 458, 460, 461, 0, 462, 463, 465, 468, 464,
	466, 467, 469, 482, 483, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 485, 0, 484,
	1298, 486, 487, 488, 489, 490, 497, 499, 500, 495,
	496, 498, 501, 502, 504, 492, 493, 494, 1299, 503,
	491, 1181, 295, 1300, 505, 506, 507, 508, 1204, 1252,
	509, 1266, 512, 513, 0, 0, 514, 0, 515, 0,
	0, 517, 518, 519, 0, 0, 520, 521, 716, 1301,
	522, 1302, 1281, 523, 524, 1191, 525, 526, 527, 528,
	529, 530, 531, 532, 533, 0, 534, 535, 718, 536,
	537, 538, 719, 539, 540, 541, 1282, 542, 721, 543,
	544, 0, 545, 546, 547, 0, 548, 549, 550, 551,
	552, 553, 554, 555, 1262, 556, 557, 559, 558, 560,
	0, 561, 0, 562, 563, 564, 0, 0, 0, 0,
	0, 565, 566, 568, 0, 569, 570, 571, 572, 567,
	573, 574, 575, 576, 577, 0, 578, 579, 580, 1303,
	581, 582, 583, 584, 585, 1192, 586, 0, 587, 588,
	595, 596, 597, 589, 590, 591, 598, 599, 600, 601,
	602, 0, 604, 605, 603, 606, 607, 608, 1245, 609,
	610, 592, 593, 611, 612, 1304, 613, 614, 615, 616,
	617, 618, 619, 1260, 0, 620, 0, 621, 622, 623,
	624, 625, 627, 594, 628, 633, 634, 1307, 629, 630,
	631, 632, 1283, 636, 637, 638, 0, 639, 640, 1178,
	635, 626, 0, 641, 642, 643, 644, 645, 646, 0,
	647, 648, 0, 649, 1272, 1273, 1274, 1275, 0, 659,
	0, 650, 651, 652, 653, 1284, 654, 1285, 1202, 655,
	656, 657, 658, 0, 660, 661, 0, 1185, 662, 663,
	665, 667, 668, 664, 666, 669, 1246, 670, 0, 0,
	671, 672, 673, 733, 1269, 1306, 0, 675, 674, 676,
	677, 678, 736, 679, 680, 0, 0, 0, 0, 681,
	682, 737, 683, 684, 685, 1182, 0, 0, 0, 0,
	0, 1224, 1196, 1197, 1198, 1194, 1195, 1207, 0, 1177,
	0, 0, 0, 0, 0, 0, 1175, 1176, 296, 297,
	299, 298, 300, 301, 302, 303, 1208, 304, 305, 0,
	1206, 0, 0, 0, 1248, 1212, 0, 0, 306, 0,
	307, 308, 1288, 309, 310, 311, 312, 313, 314, 315,
	687, 1261, 0, 316, 1268, 317, 1267, 0, 1278, 318,
	319, 320, 321, 322, 323, 1214, 1247, 1179, 324, 1308,
	1309, 694, 0, 325, 326, 1254, 0, 1235, 0, 327,
	328, 329, 330, 331, 332, 333, 334, 0, 0, 336,
	337, 338, 335, 339, 0, 340, 0, 341, 342, 343,
	344, 345, 346, 0, 347, 348, 349, 1289, 350, 351,
	5087, 1238, 1236, 1237, 1244, 1240, 1239, 1243, 353, 354,
	355, 356, 357, 1271, 358, 360, 1265, 1264, 1184, 363,
	359, 361, 0, 364, 362, 365, 0, 366, 367, 368,
	0, 0, 369, 1256, 371, 0, 372, 373, 374, 0,
	375, 376, 377, 0, 378, 379, 1190, 380, 381, 382,
	384, 386, 383, 385, 387, 388, 389, 390, 1279, 1280,
	391, 1203, 293, 0, 0, 0, 0, 0, 392, 393,
	394, 1263, 0, 0, 0, 395, 0, 396, 397, 398,
	0, 399, 400, 0, 1290, 401, 402, 403, 1276, 1277,
	404, 405, 406, 407, 408, 409, 410, 411, 412, 0,
	413, 1286, 0, 1213, 414, 0, 415, 416, 417, 418,
	419, 420, 421, 1249, 1250, 1253, 510, 1292, 422, 423,
	0, 424, 425, 426, 427, 428, 0, 0, 0, 294,
	429, 430, 431, 0, 1291, 511, 432, 1258, 1259, 0,
	1219, 0, 433, 434, 1293, 1251, 1294, 435, 436, 437,
	1295, 438, 0, 0, 0, 439, 440, 441, 442, 443,
	444, 0, 445, 447, 446, 0, 448, 1287, 1296, 449,
	450, 1297, 0, 451, 452, 453, 454, 455, 456, 459,
	1242, 1241, 457, 458, 460, 461, 0, 462, 463, 465,
	468, 464, 466, 467, 469, 482, 483, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 485,
	0, 484, 1298, 486, 487, 488, 489, 490, 497, 499,
	500, 495, 496, 498, 501, 502, 504, 492, 493, 494,
	1299, 503, 491, 1181, 295, 1300, 505, 506, 507, 508,
	1204, 1252, 509, 1266, 512, 513, 0, 0, 514, 0,
	515, 0, 0, 517, 518, 519, 0, 0, 520, 521,
	716, 1301, 522, 1302, 1281, 523, 524, 1191, 525, 526,
	527, 528, 529, 530, 531, 532, 533, 0, 534, 535,
	718, 536, 537, 538, 719, 539, 540, 541, 1282, 542,
	721, 543, 544, 0, 545, 546, 547, 0, 548, 549,
	550, 551, 552, 553, 554, 555, 1262, 556, 557, 559,
	558, 560, 0, 561, 0, 562, 563, 564, 0, 0,
	0, 0, 0, 565, 566, 568, 0, 569, 570, 571,
	572, 567, 573, 574, 575, 576, 577, 0, 578, 579,
	580, 1303, 581, 582, 583, 584, 585, 1192, 586, 0,
	587, 588, 595, 596, 597, 589, 590, 591, 598, 599,
	600, 601, 602, 0, 604, 605, 603, 606, 607, 608,
	1245, 609, 610, 592, 593, 611, 612, 1304, 613, 614,
	615, 616, 617, 618, 619, 1260, 0, 620, 0, 621,
	622, 623, 624, 625, 627, 594, 628, 633, 634, 1307,
	629, 630, 631, 632, 1283, 636, 637, 638, 0, 639,
	640, 1178, 635, 626, 0, 641, 642, 643, 644, 645,
	646, 0, 647, 648, 0, 649, 1272, 1273, 1274, 1275,
	0, 659, 0, 650, 651, 652, 653, 1284, 654, 1285,
	1202, 655, 656, 657, 658, 0, 5086, 661, 0, 1185,
	662, 663, 665, 667, 668, 664, 666, 669, 1246, 670,
	0, 0, 671, 672, 673, 733, 1269, 1306, 0, 675,
	674, 676, 677, 678, 736, 679, 680, 0, 0, 0,
	0, 681, 682, 737, 683, 684, 685, 1182, 0, 0,
	0, 0, 0, 1224, 1196, 1197, 1198, 1194, 1195, 1207,
	0, 1177, 0, 0, 0, 0, 0, 0, 1175, 1176,
	296, 297, 299, 298, 300, 301, 302, 303, 1208, 304,
	305, 0, 1206, 0, 0, 0, 1248, 1212, 0, 0,
	306, 0, 307, 308, 1288, 309, 310, 311, 312, 313,
	314, 315, 5085, 1261, 0, 316, 1268, 317, 1267, 0,
	1278, 318, 319, 320, 321, 322, 323, 1214, 1247, 1179,
	324, 1308, 1309, 694, 0, 325, 326, 1254, 0, 1235,
	0, 327, 328, 329, 330, 331, 332, 333, 334, 0,
	0, 336, 337, 338, 335, 339, 0, 340, 0, 341,
	342, 343, 344, 345, 346, 0, 347, 348, 349, 1289,
	350, 351, 5087, 1238, 1236, 1237, 1244, 1240, 1239, 1243,
	353, 354, 355, 356, 357, 1271, 358, 360, 1265, 1264,
	1184, 363, 359, 361, 0, 364, 362, 365, 0, 366,
	367, 368, 0, 0, 369, 1256, 371, 0, 372, 373,
	374, 0, 375, 376, 377, 0, 378, 379, 1190, 380,
	381, 382, 384, 386, 383, 385, 387, 388, 389, 390,
	1279, 1280, 391, 1203, 293, 0, 0, 0, 0, 0,
	392, 393, 394, 1263, 0, 0, 0, 395, 0, 396,
	397, 398, 0, 399, 400, 0, 1290, 401, 402, 403,
	1276, 1277, 404, 405, 406, 407, 408, 409, 410, 411,
	412, 0, 413, 1286, 0, 1213, 414, 0, 415, 416,
	417, 418, 419, 420, 421, 1249, 1250, 1253, 510, 1292,
	422, 423, 0, 424, 425, 426, 427, 428, 0, 0,
	0, 294, 429, 430, 431, 0, 1291, 511, 432, 1258,
	1259, 0, 1219, 0, 433, 434, 1293, 1251, 1294, 435,
	436, 437, 1295, 438, 0, 0, 0, 439, 440, 441,
	442, 443, 444, 0, 445, 447, 446, 0, 448, 1287,
	1296, 449, 450, 1297, 0, 451, 452, 453, 454, 455,
	456, 459, 1242, 1241, 457, 458, 460, 461, 0, 462,
	463, 465, 468, 464, 466, 467, 469, 482, 483, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 485, 0, 484, 1298, 486, 487, 488, 489, 490,
	497, 499, 500, 495, 496, 498, 501, 502, 504, 492,
	493, 494, 1299, 503, 491, 1181, 295, 1300, 505, 506,
	507, 508, 1204, 1252, 509, 1266, 512, 513, 0, 0,
	514, 0, 515, 0, 0, 517, 518, 519, 0, 0,
	520, 521, 716, 1301, 522, 1302, 1281, 523, 524, 1191,
	525, 526, 527, 528, 529, 530, 531, 532, 533, 0,
	534, 535, 718, 536, 537, 538, 719, 539, 540, 541,
	1282, 542, 721, 543, 544, 0, 545, 546, 547, 0,
	548, 549, 550, 551, 552, 553, 554, 555, 1262, 556,
	557, 559, 558, 560, 0, 561, 0, 562, 563, 564,
	0, 0, 0, 0, 0, 565, 566, 568, 0, 569,
	570, 571, 572, 567, 573, 574, 575, 576, 577, 0,
	578, 579, 580, 1303, 581, 582, 583, 584, 585, 1192,
	586, 0, 587, 588, 595, 596, 597, 589, 590, 591,
	598, 599, 600, 601, 602, 0, 604, 605, 603, 606,
	607, 608, 1245, 609, 610, 592, 593, 611, 612, 1304,
	613, 614, 615, 616, 617, 618, 619, 1260, 0, 620,
	0, 621, 622, 623, 624, 625, 627, 594, 628, 633,
	634, 1307, 629, 630, 631, 632, 1283, 636, 637, 638,
	0, 639, 640, 1178, 635, 626, 0, 641, 642, 643,
	644, 645, 646, 0, 647, 648, 0, 649, 1272, 1273,
	1274, 1275, 0, 659, 0, 650, 651, 652, 653, 1284,
	654, 1285, 1202, 655, 656, 657, 658, 0, 5086, 661,
	0, 1185, 662, 663, 665, 667, 668, 664, 666, 669,
	1246, 670, 0, 0, 671, 672, 673, 733, 1269, 1306,
	0, 675, 674, 676, 677, 678, 736, 679, 680, 0,
	0, 0, 0, 681, 682, 737, 683, 684, 685, 1182,
	0, 0, 0, 0, 0, 1224, 1196, 1197, 1198, 1194,
	1195, 1207, 0, 1177, 0, 0, 0, 0, 0, 0,
	1175, 1176, 296, 297, 299, 298, 300, 301, 302, 303,
	1208, 304, 305, 0, 1206, 0, 0, 0, 1248, 1212,
	0, 0, 306, 0, 307, 308, 1288, 309, 310, 311,
	312, 313, 314, 315, 687, 1261, 0, 316, 1268, 317,
	1267, 0, 1278, 318, 319, 320, 321, 322, 323, 1214,
	1247, 1179, 324, 1308, 1309, 694, 0, 325, 326, 1254,
	0, 1235, 0, 327, 328, 329, 330, 331, 332, 333,
	334, 0, 0, 336, 337, 338, 335, 339, 0, 340,
	0, 341, 342, 343, 344, 345, 346, 0, 347, 348,
	349, 1289, 350, 4683, 352, 1238, 1236, 1237, 1244, 1240,
	1239, 1243, 353, 354, 355, 356, 357, 1271, 358, 360,
	1265, 1264, 1184, 363, 359, 361, 0, 364, 362, 365,
	0, 366, 367, 368, 0, 0, 369, 1256, 371, 0,
	372, 373, 374, 0, 375, 376, 377, 0, 378, 379,
	1190, 380, 381, 382, 384, 386, 383, 385, 387, 388,
	389, 390, 1279, 1280, 391, 1203, 293, 0, 0, 0,
	0, 0, 392, 393, 394, 1263, 0, 0, 0, 395,
	0, 396, 397, 398, 0, 399, 400, 0, 1290, 401,
	402, 403, 1276, 1277, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 0, 413, 1286, 0, 4684, 414, 0,
	415, 416, 417, 418, 419, 420, 421, 1249, 1250, 1253,
	510, 1292, 422, 423, 0, 424, 425, 426, 427, 428,
	0, 0, 0, 294, 429, 430, 431, 0, 1291, 511,
	432, 1258, 1259, 0, 1219, 0, 433, 434, 1293, 1251,
	1294, 435, 436, 437, 1295, 438, 0, 0, 0, 439,
	440, 441, 442, 443, 444, 0, 445, 447, 446, 0,
	448, 1287, 1296, 449, 450, 1297, 0, 451, 452, 453,
	454, 455, 456, 459, 1242, 1241, 457, 458, 460, 461,
	0, 462, 463, 465, 468, 464, 466, 467, 469, 482,
	483, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 485, 0, 484, 1298, 486, 487, 488,
	489, 490, 497, 499, 500, 495, 496, 498, 501, 502,
	504, 492, 493, 494, 1299, 503, 491, 1181, 295, 1300,
	505, 506, 507, 508, 1204, 1252, 509, 1266, 512, 513,
	0, 0, 514, 0, 515, 0, 0, 517, 518, 519,
	0, 0, 520, 521, 716, 1301, 522, 1302, 1281, 523,
	524, 1191, 525, 526, 527, 528, 529, 530, 531, 532,
	533, 0, 534, 535, 718, 536, 537, 538, 719, 539,
	540, 541, 1282, 542, 721, 543, 544, 0, 545, 546,
	547, 0, 548, 549, 550, 551, 552, 553, 554, 555,
	1262, 556, 557, 559, 558, 560, 0, 561, 0, 562,
	563, 564, 0, 0, 0, 0, 0, 565, 566, 568,
	0, 569, 570, 571, 572, 567, 573, 574, 575, 576,
	577, 0, 578, 579, 580, 1303, 581, 582, 583, 4682,
	585, 1192, 586, 0, 587, 588, 595, 596, 597, 589,
	590, 591, 598, 599, 600, 601, 602, 0, 604, 605,
	603, 606, 607, 608, 1245, 609, 610, 592, 593, 611,
	612, 1304, 613, 614, 615, 616, 617, 618, 619, 1260,
	0, 620, 0, 621, 622, 623, 624, 625, 627, 594,
	628, 633, 634, 1307, 629, 630, 631, 632, 1283, 636,
	637, 638, 0, 639, 640, 1178, 635, 626, 0, 641,
	642, 643, 644, 645, 646, 0, 647, 648, 0, 649,
	1272, 1273, 1274, 1275, 0, 659, 0, 650, 651, 652,
	653, 1284, 654, 1285, 1202, 655, 656, 657, 658, 0,
	660, 661, 0, 1185, 662, 663, 665, 667, 668, 664,
	666, 669, 1246, 670, 0, 0, 671, 672, 673, 733,
	1269, 1306, 0, 675, 674, 676, 677, 678, 736, 679,
	680, 0, 0, 0, 0, 681, 682, 737, 683, 684,
	685, 1182, 0, 0, 0, 0, 0, 1224, 1196, 1197,
	1198, 3404, 3405, 1207, 0, 1177, 0, 0, 0, 0,
	0, 0, 1175, 1176, 296, 297, 299, 298, 300, 301,
	302, 303, 1208, 304, 305, 0, 1206, 0, 0, 0,
	1248, 1212, 0, 0, 306, 0, 307, 308, 1288, 309,
	310, 311, 312, 313, 314, 315, 687, 1261, 0, 316,
	1268, 317, 1267, 0, 1278, 318, 319, 320, 321, 322,
	323, 1214, 1247, 1179, 324, 1308, 1309, 694, 0, 325,
	326, 1254, 0, 1235, 0, 327, 328, 329, 330, 331,
	332, 333, 334, 0, 0, 336, 337, 338, 335, 339,
	0, 340, 0, 341, 342, 343, 344, 345, 346, 0,
	347, 348, 349, 1289, 350, 351, 352, 1238, 1236, 1237,
	1244, 1240, 1239, 1243, 353, 354, 355, 356, 357, 1271,
	358, 360, 1265, 1264, 1184, 363, 359, 361, 0, 364,
	362, 365, 0, 366, 367, 368, 0, 0, 369, 1256,
	371, 0, 372, 373, 374, 0, 375, 376, 377, 0,
	378, 379, 1190, 380, 381, 382, 384, 386, 383, 385,
	387, 388, 389, 390, 1279, 1280, 391, 1203, 293, 0,
	0, 0, 0, 0, 392, 393, 394, 1263, 0, 0,
	0, 395, 0, 396, 397, 398, 0, 399, 400, 0,
	1290, 401, 402, 403, 1276, 1277, 404, 405, 406, 407,
	408, 409, 410, 411, 412, 0, 413, 1286, 0, 1213,
	414, 0, 415, 416, 417, 418, 419, 420, 421, 1249,
	1250, 1253, 510, 1292, 422, 423, 0, 424, 425, 426,
	427, 428, 0, 0, 0, 294, 429, 430, 431, 0,
	1291, 511, 432, 1258, 1259, 0, 1219, 0, 433, 434,
	1293, 1251, 1294, 435, 436, 437, 1295, 438, 0, 0,
	0, 439, 440, 441, 442, 443, 444, 0, 445, 447,
	446, 0, 448, 1287, 1296, 449, 450, 1297, 0, 451,
	452, 453, 454, 455, 456, 459, 1242, 1241, 457, 458,
	460, 461, 0, 462, 463, 465, 468, 464, 466, 467,
	469, 482, 483, 470, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 485, 0, 484, 1298, 486,
	487, 488, 489, 490, 497, 499, 500, 495, 496, 498,
	501, 502, 504, 492, 493, 494, 1299, 503, 491, 1181,
	295, 1300, 505, 506, 507, 508, 1204, 1252, 509, 1266,
	512, 513, 0, 0, 514, 0, 515, 0, 0, 517,
	518, 519, 0, 0, 520, 521, 716, 1301, 522, 1302,
	1281, 523, 524, 1191, 525, 526, 527, 528, 529, 530,
	531, 532, 533, 0, 534, 535, 718, 536, 537, 538,
	719, 539, 540, 541, 1282, 542, 721, 543, 544, 0,
	545, 546, 547, 0, 548, 549, 550, 551, 552, 553,
	554, 555, 1262, 556, 557, 559, 558, 560, 0, 561,
	0, 562, 563, 564, 0, 0, 0, 0, 0, 565,
	566, 568, 0, 569, 570, 571, 572, 567, 573, 574,
	575, 576, 577, 0, 578, 579, 580, 1303, 581, 582,
	583, 584, 585, 1192, 586, 0, 587, 588, 595, 596,
	597, 589, 590, 591, 598, 599, 600, 601, 602, 0,
	604, 605, 603, 606, 607, 608, 1245, 609, 610, 592,
	593, 611, 612, 1304, 613, 614, 615, 616, 617, 618,
	619, 1260, 0, 620, 0, 621, 622, 623, 624, 625,
	627, 594, 628, 633, 634, 1307, 629, 630, 631, 632,
	1283, 636, 637, 638, 0, 639, 640, 1178, 635, 626,
	0, 641, 642, 643, 644, 645, 646, 0, 647, 648,
	0, 649, 1272, 1273, 1274, 1275, 0, 659, 0, 650,
	651, 652, 653, 1284, 654, 1285, 1202, 655, 656, 657,
	658, 0, 660, 661, 0, 1185, 662, 663, 665, 667,
	668, 664, 666, 669, 1246, 670, 0, 0, 671, 672,
	673, 733, 1269, 1306, 0, 675, 674, 676, 677, 678,
	736, 679, 680, 0, 0, 0, 0, 681, 682, 737,
	683, 684, 685, 1182, 0, 0, 0, 0, 0, 1224,
	1196, 1197, 1198, 3402, 3403, 1207, 0, 1177, 0, 0,
	0, 0, 0, 0, 1175, 1176, 296, 297, 299, 298,
	300, 301, 302, 303, 1208, 304, 305, 0, 1206, 0,
	0, 0, 1248, 1212, 0, 0, 306, 0, 307, 308,
	1288, 309, 310, 311, 312, 313, 314, 315, 687, 1261,
	0, 316, 1268, 317, 1267, 0, 1278, 318, 319, 320,
	321, 322, 323, 1214, 1247, 1179, 324, 1308, 1309, 694,
	0, 325, 326, 1254, 0, 1235, 0, 327, 328, 329,
	330, 331, 332, 333, 334, 0, 0, 336, 337, 338,
	335, 339, 0, 340, 0, 341, 342, 343, 344, 345,
	346, 0, 347, 348, 349, 1289, 350, 351, 352, 1238,
	1236, 1237, 1244, 1240, 1239, 1243, 353, 354, 355, 356,
	357, 1271, 358, 360, 1265, 1264, 1184, 363, 359, 361,
	0, 364, 362, 365, 0, 366, 367, 368, 0, 0,
	369, 1256, 371, 0, 372, 373, 374, 0, 375, 376,
	377, 0, 378, 379, 1190, 380, 381, 382, 384, 386,
	383, 385, 387, 388, 389, 390, 1279, 1280, 391, 1203,
	293, 0, 0, 0, 0, 0, 392, 393, 394, 1263,
	0, 0, 0, 395, 0, 396, 397, 398, 0, 399,
	400, 0, 1290, 401, 402, 403, 1276, 1277, 404, 405,
	406, 407, 408, 409, 410, 411, 412, 0, 413, 1286,
	0, 1213, 414, 0, 415, 416, 417, 418, 419, 420,
	421, 1249, 1250, 1253, 510, 1292, 422, 423, 0, 424,
	425, 426, 427, 428, 0, 0, 0, 294, 429, 430,
	431, 0, 1291, 511, 432, 1258, 1259, 0, 1219, 0,
	433, 434, 1293, 1251, 1294, 435, 436, 437, 1295, 438,
	0, 0, 0, 439, 440, 441, 442, 443, 444, 0,
	445, 447, 446, 0, 448, 1287, 1296, 449, 450, 1297,
	0, 451, 452, 453, 454, 455, 456, 459, 1242, 1241,
	457, 458, 460, 461, 0, 462, 463, 465, 468, 464,
	466, 467, 469, 482, 483, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 485, 0, 484,
	1298, 486, 487, 488, 489, 490, 497, 499, 500, 495,
	496, 498, 501, 502, 504, 492, 493, 494, 1299, 503,
	491, 1181, 295, 1300, 505, 506, 507, 508, 1204, 1252,
	509, 1266, 512, 513, 0, 0, 514, 0, 515, 0,
	0, 517, 518, 519, 0, 0, 520, 521, 716, 1301,
	522, 1302, 1281, 523, 524, 1191, 525, 526, 527, 528,
	529, 530, 531, 532, 533, 0, 534, 535, 718, 536,
	537, 538, 719, 539, 540, 541, 1282, 542, 721, 543,
	544, 0, 545, 546, 547, 0, 548, 549, 550, 551,
	552, 553, 554, 555, 1262, 556, 557, 559, 558, 560,
	0, 561, 0, 562, 563, 564, 0, 0, 0, 0,
	0, 565, 566, 568, 0, 569, 570, 571, 572, 567,
	573, 574, 575, 576, 577, 0, 578, 579, 580, 1303,
	581, 582, 583, 584, 585, 1192, 586, 0, 587, 588,
	595, 596, 597, 589, 590, 591, 598, 599, 600, 601,
	602, 0, 604, 605, 603, 606, 607, 608, 1245, 609,
	610, 592, 593, 611, 612, 1304, 613, 614, 615, 616,
	617, 618, 619, 1260, 0, 620, 0, 621, 622, 623,
	624, 625, 627, 594, 628, 633, 634, 1307, 629, 630,
	631, 632, 1283, 636, 637, 638, 0, 639, 640, 1178,
	635, 626, 0, 641, 642, 643, 644, 645, 646, 0,
	647, 648, 0, 649, 1272, 1273, 1274, 1275, 0, 659,
	0, 650, 651, 652, 653, 1284, 654, 1285, 1202, 655,
	656, 657, 658, 0, 660, 661, 0, 1185, 662, 663,
	665, 667, 668, 664, 666, 669, 1246, 670, 0, 0,
	671, 672, 673, 733, 1269, 1306, 0, 675, 674, 676,
	677, 678, 736, 679, 680, 0, 0, 0, 0, 681,
	682, 737, 683, 684, 685, 1182, 0, 0, 0, 0,
	0, 1224, 1196, 1197, 1198, 1194, 1195, 1207, 0, 1177,
	0, 0, 0, 0, 0, 0, 1175, 1176, 296, 297,
	299, 298, 300, 301, 302, 303, 1208, 304, 305, 0,
	1206, 0, 0, 0, 1248, 1212, 0, 0, 306, 0,
	307, 308, 1288, 309, 310, 311, 312, 313, 314, 315,
	687, 1261, 0, 316, 1268, 317, 1267, 0, 1278, 318,
	319, 320, 321, 322, 323, 1214, 1247, 1179, 324, 1308,
	1309, 694, 0, 325, 326, 1254, 0, 1235, 0, 327,
	328, 329, 330, 331, 332, 333, 334, 0, 0, 336,
	337, 338, 335, 339, 0, 340, 0, 341, 342, 343,
	344, 345, 346, 0, 347, 348, 349, 1289, 350, 351,
	352, 1238, 1236, 1237, 1244, 1240, 1239, 1243, 353, 354,
	355, 356, 357, 1271, 358, 360, 1265, 1264, 1184, 363,
	359, 361, 0, 364, 362, 365, 0, 366, 367, 368,
	0, 0, 369, 1256, 371, 0, 372, 373, 374, 0,
	375, 376, 377, 0, 378, 379, 1190, 380, 381, 382,
	384, 386, 383, 385, 387, 388, 389, 390, 1279, 1280,
	391, 1203, 293, 0, 0, 0, 0, 0, 392, 393,
	394, 1263, 0, 0, 0, 395, 0, 396, 397, 398,
	0, 399, 400, 0, 1290, 401, 402, 403, 1276, 1277,
	404, 405, 406, 407, 408, 409, 410, 411, 412, 0,
	413, 1286, 0, 1213, 414, 0, 415, 416, 417, 418,
	419, 420, 421, 1249, 1250, 1253, 510, 1292, 422, 423,
	0, 424, 425, 426, 427, 428, 0, 0, 0, 294,
	429, 430, 431, 0, 1291, 511, 432, 1258, 1259, 0,
	1219, 0, 433, 434, 1293, 1251, 1294, 435, 436, 437,
	1295, 438, 0, 0, 0, 439, 440, 441, 442, 443,
	444, 0, 445, 447, 446, 0, 448, 1287, 1296, 449,
	450, 1297, 0, 451, 452, 453, 454, 455, 456, 459,
	1242, 1241, 457, 458, 460, 461, 0, 462, 463, 465,
	468, 464, 466, 467, 469, 482, 483, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 485,
	0, 484, 1298, 486, 487, 488, 489, 490, 497, 499,
	500, 495, 496, 498, 501, 502, 504, 492, 493, 494,
	1299, 503, 491, 1181, 295, 1300, 505, 506, 507, 508,
	1204, 1252, 509, 1266, 512, 513, 0, 0, 514, 0,
	515, 0, 0, 517, 518, 519, 0, 0, 520, 521,
	716, 1301, 522, 1302, 1281, 523, 524, 1191, 525, 526,
	527, 528, 529, 530, 531, 532, 533, 0, 534, 535,
	718, 536, 537, 538, 719, 539, 540, 541, 1282, 542,
	721, 543, 544, 0, 545, 546, 547, 0, 548, 549,
	550, 551, 552, 553, 554, 555, 1262, 556, 557, 559,
	558, 560, 0, 561, 0, 562, 563, 564, 0, 0,
	0, 0, 0, 565, 566, 568, 0, 569, 570, 571,
	572, 567, 573, 574, 575, 576, 577, 0, 578, 579,
	580, 1303, 581, 582, 583, 584, 585, 1192, 586, 0,
	587, 588, 595, 596, 597, 589, 590, 591, 598, 599,
	600, 601, 602, 0, 604, 605, 603, 606, 607, 608,
	1245, 609, 610, 592, 593, 611, 612, 1304, 613, 614,
	615, 616, 617, 618, 619, 1260, 0, 620, 0, 621,
	622, 623, 624, 625, 627, 594, 628, 633, 634, 1307,
	629, 630, 631, 632, 1283, 636, 637, 638, 0, 639,
	640, 1178, 635, 626, 0, 641, 642, 643, 644, 645,
	646, 0, 647, 648, 0, 649, 1272, 1273, 1274, 1275,
	0, 659, 0, 650, 651, 652, 653, 1284, 654, 1285,
	1202, 655, 656, 657, 658, 0, 660, 661, 0, 1185,
	662, 663, 665, 667, 668, 664, 666, 669, 1246, 670,
	0, 0, 671, 672, 673, 733, 1269, 1306, 0, 675,
	674, 676, 677, 678, 736, 679, 680, 0, 0, 0,
	0, 681, 682, 737, 683, 684, 685, 1182, 0, 0,
	0, 0, 0, 1224, 1196, 1197, 1198, 1194, 1195, 1207,
	0, 1177, 0, 0, 0, 0, 0, 0, 2638, 2639,
	296, 297, 299, 298, 300, 301, 302, 303, 1208, 304,
	305, 0, 1206, 0, 0, 0, 1248, 1212, 0, 0,
	306, 0, 307, 308, 1288, 309, 310, 311, 312, 313,
	314, 315, 687, 1261, 0, 316, 1268, 317, 1267, 0,
	1278, 318, 319, 320, 321, 322, 323, 1214, 1247, 0,
	324, 1308, 1309, 694, 0, 325, 326, 1254, 0, 1235,
	0, 327, 328, 329, 330, 331, 332, 333, 334, 0,
	0, 336, 337, 338, 335, 339, 0, 340, 0, 341,
	342, 343, 344, 345, 346, 0, 347, 348, 349, 1289,
	350, 351, 352, 1238, 1236, 1237, 1244, 1240, 1239, 1243,
	353, 354, 355, 356, 357, 1271, 358, 360, 1265, 1264,
	0, 363, 359, 361, 0, 364, 362, 365, 0, 366,
	367, 368, 0, 0, 369, 1256, 371, 0, 372, 373,
	374, 0, 375, 376, 377, 0, 378, 379, 1190, 380,
	381, 382, 384, 386, 383, 385, 387, 388, 389, 390,
	1279, 1280, 391, 1203, 293, 0, 0, 0, 0, 0,
	392, 393, 394, 1263, 0, 0, 0, 395, 0, 396,
	397, 398, 0, 399, 400, 0, 1290, 401, 402, 403,
	1276, 1277, 404, 405, 406, 407, 408, 409, 410, 411,
	412, 0, 413, 1286, 0, 1213, 414, 0, 415, 416,
	417, 418, 419, 420, 421, 1249, 1250, 1253, 510, 1292,
	422, 423, 0, 424, 425, 426, 427, 428, 0, 0,
	0, 294, 429, 430, 431, 0, 1291, 511, 432, 1258,
	1259, 0, 1219, 0, 433, 434, 1293, 1251, 1294, 435,
	436, 437, 1295, 438, 0, 0, 0, 439, 440, 441,
	442, 443, 444, 0, 445, 447, 446, 0, 448, 1287,
	1296, 449, 450, 1297, 0, 451, 452, 453, 454, 455,
	456, 459, 1242, 1241, 457, 458, 460, 461, 0, 462,
	463, 465, 468, 464, 466, 467, 469, 482, 483, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 485, 0, 484, 1298, 486, 487, 488, 489, 490,
	497, 499, 500, 495, 496, 498, 501, 502, 504, 492,
	493, 494, 1299, 503, 491, 0, 295, 1300, 505, 506,
	507, 508, 1204, 1252, 509, 1266, 512, 513, 0, 0,
	514, 0, 515, 0, 0, 517, 518, 519, 0, 0,
	520, 521, 716, 1301, 522, 1302, 1281, 523, 524, 1191,
	525, 526, 527, 528, 529, 530, 531, 532, 533, 0,
	534, 535, 718, 536, 537, 538, 719, 539, 540, 541,
	1282, 542, 721, 543, 544, 0, 545, 546, 547, 0,
	548, 549, 550, 551, 552, 553, 554, 555, 1262, 556,
	557, 559, 558, 560, 0, 561, 0, 562, 563, 564,
	0, 0, 0, 0, 0, 565, 566, 568, 0, 569,
	570, 571, 572, 567, 573, 574, 575, 576, 577, 0,
	578, 579, 580, 1303, 581, 582, 583, 584, 585, 1192,
	586, 0, 587, 588, 595, 596, 597, 589, 590, 591,
	598, 599, 600, 601, 602, 0, 604, 605, 603, 606,
	607, 608, 1245, 609, 610, 592, 593, 611, 612, 1304,
	613, 614, 615, 616, 617, 618, 619, 1260, 0, 620,
	0, 621, 622, 623, 624, 625, 627, 594, 628, 633,
	634, 1307, 629, 630, 631, 632, 1283, 636, 637, 638,
	0, 639, 640, 0, 635, 626, 0, 641, 642, 643,
	644, 645, 646, 0, 647, 648, 0, 649, 1272, 1273,
	1274, 1275, 0, 659, 0, 650, 651, 652, 653, 1284,
	654, 1285, 1202, 655, 656, 657, 658, 0, 660, 661,
	0, 0, 662, 663, 665, 667, 668, 664, 666, 669,
	1246, 670, 0, 0, 671, 672, 673, 733, 1269, 1306,
	0, 675, 674, 676, 677, 678, 736, 679, 680, 0,
	0, 0, 0, 681, 682, 737, 683, 684, 685, 0,
	0, 0, 0, 0, 0, 1224, 1196, 1197, 1198, 1194,
	1195, 1207, 0, 2897, 0, 0, 0, 0, 0, 0,
	2895, 2896, 296, 297, 299, 298, 300, 301, 302, 303,
	1208, 304, 305, 0, 1206, 0, 0, 0, 1248, 1212,
	0, 0, 306, 0, 307, 308, 1288, 309, 310, 311,
	312, 313, 314, 315, 687, 1261, 0, 316, 1268, 317,
	1267, 0, 1278, 318, 319, 320, 321, 322, 323, 1214,
	1247, 0, 324, 1308, 1309, 694, 0, 325, 326, 1254,
	0, 1235, 0, 327, 328, 329, 330, 331, 332, 333,
	334, 0, 0, 336, 337, 338, 335, 339, 0, 340,
	0, 341, 342, 343, 344, 345, 346, 0, 347, 348,
	349, 1289, 350, 351, 352, 1238, 1236, 1237, 1244, 1240,
	1239, 1243, 353, 354, 355, 356, 357, 1271, 358, 360,
	1265, 1264, 0, 363, 359, 361, 0, 364, 362, 365,
	0, 366, 367, 368, 0, 0, 369, 1256, 371, 0,
	372, 373, 374, 0, 375, 376, 377, 0, 378, 379,
	1190, 380, 381, 382, 384, 386, 383, 385, 387, 388,
	389, 390, 1279, 1280, 391, 1203, 293, 0, 0, 0,
	0, 0, 392, 393, 394, 1263, 0, 0, 0, 395,
	0, 396, 397, 398, 0, 399, 400, 0, 1290, 401,
	402, 403, 1276, 1277, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 0, 413, 1286, 0, 1213, 414, 0,
	415, 416, 417, 418, 419, 420, 421, 1249, 1250, 1253,
	510, 1292, 422, 423, 0, 424, 425, 426, 427, 428,
	0, 0, 0, 294, 429, 430, 431, 0, 1291, 511,
	432, 1258, 1259, 0, 1219, 0, 433, 434, 1293, 1251,
	1294, 435, 436, 437, 1295, 438, 0, 0, 0, 439,
	440, 441, 442, 443, 444, 0, 445, 447, 446, 0,
	448, 1287, 1296, 449, 450, 1297, 0, 451, 452, 453,
	454, 455, 456, 459, 1242, 1241, 457, 458, 460, 461,
	0, 462, 463, 465, 468, 464, 466, 467, 469, 482,
	483, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 485, 0, 484, 1298, 486, 487, 488,
	489, 490, 497, 499, 500, 495, 496, 498, 501, 502,
	504, 492, 493, 494, 1299, 503, 491, 0, 295, 1300,
	505, 506, 507, 508, 1204, 1252, 509, 1266, 512, 513,
	0, 0, 514, 0, 515, 0, 0, 517, 518, 519,
	0, 0, 520, 521, 716, 1301, 522, 1302, 1281, 523,
	524, 516, 525, 526, 527, 528, 529, 530, 531, 532,
	533, 0, 534, 535, 718, 536, 537, 538, 719, 539,
	540, 541, 1282, 542, 721, 543, 544, 0, 545, 546,
	547, 0, 548, 549, 550, 551, 552, 553, 554, 555,
	1262, 556, 557, 559, 558, 560, 0, 561, 0, 562,
	563, 564, 0, 0, 0, 0, 0, 565, 566, 568,
	0, 569, 570, 571, 572, 567, 573, 574, 575, 576,
	577, 0, 578, 579, 580, 1303, 581, 582, 583, 584,
	585, 3397, 3398, 0, 587, 588, 595, 596, 597, 589,
	590, 591, 598, 599, 600, 601, 602, 0, 604, 605,
	603, 606, 607, 608, 1245, 609, 610, 592, 593, 611,
	612, 1304, 613, 614, 615, 616, 617, 618, 619, 1260,
	0, 620, 0, 621, 622, 623, 624, 625, 627, 594,
	628, 633, 634, 1307, 629, 630, 631, 632, 1283, 636,
	637, 638, 0, 639, 640, 0, 635, 626, 0, 641,
	642, 643, 644, 645, 646, 0, 647, 648, 0, 649,
	1272, 1273, 1274, 1275, 0, 659, 0, 650, 651, 652,
	653, 1284, 654, 1285, 1202, 655, 656, 657, 658, 0,
	660, 661, 0, 0, 662, 663, 665, 667, 668, 664,
	666, 669, 1246, 670, 0, 0, 671, 672, 673, 733,
	1269, 1306, 0, 675, 674, 676, 677, 678, 736, 679,
	680, 0, 0, 0, 0, 681, 682, 737, 683, 684,
	685, 0, 0, 0, 0, 0, 0, 1224, 1196, 1197,
	1198, 1194, 1195, 1207, 0, 0, 0, 0, 0, 0,
	0, 0, 2266, 2267, 296, 297, 299, 298, 300, 301,
	302, 303, 1208, 304, 305, 0, 1206, 0, 0, 0,
	1248, 1212, 0, 0, 306, 0, 307, 308, 1288, 309,
	310, 311, 312, 313, 314, 315, 0, 1261, 0, 316,
	1268, 317, 1267, 0, 1278, 318, 319, 320, 321, 322,
	323, 1214, 1247, 1179, 324, 1308, 1309, 694, 0, 325,
	326, 1254, 0, 1235, 0, 327, 328, 329, 330, 331,
	332, 333, 334, 0, 0, 336, 337, 338, 335, 339,
	0, 340, 0, 341, 342, 343, 344, 345, 346, 0,
	347, 348, 349, 1289, 350, 351, 5087, 1238, 1236, 1237,
	1244, 1240, 1239, 1243, 353, 354, 355, 356, 357, 1271,
	358, 360, 1265, 1264, 1184, 363, 359, 361, 0, 364,
	362, 365, 0, 366, 367, 368, 0, 0, 369, 1256,
	371, 0, 372, 373, 374, 0, 375, 376, 377, 0,
	378, 379, 1190, 380, 381, 382, 384, 386, 383, 385,
	387, 388, 389, 390, 1279, 1280, 391, 1203, 293, 0,
	0, 0, 0, 0, 392, 393, 394, 1263, 0, 0,
	0, 395, 0, 396, 397, 398, 0, 399, 400, 0,
	1290, 401, 402, 403, 1276, 1277, 404, 405, 406, 407,
	408, 409, 410, 411, 412, 0, 413, 1286, 0, 1213,
	414, 0, 415, 416, 417, 418, 419, 420, 421, 1249,
	1250, 1253, 510, 0, 422, 423, 0, 424, 425, 426,
	427, 428, 0, 0, 0, 294, 429, 430, 431, 0,
	1291, 511, 432, 1258, 1259, 0, 1219, 0, 433, 434,
	0, 1251, 0, 435, 436, 437, 1295, 438, 0, 0,
	0, 439, 440, 441, 442, 443, 444, 0, 445, 447,
	446, 0, 448, 1287, 1296, 449, 450, 0, 0, 451,
	452, 453, 454, 455, 456, 459, 1242, 1241, 457, 458,
	460, 461, 0, 462, 463, 465, 468, 464, 466, 467,
	469, 482, 483, 470, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 485, 0, 484, 1298, 486,
	487, 488, 489, 490, 497, 499, 500, 495, 496, 498,
	501, 502, 504, 492, 493, 494, 1299, 503, 491, 1181,
	295, 0, 505, 506, 507, 508, 1204, 1252, 509, 1266,
	512, 513, 0, 0, 514, 0, 515, 0, 0, 517,
	518, 519, 0, 0, 520, 521, 716, 1301, 522, 1302,
	1281, 523, 524, 1191, 525, 526, 527, 528, 529, 530,
	531, 532, 533, 0, 534, 535, 718, 536, 537, 538,
	719, 539, 540, 541, 1282, 542, 721, 543, 544, 0,
	545, 546, 547, 0, 548, 549, 550, 551, 552, 553,
	554, 555, 1262, 556, 557, 559, 558, 560, 0, 561,
	0, 562, 563, 564, 0, 0, 0, 0, 0, 565,
	566, 568, 0, 569, 570, 571, 572, 567, 573, 574,
	575, 576, 577, 0, 578, 579, 580, 1303, 581, 582,
	583, 584, 585, 1192, 586, 0, 587, 588, 595, 596,
	597, 589, 590, 591, 598, 599, 600, 601, 602, 0,
	604, 605, 603, 606, 607, 608, 1245, 609, 610, 592,
	593, 611, 612, 0, 613, 614, 615, 616, 617, 618,
	619, 1260, 0, 620, 0, 621, 622, 623, 624, 625,
	627, 594, 628, 633, 634, 1307, 629, 630, 631, 632,
	1283, 636, 637, 638, 0, 639, 640, 1178, 635, 626,
	0, 641, 642, 643, 644, 645, 646, 0, 647, 648,
	0, 649, 1272, 1273, 1274, 1275, 0, 659, 0, 650,
	651, 652, 653, 1284, 654, 1285, 1202, 655, 656, 657,
	658, 0, 5086, 661, 0, 1185, 662, 663, 665, 667,
	668, 664, 666, 669, 1246, 670, 0, 0, 671, 672,
	673, 733, 1269, 1306, 0, 675, 674, 676, 677, 678,
	736, 679, 680, 0, 0, 0, 0, 681, 682, 737,
	683, 684, 685, 0, 0, 0, 0, 2916, 0, 1224,
	1196, 1197, 1198, 1194, 1195, 1207, 0, 0, 0, 0,
	0, 0, 0, 0, 1175, 1176, 296, 297, 299, 298,
	300, 301, 302, 303, 1208, 304, 305, 0, 1206, 0,
	0, 0, 1248, 1212, 0, 0, 306, 0, 307, 308,
	1288, 309, 310, 311, 312, 313, 314, 315, 687, 1261,
	0, 316, 1268, 317, 1267, 0, 1278, 318, 319, 320,
	321, 322, 323, 0, 1247, 0, 324, 1308, 1309, 694,
	0, 325, 326, 1254, 0, 1235, 0, 327, 328, 329,
	330, 331, 332, 333, 334, 0, 0, 336, 337, 338,
	335, 339, 0, 340, 0, 341, 342, 343, 344, 345,
	346, 0, 347, 348, 349, 1289, 350, 351, 352, 1238,
	1236, 1237, 1244, 1240, 1239, 1243, 353, 354, 355, 356,
	357, 1271, 358, 360, 1265, 1264, 0, 363, 359, 361,
	0, 364, 362, 365, 0, 366, 367, 368, 0, 0,
	369, 1256, 371, 0, 372, 373, 374, 0, 375, 376,
	377, 0, 378, 379, 698, 380, 381, 382, 384, 386,
	383, 385, 387, 388, 389, 390, 1279, 1280, 391, 1203,
	293, 0, 0, 0, 0, 0, 392, 393, 394, 1263,
	0, 0, 0, 395, 0, 396, 397, 398, 0, 399,
	400, 0, 1290, 401, 402, 403, 1276, 1277, 404, 405,
	406, 407, 408, 409, 410, 411, 412, 0, 413, 1286,
	0, 1213, 414, 0, 415, 416, 417, 418, 419, 420,
	421, 1249, 1250, 1253, 510, 1292, 422, 423, 0, 424,
	425, 426, 427, 428, 0, 0, 0, 294, 429, 430,
	431, 0, 1291, 511, 432, 1258, 1259, 0, 1219, 0,
	433, 434, 1293, 1251, 1294, 435, 436, 437, 1295, 438,
	0, 0, 0, 439, 440, 441, 442, 443, 444, 0,
	445, 447, 446, 0, 448, 1287, 1296, 449, 450, 1297,
	0, 451, 452, 453, 454, 455, 456, 459, 1242, 1241,
	457, 458, 460, 461, 0, 462, 463, 465, 468, 464,
	466, 467, 469, 482, 483, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 485, 0, 484,
	1298, 486, 487, 488, 489, 490, 497, 499, 500, 495,
	496, 498, 501, 502, 504, 492, 493, 494, 1299, 503,
	491, 0, 295, 1300, 505, 506, 507, 508, 1204, 1252,
	509, 1266, 512, 513, 0, 0, 514, 0, 515, 0,
	0, 517, 518, 519, 0, 0, 520, 521, 716, 1301,
	522, 1302, 1281, 523, 524, 516, 525, 526, 527, 528,
	529, 530, 531, 532, 533, 0, 534, 535, 718, 536,
	537, 538, 719, 539, 540, 541, 1282, 542, 721, 543,
	544, 0, 545, 546, 547, 0, 548, 549, 550, 551,
	552, 553, 554, 555, 1262, 556, 557, 559, 558, 560,
	0, 561, 0, 562, 563, 564, 0, 0, 0, 0,
	0, 565, 566, 568, 0, 569, 570, 571, 572, 567,
	573, 574, 575, 576, 577, 0, 578, 579, 580, 1303,
	581, 582, 583, 584, 585, 1192, 586, 0, 587, 588,
	595, 596, 597, 589, 590, 591, 598, 599, 600, 601,
	602, 0, 604, 605, 603, 606, 607, 608, 1245, 609,
	610, 592, 593, 611, 612, 1304, 613, 614, 615, 616,
	617, 618, 619, 1260, 0, 620, 0, 621, 622, 623,
	624, 625, 627, 594, 628, 633, 634, 1307, 629, 630,
	631, 632, 1283, 636, 637, 638, 0, 639, 640, 0,
	635, 626, 0, 641, 642, 643, 644, 645, 646, 0,
	647, 648, 0, 649, 1272, 1273, 1274, 1275, 0, 659,
	0, 650, 651, 652, 653, 1284, 654, 1285, 1202, 655,
	656, 657, 658, 0, 660, 661, 0, 0, 662, 663,
	665, 667, 668, 664, 666, 669, 1246, 670, 0, 0,
	671, 672, 673, 733, 1269, 1306, 0, 675, 674, 676,
	677, 678, 736, 679, 680, 0, 0, 0, 0, 681,
	682, 737, 683, 684, 685, 0, 1631, 0, 1224, 1196,
	1197, 1198, 1194, 1195, 1207, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 296, 297, 299, 298, 300,
	301, 302, 303, 0, 304, 305, 1208, 0, 0, 0,
	1206, 1248, 1212, 0, 0, 306, 0, 307, 308, 1288,
	309, 310, 311, 312, 313, 314, 315, 687, 1261, 0,
	316, 1268, 317, 1267, 0, 1278, 318, 319, 320, 321,
	322, 323, 0, 1247, 0, 324, 1308, 1309, 694, 0,
	325, 326, 1254, 0, 1235, 0, 327, 328, 329, 330,
	331, 332, 333, 334, 0, 0, 336, 337, 338, 335,
	339, 0, 340, 0, 341, 342, 343, 344, 345, 346,
	0, 347, 348, 349, 1289, 350, 351, 352, 1238, 1236,
	1237, 1244, 1240, 1239, 1243, 353, 354, 355, 356, 357,
	1271, 358, 360, 1265, 1264, 0, 363, 359, 361, 0,
	364, 362, 365, 0, 366, 367, 368, 0, 0, 369,
	1256, 371, 0, 372, 373, 374, 0, 375, 376, 377,
	0, 378, 379, 698, 380, 381, 382, 384, 386, 383,
	385, 387, 388, 389, 390, 1279, 1280, 391, 1203, 293,
	0, 0, 0, 0, 0, 392, 393, 394, 1263, 0,
	0, 0, 395, 0, 396, 397, 398, 0, 399, 400,
	0, 1290, 401, 402, 403, 1276, 1277, 404, 405, 406,
	407, 408, 409, 410, 411, 412, 0, 413, 1286, 0,
	1213, 414, 0, 415, 416, 417, 418, 419, 420, 421,
	1249, 1250, 1253, 510, 1292, 422, 423, 0, 424, 425,
	426, 427, 428, 0, 0, 0, 294, 429, 430, 431,
	0, 1291, 511, 432, 1258, 1259, 0, 1219, 0, 433,
	434, 1293, 1251, 1294, 435, 436, 437, 1295, 438, 0,
	0, 0, 439, 440, 441, 442, 443, 444, 0, 445,
	447, 446, 0, 448, 1287, 1296, 449, 450, 1297, 0,
	451, 452, 453, 454, 455, 456, 459, 1242, 1241, 457,
	458, 460, 461, 0, 462, 463, 465, 468, 464, 466,
	467, 469, 482, 483, 470, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 485, 0, 484, 1298,
	486, 487, 488, 489, 490, 497, 499, 500, 495, 496,
	498, 501, 502, 504, 492, 493, 494, 1299, 503, 491,
	0, 295, 1300, 505, 506, 507, 508, 1204, 1252, 509,
	1266, 512, 513, 0, 0, 514, 0, 515, 0, 0,
	517, 518, 519, 0, 0, 520, 521, 716, 1301, 522,
	1302, 1281, 523, 524, 516, 525, 526, 527, 528, 529,
	530, 531, 532, 533, 0, 534, 535, 718, 536, 537,
	538, 719, 539, 540, 541, 1282, 542, 721, 543, 544,
	0, 545, 546, 547, 0, 548, 549, 550, 551, 552,
	553, 554, 555, 1262, 556, 557, 559, 558, 560, 0,
	561, 0, 562, 563, 564, 0, 0, 0, 0, 0,
	565, 566, 568, 0, 569, 570, 571, 572, 567, 573,
	574, 575, 576, 577, 0, 578, 579, 580, 1303, 581,
	582, 583, 584, 585, 1192, 586, 0, 587, 588, 595,
	596, 597, 589, 590, 591, 598, 599, 600, 601, 602,
	0, 604, 605, 603, 606, 607, 608, 1245, 609, 610,
	592, 593, 611, 612, 1304, 613, 614, 615, 616, 617,
	618, 619, 1260, 0, 620, 0, 621, 622, 623, 624,
	625, 627, 594, 628, 633, 634, 1307, 629, 630, 631,
	632, 1283, 636, 637, 638, 0, 639, 640, 0, 635,
	626, 0, 641, 642, 643, 644, 645, 646, 0, 647,
	648, 0, 649, 1272, 1273, 1274, 1275, 0, 659, 0,
	650, 651, 652, 653, 1284, 654, 1285, 1202, 655, 656,
	657, 658, 0, 660, 661, 0, 0, 662, 663, 665,
	667, 668, 664, 666, 669, 1246, 670, 0, 0, 671,
	672, 673, 733, 1269, 1306, 0, 675, 674, 676, 677,
	678, 736, 679, 680, 0, 0, 0, 0, 681, 682,
	737, 683, 684, 685, 0, 1168, 0, 1347, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 296, 297, 299, 298, 300, 301,
	302, 303, 0, 304, 305, 1208, 0, 0, 0, 1206,
	1248, 0, 0, 0, 306, 0, 307, 308, 1288, 309,
	310, 311, 312, 313, 314, 315, 687, 688, 0, 316,
	689, 317, 690, 0, 691, 318, 319, 320, 321, 322,
	323, 0, 1247, 0, 324, 692, 693, 694, 0, 325,
	326, 1254, 0, 1235, 0, 327, 328, 329, 330, 331,
	332, 333, 334, 0, 0, 336, 337, 338, 335, 339,
	0, 340, 0, 341, 342, 343, 344, 345, 346, 0,
	347, 348, 349, 1289, 350, 351, 352, 1238, 1236, 1237,
	1244, 1240, 1239, 1243, 353, 354, 355, 356, 357, 0,
	358, 360, 696, 697, 0, 363, 359, 361, 0, 364,
	362, 365, 0, 366, 367, 368, 0, 0, 369, 370,
	371, 0, 372, 373, 374, 0, 375, 376, 377, 0,
	378, 379, 698, 380, 381, 382, 384, 386, 383, 385,
	387, 388, 389, 390, 1279, 1280, 391, 0, 293, 0,
	0, 0, 0, 0, 392, 393, 394, 701, 0, 0,
	0, 395, 0, 396, 397, 398, 0, 399, 400, 0,
	1290, 401, 402, 403, 702, 703, 404, 405, 406, 407,
	408, 409, 410, 411, 412, 0, 413, 1286, 0, 705,
	414, 0, 415, 416, 417, 418, 419, 420, 421, 1249,
	1250, 1253, 510, 1292, 422, 423, 0, 424, 425, 426,
	427, 428, 0, 0, 0, 294, 429, 430, 431, 0,
	1291, 511, 432, 709, 710, 0, 711, 0, 433, 434,
	1293, 1251, 1294, 435, 436, 437, 1295, 438, 0, 0,
	0, 439, 440, 441, 442, 443, 444, 1333, 445, 447,
	446, 0, 448, 1287, 1296, 449, 450, 1297, 0, 451,
	452, 453, 454, 455, 456, 459, 1242, 1241, 457, 458,
	460, 461, 0, 462, 463, 465, 468, 464, 466, 467,
	469, 482, 483, 470, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 485, 0, 484, 1298, 486,
	487, 488, 489, 490, 497, 499, 500, 495, 496, 498,
	501, 502, 504, 492, 493, 494, 1299, 503, 491, 0,
	295, 1300, 505, 506, 507, 508, 0, 1252, 509, 715,
	512, 513, 0, 0, 514, 0, 515, 0, 1339, 517,
	518, 519, 0, 0, 520, 521, 716, 1301, 522, 1302,
	1281, 523, 524, 516, 525, 526, 527, 528, 529, 530,
	531, 532, 533, 0, 534, 535, 718, 536, 537, 538,
	719, 539, 540, 541, 1282, 542, 721, 543, 544, 0,
	545, 546, 547, 0, 548, 549, 550, 551, 552, 553,
	554, 555, 722, 556, 557, 559, 558, 560, 0, 561,
	0, 562, 563, 564, 0, 0, 0, 0, 0, 565,
	566, 568, 0, 569, 570, 571, 572, 567, 573, 574,
	575, 576, 577, 0, 578, 579, 580, 1303, 581, 582,
	583, 584, 585, 723, 1341, 0, 587, 588, 595, 596,
	597, 589, 590, 591, 598, 599, 600, 601, 602, 251,
	604, 605, 603, 606, 607, 608, 1245, 609, 610, 592,
	593, 611, 612, 1304, 613, 614, 615, 616, 617, 618,
	619, 724, 0, 620, 0, 621, 622, 623, 624, 625,
	627, 594, 628, 633, 634, 725, 629, 630, 631, 632,
	1283, 636, 637, 638, 0, 639, 640, 0, 635, 626,
	253, 641, 642, 643, 644, 645, 646, 0, 647, 648,
	0, 649, 727, 728, 729, 730, 0, 659, 0, 650,
	651, 652, 653, 1284, 654, 1285, 0, 655, 656, 657,
	658, 0, 660, 661, 0, 0, 662, 663, 665, 667,
	668, 664, 666, 669, 1246, 670, 0, 0, 671, 672,
	673, 1749, 734, 735, 0, 675, 674, 676, 677, 678,
	736, 679, 680, 0, 0, 0, 245, 681, 682, 737,
	683, 684, 685, 1347, 0, 246, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	296, 297, 299, 298, 300, 301, 302, 303, 0, 304,
	305, 0, 1337, 0, 2108, 0, 1248, 0, 0, 0,
	306, 0, 307, 308, 1288, 309, 310, 311, 312, 313,
	314, 315, 687, 688, 0, 316, 689, 317, 690, 0,
	691, 318, 319, 320, 321, 322, 323, 0, 1247, 0,
	324, 692, 693, 694, 0, 325, 326, 1254, 0, 1235,
	0, 327, 328, 329, 330, 331, 332, 333, 334, 0,
	0, 336, 337, 338, 335, 339, 0, 340, 0, 341,
	342, 343, 344, 345, 346, 0, 347, 348, 349, 1289,
	350, 351, 352, 1238, 1236, 1237, 1244, 1240, 1239, 1243,
	353, 354, 355, 356, 357, 0, 358, 360, 696, 697,
	0, 363, 359, 361, 0, 364, 362, 365, 0, 366,
	367, 368, 0, 0, 369, 370, 371, 0, 372, 373,
	374, 0, 375, 376, 377, 0, 378, 379, 698, 380,
	381, 382, 384, 386, 383, 385, 387, 388, 389, 390,
	1279, 1280, 391, 0, 293, 0, 0, 0, 0, 0,
	392, 393, 394, 701, 0, 0, 0, 395, 0, 396,
	397, 398, 0, 399, 400, 0, 1290, 401, 402, 403,
	702, 703, 404, 405, 406, 407, 408, 409, 410, 411,
	412, 0, 413, 1286, 0, 705, 414, 0, 415, 416,
	417, 418, 419, 420, 421, 1249, 1250, 1253, 510, 1292,
	422, 423, 0, 424, 425, 426, 427, 428, 0, 0,
	0, 294, 429, 430, 431, 0, 1291, 511, 432, 709,
	710, 0, 711, 0, 433, 434, 1293, 1251, 1294, 435,
	436, 437, 1295, 438, 0, 0, 0, 439, 440, 441,
	442, 443, 444, 1333, 445, 447, 446, 0, 448, 1287,
	1296, 449, 450, 1297, 0, 451, 452, 453, 454, 455,
	456, 459, 1242, 1241, 457, 458, 460, 461, 0, 462,
	463, 465, 468, 464, 466, 467, 469, 482, 483, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 485, 0, 484, 1298, 486, 487, 488, 489, 490,
	497, 499, 500, 495, 496, 498, 501, 502, 504, 492,
	493, 494, 1299, 503, 491, 0, 295, 1300, 505, 506,
	507, 508, 0, 1252, 509, 715, 512, 513, 0, 0,
	514, 0, 515, 0, 1339, 517, 518, 519, 0, 0,
	520, 521, 716, 1301, 522, 1302, 1281, 523, 524, 516,
	525, 526, 527, 528, 529, 530, 531, 532, 533, 0,
	534, 535, 718, 536, 537, 538, 719, 539, 540, 541,
	1282, 542, 721, 543, 544, 0, 545, 546, 547, 0,
	548, 549, 550, 551, 552, 553, 554, 555, 722, 556,
	557, 559, 558, 560, 0, 561, 0, 562, 563, 564,
	0, 0, 0, 0, 0, 565, 566, 568, 0, 569,
	570, 571, 572, 567, 573, 574, 575, 576, 577, 0,
	578, 579, 580, 1303, 581, 582, 583, 584, 585, 723,
	1341, 0, 587, 588, 595, 596, 597, 589, 590, 591,
	598, 599, 600, 601, 602, 251, 604, 605, 603, 606,
	607, 608, 1245, 609, 610, 592, 593, 611, 612, 1304,
	613, 614, 615, 616, 617, 618, 619, 724, 0, 620,
	0, 621, 622, 623, 624, 625, 627, 594, 628, 633,
	634, 725, 629, 630, 631, 632, 1283, 636, 637, 638,
	0, 639, 640, 0, 635, 626, 253, 641, 642, 643,
	644, 645, 646, 0, 647, 648, 0, 649, 727, 728,
	729, 730, 0, 659, 0, 650, 651, 652, 653, 1284,
	654, 1285, 0, 655, 656, 657, 658, 0, 660, 661,
	0, 0, 662, 663, 665, 667, 668, 664, 666, 669,
	1246, 670, 0, 0, 671, 672, 673, 1749, 734, 735,
	0, 675, 674, 676, 677, 678, 736, 679, 680, 0,
	0, 0, 245, 681, 682, 737, 683, 684, 685, 0,
	0, 246, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3561, 0, 1347, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1337, 0,
	2108, 296, 297, 299, 298, 300, 301, 302, 303, 0,
	304, 305, 0, 0, 0, 0, 0, 1248, 0, 0,
	0, 306, 0, 307, 308, 1288, 309, 310, 311, 312,
	313, 314, 315, 687, 688, 0, 316, 689, 317, 690,
	0, 691, 318, 319, 320, 321, 322, 323, 0, 1247,
	0, 324, 692, 693, 694, 0, 325, 326, 1254, 0,
	1235, 0, 327, 328, 329, 330, 331, 332, 333, 334,
	0, 0, 336, 337, 338, 335, 339, 0, 340, 0,
	341, 342, 343, 344, 345, 346, 0, 347, 348, 349,
	1289, 350, 351, 352, 1238, 1236, 1237, 1244, 1240, 1239,
	1243, 353, 354, 355, 356, 357, 0, 358, 360, 696,
	697, 0, 363, 359, 361, 0, 364, 362, 365, 0,
	366, 367, 368, 0, 0, 369, 370, 371, 0, 372,
	373, 374, 0, 375, 376, 377, 0, 378, 379, 698,
	380, 381, 382, 384, 386, 383, 385, 387, 388, 389,
	390, 1279, 1280, 391, 0, 293, 0, 0, 0, 0,
	0, 392, 393, 394, 701, 0, 0, 0, 395, 0,
	396, 397, 398, 0, 399, 400, 0, 1290, 401, 402,
	403, 702, 703, 404, 405, 406, 407, 408, 409, 410,
	411, 412, 0, 413, 1286, 0, 705, 414, 0, 415,
	416, 417, 418, 419, 420, 421, 1249, 1250, 1253, 510,
	1292, 422, 423, 0, 424, 425, 426, 427, 428, 0,
	0, 0, 294, 429, 430, 431, 0, 1291, 511, 432,
	709, 710, 0, 711, 0, 433, 434, 1293, 1251, 1294,
	435, 436, 437, 1295, 438, 0, 0, 0, 439, 440,
	441, 442, 443, 444, 1333, 445, 447, 446, 0, 448,
	1287, 1296, 449, 450, 1297, 0, 451, 452, 453, 454,
	455, 456, 459, 1242, 1241, 457, 458, 460, 461, 0,
	462, 463, 465, 468, 464, 466, 467, 469, 482, 483,
	470, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 485, 0, 484, 1298, 486, 487, 488, 489,
	490, 497, 499, 500, 495, 496, 498, 501, 502, 504,
	492, 493, 494, 1299, 503, 491, 0, 295, 1300, 505,
	506, 507, 508, 0, 1252, 509, 715, 512, 513, 0,
	0, 514, 0, 515, 0, 1339, 517, 518, 519, 0,
	0, 520, 521, 716, 1301, 522, 1302, 1281, 523, 524,
	516, 525, 526, 527, 528, 529, 530, 531, 532, 533,
	0, 534, 535, 718, 536, 537, 538, 719, 539, 540,
	541, 1282, 542, 721, 543, 544, 0, 545, 546, 547,
	0, 548, 549, 550, 551, 552, 553, 554, 555, 722,
	556, 557, 559, 558, 560, 0, 561, 0, 562, 563,
	564, 0, 0, 0, 0, 0, 565, 566, 568, 0,
	569, 570, 571, 572, 567, 573, 574, 575, 576, 577,
	0, 578, 579, 580, 1303, 581, 582, 583, 584, 585,
	723, 1341, 0, 587, 588, 595, 596, 597, 589, 590,
	591, 598, 599, 600, 601, 602, 0, 604, 605, 603,
	606, 607, 608, 1245, 609, 610, 592, 593, 611, 612,
	1304, 613, 614, 615, 616, 617, 618, 619, 724, 0,
	620, 0, 621, 622, 623, 624, 625, 627, 594, 628,
	633, 634, 725, 629, 630, 631, 632, 1283, 636, 637,
	638, 0, 639, 640, 0, 635, 626, 0, 641, 642,
	643, 644, 645, 646, 0, 647, 648, 0, 649, 727,
	728, 729, 730, 0, 659, 0, 650, 651, 652, 653,
	1284, 654, 1285, 0, 655, 656, 657, 658, 0, 660,
	661, 0, 0, 662, 663, 665, 667, 668, 664, 666,
	669, 1246, 670, 0, 0, 671, 672, 673, 733, 734,
	735, 0, 675, 674, 676, 677, 678, 736, 679, 680,
	0, 1329, 0, 1347, 681, 682, 737, 683, 684, 685,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	296, 297, 299, 298, 300, 301, 302, 303, 0, 304,
	305, 0, 0, 0, 0, 0, 1248, 0, 0, 1337,
	306, 1335, 307, 308, 1288, 309, 310, 311, 312, 313,
	314, 315, 687, 688, 0, 316, 689, 317, 690, 0,
	691, 318, 319, 320, 321, 322, 323, 0, 1247, 0,
	324, 692, 693, 694, 0, 325, 326, 1254, 0, 1235,
	0, 327, 328, 329, 330, 331, 332, 333, 334, 0,
	0, 336, 337, 338, 335, 339, 0, 340, 0, 341,
	342, 343, 344, 345, 346, 0, 347, 348, 349, 1289,
	350, 351, 352, 1238, 1236, 1237, 1244, 1240, 1239, 1243,
	353, 354, 355, 356, 357, 0, 358, 360, 696, 697,
	0, 363, 359, 361, 0, 364, 362, 365, 0, 366,
	367, 368, 0, 0, 369, 370, 371, 0, 372, 373,
	374, 0, 375, 376, 377, 0, 378, 379, 698, 380,
	381, 382, 384, 386, 383, 385, 387, 388, 389, 390,
	1279, 1280, 391, 0, 293, 0, 0, 0, 0, 0,
	392, 393, 394, 701, 0, 0, 0, 395, 0, 396,
	397, 398, 0, 399, 400, 0, 1290, 401, 402, 403,
	702, 703, 404, 405, 406, 407, 408, 409, 410, 411,
	412, 0, 413, 1286, 0, 705, 414, 0, 415, 416,
	417, 418, 419, 420, 421, 1249, 1250, 1253, 510, 1292,
	422, 423, 0, 424, 425, 426, 427, 428, 0, 0,
	0, 294, 429, 430, 431, 0, 1291, 511, 432, 709,
	710, 0, 711, 0, 433, 434, 1293, 1251, 1294, 435,
	436, 437, 1295, 438, 0, 0, 0, 439, 440, 441,
	442, 443, 444, 1333, 445, 447, 446, 0, 448, 1287,
	1296, 449, 450, 1297, 0, 451, 452, 453, 454, 455,
	456, 459, 1242, 1241, 457, 458, 460, 461, 0, 462,
	463, 465, 468, 464, 466, 467, 469, 482, 483, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 485, 0, 484, 1298, 486, 487, 488, 489, 490,
	497, 499, 500, 495, 496, 498, 501, 502, 504, 492,
	493, 494, 1299, 503, 491, 0, 295, 1300, 505, 506,
	507, 508, 0, 1252, 509, 715, 512, 513, 0, 0,
	514, 0, 515, 0, 1339, 517, 518, 519, 0, 0,
	520, 521, 716, 1301, 522, 1302, 1281, 523, 524, 516,
	525, 526, 527, 528, 529, 530, 531, 532, 533, 0,
	534, 535, 718, 536, 537, 538, 719, 539, 540, 541,
	1282, 542, 721, 543, 544, 0, 545, 546, 547, 0,
	548, 549, 550, 551, 552, 553, 554, 555, 722, 556,
	557, 559, 558, 560, 0, 561, 0, 562, 563, 564,
	0, 0, 0, 0, 0, 565, 566, 568, 0, 569,
	570, 571, 572, 567, 573, 574, 575, 576, 577, 0,
	578, 579, 580, 1303, 581, 582, 583, 584, 585, 723,
	1341, 0, 587, 588, 595, 596, 597, 589, 590, 591,
	598, 599, 600, 601, 602, 0, 604, 605, 603, 606,
	607, 608, 1245, 609, 610, 592, 593, 611, 612, 1304,
	613, 614, 615, 616, 617, 618, 619, 724, 0, 620,
	0, 621, 622, 623, 624, 625, 627, 594, 628, 633,
	634, 725, 629, 630, 631, 632, 1283, 636, 637, 638,
	0, 639, 640, 0, 635, 626, 0, 641, 642, 643,
	644, 645, 646, 0, 647, 648, 0, 649, 727, 728,
	729, 730, 0, 659, 0, 650, 651, 652, 653, 1284,
	654, 1285, 0, 655, 656, 657, 658, 0, 660, 661,
	0, 0, 662, 663, 665, 667, 668, 664, 666, 669,
	1246, 670, 0, 0, 671, 672, 673, 733, 734, 735,
	0, 675, 674, 676, 677, 678, 736, 679, 680, 0,
	0, 0, 1347, 681, 682, 737, 683, 684, 685, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 296,
	297, 299, 298, 300, 301, 302, 303, 0, 304, 305,
	0, 0, 0, 0, 0, 1248, 0, 0, 1337, 306,
	1335, 307, 308, 1288, 309, 310, 311, 312, 313, 314,
	315, 687, 688, 0, 316, 689, 317, 690, 0, 691,
	318, 319, 320, 321, 322, 323, 0, 1247, 0, 324,
	692, 693, 694, 0, 325, 326, 1254, 0, 1235, 0,
	327, 328, 329, 330, 331, 332, 333, 334, 0, 0,
	336, 337, 338, 335, 339, 0, 340, 0, 341, 342,
	343, 344, 345, 346, 0, 347, 348, 349, 1289, 350,
	351, 352, 1238, 1236, 1237, 1244, 1240, 1239, 1243, 353,
	354, 355, 356, 357, 0, 358, 360, 696, 697, 0,
	363, 359, 361, 0, 364, 362, 365, 0, 366, 367,
	368, 0, 0, 369, 370, 371, 0, 372, 373, 374,
	0, 375, 376, 377, 0, 378, 379, 698, 380, 381,
	382, 384, 386, 383, 385, 387, 388, 389, 390, 1279,
	1280, 391, 0, 293, 0, 0, 0, 0, 0, 392,
	393, 394, 701, 0, 0, 0, 395, 0, 396, 397,
	398, 0, 399, 400, 0, 1290, 401, 402, 403, 702,
	703, 404, 405, 406, 407, 408, 409, 410, 411, 412,
	0, 413, 1286, 0, 705, 414, 0, 415, 416, 417,
	418, 419, 420, 421, 1249, 1250, 1253, 510, 1292, 422,
	423, 0, 424, 425, 426, 427, 428, 0, 0, 0,
	294, 429, 430, 431, 0, 1291, 511, 432, 709, 710,
	0, 711, 0, 433, 434, 1293, 1251, 1294, 435, 436,
	437, 1295, 438, 0, 0, 0, 439, 440, 441, 442,
	443, 444, 1333, 445, 447, 446, 0, 448, 1287, 1296,
	449, 450, 1297, 0, 451, 452, 453, 454, 455, 456,
	459, 1242, 1241, 457, 458, 460, 461, 0, 462, 463,
	465, 468, 464, 466, 467, 469, 482, 483, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	485, 0, 484, 1298, 486, 487, 488, 489, 490, 497,
	499, 500, 495, 496, 498, 501, 502, 504, 492, 493,
	494, 1299, 503, 491, 0, 295, 1300, 505, 506, 507,
	508, 0, 1252, 509, 715, 512, 513, 0, 0, 514,
	0, 515, 0, 1339, 517, 518, 519, 0, 0, 520,
	521, 716, 1301, 522, 1302, 1281, 523, 524, 516, 525,
	526, 527, 528, 529, 530, 531, 532, 533, 0, 534,
	535, 718, 536, 537, 538, 719, 539, 540, 541, 1282,
	542, 721, 543, 544, 0, 545, 546, 547, 0, 548,
	549, 550, 551, 552, 553, 554, 555, 722, 556, 557,
	559, 558, 560, 0, 561, 0, 562, 563, 564, 0,
	0, 0, 0, 0, 565, 566, 568, 0, 569, 570,
	571, 572, 567, 573, 574, 575, 576, 577, 0, 578,
	579, 580, 1303, 581, 582, 583, 584, 585, 723, 1341,
	0, 587, 588, 595, 596, 597, 589, 590, 591, 598,
	599, 600, 601, 602, 0, 604, 605, 603, 606, 607,
	608, 1245, 609, 610, 592, 593, 611, 612, 1304, 613,
	614, 615, 616, 617, 618, 619, 724, 0, 620, 0,
	621, 622, 623, 624, 625, 627, 594, 628, 633, 634,
	725, 629, 630, 631, 632, 1283, 636, 637, 638, 0,
	639, 640, 0, 635, 626, 0, 641, 642, 643, 644,
	645, 646, 0, 647, 648, 0, 649, 727, 728, 729,
	730, 0, 659, 0, 650, 651, 652, 653, 1284, 654,
	1285, 0, 655, 656, 657, 658, 0, 660, 661, 0,
	0, 662, 663, 665, 667, 668, 664, 666, 669, 1246,
	670, 0, 0, 671, 672, 673, 733, 734, 735, 0,
	675, 674, 676, 677, 678, 736, 679, 680, 0, 0,
	0, 1347, 681, 682, 737, 683, 684, 685, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 296, 297,
	299, 298, 300, 301, 302, 303, 0, 304, 305, 0,
	0, 0, 0, 0, 1248, 0, 0, 1337, 306, 1335,
	307, 308, 1288, 309, 310, 311, 312, 313, 314, 315,
	687, 688, 0, 316, 689, 317, 690, 0, 691, 318,
	319, 320, 321, 322, 323, 0, 1247, 0, 324, 692,
	693, 694, 0, 325, 326, 1254, 0, 1235, 0, 327,
	328, 329, 330, 331, 332, 333, 334, 0, 0, 336,
	337, 338, 335, 339, 0, 340, 0, 341, 342, 343,
	344, 345, 346, 0, 347, 348, 349, 1289, 350, 351,
	352, 1238, 1236, 1237, 1244, 1240, 1239, 1243, 353, 354,
	355, 356, 357, 0, 358, 360, 696, 697, 0, 363,
	359, 361, 0, 364, 362, 365, 0, 366, 367, 368,
	0, 0, 369, 370, 371, 0, 372, 373, 374, 0,
	375, 376, 377, 0, 378, 379, 698, 380, 381, 382,
	384, 386, 383, 385, 387, 388, 389, 390, 1279, 1280,
	391, 0, 293, 0, 0, 0, 0, 0, 392, 393,
	394, 701, 0, 0, 0, 395, 0, 396, 397, 398,
	0, 399, 400, 0, 1290, 401, 402, 403, 702, 703,
	404, 405, 406, 407, 408, 409, 410, 411, 412, 0,
	413, 1286, 0, 705, 414, 0, 415, 416, 417, 418,
	419, 420, 421, 1249, 1250, 1253, 510, 1292, 422, 423,
	0, 424, 425, 426, 427, 428, 0, 0, 0, 294,
	429, 430, 431, 0, 1291, 511, 432, 709, 710, 0,
	711, 0, 433, 434, 1293, 1251, 1294, 435, 436, 437,
	1295, 438, 0, 0, 0, 439, 440, 441, 442, 443,
	444, 0, 445, 447, 446, 0, 448, 1287, 1296, 449,
	450, 1297, 0, 451, 452, 453, 454, 455, 456, 459,
	1242, 1241, 457, 458, 460, 461, 0, 462, 463, 465,
	468, 464, 466, 467, 469, 482, 483, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 485,
	0, 484, 1298, 486, 487, 488, 489, 490, 497, 499,
	500, 495, 496, 498, 501, 502, 504, 492, 493, 494,
	1299, 503, 491, 0, 295, 1300, 505, 506, 507, 508,
	0, 1252, 509, 715, 512, 513, 0, 0, 514, 0,
	515, 0, 0, 517, 518, 519, 0, 0, 520, 521,
	716, 1301, 522, 1302, 1281, 523, 524, 516, 525, 526,
	527, 528, 529, 530, 531, 532, 533, 0, 534, 535,
	718, 536, 537, 538, 719, 539, 540, 541, 1282, 542,
	721, 543, 544, 0, 545, 546, 547, 0, 548, 549,
	550, 551, 552, 553, 554, 555, 722, 556, 557, 559,
	558, 560, 0, 561, 0, 562, 563, 564, 0, 0,
	0, 0, 0, 565, 566, 568, 0, 569, 570, 571,
	572, 567, 573, 574, 575, 576, 577, 0, 578, 579,
	580, 1303, 581, 582, 583, 584, 585, 723, 586, 0,
	587, 588, 595, 596, 597, 589, 590, 591, 598, 599,
	600, 601, 602, 0, 604, 605, 603, 606, 607, 608,
	1245, 609, 610, 592, 593, 611, 612, 1304, 613, 614,
	615, 616, 617, 618, 619, 724, 0, 620, 0, 621,
	622, 623, 624, 625, 627, 594, 628, 633, 634, 725,
	629, 630, 631, 632, 1283, 636, 637, 638, 0, 639,
	640, 0, 635, 626, 0, 641, 642, 643, 644, 645,
	646, 0, 647, 648, 0, 649, 727, 728, 729, 730,
	0, 659, 0, 650, 651, 652, 653, 1284, 654, 1285,
	0, 655, 656, 657, 658, 0, 660, 661, 0, 0,
	662, 663, 665, 667, 668, 664, 666, 669, 1246, 670,
	0, 0, 671, 672, 673, 733, 734, 735, 0, 675,
	674, 676, 677, 678, 736, 679, 680, 0, 0, 0,
	1347, 681, 682, 737, 683, 684, 685, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 296, 297, 299,
	298, 300, 301, 302, 303, 0, 304, 305, 0, 0,
	0, 0, 0, 1248, 0, 0, 0, 306, 4496, 307,
	308, 1288, 309, 310, 311, 312, 313, 314, 315, 687,
	688, 0, 316, 689, 317, 690, 0, 691, 318, 319,
	320, 321, 322, 323, 0, 1247, 0, 324, 692, 693,
	694, 0, 325, 326, 1254, 0, 1235, 0, 327, 328,
	329, 330, 331, 332, 333, 334, 0, 0, 336, 337,
	338, 335, 339, 0, 340, 0, 341, 342, 343, 344,
	345, 346, 0, 347, 348, 349, 1289, 350, 351, 352,
	1238, 1236, 1237, 1244, 1240, 1239, 1243, 353, 354, 355,
	356, 357, 0, 358, 360, 696, 697, 0, 363, 359,
	361, 0, 364, 362, 365, 0, 366, 367, 368, 0,
	0, 369, 370, 371, 0, 372, 373, 374, 0, 375,
	376, 377, 0, 378, 379, 698, 380, 381, 382, 384,
	386, 383, 385, 387, 388, 389, 390, 1279, 1280, 391,
	0, 293, 0, 0, 0, 0, 0, 392, 393, 394,
	701, 0, 0, 0, 395, 0, 396, 397, 398, 0,
	399, 400, 0, 1290, 401, 402, 403, 702, 703, 404,
	405, 406, 407, 408, 409, 410, 411, 412, 0, 413,
	1286, 0, 705, 414, 0, 415, 416, 417, 418, 419,
	420, 421, 1249, 1250, 1253, 510, 1292, 422, 423, 0,
	424, 425, 426, 427, 428, 0, 0, 0, 294, 429,
	430, 431, 0, 1291, 511, 432, 709, 710, 0, 711,
	0, 433, 434, 1293, 1251, 1294, 435, 436, 437, 1295,
	438, 0, 0, 0, 439, 440, 441, 442, 443, 444,
	0, 445, 447, 446, 0, 448, 1287, 1296, 449, 450,
	1297, 0, 451, 452, 453, 454, 455, 456, 459, 1242,
	1241, 457, 458, 460, 461, 0, 462, 463, 465, 468,
	464, 466, 467, 469, 482, 483, 470, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 485, 0,
	484, 1298, 486, 487, 488, 489, 490, 497, 499, 500,
	495, 496, 498, 501, 502, 504, 492, 493, 494, 1299,
	503, 491, 0, 295, 1300, 505, 506, 507, 508, 0,
	1252, 509, 715, 512, 513, 0, 0, 514, 0, 515,
	0, 0, 517, 518, 519, 0, 0, 520, 521, 716,
	1301, 522, 1302, 1281, 523, 524, 516, 525, 526, 527,
	528, 529, 530, 531, 532, 533, 0, 534, 535, 718,
	536, 537, 538, 719, 539, 540, 541, 1282, 542, 721,
	543, 544, 0, 545, 546, 547, 0, 548, 549, 550,
	551, 552, 553, 554, 555, 722, 556, 557, 559, 558,
	560, 0, 561, 0, 562, 563, 564, 0, 0, 0,
	0, 0, 565, 566, 568, 0, 569, 570, 571, 572,
	567, 573, 574, 575, 576, 577, 0, 578, 579, 580,
	1303, 581, 582, 583, 584, 585, 723, 1341, 0, 587,
	588, 595, 596, 597, 589, 590, 591, 598, 599, 600,
	601, 602, 0, 604, 605, 603, 606, 607, 608, 1245,
	609, 610, 592, 593, 611, 612, 1304, 613, 614, 615,
	616, 617, 618, 619, 724, 0, 620, 0, 621, 622,
	623, 624, 625, 627, 594, 628, 633, 634, 725, 629,
	630, 631, 632, 1283, 636, 637, 638, 0, 639, 640,
	0, 635, 626, 0, 641, 642, 643, 644, 645, 646,
	0, 647, 648, 0, 649, 727, 728, 729, 730, 0,
	659, 0, 650, 651, 652, 653, 1284, 654, 1285, 0,
	655, 656, 657, 658, 0, 660, 661, 0, 0, 662,
	663, 665, 667, 668, 664, 666, 669, 1246, 670, 0,
	0, 671, 672, 673, 733, 734, 735, 0, 675, 674,
	676, 677, 678, 736, 679, 680, 290, 0, 0, 0,
	681, 682, 737, 683, 684, 685, 2742, 2743, 2744, 2761,
	2762, 2763, 0, 296, 297, 299, 298, 300, 301, 302,
	303, 0, 304, 305, 0, 0, 0, 2764, 0, 686,
	0, 0, 0, 306, 0, 307, 308, 2004, 309, 310,
	311, 312, 313, 314, 315, 687, 688, 0, 316, 689,
	317, 690, 0, 691, 318, 319, 320, 321, 322, 323,
	0, 0, 1989, 324, 692, 693, 694, 0, 325, 326,
	695, 0, 0, 0, 327, 328, 329, 330, 331, 332,
	333, 334, 2754, 0, 336, 337, 338, 335, 339, 0,
	340, 2750, 341, 342, 343, 344, 345, 346, 0, 347,
	348, 349, 0, 350, 351, 352, 0, 0, 0, 0,
	0, 0, 0, 353, 354, 355, 356, 357, 0, 358,
	360, 696, 697, 0, 363, 359, 361, 0, 364, 362,
	365, 0, 366, 367, 368, 0, 0, 369, 370, 371,
	0, 372, 373, 374, 0, 375, 376, 377, 0, 378,
	379, 698, 380, 381, 382, 384, 386, 383, 385, 387,
	388, 389, 390, 699, 700, 391, 0, 0, 0, 2755,
	2756, 2757, 2758, 392, 393, 394, 701, 0, 0, 2749,
	395, 0, 396, 397, 398, 0, 399, 400, 0, 0,
	401, 402, 403, 702, 703, 404, 405, 406, 407, 408,
	409, 410, 411, 412, 0, 413, 704, 0, 705, 414,
	0, 415, 416, 417, 418, 419, 420, 421, 706, 707,
	708, 510, 0, 422, 423, 0, 424, 425, 426, 427,
	428, 0, 0, 0, 0, 429, 430, 431, 0, 0,
	511, 432, 709, 710, 0, 711, 0, 433, 434, 0,
	712, 0, 435, 436, 437, 0, 438, 0, 2759, 2760,
	439, 440, 441, 442, 443, 444, 0, 445, 447, 446,
	0, 448, 713, 0, 449, 450, 0, 0, 451, 452,
	453, 454, 455, 456, 459, 0, 0, 457, 458, 460,
	461, 2752, 462, 463, 465, 468, 464, 466, 467, 469,
	482, 483, 470, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 485, 0, 484, 0, 486, 487,
	488, 489, 490, 497, 499, 500, 495, 496, 498, 501,
	502, 504, 492, 493, 494, 0, 503, 491, 0, 0,
	0, 505, 506, 507, 508, 0, 714, 509, 715, 512,
	513, 0, 0, 514, 0, 515, 0, 0, 517, 518,
	519, 0, 0, 520, 521, 716, 0, 522, 0, 717,
	523, 524, 516, 525, 526, 527, 528, 529, 530, 531,
	532, 533, 0, 534, 535, 718, 536, 537, 538, 719,
	539, 540, 541, 720, 542, 721, 543, 544, 0, 545,
	546, 547, 0, 548, 549, 550, 551, 552, 553, 554,
	555, 722, 556, 557, 559, 558, 560, 0, 561, 0,
	562, 563, 564, 0, 0, 0, 0, 0, 565, 566,
	568, 0, 569, 570, 571, 572, 567, 573, 574, 575,
	576, 577, 0, 578, 579, 580, 0, 581, 582, 583,
	584, 585, 723, 586, 2753, 587, 588, 595, 596, 597,
	589, 590, 591, 598, 599, 600, 601, 602, 0, 604,
	605, 603, 606, 607, 608, 0, 609, 610, 592, 593,
	611, 612, 0, 613, 614, 615, 616, 617, 618, 619,
	724, 0, 620, 0, 621, 622, 623, 624, 625, 627,
	594, 628, 633, 634, 725, 629, 630, 631, 632, 726,
	636, 637, 638, 0, 639, 640, 1988, 635, 626, 0,
	641, 642, 643, 644, 645, 646, 0, 647, 648, 0,
	649, 727, 728, 729, 730, 0, 659, 0, 650, 651,
	652, 653, 731, 654, 732, 0, 655, 656, 657, 658,
	0, 660, 661, 0, 0, 662, 663, 665, 667, 668,
	664, 666, 669, 0, 670, 0, 0, 671, 672, 673,
	733, 734, 735, 0, 675, 674, 676, 677, 678, 736,
	679, 680, 0, 0, 0, 0, 681, 682, 737, 683,
	684, 685, 0, 0, 0, 0, 0, 0, 0, 0,
	1168, 0, 1626, 2739, 2740, 2741, 2765, 2751, 2745, 0,
	2747, 2748, 2746, 2733, 2734, 2735, 2736, 2737, 2738, 296,
	297, 299, 298, 300, 301, 302, 303, 0, 304, 305,
	0, 0, 0, 0, 0, 686, 0, 0, 0, 306,
	0, 307, 308, 1288, 309, 310, 311, 312, 313, 314,
	315, 687, 688, 0, 316, 689, 317, 690, 0, 691,
	318, 319, 320, 321, 322, 323, 0, 0, 0, 324,
	692, 693, 694, 0, 325, 326, 695, 0, 1590, 0,
	327, 328, 329, 330, 331, 332, 333, 334, 0, 0,
	336, 337, 338, 335, 339, 0, 340, 0, 341, 342,
	343, 344, 345, 346, 0, 347, 348, 349, 1289, 350,
	351, 352, 0, 0, 0, 0, 0, 0, 0, 353,
	354, 355, 356, 357, 0, 358, 360, 696, 697, 0,
	363, 359, 361, 0, 364, 362, 365, 0, 366, 367,
	368, 0, 0, 369, 370, 371, 0, 372, 373, 374,
	0, 375, 376, 377, 0, 378, 379, 698, 380, 381,
	382, 384, 386, 383, 385, 387, 388, 389, 390, 699,
	700, 391, 0, 293, 0, 0, 0, 0, 0, 392,
	393, 394, 701, 0, 0, 0, 395, 0, 396, 397,
	398, 0, 399, 400, 0, 1290, 401, 402, 403, 702,
	703, 404, 405, 406, 407, 408, 409, 410, 411, 412,
	0, 413, 704, 0, 705, 414, 0, 415, 416, 417,
	418, 419, 420, 421, 706, 707, 708, 510, 1292, 422,
	423, 0, 424, 425, 426, 427, 428, 0, 0, 0,
	0, 429, 430, 431, 0, 1291, 511, 432, 709, 710,
	0, 711, 0, 433, 434, 1293, 712, 1294, 435, 436,
	437, 1295, 438, 0, 0, 0, 439, 440, 441, 442,
	443, 444, 0, 445, 447, 446, 0, 448, 713, 1296,
	449, 450, 1297, 0, 451, 452, 453, 454, 455, 456,
	459, 0, 0, 457, 458, 460, 461, 0, 462, 463,
	465, 468, 464, 466, 467, 469, 482, 483, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	485, 0, 484, 1298, 486, 487, 488, 489, 490, 497,
	499, 500, 495, 496, 498, 501, 502, 504, 492, 493,
	494, 1299, 503, 491, 0, 0, 1300, 505, 506, 507,
	508, 0, 714, 509, 715, 512, 513, 0, 0, 514,
	0, 515, 0, 0, 517, 518, 519, 0, 0, 520,
	521, 716, 1301, 522, 1302, 717, 523, 524, 516, 525,
	526, 527, 528, 529, 530, 531, 532, 533, 0, 534,
	535, 718, 536, 537, 538, 719, 539, 540, 541, 720,
	542, 721, 543, 544, 0, 545, 546, 547, 0, 548,
	549, 550, 551, 552, 553, 554, 555, 722, 556, 557,
	559, 558, 560, 0, 561, 0, 562, 563, 564, 0,
	0, 0, 0, 0, 565, 566, 568, 0, 569, 570,
	571, 572, 567, 573, 574, 575, 576, 577, 0, 578,
	579, 580, 1303, 581, 582, 583, 584, 585, 723, 586,
	0, 587, 588, 595, 596, 597, 589, 590, 591, 598,
	599, 600, 601, 602, 251, 604, 605, 603, 606, 607,
	608, 0, 609, 610, 592, 593, 611, 612, 1304, 613,
	614, 615, 616, 617, 618, 619, 724, 0, 620, 0,
	621, 622, 623, 624, 625, 627, 594, 628, 633, 634,
	725, 629, 630, 631, 632, 726, 636, 637, 638, 0,
	639, 640, 0, 635, 626, 253, 641, 642, 643, 644,
	645, 646, 0, 647, 648, 0, 649, 727, 728, 729,
	730, 0, 659, 0, 650, 651, 652, 653, 731, 654,
	732, 0, 655, 656, 657, 658, 0, 660, 661, 0,
	0, 662, 663, 665, 667, 668, 664, 666, 669, 0,
	670, 0, 0, 671, 672, 673, 1749, 734, 735, 0,
	675, 674, 676, 677, 678, 736, 679, 680, 0, 0,
	0, 245, 681, 682, 737, 683, 684, 685, 0, 1746,
	246, 1626, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 296, 297,
	299, 298, 300, 301, 302, 303, 0, 304, 305, 203,
	0, 0, 0, 0, 686, 0, 0, 0, 306, 0,
	307, 308, 1288, 309, 310, 311, 312, 313, 314, 315,
	687, 688, 0, 316, 689, 317, 690, 0, 691, 318,
	319, 320, 321, 322, 323, 0, 0, 0, 324, 692,
	693, 694, 0, 325, 326, 695, 0, 1590, 0, 327,
	328, 329, 330, 331, 332, 333, 334, 0, 0, 336,
	337, 338, 335, 339, 0, 340, 0, 341, 342, 343,
	344, 345, 346, 0, 347, 348, 349, 1289, 350, 351,
	352, 0, 0, 0, 0, 0, 0, 0, 353, 354,
	355, 356, 357, 0, 358, 360, 696, 697, 0, 363,
	359, 361, 0, 364, 362, 365, 0, 366, 367, 368,
	0, 0, 369, 370, 371, 0, 372, 373, 374, 0,
	375, 376, 377, 0, 378, 379, 698, 380, 381, 382,
	384, 386, 383, 385, 387, 388, 389, 390, 699, 700,
	391, 0, 293, 0, 0, 0, 0, 0, 392, 393,
	394, 701, 0, 0, 0, 395, 0, 396, 397, 398,
	0, 399, 400, 0, 1290, 401, 402, 403, 702, 703,
	404, 405, 406, 407, 408, 409, 410, 411, 412, 0,
	413, 704, 0, 705, 414, 0, 415, 416, 417, 418,
	419, 420, 421, 706, 707, 708, 510, 1292, 422, 423,
	0, 424, 425, 426, 427, 428, 0, 0, 0, 0,
	429, 430, 431, 0, 1291, 511, 432, 709, 710, 0,
	711, 0, 433, 434, 1293, 712, 1294, 435, 436, 437,
	1295, 438, 0, 0, 0, 439, 440, 441, 442, 443,
	444, 0, 445, 447, 446, 0, 448, 713, 1296, 449,
	450, 1297, 0, 451, 452, 453, 454, 455, 456, 459,
	0, 0, 457, 458, 460, 461, 0, 462, 463, 465,
	468, 464, 466, 467, 469, 482, 483, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 485,
	0, 484, 1298, 486, 487, 488, 489, 490, 497, 499,
	500, 495, 496, 498, 501, 502, 504, 492, 493, 494,
	1299, 503, 491, 0, 0, 1300, 505, 506, 507, 508,
	0, 714, 509, 715, 512, 513, 0, 0, 514, 0,
	515, 0, 0, 517, 518, 519, 0, 0, 520, 521,
	716, 1301, 522, 1302, 717, 523, 524, 516, 525, 526,
	527, 528, 529, 530, 531, 532, 533, 0, 534, 535,
	718, 536, 537, 538, 719, 539, 540, 541, 720, 542,
	721, 543, 544, 0, 545, 546, 547, 0, 548, 549,
	550, 551, 552, 553, 554, 555, 722, 556, 557, 559,
	558, 560, 0, 561, 0, 562, 563, 564, 0, 0,
	0, 0, 0, 565, 566, 568, 0, 569, 570, 571,
	572, 567, 573, 574, 575, 576, 577, 0, 578, 579,
	580, 1303, 581, 582, 583, 584, 585, 723, 586, 0,
	587, 588, 595, 596, 597, 589, 590, 591, 598, 599,
	600, 601, 602, 251, 604, 605, 603, 606, 607, 608,
	0, 609, 610, 592, 593, 611, 612, 1304, 613, 614,
	615, 616, 617, 618, 619, 724, 0, 620, 0, 621,
	622, 623, 624, 625, 627, 594, 628, 633, 634, 725,
	629, 630, 631, 632, 726, 636, 637, 638, 0, 639,
	640, 0, 635, 626, 253, 641, 642, 643, 644, 645,
	646, 0, 647, 648, 0, 649, 727, 728, 729, 730,
	0, 659, 0, 650, 651, 652, 653, 731, 654, 732,
	0, 655, 656, 657, 658, 0, 660, 661, 0, 0,
	662, 663, 665, 667, 668, 664, 666, 669, 0, 670,
	0, 0, 671, 672, 673, 1749, 734, 735, 0, 675,
	674, 676, 677, 678, 736, 679, 680, 0, 0, 0,
	245, 681, 682, 737, 683, 684, 685, 1626, 1625, 246,
	0, 0, 0, 1623, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 296, 297, 299, 298, 300, 301,
	302, 303, 0, 304, 305, 0, 0, 0, 203, 0,
	686, 0, 0, 0, 306, 0, 307, 308, 1288, 309,
	310, 311, 312, 313, 314, 315, 687, 688, 0, 316,
	689, 317, 690, 0, 691, 318, 319, 320, 321, 322,
	323, 0, 0, 0, 324, 692, 693, 694, 0, 325,
	326, 695, 0, 1590, 0, 327, 328, 329, 330, 331,
	332, 333, 334, 0, 0, 336, 337, 338, 335, 339,
	0, 340, 0, 341, 342, 343, 344, 345, 346, 0,
	347, 348, 349, 1289, 350, 351, 352, 0, 0, 0,
	0, 0, 0, 0, 353, 354, 355, 356, 357, 0,
	358, 360, 696, 697, 0, 363, 359, 361, 0, 364,
	362, 365, 0, 366, 367, 368, 0, 0, 369, 370,
	371, 0, 372, 373, 374, 0, 375, 376, 377, 0,
	378, 379, 698, 380, 381, 382, 384, 386, 383, 385,
	387, 388, 389, 390, 699, 700, 391, 0, 293, 0,
	0, 0, 0, 0, 392, 393, 394, 701, 0, 0,
	0, 395, 0, 396, 397, 398, 0, 399, 400, 0,
	1290, 401, 402, 403, 702, 703, 404, 405, 406, 407,
	408, 409, 410, 411, 412, 0, 413, 704, 0, 705,
	414, 0, 415, 416, 417, 418, 419, 420, 421, 706,
	707, 708, 510, 1292, 422, 423, 0, 424, 425, 426,
	427, 428, 0, 0, 0, 0, 429, 430, 431, 0,
	1291, 511, 432, 709, 710, 0, 711, 0, 433, 434,
	1293, 712, 1294, 435, 436, 437, 1295, 438, 0, 0,
	0, 439, 440, 441, 442, 443, 444, 0, 445, 447,
	446, 0, 448, 713, 1296, 449, 450, 1297, 0, 451,
	452, 453, 454, 455, 456, 459, 0, 0, 457, 458,
	460, 461, 0, 462, 463, 465, 468, 464, 466, 467,
	469, 482, 483, 470, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 485, 0, 484, 1298, 486,
	487, 488, 489, 490, 497, 499, 500, 495, 496, 498,
	501, 502, 504, 492, 493, 494, 1299, 503, 491, 0,
	0, 1300, 505, 506, 507, 508, 0, 714, 509, 715,
	512, 513, 0, 0, 514, 0, 515, 0, 0, 517,
	518, 519, 0, 0, 520, 521, 716, 1301, 522, 1302,
	717, 523, 524, 516, 525, 526, 527, 528, 529, 530,
	531, 532, 533, 0, 534, 535, 718, 536, 537, 538,
	719, 539, 540, 541, 720, 542, 721, 543, 544, 0,
	545, 546, 547, 0, 548, 549, 550, 551, 552, 553,
	554, 555, 722, 556, 557, 559, 558, 560, 0, 561,
	0, 562, 563, 564, 0, 0, 0, 0, 0, 565,
	566, 568, 0, 569, 570, 571, 572, 567, 573, 574,
	575, 576, 577, 0, 578, 579, 580, 1303, 581, 582,
	583, 584, 585, 723, 586, 0, 587, 588, 595, 596,
	597, 589, 590, 591, 598, 599, 600, 601, 602, 0,
	604, 605, 603, 606, 607, 608, 0, 609, 610, 592,
	593, 611, 612, 1304, 613, 614, 615, 616, 617, 618,
	619, 724, 0, 620, 0, 621, 622, 623, 624, 625,
	627, 594, 628, 633, 634, 725, 629, 630, 631, 632,
	726, 636, 637, 638, 0, 639, 640, 0, 635, 626,
	0, 641, 642, 643, 644, 645, 646, 0, 647, 648,
	0, 649, 727, 728, 729, 730, 0, 659, 0, 650,
	651, 652, 653, 731, 654, 732, 0, 655, 656, 657,
	658, 0, 660, 661, 0, 0, 662, 663, 665, 667,
	668, 664, 666, 669, 0, 670, 0, 0, 671, 672,
	673, 733, 734, 735, 0, 675, 674, 676, 677, 678,
	736, 679, 680, 0, 0, 0, 0, 681, 682, 737,
	683, 684, 685, 1626, 1625, 0, 0, 0, 0, 1623,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	296, 297, 299, 298, 300, 301, 302, 303, 0, 304,
	305, 0, 0, 0, 1773, 0, 686, 0, 0, 0,
	306, 0, 307, 308, 1288, 309, 310, 311, 312, 313,
	314, 315, 687, 688, 0, 316, 689, 317, 690, 0,
	691, 318, 319, 320, 321, 322, 323, 0, 0, 0,
	324, 692, 693, 694, 0, 325, 326, 695, 0, 1590,
	0, 327, 328, 329, 330, 331, 332, 333, 334, 0,
	0, 336, 337, 338, 335, 339, 0, 340, 0, 341,
	342, 343, 344, 345, 346, 0, 347, 348, 349, 1289,
	350, 351, 352, 0, 0, 0, 0, 0, 0, 0,
	353, 354, 355, 356, 357, 0, 358, 360, 696, 697,
	0, 363, 359, 361, 0, 364, 362, 365, 0, 366,
	367, 368, 0, 0, 369, 370, 371, 0, 372, 373,
	374, 0, 375, 376, 377, 0, 378, 379, 698, 380,
	381, 382, 384, 386, 383, 385, 387, 388, 389, 390,
	699, 700, 391, 0, 293, 0, 0, 0, 0, 0,
	392, 393, 394, 701, 0, 0, 0, 395, 0, 396,
	397, 398, 0, 399, 400, 0, 1290, 401, 402, 403,
	702, 703, 404, 405, 406, 407, 408, 409, 410, 411,
	412, 0, 413, 704, 0, 705, 414, 0, 415, 416,
	417, 418, 419, 420, 421, 706, 707, 708, 510, 1292,
	422, 423, 0, 424, 425, 426, 427, 428, 0, 0,
	0, 0, 429, 430, 431, 0, 1291, 511, 432, 709,
	710, 0, 711, 0, 433, 434, 1293, 712, 1294, 435,
	436, 437, 1295, 438, 0, 0, 0, 439, 440, 441,
	442, 443, 444, 0, 445, 447, 446, 0, 448, 713,
	1296, 449, 450, 1297, 0, 451, 452, 453, 454, 455,
	456, 459, 0, 0, 457, 458, 460, 461, 0, 462,
	463, 465, 468, 464, 466, 467, 469, 482, 483, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 485, 0, 484, 1298, 486, 487, 488, 489, 490,
	497, 499, 500, 495, 496, 498, 501, 502, 504, 492,
	493, 494, 1299, 503, 491, 0, 0, 1300, 505, 506,
	507, 508, 0, 714, 509, 715, 512, 513, 0, 0,
	514, 0, 515, 0, 0, 517, 518, 519, 0, 0,
	520, 521, 716, 1301, 522, 1302, 717, 523, 524, 516,
	525, 526, 527, 528, 529, 530, 531, 532, 533, 0,
	534, 535, 718, 536, 537, 538, 719, 539, 540, 541,
	720, 542, 721, 543, 544, 0, 545, 546, 547, 0,
	548, 549, 550, 551, 552, 553, 554, 555, 722, 556,
	557, 559, 558, 560, 0, 561, 0, 562, 563, 564,
	0, 0, 0, 0, 0, 565, 566, 568, 0, 569,
	570, 571, 572, 567, 573, 574, 575, 576, 577, 0,
	578, 579, 580, 1303, 581, 582, 583, 584, 585, 723,
	586, 0, 587, 588, 595, 596, 597, 589, 590, 591,
	598, 599, 600, 601, 602, 0, 604, 605, 603, 606,
	607, 608, 0, 609, 610, 592, 593, 611, 612, 1304,
	613, 614, 615, 616, 617, 618, 619, 724, 0, 620,
	0, 621, 622, 623, 624, 625, 627, 594, 628, 633,
	634, 725, 629, 630, 631, 632, 726, 636, 637, 638,
	0, 639, 640, 0, 635, 626, 0, 641, 642, 643,
	644, 645, 646, 0, 647, 648, 0, 649, 727, 728,
	729, 730, 0, 659, 0, 650, 651, 652, 653, 731,
	654, 732, 0, 655, 656, 657, 658, 0, 660, 661,
	0, 0, 662, 663, 665, 667, 668, 664, 666, 669,
	0, 670, 0, 0, 671, 672, 673, 733, 734, 735,
	0, 675, 674, 676, 677, 678, 736, 679, 680, 0,
	0, 0, 0, 681, 682, 737, 683, 684, 685, 1626,
	1625, 0, 0, 0, 0, 1623, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 296, 297, 299, 298,
	300, 301, 302, 303, 0, 304, 305, 0, 0, 0,
	3892, 0, 686, 0, 0, 0, 306, 0, 307, 308,
	1288, 309, 310, 311, 312, 313, 314, 315, 687, 688,
	0, 316, 689, 317, 690, 0, 691, 318, 319, 320,
	321, 322, 323, 0, 0, 0, 324, 692, 693, 694,
	0, 325, 326, 695, 0, 1590, 0, 327, 328, 329,
	330, 331, 332, 333, 334, 0, 0, 336, 337, 338,
	335, 339, 0, 340, 0, 341, 342, 343, 344, 345,
	346, 0, 347, 348, 349, 1289, 350, 351, 352, 0,
	0, 0, 0, 0, 0, 0, 353, 354, 355, 356,
	357, 0, 358, 360, 696, 697, 0, 363, 359, 361,
	0, 364, 362, 365, 0, 366, 367, 368, 0, 0,
	369, 370, 371, 0, 372, 373, 374, 0, 375, 376,
	377, 0, 378, 379, 698, 380, 381, 382, 384, 386,
	383, 385, 387, 388, 389, 390, 699, 700, 391, 0,
	293, 0, 0, 0, 0, 0, 392, 393, 394, 701,
	0, 0, 0, 395, 0, 396, 397, 398, 0, 399,
	400, 0, 1290, 401, 402, 403, 702, 703, 404, 405,
	406, 407, 408, 409, 410, 411, 412, 0, 413, 704,
	0, 705, 414, 0, 415, 416, 417, 418, 419, 420,
	421, 706, 707, 708, 510, 1292, 422, 423, 0, 424,
	425, 426, 427, 428, 0, 0, 0, 0, 429, 430,
	431, 0, 1291, 511, 432, 709, 710, 0, 711, 0,
	433, 434, 1293, 712, 1294, 435, 436, 437, 1295, 438,
	0, 0, 0, 439, 440, 441, 442, 443, 444, 0,
	445, 447, 446, 0, 448, 713, 1296, 449, 450, 1297,
	0, 451, 452, 453, 454, 455, 456, 459, 0, 0,
	457, 458, 460, 461, 0, 462, 463, 465, 468, 464,
	466, 467, 469, 482, 483, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 485, 0, 484,
	1298, 486, 487, 488, 489, 490, 497, 499, 500, 495,
	496, 498, 501, 502, 504, 492, 493, 494, 1299, 503,
	491, 0, 0, 1300, 505, 506, 507, 508, 0, 714,
	509, 715, 512, 513, 0, 0, 514, 0, 515, 0,
	0, 517, 518, 519, 0, 0, 520, 521, 716, 1301,
	522, 1302, 717, 523, 524, 516, 525, 526, 527, 528,
	529, 530, 531, 532, 533, 0, 534, 535, 718, 536,
	537, 538, 719, 539, 540, 541, 720, 542, 721, 543,
	544, 0, 545, 546, 547, 0, 548, 549, 550, 551,
	552, 553, 554, 555, 722, 556, 557, 559, 558, 560,
	0, 561, 0, 562, 563, 564, 0, 0, 0, 0,
	0, 565, 566, 568, 0, 569, 570, 571, 2503, 567,
	573, 574, 575, 576, 577, 0, 578, 579, 580, 1303,
	581, 582, 583, 584, 585, 723, 586, 0, 587, 588,
	595, 596, 597, 589, 590, 591, 598, 599, 600, 601,
	602, 0, 604, 605, 603, 606, 607, 608, 0, 609,
	610, 592, 593, 611, 612, 1304, 613, 614, 615, 616,
	617, 618, 619, 724, 0, 620, 0, 621, 622, 623,
	624, 625, 627, 594, 628, 633, 634, 725, 629, 630,
	631, 632, 726, 636, 637, 638, 0, 639, 640, 0,
	635, 626, 0, 641, 642, 643, 644, 645, 646, 0,
	647, 648, 0, 649, 727, 728, 729, 730, 0, 659,
	0, 650, 651, 652, 653, 731, 654, 732, 0, 655,
	656, 657, 658, 0, 660, 661, 0, 0, 662, 663,
	665, 667, 668, 664, 666, 669, 0, 670, 0, 0,
	671, 672, 673, 733, 734, 735, 0, 675, 674, 676,
	677, 678, 736, 679, 680, 0, 0, 0, 0, 681,
	682, 737, 683, 684, 685, 1626, 2412, 0, 0, 0,
	0, 2413, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 296, 297, 299, 298, 300, 301, 302, 303,
	0, 304, 305, 0, 0, 0, 1773, 0, 686, 0,
	0, 0, 306, 0, 307, 308, 1288, 309, 310, 311,
	312, 313, 314, 315, 687, 688, 0, 316, 689, 317,
	690, 0, 691, 318, 319, 320, 321, 322, 323, 0,
	0, 0, 324, 692, 693, 694, 0, 325, 326, 695,
	0, 1590, 0, 327, 328, 329, 330, 331, 332, 333,
	334, 0, 0, 336, 337, 338, 335, 339, 0, 340,
	0, 341, 342, 343, 344, 345, 346, 0, 347, 348,
	349, 1289, 350, 351, 352, 0, 0, 0, 0, 0,
	0, 0, 353, 354, 355, 356, 357, 0, 358, 360,
	696, 697, 0, 363, 359, 361, 0, 364, 362, 365,
	0, 366, 367, 368, 0, 0, 369, 370, 371, 0,
	372, 373, 374, 0, 375, 376, 377, 0, 378, 379,
	698, 380, 381, 382, 384, 386, 383, 385, 387, 388,
	389, 390, 699, 700, 391, 0, 293, 0, 0, 0,
	0, 0, 392, 393, 394, 701, 0, 0, 0, 395,
	0, 396, 397, 398, 0, 399, 400, 0, 1290, 401,
	402, 403, 702, 703, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 0, 413, 704, 0, 705, 414, 0,
	415, 416, 417, 418, 419, 420, 421, 706, 707, 708,
	510, 1292, 422, 423, 0, 424, 425, 426, 427, 428,
	0, 0, 0, 0, 429, 430, 431, 0, 1291, 511,
	432, 709, 710, 0, 711, 0, 433, 434, 1293, 712,
	1294, 435, 436, 437, 1295, 438, 0, 0, 0, 439,
	440, 441, 442, 443, 444, 0, 2411, 447, 446, 0,
	448, 713, 1296, 449, 450, 1297, 0, 451, 452, 453,
	454, 455, 456, 459, 0, 0, 457, 458, 460, 461,
	0, 462, 463, 465, 468, 464, 466, 467, 469, 482,
	483, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 485, 0, 484, 1298, 486, 487, 488,
	489, 490, 497, 499, 500, 495, 496, 498, 501, 502,
	504, 492, 493, 494, 1299, 503, 491, 0, 0, 1300,
	505, 506, 507, 508, 0, 714, 509, 715, 512, 513,
	0, 0, 514, 0, 515, 0, 0, 517, 518, 519,
	0, 0, 520, 521, 716, 1301, 522, 1302, 717, 523,
	524, 516, 525, 526, 527, 528, 529, 530, 531, 532,
	533, 0, 534, 535, 718, 536, 537, 538, 719, 539,
	540, 541, 720, 542, 721, 543, 544, 0, 545, 546,
	547, 0, 548, 549, 550, 551, 552, 553, 554, 555,
	722, 556, 557, 559, 558, 560, 0, 561, 0, 562,
	563, 564, 0, 0, 0, 0, 0, 565, 566, 568,
	0, 569, 570, 571, 572, 567, 573, 574, 575, 576,
	577, 0, 578, 579, 580, 1303, 581, 582, 583, 584,
	585, 723, 586, 0, 587, 588, 595, 596, 597, 589,
	590, 591, 598, 599, 600, 601, 602, 0, 604, 605,
	603, 606, 607, 608, 0, 609, 610, 592, 593, 611,
	612, 1304, 613, 614, 615, 616, 617, 618, 619, 724,
	0, 620, 0, 621, 622, 623, 624, 625, 627, 594,
	628, 633, 634, 725, 629, 630, 631, 632, 726, 636,
	637, 638, 0, 639, 640, 0, 635, 626, 0, 641,
	642, 643, 644, 645, 646, 0, 647, 648, 0, 649,
	727, 728, 729, 730, 0, 659, 0, 650, 651, 652,
	653, 731, 654, 732, 0, 655, 656, 657, 658, 0,
	660, 661, 0, 0, 662, 663, 665, 667, 668, 664,
	666, 669, 0, 670, 0, 0, 671, 672, 673, 733,
	734, 735, 0, 675, 674, 676, 677, 678, 736, 679,
	680, 0, 0, 0, 0, 681, 682, 737, 683, 684,
	685, 1626, 1625, 0, 0, 0, 0, 1623, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 296, 297,
	299, 298, 300, 301, 302, 303, 0, 304, 305, 0,
	0, 0, 1773, 0, 686, 0, 0, 0, 306, 0,
	307, 308, 1288, 309, 310, 311, 312, 313, 314, 315,
	687, 688, 0, 316, 689, 317, 690, 0, 691, 318,
	319, 320, 321, 322, 323, 0, 0, 0, 324, 692,
	693, 694, 0, 325, 326, 695, 0, 1590, 0, 327,
	328, 329, 330, 331, 332, 333, 334, 0, 0, 336,
	337, 338, 335, 339, 0, 340, 0, 341, 342, 343,
	344, 345, 346, 0, 347, 348, 349, 1289, 350, 351,
	352, 0, 0, 0, 0, 0, 0, 0, 353, 354,
	355, 356, 357, 0, 358, 360, 696, 697, 0, 363,
	359, 361, 0, 364, 362, 365, 0, 366, 367, 368,
	0, 0, 369, 370, 371, 0, 372, 373, 374, 0,
	375, 376, 377, 0, 378, 379, 698, 380, 381, 382,
	384, 386, 383, 385, 387, 388, 389, 390, 699, 700,
	391, 0, 293, 0, 0, 0, 0, 0, 392, 393,
	394, 701, 0, 0, 0, 395, 0, 396, 397, 398,
	0, 399, 400, 0, 1290, 401, 402, 403, 702, 703,
	404, 405, 406, 407, 408, 409, 410, 411, 412, 0,
	413, 704, 0, 705, 414, 0, 415, 416, 417, 418,
	419, 420, 421, 706, 707, 708, 510, 1292, 422, 423,
	0, 424, 425, 426, 427, 428, 0, 0, 0, 0,
	429, 430, 431, 0, 1291, 511, 432, 709, 710, 0,
	711, 0, 433, 434, 1293, 712, 1294, 435, 436, 437,
	1295, 438, 0, 0, 0, 439, 440, 441, 442, 443,
	444, 0, 445, 447, 446, 0, 448, 713, 1296, 449,
	450, 1297, 0, 451, 452, 453, 454, 455, 456, 459,
	0, 0, 457, 458, 460, 461, 0, 462, 463, 465,
	468, 464, 466, 467, 469, 482, 483, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 485,
	0, 484, 1298, 486, 487, 488, 489, 490, 497, 499,
	500, 495, 496, 498, 501, 502, 504, 492, 493, 494,
	1299, 503, 491, 0, 0, 1300, 505, 506, 507, 508,
	0, 714, 509, 715, 512, 513, 0, 0, 514, 0,
	515, 0, 0, 517, 518, 519, 0, 0, 520, 521,
	716, 1301, 522, 1302, 717, 523, 524, 516, 525, 526,
	527, 528, 529, 530, 531, 532, 533, 0, 534, 535,
	718, 536, 537, 538, 719, 539, 540, 541, 720, 542,
	721, 543, 544, 0, 545, 546, 547, 0, 548, 549,
	550, 551, 552, 553, 554, 555, 722, 556, 557, 559,
	558, 560, 0, 561, 0, 562, 563, 564, 0, 0,
	0, 0, 0, 565, 566, 568, 0, 569, 570, 571,
	572, 567, 573, 574, 575, 576, 577, 0, 578, 579,
	580, 1303, 581, 582, 583, 584, 585, 723, 586, 0,
	587, 588, 595, 596, 597, 589, 590, 591, 598, 599,
	600, 601, 602, 0, 604, 605, 603, 606, 607, 608,
	0, 609, 610, 592, 593, 611, 612, 1304, 613, 614,
	615, 616, 617, 618, 619, 724, 0, 620, 0, 621,
	622, 623, 624, 625, 627, 594, 628, 633, 634, 725,
	629, 630, 631, 632, 726, 636, 637, 638, 0, 639,
	640, 0, 635, 626, 0, 641, 642, 643, 644, 645,
	646, 0, 647, 648, 0, 649, 727, 728, 729, 730,
	0, 659, 0, 650, 651, 652, 653, 731, 654, 732,
	0, 655, 656, 657, 658, 0, 660, 661, 0, 0,
	662, 663, 665, 667, 668, 664, 666, 669, 0, 670,
	0, 0, 671, 672, 673, 733, 734, 735, 0, 675,
	674, 676, 677, 678, 736, 679, 680, 0, 1168, 0,
	290, 681, 682, 737, 683, 684, 685, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 296, 297, 299,
	298, 300, 301, 302, 303, 0, 304, 305, 0, 0,
	0, 0, 0, 686, 0, 0, 0, 306, 1755, 307,
	308, 0, 309, 310, 311, 312, 313, 314, 315, 687,
	688, 0, 316, 689, 317, 690, 0, 691, 318, 319,
	320, 321, 322, 323, 0, 0, 0, 324, 692, 693,
	694, 0, 325, 326, 695, 0, 0, 0, 327, 328,
	329, 330, 331, 332, 333, 334, 0, 0, 336, 337,
	338, 335, 339, 0, 340, 0, 341, 342, 343, 344,
	345, 346, 0, 347, 348, 349, 0, 350, 351, 352,
	0, 0, 0, 0, 0, 0, 0, 353, 354, 355,
	356, 357, 0, 358, 360, 696, 697, 0, 363, 359,
	361, 0, 364, 362, 365, 0, 366, 367, 368, 0,
	0, 369, 370, 371, 0, 372, 373, 374, 0, 375,
	376, 377, 0, 378, 379, 698, 380, 381, 382, 384,
	386, 383, 385, 387, 388, 389, 390, 699, 700, 391,
	0, 0, 0, 0, 0, 0, 0, 392, 393, 394,
	701, 0, 0, 0, 395, 0, 396, 397, 398, 0,
	399, 400, 0, 0, 401, 402, 403, 702, 703, 404,
	405, 406, 407, 408, 409, 410, 411, 412, 0, 413,
	704, 0, 705, 414, 0, 415, 416, 417, 418, 419,
	420, 421, 706, 707, 708, 510, 0, 422, 423, 0,
	424, 425, 426, 427, 428, 0, 0, 0, 0, 429,
	430, 431, 0, 0, 511, 432, 709, 710, 0, 711,
	0, 433, 434, 0, 712, 0, 435, 436, 437, 0,
	438, 0, 0, 0, 439, 440, 441, 442, 443, 444,
	0, 445, 447, 446, 0, 448, 713, 0, 449, 450,
	0, 0, 451, 452, 453, 454, 455, 456, 459, 0,
	0, 457, 458, 460, 461, 0, 462, 463, 465, 468,
	464, 466, 467, 469, 482, 483, 470, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 485, 0,
	484, 0, 486, 487, 488, 489, 490, 497, 499, 500,
	495, 496, 498, 501, 502, 504, 492, 493, 494, 0,
	503, 491, 0, 0, 0, 505, 506, 507, 508, 0,
	714, 509, 715, 512, 513, 0, 0, 514, 0, 515,
	0, 0, 517, 518, 519, 0, 0, 520, 521, 716,
	0, 522, 0, 717, 523, 524, 516, 525, 526, 527,
	528, 529, 530, 531, 532, 533, 0, 534, 535, 718,
	536, 537, 538, 719, 539, 540, 541, 720, 542, 721,
	543, 544, 0, 545, 546, 547, 0, 548, 549, 550,
	551, 552, 553, 554, 555, 722, 556, 557, 559, 558,
	560, 0, 561, 0, 562, 563, 564, 0, 0, 0,
	0, 0, 565, 566, 568, 0, 569, 570, 571, 572,
	567, 573, 574, 575, 576, 577, 0, 578, 579, 580,
	0, 581, 582, 583, 584, 585, 723, 586, 0, 587,
	588, 595, 596, 597, 589, 590, 591, 598, 599, 600,
	601, 602, 251, 604, 605, 603, 606, 607, 608, 0,
	609, 610, 592, 593, 611, 612, 0, 613, 614, 615,
	616, 617, 618, 619, 724, 0, 620, 0, 621, 622,
	623, 624, 625, 627, 594, 628, 633, 634, 725, 629,
	630, 631, 632, 726, 636, 637, 638, 0, 639, 640,
	0, 635, 626, 253, 641, 642, 643, 644, 645, 646,
	0, 647, 648, 0, 649, 727, 728, 729, 730, 0,
	659, 0, 650, 651, 652, 653, 731, 654, 732, 0,
	655, 656, 657, 658, 0, 660, 661, 0, 0, 662,
	663, 665, 667, 668, 664, 666, 669, 0, 670, 0,
	0, 671, 672, 673, 1749, 734, 735, 0, 675, 674,
	676, 677, 678, 736, 679, 680, 290, 0, 0, 245,
	681, 682, 737, 683, 684, 685, 0, 0, 246, 0,
	0, 0, 0, 296, 297, 299, 298, 300, 301, 302,
	303, 0, 304, 305, 0, 0, 0, 0, 0, 686,
	0, 0, 0, 306, 0, 307, 308, 203, 309, 310,
	311, 312, 313, 314, 315, 687, 688, 0, 316, 689,
	317, 690, 0, 691, 318, 319, 320, 321, 322, 323,
	0, 0, 0, 324, 692, 693, 694, 0, 325, 326,
	695, 0, 0, 0, 327, 328, 329, 330, 331, 332,
	333, 334, 0, 0, 336, 337, 338, 335, 339, 0,
	340, 0, 341, 342, 343, 344, 345, 346, 0, 347,
	348, 349, 0, 350, 351, 352, 0, 0, 0, 0,
	0, 0, 0, 353, 354, 355, 356, 357, 0, 358,
	360, 696, 697, 0, 363, 359, 361, 0, 364, 362,
	365, 0, 366, 367, 368, 0, 0, 369, 370, 371,
	0, 372, 373, 374, 0, 375, 376, 377, 0, 378,
	379, 698, 380, 381, 382, 384, 386, 383, 385, 387,
	388, 389, 390, 699, 700, 391, 0, 293, 0, 0,
	0, 0, 0, 392, 393, 394, 701, 0, 0, 0,
	395, 0, 396, 397, 398, 0, 399, 400, 0, 0,
	401, 402, 403, 702, 703, 404, 405, 406, 407, 408,
	409, 410, 411, 412, 0, 413, 704, 0, 705, 414,
	0, 415, 416, 417, 418, 419, 420, 421, 706, 707,
	708, 510, 0, 422, 423, 0, 424, 425, 426, 427,
	428, 0, 0, 0, 294, 429, 430, 431, 0, 0,
	511, 432, 709, 710, 0, 711, 0, 433, 434, 0,
	712, 0, 435, 436, 437, 0, 438, 0, 0, 0,
	439, 440, 441, 442, 443, 444, 0, 445, 447, 446,
	0, 448, 713, 0, 449, 450, 0, 0, 451, 452,
	453, 454, 455, 456, 459, 0, 0, 457, 458, 460,
	461, 0, 462, 463, 465, 468, 464, 466, 467, 469,
	482, 483, 470, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 485, 0, 484, 0, 486, 487,
	488, 489, 490, 497, 499, 500, 495, 496, 498, 501,
	502, 504, 492, 493, 494, 0, 503, 491, 0, 295,
	0, 505, 506, 507, 508, 0, 714, 509, 715, 512,
	513, 0, 0, 514, 0, 515, 0, 0, 517, 518,
	519, 0, 0, 520, 521, 716, 0, 522, 0, 717,
	523, 524, 516, 525, 526, 527, 528, 529, 530, 531,
	532, 533, 0, 534, 535, 718, 536, 537, 538, 719,
	539, 540, 541, 720, 542, 721, 543, 544, 0, 545,
	546, 547, 0, 548, 549, 550, 551, 552, 553, 554,
	555, 722, 556, 557, 559, 558, 560, 0, 561, 0,
	562, 563, 564, 0, 0, 0, 0, 0, 565, 566,
	568, 0, 569, 570, 571, 572, 567, 573, 574, 575,
	576, 577, 0, 578, 579, 580, 0, 581, 582, 583,
	584, 585, 723, 586, 0, 587, 588, 595, 596, 597,
	589, 590, 591, 598, 599, 600, 601, 602, 0, 604,
	605, 603, 606, 607, 608, 0, 609, 610, 592, 593,
	611, 612, 0, 613, 614, 615, 616, 617, 618, 619,
	724, 0, 620, 0, 621, 622, 623, 624, 625, 627,
	594, 628, 633, 634, 725, 629, 630, 631, 632, 726,
	636, 637, 638, 0, 639, 640, 0, 635, 626, 0,
	641, 642, 643, 644, 645, 646, 0, 647, 648, 0,
	649, 727, 728, 729, 730, 0, 659, 0, 650, 651,
	652, 653, 731, 654, 732, 0, 655, 656, 657, 658,
	0, 660, 661, 0, 0, 662, 663, 665, 667, 668,
	664, 666, 669, 0, 670, 0, 0, 671, 672, 673,
	733, 734, 735, 0, 675, 674, 676, 677, 678, 736,
	679, 680, 290, 3173, 0, 0, 681, 682, 737, 683,
	684, 685, 0, 0, 0, 0, 0, 0, 0, 296,
	297, 299, 298, 300, 301, 302, 303, 0, 304, 305,
	0, 0, 0, 0, 0, 686, 0, 0, 0, 306,
	0, 307, 308, 2122, 309, 310, 311, 312, 313, 314,
	315, 687, 688, 0, 316, 689, 317, 690, 0, 691,
	318, 319, 320, 321, 322, 323, 0, 0, 0, 324,
	692, 693, 694, 0, 325, 326, 695, 0, 0, 0,
	327, 328, 329, 330, 331, 332, 333, 334, 0, 0,
	336, 337, 338, 335, 339, 0, 340, 0, 341, 342,
	343, 344, 345, 346, 0, 347, 348, 349, 0, 350,
	351, 352, 0, 0, 0, 0, 0, 0, 0, 353,
	354, 355, 356, 357, 0, 358, 360, 696, 697, 0,
	363, 359, 361, 0, 364, 362, 365, 0, 366, 367,
	368, 0, 0, 369, 370, 371, 0, 372, 373, 374,
	0, 375, 376, 377, 0, 378, 379, 698, 380, 381,
	382, 384, 386, 383, 385, 387, 388, 389, 390, 699,
	700, 391, 0, 0, 0, 0, 0, 0, 0, 392,
	393, 394, 701, 0, 0, 0, 395, 0, 396, 397,
	398, 0, 399, 400, 0, 0, 401, 402, 403, 702,
	703, 404, 405, 406, 407, 408, 409, 410, 411, 412,
	0, 413, 704, 0, 705, 414, 0, 415, 416, 417,
	418, 419, 420, 421, 706, 707, 708, 510, 0, 422,
	423, 0, 424, 425, 426, 427, 428, 0, 0, 0,
	0, 429, 430, 431, 0, 0, 511, 432, 709, 710,
	0, 711, 0, 433, 434, 0, 712, 0, 435, 436,
	437, 0, 438, 0, 0, 0, 439, 440, 441, 442,
	443, 444, 0, 445, 447, 446, 0, 448, 713, 0,
	449, 450, 0, 0, 451, 452, 453, 454, 455, 456,
	459, 0, 0, 457, 458, 460, 461, 0, 462, 463,
	465, 468, 464, 466, 467, 469, 482, 483, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	485, 0, 484, 0, 486, 487, 488, 489, 490, 497,
	499, 500, 495, 496, 498, 501, 502, 504, 492, 493,
	494, 0, 503, 491, 0, 0, 0, 505, 506, 507,
	508, 0, 714, 509, 715, 512, 513, 0, 0, 514,
	0, 515, 0, 0, 517, 518, 519, 0, 0, 520,
	521, 716, 0, 522, 0, 717, 523, 524, 516, 525,
	526, 527, 528, 529, 530, 531, 532, 533, 0, 534,
	535, 718, 536, 537, 538, 719, 539, 540, 541, 720,
	542, 721, 543, 544, 0, 545, 546, 547, 0, 548,
	549, 550, 551, 552, 553, 554, 555, 722, 556, 557,
	559, 558, 560, 0, 561, 0, 562, 563, 564, 0,
	0, 0, 0, 0, 565, 566, 568, 0, 569, 570,
	571, 572, 567, 573, 574, 575, 576, 577, 0, 578,
	579, 580, 0, 581, 582, 583, 584, 585, 723, 586,
	0, 587, 588, 595, 596, 597, 589, 590, 591, 598,
	599, 600, 601, 602, 0, 604, 605, 603, 606, 607,
	608, 0, 609, 610, 592, 593, 611, 612, 0, 613,
	614, 615, 616, 617, 618, 619, 724, 0, 620, 0,
	621, 622, 623, 624, 625, 627, 594, 628, 633, 634,
	725, 629, 630, 631, 632, 726, 636, 637, 638, 0,
	639, 640, 0, 635, 626, 0, 641, 642, 643, 644,
	645, 646, 0, 647, 648, 0, 649, 727, 728, 729,
	730, 0, 659, 0, 650, 651, 652, 653, 731, 654,
	732, 0, 655, 656, 657, 658, 0, 660, 661, 0,
	0, 662, 663, 665, 667, 668, 664, 666, 669, 0,
	670, 0, 0, 671, 672, 673, 733, 734, 735, 0,
	675, 674, 676, 677, 678, 736, 679, 680, 290, 0,
	0, 0, 681, 682, 737, 683, 684, 685, 0, 0,
	0, 0, 0, 0, 0, 296, 297, 299, 298, 300,
	301, 302, 303, 0, 304, 305, 0, 0, 0, 0,
	0, 686, 0, 0, 0, 306, 0, 307, 308, 5254,
	309, 310, 311, 312, 313, 314, 315, 687, 688, 0,
	316, 689, 317, 690, 0, 691, 318, 319, 320, 321,
	322, 323, 0, 0, 0, 324, 692, 693, 694, 0,
	325, 326, 695, 0, 0, 0, 327, 328, 329, 330,
	331, 332, 333, 334, 0, 0, 336, 337, 338, 335,
	339, 0, 340, 0, 341, 342, 343, 344, 345, 346,
	0, 347, 348, 349, 0, 350, 351, 352, 0, 0,
	0, 0, 0, 0, 0, 353, 354, 355, 356, 357,
	0, 358, 360, 696, 697, 0, 363, 359, 361, 0,
	364, 362, 365, 0, 366, 367, 368, 0, 0, 369,
	370, 371, 0, 372, 373, 374, 0, 375, 376, 377,
	0, 378, 379, 698, 380, 381, 382, 384, 386, 383,
	385, 387, 388, 389, 390, 699, 700, 391, 0, 293,
	0, 0, 0, 0, 0, 392, 393, 394, 701, 0,
	0, 0, 395, 0, 396, 397, 398, 0, 399, 400,
	0, 0, 401, 402, 403, 702, 703, 404, 405, 406,
	407, 408, 409, 410, 411, 412, 0, 413, 704, 0,
	705, 414, 0, 415, 416, 417, 418, 419, 420, 421,
	706, 707, 708, 510, 0, 422, 423, 0, 424, 425,
	426, 427, 428, 0, 0, 0, 294, 429, 430, 431,
	0, 0, 511, 432, 709, 710, 0, 711, 0, 433,
	434, 0, 712, 0, 435, 436, 437, 0, 438, 0,
	0, 0, 439, 440, 441, 442, 443, 444, 0, 445,
	447, 446, 0, 448, 713, 0, 449, 450, 0, 0,
	451, 452, 453, 454, 455, 456, 459, 0, 0, 457,
	458, 460, 461, 0, 462, 463, 465, 468, 464, 466,
	467, 469, 482, 483, 470, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 485, 0, 484, 0,
	486, 487, 488, 489, 490, 497, 499, 500, 495, 496,
	498, 501, 502, 504, 492, 493, 494, 0, 503, 491,
	0, 295, 0, 505, 506, 507, 508, 0, 714, 509,
	715, 512, 513, 0, 0, 514, 0, 515, 0, 0,
	517, 518, 519, 0, 0, 520, 521, 716, 0, 522,
	0, 717, 523, 524, 516, 525, 526, 527, 528, 529,
	530, 531, 532, 533, 0, 534, 535, 718, 536, 537,
	538, 719, 539, 540, 541, 720, 542, 721, 543, 544,
	0, 545, 546, 547, 0, 548, 549, 550, 551, 552,
	553, 554, 555, 722, 556, 557, 559, 558, 560, 0,
	561, 0, 562, 563, 564, 0, 0, 0, 0, 0,
	565, 566, 568, 0, 569, 570, 571, 572, 567, 573,
	574, 575, 576, 577, 0, 578, 579, 580, 0, 581,
	582, 583, 584, 585, 723, 586, 0, 587, 588, 595,
	596, 597, 589, 590, 591, 598, 599, 600, 601, 602,
	0, 604, 605, 603, 606, 607, 608, 0, 609, 610,
	592, 593, 611, 612, 0, 613, 614, 615, 616, 617,
	618, 619, 724, 0, 620, 0, 621, 622, 623, 624,
	625, 627, 594, 628, 633, 634, 725, 629, 630, 631,
	632, 726, 636, 637, 638, 0, 639, 640, 0, 635,
	626, 0, 641, 642, 643, 644, 645, 646, 0, 647,
	648, 0, 649, 727, 728, 729, 730, 0, 659, 0,
	650, 651, 652, 653, 731, 654, 732, 0, 655, 656,
	657, 658, 0, 660, 661, 0, 0, 662, 663, 665,
	667, 668, 664, 666, 669, 0, 670, 0, 0, 671,
	672, 673, 733, 734, 735, 0, 675, 674, 676, 677,
	678, 736, 679, 680, 0, 290, 0, 0, 681, 682,
	737, 683, 684, 685, 0, 0, 0, 0, 0, 0,
	0, 0, 296, 297, 299, 298, 300, 301, 302, 303,
	0, 304, 305, 0, 0, 0, 0, 0, 686, 0,
	0, 0, 306, 3842, 307, 308, 0, 309, 310, 311,
	312, 313, 314, 315, 687, 688, 0, 316, 689, 317,
	690, 0, 691, 318, 319, 320, 321, 322, 323, 0,
	0, 0, 324, 692, 693, 694, 0, 325, 326, 695,
	0, 0, 0, 327, 328, 329, 330, 331, 332, 333,
	334, 0, 0, 336, 337, 338, 335, 339, 0, 340,
	0, 341, 342, 343, 344, 345, 346, 0, 347, 348,
	349, 0, 350, 351, 352, 0, 0, 0, 0, 0,
	0, 0, 353, 354, 355, 356, 357, 0, 358, 360,
	696, 697, 0, 363, 359, 361, 0, 364, 362, 365,
	0, 366, 367, 368, 0, 0, 369, 370, 371, 0,
	372, 373, 374, 0, 375, 376, 377, 0, 378, 379,
	698, 380, 381, 382, 384, 386, 383, 385, 387, 388,
	389, 390, 699, 700, 391, 0, 293, 0, 0, 0,
	0, 0, 392, 393, 394, 701, 0, 0, 0, 395,
	0, 396, 397, 398, 0, 399, 400, 0, 0, 401,
	402, 403, 702, 703, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 0, 413, 704, 0, 705, 414, 0,
	415, 416, 417, 418, 419, 420, 421, 706, 707, 708,
	510, 0, 422, 423, 0, 424, 425, 426, 427, 428,
	0, 0, 0, 294, 429, 430, 431, 0, 0, 511,
	432, 709, 710, 0, 711, 0, 433, 434, 0, 712,
	0, 435, 436, 437, 0, 438, 0, 0, 0, 439,
	440, 441, 442, 443, 444, 0, 445, 447, 446, 0,
	448, 713, 0, 449, 450, 0, 0, 451, 452, 453,
	454, 455, 456, 459, 0, 0, 457, 458, 460, 461,
	0, 462, 463, 465, 468, 464, 466, 467, 469, 482,
	483, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 485, 0, 484, 0, 486, 487, 488,
	489, 490, 497, 499, 500, 495, 496, 498, 501, 502,
	504, 492, 493, 494, 0, 503, 491, 0, 295, 0,
	505, 506, 507, 508, 0, 714, 509, 715, 512, 513,
	0, 0, 514, 0, 515, 0, 0, 517, 518, 519,
	0, 0, 520, 521, 716, 0, 522, 0, 717, 523,
	524, 516, 525, 526, 527, 528, 529, 530, 531, 532,
	533, 0, 534, 535, 718, 536, 537, 538, 719, 539,
	540, 541, 720, 542, 721, 543, 544, 0, 545, 546,
	547, 0, 548, 549, 550, 551, 552, 553, 554, 555,
	722, 556, 557, 559, 558, 560, 0, 561, 0, 562,
	563, 564, 0, 0, 0, 0, 0, 565, 566, 568,
	0, 569, 570, 571, 572, 567, 573, 574, 575, 576,
	577, 0, 578, 579, 580, 0, 581, 582, 583, 584,
	585, 723, 586, 0, 587, 588, 595, 596, 597, 589,
	590, 591, 598, 599, 600, 601, 602, 0, 604, 605,
	603, 606, 607, 608, 0, 609, 610, 592, 593, 611,
	612, 0, 613, 614, 615, 616, 617, 618, 619, 724,
	0, 620, 0, 621, 622, 623, 624, 625, 627, 594,
	628, 633, 634, 725, 629, 630, 631, 632, 726, 636,
	637, 638, 0, 639, 640, 0, 635, 626, 0, 641,
	642, 643, 644, 645, 646, 0, 647, 648, 0, 649,
	727, 728, 729, 730, 0, 659, 0, 650, 651, 652,
	653, 731, 654, 732, 0, 655, 656, 657, 658, 0,
	660, 661, 0, 0, 662, 663, 665, 667, 668, 664,
	666, 669, 0, 670, 0, 0, 671, 672, 673, 733,
	734, 735, 0, 675, 674, 676, 677, 678, 736, 679,
	680, 0, 290, 0, 0, 681, 682, 737, 683, 684,
	685, 0, 0, 0, 0, 0, 0, 0, 0, 296,
	297, 299, 298, 300, 301, 302, 303, 0, 304, 305,
	0, 0, 0, 0, 0, 686, 0, 0, 0, 306,
	1743, 307, 308, 0, 309, 310, 311, 312, 313, 314,
	315, 687, 688, 0, 316, 689, 317, 690, 0, 691,
	318, 319, 320, 321, 322, 323, 0, 0, 0, 324,
	692, 693, 694, 0, 325, 326, 695, 0, 0, 0,
	327, 328, 329, 330, 331, 332, 333, 334, 0, 0,
	336, 337, 338, 335, 339, 0, 340, 0, 341, 342,
	343, 344, 345, 346, 0, 347, 348, 349, 0, 350,
	351, 352, 0, 0, 0, 0, 0, 0, 0, 353,
	354, 355, 356, 357, 0, 358, 360, 696, 697, 0,
	363, 359, 361, 0, 364, 362, 365, 0, 366, 367,
	368, 0, 0, 369, 370, 371, 0, 372, 373, 374,
	0, 375, 376, 377, 0, 378, 379, 698, 380, 381,
	382, 384, 386, 383, 385, 387, 388, 389, 390, 699,
	700, 391, 0, 0, 0, 0, 0, 0, 0, 392,
	393, 394, 701, 0, 0, 0, 395, 0, 396, 397,
	398, 0, 399, 400, 0, 0, 401, 402, 403, 702,
	703, 404, 405, 406, 407, 408, 409, 410, 411, 412,
	0, 413, 704, 0, 705, 414, 0, 415, 416, 417,
	418, 419, 420, 421, 706, 707, 708, 510, 0, 422,
	423, 0, 424, 425, 426, 427, 428, 0, 0, 0,
	0, 429, 430, 431, 0, 0, 511, 432, 709, 710,
	0, 711, 0, 433, 434, 0, 712, 0, 435, 436,
	437, 0, 438, 0, 0, 0, 439, 440, 441, 442,
	443, 444, 0, 445, 447, 446, 0, 448, 713, 0,
	449, 450, 0, 0, 451, 452, 453, 454, 455, 456,
	459, 0, 0, 457, 458, 460, 461, 0, 462, 463,
	465, 468, 464, 466, 467, 469, 482, 483, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	485, 0, 484, 0, 486, 487, 488, 489, 490, 497,
	499, 500, 495, 496, 498, 501, 502, 504, 492, 493,
	494, 0, 503, 491, 0, 0, 0, 505, 506, 507,
	508, 0, 714, 509, 715, 512, 513, 0, 0, 514,
	0, 515, 0, 0, 517, 518, 519, 0, 0, 520,
	521, 716, 0, 522, 0, 717, 523, 524, 516, 525,
	526, 527, 528, 529, 530, 531, 532, 533, 0, 534,
	535, 718, 536, 537, 538, 719, 539, 540, 541, 720,
	542, 721, 543, 544, 0, 545, 546, 547, 0, 548,
	549, 550, 551, 552, 553, 554, 555, 722, 556, 557,
	559, 558, 560, 0, 561, 0, 562, 563, 564, 0,
	0, 0, 0, 0, 565, 566, 568, 0, 569, 570,
	571, 572, 567, 573, 574, 575, 576, 577, 0, 578,
	579, 580, 0, 581, 582, 583, 584, 585, 723, 586,
	0, 587, 588, 595, 596, 597, 589, 590, 591, 598,
	599, 600, 601, 602, 0, 604, 605, 603, 606, 607,
	608, 0, 609, 610, 592, 593, 611, 612, 0, 613,
	614, 615, 616, 617, 618, 619, 724, 0, 620, 0,
	621, 622, 623, 624, 625, 627, 594, 628, 633, 634,
	725, 629, 630, 631, 632, 726, 636, 637, 638, 0,
	639, 640, 0, 635, 626, 0, 641, 642, 643, 644,
	645, 646, 0, 647, 648, 0, 649, 727, 728, 729,
	730, 0, 659, 0, 650, 651, 652, 653, 731, 654,
	732, 0, 655, 656, 657, 658, 0, 660, 661, 0,
	0, 662, 663, 665, 667, 668, 664, 666, 669, 0,
	670, 0, 0, 671, 672, 673, 733, 734, 735, 0,
	675, 674, 676, 677, 678, 736, 679, 680, 0, 0,
	0, 1347, 681, 682, 737, 683, 684, 685, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 296, 297,
	299, 298, 300, 301, 302, 303, 0, 304, 305, 0,
	0, 0, 0, 0, 1248, 0, 0, 0, 306, 3295,
	307, 308, 1288, 309, 310, 311, 312, 313, 314, 315,
	687, 688, 0, 316, 689, 317, 690, 0, 691, 318,
	319, 320, 321, 322, 323, 0, 1247, 0, 324, 692,
	693, 694, 0, 325, 326, 1254, 0, 1235, 0, 327,
	328, 329, 330, 331, 332, 333, 334, 0, 0, 336,
	337, 338, 335, 339, 0, 340, 0, 341, 342, 343,
	344, 345, 346, 0, 347, 348, 349, 1289, 350, 351,
	352, 1238, 1236, 1237, 1244, 1240, 1239, 1243, 353, 354,
	355, 356, 357, 0, 358, 360, 696, 697, 0, 363,
	359, 361, 0, 364, 362, 365, 0, 366, 367, 368,
	0, 0, 369, 370, 371, 0, 372, 373, 374, 0,
	375, 376, 377, 0, 378, 379, 698, 380, 381, 382,
	384, 386, 383, 385, 387, 388, 389, 390, 1279, 1280,
	391, 0, 293, 0, 0, 0, 0, 0, 392, 393,
	394, 701, 0, 0, 0, 395, 0, 396, 397, 398,
	0, 399, 400, 0, 1290, 401, 402, 403, 702, 703,
	404, 405, 406, 407, 408, 409, 410, 411, 412, 0,
	413, 1286, 0, 705, 414, 0, 415, 416, 417, 418,
	419, 420, 421, 1249, 1250, 1253, 510, 1292, 422, 423,
	0, 424, 425, 426, 427, 428, 0, 0, 0, 294,
	429, 430, 431, 0, 1291, 511, 432, 709, 710, 0,
	711, 0, 433, 434, 1293, 1251, 1294, 435, 436, 437,
	1295, 438, 0, 0, 0, 439, 440, 441, 442, 443,
	444, 0, 445, 447, 446, 0, 448, 1287, 1296, 449,
	450, 1297, 0, 451, 452, 453, 454, 455, 456, 459,
	1242, 1241, 457, 458, 460, 461, 0, 462, 463, 465,
	468, 464, 466, 467, 469, 482, 483, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 485,
	0, 484, 1298, 486, 487, 488, 489, 490, 497, 499,
	500, 495, 496, 498, 501, 502, 504, 492, 493, 494,
	1299, 503, 491, 0, 295, 1300, 505, 506, 507, 508,
	0, 1252, 509, 715, 512, 513, 0, 0, 514, 0,
	515, 0, 0, 517, 518, 519, 0, 0, 520, 521,
	716, 1301, 522, 1302, 1281, 523, 524, 516, 525, 526,
	527, 528, 529, 530, 531, 532, 533, 0, 534, 535,
	718, 536, 537, 538, 719, 539, 540, 541, 1282, 542,
	721, 543, 544, 0, 545, 546, 547, 0, 548, 549,
	550, 551, 552, 553, 554, 555, 722, 556, 557, 559,
	558, 560, 0, 561, 0, 562, 563, 564, 0, 0,
	0, 0, 0, 565, 566, 568, 0, 569, 570, 571,
	572, 567, 573, 574, 575, 576, 577, 0, 578, 579,
	580, 1303, 581, 582, 583, 584, 585, 723, 586, 0,
	587, 588, 595, 596, 597, 589, 590, 591, 598, 599,
	600, 601, 602, 0, 604, 605, 603, 606, 607, 608,
	1245, 609, 610, 592, 593, 611, 612, 1304, 613, 614,
	615, 616, 617, 618, 619, 724, 0, 620, 0, 621,
	622, 623, 624, 625, 627, 594, 628, 633, 634, 725,
	629, 630, 631, 632, 1283, 636, 637, 638, 0, 639,
	640, 0, 635, 626, 0, 641, 642, 643, 644, 645,
	646, 0, 647, 648, 0, 649, 727, 728, 729, 730,
	0, 659, 0, 650, 651, 652, 653, 1284, 654, 1285,
	0, 655, 656, 657, 658, 0, 660, 661, 0, 0,
	662, 663, 665, 667, 668, 664, 666, 669, 1246, 670,
	0, 0, 671, 672, 673, 733, 734, 735, 0, 675,
	674, 676, 677, 678, 736, 679, 680, 290, 0, 0,
	0, 681, 682, 737, 683, 684, 685, 0, 0, 0,
	0, 0, 0, 0, 296, 297, 299, 298, 300, 301,
	302, 303, 0, 304, 305, 0, 0, 0, 0, 0,
	686, 0, 0, 0, 306, 0, 307, 308, 0, 309,
	310, 311, 312, 313, 314, 315, 687, 688, 0, 316,
	689, 317, 690, 0, 691, 318, 319, 320, 321, 322,
	323, 0, 0, 0, 324, 692, 693, 694, 0, 325,
	326, 695, 0, 0, 0, 327, 328, 329, 330, 331,
	332, 333, 334, 0, 0, 336, 337, 338, 335, 339,
	0, 340, 0, 341, 342, 343, 344, 345, 346, 0,
	347, 348, 349, 0, 350, 351, 352, 0, 0, 0,
	0, 0, 0, 0, 353, 354, 355, 356, 357, 0,
	358, 360, 696, 697, 0, 363, 359, 361, 0, 364,
	362, 365, 0, 366, 367, 368, 0, 0, 369, 370,
	371, 0, 372, 373, 374, 0, 375, 376, 377, 0,
	378, 379, 698, 380, 381, 382, 384, 386, 383, 385,
	387, 388, 389, 390, 699, 700, 391, 0, 0, 0,
	0, 0, 0, 0, 392, 393, 394, 701, 0, 0,
	0, 395, 0, 396, 397, 398, 0, 399, 400, 0,
	0, 401, 402, 403, 702, 703, 404, 405, 406, 407,
	408, 409, 410, 411, 412, 0, 413, 704, 0, 705,
	414, 0, 415, 416, 417, 418, 419, 420, 421, 706,
	707, 708, 510, 0, 422, 423, 0, 424, 425, 426,
	427, 428, 0, 0, 0, 0, 429, 430, 431, 0,
	0, 511, 432, 709, 710, 0, 711, 0, 433, 434,
	0, 712, 0, 435, 436, 437, 0, 438, 0, 0,
	0, 439, 440, 441, 442, 443, 444, 0, 445, 447,
	446, 0, 448, 713, 0, 449, 450, 0, 0, 451,
	452, 453, 454, 455, 456, 459, 0, 0, 457, 458,
	460, 461, 0, 462, 463, 465, 468, 464, 466, 467,
	469, 482, 483, 470, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 485, 0, 484, 0, 486,
	487, 488, 489, 490, 497, 499, 500, 495, 496, 498,
	501, 502, 504, 492, 493, 494, 0, 503, 491, 0,
	0, 0, 505, 506, 507, 508, 0, 714, 509, 715,
	512, 513, 0, 0, 514, 0, 515, 0, 0, 517,
	518, 519, 0, 0, 520, 521, 716, 0, 522, 0,
	717, 523, 524, 516, 525, 526, 527, 528, 529, 530,
	531, 532, 533, 0, 534, 535, 718, 536, 537, 538,
	719, 539, 540, 541, 720, 542, 721, 543, 544, 0,
	545, 546, 547, 0, 548, 549, 550, 551, 552, 553,
	554, 555, 722, 556, 557, 559, 558, 560, 0, 561,
	0, 562, 563, 564, 0, 0, 0, 0, 0, 565,
	566, 568, 0, 569, 570, 571, 572, 567, 573, 574,
	575, 576, 577, 0, 578, 579, 580, 0, 581, 582,
	583, 584, 585, 723, 586, 0, 587, 588, 595, 596,
	597, 589, 590, 591, 598, 599, 600, 601, 602, 0,
	604, 605, 603, 606, 607, 608, 0, 609, 610, 592,
	593, 611, 612, 0, 613, 614, 615, 616, 617, 618,
	619, 724, 0, 620, 0, 621, 622, 623, 624, 625,
	627, 594, 628, 633, 634, 725, 629, 630, 631, 632,
	726, 636, 637, 638, 0, 639, 640, 0, 635, 626,
	0, 641, 642, 643, 644, 645, 646, 0, 647, 648,
	0, 649, 727, 728, 729, 730, 0, 659, 0, 650,
	651, 652, 653, 731, 654, 732, 0, 655, 656, 657,
	658, 0, 660, 661, 0, 0, 662, 663, 665, 667,
	668, 664, 666, 669, 0, 670, 0, 0, 671, 672,
	673, 733, 734, 735, 0, 675, 674, 676, 677, 678,
	736, 679, 680, 290, 0, 0, 0, 681, 682, 737,
	683, 684, 685, 0, 0, 0, 0, 0, 0, 0,
	296, 297, 299, 298, 300, 301, 302, 303, 0, 304,
	305, 0, 0, 0, 0, 0, 686, 0, 0, 0,
	306, 0, 307, 308, 4006, 309, 310, 311, 312, 313,
	314, 315, 687, 688, 0, 316, 689, 317, 690, 0,
	691, 318, 319, 320, 321, 322, 323, 0, 0, 0,
	324, 692, 693, 694, 0, 325, 326, 695, 0, 0,
	0, 327, 328, 329, 330, 331, 332, 333, 334, 0,
	0, 336, 337, 338, 335, 339, 0, 340, 0, 341,
	342, 343, 344, 345, 346, 0, 347, 348, 349, 0,
	350, 351, 352, 0, 0, 0, 0, 0, 0, 0,
	353, 354, 355, 356, 357, 0, 358, 360, 696, 697,
	0, 363, 359, 361, 0, 364, 362, 365, 0, 366,
	367, 368, 0, 0, 369, 370, 371, 0, 372, 373,
	374, 0, 375, 376, 377, 0, 378, 379, 698, 380,
	381, 382, 384, 386, 383, 385, 387, 388, 389, 390,
	699, 700, 391, 0, 0, 0, 0, 0, 0, 0,
	392, 393, 394, 701, 0, 0, 0, 395, 0, 396,
	397, 398, 0, 399, 400, 0, 0, 401, 402, 403,
	702, 703, 404, 405, 406, 407, 408, 409, 410, 411,
	412, 0, 413, 704, 0, 705, 414, 0, 415, 416,
	417, 418, 419, 420, 421, 706, 707, 708, 510, 0,
	422, 423, 0, 424, 425, 426, 427, 428, 0, 0,
	0, 0, 429, 430, 431, 0, 0, 511, 432, 709,
	710, 0, 711, 0, 433, 434, 0, 712, 0, 435,
	436, 437, 0, 438, 0, 0, 0, 439, 440, 441,
	442, 443, 444, 0, 445, 447, 446, 0, 448, 713,
	0, 449, 450, 0, 0, 451, 452, 453, 454, 455,
	456, 459, 0, 0, 457, 458, 460, 461, 0, 462,
	463, 465, 468, 464, 466, 467, 469, 482, 483, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 485, 0, 484, 0, 486, 487, 488, 489, 490,
	497, 499, 500, 495, 496, 498, 501, 502, 504, 492,
	493, 494, 0, 503, 491, 0, 0, 0, 505, 506,
	507, 508, 0, 714, 509, 715, 512, 513, 0, 0,
	514, 0, 515, 0, 0, 517, 518, 519, 0, 0,
	520, 521, 716, 0, 522, 0, 717, 523, 524, 516,
	525, 526, 527, 528, 529, 530, 531, 532, 533, 0,
	534, 535, 718, 536, 537, 538, 719, 539, 540, 541,
	720, 542, 721, 543, 544, 0, 545, 546, 547, 0,
	548, 549, 550, 551, 552, 553, 554, 555, 722, 556,
	557, 559, 558, 560, 0, 561, 0, 562, 563, 564,
	0, 0, 0, 0, 0, 565, 566, 568, 0, 569,
	570, 571, 572, 567, 573, 574, 575, 576, 577, 0,
	578, 579, 580, 0, 581, 582, 583, 584, 585, 723,
	586, 0, 587, 588, 595, 596, 597, 589, 590, 591,
	598, 599, 600, 601, 602, 0, 604, 605, 603, 606,
	607, 608, 0, 609, 610, 592, 593, 611, 612, 0,
	613, 614, 615, 616, 617, 618, 619, 724, 0, 620,
	0, 621, 622, 623, 624, 625, 627, 594, 628, 633,
	634, 725, 629, 630, 631, 632, 726, 636, 637, 638,
	0, 639, 640, 0, 635, 626, 0, 641, 642, 643,
	644, 645, 646, 0, 647, 648, 0, 649, 727, 728,
	729, 730, 0, 659, 0, 650, 651, 652, 653, 731,
	654, 732, 0, 655, 656, 657, 658, 0, 660, 661,
	0, 0, 662, 663, 665, 667, 668, 664, 666, 669,
	0, 670, 0, 0, 671, 672, 673, 733, 734, 735,
	0, 675, 674, 676, 677, 678, 736, 679, 680, 0,
	992, 0, 892, 681, 682, 737, 683, 684, 685, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 296,
	297, 299, 298, 300, 301, 302, 303, 0, 304, 305,
	0, 0, 0, 0, 0, 686, 0, 0, 0, 306,
	2490, 307, 308, 0, 309, 310, 311, 312, 313, 314,
	315, 687, 688, 0, 316, 689, 317, 690, 0, 691,
	318, 319, 320, 321, 322, 323, 0, 0, 0, 324,
	692, 693, 694, 0, 325, 326, 695, 0, 0, 0,
	327, 328, 329, 330, 331, 332, 333, 334, 0, 0,
	336, 337, 338, 335, 339, 0, 340, 0, 341, 342,
	343, 344, 345, 346, 0, 347, 348, 349, 0, 350,
	351, 352, 0, 0, 0, 0, 0, 0, 0, 353,
	354, 355, 899, 357, 0, 358, 360, 696, 697, 0,
	363, 359, 361, 0, 364, 362, 365, 0, 366, 367,
	368, 0, 0, 369, 370, 371, 0, 372, 373, 374,
	0, 375, 376, 377, 0, 378, 379, 698, 380, 381,
	382, 384, 386, 383, 385, 387, 388, 389, 390, 699,
	700, 391, 0, 293, 0, 0, 0, 0, 0, 392,
	393, 394, 701, 0, 0, 0, 395, 0, 396, 397,
	398, 0, 399, 400, 989, 0, 401, 402, 403, 702,
	703, 404, 405, 406, 407, 408, 409, 410, 411, 412,
	0, 413, 704, 0, 705, 414, 0, 415, 416, 417,
	418, 419, 420, 421, 706, 707, 708, 510, 0, 422,
	423, 0, 424, 425, 426, 427, 428, 0, 0, 0,
	294, 429, 430, 431, 0, 0, 511, 432, 709, 710,
	0, 711, 0, 433, 434, 0, 712, 0, 435, 436,
	437, 0, 438, 0, 0, 0, 439, 440, 441, 442,
	443, 444, 0, 445, 447, 446, 0, 448, 713, 0,
	449, 450, 0, 0, 451, 452, 453, 454, 455, 456,
	459, 0, 0, 457, 458, 460, 461, 0, 462, 463,
	465, 468, 464, 466, 467, 469, 482, 483, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	485, 0, 484, 0, 486, 487, 488, 489, 490, 497,
	499, 500, 495, 496, 498, 501, 502, 504, 492, 493,
	494, 0, 503, 491, 0, 295, 0, 505, 506, 507,
	508, 0, 714, 509, 715, 512, 513, 0, 0, 514,
	0, 515, 0, 0, 517, 518, 519, 0, 0, 520,
	521, 716, 0, 522, 0, 717, 523, 524, 516, 525,
	526, 527, 528, 529, 530, 531, 532, 533, 0, 534,
	535, 718, 536, 537, 538, 719, 539, 540, 541, 720,
	542, 721, 543, 544, 0, 545, 546, 547, 0, 548,
	549, 550, 551, 552, 553, 554, 555, 722, 556, 557,
	559, 558, 560, 0, 561, 0, 562, 563, 564, 0,
	0, 0, 0, 0, 565, 566, 568, 0, 569, 570,
	571, 572, 567, 573, 574, 575, 576, 577, 0, 578,
	579, 580, 0, 581, 582, 583, 584, 585, 723, 586,
	0, 587, 588, 595, 596, 597, 589, 590, 591, 598,
	599, 600, 601, 602, 0, 604, 605, 603, 606, 607,
	608, 0, 609, 610, 592, 593, 611, 612, 0, 613,
	614, 615, 616, 617, 618, 619, 724, 0, 620, 0,
	621, 622, 623, 624, 625, 627, 594, 628, 633, 634,
	725, 629, 630, 631, 632, 726, 636, 637, 638, 0,
	639, 991, 0, 635, 626, 897, 641, 642, 643, 644,
	645, 898, 0, 647, 648, 0, 649, 727, 728, 729,
	730, 0, 659, 0, 650, 651, 652, 653, 731, 654,
	732, 0, 655, 656, 657, 658, 0, 660, 661, 0,
	0, 662, 663, 665, 667, 668, 664, 666, 669, 0,
	670, 0, 0, 671, 672, 673, 733, 734, 735, 0,
	675, 674, 676, 677, 678, 736, 679, 680, 2167, 0,
	0, 0, 681, 682, 737, 683, 684, 685, 0, 0,
	0, 0, 0, 0, 0, 296, 297, 299, 298, 300,
	301, 302, 303, 0, 304, 305, 0, 0, 0, 0,
	0, 902, 0, 0, 0, 306, 0, 307, 308, 1288,
	309, 310, 311, 312, 313, 314, 315, 0, 2173, 0,
	316, 2163, 317, 2179, 0, 2186, 318, 319, 320, 321,
	322, 323, 0, 0, 0, 324, 2189, 2190, 0, 0,
	325, 326, 0, 0, 1590, 0, 327, 328, 329, 330,
	331, 332, 333, 334, 0, 0, 336, 337, 338, 335,
	339, 0, 340, 0, 341, 342, 343, 344, 345, 346,
	0, 347, 348, 349, 1289, 350, 351, 352, 0, 0,
	0, 0, 0, 0, 0, 353, 354, 355, 356, 357,
	1271, 358, 360, 2177, 2176, 0, 363, 359, 361, 0,
	364, 362, 365, 0, 366, 367, 368, 0, 0, 369,
	1256, 371, 0, 372, 373, 374, 0, 375, 376, 377,
	0, 378, 379, 0, 380, 381, 382, 384, 386, 383,
	385, 387, 388, 389, 390, 0, 0, 391, 0, 0,
	0, 0, 0, 0, 0, 392, 393, 394, 2175, 0,
	0, 0, 395, 0, 396, 397, 398, 0, 399, 400,
	0, 1290, 401, 402, 403, 2184, 2185, 404, 405, 406,
	407, 408, 409, 410, 411, 412, 0, 413, 0, 0,
	0, 414, 0, 415, 416, 417, 418, 419, 420, 421,
	0, 0, 0, 510, 1292, 422, 423, 0, 424, 425,
	426, 427, 428, 0, 0, 0, 0, 429, 430, 431,
	0, 1291, 511, 432, 2170, 2171, 0, 2166, 0, 433,
	434, 1293, 0, 1294, 435, 436, 437, 1295, 438, 0,
	0, 0, 439, 440, 441, 442, 443, 444, 0, 445,
	447, 446, 0, 448, 0, 1296, 449, 450, 1297, 0,
	451, 452, 453, 454, 455, 456, 459, 0, 0, 457,
	458, 460, 461, 0, 462, 463, 465, 468, 464, 466,
	467, 469, 482, 483, 470, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 485, 0, 484, 1298,
	486, 487, 488, 489, 490, 497, 499, 500, 495, 496,
	498, 501, 502, 504, 492, 493, 494, 1299, 503, 491,
	0, 0, 1300, 505, 506, 507, 508, 0, 0, 509,
	2178, 512, 513, 0, 0, 514, 0, 515, 0, 0,
	517, 518, 519, 0, 0, 520, 521, 0, 1301, 522,
	1302, 0, 523, 524, 516, 525, 526, 527, 528, 529,
	530, 531, 532, 533, 0, 534, 535, 2160, 536, 537,
	538, 2161, 539, 540, 541, 0, 542, 0, 543, 544,
	0, 545, 546, 547, 0, 548, 549, 550, 551, 552,
	553, 554, 555, 2174, 556, 557, 559, 558, 560, 0,
	561, 0, 562, 563, 564, 0, 0, 0, 0, 0,
	565, 566, 568, 0, 569, 570, 571, 572, 567, 573,
	574, 575, 576, 577, 0, 578, 579, 580, 1303, 581,
	582, 583, 584, 585, 0, 586, 0, 587, 588, 595,
	596, 597, 589, 590, 591, 598, 599, 600, 601, 602,
	0, 604, 605, 603, 606, 607, 608, 0, 609, 610,
	592, 593, 611, 612, 1304, 613, 614, 615, 616, 617,
	618, 619, 2172, 0, 620, 0, 621, 622, 623, 624,
	625, 627, 594, 628, 633, 634, 2188, 629, 630, 631,
	632, 0, 636, 637, 638, 0, 639, 640, 0, 635,
	626, 0, 641, 642, 643, 644, 645, 646, 0, 647,
	648, 0, 649, 2180, 2181, 2182, 2183, 0, 659, 0,
	650, 651, 652, 653, 0, 654, 0, 0, 655, 656,
	657, 658, 0, 660, 661, 0, 0, 662, 663, 665,
	667, 668, 664, 666, 669, 0, 670, 0, 0, 671,
	672, 673, 0, 2164, 2187, 0, 675, 674, 676, 677,
	678, 0, 679, 680, 0, 0, 0, 0, 681, 682,
	0, 683, 684, 685, 892, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 296, 297, 299, 298, 300, 301, 302, 303, 4133,
	304, 305, 0, 0, 0, 0, 0, 686, 0, 2154,
	0, 306, 0, 307, 308, 0, 309, 310, 311, 312,
	313, 314, 315, 687, 688, 0, 316, 689, 317, 690,
	0, 691, 318, 319, 320, 321, 322, 323, 0, 0,
	0, 324, 692, 693, 694, 0, 325, 326, 695, 0,
	0, 0, 327, 328, 329, 330, 331, 332, 333, 334,
	0, 0, 336, 337, 338, 335, 339, 0, 340, 0,
	341, 342, 343, 344, 345, 346, 0, 347, 348, 349,
	0, 350, 351, 352, 0, 0, 0, 0, 0, 0,
	0, 353, 354, 355, 899, 357, 0, 358, 360, 696,
	697, 0, 363, 359, 361, 0, 364, 362, 365, 0,
	366, 367, 368, 0, 0, 369, 370, 371, 0, 372,
	373, 374, 0, 375, 376, 377, 0, 378, 379, 698,
	380, 381, 382, 384, 386, 383, 385, 387, 388, 389,
	390, 699, 700, 391, 0, 293, 0, 0, 0, 0,
	0, 392, 393, 394, 701, 0, 0, 0, 395, 0,
	396, 397, 398, 0, 399, 400, 0, 0, 401, 402,
	403, 702, 703, 404, 405, 406, 407, 408, 409, 410,
	411, 412, 0, 413, 704, 0, 705, 414, 0, 415,
	416, 417, 418, 419, 420, 421, 706, 707, 708, 510,
	0, 422, 423, 0, 424, 425, 426, 427, 428, 0,
	0, 0, 294, 429, 430, 431, 0, 0, 511, 432,
	709, 710, 0, 711, 0, 433, 434, 0, 712, 0,
	435, 436, 437, 0, 438, 0, 0, 0, 439, 440,
	441, 442, 443, 444, 0, 445, 447, 446, 0, 448,
	713, 0, 449, 450, 0, 0, 451, 452, 453, 454,
	455, 456, 459, 0, 0, 457, 458, 460, 461, 0,
	462, 463, 465, 468, 464, 466, 467, 469, 482, 483,
	470, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 485, 0, 484, 0, 486, 487, 488, 489,
	490, 497, 499, 500, 495, 496, 498, 501, 502, 504,
	492, 493, 494, 0, 503, 491, 0, 295, 0, 505,
	506, 507, 508, 0, 714, 509, 715, 512, 513, 0,
	0, 514, 0, 515, 0, 0, 517, 518, 519, 0,
	0, 520, 521, 716, 0, 522, 0, 717, 523, 524,
	516, 525, 526, 527, 528, 529, 530, 531, 532, 533,
	0, 534, 535, 718, 536, 537, 538, 719, 539, 540,
	541, 720, 542, 721, 543, 544, 0, 545, 546, 547,
	0, 548, 549, 550, 551, 552, 553, 554, 555, 722,
	556, 557, 559, 558, 560, 0, 561, 0, 562, 563,
	564, 0, 0, 0, 0, 0, 565, 566, 568, 0,
	569, 570, 571, 572, 567, 573, 574, 575, 576, 577,
	0, 578, 579, 580, 0, 581, 582, 583, 584, 585,
	723, 586, 0, 587, 588, 595, 596, 597, 589, 590,
	591, 4132, 599, 600, 601, 602, 0, 604, 605, 603,
	606, 607, 608, 0, 609, 610, 592, 593, 611, 612,
	0, 613, 614, 615, 616, 617, 618, 619, 724, 0,
	620, 0, 621, 622, 623, 624, 625, 627, 594, 628,
	633, 634, 725, 629, 630, 631, 632, 726, 636, 637,
	638, 0, 639, 640, 0, 635, 626, 897, 641, 642,
	643, 644, 645, 898, 0, 647, 648, 0, 649, 727,
	728, 729, 730, 0, 659, 0, 650, 651, 652, 653,
	731, 654, 732, 0, 655, 656, 4131, 658, 0, 660,
	661, 0, 0, 662, 663, 665, 667, 668, 664, 666,
	669, 0, 670, 0, 0, 671, 672, 673, 733, 734,
	735, 0, 675, 674, 676, 677, 678, 736, 679, 680,
	0, 892, 0, 0, 681, 682, 737, 683, 684, 685,
	0, 0, 0, 0, 0, 0, 0, 0, 296, 297,
	299, 298, 300, 301, 302, 303, 2194, 304, 305, 0,
	0, 0, 0, 902, 686, 0, 0, 0, 306, 0,
	307, 308, 0, 309, 310, 311, 312, 313, 314, 315,
	687, 688, 0, 316, 689, 317, 690, 0, 691, 318,
	319, 320, 321, 322, 323, 0, 0, 0, 324, 692,
	693, 694, 0, 325, 326, 695, 0, 0, 0, 327,
	328, 329, 330, 331, 332, 333, 334, 0, 0, 336,
	337, 338, 335, 339, 0, 340, 0, 341, 342, 343,
	344, 345, 346, 0, 347, 348, 349, 0, 350, 351,
	352, 0, 0, 0, 0, 0, 0, 0, 353, 354,
	355, 899, 357, 0, 358, 360, 696, 697, 0, 363,
	359, 361, 0, 364, 362, 365, 0, 366, 367, 368,
	0, 0, 369, 370, 371, 0, 372, 373, 374, 0,
	375, 376, 377, 0, 378, 379, 698, 380, 381, 382,
	384, 386, 383, 385, 387, 388, 389, 390, 699, 700,
	391, 0, 293, 0, 0, 0, 0, 0, 392, 393,
	394, 701, 0, 0, 0, 395, 0, 396, 397, 398,
	0, 399, 400, 0, 0, 401, 402, 403, 702, 703,
	404, 405, 406, 407, 408, 409, 410, 411, 412, 0,
	413, 704, 0, 705, 414, 0, 415, 416, 417, 418,
	419, 420, 421, 706, 707, 708, 510, 0, 422, 423,
	0, 424, 425, 426, 427, 428, 0, 0, 0, 294,
	429, 430, 431, 0, 0, 511, 432, 709, 710, 0,
	711, 0, 433, 434, 0, 712, 0, 435, 436, 437,
	0, 438, 0, 0, 0, 439, 440, 441, 442, 443,
	444, 0, 445, 447, 446, 0, 448, 713, 0, 449,
	450, 0, 0, 451, 452, 453, 454, 455, 456, 459,
	0, 0, 457, 458, 460, 461, 0, 462, 463, 465,
	468, 464, 466, 467, 469, 482, 483, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 485,
	0, 484, 0, 486, 487, 488, 489, 490, 497, 499,
	500, 495, 496, 498, 501, 502, 504, 492, 493, 494,
	0, 503, 491, 0, 295, 0, 505, 506, 507, 508,
	0, 714, 509, 715, 512, 513, 0, 0, 514, 0,
	515, 0, 0, 517, 518, 519, 0, 0, 520, 521,
	716, 0, 522, 0, 717, 523, 524, 516, 525, 526,
	527, 528, 529, 530, 531, 532, 533, 0, 534, 535,
	718, 536, 537, 538, 719, 539, 540, 541, 720, 542,
	721, 543, 544, 0, 545, 546, 547, 0, 548, 549,
	550, 551, 552, 553, 554, 555, 722, 556, 557, 559,
	558, 560, 0, 561, 0, 562, 563, 564, 0, 0,
	0, 0, 0, 565, 566, 568, 0, 569, 570, 571,
	572, 567, 573, 574, 575, 576, 577, 0, 578, 579,
	580, 0, 581, 582, 583, 584, 585, 723, 586, 0,
	587, 588, 595, 596, 597, 589, 590, 591, 2193, 599,
	600, 601, 602, 0, 2195, 605, 603, 606, 607, 608,
	0, 609, 610, 592, 593, 611, 612, 0, 613, 614,
	615, 616, 617, 618, 619, 724, 0, 620, 0, 621,
	622, 623, 624, 625, 627, 594, 628, 633, 634, 725,
	629, 630, 631, 632, 726, 636, 637, 638, 0, 639,
	640, 0, 635, 626, 897, 641, 642, 643, 644, 645,
	898, 0, 647, 648, 0, 649, 727, 728, 729, 730,
	0, 659, 0, 650, 651, 652, 653, 731, 654, 732,
	0, 655, 656, 2192, 658, 0, 660, 661, 0, 0,
	662, 663, 665, 667, 668, 664, 666, 669, 0, 670,
	0, 0, 671, 672, 673, 733, 734, 735, 0, 675,
	674, 676, 677, 678, 736, 679, 680, 0, 892, 0,
	0, 681, 682, 737, 683, 684, 685, 0, 0, 0,
	0, 0, 0, 0, 0, 296, 297, 299, 298, 300,
	301, 302, 303, 2145, 304, 305, 0, 0, 0, 0,
	902, 686, 0, 0, 0, 306, 0, 307, 308, 0,
	309, 310, 311, 312, 313, 314, 315, 687, 688, 0,
	316, 689, 317, 690, 0, 691, 318, 319, 320, 321,
	322, 323, 0, 0, 0, 324, 692, 693, 694, 0,
	325, 326, 695, 0, 0, 0, 327, 328, 329, 330,
	331, 332, 333, 334, 0, 0, 336, 337, 338, 335,
	339, 0, 340, 0, 341, 342, 343, 344, 345, 346,
	0, 347, 348, 349, 0, 350, 351, 352, 0, 0,
	0, 0, 0, 0, 0, 353, 354, 355, 899, 357,
	0, 358, 360, 696, 697, 0, 363, 359, 361, 0,
	364, 362, 365, 0, 366, 367, 368, 0, 0, 369,
	370, 371, 0, 372, 373, 374, 0, 375, 376, 377,
	0, 378, 379, 698, 380, 381, 382, 384, 386, 383,
	385, 387, 388, 389, 390, 699, 700, 391, 0, 293,
	0, 0, 0, 0, 0, 392, 393, 394, 701, 0,
	0, 0, 395, 0, 396, 397, 398, 0, 399, 400,
	0, 0, 401, 402, 403, 702, 703, 404, 405, 406,
	407, 408, 409, 410, 411, 412, 0, 413, 704, 0,
	705, 414, 0, 415, 416, 417, 418, 419, 420, 421,
	706, 707, 708, 510, 0, 422, 423, 0, 424, 425,
	426, 427, 428, 0, 0, 0, 294, 429, 430, 431,
	0, 0, 511, 432, 709, 710, 0, 711, 0, 433,
	434, 0, 712, 0, 435, 436, 437, 0, 438, 0,
	0, 0, 439, 440, 441, 442, 443, 444, 0, 445,
	447, 446, 0, 448, 713, 0, 449, 450, 0, 0,
	451, 452, 453, 454, 455, 456, 459, 0, 0, 457,
	458, 460, 461, 0, 462, 463, 465, 468, 464, 466,
	467, 469, 482, 483, 470, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 485, 0, 484, 0,
	486, 487, 488, 489, 490, 497, 499, 500, 495, 496,
	498, 501, 502, 504, 492, 493, 494, 0, 503, 491,
	0, 295, 0, 505, 506, 507, 508, 0, 714, 509,
	715, 512, 513, 0, 0, 514, 0, 515, 0, 0,
	517, 518, 519, 0, 0, 520, 521, 716, 0, 522,
	0, 717, 523, 524, 516, 525, 526, 527, 528, 529,
	530, 531, 532, 533, 0, 534, 535, 718, 536, 537,
	538, 719, 539, 540, 541, 720, 542, 721, 543, 544,
	0, 545, 546, 547, 0, 548, 549, 550, 551, 552,
	553, 554, 555, 722, 556, 557, 559, 558, 560, 0,
	561, 0, 562, 563, 564, 0, 0, 0, 0, 0,
	565, 566, 568, 0, 569, 570, 571, 572, 567, 573,
	574, 575, 576, 577, 0, 578, 579, 580, 0, 581,
	582, 583, 584, 585, 723, 586, 0, 587, 588, 595,
	596, 597, 589, 590, 591, 2144, 599, 600, 601, 602,
	0, 2146, 605, 603, 606, 607, 608, 0, 609, 610,
	592, 593, 611, 612, 0, 613, 614, 615, 616, 617,
	618, 619, 724, 0, 620, 0, 621, 622, 623, 624,
	625, 627, 594, 628, 633, 634, 725, 629, 630, 631,
	632, 726, 636, 637, 638, 0, 639, 640, 0, 635,
	626, 897, 641, 642, 643, 644, 645, 898, 0, 647,
	648, 0, 649, 727, 728, 729, 730, 0, 659, 0,
	650, 651, 652, 653, 731, 654, 732, 0, 655, 656,
	2143, 658, 0, 660, 661, 0, 0, 662, 663, 665,
	667, 668, 664, 666, 669, 0, 670, 0, 0, 671,
	672, 673, 733, 734, 735, 0, 675, 674, 676, 677,
	678, 736, 679, 680, 890, 0, 892, 0, 681, 682,
	737, 683, 684, 685, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 296, 297, 299, 298, 300, 301, 302,
	303, 0, 304, 305, 0, 0, 0, 902, 0, 686,
	0, 0, 0, 306, 0, 307, 308, 0, 309, 310,
	311, 312, 313, 314, 315, 687, 688, 0, 316, 689,
	317, 690, 0, 691, 318, 319, 320, 321, 322, 323,
	0, 0, 0, 324, 692, 693, 694, 0, 325, 326,
	695, 0, 0, 0, 327, 328, 329, 330, 331, 332,
	333, 334, 0, 0, 336, 337, 338, 335, 339, 0,
	340, 0, 341, 342, 343, 344, 345, 346, 0, 347,
	348, 349, 0, 350, 351, 352, 0, 0, 0, 0,
	0, 0, 0, 353, 354, 355, 899, 357, 0, 358,
	360, 696, 697, 0, 363, 359, 361, 0, 364, 362,
	365, 0, 366, 367, 368, 0, 0, 369, 370, 371,
	0, 372, 373, 374, 0, 375, 376, 377, 0, 378,
	379, 698, 380, 381, 382, 384, 386, 383, 385, 387,
	388, 389, 390, 699, 700, 391, 0, 293, 0, 0,
	0, 0, 0, 392, 393, 394, 701, 0, 0, 0,
	395, 0, 396, 397, 398, 0, 399, 400, 0, 0,
	401, 402, 403, 702, 703, 404, 405, 406, 407, 408,
	409, 410, 411, 412, 0, 413, 704, 0, 705, 414,
	0, 415, 416, 417, 418, 419, 420, 421, 706, 707,
	708, 510, 0, 422, 423, 0, 424, 425, 426, 427,
	428, 0, 0, 0, 294, 429, 430, 431, 0, 0,
	511, 432, 709, 710, 0, 711, 0, 433, 434, 0,
	712, 0, 435, 436, 437, 0, 438, 0, 0, 0,
	439, 440, 441, 442, 443, 444, 0, 445, 447, 446,
	0, 448, 713, 0, 449, 450, 0, 0, 451, 452,
	453, 454, 455, 456, 459, 0, 0, 457, 458, 460,
	461, 0, 462, 463, 465, 468, 464, 466, 467, 469,
	482, 483, 470, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 485, 0, 484, 0, 486, 487,
	488, 489, 490, 497, 499, 500, 495, 496, 498, 501,
	502, 504, 492, 493, 494, 0, 503, 491, 0, 295,
	0, 505, 506, 507, 508, 0, 714, 509, 715, 512,
	513, 0, 0, 514, 0, 515, 0, 0, 517, 518,
	519, 0, 0, 520, 521, 716, 0, 522, 0, 717,
	523, 524, 516, 525, 526, 527, 528, 529, 530, 531,
	532, 533, 0, 534, 535, 718, 536, 537, 538, 719,
	539, 540, 541, 720, 542, 721, 543, 544, 0, 545,
	546, 547, 0, 548, 549, 550, 551, 552, 553, 554,
	555, 722, 556, 557, 559, 558, 560, 0, 561, 0,
	562, 563, 564, 0, 0, 0, 0, 0, 565, 566,
	568, 0, 569, 570, 571, 572, 567, 573, 574, 575,
	576, 577, 0, 578, 579, 580, 0, 581, 582, 583,
	584, 585, 723, 586, 0, 587, 588, 595, 596, 597,
	589, 590, 591, 598, 599, 600, 601, 602, 0, 604,
	605, 603, 606, 607, 608, 0, 609, 610, 592, 593,
	611, 612, 0, 613, 614, 615, 616, 617, 618, 619,
	724, 0, 620, 0, 621, 622, 623, 624, 625, 627,
	594, 628, 633, 634, 725, 629, 630, 631, 632, 726,
	636, 637, 638, 0, 639, 640, 0, 635, 626, 897,
	641, 642, 643, 644, 645, 898, 0, 647, 648, 0,
	649, 727, 728, 729, 730, 0, 659, 0, 650, 651,
	652, 653, 731, 654, 732, 0, 655, 656, 657, 658,
	0, 660, 661, 0, 0, 662, 663, 665, 667, 668,
	664, 666, 669, 0, 670, 0, 0, 671, 672, 673,
	733, 734, 735, 0, 675, 674, 676, 677, 678, 736,
	679, 680, 0, 892, 0, 0, 681, 682, 737, 683,
	684, 685, 0, 0, 0, 0, 0, 0, 0, 0,
	296, 297, 299, 298, 300, 301, 302, 303, 0, 304,
	305, 0, 0, 0, 0, 902, 686, 0, 0, 0,
	306, 0, 307, 308, 0, 309, 310, 311, 312, 313,
	314, 315, 687, 688, 0, 316, 689, 317, 690, 0,
	691, 318, 319, 320, 321, 322, 323, 0, 0, 0,
	324, 692, 693, 694, 0, 325, 326, 695, 0, 0,
	0, 327, 328, 329, 330, 331, 332, 333, 334, 0,
	0, 336, 337, 338, 335, 339, 0, 340, 0, 341,
	342, 343, 344, 345, 346, 0, 347, 348, 349, 0,
	350, 351, 352, 0, 0, 0, 0, 0, 0, 0,
	353, 354, 355, 899, 357, 0, 358, 360, 696, 697,
	0, 363, 359, 361, 0, 364, 362, 365, 0, 366,
	367, 368, 0, 0, 369, 370, 371, 0, 372, 373,
	374, 0, 375, 376, 377, 0, 378, 379, 698, 380,
	381, 382, 384, 386, 383, 385, 387, 388, 389, 390,
	699, 700, 391, 0, 293, 0, 0, 0, 0, 0,
	392, 393, 394, 701, 0, 0, 0, 395, 0, 396,
	397, 398, 0, 399, 400, 0, 0, 401, 402, 403,
	702, 703, 404, 405, 406, 407, 408, 409, 410, 411,
	412, 0, 413, 704, 0, 705, 414, 0, 415, 416,
	417, 418, 419, 420, 421, 706, 707, 708, 510, 0,
	422, 423, 0, 424, 425, 426, 427, 428, 0, 0,
	0, 294, 429, 430, 431, 0, 0, 511, 432, 709,
	710, 0, 711, 0, 433, 434, 0, 712, 0, 435,
	436, 437, 0, 438, 0, 0, 0, 439, 440, 441,
	442, 443, 444, 0, 445, 447, 446, 0, 448, 713,
	0, 449, 450, 0, 0, 451, 452, 453, 454, 455,
	456, 459, 0, 0, 457, 458, 460, 461, 0, 462,
	463, 465, 468, 464, 466, 467, 469, 482, 483, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 485, 0, 484, 0, 486, 487, 488, 489, 490,
	497, 499, 500, 495, 496, 498, 501, 502, 504, 492,
	493, 494, 0, 503, 491, 0, 295, 0, 505, 506,
	507, 508, 0, 714, 509, 715, 512, 513, 0, 0,
	514, 0, 515, 0, 0, 517, 518, 519, 0, 0,
	520, 521, 716, 0, 522, 0, 717, 523, 524, 516,
	525, 526, 527, 528, 529, 530, 531, 532, 533, 0,
	534, 535, 718, 536, 537, 538, 719, 539, 540, 541,
	720, 542, 721, 543, 544, 0, 545, 546, 547, 0,
	548, 549, 550, 551, 552, 553, 554, 555, 722, 556,
	557, 559, 558, 560, 0, 561, 0, 562, 563, 564,
	0, 0, 0, 0, 0, 565, 566, 568, 0, 569,
	570, 571, 572, 567, 573, 574, 575, 576, 577, 0,
	578, 579, 580, 0, 581, 582, 583, 584, 585, 723,
	586, 0, 587, 588, 595, 596, 597, 589, 590, 591,
	598, 599, 600, 601, 602, 0, 604, 605, 603, 606,
	607, 608, 0, 609, 610, 592, 593, 611, 612, 0,
	613, 614, 615, 616, 617, 618, 619, 724, 0, 620,
	0, 621, 622, 623, 624, 625, 627, 594, 628, 633,
	634, 725, 629, 630, 631, 632, 726, 636, 637, 638,
	0, 639, 640, 0, 635, 626, 897, 641, 642, 643,
	644, 645, 898, 0, 647, 648, 0, 649, 727, 728,
	729, 730, 0, 659, 0, 650, 651, 652, 653, 731,
	654, 732, 0, 655, 656, 657, 658, 0, 660, 661,
	0, 0, 662, 663, 665, 667, 668, 664, 666, 669,
	0, 670, 0, 0, 671, 672, 673, 733, 734, 735,
	0, 675, 674, 676, 677, 678, 736, 679, 680, 0,
	892, 0, 0, 681, 682, 737, 683, 684, 685, 0,
	0, 0, 0, 0, 0, 0, 0, 296, 297, 299,
	298, 300, 301, 302, 303, 0, 304, 305, 0, 0,
	0, 0, 902, 686, 0, 0, 0, 306, 0, 307,
	308, 0, 309, 310, 311, 312, 313, 314, 315, 687,
	688, 0, 316, 689, 317, 690, 0, 691, 318, 319,
	320, 321, 322, 323, 0, 0, 0, 324, 692, 693,
	694, 0, 325, 326, 695, 0, 0, 0, 327, 328,
	329, 330, 331, 332, 333, 334, 0, 0, 336, 337,
	338, 335, 339, 0, 340, 0, 341, 342, 343, 344,
	345, 346, 0, 347, 348, 349, 0, 350, 351, 352,
	0, 0, 0, 0, 0, 0, 0, 353, 354, 355,
	899, 357, 0, 358, 360, 696, 697, 0, 363, 359,
	361, 0, 364, 362, 365, 0, 366, 367, 368, 0,
	0, 369, 370, 371, 0, 372, 373, 374, 0, 375,
	376, 377, 0, 378, 379, 698, 380, 381, 382, 384,
	386, 383, 385, 387, 388, 389, 390, 699, 700, 391,
	0, 293, 0, 0, 0, 0, 0, 392, 393, 394,
	701, 0, 0, 0, 395, 0, 396, 397, 398, 0,
	399, 400, 0, 0, 401, 402, 403, 702, 703, 404,
	405, 406, 407, 408, 409, 410, 411, 412, 0, 413,
	704, 0, 705, 414, 0, 415, 416, 417, 418, 419,
	420, 421, 706, 707, 708, 510, 0, 422, 423, 0,
	424, 425, 426, 427, 428, 0, 0, 0, 294, 429,
	430, 431, 0, 0, 511, 432, 709, 710, 0, 711,
	0, 433, 434, 0, 712, 0, 435, 436, 437, 0,
	438, 0, 0, 0, 439, 440, 441, 442, 443, 444,
	0, 445, 447, 446, 0, 448, 713, 0, 449, 450,
	0, 0, 451, 452, 453, 454, 455, 456, 459, 0,
	0, 457, 458, 460, 461, 0, 462, 463, 465, 468,
	464, 466, 467, 469, 482, 483, 470, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 485, 0,
	484, 0, 486, 487, 488, 489, 490, 497, 499, 500,
	495, 496, 498, 501, 502, 504, 492, 493, 494, 0,
	503, 491, 0, 295, 0, 505, 506, 507, 508, 0,
	714, 509, 715, 512, 513, 0, 0, 514, 0, 515,
	0, 0, 517, 518, 519, 0, 0, 520, 521, 716,
	0, 522, 0, 717, 523, 524, 516, 525, 526, 527,
	528, 529, 530, 531, 532, 533, 0, 534, 535, 718,
	536, 537, 538, 719, 539, 540, 541, 720, 542, 721,
	543, 544, 0, 545, 546, 547, 0, 548, 549, 550,
	551, 552, 553, 554, 555, 722, 556, 557, 559, 558,
	560, 0, 561, 0, 562, 563, 564, 0, 0, 0,
	0, 0, 565, 566, 568, 0, 569, 570, 571, 572,
	567, 573, 574, 575, 576, 577, 0, 578, 579, 580,
	0, 2542, 582, 583, 584, 585, 723, 586, 0, 587,
	588, 595, 596, 597, 589, 590, 591, 2543, 599, 600,
	601, 602, 0, 604, 605, 603, 606, 607, 608, 0,
	609, 610, 592, 593, 611, 612, 0, 613, 614, 615,
	616, 617, 618, 619, 724, 0, 620, 0, 621, 622,
	623, 624, 625, 627, 594, 628, 633, 634, 725, 629,
	630, 631, 632, 726, 636, 637, 638, 0, 639, 640,
	0, 635, 626, 897, 641, 642, 643, 644, 645, 898,
	0, 647, 648, 0, 649, 727, 728, 729, 730, 0,
	659, 0, 650, 651, 652, 653, 731, 654, 732, 0,
	655, 656, 2544, 658, 0, 660, 661, 0, 0, 662,
	663, 665, 667, 668, 664, 666, 669, 0, 670, 0,
	0, 671, 672, 673, 733, 734, 735, 0, 675, 674,
	676, 677, 678, 736, 679, 680, 0, 290, 0, 0,
	681, 682, 737, 683, 684, 685, 0, 0, 0, 0,
	0, 0, 0, 0, 296, 297, 299, 298, 300, 301,
	302, 303, 0, 304, 305, 0, 0, 0, 0, 902,
	686, 0, 0, 0, 306, 0, 307, 308, 0, 309,
	310, 311, 312, 313, 314, 315, 687, 688, 0, 316,
	689, 317, 690, 0, 691, 318, 319, 320, 321, 322,
	323, 0, 0, 0, 324, 692, 693, 694, 0, 325,
	326, 695, 0, 0, 0, 327, 328, 329, 330, 331,
	332, 333, 334, 0, 0, 336, 337, 338, 335, 339,
	0, 340, 0, 341, 342, 343, 344, 345, 346, 0,
	347, 348, 349, 0, 350, 351, 352, 0, 0, 0,
	0, 0, 0, 0, 353, 354, 355, 356, 357, 0,
	358, 360, 696, 697, 0, 363, 359, 361, 0, 364,
	362, 365, 0, 366, 367, 368, 0, 0, 369, 370,
	371, 0, 372, 373, 374, 0, 375, 376, 377, 0,
	378, 379, 698, 380, 381, 382, 384, 386, 383, 385,
	387, 388, 389, 390, 699, 700, 391, 0, 293, 0,
	0, 0, 0, 0, 392, 393, 394, 701, 0, 0,
	0, 395, 0, 396, 397, 398, 0, 399, 400, 0,
	0, 401, 402, 403, 702, 703, 404, 405, 406, 407,
	408, 409, 410, 411, 412, 0, 413, 704, 0, 705,
	414, 0, 415, 416, 417, 418, 419, 420, 421, 706,
	707, 708, 510, 0, 422, 423, 0, 424, 425, 426,
	427, 428, 0, 0, 0, 294, 429, 430, 431, 0,
	0, 511, 432, 709, 710, 0, 711, 0, 433, 434,
	0, 712, 0, 435, 436, 437, 0, 438, 0, 0,
	0, 439, 440, 441, 442, 443, 444, 0, 445, 447,
	446, 0, 448, 713, 0, 449, 450, 0, 0, 451,
	452, 453, 454, 455, 456, 459, 0, 0, 457, 458,
	460, 461, 0, 462, 463, 465, 468, 464, 466, 467,
	469, 482, 483, 470, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 485, 0, 484, 0, 486,
	487, 488, 489, 490, 497, 499, 500, 495, 496, 498,
	501, 502, 504, 492, 493, 494, 0, 503, 491, 0,
	295, 0, 505, 506, 507, 508, 0, 714, 509, 715,
	512, 513, 0, 0, 514, 0, 515, 0, 0, 517,
	518, 519, 0, 0, 520, 521, 716, 0, 522, 0,
	717, 523, 524, 516, 525, 526, 527, 528, 529, 530,
	531, 532, 533, 0, 534, 535, 718, 536, 537, 538,
	719, 539, 540, 541, 720, 542, 721, 543, 544, 0,
	545, 546, 547, 0, 548, 549, 550, 551, 552, 553,
	554, 555, 722, 556, 557, 559, 558, 560, 0, 561,
	0, 562, 563, 564, 0, 0, 0, 0, 0, 565,
	566, 568, 0, 569, 570, 571, 572, 567, 573, 574,
	575, 576, 577, 0, 578, 579, 580, 0, 581, 582,
	583, 584, 585, 723, 586, 0, 587, 588, 595, 596,
	597, 589, 590, 591, 598, 599, 600, 601, 602, 0,
	604, 605, 603, 606, 607, 608, 0, 609, 610, 592,
	593, 611, 612, 0, 613, 614, 615, 616, 617, 618,
	619, 724, 0, 620, 0, 621, 622, 623, 624, 625,
	627, 594, 628, 633, 634, 725, 629, 630, 631, 632,
	726, 636, 637, 638, 0, 639, 640, 0, 635, 626,
	0, 641, 642, 643, 644, 645, 646, 0, 647, 648,
	0, 649, 727, 728, 729, 730, 0, 659, 0, 650,
	651, 652, 653, 731, 654, 732, 0, 655, 656, 657,
	658, 0, 660, 661, 0, 0, 662, 663, 665, 667,
	668, 664, 666, 669, 0, 670, 0, 0, 671, 672,
	673, 733, 734, 735, 0, 675, 674, 676, 677, 678,
	736, 679, 680, 0, 0, 0, 0, 681, 682, 737,
	683, 684, 685, 0, 0, 0, 0, 0, 0, 0,
	1626, 1625, 0, 0, 0, 0, 1623, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 902, 296, 297, 299,
	298, 300, 301, 302, 303, 0, 304, 305, 0, 0,
	0, 0, 0, 686, 0, 0, 0, 306, 0, 307,
	308, 1288, 309, 310, 311, 312, 313, 314, 315, 687,
	688, 0, 316, 689, 317, 690, 0, 691, 318, 319,
	320, 321, 322, 323, 0, 0, 0, 324, 692, 693,
	694, 0, 325, 326, 695, 0, 1590, 0, 327, 328,
	329, 330, 331, 332, 333, 334, 0, 0, 336, 337,
	338, 335, 339, 0, 340, 0, 341, 342, 343, 344,
	345, 346, 0, 347, 348, 349, 1289, 350, 351, 352,
	0, 0, 0, 0, 0, 0, 0, 353, 354, 355,
	356, 357, 0, 358, 360, 696, 697, 0, 363, 359,
	361, 0, 364, 362, 365, 0, 366, 367, 368, 0,
	0, 369, 370, 371, 0, 372, 373, 374, 0, 375,
	376, 377, 0, 378, 379, 698, 380, 381, 382, 384,
	386, 383, 385, 387, 388, 389, 390, 699, 700, 391,
	0, 293, 0, 0, 0, 0, 0, 392, 393, 394,
	701, 0, 0, 0, 395, 0, 396, 397, 398, 0,
	399, 400, 0, 1290, 401, 402, 403, 702, 703, 404,
	405, 406, 407, 408, 409, 410, 411, 412, 0, 413,
	704, 0, 705, 414, 0, 415, 416, 417, 418, 419,
	420, 421, 706, 707, 708, 510, 1292, 422, 423, 0,
	424, 425, 426, 427, 428, 0, 0, 0, 0, 429,
	430, 431, 0, 1291, 511, 432, 709, 710, 0, 711,
	0, 433, 434, 1293, 712, 1294, 435, 436, 437, 1295,
	438, 0, 0, 0, 439, 440, 441, 442, 443, 444,
	0, 445, 447, 446, 0, 448, 713, 1296, 449, 450,
	1297, 0, 451, 452, 453, 454, 455, 456, 459, 0,
	0, 457, 458, 460, 461, 0, 462, 463, 465, 468,
	464, 466, 467, 469, 482, 483, 470, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 485, 0,
	484, 1298, 486, 487, 488, 489, 490, 497, 499, 500,
	495, 496, 498, 501, 502, 504, 492, 493, 494, 1299,
	503, 491, 0, 0, 1300, 505, 506, 507, 508, 4235,
	714, 509, 715, 512, 513, 0, 0, 514, 0, 515,
	0, 0, 517, 518, 519, 0, 0, 520, 521, 716,
	1301, 522, 1302, 717, 523, 524, 516, 525, 526, 527,
	528, 529, 530, 531, 532, 533, 0, 534, 535, 718,
	536, 537, 538, 719, 539, 540, 541, 720, 542, 721,
	543, 544, 0, 545, 546, 547, 0, 548, 549, 550,
	551, 552, 553, 554, 555, 722, 556, 557, 559, 558,
	560, 0, 561, 0, 562, 563, 564, 0, 0, 0,
	0, 0, 565, 566, 568, 0, 569, 570, 571, 572,
	567, 573, 574, 575, 576, 577, 0, 578, 579, 580,
	1303, 581, 582, 583, 584, 585, 723, 586, 0, 587,
	588, 595, 596, 597, 589, 590, 591, 598, 599, 600,
	601, 602, 0, 604, 605, 603, 606, 607, 608, 0,
	609, 610, 592, 593, 611, 612, 1304, 613, 614, 615,
	616, 617, 618, 619, 724, 0, 620, 0, 621, 622,
	623, 624, 625, 627, 594, 628, 633, 634, 725, 629,
	630, 631, 632, 726, 636, 637, 638, 0, 639, 640,
	0, 635, 626, 0, 641, 642, 643, 644, 645, 646,
	0, 647, 648, 0, 649, 727, 728, 729, 730, 0,
	659, 0, 650, 651, 652, 653, 731, 654, 732, 0,
	655, 656, 657, 658, 0, 660, 661, 0, 0, 662,
	663, 665, 667, 668, 664, 666, 669, 0, 670, 0,
	0, 671, 672, 673, 733, 734, 735, 0, 675, 674,
	676, 677, 678, 736, 679, 680, 0, 0, 0, 0,
	681, 682, 737, 683, 684, 685, 1626, 1625, 0, 0,
	0, 0, 1623, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 296, 297, 299, 298, 300, 301, 302,
	303, 0, 304, 305, 0, 0, 0, 0, 0, 686,
	0, 0, 0, 306, 0, 307, 308, 1288, 309, 310,
	311, 312, 313, 314, 315, 687, 688, 0, 316, 689,
	317, 690, 0, 691, 318, 319, 320, 321, 322, 323,
	0, 0, 0, 324, 692, 693, 694, 0, 325, 326,
	695, 0, 1590, 0, 327, 328, 329, 330, 331, 332,
	333, 334, 0, 0, 336, 337, 338, 335, 339, 0,
	340, 0, 341, 342, 343, 344, 345, 346, 0, 347,
	348, 349, 1289, 350, 351, 352, 0, 0, 0, 0,
	0, 0, 0, 353, 354, 355, 356, 357, 0, 358,
	360, 696, 697, 0, 363, 359, 361, 0, 364, 362,
	365, 0, 366, 367, 368, 0, 0, 369, 370, 371,
	0, 372, 373, 374, 0, 375, 376, 377, 0, 378,
	379, 698, 380, 381, 382, 384, 386, 383, 385, 387,
	388, 389, 390, 699, 700, 391, 0, 293, 0, 0,
	0, 0, 0, 392, 393, 394, 701, 0, 0, 0,
	395, 0, 396, 397, 398, 0, 399, 400, 0, 1290,
	401, 402, 403, 702, 703, 404, 405, 406, 407, 408,
	409, 410, 411, 412, 0, 413, 704, 0, 705, 414,
	0, 415, 416, 417, 418, 419, 420, 421, 706, 707,
	708, 510, 1292, 422, 423, 0, 424, 425, 426, 427,
	428, 0, 0, 0, 0, 429, 430, 431, 0, 1291,
	511, 432, 709, 710, 0, 711, 0, 433, 434, 1293,
	712, 1294, 435, 436, 437, 1295, 438, 0, 0, 0,
	439, 440, 441, 442, 443, 444, 0, 445, 447, 446,
	0, 448, 713, 1296, 449, 450, 1297, 0, 451, 452,
	453, 454, 455, 456, 459, 0, 0, 457, 458, 460,
	461, 0, 462, 463, 465, 468, 464, 466, 467, 469,
	482, 483, 470, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 485, 0, 484, 1298, 486, 487,
	488, 489, 490, 497, 499, 500, 495, 496, 498, 501,
	502, 504, 492, 493, 494, 1299, 503, 491, 0, 0,
	1300, 505, 506, 507, 508, 3792, 714, 509, 715, 512,
	513, 0, 0, 514, 0, 515, 0, 0, 517, 518,
	519, 0, 0, 520, 521, 716, 1301, 522, 1302, 717,
	523, 524, 516, 525, 526, 527, 528, 529, 530, 531,
	532, 533, 0, 534, 535, 718, 536, 537, 538, 719,
	539, 540, 541, 720, 542, 721, 543, 544, 0, 545,
	546, 547, 0, 548, 549, 550, 551, 552, 553, 554,
	555, 722, 556, 557, 559, 558, 560, 0, 561, 0,
	562, 563, 564, 0, 0, 0, 0, 0, 565, 566,
	568, 0, 569, 570, 571, 572, 567, 573, 574, 575,
	576, 577, 0, 578, 579, 580, 1303, 581, 582, 583,
	584, 585, 723, 586, 0, 587, 588, 595, 596, 597,
	589, 590, 591, 598, 599, 600, 601, 602, 0, 604,
	605, 603, 606, 607, 608, 0, 609, 610, 592, 593,
	611, 612, 1304, 613, 614, 615, 616, 617, 618, 619,
	724, 0, 620, 0, 621, 622, 623, 624, 625, 627,
	594, 628, 633, 634, 725, 629, 630, 631, 632, 726,
	636, 637, 638, 0, 639, 640, 0, 635, 626, 0,
	641, 642, 643, 644, 645, 646, 0, 647, 648, 0,
	649, 727, 728, 729, 730, 0, 659, 0, 650, 651,
	652, 653, 731, 654, 732, 0, 655, 656, 657, 658,
	0, 660, 661, 0, 0, 662, 663, 665, 667, 668,
	664, 666, 669, 0, 670, 0, 0, 671, 672, 673,
	733, 734, 735, 0, 675, 674, 676, 677, 678, 736,
	679, 680, 0, 0, 0, 0, 681, 682, 737, 683,
	684, 685, 1804, 0, 1626, 1625, 0, 0, 0, 0,
	1623, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 296, 297, 299, 298, 300, 301, 302, 303, 0,
	304, 305, 0, 0, 0, 0, 0, 686, 0, 0,
	0, 306, 0, 307, 308, 1288, 309, 310, 311, 312,
	313, 314, 315, 687, 688, 0, 316, 689, 317, 690,
	0, 691, 318, 319, 320, 321, 322, 323, 0, 0,
	0, 324, 692, 693, 694, 0, 325, 326, 695, 0,
	1590, 0, 327, 328, 329, 330, 331, 332, 333, 334,
	0, 0, 336, 337, 338, 335, 339, 0, 340, 0,
	341, 342, 343, 344, 345, 346, 0, 347, 348, 349,
	1289, 350, 351, 352, 0, 0, 0, 0, 0, 0,
	0, 353, 354, 355, 356, 357, 0, 358, 360, 696,
	697, 0, 363, 359, 361, 0, 364, 362, 365, 0,
	366, 367, 368, 0, 0, 369, 370, 371, 0, 372,
	373, 374, 0, 375, 376, 377, 0, 378, 379, 698,
	380, 381, 382, 384, 386, 383, 385, 387, 388, 389,
	390, 699, 700, 391, 0, 293, 0, 0, 0, 0,
	0, 1803, 393, 394, 701, 0, 0, 0, 395, 0,
	396, 397, 398, 0, 399, 400, 0, 1290, 401, 402,
	403, 702, 703, 404, 405, 406, 407, 408, 409, 410,
	411, 412, 0, 413, 704, 0, 705, 414, 0, 415,
	416, 417, 418, 419, 420, 421, 706, 707, 708, 510,
	1292, 422, 423, 0, 424, 425, 426, 427, 428, 0,
	0, 0, 0, 429, 430, 431, 0, 1291, 511, 432,
	709, 710, 0, 711, 0, 433, 434, 1293, 712, 1294,
	435, 436, 437, 1295, 438, 0, 0, 0, 439, 440,
	441, 442, 443, 444, 0, 445, 447, 446, 0, 448,
	713, 1296, 449, 450, 1297, 0, 451, 452, 453, 454,
	455, 456, 459, 0, 0, 457, 458, 460, 461, 0,
	462, 463, 465, 468, 464, 466, 467, 469, 482, 483,
	470, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 485, 0, 484, 1298, 486, 487, 488, 489,
	490, 497, 499, 500, 495, 496, 498, 501, 502, 504,
	492, 493, 494, 1299, 503, 491, 0, 0, 1300, 505,
	506, 507, 508, 0, 714, 509, 715, 512, 513, 0,
	0, 514, 0, 515, 0, 0, 517, 518, 519, 0,
	0, 520, 521, 716, 1301, 522, 1302, 717, 523, 524,
	516, 525, 526, 527, 528, 529, 530, 531, 532, 533,
	0, 534, 535, 718, 536, 537, 538, 719, 539, 540,
	541, 720, 542, 721, 543, 544, 0, 545, 546, 547,
	0, 548, 549, 550, 551, 552, 553, 1802, 555, 722,
	556, 557, 559, 558, 560, 0, 561, 0, 562, 563,
	564, 0, 0, 0, 0, 0, 565, 566, 568, 0,
	569, 570, 571, 572, 567, 573, 574, 575, 576, 577,
	0, 578, 579, 580, 1303, 581, 582, 583, 584, 585,
	723, 586, 0, 587, 588, 595, 596, 597, 589, 590,
	591, 598, 1801, 600, 601, 602, 0, 604, 605, 603,
	606, 607, 608, 0, 609, 610, 592, 593, 611, 612,
	1304, 613, 614, 615, 616, 617, 618, 619, 724, 0,
	620, 0, 621, 622, 623, 624, 625, 627, 594, 628,
	633, 634, 725, 629, 630, 631, 632, 726, 636, 637,
	638, 0, 639, 640, 0, 635, 626, 0, 641, 642,
	643, 644, 645, 646, 0, 647, 648, 0, 649, 727,
	728, 729, 730, 0, 659, 0, 650, 651, 652, 653,
	731, 654, 732, 0, 655, 656, 657, 658, 0, 660,
	661, 0, 0, 662, 663, 665, 667, 668, 664, 666,
	669, 0, 670, 0, 0, 671, 672, 673, 733, 734,
	735, 0, 675, 674, 676, 677, 678, 736, 679, 680,
	0, 0, 0, 0, 681, 682, 737, 683, 684, 685,
	1676, 0, 1626, 1625, 0, 0, 0, 0, 1623, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 296,
	297, 299, 298, 300, 301, 302, 303, 0, 304, 305,
	0, 0, 0, 0, 0, 686, 0, 0, 0, 306,
	0, 307, 308, 1288, 309, 310, 311, 312, 313, 314,
	315, 687, 688, 0, 316, 689, 317, 690, 0, 691,
	318, 319, 320, 321, 322, 323, 0, 0, 0, 324,
	692, 693, 694, 0, 325, 326, 695, 0, 1590, 0,
	327, 328, 329, 330, 331, 332, 333, 334, 0, 0,
	336, 337, 338, 335, 339, 0, 340, 0, 341, 342,
	343, 344, 345, 346, 0, 347, 348, 349, 1289, 350,
	351, 352, 0, 0, 0, 0, 0, 0, 0, 353,
	354, 355, 356, 357, 0, 358, 360, 696, 697, 0,
	363, 359, 361, 0, 364, 362, 365, 0, 366, 367,
	368, 0, 0, 369, 370, 371, 0, 372, 373, 374,
	0, 375, 376, 377, 0, 378, 379, 698, 380, 381,
	382, 384, 386, 383, 385, 387, 388, 389, 390, 699,
	700, 391, 0, 293, 0, 0, 0, 0, 0, 392,
	393, 394, 701, 0, 0, 0, 395, 0, 396, 397,
	398, 0, 399, 400, 0, 1290, 401, 402, 403, 702,
	703, 404, 405, 406, 407, 408, 409, 410, 411, 412,
	0, 413, 704, 0, 705, 414, 0, 415, 416, 417,
	418, 419, 420, 421, 1678, 707, 708, 510, 1292, 422,
	423, 0, 424, 425, 426, 427, 428, 0, 0, 0,
	0, 429, 430, 431, 0, 1291, 511, 432, 709, 710,
	0, 711, 0, 433, 434, 1293, 712, 1294, 435, 436,
	437, 1295, 438, 0, 0, 0, 439, 440, 441, 442,
	443, 444, 0, 445, 447, 446, 0, 448, 713, 1296,
	449, 450, 1297, 0, 451, 452, 453, 454, 455, 456,
	459, 0, 0, 457, 458, 460, 461, 0, 462, 463,
	465, 468, 464, 466, 467, 469, 482, 483, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	485, 0, 484, 1298, 486, 487, 488, 489, 490, 497,
	499, 500, 495, 496, 498, 501, 502, 504, 492, 493,
	494, 1299, 503, 491, 0, 0, 1300, 505, 506, 507,
	508, 0, 714, 509, 715, 512, 513, 0, 0, 514,
	0, 515, 0, 0, 517, 518, 519, 0, 0, 520,
	521, 716, 1301, 522, 1302, 717, 523, 524, 516, 525,
	526, 527, 528, 529, 530, 531, 532, 533, 0, 534,
	535, 718, 536, 537, 538, 719, 539, 540, 541, 720,
	542, 721, 543, 544, 0, 545, 546, 547, 0, 548,
	549, 550, 551, 552, 553, 554, 555, 722, 556, 557,
	559, 558, 560, 0, 561, 0, 562, 563, 564, 0,
	0, 0, 0, 0, 565, 566, 568, 0, 569, 570,
	571, 572, 567, 573, 574, 575, 576, 577, 0, 578,
	579, 580, 1303, 581, 582, 583, 584, 585, 723, 586,
	0, 587, 588, 595, 596, 597, 589, 590, 591, 598,
	599, 600, 601, 602, 0, 604, 605, 603, 606, 607,
	608, 0, 609, 610, 592, 593, 611, 612, 1304, 613,
	614, 615, 616, 617, 618, 619, 724, 0, 620, 0,
	621, 622, 623, 624, 625, 627, 594, 628, 633, 634,
	725, 629, 630, 631, 632, 726, 636, 637, 638, 0,
	639, 640, 0, 635, 626, 0, 641, 642, 643, 644,
	645, 646, 0, 647, 648, 0, 649, 727, 728, 729,
	730, 0, 659, 0, 650, 651, 652, 653, 731, 654,
	732, 0, 655, 656, 657, 658, 0, 660, 661, 0,
	0, 662, 663, 665, 667, 668, 664, 666, 669, 0,
	670, 0, 0, 671, 672, 673, 733, 734, 735, 0,
	675, 674, 676, 677, 678, 736, 679, 680, 0, 0,
	0, 0, 681, 682, 737, 683, 684, 685, 1621, 0,
	1626, 1625, 0, 0, 0, 0, 1623, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 296, 297, 299,
	298, 300, 301, 302, 303, 0, 304, 305, 0, 0,
	0, 0, 0, 686, 0, 0, 0, 306, 0, 307,
	308, 1288, 309, 310, 311, 312, 313, 314, 315, 687,
	688, 0, 316, 689, 317, 690, 0, 691, 318, 319,
	320, 321, 322, 323, 0, 0, 0, 324, 692, 693,
	694, 0, 325, 326, 695, 0, 1590, 0, 327, 328,
	329, 330, 331, 332, 333, 334, 0, 0, 336, 337,
	338, 335, 339, 0, 340, 0, 341, 342, 343, 344,
	345, 346, 0, 347, 348, 349, 1289, 350, 351, 352,
	0, 0, 0, 0, 0, 0, 0, 353, 354, 355,
	356, 357, 0, 358, 360, 696, 697, 0, 363, 359,
	361, 0, 364, 362, 365, 0, 366, 367, 368, 0,
	0, 369, 370, 371, 0, 372, 373, 374, 0, 375,
	376, 377, 0, 378, 379, 698, 380, 381, 382, 384,
	386, 383, 385, 387, 388, 389, 390, 699, 700, 391,
	0, 293, 0, 0, 0, 0, 0, 392, 393, 394,
	701, 0, 0, 0, 395, 0, 396, 397, 398, 0,
	399, 400, 0, 1290, 401, 402, 403, 702, 703, 404,
	405, 406, 407, 408, 409, 410, 411, 412, 0, 413,
	704, 0, 705, 414, 0, 415, 416, 417, 418, 419,
	420, 421, 706, 707, 708, 510, 1292, 422, 423, 0,
	424, 425, 426, 427, 428, 0, 0, 0, 0, 429,
	430, 431, 0, 1291, 511, 432, 709, 710, 0, 711,
	0, 433, 434, 1293, 712, 1294, 435, 436, 437, 1295,
	438, 0, 0, 0, 439, 440, 441, 442, 443, 444,
	0, 445, 447, 446, 0, 448, 713, 1296, 449, 450,
	1297, 0, 451, 452, 453, 454, 455, 456, 459, 0,
	0, 457, 458, 460, 461, 0, 462, 463, 465, 468,
	464, 466, 467, 469, 482, 483, 470, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 485, 0,
	484, 1298, 486, 487, 488, 489, 490, 497, 499, 500,
	495, 496, 498, 501, 502, 504, 492, 493, 494, 1299,
	503, 491, 0, 0, 1300, 505, 506, 507, 508, 0,
	714, 509, 715, 512, 513, 0, 0, 514, 0, 515,
	0, 0, 517, 518, 519, 0, 0, 520, 521, 716,
	1301, 522, 1302, 717, 523, 524, 516, 525, 526, 527,
	528, 529, 530, 531, 532, 533, 0, 534, 535, 718,
	536, 537, 538, 719, 539, 540, 541, 720, 542, 721,
	543, 544, 0, 545, 546, 547, 0, 548, 549, 550,
	551, 552, 553, 554, 555, 722, 556, 557, 559, 558,
	560, 0, 561, 0, 562, 563, 564, 0, 0, 0,
	0, 0, 565, 566, 568, 0, 569, 570, 571, 572,
	567, 573, 574, 575, 576, 577, 0, 578, 579, 580,
	1303, 581, 582, 583, 584, 585, 723, 586, 0, 587,
	588, 595, 596, 597, 589, 590, 591, 598, 599, 600,
	601, 602, 0, 604, 605, 603, 606, 607, 608, 0,
	609, 610, 592, 593, 611, 612, 1304, 613, 614, 615,
	616, 617, 618, 619, 724, 0, 620, 0, 621, 622,
	623, 624, 625, 627, 594, 628, 633, 634, 725, 629,
	630, 631, 632, 726, 636, 637, 638, 0, 639, 640,
	0, 635, 626, 0, 641, 642, 643, 644, 645, 646,
	0, 647, 648, 0, 649, 727, 728, 729, 730, 0,
	659, 0, 650, 651, 652, 653, 731, 654, 732, 0,
	655, 656, 657, 658, 0, 660, 661, 0, 0, 662,
	663, 665, 667, 668, 664, 666, 669, 0, 670, 0,
	0, 671, 672, 673, 733, 734, 735, 0, 675, 674,
	676, 677, 678, 736, 679, 680, 0, 0, 0, 0,
	681, 682, 737, 683, 684, 685, 1626, 1625, 0, 0,
	0, 0, 1623, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 296, 297, 299, 298, 300, 301, 302,
	303, 0, 304, 305, 0, 0, 0, 0, 0, 686,
	0, 0, 0, 306, 0, 307, 308, 1288, 309, 310,
	311, 312, 313, 314, 315, 687, 688, 0, 316, 689,
	317, 690, 0, 691, 318, 319, 320, 321, 322, 323,
	0, 0, 0, 324, 692, 693, 694, 0, 325, 326,
	695, 0, 1590, 0, 327, 328, 329, 330, 331, 332,
	333, 334, 0, 0, 336, 337, 338, 335, 339, 0,
	340, 0, 341, 342, 343, 344, 345, 346, 0, 347,
	348, 349, 1289, 350, 351, 352, 0, 0, 0, 0,
	0, 0, 0, 353, 354, 355, 356, 357, 0, 358,
	360, 696, 697, 0, 363, 359, 361, 0, 364, 362,
	365, 0, 366, 367, 368, 0, 0, 369, 370, 371,
	0, 372, 373, 374, 0, 375, 376, 377, 0, 378,
	379, 698, 380, 381, 382, 384, 386, 383, 385, 387,
	388, 389, 390, 699, 700, 391, 0, 293, 0, 0,
	0, 0, 0, 392, 393, 394, 701, 0, 0, 0,
	395, 0, 396, 397, 398, 0, 399, 400, 0, 1290,
	401, 402, 403, 702, 703, 404, 405, 406, 407, 408,
	409, 410, 411, 412, 0, 413, 704, 0, 705, 414,
	0, 415, 416, 417, 418, 419, 420, 421, 706, 707,
	708, 510, 1292, 422, 423, 0, 424, 425, 426, 427,
	428, 0, 0, 0, 0, 429, 430, 431, 0, 1291,
	511, 432, 709, 710, 0, 711, 0, 433, 434, 1293,
	712, 1294, 435, 436, 437, 1295, 438, 0, 0, 0,
	439, 440, 441, 442, 443, 444, 0, 445, 447, 446,
	0, 448, 713, 1296, 449, 450, 1297, 0, 451, 452,
	453, 454, 455, 456, 459, 0, 0, 457, 458, 460,
	461, 0, 462, 463, 465, 468, 464, 466, 467, 469,
	482, 483, 470, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 485, 0, 484, 1298, 486, 487,
	488, 489, 490, 497, 499, 500, 495, 496, 498, 501,
	502, 504, 492, 493, 494, 1299, 503, 491, 0, 0,
	1300, 505, 506, 507, 508, 0, 714, 509, 715, 512,
	513, 0, 0, 514, 0, 515, 0, 0, 517, 518,
	519, 0, 0, 520, 521, 716, 1301, 522, 1302, 717,
	523, 524, 516, 525, 526, 527, 528, 529, 530, 531,
	532, 533, 0, 534, 535, 718, 536, 537, 538, 719,
	539, 540, 541, 720, 542, 721, 543, 544, 0, 545,
	546, 547, 0, 548, 549, 550, 551, 552, 553, 554,
	555, 722, 556, 557, 559, 558, 560, 0, 561, 0,
	562, 563, 564, 0, 0, 0, 0, 0, 565, 566,
	568, 0, 569, 570, 571, 572, 567, 573, 574, 575,
	576, 577, 0, 578, 579, 580, 1303, 581, 582, 583,
	584, 585, 723, 586, 0, 587, 588, 595, 596, 597,
	589, 590, 591, 598, 599, 600, 601, 602, 0, 604,
	605, 603, 606, 607, 608, 0, 609, 610, 592, 593,
	611, 612, 1304, 613, 614, 615, 616, 617, 618, 619,
	724, 0, 620, 0, 621, 622, 623, 624, 625, 627,
	594, 628, 633, 634, 725, 629, 630, 631, 632, 726,
	636, 637, 638, 0, 639, 640, 0, 635, 626, 0,
	641, 642, 643, 644, 645, 646, 0, 647, 648, 0,
	649, 727, 728, 729, 730, 0, 659, 0, 650, 651,
	652, 653, 731, 654, 732, 0, 655, 656, 657, 658,
	0, 660, 661, 0, 0, 662, 663, 665, 667, 668,
	664, 666, 669, 0, 670, 0, 0, 671, 672, 673,
	733, 734, 735, 0, 675, 674, 676, 677, 678, 736,
	679, 680, 1626, 1625, 0, 0, 681, 682, 737, 683,
	684, 685, 0, 0, 0, 0, 0, 0, 0, 296,
	297, 299, 298, 300, 301, 302, 303, 0, 304, 305,
	0, 0, 0, 0, 0, 686, 0, 0, 0, 306,
	0, 307, 308, 1288, 309, 310, 311, 312, 313, 314,
	315, 687, 688, 0, 316, 689, 317, 690, 0, 691,
	318, 319, 320, 321, 322, 323, 0, 0, 0, 324,
	692, 693, 694, 0, 325, 326, 695, 0, 1590, 0,
	327, 328, 329, 330, 331, 332, 333, 334, 0, 0,
	336, 337, 338, 335, 339, 0, 340, 0, 341, 342,
	343, 344, 345, 346, 0, 347, 348, 349, 1289, 350,
	351, 352, 0, 0, 0, 0, 0, 0, 0, 353,
	354, 355, 356, 357, 0, 358, 360, 696, 697, 0,
	363, 359, 361, 0, 364, 362, 365, 0, 366, 367,
	368, 0, 0, 369, 370, 371, 0, 372, 373, 374,
	0, 375, 376, 377, 0, 378, 379, 698, 380, 381,
	382, 384, 386, 383, 385, 387, 388, 389, 390, 699,
	700, 391, 0, 293, 0, 0, 0, 0, 0, 392,
	393, 394, 701, 0, 0, 0, 395, 0, 396, 397,
	398, 0, 399, 400, 0, 1290, 401, 402, 403, 702,
	703, 404, 405, 406, 407, 408, 409, 410, 411, 412,
	0, 413, 704, 0, 705, 414, 0, 415, 416, 417,
	418, 419, 420, 421, 706, 707, 708, 510, 1292, 422,
	423, 0, 424, 425, 426, 427, 428, 0, 0, 0,
	0, 429, 430, 431, 0, 1291, 511, 432, 709, 710,
	0, 711, 0, 433, 434, 1293, 712, 1294, 435, 436,
	437, 1295, 438, 0, 0, 0, 439, 440, 441, 442,
	443, 444, 0, 445, 447, 446, 0, 448, 713, 1296,
	449, 450, 1297, 0, 451, 452, 453, 454, 455, 456,
	459, 0, 0, 457, 458, 460, 461, 0, 462, 463,
	465, 468, 464, 466, 467, 469, 482, 483, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	485, 0, 484, 1298, 486, 487, 488, 489, 490, 497,
	499, 500, 495, 496, 498, 501, 502, 504, 492, 493,
	494, 1299, 503, 491, 0, 0, 1300, 505, 506, 507,
	508, 0, 714, 509, 715, 512, 513, 0, 0, 514,
	0, 515, 0, 0, 517, 518, 519, 0, 0, 520,
	521, 716, 1301, 522, 1302, 717, 523, 524, 516, 525,
	526, 527, 528, 529, 530, 531, 532, 533, 0, 534,
	535, 718, 536, 537, 538, 719, 539, 540, 541, 720,
	542, 721, 543, 544, 0, 545, 546, 547, 0, 548,
	549, 550, 551, 552, 553, 554, 555, 722, 556, 557,
	559, 558, 560, 0, 561, 0, 562, 563, 564, 0,
	0, 0, 0, 0, 565, 566, 568, 0, 569, 570,
	571, 572, 567, 573, 574, 575, 576, 577, 0, 578,
	579, 580, 1303, 581, 582, 583, 584, 585, 723, 586,
	0, 587, 588, 595, 596, 597, 589, 590, 591, 598,
	599, 600, 601, 602, 0, 604, 605, 603, 606, 607,
	608, 0, 609, 610, 592, 593, 611, 612, 1304, 613,
	614, 615, 616, 617, 618, 619, 724, 0, 620, 0,
	621, 622, 623, 624, 625, 627, 594, 628, 633, 634,
	725, 629, 630, 631, 632, 726, 636, 637, 638, 0,
	639, 640, 0, 635, 626, 0, 641, 642, 643, 644,
	645, 646, 0, 647, 648, 0, 649, 727, 728, 729,
	730, 0, 659, 0, 650, 651, 652, 653, 731, 654,
	732, 0, 655, 656, 657, 658, 0, 660, 661, 0,
	0, 662, 663, 665, 667, 668, 664, 666, 669, 0,
	670, 0, 0, 671, 672, 673, 733, 734, 735, 0,
	675, 674, 676, 677, 678, 736, 679, 680, 1626, 0,
	0, 0, 681, 682, 737, 683, 684, 685, 0, 0,
	0, 0, 0, 0, 0, 296, 297, 299, 298, 300,
	301, 302, 303, 0, 304, 305, 0, 0, 0, 0,
	0, 686, 0, 0, 0, 306, 0, 307, 308, 1288,
	309, 310, 311, 312, 313, 314, 315, 687, 688, 0,
	316, 689, 317, 690, 0, 691, 318, 319, 320, 321,
	322, 323, 0, 0, 0, 324, 692, 693, 694, 0,
	325, 326, 695, 0, 1590, 0, 327, 328, 329, 330,
	331, 332, 333, 334, 0, 0, 336, 337, 338, 335,
	339, 0, 340, 0, 341, 342, 343, 344, 345, 346,
	0, 347, 348, 349, 1289, 350, 351, 352, 0, 0,
	0, 0, 0, 0, 0, 353, 354, 355, 356, 357,
	0, 358, 360, 696, 697, 0, 363, 359, 361, 0,
	364, 362, 365, 0, 366, 367, 368, 0, 0, 369,
	370, 371, 0, 372, 373, 374, 0, 375, 376, 377,
	0, 378, 379, 698, 380, 381, 382, 384, 386, 383,
	385, 387, 388, 389, 390, 699, 700, 391, 0, 293,
	0, 0, 0, 0, 0, 392, 393, 394, 701, 0,
	0, 0, 395, 0, 396, 397, 398, 0, 399, 400,
	0, 1290, 401, 402, 403, 702, 703, 404, 405, 406,
	407, 408, 409, 410, 411, 412, 0, 413, 704, 0,
	705, 414, 0, 415, 416, 417, 418, 419, 420, 421,
	706, 707, 708, 510, 1292, 422, 423, 0, 424, 425,
	426, 427, 428, 0, 0, 0, 0, 429, 430, 431,
	0, 1291, 511, 432, 709, 710, 0, 711, 0, 433,
	434, 1293, 712, 1294, 435, 436, 437, 1295, 438, 0,
	0, 0, 439, 440, 441, 442, 443, 444, 0, 445,
	447, 446, 0, 448, 713, 1296, 449, 450, 1297, 0,
	451, 452, 453, 454, 455, 456, 459, 0, 0, 457,
	458, 460, 461, 0, 462, 463, 465, 468, 464, 466,
	467, 469, 482, 483, 470, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 485, 0, 484, 1298,
	486, 487, 488, 489, 490, 497, 499, 500, 495, 496,
	498, 501, 502, 504, 492, 493, 494, 1299, 503, 491,
	0, 0, 1300, 505, 506, 507, 508, 0, 714, 509,
	715, 512, 513, 0, 0, 514, 0, 515, 0, 0,
	517, 518, 519, 0, 0, 520, 521, 716, 1301, 522,
	1302, 717, 523, 524, 516, 525, 526, 527, 528, 529,
	530, 531, 532, 533, 0, 534, 535, 718, 536, 537,
	538, 719, 539, 540, 541, 720, 542, 721, 543, 544,
	0, 545, 546, 547, 0, 548, 549, 550, 551, 552,
	553, 554, 555, 722, 556, 557, 559, 558, 560, 0,
	561, 0, 562, 563, 564, 0, 0, 0, 0, 0,
	565, 566, 568, 0, 569, 570, 571, 572, 567, 573,
	574, 575, 576, 577, 0, 578, 579, 580, 1303, 581,
	582, 583, 584, 585, 723, 586, 0, 587, 588, 595,
	596, 597, 589, 590, 591, 598, 599, 600, 601, 602,
	0, 604, 605, 603, 606, 607, 608, 0, 609, 610,
	592, 593, 611, 612, 1304, 613, 614, 615, 616, 617,
	618, 619, 724, 0, 620, 0, 621, 622, 623, 624,
	625, 627, 594, 628, 633, 634, 725, 629, 630, 631,
	632, 726, 636, 637, 638, 0, 639, 640, 0, 635,
	626, 0, 641, 642, 643, 644, 645, 646, 0, 647,
	648, 0, 649, 727, 728, 729, 730, 0, 659, 0,
	650, 651, 652, 653, 731, 654, 732, 0, 655, 656,
	657, 658, 0, 660, 661, 0, 0, 662, 663, 665,
	667, 668, 664, 666, 669, 0, 670, 0, 0, 671,
	672, 673, 733, 734, 735, 0, 675, 674, 676, 677,
	678, 736, 679, 680, 290, 0, 0, 0, 681, 682,
	737, 683, 684, 685, 0, 0, 0, 0, 0, 0,
	0, 296, 297, 299, 298, 300, 301, 302, 303, 0,
	304, 305, 0, 0, 0, 0, 0, 686, 0, 0,
	0, 306, 0, 307, 308, 0, 309, 310, 311, 312,
	313, 314, 315, 687, 688, 0, 316, 689, 317, 690,
	0, 691, 318, 319, 320, 321, 322, 323, 0, 0,
	0, 324, 692, 693, 694, 3076, 325, 326, 695, 0,
	0, 0, 327, 328, 329, 330, 331, 332, 333, 334,
	0, 0, 336, 337, 338, 335, 339, 3834, 340, 0,
	341, 342, 343, 344, 345, 346, 0, 347, 348, 349,
	0, 350, 351, 352, 0, 0, 0, 0, 0, 0,
	0, 353, 354, 355, 356, 357, 0, 358, 360, 696,
	697, 0, 363, 359, 361, 0, 364, 362, 365, 0,
	366, 367, 368, 0, 0, 369, 370, 371, 0, 372,
	373, 374, 0, 375, 376, 377, 0, 3080, 379, 698,
	380, 381, 382, 384, 386, 383, 385, 387, 388, 389,
	390, 699, 700, 391, 0, 3833, 0, 0, 0, 0,
	0, 392, 393, 394, 701, 0, 0, 0, 395, 0,
	396, 397, 398, 3079, 399, 400, 0, 0, 401, 402,
	403, 702, 703, 404, 405, 406, 407, 408, 409, 410,
	411, 412, 0, 413, 704, 0, 705, 414, 0, 415,
	416, 417, 418, 419, 420, 421, 706, 707, 708, 510,
	0, 422, 423, 0, 424, 425, 426, 427, 428, 0,
	0, 0, 3830, 429, 430, 431, 0, 0, 511, 432,
	709, 710, 0, 711, 0, 433, 3832, 0, 712, 0,
	435, 436, 437, 0, 438, 0, 0, 0, 439, 440,
	441, 442, 443, 444, 0, 445, 447, 446, 0, 448,
	713, 0, 449, 450, 3829, 0, 451, 452, 453, 454,
	455, 456, 459, 0, 0, 457, 458, 460, 461, 0,
	462, 463, 465, 468, 464, 466, 467, 469, 482, 483,
	470, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 485, 0, 484, 0, 486, 487, 488, 489,
	490, 497, 499, 500, 495, 496, 498, 501, 502, 504,
	492, 493, 494, 0, 503, 491, 0, 0, 0, 505,
	506, 507, 508, 0, 714, 509, 715, 512, 513, 0,
	0, 514, 0, 515, 0, 0, 517, 518, 519, 0,
	0, 520, 521, 716, 0, 522, 0, 717, 523, 524,
	516, 525, 526, 527, 528, 529, 530, 531, 532, 533,
	0, 534, 535, 718, 536, 537, 538, 719, 539, 540,
	541, 720, 542, 721, 543, 544, 3078, 545, 546, 547,
	0, 548, 549, 550, 551, 552, 553, 554, 555, 722,
	556, 557, 559, 558, 560, 0, 561, 0, 562, 563,
	564, 0, 0, 0, 0, 0, 565, 566, 568, 0,
	569, 570, 571, 572, 567, 573, 574, 575, 576, 577,
	0, 578, 579, 580, 0, 581, 582, 583, 584, 585,
	723, 586, 0, 587, 588, 595, 596, 597, 589, 590,
	591, 598, 599, 600, 601, 602, 0, 604, 605, 603,
	606, 607, 608, 0, 609, 610, 592, 593, 611, 612,
	0, 613, 614, 615, 616, 617, 618, 619, 724, 0,
	620, 0, 621, 622, 623, 624, 625, 627, 594, 628,
	633, 634, 725, 629, 630, 631, 632, 726, 636, 637,
	638, 0, 639, 640, 0, 635, 626, 0, 641, 642,
	643, 644, 645, 646, 0, 647, 648, 0, 649, 727,
	728, 729, 730, 0, 659, 0, 650, 651, 652, 653,
	731, 654, 732, 0, 655, 656, 657, 658, 0, 660,
	661, 0, 3831, 662, 663, 665, 667, 668, 664, 666,
	669, 0, 670, 0, 0, 671, 672, 673, 733, 734,
	735, 0, 675, 674, 676, 677, 678, 736, 679, 680,
	290, 0, 0, 0, 681, 682, 737, 683, 684, 685,
	0, 0, 0, 0, 0, 0, 0, 296, 297, 299,
	298, 300, 301, 302, 303, 0, 304, 305, 0, 0,
	0, 0, 0, 686, 0, 0, 0, 306, 0, 307,
	308, 0, 309, 310, 311, 312, 313, 314, 315, 687,
	688, 0, 316, 689, 317, 690, 0, 691, 318, 319,
	320, 321, 322, 323, 0, 0, 0, 324, 692, 693,
	694, 3076, 325, 326, 695, 0, 0, 3070, 327, 328,
	329, 330, 331, 332, 333, 334, 0, 0, 336, 337,
	338, 335, 339, 3072, 340, 0, 341, 342, 343, 344,
	345, 346, 0, 347, 348, 349, 0, 350, 351, 352,
	0, 0, 0, 0, 0, 0, 0, 353, 354, 355,
	356, 357, 0, 358, 360, 696, 697, 0, 363, 359,
	361, 0, 364, 362, 365, 0, 366, 367, 368, 0,
	0, 369, 370, 371, 0, 372, 373, 374, 0, 375,
	376, 377, 0, 3080, 379, 698, 380, 381, 382, 384,
	386, 383, 385, 387, 388, 389, 390, 699, 700, 391,
	0, 0, 0, 0, 0, 0, 0, 392, 393, 394,
	701, 0, 0, 0, 395, 0, 396, 397, 398, 3079,
	399, 400, 0, 0, 401, 402, 403, 702, 703, 404,
	405, 406, 407, 408, 409, 410, 411, 412, 0, 413,
	704, 0, 705, 414, 0, 415, 416, 417, 418, 419,
	420, 421, 3069, 707, 708, 510, 0, 422, 423, 0,
	424, 425, 426, 427, 428, 0, 0, 0, 0, 429,
	430, 431, 0, 0, 511, 432, 709, 710, 0, 711,
	0, 433, 434, 0, 712, 0, 435, 436, 437, 0,
	438, 0, 0, 0, 439, 440, 441, 442, 443, 444,
	0, 445, 447, 446, 0, 448, 713, 0, 449, 450,
	0, 0, 451, 452, 453, 454, 455, 456, 459, 0,
	0, 457, 458, 460, 461, 0, 462, 463, 465, 468,
	464, 466, 467, 469, 482, 483, 470, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 485, 0,
	484, 0, 486, 487, 488, 489, 490, 497, 499, 500,
	495, 496, 498, 501, 502, 504, 492, 493, 494, 0,
	503, 491, 0, 0, 0, 505, 506, 507, 508, 0,
	714, 509, 715, 512, 513, 0, 0, 514, 0, 515,
	0, 0, 517, 518, 519, 0, 0, 520, 521, 716,
	0, 522, 0, 717, 523, 524, 516, 525, 526, 527,
	528, 529, 530, 531, 532, 533, 0, 534, 535, 718,
	536, 537, 538, 719, 539, 540, 541, 720, 542, 721,
	543, 544, 3078, 545, 546, 547, 0, 548, 549, 550,
	551, 552, 553, 554, 555, 722, 556, 557, 559, 558,
	560, 0, 561, 0, 562, 563, 564, 0, 0, 0,
	0, 0, 565, 566, 568, 0, 569, 570, 571, 572,
	567, 573, 574, 575, 576, 577, 0, 578, 579, 580,
	0, 581, 582, 583, 584, 585, 723, 586, 0, 587,
	588, 595, 596, 597, 589, 590, 591, 598, 599, 600,
	601, 602, 0, 604, 605, 603, 606, 607, 608, 0,
	609, 610, 592, 593, 611, 612, 0, 613, 614, 615,
	616, 617, 618, 619, 724, 0, 620, 0, 621, 622,
	623, 624, 625, 627, 594, 628, 633, 634, 725, 629,
	630, 631, 632, 726, 636, 637, 638, 0, 639, 640,
	0, 635, 626, 0, 641, 642, 643, 644, 645, 646,
	0, 647, 648, 0, 649, 727, 728, 729, 730, 0,
	659, 0, 650, 651, 652, 653, 731, 654, 732, 0,
	655, 656, 657, 658, 0, 660, 661, 0, 3077, 662,
	663, 665, 667, 668, 664, 666, 669, 0, 670, 0,
	0, 671, 672, 673, 733, 734, 735, 0, 675, 674,
	676, 677, 678, 736, 679, 680, 1884, 0, 290, 0,
	681, 682, 737, 683, 684, 685, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 296, 297, 299, 298, 300,
	301, 302, 303, 1883, 304, 305, 0, 0, 0, 0,
	0, 686, 0, 0, 0, 306, 0, 307, 308, 0,
	309, 310, 311, 312, 313, 314, 315, 687, 688, 0,
	316, 689, 317, 690, 0, 691, 318, 319, 320, 321,
	322, 323, 0, 0, 0, 324, 692, 693, 694, 0,
	325, 326, 695, 0, 0, 0, 327, 328, 329, 330,
	331, 332, 333, 334, 0, 0, 336, 337, 338, 335,
	339, 0, 340, 0, 341, 342, 343, 344, 345, 346,
	0, 347, 348, 349, 0, 350, 351, 352, 0, 0,
	0, 0, 0, 0, 0, 353, 354, 355, 1882, 357,
	0, 358, 360, 696, 697, 0, 363, 359, 361, 0,
	364, 362, 365, 0, 366, 367, 368, 0, 0, 369,
	370, 371, 0, 372, 373, 374, 0, 375, 376, 377,
	0, 378, 379, 698, 380, 381, 382, 384, 386, 383,
	385, 387, 388, 389, 390, 699, 700, 391, 0, 293,
	0, 0, 0, 0, 0, 392, 393, 394, 701, 0,
	0, 0, 395, 0, 396, 397, 398, 0, 399, 400,
	0, 0, 401, 402, 403, 702, 703, 404, 405, 406,
	407, 408, 409, 410, 411, 412, 0, 413, 704, 0,
	705, 414, 0, 415, 416, 417, 418, 419, 420, 421,
	706, 707, 708, 510, 0, 422, 423, 0, 424, 425,
	426, 427, 428, 0, 0, 0, 294, 429, 430, 431,
	0, 0, 511, 432, 709, 710, 0, 711, 0, 433,
	434, 0, 712, 0, 435, 436, 437, 0, 438, 0,
	0, 0, 439, 440, 441, 442, 443, 444, 0, 445,
	447, 446, 0, 448, 713, 0, 449, 450, 0, 0,
	451, 452, 453, 454, 455, 456, 459, 0, 0, 457,
	458, 460, 461, 0, 462, 463, 465, 468, 464, 466,
	467, 469, 482, 483, 470, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 485, 0, 484, 0,
	486, 487, 488, 489, 490, 497, 499, 500, 495, 496,
	498, 501, 502, 504, 492, 493, 494, 0, 503, 491,
	0, 295, 0, 505, 506, 507, 508, 0, 714, 509,
	715, 512, 513, 0, 0, 514, 0, 515, 0, 0,
	517, 518, 519, 0, 0, 520, 521, 716, 0, 522,
	0, 717, 523, 524, 516, 525, 526, 527, 528, 529,
	530, 531, 532, 533, 0, 534, 535, 718, 536, 537,
	538, 719, 539, 540, 541, 720, 542, 721, 543, 544,
	0, 545, 546, 547, 0, 548, 549, 550, 551, 552,
	553, 554, 555, 722, 556, 557, 559, 558, 560, 0,
	561, 0, 562, 563, 564, 0, 0, 0, 0, 0,
	565, 566, 568, 0, 569, 570, 571, 572, 567, 573,
	574, 575, 576, 577, 0, 578, 579, 580, 0, 581,
	582, 583, 584, 585, 723, 586, 0, 587, 588, 595,
	596, 597, 1885, 590, 591, 598, 599, 600, 601, 602,
	0, 1881, 605, 603, 606, 607, 608, 0, 609, 610,
	592, 593, 611, 612, 0, 613, 614, 615, 616, 617,
	618, 619, 724, 0, 620, 0, 621, 622, 623, 624,
	625, 627, 594, 628, 633, 634, 725, 629, 630, 631,
	632, 726, 636, 637, 638, 0, 639, 640, 0, 635,
	626, 1879, 641, 642, 643, 644, 645, 646, 0, 647,
	648, 0, 649, 727, 728, 729, 730, 0, 659, 0,
	650, 651, 652, 653, 731, 654, 732, 0, 655, 656,
	657, 658, 0, 660, 661, 0, 0, 662, 663, 665,
	667, 668, 664, 666, 669, 0, 670, 0, 0, 671,
	672, 673, 733, 734, 735, 0, 1880, 674, 676, 677,
	678, 736, 679, 680, 1594, 0, 290, 0, 681, 682,
	737, 683, 684, 685, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 296, 297, 299, 298, 300, 301, 302,
	303, 0, 304, 305, 0, 0, 0, 0, 0, 686,
	0, 0, 0, 306, 0, 307, 308, 0, 309, 310,
	311, 312, 313, 314, 315, 687, 688, 0, 316, 689,
	317, 690, 0, 691, 318, 319, 320, 321, 322, 323,
	0, 0, 0, 324, 692, 693, 694, 0, 325, 326,
	695, 0, 0, 0, 327, 328, 329, 330, 331, 332,
	333, 334, 0, 0, 336, 337, 338, 335, 339, 0,
	340, 0, 341, 342, 343, 344, 345, 346, 0, 347,
	348, 349, 0, 350, 351, 352, 0, 0, 0, 0,
	0, 0, 0, 353, 354, 355, 356, 357, 0, 358,
	360, 696, 697, 0, 363, 359, 361, 0, 364, 362,
	365, 0, 366, 367, 368, 0, 0, 369, 370, 371,
	0, 372, 373, 374, 0, 375, 376, 377, 0, 378,
	379, 698, 380, 381, 382, 384, 386, 383, 385, 387,
	388, 389, 390, 699, 700, 391, 0, 293, 0, 0,
	0, 0, 0, 392, 393, 394, 701, 0, 0, 0,
	395, 0, 396, 397, 398, 0, 399, 400, 0, 0,
	401, 402, 403, 702, 703, 404, 405, 406, 407, 408,
	409, 410, 411, 412, 0, 413, 704, 0, 705, 414,
	0, 415, 416, 417, 418, 419, 420, 421, 1596, 707,
	708, 510, 0, 422, 423, 0, 424, 425, 426, 427,
	428, 0, 0, 0, 294, 429, 430, 431, 0, 0,
	511, 432, 709, 710, 0, 711, 0, 433, 434, 0,
	712, 0, 435, 436, 437, 0, 438, 0, 0, 0,
	439, 440, 441, 442, 443, 444, 0, 445, 447, 446,
	0, 448, 713, 0, 449, 450, 0, 0, 451, 452,
	453, 454, 455, 456, 459, 0, 0, 457, 458, 460,
	461, 0, 462, 463, 465, 468, 464, 466, 467, 469,
	482, 483, 470, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 485, 0, 484, 0, 486, 487,
	488, 489, 490, 497, 499, 500, 495, 496, 498, 501,
	502, 504, 492, 493, 494, 0, 503, 491, 0, 295,
	0, 505, 506, 507, 508, 0, 714, 509, 715, 512,
	513, 0, 0, 514, 0, 515, 0, 1339, 517, 518,
	519, 0, 0, 520, 521, 716, 0, 522, 0, 717,
	523, 524, 516, 525, 526, 527, 528, 529, 530, 531,
	532, 533, 0, 534, 535, 718, 536, 537, 538, 719,
	539, 540, 541, 720, 542, 721, 543, 544, 0, 545,
	546, 547, 0, 548, 549, 550, 551, 552, 553, 554,
	555, 722, 556, 557, 559, 558, 560, 0, 561, 0,
	562, 563, 564, 0, 0, 0, 0, 0, 565, 566,
	568, 0, 569, 570, 571, 572, 567, 573, 574, 575,
	576, 577, 0, 578, 579, 580, 0, 581, 582, 583,
	584, 585, 723, 586, 0, 587, 588, 595, 596, 597,
	589, 590, 591, 598, 599, 600, 601, 602, 0, 604,
	605, 603, 606, 607, 608, 0, 609, 610, 592, 593,
	611, 612, 0, 613, 614, 615, 616, 617, 618, 619,
	724, 0, 620, 0, 621, 622, 623, 624, 625, 627,
	594, 628, 633, 634, 725, 629, 630, 631, 632, 726,
	636, 637, 638, 0, 639, 640, 0, 635, 626, 0,
	641, 642, 643, 644, 645, 646, 0, 647, 648, 0,
	649, 727, 728, 729, 730, 0, 659, 0, 650, 651,
	652, 653, 731, 654, 732, 0, 655, 656, 657, 658,
	0, 660, 661, 0, 0, 662, 663, 665, 667, 668,
	664, 666, 669, 0, 670, 0, 0, 671, 672, 673,
	733, 734, 735, 0, 675, 674, 676, 677, 678, 736,
	679, 680, 1591, 0, 290, 0, 681, 682, 737, 683,
	684, 685, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 296, 297, 299, 298, 300, 301, 302, 303, 0,
	304, 305, 0, 0, 0, 0, 0, 686, 0, 0,
	0, 306, 0, 307, 308, 0, 309, 310, 311, 312,
	313, 314, 315, 687, 688, 0, 316, 689, 317, 690,
	0, 691, 318, 319, 320, 321, 322, 323, 0, 0,
	0, 324, 692, 693, 694, 0, 325, 326, 695, 0,
	0, 0, 327, 328, 329, 330, 331, 332, 333, 334,
	0, 0, 336, 337, 338, 335, 339, 0, 340, 0,
	341, 342, 343, 344, 345, 346, 0, 347, 348, 349,
	0, 350, 351, 352, 0, 0, 0, 0, 0, 0,
	0, 353, 354, 355, 356, 357, 0, 358, 360, 696,
	697, 0, 363, 359, 361, 0, 364, 362, 365, 0,
	366, 367, 368, 0, 0, 369, 370, 371, 0, 372,
	373, 374, 0, 375, 376, 377, 0, 378, 379, 698,
	380, 381, 382, 384, 386, 383, 385, 387, 388, 389,
	390, 699, 700, 391, 0, 293, 0, 0, 0, 0,
	0, 392, 393, 394, 701, 0, 0, 0, 395, 0,
	396, 397, 398, 0, 399, 400, 0, 0, 401, 402,
	403, 702, 703, 404, 405, 406, 407, 408, 409, 410,
	411, 412, 0, 413, 704, 0, 705, 414, 0, 415,
	416, 417, 418, 419, 420, 421, 1593, 707, 708, 510,
	0, 422, 423, 0, 424, 425, 426, 427, 428, 0,
	0, 0, 294, 429, 430, 431, 0, 0, 511, 432,
	709, 710, 0, 711, 0, 433, 434, 0, 712, 0,
	435, 436, 437, 0, 438, 0, 0, 0, 439, 440,
	441, 442, 443, 444, 0, 445, 447, 446, 0, 448,
	713, 0, 449, 450, 0, 0, 451, 452, 453, 454,
	455, 456, 459, 0, 0, 457, 458, 460, 461, 0,
	462, 463, 465, 468, 464, 466, 467, 469, 482, 483,
	470, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 485, 0, 484, 0, 486, 487, 488, 489,
	490, 497, 499, 500, 495, 496, 498, 501, 502, 504,
	492, 493, 494, 0, 503, 491, 0, 295, 0, 505,
	506, 507, 508, 0, 714, 509, 715, 512, 513, 0,
	0, 514, 0, 515, 0, 1339, 517, 518, 519, 0,
	0, 520, 521, 716, 0, 522, 0, 717, 523, 524,
	516, 525, 526, 527, 528, 529, 530, 531, 532, 533,
	0, 534, 535, 718, 536, 537, 538, 719, 539, 540,
	541, 720, 542, 721, 543, 544, 0, 545, 546, 547,
	0, 548, 549, 550, 551, 552, 553, 554, 555, 722,
	556, 557, 559, 558, 560, 0, 561, 0, 562, 563,
	564, 0, 0, 0, 0, 0, 565, 566, 568, 0,
	569, 570, 571, 572, 567, 573, 574, 575, 576, 577,
	0, 578, 579, 580, 0, 581, 582, 583, 584, 585,
	723, 586, 0, 587, 588, 595, 596, 597, 589, 590,
	591, 598, 599, 600, 601, 602, 0, 604, 605, 603,
	606, 607, 608, 0, 609, 610, 592, 593, 611, 612,
	0, 613, 614, 615, 616, 617, 618, 619, 724, 0,
	620, 0, 621, 622, 623, 624, 625, 627, 594, 628,
	633, 634, 725, 629, 630, 631, 632, 726, 636, 637,
	638, 0, 639, 640, 0, 635, 626, 0, 641, 642,
	643, 644, 645, 646, 0, 647, 648, 0, 649, 727,
	728, 729, 730, 0, 659, 0, 650, 651, 652, 653,
	731, 654, 732, 0, 655, 656, 657, 658, 0, 660,
	661, 0, 0, 662, 663, 665, 667, 668, 664, 666,
	669, 0, 670, 0, 0, 671, 672, 673, 733, 734,
	735, 0, 675, 674, 676, 677, 678, 736, 679, 680,
	1497, 0, 290, 0, 681, 682, 737, 683, 684, 685,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 296,
	297, 299, 298, 300, 301, 302, 303, 0, 304, 305,
	0, 0, 0, 0, 0, 686, 0, 0, 0, 306,
	0, 307, 308, 0, 309, 310, 311, 312, 313, 314,
	315, 687, 688, 0, 316, 689, 317, 690, 0, 691,
	318, 319, 320, 321, 322, 323, 0, 0, 0, 324,
	692, 693, 694, 0, 325, 326, 695, 0, 0, 0,
	327, 328, 329, 330, 331, 332, 333, 334, 0, 0,
	336, 337, 338, 335, 339, 0, 340, 0, 341, 342,
	343, 344, 345, 346, 0, 347, 348, 349, 0, 350,
	351, 352, 0, 0, 0, 0, 0, 0, 0, 353,
	354, 355, 356, 357, 0, 358, 360, 696, 697, 0,
	363, 359, 361, 0, 364, 362, 365, 0, 366, 367,
	368, 0, 0, 369, 370, 371, 0, 372, 373, 374,
	0, 375, 376, 377, 0, 378, 379, 698, 380, 381,
	382, 384, 386, 383, 385, 387, 388, 389, 390, 699,
	700, 391, 0, 293, 0, 0, 0, 0, 0, 392,
	393, 394, 701, 0, 0, 0, 395, 0, 396, 397,
	398, 0, 399, 400, 0, 0, 401, 402, 403, 702,
	703, 404, 405, 406, 407, 408, 409, 410, 411, 412,
	0, 413, 704, 0, 705, 414, 0, 415, 416, 417,
	418, 419, 420, 421, 1499, 707, 708, 510, 0, 422,
	423, 0, 424, 425, 426, 427, 428, 0, 0, 0,
	294, 429, 430, 431, 0, 0, 511, 432, 709, 710,
	0, 711, 0, 433, 434, 0, 712, 0, 435, 436,
	437, 0, 438, 0, 0, 0, 439, 440, 441, 442,
	443, 444, 0, 445, 447, 446, 0, 448, 713, 0,
	449, 450, 0, 0, 451, 452, 453, 454, 455, 456,
	459, 0, 0, 457, 458, 460, 461, 0, 462, 463,
	465, 468, 464, 466, 467, 469, 482, 483, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	485, 0, 484, 0, 486, 487, 488, 489, 490, 497,
	499, 500, 495, 496, 498, 501, 502, 504, 492, 493,
	494, 0, 503, 491, 0, 295, 0, 505, 506, 507,
	508, 0, 714, 509, 715, 512, 513, 0, 0, 514,
	0, 515, 0, 1339, 517, 518, 519, 0, 0, 520,
	521, 716, 0, 522, 0, 717, 523, 524, 516, 525,
	526, 527, 528, 529, 530, 531, 532, 533, 0, 534,
	535, 718, 536, 537, 538, 719, 539, 540, 541, 720,
	542, 721, 543, 544, 0, 545, 546, 547, 0, 548,
	549, 550, 551, 552, 553, 554, 555, 722, 556, 557,
	559, 558, 560, 0, 561, 0, 562, 563, 564, 0,
	0, 0, 0, 0, 565, 566, 568, 0, 569, 570,
	571, 572, 567, 573, 574, 575, 576, 577, 0, 578,
	579, 580, 0, 581, 582, 583, 584, 585, 723, 586,
	0, 587, 588, 595, 596, 597, 589, 590, 591, 598,
	599, 600, 601, 602, 0, 604, 605, 603, 606, 607,
	608, 0, 609, 610, 592, 593, 611, 612, 0, 613,
	614, 615, 616, 617, 618, 619, 724, 0, 620, 0,
	621, 622, 623, 624, 625, 627, 594, 628, 633, 634,
	725, 629, 630, 631, 632, 726, 636, 637, 638, 0,
	639, 640, 0, 635, 626, 0, 641, 642, 643, 644,
	645, 646, 0, 647, 648, 0, 649, 727, 728, 729,
	730, 0, 659, 0, 650, 651, 652, 653, 731, 654,
	732, 0, 655, 656, 657, 658, 0, 660, 661, 0,
	0, 662, 663, 665, 667, 668, 664, 666, 669, 0,
	670, 0, 0, 671, 672, 673, 733, 734, 735, 0,
	675, 674, 676, 677, 678, 736, 679, 680, 770, 0,
	290, 0, 681, 682, 737, 683, 684, 685, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 296, 297, 299,
	298, 300, 769, 302, 303, 758, 304, 305, 0, 0,
	0, 0, 0, 686, 0, 0, 0, 306, 0, 307,
	308, 0, 309, 310, 311, 312, 313, 314, 315, 687,
	688, 0, 316, 689, 317, 690, 0, 691, 318, 319,
	320, 321, 322, 323, 0, 0, 0, 324, 692, 693,
	694, 0, 325, 326, 695, 0, 0, 0, 327, 328,
	329, 330, 331, 332, 333, 334, 0, 0, 336, 337,
	338, 335, 339, 0, 340, 0, 341, 342, 343, 344,
	345, 346, 761, 347, 348, 349, 0, 350, 351, 352,
	0, 0, 0, 0, 0, 0, 0, 353, 354, 355,
	356, 357, 0, 358, 360, 696, 697, 0, 363, 359,
	361, 0, 364, 362, 365, 0, 366, 367, 368, 0,
	0, 369, 370, 371, 0, 372, 373, 374, 0, 375,
	376, 377, 0, 378, 379, 698, 380, 381, 382, 384,
	386, 383, 385, 387, 388, 389, 390, 699, 700, 391,
	0, 0, 0, 0, 0, 0, 0, 392, 393, 394,
	701, 0, 0, 0, 395, 0, 396, 397, 398, 0,
	399, 400, 0, 0, 401, 402, 403, 702, 703, 404,
	405, 406, 407, 408, 409, 410, 411, 412, 767, 413,
	704, 0, 705, 414, 0, 415, 416, 417, 418, 419,
	420, 421, 706, 707, 708, 510, 0, 422, 423, 0,
	424, 425, 426, 427, 428, 0, 0, 0, 0, 429,
	430, 431, 0, 0, 511, 432, 709, 710, 0, 711,
	0, 433, 434, 0, 712, 0, 435, 436, 437, 0,
	438, 0, 0, 0, 439, 440, 441, 442, 443, 444,
	0, 445, 447, 446, 0, 448, 713, 0, 449, 450,
	0, 0, 451, 452, 453, 454, 455, 456, 459, 0,
	0, 457, 458, 460, 461, 0, 462, 463, 465, 468,
	464, 466, 467, 469, 482, 483, 470, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 485, 0,
	484, 0, 486, 487, 488, 489, 490, 497, 499, 500,
	495, 496, 498, 501, 502, 504, 492, 493, 494, 0,
	503, 491, 0, 0, 0, 505, 506, 507, 508, 0,
	714, 509, 715, 512, 513, 0, 0, 514, 0, 515,
	0, 0, 517, 518, 519, 0, 0, 520, 521, 716,
	0, 522, 0, 717, 523, 524, 516, 525, 526, 527,
	528, 529, 530, 531, 532, 533, 0, 534, 535, 718,
	536, 537, 538, 719, 539, 540, 541, 720, 542, 721,
	543, 544, 0, 545, 546, 547, 0, 548, 549, 550,
	551, 552, 553, 554, 555, 722, 556, 557, 559, 558,
	560, 0, 561, 0, 562, 563, 564, 0, 0, 0,
	0, 0, 565, 566, 568, 0, 569, 570, 571, 572,
	567, 573, 574, 575, 576, 577, 0, 578, 579, 580,
	0, 581, 582, 583, 584, 585, 723, 586, 0, 587,
	588, 595, 596, 597, 589, 590, 591, 598, 599, 600,
	601, 602, 763, 604, 605, 603, 606, 607, 608, 0,
	609, 610, 592, 593, 611, 612, 0, 613, 614, 615,
	616, 617, 618, 619, 724, 0, 620, 0, 621, 622,
	623, 624, 625, 627, 594, 628, 633, 634, 725, 629,
	630, 631, 632, 726, 636, 637, 638, 0, 639, 640,
	0, 635, 626, 0, 641, 642, 643, 644, 645, 646,
	0, 647, 648, 0, 649, 727, 728, 729, 730, 0,
	659, 0, 650, 651, 652, 653, 731, 654, 732, 0,
	655, 656, 657, 658, 0, 660, 661, 0, 0, 662,
	663, 665, 667, 668, 664, 666, 669, 0, 670, 0,
	0, 671, 672, 673, 733, 734, 735, 0, 675, 674,
	676, 677, 678, 736, 679, 680, 757, 0, 290, 0,
	681, 682, 737, 683, 684, 685, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 296, 297, 299, 298, 300,
	301, 302, 303, 758, 304, 305, 0, 0, 0, 0,
	0, 686, 0, 0, 0, 306, 0, 307, 308, 0,
	309, 310, 311, 312, 313, 314, 315, 687, 688, 0,
	316, 689, 317, 690, 0, 691, 318, 319, 320, 321,
	322, 323, 0, 0, 0, 324, 692, 693, 694, 0,
	325, 326, 695, 0, 0, 0, 327, 328, 329, 330,
	331, 332, 333, 334, 0, 0, 336, 337, 338, 335,
	339, 0, 340, 0, 341, 342, 343, 344, 345, 346,
	761, 347, 348, 349, 0, 350, 351, 352, 0, 0,
	0, 0, 0, 0, 0, 353, 354, 355, 356, 357,
	0, 358, 360, 696, 697, 0, 363, 359, 361, 0,
	364, 362, 365, 0, 366, 367, 368, 0, 0, 369,
	370, 371, 0, 372, 373, 374, 0, 375, 376, 377,
	0, 378, 379, 698, 380, 381, 382, 384, 386, 383,
	385, 387, 388, 389, 390, 699, 700, 391, 0, 0,
	0, 0, 0, 0, 0, 392, 393, 394, 701, 0,
	0, 0, 395, 0, 396, 397, 398, 0, 399, 400,
	0, 0, 401, 402, 403, 702, 703, 404, 405, 406,
	407, 408, 409, 410, 411, 412, 762, 413, 704, 0,
	705, 414, 0, 415, 416, 417, 418, 419, 420, 421,
	706, 707, 708, 510, 0, 422, 423, 0, 424, 425,
	426, 427, 428, 0, 0, 0, 0, 429, 430, 431,
	0, 0, 511, 432, 709, 710, 0, 711, 0, 433,
	434, 0, 712, 0, 435, 436, 437, 0, 438, 0,
	0, 0, 439, 440, 441, 442, 443, 444, 0, 445,
	447, 446, 0, 448, 713, 0, 449, 450, 0, 0,
	451, 452, 453, 454, 455, 456, 459, 0, 0, 457,
	458, 460, 461, 0, 462, 463, 465, 468, 464, 466,
	467, 469, 482, 483, 470, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 485, 0, 484, 0,
	486, 487, 488, 489, 490, 497, 499, 500, 495, 496,
	498, 501, 502, 504, 492, 493, 494, 0, 503, 491,
	0, 0, 0, 505, 506, 507, 508, 0, 714, 509,
	715, 512, 513, 0, 0, 514, 0, 515, 0, 0,
	517, 518, 519, 0, 0, 520, 521, 716, 0, 522,
	0, 717, 523, 524, 516, 525, 526, 527, 528, 529,
	530, 531, 532, 533, 0, 534, 535, 718, 536, 537,
	538, 719, 539, 540, 541, 720, 542, 721, 543, 544,
	0, 545, 546, 547, 0, 548, 549, 550, 551, 552,
	553, 554, 555, 722, 556, 557, 559, 558, 560, 0,
	561, 0, 562, 563, 564, 0, 0, 0, 0, 0,
	565, 566, 568, 0, 569, 570, 571, 572, 567, 573,
	574, 575, 576, 577, 0, 578, 579, 580, 0, 581,
	582, 583, 584, 585, 723, 586, 0, 587, 588, 595,
	596, 597, 589, 590, 591, 598, 599, 600, 601, 602,
	763, 604, 605, 603, 606, 607, 608, 0, 609, 610,
	592, 593, 611, 612, 0, 613, 614, 615, 616, 617,
	618, 619, 724, 0, 620, 0, 621, 622, 623, 624,
	625, 627, 594, 628, 633, 634, 725, 629, 630, 631,
	632, 726, 636, 637, 638, 0, 639, 640, 0, 635,
	626, 0, 641, 642, 643, 644, 645, 646, 0, 647,
	648, 0, 649, 727, 728, 729, 730, 0, 659, 0,
	650, 651, 652, 653, 731, 654, 732, 0, 655, 656,
	657, 658, 0, 660, 661, 0, 0, 662, 663, 665,
	667, 668, 664, 666, 669, 0, 670, 0, 0, 671,
	672, 673, 733, 734, 735, 0, 675, 674, 676, 677,
	678, 736, 679, 680, 290, 0, 0, 0, 681, 682,
	737, 683, 684, 685, 0, 0, 0, 0, 0, 0,
	0, 296, 297, 299, 298, 300, 301, 302, 303, 758,
	304, 305, 0, 0, 0, 0, 0, 686, 0, 0,
	0, 306, 0, 307, 308, 0, 309, 310, 311, 312,
	313, 314, 315, 687, 688, 0, 316, 689, 317, 690,
	0, 691, 318, 319, 320, 321, 322, 323, 0, 0,
	0, 324, 692, 693, 694, 0, 325, 326, 695, 0,
	0, 0, 327, 328, 329, 330, 331, 332, 333, 334,
	0, 0, 336, 337, 338, 335, 339, 0, 340, 0,
	341, 342, 343, 344, 345, 346, 761, 347, 348, 349,
	0, 350, 351, 352, 0, 0, 0, 0, 0, 0,
	0, 353, 354, 355, 356, 357, 0, 358, 360, 696,
	697, 0, 363, 359, 361, 0, 364, 362, 365, 0,
	366, 367, 368, 0, 0, 369, 370, 371, 0, 372,
	373, 374, 0, 375, 376, 377, 0, 378, 379, 698,
	380, 381, 382, 384, 386, 383, 385, 387, 388, 389,
	390, 699, 700, 391, 0, 0, 0, 0, 0, 0,
	0, 392, 393, 394, 701, 0, 0, 0, 395, 0,
	396, 397, 398, 0, 399, 400, 0, 0, 401, 402,
	403, 702, 703, 404, 405, 406, 407, 408, 409, 410,
	411, 412, 762, 413, 704, 0, 705, 414, 0, 415,
	416, 417, 418, 419, 420, 421, 706, 707, 708, 510,
	0, 422, 423, 0, 424, 425, 426, 427, 428, 0,
	0, 0, 0, 429, 430, 431, 0, 0, 511, 432,
	709, 710, 0, 711, 0, 433, 434, 0, 712, 0,
	435, 436, 437, 0, 438, 0, 0, 0, 439, 440,
	441, 442, 443, 444, 0, 445, 447, 446, 0, 448,
	713, 0, 449, 450, 0, 0, 451, 452, 453, 454,
	455, 456, 459, 0, 0, 457, 458, 460, 461, 0,
	462, 463, 465, 468, 464, 466, 467, 469, 482, 483,
	470, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 485, 0, 484, 0, 486, 487, 488, 489,
	490, 497, 499, 500, 495, 496, 498, 501, 502, 504,
	492, 493, 494, 0, 503, 491, 0, 0, 0, 505,
	506, 507, 508, 0, 714, 509, 715, 512, 513, 0,
	0, 514, 0, 515, 0, 0, 517, 518, 519, 0,
	0, 520, 521, 716, 0, 522, 0, 717, 523, 524,
	516, 525, 526, 527, 528, 529, 530, 531, 532, 533,
	0, 534, 535, 718, 536, 537, 538, 719, 539, 540,
	541, 720, 542, 721, 543, 544, 0, 545, 546, 547,
	0, 548, 549, 550, 551, 552, 553, 554, 555, 722,
	556, 557, 559, 558, 560, 0, 561, 0, 562, 563,
	564, 0, 0, 0, 0, 0, 565, 566, 568, 0,
	569, 570, 571, 572, 567, 573, 574, 575, 576, 577,
	0, 578, 579, 580, 0, 581, 582, 583, 584, 585,
	723, 586, 0, 587, 588, 595, 596, 597, 589, 590,
	591, 598, 599, 600, 601, 602, 763, 604, 605, 603,
	606, 607, 608, 0, 609, 610, 592, 593, 611, 612,
	0, 613, 614, 615, 616, 617, 618, 619, 724, 0,
	620, 0, 621, 622, 623, 624, 625, 627, 594, 628,
	633, 634, 725, 629, 630, 631, 632, 726, 636, 637,
	638, 0, 639, 640, 0, 635, 626, 0, 641, 642,
	643, 644, 645, 646, 0, 647, 648, 0, 649, 727,
	728, 729, 730, 0, 659, 0, 650, 651, 652, 653,
	731, 654, 732, 0, 655, 656, 657, 658, 0, 660,
	661, 0, 0, 662, 663, 665, 667, 668, 664, 666,
	669, 0, 670, 0, 0, 671, 672, 673, 733, 734,
	735, 0, 675, 674, 676, 677, 678, 736, 679, 680,
	290, 0, 0, 0, 681, 682, 737, 683, 684, 685,
	0, 0, 0, 0, 0, 0, 0, 296, 297, 299,
	298, 300, 301, 302, 303, 758, 304, 305, 0, 0,
	0, 0, 0, 686, 0, 0, 0, 306, 0, 307,
	308, 0, 309, 310, 311, 312, 313, 314, 315, 687,
	688, 0, 316, 689, 317, 690, 0, 691, 318, 319,
	320, 321, 322, 323, 0, 0, 0, 324, 692, 693,
	694, 0, 325, 326, 695, 0, 0, 0, 327, 328,
	329, 330, 331, 332, 333, 334, 0, 0, 336, 337,
	338, 335, 339, 0, 340, 0, 341, 342, 343, 344,
	345, 346, 761, 347, 348, 349, 0, 350, 351, 352,
	0, 0, 0, 0, 0, 0, 0, 353, 354, 355,
	356, 357, 0, 358, 360, 696, 697, 0, 363, 359,
	361, 0, 364, 362, 365, 0, 366, 367, 368, 0,
	0, 369, 370, 371, 0, 372, 373, 374, 0, 375,
	376, 377, 0, 378, 379, 698, 380, 381, 382, 384,
	386, 383, 385, 387, 388, 389, 390, 699, 700, 391,
	0, 0, 0, 0, 0, 0, 0, 392, 393, 394,
	701, 0, 0, 0, 395, 0, 396, 397, 398, 0,
	399, 400, 0, 0, 401, 402, 403, 702, 703, 404,
	405, 406, 407, 408, 409, 410, 411, 412, 4245, 413,
	704, 0, 705, 414, 0, 415, 416, 417, 418, 419,
	420, 421, 706, 707, 708, 510, 0, 422, 423, 0,
	424, 425, 426, 427, 428, 0, 0, 0, 0, 429,
	430, 431, 0, 0, 511, 432, 709, 710, 0, 711,
	0, 433, 434, 0, 712, 0, 435, 436, 437, 0,
	438, 0, 0, 0, 439, 440, 441, 442, 443, 444,
	0, 445, 447, 446, 0, 448, 713, 0, 449, 450,
	0, 0, 451, 452, 453, 454, 455, 456, 459, 0,
	0, 457, 458, 460, 461, 0, 462, 463, 465, 468,
	464, 466, 467, 469, 482, 483, 470, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 485, 0,
	484, 0, 486, 487, 488, 489, 490, 497, 499, 500,
	495, 496, 498, 501, 502, 504, 492, 493, 494, 0,
	503, 491, 0, 0, 0, 505, 506, 507, 508, 0,
	714, 509, 715, 512, 513, 0, 0, 514, 0, 515,
	0, 0, 517, 518, 519, 0, 0, 520, 521, 716,
	0, 522, 0, 717, 523, 524, 516, 525, 526, 527,
	528, 529, 530, 531, 532, 533, 0, 534, 535, 718,
	536, 537, 538, 719, 539, 540, 541, 720, 542, 721,
	543, 544, 0, 545, 546, 547, 0, 548, 549, 550,
	551, 552, 553, 554, 555, 722, 556, 557, 559, 558,
	560, 0, 561, 0, 562, 563, 564, 0, 0, 0,
	0, 0, 565, 566, 568, 0, 569, 570, 571, 572,
	567, 573, 574, 575, 576, 577, 0, 578, 579, 580,
	0, 581, 582, 583, 584, 585, 723, 586, 0, 587,
	588, 595, 596, 597, 589, 590, 591, 598, 599, 600,
	601, 602, 763, 604, 605, 603, 606, 607, 608, 0,
	609, 610, 592, 593, 611, 612, 0, 613, 614, 615,
	616, 617, 618, 619, 724, 0, 620, 0, 621, 622,
	623, 624, 625, 627, 594, 628, 633, 634, 725, 629,
	630, 631, 632, 726, 636, 637, 638, 0, 639, 640,
	0, 635, 626, 0, 641, 642, 643, 644, 645, 646,
	0, 647, 648, 0, 649, 727, 728, 729, 730, 0,
	659, 0, 650, 651, 652, 653, 731, 654, 732, 0,
	655, 656, 657, 658, 0, 660, 661, 0, 0, 662,
	663, 665, 667, 668, 664, 666, 669, 0, 670, 0,
	0, 671, 672, 673, 733, 734, 735, 0, 675, 674,
	676, 677, 678, 736, 679, 680, 290, 0, 0, 0,
	681, 682, 737, 683, 684, 685, 0, 0, 0, 0,
	0, 0, 0, 296, 297, 299, 298, 300, 301, 302,
	303, 0, 304, 305, 0, 0, 0, 0, 0, 686,
	0, 0, 0, 306, 0, 307, 308, 0, 309, 310,
	311, 312, 313, 314, 315, 687, 688, 0, 316, 689,
	317, 690, 0, 691, 318, 319, 320, 321, 322, 323,
	0, 0, 0, 324, 692, 693, 694, 0, 325, 326,
	695, 0, 0, 0, 327, 328, 329, 330, 331, 332,
	333, 334, 0, 0, 336, 337, 338, 335, 339, 0,
	340, 0, 341, 342, 343, 344, 345, 346, 0, 347,
	348, 349, 0, 350, 351, 352, 0, 0, 0, 0,
	0, 0, 0, 353, 354, 355, 356, 357, 0, 358,
	360, 696, 697, 0, 363, 359, 361, 0, 364, 362,
	365, 0, 366, 367, 368, 0, 0, 369, 370, 371,
	0, 372, 373, 374, 0, 375, 376, 377, 0, 378,
	379, 698, 380, 381, 382, 384, 386, 383, 385, 387,
	388, 389, 390, 699, 700, 391, 0, 293, 0, 0,
	0, 0, 0, 392, 393, 394, 701, 0, 0, 0,
	395, 0, 396, 397, 398, 0, 399, 400, 0, 0,
	401, 402, 403, 702, 703, 404, 405, 406, 407, 408,
	409, 410, 411, 412, 0, 413, 704, 0, 705, 414,
	0, 415, 416, 417, 418, 419, 420, 421, 706, 707,
	708, 510, 0, 422, 423, 0, 424, 425, 426, 427,
	428, 0, 0, 0, 294, 429, 430, 431, 0, 0,
	511, 432, 709, 710, 0, 711, 0, 433, 434, 0,
	712, 0, 435, 436, 437, 0, 438, 0, 0, 0,
	439, 440, 441, 442, 443, 444, 0, 445, 447, 446,
	0, 448, 713, 0, 449, 450, 0, 0, 451, 452,
	453, 454, 455, 456, 459, 0, 0, 457, 458, 460,
	461, 0, 462, 463, 465, 468, 464, 466, 467, 469,
	482, 483, 470, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 485, 0, 484, 0, 486, 487,
	488, 489, 490, 497, 499, 500, 495, 496, 498, 501,
	502, 504, 492, 493, 494, 0, 503, 491, 0, 295,
	0, 505, 506, 507, 508, 0, 714, 509, 715, 512,
	513, 0, 0, 514, 0, 515, 0, 0, 517, 518,
	519, 0, 0, 520, 521, 716, 0, 522, 0, 717,
	523, 524, 516, 525, 526, 527, 528, 529, 530, 531,
	532, 533, 0, 534, 535, 718, 536, 537, 538, 719,
	539, 540, 541, 720, 542, 721, 543, 544, 0, 545,
	546, 547, 0, 548, 549, 550, 551, 552, 553, 554,
	555, 722, 556, 557, 559, 558, 560, 0, 561, 0,
	562, 563, 564, 0, 0, 0, 0, 0, 565, 566,
	568, 0, 569, 570, 571, 572, 567, 573, 574, 575,
	576, 577, 0, 578, 579, 580, 0, 581, 582, 583,
	584, 585, 723, 586, 0, 587, 588, 595, 596, 597,
	589, 590, 591, 598, 599, 600, 601, 602, 0, 604,
	605, 603, 606, 607, 608, 0, 609, 610, 592, 593,
	611, 612, 0, 613, 614, 615, 616, 617, 618, 619,
	724, 0, 620, 0, 621, 622, 623, 624, 625, 627,
	594, 628, 633, 634, 725, 629, 630, 631, 632, 726,
	636, 637, 638, 0, 639, 640, 0, 635, 626, 2448,
	641, 642, 643, 644, 645, 646, 0, 647, 648, 0,
	649, 727, 728, 729, 730, 0, 659, 0, 650, 651,
	652, 653, 731, 654, 732, 0, 655, 656, 657, 658,
	0, 660, 661, 0, 0, 662, 663, 665, 667, 668,
	664, 666, 669, 0, 670, 0, 0, 671, 672, 673,
	733, 734, 735, 0, 675, 674, 676, 677, 678, 736,
	679, 680, 290, 0, 0, 0, 681, 682, 737, 683,
	684, 685, 0, 0, 0, 0, 0, 0, 0, 296,
	297, 299, 298, 300, 301, 302, 303, 0, 304, 305,
	0, 0, 0, 0, 0, 686, 0, 0, 0, 306,
	0, 307, 308, 0, 309, 310, 311, 312, 313, 314,
	315, 687, 688, 0, 316, 689, 317, 690, 0, 691,
	318, 319, 320, 321, 322, 323, 0, 0, 0, 324,
	692, 693, 694, 0, 325, 326, 695, 0, 0, 0,
	327, 328, 329, 330, 331, 332, 333, 334, 0, 0,
	336, 337, 338, 335, 339, 0, 340, 0, 341, 342,
	343, 344, 345, 346, 0, 347, 348, 349, 0, 350,
	351, 352, 0, 0, 0, 0, 0, 0, 0, 353,
	354, 355, 356, 357, 0, 358, 360, 696, 697, 0,
	363, 359, 361, 0, 364, 362, 365, 0, 366, 367,
	368, 0, 0, 369, 370, 371, 0, 372, 373, 374,
	0, 375, 376, 377, 0, 378, 379, 698, 380, 381,
	382, 384, 386, 383, 385, 387, 388, 389, 390, 699,
	700, 391, 0, 293, 0, 0, 0, 0, 0, 392,
	393, 394, 701, 0, 0, 0, 395, 0, 396, 397,
	398, 0, 399, 400, 0, 0, 401, 402, 403, 702,
	703, 404, 405, 406, 407, 408, 409, 410, 411, 412,
	0, 413, 704, 0, 705, 414, 0, 415, 416, 417,
	418, 419, 420, 421, 706, 707, 708, 510, 0, 422,
	423, 0, 424, 425, 426, 427, 428, 0, 0, 0,
	294, 429, 430, 431, 0, 0, 511, 432, 709, 710,
	0, 711, 0, 433, 434, 0, 712, 0, 435, 436,
	437, 0, 438, 0, 0, 0, 439, 440, 441, 442,
	443, 444, 0, 445, 447, 446, 0, 448, 713, 0,
	449, 450, 0, 0, 451, 452, 453, 454, 455, 456,
	459, 0, 0, 457, 458, 460, 461, 0, 462, 463,
	465, 468, 464, 466, 467, 469, 482, 483, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	485, 0, 484, 0, 486, 487, 488, 489, 490, 497,
	499, 500, 495, 496, 498, 501, 502, 504, 492, 493,
	494, 0, 503, 491, 0, 295, 0, 505, 506, 507,
	508, 0, 714, 509, 715, 512, 513, 0, 0, 514,
	0, 515, 0, 1339, 517, 518, 519, 0, 0, 520,
	521, 716, 0, 522, 0, 717, 523, 524, 516, 525,
	526, 527, 528, 529, 530, 531, 532, 533, 0, 534,
	535, 718, 536, 537, 538, 719, 539, 540, 541, 720,
	542, 721, 543, 544, 0, 545, 546, 547, 0, 548,
	549, 550, 551, 552, 553, 554, 555, 722, 556, 557,
	559, 558, 560, 0, 561, 0, 562, 563, 564, 0,
	0, 0, 0, 0, 565, 566, 568, 0, 569, 570,
	571, 572, 567, 573, 574, 575, 576, 577, 0, 578,
	579, 580, 0, 581, 582, 583, 584, 585, 723, 586,
	0, 587, 588, 595, 596, 597, 589, 590, 591, 598,
	599, 600, 601, 602, 0, 604, 605, 603, 606, 607,
	608, 0, 609, 610, 592, 593, 611, 612, 0, 613,
	614, 615, 616, 617, 618, 619, 724, 0, 620, 0,
	621, 622, 623, 624, 625, 627, 594, 628, 633, 634,
	725, 629, 630, 631, 632, 726, 636, 637, 638, 0,
	639, 640, 0, 635, 626, 0, 641, 642, 643, 644,
	645, 646, 0, 647, 648, 0, 649, 727, 728, 729,
	730, 0, 659, 0, 650, 651, 652, 653, 731, 654,
	732, 0, 655, 656, 657, 658, 0, 660, 661, 0,
	0, 662, 663, 665, 667, 668, 664, 666, 669, 0,
	670, 0, 0, 671, 672, 673, 733, 734, 735, 0,
	675, 674, 676, 677, 678, 736, 679, 680, 290, 0,
	0, 0, 681, 682, 737, 683, 684, 685, 0, 0,
	0, 0, 0, 0, 0, 296, 297, 299, 298, 300,
	301, 302, 303, 0, 304, 305, 0, 0, 0, 0,
	0, 686, 0, 0, 0, 306, 0, 307, 308, 0,
	309, 310, 311, 312, 313, 314, 315, 687, 688, 0,
	316, 689, 317, 690, 0, 691, 318, 319, 320, 321,
	322, 323, 0, 0, 0, 324, 692, 693, 694, 0,
	325, 326, 695, 0, 0, 0, 327, 328, 329, 330,
	331, 332, 333, 334, 0, 0, 336, 337, 338, 335,
	339, 0, 340, 0, 341, 342, 343, 344, 345, 346,
	0, 347, 348, 349, 0, 350, 351, 352, 0, 0,
	0, 0, 0, 0, 0, 353, 354, 355, 356, 357,
	0, 358, 360, 696, 697, 0, 363, 359, 361, 0,
	364, 362, 365, 0, 366, 367, 368, 0, 0, 369,
	370, 371, 0, 372, 373, 374, 0, 375, 376, 377,
	0, 378, 379, 698, 380, 381, 382, 384, 386, 383,
	385, 387, 388, 389, 390, 699, 700, 391, 0, 293,
	0, 0, 0, 0, 0, 392, 393, 394, 701, 0,
	0, 0, 395, 0, 396, 397, 398, 0, 399, 400,
	0, 0, 401, 402, 403, 702, 703, 404, 405, 406,
	407, 408, 409, 410, 411, 412, 0, 413, 704, 0,
	705, 414, 0, 415, 416, 417, 418, 419, 420, 421,
	706, 707, 708, 510, 0, 422, 423, 0, 424, 425,
	426, 427, 428, 0, 0, 0, 294, 429, 430, 431,
	0, 0, 511, 432, 709, 710, 0, 711, 0, 433,
	434, 0, 712, 0, 435, 436, 437, 0, 438, 0,
	0, 0, 439, 440, 441, 442, 443, 444, 0, 445,
	447, 446, 0, 448, 713, 0, 449, 450, 0, 0,
	451, 452, 453, 454, 455, 456, 459, 0, 0, 457,
	458, 460, 461, 0, 462, 463, 465, 468, 464, 466,
	467, 469, 482, 483, 470, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 485, 0, 484, 0,
	486, 487, 488, 489, 490, 497, 499, 500, 495, 496,
	498, 501, 502, 504, 492, 493, 494, 3729, 503, 491,
	0, 295, 0, 505, 506, 507, 508, 0, 714, 509,
	715, 512, 513, 0, 0, 514, 0, 515, 0, 0,
	517, 518, 519, 0, 0, 520, 521, 716, 0, 522,
	0, 717, 523, 524, 516, 525, 526, 527, 528, 529,
	530, 531, 532, 533, 0, 534, 535, 718, 536, 537,
	538, 719, 539, 540, 541, 720, 542, 721, 543, 544,
	0, 545, 546, 547, 0, 548, 549, 550, 551, 552,
	553, 554, 555, 722, 556, 557, 559, 558, 560, 0,
	561, 0, 562, 563, 564, 0, 0, 0, 0, 0,
	565, 566, 568, 0, 569, 570, 571, 572, 567, 573,
	574, 575, 576, 577, 0, 578, 579, 580, 0, 581,
	582, 583, 584, 585, 723, 586, 0, 587, 588, 595,
	596, 597, 589, 590, 591, 598, 599, 600, 601, 602,
	0, 604, 605, 603, 606, 607, 608, 0, 609, 610,
	592, 593, 611, 612, 0, 613, 614, 615, 616, 617,
	618, 619, 724, 0, 620, 0, 621, 622, 623, 624,
	625, 627, 594, 628, 633, 634, 725, 629, 630, 631,
	632, 726, 636, 637, 638, 0, 639, 640, 0, 635,
	626, 0, 641, 642, 643, 644, 645, 646, 0, 647,
	648, 0, 649, 727, 728, 729, 730, 0, 659, 0,
	650, 651, 652, 653, 731, 654, 732, 0, 655, 656,
	657, 658, 0, 660, 661, 0, 0, 662, 663, 665,
	667, 668, 664, 666, 669, 0, 670, 0, 0, 671,
	672, 673, 733, 734, 735, 0, 675, 674, 676, 677,
	678, 736, 679, 680, 3265, 0, 290, 0, 681, 682,
	737, 683, 684, 685, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 296, 297, 299, 298, 300, 301, 302,
	303, 0, 304, 305, 0, 0, 0, 0, 0, 686,
	0, 0, 0, 306, 0, 307, 308, 0, 309, 310,
	311, 312, 313, 314, 315, 687, 688, 0, 316, 689,
	317, 690, 0, 691, 318, 319, 320, 321, 322, 323,
	0, 0, 0, 324, 692, 693, 694, 0, 325, 326,
	695, 0, 0, 0, 327, 328, 329, 330, 331, 332,
	333, 334, 0, 0, 336, 337, 338, 335, 339, 0,
	340, 0, 341, 342, 343, 344, 345, 346, 0, 347,
	348, 349, 0, 350, 351, 352, 0, 0, 0, 0,
	0, 0, 0, 353, 354, 355, 356, 357, 0, 358,
	360, 696, 697, 0, 363, 359, 361, 0, 364, 362,
	365, 0, 366, 367, 368, 0, 0, 369, 370, 371,
	0, 372, 373, 374, 0, 375, 376, 377, 0, 378,
	379, 698, 380, 381, 382, 384, 386, 383, 385, 387,
	388, 389, 390, 699, 700, 391, 0, 293, 0, 0,
	0, 0, 0, 392, 393, 394, 701, 0, 0, 0,
	395, 0, 396, 397, 398, 0, 399, 400, 0, 0,
	401, 402, 403, 702, 703, 404, 405, 406, 407, 408,
	409, 410, 411, 412, 0, 413, 704, 0, 705, 414,
	0, 415, 416, 417, 418, 419, 420, 421, 3264, 707,
	708, 510, 0, 422, 423, 0, 424, 425, 426, 427,
	428, 0, 0, 0, 294, 429, 430, 431, 0, 0,
	511, 432, 709, 710, 0, 711, 0, 433, 434, 0,
	712, 0, 435, 436, 437, 0, 438, 0, 0, 0,
	439, 440, 441, 442, 443, 444, 0, 445, 447, 446,
	0, 448, 713, 0, 449, 450, 0, 0, 451, 452,
	453, 454, 455, 456, 459, 0, 0, 457, 458, 460,
	461, 0, 462, 463, 465, 468, 464, 466, 467, 469,
	482, 483, 470, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 485, 0, 484, 0, 486, 487,
	488, 489, 490, 497, 499, 500, 495, 496, 498, 501,
	502, 504, 492, 493, 494, 0, 503, 491, 0, 295,
	0, 505, 506, 507, 508, 0, 714, 509, 715, 512,
	513, 0, 0, 514, 0, 515, 0, 0, 517, 518,
	519, 0, 0, 520, 521, 716, 0, 522, 0, 717,
	523, 524, 516, 525, 526, 527, 528, 529, 530, 531,
	532, 533, 0, 534, 535, 718, 536, 537, 538, 719,
	539, 540, 541, 720, 542, 721, 543, 544, 0, 545,
	546, 547, 0, 548, 549, 550, 551, 552, 553, 554,
	555, 722, 556, 557, 559, 558, 560, 0, 561, 0,
	562, 563, 564, 0, 0, 0, 0, 0, 565, 566,
	568, 0, 569, 570, 571, 572, 567, 573, 574, 575,
	576, 577, 0, 578, 579, 580, 0, 581, 582, 583,
	584, 585, 723, 586, 0, 587, 588, 595, 596, 597,
	589, 590, 591, 598, 599, 600, 601, 602, 0, 604,
	605, 603, 606, 607, 608, 0, 609, 610, 592, 593,
	611, 612, 0, 613, 614, 615, 616, 617, 618, 619,
	724, 0, 620, 0, 621, 622, 623, 624, 625, 627,
	594, 628, 633, 634, 725, 629, 630, 631, 632, 726,
	636, 637, 638, 0, 639, 640, 0, 635, 626, 0,
	641, 642, 643, 644, 645, 646, 0, 647, 648, 0,
	649, 727, 728, 729, 730, 0, 659, 0, 650, 651,
	652, 653, 731, 654, 732, 0, 655, 656, 657, 658,
	0, 660, 661, 0, 0, 662, 663, 665, 667, 668,
	664, 666, 669, 0, 670, 0, 0, 671, 672, 673,
	733, 734, 735, 0, 675, 674, 676, 677, 678, 736,
	679, 680, 2511, 0, 290, 0, 681, 682, 737, 683,
	684, 685, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 296, 297, 299, 298, 300, 301, 302, 303, 0,
	304, 305, 0, 0, 0, 0, 0, 686, 0, 0,
	0, 306, 0, 307, 308, 0, 309, 310, 311, 312,
	313, 314, 315, 687, 688, 0, 316, 689, 317, 690,
	0, 691, 318, 319, 320, 321, 322, 323, 0, 0,
	0, 324, 692, 693, 694, 0, 325, 326, 695, 0,
	0, 0, 327, 328, 329, 330, 331, 332, 333, 334,
	0, 0, 336, 337, 338, 335, 339, 0, 340, 0,
	341, 342, 343, 344, 345, 346, 0, 347, 348, 349,
	0, 350, 351, 352, 0, 0, 0, 0, 0, 0,
	0, 353, 354, 355, 356, 357, 0, 358, 360, 696,
	697, 0, 363, 359, 361, 0, 364, 362, 365, 0,
	366, 367, 368, 0, 0, 369, 370, 371, 0, 372,
	373, 374, 0, 375, 376, 377, 0, 378, 379, 698,
	380, 381, 382, 384, 386, 383, 385, 387, 388, 389,
	390, 699, 700, 391, 0, 293, 0, 0, 0, 0,
	0, 392, 393, 394, 701, 0, 0, 0, 395, 0,
	396, 397, 398, 0, 399, 400, 0, 0, 401, 402,
	403, 702, 703, 404, 405, 406, 407, 408, 409, 410,
	411, 412, 0, 413, 704, 0, 705, 414, 0, 415,
	416, 417, 418, 419, 420, 421, 706, 707, 708, 510,
	0, 422, 423, 0, 424, 425, 426, 427, 428, 0,
	0, 0, 294, 429, 430, 431, 0, 0, 511, 432,
	709, 710, 0, 711, 0, 433, 434, 0, 712, 0,
	435, 436, 437, 0, 438, 0, 0, 0, 439, 440,
	441, 442, 443, 444, 0, 445, 447, 446, 0, 448,
	713, 0, 449, 450, 0, 0, 451, 452, 453, 454,
	455, 456, 459, 0, 0, 457, 458, 460, 461, 0,
	462, 463, 465, 468, 464, 466, 467, 469, 482, 483,
	470, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 485, 0, 484, 0, 486, 487, 488, 489,
	490, 497, 499, 500, 495, 496, 498, 501, 502, 504,
	492, 493, 494, 0, 503, 491, 0, 295, 0, 505,
	506, 507, 508, 0, 714, 509, 715, 512, 513, 0,
	0, 514, 0, 515, 0, 0, 517, 518, 519, 0,
	0, 520, 521, 716, 0, 522, 0, 717, 523, 524,
	516, 525, 526, 527, 528, 529, 530, 531, 532, 533,
	0, 534, 535, 718, 536, 537, 538, 719, 539, 540,
	541, 720, 542, 721, 543, 544, 0, 545, 546, 547,
	0, 548, 549, 550, 551, 552, 553, 554, 555, 722,
	556, 557, 559, 558, 560, 0, 561, 0, 562, 563,
	564, 0, 0, 0, 0, 0, 565, 566, 568, 0,
	569, 570, 571, 572, 567, 573, 574, 575, 576, 577,
	0, 578, 579, 580, 0, 581, 582, 583, 584, 585,
	723, 586, 0, 587, 588, 595, 596, 597, 589, 590,
	591, 598, 599, 600, 601, 602, 0, 604, 605, 603,
	606, 607, 608, 0, 609, 610, 592, 593, 611, 612,
	0, 613, 614, 615, 616, 617, 618, 619, 724, 0,
	620, 0, 621, 622, 623, 624, 625, 627, 594, 628,
	633, 634, 725, 629, 630, 631, 632, 726, 636, 637,
	638, 0, 639, 640, 0, 635, 626, 0, 641, 642,
	643, 644, 645, 646, 0, 647, 648, 0, 649, 727,
	728, 729, 730, 0, 659, 0, 650, 651, 652, 653,
	731, 654, 732, 0, 655, 656, 657, 658, 0, 660,
	661, 0, 0, 662, 663, 665, 667, 668, 664, 666,
	669, 0, 670, 0, 0, 671, 672, 673, 733, 734,
	735, 0, 675, 674, 676, 677, 678, 736, 679, 680,
	2455, 0, 290, 0, 681, 682, 737, 683, 684, 685,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 296,
	297, 299, 298, 300, 301, 302, 303, 0, 304, 305,
	0, 0, 0, 0, 0, 686, 0, 0, 0, 306,
	0, 307, 308, 0, 309, 310, 311, 312, 313, 314,
	315, 687, 688, 0, 316, 689, 317, 690, 0, 691,
	318, 319, 320, 321, 322, 323, 0, 0, 0, 324,
	692, 693, 694, 0, 325, 326, 695, 0, 0, 0,
	327, 328, 329, 330, 331, 332, 333, 334, 0, 0,
	336, 337, 338, 335, 339, 0, 340, 0, 341, 342,
	343, 344, 345, 346, 0, 347, 348, 349, 0, 350,
	351, 352, 0, 0, 0, 0, 0, 0, 0, 353,
	354, 355, 356, 357, 0, 358, 360, 696, 697, 0,
	363, 359, 361, 0, 364, 362, 365, 0, 366, 367,
	368, 0, 0, 369, 370, 371, 0, 372, 373, 374,
	0, 375, 376, 377, 0, 378, 379, 698, 380, 381,
	382, 384, 386, 383, 385, 387, 388, 389, 390, 699,
	700, 391, 0, 293, 0, 0, 0, 0, 0, 392,
	393, 394, 701, 0, 0, 0, 395, 0, 396, 397,
	398, 0, 399, 400, 0, 0, 401, 402, 403, 702,
	703, 404, 405, 406, 407, 408, 409, 410, 411, 412,
	0, 413, 704, 0, 705, 414, 0, 415, 416, 417,
	418, 419, 420, 421, 2454, 707, 708, 510, 0, 422,
	423, 0, 424, 425, 426, 427, 428, 0, 0, 0,
	294, 429, 430, 431, 0, 0, 511, 432, 709, 710,
	0, 711, 0, 433, 434, 0, 712, 0, 435, 436,
	437, 0, 438, 0, 0, 0, 439, 440, 441, 442,
	443, 444, 0, 445, 447, 446, 0, 448, 713, 0,
	449, 450, 0, 0, 451, 452, 453, 454, 455, 456,
	459, 0, 0, 457, 458, 460, 461, 0, 462, 463,
	465, 468, 464, 466, 467, 469, 482, 483, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	485, 0, 484, 0, 486, 487, 488, 489, 490, 497,
	499, 500, 495, 496, 498, 501, 502, 504, 492, 493,
	494, 0, 503, 491, 0, 295, 0, 505, 506, 507,
	508, 0, 714, 509, 715, 512, 513, 0, 0, 514,
	0, 515, 0, 0, 517, 518, 519, 0, 0, 520,
	521, 716, 0, 522, 0, 717, 523, 524, 516, 525,
	526, 527, 528, 529, 530, 531, 532, 533, 0, 534,
	535, 718, 536, 537, 538, 719, 539, 540, 541, 720,
	542, 721, 543, 544, 0, 545, 546, 547, 0, 548,
	549, 550, 551, 552, 553, 554, 555, 722, 556, 557,
	559, 558, 560, 0, 561, 0, 562, 563, 564, 0,
	0, 0, 0, 0, 565, 566, 568, 0, 569, 570,
	571, 572, 567, 573, 574, 575, 576, 577, 0, 578,
	579, 580, 0, 581, 582, 583, 584, 585, 723, 586,
	0, 587, 588, 595, 596, 597, 589, 590, 591, 598,
	599, 600, 601, 602, 0, 604, 605, 603, 606, 607,
	608, 0, 609, 610, 592, 593, 611, 612, 0, 613,
	614, 615, 616, 617, 618, 619, 724, 0, 620, 0,
	621, 622, 623, 624, 625, 627, 594, 628, 633, 634,
	725, 629, 630, 631, 632, 726, 636, 637, 638, 0,
	639, 640, 0, 635, 626, 0, 641, 642, 643, 644,
	645, 646, 0, 647, 648, 0, 649, 727, 728, 729,
	730, 0, 659, 0, 650, 651, 652, 653, 731, 654,
	732, 0, 655, 656, 657, 658, 0, 660, 661, 0,
	0, 662, 663, 665, 667, 668, 664, 666, 669, 0,
	670, 0, 0, 671, 672, 673, 733, 734, 735, 0,
	675, 674, 676, 677, 678, 736, 679, 680, 2441, 0,
	290, 0, 681, 682, 737, 683, 684, 685, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 296, 297, 299,
	298, 300, 301, 302, 303, 0, 304, 305, 0, 0,
	0, 0, 0, 686, 0, 0, 0, 306, 0, 307,
	308, 0, 309, 310, 311, 312, 313, 314, 315, 687,
	688, 0, 316, 689, 317, 690, 0, 691, 318, 319,
	320, 321, 322, 323, 0, 0, 0, 324, 692, 693,
	694, 0, 325, 326, 695, 0, 0, 0, 327, 328,
	329, 330, 331, 332, 333, 334, 0, 0, 336, 337,
	338, 335, 339, 0, 340, 0, 341, 342, 343, 344,
	345, 346, 0, 347, 348, 349, 0, 350, 351, 352,
	0, 0, 0, 0, 0, 0, 0, 353, 354, 355,
	356, 357, 0, 358, 360, 696, 697, 0, 363, 359,
	361, 0, 364, 362, 365, 0, 366, 367, 368, 0,
	0, 369, 370, 371, 0, 372, 373, 374, 0, 375,
	376, 377, 0, 378, 379, 698, 380, 381, 382, 384,
	386, 383, 385, 387, 388, 389, 390, 699, 700, 391,
	0, 293, 0, 0, 0, 0, 0, 392, 393, 394,
	701, 0, 0, 0, 395, 0, 396, 397, 398, 0,
	399, 400, 0, 0, 401, 402, 403, 702, 703, 404,
	405, 406, 407, 408, 409, 410, 411, 412, 0, 413,
	704, 0, 705, 414, 0, 415, 416, 417, 418, 419,
	420, 421, 2443, 707, 708, 510, 0, 422, 423, 0,
	424, 425, 426, 427, 428, 0, 0, 0, 294, 429,
	430, 431, 0, 0, 511, 432, 709, 710, 0, 711,
	0, 433, 434, 0, 712, 0, 435, 436, 437, 0,
	438, 0, 0, 0, 439, 440, 441, 442, 443, 444,
	0, 445, 447, 446, 0, 448, 713, 0, 449, 450,
	0, 0, 451, 452, 453, 454, 455, 456, 459, 0,
	0, 457, 458, 460, 461, 0, 462, 463, 465, 468,
	464, 466, 467, 469, 482, 483, 470, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 485, 0,
	484, 0, 486, 487, 488, 489, 490, 497, 499, 500,
	495, 496, 498, 501, 502, 504, 492, 493, 494, 0,
	503, 491, 0, 295, 0, 505, 506, 507, 508, 0,
	714, 509, 715, 512, 513, 0, 0, 514, 0, 515,
	0, 0, 517, 518, 519, 0, 0, 520, 521, 716,
	0, 522, 0, 717, 523, 524, 516, 525, 526, 527,
	528, 529, 530, 531, 532, 533, 0, 534, 535, 718,
	536, 537, 538, 719, 539, 540, 541, 720, 542, 721,
	543, 544, 0, 545, 546, 547, 0, 548, 549, 550,
	551, 552, 553, 554, 555, 722, 556, 557, 559, 558,
	560, 0, 561, 0, 562, 563, 564, 0, 0, 0,
	0, 0, 565, 566, 568, 0, 569, 570, 571, 572,
	567, 573, 574, 575, 576, 577, 0, 578, 579, 580,
	0, 581, 582, 583, 584, 585, 723, 586, 0, 587,
	588, 595, 596, 597, 589, 590, 591, 598, 599, 600,
	601, 602, 0, 604, 605, 603, 606, 607, 608, 0,
	609, 610, 592, 593, 611, 612, 0, 613, 614, 615,
	616, 617, 618, 619, 724, 0, 620, 0, 621, 622,
	623, 624, 625, 627, 594, 628, 633, 634, 725, 629,
	630, 631, 632, 726, 636, 637, 638, 0, 639, 640,
	0, 635, 626, 0, 641, 642, 643, 644, 645, 646,
	0, 647, 648, 0, 649, 727, 728, 729, 730, 0,
	659, 0, 650, 651, 652, 653, 731, 654, 732, 0,
	655, 656, 657, 658, 0, 660, 661, 0, 0, 662,
	663, 665, 667, 668, 664, 666, 669, 0, 670, 0,
	0, 671, 672, 673, 733, 734, 735, 0, 675, 674,
	676, 677, 678, 736, 679, 680, 290, 0, 0, 0,
	681, 682, 737, 683, 684, 685, 0, 0, 0, 0,
	0, 0, 0, 296, 297, 299, 298, 300, 301, 302,
	303, 0, 304, 305, 0, 0, 0, 0, 0, 686,
	0, 0, 0, 306, 0, 307, 308, 0, 309, 310,
	311, 312, 313, 314, 315, 687, 688, 0, 316, 689,
	317, 690, 0, 691, 318, 319, 320, 321, 322, 323,
	0, 0, 0, 324, 692, 693, 694, 0, 325, 326,
	695, 0, 0, 0, 327, 328, 329, 330, 331, 332,
	333, 334, 0, 0, 336, 337, 338, 335, 339, 0,
	340, 0, 341, 342, 343, 344, 345, 346, 0, 347,
	348, 349, 0, 350, 351, 352, 0, 0, 0, 0,
	0, 0, 0, 353, 354, 355, 356, 357, 0, 358,
	360, 696, 697, 0, 363, 359, 361, 0, 364, 362,
	365, 0, 366, 367, 368, 0, 0, 369, 370, 371,
	0, 372, 373, 374, 0, 375, 376, 377, 0, 378,
	379, 698, 380, 381, 382, 384, 386, 383, 385, 387,
	388, 389, 390, 699, 700, 391, 0, 293, 0, 0,
	0, 0, 0, 392, 393, 394, 701, 0, 0, 0,
	395, 0, 396, 397, 398, 0, 399, 400, 0, 0,
	401, 402, 403, 702, 703, 404, 405, 406, 407, 408,
	409, 410, 411, 412, 0, 413, 704, 0, 705, 414,
	0, 415, 416, 417, 418, 419, 420, 421, 2405, 707,
	708, 510, 0, 422, 423, 0, 424, 425, 426, 427,
	428, 0, 0, 0, 294, 429, 430, 431, 0, 0,
	511, 432, 709, 710, 0, 711, 0, 433, 434, 0,
	712, 0, 435, 436, 437, 0, 438, 0, 0, 0,
	439, 440, 441, 442, 443, 444, 0, 445, 447, 446,
	0, 448, 713, 0, 449, 450, 0, 0, 451, 452,
	453, 454, 455, 456, 459, 0, 0, 457, 458, 460,
	461, 0, 462, 463, 465, 468, 464, 466, 467, 469,
	482, 483, 470, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 485, 0, 484, 0, 486, 487,
	488, 489, 490, 497, 499, 500, 495, 496, 498, 501,
	502, 504, 492, 493, 494, 0, 503, 491, 0, 295,
	0, 505, 506, 507, 508, 0, 714, 509, 715, 512,
	513, 0, 0, 514, 0, 515, 0, 1339, 517, 518,
	519, 0, 0, 520, 521, 716, 0, 522, 0, 717,
	523, 524, 516, 525, 526, 527, 528, 529, 530, 531,
	532, 533, 0, 534, 535, 718, 536, 537, 538, 719,
	539, 540, 541, 720, 542, 721, 543, 544, 0, 545,
	546, 547, 0, 548, 549, 550, 551, 552, 553, 554,
	555, 722, 556, 557, 559, 558, 560, 0, 561, 0,
	562, 563, 564, 0, 0, 0, 0, 0, 565, 566,
	568, 0, 569, 570, 571, 572, 567, 573, 574, 575,
	576, 577, 0, 578, 579, 580, 0, 581, 582, 583,
	584, 585, 723, 586, 0, 587, 588, 595, 596, 597,
	589, 590, 591, 598, 599, 600, 601, 602, 0, 604,
	605, 603, 606, 607, 608, 0, 609, 610, 592, 593,
	611, 612, 0, 613, 614, 615, 616, 617, 618, 619,
	724, 0, 620, 0, 621, 622, 623, 624, 625, 627,
	594, 628, 633, 634, 725, 629, 630, 631, 632, 726,
	636, 637, 638, 0, 639, 640, 0, 635, 626, 0,
	641, 642, 643, 644, 645, 646, 0, 647, 648, 0,
	649, 727, 728, 729, 730, 0, 659, 0, 650, 651,
	652, 653, 731, 654, 732, 0, 655, 656, 657, 658,
	0, 660, 661, 0, 0, 662, 663, 665, 667, 668,
	664, 666, 669, 0, 670, 0, 0, 671, 672, 673,
	733, 734, 735, 0, 675, 674, 676, 677, 678, 736,
	679, 680, 1721, 0, 290, 0, 681, 682, 737, 683,
	684, 685, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 296, 297, 299, 298, 300, 301, 302, 303, 0,
	304, 305, 0, 0, 0, 0, 0, 686, 0, 0,
	0, 306, 0, 307, 308, 0, 309, 310, 311, 312,
	313, 314, 315, 687, 688, 0, 316, 689, 317, 690,
	0, 691, 318, 319, 320, 321, 322, 323, 0, 0,
	0, 324, 692, 693, 694, 0, 325, 326, 695, 0,
	0, 0, 327, 328, 329, 330, 331, 332, 333, 334,
	0, 0, 336, 337, 338, 335, 339, 0, 340, 0,
	341, 342, 343, 344, 345, 346, 0, 347, 348, 349,
	0, 350, 351, 352, 0, 0, 0, 0, 0, 0,
	0, 353, 354, 355, 356, 357, 0, 358, 360, 696,
	697, 0, 363, 359, 361, 0, 364, 362, 365, 0,
	366, 367, 368, 0, 0, 369, 370, 371, 0, 372,
	373, 374, 0, 375, 376, 377, 0, 378, 379, 698,
	380, 381, 382, 384, 386, 383, 385, 387, 388, 389,
	390, 699, 700, 391, 0, 293, 0, 0, 0, 0,
	0, 392, 393, 394, 701, 0, 0, 0, 395, 0,
	396, 397, 398, 0, 399, 400, 0, 0, 401, 402,
	403, 702, 703, 404, 405, 406, 407, 408, 409, 410,
	411, 412, 0, 413, 704, 0, 705, 414, 0, 415,
	416, 417, 418, 419, 420, 421, 1720, 707, 708, 510,
	0, 422, 423, 0, 424, 425, 426, 427, 428, 0,
	0, 0, 294, 429, 430, 431, 0, 0, 511, 432,
	709, 710, 0, 711, 0, 433, 434, 0, 712, 0,
	435, 436, 437, 0, 438, 0, 0, 0, 439, 440,
	441, 442, 443, 444, 0, 445, 447, 446, 0, 448,
	713, 0, 449, 450, 0, 0, 451, 452, 453, 454,
	455, 456, 459, 0, 0, 457, 458, 460, 461, 0,
	462, 463, 465, 468, 464, 466, 467, 469, 482, 483,
	470, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 485, 0, 484, 0, 486, 487, 488, 489,
	490, 497, 499, 500, 495, 496, 498, 501, 502, 504,
	492, 493, 494, 0, 503, 491, 0, 295, 0, 505,
	506, 507, 508, 0, 714, 509, 715, 512, 513, 0,
	0, 514, 0, 515, 0, 0, 517, 518, 519, 0,
	0, 520, 521, 716, 0, 522, 0, 717, 523, 524,
	516, 525, 526, 527, 528, 529, 530, 531, 532, 533,
	0, 534, 535, 718, 536, 537, 538, 719, 539, 540,
	541, 720, 542, 721, 543, 544, 0, 545, 546, 547,
	0, 548, 549, 550, 551, 552, 553, 554, 555, 722,
	556, 557, 559, 558, 560, 0, 561, 0, 562, 563,
	564, 0, 0, 0, 0, 0, 565, 566, 568, 0,
	569, 570, 571, 572, 567, 573, 574, 575, 576, 577,
	0, 578, 579, 580, 0, 581, 582, 583, 584, 585,
	723, 586, 0, 587, 588, 595, 596, 597, 589, 590,
	591, 598, 599, 600, 601, 602, 0, 604, 605, 603,
	606, 607, 608, 0, 609, 610, 592, 593, 611, 612,
	0, 613, 614, 615, 616, 617, 618, 619, 724, 0,
	620, 0, 621, 622, 623, 624, 625, 627, 594, 628,
	633, 634, 725, 629, 630, 631, 632, 726, 636, 637,
	638, 0, 639, 640, 0, 635, 626, 0, 641, 642,
	643, 644, 645, 646, 0, 647, 648, 0, 649, 727,
	728, 729, 730, 0, 659, 0, 650, 651, 652, 653,
	731, 654, 732, 0, 655, 656, 657, 658, 0, 660,
	661, 0, 0, 662, 663, 665, 667, 668, 664, 666,
	669, 0, 670, 0, 0, 671, 672, 673, 733, 734,
	735, 0, 675, 674, 676, 677, 678, 736, 679, 680,
	1614, 0, 290, 0, 681, 682, 737, 683, 684, 685,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 296,
	297, 299, 298, 300, 301, 302, 303, 0, 304, 305,
	0, 0, 0, 0, 0, 686, 0, 0, 0, 306,
	0, 307, 308, 0, 309, 310, 311, 312, 313, 314,
	315, 687, 688, 0, 316, 689, 317, 690, 0, 691,
	318, 319, 320, 321, 322, 323, 0, 0, 0, 324,
	692, 693, 694, 0, 325, 326, 695, 0, 0, 0,
	327, 328, 329, 330, 331, 332, 333, 334, 0, 0,
	336, 337, 338, 335, 339, 0, 340, 0, 341, 342,
	343, 344, 345, 346, 0, 347, 348, 349, 0, 350,
	351, 352, 0, 0, 0, 0, 0, 0, 0, 353,
	354, 355, 356, 357, 0, 358, 360, 696, 697, 0,
	363, 359, 361, 0, 364, 362, 365, 0, 366, 367,
	368, 0, 0, 369, 370, 371, 0, 372, 373, 374,
	0, 375, 376, 377, 0, 378, 379, 698, 380, 381,
	382, 384, 386, 383, 385, 387, 388, 389, 390, 699,
	700, 391, 0, 293, 0, 0, 0, 0, 0, 392,
	393, 394, 701, 0, 0, 0, 395, 0, 396, 397,
	398, 0, 399, 400, 0, 0, 401, 402, 403, 702,
	703, 404, 405, 406, 407, 408, 409, 410, 411, 412,
	0, 413, 704, 0, 705, 414, 0, 415, 416, 417,
	418, 419, 420, 421, 706, 707, 708, 510, 0, 422,
	423, 0, 424, 425, 426, 427, 428, 0, 0, 0,
	294, 429, 430, 431, 0, 0, 511, 432, 709, 710,
	0, 711, 0, 433, 434, 0, 712, 0, 435, 436,
	437, 0, 438, 0, 0, 0, 439, 440, 441, 442,
	443, 444, 0, 445, 447, 446, 0, 448, 713, 0,
	449, 450, 0, 0, 451, 452, 453, 454, 455, 456,
	459, 0, 0, 457, 458, 460, 461, 0, 462, 463,
	465, 468, 464, 466, 467, 469, 482, 483, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	485, 0, 484, 0, 486, 487, 488, 489, 490, 497,
	499, 500, 495, 496, 498, 501, 502, 504, 492, 493,
	494, 0, 503, 491, 0, 295, 0, 505, 506, 507,
	508, 0, 714, 509, 715, 512, 513, 0, 0, 514,
	0, 515, 0, 0, 517, 518, 519, 0, 0, 520,
	521, 716, 0, 522, 0, 717, 523, 524, 516, 525,
	526, 527, 528, 529, 530, 531, 532, 533, 0, 534,
	535, 718, 536, 537, 538, 719, 539, 540, 541, 720,
	542, 721, 543, 544, 0, 545, 546, 547, 0, 548,
	549, 550, 551, 552, 553, 554, 555, 722, 556, 557,
	559, 558, 560, 0, 561, 0, 562, 563, 564, 0,
	0, 0, 0, 0, 565, 566, 568, 0, 569, 570,
	571, 572, 567, 573, 574, 575, 576, 577, 0, 578,
	579, 580, 0, 581, 582, 583, 584, 585, 723, 586,
	0, 587, 588, 595, 596, 597, 589, 590, 591, 598,
	599, 600, 601, 602, 0, 604, 605, 603, 606, 607,
	608, 0, 609, 610, 592, 593, 611, 612, 0, 613,
	614, 615, 616, 617, 618, 619, 724, 0, 620, 0,
	621, 622, 623, 624, 625, 627, 594, 628, 633, 634,
	725, 629, 630, 631, 632, 726, 636, 637, 638, 0,
	639, 640, 0, 635, 626, 0, 641, 642, 643, 644,
	645, 646, 0, 647, 648, 0, 649, 727, 728, 729,
	730, 0, 659, 0, 650, 651, 652, 653, 731, 654,
	732, 0, 655, 656, 657, 658, 0, 660, 661, 0,
	0, 662, 663, 665, 667, 668, 664, 666, 669, 0,
	670, 0, 0, 671, 672, 673, 733, 734, 735, 0,
	675, 674, 676, 677, 678, 736, 679, 680, 1607, 0,
	290, 0, 681, 682, 737, 683, 684, 685, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 296, 297, 299,
	298, 300, 301, 302, 303, 0, 304, 305, 0, 0,
	0, 0, 0, 686, 0, 0, 0, 306, 0, 307,
	308, 0, 309, 310, 311, 312, 313, 314, 315, 687,
	688, 0, 316, 689, 317, 690, 0, 691, 318, 319,
	320, 321, 322, 323, 0, 0, 0, 324, 692, 693,
	694, 0, 325, 326, 695, 0, 0, 0, 327, 328,
	329, 330, 331, 332, 333, 334, 0, 0, 336, 337,
	338, 335, 339, 0, 340, 0, 341, 342, 343, 344,
	345, 346, 0, 347, 348, 349, 0, 350, 351, 352,
	0, 0, 0, 0, 0, 0, 0, 353, 354, 355,
	356, 357, 0, 358, 360, 696, 697, 0, 363, 359,
	361, 0, 364, 362, 365, 0, 366, 367, 368, 0,
	0, 369, 370, 371, 0, 372, 373, 374, 0, 375,
	376, 377, 0, 378, 379, 698, 380, 381, 382, 384,
	386, 383, 385, 387, 388, 389, 390, 699, 700, 391,
	0, 293, 0, 0, 0, 0, 0, 392, 393, 394,
	701, 0, 0, 0, 395, 0, 396, 397, 398, 0,
	399, 400, 0, 0, 401, 402, 403, 702, 703, 404,
	405, 406, 407, 408, 409, 410, 411, 412, 0, 413,
	704, 0, 705, 414, 0, 415, 416, 417, 418, 419,
	420, 421, 1609, 707, 708, 510, 0, 422, 423, 0,
	424, 425, 426, 427, 428, 0, 0, 0, 294, 429,
	430, 431, 0, 0, 511, 432, 709, 710, 0, 711,
	0, 433, 434, 0, 712, 0, 435, 436, 437, 0,
	438, 0, 0, 0, 439, 440, 441, 442, 443, 444,
	0, 445, 447, 446, 0, 448, 713, 0, 449, 450,
	0, 0, 451, 452, 453, 454, 455, 456, 459, 0,
	0, 457, 458, 460, 461, 0, 462, 463, 465, 468,
	464, 466, 467, 469, 482, 483, 470, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 485, 0,
	484, 0, 486, 487, 488, 489, 490, 497, 499, 500,
	495, 496, 498, 501, 502, 504, 492, 493, 494, 0,
	503, 491, 0, 295, 0, 505, 506, 507, 508, 0,
	714, 509, 715, 512, 513, 0, 0, 514, 0, 515,
	0, 0, 517, 518, 519, 0, 0, 520, 521, 716,
	0, 522, 0, 717, 523, 524, 516, 525, 526, 527,
	528, 529, 530, 531, 532, 533, 0, 534, 535, 718,
	536, 537, 538, 719, 539, 540, 541, 720, 542, 721,
	543, 544, 0, 545, 546, 547, 0, 548, 549, 550,
	551, 552, 553, 554, 555, 722, 556, 557, 559, 558,
	560, 0, 561, 0, 562, 563, 564, 0, 0, 0,
	0, 0, 565, 566, 568, 0, 569, 570, 571, 572,
	567, 573, 574, 575, 576, 577, 0, 578, 579, 580,
	0, 581, 582, 583, 584, 585, 723, 586, 0, 587,
	588, 595, 596, 597, 589, 590, 591, 598, 599, 600,
	601, 602, 0, 604, 605, 603, 606, 607, 608, 0,
	609, 610, 592, 593, 611, 612, 0, 613, 614, 615,
	616, 617, 618, 619, 724, 0, 620, 0, 621, 622,
	623, 624, 625, 627, 594, 628, 633, 634, 725, 629,
	630, 631, 632, 726, 636, 637, 638, 0, 639, 640,
	0, 635, 626, 0, 641, 642, 643, 644, 645, 646,
	0, 647, 648, 0, 649, 727, 728, 729, 730, 0,
	659, 0, 650, 651, 652, 653, 731, 654, 732, 0,
	655, 656, 657, 658, 0, 660, 661, 0, 0, 662,
	663, 665, 667, 668, 664, 666, 669, 0, 670, 0,
	0, 671, 672, 673, 733, 734, 735, 0, 675, 674,
	676, 677, 678, 736, 679, 680, 1416, 0, 290, 0,
	681, 682, 737, 683, 684, 685, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 296, 297, 299, 298, 300,
	301, 302, 303, 0, 304, 305, 0, 0, 0, 0,
	0, 686, 0, 0, 0, 306, 0, 307, 308, 0,
	309, 310, 311, 312, 313, 314, 315, 687, 688, 0,
	316, 689, 317, 690, 0, 691, 318, 319, 320, 321,
	322, 323, 0, 0, 0, 324, 692, 693, 694, 0,
	325, 326, 695, 0, 0, 0, 327, 328, 329, 330,
	331, 332, 333, 334, 0, 0, 336, 337, 338, 335,
	339, 0, 340, 0, 341, 342, 343, 344, 345, 346,
	0, 347, 348, 349, 0, 350, 351, 352, 0, 0,
	0, 0, 0, 0, 0, 353, 354, 355, 356, 357,
	0, 358, 360, 696, 697, 0, 363, 359, 361, 0,
	364, 362, 365, 0, 366, 367, 368, 0, 0, 369,
	370, 371, 0, 372, 373, 374, 0, 375, 376, 377,
	0, 378, 379, 698, 380, 381, 382, 384, 386, 383,
	385, 387, 388, 389, 390, 699, 700, 391, 0, 293,
	0, 0, 0, 0, 0, 392, 393, 394, 701, 0,
	0, 0, 395, 0, 396, 397, 398, 0, 399, 400,
	0, 0, 401, 402, 403, 702, 703, 404, 405, 406,
	407, 408, 409, 410, 411, 412, 0, 413, 704, 0,
	705, 414, 0, 415, 416, 417, 418, 419, 420, 421,
	1415, 707, 708, 510, 0, 422, 423, 0, 424, 425,
	426, 427, 428, 0, 0, 0, 294, 429, 430, 431,
	0, 0, 511, 432, 709, 710, 0, 711, 0, 433,
	434, 0, 712, 0, 435, 436, 437, 0, 438, 0,
	0, 0, 439, 440, 441, 442, 443, 444, 0, 445,
	447, 446, 0, 448, 713, 0, 449, 450, 0, 0,
	451, 452, 453, 454, 455, 456, 459, 0, 0, 457,
	458, 460, 461, 0, 462, 463, 465, 468, 464, 466,
	467, 469, 482, 483, 470, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 485, 0, 484, 0,
	486, 487, 488, 489, 490, 497, 499, 500, 495, 496,
	498, 501, 502, 504, 492, 493, 494, 0, 503, 491,
	0, 295, 0, 505, 506, 507, 508, 0, 714, 509,
	715, 512, 513, 0, 0, 514, 0, 515, 0, 0,
	517, 518, 519, 0, 0, 520, 521, 716, 0, 522,
	0, 717, 523, 524, 516, 525, 526, 527, 528, 529,
	530, 531, 532, 533, 0, 534, 535, 718, 536, 537,
	538, 719, 539, 540, 541, 720, 542, 721, 543, 544,
	0, 545, 546, 547, 0, 548, 549, 550, 551, 552,
	553, 554, 555, 722, 556, 557, 559, 558, 560, 0,
	561, 0, 562, 563, 564, 0, 0, 0, 0, 0,
	565, 566, 568, 0, 569, 570, 571, 572, 567, 573,
	574, 575, 576, 577, 0, 578, 579, 580, 0, 581,
	582, 583, 584, 585, 723, 586, 0, 587, 588, 595,
	596, 597, 589, 590, 591, 598, 599, 600, 601, 602,
	0, 604, 605, 603, 606, 607, 608, 0, 609, 610,
	592, 593, 611, 612, 0, 613, 614, 615, 616, 617,
	618, 619, 724, 0, 620, 0, 621, 622, 623, 624,
	625, 627, 594, 628, 633, 634, 725, 629, 630, 631,
	632, 726, 636, 637, 638, 0, 639, 640, 0, 635,
	626, 0, 641, 642, 643, 644, 645, 646, 0, 647,
	648, 0, 649, 727, 728, 729, 730, 0, 659, 0,
	650, 651, 652, 653, 731, 654, 732, 0, 655, 656,
	657, 658, 0, 660, 661, 0, 0, 662, 663, 665,
	667, 668, 664, 666, 669, 0, 670, 0, 0, 671,
	672, 673, 733, 734, 735, 0, 675, 674, 676, 677,
	678, 736, 679, 680, 1406, 0, 290, 0, 681, 682,
	737, 683, 684, 685, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 296, 297, 299, 298, 300, 301, 302,
	303, 0, 304, 305, 0, 0, 0, 0, 0, 686,
	0, 0, 0, 306, 0, 307, 308, 0, 309, 310,
	311, 312, 313, 314, 315, 687, 688, 0, 316, 689,
	317, 690, 0, 691, 318, 319, 320, 321, 322, 323,
	0, 0, 0, 324, 692, 693, 694, 0, 325, 326,
	695, 0, 0, 0, 327, 328, 329, 330, 331, 332,
	333, 334, 0, 0, 336, 337, 338, 335, 339, 0,
	340, 0, 341, 342, 343, 344, 345, 346, 0, 347,
	348, 349, 0, 350, 351, 352, 0, 0, 0, 0,
	0, 0, 0, 353, 354, 355, 356, 357, 0, 358,
	360, 696, 697, 0, 363, 359, 361, 0, 364, 362,
	365, 0, 366, 367, 368, 0, 0, 369, 370, 371,
	0, 372, 373, 374, 0, 375, 376, 377, 0, 378,
	379, 698, 380, 381, 382, 384, 386, 383, 385, 387,
	388, 389, 390, 699, 700, 391, 0, 293, 0, 0,
	0, 0, 0, 392, 393, 394, 701, 0, 0, 0,
	395, 0, 396, 397, 398, 0, 399, 400, 0, 0,
	401, 402, 403, 702, 703, 404, 405, 406, 407, 408,
	409, 410, 411, 412, 0, 413, 704, 0, 705, 414,
	0, 415, 416, 417, 418, 419, 420, 421, 1405, 707,
	708, 510, 0, 422, 423, 0, 424, 425, 426, 427,
	428, 0, 0, 0, 294, 429, 430, 431, 0, 0,
	511, 432, 709, 710, 0, 711, 0, 433, 434, 0,
	712, 0, 435, 436, 437, 0, 438, 0, 0, 0,
	439, 440, 441, 442, 443, 444, 0, 445, 447, 446,
	0, 448, 713, 0, 449, 450, 0, 0, 451, 452,
	453, 454, 455, 456, 459, 0, 0, 457, 458, 460,
	461, 0, 462, 463, 465, 468, 464, 466, 467, 469,
	482, 483, 470, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 485, 0, 484, 0, 486, 487,
	488, 489, 490, 497, 499, 500, 495, 496, 498, 501,
	502, 504, 492, 493, 494, 0, 503, 491, 0, 295,
	0, 505, 506, 507, 508, 0, 714, 509, 715, 512,
	513, 0, 0, 514, 0, 515, 0, 0, 517, 518,
	519, 0, 0, 520, 521, 716, 0, 522, 0, 717,
	523, 524, 516, 525, 526, 527, 528, 529, 530, 531,
	532, 533, 0, 534, 535, 718, 536, 537, 538, 719,
	539, 540, 541, 720, 542, 721, 543, 544, 0, 545,
	546, 547, 0, 548, 549, 550, 551, 552, 553, 554,
	555, 722, 556, 557, 559, 558, 560, 0, 561, 0,
	562, 563, 564, 0, 0, 0, 0, 0, 565, 566,
	568, 0, 569, 570, 571, 572, 567, 573, 574, 575,
	576, 577, 0, 578, 579, 580, 0, 581, 582, 583,
	584, 585, 723, 586, 0, 587, 588, 595, 596, 597,
	589, 590, 591, 598, 599, 600, 601, 602, 0, 604,
	605, 603, 606, 607, 608, 0, 609, 610, 592, 593,
	611, 612, 0, 613, 614, 615, 616, 617, 618, 619,
	724, 0, 620, 0, 621, 622, 623, 624, 625, 627,
	594, 628, 633, 634, 725, 629, 630, 631, 632, 726,
	636, 637, 638, 0, 639, 640, 0, 635, 626, 0,
	641, 642, 643, 644, 645, 646, 0, 647, 648, 0,
	649, 727, 728, 729, 730, 0, 659, 0, 650, 651,
	652, 653, 731, 654, 732, 0, 655, 656, 657, 658,
	0, 660, 661, 0, 0, 662, 663, 665, 667, 668,
	664, 666, 669, 0, 670, 0, 0, 671, 672, 673,
	733, 734, 735, 0, 675, 674, 676, 677, 678, 736,
	679, 680, 1403, 0, 290, 0, 681, 682, 737, 683,
	684, 685, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 296, 297, 299, 298, 300, 301, 302, 303, 0,
	304, 305, 0, 0, 0, 0, 0, 686, 0, 0,
	0, 306, 0, 307, 308, 0, 309, 310, 311, 312,
	313, 314, 315, 687, 688, 0, 316, 689, 317, 690,
	0, 691, 318, 319, 320, 321, 322, 323, 0, 0,
	0, 324, 692, 693, 694, 0, 325, 326, 695, 0,
	0, 0, 327, 328, 329, 330, 331, 332, 333, 334,
	0, 0, 336, 337, 338, 335, 339, 0, 340, 0,
	341, 342, 343, 344, 345, 346, 0, 347, 348, 349,
	0, 350, 351, 352, 0, 0, 0, 0, 0, 0,
	0, 353, 354, 355, 356, 357, 0, 358, 360, 696,
	697, 0, 363, 359, 361, 0, 364, 362, 365, 0,
	366, 367, 368, 0, 0, 369, 370, 371, 0, 372,
	373, 374, 0, 375, 376, 377, 0, 378, 379, 698,
	380, 381, 382, 384, 386, 383, 385, 387, 388, 389,
	390, 699, 700, 391, 0, 293, 0, 0, 0, 0,
	0, 392, 393, 394, 701, 0, 0, 0, 395, 0,
	396, 397, 398, 0, 399, 400, 0, 0, 401, 402,
	403, 702, 703, 404, 405, 406, 407, 408, 409, 410,
	411, 412, 0, 413, 704, 0, 705, 414, 0, 415,
	416, 417, 418, 419, 420, 421, 1402, 707, 708, 510,
	0, 422, 423, 0, 424, 425, 426, 427, 428, 0,
	0, 0, 294, 429, 430, 431, 0, 0, 511, 432,
	709, 710, 0, 711, 0, 433, 434, 0, 712, 0,
	435, 436, 437, 0, 438, 0, 0, 0, 439, 440,
	441, 442, 443, 444, 0, 445, 447, 446, 0, 448,
	713, 0, 449, 450, 0, 0, 451, 452, 453, 454,
	455, 456, 459, 0, 0, 457, 458, 460, 461, 0,
	462, 463, 465, 468, 464, 466, 467, 469, 482, 483,
	470, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 485, 0, 484, 0, 486, 487, 488, 489,
	490, 497, 499, 500, 495, 496, 498, 501, 502, 504,
	492, 493, 494, 0, 503, 491, 0, 295, 0, 505,
	506, 507, 508, 0, 714, 509, 715, 512, 513, 0,
	0, 514, 0, 515, 0, 0, 517, 518, 519, 0,
	0, 520, 521, 716, 0, 522, 0, 717, 523, 524,
	516, 525, 526, 527, 528, 529, 530, 531, 532, 533,
	0, 534, 535, 718, 536, 537, 538, 719, 539, 540,
	541, 720, 542, 721, 543, 544, 0, 545, 546, 547,
	0, 548, 549, 550, 551, 552, 553, 554, 555, 722,
	556, 557, 559, 558, 560, 0, 561, 0, 562, 563,
	564, 0, 0, 0, 0, 0, 565, 566, 568, 0,
	569, 570, 571, 572, 567, 573, 574, 575, 576, 577,
	0, 578, 579, 580, 0, 581, 582, 583, 584, 585,
	723, 586, 0, 587, 588, 595, 596, 597, 589, 590,
	591, 598, 599, 600, 601, 602, 0, 604, 605, 603,
	606, 607, 608, 0, 609, 610, 592, 593, 611, 612,
	0, 613, 614, 615, 616, 617, 618, 619, 724, 0,
	620, 0, 621, 622, 623, 624, 625, 627, 594, 628,
	633, 634, 725, 629, 630, 631, 632, 726, 636, 637,
	638, 0, 639, 640, 0, 635, 626, 0, 641, 642,
	643, 644, 645, 646, 0, 647, 648, 0, 649, 727,
	728, 729, 730, 0, 659, 0, 650, 651, 652, 653,
	731, 654, 732, 0, 655, 656, 657, 658, 0, 660,
	661, 0, 0, 662, 663, 665, 667, 668, 664, 666,
	669, 0, 670, 0, 0, 671, 672, 673, 733, 734,
	735, 0, 675, 674, 676, 677, 678, 736, 679, 680,
	1398, 0, 290, 0, 681, 682, 737, 683, 684, 685,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 296,
	297, 299, 298, 300, 301, 302, 303, 0, 304, 305,
	0, 0, 0, 0, 0, 686, 0, 0, 0, 306,
	0, 307, 308, 0, 309, 310, 311, 312, 313, 314,
	315, 687, 688, 0, 316, 689, 317, 690, 0, 691,
	318, 319, 320, 321, 322, 323, 0, 0, 0, 324,
	692, 693, 694, 0, 325, 326, 695, 0, 0, 0,
	327, 328, 329, 330, 331, 332, 333, 334, 0, 0,
	336, 337, 338, 335, 339, 0, 340, 0, 341, 342,
	343, 344, 345, 346, 0, 347, 348, 349, 0, 350,
	351, 352, 0, 0, 0, 0, 0, 0, 0, 353,
	354, 355, 356, 357, 0, 358, 360, 696, 697, 0,
	363, 359, 361, 0, 364, 362, 365, 0, 366, 367,
	368, 0, 0, 369, 370, 371, 0, 372, 373, 374,
	0, 375, 376, 377, 0, 378, 379, 698, 380, 381,
	382, 384, 386, 383, 385, 387, 388, 389, 390, 699,
	700, 391, 0, 293, 0, 0, 0, 0, 0, 392,
	393, 394, 701, 0, 0, 0, 395, 0, 396, 397,
	398, 0, 399, 400, 0, 0, 401, 402, 403, 702,
	703, 404, 405, 406, 407, 408, 409, 410, 411, 412,
	0, 413, 704, 0, 705, 414, 0, 415, 416, 417,
	418, 419, 420, 421, 1397, 707, 708, 510, 0, 422,
	423, 0, 424, 425, 426, 427, 428, 0, 0, 0,
	294, 429, 430, 431, 0, 0, 511, 432, 709, 710,
	0, 711, 0, 433, 434, 0, 712, 0, 435, 436,
	437, 0, 438, 0, 0, 0, 439, 440, 441, 442,
	443, 444, 0, 445, 447, 446, 0, 448, 713, 0,
	449, 450, 0, 0, 451, 452, 453, 454, 455, 456,
	459, 0, 0, 457, 458, 460, 461, 0, 462, 463,
	465, 468, 464, 466, 467, 469, 482, 483, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	485, 0, 484, 0, 486, 487, 488, 489, 490, 497,
	499, 500, 495, 496, 498, 501, 502, 504, 492, 493,
	494, 0, 503, 491, 0, 295, 0, 505, 506, 507,
	508, 0, 714, 509, 715, 512, 513, 0, 0, 514,
	0, 515, 0, 0, 517, 518, 519, 0, 0, 520,
	521, 716, 0, 522, 0, 717, 523, 524, 516, 525,
	526, 527, 528, 529, 530, 531, 532, 533, 0, 534,
	535, 718, 536, 537, 538, 719, 539, 540, 541, 720,
	542, 721, 543, 544, 0, 545, 546, 547, 0, 548,
	549, 550, 551, 552, 553, 554, 555, 722, 556, 557,
	559, 558, 560, 0, 561, 0, 562, 563, 564, 0,
	0, 0, 0, 0, 565, 566, 568, 0, 569, 570,
	571, 572, 567, 573, 574, 575, 576, 577, 0, 578,
	579, 580, 0, 581, 582, 583, 584, 585, 723, 586,
	0, 587, 588, 595, 596, 597, 589, 590, 591, 598,
	599, 600, 601, 602, 0, 604, 605, 603, 606, 607,
	608, 0, 609, 610, 592, 593, 611, 612, 0, 613,
	614, 615, 616, 617, 618, 619, 724, 0, 620, 0,
	621, 622, 623, 624, 625, 627, 594, 628, 633, 634,
	725, 629, 630, 631, 632, 726, 636, 637, 638, 0,
	639, 640, 0, 635, 626, 0, 641, 642, 643, 644,
	645, 646, 0, 647, 648, 0, 649, 727, 728, 729,
	730, 0, 659, 0, 650, 651, 652, 653, 731, 654,
	732, 0, 655, 656, 657, 658, 0, 660, 661, 0,
	0, 662, 663, 665, 667, 668, 664, 666, 669, 0,
	670, 0, 0, 671, 672, 673, 733, 734, 735, 0,
	675, 674, 676, 677, 678, 736, 679, 680, 739, 0,
	290, 0, 681, 682, 737, 683, 684, 685, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 296, 297, 299,
	298, 300, 301, 302, 303, 0, 304, 305, 0, 0,
	0, 0, 0, 686, 0, 0, 0, 306, 0, 307,
	308, 0, 309, 310, 311, 312, 313, 314, 315, 687,
	688, 0, 316, 689, 317, 690, 0, 691, 318, 319,
	320, 321, 322, 323, 0, 0, 0, 324, 692, 693,
	694, 0, 325, 326, 695, 0, 0, 0, 327, 328,
	329, 330, 331, 332, 333, 334, 0, 0, 336, 337,
	338, 335, 339, 0, 340, 0, 341, 342, 343, 344,
	345, 346, 0, 347, 348, 349, 0, 350, 351, 352,
	0, 0, 0, 0, 0, 0, 0, 353, 354, 355,
	356, 357, 0, 358, 360, 696, 697, 0, 363, 359,
	361, 0, 364, 362, 365, 0, 366, 367, 368, 0,
	0, 369, 370, 371, 0, 372, 373, 374, 0, 375,
	376, 377, 0, 378, 379, 698, 380, 381, 382, 384,
	386, 383, 385, 387, 388, 389, 390, 699, 700, 391,
	0, 293, 0, 0, 0, 0, 0, 392, 393, 394,
	701, 0, 0, 0, 395, 0, 396, 397, 398, 0,
	399, 400, 0, 0, 401, 402, 403, 702, 703, 404,
	405, 406, 407, 408, 409, 410, 411, 412, 0, 413,
	704, 0, 705, 414, 0, 415, 416, 417, 418, 419,
	420, 421, 706, 707, 708, 510, 0, 422, 423, 0,
	424, 425, 426, 427, 428, 0, 0, 0, 294, 429,
	430, 431, 0, 0, 511, 432, 709, 710, 0, 711,
	0, 433, 434, 0, 712, 0, 435, 436, 437, 0,
	438, 0, 0, 0, 439, 440, 441, 442, 443, 444,
	0, 445, 447, 446, 0, 448, 713, 0, 449, 450,
	0, 0, 451, 452, 453, 454, 455, 456, 459, 0,
	0, 457, 458, 460, 461, 0, 462, 463, 465, 468,
	464, 466, 467, 469, 482, 483, 470, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 485, 0,
	484, 0, 486, 487, 488, 489, 490, 497, 499, 500,
	495, 496, 498, 501, 502, 504, 492, 493, 494, 0,
	503, 491, 0, 295, 0, 505, 506, 507, 508, 0,
	714, 509, 715, 512, 513, 0, 0, 514, 0, 515,
	0, 0, 517, 518, 519, 0, 0, 520, 521, 716,
	0, 522, 0, 717, 523, 524, 516, 525, 526, 527,
	528, 529, 530, 531, 532, 533, 0, 534, 535, 718,
	536, 537, 538, 719, 539, 540, 541, 720, 542, 721,
	543, 544, 0, 545, 546, 547, 0, 548, 549, 550,
	551, 552, 553, 554, 555, 722, 556, 557, 559, 558,
	560, 0, 561, 0, 562, 563, 564, 0, 0, 0,
	0, 0, 565, 566, 568, 0, 569, 570, 571, 572,
	567, 573, 574, 575, 576, 577, 0, 578, 579, 580,
	0, 581, 582, 583, 584, 585, 723, 586, 0, 587,
	588, 595, 596, 597, 589, 590, 591, 598, 599, 600,
	601, 602, 0, 604, 605, 603, 606, 607, 608, 0,
	609, 610, 592, 593, 611, 612, 0, 613, 614, 615,
	616, 617, 618, 619, 724, 0, 620, 0, 621, 622,
	623, 624, 625, 627, 594, 628, 633, 634, 725, 629,
	630, 631, 632, 726, 636, 637, 638, 0, 639, 640,
	0, 635, 626, 0, 641, 642, 643, 644, 645, 646,
	0, 647, 648, 0, 649, 727, 728, 729, 730, 0,
	659, 0, 650, 651, 652, 653, 731, 654, 732, 0,
	655, 656, 657, 658, 0, 660, 661, 0, 0, 662,
	663, 665, 667, 668, 664, 666, 669, 0, 670, 0,
	0, 671, 672, 673, 733, 734, 735, 0, 675, 674,
	676, 677, 678, 736, 679, 680, 281, 0, 290, 0,
	681, 682, 737, 683, 684, 685, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 296, 297, 299, 298, 300,
	301, 302, 303, 0, 304, 305, 0, 0, 0, 0,
	0, 686, 0, 0, 0, 306, 0, 307, 308, 0,
	309, 310, 311, 312, 313, 314, 315, 687, 688, 0,
	316, 689, 317, 690, 0, 691, 318, 319, 320, 321,
	322, 323, 0, 0, 0, 324, 692, 693, 694, 0,
	325, 326, 695, 0, 0, 0, 327, 328, 329, 330,
	331, 332, 333, 334, 0, 0, 336, 337, 338, 335,
	339, 0, 340, 0, 341, 342, 343, 344, 345, 346,
	0, 347, 348, 349, 0, 350, 351, 352, 0, 0,
	0, 0, 0, 0, 0, 353, 354, 355, 356, 357,
	0, 358, 360, 696, 697, 0, 363, 359, 361, 0,
	364, 362, 365, 0, 366, 367, 368, 0, 0, 369,
	370, 371, 0, 372, 373, 374, 0, 375, 376, 377,
	0, 378, 379, 698, 380, 381, 382, 384, 386, 383,
	385, 387, 388, 389, 390, 699, 700, 391, 0, 293,
	0, 0, 0, 0, 0, 392, 393, 394, 701, 0,
	0, 0, 395, 0, 396, 397, 398, 0, 399, 400,
	0, 0, 401, 402, 403, 702, 703, 404, 405, 406,
	407, 408, 409, 410, 411, 412, 0, 413, 704, 0,
	705, 414, 0, 415, 416, 417, 418, 419, 420, 421,
	706, 707, 708, 510, 0, 422, 423, 0, 424, 425,
	426, 427, 428, 0, 0, 0, 294, 429, 430, 431,
	0, 0, 511, 432, 709, 710, 0, 711, 0, 433,
	434, 0, 712, 0, 435, 436, 437, 0, 438, 0,
	0, 0, 439, 440, 441, 442, 443, 444, 0, 445,
	447, 446, 0, 448, 713, 0, 449, 450, 0, 0,
	451, 452, 453, 454, 455, 456, 459, 0, 0, 457,
	458, 460, 461, 0, 462, 463, 465, 468, 464, 466,
	467, 469, 482, 483, 470, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 485, 0, 484, 0,
	486, 487, 488, 489, 490, 497, 499, 500, 495, 496,
	498, 501, 502, 504, 492, 493, 494, 0, 503, 491,
	0, 295, 0, 505, 506, 507, 508, 0, 714, 509,
	715, 512, 513, 0, 0, 514, 0, 515, 0, 0,
	517, 518, 519, 0, 0, 520, 521, 716, 0, 522,
	0, 717, 523, 524, 516, 525, 526, 527, 528, 529,
	530, 531, 532, 533, 0, 534, 535, 718, 536, 537,
	538, 719, 539, 540, 541, 720, 542, 721, 543, 544,
	0, 545, 546, 547, 0, 548, 549, 550, 551, 552,
	553, 554, 555, 722, 556, 557, 559, 558, 560, 0,
	561, 0, 562, 563, 564, 0, 0, 0, 0, 0,
	565, 566, 568, 0, 569, 570, 571, 572, 567, 573,
	574, 575, 576, 577, 0, 578, 579, 580, 0, 581,
	582, 583, 584, 585, 723, 586, 0, 587, 588, 595,
	596, 597, 589, 590, 591, 598, 599, 600, 601, 602,
	0, 604, 605, 603, 606, 607, 608, 0, 609, 610,
	592, 593, 611, 612, 0, 613, 614, 615, 616, 617,
	618, 619, 724, 0, 620, 0, 621, 622, 623, 624,
	625, 627, 594, 628, 633, 634, 725, 629, 630, 631,
	632, 726, 636, 637, 638, 0, 639, 640, 0, 635,
	626, 0, 641, 642, 643, 644, 645, 646, 0, 647,
	648, 0, 649, 727, 728, 729, 730, 0, 659, 0,
	650, 651, 652, 653, 731, 654, 732, 0, 655, 656,
	657, 658, 0, 660, 661, 0, 0, 662, 663, 665,
	667, 668, 664, 666, 669, 0, 670, 0, 0, 671,
	672, 673, 733, 734, 735, 0, 675, 674, 676, 677,
	678, 736, 679, 680, 290, 0, 0, 0, 681, 682,
	737, 683, 684, 685, 0, 0, 0, 0, 0, 0,
	0, 296, 297, 299, 298, 300, 301, 302, 303, 0,
	304, 305, 0, 0, 0, 0, 0, 686, 0, 0,
	0, 306, 0, 307, 308, 0, 309, 310, 311, 312,
	313, 314, 315, 687, 688, 0, 316, 689, 317, 690,
	0, 691, 318, 319, 320, 321, 322, 323, 0, 0,
	0, 324, 692, 693, 694, 0, 325, 326, 695, 0,
	0, 0, 327, 328, 329, 330, 331, 332, 333, 334,
	0, 0, 336, 337, 338, 335, 339, 0, 340, 0,
	341, 342, 343, 344, 345, 346, 0, 347, 348, 349,
	0, 350, 351, 352, 0, 0, 0, 0, 0, 0,
	0, 353, 354, 355, 356, 357, 0, 358, 360, 696,
	697, 0, 363, 359, 361, 0, 364, 362, 365, 0,
	366, 367, 368, 0, 0, 369, 370, 371, 0, 372,
	373, 374, 0, 375, 376, 377, 0, 378, 379, 698,
	380, 381, 382, 384, 386, 383, 385, 387, 388, 389,
	390, 699, 700, 391, 0, 293, 0, 0, 0, 0,
	0, 392, 393, 394, 701, 0, 0, 0, 395, 0,
	396, 397, 398, 0, 399, 400, 0, 0, 401, 402,
	403, 702, 703, 404, 405, 406, 407, 408, 409, 410,
	411, 412, 0, 413, 704, 0, 705, 414, 0, 415,
	416, 417, 418, 419, 420, 421, 706, 707, 708, 510,
	0, 422, 423, 0, 424, 425, 426, 427, 428, 0,
	0, 0, 294, 429, 430, 431, 0, 0, 511, 432,
	709, 710, 0, 711, 0, 433, 434, 0, 712, 0,
	435, 436, 437, 0, 438, 0, 0, 0, 439, 440,
	441, 442, 443, 444, 0, 445, 447, 446, 0, 448,
	713, 0, 449, 450, 0, 0, 451, 452, 453, 454,
	455, 456, 459, 0, 0, 457, 458, 460, 461, 0,
	462, 463, 465, 468, 464, 466, 467, 469, 482, 483,
	470, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 485, 0, 484, 0, 486, 487, 488, 489,
	490, 497, 499, 500, 495, 496, 498, 501, 502, 504,
	492, 493, 494, 0, 503, 491, 0, 295, 0, 505,
	506, 507, 508, 0, 714, 509, 715, 512, 513, 0,
	0, 514, 0, 515, 0, 0, 517, 518, 519, 0,
	0, 520, 521, 716, 0, 522, 0, 717, 523, 524,
	516, 525, 526, 527, 528, 529, 530, 531, 532, 533,
	0, 534, 535, 718, 536, 537, 538, 719, 539, 540,
	541, 720, 542, 721, 543, 544, 0, 545, 546, 547,
	0, 548, 549, 550, 551, 552, 553, 554, 555, 722,
	556, 557, 559, 558, 560, 0, 561, 0, 562, 563,
	564, 0, 0, 0, 0, 0, 565, 566, 568, 0,
	569, 570, 571, 572, 567, 573, 574, 575, 576, 577,
	0, 578, 579, 580, 0, 581, 582, 583, 584, 585,
	723, 586, 0, 587, 588, 595, 596, 597, 589, 590,
	591, 598, 599, 600, 601, 602, 0, 604, 605, 603,
	606, 607, 608, 0, 609, 610, 592, 593, 611, 612,
	0, 613, 614, 615, 616, 617, 618, 619, 724, 0,
	620, 0, 621, 622, 623, 624, 625, 627, 594, 628,
	633, 634, 725, 629, 630, 631, 632, 726, 636, 637,
	638, 0, 639, 640, 0, 635, 626, 0, 641, 642,
	643, 644, 645, 646, 0, 647, 648, 0, 649, 727,
	728, 729, 730, 0, 659, 0, 650, 651, 652, 653,
	731, 654, 732, 0, 655, 656, 657, 658, 0, 660,
	661, 0, 0, 662, 663, 665, 667, 668, 664, 666,
	669, 0, 670, 0, 0, 671, 672, 673, 733, 734,
	735, 0, 675, 674, 676, 677, 678, 736, 679, 680,
	290, 0, 0, 0, 681, 682, 737, 683, 684, 685,
	0, 0, 0, 0, 0, 0, 0, 296, 297, 299,
	298, 300, 301, 302, 303, 0, 304, 305, 0, 0,
	0, 0, 0, 686, 0, 0, 0, 306, 0, 307,
	308, 0, 309, 310, 311, 312, 313, 314, 315, 687,
	688, 0, 316, 689, 317, 690, 0, 691, 318, 319,
	320, 321, 322, 323, 0, 0, 0, 324, 692, 693,
	694, 0, 325, 326, 695, 0, 0, 0, 327, 328,
	329, 330, 331, 332, 333, 334, 0, 0, 336, 337,
	338, 335, 339, 0, 340, 0, 341, 342, 343, 344,
	345, 346, 761, 347, 348, 349, 0, 350, 351, 352,
	0, 0, 0, 0, 0, 0, 0, 353, 354, 355,
	356, 357, 0, 358, 360, 696, 697, 0, 363, 359,
	361, 0, 364, 362, 365, 0, 366, 367, 368, 0,
	0, 369, 370, 371, 0, 372, 373, 374, 0, 375,
	376, 377, 0, 378, 379, 698, 380, 381, 382, 384,
	386, 383, 385, 387, 388, 389, 390, 699, 700, 391,
	0, 0, 0, 0, 0, 0, 0, 392, 393, 394,
	701, 0, 0, 0, 395, 0, 396, 397, 398, 0,
	399, 400, 0, 0, 401, 402, 403, 702, 703, 404,
	405, 406, 407, 408, 409, 410, 411, 412, 762, 413,
	704, 0, 705, 414, 0, 415, 416, 417, 418, 419,
	420, 421, 706, 707, 708, 510, 0, 422, 423, 0,
	424, 425, 426, 427, 428, 0, 0, 0, 0, 429,
	430, 431, 0, 0, 511, 432, 709, 710, 0, 711,
	0, 433, 434, 0, 712, 0, 435, 436, 437, 0,
	438, 0, 0, 0, 439, 440, 441, 442, 443, 444,
	0, 445, 447, 446, 0, 448, 713, 0, 449, 450,
	0, 0, 451, 452, 453, 454, 455, 456, 459, 0,
	0, 457, 458, 460, 461, 0, 462, 463, 465, 468,
	464, 466, 467, 469, 482, 483, 470, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 485, 0,
	484, 0, 486, 487, 488, 489, 490, 497, 499, 500,
	495, 496, 498, 501, 502, 504, 492, 493, 494, 0,
	503, 491, 0, 0, 0, 505, 506, 507, 508, 0,
	714, 509, 715, 512, 513, 0, 0, 514, 0, 515,
	0, 0, 517, 518, 519, 0, 0, 520, 521, 716,
	0, 522, 0, 717, 523, 524, 516, 525, 526, 527,
	528, 529, 530, 531, 532, 533, 0, 534, 535, 718,
	536, 537, 538, 719, 539, 540, 541, 720, 542, 721,
	543, 544, 0, 545, 546, 547, 0, 548, 549, 550,
	551, 552, 553, 554, 555, 722, 556, 557, 559, 558,
	560, 0, 561, 0, 562, 563, 564, 0, 0, 0,
	0, 0, 565, 566, 568, 0, 569, 570, 571, 572,
	567, 573, 574, 575, 576, 577, 0, 578, 579, 580,
	0, 581, 582, 583, 584, 585, 723, 586, 0, 587,
	588, 595, 596, 597, 589, 590, 591, 598, 599, 600,
	601, 602, 763, 604, 605, 603, 606, 607, 608, 0,
	609, 610, 592, 593, 611, 612, 0, 613, 614, 615,
	616, 617, 618, 619, 724, 0, 620, 0, 621, 622,
	623, 624, 625, 627, 594, 628, 633, 634, 725, 629,
	630, 631, 632, 726, 636, 637, 638, 0, 639, 640,
	0, 635, 626, 0, 641, 642, 643, 644, 645, 646,
	0, 647, 648, 0, 649, 727, 728, 729, 730, 0,
	659, 0, 650, 651, 652, 653, 731, 654, 732, 0,
	655, 656, 657, 658, 0, 660, 661, 0, 0, 662,
	663, 665, 667, 668, 664, 666, 669, 0, 670, 0,
	0, 671, 672, 673, 733, 734, 735, 0, 675, 674,
	676, 677, 678, 736, 679, 680, 290, 0, 0, 0,
	681, 682, 737, 683, 684, 685, 0, 0, 0, 0,
	0, 0, 0, 296, 297, 299, 298, 300, 301, 302,
	303, 0, 304, 305, 0, 0, 0, 0, 0, 686,
	0, 0, 0, 306, 0, 307, 308, 0, 309, 310,
	311, 312, 313, 314, 315, 687, 688, 0, 316, 689,
	317, 690, 0, 691, 318, 319, 320, 321, 322, 323,
	0, 0, 0, 324, 692, 693, 694, 0, 325, 326,
	695, 0, 0, 0, 327, 328, 329, 330, 331, 332,
	333, 334, 0, 0, 336, 337, 338, 335, 339, 0,
	340, 0, 341, 342, 343, 344, 345, 346, 0, 347,
	348, 349, 0, 350, 351, 352, 0, 0, 0, 0,
	0, 0, 0, 353, 354, 355, 2551, 357, 0, 358,
	360, 696, 697, 0, 363, 359, 361, 0, 364, 362,
	365, 0, 366, 367, 368, 0, 0, 369, 370, 371,
	0, 372, 373, 374, 0, 375, 376, 377, 0, 378,
	379, 698, 380, 381, 382, 384, 386, 383, 385, 387,
	388, 389, 390, 699, 700, 391, 0, 293, 0, 0,
	0, 0, 0, 392, 393, 394, 701, 0, 0, 0,
	395, 0, 396, 397, 398, 0, 399, 400, 0, 0,
	401, 402, 403, 702, 703, 404, 405, 406, 407, 408,
	409, 410, 411, 412, 0, 413, 704, 0, 705, 414,
	0, 415, 416, 417, 418, 419, 420, 421, 706, 707,
	708, 510, 0, 422, 423, 0, 424, 425, 426, 427,
	428, 0, 0, 0, 294, 429, 430, 431, 0, 0,
	511, 432, 709, 710, 0, 711, 0, 433, 434, 0,
	712, 0, 435, 436, 437, 0, 438, 0, 0, 0,
	439, 440, 441, 442, 443, 444, 0, 445, 447, 446,
	0, 448, 713, 0, 449, 450, 0, 0, 451, 452,
	453, 454, 455, 456, 459, 0, 0, 457, 458, 460,
	461, 0, 462, 463, 465, 468, 464, 466, 467, 469,
	482, 483, 470, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 485, 0, 484, 0, 486, 487,
	488, 489, 490, 497, 499, 500, 495, 496, 498, 501,
	502, 504, 492, 493, 494, 0, 503, 491, 0, 295,
	0, 505, 506, 507, 508, 0, 714, 509, 715, 512,
	513, 0, 0, 514, 0, 515, 0, 0, 517, 518,
	519, 0, 0, 520, 521, 716, 0, 522, 0, 717,
	523, 524, 516, 525, 526, 527, 528, 529, 530, 531,
	532, 533, 0, 534, 535, 718, 536, 537, 538, 719,
	539, 540, 541, 720, 542, 721, 543, 544, 0, 545,
	546, 547, 0, 548, 549, 550, 551, 552, 553, 554,
	555, 722, 556, 557, 559, 558, 560, 0, 561, 0,
	562, 563, 564, 0, 0, 0, 0, 0, 565, 566,
	568, 0, 569, 570, 571, 572, 567, 573, 574, 575,
	576, 577, 0, 578, 579, 580, 0, 581, 582, 583,
	584, 585, 723, 586, 0, 587, 588, 595, 596, 597,
	589, 590, 591, 598, 599, 600, 601, 602, 0, 604,
	605, 603, 606, 607, 608, 0, 609, 610, 592, 593,
	611, 612, 0, 613, 614, 615, 616, 617, 618, 619,
	724, 0, 620, 0, 621, 622, 623, 624, 625, 627,
	594, 628, 633, 634, 725, 629, 630, 631, 632, 726,
	636, 637, 638, 0, 639, 640, 0, 635, 626, 0,
	641, 642, 643, 644, 645, 646, 0, 647, 648, 0,
	649, 727, 728, 729, 730, 0, 659, 0, 650, 651,
	652, 653, 731, 654, 732, 0, 655, 656, 657, 658,
	0, 660, 661, 0, 0, 662, 663, 665, 667, 668,
	664, 666, 669, 0, 670, 0, 0, 671, 672, 673,
	733, 734, 735, 0, 675, 674, 676, 677, 678, 736,
	679, 680, 290, 0, 0, 0, 681, 682, 737, 683,
	684, 685, 0, 0, 0, 0, 0, 0, 0, 296,
	297, 299, 298, 300, 301, 302, 303, 0, 304, 305,
	0, 0, 0, 0, 0, 686, 0, 0, 0, 306,
	0, 307, 308, 0, 309, 310, 311, 312, 313, 314,
	315, 687, 688, 0, 316, 689, 317, 690, 0, 691,
	318, 319, 320, 321, 322, 323, 0, 0, 0, 324,
	692, 693, 694, 0, 325, 326, 695, 0, 0, 0,
	327, 328, 329, 330, 331, 332, 333, 334, 0, 0,
	336, 337, 338, 335, 339, 0, 340, 0, 341, 342,
	343, 344, 345, 346, 0, 347, 348, 349, 0, 350,
	351, 352, 0, 0, 0, 0, 0, 0, 0, 353,
	354, 355, 2549, 357, 0, 358, 360, 696, 697, 0,
	363, 359, 361, 0, 364, 362, 365, 0, 366, 367,
	368, 0, 0, 369, 370, 371, 0, 372, 373, 374,
	0, 375, 376, 377, 0, 378, 379, 698, 380, 381,
	382, 384, 386, 383, 385, 387, 388, 389, 390, 699,
	700, 391, 0, 293, 0, 0, 0, 0, 0, 392,
	393, 394, 701, 0, 0, 0, 395, 0, 396, 397,
	398, 0, 399, 400, 0, 0, 401, 402, 403, 702,
	703, 404, 405, 406, 407, 408, 409, 410, 411, 412,
	0, 413, 704, 0, 705, 414, 0, 415, 416, 417,
	418, 419, 420, 421, 706, 707, 708, 510, 0, 422,
	423, 0, 424, 425, 426, 427, 428, 0, 0, 0,
	294, 429, 430, 431, 0, 0, 511, 432, 709, 710,
	0, 711, 0, 433, 434, 0, 712, 0, 435, 436,
	437, 0, 438, 0, 0, 0, 439, 440, 441, 442,
	443, 444, 0, 445, 447, 446, 0, 448, 713, 0,
	449, 450, 0, 0, 451, 452, 453, 454, 455, 456,
	459, 0, 0, 457, 458, 460, 461, 0, 462, 463,
	465, 468, 464, 466, 467, 469, 482, 483, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	485, 0, 484, 0, 486, 487, 488, 489, 490, 497,
	499, 500, 495, 496, 498, 501, 502, 504, 492, 493,
	494, 0, 503, 491, 0, 295, 0, 505, 506, 507,
	508, 0, 714, 509, 715, 512, 513, 0, 0, 514,
	0, 515, 0, 0, 517, 518, 519, 0, 0, 520,
	521, 716, 0, 522, 0, 717, 523, 524, 516, 525,
	526, 527, 528, 529, 530, 531, 532, 533, 0, 534,
	535, 718, 536, 537, 538, 719, 539, 540, 541, 720,
	542, 721, 543, 544, 0, 545, 546, 547, 0, 548,
	549, 550, 551, 552, 553, 554, 555, 722, 556, 557,
	559, 558, 560, 0, 561, 0, 562, 563, 564, 0,
	0, 0, 0, 0, 565, 566, 568, 0, 569, 570,
	571, 572, 567, 573, 574, 575, 576, 577, 0, 578,
	579, 580, 0, 581, 582, 583, 584, 585, 723, 586,
	0, 587, 588, 595, 596, 597, 589, 590, 591, 598,
	599, 600, 601, 602, 0, 604, 605, 603, 606, 607,
	608, 0, 609, 610, 592, 593, 611, 612, 0, 613,
	614, 615, 616, 617, 618, 619, 724, 0, 620, 0,
	621, 622, 623, 624, 625, 627, 594, 628, 633, 634,
	725, 629, 630, 631, 632, 726, 636, 637, 638, 0,
	639, 640, 0, 635, 626, 0, 641, 642, 643, 644,
	645, 646, 0, 647, 648, 0, 649, 727, 728, 729,
	730, 0, 659, 0, 650, 651, 652, 653, 731, 654,
	732, 0, 655, 656, 657, 658, 0, 660, 661, 0,
	0, 662, 663, 665, 667, 668, 664, 666, 669, 0,
	670, 0, 0, 671, 672, 673, 733, 734, 735, 0,
	675, 674, 676, 677, 678, 736, 679, 680, 290, 0,
	0, 0, 681, 682, 737, 683, 684, 685, 0, 0,
	0, 0, 0, 0, 0, 296, 297, 299, 298, 300,
	301, 302, 303, 0, 304, 305, 0, 0, 0, 0,
	0, 686, 0, 0, 0, 306, 0, 307, 308, 0,
	309, 310, 311, 312, 313, 314, 315, 687, 688, 0,
	316, 689, 317, 690, 0, 691, 318, 319, 320, 321,
	322, 323, 0, 0, 0, 324, 692, 693, 694, 0,
	325, 326, 695, 0, 0, 0, 327, 328, 329, 330,
	331, 332, 333, 334, 0, 0, 336, 337, 338, 335,
	339, 0, 340, 0, 341, 342, 343, 344, 345, 346,
	0, 347, 348, 349, 0, 350, 351, 352, 0, 0,
	0, 0, 0, 0, 0, 353, 354, 355, 2547, 357,
	0, 358, 360, 696, 697, 0, 363, 359, 361, 0,
	364, 362, 365, 0, 366, 367, 368, 0, 0, 369,
	370, 371, 0, 372, 373, 374, 0, 375, 376, 377,
	0, 378, 379, 698, 380, 381, 382, 384, 386, 383,
	385, 387, 388, 389, 390, 699, 700, 391, 0, 293,
	0, 0, 0, 0, 0, 392, 393, 394, 701, 0,
	0, 0, 395, 0, 396, 397, 398, 0, 399, 400,
	0, 0, 401, 402, 403, 702, 703, 404, 405, 406,
	407, 408, 409, 410, 411, 412, 0, 413, 704, 0,
	705, 414, 0, 415, 416, 417, 418, 419, 420, 421,
	706, 707, 708, 510, 0, 422, 423, 0, 424, 425,
	426, 427, 428, 0, 0, 0, 294, 429, 430, 431,
	0, 0, 511, 432, 709, 710, 0, 711, 0, 433,
	434, 0, 712, 0, 435, 436, 437, 0, 438, 0,
	0, 0, 439, 440, 441, 442, 443, 444, 0, 445,
	447, 446, 0, 448, 713, 0, 449, 450, 0, 0,
	451, 452, 453, 454, 455, 456, 459, 0, 0, 457,
	458, 460, 461, 0, 462, 463, 465, 468, 464, 466,
	467, 469, 482, 483, 470, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 485, 0, 484, 0,
	486, 487, 488, 489, 490, 497, 499, 500, 495, 496,
	498, 501, 502, 504, 492, 493, 494, 0, 503, 491,
	0, 295, 0, 505, 506, 507, 508, 0, 714, 509,
	715, 512, 513, 0, 0, 514, 0, 515, 0, 0,
	517, 518, 519, 0, 0, 520, 521, 716, 0, 522,
	0, 717, 523, 524, 516, 525, 526, 527, 528, 529,
	530, 531, 532, 533, 0, 534, 535, 718, 536, 537,
	538, 719, 539, 540, 541, 720, 542, 721, 543, 544,
	0, 545, 546, 547, 0, 548, 549, 550, 551, 552,
	553, 554, 555, 722, 556, 557, 559, 558, 560, 0,
	561, 0, 562, 563, 564, 0, 0, 0, 0, 0,
	565, 566, 568, 0, 569, 570, 571, 572, 567, 573,
	574, 575, 576, 577, 0, 578, 579, 580, 0, 581,
	582, 583, 584, 585, 723, 586, 0, 587, 588, 595,
	596, 597, 589, 590, 591, 598, 599, 600, 601, 602,
	0, 604, 605, 603, 606, 607, 608, 0, 609, 610,
	592, 593, 611, 612, 0, 613, 614, 615, 616, 617,
	618, 619, 724, 0, 620, 0, 621, 622, 623, 624,
	625, 627, 594, 628, 633, 634, 725, 629, 630, 631,
	632, 726, 636, 637, 638, 0, 639, 640, 0, 635,
	626, 0, 641, 642, 643, 644, 645, 646, 0, 647,
	648, 0, 649, 727, 728, 729, 730, 0, 659, 0,
	650, 651, 652, 653, 731, 654, 732, 0, 655, 656,
	657, 658, 0, 660, 661, 0, 0, 662, 663, 665,
	667, 668, 664, 666, 669, 0, 670, 0, 0, 671,
	672, 673, 733, 734, 735, 0, 675, 674, 676, 677,
	678, 736, 679, 680, 290, 0, 0, 0, 681, 682,
	737, 683, 684, 685, 0, 0, 0, 0, 0, 0,
	0, 296, 297, 299, 298, 300, 301, 302, 303, 0,
	304, 305, 0, 0, 0, 0, 0, 686, 0, 0,
	0, 306, 0, 307, 308, 0, 309, 310, 311, 312,
	313, 314, 315, 687, 688, 0, 316, 689, 317, 690,
	0, 691, 318, 319, 320, 321, 322, 323, 0, 0,
	0, 324, 692, 693, 694, 0, 325, 326, 695, 0,
	0, 0, 327, 328, 329, 330, 331, 332, 333, 334,
	0, 0, 336, 337, 338, 335, 339, 0, 340, 0,
	341, 342, 343, 344, 345, 346, 0, 347, 348, 349,
	0, 350, 351, 352, 0, 0, 0, 0, 0, 0,
	0, 353, 354, 355, 356, 357, 0, 358, 360, 696,
	697, 0, 363, 359, 361, 0, 364, 362, 365, 0,
	366, 367, 368, 0, 0, 369, 370, 371, 0, 372,
	373, 374, 0, 375, 376, 377, 0, 378, 379, 698,
	380, 381, 382, 384, 386, 383, 385, 387, 388, 389,
	390, 699, 700, 391, 0, 293, 0, 0, 0, 0,
	0, 392, 393, 394, 701, 0, 0, 0, 395, 0,
	396, 397, 398, 0, 399, 400, 0, 0, 401, 402,
	403, 702, 703, 404, 405, 406, 407, 408, 409, 410,
	411, 412, 0, 413, 704, 0, 705, 414, 0, 415,
	416, 417, 418, 419, 420, 421, 2461, 707, 708, 510,
	0, 422, 423, 0, 424, 425, 426, 427, 428, 0,
	0, 0, 294, 429, 430, 431, 0, 0, 511, 432,
	709, 710, 0, 711, 0, 433, 434, 0, 712, 0,
	435, 436, 437, 0, 438, 0, 0, 0, 439, 440,
	441, 442, 443, 444, 0, 445, 447, 446, 0, 448,
	713, 0, 449, 450, 0, 0, 451, 452, 453, 454,
	455, 456, 459, 0, 0, 457, 458, 460, 461, 0,
	462, 463, 465, 468, 464, 466, 467, 469, 482, 483,
	470, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 485, 0, 484, 0, 486, 487, 488, 489,
	490, 497, 499, 500, 495, 496, 498, 501, 502, 504,
	492, 493, 494, 0, 503, 491, 0, 295, 0, 505,
	506, 507, 508, 0, 714, 509, 715, 512, 513, 0,
	0, 514, 0, 515, 0, 0, 517, 518, 519, 0,
	0, 520, 521, 716, 0, 522, 0, 717, 523, 524,
	516, 525, 526, 527, 528, 529, 530, 531, 532, 533,
	0, 534, 535, 718, 536, 537, 538, 719, 539, 540,
	541, 720, 542, 721, 543, 544, 0, 545, 546, 547,
	0, 548, 549, 550, 551, 552, 553, 554, 555, 722,
	556, 557, 559, 558, 560, 0, 561, 0, 562, 563,
	564, 0, 0, 0, 0, 0, 565, 566, 568, 0,
	569, 570, 571, 572, 567, 573, 574, 575, 576, 577,
	0, 578, 579, 580, 0, 581, 582, 583, 584, 585,
	723, 586, 0, 587, 588, 595, 596, 597, 589, 590,
	591, 598, 599, 600, 601, 602, 0, 604, 605, 603,
	606, 607, 608, 0, 609, 610, 592, 593, 611, 612,
	0, 613, 614, 615, 616, 617, 618, 619, 724, 0,
	620, 0, 621, 622, 623, 624, 625, 627, 594, 628,
	633, 634, 725, 629, 630, 631, 632, 726, 636, 637,
	638, 0, 639, 640, 0, 635, 626, 0, 641, 642,
	643, 644, 645, 646, 0, 647, 648, 0, 649, 727,
	728, 729, 730, 0, 659, 0, 650, 651, 652, 653,
	731, 654, 732, 0, 655, 656, 657, 658, 0, 660,
	661, 0, 0, 662, 663, 665, 667, 668, 664, 666,
	669, 0, 670, 0, 0, 671, 672, 673, 733, 734,
	735, 0, 675, 674, 676, 677, 678, 736, 679, 680,
	290, 0, 0, 0, 681, 682, 737, 683, 684, 685,
	0, 0, 0, 0, 0, 0, 0, 296, 297, 299,
	298, 300, 301, 302, 303, 0, 304, 305, 0, 0,
	0, 0, 0, 686, 0, 0, 0, 306, 0, 307,
	308, 0, 309, 310, 311, 312, 313, 314, 315, 687,
	688, 0, 316, 689, 317, 690, 0, 691, 318, 319,
	320, 321, 322, 323, 0, 0, 0, 324, 692, 693,
	694, 0, 325, 326, 695, 0, 0, 0, 327, 328,
	329, 330, 331, 332, 333, 334, 0, 0, 336, 337,
	338, 335, 339, 0, 340, 0, 341, 342, 343, 344,
	345, 346, 0, 347, 348, 349, 0, 350, 351, 352,
	0, 0, 0, 0, 0, 0, 0, 353, 354, 355,
	356, 357, 0, 358, 360, 696, 697, 0, 363, 359,
	361, 0, 364, 362, 365, 0, 366, 367, 368, 0,
	0, 369, 370, 371, 0, 372, 373, 374, 0, 375,
	376, 377, 0, 378, 379, 698, 380, 381, 382, 384,
	386, 383, 385, 387, 388, 389, 390, 699, 700, 391,
	0, 293, 0, 0, 0, 0, 0, 392, 393, 394,
	701, 0, 0, 0, 395, 0, 396, 397, 398, 0,
	399, 400, 0, 0, 401, 402, 403, 702, 703, 404,
	405, 406, 407, 408, 409, 410, 411, 412, 0, 413,
	704, 0, 705, 414, 0, 415, 416, 417, 418, 419,
	420, 421, 2219, 707, 708, 510, 0, 422, 423, 0,
	424, 425, 426, 427, 428, 0, 0, 0, 294, 429,
	430, 431, 0, 0, 511, 432, 709, 710, 0, 711,
	0, 433, 434, 0, 712, 0, 435, 436, 437, 0,
	438, 0, 0, 0, 439, 440, 441, 442, 443, 444,
	0, 445, 447, 446, 0, 448, 713, 0, 449, 450,
	0, 0, 451, 452, 453, 454, 455, 456, 459, 0,
	0, 457, 458, 460, 461, 0, 462, 463, 465, 468,
	464, 466, 467, 469, 482, 483, 470, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 485, 0,
	484, 0, 486, 487, 488, 489, 490, 497, 499, 500,
	495, 496, 498, 501, 502, 504, 492, 493, 494, 0,
	503, 491, 0, 295, 0, 505, 506, 507, 508, 0,
	714, 509, 715, 512, 513, 0, 0, 514, 0, 515,
	0, 0, 517, 518, 519, 0, 0, 520, 521, 716,
	0, 522, 0, 717, 523, 524, 516, 525, 526, 527,
	528, 529, 530, 531, 532, 533, 0, 534, 535, 718,
	536, 537, 538, 719, 539, 540, 541, 720, 542, 721,
	543, 544, 0, 545, 546, 547, 0, 548, 549, 550,
	551, 552, 553, 554, 555, 722, 556, 557, 559, 558,
	560, 0, 561, 0, 562, 563, 564, 0, 0, 0,
	0, 0, 565, 566, 568, 0, 569, 570, 571, 572,
	567, 573, 574, 575, 576, 577, 0, 578, 579, 580,
	0, 581, 582, 583, 584, 585, 723, 586, 0, 587,
	588, 595, 596, 597, 589, 590, 591, 598, 599, 600,
	601, 602, 0, 604, 605, 603, 606, 607, 608, 0,
	609, 610, 592, 593, 611, 612, 0, 613, 614, 615,
	616, 617, 618, 619, 724, 0, 620, 0, 621, 622,
	623, 624, 625, 627, 594, 628, 633, 634, 725, 629,
	630, 631, 632, 726, 636, 637, 638, 0, 639, 640,
	0, 635, 626, 0, 641, 642, 643, 644, 645, 646,
	0, 647, 648, 0, 649, 727, 728, 729, 730, 0,
	659, 0, 650, 651, 652, 653, 731, 654, 732, 0,
	655, 656, 657, 658, 0, 660, 661, 0, 0, 662,
	663, 665, 667, 668, 664, 666, 669, 0, 670, 0,
	0, 671, 672, 673, 733, 734, 735, 0, 675, 674,
	676, 677, 678, 736, 679, 680, 290, 0, 0, 0,
	681, 682, 737, 683, 684, 685, 0, 0, 0, 0,
	0, 0, 0, 296, 297, 299, 298, 300, 301, 302,
	303, 0, 304, 305, 0, 0, 0, 0, 0, 686,
	0, 0, 0, 306, 0, 307, 308, 0, 309, 310,
	311, 312, 313, 314, 315, 687, 688, 0, 316, 689,
	317, 690, 0, 691, 318, 319, 320, 321, 322, 323,
	0, 0, 0, 324, 692, 693, 694, 0, 325, 326,
	695, 0, 0, 0, 327, 328, 329, 330, 331, 332,
	333, 334, 0, 0, 336, 337, 338, 335, 339, 0,
	340, 0, 341, 342, 343, 344, 345, 346, 0, 347,
	348, 349, 0, 350, 351, 352, 0, 0, 0, 0,
	0, 0, 0, 353, 354, 355, 356, 357, 0, 358,
	360, 696, 697, 0, 363, 359, 361, 0, 364, 362,
	365, 0, 366, 367, 368, 0, 0, 369, 370, 371,
	0, 372, 373, 374, 0, 375, 376, 377, 0, 378,
	379, 698, 380, 381, 382, 384, 386, 383, 385, 387,
	388, 389, 390, 699, 700, 391, 0, 293, 0, 0,
	0, 0, 0, 392, 393, 394, 701, 0, 0, 0,
	395, 0, 396, 397, 398, 0, 399, 400, 0, 0,
	401, 402, 403, 702, 703, 404, 405, 406, 407, 408,
	409, 410, 411, 412, 0, 413, 704, 0, 705, 414,
	0, 415, 416, 417, 418, 419, 420, 421, 2213, 707,
	708, 510, 0, 422, 423, 0, 424, 425, 426, 427,
	428, 0, 0, 0, 294, 429, 430, 431, 0, 0,
	511, 432, 709, 710, 0, 711, 0, 433, 434, 0,
	712, 0, 435, 436, 437, 0, 438, 0, 0, 0,
	439, 440, 441, 442, 443, 444, 0, 445, 447, 446,
	0, 448, 713, 0, 449, 450, 0, 0, 451, 452,
	453, 454, 455, 456, 459, 0, 0, 457, 458, 460,
	461, 0, 462, 463, 465, 468, 464, 466, 467, 469,
	482, 483, 470, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 485, 0, 484, 0, 486, 487,
	488, 489, 490, 497, 499, 500, 495, 496, 498, 501,
	502, 504, 492, 493, 494, 0, 503, 491, 0, 295,
	0, 505, 506, 507, 508, 0, 714, 509, 715, 512,
	513, 0, 0, 514, 0, 515, 0, 0, 517, 518,
	519, 0, 0, 520, 521, 716, 0, 522, 0, 717,
	523, 524, 516, 525, 526, 527, 528, 529, 530, 531,
	532, 533, 0, 534, 535, 718, 536, 537, 538, 719,
	539, 540, 541, 720, 542, 721, 543, 544, 0, 545,
	546, 547, 0, 548, 549, 550, 551, 552, 553, 554,
	555, 722, 556, 557, 559, 558, 560, 0, 561, 0,
	562, 563, 564, 0, 0, 0, 0, 0, 565, 566,
	568, 0, 569, 570, 571, 572, 567, 573, 574, 575,
	576, 577, 0, 578, 579, 580, 0, 581, 582, 583,
	584, 585, 723, 586, 0, 587, 588, 595, 596, 597,
	589, 590, 591, 598, 599, 600, 601, 602, 0, 604,
	605, 603, 606, 607, 608, 0, 609, 610, 592, 593,
	611, 612, 0, 613, 614, 615, 616, 617, 618, 619,
	724, 0, 620, 0, 621, 622, 623, 624, 625, 627,
	594, 628, 633, 634, 725, 629, 630, 631, 632, 726,
	636, 637, 638, 0, 639, 640, 0, 635, 626, 0,
	641, 642, 643, 644, 645, 646, 0, 647, 648, 0,
	649, 727, 728, 729, 730, 0, 659, 0, 650, 651,
	652, 653, 731, 654, 732, 0, 655, 656, 657, 658,
	0, 660, 661, 0, 0, 662, 663, 665, 667, 668,
	664, 666, 669, 0, 670, 0, 0, 671, 672, 673,
	733, 734, 735, 0, 675, 674, 676, 677, 678, 736,
	679, 680, 976, 0, 290, 0, 681, 682, 737, 683,
	684, 685, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 296, 297, 299, 298, 300, 301, 302, 303, 0,
	304, 305, 0, 0, 0, 0, 0, 686, 0, 0,
	0, 306, 0, 307, 308, 0, 309, 310, 311, 312,
	313, 314, 315, 687, 688, 0, 316, 689, 317, 690,
	0, 691, 318, 319, 320, 321, 322, 323, 0, 0,
	0, 324, 692, 693, 694, 0, 325, 326, 695, 0,
	0, 0, 327, 328, 329, 330, 331, 332, 333, 334,
	0, 0, 336, 337, 338, 335, 339, 0, 340, 0,
	341, 342, 343, 344, 345, 346, 0, 347, 348, 349,
	0, 350, 351, 352, 0, 0, 0, 0, 0, 0,
	0, 353, 354, 355, 356, 357, 0, 358, 360, 696,
	697, 0, 363, 359, 361, 0, 364, 362, 365, 0,
	366, 367, 368, 0, 0, 369, 370, 371, 0, 372,
	373, 374, 0, 375, 376, 377, 0, 378, 379, 698,
	380, 381, 382, 384, 386, 383, 385, 387, 388, 389,
	390, 699, 700, 391, 0, 0, 0, 0, 0, 0,
	0, 392, 393, 394, 701, 0, 0, 0, 395, 0,
	396, 397, 398, 0, 399, 400, 0, 0, 401, 402,
	403, 702, 703, 404, 405, 406, 407, 408, 409, 410,
	411, 412, 0, 413, 704, 0, 705, 414, 0, 415,
	416, 417, 418, 419, 420, 421, 706, 707, 708, 510,
	0, 422, 423, 0, 424, 425, 426, 427, 428, 0,
	0, 0, 0, 429, 430, 431, 0, 0, 511, 432,
	709, 710, 0, 711, 975, 433, 434, 0, 712, 0,
	435, 436, 437, 0, 438, 0, 0, 0, 439, 440,
	441, 442, 443, 444, 0, 445, 447, 446, 0, 448,
	713, 0, 449, 450, 0, 0, 451, 452, 453, 454,
	455, 456, 459, 0, 0, 457, 458, 460, 461, 0,
	462, 463, 465, 468, 464, 466, 467, 469, 482, 483,
	470, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 485, 0, 484, 0, 486, 487, 488, 489,
	490, 497, 499, 500, 495, 496, 498, 501, 502, 504,
	492, 493, 494, 0, 503, 491, 0, 0, 0, 505,
	506, 507, 508, 0, 714, 509, 715, 512, 513, 0,
	0, 514, 0, 515, 0, 0, 517, 518, 519, 0,
	0, 520, 521, 716, 0, 522, 0, 717, 523, 524,
	516, 525, 526, 527, 528, 529, 530, 531, 532, 533,
	0, 534, 535, 718, 536, 537, 538, 719, 539, 540,
	541, 720, 542, 721, 543, 544, 0, 545, 546, 547,
	0, 548, 549, 550, 551, 552, 553, 554, 555, 722,
	556, 557, 559, 558, 560, 0, 561, 0, 562, 563,
	564, 0, 0, 0, 0, 0, 565, 566, 568, 0,
	569, 570, 571, 572, 567, 573, 574, 575, 576, 577,
	0, 578, 579, 580, 0, 581, 582, 583, 584, 585,
	723, 586, 0, 587, 588, 595, 596, 597, 589, 590,
	591, 598, 599, 600, 601, 602, 0, 604, 605, 603,
	606, 607, 608, 0, 609, 610, 592, 593, 611, 612,
	0, 613, 614, 615, 616, 617, 618, 619, 724, 0,
	620, 0, 621, 622, 623, 624, 625, 627, 594, 628,
	633, 634, 725, 629, 630, 631, 632, 726, 636, 637,
	638, 0, 639, 640, 0, 635, 626, 974, 641, 642,
	643, 644, 645, 646, 0, 647, 648, 0, 649, 727,
	728, 729, 730, 0, 659, 0, 650, 651, 652, 653,
	731, 654, 732, 0, 655, 656, 657, 658, 0, 660,
	661, 0, 0, 662, 663, 665, 667, 668, 664, 666,
	669, 0, 670, 0, 0, 671, 672, 673, 733, 734,
	735, 0, 675, 674, 676, 677, 678, 736, 679, 680,
	859, 0, 290, 0, 681, 682, 737, 683, 684, 685,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 296,
	848, 299, 298, 300, 301, 302, 303, 0, 304, 305,
	0, 0, 0, 0, 0, 686, 0, 0, 0, 306,
	0, 307, 308, 0, 309, 310, 311, 312, 857, 314,
	315, 687, 688, 0, 316, 689, 317, 690, 0, 691,
	318, 319, 320, 321, 322, 323, 0, 0, 0, 324,
	692, 693, 694, 0, 325, 326, 695, 0, 0, 0,
	327, 328, 329, 330, 331, 332, 333, 334, 0, 0,
	336, 337, 338, 335, 339, 0, 340, 0, 341, 342,
	343, 344, 345, 346, 0, 347, 348, 349, 0, 350,
	351, 352, 0, 0, 0, 0, 0, 0, 0, 353,
	354, 355, 356, 357, 0, 358, 360, 696, 697, 0,
	363, 359, 361, 0, 364, 362, 365, 0, 366, 367,
	368, 0, 0, 369, 370, 371, 0, 372, 373, 374,
	0, 375, 376, 377, 0, 378, 379, 698, 380, 381,
	382, 384, 386, 383, 385, 387, 388, 389, 390, 699,
	700, 391, 0, 0, 0, 0, 0, 0, 0, 392,
	393, 850, 701, 0, 0, 0, 395, 0, 396, 397,
	398, 0, 856, 400, 852, 0, 401, 402, 403, 702,
	703, 404, 405, 406, 407, 408, 409, 410, 411, 412,
	0, 413, 704, 0, 705, 414, 0, 415, 416, 417,
	418, 419, 420, 421, 706, 707, 708, 510, 0, 422,
	423, 853, 424, 425, 426, 427, 428, 0, 0, 0,
	0, 429, 430, 431, 0, 0, 511, 432, 709, 710,
	0, 711, 0, 433, 434, 0, 712, 0, 435, 436,
	437, 0, 438, 0, 0, 0, 439, 440, 441, 442,
	443, 851, 0, 445, 447, 446, 0, 448, 713, 0,
	449, 450, 0, 0, 451, 452, 453, 454, 455, 456,
	459, 0, 0, 457, 458, 460, 461, 0, 462, 463,
	465, 468, 464, 466, 467, 469, 482, 483, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	485, 0, 484, 0, 486, 487, 488, 854, 490, 497,
	499, 500, 495, 496, 498, 501, 502, 504, 492, 493,
	494, 0, 503, 491, 0, 0, 0, 505, 506, 507,
	508, 0, 714, 509, 715, 512, 513, 0, 0, 514,
	0, 515, 0, 0, 517, 518, 519, 0, 0, 520,
	521, 716, 0, 522, 0, 717, 523, 524, 516, 525,
	526, 527, 528, 529, 530, 531, 532, 533, 0, 534,
	535, 718, 536, 537, 538, 719, 539, 540, 541, 720,
	542, 721, 543, 544, 0, 855, 546, 547, 0, 548,
	549, 550, 551, 552, 553, 554, 555, 722, 556, 557,
	559, 558, 560, 0, 561, 0, 562, 563, 564, 0,
	0, 0, 0, 0, 565, 849, 568, 0, 569, 570,
	571, 572, 567, 573, 574, 575, 576, 577, 0, 578,
	579, 580, 0, 581, 582, 583, 584, 585, 723, 586,
	0, 587, 588, 595, 596, 597, 589, 590, 591, 598,
	599, 600, 601, 602, 0, 604, 605, 603, 606, 607,
	608, 0, 609, 610, 592, 593, 611, 612, 0, 613,
	614, 615, 616, 617, 618, 619, 724, 0, 620, 0,
	621, 622, 623, 624, 625, 627, 594, 628, 633, 634,
	725, 629, 630, 631, 632, 726, 636, 637, 638, 0,
	639, 640, 0, 635, 626, 0, 641, 642, 643, 644,
	645, 646, 0, 647, 648, 0, 649, 727, 728, 729,
	730, 0, 659, 0, 650, 651, 652, 653, 731, 654,
	732, 0, 655, 656, 657, 658, 0, 660, 661, 0,
	0, 662, 663, 665, 667, 668, 664, 666, 669, 0,
	670, 0, 0, 671, 672, 673, 733, 734, 735, 0,
	675, 674, 676, 677, 678, 736, 679, 680, 842, 0,
	290, 0, 681, 682, 737, 683, 684, 685, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 296, 848, 299,
	298, 300, 301, 302, 303, 0, 304, 305, 0, 0,
	0, 0, 0, 686, 0, 0, 0, 306, 0, 307,
	308, 0, 309, 310, 311, 312, 857, 314, 315, 687,
	688, 0, 316, 689, 317, 690, 0, 691, 318, 319,
	320, 321, 322, 323, 0, 0, 0, 324, 692, 693,
	694, 0, 325, 326, 695, 0, 0, 0, 327, 328,
	329, 330, 331, 332, 333, 334, 0, 0, 336, 337,
	338, 335, 339, 0, 340, 0, 341, 342, 343, 344,
	345, 346, 0, 347, 348, 349, 0, 350, 351, 352,
	0, 0, 0, 0, 0, 0, 0, 353, 354, 355,
	356, 357, 0, 358, 360, 696, 697, 0, 363, 359,
	361, 0, 364, 362, 365, 0, 366, 367, 368, 0,
	0, 369, 370, 371, 0, 372, 373, 374, 0, 375,
	376, 377, 0, 378, 379, 698, 380, 381, 382, 384,
	386, 383, 385, 387, 388, 389, 390, 699, 700, 391,
	0, 0, 0, 0, 0, 0, 0, 392, 393, 850,
	701, 0, 0, 0, 395, 0, 396, 397, 398, 0,
	856, 400, 852, 0, 401, 402, 403, 702, 703, 404,
	405, 406, 407, 408, 409, 410, 411, 412, 0, 413,
	704, 0, 705, 414, 0, 415, 416, 417, 418, 419,
	420, 421, 706, 707, 708, 510, 0, 422, 423, 853,
	424, 425, 426, 427, 428, 0, 0, 0, 0, 429,
	430, 431, 0, 0, 511, 432, 709, 710, 0, 711,
	0, 433, 434, 0, 712, 0, 435, 436, 437, 0,
	438, 0, 0, 0, 439, 440, 441, 442, 443, 851,
	0, 445, 447, 446, 0, 448, 713, 0, 449, 450,
	0, 0, 451, 452, 453, 454, 455, 456, 459, 0,
	0, 457, 458, 460, 461, 0, 462, 463, 465, 468,
	464, 466, 467, 469, 482, 483, 470, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 485, 0,
	484, 0, 486, 487, 488, 854, 490, 497, 499, 500,
	495, 496, 498, 501, 502, 504, 492, 493, 494, 0,
	503, 491, 0, 0, 0, 505, 506, 507, 508, 0,
	714, 509, 715, 512, 513, 0, 0, 514, 0, 515,
	0, 0, 517, 518, 519, 0, 0, 520, 521, 716,
	0, 522, 0, 717, 523, 524, 516, 525, 526, 527,
	528, 529, 530, 531, 532, 533, 0, 534, 535, 718,
	536, 537, 538, 719, 539, 540, 541, 720, 542, 721,
	543, 544, 0, 855, 546, 547, 0, 548, 549, 550,
	551, 552, 553, 554, 555, 722, 556, 557, 559, 558,
	560, 0, 561, 0, 562, 563, 564, 0, 0, 0,
	0, 0, 565, 849, 568, 0, 569, 570, 571, 572,
	567, 573, 574, 575, 576, 577, 0, 578, 579, 580,
	0, 581, 582, 583, 584, 585, 723, 586, 0, 587,
	588, 595, 596, 597, 589, 590, 591, 598, 599, 600,
	601, 602, 0, 604, 605, 603, 606, 607, 608, 0,
	609, 610, 592, 593, 611, 612, 0, 613, 614, 615,
	616, 617, 618, 619, 724, 0, 620, 0, 621, 622,
	623, 624, 625, 627, 594, 628, 633, 634, 725, 629,
	630, 631, 632, 726, 636, 637, 638, 0, 639, 640,
	0, 635, 626, 0, 641, 642, 643, 644, 645, 646,
	0, 647, 648, 0, 649, 727, 728, 729, 730, 0,
	659, 0, 650, 651, 652, 653, 731, 654, 732, 0,
	655, 656, 657, 658, 0, 660, 661, 0, 0, 662,
	663, 665, 667, 668, 664, 666, 669, 0, 670, 0,
	0, 671, 672, 673, 733, 734, 735, 0, 675, 674,
	676, 677, 678, 736, 679, 680, 290, 0, 0, 0,
	681, 682, 737, 683, 684, 685, 0, 0, 0, 0,
	0, 0, 0, 296, 297, 299, 298, 300, 301, 302,
	303, 0, 304, 305, 0, 0, 0, 0, 0, 686,
	0, 0, 0, 306, 0, 307, 308, 0, 309, 310,
	311, 312, 313, 314, 315, 687, 688, 0, 316, 689,
	317, 690, 0, 691, 318, 319, 320, 321, 322, 323,
	0, 0, 0, 324, 692, 693, 694, 0, 325, 326,
	695, 0, 0, 0, 327, 328, 329, 330, 331, 332,
	333, 334, 0, 0, 336, 337, 338, 335, 339, 0,
	340, 0, 341, 342, 343, 344, 345, 346, 0, 347,
	348, 349, 0, 350, 351, 352, 0, 0, 0, 0,
	0, 0, 0, 353, 354, 355, 356, 357, 0, 358,
	360, 696, 697, 0, 363, 359, 361, 0, 364, 362,
	365, 0, 366, 367, 368, 0, 0, 369, 370, 371,
	0, 372, 373, 374, 0, 375, 376, 377, 0, 378,
	379, 698, 380, 381, 382, 384, 386, 383, 385, 387,
	388, 389, 390, 699, 700, 391, 0, 3833, 0, 0,
	0, 0, 0, 392, 393, 394, 701, 0, 0, 0,
	395, 0, 396, 397, 398, 0, 399, 400, 0, 0,
	401, 402, 403, 702, 703, 404, 405, 406, 407, 408,
	409, 410, 411, 412, 0, 413, 704, 0, 705, 414,
	0, 415, 416, 417, 418, 419, 420, 421, 706, 707,
	708, 510, 0, 422, 423, 0, 424, 425, 426, 427,
	428, 0, 0, 0, 0, 429, 430, 431, 0, 0,
	511, 432, 709, 710, 0, 711, 0, 433, 434, 0,
	712, 0, 435, 436, 437, 0, 438, 0, 0, 0,
	439, 440, 441, 442, 443, 444, 0, 445, 447, 446,
	0, 448, 713, 0, 449, 450, 0, 0, 451, 452,
	453, 454, 455, 456, 459, 0, 0, 457, 458, 460,
	461, 0, 462, 463, 465, 468, 464, 466, 467, 469,
	482, 483, 470, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 485, 0, 484, 0, 486, 487,
	488, 489, 490, 497, 499, 500, 495, 496, 498, 501,
	502, 504, 492, 493, 494, 0, 503, 491, 0, 0,
	0, 505, 506, 507, 508, 0, 714, 509, 715, 512,
	513, 0, 0, 514, 0, 515, 0, 0, 517, 518,
	519, 0, 0, 520, 521, 716, 0, 522, 0, 717,
	523, 524, 516, 525, 526, 527, 528, 529, 530, 531,
	532, 533, 0, 534, 535, 718, 536, 537, 538, 719,
	539, 540, 541, 720, 542, 721, 543, 544, 4580, 545,
	546, 547, 0, 548, 549, 550, 551, 552, 553, 554,
	555, 722, 556, 557, 559, 558, 560, 0, 561, 0,
	562, 563, 564, 0, 0, 0, 0, 0, 565, 566,
	568, 0, 569, 570, 571, 572, 567, 573, 574, 575,
	576, 577, 0, 578, 579, 580, 0, 581, 582, 583,
	584, 585, 723, 586, 0, 587, 588, 595, 596, 597,
	589, 590, 591, 598, 599, 600, 601, 602, 0, 604,
	605, 603, 606, 607, 608, 0, 609, 610, 592, 593,
	611, 612, 0, 613, 614, 615, 616, 617, 618, 619,
	724, 0, 620, 0, 621, 622, 623, 624, 625, 627,
	594, 628, 633, 634, 725, 629, 630, 631, 632, 726,
	636, 637, 638, 0, 639, 640, 0, 635, 626, 0,
	641, 642, 643, 644, 645, 646, 0, 647, 648, 0,
	649, 727, 728, 729, 730, 0, 659, 0, 650, 651,
	652, 653, 731, 654, 732, 0, 655, 656, 657, 658,
	0, 660, 661, 0, 0, 662, 663, 665, 667, 668,
	664, 666, 669, 0, 670, 0, 0, 671, 672, 673,
	733, 734, 735, 0, 675, 674, 676, 677, 678, 736,
	679, 680, 1444, 0, 290, 0, 681, 682, 737, 683,
	684, 685, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 296, 297, 299, 298, 300, 301, 302, 303, 0,
	304, 305, 0, 0, 0, 0, 0, 686, 0, 0,
	0, 306, 0, 307, 308, 1447, 309, 310, 311, 312,
	313, 314, 315, 687, 688, 0, 316, 689, 317, 690,
	0, 691, 318, 319, 320, 321, 322, 323, 0, 0,
	0, 324, 692, 693, 1445, 0, 325, 326, 695, 0,
	0, 0, 327, 328, 329, 330, 331, 332, 333, 334,
	0, 0, 336, 337, 338, 335, 339, 0, 340, 0,
	341, 342, 343, 344, 345, 346, 0, 347, 348, 349,
	0, 350, 351, 352, 0, 0, 0, 0, 0, 0,
	0, 353, 354, 355, 356, 357, 0, 358, 360, 696,
	697, 0, 363, 359, 361, 0, 364, 362, 365, 0,
	366, 367, 368, 0, 0, 369, 370, 371, 0, 372,
	373, 374, 0, 375, 376, 377, 0, 378, 379, 698,
	380, 381, 382, 384, 386, 383, 385, 387, 388, 389,
	390, 699, 700, 391, 0, 0, 0, 0, 0, 0,
	0, 392, 393, 394, 701, 0, 0, 0, 395, 0,
	396, 397, 398, 0, 399, 400, 0, 0, 401, 402,
	403, 702, 703, 404, 405, 406, 407, 408, 409, 410,
	411, 412, 0, 413, 704, 0, 705, 414, 0, 415,
	416, 417, 418, 419, 420, 421, 706, 707, 708, 510,
	0, 422, 423, 0, 424, 425, 426, 427, 428, 0,
	0, 0, 0, 429, 430, 431, 0, 0, 511, 432,
	709, 710, 0, 711, 0, 433, 434, 0, 712, 0,
	435, 436, 437, 0, 438, 0, 0, 0, 439, 440,
	441, 442, 443, 444, 0, 445, 447, 446, 0, 448,
	713, 0, 449, 450, 0, 0, 451, 452, 453, 454,
	455, 456, 459, 0, 0, 457, 458, 460, 461, 0,
	462, 463, 465, 468, 464, 466, 467, 469, 482, 483,
	470, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 485, 0, 830, 0, 486, 487, 488, 489,
	490, 497, 499, 500, 495, 496, 498, 501, 502, 504,
	492, 493, 494, 0, 503, 491, 0, 0, 0, 505,
	506, 507, 508, 0, 714, 509, 715, 512, 513, 0,
	0, 514, 0, 515, 0, 0, 517, 518, 519, 0,
	0, 520, 521, 716, 0, 522, 0, 717, 523, 524,
	516, 525, 526, 527, 528, 529, 530, 531, 532, 533,
	0, 534, 535, 718, 536, 537, 538, 719, 539, 540,
	541, 720, 542, 721, 543, 544, 0, 545, 546, 547,
	0, 548, 549, 550, 551, 552, 553, 554, 555, 722,
	556, 557, 559, 558, 560, 0, 561, 0, 562, 563,
	564, 0, 0, 0, 0, 0, 565, 566, 568, 0,
	569, 570, 571, 572, 567, 573, 574, 575, 576, 577,
	0, 578, 579, 580, 0, 829, 582, 583, 584, 585,
	723, 586, 0, 587, 588, 595, 596, 597, 589, 590,
	591, 828, 599, 600, 601, 602, 0, 604, 605, 603,
	606, 1448, 608, 0, 609, 610, 592, 593, 611, 612,
	0, 613, 614, 615, 616, 617, 618, 619, 724, 0,
	620, 0, 621, 622, 623, 624, 625, 627, 594, 628,
	633, 634, 725, 629, 630, 631, 632, 726, 636, 637,
	638, 0, 639, 640, 0, 635, 626, 0, 641, 642,
	643, 644, 645, 646, 0, 647, 648, 0, 649, 826,
	728, 729, 730, 0, 659, 0, 650, 651, 652, 653,
	731, 654, 732, 0, 655, 656, 657, 658, 0, 660,
	661, 0, 0, 662, 663, 665, 667, 668, 664, 666,
	669, 0, 670, 0, 0, 671, 672, 673, 733, 734,
	735, 0, 675, 674, 676, 677, 678, 736, 679, 680,
	1444, 0, 290, 0, 681, 682, 737, 683, 684, 685,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 296,
	297, 299, 298, 300, 301, 302, 303, 0, 304, 305,
	0, 0, 0, 0, 0, 686, 0, 0, 0, 306,
	0, 307, 308, 1447, 309, 310, 311, 312, 313, 314,
	315, 687, 688, 0, 316, 689, 317, 690, 0, 691,
	318, 319, 320, 321, 322, 323, 0, 0, 0, 324,
	692, 693, 1445, 0, 325, 326, 695, 0, 0, 0,
	327, 328, 329, 330, 331, 332, 333, 334, 0, 0,
	336, 337, 338, 335, 339, 0, 340, 0, 341, 342,
	343, 344, 345, 346, 0, 347, 348, 349, 0, 350,
	351, 352, 0, 0, 0, 0, 0, 0, 0, 353,
	354, 355, 356, 357, 0, 358, 360, 696, 697, 0,
	363, 359, 361, 0, 364, 362, 365, 0, 366, 367,
	368, 0, 0, 369, 370, 371, 0, 372, 373, 374,
	0, 375, 376, 377, 0, 378, 379, 698, 380, 381,
	382, 384, 386, 383, 385, 387, 388, 389, 390, 699,
	700, 391, 0, 0, 0, 0, 0, 0, 0, 392,
	393, 394, 701, 0, 0, 0, 395, 0, 396, 397,
	398, 0, 399, 400, 0, 0, 401, 402, 403, 702,
	703, 404, 405, 406, 407, 408, 409, 410, 411, 412,
	0, 413, 704, 0, 705, 414, 0, 415, 416, 417,
	418, 419, 420, 421, 706, 707, 708, 510, 0, 422,
	423, 0, 424, 425, 426, 427, 428, 0, 0, 0,
	0, 429, 430, 431, 0, 0, 511, 432, 709, 710,
	0, 711, 0, 433, 434, 0, 712, 0, 435, 436,
	437, 0, 438, 0, 0, 0, 439, 440, 441, 442,
	443, 444, 0, 445, 447, 446, 0, 448, 713, 0,
	449, 450, 0, 0, 451, 452, 453, 454, 455, 456,
	459, 0, 0, 457, 458, 460, 461, 0, 462, 463,
	465, 468, 464, 466, 467, 469, 482, 483, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	485, 0, 830, 0, 486, 487, 488, 489, 490, 497,
	499, 500, 495, 496, 498, 501, 502, 504, 492, 493,
	494, 0, 503, 491, 0, 0, 0, 505, 506, 507,
	508, 0, 714, 509, 715, 512, 513, 0, 0, 514,
	0, 515, 0, 0, 517, 518, 519, 0, 0, 520,
	521, 716, 0, 522, 0, 717, 523, 524, 516, 525,
	526, 527, 528, 529, 530, 531, 532, 533, 0, 534,
	535, 718, 536, 537, 538, 719, 539, 540, 541, 720,
	542, 721, 543, 544, 0, 545, 546, 547, 0, 548,
	549, 550, 551, 552, 553, 554, 555, 722, 556, 557,
	559, 558, 560, 0, 561, 0, 562, 563, 564, 0,
	0, 0, 0, 0, 565, 566, 568, 0, 569, 570,
	571, 572, 567, 573, 574, 575, 576, 577, 0, 578,
	579, 580, 0, 829, 582, 583, 584, 585, 723, 586,
	0, 587, 588, 595, 596, 597, 589, 590, 591, 828,
	599, 600, 601, 602, 0, 604, 605, 603, 606, 1448,
	608, 0, 609, 610, 592, 593, 611, 612, 0, 613,
	614, 615, 616, 617, 618, 619, 724, 0, 620, 0,
	621, 622, 623, 624, 625, 627, 594, 628, 633, 634,
	725, 629, 630, 631, 632, 726, 636, 637, 638, 0,
	639, 640, 0, 635, 626, 0, 641, 642, 643, 644,
	645, 646, 0, 647, 648, 0, 649, 826, 728, 729,
	730, 0, 659, 0, 650, 1446, 652, 653, 731, 654,
	732, 0, 655, 656, 657, 658, 0, 660, 661, 0,
	0, 662, 663, 665, 667, 668, 664, 666, 669, 0,
	670, 0, 0, 671, 672, 673, 733, 734, 735, 0,
	675, 674, 676, 677, 678, 736, 679, 680, 837, 0,
	290, 0, 681, 682, 737, 683, 684, 685, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 296, 297, 299,
	298, 300, 301, 302, 303, 835, 304, 305, 0, 0,
	0, 0, 0, 686, 0, 0, 0, 306, 0, 307,
	308, 0, 309, 310, 311, 312, 313, 314, 315, 687,
	688, 0, 316, 689, 317, 690, 0, 691, 318, 319,
	320, 321, 322, 323, 0, 0, 0, 324, 692, 693,
	694, 0, 325, 326, 695, 0, 0, 0, 327, 328,
	329, 330, 331, 332, 333, 334, 0, 0, 336, 337,
	338, 335, 339, 0, 340, 0, 341, 342, 343, 344,
	345, 346, 0, 347, 348, 349, 0, 350, 351, 352,
	0, 0, 0, 0, 0, 0, 0, 353, 354, 355,
	356, 357, 0, 358, 360, 696, 697, 0, 363, 359,
	361, 0, 364, 362, 365, 0, 366, 367, 368, 0,
	0, 369, 370, 371, 0, 372, 373, 374, 0, 375,
	376, 377, 0, 378, 379, 698, 380, 381, 382, 384,
	386, 383, 385, 387, 388, 389, 390, 699, 700, 391,
	0, 0, 0, 0, 0, 0, 0, 392, 393, 394,
	701, 0, 0, 0, 395, 0, 396, 397, 398, 0,
	399, 400, 0, 0, 401, 402, 403, 702, 703, 404,
	405, 406, 407, 408, 409, 410, 411, 412, 0, 413,
	704, 0, 705, 414, 0, 415, 416, 417, 418, 419,
	420, 421, 706, 707, 708, 510, 0, 422, 423, 0,
	424, 425, 426, 427, 428, 0, 0, 0, 0, 429,
	430, 431, 0, 0, 511, 432, 709, 710, 0, 711,
	0, 433, 434, 0, 712, 0, 435, 436, 437, 0,
	438, 0, 0, 0, 439, 440, 441, 442, 443, 444,
	0, 445, 447, 446, 0, 448, 713, 0, 449, 450,
	0, 0, 451, 452, 453, 454, 455, 456, 459, 0,
	0, 457, 458, 460, 461, 0, 462, 463, 465, 468,
	464, 466, 467, 469, 482, 483, 470, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 485, 0,
	484, 0, 486, 487, 488, 489, 490, 497, 499, 500,
	495, 496, 498, 501, 502, 504, 492, 493, 494, 0,
	503, 491, 0, 0, 0, 505, 506, 507, 508, 0,
	714, 509, 715, 512, 513, 0, 0, 514, 0, 515,
	0, 0, 517, 518, 519, 0, 0, 520, 521, 716,
	0, 522, 0, 717, 523, 524, 516, 525, 526, 527,
	528, 529, 530, 531, 532, 533, 0, 534, 535, 718,
	536, 537, 538, 719, 539, 540, 541, 720, 542, 721,
	543, 544, 0, 545, 546, 547, 0, 548, 549, 550,
	551, 552, 553, 554, 555, 722, 556, 557, 559, 558,
	560, 0, 561, 0, 562, 563, 564, 0, 0, 0,
	0, 0, 565, 566, 568, 0, 569, 570, 571, 572,
	567, 573, 574, 575, 576, 577, 0, 578, 579, 580,
	0, 581, 582, 583, 584, 585, 723, 586, 0, 587,
	588, 595, 596, 597, 589, 590, 591, 598, 599, 600,
	601, 602, 0, 604, 605, 603, 606, 607, 608, 0,
	609, 610, 592, 593, 611, 612, 0, 613, 614, 615,
	616, 617, 618, 619, 724, 0, 620, 0, 621, 622,
	623, 624, 625, 627, 594, 628, 633, 634, 725, 629,
	630, 631, 632, 726, 636, 637, 638, 0, 639, 640,
	0, 635, 626, 0, 641, 642, 643, 644, 645, 646,
	0, 647, 648, 0, 649, 727, 728, 729, 730, 0,
	659, 0, 650, 651, 652, 653, 731, 654, 732, 0,
	655, 656, 657, 658, 0, 660, 661, 0, 0, 662,
	663, 665, 667, 668, 664, 666, 669, 0, 670, 0,
	0, 671, 672, 673, 733, 734, 735, 0, 675, 674,
	676, 677, 678, 736, 679, 680, 748, 0, 290, 0,
	681, 682, 737, 683, 684, 685, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 296, 297, 299, 298, 300,
	301, 302, 303, 747, 304, 305, 0, 0, 0, 0,
	0, 686, 0, 0, 0, 306, 0, 307, 308, 0,
	309, 310, 311, 312, 313, 314, 315, 687, 688, 0,
	316, 689, 317, 690, 0, 691, 318, 319, 320, 321,
	322, 323, 0, 0, 0, 324, 692, 693, 694, 0,
	325, 326, 695, 0, 0, 0, 327, 328, 329, 330,
	331, 332, 333, 334, 0, 0, 336, 337, 338, 335,
	339, 0, 340, 0, 341, 342, 343, 344, 345, 346,
	0, 347, 348, 349, 0, 350, 351, 352, 0, 0,
	0, 0, 0, 0, 0, 353, 354, 355, 356, 357,
	0, 358, 360, 696, 697, 0, 363, 359, 361, 0,
	364, 362, 365, 0, 366, 367, 368, 0, 0, 369,
	370, 371, 0, 372, 373, 374, 0, 375, 376, 377,
	0, 378, 379, 698, 380, 381, 382, 384, 386, 383,
	385, 387, 388, 389, 390, 699, 700, 391, 0, 0,
	0, 0, 0, 0, 0, 392, 393, 394, 701, 0,
	0, 0, 395, 0, 396, 397, 398, 0, 399, 400,
	0, 0, 401, 402, 403, 702, 703, 404, 405, 406,
	407, 408, 409, 410, 411, 412, 0, 413, 704, 0,
	705, 414, 0, 415, 416, 417, 418, 419, 420, 421,
	706, 707, 708, 510, 0, 422, 423, 0, 424, 425,
	426, 427, 428, 0, 0, 0, 0, 429, 430, 431,
	0, 0, 511, 432, 709, 710, 0, 711, 0, 433,
	434, 0, 712, 0, 435, 436, 437, 0, 438, 0,
	0, 0, 439, 440, 441, 442, 443, 444, 0, 445,
	447, 446, 0, 448, 713, 0, 449, 450, 0, 0,
	451, 452, 453, 454, 455, 456, 459, 0, 0, 457,
	458, 460, 461, 0, 462, 463, 465, 468, 464, 466,
	467, 469, 482, 483, 470, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 485, 0, 484, 0,
	486, 487, 488, 489, 490, 497, 499, 500, 495, 496,
	498, 501, 502, 504, 492, 493, 494, 0, 503, 491,
	0, 0, 0, 505, 506, 507, 508, 0, 714, 509,
	715, 512, 513, 0, 0, 514, 0, 515, 0, 0,
	517, 518, 519, 0, 0, 520, 521, 716, 0, 522,
	0, 717, 523, 524, 516, 525, 526, 527, 528, 529,
	530, 531, 532, 533, 0, 534, 535, 718, 536, 537,
	538, 719, 539, 540, 541, 720, 542, 721, 746, 544,
	0, 545, 546, 547, 0, 548, 549, 550, 551, 552,
	553, 554, 555, 722, 556, 557, 559, 558, 560, 0,
	561, 0, 562, 563, 564, 0, 0, 0, 0, 0,
	565, 566, 568, 0, 569, 570, 571, 572, 567, 573,
	574, 575, 576, 577, 0, 578, 579, 580, 0, 581,
	582, 583, 584, 585, 723, 586, 0, 587, 588, 595,
	596, 597, 589, 590, 591, 598, 599, 600, 601, 602,
	0, 604, 605, 603, 606, 607, 608, 0, 609, 610,
	592, 593, 611, 612, 0, 613, 614, 615, 616, 617,
	618, 619, 724, 0, 620, 0, 621, 622, 623, 624,
	625, 627, 594, 628, 633, 634, 725, 629, 630, 631,
	632, 726, 636, 637, 638, 0, 639, 640, 0, 635,
	626, 0, 641, 642, 643, 644, 645, 646, 0, 647,
	648, 0, 649, 727, 728, 729, 730, 0, 659, 0,
	650, 651, 652, 653, 731, 654, 732, 0, 655, 656,
	657, 658, 0, 660, 661, 0, 0, 662, 663, 665,
	667, 668, 664, 666, 669, 0, 670, 0, 0, 671,
	672, 673, 733, 734, 735, 0, 675, 674, 676, 677,
	678, 736, 679, 680, 290, 3173, 0, 0, 681, 682,
	737, 683, 684, 685, 0, 0, 0, 0, 0, 0,
	0, 296, 297, 299, 298, 300, 301, 302, 303, 0,
	304, 305, 0, 0, 0, 0, 0, 686, 0, 0,
	0, 306, 0, 307, 308, 0, 309, 310, 311, 312,
	313, 314, 315, 687, 688, 0, 316, 689, 317, 690,
	0, 691, 318, 319, 320, 321, 322, 323, 0, 0,
	0, 324, 692, 693, 694, 0, 325, 326, 695, 0,
	0, 0, 327, 328, 329, 330, 331, 332, 333, 334,
	0, 0, 336, 337, 338, 335, 339, 0, 340, 0,
	341, 342, 343, 344, 345, 346, 0, 347, 348, 349,
	0, 350, 351, 352, 0, 0, 0, 0, 0, 0,
	0, 353, 354, 355, 356, 357, 0, 358, 360, 696,
	697, 0, 363, 359, 361, 0, 364, 362, 365, 0,
	366, 367, 368, 0, 0, 369, 370, 371, 0, 372,
	373, 374, 0, 375, 376, 377, 0, 378, 379, 698,
	380, 381, 382, 384, 386, 383, 385, 387, 388, 389,
	390, 699, 700, 391, 0, 0, 0, 0, 0, 0,
	0, 392, 393, 394, 701, 0, 0, 0, 395, 0,
	396, 397, 398, 0, 399, 400, 0, 0, 401, 402,
	403, 702, 703, 404, 405, 406, 407, 408, 409, 410,
	411, 412, 0, 413, 704, 0, 705, 414, 0, 415,
	416, 417, 418, 419, 420, 421, 706, 707, 708, 510,
	0, 422, 423, 0, 424, 425, 426, 427, 428, 0,
	0, 0, 0, 429, 430, 431, 0, 0, 511, 432,
	709, 710, 0, 711, 0, 433, 434, 0, 712, 0,
	435, 436, 437, 0, 438, 0, 0, 0, 439, 440,
	441, 442, 443, 444, 0, 445, 447, 446, 0, 448,
	713, 0, 449, 450, 0, 0, 451, 452, 453, 454,
	455, 456, 459, 0, 0, 457, 458, 460, 461, 0,
	462, 463, 465, 468, 464, 466, 467, 469, 482, 483,
	470, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 485, 0, 484, 0, 486, 487, 488, 489,
	490, 497, 499, 500, 495, 496, 498, 501, 502, 504,
	492, 493, 494, 0, 503, 491, 0, 0, 0, 505,
	506, 507, 508, 0, 714, 509, 715, 512, 513, 0,
	0, 514, 0, 515, 0, 0, 517, 518, 519, 0,
	0, 520, 521, 716, 0, 522, 0, 717, 523, 524,
	516, 525, 526, 527, 528, 529, 530, 531, 532, 533,
	0, 534, 535, 718, 536, 537, 538, 719, 539, 540,
	541, 720, 542, 721, 543, 544, 0, 545, 546, 547,
	0, 548, 549, 550, 551, 552, 553, 554, 555, 722,
	556, 557, 559, 558, 560, 0, 561, 0, 562, 563,
	564, 0, 0, 0, 0, 0, 565, 566, 568, 0,
	569, 570, 571, 572, 567, 573, 574, 575, 576, 577,
	0, 578, 579, 580, 0, 581, 582, 583, 584, 585,
	723, 586, 0, 587, 588, 595, 596, 597, 589, 590,
	591, 598, 599, 600, 601, 602, 0, 604, 605, 603,
	606, 607, 608, 0, 609, 610, 592, 593, 611, 612,
	0, 613, 614, 615, 616, 617, 618, 619, 724, 0,
	620, 0, 621, 622, 623, 624, 625, 627, 594, 628,
	633, 634, 725, 629, 630, 631, 632, 726, 636, 637,
	638, 0, 639, 640, 0, 635, 626, 0, 641, 642,
	643, 644, 645, 646, 0, 647, 648, 0, 649, 727,
	728, 729, 730, 0, 659, 0, 650, 651, 652, 653,
	731, 654, 732, 0, 655, 656, 657, 658, 0, 660,
	661, 0, 0, 662, 663, 665, 667, 668, 664, 666,
	669, 0, 670, 0, 0, 671, 672, 673, 733, 734,
	735, 0, 675, 674, 676, 677, 678, 736, 679, 680,
	290, 0, 0, 0, 681, 682, 737, 683, 684, 685,
	0, 0, 0, 0, 0, 0, 0, 296, 297, 299,
	298, 300, 301, 302, 303, 0, 304, 305, 0, 0,
	0, 0, 0, 686, 0, 0, 0, 306, 0, 307,
	308, 0, 309, 310, 311, 312, 313, 314, 315, 687,
	688, 0, 316, 689, 317, 690, 0, 691, 318, 319,
	320, 321, 322, 323, 0, 0, 0, 324, 692, 693,
	694, 0, 325, 326, 695, 0, 0, 0, 327, 328,
	329, 330, 331, 332, 333, 334, 0, 0, 336, 337,
	338, 335, 339, 0, 340, 0, 341, 342, 343, 344,
	345, 346, 0, 347, 348, 349, 0, 350, 351, 352,
	0, 0, 0, 0, 0, 0, 0, 353, 354, 355,
	356, 357, 0, 358, 360, 696, 697, 0, 363, 359,
	361, 0, 364, 362, 365, 0, 366, 367, 368, 0,
	0, 369, 370, 371, 0, 372, 373, 374, 0, 375,
	376, 377, 0, 378, 379, 698, 380, 381, 382, 384,
	386, 383, 385, 387, 388, 389, 390, 699, 700, 391,
	0, 0, 0, 0, 0, 0, 0, 392, 393, 394,
	701, 0, 0, 0, 395, 0, 396, 397, 398, 0,
	399, 400, 0, 0, 401, 402, 403, 702, 703, 404,
	405, 406, 407, 408, 409, 410, 411, 412, 0, 413,
	704, 0, 705, 414, 0, 415, 416, 417, 418, 419,
	420, 421, 706, 707, 708, 510, 0, 422, 423, 0,
	424, 425, 426, 427, 428, 0, 0, 0, 0, 429,
	430, 431, 0, 0, 511, 432, 709, 710, 0, 711,
	0, 433, 434, 0, 712, 0, 435, 436, 437, 0,
	438, 0, 0, 0, 439, 440, 441, 442, 443, 444,
	0, 445, 447, 446, 0, 448, 713, 0, 449, 450,
	0, 0, 451, 452, 453, 454, 455, 456, 459, 0,
	0, 457, 458, 460, 461, 0, 462, 463, 465, 468,
	464, 466, 467, 469, 482, 483, 470, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 485, 0,
	484, 0, 486, 487, 488, 489, 490, 497, 499, 500,
	495, 496, 498, 501, 502, 504, 492, 493, 494, 0,
	503, 491, 0, 0, 0, 505, 506, 507, 508, 0,
	714, 509, 715, 512, 513, 0, 0, 514, 0, 515,
	0, 0, 517, 518, 519, 0, 0, 520, 521, 716,
	0, 522, 0, 717, 523, 524, 516, 525, 526, 527,
	528, 529, 530, 531, 532, 533, 0, 534, 535, 718,
	536, 537, 538, 719, 539, 540, 541, 720, 542, 721,
	543, 544, 4884, 545, 546, 547, 0, 548, 549, 550,
	551, 552, 553, 554, 555, 722, 556, 557, 559, 558,
	560, 0, 561, 0, 562, 563, 564, 0, 0, 0,
	0, 0, 565, 566, 568, 0, 569, 570, 571, 572,
	567, 573, 574, 575, 576, 577, 0, 578, 579, 580,
	0, 581, 582, 583, 584, 585, 723, 586, 0, 587,
	588, 595, 596, 597, 589, 590, 591, 598, 599, 600,
	601, 602, 0, 604, 605, 603, 606, 607, 608, 0,
	609, 610, 592, 593, 611, 612, 0, 613, 614, 615,
	616, 617, 618, 619, 724, 0, 620, 0, 621, 622,
	623, 624, 625, 627, 594, 628, 633, 634, 725, 629,
	630, 631, 632, 726, 636, 637, 638, 0, 639, 640,
	0, 635, 626, 0, 641, 642, 643, 644, 645, 646,
	0, 647, 648, 0, 649, 727, 728, 729, 730, 0,
	659, 0, 650, 651, 652, 653, 731, 654, 732, 0,
	655, 656, 657, 658, 0, 660, 661, 0, 0, 662,
	663, 665, 667, 668, 664, 666, 669, 0, 670, 0,
	0, 671, 672, 673, 733, 734, 735, 0, 675, 674,
	676, 677, 678, 736, 679, 680, 290, 3670, 0, 0,
	681, 682, 737, 683, 684, 685, 0, 0, 0, 0,
	0, 0, 0, 296, 297, 299, 298, 300, 301, 302,
	303, 0, 304, 305, 0, 0, 0, 0, 0, 686,
	0, 0, 0, 306, 0, 307, 308, 0, 309, 310,
	311, 312, 313, 314, 315, 687, 688, 0, 316, 689,
	317, 690, 0, 691, 318, 319, 320, 321, 322, 323,
	0, 0, 0, 324, 692, 693, 694, 0, 325, 326,
	695, 0, 0, 0, 327, 328, 329, 330, 331, 332,
	333, 334, 0, 0, 336, 337, 338, 335, 339, 0,
	340, 0, 341, 342, 343, 344, 345, 346, 0, 347,
	348, 349, 0, 350, 351, 352, 0, 0, 0, 0,
	0, 0, 0, 353, 354, 355, 356, 357, 0, 358,
	360, 696, 697, 0, 363, 359, 361, 0, 364, 362,
	365, 0, 366, 367, 368, 0, 0, 369, 370, 371,
	0, 372, 373, 374, 0, 375, 376, 377, 0, 378,
	379, 698, 380, 381, 382, 384, 386, 383, 385, 387,
	388, 389, 390, 699, 700, 391, 0, 0, 0, 0,
	0, 0, 0, 392, 393, 394, 701, 0, 0, 0,
	395, 0, 396, 397, 398, 0, 399, 400, 0, 0,
	401, 402, 403, 702, 703, 404, 405, 406, 407, 408,
	409, 410, 411, 412, 0, 413, 704, 0, 705, 414,
	0, 415, 416, 417, 418, 419, 420, 421, 706, 707,
	708, 510, 0, 422, 423, 0, 424, 425, 426, 427,
	428, 0, 0, 0, 0, 429, 430, 431, 0, 0,
	511, 432, 709, 710, 0, 711, 0, 433, 434, 0,
	712, 0, 435, 436, 437, 0, 438, 0, 0, 0,
	439, 440, 441, 442, 443, 444, 0, 445, 447, 446,
	0, 448, 713, 0, 449, 450, 0, 0, 451, 452,
	453, 454, 455, 456, 459, 0, 0, 457, 458, 460,
	461, 0, 462, 463, 465, 468, 464, 466, 467, 469,
	482, 483, 470, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 485, 0, 484, 0, 486, 487,
	488, 489, 490, 497, 499, 500, 495, 496, 498, 501,
	502, 504, 492, 493, 494, 0, 503, 491, 0, 0,
	0, 505, 506, 507, 508, 0, 714, 509, 715, 512,
	513, 0, 0, 514, 0, 515, 0, 0, 517, 518,
	519, 0, 0, 520, 521, 716, 0, 522, 0, 717,
	523, 524, 516, 525, 526, 527, 528, 529, 530, 531,
	532, 533, 0, 534, 535, 718, 536, 537, 538, 719,
	539, 540, 541, 720, 542, 721, 543, 544, 0, 545,
	546, 547, 0, 548, 549, 550, 551, 552, 553, 554,
	555, 722, 556, 557, 559, 558, 560, 0, 561, 0,
	562, 563, 564, 0, 0, 0, 0, 0, 565, 566,
	568, 0, 569, 570, 571, 572, 567, 573, 574, 575,
	576, 577, 0, 578, 579, 580, 0, 581, 582, 583,
	584, 585, 723, 586, 0, 587, 588, 595, 596, 597,
	589, 590, 591, 598, 599, 600, 601, 602, 0, 604,
	605, 603, 606, 607, 608, 0, 609, 610, 592, 593,
	611, 612, 0, 613, 614, 615, 616, 617, 618, 619,
	724, 0, 620, 0, 621, 622, 623, 624, 625, 627,
	594, 628, 633, 634, 725, 629, 630, 631, 632, 726,
	636, 637, 638, 0, 639, 640, 0, 635, 626, 0,
	641, 642, 643, 644, 645, 646, 0, 647, 648, 0,
	649, 727, 728, 729, 730, 0, 659, 0, 650, 651,
	652, 653, 731, 654, 732, 0, 655, 656, 657, 658,
	0, 660, 661, 0, 0, 662, 663, 665, 667, 668,
	664, 666, 669, 0, 670, 0, 0, 671, 672, 673,
	733, 734, 735, 0, 675, 674, 676, 677, 678, 736,
	679, 680, 290, 0, 0, 0, 681, 682, 737, 683,
	684, 685, 0, 0, 0, 0, 0, 0, 0, 296,
	297, 299, 298, 300, 301, 302, 303, 0, 304, 305,
	0, 0, 0, 0, 0, 686, 0, 0, 0, 306,
	0, 307, 308, 0, 309, 310, 311, 312, 313, 314,
	315, 687, 688, 0, 316, 689, 317, 690, 0, 691,
	318, 319, 320, 321, 322, 323, 0, 0, 0, 324,
	692, 693, 694, 0, 325, 326, 695, 0, 0, 0,
	327, 328, 329, 330, 331, 332, 333, 334, 0, 0,
	336, 337, 338, 335, 339, 0, 340, 0, 341, 342,
	343, 344, 345, 346, 0, 347, 348, 349, 0, 350,
	351, 352, 0, 0, 0, 0, 0, 0, 0, 353,
	354, 355, 356, 357, 0, 358, 360, 696, 697, 0,
	363, 359, 361, 0, 364, 362, 365, 0, 366, 367,
	368, 0, 0, 369, 370, 371, 0, 372, 373, 374,
	0, 375, 376, 377, 0, 378, 379, 698, 380, 381,
	382, 384, 386, 383, 385, 387, 388, 389, 390, 699,
	700, 391, 0, 0, 0, 0, 0, 0, 0, 392,
	393, 394, 701, 0, 0, 0, 395, 0, 396, 397,
	398, 0, 399, 400, 0, 0, 401, 402, 403, 702,
	703, 404, 405, 406, 407, 408, 409, 410, 411, 412,
	0, 413, 704, 0, 705, 414, 0, 415, 416, 417,
	418, 419, 420, 421, 706, 707, 708, 510, 0, 422,
	423, 0, 424, 425, 426, 427, 428, 0, 0, 0,
	0, 429, 430, 431, 0, 0, 511, 432, 709, 710,
	0, 711, 0, 433, 434, 0, 712, 0, 435, 436,
	437, 0, 438, 0, 0, 0, 439, 440, 441, 442,
	443, 444, 0, 445, 447, 446, 0, 448, 713, 0,
	449, 450, 0, 0, 451, 452, 453, 454, 455, 456,
	459, 0, 0, 457, 458, 460, 461, 0, 462, 463,
	465, 468, 464, 466, 467, 469, 482, 483, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	485, 0, 484, 0, 486, 487, 488, 489, 490, 497,
	499, 500, 495, 496, 498, 501, 502, 504, 492, 493,
	494, 0, 503, 491, 0, 0, 0, 505, 506, 507,
	508, 0, 714, 509, 715, 512, 513, 0, 0, 514,
	0, 515, 0, 0, 517, 518, 519, 0, 0, 520,
	521, 716, 0, 522, 0, 717, 523, 524, 516, 525,
	526, 527, 528, 529, 530, 531, 532, 533, 0, 534,
	535, 718, 536, 537, 538, 719, 539, 540, 541, 720,
	542, 721, 543, 544, 4468, 545, 546, 547, 0, 548,
	549, 550, 551, 552, 553, 554, 555, 722, 556, 557,
	559, 558, 560, 0, 561, 0, 562, 563, 564, 0,
	0, 0, 0, 0, 565, 566, 568, 0, 569, 570,
	571, 572, 567, 573, 574, 575, 576, 577, 0, 578,
	579, 580, 0, 581, 582, 583, 584, 585, 723, 586,
	0, 587, 588, 595, 596, 597, 589, 590, 591, 598,
	599, 600, 601, 602, 0, 604, 605, 603, 606, 607,
	608, 0, 609, 610, 592, 593, 611, 612, 0, 613,
	614, 615, 616, 617, 618, 619, 724, 0, 620, 0,
	621, 622, 623, 624, 625, 627, 594, 628, 633, 634,
	725, 629, 630, 631, 632, 726, 636, 637, 638, 0,
	639, 640, 0, 635, 626, 0, 641, 642, 643, 644,
	645, 646, 0, 647, 648, 0, 649, 727, 728, 729,
	730, 0, 659, 0, 650, 651, 652, 653, 731, 654,
	732, 0, 655, 656, 657, 658, 0, 660, 661, 0,
	0, 662, 663, 665, 667, 668, 664, 666, 669, 0,
	670, 0, 0, 671, 672, 673, 733, 734, 735, 0,
	675, 674, 676, 677, 678, 736, 679, 680, 290, 0,
	0, 0, 681, 682, 737, 683, 684, 685, 0, 0,
	0, 0, 0, 0, 0, 296, 297, 299, 298, 300,
	301, 302, 303, 0, 304, 305, 0, 0, 0, 0,
	0, 686, 0, 0, 0, 306, 0, 307, 308, 0,
	309, 310, 311, 312, 313, 314, 315, 687, 688, 0,
	316, 689, 317, 690, 0, 691, 318, 319, 320, 321,
	322, 323, 0, 0, 0, 324, 692, 693, 694, 0,
	325, 326, 695, 0, 0, 0, 327, 328, 329, 330,
	331, 332, 333, 334, 0, 0, 336, 337, 338, 335,
	339, 0, 340, 0, 341, 342, 343, 344, 345, 346,
	0, 347, 348, 349, 0, 350, 351, 352, 0, 0,
	0, 0, 0, 0, 0, 353, 354, 355, 356, 357,
	0, 358, 360, 696, 697, 4190, 363, 359, 361, 0,
	364, 362, 365, 0, 366, 367, 368, 0, 0, 369,
	370, 371, 0, 372, 373, 374, 0, 375, 376, 377,
	0, 378, 379, 698, 380, 381, 382, 384, 386, 383,
	385, 387, 388, 389, 390, 699, 700, 391, 0, 0,
	0, 0, 0, 0, 0, 392, 393, 394, 701, 0,
	0, 0, 395, 0, 396, 397, 398, 0, 399, 400,
	0, 0, 401, 402, 403, 702, 703, 404, 405, 406,
	407, 408, 409, 410, 411, 412, 0, 413, 704, 0,
	705, 414, 0, 415, 416, 417, 418, 419, 420, 421,
	706, 707, 708, 510, 0, 422, 423, 0, 424, 425,
	426, 427, 428, 0, 0, 0, 0, 429, 430, 431,
	0, 0, 511, 432, 709, 710, 0, 711, 0, 433,
	434, 0, 712, 0, 435, 436, 437, 0, 438, 0,
	0, 0, 439, 440, 441, 442, 443, 444, 0, 445,
	447, 446, 0, 448, 713, 0, 449, 450, 0, 0,
	451, 452, 453, 454, 455, 456, 459, 0, 0, 457,
	458, 460, 461, 0, 462, 463, 465, 468, 464, 466,
	467, 469, 482, 483, 470, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 485, 0, 484, 0,
	486, 487, 488, 489, 490, 497, 499, 500, 495, 496,
	498, 501, 502, 504, 492, 493, 494, 0, 503, 491,
	0, 0, 0, 505, 506, 507, 508, 0, 714, 509,
	715, 512, 513, 0, 0, 514, 0, 515, 0, 0,
	517, 518, 519, 0, 0, 520, 521, 716, 0, 522,
	0, 717, 523, 524, 516, 525, 526, 527, 528, 529,
	530, 531, 532, 533, 0, 534, 535, 718, 536, 537,
	538, 719, 539, 540, 541, 720, 542, 721, 543, 544,
	0, 545, 546, 547, 0, 548, 549, 550, 551, 552,
	553, 554, 555, 722, 556, 557, 559, 558, 560, 0,
	561, 0, 562, 563, 564, 0, 0, 0, 0, 0,
	565, 566, 568, 0, 569, 570, 571, 572, 567, 573,
	574, 575, 576, 577, 0, 578, 579, 580, 0, 581,
	582, 583, 584, 585, 723, 586, 0, 587, 588, 595,
	596, 597, 589, 590, 591, 598, 599, 600, 601, 602,
	0, 604, 605, 603, 606, 607, 608, 0, 609, 610,
	592, 593, 611, 612, 0, 613, 614, 615, 616, 617,
	618, 619, 724, 0, 620, 0, 621, 622, 623, 624,
	625, 627, 594, 628, 633, 634, 725, 629, 630, 631,
	632, 726, 636, 637, 638, 0, 639, 640, 0, 635,
	626, 0, 641, 642, 643, 644, 645, 646, 0, 647,
	648, 0, 649, 727, 728, 729, 730, 0, 659, 0,
	650, 651, 652, 653, 731, 654, 732, 0, 655, 656,
	657, 658, 0, 660, 661, 0, 0, 662, 663, 665,
	667, 668, 664, 666, 669, 0, 670, 0, 0, 671,
	672, 673, 733, 734, 735, 0, 675, 674, 676, 677,
	678, 736, 679, 680, 290, 0, 0, 0, 681, 682,
	737, 683, 684, 685, 0, 0, 0, 0, 0, 0,
	0, 296, 297, 299, 298, 300, 301, 302, 303, 0,
	304, 305, 0, 0, 0, 0, 0, 686, 0, 2951,
	0, 306, 0, 307, 308, 0, 309, 310, 311, 312,
	313, 314, 315, 687, 688, 0, 316, 689, 317, 690,
	0, 691, 318, 319, 320, 321, 322, 323, 0, 0,
	0, 324, 692, 693, 694, 0, 325, 326, 695, 0,
	0, 0, 327, 328, 329, 330, 331, 332, 333, 334,
	0, 0, 336, 337, 338, 335, 339, 0, 340, 0,
	341, 342, 343, 344, 345, 346, 0, 347, 348, 349,
	0, 350, 351, 352, 0, 0, 0, 0, 0, 0,
	0, 353, 354, 355, 356, 357, 0, 358, 360, 696,
	697, 0, 363, 359, 361, 0, 364, 362, 365, 0,
	366, 367, 368, 0, 0, 369, 370, 371, 0, 372,
	373, 374, 0, 375, 376, 377, 0, 378, 379, 698,
	380, 381, 382, 384, 386, 383, 385, 387, 388, 389,
	390, 699, 700, 391, 0, 0, 0, 0, 0, 0,
	0, 392, 393, 394, 701, 0, 0, 0, 395, 0,
	396, 397, 398, 0, 399, 400, 0, 0, 401, 402,
	403, 702, 703, 404, 405, 406, 407, 408, 409, 410,
	411, 412, 0, 413, 704, 0, 705, 414, 0, 415,
	416, 417, 418, 419, 420, 421, 706, 707, 708, 510,
	0, 422, 423, 0, 424, 425, 426, 427, 428, 0,
	0, 0, 0, 429, 430, 431, 0, 0, 511, 432,
	709, 710, 0, 711, 0, 433, 434, 0, 712, 0,
	435, 436, 437, 0, 438, 0, 0, 0, 439, 440,
	441, 442, 443, 444, 0, 445, 447, 446, 0, 448,
	713, 0, 449, 450, 0, 0, 451, 452, 453, 454,
	455, 456, 459, 0, 0, 457, 458, 460, 461, 0,
	462, 463, 465, 468, 464, 466, 467, 469, 482, 483,
	470, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 485, 0, 484, 0, 486, 487, 488, 489,
	490, 497, 499, 500, 495, 496, 498, 501, 502, 504,
	492, 493, 494, 0, 503, 491, 0, 0, 0, 505,
	506, 507, 508, 0, 714, 509, 715, 512, 513, 0,
	0, 514, 0, 515, 0, 0, 517, 518, 519, 0,
	0, 520, 521, 716, 0, 522, 0, 717, 523, 524,
	516, 525, 526, 527, 528, 529, 530, 531, 532, 533,
	0, 534, 535, 718, 536, 537, 538, 719, 539, 540,
	541, 720, 542, 721, 543, 544, 0, 545, 546, 547,
	0, 548, 549, 550, 551, 552, 553, 554, 555, 722,
	556, 557, 559, 558, 560, 0, 561, 0, 562, 563,
	564, 0, 0, 0, 0, 0, 565, 566, 568, 0,
	569, 570, 571, 572, 567, 573, 574, 575, 576, 577,
	0, 578, 579, 580, 0, 581, 582, 583, 584, 585,
	723, 586, 0, 587, 588, 595, 596, 597, 589, 590,
	591, 598, 599, 600, 601, 602, 0, 604, 605, 603,
	606, 607, 608, 0, 609, 610, 592, 593, 611, 612,
	0, 613, 614, 615, 616, 617, 618, 619, 724, 0,
	620, 0, 621, 622, 623, 624, 625, 627, 594, 628,
	633, 634, 725, 629, 630, 631, 632, 726, 636, 637,
	638, 0, 639, 640, 0, 635, 626, 0, 641, 642,
	643, 644, 645, 646, 0, 647, 648, 0, 649, 727,
	728, 729, 730, 0, 659, 0, 650, 651, 652, 653,
	731, 654, 732, 0, 655, 656, 657, 658, 0, 660,
	661, 0, 0, 662, 663, 665, 667, 668, 664, 666,
	669, 0, 670, 0, 0, 671, 672, 673, 733, 734,
	735, 0, 675, 674, 676, 677, 678, 736, 679, 680,
	290, 3173, 0, 0, 681, 682, 737, 683, 684, 685,
	0, 0, 0, 0, 0, 0, 0, 296, 297, 299,
	298, 300, 301, 302, 303, 0, 304, 305, 0, 0,
	0, 0, 0, 686, 0, 0, 0, 306, 0, 307,
	308, 0, 309, 310, 311, 312, 313, 314, 315, 687,
	688, 0, 316, 689, 317, 690, 0, 691, 318, 319,
	320, 321, 322, 323, 0, 0, 0, 324, 692, 693,
	694, 0, 325, 326, 695, 0, 0, 0, 327, 328,
	329, 330, 331, 332, 333, 334, 0, 0, 336, 337,
	338, 335, 339, 0, 340, 0, 341, 342, 343, 344,
	345, 346, 0, 347, 348, 349, 0, 350, 351, 352,
	0, 0, 0, 0, 0, 0, 0, 353, 354, 355,
	356, 357, 0, 358, 360, 696, 697, 0, 363, 359,
	361, 0, 364, 362, 365, 0, 366, 367, 368, 0,
	0, 369, 370, 371, 0, 372, 373, 374, 0, 375,
	376, 377, 0, 378, 379, 698, 380, 381, 382, 384,
	386, 383, 385, 387, 388, 389, 390, 699, 700, 391,
	0, 0, 0, 0, 0, 0, 0, 392, 393, 394,
	701, 0, 0, 0, 395, 0, 396, 397, 398, 0,
	399, 400, 0, 0, 401, 402, 403, 702, 703, 404,
	405, 406, 407, 408, 409, 410, 411, 412, 0, 413,
	704, 0, 705, 414, 0, 415, 416, 417, 418, 419,
	420, 421, 706, 707, 708, 510, 0, 422, 423, 0,
	424, 425, 426, 427, 428, 0, 0, 0, 0, 429,
	430, 431, 0, 0, 511, 432, 709, 710, 0, 711,
	0, 433, 434, 0, 712, 0, 435, 436, 437, 0,
	438, 0, 0, 0, 439, 440, 441, 442, 443, 444,
	0, 445, 447, 446, 0, 448, 713, 0, 449, 450,
	0, 0, 451, 452, 453, 454, 455, 456, 459, 0,
	0, 457, 458, 460, 461, 0, 462, 463, 465, 468,
	464, 466, 467, 469, 482, 483, 470, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 485, 0,
	484, 0, 486, 487, 488, 489, 490, 497, 499, 500,
	495, 496, 498, 501, 502, 504, 492, 493, 494, 0,
	503, 491, 0, 0, 0, 505, 506, 507, 508, 0,
	714, 509, 715, 512, 513, 0, 0, 514, 0, 515,
	0, 0, 517, 518, 3304, 0, 0, 520, 521, 716,
	0, 522, 0, 717, 523, 524, 516, 525, 526, 527,
	528, 529, 530, 531, 532, 533, 0, 534, 535, 718,
	536, 537, 538, 719, 539, 540, 541, 720, 542, 721,
	543, 544, 0, 545, 546, 547, 0, 548, 549, 550,
	551, 552, 553, 554, 555, 722, 556, 557, 559, 558,
	560, 0, 561, 0, 562, 563, 564, 0, 0, 0,
	0, 0, 565, 566, 568, 0, 569, 570, 571, 572,
	567, 573, 574, 575, 576, 577, 0, 578, 579, 580,
	0, 581, 582, 583, 584, 585, 723, 586, 0, 587,
	588, 595, 596, 597, 589, 590, 591, 598, 599, 600,
	601, 602, 0, 604, 605, 603, 606, 607, 608, 0,
	609, 610, 592, 593, 611, 612, 0, 613, 614, 615,
	616, 617, 618, 619, 724, 0, 620, 0, 621, 622,
	623, 624, 625, 627, 594, 628, 633, 634, 725, 629,
	630, 631, 632, 726, 636, 637, 638, 0, 639, 640,
	0, 635, 626, 0, 641, 642, 643, 644, 645, 646,
	0, 647, 648, 0, 649, 727, 728, 729, 730, 0,
	659, 0, 650, 651, 652, 653, 731, 654, 732, 0,
	655, 656, 657, 658, 0, 660, 661, 0, 0, 662,
	663, 665, 667, 668, 664, 666, 669, 0, 670, 0,
	0, 671, 672, 673, 733, 734, 735, 0, 675, 674,
	676, 677, 678, 736, 679, 680, 290, 0, 0, 0,
	681, 682, 737, 683, 684, 685, 0, 0, 0, 0,
	0, 0, 0, 296, 297, 299, 298, 300, 301, 302,
	303, 0, 304, 305, 0, 0, 0, 0, 0, 686,
	0, 0, 0, 306, 0, 307, 308, 0, 309, 310,
	311, 312, 313, 314, 315, 687, 688, 0, 316, 689,
	317, 690, 0, 691, 318, 319, 320, 321, 322, 323,
	0, 0, 0, 324, 692, 693, 694, 0, 325, 326,
	695, 0, 0, 0, 327, 328, 329, 330, 331, 332,
	333, 334, 0, 0, 336, 337, 338, 335, 339, 0,
	340, 0, 341, 342, 343, 344, 345, 346, 0, 347,
	348, 349, 0, 350, 351, 352, 0, 0, 0, 0,
	0, 0, 0, 353, 354, 355, 356, 357, 0, 358,
	360, 696, 697, 0, 363, 359, 361, 0, 364, 362,
	365, 0, 366, 367, 368, 0, 0, 369, 370, 371,
	0, 372, 373, 374, 0, 375, 376, 377, 0, 378,
	379, 698, 380, 381, 382, 384, 386, 383, 385, 387,
	388, 389, 390, 699, 700, 391, 0, 0, 0, 0,
	0, 0, 0, 392, 393, 394, 701, 0, 0, 0,
	395, 0, 396, 397, 398, 0, 399, 400, 0, 0,
	401, 402, 403, 702, 703, 404, 405, 406, 407, 408,
	409, 410, 411, 412, 0, 413, 704, 0, 705, 414,
	0, 415, 416, 417, 418, 419, 420, 421, 706, 707,
	708, 510, 0, 422, 423, 0, 424, 425, 426, 427,
	428, 0, 0, 0, 0, 429, 430, 431, 0, 0,
	511, 432, 709, 710, 0, 711, 0, 433, 434, 0,
	712, 0, 435, 436, 437, 0, 438, 0, 0, 0,
	439, 440, 441, 442, 443, 444, 0, 445, 447, 446,
	0, 448, 713, 0, 449, 450, 0, 0, 451, 452,
	453, 454, 455, 456, 459, 0, 0, 457, 458, 460,
	461, 0, 462, 463, 465, 468, 464, 466, 467, 469,
	482, 483, 470, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 485, 0, 484, 0, 486, 487,
	488, 489, 490, 497, 499, 500, 495, 496, 498, 501,
	502, 504, 492, 493, 494, 0, 503, 491, 0, 0,
	0, 505, 506, 507, 508, 0, 714, 509, 715, 512,
	513, 0, 0, 514, 0, 515, 0, 0, 517, 518,
	519, 0, 0, 520, 521, 716, 0, 522, 0, 717,
	523, 524, 516, 525, 526, 527, 528, 529, 530, 531,
	532, 533, 0, 534, 535, 718, 536, 537, 538, 719,
	539, 540, 541, 720, 542, 721, 543, 544, 2349, 545,
	546, 547, 0, 548, 549, 550, 551, 552, 553, 554,
	555, 722, 556, 557, 559, 558, 560, 0, 561, 0,
	562, 563, 564, 0, 0, 0, 0, 0, 565, 566,
	568, 0, 569, 570, 571, 572, 567, 573, 574, 575,
	576, 577, 0, 578, 579, 580, 0, 829, 582, 583,
	584, 585, 723, 586, 0, 587, 588, 595, 596, 597,
	589, 590, 591, 828, 599, 600, 601, 602, 0, 604,
	605, 603, 606, 607, 608, 0, 609, 610, 592, 593,
	611, 612, 0, 613, 614, 615, 616, 617, 618, 619,
	724, 0, 620, 0, 621, 622, 623, 624, 625, 627,
	594, 628, 633, 634, 725, 629, 630, 631, 632, 726,
	636, 637, 638, 0, 639, 640, 0, 635, 626, 0,
	641, 642, 643, 644, 645, 646, 0, 647, 648, 0,
	649, 826, 728, 729, 730, 0, 659, 0, 650, 651,
	652, 653, 731, 654, 732, 0, 655, 656, 657, 658,
	0, 660, 661, 0, 0, 662, 663, 665, 667, 668,
	664, 666, 669, 0, 670, 0, 0, 671, 672, 673,
	733, 734, 735, 0, 675, 674, 676, 677, 678, 736,
	679, 680, 290, 0, 0, 0, 681, 682, 737, 683,
	684, 685, 0, 0, 0, 0, 0, 0, 0, 296,
	297, 299, 298, 300, 301, 302, 303, 2521, 304, 305,
	0, 0, 0, 0, 0, 686, 0, 0, 0, 306,
	0, 307, 308, 0, 309, 310, 311, 312, 313, 314,
	315, 687, 688, 0, 316, 689, 317, 690, 0, 691,
	318, 319, 320, 321, 322, 323, 0, 0, 0, 324,
	692, 693, 694, 0, 325, 326, 695, 0, 0, 0,
	327, 328, 329, 330, 331, 332, 333, 334, 0, 0,
	336, 337, 338, 335, 339, 0, 340, 0, 341, 342,
	343, 344, 345, 346, 0, 347, 348, 349, 0, 350,
	351, 352, 0, 0, 0, 0, 0, 0, 0, 353,
	354, 355, 356, 357, 0, 358, 360, 696, 697, 0,
	363, 359, 361, 0, 364, 362, 365, 0, 366, 367,
	368, 0, 0, 369, 370, 371, 0, 372, 373, 374,
	0, 375, 376, 377, 0, 378, 379, 698, 380, 381,
	382, 384, 386, 383, 385, 387, 388, 389, 390, 699,
	700, 391, 0, 0, 0, 0, 0, 0, 0, 392,
	393, 394, 701, 0, 0, 0, 395, 0, 396, 397,
	398, 0, 399, 400, 0, 0, 401, 402, 403, 702,
	703, 404, 405, 406, 407, 408, 409, 410, 411, 412,
	0, 413, 704, 0, 705, 414, 0, 415, 416, 417,
	418, 419, 420, 421, 706, 707, 708, 510, 0, 422,
	423, 0, 424, 425, 426, 427, 428, 0, 0, 0,
	0, 429, 430, 431, 0, 0, 511, 432, 709, 710,
	0, 711, 0, 433, 434, 0, 712, 0, 435, 436,
	437, 0, 438, 0, 0, 0, 439, 440, 441, 442,
	443, 444, 0, 445, 447, 446, 0, 448, 713, 0,
	449, 450, 0, 0, 451, 452, 453, 454, 455, 456,
	459, 0, 0, 457, 458, 460, 461, 0, 462, 463,
	465, 468, 464, 466, 467, 469, 482, 483, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	485, 0, 484, 0, 486, 487, 488, 489, 490, 497,
	499, 500, 495, 496, 498, 501, 502, 504, 492, 493,
	494, 0, 503, 491, 0, 0, 0, 505, 506, 507,
	508, 0, 714, 509, 715, 512, 513, 0, 0, 514,
	0, 515, 0, 0, 517, 518, 519, 0, 0, 520,
	521, 716, 0, 522, 0, 717, 523, 524, 516, 525,
	526, 527, 528, 529, 530, 531, 532, 533, 0, 534,
	535, 718, 536, 537, 538, 719, 539, 540, 541, 720,
	542, 721, 543, 544, 0, 545, 546, 547, 0, 548,
	549, 550, 551, 552, 553, 554, 555, 722, 556, 557,
	559, 558, 560, 0, 561, 0, 562, 563, 564, 0,
	0, 0, 0, 0, 565, 566, 568, 0, 569, 570,
	571, 572, 567, 573, 574, 575, 576, 577, 0, 578,
	579, 580, 0, 581, 582, 583, 584, 585, 723, 586,
	0, 587, 588, 595, 596, 597, 589, 590, 591, 598,
	599, 600, 601, 602, 0, 604, 605, 603, 606, 607,
	608, 0, 609, 610, 592, 593, 611, 612, 0, 613,
	614, 615, 616, 617, 618, 619, 724, 0, 620, 0,
	621, 622, 623, 624, 625, 627, 594, 628, 633, 634,
	725, 629, 630, 631, 632, 726, 636, 637, 638, 0,
	639, 640, 0, 635, 626, 0, 641, 642, 643, 644,
	645, 646, 0, 647, 648, 0, 649, 727, 728, 729,
	730, 0, 659, 0, 650, 651, 652, 653, 731, 654,
	732, 0, 655, 656, 657, 658, 0, 660, 661, 0,
	0, 662, 663, 665, 667, 668, 664, 666, 669, 0,
	670, 0, 0, 671, 672, 673, 733, 734, 735, 0,
	675, 674, 676, 677, 678, 736, 679, 680, 2509, 0,
	290, 0, 681, 682, 737, 683, 684, 685, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 296, 297, 299,
	298, 300, 301, 302, 303, 0, 304, 305, 0, 0,
	0, 0, 0, 686, 0, 0, 0, 306, 0, 307,
	308, 0, 309, 310, 311, 312, 313, 314, 315, 687,
	688, 0, 316, 689, 317, 690, 0, 691, 318, 319,
	320, 321, 322, 323, 0, 0, 0, 324, 692, 693,
	694, 0, 325, 326, 695, 0, 0, 0, 327, 328,
	329, 330, 331, 332, 333, 334, 0, 0, 336, 337,
	338, 335, 339, 0, 340, 0, 341, 342, 343, 344,
	345, 346, 0, 347, 348, 349, 0, 350, 351, 352,
	0, 0, 0, 0, 0, 0, 0, 353, 354, 355,
	356, 357, 0, 358, 360, 696, 697, 0, 363, 359,
	361, 0, 364, 362, 365, 0, 366, 367, 368, 0,
	0, 369, 370, 371, 0, 372, 373, 374, 0, 375,
	376, 377, 0, 378, 379, 698, 380, 381, 382, 384,
	386, 383, 385, 387, 388, 389, 390, 699, 700, 391,
	0, 0, 0, 0, 0, 0, 0, 392, 393, 394,
	701, 0, 0, 0, 395, 0, 396, 397, 398, 0,
	399, 400, 0, 0, 401, 402, 403, 702, 703, 404,
	405, 406, 407, 408, 409, 410, 411, 412, 0, 413,
	704, 0, 705, 414, 0, 415, 416, 417, 418, 419,
	420, 421, 706, 707, 708, 510, 0, 422, 423, 0,
	424, 425, 426, 427, 428, 0, 0, 0, 0, 429,
	430, 431, 0, 0, 511, 432, 709, 710, 0, 711,
	0, 433, 434, 0, 712, 0, 435, 436, 437, 0,
	438, 0, 0, 0, 439, 440, 441, 442, 443, 444,
	0, 445, 447, 446, 0, 448, 713, 0, 449, 450,
	0, 0, 451, 452, 453, 454, 455, 456, 459, 0,
	0, 457, 458, 460, 461, 0, 462, 463, 465, 468,
	464, 466, 467, 469, 482, 483, 470, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 485, 0,
	484, 0, 486, 487, 488, 489, 490, 497, 499, 500,
	495, 496, 498, 501, 502, 504, 492, 493, 494, 0,
	503, 491, 0, 0, 0, 505, 506, 507, 508, 0,
	714, 509, 715, 512, 513, 0, 0, 514, 0, 515,
	0, 0, 517, 518, 519, 0, 0, 520, 521, 716,
	0, 522, 0, 717, 523, 524, 516, 525, 526, 527,
	528, 529, 530, 531, 532, 533, 0, 534, 535, 718,
	536, 537, 538, 719, 539, 540, 541, 720, 542, 721,
	543, 544, 0, 545, 546, 547, 0, 548, 549, 550,
	551, 552, 553, 554, 555, 722, 556, 557, 559, 558,
	560, 0, 561, 0, 562, 563, 564, 0, 0, 0,
	0, 0, 565, 566, 568, 0, 569, 570, 571, 572,
	567, 573, 574, 575, 576, 577, 0, 578, 579, 580,
	0, 581, 582, 583, 584, 585, 723, 586, 0, 587,
	588, 595, 596, 597, 589, 590, 591, 598, 599, 600,
	601, 602, 0, 604, 605, 603, 606, 607, 608, 0,
	609, 610, 592, 593, 611, 612, 0, 613, 614, 615,
	616, 617, 618, 619, 724, 0, 620, 0, 621, 622,
	623, 624, 625, 627, 594, 628, 633, 634, 725, 629,
	630, 631, 632, 726, 636, 637, 638, 0, 639, 640,
	0, 635, 626, 0, 641, 642, 643, 644, 645, 646,
	0, 647, 648, 0, 649, 727, 728, 729, 730, 0,
	659, 0, 650, 651, 652, 653, 731, 654, 732, 0,
	655, 656, 657, 658, 0, 660, 661, 0, 0, 662,
	663, 665, 667, 668, 664, 666, 669, 0, 670, 0,
	0, 671, 672, 673, 733, 734, 735, 0, 675, 674,
	676, 677, 678, 736, 679, 680, 1777, 0, 290, 0,
	681, 682, 737, 683, 684, 685, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 296, 297, 299, 298, 300,
	301, 302, 303, 0, 304, 305, 0, 0, 0, 0,
	0, 686, 0, 0, 0, 306, 0, 307, 308, 0,
	309, 310, 311, 312, 313, 314, 315, 687, 688, 0,
	316, 689, 317, 690, 0, 691, 318, 319, 320, 321,
	322, 323, 0, 0, 0, 324, 692, 693, 694, 0,
	325, 326, 695, 0, 0, 0, 327, 328, 329, 330,
	331, 332, 333, 334, 0, 0, 336, 337, 338, 335,
	339, 0, 340, 0, 341, 342, 343, 344, 345, 346,
	0, 347, 348, 349, 0, 350, 351, 352, 0, 0,
	0, 0, 0, 0, 0, 353, 354, 355, 356, 357,
	0, 358, 360, 696, 697, 0, 363, 359, 361, 0,
	364, 362, 365, 0, 366, 367, 368, 0, 0, 369,
	370, 371, 0, 372, 373, 374, 0, 375, 376, 377,
	0, 378, 379, 698, 380, 381, 382, 384, 386, 383,
	385, 387, 388, 389, 390, 699, 700, 391, 0, 0,
	0, 0, 0, 0, 0, 392, 393, 394, 701, 0,
	0, 0, 395, 0, 396, 397, 398, 0, 399, 400,
	0, 0, 401, 402, 403, 702, 703, 404, 405, 406,
	407, 408, 409, 410, 411, 412, 0, 413, 704, 0,
	705, 414, 0, 415, 416, 417, 418, 419, 420, 421,
	706, 707, 708, 510, 0, 422, 423, 0, 424, 425,
	426, 427, 428, 0, 0, 0, 0, 429, 430, 431,
	0, 0, 511, 432, 709, 710, 0, 711, 0, 433,
	434, 0, 712, 0, 435, 436, 437, 0, 438, 0,
	0, 0, 439, 440, 441, 442, 443, 444, 0, 445,
	447, 446, 0, 448, 713, 0, 449, 450, 0, 0,
	451, 452, 453, 454, 455, 456, 459, 0, 0, 457,
	458, 460, 461, 0, 462, 463, 465, 468, 464, 466,
	467, 469, 482, 483, 470, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 485, 0, 484, 0,
	486, 487, 488, 489, 490, 497, 499, 500, 495, 496,
	498, 501, 502, 504, 492, 493, 494, 0, 503, 491,
	0, 0, 0, 505, 506, 507, 508, 0, 714, 509,
	715, 512, 513, 0, 0, 514, 0, 515, 0, 0,
	517, 518, 519, 0, 0, 520, 521, 716, 0, 522,
	0, 717, 523, 524, 516, 525, 526, 527, 528, 529,
	530, 531, 532, 533, 0, 534, 535, 718, 536, 537,
	538, 719, 539, 540, 541, 720, 542, 721, 543, 544,
	0, 545, 546, 547, 0, 548, 549, 550, 551, 552,
	553, 554, 555, 722, 556, 557, 559, 558, 560, 0,
	561, 0, 562, 563, 564, 0, 0, 0, 0, 0,
	565, 566, 568, 0, 569, 570, 571, 572, 567, 573,
	574, 575, 576, 577, 0, 578, 579, 580, 0, 581,
	582, 583, 584, 585, 723, 586, 0, 587, 588, 595,
	596, 597, 589, 590, 591, 598, 599, 600, 601, 602,
	0, 604, 605, 603, 606, 607, 608, 0, 609, 610,
	592, 593, 611, 612, 0, 613, 614, 615, 616, 617,
	618, 619, 724, 0, 620, 0, 621, 622, 623, 624,
	625, 627, 594, 628, 633, 634, 725, 629, 630, 631,
	632, 726, 636, 637, 638, 0, 639, 640, 0, 635,
	626, 0, 641, 642, 643, 644, 645, 646, 0, 647,
	648, 0, 649, 727, 728, 729, 730, 0, 659, 0,
	650, 651, 652, 653, 731, 654, 732, 0, 655, 656,
	657, 658, 0, 660, 661, 0, 0, 662, 663, 665,
	667, 668, 664, 666, 669, 0, 670, 0, 0, 671,
	672, 673, 733, 734, 735, 0, 675, 674, 676, 677,
	678, 736, 679, 680, 1769, 0, 290, 0, 681, 682,
	737, 683, 684, 685, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 296, 297, 299, 298, 300, 301, 302,
	303, 0, 304, 305, 0, 0, 0, 0, 0, 686,
	0, 0, 0, 306, 0, 307, 308, 0, 309, 310,
	311, 312, 313, 314, 315, 687, 688, 0, 316, 689,
	317, 690, 0, 691, 318, 319, 320, 321, 322, 323,
	0, 0, 0, 324, 692, 693, 694, 0, 325, 326,
	695, 0, 0, 0, 327, 328, 329, 330, 331, 332,
	333, 334, 0, 0, 336, 337, 338, 335, 339, 0,
	340, 0, 341, 342, 343, 344, 345, 346, 0, 347,
	348, 349, 0, 350, 351, 352, 0, 0, 0, 0,
	0, 0, 0, 353, 354, 355, 356, 357, 0, 358,
	360, 696, 697, 0, 363, 359, 361, 0, 364, 362,
	365, 0, 366, 367, 368, 0, 0, 369, 370, 371,
	0, 372, 373, 374, 0, 375, 376, 377, 0, 378,
	379, 698, 380, 381, 382, 384, 386, 383, 385, 387,
	388, 389, 390, 699, 700, 391, 0, 0, 0, 0,
	0, 0, 0, 392, 393, 394, 701, 0, 0, 0,
	395, 0, 396, 397, 398, 0, 399, 400, 0, 0,
	401, 402, 403, 702, 703, 404, 405, 406, 407, 408,
	409, 410, 411, 412, 0, 413, 704, 0, 705, 414,
	0, 415, 416, 417, 418, 419, 420, 421, 706, 707,
	708, 510, 0, 422, 423, 0, 424, 425, 426, 427,
	428, 0, 0, 0, 0, 429, 430, 431, 0, 0,
	511, 432, 709, 710, 0, 711, 0, 433, 434, 0,
	712, 0, 435, 436, 437, 0, 438, 0, 0, 0,
	439, 440, 441, 442, 443, 444, 0, 445, 447, 446,
	0, 448, 713, 0, 449, 450, 0, 0, 451, 452,
	453, 454, 455, 456, 459, 0, 0, 457, 458, 460,
	461, 0, 462, 463, 465, 468, 464, 466, 467, 469,
	482, 483, 470, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 485, 0, 484, 0, 486, 487,
	488, 489, 490, 497, 499, 500, 495, 496, 498, 501,
	502, 504, 492, 493, 494, 0, 503, 491, 0, 0,
	0, 505, 506, 507, 508, 0, 714, 509, 715, 512,
	513, 0, 0, 514, 0, 515, 0, 0, 517, 518,
	519, 0, 0, 520, 521, 716, 0, 522, 0, 717,
	523, 524, 516, 525, 526, 527, 528, 529, 530, 531,
	532, 533, 0, 534, 535, 718, 536, 537, 538, 719,
	539, 540, 541, 720, 542, 721, 543, 544, 0, 545,
	546, 547, 0, 548, 549, 550, 551, 552, 553, 554,
	555, 722, 556, 557, 559, 558, 560, 0, 561, 0,
	562, 563, 564, 0, 0, 0, 0, 0, 565, 566,
	568, 0, 569, 570, 571, 572, 567, 573, 574, 575,
	576, 577, 0, 578, 579, 580, 0, 581, 582, 583,
	584, 585, 723, 586, 0, 587, 588, 595, 596, 597,
	589, 590, 591, 598, 599, 600, 601, 602, 0, 604,
	605, 603, 606, 607, 608, 0, 609, 610, 592, 593,
	611, 612, 0, 613, 614, 615, 616, 617, 618, 619,
	724, 0, 620, 0, 621, 622, 623, 624, 625, 627,
	594, 628, 633, 634, 725, 629, 630, 631, 632, 726,
	636, 637, 638, 0, 639, 640, 0, 635, 626, 0,
	641, 642, 643, 644, 645, 646, 0, 647, 648, 0,
	649, 727, 728, 729, 730, 0, 659, 0, 650, 651,
	652, 653, 731, 654, 732, 0, 655, 656, 657, 658,
	0, 660, 661, 0, 0, 662, 663, 665, 667, 668,
	664, 666, 669, 0, 670, 0, 0, 671, 672, 673,
	733, 734, 735, 0, 675, 674, 676, 677, 678, 736,
	679, 680, 820, 0, 290, 0, 681, 682, 737, 683,
	684, 685, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 296, 297, 299, 298, 300, 301, 302, 303, 0,
	304, 305, 0, 0, 0, 0, 0, 686, 0, 0,
	0, 306, 0, 307, 308, 0, 309, 310, 311, 312,
	313, 314, 315, 687, 688, 0, 316, 689, 317, 690,
	0, 691, 318, 319, 320, 321, 322, 323, 0, 0,
	0, 324, 692, 693, 694, 0, 325, 816, 695, 0,
	0, 0, 327, 328, 329, 330, 331, 332, 333, 334,
	0, 0, 336, 337, 338, 335, 339, 0, 340, 0,
	341, 342, 343, 344, 345, 346, 0, 347, 348, 349,
	0, 350, 351, 352, 0, 0, 0, 0, 0, 0,
	0, 353, 354, 355, 356, 357, 0, 358, 360, 696,
	697, 0, 363, 359, 361, 0, 364, 362, 365, 0,
	366, 367, 368, 0, 0, 369, 370, 371, 0, 372,
	373, 374, 0, 375, 376, 377, 0, 378, 379, 698,
	380, 381, 382, 384, 386, 383, 385, 387, 388, 389,
	390, 699, 700, 391, 0, 0, 0, 0, 0, 0,
	0, 392, 393, 394, 701, 0, 0, 0, 395, 0,
	396, 397, 398, 0, 399, 400, 0, 0, 401, 402,
	403, 702, 703, 404, 405, 406, 407, 408, 409, 410,
	411, 412, 0, 413, 704, 0, 705, 414, 0, 415,
	416, 417, 418, 419, 420, 421, 706, 707, 708, 510,
	0, 422, 423, 0, 424, 425, 426, 427, 428, 0,
	0, 0, 0, 429, 430, 431, 0, 0, 511, 432,
	709, 710, 0, 711, 0, 433, 434, 0, 712, 0,
	435, 436, 437, 0, 438, 0, 0, 0, 439, 440,
	441, 442, 443, 444, 0, 445, 447, 446, 0, 448,
	713, 0, 449, 450, 0, 0, 451, 452, 453, 454,
	455, 821, 459, 0, 0, 457, 458, 460, 461, 0,
	462, 463, 465, 468, 464, 466, 467, 469, 482, 483,
	470, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 485, 0, 830, 0, 486, 487, 488, 489,
	490, 497, 499, 500, 495, 496, 498, 501, 502, 504,
	492, 493, 494, 0, 503, 491, 0, 0, 0, 505,
	506, 507, 508, 0, 714, 509, 715, 512, 513, 0,
	0, 514, 0, 515, 0, 0, 517, 518, 519, 0,
	0, 520, 521, 716, 0, 522, 0, 717, 523, 524,
	516, 525, 526, 527, 528, 529, 530, 531, 532, 533,
	0, 534, 535, 718, 536, 537, 538, 719, 539, 540,
	541, 720, 542, 721, 543, 544, 0, 545, 546, 547,
	0, 548, 549, 550, 551, 552, 553, 554, 555, 722,
	556, 557, 559, 558, 560, 0, 561, 0, 562, 563,
	564, 0, 0, 0, 0, 0, 565, 566, 568, 0,
	569, 570, 571, 572, 567, 573, 574, 575, 576, 577,
	0, 578, 579, 580, 0, 829, 582, 583, 584, 585,
	723, 586, 0, 587, 588, 595, 596, 597, 589, 590,
	591, 828, 599, 600, 601, 602, 0, 604, 605, 603,
	606, 1754, 608, 0, 609, 610, 592, 593, 611, 612,
	0, 613, 614, 615, 616, 617, 618, 619, 724, 0,
	620, 0, 621, 622, 623, 624, 625, 627, 594, 628,
	633, 634, 725, 629, 630, 631, 632, 726, 636, 637,
	638, 0, 639, 640, 0, 635, 626, 0, 641, 642,
	643, 644, 645, 646, 0, 647, 648, 0, 649, 826,
	728, 729, 730, 0, 659, 0, 650, 651, 652, 653,
	731, 654, 732, 0, 655, 656, 657, 658, 0, 660,
	661, 0, 0, 662, 663, 665, 667, 668, 664, 666,
	669, 0, 670, 0, 0, 671, 672, 673, 733, 734,
	735, 0, 675, 674, 676, 677, 678, 736, 679, 680,
	1727, 0, 290, 0, 681, 682, 737, 683, 684, 685,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 296,
	297, 299, 298, 300, 301, 302, 303, 0, 304, 305,
	0, 0, 0, 0, 0, 686, 0, 0, 0, 306,
	0, 307, 308, 0, 309, 310, 311, 312, 313, 314,
	315, 687, 688, 0, 316, 689, 317, 690, 0, 691,
	318, 319, 320, 321, 322, 323, 0, 0, 0, 324,
	692, 693, 694, 0, 325, 326, 695, 0, 0, 0,
	327, 328, 329, 330, 331, 332, 333, 334, 0, 0,
	336, 337, 338, 335, 339, 0, 340, 0, 341, 342,
	343, 344, 345, 346, 0, 347, 348, 349, 0, 350,
	351, 352, 0, 0, 0, 0, 0, 0, 0, 353,
	354, 355, 356, 357, 0, 358, 360, 696, 697, 0,
	363, 359, 361, 0, 364, 362, 365, 0, 366, 367,
	368, 0, 0, 369, 370, 371, 0, 372, 373, 374,
	0, 375, 376, 377, 0, 378, 379, 698, 380, 381,
	382, 384, 386, 383, 385, 387, 388, 389, 390, 699,
	700, 391, 0, 0, 0, 0, 0, 0, 0, 392,
	393, 394, 701, 0, 0, 0, 395, 0, 396, 397,
	398, 0, 399, 400, 0, 0, 401, 402, 403, 702,
	703, 404, 405, 406, 407, 408, 409, 410, 411, 412,
	0, 413, 704, 0, 705, 414, 0, 415, 416, 417,
	418, 419, 420, 421, 1726, 707, 708, 510, 0, 422,
	423, 0, 424, 425, 426, 427, 428, 0, 0, 0,
	0, 429, 430, 431, 0, 0, 511, 432, 709, 710,
	0, 711, 0, 433, 434, 0, 712, 0, 435, 436,
	437, 0, 438, 0, 0, 0, 439, 440, 441, 442,
	443, 444, 0, 445, 447, 446, 0, 448, 713, 0,
	449, 450, 0, 0, 451, 452, 453, 454, 455, 456,
	459, 0, 0, 457, 458, 460, 461, 0, 462, 463,
	465, 468, 464, 466, 467, 469, 482, 483, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	485, 0, 484, 0, 486, 487, 488, 489, 490, 497,
	499, 500, 495, 496, 498, 501, 502, 504, 492, 493,
	494, 0, 503, 491, 0, 0, 0, 505, 506, 507,
	508, 0, 714, 509, 715, 512, 513, 0, 0, 514,
	0, 515, 0, 0, 517, 518, 519, 0, 0, 520,
	521, 716, 0, 522, 0, 717, 523, 524, 516, 525,
	526, 527, 528, 529, 530, 531, 532, 533, 0, 534,
	535, 718, 536, 537, 538, 719, 539, 540, 541, 720,
	542, 721, 543, 544, 0, 545, 546, 547, 0, 548,
	549, 550, 551, 552, 553, 554, 555, 722, 556, 557,
	559, 558, 560, 0, 561, 0, 562, 563, 564, 0,
	0, 0, 0, 0, 565, 566, 568, 0, 569, 570,
	571, 572, 567, 573, 574, 575, 576, 577, 0, 578,
	579, 580, 0, 581, 582, 583, 584, 585, 723, 586,
	0, 587, 588, 595, 596, 597, 589, 590, 591, 598,
	599, 600, 601, 602, 0, 604, 605, 603, 606, 607,
	608, 0, 609, 610, 592, 593, 611, 612, 0, 613,
	614, 615, 616, 617, 618, 619, 724, 0, 620, 0,
	621, 622, 623, 624, 625, 627, 594, 628, 633, 634,
	725, 629, 630, 631, 632, 726, 636, 637, 638, 0,
	639, 640, 0, 635, 626, 0, 641, 642, 643, 644,
	645, 646, 0, 647, 648, 0, 649, 727, 728, 729,
	730, 0, 659, 0, 650, 651, 652, 653, 731, 654,
	732, 0, 655, 656, 657, 658, 0, 660, 661, 0,
	0, 662, 663, 665, 667, 668, 664, 666, 669, 0,
	670, 0, 0, 671, 672, 673, 733, 734, 735, 0,
	675, 674, 676, 677, 678, 736, 679, 680, 1711, 0,
	290, 0, 681, 682, 737, 683, 684, 685, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 296, 297, 299,
	298, 300, 301, 302, 303, 0, 304, 305, 0, 0,
	0, 0, 0, 686, 0, 0, 0, 306, 0, 307,
	308, 0, 309, 310, 311, 312, 313, 314, 315, 687,
	688, 0, 316, 689, 317, 690, 0, 691, 318, 319,
	320, 321, 322, 323, 0, 0, 0, 324, 692, 693,
	694, 0, 325, 326, 695, 0, 0, 0, 327, 328,
	329, 330, 331, 332, 333, 334, 0, 0, 336, 337,
	338, 335, 339, 0, 340, 0, 341, 342, 343, 344,
	345, 346, 0, 347, 348, 349, 0, 350, 351, 352,
	0, 0, 0, 0, 0, 0, 0, 353, 354, 355,
	356, 357, 0, 358, 360, 696, 697, 0, 363, 359,
	361, 0, 364, 362, 365, 0, 366, 367, 368, 0,
	0, 369, 370, 371, 0, 372, 373, 374, 0, 375,
	376, 377, 0, 378, 379, 698, 380, 381, 382, 384,
	386, 383, 385, 387, 388, 389, 390, 699, 700, 391,
	0, 0, 0, 0, 0, 0, 0, 392, 393, 394,
	701, 0, 0, 0, 395, 0, 396, 397, 398, 0,
	399, 400, 0, 0, 401, 402, 403, 702, 703, 404,
	405, 406, 407, 408, 409, 410, 411, 412, 0, 413,
	704, 0, 705, 414, 0, 415, 416, 417, 418, 419,
	420, 421, 1709, 707, 708, 510, 0, 422, 423, 0,
	424, 425, 426, 427, 428, 0, 0, 0, 0, 429,
	430, 431, 0, 0, 511, 432, 709, 710, 0, 711,
	0, 433, 434, 0, 712, 0, 435, 436, 437, 0,
	438, 0, 0, 0, 439, 440, 441, 442, 443, 444,
	0, 445, 447, 446, 0, 448, 713, 0, 449, 450,
	0, 0, 451, 452, 453, 454, 455, 456, 459, 0,
	0, 457, 458, 460, 461, 0, 462, 463, 465, 468,
	464, 466, 467, 469, 482, 483, 470, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 485, 0,
	484, 0, 486, 487, 488, 489, 490, 497, 499, 500,
	495, 496, 498, 501, 502, 504, 492, 493, 494, 0,
	503, 491, 0, 0, 0, 505, 506, 507, 508, 0,
	714, 509, 715, 512, 513, 0, 0, 514, 0, 515,
	0, 0, 517, 518, 519, 0, 0, 520, 521, 716,
	0, 522, 0, 717, 523, 524, 516, 525, 526, 527,
	528, 529, 530, 531, 532, 533, 0, 534, 535, 718,
	536, 537, 538, 719, 539, 540, 541, 720, 542, 721,
	543, 544, 0, 545, 546, 547, 0, 548, 549, 550,
	551, 552, 553, 554, 555, 722, 556, 557, 559, 558,
	560, 0, 561, 0, 562, 563, 564, 0, 0, 0,
	0, 0, 565, 566, 568, 0, 569, 570, 571, 572,
	567, 573, 574, 575, 576, 577, 0, 578, 579, 580,
	0, 581, 582, 583, 584, 585, 723, 586, 0, 587,
	588, 595, 596, 597, 589, 590, 591, 598, 599, 600,
	601, 602, 0, 604, 605, 603, 606, 607, 608, 0,
	609, 610, 592, 593, 611, 612, 0, 613, 614, 615,
	616, 617, 618, 619, 724, 0, 620, 0, 621, 622,
	623, 624, 625, 627, 594, 628, 633, 634, 725, 629,
	630, 631, 632, 726, 636, 637, 638, 0, 639, 640,
	0, 635, 626, 0, 641, 642, 643, 644, 645, 646,
	0, 647, 648, 0, 649, 727, 728, 729, 730, 0,
	659, 0, 650, 651, 652, 653, 731, 654, 732, 0,
	655, 656, 657, 658, 0, 660, 661, 0, 0, 662,
	663, 665, 667, 668, 664, 666, 669, 0, 670, 0,
	0, 671, 672, 673, 733, 734, 735, 0, 675, 674,
	676, 677, 678, 736, 679, 680, 1704, 0, 290, 0,
	681, 682, 737, 683, 684, 685, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 296, 297, 299, 298, 300,
	301, 302, 303, 0, 304, 305, 0, 0, 0, 0,
	0, 686, 0, 0, 0, 306, 0, 307, 308, 0,
	309, 310, 311, 312, 313, 314, 315, 687, 688, 0,
	316, 689, 317, 690, 0, 691, 318, 319, 320, 321,
	322, 323, 0, 0, 0, 324, 692, 693, 694, 0,
	325, 326, 695, 0, 0, 0, 327, 328, 329, 330,
	331, 332, 333, 334, 0, 0, 336, 337, 338, 335,
	339, 0, 340, 0, 341, 342, 343, 344, 345, 346,
	0, 347, 348, 349, 0, 350, 351, 352, 0, 0,
	0, 0, 0, 0, 0, 353, 354, 355, 356, 357,
	0, 358, 360, 696, 697, 0, 363, 359, 361, 0,
	364, 362, 365, 0, 366, 367, 368, 0, 0, 369,
	370, 371, 0, 372, 373, 374, 0, 375, 376, 377,
	0, 378, 379, 698, 380, 381, 382, 384, 386, 383,
	385, 387, 388, 389, 390, 699, 700, 391, 0, 0,
	0, 0, 0, 0, 0, 392, 393, 394, 701, 0,
	0, 0, 395, 0, 396, 397, 398, 0, 399, 400,
	0, 0, 401, 402, 403, 702, 703, 404, 405, 406,
	407, 408, 409, 410, 411, 412, 0, 413, 704, 0,
	705, 414, 0, 415, 416, 417, 418, 419, 420, 421,
	706, 707, 708, 510, 0, 422, 423, 0, 424, 425,
	426, 427, 428, 0, 0, 0, 0, 429, 430, 431,
	0, 0, 511, 432, 709, 710, 0, 711, 0, 433,
	434, 0, 712, 0, 435, 436, 437, 0, 438, 0,
	0, 0, 439, 440, 441, 442, 443, 444, 0, 445,
	447, 446, 0, 448, 713, 0, 449, 450, 0, 0,
	451, 452, 453, 454, 455, 456, 459, 0, 0, 457,
	458, 460, 461, 0, 462, 463, 465, 468, 464, 466,
	467, 469, 482, 483, 470, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 485, 0, 484, 0,
	486, 487, 488, 489, 490, 497, 499, 500, 495, 496,
	498, 501, 502, 504, 492, 493, 494, 0, 503, 491,
	0, 0, 0, 505, 506, 507, 508, 0, 714, 509,
	715, 512, 513, 0, 0, 514, 0, 515, 0, 0,
	517, 518, 519, 0, 0, 520, 521, 716, 0, 522,
	0, 717, 523, 524, 516, 525, 526, 527, 528, 529,
	530, 531, 532, 533, 0, 534, 535, 718, 536, 537,
	538, 719, 539, 540, 541, 720, 542, 721, 543, 544,
	0, 545, 546, 547, 0, 548, 549, 550, 551, 552,
	553, 554, 555, 722, 556, 557, 559, 558, 560, 0,
	561, 0, 562, 563, 564, 0, 0, 0, 0, 0,
	565, 566, 568, 0, 569, 570, 571, 572, 567, 573,
	574, 575, 576, 577, 0, 578, 579, 580, 0, 581,
	582, 583, 584, 585, 723, 586, 0, 587, 588, 595,
	596, 597, 589, 590, 591, 598, 599, 600, 601, 602,
	0, 604, 605, 603, 606, 607, 608, 0, 609, 610,
	592, 593, 611, 612, 0, 613, 614, 615, 616, 617,
	618, 619, 724, 0, 620, 0, 621, 622, 623, 624,
	625, 627, 594, 628, 633, 634, 725, 629, 630, 631,
	632, 726, 636, 637, 638, 0, 639, 640, 0, 635,
	626, 0, 641, 642, 643, 644, 645, 646, 0, 647,
	648, 0, 649, 727, 728, 729, 730, 0, 659, 0,
	650, 651, 652, 653, 731, 654, 732, 0, 655, 656,
	657, 658, 0, 660, 661, 0, 0, 662, 663, 665,
	667, 668, 664, 666, 669, 0, 670, 0, 0, 671,
	672, 673, 733, 734, 735, 0, 675, 674, 676, 677,
	678, 736, 679, 680, 1681, 0, 290, 0, 681, 682,
	737, 683, 684, 685, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 296, 297, 299, 298, 300, 301, 302,
	303, 0, 304, 305, 0, 0, 0, 0, 0, 686,
	0, 0, 0, 306, 0, 307, 308, 0, 309, 310,
	311, 312, 313, 314, 315, 687, 688, 0, 316, 689,
	317, 690, 0, 691, 318, 319, 320, 321, 322, 323,
	0, 0, 0, 324, 692, 693, 694, 0, 325, 326,
	695, 0, 0, 0, 327, 328, 329, 330, 331, 332,
	333, 334, 0, 0, 336, 337, 338, 335, 339, 0,
	340, 0, 341, 342, 343, 344, 345, 346, 0, 347,
	348, 349, 0, 350, 351, 352, 0, 0, 0, 0,
	0, 0, 0, 353, 354, 355, 356, 357, 0, 358,
	360, 696, 697, 0, 363, 359, 361, 0, 364, 362,
	365, 0, 366, 367, 368, 0, 0, 369, 370, 371,
	0, 372, 373, 374, 0, 375, 376, 377, 0, 378,
	379, 698, 380, 381, 382, 384, 386, 383, 385, 387,
	388, 389, 390, 699, 700, 391, 0, 0, 0, 0,
	0, 0, 0, 392, 393, 394, 701, 0, 0, 0,
	395, 0, 396, 397, 398, 0, 399, 400, 0, 0,
	401, 402, 403, 702, 703, 404, 405, 406, 407, 408,
	409, 410, 411, 412, 0, 413, 704, 0, 705, 414,
	0, 415, 416, 417, 418, 419, 420, 421, 1679, 707,
	708, 510, 0, 422, 423, 0, 424, 425, 426, 427,
	428, 0, 0, 0, 0, 429, 430, 431, 0, 0,
	511, 432, 709, 710, 0, 711, 0, 433, 434, 0,
	712, 0, 435, 436, 437, 0, 438, 0, 0, 0,
	439, 440, 441, 442, 443, 444, 0, 445, 447, 446,
	0, 448, 713, 0, 449, 450, 0, 0, 451, 452,
	453, 454, 455, 456, 459, 0, 0, 457, 458, 460,
	461, 0, 462, 463, 465, 468, 464, 466, 467, 469,
	482, 483, 470, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 485, 0, 484, 0, 486, 487,
	488, 489, 490, 497, 499, 500, 495, 496, 498, 501,
	502, 504, 492, 493, 494, 0, 503, 491, 0, 0,
	0, 505, 506, 507, 508, 0, 714, 509, 715, 512,
	513, 0, 0, 514, 0, 515, 0, 0, 517, 518,
	519, 0, 0, 520, 521, 716, 0, 522, 0, 717,
	523, 524, 516, 525, 526, 527, 528, 529, 530, 531,
	532, 533, 0, 534, 535, 718, 536, 537, 538, 719,
	539, 540, 541, 720, 542, 721, 543, 544, 0, 545,
	546, 547, 0, 548, 549, 550, 551, 552, 553, 554,
	555, 722, 556, 557, 559, 558, 560, 0, 561, 0,
	562, 563, 564, 0, 0, 0, 0, 0, 565, 566,
	568, 0, 569, 570, 571, 572, 567, 573, 574, 575,
	576, 577, 0, 578, 579, 580, 0, 581, 582, 583,
	584, 585, 723, 586, 0, 587, 588, 595, 596, 597,
	589, 590, 591, 598, 599, 600, 601, 602, 0, 604,
	605, 603, 606, 607, 608, 0, 609, 610, 592, 593,
	611, 612, 0, 613, 614, 615, 616, 617, 618, 619,
	724, 0, 620, 0, 621, 622, 623, 624, 625, 627,
	594, 628, 633, 634, 725, 629, 630, 631, 632, 726,
	636, 637, 638, 0, 639, 640, 0, 635, 626, 0,
	641, 642, 643, 644, 645, 646, 0, 647, 648, 0,
	649, 727, 728, 729, 730, 0, 659, 0, 650, 651,
	652, 653, 731, 654, 732, 0, 655, 656, 657, 658,
	0, 660, 661, 0, 0, 662, 663, 665, 667, 668,
	664, 666, 669, 0, 670, 0, 0, 671, 672, 673,
	733, 734, 735, 0, 675, 674, 676, 677, 678, 736,
	679, 680, 1674, 0, 290, 0, 681, 682, 737, 683,
	684, 685, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 296, 297, 299, 298, 300, 301, 302, 303, 0,
	304, 305, 0, 0, 0, 0, 0, 686, 0, 0,
	0, 306, 0, 307, 308, 0, 309, 310, 311, 312,
	313, 314, 315, 687, 688, 0, 316, 689, 317, 690,
	0, 691, 318, 319, 320, 321, 322, 323, 0, 0,
	0, 324, 692, 693, 694, 0, 325, 326, 695, 0,
	0, 0, 327, 328, 329, 330, 331, 332, 333, 334,
	0, 0, 336, 337, 338, 335, 339, 0, 340, 0,
	341, 342, 343, 344, 345, 346, 0, 347, 348, 349,
	0, 350, 351, 352, 0, 0, 0, 0, 0, 0,
	0, 353, 354, 355, 356, 357, 0, 358, 360, 696,
	697, 0, 363, 359, 361, 0, 364, 362, 365, 0,
	366, 367, 368, 0, 0, 369, 370, 371, 0, 372,
	373, 374, 0, 375, 376, 377, 0, 378, 379, 698,
	380, 381, 382, 384, 386, 383, 385, 387, 388, 389,
	390, 699, 700, 391, 0, 0, 0, 0, 0, 0,
	0, 392, 393, 394, 701, 0, 0, 0, 395, 0,
	396, 397, 398, 0, 399, 400, 0, 0, 401, 402,
	403, 702, 703, 404, 405, 406, 407, 408, 409, 410,
	411, 412, 0, 413, 704, 0, 705, 414, 0, 415,
	416, 417, 418, 419, 420, 421, 706, 707, 708, 510,
	0, 422, 423, 0, 424, 425, 426, 427, 428, 0,
	0, 0, 0, 429, 430, 431, 0, 0, 511, 432,
	709, 710, 0, 711, 0, 433, 434, 0, 712, 0,
	435, 436, 437, 0, 438, 0, 0, 0, 439, 440,
	441, 442, 443, 444, 0, 445, 447, 446, 0, 448,
	713, 0, 449, 450, 0, 0, 451, 452, 453, 454,
	455, 456, 459, 0, 0, 457, 458, 460, 461, 0,
	462, 463, 465, 468, 464, 466, 467, 469, 482, 483,
	470, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 485, 0, 484, 0, 486, 487, 488, 489,
	490, 497, 499, 500, 495, 496, 498, 501, 502, 504,
	492, 493, 494, 0, 503, 491, 0, 0, 0, 505,
	506, 507, 508, 0, 714, 509, 715, 512, 513, 0,
	0, 514, 0, 515, 0, 0, 517, 518, 519, 0,
	0, 520, 521, 716, 0, 522, 0, 717, 523, 524,
	516, 525, 526, 527, 528, 529, 530, 531, 532, 533,
	0, 534, 535, 718, 536, 537, 538, 719, 539, 540,
	541, 720, 542, 721, 543, 544, 0, 545, 546, 547,
	0, 548, 549, 550, 551, 552, 553, 554, 555, 722,
	556, 557, 559, 558, 560, 0, 561, 0, 562, 563,
	564, 0, 0, 0, 0, 0, 565, 566, 568, 0,
	569, 570, 571, 572, 567, 573, 574, 575, 576, 577,
	0, 578, 579, 580, 0, 581, 582, 583, 584, 585,
	723, 586, 0, 587, 588, 595, 596, 597, 589, 590,
	591, 598, 599, 600, 601, 602, 0, 604, 605, 603,
	606, 607, 608, 0, 609, 610, 592, 593, 611, 612,
	0, 613, 614, 615, 616, 617, 618, 619, 724, 0,
	620, 0, 621, 622, 623, 624, 625, 627, 594, 628,
	633, 634, 725, 629, 630, 631, 632, 726, 636, 637,
	638, 0, 639, 640, 0, 635, 626, 0, 641, 642,
	643, 644, 645, 646, 0, 647, 648, 0, 649, 727,
	728, 729, 730, 0, 659, 0, 650, 651, 652, 653,
	731, 654, 732, 0, 655, 656, 657, 658, 0, 660,
	661, 0, 0, 662, 663, 665, 667, 668, 664, 666,
	669, 0, 670, 0, 0, 671, 672, 673, 733, 734,
	735, 0, 675, 674, 676, 677, 678, 736, 679, 680,
	1635, 0, 290, 0, 681, 682, 737, 683, 684, 685,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 296,
	297, 299, 298, 300, 301, 302, 303, 0, 304, 305,
	0, 0, 0, 0, 0, 686, 0, 0, 0, 306,
	0, 307, 308, 0, 309, 310, 311, 312, 313, 314,
	315, 687, 688, 0, 316, 689, 317, 690, 0, 691,
	318, 319, 320, 321, 322, 323, 0, 0, 0, 324,
	692, 693, 694, 0, 325, 326, 695, 0, 0, 0,
	327, 328, 329, 330, 331, 332, 333, 334, 0, 0,
	336, 337, 338, 335, 339, 0, 340, 0, 341, 342,
	343, 344, 345, 346, 0, 347, 348, 349, 0, 350,
	351, 352, 0, 0, 0, 0, 0, 0, 0, 353,
	354, 355, 356, 357, 0, 358, 360, 696, 697, 0,
	363, 359, 361, 0, 364, 362, 365, 0, 366, 367,
	368, 0, 0, 369, 370, 371, 0, 372, 373, 374,
	0, 375, 376, 377, 0, 378, 379, 698, 380, 381,
	382, 384, 386, 383, 385, 387, 388, 389, 390, 699,
	700, 391, 0, 0, 0, 0, 0, 0, 0, 392,
	393, 394, 701, 0, 0, 0, 395, 0, 396, 397,
	398, 0, 399, 400, 0, 0, 401, 402, 403, 702,
	703, 404, 405, 406, 407, 408, 409, 410, 411, 412,
	0, 413, 704, 0, 705, 414, 0, 415, 416, 417,
	418, 419, 420, 421, 706, 707, 708, 510, 0, 422,
	423, 0, 424, 425, 426, 427, 428, 0, 0, 0,
	0, 429, 430, 431, 0, 0, 511, 432, 709, 710,
	0, 711, 0, 433, 434, 0, 712, 0, 435, 436,
	437, 0, 438, 0, 0, 0, 439, 440, 441, 442,
	443, 444, 0, 445, 447, 446, 0, 448, 713, 0,
	449, 450, 0, 0, 451, 452, 453, 454, 455, 456,
	459, 0, 0, 457, 458, 460, 461, 0, 462, 463,
	465, 468, 464, 466, 467, 469, 482, 483, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	485, 0, 484, 0, 486, 487, 488, 489, 490, 497,
	499, 500, 495, 496, 498, 501, 502, 504, 492, 493,
	494, 0, 503, 491, 0, 0, 0, 505, 506, 507,
	508, 0, 714, 509, 715, 512, 513, 0, 0, 514,
	0, 515, 0, 0, 517, 518, 519, 0, 0, 520,
	521, 716, 0, 522, 0, 717, 523, 524, 516, 525,
	526, 527, 528, 529, 530, 531, 532, 533, 0, 534,
	535, 718, 536, 537, 538, 719, 539, 540, 541, 720,
	542, 721, 543, 544, 0, 545, 546, 547, 0, 548,
	549, 550, 551, 552, 553, 554, 555, 722, 556, 557,
	559, 558, 560, 0, 561, 0, 562, 563, 564, 0,
	0, 0, 0, 0, 565, 566, 568, 0, 569, 570,
	571, 572, 567, 573, 574, 575, 576, 577, 0, 578,
	579, 580, 0, 581, 582, 583, 584, 585, 723, 586,
	0, 587, 588, 595, 596, 597, 589, 590, 591, 598,
	599, 600, 601, 602, 0, 604, 605, 603, 606, 607,
	608, 0, 609, 610, 592, 593, 611, 612, 0, 613,
	614, 615, 616, 617, 618, 619, 724, 0, 620, 0,
	621, 622, 623, 624, 625, 627, 594, 628, 633, 634,
	725, 629, 630, 631, 632, 726, 636, 637, 638, 0,
	639, 640, 0, 635, 626, 0, 641, 642, 643, 644,
	645, 646, 0, 647, 648, 0, 649, 727, 728, 729,
	730, 0, 659, 0, 650, 651, 652, 653, 731, 654,
	732, 0, 655, 656, 657, 658, 0, 660, 661, 0,
	0, 662, 663, 665, 667, 668, 664, 666, 669, 0,
	670, 0, 0, 671, 672, 673, 733, 734, 735, 0,
	675, 674, 676, 677, 678, 736, 679, 680, 1599, 0,
	290, 0, 681, 682, 737, 683, 684, 685, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 296, 297, 299,
	298, 300, 301, 302, 303, 0, 304, 305, 0, 0,
	0, 0, 0, 686, 0, 0, 0, 306, 0, 307,
	308, 0, 309, 310, 311, 312, 313, 314, 315, 687,
	688, 0, 316, 689, 317, 690, 0, 691, 318, 319,
	320, 321, 322, 323, 0, 0, 0, 324, 692, 693,
	694, 0, 325, 326, 695, 0, 0, 0, 327, 328,
	329, 330, 331, 332, 333, 334, 0, 0, 336, 337,
	338, 335, 339, 0, 340, 0, 341, 342, 343, 344,
	345, 346, 0, 347, 348, 349, 0, 350, 351, 352,
	0, 0, 0, 0, 0, 0, 0, 353, 354, 355,
	356, 357, 0, 358, 360, 696, 697, 0, 363, 359,
	361, 0, 364, 362, 365, 0, 366, 367, 368, 0,
	0, 369, 370, 371, 0, 372, 373, 374, 0, 375,
	376, 377, 0, 378, 379, 698, 380, 381, 382, 384,
	386, 383, 385, 387, 388, 389, 390, 699, 700, 391,
	0, 0, 0, 0, 0, 0, 0, 392, 393, 394,
	701, 0, 0, 0, 395, 0, 396, 397, 398, 0,
	399, 400, 0, 0, 401, 402, 403, 702, 703, 404,
	405, 406, 407, 408, 409, 410, 411, 412, 0, 413,
	704, 0, 705, 414, 0, 415, 416, 417, 418, 419,
	420, 421, 706, 707, 708, 510, 0, 422, 423, 0,
	424, 425, 426, 427, 428, 0, 0, 0, 0, 429,
	430, 431, 0, 0, 511, 432, 709, 710, 0, 711,
	0, 433, 434, 0, 712, 0, 435, 436, 437, 0,
	438, 0, 0, 0, 439, 440, 441, 442, 443, 444,
	0, 445, 447, 446, 0, 448, 713, 0, 449, 450,
	0, 0, 451, 452, 453, 454, 455, 456, 459, 0,
	0, 457, 458, 460, 461, 0, 462, 463, 465, 468,
	464, 466, 467, 469, 482, 483, 470, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 485, 0,
	484, 0, 486, 487, 488, 489, 490, 497, 499, 500,
	495, 496, 498, 501, 502, 504, 492, 493, 494, 0,
	503, 491, 0, 0, 0, 505, 506, 507, 508, 0,
	714, 509, 715, 512, 513, 0, 0, 514, 0, 515,
	0, 0, 517, 518, 519, 0, 0, 520, 521, 716,
	0, 522, 0, 717, 523, 524, 516, 525, 526, 527,
	528, 529, 530, 531, 532, 533, 0, 534, 535, 718,
	536, 537, 538, 719, 539, 540, 541, 720, 542, 721,
	543, 544, 0, 545, 546, 547, 0, 548, 549, 550,
	551, 552, 553, 554, 555, 722, 556, 557, 559, 558,
	560, 0, 561, 0, 562, 563, 564, 0, 0, 0,
	0, 0, 565, 566, 568, 0, 569, 570, 571, 572,
	567, 573, 574, 575, 576, 577, 0, 578, 579, 580,
	0, 581, 582, 583, 584, 585, 723, 586, 0, 587,
	588, 595, 596, 597, 589, 590, 591, 598, 599, 600,
	601, 602, 0, 604, 605, 603, 606, 607, 608, 0,
	609, 610, 592, 593, 611, 612, 0, 613, 614, 615,
	616, 617, 618, 619, 724, 0, 620, 0, 621, 622,
	623, 624, 625, 627, 594, 628, 633, 634, 725, 629,
	630, 631, 632, 726, 636, 637, 638, 0, 639, 640,
	0, 635, 626, 0, 641, 642, 643, 644, 645, 646,
	0, 647, 648, 0, 649, 727, 728, 729, 730, 0,
	659, 0, 650, 651, 652, 653, 731, 654, 732, 0,
	655, 656, 657, 658, 0, 660, 661, 0, 0, 662,
	663, 665, 667, 668, 664, 666, 669, 0, 670, 0,
	0, 671, 672, 673, 733, 734, 735, 0, 675, 674,
	676, 677, 678, 736, 679, 680, 1450, 0, 290, 0,
	681, 682, 737, 683, 684, 685, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 296, 297, 299, 298, 300,
	301, 302, 303, 0, 304, 305, 0, 0, 0, 0,
	0, 686, 0, 0, 0, 306, 0, 307, 308, 0,
	309, 310, 311, 312, 313, 314, 315, 687, 688, 0,
	316, 689, 317, 690, 0, 691, 318, 319, 320, 321,
	322, 323, 0, 0, 0, 324, 692, 693, 694, 0,
	325, 326, 695, 0, 0, 0, 327, 328, 329, 330,
	331, 332, 333, 334, 0, 0, 336, 337, 338, 335,
	339, 0, 340, 0, 341, 342, 343, 344, 345, 346,
	0, 347, 348, 349, 0, 350, 351, 352, 0, 0,
	0, 0, 0, 0, 0, 353, 354, 355, 356, 357,
	0, 358, 360, 696, 697, 0, 363, 359, 361, 0,
	364, 362, 365, 0, 366, 367, 368, 0, 0, 369,
	370, 371, 0, 372, 373, 374, 0, 375, 376, 377,
	0, 378, 379, 698, 380, 381, 382, 384, 386, 383,
	385, 387, 388, 389, 390, 699, 700, 391, 0, 0,
	0, 0, 0, 0, 0, 392, 393, 394, 701, 0,
	0, 0, 395, 0, 396, 397, 398, 0, 399, 400,
	0, 0, 401, 402, 403, 702, 703, 404, 405, 406,
	407, 408, 409, 410, 411, 412, 0, 413, 704, 0,
	705, 414, 0, 415, 416, 417, 418, 419, 420, 421,
	706, 707, 708, 510, 0, 422, 423, 0, 424, 425,
	426, 427, 428, 0, 0, 0, 0, 429, 430, 431,
	0, 0, 511, 432, 709, 710, 0, 711, 0, 433,
	434, 0, 712, 0, 435, 436, 437, 0, 438, 0,
	0, 0, 439, 440, 441, 442, 443, 444, 0, 445,
	447, 446, 0, 448, 713, 0, 449, 450, 0, 0,
	451, 452, 453, 454, 455, 456, 459, 0, 0, 457,
	458, 460, 461, 0, 462, 463, 465, 468, 464, 466,
	467, 469, 482, 483, 470, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 485, 0, 484, 0,
	486, 487, 488, 489, 490, 497, 499, 500, 495, 496,
	498, 501, 502, 504, 492, 493, 494, 0, 503, 491,
	0, 0, 0, 505, 506, 507, 508, 0, 714, 509,
	715, 512, 513, 0, 0, 514, 0, 515, 0, 0,
	517, 518, 519, 0, 0, 520, 521, 716, 0, 522,
	0, 717, 523, 524, 516, 525, 526, 527, 528, 529,
	530, 531, 532, 533, 0, 534, 535, 718, 536, 537,
	538, 719, 539, 540, 541, 720, 542, 721, 543, 544,
	0, 545, 546, 547, 0, 548, 549, 550, 551, 552,
	553, 554, 555, 722, 556, 557, 559, 558, 560, 0,
	561, 0, 562, 563, 564, 0, 0, 0, 0, 0,
	565, 566, 568, 0, 569, 570, 571, 572, 567, 573,
	574, 575, 576, 577, 0, 578, 579, 580, 0, 829,
	582, 583, 584, 585, 723, 586, 0, 587, 588, 595,
	596, 597, 589, 590, 591, 828, 599, 600, 601, 602,
	0, 604, 605, 603, 606, 607, 608, 0, 609, 610,
	592, 593, 611, 612, 0, 613, 614, 615, 616, 617,
	618, 619, 724, 0, 620, 0, 621, 622, 623, 624,
	625, 627, 594, 628, 633, 634, 725, 629, 630, 631,
	632, 726, 636, 637, 638, 0, 639, 640, 0, 635,
	626, 0, 641, 642, 643, 644, 645, 646, 0, 647,
	648, 0, 649, 826, 728, 729, 730, 0, 659, 0,
	650, 651, 652, 653, 731, 654, 732, 0, 655, 656,
	657, 658, 0, 660, 661, 0, 0, 662, 663, 665,
	667, 668, 664, 666, 669, 0, 670, 0, 0, 671,
	672, 673, 733, 734, 735, 0, 675, 674, 676, 677,
	678, 736, 679, 680, 1421, 0, 290, 0, 681, 682,
	737, 683, 684, 685, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 296, 297, 299, 298, 300, 301, 302,
	303, 0, 304, 305, 0, 0, 0, 0, 0, 686,
	0, 0, 0, 306, 0, 307, 308, 0, 309, 310,
	311, 312, 313, 314, 315, 687, 688, 0, 316, 689,
	317, 690, 0, 691, 318, 319, 320, 321, 322, 323,
	0, 0, 0, 324, 692, 693, 694, 0, 325, 326,
	695, 0, 0, 0, 327, 328, 329, 330, 331, 332,
	333, 334, 0, 0, 336, 337, 338, 335, 339, 0,
	340, 0, 341, 342, 343, 344, 345, 346, 0, 347,
	348, 349, 0, 350, 351, 352, 0, 0, 0, 0,
	0, 0, 0, 353, 354, 355, 356, 357, 0, 358,
	360, 696, 697, 0, 363, 359, 361, 0, 364, 362,
	365, 0, 366, 367, 368, 0, 0, 369, 370, 371,
	0, 372, 373, 374, 0, 375, 376, 377, 0, 378,
	379, 698, 380, 381, 382, 384, 386, 383, 385, 387,
	388, 389, 390, 699, 700, 391, 0, 0, 0, 0,
	0, 0, 0, 392, 393, 394, 701, 0, 0, 0,
	395, 0, 396, 397, 398, 0, 399, 400, 0, 0,
	401, 402, 403, 702, 703, 404, 405, 406, 407, 408,
	409, 410, 411, 412, 0, 413, 704, 0, 705, 414,
	0, 415, 416, 417, 418, 419, 420, 421, 1420, 707,
	708, 510, 0, 422, 423, 0, 424, 425, 426, 427,
	428, 0, 0, 0, 0, 429, 430, 431, 0, 0,
	511, 432, 709, 710, 0, 711, 0, 433, 434, 0,
	712, 0, 435, 436, 437, 0, 438, 0, 0, 0,
	439, 440, 441, 442, 443, 444, 0, 445, 447, 446,
	0, 448, 713, 0, 449, 450, 0, 0, 451, 452,
	453, 454, 455, 456, 459, 0, 0, 457, 458, 460,
	461, 0, 462, 463, 465, 468, 464, 466, 467, 469,
	482, 483, 470, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 485, 0, 484, 0, 486, 487,
	488, 489, 490, 497, 499, 500, 495, 496, 498, 501,
	502, 504, 492, 493, 494, 0, 503, 491, 0, 0,
	0, 505, 506, 507, 508, 0, 714, 509, 715, 512,
	513, 0, 0, 514, 0, 515, 0, 0, 517, 518,
	519, 0, 0, 520, 521, 716, 0, 522, 0, 717,
	523, 524, 516, 525, 526, 527, 528, 529, 530, 531,
	532, 533, 0, 534, 535, 718, 536, 537, 538, 719,
	539, 540, 541, 720, 542, 721, 543, 544, 0, 545,
	546, 547, 0, 548, 549, 550, 551, 552, 553, 554,
	555, 722, 556, 557, 559, 558, 560, 0, 561, 0,
	562, 563, 564, 0, 0, 0, 0, 0, 565, 566,
	568, 0, 569, 570, 571, 572, 567, 573, 574, 575,
	576, 577, 0, 578, 579, 580, 0, 581, 582, 583,
	584, 585, 723, 586, 0, 587, 588, 595, 596, 597,
	589, 590, 591, 598, 599, 600, 601, 602, 0, 604,
	605, 603, 606, 607, 608, 0, 609, 610, 592, 593,
	611, 612, 0, 613, 614, 615, 616, 617, 618, 619,
	724, 0, 620, 0, 621, 622, 623, 624, 625, 627,
	594, 628, 633, 634, 725, 629, 630, 631, 632, 726,
	636, 637, 638, 0, 639, 640, 0, 635, 626, 0,
	641, 642, 643, 644, 645, 646, 0, 647, 648, 0,
	649, 727, 728, 729, 730, 0, 659, 0, 650, 651,
	652, 653, 731, 654, 732, 0, 655, 656, 657, 658,
	0, 660, 661, 0, 0, 662, 663, 665, 667, 668,
	664, 666, 669, 0, 670, 0, 0, 671, 672, 673,
	733, 734, 735, 0, 675, 674, 676, 677, 678, 736,
	679, 680, 1412, 0, 290, 0, 681, 682, 737, 683,
	684, 685, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 296, 297, 299, 298, 300, 301, 302, 303, 0,
	304, 305, 0, 0, 0, 0, 0, 686, 0, 0,
	0, 306, 0, 307, 308, 0, 309, 310, 311, 312,
	313, 314, 315, 687, 688, 0, 316, 689, 317, 690,
	0, 691, 318, 319, 320, 321, 322, 323, 0, 0,
	0, 324, 692, 693, 694, 0, 325, 326, 695, 0,
	0, 0, 327, 328, 329, 330, 331, 332, 333, 334,
	0, 0, 336, 337, 338, 335, 339, 0, 340, 0,
	341, 342, 343, 344, 345, 346, 0, 347, 348, 349,
	0, 350, 351, 352, 0, 0, 0, 0, 0, 0,
	0, 353, 354, 355, 356, 357, 0, 358, 360, 696,
	697, 0, 363, 359, 361, 0, 364, 362, 365, 0,
	366, 367, 368, 0, 0, 369, 370, 371, 0, 372,
	373, 374, 0, 375, 376, 377, 0, 378, 379, 698,
	380, 381, 382, 384, 386, 383, 385, 387, 388, 389,
	390, 699, 700, 391, 0, 0, 0, 0, 0, 0,
	0, 392, 393, 394, 701, 0, 0, 0, 395, 0,
	396, 397, 398, 0, 399, 400, 0, 0, 401, 402,
	403, 702, 703, 404, 405, 406, 407, 408, 409, 410,
	411, 412, 0, 413, 704, 0, 705, 414, 0, 415,
	416, 417, 418, 419, 420, 421, 1411, 707, 708, 510,
	0, 422, 423, 0, 424, 425, 426, 427, 428, 0,
	0, 0, 0, 429, 430, 431, 0, 0, 511, 432,
	709, 710, 0, 711, 0, 433, 434, 0, 712, 0,
	435, 436, 437, 0, 438, 0, 0, 0, 439, 440,
	441, 442, 443, 444, 0, 445, 447, 446, 0, 448,
	713, 0, 449, 450, 0, 0, 451, 452, 453, 454,
	455, 456, 459, 0, 0, 457, 458, 460, 461, 0,
	462, 463, 465, 468, 464, 466, 467, 469, 482, 483,
	470, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 485, 0, 484, 0, 486, 487, 488, 489,
	490, 497, 499, 500, 495, 496, 498, 501, 502, 504,
	492, 493, 494, 0, 503, 491, 0, 0, 0, 505,
	506, 507, 508, 0, 714, 509, 715, 512, 513, 0,
	0, 514, 0, 515, 0, 0, 517, 518, 519, 0,
	0, 520, 521, 716, 0, 522, 0, 717, 523, 524,
	516, 525, 526, 527, 528, 529, 530, 531, 532, 533,
	0, 534, 535, 718, 536, 537, 538, 719, 539, 540,
	541, 720, 542, 721, 543, 544, 0, 545, 546, 547,
	0, 548, 549, 550, 551, 552, 553, 554, 555, 722,
	556, 557, 559, 558, 560, 0, 561, 0, 562, 563,
	564, 0, 0, 0, 0, 0, 565, 566, 568, 0,
	569, 570, 571, 572, 567, 573, 574, 575, 576, 577,
	0, 578, 579, 580, 0, 581, 582, 583, 584, 585,
	723, 586, 0, 587, 588, 595, 596, 597, 589, 590,
	591, 598, 599, 600, 601, 602, 0, 604, 605, 603,
	606, 607, 608, 0, 609, 610, 592, 593, 611, 612,
	0, 613, 614, 615, 616, 617, 618, 619, 724, 0,
	620, 0, 621, 622, 623, 624, 625, 627, 594, 628,
	633, 634, 725, 629, 630, 631, 632, 726, 636, 637,
	638, 0, 639, 640, 0, 635, 626, 0, 641, 642,
	643, 644, 645, 646, 0, 647, 648, 0, 649, 727,
	728, 729, 730, 0, 659, 0, 650, 651, 652, 653,
	731, 654, 732, 0, 655, 656, 657, 658, 0, 660,
	661, 0, 0, 662, 663, 665, 667, 668, 664, 666,
	669, 0, 670, 0, 0, 671, 672, 673, 733, 734,
	735, 0, 675, 674, 676, 677, 678, 736, 679, 680,
	290, 0, 0, 0, 681, 682, 737, 683, 684, 685,
	0, 0, 0, 0, 0, 0, 0, 296, 297, 299,
	298, 300, 301, 302, 303, 1364, 304, 305, 0, 0,
	0, 0, 0, 686, 0, 0, 0, 306, 0, 307,
	308, 0, 309, 310, 311, 312, 313, 314, 315, 687,
	688, 0, 316, 689, 317, 690, 0, 691, 318, 319,
	320, 321, 322, 323, 0, 0, 0, 324, 692, 693,
	694, 0, 325, 326, 695, 0, 0, 0, 327, 328,
	329, 330, 331, 332, 333, 334, 0, 0, 336, 337,
	338, 335, 339, 0, 340, 0, 341, 342, 343, 344,
	345, 346, 0, 347, 348, 349, 0, 350, 351, 352,
	0, 0, 0, 0, 0, 0, 0, 353, 354, 355,
	356, 357, 0, 358, 360, 696, 697, 0, 363, 359,
	361, 0, 364, 362, 365, 0, 366, 367, 368, 0,
	0, 369, 370, 371, 0, 372, 373, 374, 0, 375,
	376, 377, 0, 378, 379, 698, 380, 381, 382, 384,
	386, 383, 385, 387, 388, 389, 390, 699, 700, 391,
	0, 0, 0, 0, 0, 0, 0, 392, 393, 394,
	701, 0, 0, 0, 395, 0, 396, 397, 398, 0,
	399, 400, 0, 0, 401, 402, 403, 702, 703, 404,
	405, 406, 407, 408, 409, 410, 411, 412, 0, 413,
	704, 0, 705, 414, 0, 415, 416, 417, 418, 419,
	420, 421, 706, 707, 708, 510, 0, 422, 423, 0,
	424, 425, 426, 427, 428, 0, 0, 0, 0, 429,
	430, 431, 0, 0, 511, 432, 709, 710, 0, 711,
	0, 433, 434, 0, 712, 0, 435, 436, 437, 0,
	438, 0, 0, 0, 439, 440, 441, 442, 443, 444,
	0, 445, 447, 446, 0, 448, 713, 0, 449, 450,
	0, 0, 451, 452, 453, 454, 455, 456, 459, 0,
	0, 457, 458, 460, 461, 0, 462, 463, 465, 468,
	464, 466, 467, 469, 482, 483, 470, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 485, 0,
	484, 0, 486, 487, 488, 489, 490, 497, 499, 500,
	495, 496, 498, 501, 502, 504, 492, 493, 494, 0,
	503, 491, 0, 0, 0, 505, 506, 507, 508, 0,
	714, 509, 715, 512, 513, 0, 0, 514, 0, 515,
	0, 0, 517, 518, 519, 0, 0, 520, 521, 716,
	0, 522, 0, 717, 523, 524, 516, 525, 526, 527,
	528, 529, 530, 531, 532, 533, 0, 534, 535, 718,
	536, 537, 538, 719, 539, 540, 541, 720, 542, 721,
	543, 544, 0, 545, 546, 547, 0, 548, 549, 550,
	551, 552, 553, 554, 555, 722, 556, 557, 559, 558,
	560, 0, 561, 0, 562, 563, 564, 0, 0, 0,
	0, 0, 565, 566, 568, 0, 569, 570, 571, 572,
	567, 573, 574, 575, 576, 577, 0, 578, 579, 580,
	0, 581, 582, 583, 584, 585, 723, 586, 0, 587,
	588, 595, 596, 597, 589, 590, 591, 598, 599, 600,
	601, 602, 0, 604, 605, 603, 606, 607, 608, 0,
	609, 610, 592, 593, 611, 612, 0, 613, 614, 615,
	616, 617, 618, 619, 724, 0, 620, 0, 621, 622,
	623, 624, 625, 627, 594, 628, 633, 634, 725, 629,
	630, 631, 632, 726, 636, 637, 638, 0, 639, 640,
	0, 635, 626, 0, 641, 642, 643, 644, 645, 646,
	0, 647, 648, 0, 649, 727, 728, 729, 730, 0,
	659, 0, 650, 651, 652, 653, 731, 654, 732, 0,
	655, 656, 657, 658, 0, 660, 661, 0, 0, 662,
	663, 665, 667, 668, 664, 666, 669, 0, 670, 0,
	0, 671, 672, 673, 733, 734, 735, 0, 675, 674,
	676, 677, 678, 736, 679, 680, 840, 0, 290, 0,
	681, 682, 737, 683, 684, 685, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 296, 297, 299, 298, 300,
	301, 302, 303, 0, 304, 305, 0, 0, 0, 0,
	0, 686, 0, 0, 0, 306, 0, 307, 308, 0,
	309, 310, 311, 312, 313, 314, 315, 687, 688, 0,
	316, 689, 317, 690, 0, 691, 318, 319, 320, 321,
	322, 323, 0, 0, 0, 324, 692, 693, 694, 0,
	325, 326, 695, 0, 0, 0, 327, 328, 329, 330,
	331, 332, 333, 334, 0, 0, 336, 337, 338, 335,
	339, 0, 340, 0, 341, 342, 343, 344, 345, 346,
	0, 347, 348, 349, 0, 350, 351, 352, 0, 0,
	0, 0, 0, 0, 0, 353, 354, 355, 356, 357,
	0, 358, 360, 696, 697, 0, 363, 359, 361, 0,
	364, 362, 365, 0, 366, 367, 368, 0, 0, 369,
	370, 371, 0, 372, 373, 374, 0, 375, 376, 377,
	0, 378, 379, 698, 380, 381, 382, 384, 386, 383,
	385, 387, 388, 389, 390, 699, 700, 391, 0, 0,
	0, 0, 0, 0, 0, 392, 393, 394, 701, 0,
	0, 0, 395, 0, 396, 397, 398, 0, 399, 400,
	0, 0, 401, 402, 403, 702, 703, 404, 405, 406,
	407, 408, 409, 410, 411, 412, 0, 413, 704, 0,
	705, 414, 0, 415, 416, 417, 418, 419, 420, 421,
	706, 707, 708, 510, 0, 422, 423, 0, 424, 425,
	426, 427, 428, 0, 0, 0, 0, 429, 430, 431,
	0, 0, 511, 432, 709, 710, 0, 711, 0, 433,
	434, 0, 712, 0, 435, 436, 437, 0, 438, 0,
	0, 0, 439, 440, 441, 442, 443, 444, 0, 445,
	447, 446, 0, 448, 713, 0, 449, 450, 0, 0,
	451, 452, 453, 454, 455, 456, 459, 0, 0, 457,
	458, 460, 461, 0, 462, 463, 465, 468, 464, 466,
	467, 469, 482, 483, 470, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 485, 0, 484, 0,
	486, 487, 488, 489, 490, 497, 499, 500, 495, 496,
	498, 501, 502, 504, 492, 493, 494, 0, 503, 491,
	0, 0, 0, 505, 506, 507, 508, 0, 714, 509,
	715, 512, 513, 0, 0, 514, 0, 515, 0, 0,
	517, 518, 519, 0, 0, 520, 521, 716, 0, 522,
	0, 717, 523, 524, 516, 525, 526, 527, 528, 529,
	530, 531, 532, 533, 0, 534, 535, 718, 536, 537,
	538, 719, 539, 540, 541, 720, 542, 721, 543, 544,
	0, 545, 546, 547, 0, 548, 549, 550, 551, 552,
	553, 554, 555, 722, 556, 557, 559, 558, 560, 0,
	561, 0, 562, 563, 564, 0, 0, 0, 0, 0,
	565, 566, 568, 0, 569, 570, 571, 572, 567, 573,
	574, 575, 576, 577, 0, 578, 579, 580, 0, 581,
	582, 583, 584, 585, 723, 586, 0, 587, 588, 595,
	596, 597, 589, 590, 591, 598, 599, 600, 601, 602,
	0, 604, 605, 603, 606, 607, 608, 0, 609, 610,
	592, 593, 611, 612, 0, 613, 614, 615, 616, 617,
	618, 619, 724, 0, 620, 0, 621, 622, 623, 624,
	625, 627, 594, 628, 633, 634, 725, 629, 630, 631,
	632, 726, 636, 637, 638, 0, 639, 640, 0, 635,
	626, 0, 641, 642, 643, 644, 645, 646, 0, 647,
	648, 0, 649, 727, 728, 729, 730, 0, 659, 0,
	650, 651, 652, 653, 731, 654, 732, 0, 655, 656,
	657, 658, 0, 660, 661, 0, 0, 662, 663, 665,
	667, 668, 664, 666, 669, 0, 670, 0, 0, 671,
	672, 673, 733, 734, 735, 0, 675, 674, 676, 677,
	678, 736, 679, 680, 820, 0, 290, 0, 681, 682,
	737, 683, 684, 685, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 296, 297, 299, 298, 300, 301, 302,
	303, 0, 304, 305, 0, 0, 0, 0, 0, 686,
	0, 0, 0, 306, 0, 307, 308, 0, 309, 310,
	311, 312, 313, 314, 315, 687, 688, 0, 316, 689,
	317, 690, 0, 691, 318, 319, 320, 321, 322, 323,
	0, 0, 0, 324, 692, 693, 694, 0, 325, 816,
	695, 0, 0, 0, 327, 328, 329, 330, 331, 332,
	333, 334, 0, 0, 336, 337, 338, 335, 339, 0,
	815, 0, 341, 342, 343, 344, 345, 346, 0, 347,
	348, 349, 0, 350, 351, 352, 0, 0, 0, 0,
	0, 0, 0, 353, 354, 355, 356, 357, 0, 358,
	360, 696, 697, 0, 363, 359, 361, 0, 364, 362,
	365, 0, 366, 367, 368, 0, 0, 369, 370, 371,
	0, 372, 373, 374, 0, 375, 376, 377, 0, 378,
	379, 698, 380, 381, 382, 384, 386, 383, 385, 387,
	388, 389, 390, 699, 700, 391, 0, 0, 0, 0,
	0, 0, 0, 392, 393, 394, 701, 0, 0, 0,
	395, 0, 396, 397, 398, 0, 399, 400, 0, 0,
	401, 402, 403, 702, 703, 404, 405, 406, 407, 408,
	409, 410, 411, 412, 0, 413, 704, 0, 705, 414,
	0, 415, 416, 417, 418, 419, 420, 421, 706, 707,
	708, 510, 0, 422, 423, 0, 424, 425, 426, 427,
	428, 0, 0, 0, 0, 429, 430, 431, 0, 0,
	511, 432, 709, 710, 0, 711, 0, 433, 434, 0,
	712, 0, 435, 436, 437, 0, 438, 0, 0, 0,
	439, 440, 441, 442, 443, 444, 0, 445, 447, 446,
	0, 448, 713, 0, 449, 450, 0, 0, 451, 452,
	453, 454, 455, 821, 459, 0, 0, 457, 458, 460,
	461, 0, 462, 463, 465, 468, 464, 466, 467, 469,
	482, 483, 470, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 485, 0, 830, 0, 486, 487,
	488, 489, 490, 497, 499, 500, 495, 496, 498, 501,
	502, 504, 492, 493, 494, 0, 503, 491, 0, 0,
	0, 505, 506, 507, 508, 0, 714, 509, 715, 512,
	513, 0, 0, 514, 0, 515, 0, 0, 517, 518,
	519, 0, 0, 520, 521, 716, 0, 522, 0, 717,
	523, 524, 516, 525, 526, 527, 528, 529, 530, 531,
	532, 533, 0, 534, 535, 718, 536, 537, 538, 719,
	539, 540, 541, 720, 542, 721, 543, 544, 0, 545,
	546, 547, 0, 548, 549, 550, 551, 552, 553, 554,
	555, 722, 556, 557, 559, 558, 560, 0, 561, 0,
	562, 563, 564, 0, 0, 0, 0, 0, 565, 566,
	568, 0, 569, 570, 571, 572, 567, 573, 574, 575,
	576, 577, 0, 578, 579, 580, 0, 829, 582, 583,
	584, 585, 817, 586, 0, 587, 588, 595, 596, 597,
	589, 590, 591, 828, 599, 600, 601, 602, 0, 604,
	605, 603, 606, 818, 608, 0, 609, 610, 592, 593,
	611, 612, 0, 613, 614, 615, 616, 617, 618, 619,
	724, 0, 620, 0, 621, 622, 623, 624, 625, 627,
	594, 628, 633, 634, 725, 629, 630, 631, 632, 726,
	636, 637, 638, 0, 639, 640, 0, 635, 626, 0,
	641, 642, 643, 644, 645, 646, 0, 647, 648, 0,
	649, 826, 728, 729, 730, 0, 659, 0, 650, 822,
	652, 653, 731, 654, 732, 0, 655, 656, 657, 658,
	0, 660, 661, 0, 0, 662, 663, 665, 667, 668,
	664, 666, 669, 0, 670, 0, 0, 671, 672, 673,
	733, 734, 735, 0, 675, 674, 676, 677, 678, 736,
	679, 680, 809, 0, 290, 0, 681, 682, 737, 683,
	684, 685, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 296, 297, 299, 298, 300, 301, 302, 303, 0,
	304, 305, 0, 0, 0, 0, 0, 686, 0, 0,
	0, 306, 0, 307, 308, 0, 309, 310, 311, 312,
	313, 314, 315, 687, 688, 0, 316, 689, 317, 690,
	0, 691, 318, 319, 320, 321, 322, 323, 0, 0,
	0, 324, 692, 693, 694, 0, 325, 326, 695, 0,
	0, 0, 327, 328, 329, 330, 331, 332, 333, 334,
	0, 0, 336, 337, 338, 335, 339, 0, 340, 0,
	341, 342, 343, 344, 345, 346, 0, 347, 348, 349,
	0, 350, 351, 352, 0, 0, 0, 0, 0, 0,
	0, 353, 354, 355, 356, 357, 0, 358, 360, 696,
	697, 0, 363, 359, 361, 0, 364, 362, 365, 0,
	366, 367, 368, 0, 0, 369, 370, 371, 0, 372,
	373, 374, 0, 375, 376, 377, 0, 378, 379, 698,
	380, 381, 382, 384, 386, 383, 385, 387, 388, 389,
	390, 699, 700, 391, 0, 0, 0, 0, 0, 0,
	0, 392, 393, 394, 701, 0, 0, 0, 395, 0,
	396, 397, 398, 0, 399, 400, 0, 0, 401, 402,
	403, 702, 703, 404, 405, 406, 407, 408, 409, 410,
	411, 412, 0, 413, 704, 0, 705, 414, 0, 415,
	416, 417, 418, 419, 420, 421, 706, 707, 708, 510,
	0, 422, 423, 0, 424, 425, 426, 427, 428, 0,
	0, 0, 0, 429, 430, 431, 0, 0, 511, 432,
	709, 710, 0, 711, 0, 433, 434, 0, 712, 0,
	435, 436, 437, 0, 438, 0, 0, 0, 439, 440,
	441, 442, 443, 444, 0, 445, 447, 446, 0, 448,
	713, 0, 449, 450, 0, 0, 451, 452, 453, 454,
	455, 456, 459, 0, 0, 457, 458, 460, 461, 0,
	462, 463, 465, 468, 464, 466, 467, 469, 482, 483,
	470, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 485, 0, 484, 0, 486, 487, 488, 489,
	490, 497, 499, 500, 495, 496, 498, 501, 502, 504,
	492, 493, 494, 0, 503, 491, 0, 0, 0, 505,
	506, 507, 508, 0, 714, 509, 715, 512, 513, 0,
	0, 514, 0, 515, 0, 0, 517, 518, 519, 0,
	0, 520, 521, 716, 0, 522, 0, 717, 523, 524,
	516, 525, 526, 527, 528, 529, 530, 531, 532, 533,
	0, 534, 535, 718, 536, 537, 538, 719, 539, 540,
	541, 720, 542, 721, 543, 544, 0, 545, 546, 547,
	0, 548, 549, 550, 551, 552, 553, 554, 555, 722,
	556, 557, 559, 558, 560, 0, 561, 0, 562, 563,
	564, 0, 0, 0, 0, 0, 565, 566, 568, 0,
	569, 570, 571, 572, 567, 573, 574, 575, 576, 577,
	0, 578, 579, 580, 0, 581, 582, 583, 584, 585,
	723, 586, 0, 587, 588, 810, 596, 597, 589, 590,
	591, 598, 599, 600, 601, 602, 0, 604, 605, 603,
	606, 607, 608, 0, 609, 610, 592, 593, 611, 612,
	0, 613, 614, 615, 616, 617, 618, 619, 724, 0,
	620, 0, 621, 622, 623, 624, 625, 627, 594, 628,
	633, 634, 725, 629, 630, 631, 632, 726, 636, 637,
	638, 0, 639, 640, 0, 635, 626, 0, 641, 642,
	643, 644, 645, 646, 0, 647, 648, 0, 649, 727,
	728, 729, 730, 0, 659, 0, 650, 651, 652, 653,
	731, 654, 732, 0, 655, 656, 657, 658, 0, 660,
	661, 0, 0, 662, 663, 665, 667, 668, 664, 666,
	669, 0, 670, 0, 0, 671, 672, 673, 733, 734,
	735, 0, 675, 674, 676, 677, 678, 736, 679, 680,
	772, 0, 290, 0, 681, 682, 737, 683, 684, 685,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 296,
	297, 299, 298, 300, 301, 302, 303, 0, 304, 305,
	0, 0, 0, 0, 0, 686, 0, 0, 0, 306,
	0, 307, 308, 0, 309, 310, 311, 312, 313, 314,
	315, 687, 688, 0, 316, 689, 317, 690, 0, 691,
	318, 319, 320, 321, 322, 323, 0, 0, 0, 324,
	692, 693, 694, 0, 325, 326, 695, 0, 0, 0,
	327, 328, 329, 330, 331, 332, 333, 334, 0, 0,
	336, 337, 338, 335, 339, 0, 340, 0, 341, 342,
	343, 344, 345, 346, 0, 347, 348, 349, 0, 350,
	351, 352, 0, 0, 0, 0, 0, 0, 0, 353,
	354, 355, 356, 357, 0, 358, 360, 696, 697, 0,
	363, 359, 361, 0, 364, 362, 365, 0, 366, 367,
	368, 0, 0, 369, 370, 371, 0, 372, 373, 374,
	0, 375, 376, 377, 0, 378, 379, 698, 380, 381,
	382, 384, 386, 383, 385, 387, 388, 389, 390, 699,
	700, 391, 0, 0, 0, 0, 0, 0, 0, 392,
	393, 394, 701, 0, 0, 0, 395, 0, 396, 397,
	398, 0, 399, 400, 0, 0, 401, 402, 403, 702,
	703, 404, 405, 406, 407, 408, 409, 410, 411, 412,
	0, 413, 704, 0, 705, 414, 0, 415, 416, 417,
	418, 419, 420, 421, 706, 707, 708, 510, 0, 422,
	423, 0, 424, 425, 426, 427, 428, 0, 0, 0,
	0, 429, 430, 431, 0, 0, 511, 432, 709, 710,
	0, 711, 0, 433, 434, 0, 712, 0, 435, 436,
	437, 0, 438, 0, 0, 0, 439, 440, 441, 442,
	443, 444, 0, 445, 447, 446, 0, 448, 713, 0,
	449, 450, 0, 0, 451, 452, 453, 454, 455, 456,
	459, 0, 0, 457, 458, 460, 461, 0, 462, 463,
	465, 468, 464, 466, 467, 469, 482, 483, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	485, 0, 484, 0, 486, 487, 488, 489, 490, 497,
	499, 500, 495, 496, 498, 501, 502, 504, 492, 493,
	494, 0, 503, 491, 0, 0, 0, 505, 506, 507,
	508, 0, 714, 509, 715, 512, 513, 0, 0, 514,
	0, 515, 0, 0, 517, 518, 519, 0, 0, 520,
	521, 716, 0, 522, 0, 717, 523, 524, 516, 525,
	526, 527, 528, 529, 530, 531, 532, 533, 0, 534,
	535, 718, 536, 537, 538, 719, 539, 540, 541, 720,
	542, 721, 543, 544, 0, 545, 546, 547, 0, 548,
	549, 550, 551, 552, 553, 554, 555, 722, 556, 557,
	559, 558, 560, 0, 561, 0, 562, 563, 564, 0,
	0, 0, 0, 0, 565, 566, 568, 0, 569, 570,
	571, 572, 567, 573, 574, 575, 576, 577, 0, 578,
	579, 580, 0, 581, 582, 583, 584, 585, 723, 586,
	0, 587, 588, 595, 596, 597, 589, 590, 591, 598,
	599, 600, 601, 602, 0, 604, 605, 603, 606, 607,
	608, 0, 609, 610, 592, 593, 611, 612, 0, 613,
	614, 615, 616, 617, 618, 619, 724, 0, 620, 0,
	621, 622, 623, 624, 625, 627, 594, 628, 633, 634,
	725, 629, 630, 631, 632, 726, 636, 637, 638, 0,
	639, 640, 0, 635, 626, 0, 641, 642, 643, 644,
	645, 646, 0, 647, 648, 0, 649, 727, 728, 729,
	730, 0, 659, 0, 650, 651, 652, 653, 731, 654,
	732, 0, 655, 656, 657, 658, 0, 660, 661, 0,
	0, 662, 663, 665, 667, 668, 664, 666, 669, 0,
	670, 0, 0, 671, 672, 673, 733, 734, 735, 0,
	675, 674, 676, 677, 678, 736, 679, 680, 765, 0,
	290, 0, 681, 682, 737, 683, 684, 685, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 296, 297, 299,
	298, 300, 301, 302, 303, 0, 304, 305, 0, 0,
	0, 0, 0, 686, 0, 0, 0, 306, 0, 307,
	308, 0, 309, 310, 311, 312, 313, 314, 315, 687,
	688, 0, 316, 689, 317, 690, 0, 691, 318, 319,
	320, 321, 322, 323, 0, 0, 0, 324, 692, 693,
	694, 0, 325, 326, 695, 0, 0, 0, 327, 328,
	329, 330, 331, 332, 333, 334, 0, 0, 336, 337,
	338, 335, 339, 0, 340, 0, 341, 342, 343, 344,
	345, 346, 0, 347, 348, 349, 0, 350, 351, 352,
	0, 0, 0, 0, 0, 0, 0, 353, 354, 355,
	356, 357, 0, 358, 360, 696, 697, 0, 363, 359,
	361, 0, 364, 362, 365, 0, 366, 367, 368, 0,
	0, 369, 370, 371, 0, 372, 373, 374, 0, 375,
	376, 377, 0, 378, 379, 698, 380, 381, 382, 384,
	386, 383, 385, 387, 388, 389, 390, 699, 700, 391,
	0, 0, 0, 0, 0, 0, 0, 392, 393, 394,
	701, 0, 0, 0, 395, 0, 396, 397, 398, 0,
	399, 400, 0, 0, 401, 402, 403, 702, 703, 404,
	405, 406, 407, 408, 409, 410, 411, 412, 0, 413,
	704, 0, 705, 414, 0, 415, 416, 417, 418, 419,
	420, 421, 706, 707, 708, 510, 0, 422, 423, 0,
	424, 425, 426, 427, 428, 0, 0, 0, 0, 429,
	430, 431, 0, 0, 511, 432, 709, 710, 0, 711,
	0, 433, 434, 0, 712, 0, 435, 436, 437, 0,
	438, 0, 0, 0, 439, 440, 441, 442, 443, 444,
	0, 445, 447, 446, 0, 448, 713, 0, 449, 450,
	0, 0, 451, 452, 453, 454, 455, 456, 459, 0,
	0, 457, 458, 460, 461, 0, 462, 463, 465, 468,
	464, 466, 467, 469, 482, 483, 470, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 485, 0,
	484, 0, 486, 487, 488, 489, 490, 497, 499, 500,
	495, 496, 498, 501, 502, 504, 492, 493, 494, 0,
	503, 491, 0, 0, 0, 505, 506, 507, 508, 0,
	714, 509, 715, 512, 513, 0, 0, 514, 0, 515,
	0, 0, 517, 518, 519, 0, 0, 520, 521, 716,
	0, 522, 0, 717, 523, 524, 516, 525, 526, 527,
	528, 529, 530, 531, 532, 533, 0, 534, 535, 718,
	536, 537, 538, 719, 539, 540, 541, 720, 542, 721,
	543, 544, 0, 545, 546, 547, 0, 548, 549, 550,
	551, 552, 553, 554, 555, 722, 556, 557, 559, 558,
	560, 0, 561, 0, 562, 563, 564, 0, 0, 0,
	0, 0, 565, 566, 568, 0, 569, 570, 571, 572,
	567, 573, 574, 575, 576, 577, 0, 578, 579, 580,
	0, 581, 582, 583, 584, 585, 723, 586, 0, 587,
	588, 595, 596, 597, 589, 590, 591, 598, 599, 600,
	601, 602, 0, 604, 605, 603, 606, 607, 608, 0,
	609, 610, 592, 593, 611, 612, 0, 613, 614, 615,
	616, 617, 618, 619, 724, 0, 620, 0, 621, 622,
	623, 624, 625, 627, 594, 628, 633, 634, 725, 629,
	630, 631, 632, 726, 636, 637, 638, 0, 639, 640,
	0, 635, 626, 0, 641, 642, 643, 644, 645, 646,
	0, 647, 648, 0, 649, 727, 728, 729, 730, 0,
	659, 0, 650, 651, 652, 653, 731, 654, 732, 0,
	655, 656, 657, 658, 0, 660, 661, 0, 0, 662,
	663, 665, 667, 668, 664, 666, 669, 0, 670, 0,
	0, 671, 672, 673, 733, 734, 735, 0, 675, 674,
	676, 677, 678, 736, 679, 680, 743, 0, 290, 0,
	681, 682, 737, 683, 684, 685, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 296, 297, 299, 298, 300,
	301, 302, 303, 0, 304, 305, 0, 0, 0, 0,
	0, 686, 0, 0, 0, 306, 0, 307, 308, 0,
	309, 310, 311, 312, 313, 314, 315, 687, 688, 0,
	316, 689, 317, 690, 0, 691, 318, 319, 320, 321,
	322, 323, 0, 0, 0, 324, 692, 693, 694, 0,
	325, 326, 695, 0, 0, 0, 327, 328, 329, 330,
	331, 332, 333, 334, 0, 0, 336, 337, 338, 335,
	339, 0, 340, 0, 341, 342, 343, 344, 345, 346,
	0, 347, 348, 349, 0, 350, 351, 352, 0, 0,
	0, 0, 0, 0, 0, 353, 354, 355, 356, 357,
	0, 358, 360, 696, 697, 0, 363, 359, 361, 0,
	364, 362, 365, 0, 366, 367, 368, 0, 0, 369,
	370, 371, 0, 372, 373, 374, 0, 375, 376, 377,
	0, 378, 379, 698, 380, 381, 382, 384, 386, 383,
	385, 387, 388, 389, 390, 699, 700, 391, 0, 0,
	0, 0, 0, 0, 0, 392, 393, 394, 701, 0,
	0, 0, 395, 0, 396, 397, 398, 0, 399, 400,
	0, 0, 401, 402, 403, 702, 703, 404, 405, 406,
	407, 408, 409, 410, 411, 412, 0, 413, 704, 0,
	705, 414, 0, 415, 416, 417, 418, 419, 420, 421,
	706, 707, 708, 510, 0, 422, 423, 0, 424, 425,
	426, 427, 428, 0, 0, 0, 0, 429, 430, 431,
	0, 0, 511, 432, 709, 710, 0, 711, 0, 433,
	434, 0, 712, 0, 435, 436, 437, 0, 438, 0,
	0, 0, 439, 440, 441, 442, 443, 444, 0, 445,
	447, 446, 0, 448, 713, 0, 449, 450, 0, 0,
	451, 452, 453, 454, 455, 456, 459, 0, 0, 457,
	458, 460, 461, 0, 462, 463, 465, 468, 464, 466,
	467, 469, 482, 483, 470, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 485, 0, 484, 0,
	486, 487, 488, 489, 490, 497, 499, 500, 495, 496,
	498, 501, 502, 504, 492, 493, 494, 0, 503, 491,
	0, 0, 0, 505, 506, 507, 508, 0, 714, 509,
	715, 512, 513, 0, 0, 514, 0, 515, 0, 0,
	517, 518, 519, 0, 0, 520, 521, 716, 0, 522,
	0, 717, 523, 524, 516, 525, 526, 527, 528, 529,
	530, 531, 532, 533, 0, 534, 535, 718, 536, 537,
	538, 719, 539, 540, 541, 720, 542, 721, 543, 544,
	0, 545, 546, 547, 0, 548, 549, 550, 551, 552,
	553, 554, 555, 722, 556, 557, 559, 558, 560, 0,
	561, 0, 562, 563, 564, 0, 0, 0, 0, 0,
	565, 566, 568, 0, 569, 570, 571, 572, 567, 573,
	574, 575, 576, 577, 0, 578, 579, 580, 0, 581,
	582, 583, 584, 585, 723, 586, 0, 587, 588, 595,
	596, 597, 589, 590, 591, 598, 599, 600, 601, 602,
	0, 604, 605, 603, 606, 607, 608, 0, 609, 610,
	592, 593, 611, 612, 0, 613, 614, 615, 616, 617,
	618, 619, 724, 0, 620, 0, 621, 622, 623, 624,
	625, 627, 594, 628, 633, 634, 725, 629, 630, 631,
	632, 726, 636, 637, 638, 0, 639, 640, 0, 635,
	626, 0, 641, 642, 643, 644, 645, 646, 0, 647,
	648, 0, 649, 727, 728, 729, 730, 0, 659, 0,
	650, 651, 652, 653, 731, 654, 732, 0, 655, 656,
	657, 658, 0, 660, 661, 0, 0, 662, 663, 665,
	667, 668, 664, 666, 669, 0, 670, 0, 0, 671,
	672, 673, 733, 734, 735, 0, 675, 674, 676, 677,
	678, 736, 679, 680, 290, 0, 0, 0, 681, 682,
	737, 683, 684, 685, 0, 0, 0, 0, 0, 0,
	0, 296, 297, 299, 298, 300, 301, 302, 303, 0,
	304, 305, 0, 0, 0, 0, 0, 686, 0, 0,
	0, 306, 0, 307, 308, 0, 309, 310, 311, 312,
	313, 314, 315, 687, 688, 0, 316, 689, 317, 690,
	0, 691, 318, 319, 320, 321, 322, 323, 0, 0,
	0, 324, 692, 693, 694, 0, 325, 326, 695, 0,
	0, 0, 327, 328, 329, 330, 331, 332, 333, 334,
	0, 0, 336, 337, 338, 335, 339, 0, 340, 0,
	341, 342, 343, 344, 345, 346, 0, 347, 348, 349,
	0, 350, 351, 352, 0, 0, 0, 0, 0, 0,
	0, 353, 354, 355, 356, 357, 0, 358, 360, 696,
	697, 0, 363, 359, 361, 0, 364, 362, 365, 0,
	366, 367, 368, 0, 0, 369, 370, 371, 0, 372,
	373, 374, 0, 375, 376, 377, 0, 378, 379, 698,
	380, 381, 382, 384, 386, 383, 385, 387, 388, 389,
	390, 699, 700, 391, 0, 0, 0, 0, 0, 0,
	0, 392, 393, 394, 701, 0, 0, 0, 395, 0,
	396, 397, 398, 0, 399, 400, 0, 0, 401, 402,
	403, 702, 703, 404, 405, 406, 407, 408, 409, 410,
	411, 412, 0, 413, 704, 0, 705, 414, 0, 415,
	416, 417, 418, 419, 420, 421, 706, 707, 708, 510,
	0, 422, 423, 0, 424, 425, 426, 427, 428, 0,
	0, 0, 0, 429, 430, 431, 0, 0, 511, 432,
	709, 710, 0, 711, 0, 433, 434, 0, 712, 0,
	435, 436, 437, 0, 438, 0, 0, 0, 439, 440,
	441, 442, 443, 444, 0, 445, 447, 446, 0, 448,
	713, 0, 449, 450, 0, 0, 451, 452, 453, 454,
	455, 456, 459, 0, 0, 457, 458, 460, 461, 0,
	462, 463, 465, 468, 464, 466, 467, 469, 482, 483,
	470, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 485, 0, 484, 0, 486, 487, 488, 489,
	490, 497, 499, 500, 495, 496, 498, 501, 502, 504,
	492, 493, 494, 0, 503, 491, 0, 0, 0, 505,
	506, 507, 508, 0, 714, 509, 715, 512, 513, 0,
	0, 514, 0, 515, 0, 0, 517, 518, 519, 0,
	0, 520, 521, 716, 0, 522, 0, 717, 523, 524,
	516, 525, 526, 527, 528, 529, 530, 531, 532, 533,
	0, 534, 535, 718, 536, 537, 538, 719, 539, 540,
	541, 720, 542, 721, 543, 544, 0, 545, 546, 547,
	0, 548, 549, 550, 551, 552, 553, 554, 555, 722,
	556, 557, 559, 558, 560, 0, 561, 0, 562, 563,
	564, 0, 0, 0, 0, 0, 565, 566, 568, 0,
	569, 570, 571, 572, 567, 573, 574, 575, 576, 577,
	0, 578, 579, 580, 0, 581, 582, 583, 584, 585,
	723, 586, 0, 587, 588, 595, 596, 597, 589, 590,
	591, 598, 599, 600, 601, 602, 0, 604, 605, 603,
	606, 607, 608, 0, 609, 610, 592, 593, 611, 612,
	0, 613, 614, 615, 616, 617, 618, 619, 724, 0,
	620, 0, 621, 622, 623, 624, 625, 627, 594, 628,
	633, 634, 725, 629, 630, 631, 632, 726, 636, 637,
	638, 0, 639, 640, 0, 635, 626, 0, 641, 642,
	643, 644, 645, 646, 0, 647, 648, 0, 649, 727,
	728, 729, 730, 0, 659, 0, 650, 651, 652, 653,
	731, 654, 732, 0, 655, 656, 657, 658, 0, 660,
	661, 0, 0, 662, 663, 665, 667, 668, 664, 666,
	669, 0, 670, 0, 0, 671, 672, 673, 733, 734,
	735, 0, 675, 674, 676, 677, 678, 736, 679, 680,
	290, 0, 0, 0, 681, 682, 737, 683, 684, 685,
	0, 0, 0, 0, 0, 0, 0, 296, 297, 299,
	298, 300, 301, 302, 303, 0, 304, 305, 0, 0,
	0, 0, 0, 686, 0, 0, 0, 306, 0, 307,
	308, 0, 309, 310, 311, 312, 313, 314, 315, 687,
	688, 0, 316, 689, 317, 690, 0, 691, 318, 319,
	320, 321, 322, 323, 0, 0, 0, 324, 692, 693,
	694, 0, 325, 326, 695, 0, 0, 0, 327, 328,
	329, 330, 331, 332, 333, 334, 0, 0, 336, 337,
	338, 335, 339, 0, 340, 0, 341, 342, 343, 344,
	345, 346, 0, 347, 348, 349, 0, 350, 351, 352,
	0, 0, 0, 0, 0, 0, 0, 353, 354, 355,
	356, 357, 0, 358, 360, 696, 697, 0, 363, 359,
	361, 0, 364, 362, 365, 0, 366, 367, 368, 0,
	0, 369, 370, 371, 0, 372, 373, 374, 0, 375,
	376, 377, 0, 378, 379, 698, 380, 381, 382, 384,
	386, 383, 385, 387, 388, 389, 390, 699, 700, 391,
	0, 0, 0, 0, 0, 0, 0, 392, 393, 394,
	701, 0, 0, 0, 395, 0, 396, 397, 398, 0,
	399, 400, 0, 0, 401, 402, 403, 702, 703, 404,
	405, 406, 407, 408, 409, 410, 411, 412, 0, 413,
	704, 0, 705, 414, 0, 415, 416, 417, 418, 419,
	420, 421, 3865, 707, 708, 510, 0, 422, 423, 0,
	424, 425, 426, 427, 428, 0, 0, 0, 0, 429,
	430, 431, 0, 0, 511, 432, 709, 710, 0, 711,
	0, 433, 434, 0, 712, 0, 435, 436, 437, 0,
	438, 0, 0, 0, 439, 440, 441, 442, 443, 444,
	0, 445, 447, 446, 0, 448, 713, 0, 449, 450,
	0, 0, 451, 452, 453, 454, 455, 456, 459, 0,
	0, 457, 458, 460, 461, 0, 462, 463, 465, 468,
	464, 466, 467, 469, 482, 483, 470, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 485, 0,
	484, 0, 486, 487, 488, 489, 490, 497, 499, 500,
	495, 496, 498, 501, 502, 504, 492, 493, 494, 0,
	503, 491, 0, 0, 0, 505, 506, 507, 508, 0,
	714, 509, 715, 512, 513, 0, 0, 514, 0, 515,
	0, 0, 517, 518, 519, 0, 0, 520, 521, 716,
	0, 522, 0, 717, 523, 524, 516, 525, 526, 527,
	528, 529, 530, 531, 532, 533, 0, 534, 535, 718,
	536, 537, 538, 719, 539, 540, 541, 720, 542, 721,
	543, 544, 0, 545, 546, 547, 0, 548, 549, 550,
	551, 552, 553, 554, 555, 722, 556, 557, 559, 558,
	560, 0, 561, 0, 562, 563, 564, 0, 0, 0,
	0, 0, 565, 566, 568, 0, 569, 570, 571, 572,
	567, 573, 574, 575, 576, 577, 0, 578, 579, 580,
	0, 581, 582, 583, 584, 585, 723, 586, 0, 587,
	588, 595, 596, 597, 589, 590, 591, 598, 599, 600,
	601, 602, 0, 604, 605, 603, 606, 607, 608, 0,
	609, 610, 592, 593, 611, 612, 0, 613, 614, 615,
	616, 617, 618, 619, 724, 0, 620, 0, 621, 622,
	623, 624, 625, 627, 594, 628, 633, 634, 725, 629,
	630, 631, 632, 726, 636, 637, 638, 0, 639, 640,
	0, 635, 626, 0, 641, 642, 643, 644, 645, 646,
	0, 647, 648, 0, 649, 727, 728, 729, 730, 0,
	659, 0, 650, 651, 652, 653, 731, 654, 732, 0,
	655, 656, 657, 658, 0, 660, 661, 0, 0, 662,
	663, 665, 667, 668, 664, 666, 669, 0, 670, 0,
	0, 671, 672, 673, 733, 734, 735, 0, 675, 674,
	676, 677, 678, 736, 679, 680, 290, 0, 0, 0,
	681, 682, 737, 683, 684, 685, 0, 0, 0, 0,
	0, 0, 0, 296, 297, 299, 298, 300, 301, 302,
	303, 0, 304, 305, 0, 0, 0, 0, 0, 686,
	0, 0, 0, 306, 0, 307, 308, 0, 309, 310,
	311, 312, 313, 314, 315, 687, 688, 0, 316, 689,
	317, 690, 0, 691, 318, 319, 320, 321, 322, 323,
	0, 0, 0, 324, 692, 693, 694, 0, 325, 326,
	695, 0, 0, 0, 327, 328, 329, 330, 331, 332,
	333, 334, 0, 0, 336, 337, 338, 335, 339, 0,
	340, 0, 341, 342, 343, 344, 345, 346, 0, 347,
	348, 349, 0, 350, 351, 352, 0, 0, 0, 0,
	0, 0, 0, 353, 354, 355, 356, 357, 0, 358,
	360, 696, 697, 0, 363, 359, 361, 0, 364, 362,
	365, 0, 366, 367, 368, 0, 0, 369, 370, 371,
	0, 372, 373, 374, 0, 375, 376, 377, 0, 378,
	379, 698, 380, 381, 382, 384, 386, 383, 385, 387,
	388, 389, 390, 699, 700, 391, 0, 0, 0, 0,
	0, 0, 0, 392, 393, 394, 701, 0, 0, 0,
	395, 0, 396, 397, 398, 0, 399, 400, 0, 0,
	401, 402, 403, 702, 703, 404, 405, 406, 407, 408,
	409, 410, 411, 412, 0, 413, 704, 0, 705, 414,
	0, 415, 416, 417, 418, 419, 420, 421, 706, 707,
	708, 510, 0, 422, 423, 0, 424, 425, 426, 427,
	428, 0, 0, 0, 0, 429, 430, 431, 0, 0,
	511, 432, 709, 710, 0, 711, 0, 433, 434, 0,
	712, 0, 435, 436, 437, 0, 438, 0, 0, 0,
	439, 440, 441, 442, 443, 444, 0, 445, 447, 446,
	0, 448, 713, 0, 449, 450, 0, 0, 451, 452,
	453, 454, 455, 456, 459, 0, 0, 457, 458, 460,
	461, 0, 462, 463, 465, 468, 464, 466, 467, 469,
	482, 483, 470, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 485, 0, 484, 0, 486, 487,
	488, 489, 490, 497, 499, 500, 495, 496, 498, 501,
	502, 504, 492, 493, 494, 0, 503, 491, 0, 0,
	0, 505, 506, 507, 508, 0, 714, 509, 715, 512,
	513, 0, 0, 514, 0, 515, 0, 0, 517, 518,
	519, 0, 0, 520, 521, 716, 0, 522, 0, 717,
	523, 524, 516, 525, 526, 527, 528, 529, 530, 531,
	532, 533, 0, 534, 535, 718, 536, 537, 538, 719,
	539, 540, 541, 720, 542, 721, 543, 544, 0, 545,
	546, 547, 0, 548, 549, 550, 551, 552, 553, 554,
	555, 722, 556, 557, 559, 558, 560, 0, 561, 0,
	562, 563, 564, 0, 0, 0, 0, 0, 565, 566,
	568, 0, 569, 570, 571, 572, 567, 573, 574, 575,
	576, 577, 0, 578, 579, 580, 0, 829, 582, 583,
	584, 585, 723, 586, 0, 587, 588, 595, 596, 597,
	589, 590, 591, 828, 599, 600, 601, 602, 0, 604,
	605, 603, 606, 607, 608, 0, 609, 610, 592, 593,
	611, 612, 0, 613, 614, 615, 616, 617, 618, 619,
	724, 0, 620, 0, 621, 622, 623, 624, 625, 627,
	594, 628, 633, 634, 725, 629, 630, 631, 632, 726,
	636, 637, 638, 0, 639, 640, 0, 635, 626, 0,
	641, 642, 643, 644, 645, 646, 0, 647, 648, 0,
	649, 826, 728, 729, 730, 0, 659, 0, 650, 651,
	652, 653, 731, 654, 732, 0, 655, 656, 657, 658,
	0, 660, 661, 0, 0, 662, 663, 665, 667, 668,
	664, 666, 669, 0, 670, 0, 0, 671, 672, 673,
	733, 734, 735, 0, 675, 674, 676, 677, 678, 736,
	679, 680, 290, 0, 0, 0, 681, 682, 737, 683,
	684, 685, 0, 0, 0, 0, 0, 0, 0, 296,
	297, 299, 298, 300, 301, 302, 303, 0, 304, 305,
	0, 0, 0, 0, 0, 686, 0, 0, 0, 306,
	0, 307, 308, 0, 309, 310, 311, 312, 313, 314,
	315, 687, 688, 0, 316, 689, 317, 690, 0, 691,
	318, 319, 320, 321, 322, 323, 0, 0, 0, 324,
	692, 693, 694, 0, 325, 326, 695, 0, 0, 0,
	327, 328, 329, 330, 331, 332, 333, 334, 0, 0,
	336, 337, 338, 335, 339, 0, 340, 0, 341, 342,
	343, 344, 345, 346, 0, 347, 348, 349, 0, 350,
	351, 352, 0, 0, 0, 0, 0, 0, 0, 353,
	354, 355, 356, 357, 0, 358, 360, 696, 697, 0,
	363, 359, 361, 0, 364, 362, 365, 0, 366, 367,
	368, 0, 0, 369, 370, 371, 0, 372, 373, 374,
	0, 375, 376, 377, 0, 378, 379, 698, 380, 381,
	382, 384, 386, 383, 385, 387, 388, 389, 390, 699,
	700, 391, 0, 0, 0, 0, 0, 0, 0, 392,
	393, 394, 701, 0, 0, 0, 395, 0, 396, 397,
	398, 0, 399, 400, 0, 0, 401, 402, 403, 702,
	703, 404, 405, 406, 407, 408, 409, 410, 411, 412,
	0, 413, 704, 0, 705, 414, 0, 415, 416, 417,
	418, 419, 420, 421, 3771, 707, 708, 510, 0, 422,
	423, 0, 424, 425, 426, 427, 428, 0, 0, 0,
	0, 429, 430, 431, 0, 0, 511, 432, 709, 710,
	0, 711, 0, 433, 434, 0, 712, 0, 435, 436,
	437, 0, 438, 0, 0, 0, 439, 440, 441, 442,
	443, 444, 0, 445, 447, 446, 0, 448, 713, 0,
	449, 450, 0, 0, 451, 452, 453, 454, 455, 456,
	459, 0, 0, 457, 458, 460, 461, 0, 462, 463,
	465, 468, 464, 466, 467, 469, 482, 483, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	485, 0, 484, 0, 486, 487, 488, 489, 490, 497,
	499, 500, 495, 496, 498, 501, 502, 504, 492, 493,
	494, 0, 503, 491, 0, 0, 0, 505, 506, 507,
	508, 0, 714, 509, 715, 512, 513, 0, 0, 514,
	0, 515, 0, 0, 517, 518, 519, 0, 0, 520,
	521, 716, 0, 522, 0, 717, 523, 524, 516, 525,
	526, 527, 528, 529, 530, 531, 532, 533, 0, 534,
	535, 718, 536, 537, 538, 719, 539, 540, 541, 720,
	542, 721, 543, 544, 0, 545, 546, 547, 0, 548,
	549, 550, 551, 552, 553, 554, 555, 722, 556, 557,
	559, 558, 560, 0, 561, 0, 562, 563, 564, 0,
	0, 0, 0, 0, 565, 566, 568, 0, 569, 570,
	571, 572, 567, 573, 574, 575, 576, 577, 0, 578,
	579, 580, 0, 581, 582, 583, 584, 585, 723, 586,
	0, 587, 588, 595, 596, 597, 589, 590, 591, 598,
	599, 600, 601, 602, 0, 604, 605, 603, 606, 607,
	608, 0, 609, 610, 592, 593, 611, 612, 0, 613,
	614, 615, 616, 617, 618, 619, 724, 0, 620, 0,
	621, 622, 623, 624, 625, 627, 594, 628, 633, 634,
	725, 629, 630, 631, 632, 726, 636, 637, 638, 0,
	639, 640, 0, 635, 626, 0, 641, 642, 643, 644,
	645, 646, 0, 647, 648, 0, 649, 727, 728, 729,
	730, 0, 659, 0, 650, 651, 652, 653, 731, 654,
	732, 0, 655, 656, 657, 658, 0, 660, 661, 0,
	0, 662, 663, 665, 667, 668, 664, 666, 669, 0,
	670, 0, 0, 671, 672, 673, 733, 734, 735, 0,
	675, 674, 676, 677, 678, 736, 679, 680, 290, 0,
	0, 0, 681, 682, 737, 683, 684, 685, 0, 0,
	0, 0, 0, 0, 0, 296, 297, 299, 298, 300,
	301, 302, 303, 0, 304, 305, 0, 0, 0, 0,
	0, 686, 0, 0, 0, 306, 0, 307, 308, 0,
	309, 310, 311, 312, 313, 314, 315, 687, 688, 0,
	316, 689, 317, 690, 0, 691, 318, 319, 320, 321,
	322, 323, 0, 0, 0, 324, 692, 693, 694, 0,
	325, 326, 695, 0, 0, 0, 327, 328, 329, 330,
	331, 332, 333, 334, 0, 0, 336, 337, 338, 335,
	339, 0, 340, 0, 341, 342, 343, 344, 345, 346,
	0, 347, 348, 349, 0, 350, 351, 352, 0, 0,
	0, 0, 0, 0, 0, 353, 354, 355, 356, 357,
	0, 358, 360, 696, 697, 0, 363, 359, 361, 0,
	364, 362, 365, 0, 366, 367, 368, 0, 0, 369,
	370, 371, 0, 372, 373, 374, 0, 375, 376, 377,
	0, 378, 379, 698, 380, 381, 382, 384, 386, 383,
	385, 387, 388, 389, 390, 699, 700, 391, 0, 0,
	0, 0, 0, 0, 0, 392, 393, 394, 701, 0,
	0, 0, 395, 0, 396, 397, 398, 0, 399, 400,
	0, 0, 401, 402, 403, 702, 703, 404, 405, 406,
	407, 408, 409, 410, 411, 412, 0, 413, 704, 0,
	705, 414, 0, 415, 416, 417, 418, 419, 420, 421,
	3746, 707, 708, 510, 0, 422, 423, 0, 424, 425,
	426, 427, 428, 0, 0, 0, 0, 429, 430, 431,
	0, 0, 511, 432, 709, 710, 0, 711, 0, 433,
	434, 0, 712, 0, 435, 436, 437, 0, 438, 0,
	0, 0, 439, 440, 441, 442, 443, 444, 0, 445,
	447, 446, 0, 448, 713, 0, 449, 450, 0, 0,
	451, 452, 453, 454, 455, 456, 459, 0, 0, 457,
	458, 460, 461, 0, 462, 463, 465, 468, 464, 466,
	467, 469, 482, 483, 470, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 485, 0, 484, 0,
	486, 487, 488, 489, 490, 497, 499, 500, 495, 496,
	498, 501, 502, 504, 492, 493, 494, 0, 503, 491,
	0, 0, 0, 505, 506, 507, 508, 0, 714, 509,
	715, 512, 513, 0, 0, 514, 0, 515, 0, 0,
	517, 518, 519, 0, 0, 520, 521, 716, 0, 522,
	0, 717, 523, 524, 516, 525, 526, 527, 528, 529,
	530, 531, 532, 533, 0, 534, 535, 718, 536, 537,
	538, 719, 539, 540, 541, 720, 542, 721, 543, 544,
	0, 545, 546, 547, 0, 548, 549, 550, 551, 552,
	553, 554, 555, 722, 556, 557, 559, 558, 560, 0,
	561, 0, 562, 563, 564, 0, 0, 0, 0, 0,
	565, 566, 568, 0, 569, 570, 571, 572, 567, 573,
	574, 575, 576, 577, 0, 578, 579, 580, 0, 581,
	582, 583, 584, 585, 723, 586, 0, 587, 588, 595,
	596, 597, 589, 590, 591, 598, 599, 600, 601, 602,
	0, 604, 605, 603, 606, 607, 608, 0, 609, 610,
	592, 593, 611, 612, 0, 613, 614, 615, 616, 617,
	618, 619, 724, 0, 620, 0, 621, 622, 623, 624,
	625, 627, 594, 628, 633, 634, 725, 629, 630, 631,
	632, 726, 636, 637, 638, 0, 639, 640, 0, 635,
	626, 0, 641, 642, 643, 644, 645, 646, 0, 647,
	648, 0, 649, 727, 728, 729, 730, 0, 659, 0,
	650, 651, 652, 653, 731, 654, 732, 0, 655, 656,
	657, 658, 0, 660, 661, 0, 0, 662, 663, 665,
	667, 668, 664, 666, 669, 0, 670, 0, 0, 671,
	672, 673, 733, 734, 735, 0, 675, 674, 676, 677,
	678, 736, 679, 680, 290, 0, 0, 0, 681, 682,
	737, 683, 684, 685, 0, 0, 0, 0, 0, 0,
	0, 296, 297, 299, 298, 300, 301, 302, 303, 0,
	304, 305, 0, 0, 0, 0, 0, 686, 0, 0,
	0, 306, 0, 307, 308, 0, 309, 310, 311, 312,
	313, 314, 315, 687, 688, 0, 316, 689, 317, 690,
	0, 691, 318, 319, 320, 321, 322, 323, 0, 0,
	0, 324, 692, 693, 694, 0, 325, 326, 695, 0,
	0, 0, 327, 328, 329, 330, 331, 332, 333, 334,
	0, 0, 336, 337, 338, 335, 339, 0, 340, 0,
	341, 342, 343, 344, 345, 346, 0, 347, 348, 349,
	0, 350, 351, 352, 0, 0, 0, 0, 0, 0,
	0, 353, 354, 355, 356, 357, 0, 358, 360, 696,
	697, 0, 363, 359, 361, 0, 364, 362, 365, 0,
	366, 367, 368, 0, 0, 369, 370, 371, 0, 372,
	373, 374, 0, 375, 376, 377, 0, 378, 379, 698,
	380, 381, 382, 384, 386, 383, 385, 387, 388, 389,
	390, 699, 700, 391, 0, 0, 0, 0, 0, 0,
	0, 392, 393, 394, 701, 0, 0, 0, 395, 0,
	396, 397, 398, 0, 399, 400, 0, 0, 401, 402,
	403, 702, 703, 404, 405, 406, 407, 408, 409, 410,
	411, 412, 0, 413, 704, 0, 705, 414, 0, 415,
	416, 417, 418, 419, 420, 421, 3742, 707, 708, 510,
	0, 422, 423, 0, 424, 425, 426, 427, 428, 0,
	0, 0, 0, 429, 430, 431, 0, 0, 511, 432,
	709, 710, 0, 711, 0, 433, 434, 0, 712, 0,
	435, 436, 437, 0, 438, 0, 0, 0, 439, 440,
	441, 442, 443, 444, 0, 445, 447, 446, 0, 448,
	713, 0, 449, 450, 0, 0, 451, 452, 453, 454,
	455, 456, 459, 0, 0, 457, 458, 460, 461, 0,
	462, 463, 465, 468, 464, 466, 467, 469, 482, 483,
	470, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 485, 0, 484, 0, 486, 487, 488, 489,
	490, 497, 499, 500, 495, 496, 498, 501, 502, 504,
	492, 493, 494, 0, 503, 491, 0, 0, 0, 505,
	506, 507, 508, 0, 714, 509, 715, 512, 513, 0,
	0, 514, 0, 515, 0, 0, 517, 518, 519, 0,
	0, 520, 521, 716, 0, 522, 0, 717, 523, 524,
	516, 525, 526, 527, 528, 529, 530, 531, 532, 533,
	0, 534, 535, 718, 536, 537, 538, 719, 539, 540,
	541, 720, 542, 721, 543, 544, 0, 545, 546, 547,
	0, 548, 549, 550, 551, 552, 553, 554, 555, 722,
	556, 557, 559, 558, 560, 0, 561, 0, 562, 563,
	564, 0, 0, 0, 0, 0, 565, 566, 568, 0,
	569, 570, 571, 572, 567, 573, 574, 575, 576, 577,
	0, 578, 579, 580, 0, 581, 582, 583, 584, 585,
	723, 586, 0, 587, 588, 595, 596, 597, 589, 590,
	591, 598, 599, 600, 601, 602, 0, 604, 605, 603,
	606, 607, 608, 0, 609, 610, 592, 593, 611, 612,
	0, 613, 614, 615, 616, 617, 618, 619, 724, 0,
	620, 0, 621, 622, 623, 624, 625, 627, 594, 628,
	633, 634, 725, 629, 630, 631, 632, 726, 636, 637,
	638, 0, 639, 640, 0, 635, 626, 0, 641, 642,
	643, 644, 645, 646, 0, 647, 648, 0, 649, 727,
	728, 729, 730, 0, 659, 0, 650, 651, 652, 653,
	731, 654, 732, 0, 655, 656, 657, 658, 0, 660,
	661, 0, 0, 662, 663, 665, 667, 668, 664, 666,
	669, 0, 670, 0, 0, 671, 672, 673, 733, 734,
	735, 0, 675, 674, 676, 677, 678, 736, 679, 680,
	290, 0, 0, 0, 681, 682, 737, 683, 684, 685,
	0, 0, 0, 0, 0, 0, 0, 296, 297, 299,
	298, 300, 301, 302, 303, 0, 304, 305, 0, 0,
	0, 0, 0, 686, 0, 0, 0, 306, 0, 307,
	308, 0, 309, 310, 311, 312, 313, 314, 315, 687,
	688, 0, 316, 689, 317, 690, 0, 691, 318, 319,
	320, 321, 322, 323, 0, 0, 0, 324, 692, 693,
	694, 0, 325, 326, 695, 0, 0, 0, 327, 328,
	329, 330, 331, 332, 333, 334, 0, 0, 336, 337,
	338, 335, 339, 0, 340, 0, 341, 342, 343, 344,
	345, 346, 0, 347, 348, 349, 0, 350, 351, 352,
	0, 0, 0, 0, 0, 0, 0, 353, 354, 355,
	356, 357, 0, 358, 360, 696, 697, 0, 363, 359,
	361, 0, 364, 362, 365, 0, 366, 367, 368, 0,
	0, 369, 370, 371, 0, 372, 373, 374, 0, 375,
	376, 377, 0, 378, 379, 698, 380, 381, 382, 384,
	386, 383, 385, 387, 388, 389, 390, 699, 700, 391,
	0, 0, 0, 0, 0, 0, 0, 392, 393, 394,
	701, 0, 0, 0, 395, 0, 396, 397, 398, 0,
	399, 400, 0, 0, 401, 402, 403, 702, 703, 404,
	405, 406, 407, 408, 409, 410, 411, 412, 0, 413,
	704, 0, 705, 414, 0, 415, 416, 417, 418, 419,
	420, 421, 3694, 707, 708, 510, 0, 422, 423, 0,
	424, 425, 426, 427, 428, 0, 0, 0, 0, 429,
	430, 431, 0, 0, 511, 432, 709, 710, 0, 711,
	0, 433, 434, 0, 712, 0, 435, 436, 437, 0,
	438, 0, 0, 0, 439, 440, 441, 442, 443, 444,
	0, 445, 447, 446, 0, 448, 713, 0, 449, 450,
	0, 0, 451, 452, 453, 454, 455, 456, 459, 0,
	0, 457, 458, 460, 461, 0, 462, 463, 465, 468,
	464, 466, 467, 469, 482, 483, 470, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 485, 0,
	484, 0, 486, 487, 488, 489, 490, 497, 499, 500,
	495, 496, 498, 501, 502, 504, 492, 493, 494, 0,
	503, 491, 0, 0, 0, 505, 506, 507, 508, 0,
	714, 509, 715, 512, 513, 0, 0, 514, 0, 515,
	0, 0, 517, 518, 519, 0, 0, 520, 521, 716,
	0, 522, 0, 717, 523, 524, 516, 525, 526, 527,
	528, 529, 530, 531, 532, 533, 0, 534, 535, 718,
	536, 537, 538, 719, 539, 540, 541, 720, 542, 721,
	543, 544, 0, 545, 546, 547, 0, 548, 549, 550,
	551, 552, 553, 554, 555, 722, 556, 557, 559, 558,
	560, 0, 561, 0, 562, 563, 564, 0, 0, 0,
	0, 0, 565, 566, 568, 0, 569, 570, 571, 572,
	567, 573, 574, 575, 576, 577, 0, 578, 579, 580,
	0, 581, 582, 583, 584, 585, 723, 586, 0, 587,
	588, 595, 596, 597, 589, 590, 591, 598, 599, 600,
	601, 602, 0, 604, 605, 603, 606, 607, 608, 0,
	609, 610, 592, 593, 611, 612, 0, 613, 614, 615,
	616, 617, 618, 619, 724, 0, 620, 0, 621, 622,
	623, 624, 625, 627, 594, 628, 633, 634, 725, 629,
	630, 631, 632, 726, 636, 637, 638, 0, 639, 640,
	0, 635, 626, 0, 641, 642, 643, 644, 645, 646,
	0, 647, 648, 0, 649, 727, 728, 729, 730, 0,
	659, 0, 650, 651, 652, 653, 731, 654, 732, 0,
	655, 656, 657, 658, 0, 660, 661, 0, 0, 662,
	663, 665, 667, 668, 664, 666, 669, 0, 670, 0,
	0, 671, 672, 673, 733, 734, 735, 0, 675, 674,
	676, 677, 678, 736, 679, 680, 290, 0, 0, 0,
	681, 682, 737, 683, 684, 685, 0, 0, 0, 0,
	0, 0, 0, 296, 297, 299, 298, 300, 301, 302,
	303, 0, 304, 305, 0, 0, 0, 0, 0, 686,
	0, 0, 0, 306, 0, 307, 308, 0, 309, 310,
	311, 312, 313, 314, 315, 687, 688, 0, 316, 689,
	317, 690, 0, 691, 318, 319, 320, 321, 322, 323,
	0, 0, 0, 324, 692, 693, 694, 0, 325, 326,
	695, 0, 0, 0, 327, 328, 329, 330, 331, 332,
	333, 334, 0, 0, 336, 337, 338, 335, 339, 0,
	340, 0, 341, 342, 343, 344, 345, 346, 0, 347,
	348, 349, 0, 350, 351, 352, 0, 0, 0, 0,
	0, 0, 0, 353, 354, 355, 356, 357, 0, 358,
	360, 696, 697, 0, 363, 359, 361, 0, 364, 362,
	365, 0, 366, 367, 368, 0, 0, 369, 370, 371,
	0, 372, 373, 374, 0, 375, 376, 377, 0, 378,
	379, 698, 380, 381, 382, 384, 386, 383, 385, 387,
	388, 389, 390, 699, 700, 391, 0, 0, 0, 0,
	0, 0, 0, 392, 393, 394, 701, 0, 0, 0,
	395, 0, 396, 397, 398, 0, 399, 400, 0, 0,
	401, 402, 403, 702, 703, 404, 405, 406, 407, 408,
	409, 410, 411, 412, 0, 413, 704, 0, 705, 414,
	0, 415, 416, 417, 418, 419, 420, 421, 3692, 707,
	708, 510, 0, 422, 423, 0, 424, 425, 426, 427,
	428, 0, 0, 0, 0, 429, 430, 431, 0, 0,
	511, 432, 709, 710, 0, 711, 0, 433, 434, 0,
	712, 0, 435, 436, 437, 0, 438, 0, 0, 0,
	439, 440, 441, 442, 443, 444, 0, 445, 447, 446,
	0, 448, 713, 0, 449, 450, 0, 0, 451, 452,
	453, 454, 455, 456, 459, 0, 0, 457, 458, 460,
	461, 0, 462, 463, 465, 468, 464, 466, 467, 469,
	482, 483, 470, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 485, 0, 484, 0, 486, 487,
	488, 489, 490, 497, 499, 500, 495, 496, 498, 501,
	502, 504, 492, 493, 494, 0, 503, 491, 0, 0,
	0, 505, 506, 507, 508, 0, 714, 509, 715, 512,
	513, 0, 0, 514, 0, 515, 0, 0, 517, 518,
	519, 0, 0, 520, 521, 716, 0, 522, 0, 717,
	523, 524, 516, 525, 526, 527, 528, 529, 530, 531,
	532, 533, 0, 534, 535, 718, 536, 537, 538, 719,
	539, 540, 541, 720, 542, 721, 543, 544, 0, 545,
	546, 547, 0, 548, 549, 550, 551, 552, 553, 554,
	555, 722, 556, 557, 559, 558, 560, 0, 561, 0,
	562, 563, 564, 0, 0, 0, 0, 0, 565, 566,
	568, 0, 569, 570, 571, 572, 567, 573, 574, 575,
	576, 577, 0, 578, 579, 580, 0, 581, 582, 583,
	584, 585, 723, 586, 0, 587, 588, 595, 596, 597,
	589, 590, 591, 598, 599, 600, 601, 602, 0, 604,
	605, 603, 606, 607, 608, 0, 609, 610, 592, 593,
	611, 612, 0, 613, 614, 615, 616, 617, 618, 619,
	724, 0, 620, 0, 621, 622, 623, 624, 625, 627,
	594, 628, 633, 634, 725, 629, 630, 631, 632, 726,
	636, 637, 638, 0, 639, 640, 0, 635, 626, 0,
	641, 642, 643, 644, 645, 646, 0, 647, 648, 0,
	649, 727, 728, 729, 730, 0, 659, 0, 650, 651,
	652, 653, 731, 654, 732, 0, 655, 656, 657, 658,
	0, 660, 661, 0, 0, 662, 663, 665, 667, 668,
	664, 666, 669, 0, 670, 0, 0, 671, 672, 673,
	733, 734, 735, 0, 675, 674, 676, 677, 678, 736,
	679, 680, 290, 0, 0, 0, 681, 682, 737, 683,
	684, 685, 0, 0, 0, 0, 0, 0, 0, 296,
	297, 299, 298, 300, 301, 302, 303, 0, 304, 305,
	0, 0, 0, 0, 0, 686, 0, 0, 0, 306,
	0, 307, 308, 0, 309, 310, 311, 312, 313, 314,
	315, 687, 688, 0, 316, 689, 317, 690, 0, 691,
	318, 319, 320, 321, 322, 323, 0, 0, 0, 324,
	692, 693, 694, 0, 325, 326, 695, 0, 0, 0,
	327, 328, 329, 330, 331, 332, 333, 334, 0, 0,
	336, 337, 338, 335, 339, 0, 340, 0, 341, 342,
	343, 344, 345, 346, 0, 347, 348, 349, 0, 350,
	351, 352, 0, 0, 0, 0, 0, 0, 0, 353,
	354, 355, 356, 357, 0, 358, 360, 696, 697, 0,
	363, 359, 361, 0, 364, 362, 365, 0, 366, 367,
	368, 0, 0, 369, 370, 371, 0, 372, 373, 374,
	0, 375, 376, 377, 0, 378, 379, 698, 380, 381,
	382, 384, 386, 383, 385, 387, 388, 389, 390, 699,
	700, 391, 0, 0, 0, 0, 0, 0, 0, 392,
	393, 394, 701, 0, 0, 0, 395, 0, 396, 397,
	398, 0, 399, 400, 0, 0, 401, 402, 403, 702,
	703, 404, 405, 406, 407, 408, 409, 410, 411, 412,
	0, 413, 704, 0, 705, 414, 0, 415, 416, 417,
	418, 419, 420, 421, 3680, 707, 708, 510, 0, 422,
	423, 0, 424, 425, 426, 427, 428, 0, 0, 0,
	0, 429, 430, 431, 0, 0, 511, 432, 709, 710,
	0, 711, 0, 433, 434, 0, 712, 0, 435, 436,
	437, 0, 438, 0, 0, 0, 439, 440, 441, 442,
	443, 444, 0, 445, 447, 446, 0, 448, 713, 0,
	449, 450, 0, 0, 451, 452, 453, 454, 455, 456,
	459, 0, 0, 457, 458, 460, 461, 0, 462, 463,
	465, 468, 464, 466, 467, 469, 482, 483, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	485, 0, 484, 0, 486, 487, 488, 489, 490, 497,
	499, 500, 495, 496, 498, 501, 502, 504, 492, 493,
	494, 0, 503, 491, 0, 0, 0, 505, 506, 507,
	508, 0, 714, 509, 715, 512, 513, 0, 0, 514,
	0, 515, 0, 0, 517, 518, 519, 0, 0, 520,
	521, 716, 0, 522, 0, 717, 523, 524, 516, 525,
	526, 527, 528, 529, 530, 531, 532, 533, 0, 534,
	535, 718, 536, 537, 538, 719, 539, 540, 541, 720,
	542, 721, 543, 544, 0, 545, 546, 547, 0, 548,
	549, 550, 551, 552, 553, 554, 555, 722, 556, 557,
	559, 558, 560, 0, 561, 0, 562, 563, 564, 0,
	0, 0, 0, 0, 565, 566, 568, 0, 569, 570,
	571, 572, 567, 573, 574, 575, 576, 577, 0, 578,
	579, 580, 0, 581, 582, 583, 584, 585, 723, 586,
	0, 587, 588, 595, 596, 597, 589, 590, 591, 598,
	599, 600, 601, 602, 0, 604, 605, 603, 606, 607,
	608, 0, 609, 610, 592, 593, 611, 612, 0, 613,
	614, 615, 616, 617, 618, 619, 724, 0, 620, 0,
	621, 622, 623, 624, 625, 627, 594, 628, 633, 634,
	725, 629, 630, 631, 632, 726, 636, 637, 638, 0,
	639, 640, 0, 635, 626, 0, 641, 642, 643, 644,
	645, 646, 0, 647, 648, 0, 649, 727, 728, 729,
	730, 0, 659, 0, 650, 651, 652, 653, 731, 654,
	732, 0, 655, 656, 657, 658, 0, 660, 661, 0,
	0, 662, 663, 665, 667, 668, 664, 666, 669, 0,
	670, 0, 0, 671, 672, 673, 733, 734, 735, 0,
	675, 674, 676, 677, 678, 736, 679, 680, 290, 0,
	0, 0, 681, 682, 737, 683, 684, 685, 0, 0,
	0, 0, 0, 0, 0, 296, 297, 299, 298, 300,
	301, 302, 303, 0, 304, 305, 0, 0, 0, 0,
	0, 686, 0, 0, 0, 306, 0, 307, 308, 0,
	309, 310, 311, 312, 313, 314, 315, 687, 688, 0,
	316, 689, 317, 690, 0, 691, 318, 319, 320, 321,
	322, 323, 0, 0, 0, 324, 692, 693, 694, 0,
	325, 326, 695, 0, 0, 0, 327, 328, 329, 330,
	331, 332, 333, 334, 0, 0, 336, 337, 338, 335,
	339, 0, 340, 0, 341, 342, 343, 344, 345, 346,
	0, 347, 348, 349, 0, 350, 351, 352, 0, 0,
	0, 0, 0, 0, 0, 353, 354, 355, 356, 357,
	0, 358, 360, 696, 697, 0, 363, 359, 361, 0,
	364, 362, 365, 0, 366, 367, 368, 0, 0, 369,
	370, 371, 0, 372, 373, 374, 0, 375, 376, 377,
	0, 378, 379, 698, 380, 381, 382, 384, 386, 383,
	385, 387, 388, 389, 390, 699, 700, 391, 0, 0,
	0, 0, 0, 0, 0, 392, 393, 394, 701, 0,
	0, 0, 395, 0, 396, 397, 398, 0, 399, 400,
	0, 0, 401, 402, 403, 702, 703, 404, 405, 406,
	407, 408, 409, 410, 411, 412, 0, 413, 704, 0,
	705, 414, 0, 415, 416, 417, 418, 419, 420, 421,
	3677, 707, 708, 510, 0, 422, 423, 0, 424, 425,
	426, 427, 428, 0, 0, 0, 0, 429, 430, 431,
	0, 0, 511, 432, 709, 710, 0, 711, 0, 433,
	434, 0, 712, 0, 435, 436, 437, 0, 438, 0,
	0, 0, 439, 440, 441, 442, 443, 444, 0, 445,
	447, 446, 0, 448, 713, 0, 449, 450, 0, 0,
	451, 452, 453, 454, 455, 456, 459, 0, 0, 457,
	458, 460, 461, 0, 462, 463, 465, 468, 464, 466,
	467, 469, 482, 483, 470, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 485, 0, 484, 0,
	486, 487, 488, 489, 490, 497, 499, 500, 495, 496,
	498, 501, 502, 504, 492, 493, 494, 0, 503, 491,
	0, 0, 0, 505, 506, 507, 508, 0, 714, 509,
	715, 512, 513, 0, 0, 514, 0, 515, 0, 0,
	517, 518, 519, 0, 0, 520, 521, 716, 0, 522,
	0, 717, 523, 524, 516, 525, 526, 527, 528, 529,
	530, 531, 532, 533, 0, 534, 535, 718, 536, 537,
	538, 719, 539, 540, 541, 720, 542, 721, 543, 544,
	0, 545, 546, 547, 0, 548, 549, 550, 551, 552,
	553, 554, 555, 722, 556, 557, 559, 558, 560, 0,
	561, 0, 562, 563, 564, 0, 0, 0, 0, 0,
	565, 566, 568, 0, 569, 570, 571, 572, 567, 573,
	574, 575, 576, 577, 0, 578, 579, 580, 0, 581,
	582, 583, 584, 585, 723, 586, 0, 587, 588, 595,
	596, 597, 589, 590, 591, 598, 599, 600, 601, 602,
	0, 604, 605, 603, 606, 607, 608, 0, 609, 610,
	592, 593, 611, 612, 0, 613, 614, 615, 616, 617,
	618, 619, 724, 0, 620, 0, 621, 622, 623, 624,
	625, 627, 594, 628, 633, 634, 725, 629, 630, 631,
	632, 726, 636, 637, 638, 0, 639, 640, 0, 635,
	626, 0, 641, 642, 643, 644, 645, 646, 0, 647,
	648, 0, 649, 727, 728, 729, 730, 0, 659, 0,
	650, 651, 652, 653, 731, 654, 732, 0, 655, 656,
	657, 658, 0, 660, 661, 0, 0, 662, 663, 665,
	667, 668, 664, 666, 669, 0, 670, 0, 0, 671,
	672, 673, 733, 734, 735, 0, 675, 674, 676, 677,
	678, 736, 679, 680, 290, 0, 0, 0, 681, 682,
	737, 683, 684, 685, 0, 0, 0, 0, 0, 0,
	0, 296, 297, 299, 298, 300, 301, 302, 303, 0,
	304, 305, 0, 0, 0, 0, 0, 686, 0, 0,
	0, 306, 0, 307, 308, 0, 309, 310, 311, 312,
	313, 314, 315, 687, 688, 0, 316, 689, 317, 690,
	0, 691, 318, 319, 320, 321, 322, 323, 0, 0,
	0, 324, 692, 693, 694, 0, 325, 326, 695, 0,
	0, 0, 327, 328, 329, 330, 331, 332, 333, 334,
	0, 0, 336, 337, 338, 335, 339, 0, 340, 0,
	341, 342, 343, 344, 345, 346, 0, 347, 348, 349,
	0, 350, 351, 352, 0, 0, 0, 0, 0, 0,
	0, 353, 354, 355, 356, 357, 0, 358, 360, 696,
	697, 0, 363, 359, 361, 0, 364, 362, 365, 0,
	366, 367, 368, 0, 0, 369, 370, 371, 0, 372,
	373, 374, 0, 375, 376, 377, 0, 378, 379, 698,
	380, 381, 382, 384, 386, 383, 385, 387, 388, 389,
	390, 699, 700, 391, 0, 0, 0, 0, 0, 0,
	0, 392, 393, 394, 701, 0, 0, 0, 395, 0,
	396, 397, 398, 0, 399, 400, 0, 0, 401, 402,
	403, 702, 703, 404, 405, 406, 407, 408, 409, 410,
	411, 412, 0, 413, 704, 0, 705, 414, 0, 415,
	416, 417, 418, 419, 420, 421, 3275, 707, 708, 510,
	0, 422, 423, 0, 424, 425, 426, 427, 428, 0,
	0, 0, 0, 429, 430, 431, 0, 0, 511, 432,
	709, 710, 0, 711, 0, 433, 434, 0, 712, 0,
	435, 436, 437, 0, 438, 0, 0, 0, 439, 440,
	441, 442, 443, 444, 0, 445, 447, 446, 0, 448,
	713, 0, 449, 450, 0, 0, 451, 452, 453, 454,
	455, 456, 459, 0, 0, 457, 458, 460, 461, 0,
	462, 463, 465, 468, 464, 466, 467, 469, 482, 483,
	470, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 485, 0, 484, 0, 486, 487, 488, 489,
	490, 497, 499, 500, 495, 496, 498, 501, 502, 504,
	492, 493, 494, 0, 503, 491, 0, 0, 0, 505,
	506, 507, 508, 0, 714, 509, 715, 512, 513, 0,
	0, 514, 0, 515, 0, 0, 517, 518, 519, 0,
	0, 520, 521, 716, 0, 522, 0, 717, 523, 524,
	516, 525, 526, 527, 528, 529, 530, 531, 532, 533,
	0, 534, 535, 718, 536, 537, 538, 719, 539, 540,
	541, 720, 542, 721, 543, 544, 0, 545, 546, 547,
	0, 548, 549, 550, 551, 552, 553, 554, 555, 722,
	556, 557, 559, 558, 560, 0, 561, 0, 562, 563,
	564, 0, 0, 0, 0, 0, 565, 566, 568, 0,
	569, 570, 571, 572, 567, 573, 574, 575, 576, 577,
	0, 578, 579, 580, 0, 581, 582, 583, 584, 585,
	723, 586, 0, 587, 588, 595, 596, 597, 589, 590,
	591, 598, 599, 600, 601, 602, 0, 604, 605, 603,
	606, 607, 608, 0, 609, 610, 592, 593, 611, 612,
	0, 613, 614, 615, 616, 617, 618, 619, 724, 0,
	620, 0, 621, 622, 623, 624, 625, 627, 594, 628,
	633, 634, 725, 629, 630, 631, 632, 726, 636, 637,
	638, 0, 639, 640, 0, 635, 626, 0, 641, 642,
	643, 644, 645, 646, 0, 647, 648, 0, 649, 727,
	728, 729, 730, 0, 659, 0, 650, 651, 652, 653,
	731, 654, 732, 0, 655, 656, 657, 658, 0, 660,
	661, 0, 0, 662, 663, 665, 667, 668, 664, 666,
	669, 0, 670, 0, 0, 671, 672, 673, 733, 734,
	735, 0, 675, 674, 676, 677, 678, 736, 679, 680,
	290, 0, 0, 0, 681, 682, 737, 683, 684, 685,
	0, 0, 0, 0, 0, 0, 0, 296, 297, 299,
	298, 300, 301, 302, 303, 0, 304, 305, 0, 0,
	0, 0, 0, 686, 0, 0, 0, 306, 0, 307,
	308, 0, 309, 310, 311, 312, 313, 314, 315, 687,
	688, 0, 316, 689, 317, 690, 0, 691, 318, 319,
	320, 321, 322, 323, 0, 0, 0, 324, 692, 693,
	694, 0, 325, 326, 695, 0, 0, 0, 327, 328,
	329, 330, 331, 332, 333, 334, 0, 0, 336, 337,
	338, 335, 339, 0, 340, 0, 341, 342, 343, 344,
	345, 346, 0, 347, 348, 349, 0, 350, 351, 352,
	0, 0, 0, 0, 0, 0, 0, 353, 354, 355,
	356, 357, 0, 358, 360, 696, 697, 0, 363, 359,
	361, 0, 364, 362, 365, 0, 366, 367, 368, 0,
	0, 369, 370, 371, 0, 372, 373, 374, 0, 375,
	376, 377, 0, 378, 379, 698, 380, 381, 382, 384,
	386, 383, 385, 387, 388, 389, 390, 699, 700, 391,
	0, 0, 0, 0, 0, 0, 0, 392, 393, 394,
	701, 0, 0, 0, 395, 0, 396, 397, 398, 0,
	399, 400, 0, 0, 401, 402, 403, 702, 703, 404,
	405, 406, 407, 408, 409, 410, 411, 412, 0, 413,
	704, 0, 705, 414, 0, 415, 416, 417, 418, 419,
	420, 421, 706, 707, 708, 510, 0, 422, 423, 0,
	424, 425, 426, 427, 428, 0, 0, 0, 0, 429,
	430, 431, 0, 0, 511, 432, 709, 710, 0, 711,
	0, 433, 434, 0, 712, 0, 435, 436, 437, 0,
	438, 0, 0, 0, 439, 440, 441, 442, 443, 444,
	0, 445, 447, 446, 0, 448, 713, 0, 449, 450,
	0, 0, 451, 452, 453, 454, 455, 456, 459, 0,
	0, 457, 458, 460, 461, 0, 462, 463, 465, 468,
	464, 466, 467, 469, 482, 483, 470, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 485, 0,
	484, 0, 486, 487, 488, 489, 490, 497, 499, 500,
	495, 496, 498, 501, 502, 504, 492, 493, 494, 0,
	503, 491, 0, 0, 0, 505, 506, 507, 508, 0,
	714, 509, 715, 512, 513, 0, 0, 514, 0, 515,
	0, 0, 517, 518, 519, 0, 0, 520, 521, 716,
	0, 522, 0, 717, 523, 524, 516, 525, 526, 527,
	528, 529, 530, 531, 532, 533, 0, 534, 535, 718,
	536, 537, 538, 719, 539, 540, 541, 720, 542, 721,
	543, 544, 0, 545, 546, 547, 0, 548, 549, 550,
	551, 552, 553, 554, 555, 722, 556, 557, 559, 558,
	560, 0, 561, 0, 562, 563, 564, 0, 0, 0,
	0, 0, 565, 566, 568, 0, 569, 570, 571, 572,
	567, 573, 574, 575, 576, 577, 0, 578, 579, 580,
	0, 581, 582, 583, 584, 585, 723, 586, 0, 587,
	588, 810, 596, 597, 589, 590, 591, 598, 599, 600,
	601, 602, 0, 604, 605, 603, 606, 607, 608, 0,
	609, 610, 592, 593, 611, 612, 0, 613, 614, 615,
	616, 617, 618, 619, 724, 0, 620, 0, 621, 622,
	623, 624, 625, 627, 594, 628, 633, 634, 725, 629,
	630, 631, 632, 726, 636, 637, 638, 0, 639, 640,
	0, 635, 626, 0, 641, 642, 643, 644, 645, 646,
	0, 647, 648, 0, 649, 727, 728, 729, 730, 0,
	659, 0, 650, 651, 652, 653, 731, 654, 732, 0,
	655, 656, 657, 658, 0, 660, 661, 0, 0, 662,
	663, 665, 667, 668, 664, 666, 669, 0, 670, 0,
	0, 671, 672, 673, 733, 734, 735, 0, 675, 674,
	676, 677, 678, 736, 679, 680, 290, 0, 0, 0,
	681, 682, 737, 683, 684, 685, 0, 0, 0, 0,
	0, 0, 0, 296, 297, 299, 298, 300, 301, 302,
	303, 0, 304, 305, 0, 0, 0, 0, 0, 686,
	0, 2479, 0, 306, 0, 307, 308, 0, 309, 310,
	311, 312, 313, 314, 315, 687, 688, 0, 316, 689,
	317, 690, 0, 691, 318, 319, 320, 321, 322, 323,
	0, 0, 0, 324, 692, 693, 694, 0, 325, 326,
	695, 0, 0, 0, 327, 328, 329, 330, 331, 332,
	333, 334, 0, 0, 336, 337, 338, 335, 339, 0,
	340, 0, 341, 342, 343, 344, 345, 346, 0, 347,
	348, 349, 0, 350, 351, 352, 0, 0, 0, 0,
	0, 0, 0, 353, 354, 355, 356, 357, 0, 358,
	360, 696, 697, 0, 363, 359, 361, 0, 364, 362,
	365, 0, 366, 367, 368, 0, 0, 369, 370, 371,
	0, 372, 373, 374, 0, 375, 376, 377, 0, 378,
	379, 698, 380, 381, 382, 384, 386, 383, 385, 387,
	388, 389, 390, 699, 700, 391, 0, 0, 0, 0,
	0, 0, 0, 392, 393, 394, 701, 0, 0, 0,
	395, 0, 396, 397, 398, 0, 399, 400, 0, 0,
	401, 402, 403, 702, 703, 404, 405, 406, 407, 408,
	409, 410, 411, 412, 0, 413, 704, 0, 705, 414,
	0, 415, 416, 417, 418, 419, 420, 421, 706, 707,
	708, 510, 0, 422, 423, 0, 424, 425, 426, 427,
	428, 0, 0, 0, 0, 429, 430, 431, 0, 0,
	511, 432, 709, 710, 0, 711, 0, 433, 434, 0,
	712, 0, 435, 436, 437, 0, 438, 0, 0, 0,
	439, 440, 441, 442, 443, 444, 0, 445, 447, 446,
	0, 448, 713, 0, 449, 450, 0, 0, 451, 452,
	453, 454, 455, 456, 459, 0, 0, 457, 458, 460,
	461, 0, 462, 463, 465, 468, 464, 466, 467, 469,
	482, 483, 470, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 485, 0, 484, 0, 486, 487,
	488, 489, 490, 497, 499, 500, 495, 496, 498, 501,
	502, 504, 492, 493, 494, 0, 503, 491, 0, 0,
	0, 505, 506, 507, 508, 0, 714, 509, 715, 512,
	513, 0, 0, 514, 0, 515, 0, 0, 517, 518,
	519, 0, 0, 520, 521, 716, 0, 522, 0, 717,
	523, 524, 516, 525, 526, 527, 528, 529, 530, 531,
	532, 533, 0, 534, 535, 718, 536, 537, 538, 719,
	539, 540, 541, 720, 542, 721, 543, 544, 0, 545,
	546, 547, 0, 548, 549, 550, 551, 552, 553, 554,
	555, 722, 556, 557, 559, 558, 560, 0, 561, 0,
	562, 563, 564, 0, 0, 0, 0, 0, 565, 566,
	568, 0, 569, 570, 571, 572, 567, 573, 574, 575,
	576, 577, 0, 578, 579, 580, 0, 581, 582, 583,
	584, 585, 723, 586, 0, 587, 588, 595, 596, 597,
	589, 590, 591, 598, 599, 600, 601, 602, 0, 604,
	605, 603, 606, 607, 608, 0, 0, 610, 592, 593,
	611, 612, 0, 613, 614, 615, 616, 617, 618, 619,
	724, 0, 620, 0, 621, 622, 623, 624, 625, 627,
	594, 628, 633, 634, 725, 629, 630, 631, 632, 726,
	636, 637, 638, 0, 639, 640, 0, 635, 626, 0,
	641, 642, 643, 644, 645, 646, 0, 647, 648, 0,
	649, 727, 728, 729, 730, 0, 659, 0, 650, 651,
	652, 653, 731, 654, 732, 0, 655, 656, 657, 658,
	0, 660, 661, 0, 0, 662, 663, 665, 667, 668,
	664, 666, 669, 0, 670, 0, 0, 671, 672, 673,
	733, 734, 735, 0, 675, 674, 676, 677, 678, 736,
	679, 680, 290, 0, 0, 0, 681, 682, 737, 683,
	684, 685, 0, 0, 0, 0, 0, 0, 0, 296,
	297, 299, 298, 300, 301, 302, 303, 0, 304, 305,
	0, 0, 0, 0, 0, 686, 0, 0, 0, 306,
	0, 307, 308, 0, 309, 310, 311, 312, 313, 314,
	315, 687, 688, 0, 316, 689, 317, 690, 0, 691,
	318, 319, 320, 321, 322, 323, 0, 0, 0, 324,
	692, 693, 694, 0, 325, 326, 695, 0, 0, 0,
	327, 328, 329, 330, 331, 332, 333, 334, 0, 0,
	336, 337, 338, 335, 339, 0, 340, 0, 341, 342,
	343, 344, 345, 346, 0, 347, 348, 349, 0, 350,
	351, 352, 0, 0, 0, 0, 0, 0, 0, 353,
	354, 355, 356, 357, 0, 358, 360, 696, 697, 0,
	363, 359, 361, 0, 364, 362, 365, 0, 366, 367,
	368, 0, 0, 369, 370, 371, 0, 372, 373, 374,
	0, 375, 376, 377, 0, 378, 379, 698, 380, 381,
	382, 384, 386, 383, 385, 387, 388, 389, 390, 699,
	700, 391, 0, 0, 0, 0, 0, 0, 0, 392,
	393, 394, 701, 0, 0, 0, 395, 0, 396, 397,
	398, 0, 399, 400, 0, 0, 401, 402, 403, 702,
	703, 404, 405, 406, 407, 408, 409, 410, 411, 412,
	0, 413, 704, 0, 705, 414, 0, 415, 416, 417,
	418, 419, 420, 421, 1383, 707, 708, 510, 0, 422,
	423, 0, 424, 425, 426, 427, 428, 0, 0, 0,
	0, 429, 430, 431, 0, 0, 511, 432, 709, 710,
	0, 711, 0, 433, 434, 0, 712, 0, 435, 436,
	437, 0, 438, 0, 0, 0, 439, 440, 441, 442,
	443, 444, 0, 445, 447, 446, 0, 448, 713, 0,
	449, 450, 0, 0, 451, 452, 453, 454, 455, 456,
	459, 0, 0, 457, 458, 460, 461, 0, 462, 463,
	465, 468, 464, 466, 467, 469, 482, 483, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	485, 0, 484, 0, 486, 487, 488, 489, 490, 497,
	499, 500, 495, 496, 498, 501, 502, 504, 492, 493,
	494, 0, 503, 491, 0, 0, 0, 505, 506, 507,
	508, 0, 714, 509, 715, 512, 513, 0, 0, 514,
	0, 515, 0, 0, 517, 518, 519, 0, 0, 520,
	521, 716, 0, 522, 0, 717, 523, 524, 516, 525,
	526, 527, 528, 529, 530, 531, 532, 533, 0, 534,
	535, 718, 536, 537, 538, 719, 539, 540, 541, 720,
	542, 721, 543, 544, 0, 545, 546, 547, 0, 548,
	549, 550, 551, 552, 553, 554, 555, 722, 556, 557,
	559, 558, 560, 0, 561, 0, 562, 563, 564, 0,
	0, 0, 0, 0, 565, 566, 568, 0, 569, 570,
	571, 572, 567, 573, 574, 575, 576, 577, 0, 578,
	579, 580, 0, 581, 582, 583, 584, 585, 723, 586,
	0, 587, 588, 595, 596, 597, 589, 590, 591, 598,
	599, 600, 601, 602, 0, 604, 605, 603, 606, 607,
	608, 0, 609, 610, 592, 593, 611, 612, 0, 613,
	614, 615, 616, 617, 618, 619, 724, 0, 620, 0,
	621, 622, 623, 624, 625, 627, 594, 628, 633, 634,
	725, 629, 630, 631, 632, 726, 636, 637, 638, 0,
	639, 640, 0, 635, 626, 0, 641, 642, 643, 644,
	645, 646, 0, 647, 648, 0, 649, 727, 728, 729,
	730, 0, 659, 0, 650, 651, 652, 653, 731, 654,
	732, 0, 655, 656, 657, 658, 0, 660, 661, 0,
	0, 662, 663, 665, 667, 668, 664, 666, 669, 0,
	670, 0, 0, 671, 672, 673, 733, 734, 735, 0,
	675, 674, 676, 677, 678, 736, 679, 680, 290, 0,
	0, 0, 681, 682, 737, 683, 684, 685, 0, 0,
	0, 0, 0, 0, 0, 296, 297, 299, 298, 300,
	301, 302, 303, 0, 304, 305, 0, 0, 0, 0,
	0, 686, 0, 0, 0, 306, 0, 307, 308, 0,
	309, 310, 311, 312, 313, 314, 315, 687, 688, 0,
	316, 689, 317, 690, 0, 691, 318, 319, 320, 321,
	322, 323, 0, 0, 0, 324, 692, 693, 694, 0,
	325, 326, 695, 0, 0, 0, 327, 328, 329, 330,
	331, 332, 333, 334, 0, 0, 336, 337, 338, 335,
	339, 0, 340, 0, 341, 342, 343, 344, 345, 346,
	0, 347, 348, 349, 0, 350, 351, 352, 0, 0,
	0, 0, 0, 0, 0, 353, 354, 355, 356, 357,
	0, 358, 360, 696, 697, 0, 363, 359, 361, 0,
	364, 362, 365, 0, 366, 367, 368, 0, 0, 369,
	370, 371, 0, 372, 373, 374, 0, 375, 376, 377,
	0, 378, 379, 698, 380, 381, 382, 384, 386, 383,
	385, 387, 388, 389, 390, 699, 700, 391, 0, 0,
	0, 0, 0, 0, 0, 392, 393, 394, 701, 0,
	0, 0, 395, 0, 396, 397, 398, 0, 399, 400,
	0, 0, 401, 402, 403, 702, 703, 404, 405, 406,
	407, 408, 409, 410, 411, 412, 0, 413, 704, 0,
	705, 414, 0, 415, 416, 417, 418, 419, 420, 421,
	706, 707, 708, 510, 0, 422, 423, 0, 424, 425,
	426, 427, 428, 0, 0, 0, 0, 429, 430, 431,
	0, 0, 511, 432, 709, 710, 0, 711, 0, 433,
	434, 0, 712, 0, 435, 436, 437, 0, 438, 0,
	0, 0, 439, 440, 441, 442, 443, 444, 0, 445,
	447, 446, 0, 448, 713, 0, 449, 450, 0, 0,
	451, 452, 453, 454, 455, 456, 459, 0, 0, 457,
	458, 460, 461, 0, 462, 463, 465, 468, 464, 466,
	467, 469, 482, 483, 470, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 485, 0, 484, 0,
	486, 487, 488, 489, 490, 497, 499, 500, 495, 496,
	498, 501, 502, 504, 492, 493, 494, 0, 503, 491,
	0, 0, 0, 505, 506, 507, 508, 0, 714, 509,
	715, 512, 513, 0, 0, 514, 0, 515, 0, 0,
	517, 518, 519, 0, 0, 520, 521, 716, 0, 522,
	0, 717, 523, 524, 516, 525, 526, 527, 528, 529,
	530, 531, 532, 533, 0, 534, 535, 718, 536, 537,
	538, 719, 539, 540, 541, 720, 542, 721, 543, 544,
	0, 545, 546, 547, 0, 548, 549, 550, 551, 552,
	553, 554, 555, 722, 556, 557, 1312, 558, 560, 0,
	561, 0, 562, 563, 564, 0, 0, 0, 0, 0,
	565, 566, 568, 0, 569, 570, 571, 572, 567, 573,
	574, 575, 576, 577, 0, 578, 579, 580, 0, 581,
	582, 583, 584, 585, 723, 586, 0, 587, 588, 595,
	596, 597, 589, 590, 591, 598, 599, 600, 601, 602,
	0, 604, 605, 603, 606, 607, 608, 0, 609, 610,
	592, 593, 611, 612, 0, 613, 614, 615, 616, 617,
	618, 619, 724, 0, 620, 0, 621, 622, 623, 624,
	625, 627, 594, 628, 633, 634, 725, 629, 630, 631,
	632, 726, 636, 637, 638, 0, 639, 640, 0, 635,
	626, 0, 641, 642, 643, 644, 645, 646, 0, 647,
	648, 0, 649, 727, 728, 729, 730, 0, 659, 0,
	650, 651, 652, 653, 731, 654, 732, 0, 655, 656,
	657, 658, 0, 660, 661, 0, 0, 662, 663, 665,
	667, 668, 664, 666, 669, 0, 670, 0, 0, 671,
	672, 673, 733, 734, 735, 0, 675, 674, 676, 677,
	678, 736, 679, 680, 290, 0, 0, 0, 681, 682,
	737, 683, 684, 685, 0, 0, 0, 0, 0, 0,
	0, 296, 297, 299, 298, 300, 301, 302, 303, 0,
	304, 305, 0, 0, 0, 0, 0, 686, 0, 0,
	0, 306, 0, 307, 308, 0, 309, 310, 311, 312,
	313, 314, 315, 687, 688, 0, 316, 689, 317, 690,
	0, 691, 318, 319, 320, 321, 322, 323, 0, 0,
	0, 324, 692, 693, 694, 0, 325, 326, 695, 0,
	0, 0, 327, 328, 329, 330, 331, 332, 333, 334,
	0, 0, 336, 337, 338, 335, 339, 0, 340, 0,
	341, 342, 343, 344, 345, 346, 0, 347, 348, 349,
	0, 350, 351, 352, 0, 0, 0, 0, 0, 0,
	0, 353, 354, 355, 356, 357, 0, 358, 360, 696,
	697, 0, 363, 359, 361, 0, 364, 362, 365, 0,
	366, 367, 368, 0, 0, 369, 370, 371, 0, 372,
	373, 374, 0, 375, 376, 377, 0, 378, 379, 698,
	380, 381, 382, 384, 386, 383, 385, 387, 388, 389,
	390, 699, 700, 391, 0, 0, 0, 0, 0, 0,
	0, 392, 393, 394, 701, 0, 0, 0, 395, 0,
	396, 397, 398, 0, 399, 400, 0, 0, 401, 402,
	403, 702, 703, 404, 405, 406, 407, 408, 409, 410,
	411, 412, 0, 413, 704, 0, 705, 0, 0, 415,
	416, 417, 418, 419, 420, 421, 706, 707, 708, 510,
	0, 422, 423, 0, 424, 425, 426, 427, 428, 0,
	0, 0, 0, 429, 430, 431, 0, 0, 511, 432,
	709, 710, 0, 711, 0, 433, 434, 0, 712, 0,
	435, 436, 437, 0, 438, 0, 0, 0, 439, 440,
	441, 442, 443, 444, 0, 445, 447, 446, 0, 448,
	713, 0, 449, 450, 0, 0, 451, 452, 453, 454,
	455, 456, 459, 0, 0, 457, 458, 460, 461, 0,
	462, 463, 465, 468, 464, 466, 467, 469, 482, 483,
	470, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 485, 0, 484, 0, 486, 487, 488, 489,
	490, 497, 499, 500, 495, 496, 498, 501, 502, 504,
	492, 493, 494, 0, 503, 491, 0, 0, 0, 505,
	506, 507, 508, 0, 714, 509, 715, 512, 513, 0,
	0, 514, 0, 515, 0, 0, 517, 518, 519, 0,
	0, 520, 521, 716, 0, 522, 0, 717, 523, 524,
	516, 525, 526, 0, 528, 529, 530, 531, 532, 533,
	0, 534, 535, 718, 536, 537, 538, 719, 539, 540,
	541, 720, 542, 721, 543, 544, 0, 545, 546, 547,
	0, 548, 549, 550, 551, 552, 0, 554, 555, 722,
	556, 557, 559, 558, 560, 0, 561, 0, 562, 563,
	564, 0, 0, 0, 0, 0, 565, 566, 568, 0,
	569, 570, 571, 572, 567, 573, 574, 575, 576, 577,
	0, 578, 579, 580, 0, 581, 582, 583, 584, 585,
	723, 0, 0, 587, 588, 595, 596, 597, 589, 590,
	591, 598, 599, 600, 601, 602, 0, 604, 605, 603,
	606, 607, 608, 0, 609, 610, 592, 593, 611, 612,
	0, 613, 614, 615, 616, 617, 618, 619, 724, 0,
	620, 0, 621, 622, 623, 624, 625, 627, 594, 628,
	633, 634, 725, 629, 630, 631, 632, 726, 636, 637,
	638, 0, 639, 640, 0, 635, 626, 0, 641, 642,
	643, 644, 645, 646, 0, 647, 648, 0, 649, 727,
	728, 729, 730, 0, 659, 0, 650, 651, 652, 653,
	731, 654, 732, 0, 655, 656, 657, 658, 0, 660,
	661, 0, 0, 662, 663, 665, 667, 668, 664, 666,
	669, 0, 670, 0, 0, 671, 672, 673, 733, 734,
	735, 0, 675, 674, 676, 677, 678, 736, 679, 680,
	1717, 0, 1428, 0, 681, 682, 737, 683, 684, 685,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 296,
	297, 299, 298, 300, 301, 302, 303, 0, 304, 305,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 306,
	0, 307, 308, 0, 309, 310, 311, 312, 313, 314,
	315, 0, 0, 0, 316, 0, 317, 0, 0, 0,
	318, 319, 320, 321, 322, 323, 0, 0, 0, 324,
	0, 0, 0, 0, 325, 326, 0, 0, 0, 0,
	327, 328, 329, 330, 331, 332, 333, 334, 0, 0,
	336, 337, 338, 335, 339, 0, 340, 0, 341, 342,
	343, 344, 345, 346, 0, 347, 348, 349, 0, 350,
	351, 352, 0, 0, 0, 0, 0, 0, 1430, 353,
	354, 355, 356, 357, 0, 358, 360, 0, 0, 0,
	363, 359, 361, 0, 364, 362, 365, 0, 366, 367,
	368, 0, 0, 369, 370, 371, 0, 372, 373, 374,
	0, 375, 376, 377, 0, 378, 379, 0, 380, 381,
	382, 384, 386, 383, 385, 387, 388, 389, 390, 0,
	0, 391, 0, 0, 0, 0, 0, 0, 0, 392,
	393, 394, 0, 0, 0, 0, 395, 0, 396, 397,
	398, 0, 399, 400, 0, 0, 401, 402, 403, 0,
	0, 404, 405, 406, 407, 408, 409, 410, 411, 412,
	0, 413, 0, 0, 0, 414, 0, 415, 416, 417,
	418, 419, 420, 421, 1716, 0, 0, 510, 0, 422,
	423, 0, 424, 425, 426, 427, 428, 0, 0, 0,
	0, 429, 430, 431, 0, 0, 511, 432, 0, 0,
	0, 0, 0, 433, 434, 0, 0, 0, 435, 436,
	437, 0, 438, 0, 0, 0, 439, 440, 441, 442,
	443, 444, 0, 445, 447, 446, 0, 448, 0, 0,
	449, 450, 0, 0, 451, 452, 453, 454, 455, 456,
	459, 0, 0, 457, 458, 460, 461, 0, 462, 463,
	465, 468, 464, 466, 467, 469, 482, 483, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	485, 0, 484, 0, 486, 487, 488, 489, 490, 497,
	499, 500, 495, 496, 498, 501, 502, 504, 492, 493,
	494, 0, 503, 491, 0, 0, 0, 505, 506, 507,
	508, 0, 0, 509, 0, 512, 513, 0, 0, 514,
	0, 515, 0, 0, 517, 518, 519, 0, 0, 520,
	521, 0, 0, 522, 0, 0, 523, 524, 516, 525,
	526, 527, 528, 529, 530, 531, 532, 533, 0, 534,
	535, 0, 536, 537, 538, 0, 539, 540, 541, 0,
	542, 0, 543, 544, 0, 545, 546, 547, 0, 548,
	549, 550, 551, 552, 553, 554, 555, 0, 556, 557,
	559, 558, 560, 0, 561, 0, 562, 563, 564, 0,
	0, 0, 0, 0, 565, 566, 568, 0, 569, 570,
	571, 572, 567, 573, 574, 575, 576, 577, 0, 578,
	579, 580, 0, 581, 582, 583, 584, 585, 0, 586,
	0, 587, 588, 595, 596, 597, 589, 590, 591, 598,
	599, 600, 601, 602, 0, 604, 605, 603, 606, 607,
	608, 1431, 609, 610, 592, 593, 611, 612, 0, 613,
	614, 615, 616, 617, 618, 619, 0, 0, 620, 0,
	621, 622, 623, 624, 625, 627, 594, 628, 633, 634,
	0, 629, 630, 631, 632, 0, 636, 637, 638, 0,
	639, 640, 0, 635, 626, 0, 641, 642, 643, 644,
	645, 646, 0, 647, 648, 0, 649, 0, 0, 0,
	0, 0, 659, 0, 650, 651, 652, 653, 0, 654,
	0, 0, 655, 656, 657, 658, 0, 660, 661, 0,
	0, 662, 663, 665, 667, 668, 664, 666, 669, 0,
	670, 0, 0, 671, 672, 673, 0, 0, 0, 0,
	675, 674, 676, 677, 678, 0, 679, 680, 1638, 0,
	1428, 0, 681, 682, 0, 683, 684, 685, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 296, 297, 299,
	298, 300, 301, 302, 303, 0, 304, 305, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 306, 0, 307,
	308, 0, 309, 310, 311, 312, 313, 314, 315, 0,
	0, 0, 316, 0, 317, 0, 0, 0, 318, 319,
	320, 321, 322, 323, 0, 0, 0, 324, 0, 0,
	0, 0, 325, 326, 0, 0, 0, 0, 327, 328,
	329, 330, 331, 332, 333, 334, 0, 0, 336, 337,
	338, 335, 339, 0, 340, 0, 341, 342, 343, 344,
	345, 346, 0, 347, 348, 349, 0, 350, 351, 352,
	0, 0, 0, 0, 0, 0, 1430, 353, 354, 355,
	356, 357, 0, 358, 360, 0, 0, 0, 363, 359,
	361, 0, 364, 362, 365, 0, 366, 367, 368, 0,
	0, 369, 370, 371, 0, 372, 373, 374, 0, 375,
	376, 377, 0, 378, 379, 0, 380, 381, 382, 384,
	386, 383, 385, 387, 388, 389, 390, 0, 0, 391,
	0, 0, 0, 0, 0, 0, 0, 392, 393, 394,
	0, 0, 0, 0, 395, 0, 396, 397, 398, 0,
	399, 400, 0, 0, 401, 402, 403, 0, 0, 404,
	405, 406, 407, 408, 409, 410, 411, 412, 0, 413,
	0, 0, 0, 414, 0, 415, 416, 417, 418, 419,
	420, 421, 1637, 0, 0, 510, 0, 422, 423, 0,
	424, 425, 426, 427, 428, 0, 0, 0, 0, 429,
	430, 431, 0, 0, 511, 432, 0, 0, 0, 0,
	0, 433, 434, 0, 0, 0, 435, 436, 437, 0,
	438, 0, 0, 0, 439, 440, 441, 442, 443, 444,
	0, 445, 447, 446, 0, 448, 0, 0, 449, 450,
	0, 0, 451, 452, 453, 454, 455, 456, 459, 0,
	0, 457, 458, 460, 461, 0, 462, 463, 465, 468,
	464, 466, 467, 469, 482, 483, 470, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 485, 0,
	484, 0, 486, 487, 488, 489, 490, 497, 499, 500,
	495, 496, 498, 501, 502, 504, 492, 493, 494, 0,
	503, 491, 0, 0, 0, 505, 506, 507, 508, 0,
	0, 509, 0, 512, 513, 0, 0, 514, 0, 515,
	0, 0, 517, 518, 519, 0, 0, 520, 521, 0,
	0, 522, 0, 0, 523, 524, 516, 525, 526, 527,
	528, 529, 530, 531, 532, 533, 0, 534, 535, 0,
	536, 537, 538, 0, 539, 540, 541, 0, 542, 0,
	543, 544, 0, 545, 546, 547, 0, 548, 549, 550,
	551, 552, 553, 554, 555, 0, 556, 557, 559, 558,
	560, 0, 561, 0, 562, 563, 564, 0, 0, 0,
	0, 0, 565, 566, 568, 0, 569, 570, 571, 572,
	567, 573, 574, 575, 576, 577, 0, 578, 579, 580,
	0, 581, 582, 583, 584, 585, 0, 586, 0, 587,
	588, 595, 596, 597, 589, 590, 591, 598, 599, 600,
	601, 602, 0, 604, 605, 603, 606, 607, 608, 1431,
	609, 610, 592, 593, 611, 612, 0, 613, 614, 615,
	616, 617, 618, 619, 0, 0, 620, 0, 621, 622,
	623, 624, 625, 627, 594, 628, 633, 634, 0, 629,
	630, 631, 632, 0, 636, 637, 638, 0, 639, 640,
	0, 635, 626, 0, 641, 642, 643, 644, 645, 646,
	0, 647, 648, 0, 649, 0, 0, 0, 0, 0,
	659, 0, 650, 651, 652, 653, 0, 654, 0, 0,
	655, 656, 657, 658, 0, 660, 661, 0, 0, 662,
	663, 665, 667, 668, 664, 666, 669, 0, 670, 0,
	0, 671, 672, 673, 0, 0, 0, 0, 675, 674,
	676, 677, 678, 0, 679, 680, 1426, 0, 1428, 0,
	681, 682, 0, 683, 684, 685, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 296, 297, 299, 298, 300,
	301, 302, 303, 0, 304, 305, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 306, 0, 307, 308, 0,
	309, 310, 311, 312, 313, 314, 315, 0, 0, 0,
	316, 0, 317, 0, 0, 0, 318, 319, 320, 321,
	322, 323, 0, 0, 0, 324, 0, 0, 0, 0,
	325, 326, 0, 0, 0, 0, 327, 328, 329, 330,
	331, 332, 333, 334, 0, 0, 336, 337, 338, 335,
	339, 0, 340, 0, 341, 342, 343, 344, 345, 346,
	0, 347, 348, 349, 0, 350, 351, 352, 0, 0,
	0, 0, 0, 0, 1430, 353, 354, 355, 356, 357,
	0, 358, 360, 0, 0, 0, 363, 359, 361, 0,
	364, 362, 365, 0, 366, 367, 368, 0, 0, 369,
	370, 371, 0, 372, 373, 374, 0, 375, 376, 377,
	0, 378, 379, 0, 380, 381, 382, 384, 386, 383,
	385, 387, 388, 389, 390, 0, 0, 391, 0, 0,
	0, 0, 0, 0, 0, 392, 393, 394, 0, 0,
	0, 0, 395, 0, 396, 397, 398, 0, 399, 400,
	0, 0, 401, 402, 403, 0, 0, 404, 405, 406,
	407, 408, 409, 410, 411, 412, 0, 413, 0, 0,
	0, 414, 0, 415, 416, 417, 418, 419, 420, 421,
	1425, 0, 0, 510, 0, 422, 423, 0, 424, 425,
	426, 427, 428, 0, 0, 0, 0, 429, 430, 431,
	0, 0, 511, 432, 0, 0, 0, 0, 0, 433,
	434, 0, 0, 0, 435, 436, 437, 0, 438, 0,
	0, 0, 439, 440, 441, 442, 443, 444, 0, 445,
	447, 446, 0, 448, 0, 0, 449, 450, 0, 0,
	451, 452, 453, 454, 455, 456, 459, 0, 0, 457,
	458, 460, 461, 0, 462, 463, 465, 468, 464, 466,
	467, 469, 482, 483, 470, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 485, 0, 484, 0,
	486, 487, 488, 489, 490, 497, 499, 500, 495, 496,
	498, 501, 502, 504, 492, 493, 494, 0, 503, 491,
	0, 0, 0, 505, 506, 507, 508, 0, 0, 509,
	0, 512, 513, 0, 0, 514, 0, 515, 0, 0,
	517, 518, 519, 0, 0, 520, 521, 0, 0, 522,
	0, 0, 523, 524, 516, 525, 526, 527, 528, 529,
	530, 531, 532, 533, 0, 534, 535, 0, 536, 537,
	538, 0, 539, 540, 541, 0, 542, 0, 543, 544,
	0, 545, 546, 547, 0, 548, 549, 550, 551, 552,
	553, 554, 555, 0, 556, 557, 559, 558, 560, 0,
	561, 0, 562, 563, 564, 0, 0, 0, 0, 0,
	565, 566, 568, 0, 569, 570, 571, 572, 567, 573,
	574, 575, 576, 577, 0, 578, 579, 580, 0, 581,
	582, 583, 584, 585, 0, 586, 0, 587, 588, 595,
	596, 597, 589, 590, 591, 598, 599, 600, 601, 602,
	0, 604, 605, 603, 606, 607, 608, 1431, 609, 610,
	592, 593, 611, 612, 0, 613, 614, 615, 616, 617,
	618, 619, 0, 0, 620, 0, 621, 622, 623, 624,
	625, 627, 594, 628, 633, 634, 0, 629, 630, 631,
	632, 0, 636, 637, 638, 0, 639, 640, 0, 635,
	626, 0, 641, 642, 643, 644, 645, 646, 0, 647,
	648, 0, 649, 0, 0, 0, 0, 0, 659, 0,
	650, 651, 652, 653, 0, 654, 0, 0, 655, 656,
	657, 658, 0, 660, 661, 0, 0, 662, 663, 665,
	667, 668, 664, 666, 669, 0, 670, 0, 0, 671,
	672, 673, 0, 0, 0, 0, 675, 674, 676, 677,
	678, 0, 679, 680, 2233, 0, 1428, 0, 681, 682,
	0, 683, 684, 685, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 296, 297, 299, 298, 300, 301, 302,
	303, 0, 304, 305, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 306, 0, 307, 308, 0, 309, 310,
	311, 312, 313, 314, 315, 0, 0, 0, 316, 0,
	317, 0, 0, 0, 318, 319, 320, 321, 322, 323,
	0, 0, 0, 324, 0, 0, 0, 0, 325, 326,
	0, 0, 0, 0, 327, 328, 329, 330, 331, 332,
	333, 334, 0, 0, 336, 337, 338, 335, 339, 0,
	340, 0, 341, 342, 343, 344, 345, 346, 0, 347,
	348, 349, 0, 350, 351, 352, 0, 0, 0, 0,
	0, 0, 1430, 353, 354, 355, 356, 357, 0, 358,
	360, 0, 0, 0, 363, 359, 361, 0, 364, 362,
	365, 0, 366, 367, 368, 0, 0, 369, 370, 371,
	0, 372, 373, 374, 0, 375, 376, 377, 0, 378,
	379, 0, 380, 381, 382, 384, 386, 383, 385, 387,
	388, 389, 390, 0, 0, 391, 0, 0, 0, 0,
	0, 0, 0, 392, 393, 394, 0, 0, 0, 0,
	395, 0, 396, 397, 398, 0, 399, 400, 0, 0,
	401, 402, 403, 0, 0, 404, 405, 406, 407, 408,
	409, 410, 411, 412, 0, 413, 0, 0, 0, 414,
	0, 415, 416, 417, 418, 419, 420, 421, 0, 0,
	0, 510, 0, 422, 423, 0, 424, 425, 426, 427,
	428, 0, 0, 0, 0, 429, 430, 431, 0, 0,
	511, 432, 0, 0, 0, 0, 0, 433, 434, 0,
	0, 0, 435, 436, 437, 0, 438, 0, 0, 0,
	439, 440, 441, 442, 443, 444, 0, 445, 447, 446,
	0, 448, 0, 0, 449, 450, 0, 0, 451, 452,
	453, 454, 455, 456, 459, 0, 0, 457, 458, 460,
	461, 0, 462, 463, 465, 468, 464, 466, 467, 469,
	482, 483, 470, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 485, 0, 484, 0, 486, 487,
	488, 489, 490, 497, 499, 500, 495, 496, 498, 501,
	502, 504, 492, 493, 494, 0, 503, 491, 0, 0,
	0, 505, 506, 507, 508, 0, 0, 509, 0, 512,
	513, 0, 0, 514, 0, 515, 0, 0, 517, 518,
	519, 0, 0, 520, 521, 0, 0, 522, 0, 0,
	523, 524, 516, 525, 526, 527, 528, 529, 530, 531,
	532, 533, 0, 534, 535, 0, 536, 537, 538, 0,
	539, 540, 541, 0, 542, 0, 543, 544, 0, 545,
	546, 547, 0, 548, 549, 550, 551, 552, 553, 554,
	555, 0, 556, 557, 559, 558, 560, 0, 561, 0,
	562, 563, 564, 0, 0, 0, 0, 0, 565, 566,
	568, 0, 569, 570, 571, 572, 567, 573, 574, 575,
	576, 577, 0, 578, 579, 580, 0, 581, 582, 583,
	584, 585, 0, 586, 0, 587, 588, 595, 596, 597,
	589, 590, 591, 598, 599, 600, 601, 602, 0, 604,
	605, 603, 606, 607, 608, 1431, 609, 610, 592, 593,
	611, 612, 0, 613, 614, 615, 616, 617, 618, 619,
	0, 0, 620, 0, 621, 622, 623, 624, 625, 627,
	594, 628, 633, 634, 0, 629, 630, 631, 632, 0,
	636, 637, 638, 0, 639, 640, 0, 635, 626, 0,
	641, 642, 643, 644, 645, 646, 0, 647, 648, 0,
	649, 0, 0, 0, 0, 0, 659, 0, 650, 651,
	652, 653, 0, 654, 0, 0, 655, 656, 657, 658,
	0, 660, 661, 0, 0, 662, 663, 665, 667, 668,
	664, 666, 669, 0, 670, 0, 0, 671, 672, 673,
	0, 0, 0, 0, 675, 674, 676, 677, 678, 0,
	679, 680, 2200, 0, 1428, 0, 681, 682, 0, 683,
	684, 685, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 296, 297, 299, 298, 300, 301, 302, 303, 0,
	304, 305, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 306, 0, 307, 308, 0, 309, 310, 311, 312,
	313, 314, 315, 0, 0, 0, 316, 0, 317, 0,
	0, 0, 318, 319, 320, 321, 322, 323, 0, 0,
	0, 324, 0, 0, 0, 0, 325, 326, 0, 0,
	0, 0, 327, 328, 329, 330, 331, 332, 333, 334,
	0, 0, 336, 337, 338, 335, 339, 0, 340, 0,
	341, 342, 343, 344, 345, 346, 0, 347, 348, 349,
	0, 350, 351, 352, 0, 0, 0, 0, 0, 0,
	1430, 353, 354, 355, 356, 357, 0, 358, 360, 0,
	0, 0, 363, 359, 361, 0, 364, 362, 365, 0,
	366, 367, 368, 0, 0, 369, 370, 371, 0, 372,
	373, 374, 0, 375, 376, 377, 0, 378, 379, 0,
	380, 381, 382, 384, 386, 383, 385, 387, 388, 389,
	390, 0, 0, 391, 0, 0, 0, 0, 0, 0,
	0, 392, 393, 394, 0, 0, 0, 0, 395, 0,
	396, 397, 398, 0, 399, 400, 0, 0, 401, 402,
	403, 0, 0, 404, 405, 406, 407, 408, 409, 410,
	411, 412, 0, 413, 0, 0, 0, 414, 0, 415,
	416, 417, 418, 419, 420, 421, 0, 0, 0, 510,
	0, 422, 423, 0, 424, 425, 426, 427, 428, 0,
	0, 0, 0, 429, 430, 431, 0, 0, 511, 432,
	0, 0, 0, 0, 0, 433, 434, 0, 0, 0,
	435, 436, 437, 0, 438, 0, 0, 0, 439, 440,
	441, 442, 443, 444, 0, 445, 447, 446, 0, 448,
	0, 0, 449, 450, 0, 0, 451, 452, 453, 454,
	455, 456, 459, 0, 0, 457, 458, 460, 461, 0,
	462, 463, 465, 468, 464, 466, 467, 469, 482, 483,
	470, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 485, 0, 484, 0, 486, 487, 488, 489,
	490, 497, 499, 500, 495, 496, 498, 501, 502, 504,
	492, 493, 494, 0, 503, 491, 0, 0, 0, 505,
	506, 507, 508, 0, 0, 509, 0, 512, 513, 0,
	0, 514, 0, 515, 0, 0, 517, 518, 519, 0,
	0, 520, 521, 0, 0, 522, 0, 0, 523, 524,
	516, 525, 526, 527, 528, 529, 530, 531, 532, 533,
	0, 534, 535, 0, 536, 537, 538, 0, 539, 540,
	541, 0, 542, 0, 543, 544, 0, 545, 546, 547,
	0, 548, 549, 550, 551, 552, 553, 554, 555, 0,
	556, 557, 559, 558, 560, 0, 561, 0, 562, 563,
	564, 0, 0, 0, 0, 0, 565, 566, 568, 0,
	569, 570, 571, 572, 567, 573, 574, 575, 576, 577,
	0, 578, 579, 580, 0, 581, 582, 583, 584, 585,
	0, 586, 0, 587, 588, 595, 596, 597, 589, 590,
	591, 598, 599, 600, 601, 602, 0, 604, 605, 603,
	606, 607, 608, 1431, 609, 610, 592, 593, 611, 612,
	0, 613, 614, 615, 616, 617, 618, 619, 0, 0,
	620, 0, 621, 622, 623, 624, 625, 627, 594, 628,
	633, 634, 0, 629, 630, 631, 632, 0, 636, 637,
	638, 0, 639, 640, 0, 635, 626, 0, 641, 642,
	643, 644, 645, 646, 0, 647, 648, 0, 649, 0,
	0, 0, 0, 0, 659, 0, 650, 651, 652, 653,
	0, 654, 0, 0, 655, 656, 657, 658, 0, 660,
	661, 0, 0, 662, 663, 665, 667, 668, 664, 666,
	669, 0, 670, 0, 0, 671, 672, 673, 0, 0,
	0, 0, 675, 674, 676, 677, 678, 1428, 679, 680,
	0, 0, 0, 0, 681, 682, 0, 683, 684, 685,
	0, 0, 0, 0, 296, 297, 299, 298, 300, 301,
	302, 303, 0, 304, 305, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 306, 0, 307, 308, 0, 309,
	310, 311, 312, 313, 314, 315, 0, 0, 0, 316,
	0, 317, 0, 0, 0, 318, 319, 320, 321, 322,
	323, 0, 0, 0, 324, 0, 0, 0, 0, 325,
	326, 0, 0, 0, 0, 327, 328, 329, 330, 331,
	332, 333, 334, 0, 0, 336, 337, 338, 335, 339,
	0, 340, 0, 341, 342, 343, 344, 345, 346, 0,
	347, 348, 349, 0, 350, 351, 352, 0, 0, 0,
	0, 0, 0, 1430, 353, 354, 355, 356, 357, 0,
	358, 360, 0, 0, 0, 363, 359, 361, 0, 364,
	362, 365, 0, 366, 367, 368, 0, 0, 369, 370,
	371, 0, 372, 373, 374, 0, 375, 376, 377, 0,
	378, 379, 0, 380, 381, 382, 384, 386, 383, 385,
	387, 388, 389, 390, 0, 0, 391, 0, 0, 0,
	0, 0, 0, 0, 392, 393, 394, 0, 0, 0,
	0, 395, 0, 396, 397, 398, 0, 399, 400, 0,
	0, 401, 402, 403, 0, 0, 404, 405, 406, 407,
	408, 409, 410, 411, 412, 0, 413, 0, 0, 0,
	414, 0, 415, 416, 417, 418, 419, 420, 421, 0,
	0, 0, 510, 0, 422, 423, 0, 424, 425, 426,
	427, 428, 0, 0, 0, 0, 429, 430, 431, 0,
	0, 511, 432, 0, 0, 0, 0, 0, 433, 434,
	0, 0, 0, 435, 436, 437, 0, 438, 0, 0,
	0, 439, 440, 441, 442, 443, 444, 0, 445, 447,
	446, 0, 448, 0, 0, 449, 450, 0, 0, 451,
	452, 453, 454, 455, 456, 459, 0, 0, 457, 458,
	460, 461, 0, 462, 463, 465, 468, 464, 466, 467,
	469, 482, 483, 470, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 485, 0, 484, 0, 486,
	487, 488, 489, 490, 497, 499, 500, 495, 496, 498,
	501, 502, 504, 492, 493, 494, 0, 503, 491, 0,
	0, 0, 505, 506, 507, 508, 0, 0, 509, 0,
	512, 513, 0, 0, 514, 0, 515, 0, 0, 517,
	518, 519, 0, 0, 520, 521, 0, 0, 522, 0,
	0, 523, 524, 516, 525, 526, 527, 528, 529, 530,
	531, 532, 533, 0, 534, 535, 0, 536, 537, 538,
	0, 539, 540, 541, 0, 542, 0, 543, 544, 0,
	545, 546, 547, 0, 548, 549, 550, 551, 552, 553,
	554, 555, 0, 556, 557, 559, 558, 560, 0, 561,
	0, 562, 563, 564, 0, 0, 0, 0, 0, 565,
	566, 568, 0, 569, 570, 571, 572, 567, 573, 574,
	575, 576, 577, 0, 578, 579, 580, 0, 581, 582,
	583, 584, 585, 0, 586, 0, 587, 588, 595, 596,
	597, 589, 590, 591, 598, 599, 600, 601, 602, 0,
	604, 605, 603, 606, 607, 608, 1431, 609, 610, 592,
	593, 611, 612, 0, 613, 614, 615, 616, 617, 618,
	619, 0, 0, 620, 0, 621, 622, 623, 624, 625,
	627, 594, 628, 633, 634, 0, 629, 630, 631, 632,
	0, 636, 637, 638, 0, 639, 640, 0, 635, 626,
	0, 641, 642, 643, 644, 645, 646, 0, 647, 648,
	0, 649, 0, 0, 0, 0, 0, 659, 0, 650,
	651, 652, 653, 0, 654, 0, 0, 655, 656, 657,
	658, 0, 660, 661, 0, 0, 662, 663, 665, 667,
	668, 664, 666, 669, 0, 670, 0, 0, 671, 672,
	673, 0, 0, 0, 0, 675, 674, 676, 677, 678,
	0, 679, 680, 0, 0, 0, 0, 681, 682, 0,
	683, 684, 685, 1933, 1934, 0, 1966, 1967, 1968, 1977,
	1978, 1979, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1970, 1964, 0, 0,
	0, 0, 0, 1933, 1934, 1936, 1966, 1967, 1968, 1977,
	1978, 1979, 0, 0, 0, 1983, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1970, 1964, 0, 0,
	0, 0, 1989, 0, 0, 1936, 0, 0, 0, 0,
	0, 1935, 0, 0, 0, 1983, 0, 0, 0, 0,
	0, 0, 1955, 0, 0, 0, 0, 0, 0, 0,
	0, 1952, 1989, 0, 0, 0, 0, 0, 0, 0,
	0, 1935, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1955, 0, 0, 0, 0, 0, 0, 0,
	0, 1952, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1958,
	1959, 1960, 1961, 0, 0, 0, 0, 0, 0, 1941,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1958,
	1959, 1960, 1961, 0, 0, 0, 0, 0, 0, 1941,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1974, 0, 0, 1984, 0, 0, 0, 0,
	0, 0, 1963, 1965, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1980,
	0, 1981, 1974, 0, 0, 1984, 0, 0, 1950, 1951,
	0, 0, 1963, 1965, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1972, 0, 0, 1980,
	0, 1981, 0, 0, 0, 0, 0, 0, 1950, 1951,
	0, 1956, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1972, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1956, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1982, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1971, 0, 0, 0, 0, 0, 0, 0, 0,
	1982, 0, 1986, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1971, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1986, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1962, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1957, 0, 0, 0, 0, 0,
	0, 1962, 0, 1933, 1934, 0, 1966, 1967, 1968, 1977,
	1978, 1979, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1975, 0, 1957, 0, 1970, 1964, 0, 0,
	0, 0, 0, 0, 0, 1936, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1983, 0, 0, 0, 0,
	0, 0, 1975, 0, 0, 0, 1988, 0, 0, 0,
	0, 0, 1989, 0, 0, 0, 0, 0, 0, 0,
	0, 1935, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1955, 0, 0, 0, 1988, 0, 0, 0,
	0, 1952, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1973, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1947, 1948, 1954, 1976, 1953, 1949, 0,
	1946, 1944, 1945, 1937, 1938, 1939, 1940, 1942, 1943, 0,
	0, 0, 1973, 0, 4912, 0, 0, 0, 0, 1958,
	1959, 1960, 1961, 1947, 1948, 1954, 1976, 1953, 1949, 1941,
	1946, 1944, 1945, 1937, 1938, 1939, 1940, 1942, 1943, 0,
	0, 0, 0, 0, 4863, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1933, 1934, 0, 1966, 1967, 1968, 1977, 1978, 1979,
	0, 0, 1974, 0, 0, 1984, 0, 0, 0, 0,
	0, 0, 1963, 1965, 1970, 1964, 0, 0, 0, 0,
	0, 0, 0, 1936, 0, 0, 0, 0, 0, 1980,
	0, 1981, 0, 1983, 0, 0, 0, 0, 1950, 1951,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1989, 0, 0, 0, 0, 0, 1972, 0, 0, 1935,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1955, 1956, 0, 0, 0, 0, 0, 0, 0, 1952,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1982, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1971, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1986, 0, 0, 0, 0, 1958, 1959, 1960,
	1961, 0, 0, 0, 0, 0, 0, 1941, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1933,
	1934, 0, 1966, 1967, 1968, 1977, 1978, 1979, 0, 0,
	1974, 1962, 0, 1984, 0, 0, 0, 0, 0, 0,
	1963, 1965, 1970, 1964, 0, 0, 0, 0, 0, 0,
	0, 1936, 0, 0, 1957, 0, 0, 1980, 0, 1981,
	0, 1983, 0, 0, 0, 0, 1950, 1951, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1989, 0,
	0, 0, 1975, 0, 1972, 0, 0, 1935, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1955, 1956,
	0, 0, 0, 0, 0, 0, 0, 1952, 0, 0,
	0, 0, 0, 0, 0, 0, 1988, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1982, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1971,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1986, 0, 0, 0, 0, 1958, 1959, 1960, 1961, 0,
	0, 0, 1973, 0, 0, 1941, 0, 0, 0, 0,
	0, 0, 0, 1947, 1948, 1954, 1976, 1953, 1949, 0,
	1946, 1944, 1945, 1937, 1938, 1939, 1940, 1942, 1943, 0,
	0, 0, 0, 0, 4862, 0, 0, 1933, 1934, 0,
	1966, 1967, 1968, 1977, 1978, 1979, 0, 0, 1974, 1962,
	0, 1984, 0, 0, 0, 0, 0, 0, 1963, 1965,
	1970, 1964, 0, 0, 0, 0, 0, 0, 0, 1936,
	0, 0, 1957, 0, 0, 1980, 0, 1981, 0, 1983,
	0, 0, 0, 0, 1950, 1951, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1989, 0, 0, 0,
	1975, 0, 1972, 0, 0, 1935, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1955, 1956, 0, 0,
	0, 0, 0, 0, 0, 1952, 0, 0, 0, 0,
	0, 0, 0, 0, 1988, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1982, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1971, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1986, 0,
	0, 0, 0, 1958, 1959, 1960, 1961, 0, 0, 0,
	1973, 0, 0, 1941, 0, 0, 0, 0, 0, 0,
	0, 1947, 1948, 1954, 1976, 1953, 1949, 0, 1946, 1944,
	1945, 1937, 1938, 1939, 1940, 1942, 1943, 0, 0, 0,
	0, 0, 4667, 0, 0, 1933, 1934, 0, 1966, 1967,
	1968, 1977, 1978, 1979, 0, 0, 1974, 1962, 0, 1984,
	0, 0, 0, 0, 0, 0, 1963, 1965, 1970, 1964,
	0, 0, 0, 0, 0, 0, 0, 1936, 0, 0,
	1957, 0, 0, 1980, 0, 1981, 0, 1983, 0, 0,
	0, 0, 1950, 1951, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1989, 0, 0, 0, 1975, 0,
	1972, 0, 0, 1935, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1955, 1956, 0, 0, 0, 0,
	0, 0, 0, 1952, 0, 0, 0, 0, 0, 0,
	0, 0, 1988, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1982, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1971, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1986, 0, 0, 0,
	0, 1958, 1959, 1960, 1961, 0, 0, 0, 1973, 0,
	0, 1941, 0, 0, 0, 0, 0, 0, 0, 1947,
	1948, 1954, 1976, 1953, 1949, 0, 1946, 1944, 1945, 1937,
	1938, 1939, 1940, 1942, 1943, 0, 0, 0, 0, 0,
	4492, 0, 0, 1933, 1934, 0, 1966, 1967, 1968, 1977,
	1978, 1979, 0, 0, 1974, 1962, 0, 1984, 0, 0,
	0, 0, 0, 0, 1963, 1965, 1970, 1964, 0, 0,
	0, 0, 0, 0, 0, 1936, 0, 0, 1957, 0,
	0, 1980, 0, 1981, 0, 1983, 0, 0, 0, 0,
	1950, 1951, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1989, 0, 0, 0, 1975, 0, 1972, 0,
	0, 1935, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1955, 1956, 0, 0, 0, 0, 0, 0,
	0, 1952, 0, 0, 0, 0, 0, 0, 0, 0,
	1988, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1982, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1971, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1986, 0, 0, 0, 0, 1958,
	1959, 1960, 1961, 0, 0, 0, 1973, 0, 0, 1941,
	0, 0, 0, 0, 0, 0, 0, 1947, 1948, 1954,
	1976, 1953, 1949, 0, 1946, 1944, 1945, 1937, 1938, 1939,
	1940, 1942, 1943, 0, 0, 0, 0, 0, 4397, 0,
	0, 1933, 1934, 0, 1966, 1967, 1968, 1977, 1978, 1979,
	0, 0, 1974, 1962, 0, 1984, 0, 0, 0, 0,
	0, 0, 1963, 1965, 1970, 1964, 0, 0, 0, 0,
	0, 0, 0, 1936, 0, 0, 1957, 0, 0, 1980,
	0, 1981, 0, 1983, 0, 0, 0, 0, 1950, 1951,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1989, 0, 0, 0, 1975, 0, 1972, 0, 0, 1935,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1955, 1956, 0, 0, 0, 0, 0, 0, 0, 1952,
	0, 0, 0, 0, 0, 0, 0, 0, 1988, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1982, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1971, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1986, 0, 0, 0, 0, 1958, 1959, 1960,
	1961, 0, 0, 0, 1973, 0, 0, 1941, 0, 0,
	0, 0, 0, 0, 0, 1947, 1948, 1954, 1976, 1953,
	1949, 0, 1946, 1944, 1945, 1937, 1938, 1939, 1940, 1942,
	1943, 0, 0, 0, 0, 0, 4396, 0, 0, 1933,
	1934, 0, 1966, 1967, 1968, 1977, 1978, 1979, 0, 0,
	1974, 1962, 0, 1984, 0, 0, 0, 0, 0, 0,
	1963, 1965, 1970, 1964, 0, 0, 0, 0, 0, 0,
	0, 1936, 0, 0, 1957, 0, 0, 1980, 0, 1981,
	0, 1983, 0, 0, 0, 0, 1950, 1951, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1989, 0,
	0, 0, 1975, 0, 1972, 0, 0, 1935, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1955, 1956,
	0, 0, 0, 0, 0, 0, 0, 1952, 0, 0,
	0, 0, 0, 0, 0, 0, 1988, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1982, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1971,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1986, 0, 0, 0, 0, 1958, 1959, 1960, 1961, 0,
	0, 0, 1973, 0, 0, 1941, 0, 0, 0, 0,
	0, 0, 0, 1947, 1948, 1954, 1976, 1953, 1949, 0,
	1946, 1944, 1945, 1937, 1938, 1939, 1940, 1942, 1943, 0,
	0, 0, 0, 0, 4395, 0, 0, 1933, 1934, 0,
	1966, 1967, 1968, 1977, 1978, 1979, 0, 0, 1974, 1962,
	0, 1984, 0, 0, 0, 0, 0, 0, 1963, 1965,
	1970, 1964, 0, 0, 0, 0, 0, 0, 0, 1936,
	0, 0, 1957, 0, 0, 1980, 0, 1981, 0, 1983,
	0, 0, 0, 0, 1950, 1951, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1989, 0, 0, 0,
	1975, 0, 1972, 0, 0, 1935, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1955, 1956, 0, 0,
	0, 0, 0, 0, 0, 1952, 0, 0, 0, 0,
	0, 0, 0, 0, 1988, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1982, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1971, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1986, 0,
	0, 0, 0, 1958, 1959, 1960, 1961, 0, 0, 0,
	1973, 0, 0, 1941, 0, 0, 0, 0, 0, 0,
	0, 1947, 1948, 1954, 1976, 1953, 1949, 0, 1946, 1944,
	1945, 1937, 1938, 1939, 1940, 1942, 1943, 0, 0, 0,
	0, 0, 4011, 0, 0, 1933, 1934, 0, 1966, 1967,
	1968, 1977, 1978, 1979, 0, 0, 1974, 1962, 0, 1984,
	0, 0, 0, 0, 0, 0, 1963, 1965, 1970, 1964,
	0, 0, 0, 0, 0, 0, 0, 1936, 0, 0,
	1957, 0, 0, 1980, 0, 1981, 0, 1983, 0, 0,
	0, 0, 1950, 1951, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1989, 0, 0, 0, 1975, 0,
	1972, 0, 0, 1935, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1955, 1956, 0, 0, 0, 0,
	0, 0, 0, 1952, 0, 0, 0, 0, 0, 0,
	0, 0, 1988, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1982, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1971, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1986, 0, 0, 0,
	0, 1958, 1959, 1960, 1961, 0, 0, 0, 1973, 0,
	0, 1941, 0, 0, 0, 0, 0, 0, 0, 1947,
	1948, 1954, 1976, 1953, 1949, 0, 1946, 1944, 1945, 1937,
	1938, 1939, 1940, 1942, 1943, 0, 0, 0, 0, 0,
	3479, 0, 0, 1933, 1934, 0, 1966, 1967, 1968, 1977,
	1978, 1979, 0, 0, 1974, 1962, 0, 1984, 0, 0,
	0, 0, 0, 0, 1963, 1965, 1970, 1964, 0, 0,
	0, 0, 0, 0, 0, 1936, 0, 0, 1957, 0,
	0, 1980, 0, 1981, 0, 1983, 0, 0, 0, 0,
	1950, 1951, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1989, 0, 0, 0, 1975, 0, 1972, 0,
	0, 1935, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1955, 1956, 0, 0, 0, 0, 0, 0,
	0, 1952, 0, 0, 0, 0, 0, 0, 0, 0,
	1988, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1982, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1971, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1986, 0, 0, 0, 0, 1958,
	1959, 1960, 1961, 0, 0, 0, 1973, 0, 0, 1941,
	0, 0, 0, 0, 0, 0, 0, 1947, 1948, 1954,
	1976, 1953, 1949, 0, 1946, 1944, 1945, 1937, 1938, 1939,
	1940, 1942, 1943, 0, 0, 0, 0, 0, 3478, 0,
	0, 1933, 1934, 0, 1966, 1967, 1968, 1977, 1978, 1979,
	0, 0, 1974, 1962, 0, 1984, 0, 0, 0, 0,
	0, 0, 1963, 1965, 1970, 1964, 0, 0, 0, 0,
	0, 0, 0, 1936, 0, 0, 1957, 0, 0, 1980,
	0, 1981, 0, 1983, 0, 0, 0, 0, 1950, 1951,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1989, 0, 0, 0, 1975, 0, 1972, 0, 0, 1935,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1955, 1956, 0, 0, 0, 0, 0, 0, 0, 1952,
	0, 0, 0, 0, 0, 0, 0, 0, 1988, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1982, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1971, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1986, 0, 0, 0, 0, 1958, 1959, 1960,
	1961, 0, 0, 0, 1973, 0, 0, 1941, 0, 0,
	0, 0, 0, 0, 0, 1947, 1948, 1954, 1976, 1953,
	1949, 0, 1946, 1944, 1945, 1937, 1938, 1939, 1940, 1942,
	1943, 0, 0, 0, 0, 0, 3477, 0, 0, 0,
	0, 1933, 1934, 0, 1966, 1967, 1968, 1977, 1978, 1979,
	1974, 1962, 0, 1984, 0, 2379, 0, 0, 0, 0,
	1963, 1965, 0, 0, 1970, 1964, 0, 0, 0, 0,
	0, 0, 0, 1936, 1957, 0, 0, 1980, 0, 1981,
	0, 0, 0, 1983, 0, 0, 1950, 1951, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1989, 0, 1975, 0, 1972, 0, 0, 0, 0, 1935,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1956,
	1955, 0, 0, 0, 0, 0, 0, 0, 0, 1952,
	0, 0, 0, 0, 0, 0, 1988, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1982, 0,
	0, 0, 0, 0, 0, 0, 0, 2380, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1971,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1986, 0, 0, 0, 0, 0, 0, 1958, 1959, 1960,
	1961, 0, 1973, 0, 0, 0, 0, 1941, 0, 0,
	0, 0, 0, 1947, 1948, 1954, 1976, 1953, 1949, 0,
	1946, 1944, 1945, 1937, 1938, 1939, 1940, 1942, 1943, 0,
	0, 0, 0, 0, 3476, 0, 0, 0, 0, 1933,
	1934, 0, 1966, 1967, 1968, 1977, 1978, 1979, 0, 1962,
	1974, 0, 0, 1984, 0, 0, 0, 0, 0, 0,
	1963, 1965, 1970, 1964, 0, 0, 0, 0, 0, 0,
	0, 1936, 1957, 0, 0, 0, 0, 1980, 0, 1981,
	0, 1983, 0, 0, 0, 0, 1950, 1951, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1989, 0,
	1975, 0, 0, 0, 1972, 0, 0, 1935, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1955, 1956,
	0, 0, 2312, 0, 0, 0, 0, 1952, 0, 0,
	0, 0, 0, 0, 1988, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1982, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1971,
	0, 0, 0, 0, 2310, 0, 0, 0, 0, 0,
	1986, 0, 0, 0, 0, 1958, 1959, 1960, 1961, 0,
	1973, 0, 0, 0, 0, 1941, 0, 0, 0, 0,
	0, 1947, 1948, 1954, 1976, 1953, 1949, 0, 1946, 1944,
	1945, 1937, 1938, 1939, 1940, 1942, 1943, 0, 0, 0,
	3441, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1974, 1962,
	0, 1984, 0, 0, 0, 0, 0, 0, 1963, 1965,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1957, 0, 0, 1980, 0, 1981, 0, 0,
	0, 0, 0, 0, 1950, 1951, 0, 0, 0, 0,
	0, 0, 0, 0, 2381, 0, 0, 0, 0, 0,
	1975, 0, 1972, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1933, 1934, 1956, 1966, 1967,
	1968, 1977, 1978, 1979, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1988, 0, 0, 0, 1970, 1964,
	0, 0, 0, 0, 0, 0, 0, 1936, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1983, 0, 0,
	0, 0, 0, 0, 0, 0, 1982, 0, 0, 0,
	0, 0, 0, 0, 1989, 0, 0, 0, 2382, 0,
	0, 0, 0, 1935, 0, 0, 0, 1971, 0, 0,
	0, 0, 0, 0, 1955, 0, 0, 0, 1986, 0,
	0, 0, 0, 1952, 0, 0, 0, 0, 0, 0,
	1973, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1947, 1948, 1954, 1976, 1953, 1949, 0, 1946, 1944,
	1945, 1937, 1938, 1939, 1940, 1942, 1943, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2311, 1962, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1957, 1958, 1959, 1960, 1961, 0, 0, 0, 0, 0,
	0, 1941, 5163, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1975, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1933, 1934, 0, 1966, 1967, 1968, 1977,
	1978, 1979, 0, 0, 1974, 0, 0, 1984, 0, 0,
	0, 0, 1988, 0, 1963, 1965, 1970, 1964, 0, 0,
	0, 0, 0, 2309, 0, 1936, 0, 0, 0, 0,
	0, 1980, 0, 1981, 0, 1983, 0, 0, 0, 0,
	1950, 1951, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1989, 0, 0, 0, 0, 0, 1972, 0,
	0, 1935, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1955, 1956, 0, 0, 0, 0, 0, 0,
	0, 1952, 0, 0, 0, 0, 0, 0, 1973, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1947,
	1948, 1954, 1976, 1953, 1949, 0, 1946, 1944, 1945, 1937,
	1938, 1939, 1940, 1942, 1943, 0, 0, 0, 0, 0,
	0, 0, 1982, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1971, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1986, 0, 0, 0, 0, 1958,
	1959, 1960, 1961, 0, 0, 0, 0, 0, 0, 1941,
	0, 3541, 0, 0, 0, 0, 5162, 0, 3540, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1933, 1934, 0, 1966, 1967, 1968, 1977, 1978, 1979,
	0, 0, 1974, 1962, 0, 1984, 0, 0, 0, 0,
	0, 0, 1963, 1965, 1970, 1964, 0, 0, 0, 0,
	3412, 0, 0, 1936, 0, 0, 1957, 0, 0, 1980,
	0, 1981, 0, 1983, 0, 0, 0, 0, 1950, 1951,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1989, 0, 0, 0, 1975, 0, 1972, 0, 0, 1935,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1955, 1956, 0, 0, 0, 0, 0, 0, 0, 1952,
	0, 0, 0, 0, 0, 0, 0, 0, 1988, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3413,
	1982, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1971, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1986, 0, 0, 0, 0, 1958, 1959, 1960,
	1961, 0, 0, 0, 1973, 0, 0, 1941, 0, 0,
	0, 0, 0, 0, 0, 1947, 1948, 1954, 1976, 1953,
	1949, 0, 1946, 1944, 1945, 1937, 1938, 1939, 1940, 1942,
	1943, 0, 2924, 0, 0, 0, 0, 0, 0, 1933,
	1934, 0, 1966, 1967, 1968, 1977, 1978, 1979, 0, 0,
	1974, 1962, 0, 1984, 0, 0, 0, 0, 0, 0,
	1963, 1965, 1970, 1964, 0, 0, 0, 2923, 0, 0,
	0, 1936, 0, 0, 1957, 0, 0, 1980, 0, 1981,
	0, 1983, 0, 0, 0, 0, 1950, 1951, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1989, 0,
	0, 0, 1975, 0, 1972, 0, 0, 1935, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1955, 1956,
	0, 0, 0, 0, 0, 0, 0, 1952, 0, 0,
	0, 0, 0, 0, 0, 0, 1988, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1982, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1971,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1986, 0, 0, 0, 0, 1958, 1959, 1960, 1961, 0,
	0, 0, 1973, 0, 0, 1941, 0, 0, 0, 0,
	0, 0, 0, 1947, 1948, 1954, 1976, 1953, 1949, 0,
	1946, 1944, 1945, 1937, 1938, 1939, 1940, 1942, 1943, 0,
	0, 0, 0, 0, 0, 0, 0, 1933, 1934, 0,
	1966, 1967, 1968, 1977, 1978, 1979, 0, 0, 1974, 1962,
	0, 1984, 0, 0, 0, 0, 0, 0, 1963, 1965,
	1970, 1964, 0, 0, 0, 0, 0, 0, 0, 1936,
	0, 0, 1957, 0, 0, 1980, 0, 1981, 0, 1983,
	0, 0, 0, 0, 1950, 1951, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1989, 0, 0, 0,
	1975, 0, 1972, 0, 0, 1935, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1955, 1956, 0, 0,
	0, 0, 0, 0, 0, 1952, 0, 0, 0, 0,
	0, 0, 0, 0, 1988, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1982, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1971, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1986, 0,
	0, 0, 0, 1958, 1959, 1960, 1961, 0, 0, 0,
	1973, 0, 0, 1941, 0, 4767, 0, 0, 0, 0,
	0, 1947, 1948, 1954, 1976, 1953, 1949, 0, 1946, 1944,
	1945, 1937, 1938, 1939, 1940, 1942, 1943, 0, 0, 0,
	0, 0, 0, 0, 0, 1933, 1934, 0, 1966, 1967,
	1968, 1977, 1978, 1979, 0, 0, 1974, 1962, 0, 1984,
	0, 0, 0, 0, 0, 0, 1963, 1965, 1970, 1964,
	0, 0, 0, 0, 0, 0, 0, 1936, 0, 0,
	1957, 0, 0, 1980, 0, 1981, 0, 1983, 0, 0,
	0, 0, 1950, 1951, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1989, 0, 0, 0, 1975, 0,
	1972, 0, 0, 1935, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1955, 1956, 0, 0, 0, 0,
	0, 0, 0, 1952, 0, 0, 0, 0, 0, 0,
	0, 0, 1988, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1982, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1971, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1986, 0, 0, 0,
	0, 1958, 1959, 1960, 1961, 0, 0, 0, 1973, 0,
	0, 1941, 0, 0, 0, 0, 0, 0, 0, 1947,
	1948, 1954, 1976, 1953, 1949, 0, 1946, 1944, 1945, 1937,
	1938, 1939, 1940, 1942, 1943, 0, 0, 0, 0, 0,
	0, 0, 0, 1933, 1934, 0, 1966, 1967, 1968, 1977,
	1978, 1979, 0, 0, 1974, 1962, 0, 1984, 0, 0,
	0, 0, 0, 0, 1963, 1965, 1970, 1964, 0, 0,
	0, 0, 0, 0, 0, 1936, 0, 0, 1957, 0,
	0, 1980, 0, 1981, 0, 1983, 0, 0, 0, 0,
	1950, 1951, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1989, 0, 0, 0, 1975, 0, 1972, 0,
	0, 1935, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1955, 1956, 0, 0, 0, 0, 0, 0,
	0, 1952, 0, 0, 0, 0, 0, 0, 0, 0,
	1988, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1982, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1971, 1165, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1986, 0, 0, 0, 0, 1958,
	1959, 1960, 1961, 0, 0, 0, 1973, 0, 0, 1941,
	0, 0, 0, 0, 0, 0, 0, 1947, 1948, 1954,
	1976, 1953, 1949, 0, 1946, 1944, 1945, 1937, 1938, 1939,
	1940, 1942, 1943, 0, 0, 0, 0, 0, 0, 0,
	0, 1933, 1934, 0, 1966, 1967, 1968, 1977, 1978, 1979,
	0, 0, 1974, 1962, 0, 1984, 0, 0, 0, 0,
	0, 0, 1963, 1965, 1970, 1964, 0, 0, 0, 0,
	0, 0, 0, 1936, 0, 0, 1957, 0, 0, 1980,
	0, 1981, 0, 1983, 0, 0, 0, 0, 1950, 1951,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1989, 0, 0, 0, 1975, 0, 1972, 0, 0, 1935,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1955, 1956, 0, 0, 0, 0, 0, 0, 0, 1952,
	0, 0, 0, 0, 0, 0, 0, 0, 1988, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1982, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1971, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1986, 0, 0, 0, 0, 1958, 1959, 1960,
	1961, 0, 0, 0, 1973, 0, 0, 1941, 0, 0,
	0, 0, 0, 0, 0, 1947, 1948, 1954, 1976, 1953,
	1949, 0, 1946, 1944, 1945, 1937, 1938, 1939, 1940, 1942,
	1943, 0, 0, 0, 0, 0, 0, 0, 0, 1933,
	1934, 0, 1966, 1967, 1968, 1977, 1978, 1979, 0, 0,
	1974, 1962, 0, 1984, 0, 0, 0, 0, 0, 0,
	1963, 1965, 1970, 1964, 0, 0, 0, 0, 0, 0,
	0, 1936, 0, 0, 1957, 0, 0, 1980, 0, 1981,
	0, 1983, 0, 0, 0, 0, 1950, 1951, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1989, 0,
	0, 0, 1975, 0, 1972, 0, 0, 1935, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1955, 1956,
	0, 0, 0, 0, 0, 0, 0, 1952, 0, 0,
	0, 0, 0, 0, 0, 0, 1988, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4538, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1982, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1971,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1986, 0, 0, 0, 0, 1958, 1959, 1960, 1961, 0,
	0, 0, 1973, 0, 0, 1941, 0, 4213, 0, 0,
	0, 0, 0, 1947, 1948, 1954, 1976, 1953, 1949, 0,
	1946, 1944, 1945, 1937, 1938, 1939, 1940, 1942, 1943, 0,
	0, 0, 0, 0, 0, 0, 0, 1933, 1934, 0,
	1966, 1967, 1968, 1977, 1978, 1979, 0, 0, 1974, 1962,
	0, 1984, 0, 0, 0, 0, 0, 0, 1963, 1965,
	1970, 1964, 0, 0, 0, 0, 0, 0, 0, 1936,
	0, 0, 1957, 0, 0, 1980, 0, 1981, 0, 1983,
	0, 0, 0, 0, 1950, 1951, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1989, 0, 0, 0,
	1975, 0, 1972, 0, 0, 1935, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1955, 1956, 0, 0,
	0, 0, 0, 0, 0, 1952, 0, 0, 0, 0,
	0, 0, 0, 0, 1988, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4214, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1982, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1971, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1986, 0,
	0, 0, 0, 1958, 1959, 1960, 1961, 0, 0, 0,
	1973, 0, 0, 1941, 0, 0, 0, 0, 0, 0,
	0, 1947, 1948, 1954, 1976, 1953, 1949, 0, 1946, 1944,
	1945, 1937, 1938, 1939, 1940, 1942, 1943, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1974, 1962, 0, 1984,
	0, 0, 0, 0, 0, 0, 1963, 1965, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1957, 0, 0, 1980, 0, 1981, 0, 0, 0, 0,
	0, 0, 1950, 1951, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1975, 0,
	1972, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1933, 1934, 1956, 1966, 1967, 1968, 1977,
	1978, 1979, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1988, 0, 0, 0, 1970, 1964, 0, 0,
	0, 0, 0, 0, 0, 1936, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1983, 0, 0, 0, 0,
	0, 0, 0, 0, 1982, 0, 0, 0, 0, 0,
	0, 0, 1989, 0, 0, 0, 0, 0, 0, 0,
	0, 1935, 0, 0, 0, 1971, 0, 0, 0, 0,
	0, 0, 1955, 0, 0, 0, 1986, 0, 0, 0,
	0, 1952, 0, 0, 0, 0, 0, 0, 1973, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1947,
	1948, 1954, 1976, 1953, 1949, 0, 1946, 1944, 1945, 1937,
	1938, 1939, 1940, 1942, 1943, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1962, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1957, 1958,
	1959, 1960, 1961, 0, 0, 0, 0, 0, 0, 1941,
	0, 0, 0, 0, 0, 0, 0, 0, 3547, 0,
	0, 0, 0, 0, 0, 0, 1975, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1933, 1934, 0, 1966, 1967, 1968, 1977,
	1978, 1979, 1974, 0, 0, 1984, 0, 0, 0, 0,
	1988, 0, 1963, 1965, 0, 0, 1970, 1964, 0, 0,
	0, 3542, 0, 3992, 0, 1936, 0, 0, 0, 1980,
	0, 1981, 0, 0, 0, 1983, 0, 0, 1950, 1951,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1989, 0, 0, 0, 1972, 0, 0, 0,
	0, 1935, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1956, 1955, 0, 0, 0, 0, 0, 0, 0,
	0, 1952, 0, 0, 0, 0, 1973, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1947, 1948, 1954,
	1976, 1953, 1949, 0, 1946, 1944, 1945, 1937, 1938, 1939,
	1940, 1942, 1943, 0, 0, 0, 0, 0, 0, 0,
	1982, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1971, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1986, 0, 0, 0, 0, 0, 0, 1958,
	1959, 1960, 1961, 0, 0, 0, 0, 0, 0, 1941,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1933, 1934, 0, 1966, 1967, 1968, 1977, 1978, 1979,
	0, 1962, 1974, 0, 0, 1984, 0, 0, 0, 0,
	0, 0, 1963, 1965, 1970, 1964, 0, 0, 0, 0,
	0, 0, 0, 1936, 1957, 0, 0, 0, 0, 1980,
	0, 1981, 0, 1983, 0, 0, 0, 0, 1950, 1951,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1989, 0, 1975, 0, 0, 0, 1972, 0, 0, 1935,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1955, 1956, 0, 0, 0, 0, 0, 0, 0, 1952,
	0, 0, 0, 0, 0, 0, 1988, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1982, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1971, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1986, 0, 0, 0, 0, 1958, 1959, 1960,
	1961, 0, 1973, 0, 0, 0, 0, 1941, 0, 0,
	0, 0, 0, 1947, 1948, 1954, 1976, 1953, 1949, 0,
	1946, 1944, 1945, 1937, 1938, 1939, 1940, 1942, 1943, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1933,
	1934, 0, 1966, 1967, 1968, 1977, 1978, 1979, 0, 0,
	1974, 1962, 0, 1984, 0, 0, 0, 0, 0, 0,
	1963, 1965, 1970, 1964, 0, 0, 0, 3480, 0, 0,
	0, 1936, 0, 0, 1957, 0, 0, 1980, 0, 1981,
	0, 1983, 0, 0, 0, 0, 1950, 1951, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1989, 0,
	0, 0, 1975, 0, 1972, 0, 0, 1935, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1955, 1956,
	0, 0, 0, 0, 0, 0, 0, 1952, 0, 0,
	0, 0, 0, 0, 0, 0, 1988, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1982, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1971,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1986, 0, 0, 0, 0, 1958, 1959, 1960, 1961, 0,
	3507, 0, 1973, 0, 0, 1941, 0, 0, 0, 0,
	0, 0, 0, 1947, 1948, 1954, 1976, 1953, 1949, 0,
	1946, 1944, 1945, 1937, 1938, 1939, 1940, 1942, 1943, 0,
	0, 0, 0, 0, 0, 0, 0, 1933, 1934, 0,
	1966, 1967, 1968, 1977, 1978, 1979, 0, 0, 1974, 1962,
	0, 1984, 0, 0, 0, 0, 0, 0, 1963, 1965,
	1970, 1964, 0, 0, 0, 0, 0, 0, 0, 1936,
	0, 0, 1957, 0, 0, 1980, 0, 1981, 0, 1983,
	0, 0, 0, 0, 1950, 1951, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1989, 0, 0, 0,
	1975, 0, 1972, 0, 0, 1935, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1955, 1956, 0, 0,
	0, 0, 0, 0, 0, 1952, 0, 0, 0, 0,
	0, 0, 0, 0, 1988, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1982, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1971, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1986, 0,
	0, 0, 0, 1958, 1959, 1960, 1961, 0, 0, 0,
	1973, 0, 0, 1941, 0, 0, 0, 0, 0, 0,
	0, 1947, 1948, 1954, 1976, 1953, 1949, 0, 1946, 1944,
	1945, 1937, 1938, 1939, 1940, 1942, 1943, 0, 0, 0,
	0, 0, 0, 0, 0, 1933, 1934, 0, 1966, 1967,
	1968, 1977, 1978, 1979, 0, 0, 1974, 1962, 0, 1984,
	0, 0, 0, 0, 0, 0, 1963, 1965, 1970, 1964,
	0, 0, 0, 0, 0, 0, 0, 1936, 0, 0,
	1957, 0, 0, 1980, 0, 1981, 0, 1983, 0, 0,
	0, 0, 1950, 1951, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1989, 0, 0, 0, 1975, 0,
	1972, 0, 0, 1935, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1955, 1956, 0, 0, 0, 0,
	0, 0, 0, 1952, 0, 0, 0, 0, 0, 0,
	0, 0, 1988, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1982, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1971, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1986, 0, 0, 0,
	0, 1958, 1959, 1960, 1961, 0, 0, 0, 1973, 0,
	0, 1941, 0, 0, 0, 0, 0, 0, 0, 1947,
	1948, 1954, 1976, 1953, 1949, 0, 1946, 1944, 1945, 1937,
	1938, 1939, 1940, 1942, 1943, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1974, 1962, 0, 1984, 0, 0,
	0, 0, 0, 0, 1963, 1965, 0, 0, 0, 0,
	0, 0, 1043, 0, 1094, 0, 0, 0, 1957, 0,
	0, 1980, 0, 1981, 0, 0, 0, 0, 0, 0,
	1950, 1951, 0, 0, 0, 0, 0, 0, 0, 1051,
	0, 0, 0, 0, 0, 0, 1975, 0, 1972, 0,
	0, 0, 0, 0, 0, 0, 1066, 0, 1049, 1048,
	0, 0, 0, 1956, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1988, 1068, 0, 0, 0, 0, 0, 1050, 0, 0,
	0, 0, 1053, 0, 0, 0, 0, 1105, 0, 1078,
	0, 0, 0, 0, 0, 0, 0, 1063, 1064, 0,
	0, 0, 1982, 0, 0, 0, 1083, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1971, 1095, 1055, 0, 0, 0, 0,
	0, 1056, 0, 0, 1986, 0, 0, 0, 0, 2492,
	0, 0, 0, 0, 0, 0, 1973, 0, 0, 0,
	0, 0, 0, 0, 1057, 0, 0, 1947, 1948, 1954,
	1976, 1953, 1949, 1092, 1946, 1944, 1945, 1937, 1938, 1939,
	1940, 1942, 1943, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1962, 0, 0, 0, 1093, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1059, 0, 0, 1957, 0, 0, 0,
	0, 0, 1047, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1060, 1061, 1975, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1069, 1067, 0, 0, 0, 0, 0, 0, 1062,
	0, 0, 0, 1079, 0, 0, 1100, 1099, 1988, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1102, 1091, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1096, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1973, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1947, 1948, 1954, 1976, 1953,
	1949, 0, 1946, 1944, 1945, 1937, 1938, 1939, 1940, 1942,
	1943, 0, 0, 0, 1054, 0, 0, 1104, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1052, 0, 0, 0, 0, 1087, 1088, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1090, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1097, 1085, 0, 0, 0,
	0, 0, 0, 0, 1103, 1080, 0, 0, 1072, 1070,
	0, 0, 1075, 0, 0, 0, 0, 0, 1076, 0,
	0, 1045, 0, 1098, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1046, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1089, 0, 1077, 0, 0, 0, 0, 0, 1074, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1101,
	0, 0, 0, 0, 0, 0, 0, 1081, 0, 1082,
	0, 0, 0, 0, 0, 0, 0, 1058, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1084, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1086,
}

var sqlPact = [...]int{
	7123, -1000, -1000, -1000, -1000, 183, -1000, -1000, 182, 181,
	179, 178, 172, 170, 165, 163, 161, 160, 159, -1000,
	-1000, 155, 154, 153, 152, -1000, -1000, 150, -1000, -1000,
	148, -1000, 146, 145, 144, -1000, -1000, 143, -1000, 138,
	-1000, -1000, -1000, -1000, 137, 136, 135, 98674, 98086, 99260,
	2399, 125684, 108064, 2131, 87514, 125096, 86926, 124508, 2260, 9495,
	123920, 2865, 134, -1000, 123332, 133, 132, 131, -1000, 107476,
	122744, 105126, 104538, 2024, -1000, 130, 128, -1000, 9082, 76292,
	123, 122, 121, 120, 2462, 119, -1000, 117, 116, -1000,
	-1000, 115, -1000, 16272, 1556, -1000, 114, 113, -1000, 5431,
	103950, 112, 110, 109, 2567, 107, 106, 73348, 105, 104,
	103, 2450, 2966, -1000, -1000, 2191, -1000, -1000, 102, 101,
	100, 97, 95, 93, 91, 89, 88, 85, 84, 82,
	80, -1000, 79, 78, 77, 76, 75, -1000, 74, 73,
	72, -1000, 71, -1000, 70, 69, 68, 58, 57, 55,
	52, 51, 50, 49, 44, 43, 42, 38, 37, 146070,
	-1000, -1000, 36, -1000, 1903, 1735, 1726, 1723, 1720, 1711,
	966, 34, 33, 31, 29, 28, 26, 24, 21, 20,
	19, 9, 8, 7, 6, 5, 4, 3, 2, 1,
	0, 142, -2, -4, -5, -6, -7, -10, -12, 2738,
	3648, -1000, 1773, 957, 33167, 3110, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 134474, 126270, -14, -140, -15,
	-1000, 3418, 1019, 60939, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 229, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	412, 2455, 666, -1000, -1000, -1000, 122156, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2397, -70, -1000, 2095, -1000,
	-1000, -1000, -1000, -1000, 655, -1000, 2396, 2340, 353, 2338,
	-1000, -1000, -1000, 3525, 2559, 3986, 3985, 3983, 3982, 3978,
	133888, 1895, 3977, 2617, 3971, 3966, 3960, 3959, 3957, 3955,
	3953, -1000, 97498, 1059, 96910, 96322, 3500, 121570, 95734, 120982,
	136824, 51323, 953, 3524, -1000, -1000, -1000, -1000, -1000, -1000,
	126270, -1000, 1058, -1000, -1000, 3952, 2186, 654, 106888, -1000,
	-1000, 120394, 2082, -1000, -1000, -1000, 907, 1148, 35575, 35575,
	35575, 228, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 3537,
	-1000, -1000, -1000, -1000, 126270, 2814, 2814, 1439, 1461, 1461,
	2814, 2814, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	3951, 3949, 3948, 3946, 3944, -1000, -1000, -1000, 86338, 25752,
	85750, 85162, 119806, 50721, 95146, 94558, 3943, 3940, 3936, 50119,
	81046, 58544, 3647, 119218, 136236, 3646, 3645, 1057, 2092, 1484,
	-1000, -1000, -1000, -1000, -1000, -1000, -38, 78053, 3730, 126270,
	-1000, 227, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 49517,
	772, 48915, 740, 48313, 694, 118630, -1000, -1000, -1000, -1000,
	80448, -1000, 118042, 2549, 3935, 3934, 1156, 3933, 3377, 1803,
	3932, 1945, 1236, 3929, 3927, 3926, 3925, 3922, 3918, 3915,
	1501, 117454, 3100, 1530, 116866, 1807, 135648, 1056, 93970, 99260,
	2711, 116278, 1391, 1376, -1000, -1000, -1000, -1000, 3158, 2961,
	2957, 1117, -1000, -1000, -1000, -1000, 64497, 7824, 6314, -1000,
	-1000, 11679, 115690, 67477, 99260, 99260, -1000, -1000, -1000, -1000,
	-1000, -1000, 47711, 556, 47109, 862, 115102, -1000, -1000, 65093,
	3042, 1095, -1000, -1000, -1000, -1000, -1000, 114514, 46507, 470,
	45905, 852, 126270, -1000, 3098, 2037, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2457, 1660, 3731, 2800, 79850,
	2140, 1421, 3490, 3157, 3156, 1539, 2084, 3149, 3912, 2690,
	3134, 3133, 3131, 3123, 3108, 1313, 2685, 535, 2674, 32565,
	3081, 1866, 45303, 1584, 1519, 3107, 3104, 3748, 3574, 2073,
	2074, 2086, 2100, 84574, 3909, 3908, 3405, 3102, 3085, 2858,
	3082, -1000, 3035, 1486, 226, -1000, -1000, -1000, -1000, -1000,
	-1000, 1487, -1000, -1000, -1000, -1000, -1000, 89858, -1000, -1000,
	1388, -1000, -1000, 1388, -1000, -1000, -1000, -1000, -1000, 1341,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1773, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2921, -1000, 2187, -1000, -1000,
	-1000, 2619, 3413, 3413, 3413, 3523, 384, 383, -1000, 142,
	-1000, -1000, 145824, -1000, -1000, 51925, 51925, 51925, 51925, 51925,
	51925, 51925, 51925, 2270, -1000, 652, -1000, -1000, 711, -1000,
	651, 576, 530, -1000, -1000, -1000, -1000, -1000, -1000, 649,
	-1000, -1000, -1000, -1000, -1000, -1000, 3705, -1000, 28816, -1000,
	-1000, -1000, 393, 648, 51925, -1000, -1000, 3771, 3770, 973,
	-1000, 217, 928, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 3097, 647, 646, -1000, 645,
	644, 642, 640, 634, -1000, 633, -1000, 632, 630, 629,
	628, 627, 610, 609, 605, -1000, 2112, -1000, -1000, -1000,
	-1000, -1000, -1000, 568, 567, 567, 567, -1000, 1051, -1000,
	-1000, -1000, 246, 566, 241, 565, 563, 560, -1000, 603,
	602, 589, 588, 586, 583, 582, 581, 580, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1049, -1000, -1000, -1000, -1000,
	1246, -44, 126270, -1000, 412, -44, -1000, -1000, 579, -1000,
	37399, 37399, 37399, -1000, -1000, 2394, 51925, -1000, 2427, -1000,
	-33, -33, 860, 62706, -1000, 59739, 860, 363, 720, 68652,
	-1000, 3033, -1000, -1000, 577, 214, -1000, -1000, -1000, -1000,
	26348, 3030, 126270, 126270, 126270, 99260, 99260, 99260, 126270, 3905,
	3903, 3286, 51925, -1000, -1000, 75704, 138583, 99846, -1000, -1000,
	3631, 73934, 75117, 3096, 138583, 3091, 138000, 3902, -1000, -1000,
	-1000, -1000, -1000, 3244, 3901, 3899, 3894, -1000, 126270, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 247, 3243, -1000, -1000,
	103362, 247, 3242, -1000, 247, 3241, -1000, 102776, -1000, -1000,
	2336, 3240, -1000, -1000, 250, 3236, -1000, -1000, -1000, 248,
	3233, -1000, -1000, 213, -127, 3232, -1000, -1000, -1000, -1000,
	-1000, -1000, 145824, -1000, -1000, -1000, 137412, -1000, 3409, -1000,
	126270, -1000, 51925, -1000, -1000, 3629, 1931, 3447, 3558, -1000,
	-1000, -52, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2597,
	2584, 1146, 2433, -1000, 3310, 1430, 35575, 3364, -1000, -1000,
	-1000, -1000, -1000, 212, 26348, 2936, -1000, -1000, 126270, -1000,
	126270, 2814, 2814, -1000, -1000, -1000, 3739, 3738, 2814, 2814,
	126270, 126270, -1000, -1000, -1000, -1000, -1000, -1000, 4214, 3231,
	1657, -1000, 2432, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2005, 3230, -1000, 2274, 3229, 2004, -1000, -1000,
	1834, -1000, 142338, 1411, -1000, -1000, -1000, -1000, 2292, 3228,
	-31, -1000, -1000, 2325, -1000, -1000, -1000, -1000, 142130, -1000,
	2972, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1732, -1000, -1000, 2199, 2063, -1000, 1297, 3227, -1000, 2798,
	2798, 93382, 3237, 66881, 65093, 78053, -47, -1000, -1000, -1000,
	-1000, -1000, -129, -1000, 25149, 145824, -1000, -1000, -1000, -1000,
	1858, 145824, 868, -1000, -1000, 3225, -1000, 145824, 861, -1000,
	-1000, 3224, -1000, 2684, -1000, 3090, -1000, -1000, 2501, 2500,
	1007, -1000, 3893, -1000, -1000, 3892, -1000, 3890, 3889, 3888,
	-1000, 1715, 2067, 3879, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 92796, 2393, -1000, -1000, 89272, 3087, -1000, 2497,
	3555, -1000, 92208, 1055, -1000, 989, 2496, -1000, 102190, 587,
	2495, -1000, 3878, 3499, 2743, 989, 2494, -1000, -1000, -1000,
	-1000, -1000, 970, -1000, 70411, -1000, 70411, -1000, 1681, -1000,
	133302, -33, 99260, 3705, -1000, -75, -1000, -1000, -1000, 1019,
	-1000, 63898, -1000, 63898, 106300, 81642, 960, 3029, 72759, 145616,
	-1000, 1005, -1000, -1000, 145824, -1000, -1000, -1000, 2676, -1000,
	-198, 2797, -1000, 81642, 66285, 3028, 2675, -1000, 145824, -1000,
	-1000, -1000, -1000, 145824, -1000, -1000, -1000, 81642, 89272, -1000,
	113926, 91620, -1000, -1000, 1475, 2637, -1000, -1000, -1000, 81642,
	1319, 81642, 81642, 81642, -1000, 113338, -1000, -1000, 2143, 1304,
	3406, 2106, 99260, -1000, 2101, -1000, -1000, -1000, 3449, 3166,
	126270, -1000, -1000, 3083, -1000, 77466, 101604, -1000, 101018, -1000,
	100432, -1000, 99260, -1000, 99260, -1000, 3877, 3876, 3874, -1000,
	-1000, 3871, -1000, 3869, 3419, -1000, 805, 44701, 145824, 3415,
	-1000, 3866, 2055, 3081, 145824, -1000, 3160, 1725, 1717, 126270,
	-1000, -1000, 126270, -1000, 126270, -1000, -1000, -1000, 2415, 1585,
	-1000, -1000, 2591, -1000, -1000, -1000, 1004, -1000, -1000, 99260,
	99260, 99260, 99260, 1232, -1000, 44099, -1000, -1000, 3086, 3865,
	1688, -1000, 2046, -1000, 3017, 3429, -1000, 1467, 1875, 209,
	3774, -1000, -1000, 251, -1000, -1000, -52, -1000, 132716, -1000,
	2619, -1000, 126270, -1000, 2592, 3072, 3080, 1781, 2410, 2696,
	-1000, 43497, 2666, 55537, 2429, 142, -1000, -1000, 142, 142,
	34371, -1000, -1000, 73934, 73934, 26348, 1346, 51925, 51925, 51925,
	51925, 51925, 51925, 51925, 51925, 51925, 51925, 51925, 51925, 51925,
	51925, 51925, 51925, 51925, 51925, 51925, 51925, 51925, 51925, 51925,
	51925, 51925, 51925, 51925, 51925, 51925, 51925, 51925, 51925, 51925,
	51925, 51925, 51925, 2121, 51925, 1336, 51925, 51925, 51925, 51925,
	2068, -1000, -1000, 2021, 457, 2166, 576, -1000, -1000, -1000,
	3675, 3675, 3675, 1513, 1513, 1513, 14271, 14271, 557, 3864,
	711, -1000, 51925, -1000, 86, 63292, 51925, 26946, -1000, 383,
	7407, 2604, -1000, 382, 27578, -1000, -1000, -1000, 28816, 530,
	42865, 51925, 1022, 145824, -1000, -1000, 1529, 3715, 24546, 3114,
	2851, 575, 856, 855, 31933, 31301, 30669, 30037, 847, 842,
	51925, 51925, 51925, 51925, 51925, 51925, 51925, 51925, -1000, -1000,
	3735, -1000, 3715, -1000, -1000, -1000, -1000, 3715, 1330, 1318,
	3715, -1000, 3715, 3715, 10113, 10113, 42263, 41661, 41059, 56139,
	40457, 51925, 29435, 39855, 39253, -1000, 57945, 126270, -44, 3626,
	51925, 346, -1000, 143248, -1000, 346, 346, 574, -80, 145824,
	2659, 2659, 61528, 2538, 2288, 2288, 2288, -1000, 860, 19081,
	860, 111580, 2306, 860, 860, 207, 236, 381, 59143, 2427,
	111580, 699, 573, -17, -20, -25, -1000, -1000, -27, -28,
	-1000, -1000, 99260, 572, 26946, 26348, 202, 2151, -81, 2701,
	2698, -1000, 2697, 2695, -1000, 2692, 2391, -1000, -1000, -1000,
	1900, -88, 1298, 99260, 126270, 1368, 3863, -104, -1000, 5951,
	-97, -1000, 1224, 201, 3715, -1000, -1000, -1000, -1000, -1000,
	3862, 3861, -1000, 1044, 571, 569, 420, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 568, 567, 567, 567, -1000,
	246, 566, 241, 565, 563, 560, -1000, -1000, -1000, -1000,
	-1000, 3014, 99260, 126270, 1360, 3856, 88100, -127, 99846, -91,
	-1000, -1000, 126270, -1000, -1000, -1000, 3855, -1000, 99260, -1000,
	-1000, 99260, 247, 3223, -1000, 99260, -1000, 99260, 243, 3222,
	-1000, -1000, 126270, -1000, 99260, 99260, -1000, 126270, 126270, 126270,
	138583, 138583, 240, -1000, 99260, 802, -106, 1164, -52, -1000,
	-1000, -1000, -1000, 1388, -1000, 1810, -1000, -1000, -1000, -1000,
	-1000, -1000, 1374, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 973, -1000, -1000, -1000, -1000, 3723, 3680, -45, -1000,
	-1000, 26348, -1000, 1998, -1000, -1000, -1000, -1000, 126270, 126270,
	-1000, -1000, 126270, 126270, -1000, -1000, -53, 1676, 541, 1293,
	-1000, 83986, 2510, 3476, 3851, 2729, 3392, 1671, -1000, 1572,
	559, -1000, 3548, 89858, 3573, 3586, 1327, -1000, 3005, -1000,
	-1000, -1000, 901, 1678, 1845, 1291, 1286, 89858, 2274, -1000,
	73934, -1000, 2737, 3522, 1461, 1433, 1461, 1461, 1109, -1000,
	89858, 1826, 1285, 1281, 1276, -1000, -1000, 1734, 1629, -1000,
	-1000, 112752, -1000, 1274, 1273, 3643, 2921, 2268, 734, 2019,
	-1000, 1338, 1271, 2998, -1000, -1000, -55, 3569, 3585, 1327,
	-1000, 2995, 1270, -1000, -1000, -1000, 3521, 99260, 26348, 1616,
	1610, 1598, 1821, 1269, -46, -1000, 3566, 1662, -1000, 89272,
	89272, 108650, 126270, 3655, 81642, -1000, 2524, -1000, -1000, -1000,
	3478, 3477, -1000, -1000, 1268, 1265, -1000, 1013, 8981, 3329,
	-1000, 138583, 1013, 1013, 2001, 3221, 2784, 1689, -1000, 2796,
	848, 2795, -1000, -1000, -1000, 848, -47, 78053, 126270, 199,
	-1000, 86, 51925, 51925, 86, 51925, 86, -1000, 3550, 3220,
	3219, 3849, -1000, -1000, -1000, -1000, -1000, 3846, 2033, 2615,
	-1000, -1000, 555, 2492, 2985, 126270, 96, -1000, 99260, 3136,
	76879, 3216, 138583, 2274, 2489, -1000, -1000, 91032, -1000, 3214,
	412, 2488, -1000, 499, 3845, 3213, -1000, 132130, -1000, 3409,
	1252, 3212, 1092, 792, 3622, -1000, 792, 70998, -1000, 126270,
	-1000, -33, 1240, 82814, -107, -108, 377, -1000, 112166, 126270,
	126270, 3347, 2050, 2043, -1000, 972, 65093, -1000, 65093, -109,
	-1000, -198, 2794, 1516, 65093, -1000, 960, -125, 848, -1000,
	848, -1000, 99260, 3076, -1000, -1000, 81642, 1316, 1314, 1310,
	-1000, -1000, -1000, -1000, 3842, 3841, 3840, 3839, -1000, -1000,
	987, 99260, 126270, 99260, -1000, -1000, 1639, -1000, 195, -1000,
	138583, -1000, 138583, 126270, 99260, -1000, 987, 126270, 987, 126270,
	987, 126270, 987, 987, -1000, -1000, -1000, -1000, -1000, 86,
	-1000, -1000, 145824, -1000, 51925, -1000, -1000, 1555, 3838, 1745,
	-1000, 3075, -1000, 3073, -1000, 18, -1000, -1000, 3733, 1926,
	-1000, 3767, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	3837, 145824, -1000, 1965, -1000, -1000, -1000, -1000, 99260, 99260,
	99260, 99260, 126270, 3325, -1000, 126270, 3321, 99260, -1000, 3773,
	-1000, -1000, 89858, -1000, 2592, 3072, -1000, -1000, -1000, -1000,
	-1000, -1000, 1790, 2352, -1000, 2653, -1000, 1608, -1000, -1000,
	-1000, 145824, 56741, -1000, -1000, 145824, 1884, -1000, 54935, 54333,
	-1000, -1000, 1761, 99260, 2712, -1000, 2712, -102, -1000, 143040,
	2652, 99260, -1000, -1000, -1000, -1000, -1000, 896, 1407, 1407,
	1370, 1370, 1370, 1370, 3553, 6736, 434, 6932, 10948, 10948,
	416, 416, 416, 416, 416, 10948, 6698, 1513, 1513, 6698,
	6698, 6698, 6698, 6698, 1513, 1513, 1513, 10948, 10948, 10948,
	1513, 14271, 5977, 16314, 51925, 51925, 1258, 2017, 457, 14285,
	51925, 8036, 8036, 8036, 8036, -1000, 2060, -1000, -1000, -1000,
	-1000, 2983, 554, 56139, 56139, -1000, -1000, -1000, -1000, 28197,
	51925, -1000, -1000, -1000, -1000, 38621, -1000, -1000, 141920, -336,
	376, -1000, 194, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 375, -86, -3, -1000,
	51925, 51925, 51925, 374, -1000, 193, 51925, 126270, -1000, 17641,
	690, -175, -1000, -114, 1460, -1000, 51925, -1000, -1000, 1256,
	-1000, 1255, 1254, 1250, -1000, 553, 373, -1000, 192, -1000,
	2284, 544, 543, 51925, -1000, -1000, -1000, -1000, -1000, 141712,
	-1000, -1000, 141504, -1000, -1000, 141296, -1000, -1000, 141088, -1000,
	-1000, -1000, -1000, -1000, 145408, 16269, 15598, 15146, 6777, 12986,
	12680, -115, 372, -116, 371, 895, 886, 368, 366, 361,
	-117, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -122, 360, -1000, 2981, -86, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 359, -1000, 356, -1000,
	145200, -86, 354, 8066, -1000, 56139, 56139, 56139, 56139, 349,
	-1000, 142832, -1000, 144992, 38019, 38019, 38019, 348, 144782, 51925,
	-86, -124, -1000, -131, -1000, -1000, -1000, -1000, 523, -133,
	1012, 37399, 60350, 26348, -1000, 1012, 1012, 51925, -1000, 51925,
	2671, -1000, -1000, -1000, -1000, 2664, 1943, 2659, 61528, -1000,
	-1000, -1000, -1000, 111580, -1000, 3705, 2831, -1000, 111580, -1000,
	-1000, 126270, 412, -1000, 111580, 111580, 26348, 860, -1000, 860,
	111580, 600, -1000, -1000, -1000, -1000, -1000, 347, 71587, -3,
	190, 26348, 989, -1000, -1000, 2788, 2788, 2788, 2788, 2788,
	99260, -1000, -1000, 138583, 1249, -50, -96, 2792, -1000, 3653,
	-1000, 2130, -1000, 73934, -1000, 710, 1039, 26348, -1000, -1000,
	-1000, 542, -1000, 3715, 3715, -1000, 3715, 138583, 2980, 169,
	2791, -1000, 2389, -48, 164, 138583, 3836, -1000, -1000, 247,
	-1000, 99260, 247, 247, -1000, 99260, 99260, 2336, -1000, 250,
	-1000, 248, -1000, -1000, -127, -1000, 1002, 35575, -1000, 1388,
	-1000, -1000, 1609, -1000, 2058, -1000, 1317, -1000, -1000, 35575,
	-1000, 3351, -1000, 1820, -1000, -1000, -1000, -1000, 4651, 126270,
	126270, 99260, -1000, 109822, 126270, -1000, 2225, 138583, -1000, 2486,
	131544, 2464, 130958, 73934, -1000, -1000, 540, 919, 2645, 2640,
	1090, 126270, 126270, 2635, 130372, 129786, -1000, 3834, 126270, 2122,
	51925, 109822, 3520, 2271, 2562, 86, 86, -1000, 86, -1000,
	-1000, 538, 1207, 99260, 99260, 126270, 138583, 99260, 1999, -1000,
	-1000, -1000, -1000, -1000, 90444, -1000, -1000, 1461, -1000, -1000,
	-1000, 1461, 2274, 1989, 126270, 138583, 99260, 138583, 129200, 2006,
	128614, 1983, -1000, -1000, 1816, 126270, -1000, -1000, -1000, -1000,
	1410, -1000, 734, 1247, 2978, 51925, 51925, 2163, 86, 86,
	-1000, 86, 537, 26348, 2009, -1000, 3037, 126270, 3766, 128028,
	3765, 126270, 126270, 126270, 138583, 3411, 126270, -1000, -125, -49,
	-149, -1000, 814, 812, -129, -1000, 3655, -1000, 811, 2186,
	126270, 138583, -1000, 127442, 8981, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2168, 79252, 1097, 126270, 1297, -1000, -1000, 1815,
	1244, 1238, 89858, 2161, 1804, 1915, 138583, 65093, 980, 65093,
	2750, -1000, -1000, 23943, -1000, 145824, 145824, -1000, 145824, -1000,
	76879, 81642, 126270, -1000, -1000, 1053, 126270, 83400, 944, 3211,
	69824, -129, 960, 89272, 81642, 3130, 126270, 2708, 126270, -1000,
	-1000, 2274, 3210, 412, 2485, -1000, 138583, 3621, 3209, 536,
	3831, 3829, -1000, 99260, 2386, 2484, -1000, -1000, 126856, 3264,
	734, 126270, 1012, 61528, 2015, -1000, 68066, 1075, 126270, 1925,
	156, -1000, -1000, -1000, -8, 126270, -1000, 718, -1000, -1000,
	1240, 1240, 960, -149, 534, 65689, -148, -1000, 189, 531,
	809, 808, -1000, 5247, -1000, -198, -1000, 81642, 972, 65093,
	2971, -198, 2786, 2967, -1000, -1000, 1000, -1000, 1387, 960,
	-1000, 81642, -1000, 81642, -1000, 81642, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -34, 1914, 126270, -127, -127, -62,
	-50, -1000, 987, -1000, 987, -1000, 987, -1000, -1000, -1000,
	145824, -1000, -1000, -1000, 1737, 1728, 126270, -1000, 3071, -1000,
	126270, -1000, -1000, 26348, 126270, 99260, 26348, 99260, 3070, 3058,
	-1000, -1000, -1000, 126270, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1122, -1000, 1884, 2348, -1000, 530, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 2573, -1000, -51,
	34371, 869, -1000, -1000, 99260, -35, 51925, 51925, 13649, 11805,
	51925, 56139, 56139, -1000, 51925, 10064, -1000, -1000, -1000, -1000,
	-1000, 2960, 528, 51925, 73934, 7965, 6072, -1000, 345, 12279,
	6698, -1000, 51925, -1000, 631, -1000, 344, 36797, -1000, 143664,
	-26, -151, -1000, 19698, -86, -153, -1000, -1000, 708, -1000,
	3257, -1000, 51925, 144496, 2545, 2052, 1985, 1763, 3715, 3764,
	23340, -1000, 72173, 1014, 2311, 140880, -1000, -1000, -1000, -1000,
	73934, 73934, 51925, 51925, -1000, 51925, 51925, 51925, -1000, -1000,
	-1000, 3715, 876, -1000, -1000, -1000, 876, -1000, -1000, 1461,
	-1000, 1461, -1000, 51925, -1000, -1000, 2948, 51925, -1000, 73934,
	73934, 56139, 56139, 56139, 56139, 56139, 56139, 56139, 56139, 56139,
	56139, 56139, 56139, 56139, 56139, 56139, 56139, 56139, 56139, 56139,
	56139, 2633, 56139, 3671, 3671, 3671, 1493, -1000, 3055, 2948,
	51925, 51925, 73934, 343, 340, 339, -1000, 51925, -86, -1000,
	-1000, 6230, 526, -1000, 2564, -1000, 2840, -1000, 51925, -1000,
	-154, -1000, 2427, -1000, -1000, 2840, 2840, -156, 145824, 61528,
	61528, -1000, 525, 51925, 2646, -1000, -1000, 687, -334, -1000,
	804, -1000, -1000, -1000, -1000, -1000, -1000, 803, -1000, 412,
	-1000, -1000, -1000, 188, 111580, 111580, 685, -1000, -158, -1000,
	-1000, -161, -1000, 3620, 338, 26348, -1000, 1012, 5188, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2691, -282, 138583, 138583,
	1788, 2327, 3763, -1000, 3728, 701, 674, 187, 3715, 337,
	332, 325, -127, 138583, 138583, 1786, 74530, 138583, -1000, -1000,
	-1000, 247, -1000, -1000, -1000, 243, -1000, -1000, -1000, -1000,
	2735, -1000, -52, -1000, -1000, -1000, 51925, -1000, 947, -1000,
	-1000, 3469, 522, 1233, 1228, -1000, -166, -1000, 798, -1000,
	-1000, -1000, -1000, 2928, -1000, 3207, -1000, 2480, -1000, 1082,
	2478, 1658, -1000, 51925, 521, 2741, 520, 517, 3828, 2158,
	3827, 1091, 3206, 2336, 3204, 2336, -1000, -1000, -1000, 912,
	-1000, 145824, -169, -1000, 2271, -1000, 514, 513, -1000, -53,
	1661, 489, 1227, 997, -1000, -1000, 51925, 51925, 110994, -1000,
	488, 3399, -36, -1000, -1000, -1000, 1783, 1226, 1225, -1000,
	-1000, -1000, -1000, 2274, 1775, 1223, 1219, -1000, -1000, -1000,
	-1000, -1000, 2474, -1000, 126270, -1000, 3203, 126270, 996, -1000,
	3151, 3144, 882, 126270, 51925, 51925, 144288, 144080, -1000, 993,
	-1000, -1000, 51925, -1000, -55, 1216, 3567, 2471, 99260, -1000,
	2336, 3200, 1202, -1000, 1201, -1000, -1000, -1000, 3565, 3560,
	1208, -1000, 108650, 81642, 81642, 3655, 65093, -1000, -1000, -1000,
	81642, -1000, -1000, 78656, -1000, -1000, 1013, 126270, 138583, 99260,
	1923, -1000, -1000, 88100, 88686, 126270, 2784, -127, 848, -1000,
	2641, 848, 980, 2944, -1000, 2706, -1000, 992, 99260, 3823,
	322, -172, -58, 73934, -1000, -1000, -1000, -1000, 2464, 99260,
	126270, 1296, 2733, 126270, 126270, 3619, -1000, 2405, 512, 99260,
	870, -1000, 3705, -1000, -1000, -1000, 126270, -1000, -1000, 990,
	-1000, 3554, 99260, 3617, 3199, 989, 86, 99260, 3747, -1000,
	-1000, 3616, 99260, 3189, 2382, 2470, 2606, 734, 82228, 989,
	2309, -68, -1000, 1925, 36177, 3397, -174, -1000, -1000, -1000,
	1012, 70998, 61528, 51925, 3819, -182, -1000, -1000, -1000, -1000,
	-1000, 108650, 81642, 960, 126270, 126270, 3817, 81642, 81642, 81642,
	-59, 508, -1000, 788, 786, 784, -1000, -1000, -1000, -1000,
	-1000, -1000, 782, 780, 773, 771, 972, -1000, -1000, -198,
	65093, 972, 65093, 86, -1000, 2320, 99260, -1000, 960, 960,
	960, 22737, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 987,
	3762, -129, -1000, -1000, -1000, 2173, 2423, 2173, 1907, 1906,
	-1000, -1000, 2345, -1000, -1000, -1000, -1000, 2703, 3400, 26348,
	3564, 8036, 51925, 51925, 5511, 5602, 5243, 8036, 51925, 51925,
	73934, 12956, -192, 51925, 51925, -1000, 51925, 673, 145824, -1000,
	3761, 51925, 321, 318, -1000, -1000, -1000, 3707, -1000, -1000,
	-1000, 145824, 51925, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	312, -1000, 186, -1000, -1000, -1000, 135060, -1000, 51925, 311,
	3519, -1000, 310, 287, 10910, 313, 140672, 140464, 140256, 286,
	-1000, -1000, 285, 284, 145824, 3055, 145824, -1000, -1000, 951,
	951, 1379, 1379, 1379, 1379, 3671, 669, 894, 604, 486,
	486, 486, 688, 1493, 1493, 486, 486, 486, 1493, 2931,
	2632, 501, 8325, -1000, -1000, 145824, 145824, 279, -1000, -1000,
	-1000, -86, 277, 6230, -1000, 2835, 3518, 145824, -1000, 61528,
	2835, 2835, -1000, -1000, 1943, 126270, 145824, 61528, -1000, 2831,
	-1000, 20922, 20313, -1000, 26348, -1000, -1000, -1000, -1000, 3705,
	-1000, 71587, -1000, 498, -1000, 126, -1000, 5188, -1000, 767,
	-1000, -1000, 81642, 81642, 3813, 3812, 3811, 3760, 3759, 2156,
	3757, 2788, -1000, 2855, -282, -171, 126270, -1000, -1000, 672,
	3810, 695, 26348, 276, -1000, -1000, -1000, -127, -127, 126270,
	2926, 99260, 126270, 1359, -127, -1000, -1000, -1000, 3344, 145824,
	3054, 2828, 2826, 126270, 126270, -1000, 109822, 35575, 1465, 110408,
	126270, 3188, -1000, 3187, -1000, 1090, 2739, 140048, 62117, -1000,
	62117, 126270, -1000, -1000, -1000, -1000, 2090, 1499, 3809, 1141,
	-1000, 3464, 126270, -1000, 126270, -1000, -1000, -1000, 109822, -1000,
	126270, 126270, 99260, 126270, -1000, 138583, 3161, -193, 145824, -61,
	-1000, 751, -1000, 1367, -1000, 22134, 126270, 138583, 99260, 126270,
	138583, 99260, 3183, 1074, 126270, -1000, 2207, -1000, -1000, 3140,
	-1000, 145824, 143872, 86, 51925, 3155, -195, 26348, -1000, 3755,
	3754, 3182, 3473, -1000, 126270, 3753, 126270, 99260, 3342, -1000,
	-1000, -1000, 986, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1772, 1197, 1193, 2374, 2373, 2326, -62, 2161, 980, -63,
	496, -1000, 749, -1000, -1000, 746, 745, 980, -1000, 81642,
	65093, 3808, 412, -1000, 2722, -1000, 105712, 83400, 2333, -1000,
	-1000, 495, 126270, 126270, 491, -1000, 86, -1000, 3807, 109822,
	490, -1000, 2316, -1000, 671, -1000, -1000, 2565, 138583, 2274,
	86, 99260, -1000, 967, 412, 270, -65, -1000, 3255, 1086,
	26348, 99260, 3174, 2608, 734, 82228, -1000, 1252, 2696, -1000,
	-67, -1000, 487, 86, 2309, -1000, -68, 145824, -1000, 744,
	-200, 268, -1000, 3338, -1000, -1000, -201, -1000, -1000, 5221,
	5221, 81642, 65093, 81642, 81642, 81642, 65093, 81642, -1000, 972,
	848, -1000, -198, -1000, 2460, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 26348, 1673, -1000, 472, 471, -1000,
	-1000, -1000, -1000, 3400, 8036, 8036, 51925, 51925, 51925, 8036,
	12956, -202, -1000, 8036, 8036, -86, -1000, -1000, 143664, -1000,
	-1000, -1000, 145824, -1000, 21531, 2185, -1000, 139840, -1000, 34371,
	-1000, -1000, 51925, 51925, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 56139, 2905, 469, 73934, -1000, -1000, 267, 1010,
	51925, 53731, 2427, 1010, 1010, -1000, -203, -1000, -1000, -1000,
	3705, -1000, 3705, 126, -1000, -1000, 3806, 26348, -1000, 81642,
	-1000, -1000, -1000, -1000, -1000, -1000, 3805, 3803, 2446, 3802,
	3800, -1000, 2324, -1000, -1000, 3061, -220, 606, -1000, 3799,
	-1000, -1000, 147, 138583, 2902, 125, 2779, -1000, 86, -1000,
	-1000, -1000, -1000, -1000, -1000, 2771, 3615, -1000, 1982, -1000,
	126270, 126270, -1000, 126270, -1000, 26348, 126270, 2869, 1280, -1000,
	919, 2634, 468, 56139, 1118, 99260, 905, 2818, 2809, -1000,
	3577, 3517, 2836, -211, -1000, 126270, 51925, 126270, -217, -218,
	2444, -1000, -1000, 1113, 1278, 51925, 1106, -1000, -1000, -1000,
	73934, 467, 2336, 2336, -1000, -219, -225, -1000, -1000, -1000,
	51925, 1192, 126270, 34973, -1000, 3795, 3399, -1000, -1000, -1000,
	-1000, -1000, -1000, 126270, 126270, -1000, 126270, -1000, 51925, -1000,
	143456, 51925, 1189, -1000, -1000, -1000, 3752, 2336, 26348, 2336,
	-1000, 2336, 3473, 1138, 2401, 126270, 138583, 99260, 1997, 1997,
	2919, -1000, -1000, -1000, 2647, 2647, 81642, 65093, 65093, -1000,
	-69, 980, -1000, 3613, 2177, 3794, -1000, -1000, -1000, -1000,
	2627, -1000, -1000, -1000, 126270, 2623, 2848, 62117, 466, 463,
	126270, 961, -1000, -226, 83400, 944, 909, -1000, -71, 461,
	-1000, 742, -1000, -1000, -1000, -1000, 412, -1000, 2728, 3612,
	-1000, 3749, 460, 459, 126270, 2372, 458, 26348, 3394, 734,
	82228, -1000, 3264, 1925, -1000, 2453, 126270, 3383, -1000, 2696,
	457, -1000, 960, 455, 960, -1000, -228, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 972, -72, -1000, 872,
	729, -1000, -1000, 99260, 99260, 51925, 51925, -1000, 8036, 8036,
	8036, -1000, 262, -1000, -1000, 2309, 3516, -1000, -73, 139632,
	139202, 8454, 56139, 73934, -234, -1000, -1000, 126270, 145824, -76,
	-1000, 145824, 454, 453, 291, -1000, -1000, -1000, 668, 435,
	-1000, -1000, -1000, -1000, 3793, -1000, -1000, -1000, -1000, 138583,
	3791, -1000, 138583, -127, 138583, 138583, 1768, -1000, 109236, 126270,
	-1000, -1000, 1658, 1494, -1000, -1000, 126270, 2465, -1000, -1000,
	-1000, 975, 51925, 8325, 56139, 451, 51925, -1000, 447, 444,
	3608, 3313, -1000, 2719, 2912, 1980, 62117, -1000, 3400, -1000,
	139172, -1000, 1085, 2008, -1000, -1000, -1000, -1000, 145824, 56139,
	3473, 62117, -1000, -1000, 443, 440, 145824, 438, 741, 2900,
	-1000, -1000, -1000, -1000, -129, -1000, 145824, 86, 145824, 436,
	3567, -1000, -1000, -1000, -1000, 2336, 99260, 739, -1000, -1000,
	-1000, 1180, -1000, -1000, -1000, -1000, 3790, 3788, 2894, 88100,
	-1000, -235, -1000, -1000, -1000, 2020, 86, 944, -1000, -1000,
	2333, 433, -1000, 958, 2519, 2519, -236, 62117, 62117, -237,
	2339, 2727, -1000, 256, 3601, 909, -1000, 3681, -1000, 3309,
	3309, 51925, 3600, 3334, -1000, 86, -1000, 3747, 62117, -1000,
	99260, 62117, 2367, 2076, 2588, 82228, -1000, 2606, -1000, -1000,
	-242, 126270, 1925, -1000, -1000, 81642, -1000, -1000, -1000, 2460,
	-1000, 126270, -1000, 126270, -1000, -1000, -243, -245, -1000, 2147,
	51925, 34371, -1000, -1000, 8454, -248, -1000, -77, -1000, 3584,
	53731, 3786, 3784, 3781, -1000, -1000, -1000, -282, -1000, -127,
	-127, -127, 126270, -1000, 1973, -1000, 2464, -1000, -1000, 3172,
	-1000, 2833, 415, 18444, 8325, 2566, 126270, 18296, 2274, 2274,
	-1000, 3582, 2903, -1000, -1000, 2163, 414, -1000, -1000, -1000,
	-1000, 869, 126270, 958, 2802, 99260, 8325, 1088, -251, 2173,
	2173, 51925, 33769, 2195, -1000, 51925, -1000, -1000, 3473, 65093,
	138583, -1000, -1000, 138583, 2364, -1000, 2874, 3717, -1000, 2339,
	126270, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1085, -254, -256, -1000, -1000, 3455, -1000,
	3333, 2722, 86, -1000, -1000, -1000, -257, 145824, 86, 3780,
	967, 239, -259, 1086, -262, 99260, 2018, -1000, 734, -1000,
	2608, 1012, 3275, -1000, -264, -1000, -273, -274, -1000, -1000,
	235, 53129, 53129, 53129, -86, -102, -1000, 126270, 413, -1000,
	-1000, -1000, -1000, -1000, 124, -1000, -1000, 3122, 857, -1000,
	833, 1913, 233, 1094, 231, 166, -1000, -1000, -1000, 2836,
	-1000, 126270, -1000, -1000, -1000, 857, 412, -1000, 51925, 1085,
	-275, -1000, 1073, -281, -1000, 1069, -283, -1000, 2893, -1000,
	-290, 2336, -1000, -282, 240, 1997, 964, 3549, -1000, -1000,
	-1000, 2577, -291, -1000, -1000, 1980, 1085, 2163, 2408, -1000,
	2177, 961, -1000, -1000, -1000, -1000, -1000, 1085, 402, 1980,
	400, 1492, 734, -1000, -1000, 1461, 3394, 3270, 1328, 960,
	-1000, -1000, -1000, 3250, -1000, 57343, 2347, 1905, 142624, 3250,
	3250, -1000, -1000, 138583, 126270, 958, 3534, -1000, 843, 839,
	1540, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1012,
	-296, -1000, 2566, 145824, 958, -1000, 2173, 2767, -1000, 2173,
	2883, -1000, 2193, -1000, -1000, -1000, -1000, 2877, -1000, 1869,
	3711, -1000, -1000, 958, 126270, 2163, 1980, 958, 1898, 1891,
	3778, 944, 2339, 1980, 62117, 2163, 62117, 2144, -1000, 126270,
	-1000, 2076, 1326, -1000, 1637, -1000, -1000, 1819, 3590, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -127, -1000, -1000, 735,
	-1000, 3300, -1000, 1104, 2307, 2307, -1000, -1000, 833, -1000,
	-1000, 399, -1000, 398, -1000, 138583, 2314, -1000, -1000, -1000,
	-1000, 958, 2163, 1012, -1000, 3777, -1000, 2339, -1000, 2163,
	-297, 958, -298, 2216, -1000, -1000, -129, 2018, -1000, 1613,
	70998, 1902, -1000, -1000, 2296, 52527, 51925, -1000, 3657, -1000,
	-1000, 2665, -1000, 2836, 51925, 51925, 240, 69238, 1012, 958,
	-1000, -1000, 2577, 958, 1085, 1012, 1980, -1000, 734, 1492,
	70998, -272, -1000, -1000, -1000, 145824, -1000, -1000, -1000, -1000,
	-299, -310, -1000, -149, 108650, -1000, 1012, -1000, 1012, 1980,
	-1000, 2163, 138583, 2144, -272, -1000, 2163, 1177, -320, -1000,
	-1000, 2163, 958, -1000, -1000, -1000, -1000, -1000, 397, -1000,
	958, 1012, 51925, 1012, -1000, -323, -1000, 2163, -1000,
}

var sqlPgo = [...]int{
	0, 4609, 4608, 4605, 4602, 4601, 4600, 4599, 4598, 4596,
	4595, 4594, 4592, 4591, 4590, 146, 4589, 4587, 4585, 4584,
	4583, 4579, 4576, 4575, 4574, 4573, 4571, 4566, 4565, 4564,
	4563, 4562, 4559, 4558, 4556, 4555, 4554, 4552, 4551, 4550,
	4548, 4546, 4543, 4541, 4540, 4538, 4537, 4536, 4535, 4534,
	4533, 4532, 4531, 4529, 4527, 4526, 4525, 4523, 4522, 4520,
	4519, 4514, 4509, 4507, 4505, 4504, 4503, 4502, 4501, 4500,
	4499, 4498, 57, 4496, 4495, 4494, 4493, 4492, 4491, 4489,
	4488, 4487, 4486, 4482, 4481, 4480, 4479, 4478, 4477, 4475,
	4474, 4472, 4471, 69, 4470, 291, 4469, 4468, 4467, 4466,
	4465, 4464, 4463, 4462, 4460, 4457, 4455, 4453, 290, 4452,
	133, 167, 4451, 4450, 3989, 4449, 4448, 286, 4446, 4444,
	4441, 4436, 4434, 300, 4433, 4432, 4431, 4429, 4427, 268,
	4425, 4424, 4423, 4422, 4418, 4416, 65, 142, 4415, 4414,
	763, 4410, 4408, 4407, 4404, 4401, 4400, 4397, 264, 267,
	4392, 4388, 4387, 257, 180, 4386, 285, 4382, 4381, 4380,
	4378, 4377, 4373, 4372, 4360, 4359, 4358, 4356, 4353, 4352,
	4350, 4348, 4347, 4346, 4345, 4344, 4343, 4340, 4331, 4329,
	4328, 4327, 4325, 4323, 4322, 4319, 4318, 4317, 4316, 4315,
	4313, 4312, 4311, 4308, 4303, 4302, 4300, 4298, 4297, 255,
	220, 136, 4296, 4295, 283, 276, 4292, 4291, 4290, 4288,
	4286, 3572, 4285, 4284, 4282, 4280, 4279, 4278, 4277, 4275,
	4274, 147, 17, 82, 4273, 4272, 93, 97, 95, 86,
	107, 111, 4271, 128, 4270, 130, 120, 4269, 116, 109,
	21, 22, 222, 256, 8736, 250, 4268, 4267, 4266, 270,
	207, 4265, 251, 4264, 4262, 4259, 4258, 4257, 4256, 71,
	59, 221, 4255, 4254, 140, 183, 199, 188, 192, 184,
	176, 58, 113, 87, 63, 42, 15, 78, 224, 24,
	1, 280, 4251, 274, 10, 149, 7, 37, 4249, 4246,
	4243, 4242, 3966, 122, 4241, 281, 247, 182, 4240, 4238,
	4237, 536, 4235, 4234, 51, 386, 453, 112, 118, 20,
	139, 4232, 157, 181, 38, 4231, 177, 106, 4227, 4219,
	101, 96, 9903, 7516, 4216, 4211, 119, 76, 125, 288,
	198, 197, 211, 110, 170, 174, 91, 218, 216, 187,
	279, 4200, 261, 4199, 3595, 98, 190, 160, 6335, 4192,
	4191, 4189, 89, 4188, 114, 4185, 4184, 72, 30, 3,
	2, 151, 41, 44, 12, 4183, 34, 138, 50, 23,
	4182, 32, 4181, 4179, 4177, 4176, 53, 4175, 46, 168,
	4174, 4173, 299, 4172, 94, 52, 61, 4171, 25, 232,
	4168, 237, 143, 4166, 4163, 265, 200, 4160, 83, 244,
	4157, 4156, 4155, 4154, 4153, 4152, 154, 8, 135, 4151,
	4150, 162, 4149, 56, 252, 210, 4147, 67, 4146, 4145,
	186, 73, 148, 296, 194, 236, 129, 235, 201, 243,
	4144, 4143, 4142, 213, 4140, 4139, 227, 159, 4138, 4137,
	259, 301, 100, 48, 90, 248, 88, 206, 165, 4136,
	212, 4135, 4133, 298, 196, 230, 40, 11, 6, 99,
	115, 4132, 5, 249, 164, 240, 137, 4131, 7489, 2129,
	2415, 242, 4130, 171, 132, 85, 158, 163, 275, 102,
	4129, 4128, 179, 4127, 4126, 4125, 4124, 189, 4122, 4121,
	4120, 156, 193, 195, 4119, 123, 75, 55, 26, 155,
	260, 282, 131, 231, 208, 266, 4118, 4117, 4116, 209,
	4115, 81, 169, 166, 215, 262, 66, 4114, 263, 4113,
	152, 1984, 74, 153, 4112, 241, 4110, 4109, 4108, 4105,
	4102, 4100, 4099, 1882, 246, 4098, 4097, 4096, 36, 204,
	4095, 273, 245, 203, 124, 62, 4094, 104, 3406, 4093,
	238, 234, 64, 4, 4091, 29, 4090, 4849, 60, 4088,
	0, 14250, 10439, 13209, 13455, 4084, 3535, 4081, 4080, 4079,
	228, 79, 4077, 4076, 4075, 117, 4071, 92, 4069, 4068,
	77, 4066, 31, 16, 18, 33, 27, 369, 284, 4064,
	4063, 19, 150, 172, 4061, 294, 239, 4059, 4058, 4056,
	4055, 103, 4054, 47, 4053, 45, 4052, 4051, 49, 14,
	35, 4050, 4049, 161, 4048, 121, 217, 178, 4047, 175,
	4045, 84, 144, 4044, 4043, 4042, 68, 70, 271, 226,
	223, 105, 4041, 297, 4040, 214, 4034, 4033, 28, 4032,
	4028, 253, 127, 126, 54, 258, 145, 43, 191, 225,
	4010, 4007, 185, 4006, 4005, 4004, 292, 4002, 3569, 295,
	4001, 39, 3999, 3998, 3997, 13, 3996, 3995, 219, 3326,
	3994, 3992, 9, 3991, 202,
}

var sqlR1 = [...]int{
	0, 1, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 3, 3, 3, 3, 3, 3, 3, 6,
	6, 6, 6, 6, 6, 6, 6, 6, 6, 6,
	6, 6, 6, 6, 6, 6, 6, 6, 6, 6,
	6, 6, 6, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 13, 13, 9, 9, 9, 9,
	10, 10, 10, 10, 10, 56, 56, 11, 11, 11,
	11, 11, 11, 11, 11, 11, 11, 11, 11, 11,
	40, 42, 41, 35, 35, 36, 36, 37, 38, 38,
	43, 44, 12, 12, 12, 8, 8, 8, 8, 8,
	8, 8, 8, 21, 21, 45, 45, 22, 22, 47,
	47, 23, 23, 48, 48, 628, 628, 628, 629, 629,
	630, 630, 630, 26, 50, 19, 20, 20, 20, 20,
	631, 631, 631, 631, 39, 27, 51, 32, 32, 32,
	32, 32, 224, 224, 224, 224, 25, 25, 46, 46,
	267, 267, 266, 266, 266, 266, 266, 266, 266, 266,
	266, 266, 266, 266, 266, 266, 266, 266, 266, 266,
	266, 266, 266, 266, 266, 266, 266, 266, 266, 266,
	266, 266, 624, 624, 269, 269, 268, 256, 256, 257,
	257, 258, 258, 632, 632, 270, 270, 270, 271, 271,
	16, 16, 16, 16, 16, 16, 16, 16, 16, 16,
	522, 522, 522, 553, 553, 553, 553, 555, 555, 651,
	651, 652, 652, 652, 652, 652, 139, 139, 419, 419,
	419, 60, 60, 60, 60, 60, 619, 619, 226, 226,
	226, 228, 228, 227, 227, 227, 227, 227, 84, 84,
	638, 638, 637, 636, 636, 636, 639, 639, 639, 225,
	225, 225, 135, 135, 135, 135, 135, 135, 135, 135,
	136, 136, 137, 137, 229, 229, 229, 231, 231, 230,
	230, 230, 230, 230, 230, 230, 230, 230, 230, 230,
	230, 230, 235, 18, 18, 18, 118, 118, 118, 118,
	118, 118, 118, 113, 113, 557, 557, 558, 558, 220,
	220, 221, 221, 221, 221, 222, 222, 223, 223, 223,
	75, 75, 232, 232, 234, 234, 233, 233, 233, 233,
	233, 233, 233, 233, 233, 233, 233, 233, 233, 233,
	62, 62, 62, 62, 62, 62, 62, 62, 62, 63,
	63, 63, 63, 63, 64, 64, 64, 64, 64, 64,
	65, 65, 65, 65, 65, 65, 66, 66, 73, 73,
	73, 73, 73, 73, 73, 73, 201, 201, 76, 76,
	76, 76, 76, 76, 76, 76, 76, 76, 76, 76,
	76, 81, 81, 81, 81, 81, 653, 653, 653, 653,
	653, 653, 653, 653, 653, 653, 653, 653, 653, 653,
	653, 653, 653, 653, 653, 654, 654, 655, 655, 656,
	656, 657, 657, 657, 657, 657, 657, 657, 657, 657,
	657, 657, 657, 657, 657, 657, 657, 657, 657, 657,
	79, 79, 79, 79, 79, 79, 79, 79, 79, 79,
	79, 79, 79, 79, 79, 79, 79, 90, 90, 380,
	380, 343, 343, 91, 91, 91, 92, 92, 93, 93,
	77, 77, 616, 616, 617, 617, 617, 617, 513, 513,
	78, 625, 625, 625, 627, 627, 626, 626, 95, 95,
	418, 418, 96, 96, 96, 96, 96, 96, 97, 97,
	97, 97, 97, 97, 97, 98, 98, 98, 98, 98,
	98, 98, 98, 98, 98, 98, 98, 98, 98, 105,
	105, 105, 105, 105, 106, 106, 106, 103, 103, 103,
	100, 100, 100, 99, 99, 99, 104, 104, 104, 615,
	332, 332, 102, 102, 102, 101, 101, 101, 396, 396,
	107, 107, 107, 107, 344, 108, 108, 108, 108, 108,
	108, 108, 108, 111, 111, 110, 110, 110, 110, 110,
	110, 110, 110, 110, 110, 110, 110, 110, 110, 110,
	110, 110, 110, 110, 110, 110, 110, 110, 110, 110,
	110, 110, 110, 110, 110, 110, 112, 112, 112, 112,
	112, 112, 112, 112, 112, 112, 112, 112, 515, 515,
	4, 4, 262, 262, 261, 261, 261, 261, 5, 5,
	5, 265, 265, 264, 263, 109, 109, 109, 480, 480,
	114, 114, 114, 434, 434, 115, 115, 115, 115, 115,
	116, 116, 116, 116, 116, 116, 116, 116, 116, 138,
	138, 138, 138, 138, 138, 138, 138, 138, 138, 138,
	138, 621, 621, 389, 389, 295, 295, 295, 295, 127,
	127, 127, 127, 128, 128, 128, 128, 129, 129, 206,
	206, 145, 145, 145, 145, 144, 144, 144, 144, 144,
	144, 144, 144, 67, 67, 67, 68, 68, 69, 69,
	70, 70, 71, 71, 72, 72, 72, 72, 72, 148,
	148, 31, 31, 31, 31, 149, 149, 648, 648, 151,
	147, 147, 147, 147, 147, 146, 146, 150, 150, 150,
	150, 152, 154, 154, 154, 154, 154, 153, 153, 153,
	153, 153, 155, 155, 547, 547, 404, 404, 545, 545,
	567, 567, 546, 546, 350, 350, 350, 350, 350, 351,
	351, 351, 556, 556, 556, 556, 556, 556, 156, 156,
	156, 156, 156, 156, 156, 156, 156, 156, 156, 156,
	156, 156, 156, 156, 156, 156, 156, 156, 156, 156,
	156, 156, 156, 156, 156, 156, 156, 156, 156, 156,
	156, 156, 156, 156, 156, 156, 156, 156, 156, 156,
	156, 156, 156, 156, 156, 156, 156, 156, 156, 156,
	156, 156, 156, 156, 156, 156, 156, 156, 156, 156,
	156, 156, 156, 156, 156, 156, 156, 156, 156, 156,
	156, 156, 156, 156, 207, 207, 207, 208, 208, 213,
	213, 214, 214, 214, 215, 215, 215, 212, 212, 212,
	209, 209, 210, 210, 211, 211, 211, 211, 211, 211,
	211, 211, 211, 211, 218, 218, 216, 216, 217, 217,
	659, 659, 658, 658, 219, 219, 219, 219, 219, 182,
	182, 182, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 405, 405, 185, 185, 185, 169, 169,
	157, 157, 157, 157, 157, 157, 157, 157, 157, 157,
	162, 162, 162, 162, 162, 162, 162, 162, 163, 163,
	163, 158, 158, 171, 171, 171, 171, 171, 164, 164,
	165, 165, 165, 166, 166, 166, 166, 193, 193, 168,
	168, 170, 170, 170, 170, 170, 170, 170, 170, 170,
	159, 159, 159, 159, 173, 173, 173, 173, 441, 441,
	441, 199, 199, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 196,
	196, 196, 196, 196, 196, 640, 640, 641, 641, 641,
	189, 189, 189, 189, 189, 189, 494, 494, 183, 183,
	183, 183, 188, 188, 188, 188, 191, 191, 191, 191,
	424, 424, 180, 180, 180, 181, 181, 181, 186, 186,
	198, 187, 381, 381, 184, 184, 190, 190, 190, 190,
	192, 192, 192, 160, 160, 160, 160, 160, 160, 160,
	160, 160, 161, 161, 161, 161, 194, 194, 179, 179,
	195, 195, 195, 195, 195, 195, 195, 195, 195, 195,
	195, 660, 660, 175, 175, 175, 174, 174, 174, 174,
	177, 177, 178, 178, 178, 178, 178, 178, 176, 167,
	197, 618, 618, 613, 613, 613, 613, 613, 613, 613,
	613, 613, 614, 614, 614, 614, 620, 620, 119, 119,
	119, 119, 119, 119, 119, 130, 130, 130, 130, 130,
	130, 130, 133, 133, 120, 120, 120, 120, 120, 120,
	120, 123, 123, 121, 121, 121, 121, 122, 122, 85,
	85, 85, 85, 85, 17, 17, 17, 86, 86, 286,
	286, 240, 240, 240, 368, 368, 241, 241, 358, 358,
	358, 358, 236, 236, 237, 237, 238, 239, 239, 87,
	87, 661, 661, 661, 633, 633, 633, 634, 634, 634,
	634, 634, 634, 352, 352, 353, 353, 460, 460, 460,
	460, 460, 356, 356, 356, 357, 357, 357, 357, 357,
	357, 357, 357, 357, 366, 367, 367, 359, 359, 365,
	364, 364, 363, 363, 362, 362, 360, 361, 361, 361,
	370, 370, 369, 372, 372, 371, 459, 576, 576, 578,
	578, 578, 578, 578, 578, 578, 580, 580, 580, 580,
	580, 580, 580, 580, 580, 580, 580, 580, 580, 580,
	580, 580, 580, 442, 442, 662, 662, 663, 664, 574,
	574, 574, 575, 570, 570, 571, 571, 571, 571, 571,
	354, 354, 355, 355, 355, 355, 572, 573, 387, 387,
	498, 577, 577, 579, 579, 581, 665, 665, 665, 665,
	665, 665, 666, 666, 666, 458, 458, 457, 457, 456,
	456, 378, 378, 582, 582, 582, 582, 583, 583, 583,
	583, 583, 586, 585, 584, 584, 584, 584, 584, 89,
	89, 89, 421, 421, 420, 420, 422, 422, 422, 422,
	422, 422, 422, 422, 422, 422, 422, 422, 422, 422,
	422, 203, 203, 298, 298, 298, 83, 83, 83, 14,
	14, 14, 14, 14, 14, 14, 313, 313, 15, 15,
	15, 635, 635, 635, 88, 88, 88, 88, 88, 88,
	376, 376, 376, 297, 297, 297, 297, 297, 297, 297,
	297, 297, 297, 297, 297, 297, 297, 297, 297, 297,
	297, 297, 297, 297, 297, 297, 297, 297, 297, 623,
	623, 622, 622, 299, 299, 668, 668, 94, 94, 94,
	94, 94, 94, 94, 94, 516, 516, 517, 517, 82,
	82, 82, 82, 82, 443, 443, 440, 440, 439, 439,
	386, 386, 496, 496, 496, 497, 303, 303, 304, 304,
	259, 259, 259, 34, 33, 24, 24, 28, 28, 29,
	29, 285, 285, 285, 285, 285, 285, 285, 285, 285,
	30, 30, 53, 53, 53, 53, 54, 54, 54, 54,
	57, 57, 58, 58, 52, 52, 52, 52, 55, 55,
	49, 49, 59, 59, 59, 59, 59, 642, 644, 644,
	643, 643, 647, 647, 647, 647, 647, 647, 645, 645,
	646, 646, 649, 649, 650, 650, 126, 126, 131, 131,
	131, 131, 131, 132, 132, 132, 132, 134, 134, 134,
	134, 143, 143, 202, 202, 202, 202, 202, 202, 202,
	61, 61, 61, 61, 74, 74, 74, 74, 141, 670,
	670, 670, 142, 142, 142, 669, 669, 296, 296, 453,
	453, 454, 454, 671, 671, 455, 455, 455, 455, 455,
	289, 288, 290, 290, 291, 291, 80, 80, 80, 279,
	279, 278, 280, 280, 281, 281, 276, 276, 559, 559,
	283, 283, 283, 284, 284, 272, 272, 273, 273, 274,
	274, 275, 275, 287, 287, 554, 554, 672, 672, 117,
	117, 117, 205, 205, 342, 342, 342, 450, 450, 450,
	379, 379, 310, 310, 452, 452, 452, 452, 452, 417,
	417, 417, 204, 204, 394, 394, 407, 407, 408, 408,
	510, 510, 409, 124, 124, 125, 125, 140, 140, 244,
	244, 242, 242, 242, 242, 242, 242, 242, 242, 249,
	249, 250, 250, 251, 251, 252, 253, 253, 253, 253,
	397, 397, 254, 254, 254, 243, 243, 243, 245, 245,
	245, 245, 245, 245, 245, 248, 248, 248, 248, 255,
	255, 255, 247, 247, 593, 593, 593, 595, 595, 597,
	597, 596, 596, 592, 592, 594, 594, 667, 667, 423,
	423, 423, 375, 377, 373, 373, 374, 374, 384, 384,
	382, 383, 383, 385, 385, 495, 495, 495, 260, 260,
	260, 414, 414, 414, 414, 415, 415, 446, 446, 444,
	444, 444, 444, 445, 445, 447, 447, 447, 448, 448,
	449, 449, 411, 411, 412, 412, 413, 413, 413, 413,
	476, 476, 246, 246, 246, 391, 391, 391, 392, 392,
	466, 466, 466, 466, 466, 466, 466, 466, 466, 466,
	466, 467, 467, 465, 465, 465, 465, 499, 499, 499,
	499, 499, 499, 499, 499, 499, 500, 501, 501, 393,
	393, 502, 451, 451, 611, 611, 611, 612, 612, 493,
	493, 503, 503, 503, 503, 503, 503, 491, 491, 492,
	492, 511, 512, 512, 427, 427, 427, 427, 425, 425,
	428, 428, 428, 428, 428, 426, 426, 504, 504, 504,
	504, 416, 416, 505, 505, 505, 505, 506, 507, 507,
	508, 508, 461, 462, 462, 518, 518, 518, 518, 520,
	390, 390, 390, 390, 390, 569, 568, 568, 519, 519,
	519, 519, 519, 519, 519, 519, 519, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 535,
	535, 535, 535, 535, 535, 535, 521, 521, 521, 521,
	521, 525, 525, 525, 524, 524, 524, 524, 524, 524,
	524, 524, 524, 524, 524, 526, 526, 531, 531, 532,
	532, 532, 527, 528, 533, 533, 533, 533, 673, 673,
	537, 537, 529, 529, 529, 529, 529, 529, 529, 529,
	529, 523, 523, 523, 530, 530, 530, 436, 436, 436,
	436, 436, 436, 436, 436, 436, 436, 436, 436, 436,
	435, 435, 437, 437, 468, 468, 468, 468, 468, 468,
	468, 468, 468, 468, 468, 468, 468, 468, 468, 468,
	468, 468, 468, 468, 468, 468, 468, 468, 468, 468,
	468, 468, 468, 468, 468, 468, 468, 468, 468, 468,
	468, 468, 468, 468, 468, 468, 468, 468, 468, 468,
	468, 468, 468, 468, 468, 468, 468, 468, 468, 468,
	468, 468, 468, 468, 468, 468, 468, 468, 468, 468,
	468, 468, 468, 468, 468, 468, 468, 468, 468, 468,
	468, 468, 468, 468, 468, 468, 468, 468, 468, 468,
	468, 468, 468, 468, 469, 469, 469, 469, 469, 469,
	469, 469, 469, 469, 469, 469, 469, 469, 469, 469,
	469, 469, 469, 469, 469, 469, 469, 469, 469, 469,
	469, 469, 469, 469, 469, 470, 470, 470, 470, 471,
	471, 471, 471, 471, 471, 471, 471, 471, 471, 471,
	471, 471, 471, 471, 471, 471, 471, 471, 471, 471,
	471, 471, 471, 471, 587, 587, 587, 587, 587, 587,
	587, 587, 472, 472, 590, 590, 591, 591, 588, 588,
	588, 588, 588, 588, 588, 588, 588, 588, 588, 588,
	588, 588, 588, 588, 588, 588, 588, 588, 588, 588,
	588, 589, 589, 589, 589, 589, 589, 589, 589, 589,
	589, 589, 589, 589, 589, 589, 589, 589, 589, 589,
	589, 589, 589, 589, 589, 589, 589, 589, 589, 589,
	589, 589, 589, 589, 589, 589, 589, 589, 589, 598,
	598, 599, 599, 601, 601, 602, 602, 603, 604, 604,
	604, 605, 606, 606, 600, 600, 607, 607, 607, 607,
	608, 608, 609, 609, 609, 609, 609, 610, 610, 610,
	610, 610, 482, 482, 483, 483, 489, 489, 489, 347,
	347, 347, 347, 347, 347, 347, 347, 347, 347, 347,
	347, 347, 347, 347, 347, 347, 347, 347, 347, 347,
	347, 347, 347, 347, 347, 347, 347, 347, 347, 347,
	347, 347, 347, 347, 349, 349, 348, 300, 300, 300,
	300, 300, 300, 402, 402, 400, 400, 400, 403, 403,
	401, 401, 399, 399, 398, 398, 479, 479, 477, 477,
	481, 481, 429, 429, 536, 536, 536, 536, 536, 536,
	536, 536, 430, 430, 430, 438, 431, 431, 432, 432,
	432, 432, 432, 473, 474, 433, 433, 433, 475, 475,
	484, 488, 488, 487, 486, 486, 485, 485, 463, 463,
	464, 464, 410, 410, 674, 674, 406, 406, 509, 509,
	509, 509, 346, 346, 395, 395, 345, 345, 337, 337,
	338, 338, 338, 338, 388, 388, 490, 490, 538, 538,
	539, 539, 540, 540, 541, 541, 542, 543, 544, 478,
	478, 321, 320, 307, 308, 319, 318, 317, 306, 309,
	314, 315, 316, 311, 312, 328, 327, 326, 277, 282,
	333, 334, 334, 336, 336, 335, 335, 323, 324, 325,
	514, 305, 339, 339, 340, 340, 340, 341, 341, 341,
	341, 301, 301, 302, 302, 329, 329, 330, 331, 331,
	322, 322, 322, 292, 292, 292, 293, 293, 294, 294,
	552, 552, 549, 549, 549, 550, 550, 550, 551, 551,
	551, 551, 548, 548, 548, 548, 548, 560, 560, 560,
	560, 560, 560, 560, 560, 560, 560, 560, 560, 560,
	560, 560, 560, 560, 560, 560, 560, 560, 560, 560,
	560, 560, 560, 560, 560, 560, 560, 560, 560, 560,
	560, 560, 560, 560, 560, 560, 560, 560, 560, 560,
	560, 560, 560, 560, 560, 560, 560, 560, 560, 560,
	560, 560, 560, 560, 560, 560, 560, 560, 560, 560,
	560, 560, 560, 560, 560, 560, 560, 560, 560, 560,
	560, 560, 560, 560, 560, 560, 560, 560, 560, 560,
	560, 560, 560, 560, 560, 560, 560, 560, 560, 560,
	560, 560, 560, 560, 560, 560, 560, 560, 560, 560,
	560, 560, 560, 560, 560, 560, 560, 560, 560, 560,
	560, 560, 560, 560, 560, 560, 560, 560, 560, 560,
	560, 560, 560, 560, 560, 560, 560, 560, 560, 560,
	560, 560, 560, 560, 560, 560, 560, 560, 560, 560,
	560, 560, 560, 560, 560, 560, 560, 560, 560, 560,
	560, 560, 560, 560, 560, 560, 560, 560, 560, 560,
	560, 560, 560, 560, 560, 560, 560, 560, 560, 560,
	560, 560, 560, 560, 560, 560, 560, 560, 560, 560,
	560, 560, 560, 560, 560, 560, 560, 560, 560, 560,
	560, 560, 560, 560, 560, 560, 560, 560, 560, 560,
	560, 560, 560, 560, 560, 560, 560, 560, 560, 560,
	560, 560, 560, 560, 560, 560, 560, 560, 560, 560,
	560, 560, 560, 560, 560, 560, 560, 560, 560, 560,
	560, 560, 560, 560, 560, 560, 560, 560, 560, 560,
	560, 560, 560, 560, 560, 560, 560, 560, 560, 560,
	560, 560, 560, 560, 560, 560, 560, 560, 560, 560,
	560, 560, 560, 560, 560, 560, 560, 560, 560, 560,
	560, 560, 560, 560, 560, 560, 560, 560, 560, 560,
	560, 560, 560, 560, 560, 560, 560, 560, 560, 560,
	560, 560, 560, 560, 560, 560, 560, 560, 560, 560,
	560, 560, 560, 560, 560, 560, 560, 560, 560, 560,
	560, 560, 560, 560, 560, 560, 560, 560, 560, 560,
	560, 560, 560, 560, 560, 560, 560, 560, 560, 560,
	560, 560, 560, 560, 560, 560, 560, 560, 560, 560,
	560, 560, 560, 560, 560, 560, 560, 560, 560, 560,
	560, 560, 560, 560, 560, 560, 560, 560, 560, 560,
	560, 560, 560, 560, 560, 560, 560, 560, 560, 560,
	560, 560, 560, 560, 560, 560, 560, 560, 560, 560,
	560, 560, 560, 560, 560, 560, 560, 564, 564, 564,
	564, 564, 564, 564, 564, 564, 564, 564, 564, 564,
	564, 564, 564, 564, 564, 564, 564, 564, 564, 564,
	564, 564, 564, 564, 564, 564, 564, 564, 564, 564,
	564, 564, 564, 564, 564, 564, 564, 564, 564, 564,
	564, 564, 564, 564, 564, 564, 564, 564, 564, 561,
	561, 562, 562, 562, 562, 562, 562, 562, 562, 562,
	562, 562, 562, 562, 562, 562, 562, 562, 562, 563,
	565, 565, 565, 565, 565, 565, 565, 565, 565, 565,
	565, 565, 565, 565, 565, 565, 565, 565, 565, 565,
	565, 565, 565, 565, 565, 565, 565, 565, 565, 565,
	565, 565, 565, 565, 565, 565, 565, 565, 565, 565,
	565, 565, 565, 565, 565, 565, 565, 565, 565, 565,
	565, 565, 565, 565, 565, 565, 565, 565, 565, 565,
	565, 565, 565, 565, 565, 565, 565, 565, 565, 565,
	565, 565, 565, 565, 565, 565, 565, 565, 565, 565,
	566, 566,
}

var sqlR2 = [...]int{
	0, 1, 1, 1, 1, 2, 1, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 1, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 0, 1, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 3, 1, 3, 1, 1, 1, 3,
	1, 1, 1, 1, 3, 4, 6, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
	6, 4, 4, 6, 9, 6, 8, 4, 4, 5,
	9, 7, 1, 1, 3, 1, 1, 1, 1, 1,
	1, 1, 3, 4, 6, 4, 6, 6, 9, 6,
	9, 6, 5, 6, 5, 1, 1, 1, 1, 1,
	1, 0, 1, 6, 6, 4, 8, 7, 10, 9,
	4, 4, 4, 3, 4, 4, 4, 7, 7, 9,
	8, 9, 5, 3, 5, 7, 4, 12, 4, 12,
	1, 3, 5, 5, 2, 5, 3, 6, 4, 4,
	4, 6, 5, 6, 5, 6, 4, 8, 3, 8,
	4, 2, 3, 10, 3, 6, 4, 3, 1, 3,
	4, 4, 2, 1, 1, 3, 1, 3, 2, 4,
	3, 2, 3, 2, 0, 1, 1, 0, 2, 0,
	7, 10, 6, 8, 6, 6, 6, 9, 4, 3,
	2, 2, 0, 1, 1, 1, 1, 1, 3, 1,
	3, 6, 4, 6, 7, 9, 6, 2, 2, 3,
	0, 8, 6, 8, 7, 2, 0, 1, 2, 5,
	0, 1, 3, 3, 1, 1, 3, 3, 12, 3,
	1, 1, 2, 1, 4, 0, 3, 3, 0, 4,
	6, 0, 5, 7, 6, 8, 7, 9, 8, 2,
	1, 3, 1, 3, 2, 5, 0, 1, 3, 3,
	3, 3, 1, 1, 1, 1, 1, 1, 3, 3,
	3, 3, 1, 3, 3, 3, 6, 4, 9, 7,
	12, 9, 2, 7, 2, 1, 1, 1, 3, 3,
	0, 3, 1, 3, 1, 1, 3, 2, 5, 0,
	7, 5, 2, 0, 1, 2, 3, 1, 1, 2,
	2, 2, 2, 2, 2, 3, 3, 4, 3, 3,
	1, 2, 1, 2, 1, 2, 1, 2, 2, 3,
	3, 3, 3, 3, 3, 5, 3, 3, 5, 3,
	3, 5, 3, 3, 5, 3, 4, 3, 6, 6,
	6, 6, 6, 8, 4, 4, 1, 1, 1, 2,
	1, 1, 2, 1, 2, 1, 1, 1, 2, 1,
	2, 6, 3, 8, 5, 3, 4, 3, 3, 4,
	3, 4, 4, 4, 3, 5, 7, 3, 3, 4,
	3, 3, 3, 3, 3, 2, 0, 1, 0, 1,
	0, 4, 3, 3, 3, 3, 3, 6, 4, 4,
	4, 3, 5, 3, 3, 3, 3, 3, 3, 3,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	4, 1, 2, 1, 2, 1, 2, 7, 3, 2,
	0, 1, 3, 3, 1, 0, 1, 2, 2, 1,
	6, 5, 1, 3, 2, 1, 4, 3, 2, 0,
	7, 2, 5, 0, 1, 3, 3, 1, 9, 3,
	2, 0, 2, 2, 2, 2, 2, 2, 1, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 4,
	6, 5, 7, 3, 4, 6, 3, 4, 6, 3,
	5, 7, 3, 4, 6, 3, 4, 6, 3, 1,
	1, 3, 4, 6, 3, 3, 5, 3, 1, 3,
	2, 2, 2, 2, 1, 2, 2, 5, 3, 3,
	6, 6, 3, 1, 1, 1, 1, 2, 1, 1,
	1, 2, 1, 1, 2, 1, 2, 1, 2, 1,
	1, 1, 2, 1, 1, 2, 1, 1, 1, 1,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 1, 1, 2, 1, 2, 1, 3,
	4, 3, 1, 2, 3, 2, 2, 2, 4, 6,
	3, 1, 2, 2, 7, 5, 7, 2, 3, 0,
	3, 5, 2, 3, 0, 2, 3, 2, 3, 2,
	7, 4, 7, 8, 8, 9, 11, 5, 2, 6,
	9, 4, 7, 7, 10, 7, 10, 10, 13, 5,
	2, 2, 1, 1, 3, 1, 1, 1, 1, 1,
	2, 1, 2, 2, 3, 2, 2, 4, 3, 2,
	2, 1, 2, 1, 3, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 1, 3, 5, 4, 6, 4,
	3, 0, 1, 3, 2, 4, 2, 4, 1, 6,
	3, 4, 4, 3, 4, 1, 1, 1, 1, 5,
	3, 3, 2, 2, 6, 3, 3, 3, 3, 4,
	4, 3, 1, 3, 3, 2, 2, 1, 3, 3,
	3, 1, 2, 1, 1, 2, 2, 3, 1, 1,
	1, 1, 1, 3, 2, 2, 1, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 1, 2,
	1, 2, 1, 2, 1, 1, 2, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 2, 1,
	1, 1, 2, 1, 2, 2, 2, 9, 2, 1,
	0, 1, 1, 0, 1, 2, 0, 2, 2, 0,
	2, 2, 2, 2, 1, 2, 3, 3, 4, 4,
	4, 4, 3, 3, 1, 1, 1, 0, 1, 1,
	1, 0, 1, 1, 3, 3, 3, 3, 3, 2,
	3, 3, 1, 2, 1, 1, 1, 1, 1, 1,
	1, 2, 2, 2, 3, 5, 7, 3, 3, 3,
	4, 4, 6, 5, 7, 5, 7, 5, 7, 3,
	4, 4, 3, 4, 4, 3, 4, 4, 1, 4,
	4, 5, 3, 5, 5, 5, 7, 3, 3, 3,
	4, 6, 4, 2, 6, 4, 3, 2, 3, 4,
	3, 5, 3, 6, 5, 6, 3, 5, 6, 3,
	5, 3, 5, 3, 3, 4, 4, 5, 0, 1,
	1, 1, 1, 3, 2, 3, 4, 3, 4, 3,
	5, 3, 4, 4, 3, 4, 5, 3, 4, 3,
	4, 4, 5, 3, 3, 1, 1, 0, 2, 3,
	5, 4, 6, 4, 6, 4, 1, 0, 3, 4,
	4, 5, 7, 5, 3, 3, 3, 4, 4, 5,
	2, 0, 4, 2, 3, 4, 2, 3, 3, 3,
	7, 5, 2, 0, 3, 3, 4, 3, 3, 3,
	5, 3, 3, 3, 4, 4, 4, 4, 4, 4,
	4, 3, 4, 5, 4, 4, 2, 3, 2, 3,
	6, 6, 7, 9, 7, 9, 4, 3, 4, 4,
	5, 1, 1, 10, 10, 3, 5, 5, 5, 3,
	5, 6, 4, 4, 5, 5, 2, 3, 2, 5,
	4, 2, 0, 1, 1, 1, 1, 3, 2, 2,
	2, 2, 2, 2, 2, 1, 2, 0, 1, 2,
	1, 2, 1, 2, 2, 1, 2, 1, 2, 1,
	2, 2, 4, 3, 3, 7, 3, 3, 7, 3,
	3, 3, 3, 3, 3, 3, 3, 4, 3, 3,
	6, 5, 8, 3, 6, 6, 3, 12, 15, 1,
	0, 1, 2, 3, 0, 2, 0, 4, 0, 4,
	5, 4, 1, 1, 1, 3, 3, 1, 3, 10,
	13, 0, 2, 3, 1, 1, 0, 1, 2, 2,
	2, 2, 1, 1, 0, 1, 3, 1, 1, 1,
	2, 3, 3, 3, 0, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 2, 1, 0, 1, 0, 1,
	1, 0, 1, 4, 1, 0, 3, 7, 7, 1,
	1, 3, 7, 1, 3, 11, 3, 2, 0, 3,
	1, 2, 2, 3, 2, 6, 2, 1, 2, 2,
	3, 6, 4, 2, 3, 5, 5, 5, 2, 5,
	5, 2, 2, 2, 0, 1, 1, 3, 4, 10,
	11, 9, 5, 3, 1, 5, 9, 7, 11, 3,
	3, 0, 2, 4, 3, 3, 1, 6, 1, 3,
	1, 2, 0, 1, 2, 3, 0, 1, 3, 3,
	2, 2, 1, 1, 1, 4, 0, 3, 0, 4,
	0, 3, 0, 2, 2, 2, 0, 1, 1, 2,
	2, 0, 3, 3, 2, 1, 1, 2, 2, 5,
	8, 4, 1, 0, 1, 2, 2, 1, 2, 3,
	3, 2, 2, 3, 2, 2, 2, 2, 2, 3,
	1, 4, 2, 3, 2, 2, 4, 7, 3, 4,
	6, 5, 7, 5, 5, 3, 3, 0, 2, 2,
	2, 1, 1, 1, 8, 10, 11, 8, 11, 5,
	4, 2, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	2, 2, 0, 3, 3, 0, 1, 8, 11, 3,
	6, 6, 5, 3, 4, 1, 0, 1, 3, 16,
	19, 15, 18, 4, 2, 0, 1, 0, 1, 0,
	1, 3, 2, 4, 2, 3, 1, 0, 2, 0,
	1, 1, 0, 9, 6, 6, 8, 6, 8, 5,
	7, 2, 6, 7, 4, 4, 5, 2, 4, 6,
	6, 8, 6, 7, 8, 9, 6, 7, 8, 9,
	6, 8, 6, 8, 6, 7, 8, 9, 6, 8,
	6, 8, 6, 6, 8, 8, 4, 7, 3, 0,
	7, 10, 1, 1, 1, 1, 2, 2, 3, 0,
	3, 0, 1, 0, 2, 0, 2, 2, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 2, 2, 1, 2, 1, 2, 1, 2, 1,
	3, 2, 3, 2, 2, 2, 2, 2, 2, 1,
	1, 0, 2, 4, 2, 1, 0, 2, 1, 1,
	0, 1, 3, 1, 0, 1, 1, 1, 1, 1,
	2, 3, 2, 2, 1, 2, 14, 16, 3, 1,
	0, 4, 1, 0, 2, 2, 3, 0, 1, 1,
	4, 4, 5, 1, 0, 3, 0, 3, 0, 3,
	0, 3, 0, 4, 0, 3, 0, 1, 0, 6,
	7, 3, 6, 3, 1, 3, 1, 1, 4, 2,
	1, 3, 1, 3, 4, 8, 11, 7, 10, 2,
	2, 0, 10, 3, 2, 0, 1, 3, 1, 1,
	3, 3, 5, 6, 4, 5, 4, 1, 1, 3,
	3, 1, 2, 4, 4, 2, 3, 5, 5, 1,
	3, 1, 0, 1, 2, 3, 2, 4, 2, 3,
	0, 2, 0, 2, 1, 2, 1, 1, 1, 2,
	1, 2, 1, 2, 1, 8, 8, 8, 2, 4,
	4, 4, 2, 2, 2, 2, 3, 1, 3, 1,
	2, 6, 7, 1, 0, 1, 0, 1, 0, 1,
	1, 0, 1, 5, 1, 0, 1, 0, 1, 0,
	3, 3, 5, 1, 3, 3, 4, 5, 2, 2,
	0, 2, 2, 1, 1, 1, 0, 1, 0, 2,
	2, 5, 4, 2, 3, 1, 1, 1, 1, 1,
	1, 1, 3, 0, 1, 3, 1, 3, 3, 3,
	2, 0, 4, 2, 5, 3, 2, 0, 1, 3,
	3, 5, 1, 1, 1, 1, 1, 1, 1, 3,
	5, 1, 3, 2, 4, 4, 0, 4, 4, 3,
	4, 1, 5, 3, 4, 5, 5, 1, 5, 1,
	3, 2, 0, 3, 0, 2, 3, 1, 3, 2,
	0, 3, 5, 6, 4, 6, 4, 3, 2, 1,
	0, 5, 1, 0, 2, 2, 2, 1, 1, 0,
	1, 1, 1, 1, 0, 4, 2, 1, 2, 2,
	4, 1, 3, 1, 2, 3, 2, 4, 1, 0,
	1, 0, 2, 1, 0, 2, 5, 7, 2, 1,
	2, 4, 3, 5, 0, 1, 3, 5, 1, 2,
	1, 1, 1, 1, 1, 2, 2, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 4, 4, 6, 6, 1, 1, 1, 1,
	1, 3, 5, 0, 1, 1, 1, 1, 1, 2,
	2, 2, 2, 2, 1, 3, 0, 5, 4, 1,
	2, 1, 4, 1, 1, 2, 1, 1, 1, 1,
	1, 0, 1, 2, 5, 1, 4, 2, 5, 1,
	4, 3, 3, 0, 1, 2, 4, 1, 1, 1,
	1, 1, 1, 3, 3, 3, 3, 3, 3, 3,
	1, 0, 1, 4, 1, 3, 3, 3, 5, 2,
	2, 2, 2, 2, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 2, 3, 3, 3,
	2, 2, 3, 5, 4, 6, 3, 5, 4, 6,
	4, 6, 5, 7, 3, 3, 3, 3, 3, 4,
	3, 2, 4, 2, 3, 3, 4, 3, 4, 3,
	4, 5, 6, 6, 7, 6, 7, 6, 7, 3,
	4, 4, 1, 3, 1, 3, 3, 2, 2, 2,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 2,
	3, 5, 6, 6, 7, 1, 2, 1, 2, 1,
	1, 1, 1, 1, 6, 1, 1, 1, 1, 1,
	1, 2, 1, 5, 5, 6, 3, 1, 1, 1,
	2, 2, 2, 4, 3, 5, 6, 8, 6, 5,
	4, 3, 2, 2, 4, 1, 1, 1, 5, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	6, 6, 8, 8, 6, 4, 6, 6, 6, 4,
	1, 3, 3, 3, 3, 3, 4, 3, 3, 4,
	3, 3, 4, 3, 3, 4, 3, 3, 3, 3,
	3, 4, 3, 4, 3, 4, 3, 4, 4, 3,
	6, 5, 5, 5, 4, 4, 3, 4, 3, 5,
	0, 5, 0, 2, 0, 1, 3, 3, 2, 2,
	0, 6, 1, 0, 3, 0, 3, 3, 3, 0,
	1, 4, 2, 2, 2, 2, 2, 3, 2, 2,
	3, 0, 4, 1, 1, 5, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 3, 4, 1, 1, 1,
	2, 1, 2, 2, 3, 1, 2, 3, 2, 3,
	2, 3, 1, 0, 1, 3, 1, 3, 3, 3,
	1, 3, 3, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 4, 3, 1, 2, 3, 0, 3, 3,
	2, 2, 1, 2, 2, 3, 2, 1, 1, 1,
	5, 1, 2, 4, 2, 0, 1, 0, 3, 5,
	1, 0, 1, 2, 1, 0, 1, 3, 3, 2,
	1, 1, 1, 3, 1, 3, 3, 1, 1, 1,
	1, 5, 3, 1, 1, 3, 1, 1, 1, 1,
	2, 2, 1, 1, 2, 2, 1, 1, 1, 3,
	5, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 1, 3, 1, 0, 1, 1, 1,
	1, 1, 1, 1, 3, 5, 7, 1, 7, 5,
	3, 1, 1, 1, 1, 1, 1, 1, 3, 5,
	1, 1, 1, 1, 1, 1, 1, 0, 3, 0,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1,
}

var sqlChk = [...]int{
	-1000, -1, -2, 634, -110, -107, -75, -73, -114, -115,
	-96, -116, -109, -138, -143, -124, -125, -126, -139, -145,
	-202, -207, -208, -209, -210, -219, -3, -60, -62, -76,
	-95, -97, -108, -118, -117, -119, -127, -135, -130, -113,
	-67, -140, -144, -156, -203, -204, -205, 33, 32, 104,
	83, 160, 133, 142, 212, 404, 453, 465, 421, 147,
	444, 426, -150, -151, 484, -61, -74, -142, -141, 76,
	134, 176, 309, 436, -6, -14, -31, -18, 30, 48,
	-63, -64, -65, -66, 65, -83, -79, -90, -84, -77,
	-78, -81, -653, 106, -594, -98, -101, -134, -657, 168,
	232, -120, -121, -122, 386, -128, -129, 446, -131, -132,
	-133, 449, 169, -69, -68, 162, -242, -244, -147, -146,
	-148, -206, -157, -158, -159, -160, -161, -163, -164, -166,
	-193, -167, -168, -169, -170, -171, -172, -176, -196, -173,
	-174, -175, -178, -177, -179, -184, -180, -181, -182, -183,
	-185, -186, -188, -189, -190, -191, -192, -194, -195, 489,
	-187, -197, -165, -198, 554, 52, 505, 85, 152, 457,
	21, -7, -8, -9, -10, -11, -12, -13, -17, -16,
	-59, -4, -5, -80, -82, -85, -86, -87, -94, -88,
	-89, -593, -99, -100, -103, -105, -106, -102, -104, 445,
	606, -245, -243, 631, 570, -162, -21, -26, -22, -23,
	-25, -27, -24, -28, -29, -30, -45, -50, -47, -48,
	-46, -49, -51, -52, -53, -54, -55, -56, -57, -58,
	-33, -39, -40, -34, -35, -36, -37, -38, -41, -42,
	-43, -44, -19, -20, -32, 593, 602, -248, -246, -247,
	-255, 476, 578, 527, 634, 634, 634, 634, 634, 634,
	634, 634, 634, 634, 634, 634, 634, 634, 634, 634,
	634, 634, 634, 634, 634, 634, 634, 634, 634, 634,
	-344, 2, -323, -329, -330, -331, -322, -292, -563, -566,
	4, -560, -564, 175, 242, 347, 21, 22, 24, 23,
	25, 26, 27, 28, 30, 31, 41, 43, 44, 46,
	47, 48, 49, 50, 51, 52, 56, 58, 62, 63,
	64, 65, 66, 67, 71, 76, 77, 82, 83, 84,
	85, 86, 87, 88, 89, 95, 92, 93, 94, 96,
	98, 100, 101, 102, 103, 104, 105, 107, 108, 109,
	111, 112, 113, 121, 122, 123, 124, 125, 127, 133,
	128, 134, 137, 132, 136, 138, 140, 141, 142, 145,
	146, 147, 149, 150, 151, 153, 154, 155, 157, 158,
	160, 161, 162, 165, 163, 166, 164, 167, 168, 169,
	170, 173, 181, 182, 183, 188, 190, 191, 192, 194,
	195, 198, 199, 200, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 213, 217, 219, 220, 221, 222, 223,
	224, 225, 231, 232, 234, 235, 236, 237, 238, 243,
	244, 245, 249, 255, 256, 260, 261, 262, 264, 268,
	269, 270, 271, 272, 273, 275, 277, 276, 279, 282,
	283, 286, 287, 288, 289, 290, 291, 295, 296, 292,
	297, 298, 300, 301, 304, 302, 305, 306, 303, 307,
	310, 311, 312, 313, 314, 315, 316, 317, 318, 319,
	320, 321, 308, 309, 324, 322, 326, 327, 328, 329,
	330, 345, 340, 341, 342, 334, 335, 331, 336, 332,
	333, 337, 338, 344, 339, 349, 350, 351, 352, 355,
	229, 248, 357, 358, 361, 363, 380, 366, 367, 368,
	371, 372, 375, 378, 379, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 391, 392, 394, 395, 396, 398,
	399, 400, 402, 404, 405, 407, 408, 409, 411, 412,
	413, 414, 415, 416, 417, 418, 420, 421, 423, 422,
	424, 426, 428, 429, 430, 436, 437, 444, 438, 440,
	441, 442, 443, 445, 446, 447, 448, 449, 451, 452,
	453, 455, 456, 457, 458, 459, 461, 463, 464, 468,
	469, 470, 486, 487, 508, 465, 466, 467, 471, 472,
	473, 474, 475, 479, 477, 478, 480, 481, 482, 484,
	485, 488, 489, 491, 492, 493, 494, 495, 496, 497,
	500, 502, 503, 504, 505, 506, 526, 507, 509, 513,
	514, 515, 516, 510, 511, 525, 518, 519, 520, 522,
	523, 528, 529, 530, 531, 532, 533, 535, 536, 538,
	546, 547, 548, 549, 551, 554, 555, 556, 557, 544,
	559, 560, 563, 564, 568, 565, 569, 566, 567, 570,
	572, 575, 576, 577, 583, 582, 584, 585, 586, 588,
	589, 594, 595, 597, 598, 599, 37, 53, 54, 57,
	59, 61, 72, 73, 74, 78, 129, 130, 159, 171,
	172, 184, 201, 202, 214, 216, 226, 227, 228, 250,
	251, 253, 258, 280, 354, 356, 373, 377, 393, 397,
	401, 403, 419, 460, 498, 512, 517, 539, 540, 541,
	542, 550, 552, 578, 579, 580, 587, 596, -344, 2,
	-323, 364, -316, 2, -292, -292, 404, 29, 2, 29,
	392, 478, 530, 532, 2, -621, -389, 2, 29, -295,
	-292, 106, 212, 476, -316, 2, -621, 212, -389, 26,
	2, -292, 2, 378, 23, 28, 69, 80, 102, 145,
	170, 193, 198, -656, 380, 412, 463, 480, 525, 536,
	551, 2, 582, 301, 477, 527, 242, 124, 556, 471,
	-635, 468, 469, 378, 410, 455, 215, 571, -296, 2,
	465, -292, 301, 2, 634, 98, 77, 460, 481, -153,
	2, 291, 547, -154, -155, -152, 539, -547, 471, 455,
	324, -292, 634, 634, 634, 29, -305, 2, -292, -305,
	2, -211, 2, -305, -658, -218, -217, -216, 22, 437,
	183, 273, 196, 233, 329, 407, 194, 50, -211, 2,
	527, 242, 471, 124, 523, 634, 634, 2, 527, 383,
	582, 477, 124, 416, 242, 556, 198, 145, 28, 71,
	48, 533, 610, 471, -635, 607, 608, 301, 131, -619,
	2, -613, 4, -564, -560, -338, -337, 527, 533, 124,
	-331, -322, 623, -330, 634, 634, 634, 634, 2, 261,
	262, 414, 413, 481, 482, 29, 634, 634, 634, 634,
	468, 2, 170, 23, 28, 69, 97, 102, 131, 193,
	198, 369, -654, 380, 412, 480, 525, 529, 536, 551,
	-634, 507, 71, 443, 471, -633, -635, 301, 556, 145,
	-439, 124, 291, 210, 564, 532, 530, 562, 137, 249,
	567, 566, 634, 634, -111, 2, 631, 33, 32, -110,
	-114, 147, 484, -235, 527, 254, 2, -292, 634, 634,
	634, 2, 261, 262, 468, 469, 29, 634, 634, 196,
	-613, 523, 2, 634, 634, 634, 2, 29, 261, 262,
	468, 469, 254, 2, 71, 473, 634, 634, 634, 634,
	634, 634, 634, 634, 634, 634, 634, 634, 634, 634,
	634, 634, 634, 634, 634, 634, 634, 634, 634, 634,
	634, 634, 634, 634, 634, 634, 634, 634, 634, 634,
	634, 634, 634, 2, -200, 481, 507, 222, 49, 48,
	77, 29, 411, 82, 384, 125, 131, 154, 557, 213,
	242, 243, 269, 97, 98, -441, 46, 262, 71, 261,
	469, -640, 468, -494, 528, 472, 478, 522, 89, 273,
	465, 547, 549, 106, 572, 456, 599, 416, 417, 520,
	430, 292, 163, 197, 4, 124, 324, 455, 483, 277,
	276, 539, 291, 464, 387, 87, 634, -667, 2, 527,
	-669, 2, 547, 547, 2, -669, 2, -669, 2, -669,
	2, -670, 547, 596, 634, 634, 634, 634, 634, 634,
	634, 634, 634, 634, 634, 634, 634, 634, 634, 634,
	634, 634, 634, 634, -243, -245, -244, 634, 634, 634,
	634, 634, 634, 634, -200, 481, 2, 77, 29, 29,
	-382, -384, 561, 252, 156, 370, -242, -244, 2, -593,
	-545, 2, -468, -567, -470, 621, 622, 614, 524, 70,
	-348, 346, 600, -482, 131, 562, 364, -566, -471, -484,
	159, 380, 460, -403, 8, 9, 5, 6, 7, -301,
	-472, -478, 553, 174, 353, -341, 635, 10, 631, -590,
	-244, -483, 38, 216, 68, -549, -340, -302, -521, 253,
	-339, -322, -587, -588, 4, -560, -561, -550, -524, -532,
	-528, -529, -535, -292, -563, 80, 115, 116, 114, 119,
	118, 294, 293, 120, 117, 483, 571, 69, 37, 226,
	227, 258, 354, 228, 78, -589, 146, -562, 250, 251,
	498, 54, 419, 184, 130, 129, 356, 59, 57, 579,
	-533, 126, 539, 540, 541, 542, 201, 202, 61, 171,
	172, 377, 401, 517, 550, 552, 214, 280, 45, 110,
	197, 247, 230, 257, 259, 263, 281, 284, 325, 343,
	348, 374, 376, 454, 490, -673, 580, 512, 72, 73,
	189, -595, 422, -596, -316, -595, 634, 634, 636, 634,
	-373, -375, -377, 2, 29, 143, 631, 2, -499, 2,
	-500, -504, -244, 274, -503, 631, -501, 629, -323, 365,
	-591, 461, -587, -588, -301, -322, -340, 4, -560, -562,
	633, -378, 631, 124, 471, 527, 81, 242, 97, 170,
	198, -434, 631, -292, 29, 364, 543, 636, -374, 409,
	-480, 631, 364, 367, 196, 367, 63, 305, 2, 2,
	2, 2, 2, 226, -292, 527, 123, 2, 272, 2,
	2, 2, 2, 2, 2, 2, -396, 226, 2, -323,
	582, -396, 226, 2, -396, 226, 2, -440, 2, 91,
	-306, 226, 2, -292, -332, 226, 2, -327, -329, -336,
	226, 2, -334, -292, -555, 226, 2, -553, 4, -560,
	120, 483, -468, 2, -140, 2, 63, -292, 582, 2,
	486, 2, 631, -153, 2, 74, 547, 45, 481, -154,
	2, -454, 2, -455, -288, -289, -290, -511, -291, 260,
	408, 418, 603, 135, 346, 599, -648, 196, 613, 543,
	-545, -545, -545, -404, 633, -213, 56, -305, -659, -658,
	-659, -543, 29, -538, 8, -539, 621, 622, -543, -543,
	-659, -659, 2, 2, 2, 2, 2, 2, -504, 226,
	-323, 2, -320, -548, 4, -560, -564, -561, -565, -563,
	29, 32, 33, 34, 36, 38, 39, 40, 42, 60,
	68, 69, 75, 79, 81, 91, 97, 106, 114, 115,
	117, 116, 118, 119, 120, 131, 135, 139, 143, 144,
	148, 152, 156, 174, 176, 189, 193, 196, 212, 215,
	218, 233, 246, 252, 254, 274, 278, 285, 293, 294,
	346, 353, 359, 364, 365, 369, 370, 390, 406, 425,
	450, 476, 483, 501, 521, 527, 537, 543, 545, 553,
	561, 562, 571, 573, 581, 590, 591, 592, 593, -566,
	80, 2, -504, 226, 2, -326, 226, -504, -329, 2,
	-306, 2, -468, -628, 535, 166, 438, 2, -345, 226,
	-323, -325, -329, -327, 2, 2, 2, 2, -468, 2,
	-557, 2, -552, 10, -551, 5, 4, -560, -564, -561,
	-471, 2, -482, 29, -334, 2, -553, 226, 2, 29,
	29, 582, 409, 254, 543, 636, -395, -337, -338, -544,
	4, 8, -388, -292, 633, -468, 2, -140, -123, 2,
	189, -468, 226, 2, -140, 226, 2, -468, 226, 2,
	-140, 226, 2, -292, 2, -636, 2, -557, 226, 226,
	-292, 2, 305, 2, 2, 551, 2, 102, 527, 123,
	2, 442, -655, 463, 555, 2, 2, 2, 2, 2,
	2, 2, 527, -311, 2, -292, 189, 510, -334, 226,
	-335, 2, 477, -668, 422, -553, 226, 2, 582, -327,
	226, 2, -327, 242, 256, -306, 226, 2, 532, 530,
	532, 530, 196, 2, 254, 2, 254, 2, -505, 2,
	-506, -500, -507, 629, 365, -515, 2, -514, -551, 578,
	-111, 631, -111, 631, 481, 631, -557, -323, -323, -468,
	2, -140, -123, 2, -468, 2, -140, 2, -292, 2,
	-137, -557, -136, 631, 196, 572, -292, 2, -468, 2,
	-140, -123, 2, -468, 2, -140, 2, -235, 189, 2,
	124, 527, -200, 2, 189, 573, 2, 8, 2, 233,
	-557, 472, 417, 181, 2, 486, 2, 487, 77, -441,
	599, 77, 196, 2, 196, 2, -424, 2, 593, 409,
	196, 2, 2, -618, 2, 364, 196, 2, 196, 2,
	196, 2, 196, 2, 196, 2, -199, 482, 548, 526,
	413, 262, 2, -140, 590, -123, 262, 261, -468, 590,
	2, -641, 189, 469, -468, 2, 546, 271, 164, 196,
	-424, 2, 196, 2, 196, 2, 5, 2, 43, 414,
	508, 2, 260, 408, 508, 2, 506, 2, -323, 527,
	582, 477, 124, 29, 2, 468, 2, 2, 92, 93,
	196, 2, 196, 2, 211, 196, 2, 196, 527, -405,
	633, 599, 2, -416, -504, -453, -454, -453, 543, -382,
	-384, -200, 486, 2, -249, -414, -251, 189, -444, -445,
	-252, 285, 176, 359, -253, -423, 29, 143, -423, -423,
	63, 632, 632, 11, 12, 79, 43, 621, 622, 623,
	624, 187, 625, 626, 619, 620, 618, 611, 612, 616,
	266, 267, 99, 615, 613, 90, 299, 462, 177, 178,
	179, 180, 439, 240, 35, 241, 14, 15, 16, -348,
	34, 369, 284, 600, 230, 490, 614, 17, 18, 19,
	257, 259, 348, 53, 233, -300, 380, -347, 524, 70,
	-468, -468, -468, -468, -468, -468, -468, -468, 376, 631,
	-410, -463, 629, -244, 631, 631, 631, 631, -544, -244,
	-468, -482, 632, -401, 631, -244, -482, -477, 631, 460,
	629, 631, -485, -468, 5, 5, 5, 631, 633, -598,
	594, 189, 631, 631, 631, 631, 631, 631, 631, 631,
	631, 631, 631, 631, 631, 631, 631, 631, 403, -526,
	631, -525, 631, -525, -525, 583, -523, 631, 602, 595,
	631, -523, 631, 631, 631, 631, 631, 631, 631, 631,
	631, 631, 631, 631, 631, 583, 533, 636, -595, -378,
	631, -406, -509, -468, 623, -406, -406, 364, -398, -468,
	110, -427, 263, 325, 197, 281, 454, 247, -465, 635,
	-465, -493, 602, -244, -501, -322, -244, -503, 631, -499,
	-493, -112, -544, -95, -108, -117, -140, -156, -204, -205,
	623, -323, 631, 196, 631, 633, -548, 196, -388, -306,
	-333, -292, -323, -339, -340, -345, -317, -292, 2, 2,
	142, -398, -613, 556, 471, 29, 477, -555, -295, 39,
	-479, -518, -519, -569, 635, -568, -521, -531, -527, -530,
	393, 397, -550, 57, 579, -533, 253, 4, -560, -562,
	250, 251, 498, 54, 419, 184, 130, 129, 356, 59,
	539, 540, 541, 542, 201, 202, 61, 580, 512, 72,
	73, -613, 556, 471, 29, 477, 189, -555, 189, -555,
	2, 2, 159, 2, 2, 2, -292, -270, 636, 67,
	447, 159, -396, 226, -270, 159, -270, 159, -346, 226,
	-345, -270, 159, -270, 636, 159, -270, 636, 159, 633,
	636, 159, -555, 2, -440, -547, -398, 39, -454, 2,
	131, 4, 5, -671, 636, 283, -351, 298, 345, 221,
	365, 597, 357, 135, -556, 5, 4, -478, -490, 131,
	291, 253, -538, -540, 9, -541, 621, 622, -546, -545,
	113, 633, -548, -214, 248, 41, -305, -305, -659, -659,
	8, 8, -659, -659, -305, -305, -267, 440, 484, 379,
	-266, 25, 30, 147, 244, 330, 576, 165, -363, 245,
	445, -360, 383, 159, 502, 565, -628, -631, 467, 535,
	166, 438, 94, 357, 484, 379, 440, 159, -420, -422,
	39, 122, 330, 378, 64, 236, 303, 304, 505, 587,
	159, 484, 379, 440, 379, -15, -281, 25, 147, -283,
	-278, 484, -631, 103, 440, 606, 445, 389, 519, 406,
	-631, -628, 279, -630, 589, 344, -269, 502, 565, -628,
	-631, 467, 440, -268, -365, -360, 383, 159, 635, 25,
	147, 440, 484, 379, -651, -652, 30, -262, -261, 25,
	147, 484, 568, -265, 233, -264, 25, -149, -129, -148,
	445, 484, -149, 2, 440, 379, -622, -313, -592, 233,
	593, 159, -313, -313, -504, 226, -645, 189, 2, -638,
	-136, 275, 5, 10, -557, -136, -395, 636, 636, -548,
	623, 469, 468, 159, 159, 159, 159, 262, 189, 346,
	346, 593, 2, 2, 2, 2, 2, 198, -633, -656,
	2, 2, -323, 226, -380, 364, -616, -617, 527, -323,
	189, 346, 45, -326, 226, 2, -329, 582, -622, 346,
	-328, 226, -323, 39, 631, 346, 2, -440, 2, 242,
	-592, 346, -505, -342, -323, -500, -342, 484, -316, 39,
	-465, -323, 632, 636, -515, -515, -557, -223, 593, 196,
	631, -235, 593, 593, 262, -512, 636, -511, 233, -558,
	-557, -137, -557, 443, 196, 262, -557, -616, -306, 2,
	-323, 2, 527, 264, -557, -223, 233, -557, -557, -557,
	-547, 29, 487, 2, -199, 482, 548, 93, 487, 2,
	-323, 527, 124, 242, 83, -645, 189, 2, -292, -620,
	189, -614, 455, 471, 556, -613, -323, 124, -323, 124,
	-323, 124, -323, -323, 2, 2, 2, 2, 2, 88,
	2, -140, -468, 2, 88, 2, 48, 503, -641, 189,
	2, 546, 2, 546, 2, -292, -292, -292, 359, 507,
	283, 593, -323, -323, -323, -324, -329, 472, 528, 557,
	469, -468, 2, -660, 2, 196, 189, 2, 527, 242,
	527, 242, 124, 196, 77, 124, 29, 527, 466, 633,
	4, -270, 636, -296, -249, -414, -547, -415, -414, -250,
	-249, -252, 189, 418, 566, 330, 488, 268, -445, -444,
	29, -468, -449, 183, 329, -468, -447, -470, 621, 622,
	-539, -541, -397, 357, -243, -243, -243, -385, -495, -468,
	406, 242, -520, -518, -518, -321, -548, 539, -468, -468,
	-468, -468, -468, -468, -468, -468, -468, -468, -468, -468,
	-468, -468, -468, -468, -468, -468, -468, -468, -468, -468,
	-468, -468, -468, -468, -468, -468, -468, -468, -468, -468,
	-468, -468, -468, -468, 284, 230, 490, 53, 233, -468,
	543, -468, -468, -468, -468, 322, 346, 353, 553, 174,
	563, 143, 357, -674, 521, 42, -475, -244, -402, 631,
	-489, 36, 501, 29, -482, 631, 2, -463, -468, -464,
	-349, -347, -292, 621, 622, 623, 624, 625, 626, 611,
	612, 613, 14, 15, 16, 616, 620, 618, 619, 187,
	99, 615, 299, 462, 90, 177, 178, 179, 180, 266,
	267, 17, 18, 19, 35, 614, -399, -398, -398, 632,
	581, 29, 143, 623, 2, 632, 636, 39, 632, -468,
	-399, -481, -477, -398, -488, -487, 590, -435, -436, 598,
	308, 127, 224, 306, -437, 475, -542, 8, -548, 623,
	-599, 182, 215, 631, 632, 2, 632, 2, 632, -468,
	2, 632, -468, 2, 632, -468, 2, 632, -468, 2,
	632, 2, 632, 2, -468, -468, -468, -468, -468, -468,
	-468, -398, 8, -542, -542, 539, 539, -542, -542, -542,
	-534, 393, 394, 395, 396, 286, 287, 288, 289, 397,
	398, 399, 400, 314, 315, 316, 317, 310, 311, 312,
	313, 318, 319, 320, 321, 206, 207, 208, 209, 202,
	203, 204, 205, -534, -429, 2, -536, -398, 4, 598,
	308, 127, 224, 306, 475, 5, -429, 2, -430, 2,
	-468, -398, -431, -469, -470, 621, 622, 614, -348, -432,
	2, -468, -399, -468, 60, 278, 545, -433, -468, 196,
	-398, -398, 2, -398, 2, -471, 2, -596, 39, -398,
	-391, 636, 196, 39, 4, -391, -391, 631, 632, 636,
	-428, 219, 302, 297, 256, -428, -499, -427, 263, -425,
	374, -425, -425, -493, -307, 629, 637, -548, -493, -492,
	-491, 39, -316, 371, -493, -493, 633, 632, -492, 630,
	-611, 631, 634, 634, 634, 634, 634, -323, 631, -398,
	-548, 633, 509, 2, 632, 257, 257, 257, 257, 257,
	364, 461, 632, 543, -615, -332, -336, 528, 2, 593,
	-110, 366, 632, 636, -390, 38, 629, 633, -542, 2,
	2, -537, 583, 631, 631, -436, 631, 196, -615, -336,
	528, 2, -621, -389, -389, 543, -292, 2, -323, -396,
	-270, 159, -396, -396, -270, 636, 159, -306, -327, -332,
	-334, -336, -292, -553, -555, -270, -328, -648, 632, 547,
	-455, -350, 418, 500, 441, 479, 523, 9, 9, 636,
	-548, -215, 470, 330, -305, -305, -305, -305, 636, -649,
	97, 543, 81, 631, 471, -285, 292, 543, -459, 226,
	81, -570, 97, -309, -571, -292, 75, 562, 406, 193,
	157, -649, 97, 406, -649, 97, 2, 244, 97, 484,
	507, 631, 29, 63, -504, 43, 43, 29, -629, -630,
	279, 196, 599, 527, 242, 471, 543, 543, -504, -422,
	-518, 122, 303, 304, 63, -543, -543, 63, -543, -543,
	-543, 593, -326, -504, 471, 543, 543, 543, 428, 518,
	428, 518, -278, -154, 543, 543, 29, -200, 448, 131,
	-672, 613, 428, 279, -630, 543, 196, 636, 43, 43,
	29, -629, 196, 543, -345, -307, 577, 44, 577, 44,
	577, 543, 44, 471, 543, 636, 44, -261, -616, -616,
	-222, -221, -292, 5, -388, -264, -557, -263, 328, 77,
	543, 543, -15, 484, -623, -297, 109, 336, 296, 337,
	101, 333, 100, 332, 107, 334, 108, 335, 584, 349,
	585, 350, 66, 331, 307, 338, 504, 339, 586, 351,
	-298, -299, 150, 385, 575, 124, -553, -15, -15, 484,
	379, 440, 159, -646, 233, 29, -635, 233, -512, 233,
	-512, -337, -292, 633, -140, -468, -468, -140, -468, -140,
	48, 159, 159, 2, 2, -668, 272, 631, -354, 346,
	196, -388, -513, 636, 254, -323, 175, -613, 159, -553,
	-421, -420, 346, -328, 226, 2, 159, -378, 346, 153,
	631, 416, 2, 159, -308, 226, -293, -292, -440, -272,
	531, 159, -418, 573, -450, -140, 631, 131, 39, -450,
	-407, -408, -510, -409, -309, 631, -316, -465, -111, -514,
	632, 632, 632, -222, 368, -235, -379, -310, -309, 123,
	420, 420, -229, 593, -136, -137, 632, 636, -512, 233,
	510, -137, -557, -223, -223, -512, -512, -323, 189, -557,
	-223, 233, -223, 233, -223, 233, 2, 2, 2, 2,
	-424, -323, -306, -345, -323, 29, 633, -555, -555, -336,
	-332, -424, -306, -424, -306, -424, -306, -424, -424, -140,
	-468, 507, 2, 481, 189, 189, 633, -424, 8, -381,
	450, 5, 2, 416, 124, 527, 383, 242, -323, -345,
	-323, -345, -306, 124, -306, 125, -323, 4, -504, -415,
	-250, 365, 268, 488, -447, -448, -470, 460, 461, -448,
	460, 461, 8, 9, 8, 9, -254, 492, 352, -396,
	636, -259, 40, 139, 268, -323, 599, 155, -468, -468,
	543, -674, 521, -475, 155, -468, 322, 353, 553, 174,
	563, 143, 357, 196, 631, -469, -469, 632, -400, -468,
	-468, 630, 639, 632, 633, 632, -384, 636, -382, -468,
	-398, -398, 632, 633, -398, -388, 630, 630, 636, 632,
	-486, -487, 148, -468, 543, 543, 543, 543, 631, 632,
	633, -604, 375, 631, 631, -468, 632, 632, 632, 632,
	39, 636, 636, 636, 632, 636, 636, 636, 632, 632,
	632, 636, 632, 599, 599, 632, 632, 632, 632, 636,
	632, 636, 632, 196, 632, 632, -438, 390, 632, 11,
	12, 621, 622, 623, 624, 187, 625, 626, 619, 620,
	618, 611, 612, 613, 90, 299, 462, 14, 15, 16,
	-348, 257, 233, -469, -469, -469, -469, 632, -473, -474,
	196, 189, 39, -433, -433, -433, 632, 196, -398, 632,
	632, 631, -597, 301, 346, 632, -462, -461, 591, -509,
	-392, 2, -499, -318, -548, -462, -462, -398, -468, 263,
	263, -426, 573, 364, -428, -499, -492, -544, -467, -466,
	191, 40, 139, 340, 341, 342, 229, 192, -492, -316,
	-378, -492, -492, -548, -493, -493, -491, 632, -612, -544,
	632, -393, -502, -591, -384, 633, -548, -232, -592, -201,
	5, 353, -201, -201, -201, -201, -323, -555, 543, 543,
	233, 26, 391, -518, 629, 630, 8, -548, 631, -542,
	-542, -542, -555, 196, 196, 233, 364, 196, -553, 2,
	-270, -396, -270, -270, -345, -346, -270, -270, -270, -419,
	593, -545, -454, 560, 86, 418, 539, -545, 121, 470,
	-266, 440, 484, -309, -309, -323, -239, -238, -236, -292,
	5, -333, 210, 429, -553, 346, -459, 226, -271, 346,
	226, -317, -518, 631, -442, 595, 268, 268, 573, -309,
	-317, 268, 226, -309, 226, -317, 2, -317, -624, 418,
	358, -468, -237, -236, 63, -361, 290, 416, 347, -267,
	440, 484, 379, -140, -140, -140, 631, -648, 573, 142,
	-323, -345, -323, -333, -553, -328, 484, 379, 440, 343,
	-339, -543, -543, -420, 484, 379, 440, -333, -553, -326,
	-553, -277, 226, -292, 428, -277, 226, 428, 471, -306,
	428, 599, 47, -672, 543, 196, -468, -468, -268, -140,
	-140, -140, 631, -307, -269, 440, 5, 226, -309, 5,
	-309, 226, 5, -292, -309, -333, -553, -652, 25, 147,
	-309, -223, 636, 613, 613, -265, 613, -333, -553, -297,
	385, -557, 353, 569, -306, -622, -313, 471, 543, 543,
	-504, -642, -643, 212, 453, 471, 456, -555, -136, -226,
	593, -136, -220, 237, 623, -619, -557, -292, 582, -292,
	-352, -355, -353, -309, -460, -459, -574, -575, -570, 284,
	242, 562, 256, 175, 97, -240, -241, 595, 593, 159,
	-343, -323, 629, -223, -617, -557, 175, -314, -292, -513,
	-334, -335, 159, -378, 346, -553, 39, 159, 631, 2,
	2, -327, 364, 346, -308, 226, -273, 149, -672, -306,
	-462, -392, -417, -452, 450, 364, -379, 578, -316, -417,
	-394, 636, 196, 613, 633, -379, -508, 623, -111, -111,
	-223, 631, 631, -557, 632, 636, 633, 631, 613, 613,
	-231, 368, -230, 151, 270, 255, 494, 495, 496, 497,
	141, 493, 128, 327, 238, 533, -512, -557, -229, -137,
	196, -512, 233, 196, -70, 593, 527, -223, -557, -557,
	-557, 635, 456, -292, -424, -424, -424, 481, 481, -292,
	189, -388, -319, -548, -306, -323, -320, -345, 189, 189,
	-306, 566, -448, 365, 295, -495, -260, 601, -323, 635,
	-468, -468, 155, 155, -468, -469, -469, -468, 155, 196,
	631, -468, -479, 34, 34, 632, 636, -464, -468, -347,
	632, 581, -384, -384, 632, 623, -548, 635, 632, -477,
	152, -468, 537, 308, 224, 306, -437, 306, -437, -437,
	-542, 5, -548, 623, -605, -312, 631, -292, 591, -383,
	370, 632, -520, -518, -468, -468, -468, -468, -468, -542,
	-523, -523, -538, -538, -468, -473, -468, -520, -518, -469,
	-469, -469, -469, -469, -469, -469, -469, -469, -469, -469,
	-469, -469, -469, -469, -469, -469, -469, -469, -469, 143,
	346, 357, -469, -474, -473, -468, -468, -518, 632, 632,
	632, -398, -110, 631, 301, -411, 215, -468, -512, 636,
	-411, -411, 632, -499, -499, 631, -468, 263, 630, 636,
	638, 613, 613, -378, 633, -491, -492, 630, 632, 636,
	632, 636, -451, 39, 632, -548, -462, -234, -233, 140,
	56, 111, 138, 353, 361, 195, 220, 415, 155, 190,
	149, 257, -644, 593, -555, -555, 471, 367, 5, 8,
	629, 630, 633, -542, 632, 632, 632, -555, -555, 471,
	-613, 556, 471, 29, -555, -270, -270, 123, 330, -468,
	-212, 593, 595, 543, 543, 632, 636, 613, 63, 233,
	159, 346, 575, 346, -571, 157, -576, -468, 631, 242,
	631, 631, 2, -256, -257, -258, 147, 484, 25, -650,
	2, 573, 159, -270, 159, -270, 597, 632, 636, -361,
	631, 631, 543, 471, -285, 543, 593, -398, -468, -224,
	131, -547, -631, 635, -631, 635, 471, 543, 543, 471,
	543, 543, 346, -292, 159, -292, 593, 173, 173, 599,
	-277, -468, -468, 189, 543, 593, -398, 543, -522, 51,
	27, 346, -327, -270, 159, 543, 543, 556, 484, -221,
	-557, -557, -136, -557, -557, 353, -15, -333, -553, -328,
	484, 379, 440, -621, -621, 212, -336, -646, -512, -228,
	368, -227, 151, 452, 141, 270, 238, -512, -226, 196,
	254, 593, -328, 2, 632, 632, 636, 636, -577, -271,
	-323, -308, 242, 242, -315, -293, 39, 361, 361, 631,
	-323, -91, 593, -511, -544, -314, -625, 593, 45, -326,
	39, 159, -622, -140, -328, -516, -517, 5, 39, -323,
	159, 364, 346, -274, 277, -672, -552, -592, -384, -417,
	-406, 347, 95, 632, -462, -408, -392, -468, 2, 632,
	-222, -557, -223, -235, -310, 2, -558, -557, -557, 636,
	631, 613, 613, 613, 613, 613, 613, 613, -229, -512,
	-136, -229, -137, -140, 368, -323, -223, -223, -223, 623,
	-424, 5, -367, -366, 383, 357, -367, 460, 460, 365,
	183, 273, -259, -307, -468, -468, 155, 34, 34, -468,
	-468, -479, 632, -468, -468, -398, 630, 5, -468, 632,
	632, 8, -468, 632, 633, -606, -292, -468, 632, 63,
	632, 632, 636, 636, 632, 632, 632, 632, 632, 632,
	632, -474, 196, 143, 357, 631, 632, 632, -110, -476,
	218, 63, -499, -476, -476, -426, -388, -499, -466, -307,
	629, -307, 629, -548, -544, -502, 631, 633, -233, 613,
	-557, -557, 2, 2, 2, 5, 5, 415, 346, 353,
	5, -201, 212, -644, -644, 593, -336, 630, 2, 629,
	-548, 632, -336, 196, -615, -336, 528, 123, 189, 223,
	223, -309, -309, -238, -545, 527, 460, -277, 406, -459,
	159, 159, -578, 97, -580, 79, 175, 106, 346, 353,
	562, 406, 75, 131, 364, 425, -662, -663, -664, 39,
	604, 605, 632, -386, -496, -591, 631, -292, -386, -388,
	346, 515, 131, 364, 346, 131, 364, 588, 123, 2,
	556, 82, -309, -317, -236, -388, -388, -323, -333, -553,
	167, 632, 636, 613, 2, 623, 623, -333, -553, -328,
	-333, -553, -326, 159, 578, -277, 381, 173, 543, -140,
	-468, 167, 632, -307, 5, 5, 159, -304, 79, -309,
	5, -309, -327, 123, 593, 471, 543, 543, 364, 364,
	367, -642, -643, -226, 636, 631, 613, 613, 613, -226,
	-558, -136, 2, -378, -368, 244, -309, -575, -572, -573,
	406, -460, -579, -581, 175, 406, -356, 631, -308, -293,
	631, -140, 2, -239, 631, -354, 368, 630, -627, 368,
	-626, 121, 141, -553, -421, -140, -328, -376, 593, -378,
	632, 636, 153, -443, 573, -307, -323, 159, -275, 276,
	-672, -552, -272, -446, -444, 144, 631, 364, -140, -384,
	613, 632, 632, 123, 632, -230, -231, -557, -136, -557,
	-557, -557, -136, -557, -229, -512, -512, -71, -72, 242,
	97, 388, -320, 527, 242, 631, 631, -259, -468, -468,
	-468, 632, -384, -548, 623, -600, 383, 632, -495, -468,
	-468, -469, 196, 631, -479, 632, -601, 592, -468, -412,
	-413, -468, 458, 112, 216, -601, -601, 632, -544, -544,
	2, -557, 2, 2, 353, 2, 2, 367, 2, 543,
	629, 2, 196, -555, 196, 196, 233, -140, 233, 39,
	428, -459, -317, -317, -321, -314, 175, 226, 353, 588,
	-442, 268, 631, -469, 566, -323, 631, 2, 225, 225,
	31, 63, -665, 135, 246, 632, 636, -497, -303, -292,
	-468, -497, 632, 632, 353, 566, 353, 588, -468, 566,
	-518, 631, -270, -270, 632, 632, -468, 543, -547, 104,
	-545, 2, -631, -277, -388, -306, -468, 189, -468, 543,
	5, -270, -321, -270, -270, -304, 556, 363, -333, -553,
	-328, -647, 528, 478, 557, 472, 199, 459, -647, 189,
	-227, -228, -557, -136, -136, -226, 39, -362, -363, 2,
	-577, 268, -314, 268, 235, 158, -386, 631, 631, -388,
	-661, 593, 632, -352, -240, -92, -93, 544, -511, 636,
	631, 613, -378, 330, 123, 39, 5, 631, 631, -292,
	364, 631, -307, -287, 96, -672, -552, -273, -417, 347,
	-388, 97, -446, -475, -223, 631, -223, 632, -229, 636,
	29, 631, 29, 631, -323, -345, -398, -398, 632, -384,
	63, 636, 632, 632, -469, -479, 632, -602, -603, -312,
	636, 631, 631, 485, 630, 630, 2, -555, 2, -555,
	-555, -555, 471, -277, 406, -292, -571, -580, -314, 346,
	-241, 573, 593, -468, -469, -294, 631, -468, 631, 631,
	39, 131, 246, 136, 231, -458, -666, 105, 516, 234,
	-496, -259, 632, -457, 573, 425, -469, -304, -386, 631,
	631, 631, 613, 196, -140, 631, -522, -270, -327, 613,
	543, 2, 2, 196, -621, 632, -637, 423, -140, -240,
	631, -241, -357, 84, 98, 132, 225, 200, 243, 507,
	513, 29, -357, 632, -386, -386, 632, -358, 364, 123,
	330, 632, 39, -93, 9, -626, -627, -468, 39, 123,
	-140, -516, -386, -323, -386, 364, -279, -278, 285, -552,
	-274, 632, -317, -417, -558, -72, -388, -388, 632, 632,
	-607, 416, 461, 217, -398, -385, 632, 636, 39, -413,
	2, 2, 2, -644, -336, 428, -271, 159, 219, 632,
	-582, 300, -292, 632, -421, -421, 39, 136, 231, -364,
	-360, 631, -260, -497, -241, 219, -323, -632, 573, 632,
	-370, -369, -366, -372, -371, -366, -398, -545, 104, 381,
	-398, -304, -136, -555, -555, 364, -639, 197, -638, 5,
	10, -358, -387, -498, -309, -457, 632, 632, 85, 123,
	-368, -140, 632, -140, 2, -376, 632, 632, -443, 632,
	-323, -276, -559, 428, 430, -672, -275, -462, 144, 632,
	632, 632, 632, -608, -609, 53, 559, 113, -468, -608,
	-608, -603, -605, 196, 175, -456, 602, -583, -586, -585,
	609, 491, 197, 382, 632, 515, 587, 632, 632, -665,
	-388, -456, -378, -468, -457, 632, 636, 578, 632, 636,
	578, 632, 196, 632, -270, -644, -270, -647, -225, 593,
	48, -286, -285, 632, 636, -458, -457, -364, 405, 137,
	147, -362, -661, -457, 631, -458, 631, -284, -283, -672,
	-538, -287, 144, 347, 566, -223, -610, 157, -609, 402,
	188, 460, 402, 188, -610, -610, -555, -314, -241, 58,
	-585, 609, -586, 609, 566, 137, -462, 632, -582, -241,
	-369, 233, -371, 196, 381, 196, 468, -638, 31, -241,
	-498, -364, -458, -241, 461, 461, 2, -240, -358, -458,
	-386, -364, -386, -280, -281, -282, -388, -279, 347, 566,
	484, 113, 215, 538, 330, 34, 613, -584, 330, 447,
	67, 484, -584, -583, 631, 631, -555, 368, -241, -364,
	-462, 2, -358, -364, 632, -241, 632, -554, 379, -276,
	484, -407, 460, 372, -609, -468, 24, 353, 131, -665,
	-398, -398, -270, -222, 631, -462, -241, -286, -241, -457,
	-462, -458, -672, -284, -407, -462, 632, 632, -222, -462,
	-462, -458, -364, -553, -280, -462, -359, -360, 543, 632,
	-364, -241, 631, -241, -462, -398, -462, 632, -359,
}

var sqlDef = [...]int{
	-2, -2, 1, 2, 3, 4, 6, 7, 8, 10,
	12, 14, 16, 18, 20, 22, 24, 26, 28, 30,
	31, 32, 34, 36, 38, 40, 595, 596, 598, 599,
	600, 602, 603, 605, 607, 609, 610, 611, 613, 614,
	616, 617, 618, 619, 620, 622, 624, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, -2,
	0, 0, 711, 713, 0, 1553, 1555, 1557, 1559, 0,
	0, -2, -2, 0, 42, 43, 45, 47, 0, -2,
	370, 372, 374, 376, 0, 408, 410, 411, 413, 415,
	416, 417, 419, -2, 0, 528, 529, 531, 533, -2,
	0, 1138, 1140, 1142, 0, 699, 701, 0, 1145, 1147,
	1149, 0, 0, 723, 724, 0, 1667, -2, 715, 717,
	719, 721, 798, 800, 802, 804, 806, 808, 810, 812,
	814, 816, 817, 819, 821, 823, 825, 827, 828, 830,
	832, 834, 835, 837, 838, 840, 842, 844, 846, 848,
	850, 852, 854, 856, 858, 860, 862, 864, 866, -2,
	869, 870, 871, 873, -2, -2, 0, -2, -2, -2,
	1571, 49, 51, 53, 55, 57, 59, 61, 63, 65,
	67, 69, 71, 470, 472, 474, 476, 478, 481, 483,
	485, 1725, 535, 537, 539, 541, 543, 545, 547, 0,
	0, -2, 1739, 0, 0, 958, 73, 74, 75, 76,
	77, 78, 79, 80, 81, 82, 125, 126, 127, 128,
	129, 130, 131, 86, 87, 88, 90, 91, 92, 93,
	97, 98, 99, 100, 101, 102, 103, 104, 105, 106,
	107, 108, 122, 123, 84, 0, 0, 1698, 1700, 1702,
	1704, -2, 0, 0, 5, 9, 11, 13, 15, 17,
	19, 21, 23, 25, 27, 29, 33, 35, 37, 39,
	597, 601, 604, 606, 608, 612, 615, 621, 623, 625,
	580, 581, 584, 2437, 2455, 2456, 2457, 2460, 2461, 2462,
	2463, 2464, 2465, 2949, 3030, 3031, 2487, 2488, 2489, 2490,
	2491, 2492, 2493, 2494, 2495, 2496, 2497, 2498, 2499, 2500,
	2501, 2502, 2503, 2504, 2505, 2506, 2507, 2508, 2509, 2510,
	2511, 2512, 2513, 2514, 2515, 2516, 2517, 2518, 2519, 2520,
	2521, 2522, 2523, 2524, 2525, 2526, 2527, 2528, 2529, 2530,
	2531, 2532, 2533, 2534, 2535, 2536, 2537, 2538, 2539, 2540,
	2541, 2542, 2543, 2544, 2545, 2546, 2547, 2548, 2549, 2550,
	2551, 2552, 2553, 2554, 2555, 2556, 2557, 2558, 2559, 2560,
	2561, 2562, 2563, 2564, 2565, 2566, 2567, 2568, 2569, 2570,
	2571, 2572, 2573, 2574, 2575, 2576, 2577, 2578, 2579, 2580,
	2581, 2582, 2583, 2584, 2585, 2586, 2587, 2588, 2589, 2590,
	2591, 2592, 2593, 2594, 2595, 2596, 2597, 2598, 2599, 2600,
	2601, 2602, 2603, 2604, 2605, 2606, 2607, 2608, 2609, 2610,
	2611, 2612, 2613, 2614, 2615, 2616, 2617, 2618, 2619, 2620,
	2621, 2622, 2623, 2624, 2625, 2626, 2627, 2628, 2629, 2630,
	2631, 2632, 2633, 2634, 2635, 2636, 2637, 2638, 2639, 2640,
	2641, 2642, 2643, 2644, 2645, 2646, 2647, 2648, 2649, 2650,
	2651, 2652, 2653, 2654, 2655, 2656, 2657, 2658, 2659, 2660,
	2661, 2662, 2663, 2664, 2665, 2666, 2667, 2668, 2669, 2670,
	2671, 2672, 2673, 2674, 2675, 2676, 2677, 2678, 2679, 2680,
	2681, 2682, 2683, 2684, 2685, 2686, 2687, 2688, 2689, 2690,
	2691, 2692, 2693, 2694, 2695, 2696, 2697, 2698, 2699, 2700,
	2701, 2702, 2703, 2704, 2705, 2706, 2707, 2708, 2709, 2710,
	2711, 2712, 2713, 2714, 2715, 2716, 2717, 2718, 2719, 2720,
	2721, 2722, 2723, 2724, 2725, 2726, 2727, 2728, 2729, 2730,
	2731, 2732, 2733, 2734, 2735, 2736, 2737, 2738, 2739, 2740,
	2741, 2742, 2743, 2744, 2745, 2746, 2747, 2748, 2749, 2750,
	2751, 2752, 2753, 2754, 2755, 2756, 2757, 2758, 2759, 2760,
	2761, 2762, 2763, 2764, 2765, 2766, 2767, 2768, 2769, 2770,
	2771, 2772, 2773, 2774, 2775, 2776, 2777, 2778, 2779, 2780,
	2781, 2782, 2783, 2784, 2785, 2786, 2787, 2788, 2789, 2790,
	2791, 2792, 2793, 2794, 2795, 2796, 2797, 2798, 2799, 2800,
	2801, 2802, 2803, 2804, 2805, 2806, 2807, 2808, 2809, 2810,
	2811, 2812, 2813, 2814, 2815, 2816, 2817, 2818, 2819, 2820,
	2821, 2822, 2823, 2824, 2825, 2826, 2827, 2828, 2829, 2830,
	2831, 2832, 2833, 2834, 2835, 2836, 2837, 2838, 2839, 2840,
	2841, 2842, 2843, 2844, 2845, 2846, 2847, 2848, 2849, 2850,
	2851, 2852, 2853, 2854, 2855, 2856, 2857, 2858, 2859, 2860,
	2861, 2862, 2863, 2864, 2865, 2866, 2867, 2868, 2869, 2870,
	2871, 2872, 2873, 2874, 2875, 2876, 2877, 2878, 2879, 2880,
	2881, 2882, 2883, 2884, 2885, 2886, 2887, 2888, 2889, 2890,
	2891, 2892, 2893, 2894, 2895, 2896, 2897, 2898, 2899, 2900,
	2901, 2902, 2903, 2904, 2905, 2906, 2907, 2908, 2909, 2910,
	2911, 2912, 2913, 2914, 2915, 2916, 2917, 2918, 2919, 2920,
	2921, 2922, 2923, 2924, 2925, 2926, 2927, 2928, 582, 583,
	1332, 0, 664, 662, 2422, 665, 2734, 667, 669, 522,
	523, 524, 525, 526, 527, 0, 692, 678, 1737, 693,
	695, 696, 697, 698, 659, 657, 0, 697, 692, 2492,
	690, 1551, 1552, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 534, 0, 0, 0, 0, -2, 0, 0, 0,
	0, 0, 0, 0, 449, 1391, 1392, 1393, 1536, 1537,
	2786, 1578, 0, 257, 712, -2, -2, 2914, -2, 752,
	753, -2, -2, 767, 771, 762, 2918, 0, 2789, 2772,
	-2, 774, 1554, 1556, 1558, 874, 875, 876, 2441, 880,
	878, 890, 891, 894, 0, 911, -2, 0, 2488, 2757,
	-2, -2, 912, 913, -2, -2, -2, -2, 892, 893,
	0, 0, 0, 0, 0, 44, 46, 48, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	265, 267, -2, -2, -2, -2, 0, 0, 2837, 2547,
	2390, 2457, 2393, 2388, 371, 373, 375, 377, 378, 0,
	0, 0, 0, 0, 0, 0, 409, 412, 414, 418,
	-2, 420, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 448, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, -2, -2, 0, 0, 0, 0,
	0, 0, 0, 0, 1212, 1204, 1205, 1458, 0, 0,
	0, -2, 530, 532, 585, 586, 0, 1726, 1726, 593,
	594, -2, 0, 0, 0, 0, 332, 322, 1139, 1141,
	1143, 1144, 0, 0, 0, 0, 0, 700, 702, 0,
	0, 2831, 299, 1146, 1148, 1150, 1151, 0, 0, 0,
	0, 0, 0, 334, 0, 0, 716, 718, 720, 722,
	799, 801, 803, 805, 807, 809, 811, 813, 815, 818,
	820, 822, 824, 826, 829, 831, 833, 836, 839, 841,
	843, 845, 847, 849, 851, 853, 855, 857, 859, 861,
	863, 865, 867, 868, 919, 0, 0, 0, 0, 0,
	-2, -2, 0, 0, 0, -2, 0, -2, -2, -2,
	0, 0, 0, 0, 0, 0, 0, -2, 0, 0,
	1027, 0, 0, 0, -2, -2, -2, 0, 0, 0,
	0, 0, 0, 0, -2, -2, 0, 0, 0, 0,
	-2, 1118, 0, 0, 922, 925, 926, 927, 928, 929,
	930, 0, 1000, 1025, 1026, 1036, 872, 0, 1372, 1727,
	1580, 1561, 1575, 1580, 1563, 1564, 1565, 1566, 1567, 1572,
	1574, 1568, 1569, 1570, 50, 52, 54, 56, 58, 60,
	62, 64, 66, 68, 70, 72, 471, 473, 475, 477,
	479, 482, 484, 486, -2, 1696, 1697, 536, 538, 540,
	542, 544, 546, 548, 703, 0, 706, 0, 924, 705,
	-2, 0, 1731, 1731, 1731, 0, 0, 1697, 1695, 0,
	709, 710, 778, 779, 2004, 0, 0, 0, 0, 0,
	0, 0, 0, 2264, 2092, 0, 780, -2, 2125, 2127,
	2889, 2707, 2914, 2263, 2129, 2130, 2131, 2132, 2133, 0,
	2135, 2136, 2137, 2138, 2139, 2140, 0, 2142, 0, 2147,
	2148, 2149, 0, 2896, 2367, 2451, -2, 0, 0, 2902,
	2447, 0, 2230, 2165, -2, -2, 2474, 2453, 1936, 1937,
	1938, 1939, 1940, -2, -2, 2932, 2169, 2170, 2171, 2172,
	2173, 2174, 2175, 2176, 2177, 2178, 2179, 0, 2877, 2897,
	2898, 2903, 2905, 2899, 2886, 2190, 2561, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	1963, 1972, -2, -2, -2, -2, -2, -2, -2, 2890,
	2891, 2908, 2911, 2917, 2922, 2923, 2895, 2904, 2931, 2933,
	2934, 2935, 2936, 2937, 2938, 2939, 2940, 2941, 2942, 2943,
	2944, 2945, 2946, 2947, 2948, 1964, -2, -2, -2, -2,
	0, 1714, 2750, 1717, 1332, 1715, 1699, 1701, 0, 1703,
	0, 0, 0, 1708, 1734, 1732, 0, 1783, 1712, 1713,
	1806, 1806, 1830, 0, 1811, 0, 1830, 1726, 1857, 0,
	1817, 2777, 2166, 2167, 0, 2457, 2452, -2, -2, 2929,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 660, 0, 666, 668, 0, 0, 0, 691, 1736,
	0, 0, 0, 0, 0, 0, 0, 0, 452, 453,
	454, 455, 456, 2897, 0, 0, 0, 461, 0, 463,
	464, 465, 466, 467, 468, 469, 227, 2897, 553, 578,
	0, 227, 2897, 556, 227, 2897, 559, 0, 562, 1456,
	227, 2897, 565, 2418, 227, 2897, 568, 570, 2426, 227,
	2897, 574, 2433, 2431, 575, 0, 577, 247, 243, 244,
	245, 246, 1547, 1548, 1549, 1550, 0, 1577, 1457, 714,
	0, 740, 0, 750, 751, 2885, -2, 0, 2798, 755,
	756, -2, 758, 1581, 1585, 1586, 1587, 1588, 1589, 0,
	0, 0, 0, 1594, 0, 0, 0, 0, 747, 748,
	765, 766, 772, 775, 0, 883, 879, 895, 0, 910,
	0, 911, 911, 2407, 2398, 2399, 0, 0, 911, 911,
	0, 0, 914, 915, 916, 917, 918, 83, 0, 2897,
	1857, 85, 0, 2412, 2482, 2483, 2484, 2485, 2486, 2930,
	2950, 2951, 2952, 2953, 2954, 2955, 2956, 2957, 2958, 2959,
	2960, 2961, 2962, 2963, 2964, 2965, 2966, 2967, 2968, 2969,
	2970, 2971, 2972, 2973, 2974, 2975, 2976, 2977, 2978, 2979,
	2980, 2981, 2982, 2983, 2984, 2985, 2986, 2987, 2988, 2989,
	2990, 2991, 2992, 2993, 2994, 2995, 2996, 2997, 2998, 2999,
	3000, 3001, 3002, 3003, 3004, 3005, 3006, 3007, 3008, 3009,
	3010, 3011, 3012, 3013, 3014, 3015, 3016, 3017, 3018, 3019,
	3020, 3021, 3022, 3023, 3024, 3025, 3026, 3027, 3028, 3029,
	2932, 89, 0, 2897, 94, 0, 2897, 0, -2, 109,
	0, 124, 0, 151, -2, -2, -2, 132, 0, 2897,
	0, 2387, -2, 0, 239, 323, 324, 325, 0, 641,
	0, 650, 335, 336, 2470, 2471, 2478, 2479, 2480, 2481,
	0, 743, 2264, 0, 0, 1176, -2, 0, 1385, 1387,
	1387, 0, -2, 0, 0, 0, 1128, 2384, 2389, 1129,
	1130, 2408, 1131, 2394, 0, 379, 380, 381, 382, 383,
	0, 384, 2897, 386, 387, 0, 389, 390, 2897, 392,
	393, 0, 395, 0, 397, 0, 279, 283, 2897, 2897,
	422, 425, 0, 427, 428, 0, 430, 0, 0, 0,
	434, -2, 450, 0, 447, 437, 438, 440, 441, 442,
	443, 444, 0, 490, 488, 2423, 0, 0, -2, 2897,
	0, 1173, 0, 0, 1436, -2, 0, 1378, 0, 1443,
	2897, 1439, 0, -2, 0, 1724, 2897, 1598, 1208, 1209,
	1210, 1211, 1869, 519, 0, 1631, 0, 1633, 0, 1653,
	1863, 1806, 0, 0, 1868, 0, -2, 638, 2440, -2,
	588, 0, 589, 0, -2, 0, 349, 0, 0, 1154,
	1156, 1157, 1159, 1160, 1163, 1164, 1165, 1166, 0, 1168,
	1843, 300, 302, 0, 0, 0, 0, 1153, 1538, 1539,
	1540, 1541, 1542, 1543, 1544, 1545, 1546, 0, 0, 725,
	0, 0, 920, 921, 0, 0, 937, 938, 939, 0,
	349, 2790, 2745, 2583, 949, 0, 952, 955, -2, 0,
	0, 0, 0, 962, 0, 967, 968, 969, 0, -2,
	0, 976, 978, 1137, 980, 0, 0, 982, 0, 986,
	0, 989, 0, 991, 0, 993, -2, -2, -2, 1001,
	1002, -2, 1007, -2, 0, 1011, -2, 0, 1014, 0,
	1017, -2, 0, 1027, 1023, 1024, 0, 0, 0, 0,
	1044, 1045, 0, 1054, 0, 1057, 1058, 1059, 0, 0,
	1064, 1065, 0, 1067, 1068, 1069, 1071, 1072, 1073, 0,
	2866, 2795, 2547, 0, 1081, -2, 1087, 1089, 0, -2,
	0, 1105, 0, 1109, 0, 0, 1117, 0, 0, 923,
	0, 931, 932, 227, 1861, 1560, -2, 1562, 0, -2,
	0, 704, 0, 708, 1756, 1682, 1679, 0, 1753, 1754,
	1683, 0, 0, 0, 1690, 0, 1729, 1730, 0, 0,
	0, 1669, 1670, 0, 0, 0, 0, 2269, 2270, 2271,
	2272, 2285, 2273, 2274, 2284, 2282, 2283, 2275, 2276, 2281,
	2295, 2296, 2286, 2287, 2277, 2290, 2288, 2289, 2291, 2292,
	2293, 2294, 0, 0, 2300, 0, 2278, 2279, 2280, 2308,
	0, 0, 2309, 0, 2311, 0, 2301, 2297, 2298, 2299,
	0, 2071, 2073, 2375, 0, 0, 0, 2307, 2302, 2303,
	2009, 2010, 2011, 2012, 2013, 2046, 2050, 2051, 0, 0,
	2126, 2372, 2371, 2128, 0, 0, 2323, 0, 2141, -2,
	0, 2264, 2318, 0, 0, 2150, 2151, 2152, 0, 0,
	2323, 0, 0, 2366, 2162, 2163, 2001, 0, 0, 2232,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1950, 1949,
	0, 1951, 0, 1952, 1953, 1960, 1973, 0, 0, 0,
	0, 1977, 0, 0, 0, 0, 0, 0, 0, 2347,
	-2, 0, 0, 0, 0, 1965, 0, 0, 1716, 0,
	0, 1787, 2376, 2380, 2381, 1787, 1787, 0, 0, 2324,
	1854, 1854, 0, 0, 1849, 1849, 1849, 1847, 1830, 0,
	1830, 1840, 0, 1830, 1830, 0, -2, 1811, 0, 0,
	1840, 0, 1824, 626, 628, 630, 632, 633, 634, 636,
	1858, 1859, 0, 0, 0, 0, 2458, 0, 0, 0,
	0, 2430, 0, 0, 2443, 0, 0, 2417, 404, 405,
	0, 0, 0, 2848, 2789, 0, -2, 671, 694, 1726,
	0, 2326, 1884, 1888, 0, 1890, 1891, 1892, 1893, 1894,
	0, 0, 1885, -2, 1961, 1963, 1984, 2475, 2476, 2477,
	1944, 1945, 1946, 1947, 1948, 1956, 1943, 1943, 1943, 1954,
	1983, 1975, 1983, 1979, 1929, 1930, 1931, 1966, 1967, 1968,
	1969, 0, 2848, 2789, 0, -2, 0, 681, 0, 0,
	1664, 451, 0, 458, 459, 460, 0, 549, 0, 225,
	226, 0, 227, 2897, 554, 0, 557, 0, 227, 2897,
	2382, 563, 0, 566, 0, 0, 572, 0, 0, 0,
	0, 0, 227, 1666, 0, 0, 0, 0, -2, 760,
	768, 769, 770, 0, 1583, 0, 1590, 789, 790, 791,
	1592, 1593, 0, 1595, 763, 792, 793, 794, 795, 796,
	797, 0, 2396, 2397, 2402, 2403, 0, 0, 761, 782,
	764, 0, 776, 886, 881, 882, 896, 897, 0, 0,
	2400, 2401, 0, 0, 902, 903, 133, 1533, 0, 0,
	180, 0, 1533, 1533, 0, 0, 0, 0, 208, 0,
	0, 1242, 0, 0, 0, 0, 151, 165, 176, 145,
	146, 147, 0, 0, 0, 0, 0, 0, 95, 1354,
	0, 1357, 0, 0, 0, 0, 0, 0, 0, 1370,
	0, 0, 0, 0, 0, 111, 112, 0, 0, 117,
	118, 0, 164, 0, 0, 0, 0, 0, 1628, 0,
	155, 151, 0, 0, 150, 152, 135, 0, 0, 151,
	166, 178, 0, 214, 216, 1239, 0, 0, 0, 0,
	0, 0, 0, 0, 238, 249, 0, 640, 642, 0,
	0, 0, 0, 648, 0, 651, 0, 741, 745, 746,
	0, 0, 742, 744, 0, 0, 1379, 0, 0, 0,
	1723, 0, 0, 0, 0, 2897, 1531, 0, 1516, 0,
	1843, 2636, -2, -2, 300, 1843, 1127, 0, 0, 2458,
	2392, 0, 0, 0, 0, 0, 0, 396, 0, 0,
	0, 0, 426, 429, 431, 432, 433, 0, 1435, 0,
	439, 480, 1301, 2897, 0, 0, 509, 502, 0, 505,
	0, 0, 0, 1353, 2897, 1351, 2427, 0, 1376, 0,
	1332, 2897, 2425, 0, 0, 0, 1444, 2467, 1453, 1457,
	1616, 0, 521, 0, 1634, 1636, 0, 0, 1864, 0,
	1866, 1806, 1726, 0, 0, 0, 0, 327, 0, 0,
	0, 0, 0, 0, 1167, 306, 0, 1842, 0, 0,
	337, 1843, 300, 2763, 0, 1152, 349, 349, 1843, 727,
	1843, 729, 0, 0, 940, 941, 0, 349, 349, 349,
	950, 951, 953, 954, -2, -2, -2, -2, 956, 957,
	1051, 0, 0, 0, 1050, 970, 0, 972, 975, 979,
	0, 1121, 2772, 2789, 2848, 1135, 1051, 2547, 1051, 2547,
	1051, 2547, 1051, 1051, 995, 1039, 1047, 1006, 1013, 0,
	1008, 1012, 1015, 1018, 0, 1020, 1028, 0, -2, 0,
	1031, 0, 1033, 0, 1035, 1051, 1052, 1055, 0, 1063,
	1066, 0, 1074, 1075, 1076, 1077, 2438, 1078, 1079, 1080,
	-2, 1084, 1085, 0, 1096, 1101, 1102, 1098, 0, 0,
	0, 0, 0, 0, 1112, 1113, 0, 0, 1120, 0,
	933, 1371, 0, 1573, 1756, 1682, 707, 1673, 1755, 1674,
	1681, 1684, 0, 0, 1686, 0, 1688, 0, 1751, 1752,
	1759, 1760, 0, 1770, 1771, 1763, 0, -2, 0, 0,
	1766, 1767, 1692, 0, 1709, 1710, 1711, 1740, 1743, 1472,
	0, 3030, 2005, 1879, 2006, 2007, 2411, 0, 2014, 2015,
	2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, -2, -2,
	-2, -2, -2, -2, -2, -2, 2032, 2033, 2034, 2035,
	2036, 2037, 2038, 2039, 2040, 2041, 2042, -2, -2, -2,
	2047, 2048, 2049, -2, 2310, 2312, 0, 2375, 0, -2,
	0, -2, -2, -2, -2, 2068, 0, 2070, 2075, 2077,
	2079, 0, 0, 0, 0, 2374, 2089, 2358, 2359, 0,
	0, 2266, 2267, 2268, 2074, 0, 2093, 2373, 2370, 0,
	0, 2304, 0, 2269, 2270, 2271, 2272, 2273, 2274, 2275,
	2276, 2277, 2278, 2279, 2280, 2281, 2282, 2283, 2284, 2285,
	2286, 2287, 2288, 2289, 2290, 2291, 2292, 2293, 2294, 2295,
	2296, 2297, 2298, 2299, 2300, 2301, 0, 2322, 1739, 2154,
	0, 0, 0, 0, 2161, 2146, 2320, 0, 2319, 0,
	0, 0, 2330, 0, 2365, 2361, 0, 2409, 2000, 1987,
	1988, 1989, 1990, 1991, 1992, 2002, 0, 2406, 2444, 2450,
	2240, 0, 0, 0, 2191, 2192, 2193, 2194, 2195, 0,
	2197, 2198, 0, 2200, 2201, 0, 2203, 2204, 0, 2206,
	2207, 2208, 2209, 2210, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905,
	1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915,
	1916, 1917, 1918, 1919, 1920, 1921, 1922, 1923, 1924, 1925,
	1926, 1927, 1928, 0, 0, 2212, 0, 2333, -2, -2,
	-2, -2, -2, -2, -2, -2, 0, 2214, 0, 2216,
	2324, 2344, 0, 0, 2094, 0, 0, 0, 0, 0,
	2219, 2324, 2352, 0, 0, 0, 0, 0, 2324, 0,
	2357, 0, 2226, 0, 2228, 959, 960, 1718, 0, 0,
	1874, 0, 0, 0, 2379, 1874, 1874, 0, 1782, 0,
	0, 1850, 1851, 1852, 1853, 0, 0, 1854, 0, 1844,
	1848, 1845, 1846, 1840, 1803, 0, 0, 2413, 1840, 1809,
	1839, 0, 1332, 1829, 1840, 1840, 0, -2, 1813, 1830,
	0, 0, 627, 629, 631, 635, 637, 0, 0, 1739,
	-2, 0, -2, 351, 1331, 0, 0, 0, 0, 0,
	0, 661, 663, 0, 0, 569, 0, 0, 677, 0,
	655, 0, 658, 0, 1875, 1878, 0, 0, 1889, 1895,
	1896, 0, -2, 0, 0, 1985, 0, 0, 0, 0,
	0, 689, 0, 692, 0, 0, 0, 462, 579, 227,
	551, 0, 227, 227, 560, 0, 0, 227, 571, 227,
	2434, 227, 2432, 248, 576, 1665, 260, 0, 749, 0,
	1582, 1591, 0, 786, 0, 788, 0, 2404, 2405, 0,
	777, 0, 884, 0, 898, 899, 900, 901, 0, 0,
	0, 0, 1532, 0, 0, 1479, 0, 0, 184, 2897,
	0, 229, 0, 0, 1294, 2419, 0, 1284, 0, 0,
	2569, 0, 0, 0, 0, 0, 201, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 142, 0, 148,
	149, 0, 0, 0, 0, 0, 0, 0, 0, 1355,
	1356, 1358, 1365, 1367, 0, 1361, 1362, 0, 1364, 1366,
	1368, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 119, 1388, 0, 0, 1389, 1390, 1604, 1605,
	0, 1627, 1628, 0, 0, 0, 0, 0, 0, 0,
	144, 0, 0, 0, 0, 2386, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 643, 349, 645,
	646, 345, 342, 344, 647, 652, 0, 653, 0, 0,
	0, 0, 1381, 0, 1431, 1429, 1403, 1404, 1405, 1406,
	1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416,
	1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426,
	1427, 1428, 0, 0, 0, 0, -2, 1383, 1384, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 270, 0,
	340, 2385, 2395, 0, 1161, 1162, 385, 388, 391, 394,
	266, 0, 0, 424, 435, 0, 0, 1214, 1186, 0,
	0, 489, 349, 0, 0, 504, 0, 509, 2436, 1171,
	1349, 1352, 0, 1332, 2897, 1399, 0, 0, 0, 0,
	0, 0, 1442, 0, 0, 2897, 2414, 2466, 2467, 1618,
	1628, 0, 1874, 0, 1651, 1637, 0, 0, 0, 1651,
	1655, 1656, 1658, 1659, 0, 0, 1865, 1871, 587, 639,
	1726, 1726, 349, 347, 2710, 0, 0, 1640, 1642, 0,
	0, 0, 292, 0, 303, 1843, 301, 0, 306, 0,
	0, 1843, 300, 0, 501, 726, 731, 935, 0, 349,
	943, 0, 945, 0, 947, 0, 997, 1041, 1049, 1100,
	961, 963, 964, 965, 0, 0, 0, 1136, 1132, 1133,
	1134, 981, 1051, 984, 1051, 987, 1051, 990, 992, 1010,
	1016, 1029, 1022, 1030, 0, 0, 0, 1043, 0, 1061,
	0, 1070, 1083, 0, 0, 0, 0, 0, 0, 0,
	1106, 1107, 1108, 1110, 1115, 1114, 1119, 934, 1862, 1677,
	1678, 1680, 0, 1689, 0, 0, 1765, -2, -2, 1764,
	1768, 1769, -2, -2, -2, -2, 1685, 0, 1694, 1691,
	0, 1750, 1470, 1471, 0, 0, 0, 0, -2, -2,
	0, 0, 0, 2090, 0, -2, 2069, 2072, 2076, 2078,
	2080, 0, 0, 0, 0, 0, 0, 2313, 0, 2315,
	2091, 2368, 2371, 2306, 0, 2262, 0, 0, 1738, 1739,
	1739, 0, 2160, 0, 2321, 0, 2328, 2329, 0, 2153,
	0, 2362, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2164, 0, 0, 0, 0, 2196, 2199, 2202, 2205,
	0, 0, 0, 0, 2185, 0, 0, 0, 2189, 1955,
	1941, 0, 1983, 1981, 1982, 1976, 1983, 1980, 1933, 0,
	1932, 0, 2211, 0, 2213, 2215, 0, 0, 2217, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2097, 2098, 2099, 2119, 2218, 2350, 2351,
	0, 0, 0, 0, 0, 0, 2224, 0, 2356, 2225,
	2227, 1726, 0, 1719, 0, 1784, 1773, 1873, 0, 2377,
	1843, 1786, 1788, 2378, 2416, 1773, 1773, 0, 2325, 0,
	0, 1834, 0, 0, 0, 1836, 1807, 0, 0, 1801,
	0, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1808, 1332,
	1838, 1810, 1814, 2444, 0, 1840, 0, 1825, 0, 1827,
	1860, 0, 1819, 1822, 0, 0, 2459, 1874, 0, 398,
	406, 407, 399, 400, 401, 402, 0, 1519, 0, 0,
	0, 0, 0, 2327, 0, 1880, 0, 1886, 0, 0,
	0, 0, 679, 0, 0, 0, 0, 0, 1663, 457,
	550, 227, 555, 558, 2383, 227, 564, 567, 573, 256,
	0, 739, -2, 784, 785, 787, 0, 783, 889, 885,
	181, 1533, 0, 0, 0, 1475, 0, 1197, 0, 1192,
	1193, 1477, 1481, 1487, 1490, 0, 186, 2897, 198, 0,
	2897, 0, 1258, 0, 0, 0, 0, 0, 0, 1535,
	0, 0, 2897, 227, 2897, 227, 202, 204, 207, 0,
	213, 209, 0, 1194, 0, 1246, 0, 0, 1249, 134,
	1533, 0, 0, 137, 141, 153, 0, 0, 0, 163,
	0, 0, 0, 1492, 1496, 1504, 0, 0, 0, 1359,
	1360, 1363, 1369, 96, 0, 0, 0, 1500, 1502, 1508,
	110, 113, 2897, 2428, 0, 115, 2897, 0, 0, 1474,
	0, 0, 0, 0, 0, 0, 0, 0, 215, 139,
	143, 154, 0, 1510, 136, 0, 242, 0, 0, 232,
	227, 2897, 0, 234, 0, 235, 236, 250, 0, 0,
	0, 644, 0, 0, 0, 649, 0, 1174, 1175, 1430,
	0, 1374, 1375, 0, 1386, 1380, 0, 0, 0, 0,
	0, 1512, 1513, 0, 0, 0, 1531, 1528, 1843, 262,
	0, 1843, 270, 0, 2391, 0, 284, 421, 0, 0,
	0, 0, 1213, 1312, 1215, 1217, 1218, 1219, 229, 0,
	2467, 1284, 2625, 2467, 0, 0, 1181, 0, 0, 0,
	495, 491, 0, 500, 503, 508, 0, 507, 2420, 513,
	-2, 0, 0, 0, 0, -2, 0, 0, 1446, 1440,
	1441, 0, 0, 0, 0, 2897, 1620, 1628, 0, 1724,
	1739, 520, 1629, 1651, 0, 0, 0, 1639, 1635, 1632,
	1874, 0, 0, 0, 0, 0, 1867, 1870, 590, 591,
	326, 0, 0, 349, 0, 0, 0, 0, 0, 0,
	304, 0, 307, 0, 0, 0, 312, 313, 314, 315,
	316, 317, 0, 0, 0, 0, 306, 338, 294, 1843,
	0, 306, 0, 0, 728, 0, 0, 942, 349, 349,
	349, 0, 971, 974, 983, 985, 988, 1032, 1034, 1051,
	0, 1062, 1090, 2415, 1091, 1236, 0, 1236, 0, 0,
	1111, 1687, 0, 1762, 1693, 1744, 1745, 0, 1472, 0,
	2008, 2053, 0, 0, -2, 0, 0, 2057, 0, 0,
	0, -2, 0, 0, 0, 2314, 2316, 0, 2370, 2305,
	2155, 0, 0, 0, 2159, 2143, 2144, 0, 2265, 2331,
	2360, 2364, 0, 1993, 1994, 1995, 1996, 1997, 1998, 1999,
	0, 2410, 2445, 2449, 2238, 2239, 2243, 2424, 0, 0,
	0, 2168, 0, 0, 0, 0, 0, 0, 0, 0,
	1974, 1978, 0, 0, 2332, 2343, 2345, 2095, 2096, 2100,
	2101, 2102, 2103, 2104, 2105, 2106, 2107, 2108, 2109, -2,
	-2, -2, 2113, 2114, 2115, -2, -2, -2, 2120, 0,
	0, 0, 2346, 2348, 2349, 2353, 2354, 0, 2221, 2222,
	2223, 2355, 0, 1726, 1720, 1781, 0, 1872, 1785, 0,
	1781, 1781, 1733, 1832, 0, 0, 1856, 0, 1804, 0,
	1805, 0, 0, 1837, 0, 1812, 1815, 1816, 1826, 0,
	1818, 0, 1821, 0, 2155, -2, 350, 352, 354, 0,
	357, 358, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 670, 0, 1519, 1519, 0, 672, 656, 0,
	0, 1882, 0, 0, 1958, 1962, 1986, 683, 685, 0,
	0, 2848, 2789, 0, 682, 552, 561, 258, 0, 1841,
	0, 0, 0, 0, 0, 210, 0, 0, 0, 0,
	0, 0, 228, 0, 1293, 0, 1256, 0, 0, 1283,
	0, 0, 1299, 188, 189, 190, 0, 0, 0, 0,
	200, 0, 0, 196, 0, 206, 212, 211, 0, 1243,
	0, 0, 0, 0, 1480, 0, 0, 0, 160, 161,
	162, 0, 167, 0, 168, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 121, 0, 1610, 1611, 0,
	1601, 157, 0, 0, 0, 0, 0, 0, 230, 0,
	0, 0, 1469, 252, 0, 0, 0, 0, 0, 346,
	341, 343, 0, 1373, 1433, 1434, 1382, 1493, 1497, 1505,
	0, 0, 0, 0, 0, 697, 1530, 0, 270, 268,
	0, 271, 0, 274, 275, 0, 0, 270, 264, 0,
	0, 0, 1332, 436, 1184, 1300, 0, 0, 1302, 1220,
	1224, 0, 2467, 2467, 0, 2421, 0, 1182, 0, 0,
	1301, 487, 0, 494, 0, 506, 510, 0, 0, 1353,
	0, 0, 1377, 1402, 1332, 0, 1445, 1447, 0, 1455,
	0, 0, 0, 1622, 1628, 0, 1615, 1616, 1758, 1630,
	1649, -2, 0, 0, 1739, 1657, 1654, 1660, 1661, 0,
	0, 0, 329, 0, 1641, 1643, 0, 1155, 1158, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 293, 306,
	1843, 296, 1843, 333, 0, 936, 944, 946, 948, 966,
	1042, 1060, 1092, 1235, 0, 0, 1094, 0, 0, 1761,
	1748, 1749, 1746, 1472, 2055, 2059, 0, 0, 0, 2061,
	-2, 0, 2083, -2, -2, 2317, 2369, 2134, 1739, 2156,
	2158, 2145, 2363, 2003, 0, 2245, 2242, 0, 2229, 0,
	2180, 2181, 0, 0, 2184, 2186, 2187, 2188, 1942, 1935,
	1934, 2342, 0, 0, 0, 0, 2220, 1721, 0, 2234,
	0, 0, 1789, 2234, 2234, 1833, 0, 1835, 1802, 1790,
	0, 1799, 0, 2445, 1828, 1820, 0, 0, 355, 0,
	359, 360, 361, 362, 363, 364, 0, 0, 0, 0,
	0, 403, 0, 673, 674, 0, 0, 1876, 1881, 0,
	1887, 1957, 0, 0, 0, 0, 0, 259, 0, 887,
	888, 182, 183, 1198, 1196, 1484, 1488, 1485, 0, 185,
	0, 0, 1257, 0, 1260, 0, 0, 0, 0, 1267,
	1284, 0, 0, 0, 0, 0, 0, 1286, 0, 1285,
	0, 0, 1316, 0, 1460, 1467, 0, -2, 0, 0,
	0, 192, 218, 0, 0, 0, 0, 221, 1534, 194,
	0, 0, 227, 227, 1195, 0, 0, 1476, 1478, 1491,
	0, 0, 0, 0, 170, 0, 0, 1494, 1498, 1506,
	1501, 1503, 1509, 0, 0, 116, 0, 1612, 0, 156,
	0, 0, 0, 1511, 240, 241, 0, 227, 0, 227,
	233, 227, 1469, 0, 0, 0, 0, 0, 0, 0,
	0, 1514, 1515, 261, 0, 0, 0, 0, 0, 263,
	339, 270, 423, 0, 1245, 0, 1312, 1304, 1305, 1306,
	0, 1216, 1311, 1313, 0, 0, 1221, 0, 0, 0,
	0, 1201, 1183, 0, 1214, 1186, 0, 492, 511, 0,
	514, 0, 517, 1172, 1350, 1394, 1332, 1397, 0, 0,
	1437, 0, 0, 0, 0, 0, 0, 0, 1624, 1628,
	0, 1617, 1618, 1651, 1757, 0, 0, 0, 1638, 1758,
	0, 348, 349, 0, 349, 308, 0, 309, 310, 311,
	318, 319, 320, 321, 295, 298, 306, 730, 732, 0,
	0, 738, 1234, 0, 0, 0, 0, 1747, 2063, -2,
	-2, 2084, 0, 2446, 2448, 1739, 0, 2231, 1741, 0,
	0, -2, 0, 0, 0, 1722, 1705, 0, 1780, 1772,
	1774, 1776, 2775, 2542, 2896, 1706, 1707, 1855, 0, 0,
	1823, 356, 365, 366, 0, 368, 369, 1518, 675, 0,
	0, 1883, 0, 680, 0, 0, 0, 877, 0, 0,
	1486, 187, 0, 0, 1261, 1262, 1264, 0, 1266, 1268,
	1269, 1186, 0, 1273, 0, 2469, 0, 1278, 1281, 1282,
	0, 0, 1295, 1317, 0, 1326, 0, 1462, 1472, 1466,
	0, 1464, 1328, 0, 191, 220, 193, 222, 217, 0,
	1469, 0, 195, 205, 0, 0, 138, 0, 0, 2536,
	173, 171, 169, 114, 120, 1473, 159, 0, 140, 0,
	242, 251, 1468, 253, 237, 227, 0, 0, 1495, 1499,
	1507, 0, 1522, 1523, 1524, 1525, 0, 0, 0, 0,
	272, 0, 273, 276, 277, 0, 0, 1186, 1244, 1185,
	1303, 0, 1314, 1186, 0, 0, 0, 0, 0, 0,
	1188, 0, 1187, 0, 0, 493, 496, 0, 499, 0,
	0, 0, 0, 0, 1401, 0, 1448, 1446, 0, 1454,
	0, 0, 0, 1600, 0, 0, 1619, 1620, 518, 1644,
	0, 0, 1651, 1662, 328, 0, 331, 305, 297, 0,
	734, 0, 736, 0, 1093, 1095, 0, 0, 2157, 2249,
	0, 0, 2182, 2183, -2, 0, 2123, 2233, 2235, 0,
	0, 0, 0, 0, 1791, 1800, 367, 1519, 1877, 687,
	684, 686, 0, 1482, 0, 1489, 229, 1259, 1263, 0,
	1270, 0, 0, 0, 1274, 1336, 0, 0, 1353, 1353,
	1287, 0, 0, 1320, 1321, 1241, 0, 1322, 1323, 1324,
	1461, 1750, 1467, 1186, 0, 0, 219, 224, 0, 0,
	0, 0, 0, 0, 158, 0, 231, 254, 1469, 0,
	0, 1526, 1527, 0, 0, 269, 288, 0, 1395, 1188,
	0, 1315, 1222, 1225, 1226, 1227, 1228, 1229, 1230, 1231,
	1232, 1233, 1223, 1328, 0, 0, 1292, 1199, 0, 1202,
	0, 1184, 0, 497, 498, 515, 0, 516, 0, 0,
	1402, 0, 0, 1455, 0, 0, 1607, 1599, 1628, 1621,
	1622, 1874, 0, 1652, 0, 733, 0, 0, 1103, 1104,
	0, 0, 0, 0, 2244, 1742, 2124, 0, 0, 1775,
	1777, 1778, 1779, 676, 0, 1483, 199, 0, 1330, 1272,
	1341, 0, 0, 0, 0, 0, 1288, 1318, 1319, 1316,
	1240, 0, 1465, 1463, 1297, 1330, 1332, 197, 0, 1328,
	0, 1250, 0, 0, 1253, 0, 0, 174, 2536, 172,
	0, 227, 654, 1519, 227, 0, 291, 0, 282, 280,
	281, 1180, 0, 1308, 1310, 1326, 1328, 1241, 0, 1203,
	1245, 1201, 512, 1396, 1400, 1398, 1438, 1328, 0, 1326,
	0, 1614, 1628, 1608, 1609, 0, 1624, 0, 0, 349,
	735, 737, 2241, 2261, 2250, -2, 2851, 2543, 0, 2261,
	2261, 2236, 2237, 0, 0, 1186, 0, 1275, 1337, 1338,
	0, 1333, 1334, 1335, 2468, 1276, 1277, 1279, 1280, 1874,
	0, 1327, 1336, 223, 1186, 1247, 0, 0, 1248, 0,
	0, 177, 0, 179, 255, 1517, 1520, 0, 278, 0,
	0, 1177, 1179, 1186, 0, 1241, 1326, 1186, 0, 0,
	0, 1186, 1188, 1326, 0, 1241, 0, 1603, 1613, 0,
	1623, 1600, 0, 1647, 0, 330, 2246, 0, 0, 2252,
	2253, 2254, 2255, 2256, 2247, 2248, 688, 1265, 1271, 0,
	1339, 0, 1340, 0, 0, 0, 1296, 1325, 1341, 203,
	1251, 0, 1254, 0, 175, 0, 0, 286, 287, 1307,
	1309, 1186, 1241, 1874, 1189, 0, 1191, 1188, 1200, 1241,
	0, 1186, 0, 1626, 1602, 1606, 2429, 1607, 1645, 0,
	0, 0, 2258, 2259, 0, 0, 0, 1342, 0, 1345,
	1346, 0, 1343, 1316, 0, 0, 227, 0, 1874, 1186,
	1291, 1190, 1180, 1186, 1328, 1874, 1326, 1596, 1628, 1614,
	0, 1874, 2257, 2260, 2251, 1329, 1344, 1347, 1348, 1298,
	0, 0, 1521, 289, 0, 1289, 1874, 1178, 1874, 1326,
	1451, 1241, 0, 1603, 1874, 1648, 1238, 0, 0, 1290,
	1449, 1241, 1186, 1625, 1597, 1646, 1252, 1237, 0, 290,
	1186, 1874, 0, 1874, 1452, 0, 1450, 1238, 1255,
}

var sqlTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 619, 3, 625, 620, 3,
	631, 632, 623, 621, 636, 622, 633, 624, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 639, 3,
	611, 613, 612, 616, 635, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 629, 3, 630, 626, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 637, 618, 638, 614,
}

var sqlTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 243, 244, 245, 246, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257,
}

var sqlTok3 = [...]int{
	57600, 258, 57601, 259, 57602, 260, 57603, 261, 57604, 262,
	57605, 263, 57606, 264, 57607, 265, 57608, 266, 57609, 267,
	57610, 268, 57611, 269, 57612, 270, 57613, 271, 57614, 272,
	57615, 273, 57616, 274, 57617, 275, 57618, 276, 57619, 277,
	57620, 278, 57621, 279, 57622, 280, 57623, 281, 57624, 282,
	57625, 283, 57626, 284, 57627, 285, 57628, 286, 57629, 287,
	57630, 288, 57631, 289, 57632, 290, 57633, 291, 57634, 292,
	57635, 293, 57636, 294, 57637, 295, 57638, 296, 57639, 297,
	57640, 298, 57641, 299, 57642, 300, 57643, 301, 57644, 302,
	57645, 303, 57646, 304, 57647, 305, 57648, 306, 57649, 307,
	57650, 308, 57651, 309, 57652, 310, 57653, 311, 57654, 312,
	57655, 313, 57656, 314, 57657, 315, 57658, 316, 57659, 317,
	57660, 318, 57661, 319, 57662, 320, 57663, 321, 57664, 322,
	57665, 323, 57666, 324, 57667, 325, 57668, 326, 57669, 327,
	57670, 328, 57671, 329, 57672, 330, 57673, 331, 57674, 332,
	57675, 333, 57676, 334, 57677, 335, 57678, 336, 57679, 337,
	57680, 338, 57681, 339, 57682, 340, 57683, 341, 57684, 342,
	57685, 343, 57686, 344, 57687, 345, 57688, 346, 57689, 347,
	57690, 348, 57691, 349, 57692, 350, 57693, 351, 57694, 352,
	57695, 353, 57696, 354, 57697, 355, 57698, 356, 57699, 357,
	57700, 358, 57701, 359, 57702, 360, 57703, 361, 57704, 362,
	57705, 363, 57706, 364, 57707, 365, 57708, 366, 57709, 367,
	57710, 368, 57711, 369, 57712, 370, 57713, 371, 57714, 372,
	57715, 373, 57716, 374, 57717, 375, 57718, 376, 57719, 377,
	57720, 378, 57721, 379, 57722, 380, 57723, 381, 57724, 382,
	57725, 383, 57726, 384, 57727, 385, 57728, 386, 57729, 387,
	57730, 388, 57731, 389, 57732, 390, 57733, 391, 57734, 392,
	57735, 393, 57736, 394, 57737, 395, 57738, 396, 57739, 397,
	57740, 398, 57741, 399, 57742, 400, 57743, 401, 57744, 402,
	57745, 403, 57746, 404, 57747, 405, 57748, 406, 57749, 407,
	57750, 408, 57751, 409, 57752, 410, 57753, 411, 57754, 412,
	57755, 413, 57756, 414, 57757, 415, 57758, 416, 57759, 417,
	57760, 418, 57761, 419, 57762, 420, 57763, 421, 57764, 422,
	57765, 423, 57766, 424, 57767, 425, 57768, 426, 57769, 427,
	57770, 428, 57771, 429, 57772, 430, 57773, 431, 57774, 432,
	57775, 433, 57776, 434, 57777, 435, 57778, 436, 57779, 437,
	57780, 438, 57781, 439, 57782, 440, 57783, 441, 57784, 442,
	57785, 443, 57786, 444, 57787, 445, 57788, 446, 57789, 447,
	57790, 448, 57791, 449, 57792, 450, 57793, 451, 57794, 452,
	57795, 453, 57796, 454, 57797, 455, 57798, 456, 57799, 457,
	57800, 458, 57801, 459, 57802, 460, 57803, 461, 57804, 462,
	57805, 463, 57806, 464, 57807, 465, 57808, 466, 57809, 467,
	57810, 468, 57811, 469, 57812, 470, 57813, 471, 57814, 472,
	57815, 473, 57816, 474, 57817, 475, 57818, 476, 57819, 477,
	57820, 478, 57821, 479, 57822, 480, 57823, 481, 57824, 482,
	57825, 483, 57826, 484, 57827, 485, 57828, 486, 57829, 487,
	57830, 488, 57831, 489, 57832, 490, 57833, 491, 57834, 492,
	57835, 493, 57836, 494, 57837, 495, 57838, 496, 57839, 497,
	57840, 498, 57841, 499, 57842, 500, 57843, 501, 57844, 502,
	57845, 503, 57846, 504, 57847, 505, 57848, 506, 57849, 507,
	57850, 508, 57851, 509, 57852, 510, 57853, 511, 57854, 512,
	57855, 513, 57856, 514, 57857, 515, 57858, 516, 57859, 517,
	57860, 518, 57861, 519, 57862, 520, 57863, 521, 57864, 522,
	57865, 523, 57866, 524, 57867, 525, 57868, 526, 57869, 527,
	57870, 528, 57871, 529, 57872, 530, 57873, 531, 57874, 532,
	57875, 533, 57876, 534, 57877, 535, 57878, 536, 57879, 537,
	57880, 538, 57881, 539, 57882, 540, 57883, 541, 57884, 542,
	57885, 543, 57886, 544, 57887, 545, 57888, 546, 57889, 547,
	57890, 548, 57891, 549, 57892, 550, 57893, 551, 57894, 552,
	57895, 553, 57896, 554, 57897, 555, 57898, 556, 57899, 557,
	57900, 558, 57901, 559, 57902, 560, 57903, 561, 57904, 562,
	57905, 563, 57906, 564, 57907, 565, 57908, 566, 57909, 567,
	57910, 568, 57911, 569, 57912, 570, 57913, 571, 57914, 572,
	57915, 573, 57916, 574, 57917, 575, 57918, 576, 57919, 577,
	57920, 578, 57921, 579, 57922, 580, 57923, 581, 57924, 582,
	57925, 583, 57926, 584, 57927, 585, 57928, 586, 57929, 587,
	57930, 588, 57931, 589, 57932, 590, 57933, 591, 57934, 592,
	57935, 593, 57936, 594, 57937, 595, 57938, 596, 57939, 597,
	57940, 598, 57941, 599, 57942, 600, 57943, 601, 57944, 602,
	57945, 603, 57946, 604, 57947, 605, 57948, 606, 57949, 607,
	57950, 608, 57951, 609, 57952, 610, 57953, 615, 57954, 617,
	57955, 627, 57956, 628, 57957, 634, 0,
}

var sqlErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	sqlDebug        = 0
	sqlErrorVerbose = false
)

type sqlLexer interface {
	Lex(lval *sqlSymType) int
	Error(s string)
}

type sqlParser interface {
	Parse(sqlLexer) int
	Lookahead() int
}

type sqlParserImpl struct {
	lval  sqlSymType
	stack [sqlInitialStackSize]sqlSymType
	char  int
}

func (p *sqlParserImpl) Lookahead() int {
	return p.char
}

func sqlNewParser() sqlParser {
	return &sqlParserImpl{}
}

const sqlFlag = -1000

func sqlTokname(c int) string {
	if c >= 1 && c-1 < len(sqlToknames) {
		if sqlToknames[c-1] != "" {
			return sqlToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func sqlStatname(s int) string {
	if s >= 0 && s < len(sqlStatenames) {
		if sqlStatenames[s] != "" {
			return sqlStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func sqlErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !sqlErrorVerbose {
		return "syntax error"
	}

	for _, e := range sqlErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + sqlTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := sqlPact[state]
	for tok := TOKSTART; tok-1 < len(sqlToknames); tok++ {
		if n := base + tok; n >= 0 && n < sqlLast && sqlChk[sqlAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if sqlDef[state] == -2 {
		i := 0
		for sqlExca[i] != -1 || sqlExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; sqlExca[i] >= 0; i += 2 {
			tok := sqlExca[i]
			if tok < TOKSTART || sqlExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if sqlExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += sqlTokname(tok)
	}
	return res
}

func sqllex1(lex sqlLexer, lval *sqlSymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = sqlTok1[0]
		goto out
	}
	if char < len(sqlTok1) {
		token = sqlTok1[char]
		goto out
	}
	if char >= sqlPrivate {
		if char < sqlPrivate+len(sqlTok2) {
			token = sqlTok2[char-sqlPrivate]
			goto out
		}
	}
	for i := 0; i < len(sqlTok3); i += 2 {
		token = sqlTok3[i+0]
		if token == char {
			token = sqlTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = sqlTok2[1] /* unknown char */
	}
	if sqlDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", sqlTokname(token), uint(char))
	}
	return char, token
}

func sqlParse(sqllex sqlLexer) int {
	return sqlNewParser().Parse(sqllex)
}

func (sqlrcvr *sqlParserImpl) Parse(sqllex sqlLexer) int {
	var sqln int
	var sqlVAL sqlSymType
	var sqlDollar []sqlSymType
	_ = sqlDollar // silence set and not used
	sqlS := sqlrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	sqlstate := 0
	sqlrcvr.char = -1
	sqltoken := -1 // sqlrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		sqlstate = -1
		sqlrcvr.char = -1
		sqltoken = -1
	}()
	sqlp := -1
	goto sqlstack

ret0:
	return 0

ret1:
	return 1

sqlstack:
	/* put a state and value onto the stack */
	if sqlDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", sqlTokname(sqltoken), sqlStatname(sqlstate))
	}

	sqlp++
	if sqlp >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlS[sqlp] = sqlVAL
	sqlS[sqlp].yys = sqlstate

sqlnewstate:
	sqln = sqlPact[sqlstate]
	if sqln <= sqlFlag {
		goto sqldefault /* simple state */
	}
	if sqlrcvr.char < 0 {
		sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
	}
	sqln += sqltoken
	if sqln < 0 || sqln >= sqlLast {
		goto sqldefault
	}
	sqln = sqlAct[sqln]
	if sqlChk[sqln] == sqltoken { /* valid shift */
		sqlrcvr.char = -1
		sqltoken = -1
		sqlVAL = sqlrcvr.lval
		sqlstate = sqln
		if Errflag > 0 {
			Errflag--
		}
		goto sqlstack
	}

sqldefault:
	/* default state action */
	sqln = sqlDef[sqlstate]
	if sqln == -2 {
		if sqlrcvr.char < 0 {
			sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if sqlExca[xi+0] == -1 && sqlExca[xi+1] == sqlstate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			sqln = sqlExca[xi+0]
			if sqln < 0 || sqln == sqltoken {
				break
			}
		}
		sqln = sqlExca[xi+1]
		if sqln < 0 {
			goto ret0
		}
	}
	if sqln == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			sqllex.Error(sqlErrorMessage(sqlstate, sqltoken))
			Nerrs++
			if sqlDebug >= 1 {
				__yyfmt__.Printf("%s", sqlStatname(sqlstate))
				__yyfmt__.Printf(" saw %s\n", sqlTokname(sqltoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for sqlp >= 0 {
				sqln = sqlPact[sqlS[sqlp].yys] + sqlErrCode
				if sqln >= 0 && sqln < sqlLast {
					sqlstate = sqlAct[sqln] /* simulate a shift of "error" */
					if sqlChk[sqlstate] == sqlErrCode {
						goto sqlstack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if sqlDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", sqlS[sqlp].yys)
				}
				sqlp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if sqlDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", sqlTokname(sqltoken))
			}
			if sqltoken == sqlEofCode {
				goto ret1
			}
			sqlrcvr.char = -1
			sqltoken = -1
			goto sqlnewstate /* try again in the same state */
		}
	}

	/* reduction by production sqln */
	if sqlDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", sqln, sqlStatname(sqlstate))
	}

	sqlnt := sqln
	sqlpt := sqlp
	_ = sqlpt // guard against "declared and not used"

	sqlp -= sqlR2[sqln]
	// sqlp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if sqlp+1 >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlVAL = sqlS[sqlp+1]

	/* consult goto table to find next state */
	sqln = sqlR1[sqln]
	sqlg := sqlPgo[sqln]
	sqlj := sqlg + sqlS[sqlp].yys + 1

	if sqlj >= sqlLast {
		sqlstate = sqlAct[sqlg]
	} else {
		sqlstate = sqlAct[sqlj]
		if sqlChk[sqlstate] != -sqln {
			sqlstate = sqlAct[sqlg]
		}
	}
	// dummy call; replaced with literal code
	switch sqlnt {

	case 1:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1561
		{
			sqllex.(*lexer).SetStmt(sqlDollar[1].union.stmt())
		}
	case 2:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1566
		{
			return helpWith(sqllex, "")
		}
	case 5:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1568
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 9:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1571
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 11:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1572
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 13:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1573
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 15:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1574
		{
			return helpWith(sqllex, "GRANT")
		}
	case 17:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1575
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 19:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1576
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 21:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1577
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 23:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1578
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 25:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1579
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 27:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1580
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 29:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1581
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 33:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1584
		{
			return helpWith(sqllex, "CLOSE")
		}
	case 35:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1585
		{
			return helpWith(sqllex, "DECLARE")
		}
	case 37:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1586
		{
			return helpWith(sqllex, "FETCH")
		}
	case 39:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1587
		{
			return helpWith(sqllex, "MOVE")
		}
	case 41:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1590
		{
			sqlVAL.union.val = tree.Statement(nil)
		}
	case 44:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1599
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 46:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1600
		{
			return helpWith(sqllex, "ALTER TENANT")
		}
	case 48:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1602
		{
			return helpWith(sqllex, "ALTER")
		}
	case 50:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1605
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 52:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1606
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 54:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1607
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 56:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1608
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 58:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1609
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 60:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1610
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 62:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1611
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 64:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1612
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 66:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1613
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 68:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1614
		{
			return helpWith(sqllex, "ALTER DEFAULT PRIVILEGES")
		}
	case 70:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1615
		{
			return helpWith(sqllex, "ALTER CHANGEFEED")
		}
	case 72:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1616
		{
			return helpWith(sqllex, "ALTER BACKUP")
		}
	case 83:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1677
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 85:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1703
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 89:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1717
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 94:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1736
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 95:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1740
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[3].union.unresolvedObjectName(), Options: sqlDollar[4].union.seqOpts(), IfExists: false}
		}
	case 96:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1744
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[5].union.unresolvedObjectName(), Options: sqlDollar[6].union.seqOpts(), IfExists: true}
		}
	case 109:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1778
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 110:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1782
		{
			sqlVAL.union.val = &tree.AlterDatabaseOwner{Name: tree.Name(sqlDollar[3].str), Owner: sqlDollar[6].union.roleSpec()}
		}
	case 111:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1789
		{

			sqlVAL.union.val = &tree.AlterRoleSet{
				AllRoles:     true,
				DatabaseName: tree.Name(sqlDollar[3].str),
				IsRole:       true,
				SetOrReset:   sqlDollar[4].union.setVar(),
			}
		}
	case 112:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1801
		{

			sqlVAL.union.val = &tree.AlterDatabasePlacement{
				Name:      tree.Name(sqlDollar[3].str),
				Placement: sqlDollar[4].union.dataPlacement(),
			}
		}
	case 113:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1811
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 114:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1818
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:        tree.Name(sqlDollar[3].str),
				Region:      tree.Name(sqlDollar[9].str),
				IfNotExists: true,
			}
		}
	case 115:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1828
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 116:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1835
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:     tree.Name(sqlDollar[3].str),
				Region:   tree.Name(sqlDollar[8].str),
				IfExists: true,
			}
		}
	case 117:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1845
		{
			sqlVAL.union.val = &tree.AlterDatabaseSurvivalGoal{
				Name:         tree.Name(sqlDollar[3].str),
				SurvivalGoal: sqlDollar[4].union.survivalGoal(),
			}
		}
	case 118:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1854
		{
			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[4].str),
			}
		}
	case 119:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1861
		{
			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[5].str),
			}
		}
	case 120:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1870
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddSuperRegion{
				DatabaseName:    tree.Name(sqlDollar[3].str),
				SuperRegionName: tree.Name(sqlDollar[7].str),
				Regions:         sqlDollar[9].union.nameList(),
			}
		}
	case 121:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1880
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropSuperRegion{
				DatabaseName:    tree.Name(sqlDollar[3].str),
				SuperRegionName: tree.Name(sqlDollar[7].str),
			}
		}
	case 124:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1910
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 132:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1942
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 133:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1946
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[3].union.unresolvedObjectName(), IfExists: false, Cmds: sqlDollar[4].union.alterTableCmds()}
		}
	case 134:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1950
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[5].union.unresolvedObjectName(), IfExists: true, Cmds: sqlDollar[6].union.alterTableCmds()}
		}
	case 135:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1956
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[3].union.tableIndexName(), IfExists: false, Cmds: sqlDollar[4].union.alterIndexCmds()}
		}
	case 136:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1960
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[5].union.tableIndexName(), IfExists: true, Cmds: sqlDollar[6].union.alterIndexCmds()}
		}
	case 137:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1966
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   tree.Expr(nil),
			}
		}
	case 138:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1975
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   sqlDollar[9].union.expr(),
			}
		}
	case 139:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1986
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: tree.Expr(nil)}
		}
	case 140:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1990
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: sqlDollar[9].union.expr()}
		}
	case 141:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1996
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 142:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2004
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				All:          true,
			}
		}
	case 143:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2014
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 144:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2018
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), All: true}
		}
	case 149:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2030
		{
			sqlVAL.union.val = tree.RelocateLease
		}
	case 150:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2036
		{
			sqlVAL.union.val = tree.RelocateVoters
		}
	case 151:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2040
		{

			sqlVAL.union.val = tree.RelocateVoters
		}
	case 152:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2045
		{
			sqlVAL.union.val = tree.RelocateNonVoters
		}
	case 153:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2051
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:    tree.TableIndexName{Table: name},
				Rows:            sqlDollar[6].union.slct(),
				SubjectReplicas: sqlDollar[5].union.relocateSubject(),
			}
		}
	case 154:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2063
		{

			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:    sqlDollar[3].union.tableIndexName(),
				Rows:            sqlDollar[6].union.slct(),
				SubjectReplicas: sqlDollar[5].union.relocateSubject(),
			}
		}
	case 155:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2084
		{
			var zoneName string
			switch e := sqlDollar[3].union.expr().(type) {
			case *tree.UnresolvedName:
				if e.NumParts != 1 {
					return setErr(sqllex, errors.New("only simple names are supported in ALTER RANGE ... CONFIGURE ZONE"))
				}
				zoneName = e.Parts[0]
			case tree.DefaultVal:
				zoneName = "default"
			default:
				return setErr(sqllex, errors.New("only simple names are supported in ALTER RANGE ... CONFIGURE ZONE"))
			}
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(zoneName)}
			sqlVAL.union.val = s
		}
	case 156:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2104
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows:            sqlDollar[8].union.slct(),
				FromStoreID:     tree.DNull,
				ToStoreID:       sqlDollar[6].union.expr(),
				SubjectReplicas: tree.RelocateLease,
			}
		}
	case 157:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2113
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				FromStoreID:     tree.DNull,
				ToStoreID:       sqlDollar[7].union.expr(),
				SubjectReplicas: tree.RelocateLease,
			}
		}
	case 158:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2124
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows:            sqlDollar[10].union.slct(),
				FromStoreID:     sqlDollar[6].union.expr(),
				ToStoreID:       sqlDollar[8].union.expr(),
				SubjectReplicas: sqlDollar[4].union.relocateSubject(),
			}
		}
	case 159:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2133
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				FromStoreID:     sqlDollar[7].union.expr(),
				ToStoreID:       sqlDollar[9].union.expr(),
				SubjectReplicas: sqlDollar[5].union.relocateSubject(),
			}
		}
	case 160:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2146
		{

			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: sqlDollar[4].union.expr()}
		}
	case 161:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2151
		{
			sqlVAL.union.val = &tree.SetZoneConfig{Options: sqlDollar[4].union.kvOptions()}
		}
	case 162:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2155
		{

			sqlVAL.union.val = &tree.SetZoneConfig{SetDefault: true}
		}
	case 163:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2160
		{
			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: tree.DNull}
		}
	case 164:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2166
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{Database: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 165:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2174
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
			}
			sqlVAL.union.val = s
		}
	case 166:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2185
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[3].union.tableIndexName(),
			}
			sqlVAL.union.val = s
		}
	case 167:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2195
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 168:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2205
		{
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 169:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2214
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[9].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			s.AllIndexes = true
			sqlVAL.union.val = s
		}
	case 170:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2225
		{
			err := errors.New("index name should not be specified in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION ... OF INDEX")
			return setErr(sqllex, err)
		}
	case 171:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2231
		{
			err := errors.New("index wildcard unsupported in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION <partition> OF INDEX <tablename>@*")
			return setErr(sqllex, err)
		}
	case 172:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2239
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), "."))}}
		}
	case 173:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2243
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), ".")), Value: sqlDollar[3].union.expr()}}
		}
	case 174:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2247
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), ".")), Value: sqlDollar[5].union.expr()})
		}
	case 175:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2251
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), "."))})
		}
	case 176:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2257
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 177:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2262
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{
				TableOrIndex: tree.TableIndexName{Table: name},
				From:         sqlDollar[7].union.exprs(),
				To:           sqlDollar[11].union.exprs(),
			}
		}
	case 178:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2273
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName()}
		}
	case 179:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2277
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName(), From: sqlDollar[7].union.exprs(), To: sqlDollar[11].union.exprs()}
		}
	case 180:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2283
		{
			sqlVAL.union.val = tree.AlterTableCmds{sqlDollar[1].union.alterTableCmd()}
		}
	case 181:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2287
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterTableCmds(), sqlDollar[3].union.alterTableCmd())
		}
	case 182:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2294
		{
			sqlVAL.union.val = &tree.AlterTableRenameColumn{Column: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 183:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2299
		{
			sqlVAL.union.val = &tree.AlterTableRenameConstraint{Constraint: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 184:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2304
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[2].union.colDef()}
		}
	case 185:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2309
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[5].union.colDef()}
		}
	case 186:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2314
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[3].union.colDef()}
		}
	case 187:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2319
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[6].union.colDef()}
		}
	case 188:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2324
		{
			sqlVAL.union.val = &tree.AlterTableSetDefault{Column: tree.Name(sqlDollar[3].str), Default: sqlDollar[4].union.expr()}
		}
	case 189:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2329
		{
			sqlVAL.union.val = &tree.AlterTableSetOnUpdate{Column: tree.Name(sqlDollar[3].str), Expr: sqlDollar[4].union.expr()}
		}
	case 190:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2334
		{
			sqlVAL.union.val = &tree.AlterTableSetVisible{Column: tree.Name(sqlDollar[3].str), Visible: sqlDollar[4].union.bool()}
		}
	case 191:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2339
		{
			sqlVAL.union.val = &tree.AlterTableDropNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 192:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2344
		{
			sqlVAL.union.val = &tree.AlterTableDropStored{Column: tree.Name(sqlDollar[3].str)}
		}
	case 193:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2349
		{
			sqlVAL.union.val = &tree.AlterTableSetNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 194:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2353
		{
			return unimplemented(sqllex, "alter table alter column add")
		}
	case 195:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2358
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     true,
				Column:       tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 196:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2367
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     false,
				Column:       tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 197:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2379
		{
			sqlVAL.union.val = &tree.AlterTableAlterColumnType{
				Column:    tree.Name(sqlDollar[3].str),
				ToType:    sqlDollar[6].union.typeReference(),
				Collation: sqlDollar[7].str,
				Using:     sqlDollar[8].union.expr(),
			}
		}
	case 198:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2389
		{
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      sqlDollar[2].union.constraintDef(),
				ValidationBehavior: sqlDollar[3].union.validationBehavior(),
			}
		}
	case 199:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2397
		{
			def := sqlDollar[7].union.constraintDef()
			def.SetName(tree.Name(sqlDollar[6].str))
			def.SetIfNotExists()
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      def,
				ValidationBehavior: sqlDollar[8].union.validationBehavior(),
			}
		}
	case 200:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2407
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "alter constraint")
		}
	case 201:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2410
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table inherits")
		}
	case 202:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2416
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table no inherits")
		}
	case 203:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2423
		{
			sqlVAL.union.val = &tree.AlterTableAlterPrimaryKey{
				Columns:       sqlDollar[7].union.idxElems(),
				Sharded:       sqlDollar[9].union.shardedIndexDef(),
				StorageParams: sqlDollar[10].union.storageParams(),
			}
		}
	case 204:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2431
		{
			sqlVAL.union.val = &tree.AlterTableValidateConstraint{
				Constraint: tree.Name(sqlDollar[3].str),
			}
		}
	case 205:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2438
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     true,
				Constraint:   tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 206:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2447
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     false,
				Constraint:   tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 207:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2456
		{
			sqlVAL.union.val = &tree.AlterTableSetAudit{Mode: sqlDollar[3].union.auditMode()}
		}
	case 208:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2461
		{
			sqlVAL.union.val = &tree.AlterTablePartitionByTable{
				PartitionByTable: sqlDollar[1].union.partitionByTable(),
			}
		}
	case 209:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2468
		{

			sqlVAL.union.val = &tree.AlterTableInjectStats{
				Stats: sqlDollar[3].union.expr(),
			}
		}
	case 210:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2475
		{
			sqlVAL.union.val = &tree.AlterTableSetStorageParams{
				StorageParams: sqlDollar[3].union.storageParams(),
			}
		}
	case 211:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2481
		{
			sqlVAL.union.val = &tree.AlterTableResetStorageParams{
				Params: sqlDollar[3].union.storageParamKeys(),
			}
		}
	case 212:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2488
		{
			sqlVAL.union.val = tree.AuditModeReadWrite
		}
	case 213:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2489
		{
			sqlVAL.union.val = tree.AuditModeDisable
		}
	case 214:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2493
		{
			sqlVAL.union.val = tree.AlterIndexCmds{sqlDollar[1].union.alterIndexCmd()}
		}
	case 215:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2497
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterIndexCmds(), sqlDollar[3].union.alterIndexCmd())
		}
	case 216:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2503
		{
			sqlVAL.union.val = &tree.AlterIndexPartitionBy{
				PartitionByIndex: sqlDollar[1].union.partitionByIndex(),
			}
		}
	case 217:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2511
		{
			sqlVAL.union.val = sqlDollar[3].union.expr()
		}
	case 218:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2515
		{
			sqlVAL.union.val = nil
		}
	case 219:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2521
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 220:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2525
		{
			sqlVAL.union.val = nil
		}
	case 221:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2531
		{
			sqlVAL.union.val = true
		}
	case 222:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2535
		{
			sqlVAL.union.val = false
		}
	case 223:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2541
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 224:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2545
		{
			sqlVAL.union.val = nil
		}
	case 225:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2552
		{
			sqlVAL.union.val = tree.DropCascade
		}
	case 226:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2556
		{
			sqlVAL.union.val = tree.DropRestrict
		}
	case 227:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2560
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 228:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2566
		{
			sqlVAL.union.val = tree.ValidationSkip
		}
	case 229:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2570
		{
			sqlVAL.union.val = tree.ValidationDefault
		}
	case 230:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2595
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[6].str),
					IfNotExists: false,
					Placement:   sqlDollar[7].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 231:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2606
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[9].str),
					IfNotExists: true,
					Placement:   sqlDollar[10].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 232:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2617
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeDropValue{
					Val: tree.EnumValue(sqlDollar[6].str),
				},
			}
		}
	case 233:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2626
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRenameValue{
					OldVal: tree.EnumValue(sqlDollar[6].str),
					NewVal: tree.EnumValue(sqlDollar[8].str),
				},
			}
		}
	case 234:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2636
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 235:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2645
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeSetSchema{
					Schema: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 236:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2654
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeOwner{
					Owner: sqlDollar[6].union.roleSpec(),
				},
			}
		}
	case 237:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2663
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 238:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2667
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 239:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2670
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 240:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2674
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      true,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 241:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2681
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      false,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 242:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2688
		{
			sqlVAL.union.val = (*tree.AlterTypeAddValuePlacement)(nil)
		}
	case 243:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2694
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.RoleName,
				Name:         sqlDollar[1].str,
			}
		}
	case 244:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2701
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.RoleName,
				Name:         sqlDollar[1].str,
			}
		}
	case 245:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2708
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.CurrentUser,
			}
		}
	case 246:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2714
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.SessionUser,
			}
		}
	case 247:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2722
		{
			sqlVAL.union.val = tree.RoleSpecList{sqlDollar[1].union.roleSpec()}
		}
	case 248:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2726
		{
			sqlVAL.union.val = append(sqlDollar[1].union.roleSpecList(), sqlDollar[3].union.roleSpec())
		}
	case 256:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2747
		{
			sqlVAL.union.val = &tree.RefreshMaterializedView{
				Name:              sqlDollar[5].union.unresolvedObjectName(),
				Concurrently:      sqlDollar[4].union.bool(),
				RefreshDataOption: sqlDollar[6].union.refreshDataOption(),
			}
		}
	case 257:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2754
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 258:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2758
		{
			sqlVAL.union.val = tree.RefreshDataWithData
		}
	case 259:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2762
		{
			sqlVAL.union.val = tree.RefreshDataClear
		}
	case 260:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2766
		{
			sqlVAL.union.val = tree.RefreshDataDefault
		}
	case 261:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2809
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: false,
				Subdir:         sqlDollar[4].union.expr(),
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 262:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2821
		{
			sqlVAL.union.val = &tree.Backup{
				Targets: sqlDollar[2].union.targetListPtr(),
				To:      sqlDollar[4].union.stringOrPlaceholderOptList(),
				Nested:  true,
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *sqlDollar[6].union.backupOptions(),
			}
		}
	case 263:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2831
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: true,
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 264:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2842
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:         sqlDollar[2].union.targetListPtr(),
				To:              sqlDollar[4].union.stringOrPlaceholderOptList(),
				IncrementalFrom: sqlDollar[6].union.exprs(),
				AsOf:            sqlDollar[5].union.asOfClause(),
				Options:         *sqlDollar[7].union.backupOptions(),
			}
		}
	case 265:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2851
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 266:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2855
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 267:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2859
		{
			t := sqlDollar[1].union.targetList()
			sqlVAL.union.val = &t
		}
	case 268:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2867
		{
			sqlVAL.union.val = sqlDollar[2].union.backupOptions()
		}
	case 269:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2871
		{
			sqlVAL.union.val = sqlDollar[4].union.backupOptions()
		}
	case 270:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2875
		{
			sqlVAL.union.val = &tree.BackupOptions{}
		}
	case 271:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2882
		{
			sqlVAL.union.val = sqlDollar[1].union.backupOptions()
		}
	case 272:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2886
		{
			if err := sqlDollar[1].union.backupOptions().CombineWith(sqlDollar[3].union.backupOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 273:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2895
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 274:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2899
		{
			sqlVAL.union.val = &tree.BackupOptions{CaptureRevisionHistory: true}
		}
	case 275:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2903
		{
			sqlVAL.union.val = &tree.BackupOptions{Detached: true}
		}
	case 276:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2907
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 277:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2911
		{
			sqlVAL.union.val = &tree.BackupOptions{IncrementalStorage: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 278:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2993
		{
			sqlVAL.union.val = &tree.ScheduledBackup{
				ScheduleLabelSpec: *(sqlDollar[3].union.scheduleLabelSpec()),
				Recurrence:        sqlDollar[10].union.expr(),
				FullBackup:        sqlDollar[11].union.fullBackupClause(),
				To:                sqlDollar[8].union.stringOrPlaceholderOptList(),
				Targets:           sqlDollar[6].union.targetListPtr(),
				BackupOptions:     *(sqlDollar[9].union.backupOptions()),
				ScheduleOptions:   sqlDollar[12].union.kvOptions(),
			}
		}
	case 279:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3004
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 280:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3009
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 281:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3013
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 282:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3023
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 283:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3029
		{
			sqlVAL.union.val = &tree.ScheduleLabelSpec{Label: sqlDollar[1].union.expr(), IfNotExists: false}
		}
	case 284:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3033
		{
			sqlVAL.union.val = &tree.ScheduleLabelSpec{Label: sqlDollar[4].union.expr(), IfNotExists: true}
		}
	case 285:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3037
		{
			sqlVAL.union.val = &tree.ScheduleLabelSpec{IfNotExists: false}
		}
	case 286:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3046
		{
			sqlVAL.union.val = &tree.FullBackupClause{Recurrence: sqlDollar[3].union.expr()}
		}
	case 287:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3050
		{
			sqlVAL.union.val = &tree.FullBackupClause{AlwaysFull: true}
		}
	case 288:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3054
		{
			sqlVAL.union.val = (*tree.FullBackupClause)(nil)
		}
	case 289:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3060
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 290:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3064
		{
			sqlVAL.union.val = sqlDollar[5].union.kvOptions()
		}
	case 291:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3068
		{
			sqlVAL.union.val = nil
		}
	case 292:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3106
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				From:               sqlDollar[3].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[4].union.asOfClause(),
				Options:            *(sqlDollar[5].union.restoreOptions()),
			}
		}
	case 293:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3115
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				Subdir:             sqlDollar[3].union.expr(),
				From:               sqlDollar[5].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[6].union.asOfClause(),
				Options:            *(sqlDollar[7].union.restoreOptions()),
			}
		}
	case 294:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3125
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[4].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *(sqlDollar[6].union.restoreOptions()),
			}
		}
	case 295:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3134
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				Subdir:  sqlDollar[4].union.expr(),
				From:    sqlDollar[6].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[7].union.asOfClause(),
				Options: *(sqlDollar[8].union.restoreOptions()),
			}
		}
	case 296:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3144
		{
			sqlVAL.union.val = &tree.Restore{
				SystemUsers: true,
				From:        sqlDollar[5].union.listOfStringOrPlaceholderOptList(),
				AsOf:        sqlDollar[6].union.asOfClause(),
				Options:     *(sqlDollar[7].union.restoreOptions()),
			}
		}
	case 297:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3153
		{
			sqlVAL.union.val = &tree.Restore{
				SystemUsers: true,
				Subdir:      sqlDollar[5].union.expr(),
				From:        sqlDollar[7].union.listOfStringOrPlaceholderOptList(),
				AsOf:        sqlDollar[8].union.asOfClause(),
				Options:     *(sqlDollar[9].union.restoreOptions()),
			}
		}
	case 298:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3163
		{
			sqlVAL.union.val = &tree.StreamIngestion{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[7].union.stringOrPlaceholderOptList(),
				AsOf:    sqlDollar[8].union.asOfClause(),
			}
		}
	case 299:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3170
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 300:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3174
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList{sqlDollar[1].union.expr()}
		}
	case 301:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3178
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList(sqlDollar[2].union.exprs())
		}
	case 302:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3184
		{
			sqlVAL.union.val = []tree.StringOrPlaceholderOptList{sqlDollar[1].union.stringOrPlaceholderOptList()}
		}
	case 303:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3188
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listOfStringOrPlaceholderOptList(), sqlDollar[3].union.stringOrPlaceholderOptList())
		}
	case 304:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3195
		{
			sqlVAL.union.val = sqlDollar[2].union.restoreOptions()
		}
	case 305:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3199
		{
			sqlVAL.union.val = sqlDollar[4].union.restoreOptions()
		}
	case 306:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3203
		{
			sqlVAL.union.val = &tree.RestoreOptions{}
		}
	case 307:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3210
		{
			sqlVAL.union.val = sqlDollar[1].union.restoreOptions()
		}
	case 308:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3214
		{
			if err := sqlDollar[1].union.restoreOptions().CombineWith(sqlDollar[3].union.restoreOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 309:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3223
		{
			sqlVAL.union.val = &tree.RestoreOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 310:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3227
		{
			sqlVAL.union.val = &tree.RestoreOptions{DecryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 311:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3231
		{
			sqlVAL.union.val = &tree.RestoreOptions{IntoDB: sqlDollar[3].union.expr()}
		}
	case 312:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3235
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingFKs: true}
		}
	case 313:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3239
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequences: true}
		}
	case 314:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3243
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequenceOwners: true}
		}
	case 315:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3247
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingViews: true}
		}
	case 316:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3251
		{
			sqlVAL.union.val = &tree.RestoreOptions{Detached: true}
		}
	case 317:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3255
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipLocalitiesCheck: true}
		}
	case 318:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3259
		{
			sqlVAL.union.val = &tree.RestoreOptions{DebugPauseOn: sqlDollar[3].union.expr()}
		}
	case 319:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3263
		{
			sqlVAL.union.val = &tree.RestoreOptions{NewDBName: sqlDollar[3].union.expr()}
		}
	case 320:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3267
		{
			sqlVAL.union.val = &tree.RestoreOptions{IncrementalStorage: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 321:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3271
		{
			sqlVAL.union.val = &tree.RestoreOptions{AsTenant: sqlDollar[3].union.expr()}
		}
	case 322:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3277
		{
			sqlVAL.str = strings.ToUpper(sqlDollar[1].str)
		}
	case 323:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3283
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "alter function")
		}
	case 324:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3287
		{
			return unimplemented(sqllex, "alter domain")
		}
	case 325:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3291
		{
			return unimplementedWithIssueDetail(sqllex, 74775, "alter aggregate")
		}
	case 326:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3318
		{

			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[4].union.expr()}, Options: sqlDollar[6].union.kvOptions()}
		}
	case 327:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3323
		{
			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[3].union.expr()}, Options: sqlDollar[4].union.kvOptions()}
		}
	case 328:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3327
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[7].union.expr()}, Options: sqlDollar[9].union.kvOptions()}
		}
	case 329:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3333
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[6].union.expr()}, Options: sqlDollar[7].union.kvOptions()}
		}
	case 330:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:3338
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: sqlDollar[5].union.nameList(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 331:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3343
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: nil, FileFormat: sqlDollar[4].str, Files: sqlDollar[7].union.exprs(), Options: sqlDollar[9].union.kvOptions()}
		}
	case 332:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3347
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 333:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3364
		{
			sqlVAL.union.val = &tree.Export{Query: sqlDollar[7].union.slct(), FileFormat: sqlDollar[3].str, File: sqlDollar[4].union.expr(), Options: sqlDollar[5].union.kvOptions()}
		}
	case 334:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3367
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 335:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3371
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 336:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3375
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 337:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3383
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 338:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3387
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 339:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3393
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 340:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3397
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 341:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3403
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 342:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3407
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 343:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3411
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 344:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3415
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 345:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3421
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 346:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3425
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[3].union.kvOption())
		}
	case 347:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3431
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 348:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3435
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 349:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3439
		{
			sqlVAL.union.val = nil
		}
	case 350:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3451
		{

			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			if sqlDollar[7].union.expr() != nil {
				return unimplementedWithIssue(sqllex, 54580)
			}
			sqlVAL.union.val = &tree.CopyFrom{
				Table:   name,
				Columns: sqlDollar[3].union.nameList(),
				Stdin:   true,
				Options: *sqlDollar[6].union.copyOptions(),
			}
		}
	case 351:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3465
		{
			return unimplemented(sqllex, "copy from unsupported format")
		}
	case 352:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3471
		{
			sqlVAL.union.val = sqlDollar[2].union.copyOptions()
		}
	case 353:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3475
		{
			sqlVAL.union.val = &tree.CopyOptions{}
		}
	case 354:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3481
		{
			sqlVAL.union.val = sqlDollar[1].union.copyOptions()
		}
	case 355:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3485
		{
			if err := sqlDollar[1].union.copyOptions().CombineWith(sqlDollar[2].union.copyOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 356:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3493
		{
			sqlVAL.union.val = &tree.CopyOptions{Destination: sqlDollar[3].union.expr()}
		}
	case 357:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3497
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatBinary}
		}
	case 358:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3501
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatCSV}
		}
	case 359:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3505
		{
			sqlVAL.union.val = &tree.CopyOptions{Delimiter: sqlDollar[2].union.expr()}
		}
	case 360:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3509
		{
			sqlVAL.union.val = &tree.CopyOptions{Null: sqlDollar[2].union.expr()}
		}
	case 361:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3513
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "oids")
		}
	case 362:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3517
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "freeze")
		}
	case 363:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3521
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "header")
		}
	case 364:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3525
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "quote")
		}
	case 365:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3529
		{
			sqlVAL.union.val = &tree.CopyOptions{Escape: tree.NewStrVal(sqlDollar[2].str)}
		}
	case 366:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3533
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "force quote")
		}
	case 367:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3537
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "force not null")
		}
	case 368:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3541
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "force null")
		}
	case 369:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3545
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "encoding")
		}
	case 371:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3553
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 373:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3554
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 375:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3555
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 377:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3556
		{
			return helpWith(sqllex, "CANCEL ALL JOBS")
		}
	case 378:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3557
		{
			return helpWith(sqllex, "CANCEL")
		}
	case 379:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3567
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.CancelJob,
			}
		}
	case 380:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3575
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 381:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3577
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 382:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3581
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 383:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3584
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 384:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3594
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 385:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3603
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 386:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3611
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 387:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3613
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 388:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3617
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 389:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3620
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 390:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3630
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 391:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3639
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 392:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3647
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 393:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3649
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 394:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3653
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 395:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3656
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 396:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3664
		{
			sqlVAL.union.val = &tree.ControlJobsOfType{Type: sqlDollar[3].str, Command: tree.CancelJob}
		}
	case 397:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3667
		{
			return helpWith(sqllex, "CANCEL ALL JOBS")
		}
	case 398:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3671
		{
			sqlVAL.union.val = &tree.CommentOnDatabase{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 399:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3675
		{
			sqlVAL.union.val = &tree.CommentOnSchema{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 400:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3679
		{
			sqlVAL.union.val = &tree.CommentOnTable{Table: sqlDollar[4].union.unresolvedObjectName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 401:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3683
		{
			varName, err := sqlDollar[4].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[4].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = &tree.CommentOnColumn{ColumnItem: columnItem, Comment: sqlDollar[6].union.strPtr()}
		}
	case 402:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3696
		{
			sqlVAL.union.val = &tree.CommentOnIndex{Index: sqlDollar[4].union.tableIndexName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 403:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3701
		{
			sqlVAL.union.val = &tree.CommentOnConstraint{Constraint: tree.Name(sqlDollar[4].str), Table: sqlDollar[6].union.unresolvedObjectName(), Comment: sqlDollar[8].union.strPtr()}
		}
	case 404:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3704
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "comment on extension")
		}
	case 405:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3705
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "comment on function")
		}
	case 406:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3709
		{
			t := sqlDollar[1].str
			sqlVAL.union.val = &t
		}
	case 407:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3714
		{
			var str *string
			sqlVAL.union.val = str
		}
	case 409:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3726
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 412:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3728
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 414:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3729
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 418:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3732
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 419:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3733
		{
		}
	case 420:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3734
		{
			return helpWith(sqllex, "CREATE")
		}
	case 421:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3741
		{
			sqlVAL.union.val = &tree.CreateExtension{IfNotExists: true, Name: sqlDollar[6].str}
		}
	case 422:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3744
		{
			sqlVAL.union.val = &tree.CreateExtension{Name: sqlDollar[3].str}
		}
	case 423:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3748
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "create extension if not exists with")
		}
	case 424:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3751
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "create extension with")
		}
	case 425:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3754
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 426:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3757
		{
			return unimplemented(sqllex, "create access method")
		}
	case 427:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3758
		{
			return unimplementedWithIssueDetail(sqllex, 74775, "create aggregate")
		}
	case 428:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3759
		{
			return unimplemented(sqllex, "create cast")
		}
	case 429:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3760
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create constraint")
		}
	case 430:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3761
		{
			return unimplemented(sqllex, "create conversion")
		}
	case 431:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3762
		{
			return unimplemented(sqllex, "create def conv")
		}
	case 432:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3763
		{
			return unimplemented(sqllex, "create foreign table")
		}
	case 433:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3764
		{
			return unimplemented(sqllex, "create fdw")
		}
	case 434:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3765
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 435:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3766
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 436:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3767
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create language "+sqlDollar[6].str)
		}
	case 437:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3768
		{
			return unimplementedWithIssue(sqllex, 65017)
		}
	case 438:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3769
		{
			return unimplemented(sqllex, "create publication")
		}
	case 439:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3770
		{
			return unimplemented(sqllex, "create rule")
		}
	case 440:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3771
		{
			return unimplemented(sqllex, "create server")
		}
	case 441:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3772
		{
			return unimplemented(sqllex, "create subscription")
		}
	case 442:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3773
		{
			return unimplementedWithIssueDetail(sqllex, 54113, "create tablespace")
		}
	case 443:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3774
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "create text")
		}
	case 444:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3775
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create trigger")
		}
	case 445:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3778
		{
		}
	case 446:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3779
		{
		}
	case 447:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3782
		{
		}
	case 448:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3783
		{
		}
	case 449:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3786
		{
		}
	case 450:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3787
		{
		}
	case 451:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3790
		{
			return unimplemented(sqllex, "drop access method")
		}
	case 452:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3791
		{
			return unimplementedWithIssueDetail(sqllex, 74775, "drop aggregate")
		}
	case 453:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3792
		{
			return unimplemented(sqllex, "drop cast")
		}
	case 454:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3793
		{
			return unimplemented(sqllex, "drop collation")
		}
	case 455:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3794
		{
			return unimplemented(sqllex, "drop conversion")
		}
	case 456:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3795
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "drop")
		}
	case 457:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3796
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "drop extension if exists")
		}
	case 458:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3797
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "drop extension")
		}
	case 459:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3798
		{
			return unimplemented(sqllex, "drop foreign table")
		}
	case 460:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3799
		{
			return unimplemented(sqllex, "drop fdw")
		}
	case 461:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3800
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop function")
		}
	case 462:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3801
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop language "+sqlDollar[4].str)
		}
	case 463:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3802
		{
			return unimplemented(sqllex, "drop operator")
		}
	case 464:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3803
		{
			return unimplemented(sqllex, "drop publication")
		}
	case 465:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3804
		{
			return unimplemented(sqllex, "drop rule")
		}
	case 466:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3805
		{
			return unimplemented(sqllex, "drop server")
		}
	case 467:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3806
		{
			return unimplemented(sqllex, "drop subscription")
		}
	case 468:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3807
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "drop text")
		}
	case 469:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3808
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "drop")
		}
	case 471:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3811
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 473:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3812
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 475:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3813
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 477:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3814
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 479:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3815
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 480:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3817
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 482:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3818
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 484:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3819
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 486:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3820
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 487:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3830
		{
			sqlVAL.union.val = &tree.CreateStats{
				Name:        tree.Name(sqlDollar[3].str),
				ColumnNames: sqlDollar[4].union.nameList(),
				Table:       sqlDollar[6].union.tblExpr(),
				Options:     *sqlDollar[7].union.createStatsOptions(),
			}
		}
	case 488:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3838
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 489:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3842
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 490:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3846
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 491:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3852
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 492:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3856
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
			}
		}
	case 493:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3865
		{

			sqlVAL.union.val = sqlDollar[3].union.createStatsOptions()
		}
	case 494:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3872
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 495:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3878
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{}
		}
	case 496:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3884
		{
			sqlVAL.union.val = sqlDollar[1].union.createStatsOptions()
		}
	case 497:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3888
		{
			a := sqlDollar[1].union.createStatsOptions()
			b := sqlDollar[2].union.createStatsOptions()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 498:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3899
		{

			value, _ := constant.Float64Val(sqlDollar[2].union.numVal().AsConstantValue())
			if value < 0.0 || value >= 1.0 {
				sqllex.Error("THROTTLING fraction must be between 0 and 1")
				return 1
			}
			sqlVAL.union.val = &tree.CreateStatsOptions{
				Throttling: value,
			}
		}
	case 499:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3911
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 500:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3926
		{
			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.changefeedTargets(),
				SinkURI: sqlDollar[5].union.expr(),
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 501:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3934
		{

			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.changefeedTargets(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 502:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3944
		{
			sqlVAL.union.val = tree.ChangefeedTargets{sqlDollar[1].union.changefeedTarget()}
		}
	case 503:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3948
		{
			sqlVAL.union.val = append(sqlDollar[1].union.changefeedTargets(), sqlDollar[3].union.changefeedTarget())
		}
	case 504:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3954
		{
			sqlVAL.union.val = tree.ChangefeedTarget{
				TableName: sqlDollar[2].union.unresolvedObjectName().ToUnresolvedName(),
			}
		}
	case 505:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3960
		{
			sqlVAL.union.val = tree.ChangefeedTarget{
				TableName: sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName(),
			}
		}
	case 506:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3967
		{
			sqlVAL.union.val = tree.ChangefeedTarget{
				TableName:  sqlDollar[2].union.unresolvedObjectName().ToUnresolvedName(),
				FamilyName: tree.Name(sqlDollar[4].str),
			}
		}
	case 507:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3975
		{
			sqlVAL.union.val = tree.ChangefeedTarget{
				TableName:  sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName(),
				FamilyName: tree.Name(sqlDollar[3].str),
			}
		}
	case 508:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3986
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 509:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3990
		{

			sqlVAL.union.val = nil
		}
	case 510:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4007
		{
			sqlVAL.union.val = &tree.ReplicationStream{
				Targets: sqlDollar[5].union.targetList(),
				SinkURI: sqlDollar[6].union.expr(),
				Options: *sqlDollar[7].union.replicationOptions(),
			}
		}
	case 511:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4018
		{
			sqlVAL.union.val = sqlDollar[2].union.replicationOptions()
		}
	case 512:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4022
		{
			sqlVAL.union.val = sqlDollar[4].union.replicationOptions()
		}
	case 513:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4026
		{
			sqlVAL.union.val = &tree.ReplicationOptions{}
		}
	case 514:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4033
		{
			sqlVAL.union.val = sqlDollar[1].union.replicationOptions()
		}
	case 515:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4037
		{
			if err := sqlDollar[1].union.replicationOptions().CombineWith(sqlDollar[3].union.replicationOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 516:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4046
		{
			sqlVAL.union.val = &tree.ReplicationOptions{Cursor: sqlDollar[3].union.expr()}
		}
	case 517:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4050
		{
			sqlVAL.union.val = &tree.ReplicationOptions{Detached: true}
		}
	case 518:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4063
		{
			sqlVAL.union.val = &tree.Delete{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[4].union.tblExpr(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[6].union.expr()),
				OrderBy:   sqlDollar[7].union.orderBy(),
				Limit:     sqlDollar[8].union.limit(),
				Returning: sqlDollar[9].union.retClause(),
			}
		}
	case 519:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4073
		{
			return helpWith(sqllex, "DELETE")
		}
	case 520:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4076
		{
			return unimplementedWithIssueDetail(sqllex, 40963, "delete using")
		}
	case 521:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4077
		{
		}
	case 522:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4085
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeAll}
		}
	case 523:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4088
		{
			return unimplemented(sqllex, "discard plans")
		}
	case 524:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4089
		{
			return unimplemented(sqllex, "discard sequences")
		}
	case 525:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4090
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 526:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4091
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 527:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4092
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 530:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4101
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 532:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4102
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 533:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4103
		{
		}
	case 534:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4104
		{
			return helpWith(sqllex, "DROP")
		}
	case 536:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4107
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 538:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4108
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 540:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4109
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 542:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4110
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 544:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4111
		{
			return helpWith(sqllex, "DROP SEQUENCE")
		}
	case 546:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4112
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 548:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4113
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 549:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4121
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 550:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4125
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 551:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4129
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[4].union.tableNames(),
				IfExists:       false,
				DropBehavior:   sqlDollar[5].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 552:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4138
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[6].union.tableNames(),
				IfExists:       true,
				DropBehavior:   sqlDollar[7].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 553:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4146
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 554:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4154
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 555:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4158
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 556:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4161
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 557:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4169
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 558:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4173
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 559:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4176
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 560:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4184
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[4].union.newTableIndexNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[5].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 561:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4193
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[6].union.newTableIndexNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[7].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 562:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4201
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 563:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4209
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[3].str),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 564:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4217
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[5].str),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 565:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4224
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 566:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4231
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[3].union.unresolvedObjectNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 567:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4239
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[5].union.unresolvedObjectNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 568:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4246
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 569:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4250
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[1].union.unresolvedObjectNames()}
		}
	case 570:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4256
		{
			sqlVAL.union.val = []*tree.UnresolvedObjectName{sqlDollar[1].union.unresolvedObjectName()}
		}
	case 571:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4260
		{
			sqlVAL.union.val = append(sqlDollar[1].union.unresolvedObjectNames(), sqlDollar[3].union.unresolvedObjectName())
		}
	case 572:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4269
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[3].union.objectNamePrefixList(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 573:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4277
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[5].union.objectNamePrefixList(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 574:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4284
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 575:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4292
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[3].union.roleSpecList(), IfExists: false, IsRole: sqlDollar[2].union.bool()}
		}
	case 576:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4296
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[5].union.roleSpecList(), IfExists: true, IsRole: sqlDollar[2].union.bool()}
		}
	case 577:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4299
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 578:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4303
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 579:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4308
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 580:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4321
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 581:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4326
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 582:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4328
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 583:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4333
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 584:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4337
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 585:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4360
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(nil, sqlDollar[2].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 586:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4367
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 587:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4369
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(sqlDollar[3].union.strs(), sqlDollar[5].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 588:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4377
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 589:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4385
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 590:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4393
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 591:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4401
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 592:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4412
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 597:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4420
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 601:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4423
		{
			return helpWith(sqllex, "DELETE")
		}
	case 604:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4425
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 606:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4426
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 608:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4427
		{
			return helpWith(sqllex, "INSERT")
		}
	case 612:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4430
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 615:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4432
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 617:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4435
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 621:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4440
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 623:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4441
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 625:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4442
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 627:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4447
		{
			return helpWith(sqllex, "DELETE")
		}
	case 629:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4448
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 631:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4449
		{
			return helpWith(sqllex, "INSERT")
		}
	case 632:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4451
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 635:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4455
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 637:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4456
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 638:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4460
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 639:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4464
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 640:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4474
		{
			sqlVAL.union.val = &tree.AlterChangefeed{
				Jobs: sqlDollar[3].union.expr(),
				Cmds: sqlDollar[4].union.alterChangefeedCmds(),
			}
		}
	case 641:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4480
		{
			return helpWith(sqllex, "ALTER CHANGEFEED")
		}
	case 642:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4484
		{
			sqlVAL.union.val = tree.AlterChangefeedCmds{sqlDollar[1].union.alterChangefeedCmd()}
		}
	case 643:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4488
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterChangefeedCmds(), sqlDollar[2].union.alterChangefeedCmd())
		}
	case 644:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4495
		{
			sqlVAL.union.val = &tree.AlterChangefeedAddTarget{
				Targets: sqlDollar[2].union.changefeedTargets(),
				Options: sqlDollar[3].union.kvOptions(),
			}
		}
	case 645:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4503
		{
			sqlVAL.union.val = &tree.AlterChangefeedDropTarget{
				Targets: sqlDollar[2].union.changefeedTargets(),
			}
		}
	case 646:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4509
		{
			sqlVAL.union.val = &tree.AlterChangefeedSetOptions{
				Options: sqlDollar[2].union.kvOptions(),
			}
		}
	case 647:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4515
		{
			sqlVAL.union.val = &tree.AlterChangefeedUnsetOptions{
				Options: sqlDollar[2].union.nameList(),
			}
		}
	case 648:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4534
		{
			sqlVAL.union.val = &tree.AlterBackup{
				Backup: sqlDollar[3].union.expr(),
				Cmds:   sqlDollar[4].union.alterBackupCmds(),
			}
		}
	case 649:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4541
		{
			sqlVAL.union.val = &tree.AlterBackup{
				Subdir: sqlDollar[3].union.expr(),
				Backup: sqlDollar[5].union.expr(),
				Cmds:   sqlDollar[6].union.alterBackupCmds(),
			}
		}
	case 650:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4548
		{
			return helpWith(sqllex, "ALTER BACKUP")
		}
	case 651:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4552
		{
			sqlVAL.union.val = tree.AlterBackupCmds{sqlDollar[1].union.alterBackupCmd()}
		}
	case 652:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4556
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterBackupCmds(), sqlDollar[2].union.alterBackupCmd())
		}
	case 653:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4562
		{
			sqlVAL.union.val = &tree.AlterBackupKMS{
				KMSInfo: sqlDollar[2].union.backupKMS(),
			}
		}
	case 654:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4570
		{
			sqlVAL.union.val = tree.BackupKMS{
				NewKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList(),
				OldKMSURI: sqlDollar[7].union.stringOrPlaceholderOptList(),
			}
		}
	case 655:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4583
		{
			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: sqlDollar[5].union.stmt(),
			}
		}
	case 656:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4591
		{

			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: &tree.CannedOptPlan{Plan: sqlDollar[7].str},
			}
		}
	case 657:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4599
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 658:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4603
		{
			sqlVAL.union.val = sqlDollar[2].union.typeReferences()
		}
	case 659:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4607
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference(nil)
		}
	case 660:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4617
		{
			sqlVAL.union.val = &tree.Execute{
				Name:   tree.Name(sqlDollar[2].str),
				Params: sqlDollar[3].union.exprs(),
			}
		}
	case 661:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4624
		{

			sqlVAL.union.val = &tree.Execute{
				Name:        tree.Name(sqlDollar[2].str),
				Params:      sqlDollar[3].union.exprs(),
				DiscardRows: true,
			}
		}
	case 662:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4632
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 663:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4636
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 664:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4640
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 665:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4650
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[2].str)}
		}
	case 666:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4654
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[3].str)}
		}
	case 667:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4658
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 668:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4662
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 669:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4665
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 670:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4688
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.roleSpecList(), Targets: sqlDollar[4].union.targetList(), WithGrantOption: sqlDollar[7].union.bool()}
		}
	case 671:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4692
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.roleSpecList(), AdminOption: false}
		}
	case 672:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4696
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.roleSpecList(), AdminOption: true}
		}
	case 673:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:4700
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.roleSpecList(), WithGrantOption: sqlDollar[8].union.bool()}
		}
	case 674:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:4704
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees:        sqlDollar[7].union.roleSpecList(),
				WithGrantOption: sqlDollar[8].union.bool(),
			}
		}
	case 675:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4715
		{
			return unimplemented(sqllex, "grant privileges on schema with")
		}
	case 676:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:4719
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas:           sqlDollar[8].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees:        sqlDollar[10].union.roleSpecList(),
				WithGrantOption: sqlDollar[11].union.bool(),
			}
		}
	case 677:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4731
		{
			return unimplementedWithIssueDetail(sqllex, 74780, "grant privileges on sequence")
		}
	case 678:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4734
		{
			return helpWith(sqllex, "GRANT")
		}
	case 679:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4757
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.roleSpecList(), Targets: sqlDollar[4].union.targetList(), GrantOptionFor: false}
		}
	case 680:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4761
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[5].union.privilegeList(), Grantees: sqlDollar[9].union.roleSpecList(), Targets: sqlDollar[7].union.targetList(), GrantOptionFor: true}
		}
	case 681:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4765
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.roleSpecList(), AdminOption: false}
		}
	case 682:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4769
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[5].union.nameList(), Members: sqlDollar[7].union.roleSpecList(), AdminOption: true}
		}
	case 683:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4773
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.roleSpecList(), GrantOptionFor: false}
		}
	case 684:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4777
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[5].union.privilegeList(), Targets: sqlDollar[8].union.targetList(), Grantees: sqlDollar[10].union.roleSpecList(), GrantOptionFor: true}
		}
	case 685:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4781
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees:       sqlDollar[7].union.roleSpecList(),
				GrantOptionFor: false,
			}
		}
	case 686:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4792
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[5].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[8].union.objectNamePrefixList(),
				},
				Grantees:       sqlDollar[10].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 687:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4803
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas:           sqlDollar[8].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees:       sqlDollar[10].union.roleSpecList(),
				GrantOptionFor: false,
			}
		}
	case 688:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:4815
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[5].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas:           sqlDollar[11].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees:       sqlDollar[13].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 689:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4827
		{
			return unimplemented(sqllex, "revoke privileges on sequence")
		}
	case 690:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4830
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 691:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4836
		{
			sqlVAL.union.val = privilege.List{privilege.ALL}
		}
	case 692:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4840
		{
			privList, err := privilege.ListFromStrings(sqlDollar[1].union.nameList().ToStrings())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = privList
		}
	case 693:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4850
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 694:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4854
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 700:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4868
		{
			return helpWith(sqllex, "RESET")
		}
	case 702:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4869
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 703:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4877
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}, Reset: true}
		}
	case 704:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4881
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[3].str, Values: tree.Exprs{tree.DefaultVal{}}, Reset: true}
		}
	case 705:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4885
		{
			sqlVAL.union.val = &tree.SetVar{ResetAll: true, Reset: true}
		}
	case 706:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4888
		{
			return helpWith(sqllex, "RESET")
		}
	case 707:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4896
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: tree.DefaultVal{}}
		}
	case 708:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4899
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 709:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4910
		{
			sqlVAL.union.val = &tree.SetVar{Name: "database", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 710:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4913
		{
			return helpWith(sqllex, "USE")
		}
	case 712:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4917
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 713:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4918
		{
		}
	case 714:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4919
		{
			return unimplemented(sqllex, "set constraints")
		}
	case 716:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4923
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 718:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4924
		{
			return helpWith(sqllex, "SET LOCAL")
		}
	case 720:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4925
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 722:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4926
		{
			return helpWith(sqllex, "USE")
		}
	case 725:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4942
		{
			return helpWith(sqllex, "SCRUB")
		}
	case 726:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4957
		{
			sqlVAL.union.val = &tree.Scrub{Typ: tree.ScrubDatabase, Database: tree.Name(sqlDollar[4].str), AsOf: sqlDollar[5].union.asOfClause()}
		}
	case 727:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4960
		{
			return helpWith(sqllex, "SCRUB DATABASE")
		}
	case 728:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4978
		{
			sqlVAL.union.val = &tree.Scrub{
				Typ:     tree.ScrubTable,
				Table:   sqlDollar[4].union.unresolvedObjectName(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: sqlDollar[6].union.scrubOptions(),
			}
		}
	case 729:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4986
		{
			return helpWith(sqllex, "SCRUB TABLE")
		}
	case 730:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4990
		{
			sqlVAL.union.val = sqlDollar[3].union.scrubOptions()
		}
	case 731:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4994
		{
			sqlVAL.union.val = tree.ScrubOptions{}
		}
	case 732:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5000
		{
			sqlVAL.union.val = tree.ScrubOptions{sqlDollar[1].union.scrubOption()}
		}
	case 733:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5004
		{
			sqlVAL.union.val = append(sqlDollar[1].union.scrubOptions(), sqlDollar[3].union.scrubOption())
		}
	case 734:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5010
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{}
		}
	case 735:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5014
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{IndexNames: sqlDollar[3].union.nameList()}
		}
	case 736:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5018
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{}
		}
	case 737:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5022
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{ConstraintNames: sqlDollar[3].union.nameList()}
		}
	case 738:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5026
		{
			sqlVAL.union.val = &tree.ScrubOptionPhysical{}
		}
	case 739:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5037
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: sqlDollar[6].union.expr()}
		}
	case 740:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5040
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 741:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5050
		{
			csettingStmt := sqlDollar[4].union.stmt().(*tree.SetClusterSetting)
			sqlVAL.union.val = &tree.AlterTenantSetClusterSetting{
				SetClusterSetting: *csettingStmt,
				TenantID:          sqlDollar[3].union.expr(),
			}
		}
	case 742:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5058
		{
			csettingStmt := sqlDollar[4].union.stmt().(*tree.SetClusterSetting)
			sqlVAL.union.val = &tree.AlterTenantSetClusterSetting{
				SetClusterSetting: *csettingStmt,
				TenantAll:         true,
			}
		}
	case 743:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5065
		{
			return helpWith(sqllex, "ALTER TENANT")
		}
	case 744:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5066
		{
			return helpWith(sqllex, "ALTER TENANT")
		}
	case 749:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5080
		{
			sqlVAL.union.val = &tree.SetVar{Values: sqlDollar[4].union.exprs()}
		}
	case 750:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5096
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 751:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5099
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 752:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5101
		{
			sqlVAL.union.val = sqlDollar[2].union.stmt()
		}
	case 753:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5104
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 754:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5107
		{
			sqlVAL.union.val = &tree.SetSessionCharacteristics{Modes: sqlDollar[6].union.transactionModes()}
		}
	case 755:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5121
		{
			ret := sqlDollar[3].union.setVar()
			ret.Local = true
			sqlVAL.union.val = ret
		}
	case 756:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5126
		{
			return helpWith(sqllex, "SET LOCAL")
		}
	case 757:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5143
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[3].union.transactionModes()}
		}
	case 758:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5146
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 759:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5148
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[4].union.transactionModes()}
		}
	case 760:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5151
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 761:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5155
		{

			varName := sqlDollar[1].union.strs()
			if len(varName) == 1 && varName[0] == "tracing" {
				sqlVAL.union.val = &tree.SetTracing{Values: sqlDollar[3].union.exprs()}
			} else {
				sqlVAL.union.val = &tree.SetVar{Name: strings.Join(sqlDollar[1].union.strs(), "."), Values: sqlDollar[3].union.exprs()}
			}
		}
	case 763:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5174
		{

			sqlVAL.union.val = &tree.SetVar{Name: "timezone", Values: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 764:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5178
		{
			return unimplemented(sqllex, "set from current")
		}
	case 765:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5182
		{

			sqlVAL.union.val = &tree.SetVar{Name: "search_path", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 766:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5187
		{

			sqlVAL.union.val = &tree.SetVar{Name: "role", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 768:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5196
		{

			sqlVAL.union.val = &tree.SetSessionAuthorizationDefault{}
		}
	case 769:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5201
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 770:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5205
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 772:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5217
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 773:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5222
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 774:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5229
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 775:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5233
		{
			sqlVAL.union.val = append([]string{sqlDollar[1].str}, sqlDollar[2].union.strs()...)
		}
	case 776:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5239
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 777:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5243
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 779:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5250
		{
			sqlVAL.union.val = tree.Expr(&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}})
		}
	case 782:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5271
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 783:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5275
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 784:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5281
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 785:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5285
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 786:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5289
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 787:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5293
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 788:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5297
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 789:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5303
		{
			sqlVAL.union.val = tree.Low
		}
	case 790:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5307
		{
			sqlVAL.union.val = tree.Normal
		}
	case 791:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5311
		{
			sqlVAL.union.val = tree.High
		}
	case 792:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5322
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 793:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5326
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 794:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5330
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 796:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5335
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 797:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5339
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 799:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5354
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 801:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5355
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 803:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5356
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 805:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5357
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 807:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5358
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 809:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5359
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 811:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5360
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 813:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5361
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 815:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5362
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 818:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5364
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 820:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5365
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 822:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5366
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 824:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5367
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 826:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5368
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 829:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5370
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 831:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5371
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 833:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5372
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 836:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5374
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 839:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5376
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 841:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5377
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 843:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5378
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 845:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5379
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 847:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5380
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 849:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5381
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 851:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5382
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 853:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5383
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 855:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5384
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 857:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5385
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 859:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5386
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 861:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5387
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 863:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5388
		{
			return helpWith(sqllex, "SHOW TRANSFER")
		}
	case 865:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5389
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 867:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5390
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 868:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5391
		{
			return helpWith(sqllex, "SHOW")
		}
	case 872:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5394
		{
			return helpWith(sqllex, "SHOW DEFAULT PRIVILEGES")
		}
	case 874:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5403
		{
			sqlVAL.union.val = &tree.CloseCursor{
				All: true,
			}
		}
	case 875:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5409
		{
			sqlVAL.union.val = &tree.CloseCursor{
				Name: tree.Name(sqlDollar[2].str),
			}
		}
	case 876:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5414
		{
			return helpWith(sqllex, "CLOSE")
		}
	case 877:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5424
		{
			sqlVAL.union.val = &tree.DeclareCursor{
				Binary:      sqlDollar[3].union.bool(),
				Name:        tree.Name(sqlDollar[2].str),
				Sensitivity: sqlDollar[4].union.cursorSensitivity(),
				Scroll:      sqlDollar[5].union.cursorScrollOption(),
				Hold:        sqlDollar[7].union.bool(),
				Select:      sqlDollar[9].union.slct(),
			}
		}
	case 878:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5434
		{
			return helpWith(sqllex, "DECLARE")
		}
	case 879:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5438
		{
			sqlVAL.union.val = true
		}
	case 880:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5442
		{
			sqlVAL.union.val = false
		}
	case 881:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5448
		{
			sqlVAL.union.val = tree.Insensitive
		}
	case 882:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5452
		{
			sqlVAL.union.val = tree.Asensitive
		}
	case 883:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5456
		{
			sqlVAL.union.val = tree.UnspecifiedSensitivity
		}
	case 884:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5462
		{
			sqlVAL.union.val = tree.Scroll
		}
	case 885:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5466
		{
			sqlVAL.union.val = tree.NoScroll
		}
	case 886:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5470
		{
			sqlVAL.union.val = tree.UnspecifiedScroll
		}
	case 887:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5476
		{
			sqlVAL.union.val = true
		}
	case 888:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5480
		{
			sqlVAL.union.val = false
		}
	case 889:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5484
		{
			sqlVAL.union.val = false
		}
	case 890:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5494
		{
			sqlVAL.union.val = &tree.FetchCursor{
				CursorStmt: sqlDollar[2].union.cursorStmt(),
			}
		}
	case 891:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5499
		{
			return helpWith(sqllex, "FETCH")
		}
	case 892:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5507
		{
			sqlVAL.union.val = &tree.MoveCursor{
				CursorStmt: sqlDollar[2].union.cursorStmt(),
			}
		}
	case 893:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5512
		{
			return helpWith(sqllex, "MOVE")
		}
	case 894:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5516
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:  tree.Name(sqlDollar[1].str),
				Count: 1,
			}
		}
	case 895:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5523
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:  tree.Name(sqlDollar[2].str),
				Count: 1,
			}
		}
	case 896:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5530
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:  tree.Name(sqlDollar[3].str),
				Count: sqlDollar[1].union.int64(),
			}
		}
	case 897:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5537
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:  tree.Name(sqlDollar[3].str),
				Count: sqlDollar[1].union.int64(),
			}
		}
	case 898:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5544
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:  tree.Name(sqlDollar[4].str),
				Count: sqlDollar[2].union.int64() * sqlDollar[1].union.int64(),
			}
		}
	case 899:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5551
		{
			fetchType := tree.FetchAll
			count := sqlDollar[1].union.int64()
			if count < 0 {
				fetchType = tree.FetchBackwardAll
			}
			sqlVAL.union.val = tree.CursorStmt{
				Name:      tree.Name(sqlDollar[4].str),
				FetchType: fetchType,
			}
		}
	case 900:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5563
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:      tree.Name(sqlDollar[4].str),
				FetchType: tree.FetchAbsolute,
				Count:     sqlDollar[2].union.int64(),
			}
		}
	case 901:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5571
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:      tree.Name(sqlDollar[4].str),
				FetchType: tree.FetchRelative,
				Count:     sqlDollar[2].union.int64(),
			}
		}
	case 902:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5579
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:      tree.Name(sqlDollar[3].str),
				FetchType: tree.FetchFirst,
			}
		}
	case 903:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5586
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:      tree.Name(sqlDollar[3].str),
				FetchType: tree.FetchLast,
			}
		}
	case 904:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5594
		{
			sqlVAL.union.val = int64(1)
		}
	case 905:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5595
		{
			sqlVAL.union.val = int64(-1)
		}
	case 906:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5598
		{
			sqlVAL.union.val = sqlDollar[1].union.int64()
		}
	case 907:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5599
		{
			sqlVAL.union.val = int64(1)
		}
	case 908:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5602
		{
			sqlVAL.union.val = int64(1)
		}
	case 909:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5603
		{
			sqlVAL.union.val = int64(-1)
		}
	case 910:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5606
		{
		}
	case 911:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5607
		{
		}
	case 912:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5610
		{
		}
	case 913:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5611
		{
		}
	case 914:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5615
		{

			return purposelyUnimplemented(sqllex, "reindex table", "CockroachDB does not require reindexing.")
		}
	case 915:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5620
		{

			return purposelyUnimplemented(sqllex, "reindex index", "CockroachDB does not require reindexing.")
		}
	case 916:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5625
		{

			return purposelyUnimplemented(sqllex, "reindex schema", "CockroachDB does not require reindexing.")
		}
	case 917:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5630
		{

			return purposelyUnimplemented(sqllex, "reindex database", "CockroachDB does not require reindexing.")
		}
	case 918:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5635
		{

			return purposelyUnimplemented(sqllex, "reindex system", "CockroachDB does not require reindexing.")
		}
	case 919:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5645
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[2].str}
		}
	case 920:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5646
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[3].str}
		}
	case 921:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5647
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 923:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5652
		{
			sqlVAL.str = sqlDollar[1].str + "." + strings.Join(sqlDollar[2].union.strs(), ".")
		}
	case 926:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5662
		{
			sqlVAL.str = "client_encoding"
		}
	case 931:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5668
		{
			sqlVAL.str = "timezone"
		}
	case 932:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5669
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 933:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5673
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 934:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5677
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 935:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5693
		{
			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 936:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5697
		{

			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[7].union.unresolvedObjectName(), UsingJSON: true}
		}
	case 937:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5701
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 938:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5712
		{

			id, err := sqlDollar[3].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ShowHistogram{HistogramID: id}
		}
	case 939:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5720
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 940:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5728
		{
			sqlVAL.union.val = &tree.ShowBackup{
				InCollection: sqlDollar[4].union.expr(),
			}
		}
	case 941:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5734
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupDefaultDetails,
				Path:    sqlDollar[3].union.expr(),
				Options: sqlDollar[4].union.kvOptions(),
			}
		}
	case 942:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5742
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:      tree.BackupDefaultDetails,
				Path:         sqlDollar[3].union.expr(),
				InCollection: sqlDollar[5].union.expr(),
				Options:      sqlDollar[6].union.kvOptions(),
			}
		}
	case 943:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5751
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:              tree.BackupDefaultDetails,
				ShouldIncludeSchemas: true,
				Path:                 sqlDollar[4].union.expr(),
				Options:              sqlDollar[5].union.kvOptions(),
			}
		}
	case 944:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5760
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:              tree.BackupDefaultDetails,
				ShouldIncludeSchemas: true,
				Path:                 sqlDollar[4].union.expr(),
				InCollection:         sqlDollar[6].union.expr(),
				Options:              sqlDollar[7].union.kvOptions(),
			}
		}
	case 945:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5770
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupRangeDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 946:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5779
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details:      tree.BackupRangeDetails,
				Path:         sqlDollar[4].union.expr(),
				InCollection: sqlDollar[6].union.expr(),
				Options:      sqlDollar[7].union.kvOptions(),
			}
		}
	case 947:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5789
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupFileDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 948:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5798
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details:      tree.BackupFileDetails,
				Path:         sqlDollar[4].union.expr(),
				InCollection: sqlDollar[6].union.expr(),
				Options:      sqlDollar[7].union.kvOptions(),
			}
		}
	case 949:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5807
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 950:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5817
		{
			sqlVAL.union.val = &tree.ShowClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), ".")}
		}
	case 951:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5821
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 952:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5824
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 953:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5826
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 954:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5829
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 955:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5831
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 956:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5835
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 957:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5838
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 958:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5842
		{
			sqlVAL.union.val = sqlDollar[1].union.stmt()
		}
	case 959:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5844
		{
			switch t := sqlDollar[1].union.stmt().(type) {
			case *tree.ShowClusterSetting:
				sqlVAL.union.val = &tree.ShowTenantClusterSetting{
					ShowClusterSetting: t,
					TenantID:           sqlDollar[4].union.expr(),
				}
			case *tree.ShowClusterSettingList:
				sqlVAL.union.val = &tree.ShowTenantClusterSettingList{
					ShowClusterSettingList: t,
					TenantID:               sqlDollar[4].union.expr(),
				}
			}
		}
	case 960:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5858
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 961:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5866
		{
			sqlVAL.union.val = &tree.ShowColumns{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 962:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5869
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 963:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5877
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 964:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5881
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsDB: true, Database: tree.Name(sqlDollar[5].str)}
		}
	case 965:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5885
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsIndex: true, Index: sqlDollar[5].union.tableIndexName()}
		}
	case 966:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5889
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 967:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5892
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 968:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5900
		{
			sqlVAL.union.val = &tree.ShowDatabases{WithComment: sqlDollar[3].union.bool()}
		}
	case 969:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5903
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 970:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5909
		{
			sqlVAL.union.val = &tree.ShowDefaultPrivileges{
				Roles: sqlDollar[4].union.roleSpecList(),
			}
		}
	case 971:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5914
		{
			sqlVAL.union.val = &tree.ShowDefaultPrivileges{
				ForAllRoles: true,
			}
		}
	case 972:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5919
		{
			return helpWith(sqllex, "SHOW DEFAULT PRIVILEGES")
		}
	case 973:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5926
		{
			sqlVAL.union.val = &tree.ShowEnums{}
		}
	case 974:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5930
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
			}
		}
	case 975:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5940
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
			}
		}
	case 976:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5949
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 977:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5956
		{
			sqlVAL.union.val = &tree.ShowTypes{}
		}
	case 978:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5959
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 979:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5972
		{
			lst := sqlDollar[3].union.targetListPtr()
			if lst != nil && lst.ForRoles {
				sqlVAL.union.val = &tree.ShowRoleGrants{Roles: lst.Roles, Grantees: sqlDollar[4].union.roleSpecList()}
			} else {
				sqlVAL.union.val = &tree.ShowGrants{Targets: lst, Grantees: sqlDollar[4].union.roleSpecList()}
			}
		}
	case 980:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5980
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 981:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5988
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 982:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5991
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 983:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5993
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 984:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5997
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 985:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6001
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 986:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6004
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 987:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6006
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 988:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6010
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 989:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6013
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 990:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6021
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 991:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6024
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 992:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6026
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 993:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6029
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 994:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6037
		{
			sqlVAL.union.val = &tree.ShowQueries{All: false, Cluster: sqlDollar[2].union.bool()}
		}
	case 995:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6040
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 996:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6042
		{
			sqlVAL.union.val = &tree.ShowQueries{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 997:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6045
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 998:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6049
		{
			sqlVAL.union.val = true
		}
	case 999:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6051
		{
			sqlVAL.union.val = true
		}
	case 1000:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6053
		{
			sqlVAL.union.val = false
		}
	case 1003:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6070
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: true}
		}
	case 1004:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6074
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: false}
		}
	case 1005:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6078
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{}
		}
	case 1006:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6081
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1007:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6082
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1008:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6083
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1009:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6085
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[3].union.slct()}
		}
	case 1010:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6089
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[5].union.slct(), Block: true}
		}
	case 1011:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6093
		{
			sqlVAL.union.val = &tree.ShowJobs{Schedules: sqlDollar[3].union.slct()}
		}
	case 1012:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6097
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{Jobs: sqlDollar[4].union.slct()}
		}
	case 1013:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6100
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1014:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6102
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
			}
		}
	case 1015:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6110
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[4].union.expr()}}},
				},
			}
		}
	case 1016:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6118
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				Block: true,
			}
		}
	case 1017:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6126
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1018:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6127
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1019:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6137
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ExecutorType:   sqlDollar[3].union.executorType(),
			}
		}
	case 1020:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6143
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 1021:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6145
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: sqlDollar[2].union.scheduleState(),
				ExecutorType:   sqlDollar[4].union.executorType(),
			}
		}
	case 1022:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6151
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 1023:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6153
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ScheduleID:     sqlDollar[3].union.expr(),
			}
		}
	case 1024:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6159
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 1025:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6163
		{
			sqlVAL.union.val = tree.ActiveSchedules
		}
	case 1026:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6167
		{
			sqlVAL.union.val = tree.PausedSchedules
		}
	case 1027:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6173
		{
			sqlVAL.union.val = tree.InvalidExecutor
		}
	case 1028:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6177
		{
			sqlVAL.union.val = tree.ScheduledBackupExecutor
		}
	case 1029:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6181
		{
			sqlVAL.union.val = tree.ScheduledSQLStatsCompactionExecutor
		}
	case 1030:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6192
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceRaw, Compact: sqlDollar[2].union.bool()}
		}
	case 1031:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6195
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 1032:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6197
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceKV, Compact: sqlDollar[2].union.bool()}
		}
	case 1033:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6200
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 1034:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6202
		{

			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceReplica, Compact: sqlDollar[2].union.bool()}
		}
	case 1035:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6206
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 1036:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6209
		{
			sqlVAL.union.val = true
		}
	case 1037:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6210
		{
			sqlVAL.union.val = false
		}
	case 1038:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6218
		{
			sqlVAL.union.val = &tree.ShowSessions{Cluster: sqlDollar[2].union.bool()}
		}
	case 1039:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6221
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 1040:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6223
		{
			sqlVAL.union.val = &tree.ShowSessions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 1041:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6226
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 1042:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6234
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
				WithComment: sqlDollar[7].union.bool()}
		}
	case 1043:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6244
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
				WithComment: sqlDollar[5].union.bool()}
		}
	case 1044:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6254
		{
			sqlVAL.union.val = &tree.ShowTables{WithComment: sqlDollar[3].union.bool()}
		}
	case 1045:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6257
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 1046:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6264
		{
			sqlVAL.union.val = &tree.ShowTransactions{Cluster: sqlDollar[2].union.bool()}
		}
	case 1047:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6267
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 1048:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6269
		{
			sqlVAL.union.val = &tree.ShowTransactions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 1049:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6272
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 1050:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6275
		{
			sqlVAL.union.val = true
		}
	case 1051:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6276
		{
			sqlVAL.union.val = false
		}
	case 1052:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6283
		{
			sqlVAL.union.val = &tree.ShowSchemas{Database: tree.Name(sqlDollar[4].str)}
		}
	case 1053:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6287
		{
			sqlVAL.union.val = &tree.ShowSchemas{}
		}
	case 1054:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6290
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 1055:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6297
		{
			sqlVAL.union.val = &tree.ShowSequences{Database: tree.Name(sqlDollar[4].str)}
		}
	case 1056:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6301
		{
			sqlVAL.union.val = &tree.ShowSequences{}
		}
	case 1057:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6304
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 1058:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6311
		{

			sqlVAL.union.val = &tree.ShowSyntax{Statement: sqlDollar[3].str}
		}
	case 1059:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6315
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 1060:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6319
		{

			sqlVAL.union.val = &tree.ShowCompletions{
				Statement: tree.NewStrVal(sqlDollar[7].str),
				Offset:    sqlDollar[5].union.numVal(),
			}
		}
	case 1061:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6329
		{

			sqlVAL.union.val = &tree.ShowLastQueryStatistics{Columns: sqlDollar[5].union.nameList()}
		}
	case 1062:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6336
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1063:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6340
		{

			sqlVAL.union.val = tree.ShowLastQueryStatisticsDefaultColumns
		}
	case 1064:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6351
		{
			sqlVAL.union.val = &tree.ShowSavepointStatus{}
		}
	case 1065:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6354
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 1066:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6362
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_isolation"}
		}
	case 1067:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6367
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_priority"}
		}
	case 1068:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6372
		{

			sqlVAL.union.val = &tree.ShowTransactionStatus{}
		}
	case 1069:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6376
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 1070:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6383
		{
			sqlVAL.union.val = &tree.ShowTransferState{TransferKey: tree.NewStrVal(sqlDollar[5].str)}
		}
	case 1071:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6387
		{
			sqlVAL.union.val = &tree.ShowTransferState{}
		}
	case 1072:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6390
		{
			return helpWith(sqllex, "SHOW TRANSFER")
		}
	case 1073:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6402
		{
			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[3].union.unresolvedObjectName()}
		}
	case 1074:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6406
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeTable, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 1075:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6411
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeView, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 1076:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6416
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeSequence, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 1077:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6421
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeDatabase, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 1078:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6426
		{
			sqlVAL.union.val = &tree.ShowCreateAllSchemas{}
		}
	case 1079:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6430
		{
			sqlVAL.union.val = &tree.ShowCreateAllTables{}
		}
	case 1080:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6434
		{
			sqlVAL.union.val = &tree.ShowCreateAllTypes{}
		}
	case 1081:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6437
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 1082:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6447
		{
			sqlVAL.union.val = &tree.ShowCreateSchedules{}
		}
	case 1083:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6450
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 1084:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6452
		{
			sqlVAL.union.val = &tree.ShowCreateSchedules{ScheduleID: sqlDollar[4].union.expr()}
		}
	case 1085:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6455
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 1086:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6463
		{
			sqlVAL.union.val = &tree.ShowUsers{}
		}
	case 1087:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6466
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 1088:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6474
		{
			sqlVAL.union.val = &tree.ShowRoles{}
		}
	case 1089:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6477
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 1090:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6487
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[6].str)}}
		}
	case 1091:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6491
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{Database: tree.Name(sqlDollar[6].str)}}
		}
	case 1092:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6495
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 1093:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:6503
		{
			name := sqlDollar[9].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 1094:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6511
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 1095:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:6518
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[9].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 1096:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6524
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 1097:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6526
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 1098:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6529
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 1099:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6531
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 1100:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6534
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 1102:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6538
		{
		}
	case 1103:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6547
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: tree.TableIndexName{Table: name},
			}
		}
	case 1104:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6555
		{
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: sqlDollar[5].union.tableIndexName(),
			}
		}
	case 1105:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6561
		{
			return helpWith(sqllex, "SHOW RANGE")
		}
	case 1106:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6570
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 1107:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6575
		{
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: sqlDollar[5].union.tableIndexName()}
		}
	case 1108:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6579
		{
			sqlVAL.union.val = &tree.ShowRanges{DatabaseName: tree.Name(sqlDollar[5].str)}
		}
	case 1109:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6582
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 1110:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6591
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{}
		}
	case 1111:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6595
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{
				DatabaseName: tree.Name(sqlDollar[6].str),
			}
		}
	case 1112:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6611
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromCluster,
			}
		}
	case 1113:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6617
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
			}
		}
	case 1114:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6623
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromAllDatabases,
			}
		}
	case 1115:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6629
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
				DatabaseName:    tree.Name(sqlDollar[5].str),
			}
		}
	case 1116:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6636
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDefault,
			}
		}
	case 1117:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6641
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 1118:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6645
		{
			sqlVAL.union.val = &tree.ShowVar{Name: "locality"}
		}
	case 1119:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6651
		{

			sqlVAL.union.val = &tree.ShowFingerprints{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 1120:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6658
		{
			sqlVAL.union.val = &tree.ShowFullTableScans{}
		}
	case 1121:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6664
		{
			tmp := sqlDollar[2].union.targetList()
			sqlVAL.union.val = &tmp
		}
	case 1122:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6669
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 1123:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6789
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 1124:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6793
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 1125:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6797
		{

			sqlVAL.union.val = tree.TargetList{
				Tables:   tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}},
				ForRoles: sqlDollar[1].str == "role",
			}
		}
	case 1126:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6836
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{sqlDollar[1].union.unresolvedName()}}
		}
	case 1127:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6840
		{
			remainderPats := sqlDollar[3].union.tablePatterns()
			sqlVAL.union.val = tree.TargetList{Tables: append(tree.TablePatterns{sqlDollar[1].union.unresolvedName()}, remainderPats...)}
		}
	case 1128:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6845
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 1129:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6851
		{
			tenID := uint64(sqlDollar[2].union.int64())
			if tenID == 0 {
				return setErr(sqllex, errors.New("invalid tenant ID"))
			}
			sqlVAL.union.val = tree.TargetList{TenantID: tree.TenantID{Specified: true, TenantID: roachpb.MakeTenantID(tenID)}}
		}
	case 1130:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6859
		{

			if sqlDollar[2].str != "_" {
				return setErr(sqllex, errors.New("invalid syntax"))
			}
			sqlVAL.union.val = tree.TargetList{TenantID: tree.TenantID{Specified: true}}
		}
	case 1131:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6868
		{
			sqlVAL.union.val = tree.TargetList{Databases: sqlDollar[2].union.nameList()}
		}
	case 1132:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6877
		{
			sqlVAL.union.val = tree.TargetList{ForRoles: true, Roles: sqlDollar[2].union.roleSpecList()}
		}
	case 1133:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6881
		{
			sqlVAL.union.val = tree.TargetList{Schemas: sqlDollar[2].union.objectNamePrefixList()}
		}
	case 1134:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6885
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[2].union.unresolvedObjectNames()}
		}
	case 1136:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6892
		{
			sqlVAL.union.val = sqlDollar[2].union.roleSpecList()
		}
	case 1137:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6896
		{
			sqlVAL.union.val = tree.RoleSpecList(nil)
		}
	case 1139:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6909
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1141:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6910
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1143:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6911
		{
			return helpWith(sqllex, "PAUSE ALL JOBS")
		}
	case 1144:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6912
		{
			return helpWith(sqllex, "PAUSE")
		}
	case 1146:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6922
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1148:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6923
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1150:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6924
		{
			return helpWith(sqllex, "RESUME ALL JOBS")
		}
	case 1151:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6925
		{
			return helpWith(sqllex, "RESUME")
		}
	case 1152:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6933
		{
			sqlVAL.union.val = &tree.ControlJobsOfType{Type: sqlDollar[3].str, Command: tree.ResumeJob}
		}
	case 1153:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6936
		{
			return helpWith(sqllex, "RESUME ALL JOBS")
		}
	case 1154:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6946
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
			}
		}
	case 1155:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6955
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
				Reason:  sqlDollar[7].union.expr(),
			}
		}
	case 1156:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6964
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1157:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6966
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 1158:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6970
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob, Reason: sqlDollar[7].union.expr()}
		}
	case 1159:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6974
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 1160:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6977
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1161:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6982
		{
			sqlVAL.union.val = sqlDollar[3].union.slct()
		}
	case 1162:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6986
		{
			sqlVAL.union.val = &tree.Select{
				Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
			}
		}
	case 1163:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7001
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseSchedule,
			}
		}
	case 1164:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7009
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1165:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7011
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.PauseSchedule,
			}
		}
	case 1166:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7017
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1167:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7025
		{
			sqlVAL.union.val = &tree.ControlJobsOfType{Type: sqlDollar[3].str, Command: tree.PauseJob}
		}
	case 1168:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7028
		{
			return helpWith(sqllex, "PAUSE ALL JOBS")
		}
	case 1169:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7037
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
			}
		}
	case 1170:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7043
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
			}
		}
	case 1171:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7050
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:   sqlDollar[3].union.objectNamePrefix(),
				AuthRole: sqlDollar[5].union.roleSpec(),
			}
		}
	case 1172:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7057
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
				AuthRole:    sqlDollar[8].union.roleSpec(),
			}
		}
	case 1173:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7064
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 1174:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7075
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 1175:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7084
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaOwner{
					Owner: sqlDollar[6].union.roleSpec(),
				},
			}
		}
	case 1176:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7092
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 1177:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:7128
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      false,
				Defs:             sqlDollar[6].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[9].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[10].union.storageParams(),
				OnCommit:         sqlDollar[11].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[12].union.locality(),
			}
		}
	case 1178:
		sqlDollar = sqlS[sqlpt-15 : sqlpt+1]
//line sql-gen.y:7143
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      true,
				Defs:             sqlDollar[9].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[12].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[13].union.storageParams(),
				OnCommit:         sqlDollar[14].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[15].union.locality(),
			}
		}
	case 1179:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7160
		{
			sqlVAL.union.val = sqlDollar[1].union.locality()
		}
	case 1180:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7164
		{
			sqlVAL.union.val = (*tree.Locality)(nil)
		}
	case 1182:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7171
		{

			sqlVAL.union.val = nil
		}
	case 1183:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7177
		{
			return unimplemented(sqllex, "create table with oids")
		}
	case 1184:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7183
		{
			sqlVAL.str = ""
		}
	case 1185:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7187
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "create table inherits")
		}
	case 1186:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7193
		{
			sqlVAL.union.val = nil
		}
	case 1187:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7197
		{
			sqlVAL.union.val = sqlDollar[3].union.storageParams()
		}
	case 1188:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7202
		{
			sqlVAL.union.val = tree.CreateTableOnCommitUnset
		}
	case 1189:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7206
		{
			sqlVAL.union.val = tree.CreateTableOnCommitPreserveRows
		}
	case 1190:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7210
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "delete rows")
		}
	case 1191:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7214
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "drop")
		}
	case 1194:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7224
		{
			sqlVAL.union.val = []tree.Name{tree.Name(sqlDollar[1].str)}
		}
	case 1195:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7228
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParamKeys(), tree.Name(sqlDollar[3].str))
		}
	case 1196:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7234
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 1197:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7240
		{
			sqlVAL.union.val = []tree.StorageParam{sqlDollar[1].union.storageParam()}
		}
	case 1198:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7244
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParams(), sqlDollar[3].union.storageParam())
		}
	case 1199:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7250
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Defs:          sqlDollar[5].union.tblDefs(),
				AsSource:      sqlDollar[8].union.slct(),
				StorageParams: sqlDollar[6].union.storageParams(),
				OnCommit:      sqlDollar[10].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 1200:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:7263
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Defs:          sqlDollar[8].union.tblDefs(),
				AsSource:      sqlDollar[11].union.slct(),
				StorageParams: sqlDollar[9].union.storageParams(),
				OnCommit:      sqlDollar[13].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 1201:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7277
		{
		}
	case 1202:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7278
		{
		}
	case 1203:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7279
		{
			return unimplemented(sqllex, "create table as with no data")
		}
	case 1204:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7297
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1205:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7298
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1206:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7299
		{
			sqlVAL.union.val = tree.PersistencePermanent
		}
	case 1208:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7303
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1209:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7304
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1210:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7305
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1211:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7306
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1212:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7307
		{
			sqlVAL.union.val = tree.PersistenceUnlogged
		}
	case 1214:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7312
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1215:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7318
		{
			sqlVAL.union.val = tree.TableDefs{sqlDollar[1].union.tblDef()}
		}
	case 1216:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7322
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1217:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7328
		{
			sqlVAL.union.val = sqlDollar[1].union.colDef()
		}
	case 1220:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7334
		{
			def := sqlDollar[1].union.constraintDef()
			valBehavior := sqlDollar[2].union.validationBehavior()
			if u, ok := def.(*tree.UniqueConstraintTableDef); ok && valBehavior == tree.ValidationSkip {
				typ := "PRIMARY KEY"
				if !u.PrimaryKey {
					typ = "UNIQUE"
				}
				return purposelyUnimplemented(sqllex, "table constraint", typ+" constraints cannot be marked NOT VALID")
			}
			sqlVAL.union.val = def
		}
	case 1221:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7347
		{
			sqlVAL.union.val = &tree.LikeTableDef{
				Name:    sqlDollar[2].union.unresolvedObjectName().ToTableName(),
				Options: sqlDollar[3].union.likeTableOptionList(),
			}
		}
	case 1222:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7356
		{
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), sqlDollar[3].union.likeTableOption())
		}
	case 1223:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7360
		{
			opt := sqlDollar[3].union.likeTableOption()
			opt.Excluded = true
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), opt)
		}
	case 1224:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7366
		{
			sqlVAL.union.val = []tree.LikeTableOption(nil)
		}
	case 1225:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7371
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding comments")
		}
	case 1226:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7372
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptConstraints}
		}
	case 1227:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7373
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptDefaults}
		}
	case 1228:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7374
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding identity")
		}
	case 1229:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7375
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptGenerated}
		}
	case 1230:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7376
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptIndexes}
		}
	case 1231:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7377
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding statistics")
		}
	case 1232:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7378
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding storage")
		}
	case 1233:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7379
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptAll}
		}
	case 1234:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7384
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1236:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7391
		{
			sqlVAL.str = ""
		}
	case 1238:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7398
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1239:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7404
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1240:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7412
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1241:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7418
		{
			sqlVAL.union.val = (*tree.PartitionByIndex)(nil)
		}
	case 1242:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7424
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1243:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7430
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				All:         true,
				PartitionBy: sqlDollar[4].union.partitionBy(),
			}
		}
	case 1245:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7440
		{
			sqlVAL.union.val = (*tree.PartitionByTable)(nil)
		}
	case 1246:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7446
		{
			sqlVAL.union.val = sqlDollar[3].union.partitionBy()
		}
	case 1247:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7452
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				List:   sqlDollar[6].union.listPartitions(),
			}
		}
	case 1248:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7459
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				Range:  sqlDollar[6].union.rangePartitions(),
			}
		}
	case 1249:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7466
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1250:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7472
		{
			sqlVAL.union.val = []tree.ListPartition{sqlDollar[1].union.listPartition()}
		}
	case 1251:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7476
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listPartitions(), sqlDollar[3].union.listPartition())
		}
	case 1252:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7482
		{
			sqlVAL.union.val = tree.ListPartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				Exprs:        sqlDollar[5].union.exprs(),
				Subpartition: sqlDollar[7].union.partitionBy(),
			}
		}
	case 1253:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7492
		{
			sqlVAL.union.val = []tree.RangePartition{sqlDollar[1].union.rangePartition()}
		}
	case 1254:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7496
		{
			sqlVAL.union.val = append(sqlDollar[1].union.rangePartitions(), sqlDollar[3].union.rangePartition())
		}
	case 1255:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7502
		{
			sqlVAL.union.val = tree.RangePartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				From:         sqlDollar[5].union.exprs(),
				To:           sqlDollar[9].union.exprs(),
				Subpartition: sqlDollar[11].union.partitionBy(),
			}
		}
	case 1256:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7516
		{
			typ := sqlDollar[2].union.typeReference()
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), typ, tree.IsReferenceSerialType(typ), sqlDollar[3].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = tableDef
		}
	case 1257:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7527
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1258:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7531
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1259:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7537
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Name: tree.Name(sqlDollar[2].str), Qualification: sqlDollar[3].union.colQualElem()}
		}
	case 1260:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7541
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1261:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7545
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: tree.ColumnCollation(sqlDollar[2].str)}
		}
	case 1262:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7549
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1263:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7553
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[3].str), Create: true}}
		}
	case 1264:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7557
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Create: true}}
		}
	case 1265:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7561
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[6].str), Create: true, IfNotExists: true}}
		}
	case 1266:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7579
		{
			sqlVAL.union.val = tree.NotNullConstraint{}
		}
	case 1267:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7583
		{
			sqlVAL.union.val = tree.NullConstraint{}
		}
	case 1268:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7587
		{
			sqlVAL.union.val = tree.HiddenConstraint{}
		}
	case 1269:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7591
		{
			sqlVAL.union.val = tree.UniqueConstraint{
				WithoutIndex: sqlDollar[2].union.bool(),
			}
		}
	case 1270:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7597
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{
				StorageParams: sqlDollar[3].union.storageParams(),
			}
		}
	case 1271:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7603
		{
			sqlVAL.union.val = tree.ShardedPrimaryKeyConstraint{
				Sharded:       true,
				ShardBuckets:  sqlDollar[5].union.expr(),
				StorageParams: sqlDollar[6].union.storageParams(),
			}
		}
	case 1272:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7611
		{
			sqlVAL.union.val = &tree.ColumnCheckConstraint{Expr: sqlDollar[3].union.expr()}
		}
	case 1273:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7615
		{
			sqlVAL.union.val = &tree.ColumnDefault{Expr: sqlDollar[2].union.expr()}
		}
	case 1274:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7619
		{
			sqlVAL.union.val = &tree.ColumnOnUpdate{Expr: sqlDollar[3].union.expr()}
		}
	case 1275:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7623
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ColumnFKConstraint{
				Table:   name,
				Col:     tree.Name(sqlDollar[3].str),
				Actions: sqlDollar[5].union.referenceActions(),
				Match:   sqlDollar[4].union.compositeKeyMatchMethod(),
			}
		}
	case 1276:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7633
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: false}
		}
	case 1277:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7637
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: true}
		}
	case 1278:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7641
		{
			sqllex.Error("use AS ( <expr> ) STORED or AS ( <expr> ) VIRTUAL")
			return 1
		}
	case 1279:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7646
		{
			sqlVAL.union.val = &tree.GeneratedAlwaysAsIdentity{
				SeqOptions: sqlDollar[4].union.seqOpts(),
			}
		}
	case 1280:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7652
		{
			sqlVAL.union.val = &tree.GeneratedByDefAsIdentity{
				SeqOptions: sqlDollar[4].union.seqOpts(),
			}
		}
	case 1281:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7658
		{
			sqlVAL.union.val = &tree.GeneratedAlwaysAsIdentity{}
		}
	case 1282:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7662
		{
			sqlVAL.union.val = &tree.GeneratedByDefAsIdentity{}
		}
	case 1283:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7668
		{

			sqlVAL.union.val = true
		}
	case 1284:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7673
		{
			sqlVAL.union.val = false
		}
	case 1285:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7678
		{
		}
	case 1287:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7682
		{
		}
	case 1288:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7685
		{
		}
	case 1289:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7689
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[2].str),
				Columns:          sqlDollar[4].union.idxElems(),
				Sharded:          sqlDollar[6].union.shardedIndexDef(),
				Storing:          sqlDollar[7].union.nameList(),
				PartitionByIndex: sqlDollar[8].union.partitionByIndex(),
				StorageParams:    sqlDollar[9].union.storageParams(),
				Predicate:        sqlDollar[10].union.expr(),
			}
		}
	case 1290:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7701
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Name:             tree.Name(sqlDollar[3].str),
					Columns:          sqlDollar[5].union.idxElems(),
					Sharded:          sqlDollar[7].union.shardedIndexDef(),
					Storing:          sqlDollar[8].union.nameList(),
					PartitionByIndex: sqlDollar[9].union.partitionByIndex(),
					StorageParams:    sqlDollar[10].union.storageParams(),
					Predicate:        sqlDollar[11].union.expr(),
				},
			}
		}
	case 1291:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7715
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[3].str),
				Columns:          sqlDollar[5].union.idxElems(),
				Inverted:         true,
				PartitionByIndex: sqlDollar[7].union.partitionByIndex(),
				StorageParams:    sqlDollar[8].union.storageParams(),
				Predicate:        sqlDollar[9].union.expr(),
			}
		}
	case 1292:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7728
		{
			sqlVAL.union.val = &tree.FamilyTableDef{
				Name:    tree.Name(sqlDollar[2].str),
				Columns: sqlDollar[4].union.nameList(),
			}
		}
	case 1293:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7740
		{
			sqlVAL.union.val = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val.(tree.ConstraintTableDef).SetName(tree.Name(sqlDollar[2].str))
		}
	case 1294:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7745
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1295:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7751
		{
			sqlVAL.union.val = &tree.CheckConstraintTableDef{
				Expr: sqlDollar[3].union.expr(),
			}
		}
	case 1296:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7758
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				WithoutIndex: sqlDollar[2].union.bool(),
				IndexTableDef: tree.IndexTableDef{
					Columns:          sqlDollar[4].union.idxElems(),
					Storing:          sqlDollar[6].union.nameList(),
					PartitionByIndex: sqlDollar[7].union.partitionByIndex(),
					Predicate:        sqlDollar[9].union.expr(),
				},
			}
		}
	case 1297:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7770
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:       sqlDollar[4].union.idxElems(),
					Sharded:       sqlDollar[6].union.shardedIndexDef(),
					StorageParams: sqlDollar[7].union.storageParams(),
				},
				PrimaryKey: true,
			}
		}
	case 1298:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7782
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ForeignKeyConstraintTableDef{
				Table:    name,
				FromCols: sqlDollar[4].union.nameList(),
				ToCols:   sqlDollar[8].union.nameList(),
				Match:    sqlDollar[9].union.compositeKeyMatchMethod(),
				Actions:  sqlDollar[10].union.referenceActions(),
			}
		}
	case 1299:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7793
		{
			return unimplementedWithIssueDetail(sqllex, 46657, "add constraint exclude using")
		}
	case 1300:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7800
		{
			sqlVAL.union.val = sqlDollar[2].union.val
		}
	case 1301:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7804
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1302:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7810
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), nil, false, sqlDollar[2].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef
			sqlVAL.union.val = tree.TableDefs{colToTableDef}
		}
	case 1303:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7820
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[3].str), nil, false, sqlDollar[4].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef

			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), colToTableDef)
		}
	case 1304:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7831
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1305:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7835
		{
			var constraintToTableDef tree.TableDef = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), constraintToTableDef)
		}
	case 1306:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7842
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1307:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7848
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:       sqlDollar[4].union.idxElems(),
					StorageParams: sqlDollar[6].union.storageParams(),
				},
				PrimaryKey: true,
			}
		}
	case 1308:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7860
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1309:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7864
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1310:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7870
		{
			sqlVAL.union.val = tree.IndexElem{Column: tree.Name(sqlDollar[1].str)}
		}
	case 1311:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7876
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1312:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7880
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1313:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7886
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1314:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7890
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1315:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7896
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{
				StorageParams: sqlDollar[3].union.storageParams(),
			}
		}
	case 1316:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7903
		{
		}
	case 1317:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7904
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "deferrable")
		}
	case 1318:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7905
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially deferred")
		}
	case 1319:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7906
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially immediate")
		}
	case 1320:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7907
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially deferred")
		}
	case 1321:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7908
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially immediate")
		}
	case 1325:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7926
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1326:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7930
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1327:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7936
		{
			sqlVAL.union.val = &tree.ShardedIndexDef{
				ShardBuckets: sqlDollar[3].union.expr(),
			}
		}
	case 1328:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7942
		{
			sqlVAL.union.val = (*tree.ShardedIndexDef)(nil)
		}
	case 1329:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7948
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 1330:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7952
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 1331:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7958
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1332:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7962
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1333:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7982
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1334:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7986
		{
			sqlVAL.union.val = tree.MatchFull
		}
	case 1335:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7990
		{
			return unimplementedWithIssueDetail(sqllex, 20305, "match partial")
		}
	case 1336:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7994
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1337:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8003
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction()}
		}
	case 1338:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8007
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction()}
		}
	case 1339:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8011
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction(), Delete: sqlDollar[2].union.referenceAction()}
		}
	case 1340:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8015
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction(), Update: sqlDollar[2].union.referenceAction()}
		}
	case 1341:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8019
		{
			sqlVAL.union.val = tree.ReferenceActions{}
		}
	case 1342:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8025
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1343:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8031
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1344:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8039
		{
			sqlVAL.union.val = tree.NoAction
		}
	case 1345:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8043
		{
			sqlVAL.union.val = tree.Restrict
		}
	case 1346:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8047
		{
			sqlVAL.union.val = tree.Cascade
		}
	case 1347:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8051
		{
			sqlVAL.union.val = tree.SetNull
		}
	case 1348:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8055
		{
			sqlVAL.union.val = tree.SetDefault
		}
	case 1349:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8075
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name:        name,
				Persistence: sqlDollar[2].union.persistence(),
				Options:     sqlDollar[5].union.seqOpts(),
			}
		}
	case 1350:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8084
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name: name, Options: sqlDollar[8].union.seqOpts(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
			}
		}
	case 1351:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8092
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 1353:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8096
		{
			sqlVAL.union.val = []tree.SequenceOption(nil)
		}
	case 1354:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8099
		{
			sqlVAL.union.val = []tree.SequenceOption{sqlDollar[1].union.seqOpt()}
		}
	case 1355:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8100
		{
			sqlVAL.union.val = append(sqlDollar[1].union.seqOpts(), sqlDollar[2].union.seqOpt())
		}
	case 1356:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8103
		{

			parsedType := sqlDollar[2].union.colType()
			if parsedType.Family() != types.IntFamily {
				sqllex.Error(fmt.Sprintf("invalid integer type: %s", parsedType.SQLString()))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptAs, AsIntegerType: parsedType}
		}
	case 1357:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8112
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCycle}
		}
	case 1358:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8114
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptNoCycle}
		}
	case 1359:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8115
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: nil}
		}
	case 1360:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8116
		{
			varName, err := sqlDollar[3].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[3].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: columnItem}
		}
	case 1361:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8126
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCache, IntVal: &x}
		}
	case 1362:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8128
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x}
		}
	case 1363:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8130
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x, OptionalWord: true}
		}
	case 1364:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8132
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue, IntVal: &x}
		}
	case 1365:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8134
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue}
		}
	case 1366:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8135
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue, IntVal: &x}
		}
	case 1367:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8137
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue}
		}
	case 1368:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8138
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x}
		}
	case 1369:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8140
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x, OptionalWord: true}
		}
	case 1370:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8142
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptVirtual}
		}
	case 1371:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8150
		{
			sqlVAL.union.val = &tree.Truncate{Tables: sqlDollar[3].union.tableNames(), DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 1372:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8153
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 1373:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8157
		{

			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[2].str), Value: sqlDollar[3].union.expr()}
		}
	case 1374:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8163
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[2].union.expr()}
		}
	case 1375:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8167
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: tree.DNull}
		}
	case 1376:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8177
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[3].union.roleSpec(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1377:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8181
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[6].union.roleSpec(), IfNotExists: true, KVOptions: sqlDollar[7].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1378:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8184
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 1379:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8195
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[3].union.roleSpec(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1380:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8199
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[5].union.roleSpec(), IfExists: true, KVOptions: sqlDollar[6].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1381:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8203
		{
			sqlVAL.union.val = &tree.AlterRoleSet{RoleName: sqlDollar[3].union.roleSpec(), DatabaseName: tree.Name(sqlDollar[4].str), IsRole: sqlDollar[2].union.bool(), SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1382:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8207
		{
			sqlVAL.union.val = &tree.AlterRoleSet{RoleName: sqlDollar[5].union.roleSpec(), IfExists: true, DatabaseName: tree.Name(sqlDollar[6].str), IsRole: sqlDollar[2].union.bool(), SetOrReset: sqlDollar[7].union.setVar()}
		}
	case 1383:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8211
		{
			sqlVAL.union.val = &tree.AlterRoleSet{AllRoles: true, DatabaseName: tree.Name(sqlDollar[4].str), IsRole: true, SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1384:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8215
		{
			sqlVAL.union.val = &tree.AlterRoleSet{AllRoles: true, DatabaseName: tree.Name(sqlDollar[4].str), IsRole: false, SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1385:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8218
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 1386:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8222
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1387:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8226
		{
			sqlVAL.str = ""
		}
	case 1388:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8232
		{
			sqlVAL.union.val = sqlDollar[2].union.setVar()
		}
	case 1389:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8236
		{
			sqlVAL.union.val = &tree.SetVar{ResetAll: true}
		}
	case 1390:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8240
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 1391:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8248
		{
			sqlVAL.union.val = true
		}
	case 1392:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8252
		{

			sqlVAL.union.val = true
		}
	case 1393:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8257
		{
			sqlVAL.union.val = false
		}
	case 1394:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8267
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[6].union.nameList(),
				AsSource:    sqlDollar[8].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: false,
				Replace:     false,
			}
		}
	case 1395:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:8281
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[8].union.nameList(),
				AsSource:    sqlDollar[10].union.slct(),
				Persistence: sqlDollar[4].union.persistence(),
				IfNotExists: false,
				Replace:     true,
			}
		}
	case 1396:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:8293
		{
			name := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[9].union.nameList(),
				AsSource:    sqlDollar[11].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
				Replace:     false,
			}
		}
	case 1397:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8305
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[5].union.nameList(),
				AsSource:     sqlDollar[7].union.slct(),
				Materialized: true,
			}
		}
	case 1398:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:8315
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[8].union.nameList(),
				AsSource:     sqlDollar[10].union.slct(),
				Materialized: true,
				IfNotExists:  true,
			}
		}
	case 1399:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8325
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 1400:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8329
		{
			return unimplementedWithIssue(sqllex, 74083)
		}
	case 1401:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8333
		{
			sqlVAL.union.val = true
		}
	case 1402:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8337
		{
			sqlVAL.union.val = true
		}
	case 1403:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8343
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1404:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8347
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1405:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8351
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1406:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8355
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1407:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8359
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1408:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8363
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1409:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8367
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1410:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8371
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1411:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8375
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1412:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8379
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1413:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8383
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1414:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8387
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1415:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8391
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1416:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8395
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1417:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8399
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1418:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8403
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1419:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8407
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1420:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8411
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1421:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8415
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1422:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8419
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1423:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8423
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1424:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8427
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1425:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8431
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1426:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8435
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1429:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8443
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 1430:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8447
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[2].union.kvOption())
		}
	case 1431:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8453
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 1432:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8457
		{
			sqlVAL.union.val = nil
		}
	case 1433:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8463
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name("valid until"), Value: sqlDollar[3].union.expr()}
		}
	case 1434:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8467
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name("valid until"), Value: tree.DNull}
		}
	case 1435:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8472
		{
		}
	case 1436:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8473
		{
			return unimplemented(sqllex, "create recursive view")
		}
	case 1437:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8482
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:   sqlDollar[3].union.unresolvedObjectName(),
				Variety:    tree.Enum,
				EnumLabels: sqlDollar[7].union.enumValueList(),
			}
		}
	case 1438:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:8490
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:    sqlDollar[6].union.unresolvedObjectName(),
				Variety:     tree.Enum,
				EnumLabels:  sqlDollar[10].union.enumValueList(),
				IfNotExists: true,
			}
		}
	case 1439:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8498
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 1440:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8500
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1441:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8502
		{
			return unimplementedWithIssue(sqllex, 27791)
		}
	case 1442:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8504
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "base")
		}
	case 1443:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8506
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "shell")
		}
	case 1444:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8508
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "create")
		}
	case 1445:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8512
		{
			sqlVAL.union.val = sqlDollar[1].union.enumValueList()
		}
	case 1446:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8516
		{
			sqlVAL.union.val = tree.EnumValueList(nil)
		}
	case 1447:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8522
		{
			sqlVAL.union.val = tree.EnumValueList{tree.EnumValue(sqlDollar[1].str)}
		}
	case 1448:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8526
		{
			sqlVAL.union.val = append(sqlDollar[1].union.enumValueList(), tree.EnumValue(sqlDollar[3].str))
		}
	case 1449:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:8543
		{
			table := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[5].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Columns:          sqlDollar[10].union.idxElems(),
				Sharded:          sqlDollar[12].union.shardedIndexDef(),
				Storing:          sqlDollar[13].union.nameList(),
				PartitionByIndex: sqlDollar[14].union.partitionByIndex(),
				StorageParams:    sqlDollar[15].union.storageParams(),
				Predicate:        sqlDollar[16].union.expr(),
				Inverted:         sqlDollar[8].union.bool(),
				Concurrently:     sqlDollar[4].union.bool(),
			}
		}
	case 1450:
		sqlDollar = sqlS[sqlpt-19 : sqlpt+1]
//line sql-gen.y:8560
		{
			table := sqlDollar[10].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[8].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Sharded:          sqlDollar[15].union.shardedIndexDef(),
				Storing:          sqlDollar[16].union.nameList(),
				PartitionByIndex: sqlDollar[17].union.partitionByIndex(),
				Inverted:         sqlDollar[11].union.bool(),
				StorageParams:    sqlDollar[18].union.storageParams(),
				Predicate:        sqlDollar[19].union.expr(),
				Concurrently:     sqlDollar[4].union.bool(),
			}
		}
	case 1451:
		sqlDollar = sqlS[sqlpt-15 : sqlpt+1]
//line sql-gen.y:8578
		{
			table := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[6].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				Columns:          sqlDollar[10].union.idxElems(),
				Storing:          sqlDollar[12].union.nameList(),
				PartitionByIndex: sqlDollar[13].union.partitionByIndex(),
				StorageParams:    sqlDollar[14].union.storageParams(),
				Predicate:        sqlDollar[15].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
			}
		}
	case 1452:
		sqlDollar = sqlS[sqlpt-18 : sqlpt+1]
//line sql-gen.y:8594
		{
			table := sqlDollar[11].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[9].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Storing:          sqlDollar[15].union.nameList(),
				PartitionByIndex: sqlDollar[16].union.partitionByIndex(),
				StorageParams:    sqlDollar[17].union.storageParams(),
				Predicate:        sqlDollar[18].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
			}
		}
	case 1453:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8610
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 1454:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8614
		{

			switch sqlDollar[2].str {
			case "gin", "gist":
				sqlVAL.union.val = true
			case "btree":
				sqlVAL.union.val = false
			case "hash", "spgist", "brin":
				return unimplemented(sqllex, "index using "+sqlDollar[2].str)
			default:
				sqllex.Error("unrecognized access method: " + sqlDollar[2].str)
				return 1
			}
		}
	case 1455:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8629
		{
			sqlVAL.union.val = false
		}
	case 1456:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8635
		{
			sqlVAL.union.val = true
		}
	case 1457:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8639
		{
			sqlVAL.union.val = false
		}
	case 1458:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8645
		{
			sqlVAL.union.val = true
		}
	case 1459:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8649
		{
			sqlVAL.union.val = false
		}
	case 1460:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8655
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1461:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8659
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1462:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8668
		{
			e := sqlDollar[2].union.idxElem()
			e.Expr = sqlDollar[1].union.expr()
			sqlVAL.union.val = e
		}
	case 1463:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8674
		{
			e := sqlDollar[4].union.idxElem()
			e.Expr = sqlDollar[2].union.expr()
			sqlVAL.union.val = e
		}
	case 1464:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8680
		{
			e := sqlDollar[2].union.idxElem()
			e.Column = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = e
		}
	case 1465:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8688
		{

			opClass := sqlDollar[1].str
			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()
			if opClass != "" {
				if opClass == "gin_trgm_ops" || opClass == "gist_trgm_ops" {
					return unimplementedWithIssueDetail(sqllex, 41285, "index using "+opClass)
				}
				return unimplementedWithIssue(sqllex, 47420)
			}

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = tree.IndexElem{Direction: dir, NullsOrder: nullsOrder}
		}
	case 1466:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8712
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1467:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8713
		{
			sqlVAL.str = ""
		}
	case 1468:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8716
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1469:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8717
		{
			sqlVAL.str = ""
		}
	case 1470:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8721
		{
			sqlVAL.union.val = tree.Ascending
		}
	case 1471:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8725
		{
			sqlVAL.union.val = tree.Descending
		}
	case 1472:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8729
		{
			sqlVAL.union.val = tree.DefaultDirection
		}
	case 1473:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8735
		{
			sqlVAL.union.val = &tree.ReparentDatabase{Name: tree.Name(sqlDollar[3].str), Parent: tree.Name(sqlDollar[9].str)}
		}
	case 1474:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8741
		{
			sqlVAL.union.val = &tree.RenameDatabase{Name: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[6].str)}
		}
	case 1475:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8747
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: false}
		}
	case 1476:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8753
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: false}
		}
	case 1477:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8761
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false,
			}
		}
	case 1478:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8767
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true,
			}
		}
	case 1479:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8775
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Locality: sqlDollar[5].union.locality(),
				IfExists: false,
			}
		}
	case 1480:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8783
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Locality: sqlDollar[7].union.locality(),
				IfExists: true,
			}
		}
	case 1481:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8793
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelGlobal,
			}
		}
	case 1482:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8799
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[6].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1483:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8806
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1484:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8812
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1485:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8818
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[4].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1486:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8825
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1487:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8831
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1488:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8837
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelRow,
			}
		}
	case 1489:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8843
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel:       tree.LocalityLevelRow,
				RegionalByRowColumn: tree.Name(sqlDollar[6].str),
			}
		}
	case 1490:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8852
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.roleSpec(),
				IfExists: false,
			}
		}
	case 1491:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8860
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.roleSpec(),
				IfExists: true,
			}
		}
	case 1492:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8870
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsView: true,
			}
		}
	case 1493:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8876
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[7].str),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1494:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8886
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsView: true,
			}
		}
	case 1495:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8892
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[9].str),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1496:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8904
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.roleSpec(),
				IfExists: false,
				IsView:   true,
			}
		}
	case 1497:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8913
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Owner:          sqlDollar[7].union.roleSpec(),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1498:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8923
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.roleSpec(),
				IfExists: true,
				IsView:   true,
			}
		}
	case 1499:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8932
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Owner:          sqlDollar[9].union.roleSpec(),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1500:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8944
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsSequence: true,
			}
		}
	case 1501:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8950
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsSequence: true,
			}
		}
	case 1502:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8958
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[3].union.unresolvedObjectName(),
				Owner:      sqlDollar[6].union.roleSpec(),
				IfExists:   false,
				IsSequence: true,
			}
		}
	case 1503:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8967
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[5].union.unresolvedObjectName(),
				Owner:      sqlDollar[8].union.roleSpec(),
				IfExists:   true,
				IsSequence: true,
			}
		}
	case 1504:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8978
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: true}
		}
	case 1505:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8984
		{
			name := sqlDollar[4].union.unresolvedObjectName()
			newName := sqlDollar[7].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1506:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8996
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: true}
		}
	case 1507:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:9002
		{
			name := sqlDollar[6].union.unresolvedObjectName()
			newName := sqlDollar[9].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1508:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9016
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsSequence: true}
		}
	case 1509:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9022
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsSequence: true}
		}
	case 1510:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9030
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[3].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[6].str), IfExists: false}
		}
	case 1511:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9034
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[5].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[8].str), IfExists: true}
		}
	case 1512:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9046
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				Roles:   sqlDollar[4].union.roleSpecList(),
				Schemas: sqlDollar[5].union.objectNamePrefixList(),
				Grant:   sqlDollar[6].union.abbreviatedGrant(),
				IsGrant: true,
			}
		}
	case 1513:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9055
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				Roles:   sqlDollar[4].union.roleSpecList(),
				Schemas: sqlDollar[5].union.objectNamePrefixList(),
				Revoke:  sqlDollar[6].union.abbreviatedRevoke(),
				IsGrant: false,
			}
		}
	case 1514:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9064
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				ForAllRoles: true,
				Schemas:     sqlDollar[7].union.objectNamePrefixList(),
				Grant:       sqlDollar[8].union.abbreviatedGrant(),
				IsGrant:     true,
			}
		}
	case 1515:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9073
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				ForAllRoles: true,
				Schemas:     sqlDollar[7].union.objectNamePrefixList(),
				Revoke:      sqlDollar[8].union.abbreviatedRevoke(),
				IsGrant:     false,
			}
		}
	case 1516:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9081
		{
			return helpWith(sqllex, "ALTER DEFAULT PRIVILEGES")
		}
	case 1517:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9085
		{
			sqlVAL.union.val = tree.AbbreviatedGrant{
				Privileges:      sqlDollar[2].union.privilegeList(),
				Target:          sqlDollar[4].union.alterDefaultPrivilegesTargetObject(),
				Grantees:        sqlDollar[6].union.roleSpecList(),
				WithGrantOption: sqlDollar[7].union.bool(),
			}
		}
	case 1518:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9096
		{
			sqlVAL.union.val = true
		}
	case 1519:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9100
		{
			sqlVAL.union.val = false
		}
	case 1520:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9106
		{
			sqlVAL.union.val = tree.AbbreviatedRevoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Target:     sqlDollar[4].union.alterDefaultPrivilegesTargetObject(),
				Grantees:   sqlDollar[6].union.roleSpecList(),
			}
		}
	case 1521:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:9114
		{
			sqlVAL.union.val = tree.AbbreviatedRevoke{
				Privileges:     sqlDollar[5].union.privilegeList(),
				Target:         sqlDollar[7].union.alterDefaultPrivilegesTargetObject(),
				Grantees:       sqlDollar[9].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 1522:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9125
		{
			sqlVAL.union.val = tree.Tables
		}
	case 1523:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9129
		{
			sqlVAL.union.val = tree.Sequences
		}
	case 1524:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9133
		{
			sqlVAL.union.val = tree.Types
		}
	case 1525:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9137
		{
			sqlVAL.union.val = tree.Schemas
		}
	case 1526:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9141
		{
			return unimplemented(sqllex, "ALTER DEFAULT PRIVILEGES ... ON FUNCTIONS ...")
		}
	case 1527:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9145
		{
			return unimplemented(sqllex, "ALTER DEFAULT PRIVILEGES ... ON FUNCTIONS ...")
		}
	case 1528:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9151
		{
			sqlVAL.union.val = sqlDollar[3].union.roleSpecList()
		}
	case 1529:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9154
		{
			sqlVAL.union.val = tree.RoleSpecList(nil)
		}
	case 1530:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9160
		{
			sqlVAL.union.val = sqlDollar[3].union.objectNamePrefixList()
		}
	case 1531:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9164
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{}
		}
	case 1532:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9169
		{
		}
	case 1533:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9170
		{
		}
	case 1534:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9173
		{
		}
	case 1535:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9174
		{
		}
	case 1536:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9182
		{
			sqlVAL.union.val = &tree.ReleaseSavepoint{Savepoint: tree.Name(sqlDollar[2].str)}
		}
	case 1537:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9185
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 1538:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9195
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeJob,
			}
		}
	case 1539:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9203
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1540:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9205
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1541:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9209
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1542:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9212
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1543:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9225
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeSchedule,
			}
		}
	case 1544:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9233
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1545:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9235
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.ResumeSchedule,
			}
		}
	case 1546:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9241
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1547:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9254
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.DropSchedule,
			}
		}
	case 1548:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9262
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1549:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9264
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.DropSchedule,
			}
		}
	case 1550:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9270
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1551:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9278
		{
			sqlVAL.union.val = &tree.Savepoint{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1552:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9281
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 1554:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9285
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1556:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9286
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1558:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9287
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1560:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9303
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1561:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9306
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1562:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9308
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1563:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9311
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1564:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9321
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1565:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9324
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1566:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9326
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1567:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9329
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1568:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9333
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1569:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9338
		{
		}
	case 1570:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9339
		{
		}
	case 1571:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9340
		{
		}
	case 1572:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9350
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1573:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9354
		{
			sqlVAL.union.val = &tree.RollbackToSavepoint{Savepoint: tree.Name(sqlDollar[4].str)}
		}
	case 1574:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9357
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1575:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9360
		{
		}
	case 1576:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9361
		{
		}
	case 1577:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9365
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1578:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9369
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1579:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9375
		{
			sqlVAL.union.val = &tree.BeginTransaction{Modes: sqlDollar[1].union.transactionModes()}
		}
	case 1580:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9379
		{
			sqlVAL.union.val = &tree.BeginTransaction{}
		}
	case 1581:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9385
		{
			sqlVAL.union.val = sqlDollar[1].union.transactionModes()
		}
	case 1582:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9389
		{
			a := sqlDollar[1].union.transactionModes()
			b := sqlDollar[3].union.transactionModes()
			err := a.Merge(b)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1583:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9402
		{
		}
	case 1584:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9404
		{
		}
	case 1585:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9408
		{

			sqlVAL.union.val = tree.TransactionModes{Isolation: sqlDollar[1].union.isoLevel()}
		}
	case 1586:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9413
		{
			sqlVAL.union.val = tree.TransactionModes{UserPriority: sqlDollar[1].union.userPriority()}
		}
	case 1587:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9417
		{
			sqlVAL.union.val = tree.TransactionModes{ReadWriteMode: sqlDollar[1].union.readWriteMode()}
		}
	case 1588:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9421
		{
			sqlVAL.union.val = tree.TransactionModes{AsOf: sqlDollar[1].union.asOfClause()}
		}
	case 1589:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9425
		{
			sqlVAL.union.val = tree.TransactionModes{Deferrable: sqlDollar[1].union.deferrableMode()}
		}
	case 1590:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9431
		{
			sqlVAL.union.val = sqlDollar[2].union.userPriority()
		}
	case 1591:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9437
		{
			sqlVAL.union.val = sqlDollar[3].union.isoLevel()
		}
	case 1592:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9443
		{
			sqlVAL.union.val = tree.ReadOnly
		}
	case 1593:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9447
		{
			sqlVAL.union.val = tree.ReadWrite
		}
	case 1594:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9453
		{
			sqlVAL.union.val = tree.Deferrable
		}
	case 1595:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9457
		{
			sqlVAL.union.val = tree.NotDeferrable
		}
	case 1596:
		sqlDollar = sqlS[sqlpt-14 : sqlpt+1]
//line sql-gen.y:9467
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				Name:            tree.Name(sqlDollar[3].str),
				Template:        sqlDollar[5].str,
				Encoding:        sqlDollar[6].str,
				Collate:         sqlDollar[7].str,
				CType:           sqlDollar[8].str,
				ConnectionLimit: sqlDollar[9].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[10].str),
				Regions:         sqlDollar[11].union.nameList(),
				SurvivalGoal:    sqlDollar[12].union.survivalGoal(),
				Placement:       sqlDollar[13].union.dataPlacement(),
				Owner:           sqlDollar[14].union.roleSpec(),
			}
		}
	case 1597:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:9483
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				IfNotExists:     true,
				Name:            tree.Name(sqlDollar[6].str),
				Template:        sqlDollar[8].str,
				Encoding:        sqlDollar[9].str,
				Collate:         sqlDollar[10].str,
				CType:           sqlDollar[11].str,
				ConnectionLimit: sqlDollar[12].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[13].str),
				Regions:         sqlDollar[14].union.nameList(),
				SurvivalGoal:    sqlDollar[15].union.survivalGoal(),
				Placement:       sqlDollar[16].union.dataPlacement(),
			}
		}
	case 1598:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9498
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 1600:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9503
		{
			sqlVAL.str = ""
		}
	case 1601:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9508
		{
			sqlVAL.str = sqlDollar[4].str
		}
	case 1603:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9515
		{
			sqlVAL.union.val = tree.DataPlacementUnspecified
		}
	case 1604:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9521
		{

			sqlVAL.union.val = tree.DataPlacementRestricted
		}
	case 1605:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9526
		{

			sqlVAL.union.val = tree.DataPlacementDefault
		}
	case 1606:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9533
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1607:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9537
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1608:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9543
		{

		}
	case 1610:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9550
		{
			sqlVAL.union.val = tree.SurvivalGoalRegionFailure
		}
	case 1611:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9554
		{
			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1612:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9558
		{

			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1614:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9567
		{
			sqlVAL.union.val = tree.SurvivalGoalDefault
		}
	case 1615:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9573
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1616:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9577
		{
			sqlVAL.str = ""
		}
	case 1617:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9583
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1618:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9587
		{
			sqlVAL.str = ""
		}
	case 1619:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9593
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1620:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9597
		{
			sqlVAL.str = ""
		}
	case 1621:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9603
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1622:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9607
		{
			sqlVAL.str = ""
		}
	case 1623:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9613
		{
			ret, err := sqlDollar[4].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = ret
		}
	case 1624:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9621
		{
			sqlVAL.union.val = int32(-1)
		}
	case 1625:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9627
		{
			sqlVAL.union = sqlDollar[3].union
		}
	case 1626:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9631
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.CurrentUser,
			}
		}
	case 1627:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9638
		{
		}
	case 1628:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9639
		{
		}
	case 1629:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9654
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1630:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9661
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = sqlDollar[6].union.onConflict()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[7].union.retClause()
		}
	case 1631:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9668
		{
			return helpWith(sqllex, "INSERT")
		}
	case 1632:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9679
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = &tree.OnConflict{}
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1633:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9686
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 1634:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9690
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &name
		}
	case 1635:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9699
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &name, As: tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}}
		}
	case 1636:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9704
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1637:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9710
		{
			sqlVAL.union.val = &tree.Insert{Rows: sqlDollar[1].union.slct()}
		}
	case 1638:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9714
		{
			sqlVAL.union.val = &tree.Insert{Columns: sqlDollar[2].union.nameList(), Rows: sqlDollar[4].union.slct()}
		}
	case 1639:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9718
		{
			sqlVAL.union.val = &tree.Insert{Rows: &tree.Select{}}
		}
	case 1640:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9724
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1641:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9728
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1643:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9748
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1644:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9752
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:   tree.NameList(nil),
				DoNothing: true,
			}
		}
	case 1645:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9759
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				DoNothing:        true,
			}
		}
	case 1646:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:9767
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				Exprs:            sqlDollar[10].union.updateExprs(),
				Where:            tree.NewWhere(tree.AstWhere, sqlDollar[11].union.expr()),
			}
		}
	case 1647:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9776
		{
			sqlVAL.union.val = &tree.OnConflict{
				Constraint: tree.Name(sqlDollar[5].str),
				DoNothing:  true,
			}
		}
	case 1648:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:9783
		{
			sqlVAL.union.val = &tree.OnConflict{
				Constraint: tree.Name(sqlDollar[5].str),
				Exprs:      sqlDollar[9].union.updateExprs(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[10].union.expr()),
			}
		}
	case 1649:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9793
		{
			ret := tree.ReturningExprs(sqlDollar[2].union.selExprs())
			sqlVAL.union.val = &ret
		}
	case 1650:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9798
		{
			sqlVAL.union.val = tree.ReturningNothingClause
		}
	case 1651:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9802
		{
			sqlVAL.union.val = tree.AbsentReturningClause
		}
	case 1652:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:9819
		{
			sqlVAL.union.val = &tree.Update{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[3].union.tblExpr(),
				Exprs:     sqlDollar[5].union.updateExprs(),
				From:      sqlDollar[6].union.tblExprs(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[7].union.expr()),
				OrderBy:   sqlDollar[8].union.orderBy(),
				Limit:     sqlDollar[9].union.limit(),
				Returning: sqlDollar[10].union.retClause(),
			}
		}
	case 1653:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9831
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 1654:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9834
		{
			sqlVAL.union.val = sqlDollar[2].union.tblExprs()
		}
	case 1655:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9837
		{
			sqlVAL.union.val = tree.TableExprs{}
		}
	case 1656:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9843
		{
			sqlVAL.union.val = tree.UpdateExprs{sqlDollar[1].union.updateExpr()}
		}
	case 1657:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9847
		{
			sqlVAL.union.val = append(sqlDollar[1].union.updateExprs(), sqlDollar[3].union.updateExpr())
		}
	case 1660:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9860
		{
			sqlVAL.union.val = &tree.UpdateExpr{Names: tree.NameList{tree.Name(sqlDollar[1].str)}, Expr: sqlDollar[3].union.expr()}
		}
	case 1661:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9863
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1662:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9867
		{
			sqlVAL.union.val = &tree.UpdateExpr{Tuple: true, Names: sqlDollar[2].union.nameList(), Expr: sqlDollar[5].union.expr()}
		}
	case 1663:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9878
		{
			sqlVAL.union.val = &tree.ReassignOwnedBy{
				OldRoles: sqlDollar[4].union.roleSpecList(),
				NewRole:  sqlDollar[6].union.roleSpec(),
			}
		}
	case 1664:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9884
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 1665:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9893
		{
			sqlVAL.union.val = &tree.DropOwnedBy{
				Roles:        sqlDollar[4].union.roleSpecList(),
				DropBehavior: sqlDollar[5].union.dropBehavior(),
			}
		}
	case 1666:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9899
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 1668:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9940
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1669:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9946
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: sqlDollar[2].union.slct()}
		}
	case 1670:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9950
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: &tree.Select{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1671:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9965
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1672:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9969
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy()}
		}
	case 1673:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9973
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[3].union.lockingClause()}
		}
	case 1674:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9977
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[3].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1675:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9981
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt()}
		}
	case 1676:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9985
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy()}
		}
	case 1677:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9989
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[5].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1678:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9993
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[5].union.lockingClause()}
		}
	case 1679:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9998
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1680:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9999
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1681:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10002
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1682:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10003
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1683:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10007
		{
			sqlVAL.union.val = tree.LockingClause{sqlDollar[1].union.lockingItem()}
		}
	case 1684:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10011
		{
			sqlVAL.union.val = append(sqlDollar[1].union.lockingClause(), sqlDollar[2].union.lockingItem())
		}
	case 1685:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10017
		{
			sqlVAL.union.val = &tree.LockingItem{
				Strength:   sqlDollar[1].union.lockingStrength(),
				Targets:    sqlDollar[2].union.tableNames(),
				WaitPolicy: sqlDollar[3].union.lockingWaitPolicy(),
			}
		}
	case 1686:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10026
		{
			sqlVAL.union.val = tree.ForUpdate
		}
	case 1687:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10027
		{
			sqlVAL.union.val = tree.ForNoKeyUpdate
		}
	case 1688:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10028
		{
			sqlVAL.union.val = tree.ForShare
		}
	case 1689:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10029
		{
			sqlVAL.union.val = tree.ForKeyShare
		}
	case 1690:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10032
		{
			sqlVAL.union.val = tree.TableNames{}
		}
	case 1691:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10033
		{
			sqlVAL.union.val = sqlDollar[2].union.tableNames()
		}
	case 1692:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10036
		{
			sqlVAL.union.val = tree.LockWaitBlock
		}
	case 1693:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10037
		{
			sqlVAL.union.val = tree.LockWaitSkip
		}
	case 1694:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10038
		{
			sqlVAL.union.val = tree.LockWaitError
		}
	case 1695:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10043
		{
			return helpWith(sqllex, "<SELECTCLAUSE>")
		}
	case 1699:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10078
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1701:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10079
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1703:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10080
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1705:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10102
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:   sqlDollar[3].union.selExprs(),
				From:    sqlDollar[4].union.from(),
				Where:   tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy: sqlDollar[6].union.groupBy(),
				Having:  tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:  sqlDollar[8].union.window(),
			}
		}
	case 1706:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10115
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct: sqlDollar[2].union.bool(),
				Exprs:    sqlDollar[3].union.selExprs(),
				From:     sqlDollar[4].union.from(),
				Where:    tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:  sqlDollar[6].union.groupBy(),
				Having:   tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:   sqlDollar[8].union.window(),
			}
		}
	case 1707:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10129
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct:   true,
				DistinctOn: sqlDollar[2].union.distinctOn(),
				Exprs:      sqlDollar[3].union.selExprs(),
				From:       sqlDollar[4].union.from(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:    sqlDollar[6].union.groupBy(),
				Having:     tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:     sqlDollar[8].union.window(),
			}
		}
	case 1708:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10141
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1709:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10145
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.UnionOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1710:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10154
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.IntersectOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1711:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10163
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.ExceptOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1712:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10178
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:       tree.SelectExprs{tree.StarSelectExpr()},
				From:        tree.From{Tables: tree.TableExprs{sqlDollar[2].union.tblExpr()}},
				TableSelect: true,
			}
		}
	case 1713:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10185
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1714:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10197
		{
			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1715:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10201
		{

			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1716:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10206
		{
			sqlVAL.union.val = &tree.With{Recursive: true, CTEList: sqlDollar[3].union.ctes()}
		}
	case 1717:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10212
		{
			sqlVAL.union.val = []*tree.CTE{sqlDollar[1].union.cte()}
		}
	case 1718:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10216
		{
			sqlVAL.union.val = append(sqlDollar[1].union.ctes(), sqlDollar[3].union.cte())
		}
	case 1719:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10222
		{
			sqlVAL.union.val = true
		}
	case 1720:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10226
		{
			sqlVAL.union.val = false
		}
	case 1721:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10232
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Set: false,
				},
				Stmt: sqlDollar[5].union.stmt(),
			}
		}
	case 1722:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10242
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Materialize: sqlDollar[4].union.bool(),
					Set:         true,
				},
				Stmt: sqlDollar[6].union.stmt(),
			}
		}
	case 1723:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10254
		{
		}
	case 1724:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10255
		{
		}
	case 1725:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10259
		{
			sqlVAL.union.val = sqlDollar[1].union.with()
		}
	case 1726:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10263
		{
			sqlVAL.union.val = nil
		}
	case 1727:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10268
		{
		}
	case 1728:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10269
		{
		}
	case 1729:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10273
		{
			sqlVAL.union.val = true
		}
	case 1730:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10277
		{
			sqlVAL.union.val = false
		}
	case 1731:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10281
		{
			sqlVAL.union.val = false
		}
	case 1732:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10287
		{
			sqlVAL.union.val = true
		}
	case 1733:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10293
		{
			sqlVAL.union.val = tree.DistinctOn(sqlDollar[4].union.exprs())
		}
	case 1734:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10298
		{
		}
	case 1735:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10299
		{
		}
	case 1736:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10302
		{
		}
	case 1737:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10303
		{
		}
	case 1738:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10307
		{
			sqlVAL.union.val = sqlDollar[1].union.orderBy()
		}
	case 1739:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10311
		{
			sqlVAL.union.val = tree.OrderBy(nil)
		}
	case 1740:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10317
		{
			sqlVAL.union.val = tree.OrderBy(sqlDollar[3].union.orders())
		}
	case 1741:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10323
		{
			sqlVAL.union.val = tree.OrderBy([]*tree.Order{sqlDollar[3].union.order()})
		}
	case 1742:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10327
		{
			sqllex.Error("multiple ORDER BY clauses are not supported in this function")
			return 1
		}
	case 1743:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10334
		{
			sqlVAL.union.val = []*tree.Order{sqlDollar[1].union.order()}
		}
	case 1744:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10338
		{
			sqlVAL.union.val = append(sqlDollar[1].union.orders(), sqlDollar[3].union.order())
		}
	case 1745:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10344
		{

			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()
			sqlVAL.union.val = &tree.Order{
				OrderType:  tree.OrderByColumn,
				Expr:       sqlDollar[1].union.expr(),
				Direction:  dir,
				NullsOrder: nullsOrder,
			}
		}
	case 1746:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10356
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{OrderType: tree.OrderByIndex, Direction: sqlDollar[4].union.dir(), Table: name}
		}
	case 1747:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10361
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{
				OrderType: tree.OrderByIndex,
				Direction: sqlDollar[5].union.dir(),
				Table:     name,
				Index:     tree.UnrestrictedName(sqlDollar[4].str),
			}
		}
	case 1748:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10373
		{
			sqlVAL.union.val = tree.NullsFirst
		}
	case 1749:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10377
		{
			sqlVAL.union.val = tree.NullsLast
		}
	case 1750:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10381
		{
			sqlVAL.union.val = tree.DefaultNullsOrder
		}
	case 1751:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10387
		{
			if sqlDollar[1].union.limit() == nil {
				sqlVAL.union.val = sqlDollar[2].union.limit()
			} else {
				sqlVAL.union.val = sqlDollar[1].union.limit()
				sqlVAL.union.val.(*tree.Limit).Offset = sqlDollar[2].union.limit().Offset
			}
		}
	case 1752:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10396
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
			if sqlDollar[2].union.limit() != nil {
				sqlVAL.union.val.(*tree.Limit).Count = sqlDollar[2].union.limit().Count
				sqlVAL.union.val.(*tree.Limit).LimitAll = sqlDollar[2].union.limit().LimitAll
			}
		}
	case 1755:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10407
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
		}
	case 1756:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10408
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1758:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10412
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1759:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10416
		{
			sqlVAL.union.val = &tree.Limit{LimitAll: true}
		}
	case 1760:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10420
		{
			if sqlDollar[2].union.expr() == nil {
				sqlVAL.union.val = (*tree.Limit)(nil)
			} else {
				sqlVAL.union.val = &tree.Limit{Count: sqlDollar[2].union.expr()}
			}
		}
	case 1761:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10434
		{
			sqlVAL.union.val = &tree.Limit{Count: sqlDollar[3].union.expr()}
		}
	case 1762:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10438
		{
			sqlVAL.union.val = &tree.Limit{
				Count: tree.NewNumVal(constant.MakeInt64(1), "", false),
			}
		}
	case 1763:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10446
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1764:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10453
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1768:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10475
		{
		}
	case 1769:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10476
		{
		}
	case 1770:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10479
		{
		}
	case 1771:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10480
		{
		}
	case 1772:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10497
		{
			sqlVAL.union.val = tree.GroupBy(sqlDollar[3].union.exprs())
		}
	case 1773:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10501
		{
			sqlVAL.union.val = tree.GroupBy(nil)
		}
	case 1774:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10506
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1775:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10507
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1776:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10513
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1777:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10514
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "rollup")
		}
	case 1778:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10515
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "cube")
		}
	case 1779:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10516
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "grouping sets")
		}
	case 1780:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10520
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1781:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10524
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1782:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10543
		{
			sqlVAL.union.val = &tree.ValuesClause{Rows: []tree.Exprs{sqlDollar[3].union.exprs()}}
		}
	case 1783:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10546
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1784:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10548
		{
			valNode := sqlDollar[1].union.selectStmt().(*tree.ValuesClause)
			valNode.Rows = append(valNode.Rows, sqlDollar[4].union.exprs())
			sqlVAL.union.val = valNode
		}
	case 1785:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10560
		{
			sqlVAL.union.val = tree.From{Tables: sqlDollar[2].union.tblExprs(), AsOf: sqlDollar[3].union.asOfClause()}
		}
	case 1786:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10563
		{
			return helpWith(sqllex, "<SOURCE>")
		}
	case 1787:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10565
		{
			sqlVAL.union.val = tree.From{}
		}
	case 1788:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10571
		{
			sqlVAL.union.val = tree.TableExprs{sqlDollar[1].union.tblExpr()}
		}
	case 1789:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10575
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblExprs(), sqlDollar[3].union.tblExpr())
		}
	case 1790:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10581
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1791:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10585
		{

			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[4].union.int64())}
		}
	case 1792:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10590
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Ascending}
		}
	case 1793:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10595
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Descending}
		}
	case 1794:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10601
		{
			sqlVAL.union.val = &tree.IndexFlags{NoIndexJoin: true}
		}
	case 1795:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10606
		{
			sqlVAL.union.val = &tree.IndexFlags{NoZigzagJoin: true}
		}
	case 1796:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10611
		{
			sqlVAL.union.val = &tree.IndexFlags{NoFullScan: true}
		}
	case 1797:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10616
		{

			sqlVAL.union.val = &tree.IndexFlags{IgnoreForeignKeys: true}
		}
	case 1798:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10622
		{
			sqlVAL.union.val = &tree.IndexFlags{ForceZigzag: true}
		}
	case 1799:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10627
		{
			sqlVAL.union.val = &tree.IndexFlags{ZigzagIndexes: []tree.UnrestrictedName{tree.UnrestrictedName(sqlDollar[3].str)}}
		}
	case 1800:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10632
		{

			sqlVAL.union.val = &tree.IndexFlags{ZigzagIndexIDs: []tree.IndexID{tree.IndexID(sqlDollar[4].union.int64())}}
		}
	case 1801:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10639
		{
			sqlVAL.union.val = sqlDollar[1].union.indexFlags()
		}
	case 1802:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10644
		{
			a := sqlDollar[1].union.indexFlags()
			b := sqlDollar[3].union.indexFlags()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1803:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10655
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1804:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10659
		{
			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[3].union.int64())}
		}
	case 1805:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10663
		{
			flags := sqlDollar[3].union.indexFlags()
			if err := flags.Check(); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = flags
		}
	case 1806:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10671
		{
			sqlVAL.union.val = (*tree.IndexFlags)(nil)
		}
	case 1807:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10705
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1808:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10715
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1809:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10725
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[1].union.selectStmt()},
				Ordinality: sqlDollar[2].union.bool(),
				As:         sqlDollar[3].union.aliasClause(),
			}
		}
	case 1810:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10733
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[2].union.selectStmt()},
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1811:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10742
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1812:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10746
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1813:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10750
		{
			f := sqlDollar[1].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[2].union.bool(),

				As: sqlDollar[3].union.aliasClause(),
			}
		}
	case 1814:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10761
		{
			f := sqlDollar[2].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1815:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10785
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.StatementSource{Statement: sqlDollar[2].union.stmt()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1816:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10791
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
				Columns: sqlDollar[3].union.tableRefCols(),
				As:      sqlDollar[4].union.aliasClause(),
			}
		}
	case 1817:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10802
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: tree.Exprs{sqlDollar[1].union.expr()}}
		}
	case 1818:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10806
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: sqlDollar[4].union.exprs()}
		}
	case 1819:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10812
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1820:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10814
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1821:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10818
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1822:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10824
		{
		}
	case 1823:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10826
		{
			return unimplemented(sqllex, "ROWS FROM with col_def_list")
		}
	case 1824:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10829
		{
			sqlVAL.union.val = nil
		}
	case 1825:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10830
		{
			sqlVAL.union.val = []tree.ColumnID{}
		}
	case 1826:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10831
		{
			sqlVAL.union.val = sqlDollar[2].union.tableRefCols()
		}
	case 1827:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10835
		{
			sqlVAL.union.val = []tree.ColumnID{tree.ColumnID(sqlDollar[1].union.int64())}
		}
	case 1828:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10839
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tableRefCols(), tree.ColumnID(sqlDollar[3].union.int64()))
		}
	case 1829:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10845
		{
			sqlVAL.union.val = true
		}
	case 1830:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10849
		{
			sqlVAL.union.val = false
		}
	case 1831:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10869
		{
			sqlVAL.union.val = &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}
		}
	case 1832:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10873
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: tree.AstCross, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Hint: sqlDollar[3].str}
		}
	case 1833:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10877
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[2].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Cond: sqlDollar[6].union.joinCond(), Hint: sqlDollar[3].str}
		}
	case 1834:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10881
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[3].union.tblExpr(), Cond: sqlDollar[4].union.joinCond()}
		}
	case 1835:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10885
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[3].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[6].union.tblExpr(), Cond: tree.NaturalJoinCond{}, Hint: sqlDollar[4].str}
		}
	case 1836:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10889
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[4].union.tblExpr(), Cond: tree.NaturalJoinCond{}}
		}
	case 1837:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10895
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str), Cols: sqlDollar[3].union.nameList()}
		}
	case 1838:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10899
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()}
		}
	case 1840:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10906
		{
			sqlVAL.union.val = tree.AliasClause{}
		}
	case 1841:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10912
		{
			sqlVAL.union.val = tree.AsOfClause{Expr: sqlDollar[5].union.expr()}
		}
	case 1843:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10919
		{
			sqlVAL.union.val = tree.AsOfClause{}
		}
	case 1844:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10925
		{
			sqlVAL.str = tree.AstFull
		}
	case 1845:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10929
		{
			sqlVAL.str = tree.AstLeft
		}
	case 1846:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10933
		{
			sqlVAL.str = tree.AstRight
		}
	case 1847:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10937
		{
			sqlVAL.str = tree.AstInner
		}
	case 1848:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10943
		{
		}
	case 1849:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10944
		{
		}
	case 1850:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10968
		{
			sqlVAL.str = tree.AstHash
		}
	case 1851:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10972
		{
			sqlVAL.str = tree.AstMerge
		}
	case 1852:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10976
		{
			sqlVAL.str = tree.AstLookup
		}
	case 1853:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10980
		{
			sqlVAL.str = tree.AstInverted
		}
	case 1854:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10984
		{
			sqlVAL.str = ""
		}
	case 1855:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10997
		{
			sqlVAL.union.val = &tree.UsingJoinCond{Cols: sqlDollar[3].union.nameList()}
		}
	case 1856:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11001
		{
			sqlVAL.union.val = &tree.OnJoinCond{Expr: sqlDollar[2].union.expr()}
		}
	case 1857:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11006
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1858:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11007
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1859:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11008
		{
			sqlVAL.union.val = sqlDollar[2].union.unresolvedObjectName()
		}
	case 1860:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11009
		{
			sqlVAL.union.val = sqlDollar[3].union.unresolvedObjectName()
		}
	case 1861:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11013
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 1862:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11018
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 1863:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11032
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1864:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11036
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str)}
			sqlVAL.union.val = alias
		}
	case 1865:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11042
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = alias
		}
	case 1866:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11048
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 1867:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11058
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[3].union.indexFlags(),
			}
		}
	case 1868:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11068
		{
			sqlVAL.union.val = true
		}
	case 1869:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11072
		{
			sqlVAL.union.val = false
		}
	case 1870:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11078
		{
			sqlVAL.union.val = true
		}
	case 1871:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11082
		{
			sqlVAL.union.val = false
		}
	case 1872:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11088
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1874:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11095
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1875:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11107
		{
			if bounds := sqlDollar[2].union.int32s(); bounds != nil {
				var err error
				sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), bounds)
				if err != nil {
					return setErr(sqllex, err)
				}
			} else {
				sqlVAL.union.val = sqlDollar[1].union.typeReference()
			}
		}
	case 1876:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11120
		{

			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1877:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11128
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1878:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11129
		{
			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1879:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11139
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1880:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11146
		{
			sqlVAL.union.val = []int32{-1}
		}
	case 1881:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11147
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1882:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11149
		{

			bound, err := sqlDollar[2].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = []int32{bound}
		}
	case 1883:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11157
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1884:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11158
		{
			sqlVAL.union.val = []int32(nil)
		}
	case 1886:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11170
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1887:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11177
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1888:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11186
		{

			if sqlDollar[1].str == "char" {
				sqlVAL.union.val = types.QChar
			} else if sqlDollar[1].str == "serial" {
				switch sqllex.(*lexer).nakedIntType.Width() {
				case 32:
					sqlVAL.union.val = &types.Serial4Type
				default:
					sqlVAL.union.val = &types.Serial8Type
				}
			} else {

				var ok bool
				var err error
				var unimp int
				sqlVAL.union.val, ok, unimp = types.TypeForNonKeywordTypeName(sqlDollar[1].str)
				if !ok {
					switch unimp {
					case 0:

						aIdx := sqllex.(*lexer).NewAnnotation()
						sqlVAL.union.val, err = tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
						if err != nil {
							return setErr(sqllex, err)
						}
					case -1:
						return unimplemented(sqllex, "type name "+sqlDollar[1].str)
					default:
						return unimplementedWithIssueDetail(sqllex, unimp, sqlDollar[1].str)
					}
				}
			}
		}
	case 1889:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11226
		{
			id := sqlDollar[2].union.int32()
			sqlVAL.union.val = &tree.OIDTypeReference{OID: oid.Oid(id)}
		}
	case 1890:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11231
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1895:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11238
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "point")
		}
	case 1896:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11239
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "polygon")
		}
	case 1897:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11242
		{
			sqlVAL.union.val = geopb.ShapeType_Point
		}
	case 1898:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11243
		{
			sqlVAL.union.val = geopb.ShapeType_PointM
		}
	case 1899:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11244
		{
			sqlVAL.union.val = geopb.ShapeType_PointZ
		}
	case 1900:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11245
		{
			sqlVAL.union.val = geopb.ShapeType_PointZM
		}
	case 1901:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11246
		{
			sqlVAL.union.val = geopb.ShapeType_LineString
		}
	case 1902:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11247
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringM
		}
	case 1903:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11248
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZ
		}
	case 1904:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11249
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZM
		}
	case 1905:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11250
		{
			sqlVAL.union.val = geopb.ShapeType_Polygon
		}
	case 1906:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11251
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonM
		}
	case 1907:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11252
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZ
		}
	case 1908:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11253
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZM
		}
	case 1909:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11254
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPoint
		}
	case 1910:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11255
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointM
		}
	case 1911:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11256
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZ
		}
	case 1912:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11257
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZM
		}
	case 1913:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11258
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineString
		}
	case 1914:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11259
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringM
		}
	case 1915:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11260
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZ
		}
	case 1916:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11261
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZM
		}
	case 1917:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11262
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygon
		}
	case 1918:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11263
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonM
		}
	case 1919:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11264
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZ
		}
	case 1920:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11265
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZM
		}
	case 1921:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11266
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollection
		}
	case 1922:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11267
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionM
		}
	case 1923:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11268
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZ
		}
	case 1924:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11269
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZM
		}
	case 1925:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11270
		{
			sqlVAL.union.val = geopb.ShapeType_Geometry
		}
	case 1926:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11271
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryM
		}
	case 1927:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11272
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZ
		}
	case 1928:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11273
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZM
		}
	case 1929:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11276
		{
			sqlVAL.union.val = types.Geography
		}
	case 1930:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11277
		{
			sqlVAL.union.val = types.Geometry
		}
	case 1931:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11278
		{
			sqlVAL.union.val = types.Box2D
		}
	case 1932:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11280
		{
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1933:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11284
		{
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1934:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11288
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1935:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11296
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1941:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11322
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), 0)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1942:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11330
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), sqlDollar[4].union.int32())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1943:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11338
		{
			sqlVAL.union.val = nil
		}
	case 1944:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11345
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1945:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11349
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1946:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11353
		{
			sqlVAL.union.val = types.Int2
		}
	case 1947:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11357
		{
			sqlVAL.union.val = types.Int
		}
	case 1948:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11361
		{
			sqlVAL.union.val = types.Float4
		}
	case 1949:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11365
		{
			sqlVAL.union.val = sqlDollar[2].union.colType()
		}
	case 1950:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11369
		{
			sqlVAL.union.val = types.Float
		}
	case 1951:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11373
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1952:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11381
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1953:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11389
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1954:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11397
		{
			sqlVAL.union.val = types.Bool
		}
	case 1955:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11403
		{
			nv := sqlDollar[2].union.numVal()
			prec, err := nv.AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			typ, err := newFloat(prec)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = typ
		}
	case 1956:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11416
		{
			sqlVAL.union.val = types.Float
		}
	case 1957:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11422
		{
			bit, err := newBitType(sqlDollar[4].union.int32(), sqlDollar[2].union.bool())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1958:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11428
		{
			bit, err := newBitType(sqlDollar[3].union.int32(), true)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1959:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11436
		{
			sqlVAL.union.val = types.MakeBit(1)
		}
	case 1960:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11440
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1961:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11444
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1962:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11450
		{
			colTyp := *sqlDollar[1].union.colType()
			n := sqlDollar[3].union.int32()
			if n == 0 {
				sqllex.Error(fmt.Sprintf("length for type %s must be at least 1", colTyp.SQLString()))
				return 1
			}
			sqlVAL.union.val = types.MakeScalar(types.StringFamily, colTyp.Oid(), colTyp.Precision(), n, colTyp.Locale())
		}
	case 1963:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11462
		{
			sqlVAL.union.val = sqlDollar[1].union.colType()
		}
	case 1964:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11468
		{
			sqlVAL.union.val = types.MakeChar(1)
		}
	case 1965:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11472
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1966:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11476
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1967:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11480
		{
			sqlVAL.union.val = types.String
		}
	case 1970:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11489
		{
			sqlVAL.union.val = true
		}
	case 1971:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11490
		{
			sqlVAL.union.val = false
		}
	case 1972:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11495
		{
			sqlVAL.union.val = types.Date
		}
	case 1973:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11499
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimeTZ
			} else {
				sqlVAL.union.val = types.Time
			}
		}
	case 1974:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11507
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimeTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTime(prec)
			}
		}
	case 1975:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11519
		{
			sqlVAL.union.val = types.TimeTZ
		}
	case 1976:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11521
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimeTZ(prec)
		}
	case 1977:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11530
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimestampTZ
			} else {
				sqlVAL.union.val = types.Timestamp
			}
		}
	case 1978:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11538
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimestampTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTimestamp(prec)
			}
		}
	case 1979:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11551
		{
			sqlVAL.union.val = types.TimestampTZ
		}
	case 1980:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11555
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimestampTZ(prec)
		}
	case 1981:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11565
		{
			sqlVAL.union.val = true
		}
	case 1982:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11566
		{
			sqlVAL.union.val = false
		}
	case 1983:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11567
		{
			sqlVAL.union.val = false
		}
	case 1984:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11571
		{
			sqlVAL.union.val = types.Interval
		}
	case 1985:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11575
		{
			sqlVAL.union.val = types.MakeInterval(sqlDollar[2].union.intervalTypeMetadata())
		}
	case 1986:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11579
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeInterval(types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true})
		}
	case 1987:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11590
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_YEAR,
				},
			}
		}
	case 1988:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11598
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1989:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11606
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_DAY,
				},
			}
		}
	case 1990:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11614
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1991:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11622
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1992:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11630
		{
			sqlVAL.union.val = sqlDollar[1].union.intervalTypeMetadata()
		}
	case 1993:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11636
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_YEAR,
					DurationType:     types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1994:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11645
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1995:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11654
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1996:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11663
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_DAY
			sqlVAL.union.val = ret
		}
	case 1997:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11669
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_HOUR,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1998:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11678
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_HOUR
			sqlVAL.union.val = ret
		}
	case 1999:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11684
		{
			sqlVAL.union.val = sqlDollar[3].union.intervalTypeMetadata()
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_MINUTE
			sqlVAL.union.val = ret
		}
	case 2001:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11694
		{
			sqlVAL.union.val = nil
		}
	case 2002:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11700
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
			}
		}
	case 2003:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11708
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
				PrecisionIsSet: true,
				Precision:      prec,
			}
		}
	case 2005:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11745
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 2006:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11749
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 2007:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11753
		{
			sqlVAL.union.val = &tree.CollateExpr{Expr: sqlDollar[1].union.expr(), Locale: sqlDollar[3].str}
		}
	case 2008:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11757
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("timezone"), Exprs: tree.Exprs{sqlDollar[5].union.expr(), sqlDollar[1].union.expr()}}
		}
	case 2009:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11768
		{

			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2010:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11773
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 2011:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11777
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryComplement), Expr: sqlDollar[2].union.expr()}
		}
	case 2012:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11781
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnarySqrt), Expr: sqlDollar[2].union.expr()}
		}
	case 2013:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11785
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryCbrt), Expr: sqlDollar[2].union.expr()}
		}
	case 2014:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11789
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Plus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2015:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11793
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Minus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2016:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11797
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Mult), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2017:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11801
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Div), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2018:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11805
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.FloorDiv), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2019:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11809
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Mod), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2020:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11813
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Pow), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2021:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11817
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitxor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2022:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11821
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitand), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2023:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11825
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2024:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11829
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.LT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2025:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11833
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.GT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2026:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11837
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.JSONExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2027:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11841
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.JSONSomeExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2028:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11845
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.JSONAllExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2029:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11849
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.Contains), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2030:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11853
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.ContainedBy), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2031:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11857
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.EQ), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2032:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11861
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Concat), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2033:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11865
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.LShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2034:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11869
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.RShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2035:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11873
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.JSONFetchVal), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2036:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11877
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.JSONFetchText), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2037:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11881
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.JSONFetchValPath), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2038:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11885
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.JSONFetchTextPath), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2039:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11889
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("json_remove_path"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 2040:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11893
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contained_by_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 2041:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11897
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.Overlaps), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2042:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11901
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contains_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 2043:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11905
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.LE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2044:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11909
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.GE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2045:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11913
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2046:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11917
		{
			var retCode int
			sqlVAL.union.val, retCode = processUnaryQualOp(sqllex, sqlDollar[1].union.op(), sqlDollar[2].union.expr())
			if retCode != 0 {
				return retCode
			}
		}
	case 2047:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11925
		{
			{
				var retCode int
				sqlVAL.union.val, retCode = processBinaryQualOp(sqllex, sqlDollar[2].union.op(), sqlDollar[1].union.expr(), sqlDollar[3].union.expr())
				if retCode != 0 {
					return retCode
				}
			}
		}
	case 2048:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11935
		{
			sqlVAL.union.val = &tree.AndExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2049:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11939
		{
			sqlVAL.union.val = &tree.OrExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2050:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11943
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 2051:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11947
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 2052:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11951
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.Like), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2053:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11955
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 2054:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11959
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotLike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 2055:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11963
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 2056:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11967
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.ILike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2057:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11971
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 2058:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11975
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotILike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 2059:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11979
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 2060:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11983
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.SimilarTo), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 2061:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11987
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 2062:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11991
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotSimilarTo), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 2063:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11995
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[5].union.expr(), sqlDollar[7].union.expr()}}
		}
	case 2064:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11999
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.RegMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2065:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12003
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotRegMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2066:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12007
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.RegIMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2067:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12011
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotRegIMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2068:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12015
		{
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator: treecmp.MakeComparisonOperator(treecmp.EQ),
				Left:     sqlDollar[1].union.expr(),
				Right:    tree.NewNumVal(constant.MakeFloat64(math.NaN()), "NaN", false),
			}
		}
	case 2069:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12023
		{
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator: treecmp.MakeComparisonOperator(treecmp.NE),
				Left:     sqlDollar[1].union.expr(),
				Right:    tree.NewNumVal(constant.MakeFloat64(math.NaN()), "NaN", false),
			}
		}
	case 2070:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12031
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2071:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12035
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2072:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12039
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2073:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12043
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2074:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12046
		{
			return unimplemented(sqllex, "overlaps")
		}
	case 2075:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12048
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 2076:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12052
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 2077:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12056
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 2078:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12060
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 2079:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12064
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 2080:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12068
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 2081:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12072
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 2082:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12076
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 2083:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12080
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 2084:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12084
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 2085:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12088
		{
			sqlVAL.union.val = &tree.RangeCond{Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 2086:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12092
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 2087:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12096
		{
			sqlVAL.union.val = &tree.RangeCond{Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 2088:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12100
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 2089:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12104
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.In), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2090:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12108
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotIn), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 2091:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12112
		{
			op := sqlDollar[3].union.cmpOp()
			subOp := sqlDollar[2].union.op()
			subOpCmp, ok := subOp.(treecmp.ComparisonOperator)
			if !ok {
				sqllex.Error(fmt.Sprintf("%s %s <array> is invalid because %q is not a boolean operator",
					subOp, op, subOp))
				return 1
			}
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator:    op,
				SubOperator: subOpCmp,
				Left:        sqlDollar[1].union.expr(),
				Right:       sqlDollar[4].union.expr(),
			}
		}
	case 2092:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12129
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 2093:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12134
		{
			return unimplemented(sqllex, "UNIQUE predicate")
		}
	case 2095:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12146
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 2096:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12150
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 2097:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12154
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2098:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12158
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 2099:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12162
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryComplement), Expr: sqlDollar[2].union.expr()}
		}
	case 2100:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12166
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Plus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2101:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12170
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Minus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2102:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12174
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Mult), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2103:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12178
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Div), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2104:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12182
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.FloorDiv), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2105:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12186
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Mod), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2106:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12190
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Pow), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2107:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12194
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitxor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2108:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12198
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitand), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2109:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12202
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2110:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12206
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.LT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2111:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12210
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.GT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2112:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12214
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.EQ), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2113:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12218
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Concat), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2114:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12222
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.LShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2115:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12226
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.RShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2116:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12230
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.LE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2117:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12234
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.GE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2118:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12238
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2119:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12242
		{
			var retCode int
			sqlVAL.union.val, retCode = processUnaryQualOp(sqllex, sqlDollar[1].union.op(), sqlDollar[2].union.expr())
			if retCode != 0 {
				return retCode
			}
		}
	case 2120:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12250
		{
			{
				var retCode int
				sqlVAL.union.val, retCode = processBinaryQualOp(sqllex, sqlDollar[2].union.op(), sqlDollar[1].union.expr(), sqlDollar[3].union.expr())
				if retCode != 0 {
					return retCode
				}
			}
		}
	case 2121:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12260
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 2122:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12264
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 2123:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12268
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 2124:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12272
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 2126:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12286
		{
			sqlVAL.union.val = &tree.IndirectionExpr{
				Expr:        sqlDollar[1].union.expr(),
				Indirection: sqlDollar[2].union.arraySubscripts(),
			}
		}
	case 2128:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12294
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[2].union.selectStmt(), Exists: true}
		}
	case 2129:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12330
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 2130:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12334
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 2131:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12338
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 2132:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12342
		{
			sqlVAL.union.val = tree.NewBytesStrVal(sqlDollar[1].str)
		}
	case 2133:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12346
		{
			d, err := tree.ParseDBitArray(sqlDollar[1].str)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 2134:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12351
		{
			return unimplemented(sqllex, sqlDollar[1].union.unresolvedName().String()+"(...) SCONST")
		}
	case 2135:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12353
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2136:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12357
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2137:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12361
		{
			sqlVAL.union.val = tree.MakeDBool(true)
		}
	case 2138:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12365
		{
			sqlVAL.union.val = tree.MakeDBool(false)
		}
	case 2139:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12369
		{
			sqlVAL.union.val = tree.DNull
		}
	case 2140:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12373
		{
			sqlVAL.union.val = tree.Expr(sqlDollar[1].union.unresolvedName())
		}
	case 2141:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12377
		{
			colNum := sqlDollar[2].union.int64()
			if colNum < 1 || colNum > int64(MaxInt) {
				sqllex.Error(fmt.Sprintf("invalid column ordinal: @%d", colNum))
				return 1
			}
			sqlVAL.union.val = tree.NewOrdinalReference(int(colNum - 1))
		}
	case 2142:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12386
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 2143:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12393
		{
			sqlVAL.union.val = &tree.TupleStar{Expr: sqlDollar[2].union.expr()}
		}
	case 2144:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12397
		{
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ColName: tree.Name(sqlDollar[5].str)}
		}
	case 2145:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12401
		{
			idx, err := sqlDollar[6].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			if idx <= 0 {
				err := errors.New("invalid numeric tuple index: indexes must be > 0")
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ByIndex: true, ColIndex: int(idx - 1)}
		}
	case 2146:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12411
		{
			sqlVAL.union.val = &tree.ParenExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 2148:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12416
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 2149:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12420
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 2150:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12424
		{
			sqlVAL.union.val = &tree.ArrayFlatten{Subquery: &tree.Subquery{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 2151:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12428
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.tuple().Exprs}
		}
	case 2152:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12432
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2153:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12435
		{
			return unimplemented(sqllex, "d_expr grouping")
		}
	case 2154:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12439
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName()}
		}
	case 2155:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12443
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: sqlDollar[3].union.exprs(), OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 2156:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12446
		{
			return unimplemented(sqllex, "variadic")
		}
	case 2157:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:12447
		{
			return unimplemented(sqllex, "variadic")
		}
	case 2158:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12449
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.AllFuncType, Exprs: sqlDollar[4].union.exprs(), OrderBy: sqlDollar[5].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 2159:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12455
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.DistinctFuncType, Exprs: sqlDollar[4].union.exprs()}
		}
	case 2160:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12459
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: tree.Exprs{tree.StarExpr()}}
		}
	case 2161:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12462
		{
			return helpWithFunction(sqllex, sqlDollar[1].union.resolvableFuncRefFromName())
		}
	case 2162:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12471
		{
			name := sqlDollar[1].union.unresolvedName()
			if name.NumParts == 1 {
				typName := name.Parts[0]

				if typName == "char" {
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: types.QChar, SyntaxMode: tree.CastPrepend}
				} else if typName == "serial" {
					switch sqllex.(*lexer).nakedIntType.Width() {
					case 32:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial4Type, SyntaxMode: tree.CastPrepend}
					default:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial8Type, SyntaxMode: tree.CastPrepend}
					}
				} else {

					var typ tree.ResolvableTypeReference
					var ok bool
					var err error
					var unimp int
					typ, ok, unimp = types.TypeForNonKeywordTypeName(typName)
					if !ok {
						switch unimp {
						case 0:

							aIdx := sqllex.(*lexer).NewAnnotation()
							typ, err = name.ToUnresolvedObjectName(aIdx)
							if err != nil {
								return setErr(sqllex, err)
							}
						case -1:
							return unimplemented(sqllex, "type name "+typName)
						default:
							return unimplementedWithIssueDetail(sqllex, unimp, typName)
						}
					}
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: typ, SyntaxMode: tree.CastPrepend}
				}
			} else {
				aIdx := sqllex.(*lexer).NewAnnotation()
				res, err := name.ToUnresolvedObjectName(aIdx)
				if err != nil {
					return setErr(sqllex, err)
				}
				sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: res, SyntaxMode: tree.CastPrepend}
			}
		}
	case 2163:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12524
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: sqlDollar[1].union.colType(), SyntaxMode: tree.CastPrepend}
		}
	case 2164:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12537
		{
			f := sqlDollar[1].union.expr().(*tree.FuncExpr)
			w := sqlDollar[2].union.expr().(*tree.FuncExpr)
			if w.AggType != 0 {
				f.AggType = w.AggType
				f.OrderBy = w.OrderBy
			}
			f.Filter = sqlDollar[3].union.expr()
			f.WindowDef = sqlDollar[4].union.windowDef()
			sqlVAL.union.val = f
		}
	case 2165:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12549
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2166:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12558
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2167:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12559
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2168:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12564
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("pg_collation_for"), Exprs: tree.Exprs{sqlDollar[4].union.expr()}}
		}
	case 2169:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12568
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2170:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12572
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2171:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12578
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_database")}
		}
	case 2172:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12582
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2173:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12586
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2174:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12590
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2175:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12594
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2176:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12598
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2177:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12604
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 2178:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12608
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("session_user")}
		}
	case 2179:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12612
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 2180:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12616
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.CastExplicit}
		}
	case 2181:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12620
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.AnnotateExplicit}
		}
	case 2182:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:12624
		{
			sqlVAL.union.val = &tree.IfExpr{Cond: sqlDollar[3].union.expr(), True: sqlDollar[5].union.expr(), Else: sqlDollar[7].union.expr()}
		}
	case 2183:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:12628
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr(), ErrCode: sqlDollar[7].union.expr()}
		}
	case 2184:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12632
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr()}
		}
	case 2185:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12636
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr()}
		}
	case 2186:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12640
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), ErrCode: sqlDollar[5].union.expr()}
		}
	case 2187:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12644
		{
			sqlVAL.union.val = &tree.NullIfExpr{Expr1: sqlDollar[3].union.expr(), Expr2: sqlDollar[5].union.expr()}
		}
	case 2188:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12648
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "IFNULL", Exprs: tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 2189:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12652
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "COALESCE", Exprs: sqlDollar[3].union.exprs()}
		}
	case 2191:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12659
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2192:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12662
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2193:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12664
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2194:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12667
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2195:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12669
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2196:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12673
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2197:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12676
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2198:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12678
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2199:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12682
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2200:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12685
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2201:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12687
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2202:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12691
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2203:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12694
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2204:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12696
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2205:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12700
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2206:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12703
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2207:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12705
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2208:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12708
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2209:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12710
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2210:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12713
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2211:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12715
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2212:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12718
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2213:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12720
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2214:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12723
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2215:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12725
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2216:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12728
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2217:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12730
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("strpos"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2218:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12734
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2219:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12737
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2220:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12738
		{
			return unimplemented(sqllex, "treat")
		}
	case 2221:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12740
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2222:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12744
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ltrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2223:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12748
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("rtrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2224:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12752
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2225:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12756
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2226:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12759
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2227:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12761
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2228:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12764
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2229:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12770
		{
			sqlVAL.union.val = &tree.FuncExpr{OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.OrderedSetAgg}
		}
	case 2230:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12774
		{
			sqlVAL.union.val = &tree.FuncExpr{}
		}
	case 2231:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12780
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 2232:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12784
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2233:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12791
		{
			sqlVAL.union.val = sqlDollar[2].union.window()
		}
	case 2234:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12795
		{
			sqlVAL.union.val = tree.Window(nil)
		}
	case 2235:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12801
		{
			sqlVAL.union.val = tree.Window{sqlDollar[1].union.windowDef()}
		}
	case 2236:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12805
		{
			sqlVAL.union.val = append(sqlDollar[1].union.window(), sqlDollar[3].union.windowDef())
		}
	case 2237:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12811
		{
			n := sqlDollar[3].union.windowDef()
			n.Name = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = n
		}
	case 2238:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12819
		{
			sqlVAL.union.val = sqlDollar[2].union.windowDef()
		}
	case 2239:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12823
		{
			sqlVAL.union.val = &tree.WindowDef{Name: tree.Name(sqlDollar[2].str)}
		}
	case 2240:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12827
		{
			sqlVAL.union.val = (*tree.WindowDef)(nil)
		}
	case 2241:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12834
		{
			sqlVAL.union.val = &tree.WindowDef{
				RefName:    tree.Name(sqlDollar[2].str),
				Partitions: sqlDollar[3].union.exprs(),
				OrderBy:    sqlDollar[4].union.orderBy(),
				Frame:      sqlDollar[5].union.windowFrame(),
			}
		}
	case 2243:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12854
		{
			sqlVAL.str = ""
		}
	case 2244:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12860
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 2245:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12864
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2246:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12870
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      treewindow.RANGE,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2247:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12878
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      treewindow.ROWS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2248:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12886
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      treewindow.GROUPS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2249:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12894
		{
			sqlVAL.union.val = (*tree.WindowFrame)(nil)
		}
	case 2250:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12900
		{
			startBound := sqlDollar[1].union.windowFrameBound()
			switch {
			case startBound.BoundType == treewindow.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.BoundType == treewindow.OffsetFollowing:
				sqllex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound}
		}
	case 2251:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12913
		{
			startBound := sqlDollar[2].union.windowFrameBound()
			endBound := sqlDollar[4].union.windowFrameBound()
			switch {
			case startBound.BoundType == treewindow.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.BoundType == treewindow.UnboundedPreceding:
				sqllex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.BoundType == treewindow.CurrentRow && endBound.BoundType == treewindow.OffsetPreceding:
				sqllex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.BoundType == treewindow.OffsetFollowing && endBound.BoundType == treewindow.OffsetPreceding:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.BoundType == treewindow.OffsetFollowing && endBound.BoundType == treewindow.CurrentRow:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound, EndBound: endBound}
		}
	case 2252:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12941
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: treewindow.UnboundedPreceding}
		}
	case 2253:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12945
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: treewindow.UnboundedFollowing}
		}
	case 2254:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12949
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: treewindow.CurrentRow}
		}
	case 2255:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12953
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  treewindow.OffsetPreceding,
			}
		}
	case 2256:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12960
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  treewindow.OffsetFollowing,
			}
		}
	case 2257:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12969
		{
			sqlVAL.union.val = treewindow.ExcludeCurrentRow
		}
	case 2258:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12973
		{
			sqlVAL.union.val = treewindow.ExcludeGroup
		}
	case 2259:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12977
		{
			sqlVAL.union.val = treewindow.ExcludeTies
		}
	case 2260:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12981
		{

			sqlVAL.union.val = treewindow.NoExclusion
		}
	case 2261:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12986
		{
			sqlVAL.union.val = treewindow.NoExclusion
		}
	case 2262:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12999
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[3].union.exprs(), Row: true}
		}
	case 2263:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13003
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 2265:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13010
		{
			t := sqlDollar[2].union.tuple()
			labels := sqlDollar[4].union.nameList()
			t.Labels = make([]string, len(labels))
			for i, l := range labels {
				t.Labels[i] = string(l)
			}
			sqlVAL.union.val = t
		}
	case 2266:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13022
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Any)
		}
	case 2267:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13026
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Some)
		}
	case 2268:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13030
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.All)
		}
	case 2269:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13046
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Plus)
		}
	case 2270:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13047
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Minus)
		}
	case 2271:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13048
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Mult)
		}
	case 2272:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13049
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Div)
		}
	case 2273:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13050
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Mod)
		}
	case 2274:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13051
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Pow)
		}
	case 2275:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13052
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.LT)
		}
	case 2276:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13053
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.GT)
		}
	case 2277:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13054
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.EQ)
		}
	case 2278:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13055
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.LE)
		}
	case 2279:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13056
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.GE)
		}
	case 2280:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13057
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NE)
		}
	case 2281:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13059
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.JSONExists)
		}
	case 2282:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13060
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Bitand)
		}
	case 2283:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13061
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Bitor)
		}
	case 2284:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13062
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Bitxor)
		}
	case 2285:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13063
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.FloorDiv)
		}
	case 2286:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13064
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Contains)
		}
	case 2287:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13065
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.ContainedBy)
		}
	case 2288:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13066
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.LShift)
		}
	case 2289:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13067
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.RShift)
		}
	case 2290:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13068
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Concat)
		}
	case 2291:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13069
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.JSONFetchVal)
		}
	case 2292:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13070
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.JSONFetchText)
		}
	case 2293:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13071
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.JSONFetchValPath)
		}
	case 2294:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13072
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.JSONFetchTextPath)
		}
	case 2295:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13073
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.JSONSomeExists)
		}
	case 2296:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13074
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.JSONAllExists)
		}
	case 2297:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13075
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NotRegMatch)
		}
	case 2298:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13076
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.RegIMatch)
		}
	case 2299:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13077
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NotRegIMatch)
		}
	case 2300:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13078
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Overlaps)
		}
	case 2301:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13079
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnaryComplement)
		}
	case 2302:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13080
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnarySqrt)
		}
	case 2303:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13081
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnaryCbrt)
		}
	case 2305:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13086
		{

			if sqlDollar[1].str != "pg_catalog" {
				return unimplementedWithIssue(sqllex, 65017)
			}
			sqlVAL.union = sqlDollar[3].union
		}
	case 2306:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13102
		{
			sqlVAL.union = sqlDollar[3].union
		}
	case 2309:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13109
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Like)
		}
	case 2310:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13110
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NotLike)
		}
	case 2311:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13111
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.ILike)
		}
	case 2312:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13112
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NotILike)
		}
	case 2313:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13135
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2314:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13139
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2315:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13145
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2316:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13149
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2317:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13153
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2318:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13164
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2319:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13168
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2320:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13174
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2321:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13178
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2323:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13185
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2324:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13191
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2325:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13195
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2326:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13201
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference{sqlDollar[1].union.typeReference()}
		}
	case 2327:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13205
		{
			sqlVAL.union.val = append(sqlDollar[1].union.typeReferences(), sqlDollar[3].union.typeReference())
		}
	case 2328:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13211
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2329:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13215
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2330:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13221
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2331:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13225
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2332:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13231
		{
			sqlVAL.union.val = tree.Exprs{tree.NewStrVal(strings.ToLower(sqlDollar[1].str)), sqlDollar[3].union.expr()}
		}
	case 2333:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13235
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2342:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13258
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr(), sqlDollar[4].union.expr()}
		}
	case 2343:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13262
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2344:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13266
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2345:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13272
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2346:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13279
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[1].union.expr()}
		}
	case 2347:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13283
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2348:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13300
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2349:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13304
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2350:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13308
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2351:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13312
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), tree.NewDInt(1), sqlDollar[2].union.expr()}
		}
	case 2352:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13316
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2353:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13322
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2354:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13328
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2355:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13334
		{
			sqlVAL.union.val = append(sqlDollar[3].union.exprs(), sqlDollar[1].union.expr())
		}
	case 2356:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13338
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 2357:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13342
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2358:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13348
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 2360:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13360
		{
			sqlVAL.union.val = &tree.CaseExpr{Expr: sqlDollar[2].union.expr(), Whens: sqlDollar[3].union.whens(), Else: sqlDollar[4].union.expr()}
		}
	case 2361:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13367
		{
			sqlVAL.union.val = []*tree.When{sqlDollar[1].union.when()}
		}
	case 2362:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13371
		{
			sqlVAL.union.val = append(sqlDollar[1].union.whens(), sqlDollar[2].union.when())
		}
	case 2363:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13377
		{
			sqlVAL.union.val = &tree.When{Cond: sqlDollar[2].union.expr(), Val: sqlDollar[4].union.expr()}
		}
	case 2364:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13383
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2365:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13387
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2367:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13394
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2368:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13400
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr()}
		}
	case 2369:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13404
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr(), End: sqlDollar[4].union.expr(), Slice: true}
		}
	case 2371:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13411
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2372:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13417
		{
			sqlVAL.union.val = tree.ArraySubscripts{sqlDollar[1].union.arraySubscript()}
		}
	case 2373:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13421
		{
			sqlVAL.union.val = append(sqlDollar[1].union.arraySubscripts(), sqlDollar[2].union.arraySubscript())
		}
	case 2374:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13426
		{
		}
	case 2375:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13427
		{
		}
	case 2376:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13431
		{
			sqlVAL.union.val = tree.SelectExprs{sqlDollar[1].union.selExpr()}
		}
	case 2377:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13435
		{
			sqlVAL.union.val = append(sqlDollar[1].union.selExprs(), sqlDollar[3].union.selExpr())
		}
	case 2378:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13441
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 2379:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13450
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 2380:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13454
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2381:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13458
		{
			sqlVAL.union.val = tree.StarSelectExpr()
		}
	case 2382:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13466
		{
			sqlVAL.union.val = tree.TableIndexNames{sqlDollar[1].union.newTableIndexName()}
		}
	case 2383:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13470
		{
			sqlVAL.union.val = append(sqlDollar[1].union.newTableIndexNames(), sqlDollar[3].union.newTableIndexName())
		}
	case 2384:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13476
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedName()}
		}
	case 2385:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13480
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedName())
		}
	case 2386:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13499
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: tree.UnrestrictedName(sqlDollar[3].str),
			}
		}
	case 2387:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13507
		{

			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			indexName := tree.UnrestrictedName(name.ObjectName)
			name.ObjectName = ""
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: indexName,
			}
		}
	case 2388:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13530
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2390:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13539
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2391:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13543
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2392:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13547
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2393:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13551
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 1}
		}
	case 2394:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13557
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 2395:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13561
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 2400:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13576
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2401:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13580
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2404:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13592
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2405:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13596
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2406:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13605
		{
			val, err := sqlDollar[1].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2407:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13616
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2408:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13625
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2409:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13633
		{
			var t *types.T
			if sqlDollar[3].union.val == nil {
				t = types.Interval
			} else {
				t = types.MakeInterval(sqlDollar[3].union.intervalTypeMetadata())
			}
			sqlVAL.union.val = &tree.CastExpr{
				Expr: tree.NewStrVal(sqlDollar[2].str),
				Type: t,

				SyntaxMode: tree.CastShort,
			}
		}
	case 2410:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13650
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = &tree.CastExpr{
				Expr: tree.NewStrVal(sqlDollar[5].str),
				Type: types.MakeInterval(
					types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true},
				),

				SyntaxMode: tree.CastShort,
			}
		}
	case 2429:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13735
		{
			sqlVAL.union.val = sqlDollar[1].union.nameList()
		}
	case 2431:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13743
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{SchemaName: tree.Name(sqlDollar[1].str), ExplicitSchema: true}
		}
	case 2432:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13747
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{CatalogName: tree.Name(sqlDollar[1].str), SchemaName: tree.Name(sqlDollar[3].str), ExplicitCatalog: true, ExplicitSchema: true}
		}
	case 2433:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13753
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{sqlDollar[1].union.objectNamePrefix()}
		}
	case 2434:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13757
		{
			sqlVAL.union.val = append(sqlDollar[1].union.objectNamePrefixList(), sqlDollar[3].union.objectNamePrefix())
		}
	case 2436:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13765
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{ExplicitSchema: false}
		}
	case 2442:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13792
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2444:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13799
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 2, Parts: tree.NameParts{sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2445:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13803
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 3, Parts: tree.NameParts{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2446:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:13807
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 4, Parts: tree.NameParts{sqlDollar[7].str, sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2448:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:13821
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 4, Parts: tree.NameParts{"", sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2449:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13825
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2450:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13829
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2451:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13842
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2453:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13851
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2457:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13869
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2458:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13882
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2459:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13889
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2467:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13914
		{
			sqlVAL.str = ""
		}
	case 2468:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13920
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 2469:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13924
		{
			sqlVAL.str = ""
		}
	}
	goto sqlstack /* stack new state and value */
}
