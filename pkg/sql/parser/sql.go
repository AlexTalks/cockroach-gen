// Code generated by goyacc. DO NOT EDIT.
// GENERATED FILE DO NOT EDIT
// Code generated by goyacc -p sql -o sql.go.tmp sql-gen.y. DO NOT EDIT.

//line sql-gen.y:24
package parser

import (
	"fmt"
	__yyfmt__ "fmt"
	"go/constant"
	"math"
	"strings"

	"github.com/cockroachdb/cockroach/pkg/geo/geopb"
	"github.com/cockroachdb/cockroach/pkg/roachpb"
	"github.com/cockroachdb/cockroach/pkg/security"
	"github.com/cockroachdb/cockroach/pkg/sql/lexbase"
	"github.com/cockroachdb/cockroach/pkg/sql/privilege"
	"github.com/cockroachdb/cockroach/pkg/sql/scanner"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree/treebin"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree/treecmp"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree/treewindow"
	"github.com/cockroachdb/cockroach/pkg/sql/types"
	"github.com/cockroachdb/errors"
	"github.com/lib/pq/oid"
)

//line sql-gen.y:24

const MaxUint = ^uint(0)

const MaxInt = int(MaxUint >> 1)

func unimplemented(sqllex sqlLexer, feature string) int {
	sqllex.(*lexer).Unimplemented(feature)
	return 1
}

func purposelyUnimplemented(sqllex sqlLexer, feature string, reason string) int {
	sqllex.(*lexer).PurposelyUnimplemented(feature, reason)
	return 1
}

func setErr(sqllex sqlLexer, err error) int {
	sqllex.(*lexer).setErr(err)
	return 1
}

func unimplementedWithIssue(sqllex sqlLexer, issue int) int {
	sqllex.(*lexer).UnimplementedWithIssue(issue)
	return 1
}

func unimplementedWithIssueDetail(sqllex sqlLexer, issue int, detail string) int {
	sqllex.(*lexer).UnimplementedWithIssueDetail(issue, detail)
	return 1
}

func processBinaryQualOp(
	sqllex sqlLexer,
	op tree.Operator,
	lhs tree.Expr,
	rhs tree.Expr,
) (tree.Expr, int) {
	switch op := op.(type) {
	case treebin.BinaryOperator:
		op.IsExplicitOperator = true
		return &tree.BinaryExpr{Operator: op, Left: lhs, Right: rhs}, 0
	case treecmp.ComparisonOperator:
		op.IsExplicitOperator = true
		return &tree.ComparisonExpr{Operator: op, Left: lhs, Right: rhs}, 0
	case tree.UnaryOperator:

		switch op.Symbol {
		case tree.UnaryComplement:
			return &tree.ComparisonExpr{
				Operator: treecmp.ComparisonOperator{
					Symbol:             treecmp.RegMatch,
					IsExplicitOperator: true,
				},
				Left:  lhs,
				Right: rhs,
			}, 0
		default:
			sqllex.Error(fmt.Sprintf("unknown binary operator %s", op))
			return nil, -1
		}
	default:
		sqllex.Error(fmt.Sprintf("unknown binary operator %s", op))
		return nil, 1
	}
}

func processUnaryQualOp(
	sqllex sqlLexer,
	op tree.Operator,
	expr tree.Expr,
) (tree.Expr, int) {
	e, code := processUnaryQualOpInternal(sqllex, op, expr)
	if code != 0 {
		return e, code
	}
	if e, ok := e.(*tree.UnaryExpr); ok {
		e.Operator.IsExplicitOperator = true
	}
	return e, code
}

func processUnaryQualOpInternal(
	sqllex sqlLexer,
	op tree.Operator,
	expr tree.Expr,
) (tree.Expr, int) {
	switch op := op.(type) {
	case tree.UnaryOperator:
		return &tree.UnaryExpr{Operator: op, Expr: expr}, 0
	case treebin.BinaryOperator:

		switch op.Symbol {
		case treebin.Plus:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryPlus),
				Expr:     expr,
			}, 0
		case treebin.Minus:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryMinus),
				Expr:     expr,
			}, 0
		}
	case treecmp.ComparisonOperator:
		switch op.Symbol {
		case treecmp.RegMatch:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryComplement),
				Expr:     expr,
			}, 0
		}
	}
	sqllex.Error(fmt.Sprintf("unknown unary operator %s", op))
	return nil, 1
}

//line sql-gen.y:168

var _ scanner.ScanSymType = &sqlSymType{}

func (s *sqlSymType) ID() int32 {
	return s.id
}

func (s *sqlSymType) SetID(id int32) {
	s.id = id
}

func (s *sqlSymType) Pos() int32 {
	return s.pos
}

func (s *sqlSymType) SetPos(pos int32) {
	s.pos = pos
}

func (s *sqlSymType) Str() string {
	return s.str
}

func (s *sqlSymType) SetStr(str string) {
	s.str = str
}

func (s *sqlSymType) UnionVal() interface{} {
	return s.union.val
}

func (s *sqlSymType) SetUnionVal(val interface{}) {
	s.union.val = val
}

type sqlSymUnion struct {
	val interface{}
}

func (u *sqlSymUnion) numVal() *tree.NumVal {
	return u.val.(*tree.NumVal)
}
func (u *sqlSymUnion) strVal() *tree.StrVal {
	if stmt, ok := u.val.(*tree.StrVal); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) placeholder() *tree.Placeholder {
	return u.val.(*tree.Placeholder)
}
func (u *sqlSymUnion) auditMode() tree.AuditMode {
	return u.val.(tree.AuditMode)
}
func (u *sqlSymUnion) bool() bool {
	return u.val.(bool)
}
func (u *sqlSymUnion) strPtr() *string {
	return u.val.(*string)
}
func (u *sqlSymUnion) strs() []string {
	return u.val.([]string)
}
func (u *sqlSymUnion) roleSpec() tree.RoleSpec {
	return u.val.(tree.RoleSpec)
}
func (u *sqlSymUnion) roleSpecList() tree.RoleSpecList {
	return u.val.(tree.RoleSpecList)
}
func (u *sqlSymUnion) user() security.SQLUsername {
	return u.val.(security.SQLUsername)
}
func (u *sqlSymUnion) userPtr() *security.SQLUsername {
	return u.val.(*security.SQLUsername)
}
func (u *sqlSymUnion) users() []security.SQLUsername {
	return u.val.([]security.SQLUsername)
}
func (u *sqlSymUnion) newTableIndexName() *tree.TableIndexName {
	tn := u.val.(tree.TableIndexName)
	return &tn
}
func (u *sqlSymUnion) tableIndexName() tree.TableIndexName {
	return u.val.(tree.TableIndexName)
}
func (u *sqlSymUnion) newTableIndexNames() tree.TableIndexNames {
	return u.val.(tree.TableIndexNames)
}
func (u *sqlSymUnion) shardedIndexDef() *tree.ShardedIndexDef {
	return u.val.(*tree.ShardedIndexDef)
}
func (u *sqlSymUnion) nameList() tree.NameList {
	return u.val.(tree.NameList)
}
func (u *sqlSymUnion) enumValueList() tree.EnumValueList {
	return u.val.(tree.EnumValueList)
}
func (u *sqlSymUnion) unresolvedName() *tree.UnresolvedName {
	return u.val.(*tree.UnresolvedName)
}
func (u *sqlSymUnion) unresolvedObjectName() *tree.UnresolvedObjectName {
	return u.val.(*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) unresolvedObjectNames() []*tree.UnresolvedObjectName {
	return u.val.([]*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) functionReference() tree.FunctionReference {
	return u.val.(tree.FunctionReference)
}
func (u *sqlSymUnion) tablePatterns() tree.TablePatterns {
	return u.val.(tree.TablePatterns)
}
func (u *sqlSymUnion) tableNames() tree.TableNames {
	return u.val.(tree.TableNames)
}
func (u *sqlSymUnion) indexFlags() *tree.IndexFlags {
	return u.val.(*tree.IndexFlags)
}
func (u *sqlSymUnion) arraySubscript() *tree.ArraySubscript {
	return u.val.(*tree.ArraySubscript)
}
func (u *sqlSymUnion) arraySubscripts() tree.ArraySubscripts {
	if as, ok := u.val.(tree.ArraySubscripts); ok {
		return as
	}
	return nil
}
func (u *sqlSymUnion) stmt() tree.Statement {
	if stmt, ok := u.val.(tree.Statement); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) cte() *tree.CTE {
	if cte, ok := u.val.(*tree.CTE); ok {
		return cte
	}
	return nil
}
func (u *sqlSymUnion) ctes() []*tree.CTE {
	return u.val.([]*tree.CTE)
}
func (u *sqlSymUnion) with() *tree.With {
	if with, ok := u.val.(*tree.With); ok {
		return with
	}
	return nil
}
func (u *sqlSymUnion) slct() *tree.Select {
	return u.val.(*tree.Select)
}
func (u *sqlSymUnion) selectStmt() tree.SelectStatement {
	return u.val.(tree.SelectStatement)
}
func (u *sqlSymUnion) colDef() *tree.ColumnTableDef {
	return u.val.(*tree.ColumnTableDef)
}
func (u *sqlSymUnion) constraintDef() tree.ConstraintTableDef {
	return u.val.(tree.ConstraintTableDef)
}
func (u *sqlSymUnion) tblDef() tree.TableDef {
	return u.val.(tree.TableDef)
}
func (u *sqlSymUnion) tblDefs() tree.TableDefs {
	return u.val.(tree.TableDefs)
}
func (u *sqlSymUnion) likeTableOption() tree.LikeTableOption {
	return u.val.(tree.LikeTableOption)
}
func (u *sqlSymUnion) likeTableOptionList() []tree.LikeTableOption {
	return u.val.([]tree.LikeTableOption)
}
func (u *sqlSymUnion) colQual() tree.NamedColumnQualification {
	return u.val.(tree.NamedColumnQualification)
}
func (u *sqlSymUnion) colQualElem() tree.ColumnQualification {
	return u.val.(tree.ColumnQualification)
}
func (u *sqlSymUnion) colQuals() []tree.NamedColumnQualification {
	return u.val.([]tree.NamedColumnQualification)
}
func (u *sqlSymUnion) storageParam() tree.StorageParam {
	return u.val.(tree.StorageParam)
}
func (u *sqlSymUnion) storageParams() []tree.StorageParam {
	if params, ok := u.val.([]tree.StorageParam); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) storageParamKeys() []tree.Name {
	if params, ok := u.val.([]tree.Name); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) persistence() tree.Persistence {
	return u.val.(tree.Persistence)
}
func (u *sqlSymUnion) colType() *types.T {
	if colType, ok := u.val.(*types.T); ok && colType != nil {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) tableRefCols() []tree.ColumnID {
	if refCols, ok := u.val.([]tree.ColumnID); ok {
		return refCols
	}
	return nil
}
func (u *sqlSymUnion) colTypes() []*types.T {
	return u.val.([]*types.T)
}
func (u *sqlSymUnion) int32() int32 {
	return u.val.(int32)
}
func (u *sqlSymUnion) int64() int64 {
	return u.val.(int64)
}
func (u *sqlSymUnion) seqOpt() tree.SequenceOption {
	return u.val.(tree.SequenceOption)
}
func (u *sqlSymUnion) seqOpts() []tree.SequenceOption {
	return u.val.([]tree.SequenceOption)
}
func (u *sqlSymUnion) expr() tree.Expr {
	if expr, ok := u.val.(tree.Expr); ok {
		return expr
	}
	return nil
}
func (u *sqlSymUnion) exprs() tree.Exprs {
	return u.val.(tree.Exprs)
}
func (u *sqlSymUnion) selExpr() tree.SelectExpr {
	return u.val.(tree.SelectExpr)
}
func (u *sqlSymUnion) selExprs() tree.SelectExprs {
	return u.val.(tree.SelectExprs)
}
func (u *sqlSymUnion) retClause() tree.ReturningClause {
	return u.val.(tree.ReturningClause)
}
func (u *sqlSymUnion) aliasClause() tree.AliasClause {
	return u.val.(tree.AliasClause)
}
func (u *sqlSymUnion) asOfClause() tree.AsOfClause {
	return u.val.(tree.AsOfClause)
}
func (u *sqlSymUnion) tblExpr() tree.TableExpr {
	return u.val.(tree.TableExpr)
}
func (u *sqlSymUnion) tblExprs() tree.TableExprs {
	return u.val.(tree.TableExprs)
}
func (u *sqlSymUnion) from() tree.From {
	return u.val.(tree.From)
}
func (u *sqlSymUnion) int32s() []int32 {
	return u.val.([]int32)
}
func (u *sqlSymUnion) joinCond() tree.JoinCond {
	return u.val.(tree.JoinCond)
}
func (u *sqlSymUnion) when() *tree.When {
	return u.val.(*tree.When)
}
func (u *sqlSymUnion) whens() []*tree.When {
	return u.val.([]*tree.When)
}
func (u *sqlSymUnion) lockingClause() tree.LockingClause {
	return u.val.(tree.LockingClause)
}
func (u *sqlSymUnion) lockingItem() *tree.LockingItem {
	return u.val.(*tree.LockingItem)
}
func (u *sqlSymUnion) lockingStrength() tree.LockingStrength {
	return u.val.(tree.LockingStrength)
}
func (u *sqlSymUnion) lockingWaitPolicy() tree.LockingWaitPolicy {
	return u.val.(tree.LockingWaitPolicy)
}
func (u *sqlSymUnion) updateExpr() *tree.UpdateExpr {
	return u.val.(*tree.UpdateExpr)
}
func (u *sqlSymUnion) updateExprs() tree.UpdateExprs {
	return u.val.(tree.UpdateExprs)
}
func (u *sqlSymUnion) limit() *tree.Limit {
	return u.val.(*tree.Limit)
}
func (u *sqlSymUnion) targetList() tree.TargetList {
	return u.val.(tree.TargetList)
}
func (u *sqlSymUnion) targetListPtr() *tree.TargetList {
	return u.val.(*tree.TargetList)
}
func (u *sqlSymUnion) privilegeType() privilege.Kind {
	return u.val.(privilege.Kind)
}
func (u *sqlSymUnion) privilegeList() privilege.List {
	return u.val.(privilege.List)
}
func (u *sqlSymUnion) onConflict() *tree.OnConflict {
	return u.val.(*tree.OnConflict)
}
func (u *sqlSymUnion) orderBy() tree.OrderBy {
	return u.val.(tree.OrderBy)
}
func (u *sqlSymUnion) order() *tree.Order {
	return u.val.(*tree.Order)
}
func (u *sqlSymUnion) orders() []*tree.Order {
	return u.val.([]*tree.Order)
}
func (u *sqlSymUnion) groupBy() tree.GroupBy {
	return u.val.(tree.GroupBy)
}
func (u *sqlSymUnion) windowFrame() *tree.WindowFrame {
	return u.val.(*tree.WindowFrame)
}
func (u *sqlSymUnion) windowFrameBounds() tree.WindowFrameBounds {
	return u.val.(tree.WindowFrameBounds)
}
func (u *sqlSymUnion) windowFrameBound() *tree.WindowFrameBound {
	return u.val.(*tree.WindowFrameBound)
}
func (u *sqlSymUnion) windowFrameExclusion() treewindow.WindowFrameExclusion {
	return u.val.(treewindow.WindowFrameExclusion)
}
func (u *sqlSymUnion) distinctOn() tree.DistinctOn {
	return u.val.(tree.DistinctOn)
}
func (u *sqlSymUnion) dir() tree.Direction {
	return u.val.(tree.Direction)
}
func (u *sqlSymUnion) nullsOrder() tree.NullsOrder {
	return u.val.(tree.NullsOrder)
}
func (u *sqlSymUnion) alterChangefeedCmd() tree.AlterChangefeedCmd {
	return u.val.(tree.AlterChangefeedCmd)
}
func (u *sqlSymUnion) alterChangefeedCmds() tree.AlterChangefeedCmds {
	return u.val.(tree.AlterChangefeedCmds)
}
func (u *sqlSymUnion) alterTableCmd() tree.AlterTableCmd {
	return u.val.(tree.AlterTableCmd)
}
func (u *sqlSymUnion) alterTableCmds() tree.AlterTableCmds {
	return u.val.(tree.AlterTableCmds)
}
func (u *sqlSymUnion) alterIndexCmd() tree.AlterIndexCmd {
	return u.val.(tree.AlterIndexCmd)
}
func (u *sqlSymUnion) alterIndexCmds() tree.AlterIndexCmds {
	return u.val.(tree.AlterIndexCmds)
}
func (u *sqlSymUnion) isoLevel() tree.IsolationLevel {
	return u.val.(tree.IsolationLevel)
}
func (u *sqlSymUnion) userPriority() tree.UserPriority {
	return u.val.(tree.UserPriority)
}
func (u *sqlSymUnion) readWriteMode() tree.ReadWriteMode {
	return u.val.(tree.ReadWriteMode)
}
func (u *sqlSymUnion) deferrableMode() tree.DeferrableMode {
	return u.val.(tree.DeferrableMode)
}
func (u *sqlSymUnion) idxElem() tree.IndexElem {
	return u.val.(tree.IndexElem)
}
func (u *sqlSymUnion) idxElems() tree.IndexElemList {
	return u.val.(tree.IndexElemList)
}
func (u *sqlSymUnion) dropBehavior() tree.DropBehavior {
	return u.val.(tree.DropBehavior)
}
func (u *sqlSymUnion) validationBehavior() tree.ValidationBehavior {
	return u.val.(tree.ValidationBehavior)
}
func (u *sqlSymUnion) partitionBy() *tree.PartitionBy {
	return u.val.(*tree.PartitionBy)
}
func (u *sqlSymUnion) partitionByTable() *tree.PartitionByTable {
	return u.val.(*tree.PartitionByTable)
}
func (u *sqlSymUnion) partitionByIndex() *tree.PartitionByIndex {
	return u.val.(*tree.PartitionByIndex)
}
func (u *sqlSymUnion) createTableOnCommitSetting() tree.CreateTableOnCommitSetting {
	return u.val.(tree.CreateTableOnCommitSetting)
}
func (u *sqlSymUnion) listPartition() tree.ListPartition {
	return u.val.(tree.ListPartition)
}
func (u *sqlSymUnion) listPartitions() []tree.ListPartition {
	return u.val.([]tree.ListPartition)
}
func (u *sqlSymUnion) rangePartition() tree.RangePartition {
	return u.val.(tree.RangePartition)
}
func (u *sqlSymUnion) rangePartitions() []tree.RangePartition {
	return u.val.([]tree.RangePartition)
}
func (u *sqlSymUnion) relocateSubject() tree.RelocateSubject {
	return u.val.(tree.RelocateSubject)
}
func (u *sqlSymUnion) setZoneConfig() *tree.SetZoneConfig {
	return u.val.(*tree.SetZoneConfig)
}
func (u *sqlSymUnion) tuples() []*tree.Tuple {
	return u.val.([]*tree.Tuple)
}
func (u *sqlSymUnion) tuple() *tree.Tuple {
	return u.val.(*tree.Tuple)
}
func (u *sqlSymUnion) windowDef() *tree.WindowDef {
	return u.val.(*tree.WindowDef)
}
func (u *sqlSymUnion) window() tree.Window {
	return u.val.(tree.Window)
}
func (u *sqlSymUnion) op() tree.Operator {
	return u.val.(tree.Operator)
}
func (u *sqlSymUnion) cmpOp() treecmp.ComparisonOperator {
	return u.val.(treecmp.ComparisonOperator)
}
func (u *sqlSymUnion) intervalTypeMetadata() types.IntervalTypeMetadata {
	return u.val.(types.IntervalTypeMetadata)
}
func (u *sqlSymUnion) kvOption() tree.KVOption {
	return u.val.(tree.KVOption)
}
func (u *sqlSymUnion) kvOptions() []tree.KVOption {
	if colType, ok := u.val.([]tree.KVOption); ok {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) backupOptions() *tree.BackupOptions {
	return u.val.(*tree.BackupOptions)
}
func (u *sqlSymUnion) replicationOptions() *tree.ReplicationOptions {
	return u.val.(*tree.ReplicationOptions)
}
func (u *sqlSymUnion) copyOptions() *tree.CopyOptions {
	return u.val.(*tree.CopyOptions)
}
func (u *sqlSymUnion) restoreOptions() *tree.RestoreOptions {
	return u.val.(*tree.RestoreOptions)
}
func (u *sqlSymUnion) transactionModes() tree.TransactionModes {
	return u.val.(tree.TransactionModes)
}
func (u *sqlSymUnion) compositeKeyMatchMethod() tree.CompositeKeyMatchMethod {
	return u.val.(tree.CompositeKeyMatchMethod)
}
func (u *sqlSymUnion) referenceAction() tree.ReferenceAction {
	return u.val.(tree.ReferenceAction)
}
func (u *sqlSymUnion) referenceActions() tree.ReferenceActions {
	return u.val.(tree.ReferenceActions)
}
func (u *sqlSymUnion) createStatsOptions() *tree.CreateStatsOptions {
	return u.val.(*tree.CreateStatsOptions)
}
func (u *sqlSymUnion) scrubOptions() tree.ScrubOptions {
	return u.val.(tree.ScrubOptions)
}
func (u *sqlSymUnion) scrubOption() tree.ScrubOption {
	return u.val.(tree.ScrubOption)
}
func (u *sqlSymUnion) resolvableFuncRefFromName() tree.ResolvableFunctionReference {
	return tree.ResolvableFunctionReference{FunctionReference: u.unresolvedName()}
}
func (u *sqlSymUnion) rowsFromExpr() *tree.RowsFromExpr {
	return u.val.(*tree.RowsFromExpr)
}
func (u *sqlSymUnion) stringOrPlaceholderOptList() tree.StringOrPlaceholderOptList {
	return u.val.(tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) listOfStringOrPlaceholderOptList() []tree.StringOrPlaceholderOptList {
	return u.val.([]tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) fullBackupClause() *tree.FullBackupClause {
	return u.val.(*tree.FullBackupClause)
}

func (u *sqlSymUnion) scheduleLabelSpec() *tree.ScheduleLabelSpec {
	return u.val.(*tree.ScheduleLabelSpec)
}

func (u *sqlSymUnion) geoShapeType() geopb.ShapeType {
	return u.val.(geopb.ShapeType)
}
func newNameFromStr(s string) *tree.Name {
	return (*tree.Name)(&s)
}
func (u *sqlSymUnion) typeReference() tree.ResolvableTypeReference {
	return u.val.(tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) typeReferences() []tree.ResolvableTypeReference {
	return u.val.([]tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) alterTypeAddValuePlacement() *tree.AlterTypeAddValuePlacement {
	return u.val.(*tree.AlterTypeAddValuePlacement)
}
func (u *sqlSymUnion) scheduleState() tree.ScheduleState {
	return u.val.(tree.ScheduleState)
}
func (u *sqlSymUnion) executorType() tree.ScheduledJobExecutorType {
	return u.val.(tree.ScheduledJobExecutorType)
}
func (u *sqlSymUnion) refreshDataOption() tree.RefreshDataOption {
	return u.val.(tree.RefreshDataOption)
}
func (u *sqlSymUnion) locality() *tree.Locality {
	return u.val.(*tree.Locality)
}
func (u *sqlSymUnion) survivalGoal() tree.SurvivalGoal {
	return u.val.(tree.SurvivalGoal)
}
func (u *sqlSymUnion) dataPlacement() tree.DataPlacement {
	return u.val.(tree.DataPlacement)
}
func (u *sqlSymUnion) objectNamePrefix() tree.ObjectNamePrefix {
	return u.val.(tree.ObjectNamePrefix)
}
func (u *sqlSymUnion) objectNamePrefixList() tree.ObjectNamePrefixList {
	return u.val.(tree.ObjectNamePrefixList)
}
func (u *sqlSymUnion) abbreviatedGrant() tree.AbbreviatedGrant {
	return u.val.(tree.AbbreviatedGrant)
}
func (u *sqlSymUnion) abbreviatedRevoke() tree.AbbreviatedRevoke {
	return u.val.(tree.AbbreviatedRevoke)
}
func (u *sqlSymUnion) alterDefaultPrivilegesTargetObject() tree.AlterDefaultPrivilegesTargetObject {
	return u.val.(tree.AlterDefaultPrivilegesTargetObject)
}
func (u *sqlSymUnion) setVar() *tree.SetVar {
	return u.val.(*tree.SetVar)
}

//line sql-gen.y:897
type sqlSymType struct {
	yys   int
	id    int32
	pos   int32
	str   string
	union sqlSymUnion
}

const IDENT = lexbase.IDENT
const SCONST = lexbase.SCONST
const BCONST = lexbase.BCONST
const BITCONST = lexbase.BITCONST
const ICONST = lexbase.ICONST
const FCONST = lexbase.FCONST
const PLACEHOLDER = lexbase.PLACEHOLDER
const TYPECAST = lexbase.TYPECAST
const TYPEANNOTATE = lexbase.TYPEANNOTATE
const DOT_DOT = lexbase.DOT_DOT
const LESS_EQUALS = lexbase.LESS_EQUALS
const GREATER_EQUALS = lexbase.GREATER_EQUALS
const NOT_EQUALS = lexbase.NOT_EQUALS
const NOT_REGMATCH = lexbase.NOT_REGMATCH
const REGIMATCH = lexbase.REGIMATCH
const NOT_REGIMATCH = lexbase.NOT_REGIMATCH
const ERROR = lexbase.ERROR
const ABORT = lexbase.ABORT
const ACCESS = lexbase.ACCESS
const ACTION = lexbase.ACTION
const ADD = lexbase.ADD
const ADMIN = lexbase.ADMIN
const AFTER = lexbase.AFTER
const AGGREGATE = lexbase.AGGREGATE
const ALL = lexbase.ALL
const ALTER = lexbase.ALTER
const ALWAYS = lexbase.ALWAYS
const ANALYSE = lexbase.ANALYSE
const ANALYZE = lexbase.ANALYZE
const AND = lexbase.AND
const AND_AND = lexbase.AND_AND
const ANY = lexbase.ANY
const ANNOTATE_TYPE = lexbase.ANNOTATE_TYPE
const ARRAY = lexbase.ARRAY
const AS = lexbase.AS
const ASC = lexbase.ASC
const ASYMMETRIC = lexbase.ASYMMETRIC
const AT = lexbase.AT
const ATTRIBUTE = lexbase.ATTRIBUTE
const AUTHORIZATION = lexbase.AUTHORIZATION
const AUTOMATIC = lexbase.AUTOMATIC
const AVAILABILITY = lexbase.AVAILABILITY
const BACKUP = lexbase.BACKUP
const BACKUPS = lexbase.BACKUPS
const BEFORE = lexbase.BEFORE
const BEGIN = lexbase.BEGIN
const BETWEEN = lexbase.BETWEEN
const BIGINT = lexbase.BIGINT
const BIGSERIAL = lexbase.BIGSERIAL
const BINARY = lexbase.BINARY
const BIT = lexbase.BIT
const BUCKET_COUNT = lexbase.BUCKET_COUNT
const BOOLEAN = lexbase.BOOLEAN
const BOTH = lexbase.BOTH
const BOX2D = lexbase.BOX2D
const BUNDLE = lexbase.BUNDLE
const BY = lexbase.BY
const CACHE = lexbase.CACHE
const CANCEL = lexbase.CANCEL
const CANCELQUERY = lexbase.CANCELQUERY
const CASCADE = lexbase.CASCADE
const CASE = lexbase.CASE
const CAST = lexbase.CAST
const CBRT = lexbase.CBRT
const CHANGEFEED = lexbase.CHANGEFEED
const CHAR = lexbase.CHAR
const CHARACTER = lexbase.CHARACTER
const CHARACTERISTICS = lexbase.CHARACTERISTICS
const CHECK = lexbase.CHECK
const CLOSE = lexbase.CLOSE
const CLUSTER = lexbase.CLUSTER
const COALESCE = lexbase.COALESCE
const COLLATE = lexbase.COLLATE
const COLLATION = lexbase.COLLATION
const COLUMN = lexbase.COLUMN
const COLUMNS = lexbase.COLUMNS
const COMMENT = lexbase.COMMENT
const COMMENTS = lexbase.COMMENTS
const COMMIT = lexbase.COMMIT
const COMMITTED = lexbase.COMMITTED
const COMPACT = lexbase.COMPACT
const COMPLETE = lexbase.COMPLETE
const CONCAT = lexbase.CONCAT
const CONCURRENTLY = lexbase.CONCURRENTLY
const CONFIGURATION = lexbase.CONFIGURATION
const CONFIGURATIONS = lexbase.CONFIGURATIONS
const CONFIGURE = lexbase.CONFIGURE
const CONFLICT = lexbase.CONFLICT
const CONNECTION = lexbase.CONNECTION
const CONSTRAINT = lexbase.CONSTRAINT
const CONSTRAINTS = lexbase.CONSTRAINTS
const CONTAINS = lexbase.CONTAINS
const CONTROLCHANGEFEED = lexbase.CONTROLCHANGEFEED
const CONTROLJOB = lexbase.CONTROLJOB
const CONVERSION = lexbase.CONVERSION
const CONVERT = lexbase.CONVERT
const COPY = lexbase.COPY
const COVERING = lexbase.COVERING
const CREATE = lexbase.CREATE
const CREATEDB = lexbase.CREATEDB
const CREATELOGIN = lexbase.CREATELOGIN
const CREATEROLE = lexbase.CREATEROLE
const CROSS = lexbase.CROSS
const CSV = lexbase.CSV
const CUBE = lexbase.CUBE
const CURRENT = lexbase.CURRENT
const CURRENT_CATALOG = lexbase.CURRENT_CATALOG
const CURRENT_DATE = lexbase.CURRENT_DATE
const CURRENT_SCHEMA = lexbase.CURRENT_SCHEMA
const CURRENT_ROLE = lexbase.CURRENT_ROLE
const CURRENT_TIME = lexbase.CURRENT_TIME
const CURRENT_TIMESTAMP = lexbase.CURRENT_TIMESTAMP
const CURRENT_USER = lexbase.CURRENT_USER
const CURSOR = lexbase.CURSOR
const CYCLE = lexbase.CYCLE
const DATA = lexbase.DATA
const DATABASE = lexbase.DATABASE
const DATABASES = lexbase.DATABASES
const DATE = lexbase.DATE
const DAY = lexbase.DAY
const DEBUG_PAUSE_ON = lexbase.DEBUG_PAUSE_ON
const DEC = lexbase.DEC
const DECIMAL = lexbase.DECIMAL
const DEFAULT = lexbase.DEFAULT
const DEFAULTS = lexbase.DEFAULTS
const DEALLOCATE = lexbase.DEALLOCATE
const DECLARE = lexbase.DECLARE
const DEFERRABLE = lexbase.DEFERRABLE
const DEFERRED = lexbase.DEFERRED
const DELETE = lexbase.DELETE
const DELIMITER = lexbase.DELIMITER
const DESC = lexbase.DESC
const DESTINATION = lexbase.DESTINATION
const DETACHED = lexbase.DETACHED
const DISCARD = lexbase.DISCARD
const DISTINCT = lexbase.DISTINCT
const DO = lexbase.DO
const DOMAIN = lexbase.DOMAIN
const DOUBLE = lexbase.DOUBLE
const DROP = lexbase.DROP
const ELSE = lexbase.ELSE
const ENCODING = lexbase.ENCODING
const ENCRYPTED = lexbase.ENCRYPTED
const ENCRYPTION_PASSPHRASE = lexbase.ENCRYPTION_PASSPHRASE
const END = lexbase.END
const ENUM = lexbase.ENUM
const ENUMS = lexbase.ENUMS
const ESCAPE = lexbase.ESCAPE
const EXCEPT = lexbase.EXCEPT
const EXCLUDE = lexbase.EXCLUDE
const EXCLUDING = lexbase.EXCLUDING
const EXISTS = lexbase.EXISTS
const EXECUTE = lexbase.EXECUTE
const EXECUTION = lexbase.EXECUTION
const EXPERIMENTAL = lexbase.EXPERIMENTAL
const EXPERIMENTAL_FINGERPRINTS = lexbase.EXPERIMENTAL_FINGERPRINTS
const EXPERIMENTAL_REPLICA = lexbase.EXPERIMENTAL_REPLICA
const EXPERIMENTAL_AUDIT = lexbase.EXPERIMENTAL_AUDIT
const EXPERIMENTAL_RELOCATE = lexbase.EXPERIMENTAL_RELOCATE
const EXPIRATION = lexbase.EXPIRATION
const EXPLAIN = lexbase.EXPLAIN
const EXPORT = lexbase.EXPORT
const EXTENSION = lexbase.EXTENSION
const EXTRACT = lexbase.EXTRACT
const EXTRACT_DURATION = lexbase.EXTRACT_DURATION
const FAILURE = lexbase.FAILURE
const FALSE = lexbase.FALSE
const FAMILY = lexbase.FAMILY
const FETCH = lexbase.FETCH
const FETCHVAL = lexbase.FETCHVAL
const FETCHTEXT = lexbase.FETCHTEXT
const FETCHVAL_PATH = lexbase.FETCHVAL_PATH
const FETCHTEXT_PATH = lexbase.FETCHTEXT_PATH
const FILES = lexbase.FILES
const FILTER = lexbase.FILTER
const FIRST = lexbase.FIRST
const FLOAT = lexbase.FLOAT
const FLOAT4 = lexbase.FLOAT4
const FLOAT8 = lexbase.FLOAT8
const FLOORDIV = lexbase.FLOORDIV
const FOLLOWING = lexbase.FOLLOWING
const FOR = lexbase.FOR
const FORCE = lexbase.FORCE
const FORCE_INDEX = lexbase.FORCE_INDEX
const FORCE_ZIGZAG = lexbase.FORCE_ZIGZAG
const FOREIGN = lexbase.FOREIGN
const FROM = lexbase.FROM
const FULL = lexbase.FULL
const FUNCTION = lexbase.FUNCTION
const FUNCTIONS = lexbase.FUNCTIONS
const GENERATED = lexbase.GENERATED
const GEOGRAPHY = lexbase.GEOGRAPHY
const GEOMETRY = lexbase.GEOMETRY
const GEOMETRYM = lexbase.GEOMETRYM
const GEOMETRYZ = lexbase.GEOMETRYZ
const GEOMETRYZM = lexbase.GEOMETRYZM
const GEOMETRYCOLLECTION = lexbase.GEOMETRYCOLLECTION
const GEOMETRYCOLLECTIONM = lexbase.GEOMETRYCOLLECTIONM
const GEOMETRYCOLLECTIONZ = lexbase.GEOMETRYCOLLECTIONZ
const GEOMETRYCOLLECTIONZM = lexbase.GEOMETRYCOLLECTIONZM
const GLOBAL = lexbase.GLOBAL
const GOAL = lexbase.GOAL
const GRANT = lexbase.GRANT
const GRANTS = lexbase.GRANTS
const GREATEST = lexbase.GREATEST
const GROUP = lexbase.GROUP
const GROUPING = lexbase.GROUPING
const GROUPS = lexbase.GROUPS
const HAVING = lexbase.HAVING
const HASH = lexbase.HASH
const HIGH = lexbase.HIGH
const HISTOGRAM = lexbase.HISTOGRAM
const HOUR = lexbase.HOUR
const IDENTITY = lexbase.IDENTITY
const IF = lexbase.IF
const IFERROR = lexbase.IFERROR
const IFNULL = lexbase.IFNULL
const IGNORE_FOREIGN_KEYS = lexbase.IGNORE_FOREIGN_KEYS
const ILIKE = lexbase.ILIKE
const IMMEDIATE = lexbase.IMMEDIATE
const IMPORT = lexbase.IMPORT
const IN = lexbase.IN
const INCLUDE = lexbase.INCLUDE
const INCLUDING = lexbase.INCLUDING
const INCREMENT = lexbase.INCREMENT
const INCREMENTAL = lexbase.INCREMENTAL
const INCREMENTAL_STORAGE = lexbase.INCREMENTAL_STORAGE
const INET = lexbase.INET
const INET_CONTAINED_BY_OR_EQUALS = lexbase.INET_CONTAINED_BY_OR_EQUALS
const INET_CONTAINS_OR_EQUALS = lexbase.INET_CONTAINS_OR_EQUALS
const INDEX = lexbase.INDEX
const INDEXES = lexbase.INDEXES
const INHERITS = lexbase.INHERITS
const INJECT = lexbase.INJECT
const INITIALLY = lexbase.INITIALLY
const INNER = lexbase.INNER
const INSERT = lexbase.INSERT
const INT = lexbase.INT
const INTEGER = lexbase.INTEGER
const INTERSECT = lexbase.INTERSECT
const INTERVAL = lexbase.INTERVAL
const INTO = lexbase.INTO
const INTO_DB = lexbase.INTO_DB
const INVERTED = lexbase.INVERTED
const IS = lexbase.IS
const ISERROR = lexbase.ISERROR
const ISNULL = lexbase.ISNULL
const ISOLATION = lexbase.ISOLATION
const JOB = lexbase.JOB
const JOBS = lexbase.JOBS
const JOIN = lexbase.JOIN
const JSON = lexbase.JSON
const JSONB = lexbase.JSONB
const JSON_SOME_EXISTS = lexbase.JSON_SOME_EXISTS
const JSON_ALL_EXISTS = lexbase.JSON_ALL_EXISTS
const KEY = lexbase.KEY
const KEYS = lexbase.KEYS
const KMS = lexbase.KMS
const KV = lexbase.KV
const LANGUAGE = lexbase.LANGUAGE
const LAST = lexbase.LAST
const LATERAL = lexbase.LATERAL
const LATEST = lexbase.LATEST
const LC_CTYPE = lexbase.LC_CTYPE
const LC_COLLATE = lexbase.LC_COLLATE
const LEADING = lexbase.LEADING
const LEASE = lexbase.LEASE
const LEAST = lexbase.LEAST
const LEFT = lexbase.LEFT
const LESS = lexbase.LESS
const LEVEL = lexbase.LEVEL
const LIKE = lexbase.LIKE
const LIMIT = lexbase.LIMIT
const LINESTRING = lexbase.LINESTRING
const LINESTRINGM = lexbase.LINESTRINGM
const LINESTRINGZ = lexbase.LINESTRINGZ
const LINESTRINGZM = lexbase.LINESTRINGZM
const LIST = lexbase.LIST
const LOCAL = lexbase.LOCAL
const LOCALITY = lexbase.LOCALITY
const LOCALTIME = lexbase.LOCALTIME
const LOCALTIMESTAMP = lexbase.LOCALTIMESTAMP
const LOCKED = lexbase.LOCKED
const LOGIN = lexbase.LOGIN
const LOOKUP = lexbase.LOOKUP
const LOW = lexbase.LOW
const LSHIFT = lexbase.LSHIFT
const MATCH = lexbase.MATCH
const MATERIALIZED = lexbase.MATERIALIZED
const MERGE = lexbase.MERGE
const MINVALUE = lexbase.MINVALUE
const MAXVALUE = lexbase.MAXVALUE
const METHOD = lexbase.METHOD
const MINUTE = lexbase.MINUTE
const MODIFYCLUSTERSETTING = lexbase.MODIFYCLUSTERSETTING
const MONTH = lexbase.MONTH
const MULTILINESTRING = lexbase.MULTILINESTRING
const MULTILINESTRINGM = lexbase.MULTILINESTRINGM
const MULTILINESTRINGZ = lexbase.MULTILINESTRINGZ
const MULTILINESTRINGZM = lexbase.MULTILINESTRINGZM
const MULTIPOINT = lexbase.MULTIPOINT
const MULTIPOINTM = lexbase.MULTIPOINTM
const MULTIPOINTZ = lexbase.MULTIPOINTZ
const MULTIPOINTZM = lexbase.MULTIPOINTZM
const MULTIPOLYGON = lexbase.MULTIPOLYGON
const MULTIPOLYGONM = lexbase.MULTIPOLYGONM
const MULTIPOLYGONZ = lexbase.MULTIPOLYGONZ
const MULTIPOLYGONZM = lexbase.MULTIPOLYGONZM
const NAN = lexbase.NAN
const NAME = lexbase.NAME
const NAMES = lexbase.NAMES
const NATURAL = lexbase.NATURAL
const NEVER = lexbase.NEVER
const NEW_DB_NAME = lexbase.NEW_DB_NAME
const NEXT = lexbase.NEXT
const NO = lexbase.NO
const NOCANCELQUERY = lexbase.NOCANCELQUERY
const NOCONTROLCHANGEFEED = lexbase.NOCONTROLCHANGEFEED
const NOCONTROLJOB = lexbase.NOCONTROLJOB
const NOCREATEDB = lexbase.NOCREATEDB
const NOCREATELOGIN = lexbase.NOCREATELOGIN
const NOCREATEROLE = lexbase.NOCREATEROLE
const NOLOGIN = lexbase.NOLOGIN
const NOMODIFYCLUSTERSETTING = lexbase.NOMODIFYCLUSTERSETTING
const NOSQLLOGIN = lexbase.NOSQLLOGIN
const NO_INDEX_JOIN = lexbase.NO_INDEX_JOIN
const NO_ZIGZAG_JOIN = lexbase.NO_ZIGZAG_JOIN
const NO_FULL_SCAN = lexbase.NO_FULL_SCAN
const NONE = lexbase.NONE
const NONVOTERS = lexbase.NONVOTERS
const NORMAL = lexbase.NORMAL
const NOT = lexbase.NOT
const NOTHING = lexbase.NOTHING
const NOTNULL = lexbase.NOTNULL
const NOVIEWACTIVITY = lexbase.NOVIEWACTIVITY
const NOVIEWACTIVITYREDACTED = lexbase.NOVIEWACTIVITYREDACTED
const NOWAIT = lexbase.NOWAIT
const NULL = lexbase.NULL
const NULLIF = lexbase.NULLIF
const NULLS = lexbase.NULLS
const NUMERIC = lexbase.NUMERIC
const OF = lexbase.OF
const OFF = lexbase.OFF
const OFFSET = lexbase.OFFSET
const OID = lexbase.OID
const OIDS = lexbase.OIDS
const OIDVECTOR = lexbase.OIDVECTOR
const ON = lexbase.ON
const ONLY = lexbase.ONLY
const OPT = lexbase.OPT
const OPTION = lexbase.OPTION
const OPTIONS = lexbase.OPTIONS
const OR = lexbase.OR
const ORDER = lexbase.ORDER
const ORDINALITY = lexbase.ORDINALITY
const OTHERS = lexbase.OTHERS
const OUT = lexbase.OUT
const OUTER = lexbase.OUTER
const OVER = lexbase.OVER
const OVERLAPS = lexbase.OVERLAPS
const OVERLAY = lexbase.OVERLAY
const OWNED = lexbase.OWNED
const OWNER = lexbase.OWNER
const OPERATOR = lexbase.OPERATOR
const PARENT = lexbase.PARENT
const PARTIAL = lexbase.PARTIAL
const PARTITION = lexbase.PARTITION
const PARTITIONS = lexbase.PARTITIONS
const PASSWORD = lexbase.PASSWORD
const PAUSE = lexbase.PAUSE
const PAUSED = lexbase.PAUSED
const PHYSICAL = lexbase.PHYSICAL
const PLACEMENT = lexbase.PLACEMENT
const PLACING = lexbase.PLACING
const PLAN = lexbase.PLAN
const PLANS = lexbase.PLANS
const POINT = lexbase.POINT
const POINTM = lexbase.POINTM
const POINTZ = lexbase.POINTZ
const POINTZM = lexbase.POINTZM
const POLYGON = lexbase.POLYGON
const POLYGONM = lexbase.POLYGONM
const POLYGONZ = lexbase.POLYGONZ
const POLYGONZM = lexbase.POLYGONZM
const POSITION = lexbase.POSITION
const PRECEDING = lexbase.PRECEDING
const PRECISION = lexbase.PRECISION
const PREPARE = lexbase.PREPARE
const PRESERVE = lexbase.PRESERVE
const PRIMARY = lexbase.PRIMARY
const PRIORITY = lexbase.PRIORITY
const PRIVILEGES = lexbase.PRIVILEGES
const PROCEDURAL = lexbase.PROCEDURAL
const PUBLIC = lexbase.PUBLIC
const PUBLICATION = lexbase.PUBLICATION
const QUERIES = lexbase.QUERIES
const QUERY = lexbase.QUERY
const RANGE = lexbase.RANGE
const RANGES = lexbase.RANGES
const READ = lexbase.READ
const REAL = lexbase.REAL
const REASON = lexbase.REASON
const REASSIGN = lexbase.REASSIGN
const RECURSIVE = lexbase.RECURSIVE
const RECURRING = lexbase.RECURRING
const REF = lexbase.REF
const REFERENCES = lexbase.REFERENCES
const REFRESH = lexbase.REFRESH
const REGCLASS = lexbase.REGCLASS
const REGION = lexbase.REGION
const REGIONAL = lexbase.REGIONAL
const REGIONS = lexbase.REGIONS
const REGNAMESPACE = lexbase.REGNAMESPACE
const REGPROC = lexbase.REGPROC
const REGPROCEDURE = lexbase.REGPROCEDURE
const REGROLE = lexbase.REGROLE
const REGTYPE = lexbase.REGTYPE
const REINDEX = lexbase.REINDEX
const RELOCATE = lexbase.RELOCATE
const REMOVE_PATH = lexbase.REMOVE_PATH
const RENAME = lexbase.RENAME
const REPEATABLE = lexbase.REPEATABLE
const REPLACE = lexbase.REPLACE
const REPLICATION = lexbase.REPLICATION
const RELEASE = lexbase.RELEASE
const RESET = lexbase.RESET
const RESTORE = lexbase.RESTORE
const RESTRICT = lexbase.RESTRICT
const RESTRICTED = lexbase.RESTRICTED
const RESUME = lexbase.RESUME
const RETURNING = lexbase.RETURNING
const RETRY = lexbase.RETRY
const REVISION_HISTORY = lexbase.REVISION_HISTORY
const REVOKE = lexbase.REVOKE
const RIGHT = lexbase.RIGHT
const ROLE = lexbase.ROLE
const ROLES = lexbase.ROLES
const ROLLBACK = lexbase.ROLLBACK
const ROLLUP = lexbase.ROLLUP
const ROUTINES = lexbase.ROUTINES
const ROW = lexbase.ROW
const ROWS = lexbase.ROWS
const RSHIFT = lexbase.RSHIFT
const RULE = lexbase.RULE
const RUNNING = lexbase.RUNNING
const SAVEPOINT = lexbase.SAVEPOINT
const SCANS = lexbase.SCANS
const SCATTER = lexbase.SCATTER
const SCHEDULE = lexbase.SCHEDULE
const SCHEDULES = lexbase.SCHEDULES
const SCHEMA = lexbase.SCHEMA
const SCHEMAS = lexbase.SCHEMAS
const SCRUB = lexbase.SCRUB
const SEARCH = lexbase.SEARCH
const SECOND = lexbase.SECOND
const SELECT = lexbase.SELECT
const SEQUENCE = lexbase.SEQUENCE
const SEQUENCES = lexbase.SEQUENCES
const SERIALIZABLE = lexbase.SERIALIZABLE
const SERVER = lexbase.SERVER
const SESSION = lexbase.SESSION
const SESSIONS = lexbase.SESSIONS
const SESSION_USER = lexbase.SESSION_USER
const SET = lexbase.SET
const SETS = lexbase.SETS
const SETTING = lexbase.SETTING
const SETTINGS = lexbase.SETTINGS
const SHARE = lexbase.SHARE
const SHOW = lexbase.SHOW
const SIMILAR = lexbase.SIMILAR
const SIMPLE = lexbase.SIMPLE
const SKIP = lexbase.SKIP
const SKIP_LOCALITIES_CHECK = lexbase.SKIP_LOCALITIES_CHECK
const SKIP_MISSING_FOREIGN_KEYS = lexbase.SKIP_MISSING_FOREIGN_KEYS
const SKIP_MISSING_SEQUENCES = lexbase.SKIP_MISSING_SEQUENCES
const SKIP_MISSING_SEQUENCE_OWNERS = lexbase.SKIP_MISSING_SEQUENCE_OWNERS
const SKIP_MISSING_VIEWS = lexbase.SKIP_MISSING_VIEWS
const SMALLINT = lexbase.SMALLINT
const SMALLSERIAL = lexbase.SMALLSERIAL
const SNAPSHOT = lexbase.SNAPSHOT
const SOME = lexbase.SOME
const SPLIT = lexbase.SPLIT
const SQL = lexbase.SQL
const SQLLOGIN = lexbase.SQLLOGIN
const START = lexbase.START
const STATISTICS = lexbase.STATISTICS
const STATUS = lexbase.STATUS
const STDIN = lexbase.STDIN
const STREAM = lexbase.STREAM
const STRICT = lexbase.STRICT
const STRING = lexbase.STRING
const STORAGE = lexbase.STORAGE
const STORE = lexbase.STORE
const STORED = lexbase.STORED
const STORING = lexbase.STORING
const SUBSTRING = lexbase.SUBSTRING
const SURVIVE = lexbase.SURVIVE
const SURVIVAL = lexbase.SURVIVAL
const SYMMETRIC = lexbase.SYMMETRIC
const SYNTAX = lexbase.SYNTAX
const SYSTEM = lexbase.SYSTEM
const SQRT = lexbase.SQRT
const SUBSCRIPTION = lexbase.SUBSCRIPTION
const STATEMENTS = lexbase.STATEMENTS
const TABLE = lexbase.TABLE
const TABLES = lexbase.TABLES
const TABLESPACE = lexbase.TABLESPACE
const TEMP = lexbase.TEMP
const TEMPLATE = lexbase.TEMPLATE
const TEMPORARY = lexbase.TEMPORARY
const TENANT = lexbase.TENANT
const TESTING_RELOCATE = lexbase.TESTING_RELOCATE
const TEXT = lexbase.TEXT
const THEN = lexbase.THEN
const TIES = lexbase.TIES
const TIME = lexbase.TIME
const TIMETZ = lexbase.TIMETZ
const TIMESTAMP = lexbase.TIMESTAMP
const TIMESTAMPTZ = lexbase.TIMESTAMPTZ
const TO = lexbase.TO
const THROTTLING = lexbase.THROTTLING
const TRAILING = lexbase.TRAILING
const TRACE = lexbase.TRACE
const TRANSACTION = lexbase.TRANSACTION
const TRANSACTIONS = lexbase.TRANSACTIONS
const TREAT = lexbase.TREAT
const TRIGGER = lexbase.TRIGGER
const TRIM = lexbase.TRIM
const TRUE = lexbase.TRUE
const TRUNCATE = lexbase.TRUNCATE
const TRUSTED = lexbase.TRUSTED
const TYPE = lexbase.TYPE
const TYPES = lexbase.TYPES
const TRACING = lexbase.TRACING
const UNBOUNDED = lexbase.UNBOUNDED
const UNCOMMITTED = lexbase.UNCOMMITTED
const UNION = lexbase.UNION
const UNIQUE = lexbase.UNIQUE
const UNKNOWN = lexbase.UNKNOWN
const UNLOGGED = lexbase.UNLOGGED
const UNSPLIT = lexbase.UNSPLIT
const UPDATE = lexbase.UPDATE
const UPSERT = lexbase.UPSERT
const UNTIL = lexbase.UNTIL
const USE = lexbase.USE
const USER = lexbase.USER
const USERS = lexbase.USERS
const USING = lexbase.USING
const UUID = lexbase.UUID
const VALID = lexbase.VALID
const VALIDATE = lexbase.VALIDATE
const VALUE = lexbase.VALUE
const VALUES = lexbase.VALUES
const VARBIT = lexbase.VARBIT
const VARCHAR = lexbase.VARCHAR
const VARIADIC = lexbase.VARIADIC
const VIEW = lexbase.VIEW
const VARYING = lexbase.VARYING
const VIEWACTIVITY = lexbase.VIEWACTIVITY
const VIEWACTIVITYREDACTED = lexbase.VIEWACTIVITYREDACTED
const VIRTUAL = lexbase.VIRTUAL
const VISIBLE = lexbase.VISIBLE
const VOTERS = lexbase.VOTERS
const WHEN = lexbase.WHEN
const WHERE = lexbase.WHERE
const WINDOW = lexbase.WINDOW
const WITH = lexbase.WITH
const WITHIN = lexbase.WITHIN
const WITHOUT = lexbase.WITHOUT
const WORK = lexbase.WORK
const WRITE = lexbase.WRITE
const YEAR = lexbase.YEAR
const ZONE = lexbase.ZONE
const NOT_LA = lexbase.NOT_LA
const NULLS_LA = lexbase.NULLS_LA
const WITH_LA = lexbase.WITH_LA
const AS_LA = lexbase.AS_LA
const GENERATED_ALWAYS = lexbase.GENERATED_ALWAYS
const GENERATED_BY_DEFAULT = lexbase.GENERATED_BY_DEFAULT
const RESET_ALL = lexbase.RESET_ALL
const ROLE_ALL = lexbase.ROLE_ALL
const USER_ALL = lexbase.USER_ALL
const ON_LA = lexbase.ON_LA
const CONTAINED_BY = lexbase.CONTAINED_BY
const POSTFIXOP = lexbase.POSTFIXOP
const INTERVAL_SIMPLE = lexbase.INTERVAL_SIMPLE
const UMINUS = lexbase.UMINUS
const HELPTOKEN = lexbase.HELPTOKEN

var sqlToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENT",
	"SCONST",
	"BCONST",
	"BITCONST",
	"ICONST",
	"FCONST",
	"PLACEHOLDER",
	"TYPECAST",
	"TYPEANNOTATE",
	"DOT_DOT",
	"LESS_EQUALS",
	"GREATER_EQUALS",
	"NOT_EQUALS",
	"NOT_REGMATCH",
	"REGIMATCH",
	"NOT_REGIMATCH",
	"ERROR",
	"ABORT",
	"ACCESS",
	"ACTION",
	"ADD",
	"ADMIN",
	"AFTER",
	"AGGREGATE",
	"ALL",
	"ALTER",
	"ALWAYS",
	"ANALYSE",
	"ANALYZE",
	"AND",
	"AND_AND",
	"ANY",
	"ANNOTATE_TYPE",
	"ARRAY",
	"AS",
	"ASC",
	"ASYMMETRIC",
	"AT",
	"ATTRIBUTE",
	"AUTHORIZATION",
	"AUTOMATIC",
	"AVAILABILITY",
	"BACKUP",
	"BACKUPS",
	"BEFORE",
	"BEGIN",
	"BETWEEN",
	"BIGINT",
	"BIGSERIAL",
	"BINARY",
	"BIT",
	"BUCKET_COUNT",
	"BOOLEAN",
	"BOTH",
	"BOX2D",
	"BUNDLE",
	"BY",
	"CACHE",
	"CANCEL",
	"CANCELQUERY",
	"CASCADE",
	"CASE",
	"CAST",
	"CBRT",
	"CHANGEFEED",
	"CHAR",
	"CHARACTER",
	"CHARACTERISTICS",
	"CHECK",
	"CLOSE",
	"CLUSTER",
	"COALESCE",
	"COLLATE",
	"COLLATION",
	"COLUMN",
	"COLUMNS",
	"COMMENT",
	"COMMENTS",
	"COMMIT",
	"COMMITTED",
	"COMPACT",
	"COMPLETE",
	"CONCAT",
	"CONCURRENTLY",
	"CONFIGURATION",
	"CONFIGURATIONS",
	"CONFIGURE",
	"CONFLICT",
	"CONNECTION",
	"CONSTRAINT",
	"CONSTRAINTS",
	"CONTAINS",
	"CONTROLCHANGEFEED",
	"CONTROLJOB",
	"CONVERSION",
	"CONVERT",
	"COPY",
	"COVERING",
	"CREATE",
	"CREATEDB",
	"CREATELOGIN",
	"CREATEROLE",
	"CROSS",
	"CSV",
	"CUBE",
	"CURRENT",
	"CURRENT_CATALOG",
	"CURRENT_DATE",
	"CURRENT_SCHEMA",
	"CURRENT_ROLE",
	"CURRENT_TIME",
	"CURRENT_TIMESTAMP",
	"CURRENT_USER",
	"CURSOR",
	"CYCLE",
	"DATA",
	"DATABASE",
	"DATABASES",
	"DATE",
	"DAY",
	"DEBUG_PAUSE_ON",
	"DEC",
	"DECIMAL",
	"DEFAULT",
	"DEFAULTS",
	"DEALLOCATE",
	"DECLARE",
	"DEFERRABLE",
	"DEFERRED",
	"DELETE",
	"DELIMITER",
	"DESC",
	"DESTINATION",
	"DETACHED",
	"DISCARD",
	"DISTINCT",
	"DO",
	"DOMAIN",
	"DOUBLE",
	"DROP",
	"ELSE",
	"ENCODING",
	"ENCRYPTED",
	"ENCRYPTION_PASSPHRASE",
	"END",
	"ENUM",
	"ENUMS",
	"ESCAPE",
	"EXCEPT",
	"EXCLUDE",
	"EXCLUDING",
	"EXISTS",
	"EXECUTE",
	"EXECUTION",
	"EXPERIMENTAL",
	"EXPERIMENTAL_FINGERPRINTS",
	"EXPERIMENTAL_REPLICA",
	"EXPERIMENTAL_AUDIT",
	"EXPERIMENTAL_RELOCATE",
	"EXPIRATION",
	"EXPLAIN",
	"EXPORT",
	"EXTENSION",
	"EXTRACT",
	"EXTRACT_DURATION",
	"FAILURE",
	"FALSE",
	"FAMILY",
	"FETCH",
	"FETCHVAL",
	"FETCHTEXT",
	"FETCHVAL_PATH",
	"FETCHTEXT_PATH",
	"FILES",
	"FILTER",
	"FIRST",
	"FLOAT",
	"FLOAT4",
	"FLOAT8",
	"FLOORDIV",
	"FOLLOWING",
	"FOR",
	"FORCE",
	"FORCE_INDEX",
	"FORCE_ZIGZAG",
	"FOREIGN",
	"FROM",
	"FULL",
	"FUNCTION",
	"FUNCTIONS",
	"GENERATED",
	"GEOGRAPHY",
	"GEOMETRY",
	"GEOMETRYM",
	"GEOMETRYZ",
	"GEOMETRYZM",
	"GEOMETRYCOLLECTION",
	"GEOMETRYCOLLECTIONM",
	"GEOMETRYCOLLECTIONZ",
	"GEOMETRYCOLLECTIONZM",
	"GLOBAL",
	"GOAL",
	"GRANT",
	"GRANTS",
	"GREATEST",
	"GROUP",
	"GROUPING",
	"GROUPS",
	"HAVING",
	"HASH",
	"HIGH",
	"HISTOGRAM",
	"HOUR",
	"IDENTITY",
	"IF",
	"IFERROR",
	"IFNULL",
	"IGNORE_FOREIGN_KEYS",
	"ILIKE",
	"IMMEDIATE",
	"IMPORT",
	"IN",
	"INCLUDE",
	"INCLUDING",
	"INCREMENT",
	"INCREMENTAL",
	"INCREMENTAL_STORAGE",
	"INET",
	"INET_CONTAINED_BY_OR_EQUALS",
	"INET_CONTAINS_OR_EQUALS",
	"INDEX",
	"INDEXES",
	"INHERITS",
	"INJECT",
	"INITIALLY",
	"INNER",
	"INSERT",
	"INT",
	"INTEGER",
	"INTERSECT",
	"INTERVAL",
	"INTO",
	"INTO_DB",
	"INVERTED",
	"IS",
	"ISERROR",
	"ISNULL",
	"ISOLATION",
	"JOB",
	"JOBS",
	"JOIN",
	"JSON",
	"JSONB",
	"JSON_SOME_EXISTS",
	"JSON_ALL_EXISTS",
	"KEY",
	"KEYS",
	"KMS",
	"KV",
	"LANGUAGE",
	"LAST",
	"LATERAL",
	"LATEST",
	"LC_CTYPE",
	"LC_COLLATE",
	"LEADING",
	"LEASE",
	"LEAST",
	"LEFT",
	"LESS",
	"LEVEL",
	"LIKE",
	"LIMIT",
	"LINESTRING",
	"LINESTRINGM",
	"LINESTRINGZ",
	"LINESTRINGZM",
	"LIST",
	"LOCAL",
	"LOCALITY",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"LOCKED",
	"LOGIN",
	"LOOKUP",
	"LOW",
	"LSHIFT",
	"MATCH",
	"MATERIALIZED",
	"MERGE",
	"MINVALUE",
	"MAXVALUE",
	"METHOD",
	"MINUTE",
	"MODIFYCLUSTERSETTING",
	"MONTH",
	"MULTILINESTRING",
	"MULTILINESTRINGM",
	"MULTILINESTRINGZ",
	"MULTILINESTRINGZM",
	"MULTIPOINT",
	"MULTIPOINTM",
	"MULTIPOINTZ",
	"MULTIPOINTZM",
	"MULTIPOLYGON",
	"MULTIPOLYGONM",
	"MULTIPOLYGONZ",
	"MULTIPOLYGONZM",
	"NAN",
	"NAME",
	"NAMES",
	"NATURAL",
	"NEVER",
	"NEW_DB_NAME",
	"NEXT",
	"NO",
	"NOCANCELQUERY",
	"NOCONTROLCHANGEFEED",
	"NOCONTROLJOB",
	"NOCREATEDB",
	"NOCREATELOGIN",
	"NOCREATEROLE",
	"NOLOGIN",
	"NOMODIFYCLUSTERSETTING",
	"NOSQLLOGIN",
	"NO_INDEX_JOIN",
	"NO_ZIGZAG_JOIN",
	"NO_FULL_SCAN",
	"NONE",
	"NONVOTERS",
	"NORMAL",
	"NOT",
	"NOTHING",
	"NOTNULL",
	"NOVIEWACTIVITY",
	"NOVIEWACTIVITYREDACTED",
	"NOWAIT",
	"NULL",
	"NULLIF",
	"NULLS",
	"NUMERIC",
	"OF",
	"OFF",
	"OFFSET",
	"OID",
	"OIDS",
	"OIDVECTOR",
	"ON",
	"ONLY",
	"OPT",
	"OPTION",
	"OPTIONS",
	"OR",
	"ORDER",
	"ORDINALITY",
	"OTHERS",
	"OUT",
	"OUTER",
	"OVER",
	"OVERLAPS",
	"OVERLAY",
	"OWNED",
	"OWNER",
	"OPERATOR",
	"PARENT",
	"PARTIAL",
	"PARTITION",
	"PARTITIONS",
	"PASSWORD",
	"PAUSE",
	"PAUSED",
	"PHYSICAL",
	"PLACEMENT",
	"PLACING",
	"PLAN",
	"PLANS",
	"POINT",
	"POINTM",
	"POINTZ",
	"POINTZM",
	"POLYGON",
	"POLYGONM",
	"POLYGONZ",
	"POLYGONZM",
	"POSITION",
	"PRECEDING",
	"PRECISION",
	"PREPARE",
	"PRESERVE",
	"PRIMARY",
	"PRIORITY",
	"PRIVILEGES",
	"PROCEDURAL",
	"PUBLIC",
	"PUBLICATION",
	"QUERIES",
	"QUERY",
	"RANGE",
	"RANGES",
	"READ",
	"REAL",
	"REASON",
	"REASSIGN",
	"RECURSIVE",
	"RECURRING",
	"REF",
	"REFERENCES",
	"REFRESH",
	"REGCLASS",
	"REGION",
	"REGIONAL",
	"REGIONS",
	"REGNAMESPACE",
	"REGPROC",
	"REGPROCEDURE",
	"REGROLE",
	"REGTYPE",
	"REINDEX",
	"RELOCATE",
	"REMOVE_PATH",
	"RENAME",
	"REPEATABLE",
	"REPLACE",
	"REPLICATION",
	"RELEASE",
	"RESET",
	"RESTORE",
	"RESTRICT",
	"RESTRICTED",
	"RESUME",
	"RETURNING",
	"RETRY",
	"REVISION_HISTORY",
	"REVOKE",
	"RIGHT",
	"ROLE",
	"ROLES",
	"ROLLBACK",
	"ROLLUP",
	"ROUTINES",
	"ROW",
	"ROWS",
	"RSHIFT",
	"RULE",
	"RUNNING",
	"SAVEPOINT",
	"SCANS",
	"SCATTER",
	"SCHEDULE",
	"SCHEDULES",
	"SCHEMA",
	"SCHEMAS",
	"SCRUB",
	"SEARCH",
	"SECOND",
	"SELECT",
	"SEQUENCE",
	"SEQUENCES",
	"SERIALIZABLE",
	"SERVER",
	"SESSION",
	"SESSIONS",
	"SESSION_USER",
	"SET",
	"SETS",
	"SETTING",
	"SETTINGS",
	"SHARE",
	"SHOW",
	"SIMILAR",
	"SIMPLE",
	"SKIP",
	"SKIP_LOCALITIES_CHECK",
	"SKIP_MISSING_FOREIGN_KEYS",
	"SKIP_MISSING_SEQUENCES",
	"SKIP_MISSING_SEQUENCE_OWNERS",
	"SKIP_MISSING_VIEWS",
	"SMALLINT",
	"SMALLSERIAL",
	"SNAPSHOT",
	"SOME",
	"SPLIT",
	"SQL",
	"SQLLOGIN",
	"START",
	"STATISTICS",
	"STATUS",
	"STDIN",
	"STREAM",
	"STRICT",
	"STRING",
	"STORAGE",
	"STORE",
	"STORED",
	"STORING",
	"SUBSTRING",
	"SURVIVE",
	"SURVIVAL",
	"SYMMETRIC",
	"SYNTAX",
	"SYSTEM",
	"SQRT",
	"SUBSCRIPTION",
	"STATEMENTS",
	"TABLE",
	"TABLES",
	"TABLESPACE",
	"TEMP",
	"TEMPLATE",
	"TEMPORARY",
	"TENANT",
	"TESTING_RELOCATE",
	"TEXT",
	"THEN",
	"TIES",
	"TIME",
	"TIMETZ",
	"TIMESTAMP",
	"TIMESTAMPTZ",
	"TO",
	"THROTTLING",
	"TRAILING",
	"TRACE",
	"TRANSACTION",
	"TRANSACTIONS",
	"TREAT",
	"TRIGGER",
	"TRIM",
	"TRUE",
	"TRUNCATE",
	"TRUSTED",
	"TYPE",
	"TYPES",
	"TRACING",
	"UNBOUNDED",
	"UNCOMMITTED",
	"UNION",
	"UNIQUE",
	"UNKNOWN",
	"UNLOGGED",
	"UNSPLIT",
	"UPDATE",
	"UPSERT",
	"UNTIL",
	"USE",
	"USER",
	"USERS",
	"USING",
	"UUID",
	"VALID",
	"VALIDATE",
	"VALUE",
	"VALUES",
	"VARBIT",
	"VARCHAR",
	"VARIADIC",
	"VIEW",
	"VARYING",
	"VIEWACTIVITY",
	"VIEWACTIVITYREDACTED",
	"VIRTUAL",
	"VISIBLE",
	"VOTERS",
	"WHEN",
	"WHERE",
	"WINDOW",
	"WITH",
	"WITHIN",
	"WITHOUT",
	"WORK",
	"WRITE",
	"YEAR",
	"ZONE",
	"NOT_LA",
	"NULLS_LA",
	"WITH_LA",
	"AS_LA",
	"GENERATED_ALWAYS",
	"GENERATED_BY_DEFAULT",
	"RESET_ALL",
	"ROLE_ALL",
	"USER_ALL",
	"ON_LA",
	"'<'",
	"'>'",
	"'='",
	"'~'",
	"CONTAINED_BY",
	"'?'",
	"POSTFIXOP",
	"'|'",
	"'#'",
	"'&'",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"'%'",
	"'^'",
	"INTERVAL_SIMPLE",
	"UMINUS",
	"'['",
	"']'",
	"'('",
	"')'",
	"'.'",
	"HELPTOKEN",
	"'@'",
	"','",
	"'{'",
	"'}'",
	"':'",
}

var sqlStatenames = [...]string{}

const sqlEofCode = 1
const sqlErrCode = 2
const sqlInitialStackSize = 16

//line sql-gen.y:14000

//line yacctab:1
var sqlExca = [...]int{
	-1, 0,
	1, 35,
	-2, 1630,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 57,
	263, 424,
	-2, 0,
	-1, 74,
	245, 252,
	523, 252,
	-2, 0,
	-1, 88,
	234, 1363,
	247, 1363,
	263, 420,
	396, 420,
	407, 1112,
	447, 420,
	460, 1112,
	508, 1112,
	534, 420,
	560, 1112,
	-2, 0,
	-1, 94,
	133, 1630,
	240, 1630,
	545, 1630,
	546, 1630,
	-2, 0,
	-1, 112,
	152, 1601,
	172, 1601,
	185, 1601,
	243, 1601,
	276, 1601,
	347, 1601,
	357, 1601,
	540, 1601,
	-2, 1572,
	-1, 153,
	160, 948,
	262, 948,
	399, 909,
	465, 909,
	507, 909,
	526, 948,
	528, 909,
	-2, 0,
	-1, 157,
	4, 1632,
	21, 1632,
	22, 1632,
	23, 1632,
	24, 1632,
	25, 1632,
	26, 1632,
	27, 1632,
	29, 1632,
	30, 1632,
	36, 1632,
	41, 1632,
	42, 1632,
	44, 1632,
	45, 1632,
	46, 1632,
	47, 1632,
	48, 1632,
	49, 1632,
	50, 1632,
	51, 1632,
	53, 1632,
	54, 1632,
	55, 1632,
	56, 1632,
	58, 1632,
	59, 1632,
	60, 1632,
	61, 1632,
	62, 1632,
	63, 1632,
	64, 1632,
	68, 1632,
	69, 1632,
	70, 1632,
	71, 1632,
	73, 1632,
	74, 1632,
	75, 1632,
	79, 1632,
	80, 1632,
	81, 1632,
	82, 1632,
	83, 1632,
	84, 1632,
	85, 1632,
	88, 1632,
	89, 1632,
	90, 1632,
	91, 1632,
	92, 1632,
	94, 1632,
	96, 1632,
	97, 1632,
	98, 1632,
	99, 1632,
	100, 1632,
	101, 1632,
	103, 1632,
	104, 1632,
	105, 1632,
	107, 1632,
	108, 1632,
	109, 1632,
	117, 1632,
	118, 1632,
	119, 1632,
	120, 1632,
	121, 1632,
	123, 1632,
	124, 1632,
	125, 1632,
	126, 1632,
	128, 1632,
	129, 1632,
	130, 1632,
	132, 1632,
	133, 1632,
	134, 1632,
	136, 1632,
	137, 1632,
	138, 1632,
	141, 1632,
	142, 1632,
	143, 1632,
	145, 1632,
	146, 1632,
	147, 1632,
	149, 1632,
	150, 1632,
	151, 1632,
	153, 1632,
	154, 1632,
	155, 1632,
	156, 1632,
	157, 1632,
	158, 1632,
	159, 1632,
	160, 1632,
	161, 1632,
	162, 1632,
	163, 1632,
	164, 1632,
	165, 1632,
	166, 1632,
	167, 1632,
	168, 1632,
	169, 1632,
	171, 1632,
	177, 1632,
	178, 1632,
	179, 1632,
	180, 1632,
	184, 1632,
	186, 1632,
	187, 1632,
	188, 1632,
	192, 1632,
	193, 1632,
	194, 1632,
	195, 1632,
	196, 1632,
	197, 1632,
	198, 1632,
	199, 1632,
	200, 1632,
	201, 1632,
	202, 1632,
	203, 1632,
	204, 1632,
	205, 1632,
	207, 1632,
	208, 1632,
	210, 1632,
	211, 1632,
	213, 1632,
	214, 1632,
	215, 1632,
	216, 1632,
	217, 1632,
	218, 1632,
	219, 1632,
	220, 1632,
	221, 1632,
	223, 1632,
	224, 1632,
	226, 1632,
	227, 1632,
	228, 1632,
	229, 1632,
	230, 1632,
	234, 1632,
	235, 1632,
	236, 1632,
	237, 1632,
	240, 1632,
	241, 1632,
	242, 1632,
	244, 1632,
	246, 1632,
	247, 1632,
	249, 1632,
	251, 1632,
	252, 1632,
	253, 1632,
	255, 1632,
	259, 1632,
	260, 1632,
	261, 1632,
	262, 1632,
	263, 1632,
	264, 1632,
	266, 1632,
	267, 1632,
	268, 1632,
	270, 1632,
	271, 1632,
	273, 1632,
	274, 1632,
	277, 1632,
	278, 1632,
	279, 1632,
	280, 1632,
	281, 1632,
	282, 1632,
	283, 1632,
	286, 1632,
	287, 1632,
	288, 1632,
	289, 1632,
	291, 1632,
	292, 1632,
	293, 1632,
	294, 1632,
	295, 1632,
	296, 1632,
	297, 1632,
	298, 1632,
	299, 1632,
	300, 1632,
	301, 1632,
	302, 1632,
	303, 1632,
	304, 1632,
	305, 1632,
	306, 1632,
	307, 1632,
	308, 1632,
	309, 1632,
	310, 1632,
	311, 1632,
	312, 1632,
	314, 1632,
	316, 1632,
	317, 1632,
	318, 1632,
	319, 1632,
	320, 1632,
	321, 1632,
	322, 1632,
	323, 1632,
	324, 1632,
	325, 1632,
	326, 1632,
	327, 1632,
	328, 1632,
	329, 1632,
	330, 1632,
	331, 1632,
	333, 1632,
	334, 1632,
	336, 1632,
	338, 1632,
	339, 1632,
	340, 1632,
	342, 1632,
	343, 1632,
	344, 1632,
	345, 1632,
	346, 1632,
	349, 1632,
	352, 1632,
	353, 1632,
	354, 1632,
	355, 1632,
	358, 1632,
	359, 1632,
	360, 1632,
	362, 1632,
	364, 1632,
	365, 1632,
	366, 1632,
	367, 1632,
	368, 1632,
	369, 1632,
	370, 1632,
	371, 1632,
	372, 1632,
	373, 1632,
	374, 1632,
	375, 1632,
	376, 1632,
	378, 1632,
	379, 1632,
	380, 1632,
	381, 1632,
	382, 1632,
	383, 1632,
	384, 1632,
	385, 1632,
	386, 1632,
	387, 1632,
	388, 1632,
	389, 1632,
	390, 1632,
	391, 1632,
	392, 1632,
	394, 1632,
	395, 1632,
	397, 1632,
	398, 1632,
	399, 1632,
	400, 1632,
	401, 1632,
	402, 1632,
	403, 1632,
	404, 1632,
	405, 1632,
	406, 1632,
	407, 1632,
	408, 1632,
	409, 1632,
	411, 1632,
	413, 1632,
	414, 1632,
	415, 1632,
	421, 1632,
	422, 1632,
	424, 1632,
	425, 1632,
	426, 1632,
	427, 1632,
	428, 1632,
	429, 1632,
	430, 1632,
	431, 1632,
	432, 1632,
	433, 1632,
	435, 1632,
	436, 1632,
	437, 1632,
	439, 1632,
	440, 1632,
	441, 1632,
	442, 1632,
	443, 1632,
	444, 1632,
	445, 1632,
	447, 1632,
	448, 1632,
	449, 1632,
	450, 1632,
	451, 1632,
	452, 1632,
	453, 1632,
	454, 1632,
	455, 1632,
	456, 1632,
	457, 1632,
	458, 1632,
	460, 1632,
	461, 1632,
	462, 1632,
	463, 1632,
	464, 1632,
	465, 1632,
	467, 1632,
	468, 1632,
	469, 1632,
	470, 1632,
	471, 1632,
	472, 1632,
	474, 1632,
	475, 1632,
	476, 1632,
	477, 1632,
	478, 1632,
	479, 1632,
	480, 1632,
	481, 1632,
	483, 1632,
	485, 1632,
	486, 1632,
	487, 1632,
	488, 1632,
	489, 1632,
	490, 1632,
	491, 1632,
	492, 1632,
	493, 1632,
	494, 1632,
	495, 1632,
	496, 1632,
	497, 1632,
	498, 1632,
	499, 1632,
	500, 1632,
	501, 1632,
	503, 1632,
	504, 1632,
	506, 1632,
	507, 1632,
	509, 1632,
	510, 1632,
	511, 1632,
	512, 1632,
	513, 1632,
	514, 1632,
	515, 1632,
	516, 1632,
	518, 1632,
	519, 1632,
	520, 1632,
	521, 1632,
	522, 1632,
	524, 1632,
	526, 1632,
	527, 1632,
	528, 1632,
	529, 1632,
	530, 1632,
	531, 1632,
	533, 1632,
	534, 1632,
	535, 1632,
	536, 1632,
	538, 1632,
	539, 1632,
	542, 1632,
	543, 1632,
	544, 1632,
	545, 1632,
	546, 1632,
	547, 1632,
	548, 1632,
	550, 1632,
	553, 1632,
	554, 1632,
	555, 1632,
	556, 1632,
	557, 1632,
	558, 1632,
	560, 1632,
	561, 1632,
	562, 1632,
	563, 1632,
	564, 1632,
	565, 1632,
	566, 1632,
	571, 1632,
	572, 1632,
	573, 1632,
	574, 1632,
	575, 1632,
	576, 1632,
	-2, 0,
	-1, 158,
	1, 1480,
	131, 1480,
	251, 1480,
	335, 1480,
	394, 1480,
	403, 1480,
	580, 1480,
	610, 1480,
	-2, 0,
	-1, 160,
	1, 1480,
	610, 1480,
	-2, 0,
	-1, 161,
	1, 1480,
	610, 1480,
	-2, 0,
	-1, 162,
	1, 1480,
	523, 1480,
	610, 1480,
	-2, 0,
	-1, 193,
	152, 1600,
	172, 1600,
	185, 1600,
	243, 1600,
	276, 1600,
	347, 1600,
	357, 1600,
	540, 1600,
	-2, 1575,
	-1, 240,
	4, 1639,
	5, 1639,
	6, 1639,
	7, 1639,
	8, 1639,
	9, 1639,
	10, 1639,
	21, 1639,
	22, 1639,
	23, 1639,
	24, 1639,
	25, 1639,
	26, 1639,
	27, 1639,
	29, 1639,
	30, 1639,
	36, 1639,
	37, 1639,
	41, 1639,
	42, 1639,
	43, 1639,
	44, 1639,
	45, 1639,
	46, 1639,
	47, 1639,
	48, 1639,
	49, 1639,
	50, 1639,
	51, 1639,
	53, 1639,
	54, 1639,
	55, 1639,
	56, 1639,
	58, 1639,
	59, 1639,
	60, 1639,
	61, 1639,
	62, 1639,
	63, 1639,
	64, 1639,
	65, 1639,
	66, 1639,
	67, 1639,
	68, 1639,
	69, 1639,
	70, 1639,
	71, 1639,
	73, 1639,
	74, 1639,
	75, 1639,
	77, 1639,
	79, 1639,
	80, 1639,
	81, 1639,
	82, 1639,
	83, 1639,
	84, 1639,
	85, 1639,
	88, 1639,
	89, 1639,
	90, 1639,
	91, 1639,
	92, 1639,
	94, 1639,
	96, 1639,
	97, 1639,
	98, 1639,
	99, 1639,
	100, 1639,
	101, 1639,
	103, 1639,
	104, 1639,
	105, 1639,
	106, 1639,
	107, 1639,
	108, 1639,
	109, 1639,
	110, 1639,
	111, 1639,
	112, 1639,
	113, 1639,
	114, 1639,
	115, 1639,
	116, 1639,
	117, 1639,
	118, 1639,
	119, 1639,
	120, 1639,
	121, 1639,
	122, 1639,
	123, 1639,
	124, 1639,
	125, 1639,
	126, 1639,
	127, 1639,
	128, 1639,
	129, 1639,
	130, 1639,
	132, 1639,
	133, 1639,
	134, 1639,
	136, 1639,
	137, 1639,
	138, 1639,
	141, 1639,
	142, 1639,
	143, 1639,
	145, 1639,
	146, 1639,
	147, 1639,
	149, 1639,
	150, 1639,
	151, 1639,
	153, 1639,
	154, 1639,
	155, 1639,
	156, 1639,
	157, 1639,
	158, 1639,
	159, 1639,
	160, 1639,
	161, 1639,
	162, 1639,
	163, 1639,
	164, 1639,
	165, 1639,
	166, 1639,
	167, 1639,
	168, 1639,
	169, 1639,
	170, 1639,
	171, 1639,
	177, 1639,
	178, 1639,
	179, 1639,
	180, 1639,
	184, 1639,
	186, 1639,
	187, 1639,
	188, 1639,
	191, 1639,
	192, 1639,
	193, 1639,
	194, 1639,
	195, 1639,
	196, 1639,
	197, 1639,
	198, 1639,
	199, 1639,
	200, 1639,
	201, 1639,
	202, 1639,
	203, 1639,
	204, 1639,
	205, 1639,
	207, 1639,
	208, 1639,
	210, 1639,
	211, 1639,
	213, 1639,
	214, 1639,
	215, 1639,
	216, 1639,
	217, 1639,
	218, 1639,
	219, 1639,
	220, 1639,
	221, 1639,
	222, 1639,
	223, 1639,
	224, 1639,
	226, 1639,
	227, 1639,
	228, 1639,
	229, 1639,
	230, 1639,
	234, 1639,
	235, 1639,
	236, 1639,
	237, 1639,
	239, 1639,
	240, 1639,
	241, 1639,
	242, 1639,
	244, 1639,
	246, 1639,
	247, 1639,
	248, 1639,
	249, 1639,
	250, 1639,
	251, 1639,
	252, 1639,
	253, 1639,
	254, 1639,
	255, 1639,
	259, 1639,
	260, 1639,
	261, 1639,
	262, 1639,
	263, 1639,
	264, 1639,
	266, 1639,
	267, 1639,
	268, 1639,
	270, 1639,
	271, 1639,
	272, 1639,
	273, 1639,
	274, 1639,
	275, 1639,
	277, 1639,
	278, 1639,
	279, 1639,
	280, 1639,
	281, 1639,
	282, 1639,
	283, 1639,
	284, 1639,
	285, 1639,
	286, 1639,
	287, 1639,
	288, 1639,
	289, 1639,
	291, 1639,
	292, 1639,
	293, 1639,
	294, 1639,
	295, 1639,
	296, 1639,
	297, 1639,
	298, 1639,
	299, 1639,
	300, 1639,
	301, 1639,
	302, 1639,
	303, 1639,
	304, 1639,
	305, 1639,
	306, 1639,
	307, 1639,
	308, 1639,
	309, 1639,
	310, 1639,
	311, 1639,
	312, 1639,
	314, 1639,
	315, 1639,
	316, 1639,
	317, 1639,
	318, 1639,
	319, 1639,
	320, 1639,
	321, 1639,
	322, 1639,
	323, 1639,
	324, 1639,
	325, 1639,
	326, 1639,
	327, 1639,
	328, 1639,
	329, 1639,
	330, 1639,
	331, 1639,
	332, 1639,
	333, 1639,
	334, 1639,
	335, 1639,
	336, 1639,
	337, 1639,
	338, 1639,
	339, 1639,
	340, 1639,
	341, 1639,
	342, 1639,
	343, 1639,
	344, 1639,
	345, 1639,
	346, 1639,
	349, 1639,
	353, 1639,
	354, 1639,
	355, 1639,
	358, 1639,
	359, 1639,
	360, 1639,
	361, 1639,
	362, 1639,
	363, 1639,
	364, 1639,
	365, 1639,
	366, 1639,
	367, 1639,
	368, 1639,
	369, 1639,
	370, 1639,
	371, 1639,
	372, 1639,
	373, 1639,
	374, 1639,
	375, 1639,
	376, 1639,
	378, 1639,
	379, 1639,
	380, 1639,
	381, 1639,
	382, 1639,
	383, 1639,
	384, 1639,
	385, 1639,
	386, 1639,
	387, 1639,
	388, 1639,
	389, 1639,
	390, 1639,
	391, 1639,
	392, 1639,
	394, 1639,
	395, 1639,
	397, 1639,
	398, 1639,
	399, 1639,
	400, 1639,
	401, 1639,
	402, 1639,
	403, 1639,
	404, 1639,
	405, 1639,
	406, 1639,
	407, 1639,
	408, 1639,
	409, 1639,
	411, 1639,
	413, 1639,
	414, 1639,
	415, 1639,
	421, 1639,
	422, 1639,
	424, 1639,
	425, 1639,
	426, 1639,
	427, 1639,
	428, 1639,
	429, 1639,
	430, 1639,
	431, 1639,
	432, 1639,
	433, 1639,
	435, 1639,
	436, 1639,
	437, 1639,
	438, 1639,
	439, 1639,
	440, 1639,
	441, 1639,
	442, 1639,
	443, 1639,
	444, 1639,
	445, 1639,
	447, 1639,
	448, 1639,
	449, 1639,
	450, 1639,
	451, 1639,
	452, 1639,
	453, 1639,
	454, 1639,
	455, 1639,
	456, 1639,
	457, 1639,
	458, 1639,
	460, 1639,
	461, 1639,
	462, 1639,
	463, 1639,
	464, 1639,
	465, 1639,
	466, 1639,
	467, 1639,
	468, 1639,
	469, 1639,
	470, 1639,
	471, 1639,
	472, 1639,
	473, 1639,
	474, 1639,
	475, 1639,
	476, 1639,
	477, 1639,
	478, 1639,
	479, 1639,
	480, 1639,
	481, 1639,
	483, 1639,
	485, 1639,
	486, 1639,
	487, 1639,
	488, 1639,
	489, 1639,
	490, 1639,
	491, 1639,
	492, 1639,
	493, 1639,
	494, 1639,
	495, 1639,
	496, 1639,
	497, 1639,
	498, 1639,
	499, 1639,
	500, 1639,
	501, 1639,
	503, 1639,
	504, 1639,
	505, 1639,
	506, 1639,
	507, 1639,
	509, 1639,
	510, 1639,
	511, 1639,
	512, 1639,
	513, 1639,
	514, 1639,
	515, 1639,
	516, 1639,
	518, 1639,
	519, 1639,
	520, 1639,
	521, 1639,
	522, 1639,
	524, 1639,
	526, 1639,
	527, 1639,
	528, 1639,
	529, 1639,
	530, 1639,
	531, 1639,
	532, 1639,
	533, 1639,
	534, 1639,
	535, 1639,
	536, 1639,
	538, 1639,
	539, 1639,
	541, 1639,
	542, 1639,
	543, 1639,
	544, 1639,
	545, 1639,
	546, 1639,
	547, 1639,
	548, 1639,
	549, 1639,
	550, 1639,
	553, 1639,
	554, 1639,
	555, 1639,
	556, 1639,
	557, 1639,
	558, 1639,
	560, 1639,
	561, 1639,
	562, 1639,
	563, 1639,
	564, 1639,
	565, 1639,
	566, 1639,
	571, 1639,
	572, 1639,
	573, 1639,
	574, 1639,
	575, 1639,
	576, 1639,
	577, 1639,
	590, 1639,
	597, 1639,
	598, 1639,
	599, 1639,
	607, 1639,
	611, 1639,
	-2, 0,
	-1, 759,
	4, 1361,
	21, 1361,
	22, 1361,
	23, 1361,
	24, 1361,
	25, 1361,
	26, 1361,
	27, 1361,
	29, 1361,
	30, 1361,
	36, 1361,
	41, 1361,
	42, 1361,
	44, 1361,
	45, 1361,
	46, 1361,
	47, 1361,
	48, 1361,
	49, 1361,
	50, 1361,
	51, 1361,
	53, 1361,
	54, 1361,
	55, 1361,
	56, 1361,
	58, 1361,
	59, 1361,
	60, 1361,
	61, 1361,
	62, 1361,
	63, 1361,
	64, 1361,
	68, 1361,
	69, 1361,
	70, 1361,
	71, 1361,
	73, 1361,
	74, 1361,
	75, 1361,
	79, 1361,
	80, 1361,
	81, 1361,
	82, 1361,
	83, 1361,
	84, 1361,
	85, 1361,
	88, 1361,
	89, 1361,
	90, 1361,
	91, 1361,
	92, 1361,
	94, 1361,
	96, 1361,
	97, 1361,
	98, 1361,
	99, 1361,
	100, 1361,
	101, 1361,
	103, 1361,
	104, 1361,
	105, 1361,
	107, 1361,
	108, 1361,
	109, 1361,
	117, 1361,
	118, 1361,
	119, 1361,
	120, 1361,
	121, 1361,
	123, 1361,
	124, 1361,
	125, 1361,
	126, 1361,
	128, 1361,
	129, 1361,
	130, 1361,
	132, 1361,
	133, 1361,
	134, 1361,
	136, 1361,
	137, 1361,
	138, 1361,
	141, 1361,
	142, 1361,
	143, 1361,
	145, 1361,
	146, 1361,
	147, 1361,
	149, 1361,
	150, 1361,
	151, 1361,
	153, 1361,
	154, 1361,
	155, 1361,
	156, 1361,
	157, 1361,
	158, 1361,
	159, 1361,
	160, 1361,
	161, 1361,
	162, 1361,
	163, 1361,
	164, 1361,
	165, 1361,
	166, 1361,
	167, 1361,
	168, 1361,
	169, 1361,
	171, 1361,
	177, 1361,
	178, 1361,
	179, 1361,
	180, 1361,
	184, 1361,
	186, 1361,
	187, 1361,
	188, 1361,
	192, 1361,
	193, 1361,
	194, 1361,
	195, 1361,
	196, 1361,
	197, 1361,
	198, 1361,
	199, 1361,
	200, 1361,
	201, 1361,
	202, 1361,
	203, 1361,
	204, 1361,
	205, 1361,
	207, 1361,
	208, 1361,
	210, 1361,
	211, 1361,
	213, 1361,
	214, 1361,
	215, 1361,
	216, 1361,
	217, 1361,
	218, 1361,
	219, 1361,
	220, 1361,
	221, 1361,
	223, 1361,
	224, 1361,
	226, 1361,
	227, 1361,
	228, 1361,
	229, 1361,
	230, 1361,
	234, 1361,
	235, 1361,
	236, 1361,
	237, 1361,
	240, 1361,
	241, 1361,
	242, 1361,
	244, 1361,
	246, 1361,
	247, 1361,
	249, 1361,
	251, 1361,
	252, 1361,
	253, 1361,
	255, 1361,
	259, 1361,
	260, 1361,
	261, 1361,
	262, 1361,
	263, 1361,
	264, 1361,
	266, 1361,
	267, 1361,
	268, 1361,
	270, 1361,
	271, 1361,
	273, 1361,
	274, 1361,
	277, 1361,
	278, 1361,
	279, 1361,
	280, 1361,
	281, 1361,
	282, 1361,
	283, 1361,
	286, 1361,
	287, 1361,
	288, 1361,
	289, 1361,
	291, 1361,
	292, 1361,
	293, 1361,
	294, 1361,
	295, 1361,
	296, 1361,
	297, 1361,
	298, 1361,
	299, 1361,
	300, 1361,
	301, 1361,
	302, 1361,
	303, 1361,
	304, 1361,
	305, 1361,
	306, 1361,
	307, 1361,
	308, 1361,
	309, 1361,
	310, 1361,
	311, 1361,
	312, 1361,
	314, 1361,
	316, 1361,
	317, 1361,
	318, 1361,
	319, 1361,
	320, 1361,
	321, 1361,
	322, 1361,
	323, 1361,
	324, 1361,
	325, 1361,
	326, 1361,
	327, 1361,
	328, 1361,
	329, 1361,
	330, 1361,
	331, 1361,
	333, 1361,
	334, 1361,
	336, 1361,
	338, 1361,
	339, 1361,
	340, 1361,
	342, 1361,
	343, 1361,
	344, 1361,
	345, 1361,
	346, 1361,
	349, 1361,
	353, 1361,
	354, 1361,
	355, 1361,
	358, 1361,
	359, 1361,
	360, 1361,
	362, 1361,
	364, 1361,
	365, 1361,
	366, 1361,
	367, 1361,
	368, 1361,
	369, 1361,
	370, 1361,
	371, 1361,
	372, 1361,
	373, 1361,
	374, 1361,
	375, 1361,
	376, 1361,
	378, 1361,
	379, 1361,
	380, 1361,
	381, 1361,
	382, 1361,
	383, 1361,
	384, 1361,
	385, 1361,
	386, 1361,
	387, 1361,
	388, 1361,
	389, 1361,
	390, 1361,
	391, 1361,
	392, 1361,
	394, 1361,
	395, 1361,
	397, 1361,
	398, 1361,
	399, 1361,
	400, 1361,
	401, 1361,
	402, 1361,
	403, 1361,
	404, 1361,
	405, 1361,
	406, 1361,
	407, 1361,
	408, 1361,
	409, 1361,
	411, 1361,
	413, 1361,
	414, 1361,
	415, 1361,
	421, 1361,
	422, 1361,
	424, 1361,
	425, 1361,
	426, 1361,
	427, 1361,
	428, 1361,
	429, 1361,
	430, 1361,
	431, 1361,
	432, 1361,
	433, 1361,
	435, 1361,
	436, 1361,
	437, 1361,
	439, 1361,
	440, 1361,
	441, 1361,
	442, 1361,
	443, 1361,
	444, 1361,
	445, 1361,
	447, 1361,
	448, 1361,
	449, 1361,
	450, 1361,
	451, 1361,
	452, 1361,
	453, 1361,
	454, 1361,
	455, 1361,
	456, 1361,
	457, 1361,
	458, 1361,
	460, 1361,
	461, 1361,
	462, 1361,
	463, 1361,
	464, 1361,
	465, 1361,
	467, 1361,
	468, 1361,
	469, 1361,
	470, 1361,
	471, 1361,
	472, 1361,
	474, 1361,
	475, 1361,
	476, 1361,
	477, 1361,
	478, 1361,
	479, 1361,
	480, 1361,
	481, 1361,
	483, 1361,
	485, 1361,
	486, 1361,
	487, 1361,
	488, 1361,
	489, 1361,
	490, 1361,
	491, 1361,
	492, 1361,
	493, 1361,
	494, 1361,
	495, 1361,
	496, 1361,
	497, 1361,
	498, 1361,
	499, 1361,
	500, 1361,
	501, 1361,
	503, 1361,
	504, 1361,
	506, 1361,
	507, 1361,
	509, 1361,
	510, 1361,
	511, 1361,
	512, 1361,
	513, 1361,
	514, 1361,
	515, 1361,
	516, 1361,
	518, 1361,
	519, 1361,
	520, 1361,
	521, 1361,
	522, 1361,
	524, 1361,
	526, 1361,
	527, 1361,
	528, 1361,
	529, 1361,
	530, 1361,
	531, 1361,
	533, 1361,
	534, 1361,
	535, 1361,
	536, 1361,
	538, 1361,
	539, 1361,
	542, 1361,
	543, 1361,
	544, 1361,
	545, 1361,
	546, 1361,
	547, 1361,
	548, 1361,
	550, 1361,
	553, 1361,
	554, 1361,
	555, 1361,
	556, 1361,
	557, 1361,
	558, 1361,
	560, 1361,
	561, 1361,
	562, 1361,
	563, 1361,
	564, 1361,
	565, 1361,
	566, 1361,
	571, 1361,
	572, 1361,
	573, 1361,
	574, 1361,
	575, 1361,
	576, 1361,
	-2, 0,
	-1, 778,
	190, 2431,
	523, 2431,
	589, 2431,
	609, 2431,
	-2, 0,
	-1, 779,
	190, 2418,
	523, 2418,
	589, 2418,
	609, 2418,
	-2, 0,
	-1, 781,
	190, 2685,
	523, 2685,
	589, 2685,
	609, 2685,
	-2, 0,
	-1, 784,
	190, 2543,
	523, 2543,
	589, 2543,
	609, 2543,
	-2, 0,
	-1, 785,
	190, 2727,
	523, 2727,
	589, 2727,
	609, 2727,
	-2, 0,
	-1, 793,
	190, 2570,
	523, 2570,
	589, 2570,
	609, 2570,
	-2, 730,
	-1, 829,
	609, 2367,
	612, 2367,
	-2, 1030,
	-1, 830,
	609, 2369,
	612, 2369,
	-2, 1031,
	-1, 831,
	609, 2368,
	612, 2368,
	-2, 1032,
	-1, 832,
	612, 2293,
	-2, 1033,
	-1, 857,
	185, 271,
	-2, 0,
	-1, 881,
	43, 2340,
	-2, 0,
	-1, 882,
	560, 1339,
	-2, 1113,
	-1, 898,
	4, 1773,
	21, 1773,
	22, 1773,
	23, 1773,
	24, 1773,
	25, 1773,
	26, 1773,
	27, 1773,
	29, 1773,
	30, 1773,
	36, 1773,
	41, 1773,
	42, 1773,
	44, 1773,
	45, 1773,
	46, 1773,
	47, 1773,
	48, 1773,
	49, 1773,
	50, 1773,
	51, 1773,
	53, 1773,
	54, 1773,
	55, 1773,
	56, 1773,
	58, 1773,
	59, 1773,
	60, 1773,
	61, 1773,
	62, 1773,
	63, 1773,
	64, 1773,
	68, 1773,
	69, 1773,
	70, 1773,
	71, 1773,
	73, 1773,
	74, 1773,
	75, 1773,
	79, 1773,
	80, 1773,
	81, 1773,
	82, 1773,
	83, 1773,
	84, 1773,
	85, 1773,
	88, 1773,
	89, 1773,
	90, 1773,
	91, 1773,
	92, 1773,
	94, 1773,
	96, 1773,
	97, 1773,
	98, 1773,
	99, 1773,
	100, 1773,
	101, 1773,
	103, 1773,
	104, 1773,
	105, 1773,
	107, 1773,
	108, 1773,
	109, 1773,
	117, 1773,
	118, 1773,
	119, 1773,
	120, 1773,
	121, 1773,
	123, 1773,
	124, 1773,
	125, 1773,
	126, 1773,
	128, 1773,
	129, 1773,
	130, 1773,
	132, 1773,
	133, 1773,
	134, 1773,
	136, 1773,
	137, 1773,
	138, 1773,
	141, 1773,
	142, 1773,
	143, 1773,
	145, 1773,
	146, 1773,
	147, 1773,
	149, 1773,
	150, 1773,
	151, 1773,
	153, 1773,
	154, 1773,
	155, 1773,
	156, 1773,
	157, 1773,
	158, 1773,
	159, 1773,
	160, 1773,
	161, 1773,
	162, 1773,
	163, 1773,
	164, 1773,
	165, 1773,
	166, 1773,
	167, 1773,
	168, 1773,
	169, 1773,
	171, 1773,
	177, 1773,
	178, 1773,
	179, 1773,
	180, 1773,
	184, 1773,
	186, 1773,
	187, 1773,
	188, 1773,
	192, 1773,
	193, 1773,
	194, 1773,
	195, 1773,
	196, 1773,
	197, 1773,
	198, 1773,
	199, 1773,
	200, 1773,
	201, 1773,
	202, 1773,
	203, 1773,
	204, 1773,
	205, 1773,
	207, 1773,
	208, 1773,
	210, 1773,
	211, 1773,
	213, 1773,
	214, 1773,
	215, 1773,
	216, 1773,
	217, 1773,
	218, 1773,
	219, 1773,
	220, 1773,
	221, 1773,
	223, 1773,
	224, 1773,
	226, 1773,
	227, 1773,
	228, 1773,
	229, 1773,
	230, 1773,
	234, 1773,
	235, 1773,
	236, 1773,
	237, 1773,
	240, 1773,
	241, 1773,
	242, 1773,
	244, 1773,
	246, 1773,
	247, 1773,
	249, 1773,
	251, 1773,
	252, 1773,
	253, 1773,
	255, 1773,
	259, 1773,
	260, 1773,
	261, 1773,
	262, 1773,
	263, 1773,
	264, 1773,
	266, 1773,
	267, 1773,
	268, 1773,
	270, 1773,
	271, 1773,
	273, 1773,
	274, 1773,
	277, 1773,
	278, 1773,
	279, 1773,
	280, 1773,
	281, 1773,
	282, 1773,
	283, 1773,
	286, 1773,
	287, 1773,
	288, 1773,
	289, 1773,
	291, 1773,
	292, 1773,
	293, 1773,
	294, 1773,
	295, 1773,
	296, 1773,
	297, 1773,
	298, 1773,
	299, 1773,
	300, 1773,
	301, 1773,
	302, 1773,
	303, 1773,
	304, 1773,
	305, 1773,
	306, 1773,
	307, 1773,
	308, 1773,
	309, 1773,
	310, 1773,
	311, 1773,
	312, 1773,
	314, 1773,
	316, 1773,
	317, 1773,
	318, 1773,
	319, 1773,
	320, 1773,
	321, 1773,
	322, 1773,
	323, 1773,
	324, 1773,
	325, 1773,
	326, 1773,
	327, 1773,
	328, 1773,
	329, 1773,
	330, 1773,
	331, 1773,
	333, 1773,
	334, 1773,
	336, 1773,
	338, 1773,
	339, 1773,
	340, 1773,
	342, 1773,
	343, 1773,
	344, 1773,
	345, 1773,
	346, 1773,
	349, 1773,
	353, 1773,
	354, 1773,
	355, 1773,
	358, 1773,
	359, 1773,
	360, 1773,
	362, 1773,
	364, 1773,
	365, 1773,
	366, 1773,
	367, 1773,
	368, 1773,
	369, 1773,
	370, 1773,
	371, 1773,
	372, 1773,
	373, 1773,
	374, 1773,
	375, 1773,
	376, 1773,
	378, 1773,
	379, 1773,
	380, 1773,
	381, 1773,
	382, 1773,
	383, 1773,
	384, 1773,
	385, 1773,
	386, 1773,
	387, 1773,
	388, 1773,
	389, 1773,
	390, 1773,
	391, 1773,
	392, 1773,
	394, 1773,
	395, 1773,
	397, 1773,
	398, 1773,
	399, 1773,
	400, 1773,
	401, 1773,
	402, 1773,
	403, 1773,
	404, 1773,
	405, 1773,
	406, 1773,
	407, 1773,
	408, 1773,
	409, 1773,
	411, 1773,
	413, 1773,
	414, 1773,
	415, 1773,
	421, 1773,
	422, 1773,
	424, 1773,
	425, 1773,
	426, 1773,
	427, 1773,
	428, 1773,
	429, 1773,
	430, 1773,
	431, 1773,
	432, 1773,
	433, 1773,
	435, 1773,
	436, 1773,
	437, 1773,
	439, 1773,
	440, 1773,
	441, 1773,
	442, 1773,
	443, 1773,
	444, 1773,
	445, 1773,
	447, 1773,
	448, 1773,
	449, 1773,
	450, 1773,
	451, 1773,
	452, 1773,
	453, 1773,
	454, 1773,
	455, 1773,
	456, 1773,
	457, 1773,
	458, 1773,
	460, 1773,
	461, 1773,
	462, 1773,
	463, 1773,
	464, 1773,
	465, 1773,
	467, 1773,
	468, 1773,
	469, 1773,
	470, 1773,
	471, 1773,
	472, 1773,
	474, 1773,
	475, 1773,
	476, 1773,
	477, 1773,
	478, 1773,
	479, 1773,
	480, 1773,
	481, 1773,
	483, 1773,
	485, 1773,
	486, 1773,
	487, 1773,
	488, 1773,
	489, 1773,
	490, 1773,
	491, 1773,
	492, 1773,
	493, 1773,
	494, 1773,
	495, 1773,
	496, 1773,
	497, 1773,
	498, 1773,
	499, 1773,
	500, 1773,
	501, 1773,
	503, 1773,
	504, 1773,
	506, 1773,
	507, 1773,
	509, 1773,
	510, 1773,
	511, 1773,
	512, 1773,
	513, 1773,
	514, 1773,
	515, 1773,
	516, 1773,
	518, 1773,
	519, 1773,
	520, 1773,
	521, 1773,
	522, 1773,
	524, 1773,
	526, 1773,
	527, 1773,
	528, 1773,
	529, 1773,
	530, 1773,
	531, 1773,
	533, 1773,
	534, 1773,
	535, 1773,
	536, 1773,
	538, 1773,
	539, 1773,
	542, 1773,
	543, 1773,
	544, 1773,
	545, 1773,
	546, 1773,
	547, 1773,
	548, 1773,
	550, 1773,
	553, 1773,
	554, 1773,
	555, 1773,
	556, 1773,
	557, 1773,
	558, 1773,
	560, 1773,
	561, 1773,
	562, 1773,
	563, 1773,
	564, 1773,
	565, 1773,
	566, 1773,
	571, 1773,
	572, 1773,
	573, 1773,
	574, 1773,
	575, 1773,
	576, 1773,
	-2, 0,
	-1, 908,
	263, 424,
	-2, 0,
	-1, 985,
	399, 910,
	465, 910,
	507, 910,
	528, 910,
	-2, 0,
	-1, 986,
	399, 909,
	465, 909,
	507, 909,
	528, 909,
	-2, 841,
	-1, 990,
	1, 962,
	606, 962,
	608, 962,
	610, 962,
	-2, 0,
	-1, 992,
	1, 884,
	606, 884,
	608, 884,
	610, 884,
	-2, 0,
	-1, 993,
	1, 888,
	606, 888,
	608, 888,
	610, 888,
	-2, 0,
	-1, 994,
	1, 1029,
	185, 1029,
	606, 1029,
	608, 1029,
	610, 1029,
	-2, 0,
	-1, 1002,
	1, 915,
	606, 915,
	608, 915,
	610, 915,
	-2, 0,
	-1, 1009,
	1, 962,
	606, 962,
	608, 962,
	610, 962,
	-2, 0,
	-1, 1010,
	1, 964,
	606, 964,
	608, 964,
	610, 964,
	-2, 0,
	-1, 1011,
	1, 967,
	606, 967,
	608, 967,
	610, 967,
	-2, 0,
	-1, 1017,
	1, 993,
	606, 993,
	608, 993,
	610, 993,
	-2, 0,
	-1, 1018,
	1, 995,
	606, 995,
	608, 995,
	610, 995,
	-2, 0,
	-1, 1023,
	1, 1023,
	606, 1023,
	608, 1023,
	610, 1023,
	-2, 0,
	-1, 1076,
	172, 1643,
	185, 1643,
	276, 1643,
	347, 1643,
	-2, 1579,
	-1, 1092,
	172, 1642,
	185, 1642,
	276, 1642,
	347, 1642,
	-2, 1576,
	-1, 1119,
	609, 2366,
	-2, 738,
	-1, 1148,
	5, 2358,
	607, 2356,
	-2, 2347,
	-1, 1156,
	5, 2379,
	607, 2376,
	-2, 2367,
	-1, 1157,
	5, 2380,
	607, 2377,
	-2, 2368,
	-1, 1165,
	609, 2364,
	-2, 2346,
	-1, 1166,
	607, 2812,
	-2, 2365,
	-1, 1189,
	607, 2811,
	-2, 2381,
	-1, 1190,
	5, 1848,
	-2, 2782,
	-1, 1191,
	5, 1849,
	-2, 2783,
	-1, 1192,
	5, 1850,
	-2, 2797,
	-1, 1193,
	5, 1851,
	-2, 2761,
	-1, 1194,
	5, 1852,
	-2, 2795,
	-1, 1195,
	5, 1860,
	-2, 2774,
	-1, 1196,
	5, 1847,
	-2, 2770,
	-1, 1197,
	5, 1847,
	-2, 2769,
	-1, 1198,
	5, 1847,
	-2, 2788,
	-1, 1199,
	5, 1858,
	-2, 2763,
	-1, 1200,
	5, 1863,
	-2, 2762,
	-1, 1201,
	5, 1865,
	-2, 2807,
	-1, 1204,
	5, 1887,
	-2, 2800,
	-1, 1205,
	5, 1879,
	-2, 2801,
	-1, 1206,
	5, 1887,
	-2, 2802,
	-1, 1207,
	5, 1883,
	-2, 2803,
	-1, 1208,
	5, 1833,
	-2, 2775,
	-1, 1209,
	5, 1834,
	-2, 2776,
	-1, 1210,
	5, 1835,
	-2, 2764,
	-1, 1238,
	5, 1870,
	-2, 2808,
	-1, 1239,
	5, 1871,
	-2, 2798,
	-1, 1240,
	5, 1872,
	561, 1872,
	-2, 2765,
	-1, 1241,
	5, 1873,
	561, 1873,
	-2, 2766,
	-1, 1278,
	607, 2376,
	-2, 2367,
	-1, 1279,
	607, 2377,
	-2, 2368,
	-1, 1377,
	190, 2727,
	523, 2727,
	589, 2727,
	609, 2727,
	-2, 0,
	-1, 1382,
	1, 714,
	610, 714,
	-2, 1488,
	-1, 1512,
	366, 2341,
	424, 2341,
	467, 2341,
	599, 2341,
	-2, 2331,
	-1, 1518,
	190, 131,
	270, 131,
	333, 131,
	566, 131,
	-2, 2723,
	-1, 1519,
	190, 132,
	270, 132,
	333, 132,
	566, 132,
	-2, 2476,
	-1, 1520,
	190, 133,
	270, 133,
	333, 133,
	566, 133,
	-2, 2647,
	-1, 1526,
	611, 2341,
	-2, 2343,
	-1, 1536,
	1, 1336,
	429, 1293,
	467, 1293,
	583, 1293,
	606, 1336,
	608, 1336,
	610, 1336,
	-2, 1628,
	-1, 1542,
	206, 1433,
	225, 1433,
	437, 1433,
	-2, 0,
	-1, 1598,
	407, 1112,
	560, 1112,
	-2, 419,
	-1, 1615,
	43, 2339,
	-2, 1075,
	-1, 1622,
	1, 1336,
	606, 1336,
	608, 1336,
	610, 1336,
	-2, 1628,
	-1, 1630,
	4, 1361,
	21, 1361,
	22, 1361,
	23, 1361,
	24, 1361,
	25, 1361,
	26, 1361,
	27, 1361,
	29, 1361,
	30, 1361,
	36, 1361,
	41, 1361,
	42, 1361,
	44, 1361,
	45, 1361,
	46, 1361,
	47, 1361,
	48, 1361,
	49, 1361,
	50, 1361,
	51, 1361,
	53, 1361,
	54, 1361,
	55, 1361,
	56, 1361,
	58, 1361,
	59, 1361,
	60, 1361,
	61, 1361,
	62, 1361,
	63, 1361,
	64, 1361,
	68, 1361,
	69, 1361,
	70, 1361,
	71, 1361,
	73, 1361,
	74, 1361,
	75, 1361,
	79, 1361,
	80, 1361,
	81, 1361,
	82, 1361,
	83, 1361,
	84, 1361,
	85, 1361,
	88, 1361,
	89, 1361,
	90, 1361,
	91, 1361,
	92, 1361,
	94, 1361,
	96, 1361,
	97, 1361,
	98, 1361,
	99, 1361,
	100, 1361,
	101, 1361,
	103, 1361,
	104, 1361,
	105, 1361,
	107, 1361,
	108, 1361,
	109, 1361,
	117, 1361,
	118, 1361,
	119, 1361,
	120, 1361,
	121, 1361,
	123, 1361,
	124, 1361,
	125, 1361,
	126, 1361,
	128, 1361,
	129, 1361,
	130, 1361,
	132, 1361,
	133, 1361,
	134, 1361,
	136, 1361,
	137, 1361,
	138, 1361,
	141, 1361,
	142, 1361,
	143, 1361,
	145, 1361,
	146, 1361,
	147, 1361,
	149, 1361,
	150, 1361,
	151, 1361,
	153, 1361,
	154, 1361,
	155, 1361,
	156, 1361,
	157, 1361,
	158, 1361,
	159, 1361,
	160, 1361,
	161, 1361,
	162, 1361,
	163, 1361,
	164, 1361,
	165, 1361,
	166, 1361,
	167, 1361,
	168, 1361,
	169, 1361,
	177, 1361,
	178, 1361,
	179, 1361,
	180, 1361,
	184, 1361,
	186, 1361,
	187, 1361,
	188, 1361,
	192, 1361,
	193, 1361,
	194, 1361,
	195, 1361,
	196, 1361,
	197, 1361,
	198, 1361,
	199, 1361,
	200, 1361,
	201, 1361,
	202, 1361,
	203, 1361,
	204, 1361,
	205, 1361,
	207, 1361,
	208, 1361,
	210, 1361,
	211, 1361,
	213, 1361,
	214, 1361,
	215, 1361,
	216, 1361,
	217, 1361,
	218, 1361,
	219, 1361,
	220, 1361,
	221, 1361,
	223, 1361,
	224, 1361,
	226, 1361,
	227, 1361,
	228, 1361,
	229, 1361,
	230, 1361,
	235, 1361,
	236, 1361,
	237, 1361,
	240, 1361,
	241, 1361,
	242, 1361,
	244, 1361,
	246, 1361,
	247, 1361,
	249, 1361,
	251, 1361,
	252, 1361,
	253, 1361,
	255, 1361,
	259, 1361,
	260, 1361,
	261, 1361,
	262, 1361,
	263, 1361,
	264, 1361,
	266, 1361,
	267, 1361,
	268, 1361,
	270, 1361,
	271, 1361,
	273, 1361,
	274, 1361,
	277, 1361,
	278, 1361,
	279, 1361,
	280, 1361,
	281, 1361,
	282, 1361,
	283, 1361,
	286, 1361,
	287, 1361,
	288, 1361,
	289, 1361,
	291, 1361,
	292, 1361,
	293, 1361,
	294, 1361,
	295, 1361,
	296, 1361,
	297, 1361,
	298, 1361,
	299, 1361,
	300, 1361,
	301, 1361,
	302, 1361,
	303, 1361,
	304, 1361,
	305, 1361,
	306, 1361,
	307, 1361,
	308, 1361,
	309, 1361,
	310, 1361,
	311, 1361,
	312, 1361,
	314, 1361,
	316, 1361,
	317, 1361,
	318, 1361,
	319, 1361,
	320, 1361,
	321, 1361,
	322, 1361,
	323, 1361,
	324, 1361,
	325, 1361,
	326, 1361,
	327, 1361,
	328, 1361,
	329, 1361,
	330, 1361,
	331, 1361,
	333, 1361,
	334, 1361,
	338, 1361,
	339, 1361,
	340, 1361,
	342, 1361,
	343, 1361,
	344, 1361,
	345, 1361,
	346, 1361,
	349, 1361,
	351, 1361,
	353, 1361,
	354, 1361,
	355, 1361,
	358, 1361,
	359, 1361,
	360, 1361,
	362, 1361,
	364, 1361,
	365, 1361,
	366, 1361,
	367, 1361,
	368, 1361,
	369, 1361,
	370, 1361,
	371, 1361,
	372, 1361,
	373, 1361,
	374, 1361,
	375, 1361,
	376, 1361,
	378, 1361,
	379, 1361,
	380, 1361,
	381, 1361,
	382, 1361,
	383, 1361,
	384, 1361,
	385, 1361,
	386, 1361,
	387, 1361,
	388, 1361,
	389, 1361,
	390, 1361,
	391, 1361,
	392, 1361,
	394, 1361,
	395, 1361,
	397, 1361,
	398, 1361,
	399, 1361,
	400, 1361,
	401, 1361,
	402, 1361,
	403, 1361,
	404, 1361,
	405, 1361,
	406, 1361,
	407, 1361,
	408, 1361,
	409, 1361,
	411, 1361,
	413, 1361,
	414, 1361,
	415, 1361,
	421, 1361,
	422, 1361,
	424, 1361,
	425, 1361,
	426, 1361,
	427, 1361,
	428, 1361,
	429, 1361,
	430, 1361,
	431, 1361,
	432, 1361,
	433, 1361,
	435, 1361,
	436, 1361,
	437, 1361,
	439, 1361,
	440, 1361,
	441, 1361,
	442, 1361,
	443, 1361,
	444, 1361,
	445, 1361,
	447, 1361,
	448, 1361,
	449, 1361,
	450, 1361,
	451, 1361,
	452, 1361,
	453, 1361,
	454, 1361,
	455, 1361,
	456, 1361,
	457, 1361,
	458, 1361,
	460, 1361,
	461, 1361,
	462, 1361,
	463, 1361,
	464, 1361,
	465, 1361,
	467, 1361,
	468, 1361,
	469, 1361,
	470, 1361,
	471, 1361,
	472, 1361,
	474, 1361,
	475, 1361,
	476, 1361,
	477, 1361,
	478, 1361,
	479, 1361,
	480, 1361,
	481, 1361,
	483, 1361,
	485, 1361,
	486, 1361,
	487, 1361,
	488, 1361,
	489, 1361,
	490, 1361,
	491, 1361,
	492, 1361,
	493, 1361,
	494, 1361,
	495, 1361,
	496, 1361,
	497, 1361,
	498, 1361,
	499, 1361,
	500, 1361,
	501, 1361,
	503, 1361,
	504, 1361,
	506, 1361,
	507, 1361,
	509, 1361,
	510, 1361,
	511, 1361,
	512, 1361,
	513, 1361,
	514, 1361,
	515, 1361,
	516, 1361,
	518, 1361,
	519, 1361,
	520, 1361,
	521, 1361,
	522, 1361,
	524, 1361,
	526, 1361,
	527, 1361,
	528, 1361,
	529, 1361,
	530, 1361,
	531, 1361,
	533, 1361,
	534, 1361,
	535, 1361,
	536, 1361,
	538, 1361,
	539, 1361,
	542, 1361,
	543, 1361,
	544, 1361,
	545, 1361,
	546, 1361,
	547, 1361,
	548, 1361,
	550, 1361,
	553, 1361,
	554, 1361,
	555, 1361,
	556, 1361,
	557, 1361,
	558, 1361,
	560, 1361,
	561, 1361,
	562, 1361,
	563, 1361,
	564, 1361,
	565, 1361,
	566, 1361,
	571, 1361,
	572, 1361,
	573, 1361,
	574, 1361,
	575, 1361,
	576, 1361,
	-2, 0,
	-1, 1653,
	1, 564,
	606, 564,
	608, 564,
	610, 564,
	-2, 1599,
	-1, 1656,
	4, 2806,
	11, 2806,
	12, 2806,
	14, 2806,
	15, 2806,
	16, 2806,
	17, 2806,
	18, 2806,
	19, 2806,
	21, 2806,
	22, 2806,
	23, 2806,
	24, 2806,
	25, 2806,
	26, 2806,
	27, 2806,
	29, 2806,
	30, 2806,
	33, 2806,
	34, 2806,
	36, 2806,
	38, 2806,
	41, 2806,
	42, 2806,
	44, 2806,
	45, 2806,
	46, 2806,
	47, 2806,
	48, 2806,
	49, 2806,
	50, 2806,
	51, 2806,
	53, 2806,
	54, 2806,
	55, 2806,
	56, 2806,
	58, 2806,
	59, 2806,
	60, 2806,
	61, 2806,
	62, 2806,
	63, 2806,
	64, 2806,
	67, 2806,
	68, 2806,
	69, 2806,
	70, 2806,
	71, 2806,
	73, 2806,
	74, 2806,
	75, 2806,
	76, 2806,
	79, 2806,
	80, 2806,
	81, 2806,
	82, 2806,
	83, 2806,
	84, 2806,
	85, 2806,
	86, 2806,
	88, 2806,
	89, 2806,
	90, 2806,
	91, 2806,
	92, 2806,
	94, 2806,
	95, 2806,
	96, 2806,
	97, 2806,
	98, 2806,
	99, 2806,
	100, 2806,
	101, 2806,
	103, 2806,
	104, 2806,
	105, 2806,
	106, 2806,
	107, 2806,
	108, 2806,
	109, 2806,
	117, 2806,
	118, 2806,
	119, 2806,
	120, 2806,
	121, 2806,
	123, 2806,
	124, 2806,
	125, 2806,
	126, 2806,
	128, 2806,
	129, 2806,
	130, 2806,
	132, 2806,
	133, 2806,
	134, 2806,
	136, 2806,
	137, 2806,
	138, 2806,
	141, 2806,
	142, 2806,
	143, 2806,
	145, 2806,
	146, 2806,
	147, 2806,
	149, 2806,
	150, 2806,
	151, 2806,
	153, 2806,
	154, 2806,
	155, 2806,
	156, 2806,
	157, 2806,
	158, 2806,
	159, 2806,
	160, 2806,
	161, 2806,
	162, 2806,
	163, 2806,
	164, 2806,
	165, 2806,
	166, 2806,
	167, 2806,
	168, 2806,
	169, 2806,
	173, 2806,
	174, 2806,
	175, 2806,
	176, 2806,
	177, 2806,
	178, 2806,
	179, 2806,
	180, 2806,
	183, 2806,
	184, 2806,
	186, 2806,
	187, 2806,
	188, 2806,
	191, 2806,
	192, 2806,
	193, 2806,
	194, 2806,
	195, 2806,
	196, 2806,
	197, 2806,
	198, 2806,
	199, 2806,
	200, 2806,
	201, 2806,
	202, 2806,
	203, 2806,
	204, 2806,
	205, 2806,
	207, 2806,
	208, 2806,
	210, 2806,
	211, 2806,
	213, 2806,
	214, 2806,
	215, 2806,
	216, 2806,
	217, 2806,
	218, 2806,
	219, 2806,
	220, 2806,
	221, 2806,
	222, 2806,
	223, 2806,
	224, 2806,
	225, 2806,
	226, 2806,
	227, 2806,
	228, 2806,
	229, 2806,
	230, 2806,
	232, 2806,
	233, 2806,
	235, 2806,
	236, 2806,
	237, 2806,
	239, 2806,
	240, 2806,
	241, 2806,
	242, 2806,
	244, 2806,
	246, 2806,
	247, 2806,
	248, 2806,
	249, 2806,
	250, 2806,
	251, 2806,
	252, 2806,
	253, 2806,
	254, 2806,
	255, 2806,
	257, 2806,
	258, 2806,
	259, 2806,
	260, 2806,
	261, 2806,
	262, 2806,
	263, 2806,
	264, 2806,
	266, 2806,
	267, 2806,
	268, 2806,
	270, 2806,
	271, 2806,
	272, 2806,
	273, 2806,
	274, 2806,
	275, 2806,
	277, 2806,
	278, 2806,
	279, 2806,
	280, 2806,
	281, 2806,
	282, 2806,
	283, 2806,
	286, 2806,
	287, 2806,
	288, 2806,
	289, 2806,
	290, 2806,
	291, 2806,
	292, 2806,
	293, 2806,
	294, 2806,
	295, 2806,
	296, 2806,
	297, 2806,
	298, 2806,
	299, 2806,
	300, 2806,
	301, 2806,
	302, 2806,
	303, 2806,
	304, 2806,
	305, 2806,
	306, 2806,
	307, 2806,
	308, 2806,
	309, 2806,
	310, 2806,
	311, 2806,
	312, 2806,
	314, 2806,
	315, 2806,
	316, 2806,
	317, 2806,
	318, 2806,
	319, 2806,
	320, 2806,
	321, 2806,
	322, 2806,
	323, 2806,
	324, 2806,
	325, 2806,
	326, 2806,
	327, 2806,
	328, 2806,
	329, 2806,
	330, 2806,
	331, 2806,
	333, 2806,
	334, 2806,
	337, 2806,
	338, 2806,
	339, 2806,
	340, 2806,
	342, 2806,
	343, 2806,
	344, 2806,
	345, 2806,
	346, 2806,
	349, 2806,
	353, 2806,
	354, 2806,
	355, 2806,
	356, 2806,
	358, 2806,
	359, 2806,
	360, 2806,
	362, 2806,
	364, 2806,
	365, 2806,
	366, 2806,
	367, 2806,
	368, 2806,
	369, 2806,
	370, 2806,
	371, 2806,
	372, 2806,
	373, 2806,
	374, 2806,
	375, 2806,
	376, 2806,
	378, 2806,
	379, 2806,
	380, 2806,
	381, 2806,
	382, 2806,
	383, 2806,
	384, 2806,
	385, 2806,
	386, 2806,
	387, 2806,
	388, 2806,
	389, 2806,
	390, 2806,
	391, 2806,
	392, 2806,
	394, 2806,
	395, 2806,
	397, 2806,
	398, 2806,
	399, 2806,
	400, 2806,
	401, 2806,
	402, 2806,
	403, 2806,
	404, 2806,
	405, 2806,
	406, 2806,
	407, 2806,
	408, 2806,
	409, 2806,
	411, 2806,
	413, 2806,
	414, 2806,
	415, 2806,
	421, 2806,
	422, 2806,
	423, 2806,
	424, 2806,
	425, 2806,
	426, 2806,
	427, 2806,
	428, 2806,
	429, 2806,
	430, 2806,
	431, 2806,
	432, 2806,
	433, 2806,
	435, 2806,
	436, 2806,
	437, 2806,
	438, 2806,
	439, 2806,
	440, 2806,
	441, 2806,
	442, 2806,
	443, 2806,
	444, 2806,
	445, 2806,
	446, 2806,
	447, 2806,
	448, 2806,
	449, 2806,
	450, 2806,
	451, 2806,
	452, 2806,
	453, 2806,
	454, 2806,
	455, 2806,
	456, 2806,
	457, 2806,
	458, 2806,
	460, 2806,
	461, 2806,
	462, 2806,
	463, 2806,
	464, 2806,
	465, 2806,
	467, 2806,
	468, 2806,
	469, 2806,
	470, 2806,
	471, 2806,
	472, 2806,
	473, 2806,
	474, 2806,
	475, 2806,
	476, 2806,
	477, 2806,
	478, 2806,
	479, 2806,
	480, 2806,
	481, 2806,
	483, 2806,
	485, 2806,
	486, 2806,
	487, 2806,
	488, 2806,
	489, 2806,
	490, 2806,
	491, 2806,
	492, 2806,
	493, 2806,
	494, 2806,
	495, 2806,
	496, 2806,
	497, 2806,
	498, 2806,
	499, 2806,
	500, 2806,
	501, 2806,
	503, 2806,
	504, 2806,
	505, 2806,
	506, 2806,
	507, 2806,
	509, 2806,
	510, 2806,
	511, 2806,
	512, 2806,
	513, 2806,
	514, 2806,
	515, 2806,
	516, 2806,
	518, 2806,
	519, 2806,
	520, 2806,
	521, 2806,
	522, 2806,
	524, 2806,
	526, 2806,
	527, 2806,
	528, 2806,
	529, 2806,
	530, 2806,
	531, 2806,
	533, 2806,
	534, 2806,
	535, 2806,
	536, 2806,
	538, 2806,
	539, 2806,
	542, 2806,
	543, 2806,
	544, 2806,
	545, 2806,
	546, 2806,
	547, 2806,
	548, 2806,
	550, 2806,
	553, 2806,
	554, 2806,
	555, 2806,
	556, 2806,
	557, 2806,
	558, 2806,
	560, 2806,
	561, 2806,
	562, 2806,
	563, 2806,
	564, 2806,
	565, 2806,
	566, 2806,
	571, 2806,
	572, 2806,
	573, 2806,
	574, 2806,
	575, 2806,
	576, 2806,
	577, 2806,
	579, 2806,
	587, 2806,
	588, 2806,
	589, 2806,
	590, 2806,
	591, 2806,
	592, 2806,
	594, 2806,
	595, 2806,
	596, 2806,
	597, 2806,
	598, 2806,
	599, 2806,
	600, 2806,
	601, 2806,
	602, 2806,
	605, 2806,
	608, 2806,
	609, 2806,
	611, 2806,
	612, 2806,
	-2, 0,
	-1, 1661,
	190, 2685,
	523, 2685,
	589, 2685,
	609, 2685,
	-2, 0,
	-1, 1714,
	399, 910,
	465, 910,
	507, 910,
	528, 910,
	-2, 0,
	-1, 1725,
	1, 1433,
	606, 1433,
	608, 1433,
	610, 1433,
	-2, 0,
	-1, 1742,
	1, 905,
	606, 905,
	608, 905,
	610, 905,
	-2, 0,
	-1, 1743,
	1, 949,
	606, 949,
	608, 949,
	610, 949,
	-2, 0,
	-1, 1744,
	1, 957,
	606, 957,
	608, 957,
	610, 957,
	-2, 0,
	-1, 1747,
	1, 914,
	606, 914,
	608, 914,
	610, 914,
	-2, 0,
	-1, 1749,
	1, 920,
	606, 920,
	608, 920,
	610, 920,
	-2, 0,
	-1, 1752,
	1, 916,
	606, 916,
	608, 916,
	610, 916,
	-2, 0,
	-1, 1757,
	1, 930,
	606, 930,
	608, 930,
	610, 930,
	-2, 0,
	-1, 1788,
	1, 2668,
	606, 2668,
	608, 2668,
	609, 2668,
	610, 2668,
	-2, 0,
	-1, 1792,
	1, 1004,
	606, 1004,
	608, 1004,
	610, 1004,
	-2, 0,
	-1, 1809,
	1, 1483,
	610, 1483,
	-2, 1488,
	-1, 1812,
	172, 1642,
	185, 1642,
	276, 1642,
	347, 1642,
	-2, 1580,
	-1, 1912,
	152, 1601,
	172, 1601,
	185, 1601,
	243, 1601,
	276, 1601,
	347, 1601,
	357, 1601,
	540, 1601,
	-2, 2052,
	-1, 1973,
	608, 2227,
	-2, 0,
	-1, 2008,
	152, 1601,
	172, 1601,
	185, 1601,
	243, 1601,
	276, 1601,
	347, 1601,
	357, 1601,
	540, 1601,
	-2, 1734,
	-1, 2048,
	523, 2682,
	609, 2682,
	612, 2682,
	-2, 0,
	-1, 2065,
	607, 1875,
	-2, 1863,
	-1, 2097,
	190, 2682,
	609, 2682,
	612, 2682,
	-2, 0,
	-1, 2140,
	1, 716,
	610, 716,
	-2, 1488,
	-1, 2290,
	225, 266,
	-2, 2375,
	-1, 2291,
	225, 267,
	-2, 319,
	-1, 2401,
	1, 907,
	606, 907,
	608, 907,
	610, 907,
	-2, 0,
	-1, 2402,
	1, 951,
	606, 951,
	608, 951,
	610, 951,
	-2, 0,
	-1, 2403,
	1, 959,
	606, 959,
	608, 959,
	610, 959,
	-2, 0,
	-1, 2404,
	1, 1006,
	606, 1006,
	608, 1006,
	610, 1006,
	-2, 0,
	-1, 2445,
	1, 932,
	606, 932,
	608, 932,
	610, 932,
	-2, 0,
	-1, 2465,
	1, 989,
	606, 989,
	608, 989,
	610, 989,
	-2, 0,
	-1, 2512,
	444, 1669,
	445, 1669,
	-2, 1908,
	-1, 2543,
	14, 0,
	15, 0,
	16, 0,
	587, 0,
	588, 0,
	589, 0,
	-2, 1928,
	-1, 2544,
	14, 0,
	15, 0,
	16, 0,
	587, 0,
	588, 0,
	589, 0,
	-2, 1929,
	-1, 2545,
	95, 0,
	257, 0,
	258, 0,
	591, 0,
	592, 0,
	-2, 1930,
	-1, 2546,
	95, 0,
	257, 0,
	258, 0,
	591, 0,
	592, 0,
	-2, 1931,
	-1, 2547,
	95, 0,
	257, 0,
	258, 0,
	591, 0,
	592, 0,
	-2, 1932,
	-1, 2548,
	95, 0,
	257, 0,
	258, 0,
	591, 0,
	592, 0,
	-2, 1933,
	-1, 2549,
	95, 0,
	257, 0,
	258, 0,
	591, 0,
	592, 0,
	-2, 1934,
	-1, 2550,
	14, 0,
	15, 0,
	16, 0,
	587, 0,
	588, 0,
	589, 0,
	-2, 1935,
	-1, 2562,
	14, 0,
	15, 0,
	16, 0,
	587, 0,
	588, 0,
	589, 0,
	-2, 1947,
	-1, 2563,
	14, 0,
	15, 0,
	16, 0,
	587, 0,
	588, 0,
	589, 0,
	-2, 1948,
	-1, 2564,
	14, 0,
	15, 0,
	16, 0,
	587, 0,
	588, 0,
	589, 0,
	-2, 1949,
	-1, 2568,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	275, 0,
	473, 0,
	577, 0,
	590, 0,
	-2, 1956,
	-1, 2574,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	275, 0,
	473, 0,
	577, 0,
	590, 0,
	-2, 1960,
	-1, 2576,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	275, 0,
	473, 0,
	577, 0,
	590, 0,
	-2, 1968,
	-1, 2577,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	275, 0,
	473, 0,
	577, 0,
	590, 0,
	-2, 1969,
	-1, 2578,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	275, 0,
	473, 0,
	577, 0,
	590, 0,
	-2, 1970,
	-1, 2579,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	275, 0,
	473, 0,
	577, 0,
	590, 0,
	-2, 1971,
	-1, 2753,
	5, 2379,
	190, 2238,
	607, 2376,
	-2, 2367,
	-1, 2754,
	190, 2239,
	-2, 2757,
	-1, 2755,
	190, 2240,
	-2, 2569,
	-1, 2756,
	190, 2241,
	-2, 2449,
	-1, 2757,
	190, 2242,
	-2, 2507,
	-1, 2758,
	190, 2243,
	-2, 2554,
	-1, 2759,
	190, 2244,
	-2, 2680,
	-1, 2760,
	190, 2245,
	-2, 2035,
	-1, 2831,
	1, 1735,
	2, 1735,
	106, 1735,
	152, 1735,
	172, 1735,
	185, 1735,
	191, 1735,
	209, 1735,
	212, 1735,
	239, 1735,
	243, 1735,
	254, 1735,
	272, 1735,
	276, 1735,
	315, 1735,
	347, 1735,
	351, 1735,
	357, 1735,
	434, 1735,
	438, 1735,
	540, 1735,
	551, 1735,
	568, 1735,
	569, 1735,
	570, 1735,
	580, 1735,
	606, 1735,
	608, 1735,
	610, 1735,
	612, 1735,
	-2, 1734,
	-1, 2844,
	607, 2348,
	-2, 2362,
	-1, 2846,
	1, 336,
	568, 336,
	-2, 1628,
	-1, 2876,
	607, 1874,
	-2, 1864,
	-1, 3074,
	1, 1336,
	429, 1293,
	467, 1293,
	583, 1293,
	606, 1336,
	608, 1336,
	610, 1336,
	-2, 1628,
	-1, 3250,
	352, 1672,
	-2, 2796,
	-1, 3251,
	352, 1673,
	-2, 2665,
	-1, 3255,
	444, 2304,
	445, 2304,
	-2, 2033,
	-1, 3256,
	444, 2308,
	445, 2308,
	-2, 2034,
	-1, 3257,
	444, 2305,
	445, 2305,
	-2, 2033,
	-1, 3258,
	444, 2309,
	445, 2309,
	-2, 2034,
	-1, 3271,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	275, 0,
	473, 0,
	577, 0,
	590, 0,
	-2, 1958,
	-1, 3272,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	275, 0,
	473, 0,
	577, 0,
	590, 0,
	-2, 1962,
	-1, 3278,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	275, 0,
	473, 0,
	577, 0,
	590, 0,
	-2, 1964,
	-1, 3505,
	1, 711,
	606, 711,
	608, 711,
	610, 711,
	-2, 1488,
	-1, 3690,
	43, 2339,
	-2, 1076,
	-1, 3695,
	1, 1336,
	606, 1336,
	608, 1336,
	610, 1336,
	-2, 1628,
	-1, 3800,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	275, 0,
	473, 0,
	577, 0,
	590, 0,
	-2, 1966,
	-1, 3807,
	248, 0,
	250, 0,
	337, 0,
	-2, 1985,
	-1, 3875,
	14, 0,
	15, 0,
	16, 0,
	587, 0,
	588, 0,
	589, 0,
	-2, 2014,
	-1, 3876,
	14, 0,
	15, 0,
	16, 0,
	587, 0,
	588, 0,
	589, 0,
	-2, 2015,
	-1, 3877,
	14, 0,
	15, 0,
	16, 0,
	587, 0,
	588, 0,
	589, 0,
	-2, 2016,
	-1, 3881,
	14, 0,
	15, 0,
	16, 0,
	587, 0,
	588, 0,
	589, 0,
	-2, 2020,
	-1, 3882,
	14, 0,
	15, 0,
	16, 0,
	587, 0,
	588, 0,
	589, 0,
	-2, 2021,
	-1, 3883,
	14, 0,
	15, 0,
	16, 0,
	587, 0,
	588, 0,
	589, 0,
	-2, 2022,
	-1, 3931,
	607, 2349,
	-2, 2363,
	-1, 4130,
	609, 2913,
	-2, 1554,
	-1, 4185,
	248, 0,
	250, 0,
	337, 0,
	-2, 1986,
	-1, 4188,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	275, 0,
	473, 0,
	577, 0,
	590, 0,
	-2, 1989,
	-1, 4189,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	275, 0,
	473, 0,
	577, 0,
	590, 0,
	-2, 1991,
	-1, 4300,
	609, 2364,
	-2, 1371,
	-1, 4458,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	275, 0,
	473, 0,
	577, 0,
	590, 0,
	-2, 1990,
	-1, 4459,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	275, 0,
	473, 0,
	577, 0,
	590, 0,
	-2, 1992,
	-1, 4470,
	248, 0,
	-2, 2025,
	-1, 4655,
	248, 0,
	-2, 2026,
	-1, 4873,
	50, 0,
	222, 0,
	275, 0,
	473, 0,
	577, 0,
	590, 0,
	-2, 2760,
}

const sqlPrivate = 57344

const sqlLast = 136720

var sqlAct = [...]int{
	276, 4991, 4809, 3147, 5064, 1358, 3160, 3409, 4935, 4919,
	4703, 4526, 4808, 4695, 4859, 4872, 4885, 5005, 4765, 3010,
	3678, 4746, 4823, 1551, 4841, 4799, 4168, 4820, 4886, 1355,
	2287, 4887, 4508, 4602, 2985, 4625, 1271, 3679, 2189, 4573,
	3840, 4883, 4589, 4871, 4659, 2942, 4944, 3941, 4414, 4419,
	4375, 4349, 4408, 1282, 3792, 4531, 3117, 3529, 2522, 4479,
	1102, 4447, 2377, 3712, 1578, 4122, 4114, 4399, 4608, 4401,
	4042, 3532, 4731, 4296, 718, 831, 2375, 4277, 1348, 3663,
	2365, 2943, 3264, 2786, 3025, 4088, 2591, 3592, 4071, 4297,
	4069, 3652, 2530, 4424, 1821, 1416, 3706, 3743, 1679, 1350,
	2052, 1093, 2122, 831, 3535, 790, 3668, 3745, 4475, 3136,
	2373, 3106, 2198, 3517, 3131, 3172, 3133, 3645, 3667, 3644,
	3518, 2338, 1509, 3519, 3670, 3934, 2523, 3432, 2858, 729,
	3424, 3392, 4167, 910, 3455, 3162, 3167, 2276, 3148, 4224,
	906, 4, 3415, 3556, 2274, 3081, 2226, 2210, 1983, 3391,
	1101, 183, 3901, 2824, 4920, 270, 3413, 3462, 269, 828,
	4660, 2109, 1959, 2527, 2823, 1920, 1890, 2604, 3248, 901,
	3166, 2014, 2275, 2669, 1617, 1353, 1148, 3110, 826, 3045,
	2247, 2266, 786, 2671, 2254, 2177, 1262, 3118, 2181, 1397,
	1809, 1152, 2826, 2984, 2120, 1327, 1984, 1157, 2167, 2660,
	2804, 1722, 2588, 2511, 2494, 763, 2492, 2003, 3141, 1155,
	1341, 1677, 2859, 1654, 2325, 1620, 832, 2269, 1580, 2967,
	2968, 2032, 4766, 833, 979, 1384, 1159, 2887, 2324, 2663,
	837, 1265, 2783, 840, 3671, 2813, 1954, 2000, 2794, 2928,
	1993, 1244, 705, 1279, 2641, 183, 727, 2715, 2749, 193,
	1904, 194, 1822, 1823, 1338, 2493, 2495, 2053, 837, 771,
	1757, 840, 927, 2284, 1742, 782, 1546, 1652, 1645, 2351,
	4936, 1517, 1261, 2516, 1133, 111, 4992, 722, 44, 821,
	719, 43, 731, 41, 746, 1828, 32, 30, 28, 882,
	1242, 1808, 1557, 1267, 883, 3301, 1000, 3915, 3295, 3916,
	5075, 5067, 3411, 5055, 2803, 3731, 5054, 2803, 1550, 3942,
	2803, 2111, 4881, 2111, 4499, 2111, 2111, 5024, 1748, 2111,
	2111, 4530, 5022, 4965, 4921, 4911, 4530, 2296, 4922, 2803,
	4909, 1571, 4906, 4903, 2803, 4869, 4907, 4904, 4868, 2296,
	4496, 4867, 2296, 4857, 268, 3177, 3721, 4530, 4855, 4850,
	4845, 2132, 4530, 4611, 4530, 4844, 4818, 4785, 4778, 4530,
	4530, 2867, 2803, 4777, 4770, 4745, 4742, 2803, 2296, 2296,
	4530, 4251, 3362, 3363, 4724, 3380, 3381, 3382, 4365, 4657,
	4639, 4493, 4604, 2867, 4151, 1259, 3972, 4549, 4548, 4537,
	1393, 2296, 2296, 2296, 4183, 4536, 4529, 4486, 4460, 4530,
	4530, 2296, 2867, 4435, 4432, 4344, 4324, 3177, 3731, 2803,
	2803, 4187, 1393, 2132, 4138, 2867, 1086, 4132, 3738, 1277,
	4085, 3738, 2374, 1688, 4086, 4003, 3971, 1245, 1245, 4004,
	3972, 3472, 3926, 1077, 3924, 1076, 3927, 3908, 3925, 3824,
	1097, 2803, 3820, 2296, 3905, 3737, 2803, 3377, 1097, 3738,
	2889, 3722, 1274, 1836, 1837, 3490, 1869, 1870, 1871, 1880,
	1881, 1882, 3408, 3403, 94, 3487, 2803, 2803, 3402, 3353,
	2129, 1098, 2803, 3354, 3351, 1873, 1867, 3343, 3352, 2863,
	2796, 3344, 3341, 1839, 39, 3312, 2803, 3310, 1297, 2803,
	1092, 3176, 1886, 3311, 3158, 3177, 3157, 1305, 2361, 2912,
	2361, 1559, 2866, 2803, 2856, 1248, 2867, 1249, 2803, 1892,
	2617, 2618, 2619, 2636, 2637, 2638, 3731, 2296, 1838, 2848,
	2129, 2132, 2132, 2296, 3263, 2802, 1246, 2360, 1858, 2803,
	2639, 2361, 2803, 4786, 4661, 4652, 4640, 1855, 4611, 2132,
	3177, 3905, 2795, 4412, 3368, 240, 4365, 1570, 2129, 3362,
	3363, 4325, 3380, 3381, 3382, 4151, 4087, 3017, 2203, 2927,
	2146, 2110, 2126, 1892, 3112, 1298, 2295, 3035, 2925, 1979,
	1545, 4021, 3795, 3768, 2001, 2666, 2840, 1298, 3362, 3363,
	2259, 3723, 2629, 1724, 2839, 2838, 2837, 2836, 1250, 1247,
	1085, 2625, 240, 1084, 242, 1083, 1836, 1837, 1082, 1081,
	1080, 3724, 2698, 1079, 1075, 1074, 1559, 1073, 1072, 3384,
	1071, 1070, 1069, 3362, 3363, 1861, 1862, 1863, 1864, 1068,
	1067, 1066, 3221, 4242, 3377, 1844, 1839, 1065, 1064, 1063,
	1062, 1154, 1061, 3362, 3363, 1060, 1059, 1058, 1057, 1039,
	977, 242, 241, 976, 975, 974, 973, 972, 971, 970,
	969, 3378, 968, 3377, 1836, 1837, 234, 967, 966, 965,
	964, 1838, 963, 962, 1877, 235, 961, 1887, 2667, 2630,
	2631, 2632, 2633, 960, 1866, 1868, 959, 1867, 2112, 2624,
	2112, 958, 2112, 2112, 1839, 957, 2112, 2112, 956, 241,
	1883, 955, 1884, 195, 954, 2803, 2696, 953, 1131, 1853,
	1854, 1550, 952, 3300, 951, 950, 949, 948, 947, 946,
	1892, 945, 944, 943, 942, 931, 930, 1875, 929, 1838,
	925, 3368, 924, 1670, 917, 916, 1836, 1837, 1889, 1858,
	915, 900, 1859, 899, 2129, 856, 2129, 855, 1855, 854,
	195, 853, 844, 2935, 843, 842, 841, 806, 797, 2668,
	3368, 2665, 796, 2634, 2635, 795, 1839, 777, 264, 240,
	2682, 263, 2129, 262, 1360, 1157, 261, 260, 1844, 259,
	258, 257, 153, 256, 255, 240, 254, 253, 252, 1885,
	251, 250, 249, 248, 247, 3368, 2627, 246, 240, 245,
	1565, 1838, 1157, 1157, 1157, 244, 243, 4199, 1874, 3951,
	3920, 4426, 3739, 1558, 3458, 3368, 3323, 3379, 242, 1889,
	1419, 3306, 3297, 3201, 1157, 3091, 1861, 1862, 1863, 1864,
	1157, 3126, 1360, 2871, 242, 1962, 1844, 1536, 3378, 2845,
	2830, 2935, 1961, 2680, 1962, 3406, 2484, 242, 2175, 3362,
	3363, 1961, 2004, 2131, 2027, 1931, 1803, 1157, 1553, 1157,
	1405, 1157, 1401, 1402, 1403, 1281, 241, 3378, 1583, 2132,
	1965, 2899, 1388, 2110, 2129, 1865, 4896, 2126, 2487, 1960,
	234, 1835, 241, 3721, 1273, 1866, 1868, 1298, 3407, 235,
	240, 4895, 4892, 1750, 1360, 241, 234, 2129, 1860, 1622,
	4870, 4854, 3378, 4750, 1527, 235, 4664, 4649, 1844, 234,
	1853, 1854, 2795, 1202, 1583, 1889, 1559, 195, 235, 4643,
	2670, 1583, 3378, 4641, 4009, 1878, 4474, 1522, 4521, 1298,
	1157, 4433, 1157, 195, 2341, 4411, 4257, 1583, 4222, 242,
	3362, 3363, 4221, 1859, 1889, 1157, 195, 1157, 4215, 4214,
	1150, 1275, 2628, 4213, 1922, 4206, 4205, 1891, 3374, 3375,
	3376, 4203, 1889, 1332, 1335, 3373, 3371, 3372, 3364, 3365,
	3366, 3367, 3369, 3370, 1626, 1629, 4198, 1380, 4195, 1889,
	4194, 4084, 3955, 3954, 1345, 4098, 1382, 241, 3953, 3930,
	3896, 3895, 3894, 2437, 3379, 1583, 1559, 3816, 3811, 1889,
	837, 234, 3453, 840, 3399, 1412, 1534, 1506, 1511, 3390,
	235, 1891, 2933, 3361, 3358, 1157, 1564, 1549, 1157, 1692,
	1889, 3368, 4428, 3379, 3357, 3355, 1674, 3350, 3349, 1876,
	3362, 3363, 3348, 1514, 3345, 3342, 1366, 2664, 195, 1850,
	1851, 1857, 1879, 1856, 1852, 1924, 1849, 1847, 1848, 1840,
	1841, 1842, 1843, 1845, 1846, 3322, 3305, 1374, 3379, 3298,
	4209, 1548, 3296, 3159, 4208, 183, 183, 1615, 1547, 2880,
	1929, 3144, 2831, 2653, 3362, 3363, 1865, 2932, 3379, 1100,
	1835, 1258, 1693, 3128, 1657, 1659, 2303, 1834, 2301, 4019,
	5070, 5013, 5012, 2614, 2615, 2616, 2640, 2626, 2620, 1860,
	2622, 2623, 2621, 2608, 2609, 2610, 2611, 2612, 2613, 1632,
	1922, 4934, 3368, 4494, 4932, 1923, 1349, 1921, 1157, 1157,
	1157, 1157, 1157, 1157, 1157, 1157, 1283, 3842, 3378, 4810,
	1388, 4099, 1655, 1388, 4729, 3374, 3375, 3376, 4715, 4711,
	4710, 4709, 3373, 3371, 3372, 3364, 3365, 3366, 3367, 3369,
	3370, 1157, 4689, 4688, 4686, 3479, 4663, 1157, 1891, 4662,
	3404, 4637, 2594, 4623, 4620, 2932, 1512, 4619, 4612, 1526,
	1349, 3373, 3371, 3372, 3364, 3365, 3366, 3367, 3369, 3370,
	4600, 1648, 4599, 4545, 1646, 4516, 4472, 4455, 1813, 1098,
	240, 4454, 1840, 1841, 1842, 1843, 1845, 1846, 4395, 4391,
	4388, 4366, 3368, 4241, 4220, 1889, 3373, 3371, 3372, 3364,
	3365, 3366, 3367, 3369, 3370, 1698, 4152, 4666, 2697, 3378,
	4007, 1766, 4006, 1669, 3987, 3986, 3984, 3371, 3372, 3364,
	3365, 3366, 3367, 3369, 3370, 2932, 3911, 1807, 1687, 242,
	1349, 1349, 3899, 4099, 1856, 1852, 3368, 1849, 1847, 1848,
	1840, 1841, 1842, 1843, 1845, 1846, 3806, 240, 1909, 3740,
	1365, 3732, 1157, 1157, 1157, 3698, 3611, 3567, 1157, 3534,
	240, 3481, 3327, 2600, 3326, 1279, 3321, 1279, 4427, 3287,
	3105, 2960, 1968, 1967, 3379, 1966, 1963, 241, 1955, 3127,
	1953, 2878, 1419, 1715, 2877, 2842, 1889, 2835, 2801, 2678,
	1908, 234, 2026, 1982, 1157, 1751, 242, 831, 1360, 1981,
	235, 3450, 2695, 2070, 831, 1977, 1360, 2030, 1360, 242,
	1911, 1976, 1814, 1975, 1842, 1843, 1845, 1846, 1974, 1973,
	1972, 1971, 4327, 1970, 1969, 1950, 1949, 2049, 195, 1948,
	1947, 1946, 1556, 1945, 1563, 2099, 1569, 2101, 1810, 1944,
	1943, 1990, 1942, 1941, 241, 1940, 1939, 1938, 1937, 1818,
	1817, 1077, 1936, 1076, 1935, 1924, 1910, 241, 234, 1907,
	1902, 2038, 1373, 1302, 1293, 3379, 2681, 235, 1360, 1964,
	4665, 234, 1812, 4398, 1157, 4253, 1889, 2043, 4191, 3950,
	235, 1831, 1832, 3923, 3914, 3309, 2869, 2833, 1836, 1837,
	4255, 2037, 1651, 240, 3949, 195, 1923, 2134, 1157, 3477,
	1905, 1987, 1988, 3727, 2022, 1668, 1419, 1673, 195, 2011,
	3362, 3363, 1398, 3011, 2166, 2192, 1098, 1393, 1839, 183,
	1686, 5004, 1691, 4712, 3372, 3364, 3365, 3366, 3367, 3369,
	3370, 2164, 4613, 1400, 1956, 1957, 1245, 4431, 4369, 2679,
	240, 1277, 242, 1277, 2158, 2157, 4368, 4367, 2166, 2168,
	2166, 4326, 837, 1838, 1388, 840, 2044, 2138, 2173, 837,
	4244, 4158, 840, 2093, 2036, 4157, 240, 4156, 4155, 4154,
	4888, 4153, 3973, 240, 1274, 2012, 1274, 2137, 3918, 2035,
	3917, 3742, 3741, 240, 3734, 3733, 4961, 1749, 4644, 242,
	241, 4959, 4642, 2342, 2116, 2031, 4884, 2118, 2009, 1399,
	2002, 2166, 2237, 2123, 234, 2004, 4609, 2125, 3793, 4033,
	4002, 1805, 2128, 235, 3347, 242, 3364, 3365, 3366, 3367,
	3369, 3370, 242, 4520, 1651, 2256, 240, 2114, 1945, 2064,
	1945, 1962, 242, 4102, 1980, 2152, 3601, 241, 1961, 1714,
	3043, 3143, 1098, 1393, 1583, 1583, 3570, 2021, 3346, 3269,
	2020, 234, 2019, 2989, 1419, 2017, 2016, 2015, 2006, 2971,
	235, 1396, 1393, 241, 4092, 3536, 1055, 2161, 2140, 3681,
	241, 3680, 4681, 1767, 2666, 242, 2050, 234, 3411, 1933,
	241, 4682, 2366, 1723, 234, 2277, 235, 4603, 195, 4917,
	4409, 4682, 2393, 235, 234, 3653, 3173, 2203, 1724, 2278,
	2228, 4106, 4081, 235, 4039, 4030, 3364, 3365, 3366, 3367,
	3369, 3370, 1056, 4012, 195, 3765, 3503, 2371, 2309, 4476,
	3844, 195, 3315, 241, 2136, 2661, 4893, 2233, 3661, 2241,
	2335, 195, 2876, 1526, 1625, 2251, 1978, 234, 1958, 1541,
	1369, 1331, 2288, 2293, 4908, 1650, 235, 4905, 3717, 3029,
	3978, 3032, 3366, 3367, 3369, 3370, 2236, 2969, 4704, 1583,
	3013, 1583, 1930, 1583, 2243, 3027, 2203, 2667, 4540, 2201,
	2169, 2159, 4415, 4817, 195, 2234, 1257, 4512, 3539, 3997,
	3636, 1583, 1583, 1526, 2163, 3140, 2197, 4963, 4962, 4543,
	895, 4996, 4539, 4894, 1583, 4518, 3787, 2209, 2945, 4569,
	3507, 837, 4313, 1600, 840, 4052, 1583, 1592, 1583, 1583,
	1583, 1764, 2280, 2281, 3200, 2465, 1702, 2462, 2913, 2229,
	2246, 5066, 2162, 2246, 3083, 1053, 1051, 2246, 2282, 2451,
	1049, 4719, 831, 4562, 4941, 2449, 1047, 2231, 2244, 1044,
	2931, 4551, 2331, 3478, 4358, 1400, 1543, 1035, 2668, 2502,
	2665, 2931, 4357, 2018, 1157, 2929, 4050, 2153, 4049, 4041,
	2141, 1765, 1548, 1836, 1837, 1383, 2929, 2336, 4027, 1547,
	2348, 2463, 4026, 4051, 4024, 4023, 2502, 1650, 4011, 3981,
	3970, 3969, 3642, 3641, 3603, 2230, 1867, 2392, 2242, 1157,
	1601, 2227, 3471, 1839, 2250, 3320, 3319, 896, 2464, 2369,
	4311, 3318, 3317, 3273, 3041, 3040, 3034, 3023, 4308, 2500,
	3015, 1399, 2294, 1763, 3005, 2948, 3004, 2397, 2999, 1892,
	2998, 2997, 2976, 2975, 2936, 1157, 2857, 1157, 1838, 2575,
	1811, 3509, 2711, 2710, 1157, 2532, 2500, 2070, 2070, 1419,
	2356, 1157, 1157, 1157, 1157, 1157, 1157, 1157, 1157, 1157,
	1157, 1157, 1157, 1157, 1157, 1157, 1157, 1157, 1157, 1157,
	1157, 1157, 1157, 1157, 1157, 1157, 1157, 1157, 1157, 1157,
	1157, 1157, 1157, 1157, 1157, 1157, 1157, 1655, 1157, 1655,
	1157, 1157, 1157, 1157, 2317, 2345, 2358, 837, 2316, 1394,
	840, 2422, 4541, 2379, 1394, 769, 1273, 1394, 1273, 1700,
	4997, 4513, 3536, 3137, 3599, 769, 1157, 2385, 2350, 2670,
	1157, 1157, 1648, 2354, 2353, 1041, 2353, 2504, 1157, 4328,
	2498, 2491, 1157, 2384, 1157, 1157, 2362, 1374, 2363, 2202,
	2278, 1400, 1419, 4999, 1098, 1844, 1098, 2366, 1157, 1157,
	1157, 1157, 2225, 4942, 1157, 1157, 1157, 1157, 1157, 1157,
	1157, 1157, 2238, 2245, 2870, 1638, 2245, 1637, 2199, 3569,
	2245, 2501, 2315, 1275, 2334, 1275, 4269, 4262, 2486, 2240,
	1157, 1157, 1157, 1157, 1157, 1157, 1157, 1157, 1157, 1846,
	2401, 1096, 2884, 1157, 1866, 1868, 2477, 1596, 2501, 2412,
	2861, 2409, 2195, 2642, 2643, 1279, 1636, 1399, 1635, 1746,
	2235, 3370, 1419, 2986, 2987, 2237, 3766, 2642, 2658, 1390,
	4453, 1279, 2993, 1746, 1390, 2920, 4307, 1390, 1695, 2947,
	2445, 2973, 2200, 2474, 1544, 2515, 2664, 1157, 1419, 2482,
	4268, 2389, 4309, 5000, 2706, 2499, 1317, 2170, 2171, 2986,
	2987, 1716, 1859, 2232, 1801, 2661, 1609, 2590, 2239, 1776,
	3180, 2196, 1614, 2752, 2752, 2766, 3227, 2642, 1780, 2590,
	2787, 2789, 2499, 2064, 2064, 2402, 2793, 3600, 3216, 2490,
	2489, 2488, 1095, 2496, 2503, 2606, 2239, 1762, 1077, 1743,
	2519, 1077, 1077, 2520, 2521, 1804, 2818, 2959, 2455, 2657,
	2986, 2987, 4697, 1395, 2528, 2529, 2443, 2847, 1395, 4962,
	2476, 1395, 898, 897, 3261, 2410, 2022, 1745, 3246, 3994,
	2843, 2598, 5028, 5008, 2406, 4305, 4578, 1816, 2596, 1889,
	1372, 1745, 4890, 2916, 1712, 768, 4998, 2958, 2403, 3775,
	2461, 2400, 3031, 1360, 1360, 768, 1696, 2810, 2907, 2708,
	3774, 1724, 1744, 5002, 2709, 2918, 2860, 2712, 717, 2713,
	2714, 1724, 1391, 2011, 2602, 4292, 3506, 1391, 2572, 2236,
	1391, 1392, 3028, 2908, 3030, 2355, 1392, 2946, 2655, 1392,
	3230, 1277, 1245, 2886, 712, 3218, 1419, 2832, 3026, 1621,
	3833, 4974, 2919, 1098, 2670, 4008, 1097, 1277, 3830, 4285,
	4672, 4061, 2864, 1098, 2809, 2883, 2930, 1098, 1860, 2203,
	4356, 4025, 183, 2917, 1274, 2902, 2067, 4022, 2817, 3586,
	2822, 3958, 2070, 2828, 2829, 3945, 2748, 4699, 2778, 2761,
	1274, 2791, 1388, 2882, 940, 3648, 2799, 2800, 3992, 3640,
	2905, 3597, 1619, 2815, 2816, 770, 2811, 2438, 3033, 3260,
	2872, 1759, 2009, 2058, 4286, 770, 4310, 1964, 2996, 4062,
	1045, 1045, 1699, 2450, 1027, 1045, 4292, 1891, 2910, 2448,
	1419, 1046, 2974, 3578, 1045, 1701, 3078, 3587, 2483, 3831,
	5030, 2201, 3284, 2300, 2299, 1027, 2894, 4983, 1090, 804,
	1360, 893, 2898, 892, 4452, 3074, 1098, 4982, 4949, 2937,
	4285, 2855, 4060, 4173, 4278, 2972, 2909, 2473, 2879, 1090,
	4891, 1157, 1157, 3282, 1157, 2904, 3229, 1777, 4172, 2893,
	3585, 4276, 2768, 2896, 4782, 2897, 1956, 1957, 3253, 3254,
	4280, 3579, 3769, 4303, 3079, 1996, 3649, 2911, 2888, 831,
	2570, 1360, 3714, 2573, 2934, 2901, 3116, 3226, 1393, 4306,
	2903, 2670, 5001, 1393, 2994, 4286, 1393, 3109, 1848, 1840,
	1841, 1842, 1843, 1845, 1846, 2586, 3224, 2978, 2111, 3009,
	3715, 3024, 1583, 1598, 3577, 2257, 4579, 3077, 5006, 1094,
	1028, 2914, 4794, 1999, 2475, 1583, 1595, 1583, 4577, 2408,
	4861, 2963, 4862, 2569, 4575, 3646, 2584, 4503, 2812, 4279,
	1349, 1028, 3124, 802, 1583, 2977, 1992, 3012, 2273, 3086,
	932, 3151, 2223, 3001, 3088, 4889, 1997, 3523, 2995, 3000,
	2988, 2990, 2991, 2992, 3168, 3003, 4705, 2940, 1360, 3614,
	1360, 1042, 3042, 2950, 2953, 1316, 933, 3075, 3076, 4726,
	2670, 1621, 4574, 3171, 2206, 845, 3170, 3551, 2064, 1349,
	3508, 1774, 1157, 3714, 3228, 3279, 1725, 3202, 767, 3203,
	1778, 837, 4281, 1542, 840, 3002, 2272, 3120, 4282, 4576,
	2224, 852, 3007, 3014, 3181, 3182, 1300, 918, 4287, 2979,
	3021, 1349, 1349, 3174, 3280, 3188, 3189, 3190, 3285, 2257,
	5007, 1996, 4385, 2240, 837, 4304, 3037, 840, 3114, 4698,
	3178, 3084, 2207, 923, 3550, 4927, 3183, 4948, 3184, 3038,
	3039, 3165, 3475, 2222, 4780, 4928, 1951, 2238, 1157, 3275,
	4284, 183, 1548, 3198, 1157, 1157, 5009, 1033, 1032, 3089,
	3204, 2589, 3633, 3557, 1697, 713, 4972, 4288, 2580, 1999,
	3155, 2202, 3103, 2253, 2931, 2205, 2444, 1775, 1033, 1032,
	2257, 3113, 4449, 4169, 1994, 4074, 1779, 2193, 4781, 2951,
	3153, 2581, 3993, 4281, 4465, 4072, 4828, 2582, 4338, 4282,
	2252, 2587, 1997, 3146, 1029, 5026, 1512, 2597, 2652, 4287,
	1157, 1157, 1998, 736, 1901, 3156, 1157, 3232, 3559, 3234,
	1655, 2571, 2405, 3325, 1815, 1029, 2846, 1371, 3175, 1157,
	1157, 1711, 1713, 5031, 2248, 1157, 1157, 3154, 2814, 2399,
	1097, 1157, 3135, 1526, 2827, 1995, 3846, 714, 4074, 3195,
	5015, 4284, 941, 803, 4397, 4163, 3647, 3524, 4072, 3084,
	3197, 4491, 4361, 3946, 2200, 3206, 1273, 3208, 4288, 3210,
	1306, 3212, 3213, 1304, 3205, 3207, 4402, 3209, 4076, 3211,
	4174, 3426, 1273, 3558, 3789, 3244, 1157, 1157, 1157, 4747,
	934, 935, 1157, 2249, 3222, 4833, 4403, 715, 4283, 716,
	3276, 4764, 1157, 805, 3008, 3281, 4622, 801, 4360, 4075,
	4359, 4120, 1730, 3702, 3241, 3283, 3308, 2211, 3489, 1157,
	3252, 2854, 2323, 4448, 1989, 846, 847, 1303, 3235, 1030,
	1115, 3237, 1287, 1275, 1296, 3243, 3242, 704, 4293, 4294,
	2215, 4076, 4947, 2260, 4386, 4097, 2515, 1289, 2267, 1275,
	1030, 3247, 1826, 1825, 3262, 4170, 1031, 919, 920, 3885,
	2518, 1825, 4218, 2204, 2154, 2112, 1820, 5036, 1998, 4538,
	3303, 3304, 4075, 3463, 1284, 3307, 4631, 1031, 1992, 3530,
	2067, 2067, 4679, 2151, 4121, 3299, 4045, 4028, 2583, 3979,
	3977, 3703, 3694, 3526, 4926, 1526, 3125, 2212, 2585, 4283,
	3119, 4740, 3107, 4070, 2349, 2182, 1349, 2343, 3829, 1034,
	2183, 1157, 1157, 1157, 1157, 3274, 2337, 2058, 2058, 2329,
	1290, 1157, 1157, 1157, 3092, 2308, 1157, 3095, 2307, 3097,
	1034, 1589, 2508, 2980, 1308, 4748, 1157, 1279, 1419, 4293,
	4294, 4616, 1157, 2805, 1157, 3900, 1291, 3418, 3419, 4800,
	3790, 776, 1825, 1279, 4732, 2935, 4767, 1824, 2149, 1526,
	2456, 1526, 2261, 1996, 4450, 1824, 2147, 4733, 3966, 4123,
	4420, 1419, 849, 848, 4175, 3104, 3142, 2808, 1319, 3142,
	4595, 3425, 2390, 1279, 4073, 4593, 1419, 4515, 1288, 2952,
	936, 937, 3542, 3538, 3537, 3936, 3267, 3245, 1360, 3314,
	3913, 4734, 3423, 2150, 3422, 2382, 3940, 2216, 2070, 3401,
	1098, 1999, 1419, 2372, 4400, 1753, 1752, 2305, 2807, 3456,
	3443, 1747, 1360, 2806, 2184, 3420, 1994, 3470, 1826, 2853,
	1360, 1106, 2852, 1901, 2851, 3491, 1826, 850, 851, 2850,
	2849, 1630, 2188, 4080, 1997, 1644, 3111, 4073, 1095, 3937,
	1642, 3485, 1157, 939, 1631, 3886, 1824, 921, 922, 4176,
	4093, 3214, 4692, 4527, 4376, 3887, 1157, 4736, 4219, 2956,
	2192, 2509, 3985, 2217, 2218, 2347, 3938, 1360, 3935, 3656,
	3974, 5035, 3525, 2070, 4969, 3457, 4501, 1995, 4500, 3082,
	4735, 3488, 4597, 4806, 3473, 3428, 3179, 3087, 2213, 3085,
	1157, 2376, 2277, 1705, 3615, 4693, 2192, 4523, 4737, 2981,
	2982, 4522, 3504, 1277, 3514, 3515, 1360, 2185, 2190, 4814,
	4797, 3575, 3429, 4225, 3461, 3902, 3510, 3441, 3449, 1277,
	1388, 3430, 3412, 3444, 3445, 4749, 3540, 2677, 1360, 3544,
	1360, 4615, 3497, 3589, 2214, 3591, 1274, 3452, 3465, 3466,
	3467, 3468, 3427, 3396, 3397, 3398, 1157, 1157, 3442, 1277,
	2256, 1731, 1274, 3541, 1419, 4596, 3546, 2256, 3967, 3548,
	4528, 4492, 3602, 4510, 4248, 1360, 1797, 2469, 4835, 3447,
	3625, 3448, 1360, 1799, 4807, 2264, 3527, 3631, 1796, 1794,
	1771, 1769, 1274, 1741, 1739, 3493, 4694, 4973, 3495, 3496,
	2186, 3482, 3483, 3499, 3484, 3500, 4971, 3501, 1285, 3464,
	1998, 1737, 1583, 3617, 4910, 3619, 3572, 1735, 3623, 4722,
	4511, 1733, 3629, 4713, 3554, 1360, 1583, 4498, 1583, 3595,
	4471, 3494, 1419, 1727, 2064, 3498, 4259, 1721, 3576, 831,
	1583, 775, 4217, 2262, 3505, 3975, 4079, 3563, 3612, 3393,
	3805, 2193, 1583, 3763, 3650, 2067, 3511, 1719, 3762, 3604,
	3486, 3590, 1286, 1640, 1360, 3476, 3356, 2219, 3286, 3695,
	3108, 3022, 3016, 2970, 2881, 2478, 2367, 2029, 2025, 1800,
	1681, 1279, 4581, 3939, 2676, 3394, 2263, 3710, 1643, 3560,
	3434, 3666, 2058, 1641, 3785, 3522, 938, 3708, 3784, 2447,
	2036, 3568, 2414, 1820, 2286, 3561, 1583, 3220, 3219, 2064,
	2191, 3186, 2497, 1758, 3693, 3581, 2417, 3616, 1583, 2328,
	1583, 2306, 3584, 3582, 3651, 2100, 3654, 3583, 1088, 3168,
	1027, 3686, 2098, 1934, 1694, 1613, 3574, 4882, 3168, 4339,
	3533, 4032, 3607, 2220, 4413, 3613, 4031, 4343, 3562, 3701,
	3719, 4796, 4418, 4323, 1090, 4348, 3598, 3626, 3588, 3638,
	2471, 4336, 4738, 4274, 3632, 2470, 3003, 1419, 4739, 4273,
	1419, 1798, 4119, 4110, 4945, 4248, 1795, 1793, 1770, 1768,
	3730, 1740, 1738, 4048, 1526, 1526, 3435, 3639, 3777, 4029,
	3704, 4000, 3998, 3976, 837, 3624, 3697, 840, 3692, 1736,
	1089, 3682, 3630, 3138, 1157, 1734, 2978, 3643, 3767, 1732,
	1157, 1157, 1043, 3130, 1157, 1157, 1157, 3658, 1157, 3123,
	3115, 1726, 3100, 3099, 3637, 1720, 3758, 1157, 2070, 3080,
	3691, 3690, 3689, 2900, 3760, 2187, 1157, 3711, 3433, 3440,
	2895, 1157, 2304, 2302, 2279, 1718, 1028, 1419, 183, 183,
	2258, 1639, 2270, 2221, 3716, 3707, 1157, 1277, 1526, 2208,
	2194, 2133, 2130, 3725, 1419, 3782, 2127, 3728, 3729, 2124,
	2119, 2117, 3439, 3783, 2070, 2070, 1157, 1157, 3718, 1157,
	1157, 1157, 2446, 2334, 2113, 2413, 2182, 2285, 2104, 3709,
	1274, 2183, 3826, 4940, 4866, 1829, 2042, 1157, 4963, 3265,
	2155, 1157, 4691, 2070, 2070, 1157, 1157, 1157, 1157, 1157,
	1157, 1157, 1157, 1157, 1157, 1157, 1157, 1157, 1157, 1157,
	1157, 1157, 1157, 1157, 1157, 3238, 1157, 3858, 3808, 3859,
	3791, 3761, 1254, 2481, 1157, 1157, 2070, 4402, 3236, 2143,
	2144, 1157, 3627, 3073, 3818, 3819, 4847, 2267, 4758, 3771,
	4434, 3772, 1157, 3773, 4355, 4263, 3788, 4403, 1255, 1098,
	3169, 2174, 1594, 1279, 1279, 4633, 2957, 1157, 1273, 4626,
	2931, 2271, 4131, 1048, 1050, 1052, 2931, 2203, 3780, 2479,
	3436, 3437, 3438, 2404, 1273, 2929, 2346, 3786, 1339, 3564,
	3565, 2954, 3566, 1033, 1032, 3266, 1791, 1792, 1340, 1419,
	2441, 2436, 4846, 3813, 3815, 2184, 1830, 2411, 3932, 4350,
	4314, 1717, 1360, 1360, 1273, 1349, 4651, 3825, 4525, 1836,
	1837, 2961, 4226, 2188, 3897, 2480, 3841, 1360, 1360, 4204,
	831, 1360, 3832, 3834, 3835, 1275, 3919, 3848, 3555, 2962,
	1029, 3943, 3944, 3608, 3609, 3836, 3610, 2983, 3856, 3861,
	1157, 1275, 3857, 2962, 2064, 1833, 3956, 3957, 1367, 1307,
	3963, 3628, 2142, 3889, 3904, 4957, 3863, 4044, 3855, 1256,
	265, 1340, 4918, 1340, 3098, 1157, 4107, 1836, 1837, 2330,
	1378, 1275, 3890, 2182, 1838, 3898, 3029, 3027, 2183, 4043,
	3036, 3020, 3018, 2964, 4805, 183, 4787, 2966, 2185, 2190,
	2064, 2064, 4757, 4751, 3019, 3909, 3910, 1839, 1157, 1157,
	2965, 3906, 3907, 4690, 4617, 1526, 4588, 701, 4502, 4117,
	4109, 4096, 3929, 3696, 3145, 2792, 2139, 2051, 5003, 2064,
	2064, 2528, 3849, 4837, 4524, 3006, 1540, 1539, 4838, 1277,
	1277, 3921, 1838, 1091, 1157, 1157, 3474, 5034, 3362, 3363,
	1836, 1837, 1157, 3922, 3980, 2923, 2924, 4753, 4976, 4837,
	2528, 3864, 2064, 1165, 4838, 1030, 2921, 2922, 1550, 1704,
	4196, 2672, 1274, 1274, 1583, 1703, 3948, 1583, 2923, 2921,
	2707, 2186, 1360, 1773, 4116, 837, 1772, 4058, 840, 3959,
	1087, 4013, 1031, 3893, 4618, 4563, 3964, 4352, 4347, 4346,
	3965, 4192, 2184, 3947, 3837, 3952, 3621, 2070, 3618, 272,
	272, 272, 1928, 707, 708, 4017, 723, 707, 723, 734,
	2188, 1927, 774, 3240, 4018, 4020, 794, 2485, 2180, 5019,
	4034, 800, 2193, 4984, 4852, 4040, 4046, 4791, 272, 4005,
	4790, 4789, 4721, 4720, 4668, 1034, 3999, 4591, 4001, 1583,
	4555, 4495, 4489, 4393, 4373, 1157, 2292, 4010, 4312, 914,
	4254, 4063, 4064, 1279, 1157, 4147, 272, 4124, 4133, 4089,
	4137, 4083, 2978, 3996, 1583, 1583, 1583, 3988, 3700, 4140,
	3699, 1583, 1583, 1583, 3547, 3492, 2178, 4078, 4066, 3225,
	3217, 2191, 3194, 3193, 3192, 2185, 2190, 3191, 3129, 3102,
	4103, 3101, 4068, 1583, 4059, 4077, 2955, 3151, 2891, 1419,
	2885, 2067, 1273, 4125, 2874, 2873, 2862, 4128, 2601, 2472,
	2442, 4047, 2435, 4082, 3168, 2434, 4056, 2433, 4091, 2179,
	2432, 2431, 2344, 4095, 2318, 4067, 1419, 2314, 2313, 1157,
	1157, 2312, 2311, 4148, 2310, 1157, 1157, 2070, 2058, 2107,
	1157, 1157, 4127, 1157, 2106, 4108, 2105, 4144, 1157, 4113,
	3755, 2103, 2041, 2040, 1790, 1789, 1728, 1608, 1607, 1157,
	1606, 1914, 1605, 3753, 1604, 1919, 1603, 1602, 2186, 1275,
	4111, 1597, 1593, 3746, 1591, 1157, 2067, 4126, 1590, 1531,
	1530, 1529, 1410, 1409, 1408, 1407, 1406, 4104, 707, 707,
	4134, 4161, 4057, 4129, 1370, 1326, 272, 4139, 1325, 1324,
	1323, 4145, 4160, 1322, 4159, 4146, 2187, 4177, 1321, 4135,
	4178, 1320, 1318, 2058, 1313, 1312, 1311, 1310, 1309, 2193,
	907, 8, 1237, 2064, 2145, 1054, 4190, 1040, 4696, 1277,
	4291, 4290, 4289, 2468, 93, 1599, 1279, 4186, 869, 87,
	2265, 3995, 1006, 4834, 1279, 4725, 4171, 1574, 1419, 1419,
	877, 1419, 4816, 4105, 3533, 3549, 3757, 3044, 1279, 2416,
	1729, 2418, 1274, 3451, 2834, 4231, 4779, 4200, 3324, 1583,
	1583, 4658, 3748, 3512, 4464, 2675, 1932, 3405, 2191, 89,
	1141, 1187, 1419, 4384, 4383, 4275, 3982, 3747, 3669, 4380,
	4379, 2055, 1349, 2057, 3456, 1105, 1422, 4860, 2156, 5025,
	1147, 2172, 2165, 2875, 1157, 2751, 1164, 1161, 4166, 2059,
	2061, 1163, 1162, 2060, 1952, 1279, 3513, 1279, 1160, 2054,
	4115, 4249, 4250, 4216, 3149, 3726, 1649, 1647, 1008, 2160,
	2595, 2659, 4234, 4236, 3313, 1925, 1121, 1143, 2656, 1301,
	1132, 4302, 1360, 3756, 1120, 4264, 4265, 4322, 3431, 3410,
	3713, 4298, 1419, 4298, 1360, 3928, 2507, 1360, 887, 4331,
	4318, 4319, 4334, 2064, 4267, 3359, 2662, 2334, 1292, 1157,
	4223, 4230, 1419, 4233, 4315, 4252, 4228, 4229, 4227, 2775,
	183, 3744, 274, 2767, 1273, 1273, 4232, 2763, 4258, 4243,
	4301, 4261, 4240, 4270, 3502, 2821, 3139, 1806, 4478, 1903,
	3150, 1802, 4316, 2187, 1404, 1125, 2593, 1916, 3291, 2517,
	1583, 1583, 1277, 4272, 3720, 3454, 2868, 4840, 3845, 4260,
	1277, 3223, 2322, 4266, 4351, 1253, 4353, 4239, 4247, 1252,
	1299, 1251, 4822, 4819, 1277, 2255, 4387, 3664, 1360, 3665,
	2148, 2915, 2605, 4404, 3683, 1274, 1137, 4337, 1525, 2460,
	1419, 1275, 1275, 1274, 3778, 1583, 4345, 3416, 4317, 4094,
	4354, 1610, 4377, 799, 4532, 1149, 4374, 1274, 1888, 3069,
	3068, 4685, 4371, 4421, 1389, 1387, 4332, 1386, 1385, 4993,
	4335, 2268, 3991, 3990, 1583, 1583, 1583, 1583, 1583, 1583,
	4364, 1277, 3989, 1277, 239, 4405, 3259, 4410, 1827, 4370,
	1419, 1819, 3754, 3749, 3750, 3751, 3752, 236, 238, 4372,
	237, 4112, 1157, 1157, 1157, 4363, 3553, 4362, 3933, 4422,
	3460, 2067, 4916, 4015, 1274, 3655, 1274, 23, 22, 21,
	1419, 116, 42, 20, 4416, 1157, 4382, 4389, 1157, 1157,
	4390, 4378, 4396, 4394, 155, 133, 152, 151, 1157, 125,
	150, 2070, 4425, 149, 148, 147, 1157, 1157, 2058, 154,
	146, 4321, 4407, 145, 140, 4430, 4423, 2067, 2067, 144,
	143, 142, 141, 1419, 4330, 1583, 139, 4333, 4162, 1119,
	4437, 137, 138, 4439, 132, 136, 135, 4443, 134, 4436,
	1360, 4456, 131, 130, 129, 4451, 2067, 2067, 128, 127,
	126, 124, 4445, 156, 2058, 2058, 4444, 123, 122, 1419,
	121, 120, 119, 118, 117, 787, 788, 1157, 61, 4497,
	60, 115, 113, 114, 19, 4461, 40, 14, 65, 2067,
	1157, 66, 18, 2058, 2058, 1349, 13, 35, 92, 1157,
	105, 104, 103, 36, 2070, 101, 100, 34, 17, 16,
	15, 4473, 98, 97, 1157, 96, 33, 1157, 31, 11,
	9, 4467, 37, 1294, 2013, 12, 2058, 4484, 4485, 5,
	188, 1157, 187, 190, 1157, 186, 4505, 189, 4506, 91,
	185, 1419, 184, 90, 1273, 29, 4535, 10, 1360, 180,
	4607, 4101, 82, 4571, 182, 181, 179, 1315, 1583, 1583,
	1583, 4507, 2334, 178, 177, 83, 80, 176, 2192, 272,
	4504, 272, 272, 86, 1344, 272, 1354, 4554, 4514, 1279,
	175, 81, 85, 84, 27, 6, 1349, 1368, 64, 7,
	4580, 4446, 3764, 108, 109, 794, 4568, 4487, 794, 4488,
	38, 78, 77, 76, 4590, 4601, 75, 4606, 4594, 1419,
	26, 1275, 1583, 63, 4557, 4298, 25, 173, 220, 219,
	218, 4552, 272, 217, 272, 272, 1344, 216, 272, 272,
	4627, 3666, 4556, 4565, 1354, 215, 214, 2064, 213, 208,
	212, 4632, 210, 209, 4582, 1157, 1157, 4583, 272, 211,
	1552, 4614, 4598, 4592, 4587, 207, 230, 4585, 4586, 229,
	223, 222, 1157, 2070, 4610, 4605, 1572, 4546, 4547, 228,
	4572, 227, 226, 1587, 225, 224, 4628, 221, 4630, 233,
	206, 205, 204, 202, 1360, 198, 201, 1360, 203, 1360,
	1360, 200, 1612, 4624, 199, 1354, 197, 232, 231, 272,
	272, 4564, 1344, 4566, 4636, 4567, 4638, 1157, 4635, 1157,
	4629, 1157, 4341, 4667, 4634, 4425, 4669, 72, 4670, 4671,
	171, 1279, 172, 794, 71, 272, 272, 1273, 4647, 4648,
	2064, 170, 169, 4678, 1157, 1273, 1279, 1675, 168, 4558,
	167, 166, 165, 4680, 164, 70, 4646, 1682, 174, 1273,
	24, 2, 914, 1, 0, 1277, 4650, 4298, 0, 0,
	2067, 4544, 0, 4656, 1576, 0, 0, 0, 4570, 0,
	0, 4392, 4298, 0, 4677, 0, 0, 4676, 0, 4673,
	0, 0, 2599, 0, 4406, 0, 4707, 0, 1274, 0,
	1279, 1279, 0, 0, 1275, 0, 0, 2058, 1914, 0,
	4728, 0, 1275, 0, 1157, 4701, 1273, 4429, 1273, 4708,
	4700, 1279, 0, 0, 1279, 0, 1275, 1663, 1583, 0,
	0, 0, 0, 4730, 4716, 0, 4298, 4298, 1583, 0,
	272, 0, 0, 1678, 0, 0, 0, 0, 4718, 0,
	0, 0, 1157, 1157, 0, 0, 4723, 4298, 0, 0,
	4298, 0, 1157, 2774, 272, 0, 4775, 0, 4776, 0,
	4741, 0, 0, 4743, 4744, 0, 4752, 0, 0, 0,
	4755, 4754, 0, 1275, 4610, 1275, 4760, 0, 0, 0,
	0, 0, 4768, 0, 4761, 4769, 0, 4763, 4772, 2064,
	4773, 1706, 4774, 0, 0, 4771, 0, 1277, 0, 0,
	2067, 4784, 1157, 1157, 0, 4792, 1157, 0, 2512, 0,
	1360, 4788, 1277, 1360, 0, 0, 0, 0, 0, 0,
	4717, 0, 0, 0, 4795, 4783, 4821, 4824, 0, 0,
	1274, 4813, 0, 0, 0, 4803, 4804, 2058, 0, 4831,
	4839, 0, 4832, 4843, 0, 1274, 4811, 4836, 4812, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4830, 0, 4793, 4826, 0, 4842, 1277, 1277, 4865, 0,
	0, 1157, 1157, 1157, 0, 0, 0, 4863, 0, 0,
	0, 0, 0, 0, 0, 4825, 0, 1277, 1526, 4829,
	1277, 4848, 0, 0, 0, 0, 0, 0, 0, 1274,
	1274, 4856, 4853, 0, 0, 0, 0, 0, 1157, 4864,
	4897, 0, 0, 0, 0, 4877, 4878, 0, 4880, 4902,
	1274, 4879, 0, 1274, 4898, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1119, 1119, 1119, 0, 0, 0,
	0, 2192, 0, 0, 0, 4924, 4899, 4923, 4925, 0,
	0, 0, 1503, 0, 2769, 0, 4931, 707, 0, 4900,
	0, 4933, 0, 4915, 1157, 1417, 0, 0, 0, 4913,
	4937, 0, 1360, 4930, 0, 0, 0, 4590, 272, 4946,
	272, 4929, 0, 0, 272, 0, 0, 0, 4938, 0,
	4939, 3288, 3289, 0, 0, 4964, 3755, 1552, 1344, 2033,
	272, 4954, 272, 2039, 1349, 4955, 4960, 0, 4958, 3753,
	272, 4956, 723, 0, 4952, 4953, 4966, 272, 0, 3746,
	4970, 4821, 4968, 1279, 4824, 1279, 4979, 0, 4980, 0,
	4967, 0, 0, 2108, 0, 4987, 4989, 4978, 4943, 4975,
	4985, 0, 4986, 0, 0, 272, 0, 0, 4995, 4977,
	0, 4994, 272, 4981, 0, 0, 0, 0, 4842, 4298,
	0, 4298, 0, 0, 1360, 0, 0, 0, 0, 0,
	0, 5010, 0, 5011, 0, 0, 0, 0, 0, 5018,
	0, 0, 4912, 5017, 4914, 794, 0, 0, 0, 0,
	5021, 0, 5029, 5014, 1157, 1157, 4988, 5020, 4990, 0,
	5027, 0, 3757, 1157, 1157, 0, 0, 5016, 0, 5032,
	1273, 0, 5041, 5037, 5043, 0, 0, 5023, 3748, 0,
	5045, 5048, 5052, 5047, 0, 0, 5051, 5053, 5049, 0,
	0, 0, 0, 3747, 3151, 4714, 5050, 0, 3062, 5056,
	0, 1360, 5057, 5062, 5058, 5044, 5061, 5065, 0, 5046,
	5063, 5059, 5060, 0, 0, 0, 0, 0, 0, 0,
	0, 1157, 5068, 4727, 3151, 73, 0, 5072, 5065, 5074,
	5076, 3052, 3050, 3386, 3387, 3388, 3389, 1275, 3054, 3056,
	3046, 0, 74, 0, 0, 0, 5038, 5039, 5069, 3756,
	0, 0, 4759, 0, 0, 0, 5071, 0, 79, 1277,
	0, 1277, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2067, 0, 0, 0, 0, 0,
	0, 3070, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1274, 0, 1274, 0, 0, 0, 88, 0,
	0, 0, 0, 0, 5073, 0, 0, 0, 0, 0,
	0, 2058, 1273, 0, 0, 272, 0, 0, 0, 272,
	0, 0, 0, 0, 0, 0, 5040, 1273, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 908,
	0, 0, 0, 0, 0, 0, 0, 0, 2774, 0,
	0, 0, 49, 0, 110, 0, 0, 0, 0, 0,
	94, 107, 0, 0, 0, 0, 0, 2067, 0, 0,
	0, 0, 0, 0, 0, 1112, 0, 0, 0, 1275,
	0, 1273, 1273, 272, 0, 0, 4849, 272, 0, 0,
	0, 0, 4851, 272, 1275, 0, 0, 0, 0, 272,
	0, 0, 1273, 0, 2058, 1273, 0, 0, 3754, 3749,
	3750, 3751, 3752, 0, 0, 272, 0, 272, 0, 0,
	95, 707, 3048, 272, 1836, 1837, 0, 0, 0, 2774,
	2774, 0, 0, 3064, 0, 794, 0, 0, 0, 914,
	0, 0, 0, 0, 0, 0, 0, 1867, 1275, 1275,
	0, 0, 0, 0, 1839, 3063, 3053, 3051, 3055, 3057,
	3047, 3049, 3065, 3067, 0, 0, 0, 0, 272, 1275,
	1344, 272, 1275, 3059, 3061, 0, 0, 0, 0, 0,
	1892, 0, 0, 0, 1503, 794, 0, 0, 0, 1838,
	0, 0, 272, 0, 0, 0, 0, 2028, 0, 0,
	2415, 0, 0, 0, 0, 272, 272, 3071, 272, 0,
	272, 0, 272, 0, 272, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2067, 0, 0, 2364,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2452,
	0, 0, 2453, 0, 2454, 73, 0, 2378, 2380, 3249,
	0, 0, 0, 0, 0, 0, 272, 272, 272, 272,
	2383, 0, 74, 2058, 0, 0, 0, 0, 0, 99,
	0, 0, 2391, 0, 2394, 2395, 2396, 0, 79, 0,
	0, 0, 0, 0, 0, 774, 1836, 1837, 0, 794,
	0, 0, 0, 0, 0, 0, 1844, 0, 0, 0,
	1119, 0, 0, 0, 0, 0, 0, 0, 1503, 1867,
	0, 2774, 2774, 2774, 2774, 0, 1839, 0, 88, 0,
	0, 2176, 3066, 0, 0, 191, 102, 0, 0, 106,
	2769, 2769, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1892, 0, 0, 1866, 1868, 0, 0, 0,
	0, 1838, 0, 0, 0, 240, 0, 0, 0, 908,
	0, 1858, 0, 909, 0, 0, 0, 0, 153, 0,
	0, 0, 49, 0, 110, 0, 0, 0, 0, 0,
	94, 107, 2607, 0, 0, 0, 3362, 3363, 3072, 3380,
	3381, 3382, 0, 0, 0, 0, 0, 3058, 3060, 0,
	0, 0, 0, 1859, 242, 0, 0, 0, 4182, 0,
	0, 0, 0, 0, 1273, 0, 1273, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 157,
	0, 0, 0, 0, 0, 0, 0, 3801, 3802, 0,
	95, 0, 0, 0, 196, 0, 0, 0, 1861, 1862,
	1863, 1864, 241, 707, 0, 0, 1503, 0, 1844, 0,
	0, 3377, 0, 0, 0, 0, 234, 0, 272, 2297,
	0, 0, 0, 0, 0, 235, 0, 707, 0, 192,
	1889, 1275, 0, 1275, 272, 0, 707, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 272, 0,
	0, 0, 0, 195, 0, 0, 0, 1866, 1868, 0,
	0, 0, 2769, 2769, 2769, 2769, 0, 0, 0, 272,
	1354, 0, 0, 0, 0, 0, 0, 3865, 3866, 3867,
	3868, 3869, 3870, 3871, 3872, 3873, 3874, 3875, 3876, 3877,
	3878, 3879, 3880, 3881, 3882, 3883, 3884, 0, 3888, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3368, 1860,
	0, 0, 0, 0, 0, 1859, 0, 0, 272, 1354,
	0, 0, 723, 0, 723, 0, 0, 0, 2890, 0,
	0, 0, 0, 0, 272, 0, 0, 272, 0, 99,
	0, 272, 0, 272, 0, 0, 0, 0, 1344, 0,
	272, 272, 0, 1354, 1354, 2906, 0, 0, 0, 0,
	272, 0, 0, 0, 0, 0, 0, 0, 1891, 0,
	0, 0, 0, 3384, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1889, 0, 0, 191, 102, 0, 0, 106,
	0, 0, 0, 0, 0, 0, 2944, 0, 0, 0,
	0, 0, 0, 0, 0, 3378, 0, 0, 272, 0,
	0, 0, 0, 0, 0, 240, 0, 0, 0, 0,
	0, 0, 272, 909, 0, 0, 0, 0, 153, 0,
	0, 0, 0, 0, 0, 272, 0, 0, 1865, 0,
	0, 0, 0, 0, 0, 0, 794, 1849, 1847, 1848,
	1840, 1841, 1842, 1843, 1845, 1846, 0, 0, 0, 0,
	0, 1860, 0, 0, 242, 0, 0, 0, 0, 0,
	0, 0, 272, 0, 0, 0, 0, 0, 0, 0,
	0, 1503, 1889, 0, 272, 272, 0, 0, 0, 157,
	0, 0, 0, 0, 2531, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 196, 0, 0, 0, 0, 272,
	3090, 0, 241, 0, 0, 0, 0, 0, 0, 0,
	1891, 0, 0, 0, 0, 0, 234, 0, 0, 0,
	0, 0, 0, 0, 0, 235, 0, 1552, 0, 192,
	272, 0, 272, 0, 0, 0, 0, 0, 0, 272,
	0, 0, 0, 0, 0, 2774, 2774, 0, 0, 3134,
	0, 3379, 0, 1660, 0, 0, 0, 0, 0, 2944,
	0, 707, 0, 0, 1503, 0, 0, 0, 0, 0,
	3163, 914, 2944, 0, 0, 0, 0, 2673, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 272, 0, 0, 0, 0, 0, 1849,
	1847, 1848, 1840, 1841, 1842, 1843, 1845, 1846, 0, 0,
	0, 0, 272, 1344, 272, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1354, 272, 0, 0, 1344, 0,
	1344, 0, 1344, 0, 1503, 2774, 2774, 2774, 2774, 2774,
	2774, 2774, 2774, 2774, 2774, 2774, 2774, 2774, 2774, 2774,
	2774, 2774, 2774, 2774, 2774, 0, 2774, 0, 0, 0,
	1503, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2844, 0, 0, 0, 272, 272, 272,
	272, 1344, 0, 0, 1344, 0, 272, 0, 0, 0,
	3187, 272, 3374, 3375, 3376, 0, 0, 0, 0, 3373,
	3371, 3372, 3364, 3365, 3366, 3367, 3369, 3370, 0, 1836,
	1837, 0, 1869, 1870, 1871, 1880, 1881, 1882, 0, 0,
	0, 0, 272, 0, 0, 0, 0, 0, 0, 0,
	272, 1873, 1867, 0, 0, 0, 0, 0, 0, 1839,
	1836, 1837, 0, 0, 0, 0, 2769, 2769, 1886, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1867, 0, 1892, 0, 0, 0, 0,
	1839, 0, 0, 0, 1838, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1858, 0, 0, 0, 0, 0,
	0, 0, 0, 1855, 0, 0, 1892, 0, 0, 0,
	0, 0, 0, 0, 0, 1838, 0, 0, 1503, 0,
	0, 0, 0, 0, 0, 1858, 0, 0, 0, 0,
	0, 2926, 0, 0, 1855, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2769, 2769, 2769, 2769,
	2769, 2769, 2769, 2769, 2769, 2769, 2769, 2769, 2769, 2769,
	2769, 2769, 2769, 2769, 2769, 2769, 1552, 2769, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1836, 1837,
	0, 1861, 1862, 1863, 1864, 0, 0, 0, 0, 0,
	4181, 1844, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1867, 1503, 0, 0, 0, 0, 0, 1839, 0,
	0, 0, 1861, 1862, 1863, 1864, 0, 0, 0, 0,
	1872, 0, 1844, 0, 0, 0, 0, 0, 0, 0,
	1877, 0, 0, 1887, 1892, 0, 0, 0, 0, 0,
	1866, 1868, 0, 1838, 0, 3362, 3363, 0, 3380, 3381,
	3382, 0, 0, 0, 0, 0, 1883, 0, 1884, 0,
	0, 0, 0, 0, 0, 1853, 1854, 3810, 0, 0,
	0, 1866, 1868, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1875, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1853, 1854, 1859, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	272, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3377, 0, 0, 0, 0, 0, 272, 0, 0, 1859,
	0, 707, 0, 0, 0, 0, 707, 0, 0, 707,
	0, 0, 707, 707, 0, 1885, 0, 0, 707, 0,
	1844, 0, 0, 0, 0, 0, 272, 0, 0, 0,
	0, 0, 0, 0, 1874, 0, 0, 0, 272, 0,
	0, 0, 0, 0, 0, 1889, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1866,
	1868, 0, 0, 0, 0, 0, 1889, 0, 0, 272,
	0, 0, 0, 272, 272, 0, 0, 3368, 0, 0,
	4470, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1865, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2944, 2944, 272, 0, 3520, 2033, 0, 0,
	0, 0, 0, 2944, 1860, 2039, 0, 1859, 0, 0,
	0, 0, 1865, 0, 2944, 2039, 0, 2944, 2039, 0,
	0, 2039, 0, 0, 3520, 0, 0, 0, 0, 1872,
	0, 1878, 3384, 0, 0, 1860, 272, 272, 2033, 4517,
	272, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2033, 0, 272, 1891, 3594, 3594, 0, 0, 0, 1344,
	0, 0, 0, 0, 3378, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1889, 0, 0, 0, 0, 0,
	0, 2944, 0, 2944, 1891, 3622, 2944, 2033, 0, 0,
	2944, 0, 0, 0, 2033, 0, 0, 794, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1876, 0, 1344, 0, 0,
	0, 0, 0, 0, 272, 1850, 1851, 1857, 1879, 1856,
	1852, 1889, 1849, 1847, 1848, 1840, 1841, 1842, 1843, 1845,
	1846, 0, 272, 1860, 3660, 0, 3337, 0, 3662, 2944,
	3338, 0, 272, 0, 0, 0, 272, 0, 0, 1354,
	1856, 1852, 1872, 1849, 1847, 1848, 1840, 1841, 1842, 1843,
	1845, 1846, 0, 0, 272, 0, 0, 0, 1872, 3134,
	0, 0, 1344, 0, 272, 0, 0, 2944, 0, 707,
	0, 0, 0, 0, 0, 0, 2944, 0, 0, 0,
	1872, 0, 1891, 0, 4655, 0, 1872, 0, 3634, 0,
	3379, 0, 1872, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3659, 0, 0, 0,
	0, 0, 0, 0, 0, 3770, 0, 0, 3687, 0,
	0, 4684, 0, 0, 0, 0, 0, 0, 0, 1836,
	1837, 0, 0, 0, 0, 3776, 0, 0, 1552, 0,
	1503, 1344, 272, 0, 272, 0, 4706, 0, 0, 0,
	1344, 0, 1867, 3417, 0, 0, 0, 0, 0, 1839,
	0, 0, 1847, 1848, 1840, 1841, 1842, 1843, 1845, 1846,
	0, 0, 3736, 1503, 0, 0, 0, 0, 0, 0,
	0, 272, 1872, 0, 3759, 1892, 3446, 1872, 1503, 0,
	0, 0, 0, 0, 1838, 0, 0, 0, 2774, 0,
	1872, 3459, 0, 3362, 3363, 1872, 3380, 3381, 3382, 0,
	0, 0, 0, 0, 1503, 0, 0, 0, 0, 0,
	0, 3374, 3375, 3376, 0, 3809, 0, 3480, 3373, 3371,
	3372, 3364, 3365, 3366, 3367, 3369, 3370, 0, 0, 3843,
	0, 0, 0, 0, 0, 0, 0, 163, 0, 0,
	0, 0, 0, 0, 1119, 73, 0, 46, 45, 0,
	0, 0, 0, 0, 0, 0, 0, 2774, 1119, 0,
	1872, 0, 74, 0, 0, 158, 1872, 0, 3377, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 79, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 67,
	902, 1844, 0, 0, 0, 0, 48, 0, 160, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1991, 0, 0, 0, 0, 0, 47, 73, 88, 905,
	904, 0, 0, 0, 0, 0, 272, 272, 0, 0,
	0, 0, 0, 0, 74, 0, 0, 0, 0, 0,
	1866, 1868, 0, 0, 0, 50, 68, 0, 0, 0,
	79, 707, 707, 0, 51, 0, 1503, 0, 0, 57,
	0, 0, 0, 0, 161, 3368, 0, 0, 0, 0,
	0, 0, 49, 0, 110, 0, 0, 0, 0, 0,
	94, 107, 0, 0, 0, 0, 0, 0, 0, 2769,
	88, 0, 0, 272, 0, 0, 0, 0, 1859, 1872,
	1872, 1872, 1872, 1872, 1872, 1872, 1872, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1872,
	0, 0, 52, 0, 1503, 0, 0, 0, 0, 0,
	3384, 908, 1872, 0, 0, 0, 0, 3459, 0, 0,
	95, 0, 2774, 0, 49, 0, 110, 0, 0, 0,
	0, 0, 94, 107, 0, 0, 0, 0, 2769, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3378, 794, 0, 1889, 0, 0, 2773, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2774,
	0, 1872, 0, 0, 0, 0, 0, 1872, 0, 0,
	0, 0, 0, 0, 0, 0, 3594, 1104, 0, 0,
	0, 0, 95, 0, 2774, 0, 0, 0, 0, 0,
	0, 272, 0, 0, 0, 0, 0, 0, 0, 3362,
	3363, 0, 3380, 3381, 3382, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2033, 0, 272, 0, 0, 1889,
	723, 723, 1354, 0, 1860, 0, 0, 0, 0, 1503,
	0, 0, 1503, 0, 0, 272, 0, 0, 0, 0,
	0, 0, 3779, 0, 0, 1417, 272, 3134, 0, 0,
	3134, 2039, 0, 0, 0, 0, 272, 0, 0, 99,
	0, 0, 0, 0, 0, 0, 272, 0, 0, 0,
	0, 272, 0, 0, 3377, 0, 272, 53, 0, 0,
	0, 0, 0, 1891, 0, 0, 0, 0, 0, 0,
	0, 0, 56, 0, 0, 2944, 272, 59, 3379, 0,
	4053, 0, 0, 4054, 0, 3163, 3163, 69, 0, 1503,
	0, 914, 2944, 2769, 58, 191, 102, 0, 0, 106,
	0, 0, 3822, 54, 0, 0, 1503, 162, 0, 0,
	0, 99, 0, 0, 0, 55, 0, 0, 0, 3838,
	272, 0, 0, 0, 0, 240, 0, 0, 0, 0,
	0, 0, 0, 62, 0, 0, 0, 0, 153, 0,
	2769, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3368, 0, 0, 159, 1840, 1841, 1842, 1843, 1845,
	1846, 0, 0, 0, 0, 2769, 0, 191, 102, 0,
	0, 106, 0, 0, 242, 0, 0, 0, 0, 0,
	4141, 4142, 4143, 0, 0, 0, 0, 2378, 4149, 4150,
	0, 0, 0, 3385, 0, 0, 4201, 240, 0, 157,
	0, 0, 0, 0, 0, 909, 0, 0, 0, 0,
	153, 0, 0, 0, 196, 0, 3384, 0, 0, 3374,
	3375, 3376, 241, 0, 0, 0, 3373, 3371, 3372, 3364,
	3365, 3366, 3367, 3369, 3370, 0, 234, 0, 0, 0,
	0, 1503, 0, 0, 0, 235, 242, 0, 0, 192,
	0, 0, 0, 0, 3931, 0, 0, 0, 3378, 272,
	0, 0, 0, 0, 0, 1552, 0, 272, 0, 0,
	0, 157, 0, 195, 0, 0, 3, 0, 0, 0,
	0, 272, 0, 0, 0, 0, 196, 0, 0, 0,
	0, 0, 0, 0, 241, 0, 0, 0, 0, 1354,
	0, 0, 0, 0, 0, 0, 0, 0, 234, 0,
	0, 0, 1354, 0, 272, 1354, 0, 235, 0, 0,
	0, 192, 0, 2944, 2944, 0, 3520, 0, 0, 3594,
	2944, 0, 0, 0, 0, 1889, 0, 0, 4300, 0,
	4300, 1552, 0, 0, 0, 903, 0, 0, 0, 0,
	0, 0, 2944, 0, 2039, 0, 0, 0, 3520, 0,
	1552, 1552, 272, 2033, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2033, 0, 272, 2033,
	0, 272, 0, 3594, 0, 4245, 4246, 0, 0, 0,
	0, 0, 0, 0, 0, 1872, 0, 0, 0, 0,
	0, 0, 2944, 0, 2944, 272, 0, 0, 0, 0,
	0, 0, 0, 0, 3379, 0, 0, 0, 0, 0,
	0, 0, 1872, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2944, 2944, 0, 0, 0, 0, 3134, 3134, 0, 0,
	0, 0, 0, 3520, 0, 0, 0, 0, 0, 0,
	0, 0, 1872, 0, 272, 0, 1872, 0, 0, 0,
	0, 0, 0, 0, 272, 0, 0, 0, 0, 0,
	1872, 0, 0, 0, 0, 0, 0, 0, 0, 1872,
	1872, 1872, 1872, 1872, 1872, 1872, 1872, 1872, 1872, 1872,
	1872, 1872, 1872, 1872, 1872, 1872, 1872, 1872, 1872, 1872,
	1872, 1872, 1872, 1872, 1872, 1872, 1872, 1872, 1872, 1872,
	1872, 1872, 1872, 1872, 1872, 1363, 2378, 0, 0, 0,
	1872, 0, 1872, 1872, 1872, 1872, 0, 0, 0, 0,
	0, 0, 0, 0, 2773, 2773, 0, 0, 0, 0,
	0, 1503, 1104, 1104, 1104, 3374, 3375, 3376, 0, 1872,
	0, 0, 3373, 3371, 3372, 3364, 3365, 3366, 3367, 3369,
	3370, 0, 0, 0, 1516, 0, 0, 0, 1503, 0,
	1532, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4438, 73, 4440, 4441, 4442, 0, 0, 1554, 0, 1560,
	1872, 1566, 0, 0, 0, 0, 0, 0, 74, 0,
	0, 0, 0, 0, 0, 0, 0, 2944, 2039, 0,
	2039, 0, 0, 4509, 79, 0, 0, 0, 0, 0,
	1872, 0, 272, 1872, 0, 0, 1872, 0, 0, 1872,
	0, 0, 4533, 0, 4533, 1872, 1872, 1872, 1872, 1872,
	1872, 1872, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 88, 0, 0, 0, 0, 794,
	1666, 0, 1671, 0, 0, 0, 0, 0, 0, 0,
	3594, 4490, 1344, 0, 0, 1684, 0, 1689, 0, 0,
	1503, 1503, 0, 1503, 0, 0, 0, 0, 0, 0,
	2033, 0, 272, 0, 0, 908, 4238, 0, 0, 0,
	0, 1872, 0, 0, 3383, 0, 2773, 2773, 2773, 2773,
	110, 0, 0, 1872, 1503, 1872, 94, 107, 0, 4509,
	1872, 0, 4300, 0, 0, 1552, 0, 4256, 0, 2944,
	0, 0, 0, 0, 0, 0, 1119, 0, 0, 0,
	0, 0, 73, 0, 0, 1754, 0, 0, 1760, 4621,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 74,
	0, 1552, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 79, 95, 0, 0, 0,
	0, 0, 0, 0, 1503, 0, 272, 272, 0, 0,
	0, 0, 0, 0, 4584, 0, 0, 0, 0, 0,
	0, 1836, 1837, 0, 1503, 0, 0, 1880, 1881, 1882,
	3843, 0, 0, 0, 0, 88, 0, 0, 0, 0,
	0, 0, 0, 0, 1867, 0, 0, 0, 0, 0,
	0, 1839, 0, 0, 0, 3594, 4675, 1836, 1837, 0,
	1886, 0, 0, 0, 4509, 0, 0, 0, 1893, 1894,
	1895, 1896, 1897, 1898, 1899, 1900, 908, 1892, 0, 0,
	1867, 0, 0, 0, 4300, 0, 1838, 1839, 0, 49,
	0, 110, 0, 0, 0, 0, 1858, 94, 107, 4300,
	0, 1913, 1503, 0, 0, 1855, 0, 1926, 0, 0,
	0, 0, 0, 1892, 0, 3362, 3363, 0, 3380, 3381,
	3382, 0, 1838, 272, 0, 2865, 0, 0, 0, 0,
	0, 0, 1858, 0, 0, 723, 0, 0, 0, 0,
	0, 1855, 0, 0, 0, 99, 0, 0, 0, 0,
	0, 0, 1503, 4300, 4300, 0, 0, 95, 0, 0,
	0, 0, 0, 0, 0, 1417, 0, 0, 0, 0,
	0, 0, 0, 0, 4300, 0, 272, 4300, 0, 0,
	0, 0, 1503, 1861, 1862, 1863, 1864, 2039, 0, 0,
	3377, 0, 0, 1844, 0, 4462, 1552, 3804, 1552, 0,
	0, 191, 102, 0, 0, 106, 0, 0, 0, 0,
	0, 0, 1985, 1985, 1985, 0, 0, 0, 0, 1861,
	1862, 1863, 1864, 0, 0, 1503, 1354, 0, 0, 1844,
	0, 240, 1877, 0, 0, 1887, 0, 0, 4462, 909,
	4801, 0, 1866, 1868, 153, 0, 0, 0, 0, 1872,
	1872, 0, 1872, 0, 0, 0, 4533, 0, 0, 272,
	0, 1503, 0, 0, 0, 0, 0, 1853, 1854, 0,
	0, 0, 0, 0, 2531, 0, 0, 0, 1866, 1868,
	242, 0, 0, 2944, 2378, 1875, 0, 3368, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1859, 0, 0, 1853, 1854, 157, 99, 0, 0, 1119,
	0, 0, 0, 0, 0, 0, 0, 0, 272, 0,
	196, 0, 0, 0, 0, 0, 0, 0, 241, 0,
	0, 0, 0, 1503, 0, 0, 1859, 0, 0, 0,
	3843, 0, 234, 0, 0, 0, 2531, 0, 0, 0,
	0, 235, 3384, 0, 0, 192, 0, 0, 1104, 0,
	0, 0, 191, 102, 1552, 0, 106, 0, 0, 0,
	0, 1872, 0, 0, 0, 0, 0, 1889, 0, 195,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 240, 0, 3378, 0, 0, 0, 0, 0,
	909, 1503, 0, 0, 0, 153, 0, 0, 0, 0,
	0, 0, 0, 1889, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1872, 1872, 0,
	2773, 2773, 0, 1865, 1872, 0, 4509, 0, 0, 0,
	0, 242, 0, 0, 3383, 3383, 0, 0, 1872, 1872,
	0, 0, 0, 0, 0, 0, 1860, 0, 1872, 0,
	0, 0, 0, 0, 0, 0, 157, 0, 0, 1865,
	0, 1889, 1872, 0, 0, 0, 2944, 0, 0, 0,
	0, 196, 0, 1878, 1872, 0, 4300, 0, 4300, 241,
	0, 1552, 1860, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 234, 0, 0, 0, 0, 0, 0,
	0, 0, 235, 0, 0, 1891, 192, 0, 0, 0,
	2773, 2773, 2773, 2773, 2773, 2773, 2773, 2773, 2773, 2773,
	2773, 2773, 2773, 2773, 2773, 2773, 2773, 2773, 2773, 2773,
	1658, 2773, 3383, 3383, 3383, 3383, 0, 0, 0, 0,
	3379, 1891, 2944, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3163,
	0, 0, 0, 0, 0, 0, 0, 1872, 0, 0,
	0, 0, 2944, 0, 0, 0, 0, 1876, 0, 0,
	0, 0, 0, 0, 0, 0, 3163, 0, 0, 0,
	1879, 1856, 1852, 0, 1849, 1847, 1848, 1840, 1841, 1842,
	1843, 1845, 1846, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1856, 1852, 0,
	1849, 1847, 1848, 1840, 1841, 1842, 1843, 1845, 1846, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2744, 2745, 2746, 2747, 2740, 2741, 2742, 2743, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3374, 3375, 3376, 0, 1119, 0, 0, 3373, 3371,
	3372, 3364, 3365, 3366, 3367, 3369, 3370, 0, 1872, 0,
	0, 0, 0, 0, 2439, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2720, 2721, 2722, 2723, 0, 0, 0, 0, 2466,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1872, 1872, 0, 2732, 2733, 2734, 2735, 2728, 2729,
	2730, 2731, 2736, 2737, 2738, 2739, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2506, 0, 2510, 0, 0,
	0, 0, 0, 0, 2524, 0, 0, 0, 0, 0,
	0, 2533, 2534, 2535, 2536, 2537, 2538, 2539, 2540, 2541,
	2542, 2543, 2544, 2545, 2546, 2547, 2548, 2549, 2550, 2551,
	2552, 2553, 2554, 2555, 2556, 2557, 2558, 2559, 2560, 2561,
	2562, 2563, 2564, 2565, 2566, 2567, 2568, 1153, 2574, 0,
	2576, 2577, 2578, 2579, 2716, 2717, 2718, 2719, 2724, 2725,
	2726, 2727, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2603, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1913, 0,
	0, 0, 2654, 271, 271, 271, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2684, 2687,
	2690, 2693, 0, 0, 2699, 2700, 2701, 2702, 2703, 2704,
	2705, 0, 838, 0, 0, 0, 0, 0, 0, 0,
	1836, 1837, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2765, 0, 2777, 2779, 2784, 0, 0, 0,
	838, 0, 0, 1867, 0, 0, 0, 0, 0, 0,
	1839, 0, 1872, 1872, 0, 0, 1872, 3383, 3383, 1872,
	0, 0, 0, 1872, 0, 0, 0, 0, 0, 0,
	1872, 0, 0, 0, 0, 0, 1892, 0, 0, 0,
	0, 0, 0, 1872, 0, 1838, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1858, 0, 0, 0, 0,
	0, 0, 0, 0, 1855, 0, 1872, 1872, 1872, 1872,
	1872, 0, 0, 0, 0, 0, 1872, 0, 1872, 0,
	0, 3383, 3383, 3383, 3383, 3383, 3383, 3383, 3383, 3383,
	3383, 3383, 3383, 3383, 3383, 3383, 3383, 3383, 3383, 3383,
	3383, 0, 0, 1189, 3383, 0, 0, 1872, 1872, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1872,
	3799, 0, 0, 0, 0, 0, 0, 0, 1872, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1276, 0, 1861, 1862, 1863, 1864, 0, 0, 0, 0,
	0, 0, 1844, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1872, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1872,
	0, 1866, 1868, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1853, 1854, 0, 0,
	1872, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1872, 1872, 0, 0, 0, 0, 0, 0, 1859,
	0, 0, 0, 0, 0, 0, 0, 1836, 1837, 0,
	1869, 1870, 1871, 1880, 1881, 1882, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1873,
	1867, 0, 0, 0, 0, 0, 0, 1839, 0, 0,
	0, 0, 0, 0, 1836, 1837, 1886, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3093, 3094, 1892, 3096, 0, 0, 1867, 0, 0,
	0, 0, 1838, 0, 1839, 0, 1889, 0, 0, 0,
	0, 0, 1858, 0, 0, 0, 1280, 0, 0, 0,
	0, 1855, 1872, 0, 0, 0, 0, 0, 0, 0,
	1892, 0, 0, 0, 0, 0, 0, 0, 0, 1838,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1858,
	0, 0, 0, 0, 0, 0, 0, 0, 1855, 0,
	0, 0, 1865, 0, 0, 1872, 1872, 0, 0, 0,
	1872, 1872, 0, 0, 1872, 1872, 0, 0, 0, 1872,
	0, 0, 0, 1872, 0, 1860, 0, 0, 1872, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1861,
	1862, 1863, 1864, 2773, 0, 0, 0, 0, 0, 1844,
	0, 0, 0, 0, 3798, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3215, 0, 0, 0, 1861, 1862, 1863, 1864,
	0, 0, 0, 0, 1891, 0, 1844, 0, 1877, 0,
	0, 1887, 0, 0, 0, 0, 0, 0, 1866, 1868,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2773, 0, 1883, 0, 1884, 0, 0, 0,
	0, 0, 0, 1853, 1854, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1866, 1868, 0, 0, 0,
	0, 1875, 0, 0, 1893, 1894, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1859, 0, 0, 0,
	1853, 1854, 0, 0, 0, 0, 0, 0, 1872, 0,
	1856, 1852, 0, 1849, 1847, 1848, 1840, 1841, 1842, 1843,
	1845, 1846, 0, 0, 0, 73, 0, 0, 0, 0,
	0, 0, 0, 1859, 0, 0, 0, 0, 0, 0,
	3271, 3272, 74, 1885, 0, 0, 3278, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 79, 0,
	0, 0, 1874, 0, 0, 3292, 3293, 0, 0, 0,
	0, 2654, 0, 1889, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 88, 0,
	0, 0, 0, 271, 0, 271, 271, 0, 0, 271,
	1889, 0, 0, 0, 0, 0, 3302, 0, 0, 0,
	0, 0, 0, 1872, 1872, 1872, 0, 0, 0, 1865,
	0, 0, 3316, 0, 1872, 1872, 3383, 2773, 0, 908,
	0, 0, 0, 1872, 0, 0, 1872, 0, 0, 3328,
	0, 0, 1860, 0, 110, 0, 271, 0, 271, 271,
	94, 107, 271, 271, 0, 0, 1865, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1878,
	0, 0, 838, 3383, 2773, 0, 0, 0, 0, 1860,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1872, 0, 0, 0, 0, 0, 0, 0, 1872, 2773,
	0, 1891, 0, 0, 0, 0, 1872, 0, 0, 0,
	95, 0, 0, 0, 0, 1872, 0, 1872, 0, 0,
	0, 0, 0, 271, 271, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1891, 0,
	0, 2784, 2784, 2784, 0, 0, 0, 0, 0, 271,
	271, 0, 0, 0, 0, 0, 1985, 0, 0, 0,
	0, 0, 0, 0, 3421, 0, 0, 0, 0, 0,
	0, 0, 0, 1876, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1850, 1851, 1857, 1879, 1856, 1852, 0,
	1849, 1847, 1848, 1840, 1841, 1842, 1843, 1845, 1846, 0,
	0, 0, 0, 0, 2650, 0, 0, 0, 2651, 0,
	0, 3383, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1856, 1852, 0, 1849, 1847, 1848,
	1840, 1841, 1842, 1843, 1845, 1846, 0, 0, 0, 1872,
	3383, 0, 0, 1872, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1280, 271, 0, 0, 0, 0, 99,
	0, 0, 3383, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1104, 0, 0, 0, 0, 0, 271, 0,
	0, 0, 0, 0, 0, 0, 1104, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1280, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1872, 0, 0, 191, 102, 0, 0, 106,
	3552, 0, 0, 0, 0, 0, 1836, 1837, 0, 1869,
	1870, 1871, 1880, 1881, 1882, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 240, 0, 1280, 1873, 1867,
	0, 0, 0, 909, 1280, 0, 1839, 0, 153, 0,
	0, 807, 0, 0, 0, 1886, 0, 0, 0, 0,
	1280, 0, 0, 0, 0, 0, 3605, 3606, 0, 0,
	0, 0, 1892, 0, 0, 0, 818, 0, 0, 0,
	0, 1838, 0, 0, 242, 0, 0, 0, 0, 0,
	0, 1858, 0, 0, 0, 0, 0, 0, 0, 0,
	1855, 0, 0, 0, 0, 0, 0, 0, 0, 157,
	0, 0, 0, 0, 0, 0, 0, 819, 1280, 0,
	0, 0, 1872, 0, 196, 0, 0, 0, 0, 0,
	0, 0, 241, 0, 0, 0, 0, 1836, 1837, 0,
	0, 0, 0, 0, 0, 0, 234, 1872, 0, 0,
	0, 0, 0, 0, 0, 235, 0, 0, 0, 192,
	1867, 0, 0, 0, 0, 0, 0, 1839, 0, 812,
	0, 0, 0, 0, 0, 0, 825, 0, 1861, 1862,
	1863, 1864, 0, 195, 0, 0, 0, 0, 1844, 0,
	817, 0, 2007, 1892, 1276, 0, 0, 0, 271, 0,
	0, 0, 1838, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1858, 0, 271, 2007, 271, 0, 0, 0,
	0, 1855, 0, 0, 838, 0, 0, 1877, 0, 0,
	1887, 838, 0, 0, 0, 0, 0, 1866, 1868, 0,
	0, 816, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1883, 0, 1884, 0, 0, 769, 271,
	0, 0, 1853, 1854, 0, 0, 271, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3277, 0, 1872,
	1875, 0, 0, 814, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1859, 0, 0, 0, 1861,
	1862, 1863, 1864, 0, 0, 0, 0, 0, 0, 1844,
	0, 0, 0, 0, 2524, 0, 0, 0, 0, 0,
	3796, 3797, 0, 0, 3800, 0, 0, 0, 3803, 0,
	0, 0, 0, 0, 0, 0, 0, 3807, 0, 0,
	0, 824, 1885, 0, 0, 0, 3814, 0, 0, 0,
	0, 3421, 0, 0, 0, 0, 0, 0, 1866, 1868,
	0, 1874, 0, 0, 0, 0, 3827, 0, 0, 0,
	0, 0, 1889, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1853, 1854, 0, 3850, 3851, 0, 3852,
	3853, 3854, 0, 0, 0, 0, 0, 0, 1280, 0,
	1280, 0, 0, 0, 0, 0, 0, 3860, 0, 0,
	0, 3862, 0, 0, 0, 1280, 1859, 0, 0, 809,
	0, 0, 0, 0, 0, 0, 0, 0, 1865, 0,
	0, 0, 0, 0, 0, 0, 2071, 0, 0, 0,
	0, 0, 0, 0, 3891, 3892, 0, 0, 0, 0,
	813, 1860, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3903, 0, 0, 0, 0, 0, 0, 271,
	0, 0, 0, 838, 0, 0, 0, 3912, 1878, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 768, 0,
	0, 0, 0, 1889, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 820, 0, 0, 0, 0, 0, 811,
	1891, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 271, 0, 1280,
	0, 271, 0, 0, 0, 0, 0, 271, 0, 1865,
	0, 0, 0, 271, 0, 0, 0, 808, 0, 0,
	3968, 0, 0, 0, 0, 0, 0, 0, 0, 271,
	0, 271, 1860, 0, 0, 0, 0, 271, 0, 0,
	0, 0, 1876, 0, 815, 3983, 0, 0, 0, 0,
	0, 0, 1850, 1851, 1857, 1879, 1856, 1852, 770, 1849,
	1847, 1848, 1840, 1841, 1842, 1843, 1845, 1846, 0, 810,
	0, 0, 0, 0, 0, 0, 0, 4207, 0, 4014,
	0, 0, 271, 0, 0, 271, 0, 0, 0, 0,
	0, 1891, 0, 822, 823, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 271, 0, 0, 0,
	0, 0, 0, 0, 4035, 4036, 0, 0, 0, 838,
	271, 0, 271, 0, 271, 0, 271, 0, 271, 0,
	0, 0, 0, 0, 0, 0, 0, 1280, 1280, 0,
	0, 0, 0, 0, 0, 0, 0, 1280, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	271, 271, 271, 271, 0, 0, 0, 1856, 1852, 0,
	1849, 1847, 1848, 1840, 1841, 1842, 1843, 1845, 1846, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1836, 1837, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1867, 1985, 0, 0, 0, 0,
	0, 1839, 0, 0, 4136, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1280, 0, 1280, 0, 1280, 1892, 0, 0,
	0, 0, 0, 0, 0, 0, 1838, 0, 0, 0,
	0, 0, 0, 0, 1280, 1280, 1858, 0, 0, 0,
	0, 0, 0, 0, 0, 1855, 0, 1280, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1280,
	0, 1280, 1280, 1280, 0, 0, 0, 0, 0, 4179,
	4180, 0, 0, 0, 0, 4184, 4185, 0, 0, 0,
	4188, 4189, 0, 0, 0, 0, 0, 0, 4193, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4197,
	0, 3270, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4202, 0, 0, 0, 0,
	0, 0, 0, 1861, 1862, 1863, 1864, 0, 0, 0,
	0, 0, 0, 1844, 0, 0, 0, 0, 0, 0,
	0, 0, 1276, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1276, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 271, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1866, 1868, 0, 0, 0, 0, 0, 0,
	2071, 2071, 1280, 271, 0, 0, 754, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1853, 1854, 0,
	0, 0, 0, 0, 0, 0, 737, 0, 0, 0,
	0, 738, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1859, 0, 271, 0, 1104, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 271, 0,
	739, 271, 0, 0, 0, 271, 0, 271, 0, 0,
	0, 740, 0, 0, 271, 271, 0, 0, 0, 0,
	0, 0, 0, 0, 271, 1280, 0, 0, 0, 0,
	0, 0, 741, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4342,
	0, 0, 0, 0, 760, 0, 0, 1889, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 742, 0, 0, 0, 0,
	0, 0, 271, 0, 0, 0, 0, 0, 1280, 0,
	0, 0, 0, 0, 0, 1280, 271, 0, 0, 0,
	743, 0, 0, 0, 1280, 0, 0, 0, 0, 271,
	0, 0, 0, 1865, 0, 0, 0, 0, 0, 0,
	0, 1280, 0, 744, 0, 0, 745, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1860, 0, 0, 0,
	0, 0, 1269, 769, 0, 0, 271, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 271, 271,
	0, 0, 0, 0, 0, 0, 0, 0, 759, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 838, 0, 0, 0, 0, 267, 267,
	703, 0, 4457, 4458, 4459, 1891, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 271, 2524, 838, 0, 4468, 4469,
	0, 0, 0, 271, 0, 0, 756, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4477, 4480, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1280,
	0, 0, 0, 0, 0, 0, 0, 271, 0, 0,
	0, 1856, 1852, 0, 1849, 1847, 1848, 1840, 1841, 1842,
	1843, 1845, 1846, 0, 0, 0, 271, 0, 271, 766,
	0, 747, 0, 0, 0, 2071, 0, 0, 0, 271,
	4534, 0, 0, 0, 0, 754, 0, 0, 0, 4542,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	767, 0, 748, 0, 4550, 737, 0, 1104, 0, 0,
	738, 277, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4559, 0, 1280, 4561, 0, 0, 0, 0, 0,
	0, 271, 271, 271, 271, 0, 0, 0, 0, 0,
	271, 0, 0, 768, 0, 271, 0, 0, 0, 739,
	0, 749, 0, 0, 0, 0, 764, 765, 762, 0,
	740, 0, 0, 0, 757, 0, 0, 750, 0, 0,
	0, 0, 0, 0, 0, 0, 271, 0, 0, 0,
	0, 741, 0, 0, 271, 0, 830, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 760, 0, 0, 0, 0, 0, 0,
	751, 0, 758, 0, 830, 0, 0, 0, 0, 0,
	752, 1166, 0, 0, 742, 1280, 0, 0, 0, 0,
	0, 0, 0, 0, 753, 0, 0, 0, 1280, 761,
	1280, 0, 0, 0, 0, 0, 0, 0, 0, 743,
	0, 0, 0, 770, 0, 1836, 1837, 1280, 1869, 1870,
	1871, 1880, 1881, 1882, 755, 0, 0, 273, 273, 273,
	0, 0, 744, 0, 0, 745, 0, 1873, 1867, 0,
	0, 0, 0, 0, 0, 1839, 0, 0, 0, 0,
	0, 0, 769, 0, 1886, 0, 273, 4683, 0, 0,
	0, 4687, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1892, 0, 0, 0, 0, 0, 759, 0, 0,
	1838, 0, 0, 0, 273, 0, 0, 0, 0, 0,
	1858, 0, 0, 0, 0, 0, 0, 0, 0, 1855,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 756, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4756, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1861, 1862, 1863,
	1864, 0, 0, 0, 0, 0, 0, 1844, 0, 0,
	0, 0, 0, 2524, 0, 0, 0, 0, 0, 0,
	0, 0, 4480, 0, 0, 0, 0, 0, 0, 0,
	747, 0, 0, 0, 1276, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1877, 0, 0, 1887,
	1276, 0, 0, 0, 0, 0, 1866, 1868, 0, 767,
	0, 748, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1883, 1104, 1884, 0, 0, 0, 0, 0,
	2007, 1853, 1854, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 271, 0, 0, 0, 0, 0, 0, 1875,
	0, 0, 768, 0, 0, 0, 0, 0, 0, 0,
	749, 0, 0, 0, 1859, 764, 765, 762, 0, 0,
	0, 0, 0, 757, 0, 0, 750, 0, 0, 0,
	0, 0, 0, 271, 0, 0, 0, 271, 271, 0,
	0, 4876, 4876, 4876, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1885, 0, 0, 0, 0, 0, 0, 271, 751,
	0, 758, 0, 0, 0, 0, 0, 0, 4901, 752,
	1874, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1889, 0, 753, 0, 0, 0, 0, 761, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	271, 271, 770, 0, 271, 0, 0, 0, 0, 0,
	0, 2007, 0, 755, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4876, 0, 271, 0, 0, 0,
	1280, 1280, 0, 0, 0, 0, 0, 1865, 1330, 0,
	1330, 1330, 0, 0, 0, 0, 1280, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1860, 0, 0, 0, 1280, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1280, 0, 0, 1280,
	0, 0, 0, 0, 0, 0, 0, 1878, 0, 0,
	0, 1414, 0, 0, 0, 0, 0, 1524, 0, 0,
	0, 2071, 0, 0, 0, 1280, 0, 0, 271, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1891,
	0, 0, 0, 0, 0, 0, 838, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 271, 0, 0, 0,
	271, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4876, 5033, 0, 0, 271, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1276, 0,
	0, 0, 0, 0, 0, 0, 2071, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1876, 0, 0, 1664, 1665, 0, 0, 0, 0,
	0, 1850, 1851, 1857, 1879, 1856, 1852, 0, 1849, 1847,
	1848, 1840, 1841, 1842, 1843, 1845, 1846, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3812, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 271, 1280, 271, 1836,
	1837, 0, 1869, 1870, 1871, 1880, 1881, 1882, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1873, 1867, 0, 0, 0, 0, 0, 0, 1839,
	0, 1420, 0, 0, 0, 271, 0, 0, 1886, 1781,
	0, 0, 0, 0, 0, 1280, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1892, 0, 0, 0, 1280,
	0, 1280, 0, 0, 1838, 1280, 0, 0, 0, 0,
	0, 0, 0, 1280, 1858, 0, 0, 0, 0, 1584,
	0, 0, 0, 1855, 0, 1280, 0, 273, 0, 273,
	273, 0, 0, 273, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1280, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1584, 0, 0, 0, 0,
	0, 0, 1584, 0, 0, 0, 0, 0, 0, 1280,
	273, 1423, 273, 273, 0, 0, 273, 273, 1584, 0,
	0, 1280, 0, 1280, 0, 0, 0, 0, 0, 0,
	0, 1861, 1862, 1863, 1864, 0, 273, 0, 0, 0,
	0, 1844, 1158, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1423,
	1276, 1276, 0, 0, 0, 0, 0, 0, 0, 0,
	1280, 0, 0, 1280, 0, 0, 1584, 0, 0, 0,
	1877, 0, 0, 1887, 0, 0, 0, 273, 273, 0,
	1866, 1868, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1423, 1883, 0, 1884, 0,
	0, 0, 1423, 273, 273, 1853, 1854, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 838, 1423, 0,
	0, 2071, 0, 1875, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1859, 0,
	1280, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2023, 0, 0, 0, 1280, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2071, 2071, 2034,
	0, 1524, 0, 0, 0, 0, 1423, 0, 0, 0,
	0, 0, 0, 0, 0, 1885, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2071, 2071, 0, 0,
	0, 0, 0, 0, 1874, 0, 0, 0, 273, 0,
	0, 0, 0, 0, 1330, 1889, 0, 0, 0, 0,
	0, 1524, 0, 0, 0, 0, 0, 0, 0, 2071,
	0, 0, 273, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 271, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1280, 1280, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	271, 1865, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 271,
	0, 0, 1280, 0, 1860, 0, 0, 0, 0, 0,
	271, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	271, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	271, 1878, 0, 0, 0, 271, 0, 0, 0, 0,
	271, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1276, 0, 0, 1891, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1420, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 830, 0,
	0, 0, 0, 0, 0, 830, 0, 0, 0, 0,
	0, 0, 0, 0, 271, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1876, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1850, 1851, 1857, 1879, 1856,
	1852, 0, 1849, 1847, 1848, 1840, 1841, 1842, 1843, 1845,
	1846, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3340, 0, 273, 0, 0, 0, 0, 1280, 0, 0,
	1280, 0, 0, 1423, 0, 0, 0, 0, 273, 273,
	273, 0, 0, 0, 0, 0, 0, 1420, 273, 0,
	0, 0, 2320, 0, 0, 273, 2327, 0, 0, 0,
	2071, 0, 0, 0, 0, 0, 0, 0, 2340, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 273, 2352, 0, 2352, 0, 0, 0,
	273, 0, 2359, 1276, 0, 0, 0, 0, 0, 0,
	0, 1276, 1280, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2007, 1280, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1280, 1280, 1280,
	0, 0, 0, 0, 1280, 1280, 1280, 2327, 0, 0,
	2387, 0, 0, 0, 0, 0, 0, 0, 271, 0,
	0, 0, 0, 0, 0, 0, 1280, 1423, 0, 0,
	0, 2407, 1280, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2007, 0, 2007, 2423, 0, 2425, 0, 2427,
	0, 2429, 0, 2430, 0, 1584, 1584, 0, 0, 1280,
	0, 0, 0, 0, 0, 1420, 271, 0, 0, 0,
	2071, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 271, 0, 0, 271, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2457, 2458, 2459, 0, 0,
	0, 0, 0, 0, 1142, 112, 0, 0, 0, 271,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 273, 0, 1423, 1423, 273, 271, 1280,
	1584, 0, 1584, 0, 1584, 1423, 0, 1280, 271, 0,
	0, 1280, 1280, 0, 1280, 0, 0, 0, 0, 0,
	0, 1280, 1584, 1584, 0, 0, 0, 0, 0, 112,
	0, 0, 1280, 1280, 0, 1584, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1280, 0, 1584, 0, 1584,
	1584, 1584, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 273, 0, 0, 0, 273, 0, 0, 0, 0,
	0, 273, 0, 830, 0, 0, 0, 273, 1280, 0,
	1280, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 273, 0, 273, 0, 0, 0, 0,
	0, 273, 1421, 0, 0, 0, 0, 0, 0, 0,
	1423, 0, 1423, 0, 1423, 1280, 0, 0, 1078, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1099, 0, 1423, 1423, 0, 1280, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1423, 273, 0, 0, 273,
	1585, 0, 0, 0, 0, 0, 0, 1423, 0, 1423,
	1423, 1423, 0, 0, 0, 0, 0, 2841, 0, 0,
	273, 0, 0, 1280, 1280, 0, 271, 1263, 0, 0,
	1420, 0, 0, 273, 273, 0, 273, 0, 273, 0,
	273, 0, 273, 0, 0, 0, 1585, 0, 0, 0,
	0, 0, 0, 1585, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1280, 0, 0, 0, 0, 1280, 1585,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 273, 273, 273, 273, 0, 0,
	0, 0, 0, 0, 0, 0, 271, 1280, 1280, 1280,
	1280, 1280, 1280, 2892, 0, 0, 1330, 0, 0, 0,
	1330, 0, 1330, 1280, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1420, 0, 0, 2007, 1585, 0, 2340,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1423, 0, 0, 1280, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2071, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1280, 0, 1280, 0,
	271, 271, 0, 1420, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1420,
	0, 0, 1280, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1423, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1524, 0, 0, 0, 0, 0, 2071, 0, 0,
	0, 0, 0, 2327, 2327, 0, 0, 0, 2007, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2007, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1280, 0, 0, 0, 0, 0,
	0, 0, 0, 1423, 0, 0, 0, 271, 0, 0,
	0, 1280, 1280, 1280, 0, 0, 0, 0, 0, 2327,
	0, 0, 0, 0, 0, 0, 273, 0, 2340, 1423,
	0, 0, 1280, 0, 0, 0, 0, 2007, 2007, 0,
	0, 0, 0, 0, 0, 0, 0, 273, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2007, 0,
	271, 2007, 1280, 0, 0, 1280, 0, 1420, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3185, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 273, 0, 0, 0,
	0, 3196, 0, 3199, 0, 0, 0, 0, 0, 0,
	0, 0, 273, 0, 0, 273, 2071, 0, 0, 273,
	0, 273, 0, 0, 1421, 0, 0, 0, 273, 273,
	0, 0, 0, 0, 0, 0, 0, 0, 273, 0,
	0, 0, 0, 271, 0, 0, 0, 0, 0, 0,
	0, 1420, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3231, 1524, 3233, 1524,
	0, 0, 0, 0, 1280, 3239, 0, 1423, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1280,
	0, 0, 0, 0, 0, 0, 273, 0, 0, 0,
	0, 0, 271, 0, 0, 0, 0, 0, 0, 0,
	273, 1330, 0, 0, 0, 0, 0, 0, 0, 3268,
	830, 0, 0, 273, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1280, 1280, 0, 0, 0, 1421, 0,
	112, 0, 0, 1584, 0, 0, 0, 0, 0, 0,
	273, 1423, 0, 0, 1280, 0, 1584, 1280, 1584, 0,
	0, 1280, 273, 273, 0, 0, 0, 0, 0, 0,
	0, 1280, 0, 0, 0, 1584, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 273, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 273, 0,
	273, 0, 112, 0, 112, 0, 112, 273, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1423, 0, 0, 0, 0, 0, 0,
	2007, 0, 2007, 0, 0, 0, 1423, 0, 1423, 0,
	0, 0, 0, 0, 0, 0, 1585, 1585, 1099, 112,
	112, 273, 0, 0, 0, 1423, 1421, 0, 0, 0,
	0, 0, 0, 0, 0, 112, 0, 112, 0, 0,
	273, 0, 273, 0, 0, 0, 0, 0, 0, 0,
	112, 0, 112, 273, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1836, 1837, 0, 1869,
	1870, 1871, 1880, 1881, 1882, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 273, 273, 273, 273, 1867,
	0, 0, 0, 0, 273, 0, 1839, 112, 0, 273,
	0, 0, 0, 0, 0, 1886, 0, 0, 0, 0,
	0, 1585, 0, 1585, 0, 1585, 0, 0, 0, 0,
	0, 0, 1892, 0, 0, 0, 0, 0, 0, 0,
	273, 1838, 0, 1585, 1585, 0, 0, 0, 273, 0,
	0, 1858, 0, 0, 0, 0, 1585, 0, 0, 0,
	1855, 0, 0, 0, 0, 0, 0, 3469, 1585, 0,
	1585, 1585, 1585, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1280, 0, 1280, 0,
	0, 0, 0, 0, 0, 0, 1078, 0, 1330, 0,
	0, 0, 1524, 1524, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1906, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1861, 1862,
	1863, 1864, 0, 3516, 0, 1912, 0, 0, 1844, 1918,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3571, 3573, 1877, 0, 2340,
	1887, 0, 0, 0, 0, 0, 0, 1866, 1868, 0,
	0, 1421, 0, 0, 0, 0, 0, 0, 0, 1420,
	0, 0, 0, 1883, 0, 1884, 0, 0, 0, 0,
	0, 0, 1853, 1854, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1875, 0, 1420, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1859, 0, 1420, 0, 0,
	858, 0, 0, 0, 0, 0, 0, 0, 0, 2005,
	0, 2008, 0, 112, 0, 0, 0, 0, 0, 0,
	860, 0, 0, 1420, 0, 861, 0, 0, 0, 0,
	0, 0, 0, 0, 1421, 0, 0, 0, 0, 0,
	0, 0, 1885, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1423,
	0, 3684, 0, 0, 862, 3688, 879, 0, 0, 0,
	0, 0, 1889, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 863, 1423, 0, 0, 0, 864, 0, 0, 0,
	0, 0, 0, 0, 1421, 0, 0, 1423, 0, 0,
	0, 0, 0, 0, 0, 0, 273, 0, 888, 0,
	0, 0, 0, 0, 0, 865, 0, 0, 1865, 0,
	1421, 0, 0, 1423, 0, 0, 0, 0, 0, 886,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1860, 0, 0, 0, 0, 0, 273, 0, 0,
	0, 273, 273, 0, 859, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1420, 0, 0, 1878, 0,
	0, 3781, 0, 1524, 0, 0, 0, 866, 0, 0,
	867, 0, 273, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 890, 0, 0, 0, 0, 769, 0, 0,
	1891, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3794, 0, 0, 1584, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 273, 273, 0, 1584, 273, 1584,
	0, 0, 0, 1420, 0, 273, 0, 0, 0, 0,
	830, 1584, 0, 0, 0, 0, 0, 0, 0, 0,
	273, 0, 0, 1584, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1421, 0,
	889, 0, 1876, 0, 0, 1423, 0, 0, 0, 0,
	884, 0, 1850, 1851, 1857, 1879, 1856, 1852, 0, 1849,
	1847, 1848, 1840, 1841, 1842, 1843, 1845, 1846, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1584, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1584,
	0, 1584, 0, 1423, 0, 0, 0, 0, 0, 0,
	0, 0, 273, 0, 0, 0, 0, 1423, 0, 1423,
	0, 0, 0, 1423, 868, 0, 0, 0, 0, 0,
	273, 1423, 1421, 0, 0, 870, 0, 0, 0, 0,
	273, 0, 0, 1423, 273, 0, 0, 0, 1420, 0,
	0, 1420, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 273, 0, 0, 0, 871, 0, 0, 0,
	0, 0, 0, 1099, 0, 1099, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 880, 0, 1423, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 768, 0, 1423,
	0, 1423, 0, 0, 0, 0, 0, 0, 0, 0,
	857, 0, 881, 0, 0, 0, 0, 0, 1420, 0,
	0, 872, 0, 0, 1585, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1420, 0, 1585, 0, 1585,
	0, 0, 0, 0, 0, 0, 0, 878, 1423, 0,
	273, 1423, 273, 0, 0, 0, 1585, 112, 0, 0,
	0, 0, 0, 0, 873, 0, 0, 0, 874, 893,
	0, 892, 0, 0, 875, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 876, 273,
	0, 0, 0, 885, 0, 0, 0, 0, 0, 894,
	0, 891, 0, 0, 0, 0, 0, 770, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1836,
	1837, 0, 1869, 1870, 1871, 1880, 1881, 1882, 1423, 0,
	0, 0, 0, 1078, 0, 0, 1078, 1078, 0, 0,
	0, 0, 1867, 0, 0, 1423, 0, 0, 0, 1839,
	0, 0, 0, 0, 0, 2340, 0, 0, 1886, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1420, 0, 0, 0, 2340, 1892, 0, 0, 0, 0,
	0, 0, 0, 0, 1838, 4090, 0, 0, 0, 0,
	0, 0, 2592, 0, 1858, 4100, 0, 0, 0, 0,
	0, 830, 0, 1855, 0, 0, 0, 0, 0, 0,
	2340, 0, 1099, 0, 0, 4118, 0, 0, 0, 0,
	0, 0, 1912, 0, 0, 0, 1912, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4164,
	1423, 1861, 1862, 1863, 1864, 0, 0, 0, 0, 0,
	0, 1844, 0, 0, 0, 0, 0, 0, 0, 1263,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 273, 0, 0, 0, 2008, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1877, 0, 0, 1887, 0, 0, 0, 0, 0, 0,
	1866, 1868, 0, 0, 0, 1584, 0, 0, 1584, 0,
	0, 0, 0, 0, 0, 0, 112, 0, 0, 0,
	0, 0, 0, 0, 0, 1853, 1854, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1875, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1859, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1584, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 273,
	0, 0, 0, 0, 0, 1584, 1584, 1584, 0, 0,
	0, 0, 1584, 1584, 1584, 1423, 0, 0, 1423, 0,
	1421, 0, 0, 0, 273, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1584, 1889, 0, 0, 0, 0,
	1420, 0, 0, 273, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1421, 273, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 273, 0, 0, 1420, 1421, 0,
	0, 0, 0, 0, 273, 0, 0, 0, 0, 273,
	0, 4320, 0, 0, 273, 0, 0, 0, 0, 0,
	1423, 1865, 0, 0, 1421, 0, 0, 2340, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1860, 1423, 1423, 1423, 0, 0,
	0, 0, 1423, 1423, 1423, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1878, 0, 0, 1423, 0, 0, 0, 273, 0,
	1423, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 112, 0, 0, 112, 0, 112,
	0, 0, 0, 1891, 0, 0, 0, 1423, 0, 0,
	0, 0, 0, 2340, 0, 0, 0, 0, 0, 1420,
	1420, 0, 1420, 4417, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1584, 1584, 0, 0, 0, 0, 112, 0, 0, 112,
	0, 0, 0, 1420, 0, 112, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1876, 1421, 0, 0, 0,
	0, 0, 0, 0, 0, 1850, 1851, 1857, 1879, 1856,
	1852, 0, 1849, 1847, 1848, 1840, 1841, 1842, 1843, 1845,
	1846, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1420, 1585, 0, 0, 0, 0, 1423,
	1423, 112, 1423, 0, 0, 0, 0, 0, 1585, 0,
	1585, 0, 0, 1420, 1421, 0, 0, 0, 0, 0,
	1423, 1423, 1585, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1423, 1585, 0, 0, 0, 0, 0,
	0, 0, 273, 0, 0, 0, 0, 0, 0, 0,
	0, 1584, 1584, 0, 0, 0, 0, 0, 0, 0,
	0, 4519, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1585, 0,
	273, 1420, 0, 0, 0, 0, 1584, 0, 0, 0,
	1585, 0, 1585, 1423, 0, 0, 273, 0, 0, 273,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1423, 0, 1584, 1584, 1584, 1584, 1584,
	1584, 2340, 0, 273, 0, 0, 0, 0, 2592, 0,
	0, 1420, 0, 0, 0, 0, 0, 0, 0, 1421,
	0, 0, 1421, 0, 0, 0, 0, 0, 0, 1912,
	0, 1423, 1423, 0, 0, 0, 0, 0, 0, 0,
	0, 1420, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 273, 0, 0, 0, 0, 0, 0, 0,
	0, 1423, 273, 0, 0, 0, 1423, 0, 0, 0,
	0, 0, 0, 0, 1420, 0, 1584, 0, 0, 0,
	0, 0, 0, 0, 0, 4645, 1524, 0, 0, 1421,
	0, 0, 0, 0, 0, 1423, 1423, 1423, 1423, 1423,
	1423, 0, 0, 0, 0, 0, 1421, 0, 0, 0,
	1420, 1423, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1423, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1420, 0, 1423, 0, 1423, 1836, 1837, 0,
	1869, 1870, 1871, 1880, 1881, 1882, 0, 0, 0, 1584,
	1584, 1584, 0, 0, 0, 0, 0, 0, 0, 1873,
	1867, 0, 0, 0, 0, 0, 0, 1839, 0, 0,
	1423, 1263, 0, 0, 0, 0, 1886, 0, 0, 0,
	273, 0, 0, 0, 0, 0, 0, 1263, 0, 0,
	0, 1421, 0, 1892, 0, 0, 0, 0, 0, 0,
	1420, 0, 1838, 1584, 0, 4762, 0, 0, 0, 0,
	0, 0, 1858, 0, 0, 0, 0, 0, 0, 0,
	0, 1855, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1423, 0, 0, 0, 0, 0, 0, 0,
	273, 0, 0, 0, 0, 0, 0, 0, 0, 1423,
	1423, 1423, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4815, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1861,
	1862, 1863, 1864, 0, 0, 0, 0, 0, 0, 1844,
	1423, 0, 0, 1423, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 112,
	112, 0, 112, 0, 273, 273, 0, 4858, 1877, 0,
	0, 1887, 0, 0, 0, 0, 0, 0, 1866, 1868,
	0, 0, 0, 0, 0, 0, 1585, 0, 0, 1585,
	0, 0, 0, 0, 1883, 0, 1884, 0, 0, 0,
	0, 0, 0, 1853, 1854, 0, 0, 0, 0, 0,
	0, 0, 0, 112, 112, 0, 112, 0, 0, 0,
	0, 1875, 0, 0, 0, 0, 0, 0, 0, 1584,
	0, 0, 0, 0, 0, 0, 1859, 0, 0, 1584,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1585, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 273, 0, 1885, 0, 0, 1585, 1585, 1585, 0,
	0, 0, 0, 1585, 1585, 1585, 0, 0, 0, 0,
	0, 0, 1874, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1889, 0, 1585, 0, 0, 0, 0,
	0, 1421, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 273, 1263, 0, 0, 1099, 1423,
	0, 0, 0, 0, 0, 0, 0, 0, 1421, 1423,
	0, 0, 112, 112, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1865,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1860, 0, 0, 0, 0, 0, 0, 1836,
	1837, 0, 1869, 1870, 1871, 1880, 1881, 1882, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 273, 0, 1878,
	0, 1873, 1867, 0, 0, 0, 0, 0, 0, 1839,
	0, 0, 0, 0, 0, 0, 0, 0, 1886, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1891, 0, 0, 0, 1892, 0, 0, 0, 0,
	0, 0, 0, 0, 1838, 0, 0, 0, 0, 0,
	1421, 1421, 0, 1421, 1858, 0, 273, 0, 0, 0,
	0, 0, 0, 1855, 0, 0, 0, 0, 0, 0,
	0, 1585, 1585, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1421, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1876, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1850, 1851, 1857, 1879, 1856, 1852, 0,
	1849, 1847, 1848, 1840, 1841, 1842, 1843, 1845, 1846, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3339, 0,
	0, 1861, 1862, 1863, 1864, 0, 0, 0, 0, 0,
	0, 1844, 0, 0, 1421, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1421, 0, 0, 0, 0, 112,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1877, 0, 0, 1887, 0, 0, 0, 1263, 1263, 0,
	1866, 1868, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1585, 1585, 0, 0, 1883, 0, 1884, 0,
	0, 0, 0, 0, 0, 1853, 1854, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1875, 0, 0, 0, 0, 0, 0,
	0, 0, 1421, 0, 0, 0, 0, 1585, 1859, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1836, 1837, 0, 1869, 1870, 1871, 1880, 1881, 1882,
	0, 0, 0, 0, 0, 0, 1585, 1585, 1585, 1585,
	1585, 1585, 0, 1873, 1867, 0, 0, 0, 0, 0,
	0, 1839, 1421, 0, 0, 1885, 0, 0, 0, 0,
	1886, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1874, 0, 0, 1892, 0, 0,
	0, 0, 1421, 0, 0, 1889, 1838, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1858, 0, 0, 0,
	0, 0, 0, 0, 0, 1855, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1421, 0, 1585, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1865, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1421, 0, 0, 1860, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1861, 1862, 1863, 1864, 0, 0, 0,
	0, 1878, 0, 1844, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1836, 1837, 0,
	1869, 1870, 1871, 1880, 1881, 1882, 0, 0, 0, 0,
	0, 112, 0, 1891, 0, 0, 0, 0, 0, 1873,
	1867, 0, 1877, 1421, 0, 1887, 0, 1839, 0, 0,
	0, 0, 1866, 1868, 0, 0, 1886, 1263, 0, 0,
	1585, 1585, 1585, 0, 0, 0, 0, 0, 1883, 0,
	1884, 0, 0, 1892, 0, 0, 0, 1853, 1854, 0,
	0, 0, 1838, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1858, 0, 0, 1875, 0, 0, 112, 0,
	0, 1855, 0, 0, 0, 1876, 0, 0, 0, 0,
	1859, 1421, 0, 0, 1585, 1850, 1851, 1857, 1879, 1856,
	1852, 0, 1849, 1847, 1848, 1840, 1841, 1842, 1843, 1845,
	1846, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3336, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1885, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1874, 0, 0, 1861,
	1862, 1863, 1864, 0, 0, 0, 0, 1889, 0, 1844,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1836, 1837, 0, 1869, 1870, 1871,
	1880, 1881, 1882, 0, 0, 0, 0, 0, 1877, 0,
	0, 1887, 0, 0, 112, 0, 1873, 1867, 1866, 1868,
	1263, 0, 0, 1865, 1839, 0, 0, 0, 1263, 0,
	0, 0, 0, 1886, 1883, 0, 1884, 0, 0, 0,
	0, 0, 0, 1853, 1854, 0, 1860, 0, 0, 0,
	1892, 0, 0, 0, 0, 0, 0, 0, 0, 1838,
	0, 1875, 0, 0, 0, 0, 0, 0, 0, 1858,
	0, 0, 0, 1878, 0, 0, 1859, 0, 1855, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1585, 0, 0, 0, 0, 1891, 0, 0, 0, 0,
	1585, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1885, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1874, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 112, 1889, 0, 0, 1861, 1862, 1863, 1864,
	0, 0, 0, 0, 0, 0, 1844, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1876, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1850, 1851, 1857,
	1879, 1856, 1852, 0, 1849, 1847, 1848, 1840, 1841, 1842,
	1843, 1845, 1846, 0, 0, 1877, 0, 0, 1887, 1865,
	0, 112, 3335, 0, 0, 1866, 1868, 0, 0, 0,
	0, 0, 0, 0, 112, 0, 0, 0, 0, 0,
	0, 1883, 1860, 1884, 0, 0, 0, 0, 0, 0,
	1853, 1854, 0, 0, 0, 0, 0, 112, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1875, 1878,
	1836, 1837, 0, 1869, 1870, 1871, 1880, 1881, 1882, 0,
	0, 0, 0, 1859, 0, 0, 0, 0, 0, 0,
	0, 0, 1873, 1867, 0, 0, 0, 0, 0, 0,
	1839, 1891, 0, 0, 0, 0, 0, 0, 0, 1886,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1892, 0, 0, 0,
	1885, 0, 0, 0, 0, 1838, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1858, 0, 0, 0, 1874,
	0, 0, 0, 0, 1855, 0, 0, 0, 0, 0,
	1889, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1876, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1850, 1851, 1857, 1879, 1856, 1852, 0,
	1849, 1847, 1848, 1840, 1841, 1842, 1843, 1845, 1846, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3334, 0,
	0, 0, 0, 0, 0, 0, 1865, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1861, 1862, 1863, 1864, 0, 0, 0, 1860,
	0, 0, 1844, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1878, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1877, 0, 0, 1887, 0, 0, 0, 0, 0,
	0, 1866, 1868, 0, 0, 0, 0, 0, 1891, 0,
	0, 0, 0, 0, 0, 0, 0, 1883, 0, 1884,
	0, 0, 0, 0, 0, 0, 1853, 1854, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1875, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1859,
	0, 0, 0, 0, 0, 0, 2592, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1876, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1850, 1851, 1857, 1879, 1856, 1852, 0, 1849, 1847, 1848,
	1840, 1841, 1842, 1843, 1845, 1846, 1885, 0, 0, 0,
	0, 0, 0, 0, 0, 2651, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1874, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1889, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1865, 0, 0, 112, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1860, 0, 0, 0, 0,
	0, 0, 0, 112, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1878, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 112, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1891, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1876, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1850, 1851, 1857, 1879,
	1856, 1852, 0, 1849, 1847, 1848, 1840, 1841, 1842, 1843,
	1845, 1846, 0, 0, 0, 0, 1418, 4802, 0, 0,
	0, 0, 0, 0, 0, 0, 112, 0, 0, 0,
	0, 0, 112, 281, 283, 282, 284, 285, 286, 287,
	1424, 288, 289, 1425, 1426, 1427, 0, 1428, 649, 1429,
	1430, 1431, 1432, 290, 291, 1220, 292, 293, 294, 295,
	296, 297, 650, 651, 0, 298, 652, 299, 653, 1433,
	654, 300, 301, 302, 303, 304, 305, 1434, 1435, 0,
	306, 655, 656, 657, 1436, 307, 308, 658, 1437, 1504,
	1438, 309, 310, 311, 312, 313, 314, 315, 0, 1439,
	317, 318, 319, 316, 320, 1440, 321, 0, 322, 323,
	324, 325, 326, 327, 1441, 328, 329, 330, 1221, 331,
	332, 333, 1442, 1443, 1445, 1444, 1446, 1447, 1448, 334,
	335, 336, 337, 338, 0, 339, 341, 659, 660, 1449,
	344, 340, 342, 1450, 345, 343, 346, 1451, 347, 348,
	349, 1452, 1453, 350, 351, 352, 1454, 353, 354, 355,
	1455, 356, 357, 358, 1456, 359, 360, 661, 361, 362,
	363, 365, 367, 364, 366, 368, 369, 370, 371, 662,
	663, 372, 1457, 278, 1458, 0, 0, 0, 0, 373,
	374, 375, 664, 0, 0, 0, 376, 1459, 377, 378,
	379, 1460, 1461, 1222, 380, 381, 382, 665, 666, 383,
	384, 385, 386, 387, 388, 389, 390, 391, 1462, 392,
	667, 1463, 668, 393, 1464, 394, 395, 396, 397, 398,
	669, 670, 671, 484, 1224, 399, 400, 1465, 401, 402,
	403, 404, 405, 0, 0, 0, 279, 406, 407, 408,
	1466, 1223, 409, 672, 673, 1467, 674, 1468, 410, 411,
	1225, 675, 1226, 412, 413, 414, 1227, 415, 0, 0,
	0, 416, 417, 418, 419, 420, 421, 1469, 422, 424,
	423, 1470, 425, 676, 1228, 426, 427, 1229, 1471, 428,
	429, 430, 431, 432, 433, 436, 1472, 1473, 434, 435,
	437, 438, 0, 439, 440, 442, 445, 441, 443, 444,
	446, 459, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 458, 461, 0, 460, 1230, 462, 463,
	464, 465, 472, 474, 475, 470, 471, 473, 476, 477,
	479, 467, 468, 469, 1231, 478, 466, 1474, 280, 1232,
	480, 481, 482, 1475, 677, 483, 678, 485, 486, 1476,
	0, 487, 0, 1477, 1478, 489, 490, 491, 1479, 1480,
	492, 493, 679, 1233, 494, 1234, 680, 495, 496, 488,
	497, 498, 499, 500, 501, 502, 503, 504, 505, 1481,
	506, 507, 681, 508, 509, 510, 682, 511, 512, 513,
	683, 514, 684, 515, 516, 1482, 517, 518, 0, 519,
	520, 521, 522, 523, 524, 525, 685, 526, 527, 529,
	528, 530, 1483, 531, 0, 532, 533, 534, 0, 0,
	0, 0, 0, 535, 537, 0, 538, 539, 540, 541,
	536, 542, 543, 544, 545, 546, 1484, 547, 548, 549,
	1235, 550, 551, 552, 553, 554, 686, 555, 0, 556,
	557, 563, 564, 565, 558, 559, 566, 567, 568, 569,
	570, 1485, 572, 573, 571, 574, 575, 576, 1486, 577,
	578, 560, 561, 579, 580, 1236, 581, 582, 583, 584,
	585, 586, 587, 687, 0, 588, 1487, 589, 590, 591,
	592, 594, 562, 595, 600, 601, 688, 596, 597, 598,
	599, 689, 603, 604, 1488, 605, 606, 0, 602, 593,
	1489, 607, 608, 609, 610, 611, 612, 613, 614, 1490,
	615, 690, 691, 692, 693, 1491, 624, 1492, 616, 617,
	618, 694, 619, 695, 1493, 620, 621, 622, 623, 0,
	625, 626, 1494, 1495, 627, 628, 629, 631, 632, 630,
	633, 1496, 634, 1497, 0, 635, 636, 637, 696, 697,
	698, 1498, 639, 638, 640, 641, 699, 642, 643, 1499,
	1500, 1501, 1502, 644, 645, 700, 646, 647, 648, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1418,
	0, 0, 0, 0, 0, 0, 0, 2819, 0, 0,
	0, 0, 0, 0, 0, 2820, 281, 283, 282, 284,
	285, 286, 287, 1424, 288, 289, 1425, 1426, 1427, 0,
	1428, 649, 1429, 1430, 1431, 1432, 290, 291, 1220, 292,
	293, 294, 295, 296, 297, 650, 651, 0, 298, 652,
	299, 653, 1433, 654, 300, 301, 302, 303, 304, 305,
	1434, 1435, 0, 306, 655, 656, 657, 1436, 307, 308,
	658, 1437, 1504, 1438, 309, 310, 311, 312, 313, 314,
	315, 0, 1439, 317, 318, 319, 316, 320, 1440, 321,
	0, 322, 323, 324, 325, 326, 327, 1441, 328, 329,
	330, 1221, 331, 332, 333, 1442, 1443, 1445, 1444, 1446,
	1447, 1448, 334, 335, 336, 337, 338, 0, 339, 341,
	659, 660, 1449, 344, 340, 342, 1450, 345, 343, 346,
	1451, 347, 348, 349, 1452, 1453, 350, 351, 352, 1454,
	353, 354, 355, 1455, 356, 357, 358, 1456, 359, 360,
	661, 361, 362, 363, 365, 367, 364, 366, 368, 369,
	370, 371, 662, 663, 372, 1457, 278, 1458, 0, 0,
	0, 0, 373, 374, 375, 664, 0, 0, 0, 376,
	1459, 377, 378, 379, 1460, 1461, 1222, 380, 381, 382,
	665, 666, 383, 384, 385, 386, 387, 388, 389, 390,
	391, 1462, 392, 667, 1463, 668, 393, 1464, 394, 395,
	396, 397, 398, 669, 670, 671, 484, 1224, 399, 400,
	1465, 401, 402, 403, 404, 405, 0, 0, 0, 279,
	406, 407, 408, 1466, 1223, 409, 672, 673, 1467, 674,
	1468, 410, 411, 1225, 675, 1226, 412, 413, 414, 1227,
	415, 0, 0, 0, 416, 417, 418, 419, 420, 421,
	1469, 422, 424, 423, 1470, 425, 676, 1228, 426, 427,
	1229, 1471, 428, 429, 430, 431, 432, 433, 436, 1472,
	1473, 434, 435, 437, 438, 0, 439, 440, 442, 445,
	441, 443, 444, 446, 459, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 458, 461, 0, 460,
	1230, 462, 463, 464, 465, 472, 474, 475, 470, 471,
	473, 476, 477, 479, 467, 468, 469, 1231, 478, 466,
	1474, 280, 1232, 480, 481, 482, 1475, 677, 483, 678,
	485, 486, 1476, 0, 487, 0, 1477, 1478, 489, 490,
	491, 1479, 1480, 492, 493, 679, 1233, 494, 1234, 680,
	495, 496, 488, 497, 498, 499, 500, 501, 502, 503,
	504, 505, 1481, 506, 507, 681, 508, 509, 510, 682,
	511, 512, 513, 683, 514, 684, 515, 516, 1482, 517,
	518, 0, 519, 520, 521, 522, 523, 524, 525, 685,
	526, 527, 529, 528, 530, 1483, 531, 0, 532, 533,
	534, 0, 0, 0, 0, 0, 535, 537, 0, 538,
	539, 540, 541, 536, 542, 543, 544, 545, 546, 1484,
	547, 548, 549, 1235, 550, 551, 552, 553, 554, 686,
	555, 0, 556, 557, 563, 564, 565, 558, 559, 566,
	567, 568, 569, 570, 1485, 572, 573, 571, 574, 575,
	576, 1486, 577, 578, 560, 561, 579, 580, 1236, 581,
	582, 583, 584, 585, 586, 587, 687, 0, 588, 1487,
	589, 590, 591, 592, 594, 562, 595, 600, 601, 688,
	596, 597, 598, 599, 689, 603, 604, 1488, 605, 606,
	0, 602, 593, 1489, 607, 608, 609, 610, 611, 612,
	613, 614, 1490, 615, 690, 691, 692, 693, 1491, 624,
	1492, 616, 617, 618, 694, 619, 695, 1493, 620, 621,
	622, 623, 0, 625, 626, 1494, 1495, 627, 628, 629,
	631, 632, 630, 633, 1496, 634, 1497, 0, 635, 636,
	637, 696, 697, 698, 1498, 639, 638, 640, 641, 699,
	642, 643, 1499, 1500, 1501, 1502, 644, 645, 700, 646,
	647, 648, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1418, 0, 0, 0, 3821, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3823, 281, 283, 282,
	284, 285, 286, 287, 1424, 288, 289, 1425, 1426, 1427,
	0, 1428, 649, 1429, 1430, 1431, 1432, 290, 291, 1220,
	292, 293, 294, 295, 296, 297, 650, 651, 0, 298,
	652, 299, 653, 1433, 654, 300, 301, 302, 303, 304,
	305, 1434, 1435, 0, 306, 655, 656, 657, 1436, 307,
	308, 658, 1437, 1504, 1438, 309, 310, 311, 312, 313,
	314, 315, 0, 1439, 317, 318, 319, 316, 320, 1440,
	321, 0, 322, 323, 324, 325, 326, 327, 1441, 328,
	329, 330, 1221, 331, 332, 333, 1442, 1443, 1445, 1444,
	1446, 1447, 1448, 334, 335, 336, 337, 338, 0, 339,
	341, 659, 660, 1449, 344, 340, 342, 1450, 345, 343,
	346, 1451, 347, 348, 349, 1452, 1453, 350, 351, 352,
	1454, 353, 354, 355, 1455, 356, 357, 358, 1456, 359,
	360, 661, 361, 362, 363, 365, 367, 364, 366, 368,
	369, 370, 371, 662, 663, 372, 1457, 278, 1458, 0,
	0, 0, 0, 373, 374, 375, 664, 0, 0, 0,
	376, 1459, 377, 378, 379, 1460, 1461, 1222, 380, 381,
	382, 665, 666, 383, 384, 385, 386, 387, 388, 389,
	390, 391, 1462, 392, 667, 1463, 668, 393, 1464, 394,
	395, 396, 397, 398, 669, 670, 671, 484, 1224, 399,
	400, 1465, 401, 402, 403, 404, 405, 0, 0, 0,
	279, 406, 407, 408, 1466, 1223, 409, 672, 673, 1467,
	674, 1468, 410, 411, 1225, 675, 1226, 412, 413, 414,
	1227, 415, 0, 0, 0, 416, 417, 418, 419, 420,
	421, 1469, 422, 424, 423, 1470, 425, 676, 1228, 426,
	427, 1229, 1471, 428, 429, 430, 431, 432, 433, 436,
	1472, 1473, 434, 435, 437, 438, 0, 439, 440, 442,
	445, 441, 443, 444, 446, 459, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 458, 461, 0,
	460, 1230, 462, 463, 464, 465, 472, 474, 475, 470,
	471, 473, 476, 477, 479, 467, 468, 469, 1231, 478,
	466, 1474, 280, 1232, 480, 481, 482, 1475, 677, 483,
	678, 485, 486, 1476, 0, 487, 0, 1477, 1478, 489,
	490, 491, 1479, 1480, 492, 493, 679, 1233, 494, 1234,
	680, 495, 496, 488, 497, 498, 499, 500, 501, 502,
	503, 504, 505, 1481, 506, 507, 681, 508, 509, 510,
	682, 511, 512, 513, 683, 514, 684, 515, 516, 1482,
	517, 518, 0, 519, 520, 521, 522, 523, 524, 525,
	685, 526, 527, 529, 528, 530, 1483, 531, 0, 532,
	533, 534, 0, 0, 0, 0, 0, 535, 537, 0,
	538, 539, 540, 541, 536, 542, 543, 544, 545, 546,
	1484, 547, 548, 549, 1235, 550, 551, 552, 553, 554,
	686, 555, 0, 556, 557, 563, 564, 565, 558, 559,
	566, 567, 568, 569, 570, 1485, 572, 573, 571, 574,
	575, 576, 1486, 577, 578, 560, 561, 579, 580, 1236,
	581, 582, 583, 584, 585, 586, 587, 687, 0, 588,
	1487, 589, 590, 591, 592, 594, 562, 595, 600, 601,
	688, 596, 597, 598, 599, 689, 603, 604, 1488, 605,
	606, 0, 602, 593, 1489, 607, 608, 609, 610, 611,
	612, 613, 614, 1490, 615, 690, 691, 692, 693, 1491,
	624, 1492, 616, 617, 618, 694, 619, 695, 1493, 620,
	621, 622, 623, 0, 625, 626, 1494, 1495, 627, 628,
	629, 631, 632, 630, 633, 1496, 634, 1497, 0, 635,
	636, 637, 696, 697, 698, 1498, 639, 638, 640, 641,
	699, 642, 643, 1499, 1500, 1501, 1502, 644, 645, 700,
	646, 647, 648, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1418, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4237, 281, 283, 282, 284, 285, 286, 287, 1424,
	288, 289, 1425, 1426, 1427, 0, 1428, 649, 1429, 1430,
	1431, 1432, 290, 291, 1220, 292, 293, 294, 295, 296,
	297, 650, 651, 0, 298, 652, 299, 653, 1433, 654,
	300, 301, 302, 303, 304, 305, 1434, 1435, 0, 306,
	655, 656, 657, 1436, 307, 308, 658, 1437, 1504, 1438,
	309, 310, 311, 312, 313, 314, 315, 0, 1439, 317,
	318, 319, 316, 320, 1440, 321, 0, 322, 323, 324,
	325, 326, 327, 1441, 328, 329, 330, 1221, 331, 332,
	333, 1442, 1443, 1445, 1444, 1446, 1447, 1448, 334, 335,
	336, 337, 338, 0, 339, 341, 659, 660, 1449, 344,
	340, 342, 1450, 345, 343, 346, 1451, 347, 348, 349,
	1452, 1453, 350, 351, 352, 1454, 353, 354, 355, 1455,
	356, 357, 358, 1456, 359, 360, 661, 361, 362, 363,
	365, 367, 364, 366, 368, 369, 370, 371, 662, 663,
	372, 1457, 278, 1458, 0, 0, 0, 0, 373, 374,
	375, 664, 0, 0, 0, 376, 1459, 377, 378, 379,
	1460, 1461, 1222, 380, 381, 382, 665, 666, 383, 384,
	385, 386, 387, 388, 389, 390, 391, 1462, 392, 667,
	1463, 668, 393, 1464, 394, 395, 396, 397, 398, 669,
	670, 671, 484, 1224, 399, 400, 1465, 401, 402, 403,
	404, 405, 0, 0, 0, 279, 406, 407, 408, 1466,
	1223, 409, 672, 673, 1467, 674, 1468, 410, 411, 1225,
	675, 1226, 412, 413, 414, 1227, 415, 0, 0, 0,
	416, 417, 418, 419, 420, 421, 1469, 422, 424, 423,
	1470, 425, 676, 1228, 426, 427, 1229, 1471, 428, 429,
	430, 431, 432, 433, 436, 1472, 1473, 434, 435, 437,
	438, 0, 439, 440, 442, 445, 441, 443, 444, 446,
	459, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 458, 461, 0, 460, 1230, 462, 463, 464,
	465, 472, 474, 475, 470, 471, 473, 476, 477, 479,
	467, 468, 469, 1231, 478, 466, 1474, 280, 1232, 480,
	481, 482, 1475, 677, 483, 678, 485, 486, 1476, 0,
	487, 0, 1477, 1478, 489, 490, 491, 1479, 1480, 492,
	493, 679, 1233, 494, 1234, 680, 495, 496, 488, 497,
	498, 499, 500, 501, 502, 503, 504, 505, 1481, 506,
	507, 681, 508, 509, 510, 682, 511, 512, 513, 683,
	514, 684, 515, 516, 1482, 517, 518, 0, 519, 520,
	521, 522, 523, 524, 525, 685, 526, 527, 529, 528,
	530, 1483, 531, 0, 532, 533, 534, 0, 0, 0,
	0, 0, 535, 537, 0, 538, 539, 540, 541, 536,
	542, 543, 544, 545, 546, 1484, 547, 548, 549, 1235,
	550, 551, 552, 553, 554, 686, 555, 0, 556, 557,
	563, 564, 565, 558, 559, 566, 567, 568, 569, 570,
	1485, 572, 573, 571, 574, 575, 576, 1486, 577, 578,
	560, 561, 579, 580, 1236, 581, 582, 583, 584, 585,
	586, 587, 687, 0, 588, 1487, 589, 590, 591, 592,
	594, 562, 595, 600, 601, 688, 596, 597, 598, 599,
	689, 603, 604, 1488, 605, 606, 0, 602, 593, 1489,
	607, 608, 609, 610, 611, 612, 613, 614, 1490, 615,
	690, 691, 692, 693, 1491, 624, 1492, 616, 617, 618,
	694, 619, 695, 1493, 620, 621, 622, 623, 0, 625,
	626, 1494, 1495, 627, 628, 629, 631, 632, 630, 633,
	1496, 634, 1497, 0, 635, 636, 637, 696, 697, 698,
	1498, 639, 638, 640, 641, 699, 642, 643, 1499, 1500,
	1501, 1502, 644, 645, 700, 646, 647, 648, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1418, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4235, 281, 283, 282,
	284, 285, 286, 287, 1424, 288, 289, 1425, 1426, 1427,
	0, 1428, 649, 1429, 1430, 1431, 1432, 290, 291, 1220,
	292, 293, 294, 295, 296, 297, 650, 651, 0, 298,
	652, 299, 653, 1433, 654, 300, 301, 302, 303, 304,
	305, 1434, 1435, 0, 306, 655, 656, 657, 1436, 307,
	308, 658, 1437, 1504, 1438, 309, 310, 311, 312, 313,
	314, 315, 0, 1439, 317, 318, 319, 316, 320, 1440,
	321, 0, 322, 323, 324, 325, 326, 327, 1441, 328,
	329, 330, 1221, 331, 332, 333, 1442, 1443, 1445, 1444,
	1446, 1447, 1448, 334, 335, 336, 337, 338, 0, 339,
	341, 659, 660, 1449, 344, 340, 342, 1450, 345, 343,
	346, 1451, 347, 348, 349, 1452, 1453, 350, 351, 352,
	1454, 353, 354, 355, 1455, 356, 357, 358, 1456, 359,
	360, 661, 361, 362, 363, 365, 367, 364, 366, 368,
	369, 370, 371, 662, 663, 372, 1457, 278, 1458, 0,
	0, 0, 0, 373, 374, 375, 664, 0, 0, 0,
	376, 1459, 377, 378, 379, 1460, 1461, 1222, 380, 381,
	382, 665, 666, 383, 384, 385, 386, 387, 388, 389,
	390, 391, 1462, 392, 667, 1463, 668, 393, 1464, 394,
	395, 396, 397, 398, 669, 670, 671, 484, 1224, 399,
	400, 1465, 401, 402, 403, 404, 405, 0, 0, 0,
	279, 406, 407, 408, 1466, 1223, 409, 672, 673, 1467,
	674, 1468, 410, 411, 1225, 675, 1226, 412, 413, 414,
	1227, 415, 0, 0, 0, 416, 417, 418, 419, 420,
	421, 1469, 422, 424, 423, 1470, 425, 676, 1228, 426,
	427, 1229, 1471, 428, 429, 430, 431, 432, 433, 436,
	1472, 1473, 434, 435, 437, 438, 0, 439, 440, 442,
	445, 441, 443, 444, 446, 459, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 458, 461, 0,
	460, 1230, 462, 463, 464, 465, 472, 474, 475, 470,
	471, 473, 476, 477, 479, 467, 468, 469, 1231, 478,
	466, 1474, 280, 1232, 480, 481, 482, 1475, 677, 483,
	678, 485, 486, 1476, 0, 487, 0, 1477, 1478, 489,
	490, 491, 1479, 1480, 492, 493, 679, 1233, 494, 1234,
	680, 495, 496, 488, 497, 498, 499, 500, 501, 502,
	503, 504, 505, 1481, 506, 507, 681, 508, 509, 510,
	682, 511, 512, 513, 683, 514, 684, 515, 516, 1482,
	517, 518, 0, 519, 520, 521, 522, 523, 524, 525,
	685, 526, 527, 529, 528, 530, 1483, 531, 0, 532,
	533, 534, 0, 0, 0, 0, 0, 535, 537, 0,
	538, 539, 540, 541, 536, 542, 543, 544, 545, 546,
	1484, 547, 548, 549, 1235, 550, 551, 552, 553, 554,
	686, 555, 0, 556, 557, 563, 564, 565, 558, 559,
	566, 567, 568, 569, 570, 1485, 572, 573, 571, 574,
	575, 576, 1486, 577, 578, 560, 561, 579, 580, 1236,
	581, 582, 583, 584, 585, 586, 587, 687, 0, 588,
	1487, 589, 590, 591, 592, 594, 562, 595, 600, 601,
	688, 596, 597, 598, 599, 689, 603, 604, 1488, 605,
	606, 0, 602, 593, 1489, 607, 608, 609, 610, 611,
	612, 613, 614, 1490, 615, 690, 691, 692, 693, 1491,
	624, 1492, 616, 617, 618, 694, 619, 695, 1493, 620,
	621, 622, 623, 0, 625, 626, 1494, 1495, 627, 628,
	629, 631, 632, 630, 633, 1496, 634, 1497, 0, 635,
	636, 637, 696, 697, 698, 1498, 639, 638, 640, 641,
	699, 642, 643, 1499, 1500, 1501, 1502, 644, 645, 700,
	646, 647, 648, 0, 0, 0, 0, 0, 0, 1418,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4463, 281, 283, 282, 284,
	285, 286, 287, 1424, 288, 289, 1425, 1426, 1427, 0,
	1428, 649, 1429, 1430, 1431, 1432, 290, 291, 1220, 292,
	293, 294, 295, 296, 297, 650, 651, 0, 298, 652,
	299, 653, 1433, 654, 300, 301, 302, 303, 304, 305,
	1434, 1435, 0, 306, 655, 656, 657, 1436, 307, 308,
	658, 1437, 1504, 1438, 309, 310, 311, 312, 313, 314,
	315, 0, 1439, 317, 318, 319, 316, 320, 1440, 321,
	0, 322, 323, 324, 325, 326, 327, 1441, 328, 329,
	330, 1221, 331, 332, 333, 1442, 1443, 1445, 1444, 1446,
	1447, 1448, 334, 335, 336, 337, 338, 0, 339, 341,
	659, 660, 1449, 344, 340, 342, 1450, 345, 343, 346,
	1451, 347, 348, 349, 1452, 1453, 350, 351, 352, 1454,
	353, 354, 355, 1455, 356, 357, 358, 1456, 359, 360,
	661, 361, 362, 363, 365, 367, 364, 366, 368, 369,
	370, 371, 662, 663, 372, 1457, 278, 1458, 0, 0,
	0, 0, 373, 374, 375, 664, 0, 0, 0, 376,
	1459, 377, 378, 379, 1460, 1461, 1222, 380, 381, 382,
	665, 666, 383, 384, 385, 386, 387, 388, 389, 390,
	391, 1462, 392, 667, 1463, 668, 393, 1464, 394, 395,
	396, 397, 398, 669, 670, 671, 484, 1224, 399, 400,
	1465, 401, 402, 403, 404, 405, 0, 0, 0, 279,
	406, 407, 408, 1466, 1223, 409, 672, 673, 1467, 674,
	1468, 410, 411, 1225, 675, 1226, 412, 413, 414, 1227,
	415, 0, 0, 0, 416, 417, 418, 419, 420, 421,
	1469, 422, 424, 423, 1470, 425, 676, 1228, 426, 427,
	1229, 1471, 428, 429, 430, 431, 432, 433, 436, 1472,
	1473, 434, 435, 437, 438, 0, 439, 440, 442, 445,
	441, 443, 444, 446, 459, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 458, 461, 0, 460,
	1230, 462, 463, 464, 465, 472, 474, 475, 470, 471,
	473, 476, 477, 479, 467, 468, 469, 1231, 478, 466,
	1474, 280, 1232, 480, 481, 482, 1475, 677, 483, 678,
	485, 486, 1476, 0, 487, 0, 1477, 1478, 489, 490,
	491, 1479, 1480, 492, 493, 679, 1233, 494, 1234, 680,
	495, 496, 488, 497, 498, 499, 500, 501, 502, 503,
	504, 505, 1481, 506, 507, 681, 508, 509, 510, 682,
	511, 512, 513, 683, 514, 684, 515, 516, 1482, 517,
	518, 0, 519, 520, 521, 522, 523, 524, 525, 685,
	526, 527, 529, 528, 530, 1483, 531, 0, 532, 533,
	534, 0, 0, 0, 0, 0, 535, 537, 0, 538,
	539, 540, 541, 536, 542, 543, 544, 545, 546, 1484,
	547, 548, 549, 1235, 550, 551, 552, 553, 554, 686,
	555, 0, 556, 557, 563, 564, 565, 558, 559, 566,
	567, 568, 569, 570, 1485, 572, 573, 571, 574, 575,
	576, 1486, 577, 578, 560, 561, 579, 580, 1236, 581,
	582, 583, 584, 585, 586, 587, 687, 0, 588, 1487,
	589, 590, 591, 592, 594, 562, 595, 600, 601, 688,
	596, 597, 598, 599, 689, 603, 604, 1488, 605, 606,
	0, 602, 593, 1489, 607, 608, 609, 610, 611, 612,
	613, 614, 1490, 615, 690, 691, 692, 693, 1491, 624,
	1492, 616, 617, 618, 694, 619, 695, 1493, 620, 621,
	622, 623, 0, 625, 626, 1494, 1495, 627, 628, 629,
	631, 632, 630, 633, 1496, 634, 1497, 0, 635, 636,
	637, 696, 697, 698, 1498, 639, 638, 640, 641, 699,
	642, 643, 1499, 1500, 1501, 1502, 644, 645, 700, 646,
	647, 648, 0, 0, 0, 0, 0, 0, 1418, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4329, 281, 283, 282, 284, 285,
	286, 287, 1424, 288, 289, 1425, 1426, 1427, 0, 1428,
	649, 1429, 1430, 1431, 1432, 290, 291, 1220, 292, 293,
	294, 295, 296, 297, 650, 651, 0, 298, 652, 299,
	653, 1433, 654, 300, 301, 302, 303, 304, 305, 1434,
	1435, 0, 306, 655, 656, 657, 1436, 307, 308, 658,
	1437, 1504, 1438, 309, 310, 311, 312, 313, 314, 315,
	0, 1439, 317, 318, 319, 316, 320, 1440, 321, 0,
	322, 323, 324, 325, 326, 327, 1441, 328, 329, 330,
	1221, 331, 332, 333, 1442, 1443, 1445, 1444, 1446, 1447,
	1448, 334, 335, 336, 337, 338, 0, 339, 341, 659,
	660, 1449, 344, 340, 342, 1450, 345, 343, 346, 1451,
	347, 348, 349, 1452, 1453, 350, 351, 352, 1454, 353,
	354, 355, 1455, 356, 357, 358, 1456, 359, 360, 661,
	361, 362, 363, 365, 367, 364, 366, 368, 369, 370,
	371, 662, 663, 372, 1457, 278, 1458, 0, 0, 0,
	0, 373, 374, 375, 664, 0, 0, 0, 376, 1459,
	377, 378, 379, 1460, 1461, 1222, 380, 381, 382, 665,
	666, 383, 384, 385, 386, 387, 388, 389, 390, 391,
	1462, 392, 667, 1463, 668, 393, 1464, 394, 395, 396,
	397, 398, 669, 670, 671, 484, 1224, 399, 400, 1465,
	401, 402, 403, 404, 405, 0, 0, 0, 279, 406,
	407, 408, 1466, 1223, 409, 672, 673, 1467, 674, 1468,
	410, 411, 1225, 675, 1226, 412, 413, 414, 1227, 415,
	0, 0, 0, 416, 417, 418, 419, 420, 421, 1469,
	422, 424, 423, 1470, 425, 676, 1228, 426, 427, 1229,
	1471, 428, 429, 430, 431, 432, 433, 436, 1472, 1473,
	434, 435, 437, 438, 0, 439, 440, 442, 445, 441,
	443, 444, 446, 459, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 458, 461, 0, 460, 1230,
	462, 463, 464, 465, 472, 474, 475, 470, 471, 473,
	476, 477, 479, 467, 468, 469, 1231, 478, 466, 1474,
	280, 1232, 480, 481, 482, 1475, 677, 483, 678, 485,
	486, 1476, 0, 487, 0, 1477, 1478, 489, 490, 491,
	1479, 1480, 492, 493, 679, 1233, 494, 1234, 680, 495,
	496, 488, 497, 498, 499, 500, 501, 502, 503, 504,
	505, 1481, 506, 507, 681, 508, 509, 510, 682, 511,
	512, 513, 683, 514, 684, 515, 516, 1482, 517, 518,
	0, 519, 520, 521, 522, 523, 524, 525, 685, 526,
	527, 529, 528, 530, 1483, 531, 0, 532, 533, 534,
	0, 0, 0, 0, 0, 535, 537, 0, 538, 539,
	540, 541, 536, 542, 543, 544, 545, 546, 1484, 547,
	548, 549, 1235, 550, 551, 552, 553, 554, 686, 555,
	0, 556, 557, 563, 564, 565, 558, 559, 566, 567,
	568, 569, 570, 1485, 572, 573, 571, 574, 575, 576,
	1486, 577, 578, 560, 561, 579, 580, 1236, 581, 582,
	583, 584, 585, 586, 587, 687, 0, 588, 1487, 589,
	590, 591, 592, 594, 562, 595, 600, 601, 688, 596,
	597, 598, 599, 689, 603, 604, 1488, 605, 606, 0,
	602, 593, 1489, 607, 608, 609, 610, 611, 612, 613,
	614, 1490, 615, 690, 691, 692, 693, 1491, 624, 1492,
	616, 617, 618, 694, 619, 695, 1493, 620, 621, 622,
	623, 0, 625, 626, 1494, 1495, 627, 628, 629, 631,
	632, 630, 633, 1496, 634, 1497, 0, 635, 636, 637,
	696, 697, 698, 1498, 639, 638, 640, 641, 699, 642,
	643, 1499, 1500, 1501, 1502, 644, 645, 700, 646, 647,
	648, 0, 0, 0, 0, 0, 0, 1418, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4165, 281, 283, 282, 284, 285, 286,
	287, 1424, 288, 289, 1425, 1426, 1427, 0, 1428, 649,
	1429, 1430, 1431, 1432, 290, 291, 1220, 292, 293, 294,
	295, 296, 297, 650, 651, 0, 298, 652, 299, 653,
	1433, 654, 300, 301, 302, 303, 304, 305, 1434, 1435,
	0, 306, 655, 656, 657, 1436, 307, 308, 658, 1437,
	1504, 1438, 309, 310, 311, 312, 313, 314, 315, 0,
	1439, 317, 318, 319, 316, 320, 1440, 321, 0, 322,
	323, 324, 325, 326, 327, 1441, 328, 329, 330, 1221,
	331, 332, 333, 1442, 1443, 1445, 1444, 1446, 1447, 1448,
	334, 335, 336, 337, 338, 0, 339, 341, 659, 660,
	1449, 344, 340, 342, 1450, 345, 343, 346, 1451, 347,
	348, 349, 1452, 1453, 350, 351, 352, 1454, 353, 354,
	355, 1455, 356, 357, 358, 1456, 359, 360, 661, 361,
	362, 363, 365, 367, 364, 366, 368, 369, 370, 371,
	662, 663, 372, 1457, 278, 1458, 0, 0, 0, 0,
	373, 374, 375, 664, 0, 0, 0, 376, 1459, 377,
	378, 379, 1460, 1461, 1222, 380, 381, 382, 665, 666,
	383, 384, 385, 386, 387, 388, 389, 390, 391, 1462,
	392, 667, 1463, 668, 393, 1464, 394, 395, 396, 397,
	398, 669, 670, 671, 484, 1224, 399, 400, 1465, 401,
	402, 403, 404, 405, 0, 0, 0, 279, 406, 407,
	408, 1466, 1223, 409, 672, 673, 1467, 674, 1468, 410,
	411, 1225, 675, 1226, 412, 413, 414, 1227, 415, 0,
	0, 0, 416, 417, 418, 419, 420, 421, 1469, 422,
	424, 423, 1470, 425, 676, 1228, 426, 427, 1229, 1471,
	428, 429, 430, 431, 432, 433, 436, 1472, 1473, 434,
	435, 437, 438, 0, 439, 440, 442, 445, 441, 443,
	444, 446, 459, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 458, 461, 0, 460, 1230, 462,
	463, 464, 465, 472, 474, 475, 470, 471, 473, 476,
	477, 479, 467, 468, 469, 1231, 478, 466, 1474, 280,
	1232, 480, 481, 482, 1475, 677, 483, 678, 485, 486,
	1476, 0, 487, 0, 1477, 1478, 489, 490, 491, 1479,
	1480, 492, 493, 679, 1233, 494, 1234, 680, 495, 496,
	488, 497, 498, 499, 500, 501, 502, 503, 504, 505,
	1481, 506, 507, 681, 508, 509, 510, 682, 511, 512,
	513, 683, 514, 684, 515, 516, 1482, 517, 518, 0,
	519, 520, 521, 522, 523, 524, 525, 685, 526, 527,
	529, 528, 530, 1483, 531, 0, 532, 533, 534, 0,
	0, 0, 0, 0, 535, 537, 0, 538, 539, 540,
	541, 536, 542, 543, 544, 545, 546, 1484, 547, 548,
	549, 1235, 550, 551, 552, 553, 554, 686, 555, 0,
	556, 557, 563, 564, 565, 558, 559, 566, 567, 568,
	569, 570, 1485, 572, 573, 571, 574, 575, 576, 1486,
	577, 578, 560, 561, 579, 580, 1236, 581, 582, 583,
	584, 585, 586, 587, 687, 0, 588, 1487, 589, 590,
	591, 592, 594, 562, 595, 600, 601, 688, 596, 597,
	598, 599, 689, 603, 604, 1488, 605, 606, 0, 602,
	593, 1489, 607, 608, 609, 610, 611, 612, 613, 614,
	1490, 615, 690, 691, 692, 693, 1491, 624, 1492, 616,
	617, 618, 694, 619, 695, 1493, 620, 621, 622, 623,
	0, 625, 626, 1494, 1495, 627, 628, 629, 631, 632,
	630, 633, 1496, 634, 1497, 0, 635, 636, 637, 696,
	697, 698, 1498, 639, 638, 640, 641, 699, 642, 643,
	1499, 1500, 1501, 1502, 644, 645, 700, 646, 647, 648,
	0, 0, 0, 0, 0, 0, 1418, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3839, 281, 283, 282, 284, 285, 286, 287,
	1424, 288, 289, 1425, 1426, 1427, 0, 1428, 649, 1429,
	1430, 1431, 1432, 290, 291, 1220, 292, 293, 294, 295,
	296, 297, 650, 651, 0, 298, 652, 299, 653, 1433,
	654, 300, 301, 302, 303, 304, 305, 1434, 1435, 0,
	306, 655, 656, 657, 1436, 307, 308, 658, 1437, 1504,
	1438, 309, 310, 311, 312, 313, 314, 315, 0, 1439,
	317, 318, 319, 316, 320, 1440, 321, 0, 322, 323,
	324, 325, 326, 327, 1441, 328, 329, 330, 1221, 331,
	332, 333, 1442, 1443, 1445, 1444, 1446, 1447, 1448, 334,
	335, 336, 337, 338, 0, 339, 341, 659, 660, 1449,
	344, 340, 342, 1450, 345, 343, 346, 1451, 347, 348,
	349, 1452, 1453, 350, 351, 352, 1454, 353, 354, 355,
	1455, 356, 357, 358, 1456, 359, 360, 661, 361, 362,
	363, 365, 367, 364, 366, 368, 369, 370, 371, 662,
	663, 372, 1457, 278, 1458, 0, 0, 0, 0, 373,
	374, 375, 664, 0, 0, 0, 376, 1459, 377, 378,
	379, 1460, 1461, 1222, 380, 381, 382, 665, 666, 383,
	384, 385, 386, 387, 388, 389, 390, 391, 1462, 392,
	667, 1463, 668, 393, 1464, 394, 395, 396, 397, 398,
	669, 670, 671, 484, 1224, 399, 400, 1465, 401, 402,
	403, 404, 405, 0, 0, 0, 279, 406, 407, 408,
	1466, 1223, 409, 672, 673, 1467, 674, 1468, 410, 411,
	1225, 675, 1226, 412, 413, 414, 1227, 415, 0, 0,
	0, 416, 417, 418, 419, 420, 421, 1469, 422, 424,
	423, 1470, 425, 676, 1228, 426, 427, 1229, 1471, 428,
	429, 430, 431, 432, 433, 436, 1472, 1473, 434, 435,
	437, 438, 0, 439, 440, 442, 445, 441, 443, 444,
	446, 459, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 458, 461, 0, 460, 1230, 462, 463,
	464, 465, 472, 474, 475, 470, 471, 473, 476, 477,
	479, 467, 468, 469, 1231, 478, 466, 1474, 280, 1232,
	480, 481, 482, 1475, 677, 483, 678, 485, 486, 1476,
	0, 487, 0, 1477, 1478, 489, 490, 491, 1479, 1480,
	492, 493, 679, 1233, 494, 1234, 680, 495, 496, 488,
	497, 498, 499, 500, 501, 502, 503, 504, 505, 1481,
	506, 507, 681, 508, 509, 510, 682, 511, 512, 513,
	683, 514, 684, 515, 516, 1482, 517, 518, 0, 519,
	520, 521, 522, 523, 524, 525, 685, 526, 527, 529,
	528, 530, 1483, 531, 0, 532, 533, 534, 0, 0,
	0, 0, 0, 535, 537, 0, 538, 539, 540, 541,
	536, 542, 543, 544, 545, 546, 1484, 547, 548, 549,
	1235, 550, 551, 552, 553, 554, 686, 555, 0, 556,
	557, 563, 564, 565, 558, 559, 566, 567, 568, 569,
	570, 1485, 572, 573, 571, 574, 575, 576, 1486, 577,
	578, 560, 561, 579, 580, 1236, 581, 582, 583, 584,
	585, 586, 587, 687, 0, 588, 1487, 589, 590, 591,
	592, 594, 562, 595, 600, 601, 688, 596, 597, 598,
	599, 689, 603, 604, 1488, 605, 606, 0, 602, 593,
	1489, 607, 608, 609, 610, 611, 612, 613, 614, 1490,
	615, 690, 691, 692, 693, 1491, 624, 1492, 616, 617,
	618, 694, 619, 695, 1493, 620, 621, 622, 623, 0,
	625, 626, 1494, 1495, 627, 628, 629, 631, 632, 630,
	633, 1496, 634, 1497, 0, 635, 636, 637, 696, 697,
	698, 1498, 639, 638, 640, 641, 699, 642, 643, 1499,
	1500, 1501, 1502, 644, 645, 700, 646, 647, 648, 0,
	0, 0, 0, 0, 0, 1418, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3657, 281, 283, 282, 284, 285, 286, 287, 1424,
	288, 289, 1425, 1426, 1427, 0, 1428, 649, 1429, 1430,
	1431, 1432, 290, 291, 1220, 292, 293, 294, 295, 296,
	297, 650, 651, 0, 298, 652, 299, 653, 1433, 654,
	300, 301, 302, 303, 304, 305, 1434, 1435, 0, 306,
	655, 656, 657, 1436, 307, 308, 658, 1437, 1504, 1438,
	309, 310, 311, 312, 313, 314, 315, 0, 1439, 317,
	318, 319, 316, 320, 1440, 321, 0, 322, 323, 324,
	325, 326, 327, 1441, 328, 329, 330, 1221, 331, 332,
	333, 1442, 1443, 1445, 1444, 1446, 1447, 1448, 334, 335,
	336, 337, 338, 0, 339, 341, 659, 660, 1449, 344,
	340, 342, 1450, 345, 343, 346, 1451, 347, 348, 349,
	1452, 1453, 350, 351, 352, 1454, 353, 354, 355, 1455,
	356, 357, 358, 1456, 359, 360, 661, 361, 362, 363,
	365, 367, 364, 366, 368, 369, 370, 371, 662, 663,
	372, 1457, 278, 1458, 0, 0, 0, 0, 373, 374,
	375, 664, 0, 0, 0, 376, 1459, 377, 378, 379,
	1460, 1461, 1222, 380, 381, 382, 665, 666, 383, 384,
	385, 386, 387, 388, 389, 390, 391, 1462, 392, 667,
	1463, 668, 393, 1464, 394, 395, 396, 397, 398, 669,
	670, 671, 484, 1224, 399, 400, 1465, 401, 402, 403,
	404, 405, 0, 0, 0, 279, 406, 407, 408, 1466,
	1223, 409, 672, 673, 1467, 674, 1468, 410, 411, 1225,
	675, 1226, 412, 413, 414, 1227, 415, 0, 0, 0,
	416, 417, 418, 419, 420, 421, 1469, 422, 424, 423,
	1470, 425, 676, 1228, 426, 427, 1229, 1471, 428, 429,
	430, 431, 432, 433, 436, 1472, 1473, 434, 435, 437,
	438, 0, 439, 440, 442, 445, 441, 443, 444, 446,
	459, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 458, 461, 0, 460, 1230, 462, 463, 464,
	465, 472, 474, 475, 470, 471, 473, 476, 477, 479,
	467, 468, 469, 1231, 478, 466, 1474, 280, 1232, 480,
	481, 482, 1475, 677, 483, 678, 485, 486, 1476, 0,
	487, 0, 1477, 1478, 489, 490, 491, 1479, 1480, 492,
	493, 679, 1233, 494, 1234, 680, 495, 496, 488, 497,
	498, 499, 500, 501, 502, 503, 504, 505, 1481, 506,
	507, 681, 508, 509, 510, 682, 511, 512, 513, 683,
	514, 684, 515, 516, 1482, 517, 518, 0, 519, 520,
	521, 522, 523, 524, 525, 685, 526, 527, 529, 528,
	530, 1483, 531, 0, 532, 533, 534, 0, 0, 0,
	0, 0, 535, 537, 0, 538, 539, 540, 541, 536,
	542, 543, 544, 545, 546, 1484, 547, 548, 549, 1235,
	550, 551, 552, 553, 554, 686, 555, 0, 556, 557,
	563, 564, 565, 558, 559, 566, 567, 568, 569, 570,
	1485, 572, 573, 571, 574, 575, 576, 1486, 577, 578,
	560, 561, 579, 580, 1236, 581, 582, 583, 584, 585,
	586, 587, 687, 0, 588, 1487, 589, 590, 591, 592,
	594, 562, 595, 600, 601, 688, 596, 597, 598, 599,
	689, 603, 604, 1488, 605, 606, 0, 602, 593, 1489,
	607, 608, 609, 610, 611, 612, 613, 614, 1490, 615,
	690, 691, 692, 693, 1491, 624, 1492, 616, 617, 618,
	694, 619, 695, 1493, 620, 621, 622, 623, 0, 625,
	626, 1494, 1495, 627, 628, 629, 631, 632, 630, 633,
	1496, 634, 1497, 0, 635, 636, 637, 696, 697, 698,
	1498, 639, 638, 640, 641, 699, 642, 643, 1499, 1500,
	1501, 1502, 644, 645, 700, 646, 647, 648, 0, 0,
	0, 0, 0, 0, 1418, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2674, 281, 283, 282, 284, 285, 286, 287, 1424, 288,
	289, 1425, 1426, 1427, 0, 1428, 649, 1429, 1430, 1431,
	1432, 290, 291, 1220, 292, 293, 294, 295, 296, 297,
	650, 651, 0, 298, 652, 299, 653, 1433, 654, 300,
	301, 302, 303, 304, 305, 1434, 1435, 0, 306, 655,
	656, 657, 1436, 307, 308, 658, 1437, 1504, 1438, 309,
	310, 311, 312, 313, 314, 315, 0, 1439, 317, 318,
	319, 316, 320, 1440, 321, 0, 322, 323, 324, 325,
	326, 327, 1441, 328, 329, 330, 1221, 331, 332, 333,
	1442, 1443, 1445, 1444, 1446, 1447, 1448, 334, 335, 336,
	337, 338, 0, 339, 341, 659, 660, 1449, 344, 340,
	342, 1450, 345, 343, 346, 1451, 347, 348, 349, 1452,
	1453, 350, 351, 352, 1454, 353, 354, 355, 1455, 356,
	357, 358, 1456, 359, 360, 661, 361, 362, 363, 365,
	367, 364, 366, 368, 369, 370, 371, 662, 663, 372,
	1457, 278, 1458, 0, 0, 0, 0, 373, 374, 375,
	664, 0, 0, 0, 376, 1459, 377, 378, 379, 1460,
	1461, 1222, 380, 381, 382, 665, 666, 383, 384, 385,
	386, 387, 388, 389, 390, 391, 1462, 392, 667, 1463,
	668, 393, 1464, 394, 395, 396, 397, 398, 669, 670,
	671, 484, 1224, 399, 400, 1465, 401, 402, 403, 404,
	405, 0, 0, 0, 279, 406, 407, 408, 1466, 1223,
	409, 672, 673, 1467, 674, 1468, 410, 411, 1225, 675,
	1226, 412, 413, 414, 1227, 415, 0, 0, 0, 416,
	417, 418, 419, 420, 421, 1469, 422, 424, 423, 1470,
	425, 676, 1228, 426, 427, 1229, 1471, 428, 429, 430,
	431, 432, 433, 436, 1472, 1473, 434, 435, 437, 438,
	0, 439, 440, 442, 445, 441, 443, 444, 446, 459,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 458, 461, 0, 460, 1230, 462, 463, 464, 465,
	472, 474, 475, 470, 471, 473, 476, 477, 479, 467,
	468, 469, 1231, 478, 466, 1474, 280, 1232, 480, 481,
	482, 1475, 677, 483, 678, 485, 486, 1476, 0, 487,
	0, 1477, 1478, 489, 490, 491, 1479, 1480, 492, 493,
	679, 1233, 494, 1234, 680, 495, 496, 488, 497, 498,
	499, 500, 501, 502, 503, 504, 505, 1481, 506, 507,
	681, 508, 509, 510, 682, 511, 512, 513, 683, 514,
	684, 515, 516, 1482, 517, 518, 0, 519, 520, 521,
	522, 523, 524, 525, 685, 526, 527, 529, 528, 530,
	1483, 531, 0, 532, 533, 534, 0, 0, 0, 0,
	0, 535, 537, 0, 538, 539, 540, 541, 536, 542,
	543, 544, 545, 546, 1484, 547, 548, 549, 1235, 550,
	551, 552, 553, 554, 686, 555, 0, 556, 557, 563,
	564, 565, 558, 559, 566, 567, 568, 569, 570, 1485,
	572, 573, 571, 574, 575, 576, 1486, 577, 578, 560,
	561, 579, 580, 1236, 581, 582, 583, 584, 585, 586,
	587, 687, 0, 588, 1487, 589, 590, 591, 592, 594,
	562, 595, 600, 601, 688, 596, 597, 598, 599, 689,
	603, 604, 1488, 605, 606, 0, 602, 593, 1489, 607,
	608, 609, 610, 611, 612, 613, 614, 1490, 615, 690,
	691, 692, 693, 1491, 624, 1492, 616, 617, 618, 694,
	619, 695, 1493, 620, 621, 622, 623, 0, 625, 626,
	1494, 1495, 627, 628, 629, 631, 632, 630, 633, 1496,
	634, 1497, 0, 635, 636, 637, 696, 697, 698, 1498,
	639, 638, 640, 641, 699, 642, 643, 1499, 1500, 1501,
	1502, 644, 645, 700, 646, 647, 648, 0, 0, 0,
	0, 1415, 0, 1418, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2298,
	281, 283, 282, 284, 285, 286, 287, 1424, 288, 289,
	1425, 1426, 1427, 0, 1428, 649, 1429, 1430, 1431, 1432,
	290, 291, 1220, 292, 293, 294, 295, 296, 297, 650,
	651, 0, 298, 652, 299, 653, 1433, 654, 300, 301,
	302, 303, 304, 305, 1434, 1435, 0, 306, 655, 656,
	657, 1436, 307, 308, 658, 1437, 1504, 1438, 309, 310,
	311, 312, 313, 314, 315, 0, 1439, 317, 318, 319,
	316, 320, 1440, 321, 0, 322, 323, 324, 325, 326,
	327, 1441, 328, 329, 330, 1221, 331, 332, 333, 1442,
	1443, 1445, 1444, 1446, 1447, 1448, 334, 335, 336, 337,
	338, 0, 339, 341, 659, 660, 1449, 344, 340, 342,
	1450, 345, 343, 346, 1451, 347, 348, 349, 1452, 1453,
	350, 351, 352, 1454, 353, 354, 355, 1455, 356, 357,
	358, 1456, 359, 360, 661, 361, 362, 363, 365, 367,
	364, 366, 368, 369, 370, 371, 662, 663, 372, 1457,
	278, 1458, 0, 0, 0, 0, 373, 374, 375, 664,
	0, 0, 0, 376, 1459, 377, 378, 379, 1460, 1461,
	1222, 380, 381, 382, 665, 666, 383, 384, 385, 386,
	387, 388, 389, 390, 391, 1462, 392, 667, 1463, 668,
	393, 1464, 394, 395, 396, 397, 398, 669, 670, 671,
	484, 1224, 399, 400, 1465, 401, 402, 403, 404, 405,
	0, 0, 0, 279, 406, 407, 408, 1466, 1223, 409,
	672, 673, 1467, 674, 1468, 410, 411, 1225, 675, 1226,
	412, 413, 414, 1227, 415, 0, 0, 0, 416, 417,
	418, 419, 420, 421, 1469, 422, 424, 423, 1470, 425,
	676, 1228, 426, 427, 1229, 1471, 428, 429, 430, 431,
	432, 433, 436, 1472, 1473, 434, 435, 437, 438, 0,
	439, 440, 442, 445, 441, 443, 444, 446, 459, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	458, 461, 0, 460, 1230, 462, 463, 464, 465, 472,
	474, 475, 470, 471, 473, 476, 477, 479, 467, 468,
	469, 1231, 478, 466, 1474, 280, 1232, 480, 481, 482,
	1475, 677, 483, 678, 485, 486, 1476, 0, 487, 0,
	1477, 1478, 489, 490, 491, 1479, 1480, 492, 493, 679,
	1233, 494, 1234, 680, 495, 496, 488, 497, 498, 499,
	500, 501, 502, 503, 504, 505, 1481, 506, 507, 681,
	508, 509, 510, 682, 511, 512, 513, 683, 514, 684,
	515, 516, 1482, 517, 518, 0, 519, 520, 521, 522,
	523, 524, 525, 685, 526, 527, 529, 528, 530, 1483,
	531, 0, 532, 533, 534, 0, 0, 0, 0, 0,
	535, 537, 0, 538, 539, 540, 541, 536, 542, 543,
	544, 545, 546, 1484, 547, 548, 549, 1235, 550, 551,
	552, 553, 554, 686, 555, 0, 556, 557, 563, 564,
	565, 558, 559, 566, 567, 568, 569, 570, 1485, 572,
	573, 571, 574, 575, 576, 1486, 577, 578, 560, 561,
	579, 580, 1236, 581, 582, 583, 584, 585, 586, 587,
	687, 0, 588, 1487, 589, 590, 591, 592, 594, 562,
	595, 600, 601, 688, 596, 597, 598, 599, 689, 603,
	604, 1488, 605, 606, 0, 602, 593, 1489, 607, 608,
	609, 610, 611, 612, 613, 614, 1490, 615, 690, 691,
	692, 693, 1491, 624, 1492, 616, 617, 618, 694, 619,
	695, 1493, 620, 621, 622, 623, 0, 625, 626, 1494,
	1495, 627, 628, 629, 631, 632, 630, 633, 1496, 634,
	1497, 0, 635, 636, 637, 696, 697, 698, 1498, 639,
	638, 640, 641, 699, 642, 643, 1499, 1500, 1501, 1502,
	644, 645, 700, 646, 647, 648, 1418, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 281, 283, 282, 284, 285, 286, 287,
	1424, 288, 289, 1425, 1426, 1427, 0, 1428, 649, 1429,
	1430, 1431, 1432, 290, 291, 1220, 292, 293, 294, 295,
	296, 297, 650, 651, 0, 298, 652, 299, 653, 1433,
	654, 300, 301, 302, 303, 304, 305, 1434, 1435, 0,
	306, 655, 656, 657, 1436, 307, 308, 658, 1437, 1504,
	1438, 309, 310, 311, 312, 313, 314, 315, 0, 1439,
	317, 318, 319, 316, 320, 1440, 321, 0, 322, 323,
	324, 325, 326, 327, 1441, 328, 329, 330, 1221, 331,
	332, 333, 1442, 1443, 1445, 1444, 1446, 1447, 1448, 334,
	335, 336, 337, 338, 0, 339, 341, 659, 660, 1449,
	344, 340, 342, 1450, 345, 343, 346, 1451, 347, 348,
	349, 1452, 1453, 350, 351, 352, 1454, 353, 354, 355,
	1455, 356, 357, 358, 1456, 359, 360, 661, 361, 362,
	363, 365, 367, 364, 366, 368, 369, 370, 371, 662,
	663, 372, 1457, 278, 1458, 0, 0, 0, 0, 373,
	374, 375, 664, 0, 0, 0, 376, 1459, 377, 378,
	379, 1460, 1461, 1222, 380, 381, 382, 665, 666, 383,
	384, 385, 386, 387, 388, 389, 390, 391, 1462, 392,
	667, 1463, 668, 393, 1464, 394, 395, 396, 397, 398,
	669, 670, 671, 484, 1224, 399, 400, 1465, 401, 402,
	403, 404, 405, 0, 0, 0, 279, 406, 407, 408,
	1466, 1223, 409, 672, 673, 1467, 674, 1468, 410, 411,
	1225, 675, 1226, 412, 413, 414, 1227, 415, 0, 0,
	0, 416, 417, 418, 419, 420, 421, 1469, 422, 424,
	423, 1470, 425, 676, 1228, 426, 427, 1229, 1471, 428,
	429, 430, 431, 432, 433, 436, 1472, 1473, 434, 435,
	437, 438, 0, 439, 440, 442, 445, 441, 443, 444,
	446, 459, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 458, 461, 0, 460, 1230, 462, 463,
	464, 465, 472, 474, 475, 470, 471, 473, 476, 477,
	479, 467, 468, 469, 1231, 478, 466, 1474, 280, 1232,
	480, 481, 482, 1475, 677, 483, 678, 485, 486, 1476,
	0, 487, 0, 1477, 1478, 489, 490, 491, 1479, 1480,
	492, 493, 679, 1233, 494, 1234, 680, 495, 496, 488,
	497, 498, 499, 500, 501, 502, 503, 504, 505, 1481,
	506, 507, 681, 508, 509, 510, 682, 511, 512, 513,
	683, 514, 684, 515, 516, 1482, 517, 518, 0, 519,
	520, 521, 522, 523, 524, 525, 685, 526, 527, 529,
	528, 530, 1483, 531, 0, 532, 533, 534, 0, 0,
	0, 0, 0, 535, 537, 0, 538, 539, 540, 541,
	536, 542, 543, 544, 545, 546, 1484, 547, 548, 549,
	1235, 550, 551, 552, 553, 554, 686, 555, 0, 556,
	557, 563, 564, 565, 558, 559, 566, 567, 568, 569,
	570, 1485, 572, 573, 571, 574, 575, 576, 1486, 577,
	578, 560, 561, 579, 580, 1236, 581, 582, 583, 584,
	585, 586, 587, 687, 0, 588, 1487, 589, 590, 591,
	592, 594, 562, 595, 600, 601, 688, 596, 597, 598,
	599, 689, 603, 604, 1488, 605, 606, 0, 602, 593,
	1489, 607, 608, 609, 610, 611, 612, 613, 614, 1490,
	615, 690, 691, 692, 693, 1491, 624, 1492, 616, 617,
	618, 694, 619, 695, 1493, 620, 621, 622, 623, 0,
	625, 626, 1494, 1495, 627, 628, 629, 631, 632, 630,
	633, 1496, 634, 1497, 0, 635, 636, 637, 696, 697,
	698, 1498, 639, 638, 640, 641, 699, 642, 643, 1499,
	1500, 1501, 1502, 644, 645, 700, 646, 647, 648, 2649,
	0, 1156, 1128, 1129, 1130, 1126, 1127, 1139, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 281, 283,
	282, 284, 285, 286, 287, 2646, 288, 289, 0, 0,
	0, 0, 0, 1180, 1144, 0, 0, 0, 290, 291,
	1220, 292, 293, 294, 295, 296, 297, 650, 1193, 0,
	298, 1200, 299, 1199, 0, 1210, 300, 301, 302, 303,
	304, 305, 1146, 1179, 1111, 306, 1240, 1241, 657, 0,
	307, 308, 1186, 0, 1167, 0, 309, 310, 311, 312,
	313, 314, 315, 0, 0, 317, 318, 319, 316, 320,
	0, 321, 0, 322, 323, 324, 325, 326, 327, 0,
	328, 329, 330, 1221, 331, 332, 333, 1170, 1168, 1169,
	1176, 1172, 1171, 1175, 334, 335, 336, 337, 338, 1203,
	339, 341, 1197, 1196, 1116, 344, 340, 342, 0, 345,
	343, 346, 0, 347, 348, 349, 2647, 0, 350, 1188,
	352, 0, 353, 354, 355, 0, 356, 357, 358, 0,
	359, 360, 1122, 361, 362, 363, 365, 367, 364, 366,
	368, 369, 370, 371, 1211, 1212, 372, 1135, 278, 0,
	0, 0, 0, 0, 373, 374, 375, 1195, 0, 0,
	0, 376, 0, 377, 378, 379, 0, 0, 1222, 380,
	381, 382, 1208, 1209, 383, 384, 385, 386, 387, 388,
	389, 390, 391, 0, 392, 1218, 0, 1145, 393, 0,
	394, 395, 396, 397, 398, 1181, 1182, 1185, 484, 1224,
	399, 400, 0, 401, 402, 403, 404, 405, 0, 0,
	0, 279, 406, 407, 408, 0, 1223, 409, 1190, 1191,
	0, 1151, 0, 410, 411, 1225, 1183, 1226, 412, 413,
	414, 1227, 415, 0, 0, 0, 416, 417, 418, 419,
	420, 421, 0, 422, 424, 423, 0, 425, 1219, 1228,
	426, 427, 1229, 0, 428, 429, 430, 431, 432, 433,
	436, 1174, 1173, 434, 435, 437, 438, 0, 439, 440,
	442, 445, 441, 443, 444, 446, 459, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 458, 461,
	0, 460, 1230, 462, 463, 464, 465, 472, 474, 475,
	470, 471, 473, 476, 477, 479, 467, 468, 469, 1231,
	478, 466, 1113, 280, 1232, 480, 481, 482, 1136, 1184,
	483, 1198, 485, 486, 0, 0, 487, 0, 0, 0,
	489, 490, 491, 0, 0, 492, 493, 679, 1233, 494,
	1234, 1213, 495, 496, 1123, 497, 498, 499, 500, 501,
	502, 503, 504, 505, 0, 506, 507, 681, 508, 509,
	510, 682, 511, 512, 513, 1214, 514, 684, 515, 516,
	0, 517, 518, 0, 519, 520, 521, 522, 523, 524,
	525, 1194, 526, 527, 529, 528, 530, 0, 531, 0,
	532, 533, 534, 0, 0, 0, 0, 0, 535, 537,
	0, 538, 539, 540, 541, 536, 542, 543, 544, 545,
	546, 0, 547, 548, 549, 1235, 550, 551, 552, 553,
	554, 1124, 555, 0, 556, 557, 563, 564, 565, 558,
	559, 566, 567, 568, 569, 570, 0, 572, 573, 571,
	574, 575, 576, 1177, 577, 578, 560, 561, 579, 580,
	1236, 581, 582, 583, 584, 585, 586, 587, 1192, 0,
	588, 0, 589, 590, 591, 592, 594, 562, 595, 600,
	601, 1239, 596, 597, 598, 599, 1215, 603, 604, 0,
	605, 606, 1110, 602, 593, 0, 607, 608, 609, 610,
	611, 612, 613, 614, 0, 615, 1204, 1205, 1206, 1207,
	0, 624, 0, 616, 617, 618, 1216, 619, 1217, 1134,
	620, 621, 622, 623, 0, 625, 626, 0, 1117, 627,
	628, 629, 631, 632, 630, 633, 1178, 634, 0, 0,
	635, 636, 637, 696, 1201, 1238, 2645, 639, 638, 640,
	641, 699, 642, 643, 0, 0, 0, 0, 644, 645,
	700, 646, 647, 648, 1114, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1109, 0, 0,
	0, 0, 0, 0, 1107, 1108, 2648, 0, 0, 0,
	0, 0, 0, 0, 1140, 2644, 0, 1100, 1138, 1156,
	1128, 1129, 1130, 1126, 1127, 1139, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 281, 283, 282, 284,
	285, 286, 287, 0, 288, 289, 0, 0, 0, 0,
	0, 1180, 1144, 0, 0, 0, 290, 291, 1220, 292,
	293, 294, 295, 296, 297, 650, 1193, 0, 298, 1200,
	299, 1199, 0, 1210, 300, 301, 302, 303, 304, 305,
	1146, 1179, 1111, 306, 1240, 1241, 657, 0, 307, 308,
	1186, 0, 1167, 0, 309, 310, 311, 312, 313, 314,
	315, 0, 0, 317, 318, 319, 316, 320, 0, 321,
	0, 322, 323, 324, 325, 326, 327, 0, 328, 329,
	330, 1221, 331, 332, 333, 1170, 1168, 1169, 1176, 1172,
	1171, 1175, 334, 335, 336, 337, 338, 1203, 339, 341,
	1197, 1196, 1116, 344, 340, 342, 0, 345, 343, 346,
	0, 347, 348, 349, 0, 0, 350, 1188, 352, 0,
	353, 354, 355, 0, 356, 357, 358, 0, 359, 360,
	1122, 361, 362, 363, 365, 367, 364, 366, 368, 369,
	370, 371, 1211, 1212, 372, 1135, 278, 0, 0, 0,
	0, 0, 373, 374, 375, 1195, 0, 0, 0, 376,
	0, 377, 378, 379, 0, 0, 1222, 380, 381, 382,
	1208, 1209, 383, 384, 385, 386, 387, 388, 389, 390,
	391, 0, 392, 1218, 0, 1145, 393, 0, 394, 395,
	396, 397, 398, 1181, 1182, 1185, 484, 1224, 399, 400,
	0, 401, 402, 403, 404, 405, 0, 0, 0, 279,
	406, 407, 408, 0, 1223, 409, 1190, 1191, 0, 1151,
	0, 410, 411, 1225, 1183, 1226, 412, 413, 414, 1227,
	415, 0, 0, 0, 416, 417, 418, 419, 420, 421,
	0, 422, 424, 423, 0, 425, 1219, 1228, 426, 427,
	1229, 0, 428, 429, 430, 431, 432, 433, 436, 1174,
	1173, 434, 435, 437, 438, 0, 439, 440, 442, 445,
	441, 443, 444, 446, 459, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 458, 461, 0, 460,
	1230, 462, 463, 464, 465, 472, 474, 475, 470, 471,
	473, 476, 477, 479, 467, 468, 469, 1231, 478, 466,
	1113, 280, 1232, 480, 481, 482, 1136, 1184, 483, 1198,
	485, 486, 0, 0, 487, 0, 0, 0, 489, 490,
	491, 0, 0, 492, 493, 679, 1233, 494, 1234, 1213,
	495, 496, 1123, 497, 498, 499, 500, 501, 502, 503,
	504, 505, 0, 506, 507, 681, 508, 509, 510, 682,
	511, 512, 513, 1214, 514, 684, 515, 516, 0, 517,
	518, 0, 519, 520, 521, 522, 523, 524, 525, 1194,
	526, 527, 529, 528, 530, 0, 531, 0, 532, 533,
	534, 0, 0, 0, 0, 0, 535, 537, 0, 538,
	539, 540, 541, 536, 542, 543, 544, 545, 546, 0,
	547, 548, 549, 1235, 550, 551, 552, 553, 554, 1124,
	555, 0, 556, 557, 563, 564, 565, 558, 559, 566,
	567, 568, 569, 570, 240, 572, 573, 571, 574, 575,
	576, 1177, 577, 578, 560, 561, 579, 580, 1236, 581,
	582, 583, 584, 585, 586, 587, 1192, 0, 588, 0,
	589, 590, 591, 592, 594, 562, 595, 600, 601, 1239,
	596, 597, 598, 599, 1215, 603, 604, 0, 605, 606,
	1110, 602, 593, 242, 607, 608, 609, 610, 611, 612,
	613, 614, 0, 615, 1204, 1205, 1206, 1207, 0, 624,
	0, 616, 617, 618, 1216, 619, 1217, 1134, 620, 621,
	622, 623, 0, 625, 626, 0, 1117, 627, 628, 629,
	631, 632, 630, 633, 1178, 634, 0, 0, 635, 636,
	637, 1656, 1201, 1238, 0, 639, 638, 640, 641, 699,
	642, 643, 0, 0, 0, 234, 644, 645, 700, 646,
	647, 648, 1114, 0, 235, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1109, 0, 0, 0, 0,
	0, 0, 1107, 1108, 1156, 1128, 1129, 1130, 1126, 1127,
	1139, 0, 1917, 1915, 0, 0, 1138, 0, 0, 0,
	0, 281, 283, 282, 284, 285, 286, 287, 0, 288,
	289, 0, 0, 0, 0, 0, 1180, 1144, 0, 0,
	0, 290, 291, 1220, 292, 293, 294, 295, 296, 297,
	650, 1193, 0, 298, 1200, 299, 1199, 0, 1210, 300,
	301, 302, 303, 304, 305, 1146, 1179, 1111, 306, 1240,
	1241, 657, 0, 307, 308, 1186, 0, 1167, 0, 309,
	310, 311, 312, 313, 314, 315, 0, 0, 317, 318,
	319, 316, 320, 0, 321, 0, 322, 323, 324, 325,
	326, 327, 0, 328, 329, 330, 1221, 331, 332, 333,
	1170, 1168, 1169, 1176, 1172, 1171, 1175, 334, 335, 336,
	337, 338, 1203, 339, 341, 1197, 1196, 1116, 344, 340,
	342, 0, 345, 343, 346, 0, 347, 348, 349, 0,
	0, 350, 1188, 352, 0, 353, 354, 355, 0, 356,
	357, 358, 0, 359, 360, 1122, 361, 362, 363, 365,
	367, 364, 366, 368, 369, 370, 371, 1211, 1212, 372,
	1135, 278, 0, 0, 0, 0, 0, 373, 374, 375,
	1195, 0, 0, 0, 376, 0, 377, 378, 379, 0,
	0, 1222, 380, 381, 382, 1208, 1209, 383, 384, 385,
	386, 387, 388, 389, 390, 391, 0, 392, 1218, 0,
	1145, 393, 0, 394, 395, 396, 397, 398, 1181, 1182,
	1185, 484, 1224, 399, 400, 0, 401, 402, 403, 404,
	405, 0, 0, 0, 279, 406, 407, 408, 0, 1223,
	409, 1190, 1191, 0, 1151, 0, 410, 411, 1225, 1183,
	1226, 412, 413, 414, 1227, 415, 0, 0, 0, 416,
	417, 418, 419, 420, 421, 0, 422, 424, 423, 0,
	425, 1219, 1228, 426, 427, 1229, 0, 428, 429, 430,
	431, 432, 433, 436, 1174, 1173, 434, 435, 437, 438,
	0, 439, 440, 442, 445, 441, 443, 444, 446, 459,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 458, 461, 0, 460, 1230, 462, 463, 464, 465,
	472, 474, 475, 470, 471, 473, 476, 477, 479, 467,
	468, 469, 1231, 478, 466, 1113, 280, 1232, 480, 481,
	482, 1136, 1184, 483, 1198, 485, 486, 0, 0, 487,
	0, 0, 0, 489, 490, 491, 0, 0, 492, 493,
	679, 1233, 494, 1234, 1213, 495, 496, 1123, 497, 498,
	499, 500, 501, 502, 503, 504, 505, 0, 506, 507,
	681, 508, 509, 510, 682, 511, 512, 513, 1214, 514,
	684, 515, 516, 0, 517, 518, 0, 519, 520, 521,
	522, 523, 524, 525, 1194, 526, 527, 529, 528, 530,
	0, 531, 0, 532, 533, 534, 0, 0, 0, 0,
	0, 535, 537, 0, 538, 539, 540, 541, 536, 542,
	543, 544, 545, 546, 0, 547, 548, 549, 1235, 550,
	551, 552, 553, 554, 1124, 555, 0, 556, 557, 563,
	564, 565, 558, 559, 566, 567, 568, 569, 570, 240,
	572, 573, 571, 574, 575, 576, 1177, 577, 578, 560,
	561, 579, 580, 1236, 581, 582, 583, 584, 585, 586,
	587, 1192, 0, 588, 0, 589, 590, 591, 592, 594,
	562, 595, 600, 601, 1239, 596, 597, 598, 599, 1215,
	603, 604, 0, 605, 606, 1110, 602, 593, 242, 607,
	608, 609, 610, 611, 612, 613, 614, 0, 615, 1204,
	1205, 1206, 1207, 0, 624, 0, 616, 617, 618, 1216,
	619, 1217, 1134, 620, 621, 622, 623, 0, 625, 626,
	0, 1117, 627, 628, 629, 631, 632, 630, 633, 1178,
	634, 0, 0, 635, 636, 637, 1656, 1201, 1238, 0,
	639, 638, 640, 641, 699, 642, 643, 0, 0, 0,
	234, 644, 645, 700, 646, 647, 648, 1114, 0, 235,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1109, 0, 0, 0, 0, 0, 0, 1107, 1108, 1156,
	1128, 1129, 1130, 1126, 1127, 1139, 0, 1917, 3290, 0,
	0, 1138, 0, 0, 0, 0, 281, 283, 282, 284,
	285, 286, 287, 0, 288, 289, 0, 0, 0, 0,
	0, 1180, 1144, 0, 0, 0, 290, 291, 1220, 292,
	293, 294, 295, 296, 297, 650, 1193, 0, 298, 1200,
	299, 1199, 0, 1210, 300, 301, 302, 303, 304, 305,
	1146, 1179, 1111, 306, 1240, 1241, 657, 0, 307, 308,
	1186, 0, 1167, 0, 309, 310, 311, 312, 313, 314,
	315, 0, 0, 317, 318, 319, 316, 320, 0, 321,
	0, 322, 323, 324, 325, 326, 327, 0, 328, 329,
	330, 1221, 331, 332, 333, 1170, 1168, 1169, 1176, 1172,
	1171, 1175, 334, 335, 336, 337, 338, 1203, 339, 341,
	1197, 1196, 1116, 344, 340, 342, 0, 345, 343, 346,
	0, 347, 348, 349, 0, 0, 350, 1188, 352, 0,
	353, 354, 355, 0, 356, 357, 358, 0, 359, 360,
	1122, 361, 362, 363, 365, 367, 364, 366, 368, 369,
	370, 371, 1211, 1212, 372, 1135, 278, 0, 0, 0,
	0, 0, 373, 374, 375, 1195, 0, 0, 0, 376,
	0, 377, 378, 379, 0, 0, 1222, 380, 381, 382,
	1208, 1209, 383, 384, 385, 386, 387, 388, 389, 390,
	391, 0, 392, 1218, 0, 1145, 393, 0, 394, 395,
	396, 397, 398, 1181, 1182, 1185, 484, 1224, 399, 400,
	0, 401, 402, 403, 404, 405, 0, 0, 0, 279,
	406, 407, 408, 0, 1223, 409, 1190, 1191, 0, 1151,
	0, 410, 411, 1225, 1183, 1226, 412, 413, 414, 1227,
	415, 0, 0, 0, 416, 417, 418, 419, 420, 421,
	0, 422, 424, 423, 0, 425, 1219, 1228, 426, 427,
	1229, 0, 428, 429, 430, 431, 432, 433, 436, 1174,
	1173, 434, 435, 437, 438, 0, 439, 440, 442, 445,
	441, 443, 444, 446, 459, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 458, 461, 0, 460,
	1230, 462, 463, 464, 465, 472, 474, 475, 470, 471,
	473, 476, 477, 479, 467, 468, 469, 1231, 478, 466,
	1113, 280, 1232, 480, 481, 482, 1136, 1184, 483, 1198,
	485, 486, 0, 0, 487, 0, 0, 0, 489, 490,
	491, 0, 0, 492, 493, 679, 1233, 494, 1234, 1213,
	495, 496, 1123, 497, 498, 499, 500, 501, 502, 503,
	504, 505, 0, 506, 507, 681, 508, 509, 510, 682,
	511, 512, 513, 1214, 514, 684, 515, 516, 0, 517,
	518, 0, 519, 520, 521, 522, 523, 524, 525, 1194,
	526, 527, 529, 528, 530, 0, 531, 0, 532, 533,
	534, 0, 0, 0, 0, 0, 535, 537, 0, 538,
	539, 540, 541, 536, 542, 543, 544, 545, 546, 0,
	547, 548, 549, 1235, 550, 551, 552, 553, 554, 1124,
	555, 0, 556, 557, 563, 564, 565, 558, 559, 566,
	567, 568, 569, 570, 240, 572, 573, 571, 574, 575,
	576, 1177, 577, 578, 560, 561, 579, 580, 1236, 581,
	582, 583, 584, 585, 586, 587, 1192, 0, 588, 0,
	589, 590, 591, 592, 594, 562, 595, 600, 601, 1239,
	596, 597, 598, 599, 1215, 603, 604, 0, 605, 606,
	1110, 602, 593, 242, 607, 608, 609, 610, 611, 612,
	613, 614, 0, 615, 1204, 1205, 1206, 1207, 0, 624,
	0, 616, 617, 618, 1216, 619, 1217, 1134, 620, 621,
	622, 623, 0, 625, 626, 0, 1117, 627, 628, 629,
	631, 632, 630, 633, 1178, 634, 0, 0, 635, 636,
	637, 1656, 1201, 1238, 0, 639, 638, 640, 641, 699,
	642, 643, 0, 0, 0, 234, 644, 645, 700, 646,
	647, 648, 1114, 0, 235, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1109, 0, 0, 0, 0,
	0, 0, 1107, 1108, 1156, 1128, 1129, 1130, 1126, 1127,
	1139, 0, 1917, 1915, 0, 0, 1138, 0, 0, 0,
	0, 281, 283, 282, 284, 285, 286, 287, 0, 288,
	289, 0, 0, 0, 0, 0, 1180, 1144, 0, 0,
	0, 290, 291, 1220, 292, 293, 294, 295, 296, 297,
	650, 1193, 0, 298, 1200, 299, 1199, 2780, 1210, 300,
	301, 302, 303, 304, 305, 1146, 1179, 1111, 306, 1240,
	1241, 657, 0, 307, 308, 1186, 0, 1167, 0, 309,
	310, 311, 312, 313, 314, 315, 0, 0, 317, 318,
	319, 316, 320, 0, 321, 0, 322, 323, 324, 325,
	326, 327, 0, 328, 329, 330, 1221, 331, 332, 333,
	1170, 1168, 1169, 1176, 1172, 1171, 1175, 334, 335, 336,
	337, 338, 1203, 339, 341, 1197, 1196, 1116, 344, 340,
	342, 0, 345, 343, 346, 0, 347, 348, 349, 0,
	0, 350, 1188, 352, 0, 353, 354, 355, 0, 356,
	357, 358, 0, 359, 360, 1122, 361, 362, 363, 365,
	367, 364, 366, 368, 369, 370, 371, 1211, 1212, 372,
	1135, 278, 0, 0, 0, 0, 0, 373, 374, 375,
	1195, 0, 0, 0, 376, 0, 377, 378, 379, 0,
	2785, 1222, 380, 381, 382, 1208, 1209, 383, 384, 385,
	386, 387, 388, 389, 390, 391, 0, 392, 1218, 0,
	1145, 393, 0, 394, 395, 396, 397, 398, 1181, 1182,
	1185, 484, 1224, 399, 400, 0, 401, 402, 403, 404,
	405, 0, 0, 0, 279, 406, 407, 408, 0, 1223,
	409, 1190, 1191, 0, 1151, 0, 410, 411, 1225, 1183,
	1226, 412, 413, 414, 1227, 415, 0, 0, 0, 416,
	417, 418, 419, 420, 421, 0, 422, 424, 423, 2781,
	425, 1219, 1228, 426, 427, 1229, 0, 428, 429, 430,
	431, 432, 433, 436, 1174, 1173, 434, 435, 437, 438,
	0, 439, 440, 442, 445, 441, 443, 444, 446, 459,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 458, 461, 0, 460, 1230, 462, 463, 464, 465,
	472, 474, 475, 470, 471, 473, 476, 477, 479, 467,
	468, 469, 1231, 478, 466, 1113, 280, 1232, 480, 481,
	482, 1136, 1184, 483, 1198, 485, 486, 0, 0, 487,
	0, 0, 0, 489, 490, 491, 0, 0, 492, 493,
	679, 1233, 494, 1234, 1213, 495, 496, 1123, 497, 498,
	499, 500, 501, 502, 503, 504, 505, 0, 506, 507,
	681, 508, 509, 510, 682, 511, 512, 513, 1214, 514,
	684, 515, 516, 0, 517, 518, 0, 519, 520, 521,
	522, 523, 524, 525, 1194, 526, 527, 529, 528, 530,
	0, 531, 0, 532, 533, 534, 0, 0, 0, 0,
	0, 535, 537, 0, 538, 539, 540, 541, 536, 542,
	543, 544, 545, 546, 0, 547, 548, 549, 1235, 550,
	551, 552, 553, 554, 1124, 555, 0, 556, 557, 563,
	564, 565, 558, 559, 566, 567, 568, 569, 570, 0,
	572, 573, 571, 574, 575, 576, 1177, 577, 578, 560,
	561, 579, 580, 1236, 581, 582, 583, 584, 585, 586,
	587, 1192, 0, 588, 0, 589, 590, 591, 592, 594,
	562, 595, 600, 601, 1239, 596, 597, 598, 599, 1215,
	603, 604, 0, 605, 606, 1110, 602, 593, 0, 607,
	608, 609, 610, 611, 612, 613, 614, 0, 615, 1204,
	1205, 1206, 1207, 0, 624, 2782, 616, 617, 618, 1216,
	619, 1217, 1134, 620, 621, 622, 623, 0, 625, 626,
	0, 1117, 627, 628, 629, 631, 632, 630, 633, 1178,
	634, 0, 0, 635, 636, 637, 696, 1201, 1238, 0,
	639, 638, 640, 641, 699, 642, 643, 0, 0, 0,
	0, 644, 645, 700, 646, 647, 648, 1114, 0, 0,
	0, 2694, 0, 1156, 1128, 1129, 1130, 1126, 1127, 1139,
	1109, 0, 0, 0, 0, 0, 0, 1107, 1108, 0,
	281, 283, 282, 284, 285, 286, 287, 1140, 288, 289,
	0, 1138, 0, 0, 0, 1180, 1144, 0, 0, 0,
	290, 291, 1220, 292, 293, 294, 295, 296, 297, 650,
	1193, 0, 298, 1200, 299, 1199, 0, 1210, 300, 301,
	302, 303, 304, 305, 1146, 1179, 1111, 306, 1240, 1241,
	657, 0, 307, 308, 1186, 0, 1167, 0, 309, 310,
	311, 312, 313, 314, 315, 0, 0, 317, 318, 319,
	316, 320, 0, 321, 0, 322, 323, 324, 325, 326,
	327, 0, 328, 329, 330, 1221, 331, 332, 333, 1170,
	1168, 1169, 1176, 1172, 1171, 1175, 334, 335, 336, 337,
	338, 1203, 339, 341, 1197, 1196, 1116, 344, 340, 342,
	0, 345, 343, 346, 0, 347, 348, 349, 0, 0,
	350, 1188, 352, 0, 353, 354, 355, 0, 356, 357,
	358, 0, 359, 360, 1122, 361, 362, 363, 365, 367,
	364, 366, 368, 369, 370, 371, 1211, 1212, 372, 1135,
	278, 0, 0, 0, 0, 0, 373, 374, 375, 1195,
	0, 0, 0, 376, 0, 377, 378, 379, 0, 0,
	1222, 380, 381, 382, 1208, 1209, 383, 384, 385, 386,
	387, 388, 389, 390, 391, 0, 392, 1218, 0, 1145,
	393, 0, 394, 395, 396, 397, 398, 1181, 1182, 1185,
	484, 1224, 399, 400, 0, 401, 402, 403, 404, 405,
	0, 0, 0, 279, 406, 407, 408, 0, 1223, 409,
	1190, 1191, 0, 1151, 0, 410, 411, 1225, 1183, 1226,
	412, 413, 414, 1227, 415, 0, 0, 0, 416, 417,
	418, 419, 420, 421, 0, 422, 424, 423, 0, 425,
	1219, 1228, 426, 427, 1229, 0, 428, 429, 430, 431,
	432, 433, 436, 1174, 1173, 434, 435, 437, 438, 0,
	439, 440, 442, 445, 441, 443, 444, 446, 459, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	458, 461, 0, 460, 1230, 462, 463, 464, 465, 472,
	474, 475, 470, 471, 473, 476, 477, 479, 467, 468,
	469, 1231, 478, 466, 1113, 280, 1232, 480, 481, 482,
	1136, 1184, 483, 1198, 485, 486, 0, 0, 487, 0,
	0, 0, 489, 490, 491, 0, 0, 492, 493, 679,
	1233, 494, 1234, 1213, 495, 496, 1123, 497, 498, 499,
	500, 501, 502, 503, 504, 505, 0, 506, 507, 681,
	508, 509, 510, 682, 511, 512, 513, 1214, 514, 684,
	515, 516, 0, 517, 518, 0, 519, 520, 521, 522,
	523, 524, 525, 1194, 526, 527, 529, 528, 530, 0,
	531, 0, 532, 533, 534, 0, 0, 0, 0, 0,
	535, 537, 0, 538, 539, 540, 541, 536, 542, 543,
	544, 545, 546, 0, 547, 548, 549, 1235, 550, 551,
	552, 553, 554, 1124, 555, 0, 556, 557, 563, 564,
	565, 558, 559, 566, 567, 568, 569, 570, 0, 572,
	573, 571, 574, 575, 576, 1177, 577, 578, 560, 561,
	579, 580, 1236, 581, 582, 583, 584, 585, 586, 587,
	1192, 0, 588, 0, 589, 590, 591, 592, 594, 562,
	595, 600, 601, 1239, 596, 597, 598, 599, 1215, 603,
	604, 0, 605, 606, 1110, 602, 593, 0, 607, 608,
	609, 610, 611, 612, 613, 614, 0, 615, 1204, 1205,
	1206, 1207, 0, 624, 0, 616, 617, 618, 1216, 619,
	1217, 1134, 620, 621, 622, 623, 0, 625, 626, 0,
	1117, 627, 628, 629, 631, 632, 630, 633, 1178, 634,
	0, 0, 635, 636, 637, 696, 1201, 1238, 0, 639,
	638, 640, 641, 699, 642, 643, 0, 0, 0, 0,
	644, 645, 700, 646, 647, 648, 1114, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1109,
	0, 0, 0, 0, 0, 0, 1107, 1108, 0, 0,
	0, 0, 0, 0, 0, 0, 1140, 2692, 0, 2691,
	1138, 1156, 1128, 1129, 1130, 1126, 1127, 1139, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 281, 283,
	282, 284, 285, 286, 287, 0, 288, 289, 0, 0,
	0, 0, 0, 1180, 1144, 0, 0, 0, 290, 291,
	1220, 292, 293, 294, 295, 296, 297, 650, 1193, 0,
	298, 1200, 299, 1199, 0, 1210, 300, 301, 302, 303,
	304, 305, 1146, 1179, 1111, 306, 1240, 1241, 657, 0,
	307, 308, 1186, 0, 1167, 0, 309, 310, 311, 312,
	313, 314, 315, 0, 0, 317, 318, 319, 316, 320,
	0, 321, 0, 322, 323, 324, 325, 326, 327, 0,
	328, 329, 330, 1221, 331, 332, 333, 1170, 1168, 1169,
	1176, 1172, 1171, 1175, 334, 335, 336, 337, 338, 1203,
	339, 341, 1197, 1196, 1116, 344, 340, 342, 0, 345,
	343, 346, 0, 347, 348, 349, 0, 0, 350, 1188,
	352, 0, 353, 354, 355, 0, 356, 357, 358, 0,
	359, 360, 1122, 361, 362, 363, 365, 367, 364, 366,
	368, 369, 370, 371, 1211, 1212, 372, 1135, 278, 0,
	0, 0, 0, 0, 373, 374, 375, 1195, 0, 0,
	0, 376, 0, 377, 378, 379, 0, 0, 1222, 380,
	381, 382, 1208, 1209, 383, 384, 385, 386, 387, 388,
	389, 390, 391, 0, 392, 1218, 0, 1145, 393, 0,
	394, 395, 396, 397, 398, 1181, 1182, 1185, 484, 1224,
	399, 400, 0, 401, 402, 403, 404, 405, 0, 0,
	0, 279, 406, 407, 408, 0, 1223, 409, 1190, 1191,
	0, 1151, 0, 410, 411, 1225, 1183, 1226, 412, 413,
	414, 1227, 415, 0, 0, 0, 416, 417, 418, 419,
	420, 421, 0, 422, 424, 423, 0, 425, 1219, 1228,
	426, 427, 1229, 0, 428, 429, 430, 431, 432, 433,
	436, 1174, 1173, 434, 435, 437, 438, 0, 439, 440,
	442, 445, 441, 443, 444, 446, 459, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 458, 461,
	0, 460, 1230, 462, 463, 464, 465, 472, 474, 475,
	470, 471, 473, 476, 477, 479, 467, 468, 469, 1231,
	478, 466, 1113, 280, 1232, 480, 481, 482, 1136, 1184,
	483, 1198, 485, 486, 0, 0, 487, 0, 0, 0,
	489, 490, 491, 0, 0, 492, 493, 679, 1233, 494,
	1234, 1213, 495, 496, 1123, 497, 498, 499, 500, 501,
	502, 503, 504, 505, 0, 506, 507, 681, 508, 509,
	510, 682, 511, 512, 513, 1214, 514, 684, 515, 516,
	0, 517, 518, 0, 519, 520, 521, 522, 523, 524,
	525, 1194, 526, 527, 529, 528, 530, 0, 531, 0,
	532, 533, 534, 0, 0, 0, 0, 0, 535, 537,
	0, 538, 539, 540, 541, 536, 542, 543, 544, 545,
	546, 0, 547, 548, 549, 1235, 550, 551, 552, 553,
	554, 1124, 555, 0, 556, 557, 563, 564, 565, 558,
	559, 566, 567, 568, 569, 570, 0, 572, 573, 571,
	574, 575, 576, 1177, 577, 578, 560, 561, 579, 580,
	1236, 581, 582, 583, 584, 585, 586, 587, 1192, 0,
	588, 0, 589, 590, 591, 592, 594, 562, 595, 600,
	601, 1239, 596, 597, 598, 599, 1215, 603, 604, 0,
	605, 606, 1110, 602, 593, 0, 607, 608, 609, 610,
	611, 612, 613, 614, 0, 615, 1204, 1205, 1206, 1207,
	0, 624, 0, 616, 617, 618, 1216, 619, 1217, 1134,
	620, 621, 622, 623, 0, 625, 626, 0, 1117, 627,
	628, 629, 631, 632, 630, 633, 1178, 634, 0, 0,
	635, 636, 637, 696, 1201, 1238, 0, 639, 638, 640,
	641, 699, 642, 643, 0, 0, 0, 0, 644, 645,
	700, 646, 647, 648, 1114, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1109, 0, 0,
	0, 0, 0, 0, 1107, 1108, 0, 0, 0, 0,
	0, 0, 0, 0, 1140, 2689, 0, 2688, 1138, 1156,
	1128, 1129, 1130, 1126, 1127, 1139, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 281, 283, 282, 284,
	285, 286, 287, 0, 288, 289, 0, 0, 0, 0,
	0, 1180, 1144, 0, 0, 0, 290, 291, 1220, 292,
	293, 294, 295, 296, 297, 650, 1193, 0, 298, 1200,
	299, 1199, 0, 1210, 300, 301, 302, 303, 304, 305,
	1146, 1179, 1111, 306, 1240, 1241, 657, 0, 307, 308,
	1186, 0, 1167, 0, 309, 310, 311, 312, 313, 314,
	315, 0, 0, 317, 318, 319, 316, 320, 0, 321,
	0, 322, 323, 324, 325, 326, 327, 0, 328, 329,
	330, 1221, 331, 332, 333, 1170, 1168, 1169, 1176, 1172,
	1171, 1175, 334, 335, 336, 337, 338, 1203, 339, 341,
	1197, 1196, 1116, 344, 340, 342, 0, 345, 343, 346,
	0, 347, 348, 349, 0, 0, 350, 1188, 352, 0,
	353, 354, 355, 0, 356, 357, 358, 0, 359, 360,
	1122, 361, 362, 363, 365, 367, 364, 366, 368, 369,
	370, 371, 1211, 1212, 372, 1135, 278, 0, 0, 0,
	0, 0, 373, 374, 375, 1195, 0, 0, 0, 376,
	0, 377, 378, 379, 0, 0, 1222, 380, 381, 382,
	1208, 1209, 383, 384, 385, 386, 387, 388, 389, 390,
	391, 0, 392, 1218, 0, 1145, 393, 0, 394, 395,
	396, 397, 398, 1181, 1182, 1185, 484, 1224, 399, 400,
	0, 401, 402, 403, 404, 405, 0, 0, 0, 279,
	406, 407, 408, 0, 1223, 409, 1190, 1191, 0, 1151,
	0, 410, 411, 1225, 1183, 1226, 412, 413, 414, 1227,
	415, 0, 0, 0, 416, 417, 418, 419, 420, 421,
	0, 422, 424, 423, 0, 425, 1219, 1228, 426, 427,
	1229, 0, 428, 429, 430, 431, 432, 433, 436, 1174,
	1173, 434, 435, 437, 438, 0, 439, 440, 442, 445,
	441, 443, 444, 446, 459, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 458, 461, 0, 460,
	1230, 462, 463, 464, 465, 472, 474, 475, 470, 471,
	473, 476, 477, 479, 467, 468, 469, 1231, 478, 466,
	1113, 280, 1232, 480, 481, 482, 1136, 1184, 483, 1198,
	485, 486, 0, 0, 487, 0, 0, 0, 489, 490,
	491, 0, 0, 492, 493, 679, 1233, 494, 1234, 1213,
	495, 496, 1123, 497, 498, 499, 500, 501, 502, 503,
	504, 505, 0, 506, 507, 681, 508, 509, 510, 682,
	511, 512, 513, 1214, 514, 684, 515, 516, 0, 517,
	518, 0, 519, 520, 521, 522, 523, 524, 525, 1194,
	526, 527, 529, 528, 530, 0, 531, 0, 532, 533,
	534, 0, 0, 0, 0, 0, 535, 537, 0, 538,
	539, 540, 541, 536, 542, 543, 544, 545, 546, 0,
	547, 548, 549, 1235, 550, 551, 552, 553, 554, 1124,
	555, 0, 556, 557, 563, 564, 565, 558, 559, 566,
	567, 568, 569, 570, 0, 572, 573, 571, 574, 575,
	576, 1177, 577, 578, 560, 561, 579, 580, 1236, 581,
	582, 583, 584, 585, 586, 587, 1192, 0, 588, 0,
	589, 590, 591, 592, 594, 562, 595, 600, 601, 1239,
	596, 597, 598, 599, 1215, 603, 604, 0, 605, 606,
	1110, 602, 593, 0, 607, 608, 609, 610, 611, 612,
	613, 614, 0, 615, 1204, 1205, 1206, 1207, 0, 624,
	0, 616, 617, 618, 1216, 619, 1217, 1134, 620, 621,
	622, 623, 0, 625, 626, 0, 1117, 627, 628, 629,
	631, 632, 630, 633, 1178, 634, 0, 0, 635, 636,
	637, 696, 1201, 1238, 0, 639, 638, 640, 641, 699,
	642, 643, 0, 0, 0, 0, 644, 645, 700, 646,
	647, 648, 1114, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1109, 0, 0, 0, 0,
	0, 0, 1107, 1108, 0, 0, 0, 0, 0, 0,
	0, 0, 1140, 2686, 0, 2685, 1138, 1156, 1128, 1129,
	1130, 1126, 1127, 1139, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 281, 283, 282, 284, 285, 286,
	287, 0, 288, 289, 0, 0, 0, 0, 0, 1180,
	1144, 0, 0, 0, 290, 291, 1220, 292, 293, 294,
	295, 296, 297, 650, 1193, 0, 298, 1200, 299, 1199,
	0, 1210, 300, 301, 302, 303, 304, 305, 1146, 1179,
	1111, 306, 1240, 1241, 657, 0, 307, 308, 1186, 0,
	1167, 0, 309, 310, 311, 312, 313, 314, 315, 0,
	0, 317, 318, 319, 316, 320, 0, 321, 0, 322,
	323, 324, 325, 326, 327, 0, 328, 329, 330, 1221,
	331, 332, 333, 1170, 1168, 1169, 1176, 1172, 1171, 1175,
	334, 335, 336, 337, 338, 1203, 339, 341, 1197, 1196,
	1116, 344, 340, 342, 0, 345, 343, 346, 0, 347,
	348, 349, 0, 0, 350, 1188, 352, 0, 353, 354,
	355, 0, 356, 357, 358, 0, 359, 360, 1122, 361,
	362, 363, 365, 367, 364, 366, 368, 369, 370, 371,
	1211, 1212, 372, 1135, 278, 0, 0, 0, 0, 0,
	373, 374, 375, 1195, 0, 0, 0, 376, 0, 377,
	378, 379, 0, 0, 1222, 380, 381, 382, 1208, 1209,
	383, 384, 385, 386, 387, 388, 389, 390, 391, 0,
	392, 1218, 0, 1145, 393, 0, 394, 395, 396, 397,
	398, 1181, 1182, 1185, 484, 1224, 399, 400, 0, 401,
	402, 403, 404, 405, 0, 0, 0, 279, 406, 407,
	408, 0, 1223, 409, 1190, 1191, 0, 1151, 0, 410,
	411, 1225, 1183, 1226, 412, 413, 414, 1227, 415, 0,
	0, 0, 416, 417, 418, 419, 420, 421, 0, 422,
	424, 423, 0, 425, 1219, 1228, 426, 427, 1229, 0,
	428, 429, 430, 431, 432, 433, 436, 1174, 1173, 434,
	435, 437, 438, 0, 439, 440, 442, 445, 441, 443,
	444, 446, 459, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 458, 461, 0, 460, 1230, 462,
	463, 464, 465, 472, 474, 475, 470, 471, 473, 476,
	477, 479, 467, 468, 469, 1231, 478, 466, 1113, 280,
	1232, 480, 481, 482, 1136, 1184, 483, 1198, 485, 486,
	0, 0, 487, 0, 0, 0, 489, 490, 491, 0,
	0, 492, 493, 679, 1233, 494, 1234, 1213, 495, 496,
	1123, 497, 498, 499, 500, 501, 502, 503, 504, 505,
	0, 506, 507, 681, 508, 509, 510, 682, 511, 512,
	513, 1214, 514, 684, 515, 516, 0, 517, 518, 0,
	519, 520, 521, 522, 523, 524, 525, 1194, 526, 527,
	529, 528, 530, 0, 531, 0, 532, 533, 534, 0,
	0, 0, 0, 0, 535, 537, 0, 538, 539, 540,
	541, 536, 542, 543, 544, 545, 546, 0, 547, 548,
	549, 1235, 550, 551, 552, 553, 554, 1124, 555, 0,
	556, 557, 563, 564, 565, 558, 559, 566, 567, 568,
	569, 570, 0, 572, 573, 571, 574, 575, 576, 1177,
	577, 578, 560, 561, 579, 580, 1236, 581, 582, 583,
	584, 585, 586, 587, 1192, 0, 588, 0, 589, 590,
	591, 592, 594, 562, 595, 600, 601, 1239, 596, 597,
	598, 599, 1215, 603, 604, 0, 605, 606, 1110, 602,
	593, 0, 607, 608, 609, 610, 611, 612, 613, 614,
	0, 615, 1204, 1205, 1206, 1207, 0, 624, 0, 616,
	617, 618, 1216, 619, 1217, 1134, 620, 621, 622, 623,
	0, 625, 626, 0, 1117, 627, 628, 629, 631, 632,
	630, 633, 1178, 634, 0, 0, 635, 636, 637, 696,
	1201, 1238, 0, 639, 638, 640, 641, 699, 642, 643,
	0, 0, 0, 0, 644, 645, 700, 646, 647, 648,
	1114, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1109, 0, 0, 0, 0, 0, 0,
	1107, 1108, 0, 0, 0, 0, 0, 0, 0, 0,
	1140, 2683, 0, 1756, 1138, 1156, 1128, 1129, 1130, 1126,
	1127, 1139, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 281, 283, 282, 284, 285, 286, 287, 0,
	288, 289, 0, 0, 0, 0, 0, 1180, 1144, 0,
	0, 0, 290, 291, 1220, 292, 293, 294, 295, 296,
	297, 650, 1193, 0, 298, 1200, 299, 1199, 0, 1210,
	300, 301, 302, 303, 304, 305, 1146, 1179, 1111, 306,
	1240, 1241, 657, 0, 307, 308, 1186, 0, 1167, 0,
	309, 310, 311, 312, 313, 314, 315, 0, 0, 317,
	318, 319, 316, 320, 0, 321, 0, 322, 323, 324,
	325, 326, 327, 0, 328, 329, 330, 1221, 331, 332,
	333, 1170, 1168, 1169, 1176, 1172, 1171, 1175, 334, 335,
	336, 337, 338, 1203, 339, 341, 1197, 1196, 1116, 344,
	340, 342, 0, 345, 343, 346, 0, 347, 348, 349,
	0, 0, 350, 1188, 352, 0, 353, 354, 355, 0,
	356, 357, 358, 0, 359, 360, 1122, 361, 362, 363,
	365, 367, 364, 366, 368, 369, 370, 371, 1211, 1212,
	372, 1135, 278, 0, 0, 0, 0, 0, 373, 374,
	375, 1195, 0, 0, 0, 376, 0, 377, 378, 379,
	0, 0, 1222, 380, 381, 382, 1208, 1209, 383, 384,
	385, 386, 387, 388, 389, 390, 391, 0, 392, 1218,
	0, 1145, 393, 0, 394, 395, 396, 397, 398, 1181,
	1182, 1185, 484, 1224, 399, 400, 0, 401, 402, 403,
	404, 405, 0, 0, 0, 279, 406, 407, 408, 0,
	1223, 409, 1190, 1191, 0, 1151, 0, 410, 411, 1225,
	1183, 1226, 412, 413, 414, 1227, 415, 0, 0, 0,
	416, 417, 418, 419, 420, 421, 0, 422, 424, 423,
	0, 425, 1219, 1228, 426, 427, 1229, 0, 428, 429,
	430, 431, 432, 433, 436, 1174, 1173, 434, 435, 437,
	438, 0, 439, 440, 442, 445, 441, 443, 444, 446,
	459, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 458, 461, 0, 460, 1230, 462, 463, 464,
	465, 472, 474, 475, 470, 471, 473, 476, 477, 479,
	467, 468, 469, 1231, 478, 466, 1113, 280, 1232, 480,
	481, 482, 1136, 1184, 483, 1198, 485, 486, 0, 0,
	487, 0, 0, 0, 489, 490, 491, 0, 0, 492,
	493, 679, 1233, 494, 1234, 1213, 495, 496, 1123, 497,
	498, 499, 500, 501, 502, 503, 504, 505, 0, 506,
	507, 681, 508, 509, 510, 682, 511, 512, 513, 1214,
	514, 684, 515, 516, 0, 517, 518, 0, 519, 520,
	521, 522, 523, 524, 525, 1194, 526, 527, 529, 528,
	530, 0, 531, 0, 532, 533, 534, 0, 0, 0,
	0, 0, 535, 537, 0, 538, 539, 540, 541, 536,
	542, 543, 544, 545, 546, 0, 547, 548, 549, 1235,
	550, 551, 552, 553, 554, 1124, 555, 0, 556, 557,
	563, 564, 565, 558, 559, 566, 567, 568, 569, 570,
	0, 572, 573, 571, 574, 575, 576, 1177, 577, 578,
	560, 561, 579, 580, 1236, 581, 582, 583, 584, 585,
	586, 587, 1192, 0, 588, 0, 589, 590, 591, 592,
	594, 562, 595, 600, 601, 1239, 596, 597, 598, 599,
	1215, 603, 604, 0, 605, 606, 1110, 602, 593, 0,
	607, 608, 609, 610, 611, 612, 613, 614, 0, 615,
	1204, 1205, 1206, 1207, 0, 624, 0, 616, 617, 618,
	1216, 619, 1217, 1134, 620, 621, 622, 623, 0, 625,
	626, 0, 1117, 627, 628, 629, 631, 632, 630, 633,
	1178, 634, 0, 0, 635, 636, 637, 696, 1201, 1238,
	0, 639, 638, 640, 641, 699, 642, 643, 1755, 0,
	0, 0, 644, 645, 700, 646, 647, 648, 1114, 0,
	0, 0, 1103, 0, 1156, 1128, 1129, 1130, 1126, 1127,
	1139, 1109, 0, 0, 0, 0, 0, 0, 1107, 1108,
	0, 281, 283, 282, 284, 285, 286, 287, 1140, 288,
	289, 0, 1138, 0, 0, 0, 1180, 1144, 0, 0,
	0, 290, 291, 1220, 292, 293, 294, 295, 296, 297,
	650, 1193, 0, 298, 1200, 299, 1199, 0, 1210, 300,
	301, 302, 303, 304, 305, 1146, 1179, 1111, 306, 1240,
	1241, 657, 0, 307, 308, 1186, 0, 1167, 0, 309,
	310, 311, 312, 313, 314, 315, 0, 0, 317, 318,
	319, 316, 320, 0, 321, 0, 322, 323, 324, 325,
	326, 327, 0, 328, 329, 330, 1221, 331, 332, 333,
	1170, 1168, 1169, 1176, 1172, 1171, 1175, 334, 335, 336,
	337, 338, 1203, 339, 341, 1197, 1196, 1116, 344, 340,
	342, 0, 345, 343, 346, 0, 347, 348, 349, 0,
	0, 350, 1188, 352, 0, 353, 354, 355, 0, 356,
	357, 358, 0, 359, 360, 1122, 361, 362, 363, 365,
	367, 364, 366, 368, 369, 370, 371, 1211, 1212, 372,
	1135, 278, 0, 0, 0, 0, 0, 373, 374, 375,
	1195, 0, 0, 0, 376, 0, 377, 378, 379, 0,
	0, 1222, 380, 381, 382, 1208, 1209, 383, 384, 385,
	386, 387, 388, 389, 390, 391, 0, 392, 1218, 0,
	1145, 393, 0, 394, 395, 396, 397, 398, 1181, 1182,
	1185, 484, 1224, 399, 400, 0, 401, 402, 403, 404,
	405, 0, 0, 0, 279, 406, 407, 408, 0, 1223,
	409, 1190, 1191, 0, 1151, 0, 410, 411, 1225, 1183,
	1226, 412, 413, 414, 1227, 415, 0, 0, 0, 416,
	417, 418, 419, 420, 421, 0, 422, 424, 423, 0,
	425, 1219, 1228, 426, 427, 1229, 0, 428, 429, 430,
	431, 432, 433, 436, 1174, 1173, 434, 435, 437, 438,
	0, 439, 440, 442, 445, 441, 443, 444, 446, 459,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 458, 461, 0, 460, 1230, 462, 463, 464, 465,
	472, 474, 475, 470, 471, 473, 476, 477, 479, 467,
	468, 469, 1231, 478, 466, 1113, 280, 1232, 480, 481,
	482, 1136, 1184, 483, 1198, 485, 486, 0, 0, 487,
	0, 1118, 0, 489, 490, 491, 0, 0, 492, 493,
	679, 1233, 494, 1234, 1213, 495, 496, 1123, 497, 498,
	499, 500, 501, 502, 503, 504, 505, 0, 506, 507,
	681, 508, 509, 510, 682, 511, 512, 513, 1214, 514,
	684, 515, 516, 0, 517, 518, 0, 519, 520, 521,
	522, 523, 524, 525, 1194, 526, 527, 529, 528, 530,
	0, 531, 0, 532, 533, 534, 0, 0, 0, 0,
	0, 535, 537, 0, 538, 539, 540, 541, 536, 542,
	543, 544, 545, 546, 0, 547, 548, 549, 1235, 550,
	551, 552, 553, 554, 1124, 555, 0, 556, 557, 563,
	564, 565, 558, 559, 566, 567, 568, 569, 570, 0,
	572, 573, 571, 574, 575, 576, 1177, 577, 578, 560,
	561, 579, 580, 1236, 581, 582, 583, 584, 585, 586,
	587, 1192, 0, 588, 0, 589, 590, 591, 592, 594,
	562, 595, 600, 601, 1239, 596, 597, 598, 599, 1215,
	603, 604, 0, 605, 606, 1110, 602, 593, 0, 607,
	608, 609, 610, 611, 612, 613, 614, 0, 615, 1204,
	1205, 1206, 1207, 0, 624, 0, 616, 617, 618, 1216,
	619, 1217, 1134, 620, 621, 622, 623, 0, 625, 626,
	0, 1117, 627, 628, 629, 631, 632, 630, 633, 1178,
	634, 0, 0, 635, 636, 637, 696, 1201, 1238, 0,
	639, 638, 640, 641, 699, 642, 643, 0, 0, 0,
	0, 644, 645, 700, 646, 647, 648, 1114, 0, 0,
	0, 0, 0, 1156, 1128, 1129, 1130, 1126, 1127, 1139,
	1109, 0, 0, 0, 0, 0, 0, 1107, 1108, 0,
	281, 283, 282, 284, 285, 286, 287, 1140, 288, 289,
	0, 1138, 0, 0, 0, 1180, 1144, 0, 0, 0,
	290, 291, 1220, 292, 293, 294, 295, 296, 297, 650,
	1193, 0, 298, 1200, 299, 1199, 0, 1210, 300, 301,
	302, 303, 304, 305, 1146, 1179, 1111, 306, 1240, 1241,
	657, 0, 307, 308, 1186, 0, 1167, 0, 309, 310,
	311, 312, 313, 314, 315, 0, 0, 317, 318, 319,
	316, 320, 0, 321, 0, 322, 323, 324, 325, 4827,
	327, 0, 328, 329, 330, 1221, 331, 332, 333, 1170,
	1168, 1169, 1176, 1172, 1171, 1175, 334, 335, 336, 337,
	338, 1203, 339, 341, 1197, 1196, 1116, 344, 340, 342,
	0, 345, 343, 346, 0, 347, 348, 349, 0, 0,
	350, 1188, 352, 0, 353, 354, 355, 0, 356, 357,
	358, 0, 359, 360, 1122, 361, 362, 363, 365, 367,
	364, 366, 368, 369, 370, 371, 1211, 1212, 372, 1135,
	278, 0, 0, 0, 0, 0, 373, 374, 375, 1195,
	0, 0, 0, 376, 0, 377, 378, 379, 0, 0,
	1222, 380, 381, 382, 1208, 1209, 383, 384, 385, 386,
	387, 388, 389, 390, 391, 0, 392, 1218, 0, 1145,
	393, 0, 394, 395, 396, 397, 398, 1181, 1182, 1185,
	484, 1224, 399, 400, 0, 401, 402, 403, 404, 405,
	0, 0, 0, 279, 406, 407, 408, 0, 1223, 409,
	1190, 1191, 0, 1151, 0, 410, 411, 1225, 1183, 1226,
	412, 413, 414, 1227, 415, 0, 0, 0, 416, 417,
	418, 419, 420, 421, 0, 422, 424, 423, 0, 425,
	1219, 1228, 426, 427, 1229, 0, 428, 429, 430, 431,
	432, 433, 436, 1174, 1173, 434, 435, 437, 438, 0,
	439, 440, 442, 445, 441, 443, 444, 446, 459, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	458, 461, 0, 460, 1230, 462, 463, 464, 465, 472,
	474, 475, 470, 471, 473, 476, 477, 479, 467, 468,
	469, 1231, 478, 466, 1113, 280, 1232, 480, 481, 482,
	1136, 1184, 483, 1198, 485, 486, 0, 0, 487, 0,
	1118, 0, 489, 490, 491, 0, 0, 492, 493, 679,
	1233, 494, 1234, 1213, 495, 496, 1123, 497, 498, 499,
	500, 501, 502, 503, 504, 505, 0, 506, 507, 681,
	508, 509, 510, 682, 511, 512, 513, 1214, 514, 684,
	515, 516, 0, 517, 518, 0, 519, 520, 521, 522,
	523, 524, 525, 1194, 526, 527, 529, 528, 530, 0,
	531, 0, 532, 533, 534, 0, 0, 0, 0, 0,
	535, 537, 0, 538, 539, 540, 541, 536, 542, 543,
	544, 545, 546, 0, 547, 548, 549, 1235, 550, 551,
	552, 553, 554, 1124, 555, 0, 556, 557, 563, 564,
	565, 558, 559, 566, 567, 568, 569, 570, 0, 572,
	573, 571, 574, 575, 576, 1177, 577, 578, 560, 561,
	579, 580, 1236, 581, 582, 583, 584, 585, 586, 587,
	1192, 0, 588, 0, 589, 590, 591, 592, 594, 562,
	595, 600, 601, 1239, 596, 597, 598, 599, 1215, 603,
	604, 0, 605, 606, 1110, 602, 593, 0, 607, 608,
	609, 610, 611, 612, 613, 614, 0, 615, 1204, 1205,
	1206, 1207, 0, 624, 0, 616, 617, 618, 1216, 619,
	1217, 1134, 620, 621, 622, 623, 0, 625, 626, 0,
	1117, 627, 628, 629, 631, 632, 630, 633, 1178, 634,
	0, 0, 635, 636, 637, 696, 1201, 1238, 0, 639,
	638, 640, 641, 699, 642, 643, 0, 0, 0, 0,
	644, 645, 700, 646, 647, 648, 1114, 0, 0, 0,
	0, 0, 1156, 1128, 1129, 1130, 1126, 1127, 1139, 1109,
	0, 0, 0, 0, 0, 0, 1107, 1108, 0, 281,
	283, 282, 284, 285, 286, 287, 1140, 288, 289, 0,
	1138, 0, 0, 0, 1180, 1144, 0, 0, 0, 290,
	291, 1220, 292, 293, 294, 295, 296, 297, 650, 1193,
	0, 298, 1200, 299, 1199, 0, 1210, 300, 301, 302,
	303, 304, 305, 1146, 1179, 1111, 306, 1240, 1241, 657,
	0, 307, 308, 1186, 0, 1167, 0, 309, 310, 311,
	312, 313, 314, 315, 0, 0, 317, 318, 319, 316,
	320, 0, 321, 0, 322, 323, 324, 325, 326, 327,
	0, 328, 329, 330, 1221, 331, 332, 333, 1170, 1168,
	1169, 1176, 1172, 1171, 1175, 334, 335, 336, 337, 338,
	1203, 339, 341, 1197, 1196, 1116, 344, 340, 342, 0,
	345, 343, 346, 0, 347, 348, 349, 0, 0, 350,
	1188, 352, 0, 353, 354, 355, 0, 356, 357, 358,
	0, 359, 360, 1122, 361, 362, 363, 365, 367, 364,
	366, 368, 369, 370, 371, 1211, 1212, 372, 1135, 278,
	0, 0, 0, 0, 0, 373, 374, 375, 1195, 0,
	0, 0, 376, 0, 377, 378, 379, 0, 0, 1222,
	380, 381, 382, 1208, 1209, 383, 384, 385, 386, 387,
	388, 389, 390, 391, 0, 392, 1218, 0, 1145, 393,
	0, 394, 395, 396, 397, 398, 1181, 1182, 1185, 484,
	1224, 399, 400, 0, 401, 402, 403, 404, 405, 0,
	0, 0, 2526, 406, 407, 408, 0, 1223, 409, 1190,
	1191, 0, 1151, 0, 410, 411, 1225, 1183, 1226, 412,
	413, 414, 1227, 415, 0, 0, 0, 416, 417, 418,
	419, 420, 421, 0, 422, 424, 423, 0, 425, 1219,
	1228, 426, 427, 1229, 0, 428, 429, 430, 431, 432,
	433, 436, 1174, 1173, 434, 435, 437, 438, 0, 439,
	440, 442, 445, 441, 443, 444, 446, 459, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 458,
	461, 0, 460, 1230, 462, 463, 464, 465, 472, 474,
	475, 470, 471, 473, 476, 477, 479, 467, 468, 469,
	1231, 478, 466, 1113, 280, 1232, 480, 481, 482, 1136,
	1184, 483, 1198, 485, 486, 0, 0, 487, 0, 0,
	0, 489, 490, 491, 0, 0, 492, 493, 679, 1233,
	494, 1234, 1213, 495, 496, 1123, 497, 498, 499, 500,
	501, 502, 503, 504, 505, 0, 506, 507, 681, 508,
	509, 510, 682, 511, 512, 513, 1214, 514, 684, 515,
	516, 2525, 517, 518, 0, 519, 520, 521, 522, 523,
	524, 525, 1194, 526, 527, 529, 528, 530, 0, 531,
	0, 532, 533, 534, 0, 0, 0, 0, 0, 535,
	537, 0, 538, 539, 540, 541, 536, 542, 543, 544,
	545, 546, 0, 547, 548, 549, 1235, 550, 551, 552,
	553, 554, 1124, 555, 0, 556, 557, 563, 564, 565,
	558, 559, 566, 567, 568, 569, 570, 0, 572, 573,
	571, 574, 575, 576, 1177, 577, 578, 560, 561, 579,
	580, 1236, 581, 582, 583, 584, 585, 586, 587, 1192,
	0, 588, 0, 589, 590, 591, 592, 594, 562, 595,
	600, 601, 1239, 596, 597, 598, 599, 1215, 603, 604,
	0, 605, 606, 1110, 602, 593, 0, 607, 608, 609,
	610, 611, 612, 613, 614, 0, 615, 1204, 1205, 1206,
	1207, 0, 624, 0, 616, 617, 618, 1216, 619, 1217,
	1134, 620, 621, 622, 623, 0, 625, 626, 0, 1117,
	627, 628, 629, 631, 632, 630, 633, 1178, 634, 0,
	0, 635, 636, 637, 696, 1201, 1238, 0, 639, 638,
	640, 641, 699, 642, 643, 0, 0, 0, 0, 644,
	645, 700, 646, 647, 648, 1114, 0, 0, 0, 0,
	0, 1156, 1128, 1129, 1130, 1126, 1127, 1139, 1109, 0,
	0, 0, 0, 0, 0, 1107, 1108, 0, 281, 283,
	282, 284, 285, 286, 287, 1140, 288, 289, 0, 1138,
	0, 0, 0, 1180, 1144, 0, 0, 0, 290, 291,
	1220, 292, 293, 294, 295, 296, 297, 650, 1193, 0,
	298, 1200, 299, 1199, 0, 1210, 300, 301, 302, 303,
	304, 305, 1146, 1179, 1111, 306, 1240, 1241, 657, 0,
	307, 308, 1186, 0, 1167, 0, 309, 310, 311, 312,
	313, 314, 315, 0, 0, 317, 318, 319, 316, 320,
	0, 321, 0, 322, 323, 324, 325, 4553, 327, 0,
	328, 329, 330, 1221, 331, 332, 333, 1170, 1168, 1169,
	1176, 1172, 1171, 1175, 334, 335, 336, 337, 338, 1203,
	339, 341, 1197, 1196, 1116, 344, 340, 342, 0, 345,
	343, 346, 0, 347, 348, 349, 0, 0, 350, 1188,
	352, 0, 353, 354, 355, 0, 356, 357, 358, 0,
	359, 360, 1122, 361, 362, 363, 365, 367, 364, 366,
	368, 369, 370, 371, 1211, 1212, 372, 1135, 278, 0,
	0, 0, 0, 0, 373, 374, 375, 1195, 0, 0,
	0, 376, 0, 377, 378, 379, 0, 0, 1222, 380,
	381, 382, 1208, 1209, 383, 384, 385, 386, 387, 388,
	389, 390, 391, 0, 392, 1218, 0, 1145, 393, 0,
	394, 395, 396, 397, 398, 1181, 1182, 1185, 484, 1224,
	399, 400, 0, 401, 402, 403, 404, 405, 0, 0,
	0, 279, 406, 407, 408, 0, 1223, 409, 1190, 1191,
	0, 1151, 0, 410, 411, 1225, 1183, 1226, 412, 413,
	414, 1227, 415, 0, 0, 0, 416, 417, 418, 419,
	420, 421, 0, 422, 424, 423, 0, 425, 1219, 1228,
	426, 427, 1229, 0, 428, 429, 430, 431, 432, 433,
	436, 1174, 1173, 434, 435, 437, 438, 0, 439, 440,
	442, 445, 441, 443, 444, 446, 459, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 458, 461,
	0, 460, 1230, 462, 463, 464, 465, 472, 474, 475,
	470, 471, 473, 476, 477, 479, 467, 468, 469, 1231,
	478, 466, 1113, 280, 1232, 480, 481, 482, 1136, 1184,
	483, 1198, 485, 486, 0, 0, 487, 0, 1118, 0,
	489, 490, 491, 0, 0, 492, 493, 679, 1233, 494,
	1234, 1213, 495, 496, 1123, 497, 498, 499, 500, 501,
	502, 503, 504, 505, 0, 506, 507, 681, 508, 509,
	510, 682, 511, 512, 513, 1214, 514, 684, 515, 516,
	0, 517, 518, 0, 519, 520, 521, 522, 523, 524,
	525, 1194, 526, 527, 529, 528, 530, 0, 531, 0,
	532, 533, 534, 0, 0, 0, 0, 0, 535, 537,
	0, 538, 539, 540, 541, 536, 542, 543, 544, 545,
	546, 0, 547, 548, 549, 1235, 550, 551, 552, 553,
	554, 1124, 555, 0, 556, 557, 563, 564, 565, 558,
	559, 566, 567, 568, 569, 570, 0, 572, 573, 571,
	574, 575, 576, 1177, 577, 578, 560, 561, 579, 580,
	1236, 581, 582, 583, 584, 585, 586, 587, 1192, 0,
	588, 0, 589, 590, 591, 592, 594, 562, 595, 600,
	601, 1239, 596, 597, 598, 599, 1215, 603, 604, 0,
	605, 606, 1110, 602, 593, 0, 607, 608, 609, 610,
	611, 612, 613, 614, 0, 615, 1204, 1205, 1206, 1207,
	0, 624, 0, 616, 617, 618, 1216, 619, 1217, 1134,
	620, 621, 622, 623, 0, 625, 626, 0, 1117, 627,
	628, 629, 631, 632, 630, 633, 1178, 634, 0, 0,
	635, 636, 637, 696, 1201, 1238, 0, 639, 638, 640,
	641, 699, 642, 643, 0, 0, 0, 0, 644, 645,
	700, 646, 647, 648, 1114, 0, 0, 0, 0, 0,
	1156, 1128, 1129, 1130, 1126, 1127, 1139, 1109, 0, 0,
	0, 0, 0, 0, 1107, 1108, 0, 281, 283, 282,
	284, 285, 286, 287, 1140, 288, 289, 0, 1138, 0,
	0, 0, 1180, 1144, 0, 0, 0, 290, 291, 1220,
	292, 293, 294, 295, 296, 297, 650, 1193, 0, 298,
	1200, 299, 1199, 0, 1210, 300, 301, 302, 303, 304,
	305, 1146, 1179, 1111, 306, 1240, 1241, 657, 0, 307,
	308, 1186, 0, 1167, 0, 309, 310, 311, 312, 313,
	314, 315, 0, 0, 317, 318, 319, 316, 320, 0,
	321, 0, 322, 323, 324, 325, 326, 327, 0, 328,
	329, 330, 1221, 331, 332, 333, 1170, 1168, 1169, 1176,
	1172, 1171, 1175, 334, 335, 336, 337, 338, 1203, 339,
	341, 1197, 1196, 1116, 344, 340, 342, 0, 345, 343,
	346, 0, 347, 348, 349, 0, 0, 350, 1188, 352,
	0, 353, 354, 355, 0, 356, 357, 358, 0, 359,
	360, 1122, 361, 362, 363, 365, 367, 364, 366, 368,
	369, 370, 371, 1211, 1212, 372, 1135, 278, 0, 0,
	0, 0, 0, 373, 374, 375, 1195, 0, 0, 0,
	376, 0, 377, 378, 379, 0, 0, 1222, 380, 381,
	382, 1208, 1209, 383, 384, 385, 386, 387, 388, 389,
	390, 391, 0, 392, 1218, 0, 1145, 393, 0, 394,
	395, 396, 397, 398, 1181, 1182, 1185, 484, 1224, 399,
	400, 0, 401, 402, 403, 404, 405, 0, 0, 0,
	279, 406, 407, 408, 0, 1223, 409, 1190, 1191, 0,
	1151, 0, 410, 411, 1225, 1183, 1226, 412, 413, 414,
	1227, 415, 0, 0, 0, 416, 417, 418, 419, 420,
	421, 0, 422, 424, 423, 0, 425, 1219, 1228, 426,
	427, 1229, 0, 428, 429, 430, 431, 432, 433, 436,
	1174, 1173, 434, 435, 437, 438, 0, 439, 440, 442,
	445, 441, 443, 444, 446, 459, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 458, 461, 0,
	460, 1230, 462, 463, 464, 465, 472, 474, 475, 470,
	471, 473, 476, 477, 479, 467, 468, 469, 1231, 478,
	466, 1113, 280, 1232, 480, 481, 482, 1136, 1184, 483,
	1198, 485, 486, 0, 0, 487, 0, 1118, 0, 489,
	490, 491, 0, 0, 492, 493, 679, 1233, 494, 1234,
	1213, 495, 496, 1123, 497, 498, 499, 500, 501, 502,
	503, 504, 505, 0, 506, 507, 681, 508, 509, 510,
	682, 511, 512, 513, 1214, 514, 684, 515, 516, 0,
	517, 518, 0, 519, 520, 521, 522, 523, 524, 525,
	1194, 526, 527, 529, 528, 530, 0, 531, 0, 532,
	533, 534, 0, 0, 0, 0, 0, 535, 537, 0,
	538, 539, 540, 541, 536, 542, 543, 544, 545, 546,
	0, 547, 548, 549, 1235, 550, 551, 552, 553, 554,
	1124, 555, 0, 556, 557, 563, 564, 565, 558, 559,
	566, 567, 568, 569, 570, 0, 572, 573, 571, 574,
	575, 576, 1177, 577, 578, 560, 561, 579, 580, 1236,
	581, 582, 583, 584, 585, 586, 587, 1192, 0, 588,
	0, 589, 590, 591, 592, 594, 562, 595, 600, 601,
	1239, 596, 597, 598, 599, 1215, 603, 604, 0, 605,
	606, 1110, 602, 593, 0, 607, 608, 609, 610, 611,
	612, 613, 614, 0, 615, 1204, 1205, 1206, 1207, 0,
	624, 0, 616, 617, 618, 1216, 619, 1217, 1134, 620,
	621, 622, 623, 0, 625, 626, 0, 1117, 627, 628,
	629, 631, 632, 630, 633, 1178, 634, 0, 0, 635,
	636, 637, 696, 1201, 1238, 0, 639, 638, 640, 641,
	699, 642, 643, 0, 0, 0, 0, 644, 645, 700,
	646, 647, 648, 1114, 0, 0, 0, 0, 0, 1156,
	1128, 1129, 1130, 1126, 1127, 1139, 1109, 0, 0, 0,
	0, 0, 0, 1107, 1108, 0, 281, 283, 282, 284,
	285, 286, 287, 1140, 288, 289, 0, 1138, 0, 0,
	0, 1180, 1144, 0, 0, 0, 290, 291, 1220, 292,
	293, 294, 295, 296, 297, 650, 1193, 0, 298, 1200,
	299, 1199, 0, 1210, 300, 301, 302, 303, 304, 305,
	1146, 1179, 1111, 306, 1240, 1241, 657, 0, 307, 308,
	1186, 0, 1167, 0, 309, 310, 311, 312, 313, 314,
	315, 0, 0, 317, 318, 319, 316, 320, 0, 321,
	0, 322, 323, 324, 325, 326, 327, 0, 328, 329,
	330, 1221, 331, 332, 333, 1170, 1168, 1169, 1176, 1172,
	1171, 1175, 334, 335, 336, 337, 338, 1203, 339, 341,
	1197, 1196, 1116, 344, 340, 342, 0, 345, 343, 346,
	0, 347, 348, 349, 0, 0, 350, 1188, 352, 0,
	353, 354, 355, 0, 356, 357, 358, 0, 359, 360,
	1122, 361, 362, 363, 365, 367, 364, 366, 368, 369,
	370, 371, 1211, 1212, 372, 1135, 278, 0, 0, 0,
	0, 0, 373, 374, 375, 1195, 0, 0, 0, 376,
	0, 377, 378, 379, 0, 0, 1222, 380, 381, 382,
	1208, 1209, 383, 384, 385, 386, 387, 388, 389, 390,
	391, 0, 392, 1218, 0, 1145, 393, 0, 394, 395,
	396, 397, 398, 1181, 1182, 1185, 484, 1224, 399, 400,
	0, 401, 402, 403, 404, 405, 0, 0, 0, 279,
	406, 407, 408, 0, 1223, 409, 1190, 1191, 0, 1151,
	0, 410, 411, 1225, 1183, 1226, 412, 413, 414, 1227,
	415, 0, 0, 0, 416, 417, 418, 419, 420, 421,
	0, 422, 424, 423, 0, 425, 1219, 1228, 426, 427,
	1229, 0, 428, 429, 430, 431, 432, 433, 436, 1174,
	1173, 434, 435, 437, 438, 0, 439, 440, 442, 445,
	441, 443, 444, 446, 459, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 458, 461, 0, 460,
	1230, 462, 463, 464, 465, 472, 474, 475, 470, 471,
	473, 476, 477, 479, 467, 468, 469, 1231, 478, 466,
	1113, 4130, 1232, 480, 481, 482, 1136, 1184, 483, 1198,
	485, 486, 0, 0, 487, 0, 0, 0, 489, 490,
	491, 0, 0, 492, 493, 679, 1233, 494, 1234, 1213,
	495, 496, 1123, 497, 498, 499, 500, 501, 502, 503,
	504, 505, 0, 506, 507, 681, 508, 509, 510, 682,
	511, 512, 513, 1214, 514, 684, 515, 516, 0, 517,
	518, 0, 519, 520, 521, 522, 523, 524, 525, 1194,
	526, 527, 529, 528, 530, 0, 531, 0, 532, 533,
	534, 0, 0, 0, 0, 0, 535, 537, 0, 538,
	539, 540, 541, 536, 542, 543, 544, 545, 546, 0,
	547, 548, 549, 1235, 550, 551, 552, 553, 554, 1124,
	555, 0, 556, 557, 563, 564, 565, 558, 559, 566,
	567, 568, 569, 570, 0, 572, 573, 571, 574, 575,
	576, 1177, 577, 578, 560, 561, 579, 580, 1236, 581,
	582, 583, 584, 585, 586, 587, 1192, 0, 588, 0,
	589, 590, 591, 592, 594, 562, 595, 600, 601, 1239,
	596, 597, 598, 599, 1215, 603, 604, 0, 605, 606,
	1110, 602, 593, 0, 607, 608, 609, 610, 611, 612,
	613, 614, 0, 615, 1204, 1205, 1206, 1207, 0, 624,
	0, 616, 617, 618, 1216, 619, 1217, 1134, 620, 621,
	622, 623, 0, 625, 626, 0, 1117, 627, 628, 629,
	631, 632, 630, 633, 1178, 634, 0, 0, 635, 636,
	637, 696, 1201, 1238, 0, 639, 638, 640, 641, 699,
	642, 643, 0, 0, 0, 0, 644, 645, 700, 646,
	647, 648, 1114, 0, 0, 0, 0, 0, 1156, 1128,
	1129, 1130, 1126, 1127, 1139, 1109, 0, 0, 0, 0,
	0, 0, 1107, 1108, 1986, 281, 283, 282, 284, 285,
	286, 287, 1140, 288, 289, 0, 1138, 0, 0, 0,
	1180, 1144, 0, 0, 0, 290, 291, 1220, 292, 293,
	294, 295, 296, 297, 650, 1193, 0, 298, 1200, 299,
	1199, 0, 1210, 300, 301, 302, 303, 304, 305, 1146,
	1179, 1111, 306, 1240, 1241, 657, 0, 307, 308, 1186,
	0, 1167, 0, 309, 310, 311, 312, 313, 314, 315,
	0, 0, 317, 318, 319, 316, 320, 0, 321, 0,
	322, 323, 324, 325, 326, 327, 0, 328, 329, 330,
	1221, 331, 332, 333, 1170, 1168, 1169, 1176, 1172, 1171,
	1175, 334, 335, 336, 337, 338, 1203, 339, 341, 1197,
	1196, 1116, 344, 340, 342, 0, 345, 343, 346, 0,
	347, 348, 349, 0, 0, 350, 1188, 352, 0, 353,
	354, 355, 0, 356, 357, 358, 0, 359, 360, 1122,
	361, 362, 363, 365, 367, 364, 366, 368, 369, 370,
	371, 1211, 1212, 372, 1135, 278, 0, 0, 0, 0,
	0, 373, 374, 375, 1195, 0, 0, 0, 376, 0,
	377, 378, 379, 0, 0, 1222, 380, 381, 382, 1208,
	1209, 383, 384, 385, 386, 387, 388, 389, 390, 391,
	0, 392, 1218, 0, 1145, 393, 0, 394, 395, 396,
	397, 398, 1181, 1182, 1185, 484, 1224, 399, 400, 0,
	401, 402, 403, 404, 405, 0, 0, 0, 279, 406,
	407, 408, 0, 1223, 409, 1190, 1191, 0, 1151, 0,
	410, 411, 1225, 1183, 1226, 412, 413, 414, 1227, 415,
	0, 0, 0, 416, 417, 418, 419, 420, 421, 0,
	422, 424, 423, 0, 425, 1219, 1228, 426, 427, 1229,
	0, 428, 429, 430, 431, 432, 433, 436, 1174, 1173,
	434, 435, 437, 438, 0, 439, 440, 442, 445, 441,
	443, 444, 446, 459, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 458, 461, 0, 460, 1230,
	462, 463, 464, 465, 472, 474, 475, 470, 471, 473,
	476, 477, 479, 467, 468, 469, 1231, 478, 466, 1113,
	280, 1232, 480, 481, 482, 1136, 1184, 483, 1198, 485,
	486, 0, 0, 487, 0, 0, 0, 489, 490, 491,
	0, 0, 492, 493, 679, 1233, 494, 1234, 1213, 495,
	496, 1123, 497, 498, 499, 500, 501, 502, 503, 504,
	505, 0, 506, 507, 681, 508, 509, 510, 682, 511,
	512, 513, 1214, 514, 684, 515, 516, 0, 517, 518,
	0, 519, 520, 521, 522, 523, 524, 525, 1194, 526,
	527, 529, 528, 530, 0, 531, 0, 532, 533, 534,
	0, 0, 0, 0, 0, 535, 537, 0, 538, 539,
	540, 541, 536, 542, 543, 544, 545, 546, 0, 547,
	548, 549, 1235, 550, 551, 552, 553, 554, 1124, 555,
	0, 556, 557, 563, 564, 565, 558, 559, 566, 567,
	568, 569, 570, 0, 572, 573, 571, 574, 575, 576,
	1177, 577, 578, 560, 561, 579, 580, 1236, 581, 582,
	583, 584, 585, 586, 587, 1192, 0, 588, 0, 589,
	590, 591, 592, 594, 562, 595, 600, 601, 1239, 596,
	597, 598, 599, 1215, 603, 604, 0, 605, 606, 1110,
	602, 593, 0, 607, 608, 609, 610, 611, 612, 613,
	614, 0, 615, 1204, 1205, 1206, 1207, 0, 624, 0,
	616, 617, 618, 1216, 619, 1217, 1134, 620, 621, 622,
	623, 0, 625, 626, 0, 1117, 627, 628, 629, 631,
	632, 630, 633, 1178, 634, 0, 0, 635, 636, 637,
	696, 1201, 1238, 3817, 639, 638, 640, 641, 699, 642,
	643, 0, 0, 0, 0, 644, 645, 700, 646, 647,
	648, 1114, 0, 0, 0, 0, 0, 1156, 1128, 1129,
	1130, 1126, 1127, 1139, 1109, 0, 0, 0, 0, 0,
	0, 1107, 1108, 0, 281, 283, 282, 284, 285, 286,
	287, 1140, 288, 289, 0, 1138, 0, 0, 0, 1180,
	1144, 0, 0, 0, 290, 291, 1220, 292, 293, 294,
	295, 296, 297, 650, 1193, 0, 298, 1200, 299, 1199,
	0, 1210, 300, 301, 302, 303, 304, 305, 1146, 1179,
	1111, 306, 1240, 1241, 657, 0, 307, 308, 1186, 0,
	1167, 0, 309, 310, 311, 312, 313, 314, 315, 0,
	0, 317, 318, 319, 316, 320, 0, 321, 0, 322,
	323, 324, 325, 326, 327, 0, 328, 329, 330, 1221,
	331, 332, 333, 1170, 1168, 1169, 1176, 1172, 1171, 1175,
	334, 335, 336, 337, 338, 1203, 339, 341, 1197, 1196,
	1116, 344, 340, 342, 0, 345, 343, 346, 0, 347,
	348, 349, 0, 0, 350, 1188, 352, 0, 353, 354,
	355, 0, 356, 357, 358, 0, 359, 360, 1122, 361,
	362, 363, 365, 367, 364, 366, 368, 369, 370, 371,
	1211, 1212, 372, 1135, 278, 0, 0, 0, 0, 0,
	373, 374, 375, 1195, 0, 0, 0, 376, 0, 377,
	378, 379, 0, 0, 1222, 380, 381, 382, 1208, 1209,
	383, 384, 385, 386, 387, 388, 389, 390, 391, 0,
	392, 1218, 0, 1145, 393, 0, 394, 395, 396, 397,
	398, 1181, 1182, 1185, 484, 1224, 399, 400, 0, 401,
	402, 403, 404, 405, 0, 0, 0, 279, 406, 407,
	408, 0, 1223, 409, 1190, 1191, 0, 1151, 0, 410,
	411, 1225, 1183, 1226, 412, 413, 414, 1227, 415, 0,
	0, 0, 416, 417, 418, 419, 420, 421, 0, 422,
	424, 423, 0, 425, 1219, 1228, 426, 427, 1229, 0,
	428, 429, 430, 431, 432, 433, 436, 1174, 1173, 434,
	435, 437, 438, 0, 439, 440, 442, 445, 441, 443,
	444, 446, 459, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 458, 461, 0, 460, 1230, 462,
	463, 464, 465, 472, 474, 475, 470, 471, 473, 476,
	477, 479, 467, 468, 469, 1231, 478, 466, 1113, 280,
	1232, 480, 481, 482, 1136, 1184, 483, 1198, 485, 486,
	0, 0, 487, 0, 0, 0, 489, 490, 491, 0,
	0, 492, 493, 679, 1233, 494, 1234, 1213, 495, 496,
	1123, 497, 498, 499, 500, 501, 502, 503, 504, 505,
	0, 506, 507, 681, 508, 509, 510, 682, 511, 512,
	513, 1214, 514, 684, 515, 516, 0, 517, 518, 0,
	519, 520, 521, 522, 523, 524, 525, 1194, 526, 527,
	529, 528, 530, 0, 531, 0, 532, 533, 534, 0,
	0, 0, 0, 0, 535, 537, 0, 538, 539, 540,
	541, 536, 542, 543, 544, 545, 546, 0, 547, 548,
	549, 1235, 550, 551, 552, 553, 554, 1124, 555, 0,
	556, 557, 563, 564, 565, 558, 559, 566, 567, 568,
	569, 570, 0, 572, 573, 571, 574, 575, 576, 1177,
	577, 578, 560, 561, 579, 580, 1236, 581, 582, 583,
	584, 585, 586, 587, 1192, 0, 588, 0, 589, 590,
	591, 592, 594, 562, 595, 600, 601, 1239, 596, 597,
	598, 599, 1215, 603, 604, 0, 605, 606, 1110, 602,
	593, 0, 607, 608, 609, 610, 611, 612, 613, 614,
	0, 615, 1204, 1205, 1206, 1207, 0, 624, 0, 616,
	617, 618, 1216, 619, 1217, 1134, 620, 621, 622, 623,
	0, 625, 626, 0, 1117, 627, 628, 629, 631, 632,
	630, 633, 1178, 634, 0, 0, 635, 636, 637, 696,
	1201, 1238, 0, 639, 638, 640, 641, 699, 642, 643,
	0, 0, 0, 0, 644, 645, 700, 646, 647, 648,
	1114, 0, 0, 0, 0, 0, 1156, 1128, 1129, 1130,
	1126, 1127, 1139, 1109, 0, 0, 0, 0, 0, 0,
	1107, 1108, 1986, 281, 283, 282, 284, 285, 286, 287,
	1140, 288, 289, 0, 1138, 0, 0, 0, 1180, 1144,
	0, 0, 0, 290, 291, 1220, 292, 293, 294, 295,
	296, 297, 650, 1193, 0, 298, 1200, 299, 1199, 0,
	1210, 300, 301, 302, 303, 304, 305, 1146, 1179, 1111,
	306, 1240, 1241, 657, 0, 307, 308, 1186, 0, 1167,
	0, 309, 310, 311, 312, 313, 314, 315, 0, 0,
	317, 318, 319, 316, 320, 0, 321, 0, 322, 323,
	324, 325, 326, 327, 0, 328, 329, 330, 1221, 331,
	332, 333, 1170, 1168, 1169, 1176, 1172, 1171, 1175, 334,
	335, 336, 337, 338, 1203, 339, 341, 1197, 1196, 1116,
	344, 340, 342, 0, 345, 343, 346, 0, 347, 348,
	349, 0, 0, 350, 1188, 352, 0, 353, 354, 355,
	0, 356, 357, 358, 0, 359, 360, 1122, 361, 362,
	363, 365, 367, 364, 366, 368, 369, 370, 371, 1211,
	1212, 372, 1135, 278, 0, 0, 0, 0, 0, 373,
	374, 375, 1195, 0, 0, 0, 376, 0, 377, 378,
	379, 0, 2785, 1222, 380, 381, 382, 1208, 1209, 383,
	384, 385, 386, 387, 388, 389, 390, 391, 0, 392,
	1218, 0, 1145, 393, 0, 394, 395, 396, 397, 398,
	1181, 1182, 1185, 484, 1224, 399, 400, 0, 401, 402,
	403, 404, 405, 0, 0, 0, 279, 406, 407, 408,
	0, 1223, 409, 1190, 1191, 0, 1151, 0, 410, 411,
	1225, 1183, 1226, 412, 413, 414, 1227, 415, 0, 0,
	0, 416, 417, 418, 419, 420, 421, 0, 422, 424,
	423, 0, 425, 1219, 1228, 426, 427, 1229, 0, 428,
	429, 430, 431, 432, 433, 436, 1174, 1173, 434, 435,
	437, 438, 0, 439, 440, 442, 445, 441, 443, 444,
	446, 459, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 458, 461, 0, 460, 1230, 462, 463,
	464, 465, 472, 474, 475, 470, 471, 473, 476, 477,
	479, 467, 468, 469, 1231, 478, 466, 1113, 280, 1232,
	480, 481, 482, 1136, 1184, 483, 1198, 485, 486, 0,
	0, 487, 0, 0, 0, 489, 490, 491, 0, 0,
	492, 493, 679, 1233, 494, 1234, 1213, 495, 496, 1123,
	497, 498, 499, 500, 501, 502, 503, 504, 505, 0,
	506, 507, 681, 508, 509, 510, 682, 511, 512, 513,
	1214, 514, 684, 515, 516, 0, 517, 518, 0, 519,
	520, 521, 522, 523, 524, 525, 1194, 526, 527, 529,
	528, 530, 0, 531, 0, 532, 533, 534, 0, 0,
	0, 0, 0, 535, 537, 0, 538, 539, 540, 541,
	536, 542, 543, 544, 545, 546, 0, 547, 548, 549,
	1235, 550, 551, 552, 553, 554, 1124, 555, 0, 556,
	557, 563, 564, 565, 558, 559, 566, 567, 568, 569,
	570, 0, 572, 573, 571, 574, 575, 576, 1177, 577,
	578, 560, 561, 579, 580, 1236, 581, 582, 583, 584,
	585, 586, 587, 1192, 0, 588, 0, 589, 590, 591,
	592, 594, 562, 595, 600, 601, 1239, 596, 597, 598,
	599, 1215, 603, 604, 0, 605, 606, 1110, 602, 593,
	0, 607, 608, 609, 610, 611, 612, 613, 614, 0,
	615, 1204, 1205, 1206, 1207, 0, 624, 0, 616, 617,
	618, 1216, 619, 1217, 1134, 620, 621, 622, 623, 0,
	625, 626, 0, 1117, 627, 628, 629, 631, 632, 630,
	633, 1178, 634, 0, 0, 635, 636, 637, 696, 1201,
	1238, 0, 639, 638, 640, 641, 699, 642, 643, 0,
	0, 0, 0, 644, 645, 700, 646, 647, 648, 1114,
	0, 0, 0, 0, 0, 1156, 1128, 1129, 1130, 1126,
	1127, 1139, 1109, 0, 0, 0, 0, 0, 0, 1107,
	1108, 0, 281, 283, 282, 284, 285, 286, 287, 1140,
	288, 289, 0, 1138, 0, 0, 0, 1180, 1144, 0,
	0, 0, 290, 291, 1220, 292, 293, 294, 295, 296,
	297, 650, 1193, 0, 298, 1200, 299, 1199, 0, 1210,
	300, 301, 302, 303, 304, 305, 1146, 1179, 1111, 306,
	1240, 1241, 657, 0, 307, 308, 1186, 0, 1167, 0,
	309, 310, 311, 312, 313, 314, 315, 0, 0, 317,
	318, 319, 316, 320, 0, 321, 0, 322, 323, 324,
	325, 326, 327, 0, 328, 329, 330, 1221, 331, 332,
	333, 1170, 1168, 1169, 1176, 1172, 1171, 1175, 334, 335,
	336, 337, 338, 1203, 339, 341, 1197, 1196, 1116, 344,
	340, 342, 0, 345, 343, 346, 0, 347, 348, 349,
	0, 0, 350, 1188, 352, 0, 353, 354, 355, 0,
	356, 357, 358, 0, 359, 360, 1122, 361, 362, 363,
	365, 367, 364, 366, 368, 369, 370, 371, 1211, 1212,
	372, 1135, 278, 0, 0, 0, 0, 0, 373, 374,
	375, 1195, 0, 0, 0, 376, 0, 377, 378, 379,
	0, 0, 1222, 380, 381, 382, 1208, 1209, 383, 384,
	385, 386, 387, 388, 389, 390, 391, 0, 392, 1218,
	0, 1145, 393, 0, 394, 395, 396, 397, 398, 1181,
	1182, 1185, 484, 1224, 399, 400, 0, 401, 402, 403,
	404, 405, 0, 0, 0, 279, 406, 407, 408, 0,
	1223, 409, 1190, 1191, 0, 1151, 0, 410, 411, 1225,
	1183, 1226, 412, 413, 414, 1227, 415, 0, 0, 0,
	416, 417, 418, 419, 420, 421, 0, 422, 424, 423,
	0, 425, 1219, 1228, 426, 427, 1229, 0, 428, 429,
	430, 431, 432, 433, 436, 1174, 1173, 434, 435, 437,
	438, 0, 439, 440, 442, 445, 441, 443, 444, 446,
	459, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 458, 461, 0, 460, 1230, 462, 463, 464,
	465, 472, 474, 475, 470, 471, 473, 476, 477, 479,
	467, 468, 469, 1231, 478, 466, 1113, 280, 1232, 480,
	481, 482, 1136, 1184, 483, 1198, 485, 486, 0, 0,
	487, 0, 0, 0, 489, 490, 491, 0, 0, 492,
	493, 679, 1233, 494, 1234, 1213, 495, 496, 1123, 497,
	498, 499, 500, 501, 502, 503, 504, 505, 0, 506,
	507, 681, 508, 509, 510, 682, 511, 512, 513, 1214,
	514, 684, 515, 516, 0, 517, 518, 0, 519, 520,
	521, 522, 523, 524, 525, 1194, 526, 527, 529, 528,
	530, 0, 531, 0, 532, 533, 534, 0, 0, 0,
	0, 0, 535, 537, 0, 538, 539, 540, 541, 536,
	542, 543, 544, 545, 546, 0, 547, 548, 549, 1235,
	550, 551, 552, 553, 554, 1124, 555, 0, 556, 557,
	563, 564, 565, 558, 559, 566, 567, 568, 569, 570,
	0, 572, 573, 571, 574, 575, 576, 1177, 577, 578,
	560, 561, 579, 580, 1236, 581, 582, 583, 584, 585,
	586, 587, 1192, 0, 588, 0, 589, 590, 591, 592,
	594, 562, 595, 600, 601, 1239, 596, 597, 598, 599,
	1215, 603, 604, 0, 605, 606, 1110, 602, 593, 0,
	607, 608, 609, 610, 611, 612, 613, 614, 0, 615,
	1204, 1205, 1206, 1207, 0, 624, 0, 616, 617, 618,
	1216, 619, 1217, 1134, 620, 621, 622, 623, 0, 625,
	626, 0, 1117, 627, 628, 629, 631, 632, 630, 633,
	1178, 634, 0, 0, 635, 636, 637, 696, 1201, 1238,
	0, 639, 638, 640, 641, 699, 642, 643, 0, 0,
	0, 0, 644, 645, 700, 646, 647, 648, 1114, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1109, 0, 0, 0, 0, 0, 0, 1107, 1108,
	0, 0, 0, 0, 0, 0, 0, 0, 1140, 1915,
	0, 2790, 1138, 1156, 1128, 1129, 1130, 1126, 1127, 1139,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	281, 283, 282, 284, 285, 286, 287, 0, 288, 289,
	0, 0, 0, 0, 0, 1180, 1144, 0, 0, 0,
	290, 291, 1220, 292, 293, 294, 295, 296, 297, 650,
	1193, 0, 298, 1200, 299, 1199, 0, 1210, 300, 301,
	302, 303, 304, 305, 1146, 1179, 1111, 306, 1240, 1241,
	657, 0, 307, 308, 1186, 0, 1167, 0, 309, 310,
	311, 312, 313, 314, 315, 0, 0, 317, 318, 319,
	316, 320, 0, 321, 0, 322, 323, 324, 325, 326,
	327, 0, 328, 329, 330, 1221, 331, 332, 333, 1170,
	1168, 1169, 1176, 1172, 1171, 1175, 334, 335, 336, 337,
	338, 1203, 339, 341, 1197, 1196, 1116, 344, 340, 342,
	0, 345, 343, 346, 0, 347, 348, 349, 0, 0,
	350, 1188, 352, 0, 353, 354, 355, 0, 356, 357,
	358, 0, 359, 360, 1122, 361, 362, 363, 365, 367,
	364, 366, 368, 369, 370, 371, 1211, 1212, 372, 1135,
	278, 0, 0, 0, 0, 0, 373, 374, 375, 1195,
	0, 0, 0, 376, 0, 377, 378, 379, 0, 0,
	1222, 380, 381, 382, 1208, 1209, 383, 384, 385, 386,
	387, 388, 389, 390, 391, 0, 392, 1218, 0, 1145,
	393, 0, 394, 395, 396, 397, 398, 1181, 1182, 1185,
	484, 1224, 399, 400, 0, 401, 402, 403, 404, 405,
	0, 0, 0, 279, 406, 407, 408, 0, 1223, 409,
	1190, 1191, 0, 1151, 0, 410, 411, 1225, 1183, 1226,
	412, 413, 414, 1227, 415, 0, 0, 0, 416, 417,
	418, 419, 420, 421, 0, 422, 424, 423, 0, 425,
	1219, 1228, 426, 427, 1229, 0, 428, 429, 430, 431,
	432, 433, 436, 1174, 1173, 434, 435, 437, 438, 0,
	439, 440, 442, 445, 441, 443, 444, 446, 459, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	458, 461, 0, 460, 1230, 462, 463, 464, 465, 472,
	474, 475, 470, 471, 473, 476, 477, 479, 467, 468,
	469, 1231, 478, 466, 1113, 280, 1232, 480, 481, 482,
	1136, 1184, 483, 1198, 485, 486, 0, 0, 487, 0,
	0, 0, 489, 490, 491, 0, 0, 492, 493, 679,
	1233, 494, 1234, 1213, 495, 496, 1123, 497, 498, 499,
	500, 501, 502, 503, 504, 505, 0, 506, 507, 681,
	508, 509, 510, 682, 511, 512, 513, 1214, 514, 684,
	515, 516, 0, 517, 518, 0, 519, 520, 521, 522,
	523, 524, 525, 1194, 526, 527, 529, 528, 530, 0,
	531, 0, 532, 533, 534, 0, 0, 0, 0, 0,
	535, 537, 0, 538, 539, 540, 541, 536, 542, 543,
	544, 545, 546, 0, 547, 548, 549, 1235, 550, 551,
	552, 553, 554, 1124, 555, 0, 556, 557, 563, 564,
	565, 558, 559, 566, 567, 568, 569, 570, 0, 572,
	573, 571, 574, 575, 576, 1177, 577, 578, 560, 561,
	579, 580, 1236, 581, 582, 583, 584, 585, 586, 587,
	1192, 0, 588, 0, 589, 590, 591, 592, 594, 562,
	595, 600, 601, 1239, 596, 597, 598, 599, 1215, 603,
	604, 0, 605, 606, 1110, 602, 593, 0, 607, 608,
	609, 610, 611, 612, 613, 614, 0, 615, 1204, 1205,
	1206, 1207, 0, 624, 0, 616, 617, 618, 1216, 619,
	1217, 1134, 620, 621, 622, 623, 0, 625, 626, 0,
	1117, 627, 628, 629, 631, 632, 630, 633, 1178, 634,
	0, 0, 635, 636, 637, 696, 1201, 1238, 0, 639,
	638, 640, 641, 699, 642, 643, 0, 0, 0, 0,
	644, 645, 700, 646, 647, 648, 1114, 0, 0, 0,
	2788, 0, 1156, 1128, 1129, 1130, 1126, 1127, 1139, 1109,
	0, 0, 0, 0, 0, 0, 1107, 1108, 0, 281,
	283, 282, 284, 285, 286, 287, 1140, 288, 289, 0,
	1138, 0, 0, 0, 1180, 1144, 0, 0, 0, 290,
	291, 1220, 292, 293, 294, 295, 296, 297, 650, 1193,
	0, 298, 1200, 299, 1199, 0, 1210, 300, 301, 302,
	303, 304, 305, 1146, 1179, 1111, 306, 1240, 1241, 657,
	0, 307, 308, 1186, 0, 1167, 0, 309, 310, 311,
	312, 313, 314, 315, 0, 0, 317, 318, 319, 316,
	320, 0, 321, 0, 322, 323, 324, 325, 326, 327,
	0, 328, 329, 330, 1221, 331, 332, 333, 1170, 1168,
	1169, 1176, 1172, 1171, 1175, 334, 335, 336, 337, 338,
	1203, 339, 341, 1197, 1196, 1116, 344, 340, 342, 0,
	345, 343, 346, 0, 347, 348, 349, 0, 0, 350,
	1188, 352, 0, 353, 354, 355, 0, 356, 357, 358,
	0, 359, 360, 1122, 361, 362, 363, 365, 367, 364,
	366, 368, 369, 370, 371, 1211, 1212, 372, 1135, 278,
	0, 0, 0, 0, 0, 373, 374, 375, 1195, 0,
	0, 0, 376, 0, 377, 378, 379, 0, 0, 1222,
	380, 381, 382, 1208, 1209, 383, 384, 385, 386, 387,
	388, 389, 390, 391, 0, 392, 1218, 0, 1145, 393,
	0, 394, 395, 396, 397, 398, 1181, 1182, 1185, 484,
	1224, 399, 400, 0, 401, 402, 403, 404, 405, 0,
	0, 0, 279, 406, 407, 408, 0, 1223, 409, 1190,
	1191, 0, 1151, 0, 410, 411, 1225, 1183, 1226, 412,
	413, 414, 1227, 415, 0, 0, 0, 416, 417, 418,
	419, 420, 421, 0, 422, 424, 423, 0, 425, 1219,
	1228, 426, 427, 1229, 0, 428, 429, 430, 431, 432,
	433, 436, 1174, 1173, 434, 435, 437, 438, 0, 439,
	440, 442, 445, 441, 443, 444, 446, 459, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 458,
	461, 0, 460, 1230, 462, 463, 464, 465, 472, 474,
	475, 470, 471, 473, 476, 477, 479, 467, 468, 469,
	1231, 478, 466, 1113, 280, 1232, 480, 481, 482, 1136,
	1184, 483, 1198, 485, 486, 0, 0, 487, 0, 0,
	0, 489, 490, 491, 0, 0, 492, 493, 679, 1233,
	494, 1234, 1213, 495, 496, 1123, 497, 498, 499, 500,
	501, 502, 503, 504, 505, 0, 506, 507, 681, 508,
	509, 510, 682, 511, 512, 513, 1214, 514, 684, 515,
	516, 0, 517, 518, 0, 519, 520, 521, 522, 523,
	524, 525, 1194, 526, 527, 529, 528, 530, 0, 531,
	0, 532, 533, 534, 0, 0, 0, 0, 0, 535,
	537, 0, 538, 539, 540, 541, 536, 542, 543, 544,
	545, 546, 0, 547, 548, 549, 1235, 550, 551, 552,
	553, 554, 1124, 555, 0, 556, 557, 563, 564, 565,
	558, 559, 566, 567, 568, 569, 570, 0, 572, 573,
	571, 574, 575, 576, 1177, 577, 578, 560, 561, 579,
	580, 1236, 581, 582, 583, 584, 585, 586, 587, 1192,
	0, 588, 0, 589, 590, 591, 592, 594, 562, 595,
	600, 601, 1239, 596, 597, 598, 599, 1215, 603, 604,
	0, 605, 606, 1110, 602, 593, 0, 607, 608, 609,
	610, 611, 612, 613, 614, 0, 615, 1204, 1205, 1206,
	1207, 0, 624, 0, 616, 617, 618, 1216, 619, 1217,
	1134, 620, 621, 622, 623, 0, 625, 626, 0, 1117,
	627, 628, 629, 631, 632, 630, 633, 1178, 634, 0,
	0, 635, 636, 637, 696, 1201, 1238, 0, 639, 638,
	640, 641, 699, 642, 643, 0, 0, 0, 0, 644,
	645, 700, 646, 647, 648, 1114, 0, 0, 0, 2776,
	0, 1156, 1128, 1129, 1130, 1126, 1127, 1139, 1109, 0,
	0, 0, 0, 0, 0, 1107, 1108, 0, 281, 283,
	282, 284, 285, 286, 287, 1140, 288, 289, 0, 1138,
	0, 0, 0, 1180, 1144, 0, 0, 0, 290, 291,
	1220, 292, 293, 294, 295, 296, 297, 650, 1193, 0,
	298, 1200, 299, 1199, 0, 1210, 300, 301, 302, 303,
	304, 305, 1146, 1179, 1111, 306, 1240, 1241, 657, 0,
	307, 308, 1186, 0, 1167, 0, 309, 310, 311, 312,
	313, 314, 315, 0, 0, 317, 318, 319, 316, 320,
	0, 321, 0, 322, 323, 324, 325, 326, 327, 0,
	328, 329, 330, 1221, 331, 332, 333, 1170, 1168, 1169,
	1176, 1172, 1171, 1175, 334, 335, 336, 337, 338, 1203,
	339, 341, 1197, 1196, 1116, 344, 340, 342, 0, 345,
	343, 346, 0, 347, 348, 349, 0, 0, 350, 1188,
	352, 0, 353, 354, 355, 0, 356, 357, 358, 0,
	359, 360, 1122, 361, 362, 363, 365, 367, 364, 366,
	368, 369, 370, 371, 1211, 1212, 372, 1135, 278, 0,
	0, 0, 0, 0, 373, 374, 375, 1195, 0, 0,
	0, 376, 0, 377, 378, 379, 0, 0, 1222, 380,
	381, 382, 1208, 1209, 383, 384, 385, 386, 387, 388,
	389, 390, 391, 0, 392, 1218, 0, 1145, 393, 0,
	394, 395, 396, 397, 398, 1181, 1182, 1185, 484, 1224,
	399, 400, 0, 401, 402, 403, 404, 405, 0, 0,
	0, 279, 406, 407, 408, 0, 1223, 409, 1190, 1191,
	0, 1151, 0, 410, 411, 1225, 1183, 1226, 412, 413,
	414, 1227, 415, 0, 0, 0, 416, 417, 418, 419,
	420, 421, 0, 422, 424, 423, 0, 425, 1219, 1228,
	426, 427, 1229, 0, 428, 429, 430, 431, 432, 433,
	436, 1174, 1173, 434, 435, 437, 438, 0, 439, 440,
	442, 445, 441, 443, 444, 446, 459, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 458, 461,
	0, 460, 1230, 462, 463, 464, 465, 472, 474, 475,
	470, 471, 473, 476, 477, 479, 467, 468, 469, 1231,
	478, 466, 1113, 280, 1232, 480, 481, 482, 1136, 1184,
	483, 1198, 485, 486, 0, 0, 487, 0, 0, 0,
	489, 490, 491, 0, 0, 492, 493, 679, 1233, 494,
	1234, 1213, 495, 496, 1123, 497, 498, 499, 500, 501,
	502, 503, 504, 505, 0, 506, 507, 681, 508, 509,
	510, 682, 511, 512, 513, 1214, 514, 684, 515, 516,
	0, 517, 518, 0, 519, 520, 521, 522, 523, 524,
	525, 1194, 526, 527, 529, 528, 530, 0, 531, 0,
	532, 533, 534, 0, 0, 0, 0, 0, 535, 537,
	0, 538, 539, 540, 541, 536, 542, 543, 544, 545,
	546, 0, 547, 548, 549, 1235, 550, 551, 552, 553,
	554, 1124, 555, 0, 556, 557, 563, 564, 565, 558,
	559, 566, 567, 568, 569, 570, 0, 572, 573, 571,
	574, 575, 576, 1177, 577, 578, 560, 561, 579, 580,
	1236, 581, 582, 583, 584, 585, 586, 587, 1192, 0,
	588, 0, 589, 590, 591, 592, 594, 562, 595, 600,
	601, 1239, 596, 597, 598, 599, 1215, 603, 604, 0,
	605, 606, 1110, 602, 593, 0, 607, 608, 609, 610,
	611, 612, 613, 614, 0, 615, 1204, 1205, 1206, 1207,
	0, 624, 0, 616, 617, 618, 1216, 619, 1217, 1134,
	620, 621, 622, 623, 0, 625, 626, 0, 1117, 627,
	628, 629, 631, 632, 630, 633, 1178, 634, 0, 0,
	635, 636, 637, 696, 1201, 1238, 0, 639, 638, 640,
	641, 699, 642, 643, 0, 0, 0, 0, 644, 645,
	700, 646, 647, 648, 1114, 0, 0, 0, 2764, 0,
	1156, 1128, 1129, 1130, 1126, 1127, 1139, 1109, 0, 0,
	0, 0, 0, 0, 1107, 1108, 0, 281, 283, 282,
	284, 285, 286, 287, 1140, 288, 289, 0, 1138, 0,
	0, 0, 1180, 1144, 0, 0, 0, 290, 291, 1220,
	292, 293, 294, 295, 296, 297, 650, 1193, 0, 298,
	1200, 299, 1199, 0, 1210, 300, 301, 302, 303, 304,
	305, 1146, 1179, 1111, 306, 1240, 1241, 657, 0, 307,
	308, 1186, 0, 1167, 0, 309, 310, 311, 312, 313,
	314, 315, 0, 0, 317, 318, 319, 316, 320, 0,
	321, 0, 322, 323, 324, 325, 326, 327, 0, 328,
	329, 330, 1221, 331, 332, 333, 1170, 1168, 1169, 1176,
	1172, 1171, 1175, 334, 335, 336, 337, 338, 1203, 339,
	341, 1197, 1196, 1116, 344, 340, 342, 0, 345, 343,
	346, 0, 347, 348, 349, 0, 0, 350, 1188, 352,
	0, 353, 354, 355, 0, 356, 357, 358, 0, 359,
	360, 1122, 361, 362, 363, 365, 367, 364, 366, 368,
	369, 370, 371, 1211, 1212, 372, 1135, 278, 0, 0,
	0, 0, 0, 373, 374, 375, 1195, 0, 0, 0,
	376, 0, 377, 378, 379, 0, 0, 1222, 380, 381,
	382, 1208, 1209, 383, 384, 385, 386, 387, 388, 389,
	390, 391, 0, 392, 1218, 0, 1145, 393, 0, 394,
	395, 396, 397, 398, 1181, 1182, 1185, 484, 1224, 399,
	400, 0, 401, 402, 403, 404, 405, 0, 0, 0,
	279, 406, 407, 408, 0, 1223, 409, 1190, 1191, 0,
	1151, 0, 410, 411, 1225, 1183, 1226, 412, 413, 414,
	1227, 415, 0, 0, 0, 416, 417, 418, 419, 420,
	421, 0, 422, 424, 423, 0, 425, 1219, 1228, 426,
	427, 1229, 0, 428, 429, 430, 431, 432, 433, 436,
	1174, 1173, 434, 435, 437, 438, 0, 439, 440, 442,
	445, 441, 443, 444, 446, 459, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 458, 461, 0,
	460, 1230, 462, 463, 464, 465, 472, 474, 475, 470,
	471, 473, 476, 477, 479, 467, 468, 469, 1231, 478,
	466, 1113, 280, 1232, 480, 481, 482, 1136, 1184, 483,
	1198, 485, 486, 0, 0, 487, 0, 0, 0, 489,
	490, 491, 0, 0, 492, 493, 679, 1233, 494, 1234,
	1213, 495, 496, 1123, 497, 498, 499, 500, 501, 502,
	503, 504, 505, 0, 506, 507, 681, 508, 509, 510,
	682, 511, 512, 513, 1214, 514, 684, 515, 516, 0,
	517, 518, 0, 519, 520, 521, 522, 523, 524, 525,
	1194, 526, 527, 529, 528, 530, 0, 531, 0, 532,
	533, 534, 0, 0, 0, 0, 0, 535, 537, 0,
	538, 539, 540, 541, 536, 542, 543, 544, 545, 546,
	0, 547, 548, 549, 1235, 550, 551, 552, 553, 554,
	1124, 555, 0, 556, 557, 563, 564, 565, 558, 559,
	566, 567, 568, 569, 570, 0, 572, 573, 571, 574,
	575, 576, 1177, 577, 578, 560, 561, 579, 580, 1236,
	581, 582, 583, 584, 585, 586, 587, 1192, 0, 588,
	0, 589, 590, 591, 592, 594, 562, 595, 600, 601,
	1239, 596, 597, 598, 599, 1215, 603, 604, 0, 605,
	606, 1110, 602, 593, 0, 607, 608, 609, 610, 611,
	612, 613, 614, 0, 615, 1204, 1205, 1206, 1207, 0,
	624, 0, 616, 617, 618, 1216, 619, 1217, 1134, 620,
	621, 622, 623, 0, 625, 626, 0, 1117, 627, 628,
	629, 631, 632, 630, 633, 1178, 634, 0, 0, 635,
	636, 637, 696, 1201, 1238, 0, 639, 638, 640, 641,
	699, 642, 643, 0, 0, 0, 0, 644, 645, 700,
	646, 647, 648, 1114, 0, 0, 0, 2762, 0, 2753,
	2760, 1129, 1130, 1126, 1127, 1139, 1109, 0, 0, 0,
	0, 0, 0, 1107, 1108, 0, 281, 283, 282, 284,
	285, 286, 287, 1140, 288, 289, 0, 1138, 0, 0,
	0, 1180, 1144, 0, 0, 0, 290, 291, 1220, 292,
	293, 294, 295, 296, 297, 650, 1193, 0, 298, 1200,
	299, 1199, 0, 1210, 300, 301, 302, 303, 304, 305,
	1146, 1179, 1111, 306, 1240, 1241, 657, 0, 307, 308,
	1186, 0, 1167, 0, 309, 310, 311, 312, 313, 314,
	315, 0, 0, 317, 318, 319, 316, 320, 0, 321,
	0, 322, 323, 324, 325, 326, 327, 0, 328, 329,
	330, 1221, 331, 332, 333, 1170, 1168, 1169, 1176, 1172,
	1171, 1175, 334, 335, 336, 337, 338, 1203, 2756, 341,
	1197, 1196, 1116, 344, 340, 342, 0, 345, 343, 346,
	0, 347, 348, 349, 0, 0, 350, 1188, 352, 0,
	353, 354, 355, 0, 356, 357, 358, 0, 359, 360,
	1122, 361, 362, 363, 365, 367, 364, 366, 368, 369,
	370, 371, 1211, 1212, 372, 1135, 278, 0, 0, 0,
	0, 0, 373, 374, 375, 1195, 0, 0, 0, 376,
	0, 377, 378, 379, 0, 0, 1222, 380, 381, 382,
	1208, 1209, 383, 384, 385, 386, 387, 388, 389, 390,
	391, 0, 392, 1218, 0, 1145, 393, 0, 394, 395,
	396, 2757, 398, 1181, 1182, 1185, 484, 1224, 399, 400,
	0, 401, 402, 403, 404, 405, 0, 0, 0, 279,
	406, 407, 408, 0, 1223, 409, 1190, 1191, 0, 1151,
	0, 410, 411, 1225, 1183, 1226, 412, 413, 414, 1227,
	415, 0, 0, 0, 416, 417, 418, 419, 420, 421,
	0, 422, 424, 423, 0, 425, 1219, 1228, 426, 427,
	1229, 0, 428, 429, 430, 431, 432, 433, 436, 1174,
	1173, 434, 435, 437, 438, 0, 439, 440, 442, 445,
	441, 443, 2758, 446, 2755, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 458, 461, 0, 460,
	1230, 462, 463, 464, 465, 472, 474, 475, 470, 471,
	473, 476, 477, 479, 467, 468, 469, 1231, 478, 466,
	1113, 280, 1232, 480, 481, 482, 1136, 1184, 483, 1198,
	485, 486, 0, 0, 487, 0, 0, 0, 489, 490,
	491, 0, 0, 492, 493, 679, 1233, 494, 1234, 1213,
	495, 496, 1123, 497, 498, 499, 500, 501, 502, 503,
	504, 505, 0, 506, 507, 681, 508, 509, 510, 682,
	511, 512, 513, 1214, 514, 684, 515, 516, 0, 517,
	518, 0, 519, 520, 521, 522, 523, 524, 525, 1194,
	526, 527, 529, 528, 530, 0, 531, 0, 532, 533,
	534, 0, 0, 0, 0, 0, 535, 537, 0, 538,
	539, 540, 541, 536, 542, 543, 544, 545, 546, 0,
	547, 548, 549, 1235, 550, 551, 552, 553, 554, 1124,
	555, 0, 556, 557, 563, 564, 565, 558, 559, 566,
	567, 568, 569, 2759, 0, 572, 573, 571, 574, 575,
	576, 1177, 577, 578, 560, 561, 579, 580, 1236, 581,
	582, 583, 584, 585, 586, 587, 1192, 0, 588, 0,
	589, 590, 591, 592, 594, 562, 595, 600, 601, 1239,
	596, 597, 598, 599, 1215, 603, 604, 0, 605, 606,
	1110, 602, 593, 0, 607, 608, 609, 610, 611, 612,
	613, 614, 0, 615, 1204, 1205, 1206, 1207, 0, 624,
	0, 616, 617, 618, 1216, 619, 1217, 1134, 620, 621,
	622, 623, 0, 625, 626, 0, 1117, 627, 628, 629,
	631, 632, 630, 633, 1178, 634, 0, 0, 635, 636,
	637, 696, 1201, 1238, 0, 639, 638, 640, 641, 699,
	642, 643, 0, 0, 0, 0, 644, 645, 700, 646,
	2754, 648, 1114, 0, 0, 0, 2750, 0, 2753, 2760,
	1129, 1130, 1126, 1127, 1139, 1109, 0, 0, 0, 0,
	0, 0, 1107, 1108, 0, 281, 283, 282, 284, 285,
	286, 287, 1140, 288, 289, 0, 1138, 0, 0, 0,
	1180, 1144, 0, 0, 0, 290, 291, 1220, 292, 293,
	294, 295, 296, 297, 650, 1193, 0, 298, 1200, 299,
	1199, 0, 1210, 300, 301, 302, 303, 304, 305, 1146,
	1179, 1111, 306, 1240, 1241, 657, 0, 307, 308, 1186,
	0, 1167, 0, 309, 310, 311, 312, 313, 314, 315,
	0, 0, 317, 318, 319, 316, 320, 0, 321, 0,
	322, 323, 324, 325, 326, 327, 0, 328, 329, 330,
	1221, 331, 332, 333, 1170, 1168, 1169, 1176, 1172, 1171,
	1175, 334, 335, 336, 337, 338, 1203, 2756, 341, 1197,
	1196, 1116, 344, 340, 342, 0, 345, 343, 346, 0,
	347, 348, 349, 0, 0, 350, 1188, 352, 0, 353,
	354, 355, 0, 356, 357, 358, 0, 359, 360, 1122,
	361, 362, 363, 365, 367, 364, 366, 368, 369, 370,
	371, 1211, 1212, 372, 1135, 278, 0, 0, 0, 0,
	0, 373, 374, 375, 1195, 0, 0, 0, 376, 0,
	377, 378, 379, 0, 0, 1222, 380, 381, 382, 1208,
	1209, 383, 384, 385, 386, 387, 388, 389, 390, 391,
	0, 392, 1218, 0, 1145, 393, 0, 394, 395, 396,
	2757, 398, 1181, 1182, 1185, 484, 1224, 399, 400, 0,
	401, 402, 403, 404, 405, 0, 0, 0, 279, 406,
	407, 408, 0, 1223, 409, 1190, 1191, 0, 1151, 0,
	410, 411, 1225, 1183, 1226, 412, 413, 414, 1227, 415,
	0, 0, 0, 416, 417, 418, 419, 420, 421, 0,
	422, 424, 423, 0, 425, 1219, 1228, 426, 427, 1229,
	0, 428, 429, 430, 431, 432, 433, 436, 1174, 1173,
	434, 435, 437, 438, 0, 439, 440, 442, 445, 441,
	443, 2758, 446, 2755, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 458, 461, 0, 460, 1230,
	462, 463, 464, 465, 472, 474, 475, 470, 471, 473,
	476, 477, 479, 467, 468, 469, 1231, 478, 466, 1113,
	280, 1232, 480, 481, 482, 1136, 1184, 483, 1198, 485,
	486, 0, 0, 487, 0, 0, 0, 489, 490, 491,
	0, 0, 492, 493, 679, 1233, 494, 1234, 1213, 495,
	496, 1123, 497, 498, 499, 500, 501, 502, 503, 504,
	505, 0, 506, 507, 681, 508, 509, 510, 682, 511,
	512, 513, 1214, 514, 684, 515, 516, 0, 517, 518,
	0, 519, 520, 521, 522, 523, 524, 525, 1194, 526,
	527, 529, 528, 530, 0, 531, 0, 532, 533, 534,
	0, 0, 0, 0, 0, 535, 537, 0, 538, 539,
	540, 541, 536, 542, 543, 544, 545, 546, 0, 547,
	548, 549, 1235, 550, 551, 552, 553, 554, 1124, 555,
	0, 556, 557, 563, 564, 565, 558, 559, 566, 567,
	568, 569, 2759, 0, 572, 573, 571, 574, 575, 576,
	1177, 577, 578, 560, 561, 579, 580, 1236, 581, 582,
	583, 584, 585, 586, 587, 1192, 0, 588, 0, 589,
	590, 591, 592, 594, 562, 595, 600, 601, 1239, 596,
	597, 598, 599, 1215, 603, 604, 0, 605, 606, 1110,
	602, 593, 0, 607, 608, 609, 610, 611, 612, 613,
	614, 0, 615, 1204, 1205, 1206, 1207, 0, 624, 0,
	616, 617, 618, 1216, 619, 1217, 1134, 620, 621, 622,
	623, 0, 625, 626, 0, 1117, 627, 628, 629, 631,
	632, 630, 633, 1178, 634, 0, 0, 635, 636, 637,
	696, 1201, 1238, 0, 639, 638, 640, 641, 699, 642,
	643, 0, 0, 0, 0, 644, 645, 700, 646, 2754,
	648, 1114, 0, 0, 0, 0, 0, 1156, 1128, 1129,
	1130, 1126, 1127, 1139, 1109, 0, 0, 0, 0, 0,
	0, 1107, 1108, 0, 281, 283, 282, 284, 285, 286,
	287, 1140, 288, 289, 0, 1138, 0, 0, 0, 1180,
	1144, 0, 0, 0, 290, 291, 1220, 292, 293, 294,
	295, 296, 297, 650, 1193, 0, 298, 1200, 299, 1199,
	0, 1210, 300, 301, 302, 303, 304, 305, 1146, 1179,
	1111, 306, 1240, 1241, 657, 0, 307, 308, 1186, 0,
	1167, 0, 309, 310, 311, 312, 313, 314, 315, 0,
	0, 317, 318, 319, 316, 320, 0, 321, 0, 322,
	323, 324, 325, 326, 327, 0, 328, 329, 330, 1221,
	331, 332, 333, 1170, 1168, 1169, 1176, 1172, 1171, 1175,
	334, 335, 336, 337, 338, 1203, 339, 341, 1197, 1196,
	1116, 344, 340, 342, 0, 345, 343, 346, 0, 347,
	348, 349, 0, 0, 350, 1188, 352, 0, 353, 354,
	355, 0, 356, 357, 358, 0, 359, 360, 1122, 361,
	362, 363, 365, 367, 364, 366, 368, 369, 370, 371,
	1211, 1212, 372, 1135, 278, 0, 0, 0, 0, 0,
	373, 374, 375, 1195, 0, 0, 0, 376, 0, 377,
	378, 379, 0, 0, 1222, 380, 381, 382, 1208, 1209,
	383, 384, 385, 386, 387, 388, 389, 390, 391, 0,
	392, 1218, 0, 1145, 393, 0, 394, 395, 396, 397,
	398, 1181, 1182, 1185, 484, 1224, 399, 400, 0, 401,
	402, 403, 404, 405, 0, 0, 0, 279, 406, 407,
	408, 0, 1223, 409, 1190, 1191, 0, 1151, 0, 410,
	411, 1225, 1183, 1226, 412, 413, 414, 1227, 415, 0,
	0, 0, 416, 417, 418, 419, 420, 421, 0, 422,
	424, 423, 0, 425, 1219, 1228, 426, 427, 1229, 0,
	428, 429, 430, 431, 432, 433, 436, 1174, 1173, 434,
	435, 437, 438, 0, 439, 440, 442, 445, 441, 443,
	444, 446, 459, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 458, 461, 0, 460, 1230, 462,
	463, 464, 465, 472, 474, 475, 470, 471, 473, 476,
	477, 479, 467, 468, 469, 1231, 478, 466, 1113, 280,
	1232, 480, 481, 482, 1136, 1184, 483, 1198, 485, 486,
	0, 0, 487, 0, 0, 0, 489, 490, 491, 0,
	0, 492, 493, 679, 1233, 494, 1234, 1213, 495, 496,
	1123, 497, 498, 499, 500, 501, 502, 503, 504, 505,
	0, 506, 507, 681, 508, 509, 510, 682, 511, 512,
	513, 1214, 514, 684, 515, 516, 0, 517, 518, 0,
	519, 520, 521, 522, 523, 524, 525, 1194, 526, 527,
	529, 528, 530, 0, 531, 0, 532, 533, 534, 0,
	0, 0, 0, 0, 535, 537, 0, 538, 539, 540,
	541, 536, 542, 543, 544, 545, 546, 0, 547, 548,
	549, 1235, 550, 551, 552, 553, 554, 1124, 555, 0,
	556, 557, 563, 564, 565, 558, 559, 566, 567, 568,
	569, 570, 0, 572, 573, 571, 574, 575, 576, 1177,
	577, 578, 560, 561, 579, 580, 1236, 581, 582, 583,
	584, 585, 586, 587, 1192, 0, 588, 0, 589, 590,
	591, 592, 594, 562, 595, 600, 601, 1239, 596, 597,
	598, 599, 1215, 603, 604, 0, 605, 606, 1110, 602,
	593, 0, 607, 608, 609, 610, 611, 612, 613, 614,
	0, 615, 1204, 1205, 1206, 1207, 0, 624, 0, 616,
	617, 618, 1216, 619, 1217, 1134, 620, 621, 622, 623,
	0, 625, 626, 0, 1117, 627, 628, 629, 631, 632,
	630, 633, 1178, 634, 0, 0, 635, 636, 637, 696,
	1201, 1238, 0, 639, 638, 640, 641, 699, 642, 643,
	0, 0, 0, 0, 644, 645, 700, 646, 647, 648,
	1114, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1109, 0, 0, 0, 0, 0, 0,
	1107, 1108, 0, 0, 0, 0, 0, 0, 1923, 0,
	1140, 0, 0, 0, 1138, 1156, 1128, 1129, 1130, 1126,
	1127, 1139, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 281, 283, 282, 284, 285, 286, 287, 2505,
	288, 289, 0, 0, 0, 0, 0, 1180, 1144, 0,
	0, 0, 290, 291, 1220, 292, 293, 294, 295, 296,
	297, 650, 1193, 0, 298, 1200, 299, 1199, 0, 1210,
	300, 301, 302, 303, 304, 305, 1146, 1179, 1111, 306,
	1240, 1241, 657, 0, 307, 308, 1186, 0, 1167, 0,
	309, 310, 311, 312, 313, 314, 315, 0, 0, 317,
	318, 319, 316, 320, 0, 321, 0, 322, 323, 324,
	325, 326, 327, 0, 328, 329, 330, 1221, 331, 332,
	333, 1170, 1168, 1169, 1176, 1172, 1171, 1175, 334, 335,
	336, 337, 338, 1203, 339, 341, 1197, 1196, 1116, 344,
	340, 342, 0, 345, 343, 346, 0, 347, 348, 349,
	0, 0, 350, 1188, 352, 0, 353, 354, 355, 0,
	356, 357, 358, 0, 359, 360, 1122, 361, 362, 363,
	365, 367, 364, 366, 368, 369, 370, 371, 1211, 1212,
	372, 1135, 278, 0, 0, 0, 0, 0, 373, 374,
	375, 1195, 0, 0, 0, 376, 0, 377, 378, 379,
	0, 0, 1222, 380, 381, 382, 1208, 1209, 383, 384,
	385, 386, 387, 388, 389, 390, 391, 0, 392, 1218,
	0, 1145, 393, 0, 394, 395, 396, 397, 398, 1181,
	1182, 1185, 484, 1224, 399, 400, 0, 401, 402, 403,
	404, 405, 0, 0, 0, 279, 406, 407, 408, 0,
	1223, 409, 1190, 1191, 0, 1151, 0, 410, 411, 1225,
	1183, 1226, 412, 413, 414, 1227, 415, 0, 0, 0,
	416, 417, 418, 419, 420, 421, 0, 422, 424, 423,
	0, 425, 1219, 1228, 426, 427, 1229, 0, 428, 429,
	430, 431, 432, 433, 436, 1174, 1173, 434, 435, 437,
	438, 0, 439, 440, 442, 445, 441, 443, 444, 446,
	459, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 458, 461, 0, 460, 1230, 462, 463, 464,
	465, 472, 474, 475, 470, 471, 473, 476, 477, 479,
	467, 468, 469, 1231, 478, 466, 1113, 280, 1232, 480,
	481, 482, 1136, 1184, 483, 1198, 485, 486, 0, 0,
	487, 0, 0, 0, 489, 490, 491, 0, 0, 492,
	493, 679, 1233, 494, 1234, 1213, 495, 496, 1123, 497,
	498, 499, 500, 501, 502, 503, 504, 505, 0, 506,
	507, 681, 508, 509, 510, 682, 511, 512, 513, 1214,
	514, 684, 515, 516, 0, 517, 518, 0, 519, 520,
	521, 522, 523, 524, 525, 1194, 526, 527, 529, 528,
	530, 0, 531, 0, 532, 533, 534, 0, 0, 0,
	0, 0, 535, 537, 0, 538, 539, 540, 541, 536,
	542, 543, 544, 545, 546, 0, 547, 548, 549, 1235,
	550, 551, 552, 553, 554, 1124, 555, 0, 556, 557,
	563, 564, 565, 558, 559, 566, 567, 568, 569, 570,
	0, 572, 573, 571, 574, 575, 576, 1177, 577, 578,
	560, 561, 579, 580, 1236, 581, 582, 583, 584, 585,
	586, 587, 1192, 0, 588, 0, 589, 590, 591, 592,
	594, 562, 595, 600, 601, 1239, 596, 597, 598, 599,
	1215, 603, 604, 0, 605, 606, 1110, 602, 593, 0,
	607, 608, 609, 610, 611, 612, 613, 614, 0, 615,
	1204, 1205, 1206, 1207, 0, 624, 0, 616, 617, 618,
	1216, 619, 1217, 1134, 620, 621, 622, 623, 0, 625,
	626, 0, 1117, 627, 628, 629, 631, 632, 630, 633,
	1178, 634, 0, 0, 635, 636, 637, 696, 1201, 1238,
	0, 639, 638, 640, 641, 699, 642, 643, 0, 0,
	0, 0, 644, 645, 700, 646, 647, 648, 1114, 0,
	0, 0, 2467, 0, 1156, 1128, 1129, 1130, 1126, 1127,
	1139, 1109, 0, 0, 0, 0, 0, 0, 1107, 1108,
	0, 281, 283, 282, 284, 285, 286, 287, 1140, 288,
	289, 0, 1138, 0, 0, 0, 1180, 1144, 0, 0,
	0, 290, 291, 1220, 292, 293, 294, 295, 296, 297,
	650, 1193, 0, 298, 1200, 299, 1199, 0, 1210, 300,
	301, 302, 303, 304, 305, 1146, 1179, 1111, 306, 1240,
	1241, 657, 0, 307, 308, 1186, 0, 1167, 0, 309,
	310, 311, 312, 313, 314, 315, 0, 0, 317, 318,
	319, 316, 320, 0, 321, 0, 322, 323, 324, 325,
	326, 327, 0, 328, 329, 330, 1221, 331, 332, 333,
	1170, 1168, 1169, 1176, 1172, 1171, 1175, 334, 335, 336,
	337, 338, 1203, 339, 341, 1197, 1196, 1116, 344, 340,
	342, 0, 345, 343, 346, 0, 347, 348, 349, 0,
	0, 350, 1188, 352, 0, 353, 354, 355, 0, 356,
	357, 358, 0, 359, 360, 1122, 361, 362, 363, 365,
	367, 364, 366, 368, 369, 370, 371, 1211, 1212, 372,
	1135, 278, 0, 0, 0, 0, 0, 373, 374, 375,
	1195, 0, 0, 0, 376, 0, 377, 378, 379, 0,
	0, 1222, 380, 381, 382, 1208, 1209, 383, 384, 385,
	386, 387, 388, 389, 390, 391, 0, 392, 1218, 0,
	1145, 393, 0, 394, 395, 396, 397, 398, 1181, 1182,
	1185, 484, 1224, 399, 400, 0, 401, 402, 403, 404,
	405, 0, 0, 0, 279, 406, 407, 408, 0, 1223,
	409, 1190, 1191, 0, 1151, 0, 410, 411, 1225, 1183,
	1226, 412, 413, 414, 1227, 415, 0, 0, 0, 416,
	417, 418, 419, 420, 421, 0, 422, 424, 423, 0,
	425, 1219, 1228, 426, 427, 1229, 0, 428, 429, 430,
	431, 432, 433, 436, 1174, 1173, 434, 435, 437, 438,
	0, 439, 440, 442, 445, 441, 443, 444, 446, 459,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 458, 461, 0, 460, 1230, 462, 463, 464, 465,
	472, 474, 475, 470, 471, 473, 476, 477, 479, 467,
	468, 469, 1231, 478, 466, 1113, 280, 1232, 480, 481,
	482, 1136, 1184, 483, 1198, 485, 486, 0, 0, 487,
	0, 0, 0, 489, 490, 491, 0, 0, 492, 493,
	679, 1233, 494, 1234, 1213, 495, 496, 1123, 497, 498,
	499, 500, 501, 502, 503, 504, 505, 0, 506, 507,
	681, 508, 509, 510, 682, 511, 512, 513, 1214, 514,
	684, 515, 516, 0, 517, 518, 0, 519, 520, 521,
	522, 523, 524, 525, 1194, 526, 527, 529, 528, 530,
	0, 531, 0, 532, 533, 534, 0, 0, 0, 0,
	0, 535, 537, 0, 538, 539, 540, 541, 536, 542,
	543, 544, 545, 546, 0, 547, 548, 549, 1235, 550,
	551, 552, 553, 554, 1124, 555, 0, 556, 557, 563,
	564, 565, 558, 559, 566, 567, 568, 569, 570, 0,
	572, 573, 571, 574, 575, 576, 1177, 577, 578, 560,
	561, 579, 580, 1236, 581, 582, 583, 584, 585, 586,
	587, 1192, 0, 588, 0, 589, 590, 591, 592, 594,
	562, 595, 600, 601, 1239, 596, 597, 598, 599, 1215,
	603, 604, 0, 605, 606, 1110, 602, 593, 0, 607,
	608, 609, 610, 611, 612, 613, 614, 0, 615, 1204,
	1205, 1206, 1207, 0, 624, 0, 616, 617, 618, 1216,
	619, 1217, 1134, 620, 621, 622, 623, 0, 625, 626,
	0, 1117, 627, 628, 629, 631, 632, 630, 633, 1178,
	634, 0, 0, 635, 636, 637, 696, 1201, 1238, 0,
	639, 638, 640, 641, 699, 642, 643, 0, 0, 0,
	0, 644, 645, 700, 646, 647, 648, 1114, 0, 0,
	0, 2440, 0, 1156, 1128, 1129, 1130, 1126, 1127, 1139,
	1109, 0, 0, 0, 0, 0, 0, 1107, 1108, 0,
	281, 283, 282, 284, 285, 286, 287, 1140, 288, 289,
	0, 1138, 0, 0, 0, 1180, 1144, 0, 0, 0,
	290, 291, 1220, 292, 293, 294, 295, 296, 297, 650,
	1193, 0, 298, 1200, 299, 1199, 0, 1210, 300, 301,
	302, 303, 304, 305, 1146, 1179, 1111, 306, 1240, 1241,
	657, 0, 307, 308, 1186, 0, 1167, 0, 309, 310,
	311, 312, 313, 314, 315, 0, 0, 317, 318, 319,
	316, 320, 0, 321, 0, 322, 323, 324, 325, 326,
	327, 0, 328, 329, 330, 1221, 331, 332, 333, 1170,
	1168, 1169, 1176, 1172, 1171, 1175, 334, 335, 336, 337,
	338, 1203, 339, 341, 1197, 1196, 1116, 344, 340, 342,
	0, 345, 343, 346, 0, 347, 348, 349, 0, 0,
	350, 1188, 352, 0, 353, 354, 355, 0, 356, 357,
	358, 0, 359, 360, 1122, 361, 362, 363, 365, 367,
	364, 366, 368, 369, 370, 371, 1211, 1212, 372, 1135,
	278, 0, 0, 0, 0, 0, 373, 374, 375, 1195,
	0, 0, 0, 376, 0, 377, 378, 379, 0, 0,
	1222, 380, 381, 382, 1208, 1209, 383, 384, 385, 386,
	387, 388, 389, 390, 391, 0, 392, 1218, 0, 1145,
	393, 0, 394, 395, 396, 397, 398, 1181, 1182, 1185,
	484, 1224, 399, 400, 0, 401, 402, 403, 404, 405,
	0, 0, 0, 279, 406, 407, 408, 0, 1223, 409,
	1190, 1191, 0, 1151, 0, 410, 411, 1225, 1183, 1226,
	412, 413, 414, 1227, 415, 0, 0, 0, 416, 417,
	418, 419, 420, 421, 0, 422, 424, 423, 0, 425,
	1219, 1228, 426, 427, 1229, 0, 428, 429, 430, 431,
	432, 433, 436, 1174, 1173, 434, 435, 437, 438, 0,
	439, 440, 442, 445, 441, 443, 444, 446, 459, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	458, 461, 0, 460, 1230, 462, 463, 464, 465, 472,
	474, 475, 470, 471, 473, 476, 477, 479, 467, 468,
	469, 1231, 478, 466, 1113, 280, 1232, 480, 481, 482,
	1136, 1184, 483, 1198, 485, 486, 0, 0, 487, 0,
	0, 0, 489, 490, 491, 0, 0, 492, 493, 679,
	1233, 494, 1234, 1213, 495, 496, 1123, 497, 498, 499,
	500, 501, 502, 503, 504, 505, 0, 506, 507, 681,
	508, 509, 510, 682, 511, 512, 513, 1214, 514, 684,
	515, 516, 0, 517, 518, 0, 519, 520, 521, 522,
	523, 524, 525, 1194, 526, 527, 529, 528, 530, 0,
	531, 0, 532, 533, 534, 0, 0, 0, 0, 0,
	535, 537, 0, 538, 539, 540, 541, 536, 542, 543,
	544, 545, 546, 0, 547, 548, 549, 1235, 550, 551,
	552, 553, 554, 1124, 555, 0, 556, 557, 563, 564,
	565, 558, 559, 566, 567, 568, 569, 570, 0, 572,
	573, 571, 574, 575, 576, 1177, 577, 578, 560, 561,
	579, 580, 1236, 581, 582, 583, 584, 585, 586, 587,
	1192, 0, 588, 0, 589, 590, 591, 592, 594, 562,
	595, 600, 601, 1239, 596, 597, 598, 599, 1215, 603,
	604, 0, 605, 606, 1110, 602, 593, 0, 607, 608,
	609, 610, 611, 612, 613, 614, 0, 615, 1204, 1205,
	1206, 1207, 0, 624, 0, 616, 617, 618, 1216, 619,
	1217, 1134, 620, 621, 622, 623, 0, 625, 626, 0,
	1117, 627, 628, 629, 631, 632, 630, 633, 1178, 634,
	0, 0, 635, 636, 637, 696, 1201, 1238, 0, 639,
	638, 640, 641, 699, 642, 643, 0, 0, 0, 0,
	644, 645, 700, 646, 647, 648, 1114, 0, 0, 0,
	1761, 0, 1156, 1128, 1129, 1130, 1126, 1127, 1139, 1109,
	0, 0, 0, 0, 0, 0, 1107, 1108, 0, 281,
	283, 282, 284, 285, 286, 287, 1140, 288, 289, 0,
	1138, 0, 0, 0, 1180, 1144, 0, 0, 0, 290,
	291, 1220, 292, 293, 294, 295, 296, 297, 650, 1193,
	0, 298, 1200, 299, 1199, 0, 1210, 300, 301, 302,
	303, 304, 305, 1146, 1179, 1111, 306, 1240, 1241, 657,
	0, 307, 308, 1186, 0, 1167, 0, 309, 310, 311,
	312, 313, 314, 315, 0, 0, 317, 318, 319, 316,
	320, 0, 321, 0, 322, 323, 324, 325, 326, 327,
	0, 328, 329, 330, 1221, 331, 332, 333, 1170, 1168,
	1169, 1176, 1172, 1171, 1175, 334, 335, 336, 337, 338,
	1203, 339, 341, 1197, 1196, 1116, 344, 340, 342, 0,
	345, 343, 346, 0, 347, 348, 349, 0, 0, 350,
	1188, 352, 0, 353, 354, 355, 0, 356, 357, 358,
	0, 359, 360, 1122, 361, 362, 363, 365, 367, 364,
	366, 368, 369, 370, 371, 1211, 1212, 372, 1135, 278,
	0, 0, 0, 0, 0, 373, 374, 375, 1195, 0,
	0, 0, 376, 0, 377, 378, 379, 0, 0, 1222,
	380, 381, 382, 1208, 1209, 383, 384, 385, 386, 387,
	388, 389, 390, 391, 0, 392, 1218, 0, 1145, 393,
	0, 394, 395, 396, 397, 398, 1181, 1182, 1185, 484,
	1224, 399, 400, 0, 401, 402, 403, 404, 405, 0,
	0, 0, 279, 406, 407, 408, 0, 1223, 409, 1190,
	1191, 0, 1151, 0, 410, 411, 1225, 1183, 1226, 412,
	413, 414, 1227, 415, 0, 0, 0, 416, 417, 418,
	419, 420, 421, 0, 422, 424, 423, 0, 425, 1219,
	1228, 426, 427, 1229, 0, 428, 429, 430, 431, 432,
	433, 436, 1174, 1173, 434, 435, 437, 438, 0, 439,
	440, 442, 445, 441, 443, 444, 446, 459, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 458,
	461, 0, 460, 1230, 462, 463, 464, 465, 472, 474,
	475, 470, 471, 473, 476, 477, 479, 467, 468, 469,
	1231, 478, 466, 1113, 280, 1232, 480, 481, 482, 1136,
	1184, 483, 1198, 485, 486, 0, 0, 487, 0, 0,
	0, 489, 490, 491, 0, 0, 492, 493, 679, 1233,
	494, 1234, 1213, 495, 496, 1123, 497, 498, 499, 500,
	501, 502, 503, 504, 505, 0, 506, 507, 681, 508,
	509, 510, 682, 511, 512, 513, 1214, 514, 684, 515,
	516, 0, 517, 518, 0, 519, 520, 521, 522, 523,
	524, 525, 1194, 526, 527, 529, 528, 530, 0, 531,
	0, 532, 533, 534, 0, 0, 0, 0, 0, 535,
	537, 0, 538, 539, 540, 541, 536, 542, 543, 544,
	545, 546, 0, 547, 548, 549, 1235, 550, 551, 552,
	553, 554, 1124, 555, 0, 556, 557, 563, 564, 565,
	558, 559, 566, 567, 568, 569, 570, 0, 572, 573,
	571, 574, 575, 576, 1177, 577, 578, 560, 561, 579,
	580, 1236, 581, 582, 583, 584, 585, 586, 587, 1192,
	0, 588, 0, 589, 590, 591, 592, 594, 562, 595,
	600, 601, 1239, 596, 597, 598, 599, 1215, 603, 604,
	0, 605, 606, 1110, 602, 593, 0, 607, 608, 609,
	610, 611, 612, 613, 614, 0, 615, 1204, 1205, 1206,
	1207, 0, 624, 0, 616, 617, 618, 1216, 619, 1217,
	1134, 620, 621, 622, 623, 0, 625, 626, 0, 1117,
	627, 628, 629, 631, 632, 630, 633, 1178, 634, 0,
	0, 635, 636, 637, 696, 1201, 1238, 0, 639, 638,
	640, 641, 699, 642, 643, 0, 0, 0, 0, 644,
	645, 700, 646, 647, 648, 1114, 0, 0, 0, 1690,
	0, 1156, 1128, 1129, 1130, 1126, 1127, 1139, 1109, 0,
	0, 0, 0, 0, 0, 1107, 1108, 0, 281, 283,
	282, 284, 285, 286, 287, 1140, 288, 289, 0, 1138,
	0, 0, 0, 1180, 1144, 0, 0, 0, 290, 291,
	1220, 292, 293, 294, 295, 296, 297, 650, 1193, 0,
	298, 1200, 299, 1199, 0, 1210, 300, 301, 302, 303,
	304, 305, 1146, 1179, 1111, 306, 1240, 1241, 657, 0,
	307, 308, 1186, 0, 1167, 0, 309, 310, 311, 312,
	313, 314, 315, 0, 0, 317, 318, 319, 316, 320,
	0, 321, 0, 322, 323, 324, 325, 326, 327, 0,
	328, 329, 330, 1221, 331, 332, 333, 1170, 1168, 1169,
	1176, 1172, 1171, 1175, 334, 335, 336, 337, 338, 1203,
	339, 341, 1197, 1196, 1116, 344, 340, 342, 0, 345,
	343, 346, 0, 347, 348, 349, 0, 0, 350, 1188,
	352, 0, 353, 354, 355, 0, 356, 357, 358, 0,
	359, 360, 1122, 361, 362, 363, 365, 367, 364, 366,
	368, 369, 370, 371, 1211, 1212, 372, 1135, 278, 0,
	0, 0, 0, 0, 373, 374, 375, 1195, 0, 0,
	0, 376, 0, 377, 378, 379, 0, 0, 1222, 380,
	381, 382, 1208, 1209, 383, 384, 385, 386, 387, 388,
	389, 390, 391, 0, 392, 1218, 0, 1145, 393, 0,
	394, 395, 396, 397, 398, 1181, 1182, 1185, 484, 1224,
	399, 400, 0, 401, 402, 403, 404, 405, 0, 0,
	0, 279, 406, 407, 408, 0, 1223, 409, 1190, 1191,
	0, 1151, 0, 410, 411, 1225, 1183, 1226, 412, 413,
	414, 1227, 415, 0, 0, 0, 416, 417, 418, 419,
	420, 421, 0, 422, 424, 423, 0, 425, 1219, 1228,
	426, 427, 1229, 0, 428, 429, 430, 431, 432, 433,
	436, 1174, 1173, 434, 435, 437, 438, 0, 439, 440,
	442, 445, 441, 443, 444, 446, 459, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 458, 461,
	0, 460, 1230, 462, 463, 464, 465, 472, 474, 475,
	470, 471, 473, 476, 477, 479, 467, 468, 469, 1231,
	478, 466, 1113, 280, 1232, 480, 481, 482, 1136, 1184,
	483, 1198, 485, 486, 0, 0, 487, 0, 0, 0,
	489, 490, 491, 0, 0, 492, 493, 679, 1233, 494,
	1234, 1213, 495, 496, 1123, 497, 498, 499, 500, 501,
	502, 503, 504, 505, 0, 506, 507, 681, 508, 509,
	510, 682, 511, 512, 513, 1214, 514, 684, 515, 516,
	0, 517, 518, 0, 519, 520, 521, 522, 523, 524,
	525, 1194, 526, 527, 529, 528, 530, 0, 531, 0,
	532, 533, 534, 0, 0, 0, 0, 0, 535, 537,
	0, 538, 539, 540, 541, 536, 542, 543, 544, 545,
	546, 0, 547, 548, 549, 1235, 550, 551, 552, 553,
	554, 1124, 555, 0, 556, 557, 563, 564, 565, 558,
	559, 566, 567, 568, 569, 570, 0, 572, 573, 571,
	574, 575, 576, 1177, 577, 578, 560, 561, 579, 580,
	1236, 581, 582, 583, 584, 585, 586, 587, 1192, 0,
	588, 0, 589, 590, 591, 592, 594, 562, 595, 600,
	601, 1239, 596, 597, 598, 599, 1215, 603, 604, 0,
	605, 606, 1110, 602, 593, 0, 607, 608, 609, 610,
	611, 612, 613, 614, 0, 615, 1204, 1205, 1206, 1207,
	0, 624, 0, 616, 617, 618, 1216, 619, 1217, 1134,
	620, 621, 622, 623, 0, 625, 626, 0, 1117, 627,
	628, 629, 631, 632, 630, 633, 1178, 634, 0, 0,
	635, 636, 637, 696, 1201, 1238, 0, 639, 638, 640,
	641, 699, 642, 643, 0, 0, 0, 0, 644, 645,
	700, 646, 647, 648, 1114, 0, 0, 0, 1685, 0,
	1156, 1128, 1129, 1130, 1126, 1127, 1139, 1109, 0, 0,
	0, 0, 0, 0, 1107, 1108, 0, 281, 283, 282,
	284, 285, 286, 287, 1140, 288, 289, 0, 1138, 0,
	0, 0, 1180, 1144, 0, 0, 0, 290, 291, 1220,
	292, 293, 294, 295, 296, 297, 650, 1193, 0, 298,
	1200, 299, 1199, 0, 1210, 300, 301, 302, 303, 304,
	305, 1146, 1179, 1111, 306, 1240, 1241, 657, 0, 307,
	308, 1186, 0, 1167, 0, 309, 310, 311, 312, 313,
	314, 315, 0, 0, 317, 318, 319, 316, 320, 0,
	321, 0, 322, 323, 324, 325, 326, 327, 0, 328,
	329, 330, 1221, 331, 332, 333, 1170, 1168, 1169, 1176,
	1172, 1171, 1175, 334, 335, 336, 337, 338, 1203, 339,
	341, 1197, 1196, 1116, 344, 340, 342, 0, 345, 343,
	346, 0, 347, 348, 349, 0, 0, 350, 1188, 352,
	0, 353, 354, 355, 0, 356, 357, 358, 0, 359,
	360, 1122, 361, 362, 363, 365, 367, 364, 366, 368,
	369, 370, 371, 1211, 1212, 372, 1135, 278, 0, 0,
	0, 0, 0, 373, 374, 375, 1195, 0, 0, 0,
	376, 0, 377, 378, 379, 0, 0, 1222, 380, 381,
	382, 1208, 1209, 383, 384, 385, 386, 387, 388, 389,
	390, 391, 0, 392, 1218, 0, 1145, 393, 0, 394,
	395, 396, 397, 398, 1181, 1182, 1185, 484, 1224, 399,
	400, 0, 401, 402, 403, 404, 405, 0, 0, 0,
	279, 406, 407, 408, 0, 1223, 409, 1190, 1191, 0,
	1151, 0, 410, 411, 1225, 1183, 1226, 412, 413, 414,
	1227, 415, 0, 0, 0, 416, 417, 418, 419, 420,
	421, 0, 422, 424, 423, 0, 425, 1219, 1228, 426,
	427, 1229, 0, 428, 429, 430, 431, 432, 433, 436,
	1174, 1173, 434, 435, 437, 438, 0, 439, 440, 442,
	445, 441, 443, 444, 446, 459, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 458, 461, 0,
	460, 1230, 462, 463, 464, 465, 472, 474, 475, 470,
	471, 473, 476, 477, 479, 467, 468, 469, 1231, 478,
	466, 1113, 280, 1232, 480, 481, 482, 1136, 1184, 483,
	1198, 485, 486, 0, 0, 487, 0, 0, 0, 489,
	490, 491, 0, 0, 492, 493, 679, 1233, 494, 1234,
	1213, 495, 496, 1123, 497, 498, 499, 500, 501, 502,
	503, 504, 505, 0, 506, 507, 681, 508, 509, 510,
	682, 511, 512, 513, 1214, 514, 684, 515, 516, 0,
	517, 518, 0, 519, 520, 521, 522, 523, 524, 525,
	1194, 526, 527, 529, 528, 530, 0, 531, 0, 532,
	533, 534, 0, 0, 0, 0, 0, 535, 537, 0,
	538, 539, 540, 541, 536, 542, 543, 544, 545, 546,
	0, 547, 548, 549, 1235, 550, 551, 552, 553, 554,
	1124, 555, 0, 556, 557, 563, 564, 565, 558, 559,
	566, 567, 568, 569, 570, 0, 572, 573, 571, 574,
	575, 576, 1177, 577, 578, 560, 561, 579, 580, 1236,
	581, 582, 583, 584, 585, 586, 587, 1192, 0, 588,
	0, 589, 590, 591, 592, 594, 562, 595, 600, 601,
	1239, 596, 597, 598, 599, 1215, 603, 604, 0, 605,
	606, 1110, 602, 593, 0, 607, 608, 609, 610, 611,
	612, 613, 614, 0, 615, 1204, 1205, 1206, 1207, 0,
	624, 0, 616, 617, 618, 1216, 619, 1217, 1134, 620,
	621, 622, 623, 0, 625, 626, 0, 1117, 627, 628,
	629, 631, 632, 630, 633, 1178, 634, 0, 0, 635,
	636, 637, 696, 1201, 1238, 0, 639, 638, 640, 641,
	699, 642, 643, 0, 0, 0, 0, 644, 645, 700,
	646, 647, 648, 1114, 0, 0, 0, 1672, 0, 1156,
	1128, 1129, 1130, 1126, 1127, 1139, 1109, 0, 0, 0,
	0, 0, 0, 1107, 1108, 0, 281, 283, 282, 284,
	285, 286, 287, 1140, 288, 289, 0, 1138, 0, 0,
	0, 1180, 1144, 0, 0, 0, 290, 291, 1220, 292,
	293, 294, 295, 296, 297, 650, 1193, 0, 298, 1200,
	299, 1199, 0, 1210, 300, 301, 302, 303, 304, 305,
	1146, 1179, 1111, 306, 1240, 1241, 657, 0, 307, 308,
	1186, 0, 1167, 0, 309, 310, 311, 312, 313, 314,
	315, 0, 0, 317, 318, 319, 316, 320, 0, 321,
	0, 322, 323, 324, 325, 326, 327, 0, 328, 329,
	330, 1221, 331, 332, 333, 1170, 1168, 1169, 1176, 1172,
	1171, 1175, 334, 335, 336, 337, 338, 1203, 339, 341,
	1197, 1196, 1116, 344, 340, 342, 0, 345, 343, 346,
	0, 347, 348, 349, 0, 0, 350, 1188, 352, 0,
	353, 354, 355, 0, 356, 357, 358, 0, 359, 360,
	1122, 361, 362, 363, 365, 367, 364, 366, 368, 369,
	370, 371, 1211, 1212, 372, 1135, 278, 0, 0, 0,
	0, 0, 373, 374, 375, 1195, 0, 0, 0, 376,
	0, 377, 378, 379, 0, 0, 1222, 380, 381, 382,
	1208, 1209, 383, 384, 385, 386, 387, 388, 389, 390,
	391, 0, 392, 1218, 0, 1145, 393, 0, 394, 395,
	396, 397, 398, 1181, 1182, 1185, 484, 1224, 399, 400,
	0, 401, 402, 403, 404, 405, 0, 0, 0, 279,
	406, 407, 408, 0, 1223, 409, 1190, 1191, 0, 1151,
	0, 410, 411, 1225, 1183, 1226, 412, 413, 414, 1227,
	415, 0, 0, 0, 416, 417, 418, 419, 420, 421,
	0, 422, 424, 423, 0, 425, 1219, 1228, 426, 427,
	1229, 0, 428, 429, 430, 431, 432, 433, 436, 1174,
	1173, 434, 435, 437, 438, 0, 439, 440, 442, 445,
	441, 443, 444, 446, 459, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 458, 461, 0, 460,
	1230, 462, 463, 464, 465, 472, 474, 475, 470, 471,
	473, 476, 477, 479, 467, 468, 469, 1231, 478, 466,
	1113, 280, 1232, 480, 481, 482, 1136, 1184, 483, 1198,
	485, 486, 0, 0, 487, 0, 0, 0, 489, 490,
	491, 0, 0, 492, 493, 679, 1233, 494, 1234, 1213,
	495, 496, 1123, 497, 498, 499, 500, 501, 502, 503,
	504, 505, 0, 506, 507, 681, 508, 509, 510, 682,
	511, 512, 513, 1214, 514, 684, 515, 516, 0, 517,
	518, 0, 519, 520, 521, 522, 523, 524, 525, 1194,
	526, 527, 529, 528, 530, 0, 531, 0, 532, 533,
	534, 0, 0, 0, 0, 0, 535, 537, 0, 538,
	539, 540, 541, 536, 542, 543, 544, 545, 546, 0,
	547, 548, 549, 1235, 550, 551, 552, 553, 554, 1124,
	555, 0, 556, 557, 563, 564, 565, 558, 559, 566,
	567, 568, 569, 570, 0, 572, 573, 571, 574, 575,
	576, 1177, 577, 578, 560, 561, 579, 580, 1236, 581,
	582, 583, 584, 585, 586, 587, 1192, 0, 588, 0,
	589, 590, 591, 592, 594, 562, 595, 600, 601, 1239,
	596, 597, 598, 599, 1215, 603, 604, 0, 605, 606,
	1110, 602, 593, 0, 607, 608, 609, 610, 611, 612,
	613, 614, 0, 615, 1204, 1205, 1206, 1207, 0, 624,
	0, 616, 617, 618, 1216, 619, 1217, 1134, 620, 621,
	622, 623, 0, 625, 626, 0, 1117, 627, 628, 629,
	631, 632, 630, 633, 1178, 634, 0, 0, 635, 636,
	637, 696, 1201, 1238, 0, 639, 638, 640, 641, 699,
	642, 643, 0, 0, 0, 0, 644, 645, 700, 646,
	647, 648, 1114, 0, 0, 0, 1667, 0, 1156, 1128,
	1129, 1130, 1126, 1127, 1139, 1109, 0, 0, 0, 0,
	0, 0, 1107, 1108, 0, 281, 283, 282, 284, 285,
	286, 287, 1140, 288, 289, 0, 1138, 0, 0, 0,
	1180, 1144, 0, 0, 0, 290, 291, 1220, 292, 293,
	294, 295, 296, 297, 650, 1193, 0, 298, 1200, 299,
	1199, 0, 1210, 300, 301, 302, 303, 304, 305, 1146,
	1179, 1111, 306, 1240, 1241, 657, 0, 307, 308, 1186,
	0, 1167, 0, 309, 310, 311, 312, 313, 314, 315,
	0, 0, 317, 318, 319, 316, 320, 0, 321, 0,
	322, 323, 324, 325, 326, 327, 0, 328, 329, 330,
	1221, 331, 332, 333, 1170, 1168, 1169, 1176, 1172, 1171,
	1175, 334, 335, 336, 337, 338, 1203, 339, 341, 1197,
	1196, 1116, 344, 340, 342, 0, 345, 343, 346, 0,
	347, 348, 349, 0, 0, 350, 1188, 352, 0, 353,
	354, 355, 0, 356, 357, 358, 0, 359, 360, 1122,
	361, 362, 363, 365, 367, 364, 366, 368, 369, 370,
	371, 1211, 1212, 372, 1135, 278, 0, 0, 0, 0,
	0, 373, 374, 375, 1195, 0, 0, 0, 376, 0,
	377, 378, 379, 0, 0, 1222, 380, 381, 382, 1208,
	1209, 383, 384, 385, 386, 387, 388, 389, 390, 391,
	0, 392, 1218, 0, 1145, 393, 0, 394, 395, 396,
	397, 398, 1181, 1182, 1185, 484, 1224, 399, 400, 0,
	401, 402, 403, 404, 405, 0, 0, 0, 279, 406,
	407, 408, 0, 1223, 409, 1190, 1191, 0, 1151, 0,
	410, 411, 1225, 1183, 1226, 412, 413, 414, 1227, 415,
	0, 0, 0, 416, 417, 418, 419, 420, 421, 0,
	422, 424, 423, 0, 425, 1219, 1228, 426, 427, 1229,
	0, 428, 429, 430, 431, 432, 433, 436, 1174, 1173,
	434, 435, 437, 438, 0, 439, 440, 442, 445, 441,
	443, 444, 446, 459, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 458, 461, 0, 460, 1230,
	462, 463, 464, 465, 472, 474, 475, 470, 471, 473,
	476, 477, 479, 467, 468, 469, 1231, 478, 466, 1113,
	280, 1232, 480, 481, 482, 1136, 1184, 483, 1198, 485,
	486, 0, 0, 487, 0, 0, 0, 489, 490, 491,
	0, 0, 492, 493, 679, 1233, 494, 1234, 1213, 495,
	496, 1123, 497, 498, 499, 500, 501, 502, 503, 504,
	505, 0, 506, 507, 681, 508, 509, 510, 682, 511,
	512, 513, 1214, 514, 684, 515, 516, 0, 517, 518,
	0, 519, 520, 521, 522, 523, 524, 525, 1194, 526,
	527, 529, 528, 530, 0, 531, 0, 532, 533, 534,
	0, 0, 0, 0, 0, 535, 537, 0, 538, 539,
	540, 541, 536, 542, 543, 544, 545, 546, 0, 547,
	548, 549, 1235, 550, 551, 552, 553, 554, 1124, 555,
	0, 556, 557, 563, 564, 565, 558, 559, 566, 567,
	568, 569, 570, 0, 572, 573, 571, 574, 575, 576,
	1177, 577, 578, 560, 561, 579, 580, 1236, 581, 582,
	583, 584, 585, 586, 587, 1192, 0, 588, 0, 589,
	590, 591, 592, 594, 562, 595, 600, 601, 1239, 596,
	597, 598, 599, 1215, 603, 604, 0, 605, 606, 1110,
	602, 593, 0, 607, 608, 609, 610, 611, 612, 613,
	614, 0, 615, 1204, 1205, 1206, 1207, 0, 624, 0,
	616, 617, 618, 1216, 619, 1217, 1134, 620, 621, 622,
	623, 0, 625, 626, 0, 1117, 627, 628, 629, 631,
	632, 630, 633, 1178, 634, 0, 0, 635, 636, 637,
	696, 1201, 1238, 0, 639, 638, 640, 641, 699, 642,
	643, 0, 0, 0, 0, 644, 645, 700, 646, 647,
	648, 1114, 0, 0, 0, 1568, 0, 1156, 1128, 1129,
	1130, 1126, 1127, 1139, 1109, 0, 0, 0, 0, 0,
	0, 1107, 1108, 0, 281, 283, 282, 284, 285, 286,
	287, 1140, 288, 289, 0, 1138, 0, 0, 0, 1180,
	1144, 0, 0, 0, 290, 291, 1220, 292, 293, 294,
	295, 296, 297, 650, 1193, 0, 298, 1200, 299, 1199,
	0, 1210, 300, 301, 302, 303, 304, 305, 1146, 1179,
	1111, 306, 1240, 1241, 657, 0, 307, 308, 1186, 0,
	1167, 0, 309, 310, 311, 312, 313, 314, 315, 0,
	0, 317, 318, 319, 316, 320, 0, 321, 0, 322,
	323, 324, 325, 326, 327, 0, 328, 329, 330, 1221,
	331, 332, 333, 1170, 1168, 1169, 1176, 1172, 1171, 1175,
	334, 335, 336, 337, 338, 1203, 339, 341, 1197, 1196,
	1116, 344, 340, 342, 0, 345, 343, 346, 0, 347,
	348, 349, 0, 0, 350, 1188, 352, 0, 353, 354,
	355, 0, 356, 357, 358, 0, 359, 360, 1122, 361,
	362, 363, 365, 367, 364, 366, 368, 369, 370, 371,
	1211, 1212, 372, 1135, 278, 0, 0, 0, 0, 0,
	373, 374, 375, 1195, 0, 0, 0, 376, 0, 377,
	378, 379, 0, 0, 1222, 380, 381, 382, 1208, 1209,
	383, 384, 385, 386, 387, 388, 389, 390, 391, 0,
	392, 1218, 0, 1145, 393, 0, 394, 395, 396, 397,
	398, 1567, 1182, 1185, 484, 1224, 399, 400, 0, 401,
	402, 403, 404, 405, 0, 0, 0, 279, 406, 407,
	408, 0, 1223, 409, 1190, 1191, 0, 1151, 0, 410,
	411, 1225, 1183, 1226, 412, 413, 414, 1227, 415, 0,
	0, 0, 416, 417, 418, 419, 420, 421, 0, 422,
	424, 423, 0, 425, 1219, 1228, 426, 427, 1229, 0,
	428, 429, 430, 431, 432, 433, 436, 1174, 1173, 434,
	435, 437, 438, 0, 439, 440, 442, 445, 441, 443,
	444, 446, 459, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 458, 461, 0, 460, 1230, 462,
	463, 464, 465, 472, 474, 475, 470, 471, 473, 476,
	477, 479, 467, 468, 469, 1231, 478, 466, 1113, 280,
	1232, 480, 481, 482, 1136, 1184, 483, 1198, 485, 486,
	0, 0, 487, 0, 0, 0, 489, 490, 491, 0,
	0, 492, 493, 679, 1233, 494, 1234, 1213, 495, 496,
	1123, 497, 498, 499, 500, 501, 502, 503, 504, 505,
	0, 506, 507, 681, 508, 509, 510, 682, 511, 512,
	513, 1214, 514, 684, 515, 516, 0, 517, 518, 0,
	519, 520, 521, 522, 523, 524, 525, 1194, 526, 527,
	529, 528, 530, 0, 531, 0, 532, 533, 534, 0,
	0, 0, 0, 0, 535, 537, 0, 538, 539, 540,
	541, 536, 542, 543, 544, 545, 546, 0, 547, 548,
	549, 1235, 550, 551, 552, 553, 554, 1124, 555, 0,
	556, 557, 563, 564, 565, 558, 559, 566, 567, 568,
	569, 570, 0, 572, 573, 571, 574, 575, 576, 1177,
	577, 578, 560, 561, 579, 580, 1236, 581, 582, 583,
	584, 585, 586, 587, 1192, 0, 588, 0, 589, 590,
	591, 592, 594, 562, 595, 600, 601, 1239, 596, 597,
	598, 599, 1215, 603, 604, 0, 605, 606, 1110, 602,
	593, 0, 607, 608, 609, 610, 611, 612, 613, 614,
	0, 615, 1204, 1205, 1206, 1207, 0, 624, 0, 616,
	617, 618, 1216, 619, 1217, 1134, 620, 621, 622, 623,
	0, 625, 626, 0, 1117, 627, 628, 629, 631, 632,
	630, 633, 1178, 634, 0, 0, 635, 636, 637, 696,
	1201, 1238, 0, 639, 638, 640, 641, 699, 642, 643,
	0, 0, 0, 0, 644, 645, 700, 646, 647, 648,
	1114, 0, 0, 0, 1562, 0, 1156, 1128, 1129, 1130,
	1126, 1127, 1139, 1109, 0, 0, 0, 0, 0, 0,
	1107, 1108, 0, 281, 283, 282, 284, 285, 286, 287,
	1140, 288, 289, 0, 1138, 0, 0, 0, 1180, 1144,
	0, 0, 0, 290, 291, 1220, 292, 293, 294, 295,
	296, 297, 650, 1193, 0, 298, 1200, 299, 1199, 0,
	1210, 300, 301, 302, 303, 304, 305, 1146, 1179, 1111,
	306, 1240, 1241, 657, 0, 307, 308, 1186, 0, 1167,
	0, 309, 310, 311, 312, 313, 314, 315, 0, 0,
	317, 318, 319, 316, 320, 0, 321, 0, 322, 323,
	324, 325, 326, 327, 0, 328, 329, 330, 1221, 331,
	332, 333, 1170, 1168, 1169, 1176, 1172, 1171, 1175, 334,
	335, 336, 337, 338, 1203, 339, 341, 1197, 1196, 1116,
	344, 340, 342, 0, 345, 343, 346, 0, 347, 348,
	349, 0, 0, 350, 1188, 352, 0, 353, 354, 355,
	0, 356, 357, 358, 0, 359, 360, 1122, 361, 362,
	363, 365, 367, 364, 366, 368, 369, 370, 371, 1211,
	1212, 372, 1135, 278, 0, 0, 0, 0, 0, 373,
	374, 375, 1195, 0, 0, 0, 376, 0, 377, 378,
	379, 0, 0, 1222, 380, 381, 382, 1208, 1209, 383,
	384, 385, 386, 387, 388, 389, 390, 391, 0, 392,
	1218, 0, 1145, 393, 0, 394, 395, 396, 397, 398,
	1561, 1182, 1185, 484, 1224, 399, 400, 0, 401, 402,
	403, 404, 405, 0, 0, 0, 279, 406, 407, 408,
	0, 1223, 409, 1190, 1191, 0, 1151, 0, 410, 411,
	1225, 1183, 1226, 412, 413, 414, 1227, 415, 0, 0,
	0, 416, 417, 418, 419, 420, 421, 0, 422, 424,
	423, 0, 425, 1219, 1228, 426, 427, 1229, 0, 428,
	429, 430, 431, 432, 433, 436, 1174, 1173, 434, 435,
	437, 438, 0, 439, 440, 442, 445, 441, 443, 444,
	446, 459, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 458, 461, 0, 460, 1230, 462, 463,
	464, 465, 472, 474, 475, 470, 471, 473, 476, 477,
	479, 467, 468, 469, 1231, 478, 466, 1113, 280, 1232,
	480, 481, 482, 1136, 1184, 483, 1198, 485, 486, 0,
	0, 487, 0, 0, 0, 489, 490, 491, 0, 0,
	492, 493, 679, 1233, 494, 1234, 1213, 495, 496, 1123,
	497, 498, 499, 500, 501, 502, 503, 504, 505, 0,
	506, 507, 681, 508, 509, 510, 682, 511, 512, 513,
	1214, 514, 684, 515, 516, 0, 517, 518, 0, 519,
	520, 521, 522, 523, 524, 525, 1194, 526, 527, 529,
	528, 530, 0, 531, 0, 532, 533, 534, 0, 0,
	0, 0, 0, 535, 537, 0, 538, 539, 540, 541,
	536, 542, 543, 544, 545, 546, 0, 547, 548, 549,
	1235, 550, 551, 552, 553, 554, 1124, 555, 0, 556,
	557, 563, 564, 565, 558, 559, 566, 567, 568, 569,
	570, 0, 572, 573, 571, 574, 575, 576, 1177, 577,
	578, 560, 561, 579, 580, 1236, 581, 582, 583, 584,
	585, 586, 587, 1192, 0, 588, 0, 589, 590, 591,
	592, 594, 562, 595, 600, 601, 1239, 596, 597, 598,
	599, 1215, 603, 604, 0, 605, 606, 1110, 602, 593,
	0, 607, 608, 609, 610, 611, 612, 613, 614, 0,
	615, 1204, 1205, 1206, 1207, 0, 624, 0, 616, 617,
	618, 1216, 619, 1217, 1134, 620, 621, 622, 623, 0,
	625, 626, 0, 1117, 627, 628, 629, 631, 632, 630,
	633, 1178, 634, 0, 0, 635, 636, 637, 696, 1201,
	1238, 0, 639, 638, 640, 641, 699, 642, 643, 0,
	0, 0, 0, 644, 645, 700, 646, 647, 648, 1114,
	0, 0, 0, 1555, 0, 1156, 1128, 1129, 1130, 1126,
	1127, 1139, 1109, 0, 0, 0, 0, 0, 0, 1107,
	1108, 0, 281, 283, 282, 284, 285, 286, 287, 1140,
	288, 289, 0, 1138, 0, 0, 0, 1180, 1144, 0,
	0, 0, 290, 291, 1220, 292, 293, 294, 295, 296,
	297, 650, 1193, 0, 298, 1200, 299, 1199, 0, 1210,
	300, 301, 302, 303, 304, 305, 1146, 1179, 1111, 306,
	1240, 1241, 657, 0, 307, 308, 1186, 0, 1167, 0,
	309, 310, 311, 312, 313, 314, 315, 0, 0, 317,
	318, 319, 316, 320, 0, 321, 0, 322, 323, 324,
	325, 326, 327, 0, 328, 329, 330, 1221, 331, 332,
	333, 1170, 1168, 1169, 1176, 1172, 1171, 1175, 334, 335,
	336, 337, 338, 1203, 339, 341, 1197, 1196, 1116, 344,
	340, 342, 0, 345, 343, 346, 0, 347, 348, 349,
	0, 0, 350, 1188, 352, 0, 353, 354, 355, 0,
	356, 357, 358, 0, 359, 360, 1122, 361, 362, 363,
	365, 367, 364, 366, 368, 369, 370, 371, 1211, 1212,
	372, 1135, 278, 0, 0, 0, 0, 0, 373, 374,
	375, 1195, 0, 0, 0, 376, 0, 377, 378, 379,
	0, 0, 1222, 380, 381, 382, 1208, 1209, 383, 384,
	385, 386, 387, 388, 389, 390, 391, 0, 392, 1218,
	0, 1145, 393, 0, 394, 395, 396, 397, 398, 1181,
	1182, 1185, 484, 1224, 399, 400, 0, 401, 402, 403,
	404, 405, 0, 0, 0, 279, 406, 407, 408, 0,
	1223, 409, 1190, 1191, 0, 1151, 0, 410, 411, 1225,
	1183, 1226, 412, 413, 414, 1227, 415, 0, 0, 0,
	416, 417, 418, 419, 420, 421, 0, 422, 424, 423,
	0, 425, 1219, 1228, 426, 427, 1229, 0, 428, 429,
	430, 431, 432, 433, 436, 1174, 1173, 434, 435, 437,
	438, 0, 439, 440, 442, 445, 441, 443, 444, 446,
	459, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 458, 461, 0, 460, 1230, 462, 463, 464,
	465, 472, 474, 475, 470, 471, 473, 476, 477, 479,
	467, 468, 469, 1231, 478, 466, 1113, 280, 1232, 480,
	481, 482, 1136, 1184, 483, 1198, 485, 486, 0, 0,
	487, 0, 0, 0, 489, 490, 491, 0, 0, 492,
	493, 679, 1233, 494, 1234, 1213, 495, 496, 1123, 497,
	498, 499, 500, 501, 502, 503, 504, 505, 0, 506,
	507, 681, 508, 509, 510, 682, 511, 512, 513, 1214,
	514, 684, 515, 516, 0, 517, 518, 0, 519, 520,
	521, 522, 523, 524, 525, 1194, 526, 527, 529, 528,
	530, 0, 531, 0, 532, 533, 534, 0, 0, 0,
	0, 0, 535, 537, 0, 538, 539, 540, 541, 536,
	542, 543, 544, 545, 546, 0, 547, 548, 549, 1235,
	550, 551, 552, 553, 554, 1124, 555, 0, 556, 557,
	563, 564, 565, 558, 559, 566, 567, 568, 569, 570,
	0, 572, 573, 571, 574, 575, 576, 1177, 577, 578,
	560, 561, 579, 580, 1236, 581, 582, 583, 584, 585,
	586, 587, 1192, 0, 588, 0, 589, 590, 591, 592,
	594, 562, 595, 600, 601, 1239, 596, 597, 598, 599,
	1215, 603, 604, 0, 605, 606, 1110, 602, 593, 0,
	607, 608, 609, 610, 611, 612, 613, 614, 0, 615,
	1204, 1205, 1206, 1207, 0, 624, 0, 616, 617, 618,
	1216, 619, 1217, 1134, 620, 621, 622, 623, 0, 625,
	626, 0, 1117, 627, 628, 629, 631, 632, 630, 633,
	1178, 634, 0, 0, 635, 636, 637, 696, 1201, 1238,
	0, 639, 638, 640, 641, 699, 642, 643, 0, 0,
	0, 0, 644, 645, 700, 646, 647, 648, 1114, 0,
	0, 0, 1533, 0, 1156, 1128, 1129, 1130, 1126, 1127,
	1139, 1109, 0, 0, 0, 0, 0, 0, 1107, 1108,
	0, 281, 283, 282, 284, 285, 286, 287, 1140, 288,
	289, 0, 1138, 0, 0, 0, 1180, 1144, 0, 0,
	0, 290, 291, 1220, 292, 293, 294, 295, 296, 297,
	650, 1193, 0, 298, 1200, 299, 1199, 0, 1210, 300,
	301, 302, 303, 304, 305, 1146, 1179, 1111, 306, 1240,
	1241, 657, 0, 307, 308, 1186, 0, 1167, 0, 309,
	310, 311, 312, 313, 314, 315, 0, 0, 317, 318,
	319, 316, 320, 0, 321, 0, 322, 323, 324, 325,
	326, 327, 0, 328, 329, 330, 1221, 331, 332, 333,
	1170, 1168, 1169, 1176, 1172, 1171, 1175, 334, 335, 336,
	337, 338, 1203, 339, 341, 1197, 1196, 1116, 344, 340,
	342, 0, 345, 343, 346, 0, 347, 348, 349, 0,
	0, 350, 1188, 352, 0, 353, 354, 355, 0, 356,
	357, 358, 0, 359, 360, 1122, 361, 362, 363, 365,
	367, 364, 366, 368, 369, 370, 371, 1211, 1212, 372,
	1135, 278, 0, 0, 0, 0, 0, 373, 374, 375,
	1195, 0, 0, 0, 376, 0, 377, 378, 379, 0,
	0, 1222, 380, 381, 382, 1208, 1209, 383, 384, 385,
	386, 387, 388, 389, 390, 391, 0, 392, 1218, 0,
	1145, 393, 0, 394, 395, 396, 397, 398, 1181, 1182,
	1185, 484, 1224, 399, 400, 0, 401, 402, 403, 404,
	405, 0, 0, 0, 279, 406, 407, 408, 0, 1223,
	409, 1190, 1191, 0, 1151, 0, 410, 411, 1225, 1183,
	1226, 412, 413, 414, 1227, 415, 0, 0, 0, 416,
	417, 418, 419, 420, 421, 0, 422, 424, 423, 0,
	425, 1219, 1228, 426, 427, 1229, 0, 428, 429, 430,
	431, 432, 433, 436, 1174, 1173, 434, 435, 437, 438,
	0, 439, 440, 442, 445, 441, 443, 444, 446, 459,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 458, 461, 0, 460, 1230, 462, 463, 464, 465,
	472, 474, 475, 470, 471, 473, 476, 477, 479, 467,
	468, 469, 1231, 478, 466, 1113, 280, 1232, 480, 481,
	482, 1136, 1184, 483, 1198, 485, 486, 0, 0, 487,
	0, 0, 0, 489, 490, 491, 0, 0, 492, 493,
	679, 1233, 494, 1234, 1213, 495, 496, 1123, 497, 498,
	499, 500, 501, 502, 503, 504, 505, 0, 506, 507,
	681, 508, 509, 510, 682, 511, 512, 513, 1214, 514,
	684, 515, 516, 0, 517, 518, 0, 519, 520, 521,
	522, 523, 524, 525, 1194, 526, 527, 529, 528, 530,
	0, 531, 0, 532, 533, 534, 0, 0, 0, 0,
	0, 535, 537, 0, 538, 539, 540, 541, 536, 542,
	543, 544, 545, 546, 0, 547, 548, 549, 1235, 550,
	551, 552, 553, 554, 1124, 555, 0, 556, 557, 563,
	564, 565, 558, 559, 566, 567, 568, 569, 570, 0,
	572, 573, 571, 574, 575, 576, 1177, 577, 578, 560,
	561, 579, 580, 1236, 581, 582, 583, 584, 585, 586,
	587, 1192, 0, 588, 0, 589, 590, 591, 592, 594,
	562, 595, 600, 601, 1239, 596, 597, 598, 599, 1215,
	603, 604, 0, 605, 606, 1110, 602, 593, 0, 607,
	608, 609, 610, 611, 612, 613, 614, 0, 615, 1204,
	1205, 1206, 1207, 0, 624, 0, 616, 617, 618, 1216,
	619, 1217, 1134, 620, 621, 622, 623, 0, 625, 626,
	0, 1117, 627, 628, 629, 631, 632, 630, 633, 1178,
	634, 0, 0, 635, 636, 637, 696, 1201, 1238, 0,
	639, 638, 640, 641, 699, 642, 643, 0, 0, 0,
	0, 644, 645, 700, 646, 647, 648, 1114, 0, 0,
	0, 1515, 0, 1156, 1128, 1129, 1130, 1126, 1127, 1139,
	1109, 0, 0, 0, 0, 0, 0, 1107, 1108, 0,
	281, 283, 282, 284, 285, 286, 287, 1140, 288, 289,
	0, 1138, 0, 0, 0, 1180, 1144, 0, 0, 0,
	290, 291, 1220, 292, 293, 294, 295, 296, 297, 650,
	1193, 0, 298, 1200, 299, 1199, 0, 1210, 300, 301,
	302, 303, 304, 305, 1146, 1179, 1111, 306, 1240, 1241,
	657, 0, 307, 308, 1186, 0, 1167, 0, 309, 310,
	311, 312, 313, 314, 315, 0, 0, 317, 318, 319,
	316, 320, 0, 321, 0, 322, 323, 324, 325, 326,
	327, 0, 328, 329, 330, 1221, 331, 332, 333, 1170,
	1168, 1169, 1176, 1172, 1171, 1175, 334, 335, 336, 337,
	338, 1203, 339, 341, 1197, 1196, 1116, 344, 340, 342,
	0, 345, 343, 346, 0, 347, 348, 349, 0, 0,
	350, 1188, 352, 0, 353, 354, 355, 0, 356, 357,
	358, 0, 359, 360, 1122, 361, 362, 363, 365, 367,
	364, 1519, 368, 369, 370, 371, 1211, 1212, 372, 1135,
	278, 0, 0, 0, 0, 0, 373, 374, 375, 1195,
	0, 0, 0, 376, 0, 377, 378, 379, 0, 0,
	1222, 380, 381, 382, 1208, 1209, 383, 384, 385, 386,
	387, 388, 389, 390, 391, 0, 392, 1218, 0, 1145,
	393, 0, 394, 395, 396, 397, 398, 1181, 1182, 1185,
	484, 1224, 399, 400, 0, 401, 402, 403, 404, 405,
	0, 0, 0, 279, 406, 407, 408, 0, 1223, 409,
	1190, 1191, 0, 1151, 0, 410, 411, 1225, 1183, 1226,
	412, 413, 414, 1227, 415, 0, 0, 0, 416, 417,
	418, 419, 420, 421, 0, 422, 424, 423, 0, 425,
	1219, 1228, 426, 427, 1229, 0, 428, 429, 430, 431,
	432, 433, 436, 1174, 1173, 434, 435, 437, 438, 0,
	439, 440, 442, 445, 441, 443, 444, 446, 459, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	458, 461, 0, 460, 1230, 462, 463, 464, 465, 472,
	474, 475, 470, 471, 473, 476, 477, 479, 467, 468,
	469, 1231, 478, 466, 1113, 280, 1232, 480, 481, 482,
	1136, 1184, 483, 1198, 485, 486, 0, 0, 487, 0,
	0, 0, 489, 490, 491, 0, 0, 492, 493, 679,
	1233, 494, 1234, 1213, 495, 496, 1123, 497, 498, 499,
	500, 501, 502, 503, 504, 505, 0, 506, 507, 681,
	508, 509, 510, 682, 511, 512, 513, 1214, 514, 684,
	515, 516, 0, 517, 518, 0, 519, 520, 521, 522,
	523, 524, 525, 1194, 526, 527, 529, 528, 530, 0,
	531, 0, 532, 533, 534, 0, 0, 0, 0, 0,
	535, 1520, 0, 538, 539, 540, 541, 536, 542, 543,
	544, 545, 546, 0, 547, 548, 549, 1235, 550, 551,
	552, 553, 554, 1124, 555, 0, 556, 557, 563, 564,
	565, 558, 559, 566, 567, 568, 569, 570, 0, 572,
	573, 571, 574, 575, 576, 1177, 577, 578, 560, 561,
	579, 580, 1236, 581, 582, 583, 584, 585, 586, 587,
	1192, 0, 588, 0, 589, 590, 591, 592, 594, 562,
	595, 600, 601, 1239, 596, 597, 598, 599, 1215, 603,
	604, 0, 605, 606, 1110, 602, 593, 0, 607, 608,
	609, 610, 611, 612, 1518, 614, 0, 615, 1204, 1205,
	1206, 1207, 0, 624, 0, 616, 617, 618, 1216, 619,
	1217, 1134, 620, 621, 622, 623, 0, 625, 626, 0,
	1117, 627, 628, 629, 631, 632, 630, 633, 1178, 634,
	0, 0, 635, 636, 637, 696, 1201, 1238, 0, 639,
	638, 640, 641, 699, 642, 643, 0, 0, 0, 0,
	644, 645, 700, 646, 647, 648, 1114, 0, 0, 0,
	1364, 0, 1156, 1128, 1129, 1130, 1126, 1127, 1139, 1109,
	0, 0, 0, 0, 0, 0, 1107, 1108, 0, 281,
	283, 282, 284, 285, 286, 287, 1140, 288, 289, 0,
	1138, 0, 0, 0, 1180, 1144, 0, 0, 0, 290,
	291, 1220, 292, 293, 294, 295, 296, 297, 650, 1193,
	0, 298, 1200, 299, 1199, 0, 1210, 300, 301, 302,
	303, 304, 305, 1146, 1179, 1111, 306, 1240, 1241, 657,
	0, 307, 308, 1186, 0, 1167, 0, 309, 310, 311,
	312, 313, 314, 315, 0, 0, 317, 318, 319, 316,
	320, 0, 321, 0, 322, 323, 324, 325, 326, 327,
	0, 328, 329, 330, 1221, 331, 332, 333, 1170, 1168,
	1169, 1176, 1172, 1171, 1175, 334, 335, 336, 337, 338,
	1203, 339, 341, 1197, 1196, 1116, 344, 340, 342, 0,
	345, 343, 346, 0, 347, 348, 349, 0, 0, 350,
	1188, 352, 0, 353, 354, 355, 0, 356, 357, 358,
	0, 359, 360, 1122, 361, 362, 363, 365, 367, 364,
	366, 368, 369, 370, 371, 1211, 1212, 372, 1135, 278,
	0, 0, 0, 0, 0, 373, 374, 375, 1195, 0,
	0, 0, 376, 0, 377, 378, 379, 0, 0, 1222,
	380, 381, 382, 1208, 1209, 383, 384, 385, 386, 387,
	388, 389, 390, 391, 0, 392, 1218, 0, 1145, 393,
	0, 394, 395, 396, 397, 398, 1181, 1182, 1185, 484,
	1224, 399, 400, 0, 401, 402, 403, 404, 405, 0,
	0, 0, 279, 406, 407, 408, 0, 1223, 409, 1190,
	1191, 0, 1151, 0, 410, 411, 1225, 1183, 1226, 412,
	413, 414, 1227, 415, 0, 0, 0, 416, 417, 418,
	419, 420, 421, 0, 422, 424, 423, 0, 425, 1219,
	1228, 426, 427, 1229, 0, 428, 429, 430, 431, 432,
	433, 436, 1174, 1173, 434, 435, 437, 438, 0, 439,
	440, 442, 445, 441, 443, 444, 446, 459, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 458,
	461, 0, 460, 1230, 462, 463, 464, 465, 472, 474,
	475, 470, 471, 473, 476, 477, 479, 467, 468, 469,
	1231, 478, 466, 1113, 280, 1232, 480, 481, 482, 1136,
	1184, 483, 1198, 485, 486, 0, 0, 487, 0, 0,
	0, 489, 490, 491, 0, 0, 492, 493, 679, 1233,
	494, 1234, 1213, 495, 496, 1123, 497, 498, 499, 500,
	501, 502, 503, 504, 505, 0, 506, 507, 681, 508,
	509, 510, 682, 511, 512, 513, 1214, 514, 684, 515,
	516, 0, 517, 518, 0, 519, 520, 521, 522, 523,
	524, 525, 1194, 526, 527, 529, 528, 530, 0, 531,
	0, 532, 533, 534, 0, 0, 0, 0, 0, 535,
	537, 0, 538, 539, 540, 541, 536, 542, 543, 544,
	545, 546, 0, 547, 548, 549, 1235, 550, 551, 552,
	553, 554, 1124, 555, 0, 556, 557, 563, 564, 565,
	558, 559, 566, 567, 568, 569, 570, 0, 572, 573,
	571, 574, 575, 576, 1177, 577, 578, 560, 561, 579,
	580, 1236, 581, 582, 583, 584, 585, 586, 587, 1192,
	0, 588, 0, 589, 590, 591, 592, 594, 562, 595,
	600, 601, 1239, 596, 597, 598, 599, 1215, 603, 604,
	0, 605, 606, 1110, 602, 593, 0, 607, 608, 609,
	610, 611, 612, 613, 614, 0, 615, 1204, 1205, 1206,
	1207, 0, 624, 0, 616, 617, 618, 1216, 619, 1217,
	1134, 620, 621, 622, 623, 0, 625, 626, 0, 1117,
	627, 628, 629, 631, 632, 630, 633, 1178, 634, 0,
	0, 635, 636, 637, 696, 1201, 1238, 0, 639, 638,
	640, 641, 699, 642, 643, 0, 0, 0, 0, 644,
	645, 700, 646, 647, 648, 1114, 0, 0, 0, 0,
	0, 1156, 1128, 1129, 1130, 1126, 1127, 1139, 1109, 0,
	0, 0, 0, 0, 0, 1107, 1108, 0, 281, 283,
	282, 284, 285, 286, 287, 1140, 288, 289, 0, 1138,
	0, 0, 0, 1180, 1144, 0, 0, 0, 290, 291,
	1220, 292, 293, 294, 295, 296, 297, 650, 1193, 0,
	298, 1200, 299, 1199, 0, 1210, 300, 301, 302, 303,
	304, 305, 1146, 1179, 1111, 306, 1240, 1241, 657, 0,
	307, 308, 1186, 0, 1167, 0, 309, 310, 311, 312,
	313, 314, 315, 0, 0, 317, 318, 319, 316, 320,
	0, 321, 0, 322, 323, 324, 325, 326, 327, 0,
	328, 329, 330, 1221, 331, 332, 333, 1170, 1168, 1169,
	1176, 1172, 1171, 1175, 334, 335, 336, 337, 338, 1203,
	339, 341, 1197, 1196, 1116, 344, 340, 342, 0, 345,
	343, 346, 0, 347, 348, 349, 0, 0, 350, 1188,
	352, 0, 353, 354, 355, 0, 356, 357, 358, 0,
	359, 360, 1122, 361, 362, 363, 365, 367, 364, 366,
	368, 369, 370, 371, 1211, 1212, 372, 1135, 278, 0,
	0, 0, 0, 0, 373, 374, 375, 1195, 0, 0,
	0, 376, 0, 377, 378, 379, 0, 0, 1222, 380,
	381, 382, 1208, 1209, 383, 384, 385, 386, 387, 388,
	389, 390, 391, 0, 392, 1218, 0, 1145, 393, 0,
	394, 395, 396, 397, 398, 1181, 1182, 1185, 484, 1224,
	399, 400, 0, 401, 402, 403, 404, 405, 0, 0,
	0, 279, 406, 407, 408, 0, 1223, 409, 1190, 1191,
	0, 1151, 0, 410, 411, 1225, 1183, 1226, 412, 413,
	414, 1227, 415, 0, 0, 0, 416, 417, 418, 419,
	420, 421, 0, 422, 424, 423, 0, 425, 1219, 1228,
	426, 427, 1229, 0, 428, 429, 430, 431, 432, 433,
	436, 1174, 1173, 434, 435, 437, 438, 0, 439, 440,
	442, 445, 441, 443, 444, 446, 459, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 458, 461,
	0, 460, 1230, 462, 463, 464, 465, 472, 474, 475,
	470, 471, 473, 476, 477, 479, 467, 468, 469, 1231,
	478, 466, 1113, 280, 1232, 480, 481, 482, 1136, 1184,
	483, 1198, 485, 486, 0, 0, 487, 0, 0, 0,
	489, 490, 491, 0, 0, 492, 493, 679, 1233, 494,
	1234, 1213, 495, 496, 1123, 497, 498, 499, 500, 501,
	502, 503, 504, 505, 0, 506, 507, 681, 508, 509,
	510, 682, 511, 512, 513, 1214, 514, 684, 515, 516,
	0, 517, 518, 0, 519, 520, 521, 522, 523, 524,
	525, 1194, 526, 527, 529, 528, 530, 0, 531, 0,
	532, 533, 534, 0, 0, 0, 0, 0, 535, 537,
	0, 538, 539, 540, 541, 536, 542, 543, 544, 545,
	546, 0, 547, 548, 549, 1235, 550, 551, 552, 553,
	554, 1124, 555, 0, 556, 557, 563, 564, 565, 558,
	559, 566, 567, 568, 569, 570, 0, 572, 573, 571,
	574, 575, 576, 1177, 577, 578, 560, 561, 579, 580,
	1236, 581, 582, 583, 584, 585, 586, 587, 1192, 0,
	588, 0, 589, 590, 591, 592, 594, 562, 595, 600,
	601, 1239, 596, 597, 598, 599, 1215, 603, 604, 0,
	605, 606, 1110, 602, 593, 0, 607, 608, 609, 610,
	611, 612, 613, 614, 0, 615, 1204, 1205, 1206, 1207,
	0, 624, 0, 616, 617, 618, 1216, 619, 1217, 1134,
	620, 621, 622, 623, 0, 625, 626, 0, 1117, 627,
	628, 629, 631, 632, 630, 633, 1178, 634, 0, 0,
	635, 636, 637, 696, 1201, 1238, 0, 639, 638, 640,
	641, 699, 642, 643, 0, 0, 0, 0, 644, 645,
	700, 646, 647, 648, 1114, 0, 0, 0, 0, 0,
	1156, 1128, 1129, 1130, 1126, 1127, 1139, 1109, 0, 0,
	0, 0, 0, 0, 1107, 1108, 0, 281, 283, 282,
	284, 285, 286, 287, 1140, 288, 289, 0, 1138, 0,
	0, 0, 1180, 1144, 0, 0, 0, 290, 291, 1220,
	292, 293, 294, 295, 296, 297, 650, 1193, 0, 298,
	1200, 299, 1199, 0, 1210, 300, 301, 302, 303, 304,
	305, 1146, 1179, 1111, 306, 1240, 1241, 657, 0, 307,
	308, 1186, 0, 1167, 0, 309, 310, 311, 312, 313,
	314, 315, 0, 0, 317, 318, 319, 316, 320, 0,
	321, 0, 322, 323, 324, 325, 326, 327, 0, 328,
	329, 330, 1221, 331, 332, 4875, 1170, 1168, 1169, 1176,
	1172, 1171, 1175, 334, 335, 336, 337, 338, 1203, 339,
	341, 1197, 1196, 1116, 344, 340, 342, 0, 345, 343,
	346, 0, 347, 348, 349, 0, 0, 350, 1188, 352,
	0, 353, 354, 355, 0, 356, 357, 358, 0, 359,
	360, 1122, 361, 362, 363, 365, 367, 364, 366, 368,
	369, 370, 371, 1211, 1212, 372, 1135, 278, 0, 0,
	0, 0, 0, 373, 374, 375, 1195, 0, 0, 0,
	376, 0, 377, 378, 379, 0, 0, 1222, 380, 381,
	382, 1208, 1209, 383, 384, 385, 386, 387, 388, 389,
	390, 391, 0, 392, 1218, 0, 1145, 393, 0, 394,
	395, 396, 397, 398, 1181, 1182, 1185, 484, 1224, 399,
	400, 0, 401, 402, 403, 404, 405, 0, 0, 0,
	279, 406, 407, 408, 0, 1223, 409, 1190, 1191, 0,
	1151, 0, 410, 411, 1225, 1183, 1226, 412, 413, 414,
	1227, 415, 0, 0, 0, 416, 417, 418, 419, 420,
	421, 0, 422, 424, 423, 0, 425, 1219, 1228, 426,
	427, 1229, 0, 428, 429, 430, 431, 432, 433, 436,
	1174, 1173, 434, 435, 437, 438, 0, 439, 440, 442,
	445, 441, 443, 444, 446, 459, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 458, 461, 0,
	460, 1230, 462, 463, 464, 465, 472, 474, 475, 470,
	471, 473, 476, 477, 479, 467, 468, 469, 1231, 478,
	466, 1113, 280, 1232, 480, 481, 482, 1136, 1184, 483,
	1198, 485, 486, 0, 0, 487, 0, 0, 0, 489,
	490, 491, 0, 0, 492, 493, 679, 1233, 494, 1234,
	1213, 495, 496, 1123, 497, 498, 499, 500, 501, 502,
	503, 504, 505, 0, 506, 507, 681, 508, 509, 510,
	682, 511, 512, 513, 1214, 514, 684, 515, 516, 0,
	517, 518, 0, 519, 520, 521, 522, 523, 524, 525,
	1194, 526, 527, 529, 528, 530, 0, 531, 0, 532,
	533, 534, 0, 0, 0, 0, 0, 535, 537, 0,
	538, 539, 540, 541, 536, 542, 543, 544, 545, 546,
	0, 547, 548, 549, 1235, 550, 551, 552, 553, 554,
	1124, 555, 0, 556, 557, 563, 564, 565, 558, 559,
	566, 567, 568, 569, 570, 0, 572, 573, 571, 574,
	575, 576, 1177, 577, 578, 560, 561, 579, 580, 1236,
	581, 582, 583, 584, 585, 586, 587, 1192, 0, 588,
	0, 589, 590, 591, 592, 594, 562, 595, 600, 601,
	1239, 596, 597, 598, 599, 1215, 603, 604, 0, 605,
	606, 1110, 602, 593, 0, 607, 608, 609, 610, 611,
	612, 613, 614, 0, 615, 1204, 1205, 1206, 1207, 0,
	624, 0, 616, 617, 618, 1216, 619, 1217, 1134, 620,
	621, 622, 623, 0, 4874, 626, 0, 1117, 627, 628,
	629, 631, 632, 630, 633, 1178, 634, 0, 0, 635,
	636, 637, 696, 1201, 1238, 0, 639, 638, 640, 641,
	699, 642, 643, 0, 0, 0, 0, 644, 645, 700,
	646, 647, 648, 1114, 0, 0, 0, 0, 0, 1156,
	1128, 1129, 1130, 1126, 1127, 1139, 1109, 0, 0, 0,
	0, 0, 0, 1107, 1108, 0, 281, 283, 282, 284,
	285, 286, 287, 1140, 288, 289, 0, 1138, 0, 0,
	0, 1180, 1144, 0, 0, 0, 290, 291, 1220, 292,
	293, 294, 295, 296, 297, 4873, 1193, 0, 298, 1200,
	299, 1199, 0, 1210, 300, 301, 302, 303, 304, 305,
	1146, 1179, 1111, 306, 1240, 1241, 657, 0, 307, 308,
	1186, 0, 1167, 0, 309, 310, 311, 312, 313, 314,
	315, 0, 0, 317, 318, 319, 316, 320, 0, 321,
	0, 322, 323, 324, 325, 326, 327, 0, 328, 329,
	330, 1221, 331, 332, 4875, 1170, 1168, 1169, 1176, 1172,
	1171, 1175, 334, 335, 336, 337, 338, 1203, 339, 341,
	1197, 1196, 1116, 344, 340, 342, 0, 345, 343, 346,
	0, 347, 348, 349, 0, 0, 350, 1188, 352, 0,
	353, 354, 355, 0, 356, 357, 358, 0, 359, 360,
	1122, 361, 362, 363, 365, 367, 364, 366, 368, 369,
	370, 371, 1211, 1212, 372, 1135, 278, 0, 0, 0,
	0, 0, 373, 374, 375, 1195, 0, 0, 0, 376,
	0, 377, 378, 379, 0, 0, 1222, 380, 381, 382,
	1208, 1209, 383, 384, 385, 386, 387, 388, 389, 390,
	391, 0, 392, 1218, 0, 1145, 393, 0, 394, 395,
	396, 397, 398, 1181, 1182, 1185, 484, 1224, 399, 400,
	0, 401, 402, 403, 404, 405, 0, 0, 0, 279,
	406, 407, 408, 0, 1223, 409, 1190, 1191, 0, 1151,
	0, 410, 411, 1225, 1183, 1226, 412, 413, 414, 1227,
	415, 0, 0, 0, 416, 417, 418, 419, 420, 421,
	0, 422, 424, 423, 0, 425, 1219, 1228, 426, 427,
	1229, 0, 428, 429, 430, 431, 432, 433, 436, 1174,
	1173, 434, 435, 437, 438, 0, 439, 440, 442, 445,
	441, 443, 444, 446, 459, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 458, 461, 0, 460,
	1230, 462, 463, 464, 465, 472, 474, 475, 470, 471,
	473, 476, 477, 479, 467, 468, 469, 1231, 478, 466,
	1113, 280, 1232, 480, 481, 482, 1136, 1184, 483, 1198,
	485, 486, 0, 0, 487, 0, 0, 0, 489, 490,
	491, 0, 0, 492, 493, 679, 1233, 494, 1234, 1213,
	495, 496, 1123, 497, 498, 499, 500, 501, 502, 503,
	504, 505, 0, 506, 507, 681, 508, 509, 510, 682,
	511, 512, 513, 1214, 514, 684, 515, 516, 0, 517,
	518, 0, 519, 520, 521, 522, 523, 524, 525, 1194,
	526, 527, 529, 528, 530, 0, 531, 0, 532, 533,
	534, 0, 0, 0, 0, 0, 535, 537, 0, 538,
	539, 540, 541, 536, 542, 543, 544, 545, 546, 0,
	547, 548, 549, 1235, 550, 551, 552, 553, 554, 1124,
	555, 0, 556, 557, 563, 564, 565, 558, 559, 566,
	567, 568, 569, 570, 0, 572, 573, 571, 574, 575,
	576, 1177, 577, 578, 560, 561, 579, 580, 1236, 581,
	582, 583, 584, 585, 586, 587, 1192, 0, 588, 0,
	589, 590, 591, 592, 594, 562, 595, 600, 601, 1239,
	596, 597, 598, 599, 1215, 603, 604, 0, 605, 606,
	1110, 602, 593, 0, 607, 608, 609, 610, 611, 612,
	613, 614, 0, 615, 1204, 1205, 1206, 1207, 0, 624,
	0, 616, 617, 618, 1216, 619, 1217, 1134, 620, 621,
	622, 623, 0, 4874, 626, 0, 1117, 627, 628, 629,
	631, 632, 630, 633, 1178, 634, 0, 0, 635, 636,
	637, 696, 1201, 1238, 0, 639, 638, 640, 641, 699,
	642, 643, 0, 0, 0, 0, 644, 645, 700, 646,
	647, 648, 1114, 0, 0, 0, 0, 0, 1156, 1128,
	1129, 1130, 1126, 1127, 1139, 1109, 0, 0, 0, 0,
	0, 0, 1107, 1108, 0, 281, 283, 282, 284, 285,
	286, 287, 1140, 288, 289, 0, 1138, 0, 0, 0,
	1180, 1144, 0, 0, 0, 290, 291, 1220, 292, 293,
	294, 295, 296, 297, 650, 1193, 0, 298, 1200, 299,
	1199, 0, 1210, 300, 301, 302, 303, 304, 305, 1146,
	1179, 1111, 306, 1240, 1241, 657, 0, 307, 308, 1186,
	0, 1167, 0, 309, 310, 311, 312, 313, 314, 315,
	0, 0, 317, 318, 319, 316, 320, 0, 321, 0,
	322, 323, 324, 325, 326, 327, 0, 328, 329, 330,
	1221, 331, 4482, 333, 1170, 1168, 1169, 1176, 1172, 1171,
	1175, 334, 335, 336, 337, 338, 1203, 339, 341, 1197,
	1196, 1116, 344, 340, 342, 0, 345, 343, 346, 0,
	347, 348, 349, 0, 0, 350, 1188, 352, 0, 353,
	354, 355, 0, 356, 357, 358, 0, 359, 360, 1122,
	361, 362, 363, 365, 367, 364, 366, 368, 369, 370,
	371, 1211, 1212, 372, 1135, 278, 0, 0, 0, 0,
	0, 373, 374, 375, 1195, 0, 0, 0, 376, 0,
	377, 378, 379, 0, 0, 1222, 380, 381, 382, 1208,
	1209, 383, 384, 385, 386, 387, 388, 389, 390, 391,
	0, 392, 1218, 0, 4483, 393, 0, 394, 395, 396,
	397, 398, 1181, 1182, 1185, 484, 1224, 399, 400, 0,
	401, 402, 403, 404, 405, 0, 0, 0, 279, 406,
	407, 408, 0, 1223, 409, 1190, 1191, 0, 1151, 0,
	410, 411, 1225, 1183, 1226, 412, 413, 414, 1227, 415,
	0, 0, 0, 416, 417, 418, 419, 420, 421, 0,
	422, 424, 423, 0, 425, 1219, 1228, 426, 427, 1229,
	0, 428, 429, 430, 431, 432, 433, 436, 1174, 1173,
	434, 435, 437, 438, 0, 439, 440, 442, 445, 441,
	443, 444, 446, 459, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 458, 461, 0, 460, 1230,
	462, 463, 464, 465, 472, 474, 475, 470, 471, 473,
	476, 477, 479, 467, 468, 469, 1231, 478, 466, 1113,
	280, 1232, 480, 481, 482, 1136, 1184, 483, 1198, 485,
	486, 0, 0, 487, 0, 0, 0, 489, 490, 491,
	0, 0, 492, 493, 679, 1233, 494, 1234, 1213, 495,
	496, 1123, 497, 498, 499, 500, 501, 502, 503, 504,
	505, 0, 506, 507, 681, 508, 509, 510, 682, 511,
	512, 513, 1214, 514, 684, 515, 516, 0, 517, 518,
	0, 519, 520, 521, 522, 523, 524, 525, 1194, 526,
	527, 529, 528, 530, 0, 531, 0, 532, 533, 534,
	0, 0, 0, 0, 0, 535, 537, 0, 538, 539,
	540, 541, 536, 542, 543, 544, 545, 546, 0, 547,
	548, 549, 1235, 550, 551, 552, 4481, 554, 1124, 555,
	0, 556, 557, 563, 564, 565, 558, 559, 566, 567,
	568, 569, 570, 0, 572, 573, 571, 574, 575, 576,
	1177, 577, 578, 560, 561, 579, 580, 1236, 581, 582,
	583, 584, 585, 586, 587, 1192, 0, 588, 0, 589,
	590, 591, 592, 594, 562, 595, 600, 601, 1239, 596,
	597, 598, 599, 1215, 603, 604, 0, 605, 606, 1110,
	602, 593, 0, 607, 608, 609, 610, 611, 612, 613,
	614, 0, 615, 1204, 1205, 1206, 1207, 0, 624, 0,
	616, 617, 618, 1216, 619, 1217, 1134, 620, 621, 622,
	623, 0, 625, 626, 0, 1117, 627, 628, 629, 631,
	632, 630, 633, 1178, 634, 0, 0, 635, 636, 637,
	696, 1201, 1238, 0, 639, 638, 640, 641, 699, 642,
	643, 0, 0, 0, 0, 644, 645, 700, 646, 647,
	648, 1114, 0, 0, 0, 0, 0, 1156, 1128, 1129,
	1130, 3257, 3258, 1139, 1109, 0, 0, 0, 0, 0,
	0, 1107, 1108, 0, 281, 283, 282, 284, 285, 286,
	287, 1140, 288, 289, 0, 1138, 0, 0, 0, 1180,
	1144, 0, 0, 0, 290, 291, 1220, 292, 293, 294,
	295, 296, 297, 650, 1193, 0, 298, 1200, 299, 1199,
	0, 1210, 300, 301, 302, 303, 304, 305, 1146, 1179,
	1111, 306, 1240, 1241, 657, 0, 307, 308, 1186, 0,
	1167, 0, 309, 310, 311, 312, 313, 314, 315, 0,
	0, 317, 318, 319, 316, 320, 0, 321, 0, 322,
	323, 324, 325, 326, 327, 0, 328, 329, 330, 1221,
	331, 332, 333, 1170, 1168, 1169, 1176, 1172, 1171, 1175,
	334, 335, 336, 337, 338, 1203, 339, 341, 1197, 1196,
	1116, 344, 340, 342, 0, 345, 343, 346, 0, 347,
	348, 349, 0, 0, 350, 1188, 352, 0, 353, 354,
	355, 0, 356, 357, 358, 0, 359, 360, 1122, 361,
	362, 363, 365, 367, 364, 366, 368, 369, 370, 371,
	1211, 1212, 372, 1135, 278, 0, 0, 0, 0, 0,
	373, 374, 375, 1195, 0, 0, 0, 376, 0, 377,
	378, 379, 0, 0, 1222, 380, 381, 382, 1208, 1209,
	383, 384, 385, 386, 387, 388, 389, 390, 391, 0,
	392, 1218, 0, 1145, 393, 0, 394, 395, 396, 397,
	398, 1181, 1182, 1185, 484, 1224, 399, 400, 0, 401,
	402, 403, 404, 405, 0, 0, 0, 279, 406, 407,
	408, 0, 1223, 409, 1190, 1191, 0, 1151, 0, 410,
	411, 1225, 1183, 1226, 412, 413, 414, 1227, 415, 0,
	0, 0, 416, 417, 418, 419, 420, 421, 0, 422,
	424, 423, 0, 425, 1219, 1228, 426, 427, 1229, 0,
	428, 429, 430, 431, 432, 433, 436, 1174, 1173, 434,
	435, 437, 438, 0, 439, 440, 442, 445, 441, 443,
	444, 446, 459, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 458, 461, 0, 460, 1230, 462,
	463, 464, 465, 472, 474, 475, 470, 471, 473, 476,
	477, 479, 467, 468, 469, 1231, 478, 466, 1113, 280,
	1232, 480, 481, 482, 1136, 1184, 483, 1198, 485, 486,
	0, 0, 487, 0, 0, 0, 489, 490, 491, 0,
	0, 492, 493, 679, 1233, 494, 1234, 1213, 495, 496,
	1123, 497, 498, 499, 500, 501, 502, 503, 504, 505,
	0, 506, 507, 681, 508, 509, 510, 682, 511, 512,
	513, 1214, 514, 684, 515, 516, 0, 517, 518, 0,
	519, 520, 521, 522, 523, 524, 525, 1194, 526, 527,
	529, 528, 530, 0, 531, 0, 532, 533, 534, 0,
	0, 0, 0, 0, 535, 537, 0, 538, 539, 540,
	541, 536, 542, 543, 544, 545, 546, 0, 547, 548,
	549, 1235, 550, 551, 552, 553, 554, 1124, 555, 0,
	556, 557, 563, 564, 565, 558, 559, 566, 567, 568,
	569, 570, 0, 572, 573, 571, 574, 575, 576, 1177,
	577, 578, 560, 561, 579, 580, 1236, 581, 582, 583,
	584, 585, 586, 587, 1192, 0, 588, 0, 589, 590,
	591, 592, 594, 562, 595, 600, 601, 1239, 596, 597,
	598, 599, 1215, 603, 604, 0, 605, 606, 1110, 602,
	593, 0, 607, 608, 609, 610, 611, 612, 613, 614,
	0, 615, 1204, 1205, 1206, 1207, 0, 624, 0, 616,
	617, 618, 1216, 619, 1217, 1134, 620, 621, 622, 623,
	0, 625, 626, 0, 1117, 627, 628, 629, 631, 632,
	630, 633, 1178, 634, 0, 0, 635, 636, 637, 696,
	1201, 1238, 0, 639, 638, 640, 641, 699, 642, 643,
	0, 0, 0, 0, 644, 645, 700, 646, 647, 648,
	1114, 0, 0, 0, 0, 0, 1156, 1128, 1129, 1130,
	3255, 3256, 1139, 1109, 0, 0, 0, 0, 0, 0,
	1107, 1108, 0, 281, 283, 282, 284, 285, 286, 287,
	1140, 288, 289, 0, 1138, 0, 0, 0, 1180, 1144,
	0, 0, 0, 290, 291, 1220, 292, 293, 294, 295,
	296, 297, 650, 1193, 0, 298, 1200, 299, 1199, 0,
	1210, 300, 301, 302, 303, 304, 305, 1146, 1179, 1111,
	306, 1240, 1241, 657, 0, 307, 308, 1186, 0, 1167,
	0, 309, 310, 311, 312, 313, 314, 315, 0, 0,
	317, 318, 319, 316, 320, 0, 321, 0, 322, 323,
	324, 325, 326, 327, 0, 328, 329, 330, 1221, 331,
	332, 333, 1170, 1168, 1169, 1176, 1172, 1171, 1175, 334,
	335, 336, 337, 338, 1203, 339, 341, 1197, 1196, 1116,
	344, 340, 342, 0, 345, 343, 346, 0, 347, 348,
	349, 0, 0, 350, 1188, 352, 0, 353, 354, 355,
	0, 356, 357, 358, 0, 359, 360, 1122, 361, 362,
	363, 365, 367, 364, 366, 368, 369, 370, 371, 1211,
	1212, 372, 1135, 278, 0, 0, 0, 0, 0, 373,
	374, 375, 1195, 0, 0, 0, 376, 0, 377, 378,
	379, 0, 0, 1222, 380, 381, 382, 1208, 1209, 383,
	384, 385, 386, 387, 388, 389, 390, 391, 0, 392,
	1218, 0, 1145, 393, 0, 394, 395, 396, 397, 398,
	1181, 1182, 1185, 484, 1224, 399, 400, 0, 401, 402,
	403, 404, 405, 0, 0, 0, 279, 406, 407, 408,
	0, 1223, 409, 1190, 1191, 0, 1151, 0, 410, 411,
	1225, 1183, 1226, 412, 413, 414, 1227, 415, 0, 0,
	0, 416, 417, 418, 419, 420, 421, 0, 422, 424,
	423, 0, 425, 1219, 1228, 426, 427, 1229, 0, 428,
	429, 430, 431, 432, 433, 436, 1174, 1173, 434, 435,
	437, 438, 0, 439, 440, 442, 445, 441, 443, 444,
	446, 459, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 458, 461, 0, 460, 1230, 462, 463,
	464, 465, 472, 474, 475, 470, 471, 473, 476, 477,
	479, 467, 468, 469, 1231, 478, 466, 1113, 280, 1232,
	480, 481, 482, 1136, 1184, 483, 1198, 485, 486, 0,
	0, 487, 0, 0, 0, 489, 490, 491, 0, 0,
	492, 493, 679, 1233, 494, 1234, 1213, 495, 496, 1123,
	497, 498, 499, 500, 501, 502, 503, 504, 505, 0,
	506, 507, 681, 508, 509, 510, 682, 511, 512, 513,
	1214, 514, 684, 515, 516, 0, 517, 518, 0, 519,
	520, 521, 522, 523, 524, 525, 1194, 526, 527, 529,
	528, 530, 0, 531, 0, 532, 533, 534, 0, 0,
	0, 0, 0, 535, 537, 0, 538, 539, 540, 541,
	536, 542, 543, 544, 545, 546, 0, 547, 548, 549,
	1235, 550, 551, 552, 553, 554, 1124, 555, 0, 556,
	557, 563, 564, 565, 558, 559, 566, 567, 568, 569,
	570, 0, 572, 573, 571, 574, 575, 576, 1177, 577,
	578, 560, 561, 579, 580, 1236, 581, 582, 583, 584,
	585, 586, 587, 1192, 0, 588, 0, 589, 590, 591,
	592, 594, 562, 595, 600, 601, 1239, 596, 597, 598,
	599, 1215, 603, 604, 0, 605, 606, 1110, 602, 593,
	0, 607, 608, 609, 610, 611, 612, 613, 614, 0,
	615, 1204, 1205, 1206, 1207, 0, 624, 0, 616, 617,
	618, 1216, 619, 1217, 1134, 620, 621, 622, 623, 0,
	625, 626, 0, 1117, 627, 628, 629, 631, 632, 630,
	633, 1178, 634, 0, 0, 635, 636, 637, 696, 1201,
	1238, 0, 639, 638, 640, 641, 699, 642, 643, 0,
	0, 0, 0, 644, 645, 700, 646, 647, 648, 1114,
	0, 0, 0, 0, 0, 1156, 1128, 1129, 1130, 1126,
	1127, 1139, 1109, 0, 0, 0, 0, 0, 0, 1107,
	1108, 0, 281, 283, 282, 284, 285, 286, 287, 1140,
	288, 289, 0, 1138, 0, 0, 0, 1180, 1144, 0,
	0, 0, 290, 291, 1220, 292, 293, 294, 295, 296,
	297, 650, 1193, 0, 298, 1200, 299, 1199, 0, 1210,
	300, 301, 302, 303, 304, 305, 1146, 1179, 1111, 306,
	1240, 1241, 657, 0, 307, 308, 1186, 0, 1167, 0,
	309, 310, 311, 312, 313, 314, 315, 0, 0, 317,
	318, 319, 316, 320, 0, 321, 0, 322, 323, 324,
	325, 326, 327, 0, 328, 329, 330, 1221, 331, 332,
	333, 1170, 1168, 1169, 1176, 1172, 1171, 1175, 334, 335,
	336, 337, 338, 1203, 339, 341, 1197, 1196, 1116, 344,
	340, 342, 0, 345, 343, 346, 0, 347, 348, 349,
	0, 0, 350, 1188, 352, 0, 353, 354, 355, 0,
	356, 357, 358, 0, 359, 360, 1122, 361, 362, 363,
	365, 367, 364, 366, 368, 369, 370, 371, 1211, 1212,
	372, 1135, 278, 0, 0, 0, 0, 0, 373, 374,
	375, 1195, 0, 0, 0, 376, 0, 377, 378, 379,
	0, 0, 1222, 380, 381, 382, 1208, 1209, 383, 384,
	385, 386, 387, 388, 389, 390, 391, 0, 392, 1218,
	0, 1145, 393, 0, 394, 395, 396, 397, 398, 1181,
	1182, 1185, 484, 1224, 399, 400, 0, 401, 402, 403,
	404, 405, 0, 0, 0, 279, 406, 407, 408, 0,
	1223, 409, 1190, 1191, 0, 1151, 0, 410, 411, 1225,
	1183, 1226, 412, 413, 414, 1227, 415, 0, 0, 0,
	416, 417, 418, 419, 420, 421, 0, 422, 424, 423,
	0, 425, 1219, 1228, 426, 427, 1229, 0, 428, 429,
	430, 431, 432, 433, 436, 1174, 1173, 434, 435, 437,
	438, 0, 439, 440, 442, 445, 441, 443, 444, 446,
	459, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 458, 461, 0, 460, 1230, 462, 463, 464,
	465, 472, 474, 475, 470, 471, 473, 476, 477, 479,
	467, 468, 469, 1231, 478, 466, 1113, 280, 1232, 480,
	481, 482, 1136, 1184, 483, 1198, 485, 486, 0, 0,
	487, 0, 0, 0, 489, 490, 491, 0, 0, 492,
	493, 679, 1233, 494, 1234, 1213, 495, 496, 1123, 497,
	498, 499, 500, 501, 502, 503, 504, 505, 0, 506,
	507, 681, 508, 509, 510, 682, 511, 512, 513, 1214,
	514, 684, 515, 516, 0, 517, 518, 0, 519, 520,
	521, 522, 523, 524, 525, 1194, 526, 527, 529, 528,
	530, 0, 531, 0, 532, 533, 534, 0, 0, 0,
	0, 0, 535, 537, 0, 538, 539, 540, 541, 536,
	542, 543, 544, 545, 546, 0, 547, 548, 549, 1235,
	550, 551, 552, 553, 554, 1124, 555, 0, 556, 557,
	563, 564, 565, 558, 559, 566, 567, 568, 569, 570,
	0, 572, 573, 571, 574, 575, 576, 1177, 577, 578,
	560, 561, 579, 580, 1236, 581, 582, 583, 584, 585,
	586, 587, 1192, 0, 588, 0, 589, 590, 591, 592,
	594, 562, 595, 600, 601, 1239, 596, 597, 598, 599,
	1215, 603, 604, 0, 605, 606, 1110, 602, 593, 0,
	607, 608, 609, 610, 611, 612, 613, 614, 0, 615,
	1204, 1205, 1206, 1207, 0, 624, 0, 616, 617, 618,
	1216, 619, 1217, 1134, 620, 621, 622, 623, 0, 625,
	626, 0, 1117, 627, 628, 629, 631, 632, 630, 633,
	1178, 634, 0, 0, 635, 636, 637, 696, 1201, 1238,
	0, 639, 638, 640, 641, 699, 642, 643, 0, 0,
	0, 0, 644, 645, 700, 646, 647, 648, 1114, 0,
	0, 0, 0, 0, 1156, 1128, 1129, 1130, 1126, 1127,
	1139, 1109, 0, 0, 0, 0, 0, 0, 2513, 2514,
	0, 281, 283, 282, 284, 285, 286, 287, 1140, 288,
	289, 0, 1138, 0, 0, 0, 1180, 1144, 0, 0,
	0, 290, 291, 1220, 292, 293, 294, 295, 296, 297,
	650, 1193, 0, 298, 1200, 299, 1199, 0, 1210, 300,
	301, 302, 303, 304, 305, 1146, 1179, 0, 306, 1240,
	1241, 657, 0, 307, 308, 1186, 0, 1167, 0, 309,
	310, 311, 312, 313, 314, 315, 0, 0, 317, 318,
	319, 316, 320, 0, 321, 0, 322, 323, 324, 325,
	326, 327, 0, 328, 329, 330, 1221, 331, 332, 333,
	1170, 1168, 1169, 1176, 1172, 1171, 1175, 334, 335, 336,
	337, 338, 1203, 339, 341, 1197, 1196, 0, 344, 340,
	342, 0, 345, 343, 346, 0, 347, 348, 349, 0,
	0, 350, 1188, 352, 0, 353, 354, 355, 0, 356,
	357, 358, 0, 359, 360, 1122, 361, 362, 363, 365,
	367, 364, 366, 368, 369, 370, 371, 1211, 1212, 372,
	1135, 278, 0, 0, 0, 0, 0, 373, 374, 375,
	1195, 0, 0, 0, 376, 0, 377, 378, 379, 0,
	0, 1222, 380, 381, 382, 1208, 1209, 383, 384, 385,
	386, 387, 388, 389, 390, 391, 0, 392, 1218, 0,
	1145, 393, 0, 394, 395, 396, 397, 398, 1181, 1182,
	1185, 484, 1224, 399, 400, 0, 401, 402, 403, 404,
	405, 0, 0, 0, 279, 406, 407, 408, 0, 1223,
	409, 1190, 1191, 0, 1151, 0, 410, 411, 1225, 1183,
	1226, 412, 413, 414, 1227, 415, 0, 0, 0, 416,
	417, 418, 419, 420, 421, 0, 422, 424, 423, 0,
	425, 1219, 1228, 426, 427, 1229, 0, 428, 429, 430,
	431, 432, 433, 436, 1174, 1173, 434, 435, 437, 438,
	0, 439, 440, 442, 445, 441, 443, 444, 446, 459,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 458, 461, 0, 460, 1230, 462, 463, 464, 465,
	472, 474, 475, 470, 471, 473, 476, 477, 479, 467,
	468, 469, 1231, 478, 466, 0, 280, 1232, 480, 481,
	482, 1136, 1184, 483, 1198, 485, 486, 0, 0, 487,
	0, 0, 0, 489, 490, 491, 0, 0, 492, 493,
	679, 1233, 494, 1234, 1213, 495, 496, 1123, 497, 498,
	499, 500, 501, 502, 503, 504, 505, 0, 506, 507,
	681, 508, 509, 510, 682, 511, 512, 513, 1214, 514,
	684, 515, 516, 0, 517, 518, 0, 519, 520, 521,
	522, 523, 524, 525, 1194, 526, 527, 529, 528, 530,
	0, 531, 0, 532, 533, 534, 0, 0, 0, 0,
	0, 535, 537, 0, 538, 539, 540, 541, 536, 542,
	543, 544, 545, 546, 0, 547, 548, 549, 1235, 550,
	551, 552, 553, 554, 1124, 555, 0, 556, 557, 563,
	564, 565, 558, 559, 566, 567, 568, 569, 570, 0,
	572, 573, 571, 574, 575, 576, 1177, 577, 578, 560,
	561, 579, 580, 1236, 581, 582, 583, 584, 585, 586,
	587, 1192, 0, 588, 0, 589, 590, 591, 592, 594,
	562, 595, 600, 601, 1239, 596, 597, 598, 599, 1215,
	603, 604, 0, 605, 606, 0, 602, 593, 0, 607,
	608, 609, 610, 611, 612, 613, 614, 0, 615, 1204,
	1205, 1206, 1207, 0, 624, 0, 616, 617, 618, 1216,
	619, 1217, 1134, 620, 621, 622, 623, 0, 625, 626,
	0, 0, 627, 628, 629, 631, 632, 630, 633, 1178,
	634, 0, 0, 635, 636, 637, 696, 1201, 1238, 0,
	639, 638, 640, 641, 699, 642, 643, 0, 0, 0,
	0, 644, 645, 700, 646, 647, 648, 0, 0, 0,
	0, 0, 0, 1156, 1128, 1129, 1130, 1126, 1127, 1139,
	2772, 0, 0, 0, 0, 0, 0, 2770, 2771, 0,
	281, 283, 282, 284, 285, 286, 287, 1140, 288, 289,
	0, 1138, 0, 0, 0, 1180, 1144, 0, 0, 0,
	290, 291, 1220, 292, 293, 294, 295, 296, 297, 650,
	1193, 0, 298, 1200, 299, 1199, 0, 1210, 300, 301,
	302, 303, 304, 305, 1146, 1179, 0, 306, 1240, 1241,
	657, 0, 307, 308, 1186, 0, 1167, 0, 309, 310,
	311, 312, 313, 314, 315, 0, 0, 317, 318, 319,
	316, 320, 0, 321, 0, 322, 323, 324, 325, 326,
	327, 0, 328, 329, 330, 1221, 331, 332, 333, 1170,
	1168, 1169, 1176, 1172, 1171, 1175, 334, 335, 336, 337,
	338, 1203, 339, 341, 1197, 1196, 0, 344, 340, 342,
	0, 345, 343, 346, 0, 347, 348, 349, 0, 0,
	350, 1188, 352, 0, 353, 354, 355, 0, 356, 357,
	358, 0, 359, 360, 1122, 361, 362, 363, 365, 367,
	364, 366, 368, 369, 370, 371, 1211, 1212, 372, 1135,
	278, 0, 0, 0, 0, 0, 373, 374, 375, 1195,
	0, 0, 0, 376, 0, 377, 378, 379, 0, 0,
	1222, 380, 381, 382, 1208, 1209, 383, 384, 385, 386,
	387, 388, 389, 390, 391, 0, 392, 1218, 0, 1145,
	393, 0, 394, 395, 396, 397, 398, 1181, 1182, 1185,
	484, 1224, 399, 400, 0, 401, 402, 403, 404, 405,
	0, 0, 0, 279, 406, 407, 408, 0, 1223, 409,
	1190, 1191, 0, 1151, 0, 410, 411, 1225, 1183, 1226,
	412, 413, 414, 1227, 415, 0, 0, 0, 416, 417,
	418, 419, 420, 421, 0, 422, 424, 423, 0, 425,
	1219, 1228, 426, 427, 1229, 0, 428, 429, 430, 431,
	432, 433, 436, 1174, 1173, 434, 435, 437, 438, 0,
	439, 440, 442, 445, 441, 443, 444, 446, 459, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	458, 461, 0, 460, 1230, 462, 463, 464, 465, 472,
	474, 475, 470, 471, 473, 476, 477, 479, 467, 468,
	469, 1231, 478, 466, 0, 280, 1232, 480, 481, 482,
	1136, 1184, 483, 1198, 485, 486, 0, 0, 487, 0,
	0, 0, 489, 490, 491, 0, 0, 492, 493, 679,
	1233, 494, 1234, 1213, 495, 496, 488, 497, 498, 499,
	500, 501, 502, 503, 504, 505, 0, 506, 507, 681,
	508, 509, 510, 682, 511, 512, 513, 1214, 514, 684,
	515, 516, 0, 517, 518, 0, 519, 520, 521, 522,
	523, 524, 525, 1194, 526, 527, 529, 528, 530, 0,
	531, 0, 532, 533, 534, 0, 0, 0, 0, 0,
	535, 537, 0, 538, 539, 540, 541, 536, 542, 543,
	544, 545, 546, 0, 547, 548, 549, 1235, 550, 551,
	552, 553, 554, 3250, 3251, 0, 556, 557, 563, 564,
	565, 558, 559, 566, 567, 568, 569, 570, 0, 572,
	573, 571, 574, 575, 576, 1177, 577, 578, 560, 561,
	579, 580, 1236, 581, 582, 583, 584, 585, 586, 587,
	1192, 0, 588, 0, 589, 590, 591, 592, 594, 562,
	595, 600, 601, 1239, 596, 597, 598, 599, 1215, 603,
	604, 0, 605, 606, 0, 602, 593, 0, 607, 608,
	609, 610, 611, 612, 613, 614, 0, 615, 1204, 1205,
	1206, 1207, 0, 624, 0, 616, 617, 618, 1216, 619,
	1217, 1134, 620, 621, 622, 623, 0, 625, 626, 0,
	0, 627, 628, 629, 631, 632, 630, 633, 1178, 634,
	0, 0, 635, 636, 637, 696, 1201, 1238, 0, 639,
	638, 640, 641, 699, 642, 643, 0, 0, 0, 0,
	644, 645, 700, 646, 647, 648, 0, 0, 0, 0,
	0, 0, 1156, 1128, 1129, 1130, 1126, 1127, 1139, 0,
	0, 0, 0, 0, 0, 0, 2170, 2171, 0, 281,
	283, 282, 284, 285, 286, 287, 1140, 288, 289, 0,
	1138, 0, 0, 0, 1180, 1144, 0, 0, 0, 290,
	291, 1220, 292, 293, 294, 295, 296, 297, 0, 1193,
	0, 298, 1200, 299, 1199, 0, 1210, 300, 301, 302,
	303, 304, 305, 1146, 1179, 1111, 306, 1240, 1241, 657,
	0, 307, 308, 1186, 0, 1167, 0, 309, 310, 311,
	312, 313, 314, 315, 0, 0, 317, 318, 319, 316,
	320, 0, 321, 0, 322, 323, 324, 325, 326, 327,
	0, 328, 329, 330, 1221, 331, 332, 4875, 1170, 1168,
	1169, 1176, 1172, 1171, 1175, 334, 335, 336, 337, 338,
	1203, 339, 341, 1197, 1196, 1116, 344, 340, 342, 0,
	345, 343, 346, 0, 347, 348, 349, 0, 0, 350,
	1188, 352, 0, 353, 354, 355, 0, 356, 357, 358,
	0, 359, 360, 1122, 361, 362, 363, 365, 367, 364,
	366, 368, 369, 370, 371, 1211, 1212, 372, 1135, 278,
	0, 0, 0, 0, 0, 373, 374, 375, 1195, 0,
	0, 0, 376, 0, 377, 378, 379, 0, 0, 1222,
	380, 381, 382, 1208, 1209, 383, 384, 385, 386, 387,
	388, 389, 390, 391, 0, 392, 1218, 0, 1145, 393,
	0, 394, 395, 396, 397, 398, 1181, 1182, 1185, 484,
	0, 399, 400, 0, 401, 402, 403, 404, 405, 0,
	0, 0, 279, 406, 407, 408, 0, 1223, 409, 1190,
	1191, 0, 1151, 0, 410, 411, 0, 1183, 0, 412,
	413, 414, 1227, 415, 0, 0, 0, 416, 417, 418,
	419, 420, 421, 0, 422, 424, 423, 0, 425, 1219,
	1228, 426, 427, 0, 0, 428, 429, 430, 431, 432,
	433, 436, 1174, 1173, 434, 435, 437, 438, 0, 439,
	440, 442, 445, 441, 443, 444, 446, 459, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 458,
	461, 0, 460, 1230, 462, 463, 464, 465, 472, 474,
	475, 470, 471, 473, 476, 477, 479, 467, 468, 469,
	1231, 478, 466, 1113, 280, 0, 480, 481, 482, 1136,
	1184, 483, 1198, 485, 486, 0, 0, 487, 0, 0,
	0, 489, 490, 491, 0, 0, 492, 493, 679, 1233,
	494, 1234, 1213, 495, 496, 1123, 497, 498, 499, 500,
	501, 502, 503, 504, 505, 0, 506, 507, 681, 508,
	509, 510, 682, 511, 512, 513, 1214, 514, 684, 515,
	516, 0, 517, 518, 0, 519, 520, 521, 522, 523,
	524, 525, 1194, 526, 527, 529, 528, 530, 0, 531,
	0, 532, 533, 534, 0, 0, 0, 0, 0, 535,
	537, 0, 538, 539, 540, 541, 536, 542, 543, 544,
	545, 546, 0, 547, 548, 549, 1235, 550, 551, 552,
	553, 554, 1124, 555, 0, 556, 557, 563, 564, 565,
	558, 559, 566, 567, 568, 569, 570, 0, 572, 573,
	571, 574, 575, 576, 1177, 577, 578, 560, 561, 579,
	580, 0, 581, 582, 583, 584, 585, 586, 587, 1192,
	0, 588, 0, 589, 590, 591, 592, 594, 562, 595,
	600, 601, 1239, 596, 597, 598, 599, 1215, 603, 604,
	0, 605, 606, 1110, 602, 593, 0, 607, 608, 609,
	610, 611, 612, 613, 614, 0, 615, 1204, 1205, 1206,
	1207, 0, 624, 0, 616, 617, 618, 1216, 619, 1217,
	1134, 620, 621, 622, 623, 0, 4874, 626, 0, 1117,
	627, 628, 629, 631, 632, 630, 633, 1178, 634, 0,
	0, 635, 636, 637, 696, 1201, 1238, 0, 639, 638,
	640, 641, 699, 642, 643, 0, 0, 0, 0, 644,
	645, 700, 646, 647, 648, 0, 0, 0, 0, 1100,
	0, 1278, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1107, 1108, 0, 281, 283,
	282, 284, 285, 286, 287, 1140, 288, 289, 0, 1138,
	0, 0, 0, 1180, 0, 0, 0, 0, 290, 291,
	1220, 292, 293, 294, 295, 296, 297, 650, 651, 0,
	298, 652, 299, 653, 0, 654, 300, 301, 302, 303,
	304, 305, 0, 1179, 0, 306, 655, 656, 657, 0,
	307, 308, 1186, 0, 1167, 0, 309, 310, 311, 312,
	313, 314, 315, 0, 0, 317, 318, 319, 316, 320,
	0, 321, 0, 322, 323, 324, 325, 326, 327, 0,
	328, 329, 330, 1221, 331, 332, 333, 1170, 1168, 1169,
	1176, 1172, 1171, 1175, 334, 335, 336, 337, 338, 0,
	339, 341, 659, 660, 0, 344, 340, 342, 0, 345,
	343, 346, 0, 347, 348, 349, 0, 0, 350, 351,
	352, 0, 353, 354, 355, 0, 356, 357, 358, 0,
	359, 360, 661, 361, 362, 363, 365, 367, 364, 366,
	368, 369, 370, 371, 1211, 1212, 372, 0, 278, 0,
	0, 0, 0, 0, 373, 374, 375, 664, 0, 0,
	0, 376, 0, 377, 378, 379, 0, 0, 1222, 380,
	381, 382, 665, 666, 383, 384, 385, 386, 387, 388,
	389, 390, 391, 0, 392, 1218, 0, 668, 393, 0,
	394, 395, 396, 397, 398, 1181, 1182, 1185, 484, 1224,
	399, 400, 0, 401, 402, 403, 404, 405, 0, 0,
	0, 279, 406, 407, 408, 0, 1223, 409, 672, 673,
	0, 674, 0, 410, 411, 1225, 1183, 1226, 412, 413,
	414, 1227, 415, 0, 0, 0, 416, 417, 418, 419,
	420, 421, 1264, 422, 424, 423, 0, 425, 1219, 1228,
	426, 427, 1229, 0, 428, 429, 430, 431, 432, 433,
	436, 1174, 1173, 434, 435, 437, 438, 0, 439, 440,
	442, 445, 441, 443, 444, 446, 459, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 458, 461,
	0, 460, 1230, 462, 463, 464, 465, 472, 474, 475,
	470, 471, 473, 476, 477, 479, 467, 468, 469, 1231,
	478, 466, 0, 280, 1232, 480, 481, 482, 0, 1184,
	483, 678, 485, 486, 0, 0, 487, 0, 0, 1270,
	489, 490, 491, 0, 0, 492, 493, 679, 1233, 494,
	1234, 1213, 495, 496, 488, 497, 498, 499, 500, 501,
	502, 503, 504, 505, 0, 506, 507, 681, 508, 509,
	510, 682, 511, 512, 513, 1214, 514, 684, 515, 516,
	0, 517, 518, 0, 519, 520, 521, 522, 523, 524,
	525, 685, 526, 527, 529, 528, 530, 0, 531, 0,
	532, 533, 534, 0, 0, 0, 0, 0, 535, 537,
	0, 538, 539, 540, 541, 536, 542, 543, 544, 545,
	546, 0, 547, 548, 549, 1235, 550, 551, 552, 553,
	554, 686, 1272, 0, 556, 557, 563, 564, 565, 558,
	559, 566, 567, 568, 569, 570, 240, 572, 573, 571,
	574, 575, 576, 1177, 577, 578, 560, 561, 579, 580,
	1236, 581, 582, 583, 584, 585, 586, 587, 687, 0,
	588, 0, 589, 590, 591, 592, 594, 562, 595, 600,
	601, 688, 596, 597, 598, 599, 1215, 603, 604, 0,
	605, 606, 0, 602, 593, 242, 607, 608, 609, 610,
	611, 612, 613, 614, 0, 615, 690, 691, 692, 693,
	0, 624, 0, 616, 617, 618, 1216, 619, 1217, 0,
	620, 621, 622, 623, 0, 625, 626, 0, 0, 627,
	628, 629, 631, 632, 630, 633, 1178, 634, 0, 0,
	635, 636, 637, 1656, 697, 698, 0, 639, 638, 640,
	641, 699, 642, 643, 0, 0, 0, 234, 644, 645,
	700, 646, 647, 648, 1278, 0, 235, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 281, 283, 282, 284, 285, 286, 287, 0, 288,
	289, 0, 1268, 0, 2010, 0, 1180, 0, 0, 0,
	0, 290, 291, 1220, 292, 293, 294, 295, 296, 297,
	650, 651, 0, 298, 652, 299, 653, 0, 654, 300,
	301, 302, 303, 304, 305, 0, 1179, 0, 306, 655,
	656, 657, 0, 307, 308, 1186, 0, 1167, 0, 309,
	310, 311, 312, 313, 314, 315, 0, 0, 317, 318,
	319, 316, 320, 0, 321, 0, 322, 323, 324, 325,
	326, 327, 0, 328, 329, 330, 1221, 331, 332, 333,
	1170, 1168, 1169, 1176, 1172, 1171, 1175, 334, 335, 336,
	337, 338, 0, 339, 341, 659, 660, 0, 344, 340,
	342, 0, 345, 343, 346, 0, 347, 348, 349, 0,
	0, 350, 351, 352, 0, 353, 354, 355, 0, 356,
	357, 358, 0, 359, 360, 661, 361, 362, 363, 365,
	367, 364, 366, 368, 369, 370, 371, 1211, 1212, 372,
	0, 278, 0, 0, 0, 0, 0, 373, 374, 375,
	664, 0, 0, 0, 376, 0, 377, 378, 379, 0,
	0, 1222, 380, 381, 382, 665, 666, 383, 384, 385,
	386, 387, 388, 389, 390, 391, 0, 392, 1218, 0,
	668, 393, 0, 394, 395, 396, 397, 398, 1181, 1182,
	1185, 484, 1224, 399, 400, 0, 401, 402, 403, 404,
	405, 0, 0, 0, 279, 406, 407, 408, 0, 1223,
	409, 672, 673, 0, 674, 0, 410, 411, 1225, 1183,
	1226, 412, 413, 414, 1227, 415, 0, 0, 0, 416,
	417, 418, 419, 420, 421, 1264, 422, 424, 423, 0,
	425, 1219, 1228, 426, 427, 1229, 0, 428, 429, 430,
	431, 432, 433, 436, 1174, 1173, 434, 435, 437, 438,
	0, 439, 440, 442, 445, 441, 443, 444, 446, 459,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 458, 461, 0, 460, 1230, 462, 463, 464, 465,
	472, 474, 475, 470, 471, 473, 476, 477, 479, 467,
	468, 469, 1231, 478, 466, 0, 280, 1232, 480, 481,
	482, 0, 1184, 483, 678, 485, 486, 0, 0, 487,
	0, 0, 1270, 489, 490, 491, 0, 0, 492, 493,
	679, 1233, 494, 1234, 1213, 495, 496, 488, 497, 498,
	499, 500, 501, 502, 503, 504, 505, 0, 506, 507,
	681, 508, 509, 510, 682, 511, 512, 513, 1214, 514,
	684, 515, 516, 0, 517, 518, 0, 519, 520, 521,
	522, 523, 524, 525, 685, 526, 527, 529, 528, 530,
	0, 531, 0, 532, 533, 534, 0, 0, 0, 0,
	0, 535, 537, 0, 538, 539, 540, 541, 536, 542,
	543, 544, 545, 546, 0, 547, 548, 549, 1235, 550,
	551, 552, 553, 554, 686, 1272, 0, 556, 557, 563,
	564, 565, 558, 559, 566, 567, 568, 569, 570, 240,
	572, 573, 571, 574, 575, 576, 1177, 577, 578, 560,
	561, 579, 580, 1236, 581, 582, 583, 584, 585, 586,
	587, 687, 0, 588, 0, 589, 590, 591, 592, 594,
	562, 595, 600, 601, 688, 596, 597, 598, 599, 1215,
	603, 604, 0, 605, 606, 0, 602, 593, 242, 607,
	608, 609, 610, 611, 612, 613, 614, 0, 615, 690,
	691, 692, 693, 0, 624, 0, 616, 617, 618, 1216,
	619, 1217, 0, 620, 621, 622, 623, 0, 625, 626,
	0, 0, 627, 628, 629, 631, 632, 630, 633, 1178,
	634, 0, 0, 635, 636, 637, 1656, 697, 698, 0,
	639, 638, 640, 641, 699, 642, 643, 0, 0, 0,
	234, 644, 645, 700, 646, 647, 648, 0, 0, 235,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3414,
	0, 1278, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1268, 0, 2010, 281, 283,
	282, 284, 285, 286, 287, 0, 288, 289, 0, 0,
	0, 0, 0, 1180, 0, 0, 0, 0, 290, 291,
	1220, 292, 293, 294, 295, 296, 297, 650, 651, 0,
	298, 652, 299, 653, 0, 654, 300, 301, 302, 303,
	304, 305, 0, 1179, 0, 306, 655, 656, 657, 0,
	307, 308, 1186, 0, 1167, 0, 309, 310, 311, 312,
	313, 314, 315, 0, 0, 317, 318, 319, 316, 320,
	0, 321, 0, 322, 323, 324, 325, 326, 327, 0,
	328, 329, 330, 1221, 331, 332, 333, 1170, 1168, 1169,
	1176, 1172, 1171, 1175, 334, 335, 336, 337, 338, 0,
	339, 341, 659, 660, 0, 344, 340, 342, 0, 345,
	343, 346, 0, 347, 348, 349, 0, 0, 350, 351,
	352, 0, 353, 354, 355, 0, 356, 357, 358, 0,
	359, 360, 661, 361, 362, 363, 365, 367, 364, 366,
	368, 369, 370, 371, 1211, 1212, 372, 0, 278, 0,
	0, 0, 0, 0, 373, 374, 375, 664, 0, 0,
	0, 376, 0, 377, 378, 379, 0, 0, 1222, 380,
	381, 382, 665, 666, 383, 384, 385, 386, 387, 388,
	389, 390, 391, 0, 392, 1218, 0, 668, 393, 0,
	394, 395, 396, 397, 398, 1181, 1182, 1185, 484, 1224,
	399, 400, 0, 401, 402, 403, 404, 405, 0, 0,
	0, 279, 406, 407, 408, 0, 1223, 409, 672, 673,
	0, 674, 0, 410, 411, 1225, 1183, 1226, 412, 413,
	414, 1227, 415, 0, 0, 0, 416, 417, 418, 419,
	420, 421, 1264, 422, 424, 423, 0, 425, 1219, 1228,
	426, 427, 1229, 0, 428, 429, 430, 431, 432, 433,
	436, 1174, 1173, 434, 435, 437, 438, 0, 439, 440,
	442, 445, 441, 443, 444, 446, 459, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 458, 461,
	0, 460, 1230, 462, 463, 464, 465, 472, 474, 475,
	470, 471, 473, 476, 477, 479, 467, 468, 469, 1231,
	478, 466, 0, 280, 1232, 480, 481, 482, 0, 1184,
	483, 678, 485, 486, 0, 0, 487, 0, 0, 1270,
	489, 490, 491, 0, 0, 492, 493, 679, 1233, 494,
	1234, 1213, 495, 496, 488, 497, 498, 499, 500, 501,
	502, 503, 504, 505, 0, 506, 507, 681, 508, 509,
	510, 682, 511, 512, 513, 1214, 514, 684, 515, 516,
	0, 517, 518, 0, 519, 520, 521, 522, 523, 524,
	525, 685, 526, 527, 529, 528, 530, 0, 531, 0,
	532, 533, 534, 0, 0, 0, 0, 0, 535, 537,
	0, 538, 539, 540, 541, 536, 542, 543, 544, 545,
	546, 0, 547, 548, 549, 1235, 550, 551, 552, 553,
	554, 686, 1272, 0, 556, 557, 563, 564, 565, 558,
	559, 566, 567, 568, 569, 570, 0, 572, 573, 571,
	574, 575, 576, 1177, 577, 578, 560, 561, 579, 580,
	1236, 581, 582, 583, 584, 585, 586, 587, 687, 0,
	588, 0, 589, 590, 591, 592, 594, 562, 595, 600,
	601, 688, 596, 597, 598, 599, 1215, 603, 604, 0,
	605, 606, 0, 602, 593, 0, 607, 608, 609, 610,
	611, 612, 613, 614, 0, 615, 690, 691, 692, 693,
	0, 624, 0, 616, 617, 618, 1216, 619, 1217, 0,
	620, 621, 622, 623, 0, 625, 626, 0, 0, 627,
	628, 629, 631, 632, 630, 633, 1178, 634, 0, 0,
	635, 636, 637, 696, 697, 698, 0, 639, 638, 640,
	641, 699, 642, 643, 0, 0, 0, 0, 644, 645,
	700, 646, 647, 648, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1260, 0, 1278, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1268, 0, 1266, 281, 283, 282, 284, 285,
	286, 287, 0, 288, 289, 0, 0, 0, 0, 0,
	1180, 0, 0, 0, 0, 290, 291, 1220, 292, 293,
	294, 295, 296, 297, 650, 651, 0, 298, 652, 299,
	653, 0, 654, 300, 301, 302, 303, 304, 305, 0,
	1179, 0, 306, 655, 656, 657, 0, 307, 308, 1186,
	0, 1167, 0, 309, 310, 311, 312, 313, 314, 315,
	0, 0, 317, 318, 319, 316, 320, 0, 321, 0,
	322, 323, 324, 325, 326, 327, 0, 328, 329, 330,
	1221, 331, 332, 333, 1170, 1168, 1169, 1176, 1172, 1171,
	1175, 334, 335, 336, 337, 338, 0, 339, 341, 659,
	660, 0, 344, 340, 342, 0, 345, 343, 346, 0,
	347, 348, 349, 0, 0, 350, 351, 352, 0, 353,
	354, 355, 0, 356, 357, 358, 0, 359, 360, 661,
	361, 362, 363, 365, 367, 364, 366, 368, 369, 370,
	371, 1211, 1212, 372, 0, 278, 0, 0, 0, 0,
	0, 373, 374, 375, 664, 0, 0, 0, 376, 0,
	377, 378, 379, 0, 0, 1222, 380, 381, 382, 665,
	666, 383, 384, 385, 386, 387, 388, 389, 390, 391,
	0, 392, 1218, 0, 668, 393, 0, 394, 395, 396,
	397, 398, 1181, 1182, 1185, 484, 1224, 399, 400, 0,
	401, 402, 403, 404, 405, 0, 0, 0, 279, 406,
	407, 408, 0, 1223, 409, 672, 673, 0, 674, 0,
	410, 411, 1225, 1183, 1226, 412, 413, 414, 1227, 415,
	0, 0, 0, 416, 417, 418, 419, 420, 421, 1264,
	422, 424, 423, 0, 425, 1219, 1228, 426, 427, 1229,
	0, 428, 429, 430, 431, 432, 433, 436, 1174, 1173,
	434, 435, 437, 438, 0, 439, 440, 442, 445, 441,
	443, 444, 446, 459, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 458, 461, 0, 460, 1230,
	462, 463, 464, 465, 472, 474, 475, 470, 471, 473,
	476, 477, 479, 467, 468, 469, 1231, 478, 466, 0,
	280, 1232, 480, 481, 482, 0, 1184, 483, 678, 485,
	486, 0, 0, 487, 0, 0, 1270, 489, 490, 491,
	0, 0, 492, 493, 679, 1233, 494, 1234, 1213, 495,
	496, 488, 497, 498, 499, 500, 501, 502, 503, 504,
	505, 0, 506, 507, 681, 508, 509, 510, 682, 511,
	512, 513, 1214, 514, 684, 515, 516, 0, 517, 518,
	0, 519, 520, 521, 522, 523, 524, 525, 685, 526,
	527, 529, 528, 530, 0, 531, 0, 532, 533, 534,
	0, 0, 0, 0, 0, 535, 537, 0, 538, 539,
	540, 541, 536, 542, 543, 544, 545, 546, 0, 547,
	548, 549, 1235, 550, 551, 552, 553, 554, 686, 1272,
	0, 556, 557, 563, 564, 565, 558, 559, 566, 567,
	568, 569, 570, 0, 572, 573, 571, 574, 575, 576,
	1177, 577, 578, 560, 561, 579, 580, 1236, 581, 582,
	583, 584, 585, 586, 587, 687, 0, 588, 0, 589,
	590, 591, 592, 594, 562, 595, 600, 601, 688, 596,
	597, 598, 599, 1215, 603, 604, 0, 605, 606, 0,
	602, 593, 0, 607, 608, 609, 610, 611, 612, 613,
	614, 0, 615, 690, 691, 692, 693, 0, 624, 0,
	616, 617, 618, 1216, 619, 1217, 0, 620, 621, 622,
	623, 0, 625, 626, 0, 0, 627, 628, 629, 631,
	632, 630, 633, 1178, 634, 0, 0, 635, 636, 637,
	696, 697, 698, 0, 639, 638, 640, 641, 699, 642,
	643, 0, 0, 0, 0, 644, 645, 700, 646, 647,
	648, 1278, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 281, 283,
	282, 284, 285, 286, 287, 0, 288, 289, 0, 1268,
	0, 1266, 0, 1180, 0, 0, 0, 0, 290, 291,
	1220, 292, 293, 294, 295, 296, 297, 650, 651, 0,
	298, 652, 299, 653, 0, 654, 300, 301, 302, 303,
	304, 305, 0, 1179, 0, 306, 655, 656, 657, 0,
	307, 308, 1186, 0, 1167, 0, 309, 310, 311, 312,
	313, 314, 315, 0, 0, 317, 318, 319, 316, 320,
	0, 321, 0, 322, 323, 324, 325, 326, 327, 0,
	328, 329, 330, 1221, 331, 332, 333, 1170, 1168, 1169,
	1176, 1172, 1171, 1175, 334, 335, 336, 337, 338, 0,
	339, 341, 659, 660, 0, 344, 340, 342, 0, 345,
	343, 346, 0, 347, 348, 349, 0, 0, 350, 351,
	352, 0, 353, 354, 355, 0, 356, 357, 358, 0,
	359, 360, 661, 361, 362, 363, 365, 367, 364, 366,
	368, 369, 370, 371, 1211, 1212, 372, 0, 278, 0,
	0, 0, 0, 0, 373, 374, 375, 664, 0, 0,
	0, 376, 0, 377, 378, 379, 0, 0, 1222, 380,
	381, 382, 665, 666, 383, 384, 385, 386, 387, 388,
	389, 390, 391, 0, 392, 1218, 0, 668, 393, 0,
	394, 395, 396, 397, 398, 1181, 1182, 1185, 484, 1224,
	399, 400, 0, 401, 402, 403, 404, 405, 0, 0,
	0, 279, 406, 407, 408, 0, 1223, 409, 672, 673,
	0, 674, 0, 410, 411, 1225, 1183, 1226, 412, 413,
	414, 1227, 415, 0, 0, 0, 416, 417, 418, 419,
	420, 421, 1264, 422, 424, 423, 0, 425, 1219, 1228,
	426, 427, 1229, 0, 428, 429, 430, 431, 432, 433,
	436, 1174, 1173, 434, 435, 437, 438, 0, 439, 440,
	442, 445, 441, 443, 444, 446, 459, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 458, 461,
	0, 460, 1230, 462, 463, 464, 465, 472, 474, 475,
	470, 471, 473, 476, 477, 479, 467, 468, 469, 1231,
	478, 466, 0, 280, 1232, 480, 481, 482, 0, 1184,
	483, 678, 485, 486, 0, 0, 487, 0, 0, 1270,
	489, 490, 491, 0, 0, 492, 493, 679, 1233, 494,
	1234, 1213, 495, 496, 488, 497, 498, 499, 500, 501,
	502, 503, 504, 505, 0, 506, 507, 681, 508, 509,
	510, 682, 511, 512, 513, 1214, 514, 684, 515, 516,
	0, 517, 518, 0, 519, 520, 521, 522, 523, 524,
	525, 685, 526, 527, 529, 528, 530, 0, 531, 0,
	532, 533, 534, 0, 0, 0, 0, 0, 535, 537,
	0, 538, 539, 540, 541, 536, 542, 543, 544, 545,
	546, 0, 547, 548, 549, 1235, 550, 551, 552, 553,
	554, 686, 1272, 0, 556, 557, 563, 564, 565, 558,
	559, 566, 567, 568, 569, 570, 0, 572, 573, 571,
	574, 575, 576, 1177, 577, 578, 560, 561, 579, 580,
	1236, 581, 582, 583, 584, 585, 586, 587, 687, 0,
	588, 0, 589, 590, 591, 592, 594, 562, 595, 600,
	601, 688, 596, 597, 598, 599, 1215, 603, 604, 0,
	605, 606, 0, 602, 593, 0, 607, 608, 609, 610,
	611, 612, 613, 614, 0, 615, 690, 691, 692, 693,
	0, 624, 0, 616, 617, 618, 1216, 619, 1217, 0,
	620, 621, 622, 623, 0, 625, 626, 0, 0, 627,
	628, 629, 631, 632, 630, 633, 1178, 634, 0, 0,
	635, 636, 637, 696, 697, 698, 0, 639, 638, 640,
	641, 699, 642, 643, 0, 0, 0, 0, 644, 645,
	700, 646, 647, 648, 1278, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 281, 283, 282, 284, 285, 286, 287, 0, 288,
	289, 0, 1268, 0, 1266, 0, 1180, 0, 0, 0,
	0, 290, 291, 1220, 292, 293, 294, 295, 296, 297,
	650, 651, 0, 298, 652, 299, 653, 0, 654, 300,
	301, 302, 303, 304, 305, 0, 1179, 0, 306, 655,
	656, 657, 0, 307, 308, 1186, 0, 1167, 0, 309,
	310, 311, 312, 313, 314, 315, 0, 0, 317, 318,
	319, 316, 320, 0, 321, 0, 322, 323, 324, 325,
	326, 327, 0, 328, 329, 330, 1221, 331, 332, 333,
	1170, 1168, 1169, 1176, 1172, 1171, 1175, 334, 335, 336,
	337, 338, 0, 339, 341, 659, 660, 0, 344, 340,
	342, 0, 345, 343, 346, 0, 347, 348, 349, 0,
	0, 350, 351, 352, 0, 353, 354, 355, 0, 356,
	357, 358, 0, 359, 360, 661, 361, 362, 363, 365,
	367, 364, 366, 368, 369, 370, 371, 1211, 1212, 372,
	0, 278, 0, 0, 0, 0, 0, 373, 374, 375,
	664, 0, 0, 0, 376, 0, 377, 378, 379, 0,
	0, 1222, 380, 381, 382, 665, 666, 383, 384, 385,
	386, 387, 388, 389, 390, 391, 0, 392, 1218, 0,
	668, 393, 0, 394, 395, 396, 397, 398, 1181, 1182,
	1185, 484, 1224, 399, 400, 0, 401, 402, 403, 404,
	405, 0, 0, 0, 279, 406, 407, 408, 0, 1223,
	409, 672, 673, 0, 674, 0, 410, 411, 1225, 1183,
	1226, 412, 413, 414, 1227, 415, 0, 0, 0, 416,
	417, 418, 419, 420, 421, 0, 422, 424, 423, 0,
	425, 1219, 1228, 426, 427, 1229, 0, 428, 429, 430,
	431, 432, 433, 436, 1174, 1173, 434, 435, 437, 438,
	0, 439, 440, 442, 445, 441, 443, 444, 446, 459,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 458, 461, 0, 460, 1230, 462, 463, 464, 465,
	472, 474, 475, 470, 471, 473, 476, 477, 479, 467,
	468, 469, 1231, 478, 466, 0, 280, 1232, 480, 481,
	482, 0, 1184, 483, 678, 485, 486, 0, 0, 487,
	0, 0, 0, 489, 490, 491, 0, 0, 492, 493,
	679, 1233, 494, 1234, 1213, 495, 496, 488, 497, 498,
	499, 500, 501, 502, 503, 504, 505, 0, 506, 507,
	681, 508, 509, 510, 682, 511, 512, 513, 1214, 514,
	684, 515, 516, 0, 517, 518, 0, 519, 520, 521,
	522, 523, 524, 525, 685, 526, 527, 529, 528, 530,
	0, 531, 0, 532, 533, 534, 0, 0, 0, 0,
	0, 535, 537, 0, 538, 539, 540, 541, 536, 542,
	543, 544, 545, 546, 0, 547, 548, 549, 1235, 550,
	551, 552, 553, 554, 686, 555, 0, 556, 557, 563,
	564, 565, 558, 559, 566, 567, 568, 569, 570, 0,
	572, 573, 571, 574, 575, 576, 1177, 577, 578, 560,
	561, 579, 580, 1236, 581, 582, 583, 584, 585, 586,
	587, 687, 0, 588, 0, 589, 590, 591, 592, 594,
	562, 595, 600, 601, 688, 596, 597, 598, 599, 1215,
	603, 604, 0, 605, 606, 0, 602, 593, 0, 607,
	608, 609, 610, 611, 612, 613, 614, 0, 615, 690,
	691, 692, 693, 0, 624, 0, 616, 617, 618, 1216,
	619, 1217, 0, 620, 621, 622, 623, 0, 625, 626,
	0, 0, 627, 628, 629, 631, 632, 630, 633, 1178,
	634, 0, 0, 635, 636, 637, 696, 697, 698, 0,
	639, 638, 640, 641, 699, 642, 643, 0, 0, 0,
	0, 644, 645, 700, 646, 647, 648, 1278, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 281, 283, 282, 284, 285, 286,
	287, 0, 288, 289, 0, 0, 0, 4299, 0, 1180,
	0, 0, 0, 0, 290, 291, 1220, 292, 293, 294,
	295, 296, 297, 650, 651, 0, 298, 652, 299, 653,
	0, 654, 300, 301, 302, 303, 304, 305, 0, 1179,
	0, 306, 655, 656, 657, 0, 307, 308, 1186, 0,
	1167, 0, 309, 310, 311, 312, 313, 314, 315, 0,
	0, 317, 318, 319, 316, 320, 0, 321, 0, 322,
	323, 324, 325, 326, 327, 0, 328, 329, 330, 1221,
	331, 332, 333, 1170, 1168, 1169, 1176, 1172, 1171, 1175,
	334, 335, 336, 337, 338, 0, 339, 341, 659, 660,
	0, 344, 340, 342, 0, 345, 343, 346, 0, 347,
	348, 349, 0, 0, 350, 351, 352, 0, 353, 354,
	355, 0, 356, 357, 358, 0, 359, 360, 661, 361,
	362, 363, 365, 367, 364, 366, 368, 369, 370, 371,
	1211, 1212, 372, 0, 278, 0, 0, 0, 0, 0,
	373, 374, 375, 664, 0, 0, 0, 376, 0, 377,
	378, 379, 0, 0, 1222, 380, 381, 382, 665, 666,
	383, 384, 385, 386, 387, 388, 389, 390, 391, 0,
	392, 1218, 0, 668, 393, 0, 394, 395, 396, 397,
	398, 1181, 1182, 1185, 484, 1224, 399, 400, 0, 401,
	402, 403, 404, 405, 0, 0, 0, 279, 406, 407,
	408, 0, 1223, 409, 672, 673, 0, 674, 0, 410,
	411, 1225, 1183, 1226, 412, 413, 414, 1227, 415, 0,
	0, 0, 416, 417, 418, 419, 420, 421, 0, 422,
	424, 423, 0, 425, 1219, 1228, 426, 427, 1229, 0,
	428, 429, 430, 431, 432, 433, 436, 1174, 1173, 434,
	435, 437, 438, 0, 439, 440, 442, 445, 441, 443,
	444, 446, 459, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 458, 461, 0, 460, 1230, 462,
	463, 464, 465, 472, 474, 475, 470, 471, 473, 476,
	477, 479, 467, 468, 469, 1231, 478, 466, 0, 280,
	1232, 480, 481, 482, 0, 1184, 483, 678, 485, 486,
	0, 0, 487, 0, 0, 0, 489, 490, 491, 0,
	0, 492, 493, 679, 1233, 494, 1234, 1213, 495, 496,
	488, 497, 498, 499, 500, 501, 502, 503, 504, 505,
	0, 506, 507, 681, 508, 509, 510, 682, 511, 512,
	513, 1214, 514, 684, 515, 516, 0, 517, 518, 0,
	519, 520, 521, 522, 523, 524, 525, 685, 526, 527,
	529, 528, 530, 0, 531, 0, 532, 533, 534, 0,
	0, 0, 0, 0, 535, 537, 0, 538, 539, 540,
	541, 536, 542, 543, 544, 545, 546, 0, 547, 548,
	549, 1235, 550, 551, 552, 553, 554, 686, 1272, 0,
	556, 557, 563, 564, 565, 558, 559, 566, 567, 568,
	569, 570, 0, 572, 573, 571, 574, 575, 576, 1177,
	577, 578, 560, 561, 579, 580, 1236, 581, 582, 583,
	584, 585, 586, 587, 687, 0, 588, 0, 589, 590,
	591, 592, 594, 562, 595, 600, 601, 688, 596, 597,
	598, 599, 1215, 603, 604, 0, 605, 606, 0, 602,
	593, 0, 607, 608, 609, 610, 611, 612, 613, 614,
	0, 615, 690, 691, 692, 693, 0, 624, 0, 616,
	617, 618, 1216, 619, 1217, 0, 620, 621, 622, 623,
	0, 625, 626, 0, 0, 627, 628, 629, 631, 632,
	630, 633, 1178, 634, 0, 0, 635, 636, 637, 696,
	697, 698, 0, 639, 638, 640, 641, 699, 642, 643,
	0, 275, 0, 0, 644, 645, 700, 646, 647, 648,
	0, 2617, 2618, 2619, 2636, 2637, 2638, 0, 281, 283,
	282, 284, 285, 286, 287, 0, 288, 289, 0, 0,
	0, 2639, 0, 649, 0, 0, 0, 0, 290, 291,
	1907, 292, 293, 294, 295, 296, 297, 650, 651, 0,
	298, 652, 299, 653, 0, 654, 300, 301, 302, 303,
	304, 305, 0, 0, 1892, 306, 655, 656, 657, 0,
	307, 308, 658, 0, 0, 0, 309, 310, 311, 312,
	313, 314, 315, 2629, 0, 317, 318, 319, 316, 320,
	0, 321, 2625, 322, 323, 324, 325, 326, 327, 0,
	328, 329, 330, 0, 331, 332, 333, 0, 0, 0,
	0, 0, 0, 0, 334, 335, 336, 337, 338, 0,
	339, 341, 659, 660, 0, 344, 340, 342, 0, 345,
	343, 346, 0, 347, 348, 349, 0, 0, 350, 351,
	352, 0, 353, 354, 355, 0, 356, 357, 358, 0,
	359, 360, 661, 361, 362, 363, 365, 367, 364, 366,
	368, 369, 370, 371, 662, 663, 372, 0, 0, 0,
	2630, 2631, 2632, 2633, 373, 374, 375, 664, 0, 0,
	2624, 376, 0, 377, 378, 379, 0, 0, 0, 380,
	381, 382, 665, 666, 383, 384, 385, 386, 387, 388,
	389, 390, 391, 0, 392, 667, 0, 668, 393, 0,
	394, 395, 396, 397, 398, 669, 670, 671, 484, 0,
	399, 400, 0, 401, 402, 403, 404, 405, 0, 0,
	0, 0, 406, 407, 408, 0, 0, 409, 672, 673,
	0, 674, 0, 410, 411, 0, 675, 0, 412, 413,
	414, 0, 415, 0, 2634, 2635, 416, 417, 418, 419,
	420, 421, 0, 422, 424, 423, 0, 425, 676, 0,
	426, 427, 0, 0, 428, 429, 430, 431, 432, 433,
	436, 0, 0, 434, 435, 437, 438, 2627, 439, 440,
	442, 445, 441, 443, 444, 446, 459, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 458, 461,
	0, 460, 0, 462, 463, 464, 465, 472, 474, 475,
	470, 471, 473, 476, 477, 479, 467, 468, 469, 0,
	478, 466, 0, 0, 0, 480, 481, 482, 0, 677,
	483, 678, 485, 486, 0, 0, 487, 0, 0, 0,
	489, 490, 491, 0, 0, 492, 493, 679, 0, 494,
	0, 680, 495, 496, 488, 497, 498, 499, 500, 501,
	502, 503, 504, 505, 0, 506, 507, 681, 508, 509,
	510, 682, 511, 512, 513, 683, 514, 684, 515, 516,
	0, 517, 518, 0, 519, 520, 521, 522, 523, 524,
	525, 685, 526, 527, 529, 528, 530, 0, 531, 0,
	532, 533, 534, 0, 0, 0, 0, 0, 535, 537,
	0, 538, 539, 540, 541, 536, 542, 543, 544, 545,
	546, 0, 547, 548, 549, 0, 550, 551, 552, 553,
	554, 686, 555, 2628, 556, 557, 563, 564, 565, 558,
	559, 566, 567, 568, 569, 570, 0, 572, 573, 571,
	574, 575, 576, 0, 577, 578, 560, 561, 579, 580,
	0, 581, 582, 583, 584, 585, 586, 587, 687, 0,
	588, 0, 589, 590, 591, 592, 594, 562, 595, 600,
	601, 688, 596, 597, 598, 599, 689, 603, 604, 0,
	605, 606, 1891, 602, 593, 0, 607, 608, 609, 610,
	611, 612, 613, 614, 0, 615, 690, 691, 692, 693,
	0, 624, 0, 616, 617, 618, 694, 619, 695, 0,
	620, 621, 622, 623, 0, 625, 626, 0, 0, 627,
	628, 629, 631, 632, 630, 633, 0, 634, 0, 0,
	635, 636, 637, 696, 697, 698, 0, 639, 638, 640,
	641, 699, 642, 643, 0, 0, 0, 0, 644, 645,
	700, 646, 647, 648, 0, 0, 0, 0, 0, 0,
	0, 1100, 0, 1582, 2614, 2615, 2616, 2640, 2626, 2620,
	0, 2622, 2623, 2621, 2608, 2609, 2610, 2611, 2612, 2613,
	281, 283, 282, 284, 285, 286, 287, 0, 288, 289,
	0, 0, 0, 0, 0, 649, 0, 0, 0, 0,
	290, 291, 1220, 292, 293, 294, 295, 296, 297, 650,
	651, 0, 298, 652, 299, 653, 0, 654, 300, 301,
	302, 303, 304, 305, 0, 0, 0, 306, 655, 656,
	657, 0, 307, 308, 658, 0, 1504, 0, 309, 310,
	311, 312, 313, 314, 315, 0, 0, 317, 318, 319,
	316, 320, 0, 321, 0, 322, 323, 324, 325, 326,
	327, 0, 328, 329, 330, 1221, 331, 332, 333, 0,
	0, 0, 0, 0, 0, 0, 334, 335, 336, 337,
	338, 0, 339, 341, 659, 660, 0, 344, 340, 342,
	0, 345, 343, 346, 0, 347, 348, 349, 0, 0,
	350, 351, 352, 0, 353, 354, 355, 0, 356, 357,
	358, 0, 359, 360, 661, 361, 362, 363, 365, 367,
	364, 366, 368, 369, 370, 371, 662, 663, 372, 0,
	278, 0, 0, 0, 0, 0, 373, 374, 375, 664,
	0, 0, 0, 376, 0, 377, 378, 379, 0, 0,
	1222, 380, 381, 382, 665, 666, 383, 384, 385, 386,
	387, 388, 389, 390, 391, 0, 392, 667, 0, 668,
	393, 0, 394, 395, 396, 397, 398, 669, 670, 671,
	484, 1224, 399, 400, 0, 401, 402, 403, 404, 405,
	0, 0, 0, 0, 406, 407, 408, 0, 1223, 409,
	672, 673, 0, 674, 0, 410, 411, 1225, 675, 1226,
	412, 413, 414, 1227, 415, 0, 0, 0, 416, 417,
	418, 419, 420, 421, 0, 422, 424, 423, 0, 425,
	676, 1228, 426, 427, 1229, 0, 428, 429, 430, 431,
	432, 433, 436, 0, 0, 434, 435, 437, 438, 0,
	439, 440, 442, 445, 441, 443, 444, 446, 459, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	458, 461, 0, 460, 1230, 462, 463, 464, 465, 472,
	474, 475, 470, 471, 473, 476, 477, 479, 467, 468,
	469, 1231, 478, 466, 0, 0, 1232, 480, 481, 482,
	0, 677, 483, 678, 485, 486, 0, 0, 487, 0,
	0, 0, 489, 490, 491, 0, 0, 492, 493, 679,
	1233, 494, 1234, 680, 495, 496, 488, 497, 498, 499,
	500, 501, 502, 503, 504, 505, 0, 506, 507, 681,
	508, 509, 510, 682, 511, 512, 513, 683, 514, 684,
	515, 516, 0, 517, 518, 0, 519, 520, 521, 522,
	523, 524, 525, 685, 526, 527, 529, 528, 530, 0,
	531, 0, 532, 533, 534, 0, 0, 0, 0, 0,
	535, 537, 0, 538, 539, 540, 541, 536, 542, 543,
	544, 545, 546, 0, 547, 548, 549, 1235, 550, 551,
	552, 553, 554, 686, 555, 0, 556, 557, 563, 564,
	565, 558, 559, 566, 567, 568, 569, 570, 240, 572,
	573, 571, 574, 575, 576, 0, 577, 578, 560, 561,
	579, 580, 1236, 581, 582, 583, 584, 585, 586, 587,
	687, 0, 588, 0, 589, 590, 591, 592, 594, 562,
	595, 600, 601, 688, 596, 597, 598, 599, 689, 603,
	604, 0, 605, 606, 0, 602, 593, 242, 607, 608,
	609, 610, 611, 612, 613, 614, 0, 615, 690, 691,
	692, 693, 0, 624, 0, 616, 617, 618, 694, 619,
	695, 0, 620, 621, 622, 623, 0, 625, 626, 0,
	0, 627, 628, 629, 631, 632, 630, 633, 0, 634,
	0, 0, 635, 636, 637, 1656, 697, 698, 0, 639,
	638, 640, 641, 699, 642, 643, 0, 0, 0, 234,
	644, 645, 700, 646, 647, 648, 0, 1653, 235, 1582,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 281, 283, 282, 284,
	285, 286, 287, 0, 288, 289, 195, 0, 0, 0,
	0, 649, 0, 0, 0, 0, 290, 291, 1220, 292,
	293, 294, 295, 296, 297, 650, 651, 0, 298, 652,
	299, 653, 0, 654, 300, 301, 302, 303, 304, 305,
	0, 0, 0, 306, 655, 656, 657, 0, 307, 308,
	658, 0, 1504, 0, 309, 310, 311, 312, 313, 314,
	315, 0, 0, 317, 318, 319, 316, 320, 0, 321,
	0, 322, 323, 324, 325, 326, 327, 0, 328, 329,
	330, 1221, 331, 332, 333, 0, 0, 0, 0, 0,
	0, 0, 334, 335, 336, 337, 338, 0, 339, 341,
	659, 660, 0, 344, 340, 342, 0, 345, 343, 346,
	0, 347, 348, 349, 0, 0, 350, 351, 352, 0,
	353, 354, 355, 0, 356, 357, 358, 0, 359, 360,
	661, 361, 362, 363, 365, 367, 364, 366, 368, 369,
	370, 371, 662, 663, 372, 0, 278, 0, 0, 0,
	0, 0, 373, 374, 375, 664, 0, 0, 0, 376,
	0, 377, 378, 379, 0, 0, 1222, 380, 381, 382,
	665, 666, 383, 384, 385, 386, 387, 388, 389, 390,
	391, 0, 392, 667, 0, 668, 393, 0, 394, 395,
	396, 397, 398, 669, 670, 671, 484, 1224, 399, 400,
	0, 401, 402, 403, 404, 405, 0, 0, 0, 0,
	406, 407, 408, 0, 1223, 409, 672, 673, 0, 674,
	0, 410, 411, 1225, 675, 1226, 412, 413, 414, 1227,
	415, 0, 0, 0, 416, 417, 418, 419, 420, 421,
	0, 422, 424, 423, 0, 425, 676, 1228, 426, 427,
	1229, 0, 428, 429, 430, 431, 432, 433, 436, 0,
	0, 434, 435, 437, 438, 0, 439, 440, 442, 445,
	441, 443, 444, 446, 459, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 458, 461, 0, 460,
	1230, 462, 463, 464, 465, 472, 474, 475, 470, 471,
	473, 476, 477, 479, 467, 468, 469, 1231, 478, 466,
	0, 0, 1232, 480, 481, 482, 0, 677, 483, 678,
	485, 486, 0, 0, 487, 0, 0, 0, 489, 490,
	491, 0, 0, 492, 493, 679, 1233, 494, 1234, 680,
	495, 496, 488, 497, 498, 499, 500, 501, 502, 503,
	504, 505, 0, 506, 507, 681, 508, 509, 510, 682,
	511, 512, 513, 683, 514, 684, 515, 516, 0, 517,
	518, 0, 519, 520, 521, 522, 523, 524, 525, 685,
	526, 527, 529, 528, 530, 0, 531, 0, 532, 533,
	534, 0, 0, 0, 0, 0, 535, 537, 0, 538,
	539, 540, 541, 536, 542, 543, 544, 545, 546, 0,
	547, 548, 549, 1235, 550, 551, 552, 553, 554, 686,
	555, 0, 556, 557, 563, 564, 565, 558, 559, 566,
	567, 568, 569, 570, 240, 572, 573, 571, 574, 575,
	576, 0, 577, 578, 560, 561, 579, 580, 1236, 581,
	582, 583, 584, 585, 586, 587, 687, 0, 588, 0,
	589, 590, 591, 592, 594, 562, 595, 600, 601, 688,
	596, 597, 598, 599, 689, 603, 604, 0, 605, 606,
	0, 602, 593, 242, 607, 608, 609, 610, 611, 612,
	613, 614, 0, 615, 690, 691, 692, 693, 0, 624,
	0, 616, 617, 618, 694, 619, 695, 0, 620, 621,
	622, 623, 0, 625, 626, 0, 0, 627, 628, 629,
	631, 632, 630, 633, 0, 634, 0, 0, 635, 636,
	637, 1656, 697, 698, 0, 639, 638, 640, 641, 699,
	642, 643, 0, 0, 0, 234, 644, 645, 700, 646,
	647, 648, 1582, 1581, 235, 0, 0, 0, 1579, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 281,
	283, 282, 284, 285, 286, 287, 0, 288, 289, 0,
	0, 0, 195, 0, 649, 0, 0, 0, 0, 290,
	291, 1220, 292, 293, 294, 295, 296, 297, 650, 651,
	0, 298, 652, 299, 653, 0, 654, 300, 301, 302,
	303, 304, 305, 0, 0, 0, 306, 655, 656, 657,
	0, 307, 308, 658, 0, 1504, 0, 309, 310, 311,
	312, 313, 314, 315, 0, 0, 317, 318, 319, 316,
	320, 0, 321, 0, 322, 323, 324, 325, 326, 327,
	0, 328, 329, 330, 1221, 331, 332, 333, 0, 0,
	0, 0, 0, 0, 0, 334, 335, 336, 337, 338,
	0, 339, 341, 659, 660, 0, 344, 340, 342, 0,
	345, 343, 346, 0, 347, 348, 349, 0, 0, 350,
	351, 352, 0, 353, 354, 355, 0, 356, 357, 358,
	0, 359, 360, 661, 361, 362, 363, 365, 367, 364,
	366, 368, 369, 370, 371, 662, 663, 372, 0, 278,
	0, 0, 0, 0, 0, 373, 374, 375, 664, 0,
	0, 0, 376, 0, 377, 378, 379, 0, 0, 1222,
	380, 381, 382, 665, 666, 383, 384, 385, 386, 387,
	388, 389, 390, 391, 0, 392, 667, 0, 668, 393,
	0, 394, 395, 396, 397, 398, 669, 670, 671, 484,
	1224, 399, 400, 0, 401, 402, 403, 404, 405, 0,
	0, 0, 0, 406, 407, 408, 0, 1223, 409, 672,
	673, 0, 674, 0, 410, 411, 1225, 675, 1226, 412,
	413, 414, 1227, 415, 0, 0, 0, 416, 417, 418,
	419, 420, 421, 0, 422, 424, 423, 0, 425, 676,
	1228, 426, 427, 1229, 0, 428, 429, 430, 431, 432,
	433, 436, 0, 0, 434, 435, 437, 438, 0, 439,
	440, 442, 445, 441, 443, 444, 446, 459, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 458,
	461, 0, 460, 1230, 462, 463, 464, 465, 472, 474,
	475, 470, 471, 473, 476, 477, 479, 467, 468, 469,
	1231, 478, 466, 0, 0, 1232, 480, 481, 482, 0,
	677, 483, 678, 485, 486, 0, 0, 487, 0, 0,
	0, 489, 490, 491, 0, 0, 492, 493, 679, 1233,
	494, 1234, 680, 495, 496, 488, 497, 498, 499, 500,
	501, 502, 503, 504, 505, 0, 506, 507, 681, 508,
	509, 510, 682, 511, 512, 513, 683, 514, 684, 515,
	516, 0, 517, 518, 0, 519, 520, 521, 522, 523,
	524, 525, 685, 526, 527, 529, 528, 530, 0, 531,
	0, 532, 533, 534, 0, 0, 0, 0, 0, 535,
	537, 0, 538, 539, 540, 541, 536, 542, 543, 544,
	545, 546, 0, 547, 548, 549, 1235, 550, 551, 552,
	553, 554, 686, 555, 0, 556, 557, 563, 564, 565,
	558, 559, 566, 567, 568, 569, 570, 0, 572, 573,
	571, 574, 575, 576, 0, 577, 578, 560, 561, 579,
	580, 1236, 581, 582, 583, 584, 585, 586, 587, 687,
	0, 588, 0, 589, 590, 591, 592, 594, 562, 595,
	600, 601, 688, 596, 597, 598, 599, 689, 603, 604,
	0, 605, 606, 0, 602, 593, 0, 607, 608, 609,
	610, 611, 612, 613, 614, 0, 615, 690, 691, 692,
	693, 0, 624, 0, 616, 617, 618, 694, 619, 695,
	0, 620, 621, 622, 623, 0, 625, 626, 0, 0,
	627, 628, 629, 631, 632, 630, 633, 0, 634, 0,
	0, 635, 636, 637, 696, 697, 698, 0, 639, 638,
	640, 641, 699, 642, 643, 0, 0, 0, 0, 644,
	645, 700, 646, 647, 648, 1582, 1581, 0, 0, 0,
	0, 1579, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 281, 283, 282, 284, 285, 286, 287, 0,
	288, 289, 0, 0, 0, 1680, 0, 649, 0, 0,
	0, 0, 290, 291, 1220, 292, 293, 294, 295, 296,
	297, 650, 651, 0, 298, 652, 299, 653, 0, 654,
	300, 301, 302, 303, 304, 305, 0, 0, 0, 306,
	655, 656, 657, 0, 307, 308, 658, 0, 1504, 0,
	309, 310, 311, 312, 313, 314, 315, 0, 0, 317,
	318, 319, 316, 320, 0, 321, 0, 322, 323, 324,
	325, 326, 327, 0, 328, 329, 330, 1221, 331, 332,
	333, 0, 0, 0, 0, 0, 0, 0, 334, 335,
	336, 337, 338, 0, 339, 341, 659, 660, 0, 344,
	340, 342, 0, 345, 343, 346, 0, 347, 348, 349,
	0, 0, 350, 351, 352, 0, 353, 354, 355, 0,
	356, 357, 358, 0, 359, 360, 661, 361, 362, 363,
	365, 367, 364, 366, 368, 369, 370, 371, 662, 663,
	372, 0, 278, 0, 0, 0, 0, 0, 373, 374,
	375, 664, 0, 0, 0, 376, 0, 377, 378, 379,
	0, 0, 1222, 380, 381, 382, 665, 666, 383, 384,
	385, 386, 387, 388, 389, 390, 391, 0, 392, 667,
	0, 668, 393, 0, 394, 395, 396, 397, 398, 669,
	670, 671, 484, 1224, 399, 400, 0, 401, 402, 403,
	404, 405, 0, 0, 0, 0, 406, 407, 408, 0,
	1223, 409, 672, 673, 0, 674, 0, 410, 411, 1225,
	675, 1226, 412, 413, 414, 1227, 415, 0, 0, 0,
	416, 417, 418, 419, 420, 421, 0, 422, 424, 423,
	0, 425, 676, 1228, 426, 427, 1229, 0, 428, 429,
	430, 431, 432, 433, 436, 0, 0, 434, 435, 437,
	438, 0, 439, 440, 442, 445, 441, 443, 444, 446,
	459, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 458, 461, 0, 460, 1230, 462, 463, 464,
	465, 472, 474, 475, 470, 471, 473, 476, 477, 479,
	467, 468, 469, 1231, 478, 466, 0, 0, 1232, 480,
	481, 482, 0, 677, 483, 678, 485, 486, 0, 0,
	487, 0, 0, 0, 489, 490, 491, 0, 0, 492,
	493, 679, 1233, 494, 1234, 680, 495, 496, 488, 497,
	498, 499, 500, 501, 502, 503, 504, 505, 0, 506,
	507, 681, 508, 509, 510, 682, 511, 512, 513, 683,
	514, 684, 515, 516, 0, 517, 518, 0, 519, 520,
	521, 522, 523, 524, 525, 685, 526, 527, 529, 528,
	530, 0, 531, 0, 532, 533, 534, 0, 0, 0,
	0, 0, 535, 537, 0, 538, 539, 540, 541, 536,
	542, 543, 544, 545, 546, 0, 547, 548, 549, 1235,
	550, 551, 552, 553, 554, 686, 555, 0, 556, 557,
	563, 564, 565, 558, 559, 566, 567, 568, 569, 570,
	0, 572, 573, 571, 574, 575, 576, 0, 577, 578,
	560, 561, 579, 580, 1236, 581, 582, 583, 584, 585,
	586, 587, 687, 0, 588, 0, 589, 590, 591, 592,
	594, 562, 595, 600, 601, 688, 596, 597, 598, 599,
	689, 603, 604, 0, 605, 606, 0, 602, 593, 0,
	607, 608, 609, 610, 611, 612, 613, 614, 0, 615,
	690, 691, 692, 693, 0, 624, 0, 616, 617, 618,
	694, 619, 695, 0, 620, 621, 622, 623, 0, 625,
	626, 0, 0, 627, 628, 629, 631, 632, 630, 633,
	0, 634, 0, 0, 635, 636, 637, 696, 697, 698,
	0, 639, 638, 640, 641, 699, 642, 643, 0, 0,
	0, 0, 644, 645, 700, 646, 647, 648, 1582, 1581,
	0, 0, 0, 0, 1579, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 281, 283, 282, 284, 285,
	286, 287, 0, 288, 289, 0, 0, 0, 3735, 0,
	649, 0, 0, 0, 0, 290, 291, 1220, 292, 293,
	294, 295, 296, 297, 650, 651, 0, 298, 652, 299,
	653, 0, 654, 300, 301, 302, 303, 304, 305, 0,
	0, 0, 306, 655, 656, 657, 0, 307, 308, 658,
	0, 1504, 0, 309, 310, 311, 312, 313, 314, 315,
	0, 0, 317, 318, 319, 316, 320, 0, 321, 0,
	322, 323, 324, 325, 326, 327, 0, 328, 329, 330,
	1221, 331, 332, 333, 0, 0, 0, 0, 0, 0,
	0, 334, 335, 336, 337, 338, 0, 339, 341, 659,
	660, 0, 344, 340, 342, 0, 345, 343, 346, 0,
	347, 348, 349, 0, 0, 350, 351, 352, 0, 353,
	354, 355, 0, 356, 357, 358, 0, 359, 360, 661,
	361, 362, 363, 365, 367, 364, 366, 368, 369, 370,
	371, 662, 663, 372, 0, 278, 0, 0, 0, 0,
	0, 373, 374, 375, 664, 0, 0, 0, 376, 0,
	377, 378, 379, 0, 0, 1222, 380, 381, 382, 665,
	666, 383, 384, 385, 386, 387, 388, 389, 390, 391,
	0, 392, 667, 0, 668, 393, 0, 394, 395, 396,
	397, 398, 669, 670, 671, 484, 1224, 399, 400, 0,
	401, 402, 403, 404, 405, 0, 0, 0, 0, 406,
	407, 408, 0, 1223, 409, 672, 673, 0, 674, 0,
	410, 411, 1225, 675, 1226, 412, 413, 414, 1227, 415,
	0, 0, 0, 416, 417, 418, 419, 420, 421, 0,
	422, 424, 423, 0, 425, 676, 1228, 426, 427, 1229,
	0, 428, 429, 430, 431, 432, 433, 436, 0, 0,
	434, 435, 437, 438, 0, 439, 440, 442, 445, 441,
	443, 444, 446, 459, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 458, 461, 0, 460, 1230,
	462, 463, 464, 465, 472, 474, 475, 470, 471, 473,
	476, 477, 479, 467, 468, 469, 1231, 478, 466, 0,
	0, 1232, 480, 481, 482, 0, 677, 483, 678, 485,
	486, 0, 0, 487, 0, 0, 0, 489, 490, 491,
	0, 0, 492, 493, 679, 1233, 494, 1234, 680, 495,
	496, 488, 497, 498, 499, 500, 501, 502, 503, 504,
	505, 0, 506, 507, 681, 508, 509, 510, 682, 511,
	512, 513, 683, 514, 684, 515, 516, 0, 517, 518,
	0, 519, 520, 521, 522, 523, 524, 525, 685, 526,
	527, 529, 528, 530, 0, 531, 0, 532, 533, 534,
	0, 0, 0, 0, 0, 535, 537, 0, 538, 539,
	540, 2381, 536, 542, 543, 544, 545, 546, 0, 547,
	548, 549, 1235, 550, 551, 552, 553, 554, 686, 555,
	0, 556, 557, 563, 564, 565, 558, 559, 566, 567,
	568, 569, 570, 0, 572, 573, 571, 574, 575, 576,
	0, 577, 578, 560, 561, 579, 580, 1236, 581, 582,
	583, 584, 585, 586, 587, 687, 0, 588, 0, 589,
	590, 591, 592, 594, 562, 595, 600, 601, 688, 596,
	597, 598, 599, 689, 603, 604, 0, 605, 606, 0,
	602, 593, 0, 607, 608, 609, 610, 611, 612, 613,
	614, 0, 615, 690, 691, 692, 693, 0, 624, 0,
	616, 617, 618, 694, 619, 695, 0, 620, 621, 622,
	623, 0, 625, 626, 0, 0, 627, 628, 629, 631,
	632, 630, 633, 0, 634, 0, 0, 635, 636, 637,
	696, 697, 698, 0, 639, 638, 640, 641, 699, 642,
	643, 0, 0, 0, 0, 644, 645, 700, 646, 647,
	648, 1582, 2290, 0, 0, 0, 0, 2291, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 281, 283,
	282, 284, 285, 286, 287, 0, 288, 289, 0, 0,
	0, 1680, 0, 649, 0, 0, 0, 0, 290, 291,
	1220, 292, 293, 294, 295, 296, 297, 650, 651, 0,
	298, 652, 299, 653, 0, 654, 300, 301, 302, 303,
	304, 305, 0, 0, 0, 306, 655, 656, 657, 0,
	307, 308, 658, 0, 1504, 0, 309, 310, 311, 312,
	313, 314, 315, 0, 0, 317, 318, 319, 316, 320,
	0, 321, 0, 322, 323, 324, 325, 326, 327, 0,
	328, 329, 330, 1221, 331, 332, 333, 0, 0, 0,
	0, 0, 0, 0, 334, 335, 336, 337, 338, 0,
	339, 341, 659, 660, 0, 344, 340, 342, 0, 345,
	343, 346, 0, 347, 348, 349, 0, 0, 350, 351,
	352, 0, 353, 354, 355, 0, 356, 357, 358, 0,
	359, 360, 661, 361, 362, 363, 365, 367, 364, 366,
	368, 369, 370, 371, 662, 663, 372, 0, 278, 0,
	0, 0, 0, 0, 373, 374, 375, 664, 0, 0,
	0, 376, 0, 377, 378, 379, 0, 0, 1222, 380,
	381, 382, 665, 666, 383, 384, 385, 386, 387, 388,
	389, 390, 391, 0, 392, 667, 0, 668, 393, 0,
	394, 395, 396, 397, 398, 669, 670, 671, 484, 1224,
	399, 400, 0, 401, 402, 403, 404, 405, 0, 0,
	0, 0, 406, 407, 408, 0, 1223, 409, 672, 673,
	0, 674, 0, 410, 411, 1225, 675, 1226, 412, 413,
	414, 1227, 415, 0, 0, 0, 416, 417, 418, 419,
	420, 421, 0, 2289, 424, 423, 0, 425, 676, 1228,
	426, 427, 1229, 0, 428, 429, 430, 431, 432, 433,
	436, 0, 0, 434, 435, 437, 438, 0, 439, 440,
	442, 445, 441, 443, 444, 446, 459, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 458, 461,
	0, 460, 1230, 462, 463, 464, 465, 472, 474, 475,
	470, 471, 473, 476, 477, 479, 467, 468, 469, 1231,
	478, 466, 0, 0, 1232, 480, 481, 482, 0, 677,
	483, 678, 485, 486, 0, 0, 487, 0, 0, 0,
	489, 490, 491, 0, 0, 492, 493, 679, 1233, 494,
	1234, 680, 495, 496, 488, 497, 498, 499, 500, 501,
	502, 503, 504, 505, 0, 506, 507, 681, 508, 509,
	510, 682, 511, 512, 513, 683, 514, 684, 515, 516,
	0, 517, 518, 0, 519, 520, 521, 522, 523, 524,
	525, 685, 526, 527, 529, 528, 530, 0, 531, 0,
	532, 533, 534, 0, 0, 0, 0, 0, 535, 537,
	0, 538, 539, 540, 541, 536, 542, 543, 544, 545,
	546, 0, 547, 548, 549, 1235, 550, 551, 552, 553,
	554, 686, 555, 0, 556, 557, 563, 564, 565, 558,
	559, 566, 567, 568, 569, 570, 0, 572, 573, 571,
	574, 575, 576, 0, 577, 578, 560, 561, 579, 580,
	1236, 581, 582, 583, 584, 585, 586, 587, 687, 0,
	588, 0, 589, 590, 591, 592, 594, 562, 595, 600,
	601, 688, 596, 597, 598, 599, 689, 603, 604, 0,
	605, 606, 0, 602, 593, 0, 607, 608, 609, 610,
	611, 612, 613, 614, 0, 615, 690, 691, 692, 693,
	0, 624, 0, 616, 617, 618, 694, 619, 695, 0,
	620, 621, 622, 623, 0, 625, 626, 0, 0, 627,
	628, 629, 631, 632, 630, 633, 0, 634, 0, 0,
	635, 636, 637, 696, 697, 698, 0, 639, 638, 640,
	641, 699, 642, 643, 0, 0, 0, 0, 644, 645,
	700, 646, 647, 648, 1582, 1581, 0, 0, 0, 0,
	1579, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 281, 283, 282, 284, 285, 286, 287, 0, 288,
	289, 0, 0, 0, 1680, 0, 649, 0, 0, 0,
	0, 290, 291, 1220, 292, 293, 294, 295, 296, 297,
	650, 651, 0, 298, 652, 299, 653, 0, 654, 300,
	301, 302, 303, 304, 305, 0, 0, 0, 306, 655,
	656, 657, 0, 307, 308, 658, 0, 1504, 0, 309,
	310, 311, 312, 313, 314, 315, 0, 0, 317, 318,
	319, 316, 320, 0, 321, 0, 322, 323, 324, 325,
	326, 327, 0, 328, 329, 330, 1221, 331, 332, 333,
	0, 0, 0, 0, 0, 0, 0, 334, 335, 336,
	337, 338, 0, 339, 341, 659, 660, 0, 344, 340,
	342, 0, 345, 343, 346, 0, 347, 348, 349, 0,
	0, 350, 351, 352, 0, 353, 354, 355, 0, 356,
	357, 358, 0, 359, 360, 661, 361, 362, 363, 365,
	367, 364, 366, 368, 369, 370, 371, 662, 663, 372,
	0, 278, 0, 0, 0, 0, 0, 373, 374, 375,
	664, 0, 0, 0, 376, 0, 377, 378, 379, 0,
	0, 1222, 380, 381, 382, 665, 666, 383, 384, 385,
	386, 387, 388, 389, 390, 391, 0, 392, 667, 0,
	668, 393, 0, 394, 395, 396, 397, 398, 669, 670,
	671, 484, 1224, 399, 400, 0, 401, 402, 403, 404,
	405, 0, 0, 0, 0, 406, 407, 408, 0, 1223,
	409, 672, 673, 0, 674, 0, 410, 411, 1225, 675,
	1226, 412, 413, 414, 1227, 415, 0, 0, 0, 416,
	417, 418, 419, 420, 421, 0, 422, 424, 423, 0,
	425, 676, 1228, 426, 427, 1229, 0, 428, 429, 430,
	431, 432, 433, 436, 0, 0, 434, 435, 437, 438,
	0, 439, 440, 442, 445, 441, 443, 444, 446, 459,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 458, 461, 0, 460, 1230, 462, 463, 464, 465,
	472, 474, 475, 470, 471, 473, 476, 477, 479, 467,
	468, 469, 1231, 478, 466, 0, 0, 1232, 480, 481,
	482, 0, 677, 483, 678, 485, 486, 0, 0, 487,
	0, 0, 0, 489, 490, 491, 0, 0, 492, 493,
	679, 1233, 494, 1234, 680, 495, 496, 488, 497, 498,
	499, 500, 501, 502, 503, 504, 505, 0, 506, 507,
	681, 508, 509, 510, 682, 511, 512, 513, 683, 514,
	684, 515, 516, 0, 517, 518, 0, 519, 520, 521,
	522, 523, 524, 525, 685, 526, 527, 529, 528, 530,
	0, 531, 0, 532, 533, 534, 0, 0, 0, 0,
	0, 535, 537, 0, 538, 539, 540, 541, 536, 542,
	543, 544, 545, 546, 0, 547, 548, 549, 1235, 550,
	551, 552, 553, 554, 686, 555, 0, 556, 557, 563,
	564, 565, 558, 559, 566, 567, 568, 569, 570, 0,
	572, 573, 571, 574, 575, 576, 0, 577, 578, 560,
	561, 579, 580, 1236, 581, 582, 583, 584, 585, 586,
	587, 687, 0, 588, 0, 589, 590, 591, 592, 594,
	562, 595, 600, 601, 688, 596, 597, 598, 599, 689,
	603, 604, 0, 605, 606, 0, 602, 593, 0, 607,
	608, 609, 610, 611, 612, 613, 614, 0, 615, 690,
	691, 692, 693, 0, 624, 0, 616, 617, 618, 694,
	619, 695, 0, 620, 621, 622, 623, 0, 625, 626,
	0, 0, 627, 628, 629, 631, 632, 630, 633, 0,
	634, 0, 0, 635, 636, 637, 696, 697, 698, 0,
	639, 638, 640, 641, 699, 642, 643, 0, 0, 0,
	0, 644, 645, 700, 646, 647, 648, 1100, 0, 275,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 281, 283, 282, 284,
	285, 286, 287, 0, 288, 289, 0, 1662, 0, 0,
	0, 649, 0, 0, 0, 0, 290, 291, 0, 292,
	293, 294, 295, 296, 297, 650, 651, 0, 298, 652,
	299, 653, 0, 654, 300, 301, 302, 303, 304, 305,
	0, 0, 0, 306, 655, 656, 657, 0, 307, 308,
	658, 0, 0, 0, 309, 310, 311, 312, 313, 314,
	315, 0, 0, 317, 318, 319, 316, 320, 0, 321,
	0, 322, 323, 324, 325, 326, 327, 0, 328, 329,
	330, 0, 331, 332, 333, 0, 0, 0, 0, 0,
	0, 0, 334, 335, 336, 337, 338, 0, 339, 341,
	659, 660, 0, 344, 340, 342, 0, 345, 343, 346,
	0, 347, 348, 349, 0, 0, 350, 351, 352, 0,
	353, 354, 355, 0, 356, 357, 358, 0, 359, 360,
	661, 361, 362, 363, 365, 367, 364, 366, 368, 369,
	370, 371, 662, 663, 372, 0, 0, 0, 0, 0,
	0, 0, 373, 374, 375, 664, 0, 0, 0, 376,
	0, 377, 378, 379, 0, 0, 0, 380, 381, 382,
	665, 666, 383, 384, 385, 386, 387, 388, 389, 390,
	391, 0, 392, 667, 0, 668, 393, 0, 394, 395,
	396, 397, 398, 669, 670, 671, 484, 0, 399, 400,
	0, 401, 402, 403, 404, 405, 0, 0, 0, 0,
	406, 407, 408, 0, 0, 409, 672, 673, 0, 674,
	0, 410, 411, 0, 675, 0, 412, 413, 414, 0,
	415, 0, 0, 0, 416, 417, 418, 419, 420, 421,
	0, 422, 424, 423, 0, 425, 676, 0, 426, 427,
	0, 0, 428, 429, 430, 431, 432, 433, 436, 0,
	0, 434, 435, 437, 438, 0, 439, 440, 442, 445,
	441, 443, 444, 446, 459, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 458, 461, 0, 460,
	0, 462, 463, 464, 465, 472, 474, 475, 470, 471,
	473, 476, 477, 479, 467, 468, 469, 0, 478, 466,
	0, 0, 0, 480, 481, 482, 0, 677, 483, 678,
	485, 486, 0, 0, 487, 0, 0, 0, 489, 490,
	491, 0, 0, 492, 493, 679, 0, 494, 0, 680,
	495, 496, 488, 497, 498, 499, 500, 501, 502, 503,
	504, 505, 0, 506, 507, 681, 508, 509, 510, 682,
	511, 512, 513, 683, 514, 684, 515, 516, 0, 517,
	518, 0, 519, 520, 521, 522, 523, 524, 525, 685,
	526, 527, 529, 528, 530, 0, 531, 0, 532, 533,
	534, 0, 0, 0, 0, 0, 535, 537, 0, 538,
	539, 540, 541, 536, 542, 543, 544, 545, 546, 0,
	547, 548, 549, 0, 550, 551, 552, 553, 554, 686,
	555, 0, 556, 557, 563, 564, 565, 558, 559, 566,
	567, 568, 569, 570, 240, 572, 573, 571, 574, 575,
	576, 0, 577, 578, 560, 561, 579, 580, 0, 581,
	582, 583, 584, 585, 586, 587, 687, 0, 588, 0,
	589, 590, 591, 592, 594, 562, 595, 600, 601, 688,
	596, 597, 598, 599, 689, 603, 604, 0, 605, 606,
	0, 602, 593, 242, 607, 608, 609, 610, 611, 612,
	613, 614, 0, 615, 690, 691, 692, 693, 0, 624,
	0, 616, 617, 618, 694, 619, 695, 0, 620, 621,
	622, 623, 0, 625, 626, 0, 0, 627, 628, 629,
	631, 632, 630, 633, 0, 634, 0, 0, 635, 636,
	637, 1656, 697, 698, 0, 639, 638, 640, 641, 699,
	642, 643, 0, 275, 0, 234, 644, 645, 700, 646,
	647, 648, 0, 0, 235, 0, 0, 0, 0, 0,
	281, 283, 282, 284, 285, 286, 287, 0, 288, 289,
	0, 0, 0, 0, 0, 649, 0, 0, 0, 0,
	290, 291, 195, 292, 293, 294, 295, 296, 297, 650,
	651, 0, 298, 652, 299, 653, 0, 654, 300, 301,
	302, 303, 304, 305, 0, 0, 0, 306, 655, 656,
	657, 0, 307, 308, 658, 0, 0, 0, 309, 310,
	311, 312, 313, 314, 315, 0, 0, 317, 318, 319,
	316, 320, 0, 321, 0, 322, 323, 324, 325, 326,
	327, 0, 328, 329, 330, 0, 331, 332, 333, 0,
	0, 0, 0, 0, 0, 0, 334, 335, 336, 337,
	338, 0, 339, 341, 659, 660, 0, 344, 340, 342,
	0, 345, 343, 346, 0, 347, 348, 349, 0, 0,
	350, 351, 352, 0, 353, 354, 355, 0, 356, 357,
	358, 0, 359, 360, 661, 361, 362, 363, 365, 367,
	364, 366, 368, 369, 370, 371, 662, 663, 372, 0,
	278, 0, 0, 0, 0, 0, 373, 374, 375, 664,
	0, 0, 0, 376, 0, 377, 378, 379, 0, 0,
	0, 380, 381, 382, 665, 666, 383, 384, 385, 386,
	387, 388, 389, 390, 391, 0, 392, 667, 0, 668,
	393, 0, 394, 395, 396, 397, 398, 669, 670, 671,
	484, 0, 399, 400, 0, 401, 402, 403, 404, 405,
	0, 0, 0, 279, 406, 407, 408, 0, 0, 409,
	672, 673, 0, 674, 0, 410, 411, 0, 675, 0,
	412, 413, 414, 0, 415, 0, 0, 0, 416, 417,
	418, 419, 420, 421, 0, 422, 424, 423, 0, 425,
	676, 0, 426, 427, 0, 0, 428, 429, 430, 431,
	432, 433, 436, 0, 0, 434, 435, 437, 438, 0,
	439, 440, 442, 445, 441, 443, 444, 446, 459, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	458, 461, 0, 460, 0, 462, 463, 464, 465, 472,
	474, 475, 470, 471, 473, 476, 477, 479, 467, 468,
	469, 0, 478, 466, 0, 280, 0, 480, 481, 482,
	0, 677, 483, 678, 485, 486, 0, 0, 487, 0,
	0, 0, 489, 490, 491, 0, 0, 492, 493, 679,
	0, 494, 0, 680, 495, 496, 488, 497, 498, 499,
	500, 501, 502, 503, 504, 505, 0, 506, 507, 681,
	508, 509, 510, 682, 511, 512, 513, 683, 514, 684,
	515, 516, 0, 517, 518, 0, 519, 520, 521, 522,
	523, 524, 525, 685, 526, 527, 529, 528, 530, 0,
	531, 0, 532, 533, 534, 0, 0, 0, 0, 0,
	535, 537, 0, 538, 539, 540, 541, 536, 542, 543,
	544, 545, 546, 0, 547, 548, 549, 0, 550, 551,
	552, 553, 554, 686, 555, 0, 556, 557, 563, 564,
	565, 558, 559, 566, 567, 568, 569, 570, 0, 572,
	573, 571, 574, 575, 576, 0, 577, 578, 560, 561,
	579, 580, 0, 581, 582, 583, 584, 585, 586, 587,
	687, 0, 588, 0, 589, 590, 591, 592, 594, 562,
	595, 600, 601, 688, 596, 597, 598, 599, 689, 603,
	604, 0, 605, 606, 0, 602, 593, 0, 607, 608,
	609, 610, 611, 612, 613, 614, 0, 615, 690, 691,
	692, 693, 0, 624, 0, 616, 617, 618, 694, 619,
	695, 0, 620, 621, 622, 623, 0, 625, 626, 0,
	0, 627, 628, 629, 631, 632, 630, 633, 0, 634,
	0, 0, 635, 636, 637, 696, 697, 698, 0, 639,
	638, 640, 641, 699, 642, 643, 0, 275, 3164, 0,
	644, 645, 700, 646, 647, 648, 0, 0, 0, 0,
	0, 0, 0, 0, 281, 283, 282, 284, 285, 286,
	287, 0, 288, 289, 0, 0, 0, 0, 0, 649,
	0, 0, 0, 0, 290, 291, 2024, 292, 293, 294,
	295, 296, 297, 650, 651, 0, 298, 652, 299, 653,
	0, 654, 300, 301, 302, 303, 304, 305, 0, 0,
	0, 306, 655, 656, 657, 0, 307, 308, 658, 0,
	0, 0, 309, 310, 311, 312, 313, 314, 315, 0,
	0, 317, 318, 319, 316, 320, 0, 321, 0, 322,
	323, 324, 325, 326, 327, 0, 328, 329, 330, 0,
	331, 332, 333, 0, 0, 0, 0, 0, 0, 0,
	334, 335, 336, 337, 338, 0, 339, 341, 659, 660,
	0, 344, 340, 342, 0, 345, 343, 346, 0, 347,
	348, 349, 0, 0, 350, 351, 352, 0, 353, 354,
	355, 0, 356, 357, 358, 0, 359, 360, 661, 361,
	362, 363, 365, 367, 364, 366, 368, 369, 370, 371,
	662, 663, 372, 0, 0, 0, 0, 0, 0, 0,
	373, 374, 375, 664, 0, 0, 0, 376, 0, 377,
	378, 379, 0, 0, 0, 380, 381, 382, 665, 666,
	383, 384, 385, 386, 387, 388, 389, 390, 391, 0,
	392, 667, 0, 668, 393, 0, 394, 395, 396, 397,
	398, 669, 670, 671, 484, 0, 399, 400, 0, 401,
	402, 403, 404, 405, 0, 0, 0, 0, 406, 407,
	408, 0, 0, 409, 672, 673, 0, 674, 0, 410,
	411, 0, 675, 0, 412, 413, 414, 0, 415, 0,
	0, 0, 416, 417, 418, 419, 420, 421, 0, 422,
	424, 423, 0, 425, 676, 0, 426, 427, 0, 0,
	428, 429, 430, 431, 432, 433, 436, 0, 0, 434,
	435, 437, 438, 0, 439, 440, 442, 445, 441, 443,
	444, 446, 459, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 458, 461, 0, 460, 0, 462,
	463, 464, 465, 472, 474, 475, 470, 471, 473, 476,
	477, 479, 467, 468, 469, 0, 478, 466, 0, 0,
	0, 480, 481, 482, 0, 677, 483, 678, 485, 486,
	0, 0, 487, 0, 0, 0, 489, 490, 491, 0,
	0, 492, 493, 679, 0, 494, 0, 680, 495, 496,
	488, 497, 498, 499, 500, 501, 502, 503, 504, 505,
	0, 506, 507, 681, 508, 509, 510, 682, 511, 512,
	513, 683, 514, 684, 515, 516, 0, 517, 518, 0,
	519, 520, 521, 522, 523, 524, 525, 685, 526, 527,
	529, 528, 530, 0, 531, 0, 532, 533, 534, 0,
	0, 0, 0, 0, 535, 537, 0, 538, 539, 540,
	541, 536, 542, 543, 544, 545, 546, 0, 547, 548,
	549, 0, 550, 551, 552, 553, 554, 686, 555, 0,
	556, 557, 563, 564, 565, 558, 559, 566, 567, 568,
	569, 570, 0, 572, 573, 571, 574, 575, 576, 0,
	577, 578, 560, 561, 579, 580, 0, 581, 582, 583,
	584, 585, 586, 587, 687, 0, 588, 0, 589, 590,
	591, 592, 594, 562, 595, 600, 601, 688, 596, 597,
	598, 599, 689, 603, 604, 0, 605, 606, 0, 602,
	593, 0, 607, 608, 609, 610, 611, 612, 613, 614,
	0, 615, 690, 691, 692, 693, 0, 624, 0, 616,
	617, 618, 694, 619, 695, 0, 620, 621, 622, 623,
	0, 625, 626, 0, 0, 627, 628, 629, 631, 632,
	630, 633, 0, 634, 0, 0, 635, 636, 637, 696,
	697, 698, 0, 639, 638, 640, 641, 699, 642, 643,
	0, 0, 0, 0, 644, 645, 700, 646, 647, 648,
	1278, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 281, 283, 282,
	284, 285, 286, 287, 0, 288, 289, 0, 0, 0,
	5042, 0, 1180, 0, 0, 0, 0, 290, 291, 1220,
	292, 293, 294, 295, 296, 297, 650, 651, 0, 298,
	652, 299, 653, 0, 654, 300, 301, 302, 303, 304,
	305, 0, 1179, 0, 306, 655, 656, 657, 0, 307,
	308, 1186, 0, 1167, 0, 309, 310, 311, 312, 313,
	314, 315, 0, 0, 317, 318, 319, 316, 320, 0,
	321, 0, 322, 323, 324, 325, 326, 327, 0, 328,
	329, 330, 1221, 331, 332, 333, 1170, 1168, 1169, 1176,
	1172, 1171, 1175, 334, 335, 336, 337, 338, 0, 339,
	341, 659, 660, 0, 344, 340, 342, 0, 345, 343,
	346, 0, 347, 348, 349, 0, 0, 350, 351, 352,
	0, 353, 354, 355, 0, 356, 357, 358, 0, 359,
	360, 661, 361, 362, 363, 365, 367, 364, 366, 368,
	369, 370, 371, 1211, 1212, 372, 0, 278, 0, 0,
	0, 0, 0, 373, 374, 375, 664, 0, 0, 0,
	376, 0, 377, 378, 379, 0, 0, 1222, 380, 381,
	382, 665, 666, 383, 384, 385, 386, 387, 388, 389,
	390, 391, 0, 392, 1218, 0, 668, 393, 0, 394,
	395, 396, 397, 398, 1181, 1182, 1185, 484, 1224, 399,
	400, 0, 401, 402, 403, 404, 405, 0, 0, 0,
	279, 406, 407, 408, 0, 1223, 409, 672, 673, 0,
	674, 0, 410, 411, 1225, 1183, 1226, 412, 413, 414,
	1227, 415, 0, 0, 0, 416, 417, 418, 419, 420,
	421, 0, 422, 424, 423, 0, 425, 1219, 1228, 426,
	427, 1229, 0, 428, 429, 430, 431, 432, 433, 436,
	1174, 1173, 434, 435, 437, 438, 0, 439, 440, 442,
	445, 441, 443, 444, 446, 459, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 458, 461, 0,
	460, 1230, 462, 463, 464, 465, 472, 474, 475, 470,
	471, 473, 476, 477, 479, 467, 468, 469, 1231, 478,
	466, 0, 280, 1232, 480, 481, 482, 0, 1184, 483,
	678, 485, 486, 0, 0, 487, 0, 0, 0, 489,
	490, 491, 0, 0, 492, 493, 679, 1233, 494, 1234,
	1213, 495, 496, 488, 497, 498, 499, 500, 501, 502,
	503, 504, 505, 0, 506, 507, 681, 508, 509, 510,
	682, 511, 512, 513, 1214, 514, 684, 515, 516, 0,
	517, 518, 0, 519, 520, 521, 522, 523, 524, 525,
	685, 526, 527, 529, 528, 530, 0, 531, 0, 532,
	533, 534, 0, 0, 0, 0, 0, 535, 537, 0,
	538, 539, 540, 541, 536, 542, 543, 544, 545, 546,
	0, 547, 548, 549, 1235, 550, 551, 552, 553, 554,
	686, 555, 0, 556, 557, 563, 564, 565, 558, 559,
	566, 567, 568, 569, 570, 0, 572, 573, 571, 574,
	575, 576, 1177, 577, 578, 560, 561, 579, 580, 1236,
	581, 582, 583, 584, 585, 586, 587, 687, 0, 588,
	0, 589, 590, 591, 592, 594, 562, 595, 600, 601,
	688, 596, 597, 598, 599, 1215, 603, 604, 0, 605,
	606, 0, 602, 593, 0, 607, 608, 609, 610, 611,
	612, 613, 614, 0, 615, 690, 691, 692, 693, 0,
	624, 0, 616, 617, 618, 1216, 619, 1217, 0, 620,
	621, 622, 623, 0, 625, 626, 0, 0, 627, 628,
	629, 631, 632, 630, 633, 1178, 634, 0, 0, 635,
	636, 637, 696, 697, 698, 0, 639, 638, 640, 641,
	699, 642, 643, 275, 0, 0, 0, 644, 645, 700,
	646, 647, 648, 0, 0, 0, 0, 0, 0, 0,
	281, 283, 282, 284, 285, 286, 287, 0, 288, 289,
	0, 0, 0, 0, 0, 649, 0, 0, 0, 0,
	290, 291, 0, 292, 293, 294, 295, 296, 297, 650,
	651, 0, 298, 652, 299, 653, 0, 654, 300, 301,
	302, 303, 304, 305, 0, 0, 0, 306, 655, 656,
	657, 0, 307, 308, 658, 0, 0, 0, 309, 310,
	311, 312, 313, 314, 315, 0, 0, 317, 318, 319,
	316, 320, 0, 321, 0, 322, 323, 324, 325, 326,
	327, 0, 328, 329, 330, 0, 331, 332, 333, 0,
	0, 0, 0, 0, 0, 0, 334, 335, 336, 337,
	338, 0, 339, 341, 659, 660, 0, 344, 340, 342,
	0, 345, 343, 346, 0, 347, 348, 349, 0, 0,
	350, 351, 352, 0, 353, 354, 355, 0, 356, 357,
	358, 0, 359, 360, 661, 361, 362, 363, 365, 367,
	364, 366, 368, 369, 370, 371, 662, 663, 372, 0,
	278, 0, 0, 0, 0, 0, 373, 374, 375, 664,
	0, 0, 0, 376, 0, 377, 378, 379, 0, 0,
	0, 380, 381, 382, 665, 666, 383, 384, 385, 386,
	387, 388, 389, 390, 391, 0, 392, 667, 0, 668,
	393, 0, 394, 395, 396, 397, 398, 669, 670, 671,
	484, 0, 399, 400, 0, 401, 402, 403, 404, 405,
	0, 0, 0, 279, 406, 407, 408, 0, 0, 409,
	672, 673, 0, 674, 0, 410, 411, 0, 675, 0,
	412, 413, 414, 0, 415, 0, 0, 0, 416, 417,
	418, 419, 420, 421, 0, 422, 424, 423, 0, 425,
	676, 0, 426, 427, 0, 0, 428, 429, 430, 431,
	432, 433, 436, 0, 0, 434, 435, 437, 438, 0,
	439, 440, 442, 445, 441, 443, 444, 446, 459, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	458, 461, 0, 460, 0, 462, 463, 464, 465, 472,
	474, 475, 470, 471, 473, 476, 477, 479, 467, 468,
	469, 0, 478, 466, 0, 280, 0, 480, 481, 482,
	0, 677, 483, 678, 485, 486, 0, 0, 487, 0,
	0, 0, 489, 490, 491, 0, 0, 492, 493, 679,
	0, 494, 0, 680, 495, 496, 488, 497, 498, 499,
	500, 501, 502, 503, 504, 505, 0, 506, 507, 681,
	508, 509, 510, 682, 511, 512, 513, 683, 514, 684,
	515, 516, 0, 517, 518, 0, 519, 520, 521, 522,
	523, 524, 525, 685, 526, 527, 529, 528, 530, 0,
	531, 0, 532, 533, 534, 0, 0, 0, 0, 0,
	535, 537, 0, 538, 539, 540, 541, 536, 542, 543,
	544, 545, 546, 0, 547, 548, 549, 0, 550, 551,
	552, 553, 554, 686, 555, 0, 556, 557, 563, 564,
	565, 558, 559, 566, 567, 568, 569, 570, 0, 572,
	573, 571, 574, 575, 576, 0, 577, 578, 560, 561,
	579, 580, 0, 581, 582, 583, 584, 585, 586, 587,
	687, 0, 588, 0, 589, 590, 591, 592, 594, 562,
	595, 600, 601, 688, 596, 597, 598, 599, 689, 603,
	604, 0, 605, 606, 0, 602, 593, 0, 607, 608,
	609, 610, 611, 612, 613, 614, 0, 615, 690, 691,
	692, 693, 0, 624, 0, 616, 617, 618, 694, 619,
	695, 0, 620, 621, 622, 623, 0, 625, 626, 0,
	0, 627, 628, 629, 631, 632, 630, 633, 0, 634,
	0, 0, 635, 636, 637, 696, 697, 698, 0, 639,
	638, 640, 641, 699, 642, 643, 0, 0, 275, 0,
	644, 645, 700, 646, 647, 648, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 281, 283, 282, 284, 285,
	286, 287, 0, 288, 289, 0, 0, 0, 0, 0,
	649, 0, 0, 0, 3685, 290, 291, 0, 292, 293,
	294, 295, 296, 297, 650, 651, 0, 298, 652, 299,
	653, 0, 654, 300, 301, 302, 303, 304, 305, 0,
	0, 0, 306, 655, 656, 657, 0, 307, 308, 658,
	0, 0, 0, 309, 310, 311, 312, 313, 314, 315,
	0, 0, 317, 318, 319, 316, 320, 0, 321, 0,
	322, 323, 324, 325, 326, 327, 0, 328, 329, 330,
	0, 331, 332, 333, 0, 0, 0, 0, 0, 0,
	0, 334, 335, 336, 337, 338, 0, 339, 341, 659,
	660, 0, 344, 340, 342, 0, 345, 343, 346, 0,
	347, 348, 349, 0, 0, 350, 351, 352, 0, 353,
	354, 355, 0, 356, 357, 358, 0, 359, 360, 661,
	361, 362, 363, 365, 367, 364, 366, 368, 369, 370,
	371, 662, 663, 372, 0, 278, 0, 0, 0, 0,
	0, 373, 374, 375, 664, 0, 0, 0, 376, 0,
	377, 378, 379, 0, 0, 0, 380, 381, 382, 665,
	666, 383, 384, 385, 386, 387, 388, 389, 390, 391,
	0, 392, 667, 0, 668, 393, 0, 394, 395, 396,
	397, 398, 669, 670, 671, 484, 0, 399, 400, 0,
	401, 402, 403, 404, 405, 0, 0, 0, 279, 406,
	407, 408, 0, 0, 409, 672, 673, 0, 674, 0,
	410, 411, 0, 675, 0, 412, 413, 414, 0, 415,
	0, 0, 0, 416, 417, 418, 419, 420, 421, 0,
	422, 424, 423, 0, 425, 676, 0, 426, 427, 0,
	0, 428, 429, 430, 431, 432, 433, 436, 0, 0,
	434, 435, 437, 438, 0, 439, 440, 442, 445, 441,
	443, 444, 446, 459, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 458, 461, 0, 460, 0,
	462, 463, 464, 465, 472, 474, 475, 470, 471, 473,
	476, 477, 479, 467, 468, 469, 0, 478, 466, 0,
	280, 0, 480, 481, 482, 0, 677, 483, 678, 485,
	486, 0, 0, 487, 0, 0, 0, 489, 490, 491,
	0, 0, 492, 493, 679, 0, 494, 0, 680, 495,
	496, 488, 497, 498, 499, 500, 501, 502, 503, 504,
	505, 0, 506, 507, 681, 508, 509, 510, 682, 511,
	512, 513, 683, 514, 684, 515, 516, 0, 517, 518,
	0, 519, 520, 521, 522, 523, 524, 525, 685, 526,
	527, 529, 528, 530, 0, 531, 0, 532, 533, 534,
	0, 0, 0, 0, 0, 535, 537, 0, 538, 539,
	540, 541, 536, 542, 543, 544, 545, 546, 0, 547,
	548, 549, 0, 550, 551, 552, 553, 554, 686, 555,
	0, 556, 557, 563, 564, 565, 558, 559, 566, 567,
	568, 569, 570, 0, 572, 573, 571, 574, 575, 576,
	0, 577, 578, 560, 561, 579, 580, 0, 581, 582,
	583, 584, 585, 586, 587, 687, 0, 588, 0, 589,
	590, 591, 592, 594, 562, 595, 600, 601, 688, 596,
	597, 598, 599, 689, 603, 604, 0, 605, 606, 0,
	602, 593, 0, 607, 608, 609, 610, 611, 612, 613,
	614, 0, 615, 690, 691, 692, 693, 0, 624, 0,
	616, 617, 618, 694, 619, 695, 0, 620, 621, 622,
	623, 0, 625, 626, 0, 0, 627, 628, 629, 631,
	632, 630, 633, 0, 634, 0, 0, 635, 636, 637,
	696, 697, 698, 0, 639, 638, 640, 641, 699, 642,
	643, 0, 0, 275, 0, 644, 645, 700, 646, 647,
	648, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	281, 283, 282, 284, 285, 286, 287, 0, 288, 289,
	0, 0, 0, 0, 0, 649, 0, 0, 0, 1650,
	290, 291, 0, 292, 293, 294, 295, 296, 297, 650,
	651, 0, 298, 652, 299, 653, 0, 654, 300, 301,
	302, 303, 304, 305, 0, 0, 0, 306, 655, 656,
	657, 0, 307, 308, 658, 0, 0, 0, 309, 310,
	311, 312, 313, 314, 315, 0, 0, 317, 318, 319,
	316, 320, 0, 321, 0, 322, 323, 324, 325, 326,
	327, 0, 328, 329, 330, 0, 331, 332, 333, 0,
	0, 0, 0, 0, 0, 0, 334, 335, 336, 337,
	338, 0, 339, 341, 659, 660, 0, 344, 340, 342,
	0, 345, 343, 346, 0, 347, 348, 349, 0, 0,
	350, 351, 352, 0, 353, 354, 355, 0, 356, 357,
	358, 0, 359, 360, 661, 361, 362, 363, 365, 367,
	364, 366, 368, 369, 370, 371, 662, 663, 372, 0,
	0, 0, 0, 0, 0, 0, 373, 374, 375, 664,
	0, 0, 0, 376, 0, 377, 378, 379, 0, 0,
	0, 380, 381, 382, 665, 666, 383, 384, 385, 386,
	387, 388, 389, 390, 391, 0, 392, 667, 0, 668,
	393, 0, 394, 395, 396, 397, 398, 669, 670, 671,
	484, 0, 399, 400, 0, 401, 402, 403, 404, 405,
	0, 0, 0, 0, 406, 407, 408, 0, 0, 409,
	672, 673, 0, 674, 0, 410, 411, 0, 675, 0,
	412, 413, 414, 0, 415, 0, 0, 0, 416, 417,
	418, 419, 420, 421, 0, 422, 424, 423, 0, 425,
	676, 0, 426, 427, 0, 0, 428, 429, 430, 431,
	432, 433, 436, 0, 0, 434, 435, 437, 438, 0,
	439, 440, 442, 445, 441, 443, 444, 446, 459, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	458, 461, 0, 460, 0, 462, 463, 464, 465, 472,
	474, 475, 470, 471, 473, 476, 477, 479, 467, 468,
	469, 0, 478, 466, 0, 0, 0, 480, 481, 482,
	0, 677, 483, 678, 485, 486, 0, 0, 487, 0,
	0, 0, 489, 490, 491, 0, 0, 492, 493, 679,
	0, 494, 0, 680, 495, 496, 488, 497, 498, 499,
	500, 501, 502, 503, 504, 505, 0, 506, 507, 681,
	508, 509, 510, 682, 511, 512, 513, 683, 514, 684,
	515, 516, 0, 517, 518, 0, 519, 520, 521, 522,
	523, 524, 525, 685, 526, 527, 529, 528, 530, 0,
	531, 0, 532, 533, 534, 0, 0, 0, 0, 0,
	535, 537, 0, 538, 539, 540, 541, 536, 542, 543,
	544, 545, 546, 0, 547, 548, 549, 0, 550, 551,
	552, 553, 554, 686, 555, 0, 556, 557, 563, 564,
	565, 558, 559, 566, 567, 568, 569, 570, 0, 572,
	573, 571, 574, 575, 576, 0, 577, 578, 560, 561,
	579, 580, 0, 581, 582, 583, 584, 585, 586, 587,
	687, 0, 588, 0, 589, 590, 591, 592, 594, 562,
	595, 600, 601, 688, 596, 597, 598, 599, 689, 603,
	604, 0, 605, 606, 0, 602, 593, 0, 607, 608,
	609, 610, 611, 612, 613, 614, 0, 615, 690, 691,
	692, 693, 0, 624, 0, 616, 617, 618, 694, 619,
	695, 0, 620, 621, 622, 623, 0, 625, 626, 0,
	0, 627, 628, 629, 631, 632, 630, 633, 0, 634,
	0, 0, 635, 636, 637, 696, 697, 698, 0, 639,
	638, 640, 641, 699, 642, 643, 0, 275, 0, 0,
	644, 645, 700, 646, 647, 648, 0, 0, 0, 0,
	0, 0, 0, 0, 281, 283, 282, 284, 285, 286,
	287, 0, 288, 289, 0, 0, 0, 0, 0, 649,
	0, 0, 0, 0, 290, 291, 3152, 292, 293, 294,
	295, 296, 297, 650, 651, 0, 298, 652, 299, 653,
	0, 654, 300, 301, 302, 303, 304, 305, 0, 0,
	0, 306, 655, 656, 657, 0, 307, 308, 658, 0,
	0, 0, 309, 310, 311, 312, 313, 314, 315, 0,
	0, 317, 318, 319, 316, 320, 0, 321, 0, 322,
	323, 324, 325, 326, 327, 0, 328, 329, 330, 0,
	331, 332, 333, 0, 0, 0, 0, 0, 0, 0,
	334, 335, 336, 337, 338, 0, 339, 341, 659, 660,
	0, 344, 340, 342, 0, 345, 343, 346, 0, 347,
	348, 349, 0, 0, 350, 351, 352, 0, 353, 354,
	355, 0, 356, 357, 358, 0, 359, 360, 661, 361,
	362, 363, 365, 367, 364, 366, 368, 369, 370, 371,
	662, 663, 372, 0, 0, 0, 0, 0, 0, 0,
	373, 374, 375, 664, 0, 0, 0, 376, 0, 377,
	378, 379, 0, 0, 0, 380, 381, 382, 665, 666,
	383, 384, 385, 386, 387, 388, 389, 390, 391, 0,
	392, 667, 0, 668, 393, 0, 394, 395, 396, 397,
	398, 669, 670, 671, 484, 0, 399, 400, 0, 401,
	402, 403, 404, 405, 0, 0, 0, 0, 406, 407,
	408, 0, 0, 409, 672, 673, 0, 674, 0, 410,
	411, 0, 675, 0, 412, 413, 414, 0, 415, 0,
	0, 0, 416, 417, 418, 419, 420, 421, 0, 422,
	424, 423, 0, 425, 676, 0, 426, 427, 0, 0,
	428, 429, 430, 431, 432, 433, 436, 0, 0, 434,
	435, 437, 438, 0, 439, 440, 442, 445, 441, 443,
	444, 446, 459, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 458, 461, 0, 460, 0, 462,
	463, 464, 465, 472, 474, 475, 470, 471, 473, 476,
	477, 479, 467, 468, 469, 0, 478, 466, 0, 0,
	0, 480, 481, 482, 0, 677, 483, 678, 485, 486,
	0, 0, 487, 0, 0, 0, 489, 490, 491, 0,
	0, 492, 493, 679, 0, 494, 0, 680, 495, 496,
	488, 497, 498, 499, 500, 501, 502, 503, 504, 505,
	0, 506, 507, 681, 508, 509, 510, 682, 511, 512,
	513, 683, 514, 684, 515, 516, 0, 517, 518, 0,
	519, 520, 521, 522, 523, 524, 525, 685, 526, 527,
	529, 528, 530, 0, 531, 0, 532, 533, 534, 0,
	0, 0, 0, 0, 535, 537, 0, 538, 539, 540,
	541, 536, 542, 543, 544, 545, 546, 0, 547, 548,
	549, 0, 550, 551, 552, 553, 554, 686, 555, 0,
	556, 557, 563, 564, 565, 558, 559, 566, 567, 568,
	569, 570, 0, 572, 573, 571, 574, 575, 576, 0,
	577, 578, 560, 561, 579, 580, 0, 581, 582, 583,
	584, 585, 586, 587, 687, 0, 588, 0, 589, 590,
	591, 592, 594, 562, 595, 600, 601, 688, 596, 597,
	598, 599, 689, 603, 604, 0, 605, 606, 0, 602,
	593, 0, 607, 608, 609, 610, 611, 612, 613, 614,
	0, 615, 690, 691, 692, 693, 0, 624, 0, 616,
	617, 618, 694, 619, 695, 0, 620, 621, 622, 623,
	0, 625, 626, 0, 0, 627, 628, 629, 631, 632,
	630, 633, 0, 634, 0, 0, 635, 636, 637, 696,
	697, 698, 0, 639, 638, 640, 641, 699, 642, 643,
	0, 275, 0, 0, 644, 645, 700, 646, 647, 648,
	0, 0, 0, 0, 0, 0, 0, 0, 281, 283,
	282, 284, 285, 286, 287, 0, 288, 289, 0, 0,
	0, 0, 0, 649, 0, 0, 0, 0, 290, 291,
	3842, 292, 293, 294, 295, 296, 297, 650, 651, 0,
	298, 652, 299, 653, 0, 654, 300, 301, 302, 303,
	304, 305, 0, 0, 0, 306, 655, 656, 657, 0,
	307, 308, 658, 0, 0, 0, 309, 310, 311, 312,
	313, 314, 315, 0, 0, 317, 318, 319, 316, 320,
	0, 321, 0, 322, 323, 324, 325, 326, 327, 0,
	328, 329, 330, 0, 331, 332, 333, 0, 0, 0,
	0, 0, 0, 0, 334, 335, 336, 337, 338, 0,
	339, 341, 659, 660, 0, 344, 340, 342, 0, 345,
	343, 346, 0, 347, 348, 349, 0, 0, 350, 351,
	352, 0, 353, 354, 355, 0, 356, 357, 358, 0,
	359, 360, 661, 361, 362, 363, 365, 367, 364, 366,
	368, 369, 370, 371, 662, 663, 372, 0, 0, 0,
	0, 0, 0, 0, 373, 374, 375, 664, 0, 0,
	0, 376, 0, 377, 378, 379, 0, 0, 0, 380,
	381, 382, 665, 666, 383, 384, 385, 386, 387, 388,
	389, 390, 391, 0, 392, 667, 0, 668, 393, 0,
	394, 395, 396, 397, 398, 669, 670, 671, 484, 0,
	399, 400, 0, 401, 402, 403, 404, 405, 0, 0,
	0, 0, 406, 407, 408, 0, 0, 409, 672, 673,
	0, 674, 0, 410, 411, 0, 675, 0, 412, 413,
	414, 0, 415, 0, 0, 0, 416, 417, 418, 419,
	420, 421, 0, 422, 424, 423, 0, 425, 676, 0,
	426, 427, 0, 0, 428, 429, 430, 431, 432, 433,
	436, 0, 0, 434, 435, 437, 438, 0, 439, 440,
	442, 445, 441, 443, 444, 446, 459, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 458, 461,
	0, 460, 0, 462, 463, 464, 465, 472, 474, 475,
	470, 471, 473, 476, 477, 479, 467, 468, 469, 0,
	478, 466, 0, 0, 0, 480, 481, 482, 0, 677,
	483, 678, 485, 486, 0, 0, 487, 0, 0, 0,
	489, 490, 491, 0, 0, 492, 493, 679, 0, 494,
	0, 680, 495, 496, 488, 497, 498, 499, 500, 501,
	502, 503, 504, 505, 0, 506, 507, 681, 508, 509,
	510, 682, 511, 512, 513, 683, 514, 684, 515, 516,
	0, 517, 518, 0, 519, 520, 521, 522, 523, 524,
	525, 685, 526, 527, 529, 528, 530, 0, 531, 0,
	532, 533, 534, 0, 0, 0, 0, 0, 535, 537,
	0, 538, 539, 540, 541, 536, 542, 543, 544, 545,
	546, 0, 547, 548, 549, 0, 550, 551, 552, 553,
	554, 686, 555, 0, 556, 557, 563, 564, 565, 558,
	559, 566, 567, 568, 569, 570, 0, 572, 573, 571,
	574, 575, 576, 0, 577, 578, 560, 561, 579, 580,
	0, 581, 582, 583, 584, 585, 586, 587, 687, 0,
	588, 0, 589, 590, 591, 592, 594, 562, 595, 600,
	601, 688, 596, 597, 598, 599, 689, 603, 604, 0,
	605, 606, 0, 602, 593, 0, 607, 608, 609, 610,
	611, 612, 613, 614, 0, 615, 690, 691, 692, 693,
	0, 624, 0, 616, 617, 618, 694, 619, 695, 0,
	620, 621, 622, 623, 0, 625, 626, 0, 0, 627,
	628, 629, 631, 632, 630, 633, 0, 634, 0, 0,
	635, 636, 637, 696, 697, 698, 0, 639, 638, 640,
	641, 699, 642, 643, 0, 0, 0, 0, 644, 645,
	700, 646, 647, 648, 928, 0, 829, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 281, 283, 282, 284, 285, 286, 287,
	0, 288, 289, 0, 2368, 0, 0, 0, 649, 0,
	0, 0, 0, 290, 291, 0, 292, 293, 294, 295,
	296, 297, 650, 651, 0, 298, 652, 299, 653, 0,
	654, 300, 301, 302, 303, 304, 305, 0, 0, 0,
	306, 655, 656, 657, 0, 307, 308, 658, 0, 0,
	0, 309, 310, 311, 312, 313, 314, 315, 0, 0,
	317, 318, 319, 316, 320, 0, 321, 0, 322, 323,
	324, 325, 326, 327, 0, 328, 329, 330, 0, 331,
	332, 333, 0, 0, 0, 0, 0, 0, 0, 334,
	335, 336, 836, 338, 0, 339, 341, 659, 660, 0,
	344, 340, 342, 0, 345, 343, 346, 0, 347, 348,
	349, 0, 0, 350, 351, 352, 0, 353, 354, 355,
	0, 356, 357, 358, 0, 359, 360, 661, 361, 362,
	363, 365, 367, 364, 366, 368, 369, 370, 371, 662,
	663, 372, 0, 278, 0, 0, 0, 0, 0, 373,
	374, 375, 664, 0, 0, 0, 376, 0, 377, 378,
	379, 0, 926, 0, 380, 381, 382, 665, 666, 383,
	384, 385, 386, 387, 388, 389, 390, 391, 0, 392,
	667, 0, 668, 393, 0, 394, 395, 396, 397, 398,
	669, 670, 671, 484, 0, 399, 400, 0, 401, 402,
	403, 404, 405, 0, 0, 0, 279, 406, 407, 408,
	0, 0, 409, 672, 673, 0, 674, 0, 410, 411,
	0, 675, 0, 412, 413, 414, 0, 415, 0, 0,
	0, 416, 417, 418, 419, 420, 421, 0, 422, 424,
	423, 0, 425, 676, 0, 426, 427, 0, 0, 428,
	429, 430, 431, 432, 433, 436, 0, 0, 434, 435,
	437, 438, 0, 439, 440, 442, 445, 441, 443, 444,
	446, 459, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 458, 461, 0, 460, 0, 462, 463,
	464, 465, 472, 474, 475, 470, 471, 473, 476, 477,
	479, 467, 468, 469, 0, 478, 466, 0, 280, 0,
	480, 481, 482, 0, 677, 483, 678, 485, 486, 0,
	0, 487, 0, 0, 0, 489, 490, 491, 0, 0,
	492, 493, 679, 0, 494, 0, 680, 495, 496, 488,
	497, 498, 499, 500, 501, 502, 503, 504, 505, 0,
	506, 507, 681, 508, 509, 510, 682, 511, 512, 513,
	683, 514, 684, 515, 516, 0, 517, 518, 0, 519,
	520, 521, 522, 523, 524, 525, 685, 526, 527, 529,
	528, 530, 0, 531, 0, 532, 533, 534, 0, 0,
	0, 0, 0, 535, 537, 0, 538, 539, 540, 541,
	536, 542, 543, 544, 545, 546, 0, 547, 548, 549,
	0, 550, 551, 552, 553, 554, 686, 555, 0, 556,
	557, 563, 564, 565, 558, 559, 566, 567, 568, 569,
	570, 0, 572, 573, 571, 574, 575, 576, 0, 577,
	578, 560, 561, 579, 580, 0, 581, 582, 583, 584,
	585, 586, 587, 687, 0, 588, 0, 589, 590, 591,
	592, 594, 562, 595, 600, 601, 688, 596, 597, 598,
	599, 689, 603, 604, 0, 605, 606, 0, 602, 593,
	834, 607, 608, 609, 610, 611, 835, 613, 614, 0,
	615, 690, 691, 692, 693, 0, 624, 0, 616, 617,
	618, 694, 619, 695, 0, 620, 621, 622, 623, 0,
	625, 626, 0, 0, 627, 628, 629, 631, 632, 630,
	633, 0, 634, 0, 0, 635, 636, 637, 696, 697,
	698, 0, 639, 638, 640, 641, 699, 642, 643, 2069,
	0, 0, 0, 644, 645, 700, 646, 647, 648, 0,
	0, 0, 0, 0, 0, 0, 281, 283, 282, 284,
	285, 286, 287, 0, 288, 289, 0, 0, 0, 0,
	0, 839, 0, 0, 0, 0, 290, 291, 1220, 292,
	293, 294, 295, 296, 297, 0, 2075, 0, 298, 2065,
	299, 2081, 0, 2088, 300, 301, 302, 303, 304, 305,
	0, 0, 0, 306, 2091, 2092, 0, 0, 307, 308,
	0, 0, 1504, 0, 309, 310, 311, 312, 313, 314,
	315, 0, 0, 317, 318, 319, 316, 320, 0, 321,
	0, 322, 323, 324, 325, 326, 327, 0, 328, 329,
	330, 1221, 331, 332, 333, 0, 0, 0, 0, 0,
	0, 0, 334, 335, 336, 337, 338, 1203, 339, 341,
	2079, 2078, 0, 344, 340, 342, 0, 345, 343, 346,
	0, 347, 348, 349, 0, 0, 350, 1188, 352, 0,
	353, 354, 355, 0, 356, 357, 358, 0, 359, 360,
	0, 361, 362, 363, 365, 367, 364, 366, 368, 369,
	370, 371, 0, 0, 372, 0, 0, 0, 0, 0,
	0, 0, 373, 374, 375, 2077, 0, 0, 0, 376,
	0, 377, 378, 379, 0, 0, 1222, 380, 381, 382,
	2086, 2087, 383, 384, 385, 386, 387, 388, 389, 390,
	391, 0, 392, 0, 0, 0, 393, 0, 394, 395,
	396, 397, 398, 0, 0, 0, 484, 1224, 399, 400,
	0, 401, 402, 403, 404, 405, 0, 0, 0, 0,
	406, 407, 408, 0, 1223, 409, 2072, 2073, 0, 2068,
	0, 410, 411, 1225, 0, 1226, 412, 413, 414, 1227,
	415, 0, 0, 0, 416, 417, 418, 419, 420, 421,
	0, 422, 424, 423, 0, 425, 0, 1228, 426, 427,
	1229, 0, 428, 429, 430, 431, 432, 433, 436, 0,
	0, 434, 435, 437, 438, 0, 439, 440, 442, 445,
	441, 443, 444, 446, 459, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 458, 461, 0, 460,
	1230, 462, 463, 464, 465, 472, 474, 475, 470, 471,
	473, 476, 477, 479, 467, 468, 469, 1231, 478, 466,
	0, 0, 1232, 480, 481, 482, 0, 0, 483, 2080,
	485, 486, 0, 0, 487, 0, 0, 0, 489, 490,
	491, 0, 0, 492, 493, 0, 1233, 494, 1234, 0,
	495, 496, 488, 497, 498, 499, 500, 501, 502, 503,
	504, 505, 0, 506, 507, 2062, 508, 509, 510, 2063,
	511, 512, 513, 0, 514, 0, 515, 516, 0, 517,
	518, 0, 519, 520, 521, 522, 523, 524, 525, 2076,
	526, 527, 529, 528, 530, 0, 531, 0, 532, 533,
	534, 0, 0, 0, 0, 0, 535, 537, 0, 538,
	539, 540, 541, 536, 542, 543, 544, 545, 546, 0,
	547, 548, 549, 1235, 550, 551, 552, 553, 554, 0,
	555, 0, 556, 557, 563, 564, 565, 558, 559, 566,
	567, 568, 569, 570, 0, 572, 573, 571, 574, 575,
	576, 0, 577, 578, 560, 561, 579, 580, 1236, 581,
	582, 583, 584, 585, 586, 587, 2074, 0, 588, 0,
	589, 590, 591, 592, 594, 562, 595, 600, 601, 2090,
	596, 597, 598, 599, 0, 603, 604, 0, 605, 606,
	0, 602, 593, 0, 607, 608, 609, 610, 611, 612,
	613, 614, 0, 615, 2082, 2083, 2084, 2085, 0, 624,
	0, 616, 617, 618, 0, 619, 0, 0, 620, 621,
	622, 623, 0, 625, 626, 0, 0, 627, 628, 629,
	631, 632, 630, 633, 0, 634, 0, 0, 635, 636,
	637, 0, 2066, 2089, 0, 639, 638, 640, 641, 0,
	642, 643, 0, 0, 0, 0, 644, 645, 0, 646,
	647, 648, 829, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 281,
	283, 282, 284, 285, 286, 287, 3962, 288, 289, 0,
	0, 0, 0, 0, 649, 0, 2056, 0, 0, 290,
	291, 0, 292, 293, 294, 295, 296, 297, 650, 651,
	0, 298, 652, 299, 653, 0, 654, 300, 301, 302,
	303, 304, 305, 0, 0, 0, 306, 655, 656, 657,
	0, 307, 308, 658, 0, 0, 0, 309, 310, 311,
	312, 313, 314, 315, 0, 0, 317, 318, 319, 316,
	320, 0, 321, 0, 322, 323, 324, 325, 326, 327,
	0, 328, 329, 330, 0, 331, 332, 333, 0, 0,
	0, 0, 0, 0, 0, 334, 335, 336, 836, 338,
	0, 339, 341, 659, 660, 0, 344, 340, 342, 0,
	345, 343, 346, 0, 347, 348, 349, 0, 0, 350,
	351, 352, 0, 353, 354, 355, 0, 356, 357, 358,
	0, 359, 360, 661, 361, 362, 363, 365, 367, 364,
	366, 368, 369, 370, 371, 662, 663, 372, 0, 278,
	0, 0, 0, 0, 0, 373, 374, 375, 664, 0,
	0, 0, 376, 0, 377, 378, 379, 0, 0, 0,
	380, 381, 382, 665, 666, 383, 384, 385, 386, 387,
	388, 389, 390, 391, 0, 392, 667, 0, 668, 393,
	0, 394, 395, 396, 397, 398, 669, 670, 671, 484,
	0, 399, 400, 0, 401, 402, 403, 404, 405, 0,
	0, 0, 279, 406, 407, 408, 0, 0, 409, 672,
	673, 0, 674, 0, 410, 411, 0, 675, 0, 412,
	413, 414, 0, 415, 0, 0, 0, 416, 417, 418,
	419, 420, 421, 0, 422, 424, 423, 0, 425, 676,
	0, 426, 427, 0, 0, 428, 429, 430, 431, 432,
	433, 436, 0, 0, 434, 435, 437, 438, 0, 439,
	440, 442, 445, 441, 443, 444, 446, 459, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 458,
	461, 0, 460, 0, 462, 463, 464, 465, 472, 474,
	475, 470, 471, 473, 476, 477, 479, 467, 468, 469,
	0, 478, 466, 0, 280, 0, 480, 481, 482, 0,
	677, 483, 678, 485, 486, 0, 0, 487, 0, 0,
	0, 489, 490, 491, 0, 0, 492, 493, 679, 0,
	494, 0, 680, 495, 496, 488, 497, 498, 499, 500,
	501, 502, 503, 504, 505, 0, 506, 507, 681, 508,
	509, 510, 682, 511, 512, 513, 683, 514, 684, 515,
	516, 0, 517, 518, 0, 519, 520, 521, 522, 523,
	524, 525, 685, 526, 527, 529, 528, 530, 0, 531,
	0, 532, 533, 534, 0, 0, 0, 0, 0, 535,
	537, 0, 538, 539, 540, 541, 536, 542, 543, 544,
	545, 546, 0, 547, 548, 549, 0, 550, 551, 552,
	553, 554, 686, 555, 0, 556, 557, 563, 564, 565,
	558, 559, 3961, 567, 568, 569, 570, 0, 572, 573,
	571, 574, 575, 576, 0, 577, 578, 560, 561, 579,
	580, 0, 581, 582, 583, 584, 585, 586, 587, 687,
	0, 588, 0, 589, 590, 591, 592, 594, 562, 595,
	600, 601, 688, 596, 597, 598, 599, 689, 603, 604,
	0, 605, 606, 0, 602, 593, 834, 607, 608, 609,
	610, 611, 835, 613, 614, 0, 615, 690, 691, 692,
	693, 0, 624, 0, 616, 617, 618, 694, 619, 695,
	0, 620, 621, 3960, 623, 0, 625, 626, 0, 0,
	627, 628, 629, 631, 632, 630, 633, 0, 634, 0,
	0, 635, 636, 637, 696, 697, 698, 0, 639, 638,
	640, 641, 699, 642, 643, 0, 829, 0, 0, 644,
	645, 700, 646, 647, 648, 0, 0, 0, 0, 0,
	0, 0, 0, 281, 283, 282, 284, 285, 286, 287,
	2096, 288, 289, 0, 0, 0, 0, 839, 649, 0,
	0, 0, 0, 290, 291, 0, 292, 293, 294, 295,
	296, 297, 650, 651, 0, 298, 652, 299, 653, 0,
	654, 300, 301, 302, 303, 304, 305, 0, 0, 0,
	306, 655, 656, 657, 0, 307, 308, 658, 0, 0,
	0, 309, 310, 311, 312, 313, 314, 315, 0, 0,
	317, 318, 319, 316, 320, 0, 321, 0, 322, 323,
	324, 325, 326, 327, 0, 328, 329, 330, 0, 331,
	332, 333, 0, 0, 0, 0, 0, 0, 0, 334,
	335, 336, 836, 338, 0, 339, 341, 659, 660, 0,
	344, 340, 342, 0, 345, 343, 346, 0, 347, 348,
	349, 0, 0, 350, 351, 352, 0, 353, 354, 355,
	0, 356, 357, 358, 0, 359, 360, 661, 361, 362,
	363, 365, 367, 364, 366, 368, 369, 370, 371, 662,
	663, 372, 0, 278, 0, 0, 0, 0, 0, 373,
	374, 375, 664, 0, 0, 0, 376, 0, 377, 378,
	379, 0, 0, 0, 380, 381, 382, 665, 666, 383,
	384, 385, 386, 387, 388, 389, 390, 391, 0, 392,
	667, 0, 668, 393, 0, 394, 395, 396, 397, 398,
	669, 670, 671, 484, 0, 399, 400, 0, 401, 402,
	403, 404, 405, 0, 0, 0, 279, 406, 407, 408,
	0, 0, 409, 672, 673, 0, 674, 0, 410, 411,
	0, 675, 0, 412, 413, 414, 0, 415, 0, 0,
	0, 416, 417, 418, 419, 420, 421, 0, 422, 424,
	423, 0, 425, 676, 0, 426, 427, 0, 0, 428,
	429, 430, 431, 432, 433, 436, 0, 0, 434, 435,
	437, 438, 0, 439, 440, 442, 445, 441, 443, 444,
	446, 459, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 458, 461, 0, 460, 0, 462, 463,
	464, 465, 472, 474, 475, 470, 471, 473, 476, 477,
	479, 467, 468, 469, 0, 478, 466, 0, 280, 0,
	480, 481, 482, 0, 677, 483, 678, 485, 486, 0,
	0, 487, 0, 0, 0, 489, 490, 491, 0, 0,
	492, 493, 679, 0, 494, 0, 680, 495, 496, 488,
	497, 498, 499, 500, 501, 502, 503, 504, 505, 0,
	506, 507, 681, 508, 509, 510, 682, 511, 512, 513,
	683, 514, 684, 515, 516, 0, 517, 518, 0, 519,
	520, 521, 522, 523, 524, 525, 685, 526, 527, 529,
	528, 530, 0, 531, 0, 532, 533, 534, 0, 0,
	0, 0, 0, 535, 537, 0, 538, 539, 540, 541,
	536, 542, 543, 544, 545, 546, 0, 547, 548, 549,
	0, 550, 551, 552, 553, 554, 686, 555, 0, 556,
	557, 563, 564, 565, 558, 559, 2095, 567, 568, 569,
	570, 0, 2097, 573, 571, 574, 575, 576, 0, 577,
	578, 560, 561, 579, 580, 0, 581, 582, 583, 584,
	585, 586, 587, 687, 0, 588, 0, 589, 590, 591,
	592, 594, 562, 595, 600, 601, 688, 596, 597, 598,
	599, 689, 603, 604, 0, 605, 606, 0, 602, 593,
	834, 607, 608, 609, 610, 611, 835, 613, 614, 0,
	615, 690, 691, 692, 693, 0, 624, 0, 616, 617,
	618, 694, 619, 695, 0, 620, 621, 2094, 623, 0,
	625, 626, 0, 0, 627, 628, 629, 631, 632, 630,
	633, 0, 634, 0, 0, 635, 636, 637, 696, 697,
	698, 0, 639, 638, 640, 641, 699, 642, 643, 0,
	829, 0, 0, 644, 645, 700, 646, 647, 648, 0,
	0, 0, 0, 0, 0, 0, 0, 281, 283, 282,
	284, 285, 286, 287, 2047, 288, 289, 0, 0, 0,
	0, 839, 649, 0, 0, 0, 0, 290, 291, 0,
	292, 293, 294, 295, 296, 297, 650, 651, 0, 298,
	652, 299, 653, 0, 654, 300, 301, 302, 303, 304,
	305, 0, 0, 0, 306, 655, 656, 657, 0, 307,
	308, 658, 0, 0, 0, 309, 310, 311, 312, 313,
	314, 315, 0, 0, 317, 318, 319, 316, 320, 0,
	321, 0, 322, 323, 324, 325, 326, 327, 0, 328,
	329, 330, 0, 331, 332, 333, 0, 0, 0, 0,
	0, 0, 0, 334, 335, 336, 836, 338, 0, 339,
	341, 659, 660, 0, 344, 340, 342, 0, 345, 343,
	346, 0, 347, 348, 349, 0, 0, 350, 351, 352,
	0, 353, 354, 355, 0, 356, 357, 358, 0, 359,
	360, 661, 361, 362, 363, 365, 367, 364, 366, 368,
	369, 370, 371, 662, 663, 372, 0, 278, 0, 0,
	0, 0, 0, 373, 374, 375, 664, 0, 0, 0,
	376, 0, 377, 378, 379, 0, 0, 0, 380, 381,
	382, 665, 666, 383, 384, 385, 386, 387, 388, 389,
	390, 391, 0, 392, 667, 0, 668, 393, 0, 394,
	395, 396, 397, 398, 669, 670, 671, 484, 0, 399,
	400, 0, 401, 402, 403, 404, 405, 0, 0, 0,
	279, 406, 407, 408, 0, 0, 409, 672, 673, 0,
	674, 0, 410, 411, 0, 675, 0, 412, 413, 414,
	0, 415, 0, 0, 0, 416, 417, 418, 419, 420,
	421, 0, 422, 424, 423, 0, 425, 676, 0, 426,
	427, 0, 0, 428, 429, 430, 431, 432, 433, 436,
	0, 0, 434, 435, 437, 438, 0, 439, 440, 442,
	445, 441, 443, 444, 446, 459, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 458, 461, 0,
	460, 0, 462, 463, 464, 465, 472, 474, 475, 470,
	471, 473, 476, 477, 479, 467, 468, 469, 0, 478,
	466, 0, 280, 0, 480, 481, 482, 0, 677, 483,
	678, 485, 486, 0, 0, 487, 0, 0, 0, 489,
	490, 491, 0, 0, 492, 493, 679, 0, 494, 0,
	680, 495, 496, 488, 497, 498, 499, 500, 501, 502,
	503, 504, 505, 0, 506, 507, 681, 508, 509, 510,
	682, 511, 512, 513, 683, 514, 684, 515, 516, 0,
	517, 518, 0, 519, 520, 521, 522, 523, 524, 525,
	685, 526, 527, 529, 528, 530, 0, 531, 0, 532,
	533, 534, 0, 0, 0, 0, 0, 535, 537, 0,
	538, 539, 540, 541, 536, 542, 543, 544, 545, 546,
	0, 547, 548, 549, 0, 550, 551, 552, 553, 554,
	686, 555, 0, 556, 557, 563, 564, 565, 558, 559,
	2046, 567, 568, 569, 570, 0, 2048, 573, 571, 574,
	575, 576, 0, 577, 578, 560, 561, 579, 580, 0,
	581, 582, 583, 584, 585, 586, 587, 687, 0, 588,
	0, 589, 590, 591, 592, 594, 562, 595, 600, 601,
	688, 596, 597, 598, 599, 689, 603, 604, 0, 605,
	606, 0, 602, 593, 834, 607, 608, 609, 610, 611,
	835, 613, 614, 0, 615, 690, 691, 692, 693, 0,
	624, 0, 616, 617, 618, 694, 619, 695, 0, 620,
	621, 2045, 623, 0, 625, 626, 0, 0, 627, 628,
	629, 631, 632, 630, 633, 0, 634, 0, 0, 635,
	636, 637, 696, 697, 698, 0, 639, 638, 640, 641,
	699, 642, 643, 827, 0, 829, 0, 644, 645, 700,
	646, 647, 648, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 281, 283, 282, 284, 285, 286, 287, 0,
	288, 289, 0, 0, 0, 839, 0, 649, 0, 0,
	0, 0, 290, 291, 0, 292, 293, 294, 295, 296,
	297, 650, 651, 0, 298, 652, 299, 653, 0, 654,
	300, 301, 302, 303, 304, 305, 0, 0, 0, 306,
	655, 656, 657, 0, 307, 308, 658, 0, 0, 0,
	309, 310, 311, 312, 313, 314, 315, 0, 0, 317,
	318, 319, 316, 320, 0, 321, 0, 322, 323, 324,
	325, 326, 327, 0, 328, 329, 330, 0, 331, 332,
	333, 0, 0, 0, 0, 0, 0, 0, 334, 335,
	336, 836, 338, 0, 339, 341, 659, 660, 0, 344,
	340, 342, 0, 345, 343, 346, 0, 347, 348, 349,
	0, 0, 350, 351, 352, 0, 353, 354, 355, 0,
	356, 357, 358, 0, 359, 360, 661, 361, 362, 363,
	365, 367, 364, 366, 368, 369, 370, 371, 662, 663,
	372, 0, 278, 0, 0, 0, 0, 0, 373, 374,
	375, 664, 0, 0, 0, 376, 0, 377, 378, 379,
	0, 0, 0, 380, 381, 382, 665, 666, 383, 384,
	385, 386, 387, 388, 389, 390, 391, 0, 392, 667,
	0, 668, 393, 0, 394, 395, 396, 397, 398, 669,
	670, 671, 484, 0, 399, 400, 0, 401, 402, 403,
	404, 405, 0, 0, 0, 279, 406, 407, 408, 0,
	0, 409, 672, 673, 0, 674, 0, 410, 411, 0,
	675, 0, 412, 413, 414, 0, 415, 0, 0, 0,
	416, 417, 418, 419, 420, 421, 0, 422, 424, 423,
	0, 425, 676, 0, 426, 427, 0, 0, 428, 429,
	430, 431, 432, 433, 436, 0, 0, 434, 435, 437,
	438, 0, 439, 440, 442, 445, 441, 443, 444, 446,
	459, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 458, 461, 0, 460, 0, 462, 463, 464,
	465, 472, 474, 475, 470, 471, 473, 476, 477, 479,
	467, 468, 469, 0, 478, 466, 0, 280, 0, 480,
	481, 482, 0, 677, 483, 678, 485, 486, 0, 0,
	487, 0, 0, 0, 489, 490, 491, 0, 0, 492,
	493, 679, 0, 494, 0, 680, 495, 496, 488, 497,
	498, 499, 500, 501, 502, 503, 504, 505, 0, 506,
	507, 681, 508, 509, 510, 682, 511, 512, 513, 683,
	514, 684, 515, 516, 0, 517, 518, 0, 519, 520,
	521, 522, 523, 524, 525, 685, 526, 527, 529, 528,
	530, 0, 531, 0, 532, 533, 534, 0, 0, 0,
	0, 0, 535, 537, 0, 538, 539, 540, 541, 536,
	542, 543, 544, 545, 546, 0, 547, 548, 549, 0,
	550, 551, 552, 553, 554, 686, 555, 0, 556, 557,
	563, 564, 565, 558, 559, 566, 567, 568, 569, 570,
	0, 572, 573, 571, 574, 575, 576, 0, 577, 578,
	560, 561, 579, 580, 0, 581, 582, 583, 584, 585,
	586, 587, 687, 0, 588, 0, 589, 590, 591, 592,
	594, 562, 595, 600, 601, 688, 596, 597, 598, 599,
	689, 603, 604, 0, 605, 606, 0, 602, 593, 834,
	607, 608, 609, 610, 611, 835, 613, 614, 0, 615,
	690, 691, 692, 693, 0, 624, 0, 616, 617, 618,
	694, 619, 695, 0, 620, 621, 622, 623, 0, 625,
	626, 0, 0, 627, 628, 629, 631, 632, 630, 633,
	0, 634, 0, 0, 635, 636, 637, 696, 697, 698,
	0, 639, 638, 640, 641, 699, 642, 643, 0, 829,
	0, 0, 644, 645, 700, 646, 647, 648, 0, 0,
	0, 0, 0, 0, 0, 0, 281, 283, 282, 284,
	285, 286, 287, 0, 288, 289, 0, 0, 0, 0,
	839, 649, 0, 0, 0, 0, 290, 291, 0, 292,
	293, 294, 295, 296, 297, 650, 651, 0, 298, 652,
	299, 653, 0, 654, 300, 301, 302, 303, 304, 305,
	0, 0, 0, 306, 655, 656, 657, 0, 307, 308,
	658, 0, 0, 0, 309, 310, 311, 312, 313, 314,
	315, 0, 0, 317, 318, 319, 316, 320, 0, 321,
	0, 322, 323, 324, 325, 326, 327, 0, 328, 329,
	330, 0, 331, 332, 333, 0, 0, 0, 0, 0,
	0, 0, 334, 335, 336, 836, 338, 0, 339, 341,
	659, 660, 0, 344, 340, 342, 0, 345, 343, 346,
	0, 347, 348, 349, 0, 0, 350, 351, 352, 0,
	353, 354, 355, 0, 356, 357, 358, 0, 359, 360,
	661, 361, 362, 363, 365, 367, 364, 366, 368, 369,
	370, 371, 662, 663, 372, 0, 278, 0, 0, 0,
	0, 0, 373, 374, 375, 664, 0, 0, 0, 376,
	0, 377, 378, 379, 0, 0, 0, 380, 381, 382,
	665, 666, 383, 384, 385, 386, 387, 388, 389, 390,
	391, 0, 392, 667, 0, 668, 393, 0, 394, 395,
	396, 397, 398, 669, 670, 671, 484, 0, 399, 400,
	0, 401, 402, 403, 404, 405, 0, 0, 0, 279,
	406, 407, 408, 0, 0, 409, 672, 673, 0, 674,
	0, 410, 411, 0, 675, 0, 412, 413, 414, 0,
	415, 0, 0, 0, 416, 417, 418, 419, 420, 421,
	0, 422, 424, 423, 0, 425, 676, 0, 426, 427,
	0, 0, 428, 429, 430, 431, 432, 433, 436, 0,
	0, 434, 435, 437, 438, 0, 439, 440, 442, 445,
	441, 443, 444, 446, 459, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 458, 461, 0, 460,
	0, 462, 463, 464, 465, 472, 474, 475, 470, 471,
	473, 476, 477, 479, 467, 468, 469, 0, 478, 466,
	0, 280, 0, 480, 481, 482, 0, 677, 483, 678,
	485, 486, 0, 0, 487, 0, 0, 0, 489, 490,
	491, 0, 0, 492, 493, 679, 0, 494, 0, 680,
	495, 496, 488, 497, 498, 499, 500, 501, 502, 503,
	504, 505, 0, 506, 507, 681, 508, 509, 510, 682,
	511, 512, 513, 683, 514, 684, 515, 516, 0, 517,
	518, 0, 519, 520, 521, 522, 523, 524, 525, 685,
	526, 527, 529, 528, 530, 0, 531, 0, 532, 533,
	534, 0, 0, 0, 0, 0, 535, 537, 0, 538,
	539, 540, 541, 536, 542, 543, 544, 545, 546, 0,
	547, 548, 549, 0, 550, 551, 552, 553, 554, 686,
	555, 0, 556, 557, 563, 564, 565, 558, 559, 566,
	567, 568, 569, 570, 0, 572, 573, 571, 574, 575,
	576, 0, 577, 578, 560, 561, 579, 580, 0, 581,
	582, 583, 584, 585, 586, 587, 687, 0, 588, 0,
	589, 590, 591, 592, 594, 562, 595, 600, 601, 688,
	596, 597, 598, 599, 689, 603, 604, 0, 605, 606,
	0, 602, 593, 834, 607, 608, 609, 610, 611, 835,
	613, 614, 0, 615, 690, 691, 692, 693, 0, 624,
	0, 616, 617, 618, 694, 619, 695, 0, 620, 621,
	622, 623, 0, 625, 626, 0, 0, 627, 628, 629,
	631, 632, 630, 633, 0, 634, 0, 0, 635, 636,
	637, 696, 697, 698, 0, 639, 638, 640, 641, 699,
	642, 643, 0, 829, 0, 0, 644, 645, 700, 646,
	647, 648, 0, 0, 0, 0, 0, 0, 0, 0,
	281, 283, 282, 284, 285, 286, 287, 0, 288, 289,
	0, 0, 0, 0, 839, 649, 0, 0, 0, 0,
	290, 291, 0, 292, 293, 294, 295, 296, 297, 650,
	651, 0, 298, 652, 299, 653, 0, 654, 300, 301,
	302, 303, 304, 305, 0, 0, 0, 306, 655, 656,
	657, 0, 307, 308, 658, 0, 0, 0, 309, 310,
	311, 312, 313, 314, 315, 0, 0, 317, 318, 319,
	316, 320, 0, 321, 0, 322, 323, 324, 325, 326,
	327, 0, 328, 329, 330, 0, 331, 332, 333, 0,
	0, 0, 0, 0, 0, 0, 334, 335, 336, 836,
	338, 0, 339, 341, 659, 660, 0, 344, 340, 342,
	0, 345, 343, 346, 0, 347, 348, 349, 0, 0,
	350, 351, 352, 0, 353, 354, 355, 0, 356, 357,
	358, 0, 359, 360, 661, 361, 362, 363, 365, 367,
	364, 366, 368, 369, 370, 371, 662, 663, 372, 0,
	278, 0, 0, 0, 0, 0, 373, 374, 375, 664,
	0, 0, 0, 376, 0, 377, 378, 379, 0, 0,
	0, 380, 381, 382, 665, 666, 383, 384, 385, 386,
	387, 388, 389, 390, 391, 0, 392, 667, 0, 668,
	393, 0, 394, 395, 396, 397, 398, 669, 670, 671,
	484, 0, 399, 400, 0, 401, 402, 403, 404, 405,
	0, 0, 0, 279, 406, 407, 408, 0, 0, 409,
	672, 673, 0, 674, 0, 410, 411, 0, 675, 0,
	412, 413, 414, 0, 415, 0, 0, 0, 416, 417,
	418, 419, 420, 421, 0, 422, 424, 423, 0, 425,
	676, 0, 426, 427, 0, 0, 428, 429, 430, 431,
	432, 433, 436, 0, 0, 434, 435, 437, 438, 0,
	439, 440, 442, 445, 441, 443, 444, 446, 459, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	458, 461, 0, 460, 0, 462, 463, 464, 465, 472,
	474, 475, 470, 471, 473, 476, 477, 479, 467, 468,
	469, 0, 478, 466, 0, 280, 0, 480, 481, 482,
	0, 677, 483, 678, 485, 486, 0, 0, 487, 0,
	0, 0, 489, 490, 491, 0, 0, 492, 493, 679,
	0, 494, 0, 680, 495, 496, 488, 497, 498, 499,
	500, 501, 502, 503, 504, 505, 0, 506, 507, 681,
	508, 509, 510, 682, 511, 512, 513, 683, 514, 684,
	515, 516, 0, 517, 518, 0, 519, 520, 521, 522,
	523, 524, 525, 685, 526, 527, 529, 528, 530, 0,
	531, 0, 532, 533, 534, 0, 0, 0, 0, 0,
	535, 537, 0, 538, 539, 540, 541, 536, 542, 543,
	544, 545, 546, 0, 547, 548, 549, 0, 2419, 551,
	552, 553, 554, 686, 555, 0, 556, 557, 563, 564,
	565, 558, 559, 2420, 567, 568, 569, 570, 0, 572,
	573, 571, 574, 575, 576, 0, 577, 578, 560, 561,
	579, 580, 0, 581, 582, 583, 584, 585, 586, 587,
	687, 0, 588, 0, 589, 590, 591, 592, 594, 562,
	595, 600, 601, 688, 596, 597, 598, 599, 689, 603,
	604, 0, 605, 606, 0, 602, 593, 834, 607, 608,
	609, 610, 611, 835, 613, 614, 0, 615, 690, 691,
	692, 693, 0, 624, 0, 616, 617, 618, 694, 619,
	695, 0, 620, 621, 2421, 623, 0, 625, 626, 0,
	0, 627, 628, 629, 631, 632, 630, 633, 0, 634,
	0, 0, 635, 636, 637, 696, 697, 698, 0, 639,
	638, 640, 641, 699, 642, 643, 0, 275, 0, 0,
	644, 645, 700, 646, 647, 648, 0, 0, 0, 0,
	0, 0, 0, 0, 281, 283, 282, 284, 285, 286,
	287, 0, 288, 289, 0, 0, 0, 0, 839, 649,
	0, 0, 0, 0, 290, 291, 0, 292, 293, 294,
	295, 296, 297, 650, 651, 0, 298, 652, 299, 653,
	0, 654, 300, 301, 302, 303, 304, 305, 0, 0,
	0, 306, 655, 656, 657, 0, 307, 308, 658, 0,
	0, 0, 309, 310, 311, 312, 313, 314, 315, 0,
	0, 317, 318, 319, 316, 320, 0, 321, 0, 322,
	323, 324, 325, 326, 327, 0, 328, 329, 330, 0,
	331, 332, 333, 0, 0, 0, 0, 0, 0, 0,
	334, 335, 336, 337, 338, 0, 339, 341, 659, 660,
	0, 344, 340, 342, 0, 345, 343, 346, 0, 347,
	348, 349, 0, 0, 350, 351, 352, 0, 353, 354,
	355, 0, 356, 357, 358, 0, 359, 360, 661, 361,
	362, 363, 365, 367, 364, 366, 368, 369, 370, 371,
	662, 663, 372, 0, 278, 0, 0, 0, 0, 0,
	373, 374, 375, 664, 0, 0, 0, 376, 0, 377,
	378, 379, 0, 0, 0, 380, 381, 382, 665, 666,
	383, 384, 385, 386, 387, 388, 389, 390, 391, 0,
	392, 667, 0, 668, 393, 0, 394, 395, 396, 397,
	398, 669, 670, 671, 484, 0, 399, 400, 0, 401,
	402, 403, 404, 405, 0, 0, 0, 279, 406, 407,
	408, 0, 0, 409, 672, 673, 0, 674, 0, 410,
	411, 0, 675, 0, 412, 413, 414, 0, 415, 0,
	0, 0, 416, 417, 418, 419, 420, 421, 0, 422,
	424, 423, 0, 425, 676, 0, 426, 427, 0, 0,
	428, 429, 430, 431, 432, 433, 436, 0, 0, 434,
	435, 437, 438, 0, 439, 440, 442, 445, 441, 443,
	444, 446, 459, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 458, 461, 0, 460, 0, 462,
	463, 464, 465, 472, 474, 475, 470, 471, 473, 476,
	477, 479, 467, 468, 469, 0, 478, 466, 0, 280,
	0, 480, 481, 482, 0, 677, 483, 678, 485, 486,
	0, 0, 487, 0, 0, 0, 489, 490, 491, 0,
	0, 492, 493, 679, 0, 494, 0, 680, 495, 496,
	488, 497, 498, 499, 500, 501, 502, 503, 504, 505,
	0, 506, 507, 681, 508, 509, 510, 682, 511, 512,
	513, 683, 514, 684, 515, 516, 0, 517, 518, 0,
	519, 520, 521, 522, 523, 524, 525, 685, 526, 527,
	529, 528, 530, 0, 531, 0, 532, 533, 534, 0,
	0, 0, 0, 0, 535, 537, 0, 538, 539, 540,
	541, 536, 542, 543, 544, 545, 546, 0, 547, 548,
	549, 0, 550, 551, 552, 553, 554, 686, 555, 0,
	556, 557, 563, 564, 565, 558, 559, 566, 567, 568,
	569, 570, 0, 572, 573, 571, 574, 575, 576, 0,
	577, 578, 560, 561, 579, 580, 0, 581, 582, 583,
	584, 585, 586, 587, 687, 0, 588, 0, 589, 590,
	591, 592, 594, 562, 595, 600, 601, 688, 596, 597,
	598, 599, 689, 603, 604, 0, 605, 606, 0, 602,
	593, 0, 607, 608, 609, 610, 611, 612, 613, 614,
	0, 615, 690, 691, 692, 693, 0, 624, 0, 616,
	617, 618, 694, 619, 695, 0, 620, 621, 622, 623,
	0, 625, 626, 0, 0, 627, 628, 629, 631, 632,
	630, 633, 0, 634, 0, 0, 635, 636, 637, 696,
	697, 698, 0, 639, 638, 640, 641, 699, 642, 643,
	0, 0, 0, 0, 644, 645, 700, 646, 647, 648,
	0, 0, 0, 0, 0, 0, 1582, 1581, 0, 0,
	0, 0, 1579, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 839, 281, 283, 282, 284, 285, 286, 287,
	0, 288, 289, 0, 0, 0, 0, 0, 649, 0,
	0, 0, 0, 290, 291, 1220, 292, 293, 294, 295,
	296, 297, 650, 651, 0, 298, 652, 299, 653, 0,
	654, 300, 301, 302, 303, 304, 305, 0, 0, 0,
	306, 655, 656, 657, 0, 307, 308, 658, 0, 1504,
	0, 309, 310, 311, 312, 313, 314, 315, 0, 0,
	317, 318, 319, 316, 320, 0, 321, 0, 322, 323,
	324, 325, 326, 327, 0, 328, 329, 330, 1221, 331,
	332, 333, 0, 0, 0, 0, 0, 0, 0, 334,
	335, 336, 337, 338, 0, 339, 341, 659, 660, 0,
	344, 340, 342, 0, 345, 343, 346, 0, 347, 348,
	349, 0, 0, 350, 351, 352, 0, 353, 354, 355,
	0, 356, 357, 358, 0, 359, 360, 661, 361, 362,
	363, 365, 367, 364, 366, 368, 369, 370, 371, 662,
	663, 372, 0, 278, 0, 0, 0, 0, 0, 373,
	374, 375, 664, 0, 0, 0, 376, 0, 377, 378,
	379, 0, 0, 1222, 380, 381, 382, 665, 666, 383,
	384, 385, 386, 387, 388, 389, 390, 391, 0, 392,
	667, 0, 668, 393, 0, 394, 395, 396, 397, 398,
	669, 670, 671, 484, 1224, 399, 400, 0, 401, 402,
	403, 404, 405, 0, 0, 0, 0, 406, 407, 408,
	0, 1223, 409, 672, 673, 0, 674, 0, 410, 411,
	1225, 675, 1226, 412, 413, 414, 1227, 415, 0, 0,
	0, 416, 417, 418, 419, 420, 421, 0, 422, 424,
	423, 0, 425, 676, 1228, 426, 427, 1229, 0, 428,
	429, 430, 431, 432, 433, 436, 0, 0, 434, 435,
	437, 438, 0, 439, 440, 442, 445, 441, 443, 444,
	446, 459, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 458, 461, 0, 460, 1230, 462, 463,
	464, 465, 472, 474, 475, 470, 471, 473, 476, 477,
	479, 467, 468, 469, 1231, 478, 466, 0, 0, 1232,
	480, 481, 482, 4055, 677, 483, 678, 485, 486, 0,
	0, 487, 0, 0, 0, 489, 490, 491, 0, 0,
	492, 493, 679, 1233, 494, 1234, 680, 495, 496, 488,
	497, 498, 499, 500, 501, 502, 503, 504, 505, 0,
	506, 507, 681, 508, 509, 510, 682, 511, 512, 513,
	683, 514, 684, 515, 516, 0, 517, 518, 0, 519,
	520, 521, 522, 523, 524, 525, 685, 526, 527, 529,
	528, 530, 0, 531, 0, 532, 533, 534, 0, 0,
	0, 0, 0, 535, 537, 0, 538, 539, 540, 541,
	536, 542, 543, 544, 545, 546, 0, 547, 548, 549,
	1235, 550, 551, 552, 553, 554, 686, 555, 0, 556,
	557, 563, 564, 565, 558, 559, 566, 567, 568, 569,
	570, 0, 572, 573, 571, 574, 575, 576, 0, 577,
	578, 560, 561, 579, 580, 1236, 581, 582, 583, 584,
	585, 586, 587, 687, 0, 588, 0, 589, 590, 591,
	592, 594, 562, 595, 600, 601, 688, 596, 597, 598,
	599, 689, 603, 604, 0, 605, 606, 0, 602, 593,
	0, 607, 608, 609, 610, 611, 612, 613, 614, 0,
	615, 690, 691, 692, 693, 0, 624, 0, 616, 617,
	618, 694, 619, 695, 0, 620, 621, 622, 623, 0,
	625, 626, 0, 0, 627, 628, 629, 631, 632, 630,
	633, 0, 634, 0, 0, 635, 636, 637, 696, 697,
	698, 0, 639, 638, 640, 641, 699, 642, 643, 0,
	0, 0, 0, 644, 645, 700, 646, 647, 648, 1582,
	1581, 0, 0, 0, 0, 1579, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 281, 283, 282, 284,
	285, 286, 287, 0, 288, 289, 0, 0, 0, 0,
	0, 649, 0, 0, 0, 0, 290, 291, 1220, 292,
	293, 294, 295, 296, 297, 650, 651, 0, 298, 652,
	299, 653, 0, 654, 300, 301, 302, 303, 304, 305,
	0, 0, 0, 306, 655, 656, 657, 0, 307, 308,
	658, 0, 1504, 0, 309, 310, 311, 312, 313, 314,
	315, 0, 0, 317, 318, 319, 316, 320, 0, 321,
	0, 322, 323, 324, 325, 326, 327, 0, 328, 329,
	330, 1221, 331, 332, 333, 0, 0, 0, 0, 0,
	0, 0, 334, 335, 336, 337, 338, 0, 339, 341,
	659, 660, 0, 344, 340, 342, 0, 345, 343, 346,
	0, 347, 348, 349, 0, 0, 350, 351, 352, 0,
	353, 354, 355, 0, 356, 357, 358, 0, 359, 360,
	661, 361, 362, 363, 365, 367, 364, 366, 368, 369,
	370, 371, 662, 663, 372, 0, 278, 0, 0, 0,
	0, 0, 373, 374, 375, 664, 0, 0, 0, 376,
	0, 377, 378, 379, 0, 0, 1222, 380, 381, 382,
	665, 666, 383, 384, 385, 386, 387, 388, 389, 390,
	391, 0, 392, 667, 0, 668, 393, 0, 394, 395,
	396, 397, 398, 669, 670, 671, 484, 1224, 399, 400,
	0, 401, 402, 403, 404, 405, 0, 0, 0, 0,
	406, 407, 408, 0, 1223, 409, 672, 673, 0, 674,
	0, 410, 411, 1225, 675, 1226, 412, 413, 414, 1227,
	415, 0, 0, 0, 416, 417, 418, 419, 420, 421,
	0, 422, 424, 423, 0, 425, 676, 1228, 426, 427,
	1229, 0, 428, 429, 430, 431, 432, 433, 436, 0,
	0, 434, 435, 437, 438, 0, 439, 440, 442, 445,
	441, 443, 444, 446, 459, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 458, 461, 0, 460,
	1230, 462, 463, 464, 465, 472, 474, 475, 470, 471,
	473, 476, 477, 479, 467, 468, 469, 1231, 478, 466,
	0, 0, 1232, 480, 481, 482, 3635, 677, 483, 678,
	485, 486, 0, 0, 487, 0, 0, 0, 489, 490,
	491, 0, 0, 492, 493, 679, 1233, 494, 1234, 680,
	495, 496, 488, 497, 498, 499, 500, 501, 502, 503,
	504, 505, 0, 506, 507, 681, 508, 509, 510, 682,
	511, 512, 513, 683, 514, 684, 515, 516, 0, 517,
	518, 0, 519, 520, 521, 522, 523, 524, 525, 685,
	526, 527, 529, 528, 530, 0, 531, 0, 532, 533,
	534, 0, 0, 0, 0, 0, 535, 537, 0, 538,
	539, 540, 541, 536, 542, 543, 544, 545, 546, 0,
	547, 548, 549, 1235, 550, 551, 552, 553, 554, 686,
	555, 0, 556, 557, 563, 564, 565, 558, 559, 566,
	567, 568, 569, 570, 0, 572, 573, 571, 574, 575,
	576, 0, 577, 578, 560, 561, 579, 580, 1236, 581,
	582, 583, 584, 585, 586, 587, 687, 0, 588, 0,
	589, 590, 591, 592, 594, 562, 595, 600, 601, 688,
	596, 597, 598, 599, 689, 603, 604, 0, 605, 606,
	0, 602, 593, 0, 607, 608, 609, 610, 611, 612,
	613, 614, 0, 615, 690, 691, 692, 693, 0, 624,
	0, 616, 617, 618, 694, 619, 695, 0, 620, 621,
	622, 623, 0, 625, 626, 0, 0, 627, 628, 629,
	631, 632, 630, 633, 0, 634, 0, 0, 635, 636,
	637, 696, 697, 698, 0, 639, 638, 640, 641, 699,
	642, 643, 0, 0, 0, 0, 644, 645, 700, 646,
	647, 648, 1710, 0, 1582, 1581, 0, 0, 0, 0,
	1579, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 281, 283, 282, 284, 285, 286, 287, 0, 288,
	289, 0, 0, 0, 0, 0, 649, 0, 0, 0,
	0, 290, 291, 1220, 292, 293, 294, 295, 296, 297,
	650, 651, 0, 298, 652, 299, 653, 0, 654, 300,
	301, 302, 303, 304, 305, 0, 0, 0, 306, 655,
	656, 657, 0, 307, 308, 658, 0, 1504, 0, 309,
	310, 311, 312, 313, 314, 315, 0, 0, 317, 318,
	319, 316, 320, 0, 321, 0, 322, 323, 324, 325,
	326, 327, 0, 328, 329, 330, 1221, 331, 332, 333,
	0, 0, 0, 0, 0, 0, 0, 334, 335, 336,
	337, 338, 0, 339, 341, 659, 660, 0, 344, 340,
	342, 0, 345, 343, 346, 0, 347, 348, 349, 0,
	0, 350, 351, 352, 0, 353, 354, 355, 0, 356,
	357, 358, 0, 359, 360, 661, 361, 362, 363, 365,
	367, 364, 366, 368, 369, 370, 371, 662, 663, 372,
	0, 278, 0, 0, 0, 0, 0, 1709, 374, 375,
	664, 0, 0, 0, 376, 0, 377, 378, 379, 0,
	0, 1222, 380, 381, 382, 665, 666, 383, 384, 385,
	386, 387, 388, 389, 390, 391, 0, 392, 667, 0,
	668, 393, 0, 394, 395, 396, 397, 398, 669, 670,
	671, 484, 1224, 399, 400, 0, 401, 402, 403, 404,
	405, 0, 0, 0, 0, 406, 407, 408, 0, 1223,
	409, 672, 673, 0, 674, 0, 410, 411, 1225, 675,
	1226, 412, 413, 414, 1227, 415, 0, 0, 0, 416,
	417, 418, 419, 420, 421, 0, 422, 424, 423, 0,
	425, 676, 1228, 426, 427, 1229, 0, 428, 429, 430,
	431, 432, 433, 436, 0, 0, 434, 435, 437, 438,
	0, 439, 440, 442, 445, 441, 443, 444, 446, 459,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 458, 461, 0, 460, 1230, 462, 463, 464, 465,
	472, 474, 475, 470, 471, 473, 476, 477, 479, 467,
	468, 469, 1231, 478, 466, 0, 0, 1232, 480, 481,
	482, 0, 677, 483, 678, 485, 486, 0, 0, 487,
	0, 0, 0, 489, 490, 491, 0, 0, 492, 493,
	679, 1233, 494, 1234, 680, 495, 496, 488, 497, 498,
	499, 500, 501, 502, 503, 504, 505, 0, 506, 507,
	681, 508, 509, 510, 682, 511, 512, 513, 683, 514,
	684, 515, 516, 0, 517, 518, 0, 519, 520, 521,
	522, 523, 1708, 525, 685, 526, 527, 529, 528, 530,
	0, 531, 0, 532, 533, 534, 0, 0, 0, 0,
	0, 535, 537, 0, 538, 539, 540, 541, 536, 542,
	543, 544, 545, 546, 0, 547, 548, 549, 1235, 550,
	551, 552, 553, 554, 686, 555, 0, 556, 557, 563,
	564, 565, 558, 559, 566, 1707, 568, 569, 570, 0,
	572, 573, 571, 574, 575, 576, 0, 577, 578, 560,
	561, 579, 580, 1236, 581, 582, 583, 584, 585, 586,
	587, 687, 0, 588, 0, 589, 590, 591, 592, 594,
	562, 595, 600, 601, 688, 596, 597, 598, 599, 689,
	603, 604, 0, 605, 606, 0, 602, 593, 0, 607,
	608, 609, 610, 611, 612, 613, 614, 0, 615, 690,
	691, 692, 693, 0, 624, 0, 616, 617, 618, 694,
	619, 695, 0, 620, 621, 622, 623, 0, 625, 626,
	0, 0, 627, 628, 629, 631, 632, 630, 633, 0,
	634, 0, 0, 635, 636, 637, 696, 697, 698, 0,
	639, 638, 640, 641, 699, 642, 643, 0, 0, 0,
	0, 644, 645, 700, 646, 647, 648, 1575, 0, 1582,
	1581, 0, 0, 0, 0, 1579, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 281, 283, 282, 284,
	285, 286, 287, 0, 288, 289, 0, 0, 0, 0,
	0, 649, 0, 0, 0, 0, 290, 291, 1220, 292,
	293, 294, 295, 296, 297, 650, 651, 0, 298, 652,
	299, 653, 0, 654, 300, 301, 302, 303, 304, 305,
	0, 0, 0, 306, 655, 656, 657, 0, 307, 308,
	658, 0, 1504, 0, 309, 310, 311, 312, 313, 314,
	315, 0, 0, 317, 318, 319, 316, 320, 0, 321,
	0, 322, 323, 324, 325, 326, 327, 0, 328, 329,
	330, 1221, 331, 332, 333, 0, 0, 0, 0, 0,
	0, 0, 334, 335, 336, 337, 338, 0, 339, 341,
	659, 660, 0, 344, 340, 342, 0, 345, 343, 346,
	0, 347, 348, 349, 0, 0, 350, 351, 352, 0,
	353, 354, 355, 0, 356, 357, 358, 0, 359, 360,
	661, 361, 362, 363, 365, 367, 364, 366, 368, 369,
	370, 371, 662, 663, 372, 0, 278, 0, 0, 0,
	0, 0, 373, 374, 375, 664, 0, 0, 0, 376,
	0, 377, 378, 379, 0, 0, 1222, 380, 381, 382,
	665, 666, 383, 384, 385, 386, 387, 388, 389, 390,
	391, 0, 392, 667, 0, 668, 393, 0, 394, 395,
	396, 397, 398, 1577, 670, 671, 484, 1224, 399, 400,
	0, 401, 402, 403, 404, 405, 0, 0, 0, 0,
	406, 407, 408, 0, 1223, 409, 672, 673, 0, 674,
	0, 410, 411, 1225, 675, 1226, 412, 413, 414, 1227,
	415, 0, 0, 0, 416, 417, 418, 419, 420, 421,
	0, 422, 424, 423, 0, 425, 676, 1228, 426, 427,
	1229, 0, 428, 429, 430, 431, 432, 433, 436, 0,
	0, 434, 435, 437, 438, 0, 439, 440, 442, 445,
	441, 443, 444, 446, 459, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 458, 461, 0, 460,
	1230, 462, 463, 464, 465, 472, 474, 475, 470, 471,
	473, 476, 477, 479, 467, 468, 469, 1231, 478, 466,
	0, 0, 1232, 480, 481, 482, 0, 677, 483, 678,
	485, 486, 0, 0, 487, 0, 0, 0, 489, 490,
	491, 0, 0, 492, 493, 679, 1233, 494, 1234, 680,
	495, 496, 488, 497, 498, 499, 500, 501, 502, 503,
	504, 505, 0, 506, 507, 681, 508, 509, 510, 682,
	511, 512, 513, 683, 514, 684, 515, 516, 0, 517,
	518, 0, 519, 520, 521, 522, 523, 524, 525, 685,
	526, 527, 529, 528, 530, 0, 531, 0, 532, 533,
	534, 0, 0, 0, 0, 0, 535, 537, 0, 538,
	539, 540, 541, 536, 542, 543, 544, 545, 546, 0,
	547, 548, 549, 1235, 550, 551, 552, 553, 554, 686,
	555, 0, 556, 557, 563, 564, 565, 558, 559, 566,
	567, 568, 569, 570, 0, 572, 573, 571, 574, 575,
	576, 0, 577, 578, 560, 561, 579, 580, 1236, 581,
	582, 583, 584, 585, 586, 587, 687, 0, 588, 0,
	589, 590, 591, 592, 594, 562, 595, 600, 601, 688,
	596, 597, 598, 599, 689, 603, 604, 0, 605, 606,
	0, 602, 593, 0, 607, 608, 609, 610, 611, 612,
	613, 614, 0, 615, 690, 691, 692, 693, 0, 624,
	0, 616, 617, 618, 694, 619, 695, 0, 620, 621,
	622, 623, 0, 625, 626, 0, 0, 627, 628, 629,
	631, 632, 630, 633, 0, 634, 0, 0, 635, 636,
	637, 696, 697, 698, 0, 639, 638, 640, 641, 699,
	642, 643, 0, 0, 0, 0, 644, 645, 700, 646,
	647, 648, 1582, 1581, 0, 0, 0, 0, 1579, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 281,
	283, 282, 284, 285, 286, 287, 0, 288, 289, 0,
	0, 0, 0, 0, 649, 0, 0, 0, 0, 290,
	291, 1220, 292, 293, 294, 295, 296, 297, 650, 651,
	0, 298, 652, 299, 653, 0, 654, 300, 301, 302,
	303, 304, 305, 0, 0, 0, 306, 655, 656, 657,
	0, 307, 308, 658, 0, 1504, 0, 309, 310, 311,
	312, 313, 314, 315, 0, 0, 317, 318, 319, 316,
	320, 0, 321, 0, 322, 323, 324, 325, 326, 327,
	0, 328, 329, 330, 1221, 331, 332, 333, 0, 0,
	0, 0, 0, 0, 0, 334, 335, 336, 337, 338,
	0, 339, 341, 659, 660, 0, 344, 340, 342, 0,
	345, 343, 346, 0, 347, 348, 349, 0, 0, 350,
	351, 352, 0, 353, 354, 355, 0, 356, 357, 358,
	0, 359, 360, 661, 361, 362, 363, 365, 367, 364,
	366, 368, 369, 370, 371, 662, 663, 372, 0, 278,
	0, 0, 0, 0, 0, 373, 374, 375, 664, 0,
	0, 0, 376, 0, 377, 378, 379, 0, 0, 1222,
	380, 381, 382, 665, 666, 383, 384, 385, 386, 387,
	388, 389, 390, 391, 0, 392, 667, 0, 668, 393,
	0, 394, 395, 396, 397, 398, 669, 670, 671, 484,
	1224, 399, 400, 0, 401, 402, 403, 404, 405, 0,
	0, 0, 0, 406, 407, 408, 0, 1223, 409, 672,
	673, 0, 674, 0, 410, 411, 1225, 675, 1226, 412,
	413, 414, 1227, 415, 0, 0, 0, 416, 417, 418,
	419, 420, 421, 0, 422, 424, 423, 0, 425, 676,
	1228, 426, 427, 1229, 0, 428, 429, 430, 431, 432,
	433, 436, 0, 0, 434, 435, 437, 438, 0, 439,
	440, 442, 445, 441, 443, 444, 446, 459, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 458,
	461, 0, 460, 1230, 462, 463, 464, 465, 472, 474,
	475, 470, 471, 473, 476, 477, 479, 467, 468, 469,
	1231, 478, 466, 0, 0, 1232, 480, 481, 482, 0,
	677, 483, 678, 485, 486, 0, 0, 487, 0, 0,
	0, 489, 490, 491, 0, 0, 492, 493, 679, 1233,
	494, 1234, 680, 495, 496, 488, 497, 498, 499, 500,
	501, 502, 503, 504, 505, 0, 506, 507, 681, 508,
	509, 510, 682, 511, 512, 513, 683, 514, 684, 515,
	516, 0, 517, 518, 0, 519, 520, 521, 522, 523,
	524, 525, 685, 526, 527, 529, 528, 530, 0, 531,
	0, 532, 533, 534, 0, 0, 0, 0, 0, 535,
	537, 0, 538, 539, 540, 541, 536, 542, 543, 544,
	545, 546, 0, 547, 548, 549, 1235, 550, 551, 552,
	553, 554, 686, 555, 0, 556, 557, 563, 564, 565,
	558, 559, 566, 567, 568, 569, 570, 0, 572, 573,
	571, 574, 575, 576, 0, 577, 578, 560, 561, 579,
	580, 1236, 581, 582, 583, 584, 585, 586, 587, 687,
	0, 588, 0, 589, 590, 591, 592, 594, 562, 595,
	600, 601, 688, 596, 597, 598, 599, 689, 603, 604,
	0, 605, 606, 0, 602, 593, 0, 607, 608, 609,
	610, 611, 612, 613, 614, 0, 615, 690, 691, 692,
	693, 0, 624, 0, 616, 617, 618, 694, 619, 695,
	0, 620, 621, 622, 623, 0, 625, 626, 0, 0,
	627, 628, 629, 631, 632, 630, 633, 0, 634, 0,
	0, 635, 636, 637, 696, 697, 698, 0, 639, 638,
	640, 641, 699, 642, 643, 1582, 1581, 0, 0, 644,
	645, 700, 646, 647, 648, 0, 0, 0, 0, 0,
	0, 0, 281, 283, 282, 284, 285, 286, 287, 0,
	288, 289, 0, 0, 0, 0, 0, 649, 0, 0,
	0, 0, 290, 291, 1220, 292, 293, 294, 295, 296,
	297, 650, 651, 0, 298, 652, 299, 653, 0, 654,
	300, 301, 302, 303, 304, 305, 0, 0, 0, 306,
	655, 656, 657, 0, 307, 308, 658, 0, 1504, 0,
	309, 310, 311, 312, 313, 314, 315, 0, 0, 317,
	318, 319, 316, 320, 0, 321, 0, 322, 323, 324,
	325, 326, 327, 0, 328, 329, 330, 1221, 331, 332,
	333, 0, 0, 0, 0, 0, 0, 0, 334, 335,
	336, 337, 338, 0, 339, 341, 659, 660, 0, 344,
	340, 342, 0, 345, 343, 346, 0, 347, 348, 349,
	0, 0, 350, 351, 352, 0, 353, 354, 355, 0,
	356, 357, 358, 0, 359, 360, 661, 361, 362, 363,
	365, 367, 364, 366, 368, 369, 370, 371, 662, 663,
	372, 0, 278, 0, 0, 0, 0, 0, 373, 374,
	375, 664, 0, 0, 0, 376, 0, 377, 378, 379,
	0, 0, 1222, 380, 381, 382, 665, 666, 383, 384,
	385, 386, 387, 388, 389, 390, 391, 0, 392, 667,
	0, 668, 393, 0, 394, 395, 396, 397, 398, 669,
	670, 671, 484, 1224, 399, 400, 0, 401, 402, 403,
	404, 405, 0, 0, 0, 0, 406, 407, 408, 0,
	1223, 409, 672, 673, 0, 674, 0, 410, 411, 1225,
	675, 1226, 412, 413, 414, 1227, 415, 0, 0, 0,
	416, 417, 418, 419, 420, 421, 0, 422, 424, 423,
	0, 425, 676, 1228, 426, 427, 1229, 0, 428, 429,
	430, 431, 432, 433, 436, 0, 0, 434, 435, 437,
	438, 0, 439, 440, 442, 445, 441, 443, 444, 446,
	459, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 458, 461, 0, 460, 1230, 462, 463, 464,
	465, 472, 474, 475, 470, 471, 473, 476, 477, 479,
	467, 468, 469, 1231, 478, 466, 0, 0, 1232, 480,
	481, 482, 0, 677, 483, 678, 485, 486, 0, 0,
	487, 0, 0, 0, 489, 490, 491, 0, 0, 492,
	493, 679, 1233, 494, 1234, 680, 495, 496, 488, 497,
	498, 499, 500, 501, 502, 503, 504, 505, 0, 506,
	507, 681, 508, 509, 510, 682, 511, 512, 513, 683,
	514, 684, 515, 516, 0, 517, 518, 0, 519, 520,
	521, 522, 523, 524, 525, 685, 526, 527, 529, 528,
	530, 0, 531, 0, 532, 533, 534, 0, 0, 0,
	0, 0, 535, 537, 0, 538, 539, 540, 541, 536,
	542, 543, 544, 545, 546, 0, 547, 548, 549, 1235,
	550, 551, 552, 553, 554, 686, 555, 0, 556, 557,
	563, 564, 565, 558, 559, 566, 567, 568, 569, 570,
	0, 572, 573, 571, 574, 575, 576, 0, 577, 578,
	560, 561, 579, 580, 1236, 581, 582, 583, 584, 585,
	586, 587, 687, 0, 588, 0, 589, 590, 591, 592,
	594, 562, 595, 600, 601, 688, 596, 597, 598, 599,
	689, 603, 604, 0, 605, 606, 0, 602, 593, 0,
	607, 608, 609, 610, 611, 612, 613, 614, 0, 615,
	690, 691, 692, 693, 0, 624, 0, 616, 617, 618,
	694, 619, 695, 0, 620, 621, 622, 623, 0, 625,
	626, 0, 0, 627, 628, 629, 631, 632, 630, 633,
	0, 634, 0, 0, 635, 636, 637, 696, 697, 698,
	0, 639, 638, 640, 641, 699, 642, 643, 1582, 0,
	0, 0, 644, 645, 700, 646, 647, 648, 0, 0,
	0, 0, 0, 0, 0, 281, 283, 282, 284, 285,
	286, 287, 0, 288, 289, 0, 0, 0, 0, 0,
	649, 0, 0, 0, 0, 290, 291, 1220, 292, 293,
	294, 295, 296, 297, 650, 651, 0, 298, 652, 299,
	653, 0, 654, 300, 301, 302, 303, 304, 305, 0,
	0, 0, 306, 655, 656, 657, 0, 307, 308, 658,
	0, 1504, 0, 309, 310, 311, 312, 313, 314, 315,
	0, 0, 317, 318, 319, 316, 320, 0, 321, 0,
	322, 323, 324, 325, 326, 327, 0, 328, 329, 330,
	1221, 331, 332, 333, 0, 0, 0, 0, 0, 0,
	0, 334, 335, 336, 337, 338, 0, 339, 341, 659,
	660, 0, 344, 340, 342, 0, 345, 343, 346, 0,
	347, 348, 349, 0, 0, 350, 351, 352, 0, 353,
	354, 355, 0, 356, 357, 358, 0, 359, 360, 661,
	361, 362, 363, 365, 367, 364, 366, 368, 369, 370,
	371, 662, 663, 372, 0, 278, 0, 0, 0, 0,
	0, 373, 374, 375, 664, 0, 0, 0, 376, 0,
	377, 378, 379, 0, 0, 1222, 380, 381, 382, 665,
	666, 383, 384, 385, 386, 387, 388, 389, 390, 391,
	0, 392, 667, 0, 668, 393, 0, 394, 395, 396,
	397, 398, 669, 670, 671, 484, 1224, 399, 400, 0,
	401, 402, 403, 404, 405, 0, 0, 0, 0, 406,
	407, 408, 0, 1223, 409, 672, 673, 0, 674, 0,
	410, 411, 1225, 675, 1226, 412, 413, 414, 1227, 415,
	0, 0, 0, 416, 417, 418, 419, 420, 421, 0,
	422, 424, 423, 0, 425, 676, 1228, 426, 427, 1229,
	0, 428, 429, 430, 431, 432, 433, 436, 0, 0,
	434, 435, 437, 438, 0, 439, 440, 442, 445, 441,
	443, 444, 446, 459, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 458, 461, 0, 460, 1230,
	462, 463, 464, 465, 472, 474, 475, 470, 471, 473,
	476, 477, 479, 467, 468, 469, 1231, 478, 466, 0,
	0, 1232, 480, 481, 482, 0, 677, 483, 678, 485,
	486, 0, 0, 487, 0, 0, 0, 489, 490, 491,
	0, 0, 492, 493, 679, 1233, 494, 1234, 680, 495,
	496, 488, 497, 498, 499, 500, 501, 502, 503, 504,
	505, 0, 506, 507, 681, 508, 509, 510, 682, 511,
	512, 513, 683, 514, 684, 515, 516, 0, 517, 518,
	0, 519, 520, 521, 522, 523, 524, 525, 685, 526,
	527, 529, 528, 530, 0, 531, 0, 532, 533, 534,
	0, 0, 0, 0, 0, 535, 537, 0, 538, 539,
	540, 541, 536, 542, 543, 544, 545, 546, 0, 547,
	548, 549, 1235, 550, 551, 552, 553, 554, 686, 555,
	0, 556, 557, 563, 564, 565, 558, 559, 566, 567,
	568, 569, 570, 0, 572, 573, 571, 574, 575, 576,
	0, 577, 578, 560, 561, 579, 580, 1236, 581, 582,
	583, 584, 585, 586, 587, 687, 0, 588, 0, 589,
	590, 591, 592, 594, 562, 595, 600, 601, 688, 596,
	597, 598, 599, 689, 603, 604, 0, 605, 606, 0,
	602, 593, 0, 607, 608, 609, 610, 611, 612, 613,
	614, 0, 615, 690, 691, 692, 693, 0, 624, 0,
	616, 617, 618, 694, 619, 695, 0, 620, 621, 622,
	623, 0, 625, 626, 0, 0, 627, 628, 629, 631,
	632, 630, 633, 0, 634, 0, 0, 635, 636, 637,
	696, 697, 698, 0, 639, 638, 640, 641, 699, 642,
	643, 275, 0, 0, 0, 644, 645, 700, 646, 647,
	648, 0, 0, 0, 0, 0, 0, 0, 281, 283,
	282, 284, 285, 286, 287, 0, 288, 289, 0, 0,
	0, 0, 0, 649, 0, 0, 0, 0, 290, 291,
	0, 292, 293, 294, 295, 296, 297, 650, 651, 0,
	298, 652, 299, 653, 0, 654, 300, 301, 302, 303,
	304, 305, 0, 0, 0, 306, 655, 656, 657, 2945,
	307, 308, 658, 0, 0, 0, 309, 310, 311, 312,
	313, 314, 315, 0, 0, 317, 318, 319, 316, 320,
	3677, 321, 0, 322, 323, 324, 325, 326, 327, 0,
	328, 329, 330, 0, 331, 332, 333, 0, 0, 0,
	0, 0, 0, 0, 334, 335, 336, 337, 338, 0,
	339, 341, 659, 660, 0, 344, 340, 342, 0, 345,
	343, 346, 0, 347, 348, 349, 0, 0, 350, 351,
	352, 0, 353, 354, 355, 0, 356, 357, 358, 0,
	2949, 360, 661, 361, 362, 363, 365, 367, 364, 366,
	368, 369, 370, 371, 662, 663, 372, 0, 3676, 0,
	0, 0, 0, 0, 373, 374, 375, 664, 0, 0,
	0, 376, 0, 377, 378, 379, 2948, 0, 0, 380,
	381, 382, 665, 666, 383, 384, 385, 386, 387, 388,
	389, 390, 391, 0, 392, 667, 0, 668, 393, 0,
	394, 395, 396, 397, 398, 669, 670, 671, 484, 0,
	399, 400, 0, 401, 402, 403, 404, 405, 0, 0,
	0, 3673, 406, 407, 408, 0, 0, 409, 672, 673,
	0, 674, 0, 410, 3675, 0, 675, 0, 412, 413,
	414, 0, 415, 0, 0, 0, 416, 417, 418, 419,
	420, 421, 0, 422, 424, 423, 0, 425, 676, 0,
	426, 427, 3672, 0, 428, 429, 430, 431, 432, 433,
	436, 0, 0, 434, 435, 437, 438, 0, 439, 440,
	442, 445, 441, 443, 444, 446, 459, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 458, 461,
	0, 460, 0, 462, 463, 464, 465, 472, 474, 475,
	470, 471, 473, 476, 477, 479, 467, 468, 469, 0,
	478, 466, 0, 0, 0, 480, 481, 482, 0, 677,
	483, 678, 485, 486, 0, 0, 487, 0, 0, 0,
	489, 490, 491, 0, 0, 492, 493, 679, 0, 494,
	0, 680, 495, 496, 488, 497, 498, 499, 500, 501,
	502, 503, 504, 505, 0, 506, 507, 681, 508, 509,
	510, 682, 511, 512, 513, 683, 514, 684, 515, 516,
	2947, 517, 518, 0, 519, 520, 521, 522, 523, 524,
	525, 685, 526, 527, 529, 528, 530, 0, 531, 0,
	532, 533, 534, 0, 0, 0, 0, 0, 535, 537,
	0, 538, 539, 540, 541, 536, 542, 543, 544, 545,
	546, 0, 547, 548, 549, 0, 550, 551, 552, 553,
	554, 686, 555, 0, 556, 557, 563, 564, 565, 558,
	559, 566, 567, 568, 569, 570, 0, 572, 573, 571,
	574, 575, 576, 0, 577, 578, 560, 561, 579, 580,
	0, 581, 582, 583, 584, 585, 586, 587, 687, 0,
	588, 0, 589, 590, 591, 592, 594, 562, 595, 600,
	601, 688, 596, 597, 598, 599, 689, 603, 604, 0,
	605, 606, 0, 602, 593, 0, 607, 608, 609, 610,
	611, 612, 613, 614, 0, 615, 690, 691, 692, 693,
	0, 624, 0, 616, 617, 618, 694, 619, 695, 0,
	620, 621, 622, 623, 0, 625, 626, 0, 3674, 627,
	628, 629, 631, 632, 630, 633, 0, 634, 0, 0,
	635, 636, 637, 696, 697, 698, 0, 639, 638, 640,
	641, 699, 642, 643, 275, 0, 0, 0, 644, 645,
	700, 646, 647, 648, 0, 0, 0, 0, 0, 0,
	0, 281, 283, 282, 284, 285, 286, 287, 0, 288,
	289, 0, 0, 0, 0, 0, 649, 0, 0, 0,
	0, 290, 291, 0, 292, 293, 294, 295, 296, 297,
	650, 651, 0, 298, 652, 299, 653, 0, 654, 300,
	301, 302, 303, 304, 305, 0, 0, 0, 306, 655,
	656, 657, 2945, 307, 308, 658, 0, 0, 2939, 309,
	310, 311, 312, 313, 314, 315, 0, 0, 317, 318,
	319, 316, 320, 2941, 321, 0, 322, 323, 324, 325,
	326, 327, 0, 328, 329, 330, 0, 331, 332, 333,
	0, 0, 0, 0, 0, 0, 0, 334, 335, 336,
	337, 338, 0, 339, 341, 659, 660, 0, 344, 340,
	342, 0, 345, 343, 346, 0, 347, 348, 349, 0,
	0, 350, 351, 352, 0, 353, 354, 355, 0, 356,
	357, 358, 0, 2949, 360, 661, 361, 362, 363, 365,
	367, 364, 366, 368, 369, 370, 371, 662, 663, 372,
	0, 0, 0, 0, 0, 0, 0, 373, 374, 375,
	664, 0, 0, 0, 376, 0, 377, 378, 379, 2948,
	0, 0, 380, 381, 382, 665, 666, 383, 384, 385,
	386, 387, 388, 389, 390, 391, 0, 392, 667, 0,
	668, 393, 0, 394, 395, 396, 397, 398, 2938, 670,
	671, 484, 0, 399, 400, 0, 401, 402, 403, 404,
	405, 0, 0, 0, 0, 406, 407, 408, 0, 0,
	409, 672, 673, 0, 674, 0, 410, 411, 0, 675,
	0, 412, 413, 414, 0, 415, 0, 0, 0, 416,
	417, 418, 419, 420, 421, 0, 422, 424, 423, 0,
	425, 676, 0, 426, 427, 0, 0, 428, 429, 430,
	431, 432, 433, 436, 0, 0, 434, 435, 437, 438,
	0, 439, 440, 442, 445, 441, 443, 444, 446, 459,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 458, 461, 0, 460, 0, 462, 463, 464, 465,
	472, 474, 475, 470, 471, 473, 476, 477, 479, 467,
	468, 469, 0, 478, 466, 0, 0, 0, 480, 481,
	482, 0, 677, 483, 678, 485, 486, 0, 0, 487,
	0, 0, 0, 489, 490, 491, 0, 0, 492, 493,
	679, 0, 494, 0, 680, 495, 496, 488, 497, 498,
	499, 500, 501, 502, 503, 504, 505, 0, 506, 507,
	681, 508, 509, 510, 682, 511, 512, 513, 683, 514,
	684, 515, 516, 2947, 517, 518, 0, 519, 520, 521,
	522, 523, 524, 525, 685, 526, 527, 529, 528, 530,
	0, 531, 0, 532, 533, 534, 0, 0, 0, 0,
	0, 535, 537, 0, 538, 539, 540, 541, 536, 542,
	543, 544, 545, 546, 0, 547, 548, 549, 0, 550,
	551, 552, 553, 554, 686, 555, 0, 556, 557, 563,
	564, 565, 558, 559, 566, 567, 568, 569, 570, 0,
	572, 573, 571, 574, 575, 576, 0, 577, 578, 560,
	561, 579, 580, 0, 581, 582, 583, 584, 585, 586,
	587, 687, 0, 588, 0, 589, 590, 591, 592, 594,
	562, 595, 600, 601, 688, 596, 597, 598, 599, 689,
	603, 604, 0, 605, 606, 0, 602, 593, 0, 607,
	608, 609, 610, 611, 612, 613, 614, 0, 615, 690,
	691, 692, 693, 0, 624, 0, 616, 617, 618, 694,
	619, 695, 0, 620, 621, 622, 623, 0, 625, 626,
	0, 2946, 627, 628, 629, 631, 632, 630, 633, 0,
	634, 0, 0, 635, 636, 637, 696, 697, 698, 0,
	639, 638, 640, 641, 699, 642, 643, 1787, 0, 275,
	0, 644, 645, 700, 646, 647, 648, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 281, 283, 282, 284,
	285, 286, 287, 1786, 288, 289, 0, 0, 0, 0,
	0, 649, 0, 0, 0, 0, 290, 291, 0, 292,
	293, 294, 295, 296, 297, 650, 651, 0, 298, 652,
	299, 653, 0, 654, 300, 301, 302, 303, 304, 305,
	0, 0, 0, 306, 655, 656, 657, 0, 307, 308,
	658, 0, 0, 0, 309, 310, 311, 312, 313, 314,
	315, 0, 0, 317, 318, 319, 316, 320, 0, 321,
	0, 322, 323, 324, 325, 326, 327, 0, 328, 329,
	330, 0, 331, 332, 333, 0, 0, 0, 0, 0,
	0, 0, 334, 335, 336, 1785, 338, 0, 339, 341,
	659, 660, 0, 344, 340, 342, 0, 345, 343, 346,
	0, 347, 348, 349, 0, 0, 350, 351, 352, 0,
	353, 354, 355, 0, 356, 357, 358, 0, 359, 360,
	661, 361, 362, 363, 365, 367, 364, 366, 368, 369,
	370, 371, 662, 663, 372, 0, 278, 0, 0, 0,
	0, 0, 373, 374, 375, 664, 0, 0, 0, 376,
	0, 377, 378, 379, 0, 0, 0, 380, 381, 382,
	665, 666, 383, 384, 385, 386, 387, 388, 389, 390,
	391, 0, 392, 667, 0, 668, 393, 0, 394, 395,
	396, 397, 398, 669, 670, 671, 484, 0, 399, 400,
	0, 401, 402, 403, 404, 405, 0, 0, 0, 279,
	406, 407, 408, 0, 0, 409, 672, 673, 0, 674,
	0, 410, 411, 0, 675, 0, 412, 413, 414, 0,
	415, 0, 0, 0, 416, 417, 418, 419, 420, 421,
	0, 422, 424, 423, 0, 425, 676, 0, 426, 427,
	0, 0, 428, 429, 430, 431, 432, 433, 436, 0,
	0, 434, 435, 437, 438, 0, 439, 440, 442, 445,
	441, 443, 444, 446, 459, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 458, 461, 0, 460,
	0, 462, 463, 464, 465, 472, 474, 475, 470, 471,
	473, 476, 477, 479, 467, 468, 469, 0, 478, 466,
	0, 280, 0, 480, 481, 482, 0, 677, 483, 678,
	485, 486, 0, 0, 487, 0, 0, 0, 489, 490,
	491, 0, 0, 492, 493, 679, 0, 494, 0, 680,
	495, 496, 488, 497, 498, 499, 500, 501, 502, 503,
	504, 505, 0, 506, 507, 681, 508, 509, 510, 682,
	511, 512, 513, 683, 514, 684, 515, 516, 0, 517,
	518, 0, 519, 520, 521, 522, 523, 524, 525, 685,
	526, 527, 529, 528, 530, 0, 531, 0, 532, 533,
	534, 0, 0, 0, 0, 0, 535, 537, 0, 538,
	539, 540, 541, 536, 542, 543, 544, 545, 546, 0,
	547, 548, 549, 0, 550, 551, 552, 553, 554, 686,
	555, 0, 556, 557, 563, 564, 565, 1788, 559, 566,
	567, 568, 569, 570, 0, 1784, 573, 571, 574, 575,
	576, 0, 577, 578, 560, 561, 579, 580, 0, 581,
	582, 583, 584, 585, 586, 587, 687, 0, 588, 0,
	589, 590, 591, 592, 594, 562, 595, 600, 601, 688,
	596, 597, 598, 599, 689, 603, 604, 0, 605, 606,
	0, 602, 593, 1782, 607, 608, 609, 610, 611, 612,
	613, 614, 0, 615, 690, 691, 692, 693, 0, 624,
	0, 616, 617, 618, 694, 619, 695, 0, 620, 621,
	622, 623, 0, 625, 626, 0, 0, 627, 628, 629,
	631, 632, 630, 633, 0, 634, 0, 0, 635, 636,
	637, 696, 697, 698, 0, 1783, 638, 640, 641, 699,
	642, 643, 1508, 0, 275, 0, 644, 645, 700, 646,
	647, 648, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 281, 283, 282, 284, 285, 286, 287, 0, 288,
	289, 0, 0, 0, 0, 0, 649, 0, 0, 0,
	0, 290, 291, 0, 292, 293, 294, 295, 296, 297,
	650, 651, 0, 298, 652, 299, 653, 0, 654, 300,
	301, 302, 303, 304, 305, 0, 0, 0, 306, 655,
	656, 657, 0, 307, 308, 658, 0, 0, 0, 309,
	310, 311, 312, 313, 314, 315, 0, 0, 317, 318,
	319, 316, 320, 0, 321, 0, 322, 323, 324, 325,
	326, 327, 0, 328, 329, 330, 0, 331, 332, 333,
	0, 0, 0, 0, 0, 0, 0, 334, 335, 336,
	337, 338, 0, 339, 341, 659, 660, 0, 344, 340,
	342, 0, 345, 343, 346, 0, 347, 348, 349, 0,
	0, 350, 351, 352, 0, 353, 354, 355, 0, 356,
	357, 358, 0, 359, 360, 661, 361, 362, 363, 365,
	367, 364, 366, 368, 369, 370, 371, 662, 663, 372,
	0, 278, 0, 0, 0, 0, 0, 373, 374, 375,
	664, 0, 0, 0, 376, 0, 377, 378, 379, 0,
	0, 0, 380, 381, 382, 665, 666, 383, 384, 385,
	386, 387, 388, 389, 390, 391, 0, 392, 667, 0,
	668, 393, 0, 394, 395, 396, 397, 398, 1510, 670,
	671, 484, 0, 399, 400, 0, 401, 402, 403, 404,
	405, 0, 0, 0, 279, 406, 407, 408, 0, 0,
	409, 672, 673, 0, 674, 0, 410, 411, 0, 675,
	0, 412, 413, 414, 0, 415, 0, 0, 0, 416,
	417, 418, 419, 420, 421, 0, 422, 424, 423, 0,
	425, 676, 0, 426, 427, 0, 0, 428, 429, 430,
	431, 432, 433, 436, 0, 0, 434, 435, 437, 438,
	0, 439, 440, 442, 445, 441, 443, 444, 446, 459,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 458, 461, 0, 460, 0, 462, 463, 464, 465,
	472, 474, 475, 470, 471, 473, 476, 477, 479, 467,
	468, 469, 0, 478, 466, 0, 280, 0, 480, 481,
	482, 0, 677, 483, 678, 485, 486, 0, 0, 487,
	0, 0, 1270, 489, 490, 491, 0, 0, 492, 493,
	679, 0, 494, 0, 680, 495, 496, 488, 497, 498,
	499, 500, 501, 502, 503, 504, 505, 0, 506, 507,
	681, 508, 509, 510, 682, 511, 512, 513, 683, 514,
	684, 515, 516, 0, 517, 518, 0, 519, 520, 521,
	522, 523, 524, 525, 685, 526, 527, 529, 528, 530,
	0, 531, 0, 532, 533, 534, 0, 0, 0, 0,
	0, 535, 537, 0, 538, 539, 540, 541, 536, 542,
	543, 544, 545, 546, 0, 547, 548, 549, 0, 550,
	551, 552, 553, 554, 686, 555, 0, 556, 557, 563,
	564, 565, 558, 559, 566, 567, 568, 569, 570, 0,
	572, 573, 571, 574, 575, 576, 0, 577, 578, 560,
	561, 579, 580, 0, 581, 582, 583, 584, 585, 586,
	587, 687, 0, 588, 0, 589, 590, 591, 592, 594,
	562, 595, 600, 601, 688, 596, 597, 598, 599, 689,
	603, 604, 0, 605, 606, 0, 602, 593, 0, 607,
	608, 609, 610, 611, 612, 613, 614, 0, 615, 690,
	691, 692, 693, 0, 624, 0, 616, 617, 618, 694,
	619, 695, 0, 620, 621, 622, 623, 0, 625, 626,
	0, 0, 627, 628, 629, 631, 632, 630, 633, 0,
	634, 0, 0, 635, 636, 637, 696, 697, 698, 0,
	639, 638, 640, 641, 699, 642, 643, 1505, 0, 275,
	0, 644, 645, 700, 646, 647, 648, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 281, 283, 282, 284,
	285, 286, 287, 0, 288, 289, 0, 0, 0, 0,
	0, 649, 0, 0, 0, 0, 290, 291, 0, 292,
	293, 294, 295, 296, 297, 650, 651, 0, 298, 652,
	299, 653, 0, 654, 300, 301, 302, 303, 304, 305,
	0, 0, 0, 306, 655, 656, 657, 0, 307, 308,
	658, 0, 0, 0, 309, 310, 311, 312, 313, 314,
	315, 0, 0, 317, 318, 319, 316, 320, 0, 321,
	0, 322, 323, 324, 325, 326, 327, 0, 328, 329,
	330, 0, 331, 332, 333, 0, 0, 0, 0, 0,
	0, 0, 334, 335, 336, 337, 338, 0, 339, 341,
	659, 660, 0, 344, 340, 342, 0, 345, 343, 346,
	0, 347, 348, 349, 0, 0, 350, 351, 352, 0,
	353, 354, 355, 0, 356, 357, 358, 0, 359, 360,
	661, 361, 362, 363, 365, 367, 364, 366, 368, 369,
	370, 371, 662, 663, 372, 0, 278, 0, 0, 0,
	0, 0, 373, 374, 375, 664, 0, 0, 0, 376,
	0, 377, 378, 379, 0, 0, 0, 380, 381, 382,
	665, 666, 383, 384, 385, 386, 387, 388, 389, 390,
	391, 0, 392, 667, 0, 668, 393, 0, 394, 395,
	396, 397, 398, 1507, 670, 671, 484, 0, 399, 400,
	0, 401, 402, 403, 404, 405, 0, 0, 0, 279,
	406, 407, 408, 0, 0, 409, 672, 673, 0, 674,
	0, 410, 411, 0, 675, 0, 412, 413, 414, 0,
	415, 0, 0, 0, 416, 417, 418, 419, 420, 421,
	0, 422, 424, 423, 0, 425, 676, 0, 426, 427,
	0, 0, 428, 429, 430, 431, 432, 433, 436, 0,
	0, 434, 435, 437, 438, 0, 439, 440, 442, 445,
	441, 443, 444, 446, 459, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 458, 461, 0, 460,
	0, 462, 463, 464, 465, 472, 474, 475, 470, 471,
	473, 476, 477, 479, 467, 468, 469, 0, 478, 466,
	0, 280, 0, 480, 481, 482, 0, 677, 483, 678,
	485, 486, 0, 0, 487, 0, 0, 1270, 489, 490,
	491, 0, 0, 492, 493, 679, 0, 494, 0, 680,
	495, 496, 488, 497, 498, 499, 500, 501, 502, 503,
	504, 505, 0, 506, 507, 681, 508, 509, 510, 682,
	511, 512, 513, 683, 514, 684, 515, 516, 0, 517,
	518, 0, 519, 520, 521, 522, 523, 524, 525, 685,
	526, 527, 529, 528, 530, 0, 531, 0, 532, 533,
	534, 0, 0, 0, 0, 0, 535, 537, 0, 538,
	539, 540, 541, 536, 542, 543, 544, 545, 546, 0,
	547, 548, 549, 0, 550, 551, 552, 553, 554, 686,
	555, 0, 556, 557, 563, 564, 565, 558, 559, 566,
	567, 568, 569, 570, 0, 572, 573, 571, 574, 575,
	576, 0, 577, 578, 560, 561, 579, 580, 0, 581,
	582, 583, 584, 585, 586, 587, 687, 0, 588, 0,
	589, 590, 591, 592, 594, 562, 595, 600, 601, 688,
	596, 597, 598, 599, 689, 603, 604, 0, 605, 606,
	0, 602, 593, 0, 607, 608, 609, 610, 611, 612,
	613, 614, 0, 615, 690, 691, 692, 693, 0, 624,
	0, 616, 617, 618, 694, 619, 695, 0, 620, 621,
	622, 623, 0, 625, 626, 0, 0, 627, 628, 629,
	631, 632, 630, 633, 0, 634, 0, 0, 635, 636,
	637, 696, 697, 698, 0, 639, 638, 640, 641, 699,
	642, 643, 1411, 0, 275, 0, 644, 645, 700, 646,
	647, 648, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 281, 283, 282, 284, 285, 286, 287, 0, 288,
	289, 0, 0, 0, 0, 0, 649, 0, 0, 0,
	0, 290, 291, 0, 292, 293, 294, 295, 296, 297,
	650, 651, 0, 298, 652, 299, 653, 0, 654, 300,
	301, 302, 303, 304, 305, 0, 0, 0, 306, 655,
	656, 657, 0, 307, 308, 658, 0, 0, 0, 309,
	310, 311, 312, 313, 314, 315, 0, 0, 317, 318,
	319, 316, 320, 0, 321, 0, 322, 323, 324, 325,
	326, 327, 0, 328, 329, 330, 0, 331, 332, 333,
	0, 0, 0, 0, 0, 0, 0, 334, 335, 336,
	337, 338, 0, 339, 341, 659, 660, 0, 344, 340,
	342, 0, 345, 343, 346, 0, 347, 348, 349, 0,
	0, 350, 351, 352, 0, 353, 354, 355, 0, 356,
	357, 358, 0, 359, 360, 661, 361, 362, 363, 365,
	367, 364, 366, 368, 369, 370, 371, 662, 663, 372,
	0, 278, 0, 0, 0, 0, 0, 373, 374, 375,
	664, 0, 0, 0, 376, 0, 377, 378, 379, 0,
	0, 0, 380, 381, 382, 665, 666, 383, 384, 385,
	386, 387, 388, 389, 390, 391, 0, 392, 667, 0,
	668, 393, 0, 394, 395, 396, 397, 398, 1413, 670,
	671, 484, 0, 399, 400, 0, 401, 402, 403, 404,
	405, 0, 0, 0, 279, 406, 407, 408, 0, 0,
	409, 672, 673, 0, 674, 0, 410, 411, 0, 675,
	0, 412, 413, 414, 0, 415, 0, 0, 0, 416,
	417, 418, 419, 420, 421, 0, 422, 424, 423, 0,
	425, 676, 0, 426, 427, 0, 0, 428, 429, 430,
	431, 432, 433, 436, 0, 0, 434, 435, 437, 438,
	0, 439, 440, 442, 445, 441, 443, 444, 446, 459,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 458, 461, 0, 460, 0, 462, 463, 464, 465,
	472, 474, 475, 470, 471, 473, 476, 477, 479, 467,
	468, 469, 0, 478, 466, 0, 280, 0, 480, 481,
	482, 0, 677, 483, 678, 485, 486, 0, 0, 487,
	0, 0, 1270, 489, 490, 491, 0, 0, 492, 493,
	679, 0, 494, 0, 680, 495, 496, 488, 497, 498,
	499, 500, 501, 502, 503, 504, 505, 0, 506, 507,
	681, 508, 509, 510, 682, 511, 512, 513, 683, 514,
	684, 515, 516, 0, 517, 518, 0, 519, 520, 521,
	522, 523, 524, 525, 685, 526, 527, 529, 528, 530,
	0, 531, 0, 532, 533, 534, 0, 0, 0, 0,
	0, 535, 537, 0, 538, 539, 540, 541, 536, 542,
	543, 544, 545, 546, 0, 547, 548, 549, 0, 550,
	551, 552, 553, 554, 686, 555, 0, 556, 557, 563,
	564, 565, 558, 559, 566, 567, 568, 569, 570, 0,
	572, 573, 571, 574, 575, 576, 0, 577, 578, 560,
	561, 579, 580, 0, 581, 582, 583, 584, 585, 586,
	587, 687, 0, 588, 0, 589, 590, 591, 592, 594,
	562, 595, 600, 601, 688, 596, 597, 598, 599, 689,
	603, 604, 0, 605, 606, 0, 602, 593, 0, 607,
	608, 609, 610, 611, 612, 613, 614, 0, 615, 690,
	691, 692, 693, 0, 624, 0, 616, 617, 618, 694,
	619, 695, 0, 620, 621, 622, 623, 0, 625, 626,
	0, 0, 627, 628, 629, 631, 632, 630, 633, 0,
	634, 0, 0, 635, 636, 637, 696, 697, 698, 0,
	639, 638, 640, 641, 699, 642, 643, 733, 0, 275,
	0, 644, 645, 700, 646, 647, 648, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 281, 283, 282, 284,
	732, 286, 287, 721, 288, 289, 0, 0, 0, 0,
	0, 649, 0, 0, 0, 0, 290, 291, 0, 292,
	293, 294, 295, 296, 297, 650, 651, 0, 298, 652,
	299, 653, 0, 654, 300, 301, 302, 303, 304, 305,
	0, 0, 0, 306, 655, 656, 657, 0, 307, 308,
	658, 0, 0, 0, 309, 310, 311, 312, 313, 314,
	315, 0, 0, 317, 318, 319, 316, 320, 0, 321,
	0, 322, 323, 324, 325, 326, 327, 724, 328, 329,
	330, 0, 331, 332, 333, 0, 0, 0, 0, 0,
	0, 0, 334, 335, 336, 337, 338, 0, 339, 341,
	659, 660, 0, 344, 340, 342, 0, 345, 343, 346,
	0, 347, 348, 349, 0, 0, 350, 351, 352, 0,
	353, 354, 355, 0, 356, 357, 358, 0, 359, 360,
	661, 361, 362, 363, 365, 367, 364, 366, 368, 369,
	370, 371, 662, 663, 372, 0, 0, 0, 0, 0,
	0, 0, 373, 374, 375, 664, 0, 0, 0, 376,
	0, 377, 378, 379, 0, 0, 0, 380, 381, 382,
	665, 666, 383, 384, 385, 386, 387, 388, 389, 390,
	391, 730, 392, 667, 0, 668, 393, 0, 394, 395,
	396, 397, 398, 669, 670, 671, 484, 0, 399, 400,
	0, 401, 402, 403, 404, 405, 0, 0, 0, 0,
	406, 407, 408, 0, 0, 409, 672, 673, 0, 674,
	0, 410, 411, 0, 675, 0, 412, 413, 414, 0,
	415, 0, 0, 0, 416, 417, 418, 419, 420, 421,
	0, 422, 424, 423, 0, 425, 676, 0, 426, 427,
	0, 0, 428, 429, 430, 431, 432, 433, 436, 0,
	0, 434, 435, 437, 438, 0, 439, 440, 442, 445,
	441, 443, 444, 446, 459, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 458, 461, 0, 460,
	0, 462, 463, 464, 465, 472, 474, 475, 470, 471,
	473, 476, 477, 479, 467, 468, 469, 0, 478, 466,
	0, 0, 0, 480, 481, 482, 0, 677, 483, 678,
	485, 486, 0, 0, 487, 0, 0, 0, 489, 490,
	491, 0, 0, 492, 493, 679, 0, 494, 0, 680,
	495, 496, 488, 497, 498, 499, 500, 501, 502, 503,
	504, 505, 0, 506, 507, 681, 508, 509, 510, 682,
	511, 512, 513, 683, 514, 684, 515, 516, 0, 517,
	518, 0, 519, 520, 521, 522, 523, 524, 525, 685,
	526, 527, 529, 528, 530, 0, 531, 0, 532, 533,
	534, 0, 0, 0, 0, 0, 535, 537, 0, 538,
	539, 540, 541, 536, 542, 543, 544, 545, 546, 0,
	547, 548, 549, 0, 550, 551, 552, 553, 554, 686,
	555, 0, 556, 557, 563, 564, 565, 558, 559, 566,
	567, 568, 569, 570, 726, 572, 573, 571, 574, 575,
	576, 0, 577, 578, 560, 561, 579, 580, 0, 581,
	582, 583, 584, 585, 586, 587, 687, 0, 588, 0,
	589, 590, 591, 592, 594, 562, 595, 600, 601, 688,
	596, 597, 598, 599, 689, 603, 604, 0, 605, 606,
	0, 602, 593, 0, 607, 608, 609, 610, 611, 612,
	613, 614, 0, 615, 690, 691, 692, 693, 0, 624,
	0, 616, 617, 618, 694, 619, 695, 0, 620, 621,
	622, 623, 0, 625, 626, 0, 0, 627, 628, 629,
	631, 632, 630, 633, 0, 634, 0, 0, 635, 636,
	637, 696, 697, 698, 0, 639, 638, 640, 641, 699,
	642, 643, 720, 0, 275, 0, 644, 645, 700, 646,
	647, 648, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 281, 283, 282, 284, 285, 286, 287, 721, 288,
	289, 0, 0, 0, 0, 0, 649, 0, 0, 0,
	0, 290, 291, 0, 292, 293, 294, 295, 296, 297,
	650, 651, 0, 298, 652, 299, 653, 0, 654, 300,
	301, 302, 303, 304, 305, 0, 0, 0, 306, 655,
	656, 657, 0, 307, 308, 658, 0, 0, 0, 309,
	310, 311, 312, 313, 314, 315, 0, 0, 317, 318,
	319, 316, 320, 0, 321, 0, 322, 323, 324, 325,
	326, 327, 724, 328, 329, 330, 0, 331, 332, 333,
	0, 0, 0, 0, 0, 0, 0, 334, 335, 336,
	337, 338, 0, 339, 341, 659, 660, 0, 344, 340,
	342, 0, 345, 343, 346, 0, 347, 348, 349, 0,
	0, 350, 351, 352, 0, 353, 354, 355, 0, 356,
	357, 358, 0, 359, 360, 661, 361, 362, 363, 365,
	367, 364, 366, 368, 369, 370, 371, 662, 663, 372,
	0, 0, 0, 0, 0, 0, 0, 373, 374, 375,
	664, 0, 0, 0, 376, 0, 377, 378, 379, 0,
	0, 0, 380, 381, 382, 665, 666, 383, 384, 385,
	386, 387, 388, 389, 390, 391, 725, 392, 667, 0,
	668, 393, 0, 394, 395, 396, 397, 398, 669, 670,
	671, 484, 0, 399, 400, 0, 401, 402, 403, 404,
	405, 0, 0, 0, 0, 406, 407, 408, 0, 0,
	409, 672, 673, 0, 674, 0, 410, 411, 0, 675,
	0, 412, 413, 414, 0, 415, 0, 0, 0, 416,
	417, 418, 419, 420, 421, 0, 422, 424, 423, 0,
	425, 676, 0, 426, 427, 0, 0, 428, 429, 430,
	431, 432, 433, 436, 0, 0, 434, 435, 437, 438,
	0, 439, 440, 442, 445, 441, 443, 444, 446, 459,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 458, 461, 0, 460, 0, 462, 463, 464, 465,
	472, 474, 475, 470, 471, 473, 476, 477, 479, 467,
	468, 469, 0, 478, 466, 0, 0, 0, 480, 481,
	482, 0, 677, 483, 678, 485, 486, 0, 0, 487,
	0, 0, 0, 489, 490, 491, 0, 0, 492, 493,
	679, 0, 494, 0, 680, 495, 496, 488, 497, 498,
	499, 500, 501, 502, 503, 504, 505, 0, 506, 507,
	681, 508, 509, 510, 682, 511, 512, 513, 683, 514,
	684, 515, 516, 0, 517, 518, 0, 519, 520, 521,
	522, 523, 524, 525, 685, 526, 527, 529, 528, 530,
	0, 531, 0, 532, 533, 534, 0, 0, 0, 0,
	0, 535, 537, 0, 538, 539, 540, 541, 536, 542,
	543, 544, 545, 546, 0, 547, 548, 549, 0, 550,
	551, 552, 553, 554, 686, 555, 0, 556, 557, 563,
	564, 565, 558, 559, 566, 567, 568, 569, 570, 726,
	572, 573, 571, 574, 575, 576, 0, 577, 578, 560,
	561, 579, 580, 0, 581, 582, 583, 584, 585, 586,
	587, 687, 0, 588, 0, 589, 590, 591, 592, 594,
	562, 595, 600, 601, 688, 596, 597, 598, 599, 689,
	603, 604, 0, 605, 606, 0, 602, 593, 0, 607,
	608, 609, 610, 611, 612, 613, 614, 0, 615, 690,
	691, 692, 693, 0, 624, 0, 616, 617, 618, 694,
	619, 695, 0, 620, 621, 622, 623, 0, 625, 626,
	0, 0, 627, 628, 629, 631, 632, 630, 633, 0,
	634, 0, 0, 635, 636, 637, 696, 697, 698, 0,
	639, 638, 640, 641, 699, 642, 643, 275, 0, 0,
	0, 644, 645, 700, 646, 647, 648, 0, 0, 0,
	0, 0, 0, 0, 281, 283, 282, 284, 285, 286,
	287, 721, 288, 289, 0, 0, 0, 0, 0, 649,
	0, 0, 0, 0, 290, 291, 0, 292, 293, 294,
	295, 296, 297, 650, 651, 0, 298, 652, 299, 653,
	0, 654, 300, 301, 302, 303, 304, 305, 0, 0,
	0, 306, 655, 656, 657, 0, 307, 308, 658, 0,
	0, 0, 309, 310, 311, 312, 313, 314, 315, 0,
	0, 317, 318, 319, 316, 320, 0, 321, 0, 322,
	323, 324, 325, 326, 327, 724, 328, 329, 330, 0,
	331, 332, 333, 0, 0, 0, 0, 0, 0, 0,
	334, 335, 336, 337, 338, 0, 339, 341, 659, 660,
	0, 344, 340, 342, 0, 345, 343, 346, 0, 347,
	348, 349, 0, 0, 350, 351, 352, 0, 353, 354,
	355, 0, 356, 357, 358, 0, 359, 360, 661, 361,
	362, 363, 365, 367, 364, 366, 368, 369, 370, 371,
	662, 663, 372, 0, 0, 0, 0, 0, 0, 0,
	373, 374, 375, 664, 0, 0, 0, 376, 0, 377,
	378, 379, 0, 0, 0, 380, 381, 382, 665, 666,
	383, 384, 385, 386, 387, 388, 389, 390, 391, 725,
	392, 667, 0, 668, 393, 0, 394, 395, 396, 397,
	398, 669, 670, 671, 484, 0, 399, 400, 0, 401,
	402, 403, 404, 405, 0, 0, 0, 0, 406, 407,
	408, 0, 0, 409, 672, 673, 0, 674, 0, 410,
	411, 0, 675, 0, 412, 413, 414, 0, 415, 0,
	0, 0, 416, 417, 418, 419, 420, 421, 0, 422,
	424, 423, 0, 425, 676, 0, 426, 427, 0, 0,
	428, 429, 430, 431, 432, 433, 436, 0, 0, 434,
	435, 437, 438, 0, 439, 440, 442, 445, 441, 443,
	444, 446, 459, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 458, 461, 0, 460, 0, 462,
	463, 464, 465, 472, 474, 475, 470, 471, 473, 476,
	477, 479, 467, 468, 469, 0, 478, 466, 0, 0,
	0, 480, 481, 482, 0, 677, 483, 678, 485, 486,
	0, 0, 487, 0, 0, 0, 489, 490, 491, 0,
	0, 492, 493, 679, 0, 494, 0, 680, 495, 496,
	488, 497, 498, 499, 500, 501, 502, 503, 504, 505,
	0, 506, 507, 681, 508, 509, 510, 682, 511, 512,
	513, 683, 514, 684, 515, 516, 0, 517, 518, 0,
	519, 520, 521, 522, 523, 524, 525, 685, 526, 527,
	529, 528, 530, 0, 531, 0, 532, 533, 534, 0,
	0, 0, 0, 0, 535, 537, 0, 538, 539, 540,
	541, 536, 542, 543, 544, 545, 546, 0, 547, 548,
	549, 0, 550, 551, 552, 553, 554, 686, 555, 0,
	556, 557, 563, 564, 565, 558, 559, 566, 567, 568,
	569, 570, 726, 572, 573, 571, 574, 575, 576, 0,
	577, 578, 560, 561, 579, 580, 0, 581, 582, 583,
	584, 585, 586, 587, 687, 0, 588, 0, 589, 590,
	591, 592, 594, 562, 595, 600, 601, 688, 596, 597,
	598, 599, 689, 603, 604, 0, 605, 606, 0, 602,
	593, 0, 607, 608, 609, 610, 611, 612, 613, 614,
	0, 615, 690, 691, 692, 693, 0, 624, 0, 616,
	617, 618, 694, 619, 695, 0, 620, 621, 622, 623,
	0, 625, 626, 0, 0, 627, 628, 629, 631, 632,
	630, 633, 0, 634, 0, 0, 635, 636, 637, 696,
	697, 698, 0, 639, 638, 640, 641, 699, 642, 643,
	275, 0, 0, 0, 644, 645, 700, 646, 647, 648,
	0, 0, 0, 0, 0, 0, 0, 281, 283, 282,
	284, 285, 286, 287, 721, 288, 289, 0, 0, 0,
	0, 0, 649, 0, 0, 0, 0, 290, 291, 0,
	292, 293, 294, 295, 296, 297, 650, 651, 0, 298,
	652, 299, 653, 0, 654, 300, 301, 302, 303, 304,
	305, 0, 0, 0, 306, 655, 656, 657, 0, 307,
	308, 658, 0, 0, 0, 309, 310, 311, 312, 313,
	314, 315, 0, 0, 317, 318, 319, 316, 320, 0,
	321, 0, 322, 323, 324, 325, 326, 327, 724, 328,
	329, 330, 0, 331, 332, 333, 0, 0, 0, 0,
	0, 0, 0, 334, 335, 336, 337, 338, 0, 339,
	341, 659, 660, 0, 344, 340, 342, 0, 345, 343,
	346, 0, 347, 348, 349, 0, 0, 350, 351, 352,
	0, 353, 354, 355, 0, 356, 357, 358, 0, 359,
	360, 661, 361, 362, 363, 365, 367, 364, 366, 368,
	369, 370, 371, 662, 663, 372, 0, 0, 0, 0,
	0, 0, 0, 373, 374, 375, 664, 0, 0, 0,
	376, 0, 377, 378, 379, 0, 0, 0, 380, 381,
	382, 665, 666, 383, 384, 385, 386, 387, 388, 389,
	390, 391, 4065, 392, 667, 0, 668, 393, 0, 394,
	395, 396, 397, 398, 669, 670, 671, 484, 0, 399,
	400, 0, 401, 402, 403, 404, 405, 0, 0, 0,
	0, 406, 407, 408, 0, 0, 409, 672, 673, 0,
	674, 0, 410, 411, 0, 675, 0, 412, 413, 414,
	0, 415, 0, 0, 0, 416, 417, 418, 419, 420,
	421, 0, 422, 424, 423, 0, 425, 676, 0, 426,
	427, 0, 0, 428, 429, 430, 431, 432, 433, 436,
	0, 0, 434, 435, 437, 438, 0, 439, 440, 442,
	445, 441, 443, 444, 446, 459, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 458, 461, 0,
	460, 0, 462, 463, 464, 465, 472, 474, 475, 470,
	471, 473, 476, 477, 479, 467, 468, 469, 0, 478,
	466, 0, 0, 0, 480, 481, 482, 0, 677, 483,
	678, 485, 486, 0, 0, 487, 0, 0, 0, 489,
	490, 491, 0, 0, 492, 493, 679, 0, 494, 0,
	680, 495, 496, 488, 497, 498, 499, 500, 501, 502,
	503, 504, 505, 0, 506, 507, 681, 508, 509, 510,
	682, 511, 512, 513, 683, 514, 684, 515, 516, 0,
	517, 518, 0, 519, 520, 521, 522, 523, 524, 525,
	685, 526, 527, 529, 528, 530, 0, 531, 0, 532,
	533, 534, 0, 0, 0, 0, 0, 535, 537, 0,
	538, 539, 540, 541, 536, 542, 543, 544, 545, 546,
	0, 547, 548, 549, 0, 550, 551, 552, 553, 554,
	686, 555, 0, 556, 557, 563, 564, 565, 558, 559,
	566, 567, 568, 569, 570, 726, 572, 573, 571, 574,
	575, 576, 0, 577, 578, 560, 561, 579, 580, 0,
	581, 582, 583, 584, 585, 586, 587, 687, 0, 588,
	0, 589, 590, 591, 592, 594, 562, 595, 600, 601,
	688, 596, 597, 598, 599, 689, 603, 604, 0, 605,
	606, 0, 602, 593, 0, 607, 608, 609, 610, 611,
	612, 613, 614, 0, 615, 690, 691, 692, 693, 0,
	624, 0, 616, 617, 618, 694, 619, 695, 0, 620,
	621, 622, 623, 0, 625, 626, 0, 0, 627, 628,
	629, 631, 632, 630, 633, 0, 634, 0, 0, 635,
	636, 637, 696, 697, 698, 0, 639, 638, 640, 641,
	699, 642, 643, 275, 0, 0, 0, 644, 645, 700,
	646, 647, 648, 0, 0, 0, 0, 0, 0, 0,
	281, 283, 282, 284, 285, 286, 287, 0, 288, 289,
	0, 0, 0, 0, 0, 649, 0, 0, 0, 0,
	290, 291, 0, 292, 293, 294, 295, 296, 297, 650,
	651, 0, 298, 652, 299, 653, 0, 654, 300, 301,
	302, 303, 304, 305, 0, 0, 0, 306, 655, 656,
	657, 0, 307, 308, 658, 0, 0, 0, 309, 310,
	311, 312, 313, 314, 315, 0, 0, 317, 318, 319,
	316, 320, 0, 321, 0, 322, 323, 324, 325, 326,
	327, 0, 328, 329, 330, 0, 331, 332, 333, 0,
	0, 0, 0, 0, 0, 0, 334, 335, 336, 337,
	338, 0, 339, 341, 659, 660, 0, 344, 340, 342,
	0, 345, 343, 346, 0, 347, 348, 349, 0, 0,
	350, 351, 352, 0, 353, 354, 355, 0, 356, 357,
	358, 0, 359, 360, 661, 361, 362, 363, 365, 367,
	364, 366, 368, 369, 370, 371, 662, 663, 372, 0,
	278, 0, 0, 0, 0, 0, 373, 374, 375, 664,
	0, 0, 0, 376, 0, 377, 378, 379, 0, 0,
	0, 380, 381, 382, 665, 666, 383, 384, 385, 386,
	387, 388, 389, 390, 391, 0, 392, 667, 0, 668,
	393, 0, 394, 395, 396, 397, 398, 669, 670, 671,
	484, 0, 399, 400, 0, 401, 402, 403, 404, 405,
	0, 0, 0, 279, 406, 407, 408, 0, 0, 409,
	672, 673, 0, 674, 0, 410, 411, 0, 675, 0,
	412, 413, 414, 0, 415, 0, 0, 0, 416, 417,
	418, 419, 420, 421, 0, 422, 424, 423, 0, 425,
	676, 0, 426, 427, 0, 0, 428, 429, 430, 431,
	432, 433, 436, 0, 0, 434, 435, 437, 438, 0,
	439, 440, 442, 445, 441, 443, 444, 446, 459, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	458, 461, 0, 460, 0, 462, 463, 464, 465, 472,
	474, 475, 470, 471, 473, 476, 477, 479, 467, 468,
	469, 0, 478, 466, 0, 280, 0, 480, 481, 482,
	0, 677, 483, 678, 485, 486, 0, 0, 487, 0,
	0, 1270, 489, 490, 491, 0, 0, 492, 493, 679,
	0, 494, 0, 680, 495, 496, 488, 497, 498, 499,
	500, 501, 502, 503, 504, 505, 0, 506, 507, 681,
	508, 509, 510, 682, 511, 512, 513, 683, 514, 684,
	515, 516, 0, 517, 518, 0, 519, 520, 521, 522,
	523, 524, 525, 685, 526, 527, 529, 528, 530, 0,
	531, 0, 532, 533, 534, 0, 0, 0, 0, 0,
	535, 537, 0, 538, 539, 540, 541, 536, 542, 543,
	544, 545, 546, 0, 547, 548, 549, 0, 550, 551,
	552, 553, 554, 686, 555, 0, 556, 557, 563, 564,
	565, 558, 559, 566, 567, 568, 569, 570, 0, 572,
	573, 571, 574, 575, 576, 0, 577, 578, 560, 561,
	579, 580, 0, 581, 582, 583, 584, 585, 586, 587,
	687, 0, 588, 0, 589, 590, 591, 592, 594, 562,
	595, 600, 601, 688, 596, 597, 598, 599, 689, 603,
	604, 0, 605, 606, 0, 602, 593, 0, 607, 608,
	609, 610, 611, 612, 613, 614, 0, 615, 690, 691,
	692, 693, 0, 624, 0, 616, 617, 618, 694, 619,
	695, 0, 620, 621, 622, 623, 0, 625, 626, 0,
	0, 627, 628, 629, 631, 632, 630, 633, 0, 634,
	0, 0, 635, 636, 637, 696, 697, 698, 0, 639,
	638, 640, 641, 699, 642, 643, 275, 0, 0, 0,
	644, 645, 700, 646, 647, 648, 0, 0, 0, 0,
	0, 0, 0, 281, 283, 282, 284, 285, 286, 287,
	0, 288, 289, 0, 0, 0, 0, 0, 649, 0,
	0, 0, 0, 290, 291, 0, 292, 293, 294, 295,
	296, 297, 650, 651, 0, 298, 652, 299, 653, 0,
	654, 300, 301, 302, 303, 304, 305, 0, 0, 0,
	306, 655, 656, 657, 0, 307, 308, 658, 0, 0,
	0, 309, 310, 311, 312, 313, 314, 315, 0, 0,
	317, 318, 319, 316, 320, 0, 321, 0, 322, 323,
	324, 325, 326, 327, 0, 328, 329, 330, 0, 331,
	332, 333, 0, 0, 0, 0, 0, 0, 0, 334,
	335, 336, 337, 338, 0, 339, 341, 659, 660, 0,
	344, 340, 342, 0, 345, 343, 346, 0, 347, 348,
	349, 0, 0, 350, 351, 352, 0, 353, 354, 355,
	0, 356, 357, 358, 0, 359, 360, 661, 361, 362,
	363, 365, 367, 364, 366, 368, 369, 370, 371, 662,
	663, 372, 0, 278, 0, 0, 0, 0, 0, 373,
	374, 375, 664, 0, 0, 0, 376, 0, 377, 378,
	379, 0, 0, 0, 380, 381, 382, 665, 666, 383,
	384, 385, 386, 387, 388, 389, 390, 391, 0, 392,
	667, 0, 668, 393, 0, 394, 395, 396, 397, 398,
	669, 670, 671, 484, 0, 399, 400, 0, 401, 402,
	403, 404, 405, 0, 0, 0, 279, 406, 407, 408,
	0, 0, 409, 672, 673, 0, 674, 0, 410, 411,
	0, 675, 0, 412, 413, 414, 0, 415, 0, 0,
	0, 416, 417, 418, 419, 420, 421, 0, 422, 424,
	423, 0, 425, 676, 0, 426, 427, 0, 0, 428,
	429, 430, 431, 432, 433, 436, 0, 0, 434, 435,
	437, 438, 0, 439, 440, 442, 445, 441, 443, 444,
	446, 459, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 458, 461, 0, 460, 0, 462, 463,
	464, 465, 472, 474, 475, 470, 471, 473, 476, 477,
	479, 467, 468, 469, 3580, 478, 466, 0, 280, 0,
	480, 481, 482, 0, 677, 483, 678, 485, 486, 0,
	0, 487, 0, 0, 0, 489, 490, 491, 0, 0,
	492, 493, 679, 0, 494, 0, 680, 495, 496, 488,
	497, 498, 499, 500, 501, 502, 503, 504, 505, 0,
	506, 507, 681, 508, 509, 510, 682, 511, 512, 513,
	683, 514, 684, 515, 516, 0, 517, 518, 0, 519,
	520, 521, 522, 523, 524, 525, 685, 526, 527, 529,
	528, 530, 0, 531, 0, 532, 533, 534, 0, 0,
	0, 0, 0, 535, 537, 0, 538, 539, 540, 541,
	536, 542, 543, 544, 545, 546, 0, 547, 548, 549,
	0, 550, 551, 552, 553, 554, 686, 555, 0, 556,
	557, 563, 564, 565, 558, 559, 566, 567, 568, 569,
	570, 0, 572, 573, 571, 574, 575, 576, 0, 577,
	578, 560, 561, 579, 580, 0, 581, 582, 583, 584,
	585, 586, 587, 687, 0, 588, 0, 589, 590, 591,
	592, 594, 562, 595, 600, 601, 688, 596, 597, 598,
	599, 689, 603, 604, 0, 605, 606, 0, 602, 593,
	0, 607, 608, 609, 610, 611, 612, 613, 614, 0,
	615, 690, 691, 692, 693, 0, 624, 0, 616, 617,
	618, 694, 619, 695, 0, 620, 621, 622, 623, 0,
	625, 626, 0, 0, 627, 628, 629, 631, 632, 630,
	633, 0, 634, 0, 0, 635, 636, 637, 696, 697,
	698, 0, 639, 638, 640, 641, 699, 642, 643, 3122,
	0, 275, 0, 644, 645, 700, 646, 647, 648, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 281, 283,
	282, 284, 285, 286, 287, 0, 288, 289, 0, 0,
	0, 0, 0, 649, 0, 0, 0, 0, 290, 291,
	0, 292, 293, 294, 295, 296, 297, 650, 651, 0,
	298, 652, 299, 653, 0, 654, 300, 301, 302, 303,
	304, 305, 0, 0, 0, 306, 655, 656, 657, 0,
	307, 308, 658, 0, 0, 0, 309, 310, 311, 312,
	313, 314, 315, 0, 0, 317, 318, 319, 316, 320,
	0, 321, 0, 322, 323, 324, 325, 326, 327, 0,
	328, 329, 330, 0, 331, 332, 333, 0, 0, 0,
	0, 0, 0, 0, 334, 335, 336, 337, 338, 0,
	339, 341, 659, 660, 0, 344, 340, 342, 0, 345,
	343, 346, 0, 347, 348, 349, 0, 0, 350, 351,
	352, 0, 353, 354, 355, 0, 356, 357, 358, 0,
	359, 360, 661, 361, 362, 363, 365, 367, 364, 366,
	368, 369, 370, 371, 662, 663, 372, 0, 278, 0,
	0, 0, 0, 0, 373, 374, 375, 664, 0, 0,
	0, 376, 0, 377, 378, 379, 0, 0, 0, 380,
	381, 382, 665, 666, 383, 384, 385, 386, 387, 388,
	389, 390, 391, 0, 392, 667, 0, 668, 393, 0,
	394, 395, 396, 397, 398, 3121, 670, 671, 484, 0,
	399, 400, 0, 401, 402, 403, 404, 405, 0, 0,
	0, 279, 406, 407, 408, 0, 0, 409, 672, 673,
	0, 674, 0, 410, 411, 0, 675, 0, 412, 413,
	414, 0, 415, 0, 0, 0, 416, 417, 418, 419,
	420, 421, 0, 422, 424, 423, 0, 425, 676, 0,
	426, 427, 0, 0, 428, 429, 430, 431, 432, 433,
	436, 0, 0, 434, 435, 437, 438, 0, 439, 440,
	442, 445, 441, 443, 444, 446, 459, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 458, 461,
	0, 460, 0, 462, 463, 464, 465, 472, 474, 475,
	470, 471, 473, 476, 477, 479, 467, 468, 469, 0,
	478, 466, 0, 280, 0, 480, 481, 482, 0, 677,
	483, 678, 485, 486, 0, 0, 487, 0, 0, 0,
	489, 490, 491, 0, 0, 492, 493, 679, 0, 494,
	0, 680, 495, 496, 488, 497, 498, 499, 500, 501,
	502, 503, 504, 505, 0, 506, 507, 681, 508, 509,
	510, 682, 511, 512, 513, 683, 514, 684, 515, 516,
	0, 517, 518, 0, 519, 520, 521, 522, 523, 524,
	525, 685, 526, 527, 529, 528, 530, 0, 531, 0,
	532, 533, 534, 0, 0, 0, 0, 0, 535, 537,
	0, 538, 539, 540, 541, 536, 542, 543, 544, 545,
	546, 0, 547, 548, 549, 0, 550, 551, 552, 553,
	554, 686, 555, 0, 556, 557, 563, 564, 565, 558,
	559, 566, 567, 568, 569, 570, 0, 572, 573, 571,
	574, 575, 576, 0, 577, 578, 560, 561, 579, 580,
	0, 581, 582, 583, 584, 585, 586, 587, 687, 0,
	588, 0, 589, 590, 591, 592, 594, 562, 595, 600,
	601, 688, 596, 597, 598, 599, 689, 603, 604, 0,
	605, 606, 0, 602, 593, 0, 607, 608, 609, 610,
	611, 612, 613, 614, 0, 615, 690, 691, 692, 693,
	0, 624, 0, 616, 617, 618, 694, 619, 695, 0,
	620, 621, 622, 623, 0, 625, 626, 0, 0, 627,
	628, 629, 631, 632, 630, 633, 0, 634, 0, 0,
	635, 636, 637, 696, 697, 698, 0, 639, 638, 640,
	641, 699, 642, 643, 275, 0, 0, 0, 644, 645,
	700, 646, 647, 648, 0, 0, 0, 0, 0, 0,
	0, 281, 283, 282, 284, 285, 286, 287, 0, 288,
	289, 0, 0, 0, 0, 0, 649, 0, 0, 0,
	0, 290, 291, 0, 292, 293, 294, 295, 296, 297,
	650, 651, 0, 298, 652, 299, 653, 0, 654, 300,
	301, 302, 303, 304, 305, 0, 0, 0, 306, 655,
	656, 657, 0, 307, 308, 658, 0, 0, 0, 309,
	310, 311, 312, 313, 314, 315, 0, 0, 317, 318,
	319, 316, 320, 0, 321, 0, 322, 323, 324, 325,
	326, 327, 0, 328, 329, 330, 0, 331, 332, 333,
	0, 0, 0, 0, 0, 0, 0, 334, 335, 336,
	337, 338, 0, 339, 341, 659, 660, 0, 344, 340,
	342, 0, 345, 343, 346, 0, 347, 348, 349, 0,
	0, 350, 351, 352, 0, 353, 354, 355, 0, 356,
	357, 358, 0, 359, 360, 661, 361, 362, 363, 365,
	367, 364, 366, 368, 369, 370, 371, 662, 663, 372,
	0, 278, 0, 0, 0, 0, 0, 373, 374, 375,
	664, 0, 0, 0, 376, 0, 377, 378, 379, 0,
	0, 0, 380, 381, 382, 665, 666, 383, 384, 385,
	386, 387, 388, 389, 390, 391, 0, 392, 667, 0,
	668, 393, 0, 394, 395, 396, 397, 398, 669, 670,
	671, 484, 0, 399, 400, 0, 401, 402, 403, 404,
	405, 0, 0, 0, 279, 406, 407, 408, 0, 0,
	409, 672, 673, 0, 674, 0, 410, 411, 0, 675,
	0, 412, 413, 414, 0, 415, 0, 0, 0, 416,
	417, 418, 419, 420, 421, 0, 422, 424, 423, 0,
	425, 676, 0, 426, 427, 0, 0, 428, 429, 430,
	431, 432, 433, 436, 0, 0, 434, 435, 437, 438,
	0, 439, 440, 442, 445, 441, 443, 444, 446, 459,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 458, 461, 0, 460, 0, 462, 463, 464, 465,
	472, 474, 475, 470, 471, 473, 476, 477, 479, 467,
	468, 469, 0, 478, 466, 0, 280, 0, 480, 481,
	482, 0, 677, 483, 678, 485, 486, 0, 0, 487,
	0, 0, 0, 489, 490, 491, 0, 0, 492, 493,
	679, 0, 494, 0, 680, 495, 496, 488, 497, 498,
	499, 500, 501, 502, 503, 504, 505, 0, 506, 507,
	681, 508, 509, 510, 682, 511, 512, 513, 683, 514,
	684, 515, 516, 0, 517, 518, 0, 519, 520, 521,
	522, 523, 524, 525, 685, 526, 527, 529, 528, 530,
	0, 531, 0, 532, 533, 534, 0, 0, 0, 0,
	0, 535, 537, 0, 538, 539, 540, 541, 536, 542,
	543, 544, 545, 546, 0, 547, 548, 549, 0, 550,
	551, 552, 553, 554, 686, 555, 0, 556, 557, 563,
	564, 565, 558, 559, 566, 567, 568, 569, 570, 0,
	572, 573, 571, 574, 575, 576, 0, 577, 578, 560,
	561, 579, 580, 0, 581, 582, 583, 584, 585, 586,
	587, 687, 0, 588, 0, 589, 590, 591, 592, 594,
	562, 595, 600, 601, 688, 596, 597, 598, 599, 689,
	603, 604, 0, 605, 606, 0, 602, 593, 2326, 607,
	608, 609, 610, 611, 612, 613, 614, 0, 615, 690,
	691, 692, 693, 0, 624, 0, 616, 617, 618, 694,
	619, 695, 0, 620, 621, 622, 623, 0, 625, 626,
	0, 0, 627, 628, 629, 631, 632, 630, 633, 0,
	634, 0, 0, 635, 636, 637, 696, 697, 698, 0,
	639, 638, 640, 641, 699, 642, 643, 2388, 0, 275,
	0, 644, 645, 700, 646, 647, 648, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 281, 283, 282, 284,
	285, 286, 287, 0, 288, 289, 0, 0, 0, 0,
	0, 649, 0, 0, 0, 0, 290, 291, 0, 292,
	293, 294, 295, 296, 297, 650, 651, 0, 298, 652,
	299, 653, 0, 654, 300, 301, 302, 303, 304, 305,
	0, 0, 0, 306, 655, 656, 657, 0, 307, 308,
	658, 0, 0, 0, 309, 310, 311, 312, 313, 314,
	315, 0, 0, 317, 318, 319, 316, 320, 0, 321,
	0, 322, 323, 324, 325, 326, 327, 0, 328, 329,
	330, 0, 331, 332, 333, 0, 0, 0, 0, 0,
	0, 0, 334, 335, 336, 337, 338, 0, 339, 341,
	659, 660, 0, 344, 340, 342, 0, 345, 343, 346,
	0, 347, 348, 349, 0, 0, 350, 351, 352, 0,
	353, 354, 355, 0, 356, 357, 358, 0, 359, 360,
	661, 361, 362, 363, 365, 367, 364, 366, 368, 369,
	370, 371, 662, 663, 372, 0, 278, 0, 0, 0,
	0, 0, 373, 374, 375, 664, 0, 0, 0, 376,
	0, 377, 378, 379, 0, 0, 0, 380, 381, 382,
	665, 666, 383, 384, 385, 386, 387, 388, 389, 390,
	391, 0, 392, 667, 0, 668, 393, 0, 394, 395,
	396, 397, 398, 669, 670, 671, 484, 0, 399, 400,
	0, 401, 402, 403, 404, 405, 0, 0, 0, 279,
	406, 407, 408, 0, 0, 409, 672, 673, 0, 674,
	0, 410, 411, 0, 675, 0, 412, 413, 414, 0,
	415, 0, 0, 0, 416, 417, 418, 419, 420, 421,
	0, 422, 424, 423, 0, 425, 676, 0, 426, 427,
	0, 0, 428, 429, 430, 431, 432, 433, 436, 0,
	0, 434, 435, 437, 438, 0, 439, 440, 442, 445,
	441, 443, 444, 446, 459, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 458, 461, 0, 460,
	0, 462, 463, 464, 465, 472, 474, 475, 470, 471,
	473, 476, 477, 479, 467, 468, 469, 0, 478, 466,
	0, 280, 0, 480, 481, 482, 0, 677, 483, 678,
	485, 486, 0, 0, 487, 0, 0, 0, 489, 490,
	491, 0, 0, 492, 493, 679, 0, 494, 0, 680,
	495, 496, 488, 497, 498, 499, 500, 501, 502, 503,
	504, 505, 0, 506, 507, 681, 508, 509, 510, 682,
	511, 512, 513, 683, 514, 684, 515, 516, 0, 517,
	518, 0, 519, 520, 521, 522, 523, 524, 525, 685,
	526, 527, 529, 528, 530, 0, 531, 0, 532, 533,
	534, 0, 0, 0, 0, 0, 535, 537, 0, 538,
	539, 540, 541, 536, 542, 543, 544, 545, 546, 0,
	547, 548, 549, 0, 550, 551, 552, 553, 554, 686,
	555, 0, 556, 557, 563, 564, 565, 558, 559, 566,
	567, 568, 569, 570, 0, 572, 573, 571, 574, 575,
	576, 0, 577, 578, 560, 561, 579, 580, 0, 581,
	582, 583, 584, 585, 586, 587, 687, 0, 588, 0,
	589, 590, 591, 592, 594, 562, 595, 600, 601, 688,
	596, 597, 598, 599, 689, 603, 604, 0, 605, 606,
	0, 602, 593, 0, 607, 608, 609, 610, 611, 612,
	613, 614, 0, 615, 690, 691, 692, 693, 0, 624,
	0, 616, 617, 618, 694, 619, 695, 0, 620, 621,
	622, 623, 0, 625, 626, 0, 0, 627, 628, 629,
	631, 632, 630, 633, 0, 634, 0, 0, 635, 636,
	637, 696, 697, 698, 0, 639, 638, 640, 641, 699,
	642, 643, 2333, 0, 275, 0, 644, 645, 700, 646,
	647, 648, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 281, 283, 282, 284, 285, 286, 287, 0, 288,
	289, 0, 0, 0, 0, 0, 649, 0, 0, 0,
	0, 290, 291, 0, 292, 293, 294, 295, 296, 297,
	650, 651, 0, 298, 652, 299, 653, 0, 654, 300,
	301, 302, 303, 304, 305, 0, 0, 0, 306, 655,
	656, 657, 0, 307, 308, 658, 0, 0, 0, 309,
	310, 311, 312, 313, 314, 315, 0, 0, 317, 318,
	319, 316, 320, 0, 321, 0, 322, 323, 324, 325,
	326, 327, 0, 328, 329, 330, 0, 331, 332, 333,
	0, 0, 0, 0, 0, 0, 0, 334, 335, 336,
	337, 338, 0, 339, 341, 659, 660, 0, 344, 340,
	342, 0, 345, 343, 346, 0, 347, 348, 349, 0,
	0, 350, 351, 352, 0, 353, 354, 355, 0, 356,
	357, 358, 0, 359, 360, 661, 361, 362, 363, 365,
	367, 364, 366, 368, 369, 370, 371, 662, 663, 372,
	0, 278, 0, 0, 0, 0, 0, 373, 374, 375,
	664, 0, 0, 0, 376, 0, 377, 378, 379, 0,
	0, 0, 380, 381, 382, 665, 666, 383, 384, 385,
	386, 387, 388, 389, 390, 391, 0, 392, 667, 0,
	668, 393, 0, 394, 395, 396, 397, 398, 2332, 670,
	671, 484, 0, 399, 400, 0, 401, 402, 403, 404,
	405, 0, 0, 0, 279, 406, 407, 408, 0, 0,
	409, 672, 673, 0, 674, 0, 410, 411, 0, 675,
	0, 412, 413, 414, 0, 415, 0, 0, 0, 416,
	417, 418, 419, 420, 421, 0, 422, 424, 423, 0,
	425, 676, 0, 426, 427, 0, 0, 428, 429, 430,
	431, 432, 433, 436, 0, 0, 434, 435, 437, 438,
	0, 439, 440, 442, 445, 441, 443, 444, 446, 459,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 458, 461, 0, 460, 0, 462, 463, 464, 465,
	472, 474, 475, 470, 471, 473, 476, 477, 479, 467,
	468, 469, 0, 478, 466, 0, 280, 0, 480, 481,
	482, 0, 677, 483, 678, 485, 486, 0, 0, 487,
	0, 0, 0, 489, 490, 491, 0, 0, 492, 493,
	679, 0, 494, 0, 680, 495, 496, 488, 497, 498,
	499, 500, 501, 502, 503, 504, 505, 0, 506, 507,
	681, 508, 509, 510, 682, 511, 512, 513, 683, 514,
	684, 515, 516, 0, 517, 518, 0, 519, 520, 521,
	522, 523, 524, 525, 685, 526, 527, 529, 528, 530,
	0, 531, 0, 532, 533, 534, 0, 0, 0, 0,
	0, 535, 537, 0, 538, 539, 540, 541, 536, 542,
	543, 544, 545, 546, 0, 547, 548, 549, 0, 550,
	551, 552, 553, 554, 686, 555, 0, 556, 557, 563,
	564, 565, 558, 559, 566, 567, 568, 569, 570, 0,
	572, 573, 571, 574, 575, 576, 0, 577, 578, 560,
	561, 579, 580, 0, 581, 582, 583, 584, 585, 586,
	587, 687, 0, 588, 0, 589, 590, 591, 592, 594,
	562, 595, 600, 601, 688, 596, 597, 598, 599, 689,
	603, 604, 0, 605, 606, 0, 602, 593, 0, 607,
	608, 609, 610, 611, 612, 613, 614, 0, 615, 690,
	691, 692, 693, 0, 624, 0, 616, 617, 618, 694,
	619, 695, 0, 620, 621, 622, 623, 0, 625, 626,
	0, 0, 627, 628, 629, 631, 632, 630, 633, 0,
	634, 0, 0, 635, 636, 637, 696, 697, 698, 0,
	639, 638, 640, 641, 699, 642, 643, 2319, 0, 275,
	0, 644, 645, 700, 646, 647, 648, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 281, 283, 282, 284,
	285, 286, 287, 0, 288, 289, 0, 0, 0, 0,
	0, 649, 0, 0, 0, 0, 290, 291, 0, 292,
	293, 294, 295, 296, 297, 650, 651, 0, 298, 652,
	299, 653, 0, 654, 300, 301, 302, 303, 304, 305,
	0, 0, 0, 306, 655, 656, 657, 0, 307, 308,
	658, 0, 0, 0, 309, 310, 311, 312, 313, 314,
	315, 0, 0, 317, 318, 319, 316, 320, 0, 321,
	0, 322, 323, 324, 325, 326, 327, 0, 328, 329,
	330, 0, 331, 332, 333, 0, 0, 0, 0, 0,
	0, 0, 334, 335, 336, 337, 338, 0, 339, 341,
	659, 660, 0, 344, 340, 342, 0, 345, 343, 346,
	0, 347, 348, 349, 0, 0, 350, 351, 352, 0,
	353, 354, 355, 0, 356, 357, 358, 0, 359, 360,
	661, 361, 362, 363, 365, 367, 364, 366, 368, 369,
	370, 371, 662, 663, 372, 0, 278, 0, 0, 0,
	0, 0, 373, 374, 375, 664, 0, 0, 0, 376,
	0, 377, 378, 379, 0, 0, 0, 380, 381, 382,
	665, 666, 383, 384, 385, 386, 387, 388, 389, 390,
	391, 0, 392, 667, 0, 668, 393, 0, 394, 395,
	396, 397, 398, 2321, 670, 671, 484, 0, 399, 400,
	0, 401, 402, 403, 404, 405, 0, 0, 0, 279,
	406, 407, 408, 0, 0, 409, 672, 673, 0, 674,
	0, 410, 411, 0, 675, 0, 412, 413, 414, 0,
	415, 0, 0, 0, 416, 417, 418, 419, 420, 421,
	0, 422, 424, 423, 0, 425, 676, 0, 426, 427,
	0, 0, 428, 429, 430, 431, 432, 433, 436, 0,
	0, 434, 435, 437, 438, 0, 439, 440, 442, 445,
	441, 443, 444, 446, 459, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 458, 461, 0, 460,
	0, 462, 463, 464, 465, 472, 474, 475, 470, 471,
	473, 476, 477, 479, 467, 468, 469, 0, 478, 466,
	0, 280, 0, 480, 481, 482, 0, 677, 483, 678,
	485, 486, 0, 0, 487, 0, 0, 0, 489, 490,
	491, 0, 0, 492, 493, 679, 0, 494, 0, 680,
	495, 496, 488, 497, 498, 499, 500, 501, 502, 503,
	504, 505, 0, 506, 507, 681, 508, 509, 510, 682,
	511, 512, 513, 683, 514, 684, 515, 516, 0, 517,
	518, 0, 519, 520, 521, 522, 523, 524, 525, 685,
	526, 527, 529, 528, 530, 0, 531, 0, 532, 533,
	534, 0, 0, 0, 0, 0, 535, 537, 0, 538,
	539, 540, 541, 536, 542, 543, 544, 545, 546, 0,
	547, 548, 549, 0, 550, 551, 552, 553, 554, 686,
	555, 0, 556, 557, 563, 564, 565, 558, 559, 566,
	567, 568, 569, 570, 0, 572, 573, 571, 574, 575,
	576, 0, 577, 578, 560, 561, 579, 580, 0, 581,
	582, 583, 584, 585, 586, 587, 687, 0, 588, 0,
	589, 590, 591, 592, 594, 562, 595, 600, 601, 688,
	596, 597, 598, 599, 689, 603, 604, 0, 605, 606,
	0, 602, 593, 0, 607, 608, 609, 610, 611, 612,
	613, 614, 0, 615, 690, 691, 692, 693, 0, 624,
	0, 616, 617, 618, 694, 619, 695, 0, 620, 621,
	622, 623, 0, 625, 626, 0, 0, 627, 628, 629,
	631, 632, 630, 633, 0, 634, 0, 0, 635, 636,
	637, 696, 697, 698, 0, 639, 638, 640, 641, 699,
	642, 643, 275, 0, 0, 0, 644, 645, 700, 646,
	647, 648, 0, 0, 0, 0, 0, 0, 0, 281,
	283, 282, 284, 285, 286, 287, 0, 288, 289, 0,
	0, 0, 0, 0, 649, 0, 0, 0, 0, 290,
	291, 0, 292, 293, 294, 295, 296, 297, 650, 651,
	0, 298, 652, 299, 653, 0, 654, 300, 301, 302,
	303, 304, 305, 0, 0, 0, 306, 655, 656, 657,
	0, 307, 308, 658, 0, 0, 0, 309, 310, 311,
	312, 313, 314, 315, 0, 0, 317, 318, 319, 316,
	320, 0, 321, 0, 322, 323, 324, 325, 326, 327,
	0, 328, 329, 330, 0, 331, 332, 333, 0, 0,
	0, 0, 0, 0, 0, 334, 335, 336, 337, 338,
	0, 339, 341, 659, 660, 0, 344, 340, 342, 0,
	345, 343, 346, 0, 347, 348, 349, 0, 0, 350,
	351, 352, 0, 353, 354, 355, 0, 356, 357, 358,
	0, 359, 360, 661, 361, 362, 363, 365, 367, 364,
	366, 368, 369, 370, 371, 662, 663, 372, 0, 278,
	0, 0, 0, 0, 0, 373, 374, 375, 664, 0,
	0, 0, 376, 0, 377, 378, 379, 0, 0, 0,
	380, 381, 382, 665, 666, 383, 384, 385, 386, 387,
	388, 389, 390, 391, 0, 392, 667, 0, 668, 393,
	0, 394, 395, 396, 397, 398, 2283, 670, 671, 484,
	0, 399, 400, 0, 401, 402, 403, 404, 405, 0,
	0, 0, 279, 406, 407, 408, 0, 0, 409, 672,
	673, 0, 674, 0, 410, 411, 0, 675, 0, 412,
	413, 414, 0, 415, 0, 0, 0, 416, 417, 418,
	419, 420, 421, 0, 422, 424, 423, 0, 425, 676,
	0, 426, 427, 0, 0, 428, 429, 430, 431, 432,
	433, 436, 0, 0, 434, 435, 437, 438, 0, 439,
	440, 442, 445, 441, 443, 444, 446, 459, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 458,
	461, 0, 460, 0, 462, 463, 464, 465, 472, 474,
	475, 470, 471, 473, 476, 477, 479, 467, 468, 469,
	0, 478, 466, 0, 280, 0, 480, 481, 482, 0,
	677, 483, 678, 485, 486, 0, 0, 487, 0, 0,
	1270, 489, 490, 491, 0, 0, 492, 493, 679, 0,
	494, 0, 680, 495, 496, 488, 497, 498, 499, 500,
	501, 502, 503, 504, 505, 0, 506, 507, 681, 508,
	509, 510, 682, 511, 512, 513, 683, 514, 684, 515,
	516, 0, 517, 518, 0, 519, 520, 521, 522, 523,
	524, 525, 685, 526, 527, 529, 528, 530, 0, 531,
	0, 532, 533, 534, 0, 0, 0, 0, 0, 535,
	537, 0, 538, 539, 540, 541, 536, 542, 543, 544,
	545, 546, 0, 547, 548, 549, 0, 550, 551, 552,
	553, 554, 686, 555, 0, 556, 557, 563, 564, 565,
	558, 559, 566, 567, 568, 569, 570, 0, 572, 573,
	571, 574, 575, 576, 0, 577, 578, 560, 561, 579,
	580, 0, 581, 582, 583, 584, 585, 586, 587, 687,
	0, 588, 0, 589, 590, 591, 592, 594, 562, 595,
	600, 601, 688, 596, 597, 598, 599, 689, 603, 604,
	0, 605, 606, 0, 602, 593, 0, 607, 608, 609,
	610, 611, 612, 613, 614, 0, 615, 690, 691, 692,
	693, 0, 624, 0, 616, 617, 618, 694, 619, 695,
	0, 620, 621, 622, 623, 0, 625, 626, 0, 0,
	627, 628, 629, 631, 632, 630, 633, 0, 634, 0,
	0, 635, 636, 637, 696, 697, 698, 0, 639, 638,
	640, 641, 699, 642, 643, 1628, 0, 275, 0, 644,
	645, 700, 646, 647, 648, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 281, 283, 282, 284, 285, 286,
	287, 0, 288, 289, 0, 0, 0, 0, 0, 649,
	0, 0, 0, 0, 290, 291, 0, 292, 293, 294,
	295, 296, 297, 650, 651, 0, 298, 652, 299, 653,
	0, 654, 300, 301, 302, 303, 304, 305, 0, 0,
	0, 306, 655, 656, 657, 0, 307, 308, 658, 0,
	0, 0, 309, 310, 311, 312, 313, 314, 315, 0,
	0, 317, 318, 319, 316, 320, 0, 321, 0, 322,
	323, 324, 325, 326, 327, 0, 328, 329, 330, 0,
	331, 332, 333, 0, 0, 0, 0, 0, 0, 0,
	334, 335, 336, 337, 338, 0, 339, 341, 659, 660,
	0, 344, 340, 342, 0, 345, 343, 346, 0, 347,
	348, 349, 0, 0, 350, 351, 352, 0, 353, 354,
	355, 0, 356, 357, 358, 0, 359, 360, 661, 361,
	362, 363, 365, 367, 364, 366, 368, 369, 370, 371,
	662, 663, 372, 0, 278, 0, 0, 0, 0, 0,
	373, 374, 375, 664, 0, 0, 0, 376, 0, 377,
	378, 379, 0, 0, 0, 380, 381, 382, 665, 666,
	383, 384, 385, 386, 387, 388, 389, 390, 391, 0,
	392, 667, 0, 668, 393, 0, 394, 395, 396, 397,
	398, 1627, 670, 671, 484, 0, 399, 400, 0, 401,
	402, 403, 404, 405, 0, 0, 0, 279, 406, 407,
	408, 0, 0, 409, 672, 673, 0, 674, 0, 410,
	411, 0, 675, 0, 412, 413, 414, 0, 415, 0,
	0, 0, 416, 417, 418, 419, 420, 421, 0, 422,
	424, 423, 0, 425, 676, 0, 426, 427, 0, 0,
	428, 429, 430, 431, 432, 433, 436, 0, 0, 434,
	435, 437, 438, 0, 439, 440, 442, 445, 441, 443,
	444, 446, 459, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 458, 461, 0, 460, 0, 462,
	463, 464, 465, 472, 474, 475, 470, 471, 473, 476,
	477, 479, 467, 468, 469, 0, 478, 466, 0, 280,
	0, 480, 481, 482, 0, 677, 483, 678, 485, 486,
	0, 0, 487, 0, 0, 0, 489, 490, 491, 0,
	0, 492, 493, 679, 0, 494, 0, 680, 495, 496,
	488, 497, 498, 499, 500, 501, 502, 503, 504, 505,
	0, 506, 507, 681, 508, 509, 510, 682, 511, 512,
	513, 683, 514, 684, 515, 516, 0, 517, 518, 0,
	519, 520, 521, 522, 523, 524, 525, 685, 526, 527,
	529, 528, 530, 0, 531, 0, 532, 533, 534, 0,
	0, 0, 0, 0, 535, 537, 0, 538, 539, 540,
	541, 536, 542, 543, 544, 545, 546, 0, 547, 548,
	549, 0, 550, 551, 552, 553, 554, 686, 555, 0,
	556, 557, 563, 564, 565, 558, 559, 566, 567, 568,
	569, 570, 0, 572, 573, 571, 574, 575, 576, 0,
	577, 578, 560, 561, 579, 580, 0, 581, 582, 583,
	584, 585, 586, 587, 687, 0, 588, 0, 589, 590,
	591, 592, 594, 562, 595, 600, 601, 688, 596, 597,
	598, 599, 689, 603, 604, 0, 605, 606, 0, 602,
	593, 0, 607, 608, 609, 610, 611, 612, 613, 614,
	0, 615, 690, 691, 692, 693, 0, 624, 0, 616,
	617, 618, 694, 619, 695, 0, 620, 621, 622, 623,
	0, 625, 626, 0, 0, 627, 628, 629, 631, 632,
	630, 633, 0, 634, 0, 0, 635, 636, 637, 696,
	697, 698, 0, 639, 638, 640, 641, 699, 642, 643,
	1528, 0, 275, 0, 644, 645, 700, 646, 647, 648,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 281,
	283, 282, 284, 285, 286, 287, 0, 288, 289, 0,
	0, 0, 0, 0, 649, 0, 0, 0, 0, 290,
	291, 0, 292, 293, 294, 295, 296, 297, 650, 651,
	0, 298, 652, 299, 653, 0, 654, 300, 301, 302,
	303, 304, 305, 0, 0, 0, 306, 655, 656, 657,
	0, 307, 308, 658, 0, 0, 0, 309, 310, 311,
	312, 313, 314, 315, 0, 0, 317, 318, 319, 316,
	320, 0, 321, 0, 322, 323, 324, 325, 326, 327,
	0, 328, 329, 330, 0, 331, 332, 333, 0, 0,
	0, 0, 0, 0, 0, 334, 335, 336, 337, 338,
	0, 339, 341, 659, 660, 0, 344, 340, 342, 0,
	345, 343, 346, 0, 347, 348, 349, 0, 0, 350,
	351, 352, 0, 353, 354, 355, 0, 356, 357, 358,
	0, 359, 360, 661, 361, 362, 363, 365, 367, 364,
	366, 368, 369, 370, 371, 662, 663, 372, 0, 278,
	0, 0, 0, 0, 0, 373, 374, 375, 664, 0,
	0, 0, 376, 0, 377, 378, 379, 0, 0, 0,
	380, 381, 382, 665, 666, 383, 384, 385, 386, 387,
	388, 389, 390, 391, 0, 392, 667, 0, 668, 393,
	0, 394, 395, 396, 397, 398, 669, 670, 671, 484,
	0, 399, 400, 0, 401, 402, 403, 404, 405, 0,
	0, 0, 279, 406, 407, 408, 0, 0, 409, 672,
	673, 0, 674, 0, 410, 411, 0, 675, 0, 412,
	413, 414, 0, 415, 0, 0, 0, 416, 417, 418,
	419, 420, 421, 0, 422, 424, 423, 0, 425, 676,
	0, 426, 427, 0, 0, 428, 429, 430, 431, 432,
	433, 436, 0, 0, 434, 435, 437, 438, 0, 439,
	440, 442, 445, 441, 443, 444, 446, 459, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 458,
	461, 0, 460, 0, 462, 463, 464, 465, 472, 474,
	475, 470, 471, 473, 476, 477, 479, 467, 468, 469,
	0, 478, 466, 0, 280, 0, 480, 481, 482, 0,
	677, 483, 678, 485, 486, 0, 0, 487, 0, 0,
	0, 489, 490, 491, 0, 0, 492, 493, 679, 0,
	494, 0, 680, 495, 496, 488, 497, 498, 499, 500,
	501, 502, 503, 504, 505, 0, 506, 507, 681, 508,
	509, 510, 682, 511, 512, 513, 683, 514, 684, 515,
	516, 0, 517, 518, 0, 519, 520, 521, 522, 523,
	524, 525, 685, 526, 527, 529, 528, 530, 0, 531,
	0, 532, 533, 534, 0, 0, 0, 0, 0, 535,
	537, 0, 538, 539, 540, 541, 536, 542, 543, 544,
	545, 546, 0, 547, 548, 549, 0, 550, 551, 552,
	553, 554, 686, 555, 0, 556, 557, 563, 564, 565,
	558, 559, 566, 567, 568, 569, 570, 0, 572, 573,
	571, 574, 575, 576, 0, 577, 578, 560, 561, 579,
	580, 0, 581, 582, 583, 584, 585, 586, 587, 687,
	0, 588, 0, 589, 590, 591, 592, 594, 562, 595,
	600, 601, 688, 596, 597, 598, 599, 689, 603, 604,
	0, 605, 606, 0, 602, 593, 0, 607, 608, 609,
	610, 611, 612, 613, 614, 0, 615, 690, 691, 692,
	693, 0, 624, 0, 616, 617, 618, 694, 619, 695,
	0, 620, 621, 622, 623, 0, 625, 626, 0, 0,
	627, 628, 629, 631, 632, 630, 633, 0, 634, 0,
	0, 635, 636, 637, 696, 697, 698, 0, 639, 638,
	640, 641, 699, 642, 643, 1521, 0, 275, 0, 644,
	645, 700, 646, 647, 648, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 281, 283, 282, 284, 285, 286,
	287, 0, 288, 289, 0, 0, 0, 0, 0, 649,
	0, 0, 0, 0, 290, 291, 0, 292, 293, 294,
	295, 296, 297, 650, 651, 0, 298, 652, 299, 653,
	0, 654, 300, 301, 302, 303, 304, 305, 0, 0,
	0, 306, 655, 656, 657, 0, 307, 308, 658, 0,
	0, 0, 309, 310, 311, 312, 313, 314, 315, 0,
	0, 317, 318, 319, 316, 320, 0, 321, 0, 322,
	323, 324, 325, 326, 327, 0, 328, 329, 330, 0,
	331, 332, 333, 0, 0, 0, 0, 0, 0, 0,
	334, 335, 336, 337, 338, 0, 339, 341, 659, 660,
	0, 344, 340, 342, 0, 345, 343, 346, 0, 347,
	348, 349, 0, 0, 350, 351, 352, 0, 353, 354,
	355, 0, 356, 357, 358, 0, 359, 360, 661, 361,
	362, 363, 365, 367, 364, 366, 368, 369, 370, 371,
	662, 663, 372, 0, 278, 0, 0, 0, 0, 0,
	373, 374, 375, 664, 0, 0, 0, 376, 0, 377,
	378, 379, 0, 0, 0, 380, 381, 382, 665, 666,
	383, 384, 385, 386, 387, 388, 389, 390, 391, 0,
	392, 667, 0, 668, 393, 0, 394, 395, 396, 397,
	398, 1523, 670, 671, 484, 0, 399, 400, 0, 401,
	402, 403, 404, 405, 0, 0, 0, 279, 406, 407,
	408, 0, 0, 409, 672, 673, 0, 674, 0, 410,
	411, 0, 675, 0, 412, 413, 414, 0, 415, 0,
	0, 0, 416, 417, 418, 419, 420, 421, 0, 422,
	424, 423, 0, 425, 676, 0, 426, 427, 0, 0,
	428, 429, 430, 431, 432, 433, 436, 0, 0, 434,
	435, 437, 438, 0, 439, 440, 442, 445, 441, 443,
	444, 446, 459, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 458, 461, 0, 460, 0, 462,
	463, 464, 465, 472, 474, 475, 470, 471, 473, 476,
	477, 479, 467, 468, 469, 0, 478, 466, 0, 280,
	0, 480, 481, 482, 0, 677, 483, 678, 485, 486,
	0, 0, 487, 0, 0, 0, 489, 490, 491, 0,
	0, 492, 493, 679, 0, 494, 0, 680, 495, 496,
	488, 497, 498, 499, 500, 501, 502, 503, 504, 505,
	0, 506, 507, 681, 508, 509, 510, 682, 511, 512,
	513, 683, 514, 684, 515, 516, 0, 517, 518, 0,
	519, 520, 521, 522, 523, 524, 525, 685, 526, 527,
	529, 528, 530, 0, 531, 0, 532, 533, 534, 0,
	0, 0, 0, 0, 535, 537, 0, 538, 539, 540,
	541, 536, 542, 543, 544, 545, 546, 0, 547, 548,
	549, 0, 550, 551, 552, 553, 554, 686, 555, 0,
	556, 557, 563, 564, 565, 558, 559, 566, 567, 568,
	569, 570, 0, 572, 573, 571, 574, 575, 576, 0,
	577, 578, 560, 561, 579, 580, 0, 581, 582, 583,
	584, 585, 586, 587, 687, 0, 588, 0, 589, 590,
	591, 592, 594, 562, 595, 600, 601, 688, 596, 597,
	598, 599, 689, 603, 604, 0, 605, 606, 0, 602,
	593, 0, 607, 608, 609, 610, 611, 612, 613, 614,
	0, 615, 690, 691, 692, 693, 0, 624, 0, 616,
	617, 618, 694, 619, 695, 0, 620, 621, 622, 623,
	0, 625, 626, 0, 0, 627, 628, 629, 631, 632,
	630, 633, 0, 634, 0, 0, 635, 636, 637, 696,
	697, 698, 0, 639, 638, 640, 641, 699, 642, 643,
	1347, 0, 275, 0, 644, 645, 700, 646, 647, 648,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 281,
	283, 282, 284, 285, 286, 287, 0, 288, 289, 0,
	0, 0, 0, 0, 649, 0, 0, 0, 0, 290,
	291, 0, 292, 293, 294, 295, 296, 297, 650, 651,
	0, 298, 652, 299, 653, 0, 654, 300, 301, 302,
	303, 304, 305, 0, 0, 0, 306, 655, 656, 657,
	0, 307, 308, 658, 0, 0, 0, 309, 310, 311,
	312, 313, 314, 315, 0, 0, 317, 318, 319, 316,
	320, 0, 321, 0, 322, 323, 324, 325, 326, 327,
	0, 328, 329, 330, 0, 331, 332, 333, 0, 0,
	0, 0, 0, 0, 0, 334, 335, 336, 337, 338,
	0, 339, 341, 659, 660, 0, 344, 340, 342, 0,
	345, 343, 346, 0, 347, 348, 349, 0, 0, 350,
	351, 352, 0, 353, 354, 355, 0, 356, 357, 358,
	0, 359, 360, 661, 361, 362, 363, 365, 367, 364,
	366, 368, 369, 370, 371, 662, 663, 372, 0, 278,
	0, 0, 0, 0, 0, 373, 374, 375, 664, 0,
	0, 0, 376, 0, 377, 378, 379, 0, 0, 0,
	380, 381, 382, 665, 666, 383, 384, 385, 386, 387,
	388, 389, 390, 391, 0, 392, 667, 0, 668, 393,
	0, 394, 395, 396, 397, 398, 1346, 670, 671, 484,
	0, 399, 400, 0, 401, 402, 403, 404, 405, 0,
	0, 0, 279, 406, 407, 408, 0, 0, 409, 672,
	673, 0, 674, 0, 410, 411, 0, 675, 0, 412,
	413, 414, 0, 415, 0, 0, 0, 416, 417, 418,
	419, 420, 421, 0, 422, 424, 423, 0, 425, 676,
	0, 426, 427, 0, 0, 428, 429, 430, 431, 432,
	433, 436, 0, 0, 434, 435, 437, 438, 0, 439,
	440, 442, 445, 441, 443, 444, 446, 459, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 458,
	461, 0, 460, 0, 462, 463, 464, 465, 472, 474,
	475, 470, 471, 473, 476, 477, 479, 467, 468, 469,
	0, 478, 466, 0, 280, 0, 480, 481, 482, 0,
	677, 483, 678, 485, 486, 0, 0, 487, 0, 0,
	0, 489, 490, 491, 0, 0, 492, 493, 679, 0,
	494, 0, 680, 495, 496, 488, 497, 498, 499, 500,
	501, 502, 503, 504, 505, 0, 506, 507, 681, 508,
	509, 510, 682, 511, 512, 513, 683, 514, 684, 515,
	516, 0, 517, 518, 0, 519, 520, 521, 522, 523,
	524, 525, 685, 526, 527, 529, 528, 530, 0, 531,
	0, 532, 533, 534, 0, 0, 0, 0, 0, 535,
	537, 0, 538, 539, 540, 541, 536, 542, 543, 544,
	545, 546, 0, 547, 548, 549, 0, 550, 551, 552,
	553, 554, 686, 555, 0, 556, 557, 563, 564, 565,
	558, 559, 566, 567, 568, 569, 570, 0, 572, 573,
	571, 574, 575, 576, 0, 577, 578, 560, 561, 579,
	580, 0, 581, 582, 583, 584, 585, 586, 587, 687,
	0, 588, 0, 589, 590, 591, 592, 594, 562, 595,
	600, 601, 688, 596, 597, 598, 599, 689, 603, 604,
	0, 605, 606, 0, 602, 593, 0, 607, 608, 609,
	610, 611, 612, 613, 614, 0, 615, 690, 691, 692,
	693, 0, 624, 0, 616, 617, 618, 694, 619, 695,
	0, 620, 621, 622, 623, 0, 625, 626, 0, 0,
	627, 628, 629, 631, 632, 630, 633, 0, 634, 0,
	0, 635, 636, 637, 696, 697, 698, 0, 639, 638,
	640, 641, 699, 642, 643, 1337, 0, 275, 0, 644,
	645, 700, 646, 647, 648, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 281, 283, 282, 284, 285, 286,
	287, 0, 288, 289, 0, 0, 0, 0, 0, 649,
	0, 0, 0, 0, 290, 291, 0, 292, 293, 294,
	295, 296, 297, 650, 651, 0, 298, 652, 299, 653,
	0, 654, 300, 301, 302, 303, 304, 305, 0, 0,
	0, 306, 655, 656, 657, 0, 307, 308, 658, 0,
	0, 0, 309, 310, 311, 312, 313, 314, 315, 0,
	0, 317, 318, 319, 316, 320, 0, 321, 0, 322,
	323, 324, 325, 326, 327, 0, 328, 329, 330, 0,
	331, 332, 333, 0, 0, 0, 0, 0, 0, 0,
	334, 335, 336, 337, 338, 0, 339, 341, 659, 660,
	0, 344, 340, 342, 0, 345, 343, 346, 0, 347,
	348, 349, 0, 0, 350, 351, 352, 0, 353, 354,
	355, 0, 356, 357, 358, 0, 359, 360, 661, 361,
	362, 363, 365, 367, 364, 366, 368, 369, 370, 371,
	662, 663, 372, 0, 278, 0, 0, 0, 0, 0,
	373, 374, 375, 664, 0, 0, 0, 376, 0, 377,
	378, 379, 0, 0, 0, 380, 381, 382, 665, 666,
	383, 384, 385, 386, 387, 388, 389, 390, 391, 0,
	392, 667, 0, 668, 393, 0, 394, 395, 396, 397,
	398, 1336, 670, 671, 484, 0, 399, 400, 0, 401,
	402, 403, 404, 405, 0, 0, 0, 279, 406, 407,
	408, 0, 0, 409, 672, 673, 0, 674, 0, 410,
	411, 0, 675, 0, 412, 413, 414, 0, 415, 0,
	0, 0, 416, 417, 418, 419, 420, 421, 0, 422,
	424, 423, 0, 425, 676, 0, 426, 427, 0, 0,
	428, 429, 430, 431, 432, 433, 436, 0, 0, 434,
	435, 437, 438, 0, 439, 440, 442, 445, 441, 443,
	444, 446, 459, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 458, 461, 0, 460, 0, 462,
	463, 464, 465, 472, 474, 475, 470, 471, 473, 476,
	477, 479, 467, 468, 469, 0, 478, 466, 0, 280,
	0, 480, 481, 482, 0, 677, 483, 678, 485, 486,
	0, 0, 487, 0, 0, 0, 489, 490, 491, 0,
	0, 492, 493, 679, 0, 494, 0, 680, 495, 496,
	488, 497, 498, 499, 500, 501, 502, 503, 504, 505,
	0, 506, 507, 681, 508, 509, 510, 682, 511, 512,
	513, 683, 514, 684, 515, 516, 0, 517, 518, 0,
	519, 520, 521, 522, 523, 524, 525, 685, 526, 527,
	529, 528, 530, 0, 531, 0, 532, 533, 534, 0,
	0, 0, 0, 0, 535, 537, 0, 538, 539, 540,
	541, 536, 542, 543, 544, 545, 546, 0, 547, 548,
	549, 0, 550, 551, 552, 553, 554, 686, 555, 0,
	556, 557, 563, 564, 565, 558, 559, 566, 567, 568,
	569, 570, 0, 572, 573, 571, 574, 575, 576, 0,
	577, 578, 560, 561, 579, 580, 0, 581, 582, 583,
	584, 585, 586, 587, 687, 0, 588, 0, 589, 590,
	591, 592, 594, 562, 595, 600, 601, 688, 596, 597,
	598, 599, 689, 603, 604, 0, 605, 606, 0, 602,
	593, 0, 607, 608, 609, 610, 611, 612, 613, 614,
	0, 615, 690, 691, 692, 693, 0, 624, 0, 616,
	617, 618, 694, 619, 695, 0, 620, 621, 622, 623,
	0, 625, 626, 0, 0, 627, 628, 629, 631, 632,
	630, 633, 0, 634, 0, 0, 635, 636, 637, 696,
	697, 698, 0, 639, 638, 640, 641, 699, 642, 643,
	1334, 0, 275, 0, 644, 645, 700, 646, 647, 648,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 281,
	283, 282, 284, 285, 286, 287, 0, 288, 289, 0,
	0, 0, 0, 0, 649, 0, 0, 0, 0, 290,
	291, 0, 292, 293, 294, 295, 296, 297, 650, 651,
	0, 298, 652, 299, 653, 0, 654, 300, 301, 302,
	303, 304, 305, 0, 0, 0, 306, 655, 656, 657,
	0, 307, 308, 658, 0, 0, 0, 309, 310, 311,
	312, 313, 314, 315, 0, 0, 317, 318, 319, 316,
	320, 0, 321, 0, 322, 323, 324, 325, 326, 327,
	0, 328, 329, 330, 0, 331, 332, 333, 0, 0,
	0, 0, 0, 0, 0, 334, 335, 336, 337, 338,
	0, 339, 341, 659, 660, 0, 344, 340, 342, 0,
	345, 343, 346, 0, 347, 348, 349, 0, 0, 350,
	351, 352, 0, 353, 354, 355, 0, 356, 357, 358,
	0, 359, 360, 661, 361, 362, 363, 365, 367, 364,
	366, 368, 369, 370, 371, 662, 663, 372, 0, 278,
	0, 0, 0, 0, 0, 373, 374, 375, 664, 0,
	0, 0, 376, 0, 377, 378, 379, 0, 0, 0,
	380, 381, 382, 665, 666, 383, 384, 385, 386, 387,
	388, 389, 390, 391, 0, 392, 667, 0, 668, 393,
	0, 394, 395, 396, 397, 398, 1333, 670, 671, 484,
	0, 399, 400, 0, 401, 402, 403, 404, 405, 0,
	0, 0, 279, 406, 407, 408, 0, 0, 409, 672,
	673, 0, 674, 0, 410, 411, 0, 675, 0, 412,
	413, 414, 0, 415, 0, 0, 0, 416, 417, 418,
	419, 420, 421, 0, 422, 424, 423, 0, 425, 676,
	0, 426, 427, 0, 0, 428, 429, 430, 431, 432,
	433, 436, 0, 0, 434, 435, 437, 438, 0, 439,
	440, 442, 445, 441, 443, 444, 446, 459, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 458,
	461, 0, 460, 0, 462, 463, 464, 465, 472, 474,
	475, 470, 471, 473, 476, 477, 479, 467, 468, 469,
	0, 478, 466, 0, 280, 0, 480, 481, 482, 0,
	677, 483, 678, 485, 486, 0, 0, 487, 0, 0,
	0, 489, 490, 491, 0, 0, 492, 493, 679, 0,
	494, 0, 680, 495, 496, 488, 497, 498, 499, 500,
	501, 502, 503, 504, 505, 0, 506, 507, 681, 508,
	509, 510, 682, 511, 512, 513, 683, 514, 684, 515,
	516, 0, 517, 518, 0, 519, 520, 521, 522, 523,
	524, 525, 685, 526, 527, 529, 528, 530, 0, 531,
	0, 532, 533, 534, 0, 0, 0, 0, 0, 535,
	537, 0, 538, 539, 540, 541, 536, 542, 543, 544,
	545, 546, 0, 547, 548, 549, 0, 550, 551, 552,
	553, 554, 686, 555, 0, 556, 557, 563, 564, 565,
	558, 559, 566, 567, 568, 569, 570, 0, 572, 573,
	571, 574, 575, 576, 0, 577, 578, 560, 561, 579,
	580, 0, 581, 582, 583, 584, 585, 586, 587, 687,
	0, 588, 0, 589, 590, 591, 592, 594, 562, 595,
	600, 601, 688, 596, 597, 598, 599, 689, 603, 604,
	0, 605, 606, 0, 602, 593, 0, 607, 608, 609,
	610, 611, 612, 613, 614, 0, 615, 690, 691, 692,
	693, 0, 624, 0, 616, 617, 618, 694, 619, 695,
	0, 620, 621, 622, 623, 0, 625, 626, 0, 0,
	627, 628, 629, 631, 632, 630, 633, 0, 634, 0,
	0, 635, 636, 637, 696, 697, 698, 0, 639, 638,
	640, 641, 699, 642, 643, 1329, 0, 275, 0, 644,
	645, 700, 646, 647, 648, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 281, 283, 282, 284, 285, 286,
	287, 0, 288, 289, 0, 0, 0, 0, 0, 649,
	0, 0, 0, 0, 290, 291, 0, 292, 293, 294,
	295, 296, 297, 650, 651, 0, 298, 652, 299, 653,
	0, 654, 300, 301, 302, 303, 304, 305, 0, 0,
	0, 306, 655, 656, 657, 0, 307, 308, 658, 0,
	0, 0, 309, 310, 311, 312, 313, 314, 315, 0,
	0, 317, 318, 319, 316, 320, 0, 321, 0, 322,
	323, 324, 325, 326, 327, 0, 328, 329, 330, 0,
	331, 332, 333, 0, 0, 0, 0, 0, 0, 0,
	334, 335, 336, 337, 338, 0, 339, 341, 659, 660,
	0, 344, 340, 342, 0, 345, 343, 346, 0, 347,
	348, 349, 0, 0, 350, 351, 352, 0, 353, 354,
	355, 0, 356, 357, 358, 0, 359, 360, 661, 361,
	362, 363, 365, 367, 364, 366, 368, 369, 370, 371,
	662, 663, 372, 0, 278, 0, 0, 0, 0, 0,
	373, 374, 375, 664, 0, 0, 0, 376, 0, 377,
	378, 379, 0, 0, 0, 380, 381, 382, 665, 666,
	383, 384, 385, 386, 387, 388, 389, 390, 391, 0,
	392, 667, 0, 668, 393, 0, 394, 395, 396, 397,
	398, 1328, 670, 671, 484, 0, 399, 400, 0, 401,
	402, 403, 404, 405, 0, 0, 0, 279, 406, 407,
	408, 0, 0, 409, 672, 673, 0, 674, 0, 410,
	411, 0, 675, 0, 412, 413, 414, 0, 415, 0,
	0, 0, 416, 417, 418, 419, 420, 421, 0, 422,
	424, 423, 0, 425, 676, 0, 426, 427, 0, 0,
	428, 429, 430, 431, 432, 433, 436, 0, 0, 434,
	435, 437, 438, 0, 439, 440, 442, 445, 441, 443,
	444, 446, 459, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 458, 461, 0, 460, 0, 462,
	463, 464, 465, 472, 474, 475, 470, 471, 473, 476,
	477, 479, 467, 468, 469, 0, 478, 466, 0, 280,
	0, 480, 481, 482, 0, 677, 483, 678, 485, 486,
	0, 0, 487, 0, 0, 0, 489, 490, 491, 0,
	0, 492, 493, 679, 0, 494, 0, 680, 495, 496,
	488, 497, 498, 499, 500, 501, 502, 503, 504, 505,
	0, 506, 507, 681, 508, 509, 510, 682, 511, 512,
	513, 683, 514, 684, 515, 516, 0, 517, 518, 0,
	519, 520, 521, 522, 523, 524, 525, 685, 526, 527,
	529, 528, 530, 0, 531, 0, 532, 533, 534, 0,
	0, 0, 0, 0, 535, 537, 0, 538, 539, 540,
	541, 536, 542, 543, 544, 545, 546, 0, 547, 548,
	549, 0, 550, 551, 552, 553, 554, 686, 555, 0,
	556, 557, 563, 564, 565, 558, 559, 566, 567, 568,
	569, 570, 0, 572, 573, 571, 574, 575, 576, 0,
	577, 578, 560, 561, 579, 580, 0, 581, 582, 583,
	584, 585, 586, 587, 687, 0, 588, 0, 589, 590,
	591, 592, 594, 562, 595, 600, 601, 688, 596, 597,
	598, 599, 689, 603, 604, 0, 605, 606, 0, 602,
	593, 0, 607, 608, 609, 610, 611, 612, 613, 614,
	0, 615, 690, 691, 692, 693, 0, 624, 0, 616,
	617, 618, 694, 619, 695, 0, 620, 621, 622, 623,
	0, 625, 626, 0, 0, 627, 628, 629, 631, 632,
	630, 633, 0, 634, 0, 0, 635, 636, 637, 696,
	697, 698, 0, 639, 638, 640, 641, 699, 642, 643,
	702, 0, 275, 0, 644, 645, 700, 646, 647, 648,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 281,
	283, 282, 284, 285, 286, 287, 0, 288, 289, 0,
	0, 0, 0, 0, 649, 0, 0, 0, 0, 290,
	291, 0, 292, 293, 294, 295, 296, 297, 650, 651,
	0, 298, 652, 299, 653, 0, 654, 300, 301, 302,
	303, 304, 305, 0, 0, 0, 306, 655, 656, 657,
	0, 307, 308, 658, 0, 0, 0, 309, 310, 311,
	312, 313, 314, 315, 0, 0, 317, 318, 319, 316,
	320, 0, 321, 0, 322, 323, 324, 325, 326, 327,
	0, 328, 329, 330, 0, 331, 332, 333, 0, 0,
	0, 0, 0, 0, 0, 334, 335, 336, 337, 338,
	0, 339, 341, 659, 660, 0, 344, 340, 342, 0,
	345, 343, 346, 0, 347, 348, 349, 0, 0, 350,
	351, 352, 0, 353, 354, 355, 0, 356, 357, 358,
	0, 359, 360, 661, 361, 362, 363, 365, 367, 364,
	366, 368, 369, 370, 371, 662, 663, 372, 0, 278,
	0, 0, 0, 0, 0, 373, 374, 375, 664, 0,
	0, 0, 376, 0, 377, 378, 379, 0, 0, 0,
	380, 381, 382, 665, 666, 383, 384, 385, 386, 387,
	388, 389, 390, 391, 0, 392, 667, 0, 668, 393,
	0, 394, 395, 396, 397, 398, 669, 670, 671, 484,
	0, 399, 400, 0, 401, 402, 403, 404, 405, 0,
	0, 0, 279, 406, 407, 408, 0, 0, 409, 672,
	673, 0, 674, 0, 410, 411, 0, 675, 0, 412,
	413, 414, 0, 415, 0, 0, 0, 416, 417, 418,
	419, 420, 421, 0, 422, 424, 423, 0, 425, 676,
	0, 426, 427, 0, 0, 428, 429, 430, 431, 432,
	433, 436, 0, 0, 434, 435, 437, 438, 0, 439,
	440, 442, 445, 441, 443, 444, 446, 459, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 458,
	461, 0, 460, 0, 462, 463, 464, 465, 472, 474,
	475, 470, 471, 473, 476, 477, 479, 467, 468, 469,
	0, 478, 466, 0, 280, 0, 480, 481, 482, 0,
	677, 483, 678, 485, 486, 0, 0, 487, 0, 0,
	0, 489, 490, 491, 0, 0, 492, 493, 679, 0,
	494, 0, 680, 495, 496, 488, 497, 498, 499, 500,
	501, 502, 503, 504, 505, 0, 506, 507, 681, 508,
	509, 510, 682, 511, 512, 513, 683, 514, 684, 515,
	516, 0, 517, 518, 0, 519, 520, 521, 522, 523,
	524, 525, 685, 526, 527, 529, 528, 530, 0, 531,
	0, 532, 533, 534, 0, 0, 0, 0, 0, 535,
	537, 0, 538, 539, 540, 541, 536, 542, 543, 544,
	545, 546, 0, 547, 548, 549, 0, 550, 551, 552,
	553, 554, 686, 555, 0, 556, 557, 563, 564, 565,
	558, 559, 566, 567, 568, 569, 570, 0, 572, 573,
	571, 574, 575, 576, 0, 577, 578, 560, 561, 579,
	580, 0, 581, 582, 583, 584, 585, 586, 587, 687,
	0, 588, 0, 589, 590, 591, 592, 594, 562, 595,
	600, 601, 688, 596, 597, 598, 599, 689, 603, 604,
	0, 605, 606, 0, 602, 593, 0, 607, 608, 609,
	610, 611, 612, 613, 614, 0, 615, 690, 691, 692,
	693, 0, 624, 0, 616, 617, 618, 694, 619, 695,
	0, 620, 621, 622, 623, 0, 625, 626, 0, 0,
	627, 628, 629, 631, 632, 630, 633, 0, 634, 0,
	0, 635, 636, 637, 696, 697, 698, 0, 639, 638,
	640, 641, 699, 642, 643, 266, 0, 275, 0, 644,
	645, 700, 646, 647, 648, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 281, 283, 282, 284, 285, 286,
	287, 0, 288, 289, 0, 0, 0, 0, 0, 649,
	0, 0, 0, 0, 290, 291, 0, 292, 293, 294,
	295, 296, 297, 650, 651, 0, 298, 652, 299, 653,
	0, 654, 300, 301, 302, 303, 304, 305, 0, 0,
	0, 306, 655, 656, 657, 0, 307, 308, 658, 0,
	0, 0, 309, 310, 311, 312, 313, 314, 315, 0,
	0, 317, 318, 319, 316, 320, 0, 321, 0, 322,
	323, 324, 325, 326, 327, 0, 328, 329, 330, 0,
	331, 332, 333, 0, 0, 0, 0, 0, 0, 0,
	334, 335, 336, 337, 338, 0, 339, 341, 659, 660,
	0, 344, 340, 342, 0, 345, 343, 346, 0, 347,
	348, 349, 0, 0, 350, 351, 352, 0, 353, 354,
	355, 0, 356, 357, 358, 0, 359, 360, 661, 361,
	362, 363, 365, 367, 364, 366, 368, 369, 370, 371,
	662, 663, 372, 0, 278, 0, 0, 0, 0, 0,
	373, 374, 375, 664, 0, 0, 0, 376, 0, 377,
	378, 379, 0, 0, 0, 380, 381, 382, 665, 666,
	383, 384, 385, 386, 387, 388, 389, 390, 391, 0,
	392, 667, 0, 668, 393, 0, 394, 395, 396, 397,
	398, 669, 670, 671, 484, 0, 399, 400, 0, 401,
	402, 403, 404, 405, 0, 0, 0, 279, 406, 407,
	408, 0, 0, 409, 672, 673, 0, 674, 0, 410,
	411, 0, 675, 0, 412, 413, 414, 0, 415, 0,
	0, 0, 416, 417, 418, 419, 420, 421, 0, 422,
	424, 423, 0, 425, 676, 0, 426, 427, 0, 0,
	428, 429, 430, 431, 432, 433, 436, 0, 0, 434,
	435, 437, 438, 0, 439, 440, 442, 445, 441, 443,
	444, 446, 459, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 458, 461, 0, 460, 0, 462,
	463, 464, 465, 472, 474, 475, 470, 471, 473, 476,
	477, 479, 467, 468, 469, 0, 478, 466, 0, 280,
	0, 480, 481, 482, 0, 677, 483, 678, 485, 486,
	0, 0, 487, 0, 0, 0, 489, 490, 491, 0,
	0, 492, 493, 679, 0, 494, 0, 680, 495, 496,
	488, 497, 498, 499, 500, 501, 502, 503, 504, 505,
	0, 506, 507, 681, 508, 509, 510, 682, 511, 512,
	513, 683, 514, 684, 515, 516, 0, 517, 518, 0,
	519, 520, 521, 522, 523, 524, 525, 685, 526, 527,
	529, 528, 530, 0, 531, 0, 532, 533, 534, 0,
	0, 0, 0, 0, 535, 537, 0, 538, 539, 540,
	541, 536, 542, 543, 544, 545, 546, 0, 547, 548,
	549, 0, 550, 551, 552, 553, 554, 686, 555, 0,
	556, 557, 563, 564, 565, 558, 559, 566, 567, 568,
	569, 570, 0, 572, 573, 571, 574, 575, 576, 0,
	577, 578, 560, 561, 579, 580, 0, 581, 582, 583,
	584, 585, 586, 587, 687, 0, 588, 0, 589, 590,
	591, 592, 594, 562, 595, 600, 601, 688, 596, 597,
	598, 599, 689, 603, 604, 0, 605, 606, 0, 602,
	593, 0, 607, 608, 609, 610, 611, 612, 613, 614,
	0, 615, 690, 691, 692, 693, 0, 624, 0, 616,
	617, 618, 694, 619, 695, 0, 620, 621, 622, 623,
	0, 625, 626, 0, 0, 627, 628, 629, 631, 632,
	630, 633, 0, 634, 0, 0, 635, 636, 637, 696,
	697, 698, 0, 639, 638, 640, 641, 699, 642, 643,
	275, 0, 0, 0, 644, 645, 700, 646, 647, 648,
	0, 0, 0, 0, 0, 0, 0, 281, 283, 282,
	284, 285, 286, 287, 0, 288, 289, 0, 0, 0,
	0, 0, 649, 0, 0, 0, 0, 290, 291, 0,
	292, 293, 294, 295, 296, 297, 650, 651, 0, 298,
	652, 299, 653, 0, 654, 300, 301, 302, 303, 304,
	305, 0, 0, 0, 306, 655, 656, 657, 0, 307,
	308, 658, 0, 0, 0, 309, 310, 311, 312, 313,
	314, 315, 0, 0, 317, 318, 319, 316, 320, 0,
	321, 0, 322, 323, 324, 325, 326, 327, 0, 328,
	329, 330, 0, 331, 332, 333, 0, 0, 0, 0,
	0, 0, 0, 334, 335, 336, 337, 338, 0, 339,
	341, 659, 660, 0, 344, 340, 342, 0, 345, 343,
	346, 0, 347, 348, 349, 0, 0, 350, 351, 352,
	0, 353, 354, 355, 0, 356, 357, 358, 0, 359,
	360, 661, 361, 362, 363, 365, 367, 364, 366, 368,
	369, 370, 371, 662, 663, 372, 0, 278, 0, 0,
	0, 0, 0, 373, 374, 375, 664, 0, 0, 0,
	376, 0, 377, 378, 379, 0, 0, 0, 380, 381,
	382, 665, 666, 383, 384, 385, 386, 387, 388, 389,
	390, 391, 0, 392, 667, 0, 668, 393, 0, 394,
	395, 396, 397, 398, 669, 670, 671, 484, 0, 399,
	400, 0, 401, 402, 403, 404, 405, 0, 0, 0,
	279, 406, 407, 408, 0, 0, 409, 672, 673, 0,
	674, 0, 410, 411, 0, 675, 0, 412, 413, 414,
	0, 415, 0, 0, 0, 416, 417, 418, 419, 420,
	421, 0, 422, 424, 423, 0, 425, 676, 0, 426,
	427, 0, 0, 428, 429, 430, 431, 432, 433, 436,
	0, 0, 434, 435, 437, 438, 0, 439, 440, 442,
	445, 441, 443, 444, 446, 459, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 458, 461, 0,
	460, 0, 462, 463, 464, 465, 472, 474, 475, 470,
	471, 473, 476, 477, 479, 467, 468, 469, 0, 478,
	466, 0, 280, 0, 480, 481, 482, 0, 677, 483,
	678, 485, 486, 0, 0, 487, 0, 0, 0, 489,
	490, 491, 0, 0, 492, 493, 679, 0, 494, 0,
	680, 495, 496, 488, 497, 498, 499, 500, 501, 502,
	503, 504, 505, 0, 506, 507, 681, 508, 509, 510,
	682, 511, 512, 513, 683, 514, 684, 515, 516, 0,
	517, 518, 0, 519, 520, 521, 522, 523, 524, 525,
	685, 526, 527, 529, 528, 530, 0, 531, 0, 532,
	533, 534, 0, 0, 0, 0, 0, 535, 537, 0,
	538, 539, 540, 541, 536, 542, 543, 544, 545, 546,
	0, 547, 548, 549, 0, 550, 551, 552, 553, 554,
	686, 555, 0, 556, 557, 563, 564, 565, 558, 559,
	566, 567, 568, 569, 570, 0, 572, 573, 571, 574,
	575, 576, 0, 577, 578, 560, 561, 579, 580, 0,
	581, 582, 583, 584, 585, 586, 587, 687, 0, 588,
	0, 589, 590, 591, 592, 594, 562, 595, 600, 601,
	688, 596, 597, 598, 599, 689, 603, 604, 0, 605,
	606, 0, 602, 593, 0, 607, 608, 609, 610, 611,
	612, 613, 614, 0, 615, 690, 691, 692, 693, 0,
	624, 0, 616, 617, 618, 694, 619, 695, 0, 620,
	621, 622, 623, 0, 625, 626, 0, 0, 627, 628,
	629, 631, 632, 630, 633, 0, 634, 0, 0, 635,
	636, 637, 696, 697, 698, 0, 639, 638, 640, 641,
	699, 642, 643, 275, 0, 0, 0, 644, 645, 700,
	646, 647, 648, 0, 0, 0, 0, 0, 0, 0,
	281, 283, 282, 284, 285, 286, 287, 0, 288, 289,
	0, 0, 0, 0, 0, 649, 0, 0, 0, 0,
	290, 291, 0, 292, 293, 294, 295, 296, 297, 650,
	651, 0, 298, 652, 299, 653, 0, 654, 300, 301,
	302, 303, 304, 305, 0, 0, 0, 306, 655, 656,
	657, 0, 307, 308, 658, 0, 0, 0, 309, 310,
	311, 312, 313, 314, 315, 0, 0, 317, 318, 319,
	316, 320, 0, 321, 0, 322, 323, 324, 325, 326,
	327, 724, 328, 329, 330, 0, 331, 332, 333, 0,
	0, 0, 0, 0, 0, 0, 334, 335, 336, 337,
	338, 0, 339, 341, 659, 660, 0, 344, 340, 342,
	0, 345, 343, 346, 0, 347, 348, 349, 0, 0,
	350, 351, 352, 0, 353, 354, 355, 0, 356, 357,
	358, 0, 359, 360, 661, 361, 362, 363, 365, 367,
	364, 366, 368, 369, 370, 371, 662, 663, 372, 0,
	0, 0, 0, 0, 0, 0, 373, 374, 375, 664,
	0, 0, 0, 376, 0, 377, 378, 379, 0, 0,
	0, 380, 381, 382, 665, 666, 383, 384, 385, 386,
	387, 388, 389, 390, 391, 725, 392, 667, 0, 668,
	393, 0, 394, 395, 396, 397, 398, 669, 670, 671,
	484, 0, 399, 400, 0, 401, 402, 403, 404, 405,
	0, 0, 0, 0, 406, 407, 408, 0, 0, 409,
	672, 673, 0, 674, 0, 410, 411, 0, 675, 0,
	412, 413, 414, 0, 415, 0, 0, 0, 416, 417,
	418, 419, 420, 421, 0, 422, 424, 423, 0, 425,
	676, 0, 426, 427, 0, 0, 428, 429, 430, 431,
	432, 433, 436, 0, 0, 434, 435, 437, 438, 0,
	439, 440, 442, 445, 441, 443, 444, 446, 459, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	458, 461, 0, 460, 0, 462, 463, 464, 465, 472,
	474, 475, 470, 471, 473, 476, 477, 479, 467, 468,
	469, 0, 478, 466, 0, 0, 0, 480, 481, 482,
	0, 677, 483, 678, 485, 486, 0, 0, 487, 0,
	0, 0, 489, 490, 491, 0, 0, 492, 493, 679,
	0, 494, 0, 680, 495, 496, 488, 497, 498, 499,
	500, 501, 502, 503, 504, 505, 0, 506, 507, 681,
	508, 509, 510, 682, 511, 512, 513, 683, 514, 684,
	515, 516, 0, 517, 518, 0, 519, 520, 521, 522,
	523, 524, 525, 685, 526, 527, 529, 528, 530, 0,
	531, 0, 532, 533, 534, 0, 0, 0, 0, 0,
	535, 537, 0, 538, 539, 540, 541, 536, 542, 543,
	544, 545, 546, 0, 547, 548, 549, 0, 550, 551,
	552, 553, 554, 686, 555, 0, 556, 557, 563, 564,
	565, 558, 559, 566, 567, 568, 569, 570, 726, 572,
	573, 571, 574, 575, 576, 0, 577, 578, 560, 561,
	579, 580, 0, 581, 582, 583, 584, 585, 586, 587,
	687, 0, 588, 0, 589, 590, 591, 592, 594, 562,
	595, 600, 601, 688, 596, 597, 598, 599, 689, 603,
	604, 0, 605, 606, 0, 602, 593, 0, 607, 608,
	609, 610, 611, 612, 613, 614, 0, 615, 690, 691,
	692, 693, 0, 624, 0, 616, 617, 618, 694, 619,
	695, 0, 620, 621, 622, 623, 0, 625, 626, 0,
	0, 627, 628, 629, 631, 632, 630, 633, 0, 634,
	0, 0, 635, 636, 637, 696, 697, 698, 0, 639,
	638, 640, 641, 699, 642, 643, 275, 0, 0, 0,
	644, 645, 700, 646, 647, 648, 0, 0, 0, 0,
	0, 0, 0, 281, 283, 282, 284, 285, 286, 287,
	0, 288, 289, 0, 0, 0, 0, 0, 649, 0,
	0, 0, 0, 290, 291, 0, 292, 293, 294, 295,
	296, 297, 650, 651, 0, 298, 652, 299, 653, 0,
	654, 300, 301, 302, 303, 304, 305, 0, 0, 0,
	306, 655, 656, 657, 0, 307, 308, 658, 0, 0,
	0, 309, 310, 311, 312, 313, 314, 315, 0, 0,
	317, 318, 319, 316, 320, 0, 321, 0, 322, 323,
	324, 325, 326, 327, 0, 328, 329, 330, 0, 331,
	332, 333, 0, 0, 0, 0, 0, 0, 0, 334,
	335, 336, 2428, 338, 0, 339, 341, 659, 660, 0,
	344, 340, 342, 0, 345, 343, 346, 0, 347, 348,
	349, 0, 0, 350, 351, 352, 0, 353, 354, 355,
	0, 356, 357, 358, 0, 359, 360, 661, 361, 362,
	363, 365, 367, 364, 366, 368, 369, 370, 371, 662,
	663, 372, 0, 278, 0, 0, 0, 0, 0, 373,
	374, 375, 664, 0, 0, 0, 376, 0, 377, 378,
	379, 0, 0, 0, 380, 381, 382, 665, 666, 383,
	384, 385, 386, 387, 388, 389, 390, 391, 0, 392,
	667, 0, 668, 393, 0, 394, 395, 396, 397, 398,
	669, 670, 671, 484, 0, 399, 400, 0, 401, 402,
	403, 404, 405, 0, 0, 0, 279, 406, 407, 408,
	0, 0, 409, 672, 673, 0, 674, 0, 410, 411,
	0, 675, 0, 412, 413, 414, 0, 415, 0, 0,
	0, 416, 417, 418, 419, 420, 421, 0, 422, 424,
	423, 0, 425, 676, 0, 426, 427, 0, 0, 428,
	429, 430, 431, 432, 433, 436, 0, 0, 434, 435,
	437, 438, 0, 439, 440, 442, 445, 441, 443, 444,
	446, 459, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 458, 461, 0, 460, 0, 462, 463,
	464, 465, 472, 474, 475, 470, 471, 473, 476, 477,
	479, 467, 468, 469, 0, 478, 466, 0, 280, 0,
	480, 481, 482, 0, 677, 483, 678, 485, 486, 0,
	0, 487, 0, 0, 0, 489, 490, 491, 0, 0,
	492, 493, 679, 0, 494, 0, 680, 495, 496, 488,
	497, 498, 499, 500, 501, 502, 503, 504, 505, 0,
	506, 507, 681, 508, 509, 510, 682, 511, 512, 513,
	683, 514, 684, 515, 516, 0, 517, 518, 0, 519,
	520, 521, 522, 523, 524, 525, 685, 526, 527, 529,
	528, 530, 0, 531, 0, 532, 533, 534, 0, 0,
	0, 0, 0, 535, 537, 0, 538, 539, 540, 541,
	536, 542, 543, 544, 545, 546, 0, 547, 548, 549,
	0, 550, 551, 552, 553, 554, 686, 555, 0, 556,
	557, 563, 564, 565, 558, 559, 566, 567, 568, 569,
	570, 0, 572, 573, 571, 574, 575, 576, 0, 577,
	578, 560, 561, 579, 580, 0, 581, 582, 583, 584,
	585, 586, 587, 687, 0, 588, 0, 589, 590, 591,
	592, 594, 562, 595, 600, 601, 688, 596, 597, 598,
	599, 689, 603, 604, 0, 605, 606, 0, 602, 593,
	0, 607, 608, 609, 610, 611, 612, 613, 614, 0,
	615, 690, 691, 692, 693, 0, 624, 0, 616, 617,
	618, 694, 619, 695, 0, 620, 621, 622, 623, 0,
	625, 626, 0, 0, 627, 628, 629, 631, 632, 630,
	633, 0, 634, 0, 0, 635, 636, 637, 696, 697,
	698, 0, 639, 638, 640, 641, 699, 642, 643, 275,
	0, 0, 0, 644, 645, 700, 646, 647, 648, 0,
	0, 0, 0, 0, 0, 0, 281, 283, 282, 284,
	285, 286, 287, 0, 288, 289, 0, 0, 0, 0,
	0, 649, 0, 0, 0, 0, 290, 291, 0, 292,
	293, 294, 295, 296, 297, 650, 651, 0, 298, 652,
	299, 653, 0, 654, 300, 301, 302, 303, 304, 305,
	0, 0, 0, 306, 655, 656, 657, 0, 307, 308,
	658, 0, 0, 0, 309, 310, 311, 312, 313, 314,
	315, 0, 0, 317, 318, 319, 316, 320, 0, 321,
	0, 322, 323, 324, 325, 326, 327, 0, 328, 329,
	330, 0, 331, 332, 333, 0, 0, 0, 0, 0,
	0, 0, 334, 335, 336, 2426, 338, 0, 339, 341,
	659, 660, 0, 344, 340, 342, 0, 345, 343, 346,
	0, 347, 348, 349, 0, 0, 350, 351, 352, 0,
	353, 354, 355, 0, 356, 357, 358, 0, 359, 360,
	661, 361, 362, 363, 365, 367, 364, 366, 368, 369,
	370, 371, 662, 663, 372, 0, 278, 0, 0, 0,
	0, 0, 373, 374, 375, 664, 0, 0, 0, 376,
	0, 377, 378, 379, 0, 0, 0, 380, 381, 382,
	665, 666, 383, 384, 385, 386, 387, 388, 389, 390,
	391, 0, 392, 667, 0, 668, 393, 0, 394, 395,
	396, 397, 398, 669, 670, 671, 484, 0, 399, 400,
	0, 401, 402, 403, 404, 405, 0, 0, 0, 279,
	406, 407, 408, 0, 0, 409, 672, 673, 0, 674,
	0, 410, 411, 0, 675, 0, 412, 413, 414, 0,
	415, 0, 0, 0, 416, 417, 418, 419, 420, 421,
	0, 422, 424, 423, 0, 425, 676, 0, 426, 427,
	0, 0, 428, 429, 430, 431, 432, 433, 436, 0,
	0, 434, 435, 437, 438, 0, 439, 440, 442, 445,
	441, 443, 444, 446, 459, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 458, 461, 0, 460,
	0, 462, 463, 464, 465, 472, 474, 475, 470, 471,
	473, 476, 477, 479, 467, 468, 469, 0, 478, 466,
	0, 280, 0, 480, 481, 482, 0, 677, 483, 678,
	485, 486, 0, 0, 487, 0, 0, 0, 489, 490,
	491, 0, 0, 492, 493, 679, 0, 494, 0, 680,
	495, 496, 488, 497, 498, 499, 500, 501, 502, 503,
	504, 505, 0, 506, 507, 681, 508, 509, 510, 682,
	511, 512, 513, 683, 514, 684, 515, 516, 0, 517,
	518, 0, 519, 520, 521, 522, 523, 524, 525, 685,
	526, 527, 529, 528, 530, 0, 531, 0, 532, 533,
	534, 0, 0, 0, 0, 0, 535, 537, 0, 538,
	539, 540, 541, 536, 542, 543, 544, 545, 546, 0,
	547, 548, 549, 0, 550, 551, 552, 553, 554, 686,
	555, 0, 556, 557, 563, 564, 565, 558, 559, 566,
	567, 568, 569, 570, 0, 572, 573, 571, 574, 575,
	576, 0, 577, 578, 560, 561, 579, 580, 0, 581,
	582, 583, 584, 585, 586, 587, 687, 0, 588, 0,
	589, 590, 591, 592, 594, 562, 595, 600, 601, 688,
	596, 597, 598, 599, 689, 603, 604, 0, 605, 606,
	0, 602, 593, 0, 607, 608, 609, 610, 611, 612,
	613, 614, 0, 615, 690, 691, 692, 693, 0, 624,
	0, 616, 617, 618, 694, 619, 695, 0, 620, 621,
	622, 623, 0, 625, 626, 0, 0, 627, 628, 629,
	631, 632, 630, 633, 0, 634, 0, 0, 635, 636,
	637, 696, 697, 698, 0, 639, 638, 640, 641, 699,
	642, 643, 275, 0, 0, 0, 644, 645, 700, 646,
	647, 648, 0, 0, 0, 0, 0, 0, 0, 281,
	283, 282, 284, 285, 286, 287, 0, 288, 289, 0,
	0, 0, 0, 0, 649, 0, 0, 0, 0, 290,
	291, 0, 292, 293, 294, 295, 296, 297, 650, 651,
	0, 298, 652, 299, 653, 0, 654, 300, 301, 302,
	303, 304, 305, 0, 0, 0, 306, 655, 656, 657,
	0, 307, 308, 658, 0, 0, 0, 309, 310, 311,
	312, 313, 314, 315, 0, 0, 317, 318, 319, 316,
	320, 0, 321, 0, 322, 323, 324, 325, 326, 327,
	0, 328, 329, 330, 0, 331, 332, 333, 0, 0,
	0, 0, 0, 0, 0, 334, 335, 336, 2424, 338,
	0, 339, 341, 659, 660, 0, 344, 340, 342, 0,
	345, 343, 346, 0, 347, 348, 349, 0, 0, 350,
	351, 352, 0, 353, 354, 355, 0, 356, 357, 358,
	0, 359, 360, 661, 361, 362, 363, 365, 367, 364,
	366, 368, 369, 370, 371, 662, 663, 372, 0, 278,
	0, 0, 0, 0, 0, 373, 374, 375, 664, 0,
	0, 0, 376, 0, 377, 378, 379, 0, 0, 0,
	380, 381, 382, 665, 666, 383, 384, 385, 386, 387,
	388, 389, 390, 391, 0, 392, 667, 0, 668, 393,
	0, 394, 395, 396, 397, 398, 669, 670, 671, 484,
	0, 399, 400, 0, 401, 402, 403, 404, 405, 0,
	0, 0, 279, 406, 407, 408, 0, 0, 409, 672,
	673, 0, 674, 0, 410, 411, 0, 675, 0, 412,
	413, 414, 0, 415, 0, 0, 0, 416, 417, 418,
	419, 420, 421, 0, 422, 424, 423, 0, 425, 676,
	0, 426, 427, 0, 0, 428, 429, 430, 431, 432,
	433, 436, 0, 0, 434, 435, 437, 438, 0, 439,
	440, 442, 445, 441, 443, 444, 446, 459, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 458,
	461, 0, 460, 0, 462, 463, 464, 465, 472, 474,
	475, 470, 471, 473, 476, 477, 479, 467, 468, 469,
	0, 478, 466, 0, 280, 0, 480, 481, 482, 0,
	677, 483, 678, 485, 486, 0, 0, 487, 0, 0,
	0, 489, 490, 491, 0, 0, 492, 493, 679, 0,
	494, 0, 680, 495, 496, 488, 497, 498, 499, 500,
	501, 502, 503, 504, 505, 0, 506, 507, 681, 508,
	509, 510, 682, 511, 512, 513, 683, 514, 684, 515,
	516, 0, 517, 518, 0, 519, 520, 521, 522, 523,
	524, 525, 685, 526, 527, 529, 528, 530, 0, 531,
	0, 532, 533, 534, 0, 0, 0, 0, 0, 535,
	537, 0, 538, 539, 540, 541, 536, 542, 543, 544,
	545, 546, 0, 547, 548, 549, 0, 550, 551, 552,
	553, 554, 686, 555, 0, 556, 557, 563, 564, 565,
	558, 559, 566, 567, 568, 569, 570, 0, 572, 573,
	571, 574, 575, 576, 0, 577, 578, 560, 561, 579,
	580, 0, 581, 582, 583, 584, 585, 586, 587, 687,
	0, 588, 0, 589, 590, 591, 592, 594, 562, 595,
	600, 601, 688, 596, 597, 598, 599, 689, 603, 604,
	0, 605, 606, 0, 602, 593, 0, 607, 608, 609,
	610, 611, 612, 613, 614, 0, 615, 690, 691, 692,
	693, 0, 624, 0, 616, 617, 618, 694, 619, 695,
	0, 620, 621, 622, 623, 0, 625, 626, 0, 0,
	627, 628, 629, 631, 632, 630, 633, 0, 634, 0,
	0, 635, 636, 637, 696, 697, 698, 0, 639, 638,
	640, 641, 699, 642, 643, 275, 0, 0, 0, 644,
	645, 700, 646, 647, 648, 0, 0, 0, 0, 0,
	0, 0, 281, 283, 282, 284, 285, 286, 287, 0,
	288, 289, 0, 0, 0, 0, 0, 649, 0, 0,
	0, 0, 290, 291, 0, 292, 293, 294, 295, 296,
	297, 650, 651, 0, 298, 652, 299, 653, 0, 654,
	300, 301, 302, 303, 304, 305, 0, 0, 0, 306,
	655, 656, 657, 0, 307, 308, 658, 0, 0, 0,
	309, 310, 311, 312, 313, 314, 315, 0, 0, 317,
	318, 319, 316, 320, 0, 321, 0, 322, 323, 324,
	325, 326, 327, 0, 328, 329, 330, 0, 331, 332,
	333, 0, 0, 0, 0, 0, 0, 0, 334, 335,
	336, 337, 338, 0, 339, 341, 659, 660, 0, 344,
	340, 342, 0, 345, 343, 346, 0, 347, 348, 349,
	0, 0, 350, 351, 352, 0, 353, 354, 355, 0,
	356, 357, 358, 0, 359, 360, 661, 361, 362, 363,
	365, 367, 364, 366, 368, 369, 370, 371, 662, 663,
	372, 0, 278, 0, 0, 0, 0, 0, 373, 374,
	375, 664, 0, 0, 0, 376, 0, 377, 378, 379,
	0, 0, 0, 380, 381, 382, 665, 666, 383, 384,
	385, 386, 387, 388, 389, 390, 391, 0, 392, 667,
	0, 668, 393, 0, 394, 395, 396, 397, 398, 2339,
	670, 671, 484, 0, 399, 400, 0, 401, 402, 403,
	404, 405, 0, 0, 0, 279, 406, 407, 408, 0,
	0, 409, 672, 673, 0, 674, 0, 410, 411, 0,
	675, 0, 412, 413, 414, 0, 415, 0, 0, 0,
	416, 417, 418, 419, 420, 421, 0, 422, 424, 423,
	0, 425, 676, 0, 426, 427, 0, 0, 428, 429,
	430, 431, 432, 433, 436, 0, 0, 434, 435, 437,
	438, 0, 439, 440, 442, 445, 441, 443, 444, 446,
	459, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 458, 461, 0, 460, 0, 462, 463, 464,
	465, 472, 474, 475, 470, 471, 473, 476, 477, 479,
	467, 468, 469, 0, 478, 466, 0, 280, 0, 480,
	481, 482, 0, 677, 483, 678, 485, 486, 0, 0,
	487, 0, 0, 0, 489, 490, 491, 0, 0, 492,
	493, 679, 0, 494, 0, 680, 495, 496, 488, 497,
	498, 499, 500, 501, 502, 503, 504, 505, 0, 506,
	507, 681, 508, 509, 510, 682, 511, 512, 513, 683,
	514, 684, 515, 516, 0, 517, 518, 0, 519, 520,
	521, 522, 523, 524, 525, 685, 526, 527, 529, 528,
	530, 0, 531, 0, 532, 533, 534, 0, 0, 0,
	0, 0, 535, 537, 0, 538, 539, 540, 541, 536,
	542, 543, 544, 545, 546, 0, 547, 548, 549, 0,
	550, 551, 552, 553, 554, 686, 555, 0, 556, 557,
	563, 564, 565, 558, 559, 566, 567, 568, 569, 570,
	0, 572, 573, 571, 574, 575, 576, 0, 577, 578,
	560, 561, 579, 580, 0, 581, 582, 583, 584, 585,
	586, 587, 687, 0, 588, 0, 589, 590, 591, 592,
	594, 562, 595, 600, 601, 688, 596, 597, 598, 599,
	689, 603, 604, 0, 605, 606, 0, 602, 593, 0,
	607, 608, 609, 610, 611, 612, 613, 614, 0, 615,
	690, 691, 692, 693, 0, 624, 0, 616, 617, 618,
	694, 619, 695, 0, 620, 621, 622, 623, 0, 625,
	626, 0, 0, 627, 628, 629, 631, 632, 630, 633,
	0, 634, 0, 0, 635, 636, 637, 696, 697, 698,
	0, 639, 638, 640, 641, 699, 642, 643, 275, 0,
	0, 0, 644, 645, 700, 646, 647, 648, 0, 0,
	0, 0, 0, 0, 0, 281, 283, 282, 284, 285,
	286, 287, 0, 288, 289, 0, 0, 0, 0, 0,
	649, 0, 0, 0, 0, 290, 291, 0, 292, 293,
	294, 295, 296, 297, 650, 651, 0, 298, 652, 299,
	653, 0, 654, 300, 301, 302, 303, 304, 305, 0,
	0, 0, 306, 655, 656, 657, 0, 307, 308, 658,
	0, 0, 0, 309, 310, 311, 312, 313, 314, 315,
	0, 0, 317, 318, 319, 316, 320, 0, 321, 0,
	322, 323, 324, 325, 326, 327, 0, 328, 329, 330,
	0, 331, 332, 333, 0, 0, 0, 0, 0, 0,
	0, 334, 335, 336, 337, 338, 0, 339, 341, 659,
	660, 0, 344, 340, 342, 0, 345, 343, 346, 0,
	347, 348, 349, 0, 0, 350, 351, 352, 0, 353,
	354, 355, 0, 356, 357, 358, 0, 359, 360, 661,
	361, 362, 363, 365, 367, 364, 366, 368, 369, 370,
	371, 662, 663, 372, 0, 278, 0, 0, 0, 0,
	0, 373, 374, 375, 664, 0, 0, 0, 376, 0,
	377, 378, 379, 0, 0, 0, 380, 381, 382, 665,
	666, 383, 384, 385, 386, 387, 388, 389, 390, 391,
	0, 392, 667, 0, 668, 393, 0, 394, 395, 396,
	397, 398, 2121, 670, 671, 484, 0, 399, 400, 0,
	401, 402, 403, 404, 405, 0, 0, 0, 279, 406,
	407, 408, 0, 0, 409, 672, 673, 0, 674, 0,
	410, 411, 0, 675, 0, 412, 413, 414, 0, 415,
	0, 0, 0, 416, 417, 418, 419, 420, 421, 0,
	422, 424, 423, 0, 425, 676, 0, 426, 427, 0,
	0, 428, 429, 430, 431, 432, 433, 436, 0, 0,
	434, 435, 437, 438, 0, 439, 440, 442, 445, 441,
	443, 444, 446, 459, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 458, 461, 0, 460, 0,
	462, 463, 464, 465, 472, 474, 475, 470, 471, 473,
	476, 477, 479, 467, 468, 469, 0, 478, 466, 0,
	280, 0, 480, 481, 482, 0, 677, 483, 678, 485,
	486, 0, 0, 487, 0, 0, 0, 489, 490, 491,
	0, 0, 492, 493, 679, 0, 494, 0, 680, 495,
	496, 488, 497, 498, 499, 500, 501, 502, 503, 504,
	505, 0, 506, 507, 681, 508, 509, 510, 682, 511,
	512, 513, 683, 514, 684, 515, 516, 0, 517, 518,
	0, 519, 520, 521, 522, 523, 524, 525, 685, 526,
	527, 529, 528, 530, 0, 531, 0, 532, 533, 534,
	0, 0, 0, 0, 0, 535, 537, 0, 538, 539,
	540, 541, 536, 542, 543, 544, 545, 546, 0, 547,
	548, 549, 0, 550, 551, 552, 553, 554, 686, 555,
	0, 556, 557, 563, 564, 565, 558, 559, 566, 567,
	568, 569, 570, 0, 572, 573, 571, 574, 575, 576,
	0, 577, 578, 560, 561, 579, 580, 0, 581, 582,
	583, 584, 585, 586, 587, 687, 0, 588, 0, 589,
	590, 591, 592, 594, 562, 595, 600, 601, 688, 596,
	597, 598, 599, 689, 603, 604, 0, 605, 606, 0,
	602, 593, 0, 607, 608, 609, 610, 611, 612, 613,
	614, 0, 615, 690, 691, 692, 693, 0, 624, 0,
	616, 617, 618, 694, 619, 695, 0, 620, 621, 622,
	623, 0, 625, 626, 0, 0, 627, 628, 629, 631,
	632, 630, 633, 0, 634, 0, 0, 635, 636, 637,
	696, 697, 698, 0, 639, 638, 640, 641, 699, 642,
	643, 275, 0, 0, 0, 644, 645, 700, 646, 647,
	648, 0, 0, 0, 0, 0, 0, 0, 281, 283,
	282, 284, 285, 286, 287, 0, 288, 289, 0, 0,
	0, 0, 0, 649, 0, 0, 0, 0, 290, 291,
	0, 292, 293, 294, 295, 296, 297, 650, 651, 0,
	298, 652, 299, 653, 0, 654, 300, 301, 302, 303,
	304, 305, 0, 0, 0, 306, 655, 656, 657, 0,
	307, 308, 658, 0, 0, 0, 309, 310, 311, 312,
	313, 314, 315, 0, 0, 317, 318, 319, 316, 320,
	0, 321, 0, 322, 323, 324, 325, 326, 327, 0,
	328, 329, 330, 0, 331, 332, 333, 0, 0, 0,
	0, 0, 0, 0, 334, 335, 336, 337, 338, 0,
	339, 341, 659, 660, 0, 344, 340, 342, 0, 345,
	343, 346, 0, 347, 348, 349, 0, 0, 350, 351,
	352, 0, 353, 354, 355, 0, 356, 357, 358, 0,
	359, 360, 661, 361, 362, 363, 365, 367, 364, 366,
	368, 369, 370, 371, 662, 663, 372, 0, 278, 0,
	0, 0, 0, 0, 373, 374, 375, 664, 0, 0,
	0, 376, 0, 377, 378, 379, 0, 0, 0, 380,
	381, 382, 665, 666, 383, 384, 385, 386, 387, 388,
	389, 390, 391, 0, 392, 667, 0, 668, 393, 0,
	394, 395, 396, 397, 398, 2115, 670, 671, 484, 0,
	399, 400, 0, 401, 402, 403, 404, 405, 0, 0,
	0, 279, 406, 407, 408, 0, 0, 409, 672, 673,
	0, 674, 0, 410, 411, 0, 675, 0, 412, 413,
	414, 0, 415, 0, 0, 0, 416, 417, 418, 419,
	420, 421, 0, 422, 424, 423, 0, 425, 676, 0,
	426, 427, 0, 0, 428, 429, 430, 431, 432, 433,
	436, 0, 0, 434, 435, 437, 438, 0, 439, 440,
	442, 445, 441, 443, 444, 446, 459, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 458, 461,
	0, 460, 0, 462, 463, 464, 465, 472, 474, 475,
	470, 471, 473, 476, 477, 479, 467, 468, 469, 0,
	478, 466, 0, 280, 0, 480, 481, 482, 0, 677,
	483, 678, 485, 486, 0, 0, 487, 0, 0, 0,
	489, 490, 491, 0, 0, 492, 493, 679, 0, 494,
	0, 680, 495, 496, 488, 497, 498, 499, 500, 501,
	502, 503, 504, 505, 0, 506, 507, 681, 508, 509,
	510, 682, 511, 512, 513, 683, 514, 684, 515, 516,
	0, 517, 518, 0, 519, 520, 521, 522, 523, 524,
	525, 685, 526, 527, 529, 528, 530, 0, 531, 0,
	532, 533, 534, 0, 0, 0, 0, 0, 535, 537,
	0, 538, 539, 540, 541, 536, 542, 543, 544, 545,
	546, 0, 547, 548, 549, 0, 550, 551, 552, 553,
	554, 686, 555, 0, 556, 557, 563, 564, 565, 558,
	559, 566, 567, 568, 569, 570, 0, 572, 573, 571,
	574, 575, 576, 0, 577, 578, 560, 561, 579, 580,
	0, 581, 582, 583, 584, 585, 586, 587, 687, 0,
	588, 0, 589, 590, 591, 592, 594, 562, 595, 600,
	601, 688, 596, 597, 598, 599, 689, 603, 604, 0,
	605, 606, 0, 602, 593, 0, 607, 608, 609, 610,
	611, 612, 613, 614, 0, 615, 690, 691, 692, 693,
	0, 624, 0, 616, 617, 618, 694, 619, 695, 0,
	620, 621, 622, 623, 0, 625, 626, 0, 0, 627,
	628, 629, 631, 632, 630, 633, 0, 634, 0, 0,
	635, 636, 637, 696, 697, 698, 0, 639, 638, 640,
	641, 699, 642, 643, 913, 0, 275, 0, 644, 645,
	700, 646, 647, 648, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 281, 283, 282, 284, 285, 286, 287,
	0, 288, 289, 0, 0, 0, 0, 0, 649, 0,
	0, 0, 0, 290, 291, 0, 292, 293, 294, 295,
	296, 297, 650, 651, 0, 298, 652, 299, 653, 0,
	654, 300, 301, 302, 303, 304, 305, 0, 0, 0,
	306, 655, 656, 657, 0, 307, 308, 658, 0, 0,
	0, 309, 310, 311, 312, 313, 314, 315, 0, 0,
	317, 318, 319, 316, 320, 0, 321, 0, 322, 323,
	324, 325, 326, 327, 0, 328, 329, 330, 0, 331,
	332, 333, 0, 0, 0, 0, 0, 0, 0, 334,
	335, 336, 337, 338, 0, 339, 341, 659, 660, 0,
	344, 340, 342, 0, 345, 343, 346, 0, 347, 348,
	349, 0, 0, 350, 351, 352, 0, 353, 354, 355,
	0, 356, 357, 358, 0, 359, 360, 661, 361, 362,
	363, 365, 367, 364, 366, 368, 369, 370, 371, 662,
	663, 372, 0, 0, 0, 0, 0, 0, 0, 373,
	374, 375, 664, 0, 0, 0, 376, 0, 377, 378,
	379, 0, 0, 0, 380, 381, 382, 665, 666, 383,
	384, 385, 386, 387, 388, 389, 390, 391, 0, 392,
	667, 0, 668, 393, 0, 394, 395, 396, 397, 398,
	669, 670, 671, 484, 0, 399, 400, 0, 401, 402,
	403, 404, 405, 0, 0, 0, 0, 406, 407, 408,
	0, 0, 409, 672, 673, 0, 674, 912, 410, 411,
	0, 675, 0, 412, 413, 414, 0, 415, 0, 0,
	0, 416, 417, 418, 419, 420, 421, 0, 422, 424,
	423, 0, 425, 676, 0, 426, 427, 0, 0, 428,
	429, 430, 431, 432, 433, 436, 0, 0, 434, 435,
	437, 438, 0, 439, 440, 442, 445, 441, 443, 444,
	446, 459, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 458, 461, 0, 460, 0, 462, 463,
	464, 465, 472, 474, 475, 470, 471, 473, 476, 477,
	479, 467, 468, 469, 0, 478, 466, 0, 0, 0,
	480, 481, 482, 0, 677, 483, 678, 485, 486, 0,
	0, 487, 0, 0, 0, 489, 490, 491, 0, 0,
	492, 493, 679, 0, 494, 0, 680, 495, 496, 488,
	497, 498, 499, 500, 501, 502, 503, 504, 505, 0,
	506, 507, 681, 508, 509, 510, 682, 511, 512, 513,
	683, 514, 684, 515, 516, 0, 517, 518, 0, 519,
	520, 521, 522, 523, 524, 525, 685, 526, 527, 529,
	528, 530, 0, 531, 0, 532, 533, 534, 0, 0,
	0, 0, 0, 535, 537, 0, 538, 539, 540, 541,
	536, 542, 543, 544, 545, 546, 0, 547, 548, 549,
	0, 550, 551, 552, 553, 554, 686, 555, 0, 556,
	557, 563, 564, 565, 558, 559, 566, 567, 568, 569,
	570, 0, 572, 573, 571, 574, 575, 576, 0, 577,
	578, 560, 561, 579, 580, 0, 581, 582, 583, 584,
	585, 586, 587, 687, 0, 588, 0, 589, 590, 591,
	592, 594, 562, 595, 600, 601, 688, 596, 597, 598,
	599, 689, 603, 604, 0, 605, 606, 0, 602, 593,
	911, 607, 608, 609, 610, 611, 612, 613, 614, 0,
	615, 690, 691, 692, 693, 0, 624, 0, 616, 617,
	618, 694, 619, 695, 0, 620, 621, 622, 623, 0,
	625, 626, 0, 0, 627, 628, 629, 631, 632, 630,
	633, 0, 634, 0, 0, 635, 636, 637, 696, 697,
	698, 0, 639, 638, 640, 641, 699, 642, 643, 275,
	0, 0, 0, 644, 645, 700, 646, 647, 648, 0,
	0, 0, 0, 0, 0, 0, 281, 283, 282, 284,
	285, 286, 287, 0, 288, 289, 0, 0, 0, 0,
	0, 649, 0, 0, 0, 0, 290, 291, 0, 292,
	293, 294, 295, 296, 297, 650, 651, 0, 298, 652,
	299, 653, 0, 654, 300, 301, 302, 303, 304, 305,
	0, 0, 0, 306, 655, 656, 657, 0, 307, 308,
	658, 0, 0, 0, 309, 310, 311, 312, 313, 314,
	315, 0, 0, 317, 318, 319, 316, 320, 0, 321,
	0, 322, 323, 324, 325, 326, 327, 0, 328, 329,
	330, 0, 331, 332, 333, 0, 0, 0, 0, 0,
	0, 0, 334, 335, 336, 337, 338, 0, 339, 341,
	659, 660, 0, 344, 340, 342, 0, 345, 343, 346,
	0, 347, 348, 349, 0, 0, 350, 351, 352, 0,
	353, 354, 355, 0, 356, 357, 358, 0, 359, 360,
	661, 361, 362, 363, 365, 367, 364, 366, 368, 369,
	370, 371, 662, 663, 372, 0, 3676, 0, 0, 0,
	0, 0, 373, 374, 375, 664, 0, 0, 0, 376,
	0, 377, 378, 379, 0, 0, 0, 380, 381, 382,
	665, 666, 383, 384, 385, 386, 387, 388, 389, 390,
	391, 0, 392, 667, 0, 668, 393, 0, 394, 395,
	396, 397, 398, 669, 670, 671, 484, 0, 399, 400,
	0, 401, 402, 403, 404, 405, 0, 0, 0, 0,
	406, 407, 408, 0, 0, 409, 672, 673, 0, 674,
	0, 410, 411, 0, 675, 0, 412, 413, 414, 0,
	415, 0, 0, 0, 416, 417, 418, 419, 420, 421,
	0, 422, 424, 423, 0, 425, 676, 0, 426, 427,
	0, 0, 428, 429, 430, 431, 432, 433, 436, 0,
	0, 434, 435, 437, 438, 0, 439, 440, 442, 445,
	441, 443, 444, 446, 459, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 458, 461, 0, 460,
	0, 462, 463, 464, 465, 472, 474, 475, 470, 471,
	473, 476, 477, 479, 467, 468, 469, 0, 478, 466,
	0, 0, 0, 480, 481, 482, 0, 677, 483, 678,
	485, 486, 0, 0, 487, 0, 0, 0, 489, 490,
	491, 0, 0, 492, 493, 679, 0, 494, 0, 680,
	495, 496, 488, 497, 498, 499, 500, 501, 502, 503,
	504, 505, 0, 506, 507, 681, 508, 509, 510, 682,
	511, 512, 513, 683, 514, 684, 515, 516, 4381, 517,
	518, 0, 519, 520, 521, 522, 523, 524, 525, 685,
	526, 527, 529, 528, 530, 0, 531, 0, 532, 533,
	534, 0, 0, 0, 0, 0, 535, 537, 0, 538,
	539, 540, 541, 536, 542, 543, 544, 545, 546, 0,
	547, 548, 549, 0, 550, 551, 552, 553, 554, 686,
	555, 0, 556, 557, 563, 564, 565, 558, 559, 566,
	567, 568, 569, 570, 0, 572, 573, 571, 574, 575,
	576, 0, 577, 578, 560, 561, 579, 580, 0, 581,
	582, 583, 584, 585, 586, 587, 687, 0, 588, 0,
	589, 590, 591, 592, 594, 562, 595, 600, 601, 688,
	596, 597, 598, 599, 689, 603, 604, 0, 605, 606,
	0, 602, 593, 0, 607, 608, 609, 610, 611, 612,
	613, 614, 0, 615, 690, 691, 692, 693, 0, 624,
	0, 616, 617, 618, 694, 619, 695, 0, 620, 621,
	622, 623, 0, 625, 626, 0, 0, 627, 628, 629,
	631, 632, 630, 633, 0, 634, 0, 0, 635, 636,
	637, 696, 697, 698, 0, 639, 638, 640, 641, 699,
	642, 643, 1375, 0, 275, 0, 644, 645, 700, 646,
	647, 648, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 281, 283, 282, 284, 285, 286, 287, 0, 288,
	289, 0, 0, 0, 0, 0, 649, 0, 0, 0,
	0, 290, 291, 1378, 292, 293, 294, 295, 296, 297,
	650, 651, 0, 298, 652, 299, 653, 0, 654, 300,
	301, 302, 303, 304, 305, 0, 0, 0, 306, 655,
	656, 1376, 0, 307, 308, 658, 0, 0, 0, 309,
	310, 311, 312, 313, 314, 315, 0, 0, 317, 318,
	319, 316, 320, 0, 321, 0, 322, 323, 324, 325,
	326, 327, 0, 328, 329, 330, 0, 331, 332, 333,
	0, 0, 0, 0, 0, 0, 0, 334, 335, 336,
	337, 338, 0, 339, 341, 659, 660, 0, 344, 340,
	342, 0, 345, 343, 346, 0, 347, 348, 349, 0,
	0, 350, 351, 352, 0, 353, 354, 355, 0, 356,
	357, 358, 0, 359, 360, 661, 361, 362, 363, 365,
	367, 364, 366, 368, 369, 370, 371, 662, 663, 372,
	0, 0, 0, 0, 0, 0, 0, 373, 374, 375,
	664, 0, 0, 0, 376, 0, 377, 378, 379, 0,
	0, 0, 380, 381, 382, 665, 666, 383, 384, 385,
	386, 387, 388, 389, 390, 391, 0, 392, 667, 0,
	668, 393, 0, 394, 395, 396, 397, 398, 669, 670,
	671, 484, 0, 399, 400, 0, 401, 402, 403, 404,
	405, 0, 0, 0, 0, 406, 407, 408, 0, 0,
	409, 672, 673, 0, 674, 0, 410, 411, 0, 675,
	0, 412, 413, 414, 0, 415, 0, 0, 0, 416,
	417, 418, 419, 420, 421, 0, 422, 424, 423, 0,
	425, 676, 0, 426, 427, 0, 0, 428, 429, 430,
	431, 432, 433, 436, 0, 0, 434, 435, 437, 438,
	0, 439, 440, 442, 445, 441, 443, 444, 446, 459,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 458, 461, 0, 793, 0, 462, 463, 464, 465,
	472, 474, 475, 470, 471, 473, 476, 477, 479, 467,
	468, 469, 0, 478, 466, 0, 0, 0, 480, 481,
	482, 0, 677, 483, 678, 485, 486, 0, 0, 487,
	0, 0, 0, 489, 490, 491, 0, 0, 492, 493,
	679, 0, 494, 0, 680, 495, 496, 488, 497, 498,
	499, 500, 501, 502, 503, 504, 505, 0, 506, 507,
	681, 508, 509, 510, 682, 511, 512, 513, 683, 514,
	684, 515, 516, 0, 517, 518, 0, 519, 520, 521,
	522, 523, 524, 525, 685, 526, 527, 529, 528, 530,
	0, 531, 0, 532, 533, 534, 0, 0, 0, 0,
	0, 535, 537, 0, 538, 539, 540, 541, 536, 542,
	543, 544, 545, 546, 0, 547, 548, 549, 0, 792,
	551, 552, 553, 554, 686, 555, 0, 556, 557, 563,
	564, 565, 558, 559, 791, 567, 568, 569, 570, 0,
	572, 573, 571, 574, 1379, 576, 0, 577, 578, 560,
	561, 579, 580, 0, 581, 582, 583, 584, 585, 586,
	587, 687, 0, 588, 0, 589, 590, 591, 592, 594,
	562, 595, 600, 601, 688, 596, 597, 598, 599, 689,
	603, 604, 0, 605, 606, 0, 602, 593, 0, 607,
	608, 609, 610, 611, 612, 613, 614, 0, 615, 789,
	691, 692, 693, 0, 624, 0, 616, 617, 618, 694,
	619, 695, 0, 620, 621, 622, 623, 0, 625, 626,
	0, 0, 627, 628, 629, 631, 632, 630, 633, 0,
	634, 0, 0, 635, 636, 637, 696, 697, 698, 0,
	639, 638, 640, 641, 699, 642, 643, 1375, 0, 275,
	0, 644, 645, 700, 646, 647, 648, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 281, 283, 282, 284,
	285, 286, 287, 0, 288, 289, 0, 0, 0, 0,
	0, 649, 0, 0, 0, 0, 290, 291, 1378, 292,
	293, 294, 295, 296, 297, 650, 651, 0, 298, 652,
	299, 653, 0, 654, 300, 301, 302, 303, 304, 305,
	0, 0, 0, 306, 655, 656, 1376, 0, 307, 308,
	658, 0, 0, 0, 309, 310, 311, 312, 313, 314,
	315, 0, 0, 317, 318, 319, 316, 320, 0, 321,
	0, 322, 323, 324, 325, 326, 327, 0, 328, 329,
	330, 0, 331, 332, 333, 0, 0, 0, 0, 0,
	0, 0, 334, 335, 336, 337, 338, 0, 339, 341,
	659, 660, 0, 344, 340, 342, 0, 345, 343, 346,
	0, 347, 348, 349, 0, 0, 350, 351, 352, 0,
	353, 354, 355, 0, 356, 357, 358, 0, 359, 360,
	661, 361, 362, 363, 365, 367, 364, 366, 368, 369,
	370, 371, 662, 663, 372, 0, 0, 0, 0, 0,
	0, 0, 373, 374, 375, 664, 0, 0, 0, 376,
	0, 377, 378, 379, 0, 0, 0, 380, 381, 382,
	665, 666, 383, 384, 385, 386, 387, 388, 389, 390,
	391, 0, 392, 667, 0, 668, 393, 0, 394, 395,
	396, 397, 398, 669, 670, 671, 484, 0, 399, 400,
	0, 401, 402, 403, 404, 405, 0, 0, 0, 0,
	406, 407, 408, 0, 0, 409, 672, 673, 0, 674,
	0, 410, 411, 0, 675, 0, 412, 413, 414, 0,
	415, 0, 0, 0, 416, 417, 418, 419, 420, 421,
	0, 422, 424, 423, 0, 425, 676, 0, 426, 427,
	0, 0, 428, 429, 430, 431, 432, 433, 436, 0,
	0, 434, 435, 437, 438, 0, 439, 440, 442, 445,
	441, 443, 444, 446, 459, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 458, 461, 0, 793,
	0, 462, 463, 464, 465, 472, 474, 475, 470, 471,
	473, 476, 477, 479, 467, 468, 469, 0, 478, 466,
	0, 0, 0, 480, 481, 482, 0, 677, 483, 678,
	485, 486, 0, 0, 487, 0, 0, 0, 489, 490,
	491, 0, 0, 492, 493, 679, 0, 494, 0, 680,
	495, 496, 488, 497, 498, 499, 500, 501, 502, 503,
	504, 505, 0, 506, 507, 681, 508, 509, 510, 682,
	511, 512, 513, 683, 514, 684, 515, 516, 0, 517,
	518, 0, 519, 520, 521, 522, 523, 524, 525, 685,
	526, 527, 529, 528, 530, 0, 531, 0, 532, 533,
	534, 0, 0, 0, 0, 0, 535, 537, 0, 538,
	539, 540, 541, 536, 542, 543, 544, 545, 546, 0,
	547, 548, 549, 0, 792, 551, 552, 553, 554, 686,
	555, 0, 556, 557, 563, 564, 565, 558, 559, 791,
	567, 568, 569, 570, 0, 572, 573, 571, 574, 1379,
	576, 0, 577, 578, 560, 561, 579, 580, 0, 581,
	582, 583, 584, 585, 586, 587, 687, 0, 588, 0,
	589, 590, 591, 592, 594, 562, 595, 600, 601, 688,
	596, 597, 598, 599, 689, 603, 604, 0, 605, 606,
	0, 602, 593, 0, 607, 608, 609, 610, 611, 612,
	613, 614, 0, 615, 789, 691, 692, 693, 0, 624,
	0, 616, 1377, 618, 694, 619, 695, 0, 620, 621,
	622, 623, 0, 625, 626, 0, 0, 627, 628, 629,
	631, 632, 630, 633, 0, 634, 0, 0, 635, 636,
	637, 696, 697, 698, 0, 639, 638, 640, 641, 699,
	642, 643, 711, 0, 275, 0, 644, 645, 700, 646,
	647, 648, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 281, 283, 282, 284, 285, 286, 287, 710, 288,
	289, 0, 0, 0, 0, 0, 649, 0, 0, 0,
	0, 290, 291, 0, 292, 293, 294, 295, 296, 297,
	650, 651, 0, 298, 652, 299, 653, 0, 654, 300,
	301, 302, 303, 304, 305, 0, 0, 0, 306, 655,
	656, 657, 0, 307, 308, 658, 0, 0, 0, 309,
	310, 311, 312, 313, 314, 315, 0, 0, 317, 318,
	319, 316, 320, 0, 321, 0, 322, 323, 324, 325,
	326, 327, 0, 328, 329, 330, 0, 331, 332, 333,
	0, 0, 0, 0, 0, 0, 0, 334, 335, 336,
	337, 338, 0, 339, 341, 659, 660, 0, 344, 340,
	342, 0, 345, 343, 346, 0, 347, 348, 349, 0,
	0, 350, 351, 352, 0, 353, 354, 355, 0, 356,
	357, 358, 0, 359, 360, 661, 361, 362, 363, 365,
	367, 364, 366, 368, 369, 370, 371, 662, 663, 372,
	0, 0, 0, 0, 0, 0, 0, 373, 374, 375,
	664, 0, 0, 0, 376, 0, 377, 378, 379, 0,
	0, 0, 380, 381, 382, 665, 666, 383, 384, 385,
	386, 387, 388, 389, 390, 391, 0, 392, 667, 0,
	668, 393, 0, 394, 395, 396, 397, 398, 669, 670,
	671, 484, 0, 399, 400, 0, 401, 402, 403, 404,
	405, 0, 0, 0, 0, 406, 407, 408, 0, 0,
	409, 672, 673, 0, 674, 0, 410, 411, 0, 675,
	0, 412, 413, 414, 0, 415, 0, 0, 0, 416,
	417, 418, 419, 420, 421, 0, 422, 424, 423, 0,
	425, 676, 0, 426, 427, 0, 0, 428, 429, 430,
	431, 432, 433, 436, 0, 0, 434, 435, 437, 438,
	0, 439, 440, 442, 445, 441, 443, 444, 446, 459,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 458, 461, 0, 460, 0, 462, 463, 464, 465,
	472, 474, 475, 470, 471, 473, 476, 477, 479, 467,
	468, 469, 0, 478, 466, 0, 0, 0, 480, 481,
	482, 0, 677, 483, 678, 485, 486, 0, 0, 487,
	0, 0, 0, 489, 490, 491, 0, 0, 492, 493,
	679, 0, 494, 0, 680, 495, 496, 488, 497, 498,
	499, 500, 501, 502, 503, 504, 505, 0, 506, 507,
	681, 508, 509, 510, 682, 511, 512, 513, 683, 514,
	684, 709, 516, 0, 517, 518, 0, 519, 520, 521,
	522, 523, 524, 525, 685, 526, 527, 529, 528, 530,
	0, 531, 0, 532, 533, 534, 0, 0, 0, 0,
	0, 535, 537, 0, 538, 539, 540, 541, 536, 542,
	543, 544, 545, 546, 0, 547, 548, 549, 0, 550,
	551, 552, 553, 554, 686, 555, 0, 556, 557, 563,
	564, 565, 558, 559, 566, 567, 568, 569, 570, 0,
	572, 573, 571, 574, 575, 576, 0, 577, 578, 560,
	561, 579, 580, 0, 581, 582, 583, 584, 585, 586,
	587, 687, 0, 588, 0, 589, 590, 591, 592, 594,
	562, 595, 600, 601, 688, 596, 597, 598, 599, 689,
	603, 604, 0, 605, 606, 0, 602, 593, 0, 607,
	608, 609, 610, 611, 612, 613, 614, 0, 615, 690,
	691, 692, 693, 0, 624, 0, 616, 617, 618, 694,
	619, 695, 0, 620, 621, 622, 623, 0, 625, 626,
	0, 0, 627, 628, 629, 631, 632, 630, 633, 0,
	634, 0, 0, 635, 636, 637, 696, 697, 698, 0,
	639, 638, 640, 641, 699, 642, 643, 275, 3164, 0,
	0, 644, 645, 700, 646, 647, 648, 0, 0, 0,
	0, 0, 0, 0, 281, 283, 282, 284, 285, 286,
	287, 0, 288, 289, 0, 0, 0, 0, 0, 649,
	0, 0, 0, 0, 290, 291, 0, 292, 293, 294,
	295, 296, 297, 650, 651, 0, 298, 652, 299, 653,
	0, 654, 300, 301, 302, 303, 304, 305, 0, 0,
	0, 306, 655, 656, 657, 0, 307, 308, 658, 0,
	0, 0, 309, 310, 311, 312, 313, 314, 315, 0,
	0, 317, 318, 319, 316, 320, 0, 321, 0, 322,
	323, 324, 325, 326, 327, 0, 328, 329, 330, 0,
	331, 332, 333, 0, 0, 0, 0, 0, 0, 0,
	334, 335, 336, 337, 338, 0, 339, 341, 659, 660,
	0, 344, 340, 342, 0, 345, 343, 346, 0, 347,
	348, 349, 0, 0, 350, 351, 352, 0, 353, 354,
	355, 0, 356, 357, 358, 0, 359, 360, 661, 361,
	362, 363, 365, 367, 364, 366, 368, 369, 370, 371,
	662, 663, 372, 0, 0, 0, 0, 0, 0, 0,
	373, 374, 375, 664, 0, 0, 0, 376, 0, 377,
	378, 379, 0, 0, 0, 380, 381, 382, 665, 666,
	383, 384, 385, 386, 387, 388, 389, 390, 391, 0,
	392, 667, 0, 668, 393, 0, 394, 395, 396, 397,
	398, 669, 670, 671, 484, 0, 399, 400, 0, 401,
	402, 403, 404, 405, 0, 0, 0, 0, 406, 407,
	408, 0, 0, 409, 672, 673, 0, 674, 0, 410,
	411, 0, 675, 0, 412, 413, 414, 0, 415, 0,
	0, 0, 416, 417, 418, 419, 420, 421, 0, 422,
	424, 423, 0, 425, 676, 0, 426, 427, 0, 0,
	428, 429, 430, 431, 432, 433, 436, 0, 0, 434,
	435, 437, 438, 0, 439, 440, 442, 445, 441, 443,
	444, 446, 459, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 458, 461, 0, 460, 0, 462,
	463, 464, 465, 472, 474, 475, 470, 471, 473, 476,
	477, 479, 467, 468, 469, 0, 478, 466, 0, 0,
	0, 480, 481, 482, 0, 677, 483, 678, 485, 486,
	0, 0, 487, 0, 0, 0, 489, 490, 491, 0,
	0, 492, 493, 679, 0, 494, 0, 680, 495, 496,
	488, 497, 498, 499, 500, 501, 502, 503, 504, 505,
	0, 506, 507, 681, 508, 509, 510, 682, 511, 512,
	513, 683, 514, 684, 515, 516, 0, 517, 518, 0,
	519, 520, 521, 522, 523, 524, 525, 685, 526, 527,
	529, 528, 530, 0, 531, 0, 532, 533, 534, 0,
	0, 0, 0, 0, 535, 537, 0, 538, 539, 540,
	541, 536, 542, 543, 544, 545, 546, 0, 547, 548,
	549, 0, 550, 551, 552, 553, 554, 686, 555, 0,
	556, 557, 563, 564, 565, 558, 559, 566, 567, 568,
	569, 570, 0, 572, 573, 571, 574, 575, 576, 0,
	577, 578, 560, 561, 579, 580, 0, 581, 582, 583,
	584, 585, 586, 587, 687, 0, 588, 0, 589, 590,
	591, 592, 594, 562, 595, 600, 601, 688, 596, 597,
	598, 599, 689, 603, 604, 0, 605, 606, 0, 602,
	593, 0, 607, 608, 609, 610, 611, 612, 613, 614,
	0, 615, 690, 691, 692, 693, 0, 624, 0, 616,
	617, 618, 694, 619, 695, 0, 620, 621, 622, 623,
	0, 625, 626, 0, 0, 627, 628, 629, 631, 632,
	630, 633, 0, 634, 0, 0, 635, 636, 637, 696,
	697, 698, 0, 639, 638, 640, 641, 699, 642, 643,
	275, 0, 0, 0, 644, 645, 700, 646, 647, 648,
	0, 0, 0, 0, 0, 0, 0, 281, 283, 282,
	284, 285, 286, 287, 0, 288, 289, 0, 0, 0,
	0, 0, 649, 0, 0, 0, 0, 290, 291, 0,
	292, 293, 294, 295, 296, 297, 650, 651, 0, 298,
	652, 299, 653, 0, 654, 300, 301, 302, 303, 304,
	305, 0, 0, 0, 306, 655, 656, 657, 0, 307,
	308, 658, 0, 0, 0, 309, 310, 311, 312, 313,
	314, 315, 0, 0, 317, 318, 319, 316, 320, 0,
	321, 0, 322, 323, 324, 325, 326, 327, 0, 328,
	329, 330, 0, 331, 332, 333, 0, 0, 0, 0,
	0, 0, 0, 334, 335, 336, 337, 338, 0, 339,
	341, 659, 660, 0, 344, 340, 342, 0, 345, 343,
	346, 0, 347, 348, 349, 0, 0, 350, 351, 352,
	0, 353, 354, 355, 0, 356, 357, 358, 0, 359,
	360, 661, 361, 362, 363, 365, 367, 364, 366, 368,
	369, 370, 371, 662, 663, 372, 0, 0, 0, 0,
	0, 0, 0, 373, 374, 375, 664, 0, 0, 0,
	376, 0, 377, 378, 379, 0, 0, 0, 380, 381,
	382, 665, 666, 383, 384, 385, 386, 387, 388, 389,
	390, 391, 0, 392, 667, 0, 668, 393, 0, 394,
	395, 396, 397, 398, 669, 670, 671, 484, 0, 399,
	400, 0, 401, 402, 403, 404, 405, 0, 0, 0,
	0, 406, 407, 408, 0, 0, 409, 672, 673, 0,
	674, 0, 410, 411, 0, 675, 0, 412, 413, 414,
	0, 415, 0, 0, 0, 416, 417, 418, 419, 420,
	421, 0, 422, 424, 423, 0, 425, 676, 0, 426,
	427, 0, 0, 428, 429, 430, 431, 432, 433, 436,
	0, 0, 434, 435, 437, 438, 0, 439, 440, 442,
	445, 441, 443, 444, 446, 459, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 458, 461, 0,
	460, 0, 462, 463, 464, 465, 472, 474, 475, 470,
	471, 473, 476, 477, 479, 467, 468, 469, 0, 478,
	466, 0, 0, 0, 480, 481, 482, 0, 677, 483,
	678, 485, 486, 0, 0, 487, 0, 0, 0, 489,
	490, 491, 0, 0, 492, 493, 679, 0, 494, 0,
	680, 495, 496, 488, 497, 498, 499, 500, 501, 502,
	503, 504, 505, 0, 506, 507, 681, 508, 509, 510,
	682, 511, 512, 513, 683, 514, 684, 515, 516, 4674,
	517, 518, 0, 519, 520, 521, 522, 523, 524, 525,
	685, 526, 527, 529, 528, 530, 0, 531, 0, 532,
	533, 534, 0, 0, 0, 0, 0, 535, 537, 0,
	538, 539, 540, 541, 536, 542, 543, 544, 545, 546,
	0, 547, 548, 549, 0, 550, 551, 552, 553, 554,
	686, 555, 0, 556, 557, 563, 564, 565, 558, 559,
	566, 567, 568, 569, 570, 0, 572, 573, 571, 574,
	575, 576, 0, 577, 578, 560, 561, 579, 580, 0,
	581, 582, 583, 584, 585, 586, 587, 687, 0, 588,
	0, 589, 590, 591, 592, 594, 562, 595, 600, 601,
	688, 596, 597, 598, 599, 689, 603, 604, 0, 605,
	606, 0, 602, 593, 0, 607, 608, 609, 610, 611,
	612, 613, 614, 0, 615, 690, 691, 692, 693, 0,
	624, 0, 616, 617, 618, 694, 619, 695, 0, 620,
	621, 622, 623, 0, 625, 626, 0, 0, 627, 628,
	629, 631, 632, 630, 633, 0, 634, 0, 0, 635,
	636, 637, 696, 697, 698, 0, 639, 638, 640, 641,
	699, 642, 643, 275, 3521, 0, 0, 644, 645, 700,
	646, 647, 648, 0, 0, 0, 0, 0, 0, 0,
	281, 283, 282, 284, 285, 286, 287, 0, 288, 289,
	0, 0, 0, 0, 0, 649, 0, 0, 0, 0,
	290, 291, 0, 292, 293, 294, 295, 296, 297, 650,
	651, 0, 298, 652, 299, 653, 0, 654, 300, 301,
	302, 303, 304, 305, 0, 0, 0, 306, 655, 656,
	657, 0, 307, 308, 658, 0, 0, 0, 309, 310,
	311, 312, 313, 314, 315, 0, 0, 317, 318, 319,
	316, 320, 0, 321, 0, 322, 323, 324, 325, 326,
	327, 0, 328, 329, 330, 0, 331, 332, 333, 0,
	0, 0, 0, 0, 0, 0, 334, 335, 336, 337,
	338, 0, 339, 341, 659, 660, 0, 344, 340, 342,
	0, 345, 343, 346, 0, 347, 348, 349, 0, 0,
	350, 351, 352, 0, 353, 354, 355, 0, 356, 357,
	358, 0, 359, 360, 661, 361, 362, 363, 365, 367,
	364, 366, 368, 369, 370, 371, 662, 663, 372, 0,
	0, 0, 0, 0, 0, 0, 373, 374, 375, 664,
	0, 0, 0, 376, 0, 377, 378, 379, 0, 0,
	0, 380, 381, 382, 665, 666, 383, 384, 385, 386,
	387, 388, 389, 390, 391, 0, 392, 667, 0, 668,
	393, 0, 394, 395, 396, 397, 398, 669, 670, 671,
	484, 0, 399, 400, 0, 401, 402, 403, 404, 405,
	0, 0, 0, 0, 406, 407, 408, 0, 0, 409,
	672, 673, 0, 674, 0, 410, 411, 0, 675, 0,
	412, 413, 414, 0, 415, 0, 0, 0, 416, 417,
	418, 419, 420, 421, 0, 422, 424, 423, 0, 425,
	676, 0, 426, 427, 0, 0, 428, 429, 430, 431,
	432, 433, 436, 0, 0, 434, 435, 437, 438, 0,
	439, 440, 442, 445, 441, 443, 444, 446, 459, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	458, 461, 0, 460, 0, 462, 463, 464, 465, 472,
	474, 475, 470, 471, 473, 476, 477, 479, 467, 468,
	469, 0, 478, 466, 0, 0, 0, 480, 481, 482,
	0, 677, 483, 678, 485, 486, 0, 0, 487, 0,
	0, 0, 489, 490, 491, 0, 0, 492, 493, 679,
	0, 494, 0, 680, 495, 496, 488, 497, 498, 499,
	500, 501, 502, 503, 504, 505, 0, 506, 507, 681,
	508, 509, 510, 682, 511, 512, 513, 683, 514, 684,
	515, 516, 0, 517, 518, 0, 519, 520, 521, 522,
	523, 524, 525, 685, 526, 527, 529, 528, 530, 0,
	531, 0, 532, 533, 534, 0, 0, 0, 0, 0,
	535, 537, 0, 538, 539, 540, 541, 536, 542, 543,
	544, 545, 546, 0, 547, 548, 549, 0, 550, 551,
	552, 553, 554, 686, 555, 0, 556, 557, 563, 564,
	565, 558, 559, 566, 567, 568, 569, 570, 0, 572,
	573, 571, 574, 575, 576, 0, 577, 578, 560, 561,
	579, 580, 0, 581, 582, 583, 584, 585, 586, 587,
	687, 0, 588, 0, 589, 590, 591, 592, 594, 562,
	595, 600, 601, 688, 596, 597, 598, 599, 689, 603,
	604, 0, 605, 606, 0, 602, 593, 0, 607, 608,
	609, 610, 611, 612, 613, 614, 0, 615, 690, 691,
	692, 693, 0, 624, 0, 616, 617, 618, 694, 619,
	695, 0, 620, 621, 622, 623, 0, 625, 626, 0,
	0, 627, 628, 629, 631, 632, 630, 633, 0, 634,
	0, 0, 635, 636, 637, 696, 697, 698, 0, 639,
	638, 640, 641, 699, 642, 643, 275, 0, 0, 0,
	644, 645, 700, 646, 647, 648, 0, 0, 0, 0,
	0, 0, 0, 281, 283, 282, 284, 285, 286, 287,
	0, 288, 289, 0, 0, 0, 0, 0, 649, 0,
	0, 0, 0, 290, 291, 0, 292, 293, 294, 295,
	296, 297, 650, 651, 0, 298, 652, 299, 653, 0,
	654, 300, 301, 302, 303, 304, 305, 0, 0, 0,
	306, 655, 656, 657, 0, 307, 308, 658, 0, 0,
	0, 309, 310, 311, 312, 313, 314, 315, 0, 0,
	317, 318, 319, 316, 320, 0, 321, 0, 322, 323,
	324, 325, 326, 327, 0, 328, 329, 330, 0, 331,
	332, 333, 0, 0, 0, 0, 0, 0, 0, 334,
	335, 336, 337, 338, 0, 339, 341, 659, 660, 0,
	344, 340, 342, 0, 345, 343, 346, 0, 347, 348,
	349, 0, 0, 350, 351, 352, 0, 353, 354, 355,
	0, 356, 357, 358, 0, 359, 360, 661, 361, 362,
	363, 365, 367, 364, 366, 368, 369, 370, 371, 662,
	663, 372, 0, 0, 0, 0, 0, 0, 0, 373,
	374, 375, 664, 0, 0, 0, 376, 0, 377, 378,
	379, 0, 0, 0, 380, 381, 382, 665, 666, 383,
	384, 385, 386, 387, 388, 389, 390, 391, 0, 392,
	667, 0, 668, 393, 0, 394, 395, 396, 397, 398,
	669, 670, 671, 484, 0, 399, 400, 0, 401, 402,
	403, 404, 405, 0, 0, 0, 0, 406, 407, 408,
	0, 0, 409, 672, 673, 0, 674, 0, 410, 411,
	0, 675, 0, 412, 413, 414, 0, 415, 0, 0,
	0, 416, 417, 418, 419, 420, 421, 0, 422, 424,
	423, 0, 425, 676, 0, 426, 427, 0, 0, 428,
	429, 430, 431, 432, 433, 436, 0, 0, 434, 435,
	437, 438, 0, 439, 440, 442, 445, 441, 443, 444,
	446, 459, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 458, 461, 0, 460, 0, 462, 463,
	464, 465, 472, 474, 475, 470, 471, 473, 476, 477,
	479, 467, 468, 469, 0, 478, 466, 0, 0, 0,
	480, 481, 482, 0, 677, 483, 678, 485, 486, 0,
	0, 487, 0, 0, 0, 489, 490, 491, 0, 0,
	492, 493, 679, 0, 494, 0, 680, 495, 496, 488,
	497, 498, 499, 500, 501, 502, 503, 504, 505, 0,
	506, 507, 681, 508, 509, 510, 682, 511, 512, 513,
	683, 514, 684, 515, 516, 4271, 517, 518, 0, 519,
	520, 521, 522, 523, 524, 525, 685, 526, 527, 529,
	528, 530, 0, 531, 0, 532, 533, 534, 0, 0,
	0, 0, 0, 535, 537, 0, 538, 539, 540, 541,
	536, 542, 543, 544, 545, 546, 0, 547, 548, 549,
	0, 550, 551, 552, 553, 554, 686, 555, 0, 556,
	557, 563, 564, 565, 558, 559, 566, 567, 568, 569,
	570, 0, 572, 573, 571, 574, 575, 576, 0, 577,
	578, 560, 561, 579, 580, 0, 581, 582, 583, 584,
	585, 586, 587, 687, 0, 588, 0, 589, 590, 591,
	592, 594, 562, 595, 600, 601, 688, 596, 597, 598,
	599, 689, 603, 604, 0, 605, 606, 0, 602, 593,
	0, 607, 608, 609, 610, 611, 612, 613, 614, 0,
	615, 690, 691, 692, 693, 0, 624, 0, 616, 617,
	618, 694, 619, 695, 0, 620, 621, 622, 623, 0,
	625, 626, 0, 0, 627, 628, 629, 631, 632, 630,
	633, 0, 634, 0, 0, 635, 636, 637, 696, 697,
	698, 0, 639, 638, 640, 641, 699, 642, 643, 275,
	0, 0, 0, 644, 645, 700, 646, 647, 648, 0,
	0, 0, 0, 0, 0, 0, 281, 283, 282, 284,
	285, 286, 287, 0, 288, 289, 0, 0, 0, 0,
	0, 649, 0, 0, 0, 0, 290, 291, 0, 292,
	293, 294, 295, 296, 297, 650, 651, 0, 298, 652,
	299, 653, 0, 654, 300, 301, 302, 303, 304, 305,
	0, 0, 0, 306, 655, 656, 657, 0, 307, 308,
	658, 0, 0, 0, 309, 310, 311, 312, 313, 314,
	315, 0, 0, 317, 318, 319, 316, 320, 0, 321,
	0, 322, 323, 324, 325, 326, 327, 0, 328, 329,
	330, 0, 331, 332, 333, 0, 0, 0, 0, 0,
	0, 0, 334, 335, 336, 337, 338, 0, 339, 341,
	659, 660, 4016, 344, 340, 342, 0, 345, 343, 346,
	0, 347, 348, 349, 0, 0, 350, 351, 352, 0,
	353, 354, 355, 0, 356, 357, 358, 0, 359, 360,
	661, 361, 362, 363, 365, 367, 364, 366, 368, 369,
	370, 371, 662, 663, 372, 0, 0, 0, 0, 0,
	0, 0, 373, 374, 375, 664, 0, 0, 0, 376,
	0, 377, 378, 379, 0, 0, 0, 380, 381, 382,
	665, 666, 383, 384, 385, 386, 387, 388, 389, 390,
	391, 0, 392, 667, 0, 668, 393, 0, 394, 395,
	396, 397, 398, 669, 670, 671, 484, 0, 399, 400,
	0, 401, 402, 403, 404, 405, 0, 0, 0, 0,
	406, 407, 408, 0, 0, 409, 672, 673, 0, 674,
	0, 410, 411, 0, 675, 0, 412, 413, 414, 0,
	415, 0, 0, 0, 416, 417, 418, 419, 420, 421,
	0, 422, 424, 423, 0, 425, 676, 0, 426, 427,
	0, 0, 428, 429, 430, 431, 432, 433, 436, 0,
	0, 434, 435, 437, 438, 0, 439, 440, 442, 445,
	441, 443, 444, 446, 459, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 458, 461, 0, 460,
	0, 462, 463, 464, 465, 472, 474, 475, 470, 471,
	473, 476, 477, 479, 467, 468, 469, 0, 478, 466,
	0, 0, 0, 480, 481, 482, 0, 677, 483, 678,
	485, 486, 0, 0, 487, 0, 0, 0, 489, 490,
	491, 0, 0, 492, 493, 679, 0, 494, 0, 680,
	495, 496, 488, 497, 498, 499, 500, 501, 502, 503,
	504, 505, 0, 506, 507, 681, 508, 509, 510, 682,
	511, 512, 513, 683, 514, 684, 515, 516, 0, 517,
	518, 0, 519, 520, 521, 522, 523, 524, 525, 685,
	526, 527, 529, 528, 530, 0, 531, 0, 532, 533,
	534, 0, 0, 0, 0, 0, 535, 537, 0, 538,
	539, 540, 541, 536, 542, 543, 544, 545, 546, 0,
	547, 548, 549, 0, 550, 551, 552, 553, 554, 686,
	555, 0, 556, 557, 563, 564, 565, 558, 559, 566,
	567, 568, 569, 570, 0, 572, 573, 571, 574, 575,
	576, 0, 577, 578, 560, 561, 579, 580, 0, 581,
	582, 583, 584, 585, 586, 587, 687, 0, 588, 0,
	589, 590, 591, 592, 594, 562, 595, 600, 601, 688,
	596, 597, 598, 599, 689, 603, 604, 0, 605, 606,
	0, 602, 593, 0, 607, 608, 609, 610, 611, 612,
	613, 614, 0, 615, 690, 691, 692, 693, 0, 624,
	0, 616, 617, 618, 694, 619, 695, 0, 620, 621,
	622, 623, 0, 625, 626, 0, 0, 627, 628, 629,
	631, 632, 630, 633, 0, 634, 0, 0, 635, 636,
	637, 696, 697, 698, 0, 639, 638, 640, 641, 699,
	642, 643, 275, 0, 0, 0, 644, 645, 700, 646,
	647, 648, 0, 0, 0, 0, 0, 0, 0, 281,
	283, 282, 284, 285, 286, 287, 0, 288, 289, 0,
	0, 0, 0, 0, 649, 0, 2825, 0, 0, 290,
	291, 0, 292, 293, 294, 295, 296, 297, 650, 651,
	0, 298, 652, 299, 653, 0, 654, 300, 301, 302,
	303, 304, 305, 0, 0, 0, 306, 655, 656, 657,
	0, 307, 308, 658, 0, 0, 0, 309, 310, 311,
	312, 313, 314, 315, 0, 0, 317, 318, 319, 316,
	320, 0, 321, 0, 322, 323, 324, 325, 326, 327,
	0, 328, 329, 330, 0, 331, 332, 333, 0, 0,
	0, 0, 0, 0, 0, 334, 335, 336, 337, 338,
	0, 339, 341, 659, 660, 0, 344, 340, 342, 0,
	345, 343, 346, 0, 347, 348, 349, 0, 0, 350,
	351, 352, 0, 353, 354, 355, 0, 356, 357, 358,
	0, 359, 360, 661, 361, 362, 363, 365, 367, 364,
	366, 368, 369, 370, 371, 662, 663, 372, 0, 0,
	0, 0, 0, 0, 0, 373, 374, 375, 664, 0,
	0, 0, 376, 0, 377, 378, 379, 0, 0, 0,
	380, 381, 382, 665, 666, 383, 384, 385, 386, 387,
	388, 389, 390, 391, 0, 392, 667, 0, 668, 393,
	0, 394, 395, 396, 397, 398, 669, 670, 671, 484,
	0, 399, 400, 0, 401, 402, 403, 404, 405, 0,
	0, 0, 0, 406, 407, 408, 0, 0, 409, 672,
	673, 0, 674, 0, 410, 411, 0, 675, 0, 412,
	413, 414, 0, 415, 0, 0, 0, 416, 417, 418,
	419, 420, 421, 0, 422, 424, 423, 0, 425, 676,
	0, 426, 427, 0, 0, 428, 429, 430, 431, 432,
	433, 436, 0, 0, 434, 435, 437, 438, 0, 439,
	440, 442, 445, 441, 443, 444, 446, 459, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 458,
	461, 0, 460, 0, 462, 463, 464, 465, 472, 474,
	475, 470, 471, 473, 476, 477, 479, 467, 468, 469,
	0, 478, 466, 0, 0, 0, 480, 481, 482, 0,
	677, 483, 678, 485, 486, 0, 0, 487, 0, 0,
	0, 489, 490, 491, 0, 0, 492, 493, 679, 0,
	494, 0, 680, 495, 496, 488, 497, 498, 499, 500,
	501, 502, 503, 504, 505, 0, 506, 507, 681, 508,
	509, 510, 682, 511, 512, 513, 683, 514, 684, 515,
	516, 0, 517, 518, 0, 519, 520, 521, 522, 523,
	524, 525, 685, 526, 527, 529, 528, 530, 0, 531,
	0, 532, 533, 534, 0, 0, 0, 0, 0, 535,
	537, 0, 538, 539, 540, 541, 536, 542, 543, 544,
	545, 546, 0, 547, 548, 549, 0, 550, 551, 552,
	553, 554, 686, 555, 0, 556, 557, 563, 564, 565,
	558, 559, 566, 567, 568, 569, 570, 0, 572, 573,
	571, 574, 575, 576, 0, 577, 578, 560, 561, 579,
	580, 0, 581, 582, 583, 584, 585, 586, 587, 687,
	0, 588, 0, 589, 590, 591, 592, 594, 562, 595,
	600, 601, 688, 596, 597, 598, 599, 689, 603, 604,
	0, 605, 606, 0, 602, 593, 0, 607, 608, 609,
	610, 611, 612, 613, 614, 0, 615, 690, 691, 692,
	693, 0, 624, 0, 616, 617, 618, 694, 619, 695,
	0, 620, 621, 622, 623, 0, 625, 626, 0, 0,
	627, 628, 629, 631, 632, 630, 633, 0, 634, 0,
	0, 635, 636, 637, 696, 697, 698, 0, 639, 638,
	640, 641, 699, 642, 643, 275, 3164, 0, 0, 644,
	645, 700, 646, 647, 648, 0, 0, 0, 0, 0,
	0, 0, 281, 283, 282, 284, 285, 286, 287, 0,
	288, 289, 0, 0, 0, 0, 0, 649, 0, 0,
	0, 0, 290, 291, 0, 292, 293, 294, 295, 296,
	297, 650, 651, 0, 298, 652, 299, 653, 0, 654,
	300, 301, 302, 303, 304, 305, 0, 0, 0, 306,
	655, 656, 657, 0, 307, 308, 658, 0, 0, 0,
	309, 310, 311, 312, 313, 314, 315, 0, 0, 317,
	318, 319, 316, 320, 0, 321, 0, 322, 323, 324,
	325, 326, 327, 0, 328, 329, 330, 0, 331, 332,
	333, 0, 0, 0, 0, 0, 0, 0, 334, 335,
	336, 337, 338, 0, 339, 341, 659, 660, 0, 344,
	340, 342, 0, 345, 343, 346, 0, 347, 348, 349,
	0, 0, 350, 351, 352, 0, 353, 354, 355, 0,
	356, 357, 358, 0, 359, 360, 661, 361, 362, 363,
	365, 367, 364, 366, 368, 369, 370, 371, 662, 663,
	372, 0, 0, 0, 0, 0, 0, 0, 373, 374,
	375, 664, 0, 0, 0, 376, 0, 377, 378, 379,
	0, 0, 0, 380, 381, 382, 665, 666, 383, 384,
	385, 386, 387, 388, 389, 390, 391, 0, 392, 667,
	0, 668, 393, 0, 394, 395, 396, 397, 398, 669,
	670, 671, 484, 0, 399, 400, 0, 401, 402, 403,
	404, 405, 0, 0, 0, 0, 406, 407, 408, 0,
	0, 409, 672, 673, 0, 674, 0, 410, 411, 0,
	675, 0, 412, 413, 414, 0, 415, 0, 0, 0,
	416, 417, 418, 419, 420, 421, 0, 422, 424, 423,
	0, 425, 676, 0, 426, 427, 0, 0, 428, 429,
	430, 431, 432, 433, 436, 0, 0, 434, 435, 437,
	438, 0, 439, 440, 442, 445, 441, 443, 444, 446,
	459, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 458, 461, 0, 460, 0, 462, 463, 464,
	465, 472, 474, 475, 470, 471, 473, 476, 477, 479,
	467, 468, 469, 0, 478, 466, 0, 0, 0, 480,
	481, 482, 0, 677, 483, 678, 485, 486, 0, 0,
	487, 0, 0, 0, 489, 490, 3161, 0, 0, 492,
	493, 679, 0, 494, 0, 680, 495, 496, 488, 497,
	498, 499, 500, 501, 502, 503, 504, 505, 0, 506,
	507, 681, 508, 509, 510, 682, 511, 512, 513, 683,
	514, 684, 515, 516, 0, 517, 518, 0, 519, 520,
	521, 522, 523, 524, 525, 685, 526, 527, 529, 528,
	530, 0, 531, 0, 532, 533, 534, 0, 0, 0,
	0, 0, 535, 537, 0, 538, 539, 540, 541, 536,
	542, 543, 544, 545, 546, 0, 547, 548, 549, 0,
	550, 551, 552, 553, 554, 686, 555, 0, 556, 557,
	563, 564, 565, 558, 559, 566, 567, 568, 569, 570,
	0, 572, 573, 571, 574, 575, 576, 0, 577, 578,
	560, 561, 579, 580, 0, 581, 582, 583, 584, 585,
	586, 587, 687, 0, 588, 0, 589, 590, 591, 592,
	594, 562, 595, 600, 601, 688, 596, 597, 598, 599,
	689, 603, 604, 0, 605, 606, 0, 602, 593, 0,
	607, 608, 609, 610, 611, 612, 613, 614, 0, 615,
	690, 691, 692, 693, 0, 624, 0, 616, 617, 618,
	694, 619, 695, 0, 620, 621, 622, 623, 0, 625,
	626, 0, 0, 627, 628, 629, 631, 632, 630, 633,
	0, 634, 0, 0, 635, 636, 637, 696, 697, 698,
	0, 639, 638, 640, 641, 699, 642, 643, 275, 0,
	0, 0, 644, 645, 700, 646, 647, 648, 0, 0,
	0, 0, 0, 0, 0, 281, 283, 282, 284, 285,
	286, 287, 0, 288, 289, 0, 0, 0, 0, 0,
	649, 0, 0, 0, 0, 290, 291, 0, 292, 293,
	294, 295, 296, 297, 650, 651, 0, 298, 652, 299,
	653, 0, 654, 300, 301, 302, 303, 304, 305, 0,
	0, 0, 306, 655, 656, 657, 0, 307, 308, 658,
	0, 0, 0, 309, 310, 311, 312, 313, 314, 315,
	0, 0, 317, 318, 319, 316, 320, 0, 321, 0,
	322, 323, 324, 325, 326, 327, 0, 328, 329, 330,
	0, 331, 332, 333, 0, 0, 0, 0, 0, 0,
	0, 334, 335, 336, 337, 338, 0, 339, 341, 659,
	660, 0, 344, 340, 342, 0, 345, 343, 346, 0,
	347, 348, 349, 0, 0, 350, 351, 352, 0, 353,
	354, 355, 0, 356, 357, 358, 0, 359, 360, 661,
	361, 362, 363, 365, 367, 364, 366, 368, 369, 370,
	371, 662, 663, 372, 0, 0, 0, 0, 0, 0,
	0, 373, 374, 375, 664, 0, 0, 0, 376, 0,
	377, 378, 379, 0, 0, 0, 380, 381, 382, 665,
	666, 383, 384, 385, 386, 387, 388, 389, 390, 391,
	0, 392, 667, 0, 668, 393, 0, 394, 395, 396,
	397, 398, 669, 670, 671, 484, 0, 399, 400, 0,
	401, 402, 403, 404, 405, 0, 0, 0, 0, 406,
	407, 408, 0, 0, 409, 672, 673, 0, 674, 0,
	410, 411, 0, 675, 0, 412, 413, 414, 0, 415,
	0, 0, 0, 416, 417, 418, 419, 420, 421, 0,
	422, 424, 423, 0, 425, 676, 0, 426, 427, 0,
	0, 428, 429, 430, 431, 432, 433, 436, 0, 0,
	434, 435, 437, 438, 0, 439, 440, 442, 445, 441,
	443, 444, 446, 459, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 458, 461, 0, 460, 0,
	462, 463, 464, 465, 472, 474, 475, 470, 471, 473,
	476, 477, 479, 467, 468, 469, 0, 478, 466, 0,
	0, 0, 480, 481, 482, 0, 677, 483, 678, 485,
	486, 0, 0, 487, 0, 0, 0, 489, 490, 491,
	0, 0, 492, 493, 679, 0, 494, 0, 680, 495,
	496, 488, 497, 498, 499, 500, 501, 502, 503, 504,
	505, 0, 506, 507, 681, 508, 509, 510, 682, 511,
	512, 513, 683, 514, 684, 515, 516, 2240, 517, 518,
	0, 519, 520, 521, 522, 523, 524, 525, 685, 526,
	527, 529, 528, 530, 0, 531, 0, 532, 533, 534,
	0, 0, 0, 0, 0, 535, 537, 0, 538, 539,
	540, 541, 536, 542, 543, 544, 545, 546, 0, 547,
	548, 549, 0, 792, 551, 552, 553, 554, 686, 555,
	0, 556, 557, 563, 564, 565, 558, 559, 791, 567,
	568, 569, 570, 0, 572, 573, 571, 574, 575, 576,
	0, 577, 578, 560, 561, 579, 580, 0, 581, 582,
	583, 584, 585, 586, 587, 687, 0, 588, 0, 589,
	590, 591, 592, 594, 562, 595, 600, 601, 688, 596,
	597, 598, 599, 689, 603, 604, 0, 605, 606, 0,
	602, 593, 0, 607, 608, 609, 610, 611, 612, 613,
	614, 0, 615, 789, 691, 692, 693, 0, 624, 0,
	616, 617, 618, 694, 619, 695, 0, 620, 621, 622,
	623, 0, 625, 626, 0, 0, 627, 628, 629, 631,
	632, 630, 633, 0, 634, 0, 0, 635, 636, 637,
	696, 697, 698, 0, 639, 638, 640, 641, 699, 642,
	643, 275, 0, 0, 0, 644, 645, 700, 646, 647,
	648, 0, 0, 0, 0, 0, 0, 0, 281, 283,
	282, 284, 285, 286, 287, 2398, 288, 289, 0, 0,
	0, 0, 0, 649, 0, 0, 0, 0, 290, 291,
	0, 292, 293, 294, 295, 296, 297, 650, 651, 0,
	298, 652, 299, 653, 0, 654, 300, 301, 302, 303,
	304, 305, 0, 0, 0, 306, 655, 656, 657, 0,
	307, 308, 658, 0, 0, 0, 309, 310, 311, 312,
	313, 314, 315, 0, 0, 317, 318, 319, 316, 320,
	0, 321, 0, 322, 323, 324, 325, 326, 327, 0,
	328, 329, 330, 0, 331, 332, 333, 0, 0, 0,
	0, 0, 0, 0, 334, 335, 336, 337, 338, 0,
	339, 341, 659, 660, 0, 344, 340, 342, 0, 345,
	343, 346, 0, 347, 348, 349, 0, 0, 350, 351,
	352, 0, 353, 354, 355, 0, 356, 357, 358, 0,
	359, 360, 661, 361, 362, 363, 365, 367, 364, 366,
	368, 369, 370, 371, 662, 663, 372, 0, 0, 0,
	0, 0, 0, 0, 373, 374, 375, 664, 0, 0,
	0, 376, 0, 377, 378, 379, 0, 0, 0, 380,
	381, 382, 665, 666, 383, 384, 385, 386, 387, 388,
	389, 390, 391, 0, 392, 667, 0, 668, 393, 0,
	394, 395, 396, 397, 398, 669, 670, 671, 484, 0,
	399, 400, 0, 401, 402, 403, 404, 405, 0, 0,
	0, 0, 406, 407, 408, 0, 0, 409, 672, 673,
	0, 674, 0, 410, 411, 0, 675, 0, 412, 413,
	414, 0, 415, 0, 0, 0, 416, 417, 418, 419,
	420, 421, 0, 422, 424, 423, 0, 425, 676, 0,
	426, 427, 0, 0, 428, 429, 430, 431, 432, 433,
	436, 0, 0, 434, 435, 437, 438, 0, 439, 440,
	442, 445, 441, 443, 444, 446, 459, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 458, 461,
	0, 460, 0, 462, 463, 464, 465, 472, 474, 475,
	470, 471, 473, 476, 477, 479, 467, 468, 469, 0,
	478, 466, 0, 0, 0, 480, 481, 482, 0, 677,
	483, 678, 485, 486, 0, 0, 487, 0, 0, 0,
	489, 490, 491, 0, 0, 492, 493, 679, 0, 494,
	0, 680, 495, 496, 488, 497, 498, 499, 500, 501,
	502, 503, 504, 505, 0, 506, 507, 681, 508, 509,
	510, 682, 511, 512, 513, 683, 514, 684, 515, 516,
	0, 517, 518, 0, 519, 520, 521, 522, 523, 524,
	525, 685, 526, 527, 529, 528, 530, 0, 531, 0,
	532, 533, 534, 0, 0, 0, 0, 0, 535, 537,
	0, 538, 539, 540, 541, 536, 542, 543, 544, 545,
	546, 0, 547, 548, 549, 0, 550, 551, 552, 553,
	554, 686, 555, 0, 556, 557, 563, 564, 565, 558,
	559, 566, 567, 568, 569, 570, 0, 572, 573, 571,
	574, 575, 576, 0, 577, 578, 560, 561, 579, 580,
	0, 581, 582, 583, 584, 585, 586, 587, 687, 0,
	588, 0, 589, 590, 591, 592, 594, 562, 595, 600,
	601, 688, 596, 597, 598, 599, 689, 603, 604, 0,
	605, 606, 0, 602, 593, 0, 607, 608, 609, 610,
	611, 612, 613, 614, 0, 615, 690, 691, 692, 693,
	0, 624, 0, 616, 617, 618, 694, 619, 695, 0,
	620, 621, 622, 623, 0, 625, 626, 0, 0, 627,
	628, 629, 631, 632, 630, 633, 0, 634, 0, 0,
	635, 636, 637, 696, 697, 698, 0, 639, 638, 640,
	641, 699, 642, 643, 2386, 0, 275, 0, 644, 645,
	700, 646, 647, 648, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 281, 283, 282, 284, 285, 286, 287,
	0, 288, 289, 0, 0, 0, 0, 0, 649, 0,
	0, 0, 0, 290, 291, 0, 292, 293, 294, 295,
	296, 297, 650, 651, 0, 298, 652, 299, 653, 0,
	654, 300, 301, 302, 303, 304, 305, 0, 0, 0,
	306, 655, 656, 657, 0, 307, 308, 658, 0, 0,
	0, 309, 310, 311, 312, 313, 314, 315, 0, 0,
	317, 318, 319, 316, 320, 0, 321, 0, 322, 323,
	324, 325, 326, 327, 0, 328, 329, 330, 0, 331,
	332, 333, 0, 0, 0, 0, 0, 0, 0, 334,
	335, 336, 337, 338, 0, 339, 341, 659, 660, 0,
	344, 340, 342, 0, 345, 343, 346, 0, 347, 348,
	349, 0, 0, 350, 351, 352, 0, 353, 354, 355,
	0, 356, 357, 358, 0, 359, 360, 661, 361, 362,
	363, 365, 367, 364, 366, 368, 369, 370, 371, 662,
	663, 372, 0, 0, 0, 0, 0, 0, 0, 373,
	374, 375, 664, 0, 0, 0, 376, 0, 377, 378,
	379, 0, 0, 0, 380, 381, 382, 665, 666, 383,
	384, 385, 386, 387, 388, 389, 390, 391, 0, 392,
	667, 0, 668, 393, 0, 394, 395, 396, 397, 398,
	669, 670, 671, 484, 0, 399, 400, 0, 401, 402,
	403, 404, 405, 0, 0, 0, 0, 406, 407, 408,
	0, 0, 409, 672, 673, 0, 674, 0, 410, 411,
	0, 675, 0, 412, 413, 414, 0, 415, 0, 0,
	0, 416, 417, 418, 419, 420, 421, 0, 422, 424,
	423, 0, 425, 676, 0, 426, 427, 0, 0, 428,
	429, 430, 431, 432, 433, 436, 0, 0, 434, 435,
	437, 438, 0, 439, 440, 442, 445, 441, 443, 444,
	446, 459, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 458, 461, 0, 460, 0, 462, 463,
	464, 465, 472, 474, 475, 470, 471, 473, 476, 477,
	479, 467, 468, 469, 0, 478, 466, 0, 0, 0,
	480, 481, 482, 0, 677, 483, 678, 485, 486, 0,
	0, 487, 0, 0, 0, 489, 490, 491, 0, 0,
	492, 493, 679, 0, 494, 0, 680, 495, 496, 488,
	497, 498, 499, 500, 501, 502, 503, 504, 505, 0,
	506, 507, 681, 508, 509, 510, 682, 511, 512, 513,
	683, 514, 684, 515, 516, 0, 517, 518, 0, 519,
	520, 521, 522, 523, 524, 525, 685, 526, 527, 529,
	528, 530, 0, 531, 0, 532, 533, 534, 0, 0,
	0, 0, 0, 535, 537, 0, 538, 539, 540, 541,
	536, 542, 543, 544, 545, 546, 0, 547, 548, 549,
	0, 550, 551, 552, 553, 554, 686, 555, 0, 556,
	557, 563, 564, 565, 558, 559, 566, 567, 568, 569,
	570, 0, 572, 573, 571, 574, 575, 576, 0, 577,
	578, 560, 561, 579, 580, 0, 581, 582, 583, 584,
	585, 586, 587, 687, 0, 588, 0, 589, 590, 591,
	592, 594, 562, 595, 600, 601, 688, 596, 597, 598,
	599, 689, 603, 604, 0, 605, 606, 0, 602, 593,
	0, 607, 608, 609, 610, 611, 612, 613, 614, 0,
	615, 690, 691, 692, 693, 0, 624, 0, 616, 617,
	618, 694, 619, 695, 0, 620, 621, 622, 623, 0,
	625, 626, 0, 0, 627, 628, 629, 631, 632, 630,
	633, 0, 634, 0, 0, 635, 636, 637, 696, 697,
	698, 0, 639, 638, 640, 641, 699, 642, 643, 1683,
	0, 275, 0, 644, 645, 700, 646, 647, 648, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 281, 283,
	282, 284, 285, 286, 287, 0, 288, 289, 0, 0,
	0, 0, 0, 649, 0, 0, 0, 0, 290, 291,
	0, 292, 293, 294, 295, 296, 297, 650, 651, 0,
	298, 652, 299, 653, 0, 654, 300, 301, 302, 303,
	304, 305, 0, 0, 0, 306, 655, 656, 657, 0,
	307, 308, 658, 0, 0, 0, 309, 310, 311, 312,
	313, 314, 315, 0, 0, 317, 318, 319, 316, 320,
	0, 321, 0, 322, 323, 324, 325, 326, 327, 0,
	328, 329, 330, 0, 331, 332, 333, 0, 0, 0,
	0, 0, 0, 0, 334, 335, 336, 337, 338, 0,
	339, 341, 659, 660, 0, 344, 340, 342, 0, 345,
	343, 346, 0, 347, 348, 349, 0, 0, 350, 351,
	352, 0, 353, 354, 355, 0, 356, 357, 358, 0,
	359, 360, 661, 361, 362, 363, 365, 367, 364, 366,
	368, 369, 370, 371, 662, 663, 372, 0, 0, 0,
	0, 0, 0, 0, 373, 374, 375, 664, 0, 0,
	0, 376, 0, 377, 378, 379, 0, 0, 0, 380,
	381, 382, 665, 666, 383, 384, 385, 386, 387, 388,
	389, 390, 391, 0, 392, 667, 0, 668, 393, 0,
	394, 395, 396, 397, 398, 669, 670, 671, 484, 0,
	399, 400, 0, 401, 402, 403, 404, 405, 0, 0,
	0, 0, 406, 407, 408, 0, 0, 409, 672, 673,
	0, 674, 0, 410, 411, 0, 675, 0, 412, 413,
	414, 0, 415, 0, 0, 0, 416, 417, 418, 419,
	420, 421, 0, 422, 424, 423, 0, 425, 676, 0,
	426, 427, 0, 0, 428, 429, 430, 431, 432, 433,
	436, 0, 0, 434, 435, 437, 438, 0, 439, 440,
	442, 445, 441, 443, 444, 446, 459, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 458, 461,
	0, 460, 0, 462, 463, 464, 465, 472, 474, 475,
	470, 471, 473, 476, 477, 479, 467, 468, 469, 0,
	478, 466, 0, 0, 0, 480, 481, 482, 0, 677,
	483, 678, 485, 486, 0, 0, 487, 0, 0, 0,
	489, 490, 491, 0, 0, 492, 493, 679, 0, 494,
	0, 680, 495, 496, 488, 497, 498, 499, 500, 501,
	502, 503, 504, 505, 0, 506, 507, 681, 508, 509,
	510, 682, 511, 512, 513, 683, 514, 684, 515, 516,
	0, 517, 518, 0, 519, 520, 521, 522, 523, 524,
	525, 685, 526, 527, 529, 528, 530, 0, 531, 0,
	532, 533, 534, 0, 0, 0, 0, 0, 535, 537,
	0, 538, 539, 540, 541, 536, 542, 543, 544, 545,
	546, 0, 547, 548, 549, 0, 550, 551, 552, 553,
	554, 686, 555, 0, 556, 557, 563, 564, 565, 558,
	559, 566, 567, 568, 569, 570, 0, 572, 573, 571,
	574, 575, 576, 0, 577, 578, 560, 561, 579, 580,
	0, 581, 582, 583, 584, 585, 586, 587, 687, 0,
	588, 0, 589, 590, 591, 592, 594, 562, 595, 600,
	601, 688, 596, 597, 598, 599, 689, 603, 604, 0,
	605, 606, 0, 602, 593, 0, 607, 608, 609, 610,
	611, 612, 613, 614, 0, 615, 690, 691, 692, 693,
	0, 624, 0, 616, 617, 618, 694, 619, 695, 0,
	620, 621, 622, 623, 0, 625, 626, 0, 0, 627,
	628, 629, 631, 632, 630, 633, 0, 634, 0, 0,
	635, 636, 637, 696, 697, 698, 0, 639, 638, 640,
	641, 699, 642, 643, 1676, 0, 275, 0, 644, 645,
	700, 646, 647, 648, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 281, 283, 282, 284, 285, 286, 287,
	0, 288, 289, 0, 0, 0, 0, 0, 649, 0,
	0, 0, 0, 290, 291, 0, 292, 293, 294, 295,
	296, 297, 650, 651, 0, 298, 652, 299, 653, 0,
	654, 300, 301, 302, 303, 304, 305, 0, 0, 0,
	306, 655, 656, 657, 0, 307, 308, 658, 0, 0,
	0, 309, 310, 311, 312, 313, 314, 315, 0, 0,
	317, 318, 319, 316, 320, 0, 321, 0, 322, 323,
	324, 325, 326, 327, 0, 328, 329, 330, 0, 331,
	332, 333, 0, 0, 0, 0, 0, 0, 0, 334,
	335, 336, 337, 338, 0, 339, 341, 659, 660, 0,
	344, 340, 342, 0, 345, 343, 346, 0, 347, 348,
	349, 0, 0, 350, 351, 352, 0, 353, 354, 355,
	0, 356, 357, 358, 0, 359, 360, 661, 361, 362,
	363, 365, 367, 364, 366, 368, 369, 370, 371, 662,
	663, 372, 0, 0, 0, 0, 0, 0, 0, 373,
	374, 375, 664, 0, 0, 0, 376, 0, 377, 378,
	379, 0, 0, 0, 380, 381, 382, 665, 666, 383,
	384, 385, 386, 387, 388, 389, 390, 391, 0, 392,
	667, 0, 668, 393, 0, 394, 395, 396, 397, 398,
	669, 670, 671, 484, 0, 399, 400, 0, 401, 402,
	403, 404, 405, 0, 0, 0, 0, 406, 407, 408,
	0, 0, 409, 672, 673, 0, 674, 0, 410, 411,
	0, 675, 0, 412, 413, 414, 0, 415, 0, 0,
	0, 416, 417, 418, 419, 420, 421, 0, 422, 424,
	423, 0, 425, 676, 0, 426, 427, 0, 0, 428,
	429, 430, 431, 432, 433, 436, 0, 0, 434, 435,
	437, 438, 0, 439, 440, 442, 445, 441, 443, 444,
	446, 459, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 458, 461, 0, 460, 0, 462, 463,
	464, 465, 472, 474, 475, 470, 471, 473, 476, 477,
	479, 467, 468, 469, 0, 478, 466, 0, 0, 0,
	480, 481, 482, 0, 677, 483, 678, 485, 486, 0,
	0, 487, 0, 0, 0, 489, 490, 491, 0, 0,
	492, 493, 679, 0, 494, 0, 680, 495, 496, 488,
	497, 498, 499, 500, 501, 502, 503, 504, 505, 0,
	506, 507, 681, 508, 509, 510, 682, 511, 512, 513,
	683, 514, 684, 515, 516, 0, 517, 518, 0, 519,
	520, 521, 522, 523, 524, 525, 685, 526, 527, 529,
	528, 530, 0, 531, 0, 532, 533, 534, 0, 0,
	0, 0, 0, 535, 537, 0, 538, 539, 540, 541,
	536, 542, 543, 544, 545, 546, 0, 547, 548, 549,
	0, 550, 551, 552, 553, 554, 686, 555, 0, 556,
	557, 563, 564, 565, 558, 559, 566, 567, 568, 569,
	570, 0, 572, 573, 571, 574, 575, 576, 0, 577,
	578, 560, 561, 579, 580, 0, 581, 582, 583, 584,
	585, 586, 587, 687, 0, 588, 0, 589, 590, 591,
	592, 594, 562, 595, 600, 601, 688, 596, 597, 598,
	599, 689, 603, 604, 0, 605, 606, 0, 602, 593,
	0, 607, 608, 609, 610, 611, 612, 613, 614, 0,
	615, 690, 691, 692, 693, 0, 624, 0, 616, 617,
	618, 694, 619, 695, 0, 620, 621, 622, 623, 0,
	625, 626, 0, 0, 627, 628, 629, 631, 632, 630,
	633, 0, 634, 0, 0, 635, 636, 637, 696, 697,
	698, 0, 639, 638, 640, 641, 699, 642, 643, 783,
	0, 275, 0, 644, 645, 700, 646, 647, 648, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 281, 283,
	282, 284, 285, 286, 287, 0, 288, 289, 0, 0,
	0, 0, 0, 649, 0, 0, 0, 0, 290, 291,
	0, 292, 293, 294, 295, 296, 297, 650, 651, 0,
	298, 652, 299, 653, 0, 654, 300, 301, 302, 303,
	304, 305, 0, 0, 0, 306, 655, 656, 657, 0,
	307, 779, 658, 0, 0, 0, 309, 310, 311, 312,
	313, 314, 315, 0, 0, 317, 318, 319, 316, 320,
	0, 321, 0, 322, 323, 324, 325, 326, 327, 0,
	328, 329, 330, 0, 331, 332, 333, 0, 0, 0,
	0, 0, 0, 0, 334, 335, 336, 337, 338, 0,
	339, 341, 659, 660, 0, 344, 340, 342, 0, 345,
	343, 346, 0, 347, 348, 349, 0, 0, 350, 351,
	352, 0, 353, 354, 355, 0, 356, 357, 358, 0,
	359, 360, 661, 361, 362, 363, 365, 367, 364, 366,
	368, 369, 370, 371, 662, 663, 372, 0, 0, 0,
	0, 0, 0, 0, 373, 374, 375, 664, 0, 0,
	0, 376, 0, 377, 378, 379, 0, 0, 0, 380,
	381, 382, 665, 666, 383, 384, 385, 386, 387, 388,
	389, 390, 391, 0, 392, 667, 0, 668, 393, 0,
	394, 395, 396, 397, 398, 669, 670, 671, 484, 0,
	399, 400, 0, 401, 402, 403, 404, 405, 0, 0,
	0, 0, 406, 407, 408, 0, 0, 409, 672, 673,
	0, 674, 0, 410, 411, 0, 675, 0, 412, 413,
	414, 0, 415, 0, 0, 0, 416, 417, 418, 419,
	420, 421, 0, 422, 424, 423, 0, 425, 676, 0,
	426, 427, 0, 0, 428, 429, 430, 431, 432, 784,
	436, 0, 0, 434, 435, 437, 438, 0, 439, 440,
	442, 445, 441, 443, 444, 446, 459, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 458, 461,
	0, 793, 0, 462, 463, 464, 465, 472, 474, 475,
	470, 471, 473, 476, 477, 479, 467, 468, 469, 0,
	478, 466, 0, 0, 0, 480, 481, 482, 0, 677,
	483, 678, 485, 486, 0, 0, 487, 0, 0, 0,
	489, 490, 491, 0, 0, 492, 493, 679, 0, 494,
	0, 680, 495, 496, 488, 497, 498, 499, 500, 501,
	502, 503, 504, 505, 0, 506, 507, 681, 508, 509,
	510, 682, 511, 512, 513, 683, 514, 684, 515, 516,
	0, 517, 518, 0, 519, 520, 521, 522, 523, 524,
	525, 685, 526, 527, 529, 528, 530, 0, 531, 0,
	532, 533, 534, 0, 0, 0, 0, 0, 535, 537,
	0, 538, 539, 540, 541, 536, 542, 543, 544, 545,
	546, 0, 547, 548, 549, 0, 792, 551, 552, 553,
	554, 686, 555, 0, 556, 557, 563, 564, 565, 558,
	559, 791, 567, 568, 569, 570, 0, 572, 573, 571,
	574, 1661, 576, 0, 577, 578, 560, 561, 579, 580,
	0, 581, 582, 583, 584, 585, 586, 587, 687, 0,
	588, 0, 589, 590, 591, 592, 594, 562, 595, 600,
	601, 688, 596, 597, 598, 599, 689, 603, 604, 0,
	605, 606, 0, 602, 593, 0, 607, 608, 609, 610,
	611, 612, 613, 614, 0, 615, 789, 691, 692, 693,
	0, 624, 0, 616, 617, 618, 694, 619, 695, 0,
	620, 621, 622, 623, 0, 625, 626, 0, 0, 627,
	628, 629, 631, 632, 630, 633, 0, 634, 0, 0,
	635, 636, 637, 696, 697, 698, 0, 639, 638, 640,
	641, 699, 642, 643, 1634, 0, 275, 0, 644, 645,
	700, 646, 647, 648, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 281, 283, 282, 284, 285, 286, 287,
	0, 288, 289, 0, 0, 0, 0, 0, 649, 0,
	0, 0, 0, 290, 291, 0, 292, 293, 294, 295,
	296, 297, 650, 651, 0, 298, 652, 299, 653, 0,
	654, 300, 301, 302, 303, 304, 305, 0, 0, 0,
	306, 655, 656, 657, 0, 307, 308, 658, 0, 0,
	0, 309, 310, 311, 312, 313, 314, 315, 0, 0,
	317, 318, 319, 316, 320, 0, 321, 0, 322, 323,
	324, 325, 326, 327, 0, 328, 329, 330, 0, 331,
	332, 333, 0, 0, 0, 0, 0, 0, 0, 334,
	335, 336, 337, 338, 0, 339, 341, 659, 660, 0,
	344, 340, 342, 0, 345, 343, 346, 0, 347, 348,
	349, 0, 0, 350, 351, 352, 0, 353, 354, 355,
	0, 356, 357, 358, 0, 359, 360, 661, 361, 362,
	363, 365, 367, 364, 366, 368, 369, 370, 371, 662,
	663, 372, 0, 0, 0, 0, 0, 0, 0, 373,
	374, 375, 664, 0, 0, 0, 376, 0, 377, 378,
	379, 0, 0, 0, 380, 381, 382, 665, 666, 383,
	384, 385, 386, 387, 388, 389, 390, 391, 0, 392,
	667, 0, 668, 393, 0, 394, 395, 396, 397, 398,
	1633, 670, 671, 484, 0, 399, 400, 0, 401, 402,
	403, 404, 405, 0, 0, 0, 0, 406, 407, 408,
	0, 0, 409, 672, 673, 0, 674, 0, 410, 411,
	0, 675, 0, 412, 413, 414, 0, 415, 0, 0,
	0, 416, 417, 418, 419, 420, 421, 0, 422, 424,
	423, 0, 425, 676, 0, 426, 427, 0, 0, 428,
	429, 430, 431, 432, 433, 436, 0, 0, 434, 435,
	437, 438, 0, 439, 440, 442, 445, 441, 443, 444,
	446, 459, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 458, 461, 0, 460, 0, 462, 463,
	464, 465, 472, 474, 475, 470, 471, 473, 476, 477,
	479, 467, 468, 469, 0, 478, 466, 0, 0, 0,
	480, 481, 482, 0, 677, 483, 678, 485, 486, 0,
	0, 487, 0, 0, 0, 489, 490, 491, 0, 0,
	492, 493, 679, 0, 494, 0, 680, 495, 496, 488,
	497, 498, 499, 500, 501, 502, 503, 504, 505, 0,
	506, 507, 681, 508, 509, 510, 682, 511, 512, 513,
	683, 514, 684, 515, 516, 0, 517, 518, 0, 519,
	520, 521, 522, 523, 524, 525, 685, 526, 527, 529,
	528, 530, 0, 531, 0, 532, 533, 534, 0, 0,
	0, 0, 0, 535, 537, 0, 538, 539, 540, 541,
	536, 542, 543, 544, 545, 546, 0, 547, 548, 549,
	0, 550, 551, 552, 553, 554, 686, 555, 0, 556,
	557, 563, 564, 565, 558, 559, 566, 567, 568, 569,
	570, 0, 572, 573, 571, 574, 575, 576, 0, 577,
	578, 560, 561, 579, 580, 0, 581, 582, 583, 584,
	585, 586, 587, 687, 0, 588, 0, 589, 590, 591,
	592, 594, 562, 595, 600, 601, 688, 596, 597, 598,
	599, 689, 603, 604, 0, 605, 606, 0, 602, 593,
	0, 607, 608, 609, 610, 611, 612, 613, 614, 0,
	615, 690, 691, 692, 693, 0, 624, 0, 616, 617,
	618, 694, 619, 695, 0, 620, 621, 622, 623, 0,
	625, 626, 0, 0, 627, 628, 629, 631, 632, 630,
	633, 0, 634, 0, 0, 635, 636, 637, 696, 697,
	698, 0, 639, 638, 640, 641, 699, 642, 643, 1618,
	0, 275, 0, 644, 645, 700, 646, 647, 648, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 281, 283,
	282, 284, 285, 286, 287, 0, 288, 289, 0, 0,
	0, 0, 0, 649, 0, 0, 0, 0, 290, 291,
	0, 292, 293, 294, 295, 296, 297, 650, 651, 0,
	298, 652, 299, 653, 0, 654, 300, 301, 302, 303,
	304, 305, 0, 0, 0, 306, 655, 656, 657, 0,
	307, 308, 658, 0, 0, 0, 309, 310, 311, 312,
	313, 314, 315, 0, 0, 317, 318, 319, 316, 320,
	0, 321, 0, 322, 323, 324, 325, 326, 327, 0,
	328, 329, 330, 0, 331, 332, 333, 0, 0, 0,
	0, 0, 0, 0, 334, 335, 336, 337, 338, 0,
	339, 341, 659, 660, 0, 344, 340, 342, 0, 345,
	343, 346, 0, 347, 348, 349, 0, 0, 350, 351,
	352, 0, 353, 354, 355, 0, 356, 357, 358, 0,
	359, 360, 661, 361, 362, 363, 365, 367, 364, 366,
	368, 369, 370, 371, 662, 663, 372, 0, 0, 0,
	0, 0, 0, 0, 373, 374, 375, 664, 0, 0,
	0, 376, 0, 377, 378, 379, 0, 0, 0, 380,
	381, 382, 665, 666, 383, 384, 385, 386, 387, 388,
	389, 390, 391, 0, 392, 667, 0, 668, 393, 0,
	394, 395, 396, 397, 398, 1616, 670, 671, 484, 0,
	399, 400, 0, 401, 402, 403, 404, 405, 0, 0,
	0, 0, 406, 407, 408, 0, 0, 409, 672, 673,
	0, 674, 0, 410, 411, 0, 675, 0, 412, 413,
	414, 0, 415, 0, 0, 0, 416, 417, 418, 419,
	420, 421, 0, 422, 424, 423, 0, 425, 676, 0,
	426, 427, 0, 0, 428, 429, 430, 431, 432, 433,
	436, 0, 0, 434, 435, 437, 438, 0, 439, 440,
	442, 445, 441, 443, 444, 446, 459, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 458, 461,
	0, 460, 0, 462, 463, 464, 465, 472, 474, 475,
	470, 471, 473, 476, 477, 479, 467, 468, 469, 0,
	478, 466, 0, 0, 0, 480, 481, 482, 0, 677,
	483, 678, 485, 486, 0, 0, 487, 0, 0, 0,
	489, 490, 491, 0, 0, 492, 493, 679, 0, 494,
	0, 680, 495, 496, 488, 497, 498, 499, 500, 501,
	502, 503, 504, 505, 0, 506, 507, 681, 508, 509,
	510, 682, 511, 512, 513, 683, 514, 684, 515, 516,
	0, 517, 518, 0, 519, 520, 521, 522, 523, 524,
	525, 685, 526, 527, 529, 528, 530, 0, 531, 0,
	532, 533, 534, 0, 0, 0, 0, 0, 535, 537,
	0, 538, 539, 540, 541, 536, 542, 543, 544, 545,
	546, 0, 547, 548, 549, 0, 550, 551, 552, 553,
	554, 686, 555, 0, 556, 557, 563, 564, 565, 558,
	559, 566, 567, 568, 569, 570, 0, 572, 573, 571,
	574, 575, 576, 0, 577, 578, 560, 561, 579, 580,
	0, 581, 582, 583, 584, 585, 586, 587, 687, 0,
	588, 0, 589, 590, 591, 592, 594, 562, 595, 600,
	601, 688, 596, 597, 598, 599, 689, 603, 604, 0,
	605, 606, 0, 602, 593, 0, 607, 608, 609, 610,
	611, 612, 613, 614, 0, 615, 690, 691, 692, 693,
	0, 624, 0, 616, 617, 618, 694, 619, 695, 0,
	620, 621, 622, 623, 0, 625, 626, 0, 0, 627,
	628, 629, 631, 632, 630, 633, 0, 634, 0, 0,
	635, 636, 637, 696, 697, 698, 0, 639, 638, 640,
	641, 699, 642, 643, 1611, 0, 275, 0, 644, 645,
	700, 646, 647, 648, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 281, 283, 282, 284, 285, 286, 287,
	0, 288, 289, 0, 0, 0, 0, 0, 649, 0,
	0, 0, 0, 290, 291, 0, 292, 293, 294, 295,
	296, 297, 650, 651, 0, 298, 652, 299, 653, 0,
	654, 300, 301, 302, 303, 304, 305, 0, 0, 0,
	306, 655, 656, 657, 0, 307, 308, 658, 0, 0,
	0, 309, 310, 311, 312, 313, 314, 315, 0, 0,
	317, 318, 319, 316, 320, 0, 321, 0, 322, 323,
	324, 325, 326, 327, 0, 328, 329, 330, 0, 331,
	332, 333, 0, 0, 0, 0, 0, 0, 0, 334,
	335, 336, 337, 338, 0, 339, 341, 659, 660, 0,
	344, 340, 342, 0, 345, 343, 346, 0, 347, 348,
	349, 0, 0, 350, 351, 352, 0, 353, 354, 355,
	0, 356, 357, 358, 0, 359, 360, 661, 361, 362,
	363, 365, 367, 364, 366, 368, 369, 370, 371, 662,
	663, 372, 0, 0, 0, 0, 0, 0, 0, 373,
	374, 375, 664, 0, 0, 0, 376, 0, 377, 378,
	379, 0, 0, 0, 380, 381, 382, 665, 666, 383,
	384, 385, 386, 387, 388, 389, 390, 391, 0, 392,
	667, 0, 668, 393, 0, 394, 395, 396, 397, 398,
	669, 670, 671, 484, 0, 399, 400, 0, 401, 402,
	403, 404, 405, 0, 0, 0, 0, 406, 407, 408,
	0, 0, 409, 672, 673, 0, 674, 0, 410, 411,
	0, 675, 0, 412, 413, 414, 0, 415, 0, 0,
	0, 416, 417, 418, 419, 420, 421, 0, 422, 424,
	423, 0, 425, 676, 0, 426, 427, 0, 0, 428,
	429, 430, 431, 432, 433, 436, 0, 0, 434, 435,
	437, 438, 0, 439, 440, 442, 445, 441, 443, 444,
	446, 459, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 458, 461, 0, 460, 0, 462, 463,
	464, 465, 472, 474, 475, 470, 471, 473, 476, 477,
	479, 467, 468, 469, 0, 478, 466, 0, 0, 0,
	480, 481, 482, 0, 677, 483, 678, 485, 486, 0,
	0, 487, 0, 0, 0, 489, 490, 491, 0, 0,
	492, 493, 679, 0, 494, 0, 680, 495, 496, 488,
	497, 498, 499, 500, 501, 502, 503, 504, 505, 0,
	506, 507, 681, 508, 509, 510, 682, 511, 512, 513,
	683, 514, 684, 515, 516, 0, 517, 518, 0, 519,
	520, 521, 522, 523, 524, 525, 685, 526, 527, 529,
	528, 530, 0, 531, 0, 532, 533, 534, 0, 0,
	0, 0, 0, 535, 537, 0, 538, 539, 540, 541,
	536, 542, 543, 544, 545, 546, 0, 547, 548, 549,
	0, 550, 551, 552, 553, 554, 686, 555, 0, 556,
	557, 563, 564, 565, 558, 559, 566, 567, 568, 569,
	570, 0, 572, 573, 571, 574, 575, 576, 0, 577,
	578, 560, 561, 579, 580, 0, 581, 582, 583, 584,
	585, 586, 587, 687, 0, 588, 0, 589, 590, 591,
	592, 594, 562, 595, 600, 601, 688, 596, 597, 598,
	599, 689, 603, 604, 0, 605, 606, 0, 602, 593,
	0, 607, 608, 609, 610, 611, 612, 613, 614, 0,
	615, 690, 691, 692, 693, 0, 624, 0, 616, 617,
	618, 694, 619, 695, 0, 620, 621, 622, 623, 0,
	625, 626, 0, 0, 627, 628, 629, 631, 632, 630,
	633, 0, 634, 0, 0, 635, 636, 637, 696, 697,
	698, 0, 639, 638, 640, 641, 699, 642, 643, 1588,
	0, 275, 0, 644, 645, 700, 646, 647, 648, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 281, 283,
	282, 284, 285, 286, 287, 0, 288, 289, 0, 0,
	0, 0, 0, 649, 0, 0, 0, 0, 290, 291,
	0, 292, 293, 294, 295, 296, 297, 650, 651, 0,
	298, 652, 299, 653, 0, 654, 300, 301, 302, 303,
	304, 305, 0, 0, 0, 306, 655, 656, 657, 0,
	307, 308, 658, 0, 0, 0, 309, 310, 311, 312,
	313, 314, 315, 0, 0, 317, 318, 319, 316, 320,
	0, 321, 0, 322, 323, 324, 325, 326, 327, 0,
	328, 329, 330, 0, 331, 332, 333, 0, 0, 0,
	0, 0, 0, 0, 334, 335, 336, 337, 338, 0,
	339, 341, 659, 660, 0, 344, 340, 342, 0, 345,
	343, 346, 0, 347, 348, 349, 0, 0, 350, 351,
	352, 0, 353, 354, 355, 0, 356, 357, 358, 0,
	359, 360, 661, 361, 362, 363, 365, 367, 364, 366,
	368, 369, 370, 371, 662, 663, 372, 0, 0, 0,
	0, 0, 0, 0, 373, 374, 375, 664, 0, 0,
	0, 376, 0, 377, 378, 379, 0, 0, 0, 380,
	381, 382, 665, 666, 383, 384, 385, 386, 387, 388,
	389, 390, 391, 0, 392, 667, 0, 668, 393, 0,
	394, 395, 396, 397, 398, 1586, 670, 671, 484, 0,
	399, 400, 0, 401, 402, 403, 404, 405, 0, 0,
	0, 0, 406, 407, 408, 0, 0, 409, 672, 673,
	0, 674, 0, 410, 411, 0, 675, 0, 412, 413,
	414, 0, 415, 0, 0, 0, 416, 417, 418, 419,
	420, 421, 0, 422, 424, 423, 0, 425, 676, 0,
	426, 427, 0, 0, 428, 429, 430, 431, 432, 433,
	436, 0, 0, 434, 435, 437, 438, 0, 439, 440,
	442, 445, 441, 443, 444, 446, 459, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 458, 461,
	0, 460, 0, 462, 463, 464, 465, 472, 474, 475,
	470, 471, 473, 476, 477, 479, 467, 468, 469, 0,
	478, 466, 0, 0, 0, 480, 481, 482, 0, 677,
	483, 678, 485, 486, 0, 0, 487, 0, 0, 0,
	489, 490, 491, 0, 0, 492, 493, 679, 0, 494,
	0, 680, 495, 496, 488, 497, 498, 499, 500, 501,
	502, 503, 504, 505, 0, 506, 507, 681, 508, 509,
	510, 682, 511, 512, 513, 683, 514, 684, 515, 516,
	0, 517, 518, 0, 519, 520, 521, 522, 523, 524,
	525, 685, 526, 527, 529, 528, 530, 0, 531, 0,
	532, 533, 534, 0, 0, 0, 0, 0, 535, 537,
	0, 538, 539, 540, 541, 536, 542, 543, 544, 545,
	546, 0, 547, 548, 549, 0, 550, 551, 552, 553,
	554, 686, 555, 0, 556, 557, 563, 564, 565, 558,
	559, 566, 567, 568, 569, 570, 0, 572, 573, 571,
	574, 575, 576, 0, 577, 578, 560, 561, 579, 580,
	0, 581, 582, 583, 584, 585, 586, 587, 687, 0,
	588, 0, 589, 590, 591, 592, 594, 562, 595, 600,
	601, 688, 596, 597, 598, 599, 689, 603, 604, 0,
	605, 606, 0, 602, 593, 0, 607, 608, 609, 610,
	611, 612, 613, 614, 0, 615, 690, 691, 692, 693,
	0, 624, 0, 616, 617, 618, 694, 619, 695, 0,
	620, 621, 622, 623, 0, 625, 626, 0, 0, 627,
	628, 629, 631, 632, 630, 633, 0, 634, 0, 0,
	635, 636, 637, 696, 697, 698, 0, 639, 638, 640,
	641, 699, 642, 643, 1573, 0, 275, 0, 644, 645,
	700, 646, 647, 648, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 281, 283, 282, 284, 285, 286, 287,
	0, 288, 289, 0, 0, 0, 0, 0, 649, 0,
	0, 0, 0, 290, 291, 0, 292, 293, 294, 295,
	296, 297, 650, 651, 0, 298, 652, 299, 653, 0,
	654, 300, 301, 302, 303, 304, 305, 0, 0, 0,
	306, 655, 656, 657, 0, 307, 308, 658, 0, 0,
	0, 309, 310, 311, 312, 313, 314, 315, 0, 0,
	317, 318, 319, 316, 320, 0, 321, 0, 322, 323,
	324, 325, 326, 327, 0, 328, 329, 330, 0, 331,
	332, 333, 0, 0, 0, 0, 0, 0, 0, 334,
	335, 336, 337, 338, 0, 339, 341, 659, 660, 0,
	344, 340, 342, 0, 345, 343, 346, 0, 347, 348,
	349, 0, 0, 350, 351, 352, 0, 353, 354, 355,
	0, 356, 357, 358, 0, 359, 360, 661, 361, 362,
	363, 365, 367, 364, 366, 368, 369, 370, 371, 662,
	663, 372, 0, 0, 0, 0, 0, 0, 0, 373,
	374, 375, 664, 0, 0, 0, 376, 0, 377, 378,
	379, 0, 0, 0, 380, 381, 382, 665, 666, 383,
	384, 385, 386, 387, 388, 389, 390, 391, 0, 392,
	667, 0, 668, 393, 0, 394, 395, 396, 397, 398,
	669, 670, 671, 484, 0, 399, 400, 0, 401, 402,
	403, 404, 405, 0, 0, 0, 0, 406, 407, 408,
	0, 0, 409, 672, 673, 0, 674, 0, 410, 411,
	0, 675, 0, 412, 413, 414, 0, 415, 0, 0,
	0, 416, 417, 418, 419, 420, 421, 0, 422, 424,
	423, 0, 425, 676, 0, 426, 427, 0, 0, 428,
	429, 430, 431, 432, 433, 436, 0, 0, 434, 435,
	437, 438, 0, 439, 440, 442, 445, 441, 443, 444,
	446, 459, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 458, 461, 0, 460, 0, 462, 463,
	464, 465, 472, 474, 475, 470, 471, 473, 476, 477,
	479, 467, 468, 469, 0, 478, 466, 0, 0, 0,
	480, 481, 482, 0, 677, 483, 678, 485, 486, 0,
	0, 487, 0, 0, 0, 489, 490, 491, 0, 0,
	492, 493, 679, 0, 494, 0, 680, 495, 496, 488,
	497, 498, 499, 500, 501, 502, 503, 504, 505, 0,
	506, 507, 681, 508, 509, 510, 682, 511, 512, 513,
	683, 514, 684, 515, 516, 0, 517, 518, 0, 519,
	520, 521, 522, 523, 524, 525, 685, 526, 527, 529,
	528, 530, 0, 531, 0, 532, 533, 534, 0, 0,
	0, 0, 0, 535, 537, 0, 538, 539, 540, 541,
	536, 542, 543, 544, 545, 546, 0, 547, 548, 549,
	0, 550, 551, 552, 553, 554, 686, 555, 0, 556,
	557, 563, 564, 565, 558, 559, 566, 567, 568, 569,
	570, 0, 572, 573, 571, 574, 575, 576, 0, 577,
	578, 560, 561, 579, 580, 0, 581, 582, 583, 584,
	585, 586, 587, 687, 0, 588, 0, 589, 590, 591,
	592, 594, 562, 595, 600, 601, 688, 596, 597, 598,
	599, 689, 603, 604, 0, 605, 606, 0, 602, 593,
	0, 607, 608, 609, 610, 611, 612, 613, 614, 0,
	615, 690, 691, 692, 693, 0, 624, 0, 616, 617,
	618, 694, 619, 695, 0, 620, 621, 622, 623, 0,
	625, 626, 0, 0, 627, 628, 629, 631, 632, 630,
	633, 0, 634, 0, 0, 635, 636, 637, 696, 697,
	698, 0, 639, 638, 640, 641, 699, 642, 643, 1535,
	0, 275, 0, 644, 645, 700, 646, 647, 648, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 281, 283,
	282, 284, 285, 286, 287, 0, 288, 289, 0, 0,
	0, 0, 0, 649, 0, 0, 0, 0, 290, 291,
	0, 292, 293, 294, 295, 296, 297, 650, 651, 0,
	298, 652, 299, 653, 0, 654, 300, 301, 302, 303,
	304, 305, 0, 0, 0, 306, 655, 656, 657, 0,
	307, 308, 658, 0, 0, 0, 309, 310, 311, 312,
	313, 314, 315, 0, 0, 317, 318, 319, 316, 320,
	0, 321, 0, 322, 323, 324, 325, 326, 327, 0,
	328, 329, 330, 0, 331, 332, 333, 0, 0, 0,
	0, 0, 0, 0, 334, 335, 336, 337, 338, 0,
	339, 341, 659, 660, 0, 344, 340, 342, 0, 345,
	343, 346, 0, 347, 348, 349, 0, 0, 350, 351,
	352, 0, 353, 354, 355, 0, 356, 357, 358, 0,
	359, 360, 661, 361, 362, 363, 365, 367, 364, 366,
	368, 369, 370, 371, 662, 663, 372, 0, 0, 0,
	0, 0, 0, 0, 373, 374, 375, 664, 0, 0,
	0, 376, 0, 377, 378, 379, 0, 0, 0, 380,
	381, 382, 665, 666, 383, 384, 385, 386, 387, 388,
	389, 390, 391, 0, 392, 667, 0, 668, 393, 0,
	394, 395, 396, 397, 398, 669, 670, 671, 484, 0,
	399, 400, 0, 401, 402, 403, 404, 405, 0, 0,
	0, 0, 406, 407, 408, 0, 0, 409, 672, 673,
	0, 674, 0, 410, 411, 0, 675, 0, 412, 413,
	414, 0, 415, 0, 0, 0, 416, 417, 418, 419,
	420, 421, 0, 422, 424, 423, 0, 425, 676, 0,
	426, 427, 0, 0, 428, 429, 430, 431, 432, 433,
	436, 0, 0, 434, 435, 437, 438, 0, 439, 440,
	442, 445, 441, 443, 444, 446, 459, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 458, 461,
	0, 460, 0, 462, 463, 464, 465, 472, 474, 475,
	470, 471, 473, 476, 477, 479, 467, 468, 469, 0,
	478, 466, 0, 0, 0, 480, 481, 482, 0, 677,
	483, 678, 485, 486, 0, 0, 487, 0, 0, 0,
	489, 490, 491, 0, 0, 492, 493, 679, 0, 494,
	0, 680, 495, 496, 488, 497, 498, 499, 500, 501,
	502, 503, 504, 505, 0, 506, 507, 681, 508, 509,
	510, 682, 511, 512, 513, 683, 514, 684, 515, 516,
	0, 517, 518, 0, 519, 520, 521, 522, 523, 524,
	525, 685, 526, 527, 529, 528, 530, 0, 531, 0,
	532, 533, 534, 0, 0, 0, 0, 0, 535, 537,
	0, 538, 539, 540, 541, 536, 542, 543, 544, 545,
	546, 0, 547, 548, 549, 0, 550, 551, 552, 553,
	554, 686, 555, 0, 556, 557, 563, 564, 565, 558,
	559, 566, 567, 568, 569, 570, 0, 572, 573, 571,
	574, 575, 576, 0, 577, 578, 560, 561, 579, 580,
	0, 581, 582, 583, 584, 585, 586, 587, 687, 0,
	588, 0, 589, 590, 591, 592, 594, 562, 595, 600,
	601, 688, 596, 597, 598, 599, 689, 603, 604, 0,
	605, 606, 0, 602, 593, 0, 607, 608, 609, 610,
	611, 612, 613, 614, 0, 615, 690, 691, 692, 693,
	0, 624, 0, 616, 617, 618, 694, 619, 695, 0,
	620, 621, 622, 623, 0, 625, 626, 0, 0, 627,
	628, 629, 631, 632, 630, 633, 0, 634, 0, 0,
	635, 636, 637, 696, 697, 698, 0, 639, 638, 640,
	641, 699, 642, 643, 1513, 0, 275, 0, 644, 645,
	700, 646, 647, 648, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 281, 283, 282, 284, 285, 286, 287,
	0, 288, 289, 0, 0, 0, 0, 0, 649, 0,
	0, 0, 0, 290, 291, 0, 292, 293, 294, 295,
	296, 297, 650, 651, 0, 298, 652, 299, 653, 0,
	654, 300, 301, 302, 303, 304, 305, 0, 0, 0,
	306, 655, 656, 657, 0, 307, 308, 658, 0, 0,
	0, 309, 310, 311, 312, 313, 314, 315, 0, 0,
	317, 318, 319, 316, 320, 0, 321, 0, 322, 323,
	324, 325, 326, 327, 0, 328, 329, 330, 0, 331,
	332, 333, 0, 0, 0, 0, 0, 0, 0, 334,
	335, 336, 337, 338, 0, 339, 341, 659, 660, 0,
	344, 340, 342, 0, 345, 343, 346, 0, 347, 348,
	349, 0, 0, 350, 351, 352, 0, 353, 354, 355,
	0, 356, 357, 358, 0, 359, 360, 661, 361, 362,
	363, 365, 367, 364, 366, 368, 369, 370, 371, 662,
	663, 372, 0, 0, 0, 0, 0, 0, 0, 373,
	374, 375, 664, 0, 0, 0, 376, 0, 377, 378,
	379, 0, 0, 0, 380, 381, 382, 665, 666, 383,
	384, 385, 386, 387, 388, 389, 390, 391, 0, 392,
	667, 0, 668, 393, 0, 394, 395, 396, 397, 398,
	669, 670, 671, 484, 0, 399, 400, 0, 401, 402,
	403, 404, 405, 0, 0, 0, 0, 406, 407, 408,
	0, 0, 409, 672, 673, 0, 674, 0, 410, 411,
	0, 675, 0, 412, 413, 414, 0, 415, 0, 0,
	0, 416, 417, 418, 419, 420, 421, 0, 422, 424,
	423, 0, 425, 676, 0, 426, 427, 0, 0, 428,
	429, 430, 431, 432, 433, 436, 0, 0, 434, 435,
	437, 438, 0, 439, 440, 442, 445, 441, 443, 444,
	446, 459, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 458, 461, 0, 460, 0, 462, 463,
	464, 465, 472, 474, 475, 470, 471, 473, 476, 477,
	479, 467, 468, 469, 0, 478, 466, 0, 0, 0,
	480, 481, 482, 0, 677, 483, 678, 485, 486, 0,
	0, 487, 0, 0, 0, 489, 490, 491, 0, 0,
	492, 493, 679, 0, 494, 0, 680, 495, 496, 488,
	497, 498, 499, 500, 501, 502, 503, 504, 505, 0,
	506, 507, 681, 508, 509, 510, 682, 511, 512, 513,
	683, 514, 684, 515, 516, 0, 517, 518, 0, 519,
	520, 521, 522, 523, 524, 525, 685, 526, 527, 529,
	528, 530, 0, 531, 0, 532, 533, 534, 0, 0,
	0, 0, 0, 535, 537, 0, 538, 539, 540, 541,
	536, 542, 543, 544, 545, 546, 0, 547, 548, 549,
	0, 550, 551, 552, 553, 554, 686, 555, 0, 556,
	557, 563, 564, 565, 558, 559, 566, 567, 568, 569,
	570, 0, 572, 573, 571, 574, 575, 576, 0, 577,
	578, 560, 561, 579, 580, 0, 581, 582, 583, 584,
	585, 586, 587, 687, 0, 588, 0, 589, 590, 591,
	592, 594, 562, 595, 600, 601, 688, 596, 597, 598,
	599, 689, 603, 604, 0, 605, 606, 0, 602, 593,
	0, 607, 608, 609, 610, 611, 612, 613, 614, 0,
	615, 690, 691, 692, 693, 0, 624, 0, 616, 617,
	618, 694, 619, 695, 0, 620, 621, 622, 623, 0,
	625, 626, 0, 0, 627, 628, 629, 631, 632, 630,
	633, 0, 634, 0, 0, 635, 636, 637, 696, 697,
	698, 0, 639, 638, 640, 641, 699, 642, 643, 1381,
	0, 275, 0, 644, 645, 700, 646, 647, 648, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 281, 283,
	282, 284, 285, 286, 287, 0, 288, 289, 0, 0,
	0, 0, 0, 649, 0, 0, 0, 0, 290, 291,
	0, 292, 293, 294, 295, 296, 297, 650, 651, 0,
	298, 652, 299, 653, 0, 654, 300, 301, 302, 303,
	304, 305, 0, 0, 0, 306, 655, 656, 657, 0,
	307, 308, 658, 0, 0, 0, 309, 310, 311, 312,
	313, 314, 315, 0, 0, 317, 318, 319, 316, 320,
	0, 321, 0, 322, 323, 324, 325, 326, 327, 0,
	328, 329, 330, 0, 331, 332, 333, 0, 0, 0,
	0, 0, 0, 0, 334, 335, 336, 337, 338, 0,
	339, 341, 659, 660, 0, 344, 340, 342, 0, 345,
	343, 346, 0, 347, 348, 349, 0, 0, 350, 351,
	352, 0, 353, 354, 355, 0, 356, 357, 358, 0,
	359, 360, 661, 361, 362, 363, 365, 367, 364, 366,
	368, 369, 370, 371, 662, 663, 372, 0, 0, 0,
	0, 0, 0, 0, 373, 374, 375, 664, 0, 0,
	0, 376, 0, 377, 378, 379, 0, 0, 0, 380,
	381, 382, 665, 666, 383, 384, 385, 386, 387, 388,
	389, 390, 391, 0, 392, 667, 0, 668, 393, 0,
	394, 395, 396, 397, 398, 669, 670, 671, 484, 0,
	399, 400, 0, 401, 402, 403, 404, 405, 0, 0,
	0, 0, 406, 407, 408, 0, 0, 409, 672, 673,
	0, 674, 0, 410, 411, 0, 675, 0, 412, 413,
	414, 0, 415, 0, 0, 0, 416, 417, 418, 419,
	420, 421, 0, 422, 424, 423, 0, 425, 676, 0,
	426, 427, 0, 0, 428, 429, 430, 431, 432, 433,
	436, 0, 0, 434, 435, 437, 438, 0, 439, 440,
	442, 445, 441, 443, 444, 446, 459, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 458, 461,
	0, 460, 0, 462, 463, 464, 465, 472, 474, 475,
	470, 471, 473, 476, 477, 479, 467, 468, 469, 0,
	478, 466, 0, 0, 0, 480, 481, 482, 0, 677,
	483, 678, 485, 486, 0, 0, 487, 0, 0, 0,
	489, 490, 491, 0, 0, 492, 493, 679, 0, 494,
	0, 680, 495, 496, 488, 497, 498, 499, 500, 501,
	502, 503, 504, 505, 0, 506, 507, 681, 508, 509,
	510, 682, 511, 512, 513, 683, 514, 684, 515, 516,
	0, 517, 518, 0, 519, 520, 521, 522, 523, 524,
	525, 685, 526, 527, 529, 528, 530, 0, 531, 0,
	532, 533, 534, 0, 0, 0, 0, 0, 535, 537,
	0, 538, 539, 540, 541, 536, 542, 543, 544, 545,
	546, 0, 547, 548, 549, 0, 792, 551, 552, 553,
	554, 686, 555, 0, 556, 557, 563, 564, 565, 558,
	559, 791, 567, 568, 569, 570, 0, 572, 573, 571,
	574, 575, 576, 0, 577, 578, 560, 561, 579, 580,
	0, 581, 582, 583, 584, 585, 586, 587, 687, 0,
	588, 0, 589, 590, 591, 592, 594, 562, 595, 600,
	601, 688, 596, 597, 598, 599, 689, 603, 604, 0,
	605, 606, 0, 602, 593, 0, 607, 608, 609, 610,
	611, 612, 613, 614, 0, 615, 789, 691, 692, 693,
	0, 624, 0, 616, 617, 618, 694, 619, 695, 0,
	620, 621, 622, 623, 0, 625, 626, 0, 0, 627,
	628, 629, 631, 632, 630, 633, 0, 634, 0, 0,
	635, 636, 637, 696, 697, 698, 0, 639, 638, 640,
	641, 699, 642, 643, 1352, 0, 275, 0, 644, 645,
	700, 646, 647, 648, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 281, 283, 282, 284, 285, 286, 287,
	0, 288, 289, 0, 0, 0, 0, 0, 649, 0,
	0, 0, 0, 290, 291, 0, 292, 293, 294, 295,
	296, 297, 650, 651, 0, 298, 652, 299, 653, 0,
	654, 300, 301, 302, 303, 304, 305, 0, 0, 0,
	306, 655, 656, 657, 0, 307, 308, 658, 0, 0,
	0, 309, 310, 311, 312, 313, 314, 315, 0, 0,
	317, 318, 319, 316, 320, 0, 321, 0, 322, 323,
	324, 325, 326, 327, 0, 328, 329, 330, 0, 331,
	332, 333, 0, 0, 0, 0, 0, 0, 0, 334,
	335, 336, 337, 338, 0, 339, 341, 659, 660, 0,
	344, 340, 342, 0, 345, 343, 346, 0, 347, 348,
	349, 0, 0, 350, 351, 352, 0, 353, 354, 355,
	0, 356, 357, 358, 0, 359, 360, 661, 361, 362,
	363, 365, 367, 364, 366, 368, 369, 370, 371, 662,
	663, 372, 0, 0, 0, 0, 0, 0, 0, 373,
	374, 375, 664, 0, 0, 0, 376, 0, 377, 378,
	379, 0, 0, 0, 380, 381, 382, 665, 666, 383,
	384, 385, 386, 387, 388, 389, 390, 391, 0, 392,
	667, 0, 668, 393, 0, 394, 395, 396, 397, 398,
	1351, 670, 671, 484, 0, 399, 400, 0, 401, 402,
	403, 404, 405, 0, 0, 0, 0, 406, 407, 408,
	0, 0, 409, 672, 673, 0, 674, 0, 410, 411,
	0, 675, 0, 412, 413, 414, 0, 415, 0, 0,
	0, 416, 417, 418, 419, 420, 421, 0, 422, 424,
	423, 0, 425, 676, 0, 426, 427, 0, 0, 428,
	429, 430, 431, 432, 433, 436, 0, 0, 434, 435,
	437, 438, 0, 439, 440, 442, 445, 441, 443, 444,
	446, 459, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 458, 461, 0, 460, 0, 462, 463,
	464, 465, 472, 474, 475, 470, 471, 473, 476, 477,
	479, 467, 468, 469, 0, 478, 466, 0, 0, 0,
	480, 481, 482, 0, 677, 483, 678, 485, 486, 0,
	0, 487, 0, 0, 0, 489, 490, 491, 0, 0,
	492, 493, 679, 0, 494, 0, 680, 495, 496, 488,
	497, 498, 499, 500, 501, 502, 503, 504, 505, 0,
	506, 507, 681, 508, 509, 510, 682, 511, 512, 513,
	683, 514, 684, 515, 516, 0, 517, 518, 0, 519,
	520, 521, 522, 523, 524, 525, 685, 526, 527, 529,
	528, 530, 0, 531, 0, 532, 533, 534, 0, 0,
	0, 0, 0, 535, 537, 0, 538, 539, 540, 541,
	536, 542, 543, 544, 545, 546, 0, 547, 548, 549,
	0, 550, 551, 552, 553, 554, 686, 555, 0, 556,
	557, 563, 564, 565, 558, 559, 566, 567, 568, 569,
	570, 0, 572, 573, 571, 574, 575, 576, 0, 577,
	578, 560, 561, 579, 580, 0, 581, 582, 583, 584,
	585, 586, 587, 687, 0, 588, 0, 589, 590, 591,
	592, 594, 562, 595, 600, 601, 688, 596, 597, 598,
	599, 689, 603, 604, 0, 605, 606, 0, 602, 593,
	0, 607, 608, 609, 610, 611, 612, 613, 614, 0,
	615, 690, 691, 692, 693, 0, 624, 0, 616, 617,
	618, 694, 619, 695, 0, 620, 621, 622, 623, 0,
	625, 626, 0, 0, 627, 628, 629, 631, 632, 630,
	633, 0, 634, 0, 0, 635, 636, 637, 696, 697,
	698, 0, 639, 638, 640, 641, 699, 642, 643, 1343,
	0, 275, 0, 644, 645, 700, 646, 647, 648, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 281, 283,
	282, 284, 285, 286, 287, 0, 288, 289, 0, 0,
	0, 0, 0, 649, 0, 0, 0, 0, 290, 291,
	0, 292, 293, 294, 295, 296, 297, 650, 651, 0,
	298, 652, 299, 653, 0, 654, 300, 301, 302, 303,
	304, 305, 0, 0, 0, 306, 655, 656, 657, 0,
	307, 308, 658, 0, 0, 0, 309, 310, 311, 312,
	313, 314, 315, 0, 0, 317, 318, 319, 316, 320,
	0, 321, 0, 322, 323, 324, 325, 326, 327, 0,
	328, 329, 330, 0, 331, 332, 333, 0, 0, 0,
	0, 0, 0, 0, 334, 335, 336, 337, 338, 0,
	339, 341, 659, 660, 0, 344, 340, 342, 0, 345,
	343, 346, 0, 347, 348, 349, 0, 0, 350, 351,
	352, 0, 353, 354, 355, 0, 356, 357, 358, 0,
	359, 360, 661, 361, 362, 363, 365, 367, 364, 366,
	368, 369, 370, 371, 662, 663, 372, 0, 0, 0,
	0, 0, 0, 0, 373, 374, 375, 664, 0, 0,
	0, 376, 0, 377, 378, 379, 0, 0, 0, 380,
	381, 382, 665, 666, 383, 384, 385, 386, 387, 388,
	389, 390, 391, 0, 392, 667, 0, 668, 393, 0,
	394, 395, 396, 397, 398, 1342, 670, 671, 484, 0,
	399, 400, 0, 401, 402, 403, 404, 405, 0, 0,
	0, 0, 406, 407, 408, 0, 0, 409, 672, 673,
	0, 674, 0, 410, 411, 0, 675, 0, 412, 413,
	414, 0, 415, 0, 0, 0, 416, 417, 418, 419,
	420, 421, 0, 422, 424, 423, 0, 425, 676, 0,
	426, 427, 0, 0, 428, 429, 430, 431, 432, 433,
	436, 0, 0, 434, 435, 437, 438, 0, 439, 440,
	442, 445, 441, 443, 444, 446, 459, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 458, 461,
	0, 460, 0, 462, 463, 464, 465, 472, 474, 475,
	470, 471, 473, 476, 477, 479, 467, 468, 469, 0,
	478, 466, 0, 0, 0, 480, 481, 482, 0, 677,
	483, 678, 485, 486, 0, 0, 487, 0, 0, 0,
	489, 490, 491, 0, 0, 492, 493, 679, 0, 494,
	0, 680, 495, 496, 488, 497, 498, 499, 500, 501,
	502, 503, 504, 505, 0, 506, 507, 681, 508, 509,
	510, 682, 511, 512, 513, 683, 514, 684, 515, 516,
	0, 517, 518, 0, 519, 520, 521, 522, 523, 524,
	525, 685, 526, 527, 529, 528, 530, 0, 531, 0,
	532, 533, 534, 0, 0, 0, 0, 0, 535, 537,
	0, 538, 539, 540, 541, 536, 542, 543, 544, 545,
	546, 0, 547, 548, 549, 0, 550, 551, 552, 553,
	554, 686, 555, 0, 556, 557, 563, 564, 565, 558,
	559, 566, 567, 568, 569, 570, 0, 572, 573, 571,
	574, 575, 576, 0, 577, 578, 560, 561, 579, 580,
	0, 581, 582, 583, 584, 585, 586, 587, 687, 0,
	588, 0, 589, 590, 591, 592, 594, 562, 595, 600,
	601, 688, 596, 597, 598, 599, 689, 603, 604, 0,
	605, 606, 0, 602, 593, 0, 607, 608, 609, 610,
	611, 612, 613, 614, 0, 615, 690, 691, 692, 693,
	0, 624, 0, 616, 617, 618, 694, 619, 695, 0,
	620, 621, 622, 623, 0, 625, 626, 0, 0, 627,
	628, 629, 631, 632, 630, 633, 0, 634, 0, 0,
	635, 636, 637, 696, 697, 698, 0, 639, 638, 640,
	641, 699, 642, 643, 275, 0, 0, 0, 644, 645,
	700, 646, 647, 648, 0, 0, 0, 0, 0, 0,
	0, 281, 283, 282, 284, 285, 286, 287, 1295, 288,
	289, 0, 0, 0, 0, 0, 649, 0, 0, 0,
	0, 290, 291, 0, 292, 293, 294, 295, 296, 297,
	650, 651, 0, 298, 652, 299, 653, 0, 654, 300,
	301, 302, 303, 304, 305, 0, 0, 0, 306, 655,
	656, 657, 0, 307, 308, 658, 0, 0, 0, 309,
	310, 311, 312, 313, 314, 315, 0, 0, 317, 318,
	319, 316, 320, 0, 321, 0, 322, 323, 324, 325,
	326, 327, 0, 328, 329, 330, 0, 331, 332, 333,
	0, 0, 0, 0, 0, 0, 0, 334, 335, 336,
	337, 338, 0, 339, 341, 659, 660, 0, 344, 340,
	342, 0, 345, 343, 346, 0, 347, 348, 349, 0,
	0, 350, 351, 352, 0, 353, 354, 355, 0, 356,
	357, 358, 0, 359, 360, 661, 361, 362, 363, 365,
	367, 364, 366, 368, 369, 370, 371, 662, 663, 372,
	0, 0, 0, 0, 0, 0, 0, 373, 374, 375,
	664, 0, 0, 0, 376, 0, 377, 378, 379, 0,
	0, 0, 380, 381, 382, 665, 666, 383, 384, 385,
	386, 387, 388, 389, 390, 391, 0, 392, 667, 0,
	668, 393, 0, 394, 395, 396, 397, 398, 669, 670,
	671, 484, 0, 399, 400, 0, 401, 402, 403, 404,
	405, 0, 0, 0, 0, 406, 407, 408, 0, 0,
	409, 672, 673, 0, 674, 0, 410, 411, 0, 675,
	0, 412, 413, 414, 0, 415, 0, 0, 0, 416,
	417, 418, 419, 420, 421, 0, 422, 424, 423, 0,
	425, 676, 0, 426, 427, 0, 0, 428, 429, 430,
	431, 432, 433, 436, 0, 0, 434, 435, 437, 438,
	0, 439, 440, 442, 445, 441, 443, 444, 446, 459,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 458, 461, 0, 460, 0, 462, 463, 464, 465,
	472, 474, 475, 470, 471, 473, 476, 477, 479, 467,
	468, 469, 0, 478, 466, 0, 0, 0, 480, 481,
	482, 0, 677, 483, 678, 485, 486, 0, 0, 487,
	0, 0, 0, 489, 490, 491, 0, 0, 492, 493,
	679, 0, 494, 0, 680, 495, 496, 488, 497, 498,
	499, 500, 501, 502, 503, 504, 505, 0, 506, 507,
	681, 508, 509, 510, 682, 511, 512, 513, 683, 514,
	684, 515, 516, 0, 517, 518, 0, 519, 520, 521,
	522, 523, 524, 525, 685, 526, 527, 529, 528, 530,
	0, 531, 0, 532, 533, 534, 0, 0, 0, 0,
	0, 535, 537, 0, 538, 539, 540, 541, 536, 542,
	543, 544, 545, 546, 0, 547, 548, 549, 0, 550,
	551, 552, 553, 554, 686, 555, 0, 556, 557, 563,
	564, 565, 558, 559, 566, 567, 568, 569, 570, 0,
	572, 573, 571, 574, 575, 576, 0, 577, 578, 560,
	561, 579, 580, 0, 581, 582, 583, 584, 585, 586,
	587, 687, 0, 588, 0, 589, 590, 591, 592, 594,
	562, 595, 600, 601, 688, 596, 597, 598, 599, 689,
	603, 604, 0, 605, 606, 0, 602, 593, 0, 607,
	608, 609, 610, 611, 612, 613, 614, 0, 615, 690,
	691, 692, 693, 0, 624, 0, 616, 617, 618, 694,
	619, 695, 0, 620, 621, 622, 623, 0, 625, 626,
	0, 0, 627, 628, 629, 631, 632, 630, 633, 0,
	634, 0, 0, 635, 636, 637, 696, 697, 698, 0,
	639, 638, 640, 641, 699, 642, 643, 275, 0, 0,
	0, 644, 645, 700, 646, 647, 648, 0, 0, 0,
	0, 0, 0, 0, 281, 283, 282, 284, 285, 286,
	287, 798, 288, 289, 0, 0, 0, 0, 0, 649,
	0, 0, 0, 0, 290, 291, 0, 292, 293, 294,
	295, 296, 297, 650, 651, 0, 298, 652, 299, 653,
	0, 654, 300, 301, 302, 303, 304, 305, 0, 0,
	0, 306, 655, 656, 657, 0, 307, 308, 658, 0,
	0, 0, 309, 310, 311, 312, 313, 314, 315, 0,
	0, 317, 318, 319, 316, 320, 0, 321, 0, 322,
	323, 324, 325, 326, 327, 0, 328, 329, 330, 0,
	331, 332, 333, 0, 0, 0, 0, 0, 0, 0,
	334, 335, 336, 337, 338, 0, 339, 341, 659, 660,
	0, 344, 340, 342, 0, 345, 343, 346, 0, 347,
	348, 349, 0, 0, 350, 351, 352, 0, 353, 354,
	355, 0, 356, 357, 358, 0, 359, 360, 661, 361,
	362, 363, 365, 367, 364, 366, 368, 369, 370, 371,
	662, 663, 372, 0, 0, 0, 0, 0, 0, 0,
	373, 374, 375, 664, 0, 0, 0, 376, 0, 377,
	378, 379, 0, 0, 0, 380, 381, 382, 665, 666,
	383, 384, 385, 386, 387, 388, 389, 390, 391, 0,
	392, 667, 0, 668, 393, 0, 394, 395, 396, 397,
	398, 669, 670, 671, 484, 0, 399, 400, 0, 401,
	402, 403, 404, 405, 0, 0, 0, 0, 406, 407,
	408, 0, 0, 409, 672, 673, 0, 674, 0, 410,
	411, 0, 675, 0, 412, 413, 414, 0, 415, 0,
	0, 0, 416, 417, 418, 419, 420, 421, 0, 422,
	424, 423, 0, 425, 676, 0, 426, 427, 0, 0,
	428, 429, 430, 431, 432, 433, 436, 0, 0, 434,
	435, 437, 438, 0, 439, 440, 442, 445, 441, 443,
	444, 446, 459, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 458, 461, 0, 460, 0, 462,
	463, 464, 465, 472, 474, 475, 470, 471, 473, 476,
	477, 479, 467, 468, 469, 0, 478, 466, 0, 0,
	0, 480, 481, 482, 0, 677, 483, 678, 485, 486,
	0, 0, 487, 0, 0, 0, 489, 490, 491, 0,
	0, 492, 493, 679, 0, 494, 0, 680, 495, 496,
	488, 497, 498, 499, 500, 501, 502, 503, 504, 505,
	0, 506, 507, 681, 508, 509, 510, 682, 511, 512,
	513, 683, 514, 684, 515, 516, 0, 517, 518, 0,
	519, 520, 521, 522, 523, 524, 525, 685, 526, 527,
	529, 528, 530, 0, 531, 0, 532, 533, 534, 0,
	0, 0, 0, 0, 535, 537, 0, 538, 539, 540,
	541, 536, 542, 543, 544, 545, 546, 0, 547, 548,
	549, 0, 550, 551, 552, 553, 554, 686, 555, 0,
	556, 557, 563, 564, 565, 558, 559, 566, 567, 568,
	569, 570, 0, 572, 573, 571, 574, 575, 576, 0,
	577, 578, 560, 561, 579, 580, 0, 581, 582, 583,
	584, 585, 586, 587, 687, 0, 588, 0, 589, 590,
	591, 592, 594, 562, 595, 600, 601, 688, 596, 597,
	598, 599, 689, 603, 604, 0, 605, 606, 0, 602,
	593, 0, 607, 608, 609, 610, 611, 612, 613, 614,
	0, 615, 690, 691, 692, 693, 0, 624, 0, 616,
	617, 618, 694, 619, 695, 0, 620, 621, 622, 623,
	0, 625, 626, 0, 0, 627, 628, 629, 631, 632,
	630, 633, 0, 634, 0, 0, 635, 636, 637, 696,
	697, 698, 0, 639, 638, 640, 641, 699, 642, 643,
	783, 0, 275, 0, 644, 645, 700, 646, 647, 648,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 281,
	283, 282, 284, 285, 286, 287, 0, 288, 289, 0,
	0, 0, 0, 0, 649, 0, 0, 0, 0, 290,
	291, 0, 292, 293, 294, 295, 296, 297, 650, 651,
	0, 298, 652, 299, 653, 0, 654, 300, 301, 302,
	303, 304, 305, 0, 0, 0, 306, 655, 656, 657,
	0, 307, 779, 658, 0, 0, 0, 309, 310, 311,
	312, 313, 314, 315, 0, 0, 317, 318, 319, 316,
	320, 0, 778, 0, 322, 323, 324, 325, 326, 327,
	0, 328, 329, 330, 0, 331, 332, 333, 0, 0,
	0, 0, 0, 0, 0, 334, 335, 336, 337, 338,
	0, 339, 341, 659, 660, 0, 344, 340, 342, 0,
	345, 343, 346, 0, 347, 348, 349, 0, 0, 350,
	351, 352, 0, 353, 354, 355, 0, 356, 357, 358,
	0, 359, 360, 661, 361, 362, 363, 365, 367, 364,
	366, 368, 369, 370, 371, 662, 663, 372, 0, 0,
	0, 0, 0, 0, 0, 373, 374, 375, 664, 0,
	0, 0, 376, 0, 377, 378, 379, 0, 0, 0,
	380, 381, 382, 665, 666, 383, 384, 385, 386, 387,
	388, 389, 390, 391, 0, 392, 667, 0, 668, 393,
	0, 394, 395, 396, 397, 398, 669, 670, 671, 484,
	0, 399, 400, 0, 401, 402, 403, 404, 405, 0,
	0, 0, 0, 406, 407, 408, 0, 0, 409, 672,
	673, 0, 674, 0, 410, 411, 0, 675, 0, 412,
	413, 414, 0, 415, 0, 0, 0, 416, 417, 418,
	419, 420, 421, 0, 422, 424, 423, 0, 425, 676,
	0, 426, 427, 0, 0, 428, 429, 430, 431, 432,
	784, 436, 0, 0, 434, 435, 437, 438, 0, 439,
	440, 442, 445, 441, 443, 444, 446, 459, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 458,
	461, 0, 793, 0, 462, 463, 464, 465, 472, 474,
	475, 470, 471, 473, 476, 477, 479, 467, 468, 469,
	0, 478, 466, 0, 0, 0, 480, 481, 482, 0,
	677, 483, 678, 485, 486, 0, 0, 487, 0, 0,
	0, 489, 490, 491, 0, 0, 492, 493, 679, 0,
	494, 0, 680, 495, 496, 488, 497, 498, 499, 500,
	501, 502, 503, 504, 505, 0, 506, 507, 681, 508,
	509, 510, 682, 511, 512, 513, 683, 514, 684, 515,
	516, 0, 517, 518, 0, 519, 520, 521, 522, 523,
	524, 525, 685, 526, 527, 529, 528, 530, 0, 531,
	0, 532, 533, 534, 0, 0, 0, 0, 0, 535,
	537, 0, 538, 539, 540, 541, 536, 542, 543, 544,
	545, 546, 0, 547, 548, 549, 0, 792, 551, 552,
	553, 554, 780, 555, 0, 556, 557, 563, 564, 565,
	558, 559, 791, 567, 568, 569, 570, 0, 572, 573,
	571, 574, 781, 576, 0, 577, 578, 560, 561, 579,
	580, 0, 581, 582, 583, 584, 585, 586, 587, 687,
	0, 588, 0, 589, 590, 591, 592, 594, 562, 595,
	600, 601, 688, 596, 597, 598, 599, 689, 603, 604,
	0, 605, 606, 0, 602, 593, 0, 607, 608, 609,
	610, 611, 612, 613, 614, 0, 615, 789, 691, 692,
	693, 0, 624, 0, 616, 785, 618, 694, 619, 695,
	0, 620, 621, 622, 623, 0, 625, 626, 0, 0,
	627, 628, 629, 631, 632, 630, 633, 0, 634, 0,
	0, 635, 636, 637, 696, 697, 698, 0, 639, 638,
	640, 641, 699, 642, 643, 772, 0, 275, 0, 644,
	645, 700, 646, 647, 648, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 281, 283, 282, 284, 285, 286,
	287, 0, 288, 289, 0, 0, 0, 0, 0, 649,
	0, 0, 0, 0, 290, 291, 0, 292, 293, 294,
	295, 296, 297, 650, 651, 0, 298, 652, 299, 653,
	0, 654, 300, 301, 302, 303, 304, 305, 0, 0,
	0, 306, 655, 656, 657, 0, 307, 308, 658, 0,
	0, 0, 309, 310, 311, 312, 313, 314, 315, 0,
	0, 317, 318, 319, 316, 320, 0, 321, 0, 322,
	323, 324, 325, 326, 327, 0, 328, 329, 330, 0,
	331, 332, 333, 0, 0, 0, 0, 0, 0, 0,
	334, 335, 336, 337, 338, 0, 339, 341, 659, 660,
	0, 344, 340, 342, 0, 345, 343, 346, 0, 347,
	348, 349, 0, 0, 350, 351, 352, 0, 353, 354,
	355, 0, 356, 357, 358, 0, 359, 360, 661, 361,
	362, 363, 365, 367, 364, 366, 368, 369, 370, 371,
	662, 663, 372, 0, 0, 0, 0, 0, 0, 0,
	373, 374, 375, 664, 0, 0, 0, 376, 0, 377,
	378, 379, 0, 0, 0, 380, 381, 382, 665, 666,
	383, 384, 385, 386, 387, 388, 389, 390, 391, 0,
	392, 667, 0, 668, 393, 0, 394, 395, 396, 397,
	398, 669, 670, 671, 484, 0, 399, 400, 0, 401,
	402, 403, 404, 405, 0, 0, 0, 0, 406, 407,
	408, 0, 0, 409, 672, 673, 0, 674, 0, 410,
	411, 0, 675, 0, 412, 413, 414, 0, 415, 0,
	0, 0, 416, 417, 418, 419, 420, 421, 0, 422,
	424, 423, 0, 425, 676, 0, 426, 427, 0, 0,
	428, 429, 430, 431, 432, 433, 436, 0, 0, 434,
	435, 437, 438, 0, 439, 440, 442, 445, 441, 443,
	444, 446, 459, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 458, 461, 0, 460, 0, 462,
	463, 464, 465, 472, 474, 475, 470, 471, 473, 476,
	477, 479, 467, 468, 469, 0, 478, 466, 0, 0,
	0, 480, 481, 482, 0, 677, 483, 678, 485, 486,
	0, 0, 487, 0, 0, 0, 489, 490, 491, 0,
	0, 492, 493, 679, 0, 494, 0, 680, 495, 496,
	488, 497, 498, 499, 500, 501, 502, 503, 504, 505,
	0, 506, 507, 681, 508, 509, 510, 682, 511, 512,
	513, 683, 514, 684, 515, 516, 0, 517, 518, 0,
	519, 520, 521, 522, 523, 524, 525, 685, 526, 527,
	529, 528, 530, 0, 531, 0, 532, 533, 534, 0,
	0, 0, 0, 0, 535, 537, 0, 538, 539, 540,
	541, 536, 542, 543, 544, 545, 546, 0, 547, 548,
	549, 0, 550, 551, 552, 553, 554, 686, 555, 0,
	556, 557, 773, 564, 565, 558, 559, 566, 567, 568,
	569, 570, 0, 572, 573, 571, 574, 575, 576, 0,
	577, 578, 560, 561, 579, 580, 0, 581, 582, 583,
	584, 585, 586, 587, 687, 0, 588, 0, 589, 590,
	591, 592, 594, 562, 595, 600, 601, 688, 596, 597,
	598, 599, 689, 603, 604, 0, 605, 606, 0, 602,
	593, 0, 607, 608, 609, 610, 611, 612, 613, 614,
	0, 615, 690, 691, 692, 693, 0, 624, 0, 616,
	617, 618, 694, 619, 695, 0, 620, 621, 622, 623,
	0, 625, 626, 0, 0, 627, 628, 629, 631, 632,
	630, 633, 0, 634, 0, 0, 635, 636, 637, 696,
	697, 698, 0, 639, 638, 640, 641, 699, 642, 643,
	735, 0, 275, 0, 644, 645, 700, 646, 647, 648,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 281,
	283, 282, 284, 285, 286, 287, 0, 288, 289, 0,
	0, 0, 0, 0, 649, 0, 0, 0, 0, 290,
	291, 0, 292, 293, 294, 295, 296, 297, 650, 651,
	0, 298, 652, 299, 653, 0, 654, 300, 301, 302,
	303, 304, 305, 0, 0, 0, 306, 655, 656, 657,
	0, 307, 308, 658, 0, 0, 0, 309, 310, 311,
	312, 313, 314, 315, 0, 0, 317, 318, 319, 316,
	320, 0, 321, 0, 322, 323, 324, 325, 326, 327,
	0, 328, 329, 330, 0, 331, 332, 333, 0, 0,
	0, 0, 0, 0, 0, 334, 335, 336, 337, 338,
	0, 339, 341, 659, 660, 0, 344, 340, 342, 0,
	345, 343, 346, 0, 347, 348, 349, 0, 0, 350,
	351, 352, 0, 353, 354, 355, 0, 356, 357, 358,
	0, 359, 360, 661, 361, 362, 363, 365, 367, 364,
	366, 368, 369, 370, 371, 662, 663, 372, 0, 0,
	0, 0, 0, 0, 0, 373, 374, 375, 664, 0,
	0, 0, 376, 0, 377, 378, 379, 0, 0, 0,
	380, 381, 382, 665, 666, 383, 384, 385, 386, 387,
	388, 389, 390, 391, 0, 392, 667, 0, 668, 393,
	0, 394, 395, 396, 397, 398, 669, 670, 671, 484,
	0, 399, 400, 0, 401, 402, 403, 404, 405, 0,
	0, 0, 0, 406, 407, 408, 0, 0, 409, 672,
	673, 0, 674, 0, 410, 411, 0, 675, 0, 412,
	413, 414, 0, 415, 0, 0, 0, 416, 417, 418,
	419, 420, 421, 0, 422, 424, 423, 0, 425, 676,
	0, 426, 427, 0, 0, 428, 429, 430, 431, 432,
	433, 436, 0, 0, 434, 435, 437, 438, 0, 439,
	440, 442, 445, 441, 443, 444, 446, 459, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 458,
	461, 0, 460, 0, 462, 463, 464, 465, 472, 474,
	475, 470, 471, 473, 476, 477, 479, 467, 468, 469,
	0, 478, 466, 0, 0, 0, 480, 481, 482, 0,
	677, 483, 678, 485, 486, 0, 0, 487, 0, 0,
	0, 489, 490, 491, 0, 0, 492, 493, 679, 0,
	494, 0, 680, 495, 496, 488, 497, 498, 499, 500,
	501, 502, 503, 504, 505, 0, 506, 507, 681, 508,
	509, 510, 682, 511, 512, 513, 683, 514, 684, 515,
	516, 0, 517, 518, 0, 519, 520, 521, 522, 523,
	524, 525, 685, 526, 527, 529, 528, 530, 0, 531,
	0, 532, 533, 534, 0, 0, 0, 0, 0, 535,
	537, 0, 538, 539, 540, 541, 536, 542, 543, 544,
	545, 546, 0, 547, 548, 549, 0, 550, 551, 552,
	553, 554, 686, 555, 0, 556, 557, 563, 564, 565,
	558, 559, 566, 567, 568, 569, 570, 0, 572, 573,
	571, 574, 575, 576, 0, 577, 578, 560, 561, 579,
	580, 0, 581, 582, 583, 584, 585, 586, 587, 687,
	0, 588, 0, 589, 590, 591, 592, 594, 562, 595,
	600, 601, 688, 596, 597, 598, 599, 689, 603, 604,
	0, 605, 606, 0, 602, 593, 0, 607, 608, 609,
	610, 611, 612, 613, 614, 0, 615, 690, 691, 692,
	693, 0, 624, 0, 616, 617, 618, 694, 619, 695,
	0, 620, 621, 622, 623, 0, 625, 626, 0, 0,
	627, 628, 629, 631, 632, 630, 633, 0, 634, 0,
	0, 635, 636, 637, 696, 697, 698, 0, 639, 638,
	640, 641, 699, 642, 643, 728, 0, 275, 0, 644,
	645, 700, 646, 647, 648, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 281, 283, 282, 284, 285, 286,
	287, 0, 288, 289, 0, 0, 0, 0, 0, 649,
	0, 0, 0, 0, 290, 291, 0, 292, 293, 294,
	295, 296, 297, 650, 651, 0, 298, 652, 299, 653,
	0, 654, 300, 301, 302, 303, 304, 305, 0, 0,
	0, 306, 655, 656, 657, 0, 307, 308, 658, 0,
	0, 0, 309, 310, 311, 312, 313, 314, 315, 0,
	0, 317, 318, 319, 316, 320, 0, 321, 0, 322,
	323, 324, 325, 326, 327, 0, 328, 329, 330, 0,
	331, 332, 333, 0, 0, 0, 0, 0, 0, 0,
	334, 335, 336, 337, 338, 0, 339, 341, 659, 660,
	0, 344, 340, 342, 0, 345, 343, 346, 0, 347,
	348, 349, 0, 0, 350, 351, 352, 0, 353, 354,
	355, 0, 356, 357, 358, 0, 359, 360, 661, 361,
	362, 363, 365, 367, 364, 366, 368, 369, 370, 371,
	662, 663, 372, 0, 0, 0, 0, 0, 0, 0,
	373, 374, 375, 664, 0, 0, 0, 376, 0, 377,
	378, 379, 0, 0, 0, 380, 381, 382, 665, 666,
	383, 384, 385, 386, 387, 388, 389, 390, 391, 0,
	392, 667, 0, 668, 393, 0, 394, 395, 396, 397,
	398, 669, 670, 671, 484, 0, 399, 400, 0, 401,
	402, 403, 404, 405, 0, 0, 0, 0, 406, 407,
	408, 0, 0, 409, 672, 673, 0, 674, 0, 410,
	411, 0, 675, 0, 412, 413, 414, 0, 415, 0,
	0, 0, 416, 417, 418, 419, 420, 421, 0, 422,
	424, 423, 0, 425, 676, 0, 426, 427, 0, 0,
	428, 429, 430, 431, 432, 433, 436, 0, 0, 434,
	435, 437, 438, 0, 439, 440, 442, 445, 441, 443,
	444, 446, 459, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 458, 461, 0, 460, 0, 462,
	463, 464, 465, 472, 474, 475, 470, 471, 473, 476,
	477, 479, 467, 468, 469, 0, 478, 466, 0, 0,
	0, 480, 481, 482, 0, 677, 483, 678, 485, 486,
	0, 0, 487, 0, 0, 0, 489, 490, 491, 0,
	0, 492, 493, 679, 0, 494, 0, 680, 495, 496,
	488, 497, 498, 499, 500, 501, 502, 503, 504, 505,
	0, 506, 507, 681, 508, 509, 510, 682, 511, 512,
	513, 683, 514, 684, 515, 516, 0, 517, 518, 0,
	519, 520, 521, 522, 523, 524, 525, 685, 526, 527,
	529, 528, 530, 0, 531, 0, 532, 533, 534, 0,
	0, 0, 0, 0, 535, 537, 0, 538, 539, 540,
	541, 536, 542, 543, 544, 545, 546, 0, 547, 548,
	549, 0, 550, 551, 552, 553, 554, 686, 555, 0,
	556, 557, 563, 564, 565, 558, 559, 566, 567, 568,
	569, 570, 0, 572, 573, 571, 574, 575, 576, 0,
	577, 578, 560, 561, 579, 580, 0, 581, 582, 583,
	584, 585, 586, 587, 687, 0, 588, 0, 589, 590,
	591, 592, 594, 562, 595, 600, 601, 688, 596, 597,
	598, 599, 689, 603, 604, 0, 605, 606, 0, 602,
	593, 0, 607, 608, 609, 610, 611, 612, 613, 614,
	0, 615, 690, 691, 692, 693, 0, 624, 0, 616,
	617, 618, 694, 619, 695, 0, 620, 621, 622, 623,
	0, 625, 626, 0, 0, 627, 628, 629, 631, 632,
	630, 633, 0, 634, 0, 0, 635, 636, 637, 696,
	697, 698, 0, 639, 638, 640, 641, 699, 642, 643,
	706, 0, 275, 0, 644, 645, 700, 646, 647, 648,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 281,
	283, 282, 284, 285, 286, 287, 0, 288, 289, 0,
	0, 0, 0, 0, 649, 0, 0, 0, 0, 290,
	291, 0, 292, 293, 294, 295, 296, 297, 650, 651,
	0, 298, 652, 299, 653, 0, 654, 300, 301, 302,
	303, 304, 305, 0, 0, 0, 306, 655, 656, 657,
	0, 307, 308, 658, 0, 0, 0, 309, 310, 311,
	312, 313, 314, 315, 0, 0, 317, 318, 319, 316,
	320, 0, 321, 0, 322, 323, 324, 325, 326, 327,
	0, 328, 329, 330, 0, 331, 332, 333, 0, 0,
	0, 0, 0, 0, 0, 334, 335, 336, 337, 338,
	0, 339, 341, 659, 660, 0, 344, 340, 342, 0,
	345, 343, 346, 0, 347, 348, 349, 0, 0, 350,
	351, 352, 0, 353, 354, 355, 0, 356, 357, 358,
	0, 359, 360, 661, 361, 362, 363, 365, 367, 364,
	366, 368, 369, 370, 371, 662, 663, 372, 0, 0,
	0, 0, 0, 0, 0, 373, 374, 375, 664, 0,
	0, 0, 376, 0, 377, 378, 379, 0, 0, 0,
	380, 381, 382, 665, 666, 383, 384, 385, 386, 387,
	388, 389, 390, 391, 0, 392, 667, 0, 668, 393,
	0, 394, 395, 396, 397, 398, 669, 670, 671, 484,
	0, 399, 400, 0, 401, 402, 403, 404, 405, 0,
	0, 0, 0, 406, 407, 408, 0, 0, 409, 672,
	673, 0, 674, 0, 410, 411, 0, 675, 0, 412,
	413, 414, 0, 415, 0, 0, 0, 416, 417, 418,
	419, 420, 421, 0, 422, 424, 423, 0, 425, 676,
	0, 426, 427, 0, 0, 428, 429, 430, 431, 432,
	433, 436, 0, 0, 434, 435, 437, 438, 0, 439,
	440, 442, 445, 441, 443, 444, 446, 459, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 458,
	461, 0, 460, 0, 462, 463, 464, 465, 472, 474,
	475, 470, 471, 473, 476, 477, 479, 467, 468, 469,
	0, 478, 466, 0, 0, 0, 480, 481, 482, 0,
	677, 483, 678, 485, 486, 0, 0, 487, 0, 0,
	0, 489, 490, 491, 0, 0, 492, 493, 679, 0,
	494, 0, 680, 495, 496, 488, 497, 498, 499, 500,
	501, 502, 503, 504, 505, 0, 506, 507, 681, 508,
	509, 510, 682, 511, 512, 513, 683, 514, 684, 515,
	516, 0, 517, 518, 0, 519, 520, 521, 522, 523,
	524, 525, 685, 526, 527, 529, 528, 530, 0, 531,
	0, 532, 533, 534, 0, 0, 0, 0, 0, 535,
	537, 0, 538, 539, 540, 541, 536, 542, 543, 544,
	545, 546, 0, 547, 548, 549, 0, 550, 551, 552,
	553, 554, 686, 555, 0, 556, 557, 563, 564, 565,
	558, 559, 566, 567, 568, 569, 570, 0, 572, 573,
	571, 574, 575, 576, 0, 577, 578, 560, 561, 579,
	580, 0, 581, 582, 583, 584, 585, 586, 587, 687,
	0, 588, 0, 589, 590, 591, 592, 594, 562, 595,
	600, 601, 688, 596, 597, 598, 599, 689, 603, 604,
	0, 605, 606, 0, 602, 593, 0, 607, 608, 609,
	610, 611, 612, 613, 614, 0, 615, 690, 691, 692,
	693, 0, 624, 0, 616, 617, 618, 694, 619, 695,
	0, 620, 621, 622, 623, 0, 625, 626, 0, 0,
	627, 628, 629, 631, 632, 630, 633, 0, 634, 0,
	0, 635, 636, 637, 696, 697, 698, 0, 639, 638,
	640, 641, 699, 642, 643, 275, 0, 0, 0, 644,
	645, 700, 646, 647, 648, 0, 0, 0, 0, 0,
	0, 0, 281, 283, 282, 284, 285, 286, 287, 0,
	288, 289, 0, 0, 0, 0, 0, 649, 0, 0,
	0, 0, 290, 291, 0, 292, 293, 294, 295, 296,
	297, 650, 651, 0, 298, 652, 299, 653, 0, 654,
	300, 301, 302, 303, 304, 305, 0, 0, 0, 306,
	655, 656, 657, 0, 307, 308, 658, 0, 0, 0,
	309, 310, 311, 312, 313, 314, 315, 0, 0, 317,
	318, 319, 316, 320, 0, 321, 0, 322, 323, 324,
	325, 326, 327, 0, 328, 329, 330, 0, 331, 332,
	333, 0, 0, 0, 0, 0, 0, 0, 334, 335,
	336, 337, 338, 0, 339, 341, 659, 660, 0, 344,
	340, 342, 0, 345, 343, 346, 0, 347, 348, 349,
	0, 0, 350, 351, 352, 0, 353, 354, 355, 0,
	356, 357, 358, 0, 359, 360, 661, 361, 362, 363,
	365, 367, 364, 366, 368, 369, 370, 371, 662, 663,
	372, 0, 0, 0, 0, 0, 0, 0, 373, 374,
	375, 664, 0, 0, 0, 376, 0, 377, 378, 379,
	0, 0, 0, 380, 381, 382, 665, 666, 383, 384,
	385, 386, 387, 388, 389, 390, 391, 0, 392, 667,
	0, 668, 393, 0, 394, 395, 396, 397, 398, 669,
	670, 671, 484, 0, 399, 400, 0, 401, 402, 403,
	404, 405, 0, 0, 0, 0, 406, 407, 408, 0,
	0, 409, 672, 673, 0, 674, 0, 410, 411, 0,
	675, 0, 412, 413, 414, 0, 415, 0, 0, 0,
	416, 417, 418, 419, 420, 421, 0, 422, 424, 423,
	0, 425, 676, 0, 426, 427, 0, 0, 428, 429,
	430, 431, 432, 433, 436, 0, 0, 434, 435, 437,
	438, 0, 439, 440, 442, 445, 441, 443, 444, 446,
	459, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 458, 461, 0, 460, 0, 462, 463, 464,
	465, 472, 474, 475, 470, 471, 473, 476, 477, 479,
	467, 468, 469, 0, 478, 466, 0, 0, 0, 480,
	481, 482, 0, 677, 483, 678, 485, 486, 0, 0,
	487, 0, 0, 0, 489, 490, 491, 0, 0, 492,
	493, 679, 0, 494, 0, 680, 495, 496, 488, 497,
	498, 499, 500, 501, 502, 503, 504, 505, 0, 506,
	507, 681, 508, 509, 510, 682, 511, 512, 513, 683,
	514, 684, 515, 516, 0, 517, 518, 0, 519, 520,
	521, 522, 523, 524, 525, 685, 526, 527, 529, 528,
	530, 0, 531, 0, 532, 533, 534, 0, 0, 0,
	0, 0, 535, 537, 0, 538, 539, 540, 541, 536,
	542, 543, 544, 545, 546, 0, 547, 548, 549, 0,
	550, 551, 552, 553, 554, 686, 555, 0, 556, 557,
	563, 564, 565, 558, 559, 566, 567, 568, 569, 570,
	0, 572, 573, 571, 574, 575, 576, 0, 577, 578,
	560, 561, 579, 580, 0, 581, 582, 583, 584, 585,
	586, 587, 687, 0, 588, 0, 589, 590, 591, 592,
	594, 562, 595, 600, 601, 688, 596, 597, 598, 599,
	689, 603, 604, 0, 605, 606, 0, 602, 593, 0,
	607, 608, 609, 610, 611, 612, 613, 614, 0, 615,
	690, 691, 692, 693, 0, 624, 0, 616, 617, 618,
	694, 619, 695, 0, 620, 621, 622, 623, 0, 625,
	626, 0, 0, 627, 628, 629, 631, 632, 630, 633,
	0, 634, 0, 0, 635, 636, 637, 696, 697, 698,
	0, 639, 638, 640, 641, 699, 642, 643, 275, 0,
	0, 0, 644, 645, 700, 646, 647, 648, 0, 0,
	0, 0, 0, 0, 0, 281, 283, 282, 284, 285,
	286, 287, 0, 288, 289, 0, 0, 0, 0, 0,
	649, 0, 0, 0, 0, 290, 291, 0, 292, 293,
	294, 295, 296, 297, 650, 651, 0, 298, 652, 299,
	653, 0, 654, 300, 301, 302, 303, 304, 305, 0,
	0, 0, 306, 655, 656, 657, 0, 307, 308, 658,
	0, 0, 0, 309, 310, 311, 312, 313, 314, 315,
	0, 0, 317, 318, 319, 316, 320, 0, 321, 0,
	322, 323, 324, 325, 326, 327, 0, 328, 329, 330,
	0, 331, 332, 333, 0, 0, 0, 0, 0, 0,
	0, 334, 335, 336, 337, 338, 0, 339, 341, 659,
	660, 0, 344, 340, 342, 0, 345, 343, 346, 0,
	347, 348, 349, 0, 0, 350, 351, 352, 0, 353,
	354, 355, 0, 356, 357, 358, 0, 359, 360, 661,
	361, 362, 363, 365, 367, 364, 366, 368, 369, 370,
	371, 662, 663, 372, 0, 0, 0, 0, 0, 0,
	0, 373, 374, 375, 664, 0, 0, 0, 376, 0,
	377, 378, 379, 0, 0, 0, 380, 381, 382, 665,
	666, 383, 384, 385, 386, 387, 388, 389, 390, 391,
	0, 392, 667, 0, 668, 393, 0, 394, 395, 396,
	397, 398, 3705, 670, 671, 484, 0, 399, 400, 0,
	401, 402, 403, 404, 405, 0, 0, 0, 0, 406,
	407, 408, 0, 0, 409, 672, 673, 0, 674, 0,
	410, 411, 0, 675, 0, 412, 413, 414, 0, 415,
	0, 0, 0, 416, 417, 418, 419, 420, 421, 0,
	422, 424, 423, 0, 425, 676, 0, 426, 427, 0,
	0, 428, 429, 430, 431, 432, 433, 436, 0, 0,
	434, 435, 437, 438, 0, 439, 440, 442, 445, 441,
	443, 444, 446, 459, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 458, 461, 0, 460, 0,
	462, 463, 464, 465, 472, 474, 475, 470, 471, 473,
	476, 477, 479, 467, 468, 469, 0, 478, 466, 0,
	0, 0, 480, 481, 482, 0, 677, 483, 678, 485,
	486, 0, 0, 487, 0, 0, 0, 489, 490, 491,
	0, 0, 492, 493, 679, 0, 494, 0, 680, 495,
	496, 488, 497, 498, 499, 500, 501, 502, 503, 504,
	505, 0, 506, 507, 681, 508, 509, 510, 682, 511,
	512, 513, 683, 514, 684, 515, 516, 0, 517, 518,
	0, 519, 520, 521, 522, 523, 524, 525, 685, 526,
	527, 529, 528, 530, 0, 531, 0, 532, 533, 534,
	0, 0, 0, 0, 0, 535, 537, 0, 538, 539,
	540, 541, 536, 542, 543, 544, 545, 546, 0, 547,
	548, 549, 0, 550, 551, 552, 553, 554, 686, 555,
	0, 556, 557, 563, 564, 565, 558, 559, 566, 567,
	568, 569, 570, 0, 572, 573, 571, 574, 575, 576,
	0, 577, 578, 560, 561, 579, 580, 0, 581, 582,
	583, 584, 585, 586, 587, 687, 0, 588, 0, 589,
	590, 591, 592, 594, 562, 595, 600, 601, 688, 596,
	597, 598, 599, 689, 603, 604, 0, 605, 606, 0,
	602, 593, 0, 607, 608, 609, 610, 611, 612, 613,
	614, 0, 615, 690, 691, 692, 693, 0, 624, 0,
	616, 617, 618, 694, 619, 695, 0, 620, 621, 622,
	623, 0, 625, 626, 0, 0, 627, 628, 629, 631,
	632, 630, 633, 0, 634, 0, 0, 635, 636, 637,
	696, 697, 698, 0, 639, 638, 640, 641, 699, 642,
	643, 275, 0, 0, 0, 644, 645, 700, 646, 647,
	648, 0, 0, 0, 0, 0, 0, 0, 281, 283,
	282, 284, 285, 286, 287, 0, 288, 289, 0, 0,
	0, 0, 0, 649, 0, 0, 0, 0, 290, 291,
	0, 292, 293, 294, 295, 296, 297, 650, 651, 0,
	298, 652, 299, 653, 0, 654, 300, 301, 302, 303,
	304, 305, 0, 0, 0, 306, 655, 656, 657, 0,
	307, 308, 658, 0, 0, 0, 309, 310, 311, 312,
	313, 314, 315, 0, 0, 317, 318, 319, 316, 320,
	0, 321, 0, 322, 323, 324, 325, 326, 327, 0,
	328, 329, 330, 0, 331, 332, 333, 0, 0, 0,
	0, 0, 0, 0, 334, 335, 336, 337, 338, 0,
	339, 341, 659, 660, 0, 344, 340, 342, 0, 345,
	343, 346, 0, 347, 348, 349, 0, 0, 350, 351,
	352, 0, 353, 354, 355, 0, 356, 357, 358, 0,
	359, 360, 661, 361, 362, 363, 365, 367, 364, 366,
	368, 369, 370, 371, 662, 663, 372, 0, 0, 0,
	0, 0, 0, 0, 373, 374, 375, 664, 0, 0,
	0, 376, 0, 377, 378, 379, 0, 0, 0, 380,
	381, 382, 665, 666, 383, 384, 385, 386, 387, 388,
	389, 390, 391, 0, 392, 667, 0, 668, 393, 0,
	394, 395, 396, 397, 398, 669, 670, 671, 484, 0,
	399, 400, 0, 401, 402, 403, 404, 405, 0, 0,
	0, 0, 406, 407, 408, 0, 0, 409, 672, 673,
	0, 674, 0, 410, 411, 0, 675, 0, 412, 413,
	414, 0, 415, 0, 0, 0, 416, 417, 418, 419,
	420, 421, 0, 422, 424, 423, 0, 425, 676, 0,
	426, 427, 0, 0, 428, 429, 430, 431, 432, 433,
	436, 0, 0, 434, 435, 437, 438, 0, 439, 440,
	442, 445, 441, 443, 444, 446, 459, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 458, 461,
	0, 460, 0, 462, 463, 464, 465, 472, 474, 475,
	470, 471, 473, 476, 477, 479, 467, 468, 469, 0,
	478, 466, 0, 0, 0, 480, 481, 482, 0, 677,
	483, 678, 485, 486, 0, 0, 487, 0, 0, 0,
	489, 490, 491, 0, 0, 492, 493, 679, 0, 494,
	0, 680, 495, 496, 488, 497, 498, 499, 500, 501,
	502, 503, 504, 505, 0, 506, 507, 681, 508, 509,
	510, 682, 511, 512, 513, 683, 514, 684, 515, 516,
	0, 517, 518, 0, 519, 520, 521, 522, 523, 524,
	525, 685, 526, 527, 529, 528, 530, 0, 531, 0,
	532, 533, 534, 0, 0, 0, 0, 0, 535, 537,
	0, 538, 539, 540, 541, 536, 542, 543, 544, 545,
	546, 0, 547, 548, 549, 0, 792, 551, 552, 553,
	554, 686, 555, 0, 556, 557, 563, 564, 565, 558,
	559, 791, 567, 568, 569, 570, 0, 572, 573, 571,
	574, 575, 576, 0, 577, 578, 560, 561, 579, 580,
	0, 581, 582, 583, 584, 585, 586, 587, 687, 0,
	588, 0, 589, 590, 591, 592, 594, 562, 595, 600,
	601, 688, 596, 597, 598, 599, 689, 603, 604, 0,
	605, 606, 0, 602, 593, 0, 607, 608, 609, 610,
	611, 612, 613, 614, 0, 615, 789, 691, 692, 693,
	0, 624, 0, 616, 617, 618, 694, 619, 695, 0,
	620, 621, 622, 623, 0, 625, 626, 0, 0, 627,
	628, 629, 631, 632, 630, 633, 0, 634, 0, 0,
	635, 636, 637, 696, 697, 698, 0, 639, 638, 640,
	641, 699, 642, 643, 275, 0, 0, 0, 644, 645,
	700, 646, 647, 648, 0, 0, 0, 0, 0, 0,
	0, 281, 283, 282, 284, 285, 286, 287, 0, 288,
	289, 0, 0, 0, 0, 0, 649, 0, 0, 0,
	0, 290, 291, 0, 292, 293, 294, 295, 296, 297,
	650, 651, 0, 298, 652, 299, 653, 0, 654, 300,
	301, 302, 303, 304, 305, 0, 0, 0, 306, 655,
	656, 657, 0, 307, 308, 658, 0, 0, 0, 309,
	310, 311, 312, 313, 314, 315, 0, 0, 317, 318,
	319, 316, 320, 0, 321, 0, 322, 323, 324, 325,
	326, 327, 0, 328, 329, 330, 0, 331, 332, 333,
	0, 0, 0, 0, 0, 0, 0, 334, 335, 336,
	337, 338, 0, 339, 341, 659, 660, 0, 344, 340,
	342, 0, 345, 343, 346, 0, 347, 348, 349, 0,
	0, 350, 351, 352, 0, 353, 354, 355, 0, 356,
	357, 358, 0, 359, 360, 661, 361, 362, 363, 365,
	367, 364, 366, 368, 369, 370, 371, 662, 663, 372,
	0, 0, 0, 0, 0, 0, 0, 373, 374, 375,
	664, 0, 0, 0, 376, 0, 377, 378, 379, 0,
	0, 0, 380, 381, 382, 665, 666, 383, 384, 385,
	386, 387, 388, 389, 390, 391, 0, 392, 667, 0,
	668, 393, 0, 394, 395, 396, 397, 398, 3620, 670,
	671, 484, 0, 399, 400, 0, 401, 402, 403, 404,
	405, 0, 0, 0, 0, 406, 407, 408, 0, 0,
	409, 672, 673, 0, 674, 0, 410, 411, 0, 675,
	0, 412, 413, 414, 0, 415, 0, 0, 0, 416,
	417, 418, 419, 420, 421, 0, 422, 424, 423, 0,
	425, 676, 0, 426, 427, 0, 0, 428, 429, 430,
	431, 432, 433, 436, 0, 0, 434, 435, 437, 438,
	0, 439, 440, 442, 445, 441, 443, 444, 446, 459,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 458, 461, 0, 460, 0, 462, 463, 464, 465,
	472, 474, 475, 470, 471, 473, 476, 477, 479, 467,
	468, 469, 0, 478, 466, 0, 0, 0, 480, 481,
	482, 0, 677, 483, 678, 485, 486, 0, 0, 487,
	0, 0, 0, 489, 490, 491, 0, 0, 492, 493,
	679, 0, 494, 0, 680, 495, 496, 488, 497, 498,
	499, 500, 501, 502, 503, 504, 505, 0, 506, 507,
	681, 508, 509, 510, 682, 511, 512, 513, 683, 514,
	684, 515, 516, 0, 517, 518, 0, 519, 520, 521,
	522, 523, 524, 525, 685, 526, 527, 529, 528, 530,
	0, 531, 0, 532, 533, 534, 0, 0, 0, 0,
	0, 535, 537, 0, 538, 539, 540, 541, 536, 542,
	543, 544, 545, 546, 0, 547, 548, 549, 0, 550,
	551, 552, 553, 554, 686, 555, 0, 556, 557, 563,
	564, 565, 558, 559, 566, 567, 568, 569, 570, 0,
	572, 573, 571, 574, 575, 576, 0, 577, 578, 560,
	561, 579, 580, 0, 581, 582, 583, 584, 585, 586,
	587, 687, 0, 588, 0, 589, 590, 591, 592, 594,
	562, 595, 600, 601, 688, 596, 597, 598, 599, 689,
	603, 604, 0, 605, 606, 0, 602, 593, 0, 607,
	608, 609, 610, 611, 612, 613, 614, 0, 615, 690,
	691, 692, 693, 0, 624, 0, 616, 617, 618, 694,
	619, 695, 0, 620, 621, 622, 623, 0, 625, 626,
	0, 0, 627, 628, 629, 631, 632, 630, 633, 0,
	634, 0, 0, 635, 636, 637, 696, 697, 698, 0,
	639, 638, 640, 641, 699, 642, 643, 275, 0, 0,
	0, 644, 645, 700, 646, 647, 648, 0, 0, 0,
	0, 0, 0, 0, 281, 283, 282, 284, 285, 286,
	287, 0, 288, 289, 0, 0, 0, 0, 0, 649,
	0, 0, 0, 0, 290, 291, 0, 292, 293, 294,
	295, 296, 297, 650, 651, 0, 298, 652, 299, 653,
	0, 654, 300, 301, 302, 303, 304, 305, 0, 0,
	0, 306, 655, 656, 657, 0, 307, 308, 658, 0,
	0, 0, 309, 310, 311, 312, 313, 314, 315, 0,
	0, 317, 318, 319, 316, 320, 0, 321, 0, 322,
	323, 324, 325, 326, 327, 0, 328, 329, 330, 0,
	331, 332, 333, 0, 0, 0, 0, 0, 0, 0,
	334, 335, 336, 337, 338, 0, 339, 341, 659, 660,
	0, 344, 340, 342, 0, 345, 343, 346, 0, 347,
	348, 349, 0, 0, 350, 351, 352, 0, 353, 354,
	355, 0, 356, 357, 358, 0, 359, 360, 661, 361,
	362, 363, 365, 367, 364, 366, 368, 369, 370, 371,
	662, 663, 372, 0, 0, 0, 0, 0, 0, 0,
	373, 374, 375, 664, 0, 0, 0, 376, 0, 377,
	378, 379, 0, 0, 0, 380, 381, 382, 665, 666,
	383, 384, 385, 386, 387, 388, 389, 390, 391, 0,
	392, 667, 0, 668, 393, 0, 394, 395, 396, 397,
	398, 3596, 670, 671, 484, 0, 399, 400, 0, 401,
	402, 403, 404, 405, 0, 0, 0, 0, 406, 407,
	408, 0, 0, 409, 672, 673, 0, 674, 0, 410,
	411, 0, 675, 0, 412, 413, 414, 0, 415, 0,
	0, 0, 416, 417, 418, 419, 420, 421, 0, 422,
	424, 423, 0, 425, 676, 0, 426, 427, 0, 0,
	428, 429, 430, 431, 432, 433, 436, 0, 0, 434,
	435, 437, 438, 0, 439, 440, 442, 445, 441, 443,
	444, 446, 459, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 458, 461, 0, 460, 0, 462,
	463, 464, 465, 472, 474, 475, 470, 471, 473, 476,
	477, 479, 467, 468, 469, 0, 478, 466, 0, 0,
	0, 480, 481, 482, 0, 677, 483, 678, 485, 486,
	0, 0, 487, 0, 0, 0, 489, 490, 491, 0,
	0, 492, 493, 679, 0, 494, 0, 680, 495, 496,
	488, 497, 498, 499, 500, 501, 502, 503, 504, 505,
	0, 506, 507, 681, 508, 509, 510, 682, 511, 512,
	513, 683, 514, 684, 515, 516, 0, 517, 518, 0,
	519, 520, 521, 522, 523, 524, 525, 685, 526, 527,
	529, 528, 530, 0, 531, 0, 532, 533, 534, 0,
	0, 0, 0, 0, 535, 537, 0, 538, 539, 540,
	541, 536, 542, 543, 544, 545, 546, 0, 547, 548,
	549, 0, 550, 551, 552, 553, 554, 686, 555, 0,
	556, 557, 563, 564, 565, 558, 559, 566, 567, 568,
	569, 570, 0, 572, 573, 571, 574, 575, 576, 0,
	577, 578, 560, 561, 579, 580, 0, 581, 582, 583,
	584, 585, 586, 587, 687, 0, 588, 0, 589, 590,
	591, 592, 594, 562, 595, 600, 601, 688, 596, 597,
	598, 599, 689, 603, 604, 0, 605, 606, 0, 602,
	593, 0, 607, 608, 609, 610, 611, 612, 613, 614,
	0, 615, 690, 691, 692, 693, 0, 624, 0, 616,
	617, 618, 694, 619, 695, 0, 620, 621, 622, 623,
	0, 625, 626, 0, 0, 627, 628, 629, 631, 632,
	630, 633, 0, 634, 0, 0, 635, 636, 637, 696,
	697, 698, 0, 639, 638, 640, 641, 699, 642, 643,
	275, 0, 0, 0, 644, 645, 700, 646, 647, 648,
	0, 0, 0, 0, 0, 0, 0, 281, 283, 282,
	284, 285, 286, 287, 0, 288, 289, 0, 0, 0,
	0, 0, 649, 0, 0, 0, 0, 290, 291, 0,
	292, 293, 294, 295, 296, 297, 650, 651, 0, 298,
	652, 299, 653, 0, 654, 300, 301, 302, 303, 304,
	305, 0, 0, 0, 306, 655, 656, 657, 0, 307,
	308, 658, 0, 0, 0, 309, 310, 311, 312, 313,
	314, 315, 0, 0, 317, 318, 319, 316, 320, 0,
	321, 0, 322, 323, 324, 325, 326, 327, 0, 328,
	329, 330, 0, 331, 332, 333, 0, 0, 0, 0,
	0, 0, 0, 334, 335, 336, 337, 338, 0, 339,
	341, 659, 660, 0, 344, 340, 342, 0, 345, 343,
	346, 0, 347, 348, 349, 0, 0, 350, 351, 352,
	0, 353, 354, 355, 0, 356, 357, 358, 0, 359,
	360, 661, 361, 362, 363, 365, 367, 364, 366, 368,
	369, 370, 371, 662, 663, 372, 0, 0, 0, 0,
	0, 0, 0, 373, 374, 375, 664, 0, 0, 0,
	376, 0, 377, 378, 379, 0, 0, 0, 380, 381,
	382, 665, 666, 383, 384, 385, 386, 387, 388, 389,
	390, 391, 0, 392, 667, 0, 668, 393, 0, 394,
	395, 396, 397, 398, 3593, 670, 671, 484, 0, 399,
	400, 0, 401, 402, 403, 404, 405, 0, 0, 0,
	0, 406, 407, 408, 0, 0, 409, 672, 673, 0,
	674, 0, 410, 411, 0, 675, 0, 412, 413, 414,
	0, 415, 0, 0, 0, 416, 417, 418, 419, 420,
	421, 0, 422, 424, 423, 0, 425, 676, 0, 426,
	427, 0, 0, 428, 429, 430, 431, 432, 433, 436,
	0, 0, 434, 435, 437, 438, 0, 439, 440, 442,
	445, 441, 443, 444, 446, 459, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 458, 461, 0,
	460, 0, 462, 463, 464, 465, 472, 474, 475, 470,
	471, 473, 476, 477, 479, 467, 468, 469, 0, 478,
	466, 0, 0, 0, 480, 481, 482, 0, 677, 483,
	678, 485, 486, 0, 0, 487, 0, 0, 0, 489,
	490, 491, 0, 0, 492, 493, 679, 0, 494, 0,
	680, 495, 496, 488, 497, 498, 499, 500, 501, 502,
	503, 504, 505, 0, 506, 507, 681, 508, 509, 510,
	682, 511, 512, 513, 683, 514, 684, 515, 516, 0,
	517, 518, 0, 519, 520, 521, 522, 523, 524, 525,
	685, 526, 527, 529, 528, 530, 0, 531, 0, 532,
	533, 534, 0, 0, 0, 0, 0, 535, 537, 0,
	538, 539, 540, 541, 536, 542, 543, 544, 545, 546,
	0, 547, 548, 549, 0, 550, 551, 552, 553, 554,
	686, 555, 0, 556, 557, 563, 564, 565, 558, 559,
	566, 567, 568, 569, 570, 0, 572, 573, 571, 574,
	575, 576, 0, 577, 578, 560, 561, 579, 580, 0,
	581, 582, 583, 584, 585, 586, 587, 687, 0, 588,
	0, 589, 590, 591, 592, 594, 562, 595, 600, 601,
	688, 596, 597, 598, 599, 689, 603, 604, 0, 605,
	606, 0, 602, 593, 0, 607, 608, 609, 610, 611,
	612, 613, 614, 0, 615, 690, 691, 692, 693, 0,
	624, 0, 616, 617, 618, 694, 619, 695, 0, 620,
	621, 622, 623, 0, 625, 626, 0, 0, 627, 628,
	629, 631, 632, 630, 633, 0, 634, 0, 0, 635,
	636, 637, 696, 697, 698, 0, 639, 638, 640, 641,
	699, 642, 643, 275, 0, 0, 0, 644, 645, 700,
	646, 647, 648, 0, 0, 0, 0, 0, 0, 0,
	281, 283, 282, 284, 285, 286, 287, 0, 288, 289,
	0, 0, 0, 0, 0, 649, 0, 0, 0, 0,
	290, 291, 0, 292, 293, 294, 295, 296, 297, 650,
	651, 0, 298, 652, 299, 653, 0, 654, 300, 301,
	302, 303, 304, 305, 0, 0, 0, 306, 655, 656,
	657, 0, 307, 308, 658, 0, 0, 0, 309, 310,
	311, 312, 313, 314, 315, 0, 0, 317, 318, 319,
	316, 320, 0, 321, 0, 322, 323, 324, 325, 326,
	327, 0, 328, 329, 330, 0, 331, 332, 333, 0,
	0, 0, 0, 0, 0, 0, 334, 335, 336, 337,
	338, 0, 339, 341, 659, 660, 0, 344, 340, 342,
	0, 345, 343, 346, 0, 347, 348, 349, 0, 0,
	350, 351, 352, 0, 353, 354, 355, 0, 356, 357,
	358, 0, 359, 360, 661, 361, 362, 363, 365, 367,
	364, 366, 368, 369, 370, 371, 662, 663, 372, 0,
	0, 0, 0, 0, 0, 0, 373, 374, 375, 664,
	0, 0, 0, 376, 0, 377, 378, 379, 0, 0,
	0, 380, 381, 382, 665, 666, 383, 384, 385, 386,
	387, 388, 389, 390, 391, 0, 392, 667, 0, 668,
	393, 0, 394, 395, 396, 397, 398, 3545, 670, 671,
	484, 0, 399, 400, 0, 401, 402, 403, 404, 405,
	0, 0, 0, 0, 406, 407, 408, 0, 0, 409,
	672, 673, 0, 674, 0, 410, 411, 0, 675, 0,
	412, 413, 414, 0, 415, 0, 0, 0, 416, 417,
	418, 419, 420, 421, 0, 422, 424, 423, 0, 425,
	676, 0, 426, 427, 0, 0, 428, 429, 430, 431,
	432, 433, 436, 0, 0, 434, 435, 437, 438, 0,
	439, 440, 442, 445, 441, 443, 444, 446, 459, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	458, 461, 0, 460, 0, 462, 463, 464, 465, 472,
	474, 475, 470, 471, 473, 476, 477, 479, 467, 468,
	469, 0, 478, 466, 0, 0, 0, 480, 481, 482,
	0, 677, 483, 678, 485, 486, 0, 0, 487, 0,
	0, 0, 489, 490, 491, 0, 0, 492, 493, 679,
	0, 494, 0, 680, 495, 496, 488, 497, 498, 499,
	500, 501, 502, 503, 504, 505, 0, 506, 507, 681,
	508, 509, 510, 682, 511, 512, 513, 683, 514, 684,
	515, 516, 0, 517, 518, 0, 519, 520, 521, 522,
	523, 524, 525, 685, 526, 527, 529, 528, 530, 0,
	531, 0, 532, 533, 534, 0, 0, 0, 0, 0,
	535, 537, 0, 538, 539, 540, 541, 536, 542, 543,
	544, 545, 546, 0, 547, 548, 549, 0, 550, 551,
	552, 553, 554, 686, 555, 0, 556, 557, 563, 564,
	565, 558, 559, 566, 567, 568, 569, 570, 0, 572,
	573, 571, 574, 575, 576, 0, 577, 578, 560, 561,
	579, 580, 0, 581, 582, 583, 584, 585, 586, 587,
	687, 0, 588, 0, 589, 590, 591, 592, 594, 562,
	595, 600, 601, 688, 596, 597, 598, 599, 689, 603,
	604, 0, 605, 606, 0, 602, 593, 0, 607, 608,
	609, 610, 611, 612, 613, 614, 0, 615, 690, 691,
	692, 693, 0, 624, 0, 616, 617, 618, 694, 619,
	695, 0, 620, 621, 622, 623, 0, 625, 626, 0,
	0, 627, 628, 629, 631, 632, 630, 633, 0, 634,
	0, 0, 635, 636, 637, 696, 697, 698, 0, 639,
	638, 640, 641, 699, 642, 643, 275, 0, 0, 0,
	644, 645, 700, 646, 647, 648, 0, 0, 0, 0,
	0, 0, 0, 281, 283, 282, 284, 285, 286, 287,
	0, 288, 289, 0, 0, 0, 0, 0, 649, 0,
	0, 0, 0, 290, 291, 0, 292, 293, 294, 295,
	296, 297, 650, 651, 0, 298, 652, 299, 653, 0,
	654, 300, 301, 302, 303, 304, 305, 0, 0, 0,
	306, 655, 656, 657, 0, 307, 308, 658, 0, 0,
	0, 309, 310, 311, 312, 313, 314, 315, 0, 0,
	317, 318, 319, 316, 320, 0, 321, 0, 322, 323,
	324, 325, 326, 327, 0, 328, 329, 330, 0, 331,
	332, 333, 0, 0, 0, 0, 0, 0, 0, 334,
	335, 336, 337, 338, 0, 339, 341, 659, 660, 0,
	344, 340, 342, 0, 345, 343, 346, 0, 347, 348,
	349, 0, 0, 350, 351, 352, 0, 353, 354, 355,
	0, 356, 357, 358, 0, 359, 360, 661, 361, 362,
	363, 365, 367, 364, 366, 368, 369, 370, 371, 662,
	663, 372, 0, 0, 0, 0, 0, 0, 0, 373,
	374, 375, 664, 0, 0, 0, 376, 0, 377, 378,
	379, 0, 0, 0, 380, 381, 382, 665, 666, 383,
	384, 385, 386, 387, 388, 389, 390, 391, 0, 392,
	667, 0, 668, 393, 0, 394, 395, 396, 397, 398,
	3543, 670, 671, 484, 0, 399, 400, 0, 401, 402,
	403, 404, 405, 0, 0, 0, 0, 406, 407, 408,
	0, 0, 409, 672, 673, 0, 674, 0, 410, 411,
	0, 675, 0, 412, 413, 414, 0, 415, 0, 0,
	0, 416, 417, 418, 419, 420, 421, 0, 422, 424,
	423, 0, 425, 676, 0, 426, 427, 0, 0, 428,
	429, 430, 431, 432, 433, 436, 0, 0, 434, 435,
	437, 438, 0, 439, 440, 442, 445, 441, 443, 444,
	446, 459, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 458, 461, 0, 460, 0, 462, 463,
	464, 465, 472, 474, 475, 470, 471, 473, 476, 477,
	479, 467, 468, 469, 0, 478, 466, 0, 0, 0,
	480, 481, 482, 0, 677, 483, 678, 485, 486, 0,
	0, 487, 0, 0, 0, 489, 490, 491, 0, 0,
	492, 493, 679, 0, 494, 0, 680, 495, 496, 488,
	497, 498, 499, 500, 501, 502, 503, 504, 505, 0,
	506, 507, 681, 508, 509, 510, 682, 511, 512, 513,
	683, 514, 684, 515, 516, 0, 517, 518, 0, 519,
	520, 521, 522, 523, 524, 525, 685, 526, 527, 529,
	528, 530, 0, 531, 0, 532, 533, 534, 0, 0,
	0, 0, 0, 535, 537, 0, 538, 539, 540, 541,
	536, 542, 543, 544, 545, 546, 0, 547, 548, 549,
	0, 550, 551, 552, 553, 554, 686, 555, 0, 556,
	557, 563, 564, 565, 558, 559, 566, 567, 568, 569,
	570, 0, 572, 573, 571, 574, 575, 576, 0, 577,
	578, 560, 561, 579, 580, 0, 581, 582, 583, 584,
	585, 586, 587, 687, 0, 588, 0, 589, 590, 591,
	592, 594, 562, 595, 600, 601, 688, 596, 597, 598,
	599, 689, 603, 604, 0, 605, 606, 0, 602, 593,
	0, 607, 608, 609, 610, 611, 612, 613, 614, 0,
	615, 690, 691, 692, 693, 0, 624, 0, 616, 617,
	618, 694, 619, 695, 0, 620, 621, 622, 623, 0,
	625, 626, 0, 0, 627, 628, 629, 631, 632, 630,
	633, 0, 634, 0, 0, 635, 636, 637, 696, 697,
	698, 0, 639, 638, 640, 641, 699, 642, 643, 275,
	0, 0, 0, 644, 645, 700, 646, 647, 648, 0,
	0, 0, 0, 0, 0, 0, 281, 283, 282, 284,
	285, 286, 287, 0, 288, 289, 0, 0, 0, 0,
	0, 649, 0, 0, 0, 0, 290, 291, 0, 292,
	293, 294, 295, 296, 297, 650, 651, 0, 298, 652,
	299, 653, 0, 654, 300, 301, 302, 303, 304, 305,
	0, 0, 0, 306, 655, 656, 657, 0, 307, 308,
	658, 0, 0, 0, 309, 310, 311, 312, 313, 314,
	315, 0, 0, 317, 318, 319, 316, 320, 0, 321,
	0, 322, 323, 324, 325, 326, 327, 0, 328, 329,
	330, 0, 331, 332, 333, 0, 0, 0, 0, 0,
	0, 0, 334, 335, 336, 337, 338, 0, 339, 341,
	659, 660, 0, 344, 340, 342, 0, 345, 343, 346,
	0, 347, 348, 349, 0, 0, 350, 351, 352, 0,
	353, 354, 355, 0, 356, 357, 358, 0, 359, 360,
	661, 361, 362, 363, 365, 367, 364, 366, 368, 369,
	370, 371, 662, 663, 372, 0, 0, 0, 0, 0,
	0, 0, 373, 374, 375, 664, 0, 0, 0, 376,
	0, 377, 378, 379, 0, 0, 0, 380, 381, 382,
	665, 666, 383, 384, 385, 386, 387, 388, 389, 390,
	391, 0, 392, 667, 0, 668, 393, 0, 394, 395,
	396, 397, 398, 3531, 670, 671, 484, 0, 399, 400,
	0, 401, 402, 403, 404, 405, 0, 0, 0, 0,
	406, 407, 408, 0, 0, 409, 672, 673, 0, 674,
	0, 410, 411, 0, 675, 0, 412, 413, 414, 0,
	415, 0, 0, 0, 416, 417, 418, 419, 420, 421,
	0, 422, 424, 423, 0, 425, 676, 0, 426, 427,
	0, 0, 428, 429, 430, 431, 432, 433, 436, 0,
	0, 434, 435, 437, 438, 0, 439, 440, 442, 445,
	441, 443, 444, 446, 459, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 458, 461, 0, 460,
	0, 462, 463, 464, 465, 472, 474, 475, 470, 471,
	473, 476, 477, 479, 467, 468, 469, 0, 478, 466,
	0, 0, 0, 480, 481, 482, 0, 677, 483, 678,
	485, 486, 0, 0, 487, 0, 0, 0, 489, 490,
	491, 0, 0, 492, 493, 679, 0, 494, 0, 680,
	495, 496, 488, 497, 498, 499, 500, 501, 502, 503,
	504, 505, 0, 506, 507, 681, 508, 509, 510, 682,
	511, 512, 513, 683, 514, 684, 515, 516, 0, 517,
	518, 0, 519, 520, 521, 522, 523, 524, 525, 685,
	526, 527, 529, 528, 530, 0, 531, 0, 532, 533,
	534, 0, 0, 0, 0, 0, 535, 537, 0, 538,
	539, 540, 541, 536, 542, 543, 544, 545, 546, 0,
	547, 548, 549, 0, 550, 551, 552, 553, 554, 686,
	555, 0, 556, 557, 563, 564, 565, 558, 559, 566,
	567, 568, 569, 570, 0, 572, 573, 571, 574, 575,
	576, 0, 577, 578, 560, 561, 579, 580, 0, 581,
	582, 583, 584, 585, 586, 587, 687, 0, 588, 0,
	589, 590, 591, 592, 594, 562, 595, 600, 601, 688,
	596, 597, 598, 599, 689, 603, 604, 0, 605, 606,
	0, 602, 593, 0, 607, 608, 609, 610, 611, 612,
	613, 614, 0, 615, 690, 691, 692, 693, 0, 624,
	0, 616, 617, 618, 694, 619, 695, 0, 620, 621,
	622, 623, 0, 625, 626, 0, 0, 627, 628, 629,
	631, 632, 630, 633, 0, 634, 0, 0, 635, 636,
	637, 696, 697, 698, 0, 639, 638, 640, 641, 699,
	642, 643, 275, 0, 0, 0, 644, 645, 700, 646,
	647, 648, 0, 0, 0, 0, 0, 0, 0, 281,
	283, 282, 284, 285, 286, 287, 0, 288, 289, 0,
	0, 0, 0, 0, 649, 0, 0, 0, 0, 290,
	291, 0, 292, 293, 294, 295, 296, 297, 650, 651,
	0, 298, 652, 299, 653, 0, 654, 300, 301, 302,
	303, 304, 305, 0, 0, 0, 306, 655, 656, 657,
	0, 307, 308, 658, 0, 0, 0, 309, 310, 311,
	312, 313, 314, 315, 0, 0, 317, 318, 319, 316,
	320, 0, 321, 0, 322, 323, 324, 325, 326, 327,
	0, 328, 329, 330, 0, 331, 332, 333, 0, 0,
	0, 0, 0, 0, 0, 334, 335, 336, 337, 338,
	0, 339, 341, 659, 660, 0, 344, 340, 342, 0,
	345, 343, 346, 0, 347, 348, 349, 0, 0, 350,
	351, 352, 0, 353, 354, 355, 0, 356, 357, 358,
	0, 359, 360, 661, 361, 362, 363, 365, 367, 364,
	366, 368, 369, 370, 371, 662, 663, 372, 0, 0,
	0, 0, 0, 0, 0, 373, 374, 375, 664, 0,
	0, 0, 376, 0, 377, 378, 379, 0, 0, 0,
	380, 381, 382, 665, 666, 383, 384, 385, 386, 387,
	388, 389, 390, 391, 0, 392, 667, 0, 668, 393,
	0, 394, 395, 396, 397, 398, 3528, 670, 671, 484,
	0, 399, 400, 0, 401, 402, 403, 404, 405, 0,
	0, 0, 0, 406, 407, 408, 0, 0, 409, 672,
	673, 0, 674, 0, 410, 411, 0, 675, 0, 412,
	413, 414, 0, 415, 0, 0, 0, 416, 417, 418,
	419, 420, 421, 0, 422, 424, 423, 0, 425, 676,
	0, 426, 427, 0, 0, 428, 429, 430, 431, 432,
	433, 436, 0, 0, 434, 435, 437, 438, 0, 439,
	440, 442, 445, 441, 443, 444, 446, 459, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 458,
	461, 0, 460, 0, 462, 463, 464, 465, 472, 474,
	475, 470, 471, 473, 476, 477, 479, 467, 468, 469,
	0, 478, 466, 0, 0, 0, 480, 481, 482, 0,
	677, 483, 678, 485, 486, 0, 0, 487, 0, 0,
	0, 489, 490, 491, 0, 0, 492, 493, 679, 0,
	494, 0, 680, 495, 496, 488, 497, 498, 499, 500,
	501, 502, 503, 504, 505, 0, 506, 507, 681, 508,
	509, 510, 682, 511, 512, 513, 683, 514, 684, 515,
	516, 0, 517, 518, 0, 519, 520, 521, 522, 523,
	524, 525, 685, 526, 527, 529, 528, 530, 0, 531,
	0, 532, 533, 534, 0, 0, 0, 0, 0, 535,
	537, 0, 538, 539, 540, 541, 536, 542, 543, 544,
	545, 546, 0, 547, 548, 549, 0, 550, 551, 552,
	553, 554, 686, 555, 0, 556, 557, 563, 564, 565,
	558, 559, 566, 567, 568, 569, 570, 0, 572, 573,
	571, 574, 575, 576, 0, 577, 578, 560, 561, 579,
	580, 0, 581, 582, 583, 584, 585, 586, 587, 687,
	0, 588, 0, 589, 590, 591, 592, 594, 562, 595,
	600, 601, 688, 596, 597, 598, 599, 689, 603, 604,
	0, 605, 606, 0, 602, 593, 0, 607, 608, 609,
	610, 611, 612, 613, 614, 0, 615, 690, 691, 692,
	693, 0, 624, 0, 616, 617, 618, 694, 619, 695,
	0, 620, 621, 622, 623, 0, 625, 626, 0, 0,
	627, 628, 629, 631, 632, 630, 633, 0, 634, 0,
	0, 635, 636, 637, 696, 697, 698, 0, 639, 638,
	640, 641, 699, 642, 643, 275, 0, 0, 0, 644,
	645, 700, 646, 647, 648, 0, 0, 0, 0, 0,
	0, 0, 281, 283, 282, 284, 285, 286, 287, 0,
	288, 289, 0, 0, 0, 0, 0, 649, 0, 0,
	0, 0, 290, 291, 0, 292, 293, 294, 295, 296,
	297, 650, 651, 0, 298, 652, 299, 653, 0, 654,
	300, 301, 302, 303, 304, 305, 0, 0, 0, 306,
	655, 656, 657, 0, 307, 308, 658, 0, 0, 0,
	309, 310, 311, 312, 313, 314, 315, 0, 0, 317,
	318, 319, 316, 320, 0, 321, 0, 322, 323, 324,
	325, 326, 327, 0, 328, 329, 330, 0, 331, 332,
	333, 0, 0, 0, 0, 0, 0, 0, 334, 335,
	336, 337, 338, 0, 339, 341, 659, 660, 0, 344,
	340, 342, 0, 345, 343, 346, 0, 347, 348, 349,
	0, 0, 350, 351, 352, 0, 353, 354, 355, 0,
	356, 357, 358, 0, 359, 360, 661, 361, 362, 363,
	365, 367, 364, 366, 368, 369, 370, 371, 662, 663,
	372, 0, 0, 0, 0, 0, 0, 0, 373, 374,
	375, 664, 0, 0, 0, 376, 0, 377, 378, 379,
	0, 0, 0, 380, 381, 382, 665, 666, 383, 384,
	385, 386, 387, 388, 389, 390, 391, 0, 392, 667,
	0, 668, 393, 0, 394, 395, 396, 397, 398, 3132,
	670, 671, 484, 0, 399, 400, 0, 401, 402, 403,
	404, 405, 0, 0, 0, 0, 406, 407, 408, 0,
	0, 409, 672, 673, 0, 674, 0, 410, 411, 0,
	675, 0, 412, 413, 414, 0, 415, 0, 0, 0,
	416, 417, 418, 419, 420, 421, 0, 422, 424, 423,
	0, 425, 676, 0, 426, 427, 0, 0, 428, 429,
	430, 431, 432, 433, 436, 0, 0, 434, 435, 437,
	438, 0, 439, 440, 442, 445, 441, 443, 444, 446,
	459, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 458, 461, 0, 460, 0, 462, 463, 464,
	465, 472, 474, 475, 470, 471, 473, 476, 477, 479,
	467, 468, 469, 0, 478, 466, 0, 0, 0, 480,
	481, 482, 0, 677, 483, 678, 485, 486, 0, 0,
	487, 0, 0, 0, 489, 490, 491, 0, 0, 492,
	493, 679, 0, 494, 0, 680, 495, 496, 488, 497,
	498, 499, 500, 501, 502, 503, 504, 505, 0, 506,
	507, 681, 508, 509, 510, 682, 511, 512, 513, 683,
	514, 684, 515, 516, 0, 517, 518, 0, 519, 520,
	521, 522, 523, 524, 525, 685, 526, 527, 529, 528,
	530, 0, 531, 0, 532, 533, 534, 0, 0, 0,
	0, 0, 535, 537, 0, 538, 539, 540, 541, 536,
	542, 543, 544, 545, 546, 0, 547, 548, 549, 0,
	550, 551, 552, 553, 554, 686, 555, 0, 556, 557,
	563, 564, 565, 558, 559, 566, 567, 568, 569, 570,
	0, 572, 573, 571, 574, 575, 576, 0, 577, 578,
	560, 561, 579, 580, 0, 581, 582, 583, 584, 585,
	586, 587, 687, 0, 588, 0, 589, 590, 591, 592,
	594, 562, 595, 600, 601, 688, 596, 597, 598, 599,
	689, 603, 604, 0, 605, 606, 0, 602, 593, 0,
	607, 608, 609, 610, 611, 612, 613, 614, 0, 615,
	690, 691, 692, 693, 0, 624, 0, 616, 617, 618,
	694, 619, 695, 0, 620, 621, 622, 623, 0, 625,
	626, 0, 0, 627, 628, 629, 631, 632, 630, 633,
	0, 634, 0, 0, 635, 636, 637, 696, 697, 698,
	0, 639, 638, 640, 641, 699, 642, 643, 275, 0,
	0, 0, 644, 645, 700, 646, 647, 648, 0, 0,
	0, 0, 0, 0, 0, 281, 283, 282, 284, 285,
	286, 287, 0, 288, 289, 0, 0, 0, 0, 0,
	649, 0, 0, 0, 0, 290, 291, 0, 292, 293,
	294, 295, 296, 297, 650, 651, 0, 298, 652, 299,
	653, 0, 654, 300, 301, 302, 303, 304, 305, 0,
	0, 0, 306, 655, 656, 657, 0, 307, 308, 658,
	0, 0, 0, 309, 310, 311, 312, 313, 314, 315,
	0, 0, 317, 318, 319, 316, 320, 0, 321, 0,
	322, 323, 324, 325, 326, 327, 0, 328, 329, 330,
	0, 331, 332, 333, 0, 0, 0, 0, 0, 0,
	0, 334, 335, 336, 337, 338, 0, 339, 341, 659,
	660, 0, 344, 340, 342, 0, 345, 343, 346, 0,
	347, 348, 349, 0, 0, 350, 351, 352, 0, 353,
	354, 355, 0, 356, 357, 358, 0, 359, 360, 661,
	361, 362, 363, 365, 367, 364, 366, 368, 369, 370,
	371, 662, 663, 372, 0, 0, 0, 0, 0, 0,
	0, 373, 374, 375, 664, 0, 0, 0, 376, 0,
	377, 378, 379, 0, 0, 0, 380, 381, 382, 665,
	666, 383, 384, 385, 386, 387, 388, 389, 390, 391,
	0, 392, 667, 0, 668, 393, 0, 394, 395, 396,
	397, 398, 669, 670, 671, 484, 0, 399, 400, 0,
	401, 402, 403, 404, 405, 0, 0, 0, 0, 406,
	407, 408, 0, 0, 409, 672, 673, 0, 674, 0,
	410, 411, 0, 675, 0, 412, 413, 414, 0, 415,
	0, 0, 0, 416, 417, 418, 419, 420, 421, 0,
	422, 424, 423, 0, 425, 676, 0, 426, 427, 0,
	0, 428, 429, 430, 431, 432, 433, 436, 0, 0,
	434, 435, 437, 438, 0, 439, 440, 442, 445, 441,
	443, 444, 446, 459, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 458, 461, 0, 460, 0,
	462, 463, 464, 465, 472, 474, 475, 470, 471, 473,
	476, 477, 479, 467, 468, 469, 0, 478, 466, 0,
	0, 0, 480, 481, 482, 0, 677, 483, 678, 485,
	486, 0, 0, 487, 0, 0, 0, 489, 490, 491,
	0, 0, 492, 493, 679, 0, 494, 0, 680, 495,
	496, 488, 497, 498, 499, 500, 501, 502, 503, 504,
	505, 0, 506, 507, 681, 508, 509, 510, 682, 511,
	512, 513, 683, 514, 684, 515, 516, 0, 517, 518,
	0, 519, 520, 521, 522, 523, 524, 525, 685, 526,
	527, 529, 528, 530, 0, 531, 0, 532, 533, 534,
	0, 0, 0, 0, 0, 535, 537, 0, 538, 539,
	540, 541, 536, 542, 543, 544, 545, 546, 0, 547,
	548, 549, 0, 550, 551, 552, 553, 554, 686, 555,
	0, 556, 557, 773, 564, 565, 558, 559, 566, 567,
	568, 569, 570, 0, 572, 573, 571, 574, 575, 576,
	0, 577, 578, 560, 561, 579, 580, 0, 581, 582,
	583, 584, 585, 586, 587, 687, 0, 588, 0, 589,
	590, 591, 592, 594, 562, 595, 600, 601, 688, 596,
	597, 598, 599, 689, 603, 604, 0, 605, 606, 0,
	602, 593, 0, 607, 608, 609, 610, 611, 612, 613,
	614, 0, 615, 690, 691, 692, 693, 0, 624, 0,
	616, 617, 618, 694, 619, 695, 0, 620, 621, 622,
	623, 0, 625, 626, 0, 0, 627, 628, 629, 631,
	632, 630, 633, 0, 634, 0, 0, 635, 636, 637,
	696, 697, 698, 0, 639, 638, 640, 641, 699, 642,
	643, 275, 0, 0, 0, 644, 645, 700, 646, 647,
	648, 0, 0, 0, 0, 0, 0, 0, 281, 283,
	282, 284, 285, 286, 287, 0, 288, 289, 0, 0,
	0, 0, 0, 649, 0, 2357, 0, 0, 290, 291,
	0, 292, 293, 294, 295, 296, 297, 650, 651, 0,
	298, 652, 299, 653, 0, 654, 300, 301, 302, 303,
	304, 305, 0, 0, 0, 306, 655, 656, 657, 0,
	307, 308, 658, 0, 0, 0, 309, 310, 311, 312,
	313, 314, 315, 0, 0, 317, 318, 319, 316, 320,
	0, 321, 0, 322, 323, 324, 325, 326, 327, 0,
	328, 329, 330, 0, 331, 332, 333, 0, 0, 0,
	0, 0, 0, 0, 334, 335, 336, 337, 338, 0,
	339, 341, 659, 660, 0, 344, 340, 342, 0, 345,
	343, 346, 0, 347, 348, 349, 0, 0, 350, 351,
	352, 0, 353, 354, 355, 0, 356, 357, 358, 0,
	359, 360, 661, 361, 362, 363, 365, 367, 364, 366,
	368, 369, 370, 371, 662, 663, 372, 0, 0, 0,
	0, 0, 0, 0, 373, 374, 375, 664, 0, 0,
	0, 376, 0, 377, 378, 379, 0, 0, 0, 380,
	381, 382, 665, 666, 383, 384, 385, 386, 387, 388,
	389, 390, 391, 0, 392, 667, 0, 668, 393, 0,
	394, 395, 396, 397, 398, 669, 670, 671, 484, 0,
	399, 400, 0, 401, 402, 403, 404, 405, 0, 0,
	0, 0, 406, 407, 408, 0, 0, 409, 672, 673,
	0, 674, 0, 410, 411, 0, 675, 0, 412, 413,
	414, 0, 415, 0, 0, 0, 416, 417, 418, 419,
	420, 421, 0, 422, 424, 423, 0, 425, 676, 0,
	426, 427, 0, 0, 428, 429, 430, 431, 432, 433,
	436, 0, 0, 434, 435, 437, 438, 0, 439, 440,
	442, 445, 441, 443, 444, 446, 459, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 458, 461,
	0, 460, 0, 462, 463, 464, 465, 472, 474, 475,
	470, 471, 473, 476, 477, 479, 467, 468, 469, 0,
	478, 466, 0, 0, 0, 480, 481, 482, 0, 677,
	483, 678, 485, 486, 0, 0, 487, 0, 0, 0,
	489, 490, 491, 0, 0, 492, 493, 679, 0, 494,
	0, 680, 495, 496, 488, 497, 498, 499, 500, 501,
	502, 503, 504, 505, 0, 506, 507, 681, 508, 509,
	510, 682, 511, 512, 513, 683, 514, 684, 515, 516,
	0, 517, 518, 0, 519, 520, 521, 522, 523, 524,
	525, 685, 526, 527, 529, 528, 530, 0, 531, 0,
	532, 533, 534, 0, 0, 0, 0, 0, 535, 537,
	0, 538, 539, 540, 541, 536, 542, 543, 544, 545,
	546, 0, 547, 548, 549, 0, 550, 551, 552, 553,
	554, 686, 555, 0, 556, 557, 563, 564, 565, 558,
	559, 566, 567, 568, 569, 570, 0, 572, 573, 571,
	574, 575, 576, 0, 0, 578, 560, 561, 579, 580,
	0, 581, 582, 583, 584, 585, 586, 587, 687, 0,
	588, 0, 589, 590, 591, 592, 594, 562, 595, 600,
	601, 688, 596, 597, 598, 599, 689, 603, 604, 0,
	605, 606, 0, 602, 593, 0, 607, 608, 609, 610,
	611, 612, 613, 614, 0, 615, 690, 691, 692, 693,
	0, 624, 0, 616, 617, 618, 694, 619, 695, 0,
	620, 621, 622, 623, 0, 625, 626, 0, 0, 627,
	628, 629, 631, 632, 630, 633, 0, 634, 0, 0,
	635, 636, 637, 696, 697, 698, 0, 639, 638, 640,
	641, 699, 642, 643, 275, 0, 0, 0, 644, 645,
	700, 646, 647, 648, 0, 0, 0, 0, 0, 0,
	0, 281, 283, 282, 284, 285, 286, 287, 0, 288,
	289, 0, 0, 0, 0, 0, 649, 0, 0, 0,
	0, 290, 291, 0, 292, 293, 294, 295, 296, 297,
	650, 651, 0, 298, 652, 299, 653, 0, 654, 300,
	301, 302, 303, 304, 305, 0, 0, 0, 306, 655,
	656, 657, 0, 307, 308, 658, 0, 0, 0, 309,
	310, 311, 312, 313, 314, 315, 0, 0, 317, 318,
	319, 316, 320, 0, 321, 0, 322, 323, 324, 325,
	326, 327, 0, 328, 329, 330, 0, 331, 332, 333,
	0, 0, 0, 0, 0, 0, 0, 334, 335, 336,
	337, 338, 0, 339, 341, 659, 660, 0, 344, 340,
	342, 0, 345, 343, 346, 0, 347, 348, 349, 0,
	0, 350, 351, 352, 0, 353, 354, 355, 0, 356,
	357, 358, 0, 359, 360, 661, 361, 362, 363, 365,
	367, 364, 366, 368, 369, 370, 371, 662, 663, 372,
	0, 0, 0, 0, 0, 0, 0, 373, 374, 375,
	664, 0, 0, 0, 376, 0, 377, 378, 379, 0,
	0, 0, 380, 381, 382, 665, 666, 383, 384, 385,
	386, 387, 388, 389, 390, 391, 0, 392, 667, 0,
	668, 393, 0, 394, 395, 396, 397, 398, 1314, 670,
	671, 484, 0, 399, 400, 0, 401, 402, 403, 404,
	405, 0, 0, 0, 0, 406, 407, 408, 0, 0,
	409, 672, 673, 0, 674, 0, 410, 411, 0, 675,
	0, 412, 413, 414, 0, 415, 0, 0, 0, 416,
	417, 418, 419, 420, 421, 0, 422, 424, 423, 0,
	425, 676, 0, 426, 427, 0, 0, 428, 429, 430,
	431, 432, 433, 436, 0, 0, 434, 435, 437, 438,
	0, 439, 440, 442, 445, 441, 443, 444, 446, 459,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 458, 461, 0, 460, 0, 462, 463, 464, 465,
	472, 474, 475, 470, 471, 473, 476, 477, 479, 467,
	468, 469, 0, 478, 466, 0, 0, 0, 480, 481,
	482, 0, 677, 483, 678, 485, 486, 0, 0, 487,
	0, 0, 0, 489, 490, 491, 0, 0, 492, 493,
	679, 0, 494, 0, 680, 495, 496, 488, 497, 498,
	499, 500, 501, 502, 503, 504, 505, 0, 506, 507,
	681, 508, 509, 510, 682, 511, 512, 513, 683, 514,
	684, 515, 516, 0, 517, 518, 0, 519, 520, 521,
	522, 523, 524, 525, 685, 526, 527, 529, 528, 530,
	0, 531, 0, 532, 533, 534, 0, 0, 0, 0,
	0, 535, 537, 0, 538, 539, 540, 541, 536, 542,
	543, 544, 545, 546, 0, 547, 548, 549, 0, 550,
	551, 552, 553, 554, 686, 555, 0, 556, 557, 563,
	564, 565, 558, 559, 566, 567, 568, 569, 570, 0,
	572, 573, 571, 574, 575, 576, 0, 577, 578, 560,
	561, 579, 580, 0, 581, 582, 583, 584, 585, 586,
	587, 687, 0, 588, 0, 589, 590, 591, 592, 594,
	562, 595, 600, 601, 688, 596, 597, 598, 599, 689,
	603, 604, 0, 605, 606, 0, 602, 593, 0, 607,
	608, 609, 610, 611, 612, 613, 614, 0, 615, 690,
	691, 692, 693, 0, 624, 0, 616, 617, 618, 694,
	619, 695, 0, 620, 621, 622, 623, 0, 625, 626,
	0, 0, 627, 628, 629, 631, 632, 630, 633, 0,
	634, 0, 0, 635, 636, 637, 696, 697, 698, 0,
	639, 638, 640, 641, 699, 642, 643, 275, 0, 0,
	0, 644, 645, 700, 646, 647, 648, 0, 0, 0,
	0, 0, 0, 0, 281, 283, 282, 284, 285, 286,
	287, 0, 288, 289, 0, 0, 0, 0, 0, 649,
	0, 0, 0, 0, 290, 291, 0, 292, 293, 294,
	295, 296, 297, 650, 651, 0, 298, 652, 299, 653,
	0, 654, 300, 301, 302, 303, 304, 305, 0, 0,
	0, 306, 655, 656, 657, 0, 307, 308, 658, 0,
	0, 0, 309, 310, 311, 312, 313, 314, 315, 0,
	0, 317, 318, 319, 316, 320, 0, 321, 0, 322,
	323, 324, 325, 326, 327, 0, 328, 329, 330, 0,
	331, 332, 333, 0, 0, 0, 0, 0, 0, 0,
	334, 335, 336, 337, 338, 0, 339, 341, 659, 660,
	0, 344, 340, 342, 0, 345, 343, 346, 0, 347,
	348, 349, 0, 0, 350, 351, 352, 0, 353, 354,
	355, 0, 356, 357, 358, 0, 359, 360, 661, 361,
	362, 363, 365, 367, 364, 366, 368, 369, 370, 371,
	662, 663, 372, 0, 0, 0, 0, 0, 0, 0,
	373, 374, 375, 664, 0, 0, 0, 376, 0, 377,
	378, 379, 0, 0, 0, 380, 381, 382, 665, 666,
	383, 384, 385, 386, 387, 388, 389, 390, 391, 0,
	392, 667, 0, 668, 393, 0, 394, 395, 396, 397,
	398, 669, 670, 671, 484, 0, 399, 400, 0, 401,
	402, 403, 404, 405, 0, 0, 0, 0, 406, 407,
	408, 0, 0, 409, 672, 673, 0, 674, 0, 410,
	411, 0, 675, 0, 412, 413, 414, 0, 415, 0,
	0, 0, 416, 417, 418, 419, 420, 421, 0, 422,
	424, 423, 0, 425, 676, 0, 426, 427, 0, 0,
	428, 429, 430, 431, 432, 433, 436, 0, 0, 434,
	435, 437, 438, 0, 439, 440, 442, 445, 441, 443,
	444, 446, 459, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 458, 461, 0, 460, 0, 462,
	463, 464, 465, 472, 474, 475, 470, 471, 473, 476,
	477, 479, 467, 468, 469, 0, 478, 466, 0, 0,
	0, 480, 481, 482, 0, 677, 483, 678, 485, 486,
	0, 0, 487, 0, 0, 0, 489, 490, 491, 0,
	0, 492, 493, 679, 0, 494, 0, 680, 495, 496,
	488, 497, 498, 499, 500, 501, 502, 503, 504, 505,
	0, 506, 507, 681, 508, 509, 510, 682, 511, 512,
	513, 683, 514, 684, 515, 516, 0, 517, 518, 0,
	519, 520, 521, 522, 523, 524, 525, 685, 526, 527,
	1243, 528, 530, 0, 531, 0, 532, 533, 534, 0,
	0, 0, 0, 0, 535, 537, 0, 538, 539, 540,
	541, 536, 542, 543, 544, 545, 546, 0, 547, 548,
	549, 0, 550, 551, 552, 553, 554, 686, 555, 0,
	556, 557, 563, 564, 565, 558, 559, 566, 567, 568,
	569, 570, 0, 572, 573, 571, 574, 575, 576, 0,
	577, 578, 560, 561, 579, 580, 0, 581, 582, 583,
	584, 585, 586, 587, 687, 0, 588, 0, 589, 590,
	591, 592, 594, 562, 595, 600, 601, 688, 596, 597,
	598, 599, 689, 603, 604, 0, 605, 606, 0, 602,
	593, 0, 607, 608, 609, 610, 611, 612, 613, 614,
	0, 615, 690, 691, 692, 693, 0, 624, 0, 616,
	617, 618, 694, 619, 695, 0, 620, 621, 622, 623,
	0, 625, 626, 0, 0, 627, 628, 629, 631, 632,
	630, 633, 0, 634, 0, 0, 635, 636, 637, 696,
	697, 698, 0, 639, 638, 640, 641, 699, 642, 643,
	275, 0, 0, 0, 644, 645, 700, 646, 647, 648,
	0, 0, 0, 0, 0, 0, 0, 281, 283, 282,
	284, 285, 286, 287, 0, 288, 289, 0, 0, 0,
	0, 0, 649, 0, 0, 0, 0, 290, 291, 0,
	292, 293, 294, 295, 296, 297, 650, 651, 0, 298,
	652, 299, 653, 0, 654, 300, 301, 302, 303, 304,
	305, 0, 0, 0, 306, 655, 656, 657, 0, 307,
	308, 658, 0, 0, 0, 309, 310, 311, 312, 313,
	314, 315, 0, 0, 317, 318, 319, 316, 320, 0,
	321, 0, 322, 323, 324, 325, 326, 327, 0, 328,
	329, 330, 0, 331, 332, 333, 0, 0, 0, 0,
	0, 0, 0, 334, 335, 336, 337, 338, 0, 339,
	341, 659, 660, 0, 344, 340, 342, 0, 345, 343,
	346, 0, 347, 348, 349, 0, 0, 350, 351, 352,
	0, 353, 354, 355, 0, 356, 357, 358, 0, 359,
	360, 661, 361, 362, 363, 365, 367, 364, 366, 368,
	369, 370, 371, 662, 663, 372, 0, 0, 0, 0,
	0, 0, 0, 373, 374, 375, 664, 0, 0, 0,
	376, 0, 377, 378, 379, 0, 0, 0, 380, 381,
	382, 665, 666, 383, 384, 385, 386, 387, 388, 389,
	390, 391, 0, 392, 667, 0, 668, 0, 0, 394,
	395, 396, 397, 398, 669, 670, 671, 484, 0, 399,
	400, 0, 401, 402, 403, 404, 405, 0, 0, 0,
	0, 406, 407, 408, 0, 0, 409, 672, 673, 0,
	674, 0, 410, 411, 0, 675, 0, 412, 413, 414,
	0, 415, 0, 0, 0, 416, 417, 418, 419, 420,
	421, 0, 422, 424, 423, 0, 425, 676, 0, 426,
	427, 0, 0, 428, 429, 430, 431, 432, 433, 436,
	0, 0, 434, 435, 437, 438, 0, 439, 440, 442,
	445, 441, 443, 444, 446, 459, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 458, 461, 0,
	460, 0, 462, 463, 464, 465, 472, 474, 475, 470,
	471, 473, 476, 477, 479, 467, 468, 469, 0, 478,
	466, 0, 0, 0, 480, 481, 482, 0, 677, 483,
	678, 485, 486, 0, 0, 487, 0, 0, 0, 489,
	490, 491, 0, 0, 492, 493, 679, 0, 494, 0,
	680, 495, 496, 488, 497, 498, 0, 500, 501, 502,
	503, 504, 505, 0, 506, 507, 681, 508, 509, 510,
	682, 511, 512, 513, 683, 514, 684, 515, 516, 0,
	517, 518, 0, 519, 520, 521, 522, 0, 524, 525,
	685, 526, 527, 529, 528, 530, 0, 531, 0, 532,
	533, 534, 0, 0, 0, 0, 0, 535, 537, 0,
	538, 539, 540, 541, 536, 542, 543, 544, 545, 546,
	0, 547, 548, 549, 0, 550, 551, 552, 553, 554,
	686, 0, 0, 556, 557, 563, 564, 565, 558, 559,
	566, 567, 568, 569, 570, 0, 572, 573, 571, 574,
	575, 576, 0, 577, 578, 560, 561, 579, 580, 0,
	581, 582, 583, 584, 585, 586, 587, 687, 0, 588,
	0, 589, 590, 591, 592, 594, 562, 595, 600, 601,
	688, 596, 597, 598, 599, 689, 603, 604, 0, 605,
	606, 0, 602, 593, 0, 607, 608, 609, 610, 611,
	612, 613, 614, 0, 615, 690, 691, 692, 693, 0,
	624, 0, 616, 617, 618, 694, 619, 695, 0, 620,
	621, 622, 623, 0, 625, 626, 0, 0, 627, 628,
	629, 631, 632, 630, 633, 0, 634, 0, 0, 635,
	636, 637, 696, 697, 698, 0, 639, 638, 640, 641,
	699, 642, 643, 1624, 0, 1359, 0, 644, 645, 700,
	646, 647, 648, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 281, 283, 282, 284, 285, 286, 287, 0,
	288, 289, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 290, 291, 0, 292, 293, 294, 295, 296,
	297, 0, 0, 0, 298, 0, 299, 0, 0, 0,
	300, 301, 302, 303, 304, 305, 0, 0, 0, 306,
	0, 0, 0, 0, 307, 308, 0, 0, 0, 0,
	309, 310, 311, 312, 313, 314, 315, 0, 0, 317,
	318, 319, 316, 320, 0, 321, 0, 322, 323, 324,
	325, 326, 327, 0, 328, 329, 330, 0, 331, 332,
	333, 0, 0, 0, 0, 0, 0, 1361, 334, 335,
	336, 337, 338, 0, 339, 341, 0, 0, 0, 344,
	340, 342, 0, 345, 343, 346, 0, 347, 348, 349,
	0, 0, 350, 351, 352, 0, 353, 354, 355, 0,
	356, 357, 358, 0, 359, 360, 0, 361, 362, 363,
	365, 367, 364, 366, 368, 369, 370, 371, 0, 0,
	372, 0, 0, 0, 0, 0, 0, 0, 373, 374,
	375, 0, 0, 0, 0, 376, 0, 377, 378, 379,
	0, 0, 0, 380, 381, 382, 0, 0, 383, 384,
	385, 386, 387, 388, 389, 390, 391, 0, 392, 0,
	0, 0, 393, 0, 394, 395, 396, 397, 398, 1623,
	0, 0, 484, 0, 399, 400, 0, 401, 402, 403,
	404, 405, 0, 0, 0, 0, 406, 407, 408, 0,
	0, 409, 0, 0, 0, 0, 0, 410, 411, 0,
	0, 0, 412, 413, 414, 0, 415, 0, 0, 0,
	416, 417, 418, 419, 420, 421, 0, 422, 424, 423,
	0, 425, 0, 0, 426, 427, 0, 0, 428, 429,
	430, 431, 432, 433, 436, 0, 0, 434, 435, 437,
	438, 0, 439, 440, 442, 445, 441, 443, 444, 446,
	459, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 458, 461, 0, 460, 0, 462, 463, 464,
	465, 472, 474, 475, 470, 471, 473, 476, 477, 479,
	467, 468, 469, 0, 478, 466, 0, 0, 0, 480,
	481, 482, 0, 0, 483, 0, 485, 486, 0, 0,
	487, 0, 0, 0, 489, 490, 491, 0, 0, 492,
	493, 0, 0, 494, 0, 0, 495, 496, 488, 497,
	498, 499, 500, 501, 502, 503, 504, 505, 0, 506,
	507, 0, 508, 509, 510, 0, 511, 512, 513, 0,
	514, 0, 515, 516, 0, 517, 518, 0, 519, 520,
	521, 522, 523, 524, 525, 0, 526, 527, 529, 528,
	530, 0, 531, 0, 532, 533, 534, 0, 0, 0,
	0, 0, 535, 537, 0, 538, 539, 540, 541, 536,
	542, 543, 544, 545, 546, 0, 547, 548, 549, 0,
	550, 551, 552, 553, 554, 0, 555, 0, 556, 557,
	563, 564, 565, 558, 559, 566, 567, 568, 569, 570,
	0, 572, 573, 571, 574, 575, 576, 1362, 577, 578,
	560, 561, 579, 580, 0, 581, 582, 583, 584, 585,
	586, 587, 0, 0, 588, 0, 589, 590, 591, 592,
	594, 562, 595, 600, 601, 0, 596, 597, 598, 599,
	0, 603, 604, 0, 605, 606, 0, 602, 593, 0,
	607, 608, 609, 610, 611, 612, 613, 614, 0, 615,
	0, 0, 0, 0, 0, 624, 0, 616, 617, 618,
	0, 619, 0, 0, 620, 621, 622, 623, 0, 625,
	626, 0, 0, 627, 628, 629, 631, 632, 630, 633,
	0, 634, 0, 0, 635, 636, 637, 0, 0, 0,
	0, 639, 638, 640, 641, 0, 642, 643, 1538, 0,
	1359, 0, 644, 645, 0, 646, 647, 648, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 281, 283, 282,
	284, 285, 286, 287, 0, 288, 289, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 290, 291, 0,
	292, 293, 294, 295, 296, 297, 0, 0, 0, 298,
	0, 299, 0, 0, 0, 300, 301, 302, 303, 304,
	305, 0, 0, 0, 306, 0, 0, 0, 0, 307,
	308, 0, 0, 0, 0, 309, 310, 311, 312, 313,
	314, 315, 0, 0, 317, 318, 319, 316, 320, 0,
	321, 0, 322, 323, 324, 325, 326, 327, 0, 328,
	329, 330, 0, 331, 332, 333, 0, 0, 0, 0,
	0, 0, 1361, 334, 335, 336, 337, 338, 0, 339,
	341, 0, 0, 0, 344, 340, 342, 0, 345, 343,
	346, 0, 347, 348, 349, 0, 0, 350, 351, 352,
	0, 353, 354, 355, 0, 356, 357, 358, 0, 359,
	360, 0, 361, 362, 363, 365, 367, 364, 366, 368,
	369, 370, 371, 0, 0, 372, 0, 0, 0, 0,
	0, 0, 0, 373, 374, 375, 0, 0, 0, 0,
	376, 0, 377, 378, 379, 0, 0, 0, 380, 381,
	382, 0, 0, 383, 384, 385, 386, 387, 388, 389,
	390, 391, 0, 392, 0, 0, 0, 393, 0, 394,
	395, 396, 397, 398, 1537, 0, 0, 484, 0, 399,
	400, 0, 401, 402, 403, 404, 405, 0, 0, 0,
	0, 406, 407, 408, 0, 0, 409, 0, 0, 0,
	0, 0, 410, 411, 0, 0, 0, 412, 413, 414,
	0, 415, 0, 0, 0, 416, 417, 418, 419, 420,
	421, 0, 422, 424, 423, 0, 425, 0, 0, 426,
	427, 0, 0, 428, 429, 430, 431, 432, 433, 436,
	0, 0, 434, 435, 437, 438, 0, 439, 440, 442,
	445, 441, 443, 444, 446, 459, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 458, 461, 0,
	460, 0, 462, 463, 464, 465, 472, 474, 475, 470,
	471, 473, 476, 477, 479, 467, 468, 469, 0, 478,
	466, 0, 0, 0, 480, 481, 482, 0, 0, 483,
	0, 485, 486, 0, 0, 487, 0, 0, 0, 489,
	490, 491, 0, 0, 492, 493, 0, 0, 494, 0,
	0, 495, 496, 488, 497, 498, 499, 500, 501, 502,
	503, 504, 505, 0, 506, 507, 0, 508, 509, 510,
	0, 511, 512, 513, 0, 514, 0, 515, 516, 0,
	517, 518, 0, 519, 520, 521, 522, 523, 524, 525,
	0, 526, 527, 529, 528, 530, 0, 531, 0, 532,
	533, 534, 0, 0, 0, 0, 0, 535, 537, 0,
	538, 539, 540, 541, 536, 542, 543, 544, 545, 546,
	0, 547, 548, 549, 0, 550, 551, 552, 553, 554,
	0, 555, 0, 556, 557, 563, 564, 565, 558, 559,
	566, 567, 568, 569, 570, 0, 572, 573, 571, 574,
	575, 576, 1362, 577, 578, 560, 561, 579, 580, 0,
	581, 582, 583, 584, 585, 586, 587, 0, 0, 588,
	0, 589, 590, 591, 592, 594, 562, 595, 600, 601,
	0, 596, 597, 598, 599, 0, 603, 604, 0, 605,
	606, 0, 602, 593, 0, 607, 608, 609, 610, 611,
	612, 613, 614, 0, 615, 0, 0, 0, 0, 0,
	624, 0, 616, 617, 618, 0, 619, 0, 0, 620,
	621, 622, 623, 0, 625, 626, 0, 0, 627, 628,
	629, 631, 632, 630, 633, 0, 634, 0, 0, 635,
	636, 637, 0, 0, 0, 0, 639, 638, 640, 641,
	0, 642, 643, 1357, 0, 1359, 0, 644, 645, 0,
	646, 647, 648, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 281, 283, 282, 284, 285, 286, 287, 0,
	288, 289, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 290, 291, 0, 292, 293, 294, 295, 296,
	297, 0, 0, 0, 298, 0, 299, 0, 0, 0,
	300, 301, 302, 303, 304, 305, 0, 0, 0, 306,
	0, 0, 0, 0, 307, 308, 0, 0, 0, 0,
	309, 310, 311, 312, 313, 314, 315, 0, 0, 317,
	318, 319, 316, 320, 0, 321, 0, 322, 323, 324,
	325, 326, 327, 0, 328, 329, 330, 0, 331, 332,
	333, 0, 0, 0, 0, 0, 0, 1361, 334, 335,
	336, 337, 338, 0, 339, 341, 0, 0, 0, 344,
	340, 342, 0, 345, 343, 346, 0, 347, 348, 349,
	0, 0, 350, 351, 352, 0, 353, 354, 355, 0,
	356, 357, 358, 0, 359, 360, 0, 361, 362, 363,
	365, 367, 364, 366, 368, 369, 370, 371, 0, 0,
	372, 0, 0, 0, 0, 0, 0, 0, 373, 374,
	375, 0, 0, 0, 0, 376, 0, 377, 378, 379,
	0, 0, 0, 380, 381, 382, 0, 0, 383, 384,
	385, 386, 387, 388, 389, 390, 391, 0, 392, 0,
	0, 0, 393, 0, 394, 395, 396, 397, 398, 1356,
	0, 0, 484, 0, 399, 400, 0, 401, 402, 403,
	404, 405, 0, 0, 0, 0, 406, 407, 408, 0,
	0, 409, 0, 0, 0, 0, 0, 410, 411, 0,
	0, 0, 412, 413, 414, 0, 415, 0, 0, 0,
	416, 417, 418, 419, 420, 421, 0, 422, 424, 423,
	0, 425, 0, 0, 426, 427, 0, 0, 428, 429,
	430, 431, 432, 433, 436, 0, 0, 434, 435, 437,
	438, 0, 439, 440, 442, 445, 441, 443, 444, 446,
	459, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 458, 461, 0, 460, 0, 462, 463, 464,
	465, 472, 474, 475, 470, 471, 473, 476, 477, 479,
	467, 468, 469, 0, 478, 466, 0, 0, 0, 480,
	481, 482, 0, 0, 483, 0, 485, 486, 0, 0,
	487, 0, 0, 0, 489, 490, 491, 0, 0, 492,
	493, 0, 0, 494, 0, 0, 495, 496, 488, 497,
	498, 499, 500, 501, 502, 503, 504, 505, 0, 506,
	507, 0, 508, 509, 510, 0, 511, 512, 513, 0,
	514, 0, 515, 516, 0, 517, 518, 0, 519, 520,
	521, 522, 523, 524, 525, 0, 526, 527, 529, 528,
	530, 0, 531, 0, 532, 533, 534, 0, 0, 0,
	0, 0, 535, 537, 0, 538, 539, 540, 541, 536,
	542, 543, 544, 545, 546, 0, 547, 548, 549, 0,
	550, 551, 552, 553, 554, 0, 555, 0, 556, 557,
	563, 564, 565, 558, 559, 566, 567, 568, 569, 570,
	0, 572, 573, 571, 574, 575, 576, 1362, 577, 578,
	560, 561, 579, 580, 0, 581, 582, 583, 584, 585,
	586, 587, 0, 0, 588, 0, 589, 590, 591, 592,
	594, 562, 595, 600, 601, 0, 596, 597, 598, 599,
	0, 603, 604, 0, 605, 606, 0, 602, 593, 0,
	607, 608, 609, 610, 611, 612, 613, 614, 0, 615,
	0, 0, 0, 0, 0, 624, 0, 616, 617, 618,
	0, 619, 0, 0, 620, 621, 622, 623, 0, 625,
	626, 0, 0, 627, 628, 629, 631, 632, 630, 633,
	0, 634, 0, 0, 635, 636, 637, 0, 0, 0,
	0, 639, 638, 640, 641, 0, 642, 643, 2135, 0,
	1359, 0, 644, 645, 0, 646, 647, 648, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 281, 283, 282,
	284, 285, 286, 287, 0, 288, 289, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 290, 291, 0,
	292, 293, 294, 295, 296, 297, 0, 0, 0, 298,
	0, 299, 0, 0, 0, 300, 301, 302, 303, 304,
	305, 0, 0, 0, 306, 0, 0, 0, 0, 307,
	308, 0, 0, 0, 0, 309, 310, 311, 312, 313,
	314, 315, 0, 0, 317, 318, 319, 316, 320, 0,
	321, 0, 322, 323, 324, 325, 326, 327, 0, 328,
	329, 330, 0, 331, 332, 333, 0, 0, 0, 0,
	0, 0, 1361, 334, 335, 336, 337, 338, 0, 339,
	341, 0, 0, 0, 344, 340, 342, 0, 345, 343,
	346, 0, 347, 348, 349, 0, 0, 350, 351, 352,
	0, 353, 354, 355, 0, 356, 357, 358, 0, 359,
	360, 0, 361, 362, 363, 365, 367, 364, 366, 368,
	369, 370, 371, 0, 0, 372, 0, 0, 0, 0,
	0, 0, 0, 373, 374, 375, 0, 0, 0, 0,
	376, 0, 377, 378, 379, 0, 0, 0, 380, 381,
	382, 0, 0, 383, 384, 385, 386, 387, 388, 389,
	390, 391, 0, 392, 0, 0, 0, 393, 0, 394,
	395, 396, 397, 398, 0, 0, 0, 484, 0, 399,
	400, 0, 401, 402, 403, 404, 405, 0, 0, 0,
	0, 406, 407, 408, 0, 0, 409, 0, 0, 0,
	0, 0, 410, 411, 0, 0, 0, 412, 413, 414,
	0, 415, 0, 0, 0, 416, 417, 418, 419, 420,
	421, 0, 422, 424, 423, 0, 425, 0, 0, 426,
	427, 0, 0, 428, 429, 430, 431, 432, 433, 436,
	0, 0, 434, 435, 437, 438, 0, 439, 440, 442,
	445, 441, 443, 444, 446, 459, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 458, 461, 0,
	460, 0, 462, 463, 464, 465, 472, 474, 475, 470,
	471, 473, 476, 477, 479, 467, 468, 469, 0, 478,
	466, 0, 0, 0, 480, 481, 482, 0, 0, 483,
	0, 485, 486, 0, 0, 487, 0, 0, 0, 489,
	490, 491, 0, 0, 492, 493, 0, 0, 494, 0,
	0, 495, 496, 488, 497, 498, 499, 500, 501, 502,
	503, 504, 505, 0, 506, 507, 0, 508, 509, 510,
	0, 511, 512, 513, 0, 514, 0, 515, 516, 0,
	517, 518, 0, 519, 520, 521, 522, 523, 524, 525,
	0, 526, 527, 529, 528, 530, 0, 531, 0, 532,
	533, 534, 0, 0, 0, 0, 0, 535, 537, 0,
	538, 539, 540, 541, 536, 542, 543, 544, 545, 546,
	0, 547, 548, 549, 0, 550, 551, 552, 553, 554,
	0, 555, 0, 556, 557, 563, 564, 565, 558, 559,
	566, 567, 568, 569, 570, 0, 572, 573, 571, 574,
	575, 576, 1362, 577, 578, 560, 561, 579, 580, 0,
	581, 582, 583, 584, 585, 586, 587, 0, 0, 588,
	0, 589, 590, 591, 592, 594, 562, 595, 600, 601,
	0, 596, 597, 598, 599, 0, 603, 604, 0, 605,
	606, 0, 602, 593, 0, 607, 608, 609, 610, 611,
	612, 613, 614, 0, 615, 0, 0, 0, 0, 0,
	624, 0, 616, 617, 618, 0, 619, 0, 0, 620,
	621, 622, 623, 0, 625, 626, 0, 0, 627, 628,
	629, 631, 632, 630, 633, 0, 634, 0, 0, 635,
	636, 637, 0, 0, 0, 0, 639, 638, 640, 641,
	0, 642, 643, 2102, 0, 1359, 0, 644, 645, 0,
	646, 647, 648, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 281, 283, 282, 284, 285, 286, 287, 0,
	288, 289, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 290, 291, 0, 292, 293, 294, 295, 296,
	297, 0, 0, 0, 298, 0, 299, 0, 0, 0,
	300, 301, 302, 303, 304, 305, 0, 0, 0, 306,
	0, 0, 0, 0, 307, 308, 0, 0, 0, 0,
	309, 310, 311, 312, 313, 314, 315, 0, 0, 317,
	318, 319, 316, 320, 0, 321, 0, 322, 323, 324,
	325, 326, 327, 0, 328, 329, 330, 0, 331, 332,
	333, 0, 0, 0, 0, 0, 0, 1361, 334, 335,
	336, 337, 338, 0, 339, 341, 0, 0, 0, 344,
	340, 342, 0, 345, 343, 346, 0, 347, 348, 349,
	0, 0, 350, 351, 352, 0, 353, 354, 355, 0,
	356, 357, 358, 0, 359, 360, 0, 361, 362, 363,
	365, 367, 364, 366, 368, 369, 370, 371, 0, 0,
	372, 0, 0, 0, 0, 0, 0, 0, 373, 374,
	375, 0, 0, 0, 0, 376, 0, 377, 378, 379,
	0, 0, 0, 380, 381, 382, 0, 0, 383, 384,
	385, 386, 387, 388, 389, 390, 391, 0, 392, 0,
	0, 0, 393, 0, 394, 395, 396, 397, 398, 0,
	0, 0, 484, 0, 399, 400, 0, 401, 402, 403,
	404, 405, 0, 0, 0, 0, 406, 407, 408, 0,
	0, 409, 0, 0, 0, 0, 0, 410, 411, 0,
	0, 0, 412, 413, 414, 0, 415, 0, 0, 0,
	416, 417, 418, 419, 420, 421, 0, 422, 424, 423,
	0, 425, 0, 0, 426, 427, 0, 0, 428, 429,
	430, 431, 432, 433, 436, 0, 0, 434, 435, 437,
	438, 0, 439, 440, 442, 445, 441, 443, 444, 446,
	459, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 458, 461, 0, 460, 0, 462, 463, 464,
	465, 472, 474, 475, 470, 471, 473, 476, 477, 479,
	467, 468, 469, 0, 478, 466, 0, 0, 0, 480,
	481, 482, 0, 0, 483, 0, 485, 486, 0, 0,
	487, 0, 0, 0, 489, 490, 491, 0, 0, 492,
	493, 0, 0, 494, 0, 0, 495, 496, 488, 497,
	498, 499, 500, 501, 502, 503, 504, 505, 0, 506,
	507, 0, 508, 509, 510, 0, 511, 512, 513, 0,
	514, 0, 515, 516, 0, 517, 518, 0, 519, 520,
	521, 522, 523, 524, 525, 0, 526, 527, 529, 528,
	530, 0, 531, 0, 532, 533, 534, 0, 0, 0,
	0, 0, 535, 537, 0, 538, 539, 540, 541, 536,
	542, 543, 544, 545, 546, 0, 547, 548, 549, 0,
	550, 551, 552, 553, 554, 0, 555, 0, 556, 557,
	563, 564, 565, 558, 559, 566, 567, 568, 569, 570,
	0, 572, 573, 571, 574, 575, 576, 1362, 577, 578,
	560, 561, 579, 580, 0, 581, 582, 583, 584, 585,
	586, 587, 0, 0, 588, 0, 589, 590, 591, 592,
	594, 562, 595, 600, 601, 0, 596, 597, 598, 599,
	0, 603, 604, 0, 605, 606, 0, 602, 593, 0,
	607, 608, 609, 610, 611, 612, 613, 614, 0, 615,
	0, 0, 0, 0, 0, 624, 0, 616, 617, 618,
	0, 619, 0, 0, 620, 621, 622, 623, 0, 625,
	626, 0, 0, 627, 628, 629, 631, 632, 630, 633,
	0, 634, 0, 0, 635, 636, 637, 0, 0, 0,
	0, 639, 638, 640, 641, 1359, 642, 643, 0, 0,
	0, 0, 644, 645, 0, 646, 647, 648, 0, 0,
	0, 0, 281, 283, 282, 284, 285, 286, 287, 0,
	288, 289, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 290, 291, 0, 292, 293, 294, 295, 296,
	297, 0, 0, 0, 298, 0, 299, 0, 0, 0,
	300, 301, 302, 303, 304, 305, 0, 0, 0, 306,
	0, 0, 0, 0, 307, 308, 0, 0, 0, 0,
	309, 310, 311, 312, 313, 314, 315, 0, 0, 317,
	318, 319, 316, 320, 0, 321, 0, 322, 323, 324,
	325, 326, 327, 0, 328, 329, 330, 0, 331, 332,
	333, 0, 0, 0, 0, 0, 0, 1361, 334, 335,
	336, 337, 338, 0, 339, 341, 0, 0, 0, 344,
	340, 342, 0, 345, 343, 346, 0, 347, 348, 349,
	0, 0, 350, 351, 352, 0, 353, 354, 355, 0,
	356, 357, 358, 0, 359, 360, 0, 361, 362, 363,
	365, 367, 364, 366, 368, 369, 370, 371, 0, 0,
	372, 0, 0, 0, 0, 0, 0, 0, 373, 374,
	375, 0, 0, 0, 0, 376, 0, 377, 378, 379,
	0, 0, 0, 380, 381, 382, 0, 0, 383, 384,
	385, 386, 387, 388, 389, 390, 391, 0, 392, 0,
	0, 0, 393, 0, 394, 395, 396, 397, 398, 0,
	0, 0, 484, 0, 399, 400, 0, 401, 402, 403,
	404, 405, 0, 0, 0, 0, 406, 407, 408, 0,
	0, 409, 0, 0, 0, 0, 0, 410, 411, 0,
	0, 0, 412, 413, 414, 0, 415, 0, 0, 0,
	416, 417, 418, 419, 420, 421, 0, 422, 424, 423,
	0, 425, 0, 0, 426, 427, 0, 0, 428, 429,
	430, 431, 432, 433, 436, 0, 0, 434, 435, 437,
	438, 0, 439, 440, 442, 445, 441, 443, 444, 446,
	459, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 458, 461, 0, 460, 0, 462, 463, 464,
	465, 472, 474, 475, 470, 471, 473, 476, 477, 479,
	467, 468, 469, 0, 478, 466, 0, 0, 0, 480,
	481, 482, 0, 0, 483, 0, 485, 486, 0, 0,
	487, 0, 0, 0, 489, 490, 491, 0, 0, 492,
	493, 0, 0, 494, 0, 0, 495, 496, 488, 497,
	498, 499, 500, 501, 502, 503, 504, 505, 0, 506,
	507, 0, 508, 509, 510, 0, 511, 512, 513, 0,
	514, 0, 515, 516, 0, 517, 518, 0, 519, 520,
	521, 522, 523, 524, 525, 0, 526, 527, 529, 528,
	530, 0, 531, 0, 532, 533, 534, 0, 0, 0,
	0, 0, 535, 537, 0, 538, 539, 540, 541, 536,
	542, 543, 544, 545, 546, 0, 547, 548, 549, 0,
	550, 551, 552, 553, 554, 0, 555, 0, 556, 557,
	563, 564, 565, 558, 559, 566, 567, 568, 569, 570,
	0, 572, 573, 571, 574, 575, 576, 1362, 577, 578,
	560, 561, 579, 580, 0, 581, 582, 583, 584, 585,
	586, 587, 0, 0, 588, 0, 589, 590, 591, 592,
	594, 562, 595, 600, 601, 0, 596, 597, 598, 599,
	0, 603, 604, 0, 605, 606, 0, 602, 593, 0,
	607, 608, 609, 610, 611, 612, 613, 614, 0, 615,
	0, 0, 0, 0, 0, 624, 0, 616, 617, 618,
	0, 619, 0, 0, 620, 621, 622, 623, 0, 625,
	626, 0, 0, 627, 628, 629, 631, 632, 630, 633,
	0, 634, 0, 0, 635, 636, 637, 0, 0, 0,
	0, 639, 638, 640, 641, 0, 642, 643, 0, 0,
	0, 0, 644, 645, 0, 646, 647, 648, 1836, 1837,
	0, 1869, 1870, 1871, 1880, 1881, 1882, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1873, 1867, 0, 0, 0, 0, 0, 0, 1839, 0,
	0, 0, 0, 0, 0, 1836, 1837, 1886, 1869, 1870,
	1871, 1880, 1881, 1882, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1892, 0, 0, 1873, 1867, 0,
	0, 0, 0, 1838, 0, 1839, 0, 0, 0, 0,
	0, 0, 0, 1858, 1886, 0, 0, 0, 0, 0,
	0, 0, 1855, 0, 0, 0, 0, 0, 0, 0,
	0, 1892, 0, 0, 0, 0, 0, 0, 0, 0,
	1838, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1858, 0, 0, 0, 0, 0, 0, 0, 0, 1855,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1861, 1862, 1863, 1864, 0, 0, 0, 0, 0, 0,
	1844, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1861, 1862, 1863,
	1864, 0, 0, 0, 0, 0, 0, 1844, 0, 1877,
	0, 0, 1887, 0, 0, 0, 0, 0, 0, 1866,
	1868, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1883, 0, 1884, 0, 0,
	0, 0, 0, 0, 1853, 1854, 1877, 0, 0, 1887,
	0, 0, 0, 0, 0, 0, 1866, 1868, 0, 0,
	0, 0, 1875, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1883, 0, 1884, 0, 0, 1859, 0, 0,
	0, 1853, 1854, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1875,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1859, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1885, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1874, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1889, 0, 0, 0, 0, 0,
	0, 1885, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1874, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1889, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1865, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1860, 1836, 1837, 0, 1869, 1870, 1871,
	1880, 1881, 1882, 0, 0, 0, 0, 1865, 0, 0,
	0, 0, 0, 0, 0, 0, 1873, 1867, 0, 0,
	1878, 0, 0, 0, 1839, 0, 0, 0, 0, 0,
	1860, 1836, 1837, 1886, 1869, 1870, 1871, 1880, 1881, 1882,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1892, 0, 1891, 1873, 1867, 0, 0, 1878, 0, 1838,
	0, 1839, 0, 0, 0, 0, 0, 0, 0, 1858,
	1886, 0, 0, 0, 0, 0, 0, 0, 1855, 0,
	0, 0, 0, 0, 0, 0, 0, 1892, 0, 1891,
	0, 0, 0, 0, 0, 0, 1838, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1858, 0, 0, 0,
	0, 0, 0, 0, 0, 1855, 0, 0, 0, 0,
	0, 0, 0, 0, 1876, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1850, 1851, 1857, 1879, 1856, 1852,
	0, 1849, 1847, 1848, 1840, 1841, 1842, 1843, 1845, 1846,
	0, 0, 0, 0, 0, 4798, 1861, 1862, 1863, 1864,
	0, 1876, 0, 0, 0, 0, 1844, 0, 0, 0,
	0, 1850, 1851, 1857, 1879, 1856, 1852, 0, 1849, 1847,
	1848, 1840, 1841, 1842, 1843, 1845, 1846, 0, 0, 0,
	0, 0, 4702, 1861, 1862, 1863, 1864, 0, 0, 0,
	0, 0, 0, 1844, 0, 1877, 0, 0, 1887, 0,
	0, 0, 0, 0, 0, 1866, 1868, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1883, 0, 1884, 0, 0, 0, 0, 0, 0,
	1853, 1854, 1877, 0, 0, 1887, 0, 0, 0, 0,
	0, 0, 1866, 1868, 0, 0, 0, 0, 1875, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1883, 0,
	1884, 0, 0, 1859, 0, 0, 0, 1853, 1854, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1875, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1859, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1885, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1874,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1889, 0, 0, 0, 0, 0, 0, 1885, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1874, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1889, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1865, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1860,
	1836, 1837, 0, 1869, 1870, 1871, 1880, 1881, 1882, 0,
	0, 0, 0, 1865, 0, 0, 0, 0, 0, 0,
	0, 0, 1873, 1867, 0, 0, 1878, 0, 0, 0,
	1839, 0, 0, 0, 0, 0, 1860, 1836, 1837, 1886,
	1869, 1870, 1871, 1880, 1881, 1882, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1892, 0, 1891, 1873,
	1867, 0, 0, 1878, 0, 1838, 0, 1839, 0, 0,
	0, 0, 0, 0, 0, 1858, 1886, 0, 0, 0,
	0, 0, 0, 0, 1855, 0, 0, 0, 0, 0,
	0, 0, 0, 1892, 0, 1891, 0, 0, 0, 0,
	0, 0, 1838, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1858, 0, 0, 0, 0, 0, 0, 0,
	0, 1855, 0, 0, 0, 0, 0, 0, 0, 0,
	1876, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1850, 1851, 1857, 1879, 1856, 1852, 0, 1849, 1847, 1848,
	1840, 1841, 1842, 1843, 1845, 1846, 0, 0, 0, 0,
	0, 4654, 1861, 1862, 1863, 1864, 0, 1876, 0, 0,
	0, 0, 1844, 0, 0, 0, 0, 1850, 1851, 1857,
	1879, 1856, 1852, 0, 1849, 1847, 1848, 1840, 1841, 1842,
	1843, 1845, 1846, 0, 0, 0, 0, 0, 4653, 1861,
	1862, 1863, 1864, 0, 0, 0, 0, 0, 0, 1844,
	0, 1877, 0, 0, 1887, 0, 0, 0, 0, 0,
	0, 1866, 1868, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1883, 0, 1884,
	0, 0, 0, 0, 0, 0, 1853, 1854, 1877, 0,
	0, 1887, 0, 0, 0, 0, 0, 0, 1866, 1868,
	0, 0, 0, 0, 1875, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1883, 0, 1884, 0, 0, 1859,
	0, 0, 0, 1853, 1854, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1875, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1859, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1885, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1874, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1889, 0, 0, 0,
	0, 0, 0, 1885, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1874, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1889, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1865, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1860, 1836, 1837, 0, 1869,
	1870, 1871, 1880, 1881, 1882, 0, 0, 0, 0, 1865,
	0, 0, 0, 0, 0, 0, 0, 0, 1873, 1867,
	0, 0, 1878, 0, 0, 0, 1839, 0, 0, 0,
	0, 0, 1860, 1836, 1837, 1886, 1869, 1870, 1871, 1880,
	1881, 1882, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1892, 0, 1891, 1873, 1867, 0, 0, 1878,
	0, 1838, 0, 1839, 0, 0, 0, 0, 0, 0,
	0, 1858, 1886, 0, 0, 0, 0, 0, 0, 0,
	1855, 0, 0, 0, 0, 0, 0, 0, 0, 1892,
	0, 1891, 0, 0, 0, 0, 0, 0, 1838, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1858, 0,
	0, 0, 0, 0, 0, 0, 0, 1855, 0, 0,
	0, 0, 0, 0, 0, 0, 1876, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1850, 1851, 1857, 1879,
	1856, 1852, 0, 1849, 1847, 1848, 1840, 1841, 1842, 1843,
	1845, 1846, 0, 0, 0, 0, 0, 4466, 1861, 1862,
	1863, 1864, 0, 1876, 0, 0, 0, 0, 1844, 0,
	0, 0, 0, 1850, 1851, 1857, 1879, 1856, 1852, 0,
	1849, 1847, 1848, 1840, 1841, 1842, 1843, 1845, 1846, 0,
	0, 0, 0, 0, 4295, 1861, 1862, 1863, 1864, 0,
	0, 0, 0, 0, 0, 1844, 0, 1877, 0, 0,
	1887, 0, 0, 0, 0, 0, 0, 1866, 1868, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1883, 0, 1884, 0, 0, 0, 0,
	0, 0, 1853, 1854, 1877, 0, 0, 1887, 0, 0,
	0, 0, 0, 0, 1866, 1868, 0, 0, 0, 0,
	1875, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1883, 0, 1884, 0, 0, 1859, 0, 0, 0, 1853,
	1854, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1875, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1859, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1885, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1874, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1889, 0, 0, 0, 0, 0, 0, 1885,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1874, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1889,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1865, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1860, 1836, 1837, 0, 1869, 1870, 1871, 1880, 1881,
	1882, 0, 0, 0, 0, 1865, 0, 0, 0, 0,
	0, 0, 0, 0, 1873, 1867, 0, 0, 1878, 0,
	0, 0, 1839, 0, 0, 0, 0, 0, 1860, 1836,
	1837, 1886, 1869, 1870, 1871, 1880, 1881, 1882, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1892, 0,
	1891, 1873, 1867, 0, 0, 1878, 0, 1838, 0, 1839,
	0, 0, 0, 0, 0, 0, 0, 1858, 1886, 0,
	0, 0, 0, 0, 0, 0, 1855, 0, 0, 0,
	0, 0, 0, 0, 0, 1892, 0, 1891, 0, 0,
	0, 0, 0, 0, 1838, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1858, 0, 0, 0, 0, 0,
	0, 0, 0, 1855, 0, 0, 0, 0, 0, 0,
	0, 0, 1876, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1850, 1851, 1857, 1879, 1856, 1852, 0, 1849,
	1847, 1848, 1840, 1841, 1842, 1843, 1845, 1846, 0, 0,
	0, 0, 0, 4212, 1861, 1862, 1863, 1864, 0, 1876,
	0, 0, 0, 0, 1844, 0, 0, 0, 0, 1850,
	1851, 1857, 1879, 1856, 1852, 0, 1849, 1847, 1848, 1840,
	1841, 1842, 1843, 1845, 1846, 0, 0, 0, 0, 0,
	4211, 1861, 1862, 1863, 1864, 0, 0, 0, 0, 0,
	0, 1844, 0, 1877, 0, 0, 1887, 0, 0, 0,
	0, 0, 0, 1866, 1868, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1883,
	0, 1884, 0, 0, 0, 0, 0, 0, 1853, 1854,
	1877, 0, 0, 1887, 0, 0, 0, 0, 0, 0,
	1866, 1868, 0, 0, 0, 0, 1875, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1883, 0, 1884, 0,
	0, 1859, 0, 0, 0, 1853, 1854, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1875, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1859, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1885, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1874, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1889, 0,
	0, 0, 0, 0, 0, 1885, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1874, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1889, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1865, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1860, 1836, 1837,
	0, 1869, 1870, 1871, 1880, 1881, 1882, 0, 0, 0,
	0, 1865, 0, 0, 0, 0, 0, 0, 0, 0,
	1873, 1867, 0, 0, 1878, 0, 0, 0, 1839, 0,
	0, 0, 0, 0, 1860, 1836, 1837, 1886, 1869, 1870,
	1871, 1880, 1881, 1882, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1892, 0, 1891, 1873, 1867, 0,
	0, 1878, 0, 1838, 0, 1839, 0, 0, 0, 0,
	0, 0, 0, 1858, 1886, 0, 0, 0, 0, 0,
	0, 0, 1855, 0, 0, 0, 0, 0, 0, 0,
	0, 1892, 0, 1891, 0, 0, 0, 0, 0, 0,
	1838, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1858, 0, 0, 0, 0, 0, 0, 0, 0, 1855,
	0, 0, 0, 0, 0, 0, 0, 0, 1876, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1850, 1851,
	1857, 1879, 1856, 1852, 0, 1849, 1847, 1848, 1840, 1841,
	1842, 1843, 1845, 1846, 0, 0, 0, 0, 0, 4210,
	1861, 1862, 1863, 1864, 0, 1876, 0, 0, 0, 0,
	1844, 0, 0, 0, 0, 1850, 1851, 1857, 1879, 1856,
	1852, 0, 1849, 1847, 1848, 1840, 1841, 1842, 1843, 1845,
	1846, 0, 0, 0, 0, 0, 3847, 1861, 1862, 1863,
	1864, 0, 0, 0, 0, 0, 0, 1844, 0, 1877,
	0, 0, 1887, 0, 0, 0, 0, 0, 0, 1866,
	1868, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1883, 0, 1884, 0, 0,
	0, 0, 0, 0, 1853, 1854, 1877, 0, 0, 1887,
	0, 0, 0, 0, 0, 0, 1866, 1868, 0, 0,
	0, 0, 1875, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1883, 0, 1884, 0, 0, 1859, 0, 0,
	0, 1853, 1854, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1875,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1859, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1885, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1874, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1889, 0, 0, 0, 0, 0,
	0, 1885, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1874, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1889, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1865, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1860, 1836, 1837, 0, 1869, 1870, 1871,
	1880, 1881, 1882, 0, 0, 0, 0, 1865, 0, 0,
	0, 0, 0, 0, 0, 0, 1873, 1867, 0, 0,
	1878, 0, 0, 0, 1839, 0, 0, 0, 0, 0,
	1860, 1836, 1837, 1886, 1869, 1870, 1871, 1880, 1881, 1882,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1892, 0, 1891, 1873, 1867, 0, 0, 1878, 0, 1838,
	0, 1839, 0, 0, 0, 0, 0, 0, 0, 1858,
	1886, 0, 0, 0, 0, 0, 0, 0, 1855, 0,
	0, 0, 0, 0, 0, 0, 0, 1892, 0, 1891,
	0, 0, 0, 0, 0, 0, 1838, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1858, 0, 0, 0,
	0, 0, 0, 0, 0, 1855, 0, 0, 0, 0,
	0, 0, 0, 0, 1876, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1850, 1851, 1857, 1879, 1856, 1852,
	0, 1849, 1847, 1848, 1840, 1841, 1842, 1843, 1845, 1846,
	0, 0, 0, 0, 0, 3332, 1861, 1862, 1863, 1864,
	0, 1876, 0, 0, 0, 0, 1844, 0, 0, 0,
	0, 1850, 1851, 1857, 1879, 1856, 1852, 0, 1849, 1847,
	1848, 1840, 1841, 1842, 1843, 1845, 1846, 0, 0, 0,
	0, 0, 3331, 1861, 1862, 1863, 1864, 0, 0, 0,
	0, 0, 0, 1844, 0, 1877, 0, 0, 1887, 0,
	0, 0, 0, 0, 0, 1866, 1868, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1883, 0, 1884, 0, 0, 0, 0, 0, 0,
	1853, 1854, 1877, 0, 0, 1887, 0, 0, 0, 0,
	0, 0, 1866, 1868, 0, 0, 0, 0, 1875, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1883, 0,
	1884, 0, 0, 1859, 0, 0, 0, 1853, 1854, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1875, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1859, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1885, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1874,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1889, 0, 0, 0, 0, 0, 0, 1885, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1874, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1889, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1865, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1860,
	1836, 1837, 0, 1869, 1870, 1871, 1880, 1881, 1882, 0,
	0, 0, 0, 1865, 0, 0, 0, 0, 0, 0,
	0, 0, 1873, 1867, 0, 0, 1878, 0, 0, 0,
	1839, 0, 0, 0, 0, 0, 1860, 0, 0, 1886,
	0, 0, 0, 0, 1836, 1837, 0, 1869, 1870, 1871,
	1880, 1881, 1882, 0, 0, 0, 1892, 0, 1891, 0,
	0, 0, 0, 1878, 0, 1838, 1873, 1867, 0, 0,
	0, 0, 0, 0, 1839, 1858, 0, 0, 0, 0,
	0, 0, 0, 1886, 1855, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1891, 0, 0, 0, 0,
	1892, 0, 0, 0, 0, 0, 0, 0, 0, 1838,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1858,
	0, 0, 0, 2203, 0, 0, 0, 0, 1855, 0,
	1876, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1850, 1851, 1857, 1879, 1856, 1852, 0, 1849, 1847, 1848,
	1840, 1841, 1842, 1843, 1845, 1846, 0, 0, 0, 0,
	0, 3330, 1861, 1862, 1863, 1864, 0, 1876, 0, 0,
	0, 0, 1844, 0, 0, 0, 0, 1850, 1851, 1857,
	1879, 1856, 1852, 0, 1849, 1847, 1848, 1840, 1841, 1842,
	1843, 1845, 1846, 0, 0, 2201, 0, 0, 3329, 0,
	0, 0, 0, 0, 0, 0, 1861, 1862, 1863, 1864,
	0, 1877, 0, 0, 1887, 0, 1844, 0, 0, 0,
	0, 1866, 1868, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1883, 0, 1884,
	0, 0, 0, 0, 0, 0, 1853, 1854, 0, 0,
	0, 0, 0, 0, 0, 1877, 0, 0, 1887, 0,
	0, 0, 0, 0, 1875, 1866, 1868, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1859,
	0, 1883, 0, 1884, 0, 0, 0, 0, 0, 0,
	1853, 1854, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1875, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1859, 0, 0, 1885, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1874, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1889, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1885, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1874,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1889, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1865, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1860, 1836, 1837, 0, 1869,
	1870, 1871, 1880, 1881, 1882, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2202, 1865, 0, 1873, 1867,
	0, 0, 1878, 0, 0, 0, 1839, 0, 0, 0,
	0, 0, 0, 0, 0, 1886, 0, 1836, 1837, 1860,
	1869, 1870, 1871, 1880, 1881, 1882, 0, 0, 0, 0,
	0, 0, 1892, 0, 1891, 0, 0, 0, 0, 1873,
	1867, 1838, 0, 0, 0, 0, 1878, 1839, 0, 0,
	0, 1858, 0, 0, 0, 0, 1886, 0, 0, 0,
	1855, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1892, 0, 0, 0, 0, 1891, 0,
	0, 0, 1838, 0, 0, 0, 0, 0, 2200, 0,
	0, 0, 1858, 0, 0, 0, 0, 0, 0, 0,
	0, 1855, 0, 0, 0, 0, 1876, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1850, 1851, 1857, 1879,
	1856, 1852, 0, 1849, 1847, 1848, 1840, 1841, 1842, 1843,
	1845, 1846, 0, 0, 0, 3294, 0, 0, 1861, 1862,
	1863, 1864, 0, 0, 0, 0, 0, 0, 1844, 4951,
	1876, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1850, 1851, 1857, 1879, 1856, 1852, 0, 1849, 1847, 1848,
	1840, 1841, 1842, 1843, 1845, 1846, 0, 0, 0, 1861,
	1862, 1863, 1864, 0, 0, 0, 0, 1877, 0, 1844,
	1887, 3394, 0, 0, 0, 0, 3393, 1866, 1868, 0,
	0, 0, 1836, 1837, 0, 1869, 1870, 1871, 1880, 1881,
	1882, 0, 0, 1883, 0, 1884, 0, 0, 0, 0,
	0, 0, 1853, 1854, 1873, 1867, 0, 0, 1877, 0,
	3265, 1887, 1839, 0, 0, 0, 2798, 0, 1866, 1868,
	1875, 1886, 0, 1836, 1837, 0, 1869, 1870, 1871, 1880,
	1881, 1882, 0, 0, 1883, 1859, 1884, 0, 1892, 0,
	0, 0, 0, 1853, 1854, 1873, 1867, 1838, 0, 0,
	2797, 0, 0, 1839, 0, 0, 0, 1858, 0, 0,
	0, 1875, 1886, 0, 0, 0, 1855, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1859, 0, 0, 1892,
	0, 0, 1885, 0, 0, 0, 0, 0, 1838, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1858, 0,
	0, 1874, 0, 0, 0, 0, 3266, 1855, 0, 0,
	0, 0, 1889, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1885, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4950, 0, 0, 0, 0, 0,
	0, 0, 1874, 0, 1861, 1862, 1863, 1864, 0, 0,
	0, 0, 0, 1889, 1844, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1865, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1861, 1862, 1863, 1864, 0,
	0, 1860, 0, 1877, 0, 1844, 1887, 0, 0, 0,
	0, 0, 0, 1866, 1868, 0, 0, 0, 0, 1865,
	0, 0, 0, 0, 0, 0, 0, 0, 1878, 1883,
	0, 1884, 0, 0, 0, 0, 0, 0, 1853, 1854,
	0, 0, 1860, 0, 1877, 0, 0, 1887, 0, 0,
	0, 0, 0, 0, 1866, 1868, 1875, 0, 0, 0,
	1891, 0, 0, 0, 0, 0, 0, 0, 0, 1878,
	1883, 1859, 1884, 0, 0, 0, 0, 0, 0, 1853,
	1854, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1875, 0, 0,
	0, 1891, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1859, 0, 0, 0, 0, 0, 1885, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1876, 0, 0, 0, 0, 1874, 0, 0,
	0, 0, 1850, 1851, 1857, 1879, 1856, 1852, 1889, 1849,
	1847, 1848, 1840, 1841, 1842, 1843, 1845, 1846, 0, 1885,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1876, 0, 0, 0, 0, 1874, 0,
	0, 0, 0, 1850, 1851, 1857, 1879, 1856, 1852, 1889,
	1849, 1847, 1848, 1840, 1841, 1842, 1843, 1845, 1846, 0,
	0, 0, 0, 0, 1865, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1836, 1837, 1860, 1869, 1870,
	1871, 1880, 1881, 1882, 0, 0, 0, 0, 2270, 0,
	0, 0, 0, 0, 0, 1865, 0, 1873, 1867, 0,
	0, 0, 0, 0, 1878, 1839, 0, 0, 0, 0,
	0, 0, 0, 0, 1886, 0, 1836, 1837, 1860, 1869,
	1870, 1871, 1880, 1881, 1882, 0, 0, 0, 0, 0,
	0, 1892, 0, 0, 0, 0, 1891, 0, 1873, 1867,
	1838, 0, 0, 0, 0, 1878, 1839, 0, 0, 0,
	1858, 0, 0, 0, 0, 1886, 0, 0, 0, 1855,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1892, 0, 0, 0, 0, 1891, 0, 0,
	0, 1838, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1858, 0, 0, 0, 0, 0, 0, 0, 0,
	1855, 0, 0, 0, 0, 0, 0, 2271, 1876, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1850, 1851,
	1857, 1879, 1856, 1852, 0, 1849, 1847, 1848, 1840, 1841,
	1842, 1843, 1845, 1846, 0, 0, 0, 1861, 1862, 1863,
	1864, 0, 0, 0, 0, 0, 0, 1844, 0, 1876,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1850,
	1851, 1857, 1879, 1856, 1852, 0, 1849, 1847, 1848, 1840,
	1841, 1842, 1843, 1845, 1846, 0, 0, 0, 1861, 1862,
	1863, 1864, 0, 0, 0, 0, 1877, 0, 1844, 1887,
	4560, 0, 0, 0, 0, 0, 1866, 1868, 0, 0,
	0, 1836, 1837, 0, 1869, 1870, 1871, 1880, 1881, 1882,
	0, 0, 1883, 0, 1884, 0, 0, 0, 0, 0,
	0, 1853, 1854, 1873, 1867, 0, 0, 1877, 0, 0,
	1887, 1839, 0, 0, 0, 0, 0, 1866, 1868, 1875,
	1886, 0, 1836, 1837, 0, 1869, 1870, 1871, 1880, 1881,
	1882, 0, 0, 1883, 1859, 1884, 0, 1892, 0, 0,
	0, 0, 1853, 1854, 1873, 1867, 1838, 0, 0, 0,
	0, 0, 1839, 0, 0, 0, 1858, 0, 0, 0,
	1875, 1886, 0, 0, 0, 1855, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1859, 0, 0, 1892, 0,
	0, 1885, 0, 0, 0, 0, 0, 1838, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1858, 0, 0,
	1874, 0, 0, 0, 0, 0, 1855, 0, 0, 0,
	0, 1889, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1885, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1874, 0, 1861, 1862, 1863, 1864, 0, 0, 0,
	0, 0, 1889, 1844, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1865, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1861, 1862, 1863, 1864, 0, 0,
	1860, 0, 1877, 0, 1844, 1887, 0, 0, 0, 0,
	0, 0, 1866, 1868, 0, 0, 0, 0, 1865, 0,
	0, 0, 0, 0, 0, 0, 0, 1878, 1883, 0,
	1884, 0, 0, 0, 0, 0, 0, 1853, 1854, 0,
	0, 1860, 0, 1877, 0, 0, 1887, 0, 0, 0,
	0, 0, 0, 1866, 1868, 1875, 0, 0, 0, 1891,
	0, 0, 0, 0, 0, 0, 0, 0, 1878, 1883,
	1859, 1884, 0, 0, 0, 0, 0, 0, 1853, 1854,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1875, 0, 0, 0,
	1891, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1859, 0, 0, 0, 0, 0, 1885, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1876, 0, 0, 0, 0, 1874, 1097, 0, 0,
	0, 1850, 1851, 1857, 1879, 1856, 1852, 1889, 1849, 1847,
	1848, 1840, 1841, 1842, 1843, 1845, 1846, 0, 1885, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1876, 0, 0, 0, 0, 1874, 0, 0,
	0, 0, 1850, 1851, 1857, 1879, 1856, 1852, 1889, 1849,
	1847, 1848, 1840, 1841, 1842, 1843, 1845, 1846, 0, 0,
	0, 0, 0, 1865, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1836, 1837, 1860, 1869, 1870, 1871,
	1880, 1881, 1882, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1865, 0, 1873, 1867, 0, 0,
	0, 0, 0, 1878, 1839, 0, 0, 0, 0, 0,
	0, 0, 0, 1886, 0, 1836, 1837, 1860, 1869, 1870,
	1871, 1880, 1881, 1882, 0, 0, 0, 0, 0, 0,
	1892, 0, 0, 0, 0, 1891, 0, 1873, 1867, 1838,
	0, 0, 0, 0, 1878, 1839, 0, 0, 0, 1858,
	0, 0, 0, 0, 1886, 0, 0, 0, 1855, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1892, 0, 0, 0, 0, 1891, 0, 0, 0,
	1838, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1858, 0, 0, 0, 4340, 0, 0, 0, 0, 1855,
	0, 0, 0, 0, 0, 0, 0, 1876, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1850, 1851, 1857,
	1879, 1856, 1852, 0, 1849, 1847, 1848, 1840, 1841, 1842,
	1843, 1845, 1846, 0, 0, 0, 1861, 1862, 1863, 1864,
	0, 0, 0, 0, 0, 0, 1844, 0, 1876, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1850, 1851,
	1857, 1879, 1856, 1852, 0, 1849, 1847, 1848, 1840, 1841,
	1842, 1843, 1845, 1846, 0, 0, 0, 1861, 1862, 1863,
	1864, 0, 0, 0, 0, 1877, 0, 1844, 1887, 4037,
	0, 0, 0, 0, 0, 1866, 1868, 0, 0, 0,
	1836, 1837, 0, 1869, 1870, 1871, 1880, 1881, 1882, 0,
	0, 1883, 0, 1884, 0, 0, 0, 0, 0, 0,
	1853, 1854, 1873, 1867, 0, 0, 1877, 0, 0, 1887,
	1839, 0, 0, 0, 0, 0, 1866, 1868, 1875, 1886,
	0, 1836, 1837, 0, 1869, 1870, 1871, 1880, 1881, 1882,
	0, 0, 1883, 1859, 1884, 0, 1892, 0, 0, 0,
	0, 1853, 1854, 1873, 1867, 1838, 0, 0, 0, 0,
	0, 1839, 0, 0, 0, 1858, 0, 0, 0, 1875,
	1886, 0, 0, 0, 1855, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1859, 0, 0, 1892, 0, 0,
	1885, 0, 0, 0, 0, 0, 1838, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1858, 0, 0, 1874,
	0, 0, 0, 0, 0, 1855, 0, 0, 0, 0,
	1889, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1885, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1874, 0, 1861, 1862, 1863, 1864, 0, 0, 0, 0,
	0, 1889, 1844, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1865, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1861, 1862, 1863, 1864, 0, 0, 1860,
	0, 1877, 0, 1844, 1887, 0, 0, 0, 0, 0,
	3400, 1866, 1868, 0, 0, 0, 0, 1865, 0, 0,
	0, 0, 0, 0, 0, 0, 1878, 1883, 0, 1884,
	0, 0, 0, 0, 0, 0, 1853, 1854, 0, 0,
	1860, 0, 1877, 0, 0, 1887, 0, 0, 0, 0,
	0, 0, 1866, 1868, 1875, 0, 0, 0, 1891, 0,
	0, 0, 0, 0, 0, 0, 0, 1878, 1883, 1859,
	1884, 0, 0, 0, 0, 0, 4038, 1853, 1854, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1875, 0, 0, 0, 1891,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1859, 0, 0, 0, 0, 0, 1885, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1876, 0, 0, 0, 0, 1874, 0, 0, 0, 0,
	1850, 1851, 1857, 1879, 1856, 1852, 1889, 1849, 1847, 1848,
	1840, 1841, 1842, 1843, 1845, 1846, 0, 1885, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1876, 0, 0, 0, 0, 1874, 0, 0, 0,
	0, 1850, 1851, 1857, 1879, 1856, 1852, 1889, 1849, 1847,
	1848, 1840, 1841, 1842, 1843, 1845, 1846, 0, 0, 0,
	0, 0, 1865, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1836, 1837, 1860, 1869, 1870, 1871, 1880,
	1881, 1882, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1865, 0, 1873, 1867, 0, 0, 0,
	3395, 0, 1878, 1839, 0, 0, 0, 0, 0, 0,
	0, 0, 1886, 0, 1836, 1837, 1860, 1869, 1870, 1871,
	1880, 1881, 1882, 0, 0, 0, 0, 0, 0, 1892,
	0, 0, 0, 0, 1891, 0, 1873, 1867, 1838, 0,
	0, 0, 0, 1878, 1839, 0, 3828, 0, 1858, 0,
	0, 0, 0, 1886, 0, 0, 0, 1855, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1892, 0, 0, 0, 0, 1891, 0, 0, 0, 1838,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1858,
	0, 0, 0, 0, 0, 0, 0, 0, 1855, 0,
	0, 0, 0, 0, 0, 0, 1876, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1850, 1851, 1857, 1879,
	1856, 1852, 0, 1849, 1847, 1848, 1840, 1841, 1842, 1843,
	1845, 1846, 0, 0, 0, 1861, 1862, 1863, 1864, 0,
	0, 0, 0, 0, 0, 1844, 0, 1876, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1850, 1851, 1857,
	1879, 1856, 1852, 0, 1849, 1847, 1848, 1840, 1841, 1842,
	1843, 1845, 1846, 0, 0, 0, 1861, 1862, 1863, 1864,
	0, 0, 0, 0, 1877, 0, 1844, 1887, 0, 0,
	0, 0, 0, 0, 1866, 1868, 0, 0, 0, 1836,
	1837, 0, 1869, 1870, 1871, 1880, 1881, 1882, 0, 0,
	1883, 0, 1884, 0, 0, 0, 0, 0, 0, 1853,
	1854, 1873, 1867, 0, 0, 1877, 3333, 0, 1887, 1839,
	0, 0, 0, 0, 0, 1866, 1868, 1875, 1886, 0,
	1836, 1837, 0, 1869, 1870, 1871, 1880, 1881, 1882, 0,
	0, 1883, 1859, 1884, 0, 1892, 0, 0, 0, 0,
	1853, 1854, 1873, 1867, 1838, 0, 0, 0, 0, 0,
	1839, 0, 0, 0, 1858, 0, 0, 0, 1875, 1886,
	0, 0, 0, 1855, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1859, 0, 0, 1892, 0, 0, 1885,
	0, 0, 0, 0, 0, 1838, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1858, 0, 0, 1874, 0,
	0, 0, 0, 0, 1855, 0, 0, 0, 0, 1889,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1885, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1874,
	0, 1861, 1862, 1863, 1864, 0, 0, 0, 0, 0,
	1889, 1844, 0, 0, 0, 0, 0, 0, 0, 0,
	3360, 0, 0, 0, 0, 1865, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1861, 1862, 1863, 1864, 0, 0, 1860, 0,
	1877, 0, 1844, 1887, 0, 0, 0, 0, 0, 0,
	1866, 1868, 0, 0, 0, 0, 1865, 0, 0, 0,
	0, 0, 0, 0, 0, 1878, 1883, 0, 1884, 0,
	0, 0, 0, 0, 0, 1853, 1854, 0, 0, 1860,
	0, 1877, 0, 0, 1887, 0, 0, 0, 0, 0,
	0, 1866, 1868, 1875, 0, 0, 0, 1891, 0, 0,
	0, 0, 0, 0, 0, 0, 1878, 1883, 1859, 1884,
	0, 0, 0, 0, 0, 0, 1853, 1854, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1875, 0, 0, 0, 1891, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1859,
	0, 0, 0, 0, 0, 1885, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1876,
	0, 0, 0, 0, 1874, 0, 0, 0, 0, 1850,
	1851, 1857, 1879, 1856, 1852, 1889, 1849, 1847, 1848, 1840,
	1841, 1842, 1843, 1845, 1846, 0, 1885, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1876, 0, 0, 0, 0, 1874, 0, 0, 0, 0,
	1850, 1851, 1857, 1879, 1856, 1852, 1889, 1849, 1847, 1848,
	1840, 1841, 1842, 1843, 1845, 1846, 0, 0, 0, 0,
	0, 1865, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1836, 1837, 1860, 1869, 1870, 1871, 1880, 1881,
	1882, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1865, 0, 1873, 1867, 0, 0, 0, 0,
	0, 1878, 1839, 0, 0, 0, 0, 0, 0, 0,
	0, 1886, 0, 1836, 1837, 1860, 1869, 1870, 1871, 1880,
	1881, 1882, 0, 0, 0, 0, 0, 0, 1892, 0,
	0, 0, 0, 1891, 0, 1873, 1867, 1838, 0, 0,
	0, 0, 1878, 1839, 0, 0, 0, 1858, 0, 0,
	0, 0, 1886, 0, 0, 0, 1855, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1892,
	0, 0, 0, 0, 1891, 0, 0, 0, 1838, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1858, 0,
	0, 0, 0, 0, 0, 0, 0, 1855, 0, 0,
	0, 0, 0, 0, 0, 1876, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1850, 1851, 1857, 1879, 1856,
	1852, 0, 1849, 1847, 1848, 1840, 1841, 1842, 1843, 1845,
	1846, 0, 0, 0, 1861, 1862, 1863, 1864, 0, 2370,
	0, 0, 0, 0, 1844, 0, 1876, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1850, 1851, 1857, 1879,
	1856, 1852, 0, 1849, 1847, 1848, 1840, 1841, 1842, 1843,
	1845, 1846, 0, 0, 0, 1861, 1862, 1863, 1864, 0,
	0, 0, 0, 1877, 0, 1844, 1887, 0, 0, 0,
	0, 0, 0, 1866, 1868, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1883,
	0, 1884, 0, 0, 0, 0, 0, 0, 1853, 1854,
	0, 0, 0, 0, 1877, 0, 0, 1887, 0, 0,
	0, 0, 0, 0, 1866, 1868, 1875, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1883, 1859, 1884, 0, 0, 978, 0, 1027, 0, 1853,
	1854, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1875, 0, 0,
	0, 986, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1859, 0, 0, 0, 0, 1001, 1885, 984,
	983, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1874, 0, 0,
	0, 1003, 0, 0, 0, 0, 0, 985, 1889, 0,
	0, 0, 988, 0, 0, 0, 0, 1038, 0, 1885,
	0, 0, 0, 0, 0, 0, 998, 999, 0, 0,
	0, 0, 0, 0, 0, 1016, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1889,
	0, 0, 0, 1028, 990, 0, 0, 0, 0, 0,
	991, 0, 0, 0, 1865, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 992, 0, 0, 0, 1860, 0, 0,
	0, 0, 1025, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1865, 0, 0, 0, 0,
	0, 0, 0, 0, 1878, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1026, 0, 0, 0, 1860, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	994, 0, 0, 0, 0, 0, 1891, 0, 982, 0,
	0, 0, 0, 0, 0, 1878, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 995, 996, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1004, 1002, 1891, 0, 0,
	0, 0, 0, 997, 0, 0, 0, 1013, 0, 0,
	1033, 1032, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1035, 1024, 0, 1876, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1850, 1851,
	1857, 1879, 1856, 1852, 0, 1849, 1847, 1848, 1840, 1841,
	1842, 1843, 1845, 1846, 0, 0, 0, 1029, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1876,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1850,
	1851, 1857, 1879, 1856, 1852, 0, 1849, 1847, 1848, 1840,
	1841, 1842, 1843, 1845, 1846, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 989, 0, 0, 1037, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	987, 0, 0, 0, 1020, 1021, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1023, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1030, 1018, 0, 0, 0, 0, 0, 0,
	0, 1036, 1014, 0, 0, 1007, 1005, 0, 1010, 0,
	0, 0, 0, 0, 1011, 0, 0, 980, 0, 1031,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 981, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1022, 0, 1012, 0, 0, 0,
	0, 0, 1009, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1034, 0, 0, 0, 0, 0, 0, 0,
	1015, 0, 0, 0, 0, 0, 0, 0, 0, 993,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1017, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1019,
}

var sqlPact = [...]int{
	6936, -1000, -1000, -1000, -1000, 186, -1000, -1000, 185, 179,
	177, 174, 173, 172, 171, 170, 168, 167, 166, -1000,
	-1000, -1000, -1000, -1000, -1000, 164, -1000, -1000, 163, -1000,
	161, 160, 159, -1000, -1000, 157, -1000, 156, -1000, -1000,
	-1000, -1000, 153, 151, 148, 92513, 91948, 93076, 2346, 116768,
	99840, 2146, 81790, 116203, 81225, 115638, 2208, 10954, 115073, 2809,
	147, -1000, 114508, 145, 142, 138, -1000, 113943, -1000, 2159,
	-1000, 137, -1000, 10029, 71581, 136, 135, 134, 132, 2433,
	131, -1000, 129, 127, -1000, -1000, 125, -1000, 14208, 1557,
	-1000, 123, 121, -1000, 7008, 97582, 120, 115, 114, 2465,
	112, 110, 68752, 108, 106, 105, 2398, 2911, -1000, -1000,
	2156, -1000, -1000, 104, 103, 102, 101, 99, 98, 97,
	96, 95, 94, 92, 87, 84, -1000, 81, 78, 75,
	71, 66, -1000, 63, 56, 53, -1000, 52, -1000, 50,
	49, 48, 47, 42, 40, 39, 38, 37, 36, 35,
	34, 33, 30, 136143, -1000, -1000, 29, 1913, 1737, 1734,
	1728, 1724, 1723, 1039, 28, 27, 26, 25, 22, 20,
	19, 18, 17, 11, 10, 9, 2, 1, 0, -2,
	-3, -5, -6, 133, -7, -10, -11, -12, -15, -17,
	-20, 3186, 3575, -1000, 1829, 1067, 31230, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 125213, 117331, -21, -105, -22, -1000,
	3390, 1069, 56774, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 246, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 509, 2614, 757, -1000, -1000, -1000, 113380,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2343, -35,
	-1000, 2071, -1000, -1000, -1000, -1000, -1000, 756, -1000, 2336,
	2279, 307, 2276, -1000, -1000, -1000, 3459, 2498, 3886, 3885,
	3884, 3883, 3882, 124650, 1917, 3880, 2575, 3879, 3876, 3871,
	3868, 3867, 3866, 3863, -1000, 91383, 1081, 90818, 90253, 3446,
	112817, 89688, 112252, 127471, 48658, 1024, 3458, -1000, -1000, -1000,
	-1000, -1000, -1000, 117331, -1000, 1080, -1000, -1000, 3862, 2118,
	755, 99275, -1000, -1000, 111687, 1763, -1000, -1000, -1000, 985,
	1222, 33546, 33546, 33546, 241, -1000, -1000, -1000, -1000, -1000,
	-1000, 3854, 3853, 3852, 3851, 3850, -1000, -1000, 80660, 24099,
	80095, 79530, 111122, 48079, 89123, 88558, 3849, 3848, 3847, 47500,
	110557, 126906, 3569, 3568, 1079, 2058, 1501, -1000, -1000, -1000,
	-1000, -1000, -1000, -42, 73273, 3620, 117331, -1000, 239, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 46921, 801, 46342, 788,
	45763, 329, 109992, -1000, -1000, -1000, -1000, 75575, -1000, 109427,
	2495, 3846, 3842, 1177, 3840, 3324, 1868, 3839, 1937, 1256,
	3835, 3834, 3832, 3830, 3828, 3826, 3825, 1538, 108862, 3010,
	1560, 108297, 1772, 126341, 1074, 87993, 93076, 2667, 107732, 1485,
	1444, -1000, -1000, -1000, -1000, 3121, 2908, 2903, 1172, -1000,
	-1000, -1000, -1000, 60215, 8003, 5366, -1000, -1000, 11333, 107167,
	63080, 93076, 93076, -1000, -1000, -1000, -1000, -1000, -1000, 45184,
	721, 44605, 1014, 106602, -1000, -1000, 60788, 2950, -1000, -1000,
	-1000, -1000, -1000, 106037, 44026, 421, 43447, 1007, 117331, -1000,
	3009, 2016, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2250, 1714, 3627, 2738, 75000, 2122, 1465, 3397, 3115, 3095,
	1581, 2051, 3091, 3824, 2670, 3079, 3075, 3069, 3052, 3051,
	1614, 2628, 316, 2623, 30651, 2988, 1788, 42868, 1551, 1571,
	3049, 3048, 3641, 2041, 2047, 2056, 78965, 3823, 3822, 3368,
	3047, 3046, 2831, 3041, -1000, 2949, 1536, 237, -1000, -1000,
	-1000, -1000, -1000, -1000, 1509, -1000, -1000, -1000, -1000, -1000,
	83479, -1000, -1000, 1766, -1000, -1000, 1766, -1000, -1000, -1000,
	-1000, -1000, 1307, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1829, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 2271, -1000, 2115,
	-1000, -1000, -1000, 2541, 3327, 3327, 3327, 3455, 469, 462,
	-1000, 133, -1000, -1000, 135851, -1000, -1000, 49237, 49237, 49237,
	49237, 49237, 49237, 49237, 49237, 2211, -1000, 753, -1000, -1000,
	795, -1000, 752, 683, 641, -1000, -1000, -1000, -1000, -1000,
	-1000, 749, -1000, -1000, -1000, -1000, -1000, -1000, 3620, -1000,
	27045, -1000, -1000, -1000, 500, 748, 49237, -1000, -1000, 3676,
	3667, 1055, -1000, 236, 1008, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 3008, 747, 745,
	-1000, 741, 740, 739, 738, 736, -1000, 735, -1000, 733,
	732, 726, 724, 723, 722, 719, 718, -1000, 2116, -1000,
	-1000, -1000, -1000, -1000, -1000, 673, 671, 671, 671, -1000,
	1077, -1000, -1000, -1000, 262, 669, 253, 668, 666, 665,
	-1000, 717, 716, 714, 713, 712, 711, 706, 704, 698,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1075, -1000, -1000,
	-1000, -1000, -43, 117331, -1000, 509, -43, -1000, -1000, 686,
	-1000, 35283, 35283, 35283, -1000, -1000, 2333, 49237, -1000, 2632,
	-1000, -37, -37, 926, 58493, -1000, 55600, 926, 300, 805,
	64219, -1000, 2948, -1000, -1000, 685, 235, -1000, -1000, -1000,
	-1000, 24672, 2947, 117331, 117331, 117331, 93076, 93076, 93076, 117331,
	3821, 3820, 3218, 49237, -1000, -1000, 71016, 129161, 93639, -1000,
	-1000, 3549, 69315, 70452, 3007, 129161, 3000, 128601, 3819, -1000,
	-1000, -1000, -1000, -1000, 3193, 3814, 3812, 3807, -1000, 117331,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 251, 3189, -1000,
	-1000, 97017, 251, 3176, -1000, 251, 3175, -1000, 96454, -1000,
	-1000, 2294, 3174, -1000, -1000, 255, 3171, -1000, -1000, -1000,
	252, 3167, -1000, -1000, 234, -90, 3166, -1000, -1000, -1000,
	-1000, -1000, -1000, 135851, -1000, -1000, -1000, 128036, -1000, 3371,
	-1000, 117331, -1000, 49237, -1000, -1000, 3548, 1758, 3395, 3497,
	-1000, -1000, -52, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2552, 2529, 1183, 2379, -1000, 3229, 1440, 33546, 3312, -1000,
	-1000, -1000, -1000, -1000, 229, 24672, -1000, -1000, -1000, -1000,
	-1000, -1000, 3322, 3165, 1507, -1000, 2378, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2068, 3164, -1000, 2639,
	3158, 2036, -1000, -1000, 1576, -1000, 132823, 1394, -1000, -1000,
	-1000, -1000, 2109, 3155, -31, -1000, -1000, 2679, -1000, -1000,
	-1000, -1000, 133874, -1000, 2032, -1000, 1360, 3149, -1000, 2737,
	2737, 87428, 3162, 62507, 60788, 73273, -46, -1000, -1000, -1000,
	-1000, -95, -1000, 23520, 135851, -1000, -1000, -1000, -1000, 1821,
	135851, 923, -1000, -1000, 3148, -1000, 135851, 921, -1000, -1000,
	3147, -1000, 2624, -1000, 2996, -1000, -1000, 2453, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2450, 1048, -1000, 3802,
	-1000, -1000, 3800, -1000, 3799, 3796, 3795, -1000, 1770, 2052,
	3792, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 86865,
	2331, -1000, -1000, 85170, 2994, -1000, 2444, 3496, -1000, 86300,
	1070, -1000, 1029, 2441, -1000, 95891, 886, 2432, -1000, 3790,
	3444, 2701, 1029, 2429, -1000, -1000, -1000, -1000, -1000, 1040,
	-1000, 66484, -1000, 66484, -1000, 1698, -1000, 124087, -37, 93076,
	3620, -1000, -81, -1000, -1000, -1000, 1069, -1000, 59639, -1000,
	59639, 98710, 76148, 1012, 2946, 68177, 135459, -1000, 1047, -1000,
	-1000, 135851, -1000, -1000, -1000, 2620, -1000, -190, 2736, -1000,
	76148, 61934, 2612, -1000, 135851, -1000, -1000, -1000, -1000, 135851,
	-1000, -1000, -1000, 76148, 85170, -1000, 105472, 85735, -1000, -1000,
	1523, 2587, -1000, -1000, -1000, 76148, 1367, 76148, 76148, 76148,
	-1000, 104907, -1000, -1000, 2129, 1600, 3354, 2112, 93076, -1000,
	1871, -1000, -1000, -1000, 3387, 3160, 117331, -1000, -1000, 2991,
	-1000, 72709, 95328, -1000, 94765, -1000, 94202, -1000, 93076, -1000,
	93076, -1000, 3789, 3788, 3785, -1000, -1000, 3783, -1000, 3780,
	3376, -1000, 981, 42289, 135851, 3375, -1000, 3778, 2050, 2988,
	135851, -1000, 3157, 1733, 1727, 117331, -1000, -1000, 117331, -1000,
	117331, -1000, -1000, -1000, 1599, -1000, -1000, 2546, -1000, -1000,
	-1000, -1000, 93076, 93076, 93076, 93076, 1262, -1000, 41710, -1000,
	-1000, 3035, 3777, 1789, -1000, 1866, -1000, 2945, 3365, -1000,
	1521, 1818, 227, 3683, -1000, -1000, 256, -1000, -1000, -52,
	-1000, 123524, -1000, 2541, -1000, 117331, -1000, 2549, 2978, 2987,
	1517, 2365, 2640, -1000, 41131, 2613, 52711, 2375, 133, -1000,
	-1000, 133, 133, 32388, -1000, -1000, 69315, 69315, 24672, 1316,
	49237, 49237, 49237, 49237, 49237, 49237, 49237, 49237, 49237, 49237,
	49237, 49237, 49237, 49237, 49237, 49237, 49237, 49237, 49237, 49237,
	49237, 49237, 49237, 49237, 49237, 49237, 49237, 49237, 49237, 49237,
	49237, 49237, 49237, 49237, 49237, 49237, 2108, 49237, 1306, 49237,
	49237, 49237, 49237, 2216, -1000, -1000, 2019, 545, 2083, 683,
	-1000, -1000, -1000, 3599, 3599, 3599, 585, 585, 585, 13915,
	13915, 656, 3776, 795, -1000, 49237, -1000, 86, 59057, 49237,
	25247, -1000, 462, 9266, 2530, -1000, 455, 25855, -1000, -1000,
	-1000, 27045, 641, 40523, 49237, 1058, 135851, -1000, -1000, 1451,
	3623, 22941, 2966, 2788, 682, 831, 758, 30043, 29435, 28827,
	28219, 694, 600, 49237, 49237, 49237, 49237, 49237, 49237, 49237,
	49237, -1000, -1000, 3632, -1000, 3623, -1000, -1000, -1000, -1000,
	3623, 1314, 1313, 3623, -1000, 3623, 3623, 8534, 8534, 39944,
	39365, 38786, 53290, 38207, 49237, 27640, 37628, 37049, -1000, 117331,
	-43, 3547, 49237, 290, -1000, 133482, -1000, 290, 290, 681,
	-83, 135851, 2590, 2590, 57347, 2134, 2237, 2237, 2237, -1000,
	926, 17692, 926, 103218, 2246, 926, 926, 221, 263, 454,
	55027, 2632, 103218, 781, 680, -23, -24, -25, -1000, -1000,
	-26, -34, -1000, -1000, 93076, 678, 25247, 24672, 220, 2095,
	-89, 2652, 2651, -1000, 2646, 2644, -1000, 2641, 2330, -1000,
	-1000, -1000, 1846, -104, 1303, 93076, 117331, 1481, 3774, -91,
	-1000, 7842, -106, -1000, 1349, 214, 3623, -1000, -1000, -1000,
	-1000, -1000, 3773, 3772, -1000, 1071, 677, 674, 452, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 673, 671, 671,
	671, -1000, 262, 669, 253, 668, 666, 665, -1000, -1000,
	-1000, -1000, -1000, 2944, 93076, 117331, 1473, 3768, 82353, -90,
	93639, -73, -1000, -1000, 117331, -1000, -1000, -1000, 3766, -1000,
	93076, -1000, -1000, 93076, 251, 3145, -1000, 93076, -1000, 93076,
	249, 3138, -1000, -1000, 117331, -1000, 93076, 93076, -1000, 117331,
	117331, 117331, 129161, 129161, 247, -1000, 93076, 910, -109, 1191,
	-52, -1000, -1000, -1000, -1000, 1766, -1000, 1720, -1000, -1000,
	-1000, -1000, -1000, -1000, 1511, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1055, -1000, -1000, -1000, -1000, -1000, -1000,
	3618, 3607, -44, -1000, -1000, 24672, -1000, -53, 1673, 548,
	1301, -1000, 78400, 2456, 3358, 3764, 2693, 3333, 1660, -1000,
	1598, 664, -1000, 3453, 83479, 3512, 3529, 1387, -1000, 2943,
	-1000, -1000, -1000, 983, 1787, 1808, 1300, 1299, 83479, 2639,
	-1000, 69315, -1000, 2675, 3447, 1406, 1493, 1406, 1406, 1442,
	-1000, 83479, 1794, 1298, 1297, 1295, -1000, -1000, 1996, 1990,
	-1000, -1000, 104344, -1000, 1293, 1291, 3567, 2271, 2232, 824,
	1984, -1000, 1390, 1287, 2942, -1000, -1000, -55, 3511, 3523,
	1387, -1000, 2941, 1284, -1000, -1000, -1000, 3439, 93076, 24672,
	1623, 1607, 1609, 1784, 1283, -45, -1000, 3508, 3288, -1000,
	85170, 85170, 1282, 1281, -1000, 1073, 4985, 3283, -1000, 129161,
	1073, 1073, 1900, 3134, 2724, 1696, -1000, 2734, 837, 2732,
	-1000, -1000, -1000, 837, -46, 73273, 117331, 206, -1000, 86,
	49237, 49237, 86, 49237, 86, -1000, 3488, 3128, 3127, 3759,
	-1000, -1000, -1000, -1000, -1000, 3757, 2024, 2572, -1000, -1000,
	663, 2427, 2940, 117331, 2661, -48, 93076, -1000, 72145, 3125,
	129161, 2639, 2425, -1000, -1000, 84607, -1000, 3124, 509, 2421,
	-1000, 672, 3756, 3118, -1000, 122961, -1000, 3371, 1391, 3108,
	1134, 934, 3546, -1000, 934, 67049, -1000, 117331, -1000, -37,
	5046, 77274, -112, -114, 445, -1000, 103781, 117331, 117331, 3301,
	2031, 2028, -1000, 1026, 60788, -1000, 60788, -117, -1000, -190,
	2731, 1558, -1000, 1012, 1012, 837, -1000, 837, -1000, 93076,
	2986, -1000, -1000, 76148, 1012, 1012, 1012, -1000, -1000, -1000,
	-1000, 3755, 3752, 3751, 3750, -1000, -1000, 1028, 93076, 117331,
	93076, -1000, -1000, 1686, -1000, 204, -1000, 129161, -1000, 129161,
	117331, 93076, -1000, 1028, 117331, 1028, 117331, 1028, 117331, 1028,
	1028, -1000, -1000, -1000, -1000, -1000, 86, -1000, -1000, 135851,
	-1000, 49237, -1000, -1000, 1579, 3748, 1711, -1000, 2983, -1000,
	2982, -1000, 13, -1000, -1000, 1922, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 3747, 135851, -1000, 1936, -1000,
	-1000, -1000, -1000, 93076, 93076, 93076, 93076, 117331, 3278, -1000,
	117331, 3264, 93076, -1000, 3679, -1000, -1000, 83479, -1000, 2549,
	2978, -1000, -1000, -1000, -1000, -1000, -1000, 1490, 2293, -1000,
	2598, -1000, 1637, -1000, -1000, -1000, 135851, 53869, -1000, -1000,
	135851, 1874, -1000, 52132, 51553, -1000, -1000, 1764, 93076, 2665,
	-1000, 2665, -88, -1000, 133441, 2597, 93076, -1000, -1000, -1000,
	-1000, -1000, 973, 715, 715, 1377, 1377, 1377, 1377, 3526,
	1752, 6828, 6277, 8080, 8080, 5425, 5425, 5425, 5425, 5425,
	8080, 5263, 585, 585, 5263, 5263, 5263, 5263, 5263, 585,
	585, 585, 8080, 8080, 8080, 585, 13915, 135892, 10710, 49237,
	49237, 1280, 2007, 545, 10106, 49237, 643, 643, 643, 643,
	-1000, 2133, -1000, -1000, -1000, -1000, 2938, 662, 53290, 53290,
	-1000, -1000, -1000, -1000, 26450, 49237, -1000, -1000, -1000, -1000,
	36441, -1000, -1000, 132779, -317, 444, -1000, 203, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 441, -80, 91, -1000, 49237, 49237, 49237, 438, -1000,
	202, 49237, 117331, -1000, 16823, 779, -119, -1000, -123, 1478,
	-1000, 49237, -1000, -1000, 1279, -1000, 1278, 1273, 1272, -1000,
	659, 437, -1000, 197, -1000, 2221, 657, 655, 49237, -1000,
	-1000, -1000, -1000, -1000, 132380, -1000, -1000, 132343, -1000, -1000,
	131944, -1000, -1000, 131907, -1000, -1000, -1000, -1000, -1000, 135418,
	16626, 16440, 16148, 6118, 15706, 12128, -126, 417, -131, 416,
	972, 938, 414, 410, 409, -134, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -139, 407,
	-1000, 2936, -80, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 406, -1000, 396, -1000, 135233, -80, 395, 7238, -1000,
	53290, 53290, 53290, 53290, -1000, 391, -1000, 133256, -1000, 135192,
	35862, 35862, 35862, 386, 134800, 49237, -80, -140, -1000, -145,
	-1000, -1000, 543, -146, 1010, 35283, 56187, 24672, -1000, 1010,
	1010, 49237, -1000, 49237, 2610, -1000, -1000, -1000, -1000, 2608,
	2290, 2590, 57347, -1000, -1000, -1000, -1000, 103218, -1000, 3620,
	3111, -1000, 103218, -1000, -1000, 117331, 509, -1000, 103218, 103218,
	24672, 926, -1000, 926, 103218, 693, -1000, -1000, -1000, -1000,
	-1000, 384, 65356, 91, 195, 24672, 1029, -1000, -1000, 2728,
	2728, 2728, 2728, 2728, 93076, -1000, -1000, 129161, 1269, -50,
	-92, 2729, -1000, 3581, -1000, 2124, -1000, 69315, -1000, 794,
	1137, 24672, -1000, -1000, -1000, 654, -1000, 3623, 3623, -1000,
	3623, 129161, 2930, 275, 2726, -1000, 2327, -47, 265, 129161,
	3743, -1000, -1000, 251, -1000, 93076, 251, 251, -1000, 93076,
	93076, 2294, -1000, 255, -1000, 252, -1000, -1000, -90, -1000,
	1046, 33546, -1000, 1766, -1000, -1000, 1617, -1000, 2037, -1000,
	1312, -1000, -1000, -1000, -1000, 33546, -1000, 3519, 117331, 117331,
	93076, -1000, 101529, 117331, -1000, 2203, 129161, -1000, 2418, 122398,
	2404, 121835, 69315, -1000, -1000, 652, 993, 2595, 2594, 1127,
	117331, 117331, 2593, 121272, 120709, -1000, 3742, 117331, 2091, 49237,
	101529, 3438, 2242, 2741, 86, 86, -1000, 86, -1000, -1000,
	650, 1408, 93076, 93076, 117331, 129161, 93076, 1897, -1000, -1000,
	-1000, -1000, -1000, 84042, -1000, -1000, 3631, 3630, -1000, 1406,
	-1000, -1000, -1000, 1406, 2639, 1843, 117331, 129161, 93076, 129161,
	120146, 119583, -1000, -1000, 1777, 117331, -1000, -1000, -1000, -1000,
	1491, -1000, 824, 1261, 2929, 49237, 49237, 2170, 86, 86,
	-1000, 86, 649, 24672, 1995, -1000, 2959, 117331, 3663, 119020,
	3661, 117331, 117331, 117331, 129161, 3378, 117331, -1000, -1000, -1000,
	117331, 129161, -1000, 118457, 4985, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2150, 74425, 1133, 117331, 1360, -1000, -1000, 1775, 1260, 1259,
	83479, 2179, 1771, 1886, 129161, 60788, 1025, 60788, 2710, -1000,
	-1000, 22362, -1000, 135851, 135851, -1000, 135851, -1000, 72145, 76148,
	117331, -1000, -1000, 1068, 117331, 77837, 999, 3106, 65919, -95,
	1012, 76148, 93076, -48, 2661, 117331, -1000, -1000, 2639, 3103,
	509, 2417, -1000, 129161, 3545, 3101, 648, 3738, 3736, -1000,
	93076, 2322, 2416, -1000, -1000, 117894, 3170, 824, 117331, 1010,
	57347, 2009, -1000, 63655, 1092, 117331, 1898, 261, -1000, -1000,
	-1000, -8, 117331, -1000, 804, -1000, -1000, 5046, 5046, 1012,
	-96, 644, -1000, 896, 895, 61361, -163, -1000, 193, 642,
	893, 892, -1000, 3696, -1000, -190, -1000, 76148, 1026, 60788,
	2928, 2923, -1000, -1000, 1045, -1000, 1498, 1012, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -38,
	1882, 117331, -90, -90, -64, -50, -1000, 1028, -1000, 1028,
	-1000, 1028, -1000, -1000, -1000, 135851, -1000, -1000, -1000, 1676,
	1665, 117331, -1000, -1000, 117331, -1000, 24672, 117331, 93076, 24672,
	93076, 2973, 2969, -1000, -1000, -1000, 117331, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1151, -1000, 1874, 2292, -1000,
	641, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2524, -1000, -51, 32388, 930, -1000, -1000, 93076, -39, 49237,
	49237, 9303, 8979, 49237, 53290, 53290, -1000, 49237, 8116, -1000,
	-1000, -1000, -1000, -1000, 2920, 639, 49237, 69315, 6902, 6344,
	-1000, 380, 11494, 5263, -1000, 49237, -1000, 496, -1000, 379,
	34704, -1000, 134100, 83, -166, -1000, 18285, -80, -169, -1000,
	-1000, 791, -1000, 3204, -1000, 49237, 134759, 2469, 1972, 1883,
	1726, 3623, 3659, 21783, -1000, 67613, 1052, 2249, 131508, -1000,
	-1000, -1000, -1000, 69315, 69315, 49237, 49237, -1000, 49237, 49237,
	49237, -1000, -1000, -1000, 3623, 959, -1000, -1000, -1000, 959,
	-1000, -1000, 1406, -1000, 1406, -1000, 49237, -1000, -1000, 2919,
	49237, -1000, 69315, 69315, 53290, 53290, 53290, 53290, 53290, 53290,
	53290, 53290, 53290, 53290, 53290, 53290, 53290, 53290, 53290, 53290,
	53290, 53290, 53290, 53290, 2580, 53290, 3597, 3597, 3597, 1009,
	-1000, 2960, 2919, 49237, 49237, 69315, 374, 373, 372, -1000,
	49237, -80, -1000, -1000, 9556, 625, -1000, 2513, -1000, 2776,
	-1000, 49237, -1000, -168, -1000, 2632, -1000, -1000, 2776, 2776,
	-171, 135851, 57347, 57347, -1000, 619, 49237, 2606, -1000, -1000,
	778, -315, -1000, 891, -1000, -1000, -1000, -1000, -1000, -1000,
	889, -1000, 509, -1000, -1000, -1000, 191, 103218, 103218, 777,
	-1000, -174, -1000, -1000, -176, -1000, 3544, 371, 24672, -1000,
	1010, 2802, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2618,
	-261, 129161, 129161, 1761, 2269, 3658, -1000, 3628, 789, 773,
	190, 3623, 370, 365, 364, -90, 129161, 129161, 1757, 69888,
	129161, -1000, -1000, -1000, 251, -1000, -1000, -1000, 249, -1000,
	-1000, -1000, -1000, 2709, -1000, -52, -1000, -1000, -1000, 49237,
	-1000, -1000, 3352, 618, 1258, 1257, -1000, -182, -1000, 883,
	-1000, -1000, -1000, -1000, 2880, -1000, 3098, -1000, 2415, -1000,
	1097, 2414, 1626, -1000, 49237, 609, 2698, 608, 607, 3735,
	2085, 3731, 1128, 3097, 2294, 3096, 2294, -1000, -1000, -1000,
	936, -1000, 135851, -183, -1000, 2242, -1000, 605, 603, -1000,
	-53, 1662, 460, 1255, 1043, -1000, -1000, 49237, 49237, 102655,
	-1000, 468, 3347, -40, -1000, -1000, -1000, 1753, 1252, 1251,
	-1000, -1000, -1000, -1000, 2639, 1747, 1249, 1245, -1000, -1000,
	-1000, -1000, -1000, 2412, -1000, -1000, 3094, 1035, -1000, 3037,
	3032, 933, 117331, 49237, 49237, 134574, 134533, -1000, 1034, -1000,
	-1000, 49237, -1000, -55, 1236, 3501, 2411, 93076, -1000, 2294,
	3088, 1235, -1000, 1233, -1000, -1000, -1000, 3505, 3504, 1238,
	-1000, -1000, -1000, 76148, -1000, -1000, 73852, -1000, -1000, 1073,
	117331, 129161, 93076, 1825, -1000, -1000, 82353, 82916, 117331, 2724,
	-90, 837, -1000, 2408, 837, 1025, 2916, -1000, 2658, -1000,
	1032, 93076, 3729, 363, -188, -56, 69315, -1000, -1000, -1000,
	-1000, 2404, 93076, 117331, 1330, 2686, 117331, 117331, 3543, -1000,
	2356, 626, 93076, 963, -1000, 3620, -1000, -1000, -1000, 1031,
	-1000, 3493, 93076, 3542, 3078, 1029, 86, 93076, 3639, -1000,
	-1000, 3541, 93076, 3077, 2320, 2409, 2561, 824, 76711, 1029,
	2243, -71, -1000, 1898, 34125, 3341, -191, -1000, -1000, -1000,
	1010, 67049, 57347, 49237, 3728, -194, -1000, -1000, -1000, -1000,
	-1000, 100403, 100403, 76148, 76148, 76148, 1012, 117331, 117331, 3723,
	76148, 76148, 76148, -57, 599, -1000, 882, 880, 879, -1000,
	-1000, -1000, -1000, -1000, -1000, 878, 876, 872, 1026, -1000,
	-1000, -190, 60788, 86, -1000, 2260, 93076, -1000, 21204, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1028, -95, -1000, -1000,
	-1000, 2173, 2370, 2173, 1864, 1849, -1000, -1000, 2288, -1000,
	-1000, -1000, -1000, 2655, 3320, 24672, 3468, 643, 49237, 49237,
	6149, 5525, 361, 643, 49237, 49237, 69315, 14758, -197, 49237,
	49237, -1000, 49237, 772, 135851, -1000, 3656, 49237, 362, 360,
	-1000, -1000, -1000, 3622, -1000, -1000, -1000, 135851, 49237, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 358, -1000, 188, -1000,
	-1000, -1000, 125776, -1000, 49237, 343, 3429, -1000, 338, 337,
	9985, 442, 131471, 131072, 131035, 335, -1000, -1000, 331, 330,
	135851, 2960, 135851, -1000, -1000, 1053, 1053, 1399, 1399, 1399,
	1399, 3597, 828, 919, 622, 567, 567, 567, 602, 1009,
	1009, 567, 567, 567, 1009, 2912, 2583, 587, 8174, -1000,
	-1000, 135851, 135851, 324, -1000, -1000, -1000, -80, 320, 9556,
	-1000, 2771, 3422, 135851, -1000, 57347, 2771, 2771, -1000, -1000,
	2290, 117331, 135851, 57347, -1000, 3111, -1000, 19461, 18876, -1000,
	24672, -1000, -1000, -1000, -1000, 3620, -1000, 65356, -1000, 586,
	-1000, 14, -1000, 2802, -1000, 871, -1000, -1000, 76148, 76148,
	2728, -1000, 2828, -261, -199, 117331, -1000, -1000, 769, 3718,
	785, 24672, 318, -1000, -1000, -1000, -90, -90, 117331, 2906,
	93076, 117331, 1458, -90, -1000, -1000, -1000, 3296, 135851, 117331,
	117331, -1000, 101529, 33546, 1522, 102092, 117331, 3074, -1000, 3068,
	-1000, 1127, 2218, 130636, 57920, -1000, 57920, 117331, -1000, -1000,
	-1000, -1000, 1988, 1681, 3716, 1167, -1000, 3391, 117331, -1000,
	117331, -1000, -1000, -1000, 101529, -1000, 117331, 117331, 93076, 117331,
	-1000, 129161, 3050, -202, 135851, -61, -1000, 862, -1000, 1320,
	-1000, 20625, 117331, 129161, 93076, 117331, 129161, 93076, 3066, 117331,
	2190, -1000, -1000, 3030, -1000, 135851, 134141, 86, 49237, 3044,
	-203, 24672, -1000, 3654, 3653, 3060, 3393, -1000, 117331, 3652,
	117331, 93076, 3295, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1746, 1229, 1221, 2319, 2317, 2268, -64, 2179, 1025, -66,
	584, -1000, 858, -1000, -1000, 857, 849, 1025, -1000, 76148,
	60788, 3712, 509, -1000, 2688, -1000, 98145, 77837, 2311, -1000,
	-1000, 583, 117331, 117331, 582, -1000, 86, -1000, 3711, 101529,
	581, -1000, 2259, -1000, 767, -1000, 2519, 129161, 2639, 86,
	93076, -1000, 1020, 509, 317, -69, -1000, 3055, 1121, 24672,
	93076, 3057, 2563, 824, 76711, -1000, 1391, 2640, -1000, -70,
	-1000, 661, 86, 2243, -1000, -71, 135851, -1000, 848, -1000,
	-204, -1000, -1000, 313, -1000, 3291, -1000, -1000, -205, -1000,
	-1000, 4782, 4782, 76148, 60788, 76148, 76148, 76148, 60788, -1000,
	1026, 837, -1000, 2449, -1000, -1000, -1000, -1000, -1000, 24672,
	1776, -1000, 574, 570, -1000, -1000, -1000, -1000, 3320, 643,
	643, 49237, 49237, 49237, 643, 14758, -210, -1000, 643, 643,
	-80, -1000, -1000, 134100, -1000, -1000, -1000, 135851, -1000, 20046,
	2184, -1000, 130599, -1000, 32388, -1000, -1000, 49237, 49237, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 53290, 2900, 569,
	69315, -1000, -1000, 308, 1050, 49237, 50974, 2632, 1050, 1050,
	-1000, -211, -1000, -1000, -1000, 3620, -1000, 3620, 14, -1000,
	-1000, 3710, 24672, -1000, 76148, -1000, -1000, -1000, 2267, -1000,
	-1000, 3029, -142, 498, -1000, 3709, -1000, -1000, 150, 129161,
	2897, 124, 2723, -1000, -1000, -1000, -1000, -1000, 2721, 3540,
	-1000, 1974, -1000, 117331, 117331, -1000, 117331, -1000, 24672, 117331,
	2862, 1336, -1000, 993, 2588, 568, 53290, 1150, 93076, 916,
	2754, 2750, -1000, 3564, 3418, 2792, -212, -1000, 117331, 49237,
	117331, -213, -219, 2388, -1000, -1000, 1147, 1327, 49237, 1144,
	-1000, -1000, -1000, 69315, 566, 2294, 2294, -1000, -220, -221,
	-1000, -1000, -1000, 49237, 1218, 117331, 32967, -1000, 3708, 3347,
	-1000, -1000, -1000, -1000, -1000, -1000, 117331, -1000, 117331, -1000,
	49237, -1000, 133915, 49237, 1210, -1000, -1000, -1000, 3650, 2294,
	24672, 2294, -1000, 2294, 3393, 1164, 117331, 129161, 93076, 1923,
	1923, 2957, -1000, -1000, -1000, 2471, 2471, 76148, 60788, 60788,
	-1000, -72, 1025, -1000, 3538, 2177, 3705, -1000, -1000, -1000,
	-1000, 2586, -1000, -1000, -1000, 117331, 2581, 2798, 57920, 565,
	563, 117331, 1017, -1000, -226, 77837, 999, 982, -1000, -74,
	551, -1000, 843, -1000, -1000, -1000, -1000, 509, -1000, 2682,
	3536, -1000, 3649, 550, 547, 117331, 2315, 546, 24672, 3337,
	824, 76711, -1000, 3170, 1898, -1000, 2400, 117331, 3332, -1000,
	2640, 545, -1000, 1012, 544, 1012, -1000, -228, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -76, -1000, 885, 881,
	-1000, -1000, 93076, 93076, 49237, 49237, -1000, 643, 643, 643,
	-1000, 289, -1000, -1000, 2243, 3416, -1000, -77, 130200, 130163,
	538, 53290, 69315, -229, -1000, -1000, 117331, 135851, -78, -1000,
	135851, 542, 539, 428, -1000, -1000, -1000, 764, 601, -1000,
	-1000, -1000, -1000, 129161, 3702, -1000, 129161, -90, 129161, 129161,
	1736, 100966, 117331, -1000, -1000, 1626, 2117, -1000, -1000, -1000,
	117331, 2407, -1000, -1000, -1000, 1021, 49237, 8174, 53290, 537,
	49237, -1000, 536, 535, 3535, 3235, -1000, 2684, 2833, 1991,
	57920, -1000, 3320, -1000, 129764, -1000, 1107, 2006, -1000, -1000,
	-1000, -1000, 135851, 53290, 3393, 57920, -1000, -1000, 524, 523,
	135851, 522, 834, 2893, -1000, -1000, -1000, -1000, -1000, 135851,
	86, 135851, 521, 3501, -1000, -1000, -1000, -1000, 2294, 93076,
	-1000, -1000, -1000, 1208, -1000, -1000, -1000, -1000, 3701, 3700,
	2889, 82353, -1000, -234, -1000, -1000, -1000, 2021, 86, 999,
	-1000, -1000, 2311, 517, -1000, 1011, 2733, 2733, -242, 57920,
	57920, -243, 2298, 2676, -1000, 285, 3525, 982, -1000, 3608,
	-1000, 3280, 3280, 49237, 3524, 3289, -1000, 86, -1000, 3639,
	57920, -1000, 93076, 57920, 2310, 2090, 2540, 76711, -1000, 2561,
	-1000, -1000, -244, 117331, 1898, -1000, -1000, 76148, -1000, -1000,
	2449, -1000, 117331, -1000, 117331, -1000, -1000, -245, -250, -1000,
	2103, 49237, 32388, -1000, -1000, 538, -251, -1000, -79, -1000,
	3518, 50974, 3699, 3698, 3695, -1000, -1000, -261, -1000, -90,
	-90, -90, 117331, -1000, 1959, -1000, 2404, -1000, -1000, 3056,
	-1000, 2767, 514, 129727, 8174, 2518, 117331, 17089, 2639, 2639,
	-1000, 3516, 2821, -1000, -1000, 2170, 512, -1000, -1000, -1000,
	-1000, 930, 117331, 1011, 2766, 93076, 8174, 1122, -252, 2173,
	2173, 49237, 31809, 2188, -1000, 49237, -1000, -1000, 3393, 129161,
	-1000, -1000, 129161, 2304, -1000, 2847, 3614, -1000, 2298, 117331,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1107, -253, -258, -1000, -1000, 3380, -1000, 3287,
	2688, 86, -1000, -1000, -1000, -259, 135851, 86, 3692, 1020,
	283, -260, 1121, -265, 93076, 1967, -1000, 824, -1000, 2563,
	1010, 3214, -1000, -267, -1000, -270, -273, -1000, -1000, 282,
	50395, 50395, 50395, -80, -88, -1000, 117331, 510, -1000, -1000,
	-1000, -1000, -1000, 122, -1000, -1000, 3026, 917, -1000, 884,
	1931, 274, 1129, 273, 258, -1000, -1000, -1000, 2792, -1000,
	117331, -1000, -1000, -1000, 917, 509, -1000, 49237, 1107, -275,
	-1000, 1091, -276, -1000, 1088, -278, -1000, 2884, -1000, -283,
	2294, -261, 247, 1923, 1019, 3486, -1000, -1000, -1000, 2532,
	-284, -1000, -1000, 1991, 1107, 2170, 2362, -1000, 2177, 1017,
	-1000, -1000, -1000, -1000, -1000, 1107, 497, 1991, 494, 1548,
	824, -1000, -1000, 1406, 3337, 3213, 1398, 1012, -1000, -1000,
	-1000, 3081, -1000, 54448, 2313, 1844, 133215, 3081, 3081, -1000,
	-1000, 129161, 117331, 1011, 3470, -1000, 905, 900, 1554, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1010, -285, -1000,
	2518, 135851, 1011, -1000, 2173, 2719, -1000, 2173, 2876, -1000,
	2158, -1000, -1000, -1000, -1000, 2867, -1000, 1729, 3588, -1000,
	-1000, 1011, 117331, 2170, 1991, 1011, 1842, 1832, 3691, 999,
	2298, 1991, 57920, 2170, 57920, 2131, -1000, 117331, -1000, 2090,
	1355, -1000, 1659, -1000, -1000, 1824, 3555, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -90, -1000, -1000, 832, -1000, 3225,
	-1000, 1143, 2049, 2049, -1000, -1000, 884, -1000, -1000, 475,
	-1000, 474, -1000, 129161, 2255, -1000, -1000, -1000, -1000, 1011,
	2170, 1010, -1000, 3687, -1000, 2298, -1000, 2170, -286, 1011,
	-291, 2199, -1000, -1000, -95, 1967, -1000, 1645, 67049, 1826,
	-1000, -1000, 2234, 49816, 49237, -1000, 3584, -1000, -1000, 2600,
	-1000, 2792, 49237, 49237, 247, 64783, 1010, 1011, -1000, -1000,
	2532, 1011, 1107, 1010, 1991, -1000, 824, 1548, 67049, -266,
	-1000, -1000, -1000, 135851, -1000, -1000, -1000, -1000, -302, -305,
	-1000, -96, 100403, -1000, 1010, -1000, 1010, 1991, -1000, 2170,
	129161, 2131, -266, -1000, 2170, 1198, -307, -1000, -1000, 2170,
	1011, -1000, -1000, -1000, -1000, -1000, 473, -1000, 1011, 1010,
	49237, 1010, -1000, -308, -1000, 2170, -1000,
}

var sqlPgo = [...]int{
	0, 4563, 4561, 4560, 4558, 4555, 4554, 4552, 4551, 4550,
	4548, 4542, 4541, 4534, 146, 4532, 4530, 4527, 4508, 4507,
	4506, 4504, 4501, 4498, 4496, 4495, 4493, 4492, 4491, 4490,
	4489, 4487, 4485, 4484, 4482, 4481, 4479, 4471, 4470, 4469,
	4466, 4465, 4459, 4453, 4452, 4450, 4449, 4448, 4446, 4445,
	4437, 4433, 4430, 4429, 4428, 4427, 4426, 4423, 4420, 4416,
	4413, 4412, 4411, 4410, 4404, 4403, 4402, 4401, 61, 4399,
	4398, 4395, 4394, 4393, 4392, 4391, 4390, 4383, 4377, 4376,
	4375, 4374, 4373, 4366, 4365, 4364, 4362, 4361, 4360, 68,
	4359, 288, 4357, 4355, 4353, 4352, 4350, 4349, 4347, 4345,
	4343, 4342, 4340, 4339, 287, 4335, 140, 169, 4334, 4332,
	3890, 4330, 4329, 286, 4328, 4326, 4325, 4323, 4322, 292,
	4320, 4319, 4318, 4317, 4316, 4315, 4313, 4312, 4311, 4310,
	4308, 4307, 98, 211, 4306, 4302, 484, 4301, 4298, 4297,
	4296, 4294, 4293, 4292, 4291, 4290, 4288, 4286, 265, 182,
	4285, 283, 4284, 4283, 4282, 4281, 4280, 4278, 4277, 4273,
	4271, 4270, 4269, 4268, 4264, 4263, 4262, 4258, 4256, 4255,
	4254, 4252, 4251, 4246, 4242, 4241, 4240, 4239, 4234, 4233,
	4230, 4229, 4225, 4224, 4223, 4220, 4219, 4217, 4216, 4215,
	4214, 264, 224, 157, 4203, 4202, 281, 278, 4201, 4199,
	4198, 4197, 4195, 135, 6, 80, 4193, 4192, 91, 88,
	90, 115, 107, 97, 4190, 125, 4188, 133, 123, 4186,
	120, 113, 20, 37, 275, 251, 12954, 249, 4180, 4178,
	4177, 256, 204, 4171, 253, 4168, 4166, 4164, 4162, 4153,
	4152, 82, 54, 217, 4151, 188, 185, 184, 180, 161,
	57, 109, 96, 65, 49, 14, 87, 222, 18, 1,
	276, 4149, 270, 8, 154, 9, 35, 4148, 4147, 4145,
	4144, 3623, 116, 4141, 277, 259, 179, 4140, 4139, 4138,
	698, 4135, 4134, 51, 4133, 210, 84, 114, 45, 136,
	4131, 160, 172, 32, 4129, 192, 71, 4127, 4124, 95,
	92, 8907, 11162, 4119, 4118, 122, 78, 121, 344, 158,
	155, 212, 221, 175, 174, 99, 223, 216, 191, 176,
	4116, 269, 4114, 3530, 102, 194, 166, 5225, 4112, 4111,
	4110, 79, 4109, 111, 4107, 4106, 72, 21, 4, 2,
	143, 42, 38, 12, 4105, 26, 132, 50, 27, 4103,
	22, 4102, 4101, 4100, 4099, 52, 4095, 53, 170, 4092,
	4091, 295, 4088, 101, 58, 73, 4087, 23, 227, 4086,
	238, 156, 4085, 4084, 266, 214, 195, 4079, 83, 244,
	4078, 4077, 4076, 4075, 4074, 4071, 148, 3, 138, 4070,
	4069, 152, 4068, 59, 255, 206, 4067, 63, 4066, 4064,
	187, 56, 147, 285, 201, 235, 130, 240, 200, 248,
	4057, 4053, 4049, 232, 4038, 4036, 229, 173, 4035, 4028,
	254, 296, 104, 48, 94, 252, 93, 203, 168, 4026,
	208, 4025, 4020, 291, 190, 225, 41, 10, 13, 106,
	118, 4019, 7, 250, 167, 237, 127, 4018, 7030, 2312,
	2891, 4014, 4010, 149, 131, 86, 139, 165, 274, 100,
	4009, 4008, 2690, 4007, 4006, 4005, 4004, 199, 4001, 4000,
	3999, 153, 164, 207, 3998, 126, 89, 55, 24, 142,
	272, 293, 134, 231, 186, 268, 3997, 3996, 3995, 196,
	3994, 76, 110, 177, 213, 267, 66, 3990, 257, 3989,
	163, 940, 70, 162, 3988, 236, 3984, 3983, 3982, 3981,
	3980, 3979, 3977, 903, 247, 3976, 3975, 3973, 34, 198,
	3972, 273, 183, 193, 171, 60, 3971, 105, 4065, 3970,
	226, 218, 64, 5, 3969, 29, 3968, 3716, 62, 3967,
	0, 12312, 9113, 11471, 11361, 3966, 4052, 3965, 3963, 3961,
	234, 81, 3960, 3959, 3958, 124, 3956, 85, 3955, 3954,
	77, 3953, 25, 16, 17, 31, 28, 631, 209, 3951,
	3950, 36, 137, 150, 3949, 290, 241, 3947, 3946, 3945,
	3944, 108, 3941, 44, 3938, 40, 3937, 3936, 43, 15,
	46, 3934, 3933, 159, 3931, 128, 228, 3930, 178, 3929,
	74, 144, 3927, 3925, 3923, 69, 67, 271, 219, 220,
	112, 3922, 289, 3920, 205, 3917, 3915, 30, 3913, 3912,
	260, 119, 117, 47, 263, 145, 39, 189, 239, 3911,
	3910, 181, 3909, 3908, 3905, 284, 3904, 3903, 33, 3902,
	3901, 3900, 11, 3898, 3897, 215, 3272, 3895, 3894, 19,
	3892, 202,
}

var sqlR1 = [...]int{
	0, 1, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 3, 3, 3, 3,
	3, 5, 5, 5, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 6, 6, 6, 6, 6, 6, 6,
	6, 6, 6, 6, 12, 12, 8, 8, 8, 8,
	9, 9, 9, 9, 9, 52, 52, 10, 10, 10,
	10, 10, 10, 10, 10, 10, 10, 10, 38, 40,
	39, 33, 33, 34, 34, 35, 36, 36, 11, 11,
	11, 7, 7, 7, 7, 7, 7, 7, 7, 20,
	20, 41, 41, 21, 21, 43, 43, 22, 22, 44,
	44, 607, 607, 607, 608, 608, 609, 609, 609, 25,
	46, 18, 19, 19, 19, 19, 610, 610, 610, 610,
	37, 26, 47, 30, 30, 30, 30, 30, 206, 206,
	206, 206, 24, 24, 42, 42, 246, 246, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 603, 603,
	248, 248, 247, 238, 238, 239, 239, 240, 240, 611,
	611, 249, 249, 249, 250, 250, 15, 15, 15, 15,
	15, 15, 15, 15, 15, 15, 502, 502, 502, 533,
	533, 533, 533, 535, 535, 630, 630, 631, 631, 631,
	631, 631, 135, 135, 399, 399, 399, 56, 56, 56,
	56, 56, 598, 598, 208, 208, 208, 210, 210, 209,
	209, 209, 209, 209, 80, 80, 617, 617, 616, 615,
	615, 615, 618, 618, 618, 207, 207, 207, 131, 131,
	131, 131, 131, 131, 132, 132, 133, 133, 211, 211,
	211, 213, 213, 212, 212, 212, 212, 212, 212, 212,
	212, 212, 212, 212, 212, 217, 17, 17, 17, 114,
	114, 114, 114, 114, 114, 114, 109, 109, 537, 537,
	538, 538, 202, 202, 203, 203, 203, 203, 204, 204,
	205, 205, 205, 71, 71, 214, 214, 216, 216, 215,
	215, 215, 215, 215, 58, 58, 58, 58, 58, 58,
	58, 58, 58, 59, 59, 59, 59, 59, 60, 60,
	60, 60, 60, 60, 61, 61, 61, 61, 61, 61,
	62, 62, 69, 69, 69, 69, 69, 69, 69, 69,
	193, 193, 72, 72, 72, 72, 72, 72, 72, 72,
	72, 72, 72, 72, 72, 77, 77, 77, 77, 77,
	632, 632, 632, 632, 632, 632, 632, 632, 632, 632,
	632, 632, 632, 632, 632, 632, 632, 632, 632, 633,
	633, 634, 634, 635, 635, 636, 636, 636, 636, 636,
	636, 636, 636, 636, 636, 636, 636, 636, 636, 636,
	636, 636, 636, 636, 75, 75, 75, 75, 75, 75,
	75, 75, 75, 75, 75, 75, 75, 75, 75, 75,
	75, 86, 86, 359, 359, 322, 322, 87, 87, 87,
	88, 88, 89, 89, 73, 73, 596, 596, 375, 375,
	493, 493, 74, 604, 604, 604, 606, 606, 605, 605,
	91, 91, 398, 398, 92, 92, 92, 92, 92, 92,
	93, 93, 93, 93, 93, 93, 93, 94, 94, 94,
	94, 94, 94, 94, 94, 94, 94, 94, 94, 94,
	94, 101, 101, 101, 101, 101, 102, 102, 102, 99,
	99, 99, 96, 96, 96, 95, 95, 95, 100, 100,
	100, 595, 311, 311, 98, 98, 98, 97, 97, 97,
	376, 376, 103, 103, 103, 103, 323, 104, 104, 104,
	104, 104, 104, 104, 104, 107, 107, 106, 106, 106,
	106, 106, 106, 106, 106, 106, 106, 106, 106, 106,
	106, 106, 106, 106, 106, 106, 106, 106, 106, 106,
	106, 106, 106, 106, 106, 106, 106, 106, 108, 108,
	108, 108, 108, 108, 108, 108, 108, 108, 108, 108,
	495, 495, 4, 4, 244, 244, 243, 243, 105, 105,
	105, 460, 460, 110, 110, 110, 414, 414, 111, 111,
	111, 111, 111, 112, 112, 112, 112, 112, 112, 112,
	112, 112, 134, 134, 134, 134, 134, 134, 134, 134,
	134, 134, 134, 134, 600, 600, 368, 368, 274, 274,
	274, 274, 123, 123, 123, 123, 124, 124, 124, 124,
	125, 125, 198, 198, 141, 141, 141, 141, 140, 140,
	140, 140, 140, 140, 140, 140, 63, 63, 63, 64,
	64, 65, 65, 66, 66, 67, 67, 68, 68, 68,
	68, 68, 144, 144, 627, 627, 146, 143, 143, 143,
	143, 143, 142, 142, 145, 145, 145, 145, 147, 149,
	149, 149, 149, 149, 148, 148, 148, 148, 148, 150,
	150, 527, 527, 384, 384, 525, 525, 547, 547, 526,
	526, 329, 329, 329, 329, 329, 330, 330, 330, 536,
	536, 536, 536, 536, 536, 151, 151, 151, 151, 151,
	151, 151, 151, 151, 151, 151, 151, 151, 151, 151,
	151, 151, 151, 151, 151, 151, 151, 151, 151, 151,
	151, 151, 151, 151, 151, 151, 151, 151, 151, 151,
	151, 151, 151, 151, 151, 151, 151, 151, 151, 151,
	151, 151, 151, 151, 151, 151, 151, 151, 151, 151,
	151, 151, 151, 151, 151, 151, 151, 151, 151, 151,
	151, 151, 151, 151, 151, 151, 151, 151, 199, 199,
	200, 201, 201, 201, 201, 201, 176, 176, 176, 192,
	192, 192, 192, 192, 192, 192, 192, 192, 192, 192,
	385, 385, 179, 179, 179, 163, 163, 152, 152, 152,
	152, 152, 152, 152, 157, 157, 157, 157, 157, 157,
	157, 157, 153, 153, 165, 165, 165, 165, 165, 158,
	158, 159, 159, 159, 160, 160, 160, 160, 186, 186,
	162, 162, 164, 164, 164, 164, 164, 164, 164, 164,
	164, 154, 154, 154, 154, 167, 167, 167, 167, 421,
	421, 421, 191, 191, 166, 166, 166, 166, 166, 166,
	166, 166, 166, 166, 166, 166, 166, 166, 166, 166,
	189, 189, 189, 189, 189, 189, 619, 619, 620, 620,
	620, 183, 183, 183, 183, 183, 183, 474, 474, 177,
	177, 177, 177, 182, 182, 182, 182, 185, 185, 185,
	185, 404, 404, 174, 174, 174, 175, 175, 175, 180,
	180, 181, 360, 360, 178, 178, 184, 184, 184, 184,
	155, 155, 155, 155, 155, 155, 155, 155, 155, 156,
	156, 156, 156, 187, 187, 173, 173, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 637, 637,
	169, 169, 169, 168, 168, 168, 168, 171, 171, 172,
	172, 172, 172, 172, 172, 170, 161, 190, 597, 597,
	593, 593, 593, 593, 593, 593, 593, 593, 594, 594,
	594, 594, 599, 599, 115, 115, 115, 115, 115, 115,
	115, 126, 126, 126, 126, 126, 126, 126, 129, 129,
	116, 116, 116, 116, 116, 116, 116, 119, 119, 117,
	117, 117, 117, 118, 118, 81, 81, 81, 81, 81,
	16, 16, 16, 82, 82, 265, 265, 222, 222, 222,
	347, 347, 223, 223, 337, 337, 337, 337, 218, 218,
	219, 219, 220, 221, 221, 83, 83, 638, 638, 638,
	612, 612, 612, 613, 613, 613, 613, 613, 613, 331,
	331, 332, 332, 440, 440, 440, 440, 440, 335, 335,
	335, 336, 336, 336, 336, 336, 336, 336, 336, 336,
	345, 346, 346, 338, 338, 344, 343, 343, 342, 342,
	341, 341, 339, 340, 340, 340, 349, 349, 348, 351,
	351, 350, 439, 556, 556, 558, 558, 558, 558, 558,
	558, 558, 560, 560, 560, 560, 560, 560, 560, 560,
	560, 560, 560, 560, 560, 560, 560, 560, 560, 422,
	422, 639, 639, 640, 641, 554, 554, 554, 555, 550,
	550, 551, 551, 551, 551, 551, 333, 333, 334, 334,
	334, 334, 552, 553, 366, 366, 478, 557, 557, 559,
	559, 561, 642, 642, 642, 642, 642, 642, 643, 643,
	643, 438, 438, 437, 437, 436, 436, 357, 357, 562,
	562, 562, 562, 563, 563, 563, 563, 563, 566, 565,
	564, 564, 564, 564, 564, 85, 85, 85, 401, 401,
	400, 400, 402, 402, 402, 402, 402, 402, 402, 402,
	402, 402, 402, 402, 402, 402, 402, 195, 195, 277,
	277, 277, 79, 79, 79, 13, 13, 13, 13, 13,
	13, 13, 292, 292, 14, 14, 14, 614, 614, 614,
	84, 84, 84, 84, 84, 84, 355, 355, 355, 276,
	276, 276, 276, 276, 276, 276, 276, 276, 276, 276,
	276, 276, 276, 276, 276, 276, 276, 276, 276, 276,
	276, 276, 276, 602, 602, 601, 601, 278, 278, 645,
	645, 90, 90, 90, 90, 90, 90, 90, 90, 496,
	496, 497, 497, 78, 78, 78, 78, 78, 423, 423,
	420, 420, 419, 419, 365, 365, 476, 476, 476, 477,
	282, 282, 283, 283, 241, 241, 241, 32, 31, 23,
	23, 27, 27, 28, 28, 264, 264, 264, 264, 264,
	264, 264, 264, 264, 29, 29, 49, 49, 49, 49,
	50, 50, 50, 50, 53, 53, 54, 54, 48, 48,
	48, 48, 51, 51, 45, 45, 55, 55, 55, 55,
	55, 621, 623, 623, 622, 622, 626, 626, 626, 626,
	626, 626, 624, 624, 625, 625, 628, 628, 629, 629,
	122, 122, 127, 127, 127, 127, 127, 128, 128, 128,
	128, 130, 130, 130, 130, 139, 139, 194, 194, 194,
	194, 194, 194, 194, 57, 57, 57, 57, 70, 70,
	70, 70, 137, 647, 647, 647, 138, 138, 138, 646,
	646, 275, 275, 433, 433, 434, 434, 648, 648, 435,
	435, 435, 435, 435, 268, 267, 269, 269, 270, 270,
	76, 76, 76, 258, 258, 257, 259, 259, 260, 260,
	255, 255, 539, 539, 262, 262, 262, 263, 263, 251,
	251, 252, 252, 253, 253, 254, 254, 266, 266, 534,
	534, 649, 649, 113, 113, 113, 197, 197, 321, 321,
	321, 430, 430, 430, 358, 358, 289, 289, 432, 432,
	432, 432, 432, 397, 397, 397, 196, 196, 373, 373,
	387, 387, 388, 388, 490, 490, 389, 120, 120, 121,
	121, 136, 136, 226, 226, 224, 224, 224, 224, 224,
	224, 224, 224, 231, 231, 232, 232, 233, 233, 234,
	235, 235, 235, 235, 377, 377, 236, 236, 236, 225,
	225, 225, 227, 227, 227, 227, 227, 227, 227, 230,
	230, 230, 230, 237, 237, 237, 229, 229, 573, 573,
	573, 575, 575, 577, 577, 576, 576, 572, 572, 574,
	574, 644, 644, 403, 403, 403, 354, 356, 352, 352,
	353, 353, 363, 363, 361, 362, 362, 364, 364, 475,
	475, 475, 242, 242, 242, 394, 394, 394, 394, 395,
	395, 426, 426, 424, 424, 424, 424, 425, 425, 427,
	427, 427, 428, 428, 429, 429, 391, 391, 392, 392,
	393, 393, 393, 393, 456, 456, 228, 228, 228, 370,
	370, 370, 371, 371, 446, 446, 446, 446, 446, 446,
	446, 446, 446, 446, 446, 447, 447, 445, 445, 445,
	445, 479, 479, 479, 479, 479, 479, 479, 479, 479,
	480, 481, 481, 372, 372, 482, 431, 431, 591, 591,
	591, 592, 592, 473, 473, 483, 483, 483, 483, 483,
	483, 471, 471, 472, 472, 491, 492, 492, 407, 407,
	407, 407, 405, 405, 408, 408, 408, 408, 408, 406,
	406, 484, 484, 484, 484, 396, 396, 485, 485, 485,
	485, 486, 487, 487, 488, 488, 441, 442, 442, 498,
	498, 498, 498, 500, 369, 369, 369, 369, 369, 549,
	548, 548, 499, 499, 499, 499, 499, 499, 499, 499,
	499, 514, 514, 514, 514, 514, 514, 514, 514, 514,
	514, 514, 514, 514, 514, 514, 514, 514, 514, 514,
	514, 514, 514, 514, 514, 514, 514, 514, 514, 514,
	514, 514, 514, 515, 515, 515, 515, 515, 515, 515,
	501, 501, 501, 501, 501, 505, 505, 505, 504, 504,
	504, 504, 504, 504, 504, 504, 504, 504, 504, 506,
	506, 511, 511, 512, 512, 512, 507, 508, 513, 513,
	513, 513, 650, 650, 517, 517, 509, 509, 509, 509,
	509, 509, 509, 509, 509, 503, 503, 503, 510, 510,
	510, 416, 416, 416, 416, 416, 416, 416, 416, 416,
	416, 416, 416, 416, 415, 415, 417, 417, 448, 448,
	448, 448, 448, 448, 448, 448, 448, 448, 448, 448,
	448, 448, 448, 448, 448, 448, 448, 448, 448, 448,
	448, 448, 448, 448, 448, 448, 448, 448, 448, 448,
	448, 448, 448, 448, 448, 448, 448, 448, 448, 448,
	448, 448, 448, 448, 448, 448, 448, 448, 448, 448,
	448, 448, 448, 448, 448, 448, 448, 448, 448, 448,
	448, 448, 448, 448, 448, 448, 448, 448, 448, 448,
	448, 448, 448, 448, 448, 448, 448, 448, 448, 448,
	448, 448, 448, 448, 448, 448, 448, 448, 449, 449,
	449, 449, 449, 449, 449, 449, 449, 449, 449, 449,
	449, 449, 449, 449, 449, 449, 449, 449, 449, 449,
	449, 449, 449, 449, 449, 449, 449, 449, 449, 450,
	450, 450, 450, 451, 451, 451, 451, 451, 451, 451,
	451, 451, 451, 451, 451, 451, 451, 451, 451, 451,
	451, 451, 451, 451, 451, 451, 451, 451, 567, 567,
	567, 567, 567, 567, 567, 567, 452, 452, 570, 570,
	571, 571, 568, 568, 568, 568, 568, 568, 568, 568,
	568, 568, 568, 568, 568, 568, 568, 568, 568, 568,
	568, 568, 568, 568, 568, 569, 569, 569, 569, 569,
	569, 569, 569, 569, 569, 569, 569, 569, 569, 569,
	569, 569, 569, 569, 569, 569, 569, 569, 569, 569,
	569, 569, 569, 569, 569, 569, 569, 569, 569, 569,
	569, 569, 569, 578, 578, 579, 579, 581, 581, 582,
	582, 583, 584, 584, 584, 585, 586, 586, 580, 580,
	587, 587, 587, 587, 588, 588, 589, 589, 589, 589,
	589, 590, 590, 590, 590, 590, 462, 462, 463, 463,
	469, 469, 469, 326, 326, 326, 326, 326, 326, 326,
	326, 326, 326, 326, 326, 326, 326, 326, 326, 326,
	326, 326, 326, 326, 326, 326, 326, 326, 326, 326,
	326, 326, 326, 326, 326, 326, 326, 326, 328, 328,
	327, 279, 279, 279, 279, 279, 279, 382, 382, 380,
	380, 380, 383, 383, 381, 381, 379, 379, 378, 378,
	459, 459, 457, 457, 461, 461, 409, 409, 516, 516,
	516, 516, 516, 516, 516, 516, 410, 410, 410, 418,
	411, 411, 412, 412, 412, 412, 412, 453, 454, 413,
	413, 413, 455, 455, 464, 468, 468, 467, 466, 466,
	465, 465, 443, 443, 444, 444, 390, 390, 651, 651,
	386, 386, 489, 489, 489, 489, 325, 325, 374, 374,
	324, 324, 316, 316, 317, 317, 317, 317, 367, 367,
	470, 470, 518, 518, 519, 519, 520, 520, 521, 521,
	522, 523, 524, 458, 458, 300, 299, 286, 287, 298,
	297, 296, 285, 288, 293, 294, 295, 290, 291, 307,
	306, 305, 256, 261, 312, 313, 313, 315, 315, 314,
	314, 302, 303, 304, 494, 284, 318, 318, 319, 319,
	319, 320, 320, 320, 320, 280, 280, 281, 281, 308,
	308, 309, 310, 310, 301, 301, 301, 271, 271, 271,
	272, 272, 273, 273, 532, 532, 529, 529, 529, 530,
	530, 530, 531, 531, 531, 531, 528, 528, 528, 528,
	528, 540, 540, 540, 540, 540, 540, 540, 540, 540,
	540, 540, 540, 540, 540, 540, 540, 540, 540, 540,
	540, 540, 540, 540, 540, 540, 540, 540, 540, 540,
	540, 540, 540, 540, 540, 540, 540, 540, 540, 540,
	540, 540, 540, 540, 540, 540, 540, 540, 540, 540,
	540, 540, 540, 540, 540, 540, 540, 540, 540, 540,
	540, 540, 540, 540, 540, 540, 540, 540, 540, 540,
	540, 540, 540, 540, 540, 540, 540, 540, 540, 540,
	540, 540, 540, 540, 540, 540, 540, 540, 540, 540,
	540, 540, 540, 540, 540, 540, 540, 540, 540, 540,
	540, 540, 540, 540, 540, 540, 540, 540, 540, 540,
	540, 540, 540, 540, 540, 540, 540, 540, 540, 540,
	540, 540, 540, 540, 540, 540, 540, 540, 540, 540,
	540, 540, 540, 540, 540, 540, 540, 540, 540, 540,
	540, 540, 540, 540, 540, 540, 540, 540, 540, 540,
	540, 540, 540, 540, 540, 540, 540, 540, 540, 540,
	540, 540, 540, 540, 540, 540, 540, 540, 540, 540,
	540, 540, 540, 540, 540, 540, 540, 540, 540, 540,
	540, 540, 540, 540, 540, 540, 540, 540, 540, 540,
	540, 540, 540, 540, 540, 540, 540, 540, 540, 540,
	540, 540, 540, 540, 540, 540, 540, 540, 540, 540,
	540, 540, 540, 540, 540, 540, 540, 540, 540, 540,
	540, 540, 540, 540, 540, 540, 540, 540, 540, 540,
	540, 540, 540, 540, 540, 540, 540, 540, 540, 540,
	540, 540, 540, 540, 540, 540, 540, 540, 540, 540,
	540, 540, 540, 540, 540, 540, 540, 540, 540, 540,
	540, 540, 540, 540, 540, 540, 540, 540, 540, 540,
	540, 540, 540, 540, 540, 540, 540, 540, 540, 540,
	540, 540, 540, 540, 540, 540, 540, 540, 540, 540,
	540, 540, 540, 540, 540, 540, 540, 540, 540, 540,
	540, 540, 540, 540, 540, 540, 540, 540, 540, 540,
	540, 540, 540, 540, 540, 540, 540, 540, 540, 540,
	540, 540, 540, 540, 540, 540, 540, 540, 540, 540,
	540, 540, 540, 540, 540, 540, 540, 540, 540, 540,
	540, 540, 540, 540, 540, 540, 540, 540, 540, 540,
	540, 540, 540, 540, 540, 540, 540, 540, 540, 540,
	540, 540, 540, 540, 540, 540, 540, 540, 540, 544,
	544, 544, 544, 544, 544, 544, 544, 544, 544, 544,
	544, 544, 544, 544, 544, 544, 544, 544, 544, 544,
	544, 544, 544, 544, 544, 544, 544, 544, 544, 544,
	544, 544, 544, 544, 544, 544, 544, 544, 544, 544,
	544, 544, 544, 544, 544, 544, 544, 544, 544, 544,
	544, 541, 541, 542, 542, 542, 542, 542, 542, 542,
	542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
	542, 543, 545, 545, 545, 545, 545, 545, 545, 545,
	545, 545, 545, 545, 545, 545, 545, 545, 545, 545,
	545, 545, 545, 545, 545, 545, 545, 545, 545, 545,
	545, 545, 545, 545, 545, 545, 545, 545, 545, 545,
	545, 545, 545, 545, 545, 545, 545, 545, 545, 545,
	545, 545, 545, 545, 545, 545, 545, 545, 545, 545,
	545, 545, 545, 545, 545, 545, 545, 545, 545, 545,
	545, 545, 545, 545, 545, 545, 545, 545, 545, 545,
	545, 545, 546, 546,
}

var sqlR2 = [...]int{
	0, 1, 1, 1, 1, 2, 1, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 1, 1, 1, 1, 0, 1, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 3, 1, 3, 1, 1, 1, 3,
	1, 1, 1, 1, 3, 4, 6, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 6, 4,
	4, 6, 9, 6, 8, 4, 4, 5, 1, 1,
	3, 1, 1, 1, 1, 1, 1, 1, 3, 4,
	6, 4, 6, 6, 9, 6, 9, 6, 5, 6,
	5, 1, 1, 1, 1, 1, 1, 0, 1, 6,
	6, 4, 8, 7, 10, 9, 4, 4, 4, 3,
	4, 4, 4, 7, 7, 9, 8, 9, 5, 3,
	5, 7, 4, 12, 4, 12, 1, 3, 5, 5,
	2, 5, 3, 6, 4, 4, 4, 6, 5, 6,
	5, 6, 4, 8, 3, 8, 4, 2, 3, 10,
	3, 6, 4, 3, 1, 3, 4, 4, 2, 1,
	1, 3, 1, 3, 2, 4, 3, 2, 3, 2,
	0, 1, 1, 0, 2, 0, 7, 10, 6, 8,
	6, 6, 6, 9, 4, 3, 2, 2, 0, 1,
	1, 1, 1, 1, 3, 1, 3, 6, 4, 6,
	7, 9, 6, 2, 2, 3, 0, 8, 6, 8,
	7, 2, 0, 1, 2, 5, 0, 1, 3, 3,
	1, 1, 3, 3, 12, 3, 1, 1, 2, 1,
	4, 0, 3, 3, 0, 4, 6, 0, 5, 7,
	6, 8, 8, 2, 1, 3, 1, 3, 2, 5,
	0, 1, 3, 3, 3, 3, 1, 1, 1, 1,
	1, 1, 3, 3, 3, 1, 3, 3, 3, 6,
	4, 9, 7, 12, 9, 2, 7, 2, 1, 1,
	1, 3, 3, 0, 3, 1, 3, 1, 1, 3,
	2, 5, 0, 7, 5, 2, 0, 1, 2, 3,
	1, 1, 2, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 2, 3, 3, 3, 3, 3, 3, 5,
	3, 3, 5, 3, 3, 5, 3, 3, 5, 3,
	4, 3, 6, 6, 6, 6, 6, 8, 4, 4,
	1, 1, 1, 2, 1, 1, 2, 1, 2, 1,
	1, 1, 2, 1, 2, 6, 3, 8, 5, 3,
	4, 3, 3, 4, 3, 4, 4, 4, 3, 5,
	7, 3, 3, 4, 3, 3, 3, 3, 3, 2,
	0, 1, 0, 1, 0, 4, 3, 3, 3, 3,
	3, 6, 4, 4, 4, 3, 5, 3, 3, 3,
	3, 3, 3, 3, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 4, 1, 2, 1, 2, 1,
	2, 7, 3, 2, 0, 1, 3, 3, 1, 0,
	1, 2, 2, 1, 6, 5, 1, 2, 1, 3,
	2, 0, 7, 2, 5, 0, 1, 3, 3, 1,
	9, 3, 2, 0, 2, 2, 2, 2, 2, 2,
	1, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 4, 6, 5, 7, 3, 4, 6, 3, 4,
	6, 3, 5, 7, 3, 4, 6, 3, 4, 6,
	3, 1, 1, 3, 4, 6, 3, 3, 5, 3,
	1, 3, 2, 2, 2, 2, 1, 2, 2, 5,
	3, 3, 6, 6, 3, 1, 1, 1, 1, 2,
	1, 1, 1, 2, 1, 1, 2, 1, 2, 1,
	2, 1, 1, 1, 2, 1, 1, 2, 1, 1,
	1, 1, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 1, 1, 2, 1, 2,
	1, 3, 4, 3, 1, 2, 2, 2, 5, 7,
	2, 3, 0, 3, 5, 2, 3, 0, 2, 3,
	2, 3, 2, 7, 4, 7, 8, 8, 9, 11,
	5, 2, 6, 9, 4, 7, 7, 10, 7, 10,
	10, 13, 5, 2, 2, 1, 1, 3, 1, 1,
	1, 1, 1, 2, 1, 2, 2, 3, 2, 2,
	4, 3, 2, 2, 1, 2, 1, 3, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 1, 3, 5,
	4, 6, 4, 3, 0, 1, 3, 2, 4, 2,
	4, 1, 6, 3, 1, 1, 5, 3, 3, 2,
	2, 6, 3, 3, 3, 3, 4, 4, 3, 1,
	3, 3, 2, 2, 1, 3, 3, 3, 1, 2,
	1, 1, 2, 2, 3, 1, 1, 1, 1, 1,
	3, 2, 2, 1, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 1, 2, 1, 2, 1,
	2, 1, 1, 2, 1, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 2, 1, 1, 1, 2, 2, 2,
	1, 3, 3, 3, 3, 3, 2, 3, 3, 1,
	2, 1, 1, 1, 1, 1, 1, 1, 2, 2,
	2, 3, 5, 7, 3, 3, 3, 4, 4, 6,
	5, 5, 5, 3, 4, 4, 3, 4, 4, 3,
	4, 4, 5, 3, 5, 5, 5, 7, 3, 3,
	3, 4, 6, 4, 2, 6, 4, 3, 2, 3,
	4, 3, 5, 3, 6, 5, 6, 3, 5, 6,
	3, 5, 3, 5, 3, 3, 4, 4, 5, 0,
	1, 1, 1, 1, 3, 2, 3, 4, 3, 4,
	3, 5, 3, 4, 4, 3, 4, 5, 3, 4,
	3, 4, 4, 5, 3, 3, 1, 1, 0, 2,
	3, 5, 4, 6, 4, 6, 4, 1, 0, 3,
	4, 4, 5, 7, 5, 3, 3, 3, 4, 4,
	5, 2, 0, 4, 2, 3, 4, 2, 3, 3,
	3, 5, 2, 0, 3, 3, 4, 3, 3, 3,
	3, 4, 4, 4, 4, 4, 4, 4, 3, 4,
	5, 4, 4, 2, 3, 2, 3, 6, 6, 7,
	9, 7, 9, 4, 3, 4, 4, 5, 1, 1,
	10, 10, 3, 5, 5, 5, 3, 5, 6, 4,
	4, 5, 5, 2, 3, 2, 5, 4, 2, 0,
	1, 1, 1, 1, 3, 2, 2, 2, 2, 2,
	2, 1, 2, 0, 1, 2, 1, 2, 1, 2,
	2, 1, 2, 1, 2, 1, 2, 2, 4, 3,
	3, 7, 3, 3, 7, 3, 3, 3, 3, 3,
	3, 3, 3, 4, 3, 3, 6, 5, 8, 3,
	6, 6, 3, 12, 15, 1, 0, 1, 2, 3,
	0, 2, 0, 4, 0, 4, 5, 4, 1, 1,
	1, 3, 3, 1, 3, 10, 13, 0, 2, 3,
	1, 1, 0, 1, 2, 2, 2, 2, 1, 1,
	0, 1, 3, 1, 1, 1, 2, 3, 3, 3,
	0, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	2, 1, 0, 1, 0, 1, 1, 0, 1, 4,
	1, 0, 3, 7, 7, 1, 1, 3, 7, 1,
	3, 11, 3, 2, 0, 3, 1, 2, 2, 3,
	2, 6, 2, 1, 2, 2, 3, 6, 4, 2,
	3, 5, 5, 5, 2, 5, 5, 2, 2, 2,
	0, 1, 1, 3, 4, 10, 11, 9, 5, 3,
	1, 5, 9, 7, 11, 3, 3, 0, 2, 4,
	3, 3, 1, 6, 1, 3, 1, 2, 0, 1,
	2, 3, 0, 1, 3, 3, 2, 2, 1, 1,
	1, 4, 0, 3, 0, 4, 0, 3, 0, 2,
	2, 2, 0, 1, 1, 2, 2, 0, 3, 3,
	2, 1, 1, 2, 2, 5, 8, 4, 1, 0,
	1, 2, 2, 1, 2, 3, 3, 2, 2, 3,
	2, 2, 2, 2, 2, 3, 1, 4, 2, 3,
	2, 2, 4, 7, 3, 4, 6, 5, 7, 5,
	5, 3, 3, 0, 2, 2, 2, 1, 1, 1,
	8, 10, 11, 8, 11, 5, 4, 2, 0, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 2, 2, 0, 3, 3, 0,
	1, 8, 11, 3, 6, 6, 5, 3, 4, 1,
	0, 1, 3, 16, 19, 15, 18, 4, 2, 0,
	1, 0, 1, 0, 1, 3, 2, 4, 2, 3,
	1, 0, 2, 0, 1, 1, 0, 9, 6, 6,
	8, 6, 8, 5, 7, 2, 6, 7, 4, 4,
	5, 2, 4, 6, 6, 8, 6, 7, 8, 9,
	6, 7, 8, 9, 6, 8, 6, 8, 6, 7,
	8, 9, 6, 8, 6, 8, 6, 6, 8, 8,
	4, 7, 3, 0, 7, 10, 1, 1, 1, 1,
	2, 2, 3, 0, 3, 0, 1, 0, 2, 0,
	2, 2, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 2, 2, 1, 2, 1,
	2, 1, 2, 1, 3, 2, 3, 2, 2, 2,
	2, 2, 2, 1, 1, 0, 2, 4, 2, 1,
	0, 2, 1, 1, 0, 1, 3, 1, 0, 1,
	1, 1, 1, 1, 2, 3, 2, 2, 1, 2,
	14, 16, 3, 1, 0, 4, 1, 0, 2, 2,
	3, 0, 1, 1, 4, 4, 5, 1, 0, 3,
	0, 3, 0, 3, 0, 3, 0, 4, 0, 3,
	0, 1, 0, 6, 7, 3, 6, 3, 1, 3,
	1, 1, 4, 2, 1, 3, 1, 3, 4, 8,
	11, 7, 10, 2, 2, 0, 10, 3, 2, 0,
	1, 3, 1, 1, 3, 3, 5, 6, 4, 5,
	4, 1, 1, 3, 3, 1, 2, 4, 4, 2,
	3, 5, 5, 1, 3, 1, 0, 1, 2, 3,
	2, 4, 2, 3, 0, 2, 0, 2, 1, 2,
	1, 1, 1, 2, 1, 2, 1, 2, 1, 8,
	8, 8, 2, 4, 4, 4, 2, 2, 2, 2,
	3, 1, 3, 1, 2, 6, 7, 1, 0, 1,
	0, 1, 0, 1, 1, 0, 1, 5, 1, 0,
	1, 0, 1, 0, 3, 3, 5, 1, 3, 3,
	4, 5, 2, 2, 0, 2, 2, 1, 1, 1,
	0, 1, 0, 2, 2, 5, 4, 2, 3, 1,
	1, 1, 1, 1, 1, 1, 3, 0, 1, 3,
	1, 3, 3, 3, 2, 0, 4, 2, 5, 3,
	2, 0, 1, 3, 3, 5, 1, 1, 1, 1,
	1, 1, 1, 3, 5, 1, 3, 2, 4, 4,
	0, 4, 4, 3, 4, 1, 5, 3, 4, 5,
	5, 1, 5, 1, 3, 2, 0, 3, 0, 2,
	3, 1, 3, 2, 0, 3, 5, 6, 4, 6,
	4, 3, 2, 1, 0, 5, 1, 0, 2, 2,
	2, 1, 1, 0, 1, 1, 1, 1, 0, 4,
	2, 1, 2, 2, 4, 1, 3, 1, 2, 3,
	2, 4, 1, 0, 1, 0, 2, 1, 0, 2,
	5, 7, 2, 1, 2, 4, 3, 5, 0, 1,
	3, 5, 1, 2, 1, 1, 1, 1, 1, 2,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 4, 4, 6, 6,
	1, 1, 1, 1, 1, 3, 5, 0, 1, 1,
	1, 1, 1, 2, 2, 2, 2, 2, 1, 3,
	0, 5, 4, 1, 2, 1, 4, 1, 1, 2,
	1, 1, 1, 1, 1, 0, 1, 2, 5, 1,
	4, 2, 5, 1, 4, 3, 3, 0, 1, 2,
	4, 1, 1, 1, 1, 1, 1, 3, 3, 3,
	3, 3, 3, 3, 1, 0, 1, 4, 1, 3,
	3, 3, 5, 2, 2, 2, 2, 2, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	2, 3, 3, 3, 2, 2, 3, 5, 4, 6,
	3, 5, 4, 6, 4, 6, 5, 7, 3, 3,
	3, 3, 3, 4, 3, 2, 4, 2, 3, 3,
	4, 3, 4, 3, 4, 5, 6, 6, 7, 6,
	7, 6, 7, 3, 4, 4, 1, 3, 1, 3,
	3, 2, 2, 2, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 2, 3, 5, 6, 6, 7, 1,
	2, 1, 2, 1, 1, 1, 1, 1, 6, 1,
	1, 1, 1, 1, 1, 2, 1, 5, 5, 6,
	3, 1, 1, 1, 2, 2, 2, 4, 3, 5,
	6, 8, 6, 5, 4, 3, 2, 2, 4, 1,
	1, 1, 5, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 6, 6, 8, 8, 6, 4,
	6, 6, 6, 4, 1, 3, 3, 3, 3, 3,
	4, 3, 3, 4, 3, 3, 4, 3, 3, 4,
	3, 3, 3, 3, 3, 4, 3, 4, 3, 4,
	3, 4, 4, 3, 6, 5, 5, 5, 4, 4,
	3, 4, 3, 5, 0, 5, 0, 2, 0, 1,
	3, 3, 2, 2, 0, 6, 1, 0, 3, 0,
	3, 3, 3, 0, 1, 4, 2, 2, 2, 2,
	2, 3, 2, 2, 3, 0, 4, 1, 1, 5,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
	4, 1, 1, 1, 2, 1, 2, 2, 3, 1,
	2, 3, 2, 3, 2, 3, 1, 0, 1, 3,
	1, 3, 3, 3, 1, 3, 3, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 4, 3, 1, 2,
	3, 0, 3, 3, 2, 2, 1, 2, 2, 3,
	2, 1, 1, 1, 5, 1, 2, 4, 2, 0,
	1, 0, 3, 5, 1, 0, 1, 2, 1, 0,
	1, 3, 3, 2, 1, 1, 1, 3, 1, 3,
	3, 1, 1, 1, 1, 5, 3, 1, 1, 3,
	1, 1, 1, 1, 2, 2, 1, 1, 2, 2,
	1, 1, 1, 3, 5, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 3, 1, 3, 1,
	0, 1, 1, 1, 1, 1, 1, 1, 3, 5,
	7, 1, 7, 5, 3, 1, 1, 1, 1, 1,
	1, 1, 3, 5, 1, 1, 1, 1, 1, 1,
	1, 0, 3, 0, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1,
}

var sqlChk = [...]int{
	-1000, -1, -2, 610, -106, -103, -71, -69, -110, -111,
	-92, -112, -105, -134, -139, -120, -121, -122, -135, -141,
	-194, -199, -200, -201, -3, -56, -58, -72, -91, -93,
	-104, -114, -113, -115, -123, -131, -126, -109, -63, -136,
	-140, -151, -195, -196, -197, 32, 31, 100, 80, 156,
	129, 138, 206, 391, 437, 449, 406, 143, 428, 411,
	-145, -146, 467, -57, -70, -138, -137, 73, 130, 421,
	-5, -13, -17, 29, 46, -59, -60, -61, -62, 62,
	-79, -75, -86, -80, -73, -74, -77, -632, 102, -574,
	-94, -97, -130, -636, 164, 224, -116, -117, -118, 373,
	-124, -125, 430, -127, -128, -129, 433, 165, -65, -64,
	158, -224, -226, -143, -142, -144, -198, -152, -153, -154,
	-155, -156, -157, -158, -160, -186, -161, -162, -163, -164,
	-165, -166, -170, -189, -167, -168, -169, -172, -171, -173,
	-178, -174, -175, -176, -177, -179, -180, -182, -183, -184,
	-185, -187, -188, 472, -181, -190, -159, 533, 49, 488,
	82, 148, 441, 21, -6, -7, -8, -9, -10, -11,
	-12, -16, -15, -55, -4, -76, -78, -81, -82, -83,
	-90, -84, -85, -573, -95, -96, -99, -101, -102, -98,
	-100, 429, 583, -227, -225, 607, 548, -20, -25, -21,
	-22, -24, -26, -23, -27, -28, -29, -41, -46, -43,
	-44, -42, -45, -47, -48, -49, -50, -51, -52, -53,
	-54, -31, -37, -38, -32, -33, -34, -35, -36, -39,
	-40, -18, -19, -30, 570, 579, -230, -228, -229, -237,
	459, 556, 508, 610, 610, 610, 610, 610, 610, 610,
	610, 610, 610, 610, 610, 610, 610, 610, 610, 610,
	610, 610, 610, 610, 610, -323, 2, -302, -308, -309,
	-310, -301, -271, -543, -546, 4, -540, -544, 171, 234,
	336, 21, 23, 22, 24, 25, 26, 27, 29, 30,
	41, 42, 44, 45, 46, 47, 48, 49, 53, 55,
	59, 60, 61, 62, 63, 64, 68, 73, 74, 79,
	80, 81, 82, 83, 84, 85, 91, 88, 89, 90,
	92, 94, 96, 97, 98, 99, 100, 101, 103, 104,
	105, 107, 108, 109, 117, 118, 119, 120, 121, 123,
	129, 124, 130, 133, 128, 132, 134, 136, 137, 138,
	141, 142, 143, 145, 146, 147, 149, 150, 151, 153,
	154, 156, 157, 158, 161, 159, 162, 160, 163, 164,
	165, 166, 169, 177, 178, 179, 184, 186, 187, 188,
	192, 193, 194, 197, 198, 199, 200, 201, 202, 203,
	204, 205, 207, 211, 213, 214, 215, 216, 217, 223,
	224, 226, 227, 228, 229, 230, 235, 236, 237, 240,
	246, 247, 251, 252, 253, 255, 259, 260, 261, 262,
	263, 264, 266, 268, 267, 270, 273, 274, 277, 278,
	279, 280, 281, 282, 286, 287, 283, 288, 289, 291,
	292, 295, 293, 296, 297, 294, 298, 300, 301, 302,
	303, 304, 305, 306, 307, 308, 309, 310, 311, 299,
	314, 312, 316, 317, 318, 319, 334, 329, 330, 331,
	323, 324, 320, 325, 321, 322, 326, 327, 333, 328,
	338, 339, 340, 343, 221, 345, 346, 349, 367, 353,
	354, 355, 358, 359, 362, 365, 366, 368, 369, 370,
	371, 372, 373, 374, 375, 376, 378, 379, 381, 382,
	383, 385, 386, 387, 389, 391, 392, 394, 395, 397,
	398, 399, 400, 401, 402, 403, 405, 406, 408, 407,
	409, 411, 413, 414, 415, 421, 428, 422, 424, 425,
	426, 427, 429, 430, 431, 432, 433, 435, 436, 437,
	439, 440, 441, 442, 443, 445, 447, 448, 452, 453,
	469, 470, 490, 449, 450, 451, 454, 455, 456, 457,
	458, 462, 460, 461, 463, 464, 465, 467, 468, 471,
	472, 474, 475, 476, 477, 478, 479, 480, 483, 485,
	486, 487, 488, 507, 489, 491, 495, 496, 497, 498,
	492, 493, 506, 500, 501, 503, 504, 509, 510, 511,
	512, 513, 514, 515, 516, 518, 526, 527, 528, 530,
	533, 534, 535, 536, 524, 538, 539, 542, 543, 544,
	547, 545, 546, 548, 550, 553, 554, 555, 561, 560,
	562, 563, 565, 566, 571, 572, 574, 575, 576, 36,
	50, 51, 54, 56, 58, 69, 70, 71, 75, 125,
	126, 155, 167, 168, 180, 195, 196, 208, 210, 218,
	219, 220, 241, 242, 244, 249, 271, 342, 344, 360,
	364, 380, 384, 388, 390, 404, 444, 481, 494, 499,
	519, 520, 521, 522, 529, 531, 556, 557, 558, 564,
	573, -323, 2, -302, 351, -295, 2, -271, -271, 391,
	28, 2, 28, 379, 461, 511, 513, 2, -600, -368,
	2, 28, -274, -271, 102, 206, 459, -295, 2, -600,
	206, -368, 25, 2, -271, 2, 365, 22, 27, 66,
	77, 98, 141, 166, 189, 192, -635, 367, 398, 447,
	463, 506, 516, 530, 2, 560, 292, 460, 508, 234,
	120, 535, 454, -614, 452, 453, 365, 396, 439, 209,
	549, -275, 2, 449, -271, 292, 2, 610, 94, 74,
	444, 464, -148, 2, 282, 527, -149, -150, -147, 519,
	-527, 454, 439, 314, -271, 610, 610, 610, 28, -284,
	-271, 508, 234, 454, 120, 504, 610, 2, 508, 370,
	560, 460, 120, 401, 234, 535, 192, 141, 27, 68,
	454, -614, 584, 585, 292, 127, -598, 2, -593, 4,
	-544, -540, -317, -316, 508, 514, 120, -310, -301, 599,
	-309, 610, 610, 610, 610, 2, 252, 253, 400, 399,
	464, 465, 28, 610, 610, 610, 610, 452, 2, 166,
	22, 27, 66, 93, 98, 127, 189, 192, 356, -633,
	367, 398, 463, 506, 510, 516, 530, -613, 489, 68,
	427, 454, -612, -614, 292, 535, 141, -419, 120, 282,
	204, 543, 513, 511, 541, 133, 240, 546, 545, 610,
	610, -107, 2, 607, 32, 31, -106, -110, 143, 467,
	-217, 508, 245, 2, -271, 610, 610, 610, 2, 252,
	253, 452, 453, 28, 610, 610, 190, -593, 2, 610,
	610, 610, 2, 28, 252, 253, 452, 453, 245, 2,
	68, 456, 610, 610, 610, 610, 610, 610, 610, 610,
	610, 610, 610, 610, 610, 610, 610, 610, 610, 610,
	610, 610, 610, 610, 610, 610, 610, 610, 610, 610,
	610, 610, 610, 610, 610, 610, 610, 610, 2, -192,
	464, 489, 215, 47, 46, 74, 28, 397, 79, 371,
	121, 127, 150, 536, 207, 234, 235, 260, 93, 94,
	-421, 44, 253, 68, 252, 453, -619, 452, -474, 509,
	455, 461, 503, 264, 449, 527, 102, 550, 440, 576,
	401, 402, 501, 415, 283, 159, 191, 4, 120, 314,
	439, 466, 268, 267, 519, 282, 448, 374, 84, 610,
	-644, 2, 508, -646, 2, 527, 527, 2, -646, 2,
	-646, 2, -646, 2, -647, 527, 573, 610, 610, 610,
	610, 610, 610, 610, 610, 610, 610, 610, 610, 610,
	610, 610, 610, 610, 610, 610, -225, -227, -226, 610,
	610, 610, 610, 610, 610, 610, -192, 464, 2, 74,
	28, 28, -361, -363, 540, 243, 152, 357, -224, -226,
	2, -573, -525, 2, -448, -547, -450, 597, 598, 590,
	505, 67, -327, 335, 577, -462, 127, 541, 351, -546,
	-451, -464, 155, 367, 444, -383, 8, 9, 5, 6,
	7, -280, -452, -458, 532, 170, 341, -320, 611, 10,
	607, -570, -226, -463, 37, 210, 65, -529, -319, -281,
	-501, 244, -318, -301, -567, -568, 4, -540, -541, -530,
	-504, -512, -508, -509, -515, -271, -543, 77, 111, 112,
	110, 115, 114, 285, 284, 116, 113, 466, 549, 66,
	36, 218, 219, 249, 342, 220, 75, -569, 142, -542,
	241, 242, 481, 51, 404, 180, 126, 125, 344, 56,
	54, 557, -513, 122, 519, 520, 521, 522, 195, 196,
	58, 167, 168, 364, 388, 499, 529, 531, 208, 271,
	43, 106, 191, 239, 222, 248, 250, 254, 272, 275,
	315, 332, 337, 361, 363, 438, 473, -650, 558, 494,
	69, 70, -575, 407, -576, -295, -575, 610, 610, 612,
	610, -352, -354, -356, 2, 28, 139, 607, 2, -479,
	2, -480, -484, -226, 265, -483, 607, -481, 605, -302,
	352, -571, 445, -567, -568, -280, -301, -319, 4, -540,
	-542, 609, -357, 607, 120, 454, 508, 78, 234, 93,
	166, 192, -414, 607, -271, 28, 351, 523, 612, -353,
	395, -460, 607, 351, 354, 190, 354, 60, 296, 2,
	2, 2, 2, 2, 218, -271, 508, 119, 2, 263,
	2, 2, 2, 2, 2, 2, 2, -376, 218, 2,
	-302, 560, -376, 218, 2, -376, 218, 2, -420, 2,
	87, -285, 218, 2, -271, -311, 218, 2, -306, -308,
	-315, 218, 2, -313, -271, -535, 218, 2, -533, 4,
	-540, 116, 466, -448, 2, -136, 2, 60, -271, 560,
	2, 469, 2, 607, -148, 2, 71, 527, 43, 464,
	-149, 2, -434, 2, -435, -267, -268, -269, -491, -270,
	251, 394, 403, 580, 131, 335, 576, -627, 190, 589,
	523, -525, -525, -525, -384, 609, 2, 2, 2, 2,
	2, 2, -484, 218, -302, 2, -299, -528, 4, -540,
	-544, -541, -545, -543, 28, 31, 32, 33, 35, 37,
	38, 39, 40, 57, 65, 66, 72, 76, 78, 87,
	93, 102, 110, 111, 113, 112, 114, 115, 116, 127,
	131, 135, 139, 140, 144, 148, 152, 170, 172, 185,
	189, 190, 206, 209, 212, 225, 238, 243, 245, 265,
	269, 276, 284, 285, 335, 341, 347, 351, 352, 356,
	357, 377, 393, 410, 434, 459, 466, 484, 502, 508,
	517, 523, 525, 532, 540, 541, 549, 551, 559, 567,
	568, 569, 570, -546, 77, 2, -484, 218, 2, -305,
	218, -484, -308, 2, -285, 2, -448, -607, 515, 162,
	422, 2, -324, 218, -302, -304, -308, -306, 2, 2,
	2, 2, -448, 2, -313, 2, -533, 218, 2, 28,
	28, 560, 395, 245, 523, 612, -374, -316, -317, -524,
	8, -367, -271, 609, -448, 2, -136, -119, 2, 185,
	-448, 218, 2, -136, 218, 2, -448, 218, 2, -136,
	218, 2, -271, 2, -615, 2, -537, 218, -532, 10,
	-531, 5, 4, -540, -544, -541, 218, -271, 2, 296,
	2, 2, 530, 2, 98, 508, 119, 2, 426, -634,
	447, 534, 2, 2, 2, 2, 2, 2, 2, 508,
	-290, 2, -271, 185, 492, -313, 218, -314, 2, 460,
	-645, 407, -533, 218, 2, 560, -306, 218, 2, -306,
	234, 247, -285, 218, 2, 513, 511, 513, 511, 190,
	2, 245, 2, 245, 2, -485, 2, -486, -480, -487,
	605, 352, -495, 2, -494, -531, 556, -107, 607, -107,
	607, 464, 607, -537, -302, -302, -448, 2, -136, -119,
	2, -448, 2, -136, 2, -271, 2, -133, -537, -132,
	607, 190, -271, 2, -448, 2, -136, -119, 2, -448,
	2, -136, 2, -217, 185, 2, 120, 508, -192, 2,
	185, 551, 2, 8, 2, 225, -537, 455, 402, 177,
	2, 469, 2, 470, 74, -421, 576, 74, 190, 2,
	190, 2, -404, 2, 570, 395, 190, 2, 2, -597,
	2, 351, 190, 2, 190, 2, 190, 2, 190, 2,
	190, 2, -191, 465, 528, 507, 399, 253, 2, -136,
	567, -119, 253, 252, -448, 567, 2, -620, 185, 453,
	-448, 2, 526, 262, 160, 190, -404, 2, 190, 2,
	190, 2, 5, 2, 400, 490, 2, 251, 394, 490,
	2, -302, 508, 560, 460, 120, 28, 2, 452, 2,
	2, 88, 89, 190, 2, 190, 2, 205, 190, 2,
	190, 508, -385, 609, 576, 2, -396, -484, -433, -434,
	-433, 523, -361, -363, -192, 469, 2, -231, -394, -233,
	185, -424, -425, -234, 276, 172, 347, -235, -403, 28,
	139, -403, -403, 60, 608, 608, 11, 12, 76, 41,
	597, 598, 599, 600, 183, 601, 602, 595, 596, 594,
	587, 588, 592, 257, 258, 95, 591, 589, 86, 290,
	446, 173, 174, 175, 176, 423, 232, 34, 233, 14,
	15, 16, -327, 33, 356, 275, 577, 222, 473, 590,
	17, 18, 19, 248, 250, 337, 50, 225, -279, 367,
	-326, 505, 67, -448, -448, -448, -448, -448, -448, -448,
	-448, 363, 607, -390, -443, 605, -226, 607, 607, 607,
	607, -524, -226, -448, -462, 608, -381, 607, -226, -462,
	-457, 607, 444, 605, 607, -465, -448, 5, 5, 5,
	607, 609, -578, 571, 185, 607, 607, 607, 607, 607,
	607, 607, 607, 607, 607, 607, 607, 607, 607, 607,
	607, 390, -506, 607, -505, 607, -505, -505, 561, -503,
	607, 579, 572, 607, -503, 607, 607, 607, 607, 607,
	607, 607, 607, 607, 607, 607, 607, 607, 561, 612,
	-575, -357, 607, -386, -489, -448, 599, -386, -386, 351,
	-378, -448, 106, -407, 254, 315, 191, 272, 438, 239,
	-445, 611, -445, -473, 579, -226, -481, -301, -226, -483,
	607, -479, -473, -108, -524, -91, -104, -113, -136, -151,
	-196, -197, 599, -302, 607, 190, 607, 609, -528, 190,
	-367, -285, -312, -271, -302, -318, -319, -324, -296, -271,
	2, 2, 138, -378, -593, 535, 454, 28, 460, -535,
	-274, 38, -459, -498, -499, -549, 611, -548, -501, -511,
	-507, -510, 380, 384, -530, 54, 557, -513, 244, 4,
	-540, -542, 241, 242, 481, 51, 404, 180, 126, 125,
	344, 56, 519, 520, 521, 522, 195, 196, 58, 558,
	494, 69, 70, -593, 535, 454, 28, 460, 185, -535,
	185, -535, 2, 2, 155, 2, 2, 2, -271, -249,
	612, 64, 431, 155, -376, 218, -249, 155, -249, 155,
	-325, 218, -324, -249, 155, -249, 612, 155, -249, 612,
	155, 609, 612, 155, -535, 2, -420, -527, -378, 38,
	-434, 2, 127, 4, 5, -648, 612, 274, -330, 289,
	334, 214, 352, 574, 345, 131, -536, 5, 4, -458,
	-470, 127, 282, 244, -518, -520, 8, -519, 9, -521,
	597, 598, -526, -525, 109, 609, -528, -246, 424, 467,
	366, -245, 24, 29, 143, 236, 319, 554, 161, -342,
	237, 429, -339, 370, 155, 485, 544, -607, -610, 451,
	515, 162, 422, 90, 345, 467, 366, 424, 155, -400,
	-402, 38, 118, 319, 365, 61, 228, 294, 295, 488,
	564, 155, 467, 366, 424, 366, -14, -260, 24, 143,
	-262, -257, 467, -610, 99, 424, 583, 429, 376, 500,
	393, -610, -607, 270, -609, 566, 333, -248, 485, 544,
	-607, -610, 451, 424, -247, -344, -339, 370, 155, 611,
	24, 143, 424, 467, 366, -630, -631, 29, -244, -243,
	24, 143, 424, 366, -601, -292, -572, 225, 570, 155,
	-292, -292, -484, 218, -624, 185, 2, -617, -132, 266,
	5, 10, -537, -132, -374, 612, 612, -528, 599, 453,
	452, 155, 155, 155, 155, 253, 185, 335, 335, 570,
	2, 2, 2, 2, 2, 192, -612, -635, 2, 2,
	-302, 218, -359, 351, -596, -375, 508, -302, 185, 335,
	43, -305, 218, 2, -308, 560, -601, 335, -307, 218,
	-302, 38, 607, 335, 2, -420, 2, 234, -572, 335,
	-485, -321, -302, -480, -321, 467, -295, 38, -445, -302,
	608, 612, -495, -495, -537, -205, 570, 190, 607, -217,
	570, 570, 253, -492, 612, -491, 225, -538, -537, -133,
	-537, 427, 253, -537, -596, -285, 2, -302, 2, 508,
	255, -537, -205, 225, -537, -537, -537, -527, 28, 470,
	2, -191, 465, 528, 89, 470, 2, -302, 508, 120,
	234, 80, -624, 185, 2, -271, -599, 185, -594, 439,
	454, 535, -593, -302, 120, -302, 120, -302, 120, -302,
	-302, 2, 2, 2, 2, 2, 85, 2, -136, -448,
	2, 85, 2, 46, 486, -620, 185, 2, 526, 2,
	526, 2, -271, -271, -271, 489, 274, -302, -302, -302,
	-303, -308, 455, 509, 536, 453, -448, 2, -637, 2,
	190, 185, 2, 508, 234, 508, 234, 120, 190, 74,
	120, 28, 508, 450, 609, 4, -249, 612, -275, -231,
	-394, -527, -395, -394, -232, -231, -234, 185, 403, 545,
	319, 471, 259, -425, -424, 28, -448, -429, 179, 318,
	-448, -427, -450, 597, 598, -519, -521, -377, 345, -225,
	-225, -225, -364, -475, -448, 393, 234, -500, -498, -498,
	-300, -528, 519, -448, -448, -448, -448, -448, -448, -448,
	-448, -448, -448, -448, -448, -448, -448, -448, -448, -448,
	-448, -448, -448, -448, -448, -448, -448, -448, -448, -448,
	-448, -448, -448, -448, -448, -448, -448, -448, -448, 275,
	222, 473, 50, 225, -448, 523, -448, -448, -448, -448,
	312, 335, 341, 532, 170, 542, 139, 345, -651, 502,
	40, -455, -226, -382, 607, -469, 35, 484, 28, -462,
	607, 2, -443, -448, -444, -328, -326, -271, 597, 598,
	599, 600, 601, 602, 587, 588, 589, 14, 15, 16,
	592, 596, 594, 595, 183, 95, 591, 290, 446, 86,
	173, 174, 175, 176, 257, 258, 17, 18, 19, 34,
	590, -379, -378, -378, 608, 559, 28, 139, 599, 2,
	608, 612, 38, 608, -448, -379, -461, -457, -378, -468,
	-467, 567, -415, -416, 575, 299, 123, 216, 297, -417,
	458, -522, 8, -528, 599, -579, 178, 209, 607, 608,
	2, 608, 2, 608, -448, 2, 608, -448, 2, 608,
	-448, 2, 608, -448, 2, 608, 2, 608, 2, -448,
	-448, -448, -448, -448, -448, -448, -378, 8, -522, -522,
	519, 519, -522, -522, -522, -514, 380, 381, 382, 383,
	277, 278, 279, 280, 384, 385, 386, 387, 304, 305,
	306, 307, 300, 301, 302, 303, 308, 309, 310, 311,
	200, 201, 202, 203, 196, 197, 198, 199, -514, -409,
	2, -516, -378, 4, 575, 299, 123, 216, 297, 458,
	5, -409, 2, -410, 2, -448, -378, -411, -449, -450,
	597, 598, 590, -327, -462, -412, 2, -448, -379, -448,
	57, 269, 525, -413, -448, 190, -378, -378, 2, -378,
	2, -576, 38, -378, -370, 612, 190, 38, 4, -370,
	-370, 607, 608, 612, -408, 213, 293, 288, 247, -408,
	-479, -407, 254, -405, 361, -405, -405, -473, -286, 605,
	613, -528, -473, -472, -471, 38, -295, 358, -473, -473,
	609, 608, -472, 606, -591, 607, 610, 610, 610, 610,
	610, -302, 607, -378, -528, 609, 491, 2, 608, 248,
	248, 248, 248, 248, 351, 445, 608, 523, -595, -311,
	-315, 509, 2, 570, -106, 353, 608, 612, -369, 37,
	605, 609, -522, 2, 2, -517, 561, 607, 607, -416,
	607, 190, -595, -315, 509, 2, -600, -368, -368, 523,
	-271, 2, -302, -376, -249, 155, -376, -376, -249, 612,
	155, -285, -306, -311, -313, -315, -271, -533, -535, -249,
	-307, -627, 608, 527, -435, -329, 403, 483, 425, 462,
	504, 8, 9, 8, 9, 612, -528, 612, -628, 93,
	523, 78, 607, 454, -264, 283, 523, -439, 218, 78,
	-550, 93, -288, -551, -271, 72, 541, 393, 189, 153,
	-628, 93, 393, -628, 93, 2, 236, 93, 467, 489,
	607, 28, 60, -484, 41, 41, 28, -608, -609, 270,
	190, 576, 508, 234, 454, 523, 523, -484, -402, -498,
	118, 294, 295, 60, -523, -518, 597, 598, -523, 60,
	-523, -523, -523, 570, -305, -484, 454, 523, 523, 523,
	413, 413, -257, -149, 523, 523, 28, -192, 432, 127,
	-649, 589, 413, 270, -609, 523, 190, 612, 41, 41,
	28, -608, 190, 523, -324, -286, 555, 42, 555, 42,
	555, 523, 42, 454, 523, 612, 42, -243, -596, -596,
	523, 523, -14, 467, -602, -276, 105, 325, 287, 326,
	97, 322, 96, 321, 103, 323, 104, 324, 562, 338,
	563, 339, 63, 320, 298, 327, 487, 328, -277, -278,
	146, 372, 553, 120, -533, -14, -14, 467, 366, 424,
	155, -625, 225, 28, -614, 225, -492, 225, -492, -316,
	-271, 609, -136, -448, -448, -136, -448, -136, 46, 155,
	155, 2, 2, -645, 263, 607, -333, 335, 190, -367,
	-493, 245, 612, -375, -593, 155, -533, -401, -400, 335,
	-307, 218, 2, 155, -357, 335, 149, 607, 401, 2,
	155, -287, 218, -272, -271, -420, -251, 512, 155, -398,
	551, -430, -136, 607, 127, 38, -430, -387, -388, -490,
	-389, -288, 607, -295, -445, -107, -494, 608, 608, 608,
	-204, 355, -203, -271, 5, -217, -358, -289, -288, 119,
	405, 405, -211, 570, -132, -133, 608, 612, -492, 225,
	492, -205, -205, -492, -492, -302, 185, -537, -205, -205,
	-205, 2, 2, 2, 2, -404, -302, -285, -324, -302,
	28, 609, -535, -535, -315, -311, -404, -285, -404, -285,
	-404, -285, -404, -404, -136, -448, 489, 2, 464, 185,
	185, 609, -404, -360, 434, 2, 401, 120, 508, 370,
	234, -302, -324, -302, -324, -285, 120, -285, 121, -302,
	4, -484, -395, -232, 352, 259, 471, -427, -428, -450,
	444, 445, -428, 444, 445, 8, 9, 8, 9, -236,
	475, 340, -376, 612, -241, 39, 135, 259, -302, 576,
	151, -448, -448, 523, -651, 502, -455, 151, -448, 312,
	341, 532, 170, 542, 139, 345, 190, 607, -449, -449,
	608, -380, -448, -448, 606, 615, 608, 609, 608, -363,
	612, -361, -448, -378, -378, 608, 609, -378, -367, 606,
	606, 612, 608, -466, -467, 144, -448, 523, 523, 523,
	523, 607, 608, 609, -584, 362, 607, 607, -448, 608,
	608, 608, 608, 38, 612, 612, 612, 608, 612, 612,
	612, 608, 608, 608, 612, 608, 576, 576, 608, 608,
	608, 608, 612, 608, 612, 608, 190, 608, 608, -418,
	377, 608, 11, 12, 597, 598, 599, 600, 183, 601,
	602, 595, 596, 594, 587, 588, 589, 86, 290, 446,
	14, 15, 16, -327, 248, 225, -449, -449, -449, -449,
	608, -453, -454, 190, 185, 38, -413, -413, -413, 608,
	190, -378, 608, 608, 607, -577, 292, 335, 608, -442,
	-441, 568, -489, -371, 2, -479, -297, -528, -442, -442,
	-378, -448, 254, 254, -406, 551, 351, -408, -479, -472,
	-524, -447, -446, 187, 39, 135, 329, 330, 331, 221,
	188, -472, -295, -357, -472, -472, -528, -473, -473, -471,
	608, -592, -524, 608, -372, -482, -571, -363, 609, -528,
	-214, -572, -193, 5, 341, -193, -193, -193, -193, -302,
	-535, 523, 523, 225, 25, 378, -498, 605, 606, 8,
	-528, 607, -522, -522, -522, -535, 190, 190, 225, 351,
	190, -533, 2, -249, -376, -249, -249, -324, -325, -249,
	-249, -249, -399, 570, -525, -434, 539, 83, 403, 519,
	-525, -245, 424, 467, -288, -288, -302, -221, -220, -218,
	-271, 5, -312, 204, 414, -533, 335, -439, 218, -250,
	335, 218, -296, -498, 607, -422, 572, 259, 259, 551,
	-288, -296, 259, 218, -288, 218, -296, 2, -296, -603,
	403, 346, -448, -219, -218, 60, -340, 281, 401, 336,
	-246, 424, 467, 366, -136, -136, -136, 607, -627, 551,
	138, -302, -324, -302, -312, -533, -307, 467, 366, 424,
	332, -318, -523, -523, -400, 467, 366, 424, -312, -533,
	-305, -533, -256, 218, -271, -256, 218, 454, -285, 413,
	576, 45, -649, 523, 190, -448, -448, -247, -136, -136,
	-136, 607, -286, -248, 424, 5, 218, -288, 5, -288,
	218, 5, -271, -288, -312, -533, -631, 24, 143, -288,
	-312, -533, -276, 372, -537, 341, 547, -285, -601, -292,
	454, 523, 523, -484, -621, -622, 206, 437, 454, 440,
	-535, -132, -208, 570, -132, -202, 229, 599, -598, -537,
	-271, 560, -271, -331, -334, -332, -288, -440, -439, -554,
	-555, -550, 275, 234, 541, 247, 171, 93, -222, -223,
	572, 570, 155, -322, -302, 605, -205, -537, -302, -493,
	-313, -314, 155, -357, 335, -533, 38, 155, 607, 2,
	2, -306, 351, 335, -287, 218, -252, 145, -649, -285,
	-442, -371, -397, -432, 434, 351, -358, 556, -295, -397,
	-373, 612, 190, 589, 609, -358, -488, 599, -107, -107,
	-205, 612, 607, 589, 589, 607, -537, 608, 612, 609,
	607, 589, 589, -213, 355, -212, 147, 261, 246, 477,
	478, 479, 480, 137, 476, 124, 317, 230, -492, -537,
	-211, -133, 190, 190, -66, 570, 508, -205, 611, 440,
	-271, -404, -404, -404, 464, 464, -271, -367, -298, -528,
	-285, -302, -299, -324, 185, 185, -285, 545, -428, 352,
	286, -475, -242, 578, -302, 611, -448, -448, 151, 151,
	-448, -449, -449, -448, 151, 190, 607, -448, -459, 33,
	33, 608, 612, -444, -448, -326, 608, 559, -363, -363,
	608, 599, -528, 611, 608, -457, 148, -448, 517, 299,
	216, 297, -417, 297, -417, -417, -522, 5, -528, 599,
	-585, -291, 607, -271, 568, -362, 357, 608, -500, -498,
	-448, -448, -448, -448, -448, -522, -503, -503, -518, -518,
	-448, -453, -448, -500, -498, -449, -449, -449, -449, -449,
	-449, -449, -449, -449, -449, -449, -449, -449, -449, -449,
	-449, -449, -449, -449, -449, 139, 335, 345, -449, -454,
	-453, -448, -448, -498, 608, 608, 608, -378, -106, 607,
	292, -391, 209, -448, -492, 612, -391, -391, 608, -479,
	-479, 607, -448, 254, 606, 612, 614, 589, 589, -357,
	609, -471, -472, 606, 608, 612, 608, 612, -431, 38,
	608, -528, -442, -216, -215, 136, 53, 107, 134, 341,
	248, -623, 570, -535, -535, 454, 354, 5, 8, 605,
	606, 609, -522, 608, 608, 608, -535, -535, 454, -593,
	535, 454, 28, -535, -249, -249, 119, 319, -448, 523,
	523, 608, 612, 589, 60, 225, 155, 335, 553, 335,
	-551, 153, -556, -448, 607, 234, 607, 607, 2, -238,
	-239, -240, 143, 467, 24, -629, 2, 551, 155, -249,
	155, -249, 574, 608, 612, -340, 607, 607, 523, 454,
	-264, 523, 570, -378, -448, -206, 127, -527, -610, 611,
	-610, 611, 454, 523, 523, 454, 523, 523, 335, 155,
	570, 169, 169, 576, -256, -448, -448, 185, 523, 570,
	-378, 523, -502, 48, 26, 335, -306, -249, 155, 523,
	523, 535, 467, -537, -537, 341, -14, -312, -533, -307,
	467, 366, 424, -600, -600, 206, -315, -625, -492, -210,
	355, -209, 147, 436, 137, 261, 230, -492, -208, 190,
	245, 570, -307, 2, 608, 608, 612, 612, -557, -250,
	-302, -287, 234, 234, -294, -272, 38, 349, 349, 607,
	-302, -87, 570, -491, -524, -604, 570, 43, -305, 38,
	155, -601, -136, -307, -496, -497, 5, 38, -302, 155,
	351, 335, -253, 268, -649, -532, -572, -363, -397, -386,
	336, 91, 608, -442, -388, -371, -448, 2, 608, -203,
	-204, -537, -537, -537, -205, -217, -289, 2, -538, -537,
	-537, 612, 607, 589, 589, 589, 589, 589, 589, -211,
	-492, -132, -136, 355, -302, 599, -404, -346, -345, 370,
	345, -346, 444, 444, 352, 179, 264, -241, -286, -448,
	-448, 151, 33, 33, -448, -448, -459, 608, -448, -448,
	-378, 606, 5, -448, 608, 608, 8, -448, 608, 609,
	-586, -271, -448, 608, 60, 608, 608, 612, 612, 608,
	608, 608, 608, 608, 608, 608, -454, 190, 139, 345,
	607, 608, 608, -106, -456, 212, 60, -479, -456, -456,
	-406, -367, -479, -446, -286, 605, -286, 605, -528, -524,
	-482, 607, 609, -215, 589, -537, -537, -193, 206, -623,
	-623, 570, -315, 606, 2, 605, -528, 608, -315, 190,
	-595, -315, 509, 119, -288, -288, -220, -525, 508, 444,
	-256, 393, -439, 155, 155, -558, 93, -560, 76, 171,
	102, 335, 341, 541, 393, 72, 127, 351, 410, -639,
	-640, -641, 38, 581, 582, 608, -365, -476, -571, 607,
	-271, -365, -367, 335, 497, 127, 351, 335, 127, 351,
	565, 119, 2, 535, 79, -288, -296, -218, -367, -367,
	-302, -312, -533, 163, 608, 612, 589, 2, 599, 599,
	-312, -533, -307, -312, -533, -305, 155, -256, 368, 169,
	523, -136, -448, 163, 608, -286, 5, 5, 155, -283,
	76, -288, 5, -288, -306, 119, 454, 523, 523, 351,
	351, 354, -621, -622, -208, 612, 607, 589, 589, 589,
	-208, -538, -132, 2, -357, -347, 236, -288, -555, -552,
	-553, 393, -440, -559, -561, 171, 393, -335, 607, -287,
	-272, 607, -136, 2, -221, 607, -333, 355, 606, -606,
	355, -605, 117, 137, -533, -401, -136, -307, -355, 570,
	-357, 608, 612, 149, -423, 551, -286, -302, 155, -254,
	267, -649, -532, -251, -426, -424, 140, 607, 351, -136,
	-363, 589, 608, 608, 119, 608, -212, -213, -537, -132,
	-537, -537, -537, -132, -211, -492, -67, -68, 234, 93,
	375, -299, 508, 234, 607, 607, -241, -448, -448, -448,
	608, -363, -528, 599, -580, 370, 608, -475, -448, -448,
	-449, 190, 607, -459, 608, -581, 569, -448, -392, -393,
	-448, 442, 108, 210, -581, -581, 608, -524, -524, 2,
	-537, 354, 2, 523, 605, 2, 190, -535, 190, 190,
	225, 225, 38, 413, -439, -296, -296, -300, -293, -271,
	171, 218, 341, 565, -422, 259, 607, -449, 545, -302,
	607, 2, 217, 217, 30, 60, -642, 131, 238, 608,
	612, -477, -282, -271, -448, -477, 608, 608, 341, 545,
	341, 565, -448, 545, -498, 607, -249, -249, 608, 608,
	-448, 523, -527, 100, -525, 2, -610, -256, -285, -448,
	185, -448, 523, 5, -249, -300, -249, -249, -283, 535,
	-312, -533, -307, -626, 509, 461, 536, 455, 193, 443,
	-626, 185, -209, -210, -537, -132, -132, -208, 38, -341,
	-342, 2, -557, 259, -293, 259, 227, 154, -365, 607,
	607, -367, -638, 570, 608, -331, -222, -88, -89, 524,
	-491, 612, 607, 589, -357, 319, 119, 38, 5, 607,
	607, -271, 351, 607, -286, -266, 92, -649, -532, -252,
	-397, 336, -367, 93, -426, -455, -205, 607, -205, 608,
	612, 28, 607, 28, 607, -302, -324, -378, -378, 608,
	-363, 60, 612, 608, 608, -449, -459, 608, -582, -583,
	-291, 612, 607, 607, 468, 606, 606, -535, 2, -535,
	-535, -535, 454, -256, 393, -271, -551, -560, -293, 335,
	-223, 551, 570, -448, -449, -273, 607, -448, 607, 607,
	38, 127, 238, 132, 223, -438, -643, 101, 498, 226,
	-476, -241, 608, -437, 551, 410, -449, -283, -365, 607,
	607, 607, 589, 190, -136, 607, -502, -249, -306, 523,
	2, 2, 190, -600, 608, -616, 408, -136, -222, 607,
	-223, -336, 81, 94, 128, 217, 194, 235, 489, 495,
	28, -336, 608, -365, -365, 608, -337, 351, 119, 319,
	608, 38, -89, 9, -605, -606, -448, 38, 119, -136,
	-496, -365, -302, -365, 351, -258, -257, 276, -532, -253,
	608, -296, -397, -538, -68, -367, -367, 608, 608, -587,
	401, 445, 211, -378, -364, 608, 612, 38, -393, 2,
	2, 2, -623, -315, 413, -250, 155, 213, 608, -562,
	291, -271, 608, -401, -401, 38, 132, 223, -343, -339,
	607, -242, -477, -223, 213, -302, -611, 551, 608, -349,
	-348, -345, -351, -350, -345, -378, -525, 100, 368, -378,
	-283, -535, -535, 351, -618, 191, -617, 5, 10, -337,
	-366, -478, -288, -437, 608, 608, 82, 119, -347, -136,
	608, -136, 2, -355, 608, 608, -423, 608, -302, -255,
	-539, 413, 415, -649, -254, -442, 140, 608, 608, 608,
	608, -588, -589, 50, 538, 109, -448, -588, -588, -583,
	-585, 190, 171, -436, 579, -563, -566, -565, 586, 474,
	191, 369, 608, 497, 564, 608, 608, -642, -367, -436,
	-357, -448, -437, 608, 612, 556, 608, 612, 556, 608,
	190, 608, -249, -623, -249, -626, -207, 570, 46, -265,
	-264, 608, 612, -438, -437, -343, 392, 133, 143, -341,
	-638, -437, 607, -438, 607, -263, -262, -649, -518, -266,
	140, 336, 545, -205, -590, 153, -589, 389, 184, 444,
	389, 184, -590, -590, -535, -293, -223, 55, -565, 586,
	-566, 586, 545, 133, -442, 608, -562, -223, -348, 225,
	-350, 190, 368, 190, 452, -617, 30, -223, -478, -343,
	-438, -223, 445, 445, 2, -222, -337, -438, -365, -343,
	-365, -259, -260, -261, -367, -258, 336, 545, 467, 109,
	209, 518, 319, 33, 589, -564, 319, 431, 64, 467,
	-564, -563, 607, 607, -535, 355, -223, -343, -442, 2,
	-337, -343, 608, -223, 608, -534, 366, -255, 467, -387,
	444, 359, -589, -448, 23, 341, 127, -642, -378, -378,
	-249, -204, 607, -442, -223, -265, -223, -437, -442, -438,
	-649, -263, -387, -442, 608, 608, -204, -442, -442, -438,
	-343, -533, -259, -442, -338, -339, 523, 608, -343, -223,
	607, -223, -442, -378, -442, 608, -338,
}

var sqlDef = [...]int{
	-2, -2, 1, 2, 3, 4, 6, 7, 8, 10,
	12, 14, 16, 18, 20, 22, 24, 26, 28, 30,
	31, 32, 33, 34, 567, 568, 570, 571, 572, 574,
	575, 577, 579, 581, 582, 583, 585, 586, 588, 589,
	590, 591, 592, 594, 596, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, -2, 0, 0,
	674, 676, 0, 1457, 1459, 1461, 1463, 0, 830, 0,
	36, 37, 39, 0, -2, 344, 346, 348, 350, 0,
	382, 384, 385, 387, 389, 390, 391, 393, -2, 0,
	500, 501, 503, 505, -2, 0, 1044, 1046, 1048, 0,
	662, 664, 0, 1051, 1053, 1055, 0, 0, 686, 687,
	0, 1571, -2, 678, 680, 682, 684, 755, 757, 759,
	761, 763, 765, 767, 769, 771, 773, 774, 776, 778,
	780, 782, 784, 785, 787, 789, 791, 792, 794, 795,
	797, 799, 801, 803, 805, 807, 809, 811, 813, 815,
	817, 819, 821, -2, 824, 825, 826, -2, -2, 0,
	-2, -2, -2, 1475, 41, 43, 45, 47, 49, 51,
	53, 55, 57, 59, 61, 444, 446, 448, 450, 452,
	455, 457, 459, 1629, 507, 509, 511, 513, 515, 517,
	519, 0, 0, -2, 1643, 0, 0, 63, 64, 65,
	66, 67, 68, 69, 70, 71, 72, 111, 112, 113,
	114, 115, 116, 117, 76, 77, 78, 80, 81, 82,
	83, 87, 88, 89, 90, 91, 92, 93, 94, 95,
	96, 108, 109, 74, 0, 0, 1602, 1604, 1606, 1608,
	-2, 0, 0, 5, 9, 11, 13, 15, 17, 19,
	21, 23, 25, 27, 29, 569, 573, 576, 578, 580,
	584, 587, 593, 595, 597, 552, 553, 556, 2341, 2359,
	2360, 2361, 2364, 2365, 2366, 2367, 2368, 2369, 2831, 2912,
	2913, 2391, 2392, 2393, 2394, 2395, 2396, 2397, 2398, 2399,
	2400, 2401, 2402, 2403, 2404, 2405, 2406, 2407, 2408, 2409,
	2410, 2411, 2412, 2413, 2414, 2415, 2416, 2417, 2418, 2419,
	2420, 2421, 2422, 2423, 2424, 2425, 2426, 2427, 2428, 2429,
	2430, 2431, 2432, 2433, 2434, 2435, 2436, 2437, 2438, 2439,
	2440, 2441, 2442, 2443, 2444, 2445, 2446, 2447, 2448, 2449,
	2450, 2451, 2452, 2453, 2454, 2455, 2456, 2457, 2458, 2459,
	2460, 2461, 2462, 2463, 2464, 2465, 2466, 2467, 2468, 2469,
	2470, 2471, 2472, 2473, 2474, 2475, 2476, 2477, 2478, 2479,
	2480, 2481, 2482, 2483, 2484, 2485, 2486, 2487, 2488, 2489,
	2490, 2491, 2492, 2493, 2494, 2495, 2496, 2497, 2498, 2499,
	2500, 2501, 2502, 2503, 2504, 2505, 2506, 2507, 2508, 2509,
	2510, 2511, 2512, 2513, 2514, 2515, 2516, 2517, 2518, 2519,
	2520, 2521, 2522, 2523, 2524, 2525, 2526, 2527, 2528, 2529,
	2530, 2531, 2532, 2533, 2534, 2535, 2536, 2537, 2538, 2539,
	2540, 2541, 2542, 2543, 2544, 2545, 2546, 2547, 2548, 2549,
	2550, 2551, 2552, 2553, 2554, 2555, 2556, 2557, 2558, 2559,
	2560, 2561, 2562, 2563, 2564, 2565, 2566, 2567, 2568, 2569,
	2570, 2571, 2572, 2573, 2574, 2575, 2576, 2577, 2578, 2579,
	2580, 2581, 2582, 2583, 2584, 2585, 2586, 2587, 2588, 2589,
	2590, 2591, 2592, 2593, 2594, 2595, 2596, 2597, 2598, 2599,
	2600, 2601, 2602, 2603, 2604, 2605, 2606, 2607, 2608, 2609,
	2610, 2611, 2612, 2613, 2614, 2615, 2616, 2617, 2618, 2619,
	2620, 2621, 2622, 2623, 2624, 2625, 2626, 2627, 2628, 2629,
	2630, 2631, 2632, 2633, 2634, 2635, 2636, 2637, 2638, 2639,
	2640, 2641, 2642, 2643, 2644, 2645, 2646, 2647, 2648, 2649,
	2650, 2651, 2652, 2653, 2654, 2655, 2656, 2657, 2658, 2659,
	2660, 2661, 2662, 2663, 2664, 2665, 2666, 2667, 2668, 2669,
	2670, 2671, 2672, 2673, 2674, 2675, 2676, 2677, 2678, 2679,
	2680, 2681, 2682, 2683, 2684, 2685, 2686, 2687, 2688, 2689,
	2690, 2691, 2692, 2693, 2694, 2695, 2696, 2697, 2698, 2699,
	2700, 2701, 2702, 2703, 2704, 2705, 2706, 2707, 2708, 2709,
	2710, 2711, 2712, 2713, 2714, 2715, 2716, 2717, 2718, 2719,
	2720, 2721, 2722, 2723, 2724, 2725, 2726, 2727, 2728, 2729,
	2730, 2731, 2732, 2733, 2734, 2735, 2736, 2737, 2738, 2739,
	2740, 2741, 2742, 2743, 2744, 2745, 2746, 2747, 2748, 2749,
	2750, 2751, 2752, 2753, 2754, 2755, 2756, 2757, 2758, 2759,
	2760, 2761, 2762, 2763, 2764, 2765, 2766, 2767, 2768, 2769,
	2770, 2771, 2772, 2773, 2774, 2775, 2776, 2777, 2778, 2779,
	2780, 2781, 2782, 2783, 2784, 2785, 2786, 2787, 2788, 2789,
	2790, 2791, 2792, 2793, 2794, 2795, 2796, 2797, 2798, 2799,
	2800, 2801, 2802, 2803, 2804, 2805, 2806, 2807, 2808, 2809,
	2810, 554, 555, 1238, 0, 627, 625, 2326, 628, 2625,
	630, 632, 494, 495, 496, 497, 498, 499, 0, 655,
	641, 1641, 656, 658, 659, 660, 661, 622, 620, 0,
	660, 655, 2395, 653, 1455, 1456, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 506, 0, 0, 0, 0, -2,
	0, 0, 0, 0, 0, 0, 0, 423, 1297, 1298,
	1299, 1440, 1441, 2673, 1482, 0, 243, 675, -2, -2,
	2796, -2, 709, 710, -2, -2, 724, 728, 719, 2800,
	0, 2676, 2660, -2, 731, 1458, 1460, 1462, 828, 829,
	2345, 0, 0, 0, 0, 0, 38, 40, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 251, 253, -2,
	-2, -2, -2, 0, 0, 2722, 2447, 2294, 2361, 2297,
	2292, 345, 347, 349, 351, 352, 0, 0, 0, 0,
	0, 0, 0, 383, 386, 388, 392, -2, 394, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 422,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, -2, -2, 0, 0, 0, 0, 0, 0, 0,
	0, 1118, 1110, 1111, 1362, 0, 0, 0, -2, 502,
	504, 557, 558, 0, 1630, 1630, 565, 566, -2, 0,
	0, 0, 0, 315, 305, 1045, 1047, 1049, 1050, 0,
	0, 0, 0, 0, 663, 665, 0, 0, 283, 1052,
	1054, 1056, 1057, 0, 0, 0, 0, 0, 0, 317,
	0, 0, 679, 681, 683, 685, 756, 758, 760, 762,
	764, 766, 768, 770, 772, 775, 777, 779, 781, 783,
	786, 788, 790, 793, 796, 798, 800, 802, 804, 806,
	808, 810, 812, 814, 816, 818, 820, 822, 823, 836,
	0, 0, 0, 0, 0, -2, -2, 0, 0, 0,
	-2, 0, -2, -2, -2, 0, 0, 0, 0, 0,
	0, 0, -2, 0, 0, 938, 0, 0, 0, -2,
	-2, -2, 0, 0, 0, 0, 0, -2, -2, 0,
	0, 0, 0, -2, 1025, 0, 0, 839, 842, 843,
	844, 845, 846, 847, 0, 911, 936, 937, 947, 827,
	0, 1278, 1631, 1484, 1465, 1479, 1484, 1467, 1468, 1469,
	1470, 1471, 1476, 1478, 1472, 1473, 1474, 42, 44, 46,
	48, 50, 52, 54, 56, 58, 60, 62, 445, 447,
	449, 451, 453, 456, 458, 460, -2, 1600, 1601, 508,
	510, 512, 514, 516, 518, 520, 666, 0, 669, 0,
	841, 668, -2, 0, 1635, 1635, 1635, 0, 0, 1601,
	1599, 0, 672, 673, 735, 736, 1908, 0, 0, 0,
	0, 0, 0, 0, 0, 2168, 1996, 0, 737, -2,
	2029, 2031, 2771, 2598, 2796, 2167, 2033, 2034, 2035, 2036,
	2037, 0, 2039, 2040, 2041, 2042, 2043, 2044, 0, 2046,
	0, 2051, 2052, 2053, 0, 2778, 2271, 2355, -2, 0,
	0, 2784, 2351, 0, 2134, 2069, -2, -2, 2378, 2357,
	1840, 1841, 1842, 1843, 1844, -2, -2, 2814, 2073, 2074,
	2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 0,
	2759, 2779, 2780, 2785, 2787, 2781, 2768, 2094, 2461, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, 1867, 1876, -2, -2, -2, -2, -2, -2,
	-2, 2772, 2773, 2790, 2793, 2799, 2804, 2805, 2777, 2786,
	2813, 2815, 2816, 2817, 2818, 2819, 2820, 2821, 2822, 2823,
	2824, 2825, 2826, 2827, 2828, 2829, 2830, 1868, -2, -2,
	-2, -2, 1618, 2639, 1621, 1238, 1619, 1603, 1605, 0,
	1607, 0, 0, 0, 1612, 1638, 1636, 0, 1687, 1616,
	1617, 1710, 1710, 1734, 0, 1715, 0, 1734, 1630, 1761,
	0, 1721, 2665, 2070, 2071, 0, 2361, 2356, -2, -2,
	2811, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 623, 0, 629, 631, 0, 0, 0, 654,
	1640, 0, 0, 0, 0, 0, 0, 0, 0, 426,
	427, 428, 429, 430, 2779, 0, 0, 0, 435, 0,
	437, 438, 439, 440, 441, 442, 443, 213, 2779, 525,
	550, 0, 213, 2779, 528, 213, 2779, 531, 0, 534,
	1360, 213, 2779, 537, 2322, 213, 2779, 540, 542, 2330,
	213, 2779, 546, 2337, 2335, 547, 0, 549, 233, 229,
	230, 231, 232, 1451, 1452, 1453, 1454, 0, 1481, 1361,
	677, 0, 703, 0, 707, 708, 2767, -2, 0, 2685,
	712, 713, -2, 715, 1485, 1489, 1490, 1491, 1492, 1493,
	0, 0, 0, 0, 1498, 0, 0, 0, 0, 704,
	705, 722, 723, 729, 732, 0, 831, 832, 833, 834,
	835, 73, 0, 2779, 1761, 75, 0, 2316, 2386, 2387,
	2388, 2389, 2390, 2812, 2832, 2833, 2834, 2835, 2836, 2837,
	2838, 2839, 2840, 2841, 2842, 2843, 2844, 2845, 2846, 2847,
	2848, 2849, 2850, 2851, 2852, 2853, 2854, 2855, 2856, 2857,
	2858, 2859, 2860, 2861, 2862, 2863, 2864, 2865, 2866, 2867,
	2868, 2869, 2870, 2871, 2872, 2873, 2874, 2875, 2876, 2877,
	2878, 2879, 2880, 2881, 2882, 2883, 2884, 2885, 2886, 2887,
	2888, 2889, 2890, 2891, 2892, 2893, 2894, 2895, 2896, 2897,
	2898, 2899, 2900, 2901, 2902, 2903, 2904, 2905, 2906, 2907,
	2908, 2909, 2910, 2911, 2814, 79, 0, 2779, 84, 0,
	2779, 0, -2, 97, 0, 110, 0, 137, -2, -2,
	-2, 118, 0, 2779, 0, 2291, -2, 0, 225, 306,
	307, 308, 0, 613, 0, 1082, -2, 0, 1291, 1293,
	1293, 0, -2, 0, 0, 0, 1035, 2288, 2293, 1036,
	2312, 1037, 2298, 0, 353, 354, 355, 356, 357, 0,
	358, 2779, 360, 361, 0, 363, 364, 2779, 366, 367,
	0, 369, 0, 371, 0, 265, 269, 2779, 318, 319,
	2374, 2375, 2382, 2383, 2384, 2385, 2779, 396, 399, 0,
	401, 402, 0, 404, 0, 0, 0, 408, -2, 424,
	0, 421, 411, 412, 414, 415, 416, 417, 418, 0,
	464, 462, 2327, 0, 0, -2, 2779, 0, 1079, 0,
	0, 1340, -2, 0, 1284, 0, 1347, 2779, 1343, 0,
	-2, 0, 1628, 2779, 1502, 1114, 1115, 1116, 1117, 1773,
	491, 0, 1535, 0, 1537, 0, 1557, 1767, 1710, 0,
	0, 1772, 0, -2, 610, 2344, -2, 560, 0, 561,
	0, -2, 0, 332, 0, 0, 1060, 1062, 1063, 1065,
	1066, 1069, 1070, 1071, 1072, 0, 1074, 1747, 284, 286,
	0, 0, 0, 1059, 1442, 1443, 1444, 1445, 1446, 1447,
	1448, 1449, 1450, 0, 0, 688, 0, 0, 837, 838,
	0, 0, 854, 855, 856, 0, 332, 2677, 2634, 2483,
	863, 0, 866, 869, -2, 0, 0, 0, 0, 873,
	0, 878, 879, 880, 0, -2, 0, 887, 889, 1043,
	891, 0, 0, 893, 0, 897, 0, 900, 0, 902,
	0, 904, -2, -2, -2, 912, 913, -2, 918, -2,
	0, 922, -2, 0, 925, 0, 928, -2, 0, 938,
	934, 935, 0, 0, 0, 0, 955, 956, 0, 965,
	0, 968, 969, 970, 0, 974, 975, 0, 977, 978,
	979, 980, 0, 2749, 2682, 2447, 0, 988, -2, 994,
	996, 0, -2, 0, 1012, 0, 1016, 0, 0, 1024,
	0, 0, 840, 0, 848, 849, 213, 1765, 1464, -2,
	1466, 0, -2, 0, 667, 0, 671, 1660, 1586, 1583,
	0, 1657, 1658, 1587, 0, 0, 0, 1594, 0, 1633,
	1634, 0, 0, 0, 1573, 1574, 0, 0, 0, 0,
	2173, 2174, 2175, 2176, 2189, 2177, 2178, 2188, 2186, 2187,
	2179, 2180, 2185, 2199, 2200, 2190, 2191, 2181, 2194, 2192,
	2193, 2195, 2196, 2197, 2198, 0, 0, 2204, 0, 2182,
	2183, 2184, 2212, 0, 0, 2213, 0, 2215, 0, 2205,
	2201, 2202, 2203, 0, 1975, 1977, 2279, 0, 0, 0,
	2211, 2206, 2207, 1913, 1914, 1915, 1916, 1917, 1950, 1954,
	1955, 0, 0, 2030, 2276, 2275, 2032, 0, 0, 2227,
	0, 2045, -2, 0, 2168, 2222, 0, 0, 2054, 2055,
	2056, 0, 0, 2227, 0, 0, 2270, 2066, 2067, 1905,
	0, 0, 2136, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1854, 1853, 0, 1855, 0, 1856, 1857, 1864, 1877,
	0, 0, 0, 0, 1881, 0, 0, 0, 0, 0,
	0, 0, 2251, -2, 0, 0, 0, 0, 1869, 0,
	1620, 0, 0, 1691, 2280, 2284, 2285, 1691, 1691, 0,
	0, 2228, 1758, 1758, 0, 0, 1753, 1753, 1753, 1751,
	1734, 0, 1734, 1744, 0, 1734, 1734, 0, -2, 1715,
	0, 0, 1744, 0, 1728, 598, 600, 602, 604, 605,
	606, 608, 1762, 1763, 0, 0, 0, 0, 2362, 0,
	0, 0, 0, 2334, 0, 0, 2347, 0, 0, 2321,
	378, 379, 0, 0, 0, 2732, 2676, 0, -2, 634,
	657, 1630, 0, 2230, 1788, 1792, 0, 1794, 1795, 1796,
	1797, 1798, 0, 0, 1789, -2, 1865, 1867, 1888, 2379,
	2380, 2381, 1848, 1849, 1850, 1851, 1852, 1860, 1847, 1847,
	1847, 1858, 1887, 1879, 1887, 1883, 1833, 1834, 1835, 1870,
	1871, 1872, 1873, 0, 2732, 2676, 0, -2, 0, 644,
	0, 0, 1568, 425, 0, 432, 433, 434, 0, 521,
	0, 211, 212, 0, 213, 2779, 526, 0, 529, 0,
	213, 2779, 2286, 535, 0, 538, 0, 0, 544, 0,
	0, 0, 0, 0, 213, 1570, 0, 0, 0, 0,
	-2, 717, 725, 726, 727, 0, 1487, 0, 1494, 746,
	747, 748, 1496, 1497, 0, 1499, 720, 749, 750, 751,
	752, 753, 754, 0, 2300, 2301, 2302, 2303, 2306, 2307,
	0, 0, 718, 739, 721, 0, 733, 119, 1437, 0,
	0, 166, 0, 1437, 1437, 0, 0, 0, 0, 194,
	0, 0, 1148, 0, 0, 0, 0, 137, 151, 162,
	131, 132, 133, 0, 0, 0, 0, 0, 0, 85,
	1260, 0, 1263, 0, 0, 0, 0, 0, 0, 0,
	1276, 0, 0, 0, 0, 0, 99, 100, 0, 0,
	105, 106, 0, 150, 0, 0, 0, 0, 0, 1532,
	0, 141, 137, 0, 0, 136, 138, 121, 0, 0,
	137, 152, 164, 0, 200, 202, 1145, 0, 0, 0,
	0, 0, 0, 0, 0, 224, 235, 0, 612, 614,
	0, 0, 0, 0, 1285, 0, 0, 0, 1627, 0,
	0, 0, 0, 2779, 1435, 0, 1420, 0, 1747, 2532,
	-2, -2, 284, 1747, 1034, 0, 0, 2362, 2296, 0,
	0, 0, 0, 0, 0, 370, 0, 0, 0, 0,
	400, 403, 405, 406, 407, 0, 1339, 0, 413, 454,
	1207, 2779, 0, 0, 481, 476, 0, 478, 0, 0,
	0, 1259, 2779, 1257, 2331, 0, 1282, 0, 1238, 2779,
	2329, 0, 0, 0, 1348, 2371, 1357, 1361, 1520, 0,
	493, 0, 1538, 1540, 0, 0, 1768, 0, 1770, 1710,
	1630, 0, 0, 0, 0, 310, 0, 0, 0, 0,
	0, 0, 1073, 290, 0, 1746, 0, 0, 320, 1747,
	284, 2651, 1058, 332, 332, 1747, 690, 1747, 692, 0,
	0, 857, 858, 0, 332, 332, 332, 864, 865, 867,
	868, -2, -2, -2, -2, 870, 871, 962, 0, 0,
	0, 961, 881, 0, 883, 886, 890, 0, 1028, 2660,
	2676, 2732, 1041, 962, 2447, 962, 2447, 962, 2447, 962,
	962, 906, 950, 958, 917, 924, 0, 919, 923, 926,
	929, 0, 931, 939, 0, -2, 0, 942, 0, 944,
	0, 946, 962, 963, 966, 973, 976, 981, 982, 983,
	984, 2342, 985, 986, 987, -2, 991, 992, 0, 1003,
	1008, 1009, 1005, 0, 0, 0, 0, 0, 0, 1019,
	1020, 0, 0, 1027, 0, 850, 1277, 0, 1477, 1660,
	1586, 670, 1577, 1659, 1578, 1585, 1588, 0, 0, 1590,
	0, 1592, 0, 1655, 1656, 1663, 1664, 0, 1674, 1675,
	1667, 0, -2, 0, 0, 1670, 1671, 1596, 0, 1613,
	1614, 1615, 1644, 1647, 1376, 0, 2912, 1909, 1783, 1910,
	1911, 2315, 0, 1918, 1919, 1920, 1921, 1922, 1923, 1924,
	1925, 1926, 1927, -2, -2, -2, -2, -2, -2, -2,
	-2, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944,
	1945, 1946, -2, -2, -2, 1951, 1952, 1953, -2, 2214,
	2216, 0, 2279, 0, -2, 0, -2, -2, -2, -2,
	1972, 0, 1974, 1979, 1981, 1983, 0, 0, 0, 0,
	2278, 1993, 2262, 2263, 0, 0, 2170, 2171, 2172, 1978,
	0, 1997, 2277, 2274, 0, 0, 2208, 0, 2173, 2174,
	2175, 2176, 2177, 2178, 2179, 2180, 2181, 2182, 2183, 2184,
	2185, 2186, 2187, 2188, 2189, 2190, 2191, 2192, 2193, 2194,
	2195, 2196, 2197, 2198, 2199, 2200, 2201, 2202, 2203, 2204,
	2205, 0, 2226, 1643, 2058, 0, 0, 0, 0, 2065,
	2050, 2224, 0, 2223, 0, 0, 0, 2234, 0, 2269,
	2265, 0, 2313, 1904, 1891, 1892, 1893, 1894, 1895, 1896,
	1906, 0, 2310, 2348, 2354, 2144, 0, 0, 0, 2095,
	2096, 2097, 2098, 2099, 0, 2101, 2102, 0, 2104, 2105,
	0, 2107, 2108, 0, 2110, 2111, 2112, 2113, 2114, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1801, 1802, 1803, 1804,
	1805, 1806, 1807, 1808, 1809, 1810, 1811, 1812, 1813, 1814,
	1815, 1816, 1817, 1818, 1819, 1820, 1821, 1822, 1823, 1824,
	1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 0, 0,
	2116, 0, 2237, -2, -2, -2, -2, -2, -2, -2,
	-2, 0, 2118, 0, 2120, 2228, 2248, 0, 0, 1998,
	0, 0, 0, 0, 2168, 0, 2123, 2228, 2256, 0,
	0, 0, 0, 0, 2228, 0, 2261, 0, 2130, 0,
	2132, 1622, 0, 0, 1778, 0, 0, 0, 2283, 1778,
	1778, 0, 1686, 0, 0, 1754, 1755, 1756, 1757, 0,
	0, 1758, 0, 1748, 1752, 1749, 1750, 1744, 1707, 0,
	0, 2317, 1744, 1713, 1743, 0, 1238, 1733, 1744, 1744,
	0, -2, 1717, 1734, 0, 0, 599, 601, 603, 607,
	609, 0, 0, 1643, -2, 0, -2, 334, 1237, 0,
	0, 0, 0, 0, 0, 624, 626, 0, 0, 541,
	0, 0, 640, 0, 618, 0, 621, 0, 1779, 1782,
	0, 0, 1793, 1799, 1800, 0, -2, 0, 0, 1889,
	0, 0, 0, 0, 0, 652, 0, 655, 0, 0,
	0, 436, 551, 213, 523, 0, 213, 213, 532, 0,
	0, 213, 543, 213, 2338, 213, 2336, 234, 548, 1569,
	246, 0, 706, 0, 1486, 1495, 0, 743, 0, 745,
	0, 2304, 2308, 2305, 2309, 0, 734, 0, 0, 0,
	0, 1436, 0, 0, 1383, 0, 0, 170, 2779, 0,
	215, 0, 0, 1200, 2323, 0, 1190, 0, 0, 2469,
	0, 0, 0, 0, 0, 187, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 128, 0, 134, 135,
	0, 0, 0, 0, 0, 0, 0, 0, 1261, 1262,
	1264, 1271, 1273, 0, 1267, 2311, 0, 0, 1268, 0,
	1270, 1272, 1274, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 107, 1294, 0, 0, 1295, 1296, 1508, 1509,
	0, 1531, 1532, 0, 0, 0, 0, 0, 0, 0,
	130, 0, 0, 0, 0, 2290, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 615, 616, 617,
	0, 0, 1287, 0, 1335, 1333, 1309, 1310, 1311, 1312,
	1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322,
	1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332,
	0, 0, 0, 0, -2, 1289, 1290, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 256, 0, 323, 2289,
	2299, 0, 1067, 1068, 359, 362, 365, 368, 252, 0,
	0, 398, 409, 0, 0, 1120, 1092, 0, 0, 463,
	332, 0, 0, 477, 481, 2340, 1077, 1255, 1258, 0,
	1238, 2779, 1305, 0, 0, 0, 0, 0, 0, 1346,
	0, 0, 2779, 2318, 2370, 2371, 1522, 1532, 0, 1778,
	0, 1555, 1541, 0, 0, 0, 1555, 1559, 1560, 1562,
	1563, 0, 0, 1769, 1775, 559, 611, 1630, 1630, 332,
	330, 2601, 328, 325, 327, 0, 0, 1544, 1546, 0,
	0, 0, 278, 0, 287, 1747, 285, 0, 290, 0,
	0, 0, 475, 689, 694, 852, 0, 332, 860, 861,
	862, 908, 952, 960, 1007, 872, 874, 875, 876, 0,
	0, 0, 1042, 1038, 1039, 1040, 892, 962, 895, 962,
	898, 962, 901, 903, 921, 927, 940, 933, 941, 0,
	0, 0, 954, 971, 0, 990, 0, 0, 0, 0,
	0, 0, 0, 1013, 1014, 1015, 1017, 1022, 1021, 1026,
	851, 1766, 1581, 1582, 1584, 0, 1593, 0, 0, 1669,
	-2, -2, 1668, 1672, 1673, -2, -2, -2, -2, 1589,
	0, 1598, 1595, 0, 1654, 1374, 1375, 0, 0, 0,
	0, -2, -2, 0, 0, 0, 1994, 0, -2, 1973,
	1976, 1980, 1982, 1984, 0, 0, 0, 0, 0, 0,
	2217, 0, 2219, 1995, 2272, 2275, 2210, 0, 2166, 0,
	0, 1642, 1643, 1643, 0, 2064, 0, 2225, 0, 2232,
	2233, 0, 2057, 0, 2266, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2068, 0, 0, 0, 0, 2100,
	2103, 2106, 2109, 0, 0, 0, 0, 2089, 0, 0,
	0, 2093, 1859, 1845, 0, 1887, 1885, 1886, 1880, 1887,
	1884, 1837, 0, 1836, 0, 2115, 0, 2117, 2119, 0,
	0, 2121, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2001, 2002, 2003, 2023,
	2122, 2254, 2255, 0, 0, 0, 0, 0, 0, 2128,
	0, 2260, 2129, 2131, 1630, 0, 1623, 0, 1688, 1677,
	1777, 0, 2281, 1747, 1690, 1692, 2282, 2320, 1677, 1677,
	0, 2229, 0, 0, 1738, 0, 0, 0, 1740, 1711,
	0, 0, 1705, 0, 1696, 1697, 1698, 1699, 1700, 1701,
	1702, 1712, 1238, 1742, 1714, 1718, 2348, 0, 1744, 0,
	1729, 0, 1731, 1764, 0, 1723, 1726, 0, 0, 2363,
	1778, 0, 372, 380, 381, 373, 374, 375, 376, 0,
	1423, 0, 0, 0, 0, 0, 2231, 0, 1784, 0,
	1790, 0, 0, 0, 0, 642, 0, 0, 0, 0,
	0, 1567, 431, 522, 213, 527, 530, 2287, 213, 536,
	539, 545, 242, 0, 702, -2, 741, 742, 744, 0,
	740, 167, 1437, 0, 0, 0, 1379, 0, 1103, 0,
	1098, 1099, 1381, 1385, 1391, 1394, 0, 172, 2779, 184,
	0, 2779, 0, 1164, 0, 0, 0, 0, 0, 0,
	1439, 0, 0, 2779, 213, 2779, 213, 188, 190, 193,
	0, 199, 195, 0, 1100, 0, 1152, 0, 0, 1155,
	120, 1437, 0, 0, 123, 127, 139, 0, 0, 0,
	149, 0, 0, 0, 1396, 1400, 1408, 0, 0, 0,
	1265, 1266, 1269, 1275, 86, 0, 0, 0, 1404, 1406,
	1412, 98, 101, 2779, 2332, 103, 2779, 0, 1378, 0,
	0, 0, 0, 0, 0, 0, 0, 201, 125, 129,
	140, 0, 1414, 122, 0, 228, 0, 0, 218, 213,
	2779, 0, 220, 0, 221, 222, 236, 0, 0, 0,
	1080, 1081, 1334, 0, 1280, 1281, 0, 1292, 1286, 0,
	0, 0, 0, 0, 1416, 1417, 0, 0, 0, 1435,
	1432, 1747, 248, 0, 1747, 256, 0, 2295, 0, 270,
	395, 0, 0, 0, 0, 1119, 1218, 1121, 1123, 1124,
	1125, 215, 0, 2371, 1190, 2521, 2371, 0, 0, 1087,
	0, 0, 0, 469, 465, 0, 474, 480, 479, 485,
	-2, 0, 0, 0, 0, -2, 0, 0, 1350, 1344,
	1345, 0, 0, 0, 0, 2779, 1524, 1532, 0, 1628,
	1643, 492, 1533, 1555, 0, 0, 0, 1543, 1539, 1536,
	1778, 0, 0, 0, 0, 0, 1771, 1774, 562, 563,
	309, 0, 0, 0, 0, 0, 332, 0, 0, 0,
	0, 0, 0, 288, 0, 291, 0, 0, 0, 296,
	297, 298, 299, 300, 301, 0, 0, 0, 290, 321,
	280, 1747, 0, 0, 691, 0, 0, 859, 0, 882,
	885, 894, 896, 899, 943, 945, 962, 972, 997, 2319,
	998, 1142, 0, 1142, 0, 0, 1018, 1591, 0, 1666,
	1597, 1648, 1649, 0, 1376, 0, 1912, 1957, 0, 0,
	-2, 0, 0, 1961, 0, 0, 0, -2, 0, 0,
	0, 2218, 2220, 0, 2274, 2209, 2059, 0, 0, 0,
	2063, 2047, 2048, 0, 2169, 2235, 2264, 2268, 0, 1897,
	1898, 1899, 1900, 1901, 1902, 1903, 0, 2314, 2349, 2353,
	2142, 2143, 2147, 2328, 0, 0, 0, 2072, 0, 0,
	0, 0, 0, 0, 0, 0, 1878, 1882, 0, 0,
	2236, 2247, 2249, 1999, 2000, 2004, 2005, 2006, 2007, 2008,
	2009, 2010, 2011, 2012, 2013, -2, -2, -2, 2017, 2018,
	2019, -2, -2, -2, 2024, 0, 0, 0, 2250, 2252,
	2253, 2257, 2258, 0, 2125, 2126, 2127, 2259, 0, 1630,
	1624, 1685, 0, 1776, 1689, 0, 1685, 1685, 1637, 1736,
	0, 0, 1760, 0, 1708, 0, 1709, 0, 0, 1741,
	0, 1716, 1719, 1720, 1730, 0, 1722, 0, 1725, 0,
	2059, -2, 333, 335, 337, 0, 340, 341, 0, 0,
	0, 633, 0, 1423, 1423, 0, 635, 619, 0, 0,
	1786, 0, 0, 1862, 1866, 1890, 646, 648, 0, 0,
	2732, 2676, 0, 645, 524, 533, 244, 0, 1745, 0,
	0, 196, 0, 0, 0, 0, 0, 0, 214, 0,
	1199, 0, 1162, 0, 0, 1189, 0, 0, 1205, 174,
	175, 176, 0, 0, 0, 0, 186, 0, 0, 182,
	0, 192, 198, 197, 0, 1149, 0, 0, 0, 0,
	1384, 0, 0, 0, 146, 147, 148, 0, 153, 0,
	154, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1514, 1515, 0, 1505, 143, 0, 0, 0, 0,
	0, 0, 216, 0, 0, 0, 1373, 238, 0, 0,
	0, 0, 0, 1279, 1337, 1338, 1288, 1397, 1401, 1409,
	0, 0, 0, 0, 0, 660, 1434, 0, 256, 254,
	0, 257, 0, 260, 261, 0, 0, 256, 250, 0,
	0, 0, 1238, 410, 1090, 1206, 0, 0, 1208, 1126,
	1130, 0, 2371, 2371, 0, 2325, 0, 1088, 0, 0,
	1207, 461, 0, 468, 0, 482, 0, 0, 1259, 0,
	0, 1283, 1308, 1238, 0, 1349, 1351, 0, 1359, 0,
	0, 0, 1526, 1532, 0, 1519, 1520, 1662, 1534, 1553,
	-2, 0, 0, 1643, 1561, 1558, 1564, 1565, 0, 329,
	0, 324, 326, 0, 312, 0, 1545, 1547, 0, 1061,
	1064, 0, 0, 0, 0, 0, 0, 0, 0, 279,
	290, 1747, 316, 0, 853, 877, 953, 999, 1141, 0,
	0, 1001, 0, 0, 1665, 1652, 1653, 1650, 1376, 1959,
	1963, 0, 0, 0, 1965, -2, 0, 1987, -2, -2,
	2221, 2273, 2038, 1643, 2060, 2062, 2049, 2267, 1907, 0,
	2149, 2146, 0, 2133, 0, 2084, 2085, 0, 0, 2088,
	2090, 2091, 2092, 1846, 1839, 1838, 2246, 0, 0, 0,
	0, 2124, 1625, 0, 2138, 0, 0, 1693, 2138, 2138,
	1737, 0, 1739, 1706, 1694, 0, 1703, 0, 2349, 1732,
	1724, 0, 0, 338, 0, 342, 343, 377, 0, 636,
	637, 0, 0, 1780, 1785, 0, 1791, 1861, 0, 0,
	0, 0, 0, 245, 168, 169, 1104, 1102, 1388, 1392,
	1389, 0, 171, 0, 0, 1163, 0, 1166, 0, 0,
	0, 0, 1173, 1190, 0, 0, 0, 0, 0, 0,
	1192, 0, 1191, 0, 0, 1222, 0, 1364, 1371, 0,
	-2, 0, 0, 0, 178, 204, 0, 0, 0, 0,
	207, 1438, 180, 0, 0, 213, 213, 1101, 0, 0,
	1380, 1382, 1395, 0, 0, 0, 0, 156, 0, 0,
	1398, 1402, 1410, 1405, 1407, 1413, 0, 104, 0, 1516,
	0, 142, 0, 0, 0, 1415, 226, 227, 0, 213,
	0, 213, 219, 213, 1373, 0, 0, 0, 0, 0,
	0, 0, 1418, 1419, 247, 0, 0, 0, 0, 0,
	249, 322, 256, 397, 0, 1151, 0, 1218, 1210, 1211,
	1212, 0, 1122, 1217, 1219, 0, 0, 1127, 0, 0,
	0, 0, 1107, 1089, 0, 1120, 1092, 0, 466, 483,
	0, 486, 0, 489, 1078, 1256, 1300, 1238, 1303, 0,
	0, 1341, 0, 0, 0, 0, 0, 0, 0, 1528,
	1532, 0, 1521, 1522, 1555, 1661, 0, 0, 0, 1542,
	1662, 0, 331, 332, 0, 332, 292, 0, 293, 294,
	295, 302, 303, 304, 281, 282, 693, 695, 0, 0,
	701, 1140, 0, 0, 0, 0, 1651, 1967, -2, -2,
	1988, 0, 2350, 2352, 1643, 0, 2135, 1645, 0, 0,
	-2, 0, 0, 0, 1626, 1609, 0, 1684, 1676, 1678,
	1680, 2663, 2442, 2778, 1610, 1611, 1759, 0, 0, 1727,
	339, 1422, 638, 0, 0, 1787, 0, 643, 0, 0,
	0, 0, 0, 1390, 173, 0, 0, 1167, 1168, 2324,
	1170, 0, 1172, 1174, 1175, 1092, 0, 1179, 0, 2373,
	0, 1184, 1187, 1188, 0, 0, 1201, 1223, 0, 1232,
	0, 1366, 1376, 1370, 0, 1368, 1234, 0, 177, 206,
	179, 208, 203, 0, 1373, 0, 181, 191, 0, 0,
	124, 0, 0, 2436, 159, 157, 155, 102, 1377, 145,
	0, 126, 0, 228, 237, 1372, 239, 223, 213, 0,
	1399, 1403, 1411, 0, 1426, 1427, 1428, 1429, 0, 0,
	0, 0, 258, 0, 259, 262, 263, 0, 0, 1092,
	1150, 1091, 1209, 0, 1220, 1092, 0, 0, 0, 0,
	0, 0, 1094, 0, 1093, 0, 0, 467, 470, 0,
	473, 0, 0, 0, 0, 0, 1307, 0, 1352, 1350,
	0, 1358, 0, 0, 0, 1504, 0, 0, 1523, 1524,
	490, 1548, 0, 0, 1555, 1566, 311, 0, 314, 289,
	0, 697, 0, 699, 0, 1000, 1002, 0, 0, 2061,
	2153, 0, 0, 2086, 2087, -2, 0, 2027, 2137, 2139,
	0, 0, 0, 0, 0, 1695, 1704, 1423, 1781, 650,
	647, 649, 0, 1386, 0, 1393, 215, 1165, 1169, 0,
	1176, 0, 0, 0, 1180, 1242, 0, 0, 1259, 1259,
	1193, 0, 0, 1226, 1227, 1147, 0, 1228, 1229, 1230,
	1365, 1654, 1371, 1092, 0, 0, 205, 210, 0, 0,
	0, 0, 0, 0, 144, 0, 217, 240, 1373, 0,
	1430, 1431, 0, 0, 255, 274, 0, 1301, 1094, 0,
	1221, 1128, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138,
	1139, 1129, 1234, 0, 0, 1198, 1105, 0, 1108, 0,
	1090, 0, 471, 472, 487, 0, 488, 0, 0, 1308,
	0, 0, 1359, 0, 0, 1511, 1503, 1532, 1525, 1526,
	1778, 0, 1556, 0, 696, 0, 0, 1010, 1011, 0,
	0, 0, 0, 2148, 1646, 2028, 0, 0, 1679, 1681,
	1682, 1683, 639, 0, 1387, 185, 0, 1236, 1178, 1247,
	0, 0, 0, 0, 0, 1194, 1224, 1225, 1222, 1146,
	0, 1369, 1367, 1203, 1236, 1238, 183, 0, 1234, 0,
	1156, 0, 0, 1159, 0, 0, 160, 2436, 158, 0,
	213, 1423, 213, 0, 277, 0, 268, 266, 267, 1086,
	0, 1214, 1216, 1232, 1234, 1147, 0, 1109, 1151, 1107,
	484, 1302, 1306, 1304, 1342, 1234, 0, 1232, 0, 1518,
	1532, 1512, 1513, 0, 1528, 0, 0, 332, 698, 700,
	2145, 2165, 2154, -2, 2735, 2443, 0, 2165, 2165, 2140,
	2141, 0, 0, 1092, 0, 1181, 1243, 1244, 0, 1239,
	1240, 1241, 2372, 1182, 1183, 1185, 1186, 1778, 0, 1233,
	1242, 209, 1092, 1153, 0, 0, 1154, 0, 0, 163,
	0, 165, 241, 1421, 1424, 0, 264, 0, 0, 1083,
	1085, 1092, 0, 1147, 1232, 1092, 0, 0, 0, 1092,
	1094, 1232, 0, 1147, 0, 1507, 1517, 0, 1527, 1504,
	0, 1551, 0, 313, 2150, 0, 0, 2156, 2157, 2158,
	2159, 2160, 2151, 2152, 651, 1171, 1177, 0, 1245, 0,
	1246, 0, 0, 0, 1202, 1231, 1247, 189, 1157, 0,
	1160, 0, 161, 0, 0, 272, 273, 1213, 1215, 1092,
	1147, 1778, 1095, 0, 1097, 1094, 1106, 1147, 0, 1092,
	0, 1530, 1506, 1510, 2333, 1511, 1549, 0, 0, 0,
	2162, 2163, 0, 0, 0, 1248, 0, 1251, 1252, 0,
	1249, 1222, 0, 0, 213, 0, 1778, 1092, 1197, 1096,
	1086, 1092, 1234, 1778, 1232, 1500, 1532, 1518, 0, 1778,
	2161, 2164, 2155, 1235, 1250, 1253, 1254, 1204, 0, 0,
	1425, 275, 0, 1195, 1778, 1084, 1778, 1232, 1355, 1147,
	0, 1507, 1778, 1552, 1144, 0, 0, 1196, 1353, 1147,
	1092, 1529, 1501, 1550, 1158, 1143, 0, 276, 1092, 1778,
	0, 1778, 1356, 0, 1354, 1144, 1161,
}

var sqlTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 595, 3, 601, 596, 3,
	607, 608, 599, 597, 612, 598, 609, 600, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 615, 3,
	587, 589, 588, 592, 611, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 605, 3, 606, 602, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 613, 594, 614, 590,
}

var sqlTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 243, 244, 245, 246, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257,
}

var sqlTok3 = [...]int{
	57600, 258, 57601, 259, 57602, 260, 57603, 261, 57604, 262,
	57605, 263, 57606, 264, 57607, 265, 57608, 266, 57609, 267,
	57610, 268, 57611, 269, 57612, 270, 57613, 271, 57614, 272,
	57615, 273, 57616, 274, 57617, 275, 57618, 276, 57619, 277,
	57620, 278, 57621, 279, 57622, 280, 57623, 281, 57624, 282,
	57625, 283, 57626, 284, 57627, 285, 57628, 286, 57629, 287,
	57630, 288, 57631, 289, 57632, 290, 57633, 291, 57634, 292,
	57635, 293, 57636, 294, 57637, 295, 57638, 296, 57639, 297,
	57640, 298, 57641, 299, 57642, 300, 57643, 301, 57644, 302,
	57645, 303, 57646, 304, 57647, 305, 57648, 306, 57649, 307,
	57650, 308, 57651, 309, 57652, 310, 57653, 311, 57654, 312,
	57655, 313, 57656, 314, 57657, 315, 57658, 316, 57659, 317,
	57660, 318, 57661, 319, 57662, 320, 57663, 321, 57664, 322,
	57665, 323, 57666, 324, 57667, 325, 57668, 326, 57669, 327,
	57670, 328, 57671, 329, 57672, 330, 57673, 331, 57674, 332,
	57675, 333, 57676, 334, 57677, 335, 57678, 336, 57679, 337,
	57680, 338, 57681, 339, 57682, 340, 57683, 341, 57684, 342,
	57685, 343, 57686, 344, 57687, 345, 57688, 346, 57689, 347,
	57690, 348, 57691, 349, 57692, 350, 57693, 351, 57694, 352,
	57695, 353, 57696, 354, 57697, 355, 57698, 356, 57699, 357,
	57700, 358, 57701, 359, 57702, 360, 57703, 361, 57704, 362,
	57705, 363, 57706, 364, 57707, 365, 57708, 366, 57709, 367,
	57710, 368, 57711, 369, 57712, 370, 57713, 371, 57714, 372,
	57715, 373, 57716, 374, 57717, 375, 57718, 376, 57719, 377,
	57720, 378, 57721, 379, 57722, 380, 57723, 381, 57724, 382,
	57725, 383, 57726, 384, 57727, 385, 57728, 386, 57729, 387,
	57730, 388, 57731, 389, 57732, 390, 57733, 391, 57734, 392,
	57735, 393, 57736, 394, 57737, 395, 57738, 396, 57739, 397,
	57740, 398, 57741, 399, 57742, 400, 57743, 401, 57744, 402,
	57745, 403, 57746, 404, 57747, 405, 57748, 406, 57749, 407,
	57750, 408, 57751, 409, 57752, 410, 57753, 411, 57754, 412,
	57755, 413, 57756, 414, 57757, 415, 57758, 416, 57759, 417,
	57760, 418, 57761, 419, 57762, 420, 57763, 421, 57764, 422,
	57765, 423, 57766, 424, 57767, 425, 57768, 426, 57769, 427,
	57770, 428, 57771, 429, 57772, 430, 57773, 431, 57774, 432,
	57775, 433, 57776, 434, 57777, 435, 57778, 436, 57779, 437,
	57780, 438, 57781, 439, 57782, 440, 57783, 441, 57784, 442,
	57785, 443, 57786, 444, 57787, 445, 57788, 446, 57789, 447,
	57790, 448, 57791, 449, 57792, 450, 57793, 451, 57794, 452,
	57795, 453, 57796, 454, 57797, 455, 57798, 456, 57799, 457,
	57800, 458, 57801, 459, 57802, 460, 57803, 461, 57804, 462,
	57805, 463, 57806, 464, 57807, 465, 57808, 466, 57809, 467,
	57810, 468, 57811, 469, 57812, 470, 57813, 471, 57814, 472,
	57815, 473, 57816, 474, 57817, 475, 57818, 476, 57819, 477,
	57820, 478, 57821, 479, 57822, 480, 57823, 481, 57824, 482,
	57825, 483, 57826, 484, 57827, 485, 57828, 486, 57829, 487,
	57830, 488, 57831, 489, 57832, 490, 57833, 491, 57834, 492,
	57835, 493, 57836, 494, 57837, 495, 57838, 496, 57839, 497,
	57840, 498, 57841, 499, 57842, 500, 57843, 501, 57844, 502,
	57845, 503, 57846, 504, 57847, 505, 57848, 506, 57849, 507,
	57850, 508, 57851, 509, 57852, 510, 57853, 511, 57854, 512,
	57855, 513, 57856, 514, 57857, 515, 57858, 516, 57859, 517,
	57860, 518, 57861, 519, 57862, 520, 57863, 521, 57864, 522,
	57865, 523, 57866, 524, 57867, 525, 57868, 526, 57869, 527,
	57870, 528, 57871, 529, 57872, 530, 57873, 531, 57874, 532,
	57875, 533, 57876, 534, 57877, 535, 57878, 536, 57879, 537,
	57880, 538, 57881, 539, 57882, 540, 57883, 541, 57884, 542,
	57885, 543, 57886, 544, 57887, 545, 57888, 546, 57889, 547,
	57890, 548, 57891, 549, 57892, 550, 57893, 551, 57894, 552,
	57895, 553, 57896, 554, 57897, 555, 57898, 556, 57899, 557,
	57900, 558, 57901, 559, 57902, 560, 57903, 561, 57904, 562,
	57905, 563, 57906, 564, 57907, 565, 57908, 566, 57909, 567,
	57910, 568, 57911, 569, 57912, 570, 57913, 571, 57914, 572,
	57915, 573, 57916, 574, 57917, 575, 57918, 576, 57919, 577,
	57920, 578, 57921, 579, 57922, 580, 57923, 581, 57924, 582,
	57925, 583, 57926, 584, 57927, 585, 57928, 586, 57929, 591,
	57930, 593, 57931, 603, 57932, 604, 57933, 610, 0,
}

var sqlErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	sqlDebug        = 0
	sqlErrorVerbose = false
)

type sqlLexer interface {
	Lex(lval *sqlSymType) int
	Error(s string)
}

type sqlParser interface {
	Parse(sqlLexer) int
	Lookahead() int
}

type sqlParserImpl struct {
	lval  sqlSymType
	stack [sqlInitialStackSize]sqlSymType
	char  int
}

func (p *sqlParserImpl) Lookahead() int {
	return p.char
}

func sqlNewParser() sqlParser {
	return &sqlParserImpl{}
}

const sqlFlag = -1000

func sqlTokname(c int) string {
	if c >= 1 && c-1 < len(sqlToknames) {
		if sqlToknames[c-1] != "" {
			return sqlToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func sqlStatname(s int) string {
	if s >= 0 && s < len(sqlStatenames) {
		if sqlStatenames[s] != "" {
			return sqlStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func sqlErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !sqlErrorVerbose {
		return "syntax error"
	}

	for _, e := range sqlErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + sqlTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := sqlPact[state]
	for tok := TOKSTART; tok-1 < len(sqlToknames); tok++ {
		if n := base + tok; n >= 0 && n < sqlLast && sqlChk[sqlAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if sqlDef[state] == -2 {
		i := 0
		for sqlExca[i] != -1 || sqlExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; sqlExca[i] >= 0; i += 2 {
			tok := sqlExca[i]
			if tok < TOKSTART || sqlExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if sqlExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += sqlTokname(tok)
	}
	return res
}

func sqllex1(lex sqlLexer, lval *sqlSymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = sqlTok1[0]
		goto out
	}
	if char < len(sqlTok1) {
		token = sqlTok1[char]
		goto out
	}
	if char >= sqlPrivate {
		if char < sqlPrivate+len(sqlTok2) {
			token = sqlTok2[char-sqlPrivate]
			goto out
		}
	}
	for i := 0; i < len(sqlTok3); i += 2 {
		token = sqlTok3[i+0]
		if token == char {
			token = sqlTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = sqlTok2[1] /* unknown char */
	}
	if sqlDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", sqlTokname(token), uint(char))
	}
	return char, token
}

func sqlParse(sqllex sqlLexer) int {
	return sqlNewParser().Parse(sqllex)
}

func (sqlrcvr *sqlParserImpl) Parse(sqllex sqlLexer) int {
	var sqln int
	var sqlVAL sqlSymType
	var sqlDollar []sqlSymType
	_ = sqlDollar // silence set and not used
	sqlS := sqlrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	sqlstate := 0
	sqlrcvr.char = -1
	sqltoken := -1 // sqlrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		sqlstate = -1
		sqlrcvr.char = -1
		sqltoken = -1
	}()
	sqlp := -1
	goto sqlstack

ret0:
	return 0

ret1:
	return 1

sqlstack:
	/* put a state and value onto the stack */
	if sqlDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", sqlTokname(sqltoken), sqlStatname(sqlstate))
	}

	sqlp++
	if sqlp >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlS[sqlp] = sqlVAL
	sqlS[sqlp].yys = sqlstate

sqlnewstate:
	sqln = sqlPact[sqlstate]
	if sqln <= sqlFlag {
		goto sqldefault /* simple state */
	}
	if sqlrcvr.char < 0 {
		sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
	}
	sqln += sqltoken
	if sqln < 0 || sqln >= sqlLast {
		goto sqldefault
	}
	sqln = sqlAct[sqln]
	if sqlChk[sqln] == sqltoken { /* valid shift */
		sqlrcvr.char = -1
		sqltoken = -1
		sqlVAL = sqlrcvr.lval
		sqlstate = sqln
		if Errflag > 0 {
			Errflag--
		}
		goto sqlstack
	}

sqldefault:
	/* default state action */
	sqln = sqlDef[sqlstate]
	if sqln == -2 {
		if sqlrcvr.char < 0 {
			sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if sqlExca[xi+0] == -1 && sqlExca[xi+1] == sqlstate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			sqln = sqlExca[xi+0]
			if sqln < 0 || sqln == sqltoken {
				break
			}
		}
		sqln = sqlExca[xi+1]
		if sqln < 0 {
			goto ret0
		}
	}
	if sqln == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			sqllex.Error(sqlErrorMessage(sqlstate, sqltoken))
			Nerrs++
			if sqlDebug >= 1 {
				__yyfmt__.Printf("%s", sqlStatname(sqlstate))
				__yyfmt__.Printf(" saw %s\n", sqlTokname(sqltoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for sqlp >= 0 {
				sqln = sqlPact[sqlS[sqlp].yys] + sqlErrCode
				if sqln >= 0 && sqln < sqlLast {
					sqlstate = sqlAct[sqln] /* simulate a shift of "error" */
					if sqlChk[sqlstate] == sqlErrCode {
						goto sqlstack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if sqlDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", sqlS[sqlp].yys)
				}
				sqlp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if sqlDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", sqlTokname(sqltoken))
			}
			if sqltoken == sqlEofCode {
				goto ret1
			}
			sqlrcvr.char = -1
			sqltoken = -1
			goto sqlnewstate /* try again in the same state */
		}
	}

	/* reduction by production sqln */
	if sqlDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", sqln, sqlStatname(sqlstate))
	}

	sqlnt := sqln
	sqlpt := sqlp
	_ = sqlpt // guard against "declared and not used"

	sqlp -= sqlR2[sqln]
	// sqlp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if sqlp+1 >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlVAL = sqlS[sqlp+1]

	/* consult goto table to find next state */
	sqln = sqlR1[sqln]
	sqlg := sqlPgo[sqln]
	sqlj := sqlg + sqlS[sqlp].yys + 1

	if sqlj >= sqlLast {
		sqlstate = sqlAct[sqlg]
	} else {
		sqlstate = sqlAct[sqlj]
		if sqlChk[sqlstate] != -sqln {
			sqlstate = sqlAct[sqlg]
		}
	}
	// dummy call; replaced with literal code
	switch sqlnt {

	case 1:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1506
		{
			sqllex.(*lexer).SetStmt(sqlDollar[1].union.stmt())
		}
	case 2:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1511
		{
			return helpWith(sqllex, "")
		}
	case 5:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1513
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 9:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1516
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 11:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1517
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 13:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1518
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 15:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1519
		{
			return helpWith(sqllex, "GRANT")
		}
	case 17:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1520
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 19:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1521
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 21:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1522
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 23:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1523
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 25:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1524
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 27:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1525
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 29:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1526
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 35:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1533
		{
			sqlVAL.union.val = tree.Statement(nil)
		}
	case 38:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1542
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 40:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1544
		{
			return helpWith(sqllex, "ALTER")
		}
	case 42:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1547
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 44:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1548
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 46:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1549
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 48:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1550
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 50:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1551
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 52:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1552
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 54:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1553
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 56:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1554
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 58:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1555
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 60:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1556
		{
			return helpWith(sqllex, "ALTER DEFAULT PRIVILEGES")
		}
	case 62:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1557
		{
			return helpWith(sqllex, "ALTER CHANGEFEED")
		}
	case 73:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1618
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 75:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1644
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 79:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1658
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 84:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1677
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 85:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1681
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[3].union.unresolvedObjectName(), Options: sqlDollar[4].union.seqOpts(), IfExists: false}
		}
	case 86:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1685
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[5].union.unresolvedObjectName(), Options: sqlDollar[6].union.seqOpts(), IfExists: true}
		}
	case 97:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1717
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 98:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1721
		{
			sqlVAL.union.val = &tree.AlterDatabaseOwner{Name: tree.Name(sqlDollar[3].str), Owner: sqlDollar[6].union.roleSpec()}
		}
	case 99:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1728
		{

			sqlVAL.union.val = &tree.AlterRoleSet{
				AllRoles:     true,
				DatabaseName: tree.Name(sqlDollar[3].str),
				IsRole:       true,
				SetOrReset:   sqlDollar[4].union.setVar(),
			}
		}
	case 100:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1740
		{

			sqlVAL.union.val = &tree.AlterDatabasePlacement{
				Name:      tree.Name(sqlDollar[3].str),
				Placement: sqlDollar[4].union.dataPlacement(),
			}
		}
	case 101:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1750
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 102:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1757
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:        tree.Name(sqlDollar[3].str),
				Region:      tree.Name(sqlDollar[9].str),
				IfNotExists: true,
			}
		}
	case 103:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1767
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 104:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1774
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:     tree.Name(sqlDollar[3].str),
				Region:   tree.Name(sqlDollar[8].str),
				IfExists: true,
			}
		}
	case 105:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1784
		{
			sqlVAL.union.val = &tree.AlterDatabaseSurvivalGoal{
				Name:         tree.Name(sqlDollar[3].str),
				SurvivalGoal: sqlDollar[4].union.survivalGoal(),
			}
		}
	case 106:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1793
		{
			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[4].str),
			}
		}
	case 107:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1800
		{
			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[5].str),
			}
		}
	case 110:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1829
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 118:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1861
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 119:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1865
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[3].union.unresolvedObjectName(), IfExists: false, Cmds: sqlDollar[4].union.alterTableCmds()}
		}
	case 120:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1869
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[5].union.unresolvedObjectName(), IfExists: true, Cmds: sqlDollar[6].union.alterTableCmds()}
		}
	case 121:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1875
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[3].union.tableIndexName(), IfExists: false, Cmds: sqlDollar[4].union.alterIndexCmds()}
		}
	case 122:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1879
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[5].union.tableIndexName(), IfExists: true, Cmds: sqlDollar[6].union.alterIndexCmds()}
		}
	case 123:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1885
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   tree.Expr(nil),
			}
		}
	case 124:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1894
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   sqlDollar[9].union.expr(),
			}
		}
	case 125:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1905
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: tree.Expr(nil)}
		}
	case 126:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1909
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: sqlDollar[9].union.expr()}
		}
	case 127:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1915
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 128:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1923
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				All:          true,
			}
		}
	case 129:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1933
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 130:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1937
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), All: true}
		}
	case 135:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1949
		{
			sqlVAL.union.val = tree.RelocateLease
		}
	case 136:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1955
		{
			sqlVAL.union.val = tree.RelocateVoters
		}
	case 137:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1959
		{

			sqlVAL.union.val = tree.RelocateVoters
		}
	case 138:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1964
		{
			sqlVAL.union.val = tree.RelocateNonVoters
		}
	case 139:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1970
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:    tree.TableIndexName{Table: name},
				Rows:            sqlDollar[6].union.slct(),
				SubjectReplicas: sqlDollar[5].union.relocateSubject(),
			}
		}
	case 140:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1982
		{

			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:    sqlDollar[3].union.tableIndexName(),
				Rows:            sqlDollar[6].union.slct(),
				SubjectReplicas: sqlDollar[5].union.relocateSubject(),
			}
		}
	case 141:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2003
		{
			var zoneName string
			switch e := sqlDollar[3].union.expr().(type) {
			case *tree.UnresolvedName:
				if e.NumParts != 1 {
					return setErr(sqllex, errors.New("only simple names are supported in ALTER RANGE ... CONFIGURE ZONE"))
				}
				zoneName = e.Parts[0]
			case tree.DefaultVal:
				zoneName = "default"
			default:
				return setErr(sqllex, errors.New("only simple names are supported in ALTER RANGE ... CONFIGURE ZONE"))
			}
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(zoneName)}
			sqlVAL.union.val = s
		}
	case 142:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2023
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows:            sqlDollar[8].union.slct(),
				FromStoreID:     tree.DNull,
				ToStoreID:       sqlDollar[6].union.expr(),
				SubjectReplicas: tree.RelocateLease,
			}
		}
	case 143:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2032
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				FromStoreID:     tree.DNull,
				ToStoreID:       sqlDollar[7].union.expr(),
				SubjectReplicas: tree.RelocateLease,
			}
		}
	case 144:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2043
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows:            sqlDollar[10].union.slct(),
				FromStoreID:     sqlDollar[6].union.expr(),
				ToStoreID:       sqlDollar[8].union.expr(),
				SubjectReplicas: sqlDollar[4].union.relocateSubject(),
			}
		}
	case 145:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2052
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				FromStoreID:     sqlDollar[7].union.expr(),
				ToStoreID:       sqlDollar[9].union.expr(),
				SubjectReplicas: sqlDollar[5].union.relocateSubject(),
			}
		}
	case 146:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2065
		{

			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: sqlDollar[4].union.expr()}
		}
	case 147:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2070
		{
			sqlVAL.union.val = &tree.SetZoneConfig{Options: sqlDollar[4].union.kvOptions()}
		}
	case 148:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2074
		{

			sqlVAL.union.val = &tree.SetZoneConfig{SetDefault: true}
		}
	case 149:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2079
		{
			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: tree.DNull}
		}
	case 150:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2085
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{Database: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 151:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2093
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
			}
			sqlVAL.union.val = s
		}
	case 152:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2104
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[3].union.tableIndexName(),
			}
			sqlVAL.union.val = s
		}
	case 153:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2114
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 154:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2124
		{
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 155:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2133
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[9].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			s.AllIndexes = true
			sqlVAL.union.val = s
		}
	case 156:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2144
		{
			err := errors.New("index name should not be specified in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION ... OF INDEX")
			return setErr(sqllex, err)
		}
	case 157:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2150
		{
			err := errors.New("index wildcard unsupported in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION <partition> OF INDEX <tablename>@*")
			return setErr(sqllex, err)
		}
	case 158:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2158
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), "."))}}
		}
	case 159:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2162
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), ".")), Value: sqlDollar[3].union.expr()}}
		}
	case 160:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2166
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), ".")), Value: sqlDollar[5].union.expr()})
		}
	case 161:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2170
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), "."))})
		}
	case 162:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2176
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 163:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2181
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{
				TableOrIndex: tree.TableIndexName{Table: name},
				From:         sqlDollar[7].union.exprs(),
				To:           sqlDollar[11].union.exprs(),
			}
		}
	case 164:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2192
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName()}
		}
	case 165:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2196
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName(), From: sqlDollar[7].union.exprs(), To: sqlDollar[11].union.exprs()}
		}
	case 166:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2202
		{
			sqlVAL.union.val = tree.AlterTableCmds{sqlDollar[1].union.alterTableCmd()}
		}
	case 167:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2206
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterTableCmds(), sqlDollar[3].union.alterTableCmd())
		}
	case 168:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2213
		{
			sqlVAL.union.val = &tree.AlterTableRenameColumn{Column: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 169:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2218
		{
			sqlVAL.union.val = &tree.AlterTableRenameConstraint{Constraint: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 170:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2223
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[2].union.colDef()}
		}
	case 171:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2228
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[5].union.colDef()}
		}
	case 172:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2233
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[3].union.colDef()}
		}
	case 173:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2238
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[6].union.colDef()}
		}
	case 174:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2243
		{
			sqlVAL.union.val = &tree.AlterTableSetDefault{Column: tree.Name(sqlDollar[3].str), Default: sqlDollar[4].union.expr()}
		}
	case 175:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2248
		{
			sqlVAL.union.val = &tree.AlterTableSetOnUpdate{Column: tree.Name(sqlDollar[3].str), Expr: sqlDollar[4].union.expr()}
		}
	case 176:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2253
		{
			sqlVAL.union.val = &tree.AlterTableSetVisible{Column: tree.Name(sqlDollar[3].str), Visible: sqlDollar[4].union.bool()}
		}
	case 177:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2258
		{
			sqlVAL.union.val = &tree.AlterTableDropNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 178:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2263
		{
			sqlVAL.union.val = &tree.AlterTableDropStored{Column: tree.Name(sqlDollar[3].str)}
		}
	case 179:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2268
		{
			sqlVAL.union.val = &tree.AlterTableSetNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 180:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2272
		{
			return unimplemented(sqllex, "alter table alter column add")
		}
	case 181:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2277
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     true,
				Column:       tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 182:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2286
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     false,
				Column:       tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 183:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2298
		{
			sqlVAL.union.val = &tree.AlterTableAlterColumnType{
				Column:    tree.Name(sqlDollar[3].str),
				ToType:    sqlDollar[6].union.typeReference(),
				Collation: sqlDollar[7].str,
				Using:     sqlDollar[8].union.expr(),
			}
		}
	case 184:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2308
		{
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      sqlDollar[2].union.constraintDef(),
				ValidationBehavior: sqlDollar[3].union.validationBehavior(),
			}
		}
	case 185:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2316
		{
			def := sqlDollar[7].union.constraintDef()
			def.SetName(tree.Name(sqlDollar[6].str))
			def.SetIfNotExists()
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      def,
				ValidationBehavior: sqlDollar[8].union.validationBehavior(),
			}
		}
	case 186:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2326
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "alter constraint")
		}
	case 187:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2329
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table inherits")
		}
	case 188:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2335
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table no inherits")
		}
	case 189:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2342
		{
			sqlVAL.union.val = &tree.AlterTableAlterPrimaryKey{
				Columns:       sqlDollar[7].union.idxElems(),
				Sharded:       sqlDollar[9].union.shardedIndexDef(),
				StorageParams: sqlDollar[10].union.storageParams(),
			}
		}
	case 190:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2350
		{
			sqlVAL.union.val = &tree.AlterTableValidateConstraint{
				Constraint: tree.Name(sqlDollar[3].str),
			}
		}
	case 191:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2357
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     true,
				Constraint:   tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 192:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2366
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     false,
				Constraint:   tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 193:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2375
		{
			sqlVAL.union.val = &tree.AlterTableSetAudit{Mode: sqlDollar[3].union.auditMode()}
		}
	case 194:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2380
		{
			sqlVAL.union.val = &tree.AlterTablePartitionByTable{
				PartitionByTable: sqlDollar[1].union.partitionByTable(),
			}
		}
	case 195:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2387
		{

			sqlVAL.union.val = &tree.AlterTableInjectStats{
				Stats: sqlDollar[3].union.expr(),
			}
		}
	case 196:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2394
		{
			sqlVAL.union.val = &tree.AlterTableSetStorageParams{
				StorageParams: sqlDollar[3].union.storageParams(),
			}
		}
	case 197:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2400
		{
			sqlVAL.union.val = &tree.AlterTableResetStorageParams{
				Params: sqlDollar[3].union.storageParamKeys(),
			}
		}
	case 198:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2407
		{
			sqlVAL.union.val = tree.AuditModeReadWrite
		}
	case 199:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2408
		{
			sqlVAL.union.val = tree.AuditModeDisable
		}
	case 200:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2412
		{
			sqlVAL.union.val = tree.AlterIndexCmds{sqlDollar[1].union.alterIndexCmd()}
		}
	case 201:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2416
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterIndexCmds(), sqlDollar[3].union.alterIndexCmd())
		}
	case 202:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2422
		{
			sqlVAL.union.val = &tree.AlterIndexPartitionBy{
				PartitionByIndex: sqlDollar[1].union.partitionByIndex(),
			}
		}
	case 203:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2430
		{
			sqlVAL.union.val = sqlDollar[3].union.expr()
		}
	case 204:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2434
		{
			sqlVAL.union.val = nil
		}
	case 205:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2440
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 206:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2444
		{
			sqlVAL.union.val = nil
		}
	case 207:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2450
		{
			sqlVAL.union.val = true
		}
	case 208:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2454
		{
			sqlVAL.union.val = false
		}
	case 209:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2460
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 210:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2464
		{
			sqlVAL.union.val = nil
		}
	case 211:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2471
		{
			sqlVAL.union.val = tree.DropCascade
		}
	case 212:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2475
		{
			sqlVAL.union.val = tree.DropRestrict
		}
	case 213:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2479
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 214:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2485
		{
			sqlVAL.union.val = tree.ValidationSkip
		}
	case 215:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2489
		{
			sqlVAL.union.val = tree.ValidationDefault
		}
	case 216:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2514
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[6].str),
					IfNotExists: false,
					Placement:   sqlDollar[7].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 217:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2525
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[9].str),
					IfNotExists: true,
					Placement:   sqlDollar[10].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 218:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2536
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeDropValue{
					Val: tree.EnumValue(sqlDollar[6].str),
				},
			}
		}
	case 219:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2545
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRenameValue{
					OldVal: tree.EnumValue(sqlDollar[6].str),
					NewVal: tree.EnumValue(sqlDollar[8].str),
				},
			}
		}
	case 220:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2555
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 221:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2564
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeSetSchema{
					Schema: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 222:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2573
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeOwner{
					Owner: sqlDollar[6].union.roleSpec(),
				},
			}
		}
	case 223:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2582
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 224:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2586
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 225:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2589
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 226:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2593
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      true,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 227:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2600
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      false,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 228:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2607
		{
			sqlVAL.union.val = (*tree.AlterTypeAddValuePlacement)(nil)
		}
	case 229:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2613
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.RoleName,
				Name:         sqlDollar[1].str,
			}
		}
	case 230:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2620
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.RoleName,
				Name:         sqlDollar[1].str,
			}
		}
	case 231:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2627
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.CurrentUser,
			}
		}
	case 232:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2633
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.SessionUser,
			}
		}
	case 233:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2641
		{
			sqlVAL.union.val = tree.RoleSpecList{sqlDollar[1].union.roleSpec()}
		}
	case 234:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2645
		{
			sqlVAL.union.val = append(sqlDollar[1].union.roleSpecList(), sqlDollar[3].union.roleSpec())
		}
	case 242:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2666
		{
			sqlVAL.union.val = &tree.RefreshMaterializedView{
				Name:              sqlDollar[5].union.unresolvedObjectName(),
				Concurrently:      sqlDollar[4].union.bool(),
				RefreshDataOption: sqlDollar[6].union.refreshDataOption(),
			}
		}
	case 243:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2673
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 244:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2677
		{
			sqlVAL.union.val = tree.RefreshDataWithData
		}
	case 245:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2681
		{
			sqlVAL.union.val = tree.RefreshDataClear
		}
	case 246:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2685
		{
			sqlVAL.union.val = tree.RefreshDataDefault
		}
	case 247:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2728
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: false,
				Subdir:         sqlDollar[4].union.expr(),
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 248:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2740
		{
			sqlVAL.union.val = &tree.Backup{
				Targets: sqlDollar[2].union.targetListPtr(),
				To:      sqlDollar[4].union.stringOrPlaceholderOptList(),
				Nested:  true,
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *sqlDollar[6].union.backupOptions(),
			}
		}
	case 249:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2750
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: true,
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 250:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2761
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:         sqlDollar[2].union.targetListPtr(),
				To:              sqlDollar[4].union.stringOrPlaceholderOptList(),
				IncrementalFrom: sqlDollar[6].union.exprs(),
				AsOf:            sqlDollar[5].union.asOfClause(),
				Options:         *sqlDollar[7].union.backupOptions(),
			}
		}
	case 251:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2770
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 252:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2774
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 253:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2778
		{
			t := sqlDollar[1].union.targetList()
			sqlVAL.union.val = &t
		}
	case 254:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2786
		{
			sqlVAL.union.val = sqlDollar[2].union.backupOptions()
		}
	case 255:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2790
		{
			sqlVAL.union.val = sqlDollar[4].union.backupOptions()
		}
	case 256:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2794
		{
			sqlVAL.union.val = &tree.BackupOptions{}
		}
	case 257:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2801
		{
			sqlVAL.union.val = sqlDollar[1].union.backupOptions()
		}
	case 258:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2805
		{
			if err := sqlDollar[1].union.backupOptions().CombineWith(sqlDollar[3].union.backupOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 259:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2814
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 260:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2818
		{
			sqlVAL.union.val = &tree.BackupOptions{CaptureRevisionHistory: true}
		}
	case 261:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2822
		{
			sqlVAL.union.val = &tree.BackupOptions{Detached: true}
		}
	case 262:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2826
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 263:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2830
		{
			sqlVAL.union.val = &tree.BackupOptions{IncrementalStorage: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 264:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2912
		{
			sqlVAL.union.val = &tree.ScheduledBackup{
				ScheduleLabelSpec: *(sqlDollar[3].union.scheduleLabelSpec()),
				Recurrence:        sqlDollar[10].union.expr(),
				FullBackup:        sqlDollar[11].union.fullBackupClause(),
				To:                sqlDollar[8].union.stringOrPlaceholderOptList(),
				Targets:           sqlDollar[6].union.targetListPtr(),
				BackupOptions:     *(sqlDollar[9].union.backupOptions()),
				ScheduleOptions:   sqlDollar[12].union.kvOptions(),
			}
		}
	case 265:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2923
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 266:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2928
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 267:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2932
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 268:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2942
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 269:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2948
		{
			sqlVAL.union.val = &tree.ScheduleLabelSpec{Label: sqlDollar[1].union.expr(), IfNotExists: false}
		}
	case 270:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2952
		{
			sqlVAL.union.val = &tree.ScheduleLabelSpec{Label: sqlDollar[4].union.expr(), IfNotExists: true}
		}
	case 271:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2956
		{
			sqlVAL.union.val = &tree.ScheduleLabelSpec{IfNotExists: false}
		}
	case 272:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2965
		{
			sqlVAL.union.val = &tree.FullBackupClause{Recurrence: sqlDollar[3].union.expr()}
		}
	case 273:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2969
		{
			sqlVAL.union.val = &tree.FullBackupClause{AlwaysFull: true}
		}
	case 274:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2973
		{
			sqlVAL.union.val = (*tree.FullBackupClause)(nil)
		}
	case 275:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2979
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 276:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2983
		{
			sqlVAL.union.val = sqlDollar[5].union.kvOptions()
		}
	case 277:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2987
		{
			sqlVAL.union.val = nil
		}
	case 278:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3021
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				From:               sqlDollar[3].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[4].union.asOfClause(),
				Options:            *(sqlDollar[5].union.restoreOptions()),
			}
		}
	case 279:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3030
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				Subdir:             sqlDollar[3].union.expr(),
				From:               sqlDollar[5].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[6].union.asOfClause(),
				Options:            *(sqlDollar[7].union.restoreOptions()),
			}
		}
	case 280:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3040
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[4].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *(sqlDollar[6].union.restoreOptions()),
			}
		}
	case 281:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3049
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				Subdir:  sqlDollar[4].union.expr(),
				From:    sqlDollar[6].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[7].union.asOfClause(),
				Options: *(sqlDollar[8].union.restoreOptions()),
			}
		}
	case 282:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3059
		{
			sqlVAL.union.val = &tree.StreamIngestion{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[7].union.stringOrPlaceholderOptList(),
				AsOf:    sqlDollar[8].union.asOfClause(),
			}
		}
	case 283:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3066
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 284:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3070
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList{sqlDollar[1].union.expr()}
		}
	case 285:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3074
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList(sqlDollar[2].union.exprs())
		}
	case 286:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3080
		{
			sqlVAL.union.val = []tree.StringOrPlaceholderOptList{sqlDollar[1].union.stringOrPlaceholderOptList()}
		}
	case 287:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3084
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listOfStringOrPlaceholderOptList(), sqlDollar[3].union.stringOrPlaceholderOptList())
		}
	case 288:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3091
		{
			sqlVAL.union.val = sqlDollar[2].union.restoreOptions()
		}
	case 289:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3095
		{
			sqlVAL.union.val = sqlDollar[4].union.restoreOptions()
		}
	case 290:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3099
		{
			sqlVAL.union.val = &tree.RestoreOptions{}
		}
	case 291:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3106
		{
			sqlVAL.union.val = sqlDollar[1].union.restoreOptions()
		}
	case 292:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3110
		{
			if err := sqlDollar[1].union.restoreOptions().CombineWith(sqlDollar[3].union.restoreOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 293:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3119
		{
			sqlVAL.union.val = &tree.RestoreOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 294:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3123
		{
			sqlVAL.union.val = &tree.RestoreOptions{DecryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 295:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3127
		{
			sqlVAL.union.val = &tree.RestoreOptions{IntoDB: sqlDollar[3].union.expr()}
		}
	case 296:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3131
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingFKs: true}
		}
	case 297:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3135
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequences: true}
		}
	case 298:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3139
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequenceOwners: true}
		}
	case 299:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3143
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingViews: true}
		}
	case 300:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3147
		{
			sqlVAL.union.val = &tree.RestoreOptions{Detached: true}
		}
	case 301:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3151
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipLocalitiesCheck: true}
		}
	case 302:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3155
		{
			sqlVAL.union.val = &tree.RestoreOptions{DebugPauseOn: sqlDollar[3].union.expr()}
		}
	case 303:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3159
		{
			sqlVAL.union.val = &tree.RestoreOptions{NewDBName: sqlDollar[3].union.expr()}
		}
	case 304:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3163
		{
			sqlVAL.union.val = &tree.RestoreOptions{IncrementalStorage: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 305:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3168
		{
			sqlVAL.str = strings.ToUpper(sqlDollar[1].str)
		}
	case 306:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3174
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "alter function")
		}
	case 307:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3178
		{
			return unimplemented(sqllex, "alter domain")
		}
	case 308:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3182
		{
			return unimplementedWithIssueDetail(sqllex, 74775, "alter aggregate")
		}
	case 309:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3219
		{

			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[4].union.expr()}, Options: sqlDollar[6].union.kvOptions()}
		}
	case 310:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3224
		{
			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[3].union.expr()}, Options: sqlDollar[4].union.kvOptions()}
		}
	case 311:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3228
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[7].union.expr()}, Options: sqlDollar[9].union.kvOptions()}
		}
	case 312:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3234
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[6].union.expr()}, Options: sqlDollar[7].union.kvOptions()}
		}
	case 313:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:3239
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: sqlDollar[5].union.nameList(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 314:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3244
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: nil, FileFormat: sqlDollar[4].str, Files: sqlDollar[7].union.exprs(), Options: sqlDollar[9].union.kvOptions()}
		}
	case 315:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3248
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 316:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3265
		{
			sqlVAL.union.val = &tree.Export{Query: sqlDollar[7].union.slct(), FileFormat: sqlDollar[3].str, File: sqlDollar[4].union.expr(), Options: sqlDollar[5].union.kvOptions()}
		}
	case 317:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3268
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 318:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3272
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 319:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3276
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 320:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3284
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 321:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3288
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 322:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3294
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 323:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3298
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 324:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3304
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 325:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3308
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 326:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3312
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 327:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3316
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 328:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3322
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 329:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3326
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[3].union.kvOption())
		}
	case 330:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3332
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 331:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3336
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 332:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3340
		{
			sqlVAL.union.val = nil
		}
	case 333:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3352
		{

			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			if sqlDollar[7].union.expr() != nil {
				return unimplementedWithIssue(sqllex, 54580)
			}
			sqlVAL.union.val = &tree.CopyFrom{
				Table:   name,
				Columns: sqlDollar[3].union.nameList(),
				Stdin:   true,
				Options: *sqlDollar[6].union.copyOptions(),
			}
		}
	case 334:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3366
		{
			return unimplemented(sqllex, "copy from unsupported format")
		}
	case 335:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3372
		{
			sqlVAL.union.val = sqlDollar[2].union.copyOptions()
		}
	case 336:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3376
		{
			sqlVAL.union.val = &tree.CopyOptions{}
		}
	case 337:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3382
		{
			sqlVAL.union.val = sqlDollar[1].union.copyOptions()
		}
	case 338:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3386
		{
			if err := sqlDollar[1].union.copyOptions().CombineWith(sqlDollar[2].union.copyOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 339:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3394
		{
			sqlVAL.union.val = &tree.CopyOptions{Destination: sqlDollar[3].union.expr()}
		}
	case 340:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3398
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatBinary}
		}
	case 341:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3402
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatCSV}
		}
	case 342:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3406
		{
			sqlVAL.union.val = &tree.CopyOptions{Delimiter: sqlDollar[2].union.expr()}
		}
	case 343:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3410
		{
			sqlVAL.union.val = &tree.CopyOptions{Null: sqlDollar[2].union.expr()}
		}
	case 345:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3418
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 347:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3419
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 349:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3420
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 351:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3421
		{
			return helpWith(sqllex, "CANCEL ALL JOBS")
		}
	case 352:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3422
		{
			return helpWith(sqllex, "CANCEL")
		}
	case 353:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3432
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.CancelJob,
			}
		}
	case 354:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3440
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 355:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3442
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 356:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3446
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 357:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3449
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 358:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3459
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 359:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3468
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 360:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3476
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 361:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3478
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 362:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3482
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 363:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3485
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 364:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3495
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 365:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3504
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 366:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3512
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 367:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3514
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 368:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3518
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 369:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3521
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 370:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3529
		{
			sqlVAL.union.val = &tree.ControlJobsOfType{Type: sqlDollar[3].str, Command: tree.CancelJob}
		}
	case 371:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3532
		{
			return helpWith(sqllex, "CANCEL ALL JOBS")
		}
	case 372:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3536
		{
			sqlVAL.union.val = &tree.CommentOnDatabase{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 373:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3540
		{
			sqlVAL.union.val = &tree.CommentOnSchema{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 374:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3544
		{
			sqlVAL.union.val = &tree.CommentOnTable{Table: sqlDollar[4].union.unresolvedObjectName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 375:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3548
		{
			varName, err := sqlDollar[4].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[4].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = &tree.CommentOnColumn{ColumnItem: columnItem, Comment: sqlDollar[6].union.strPtr()}
		}
	case 376:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3561
		{
			sqlVAL.union.val = &tree.CommentOnIndex{Index: sqlDollar[4].union.tableIndexName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 377:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3566
		{
			sqlVAL.union.val = &tree.CommentOnConstraint{Constraint: tree.Name(sqlDollar[4].str), Table: sqlDollar[6].union.unresolvedObjectName(), Comment: sqlDollar[8].union.strPtr()}
		}
	case 378:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3569
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "comment on extension")
		}
	case 379:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3570
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "comment on function")
		}
	case 380:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3574
		{
			t := sqlDollar[1].str
			sqlVAL.union.val = &t
		}
	case 381:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3579
		{
			var str *string
			sqlVAL.union.val = str
		}
	case 383:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3591
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 386:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3593
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 388:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3594
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 392:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3597
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 393:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3598
		{
		}
	case 394:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3599
		{
			return helpWith(sqllex, "CREATE")
		}
	case 395:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3606
		{
			sqlVAL.union.val = &tree.CreateExtension{IfNotExists: true, Name: sqlDollar[6].str}
		}
	case 396:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3609
		{
			sqlVAL.union.val = &tree.CreateExtension{Name: sqlDollar[3].str}
		}
	case 397:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3613
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "create extension if not exists with")
		}
	case 398:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3616
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "create extension with")
		}
	case 399:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3619
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 400:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3622
		{
			return unimplemented(sqllex, "create access method")
		}
	case 401:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3623
		{
			return unimplementedWithIssueDetail(sqllex, 74775, "create aggregate")
		}
	case 402:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3624
		{
			return unimplemented(sqllex, "create cast")
		}
	case 403:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3625
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create constraint")
		}
	case 404:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3626
		{
			return unimplemented(sqllex, "create conversion")
		}
	case 405:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3627
		{
			return unimplemented(sqllex, "create def conv")
		}
	case 406:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3628
		{
			return unimplemented(sqllex, "create foreign table")
		}
	case 407:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3629
		{
			return unimplemented(sqllex, "create fdw")
		}
	case 408:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3630
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 409:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3631
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 410:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3632
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create language "+sqlDollar[6].str)
		}
	case 411:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3633
		{
			return unimplementedWithIssue(sqllex, 65017)
		}
	case 412:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3634
		{
			return unimplemented(sqllex, "create publication")
		}
	case 413:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3635
		{
			return unimplemented(sqllex, "create rule")
		}
	case 414:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3636
		{
			return unimplemented(sqllex, "create server")
		}
	case 415:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3637
		{
			return unimplemented(sqllex, "create subscription")
		}
	case 416:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3638
		{
			return unimplementedWithIssueDetail(sqllex, 54113, "create tablespace")
		}
	case 417:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3639
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "create text")
		}
	case 418:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3640
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create trigger")
		}
	case 419:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3643
		{
		}
	case 420:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3644
		{
		}
	case 421:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3647
		{
		}
	case 422:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3648
		{
		}
	case 423:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3651
		{
		}
	case 424:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3652
		{
		}
	case 425:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3655
		{
			return unimplemented(sqllex, "drop access method")
		}
	case 426:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3656
		{
			return unimplementedWithIssueDetail(sqllex, 74775, "drop aggregate")
		}
	case 427:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3657
		{
			return unimplemented(sqllex, "drop cast")
		}
	case 428:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3658
		{
			return unimplemented(sqllex, "drop collation")
		}
	case 429:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3659
		{
			return unimplemented(sqllex, "drop conversion")
		}
	case 430:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3660
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "drop")
		}
	case 431:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3661
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "drop extension if exists")
		}
	case 432:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3662
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "drop extension")
		}
	case 433:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3663
		{
			return unimplemented(sqllex, "drop foreign table")
		}
	case 434:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3664
		{
			return unimplemented(sqllex, "drop fdw")
		}
	case 435:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3665
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop function")
		}
	case 436:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3666
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop language "+sqlDollar[4].str)
		}
	case 437:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3667
		{
			return unimplemented(sqllex, "drop operator")
		}
	case 438:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3668
		{
			return unimplemented(sqllex, "drop publication")
		}
	case 439:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3669
		{
			return unimplemented(sqllex, "drop rule")
		}
	case 440:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3670
		{
			return unimplemented(sqllex, "drop server")
		}
	case 441:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3671
		{
			return unimplemented(sqllex, "drop subscription")
		}
	case 442:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3672
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "drop text")
		}
	case 443:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3673
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "drop")
		}
	case 445:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3676
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 447:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3677
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 449:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3678
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 451:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3679
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 453:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3680
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 454:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3682
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 456:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3683
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 458:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3684
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 460:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3685
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 461:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3695
		{
			sqlVAL.union.val = &tree.CreateStats{
				Name:        tree.Name(sqlDollar[3].str),
				ColumnNames: sqlDollar[4].union.nameList(),
				Table:       sqlDollar[6].union.tblExpr(),
				Options:     *sqlDollar[7].union.createStatsOptions(),
			}
		}
	case 462:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3703
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 463:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3707
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 464:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3711
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 465:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3717
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 466:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3721
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
			}
		}
	case 467:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3730
		{

			sqlVAL.union.val = sqlDollar[3].union.createStatsOptions()
		}
	case 468:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3737
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 469:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3743
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{}
		}
	case 470:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3749
		{
			sqlVAL.union.val = sqlDollar[1].union.createStatsOptions()
		}
	case 471:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3753
		{
			a := sqlDollar[1].union.createStatsOptions()
			b := sqlDollar[2].union.createStatsOptions()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 472:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3764
		{

			value, _ := constant.Float64Val(sqlDollar[2].union.numVal().AsConstantValue())
			if value < 0.0 || value >= 1.0 {
				sqllex.Error("THROTTLING fraction must be between 0 and 1")
				return 1
			}
			sqlVAL.union.val = &tree.CreateStatsOptions{
				Throttling: value,
			}
		}
	case 473:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3776
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 474:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3791
		{
			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				SinkURI: sqlDollar[5].union.expr(),
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 475:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3799
		{

			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 476:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3809
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[1].union.tablePatterns()}
		}
	case 477:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3813
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 478:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3819
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()}
		}
	case 479:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3823
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedObjectName().ToUnresolvedName())
		}
	case 480:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3830
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 481:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3834
		{

			sqlVAL.union.val = nil
		}
	case 482:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3851
		{
			sqlVAL.union.val = &tree.ReplicationStream{
				Targets: sqlDollar[5].union.targetList(),
				SinkURI: sqlDollar[6].union.expr(),
				Options: *sqlDollar[7].union.replicationOptions(),
			}
		}
	case 483:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3862
		{
			sqlVAL.union.val = sqlDollar[2].union.replicationOptions()
		}
	case 484:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3866
		{
			sqlVAL.union.val = sqlDollar[4].union.replicationOptions()
		}
	case 485:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3870
		{
			sqlVAL.union.val = &tree.ReplicationOptions{}
		}
	case 486:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3877
		{
			sqlVAL.union.val = sqlDollar[1].union.replicationOptions()
		}
	case 487:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3881
		{
			if err := sqlDollar[1].union.replicationOptions().CombineWith(sqlDollar[3].union.replicationOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 488:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3890
		{
			sqlVAL.union.val = &tree.ReplicationOptions{Cursor: sqlDollar[3].union.expr()}
		}
	case 489:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3894
		{
			sqlVAL.union.val = &tree.ReplicationOptions{Detached: true}
		}
	case 490:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3907
		{
			sqlVAL.union.val = &tree.Delete{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[4].union.tblExpr(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[6].union.expr()),
				OrderBy:   sqlDollar[7].union.orderBy(),
				Limit:     sqlDollar[8].union.limit(),
				Returning: sqlDollar[9].union.retClause(),
			}
		}
	case 491:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3917
		{
			return helpWith(sqllex, "DELETE")
		}
	case 492:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3920
		{
			return unimplementedWithIssueDetail(sqllex, 40963, "delete using")
		}
	case 493:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3921
		{
		}
	case 494:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3929
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeAll}
		}
	case 495:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3932
		{
			return unimplemented(sqllex, "discard plans")
		}
	case 496:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3933
		{
			return unimplemented(sqllex, "discard sequences")
		}
	case 497:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3934
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 498:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3935
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 499:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3936
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 502:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3945
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 504:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3946
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 505:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3947
		{
		}
	case 506:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3948
		{
			return helpWith(sqllex, "DROP")
		}
	case 508:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3951
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 510:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3952
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 512:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3953
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 514:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3954
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 516:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3955
		{
			return helpWith(sqllex, "DROP SEQUENCE")
		}
	case 518:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3956
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 520:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3957
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 521:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3965
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 522:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3969
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 523:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3973
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[4].union.tableNames(),
				IfExists:       false,
				DropBehavior:   sqlDollar[5].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 524:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3982
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[6].union.tableNames(),
				IfExists:       true,
				DropBehavior:   sqlDollar[7].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 525:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3990
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 526:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3998
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 527:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4002
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 528:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4005
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 529:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4013
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 530:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4017
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 531:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4020
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 532:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4028
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[4].union.newTableIndexNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[5].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 533:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4037
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[6].union.newTableIndexNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[7].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 534:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4045
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 535:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4053
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[3].str),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 536:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4061
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[5].str),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 537:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4068
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 538:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4075
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[3].union.unresolvedObjectNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 539:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4083
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[5].union.unresolvedObjectNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 540:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4090
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 541:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4094
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[1].union.unresolvedObjectNames()}
		}
	case 542:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4100
		{
			sqlVAL.union.val = []*tree.UnresolvedObjectName{sqlDollar[1].union.unresolvedObjectName()}
		}
	case 543:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4104
		{
			sqlVAL.union.val = append(sqlDollar[1].union.unresolvedObjectNames(), sqlDollar[3].union.unresolvedObjectName())
		}
	case 544:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4113
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[3].union.objectNamePrefixList(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 545:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4121
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[5].union.objectNamePrefixList(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 546:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4128
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 547:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4136
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[3].union.roleSpecList(), IfExists: false, IsRole: sqlDollar[2].union.bool()}
		}
	case 548:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4140
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[5].union.roleSpecList(), IfExists: true, IsRole: sqlDollar[2].union.bool()}
		}
	case 549:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4143
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 550:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4147
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 551:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4152
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 552:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4165
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 553:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4170
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 554:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4172
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 555:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4177
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 556:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4181
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 557:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4204
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(nil, sqlDollar[2].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 558:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4211
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 559:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4213
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(sqlDollar[3].union.strs(), sqlDollar[5].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 560:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4221
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 561:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4229
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 562:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4237
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 563:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4245
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 564:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4256
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 569:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4264
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 573:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4267
		{
			return helpWith(sqllex, "DELETE")
		}
	case 576:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4269
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 578:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4270
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 580:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4271
		{
			return helpWith(sqllex, "INSERT")
		}
	case 584:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4274
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 587:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4276
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 589:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4279
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 593:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4284
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 595:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4285
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 597:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4286
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 599:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4291
		{
			return helpWith(sqllex, "DELETE")
		}
	case 601:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4292
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 603:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4293
		{
			return helpWith(sqllex, "INSERT")
		}
	case 604:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4295
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 607:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4299
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 609:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4300
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 610:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4304
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 611:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4308
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 612:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4318
		{
			sqlVAL.union.val = &tree.AlterChangefeed{
				Jobs: sqlDollar[3].union.expr(),
				Cmds: sqlDollar[4].union.alterChangefeedCmds(),
			}
		}
	case 613:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4324
		{
			return helpWith(sqllex, "ALTER CHANGEFEED")
		}
	case 614:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4328
		{
			sqlVAL.union.val = tree.AlterChangefeedCmds{sqlDollar[1].union.alterChangefeedCmd()}
		}
	case 615:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4332
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterChangefeedCmds(), sqlDollar[2].union.alterChangefeedCmd())
		}
	case 616:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4339
		{
			sqlVAL.union.val = &tree.AlterChangefeedAddTarget{
				Targets: sqlDollar[2].union.targetList(),
			}
		}
	case 617:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4346
		{
			sqlVAL.union.val = &tree.AlterChangefeedDropTarget{
				Targets: sqlDollar[2].union.targetList(),
			}
		}
	case 618:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4358
		{
			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: sqlDollar[5].union.stmt(),
			}
		}
	case 619:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4366
		{

			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: &tree.CannedOptPlan{Plan: sqlDollar[7].str},
			}
		}
	case 620:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4374
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 621:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4378
		{
			sqlVAL.union.val = sqlDollar[2].union.typeReferences()
		}
	case 622:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4382
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference(nil)
		}
	case 623:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4392
		{
			sqlVAL.union.val = &tree.Execute{
				Name:   tree.Name(sqlDollar[2].str),
				Params: sqlDollar[3].union.exprs(),
			}
		}
	case 624:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4399
		{

			sqlVAL.union.val = &tree.Execute{
				Name:        tree.Name(sqlDollar[2].str),
				Params:      sqlDollar[3].union.exprs(),
				DiscardRows: true,
			}
		}
	case 625:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4407
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 626:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4411
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 627:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4415
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 628:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4425
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[2].str)}
		}
	case 629:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4429
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[3].str)}
		}
	case 630:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4433
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 631:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4437
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 632:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4440
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 633:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4463
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.roleSpecList(), Targets: sqlDollar[4].union.targetList(), WithGrantOption: sqlDollar[7].union.bool()}
		}
	case 634:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4467
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.roleSpecList(), AdminOption: false}
		}
	case 635:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4471
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.roleSpecList(), AdminOption: true}
		}
	case 636:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:4475
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.roleSpecList(), WithGrantOption: sqlDollar[8].union.bool()}
		}
	case 637:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:4479
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees:        sqlDollar[7].union.roleSpecList(),
				WithGrantOption: sqlDollar[8].union.bool(),
			}
		}
	case 638:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4490
		{
			return unimplemented(sqllex, "grant privileges on schema with")
		}
	case 639:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:4494
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas:           sqlDollar[8].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees:        sqlDollar[10].union.roleSpecList(),
				WithGrantOption: sqlDollar[11].union.bool(),
			}
		}
	case 640:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4506
		{
			return unimplementedWithIssueDetail(sqllex, 74780, "grant privileges on sequence")
		}
	case 641:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4509
		{
			return helpWith(sqllex, "GRANT")
		}
	case 642:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4532
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.roleSpecList(), Targets: sqlDollar[4].union.targetList(), GrantOptionFor: false}
		}
	case 643:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4536
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[5].union.privilegeList(), Grantees: sqlDollar[9].union.roleSpecList(), Targets: sqlDollar[7].union.targetList(), GrantOptionFor: true}
		}
	case 644:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4540
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.roleSpecList(), AdminOption: false}
		}
	case 645:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4544
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[5].union.nameList(), Members: sqlDollar[7].union.roleSpecList(), AdminOption: true}
		}
	case 646:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4548
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.roleSpecList(), GrantOptionFor: false}
		}
	case 647:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4552
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[5].union.privilegeList(), Targets: sqlDollar[8].union.targetList(), Grantees: sqlDollar[10].union.roleSpecList(), GrantOptionFor: true}
		}
	case 648:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4556
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees:       sqlDollar[7].union.roleSpecList(),
				GrantOptionFor: false,
			}
		}
	case 649:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4567
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[5].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[8].union.objectNamePrefixList(),
				},
				Grantees:       sqlDollar[10].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 650:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4578
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas:           sqlDollar[8].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees:       sqlDollar[10].union.roleSpecList(),
				GrantOptionFor: false,
			}
		}
	case 651:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:4590
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[5].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas:           sqlDollar[11].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees:       sqlDollar[13].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 652:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4602
		{
			return unimplemented(sqllex, "revoke privileges on sequence")
		}
	case 653:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4605
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 654:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4611
		{
			sqlVAL.union.val = privilege.List{privilege.ALL}
		}
	case 655:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4615
		{
			privList, err := privilege.ListFromStrings(sqlDollar[1].union.nameList().ToStrings())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = privList
		}
	case 656:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4625
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 657:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4629
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 663:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4643
		{
			return helpWith(sqllex, "RESET")
		}
	case 665:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4644
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 666:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4652
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}, Reset: true}
		}
	case 667:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4656
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[3].str, Values: tree.Exprs{tree.DefaultVal{}}, Reset: true}
		}
	case 668:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4660
		{
			sqlVAL.union.val = &tree.SetVar{ResetAll: true, Reset: true}
		}
	case 669:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4663
		{
			return helpWith(sqllex, "RESET")
		}
	case 670:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4671
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: tree.DefaultVal{}}
		}
	case 671:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4674
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 672:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4685
		{
			sqlVAL.union.val = &tree.SetVar{Name: "database", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 673:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4688
		{
			return helpWith(sqllex, "USE")
		}
	case 675:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4692
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 676:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4693
		{
		}
	case 677:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4694
		{
			return unimplemented(sqllex, "set constraints")
		}
	case 679:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4698
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 681:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4699
		{
			return helpWith(sqllex, "SET LOCAL")
		}
	case 683:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4700
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 685:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4701
		{
			return helpWith(sqllex, "USE")
		}
	case 688:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4717
		{
			return helpWith(sqllex, "SCRUB")
		}
	case 689:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4732
		{
			sqlVAL.union.val = &tree.Scrub{Typ: tree.ScrubDatabase, Database: tree.Name(sqlDollar[4].str), AsOf: sqlDollar[5].union.asOfClause()}
		}
	case 690:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4735
		{
			return helpWith(sqllex, "SCRUB DATABASE")
		}
	case 691:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4753
		{
			sqlVAL.union.val = &tree.Scrub{
				Typ:     tree.ScrubTable,
				Table:   sqlDollar[4].union.unresolvedObjectName(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: sqlDollar[6].union.scrubOptions(),
			}
		}
	case 692:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4761
		{
			return helpWith(sqllex, "SCRUB TABLE")
		}
	case 693:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4765
		{
			sqlVAL.union.val = sqlDollar[3].union.scrubOptions()
		}
	case 694:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4769
		{
			sqlVAL.union.val = tree.ScrubOptions{}
		}
	case 695:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4775
		{
			sqlVAL.union.val = tree.ScrubOptions{sqlDollar[1].union.scrubOption()}
		}
	case 696:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4779
		{
			sqlVAL.union.val = append(sqlDollar[1].union.scrubOptions(), sqlDollar[3].union.scrubOption())
		}
	case 697:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4785
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{}
		}
	case 698:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4789
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{IndexNames: sqlDollar[3].union.nameList()}
		}
	case 699:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4793
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{}
		}
	case 700:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4797
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{ConstraintNames: sqlDollar[3].union.nameList()}
		}
	case 701:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4801
		{
			sqlVAL.union.val = &tree.ScrubOptionPhysical{}
		}
	case 702:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4812
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: sqlDollar[6].union.expr()}
		}
	case 703:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4815
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 706:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4825
		{
			sqlVAL.union.val = &tree.SetVar{Values: sqlDollar[4].union.exprs()}
		}
	case 707:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4841
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 708:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4844
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 709:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4846
		{
			sqlVAL.union.val = sqlDollar[2].union.stmt()
		}
	case 710:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4849
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 711:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4852
		{
			sqlVAL.union.val = &tree.SetSessionCharacteristics{Modes: sqlDollar[6].union.transactionModes()}
		}
	case 712:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4866
		{
			ret := sqlDollar[3].union.setVar()
			ret.Local = true
			sqlVAL.union.val = ret
		}
	case 713:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4871
		{
			return helpWith(sqllex, "SET LOCAL")
		}
	case 714:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4888
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[3].union.transactionModes()}
		}
	case 715:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4891
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 716:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4893
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[4].union.transactionModes()}
		}
	case 717:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4896
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 718:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4900
		{

			varName := sqlDollar[1].union.strs()
			if len(varName) == 1 && varName[0] == "tracing" {
				sqlVAL.union.val = &tree.SetTracing{Values: sqlDollar[3].union.exprs()}
			} else {
				sqlVAL.union.val = &tree.SetVar{Name: strings.Join(sqlDollar[1].union.strs(), "."), Values: sqlDollar[3].union.exprs()}
			}
		}
	case 720:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4919
		{

			sqlVAL.union.val = &tree.SetVar{Name: "timezone", Values: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 721:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4923
		{
			return unimplemented(sqllex, "set from current")
		}
	case 722:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4927
		{

			sqlVAL.union.val = &tree.SetVar{Name: "search_path", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 723:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4932
		{

			sqlVAL.union.val = &tree.SetVar{Name: "role", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 725:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4941
		{

			sqlVAL.union.val = &tree.SetSessionAuthorizationDefault{}
		}
	case 726:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4946
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 727:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4950
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 729:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4962
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 730:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4967
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 731:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4974
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 732:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4978
		{
			sqlVAL.union.val = append([]string{sqlDollar[1].str}, sqlDollar[2].union.strs()...)
		}
	case 733:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4984
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 734:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4988
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 736:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4995
		{
			sqlVAL.union.val = tree.Expr(&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}})
		}
	case 739:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5016
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 740:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5020
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 741:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5026
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 742:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5030
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 743:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5034
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 744:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5038
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 745:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5042
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 746:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5048
		{
			sqlVAL.union.val = tree.Low
		}
	case 747:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5052
		{
			sqlVAL.union.val = tree.Normal
		}
	case 748:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5056
		{
			sqlVAL.union.val = tree.High
		}
	case 749:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5067
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 750:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5071
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 751:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5075
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 753:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5080
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 754:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5084
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 756:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5099
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 758:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5100
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 760:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5101
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 762:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5102
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 764:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5103
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 766:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5104
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 768:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5105
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 770:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5106
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 772:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5107
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 775:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5109
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 777:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5110
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 779:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5111
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 781:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5112
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 783:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5113
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 786:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5115
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 788:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5116
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 790:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5117
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 793:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5119
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 796:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5121
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 798:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5122
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 800:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5123
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 802:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5124
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 804:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5125
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 806:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5126
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 808:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5127
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 810:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5128
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 812:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5129
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 814:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5130
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 816:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5131
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 818:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5132
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 820:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5133
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 822:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5134
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 823:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5135
		{
			return helpWith(sqllex, "SHOW")
		}
	case 827:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5138
		{
			return helpWith(sqllex, "SHOW DEFAULT PRIVILEGES")
		}
	case 828:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5143
		{
		}
	case 829:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5144
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 830:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5147
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 831:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5151
		{

			return purposelyUnimplemented(sqllex, "reindex table", "CockroachDB does not require reindexing.")
		}
	case 832:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5156
		{

			return purposelyUnimplemented(sqllex, "reindex index", "CockroachDB does not require reindexing.")
		}
	case 833:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5161
		{

			return purposelyUnimplemented(sqllex, "reindex schema", "CockroachDB does not require reindexing.")
		}
	case 834:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5166
		{

			return purposelyUnimplemented(sqllex, "reindex database", "CockroachDB does not require reindexing.")
		}
	case 835:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5171
		{

			return purposelyUnimplemented(sqllex, "reindex system", "CockroachDB does not require reindexing.")
		}
	case 836:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5181
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[2].str}
		}
	case 837:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5182
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[3].str}
		}
	case 838:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5183
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 840:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5188
		{
			sqlVAL.str = sqlDollar[1].str + "." + strings.Join(sqlDollar[2].union.strs(), ".")
		}
	case 843:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5198
		{
			sqlVAL.str = "client_encoding"
		}
	case 848:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5204
		{
			sqlVAL.str = "timezone"
		}
	case 849:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5205
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 850:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5209
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 851:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5213
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 852:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5229
		{
			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 853:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5233
		{

			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[7].union.unresolvedObjectName(), UsingJSON: true}
		}
	case 854:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5237
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 855:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5248
		{

			id, err := sqlDollar[3].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ShowHistogram{HistogramID: id}
		}
	case 856:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5256
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 857:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5264
		{
			sqlVAL.union.val = &tree.ShowBackup{
				InCollection: sqlDollar[4].union.expr(),
			}
		}
	case 858:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5270
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupDefaultDetails,
				Path:    sqlDollar[3].union.expr(),
				Options: sqlDollar[4].union.kvOptions(),
			}
		}
	case 859:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5278
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:      tree.BackupDefaultDetails,
				Path:         sqlDollar[3].union.expr(),
				InCollection: sqlDollar[5].union.expr(),
				Options:      sqlDollar[6].union.kvOptions(),
			}
		}
	case 860:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5287
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:              tree.BackupDefaultDetails,
				ShouldIncludeSchemas: true,
				Path:                 sqlDollar[4].union.expr(),
				Options:              sqlDollar[5].union.kvOptions(),
			}
		}
	case 861:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5296
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupRangeDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 862:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5305
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupFileDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 863:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5313
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 864:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5323
		{
			sqlVAL.union.val = &tree.ShowClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), ".")}
		}
	case 865:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5327
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 866:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5330
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 867:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5332
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 868:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5335
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 869:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5337
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 870:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5341
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 871:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5344
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 872:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5352
		{
			sqlVAL.union.val = &tree.ShowColumns{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 873:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5355
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 874:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5363
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 875:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5367
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsDB: true, Database: tree.Name(sqlDollar[5].str)}
		}
	case 876:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5371
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsIndex: true, Index: sqlDollar[5].union.tableIndexName()}
		}
	case 877:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5375
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 878:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5378
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 879:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5386
		{
			sqlVAL.union.val = &tree.ShowDatabases{WithComment: sqlDollar[3].union.bool()}
		}
	case 880:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5389
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 881:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5395
		{
			sqlVAL.union.val = &tree.ShowDefaultPrivileges{
				Roles: sqlDollar[4].union.roleSpecList(),
			}
		}
	case 882:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5400
		{
			sqlVAL.union.val = &tree.ShowDefaultPrivileges{
				ForAllRoles: true,
			}
		}
	case 883:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5405
		{
			return helpWith(sqllex, "SHOW DEFAULT PRIVILEGES")
		}
	case 884:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5412
		{
			sqlVAL.union.val = &tree.ShowEnums{}
		}
	case 885:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5416
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
			}
		}
	case 886:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5426
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
			}
		}
	case 887:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5435
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 888:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5442
		{
			sqlVAL.union.val = &tree.ShowTypes{}
		}
	case 889:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5445
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 890:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5458
		{
			lst := sqlDollar[3].union.targetListPtr()
			if lst != nil && lst.ForRoles {
				sqlVAL.union.val = &tree.ShowRoleGrants{Roles: lst.Roles, Grantees: sqlDollar[4].union.roleSpecList()}
			} else {
				sqlVAL.union.val = &tree.ShowGrants{Targets: lst, Grantees: sqlDollar[4].union.roleSpecList()}
			}
		}
	case 891:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5466
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 892:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5474
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 893:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5477
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 894:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5479
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 895:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5483
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 896:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5487
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 897:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5490
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 898:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5492
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 899:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5496
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 900:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5499
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 901:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5507
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 902:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5510
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 903:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5512
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 904:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5515
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 905:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5523
		{
			sqlVAL.union.val = &tree.ShowQueries{All: false, Cluster: sqlDollar[2].union.bool()}
		}
	case 906:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5526
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 907:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5528
		{
			sqlVAL.union.val = &tree.ShowQueries{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 908:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5531
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 909:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5535
		{
			sqlVAL.union.val = true
		}
	case 910:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5537
		{
			sqlVAL.union.val = true
		}
	case 911:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5539
		{
			sqlVAL.union.val = false
		}
	case 914:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5556
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: true}
		}
	case 915:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5560
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: false}
		}
	case 916:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5564
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{}
		}
	case 917:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5567
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 918:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5568
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 919:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5569
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 920:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5571
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[3].union.slct()}
		}
	case 921:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5575
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[5].union.slct(), Block: true}
		}
	case 922:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5579
		{
			sqlVAL.union.val = &tree.ShowJobs{Schedules: sqlDollar[3].union.slct()}
		}
	case 923:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5583
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{Jobs: sqlDollar[4].union.slct()}
		}
	case 924:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5586
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 925:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5588
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
			}
		}
	case 926:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5596
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[4].union.expr()}}},
				},
			}
		}
	case 927:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5604
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				Block: true,
			}
		}
	case 928:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5612
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 929:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5613
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 930:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5623
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ExecutorType:   sqlDollar[3].union.executorType(),
			}
		}
	case 931:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5629
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 932:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5631
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: sqlDollar[2].union.scheduleState(),
				ExecutorType:   sqlDollar[4].union.executorType(),
			}
		}
	case 933:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5637
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 934:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5639
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ScheduleID:     sqlDollar[3].union.expr(),
			}
		}
	case 935:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5645
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 936:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5649
		{
			sqlVAL.union.val = tree.ActiveSchedules
		}
	case 937:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5653
		{
			sqlVAL.union.val = tree.PausedSchedules
		}
	case 938:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5659
		{
			sqlVAL.union.val = tree.InvalidExecutor
		}
	case 939:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5663
		{
			sqlVAL.union.val = tree.ScheduledBackupExecutor
		}
	case 940:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5667
		{
			sqlVAL.union.val = tree.ScheduledSQLStatsCompactionExecutor
		}
	case 941:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5678
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceRaw, Compact: sqlDollar[2].union.bool()}
		}
	case 942:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5681
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 943:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5683
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceKV, Compact: sqlDollar[2].union.bool()}
		}
	case 944:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5686
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 945:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5688
		{

			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceReplica, Compact: sqlDollar[2].union.bool()}
		}
	case 946:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5692
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 947:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5695
		{
			sqlVAL.union.val = true
		}
	case 948:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5696
		{
			sqlVAL.union.val = false
		}
	case 949:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5704
		{
			sqlVAL.union.val = &tree.ShowSessions{Cluster: sqlDollar[2].union.bool()}
		}
	case 950:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5707
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 951:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5709
		{
			sqlVAL.union.val = &tree.ShowSessions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 952:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5712
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 953:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5720
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
				WithComment: sqlDollar[7].union.bool()}
		}
	case 954:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5730
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
				WithComment: sqlDollar[5].union.bool()}
		}
	case 955:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5740
		{
			sqlVAL.union.val = &tree.ShowTables{WithComment: sqlDollar[3].union.bool()}
		}
	case 956:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5743
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 957:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5750
		{
			sqlVAL.union.val = &tree.ShowTransactions{Cluster: sqlDollar[2].union.bool()}
		}
	case 958:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5753
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 959:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5755
		{
			sqlVAL.union.val = &tree.ShowTransactions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 960:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5758
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 961:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5761
		{
			sqlVAL.union.val = true
		}
	case 962:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5762
		{
			sqlVAL.union.val = false
		}
	case 963:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5769
		{
			sqlVAL.union.val = &tree.ShowSchemas{Database: tree.Name(sqlDollar[4].str)}
		}
	case 964:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5773
		{
			sqlVAL.union.val = &tree.ShowSchemas{}
		}
	case 965:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5776
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 966:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5783
		{
			sqlVAL.union.val = &tree.ShowSequences{Database: tree.Name(sqlDollar[4].str)}
		}
	case 967:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5787
		{
			sqlVAL.union.val = &tree.ShowSequences{}
		}
	case 968:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5790
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 969:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5797
		{

			sqlVAL.union.val = &tree.ShowSyntax{Statement: sqlDollar[3].str}
		}
	case 970:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5801
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 971:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5805
		{

			sqlVAL.union.val = &tree.ShowLastQueryStatistics{Columns: sqlDollar[5].union.nameList()}
		}
	case 972:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5812
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 973:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5816
		{

			sqlVAL.union.val = tree.ShowLastQueryStatisticsDefaultColumns
		}
	case 974:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5827
		{
			sqlVAL.union.val = &tree.ShowSavepointStatus{}
		}
	case 975:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5830
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 976:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5838
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_isolation"}
		}
	case 977:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5843
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_priority"}
		}
	case 978:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5848
		{

			sqlVAL.union.val = &tree.ShowTransactionStatus{}
		}
	case 979:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5852
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 980:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5864
		{
			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[3].union.unresolvedObjectName()}
		}
	case 981:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5868
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeTable, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 982:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5873
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeView, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 983:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5878
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeSequence, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 984:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5883
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeDatabase, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 985:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5888
		{
			sqlVAL.union.val = &tree.ShowCreateAllSchemas{}
		}
	case 986:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5892
		{
			sqlVAL.union.val = &tree.ShowCreateAllTables{}
		}
	case 987:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5896
		{
			sqlVAL.union.val = &tree.ShowCreateAllTypes{}
		}
	case 988:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5899
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 989:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5909
		{
			sqlVAL.union.val = &tree.ShowCreateSchedules{}
		}
	case 990:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5912
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 991:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5914
		{
			sqlVAL.union.val = &tree.ShowCreateSchedules{ScheduleID: sqlDollar[4].union.expr()}
		}
	case 992:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5917
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 993:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5925
		{
			sqlVAL.union.val = &tree.ShowUsers{}
		}
	case 994:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5928
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 995:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5936
		{
			sqlVAL.union.val = &tree.ShowRoles{}
		}
	case 996:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5939
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 997:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5949
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[6].str)}}
		}
	case 998:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5953
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{Database: tree.Name(sqlDollar[6].str)}}
		}
	case 999:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5957
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 1000:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5965
		{
			name := sqlDollar[9].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 1001:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5973
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 1002:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5980
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[9].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 1003:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5986
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 1004:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5988
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 1005:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5991
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 1006:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5993
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 1007:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5996
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 1009:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6000
		{
		}
	case 1010:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6009
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: tree.TableIndexName{Table: name},
			}
		}
	case 1011:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6017
		{
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: sqlDollar[5].union.tableIndexName(),
			}
		}
	case 1012:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6023
		{
			return helpWith(sqllex, "SHOW RANGE")
		}
	case 1013:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6032
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 1014:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6037
		{
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: sqlDollar[5].union.tableIndexName()}
		}
	case 1015:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6041
		{
			sqlVAL.union.val = &tree.ShowRanges{DatabaseName: tree.Name(sqlDollar[5].str)}
		}
	case 1016:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6044
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 1017:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6053
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{}
		}
	case 1018:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6057
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{
				DatabaseName: tree.Name(sqlDollar[6].str),
			}
		}
	case 1019:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6073
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromCluster,
			}
		}
	case 1020:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6079
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
			}
		}
	case 1021:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6085
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromAllDatabases,
			}
		}
	case 1022:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6091
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
				DatabaseName:    tree.Name(sqlDollar[5].str),
			}
		}
	case 1023:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6098
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDefault,
			}
		}
	case 1024:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6103
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 1025:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6107
		{
			sqlVAL.union.val = &tree.ShowVar{Name: "locality"}
		}
	case 1026:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6113
		{

			sqlVAL.union.val = &tree.ShowFingerprints{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 1027:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6120
		{
			sqlVAL.union.val = &tree.ShowFullTableScans{}
		}
	case 1028:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6126
		{
			tmp := sqlDollar[2].union.targetList()
			sqlVAL.union.val = &tmp
		}
	case 1029:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6131
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 1030:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6251
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 1031:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6255
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 1032:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6259
		{

			sqlVAL.union.val = tree.TargetList{
				Tables:   tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}},
				ForRoles: sqlDollar[1].str == "role",
			}
		}
	case 1033:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6298
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{sqlDollar[1].union.unresolvedName()}}
		}
	case 1034:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6302
		{
			remainderPats := sqlDollar[3].union.tablePatterns()
			sqlVAL.union.val = tree.TargetList{Tables: append(tree.TablePatterns{sqlDollar[1].union.unresolvedName()}, remainderPats...)}
		}
	case 1035:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6307
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 1036:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6311
		{
			tenID := uint64(sqlDollar[2].union.int64())
			if tenID == 0 {
				return setErr(sqllex, errors.New("invalid tenant ID"))
			}
			sqlVAL.union.val = tree.TargetList{Tenant: roachpb.MakeTenantID(tenID)}
		}
	case 1037:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6319
		{
			sqlVAL.union.val = tree.TargetList{Databases: sqlDollar[2].union.nameList()}
		}
	case 1038:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6328
		{
			sqlVAL.union.val = tree.TargetList{ForRoles: true, Roles: sqlDollar[2].union.roleSpecList()}
		}
	case 1039:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6332
		{
			sqlVAL.union.val = tree.TargetList{Schemas: sqlDollar[2].union.objectNamePrefixList()}
		}
	case 1040:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6336
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[2].union.unresolvedObjectNames()}
		}
	case 1042:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6343
		{
			sqlVAL.union.val = sqlDollar[2].union.roleSpecList()
		}
	case 1043:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6347
		{
			sqlVAL.union.val = tree.RoleSpecList(nil)
		}
	case 1045:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6360
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1047:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6361
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1049:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6362
		{
			return helpWith(sqllex, "PAUSE ALL JOBS")
		}
	case 1050:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6363
		{
			return helpWith(sqllex, "PAUSE")
		}
	case 1052:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6373
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1054:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6374
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1056:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6375
		{
			return helpWith(sqllex, "RESUME ALL JOBS")
		}
	case 1057:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6376
		{
			return helpWith(sqllex, "RESUME")
		}
	case 1058:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6384
		{
			sqlVAL.union.val = &tree.ControlJobsOfType{Type: sqlDollar[3].str, Command: tree.ResumeJob}
		}
	case 1059:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6387
		{
			return helpWith(sqllex, "RESUME ALL JOBS")
		}
	case 1060:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6397
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
			}
		}
	case 1061:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6406
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
				Reason:  sqlDollar[7].union.expr(),
			}
		}
	case 1062:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6415
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1063:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6417
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 1064:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6421
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob, Reason: sqlDollar[7].union.expr()}
		}
	case 1065:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6425
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 1066:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6428
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1067:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6433
		{
			sqlVAL.union.val = sqlDollar[3].union.slct()
		}
	case 1068:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6437
		{
			sqlVAL.union.val = &tree.Select{
				Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
			}
		}
	case 1069:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6452
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseSchedule,
			}
		}
	case 1070:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6460
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1071:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6462
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.PauseSchedule,
			}
		}
	case 1072:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6468
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1073:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6476
		{
			sqlVAL.union.val = &tree.ControlJobsOfType{Type: sqlDollar[3].str, Command: tree.PauseJob}
		}
	case 1074:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6479
		{
			return helpWith(sqllex, "PAUSE ALL JOBS")
		}
	case 1075:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6488
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
			}
		}
	case 1076:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6494
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
			}
		}
	case 1077:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6501
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:   sqlDollar[3].union.objectNamePrefix(),
				AuthRole: sqlDollar[5].union.roleSpec(),
			}
		}
	case 1078:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6508
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
				AuthRole:    sqlDollar[8].union.roleSpec(),
			}
		}
	case 1079:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6515
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 1080:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6526
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 1081:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6535
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaOwner{
					Owner: sqlDollar[6].union.roleSpec(),
				},
			}
		}
	case 1082:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6543
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 1083:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:6579
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      false,
				Defs:             sqlDollar[6].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[9].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[10].union.storageParams(),
				OnCommit:         sqlDollar[11].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[12].union.locality(),
			}
		}
	case 1084:
		sqlDollar = sqlS[sqlpt-15 : sqlpt+1]
//line sql-gen.y:6594
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      true,
				Defs:             sqlDollar[9].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[12].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[13].union.storageParams(),
				OnCommit:         sqlDollar[14].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[15].union.locality(),
			}
		}
	case 1085:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6611
		{
			sqlVAL.union.val = sqlDollar[1].union.locality()
		}
	case 1086:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6615
		{
			sqlVAL.union.val = (*tree.Locality)(nil)
		}
	case 1088:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6622
		{

			sqlVAL.union.val = nil
		}
	case 1089:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6628
		{
			return unimplemented(sqllex, "create table with oids")
		}
	case 1090:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6634
		{
			sqlVAL.str = ""
		}
	case 1091:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6638
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "create table inherits")
		}
	case 1092:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6644
		{
			sqlVAL.union.val = nil
		}
	case 1093:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6648
		{
			sqlVAL.union.val = sqlDollar[3].union.storageParams()
		}
	case 1094:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6653
		{
			sqlVAL.union.val = tree.CreateTableOnCommitUnset
		}
	case 1095:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6657
		{
			sqlVAL.union.val = tree.CreateTableOnCommitPreserveRows
		}
	case 1096:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6661
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "delete rows")
		}
	case 1097:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6665
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "drop")
		}
	case 1100:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6675
		{
			sqlVAL.union.val = []tree.Name{tree.Name(sqlDollar[1].str)}
		}
	case 1101:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6679
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParamKeys(), tree.Name(sqlDollar[3].str))
		}
	case 1102:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6685
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 1103:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6691
		{
			sqlVAL.union.val = []tree.StorageParam{sqlDollar[1].union.storageParam()}
		}
	case 1104:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6695
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParams(), sqlDollar[3].union.storageParam())
		}
	case 1105:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6701
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Defs:          sqlDollar[5].union.tblDefs(),
				AsSource:      sqlDollar[8].union.slct(),
				StorageParams: sqlDollar[6].union.storageParams(),
				OnCommit:      sqlDollar[10].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 1106:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:6714
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Defs:          sqlDollar[8].union.tblDefs(),
				AsSource:      sqlDollar[11].union.slct(),
				StorageParams: sqlDollar[9].union.storageParams(),
				OnCommit:      sqlDollar[13].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 1107:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6728
		{
		}
	case 1108:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6729
		{
		}
	case 1109:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6730
		{
			return unimplemented(sqllex, "create table as with no data")
		}
	case 1110:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6748
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1111:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6749
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1112:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6750
		{
			sqlVAL.union.val = tree.PersistencePermanent
		}
	case 1114:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6754
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1115:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6755
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1116:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6756
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1117:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6757
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1118:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6758
		{
			sqlVAL.union.val = tree.PersistenceUnlogged
		}
	case 1120:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6763
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1121:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6769
		{
			sqlVAL.union.val = tree.TableDefs{sqlDollar[1].union.tblDef()}
		}
	case 1122:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6773
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1123:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6779
		{
			sqlVAL.union.val = sqlDollar[1].union.colDef()
		}
	case 1126:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6785
		{
			def := sqlDollar[1].union.constraintDef()
			valBehavior := sqlDollar[2].union.validationBehavior()
			if u, ok := def.(*tree.UniqueConstraintTableDef); ok && valBehavior == tree.ValidationSkip {
				typ := "PRIMARY KEY"
				if !u.PrimaryKey {
					typ = "UNIQUE"
				}
				return purposelyUnimplemented(sqllex, "table constraint", typ+" constraints cannot be marked NOT VALID")
			}
			sqlVAL.union.val = def
		}
	case 1127:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6798
		{
			sqlVAL.union.val = &tree.LikeTableDef{
				Name:    sqlDollar[2].union.unresolvedObjectName().ToTableName(),
				Options: sqlDollar[3].union.likeTableOptionList(),
			}
		}
	case 1128:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6807
		{
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), sqlDollar[3].union.likeTableOption())
		}
	case 1129:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6811
		{
			opt := sqlDollar[3].union.likeTableOption()
			opt.Excluded = true
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), opt)
		}
	case 1130:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6817
		{
			sqlVAL.union.val = []tree.LikeTableOption(nil)
		}
	case 1131:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6822
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding comments")
		}
	case 1132:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6823
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptConstraints}
		}
	case 1133:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6824
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptDefaults}
		}
	case 1134:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6825
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding identity")
		}
	case 1135:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6826
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptGenerated}
		}
	case 1136:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6827
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptIndexes}
		}
	case 1137:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6828
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding statistics")
		}
	case 1138:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6829
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding storage")
		}
	case 1139:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6830
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptAll}
		}
	case 1140:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6835
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1142:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6842
		{
			sqlVAL.str = ""
		}
	case 1144:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6849
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1145:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6855
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1146:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6863
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1147:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6869
		{
			sqlVAL.union.val = (*tree.PartitionByIndex)(nil)
		}
	case 1148:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6875
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1149:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6881
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				All:         true,
				PartitionBy: sqlDollar[4].union.partitionBy(),
			}
		}
	case 1151:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6891
		{
			sqlVAL.union.val = (*tree.PartitionByTable)(nil)
		}
	case 1152:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6897
		{
			sqlVAL.union.val = sqlDollar[3].union.partitionBy()
		}
	case 1153:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6903
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				List:   sqlDollar[6].union.listPartitions(),
			}
		}
	case 1154:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6910
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				Range:  sqlDollar[6].union.rangePartitions(),
			}
		}
	case 1155:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6917
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1156:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6923
		{
			sqlVAL.union.val = []tree.ListPartition{sqlDollar[1].union.listPartition()}
		}
	case 1157:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6927
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listPartitions(), sqlDollar[3].union.listPartition())
		}
	case 1158:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6933
		{
			sqlVAL.union.val = tree.ListPartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				Exprs:        sqlDollar[5].union.exprs(),
				Subpartition: sqlDollar[7].union.partitionBy(),
			}
		}
	case 1159:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6943
		{
			sqlVAL.union.val = []tree.RangePartition{sqlDollar[1].union.rangePartition()}
		}
	case 1160:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6947
		{
			sqlVAL.union.val = append(sqlDollar[1].union.rangePartitions(), sqlDollar[3].union.rangePartition())
		}
	case 1161:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6953
		{
			sqlVAL.union.val = tree.RangePartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				From:         sqlDollar[5].union.exprs(),
				To:           sqlDollar[9].union.exprs(),
				Subpartition: sqlDollar[11].union.partitionBy(),
			}
		}
	case 1162:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6967
		{
			typ := sqlDollar[2].union.typeReference()
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), typ, tree.IsReferenceSerialType(typ), sqlDollar[3].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = tableDef
		}
	case 1163:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6978
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1164:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6982
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1165:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6988
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Name: tree.Name(sqlDollar[2].str), Qualification: sqlDollar[3].union.colQualElem()}
		}
	case 1166:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6992
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1167:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6996
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: tree.ColumnCollation(sqlDollar[2].str)}
		}
	case 1168:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7000
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1169:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7004
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[3].str), Create: true}}
		}
	case 1170:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7008
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Create: true}}
		}
	case 1171:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7012
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[6].str), Create: true, IfNotExists: true}}
		}
	case 1172:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7030
		{
			sqlVAL.union.val = tree.NotNullConstraint{}
		}
	case 1173:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7034
		{
			sqlVAL.union.val = tree.NullConstraint{}
		}
	case 1174:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7038
		{
			sqlVAL.union.val = tree.HiddenConstraint{}
		}
	case 1175:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7042
		{
			sqlVAL.union.val = tree.UniqueConstraint{
				WithoutIndex: sqlDollar[2].union.bool(),
			}
		}
	case 1176:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7048
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{
				StorageParams: sqlDollar[3].union.storageParams(),
			}
		}
	case 1177:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7054
		{
			sqlVAL.union.val = tree.ShardedPrimaryKeyConstraint{
				Sharded:       true,
				ShardBuckets:  sqlDollar[5].union.expr(),
				StorageParams: sqlDollar[6].union.storageParams(),
			}
		}
	case 1178:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7062
		{
			sqlVAL.union.val = &tree.ColumnCheckConstraint{Expr: sqlDollar[3].union.expr()}
		}
	case 1179:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7066
		{
			sqlVAL.union.val = &tree.ColumnDefault{Expr: sqlDollar[2].union.expr()}
		}
	case 1180:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7070
		{
			sqlVAL.union.val = &tree.ColumnOnUpdate{Expr: sqlDollar[3].union.expr()}
		}
	case 1181:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7074
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ColumnFKConstraint{
				Table:   name,
				Col:     tree.Name(sqlDollar[3].str),
				Actions: sqlDollar[5].union.referenceActions(),
				Match:   sqlDollar[4].union.compositeKeyMatchMethod(),
			}
		}
	case 1182:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7084
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: false}
		}
	case 1183:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7088
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: true}
		}
	case 1184:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7092
		{
			sqllex.Error("use AS ( <expr> ) STORED or AS ( <expr> ) VIRTUAL")
			return 1
		}
	case 1185:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7097
		{
			sqlVAL.union.val = &tree.GeneratedAlwaysAsIdentity{
				SeqOptions: sqlDollar[4].union.seqOpts(),
			}
		}
	case 1186:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7103
		{
			sqlVAL.union.val = &tree.GeneratedByDefAsIdentity{
				SeqOptions: sqlDollar[4].union.seqOpts(),
			}
		}
	case 1187:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7109
		{
			sqlVAL.union.val = &tree.GeneratedAlwaysAsIdentity{}
		}
	case 1188:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7113
		{
			sqlVAL.union.val = &tree.GeneratedByDefAsIdentity{}
		}
	case 1189:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7119
		{

			sqlVAL.union.val = true
		}
	case 1190:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7124
		{
			sqlVAL.union.val = false
		}
	case 1191:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7129
		{
		}
	case 1193:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7133
		{
		}
	case 1194:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7136
		{
		}
	case 1195:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7140
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[2].str),
				Columns:          sqlDollar[4].union.idxElems(),
				Sharded:          sqlDollar[6].union.shardedIndexDef(),
				Storing:          sqlDollar[7].union.nameList(),
				PartitionByIndex: sqlDollar[8].union.partitionByIndex(),
				StorageParams:    sqlDollar[9].union.storageParams(),
				Predicate:        sqlDollar[10].union.expr(),
			}
		}
	case 1196:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7152
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Name:             tree.Name(sqlDollar[3].str),
					Columns:          sqlDollar[5].union.idxElems(),
					Sharded:          sqlDollar[7].union.shardedIndexDef(),
					Storing:          sqlDollar[8].union.nameList(),
					PartitionByIndex: sqlDollar[9].union.partitionByIndex(),
					StorageParams:    sqlDollar[10].union.storageParams(),
					Predicate:        sqlDollar[11].union.expr(),
				},
			}
		}
	case 1197:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7166
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[3].str),
				Columns:          sqlDollar[5].union.idxElems(),
				Inverted:         true,
				PartitionByIndex: sqlDollar[7].union.partitionByIndex(),
				StorageParams:    sqlDollar[8].union.storageParams(),
				Predicate:        sqlDollar[9].union.expr(),
			}
		}
	case 1198:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7179
		{
			sqlVAL.union.val = &tree.FamilyTableDef{
				Name:    tree.Name(sqlDollar[2].str),
				Columns: sqlDollar[4].union.nameList(),
			}
		}
	case 1199:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7191
		{
			sqlVAL.union.val = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val.(tree.ConstraintTableDef).SetName(tree.Name(sqlDollar[2].str))
		}
	case 1200:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7196
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1201:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7202
		{
			sqlVAL.union.val = &tree.CheckConstraintTableDef{
				Expr: sqlDollar[3].union.expr(),
			}
		}
	case 1202:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7209
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				WithoutIndex: sqlDollar[2].union.bool(),
				IndexTableDef: tree.IndexTableDef{
					Columns:          sqlDollar[4].union.idxElems(),
					Storing:          sqlDollar[6].union.nameList(),
					PartitionByIndex: sqlDollar[7].union.partitionByIndex(),
					Predicate:        sqlDollar[9].union.expr(),
				},
			}
		}
	case 1203:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7221
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:       sqlDollar[4].union.idxElems(),
					Sharded:       sqlDollar[6].union.shardedIndexDef(),
					StorageParams: sqlDollar[7].union.storageParams(),
				},
				PrimaryKey: true,
			}
		}
	case 1204:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7233
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ForeignKeyConstraintTableDef{
				Table:    name,
				FromCols: sqlDollar[4].union.nameList(),
				ToCols:   sqlDollar[8].union.nameList(),
				Match:    sqlDollar[9].union.compositeKeyMatchMethod(),
				Actions:  sqlDollar[10].union.referenceActions(),
			}
		}
	case 1205:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7244
		{
			return unimplementedWithIssueDetail(sqllex, 46657, "add constraint exclude using")
		}
	case 1206:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7251
		{
			sqlVAL.union.val = sqlDollar[2].union.val
		}
	case 1207:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7255
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1208:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7261
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), nil, false, sqlDollar[2].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef
			sqlVAL.union.val = tree.TableDefs{colToTableDef}
		}
	case 1209:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7271
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[3].str), nil, false, sqlDollar[4].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef

			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), colToTableDef)
		}
	case 1210:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7282
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1211:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7286
		{
			var constraintToTableDef tree.TableDef = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), constraintToTableDef)
		}
	case 1212:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7293
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1213:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7299
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:       sqlDollar[4].union.idxElems(),
					StorageParams: sqlDollar[6].union.storageParams(),
				},
				PrimaryKey: true,
			}
		}
	case 1214:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7311
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1215:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7315
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1216:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7321
		{
			sqlVAL.union.val = tree.IndexElem{Column: tree.Name(sqlDollar[1].str)}
		}
	case 1217:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7327
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1218:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7331
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1219:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7337
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1220:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7341
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1221:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7347
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{
				StorageParams: sqlDollar[3].union.storageParams(),
			}
		}
	case 1222:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7354
		{
		}
	case 1223:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7355
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "deferrable")
		}
	case 1224:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7356
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially deferred")
		}
	case 1225:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7357
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially immediate")
		}
	case 1226:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7358
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially deferred")
		}
	case 1227:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7359
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially immediate")
		}
	case 1231:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7377
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1232:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7381
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1233:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7387
		{
			sqlVAL.union.val = &tree.ShardedIndexDef{
				ShardBuckets: sqlDollar[3].union.expr(),
			}
		}
	case 1234:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7393
		{
			sqlVAL.union.val = (*tree.ShardedIndexDef)(nil)
		}
	case 1235:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7399
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 1236:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7403
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 1237:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7409
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1238:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7413
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1239:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7433
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1240:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7437
		{
			sqlVAL.union.val = tree.MatchFull
		}
	case 1241:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7441
		{
			return unimplementedWithIssueDetail(sqllex, 20305, "match partial")
		}
	case 1242:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7445
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1243:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7454
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction()}
		}
	case 1244:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7458
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction()}
		}
	case 1245:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7462
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction(), Delete: sqlDollar[2].union.referenceAction()}
		}
	case 1246:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7466
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction(), Update: sqlDollar[2].union.referenceAction()}
		}
	case 1247:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7470
		{
			sqlVAL.union.val = tree.ReferenceActions{}
		}
	case 1248:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7476
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1249:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7482
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1250:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7490
		{
			sqlVAL.union.val = tree.NoAction
		}
	case 1251:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7494
		{
			sqlVAL.union.val = tree.Restrict
		}
	case 1252:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7498
		{
			sqlVAL.union.val = tree.Cascade
		}
	case 1253:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7502
		{
			sqlVAL.union.val = tree.SetNull
		}
	case 1254:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7506
		{
			sqlVAL.union.val = tree.SetDefault
		}
	case 1255:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7526
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name:        name,
				Persistence: sqlDollar[2].union.persistence(),
				Options:     sqlDollar[5].union.seqOpts(),
			}
		}
	case 1256:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7535
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name: name, Options: sqlDollar[8].union.seqOpts(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
			}
		}
	case 1257:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7543
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 1259:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7547
		{
			sqlVAL.union.val = []tree.SequenceOption(nil)
		}
	case 1260:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7550
		{
			sqlVAL.union.val = []tree.SequenceOption{sqlDollar[1].union.seqOpt()}
		}
	case 1261:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7551
		{
			sqlVAL.union.val = append(sqlDollar[1].union.seqOpts(), sqlDollar[2].union.seqOpt())
		}
	case 1262:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7554
		{

			parsedType := sqlDollar[2].union.colType()
			if parsedType.Family() != types.IntFamily {
				sqllex.Error(fmt.Sprintf("invalid integer type: %s", parsedType.SQLString()))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptAs, AsIntegerType: parsedType}
		}
	case 1263:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7563
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCycle}
		}
	case 1264:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7565
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptNoCycle}
		}
	case 1265:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7566
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: nil}
		}
	case 1266:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7567
		{
			varName, err := sqlDollar[3].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[3].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: columnItem}
		}
	case 1267:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7577
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCache, IntVal: &x}
		}
	case 1268:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7579
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x}
		}
	case 1269:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7581
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x, OptionalWord: true}
		}
	case 1270:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7583
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue, IntVal: &x}
		}
	case 1271:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7585
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue}
		}
	case 1272:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7586
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue, IntVal: &x}
		}
	case 1273:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7588
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue}
		}
	case 1274:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7589
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x}
		}
	case 1275:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7591
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x, OptionalWord: true}
		}
	case 1276:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7593
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptVirtual}
		}
	case 1277:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7601
		{
			sqlVAL.union.val = &tree.Truncate{Tables: sqlDollar[3].union.tableNames(), DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 1278:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7604
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 1279:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7608
		{

			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[2].str), Value: sqlDollar[3].union.expr()}
		}
	case 1280:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7614
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[2].union.expr()}
		}
	case 1281:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7618
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: tree.DNull}
		}
	case 1282:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7628
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[3].union.roleSpec(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1283:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7632
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[6].union.roleSpec(), IfNotExists: true, KVOptions: sqlDollar[7].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1284:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7635
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 1285:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7646
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[3].union.roleSpec(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1286:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7650
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[5].union.roleSpec(), IfExists: true, KVOptions: sqlDollar[6].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1287:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7654
		{
			sqlVAL.union.val = &tree.AlterRoleSet{RoleName: sqlDollar[3].union.roleSpec(), DatabaseName: tree.Name(sqlDollar[4].str), IsRole: sqlDollar[2].union.bool(), SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1288:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7658
		{
			sqlVAL.union.val = &tree.AlterRoleSet{RoleName: sqlDollar[5].union.roleSpec(), IfExists: true, DatabaseName: tree.Name(sqlDollar[6].str), IsRole: sqlDollar[2].union.bool(), SetOrReset: sqlDollar[7].union.setVar()}
		}
	case 1289:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7662
		{
			sqlVAL.union.val = &tree.AlterRoleSet{AllRoles: true, DatabaseName: tree.Name(sqlDollar[4].str), IsRole: true, SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1290:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7666
		{
			sqlVAL.union.val = &tree.AlterRoleSet{AllRoles: true, DatabaseName: tree.Name(sqlDollar[4].str), IsRole: false, SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1291:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7669
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 1292:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7673
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1293:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7677
		{
			sqlVAL.str = ""
		}
	case 1294:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7683
		{
			sqlVAL.union.val = sqlDollar[2].union.setVar()
		}
	case 1295:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7687
		{
			sqlVAL.union.val = &tree.SetVar{ResetAll: true}
		}
	case 1296:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7691
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 1297:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7699
		{
			sqlVAL.union.val = true
		}
	case 1298:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7703
		{

			sqlVAL.union.val = true
		}
	case 1299:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7708
		{
			sqlVAL.union.val = false
		}
	case 1300:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7718
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[6].union.nameList(),
				AsSource:    sqlDollar[8].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: false,
				Replace:     false,
			}
		}
	case 1301:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7732
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[8].union.nameList(),
				AsSource:    sqlDollar[10].union.slct(),
				Persistence: sqlDollar[4].union.persistence(),
				IfNotExists: false,
				Replace:     true,
			}
		}
	case 1302:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7744
		{
			name := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[9].union.nameList(),
				AsSource:    sqlDollar[11].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
				Replace:     false,
			}
		}
	case 1303:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7756
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[5].union.nameList(),
				AsSource:     sqlDollar[7].union.slct(),
				Materialized: true,
			}
		}
	case 1304:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7766
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[8].union.nameList(),
				AsSource:     sqlDollar[10].union.slct(),
				Materialized: true,
				IfNotExists:  true,
			}
		}
	case 1305:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7776
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 1306:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7780
		{
			return unimplementedWithIssue(sqllex, 74083)
		}
	case 1307:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7784
		{
			sqlVAL.union.val = true
		}
	case 1308:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7788
		{
			sqlVAL.union.val = true
		}
	case 1309:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7794
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1310:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7798
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1311:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7802
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1312:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7806
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1313:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7810
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1314:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7814
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1315:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7818
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1316:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7822
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1317:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7826
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1318:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7830
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1319:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7834
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1320:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7838
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1321:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7842
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1322:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7846
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1323:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7850
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1324:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7854
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1325:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7858
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1326:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7862
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1327:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7866
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1328:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7870
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1329:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7874
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1330:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7878
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1333:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7886
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 1334:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7890
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[2].union.kvOption())
		}
	case 1335:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7896
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 1336:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7900
		{
			sqlVAL.union.val = nil
		}
	case 1337:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7906
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name("valid until"), Value: sqlDollar[3].union.expr()}
		}
	case 1338:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7910
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name("valid until"), Value: tree.DNull}
		}
	case 1339:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7915
		{
		}
	case 1340:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7916
		{
			return unimplemented(sqllex, "create recursive view")
		}
	case 1341:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7925
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:   sqlDollar[3].union.unresolvedObjectName(),
				Variety:    tree.Enum,
				EnumLabels: sqlDollar[7].union.enumValueList(),
			}
		}
	case 1342:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7933
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:    sqlDollar[6].union.unresolvedObjectName(),
				Variety:     tree.Enum,
				EnumLabels:  sqlDollar[10].union.enumValueList(),
				IfNotExists: true,
			}
		}
	case 1343:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7941
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 1344:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7943
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1345:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7945
		{
			return unimplementedWithIssue(sqllex, 27791)
		}
	case 1346:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7947
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "base")
		}
	case 1347:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7949
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "shell")
		}
	case 1348:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7951
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "create")
		}
	case 1349:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7955
		{
			sqlVAL.union.val = sqlDollar[1].union.enumValueList()
		}
	case 1350:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7959
		{
			sqlVAL.union.val = tree.EnumValueList(nil)
		}
	case 1351:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7965
		{
			sqlVAL.union.val = tree.EnumValueList{tree.EnumValue(sqlDollar[1].str)}
		}
	case 1352:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7969
		{
			sqlVAL.union.val = append(sqlDollar[1].union.enumValueList(), tree.EnumValue(sqlDollar[3].str))
		}
	case 1353:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:7986
		{
			table := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[5].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Columns:          sqlDollar[10].union.idxElems(),
				Sharded:          sqlDollar[12].union.shardedIndexDef(),
				Storing:          sqlDollar[13].union.nameList(),
				PartitionByIndex: sqlDollar[14].union.partitionByIndex(),
				StorageParams:    sqlDollar[15].union.storageParams(),
				Predicate:        sqlDollar[16].union.expr(),
				Inverted:         sqlDollar[8].union.bool(),
				Concurrently:     sqlDollar[4].union.bool(),
			}
		}
	case 1354:
		sqlDollar = sqlS[sqlpt-19 : sqlpt+1]
//line sql-gen.y:8003
		{
			table := sqlDollar[10].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[8].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Sharded:          sqlDollar[15].union.shardedIndexDef(),
				Storing:          sqlDollar[16].union.nameList(),
				PartitionByIndex: sqlDollar[17].union.partitionByIndex(),
				Inverted:         sqlDollar[11].union.bool(),
				StorageParams:    sqlDollar[18].union.storageParams(),
				Predicate:        sqlDollar[19].union.expr(),
				Concurrently:     sqlDollar[4].union.bool(),
			}
		}
	case 1355:
		sqlDollar = sqlS[sqlpt-15 : sqlpt+1]
//line sql-gen.y:8021
		{
			table := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[6].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				Columns:          sqlDollar[10].union.idxElems(),
				Storing:          sqlDollar[12].union.nameList(),
				PartitionByIndex: sqlDollar[13].union.partitionByIndex(),
				StorageParams:    sqlDollar[14].union.storageParams(),
				Predicate:        sqlDollar[15].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
			}
		}
	case 1356:
		sqlDollar = sqlS[sqlpt-18 : sqlpt+1]
//line sql-gen.y:8037
		{
			table := sqlDollar[11].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[9].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Storing:          sqlDollar[15].union.nameList(),
				PartitionByIndex: sqlDollar[16].union.partitionByIndex(),
				StorageParams:    sqlDollar[17].union.storageParams(),
				Predicate:        sqlDollar[18].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
			}
		}
	case 1357:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8053
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 1358:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8057
		{

			switch sqlDollar[2].str {
			case "gin", "gist":
				sqlVAL.union.val = true
			case "btree":
				sqlVAL.union.val = false
			case "hash", "spgist", "brin":
				return unimplemented(sqllex, "index using "+sqlDollar[2].str)
			default:
				sqllex.Error("unrecognized access method: " + sqlDollar[2].str)
				return 1
			}
		}
	case 1359:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8072
		{
			sqlVAL.union.val = false
		}
	case 1360:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8078
		{
			sqlVAL.union.val = true
		}
	case 1361:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8082
		{
			sqlVAL.union.val = false
		}
	case 1362:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8088
		{
			sqlVAL.union.val = true
		}
	case 1363:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8092
		{
			sqlVAL.union.val = false
		}
	case 1364:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8098
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1365:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8102
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1366:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8111
		{
			e := sqlDollar[2].union.idxElem()
			e.Expr = sqlDollar[1].union.expr()
			sqlVAL.union.val = e
		}
	case 1367:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8117
		{
			e := sqlDollar[4].union.idxElem()
			e.Expr = sqlDollar[2].union.expr()
			sqlVAL.union.val = e
		}
	case 1368:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8123
		{
			e := sqlDollar[2].union.idxElem()
			e.Column = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = e
		}
	case 1369:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8131
		{

			opClass := sqlDollar[1].str
			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()
			if opClass != "" {
				if opClass == "gin_trgm_ops" || opClass == "gist_trgm_ops" {
					return unimplementedWithIssueDetail(sqllex, 41285, "index using "+opClass)
				}
				return unimplementedWithIssue(sqllex, 47420)
			}

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = tree.IndexElem{Direction: dir, NullsOrder: nullsOrder}
		}
	case 1370:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8155
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1371:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8156
		{
			sqlVAL.str = ""
		}
	case 1372:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8159
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1373:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8160
		{
			sqlVAL.str = ""
		}
	case 1374:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8164
		{
			sqlVAL.union.val = tree.Ascending
		}
	case 1375:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8168
		{
			sqlVAL.union.val = tree.Descending
		}
	case 1376:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8172
		{
			sqlVAL.union.val = tree.DefaultDirection
		}
	case 1377:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8178
		{
			sqlVAL.union.val = &tree.ReparentDatabase{Name: tree.Name(sqlDollar[3].str), Parent: tree.Name(sqlDollar[9].str)}
		}
	case 1378:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8184
		{
			sqlVAL.union.val = &tree.RenameDatabase{Name: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[6].str)}
		}
	case 1379:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8190
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: false}
		}
	case 1380:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8196
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: false}
		}
	case 1381:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8204
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false,
			}
		}
	case 1382:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8210
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true,
			}
		}
	case 1383:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8218
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Locality: sqlDollar[5].union.locality(),
				IfExists: false,
			}
		}
	case 1384:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8226
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Locality: sqlDollar[7].union.locality(),
				IfExists: true,
			}
		}
	case 1385:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8236
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelGlobal,
			}
		}
	case 1386:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8242
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[6].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1387:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8249
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1388:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8255
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1389:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8261
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[4].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1390:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8268
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1391:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8274
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1392:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8280
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelRow,
			}
		}
	case 1393:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8286
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel:       tree.LocalityLevelRow,
				RegionalByRowColumn: tree.Name(sqlDollar[6].str),
			}
		}
	case 1394:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8295
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.roleSpec(),
				IfExists: false,
			}
		}
	case 1395:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8303
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.roleSpec(),
				IfExists: true,
			}
		}
	case 1396:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8313
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsView: true,
			}
		}
	case 1397:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8319
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[7].str),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1398:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8329
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsView: true,
			}
		}
	case 1399:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8335
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[9].str),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1400:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8347
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.roleSpec(),
				IfExists: false,
				IsView:   true,
			}
		}
	case 1401:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8356
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Owner:          sqlDollar[7].union.roleSpec(),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1402:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8366
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.roleSpec(),
				IfExists: true,
				IsView:   true,
			}
		}
	case 1403:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8375
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Owner:          sqlDollar[9].union.roleSpec(),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1404:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8387
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsSequence: true,
			}
		}
	case 1405:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8393
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsSequence: true,
			}
		}
	case 1406:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8401
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[3].union.unresolvedObjectName(),
				Owner:      sqlDollar[6].union.roleSpec(),
				IfExists:   false,
				IsSequence: true,
			}
		}
	case 1407:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8410
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[5].union.unresolvedObjectName(),
				Owner:      sqlDollar[8].union.roleSpec(),
				IfExists:   true,
				IsSequence: true,
			}
		}
	case 1408:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8421
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: true}
		}
	case 1409:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8427
		{
			name := sqlDollar[4].union.unresolvedObjectName()
			newName := sqlDollar[7].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1410:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8439
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: true}
		}
	case 1411:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8445
		{
			name := sqlDollar[6].union.unresolvedObjectName()
			newName := sqlDollar[9].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1412:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8459
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsSequence: true}
		}
	case 1413:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8465
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsSequence: true}
		}
	case 1414:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8473
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[3].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[6].str), IfExists: false}
		}
	case 1415:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8477
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[5].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[8].str), IfExists: true}
		}
	case 1416:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8489
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				Roles:   sqlDollar[4].union.roleSpecList(),
				Schemas: sqlDollar[5].union.objectNamePrefixList(),
				Grant:   sqlDollar[6].union.abbreviatedGrant(),
				IsGrant: true,
			}
		}
	case 1417:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8498
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				Roles:   sqlDollar[4].union.roleSpecList(),
				Schemas: sqlDollar[5].union.objectNamePrefixList(),
				Revoke:  sqlDollar[6].union.abbreviatedRevoke(),
				IsGrant: false,
			}
		}
	case 1418:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8507
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				ForAllRoles: true,
				Schemas:     sqlDollar[7].union.objectNamePrefixList(),
				Grant:       sqlDollar[8].union.abbreviatedGrant(),
				IsGrant:     true,
			}
		}
	case 1419:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8516
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				ForAllRoles: true,
				Schemas:     sqlDollar[7].union.objectNamePrefixList(),
				Revoke:      sqlDollar[8].union.abbreviatedRevoke(),
				IsGrant:     false,
			}
		}
	case 1420:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8524
		{
			return helpWith(sqllex, "ALTER DEFAULT PRIVILEGES")
		}
	case 1421:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8528
		{
			sqlVAL.union.val = tree.AbbreviatedGrant{
				Privileges:      sqlDollar[2].union.privilegeList(),
				Target:          sqlDollar[4].union.alterDefaultPrivilegesTargetObject(),
				Grantees:        sqlDollar[6].union.roleSpecList(),
				WithGrantOption: sqlDollar[7].union.bool(),
			}
		}
	case 1422:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8539
		{
			sqlVAL.union.val = true
		}
	case 1423:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8543
		{
			sqlVAL.union.val = false
		}
	case 1424:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8549
		{
			sqlVAL.union.val = tree.AbbreviatedRevoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Target:     sqlDollar[4].union.alterDefaultPrivilegesTargetObject(),
				Grantees:   sqlDollar[6].union.roleSpecList(),
			}
		}
	case 1425:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:8557
		{
			sqlVAL.union.val = tree.AbbreviatedRevoke{
				Privileges:     sqlDollar[5].union.privilegeList(),
				Target:         sqlDollar[7].union.alterDefaultPrivilegesTargetObject(),
				Grantees:       sqlDollar[9].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 1426:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8568
		{
			sqlVAL.union.val = tree.Tables
		}
	case 1427:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8572
		{
			sqlVAL.union.val = tree.Sequences
		}
	case 1428:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8576
		{
			sqlVAL.union.val = tree.Types
		}
	case 1429:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8580
		{
			sqlVAL.union.val = tree.Schemas
		}
	case 1430:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8584
		{
			return unimplemented(sqllex, "ALTER DEFAULT PRIVILEGES ... ON FUNCTIONS ...")
		}
	case 1431:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8588
		{
			return unimplemented(sqllex, "ALTER DEFAULT PRIVILEGES ... ON FUNCTIONS ...")
		}
	case 1432:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8594
		{
			sqlVAL.union.val = sqlDollar[3].union.roleSpecList()
		}
	case 1433:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8597
		{
			sqlVAL.union.val = tree.RoleSpecList(nil)
		}
	case 1434:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8603
		{
			sqlVAL.union.val = sqlDollar[3].union.objectNamePrefixList()
		}
	case 1435:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8607
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{}
		}
	case 1436:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8612
		{
		}
	case 1437:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8613
		{
		}
	case 1438:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8616
		{
		}
	case 1439:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8617
		{
		}
	case 1440:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8625
		{
			sqlVAL.union.val = &tree.ReleaseSavepoint{Savepoint: tree.Name(sqlDollar[2].str)}
		}
	case 1441:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8628
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 1442:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8638
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeJob,
			}
		}
	case 1443:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8646
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1444:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8648
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1445:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8652
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1446:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8655
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1447:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8668
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeSchedule,
			}
		}
	case 1448:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8676
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1449:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8678
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.ResumeSchedule,
			}
		}
	case 1450:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8684
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1451:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8697
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.DropSchedule,
			}
		}
	case 1452:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8705
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1453:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8707
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.DropSchedule,
			}
		}
	case 1454:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8713
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1455:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8721
		{
			sqlVAL.union.val = &tree.Savepoint{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1456:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8724
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 1458:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8728
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1460:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8729
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1462:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8730
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1464:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8746
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1465:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8749
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1466:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8751
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1467:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8754
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1468:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8764
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1469:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8767
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1470:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8769
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1471:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8772
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1472:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8776
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1473:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8781
		{
		}
	case 1474:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8782
		{
		}
	case 1475:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8783
		{
		}
	case 1476:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8793
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1477:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8797
		{
			sqlVAL.union.val = &tree.RollbackToSavepoint{Savepoint: tree.Name(sqlDollar[4].str)}
		}
	case 1478:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8800
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1479:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8803
		{
		}
	case 1480:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8804
		{
		}
	case 1481:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8808
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1482:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8812
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1483:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8818
		{
			sqlVAL.union.val = &tree.BeginTransaction{Modes: sqlDollar[1].union.transactionModes()}
		}
	case 1484:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8822
		{
			sqlVAL.union.val = &tree.BeginTransaction{}
		}
	case 1485:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8828
		{
			sqlVAL.union.val = sqlDollar[1].union.transactionModes()
		}
	case 1486:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8832
		{
			a := sqlDollar[1].union.transactionModes()
			b := sqlDollar[3].union.transactionModes()
			err := a.Merge(b)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1487:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8845
		{
		}
	case 1488:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8847
		{
		}
	case 1489:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8851
		{

			sqlVAL.union.val = tree.TransactionModes{Isolation: sqlDollar[1].union.isoLevel()}
		}
	case 1490:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8856
		{
			sqlVAL.union.val = tree.TransactionModes{UserPriority: sqlDollar[1].union.userPriority()}
		}
	case 1491:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8860
		{
			sqlVAL.union.val = tree.TransactionModes{ReadWriteMode: sqlDollar[1].union.readWriteMode()}
		}
	case 1492:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8864
		{
			sqlVAL.union.val = tree.TransactionModes{AsOf: sqlDollar[1].union.asOfClause()}
		}
	case 1493:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8868
		{
			sqlVAL.union.val = tree.TransactionModes{Deferrable: sqlDollar[1].union.deferrableMode()}
		}
	case 1494:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8874
		{
			sqlVAL.union.val = sqlDollar[2].union.userPriority()
		}
	case 1495:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8880
		{
			sqlVAL.union.val = sqlDollar[3].union.isoLevel()
		}
	case 1496:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8886
		{
			sqlVAL.union.val = tree.ReadOnly
		}
	case 1497:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8890
		{
			sqlVAL.union.val = tree.ReadWrite
		}
	case 1498:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8896
		{
			sqlVAL.union.val = tree.Deferrable
		}
	case 1499:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8900
		{
			sqlVAL.union.val = tree.NotDeferrable
		}
	case 1500:
		sqlDollar = sqlS[sqlpt-14 : sqlpt+1]
//line sql-gen.y:8910
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				Name:            tree.Name(sqlDollar[3].str),
				Template:        sqlDollar[5].str,
				Encoding:        sqlDollar[6].str,
				Collate:         sqlDollar[7].str,
				CType:           sqlDollar[8].str,
				ConnectionLimit: sqlDollar[9].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[10].str),
				Regions:         sqlDollar[11].union.nameList(),
				SurvivalGoal:    sqlDollar[12].union.survivalGoal(),
				Placement:       sqlDollar[13].union.dataPlacement(),
				Owner:           sqlDollar[14].union.roleSpec(),
			}
		}
	case 1501:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:8926
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				IfNotExists:     true,
				Name:            tree.Name(sqlDollar[6].str),
				Template:        sqlDollar[8].str,
				Encoding:        sqlDollar[9].str,
				Collate:         sqlDollar[10].str,
				CType:           sqlDollar[11].str,
				ConnectionLimit: sqlDollar[12].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[13].str),
				Regions:         sqlDollar[14].union.nameList(),
				SurvivalGoal:    sqlDollar[15].union.survivalGoal(),
				Placement:       sqlDollar[16].union.dataPlacement(),
			}
		}
	case 1502:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8941
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 1504:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8946
		{
			sqlVAL.str = ""
		}
	case 1505:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8951
		{
			sqlVAL.str = sqlDollar[4].str
		}
	case 1507:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8958
		{
			sqlVAL.union.val = tree.DataPlacementUnspecified
		}
	case 1508:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8964
		{

			sqlVAL.union.val = tree.DataPlacementRestricted
		}
	case 1509:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8969
		{

			sqlVAL.union.val = tree.DataPlacementDefault
		}
	case 1510:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8976
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1511:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8980
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1512:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8986
		{

		}
	case 1514:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8993
		{
			sqlVAL.union.val = tree.SurvivalGoalRegionFailure
		}
	case 1515:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8997
		{
			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1516:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9001
		{

			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1518:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9010
		{
			sqlVAL.union.val = tree.SurvivalGoalDefault
		}
	case 1519:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9016
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1520:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9020
		{
			sqlVAL.str = ""
		}
	case 1521:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9026
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1522:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9030
		{
			sqlVAL.str = ""
		}
	case 1523:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9036
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1524:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9040
		{
			sqlVAL.str = ""
		}
	case 1525:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9046
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1526:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9050
		{
			sqlVAL.str = ""
		}
	case 1527:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9056
		{
			ret, err := sqlDollar[4].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = ret
		}
	case 1528:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9064
		{
			sqlVAL.union.val = int32(-1)
		}
	case 1529:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9070
		{
			sqlVAL.union = sqlDollar[3].union
		}
	case 1530:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9074
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.CurrentUser,
			}
		}
	case 1531:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9081
		{
		}
	case 1532:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9082
		{
		}
	case 1533:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9097
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1534:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9104
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = sqlDollar[6].union.onConflict()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[7].union.retClause()
		}
	case 1535:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9111
		{
			return helpWith(sqllex, "INSERT")
		}
	case 1536:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9122
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = &tree.OnConflict{}
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1537:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9129
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 1538:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9133
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &name
		}
	case 1539:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9142
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &name, As: tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}}
		}
	case 1540:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9147
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1541:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9153
		{
			sqlVAL.union.val = &tree.Insert{Rows: sqlDollar[1].union.slct()}
		}
	case 1542:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9157
		{
			sqlVAL.union.val = &tree.Insert{Columns: sqlDollar[2].union.nameList(), Rows: sqlDollar[4].union.slct()}
		}
	case 1543:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9161
		{
			sqlVAL.union.val = &tree.Insert{Rows: &tree.Select{}}
		}
	case 1544:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9167
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1545:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9171
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1547:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9191
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1548:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9195
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:   tree.NameList(nil),
				DoNothing: true,
			}
		}
	case 1549:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9202
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				DoNothing:        true,
			}
		}
	case 1550:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:9210
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				Exprs:            sqlDollar[10].union.updateExprs(),
				Where:            tree.NewWhere(tree.AstWhere, sqlDollar[11].union.expr()),
			}
		}
	case 1551:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9219
		{
			sqlVAL.union.val = &tree.OnConflict{
				Constraint: tree.Name(sqlDollar[5].str),
				DoNothing:  true,
			}
		}
	case 1552:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:9226
		{
			sqlVAL.union.val = &tree.OnConflict{
				Constraint: tree.Name(sqlDollar[5].str),
				Exprs:      sqlDollar[9].union.updateExprs(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[10].union.expr()),
			}
		}
	case 1553:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9236
		{
			ret := tree.ReturningExprs(sqlDollar[2].union.selExprs())
			sqlVAL.union.val = &ret
		}
	case 1554:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9241
		{
			sqlVAL.union.val = tree.ReturningNothingClause
		}
	case 1555:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9245
		{
			sqlVAL.union.val = tree.AbsentReturningClause
		}
	case 1556:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:9262
		{
			sqlVAL.union.val = &tree.Update{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[3].union.tblExpr(),
				Exprs:     sqlDollar[5].union.updateExprs(),
				From:      sqlDollar[6].union.tblExprs(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[7].union.expr()),
				OrderBy:   sqlDollar[8].union.orderBy(),
				Limit:     sqlDollar[9].union.limit(),
				Returning: sqlDollar[10].union.retClause(),
			}
		}
	case 1557:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9274
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 1558:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9277
		{
			sqlVAL.union.val = sqlDollar[2].union.tblExprs()
		}
	case 1559:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9280
		{
			sqlVAL.union.val = tree.TableExprs{}
		}
	case 1560:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9286
		{
			sqlVAL.union.val = tree.UpdateExprs{sqlDollar[1].union.updateExpr()}
		}
	case 1561:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9290
		{
			sqlVAL.union.val = append(sqlDollar[1].union.updateExprs(), sqlDollar[3].union.updateExpr())
		}
	case 1564:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9303
		{
			sqlVAL.union.val = &tree.UpdateExpr{Names: tree.NameList{tree.Name(sqlDollar[1].str)}, Expr: sqlDollar[3].union.expr()}
		}
	case 1565:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9306
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1566:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9310
		{
			sqlVAL.union.val = &tree.UpdateExpr{Tuple: true, Names: sqlDollar[2].union.nameList(), Expr: sqlDollar[5].union.expr()}
		}
	case 1567:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9321
		{
			sqlVAL.union.val = &tree.ReassignOwnedBy{
				OldRoles: sqlDollar[4].union.roleSpecList(),
				NewRole:  sqlDollar[6].union.roleSpec(),
			}
		}
	case 1568:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9327
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 1569:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9336
		{
			sqlVAL.union.val = &tree.DropOwnedBy{
				Roles:        sqlDollar[4].union.roleSpecList(),
				DropBehavior: sqlDollar[5].union.dropBehavior(),
			}
		}
	case 1570:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9342
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 1572:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9383
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1573:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9389
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: sqlDollar[2].union.slct()}
		}
	case 1574:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9393
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: &tree.Select{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1575:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9408
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1576:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9412
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy()}
		}
	case 1577:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9416
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[3].union.lockingClause()}
		}
	case 1578:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9420
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[3].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1579:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9424
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt()}
		}
	case 1580:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9428
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy()}
		}
	case 1581:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9432
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[5].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1582:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9436
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[5].union.lockingClause()}
		}
	case 1583:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9441
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1584:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9442
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1585:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9445
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1586:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9446
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1587:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9450
		{
			sqlVAL.union.val = tree.LockingClause{sqlDollar[1].union.lockingItem()}
		}
	case 1588:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9454
		{
			sqlVAL.union.val = append(sqlDollar[1].union.lockingClause(), sqlDollar[2].union.lockingItem())
		}
	case 1589:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9460
		{
			sqlVAL.union.val = &tree.LockingItem{
				Strength:   sqlDollar[1].union.lockingStrength(),
				Targets:    sqlDollar[2].union.tableNames(),
				WaitPolicy: sqlDollar[3].union.lockingWaitPolicy(),
			}
		}
	case 1590:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9469
		{
			sqlVAL.union.val = tree.ForUpdate
		}
	case 1591:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9470
		{
			sqlVAL.union.val = tree.ForNoKeyUpdate
		}
	case 1592:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9471
		{
			sqlVAL.union.val = tree.ForShare
		}
	case 1593:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9472
		{
			sqlVAL.union.val = tree.ForKeyShare
		}
	case 1594:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9475
		{
			sqlVAL.union.val = tree.TableNames{}
		}
	case 1595:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9476
		{
			sqlVAL.union.val = sqlDollar[2].union.tableNames()
		}
	case 1596:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9479
		{
			sqlVAL.union.val = tree.LockWaitBlock
		}
	case 1597:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9480
		{
			sqlVAL.union.val = tree.LockWaitSkip
		}
	case 1598:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9481
		{
			sqlVAL.union.val = tree.LockWaitError
		}
	case 1599:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9486
		{
			return helpWith(sqllex, "<SELECTCLAUSE>")
		}
	case 1603:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9521
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1605:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9522
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1607:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9523
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1609:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9545
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:   sqlDollar[3].union.selExprs(),
				From:    sqlDollar[4].union.from(),
				Where:   tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy: sqlDollar[6].union.groupBy(),
				Having:  tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:  sqlDollar[8].union.window(),
			}
		}
	case 1610:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9558
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct: sqlDollar[2].union.bool(),
				Exprs:    sqlDollar[3].union.selExprs(),
				From:     sqlDollar[4].union.from(),
				Where:    tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:  sqlDollar[6].union.groupBy(),
				Having:   tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:   sqlDollar[8].union.window(),
			}
		}
	case 1611:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9572
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct:   true,
				DistinctOn: sqlDollar[2].union.distinctOn(),
				Exprs:      sqlDollar[3].union.selExprs(),
				From:       sqlDollar[4].union.from(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:    sqlDollar[6].union.groupBy(),
				Having:     tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:     sqlDollar[8].union.window(),
			}
		}
	case 1612:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9584
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1613:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9588
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.UnionOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1614:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9597
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.IntersectOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1615:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9606
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.ExceptOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1616:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9621
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:       tree.SelectExprs{tree.StarSelectExpr()},
				From:        tree.From{Tables: tree.TableExprs{sqlDollar[2].union.tblExpr()}},
				TableSelect: true,
			}
		}
	case 1617:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9628
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1618:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9640
		{
			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1619:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9644
		{

			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1620:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9649
		{
			sqlVAL.union.val = &tree.With{Recursive: true, CTEList: sqlDollar[3].union.ctes()}
		}
	case 1621:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9655
		{
			sqlVAL.union.val = []*tree.CTE{sqlDollar[1].union.cte()}
		}
	case 1622:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9659
		{
			sqlVAL.union.val = append(sqlDollar[1].union.ctes(), sqlDollar[3].union.cte())
		}
	case 1623:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9665
		{
			sqlVAL.union.val = true
		}
	case 1624:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9669
		{
			sqlVAL.union.val = false
		}
	case 1625:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9675
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Set: false,
				},
				Stmt: sqlDollar[5].union.stmt(),
			}
		}
	case 1626:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9685
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Materialize: sqlDollar[4].union.bool(),
					Set:         true,
				},
				Stmt: sqlDollar[6].union.stmt(),
			}
		}
	case 1627:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9697
		{
		}
	case 1628:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9698
		{
		}
	case 1629:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9702
		{
			sqlVAL.union.val = sqlDollar[1].union.with()
		}
	case 1630:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9706
		{
			sqlVAL.union.val = nil
		}
	case 1631:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9711
		{
		}
	case 1632:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9712
		{
		}
	case 1633:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9716
		{
			sqlVAL.union.val = true
		}
	case 1634:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9720
		{
			sqlVAL.union.val = false
		}
	case 1635:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9724
		{
			sqlVAL.union.val = false
		}
	case 1636:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9730
		{
			sqlVAL.union.val = true
		}
	case 1637:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9736
		{
			sqlVAL.union.val = tree.DistinctOn(sqlDollar[4].union.exprs())
		}
	case 1638:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9741
		{
		}
	case 1639:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9742
		{
		}
	case 1640:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9745
		{
		}
	case 1641:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9746
		{
		}
	case 1642:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9750
		{
			sqlVAL.union.val = sqlDollar[1].union.orderBy()
		}
	case 1643:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9754
		{
			sqlVAL.union.val = tree.OrderBy(nil)
		}
	case 1644:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9760
		{
			sqlVAL.union.val = tree.OrderBy(sqlDollar[3].union.orders())
		}
	case 1645:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9766
		{
			sqlVAL.union.val = tree.OrderBy([]*tree.Order{sqlDollar[3].union.order()})
		}
	case 1646:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9770
		{
			sqllex.Error("multiple ORDER BY clauses are not supported in this function")
			return 1
		}
	case 1647:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9777
		{
			sqlVAL.union.val = []*tree.Order{sqlDollar[1].union.order()}
		}
	case 1648:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9781
		{
			sqlVAL.union.val = append(sqlDollar[1].union.orders(), sqlDollar[3].union.order())
		}
	case 1649:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9787
		{

			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()
			sqlVAL.union.val = &tree.Order{
				OrderType:  tree.OrderByColumn,
				Expr:       sqlDollar[1].union.expr(),
				Direction:  dir,
				NullsOrder: nullsOrder,
			}
		}
	case 1650:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9799
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{OrderType: tree.OrderByIndex, Direction: sqlDollar[4].union.dir(), Table: name}
		}
	case 1651:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9804
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{
				OrderType: tree.OrderByIndex,
				Direction: sqlDollar[5].union.dir(),
				Table:     name,
				Index:     tree.UnrestrictedName(sqlDollar[4].str),
			}
		}
	case 1652:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9816
		{
			sqlVAL.union.val = tree.NullsFirst
		}
	case 1653:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9820
		{
			sqlVAL.union.val = tree.NullsLast
		}
	case 1654:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9824
		{
			sqlVAL.union.val = tree.DefaultNullsOrder
		}
	case 1655:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9830
		{
			if sqlDollar[1].union.limit() == nil {
				sqlVAL.union.val = sqlDollar[2].union.limit()
			} else {
				sqlVAL.union.val = sqlDollar[1].union.limit()
				sqlVAL.union.val.(*tree.Limit).Offset = sqlDollar[2].union.limit().Offset
			}
		}
	case 1656:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9839
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
			if sqlDollar[2].union.limit() != nil {
				sqlVAL.union.val.(*tree.Limit).Count = sqlDollar[2].union.limit().Count
				sqlVAL.union.val.(*tree.Limit).LimitAll = sqlDollar[2].union.limit().LimitAll
			}
		}
	case 1659:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9850
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
		}
	case 1660:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9851
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1662:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9855
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1663:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9859
		{
			sqlVAL.union.val = &tree.Limit{LimitAll: true}
		}
	case 1664:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9863
		{
			if sqlDollar[2].union.expr() == nil {
				sqlVAL.union.val = (*tree.Limit)(nil)
			} else {
				sqlVAL.union.val = &tree.Limit{Count: sqlDollar[2].union.expr()}
			}
		}
	case 1665:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9877
		{
			sqlVAL.union.val = &tree.Limit{Count: sqlDollar[3].union.expr()}
		}
	case 1666:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9881
		{
			sqlVAL.union.val = &tree.Limit{
				Count: tree.NewNumVal(constant.MakeInt64(1), "", false),
			}
		}
	case 1667:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9889
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1668:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9896
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1672:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9918
		{
		}
	case 1673:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9919
		{
		}
	case 1674:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9922
		{
		}
	case 1675:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9923
		{
		}
	case 1676:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9940
		{
			sqlVAL.union.val = tree.GroupBy(sqlDollar[3].union.exprs())
		}
	case 1677:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9944
		{
			sqlVAL.union.val = tree.GroupBy(nil)
		}
	case 1678:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9949
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1679:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9950
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1680:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9956
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1681:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9957
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "rollup")
		}
	case 1682:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9958
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "cube")
		}
	case 1683:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9959
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "grouping sets")
		}
	case 1684:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9963
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1685:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9967
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1686:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9986
		{
			sqlVAL.union.val = &tree.ValuesClause{Rows: []tree.Exprs{sqlDollar[3].union.exprs()}}
		}
	case 1687:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9989
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1688:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9991
		{
			valNode := sqlDollar[1].union.selectStmt().(*tree.ValuesClause)
			valNode.Rows = append(valNode.Rows, sqlDollar[4].union.exprs())
			sqlVAL.union.val = valNode
		}
	case 1689:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10003
		{
			sqlVAL.union.val = tree.From{Tables: sqlDollar[2].union.tblExprs(), AsOf: sqlDollar[3].union.asOfClause()}
		}
	case 1690:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10006
		{
			return helpWith(sqllex, "<SOURCE>")
		}
	case 1691:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10008
		{
			sqlVAL.union.val = tree.From{}
		}
	case 1692:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10014
		{
			sqlVAL.union.val = tree.TableExprs{sqlDollar[1].union.tblExpr()}
		}
	case 1693:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10018
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblExprs(), sqlDollar[3].union.tblExpr())
		}
	case 1694:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10024
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1695:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10028
		{

			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[4].union.int64())}
		}
	case 1696:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10033
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Ascending}
		}
	case 1697:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10038
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Descending}
		}
	case 1698:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10044
		{
			sqlVAL.union.val = &tree.IndexFlags{NoIndexJoin: true}
		}
	case 1699:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10049
		{
			sqlVAL.union.val = &tree.IndexFlags{NoZigzagJoin: true}
		}
	case 1700:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10054
		{
			sqlVAL.union.val = &tree.IndexFlags{NoFullScan: true}
		}
	case 1701:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10059
		{

			sqlVAL.union.val = &tree.IndexFlags{IgnoreForeignKeys: true}
		}
	case 1702:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10065
		{
			sqlVAL.union.val = &tree.IndexFlags{ForceZigzag: true}
		}
	case 1703:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10070
		{
			sqlVAL.union.val = &tree.IndexFlags{ZigzagIndexes: []tree.UnrestrictedName{tree.UnrestrictedName(sqlDollar[3].str)}}
		}
	case 1704:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10075
		{

			sqlVAL.union.val = &tree.IndexFlags{ZigzagIndexIDs: []tree.IndexID{tree.IndexID(sqlDollar[4].union.int64())}}
		}
	case 1705:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10082
		{
			sqlVAL.union.val = sqlDollar[1].union.indexFlags()
		}
	case 1706:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10087
		{
			a := sqlDollar[1].union.indexFlags()
			b := sqlDollar[3].union.indexFlags()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1707:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10098
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1708:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10102
		{
			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[3].union.int64())}
		}
	case 1709:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10106
		{
			flags := sqlDollar[3].union.indexFlags()
			if err := flags.Check(); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = flags
		}
	case 1710:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10114
		{
			sqlVAL.union.val = (*tree.IndexFlags)(nil)
		}
	case 1711:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10148
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1712:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10158
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1713:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10168
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[1].union.selectStmt()},
				Ordinality: sqlDollar[2].union.bool(),
				As:         sqlDollar[3].union.aliasClause(),
			}
		}
	case 1714:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10176
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[2].union.selectStmt()},
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1715:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10185
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1716:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10189
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1717:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10193
		{
			f := sqlDollar[1].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[2].union.bool(),

				As: sqlDollar[3].union.aliasClause(),
			}
		}
	case 1718:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10204
		{
			f := sqlDollar[2].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1719:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10228
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.StatementSource{Statement: sqlDollar[2].union.stmt()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1720:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10234
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
				Columns: sqlDollar[3].union.tableRefCols(),
				As:      sqlDollar[4].union.aliasClause(),
			}
		}
	case 1721:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10245
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: tree.Exprs{sqlDollar[1].union.expr()}}
		}
	case 1722:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10249
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: sqlDollar[4].union.exprs()}
		}
	case 1723:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10255
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1724:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10257
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1725:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10261
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1726:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10267
		{
		}
	case 1727:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10269
		{
			return unimplemented(sqllex, "ROWS FROM with col_def_list")
		}
	case 1728:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10272
		{
			sqlVAL.union.val = nil
		}
	case 1729:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10273
		{
			sqlVAL.union.val = []tree.ColumnID{}
		}
	case 1730:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10274
		{
			sqlVAL.union.val = sqlDollar[2].union.tableRefCols()
		}
	case 1731:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10278
		{
			sqlVAL.union.val = []tree.ColumnID{tree.ColumnID(sqlDollar[1].union.int64())}
		}
	case 1732:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10282
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tableRefCols(), tree.ColumnID(sqlDollar[3].union.int64()))
		}
	case 1733:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10288
		{
			sqlVAL.union.val = true
		}
	case 1734:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10292
		{
			sqlVAL.union.val = false
		}
	case 1735:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10312
		{
			sqlVAL.union.val = &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}
		}
	case 1736:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10316
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: tree.AstCross, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Hint: sqlDollar[3].str}
		}
	case 1737:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10320
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[2].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Cond: sqlDollar[6].union.joinCond(), Hint: sqlDollar[3].str}
		}
	case 1738:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10324
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[3].union.tblExpr(), Cond: sqlDollar[4].union.joinCond()}
		}
	case 1739:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10328
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[3].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[6].union.tblExpr(), Cond: tree.NaturalJoinCond{}, Hint: sqlDollar[4].str}
		}
	case 1740:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10332
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[4].union.tblExpr(), Cond: tree.NaturalJoinCond{}}
		}
	case 1741:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10338
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str), Cols: sqlDollar[3].union.nameList()}
		}
	case 1742:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10342
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()}
		}
	case 1744:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10349
		{
			sqlVAL.union.val = tree.AliasClause{}
		}
	case 1745:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10355
		{
			sqlVAL.union.val = tree.AsOfClause{Expr: sqlDollar[5].union.expr()}
		}
	case 1747:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10362
		{
			sqlVAL.union.val = tree.AsOfClause{}
		}
	case 1748:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10368
		{
			sqlVAL.str = tree.AstFull
		}
	case 1749:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10372
		{
			sqlVAL.str = tree.AstLeft
		}
	case 1750:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10376
		{
			sqlVAL.str = tree.AstRight
		}
	case 1751:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10380
		{
			sqlVAL.str = tree.AstInner
		}
	case 1752:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10386
		{
		}
	case 1753:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10387
		{
		}
	case 1754:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10411
		{
			sqlVAL.str = tree.AstHash
		}
	case 1755:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10415
		{
			sqlVAL.str = tree.AstMerge
		}
	case 1756:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10419
		{
			sqlVAL.str = tree.AstLookup
		}
	case 1757:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10423
		{
			sqlVAL.str = tree.AstInverted
		}
	case 1758:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10427
		{
			sqlVAL.str = ""
		}
	case 1759:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10440
		{
			sqlVAL.union.val = &tree.UsingJoinCond{Cols: sqlDollar[3].union.nameList()}
		}
	case 1760:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10444
		{
			sqlVAL.union.val = &tree.OnJoinCond{Expr: sqlDollar[2].union.expr()}
		}
	case 1761:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10449
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1762:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10450
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1763:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10451
		{
			sqlVAL.union.val = sqlDollar[2].union.unresolvedObjectName()
		}
	case 1764:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10452
		{
			sqlVAL.union.val = sqlDollar[3].union.unresolvedObjectName()
		}
	case 1765:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10456
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 1766:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10461
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 1767:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10475
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1768:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10479
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str)}
			sqlVAL.union.val = alias
		}
	case 1769:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10485
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = alias
		}
	case 1770:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10491
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 1771:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10501
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[3].union.indexFlags(),
			}
		}
	case 1772:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10511
		{
			sqlVAL.union.val = true
		}
	case 1773:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10515
		{
			sqlVAL.union.val = false
		}
	case 1774:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10521
		{
			sqlVAL.union.val = true
		}
	case 1775:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10525
		{
			sqlVAL.union.val = false
		}
	case 1776:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10531
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1778:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10538
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1779:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10550
		{
			if bounds := sqlDollar[2].union.int32s(); bounds != nil {
				var err error
				sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), bounds)
				if err != nil {
					return setErr(sqllex, err)
				}
			} else {
				sqlVAL.union.val = sqlDollar[1].union.typeReference()
			}
		}
	case 1780:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10563
		{

			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1781:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10571
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1782:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10572
		{
			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1783:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10582
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1784:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10589
		{
			sqlVAL.union.val = []int32{-1}
		}
	case 1785:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10590
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1786:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10592
		{

			bound, err := sqlDollar[2].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = []int32{bound}
		}
	case 1787:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10600
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1788:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10601
		{
			sqlVAL.union.val = []int32(nil)
		}
	case 1790:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10613
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1791:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10620
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1792:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10629
		{

			if sqlDollar[1].str == "char" {
				sqlVAL.union.val = types.QChar
			} else if sqlDollar[1].str == "serial" {
				switch sqllex.(*lexer).nakedIntType.Width() {
				case 32:
					sqlVAL.union.val = &types.Serial4Type
				default:
					sqlVAL.union.val = &types.Serial8Type
				}
			} else {

				var ok bool
				var err error
				var unimp int
				sqlVAL.union.val, ok, unimp = types.TypeForNonKeywordTypeName(sqlDollar[1].str)
				if !ok {
					switch unimp {
					case 0:

						aIdx := sqllex.(*lexer).NewAnnotation()
						sqlVAL.union.val, err = tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
						if err != nil {
							return setErr(sqllex, err)
						}
					case -1:
						return unimplemented(sqllex, "type name "+sqlDollar[1].str)
					default:
						return unimplementedWithIssueDetail(sqllex, unimp, sqlDollar[1].str)
					}
				}
			}
		}
	case 1793:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10669
		{
			id := sqlDollar[2].union.int32()
			sqlVAL.union.val = &tree.OIDTypeReference{OID: oid.Oid(id)}
		}
	case 1794:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10674
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1799:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10681
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "point")
		}
	case 1800:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10682
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "polygon")
		}
	case 1801:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10685
		{
			sqlVAL.union.val = geopb.ShapeType_Point
		}
	case 1802:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10686
		{
			sqlVAL.union.val = geopb.ShapeType_PointM
		}
	case 1803:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10687
		{
			sqlVAL.union.val = geopb.ShapeType_PointZ
		}
	case 1804:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10688
		{
			sqlVAL.union.val = geopb.ShapeType_PointZM
		}
	case 1805:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10689
		{
			sqlVAL.union.val = geopb.ShapeType_LineString
		}
	case 1806:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10690
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringM
		}
	case 1807:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10691
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZ
		}
	case 1808:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10692
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZM
		}
	case 1809:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10693
		{
			sqlVAL.union.val = geopb.ShapeType_Polygon
		}
	case 1810:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10694
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonM
		}
	case 1811:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10695
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZ
		}
	case 1812:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10696
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZM
		}
	case 1813:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10697
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPoint
		}
	case 1814:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10698
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointM
		}
	case 1815:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10699
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZ
		}
	case 1816:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10700
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZM
		}
	case 1817:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10701
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineString
		}
	case 1818:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10702
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringM
		}
	case 1819:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10703
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZ
		}
	case 1820:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10704
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZM
		}
	case 1821:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10705
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygon
		}
	case 1822:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10706
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonM
		}
	case 1823:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10707
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZ
		}
	case 1824:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10708
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZM
		}
	case 1825:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10709
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollection
		}
	case 1826:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10710
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionM
		}
	case 1827:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10711
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZ
		}
	case 1828:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10712
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZM
		}
	case 1829:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10713
		{
			sqlVAL.union.val = geopb.ShapeType_Geometry
		}
	case 1830:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10714
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryM
		}
	case 1831:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10715
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZ
		}
	case 1832:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10716
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZM
		}
	case 1833:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10719
		{
			sqlVAL.union.val = types.Geography
		}
	case 1834:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10720
		{
			sqlVAL.union.val = types.Geometry
		}
	case 1835:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10721
		{
			sqlVAL.union.val = types.Box2D
		}
	case 1836:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10723
		{
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1837:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10727
		{
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1838:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10731
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1839:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10739
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1845:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10765
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), 0)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1846:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10773
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), sqlDollar[4].union.int32())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1847:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10781
		{
			sqlVAL.union.val = nil
		}
	case 1848:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10788
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1849:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10792
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1850:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10796
		{
			sqlVAL.union.val = types.Int2
		}
	case 1851:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10800
		{
			sqlVAL.union.val = types.Int
		}
	case 1852:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10804
		{
			sqlVAL.union.val = types.Float4
		}
	case 1853:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10808
		{
			sqlVAL.union.val = sqlDollar[2].union.colType()
		}
	case 1854:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10812
		{
			sqlVAL.union.val = types.Float
		}
	case 1855:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10816
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1856:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10824
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1857:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10832
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1858:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10840
		{
			sqlVAL.union.val = types.Bool
		}
	case 1859:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10846
		{
			nv := sqlDollar[2].union.numVal()
			prec, err := nv.AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			typ, err := newFloat(prec)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = typ
		}
	case 1860:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10859
		{
			sqlVAL.union.val = types.Float
		}
	case 1861:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10865
		{
			bit, err := newBitType(sqlDollar[4].union.int32(), sqlDollar[2].union.bool())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1862:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10871
		{
			bit, err := newBitType(sqlDollar[3].union.int32(), true)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1863:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10879
		{
			sqlVAL.union.val = types.MakeBit(1)
		}
	case 1864:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10883
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1865:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10887
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1866:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10893
		{
			colTyp := *sqlDollar[1].union.colType()
			n := sqlDollar[3].union.int32()
			if n == 0 {
				sqllex.Error(fmt.Sprintf("length for type %s must be at least 1", colTyp.SQLString()))
				return 1
			}
			sqlVAL.union.val = types.MakeScalar(types.StringFamily, colTyp.Oid(), colTyp.Precision(), n, colTyp.Locale())
		}
	case 1867:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10905
		{
			sqlVAL.union.val = sqlDollar[1].union.colType()
		}
	case 1868:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10911
		{
			sqlVAL.union.val = types.MakeChar(1)
		}
	case 1869:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10915
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1870:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10919
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1871:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10923
		{
			sqlVAL.union.val = types.String
		}
	case 1874:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10932
		{
			sqlVAL.union.val = true
		}
	case 1875:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10933
		{
			sqlVAL.union.val = false
		}
	case 1876:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10938
		{
			sqlVAL.union.val = types.Date
		}
	case 1877:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10942
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimeTZ
			} else {
				sqlVAL.union.val = types.Time
			}
		}
	case 1878:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10950
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimeTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTime(prec)
			}
		}
	case 1879:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10962
		{
			sqlVAL.union.val = types.TimeTZ
		}
	case 1880:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10964
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimeTZ(prec)
		}
	case 1881:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10973
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimestampTZ
			} else {
				sqlVAL.union.val = types.Timestamp
			}
		}
	case 1882:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10981
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimestampTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTimestamp(prec)
			}
		}
	case 1883:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10994
		{
			sqlVAL.union.val = types.TimestampTZ
		}
	case 1884:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10998
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimestampTZ(prec)
		}
	case 1885:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11008
		{
			sqlVAL.union.val = true
		}
	case 1886:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11009
		{
			sqlVAL.union.val = false
		}
	case 1887:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11010
		{
			sqlVAL.union.val = false
		}
	case 1888:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11014
		{
			sqlVAL.union.val = types.Interval
		}
	case 1889:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11018
		{
			sqlVAL.union.val = types.MakeInterval(sqlDollar[2].union.intervalTypeMetadata())
		}
	case 1890:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11022
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeInterval(types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true})
		}
	case 1891:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11033
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_YEAR,
				},
			}
		}
	case 1892:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11041
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1893:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11049
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_DAY,
				},
			}
		}
	case 1894:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11057
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1895:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11065
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1896:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11073
		{
			sqlVAL.union.val = sqlDollar[1].union.intervalTypeMetadata()
		}
	case 1897:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11079
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_YEAR,
					DurationType:     types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1898:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11088
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1899:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11097
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1900:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11106
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_DAY
			sqlVAL.union.val = ret
		}
	case 1901:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11112
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_HOUR,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1902:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11121
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_HOUR
			sqlVAL.union.val = ret
		}
	case 1903:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11127
		{
			sqlVAL.union.val = sqlDollar[3].union.intervalTypeMetadata()
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_MINUTE
			sqlVAL.union.val = ret
		}
	case 1905:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11137
		{
			sqlVAL.union.val = nil
		}
	case 1906:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11143
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
			}
		}
	case 1907:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11151
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
				PrecisionIsSet: true,
				Precision:      prec,
			}
		}
	case 1909:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11188
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1910:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11192
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1911:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11196
		{
			sqlVAL.union.val = &tree.CollateExpr{Expr: sqlDollar[1].union.expr(), Locale: sqlDollar[3].str}
		}
	case 1912:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11200
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("timezone"), Exprs: tree.Exprs{sqlDollar[5].union.expr(), sqlDollar[1].union.expr()}}
		}
	case 1913:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11211
		{

			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1914:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11216
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1915:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11220
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryComplement), Expr: sqlDollar[2].union.expr()}
		}
	case 1916:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11224
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnarySqrt), Expr: sqlDollar[2].union.expr()}
		}
	case 1917:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11228
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryCbrt), Expr: sqlDollar[2].union.expr()}
		}
	case 1918:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11232
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Plus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1919:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11236
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Minus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1920:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11240
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Mult), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1921:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11244
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Div), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1922:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11248
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.FloorDiv), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1923:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11252
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Mod), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1924:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11256
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Pow), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1925:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11260
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitxor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1926:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11264
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitand), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1927:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11268
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1928:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11272
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.LT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1929:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11276
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.GT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1930:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11280
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.JSONExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1931:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11284
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.JSONSomeExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1932:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11288
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.JSONAllExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1933:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11292
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.Contains), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1934:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11296
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.ContainedBy), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1935:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11300
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.EQ), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1936:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11304
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Concat), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1937:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11308
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.LShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1938:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11312
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.RShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1939:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11316
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.JSONFetchVal), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1940:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11320
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.JSONFetchText), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1941:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11324
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.JSONFetchValPath), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1942:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11328
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.JSONFetchTextPath), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1943:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11332
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("json_remove_path"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1944:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11336
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contained_by_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1945:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11340
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.Overlaps), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1946:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11344
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contains_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1947:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11348
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.LE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1948:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11352
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.GE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1949:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11356
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1950:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11360
		{
			var retCode int
			sqlVAL.union.val, retCode = processUnaryQualOp(sqllex, sqlDollar[1].union.op(), sqlDollar[2].union.expr())
			if retCode != 0 {
				return retCode
			}
		}
	case 1951:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11368
		{
			{
				var retCode int
				sqlVAL.union.val, retCode = processBinaryQualOp(sqllex, sqlDollar[2].union.op(), sqlDollar[1].union.expr(), sqlDollar[3].union.expr())
				if retCode != 0 {
					return retCode
				}
			}
		}
	case 1952:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11378
		{
			sqlVAL.union.val = &tree.AndExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1953:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11382
		{
			sqlVAL.union.val = &tree.OrExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1954:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11386
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1955:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11390
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1956:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11394
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.Like), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1957:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11398
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1958:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11402
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotLike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1959:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11406
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1960:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11410
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.ILike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1961:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11414
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1962:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11418
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotILike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1963:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11422
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1964:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11426
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.SimilarTo), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1965:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11430
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1966:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11434
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotSimilarTo), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1967:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11438
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[5].union.expr(), sqlDollar[7].union.expr()}}
		}
	case 1968:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11442
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.RegMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1969:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11446
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotRegMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1970:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11450
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.RegIMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1971:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11454
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotRegIMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1972:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11458
		{
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator: treecmp.MakeComparisonOperator(treecmp.EQ),
				Left:     sqlDollar[1].union.expr(),
				Right:    tree.NewNumVal(constant.MakeFloat64(math.NaN()), "NaN", false),
			}
		}
	case 1973:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11466
		{
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator: treecmp.MakeComparisonOperator(treecmp.NE),
				Left:     sqlDollar[1].union.expr(),
				Right:    tree.NewNumVal(constant.MakeFloat64(math.NaN()), "NaN", false),
			}
		}
	case 1974:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11474
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1975:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11478
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1976:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11482
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1977:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11486
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1978:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11489
		{
			return unimplemented(sqllex, "overlaps")
		}
	case 1979:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11491
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1980:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11495
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1981:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11499
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1982:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11503
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1983:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11507
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1984:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11511
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1985:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11515
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1986:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11519
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1987:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11523
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1988:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11527
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1989:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11531
		{
			sqlVAL.union.val = &tree.RangeCond{Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1990:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11535
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1991:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11539
		{
			sqlVAL.union.val = &tree.RangeCond{Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1992:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11543
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1993:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11547
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.In), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1994:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11551
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotIn), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1995:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11555
		{
			op := sqlDollar[3].union.cmpOp()
			subOp := sqlDollar[2].union.op()
			subOpCmp, ok := subOp.(treecmp.ComparisonOperator)
			if !ok {
				sqllex.Error(fmt.Sprintf("%s %s <array> is invalid because %q is not a boolean operator",
					subOp, op, subOp))
				return 1
			}
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator:    op,
				SubOperator: subOpCmp,
				Left:        sqlDollar[1].union.expr(),
				Right:       sqlDollar[4].union.expr(),
			}
		}
	case 1996:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11572
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 1997:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11577
		{
			return unimplemented(sqllex, "UNIQUE predicate")
		}
	case 1999:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11589
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 2000:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11593
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 2001:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11597
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2002:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11601
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 2003:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11605
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryComplement), Expr: sqlDollar[2].union.expr()}
		}
	case 2004:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11609
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Plus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2005:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11613
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Minus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2006:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11617
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Mult), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2007:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11621
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Div), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2008:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11625
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.FloorDiv), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2009:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11629
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Mod), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2010:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11633
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Pow), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2011:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11637
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitxor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2012:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11641
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitand), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2013:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11645
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2014:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11649
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.LT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2015:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11653
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.GT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2016:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11657
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.EQ), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2017:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11661
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Concat), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2018:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11665
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.LShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2019:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11669
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.RShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2020:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11673
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.LE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2021:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11677
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.GE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2022:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11681
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2023:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11685
		{
			var retCode int
			sqlVAL.union.val, retCode = processUnaryQualOp(sqllex, sqlDollar[1].union.op(), sqlDollar[2].union.expr())
			if retCode != 0 {
				return retCode
			}
		}
	case 2024:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11693
		{
			{
				var retCode int
				sqlVAL.union.val, retCode = processBinaryQualOp(sqllex, sqlDollar[2].union.op(), sqlDollar[1].union.expr(), sqlDollar[3].union.expr())
				if retCode != 0 {
					return retCode
				}
			}
		}
	case 2025:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11703
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 2026:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11707
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 2027:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11711
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 2028:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11715
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 2030:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11729
		{
			sqlVAL.union.val = &tree.IndirectionExpr{
				Expr:        sqlDollar[1].union.expr(),
				Indirection: sqlDollar[2].union.arraySubscripts(),
			}
		}
	case 2032:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11737
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[2].union.selectStmt(), Exists: true}
		}
	case 2033:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11773
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 2034:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11777
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 2035:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11781
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 2036:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11785
		{
			sqlVAL.union.val = tree.NewBytesStrVal(sqlDollar[1].str)
		}
	case 2037:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11789
		{
			d, err := tree.ParseDBitArray(sqlDollar[1].str)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 2038:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11794
		{
			return unimplemented(sqllex, sqlDollar[1].union.unresolvedName().String()+"(...) SCONST")
		}
	case 2039:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11796
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2040:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11800
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2041:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11804
		{
			sqlVAL.union.val = tree.MakeDBool(true)
		}
	case 2042:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11808
		{
			sqlVAL.union.val = tree.MakeDBool(false)
		}
	case 2043:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11812
		{
			sqlVAL.union.val = tree.DNull
		}
	case 2044:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11816
		{
			sqlVAL.union.val = tree.Expr(sqlDollar[1].union.unresolvedName())
		}
	case 2045:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11820
		{
			colNum := sqlDollar[2].union.int64()
			if colNum < 1 || colNum > int64(MaxInt) {
				sqllex.Error(fmt.Sprintf("invalid column ordinal: @%d", colNum))
				return 1
			}
			sqlVAL.union.val = tree.NewOrdinalReference(int(colNum - 1))
		}
	case 2046:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11829
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 2047:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11836
		{
			sqlVAL.union.val = &tree.TupleStar{Expr: sqlDollar[2].union.expr()}
		}
	case 2048:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11840
		{
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ColName: tree.Name(sqlDollar[5].str)}
		}
	case 2049:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11844
		{
			idx, err := sqlDollar[6].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			if idx <= 0 {
				err := errors.New("invalid numeric tuple index: indexes must be > 0")
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ByIndex: true, ColIndex: int(idx - 1)}
		}
	case 2050:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11854
		{
			sqlVAL.union.val = &tree.ParenExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 2052:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11859
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 2053:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11863
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 2054:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11867
		{
			sqlVAL.union.val = &tree.ArrayFlatten{Subquery: &tree.Subquery{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 2055:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11871
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.tuple().Exprs}
		}
	case 2056:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11875
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2057:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11878
		{
			return unimplemented(sqllex, "d_expr grouping")
		}
	case 2058:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11882
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName()}
		}
	case 2059:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11886
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: sqlDollar[3].union.exprs(), OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 2060:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11889
		{
			return unimplemented(sqllex, "variadic")
		}
	case 2061:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11890
		{
			return unimplemented(sqllex, "variadic")
		}
	case 2062:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11892
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.AllFuncType, Exprs: sqlDollar[4].union.exprs(), OrderBy: sqlDollar[5].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 2063:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11898
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.DistinctFuncType, Exprs: sqlDollar[4].union.exprs()}
		}
	case 2064:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11902
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: tree.Exprs{tree.StarExpr()}}
		}
	case 2065:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11905
		{
			return helpWithFunction(sqllex, sqlDollar[1].union.resolvableFuncRefFromName())
		}
	case 2066:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11914
		{
			name := sqlDollar[1].union.unresolvedName()
			if name.NumParts == 1 {
				typName := name.Parts[0]

				if typName == "char" {
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: types.QChar, SyntaxMode: tree.CastPrepend}
				} else if typName == "serial" {
					switch sqllex.(*lexer).nakedIntType.Width() {
					case 32:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial4Type, SyntaxMode: tree.CastPrepend}
					default:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial8Type, SyntaxMode: tree.CastPrepend}
					}
				} else {

					var typ tree.ResolvableTypeReference
					var ok bool
					var err error
					var unimp int
					typ, ok, unimp = types.TypeForNonKeywordTypeName(typName)
					if !ok {
						switch unimp {
						case 0:

							aIdx := sqllex.(*lexer).NewAnnotation()
							typ, err = name.ToUnresolvedObjectName(aIdx)
							if err != nil {
								return setErr(sqllex, err)
							}
						case -1:
							return unimplemented(sqllex, "type name "+typName)
						default:
							return unimplementedWithIssueDetail(sqllex, unimp, typName)
						}
					}
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: typ, SyntaxMode: tree.CastPrepend}
				}
			} else {
				aIdx := sqllex.(*lexer).NewAnnotation()
				res, err := name.ToUnresolvedObjectName(aIdx)
				if err != nil {
					return setErr(sqllex, err)
				}
				sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: res, SyntaxMode: tree.CastPrepend}
			}
		}
	case 2067:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11967
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: sqlDollar[1].union.colType(), SyntaxMode: tree.CastPrepend}
		}
	case 2068:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11980
		{
			f := sqlDollar[1].union.expr().(*tree.FuncExpr)
			w := sqlDollar[2].union.expr().(*tree.FuncExpr)
			if w.AggType != 0 {
				f.AggType = w.AggType
				f.OrderBy = w.OrderBy
			}
			f.Filter = sqlDollar[3].union.expr()
			f.WindowDef = sqlDollar[4].union.windowDef()
			sqlVAL.union.val = f
		}
	case 2069:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11992
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2070:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12001
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2071:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12002
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2072:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12007
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("pg_collation_for"), Exprs: tree.Exprs{sqlDollar[4].union.expr()}}
		}
	case 2073:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12011
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2074:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12015
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2075:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12021
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_database")}
		}
	case 2076:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12025
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2077:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12029
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2078:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12033
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2079:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12037
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2080:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12041
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2081:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12047
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 2082:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12051
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("session_user")}
		}
	case 2083:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12055
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 2084:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12059
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.CastExplicit}
		}
	case 2085:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12063
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.AnnotateExplicit}
		}
	case 2086:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:12067
		{
			sqlVAL.union.val = &tree.IfExpr{Cond: sqlDollar[3].union.expr(), True: sqlDollar[5].union.expr(), Else: sqlDollar[7].union.expr()}
		}
	case 2087:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:12071
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr(), ErrCode: sqlDollar[7].union.expr()}
		}
	case 2088:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12075
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr()}
		}
	case 2089:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12079
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr()}
		}
	case 2090:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12083
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), ErrCode: sqlDollar[5].union.expr()}
		}
	case 2091:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12087
		{
			sqlVAL.union.val = &tree.NullIfExpr{Expr1: sqlDollar[3].union.expr(), Expr2: sqlDollar[5].union.expr()}
		}
	case 2092:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12091
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "IFNULL", Exprs: tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 2093:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12095
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "COALESCE", Exprs: sqlDollar[3].union.exprs()}
		}
	case 2095:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12102
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2096:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12105
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2097:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12107
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2098:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12110
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2099:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12112
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2100:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12116
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2101:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12119
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2102:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12121
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2103:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12125
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2104:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12128
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2105:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12130
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2106:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12134
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2107:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12137
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2108:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12139
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2109:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12143
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2110:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12146
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2111:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12148
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2112:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12151
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2113:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12153
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2114:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12156
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2115:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12158
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2116:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12161
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2117:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12163
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2118:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12166
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2119:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12168
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2120:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12171
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2121:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12173
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("strpos"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2122:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12177
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2123:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12180
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2124:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12181
		{
			return unimplemented(sqllex, "treat")
		}
	case 2125:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12183
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2126:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12187
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ltrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2127:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12191
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("rtrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2128:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12195
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2129:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12199
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2130:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12202
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2131:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12204
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2132:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12207
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2133:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12213
		{
			sqlVAL.union.val = &tree.FuncExpr{OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.OrderedSetAgg}
		}
	case 2134:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12217
		{
			sqlVAL.union.val = &tree.FuncExpr{}
		}
	case 2135:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12223
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 2136:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12227
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2137:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12234
		{
			sqlVAL.union.val = sqlDollar[2].union.window()
		}
	case 2138:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12238
		{
			sqlVAL.union.val = tree.Window(nil)
		}
	case 2139:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12244
		{
			sqlVAL.union.val = tree.Window{sqlDollar[1].union.windowDef()}
		}
	case 2140:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12248
		{
			sqlVAL.union.val = append(sqlDollar[1].union.window(), sqlDollar[3].union.windowDef())
		}
	case 2141:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12254
		{
			n := sqlDollar[3].union.windowDef()
			n.Name = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = n
		}
	case 2142:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12262
		{
			sqlVAL.union.val = sqlDollar[2].union.windowDef()
		}
	case 2143:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12266
		{
			sqlVAL.union.val = &tree.WindowDef{Name: tree.Name(sqlDollar[2].str)}
		}
	case 2144:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12270
		{
			sqlVAL.union.val = (*tree.WindowDef)(nil)
		}
	case 2145:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12277
		{
			sqlVAL.union.val = &tree.WindowDef{
				RefName:    tree.Name(sqlDollar[2].str),
				Partitions: sqlDollar[3].union.exprs(),
				OrderBy:    sqlDollar[4].union.orderBy(),
				Frame:      sqlDollar[5].union.windowFrame(),
			}
		}
	case 2147:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12297
		{
			sqlVAL.str = ""
		}
	case 2148:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12303
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 2149:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12307
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2150:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12313
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      treewindow.RANGE,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2151:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12321
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      treewindow.ROWS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2152:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12329
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      treewindow.GROUPS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2153:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12337
		{
			sqlVAL.union.val = (*tree.WindowFrame)(nil)
		}
	case 2154:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12343
		{
			startBound := sqlDollar[1].union.windowFrameBound()
			switch {
			case startBound.BoundType == treewindow.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.BoundType == treewindow.OffsetFollowing:
				sqllex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound}
		}
	case 2155:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12356
		{
			startBound := sqlDollar[2].union.windowFrameBound()
			endBound := sqlDollar[4].union.windowFrameBound()
			switch {
			case startBound.BoundType == treewindow.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.BoundType == treewindow.UnboundedPreceding:
				sqllex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.BoundType == treewindow.CurrentRow && endBound.BoundType == treewindow.OffsetPreceding:
				sqllex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.BoundType == treewindow.OffsetFollowing && endBound.BoundType == treewindow.OffsetPreceding:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.BoundType == treewindow.OffsetFollowing && endBound.BoundType == treewindow.CurrentRow:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound, EndBound: endBound}
		}
	case 2156:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12384
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: treewindow.UnboundedPreceding}
		}
	case 2157:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12388
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: treewindow.UnboundedFollowing}
		}
	case 2158:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12392
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: treewindow.CurrentRow}
		}
	case 2159:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12396
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  treewindow.OffsetPreceding,
			}
		}
	case 2160:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12403
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  treewindow.OffsetFollowing,
			}
		}
	case 2161:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12412
		{
			sqlVAL.union.val = treewindow.ExcludeCurrentRow
		}
	case 2162:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12416
		{
			sqlVAL.union.val = treewindow.ExcludeGroup
		}
	case 2163:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12420
		{
			sqlVAL.union.val = treewindow.ExcludeTies
		}
	case 2164:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12424
		{

			sqlVAL.union.val = treewindow.NoExclusion
		}
	case 2165:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12429
		{
			sqlVAL.union.val = treewindow.NoExclusion
		}
	case 2166:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12442
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[3].union.exprs(), Row: true}
		}
	case 2167:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12446
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 2169:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12453
		{
			t := sqlDollar[2].union.tuple()
			labels := sqlDollar[4].union.nameList()
			t.Labels = make([]string, len(labels))
			for i, l := range labels {
				t.Labels[i] = string(l)
			}
			sqlVAL.union.val = t
		}
	case 2170:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12465
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Any)
		}
	case 2171:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12469
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Some)
		}
	case 2172:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12473
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.All)
		}
	case 2173:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12489
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Plus)
		}
	case 2174:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12490
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Minus)
		}
	case 2175:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12491
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Mult)
		}
	case 2176:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12492
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Div)
		}
	case 2177:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12493
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Mod)
		}
	case 2178:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12494
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Pow)
		}
	case 2179:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12495
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.LT)
		}
	case 2180:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12496
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.GT)
		}
	case 2181:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12497
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.EQ)
		}
	case 2182:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12498
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.LE)
		}
	case 2183:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12499
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.GE)
		}
	case 2184:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12500
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NE)
		}
	case 2185:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12502
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.JSONExists)
		}
	case 2186:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12503
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Bitand)
		}
	case 2187:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12504
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Bitor)
		}
	case 2188:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12505
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Bitxor)
		}
	case 2189:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12506
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.FloorDiv)
		}
	case 2190:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12507
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Contains)
		}
	case 2191:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12508
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.ContainedBy)
		}
	case 2192:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12509
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.LShift)
		}
	case 2193:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12510
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.RShift)
		}
	case 2194:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12511
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Concat)
		}
	case 2195:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12512
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.JSONFetchVal)
		}
	case 2196:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12513
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.JSONFetchText)
		}
	case 2197:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12514
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.JSONFetchValPath)
		}
	case 2198:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12515
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.JSONFetchTextPath)
		}
	case 2199:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12516
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.JSONSomeExists)
		}
	case 2200:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12517
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.JSONAllExists)
		}
	case 2201:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12518
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NotRegMatch)
		}
	case 2202:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12519
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.RegIMatch)
		}
	case 2203:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12520
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NotRegIMatch)
		}
	case 2204:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12521
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Overlaps)
		}
	case 2205:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12522
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnaryComplement)
		}
	case 2206:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12523
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnarySqrt)
		}
	case 2207:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12524
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnaryCbrt)
		}
	case 2209:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12529
		{

			if sqlDollar[1].str != "pg_catalog" {
				return unimplementedWithIssue(sqllex, 65017)
			}
			sqlVAL.union = sqlDollar[3].union
		}
	case 2210:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12545
		{
			sqlVAL.union = sqlDollar[3].union
		}
	case 2213:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12552
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Like)
		}
	case 2214:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12553
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NotLike)
		}
	case 2215:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12554
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.ILike)
		}
	case 2216:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12555
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NotILike)
		}
	case 2217:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12578
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2218:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12582
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2219:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12588
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2220:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12592
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2221:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12596
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2222:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12607
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2223:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12611
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2224:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12617
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2225:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12621
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2227:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12628
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2228:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12634
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2229:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12638
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2230:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12644
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference{sqlDollar[1].union.typeReference()}
		}
	case 2231:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12648
		{
			sqlVAL.union.val = append(sqlDollar[1].union.typeReferences(), sqlDollar[3].union.typeReference())
		}
	case 2232:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12654
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2233:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12658
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2234:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12664
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2235:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12668
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2236:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12674
		{
			sqlVAL.union.val = tree.Exprs{tree.NewStrVal(strings.ToLower(sqlDollar[1].str)), sqlDollar[3].union.expr()}
		}
	case 2237:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12678
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2246:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12701
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr(), sqlDollar[4].union.expr()}
		}
	case 2247:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12705
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2248:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12709
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2249:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12715
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2250:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12722
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[1].union.expr()}
		}
	case 2251:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12726
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2252:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12743
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2253:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12747
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2254:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12751
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2255:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12755
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), tree.NewDInt(1), sqlDollar[2].union.expr()}
		}
	case 2256:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12759
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2257:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12765
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2258:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12771
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2259:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12777
		{
			sqlVAL.union.val = append(sqlDollar[3].union.exprs(), sqlDollar[1].union.expr())
		}
	case 2260:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12781
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 2261:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12785
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2262:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12791
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 2264:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12803
		{
			sqlVAL.union.val = &tree.CaseExpr{Expr: sqlDollar[2].union.expr(), Whens: sqlDollar[3].union.whens(), Else: sqlDollar[4].union.expr()}
		}
	case 2265:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12810
		{
			sqlVAL.union.val = []*tree.When{sqlDollar[1].union.when()}
		}
	case 2266:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12814
		{
			sqlVAL.union.val = append(sqlDollar[1].union.whens(), sqlDollar[2].union.when())
		}
	case 2267:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12820
		{
			sqlVAL.union.val = &tree.When{Cond: sqlDollar[2].union.expr(), Val: sqlDollar[4].union.expr()}
		}
	case 2268:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12826
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2269:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12830
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2271:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12837
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2272:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12843
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr()}
		}
	case 2273:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12847
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr(), End: sqlDollar[4].union.expr(), Slice: true}
		}
	case 2275:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12854
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2276:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12860
		{
			sqlVAL.union.val = tree.ArraySubscripts{sqlDollar[1].union.arraySubscript()}
		}
	case 2277:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12864
		{
			sqlVAL.union.val = append(sqlDollar[1].union.arraySubscripts(), sqlDollar[2].union.arraySubscript())
		}
	case 2278:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12869
		{
		}
	case 2279:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12870
		{
		}
	case 2280:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12874
		{
			sqlVAL.union.val = tree.SelectExprs{sqlDollar[1].union.selExpr()}
		}
	case 2281:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12878
		{
			sqlVAL.union.val = append(sqlDollar[1].union.selExprs(), sqlDollar[3].union.selExpr())
		}
	case 2282:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12884
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 2283:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12893
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 2284:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12897
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2285:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12901
		{
			sqlVAL.union.val = tree.StarSelectExpr()
		}
	case 2286:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12909
		{
			sqlVAL.union.val = tree.TableIndexNames{sqlDollar[1].union.newTableIndexName()}
		}
	case 2287:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12913
		{
			sqlVAL.union.val = append(sqlDollar[1].union.newTableIndexNames(), sqlDollar[3].union.newTableIndexName())
		}
	case 2288:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12919
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedName()}
		}
	case 2289:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12923
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedName())
		}
	case 2290:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12942
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: tree.UnrestrictedName(sqlDollar[3].str),
			}
		}
	case 2291:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12950
		{

			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			indexName := tree.UnrestrictedName(name.ObjectName)
			name.ObjectName = ""
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: indexName,
			}
		}
	case 2292:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12973
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2294:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12982
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2295:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12986
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2296:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12990
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2297:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12994
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 1}
		}
	case 2298:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13000
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 2299:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13004
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 2304:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13019
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2305:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13023
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2308:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13035
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2309:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13039
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2310:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13048
		{
			val, err := sqlDollar[1].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2311:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13059
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2312:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13068
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2313:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13076
		{
			var t *types.T
			if sqlDollar[3].union.val == nil {
				t = types.Interval
			} else {
				t = types.MakeInterval(sqlDollar[3].union.intervalTypeMetadata())
			}
			sqlVAL.union.val = &tree.CastExpr{
				Expr: tree.NewStrVal(sqlDollar[2].str),
				Type: t,

				SyntaxMode: tree.CastShort,
			}
		}
	case 2314:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13093
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = &tree.CastExpr{
				Expr: tree.NewStrVal(sqlDollar[5].str),
				Type: types.MakeInterval(
					types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true},
				),

				SyntaxMode: tree.CastShort,
			}
		}
	case 2333:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13178
		{
			sqlVAL.union.val = sqlDollar[1].union.nameList()
		}
	case 2335:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13186
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{SchemaName: tree.Name(sqlDollar[1].str), ExplicitSchema: true}
		}
	case 2336:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13190
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{CatalogName: tree.Name(sqlDollar[1].str), SchemaName: tree.Name(sqlDollar[3].str), ExplicitCatalog: true, ExplicitSchema: true}
		}
	case 2337:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13196
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{sqlDollar[1].union.objectNamePrefix()}
		}
	case 2338:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13200
		{
			sqlVAL.union.val = append(sqlDollar[1].union.objectNamePrefixList(), sqlDollar[3].union.objectNamePrefix())
		}
	case 2340:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13208
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{ExplicitSchema: false}
		}
	case 2346:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13235
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2348:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13242
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 2, Parts: tree.NameParts{sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2349:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13246
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 3, Parts: tree.NameParts{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2350:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:13250
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 4, Parts: tree.NameParts{sqlDollar[7].str, sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2352:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:13264
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 4, Parts: tree.NameParts{"", sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2353:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13268
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2354:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13272
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2355:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13285
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2357:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13294
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2361:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13312
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2362:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13325
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2363:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13332
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2371:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13357
		{
			sqlVAL.str = ""
		}
	case 2372:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13363
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 2373:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13367
		{
			sqlVAL.str = ""
		}
	}
	goto sqlstack /* stack new state and value */
}
