// Code generated by goyacc. DO NOT EDIT.
// GENERATED FILE DO NOT EDIT
// Code generated by goyacc -p sql -o sql.go.tmp sql-gen.y. DO NOT EDIT.

//line sql-gen.y:24
package parser

import (
	"fmt"
	__yyfmt__ "fmt"
	"go/constant"
	"strings"

	"github.com/cockroachdb/cockroach/pkg/sql/lex"
	"github.com/cockroachdb/cockroach/pkg/sql/privilege"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree"
	"github.com/cockroachdb/cockroach/pkg/sql/types"
	"github.com/cockroachdb/errors"
)

//line sql-gen.y:24

const MaxUint = ^uint(0)

const MaxInt = int(MaxUint >> 1)

func unimplemented(sqllex sqlLexer, feature string) int {
	sqllex.(*lexer).Unimplemented(feature)
	return 1
}

func setErr(sqllex sqlLexer, err error) int {
	sqllex.(*lexer).setErr(err)
	return 1
}

func unimplementedWithIssue(sqllex sqlLexer, issue int) int {
	sqllex.(*lexer).UnimplementedWithIssue(issue)
	return 1
}

func unimplementedWithIssueDetail(sqllex sqlLexer, issue int, detail string) int {
	sqllex.(*lexer).UnimplementedWithIssueDetail(issue, detail)
	return 1
}

//line sql-gen.y:65

type sqlSymUnion struct {
	val interface{}
}

func (u *sqlSymUnion) numVal() *tree.NumVal {
	return u.val.(*tree.NumVal)
}
func (u *sqlSymUnion) strVal() *tree.StrVal {
	if stmt, ok := u.val.(*tree.StrVal); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) placeholder() *tree.Placeholder {
	return u.val.(*tree.Placeholder)
}
func (u *sqlSymUnion) auditMode() tree.AuditMode {
	return u.val.(tree.AuditMode)
}
func (u *sqlSymUnion) bool() bool {
	return u.val.(bool)
}
func (u *sqlSymUnion) strPtr() *string {
	return u.val.(*string)
}
func (u *sqlSymUnion) strs() []string {
	return u.val.([]string)
}
func (u *sqlSymUnion) newTableIndexName() *tree.TableIndexName {
	tn := u.val.(tree.TableIndexName)
	return &tn
}
func (u *sqlSymUnion) tableIndexName() tree.TableIndexName {
	return u.val.(tree.TableIndexName)
}
func (u *sqlSymUnion) newTableIndexNames() tree.TableIndexNames {
	return u.val.(tree.TableIndexNames)
}
func (u *sqlSymUnion) shardedIndexDef() *tree.ShardedIndexDef {
	return u.val.(*tree.ShardedIndexDef)
}
func (u *sqlSymUnion) nameList() tree.NameList {
	return u.val.(tree.NameList)
}
func (u *sqlSymUnion) unresolvedName() *tree.UnresolvedName {
	return u.val.(*tree.UnresolvedName)
}
func (u *sqlSymUnion) unresolvedObjectName() *tree.UnresolvedObjectName {
	return u.val.(*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) functionReference() tree.FunctionReference {
	return u.val.(tree.FunctionReference)
}
func (u *sqlSymUnion) tablePatterns() tree.TablePatterns {
	return u.val.(tree.TablePatterns)
}
func (u *sqlSymUnion) tableNames() tree.TableNames {
	return u.val.(tree.TableNames)
}
func (u *sqlSymUnion) indexFlags() *tree.IndexFlags {
	return u.val.(*tree.IndexFlags)
}
func (u *sqlSymUnion) arraySubscript() *tree.ArraySubscript {
	return u.val.(*tree.ArraySubscript)
}
func (u *sqlSymUnion) arraySubscripts() tree.ArraySubscripts {
	if as, ok := u.val.(tree.ArraySubscripts); ok {
		return as
	}
	return nil
}
func (u *sqlSymUnion) stmt() tree.Statement {
	if stmt, ok := u.val.(tree.Statement); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) cte() *tree.CTE {
	if cte, ok := u.val.(*tree.CTE); ok {
		return cte
	}
	return nil
}
func (u *sqlSymUnion) ctes() []*tree.CTE {
	return u.val.([]*tree.CTE)
}
func (u *sqlSymUnion) with() *tree.With {
	if with, ok := u.val.(*tree.With); ok {
		return with
	}
	return nil
}
func (u *sqlSymUnion) slct() *tree.Select {
	return u.val.(*tree.Select)
}
func (u *sqlSymUnion) selectStmt() tree.SelectStatement {
	return u.val.(tree.SelectStatement)
}
func (u *sqlSymUnion) colDef() *tree.ColumnTableDef {
	return u.val.(*tree.ColumnTableDef)
}
func (u *sqlSymUnion) constraintDef() tree.ConstraintTableDef {
	return u.val.(tree.ConstraintTableDef)
}
func (u *sqlSymUnion) tblDef() tree.TableDef {
	return u.val.(tree.TableDef)
}
func (u *sqlSymUnion) tblDefs() tree.TableDefs {
	return u.val.(tree.TableDefs)
}
func (u *sqlSymUnion) colQual() tree.NamedColumnQualification {
	return u.val.(tree.NamedColumnQualification)
}
func (u *sqlSymUnion) colQualElem() tree.ColumnQualification {
	return u.val.(tree.ColumnQualification)
}
func (u *sqlSymUnion) colQuals() []tree.NamedColumnQualification {
	return u.val.([]tree.NamedColumnQualification)
}
func (u *sqlSymUnion) storageParam() tree.StorageParam {
	return u.val.(tree.StorageParam)
}
func (u *sqlSymUnion) storageParams() []tree.StorageParam {
	if params, ok := u.val.([]tree.StorageParam); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) persistenceType() bool {
	return u.val.(bool)
}
func (u *sqlSymUnion) colType() *types.T {
	if colType, ok := u.val.(*types.T); ok && colType != nil {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) tableRefCols() []tree.ColumnID {
	if refCols, ok := u.val.([]tree.ColumnID); ok {
		return refCols
	}
	return nil
}
func (u *sqlSymUnion) colTypes() []*types.T {
	return u.val.([]*types.T)
}
func (u *sqlSymUnion) int32() int32 {
	return u.val.(int32)
}
func (u *sqlSymUnion) int64() int64 {
	return u.val.(int64)
}
func (u *sqlSymUnion) seqOpt() tree.SequenceOption {
	return u.val.(tree.SequenceOption)
}
func (u *sqlSymUnion) seqOpts() []tree.SequenceOption {
	return u.val.([]tree.SequenceOption)
}
func (u *sqlSymUnion) expr() tree.Expr {
	if expr, ok := u.val.(tree.Expr); ok {
		return expr
	}
	return nil
}
func (u *sqlSymUnion) exprs() tree.Exprs {
	return u.val.(tree.Exprs)
}
func (u *sqlSymUnion) selExpr() tree.SelectExpr {
	return u.val.(tree.SelectExpr)
}
func (u *sqlSymUnion) selExprs() tree.SelectExprs {
	return u.val.(tree.SelectExprs)
}
func (u *sqlSymUnion) retClause() tree.ReturningClause {
	return u.val.(tree.ReturningClause)
}
func (u *sqlSymUnion) aliasClause() tree.AliasClause {
	return u.val.(tree.AliasClause)
}
func (u *sqlSymUnion) asOfClause() tree.AsOfClause {
	return u.val.(tree.AsOfClause)
}
func (u *sqlSymUnion) tblExpr() tree.TableExpr {
	return u.val.(tree.TableExpr)
}
func (u *sqlSymUnion) tblExprs() tree.TableExprs {
	return u.val.(tree.TableExprs)
}
func (u *sqlSymUnion) from() tree.From {
	return u.val.(tree.From)
}
func (u *sqlSymUnion) int32s() []int32 {
	return u.val.([]int32)
}
func (u *sqlSymUnion) joinCond() tree.JoinCond {
	return u.val.(tree.JoinCond)
}
func (u *sqlSymUnion) when() *tree.When {
	return u.val.(*tree.When)
}
func (u *sqlSymUnion) whens() []*tree.When {
	return u.val.([]*tree.When)
}
func (u *sqlSymUnion) lockingClause() tree.LockingClause {
	return u.val.(tree.LockingClause)
}
func (u *sqlSymUnion) lockingItem() *tree.LockingItem {
	return u.val.(*tree.LockingItem)
}
func (u *sqlSymUnion) lockingStrength() tree.LockingStrength {
	return u.val.(tree.LockingStrength)
}
func (u *sqlSymUnion) lockingWaitPolicy() tree.LockingWaitPolicy {
	return u.val.(tree.LockingWaitPolicy)
}
func (u *sqlSymUnion) updateExpr() *tree.UpdateExpr {
	return u.val.(*tree.UpdateExpr)
}
func (u *sqlSymUnion) updateExprs() tree.UpdateExprs {
	return u.val.(tree.UpdateExprs)
}
func (u *sqlSymUnion) limit() *tree.Limit {
	return u.val.(*tree.Limit)
}
func (u *sqlSymUnion) targetList() tree.TargetList {
	return u.val.(tree.TargetList)
}
func (u *sqlSymUnion) targetListPtr() *tree.TargetList {
	return u.val.(*tree.TargetList)
}
func (u *sqlSymUnion) privilegeType() privilege.Kind {
	return u.val.(privilege.Kind)
}
func (u *sqlSymUnion) privilegeList() privilege.List {
	return u.val.(privilege.List)
}
func (u *sqlSymUnion) onConflict() *tree.OnConflict {
	return u.val.(*tree.OnConflict)
}
func (u *sqlSymUnion) orderBy() tree.OrderBy {
	return u.val.(tree.OrderBy)
}
func (u *sqlSymUnion) order() *tree.Order {
	return u.val.(*tree.Order)
}
func (u *sqlSymUnion) orders() []*tree.Order {
	return u.val.([]*tree.Order)
}
func (u *sqlSymUnion) groupBy() tree.GroupBy {
	return u.val.(tree.GroupBy)
}
func (u *sqlSymUnion) windowFrame() *tree.WindowFrame {
	return u.val.(*tree.WindowFrame)
}
func (u *sqlSymUnion) windowFrameBounds() tree.WindowFrameBounds {
	return u.val.(tree.WindowFrameBounds)
}
func (u *sqlSymUnion) windowFrameBound() *tree.WindowFrameBound {
	return u.val.(*tree.WindowFrameBound)
}
func (u *sqlSymUnion) windowFrameExclusion() tree.WindowFrameExclusion {
	return u.val.(tree.WindowFrameExclusion)
}
func (u *sqlSymUnion) distinctOn() tree.DistinctOn {
	return u.val.(tree.DistinctOn)
}
func (u *sqlSymUnion) dir() tree.Direction {
	return u.val.(tree.Direction)
}
func (u *sqlSymUnion) nullsOrder() tree.NullsOrder {
	return u.val.(tree.NullsOrder)
}
func (u *sqlSymUnion) alterTableCmd() tree.AlterTableCmd {
	return u.val.(tree.AlterTableCmd)
}
func (u *sqlSymUnion) alterTableCmds() tree.AlterTableCmds {
	return u.val.(tree.AlterTableCmds)
}
func (u *sqlSymUnion) alterIndexCmd() tree.AlterIndexCmd {
	return u.val.(tree.AlterIndexCmd)
}
func (u *sqlSymUnion) alterIndexCmds() tree.AlterIndexCmds {
	return u.val.(tree.AlterIndexCmds)
}
func (u *sqlSymUnion) isoLevel() tree.IsolationLevel {
	return u.val.(tree.IsolationLevel)
}
func (u *sqlSymUnion) userPriority() tree.UserPriority {
	return u.val.(tree.UserPriority)
}
func (u *sqlSymUnion) readWriteMode() tree.ReadWriteMode {
	return u.val.(tree.ReadWriteMode)
}
func (u *sqlSymUnion) idxElem() tree.IndexElem {
	return u.val.(tree.IndexElem)
}
func (u *sqlSymUnion) idxElems() tree.IndexElemList {
	return u.val.(tree.IndexElemList)
}
func (u *sqlSymUnion) dropBehavior() tree.DropBehavior {
	return u.val.(tree.DropBehavior)
}
func (u *sqlSymUnion) validationBehavior() tree.ValidationBehavior {
	return u.val.(tree.ValidationBehavior)
}
func (u *sqlSymUnion) interleave() *tree.InterleaveDef {
	return u.val.(*tree.InterleaveDef)
}
func (u *sqlSymUnion) partitionBy() *tree.PartitionBy {
	return u.val.(*tree.PartitionBy)
}
func (u *sqlSymUnion) listPartition() tree.ListPartition {
	return u.val.(tree.ListPartition)
}
func (u *sqlSymUnion) listPartitions() []tree.ListPartition {
	return u.val.([]tree.ListPartition)
}
func (u *sqlSymUnion) rangePartition() tree.RangePartition {
	return u.val.(tree.RangePartition)
}
func (u *sqlSymUnion) rangePartitions() []tree.RangePartition {
	return u.val.([]tree.RangePartition)
}
func (u *sqlSymUnion) setZoneConfig() *tree.SetZoneConfig {
	return u.val.(*tree.SetZoneConfig)
}
func (u *sqlSymUnion) tuples() []*tree.Tuple {
	return u.val.([]*tree.Tuple)
}
func (u *sqlSymUnion) tuple() *tree.Tuple {
	return u.val.(*tree.Tuple)
}
func (u *sqlSymUnion) windowDef() *tree.WindowDef {
	return u.val.(*tree.WindowDef)
}
func (u *sqlSymUnion) window() tree.Window {
	return u.val.(tree.Window)
}
func (u *sqlSymUnion) op() tree.Operator {
	return u.val.(tree.Operator)
}
func (u *sqlSymUnion) cmpOp() tree.ComparisonOperator {
	return u.val.(tree.ComparisonOperator)
}
func (u *sqlSymUnion) intervalTypeMetadata() types.IntervalTypeMetadata {
	return u.val.(types.IntervalTypeMetadata)
}
func (u *sqlSymUnion) kvOption() tree.KVOption {
	return u.val.(tree.KVOption)
}
func (u *sqlSymUnion) kvOptions() []tree.KVOption {
	if colType, ok := u.val.([]tree.KVOption); ok {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) transactionModes() tree.TransactionModes {
	return u.val.(tree.TransactionModes)
}
func (u *sqlSymUnion) compositeKeyMatchMethod() tree.CompositeKeyMatchMethod {
	return u.val.(tree.CompositeKeyMatchMethod)
}
func (u *sqlSymUnion) referenceAction() tree.ReferenceAction {
	return u.val.(tree.ReferenceAction)
}
func (u *sqlSymUnion) referenceActions() tree.ReferenceActions {
	return u.val.(tree.ReferenceActions)
}
func (u *sqlSymUnion) createStatsOptions() *tree.CreateStatsOptions {
	return u.val.(*tree.CreateStatsOptions)
}
func (u *sqlSymUnion) scrubOptions() tree.ScrubOptions {
	return u.val.(tree.ScrubOptions)
}
func (u *sqlSymUnion) scrubOption() tree.ScrubOption {
	return u.val.(tree.ScrubOption)
}
func (u *sqlSymUnion) resolvableFuncRefFromName() tree.ResolvableFunctionReference {
	return tree.ResolvableFunctionReference{FunctionReference: u.unresolvedName()}
}
func (u *sqlSymUnion) rowsFromExpr() *tree.RowsFromExpr {
	return u.val.(*tree.RowsFromExpr)
}
func (u *sqlSymUnion) partitionedBackup() tree.PartitionedBackup {
	return u.val.(tree.PartitionedBackup)
}
func (u *sqlSymUnion) partitionedBackups() []tree.PartitionedBackup {
	return u.val.([]tree.PartitionedBackup)
}
func newNameFromStr(s string) *tree.Name {
	return (*tree.Name)(&s)
}

//line sql-gen.y:620
type sqlSymType struct {
	yys   int
	id    int32
	pos   int32
	str   string
	union sqlSymUnion
}

const IDENT = lex.IDENT
const SCONST = lex.SCONST
const BCONST = lex.BCONST
const BITCONST = lex.BITCONST
const ICONST = lex.ICONST
const FCONST = lex.FCONST
const PLACEHOLDER = lex.PLACEHOLDER
const TYPECAST = lex.TYPECAST
const TYPEANNOTATE = lex.TYPEANNOTATE
const DOT_DOT = lex.DOT_DOT
const LESS_EQUALS = lex.LESS_EQUALS
const GREATER_EQUALS = lex.GREATER_EQUALS
const NOT_EQUALS = lex.NOT_EQUALS
const NOT_REGMATCH = lex.NOT_REGMATCH
const REGIMATCH = lex.REGIMATCH
const NOT_REGIMATCH = lex.NOT_REGIMATCH
const ERROR = lex.ERROR
const ABORT = lex.ABORT
const ACTION = lex.ACTION
const ADD = lex.ADD
const ADMIN = lex.ADMIN
const AGGREGATE = lex.AGGREGATE
const ALL = lex.ALL
const ALTER = lex.ALTER
const ANALYSE = lex.ANALYSE
const ANALYZE = lex.ANALYZE
const AND = lex.AND
const AND_AND = lex.AND_AND
const ANY = lex.ANY
const ANNOTATE_TYPE = lex.ANNOTATE_TYPE
const ARRAY = lex.ARRAY
const AS = lex.AS
const ASC = lex.ASC
const ASYMMETRIC = lex.ASYMMETRIC
const AT = lex.AT
const AUTHORIZATION = lex.AUTHORIZATION
const AUTOMATIC = lex.AUTOMATIC
const BACKUP = lex.BACKUP
const BEGIN = lex.BEGIN
const BETWEEN = lex.BETWEEN
const BIGINT = lex.BIGINT
const BIGSERIAL = lex.BIGSERIAL
const BIT = lex.BIT
const BUCKET_COUNT = lex.BUCKET_COUNT
const BLOB = lex.BLOB
const BOOL = lex.BOOL
const BOOLEAN = lex.BOOLEAN
const BOTH = lex.BOTH
const BY = lex.BY
const BYTEA = lex.BYTEA
const BYTES = lex.BYTES
const CACHE = lex.CACHE
const CANCEL = lex.CANCEL
const CASCADE = lex.CASCADE
const CASE = lex.CASE
const CAST = lex.CAST
const CHANGEFEED = lex.CHANGEFEED
const CHAR = lex.CHAR
const CHARACTER = lex.CHARACTER
const CHARACTERISTICS = lex.CHARACTERISTICS
const CHECK = lex.CHECK
const CLUSTER = lex.CLUSTER
const COALESCE = lex.COALESCE
const COLLATE = lex.COLLATE
const COLLATION = lex.COLLATION
const COLUMN = lex.COLUMN
const COLUMNS = lex.COLUMNS
const COMMENT = lex.COMMENT
const COMMIT = lex.COMMIT
const COMMITTED = lex.COMMITTED
const COMPACT = lex.COMPACT
const COMPLETE = lex.COMPLETE
const CONCAT = lex.CONCAT
const CONFIGURATION = lex.CONFIGURATION
const CONFIGURATIONS = lex.CONFIGURATIONS
const CONFIGURE = lex.CONFIGURE
const CONFLICT = lex.CONFLICT
const CONSTRAINT = lex.CONSTRAINT
const CONSTRAINTS = lex.CONSTRAINTS
const CONTAINS = lex.CONTAINS
const CONVERSION = lex.CONVERSION
const COPY = lex.COPY
const COVERING = lex.COVERING
const CREATE = lex.CREATE
const CROSS = lex.CROSS
const CUBE = lex.CUBE
const CURRENT = lex.CURRENT
const CURRENT_CATALOG = lex.CURRENT_CATALOG
const CURRENT_DATE = lex.CURRENT_DATE
const CURRENT_SCHEMA = lex.CURRENT_SCHEMA
const CURRENT_ROLE = lex.CURRENT_ROLE
const CURRENT_TIME = lex.CURRENT_TIME
const CURRENT_TIMESTAMP = lex.CURRENT_TIMESTAMP
const CURRENT_USER = lex.CURRENT_USER
const CYCLE = lex.CYCLE
const DATA = lex.DATA
const DATABASE = lex.DATABASE
const DATABASES = lex.DATABASES
const DATE = lex.DATE
const DAY = lex.DAY
const DEC = lex.DEC
const DECIMAL = lex.DECIMAL
const DEFAULT = lex.DEFAULT
const DEALLOCATE = lex.DEALLOCATE
const DEFERRABLE = lex.DEFERRABLE
const DEFERRED = lex.DEFERRED
const DELETE = lex.DELETE
const DESC = lex.DESC
const DISCARD = lex.DISCARD
const DISTINCT = lex.DISTINCT
const DO = lex.DO
const DOMAIN = lex.DOMAIN
const DOUBLE = lex.DOUBLE
const DROP = lex.DROP
const ELSE = lex.ELSE
const ENCODING = lex.ENCODING
const END = lex.END
const ENUM = lex.ENUM
const ESCAPE = lex.ESCAPE
const EXCEPT = lex.EXCEPT
const EXCLUDE = lex.EXCLUDE
const EXISTS = lex.EXISTS
const EXECUTE = lex.EXECUTE
const EXPERIMENTAL = lex.EXPERIMENTAL
const EXPERIMENTAL_FINGERPRINTS = lex.EXPERIMENTAL_FINGERPRINTS
const EXPERIMENTAL_REPLICA = lex.EXPERIMENTAL_REPLICA
const EXPERIMENTAL_AUDIT = lex.EXPERIMENTAL_AUDIT
const EXPIRATION = lex.EXPIRATION
const EXPLAIN = lex.EXPLAIN
const EXPORT = lex.EXPORT
const EXTENSION = lex.EXTENSION
const EXTRACT = lex.EXTRACT
const EXTRACT_DURATION = lex.EXTRACT_DURATION
const FALSE = lex.FALSE
const FAMILY = lex.FAMILY
const FETCH = lex.FETCH
const FETCHVAL = lex.FETCHVAL
const FETCHTEXT = lex.FETCHTEXT
const FETCHVAL_PATH = lex.FETCHVAL_PATH
const FETCHTEXT_PATH = lex.FETCHTEXT_PATH
const FILES = lex.FILES
const FILTER = lex.FILTER
const FIRST = lex.FIRST
const FLOAT = lex.FLOAT
const FLOAT4 = lex.FLOAT4
const FLOAT8 = lex.FLOAT8
const FLOORDIV = lex.FLOORDIV
const FOLLOWING = lex.FOLLOWING
const FOR = lex.FOR
const FORCE_INDEX = lex.FORCE_INDEX
const FOREIGN = lex.FOREIGN
const FROM = lex.FROM
const FULL = lex.FULL
const FUNCTION = lex.FUNCTION
const GLOBAL = lex.GLOBAL
const GRANT = lex.GRANT
const GRANTS = lex.GRANTS
const GREATEST = lex.GREATEST
const GROUP = lex.GROUP
const GROUPING = lex.GROUPING
const GROUPS = lex.GROUPS
const HAVING = lex.HAVING
const HASH = lex.HASH
const HIGH = lex.HIGH
const HISTOGRAM = lex.HISTOGRAM
const HOUR = lex.HOUR
const IF = lex.IF
const IFERROR = lex.IFERROR
const IFNULL = lex.IFNULL
const IGNORE_FOREIGN_KEYS = lex.IGNORE_FOREIGN_KEYS
const ILIKE = lex.ILIKE
const IMMEDIATE = lex.IMMEDIATE
const IMPORT = lex.IMPORT
const IN = lex.IN
const INCREMENT = lex.INCREMENT
const INCREMENTAL = lex.INCREMENTAL
const INET = lex.INET
const INET_CONTAINED_BY_OR_EQUALS = lex.INET_CONTAINED_BY_OR_EQUALS
const INET_CONTAINS_OR_EQUALS = lex.INET_CONTAINS_OR_EQUALS
const INDEX = lex.INDEX
const INDEXES = lex.INDEXES
const INJECT = lex.INJECT
const INTERLEAVE = lex.INTERLEAVE
const INITIALLY = lex.INITIALLY
const INNER = lex.INNER
const INSERT = lex.INSERT
const INT = lex.INT
const INT2VECTOR = lex.INT2VECTOR
const INT2 = lex.INT2
const INT4 = lex.INT4
const INT8 = lex.INT8
const INT64 = lex.INT64
const INTEGER = lex.INTEGER
const INTERSECT = lex.INTERSECT
const INTERVAL = lex.INTERVAL
const INTO = lex.INTO
const INVERTED = lex.INVERTED
const IS = lex.IS
const ISERROR = lex.ISERROR
const ISNULL = lex.ISNULL
const ISOLATION = lex.ISOLATION
const JOB = lex.JOB
const JOBS = lex.JOBS
const JOIN = lex.JOIN
const JSON = lex.JSON
const JSONB = lex.JSONB
const JSON_SOME_EXISTS = lex.JSON_SOME_EXISTS
const JSON_ALL_EXISTS = lex.JSON_ALL_EXISTS
const KEY = lex.KEY
const KEYS = lex.KEYS
const KV = lex.KV
const LANGUAGE = lex.LANGUAGE
const LAST = lex.LAST
const LATERAL = lex.LATERAL
const LC_CTYPE = lex.LC_CTYPE
const LC_COLLATE = lex.LC_COLLATE
const LEADING = lex.LEADING
const LEASE = lex.LEASE
const LEAST = lex.LEAST
const LEFT = lex.LEFT
const LESS = lex.LESS
const LEVEL = lex.LEVEL
const LIKE = lex.LIKE
const LIMIT = lex.LIMIT
const LIST = lex.LIST
const LOCAL = lex.LOCAL
const LOCALTIME = lex.LOCALTIME
const LOCALTIMESTAMP = lex.LOCALTIMESTAMP
const LOCKED = lex.LOCKED
const LOOKUP = lex.LOOKUP
const LOW = lex.LOW
const LSHIFT = lex.LSHIFT
const MATCH = lex.MATCH
const MATERIALIZED = lex.MATERIALIZED
const MERGE = lex.MERGE
const MINVALUE = lex.MINVALUE
const MAXVALUE = lex.MAXVALUE
const MINUTE = lex.MINUTE
const MONTH = lex.MONTH
const NAN = lex.NAN
const NAME = lex.NAME
const NAMES = lex.NAMES
const NATURAL = lex.NATURAL
const NEXT = lex.NEXT
const NO = lex.NO
const NO_INDEX_JOIN = lex.NO_INDEX_JOIN
const NONE = lex.NONE
const NORMAL = lex.NORMAL
const NOT = lex.NOT
const NOTHING = lex.NOTHING
const NOTNULL = lex.NOTNULL
const NOWAIT = lex.NOWAIT
const NULL = lex.NULL
const NULLIF = lex.NULLIF
const NULLS = lex.NULLS
const NUMERIC = lex.NUMERIC
const OF = lex.OF
const OFF = lex.OFF
const OFFSET = lex.OFFSET
const OID = lex.OID
const OIDS = lex.OIDS
const OIDVECTOR = lex.OIDVECTOR
const ON = lex.ON
const ONLY = lex.ONLY
const OPT = lex.OPT
const OPTION = lex.OPTION
const OPTIONS = lex.OPTIONS
const OR = lex.OR
const ORDER = lex.ORDER
const ORDINALITY = lex.ORDINALITY
const OTHERS = lex.OTHERS
const OUT = lex.OUT
const OUTER = lex.OUTER
const OVER = lex.OVER
const OVERLAPS = lex.OVERLAPS
const OVERLAY = lex.OVERLAY
const OWNED = lex.OWNED
const OPERATOR = lex.OPERATOR
const PARENT = lex.PARENT
const PARTIAL = lex.PARTIAL
const PARTITION = lex.PARTITION
const PARTITIONS = lex.PARTITIONS
const PASSWORD = lex.PASSWORD
const PAUSE = lex.PAUSE
const PHYSICAL = lex.PHYSICAL
const PLACING = lex.PLACING
const PLAN = lex.PLAN
const PLANS = lex.PLANS
const POSITION = lex.POSITION
const PRECEDING = lex.PRECEDING
const PRECISION = lex.PRECISION
const PREPARE = lex.PREPARE
const PRIMARY = lex.PRIMARY
const PRIORITY = lex.PRIORITY
const PROCEDURAL = lex.PROCEDURAL
const PUBLIC = lex.PUBLIC
const PUBLICATION = lex.PUBLICATION
const QUERIES = lex.QUERIES
const QUERY = lex.QUERY
const RANGE = lex.RANGE
const RANGES = lex.RANGES
const READ = lex.READ
const REAL = lex.REAL
const RECURSIVE = lex.RECURSIVE
const REF = lex.REF
const REFERENCES = lex.REFERENCES
const REGCLASS = lex.REGCLASS
const REGPROC = lex.REGPROC
const REGPROCEDURE = lex.REGPROCEDURE
const REGNAMESPACE = lex.REGNAMESPACE
const REGTYPE = lex.REGTYPE
const REMOVE_PATH = lex.REMOVE_PATH
const RENAME = lex.RENAME
const REPEATABLE = lex.REPEATABLE
const REPLACE = lex.REPLACE
const RELEASE = lex.RELEASE
const RESET = lex.RESET
const RESTORE = lex.RESTORE
const RESTRICT = lex.RESTRICT
const RESUME = lex.RESUME
const RETURNING = lex.RETURNING
const REVOKE = lex.REVOKE
const RIGHT = lex.RIGHT
const ROLE = lex.ROLE
const ROLES = lex.ROLES
const ROLLBACK = lex.ROLLBACK
const ROLLUP = lex.ROLLUP
const ROW = lex.ROW
const ROWS = lex.ROWS
const RSHIFT = lex.RSHIFT
const RULE = lex.RULE
const SAVEPOINT = lex.SAVEPOINT
const SCATTER = lex.SCATTER
const SCHEMA = lex.SCHEMA
const SCHEMAS = lex.SCHEMAS
const SCRUB = lex.SCRUB
const SEARCH = lex.SEARCH
const SECOND = lex.SECOND
const SELECT = lex.SELECT
const SEQUENCE = lex.SEQUENCE
const SEQUENCES = lex.SEQUENCES
const SERIAL = lex.SERIAL
const SERIAL2 = lex.SERIAL2
const SERIAL4 = lex.SERIAL4
const SERIAL8 = lex.SERIAL8
const SERIALIZABLE = lex.SERIALIZABLE
const SERVER = lex.SERVER
const SESSION = lex.SESSION
const SESSIONS = lex.SESSIONS
const SESSION_USER = lex.SESSION_USER
const SET = lex.SET
const SETTING = lex.SETTING
const SETTINGS = lex.SETTINGS
const SHARE = lex.SHARE
const SHOW = lex.SHOW
const SIMILAR = lex.SIMILAR
const SIMPLE = lex.SIMPLE
const SKIP = lex.SKIP
const SMALLINT = lex.SMALLINT
const SMALLSERIAL = lex.SMALLSERIAL
const SNAPSHOT = lex.SNAPSHOT
const SOME = lex.SOME
const SPLIT = lex.SPLIT
const SQL = lex.SQL
const START = lex.START
const STATISTICS = lex.STATISTICS
const STATUS = lex.STATUS
const STDIN = lex.STDIN
const STRICT = lex.STRICT
const STRING = lex.STRING
const STORE = lex.STORE
const STORED = lex.STORED
const STORING = lex.STORING
const SUBSTRING = lex.SUBSTRING
const SYMMETRIC = lex.SYMMETRIC
const SYNTAX = lex.SYNTAX
const SYSTEM = lex.SYSTEM
const SUBSCRIPTION = lex.SUBSCRIPTION
const TABLE = lex.TABLE
const TABLES = lex.TABLES
const TEMP = lex.TEMP
const TEMPLATE = lex.TEMPLATE
const TEMPORARY = lex.TEMPORARY
const TESTING_RELOCATE = lex.TESTING_RELOCATE
const EXPERIMENTAL_RELOCATE = lex.EXPERIMENTAL_RELOCATE
const TEXT = lex.TEXT
const THEN = lex.THEN
const TIES = lex.TIES
const TIME = lex.TIME
const TIMETZ = lex.TIMETZ
const TIMESTAMP = lex.TIMESTAMP
const TIMESTAMPTZ = lex.TIMESTAMPTZ
const TO = lex.TO
const THROTTLING = lex.THROTTLING
const TRAILING = lex.TRAILING
const TRACE = lex.TRACE
const TRANSACTION = lex.TRANSACTION
const TREAT = lex.TREAT
const TRIGGER = lex.TRIGGER
const TRIM = lex.TRIM
const TRUE = lex.TRUE
const TRUNCATE = lex.TRUNCATE
const TRUSTED = lex.TRUSTED
const TYPE = lex.TYPE
const TRACING = lex.TRACING
const UNBOUNDED = lex.UNBOUNDED
const UNCOMMITTED = lex.UNCOMMITTED
const UNION = lex.UNION
const UNIQUE = lex.UNIQUE
const UNKNOWN = lex.UNKNOWN
const UNLOGGED = lex.UNLOGGED
const UNSPLIT = lex.UNSPLIT
const UPDATE = lex.UPDATE
const UPSERT = lex.UPSERT
const USE = lex.USE
const USER = lex.USER
const USERS = lex.USERS
const USING = lex.USING
const UUID = lex.UUID
const VALID = lex.VALID
const VALIDATE = lex.VALIDATE
const VALUE = lex.VALUE
const VALUES = lex.VALUES
const VARBIT = lex.VARBIT
const VARCHAR = lex.VARCHAR
const VARIADIC = lex.VARIADIC
const VIEW = lex.VIEW
const VARYING = lex.VARYING
const VIRTUAL = lex.VIRTUAL
const WHEN = lex.WHEN
const WHERE = lex.WHERE
const WINDOW = lex.WINDOW
const WITH = lex.WITH
const WITHIN = lex.WITHIN
const WITHOUT = lex.WITHOUT
const WORK = lex.WORK
const WRITE = lex.WRITE
const YEAR = lex.YEAR
const ZONE = lex.ZONE
const NOT_LA = lex.NOT_LA
const WITH_LA = lex.WITH_LA
const AS_LA = lex.AS_LA
const CONTAINED_BY = lex.CONTAINED_BY
const POSTFIXOP = lex.POSTFIXOP
const UMINUS = lex.UMINUS
const HELPTOKEN = lex.HELPTOKEN

var sqlToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENT",
	"SCONST",
	"BCONST",
	"BITCONST",
	"ICONST",
	"FCONST",
	"PLACEHOLDER",
	"TYPECAST",
	"TYPEANNOTATE",
	"DOT_DOT",
	"LESS_EQUALS",
	"GREATER_EQUALS",
	"NOT_EQUALS",
	"NOT_REGMATCH",
	"REGIMATCH",
	"NOT_REGIMATCH",
	"ERROR",
	"ABORT",
	"ACTION",
	"ADD",
	"ADMIN",
	"AGGREGATE",
	"ALL",
	"ALTER",
	"ANALYSE",
	"ANALYZE",
	"AND",
	"AND_AND",
	"ANY",
	"ANNOTATE_TYPE",
	"ARRAY",
	"AS",
	"ASC",
	"ASYMMETRIC",
	"AT",
	"AUTHORIZATION",
	"AUTOMATIC",
	"BACKUP",
	"BEGIN",
	"BETWEEN",
	"BIGINT",
	"BIGSERIAL",
	"BIT",
	"BUCKET_COUNT",
	"BLOB",
	"BOOL",
	"BOOLEAN",
	"BOTH",
	"BY",
	"BYTEA",
	"BYTES",
	"CACHE",
	"CANCEL",
	"CASCADE",
	"CASE",
	"CAST",
	"CHANGEFEED",
	"CHAR",
	"CHARACTER",
	"CHARACTERISTICS",
	"CHECK",
	"CLUSTER",
	"COALESCE",
	"COLLATE",
	"COLLATION",
	"COLUMN",
	"COLUMNS",
	"COMMENT",
	"COMMIT",
	"COMMITTED",
	"COMPACT",
	"COMPLETE",
	"CONCAT",
	"CONFIGURATION",
	"CONFIGURATIONS",
	"CONFIGURE",
	"CONFLICT",
	"CONSTRAINT",
	"CONSTRAINTS",
	"CONTAINS",
	"CONVERSION",
	"COPY",
	"COVERING",
	"CREATE",
	"CROSS",
	"CUBE",
	"CURRENT",
	"CURRENT_CATALOG",
	"CURRENT_DATE",
	"CURRENT_SCHEMA",
	"CURRENT_ROLE",
	"CURRENT_TIME",
	"CURRENT_TIMESTAMP",
	"CURRENT_USER",
	"CYCLE",
	"DATA",
	"DATABASE",
	"DATABASES",
	"DATE",
	"DAY",
	"DEC",
	"DECIMAL",
	"DEFAULT",
	"DEALLOCATE",
	"DEFERRABLE",
	"DEFERRED",
	"DELETE",
	"DESC",
	"DISCARD",
	"DISTINCT",
	"DO",
	"DOMAIN",
	"DOUBLE",
	"DROP",
	"ELSE",
	"ENCODING",
	"END",
	"ENUM",
	"ESCAPE",
	"EXCEPT",
	"EXCLUDE",
	"EXISTS",
	"EXECUTE",
	"EXPERIMENTAL",
	"EXPERIMENTAL_FINGERPRINTS",
	"EXPERIMENTAL_REPLICA",
	"EXPERIMENTAL_AUDIT",
	"EXPIRATION",
	"EXPLAIN",
	"EXPORT",
	"EXTENSION",
	"EXTRACT",
	"EXTRACT_DURATION",
	"FALSE",
	"FAMILY",
	"FETCH",
	"FETCHVAL",
	"FETCHTEXT",
	"FETCHVAL_PATH",
	"FETCHTEXT_PATH",
	"FILES",
	"FILTER",
	"FIRST",
	"FLOAT",
	"FLOAT4",
	"FLOAT8",
	"FLOORDIV",
	"FOLLOWING",
	"FOR",
	"FORCE_INDEX",
	"FOREIGN",
	"FROM",
	"FULL",
	"FUNCTION",
	"GLOBAL",
	"GRANT",
	"GRANTS",
	"GREATEST",
	"GROUP",
	"GROUPING",
	"GROUPS",
	"HAVING",
	"HASH",
	"HIGH",
	"HISTOGRAM",
	"HOUR",
	"IF",
	"IFERROR",
	"IFNULL",
	"IGNORE_FOREIGN_KEYS",
	"ILIKE",
	"IMMEDIATE",
	"IMPORT",
	"IN",
	"INCREMENT",
	"INCREMENTAL",
	"INET",
	"INET_CONTAINED_BY_OR_EQUALS",
	"INET_CONTAINS_OR_EQUALS",
	"INDEX",
	"INDEXES",
	"INJECT",
	"INTERLEAVE",
	"INITIALLY",
	"INNER",
	"INSERT",
	"INT",
	"INT2VECTOR",
	"INT2",
	"INT4",
	"INT8",
	"INT64",
	"INTEGER",
	"INTERSECT",
	"INTERVAL",
	"INTO",
	"INVERTED",
	"IS",
	"ISERROR",
	"ISNULL",
	"ISOLATION",
	"JOB",
	"JOBS",
	"JOIN",
	"JSON",
	"JSONB",
	"JSON_SOME_EXISTS",
	"JSON_ALL_EXISTS",
	"KEY",
	"KEYS",
	"KV",
	"LANGUAGE",
	"LAST",
	"LATERAL",
	"LC_CTYPE",
	"LC_COLLATE",
	"LEADING",
	"LEASE",
	"LEAST",
	"LEFT",
	"LESS",
	"LEVEL",
	"LIKE",
	"LIMIT",
	"LIST",
	"LOCAL",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"LOCKED",
	"LOOKUP",
	"LOW",
	"LSHIFT",
	"MATCH",
	"MATERIALIZED",
	"MERGE",
	"MINVALUE",
	"MAXVALUE",
	"MINUTE",
	"MONTH",
	"NAN",
	"NAME",
	"NAMES",
	"NATURAL",
	"NEXT",
	"NO",
	"NO_INDEX_JOIN",
	"NONE",
	"NORMAL",
	"NOT",
	"NOTHING",
	"NOTNULL",
	"NOWAIT",
	"NULL",
	"NULLIF",
	"NULLS",
	"NUMERIC",
	"OF",
	"OFF",
	"OFFSET",
	"OID",
	"OIDS",
	"OIDVECTOR",
	"ON",
	"ONLY",
	"OPT",
	"OPTION",
	"OPTIONS",
	"OR",
	"ORDER",
	"ORDINALITY",
	"OTHERS",
	"OUT",
	"OUTER",
	"OVER",
	"OVERLAPS",
	"OVERLAY",
	"OWNED",
	"OPERATOR",
	"PARENT",
	"PARTIAL",
	"PARTITION",
	"PARTITIONS",
	"PASSWORD",
	"PAUSE",
	"PHYSICAL",
	"PLACING",
	"PLAN",
	"PLANS",
	"POSITION",
	"PRECEDING",
	"PRECISION",
	"PREPARE",
	"PRIMARY",
	"PRIORITY",
	"PROCEDURAL",
	"PUBLIC",
	"PUBLICATION",
	"QUERIES",
	"QUERY",
	"RANGE",
	"RANGES",
	"READ",
	"REAL",
	"RECURSIVE",
	"REF",
	"REFERENCES",
	"REGCLASS",
	"REGPROC",
	"REGPROCEDURE",
	"REGNAMESPACE",
	"REGTYPE",
	"REMOVE_PATH",
	"RENAME",
	"REPEATABLE",
	"REPLACE",
	"RELEASE",
	"RESET",
	"RESTORE",
	"RESTRICT",
	"RESUME",
	"RETURNING",
	"REVOKE",
	"RIGHT",
	"ROLE",
	"ROLES",
	"ROLLBACK",
	"ROLLUP",
	"ROW",
	"ROWS",
	"RSHIFT",
	"RULE",
	"SAVEPOINT",
	"SCATTER",
	"SCHEMA",
	"SCHEMAS",
	"SCRUB",
	"SEARCH",
	"SECOND",
	"SELECT",
	"SEQUENCE",
	"SEQUENCES",
	"SERIAL",
	"SERIAL2",
	"SERIAL4",
	"SERIAL8",
	"SERIALIZABLE",
	"SERVER",
	"SESSION",
	"SESSIONS",
	"SESSION_USER",
	"SET",
	"SETTING",
	"SETTINGS",
	"SHARE",
	"SHOW",
	"SIMILAR",
	"SIMPLE",
	"SKIP",
	"SMALLINT",
	"SMALLSERIAL",
	"SNAPSHOT",
	"SOME",
	"SPLIT",
	"SQL",
	"START",
	"STATISTICS",
	"STATUS",
	"STDIN",
	"STRICT",
	"STRING",
	"STORE",
	"STORED",
	"STORING",
	"SUBSTRING",
	"SYMMETRIC",
	"SYNTAX",
	"SYSTEM",
	"SUBSCRIPTION",
	"TABLE",
	"TABLES",
	"TEMP",
	"TEMPLATE",
	"TEMPORARY",
	"TESTING_RELOCATE",
	"EXPERIMENTAL_RELOCATE",
	"TEXT",
	"THEN",
	"TIES",
	"TIME",
	"TIMETZ",
	"TIMESTAMP",
	"TIMESTAMPTZ",
	"TO",
	"THROTTLING",
	"TRAILING",
	"TRACE",
	"TRANSACTION",
	"TREAT",
	"TRIGGER",
	"TRIM",
	"TRUE",
	"TRUNCATE",
	"TRUSTED",
	"TYPE",
	"TRACING",
	"UNBOUNDED",
	"UNCOMMITTED",
	"UNION",
	"UNIQUE",
	"UNKNOWN",
	"UNLOGGED",
	"UNSPLIT",
	"UPDATE",
	"UPSERT",
	"USE",
	"USER",
	"USERS",
	"USING",
	"UUID",
	"VALID",
	"VALIDATE",
	"VALUE",
	"VALUES",
	"VARBIT",
	"VARCHAR",
	"VARIADIC",
	"VIEW",
	"VARYING",
	"VIRTUAL",
	"WHEN",
	"WHERE",
	"WINDOW",
	"WITH",
	"WITHIN",
	"WITHOUT",
	"WORK",
	"WRITE",
	"YEAR",
	"ZONE",
	"NOT_LA",
	"WITH_LA",
	"AS_LA",
	"'<'",
	"'>'",
	"'='",
	"'~'",
	"CONTAINED_BY",
	"'?'",
	"POSTFIXOP",
	"'|'",
	"'#'",
	"'&'",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"'%'",
	"'^'",
	"UMINUS",
	"'['",
	"']'",
	"'('",
	"')'",
	"'.'",
	"HELPTOKEN",
	"'@'",
	"','",
	"'{'",
	"'}'",
	"':'",
}
var sqlStatenames = [...]string{}

const sqlEofCode = 1
const sqlErrCode = 2
const sqlInitialStackSize = 16

//line sql-gen.y:10137

//line yacctab:1
var sqlExca = [...]int{
	-1, 0,
	1, 24,
	-2, 1092,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 68,
	183, 914,
	200, 914,
	215, 252,
	298, 252,
	307, 744,
	334, 252,
	343, 744,
	382, 744,
	406, 252,
	430, 744,
	-2, 0,
	-1, 74,
	215, 256,
	-2, 0,
	-1, 75,
	110, 1092,
	189, 1092,
	416, 1092,
	417, 1092,
	-2, 0,
	-1, 87,
	123, 1066,
	139, 1066,
	152, 1066,
	197, 1066,
	227, 1066,
	262, 1066,
	272, 1066,
	411, 1066,
	-2, 1037,
	-1, 118,
	129, 662,
	214, 662,
	301, 642,
	352, 642,
	399, 662,
	-2, 0,
	-1, 119,
	4, 1094,
	21, 1094,
	22, 1094,
	23, 1094,
	24, 1094,
	25, 1094,
	27, 1094,
	33, 1094,
	38, 1094,
	39, 1094,
	40, 1094,
	41, 1094,
	42, 1094,
	43, 1094,
	44, 1094,
	45, 1094,
	46, 1094,
	47, 1094,
	48, 1094,
	49, 1094,
	50, 1094,
	52, 1094,
	53, 1094,
	54, 1094,
	55, 1094,
	56, 1094,
	57, 1094,
	60, 1094,
	61, 1094,
	62, 1094,
	63, 1094,
	65, 1094,
	66, 1094,
	70, 1094,
	71, 1094,
	72, 1094,
	73, 1094,
	74, 1094,
	75, 1094,
	77, 1094,
	78, 1094,
	79, 1094,
	80, 1094,
	82, 1094,
	84, 1094,
	85, 1094,
	86, 1094,
	89, 1094,
	90, 1094,
	98, 1094,
	99, 1094,
	100, 1094,
	101, 1094,
	102, 1094,
	103, 1094,
	104, 1094,
	105, 1094,
	107, 1094,
	109, 1094,
	110, 1094,
	112, 1094,
	115, 1094,
	116, 1094,
	117, 1094,
	119, 1094,
	121, 1094,
	122, 1094,
	124, 1094,
	125, 1094,
	126, 1094,
	127, 1094,
	128, 1094,
	129, 1094,
	130, 1094,
	131, 1094,
	132, 1094,
	133, 1094,
	134, 1094,
	135, 1094,
	136, 1094,
	138, 1094,
	144, 1094,
	145, 1094,
	146, 1094,
	147, 1094,
	148, 1094,
	149, 1094,
	151, 1094,
	153, 1094,
	157, 1094,
	158, 1094,
	160, 1094,
	161, 1094,
	163, 1094,
	164, 1094,
	166, 1094,
	167, 1094,
	168, 1094,
	169, 1094,
	170, 1094,
	171, 1094,
	172, 1094,
	173, 1094,
	175, 1094,
	176, 1094,
	178, 1094,
	179, 1094,
	180, 1094,
	183, 1094,
	184, 1094,
	185, 1094,
	186, 1094,
	189, 1094,
	190, 1094,
	191, 1094,
	192, 1094,
	193, 1094,
	194, 1094,
	195, 1094,
	196, 1094,
	198, 1094,
	200, 1094,
	202, 1094,
	204, 1094,
	205, 1094,
	206, 1094,
	208, 1094,
	209, 1094,
	212, 1094,
	213, 1094,
	214, 1094,
	215, 1094,
	216, 1094,
	218, 1094,
	219, 1094,
	221, 1094,
	222, 1094,
	224, 1094,
	225, 1094,
	228, 1094,
	229, 1094,
	232, 1094,
	233, 1094,
	234, 1094,
	236, 1094,
	237, 1094,
	238, 1094,
	239, 1094,
	240, 1094,
	241, 1094,
	242, 1094,
	243, 1094,
	244, 1094,
	245, 1094,
	247, 1094,
	248, 1094,
	249, 1094,
	251, 1094,
	253, 1094,
	255, 1094,
	257, 1094,
	258, 1094,
	259, 1094,
	260, 1094,
	261, 1094,
	263, 1094,
	264, 1094,
	265, 1094,
	267, 1094,
	268, 1094,
	269, 1094,
	270, 1094,
	273, 1094,
	274, 1094,
	275, 1094,
	277, 1094,
	279, 1094,
	280, 1094,
	281, 1094,
	282, 1094,
	283, 1094,
	284, 1094,
	285, 1094,
	286, 1094,
	287, 1094,
	288, 1094,
	290, 1094,
	291, 1094,
	292, 1094,
	293, 1094,
	294, 1094,
	295, 1094,
	297, 1094,
	299, 1094,
	300, 1094,
	301, 1094,
	302, 1094,
	303, 1094,
	304, 1094,
	305, 1094,
	306, 1094,
	307, 1094,
	308, 1094,
	310, 1094,
	311, 1094,
	312, 1094,
	313, 1094,
	314, 1094,
	316, 1094,
	317, 1094,
	318, 1094,
	319, 1094,
	320, 1094,
	321, 1094,
	322, 1094,
	323, 1094,
	325, 1094,
	327, 1094,
	328, 1094,
	329, 1094,
	330, 1094,
	331, 1094,
	332, 1094,
	334, 1094,
	335, 1094,
	336, 1094,
	337, 1094,
	338, 1094,
	339, 1094,
	340, 1094,
	341, 1094,
	343, 1094,
	344, 1094,
	345, 1094,
	346, 1094,
	347, 1094,
	348, 1094,
	349, 1094,
	350, 1094,
	351, 1094,
	352, 1094,
	354, 1094,
	355, 1094,
	356, 1094,
	357, 1094,
	358, 1094,
	360, 1094,
	361, 1094,
	362, 1094,
	363, 1094,
	364, 1094,
	366, 1094,
	367, 1094,
	368, 1094,
	369, 1094,
	370, 1094,
	371, 1094,
	372, 1094,
	373, 1094,
	374, 1094,
	375, 1094,
	376, 1094,
	377, 1094,
	379, 1094,
	380, 1094,
	381, 1094,
	383, 1094,
	384, 1094,
	385, 1094,
	386, 1094,
	387, 1094,
	388, 1094,
	389, 1094,
	391, 1094,
	392, 1094,
	393, 1094,
	394, 1094,
	395, 1094,
	397, 1094,
	399, 1094,
	400, 1094,
	401, 1094,
	402, 1094,
	403, 1094,
	405, 1094,
	406, 1094,
	407, 1094,
	409, 1094,
	410, 1094,
	413, 1094,
	414, 1094,
	415, 1094,
	416, 1094,
	417, 1094,
	418, 1094,
	420, 1094,
	422, 1094,
	423, 1094,
	424, 1094,
	425, 1094,
	426, 1094,
	427, 1094,
	428, 1094,
	430, 1094,
	431, 1094,
	432, 1094,
	437, 1094,
	438, 1094,
	439, 1094,
	440, 1094,
	441, 1094,
	442, 1094,
	-2, 0,
	-1, 120,
	1, 967,
	204, 967,
	297, 967,
	305, 967,
	445, 967,
	468, 967,
	-2, 0,
	-1, 122,
	1, 967,
	468, 967,
	-2, 0,
	-1, 123,
	1, 967,
	468, 967,
	-2, 0,
	-1, 124,
	1, 971,
	468, 971,
	-2, 0,
	-1, 149,
	123, 1065,
	139, 1065,
	152, 1065,
	197, 1065,
	227, 1065,
	262, 1065,
	272, 1065,
	411, 1065,
	-2, 1040,
	-1, 182,
	4, 1101,
	5, 1101,
	6, 1101,
	7, 1101,
	8, 1101,
	9, 1101,
	10, 1101,
	21, 1101,
	22, 1101,
	23, 1101,
	24, 1101,
	25, 1101,
	27, 1101,
	33, 1101,
	34, 1101,
	38, 1101,
	39, 1101,
	40, 1101,
	41, 1101,
	42, 1101,
	43, 1101,
	44, 1101,
	45, 1101,
	46, 1101,
	47, 1101,
	48, 1101,
	49, 1101,
	50, 1101,
	52, 1101,
	53, 1101,
	54, 1101,
	55, 1101,
	56, 1101,
	57, 1101,
	58, 1101,
	59, 1101,
	60, 1101,
	61, 1101,
	62, 1101,
	63, 1101,
	65, 1101,
	66, 1101,
	68, 1101,
	70, 1101,
	71, 1101,
	72, 1101,
	73, 1101,
	74, 1101,
	75, 1101,
	77, 1101,
	78, 1101,
	79, 1101,
	80, 1101,
	82, 1101,
	84, 1101,
	85, 1101,
	86, 1101,
	88, 1101,
	89, 1101,
	90, 1101,
	91, 1101,
	92, 1101,
	93, 1101,
	94, 1101,
	95, 1101,
	96, 1101,
	97, 1101,
	98, 1101,
	99, 1101,
	100, 1101,
	101, 1101,
	102, 1101,
	103, 1101,
	104, 1101,
	105, 1101,
	106, 1101,
	107, 1101,
	109, 1101,
	110, 1101,
	112, 1101,
	115, 1101,
	116, 1101,
	117, 1101,
	119, 1101,
	121, 1101,
	122, 1101,
	124, 1101,
	125, 1101,
	126, 1101,
	127, 1101,
	128, 1101,
	129, 1101,
	130, 1101,
	131, 1101,
	132, 1101,
	133, 1101,
	134, 1101,
	135, 1101,
	136, 1101,
	137, 1101,
	138, 1101,
	144, 1101,
	145, 1101,
	146, 1101,
	147, 1101,
	148, 1101,
	149, 1101,
	151, 1101,
	153, 1101,
	156, 1101,
	157, 1101,
	158, 1101,
	160, 1101,
	161, 1101,
	163, 1101,
	164, 1101,
	166, 1101,
	167, 1101,
	168, 1101,
	169, 1101,
	170, 1101,
	171, 1101,
	172, 1101,
	173, 1101,
	174, 1101,
	175, 1101,
	176, 1101,
	178, 1101,
	179, 1101,
	180, 1101,
	183, 1101,
	184, 1101,
	185, 1101,
	186, 1101,
	188, 1101,
	189, 1101,
	190, 1101,
	191, 1101,
	192, 1101,
	193, 1101,
	194, 1101,
	195, 1101,
	196, 1101,
	198, 1101,
	200, 1101,
	201, 1101,
	202, 1101,
	203, 1101,
	204, 1101,
	205, 1101,
	206, 1101,
	207, 1101,
	208, 1101,
	209, 1101,
	212, 1101,
	213, 1101,
	214, 1101,
	215, 1101,
	216, 1101,
	218, 1101,
	219, 1101,
	221, 1101,
	222, 1101,
	223, 1101,
	224, 1101,
	225, 1101,
	226, 1101,
	228, 1101,
	229, 1101,
	230, 1101,
	231, 1101,
	232, 1101,
	233, 1101,
	234, 1101,
	236, 1101,
	237, 1101,
	238, 1101,
	239, 1101,
	240, 1101,
	241, 1101,
	242, 1101,
	243, 1101,
	244, 1101,
	245, 1101,
	246, 1101,
	247, 1101,
	248, 1101,
	249, 1101,
	250, 1101,
	251, 1101,
	252, 1101,
	253, 1101,
	254, 1101,
	255, 1101,
	256, 1101,
	257, 1101,
	258, 1101,
	259, 1101,
	260, 1101,
	261, 1101,
	263, 1101,
	264, 1101,
	265, 1101,
	268, 1101,
	269, 1101,
	270, 1101,
	273, 1101,
	274, 1101,
	275, 1101,
	276, 1101,
	277, 1101,
	278, 1101,
	279, 1101,
	280, 1101,
	281, 1101,
	282, 1101,
	283, 1101,
	284, 1101,
	285, 1101,
	286, 1101,
	287, 1101,
	288, 1101,
	290, 1101,
	291, 1101,
	292, 1101,
	293, 1101,
	294, 1101,
	295, 1101,
	297, 1101,
	299, 1101,
	300, 1101,
	301, 1101,
	302, 1101,
	303, 1101,
	304, 1101,
	305, 1101,
	306, 1101,
	307, 1101,
	308, 1101,
	310, 1101,
	311, 1101,
	312, 1101,
	313, 1101,
	314, 1101,
	316, 1101,
	317, 1101,
	318, 1101,
	319, 1101,
	320, 1101,
	321, 1101,
	322, 1101,
	323, 1101,
	325, 1101,
	326, 1101,
	327, 1101,
	328, 1101,
	329, 1101,
	330, 1101,
	331, 1101,
	332, 1101,
	334, 1101,
	335, 1101,
	336, 1101,
	337, 1101,
	338, 1101,
	339, 1101,
	340, 1101,
	341, 1101,
	343, 1101,
	344, 1101,
	345, 1101,
	346, 1101,
	347, 1101,
	348, 1101,
	349, 1101,
	350, 1101,
	351, 1101,
	352, 1101,
	353, 1101,
	354, 1101,
	355, 1101,
	356, 1101,
	357, 1101,
	358, 1101,
	359, 1101,
	360, 1101,
	361, 1101,
	362, 1101,
	363, 1101,
	364, 1101,
	366, 1101,
	367, 1101,
	368, 1101,
	369, 1101,
	370, 1101,
	371, 1101,
	372, 1101,
	373, 1101,
	374, 1101,
	375, 1101,
	376, 1101,
	377, 1101,
	379, 1101,
	380, 1101,
	381, 1101,
	383, 1101,
	384, 1101,
	385, 1101,
	386, 1101,
	387, 1101,
	388, 1101,
	389, 1101,
	391, 1101,
	392, 1101,
	393, 1101,
	394, 1101,
	395, 1101,
	397, 1101,
	399, 1101,
	400, 1101,
	401, 1101,
	402, 1101,
	403, 1101,
	404, 1101,
	405, 1101,
	406, 1101,
	407, 1101,
	409, 1101,
	410, 1101,
	412, 1101,
	413, 1101,
	414, 1101,
	415, 1101,
	416, 1101,
	417, 1101,
	418, 1101,
	419, 1101,
	420, 1101,
	422, 1101,
	423, 1101,
	424, 1101,
	425, 1101,
	426, 1101,
	427, 1101,
	428, 1101,
	430, 1101,
	431, 1101,
	432, 1101,
	437, 1101,
	438, 1101,
	439, 1101,
	440, 1101,
	441, 1101,
	442, 1101,
	443, 1101,
	449, 1101,
	456, 1101,
	457, 1101,
	458, 1101,
	465, 1101,
	469, 1101,
	-2, 0,
	-1, 562,
	155, 1801,
	396, 1801,
	448, 1801,
	467, 1801,
	-2, 0,
	-1, 563,
	155, 1880,
	396, 1880,
	448, 1880,
	467, 1880,
	-2, 0,
	-1, 564,
	155, 1790,
	396, 1790,
	448, 1790,
	467, 1790,
	-2, 0,
	-1, 566,
	155, 1973,
	396, 1973,
	448, 1973,
	467, 1973,
	-2, 0,
	-1, 568,
	155, 2003,
	396, 2003,
	448, 2003,
	467, 2003,
	-2, 0,
	-1, 575,
	155, 1891,
	396, 1891,
	448, 1891,
	467, 1891,
	-2, 509,
	-1, 593,
	467, 1747,
	470, 1747,
	-2, 713,
	-1, 594,
	467, 1749,
	470, 1749,
	-2, 714,
	-1, 595,
	467, 1748,
	470, 1748,
	-2, 715,
	-1, 596,
	470, 1686,
	-2, 716,
	-1, 639,
	430, 896,
	-2, 745,
	-1, 746,
	301, 643,
	352, 643,
	-2, 0,
	-1, 747,
	301, 642,
	352, 642,
	-2, 590,
	-1, 751,
	1, 672,
	464, 672,
	466, 672,
	468, 672,
	-2, 0,
	-1, 752,
	1, 712,
	152, 712,
	464, 712,
	466, 712,
	468, 712,
	-2, 0,
	-1, 760,
	1, 646,
	464, 646,
	466, 646,
	468, 646,
	-2, 0,
	-1, 763,
	1, 672,
	464, 672,
	466, 672,
	468, 672,
	-2, 0,
	-1, 764,
	1, 674,
	464, 674,
	466, 674,
	468, 674,
	-2, 0,
	-1, 765,
	1, 677,
	464, 677,
	466, 677,
	468, 677,
	-2, 0,
	-1, 769,
	1, 691,
	464, 691,
	466, 691,
	468, 691,
	-2, 0,
	-1, 770,
	1, 693,
	464, 693,
	466, 693,
	468, 693,
	-2, 0,
	-1, 814,
	139, 1103,
	152, 1103,
	227, 1103,
	262, 1103,
	-2, 1044,
	-1, 827,
	139, 1102,
	152, 1102,
	227, 1102,
	262, 1102,
	-2, 1041,
	-1, 851,
	467, 1746,
	-2, 517,
	-1, 879,
	465, 1738,
	-2, 1729,
	-1, 885,
	5, 1243,
	-2, 1780,
	-1, 886,
	5, 1244,
	-2, 1785,
	-1, 887,
	5, 1245,
	-2, 1784,
	-1, 888,
	5, 1246,
	-2, 2000,
	-1, 889,
	5, 1247,
	-2, 1893,
	-1, 890,
	5, 1248,
	-2, 1965,
	-1, 891,
	5, 1249,
	-2, 1967,
	-1, 892,
	5, 1250,
	-2, 1980,
	-1, 893,
	5, 1251,
	-2, 1968,
	-1, 894,
	5, 1252,
	-2, 1969,
	-1, 895,
	5, 1253,
	-2, 1779,
	-1, 896,
	5, 1254,
	-2, 2016,
	-1, 897,
	5, 1255,
	-2, 1854,
	-1, 898,
	5, 1256,
	-2, 1903,
	-1, 899,
	5, 1257,
	-2, 1905,
	-1, 900,
	5, 1258,
	-2, 1858,
	-1, 901,
	5, 1259,
	465, 1756,
	-2, 1747,
	-1, 907,
	465, 1757,
	-2, 1748,
	-1, 909,
	5, 1263,
	-2, 2049,
	-1, 910,
	5, 1264,
	-2, 2050,
	-1, 911,
	5, 1265,
	-2, 1857,
	-1, 912,
	5, 1266,
	-2, 2062,
	-1, 913,
	5, 1267,
	-2, 1859,
	-1, 914,
	5, 1268,
	-2, 1860,
	-1, 915,
	5, 1269,
	-2, 1861,
	-1, 916,
	5, 1270,
	-2, 2031,
	-1, 917,
	5, 1271,
	-2, 2060,
	-1, 918,
	5, 1272,
	-2, 1837,
	-1, 919,
	5, 1273,
	-2, 1838,
	-1, 920,
	5, 1287,
	-2, 2043,
	-1, 922,
	5, 1262,
	-2, 2039,
	-1, 923,
	5, 1262,
	-2, 2038,
	-1, 924,
	5, 1262,
	-2, 2055,
	-1, 925,
	5, 1279,
	-2, 2033,
	-1, 926,
	5, 1280,
	-2, 1781,
	-1, 927,
	5, 1290,
	-2, 2032,
	-1, 928,
	5, 1292,
	-2, 2071,
	-1, 930,
	5, 1303,
	-2, 1811,
	-1, 931,
	5, 1314,
	-2, 2064,
	-1, 932,
	5, 1306,
	-2, 2065,
	-1, 933,
	5, 1314,
	-2, 2066,
	-1, 934,
	5, 1310,
	-2, 2067,
	-1, 935,
	5, 1231,
	-2, 1867,
	-1, 936,
	5, 1232,
	-2, 1868,
	-1, 937,
	467, 1744,
	-2, 1728,
	-1, 938,
	465, 2092,
	-2, 1745,
	-1, 960,
	5, 1298,
	-2, 1991,
	-1, 978,
	5, 1297,
	-2, 2072,
	-1, 988,
	5, 1299,
	431, 1299,
	-2, 2034,
	-1, 989,
	5, 1300,
	431, 1300,
	-2, 2035,
	-1, 1026,
	465, 1756,
	-2, 1747,
	-1, 1054,
	155, 2003,
	396, 2003,
	448, 2003,
	467, 2003,
	-2, 0,
	-1, 1057,
	1, 495,
	468, 495,
	-2, 979,
	-1, 1177,
	316, 1725,
	458, 1725,
	-2, 1724,
	-1, 1200,
	469, 1725,
	-2, 1726,
	-1, 1238,
	307, 744,
	430, 744,
	-2, 251,
	-1, 1258,
	286, 1090,
	-2, 884,
	-1, 1267,
	266, 1751,
	-2, 0,
	-1, 1333,
	1, 370,
	464, 370,
	466, 370,
	468, 370,
	-2, 1064,
	-1, 1336,
	4, 2070,
	11, 2070,
	12, 2070,
	14, 2070,
	15, 2070,
	16, 2070,
	17, 2070,
	18, 2070,
	19, 2070,
	21, 2070,
	22, 2070,
	23, 2070,
	24, 2070,
	25, 2070,
	27, 2070,
	30, 2070,
	31, 2070,
	33, 2070,
	35, 2070,
	38, 2070,
	39, 2070,
	40, 2070,
	41, 2070,
	42, 2070,
	43, 2070,
	44, 2070,
	45, 2070,
	46, 2070,
	47, 2070,
	48, 2070,
	49, 2070,
	50, 2070,
	52, 2070,
	53, 2070,
	54, 2070,
	55, 2070,
	56, 2070,
	57, 2070,
	60, 2070,
	61, 2070,
	62, 2070,
	63, 2070,
	65, 2070,
	66, 2070,
	67, 2070,
	70, 2070,
	71, 2070,
	72, 2070,
	73, 2070,
	74, 2070,
	75, 2070,
	76, 2070,
	77, 2070,
	78, 2070,
	79, 2070,
	80, 2070,
	82, 2070,
	83, 2070,
	84, 2070,
	85, 2070,
	86, 2070,
	88, 2070,
	89, 2070,
	90, 2070,
	98, 2070,
	99, 2070,
	100, 2070,
	101, 2070,
	102, 2070,
	103, 2070,
	104, 2070,
	105, 2070,
	107, 2070,
	109, 2070,
	110, 2070,
	112, 2070,
	115, 2070,
	116, 2070,
	117, 2070,
	119, 2070,
	121, 2070,
	122, 2070,
	124, 2070,
	125, 2070,
	126, 2070,
	127, 2070,
	128, 2070,
	129, 2070,
	130, 2070,
	131, 2070,
	132, 2070,
	133, 2070,
	134, 2070,
	135, 2070,
	136, 2070,
	140, 2070,
	141, 2070,
	142, 2070,
	143, 2070,
	144, 2070,
	145, 2070,
	146, 2070,
	147, 2070,
	148, 2070,
	149, 2070,
	150, 2070,
	151, 2070,
	153, 2070,
	156, 2070,
	157, 2070,
	158, 2070,
	160, 2070,
	161, 2070,
	163, 2070,
	164, 2070,
	166, 2070,
	167, 2070,
	168, 2070,
	169, 2070,
	170, 2070,
	171, 2070,
	172, 2070,
	173, 2070,
	174, 2070,
	175, 2070,
	176, 2070,
	177, 2070,
	178, 2070,
	179, 2070,
	180, 2070,
	181, 2070,
	182, 2070,
	184, 2070,
	185, 2070,
	186, 2070,
	188, 2070,
	189, 2070,
	190, 2070,
	191, 2070,
	192, 2070,
	193, 2070,
	194, 2070,
	195, 2070,
	196, 2070,
	198, 2070,
	200, 2070,
	201, 2070,
	202, 2070,
	203, 2070,
	204, 2070,
	205, 2070,
	206, 2070,
	207, 2070,
	208, 2070,
	209, 2070,
	210, 2070,
	211, 2070,
	212, 2070,
	213, 2070,
	214, 2070,
	215, 2070,
	216, 2070,
	218, 2070,
	219, 2070,
	221, 2070,
	222, 2070,
	223, 2070,
	224, 2070,
	225, 2070,
	226, 2070,
	228, 2070,
	229, 2070,
	232, 2070,
	233, 2070,
	234, 2070,
	235, 2070,
	236, 2070,
	237, 2070,
	238, 2070,
	239, 2070,
	240, 2070,
	241, 2070,
	242, 2070,
	243, 2070,
	244, 2070,
	245, 2070,
	246, 2070,
	247, 2070,
	248, 2070,
	249, 2070,
	251, 2070,
	254, 2070,
	255, 2070,
	257, 2070,
	258, 2070,
	259, 2070,
	260, 2070,
	261, 2070,
	263, 2070,
	264, 2070,
	265, 2070,
	268, 2070,
	269, 2070,
	270, 2070,
	271, 2070,
	273, 2070,
	274, 2070,
	275, 2070,
	277, 2070,
	279, 2070,
	280, 2070,
	281, 2070,
	282, 2070,
	283, 2070,
	284, 2070,
	285, 2070,
	286, 2070,
	287, 2070,
	288, 2070,
	290, 2070,
	291, 2070,
	292, 2070,
	293, 2070,
	294, 2070,
	295, 2070,
	297, 2070,
	299, 2070,
	300, 2070,
	301, 2070,
	302, 2070,
	303, 2070,
	304, 2070,
	305, 2070,
	306, 2070,
	307, 2070,
	308, 2070,
	310, 2070,
	311, 2070,
	312, 2070,
	313, 2070,
	314, 2070,
	315, 2070,
	316, 2070,
	317, 2070,
	318, 2070,
	319, 2070,
	320, 2070,
	321, 2070,
	322, 2070,
	323, 2070,
	325, 2070,
	326, 2070,
	327, 2070,
	328, 2070,
	329, 2070,
	330, 2070,
	331, 2070,
	332, 2070,
	333, 2070,
	334, 2070,
	335, 2070,
	336, 2070,
	337, 2070,
	338, 2070,
	339, 2070,
	340, 2070,
	341, 2070,
	343, 2070,
	344, 2070,
	345, 2070,
	346, 2070,
	347, 2070,
	348, 2070,
	349, 2070,
	350, 2070,
	351, 2070,
	352, 2070,
	354, 2070,
	355, 2070,
	356, 2070,
	357, 2070,
	358, 2070,
	359, 2070,
	360, 2070,
	361, 2070,
	362, 2070,
	363, 2070,
	364, 2070,
	366, 2070,
	367, 2070,
	368, 2070,
	369, 2070,
	370, 2070,
	371, 2070,
	372, 2070,
	373, 2070,
	374, 2070,
	375, 2070,
	376, 2070,
	377, 2070,
	379, 2070,
	380, 2070,
	381, 2070,
	383, 2070,
	384, 2070,
	385, 2070,
	386, 2070,
	387, 2070,
	388, 2070,
	389, 2070,
	391, 2070,
	392, 2070,
	393, 2070,
	394, 2070,
	395, 2070,
	397, 2070,
	399, 2070,
	400, 2070,
	401, 2070,
	402, 2070,
	403, 2070,
	405, 2070,
	406, 2070,
	407, 2070,
	409, 2070,
	410, 2070,
	413, 2070,
	414, 2070,
	415, 2070,
	416, 2070,
	417, 2070,
	418, 2070,
	420, 2070,
	422, 2070,
	423, 2070,
	424, 2070,
	425, 2070,
	426, 2070,
	427, 2070,
	428, 2070,
	430, 2070,
	431, 2070,
	432, 2070,
	437, 2070,
	438, 2070,
	439, 2070,
	440, 2070,
	441, 2070,
	442, 2070,
	443, 2070,
	444, 2070,
	446, 2070,
	447, 2070,
	448, 2070,
	449, 2070,
	450, 2070,
	451, 2070,
	453, 2070,
	454, 2070,
	455, 2070,
	456, 2070,
	457, 2070,
	458, 2070,
	459, 2070,
	460, 2070,
	461, 2070,
	463, 2070,
	466, 2070,
	467, 2070,
	469, 2070,
	470, 2070,
	-2, 0,
	-1, 1341,
	155, 1973,
	396, 1973,
	448, 1973,
	467, 1973,
	-2, 0,
	-1, 1373,
	301, 643,
	352, 643,
	-2, 0,
	-1, 1397,
	1, 638,
	464, 638,
	466, 638,
	468, 638,
	-2, 0,
	-1, 1398,
	1, 663,
	464, 663,
	466, 663,
	468, 663,
	-2, 0,
	-1, 1399,
	1, 645,
	464, 645,
	466, 645,
	468, 645,
	-2, 0,
	-1, 1401,
	1, 649,
	464, 649,
	466, 649,
	468, 649,
	-2, 0,
	-1, 1426,
	1, 2023,
	464, 2023,
	466, 2023,
	467, 2023,
	468, 2023,
	-2, 689,
	-1, 1427,
	1, 1970,
	464, 1970,
	466, 1970,
	467, 1970,
	468, 1970,
	-2, 690,
	-1, 1442,
	1, 974,
	468, 974,
	-2, 979,
	-1, 1446,
	139, 1102,
	152, 1102,
	227, 1102,
	262, 1102,
	-2, 1045,
	-1, 1540,
	123, 1066,
	139, 1066,
	152, 1066,
	197, 1066,
	227, 1066,
	262, 1066,
	272, 1066,
	411, 1066,
	-2, 1472,
	-1, 1597,
	466, 1620,
	-2, 0,
	-1, 1631,
	123, 1066,
	139, 1066,
	152, 1066,
	197, 1066,
	227, 1066,
	262, 1066,
	272, 1066,
	411, 1066,
	-2, 1181,
	-1, 1690,
	465, 1302,
	-2, 1290,
	-1, 1734,
	1, 497,
	468, 497,
	-2, 979,
	-1, 1941,
	1, 640,
	464, 640,
	466, 640,
	468, 640,
	-2, 0,
	-1, 1942,
	1, 665,
	464, 665,
	466, 665,
	468, 665,
	-2, 0,
	-1, 2014,
	331, 1127,
	332, 1127,
	-2, 1335,
	-1, 2045,
	14, 0,
	15, 0,
	16, 0,
	446, 0,
	447, 0,
	448, 0,
	-2, 1353,
	-1, 2046,
	14, 0,
	15, 0,
	16, 0,
	446, 0,
	447, 0,
	448, 0,
	-2, 1354,
	-1, 2047,
	83, 0,
	210, 0,
	211, 0,
	450, 0,
	451, 0,
	-2, 1355,
	-1, 2048,
	83, 0,
	210, 0,
	211, 0,
	450, 0,
	451, 0,
	-2, 1356,
	-1, 2049,
	83, 0,
	210, 0,
	211, 0,
	450, 0,
	451, 0,
	-2, 1357,
	-1, 2050,
	83, 0,
	210, 0,
	211, 0,
	450, 0,
	451, 0,
	-2, 1358,
	-1, 2051,
	83, 0,
	210, 0,
	211, 0,
	450, 0,
	451, 0,
	-2, 1359,
	-1, 2052,
	14, 0,
	15, 0,
	16, 0,
	446, 0,
	447, 0,
	448, 0,
	-2, 1360,
	-1, 2064,
	14, 0,
	15, 0,
	16, 0,
	446, 0,
	447, 0,
	448, 0,
	-2, 1372,
	-1, 2065,
	14, 0,
	15, 0,
	16, 0,
	446, 0,
	447, 0,
	448, 0,
	-2, 1373,
	-1, 2066,
	14, 0,
	15, 0,
	16, 0,
	446, 0,
	447, 0,
	448, 0,
	-2, 1374,
	-1, 2069,
	17, 0,
	18, 0,
	19, 0,
	43, 0,
	174, 0,
	177, 0,
	226, 0,
	359, 0,
	443, 0,
	449, 0,
	-2, 1379,
	-1, 2075,
	17, 0,
	18, 0,
	19, 0,
	43, 0,
	174, 0,
	177, 0,
	226, 0,
	359, 0,
	443, 0,
	449, 0,
	-2, 1383,
	-1, 2077,
	17, 0,
	18, 0,
	19, 0,
	43, 0,
	174, 0,
	177, 0,
	226, 0,
	359, 0,
	443, 0,
	449, 0,
	-2, 1391,
	-1, 2078,
	17, 0,
	18, 0,
	19, 0,
	43, 0,
	174, 0,
	177, 0,
	226, 0,
	359, 0,
	443, 0,
	449, 0,
	-2, 1392,
	-1, 2079,
	17, 0,
	18, 0,
	19, 0,
	43, 0,
	174, 0,
	177, 0,
	226, 0,
	359, 0,
	443, 0,
	449, 0,
	-2, 1393,
	-1, 2080,
	17, 0,
	18, 0,
	19, 0,
	43, 0,
	174, 0,
	177, 0,
	226, 0,
	359, 0,
	443, 0,
	449, 0,
	-2, 1394,
	-1, 2182,
	5, 1259,
	155, 1631,
	465, 1756,
	-2, 1747,
	-1, 2183,
	155, 1632,
	-2, 2027,
	-1, 2184,
	155, 1633,
	-2, 1890,
	-1, 2185,
	155, 1634,
	-2, 1812,
	-1, 2186,
	155, 1635,
	-2, 1848,
	-1, 2187,
	155, 1636,
	-2, 1888,
	-1, 2188,
	155, 1637,
	-2, 1964,
	-1, 2189,
	155, 1638,
	-2, 1456,
	-1, 2258,
	1, 1182,
	2, 1182,
	88, 1182,
	123, 1182,
	139, 1182,
	152, 1182,
	156, 1182,
	162, 1182,
	165, 1182,
	188, 1182,
	197, 1182,
	207, 1182,
	223, 1182,
	227, 1182,
	246, 1182,
	262, 1182,
	266, 1182,
	272, 1182,
	324, 1182,
	326, 1182,
	411, 1182,
	421, 1182,
	434, 1182,
	435, 1182,
	436, 1182,
	445, 1182,
	464, 1182,
	466, 1182,
	468, 1182,
	470, 1182,
	-2, 1181,
	-1, 2271,
	465, 1730,
	-2, 1742,
	-1, 2291,
	465, 1301,
	-2, 1291,
	-1, 2536,
	267, 1130,
	-2, 2061,
	-1, 2537,
	267, 1131,
	-2, 1953,
	-1, 2541,
	331, 1697,
	332, 1697,
	-2, 1454,
	-1, 2542,
	331, 1701,
	332, 1701,
	-2, 1455,
	-1, 2543,
	331, 1698,
	332, 1698,
	-2, 1454,
	-1, 2544,
	331, 1702,
	332, 1702,
	-2, 1455,
	-1, 2557,
	17, 0,
	18, 0,
	19, 0,
	43, 0,
	174, 0,
	177, 0,
	226, 0,
	359, 0,
	443, 0,
	449, 0,
	-2, 1381,
	-1, 2558,
	17, 0,
	18, 0,
	19, 0,
	43, 0,
	174, 0,
	177, 0,
	226, 0,
	359, 0,
	443, 0,
	449, 0,
	-2, 1385,
	-1, 2564,
	17, 0,
	18, 0,
	19, 0,
	43, 0,
	174, 0,
	177, 0,
	226, 0,
	359, 0,
	443, 0,
	449, 0,
	-2, 1387,
	-1, 2753,
	204, 979,
	297, 979,
	305, 979,
	445, 979,
	-2, 494,
	-1, 2848,
	286, 1090,
	-2, 884,
	-1, 2938,
	17, 0,
	18, 0,
	19, 0,
	43, 0,
	174, 0,
	177, 0,
	226, 0,
	359, 0,
	443, 0,
	449, 0,
	-2, 1389,
	-1, 2945,
	201, 0,
	203, 0,
	254, 0,
	-2, 1408,
	-1, 3008,
	14, 0,
	15, 0,
	16, 0,
	446, 0,
	447, 0,
	448, 0,
	-2, 1437,
	-1, 3009,
	14, 0,
	15, 0,
	16, 0,
	446, 0,
	447, 0,
	448, 0,
	-2, 1438,
	-1, 3010,
	14, 0,
	15, 0,
	16, 0,
	446, 0,
	447, 0,
	448, 0,
	-2, 1439,
	-1, 3014,
	14, 0,
	15, 0,
	16, 0,
	446, 0,
	447, 0,
	448, 0,
	-2, 1443,
	-1, 3015,
	14, 0,
	15, 0,
	16, 0,
	446, 0,
	447, 0,
	448, 0,
	-2, 1444,
	-1, 3016,
	14, 0,
	15, 0,
	16, 0,
	446, 0,
	447, 0,
	448, 0,
	-2, 1445,
	-1, 3060,
	465, 1731,
	-2, 1743,
	-1, 3150,
	467, 2174,
	-2, 1023,
	-1, 3200,
	201, 0,
	203, 0,
	254, 0,
	-2, 1409,
	-1, 3203,
	17, 0,
	18, 0,
	19, 0,
	43, 0,
	174, 0,
	177, 0,
	226, 0,
	359, 0,
	443, 0,
	449, 0,
	-2, 1412,
	-1, 3204,
	17, 0,
	18, 0,
	19, 0,
	43, 0,
	174, 0,
	177, 0,
	226, 0,
	359, 0,
	443, 0,
	449, 0,
	-2, 1414,
	-1, 3368,
	17, 0,
	18, 0,
	19, 0,
	43, 0,
	174, 0,
	177, 0,
	226, 0,
	359, 0,
	443, 0,
	449, 0,
	-2, 1413,
	-1, 3369,
	17, 0,
	18, 0,
	19, 0,
	43, 0,
	174, 0,
	177, 0,
	226, 0,
	359, 0,
	443, 0,
	449, 0,
	-2, 1415,
	-1, 3379,
	201, 0,
	-2, 1446,
	-1, 3493,
	201, 0,
	-2, 1447,
	-1, 3622,
	43, 0,
	174, 0,
	226, 0,
	359, 0,
	443, 0,
	449, 0,
	-2, 2030,
}

const sqlPrivate = 57344

const sqlLast = 83950

var sqlAct = [...]int{

	907, 3408, 3437, 3727, 3411, 3621, 3304, 3714, 3632, 3514,
	2214, 3599, 2835, 3587, 2684, 3590, 3633, 3672, 1209, 3572,
	3444, 3634, 2976, 2436, 1027, 3397, 3497, 2685, 3620, 3183,
	837, 2323, 3333, 2032, 3142, 3137, 3357, 1181, 3453, 214,
	852, 214, 214, 32, 214, 214, 214, 214, 214, 2864,
	3080, 214, 1455, 1665, 3338, 3317, 3261, 2770, 2092, 595,
	2857, 2831, 3122, 1785, 573, 3383, 2859, 1325, 3081, 2425,
	2930, 2550, 2471, 2469, 2411, 1082, 2383, 214, 2408, 2400,
	2727, 595, 2707, 3234, 2699, 2479, 1019, 2670, 3182, 1870,
	693, 1174, 2460, 2688, 1637, 1381, 1873, 2437, 2468, 2462,
	1826, 1321, 1606, 1808, 1863, 2325, 1825, 2585, 3498, 1548,
	2025, 3031, 1794, 2669, 1568, 2251, 2029, 2105, 2534, 2250,
	1814, 1193, 2690, 2134, 3438, 2478, 2358, 2253, 2384, 2409,
	1821, 903, 1070, 1864, 1772, 1770, 86, 1607, 2125, 1442,
	2232, 1996, 2089, 2211, 2013, 1893, 1760, 1349, 1994, 1334,
	2833, 1183, 2430, 1855, 1256, 836, 142, 1308, 4, 1318,
	1666, 2315, 2128, 828, 596, 1915, 597, 2472, 527, 1013,
	541, 1626, 549, 929, 1059, 2733, 2222, 214, 214, 1616,
	208, 2106, 992, 2240, 863, 1010, 1531, 207, 1457, 557,
	1456, 2178, 1995, 1997, 591, 1854, 1332, 1348, 1623, 567,
	1879, 206, 1282, 668, 1784, 639, 2018, 2359, 2136, 864,
	1009, 1206, 149, 37, 150, 36, 552, 544, 990, 1563,
	34, 1015, 25, 23, 21, 1441, 758, 1264, 741, 2581,
	3045, 142, 3046, 1462, 687, 1895, 3760, 3750, 1895, 600,
	2231, 2231, 2686, 2874, 3749, 3724, 603, 1895, 2231, 1831,
	3704, 3702, 3658, 2751, 3275, 3275, 3659, 1190, 827, 3656,
	3654, 600, 3651, 2231, 2231, 3648, 3652, 3643, 603, 3649,
	3618, 1831, 1470, 1471, 1831, 704, 3617, 3616, 2873, 3613,
	1831, 1907, 3612, 1907, 1067, 3585, 1907, 3566, 833, 3275,
	3560, 2286, 1501, 3559, 2231, 832, 1328, 2231, 3554, 1473,
	832, 2282, 3275, 2231, 993, 993, 3553, 1007, 1067, 3035,
	3275, 3547, 1470, 1471, 3541, 1831, 3539, 3495, 3275, 3476,
	3275, 2286, 3473, 1831, 2224, 3446, 3275, 3427, 1472, 3447,
	3426, 1831, 1501, 1923, 1831, 1831, 3418, 1492, 3417, 1473,
	1831, 3389, 3275, 3370, 1489, 1831, 3355, 2286, 3346, 3302,
	1907, 3567, 2887, 2231, 3293, 815, 3274, 814, 2231, 3202,
	3275, 1400, 3158, 2286, 1044, 3152, 2903, 3120, 1472, 2903,
	3055, 3121, 3053, 1039, 3056, 3038, 3054, 822, 2960, 2231,
	2957, 3479, 1831, 3196, 2231, 1470, 1471, 2902, 2894, 2683,
	2681, 2903, 2895, 2231, 2231, 2680, 994, 3035, 996, 2231,
	997, 1495, 1496, 1497, 1498, 1501, 2634, 2223, 2642, 2643,
	2231, 1478, 1473, 2613, 2596, 2594, 2458, 2614, 2231, 2457,
	1911, 2595, 2386, 1911, 2299, 2285, 1907, 1907, 2231, 2286,
	2642, 2643, 2280, 2660, 2661, 2662, 2231, 3294, 1831, 2895,
	2273, 1472, 1500, 1502, 1831, 2374, 1789, 1040, 2314, 3198,
	1492, 1478, 2433, 1740, 2230, 1910, 1894, 1227, 2231, 1911,
	2887, 2406, 1470, 1471, 2549, 1830, 2312, 1602, 1205, 3108,
	182, 1487, 1488, 2933, 2911, 1624, 1824, 1383, 2875, 1470,
	1471, 2267, 1500, 1502, 2266, 2265, 2264, 2263, 998, 1473,
	182, 3639, 995, 2231, 821, 2657, 1493, 2876, 2584, 1501,
	1896, 1470, 1471, 1896, 820, 819, 1473, 818, 2514, 3250,
	184, 817, 1896, 813, 1495, 1496, 1497, 1498, 1472, 812,
	811, 1501, 810, 809, 1478, 808, 2131, 807, 1473, 806,
	184, 805, 214, 804, 803, 1472, 1493, 802, 801, 739,
	738, 737, 736, 735, 734, 733, 732, 2648, 2642, 2643,
	731, 730, 729, 728, 183, 1500, 1502, 1472, 2873, 727,
	214, 726, 725, 724, 176, 723, 3213, 214, 1040, 2648,
	722, 721, 177, 720, 183, 719, 1499, 718, 717, 2197,
	716, 715, 714, 214, 1085, 214, 214, 1186, 214, 1085,
	214, 1186, 2132, 151, 1494, 713, 1539, 702, 701, 214,
	214, 1478, 1069, 659, 658, 616, 1074, 615, 614, 1493,
	606, 605, 604, 151, 580, 579, 3619, 578, 1478, 577,
	2663, 561, 204, 203, 214, 1226, 202, 201, 200, 199,
	198, 197, 2658, 196, 1494, 195, 1470, 1471, 214, 2223,
	1478, 1186, 1186, 214, 214, 1221, 214, 194, 1903, 1500,
	1502, 1894, 1539, 1214, 2658, 1219, 1501, 1225, 214, 193,
	1989, 192, 191, 1473, 2133, 2130, 214, 190, 189, 1063,
	188, 1500, 1502, 187, 186, 2248, 185, 3049, 2904, 1040,
	214, 214, 214, 214, 214, 1186, 1186, 2648, 182, 1499,
	1186, 1196, 1472, 214, 1186, 214, 214, 2730, 2607, 2590,
	2390, 182, 2274, 1493, 1186, 2257, 2169, 1494, 1057, 1768,
	214, 1490, 1486, 2418, 1483, 1481, 1482, 1474, 1475, 1476,
	1477, 1479, 1480, 1627, 2155, 1493, 2153, 1650, 184, 1557,
	2659, 2642, 2643, 1211, 2660, 2661, 2662, 1076, 1201, 1029,
	1918, 184, 3534, 1347, 3488, 1469, 1186, 3482, 3407, 3347,
	3197, 1352, 2659, 1329, 1483, 1481, 1482, 1474, 1475, 1476,
	1477, 1479, 1480, 1208, 2135, 1207, 1052, 1571, 1078, 214,
	1171, 1176, 183, 1570, 3480, 1478, 75, 3342, 1571, 600,
	3254, 3233, 176, 214, 1570, 183, 603, 1177, 3232, 3220,
	177, 1200, 1402, 3219, 1574, 176, 2657, 182, 214, 3218,
	1353, 1494, 1550, 177, 1401, 1569, 1500, 1502, 1917, 3217,
	3212, 2432, 3126, 1220, 3210, 3209, 3119, 3069, 3068, 3067,
	3059, 3028, 3027, 1494, 151, 2898, 833, 1483, 1481, 1482,
	1474, 1475, 1476, 1477, 1479, 1480, 3106, 184, 1312, 1315,
	1006, 1335, 1470, 1471, 1265, 1265, 142, 142, 3026, 1337,
	1339, 2651, 2652, 2644, 2645, 2646, 2647, 2649, 2650, 1410,
	1493, 2953, 2949, 1555, 2129, 2654, 2655, 2656, 1285, 1473,
	2648, 1266, 2653, 2651, 2652, 2644, 2645, 2646, 2647, 2649,
	2650, 183, 2725, 1179, 1200, 1215, 1063, 1202, 2295, 1063,
	2677, 176, 2668, 2641, 2638, 2419, 2637, 2635, 1472, 177,
	2620, 2619, 2618, 1269, 2615, 2612, 2379, 1474, 1475, 1476,
	1477, 1479, 1480, 2606, 2589, 2345, 2582, 3392, 2459, 2258,
	151, 2663, 1446, 1482, 1474, 1475, 1476, 1477, 1479, 1480,
	2118, 879, 835, 1469, 1551, 1468, 1549, 1258, 1261, 1550,
	1836, 1322, 1834, 3757, 1481, 1482, 1474, 1475, 1476, 1477,
	1479, 1480, 3723, 1867, 3722, 2658, 2642, 2643, 1494, 3657,
	1028, 2978, 3608, 3606, 1538, 3528, 3525, 3522, 1440, 3521,
	3520, 1358, 3513, 3507, 1374, 3477, 3341, 3472, 1447, 3471,
	2095, 1478, 3423, 2642, 2643, 182, 182, 1445, 3403, 3381,
	1343, 3365, 214, 2644, 2645, 2646, 2647, 2649, 2650, 3364,
	1202, 3352, 118, 3351, 3331, 3328, 3321, 3249, 833, 3231,
	3172, 3169, 3097, 3125, 1443, 3096, 1613, 3084, 1604, 214,
	3083, 1452, 1451, 3041, 2944, 184, 184, 182, 1535, 214,
	1085, 214, 214, 214, 214, 2905, 182, 2888, 2851, 595,
	214, 214, 1365, 2820, 595, 214, 1660, 1652, 1573, 815,
	214, 814, 1448, 2659, 2722, 2796, 1186, 2417, 1662, 2773,
	1641, 2772, 1732, 1729, 1465, 1466, 2746, 184, 2682, 183,
	183, 2745, 2611, 2101, 2610, 2605, 184, 1085, 2573, 176,
	176, 1474, 1475, 1476, 1477, 1479, 1480, 177, 177, 2399,
	1470, 1471, 1575, 1737, 1572, 2648, 1564, 1561, 2293, 2292,
	2269, 1766, 2262, 1610, 1611, 2229, 2151, 2773, 151, 151,
	1649, 183, 1605, 1601, 1731, 1600, 1025, 1473, 1919, 993,
	183, 176, 2648, 1599, 1598, 1597, 906, 1596, 1595, 177,
	176, 1594, 1593, 1591, 1590, 1658, 1589, 1634, 177, 1588,
	1587, 1586, 1585, 1565, 1566, 1584, 1472, 1583, 1582, 1581,
	151, 833, 1580, 1579, 1578, 1063, 1577, 1552, 1536, 151,
	1534, 1529, 1051, 1042, 1656, 1035, 2654, 2655, 2656, 3499,
	2168, 3324, 142, 2653, 2651, 2652, 2644, 2645, 2646, 2647,
	2649, 2650, 3251, 3206, 1632, 1789, 3483, 1635, 2154, 3065,
	2152, 3052, 3044, 2593, 1734, 2288, 2260, 3253, 3064, 2642,
	2643, 1551, 2743, 1778, 1186, 1186, 214, 2658, 1532, 1625,
	1603, 3406, 1085, 3481, 3296, 1645, 1692, 1073, 1759, 600,
	2799, 3720, 1071, 3713, 600, 182, 603, 1668, 3523, 2860,
	1644, 603, 1643, 1661, 1629, 1200, 3449, 1642, 1728, 1640,
	1639, 1638, 3448, 2642, 2643, 3345, 3295, 3047, 1759, 2890,
	2889, 214, 1067, 1627, 1811, 214, 214, 1813, 1663, 1083,
	1818, 1759, 2363, 1438, 1194, 184, 3454, 1571, 214, 1072,
	2617, 1827, 182, 1570, 2616, 1762, 1757, 214, 1752, 214,
	1586, 214, 1586, 2555, 1735, 214, 2347, 3129, 1654, 1476,
	1477, 1479, 1480, 1746, 1068, 1058, 1067, 3095, 799, 214,
	2642, 2643, 1559, 1005, 1793, 2659, 2837, 1411, 2836, 183,
	1916, 1022, 184, 1807, 1067, 2642, 2643, 1382, 1064, 176,
	3445, 1822, 3644, 1556, 3631, 1383, 1809, 177, 3111, 3099,
	2909, 2131, 3384, 3728, 1373, 2686, 2980, 800, 2599, 1186,
	2126, 1186, 214, 1186, 2291, 3640, 214, 1858, 151, 3653,
	1592, 1186, 1828, 1567, 1186, 214, 183, 214, 214, 2829,
	3650, 1862, 1242, 2869, 3076, 2657, 176, 1186, 1186, 1186,
	1208, 214, 1207, 1876, 177, 1362, 3515, 3583, 214, 3138,
	3504, 3090, 2648, 1868, 2466, 2429, 600, 595, 214, 3546,
	214, 3688, 214, 603, 214, 151, 214, 2132, 3689, 2925,
	3285, 1817, 3641, 2646, 2647, 2649, 2650, 1230, 1240, 793,
	214, 1065, 1884, 214, 795, 214, 2004, 1829, 791, 1066,
	2327, 2755, 2300, 3754, 214, 2653, 2651, 2652, 2644, 2645,
	2646, 2647, 2649, 2650, 581, 1937, 1921, 831, 1408, 2648,
	789, 786, 1786, 1846, 1845, 214, 1975, 654, 1973, 3436,
	214, 3429, 2002, 2318, 2648, 1922, 3113, 1861, 1898, 3363,
	1409, 1900, 2318, 1073, 1902, 2316, 1747, 2658, 1905, 2133,
	2130, 3110, 1782, 1085, 2316, 833, 3109, 833, 3073, 1878,
	1241, 1882, 3072, 841, 1886, 1887, 1064, 1285, 2604, 1881,
	1335, 1881, 1335, 1787, 1788, 2603, 2602, 1064, 780, 905,
	2601, 1202, 783, 2559, 1073, 2381, 2373, 2370, 2350, 2006,
	2330, 830, 2281, 2076, 1993, 1072, 1444, 1204, 2757, 2147,
	2146, 1783, 2034, 1407, 2658, 1360, 655, 2744, 1275, 2798,
	1274, 1933, 587, 2426, 1273, 1912, 1272, 1913, 2910, 2658,
	1480, 1052, 1987, 3413, 1296, 1931, 2107, 2108, 1924, 3708,
	1926, 1250, 3545, 1236, 2307, 1986, 1072, 2272, 1085, 1067,
	1032, 2003, 2107, 2123, 1645, 2659, 2338, 600, 2349, 2135,
	2091, 1948, 1983, 3281, 603, 2091, 2532, 2547, 1450, 1065,
	3610, 1955, 3086, 2337, 1945, 1988, 832, 1066, 1844, 1050,
	1065, 1030, 2004, 1940, 2916, 1883, 1751, 1750, 1066, 2915,
	1759, 1761, 2177, 214, 2181, 2181, 2195, 2017, 2107, 2511,
	2279, 2215, 2217, 2969, 1927, 589, 2221, 711, 2135, 1238,
	2001, 3709, 2659, 1355, 2289, 1085, 3731, 214, 2002, 1773,
	2966, 2030, 2031, 1774, 1990, 2866, 214, 2659, 1985, 1914,
	1992, 1991, 1998, 1941, 1692, 1692, 2005, 1202, 214, 2650,
	1925, 1085, 2329, 2126, 1949, 1668, 1668, 3677, 3362, 3188,
	2270, 2122, 2099, 1934, 1935, 1936, 2360, 2361, 2097, 2129,
	3297, 833, 3187, 862, 1033, 815, 2367, 2021, 815, 815,
	2022, 2023, 833, 2546, 1021, 2000, 833, 2652, 2644, 2645,
	2646, 2647, 2649, 2650, 1942, 212, 2360, 2361, 1754, 3637,
	3516, 2245, 2967, 1437, 3688, 1653, 2810, 3711, 1406, 2360,
	2361, 1375, 2804, 2135, 1371, 1397, 583, 2103, 1806, 3279,
	1789, 1356, 1791, 1775, 1257, 829, 2756, 1067, 2539, 2540,
	993, 214, 686, 2120, 2867, 588, 1777, 2003, 1067, 1186,
	2237, 1383, 2653, 2651, 2652, 2644, 2645, 2646, 2647, 2649,
	2650, 1383, 1769, 657, 656, 2259, 1634, 2236, 2754, 3743,
	2644, 2645, 2646, 2647, 2649, 2650, 1398, 2348, 2328, 1085,
	833, 1982, 1895, 2144, 214, 585, 1737, 3676, 2145, 2206,
	3098, 2148, 214, 2149, 2150, 2219, 2190, 2227, 2228, 2317,
	1756, 1779, 2866, 214, 1361, 2244, 2001, 2249, 2238, 1562,
	2255, 2256, 2135, 1632, 2242, 2243, 214, 787, 797, 2073,
	539, 1186, 796, 1421, 582, 650, 787, 649, 3717, 3087,
	142, 1755, 2786, 2283, 214, 1085, 3638, 1295, 2344, 2741,
	2517, 214, 214, 3414, 534, 1573, 1235, 1984, 788, 787,
	1063, 1257, 3280, 1974, 2371, 1972, 1780, 2319, 851, 1780,
	3710, 586, 3184, 1947, 214, 3564, 2294, 214, 1023, 2087,
	1789, 2378, 584, 214, 2298, 1773, 2785, 3375, 2318, 1774,
	3697, 3595, 2403, 1031, 3313, 3527, 214, 1255, 2823, 2392,
	2332, 2394, 784, 2085, 214, 1528, 214, 1832, 2117, 214,
	1780, 3359, 2609, 2241, 3732, 214, 712, 2368, 214, 832,
	214, 2297, 214, 3636, 214, 214, 2352, 214, 1186, 1186,
	1186, 2561, 1186, 2520, 2301, 2440, 2090, 214, 214, 3675,
	214, 214, 2792, 2431, 1186, 2382, 2431, 2362, 2364, 2365,
	2366, 1449, 214, 1565, 1566, 2387, 2331, 2334, 1944, 2254,
	2071, 2322, 1049, 2074, 1025, 3323, 1025, 1939, 214, 214,
	214, 3178, 2480, 214, 3061, 214, 2353, 1812, 214, 1775,
	214, 1045, 214, 3189, 1657, 2423, 1773, 2340, 2927, 1692,
	1774, 2501, 1777, 2502, 2530, 1385, 2453, 2454, 2351, 3635,
	1668, 3124, 775, 214, 214, 214, 214, 214, 214, 2081,
	214, 2369, 2070, 3358, 3562, 1208, 607, 2388, 2082, 937,
	2397, 2098, 2083, 1357, 826, 2449, 2088, 1177, 2465, 3715,
	2407, 600, 2509, 2442, 2519, 1418, 3687, 3685, 603, 3460,
	3330, 214, 2855, 3563, 3744, 1200, 2421, 1779, 2788, 214,
	1776, 2484, 3314, 2516, 2487, 2435, 2488, 1896, 210, 1853,
	529, 530, 2496, 545, 529, 545, 555, 560, 1763, 1764,
	576, 2499, 2503, 2790, 2505, 2446, 2507, 2447, 210, 2448,
	1775, 2456, 1612, 1335, 2450, 1780, 142, 1370, 1372, 2455,
	2467, 2483, 2515, 1777, 1459, 1043, 697, 3185, 776, 1038,
	210, 526, 3017, 3716, 1460, 2522, 2020, 2524, 2482, 3229,
	1790, 2485, 2486, 1748, 1795, 2333, 2931, 1820, 3360, 535,
	2491, 2492, 2493, 2789, 2734, 1200, 1200, 2372, 1419, 2010,
	3737, 3420, 2518, 3419, 1799, 3718, 3401, 1819, 214, 3503,
	3075, 2570, 2587, 2588, 1459, 2072, 1780, 2591, 1779, 2856,
	1615, 1528, 2538, 2562, 2529, 2847, 2592, 1454, 1745, 1022,
	2528, 1022, 2768, 2764, 2422, 2568, 2410, 1815, 2033, 2303,
	2084, 1200, 536, 3284, 2533, 2401, 2017, 1796, 2760, 2086,
	3283, 2305, 1458, 1877, 2451, 1866, 1865, 1840, 1787, 1788,
	3529, 2965, 2354, 3573, 2928, 2527, 529, 529, 2548, 1979,
	1741, 1420, 1459, 3143, 210, 1200, 1615, 1200, 3334, 2398,
	1298, 3190, 537, 2306, 538, 3443, 1816, 1460, 1619, 608,
	609, 3441, 2233, 3402, 2452, 1743, 2498, 2778, 2304, 2775,
	2011, 2774, 1458, 2553, 2531, 2504, 2560, 2506, 1932, 2508,
	1202, 3018, 1744, 777, 2679, 3043, 1085, 1780, 2698, 3019,
	1622, 2697, 833, 2138, 1399, 2278, 3230, 1800, 2277, 1386,
	2695, 2276, 2693, 2694, 2525, 214, 830, 1460, 2275, 1617,
	214, 2565, 708, 214, 1619, 2405, 214, 214, 1085, 1771,
	3736, 3191, 214, 2598, 2566, 1620, 1776, 851, 2571, 2235,
	1458, 851, 2583, 1267, 2234, 1085, 3509, 3305, 2715, 1169,
	1281, 3409, 214, 700, 1169, 1359, 1622, 775, 1618, 2899,
	1268, 1279, 1875, 2385, 3694, 611, 610, 214, 1801, 1802,
	2739, 3439, 3580, 710, 3570, 1617, 3282, 1797, 2701, 826,
	824, 3235, 775, 2355, 2356, 2750, 214, 214, 214, 3530,
	3032, 1620, 214, 2142, 3696, 214, 2271, 3399, 1435, 2752,
	1433, 778, 214, 214, 826, 214, 214, 214, 3576, 1798,
	1415, 2705, 1413, 2758, 1618, 612, 613, 2761, 2762, 214,
	214, 214, 2674, 2675, 2676, 2735, 2728, 2724, 214, 3400,
	3410, 2687, 2703, 2776, 2704, 3655, 2780, 1776, 1621, 2713,
	779, 214, 1186, 825, 214, 2716, 2717, 2721, 1619, 2702,
	2714, 1396, 1085, 776, 3510, 2793, 2794, 1394, 1392, 2795,
	2777, 1085, 1390, 2782, 2783, 2765, 214, 3524, 3380, 214,
	214, 1063, 1388, 214, 3577, 2672, 1186, 214, 776, 3228,
	1622, 2671, 2567, 2943, 2907, 1380, 1186, 1186, 1378, 2817,
	2818, 2569, 214, 2819, 1621, 2803, 1277, 1803, 214, 2239,
	2719, 2834, 2720, 214, 2729, 214, 2846, 2825, 2731, 1778,
	2753, 2636, 214, 2862, 2313, 1620, 2572, 2742, 2402, 2759,
	3511, 2801, 2736, 2737, 2738, 706, 707, 2380, 2821, 2346,
	1692, 2296, 2811, 2700, 2480, 1778, 1186, 1186, 1651, 1648,
	1436, 1668, 1350, 2480, 214, 214, 2791, 1280, 214, 1971,
	2797, 1434, 2924, 1432, 2769, 2871, 698, 699, 1278, 2806,
	2807, 1804, 2141, 1414, 2808, 1412, 2923, 1692, 2809, 1822,
	709, 2747, 2748, 2822, 2749, 2816, 2814, 1822, 1668, 1454,
	2513, 2709, 1021, 2512, 1021, 214, 2826, 1085, 214, 214,
	1085, 214, 2352, 2863, 2490, 1999, 1981, 1952, 777, 1730,
	1576, 1036, 1354, 1254, 1395, 3630, 3301, 3292, 1659, 3569,
	1393, 1391, 3258, 3141, 3134, 1389, 3093, 3091, 1621, 1025,
	2824, 1200, 3074, 777, 214, 1387, 2854, 2845, 2868, 1046,
	2838, 2427, 2870, 2416, 2897, 1025, 576, 2877, 1379, 833,
	2842, 1377, 1861, 2415, 2901, 2395, 1909, 1908, 1906, 1276,
	1904, 1901, 210, 1899, 210, 210, 2710, 1191, 1897, 210,
	1888, 1085, 2879, 2880, 2881, 2921, 2882, 2883, 210, 1210,
	2912, 3272, 2913, 1837, 2914, 1835, 1823, 1810, 1085, 1805,
	214, 1792, 1781, 142, 142, 3673, 2884, 2885, 785, 2962,
	2858, 3465, 2922, 1234, 1463, 2886, 2551, 2946, 2708, 1970,
	3269, 2815, 3689, 3262, 1002, 3601, 778, 1253, 2918, 3354,
	3349, 3348, 210, 210, 2481, 1191, 1767, 3260, 2712, 1232,
	2906, 2318, 2926, 3264, 2318, 3467, 2336, 210, 1003, 823,
	2929, 778, 1789, 2316, 3151, 1294, 2335, 1943, 2812, 2574,
	2575, 1950, 3270, 1430, 1431, 779, 1969, 1968, 3286, 210,
	210, 210, 210, 1191, 3518, 2861, 1023, 1376, 1023, 3029,
	1470, 1471, 576, 3490, 210, 210, 3236, 2357, 2339, 2951,
	779, 2552, 2843, 1467, 3263, 2961, 3272, 3690, 3683, 697,
	540, 1464, 2848, 2849, 1738, 1470, 1471, 1473, 2977, 2981,
	214, 214, 1200, 2375, 2711, 1169, 2968, 2970, 2971, 2341,
	2983, 1085, 3568, 3538, 2984, 3269, 2377, 2343, 3535, 3048,
	3133, 790, 792, 2986, 1022, 1004, 1472, 1692, 2376, 2342,
	2955, 2956, 214, 2994, 3123, 3058, 551, 3021, 1668, 2996,
	1022, 2434, 2892, 2893, 2220, 1733, 851, 1664, 210, 3712,
	3070, 1472, 1169, 2740, 3735, 2919, 3537, 3270, 1539, 2665,
	2666, 2667, 210, 2137, 3022, 2642, 2643, 2030, 2987, 1470,
	1471, 2310, 2311, 2308, 2309, 3034, 1364, 560, 3063, 214,
	1692, 1692, 1363, 2030, 2997, 3036, 3037, 3100, 2310, 2308,
	2143, 1668, 1668, 3207, 2972, 3062, 1692, 1692, 3265, 2973,
	3039, 3040, 3266, 2982, 1537, 3747, 1186, 1668, 1668, 1417,
	3500, 3112, 1416, 3433, 3025, 3050, 3393, 3391, 142, 214,
	3051, 3030, 3320, 3252, 3175, 3168, 214, 1692, 3157, 3136,
	3118, 3117, 3116, 3089, 2878, 1085, 214, 2852, 1668, 2850,
	1186, 2495, 3268, 3104, 3105, 3107, 2494, 2444, 2420, 2396,
	2102, 1967, 1966, 1965, 214, 3271, 3078, 1964, 1891, 1890,
	1889, 1869, 1848, 1847, 1843, 1842, 1841, 3153, 214, 214,
	1186, 1186, 1186, 3114, 214, 214, 214, 3145, 1839, 214,
	214, 2692, 1838, 214, 214, 2440, 1186, 1169, 1429, 1428,
	1307, 214, 1085, 1306, 1305, 3148, 1304, 1303, 1302, 1301,
	1300, 1299, 2352, 3265, 1297, 3144, 3092, 3266, 3094, 1292,
	1291, 3139, 1290, 2718, 1085, 2480, 3131, 3132, 1289, 1288,
	3130, 1249, 1248, 1247, 2014, 1246, 1245, 1244, 1243, 1237,
	2732, 3177, 1231, 3135, 1229, 3066, 1228, 1048, 1047, 977,
	884, 3205, 1739, 798, 641, 3146, 782, 3268, 3155, 3149,
	3412, 3154, 1423, 3176, 73, 1239, 627, 67, 3267, 214,
	3271, 3160, 3088, 636, 3165, 3166, 3582, 3159, 3170, 3174,
	2784, 529, 3115, 3173, 3167, 2769, 3171, 1951, 3201, 1384,
	1953, 2723, 2261, 3561, 3192, 3214, 2608, 3496, 1692, 3374,
	3193, 3186, 210, 3181, 210, 2140, 1558, 69, 210, 1668,
	872, 959, 3312, 3311, 3259, 3077, 3147, 2470, 1210, 3309,
	1191, 210, 3308, 210, 840, 1088, 1749, 878, 210, 1210,
	545, 1765, 214, 210, 1210, 1758, 2290, 1861, 1085, 576,
	1085, 2180, 1672, 881, 1669, 1671, 883, 882, 3164, 1670,
	3241, 1560, 880, 1667, 2404, 2438, 2732, 1284, 762, 1753,
	2096, 2124, 2597, 214, 214, 214, 1553, 853, 874, 2121,
	2198, 1041, 3227, 3267, 2706, 214, 2865, 3057, 3340, 2009,
	1614, 644, 214, 2639, 214, 2127, 1034, 214, 214, 214,
	2203, 2196, 2192, 3278, 3255, 3256, 2428, 1439, 1530, 1085,
	214, 214, 2439, 1075, 1085, 3289, 3290, 1021, 1692, 856,
	3238, 3239, 214, 3287, 3244, 3240, 214, 2094, 3243, 1668,
	1544, 2577, 2019, 1021, 3277, 214, 2872, 3248, 2726, 214,
	2939, 2940, 1085, 2728, 2287, 1186, 3598, 2024, 3257, 3247,
	1852, 3288, 1001, 3306, 3276, 847, 1025, 1000, 3237, 999,
	3589, 3586, 2832, 1742, 2302, 1522, 3242, 3315, 1169, 2839,
	868, 1025, 1199, 214, 2691, 2900, 1251, 3326, 3517, 1521,
	794, 3506, 3336, 1062, 3299, 1085, 3161, 3162, 3163, 1061,
	3303, 3353, 1194, 1060, 3307, 1083, 3343, 2767, 3742, 3085,
	3339, 1025, 3300, 181, 2545, 210, 1461, 3322, 1453, 3327,
	3335, 3325, 178, 180, 1085, 179, 3337, 3316, 3332, 3102,
	3350, 90, 35, 16, 2998, 2999, 3000, 3001, 3002, 3003,
	3004, 3005, 3006, 3007, 3008, 3009, 3010, 3011, 3012, 3013,
	3014, 3015, 3016, 839, 3020, 117, 116, 3386, 115, 114,
	210, 1085, 113, 1169, 210, 210, 112, 111, 110, 214,
	3361, 214, 109, 1085, 214, 3366, 2959, 1874, 108, 107,
	106, 105, 214, 104, 103, 102, 210, 101, 210, 100,
	210, 99, 98, 2974, 529, 3382, 97, 96, 95, 1657,
	94, 1023, 93, 92, 91, 214, 3396, 572, 1892, 569,
	49, 48, 89, 88, 3387, 3388, 15, 1023, 33, 13,
	53, 54, 1861, 12, 214, 28, 29, 3344, 3395, 79,
	1169, 78, 214, 27, 14, 26, 3432, 24, 10, 8,
	7, 214, 3394, 30, 1636, 3451, 1186, 11, 147, 3442,
	3390, 576, 214, 146, 3415, 697, 1169, 3416, 72, 145,
	71, 1022, 3456, 2834, 210, 144, 1191, 210, 143, 3430,
	3466, 1025, 3434, 214, 214, 70, 1022, 22, 9, 3440,
	576, 139, 3371, 3462, 3452, 3486, 3487, 210, 3128, 3457,
	66, 141, 3459, 3450, 140, 214, 210, 210, 3464, 210,
	63, 210, 138, 210, 137, 210, 1022, 3339, 3463, 3468,
	214, 3461, 3474, 3475, 3469, 1692, 3060, 64, 136, 1976,
	135, 65, 1977, 134, 1978, 20, 1668, 5, 3512, 52,
	6, 3356, 2908, 210, 3455, 3502, 83, 84, 31, 61,
	60, 59, 19, 3424, 3425, 3494, 51, 18, 171, 170,
	169, 168, 163, 162, 560, 167, 3422, 165, 214, 576,
	3526, 164, 3501, 166, 161, 133, 173, 172, 175, 1692,
	159, 214, 1186, 155, 1169, 3485, 154, 158, 214, 160,
	1668, 157, 1186, 1186, 3519, 156, 153, 174, 1186, 132,
	131, 56, 214, 3552, 214, 130, 129, 128, 127, 3532,
	3533, 3536, 126, 2535, 3540, 55, 17, 2, 3544, 3543,
	3557, 3565, 3558, 3531, 1, 0, 0, 0, 214, 0,
	0, 0, 0, 3470, 214, 3578, 3556, 214, 3549, 1085,
	1169, 3478, 0, 0, 0, 3548, 0, 0, 214, 214,
	0, 0, 3579, 3592, 0, 0, 3596, 0, 3489, 3550,
	3551, 3602, 0, 0, 0, 3555, 3607, 0, 0, 3605,
	3588, 3591, 3584, 3455, 3593, 1692, 1022, 3614, 0, 0,
	3600, 0, 0, 3615, 0, 1200, 1668, 0, 214, 0,
	0, 0, 0, 2198, 2198, 3611, 0, 3609, 0, 3603,
	3642, 0, 3604, 0, 0, 0, 0, 0, 0, 0,
	0, 3629, 3626, 3627, 3628, 3647, 0, 0, 0, 0,
	0, 0, 529, 0, 0, 3660, 3645, 0, 0, 0,
	3662, 214, 0, 0, 3664, 0, 0, 210, 0, 0,
	3670, 3669, 0, 0, 3661, 0, 529, 0, 3674, 1025,
	1025, 214, 0, 210, 3666, 529, 0, 0, 0, 0,
	0, 0, 2440, 0, 3680, 3681, 0, 210, 0, 0,
	0, 3686, 0, 0, 3692, 3684, 3682, 3663, 214, 3665,
	214, 0, 839, 3693, 0, 3691, 839, 3703, 3695, 3701,
	0, 3699, 3706, 3700, 0, 0, 3698, 3707, 0, 3588,
	0, 3705, 3591, 2198, 2198, 2198, 0, 0, 0, 0,
	0, 3600, 0, 0, 0, 0, 0, 3719, 0, 1212,
	3721, 1216, 0, 1222, 3725, 0, 0, 0, 0, 3729,
	3730, 0, 3726, 0, 0, 0, 0, 0, 3733, 0,
	0, 0, 0, 3739, 1021, 3246, 0, 0, 0, 3745,
	545, 3746, 0, 3740, 3741, 0, 3748, 0, 0, 1021,
	0, 0, 2642, 2643, 0, 2660, 2661, 2662, 0, 0,
	0, 3752, 3753, 3751, 3755, 0, 3756, 0, 0, 3758,
	0, 2948, 0, 3761, 0, 0, 0, 0, 3759, 1021,
	0, 0, 0, 2326, 0, 0, 0, 0, 3667, 3668,
	0, 210, 3671, 2642, 2643, 0, 2660, 2661, 2662, 1346,
	0, 0, 210, 0, 0, 0, 0, 1351, 0, 0,
	0, 0, 2947, 0, 0, 210, 1025, 2657, 3379, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 210, 1022, 1022, 0, 0, 0, 0,
	210, 2389, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2657, 0,
	3404, 0, 1403, 1210, 0, 0, 210, 0, 0, 0,
	1083, 0, 210, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1874, 0, 0, 0, 0,
	0, 2648, 0, 2326, 0, 529, 0, 0, 2443, 3372,
	0, 0, 0, 0, 210, 0, 0, 210, 1023, 210,
	0, 210, 0, 210, 210, 0, 1191, 0, 0, 0,
	0, 0, 0, 1023, 0, 0, 2463, 697, 0, 2326,
	2326, 1169, 2648, 0, 0, 0, 3372, 0, 0, 1021,
	0, 210, 2663, 1523, 1524, 1525, 1526, 1527, 2033, 0,
	0, 0, 0, 1023, 0, 0, 0, 210, 1191, 210,
	0, 0, 1210, 1169, 1210, 0, 0, 1191, 0, 1191,
	3493, 1191, 1541, 0, 0, 0, 2658, 1025, 1554, 0,
	1169, 0, 0, 2663, 0, 1025, 0, 0, 0, 0,
	0, 0, 210, 210, 210, 210, 1191, 210, 1025, 210,
	0, 0, 0, 0, 851, 0, 0, 0, 0, 0,
	0, 1022, 0, 0, 0, 0, 0, 2658, 851, 0,
	0, 2642, 2643, 0, 2660, 2661, 2662, 0, 0, 0,
	210, 0, 0, 0, 0, 0, 0, 1542, 210, 0,
	0, 1547, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2198, 2198, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2642, 2643, 0, 2660,
	2661, 2662, 0, 0, 2659, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2657, 1169, 0, 0,
	0, 0, 0, 0, 0, 0, 1169, 0, 0, 0,
	1608, 1608, 1608, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1023, 0, 2659, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1210, 0, 0,
	0, 2657, 0, 0, 0, 0, 0, 0, 2198, 2198,
	2198, 2198, 2198, 2198, 2198, 2198, 2198, 2198, 2198, 2198,
	2198, 2198, 2198, 2198, 2198, 2198, 2198, 0, 2198, 0,
	2648, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 839, 1022, 0, 0, 0, 0, 0, 0, 0,
	1022, 0, 0, 0, 0, 0, 0, 2654, 2655, 2656,
	0, 0, 0, 1022, 2653, 2651, 2652, 2644, 2645, 2646,
	2647, 2649, 2650, 0, 2033, 2648, 0, 1021, 1021, 0,
	0, 2663, 0, 0, 0, 0, 2642, 2643, 0, 2660,
	2661, 2662, 1169, 0, 0, 1169, 0, 0, 2654, 2655,
	2656, 0, 2664, 0, 210, 2653, 2651, 2652, 2644, 2645,
	2646, 2647, 2649, 2650, 0, 2658, 0, 0, 0, 210,
	0, 0, 0, 0, 529, 0, 2663, 0, 0, 529,
	0, 0, 529, 0, 0, 529, 529, 0, 0, 0,
	0, 529, 0, 0, 0, 0, 0, 0, 0, 210,
	0, 2657, 0, 0, 0, 0, 0, 0, 0, 0,
	2658, 1210, 0, 0, 0, 0, 1169, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1210, 0, 0, 0,
	0, 0, 0, 1169, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2326, 2326, 210, 0, 0,
	0, 2326, 0, 0, 2771, 0, 0, 0, 0, 0,
	0, 2326, 2771, 2659, 2326, 2771, 2771, 0, 0, 0,
	1470, 1471, 0, 0, 0, 2648, 0, 0, 210, 210,
	210, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1501, 0, 0, 0, 0, 0, 0, 1473, 0, 0,
	210, 1023, 1023, 1191, 1021, 0, 0, 0, 2659, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2828, 1472, 0, 2830, 2326,
	0, 0, 210, 0, 0, 1492, 210, 0, 0, 0,
	0, 0, 1489, 0, 0, 0, 0, 0, 0, 0,
	0, 210, 0, 0, 0, 0, 1169, 1191, 0, 210,
	2658, 0, 2326, 0, 529, 0, 0, 0, 0, 0,
	0, 2326, 0, 0, 0, 0, 2654, 2655, 2656, 0,
	0, 2942, 0, 2653, 2651, 2652, 2644, 2645, 2646, 2647,
	2649, 2650, 0, 0, 0, 0, 0, 0, 0, 1495,
	1496, 1497, 1498, 210, 1874, 0, 0, 1874, 0, 1478,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2654, 2655, 2656, 0, 0, 0, 0, 2653, 2651,
	2652, 2644, 2645, 2646, 2647, 2649, 2650, 0, 0, 0,
	1500, 1502, 0, 0, 2917, 0, 0, 1191, 210, 0,
	210, 0, 0, 0, 0, 0, 0, 0, 2659, 0,
	0, 0, 0, 0, 0, 1021, 0, 0, 0, 1487,
	1488, 0, 0, 1021, 0, 0, 0, 0, 1023, 2008,
	1169, 2012, 0, 210, 0, 0, 1021, 0, 2026, 0,
	0, 0, 0, 0, 1493, 2035, 2036, 2037, 2038, 2039,
	2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049,
	2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059,
	2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069,
	0, 2075, 0, 2077, 2078, 2079, 2080, 1169, 0, 2979,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2104, 0, 0, 0, 0, 0, 1169,
	0, 0, 0, 0, 0, 0, 1541, 0, 0, 0,
	2119, 2654, 2655, 2656, 1499, 0, 0, 0, 2653, 2651,
	2652, 2644, 2645, 2646, 2647, 2649, 2650, 0, 0, 0,
	0, 0, 1494, 0, 0, 0, 0, 0, 0, 0,
	2157, 2160, 2163, 2166, 0, 2170, 2171, 2172, 2173, 2174,
	2175, 2176, 0, 0, 2100, 0, 2194, 0, 2205, 2207,
	2212, 0, 0, 0, 0, 0, 0, 210, 210, 0,
	0, 1542, 0, 0, 0, 0, 0, 0, 0, 1023,
	0, 0, 2198, 0, 0, 0, 0, 1023, 0, 529,
	529, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1023, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1169, 0, 1169, 0, 0, 0, 0,
	0, 1210, 2202, 0, 2198, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1490,
	1486, 0, 1483, 1481, 1482, 1474, 1475, 1476, 1477, 1479,
	1480, 0, 0, 0, 0, 0, 0, 0, 576, 0,
	0, 0, 0, 0, 1169, 0, 0, 0, 0, 1169,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1169, 210, 0,
	0, 0, 0, 0, 0, 210, 0, 0, 0, 0,
	0, 0, 938, 0, 0, 210, 0, 0, 0, 0,
	0, 0, 0, 0, 2198, 0, 0, 0, 0, 0,
	0, 0, 0, 2326, 210, 0, 0, 0, 0, 0,
	1169, 0, 0, 0, 0, 0, 0, 2463, 2463, 0,
	0, 211, 0, 697, 697, 2326, 0, 0, 1874, 1874,
	0, 0, 697, 2326, 0, 0, 0, 0, 0, 1169,
	210, 211, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2391, 0, 2393, 0, 0,
	0, 0, 0, 211, 57, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1169, 0, 58, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1169, 0,
	0, 0, 0, 62, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3215, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 851, 0, 0, 68, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 873, 87, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 74, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 85, 210, 0, 0, 0, 75,
	82, 1210, 0, 210, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 210, 0, 0, 0,
	2510, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2326, 2326, 2326, 0, 0, 0, 0, 0,
	0, 87, 0, 76, 1210, 0, 0, 0, 0, 0,
	0, 2326, 0, 2771, 0, 0, 1210, 1210, 210, 0,
	0, 0, 0, 0, 0, 0, 1523, 1524, 0, 210,
	210, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2326, 0, 0, 0, 3318, 0, 0, 0, 0,
	0, 0, 0, 0, 210, 0, 0, 0, 3329, 0,
	0, 0, 0, 0, 0, 0, 1470, 1471, 816, 0,
	0, 0, 0, 0, 0, 0, 0, 834, 0, 0,
	0, 2557, 2558, 0, 0, 2202, 1501, 2564, 0, 0,
	0, 0, 1210, 1473, 0, 2284, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2578, 2579, 0, 0,
	1011, 0, 2119, 0, 77, 0, 0, 0, 0, 0,
	0, 2586, 1472, 0, 0, 0, 0, 0, 0, 0,
	0, 1492, 0, 0, 1169, 0, 0, 2600, 1489, 851,
	0, 0, 0, 0, 0, 0, 0, 148, 80, 0,
	81, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2621, 0, 0, 2202, 2202, 0, 0, 182,
	0, 0, 0, 0, 0, 0, 0, 2937, 2326, 0,
	2771, 692, 0, 3398, 0, 118, 0, 0, 0, 0,
	0, 210, 0, 0, 0, 1495, 1496, 1497, 1498, 0,
	0, 0, 0, 0, 0, 1478, 0, 0, 0, 184,
	0, 0, 0, 0, 576, 0, 0, 0, 0, 2212,
	2212, 2212, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 119, 3398, 1608, 0, 1500, 1502, 0, 0,
	0, 2326, 2696, 0, 0, 152, 0, 0, 0, 0,
	210, 0, 0, 183, 0, 0, 0, 0, 0, 0,
	0, 1210, 0, 176, 0, 1487, 1488, 0, 0, 0,
	0, 177, 0, 0, 0, 2202, 2202, 2202, 0, 0,
	0, 0, 210, 210, 0, 0, 0, 0, 0, 0,
	1493, 0, 151, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2979, 0, 0, 0, 0, 839,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3398,
	0, 0, 0, 839, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2787,
	0, 0, 0, 0, 0, 211, 1090, 211, 211, 1090,
	0, 1090, 211, 1090, 0, 0, 0, 3318, 0, 0,
	1499, 211, 0, 0, 0, 0, 0, 0, 0, 0,
	210, 0, 0, 0, 0, 0, 0, 2771, 1494, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1210, 0, 1210, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1090, 1090, 211, 211, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3574, 0, 0,
	211, 0, 0, 1210, 688, 0, 210, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 210, 2326, 0,
	0, 0, 211, 211, 211, 211, 0, 1090, 1090, 57,
	691, 690, 1090, 0, 0, 0, 1090, 211, 211, 0,
	0, 0, 0, 58, 0, 0, 1090, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2979, 62, 0,
	0, 0, 0, 0, 904, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1490, 1486, 0, 1483, 1481,
	1482, 1474, 1475, 1476, 1477, 1479, 1480, 0, 1090, 68,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2326, 0, 0, 209, 0, 87, 0, 87, 0, 87,
	0, 211, 0, 0, 0, 0, 0, 0, 0, 74,
	3398, 0, 0, 601, 0, 211, 0, 0, 0, 85,
	2026, 0, 0, 0, 75, 82, 2934, 2935, 0, 0,
	2938, 0, 0, 0, 2941, 601, 0, 1210, 0, 2326,
	0, 0, 0, 2945, 0, 0, 0, 0, 0, 0,
	0, 0, 2952, 0, 0, 2696, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 57, 0, 0, 76, 0,
	2963, 0, 0, 0, 0, 834, 87, 87, 0, 58,
	0, 0, 0, 0, 0, 87, 0, 0, 0, 0,
	0, 0, 0, 87, 62, 0, 2202, 2202, 0, 2988,
	2989, 0, 2990, 2991, 2992, 0, 0, 2993, 0, 0,
	0, 2995, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 68, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1024,
	0, 0, 3023, 3024, 0, 0, 87, 0, 0, 0,
	0, 0, 0, 0, 0, 74, 0, 3033, 0, 0,
	0, 0, 0, 0, 0, 85, 0, 0, 0, 0,
	75, 82, 3042, 0, 0, 0, 0, 0, 0, 77,
	2202, 2202, 2202, 2202, 2202, 2202, 2202, 2202, 2202, 2202,
	2202, 2202, 2202, 2202, 2202, 2202, 2202, 2202, 2202, 0,
	2202, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 148, 80, 76, 81, 0, 0, 0, 0,
	0, 0, 816, 0, 0, 0, 0, 0, 3071, 0,
	0, 0, 0, 0, 182, 0, 0, 0, 0, 0,
	1533, 0, 0, 3079, 3082, 0, 692, 0, 0, 0,
	118, 211, 0, 0, 0, 0, 0, 1540, 0, 0,
	0, 1546, 1090, 0, 211, 211, 211, 0, 3101, 0,
	0, 211, 0, 0, 184, 0, 211, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1090, 0,
	0, 0, 0, 0, 0, 0, 0, 119, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1090,
	152, 0, 0, 0, 0, 0, 0, 0, 183, 0,
	0, 0, 0, 0, 0, 77, 0, 0, 176, 0,
	0, 0, 0, 0, 0, 0, 177, 1608, 0, 0,
	0, 0, 0, 0, 0, 0, 3156, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 689, 148, 80,
	0, 81, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	182, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 692, 0, 0, 0, 118, 0, 1628, 0,
	1631, 0, 87, 0, 0, 0, 0, 3194, 3195, 0,
	0, 0, 0, 3199, 3200, 0, 0, 0, 3203, 3204,
	184, 0, 0, 0, 0, 3208, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3211, 1090, 1090, 211, 0,
	0, 0, 0, 119, 1090, 0, 0, 0, 0, 0,
	0, 3216, 0, 0, 0, 0, 152, 0, 0, 0,
	0, 0, 0, 0, 183, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 176, 0, 0, 0, 0, 0,
	0, 0, 177, 211, 0, 0, 0, 211, 211, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 151, 0, 0, 0, 0, 0, 211,
	0, 211, 0, 211, 0, 0, 1470, 1471, 0, 1503,
	1504, 1505, 1513, 1514, 1515, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1501, 209, 0, 209,
	209, 0, 0, 1473, 209, 0, 0, 0, 1519, 0,
	0, 0, 0, 601, 3082, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1090, 1472, 1090, 0, 1090, 0, 0, 0, 0,
	0, 1492, 0, 1090, 0, 0, 1090, 211, 1489, 0,
	211, 0, 0, 0, 0, 0, 0, 209, 209, 1090,
	1090, 1090, 0, 0, 0, 0, 0, 0, 0, 0,
	211, 0, 209, 0, 0, 0, 0, 0, 0, 211,
	211, 0, 211, 0, 211, 0, 211, 0, 211, 0,
	0, 0, 0, 0, 209, 209, 209, 209, 0, 0,
	3082, 215, 0, 0, 0, 1495, 1496, 1497, 1498, 209,
	209, 0, 0, 0, 0, 1478, 211, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3367, 3368, 3369,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1510,
	0, 57, 1520, 0, 0, 0, 1500, 1502, 0, 0,
	0, 0, 3377, 3378, 0, 58, 0, 0, 0, 0,
	594, 0, 0, 0, 0, 1090, 3385, 0, 0, 0,
	62, 0, 0, 0, 0, 1487, 1488, 0, 0, 0,
	0, 0, 594, 209, 834, 0, 834, 0, 0, 0,
	0, 1508, 0, 0, 0, 0, 0, 209, 0, 0,
	1493, 68, 0, 0, 0, 0, 3082, 0, 0, 0,
	0, 0, 0, 0, 3421, 0, 0, 0, 0, 0,
	0, 0, 0, 3428, 2202, 0, 839, 0, 0, 0,
	0, 74, 3435, 0, 0, 0, 0, 0, 0, 0,
	0, 85, 0, 0, 0, 0, 75, 82, 0, 0,
	1090, 0, 0, 0, 0, 0, 0, 0, 0, 3082,
	0, 0, 3082, 0, 0, 0, 2202, 0, 908, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1499, 0, 3082, 3082, 0, 0, 0, 0, 0, 0,
	76, 0, 0, 0, 0, 0, 0, 0, 1494, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 816, 0,
	0, 816, 816, 0, 0, 0, 0, 1090, 0, 0,
	0, 0, 0, 0, 1511, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3505, 0, 0, 3508, 0, 0,
	211, 0, 0, 1090, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3082, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2093, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2202, 0, 0, 0,
	834, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1540, 0, 0, 0, 1540, 0, 0, 0, 0,
	0, 77, 0, 0, 0, 0, 0, 0, 1509, 0,
	0, 1484, 1485, 1491, 1512, 1490, 1486, 0, 1483, 1481,
	1482, 1474, 1475, 1476, 1477, 1479, 1480, 1630, 0, 1024,
	0, 1090, 0, 209, 148, 80, 0, 81, 0, 0,
	0, 0, 0, 0, 2202, 2202, 209, 1630, 209, 0,
	0, 0, 0, 601, 839, 0, 182, 0, 601, 0,
	0, 1090, 0, 1011, 0, 0, 0, 0, 692, 0,
	0, 0, 118, 0, 211, 0, 0, 0, 0, 1631,
	0, 0, 0, 0, 0, 211, 0, 0, 0, 0,
	0, 0, 0, 3625, 3625, 3625, 184, 0, 211, 0,
	0, 0, 0, 1090, 0, 0, 0, 0, 0, 0,
	87, 0, 0, 0, 3646, 0, 211, 1090, 0, 119,
	0, 0, 0, 211, 0, 0, 0, 0, 0, 0,
	0, 0, 152, 0, 0, 0, 0, 3082, 0, 3082,
	183, 0, 0, 0, 0, 0, 0, 0, 0, 211,
	176, 0, 0, 3625, 0, 211, 0, 0, 177, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1340,
	0, 0, 0, 0, 0, 0, 0, 211, 0, 0,
	211, 0, 211, 0, 211, 0, 211, 211, 0, 0,
	1090, 1090, 1090, 0, 1090, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1090, 0, 0, 0,
	601, 0, 0, 0, 211, 0, 0, 0, 0, 0,
	87, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	211, 0, 211, 3625, 3734, 0, 0, 0, 0, 0,
	0, 3738, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 87, 0, 209, 0, 0, 0, 209,
	209, 0, 0, 0, 0, 211, 211, 211, 211, 0,
	211, 87, 211, 87, 0, 1086, 0, 0, 1187, 0,
	1086, 209, 1187, 209, 0, 209, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1017, 211, 0, 0, 0, 0, 0, 0,
	0, 211, 0, 0, 0, 87, 0, 0, 87, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1187, 1187, 0, 0, 0, 0, 0, 0,
	0, 205, 0, 0, 0, 0, 87, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1187, 1187, 0, 0,
	0, 1187, 209, 0, 0, 1187, 0, 0, 0, 0,
	0, 601, 209, 0, 209, 1187, 209, 0, 209, 0,
	209, 0, 0, 0, 87, 0, 1470, 1471, 0, 1503,
	1504, 1505, 1513, 1514, 1515, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1506, 1501, 0, 209, 0,
	0, 0, 0, 1473, 0, 0, 0, 1187, 1519, 0,
	0, 0, 1087, 0, 0, 1188, 0, 1087, 0, 1188,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1472, 0, 0, 0, 0, 0, 0, 0,
	0, 1492, 0, 0, 0, 0, 0, 0, 1489, 0,
	0, 0, 0, 0, 678, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1188,
	1188, 0, 0, 0, 0, 0, 0, 660, 1090, 0,
	2093, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1540, 0, 0, 0, 1495, 1496, 1497, 1498, 0,
	1090, 661, 0, 1188, 1188, 1478, 0, 0, 1188, 0,
	662, 0, 1188, 0, 0, 0, 0, 1090, 0, 0,
	0, 0, 1188, 0, 0, 0, 663, 0, 0, 1510,
	0, 0, 1520, 0, 0, 0, 1500, 1502, 0, 0,
	0, 0, 683, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1516, 664, 1517, 0,
	211, 0, 0, 0, 1188, 1487, 1488, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 665, 0, 0, 0,
	0, 1508, 1024, 0, 0, 0, 0, 0, 0, 0,
	1493, 211, 211, 211, 0, 0, 666, 0, 1024, 667,
	211, 0, 0, 0, 0, 0, 0, 0, 0, 1518,
	0, 0, 209, 211, 1090, 0, 0, 0, 0, 0,
	1011, 0, 0, 0, 1090, 682, 1507, 0, 0, 0,
	0, 0, 0, 1090, 0, 1011, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 211, 0, 0, 1090, 211,
	0, 0, 0, 0, 0, 0, 0, 0, 1090, 1090,
	0, 0, 0, 0, 211, 0, 0, 0, 0, 0,
	1499, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1086, 0, 0, 0, 0, 0, 0, 1494, 0,
	594, 0, 0, 0, 0, 594, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1187, 1090, 1090,
	0, 0, 0, 0, 1511, 0, 211, 0, 0, 0,
	0, 0, 0, 669, 0, 0, 0, 0, 1086, 0,
	0, 0, 0, 0, 0, 0, 0, 87, 87, 0,
	686, 87, 670, 0, 0, 0, 209, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 209, 0, 1090,
	0, 211, 1090, 211, 0, 0, 0, 0, 0, 685,
	209, 87, 87, 0, 0, 87, 671, 0, 0, 672,
	0, 0, 0, 0, 0, 680, 0, 0, 209, 0,
	0, 0, 673, 0, 0, 601, 211, 0, 1509, 0,
	0, 1484, 1485, 1491, 1512, 1490, 1486, 0, 1483, 1481,
	1482, 1474, 1475, 1476, 1477, 1479, 1480, 0, 0, 2580,
	0, 209, 0, 674, 681, 1011, 0, 209, 834, 57,
	0, 675, 0, 1090, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 58, 677, 1080, 0, 0, 1087, 676,
	1090, 0, 1198, 87, 87, 1187, 1187, 0, 62, 209,
	0, 684, 209, 1086, 209, 0, 209, 0, 209, 209,
	0, 0, 679, 0, 1188, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 68,
	0, 0, 0, 0, 0, 1087, 209, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 209, 0, 209, 0, 0, 0, 0, 74,
	1286, 0, 0, 0, 0, 0, 0, 0, 0, 85,
	0, 0, 0, 0, 75, 82, 0, 0, 0, 0,
	0, 0, 1311, 1311, 1311, 1198, 0, 209, 209, 209,
	209, 0, 209, 0, 209, 0, 0, 1344, 1345, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1090, 0, 0, 0, 0, 76, 0,
	0, 0, 0, 0, 0, 209, 0, 0, 0, 0,
	1187, 0, 1187, 209, 1187, 0, 0, 0, 0, 0,
	0, 0, 1187, 0, 0, 1187, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1187, 1187,
	1187, 0, 1188, 1188, 0, 0, 0, 0, 0, 0,
	1087, 1422, 0, 0, 0, 0, 0, 0, 594, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1090, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 87, 0,
	0, 211, 0, 0, 0, 0, 0, 0, 211, 77,
	0, 0, 0, 1011, 1011, 0, 0, 1090, 211, 0,
	0, 0, 1090, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 148, 80, 1086, 81, 0, 0, 0, 0,
	0, 0, 1090, 1090, 1090, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 182, 0, 0, 0, 1090, 0,
	0, 0, 0, 211, 1090, 0, 692, 1188, 0, 1188,
	118, 1188, 0, 0, 0, 0, 0, 0, 0, 1188,
	0, 0, 1188, 0, 0, 0, 1090, 0, 0, 0,
	0, 0, 0, 0, 184, 1188, 1188, 1188, 0, 1024,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1024, 0, 0, 119, 0, 1086,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	152, 0, 0, 0, 0, 0, 0, 0, 183, 0,
	0, 0, 0, 0, 1630, 0, 0, 0, 176, 0,
	0, 0, 0, 0, 0, 0, 177, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1338, 0, 0,
	1011, 0, 0, 0, 0, 0, 1086, 0, 0, 0,
	0, 1646, 209, 0, 0, 0, 0, 0, 0, 0,
	1090, 1087, 1090, 0, 1655, 0, 1198, 0, 0, 0,
	0, 0, 1086, 87, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 209, 209, 209, 0, 0, 0, 0,
	0, 0, 1630, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 209, 0, 0, 0, 0,
	0, 211, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1090, 211, 211, 0, 0, 1090, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 209, 0, 0,
	0, 209, 0, 0, 0, 0, 1087, 211, 0, 0,
	0, 0, 0, 0, 1090, 0, 209, 1090, 0, 0,
	1187, 0, 0, 0, 1024, 0, 0, 0, 0, 0,
	0, 1470, 1471, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1086, 1501, 0, 0, 0, 0, 0, 1090, 1473, 0,
	0, 1011, 0, 0, 0, 0, 0, 0, 209, 1011,
	0, 0, 0, 1087, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1090, 1472, 0, 0,
	0, 0, 1187, 0, 0, 0, 1492, 0, 0, 1087,
	0, 0, 0, 1489, 0, 0, 1086, 0, 0, 0,
	0, 0, 0, 209, 0, 209, 0, 0, 0, 0,
	0, 0, 0, 1090, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1090, 0, 0, 0, 0,
	0, 0, 2936, 1850, 211, 0, 0, 1857, 209, 87,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 87,
	1495, 1496, 1497, 1498, 0, 0, 0, 0, 0, 1286,
	1478, 1880, 0, 1880, 0, 0, 0, 0, 87, 0,
	0, 0, 0, 0, 0, 0, 0, 1188, 0, 1187,
	1187, 1187, 0, 1187, 0, 0, 0, 0, 0, 0,
	0, 1500, 1502, 211, 0, 1187, 0, 0, 1090, 0,
	0, 0, 0, 0, 0, 0, 0, 1087, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1487, 1488, 0, 0, 0, 211, 211, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1857, 0, 0,
	1929, 0, 0, 0, 0, 1493, 0, 0, 0, 1188,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1946, 0, 0, 1087, 0, 0, 0, 0, 0, 0,
	1956, 0, 1958, 0, 1960, 0, 1962, 0, 1963, 0,
	0, 0, 1024, 1024, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1980, 0, 0, 0,
	0, 0, 1470, 1471, 0, 1503, 1504, 1505, 1513, 1514,
	1515, 0, 0, 211, 1090, 1499, 0, 0, 0, 0,
	0, 1506, 1501, 0, 1090, 1090, 0, 0, 0, 1473,
	1090, 0, 0, 1494, 1519, 0, 1188, 1188, 1188, 0,
	1188, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2093, 1188, 0, 0, 0, 0, 0, 1472, 0,
	0, 0, 0, 0, 0, 0, 0, 1492, 0, 211,
	0, 1090, 0, 0, 1489, 0, 0, 0, 0, 0,
	211, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 209, 0, 0, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	209, 1495, 1496, 1497, 1498, 0, 0, 0, 0, 0,
	0, 1478, 0, 0, 0, 0, 0, 0, 0, 1024,
	1490, 1486, 0, 1483, 1481, 1482, 1474, 1475, 1476, 1477,
	1479, 1480, 0, 0, 0, 1510, 0, 0, 1520, 0,
	0, 0, 1500, 1502, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 209, 0, 1086, 0, 0,
	0, 0, 1516, 0, 1517, 0, 0, 0, 0, 0,
	0, 1487, 1488, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1508, 0, 1086,
	2268, 0, 0, 0, 0, 0, 1493, 0, 0, 0,
	0, 1470, 1471, 0, 0, 0, 1086, 0, 0, 0,
	0, 87, 0, 0, 87, 1518, 0, 0, 0, 0,
	0, 1501, 0, 0, 0, 0, 0, 0, 1473, 0,
	0, 0, 1507, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1472, 0, 0,
	0, 0, 0, 0, 0, 0, 1492, 0, 0, 0,
	0, 0, 0, 1489, 0, 0, 1499, 0, 0, 0,
	1024, 0, 0, 0, 0, 0, 0, 0, 1024, 0,
	0, 0, 0, 0, 1494, 0, 0, 0, 0, 0,
	0, 1630, 0, 1187, 0, 0, 0, 0, 0, 0,
	0, 0, 2563, 1086, 0, 0, 0, 0, 0, 0,
	1511, 0, 1086, 0, 1087, 0, 0, 0, 0, 0,
	1495, 1496, 1497, 1498, 0, 0, 0, 1187, 0, 0,
	1478, 0, 0, 209, 0, 0, 0, 1187, 1187, 0,
	0, 0, 0, 0, 209, 209, 1087, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1198, 0, 0, 0,
	0, 1500, 1502, 1087, 0, 0, 0, 0, 0, 209,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1187, 1187, 1857,
	1487, 1488, 0, 0, 1509, 2414, 0, 1484, 1485, 1491,
	1512, 1490, 1486, 0, 1483, 1481, 1482, 1474, 1475, 1476,
	1477, 1479, 1480, 0, 0, 1493, 0, 3223, 0, 1470,
	1471, 3222, 0, 0, 0, 0, 0, 2445, 0, 0,
	1311, 0, 1311, 0, 1311, 0, 1198, 1198, 1086, 1501,
	0, 1086, 0, 0, 0, 0, 1473, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1188, 0, 0, 0, 2489, 0, 0, 0, 0, 0,
	1087, 0, 0, 0, 0, 1472, 0, 0, 0, 1087,
	2497, 0, 2500, 0, 1492, 0, 0, 0, 0, 0,
	0, 1489, 0, 0, 1188, 1499, 0, 0, 0, 0,
	0, 0, 0, 0, 1188, 1188, 209, 0, 0, 0,
	0, 0, 1086, 1494, 0, 2521, 1198, 2523, 1198, 0,
	2526, 0, 0, 0, 0, 0, 0, 0, 0, 1086,
	2556, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1495, 1496,
	1497, 1498, 0, 1311, 1188, 1188, 0, 0, 1478, 0,
	0, 2554, 0, 0, 0, 209, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1500,
	1502, 0, 0, 0, 0, 0, 0, 209, 209, 0,
	0, 0, 0, 0, 0, 1087, 0, 0, 1087, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1487, 1488,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1490, 1486, 0, 1483, 1481, 1482, 1474, 1475, 1476, 1477,
	1479, 1480, 0, 1493, 0, 0, 0, 0, 0, 0,
	0, 0, 1086, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1087,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 209, 1087, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1470, 1471, 0,
	1503, 1504, 1505, 1513, 1514, 1515, 0, 0, 0, 0,
	0, 0, 0, 1499, 0, 0, 1506, 1501, 0, 0,
	0, 0, 0, 0, 1473, 0, 0, 0, 0, 1519,
	0, 1494, 0, 0, 0, 0, 0, 1187, 0, 0,
	0, 209, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 209, 1472, 0, 0, 0, 0, 0, 0,
	0, 0, 1492, 0, 0, 0, 1086, 0, 0, 1489,
	0, 1187, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1187, 1187, 1187, 0, 0, 0, 0, 0, 1087,
	0, 0, 0, 0, 0, 0, 0, 1187, 0, 0,
	0, 0, 0, 1086, 0, 0, 1495, 1496, 1497, 1498,
	0, 0, 0, 0, 0, 0, 1478, 0, 0, 0,
	2763, 0, 0, 0, 0, 1086, 0, 0, 1490, 1486,
	0, 1483, 1481, 1482, 1474, 1475, 1476, 1477, 1479, 1480,
	1510, 0, 0, 1520, 0, 0, 0, 1500, 1502, 0,
	0, 2800, 2802, 2414, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1516, 0, 1517,
	0, 0, 0, 0, 0, 0, 1487, 1488, 0, 0,
	0, 0, 0, 0, 1188, 0, 0, 0, 0, 0,
	0, 0, 1508, 0, 0, 0, 0, 0, 0, 0,
	0, 1493, 0, 0, 0, 2840, 0, 0, 0, 2844,
	0, 0, 0, 1087, 0, 0, 0, 0, 1188, 0,
	1518, 0, 0, 0, 2853, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1507, 0, 1086,
	0, 1086, 0, 0, 0, 0, 0, 0, 1188, 1188,
	1188, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1188, 0, 0, 0, 0, 0,
	1087, 0, 0, 0, 0, 0, 2896, 0, 0, 0,
	0, 1499, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1087, 0, 0, 0, 0, 0, 0, 1494,
	1086, 0, 0, 0, 0, 1086, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2920, 0, 1198, 0, 1511, 0, 0, 0, 0,
	0, 0, 0, 1086, 0, 0, 1187, 0, 0, 1470,
	1471, 0, 1503, 1504, 1505, 1513, 1514, 1515, 0, 0,
	0, 0, 0, 0, 0, 0, 2932, 0, 1506, 1501,
	0, 0, 0, 0, 0, 0, 1473, 0, 0, 0,
	0, 1519, 0, 0, 0, 0, 1086, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1472, 0, 0, 0, 0,
	0, 0, 0, 0, 1492, 1086, 1087, 0, 1087, 1509,
	0, 1489, 1484, 1485, 1491, 1512, 1490, 1486, 0, 1483,
	1481, 1482, 1474, 1475, 1476, 1477, 1479, 1480, 0, 0,
	0, 0, 2630, 0, 0, 0, 2631, 0, 0, 0,
	0, 0, 1086, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1086, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1087, 1495, 1496,
	1497, 1498, 1087, 0, 0, 0, 0, 0, 1478, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1087, 0, 1510, 1188, 0, 1520, 0, 0, 0, 1500,
	1502, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1187, 0, 1516,
	0, 1517, 0, 0, 0, 0, 0, 0, 1487, 1488,
	0, 0, 0, 1087, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1508, 0, 0, 0, 0, 0,
	0, 0, 0, 1493, 0, 0, 0, 0, 0, 0,
	0, 0, 1087, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1518, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1507,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1087,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1087, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3127, 0, 1499, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1187, 0, 0, 0, 0, 3140, 0,
	0, 1494, 0, 1187, 1187, 0, 0, 0, 0, 1187,
	0, 1470, 1471, 0, 1503, 1504, 1505, 1513, 1514, 1515,
	0, 0, 0, 0, 0, 0, 0, 1511, 0, 0,
	1506, 1501, 0, 0, 1188, 0, 0, 0, 1473, 0,
	0, 0, 0, 1519, 0, 0, 0, 0, 0, 0,
	1086, 0, 0, 3179, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1472, 0, 0,
	0, 0, 0, 0, 0, 0, 1492, 0, 0, 0,
	0, 0, 0, 1489, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1509, 0, 0, 1484, 1485, 1491, 1512, 1490, 1486,
	0, 1483, 1481, 1482, 1474, 1475, 1476, 1477, 1479, 1480,
	0, 0, 0, 0, 2115, 0, 0, 0, 2116, 0,
	1495, 1496, 1497, 1498, 0, 0, 0, 0, 0, 0,
	1478, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1188, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1188, 1188, 0, 0, 1510, 0, 1188, 1520, 0, 0,
	0, 1500, 1502, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1470, 1471, 0, 1503, 1504, 1505, 1513, 1514,
	1515, 1516, 0, 1517, 0, 0, 0, 0, 0, 0,
	1487, 1488, 1501, 0, 0, 0, 0, 1087, 0, 1473,
	0, 0, 0, 0, 1519, 0, 1508, 0, 0, 0,
	0, 0, 0, 0, 0, 1493, 0, 0, 0, 0,
	0, 3291, 0, 0, 0, 0, 0, 0, 1472, 0,
	0, 0, 2414, 0, 1518, 0, 0, 1492, 0, 0,
	0, 0, 0, 0, 1489, 0, 0, 0, 0, 0,
	0, 1507, 0, 0, 0, 0, 0, 2414, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1499, 0, 0, 0, 0,
	0, 1495, 1496, 1497, 1498, 0, 0, 0, 0, 0,
	0, 1478, 0, 1494, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1510, 0, 0, 1520, 1511,
	0, 0, 1500, 1502, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1516, 0, 1517, 0, 0, 0, 0, 0,
	0, 1487, 1488, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1508, 0, 0,
	0, 0, 0, 0, 3405, 0, 1493, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1518, 0, 0, 0, 0,
	0, 0, 0, 1509, 0, 0, 1484, 1485, 1491, 1512,
	1490, 1486, 0, 1483, 1481, 1482, 1474, 1475, 1476, 1477,
	1479, 1480, 0, 0, 0, 0, 0, 0, 0, 0,
	3221, 0, 0, 3458, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1499, 0, 0, 0,
	0, 0, 0, 0, 0, 3484, 1198, 0, 0, 0,
	0, 0, 0, 0, 1494, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1511, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3542, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1509, 0, 0, 1484, 1485, 1491,
	1512, 1490, 1486, 0, 1483, 1481, 1482, 1474, 1475, 1476,
	1477, 1479, 1480, 1084, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3581,
	219, 220, 221, 222, 223, 1091, 224, 1092, 1093, 1094,
	3597, 1095, 480, 1096, 1097, 1098, 1099, 225, 227, 226,
	228, 229, 481, 482, 230, 483, 233, 231, 232, 484,
	1100, 234, 235, 236, 237, 238, 239, 1101, 1102, 240,
	485, 486, 487, 1103, 241, 488, 1104, 1089, 1105, 242,
	243, 244, 245, 246, 247, 0, 249, 250, 251, 248,
	1106, 252, 0, 253, 254, 255, 1107, 961, 256, 257,
	1108, 1109, 1111, 1110, 1112, 1113, 1114, 258, 259, 260,
	261, 262, 263, 489, 490, 1115, 264, 1116, 266, 265,
	1117, 267, 1118, 1119, 268, 269, 270, 1120, 271, 1121,
	272, 273, 1122, 274, 491, 275, 276, 278, 280, 277,
	281, 282, 283, 284, 492, 493, 1123, 216, 1124, 0,
	0, 0, 0, 285, 286, 287, 494, 288, 289, 0,
	290, 1125, 291, 1126, 1127, 962, 292, 293, 1128, 294,
	495, 1129, 496, 295, 1130, 296, 297, 298, 299, 497,
	498, 499, 351, 964, 300, 301, 1131, 302, 303, 305,
	0, 0, 217, 304, 306, 313, 1132, 963, 307, 500,
	309, 308, 310, 311, 312, 501, 1133, 502, 1134, 314,
	965, 503, 966, 315, 316, 317, 967, 318, 319, 0,
	0, 320, 321, 322, 323, 324, 1135, 326, 325, 1136,
	327, 504, 968, 328, 329, 969, 1137, 330, 331, 1138,
	1139, 332, 333, 334, 0, 335, 336, 338, 340, 337,
	339, 341, 343, 344, 342, 970, 345, 346, 348, 971,
	347, 1140, 218, 972, 349, 1141, 505, 350, 506, 352,
	353, 1142, 354, 355, 356, 1143, 1144, 358, 359, 360,
	1145, 1146, 361, 362, 507, 973, 363, 974, 508, 364,
	357, 365, 366, 367, 368, 369, 370, 371, 1147, 372,
	373, 509, 374, 510, 375, 1148, 376, 0, 377, 378,
	379, 380, 381, 382, 383, 511, 384, 385, 1149, 386,
	387, 388, 389, 390, 0, 392, 393, 394, 391, 395,
	396, 397, 398, 1150, 399, 975, 400, 401, 402, 403,
	512, 404, 0, 405, 409, 410, 411, 412, 413, 414,
	415, 1151, 421, 422, 416, 418, 419, 420, 417, 423,
	424, 425, 1152, 426, 406, 407, 427, 428, 976, 429,
	430, 513, 431, 432, 1153, 433, 434, 435, 436, 408,
	437, 441, 442, 438, 439, 440, 514, 1154, 444, 445,
	443, 1155, 446, 447, 448, 449, 450, 279, 451, 1156,
	452, 515, 516, 517, 518, 1157, 459, 1158, 453, 454,
	519, 455, 520, 1159, 456, 457, 458, 0, 460, 461,
	1160, 1161, 462, 463, 464, 465, 466, 468, 1162, 469,
	1163, 467, 470, 471, 472, 521, 522, 523, 1164, 474,
	473, 524, 1165, 1166, 1167, 1168, 475, 476, 525, 477,
	478, 479, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1084, 0, 0, 0, 0, 0,
	0, 0, 2246, 0, 0, 0, 0, 0, 0, 0,
	2247, 219, 220, 221, 222, 223, 1091, 224, 1092, 1093,
	1094, 0, 1095, 480, 1096, 1097, 1098, 1099, 225, 227,
	226, 228, 229, 481, 482, 230, 483, 233, 231, 232,
	484, 1100, 234, 235, 236, 237, 238, 239, 1101, 1102,
	240, 485, 486, 487, 1103, 241, 488, 1104, 1089, 1105,
	242, 243, 244, 245, 246, 247, 0, 249, 250, 251,
	248, 1106, 252, 0, 253, 254, 255, 1107, 961, 256,
	257, 1108, 1109, 1111, 1110, 1112, 1113, 1114, 258, 259,
	260, 261, 262, 263, 489, 490, 1115, 264, 1116, 266,
	265, 1117, 267, 1118, 1119, 268, 269, 270, 1120, 271,
	1121, 272, 273, 1122, 274, 491, 275, 276, 278, 280,
	277, 281, 282, 283, 284, 492, 493, 1123, 216, 1124,
	0, 0, 0, 0, 285, 286, 287, 494, 288, 289,
	0, 290, 1125, 291, 1126, 1127, 962, 292, 293, 1128,
	294, 495, 1129, 496, 295, 1130, 296, 297, 298, 299,
	497, 498, 499, 351, 964, 300, 301, 1131, 302, 303,
	305, 0, 0, 217, 304, 306, 313, 1132, 963, 307,
	500, 309, 308, 310, 311, 312, 501, 1133, 502, 1134,
	314, 965, 503, 966, 315, 316, 317, 967, 318, 319,
	0, 0, 320, 321, 322, 323, 324, 1135, 326, 325,
	1136, 327, 504, 968, 328, 329, 969, 1137, 330, 331,
	1138, 1139, 332, 333, 334, 0, 335, 336, 338, 340,
	337, 339, 341, 343, 344, 342, 970, 345, 346, 348,
	971, 347, 1140, 218, 972, 349, 1141, 505, 350, 506,
	352, 353, 1142, 354, 355, 356, 1143, 1144, 358, 359,
	360, 1145, 1146, 361, 362, 507, 973, 363, 974, 508,
	364, 357, 365, 366, 367, 368, 369, 370, 371, 1147,
	372, 373, 509, 374, 510, 375, 1148, 376, 0, 377,
	378, 379, 380, 381, 382, 383, 511, 384, 385, 1149,
	386, 387, 388, 389, 390, 0, 392, 393, 394, 391,
	395, 396, 397, 398, 1150, 399, 975, 400, 401, 402,
	403, 512, 404, 0, 405, 409, 410, 411, 412, 413,
	414, 415, 1151, 421, 422, 416, 418, 419, 420, 417,
	423, 424, 425, 1152, 426, 406, 407, 427, 428, 976,
	429, 430, 513, 431, 432, 1153, 433, 434, 435, 436,
	408, 437, 441, 442, 438, 439, 440, 514, 1154, 444,
	445, 443, 1155, 446, 447, 448, 449, 450, 279, 451,
	1156, 452, 515, 516, 517, 518, 1157, 459, 1158, 453,
	454, 519, 455, 520, 1159, 456, 457, 458, 0, 460,
	461, 1160, 1161, 462, 463, 464, 465, 466, 468, 1162,
	469, 1163, 467, 470, 471, 472, 521, 522, 523, 1164,
	474, 473, 524, 1165, 1166, 1167, 1168, 475, 476, 525,
	477, 478, 479, 0, 0, 0, 0, 1084, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3245, 219, 220, 221, 222, 223, 1091,
	224, 1092, 1093, 1094, 0, 1095, 480, 1096, 1097, 1098,
	1099, 225, 227, 226, 228, 229, 481, 482, 230, 483,
	233, 231, 232, 484, 1100, 234, 235, 236, 237, 238,
	239, 1101, 1102, 240, 485, 486, 487, 1103, 241, 488,
	1104, 1089, 1105, 242, 243, 244, 245, 246, 247, 0,
	249, 250, 251, 248, 1106, 252, 0, 253, 254, 255,
	1107, 961, 256, 257, 1108, 1109, 1111, 1110, 1112, 1113,
	1114, 258, 259, 260, 261, 262, 263, 489, 490, 1115,
	264, 1116, 266, 265, 1117, 267, 1118, 1119, 268, 269,
	270, 1120, 271, 1121, 272, 273, 1122, 274, 491, 275,
	276, 278, 280, 277, 281, 282, 283, 284, 492, 493,
	1123, 216, 1124, 0, 0, 0, 0, 285, 286, 287,
	494, 288, 289, 0, 290, 1125, 291, 1126, 1127, 962,
	292, 293, 1128, 294, 495, 1129, 496, 295, 1130, 296,
	297, 298, 299, 497, 498, 499, 351, 964, 300, 301,
	1131, 302, 303, 305, 0, 0, 217, 304, 306, 313,
	1132, 963, 307, 500, 309, 308, 310, 311, 312, 501,
	1133, 502, 1134, 314, 965, 503, 966, 315, 316, 317,
	967, 318, 319, 0, 0, 320, 321, 322, 323, 324,
	1135, 326, 325, 1136, 327, 504, 968, 328, 329, 969,
	1137, 330, 331, 1138, 1139, 332, 333, 334, 0, 335,
	336, 338, 340, 337, 339, 341, 343, 344, 342, 970,
	345, 346, 348, 971, 347, 1140, 218, 972, 349, 1141,
	505, 350, 506, 352, 353, 1142, 354, 355, 356, 1143,
	1144, 358, 359, 360, 1145, 1146, 361, 362, 507, 973,
	363, 974, 508, 364, 357, 365, 366, 367, 368, 369,
	370, 371, 1147, 372, 373, 509, 374, 510, 375, 1148,
	376, 0, 377, 378, 379, 380, 381, 382, 383, 511,
	384, 385, 1149, 386, 387, 388, 389, 390, 0, 392,
	393, 394, 391, 395, 396, 397, 398, 1150, 399, 975,
	400, 401, 402, 403, 512, 404, 0, 405, 409, 410,
	411, 412, 413, 414, 415, 1151, 421, 422, 416, 418,
	419, 420, 417, 423, 424, 425, 1152, 426, 406, 407,
	427, 428, 976, 429, 430, 513, 431, 432, 1153, 433,
	434, 435, 436, 408, 437, 441, 442, 438, 439, 440,
	514, 1154, 444, 445, 443, 1155, 446, 447, 448, 449,
	450, 279, 451, 1156, 452, 515, 516, 517, 518, 1157,
	459, 1158, 453, 454, 519, 455, 520, 1159, 456, 457,
	458, 0, 460, 461, 1160, 1161, 462, 463, 464, 465,
	466, 468, 1162, 469, 1163, 467, 470, 471, 472, 521,
	522, 523, 1164, 474, 473, 524, 1165, 1166, 1167, 1168,
	475, 476, 525, 477, 478, 479, 1084, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3373, 0, 219, 220, 221, 222, 223, 1091, 224,
	1092, 1093, 1094, 0, 1095, 480, 1096, 1097, 1098, 1099,
	225, 227, 226, 228, 229, 481, 482, 230, 483, 233,
	231, 232, 484, 1100, 234, 235, 236, 237, 238, 239,
	1101, 1102, 240, 485, 486, 487, 1103, 241, 488, 1104,
	1089, 1105, 242, 243, 244, 245, 246, 247, 0, 249,
	250, 251, 248, 1106, 252, 0, 253, 254, 255, 1107,
	961, 256, 257, 1108, 1109, 1111, 1110, 1112, 1113, 1114,
	258, 259, 260, 261, 262, 263, 489, 490, 1115, 264,
	1116, 266, 265, 1117, 267, 1118, 1119, 268, 269, 270,
	1120, 271, 1121, 272, 273, 1122, 274, 491, 275, 276,
	278, 280, 277, 281, 282, 283, 284, 492, 493, 1123,
	216, 1124, 0, 0, 0, 0, 285, 286, 287, 494,
	288, 289, 0, 290, 1125, 291, 1126, 1127, 962, 292,
	293, 1128, 294, 495, 1129, 496, 295, 1130, 296, 297,
	298, 299, 497, 498, 499, 351, 964, 300, 301, 1131,
	302, 303, 305, 0, 0, 217, 304, 306, 313, 1132,
	963, 307, 500, 309, 308, 310, 311, 312, 501, 1133,
	502, 1134, 314, 965, 503, 966, 315, 316, 317, 967,
	318, 319, 0, 0, 320, 321, 322, 323, 324, 1135,
	326, 325, 1136, 327, 504, 968, 328, 329, 969, 1137,
	330, 331, 1138, 1139, 332, 333, 334, 0, 335, 336,
	338, 340, 337, 339, 341, 343, 344, 342, 970, 345,
	346, 348, 971, 347, 1140, 218, 972, 349, 1141, 505,
	350, 506, 352, 353, 1142, 354, 355, 356, 1143, 1144,
	358, 359, 360, 1145, 1146, 361, 362, 507, 973, 363,
	974, 508, 364, 357, 365, 366, 367, 368, 369, 370,
	371, 1147, 372, 373, 509, 374, 510, 375, 1148, 376,
	0, 377, 378, 379, 380, 381, 382, 383, 511, 384,
	385, 1149, 386, 387, 388, 389, 390, 0, 392, 393,
	394, 391, 395, 396, 397, 398, 1150, 399, 975, 400,
	401, 402, 403, 512, 404, 0, 405, 409, 410, 411,
	412, 413, 414, 415, 1151, 421, 422, 416, 418, 419,
	420, 417, 423, 424, 425, 1152, 426, 406, 407, 427,
	428, 976, 429, 430, 513, 431, 432, 1153, 433, 434,
	435, 436, 408, 437, 441, 442, 438, 439, 440, 514,
	1154, 444, 445, 443, 1155, 446, 447, 448, 449, 450,
	279, 451, 1156, 452, 515, 516, 517, 518, 1157, 459,
	1158, 453, 454, 519, 455, 520, 1159, 456, 457, 458,
	0, 460, 461, 1160, 1161, 462, 463, 464, 465, 466,
	468, 1162, 469, 1163, 467, 470, 471, 472, 521, 522,
	523, 1164, 474, 473, 524, 1165, 1166, 1167, 1168, 475,
	476, 525, 477, 478, 479, 1084, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3298, 0, 219, 220, 221, 222, 223, 1091, 224, 1092,
	1093, 1094, 0, 1095, 480, 1096, 1097, 1098, 1099, 225,
	227, 226, 228, 229, 481, 482, 230, 483, 233, 231,
	232, 484, 1100, 234, 235, 236, 237, 238, 239, 1101,
	1102, 240, 485, 486, 487, 1103, 241, 488, 1104, 1089,
	1105, 242, 243, 244, 245, 246, 247, 0, 249, 250,
	251, 248, 1106, 252, 0, 253, 254, 255, 1107, 961,
	256, 257, 1108, 1109, 1111, 1110, 1112, 1113, 1114, 258,
	259, 260, 261, 262, 263, 489, 490, 1115, 264, 1116,
	266, 265, 1117, 267, 1118, 1119, 268, 269, 270, 1120,
	271, 1121, 272, 273, 1122, 274, 491, 275, 276, 278,
	280, 277, 281, 282, 283, 284, 492, 493, 1123, 216,
	1124, 0, 0, 0, 0, 285, 286, 287, 494, 288,
	289, 0, 290, 1125, 291, 1126, 1127, 962, 292, 293,
	1128, 294, 495, 1129, 496, 295, 1130, 296, 297, 298,
	299, 497, 498, 499, 351, 964, 300, 301, 1131, 302,
	303, 305, 0, 0, 217, 304, 306, 313, 1132, 963,
	307, 500, 309, 308, 310, 311, 312, 501, 1133, 502,
	1134, 314, 965, 503, 966, 315, 316, 317, 967, 318,
	319, 0, 0, 320, 321, 322, 323, 324, 1135, 326,
	325, 1136, 327, 504, 968, 328, 329, 969, 1137, 330,
	331, 1138, 1139, 332, 333, 334, 0, 335, 336, 338,
	340, 337, 339, 341, 343, 344, 342, 970, 345, 346,
	348, 971, 347, 1140, 218, 972, 349, 1141, 505, 350,
	506, 352, 353, 1142, 354, 355, 356, 1143, 1144, 358,
	359, 360, 1145, 1146, 361, 362, 507, 973, 363, 974,
	508, 364, 357, 365, 366, 367, 368, 369, 370, 371,
	1147, 372, 373, 509, 374, 510, 375, 1148, 376, 0,
	377, 378, 379, 380, 381, 382, 383, 511, 384, 385,
	1149, 386, 387, 388, 389, 390, 0, 392, 393, 394,
	391, 395, 396, 397, 398, 1150, 399, 975, 400, 401,
	402, 403, 512, 404, 0, 405, 409, 410, 411, 412,
	413, 414, 415, 1151, 421, 422, 416, 418, 419, 420,
	417, 423, 424, 425, 1152, 426, 406, 407, 427, 428,
	976, 429, 430, 513, 431, 432, 1153, 433, 434, 435,
	436, 408, 437, 441, 442, 438, 439, 440, 514, 1154,
	444, 445, 443, 1155, 446, 447, 448, 449, 450, 279,
	451, 1156, 452, 515, 516, 517, 518, 1157, 459, 1158,
	453, 454, 519, 455, 520, 1159, 456, 457, 458, 0,
	460, 461, 1160, 1161, 462, 463, 464, 465, 466, 468,
	1162, 469, 1163, 467, 470, 471, 472, 521, 522, 523,
	1164, 474, 473, 524, 1165, 1166, 1167, 1168, 475, 476,
	525, 477, 478, 479, 1084, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3180,
	0, 219, 220, 221, 222, 223, 1091, 224, 1092, 1093,
	1094, 0, 1095, 480, 1096, 1097, 1098, 1099, 225, 227,
	226, 228, 229, 481, 482, 230, 483, 233, 231, 232,
	484, 1100, 234, 235, 236, 237, 238, 239, 1101, 1102,
	240, 485, 486, 487, 1103, 241, 488, 1104, 1089, 1105,
	242, 243, 244, 245, 246, 247, 0, 249, 250, 251,
	248, 1106, 252, 0, 253, 254, 255, 1107, 961, 256,
	257, 1108, 1109, 1111, 1110, 1112, 1113, 1114, 258, 259,
	260, 261, 262, 263, 489, 490, 1115, 264, 1116, 266,
	265, 1117, 267, 1118, 1119, 268, 269, 270, 1120, 271,
	1121, 272, 273, 1122, 274, 491, 275, 276, 278, 280,
	277, 281, 282, 283, 284, 492, 493, 1123, 216, 1124,
	0, 0, 0, 0, 285, 286, 287, 494, 288, 289,
	0, 290, 1125, 291, 1126, 1127, 962, 292, 293, 1128,
	294, 495, 1129, 496, 295, 1130, 296, 297, 298, 299,
	497, 498, 499, 351, 964, 300, 301, 1131, 302, 303,
	305, 0, 0, 217, 304, 306, 313, 1132, 963, 307,
	500, 309, 308, 310, 311, 312, 501, 1133, 502, 1134,
	314, 965, 503, 966, 315, 316, 317, 967, 318, 319,
	0, 0, 320, 321, 322, 323, 324, 1135, 326, 325,
	1136, 327, 504, 968, 328, 329, 969, 1137, 330, 331,
	1138, 1139, 332, 333, 334, 0, 335, 336, 338, 340,
	337, 339, 341, 343, 344, 342, 970, 345, 346, 348,
	971, 347, 1140, 218, 972, 349, 1141, 505, 350, 506,
	352, 353, 1142, 354, 355, 356, 1143, 1144, 358, 359,
	360, 1145, 1146, 361, 362, 507, 973, 363, 974, 508,
	364, 357, 365, 366, 367, 368, 369, 370, 371, 1147,
	372, 373, 509, 374, 510, 375, 1148, 376, 0, 377,
	378, 379, 380, 381, 382, 383, 511, 384, 385, 1149,
	386, 387, 388, 389, 390, 0, 392, 393, 394, 391,
	395, 396, 397, 398, 1150, 399, 975, 400, 401, 402,
	403, 512, 404, 0, 405, 409, 410, 411, 412, 413,
	414, 415, 1151, 421, 422, 416, 418, 419, 420, 417,
	423, 424, 425, 1152, 426, 406, 407, 427, 428, 976,
	429, 430, 513, 431, 432, 1153, 433, 434, 435, 436,
	408, 437, 441, 442, 438, 439, 440, 514, 1154, 444,
	445, 443, 1155, 446, 447, 448, 449, 450, 279, 451,
	1156, 452, 515, 516, 517, 518, 1157, 459, 1158, 453,
	454, 519, 455, 520, 1159, 456, 457, 458, 0, 460,
	461, 1160, 1161, 462, 463, 464, 465, 466, 468, 1162,
	469, 1163, 467, 470, 471, 472, 521, 522, 523, 1164,
	474, 473, 524, 1165, 1166, 1167, 1168, 475, 476, 525,
	477, 478, 479, 1084, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2975, 0,
	219, 220, 221, 222, 223, 1091, 224, 1092, 1093, 1094,
	0, 1095, 480, 1096, 1097, 1098, 1099, 225, 227, 226,
	228, 229, 481, 482, 230, 483, 233, 231, 232, 484,
	1100, 234, 235, 236, 237, 238, 239, 1101, 1102, 240,
	485, 486, 487, 1103, 241, 488, 1104, 1089, 1105, 242,
	243, 244, 245, 246, 247, 0, 249, 250, 251, 248,
	1106, 252, 0, 253, 254, 255, 1107, 961, 256, 257,
	1108, 1109, 1111, 1110, 1112, 1113, 1114, 258, 259, 260,
	261, 262, 263, 489, 490, 1115, 264, 1116, 266, 265,
	1117, 267, 1118, 1119, 268, 269, 270, 1120, 271, 1121,
	272, 273, 1122, 274, 491, 275, 276, 278, 280, 277,
	281, 282, 283, 284, 492, 493, 1123, 216, 1124, 0,
	0, 0, 0, 285, 286, 287, 494, 288, 289, 0,
	290, 1125, 291, 1126, 1127, 962, 292, 293, 1128, 294,
	495, 1129, 496, 295, 1130, 296, 297, 298, 299, 497,
	498, 499, 351, 964, 300, 301, 1131, 302, 303, 305,
	0, 0, 217, 304, 306, 313, 1132, 963, 307, 500,
	309, 308, 310, 311, 312, 501, 1133, 502, 1134, 314,
	965, 503, 966, 315, 316, 317, 967, 318, 319, 0,
	0, 320, 321, 322, 323, 324, 1135, 326, 325, 1136,
	327, 504, 968, 328, 329, 969, 1137, 330, 331, 1138,
	1139, 332, 333, 334, 0, 335, 336, 338, 340, 337,
	339, 341, 343, 344, 342, 970, 345, 346, 348, 971,
	347, 1140, 218, 972, 349, 1141, 505, 350, 506, 352,
	353, 1142, 354, 355, 356, 1143, 1144, 358, 359, 360,
	1145, 1146, 361, 362, 507, 973, 363, 974, 508, 364,
	357, 365, 366, 367, 368, 369, 370, 371, 1147, 372,
	373, 509, 374, 510, 375, 1148, 376, 0, 377, 378,
	379, 380, 381, 382, 383, 511, 384, 385, 1149, 386,
	387, 388, 389, 390, 0, 392, 393, 394, 391, 395,
	396, 397, 398, 1150, 399, 975, 400, 401, 402, 403,
	512, 404, 0, 405, 409, 410, 411, 412, 413, 414,
	415, 1151, 421, 422, 416, 418, 419, 420, 417, 423,
	424, 425, 1152, 426, 406, 407, 427, 428, 976, 429,
	430, 513, 431, 432, 1153, 433, 434, 435, 436, 408,
	437, 441, 442, 438, 439, 440, 514, 1154, 444, 445,
	443, 1155, 446, 447, 448, 449, 450, 279, 451, 1156,
	452, 515, 516, 517, 518, 1157, 459, 1158, 453, 454,
	519, 455, 520, 1159, 456, 457, 458, 0, 460, 461,
	1160, 1161, 462, 463, 464, 465, 466, 468, 1162, 469,
	1163, 467, 470, 471, 472, 521, 522, 523, 1164, 474,
	473, 524, 1165, 1166, 1167, 1168, 475, 476, 525, 477,
	478, 479, 1084, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2958, 0, 219,
	220, 221, 222, 223, 1091, 224, 1092, 1093, 1094, 0,
	1095, 480, 1096, 1097, 1098, 1099, 225, 227, 226, 228,
	229, 481, 482, 230, 483, 233, 231, 232, 484, 1100,
	234, 235, 236, 237, 238, 239, 1101, 1102, 240, 485,
	486, 487, 1103, 241, 488, 1104, 1089, 1105, 242, 243,
	244, 245, 246, 247, 0, 249, 250, 251, 248, 1106,
	252, 0, 253, 254, 255, 1107, 961, 256, 257, 1108,
	1109, 1111, 1110, 1112, 1113, 1114, 258, 259, 260, 261,
	262, 263, 489, 490, 1115, 264, 1116, 266, 265, 1117,
	267, 1118, 1119, 268, 269, 270, 1120, 271, 1121, 272,
	273, 1122, 274, 491, 275, 276, 278, 280, 277, 281,
	282, 283, 284, 492, 493, 1123, 216, 1124, 0, 0,
	0, 0, 285, 286, 287, 494, 288, 289, 0, 290,
	1125, 291, 1126, 1127, 962, 292, 293, 1128, 294, 495,
	1129, 496, 295, 1130, 296, 297, 298, 299, 497, 498,
	499, 351, 964, 300, 301, 1131, 302, 303, 305, 0,
	0, 217, 304, 306, 313, 1132, 963, 307, 500, 309,
	308, 310, 311, 312, 501, 1133, 502, 1134, 314, 965,
	503, 966, 315, 316, 317, 967, 318, 319, 0, 0,
	320, 321, 322, 323, 324, 1135, 326, 325, 1136, 327,
	504, 968, 328, 329, 969, 1137, 330, 331, 1138, 1139,
	332, 333, 334, 0, 335, 336, 338, 340, 337, 339,
	341, 343, 344, 342, 970, 345, 346, 348, 971, 347,
	1140, 218, 972, 349, 1141, 505, 350, 506, 352, 353,
	1142, 354, 355, 356, 1143, 1144, 358, 359, 360, 1145,
	1146, 361, 362, 507, 973, 363, 974, 508, 364, 357,
	365, 366, 367, 368, 369, 370, 371, 1147, 372, 373,
	509, 374, 510, 375, 1148, 376, 0, 377, 378, 379,
	380, 381, 382, 383, 511, 384, 385, 1149, 386, 387,
	388, 389, 390, 0, 392, 393, 394, 391, 395, 396,
	397, 398, 1150, 399, 975, 400, 401, 402, 403, 512,
	404, 0, 405, 409, 410, 411, 412, 413, 414, 415,
	1151, 421, 422, 416, 418, 419, 420, 417, 423, 424,
	425, 1152, 426, 406, 407, 427, 428, 976, 429, 430,
	513, 431, 432, 1153, 433, 434, 435, 436, 408, 437,
	441, 442, 438, 439, 440, 514, 1154, 444, 445, 443,
	1155, 446, 447, 448, 449, 450, 279, 451, 1156, 452,
	515, 516, 517, 518, 1157, 459, 1158, 453, 454, 519,
	455, 520, 1159, 456, 457, 458, 0, 460, 461, 1160,
	1161, 462, 463, 464, 465, 466, 468, 1162, 469, 1163,
	467, 470, 471, 472, 521, 522, 523, 1164, 474, 473,
	524, 1165, 1166, 1167, 1168, 475, 476, 525, 477, 478,
	479, 1084, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2827, 0, 219, 220,
	221, 222, 223, 1091, 224, 1092, 1093, 1094, 0, 1095,
	480, 1096, 1097, 1098, 1099, 225, 227, 226, 228, 229,
	481, 482, 230, 483, 233, 231, 232, 484, 1100, 234,
	235, 236, 237, 238, 239, 1101, 1102, 240, 485, 486,
	487, 1103, 241, 488, 1104, 1089, 1105, 242, 243, 244,
	245, 246, 247, 0, 249, 250, 251, 248, 1106, 252,
	0, 253, 254, 255, 1107, 961, 256, 257, 1108, 1109,
	1111, 1110, 1112, 1113, 1114, 258, 259, 260, 261, 262,
	263, 489, 490, 1115, 264, 1116, 266, 265, 1117, 267,
	1118, 1119, 268, 269, 270, 1120, 271, 1121, 272, 273,
	1122, 274, 491, 275, 276, 278, 280, 277, 281, 282,
	283, 284, 492, 493, 1123, 216, 1124, 0, 0, 0,
	0, 285, 286, 287, 494, 288, 289, 0, 290, 1125,
	291, 1126, 1127, 962, 292, 293, 1128, 294, 495, 1129,
	496, 295, 1130, 296, 297, 298, 299, 497, 498, 499,
	351, 964, 300, 301, 1131, 302, 303, 305, 0, 0,
	217, 304, 306, 313, 1132, 963, 307, 500, 309, 308,
	310, 311, 312, 501, 1133, 502, 1134, 314, 965, 503,
	966, 315, 316, 317, 967, 318, 319, 0, 0, 320,
	321, 322, 323, 324, 1135, 326, 325, 1136, 327, 504,
	968, 328, 329, 969, 1137, 330, 331, 1138, 1139, 332,
	333, 334, 0, 335, 336, 338, 340, 337, 339, 341,
	343, 344, 342, 970, 345, 346, 348, 971, 347, 1140,
	218, 972, 349, 1141, 505, 350, 506, 352, 353, 1142,
	354, 355, 356, 1143, 1144, 358, 359, 360, 1145, 1146,
	361, 362, 507, 973, 363, 974, 508, 364, 357, 365,
	366, 367, 368, 369, 370, 371, 1147, 372, 373, 509,
	374, 510, 375, 1148, 376, 0, 377, 378, 379, 380,
	381, 382, 383, 511, 384, 385, 1149, 386, 387, 388,
	389, 390, 0, 392, 393, 394, 391, 395, 396, 397,
	398, 1150, 399, 975, 400, 401, 402, 403, 512, 404,
	0, 405, 409, 410, 411, 412, 413, 414, 415, 1151,
	421, 422, 416, 418, 419, 420, 417, 423, 424, 425,
	1152, 426, 406, 407, 427, 428, 976, 429, 430, 513,
	431, 432, 1153, 433, 434, 435, 436, 408, 437, 441,
	442, 438, 439, 440, 514, 1154, 444, 445, 443, 1155,
	446, 447, 448, 449, 450, 279, 451, 1156, 452, 515,
	516, 517, 518, 1157, 459, 1158, 453, 454, 519, 455,
	520, 1159, 456, 457, 458, 0, 460, 461, 1160, 1161,
	462, 463, 464, 465, 466, 468, 1162, 469, 1163, 467,
	470, 471, 472, 521, 522, 523, 1164, 474, 473, 524,
	1165, 1166, 1167, 1168, 475, 476, 525, 477, 478, 479,
	1084, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2139, 0, 219, 220, 221,
	222, 223, 1091, 224, 1092, 1093, 1094, 0, 1095, 480,
	1096, 1097, 1098, 1099, 225, 227, 226, 228, 229, 481,
	482, 230, 483, 233, 231, 232, 484, 1100, 234, 235,
	236, 237, 238, 239, 1101, 1102, 240, 485, 486, 487,
	1103, 241, 488, 1104, 1089, 1105, 242, 243, 244, 245,
	246, 247, 0, 249, 250, 251, 248, 1106, 252, 0,
	253, 254, 255, 1107, 961, 256, 257, 1108, 1109, 1111,
	1110, 1112, 1113, 1114, 258, 259, 260, 261, 262, 263,
	489, 490, 1115, 264, 1116, 266, 265, 1117, 267, 1118,
	1119, 268, 269, 270, 1120, 271, 1121, 272, 273, 1122,
	274, 491, 275, 276, 278, 280, 277, 281, 282, 283,
	284, 492, 493, 1123, 216, 1124, 0, 0, 0, 0,
	285, 286, 287, 494, 288, 289, 0, 290, 1125, 291,
	1126, 1127, 962, 292, 293, 1128, 294, 495, 1129, 496,
	295, 1130, 296, 297, 298, 299, 497, 498, 499, 351,
	964, 300, 301, 1131, 302, 303, 305, 0, 0, 217,
	304, 306, 313, 1132, 963, 307, 500, 309, 308, 310,
	311, 312, 501, 1133, 502, 1134, 314, 965, 503, 966,
	315, 316, 317, 967, 318, 319, 0, 0, 320, 321,
	322, 323, 324, 1135, 326, 325, 1136, 327, 504, 968,
	328, 329, 969, 1137, 330, 331, 1138, 1139, 332, 333,
	334, 0, 335, 336, 338, 340, 337, 339, 341, 343,
	344, 342, 970, 345, 346, 348, 971, 347, 1140, 218,
	972, 349, 1141, 505, 350, 506, 352, 353, 1142, 354,
	355, 356, 1143, 1144, 358, 359, 360, 1145, 1146, 361,
	362, 507, 973, 363, 974, 508, 364, 357, 365, 366,
	367, 368, 369, 370, 371, 1147, 372, 373, 509, 374,
	510, 375, 1148, 376, 0, 377, 378, 379, 380, 381,
	382, 383, 511, 384, 385, 1149, 386, 387, 388, 389,
	390, 0, 392, 393, 394, 391, 395, 396, 397, 398,
	1150, 399, 975, 400, 401, 402, 403, 512, 404, 0,
	405, 409, 410, 411, 412, 413, 414, 415, 1151, 421,
	422, 416, 418, 419, 420, 417, 423, 424, 425, 1152,
	426, 406, 407, 427, 428, 976, 429, 430, 513, 431,
	432, 1153, 433, 434, 435, 436, 408, 437, 441, 442,
	438, 439, 440, 514, 1154, 444, 445, 443, 1155, 446,
	447, 448, 449, 450, 279, 451, 1156, 452, 515, 516,
	517, 518, 1157, 459, 1158, 453, 454, 519, 455, 520,
	1159, 456, 457, 458, 0, 460, 461, 1160, 1161, 462,
	463, 464, 465, 466, 468, 1162, 469, 1163, 467, 470,
	471, 472, 521, 522, 523, 1164, 474, 473, 524, 1165,
	1166, 1167, 1168, 475, 476, 525, 477, 478, 479, 1192,
	0, 1084, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1833, 0, 0, 0, 219, 220,
	221, 222, 223, 1091, 224, 1092, 1093, 1094, 0, 1095,
	480, 1096, 1097, 1098, 1099, 225, 227, 226, 228, 229,
	481, 482, 230, 483, 233, 231, 232, 484, 1100, 234,
	235, 236, 237, 238, 239, 1101, 1102, 240, 485, 486,
	487, 1103, 241, 488, 1104, 1089, 1105, 242, 243, 244,
	245, 246, 247, 0, 249, 250, 251, 248, 1106, 252,
	0, 253, 254, 255, 1107, 961, 256, 257, 1108, 1109,
	1111, 1110, 1112, 1113, 1114, 258, 259, 260, 261, 262,
	263, 489, 490, 1115, 264, 1116, 266, 265, 1117, 267,
	1118, 1119, 268, 269, 270, 1120, 271, 1121, 272, 273,
	1122, 274, 491, 275, 276, 278, 280, 277, 281, 282,
	283, 284, 492, 493, 1123, 216, 1124, 0, 0, 0,
	0, 285, 286, 287, 494, 288, 289, 0, 290, 1125,
	291, 1126, 1127, 962, 292, 293, 1128, 294, 495, 1129,
	496, 295, 1130, 296, 297, 298, 299, 497, 498, 499,
	351, 964, 300, 301, 1131, 302, 303, 305, 0, 0,
	217, 304, 306, 313, 1132, 963, 307, 500, 309, 308,
	310, 311, 312, 501, 1133, 502, 1134, 314, 965, 503,
	966, 315, 316, 317, 967, 318, 319, 0, 0, 320,
	321, 322, 323, 324, 1135, 326, 325, 1136, 327, 504,
	968, 328, 329, 969, 1137, 330, 331, 1138, 1139, 332,
	333, 334, 0, 335, 336, 338, 340, 337, 339, 341,
	343, 344, 342, 970, 345, 346, 348, 971, 347, 1140,
	218, 972, 349, 1141, 505, 350, 506, 352, 353, 1142,
	354, 355, 356, 1143, 1144, 358, 359, 360, 1145, 1146,
	361, 362, 507, 973, 363, 974, 508, 364, 357, 365,
	366, 367, 368, 369, 370, 371, 1147, 372, 373, 509,
	374, 510, 375, 1148, 376, 0, 377, 378, 379, 380,
	381, 382, 383, 511, 384, 385, 1149, 386, 387, 388,
	389, 390, 0, 392, 393, 394, 391, 395, 396, 397,
	398, 1150, 399, 975, 400, 401, 402, 403, 512, 404,
	0, 405, 409, 410, 411, 412, 413, 414, 415, 1151,
	421, 422, 416, 418, 419, 420, 417, 423, 424, 425,
	1152, 426, 406, 407, 427, 428, 976, 429, 430, 513,
	431, 432, 1153, 433, 434, 435, 436, 408, 437, 441,
	442, 438, 439, 440, 514, 1154, 444, 445, 443, 1155,
	446, 447, 448, 449, 450, 279, 451, 1156, 452, 515,
	516, 517, 518, 1157, 459, 1158, 453, 454, 519, 455,
	520, 1159, 456, 457, 458, 0, 460, 461, 1160, 1161,
	462, 463, 464, 465, 466, 468, 1162, 469, 1163, 467,
	470, 471, 472, 521, 522, 523, 1164, 474, 473, 524,
	1165, 1166, 1167, 1168, 475, 476, 525, 477, 478, 479,
	1081, 0, 1084, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 219,
	220, 221, 222, 223, 1091, 224, 1092, 1093, 1094, 0,
	1095, 480, 1096, 1097, 1098, 1099, 225, 227, 226, 228,
	229, 481, 482, 230, 483, 233, 231, 232, 484, 1100,
	234, 235, 236, 237, 238, 239, 1101, 1102, 240, 485,
	486, 487, 1103, 241, 488, 1104, 1089, 1105, 242, 243,
	244, 245, 246, 247, 0, 249, 250, 251, 248, 1106,
	252, 0, 253, 254, 255, 1107, 961, 256, 257, 1108,
	1109, 1111, 1110, 1112, 1113, 1114, 258, 259, 260, 261,
	262, 263, 489, 490, 1115, 264, 1116, 266, 265, 1117,
	267, 1118, 1119, 268, 269, 270, 1120, 271, 1121, 272,
	273, 1122, 274, 491, 275, 276, 278, 280, 277, 281,
	282, 283, 284, 492, 493, 1123, 216, 1124, 0, 0,
	0, 0, 285, 286, 287, 494, 288, 289, 0, 290,
	1125, 291, 1126, 1127, 962, 292, 293, 1128, 294, 495,
	1129, 496, 295, 1130, 296, 297, 298, 299, 497, 498,
	499, 351, 964, 300, 301, 1131, 302, 303, 305, 0,
	0, 217, 304, 306, 313, 1132, 963, 307, 500, 309,
	308, 310, 311, 312, 501, 1133, 502, 1134, 314, 965,
	503, 966, 315, 316, 317, 967, 318, 319, 0, 0,
	320, 321, 322, 323, 324, 1135, 326, 325, 1136, 327,
	504, 968, 328, 329, 969, 1137, 330, 331, 1138, 1139,
	332, 333, 334, 0, 335, 336, 338, 340, 337, 339,
	341, 343, 344, 342, 970, 345, 346, 348, 971, 347,
	1140, 218, 972, 349, 1141, 505, 350, 506, 352, 353,
	1142, 354, 355, 356, 1143, 1144, 358, 359, 360, 1145,
	1146, 361, 362, 507, 973, 363, 974, 508, 364, 357,
	365, 366, 367, 368, 369, 370, 371, 1147, 372, 373,
	509, 374, 510, 375, 1148, 376, 0, 377, 378, 379,
	380, 381, 382, 383, 511, 384, 385, 1149, 386, 387,
	388, 389, 390, 0, 392, 393, 394, 391, 395, 396,
	397, 398, 1150, 399, 975, 400, 401, 402, 403, 512,
	404, 0, 405, 409, 410, 411, 412, 413, 414, 415,
	1151, 421, 422, 416, 418, 419, 420, 417, 423, 424,
	425, 1152, 426, 406, 407, 427, 428, 976, 429, 430,
	513, 431, 432, 1153, 433, 434, 435, 436, 408, 437,
	441, 442, 438, 439, 440, 514, 1154, 444, 445, 443,
	1155, 446, 447, 448, 449, 450, 279, 451, 1156, 452,
	515, 516, 517, 518, 1157, 459, 1158, 453, 454, 519,
	455, 520, 1159, 456, 457, 458, 0, 460, 461, 1160,
	1161, 462, 463, 464, 465, 466, 468, 1162, 469, 1163,
	467, 470, 471, 472, 521, 522, 523, 1164, 474, 473,
	524, 1165, 1166, 1167, 1168, 475, 476, 525, 477, 478,
	479, 1084, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 219, 220,
	221, 222, 223, 1091, 224, 1092, 1093, 1094, 0, 1095,
	480, 1096, 1097, 1098, 1099, 225, 227, 226, 228, 229,
	481, 482, 230, 483, 233, 231, 232, 484, 1100, 234,
	235, 236, 237, 238, 239, 1101, 1102, 240, 485, 486,
	487, 1103, 241, 488, 1104, 1089, 1105, 242, 243, 244,
	245, 246, 247, 0, 249, 250, 251, 248, 1106, 252,
	0, 253, 254, 255, 1107, 961, 256, 257, 1108, 1109,
	1111, 1110, 1112, 1113, 1114, 258, 259, 260, 261, 262,
	263, 489, 490, 1115, 264, 1116, 266, 265, 1117, 267,
	1118, 1119, 268, 269, 270, 1120, 271, 1121, 272, 273,
	1122, 274, 491, 275, 276, 278, 280, 277, 281, 282,
	283, 284, 492, 493, 1123, 216, 1124, 0, 0, 0,
	0, 285, 286, 287, 494, 288, 289, 0, 290, 1125,
	291, 1126, 1127, 962, 292, 293, 1128, 294, 495, 1129,
	496, 295, 1130, 296, 297, 298, 299, 497, 498, 499,
	351, 964, 300, 301, 1131, 302, 303, 305, 0, 0,
	217, 304, 306, 313, 1132, 963, 307, 500, 309, 308,
	310, 311, 312, 501, 1133, 502, 1134, 314, 965, 503,
	966, 315, 316, 317, 967, 318, 319, 0, 0, 320,
	321, 322, 323, 324, 1135, 326, 325, 1136, 327, 504,
	968, 328, 329, 969, 1137, 330, 331, 1138, 1139, 332,
	333, 334, 0, 335, 336, 338, 340, 337, 339, 341,
	343, 344, 342, 970, 345, 346, 348, 971, 347, 1140,
	218, 972, 349, 1141, 505, 350, 506, 352, 353, 1142,
	354, 355, 356, 1143, 1144, 358, 359, 360, 1145, 1146,
	361, 362, 507, 973, 363, 974, 508, 364, 357, 365,
	366, 367, 368, 369, 370, 371, 1147, 372, 373, 509,
	374, 510, 375, 1148, 376, 0, 377, 378, 379, 380,
	381, 382, 383, 511, 384, 385, 1149, 386, 387, 388,
	389, 390, 0, 392, 393, 394, 391, 395, 396, 397,
	398, 1150, 399, 975, 400, 401, 402, 403, 512, 404,
	0, 405, 409, 410, 411, 412, 413, 414, 415, 1151,
	421, 422, 416, 418, 419, 420, 417, 423, 424, 425,
	1152, 426, 406, 407, 427, 428, 976, 429, 430, 513,
	431, 432, 1153, 433, 434, 435, 436, 408, 437, 441,
	442, 438, 439, 440, 514, 1154, 444, 445, 443, 1155,
	446, 447, 448, 449, 450, 279, 451, 1156, 452, 515,
	516, 517, 518, 1157, 459, 1158, 453, 454, 519, 455,
	520, 1159, 456, 457, 458, 0, 460, 461, 1160, 1161,
	462, 463, 464, 465, 466, 468, 1162, 469, 1163, 467,
	470, 471, 472, 521, 522, 523, 1164, 474, 473, 524,
	1165, 1166, 1167, 1168, 475, 476, 525, 477, 478, 479,
	2114, 0, 901, 859, 860, 861, 857, 858, 870, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 219,
	220, 221, 222, 223, 2111, 224, 0, 0, 0, 0,
	0, 952, 875, 0, 0, 0, 225, 227, 226, 228,
	229, 481, 916, 895, 927, 233, 885, 926, 925, 0,
	234, 887, 886, 237, 238, 239, 877, 951, 240, 988,
	989, 487, 0, 241, 958, 0, 939, 0, 242, 243,
	244, 245, 246, 247, 0, 249, 250, 251, 248, 0,
	252, 0, 253, 254, 255, 0, 961, 256, 257, 942,
	940, 941, 948, 944, 943, 947, 258, 259, 260, 261,
	930, 263, 923, 922, 848, 264, 0, 266, 265, 0,
	267, 2112, 0, 268, 921, 270, 0, 271, 0, 272,
	273, 0, 274, 854, 275, 276, 278, 280, 277, 281,
	282, 283, 284, 979, 980, 866, 216, 0, 0, 0,
	0, 0, 285, 286, 287, 920, 918, 919, 0, 290,
	0, 291, 0, 0, 962, 292, 293, 0, 294, 986,
	0, 876, 295, 0, 296, 297, 298, 299, 953, 954,
	957, 351, 964, 300, 301, 0, 302, 303, 897, 0,
	0, 217, 304, 306, 313, 0, 963, 307, 909, 900,
	911, 913, 914, 915, 910, 0, 902, 0, 314, 965,
	955, 966, 315, 316, 317, 967, 935, 936, 0, 0,
	320, 321, 322, 323, 324, 0, 326, 325, 0, 327,
	987, 968, 328, 329, 969, 0, 330, 331, 946, 945,
	332, 333, 334, 0, 335, 336, 338, 340, 337, 339,
	341, 343, 889, 342, 970, 345, 346, 348, 971, 347,
	845, 218, 972, 349, 867, 956, 350, 924, 352, 353,
	0, 898, 355, 899, 0, 0, 358, 359, 360, 0,
	0, 361, 362, 507, 973, 363, 974, 981, 364, 357,
	365, 366, 367, 368, 369, 370, 371, 0, 372, 373,
	982, 374, 510, 375, 0, 376, 0, 377, 378, 379,
	380, 381, 382, 383, 917, 384, 385, 0, 386, 387,
	388, 389, 390, 0, 392, 393, 394, 391, 395, 396,
	397, 398, 0, 399, 975, 400, 401, 402, 403, 855,
	404, 0, 405, 409, 410, 411, 412, 413, 414, 415,
	0, 421, 422, 890, 891, 893, 894, 417, 423, 424,
	425, 949, 426, 406, 407, 427, 428, 976, 429, 430,
	912, 892, 432, 0, 433, 434, 435, 436, 408, 437,
	441, 960, 438, 439, 440, 983, 0, 444, 445, 443,
	0, 446, 447, 448, 449, 450, 279, 888, 0, 452,
	931, 932, 933, 934, 0, 459, 0, 453, 454, 984,
	455, 985, 865, 456, 457, 458, 0, 460, 461, 0,
	849, 462, 463, 464, 465, 466, 468, 950, 469, 0,
	896, 470, 471, 472, 521, 928, 978, 2110, 474, 473,
	524, 0, 0, 0, 0, 475, 476, 525, 477, 478,
	479, 846, 0, 0, 0, 0, 0, 844, 0, 0,
	0, 0, 0, 0, 842, 843, 2113, 0, 0, 0,
	0, 0, 0, 871, 2109, 0, 835, 869, 901, 859,
	860, 861, 857, 858, 870, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 219, 220, 221, 222, 223,
	0, 224, 0, 0, 0, 0, 0, 952, 875, 0,
	0, 0, 225, 227, 226, 228, 229, 481, 916, 895,
	927, 233, 885, 926, 925, 0, 234, 887, 886, 237,
	238, 239, 877, 951, 240, 988, 989, 487, 0, 241,
	958, 0, 939, 0, 242, 243, 244, 245, 246, 247,
	0, 249, 250, 251, 248, 0, 252, 0, 253, 254,
	255, 0, 961, 256, 257, 942, 940, 941, 948, 944,
	943, 947, 258, 259, 260, 261, 930, 263, 923, 922,
	848, 264, 0, 266, 265, 0, 267, 0, 0, 268,
	921, 270, 0, 271, 0, 272, 273, 0, 274, 854,
	275, 276, 278, 280, 277, 281, 282, 283, 284, 979,
	980, 866, 216, 0, 0, 0, 0, 0, 285, 286,
	287, 920, 918, 919, 0, 290, 0, 291, 0, 0,
	962, 292, 293, 0, 294, 986, 0, 876, 295, 0,
	296, 297, 298, 299, 953, 954, 957, 351, 964, 300,
	301, 0, 302, 303, 897, 0, 0, 217, 304, 306,
	313, 0, 963, 307, 909, 900, 911, 913, 914, 915,
	910, 0, 902, 0, 314, 965, 955, 966, 315, 316,
	317, 967, 935, 936, 0, 0, 320, 321, 322, 323,
	324, 0, 326, 325, 0, 327, 987, 968, 328, 329,
	969, 0, 330, 331, 946, 945, 332, 333, 334, 0,
	335, 336, 338, 340, 337, 339, 341, 343, 889, 342,
	970, 345, 346, 348, 971, 347, 845, 218, 972, 349,
	867, 956, 350, 924, 352, 353, 0, 898, 355, 899,
	0, 0, 358, 359, 360, 0, 0, 361, 362, 507,
	973, 363, 974, 981, 364, 357, 365, 366, 367, 368,
	369, 370, 371, 0, 372, 373, 982, 374, 510, 375,
	0, 376, 0, 377, 378, 379, 380, 381, 382, 383,
	917, 384, 385, 0, 386, 387, 388, 389, 390, 0,
	392, 393, 394, 391, 395, 396, 397, 398, 0, 399,
	975, 400, 401, 402, 403, 855, 404, 0, 405, 409,
	410, 411, 412, 413, 414, 415, 182, 421, 422, 890,
	891, 893, 894, 417, 423, 424, 425, 949, 426, 406,
	407, 427, 428, 976, 429, 430, 912, 892, 432, 0,
	433, 434, 435, 436, 408, 437, 441, 960, 438, 439,
	440, 983, 0, 444, 445, 443, 184, 446, 447, 448,
	449, 450, 279, 888, 0, 452, 931, 932, 933, 934,
	0, 459, 0, 453, 454, 984, 455, 985, 865, 456,
	457, 458, 0, 460, 461, 0, 849, 462, 463, 464,
	465, 466, 468, 950, 469, 0, 896, 470, 471, 472,
	1336, 928, 978, 0, 474, 473, 524, 0, 0, 0,
	176, 475, 476, 525, 477, 478, 479, 846, 177, 0,
	0, 0, 0, 844, 0, 0, 0, 0, 0, 0,
	842, 843, 901, 859, 860, 861, 857, 858, 870, 1545,
	1543, 0, 0, 869, 0, 0, 0, 0, 0, 219,
	220, 221, 222, 223, 0, 224, 0, 0, 0, 0,
	0, 952, 875, 0, 0, 0, 225, 227, 226, 228,
	229, 481, 916, 895, 927, 233, 885, 926, 925, 0,
	234, 887, 886, 237, 238, 239, 877, 951, 240, 988,
	989, 487, 0, 241, 958, 0, 939, 0, 242, 243,
	244, 245, 246, 247, 0, 249, 250, 251, 248, 0,
	252, 0, 253, 254, 255, 0, 961, 256, 257, 942,
	940, 941, 948, 944, 943, 947, 258, 259, 260, 261,
	930, 263, 923, 922, 848, 264, 0, 266, 265, 0,
	267, 0, 0, 268, 921, 270, 0, 271, 0, 272,
	273, 0, 274, 854, 275, 276, 278, 280, 277, 281,
	282, 283, 284, 979, 980, 866, 216, 0, 0, 0,
	0, 0, 285, 286, 287, 920, 918, 919, 0, 290,
	0, 291, 0, 0, 962, 292, 293, 0, 294, 986,
	0, 876, 295, 0, 296, 297, 298, 299, 953, 954,
	957, 351, 964, 300, 301, 0, 302, 303, 897, 0,
	0, 217, 304, 306, 313, 0, 963, 307, 909, 900,
	911, 913, 914, 915, 910, 0, 902, 0, 314, 965,
	955, 966, 315, 316, 317, 967, 935, 936, 0, 0,
	320, 321, 322, 323, 324, 0, 326, 325, 0, 327,
	987, 968, 328, 329, 969, 0, 330, 331, 946, 945,
	332, 333, 334, 0, 335, 336, 338, 340, 337, 339,
	341, 343, 889, 342, 970, 345, 346, 348, 971, 347,
	845, 218, 972, 349, 867, 956, 350, 924, 352, 353,
	0, 898, 355, 899, 0, 0, 358, 359, 360, 0,
	0, 361, 362, 507, 973, 363, 974, 981, 364, 357,
	365, 366, 367, 368, 369, 370, 371, 0, 372, 373,
	982, 374, 510, 375, 0, 376, 0, 377, 378, 379,
	380, 381, 382, 383, 917, 384, 385, 0, 386, 387,
	388, 389, 390, 0, 392, 393, 394, 391, 395, 396,
	397, 398, 0, 399, 975, 400, 401, 402, 403, 855,
	404, 0, 405, 409, 410, 411, 412, 413, 414, 415,
	182, 421, 422, 890, 891, 893, 894, 417, 423, 424,
	425, 949, 426, 406, 407, 427, 428, 976, 429, 430,
	912, 892, 432, 0, 433, 434, 435, 436, 408, 437,
	441, 960, 438, 439, 440, 983, 0, 444, 445, 443,
	184, 446, 447, 448, 449, 450, 279, 888, 0, 452,
	931, 932, 933, 934, 0, 459, 0, 453, 454, 984,
	455, 985, 865, 456, 457, 458, 0, 460, 461, 0,
	849, 462, 463, 464, 465, 466, 468, 950, 469, 0,
	896, 470, 471, 472, 1336, 928, 978, 0, 474, 473,
	524, 0, 0, 0, 176, 475, 476, 525, 477, 478,
	479, 846, 177, 0, 0, 0, 0, 844, 0, 0,
	0, 0, 0, 0, 842, 843, 901, 859, 860, 861,
	857, 858, 870, 1545, 2576, 0, 0, 869, 0, 0,
	0, 0, 0, 219, 220, 221, 222, 223, 0, 224,
	0, 0, 0, 0, 0, 952, 875, 0, 0, 0,
	225, 227, 226, 228, 229, 481, 916, 895, 927, 233,
	885, 926, 925, 0, 234, 887, 886, 237, 238, 239,
	877, 951, 240, 988, 989, 487, 0, 241, 958, 0,
	939, 0, 242, 243, 244, 245, 246, 247, 0, 249,
	250, 251, 248, 0, 252, 0, 253, 254, 255, 0,
	961, 256, 257, 942, 940, 941, 948, 944, 943, 947,
	258, 259, 260, 261, 930, 263, 923, 922, 848, 264,
	0, 266, 265, 0, 267, 0, 0, 268, 921, 270,
	0, 271, 0, 272, 273, 0, 274, 854, 275, 276,
	278, 280, 277, 281, 282, 283, 284, 979, 980, 866,
	216, 0, 0, 0, 0, 0, 285, 286, 287, 920,
	918, 919, 0, 290, 0, 291, 0, 0, 962, 292,
	293, 0, 294, 986, 0, 876, 295, 0, 296, 297,
	298, 299, 953, 954, 957, 351, 964, 300, 301, 0,
	302, 303, 897, 0, 0, 217, 304, 306, 313, 0,
	963, 307, 909, 900, 911, 913, 914, 915, 910, 0,
	902, 0, 314, 965, 955, 966, 315, 316, 317, 967,
	935, 936, 0, 0, 320, 321, 322, 323, 324, 0,
	326, 325, 0, 327, 987, 968, 328, 329, 969, 0,
	330, 331, 946, 945, 332, 333, 334, 0, 335, 336,
	338, 340, 337, 339, 341, 343, 889, 342, 970, 345,
	346, 348, 971, 347, 845, 218, 972, 349, 867, 956,
	350, 924, 352, 353, 0, 898, 355, 899, 0, 0,
	358, 359, 360, 0, 0, 361, 362, 507, 973, 363,
	974, 981, 364, 357, 365, 366, 367, 368, 369, 370,
	371, 0, 372, 373, 982, 374, 510, 375, 0, 376,
	0, 377, 378, 379, 380, 381, 382, 383, 917, 384,
	385, 0, 386, 387, 388, 389, 390, 0, 392, 393,
	394, 391, 395, 396, 397, 398, 0, 399, 975, 400,
	401, 402, 403, 855, 404, 0, 405, 409, 410, 411,
	412, 413, 414, 415, 182, 421, 422, 890, 891, 893,
	894, 417, 423, 424, 425, 949, 426, 406, 407, 427,
	428, 976, 429, 430, 912, 892, 432, 0, 433, 434,
	435, 436, 408, 437, 441, 960, 438, 439, 440, 983,
	0, 444, 445, 443, 184, 446, 447, 448, 449, 450,
	279, 888, 0, 452, 931, 932, 933, 934, 0, 459,
	0, 453, 454, 984, 455, 985, 865, 456, 457, 458,
	0, 460, 461, 0, 849, 462, 463, 464, 465, 466,
	468, 950, 469, 0, 896, 470, 471, 472, 1336, 928,
	978, 0, 474, 473, 524, 0, 0, 0, 176, 475,
	476, 525, 477, 478, 479, 846, 177, 0, 0, 0,
	0, 844, 0, 0, 0, 0, 0, 0, 842, 843,
	901, 859, 860, 861, 857, 858, 870, 1545, 1543, 0,
	0, 869, 0, 0, 0, 0, 0, 219, 220, 221,
	222, 223, 0, 224, 0, 0, 0, 0, 0, 952,
	875, 0, 0, 0, 225, 227, 226, 228, 229, 481,
	916, 895, 927, 233, 885, 926, 925, 2208, 234, 887,
	886, 237, 238, 239, 877, 951, 240, 988, 989, 487,
	0, 241, 958, 0, 939, 0, 242, 243, 244, 245,
	246, 247, 0, 249, 250, 251, 248, 0, 252, 0,
	253, 254, 255, 0, 961, 256, 257, 942, 940, 941,
	948, 944, 943, 947, 258, 259, 260, 261, 930, 263,
	923, 922, 848, 264, 0, 266, 265, 0, 267, 0,
	0, 268, 921, 270, 0, 271, 0, 272, 273, 0,
	274, 854, 275, 276, 278, 280, 277, 281, 282, 283,
	284, 979, 980, 866, 216, 0, 0, 0, 0, 0,
	285, 286, 287, 920, 918, 919, 0, 290, 0, 291,
	0, 2213, 962, 292, 293, 0, 294, 986, 0, 876,
	295, 0, 296, 297, 298, 299, 953, 954, 957, 351,
	964, 300, 301, 0, 302, 303, 897, 0, 0, 217,
	304, 306, 313, 0, 963, 307, 909, 900, 911, 913,
	914, 915, 910, 0, 902, 0, 314, 965, 955, 966,
	315, 316, 317, 967, 935, 936, 0, 0, 320, 321,
	322, 323, 324, 0, 326, 325, 2209, 327, 987, 968,
	328, 329, 969, 0, 330, 331, 946, 945, 332, 333,
	334, 0, 335, 336, 338, 340, 337, 339, 341, 343,
	889, 342, 970, 345, 346, 348, 971, 347, 845, 218,
	972, 349, 867, 956, 350, 924, 352, 353, 0, 898,
	355, 899, 0, 0, 358, 359, 360, 0, 0, 361,
	362, 507, 973, 363, 974, 981, 364, 357, 365, 366,
	367, 368, 369, 370, 371, 0, 372, 373, 982, 374,
	510, 375, 0, 376, 0, 377, 378, 379, 380, 381,
	382, 383, 917, 384, 385, 0, 386, 387, 388, 389,
	390, 0, 392, 393, 394, 391, 395, 396, 397, 398,
	0, 399, 975, 400, 401, 402, 403, 855, 404, 0,
	405, 409, 410, 411, 412, 413, 414, 415, 0, 421,
	422, 890, 891, 893, 894, 417, 423, 424, 425, 949,
	426, 406, 407, 427, 428, 976, 429, 430, 912, 892,
	432, 0, 433, 434, 435, 436, 408, 437, 441, 960,
	438, 439, 440, 983, 0, 444, 445, 443, 0, 446,
	447, 448, 449, 450, 279, 888, 0, 452, 931, 932,
	933, 934, 0, 459, 2210, 453, 454, 984, 455, 985,
	865, 456, 457, 458, 0, 460, 461, 0, 849, 462,
	463, 464, 465, 466, 468, 950, 469, 0, 896, 470,
	471, 472, 521, 928, 978, 0, 474, 473, 524, 0,
	0, 0, 0, 475, 476, 525, 477, 478, 479, 846,
	0, 0, 0, 0, 0, 844, 0, 0, 0, 0,
	0, 0, 842, 843, 0, 0, 0, 0, 0, 0,
	0, 871, 0, 0, 2167, 869, 901, 859, 860, 861,
	857, 858, 870, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 219, 220, 221, 222, 223, 0, 224,
	0, 0, 0, 0, 0, 952, 875, 0, 0, 0,
	225, 227, 226, 228, 229, 481, 916, 895, 927, 233,
	885, 926, 925, 0, 234, 887, 886, 237, 238, 239,
	877, 951, 240, 988, 989, 487, 0, 241, 958, 0,
	939, 0, 242, 243, 244, 245, 246, 247, 0, 249,
	250, 251, 248, 0, 252, 0, 253, 254, 255, 0,
	961, 256, 257, 942, 940, 941, 948, 944, 943, 947,
	258, 259, 260, 261, 930, 263, 923, 922, 848, 264,
	0, 266, 265, 0, 267, 0, 0, 268, 921, 270,
	0, 271, 0, 272, 273, 0, 274, 854, 275, 276,
	278, 280, 277, 281, 282, 283, 284, 979, 980, 866,
	216, 0, 0, 0, 0, 0, 285, 286, 287, 920,
	918, 919, 0, 290, 0, 291, 0, 0, 962, 292,
	293, 0, 294, 986, 0, 876, 295, 0, 296, 297,
	298, 299, 953, 954, 957, 351, 964, 300, 301, 0,
	302, 303, 897, 0, 0, 217, 304, 306, 313, 0,
	963, 307, 909, 900, 911, 913, 914, 915, 910, 0,
	902, 0, 314, 965, 955, 966, 315, 316, 317, 967,
	935, 936, 0, 0, 320, 321, 322, 323, 324, 0,
	326, 325, 0, 327, 987, 968, 328, 329, 969, 0,
	330, 331, 946, 945, 332, 333, 334, 0, 335, 336,
	338, 340, 337, 339, 341, 343, 889, 342, 970, 345,
	346, 348, 971, 347, 845, 218, 972, 349, 867, 956,
	350, 924, 352, 353, 0, 898, 355, 899, 0, 0,
	358, 359, 360, 0, 0, 361, 362, 507, 973, 363,
	974, 981, 364, 357, 365, 366, 367, 368, 369, 370,
	371, 0, 372, 373, 982, 374, 510, 375, 0, 376,
	0, 377, 378, 379, 380, 381, 382, 383, 917, 384,
	385, 0, 386, 387, 388, 389, 390, 0, 392, 393,
	394, 391, 395, 396, 397, 398, 0, 399, 975, 400,
	401, 402, 403, 855, 404, 0, 405, 409, 410, 411,
	412, 413, 414, 415, 0, 421, 422, 890, 891, 893,
	894, 417, 423, 424, 425, 949, 426, 406, 407, 427,
	428, 976, 429, 430, 912, 892, 432, 0, 433, 434,
	435, 436, 408, 437, 441, 960, 438, 439, 440, 983,
	0, 444, 445, 443, 0, 446, 447, 448, 449, 450,
	279, 888, 0, 452, 931, 932, 933, 934, 0, 459,
	0, 453, 454, 984, 455, 985, 865, 456, 457, 458,
	0, 460, 461, 0, 849, 462, 463, 464, 465, 466,
	468, 950, 469, 0, 896, 470, 471, 472, 521, 928,
	978, 0, 474, 473, 524, 0, 0, 0, 0, 475,
	476, 525, 477, 478, 479, 846, 0, 0, 0, 0,
	0, 844, 0, 0, 0, 0, 0, 0, 842, 843,
	0, 0, 0, 0, 0, 0, 0, 871, 2165, 0,
	2164, 869, 901, 859, 860, 861, 857, 858, 870, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 219,
	220, 221, 222, 223, 0, 224, 0, 0, 0, 0,
	0, 952, 875, 0, 0, 0, 225, 227, 226, 228,
	229, 481, 916, 895, 927, 233, 885, 926, 925, 0,
	234, 887, 886, 237, 238, 239, 877, 951, 240, 988,
	989, 487, 0, 241, 958, 0, 939, 0, 242, 243,
	244, 245, 246, 247, 0, 249, 250, 251, 248, 0,
	252, 0, 253, 254, 255, 0, 961, 256, 257, 942,
	940, 941, 948, 944, 943, 947, 258, 259, 260, 261,
	930, 263, 923, 922, 848, 264, 0, 266, 265, 0,
	267, 0, 0, 268, 921, 270, 0, 271, 0, 272,
	273, 0, 274, 854, 275, 276, 278, 280, 277, 281,
	282, 283, 284, 979, 980, 866, 216, 0, 0, 0,
	0, 0, 285, 286, 287, 920, 918, 919, 0, 290,
	0, 291, 0, 0, 962, 292, 293, 0, 294, 986,
	0, 876, 295, 0, 296, 297, 298, 299, 953, 954,
	957, 351, 964, 300, 301, 0, 302, 303, 897, 0,
	0, 217, 304, 306, 313, 0, 963, 307, 909, 900,
	911, 913, 914, 915, 910, 0, 902, 0, 314, 965,
	955, 966, 315, 316, 317, 967, 935, 936, 0, 0,
	320, 321, 322, 323, 324, 0, 326, 325, 0, 327,
	987, 968, 328, 329, 969, 0, 330, 331, 946, 945,
	332, 333, 334, 0, 335, 336, 338, 340, 337, 339,
	341, 343, 889, 342, 970, 345, 346, 348, 971, 347,
	845, 218, 972, 349, 867, 956, 350, 924, 352, 353,
	0, 898, 355, 899, 0, 0, 358, 359, 360, 0,
	0, 361, 362, 507, 973, 363, 974, 981, 364, 357,
	365, 366, 367, 368, 369, 370, 371, 0, 372, 373,
	982, 374, 510, 375, 0, 376, 0, 377, 378, 379,
	380, 381, 382, 383, 917, 384, 385, 0, 386, 387,
	388, 389, 390, 0, 392, 393, 394, 391, 395, 396,
	397, 398, 0, 399, 975, 400, 401, 402, 403, 855,
	404, 0, 405, 409, 410, 411, 412, 413, 414, 415,
	0, 421, 422, 890, 891, 893, 894, 417, 423, 424,
	425, 949, 426, 406, 407, 427, 428, 976, 429, 430,
	912, 892, 432, 0, 433, 434, 435, 436, 408, 437,
	441, 960, 438, 439, 440, 983, 0, 444, 445, 443,
	0, 446, 447, 448, 449, 450, 279, 888, 0, 452,
	931, 932, 933, 934, 0, 459, 0, 453, 454, 984,
	455, 985, 865, 456, 457, 458, 0, 460, 461, 0,
	849, 462, 463, 464, 465, 466, 468, 950, 469, 0,
	896, 470, 471, 472, 521, 928, 978, 0, 474, 473,
	524, 0, 0, 0, 0, 475, 476, 525, 477, 478,
	479, 846, 0, 0, 0, 0, 0, 844, 0, 0,
	0, 0, 0, 0, 842, 843, 0, 0, 0, 0,
	0, 0, 0, 871, 2162, 0, 2161, 869, 901, 859,
	860, 861, 857, 858, 870, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 219, 220, 221, 222, 223,
	0, 224, 0, 0, 0, 0, 0, 952, 875, 0,
	0, 0, 225, 227, 226, 228, 229, 481, 916, 895,
	927, 233, 885, 926, 925, 0, 234, 887, 886, 237,
	238, 239, 877, 951, 240, 988, 989, 487, 0, 241,
	958, 0, 939, 0, 242, 243, 244, 245, 246, 247,
	0, 249, 250, 251, 248, 0, 252, 0, 253, 254,
	255, 0, 961, 256, 257, 942, 940, 941, 948, 944,
	943, 947, 258, 259, 260, 261, 930, 263, 923, 922,
	848, 264, 0, 266, 265, 0, 267, 0, 0, 268,
	921, 270, 0, 271, 0, 272, 273, 0, 274, 854,
	275, 276, 278, 280, 277, 281, 282, 283, 284, 979,
	980, 866, 216, 0, 0, 0, 0, 0, 285, 286,
	287, 920, 918, 919, 0, 290, 0, 291, 0, 0,
	962, 292, 293, 0, 294, 986, 0, 876, 295, 0,
	296, 297, 298, 299, 953, 954, 957, 351, 964, 300,
	301, 0, 302, 303, 897, 0, 0, 217, 304, 306,
	313, 0, 963, 307, 909, 900, 911, 913, 914, 915,
	910, 0, 902, 0, 314, 965, 955, 966, 315, 316,
	317, 967, 935, 936, 0, 0, 320, 321, 322, 323,
	324, 0, 326, 325, 0, 327, 987, 968, 328, 329,
	969, 0, 330, 331, 946, 945, 332, 333, 334, 0,
	335, 336, 338, 340, 337, 339, 341, 343, 889, 342,
	970, 345, 346, 348, 971, 347, 845, 218, 972, 349,
	867, 956, 350, 924, 352, 353, 0, 898, 355, 899,
	0, 0, 358, 359, 360, 0, 0, 361, 362, 507,
	973, 363, 974, 981, 364, 357, 365, 366, 367, 368,
	369, 370, 371, 0, 372, 373, 982, 374, 510, 375,
	0, 376, 0, 377, 378, 379, 380, 381, 382, 383,
	917, 384, 385, 0, 386, 387, 388, 389, 390, 0,
	392, 393, 394, 391, 395, 396, 397, 398, 0, 399,
	975, 400, 401, 402, 403, 855, 404, 0, 405, 409,
	410, 411, 412, 413, 414, 415, 0, 421, 422, 890,
	891, 893, 894, 417, 423, 424, 425, 949, 426, 406,
	407, 427, 428, 976, 429, 430, 912, 892, 432, 0,
	433, 434, 435, 436, 408, 437, 441, 960, 438, 439,
	440, 983, 0, 444, 445, 443, 0, 446, 447, 448,
	449, 450, 279, 888, 0, 452, 931, 932, 933, 934,
	0, 459, 0, 453, 454, 984, 455, 985, 865, 456,
	457, 458, 0, 460, 461, 0, 849, 462, 463, 464,
	465, 466, 468, 950, 469, 0, 896, 470, 471, 472,
	521, 928, 978, 0, 474, 473, 524, 0, 0, 0,
	0, 475, 476, 525, 477, 478, 479, 846, 0, 0,
	0, 0, 0, 844, 0, 0, 0, 0, 0, 0,
	842, 843, 0, 0, 0, 0, 0, 0, 0, 871,
	2159, 0, 2158, 869, 901, 859, 860, 861, 857, 858,
	870, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 219, 220, 221, 222, 223, 0, 224, 0, 0,
	0, 0, 0, 952, 875, 0, 0, 0, 225, 227,
	226, 228, 229, 481, 916, 895, 927, 233, 885, 926,
	925, 0, 234, 887, 886, 237, 238, 239, 877, 951,
	240, 988, 989, 487, 0, 241, 958, 0, 939, 0,
	242, 243, 244, 245, 246, 247, 0, 249, 250, 251,
	248, 0, 252, 0, 253, 254, 255, 0, 961, 256,
	257, 942, 940, 941, 948, 944, 943, 947, 258, 259,
	260, 261, 930, 263, 923, 922, 848, 264, 0, 266,
	265, 0, 267, 0, 0, 268, 921, 270, 0, 271,
	0, 272, 273, 0, 274, 854, 275, 276, 278, 280,
	277, 281, 282, 283, 284, 979, 980, 866, 216, 0,
	0, 0, 0, 0, 285, 286, 287, 920, 918, 919,
	0, 290, 0, 291, 0, 0, 962, 292, 293, 0,
	294, 986, 0, 876, 295, 0, 296, 297, 298, 299,
	953, 954, 957, 351, 964, 300, 301, 0, 302, 303,
	897, 0, 0, 217, 304, 306, 313, 0, 963, 307,
	909, 900, 911, 913, 914, 915, 910, 0, 902, 0,
	314, 965, 955, 966, 315, 316, 317, 967, 935, 936,
	0, 0, 320, 321, 322, 323, 324, 0, 326, 325,
	0, 327, 987, 968, 328, 329, 969, 0, 330, 331,
	946, 945, 332, 333, 334, 0, 335, 336, 338, 340,
	337, 339, 341, 343, 889, 342, 970, 345, 346, 348,
	971, 347, 845, 218, 972, 349, 867, 956, 350, 924,
	352, 353, 0, 898, 355, 899, 0, 0, 358, 359,
	360, 0, 0, 361, 362, 507, 973, 363, 974, 981,
	364, 357, 365, 366, 367, 368, 369, 370, 371, 0,
	372, 373, 982, 374, 510, 375, 0, 376, 0, 377,
	378, 379, 380, 381, 382, 383, 917, 384, 385, 0,
	386, 387, 388, 389, 390, 0, 392, 393, 394, 391,
	395, 396, 397, 398, 0, 399, 975, 400, 401, 402,
	403, 855, 404, 0, 405, 409, 410, 411, 412, 413,
	414, 415, 0, 421, 422, 890, 891, 893, 894, 417,
	423, 424, 425, 949, 426, 406, 407, 427, 428, 976,
	429, 430, 912, 892, 432, 0, 433, 434, 435, 436,
	408, 437, 441, 960, 438, 439, 440, 983, 0, 444,
	445, 443, 0, 446, 447, 448, 449, 450, 279, 888,
	0, 452, 931, 932, 933, 934, 0, 459, 0, 453,
	454, 984, 455, 985, 865, 456, 457, 458, 0, 460,
	461, 0, 849, 462, 463, 464, 465, 466, 468, 950,
	469, 0, 896, 470, 471, 472, 521, 928, 978, 0,
	474, 473, 524, 0, 0, 0, 0, 475, 476, 525,
	477, 478, 479, 846, 0, 0, 0, 0, 0, 844,
	0, 0, 0, 0, 0, 0, 842, 843, 0, 0,
	0, 0, 0, 0, 0, 871, 2156, 0, 1405, 869,
	901, 859, 860, 861, 857, 858, 870, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 219, 220, 221,
	222, 223, 0, 224, 0, 0, 0, 0, 0, 952,
	875, 0, 0, 0, 225, 227, 226, 228, 229, 481,
	916, 895, 927, 233, 885, 926, 925, 0, 234, 887,
	886, 237, 238, 239, 877, 951, 240, 988, 989, 487,
	0, 241, 958, 0, 939, 0, 242, 243, 244, 245,
	246, 247, 0, 249, 250, 251, 248, 0, 252, 0,
	253, 254, 255, 0, 961, 256, 257, 942, 940, 941,
	948, 944, 943, 947, 258, 259, 260, 261, 930, 263,
	923, 922, 848, 264, 0, 266, 265, 0, 267, 0,
	0, 268, 921, 270, 0, 271, 0, 272, 273, 0,
	274, 854, 275, 276, 278, 280, 277, 281, 282, 283,
	284, 979, 980, 866, 216, 0, 0, 0, 0, 0,
	285, 286, 287, 920, 918, 919, 0, 290, 0, 291,
	0, 0, 962, 292, 293, 0, 294, 986, 0, 876,
	295, 0, 296, 297, 298, 299, 953, 954, 957, 351,
	964, 300, 301, 0, 302, 303, 897, 0, 0, 217,
	304, 306, 313, 0, 963, 307, 909, 900, 911, 913,
	914, 915, 910, 0, 902, 0, 314, 965, 955, 966,
	315, 316, 317, 967, 935, 936, 0, 0, 320, 321,
	322, 323, 324, 0, 326, 325, 0, 327, 987, 968,
	328, 329, 969, 0, 330, 331, 946, 945, 332, 333,
	334, 0, 335, 336, 338, 340, 337, 339, 341, 343,
	889, 342, 970, 345, 346, 348, 971, 347, 845, 218,
	972, 349, 867, 956, 350, 924, 352, 353, 0, 898,
	355, 899, 0, 0, 358, 359, 360, 0, 0, 361,
	362, 507, 973, 363, 974, 981, 364, 357, 365, 366,
	367, 368, 369, 370, 371, 0, 372, 373, 982, 374,
	510, 375, 0, 376, 0, 377, 378, 379, 380, 381,
	382, 383, 917, 384, 385, 0, 386, 387, 388, 389,
	390, 0, 392, 393, 394, 391, 395, 396, 397, 398,
	0, 399, 975, 400, 401, 402, 403, 855, 404, 0,
	405, 409, 410, 411, 412, 413, 414, 415, 0, 421,
	422, 890, 891, 893, 894, 417, 423, 424, 425, 949,
	426, 406, 407, 427, 428, 976, 429, 430, 912, 892,
	432, 0, 433, 434, 435, 436, 408, 437, 441, 960,
	438, 439, 440, 983, 0, 444, 445, 443, 0, 446,
	447, 448, 449, 450, 279, 888, 0, 452, 931, 932,
	933, 934, 0, 459, 0, 453, 454, 984, 455, 985,
	865, 456, 457, 458, 0, 460, 461, 0, 849, 462,
	463, 464, 465, 466, 468, 950, 469, 0, 896, 470,
	471, 472, 521, 928, 978, 0, 474, 473, 524, 1404,
	0, 0, 0, 475, 476, 525, 477, 478, 479, 846,
	0, 0, 0, 0, 0, 844, 0, 0, 0, 0,
	0, 0, 842, 843, 0, 0, 0, 0, 0, 0,
	0, 871, 0, 0, 838, 869, 901, 859, 860, 861,
	857, 858, 870, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 219, 220, 221, 222, 223, 0, 224,
	0, 0, 0, 0, 0, 952, 875, 0, 0, 0,
	225, 227, 226, 228, 229, 481, 916, 895, 927, 233,
	885, 926, 925, 0, 234, 887, 886, 237, 238, 239,
	877, 951, 240, 988, 989, 487, 0, 241, 958, 0,
	939, 0, 242, 243, 244, 245, 246, 247, 0, 249,
	250, 251, 248, 0, 252, 0, 253, 254, 255, 0,
	961, 256, 257, 942, 940, 941, 948, 944, 943, 947,
	258, 259, 260, 261, 930, 263, 923, 922, 848, 264,
	0, 266, 265, 0, 267, 0, 0, 268, 921, 270,
	0, 271, 0, 272, 273, 0, 274, 854, 275, 276,
	278, 280, 277, 281, 282, 283, 284, 979, 980, 866,
	216, 0, 0, 0, 0, 0, 285, 286, 287, 920,
	918, 919, 0, 290, 0, 291, 0, 0, 962, 292,
	293, 0, 294, 986, 0, 876, 295, 0, 296, 297,
	298, 299, 953, 954, 957, 351, 964, 300, 301, 0,
	302, 303, 897, 0, 0, 217, 304, 306, 313, 0,
	963, 307, 909, 900, 911, 913, 914, 915, 910, 0,
	902, 0, 314, 965, 955, 966, 315, 316, 317, 967,
	935, 936, 0, 0, 320, 321, 322, 323, 324, 0,
	326, 325, 0, 327, 987, 968, 328, 329, 969, 0,
	330, 331, 946, 945, 332, 333, 334, 0, 335, 336,
	338, 340, 337, 339, 341, 343, 889, 342, 970, 345,
	346, 348, 971, 347, 845, 218, 972, 349, 867, 956,
	350, 924, 352, 353, 0, 898, 355, 899, 850, 0,
	358, 359, 360, 0, 0, 361, 362, 507, 973, 363,
	974, 981, 364, 357, 365, 366, 367, 368, 369, 370,
	371, 0, 372, 373, 982, 374, 510, 375, 0, 376,
	0, 377, 378, 379, 380, 381, 382, 383, 917, 384,
	385, 0, 386, 387, 388, 389, 390, 0, 392, 393,
	394, 391, 395, 396, 397, 398, 0, 399, 975, 400,
	401, 402, 403, 855, 404, 0, 405, 409, 410, 411,
	412, 413, 414, 415, 0, 421, 422, 890, 891, 893,
	894, 417, 423, 424, 425, 949, 426, 406, 407, 427,
	428, 976, 429, 430, 912, 892, 432, 0, 433, 434,
	435, 436, 408, 437, 441, 960, 438, 439, 440, 983,
	0, 444, 445, 443, 0, 446, 447, 448, 449, 450,
	279, 888, 0, 452, 931, 932, 933, 934, 0, 459,
	0, 453, 454, 984, 455, 985, 865, 456, 457, 458,
	0, 460, 461, 0, 849, 462, 463, 464, 465, 466,
	468, 950, 469, 0, 896, 470, 471, 472, 521, 928,
	978, 0, 474, 473, 524, 0, 0, 0, 0, 475,
	476, 525, 477, 478, 479, 846, 0, 0, 0, 0,
	0, 844, 0, 0, 0, 0, 0, 0, 842, 843,
	901, 859, 860, 861, 857, 858, 870, 871, 0, 0,
	0, 869, 0, 0, 0, 0, 0, 219, 220, 221,
	222, 223, 0, 224, 0, 0, 0, 0, 0, 952,
	875, 0, 0, 0, 225, 227, 226, 228, 229, 481,
	916, 895, 927, 233, 885, 926, 925, 0, 234, 887,
	886, 237, 238, 239, 877, 951, 240, 988, 989, 487,
	0, 241, 958, 0, 939, 0, 242, 243, 244, 245,
	246, 247, 0, 249, 250, 251, 248, 0, 252, 0,
	253, 3594, 255, 0, 961, 256, 257, 942, 940, 941,
	948, 944, 943, 947, 258, 259, 260, 261, 930, 263,
	923, 922, 848, 264, 0, 266, 265, 0, 267, 0,
	0, 268, 921, 270, 0, 271, 0, 272, 273, 0,
	274, 854, 275, 276, 278, 280, 277, 281, 282, 283,
	284, 979, 980, 866, 216, 0, 0, 0, 0, 0,
	285, 286, 287, 920, 918, 919, 0, 290, 0, 291,
	0, 0, 962, 292, 293, 0, 294, 986, 0, 876,
	295, 0, 296, 297, 298, 299, 953, 954, 957, 351,
	964, 300, 301, 0, 302, 303, 897, 0, 0, 217,
	304, 306, 313, 0, 963, 307, 909, 900, 911, 913,
	914, 915, 910, 0, 902, 0, 314, 965, 955, 966,
	315, 316, 317, 967, 935, 936, 0, 0, 320, 321,
	322, 323, 324, 0, 326, 325, 0, 327, 987, 968,
	328, 329, 969, 0, 330, 331, 946, 945, 332, 333,
	334, 0, 335, 336, 338, 340, 337, 339, 341, 343,
	889, 342, 970, 345, 346, 348, 971, 347, 845, 218,
	972, 349, 867, 956, 350, 924, 352, 353, 0, 898,
	355, 899, 850, 0, 358, 359, 360, 0, 0, 361,
	362, 507, 973, 363, 974, 981, 364, 357, 365, 366,
	367, 368, 369, 370, 371, 0, 372, 373, 982, 374,
	510, 375, 0, 376, 0, 377, 378, 379, 380, 381,
	382, 383, 917, 384, 385, 0, 386, 387, 388, 389,
	390, 0, 392, 393, 394, 391, 395, 396, 397, 398,
	0, 399, 975, 400, 401, 402, 403, 855, 404, 0,
	405, 409, 410, 411, 412, 413, 414, 415, 0, 421,
	422, 890, 891, 893, 894, 417, 423, 424, 425, 949,
	426, 406, 407, 427, 428, 976, 429, 430, 912, 892,
	432, 0, 433, 434, 435, 436, 408, 437, 441, 960,
	438, 439, 440, 983, 0, 444, 445, 443, 0, 446,
	447, 448, 449, 450, 279, 888, 0, 452, 931, 932,
	933, 934, 0, 459, 0, 453, 454, 984, 455, 985,
	865, 456, 457, 458, 0, 460, 461, 0, 849, 462,
	463, 464, 465, 466, 468, 950, 469, 0, 896, 470,
	471, 472, 521, 928, 978, 0, 474, 473, 524, 0,
	0, 0, 0, 475, 476, 525, 477, 478, 479, 846,
	0, 0, 0, 0, 0, 844, 0, 0, 0, 0,
	0, 0, 842, 843, 901, 859, 860, 861, 857, 858,
	870, 871, 0, 0, 0, 869, 0, 0, 0, 0,
	0, 219, 220, 221, 222, 223, 0, 224, 0, 0,
	0, 0, 0, 952, 875, 0, 0, 0, 225, 227,
	226, 228, 229, 481, 916, 895, 927, 233, 885, 926,
	925, 0, 234, 887, 886, 237, 238, 239, 877, 951,
	240, 988, 989, 487, 0, 241, 958, 0, 939, 0,
	242, 243, 244, 245, 246, 247, 0, 249, 250, 251,
	248, 0, 252, 0, 253, 3431, 255, 0, 961, 256,
	257, 942, 940, 941, 948, 944, 943, 947, 258, 259,
	260, 261, 930, 263, 923, 922, 848, 264, 0, 266,
	265, 0, 267, 0, 0, 268, 921, 270, 0, 271,
	0, 272, 273, 0, 274, 854, 275, 276, 278, 280,
	277, 281, 282, 283, 284, 979, 980, 866, 216, 0,
	0, 0, 0, 0, 285, 286, 287, 920, 918, 919,
	0, 290, 0, 291, 0, 0, 962, 292, 293, 0,
	294, 986, 0, 876, 295, 0, 296, 297, 298, 299,
	953, 954, 957, 351, 964, 300, 301, 0, 302, 303,
	897, 0, 0, 217, 304, 306, 313, 0, 963, 307,
	909, 900, 911, 913, 914, 915, 910, 0, 902, 0,
	314, 965, 955, 966, 315, 316, 317, 967, 935, 936,
	0, 0, 320, 321, 322, 323, 324, 0, 326, 325,
	0, 327, 987, 968, 328, 329, 969, 0, 330, 331,
	946, 945, 332, 333, 334, 0, 335, 336, 338, 340,
	337, 339, 341, 343, 889, 342, 970, 345, 346, 348,
	971, 347, 845, 218, 972, 349, 867, 956, 350, 924,
	352, 353, 0, 898, 355, 899, 850, 0, 358, 359,
	360, 0, 0, 361, 362, 507, 973, 363, 974, 981,
	364, 357, 365, 366, 367, 368, 369, 370, 371, 0,
	372, 373, 982, 374, 510, 375, 0, 376, 0, 377,
	378, 379, 380, 381, 382, 383, 917, 384, 385, 0,
	386, 387, 388, 389, 390, 0, 392, 393, 394, 391,
	395, 396, 397, 398, 0, 399, 975, 400, 401, 402,
	403, 855, 404, 0, 405, 409, 410, 411, 412, 413,
	414, 415, 0, 421, 422, 890, 891, 893, 894, 417,
	423, 424, 425, 949, 426, 406, 407, 427, 428, 976,
	429, 430, 912, 892, 432, 0, 433, 434, 435, 436,
	408, 437, 441, 960, 438, 439, 440, 983, 0, 444,
	445, 443, 0, 446, 447, 448, 449, 450, 279, 888,
	0, 452, 931, 932, 933, 934, 0, 459, 0, 453,
	454, 984, 455, 985, 865, 456, 457, 458, 0, 460,
	461, 0, 849, 462, 463, 464, 465, 466, 468, 950,
	469, 0, 896, 470, 471, 472, 521, 928, 978, 0,
	474, 473, 524, 0, 0, 0, 0, 475, 476, 525,
	477, 478, 479, 846, 0, 0, 0, 0, 0, 844,
	0, 0, 0, 0, 0, 0, 842, 843, 901, 859,
	860, 861, 857, 858, 870, 871, 0, 0, 0, 869,
	0, 0, 0, 0, 0, 219, 220, 221, 222, 223,
	0, 224, 0, 0, 0, 0, 0, 952, 875, 0,
	0, 0, 225, 227, 226, 228, 229, 481, 916, 895,
	927, 233, 885, 926, 925, 0, 234, 887, 886, 237,
	238, 239, 877, 951, 240, 988, 989, 487, 0, 241,
	958, 0, 939, 0, 242, 243, 244, 245, 246, 247,
	0, 249, 250, 251, 248, 0, 252, 0, 253, 254,
	255, 0, 961, 256, 257, 942, 940, 941, 948, 944,
	943, 947, 258, 259, 260, 261, 930, 263, 923, 922,
	848, 264, 0, 266, 265, 0, 267, 0, 0, 268,
	921, 270, 0, 271, 0, 272, 273, 0, 274, 854,
	275, 276, 278, 280, 277, 281, 282, 283, 284, 979,
	980, 866, 216, 0, 0, 0, 0, 0, 285, 286,
	287, 920, 918, 919, 0, 290, 0, 291, 0, 0,
	962, 292, 293, 0, 294, 986, 0, 876, 295, 0,
	296, 297, 298, 299, 953, 954, 957, 351, 964, 300,
	301, 0, 302, 303, 897, 0, 0, 217, 304, 306,
	313, 0, 963, 307, 909, 900, 911, 913, 914, 915,
	910, 0, 902, 0, 314, 965, 955, 966, 315, 316,
	317, 967, 935, 936, 0, 0, 320, 321, 322, 323,
	324, 0, 326, 325, 0, 327, 987, 968, 328, 329,
	969, 0, 330, 331, 946, 945, 332, 333, 334, 0,
	335, 336, 338, 340, 337, 339, 341, 343, 889, 342,
	970, 345, 346, 348, 971, 347, 845, 3150, 972, 349,
	867, 956, 350, 924, 352, 353, 0, 898, 355, 899,
	0, 0, 358, 359, 360, 0, 0, 361, 362, 507,
	973, 363, 974, 981, 364, 357, 365, 366, 367, 368,
	369, 370, 371, 0, 372, 373, 982, 374, 510, 375,
	0, 376, 0, 377, 378, 379, 380, 381, 382, 383,
	917, 384, 385, 0, 386, 387, 388, 389, 390, 0,
	392, 393, 394, 391, 395, 396, 397, 398, 0, 399,
	975, 400, 401, 402, 403, 855, 404, 0, 405, 409,
	410, 411, 412, 413, 414, 415, 0, 421, 422, 890,
	891, 893, 894, 417, 423, 424, 425, 949, 426, 406,
	407, 427, 428, 976, 429, 430, 912, 892, 432, 0,
	433, 434, 435, 436, 408, 437, 441, 960, 438, 439,
	440, 983, 0, 444, 445, 443, 0, 446, 447, 448,
	449, 450, 279, 888, 0, 452, 931, 932, 933, 934,
	0, 459, 0, 453, 454, 984, 455, 985, 865, 456,
	457, 458, 0, 460, 461, 0, 849, 462, 463, 464,
	465, 466, 468, 950, 469, 0, 896, 470, 471, 472,
	521, 928, 978, 0, 474, 473, 524, 0, 0, 0,
	0, 475, 476, 525, 477, 478, 479, 846, 0, 0,
	0, 0, 0, 844, 0, 0, 0, 0, 0, 0,
	842, 843, 1609, 0, 0, 0, 0, 0, 0, 871,
	0, 0, 0, 869, 901, 859, 860, 861, 857, 858,
	870, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 219, 220, 221, 222, 223, 0, 224, 0, 0,
	0, 0, 0, 952, 875, 0, 0, 0, 225, 227,
	226, 228, 229, 481, 916, 895, 927, 233, 885, 926,
	925, 0, 234, 887, 886, 237, 238, 239, 877, 951,
	240, 988, 989, 487, 0, 241, 958, 0, 939, 0,
	242, 243, 244, 245, 246, 247, 0, 249, 250, 251,
	248, 0, 252, 0, 253, 254, 255, 0, 961, 256,
	257, 942, 940, 941, 948, 944, 943, 947, 258, 259,
	260, 261, 930, 263, 923, 922, 848, 264, 0, 266,
	265, 0, 267, 0, 0, 268, 921, 270, 0, 271,
	0, 272, 273, 0, 274, 854, 275, 276, 278, 280,
	277, 281, 282, 283, 284, 979, 980, 866, 216, 0,
	0, 0, 0, 0, 285, 286, 287, 920, 918, 919,
	0, 290, 0, 291, 0, 0, 962, 292, 293, 0,
	294, 986, 0, 876, 295, 0, 296, 297, 298, 299,
	953, 954, 957, 351, 964, 300, 301, 0, 302, 303,
	897, 0, 0, 217, 304, 306, 313, 0, 963, 307,
	909, 900, 911, 913, 914, 915, 910, 0, 902, 0,
	314, 965, 955, 966, 315, 316, 317, 967, 935, 936,
	0, 0, 320, 321, 322, 323, 324, 0, 326, 325,
	0, 327, 987, 968, 328, 329, 969, 0, 330, 331,
	946, 945, 332, 333, 334, 0, 335, 336, 338, 340,
	337, 339, 341, 343, 889, 342, 970, 345, 346, 348,
	971, 347, 845, 218, 972, 349, 867, 956, 350, 924,
	352, 353, 0, 898, 355, 899, 0, 0, 358, 359,
	360, 0, 0, 361, 362, 507, 973, 363, 974, 981,
	364, 357, 365, 366, 367, 368, 369, 370, 371, 0,
	372, 373, 982, 374, 510, 375, 0, 376, 0, 377,
	378, 379, 380, 381, 382, 383, 917, 384, 385, 0,
	386, 387, 388, 389, 390, 0, 392, 393, 394, 391,
	395, 396, 397, 398, 0, 399, 975, 400, 401, 402,
	403, 855, 404, 0, 405, 409, 410, 411, 412, 413,
	414, 415, 0, 421, 422, 890, 891, 893, 894, 417,
	423, 424, 425, 949, 426, 406, 407, 427, 428, 976,
	429, 430, 912, 892, 432, 0, 433, 434, 435, 436,
	408, 437, 441, 960, 438, 439, 440, 983, 0, 444,
	445, 443, 0, 446, 447, 448, 449, 450, 279, 888,
	0, 452, 931, 932, 933, 934, 0, 459, 0, 453,
	454, 984, 455, 985, 865, 456, 457, 458, 0, 460,
	461, 0, 849, 462, 463, 464, 465, 466, 468, 950,
	469, 0, 896, 470, 471, 472, 521, 928, 978, 2954,
	474, 473, 524, 0, 0, 0, 0, 475, 476, 525,
	477, 478, 479, 846, 0, 0, 0, 0, 0, 844,
	0, 0, 0, 0, 0, 0, 842, 843, 901, 859,
	860, 861, 857, 858, 870, 871, 0, 0, 0, 869,
	0, 0, 0, 0, 0, 219, 220, 221, 222, 223,
	0, 224, 0, 0, 0, 0, 0, 952, 875, 0,
	0, 0, 225, 227, 226, 228, 229, 481, 916, 895,
	927, 233, 885, 926, 925, 0, 234, 887, 886, 237,
	238, 239, 877, 951, 240, 988, 989, 487, 0, 241,
	958, 0, 939, 0, 242, 243, 244, 245, 246, 247,
	0, 249, 250, 251, 248, 0, 252, 0, 253, 254,
	255, 0, 961, 256, 257, 942, 940, 941, 948, 944,
	943, 947, 258, 259, 260, 261, 930, 263, 923, 922,
	848, 264, 0, 266, 265, 0, 267, 0, 0, 268,
	921, 270, 0, 271, 0, 272, 273, 0, 274, 854,
	275, 276, 278, 280, 277, 281, 282, 283, 284, 979,
	980, 866, 216, 0, 0, 0, 0, 0, 285, 286,
	287, 920, 918, 919, 0, 290, 0, 291, 0, 0,
	962, 292, 293, 0, 294, 986, 0, 876, 295, 0,
	296, 297, 298, 299, 953, 954, 957, 351, 964, 300,
	301, 0, 302, 303, 897, 0, 0, 2028, 304, 306,
	313, 0, 963, 307, 909, 900, 911, 913, 914, 915,
	910, 0, 902, 0, 314, 965, 955, 966, 315, 316,
	317, 967, 935, 936, 0, 0, 320, 321, 322, 323,
	324, 0, 326, 325, 0, 327, 987, 968, 328, 329,
	969, 0, 330, 331, 946, 945, 332, 333, 334, 0,
	335, 336, 338, 340, 337, 339, 341, 343, 889, 342,
	970, 345, 346, 348, 971, 347, 845, 218, 972, 349,
	867, 956, 350, 924, 352, 353, 0, 898, 355, 899,
	0, 0, 358, 359, 360, 0, 0, 361, 362, 507,
	973, 363, 974, 981, 364, 357, 365, 366, 367, 368,
	369, 370, 371, 0, 372, 373, 982, 374, 510, 375,
	2027, 376, 0, 377, 378, 379, 380, 381, 382, 383,
	917, 384, 385, 0, 386, 387, 388, 389, 390, 0,
	392, 393, 394, 391, 395, 396, 397, 398, 0, 399,
	975, 400, 401, 402, 403, 855, 404, 0, 405, 409,
	410, 411, 412, 413, 414, 415, 0, 421, 422, 890,
	891, 893, 894, 417, 423, 424, 425, 949, 426, 406,
	407, 427, 428, 976, 429, 430, 912, 892, 432, 0,
	433, 434, 435, 436, 408, 437, 441, 960, 438, 439,
	440, 983, 0, 444, 445, 443, 0, 446, 447, 448,
	449, 450, 279, 888, 0, 452, 931, 932, 933, 934,
	0, 459, 0, 453, 454, 984, 455, 985, 865, 456,
	457, 458, 0, 460, 461, 0, 849, 462, 463, 464,
	465, 466, 468, 950, 469, 0, 896, 470, 471, 472,
	521, 928, 978, 0, 474, 473, 524, 0, 0, 0,
	0, 475, 476, 525, 477, 478, 479, 846, 0, 0,
	0, 0, 0, 844, 0, 0, 0, 0, 0, 0,
	842, 843, 901, 859, 860, 861, 857, 858, 870, 871,
	0, 0, 0, 869, 0, 0, 0, 0, 0, 219,
	220, 221, 222, 223, 0, 224, 0, 0, 0, 0,
	0, 952, 875, 0, 0, 0, 225, 227, 226, 228,
	229, 481, 916, 895, 927, 233, 885, 926, 925, 0,
	234, 887, 886, 237, 238, 239, 877, 951, 240, 988,
	989, 487, 0, 241, 958, 0, 939, 0, 242, 243,
	244, 245, 246, 247, 0, 249, 250, 251, 248, 0,
	252, 0, 253, 254, 255, 0, 961, 256, 257, 942,
	940, 941, 948, 944, 943, 947, 258, 259, 260, 261,
	930, 263, 923, 922, 848, 264, 0, 266, 265, 0,
	267, 0, 0, 268, 921, 270, 0, 271, 0, 272,
	273, 0, 274, 854, 275, 276, 278, 280, 277, 281,
	282, 283, 284, 979, 980, 866, 216, 0, 0, 0,
	0, 0, 285, 286, 287, 920, 918, 919, 0, 290,
	0, 291, 0, 0, 962, 292, 293, 0, 294, 986,
	0, 876, 295, 0, 296, 297, 298, 299, 953, 954,
	957, 351, 964, 300, 301, 0, 302, 303, 897, 0,
	0, 217, 304, 306, 313, 0, 963, 307, 909, 900,
	911, 913, 914, 915, 910, 0, 902, 0, 314, 965,
	955, 966, 315, 316, 317, 967, 935, 936, 0, 0,
	320, 321, 322, 323, 324, 0, 326, 325, 0, 327,
	987, 968, 328, 329, 969, 0, 330, 331, 946, 945,
	332, 333, 334, 0, 335, 336, 338, 340, 337, 339,
	341, 343, 889, 342, 970, 345, 346, 348, 971, 347,
	845, 218, 972, 349, 867, 956, 350, 924, 352, 353,
	0, 898, 355, 899, 850, 0, 358, 359, 360, 0,
	0, 361, 362, 507, 973, 363, 974, 981, 364, 357,
	365, 366, 367, 368, 369, 370, 371, 0, 372, 373,
	982, 374, 510, 375, 0, 376, 0, 377, 378, 379,
	380, 381, 382, 383, 917, 384, 385, 0, 386, 387,
	388, 389, 390, 0, 392, 393, 394, 391, 395, 396,
	397, 398, 0, 399, 975, 400, 401, 402, 403, 855,
	404, 0, 405, 409, 410, 411, 412, 413, 414, 415,
	0, 421, 422, 890, 891, 893, 894, 417, 423, 424,
	425, 949, 426, 406, 407, 427, 428, 976, 429, 430,
	912, 892, 432, 0, 433, 434, 435, 436, 408, 437,
	441, 960, 438, 439, 440, 983, 0, 444, 445, 443,
	0, 446, 447, 448, 449, 450, 279, 888, 0, 452,
	931, 932, 933, 934, 0, 459, 0, 453, 454, 984,
	455, 985, 865, 456, 457, 458, 0, 460, 461, 0,
	849, 462, 463, 464, 465, 466, 468, 950, 469, 0,
	896, 470, 471, 472, 521, 928, 978, 0, 474, 473,
	524, 0, 0, 0, 0, 475, 476, 525, 477, 478,
	479, 846, 0, 0, 0, 0, 0, 844, 0, 0,
	0, 0, 0, 0, 842, 843, 901, 859, 860, 861,
	857, 858, 870, 871, 0, 0, 0, 869, 0, 0,
	0, 0, 0, 219, 220, 221, 222, 223, 0, 224,
	0, 0, 0, 0, 0, 952, 875, 0, 0, 0,
	225, 227, 226, 228, 229, 481, 916, 895, 927, 233,
	885, 926, 925, 0, 234, 887, 886, 237, 238, 239,
	877, 951, 240, 988, 989, 487, 0, 241, 958, 0,
	939, 0, 242, 243, 244, 245, 246, 247, 0, 249,
	250, 251, 248, 0, 252, 0, 253, 254, 255, 0,
	961, 256, 257, 942, 940, 941, 948, 944, 943, 947,
	258, 259, 260, 261, 930, 263, 923, 922, 848, 264,
	0, 266, 265, 0, 267, 0, 0, 268, 921, 270,
	0, 271, 0, 272, 273, 0, 274, 854, 275, 276,
	278, 280, 277, 281, 282, 283, 284, 979, 980, 866,
	216, 0, 0, 0, 0, 0, 285, 286, 287, 920,
	918, 919, 0, 290, 0, 291, 0, 0, 962, 292,
	293, 0, 294, 986, 0, 876, 295, 0, 296, 297,
	298, 299, 953, 954, 957, 351, 964, 300, 301, 0,
	302, 303, 897, 0, 0, 217, 304, 306, 313, 0,
	963, 307, 909, 900, 911, 913, 914, 915, 910, 0,
	902, 0, 314, 965, 955, 966, 315, 316, 317, 967,
	935, 936, 0, 0, 320, 321, 322, 323, 324, 0,
	326, 325, 0, 327, 987, 968, 328, 329, 969, 0,
	330, 331, 946, 945, 332, 333, 334, 0, 335, 336,
	338, 340, 337, 339, 341, 343, 889, 342, 970, 345,
	346, 348, 971, 347, 845, 218, 972, 349, 867, 956,
	350, 924, 352, 353, 0, 898, 355, 899, 0, 0,
	358, 359, 360, 0, 0, 361, 362, 507, 973, 363,
	974, 981, 364, 357, 365, 366, 367, 368, 369, 370,
	371, 0, 372, 373, 982, 374, 510, 375, 0, 376,
	0, 377, 378, 379, 380, 381, 382, 383, 917, 384,
	385, 0, 386, 387, 388, 389, 390, 0, 392, 393,
	394, 391, 395, 396, 397, 398, 0, 399, 975, 400,
	401, 402, 403, 855, 404, 0, 405, 409, 410, 411,
	412, 413, 414, 415, 0, 421, 422, 890, 891, 893,
	894, 417, 423, 424, 425, 949, 426, 406, 407, 427,
	428, 976, 429, 430, 912, 892, 432, 0, 433, 434,
	435, 436, 408, 437, 441, 960, 438, 439, 440, 983,
	0, 444, 445, 443, 0, 446, 447, 448, 449, 450,
	279, 888, 0, 452, 931, 932, 933, 934, 0, 459,
	0, 453, 454, 984, 455, 985, 865, 456, 457, 458,
	0, 460, 461, 0, 849, 462, 463, 464, 465, 466,
	468, 950, 469, 0, 896, 470, 471, 472, 521, 928,
	978, 0, 474, 473, 524, 0, 0, 0, 0, 475,
	476, 525, 477, 478, 479, 846, 0, 0, 0, 0,
	0, 844, 0, 0, 0, 0, 0, 0, 842, 843,
	1609, 0, 0, 0, 0, 0, 0, 871, 0, 0,
	0, 869, 901, 859, 860, 861, 857, 858, 870, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 219,
	220, 221, 222, 223, 0, 224, 0, 0, 0, 0,
	0, 952, 875, 0, 0, 0, 225, 227, 226, 228,
	229, 481, 916, 895, 927, 233, 885, 926, 925, 0,
	234, 887, 886, 237, 238, 239, 877, 951, 240, 988,
	989, 487, 0, 241, 958, 0, 939, 0, 242, 243,
	244, 245, 246, 247, 0, 249, 250, 251, 248, 0,
	252, 0, 253, 254, 255, 0, 961, 256, 257, 942,
	940, 941, 948, 944, 943, 947, 258, 259, 260, 261,
	930, 263, 923, 922, 848, 264, 0, 266, 265, 0,
	267, 0, 0, 268, 921, 270, 0, 271, 0, 272,
	273, 0, 274, 854, 275, 276, 278, 280, 277, 281,
	282, 283, 284, 979, 980, 866, 216, 0, 0, 0,
	0, 0, 285, 286, 287, 920, 918, 919, 0, 290,
	0, 291, 0, 2213, 962, 292, 293, 0, 294, 986,
	0, 876, 295, 0, 296, 297, 298, 299, 953, 954,
	957, 351, 964, 300, 301, 0, 302, 303, 897, 0,
	0, 217, 304, 306, 313, 0, 963, 307, 909, 900,
	911, 913, 914, 915, 910, 0, 902, 0, 314, 965,
	955, 966, 315, 316, 317, 967, 935, 936, 0, 0,
	320, 321, 322, 323, 324, 0, 326, 325, 0, 327,
	987, 968, 328, 329, 969, 0, 330, 331, 946, 945,
	332, 333, 334, 0, 335, 336, 338, 340, 337, 339,
	341, 343, 889, 342, 970, 345, 346, 348, 971, 347,
	845, 218, 972, 349, 867, 956, 350, 924, 352, 353,
	0, 898, 355, 899, 0, 0, 358, 359, 360, 0,
	0, 361, 362, 507, 973, 363, 974, 981, 364, 357,
	365, 366, 367, 368, 369, 370, 371, 0, 372, 373,
	982, 374, 510, 375, 0, 376, 0, 377, 378, 379,
	380, 381, 382, 383, 917, 384, 385, 0, 386, 387,
	388, 389, 390, 0, 392, 393, 394, 391, 395, 396,
	397, 398, 0, 399, 975, 400, 401, 402, 403, 855,
	404, 0, 405, 409, 410, 411, 412, 413, 414, 415,
	0, 421, 422, 890, 891, 893, 894, 417, 423, 424,
	425, 949, 426, 406, 407, 427, 428, 976, 429, 430,
	912, 892, 432, 0, 433, 434, 435, 436, 408, 437,
	441, 960, 438, 439, 440, 983, 0, 444, 445, 443,
	0, 446, 447, 448, 449, 450, 279, 888, 0, 452,
	931, 932, 933, 934, 0, 459, 0, 453, 454, 984,
	455, 985, 865, 456, 457, 458, 0, 460, 461, 0,
	849, 462, 463, 464, 465, 466, 468, 950, 469, 0,
	896, 470, 471, 472, 521, 928, 978, 0, 474, 473,
	524, 0, 0, 0, 0, 475, 476, 525, 477, 478,
	479, 846, 0, 0, 0, 0, 0, 844, 0, 0,
	0, 0, 0, 0, 842, 843, 901, 859, 860, 861,
	857, 858, 870, 871, 0, 0, 0, 869, 0, 0,
	0, 0, 0, 219, 220, 221, 222, 223, 0, 224,
	0, 0, 0, 0, 0, 952, 875, 0, 0, 0,
	225, 227, 226, 228, 229, 481, 916, 895, 927, 233,
	885, 926, 925, 0, 234, 887, 886, 237, 238, 239,
	877, 951, 240, 988, 989, 487, 0, 241, 958, 0,
	939, 0, 242, 243, 244, 245, 246, 247, 0, 249,
	250, 251, 248, 0, 252, 0, 253, 254, 255, 0,
	961, 256, 257, 942, 940, 941, 948, 944, 943, 947,
	258, 259, 260, 261, 930, 263, 923, 922, 848, 264,
	0, 266, 265, 0, 267, 0, 0, 268, 921, 270,
	0, 271, 0, 272, 273, 0, 274, 854, 275, 276,
	278, 280, 277, 281, 282, 283, 284, 979, 980, 866,
	216, 0, 0, 0, 0, 0, 285, 286, 287, 920,
	918, 919, 0, 290, 0, 291, 0, 0, 962, 292,
	293, 0, 294, 986, 0, 876, 295, 0, 296, 297,
	298, 299, 953, 954, 957, 351, 964, 300, 301, 0,
	302, 303, 897, 0, 0, 217, 304, 306, 313, 0,
	963, 307, 909, 900, 911, 913, 914, 915, 910, 0,
	902, 0, 314, 965, 955, 966, 315, 316, 317, 967,
	935, 936, 0, 0, 320, 321, 322, 323, 324, 0,
	326, 325, 0, 327, 987, 968, 328, 329, 969, 0,
	330, 331, 946, 945, 332, 333, 334, 0, 335, 336,
	338, 340, 337, 339, 341, 343, 889, 342, 970, 345,
	346, 348, 971, 347, 845, 218, 972, 349, 867, 956,
	350, 924, 352, 353, 0, 898, 355, 899, 0, 0,
	358, 359, 360, 0, 0, 361, 362, 507, 973, 363,
	974, 981, 364, 357, 365, 366, 367, 368, 369, 370,
	371, 0, 372, 373, 982, 374, 510, 375, 0, 376,
	0, 377, 378, 379, 380, 381, 382, 383, 917, 384,
	385, 0, 386, 387, 388, 389, 390, 0, 392, 393,
	394, 391, 395, 396, 397, 398, 0, 399, 975, 400,
	401, 402, 403, 855, 404, 0, 405, 409, 410, 411,
	412, 413, 414, 415, 0, 421, 422, 890, 891, 893,
	894, 417, 423, 424, 425, 949, 426, 406, 407, 427,
	428, 976, 429, 430, 912, 892, 432, 0, 433, 434,
	435, 436, 408, 437, 441, 960, 438, 439, 440, 983,
	0, 444, 445, 443, 0, 446, 447, 448, 449, 450,
	279, 888, 0, 452, 931, 932, 933, 934, 0, 459,
	0, 453, 454, 984, 455, 985, 865, 456, 457, 458,
	0, 460, 461, 0, 849, 462, 463, 464, 465, 466,
	468, 950, 469, 0, 896, 470, 471, 472, 521, 928,
	978, 0, 474, 473, 524, 0, 0, 0, 0, 475,
	476, 525, 477, 478, 479, 846, 0, 0, 0, 0,
	0, 844, 0, 0, 0, 0, 0, 0, 842, 843,
	0, 0, 0, 0, 0, 0, 0, 871, 1543, 0,
	2218, 869, 901, 859, 860, 861, 857, 858, 870, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 219,
	220, 221, 222, 223, 0, 224, 0, 0, 0, 0,
	0, 952, 875, 0, 0, 0, 225, 227, 226, 228,
	229, 481, 916, 895, 927, 233, 885, 926, 925, 0,
	234, 887, 886, 237, 238, 239, 877, 951, 240, 988,
	989, 487, 0, 241, 958, 0, 939, 0, 242, 243,
	244, 245, 246, 247, 0, 249, 250, 251, 248, 0,
	252, 0, 253, 254, 255, 0, 961, 256, 257, 942,
	940, 941, 948, 944, 943, 947, 258, 259, 260, 261,
	930, 263, 923, 922, 848, 264, 0, 266, 265, 0,
	267, 0, 0, 268, 921, 270, 0, 271, 0, 272,
	273, 0, 274, 854, 275, 276, 278, 280, 277, 281,
	282, 283, 284, 979, 980, 866, 216, 0, 0, 0,
	0, 0, 285, 286, 287, 920, 918, 919, 0, 290,
	0, 291, 0, 0, 962, 292, 293, 0, 294, 986,
	0, 876, 295, 0, 296, 297, 298, 299, 953, 954,
	957, 351, 964, 300, 301, 0, 302, 303, 897, 0,
	0, 217, 304, 306, 313, 0, 963, 307, 909, 900,
	911, 913, 914, 915, 910, 0, 902, 0, 314, 965,
	955, 966, 315, 316, 317, 967, 935, 936, 0, 0,
	320, 321, 322, 323, 324, 0, 326, 325, 0, 327,
	987, 968, 328, 329, 969, 0, 330, 331, 946, 945,
	332, 333, 334, 0, 335, 336, 338, 340, 337, 339,
	341, 343, 889, 342, 970, 345, 346, 348, 971, 347,
	845, 218, 972, 349, 867, 956, 350, 924, 352, 353,
	0, 898, 355, 899, 0, 0, 358, 359, 360, 0,
	0, 361, 362, 507, 973, 363, 974, 981, 364, 357,
	365, 366, 367, 368, 369, 370, 371, 0, 372, 373,
	982, 374, 510, 375, 0, 376, 0, 377, 378, 379,
	380, 381, 382, 383, 917, 384, 385, 0, 386, 387,
	388, 389, 390, 0, 392, 393, 394, 391, 395, 396,
	397, 398, 0, 399, 975, 400, 401, 402, 403, 855,
	404, 0, 405, 409, 410, 411, 412, 413, 414, 415,
	0, 421, 422, 890, 891, 893, 894, 417, 423, 424,
	425, 949, 426, 406, 407, 427, 428, 976, 429, 430,
	912, 892, 432, 0, 433, 434, 435, 436, 408, 437,
	441, 960, 438, 439, 440, 983, 0, 444, 445, 443,
	0, 446, 447, 448, 449, 450, 279, 888, 0, 452,
	931, 932, 933, 934, 0, 459, 0, 453, 454, 984,
	455, 985, 865, 456, 457, 458, 0, 460, 461, 0,
	849, 462, 463, 464, 465, 466, 468, 950, 469, 0,
	896, 470, 471, 472, 521, 928, 978, 0, 474, 473,
	524, 0, 0, 0, 0, 475, 476, 525, 477, 478,
	479, 846, 0, 0, 0, 0, 0, 844, 0, 0,
	0, 0, 0, 0, 842, 843, 0, 0, 0, 0,
	0, 0, 0, 871, 0, 0, 2216, 869, 901, 859,
	860, 861, 857, 858, 870, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 219, 220, 221, 222, 223,
	0, 224, 0, 0, 0, 0, 0, 952, 875, 0,
	0, 0, 225, 227, 226, 228, 229, 481, 916, 895,
	927, 233, 885, 926, 925, 0, 234, 887, 886, 237,
	238, 239, 877, 951, 240, 988, 989, 487, 0, 241,
	958, 0, 939, 0, 242, 243, 244, 245, 246, 247,
	0, 249, 250, 251, 248, 0, 252, 0, 253, 254,
	255, 0, 961, 256, 257, 942, 940, 941, 948, 944,
	943, 947, 258, 259, 260, 261, 930, 263, 923, 922,
	848, 264, 0, 266, 265, 0, 267, 0, 0, 268,
	921, 270, 0, 271, 0, 272, 273, 0, 274, 854,
	275, 276, 278, 280, 277, 281, 282, 283, 284, 979,
	980, 866, 216, 0, 0, 0, 0, 0, 285, 286,
	287, 920, 918, 919, 0, 290, 0, 291, 0, 0,
	962, 292, 293, 0, 294, 986, 0, 876, 295, 0,
	296, 297, 298, 299, 953, 954, 957, 351, 964, 300,
	301, 0, 302, 303, 897, 0, 0, 217, 304, 306,
	313, 0, 963, 307, 909, 900, 911, 913, 914, 915,
	910, 0, 902, 0, 314, 965, 955, 966, 315, 316,
	317, 967, 935, 936, 0, 0, 320, 321, 322, 323,
	324, 0, 326, 325, 0, 327, 987, 968, 328, 329,
	969, 0, 330, 331, 946, 945, 332, 333, 334, 0,
	335, 336, 338, 340, 337, 339, 341, 343, 889, 342,
	970, 345, 346, 348, 971, 347, 845, 218, 972, 349,
	867, 956, 350, 924, 352, 353, 0, 898, 355, 899,
	0, 0, 358, 359, 360, 0, 0, 361, 362, 507,
	973, 363, 974, 981, 364, 357, 365, 366, 367, 368,
	369, 370, 371, 0, 372, 373, 982, 374, 510, 375,
	0, 376, 0, 377, 378, 379, 380, 381, 382, 383,
	917, 384, 385, 0, 386, 387, 388, 389, 390, 0,
	392, 393, 394, 391, 395, 396, 397, 398, 0, 399,
	975, 400, 401, 402, 403, 855, 404, 0, 405, 409,
	410, 411, 412, 413, 414, 415, 0, 421, 422, 890,
	891, 893, 894, 417, 423, 424, 425, 949, 426, 406,
	407, 427, 428, 976, 429, 430, 912, 892, 432, 0,
	433, 434, 435, 436, 408, 437, 441, 960, 438, 439,
	440, 983, 0, 444, 445, 443, 0, 446, 447, 448,
	449, 450, 279, 888, 0, 452, 931, 932, 933, 934,
	0, 459, 0, 453, 454, 984, 455, 985, 865, 456,
	457, 458, 0, 460, 461, 0, 849, 462, 463, 464,
	465, 466, 468, 950, 469, 0, 896, 470, 471, 472,
	521, 928, 978, 0, 474, 473, 524, 0, 0, 0,
	0, 475, 476, 525, 477, 478, 479, 846, 0, 0,
	0, 0, 0, 844, 0, 0, 0, 0, 0, 0,
	842, 843, 0, 0, 0, 0, 0, 0, 0, 871,
	0, 0, 2204, 869, 901, 859, 860, 861, 857, 858,
	870, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 219, 220, 221, 222, 223, 0, 224, 0, 0,
	0, 0, 0, 952, 875, 0, 0, 0, 225, 227,
	226, 228, 229, 481, 916, 895, 927, 233, 885, 926,
	925, 0, 234, 887, 886, 237, 238, 239, 877, 951,
	240, 988, 989, 487, 0, 241, 958, 0, 939, 0,
	242, 243, 244, 245, 246, 247, 0, 249, 250, 251,
	248, 0, 252, 0, 253, 254, 255, 0, 961, 256,
	257, 942, 940, 941, 948, 944, 943, 947, 258, 259,
	260, 261, 930, 263, 923, 922, 848, 264, 0, 266,
	265, 0, 267, 0, 0, 268, 921, 270, 0, 271,
	0, 272, 273, 0, 274, 854, 275, 276, 278, 280,
	277, 281, 282, 283, 284, 979, 980, 866, 216, 0,
	0, 0, 0, 0, 285, 286, 287, 920, 918, 919,
	0, 290, 0, 291, 0, 0, 962, 292, 293, 0,
	294, 986, 0, 876, 295, 0, 296, 297, 298, 299,
	953, 954, 957, 351, 964, 300, 301, 0, 302, 303,
	897, 0, 0, 217, 304, 306, 313, 0, 963, 307,
	909, 900, 911, 913, 914, 915, 910, 0, 902, 0,
	314, 965, 955, 966, 315, 316, 317, 967, 935, 936,
	0, 0, 320, 321, 322, 323, 324, 0, 326, 325,
	0, 327, 987, 968, 328, 329, 969, 0, 330, 331,
	946, 945, 332, 333, 334, 0, 335, 336, 338, 340,
	337, 339, 341, 343, 889, 342, 970, 345, 346, 348,
	971, 347, 845, 218, 972, 349, 867, 956, 350, 924,
	352, 353, 0, 898, 355, 899, 0, 0, 358, 359,
	360, 0, 0, 361, 362, 507, 973, 363, 974, 981,
	364, 357, 365, 366, 367, 368, 369, 370, 371, 0,
	372, 373, 982, 374, 510, 375, 0, 376, 0, 377,
	378, 379, 380, 381, 382, 383, 917, 384, 385, 0,
	386, 387, 388, 389, 390, 0, 392, 393, 394, 391,
	395, 396, 397, 398, 0, 399, 975, 400, 401, 402,
	403, 855, 404, 0, 405, 409, 410, 411, 412, 413,
	414, 415, 0, 421, 422, 890, 891, 893, 894, 417,
	423, 424, 425, 949, 426, 406, 407, 427, 428, 976,
	429, 430, 912, 892, 432, 0, 433, 434, 435, 436,
	408, 437, 441, 960, 438, 439, 440, 983, 0, 444,
	445, 443, 0, 446, 447, 448, 449, 450, 279, 888,
	0, 452, 931, 932, 933, 934, 0, 459, 0, 453,
	454, 984, 455, 985, 865, 456, 457, 458, 0, 460,
	461, 0, 849, 462, 463, 464, 465, 466, 468, 950,
	469, 0, 896, 470, 471, 472, 521, 928, 978, 0,
	474, 473, 524, 0, 0, 0, 0, 475, 476, 525,
	477, 478, 479, 846, 0, 0, 0, 0, 0, 844,
	0, 0, 0, 0, 0, 0, 842, 843, 0, 0,
	0, 0, 0, 0, 0, 871, 0, 0, 2193, 869,
	901, 859, 860, 861, 857, 858, 870, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 219, 220, 221,
	222, 223, 0, 224, 0, 0, 0, 0, 0, 952,
	875, 0, 0, 0, 225, 227, 226, 228, 229, 481,
	916, 895, 927, 233, 885, 926, 925, 0, 234, 887,
	886, 237, 238, 239, 877, 951, 240, 988, 989, 487,
	0, 241, 958, 0, 939, 0, 242, 243, 244, 245,
	246, 247, 0, 249, 250, 251, 248, 0, 252, 0,
	253, 254, 255, 0, 961, 256, 257, 942, 940, 941,
	948, 944, 943, 947, 258, 259, 260, 261, 930, 263,
	923, 922, 848, 264, 0, 266, 265, 0, 267, 0,
	0, 268, 921, 270, 0, 271, 0, 272, 273, 0,
	274, 854, 275, 276, 278, 280, 277, 281, 282, 283,
	284, 979, 980, 866, 216, 0, 0, 0, 0, 0,
	285, 286, 287, 920, 918, 919, 0, 290, 0, 291,
	0, 0, 962, 292, 293, 0, 294, 986, 0, 876,
	295, 0, 296, 297, 298, 299, 953, 954, 957, 351,
	964, 300, 301, 0, 302, 303, 897, 0, 0, 217,
	304, 306, 313, 0, 963, 307, 909, 900, 911, 913,
	914, 915, 910, 0, 902, 0, 314, 965, 955, 966,
	315, 316, 317, 967, 935, 936, 0, 0, 320, 321,
	322, 323, 324, 0, 326, 325, 0, 327, 987, 968,
	328, 329, 969, 0, 330, 331, 946, 945, 332, 333,
	334, 0, 335, 336, 338, 340, 337, 339, 341, 343,
	889, 342, 970, 345, 346, 348, 971, 347, 845, 218,
	972, 349, 867, 956, 350, 924, 352, 353, 0, 898,
	355, 899, 0, 0, 358, 359, 360, 0, 0, 361,
	362, 507, 973, 363, 974, 981, 364, 357, 365, 366,
	367, 368, 369, 370, 371, 0, 372, 373, 982, 374,
	510, 375, 0, 376, 0, 377, 378, 379, 380, 381,
	382, 383, 917, 384, 385, 0, 386, 387, 388, 389,
	390, 0, 392, 393, 394, 391, 395, 396, 397, 398,
	0, 399, 975, 400, 401, 402, 403, 855, 404, 0,
	405, 409, 410, 411, 412, 413, 414, 415, 0, 421,
	422, 890, 891, 893, 894, 417, 423, 424, 425, 949,
	426, 406, 407, 427, 428, 976, 429, 430, 912, 892,
	432, 0, 433, 434, 435, 436, 408, 437, 441, 960,
	438, 439, 440, 983, 0, 444, 445, 443, 0, 446,
	447, 448, 449, 450, 279, 888, 0, 452, 931, 932,
	933, 934, 0, 459, 0, 453, 454, 984, 455, 985,
	865, 456, 457, 458, 0, 460, 461, 0, 849, 462,
	463, 464, 465, 466, 468, 950, 469, 0, 896, 470,
	471, 472, 521, 928, 978, 0, 474, 473, 524, 0,
	0, 0, 0, 475, 476, 525, 477, 478, 479, 846,
	0, 0, 0, 0, 0, 844, 0, 0, 0, 0,
	0, 0, 842, 843, 0, 0, 0, 0, 0, 0,
	0, 871, 0, 0, 2191, 869, 2182, 2189, 860, 861,
	857, 858, 870, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 219, 220, 221, 222, 223, 0, 224,
	0, 0, 0, 0, 0, 952, 875, 0, 0, 0,
	225, 227, 226, 228, 229, 481, 916, 895, 927, 233,
	885, 926, 925, 0, 234, 887, 886, 237, 238, 239,
	877, 951, 240, 988, 989, 487, 0, 241, 958, 0,
	939, 0, 242, 243, 244, 245, 246, 247, 0, 249,
	250, 251, 248, 0, 252, 0, 253, 254, 255, 0,
	961, 256, 257, 942, 940, 941, 948, 944, 943, 947,
	258, 259, 260, 261, 930, 2185, 923, 922, 848, 264,
	0, 266, 265, 0, 267, 0, 0, 268, 921, 270,
	0, 271, 0, 272, 273, 0, 274, 854, 275, 276,
	278, 280, 277, 281, 282, 283, 284, 979, 980, 866,
	216, 0, 0, 0, 0, 0, 285, 286, 287, 920,
	918, 919, 0, 290, 0, 291, 0, 0, 962, 292,
	293, 0, 294, 986, 0, 876, 295, 0, 296, 297,
	298, 2186, 953, 954, 957, 351, 964, 300, 301, 0,
	302, 303, 897, 0, 0, 217, 304, 306, 313, 0,
	963, 307, 909, 900, 911, 913, 914, 915, 910, 0,
	902, 0, 314, 965, 955, 966, 315, 316, 317, 967,
	935, 936, 0, 0, 320, 321, 322, 323, 324, 0,
	326, 325, 0, 327, 987, 968, 328, 329, 969, 0,
	330, 331, 946, 945, 332, 333, 334, 0, 335, 336,
	338, 340, 337, 2187, 2184, 343, 889, 342, 970, 345,
	346, 348, 971, 347, 845, 218, 972, 349, 867, 956,
	350, 924, 352, 353, 0, 898, 355, 899, 0, 0,
	358, 359, 360, 0, 0, 361, 362, 507, 973, 363,
	974, 981, 364, 357, 365, 366, 367, 368, 369, 370,
	371, 0, 372, 373, 982, 374, 510, 375, 0, 376,
	0, 377, 378, 379, 380, 381, 382, 383, 917, 384,
	385, 0, 386, 387, 388, 389, 390, 0, 392, 393,
	394, 391, 395, 396, 397, 398, 0, 399, 975, 400,
	401, 402, 403, 855, 404, 0, 405, 409, 410, 411,
	412, 413, 414, 2188, 0, 421, 422, 890, 891, 893,
	894, 417, 423, 424, 425, 949, 426, 406, 407, 427,
	428, 976, 429, 430, 912, 892, 432, 0, 433, 434,
	435, 436, 408, 437, 441, 960, 438, 439, 440, 983,
	0, 444, 445, 443, 0, 446, 447, 448, 449, 450,
	279, 888, 0, 452, 931, 932, 933, 934, 0, 459,
	0, 453, 454, 984, 455, 985, 865, 456, 457, 458,
	0, 460, 461, 0, 849, 462, 463, 464, 465, 466,
	468, 950, 469, 0, 896, 470, 471, 472, 521, 928,
	978, 0, 474, 473, 524, 0, 0, 0, 0, 475,
	476, 525, 477, 2183, 479, 846, 0, 0, 0, 0,
	0, 844, 0, 0, 0, 0, 0, 0, 842, 843,
	0, 0, 0, 0, 0, 0, 0, 871, 0, 0,
	2179, 869, 2182, 2189, 860, 861, 857, 858, 870, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 219,
	220, 221, 222, 223, 0, 224, 0, 0, 0, 0,
	0, 952, 875, 0, 0, 0, 225, 227, 226, 228,
	229, 481, 916, 895, 927, 233, 885, 926, 925, 0,
	234, 887, 886, 237, 238, 239, 877, 951, 240, 988,
	989, 487, 0, 241, 958, 0, 939, 0, 242, 243,
	244, 245, 246, 247, 0, 249, 250, 251, 248, 0,
	252, 0, 253, 254, 255, 0, 961, 256, 257, 942,
	940, 941, 948, 944, 943, 947, 258, 259, 260, 261,
	930, 2185, 923, 922, 848, 264, 0, 266, 265, 0,
	267, 0, 0, 268, 921, 270, 0, 271, 0, 272,
	273, 0, 274, 854, 275, 276, 278, 280, 277, 281,
	282, 283, 284, 979, 980, 866, 216, 0, 0, 0,
	0, 0, 285, 286, 287, 920, 918, 919, 0, 290,
	0, 291, 0, 0, 962, 292, 293, 0, 294, 986,
	0, 876, 295, 0, 296, 297, 298, 2186, 953, 954,
	957, 351, 964, 300, 301, 0, 302, 303, 897, 0,
	0, 217, 304, 306, 313, 0, 963, 307, 909, 900,
	911, 913, 914, 915, 910, 0, 902, 0, 314, 965,
	955, 966, 315, 316, 317, 967, 935, 936, 0, 0,
	320, 321, 322, 323, 324, 0, 326, 325, 0, 327,
	987, 968, 328, 329, 969, 0, 330, 331, 946, 945,
	332, 333, 334, 0, 335, 336, 338, 340, 337, 2187,
	2184, 343, 889, 342, 970, 345, 346, 348, 971, 347,
	845, 218, 972, 349, 867, 956, 350, 924, 352, 353,
	0, 898, 355, 899, 0, 0, 358, 359, 360, 0,
	0, 361, 362, 507, 973, 363, 974, 981, 364, 357,
	365, 366, 367, 368, 369, 370, 371, 0, 372, 373,
	982, 374, 510, 375, 0, 376, 0, 377, 378, 379,
	380, 381, 382, 383, 917, 384, 385, 0, 386, 387,
	388, 389, 390, 0, 392, 393, 394, 391, 395, 396,
	397, 398, 0, 399, 975, 400, 401, 402, 403, 855,
	404, 0, 405, 409, 410, 411, 412, 413, 414, 2188,
	0, 421, 422, 890, 891, 893, 894, 417, 423, 424,
	425, 949, 426, 406, 407, 427, 428, 976, 429, 430,
	912, 892, 432, 0, 433, 434, 435, 436, 408, 437,
	441, 960, 438, 439, 440, 983, 0, 444, 445, 443,
	0, 446, 447, 448, 449, 450, 279, 888, 0, 452,
	931, 932, 933, 934, 0, 459, 0, 453, 454, 984,
	455, 985, 865, 456, 457, 458, 0, 460, 461, 0,
	849, 462, 463, 464, 465, 466, 468, 950, 469, 0,
	896, 470, 471, 472, 521, 928, 978, 0, 474, 473,
	524, 0, 0, 0, 0, 475, 476, 525, 477, 2183,
	479, 846, 0, 0, 0, 0, 0, 844, 0, 0,
	0, 0, 0, 0, 842, 843, 901, 859, 860, 861,
	857, 858, 870, 871, 0, 0, 0, 869, 0, 0,
	0, 0, 0, 219, 220, 221, 222, 223, 0, 224,
	0, 0, 0, 0, 0, 952, 875, 0, 0, 0,
	225, 227, 226, 228, 229, 481, 916, 895, 927, 233,
	885, 926, 925, 0, 234, 887, 886, 237, 238, 239,
	877, 951, 240, 988, 989, 487, 0, 241, 958, 0,
	939, 0, 242, 243, 244, 245, 246, 247, 0, 249,
	250, 251, 248, 0, 252, 0, 253, 254, 255, 0,
	961, 256, 257, 942, 940, 941, 948, 944, 943, 947,
	258, 259, 260, 261, 930, 263, 923, 922, 848, 264,
	0, 266, 265, 0, 267, 0, 0, 268, 921, 270,
	0, 271, 0, 272, 273, 0, 274, 854, 275, 276,
	278, 280, 277, 281, 282, 283, 284, 979, 980, 866,
	216, 0, 0, 0, 0, 0, 285, 286, 287, 920,
	918, 919, 0, 290, 0, 291, 0, 0, 962, 292,
	293, 0, 294, 986, 0, 876, 295, 0, 296, 297,
	298, 299, 953, 954, 957, 351, 964, 300, 301, 0,
	302, 303, 897, 0, 0, 217, 304, 306, 313, 0,
	963, 307, 909, 900, 911, 913, 914, 915, 910, 0,
	902, 0, 314, 965, 955, 966, 315, 316, 317, 967,
	935, 936, 0, 0, 320, 321, 322, 323, 324, 0,
	326, 325, 0, 327, 987, 968, 328, 329, 969, 0,
	330, 331, 946, 945, 332, 333, 334, 0, 335, 336,
	338, 340, 337, 339, 341, 343, 889, 342, 970, 345,
	346, 348, 971, 347, 845, 218, 972, 349, 867, 956,
	350, 924, 352, 353, 0, 898, 355, 899, 0, 0,
	358, 359, 360, 0, 0, 361, 362, 507, 973, 363,
	974, 981, 364, 357, 365, 366, 367, 368, 369, 370,
	371, 0, 372, 373, 982, 374, 510, 375, 0, 376,
	0, 377, 378, 379, 380, 381, 382, 383, 917, 384,
	385, 0, 386, 387, 388, 389, 390, 0, 392, 393,
	394, 391, 395, 396, 397, 398, 0, 399, 975, 400,
	401, 402, 403, 855, 404, 0, 405, 409, 410, 411,
	412, 413, 414, 415, 0, 421, 422, 890, 891, 893,
	894, 417, 423, 424, 425, 949, 426, 406, 407, 427,
	428, 976, 429, 430, 912, 892, 432, 0, 433, 434,
	435, 436, 408, 437, 441, 960, 438, 439, 440, 983,
	0, 444, 445, 443, 0, 446, 447, 448, 449, 450,
	279, 888, 0, 452, 931, 932, 933, 934, 0, 459,
	0, 453, 454, 984, 455, 985, 865, 456, 457, 458,
	0, 460, 461, 0, 849, 462, 463, 464, 465, 466,
	468, 950, 469, 0, 896, 470, 471, 472, 521, 928,
	978, 0, 474, 473, 524, 0, 0, 0, 0, 475,
	476, 525, 477, 478, 479, 846, 0, 0, 0, 0,
	0, 844, 0, 0, 0, 0, 0, 0, 842, 843,
	0, 0, 0, 0, 0, 1551, 0, 871, 0, 0,
	0, 869, 901, 859, 860, 861, 857, 858, 870, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 219,
	220, 221, 222, 223, 2007, 224, 0, 0, 0, 0,
	0, 952, 875, 0, 0, 0, 225, 227, 226, 228,
	229, 481, 916, 895, 927, 233, 885, 926, 925, 0,
	234, 887, 886, 237, 238, 239, 877, 951, 240, 988,
	989, 487, 0, 241, 958, 0, 939, 0, 242, 243,
	244, 245, 246, 247, 0, 249, 250, 251, 248, 0,
	252, 0, 253, 254, 255, 0, 961, 256, 257, 942,
	940, 941, 948, 944, 943, 947, 258, 259, 260, 261,
	930, 263, 923, 922, 848, 264, 0, 266, 265, 0,
	267, 0, 0, 268, 921, 270, 0, 271, 0, 272,
	273, 0, 274, 854, 275, 276, 278, 280, 277, 281,
	282, 283, 284, 979, 980, 866, 216, 0, 0, 0,
	0, 0, 285, 286, 287, 920, 918, 919, 0, 290,
	0, 291, 0, 0, 962, 292, 293, 0, 294, 986,
	0, 876, 295, 0, 296, 297, 298, 299, 953, 954,
	957, 351, 964, 300, 301, 0, 302, 303, 897, 0,
	0, 217, 304, 306, 313, 0, 963, 307, 909, 900,
	911, 913, 914, 915, 910, 0, 902, 0, 314, 965,
	955, 966, 315, 316, 317, 967, 935, 936, 0, 0,
	320, 321, 322, 323, 324, 0, 326, 325, 0, 327,
	987, 968, 328, 329, 969, 0, 330, 331, 946, 945,
	332, 333, 334, 0, 335, 336, 338, 340, 337, 339,
	341, 343, 889, 342, 970, 345, 346, 348, 971, 347,
	845, 218, 972, 349, 867, 956, 350, 924, 352, 353,
	0, 898, 355, 899, 0, 0, 358, 359, 360, 0,
	0, 361, 362, 507, 973, 363, 974, 981, 364, 357,
	365, 366, 367, 368, 369, 370, 371, 0, 372, 373,
	982, 374, 510, 375, 0, 376, 0, 377, 378, 379,
	380, 381, 382, 383, 917, 384, 385, 0, 386, 387,
	388, 389, 390, 0, 392, 393, 394, 391, 395, 396,
	397, 398, 0, 399, 975, 400, 401, 402, 403, 855,
	404, 0, 405, 409, 410, 411, 412, 413, 414, 415,
	0, 421, 422, 890, 891, 893, 894, 417, 423, 424,
	425, 949, 426, 406, 407, 427, 428, 976, 429, 430,
	912, 892, 432, 0, 433, 434, 435, 436, 408, 437,
	441, 960, 438, 439, 440, 983, 0, 444, 445, 443,
	0, 446, 447, 448, 449, 450, 279, 888, 0, 452,
	931, 932, 933, 934, 0, 459, 0, 453, 454, 984,
	455, 985, 865, 456, 457, 458, 0, 460, 461, 0,
	849, 462, 463, 464, 465, 466, 468, 950, 469, 0,
	896, 470, 471, 472, 521, 928, 978, 0, 474, 473,
	524, 0, 0, 0, 0, 475, 476, 525, 477, 478,
	479, 846, 0, 0, 0, 0, 0, 844, 0, 0,
	0, 0, 0, 0, 842, 843, 0, 0, 0, 0,
	0, 0, 0, 871, 0, 0, 1224, 869, 901, 859,
	860, 861, 857, 858, 870, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 219, 220, 221, 222, 223,
	0, 224, 0, 0, 0, 0, 0, 952, 875, 0,
	0, 0, 225, 227, 226, 228, 229, 481, 916, 895,
	927, 233, 885, 926, 925, 0, 234, 887, 886, 237,
	238, 239, 877, 951, 240, 988, 989, 487, 0, 241,
	958, 0, 939, 0, 242, 243, 244, 245, 246, 247,
	0, 249, 250, 251, 248, 0, 252, 0, 253, 254,
	255, 0, 961, 256, 257, 942, 940, 941, 948, 944,
	943, 947, 258, 259, 260, 261, 930, 263, 923, 922,
	848, 264, 0, 266, 265, 0, 267, 0, 0, 268,
	921, 270, 0, 271, 0, 272, 273, 0, 274, 854,
	275, 276, 278, 280, 277, 281, 282, 283, 284, 979,
	980, 866, 216, 0, 0, 0, 0, 0, 285, 286,
	287, 920, 918, 919, 0, 290, 0, 291, 0, 0,
	962, 292, 293, 0, 294, 986, 0, 876, 295, 0,
	296, 297, 298, 299, 1223, 954, 957, 351, 964, 300,
	301, 0, 302, 303, 897, 0, 0, 217, 304, 306,
	313, 0, 963, 307, 909, 900, 911, 913, 914, 915,
	910, 0, 902, 0, 314, 965, 955, 966, 315, 316,
	317, 967, 935, 936, 0, 0, 320, 321, 322, 323,
	324, 0, 326, 325, 0, 327, 987, 968, 328, 329,
	969, 0, 330, 331, 946, 945, 332, 333, 334, 0,
	335, 336, 338, 340, 337, 339, 341, 343, 889, 342,
	970, 345, 346, 348, 971, 347, 845, 218, 972, 349,
	867, 956, 350, 924, 352, 353, 0, 898, 355, 899,
	0, 0, 358, 359, 360, 0, 0, 361, 362, 507,
	973, 363, 974, 981, 364, 357, 365, 366, 367, 368,
	369, 370, 371, 0, 372, 373, 982, 374, 510, 375,
	0, 376, 0, 377, 378, 379, 380, 381, 382, 383,
	917, 384, 385, 0, 386, 387, 388, 389, 390, 0,
	392, 393, 394, 391, 395, 396, 397, 398, 0, 399,
	975, 400, 401, 402, 403, 855, 404, 0, 405, 409,
	410, 411, 412, 413, 414, 415, 0, 421, 422, 890,
	891, 893, 894, 417, 423, 424, 425, 949, 426, 406,
	407, 427, 428, 976, 429, 430, 912, 892, 432, 0,
	433, 434, 435, 436, 408, 437, 441, 960, 438, 439,
	440, 983, 0, 444, 445, 443, 0, 446, 447, 448,
	449, 450, 279, 888, 0, 452, 931, 932, 933, 934,
	0, 459, 0, 453, 454, 984, 455, 985, 865, 456,
	457, 458, 0, 460, 461, 0, 849, 462, 463, 464,
	465, 466, 468, 950, 469, 0, 896, 470, 471, 472,
	521, 928, 978, 0, 474, 473, 524, 0, 0, 0,
	0, 475, 476, 525, 477, 478, 479, 846, 0, 0,
	0, 0, 0, 844, 0, 0, 0, 0, 0, 0,
	842, 843, 0, 0, 0, 0, 0, 0, 0, 871,
	0, 0, 1218, 869, 901, 859, 860, 861, 857, 858,
	870, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 219, 220, 221, 222, 223, 0, 224, 0, 0,
	0, 0, 0, 952, 875, 0, 0, 0, 225, 227,
	226, 228, 229, 481, 916, 895, 927, 233, 885, 926,
	925, 0, 234, 887, 886, 237, 238, 239, 877, 951,
	240, 988, 989, 487, 0, 241, 958, 0, 939, 0,
	242, 243, 244, 245, 246, 247, 0, 249, 250, 251,
	248, 0, 252, 0, 253, 254, 255, 0, 961, 256,
	257, 942, 940, 941, 948, 944, 943, 947, 258, 259,
	260, 261, 930, 263, 923, 922, 848, 264, 0, 266,
	265, 0, 267, 0, 0, 268, 921, 270, 0, 271,
	0, 272, 273, 0, 274, 854, 275, 276, 278, 280,
	277, 281, 282, 283, 284, 979, 980, 866, 216, 0,
	0, 0, 0, 0, 285, 286, 287, 920, 918, 919,
	0, 290, 0, 291, 0, 0, 962, 292, 293, 0,
	294, 986, 0, 876, 295, 0, 296, 297, 298, 299,
	1217, 954, 957, 351, 964, 300, 301, 0, 302, 303,
	897, 0, 0, 217, 304, 306, 313, 0, 963, 307,
	909, 900, 911, 913, 914, 915, 910, 0, 902, 0,
	314, 965, 955, 966, 315, 316, 317, 967, 935, 936,
	0, 0, 320, 321, 322, 323, 324, 0, 326, 325,
	0, 327, 987, 968, 328, 329, 969, 0, 330, 331,
	946, 945, 332, 333, 334, 0, 335, 336, 338, 340,
	337, 339, 341, 343, 889, 342, 970, 345, 346, 348,
	971, 347, 845, 218, 972, 349, 867, 956, 350, 924,
	352, 353, 0, 898, 355, 899, 0, 0, 358, 359,
	360, 0, 0, 361, 362, 507, 973, 363, 974, 981,
	364, 357, 365, 366, 367, 368, 369, 370, 371, 0,
	372, 373, 982, 374, 510, 375, 0, 376, 0, 377,
	378, 379, 380, 381, 382, 383, 917, 384, 385, 0,
	386, 387, 388, 389, 390, 0, 392, 393, 394, 391,
	395, 396, 397, 398, 0, 399, 975, 400, 401, 402,
	403, 855, 404, 0, 405, 409, 410, 411, 412, 413,
	414, 415, 0, 421, 422, 890, 891, 893, 894, 417,
	423, 424, 425, 949, 426, 406, 407, 427, 428, 976,
	429, 430, 912, 892, 432, 0, 433, 434, 435, 436,
	408, 437, 441, 960, 438, 439, 440, 983, 0, 444,
	445, 443, 0, 446, 447, 448, 449, 450, 279, 888,
	0, 452, 931, 932, 933, 934, 0, 459, 0, 453,
	454, 984, 455, 985, 865, 456, 457, 458, 0, 460,
	461, 0, 849, 462, 463, 464, 465, 466, 468, 950,
	469, 0, 896, 470, 471, 472, 521, 928, 978, 0,
	474, 473, 524, 0, 0, 0, 0, 475, 476, 525,
	477, 478, 479, 846, 0, 0, 0, 0, 0, 844,
	0, 0, 0, 0, 0, 0, 842, 843, 0, 0,
	0, 0, 0, 0, 0, 871, 0, 0, 1213, 869,
	901, 859, 860, 861, 857, 858, 870, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 219, 220, 221,
	222, 223, 0, 224, 0, 0, 0, 0, 0, 952,
	875, 0, 0, 0, 225, 227, 226, 228, 229, 481,
	916, 895, 927, 233, 885, 926, 925, 0, 234, 887,
	886, 237, 238, 239, 877, 951, 240, 988, 989, 487,
	0, 241, 958, 0, 939, 0, 242, 243, 244, 245,
	246, 247, 0, 249, 250, 251, 248, 0, 252, 0,
	253, 254, 255, 0, 961, 256, 257, 942, 940, 941,
	948, 944, 943, 947, 258, 259, 260, 261, 930, 263,
	923, 922, 848, 264, 0, 266, 265, 0, 267, 0,
	0, 268, 921, 270, 0, 271, 0, 272, 273, 0,
	274, 854, 275, 276, 278, 280, 277, 281, 282, 283,
	284, 979, 980, 866, 216, 0, 0, 0, 0, 0,
	285, 286, 287, 920, 918, 919, 0, 290, 0, 291,
	0, 0, 962, 292, 293, 0, 294, 986, 0, 876,
	295, 0, 296, 297, 298, 299, 953, 954, 957, 351,
	964, 300, 301, 0, 302, 303, 897, 0, 0, 217,
	304, 306, 313, 0, 963, 307, 909, 900, 911, 913,
	914, 915, 910, 0, 902, 0, 314, 965, 955, 966,
	315, 316, 317, 967, 935, 936, 0, 0, 320, 321,
	322, 323, 324, 0, 326, 325, 0, 327, 987, 968,
	328, 329, 969, 0, 330, 331, 946, 945, 332, 333,
	334, 0, 335, 336, 338, 340, 337, 339, 341, 343,
	889, 342, 970, 345, 346, 348, 971, 347, 845, 218,
	972, 349, 867, 956, 350, 924, 352, 353, 0, 898,
	355, 899, 0, 0, 358, 359, 360, 0, 0, 361,
	362, 507, 973, 363, 974, 981, 364, 357, 365, 366,
	367, 368, 369, 370, 371, 0, 372, 373, 982, 374,
	510, 375, 0, 376, 0, 377, 378, 379, 380, 381,
	382, 383, 917, 384, 385, 0, 386, 387, 388, 389,
	390, 0, 392, 393, 394, 391, 395, 396, 397, 398,
	0, 399, 975, 400, 401, 402, 403, 855, 404, 0,
	405, 409, 410, 411, 412, 413, 414, 415, 0, 421,
	422, 890, 891, 893, 894, 417, 423, 424, 425, 949,
	426, 406, 407, 427, 428, 976, 429, 430, 912, 892,
	432, 0, 433, 434, 435, 436, 408, 437, 441, 960,
	438, 439, 440, 983, 0, 444, 445, 443, 0, 446,
	447, 448, 449, 450, 279, 888, 0, 452, 931, 932,
	933, 934, 0, 459, 0, 453, 454, 984, 455, 985,
	865, 456, 457, 458, 0, 460, 461, 0, 849, 462,
	463, 464, 465, 466, 468, 950, 469, 0, 896, 470,
	471, 472, 521, 928, 978, 0, 474, 473, 524, 0,
	0, 0, 0, 475, 476, 525, 477, 478, 479, 846,
	0, 0, 0, 0, 0, 844, 0, 0, 0, 0,
	0, 0, 842, 843, 901, 859, 860, 861, 857, 858,
	870, 871, 0, 0, 0, 869, 0, 0, 0, 0,
	0, 219, 220, 221, 222, 223, 0, 224, 0, 0,
	0, 0, 0, 952, 875, 0, 0, 0, 225, 227,
	226, 228, 229, 481, 916, 895, 927, 233, 885, 926,
	925, 0, 234, 887, 886, 237, 238, 239, 877, 951,
	240, 988, 989, 487, 0, 241, 958, 0, 939, 0,
	242, 243, 244, 245, 246, 247, 0, 249, 250, 251,
	248, 0, 252, 0, 253, 254, 255, 0, 961, 256,
	257, 942, 940, 941, 948, 944, 943, 947, 258, 259,
	260, 261, 930, 263, 923, 922, 848, 264, 0, 266,
	265, 0, 267, 0, 0, 268, 921, 270, 0, 271,
	0, 272, 273, 0, 274, 854, 275, 276, 278, 280,
	277, 281, 282, 283, 284, 979, 980, 866, 216, 0,
	0, 0, 0, 0, 285, 286, 287, 920, 918, 919,
	0, 290, 0, 291, 0, 0, 962, 292, 293, 0,
	294, 986, 0, 876, 295, 0, 296, 297, 298, 299,
	953, 954, 957, 351, 964, 300, 301, 0, 302, 303,
	897, 0, 0, 217, 304, 306, 313, 0, 963, 307,
	909, 900, 911, 913, 914, 915, 910, 0, 902, 0,
	314, 965, 955, 966, 315, 316, 317, 967, 935, 936,
	0, 0, 320, 321, 322, 323, 324, 0, 326, 325,
	0, 327, 987, 968, 328, 329, 969, 0, 330, 331,
	946, 945, 332, 333, 334, 0, 335, 336, 338, 340,
	337, 339, 341, 343, 889, 342, 970, 345, 346, 348,
	971, 347, 845, 218, 972, 349, 867, 956, 350, 924,
	352, 353, 0, 898, 355, 899, 0, 0, 358, 359,
	360, 0, 0, 361, 362, 507, 973, 363, 974, 981,
	364, 357, 365, 366, 367, 368, 369, 370, 371, 0,
	372, 373, 982, 374, 510, 375, 0, 376, 0, 377,
	378, 379, 380, 381, 382, 383, 917, 384, 385, 0,
	386, 387, 388, 389, 390, 0, 392, 393, 394, 391,
	395, 396, 397, 398, 0, 399, 975, 400, 401, 402,
	403, 855, 404, 0, 405, 409, 410, 411, 412, 413,
	414, 415, 0, 421, 422, 890, 891, 893, 894, 417,
	423, 424, 425, 949, 426, 406, 407, 427, 428, 976,
	429, 430, 912, 892, 432, 0, 433, 434, 435, 436,
	408, 437, 441, 960, 438, 439, 440, 983, 0, 444,
	445, 443, 0, 446, 447, 448, 449, 450, 279, 888,
	0, 452, 931, 932, 933, 934, 0, 459, 0, 453,
	454, 984, 455, 985, 865, 456, 457, 458, 0, 460,
	461, 0, 849, 462, 463, 464, 465, 466, 468, 950,
	469, 0, 896, 470, 471, 472, 521, 928, 978, 0,
	474, 473, 524, 0, 0, 0, 0, 475, 476, 525,
	477, 478, 479, 846, 0, 0, 0, 0, 0, 844,
	0, 0, 0, 0, 0, 0, 842, 843, 901, 859,
	860, 861, 857, 858, 870, 871, 0, 0, 0, 869,
	0, 0, 0, 0, 0, 219, 220, 221, 222, 223,
	0, 224, 0, 0, 0, 0, 0, 952, 875, 0,
	0, 0, 225, 227, 226, 228, 229, 481, 916, 895,
	927, 233, 885, 926, 925, 0, 234, 887, 886, 237,
	238, 239, 877, 951, 240, 988, 989, 487, 0, 241,
	958, 0, 939, 0, 242, 243, 244, 245, 246, 247,
	0, 249, 250, 251, 248, 0, 252, 0, 253, 254,
	255, 0, 961, 256, 3624, 942, 940, 941, 948, 944,
	943, 947, 258, 259, 260, 261, 930, 263, 923, 922,
	848, 264, 0, 266, 265, 0, 267, 0, 0, 268,
	921, 270, 0, 271, 0, 272, 273, 0, 274, 854,
	275, 276, 278, 280, 277, 281, 282, 283, 284, 979,
	980, 866, 216, 0, 0, 0, 0, 0, 285, 286,
	287, 920, 918, 919, 0, 290, 0, 291, 0, 0,
	962, 292, 293, 0, 294, 986, 0, 876, 295, 0,
	296, 297, 298, 299, 953, 954, 957, 351, 964, 300,
	301, 0, 302, 303, 897, 0, 0, 217, 304, 306,
	313, 0, 963, 307, 909, 900, 911, 913, 914, 915,
	910, 0, 902, 0, 314, 965, 955, 966, 315, 316,
	317, 967, 935, 936, 0, 0, 320, 321, 322, 323,
	324, 0, 326, 325, 0, 327, 987, 968, 328, 329,
	969, 0, 330, 331, 946, 945, 332, 333, 334, 0,
	335, 336, 338, 340, 337, 339, 341, 343, 889, 342,
	970, 345, 346, 348, 971, 347, 845, 218, 972, 349,
	867, 956, 350, 924, 352, 353, 0, 898, 355, 899,
	0, 0, 358, 359, 360, 0, 0, 361, 362, 507,
	973, 363, 974, 981, 364, 357, 365, 366, 367, 368,
	369, 370, 371, 0, 372, 373, 982, 374, 510, 375,
	0, 376, 0, 377, 378, 379, 380, 381, 382, 383,
	917, 384, 385, 0, 386, 387, 388, 389, 390, 0,
	392, 393, 394, 391, 395, 396, 397, 398, 0, 399,
	975, 400, 401, 402, 403, 855, 404, 0, 405, 409,
	410, 411, 412, 413, 414, 415, 0, 421, 422, 890,
	891, 893, 894, 417, 423, 424, 425, 949, 426, 406,
	407, 427, 428, 976, 429, 430, 912, 892, 432, 0,
	433, 434, 435, 436, 408, 437, 441, 960, 438, 439,
	440, 983, 0, 444, 445, 443, 0, 446, 447, 448,
	449, 450, 279, 888, 0, 452, 931, 932, 933, 934,
	0, 459, 0, 453, 454, 984, 455, 985, 865, 456,
	457, 458, 0, 3623, 461, 0, 849, 462, 463, 464,
	465, 466, 468, 950, 469, 0, 896, 470, 471, 472,
	521, 928, 978, 0, 474, 473, 524, 0, 0, 0,
	0, 475, 476, 525, 477, 478, 479, 846, 0, 0,
	0, 0, 0, 844, 0, 0, 0, 0, 0, 0,
	842, 843, 901, 859, 860, 861, 857, 858, 870, 871,
	0, 0, 0, 869, 0, 0, 0, 0, 0, 219,
	220, 221, 222, 223, 0, 224, 0, 0, 0, 0,
	0, 952, 875, 0, 0, 0, 225, 227, 226, 228,
	229, 3622, 916, 895, 927, 233, 885, 926, 925, 0,
	234, 887, 886, 237, 238, 239, 877, 951, 240, 988,
	989, 487, 0, 241, 958, 0, 939, 0, 242, 243,
	244, 245, 246, 247, 0, 249, 250, 251, 248, 0,
	252, 0, 253, 254, 255, 0, 961, 256, 3624, 942,
	940, 941, 948, 944, 943, 947, 258, 259, 260, 261,
	930, 263, 923, 922, 848, 264, 0, 266, 265, 0,
	267, 0, 0, 268, 921, 270, 0, 271, 0, 272,
	273, 0, 274, 854, 275, 276, 278, 280, 277, 281,
	282, 283, 284, 979, 980, 866, 216, 0, 0, 0,
	0, 0, 285, 286, 287, 920, 918, 919, 0, 290,
	0, 291, 0, 0, 962, 292, 293, 0, 294, 986,
	0, 876, 295, 0, 296, 297, 298, 299, 953, 954,
	957, 351, 964, 300, 301, 0, 302, 303, 897, 0,
	0, 217, 304, 306, 313, 0, 963, 307, 909, 900,
	911, 913, 914, 915, 910, 0, 902, 0, 314, 965,
	955, 966, 315, 316, 317, 967, 935, 936, 0, 0,
	320, 321, 322, 323, 324, 0, 326, 325, 0, 327,
	987, 968, 328, 329, 969, 0, 330, 331, 946, 945,
	332, 333, 334, 0, 335, 336, 338, 340, 337, 339,
	341, 343, 889, 342, 970, 345, 346, 348, 971, 347,
	845, 218, 972, 349, 867, 956, 350, 924, 352, 353,
	0, 898, 355, 899, 0, 0, 358, 359, 360, 0,
	0, 361, 362, 507, 973, 363, 974, 981, 364, 357,
	365, 366, 367, 368, 369, 370, 371, 0, 372, 373,
	982, 374, 510, 375, 0, 376, 0, 377, 378, 379,
	380, 381, 382, 383, 917, 384, 385, 0, 386, 387,
	388, 389, 390, 0, 392, 393, 394, 391, 395, 396,
	397, 398, 0, 399, 975, 400, 401, 402, 403, 855,
	404, 0, 405, 409, 410, 411, 412, 413, 414, 415,
	0, 421, 422, 890, 891, 893, 894, 417, 423, 424,
	425, 949, 426, 406, 407, 427, 428, 976, 429, 430,
	912, 892, 432, 0, 433, 434, 435, 436, 408, 437,
	441, 960, 438, 439, 440, 983, 0, 444, 445, 443,
	0, 446, 447, 448, 449, 450, 279, 888, 0, 452,
	931, 932, 933, 934, 0, 459, 0, 453, 454, 984,
	455, 985, 865, 456, 457, 458, 0, 3623, 461, 0,
	849, 462, 463, 464, 465, 466, 468, 950, 469, 0,
	896, 470, 471, 472, 521, 928, 978, 0, 474, 473,
	524, 0, 0, 0, 0, 475, 476, 525, 477, 478,
	479, 846, 0, 0, 0, 0, 0, 844, 0, 0,
	0, 0, 0, 0, 842, 843, 901, 859, 860, 861,
	2543, 2544, 870, 871, 0, 0, 0, 869, 0, 0,
	0, 0, 0, 219, 220, 221, 222, 223, 0, 224,
	0, 0, 0, 0, 0, 952, 875, 0, 0, 0,
	225, 227, 226, 228, 229, 481, 916, 895, 927, 233,
	885, 926, 925, 0, 234, 887, 886, 237, 238, 239,
	877, 951, 240, 988, 989, 487, 0, 241, 958, 0,
	939, 0, 242, 243, 244, 245, 246, 247, 0, 249,
	250, 251, 248, 0, 252, 0, 253, 254, 255, 0,
	961, 256, 257, 942, 940, 941, 948, 944, 943, 947,
	258, 259, 260, 261, 930, 263, 923, 922, 848, 264,
	0, 266, 265, 0, 267, 0, 0, 268, 921, 270,
	0, 271, 0, 272, 273, 0, 274, 854, 275, 276,
	278, 280, 277, 281, 282, 283, 284, 979, 980, 866,
	216, 0, 0, 0, 0, 0, 285, 286, 287, 920,
	918, 919, 0, 290, 0, 291, 0, 0, 962, 292,
	293, 0, 294, 986, 0, 876, 295, 0, 296, 297,
	298, 299, 953, 954, 957, 351, 964, 300, 301, 0,
	302, 303, 897, 0, 0, 217, 304, 306, 313, 0,
	963, 307, 909, 900, 911, 913, 914, 915, 910, 0,
	902, 0, 314, 965, 955, 966, 315, 316, 317, 967,
	935, 936, 0, 0, 320, 321, 322, 323, 324, 0,
	326, 325, 0, 327, 987, 968, 328, 329, 969, 0,
	330, 331, 946, 945, 332, 333, 334, 0, 335, 336,
	338, 340, 337, 339, 341, 343, 889, 342, 970, 345,
	346, 348, 971, 347, 845, 218, 972, 349, 867, 956,
	350, 924, 352, 353, 0, 898, 355, 899, 0, 0,
	358, 359, 360, 0, 0, 361, 362, 507, 973, 363,
	974, 981, 364, 357, 365, 366, 367, 368, 369, 370,
	371, 0, 372, 373, 982, 374, 510, 375, 0, 376,
	0, 377, 378, 379, 380, 381, 382, 383, 917, 384,
	385, 0, 386, 387, 388, 389, 390, 0, 392, 393,
	394, 391, 395, 396, 397, 398, 0, 399, 975, 400,
	401, 402, 403, 855, 404, 0, 405, 409, 410, 411,
	412, 413, 414, 415, 0, 421, 422, 890, 891, 893,
	894, 417, 423, 424, 425, 949, 426, 406, 407, 427,
	428, 976, 429, 430, 912, 892, 432, 0, 433, 434,
	435, 436, 408, 437, 441, 960, 438, 439, 440, 983,
	0, 444, 445, 443, 0, 446, 447, 448, 449, 450,
	279, 888, 0, 452, 931, 932, 933, 934, 0, 459,
	0, 453, 454, 984, 455, 985, 865, 456, 457, 458,
	0, 460, 461, 0, 849, 462, 463, 464, 465, 466,
	468, 950, 469, 0, 896, 470, 471, 472, 521, 928,
	978, 0, 474, 473, 524, 0, 0, 0, 0, 475,
	476, 525, 477, 478, 479, 846, 0, 0, 0, 0,
	0, 844, 0, 0, 0, 0, 0, 0, 842, 843,
	901, 859, 860, 861, 2541, 2542, 870, 871, 0, 0,
	0, 869, 0, 0, 0, 0, 0, 219, 220, 221,
	222, 223, 0, 224, 0, 0, 0, 0, 0, 952,
	875, 0, 0, 0, 225, 227, 226, 228, 229, 481,
	916, 895, 927, 233, 885, 926, 925, 0, 234, 887,
	886, 237, 238, 239, 877, 951, 240, 988, 989, 487,
	0, 241, 958, 0, 939, 0, 242, 243, 244, 245,
	246, 247, 0, 249, 250, 251, 248, 0, 252, 0,
	253, 254, 255, 0, 961, 256, 257, 942, 940, 941,
	948, 944, 943, 947, 258, 259, 260, 261, 930, 263,
	923, 922, 848, 264, 0, 266, 265, 0, 267, 0,
	0, 268, 921, 270, 0, 271, 0, 272, 273, 0,
	274, 854, 275, 276, 278, 280, 277, 281, 282, 283,
	284, 979, 980, 866, 216, 0, 0, 0, 0, 0,
	285, 286, 287, 920, 918, 919, 0, 290, 0, 291,
	0, 0, 962, 292, 293, 0, 294, 986, 0, 876,
	295, 0, 296, 297, 298, 299, 953, 954, 957, 351,
	964, 300, 301, 0, 302, 303, 897, 0, 0, 217,
	304, 306, 313, 0, 963, 307, 909, 900, 911, 913,
	914, 915, 910, 0, 902, 0, 314, 965, 955, 966,
	315, 316, 317, 967, 935, 936, 0, 0, 320, 321,
	322, 323, 324, 0, 326, 325, 0, 327, 987, 968,
	328, 329, 969, 0, 330, 331, 946, 945, 332, 333,
	334, 0, 335, 336, 338, 340, 337, 339, 341, 343,
	889, 342, 970, 345, 346, 348, 971, 347, 845, 218,
	972, 349, 867, 956, 350, 924, 352, 353, 0, 898,
	355, 899, 0, 0, 358, 359, 360, 0, 0, 361,
	362, 507, 973, 363, 974, 981, 364, 357, 365, 366,
	367, 368, 369, 370, 371, 0, 372, 373, 982, 374,
	510, 375, 0, 376, 0, 377, 378, 379, 380, 381,
	382, 383, 917, 384, 385, 0, 386, 387, 388, 389,
	390, 0, 392, 393, 394, 391, 395, 396, 397, 398,
	0, 399, 975, 400, 401, 402, 403, 855, 404, 0,
	405, 409, 410, 411, 412, 413, 414, 415, 0, 421,
	422, 890, 891, 893, 894, 417, 423, 424, 425, 949,
	426, 406, 407, 427, 428, 976, 429, 430, 912, 892,
	432, 0, 433, 434, 435, 436, 408, 437, 441, 960,
	438, 439, 440, 983, 0, 444, 445, 443, 0, 446,
	447, 448, 449, 450, 279, 888, 0, 452, 931, 932,
	933, 934, 0, 459, 0, 453, 454, 984, 455, 985,
	865, 456, 457, 458, 0, 460, 461, 0, 849, 462,
	463, 464, 465, 466, 468, 950, 469, 0, 896, 470,
	471, 472, 521, 928, 978, 0, 474, 473, 524, 0,
	0, 0, 0, 475, 476, 525, 477, 478, 479, 846,
	0, 0, 0, 0, 0, 844, 0, 0, 0, 0,
	0, 0, 842, 843, 901, 859, 860, 861, 857, 858,
	870, 871, 0, 0, 0, 869, 0, 0, 0, 0,
	0, 219, 220, 221, 222, 223, 0, 224, 0, 0,
	0, 0, 0, 952, 875, 0, 0, 0, 225, 227,
	226, 228, 229, 481, 916, 895, 927, 233, 885, 926,
	925, 0, 234, 887, 886, 237, 238, 239, 877, 951,
	240, 988, 989, 487, 0, 241, 958, 0, 939, 0,
	242, 243, 244, 245, 246, 247, 0, 249, 250, 251,
	248, 0, 252, 0, 253, 254, 255, 0, 961, 256,
	257, 942, 940, 941, 948, 944, 943, 947, 258, 259,
	260, 261, 930, 263, 923, 922, 848, 264, 0, 266,
	265, 0, 267, 0, 0, 268, 921, 270, 0, 271,
	0, 272, 273, 0, 274, 854, 275, 276, 278, 280,
	277, 281, 282, 283, 284, 979, 980, 866, 216, 0,
	0, 0, 0, 0, 285, 286, 287, 920, 918, 919,
	0, 290, 0, 291, 0, 0, 962, 292, 293, 0,
	294, 986, 0, 876, 295, 0, 296, 297, 298, 299,
	953, 954, 957, 351, 964, 300, 301, 0, 302, 303,
	897, 0, 0, 217, 304, 306, 313, 0, 963, 307,
	909, 900, 911, 913, 914, 915, 910, 0, 902, 0,
	314, 965, 955, 966, 315, 316, 317, 967, 935, 936,
	0, 0, 320, 321, 322, 323, 324, 0, 326, 325,
	0, 327, 987, 968, 328, 329, 969, 0, 330, 331,
	946, 945, 332, 333, 334, 0, 335, 336, 338, 340,
	337, 339, 341, 343, 889, 342, 970, 345, 346, 348,
	971, 347, 845, 218, 972, 349, 867, 956, 350, 924,
	352, 353, 0, 898, 355, 899, 0, 0, 358, 359,
	360, 0, 0, 361, 362, 507, 973, 363, 974, 981,
	364, 357, 365, 366, 367, 368, 369, 370, 371, 0,
	372, 373, 982, 374, 510, 375, 0, 376, 0, 377,
	378, 379, 380, 381, 382, 383, 917, 384, 385, 0,
	386, 387, 388, 389, 390, 0, 392, 393, 394, 391,
	395, 396, 397, 398, 0, 399, 975, 400, 401, 402,
	403, 855, 404, 0, 405, 409, 410, 411, 412, 413,
	414, 415, 0, 421, 422, 890, 891, 893, 894, 417,
	423, 424, 425, 949, 426, 406, 407, 427, 428, 976,
	429, 430, 912, 892, 432, 0, 433, 434, 435, 436,
	408, 437, 441, 960, 438, 439, 440, 983, 0, 444,
	445, 443, 0, 446, 447, 448, 449, 450, 279, 888,
	0, 452, 931, 932, 933, 934, 0, 459, 0, 453,
	454, 984, 455, 985, 865, 456, 457, 458, 0, 460,
	461, 0, 849, 462, 463, 464, 465, 466, 468, 950,
	469, 0, 896, 470, 471, 472, 521, 928, 978, 0,
	474, 473, 524, 0, 0, 0, 0, 475, 476, 525,
	477, 478, 479, 846, 0, 0, 0, 0, 0, 844,
	0, 0, 0, 0, 0, 0, 2015, 2016, 901, 859,
	860, 861, 857, 858, 870, 871, 0, 0, 0, 869,
	0, 0, 0, 0, 0, 219, 220, 221, 222, 223,
	0, 224, 0, 0, 0, 0, 0, 952, 875, 0,
	0, 0, 225, 227, 226, 228, 229, 481, 916, 895,
	927, 233, 885, 926, 925, 0, 234, 887, 886, 237,
	238, 239, 877, 951, 240, 988, 989, 487, 0, 241,
	958, 0, 939, 0, 242, 243, 244, 245, 246, 247,
	0, 249, 250, 251, 248, 0, 252, 0, 253, 254,
	255, 0, 961, 256, 257, 942, 940, 941, 948, 944,
	943, 947, 258, 259, 260, 261, 930, 263, 923, 922,
	0, 264, 0, 266, 265, 0, 267, 0, 0, 268,
	921, 270, 0, 271, 0, 272, 273, 0, 274, 854,
	275, 276, 278, 280, 277, 281, 282, 283, 284, 979,
	980, 866, 216, 0, 0, 0, 0, 0, 285, 286,
	287, 920, 918, 919, 0, 290, 0, 291, 0, 0,
	962, 292, 293, 0, 294, 986, 0, 876, 295, 0,
	296, 297, 298, 299, 953, 954, 957, 351, 964, 300,
	301, 0, 302, 303, 897, 0, 0, 217, 304, 306,
	313, 0, 963, 307, 909, 900, 911, 913, 914, 915,
	910, 0, 902, 0, 314, 965, 955, 966, 315, 316,
	317, 967, 935, 936, 0, 0, 320, 321, 322, 323,
	324, 0, 326, 325, 0, 327, 987, 968, 328, 329,
	969, 0, 330, 331, 946, 945, 332, 333, 334, 0,
	335, 336, 338, 340, 337, 339, 341, 343, 889, 342,
	970, 345, 346, 348, 971, 347, 0, 218, 972, 349,
	867, 956, 350, 924, 352, 353, 0, 898, 355, 899,
	0, 0, 358, 359, 360, 0, 0, 361, 362, 507,
	973, 363, 974, 981, 364, 357, 365, 366, 367, 368,
	369, 370, 371, 0, 372, 373, 982, 374, 510, 375,
	0, 376, 0, 377, 378, 379, 380, 381, 382, 383,
	917, 384, 385, 0, 386, 387, 388, 389, 390, 0,
	392, 393, 394, 391, 395, 396, 397, 398, 0, 399,
	975, 400, 401, 402, 403, 855, 404, 0, 405, 409,
	410, 411, 412, 413, 414, 415, 0, 421, 422, 890,
	891, 893, 894, 417, 423, 424, 425, 949, 426, 406,
	407, 427, 428, 976, 429, 430, 912, 892, 432, 0,
	433, 434, 435, 436, 408, 437, 441, 960, 438, 439,
	440, 983, 0, 444, 445, 443, 0, 446, 447, 448,
	449, 450, 279, 888, 0, 452, 931, 932, 933, 934,
	0, 459, 0, 453, 454, 984, 455, 985, 865, 456,
	457, 458, 0, 460, 461, 0, 0, 462, 463, 464,
	465, 466, 468, 950, 469, 0, 896, 470, 471, 472,
	521, 928, 978, 0, 474, 473, 524, 0, 0, 0,
	0, 475, 476, 525, 477, 478, 479, 0, 0, 0,
	0, 0, 0, 2201, 0, 0, 0, 0, 0, 0,
	2199, 2200, 901, 859, 860, 861, 857, 858, 870, 871,
	0, 0, 0, 869, 0, 0, 0, 0, 0, 219,
	220, 221, 222, 223, 0, 224, 0, 0, 0, 0,
	0, 952, 875, 0, 0, 0, 225, 227, 226, 228,
	229, 481, 916, 895, 927, 233, 885, 926, 925, 0,
	234, 887, 886, 237, 238, 239, 877, 951, 240, 988,
	989, 487, 0, 241, 958, 0, 939, 0, 242, 243,
	244, 245, 246, 247, 0, 249, 250, 251, 248, 0,
	252, 0, 253, 254, 255, 0, 961, 256, 257, 942,
	940, 941, 948, 944, 943, 947, 258, 259, 260, 261,
	930, 263, 923, 922, 0, 264, 0, 266, 265, 0,
	267, 0, 0, 268, 921, 270, 0, 271, 0, 272,
	273, 0, 274, 854, 275, 276, 278, 280, 277, 281,
	282, 283, 284, 979, 980, 866, 216, 0, 0, 0,
	0, 0, 285, 286, 287, 920, 918, 919, 0, 290,
	0, 291, 0, 0, 962, 292, 293, 0, 294, 986,
	0, 876, 295, 0, 296, 297, 298, 299, 953, 954,
	957, 351, 964, 300, 301, 0, 302, 303, 897, 0,
	0, 217, 304, 306, 313, 0, 963, 307, 909, 900,
	911, 913, 914, 915, 910, 0, 902, 0, 314, 965,
	955, 966, 315, 316, 317, 967, 935, 936, 0, 0,
	320, 321, 322, 323, 324, 0, 326, 325, 0, 327,
	987, 968, 328, 329, 969, 0, 330, 331, 946, 945,
	332, 333, 334, 0, 335, 336, 338, 340, 337, 339,
	341, 343, 889, 342, 970, 345, 346, 348, 971, 347,
	0, 218, 972, 349, 867, 956, 350, 924, 352, 353,
	0, 898, 355, 899, 0, 0, 358, 359, 360, 0,
	0, 361, 362, 507, 973, 363, 974, 981, 364, 357,
	365, 366, 367, 368, 369, 370, 371, 0, 372, 373,
	982, 374, 510, 375, 0, 376, 0, 377, 378, 379,
	380, 381, 382, 383, 917, 384, 385, 0, 386, 387,
	388, 389, 390, 0, 392, 393, 394, 391, 395, 396,
	397, 398, 0, 399, 975, 400, 401, 402, 403, 2536,
	2537, 0, 405, 409, 410, 411, 412, 413, 414, 415,
	0, 421, 422, 890, 891, 893, 894, 417, 423, 424,
	425, 949, 426, 406, 407, 427, 428, 976, 429, 430,
	912, 892, 432, 0, 433, 434, 435, 436, 408, 437,
	441, 960, 438, 439, 440, 983, 0, 444, 445, 443,
	0, 446, 447, 448, 449, 450, 279, 888, 0, 452,
	931, 932, 933, 934, 0, 459, 0, 453, 454, 984,
	455, 985, 865, 456, 457, 458, 0, 460, 461, 0,
	0, 462, 463, 464, 465, 466, 468, 950, 469, 0,
	896, 470, 471, 472, 521, 928, 978, 0, 474, 473,
	524, 0, 0, 0, 0, 475, 476, 525, 477, 478,
	479, 901, 859, 860, 861, 857, 858, 870, 0, 0,
	0, 0, 0, 0, 1763, 1764, 0, 0, 219, 220,
	221, 222, 223, 871, 224, 0, 0, 869, 0, 0,
	952, 875, 0, 0, 0, 225, 227, 226, 228, 229,
	481, 916, 895, 927, 233, 885, 926, 925, 0, 234,
	887, 886, 237, 238, 239, 0, 951, 240, 988, 989,
	487, 0, 241, 958, 0, 939, 0, 242, 243, 244,
	245, 246, 247, 0, 249, 250, 251, 248, 0, 252,
	0, 253, 254, 255, 0, 961, 256, 257, 942, 940,
	941, 948, 944, 943, 947, 258, 259, 260, 261, 930,
	263, 923, 922, 0, 264, 0, 266, 265, 0, 267,
	0, 0, 268, 921, 270, 0, 271, 0, 272, 273,
	0, 274, 491, 275, 276, 278, 280, 277, 281, 282,
	283, 284, 979, 980, 866, 216, 0, 0, 0, 0,
	0, 285, 286, 287, 920, 918, 919, 0, 290, 0,
	291, 0, 0, 962, 292, 293, 0, 294, 986, 0,
	876, 295, 0, 296, 297, 298, 299, 953, 954, 957,
	351, 964, 300, 301, 0, 302, 303, 897, 0, 0,
	217, 304, 306, 313, 0, 963, 307, 909, 900, 911,
	913, 914, 915, 910, 0, 902, 0, 314, 965, 955,
	966, 315, 316, 317, 967, 935, 936, 0, 0, 320,
	321, 322, 323, 324, 0, 326, 325, 0, 327, 987,
	968, 328, 329, 969, 0, 330, 331, 946, 945, 332,
	333, 334, 0, 335, 336, 338, 340, 337, 339, 341,
	343, 889, 342, 970, 345, 346, 348, 971, 347, 0,
	218, 972, 349, 867, 956, 350, 924, 352, 353, 0,
	898, 355, 899, 0, 0, 358, 359, 360, 0, 0,
	361, 362, 507, 973, 363, 974, 981, 364, 357, 365,
	366, 367, 368, 369, 370, 371, 0, 372, 373, 982,
	374, 510, 375, 0, 376, 0, 377, 378, 379, 380,
	381, 382, 383, 917, 384, 385, 0, 386, 387, 388,
	389, 390, 0, 392, 393, 394, 391, 395, 396, 397,
	398, 0, 399, 975, 400, 401, 402, 403, 855, 404,
	0, 405, 409, 410, 411, 412, 413, 414, 415, 0,
	421, 422, 890, 891, 893, 894, 417, 423, 424, 425,
	949, 426, 406, 407, 427, 428, 976, 429, 430, 912,
	892, 432, 0, 433, 434, 435, 436, 408, 437, 441,
	960, 438, 439, 440, 983, 0, 444, 445, 443, 0,
	446, 447, 448, 449, 450, 279, 888, 0, 452, 931,
	932, 933, 934, 0, 459, 0, 453, 454, 984, 455,
	985, 865, 456, 457, 458, 0, 460, 461, 0, 0,
	462, 463, 464, 465, 466, 468, 950, 469, 0, 896,
	470, 471, 472, 521, 928, 978, 0, 474, 473, 524,
	0, 0, 0, 0, 475, 476, 525, 477, 478, 479,
	901, 859, 860, 861, 857, 858, 870, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 219, 220, 221,
	222, 223, 871, 224, 0, 0, 869, 0, 0, 952,
	875, 0, 0, 0, 225, 227, 226, 228, 229, 0,
	916, 895, 927, 233, 885, 926, 925, 0, 234, 887,
	886, 237, 238, 239, 877, 951, 240, 988, 989, 487,
	0, 241, 958, 0, 939, 0, 242, 243, 244, 245,
	246, 247, 0, 249, 250, 251, 248, 0, 252, 0,
	253, 254, 255, 0, 961, 256, 3624, 942, 940, 941,
	948, 944, 943, 947, 258, 259, 260, 261, 930, 263,
	923, 922, 848, 264, 0, 266, 265, 0, 267, 0,
	0, 268, 921, 270, 0, 271, 0, 272, 273, 0,
	274, 854, 275, 276, 278, 280, 277, 281, 282, 283,
	284, 979, 980, 866, 216, 0, 0, 0, 0, 0,
	285, 286, 287, 920, 918, 919, 0, 290, 0, 291,
	0, 0, 962, 292, 293, 0, 294, 986, 0, 876,
	295, 0, 296, 297, 298, 299, 953, 954, 957, 351,
	0, 300, 301, 0, 302, 303, 897, 0, 0, 217,
	304, 306, 313, 0, 963, 307, 909, 900, 911, 913,
	914, 915, 910, 0, 902, 0, 314, 0, 955, 0,
	315, 316, 317, 967, 935, 936, 0, 0, 320, 321,
	322, 323, 324, 0, 326, 325, 0, 327, 987, 968,
	328, 329, 0, 0, 330, 331, 946, 945, 332, 333,
	334, 0, 335, 336, 338, 340, 337, 339, 341, 343,
	889, 342, 970, 345, 346, 348, 971, 347, 845, 218,
	0, 349, 867, 956, 350, 924, 352, 353, 0, 898,
	355, 899, 0, 0, 358, 359, 360, 0, 0, 361,
	362, 507, 973, 363, 974, 981, 364, 357, 365, 366,
	367, 368, 369, 370, 371, 0, 372, 373, 982, 374,
	510, 375, 0, 376, 0, 377, 378, 379, 380, 381,
	382, 383, 917, 384, 385, 0, 386, 387, 388, 389,
	390, 0, 392, 393, 394, 391, 395, 396, 397, 398,
	0, 399, 975, 400, 401, 402, 403, 855, 404, 0,
	405, 409, 410, 411, 412, 413, 414, 415, 0, 421,
	422, 890, 891, 893, 894, 417, 423, 424, 425, 949,
	426, 406, 407, 427, 428, 0, 429, 430, 912, 892,
	432, 0, 433, 434, 435, 436, 408, 437, 441, 960,
	438, 439, 440, 983, 0, 444, 445, 443, 0, 446,
	447, 448, 449, 450, 279, 888, 0, 452, 931, 932,
	933, 934, 0, 459, 0, 453, 454, 984, 455, 985,
	865, 456, 457, 458, 0, 3623, 461, 0, 849, 462,
	463, 464, 465, 466, 468, 950, 469, 0, 896, 470,
	471, 472, 521, 928, 978, 0, 474, 473, 524, 0,
	0, 0, 0, 475, 476, 525, 477, 478, 479, 0,
	0, 0, 0, 0, 0, 0, 0, 835, 0, 1026,
	0, 0, 842, 843, 0, 0, 0, 0, 0, 0,
	0, 871, 0, 0, 0, 869, 219, 220, 221, 222,
	223, 0, 224, 0, 0, 0, 0, 0, 952, 0,
	0, 0, 0, 225, 227, 226, 228, 229, 481, 482,
	230, 483, 233, 231, 232, 484, 0, 234, 235, 236,
	237, 238, 239, 0, 951, 240, 485, 486, 487, 0,
	241, 958, 0, 939, 0, 242, 243, 244, 245, 246,
	247, 0, 249, 250, 251, 248, 0, 252, 0, 253,
	254, 255, 0, 961, 256, 257, 942, 940, 941, 948,
	944, 943, 947, 258, 259, 260, 261, 262, 263, 489,
	490, 0, 264, 0, 266, 265, 0, 267, 0, 0,
	268, 269, 270, 0, 271, 0, 272, 273, 0, 274,
	491, 275, 276, 278, 280, 277, 281, 282, 283, 284,
	979, 980, 0, 216, 0, 0, 0, 0, 0, 285,
	286, 287, 494, 288, 289, 0, 290, 0, 291, 0,
	0, 962, 292, 293, 0, 294, 986, 0, 496, 295,
	0, 296, 297, 298, 299, 953, 954, 957, 351, 964,
	300, 301, 0, 302, 303, 305, 0, 0, 217, 304,
	306, 313, 0, 963, 307, 500, 309, 308, 310, 311,
	312, 501, 0, 502, 0, 314, 965, 955, 966, 315,
	316, 317, 967, 318, 319, 0, 0, 320, 321, 322,
	323, 324, 1012, 326, 325, 0, 327, 987, 968, 328,
	329, 969, 0, 330, 331, 946, 945, 332, 333, 334,
	0, 335, 336, 338, 340, 337, 339, 341, 343, 344,
	342, 970, 345, 346, 348, 971, 347, 0, 218, 972,
	349, 0, 956, 350, 506, 352, 353, 0, 354, 355,
	356, 0, 1018, 358, 359, 360, 0, 0, 361, 362,
	507, 973, 363, 974, 981, 364, 357, 365, 366, 367,
	368, 369, 370, 371, 0, 372, 373, 982, 374, 510,
	375, 0, 376, 0, 377, 378, 379, 380, 381, 382,
	383, 511, 384, 385, 0, 386, 387, 388, 389, 390,
	0, 392, 393, 394, 391, 395, 396, 397, 398, 0,
	399, 975, 400, 401, 402, 403, 512, 1020, 0, 405,
	409, 410, 411, 412, 413, 414, 415, 182, 421, 422,
	416, 418, 419, 420, 417, 423, 424, 425, 949, 426,
	406, 407, 427, 428, 976, 429, 430, 513, 431, 432,
	0, 433, 434, 435, 436, 408, 437, 441, 442, 438,
	439, 440, 983, 0, 444, 445, 443, 184, 446, 447,
	448, 449, 450, 279, 451, 0, 452, 515, 516, 517,
	518, 0, 459, 0, 453, 454, 984, 455, 985, 0,
	456, 457, 458, 0, 460, 461, 0, 0, 462, 463,
	464, 465, 466, 468, 950, 469, 0, 467, 470, 471,
	472, 1336, 522, 523, 0, 474, 473, 524, 1026, 0,
	0, 176, 475, 476, 525, 477, 478, 479, 0, 177,
	0, 0, 0, 0, 0, 219, 220, 221, 222, 223,
	0, 224, 0, 0, 0, 0, 0, 952, 1016, 0,
	1633, 0, 225, 227, 226, 228, 229, 481, 482, 230,
	483, 233, 231, 232, 484, 0, 234, 235, 236, 237,
	238, 239, 0, 951, 240, 485, 486, 487, 0, 241,
	958, 0, 939, 0, 242, 243, 244, 245, 246, 247,
	0, 249, 250, 251, 248, 0, 252, 0, 253, 254,
	255, 0, 961, 256, 257, 942, 940, 941, 948, 944,
	943, 947, 258, 259, 260, 261, 262, 263, 489, 490,
	0, 264, 0, 266, 265, 0, 267, 0, 0, 268,
	269, 270, 0, 271, 0, 272, 273, 0, 274, 491,
	275, 276, 278, 280, 277, 281, 282, 283, 284, 979,
	980, 0, 216, 0, 0, 0, 0, 0, 285, 286,
	287, 494, 288, 289, 0, 290, 0, 291, 0, 0,
	962, 292, 293, 0, 294, 986, 0, 496, 295, 0,
	296, 297, 298, 299, 953, 954, 957, 351, 964, 300,
	301, 0, 302, 303, 305, 0, 0, 217, 304, 306,
	313, 0, 963, 307, 500, 309, 308, 310, 311, 312,
	501, 0, 502, 0, 314, 965, 955, 966, 315, 316,
	317, 967, 318, 319, 0, 0, 320, 321, 322, 323,
	324, 1012, 326, 325, 0, 327, 987, 968, 328, 329,
	969, 0, 330, 331, 946, 945, 332, 333, 334, 0,
	335, 336, 338, 340, 337, 339, 341, 343, 344, 342,
	970, 345, 346, 348, 971, 347, 0, 218, 972, 349,
	0, 956, 350, 506, 352, 353, 0, 354, 355, 356,
	0, 1018, 358, 359, 360, 0, 0, 361, 362, 507,
	973, 363, 974, 981, 364, 357, 365, 366, 367, 368,
	369, 370, 371, 0, 372, 373, 982, 374, 510, 375,
	0, 376, 0, 377, 378, 379, 380, 381, 382, 383,
	511, 384, 385, 0, 386, 387, 388, 389, 390, 0,
	392, 393, 394, 391, 395, 396, 397, 398, 0, 399,
	975, 400, 401, 402, 403, 512, 1020, 0, 405, 409,
	410, 411, 412, 413, 414, 415, 182, 421, 422, 416,
	418, 419, 420, 417, 423, 424, 425, 949, 426, 406,
	407, 427, 428, 976, 429, 430, 513, 431, 432, 0,
	433, 434, 435, 436, 408, 437, 441, 442, 438, 439,
	440, 983, 0, 444, 445, 443, 184, 446, 447, 448,
	449, 450, 279, 451, 0, 452, 515, 516, 517, 518,
	0, 459, 0, 453, 454, 984, 455, 985, 0, 456,
	457, 458, 0, 460, 461, 0, 0, 462, 463, 464,
	465, 466, 468, 950, 469, 0, 467, 470, 471, 472,
	1336, 522, 523, 0, 474, 473, 524, 2689, 0, 1026,
	176, 475, 476, 525, 477, 478, 479, 0, 177, 0,
	0, 0, 0, 0, 0, 0, 219, 220, 221, 222,
	223, 0, 224, 0, 0, 0, 0, 1016, 952, 1633,
	0, 0, 0, 225, 227, 226, 228, 229, 481, 482,
	230, 483, 233, 231, 232, 484, 0, 234, 235, 236,
	237, 238, 239, 0, 951, 240, 485, 486, 487, 0,
	241, 958, 0, 939, 0, 242, 243, 244, 245, 246,
	247, 0, 249, 250, 251, 248, 0, 252, 0, 253,
	254, 255, 0, 961, 256, 257, 942, 940, 941, 948,
	944, 943, 947, 258, 259, 260, 261, 262, 263, 489,
	490, 0, 264, 0, 266, 265, 0, 267, 0, 0,
	268, 269, 270, 0, 271, 0, 272, 273, 0, 274,
	491, 275, 276, 278, 280, 277, 281, 282, 283, 284,
	979, 980, 0, 216, 0, 0, 0, 0, 0, 285,
	286, 287, 494, 288, 289, 0, 290, 0, 291, 0,
	0, 962, 292, 293, 0, 294, 986, 0, 496, 295,
	0, 296, 297, 298, 299, 953, 954, 957, 351, 964,
	300, 301, 0, 302, 303, 305, 0, 0, 217, 304,
	306, 313, 0, 963, 307, 500, 309, 308, 310, 311,
	312, 501, 0, 502, 0, 314, 965, 955, 966, 315,
	316, 317, 967, 318, 319, 0, 0, 320, 321, 322,
	323, 324, 1012, 326, 325, 0, 327, 987, 968, 328,
	329, 969, 0, 330, 331, 946, 945, 332, 333, 334,
	0, 335, 336, 338, 340, 337, 339, 341, 343, 344,
	342, 970, 345, 346, 348, 971, 347, 0, 218, 972,
	349, 0, 956, 350, 506, 352, 353, 0, 354, 355,
	356, 0, 1018, 358, 359, 360, 0, 0, 361, 362,
	507, 973, 363, 974, 981, 364, 357, 365, 366, 367,
	368, 369, 370, 371, 0, 372, 373, 982, 374, 510,
	375, 0, 376, 0, 377, 378, 379, 380, 381, 382,
	383, 511, 384, 385, 0, 386, 387, 388, 389, 390,
	0, 392, 393, 394, 391, 395, 396, 397, 398, 0,
	399, 975, 400, 401, 402, 403, 512, 1020, 0, 405,
	409, 410, 411, 412, 413, 414, 415, 0, 421, 422,
	416, 418, 419, 420, 417, 423, 424, 425, 949, 426,
	406, 407, 427, 428, 976, 429, 430, 513, 431, 432,
	0, 433, 434, 435, 436, 408, 437, 441, 442, 438,
	439, 440, 983, 0, 444, 445, 443, 0, 446, 447,
	448, 449, 450, 279, 451, 0, 452, 515, 516, 517,
	518, 0, 459, 0, 453, 454, 984, 455, 985, 0,
	456, 457, 458, 0, 460, 461, 0, 0, 462, 463,
	464, 465, 466, 468, 950, 469, 0, 467, 470, 471,
	472, 521, 522, 523, 0, 474, 473, 524, 1008, 0,
	1026, 0, 475, 476, 525, 477, 478, 479, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 219, 220, 221,
	222, 223, 0, 224, 0, 0, 0, 0, 1016, 952,
	1014, 0, 0, 0, 225, 227, 226, 228, 229, 481,
	482, 230, 483, 233, 231, 232, 484, 0, 234, 235,
	236, 237, 238, 239, 0, 951, 240, 485, 486, 487,
	0, 241, 958, 0, 939, 0, 242, 243, 244, 245,
	246, 247, 0, 249, 250, 251, 248, 0, 252, 0,
	253, 254, 255, 0, 961, 256, 257, 942, 940, 941,
	948, 944, 943, 947, 258, 259, 260, 261, 262, 263,
	489, 490, 0, 264, 0, 266, 265, 0, 267, 0,
	0, 268, 269, 270, 0, 271, 0, 272, 273, 0,
	274, 491, 275, 276, 278, 280, 277, 281, 282, 283,
	284, 979, 980, 0, 216, 0, 0, 0, 0, 0,
	285, 286, 287, 494, 288, 289, 0, 290, 0, 291,
	0, 0, 962, 292, 293, 0, 294, 986, 0, 496,
	295, 0, 296, 297, 298, 299, 953, 954, 957, 351,
	964, 300, 301, 0, 302, 303, 305, 0, 0, 217,
	304, 306, 313, 0, 963, 307, 500, 309, 308, 310,
	311, 312, 501, 0, 502, 0, 314, 965, 955, 966,
	315, 316, 317, 967, 318, 319, 0, 0, 320, 321,
	322, 323, 324, 1012, 326, 325, 0, 327, 987, 968,
	328, 329, 969, 0, 330, 331, 946, 945, 332, 333,
	334, 0, 335, 336, 338, 340, 337, 339, 341, 343,
	344, 342, 970, 345, 346, 348, 971, 347, 0, 218,
	972, 349, 0, 956, 350, 506, 352, 353, 0, 354,
	355, 356, 0, 1018, 358, 359, 360, 0, 0, 361,
	362, 507, 973, 363, 974, 981, 364, 357, 365, 366,
	367, 368, 369, 370, 371, 0, 372, 373, 982, 374,
	510, 375, 0, 376, 0, 377, 378, 379, 380, 381,
	382, 383, 511, 384, 385, 0, 386, 387, 388, 389,
	390, 0, 392, 393, 394, 391, 395, 396, 397, 398,
	0, 399, 975, 400, 401, 402, 403, 512, 1020, 0,
	405, 409, 410, 411, 412, 413, 414, 415, 0, 421,
	422, 416, 418, 419, 420, 417, 423, 424, 425, 949,
	426, 406, 407, 427, 428, 976, 429, 430, 513, 431,
	432, 0, 433, 434, 435, 436, 408, 437, 441, 442,
	438, 439, 440, 983, 0, 444, 445, 443, 0, 446,
	447, 448, 449, 450, 279, 451, 0, 452, 515, 516,
	517, 518, 0, 459, 0, 453, 454, 984, 455, 985,
	0, 456, 457, 458, 0, 460, 461, 0, 0, 462,
	463, 464, 465, 466, 468, 950, 469, 0, 467, 470,
	471, 472, 521, 522, 523, 0, 474, 473, 524, 1026,
	0, 0, 0, 475, 476, 525, 477, 478, 479, 0,
	0, 0, 0, 0, 0, 0, 219, 220, 221, 222,
	223, 0, 224, 0, 0, 0, 0, 0, 952, 1016,
	0, 1014, 0, 225, 227, 226, 228, 229, 481, 482,
	230, 483, 233, 231, 232, 484, 0, 234, 235, 236,
	237, 238, 239, 0, 951, 240, 485, 486, 487, 0,
	241, 958, 0, 939, 0, 242, 243, 244, 245, 246,
	247, 0, 249, 250, 251, 248, 0, 252, 0, 253,
	254, 255, 0, 961, 256, 257, 942, 940, 941, 948,
	944, 943, 947, 258, 259, 260, 261, 262, 263, 489,
	490, 0, 264, 0, 266, 265, 0, 267, 0, 0,
	268, 269, 270, 0, 271, 0, 272, 273, 0, 274,
	491, 275, 276, 278, 280, 277, 281, 282, 283, 284,
	979, 980, 0, 216, 0, 0, 0, 0, 0, 285,
	286, 287, 494, 288, 289, 0, 290, 0, 291, 0,
	0, 962, 292, 293, 0, 294, 986, 0, 496, 295,
	0, 296, 297, 298, 299, 953, 954, 957, 351, 964,
	300, 301, 0, 302, 303, 305, 0, 0, 217, 304,
	306, 313, 0, 963, 307, 500, 309, 308, 310, 311,
	312, 501, 0, 502, 0, 314, 965, 955, 966, 315,
	316, 317, 967, 318, 319, 0, 0, 320, 321, 322,
	323, 324, 1012, 326, 325, 0, 327, 987, 968, 328,
	329, 969, 0, 330, 331, 946, 945, 332, 333, 334,
	0, 335, 336, 338, 340, 337, 339, 341, 343, 344,
	342, 970, 345, 346, 348, 971, 347, 0, 218, 972,
	349, 0, 956, 350, 506, 352, 353, 0, 354, 355,
	356, 0, 1018, 358, 359, 360, 0, 0, 361, 362,
	507, 973, 363, 974, 981, 364, 357, 365, 366, 367,
	368, 369, 370, 371, 0, 372, 373, 982, 374, 510,
	375, 0, 376, 0, 377, 378, 379, 380, 381, 382,
	383, 511, 384, 385, 0, 386, 387, 388, 389, 390,
	0, 392, 393, 394, 391, 395, 396, 397, 398, 0,
	399, 975, 400, 401, 402, 403, 512, 1020, 0, 405,
	409, 410, 411, 412, 413, 414, 415, 0, 421, 422,
	416, 418, 419, 420, 417, 423, 424, 425, 949, 426,
	406, 407, 427, 428, 976, 429, 430, 513, 431, 432,
	0, 433, 434, 435, 436, 408, 437, 441, 442, 438,
	439, 440, 983, 0, 444, 445, 443, 0, 446, 447,
	448, 449, 450, 279, 451, 0, 452, 515, 516, 517,
	518, 0, 459, 0, 453, 454, 984, 455, 985, 0,
	456, 457, 458, 0, 460, 461, 0, 0, 462, 463,
	464, 465, 466, 468, 950, 469, 0, 467, 470, 471,
	472, 521, 522, 523, 0, 474, 473, 524, 1026, 0,
	0, 0, 475, 476, 525, 477, 478, 479, 0, 0,
	0, 0, 0, 0, 0, 219, 220, 221, 222, 223,
	0, 224, 0, 0, 0, 0, 0, 952, 1016, 0,
	1014, 0, 225, 227, 226, 228, 229, 481, 482, 230,
	483, 233, 231, 232, 484, 0, 234, 235, 236, 237,
	238, 239, 0, 951, 240, 485, 486, 487, 0, 241,
	958, 0, 939, 0, 242, 243, 244, 245, 246, 247,
	0, 249, 250, 251, 248, 0, 252, 0, 253, 254,
	255, 0, 961, 256, 257, 942, 940, 941, 948, 944,
	943, 947, 258, 259, 260, 261, 262, 263, 489, 490,
	0, 264, 0, 266, 265, 0, 267, 0, 0, 268,
	269, 270, 0, 271, 0, 272, 273, 0, 274, 491,
	275, 276, 278, 280, 277, 281, 282, 283, 284, 979,
	980, 0, 216, 0, 0, 0, 0, 0, 285, 286,
	287, 494, 288, 289, 0, 290, 0, 291, 0, 0,
	962, 292, 293, 0, 294, 986, 0, 496, 295, 0,
	296, 297, 298, 299, 953, 954, 957, 351, 964, 300,
	301, 0, 302, 303, 305, 0, 0, 217, 304, 306,
	313, 0, 963, 307, 500, 309, 308, 310, 311, 312,
	501, 0, 502, 0, 314, 965, 955, 966, 315, 316,
	317, 967, 318, 319, 0, 0, 320, 321, 322, 323,
	324, 0, 326, 325, 0, 327, 987, 968, 328, 329,
	969, 0, 330, 331, 946, 945, 332, 333, 334, 0,
	335, 336, 338, 340, 337, 339, 341, 343, 344, 342,
	970, 345, 346, 348, 971, 347, 0, 218, 972, 349,
	0, 956, 350, 506, 352, 353, 0, 354, 355, 356,
	0, 0, 358, 359, 360, 0, 0, 361, 362, 507,
	973, 363, 974, 981, 364, 357, 365, 366, 367, 368,
	369, 370, 371, 0, 372, 373, 982, 374, 510, 375,
	0, 376, 0, 377, 378, 379, 380, 381, 382, 383,
	511, 384, 385, 0, 386, 387, 388, 389, 390, 0,
	392, 393, 394, 391, 395, 396, 397, 398, 0, 399,
	975, 400, 401, 402, 403, 512, 1020, 0, 405, 409,
	410, 411, 412, 413, 414, 415, 0, 421, 422, 416,
	418, 419, 420, 417, 423, 424, 425, 949, 426, 406,
	407, 427, 428, 976, 429, 430, 513, 431, 432, 0,
	433, 434, 435, 436, 408, 437, 441, 442, 438, 439,
	440, 983, 0, 444, 445, 443, 0, 446, 447, 448,
	449, 450, 279, 451, 0, 452, 515, 516, 517, 518,
	0, 459, 0, 453, 454, 984, 455, 985, 0, 456,
	457, 458, 0, 460, 461, 0, 0, 462, 463, 464,
	465, 466, 468, 950, 469, 0, 467, 470, 471, 472,
	521, 522, 523, 0, 474, 473, 524, 835, 0, 1185,
	0, 475, 476, 525, 477, 478, 479, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 219, 220, 221, 222,
	223, 0, 224, 0, 0, 0, 0, 0, 480, 1534,
	0, 0, 0, 225, 227, 226, 228, 229, 481, 482,
	230, 483, 233, 231, 232, 484, 0, 234, 235, 236,
	237, 238, 239, 0, 0, 240, 485, 486, 487, 0,
	241, 488, 0, 1089, 0, 242, 243, 244, 245, 246,
	247, 0, 249, 250, 251, 248, 0, 252, 0, 253,
	254, 255, 0, 961, 256, 257, 0, 0, 0, 0,
	0, 0, 0, 258, 259, 260, 261, 262, 263, 489,
	490, 0, 264, 0, 266, 265, 0, 267, 0, 0,
	268, 269, 270, 0, 271, 0, 272, 273, 0, 274,
	491, 275, 276, 278, 280, 277, 281, 282, 283, 284,
	492, 493, 0, 216, 0, 0, 0, 0, 0, 285,
	286, 287, 494, 288, 289, 0, 290, 0, 291, 0,
	0, 962, 292, 293, 0, 294, 495, 0, 496, 295,
	0, 296, 297, 298, 299, 497, 498, 499, 351, 964,
	300, 301, 0, 302, 303, 305, 0, 0, 0, 304,
	306, 313, 0, 963, 307, 500, 309, 308, 310, 311,
	312, 501, 0, 502, 0, 314, 965, 503, 966, 315,
	316, 317, 967, 318, 319, 0, 0, 320, 321, 322,
	323, 324, 0, 326, 325, 0, 327, 504, 968, 328,
	329, 969, 0, 330, 331, 0, 0, 332, 333, 334,
	0, 335, 336, 338, 340, 337, 339, 341, 343, 344,
	342, 970, 345, 346, 348, 971, 347, 0, 0, 972,
	349, 0, 505, 350, 506, 352, 353, 0, 354, 355,
	356, 0, 0, 358, 359, 360, 0, 0, 361, 362,
	507, 973, 363, 974, 508, 364, 357, 365, 366, 367,
	368, 369, 370, 371, 0, 372, 373, 509, 374, 510,
	375, 0, 376, 0, 377, 378, 379, 380, 381, 382,
	383, 511, 384, 385, 0, 386, 387, 388, 389, 390,
	0, 392, 393, 394, 391, 395, 396, 397, 398, 0,
	399, 975, 400, 401, 402, 403, 512, 404, 0, 405,
	409, 410, 411, 412, 413, 414, 415, 182, 421, 422,
	416, 418, 419, 420, 417, 423, 424, 425, 0, 426,
	406, 407, 427, 428, 976, 429, 430, 513, 431, 432,
	0, 433, 434, 435, 436, 408, 437, 441, 442, 438,
	439, 440, 514, 0, 444, 445, 443, 184, 446, 447,
	448, 449, 450, 279, 451, 0, 452, 515, 516, 517,
	518, 0, 459, 0, 453, 454, 519, 455, 520, 0,
	456, 457, 458, 0, 460, 461, 0, 0, 462, 463,
	464, 465, 466, 468, 0, 469, 0, 467, 470, 471,
	472, 1336, 522, 523, 0, 474, 473, 524, 1333, 0,
	1185, 176, 475, 476, 525, 477, 478, 479, 0, 177,
	0, 0, 0, 0, 0, 0, 0, 219, 220, 221,
	222, 223, 0, 224, 0, 0, 0, 0, 0, 480,
	151, 0, 0, 0, 225, 227, 226, 228, 229, 481,
	482, 230, 483, 233, 231, 232, 484, 0, 234, 235,
	236, 237, 238, 239, 0, 0, 240, 485, 486, 487,
	0, 241, 488, 0, 1089, 0, 242, 243, 244, 245,
	246, 247, 0, 249, 250, 251, 248, 0, 252, 0,
	253, 254, 255, 0, 961, 256, 257, 0, 0, 0,
	0, 0, 0, 0, 258, 259, 260, 261, 262, 263,
	489, 490, 0, 264, 0, 266, 265, 0, 267, 0,
	0, 268, 269, 270, 0, 271, 0, 272, 273, 0,
	274, 491, 275, 276, 278, 280, 277, 281, 282, 283,
	284, 492, 493, 0, 216, 0, 0, 0, 0, 0,
	285, 286, 287, 494, 288, 289, 0, 290, 0, 291,
	0, 0, 962, 292, 293, 0, 294, 495, 0, 496,
	295, 0, 296, 297, 298, 299, 497, 498, 499, 351,
	964, 300, 301, 0, 302, 303, 305, 0, 0, 0,
	304, 306, 313, 0, 963, 307, 500, 309, 308, 310,
	311, 312, 501, 0, 502, 0, 314, 965, 503, 966,
	315, 316, 317, 967, 318, 319, 0, 0, 320, 321,
	322, 323, 324, 0, 326, 325, 0, 327, 504, 968,
	328, 329, 969, 0, 330, 331, 0, 0, 332, 333,
	334, 0, 335, 336, 338, 340, 337, 339, 341, 343,
	344, 342, 970, 345, 346, 348, 971, 347, 0, 0,
	972, 349, 0, 505, 350, 506, 352, 353, 0, 354,
	355, 356, 0, 0, 358, 359, 360, 0, 0, 361,
	362, 507, 973, 363, 974, 508, 364, 357, 365, 366,
	367, 368, 369, 370, 371, 0, 372, 373, 509, 374,
	510, 375, 0, 376, 0, 377, 378, 379, 380, 381,
	382, 383, 511, 384, 385, 0, 386, 387, 388, 389,
	390, 0, 392, 393, 394, 391, 395, 396, 397, 398,
	0, 399, 975, 400, 401, 402, 403, 512, 404, 0,
	405, 409, 410, 411, 412, 413, 414, 415, 182, 421,
	422, 416, 418, 419, 420, 417, 423, 424, 425, 0,
	426, 406, 407, 427, 428, 976, 429, 430, 513, 431,
	432, 0, 433, 434, 435, 436, 408, 437, 441, 442,
	438, 439, 440, 514, 0, 444, 445, 443, 184, 446,
	447, 448, 449, 450, 279, 451, 0, 452, 515, 516,
	517, 518, 0, 459, 0, 453, 454, 519, 455, 520,
	0, 456, 457, 458, 0, 460, 461, 0, 0, 462,
	463, 464, 465, 466, 468, 0, 469, 0, 467, 470,
	471, 472, 1336, 522, 523, 0, 474, 473, 524, 0,
	0, 0, 176, 475, 476, 525, 477, 478, 479, 0,
	177, 0, 0, 0, 0, 1185, 1184, 0, 0, 0,
	0, 1182, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 151, 219, 220, 221, 222, 223, 0, 224, 0,
	0, 0, 0, 0, 480, 0, 0, 0, 0, 225,
	227, 226, 228, 229, 481, 482, 230, 483, 233, 231,
	232, 484, 0, 234, 235, 236, 237, 238, 239, 0,
	0, 240, 485, 486, 487, 0, 241, 488, 0, 1089,
	0, 242, 243, 244, 245, 246, 247, 0, 249, 250,
	251, 248, 0, 252, 0, 253, 254, 255, 0, 961,
	256, 257, 0, 0, 0, 0, 0, 0, 0, 258,
	259, 260, 261, 262, 263, 489, 490, 0, 264, 0,
	266, 265, 0, 267, 0, 0, 268, 269, 270, 0,
	271, 0, 272, 273, 0, 274, 491, 275, 276, 278,
	280, 277, 281, 282, 283, 284, 492, 493, 0, 216,
	0, 0, 0, 0, 0, 285, 286, 287, 494, 288,
	289, 0, 290, 0, 291, 0, 0, 962, 292, 293,
	0, 294, 495, 0, 496, 295, 0, 296, 297, 298,
	299, 497, 498, 499, 351, 964, 300, 301, 0, 302,
	303, 305, 0, 0, 0, 304, 306, 313, 0, 963,
	307, 500, 309, 308, 310, 311, 312, 501, 0, 502,
	0, 314, 965, 503, 966, 315, 316, 317, 967, 318,
	319, 0, 0, 320, 321, 322, 323, 324, 0, 326,
	325, 0, 327, 504, 968, 328, 329, 969, 0, 330,
	331, 0, 0, 332, 333, 334, 0, 335, 336, 338,
	340, 337, 339, 341, 343, 344, 342, 970, 345, 346,
	348, 971, 347, 0, 0, 972, 349, 0, 505, 350,
	506, 352, 353, 0, 354, 355, 356, 0, 0, 358,
	359, 360, 0, 0, 361, 362, 507, 973, 363, 974,
	508, 364, 357, 365, 366, 367, 368, 369, 370, 371,
	0, 372, 373, 509, 374, 510, 375, 0, 376, 0,
	377, 378, 379, 380, 381, 382, 383, 511, 384, 385,
	0, 386, 387, 388, 389, 390, 0, 392, 393, 394,
	391, 395, 396, 397, 398, 0, 399, 975, 400, 401,
	402, 403, 512, 404, 0, 405, 409, 410, 411, 412,
	413, 414, 415, 0, 421, 422, 416, 418, 419, 420,
	417, 423, 424, 425, 0, 426, 406, 407, 427, 428,
	976, 429, 430, 513, 431, 432, 0, 433, 434, 435,
	436, 408, 437, 441, 442, 438, 439, 440, 514, 0,
	444, 445, 443, 0, 446, 447, 448, 449, 450, 279,
	451, 0, 452, 515, 516, 517, 518, 0, 459, 0,
	453, 454, 519, 455, 520, 0, 456, 457, 458, 0,
	460, 461, 0, 0, 462, 463, 464, 465, 466, 468,
	0, 469, 0, 467, 470, 471, 472, 521, 522, 523,
	0, 474, 473, 524, 0, 0, 0, 0, 475, 476,
	525, 477, 478, 479, 1185, 1184, 0, 0, 0, 0,
	1182, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 219, 220, 221, 222, 223, 2891, 224, 0, 0,
	0, 0, 0, 480, 0, 0, 0, 0, 225, 227,
	226, 228, 229, 481, 482, 230, 483, 233, 231, 232,
	484, 0, 234, 235, 236, 237, 238, 239, 0, 0,
	240, 485, 486, 487, 0, 241, 488, 0, 1089, 0,
	242, 243, 244, 245, 246, 247, 0, 249, 250, 251,
	248, 0, 252, 0, 253, 254, 255, 0, 961, 256,
	257, 0, 0, 0, 0, 0, 0, 0, 258, 259,
	260, 261, 262, 263, 489, 490, 0, 264, 0, 266,
	265, 0, 267, 0, 0, 268, 269, 270, 0, 271,
	0, 272, 273, 0, 274, 491, 275, 276, 278, 280,
	277, 281, 282, 283, 284, 492, 493, 0, 216, 0,
	0, 0, 0, 0, 285, 286, 287, 494, 288, 289,
	0, 290, 0, 291, 0, 0, 962, 292, 293, 0,
	294, 495, 0, 496, 295, 0, 296, 297, 298, 299,
	497, 498, 499, 351, 964, 300, 301, 0, 302, 303,
	305, 0, 0, 0, 304, 306, 313, 0, 963, 307,
	500, 309, 308, 310, 311, 312, 501, 0, 502, 0,
	314, 965, 503, 966, 315, 316, 317, 967, 318, 319,
	0, 0, 320, 321, 322, 323, 324, 0, 326, 325,
	0, 327, 504, 968, 328, 329, 969, 0, 330, 331,
	0, 0, 332, 333, 334, 0, 335, 336, 338, 340,
	337, 339, 341, 343, 344, 342, 970, 345, 346, 348,
	971, 347, 0, 0, 972, 349, 0, 505, 350, 506,
	352, 353, 0, 354, 355, 356, 0, 0, 358, 359,
	360, 0, 0, 361, 362, 507, 973, 363, 974, 508,
	364, 357, 365, 366, 367, 368, 369, 370, 371, 0,
	372, 373, 509, 374, 510, 375, 0, 376, 0, 377,
	378, 379, 380, 381, 382, 383, 511, 384, 385, 0,
	386, 387, 388, 389, 390, 0, 392, 393, 394, 391,
	395, 396, 397, 398, 0, 399, 975, 400, 401, 402,
	403, 512, 404, 0, 405, 409, 410, 411, 412, 413,
	414, 415, 0, 421, 422, 416, 418, 419, 420, 417,
	423, 424, 425, 0, 426, 406, 407, 427, 428, 976,
	429, 430, 513, 431, 432, 0, 433, 434, 435, 436,
	408, 437, 441, 442, 438, 439, 440, 514, 0, 444,
	445, 443, 0, 446, 447, 448, 449, 450, 279, 451,
	0, 452, 515, 516, 517, 518, 0, 459, 0, 453,
	454, 519, 455, 520, 0, 456, 457, 458, 0, 460,
	461, 0, 0, 462, 463, 464, 465, 466, 468, 0,
	469, 0, 467, 470, 471, 472, 521, 522, 523, 0,
	474, 473, 524, 0, 0, 0, 0, 475, 476, 525,
	477, 478, 479, 1185, 1184, 0, 0, 0, 0, 1182,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	219, 220, 221, 222, 223, 1203, 224, 0, 0, 0,
	0, 0, 480, 0, 0, 0, 0, 225, 227, 226,
	228, 229, 481, 482, 230, 483, 233, 231, 232, 484,
	0, 234, 235, 236, 237, 238, 239, 0, 0, 240,
	485, 486, 487, 0, 241, 488, 0, 1089, 0, 242,
	243, 244, 245, 246, 247, 0, 249, 250, 251, 248,
	0, 252, 0, 253, 254, 255, 0, 961, 256, 257,
	0, 0, 0, 0, 0, 0, 0, 258, 259, 260,
	261, 262, 263, 489, 490, 0, 264, 0, 266, 265,
	0, 267, 0, 0, 268, 269, 270, 0, 271, 0,
	272, 273, 0, 274, 491, 275, 276, 278, 280, 277,
	281, 282, 283, 284, 492, 493, 0, 216, 0, 0,
	0, 0, 0, 285, 286, 287, 494, 288, 289, 0,
	290, 0, 291, 0, 0, 962, 292, 293, 0, 294,
	495, 0, 496, 295, 0, 296, 297, 298, 299, 497,
	498, 499, 351, 964, 300, 301, 0, 302, 303, 305,
	0, 0, 0, 304, 306, 313, 0, 963, 307, 500,
	309, 308, 310, 311, 312, 501, 0, 502, 0, 314,
	965, 503, 966, 315, 316, 317, 967, 318, 319, 0,
	0, 320, 321, 322, 323, 324, 0, 326, 325, 0,
	327, 504, 968, 328, 329, 969, 0, 330, 331, 0,
	0, 332, 333, 334, 0, 335, 336, 338, 340, 337,
	339, 341, 343, 344, 342, 970, 345, 346, 348, 971,
	347, 0, 0, 972, 349, 0, 505, 350, 506, 352,
	353, 0, 354, 355, 356, 0, 0, 358, 359, 360,
	0, 0, 361, 362, 507, 973, 363, 974, 508, 364,
	357, 365, 366, 367, 368, 369, 370, 371, 0, 372,
	373, 509, 374, 510, 375, 0, 376, 0, 377, 378,
	379, 380, 381, 382, 383, 511, 384, 385, 0, 386,
	387, 388, 389, 390, 0, 392, 393, 394, 391, 395,
	396, 397, 398, 0, 399, 975, 400, 401, 402, 403,
	512, 404, 0, 405, 409, 410, 411, 412, 413, 414,
	415, 0, 421, 422, 416, 418, 419, 420, 417, 423,
	424, 425, 0, 426, 406, 407, 427, 428, 976, 429,
	430, 513, 431, 432, 0, 433, 434, 435, 436, 408,
	437, 441, 442, 438, 439, 440, 514, 0, 444, 445,
	443, 0, 446, 447, 448, 449, 450, 279, 451, 0,
	452, 515, 516, 517, 518, 0, 459, 0, 453, 454,
	519, 455, 520, 0, 456, 457, 458, 0, 460, 461,
	0, 0, 462, 463, 464, 465, 466, 468, 0, 469,
	0, 467, 470, 471, 472, 521, 522, 523, 0, 474,
	473, 524, 1026, 0, 0, 0, 475, 476, 525, 477,
	478, 479, 0, 0, 0, 0, 0, 0, 0, 219,
	220, 221, 222, 223, 0, 224, 0, 0, 0, 0,
	0, 952, 0, 0, 1342, 0, 225, 227, 226, 228,
	229, 481, 482, 230, 483, 233, 231, 232, 484, 0,
	234, 235, 236, 237, 238, 239, 0, 951, 240, 485,
	486, 487, 0, 241, 958, 0, 939, 0, 242, 243,
	244, 245, 246, 247, 0, 249, 250, 251, 248, 0,
	252, 0, 253, 254, 255, 0, 961, 256, 257, 942,
	940, 941, 948, 944, 943, 947, 258, 259, 260, 261,
	262, 263, 489, 490, 0, 264, 0, 266, 265, 0,
	267, 0, 0, 268, 269, 270, 0, 271, 0, 272,
	273, 0, 274, 491, 275, 276, 278, 280, 277, 281,
	282, 283, 284, 979, 980, 0, 216, 0, 0, 0,
	0, 0, 285, 286, 287, 494, 288, 289, 0, 290,
	0, 291, 0, 0, 962, 292, 293, 0, 294, 986,
	0, 496, 295, 0, 296, 297, 298, 299, 953, 954,
	957, 351, 964, 300, 301, 0, 302, 303, 305, 0,
	0, 217, 304, 306, 313, 0, 963, 307, 500, 309,
	308, 310, 311, 312, 501, 0, 502, 0, 314, 965,
	955, 966, 315, 316, 317, 967, 318, 319, 0, 0,
	320, 321, 322, 323, 324, 0, 326, 325, 0, 327,
	987, 968, 328, 329, 969, 0, 330, 331, 946, 945,
	332, 333, 334, 0, 335, 336, 338, 340, 337, 339,
	341, 343, 344, 342, 970, 345, 346, 348, 971, 347,
	0, 218, 972, 349, 0, 956, 350, 506, 352, 353,
	0, 354, 355, 356, 0, 0, 358, 359, 360, 0,
	0, 361, 362, 507, 973, 363, 974, 981, 364, 357,
	365, 366, 367, 368, 369, 370, 371, 0, 372, 373,
	982, 374, 510, 375, 0, 376, 0, 377, 378, 379,
	380, 381, 382, 383, 511, 384, 385, 0, 386, 387,
	388, 389, 390, 0, 392, 393, 394, 391, 395, 396,
	397, 398, 0, 399, 975, 400, 401, 402, 403, 512,
	404, 0, 405, 409, 410, 411, 412, 413, 414, 415,
	0, 421, 422, 416, 418, 419, 420, 417, 423, 424,
	425, 949, 426, 406, 407, 427, 428, 976, 429, 430,
	513, 431, 432, 0, 433, 434, 435, 436, 408, 437,
	441, 442, 438, 439, 440, 983, 0, 444, 445, 443,
	0, 446, 447, 448, 449, 450, 279, 451, 0, 452,
	515, 516, 517, 518, 0, 459, 0, 453, 454, 984,
	455, 985, 0, 456, 457, 458, 0, 460, 461, 0,
	0, 462, 463, 464, 465, 466, 468, 950, 469, 0,
	467, 470, 471, 472, 521, 522, 523, 0, 474, 473,
	524, 835, 0, 213, 0, 475, 476, 525, 477, 478,
	479, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	219, 220, 221, 222, 223, 0, 224, 0, 0, 0,
	0, 0, 480, 0, 0, 0, 0, 225, 227, 226,
	228, 229, 481, 482, 230, 483, 233, 231, 232, 484,
	0, 234, 235, 236, 237, 238, 239, 0, 0, 240,
	485, 486, 487, 0, 241, 488, 0, 0, 0, 242,
	243, 244, 245, 246, 247, 0, 249, 250, 251, 248,
	0, 252, 0, 253, 254, 255, 0, 0, 256, 257,
	0, 0, 0, 0, 0, 0, 0, 258, 259, 260,
	261, 262, 263, 489, 490, 0, 264, 0, 266, 265,
	0, 267, 0, 0, 268, 269, 270, 0, 271, 0,
	272, 273, 0, 274, 491, 275, 276, 278, 280, 277,
	281, 282, 283, 284, 492, 493, 0, 0, 0, 0,
	0, 0, 0, 285, 286, 287, 494, 288, 289, 0,
	290, 0, 291, 0, 0, 0, 292, 293, 0, 294,
	495, 0, 496, 295, 0, 296, 297, 298, 299, 497,
	498, 499, 351, 0, 300, 301, 0, 302, 303, 305,
	0, 0, 0, 304, 306, 313, 0, 0, 307, 500,
	309, 308, 310, 311, 312, 501, 0, 502, 0, 314,
	0, 503, 0, 315, 316, 317, 0, 318, 319, 0,
	0, 320, 321, 322, 323, 324, 0, 326, 325, 0,
	327, 504, 0, 328, 329, 0, 0, 330, 331, 0,
	0, 332, 333, 334, 0, 335, 336, 338, 340, 337,
	339, 341, 343, 344, 342, 0, 345, 346, 348, 0,
	347, 0, 0, 0, 349, 0, 505, 350, 506, 352,
	353, 0, 354, 355, 356, 0, 0, 358, 359, 360,
	0, 0, 361, 362, 507, 0, 363, 0, 508, 364,
	357, 365, 366, 367, 368, 369, 370, 371, 0, 372,
	373, 509, 374, 510, 375, 0, 376, 0, 377, 378,
	379, 380, 381, 382, 383, 511, 384, 385, 0, 386,
	387, 388, 389, 390, 0, 392, 393, 394, 391, 395,
	396, 397, 398, 0, 399, 0, 400, 401, 402, 403,
	512, 404, 0, 405, 409, 410, 411, 412, 413, 414,
	415, 182, 421, 422, 416, 418, 419, 420, 417, 423,
	424, 425, 0, 426, 406, 407, 427, 428, 0, 429,
	430, 513, 431, 432, 0, 433, 434, 435, 436, 408,
	437, 441, 442, 438, 439, 440, 514, 0, 444, 445,
	443, 184, 446, 447, 448, 449, 450, 279, 451, 0,
	452, 515, 516, 517, 518, 0, 459, 0, 453, 454,
	519, 455, 520, 0, 456, 457, 458, 0, 460, 461,
	0, 0, 462, 463, 464, 465, 466, 468, 0, 469,
	0, 467, 470, 471, 472, 1336, 522, 523, 0, 474,
	473, 524, 213, 0, 0, 176, 475, 476, 525, 477,
	478, 479, 0, 177, 0, 0, 0, 0, 0, 219,
	220, 221, 222, 223, 0, 224, 0, 0, 0, 0,
	0, 480, 0, 0, 151, 0, 225, 227, 226, 228,
	229, 481, 482, 230, 483, 233, 231, 232, 484, 0,
	234, 235, 236, 237, 238, 239, 0, 0, 240, 485,
	486, 487, 0, 241, 488, 0, 0, 0, 242, 243,
	244, 245, 246, 247, 0, 249, 250, 251, 248, 0,
	252, 0, 253, 254, 255, 0, 0, 256, 257, 0,
	0, 0, 0, 0, 0, 0, 258, 259, 260, 261,
	262, 263, 489, 490, 0, 264, 0, 266, 265, 0,
	267, 0, 0, 268, 269, 270, 0, 271, 0, 272,
	273, 0, 274, 491, 275, 276, 278, 280, 277, 281,
	282, 283, 284, 492, 493, 0, 216, 0, 0, 0,
	0, 0, 285, 286, 287, 494, 288, 289, 0, 290,
	0, 291, 0, 0, 0, 292, 293, 0, 294, 495,
	0, 496, 295, 0, 296, 297, 298, 299, 497, 498,
	499, 351, 0, 300, 301, 0, 302, 303, 305, 0,
	0, 217, 304, 306, 313, 0, 0, 307, 500, 309,
	308, 310, 311, 312, 501, 0, 502, 0, 314, 0,
	503, 0, 315, 316, 317, 0, 318, 319, 0, 0,
	320, 321, 322, 323, 324, 0, 326, 325, 0, 327,
	504, 0, 328, 329, 0, 0, 330, 331, 0, 0,
	332, 333, 334, 0, 335, 336, 338, 340, 337, 339,
	341, 343, 344, 342, 0, 345, 346, 348, 0, 347,
	0, 218, 0, 349, 0, 505, 350, 506, 352, 353,
	0, 354, 355, 356, 0, 0, 358, 359, 360, 0,
	0, 361, 362, 507, 0, 363, 0, 508, 364, 357,
	365, 366, 367, 368, 369, 370, 371, 0, 372, 373,
	509, 374, 510, 375, 0, 376, 0, 377, 378, 379,
	380, 381, 382, 383, 511, 384, 385, 0, 386, 387,
	388, 389, 390, 0, 392, 393, 394, 391, 395, 396,
	397, 398, 0, 399, 0, 400, 401, 402, 403, 512,
	404, 0, 405, 409, 410, 411, 412, 413, 414, 415,
	0, 421, 422, 416, 418, 419, 420, 417, 423, 424,
	425, 0, 426, 406, 407, 427, 428, 0, 429, 430,
	513, 431, 432, 0, 433, 434, 435, 436, 408, 437,
	441, 442, 438, 439, 440, 514, 0, 444, 445, 443,
	0, 446, 447, 448, 449, 450, 279, 451, 0, 452,
	515, 516, 517, 518, 0, 459, 0, 453, 454, 519,
	455, 520, 0, 456, 457, 458, 0, 460, 461, 0,
	0, 462, 463, 464, 465, 466, 468, 0, 469, 0,
	467, 470, 471, 472, 521, 522, 523, 0, 474, 473,
	524, 1283, 0, 213, 0, 475, 476, 525, 477, 478,
	479, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	219, 220, 221, 222, 223, 0, 224, 0, 0, 0,
	0, 0, 480, 1647, 0, 0, 0, 225, 227, 226,
	228, 229, 481, 482, 230, 483, 233, 231, 232, 484,
	0, 234, 235, 236, 237, 238, 239, 0, 0, 240,
	485, 486, 487, 0, 241, 488, 0, 0, 0, 242,
	243, 244, 245, 246, 247, 0, 249, 250, 251, 248,
	0, 252, 0, 253, 254, 255, 0, 0, 256, 257,
	0, 0, 0, 0, 0, 0, 0, 258, 259, 260,
	261, 262, 263, 489, 490, 0, 264, 0, 266, 265,
	0, 267, 0, 0, 268, 269, 270, 0, 271, 0,
	272, 273, 0, 274, 491, 275, 276, 278, 280, 277,
	281, 282, 283, 284, 492, 493, 0, 216, 0, 0,
	0, 0, 0, 285, 286, 287, 494, 288, 289, 0,
	290, 0, 291, 0, 0, 0, 292, 293, 0, 294,
	495, 0, 496, 295, 0, 296, 297, 298, 299, 497,
	498, 499, 351, 0, 300, 301, 0, 302, 303, 305,
	0, 0, 217, 304, 306, 313, 0, 0, 307, 500,
	309, 308, 310, 311, 312, 501, 0, 502, 0, 314,
	0, 503, 0, 315, 316, 317, 0, 318, 319, 0,
	0, 320, 321, 322, 323, 324, 0, 326, 325, 0,
	327, 504, 0, 328, 329, 0, 0, 330, 331, 0,
	0, 332, 333, 334, 0, 335, 336, 338, 340, 337,
	339, 341, 343, 344, 342, 0, 345, 346, 348, 0,
	347, 0, 218, 0, 349, 0, 505, 350, 506, 352,
	353, 0, 354, 355, 356, 0, 0, 358, 359, 360,
	0, 0, 361, 362, 507, 0, 363, 0, 508, 364,
	357, 365, 366, 367, 368, 369, 370, 371, 0, 372,
	373, 509, 374, 510, 375, 0, 376, 0, 377, 378,
	379, 380, 381, 382, 383, 511, 384, 385, 0, 386,
	387, 388, 389, 390, 0, 392, 393, 394, 391, 395,
	396, 397, 398, 0, 399, 0, 400, 401, 402, 403,
	512, 404, 0, 405, 409, 410, 411, 412, 413, 414,
	415, 0, 421, 422, 416, 418, 419, 420, 417, 423,
	424, 425, 0, 426, 406, 407, 427, 428, 0, 429,
	430, 513, 431, 432, 0, 433, 434, 435, 436, 408,
	437, 441, 442, 438, 439, 440, 514, 0, 444, 445,
	443, 0, 446, 447, 448, 449, 450, 279, 451, 0,
	452, 515, 516, 517, 518, 0, 459, 0, 453, 454,
	519, 455, 520, 0, 456, 457, 458, 0, 460, 461,
	0, 0, 462, 463, 464, 465, 466, 468, 0, 469,
	0, 467, 470, 471, 472, 521, 522, 523, 0, 474,
	473, 524, 213, 0, 0, 0, 475, 476, 525, 477,
	478, 479, 0, 0, 0, 0, 0, 0, 0, 219,
	220, 221, 222, 223, 0, 224, 0, 0, 0, 0,
	0, 480, 1287, 0, 0, 0, 225, 227, 226, 228,
	229, 481, 482, 230, 483, 233, 231, 232, 484, 0,
	234, 235, 236, 237, 238, 239, 0, 0, 240, 485,
	486, 487, 0, 241, 488, 0, 0, 0, 242, 243,
	244, 245, 246, 247, 0, 249, 250, 251, 248, 0,
	252, 0, 253, 254, 255, 0, 0, 256, 257, 0,
	0, 0, 0, 0, 0, 0, 258, 259, 260, 261,
	262, 263, 489, 490, 0, 264, 0, 266, 265, 0,
	267, 0, 0, 268, 269, 270, 0, 271, 0, 272,
	273, 0, 274, 491, 275, 276, 278, 280, 277, 281,
	282, 283, 284, 492, 493, 0, 216, 0, 0, 0,
	0, 0, 285, 286, 287, 494, 288, 289, 0, 290,
	0, 291, 0, 0, 0, 292, 293, 0, 294, 495,
	0, 496, 295, 0, 296, 297, 298, 299, 497, 498,
	499, 351, 0, 300, 301, 0, 302, 303, 305, 0,
	0, 217, 304, 306, 313, 0, 0, 307, 500, 309,
	308, 310, 311, 312, 501, 0, 502, 0, 314, 0,
	503, 0, 315, 316, 317, 0, 318, 319, 0, 0,
	320, 321, 322, 323, 324, 0, 326, 325, 0, 327,
	504, 0, 328, 329, 0, 0, 330, 331, 0, 0,
	332, 333, 334, 0, 335, 336, 338, 340, 337, 339,
	341, 343, 344, 342, 0, 345, 346, 348, 0, 347,
	0, 218, 0, 349, 0, 505, 350, 506, 352, 353,
	0, 354, 355, 356, 0, 0, 358, 359, 360, 0,
	0, 361, 362, 507, 0, 363, 0, 508, 364, 357,
	365, 366, 367, 368, 369, 370, 371, 0, 372, 373,
	509, 374, 510, 375, 0, 376, 0, 377, 378, 379,
	380, 381, 382, 383, 511, 384, 385, 0, 386, 387,
	388, 389, 390, 0, 392, 393, 394, 391, 395, 396,
	397, 398, 0, 399, 0, 400, 401, 402, 403, 512,
	404, 0, 405, 409, 410, 411, 412, 413, 414, 415,
	0, 421, 422, 416, 418, 419, 420, 417, 423, 424,
	425, 0, 426, 406, 407, 427, 428, 0, 429, 430,
	513, 431, 432, 0, 433, 434, 435, 436, 408, 437,
	441, 442, 438, 439, 440, 514, 0, 444, 445, 443,
	0, 446, 447, 448, 449, 450, 279, 451, 0, 452,
	515, 516, 517, 518, 0, 459, 0, 453, 454, 519,
	455, 520, 0, 456, 457, 458, 0, 460, 461, 0,
	0, 462, 463, 464, 465, 466, 468, 0, 469, 0,
	467, 470, 471, 472, 521, 522, 523, 0, 474, 473,
	524, 213, 0, 0, 0, 475, 476, 525, 477, 478,
	479, 0, 0, 0, 0, 0, 0, 0, 219, 220,
	221, 222, 223, 0, 224, 0, 0, 0, 0, 0,
	480, 2841, 0, 0, 0, 225, 227, 226, 228, 229,
	481, 482, 230, 483, 233, 231, 232, 484, 0, 234,
	235, 236, 237, 238, 239, 0, 0, 240, 485, 486,
	487, 0, 241, 488, 0, 0, 0, 242, 243, 244,
	245, 246, 247, 0, 249, 250, 251, 248, 0, 252,
	0, 253, 254, 255, 0, 0, 256, 257, 0, 0,
	0, 0, 0, 0, 0, 258, 259, 260, 261, 262,
	263, 489, 490, 0, 264, 0, 266, 265, 0, 267,
	0, 0, 268, 269, 270, 0, 271, 0, 272, 273,
	0, 274, 491, 275, 276, 278, 280, 277, 281, 282,
	283, 284, 492, 493, 0, 216, 0, 0, 0, 0,
	0, 285, 286, 287, 494, 288, 289, 0, 290, 0,
	291, 0, 0, 0, 292, 293, 0, 294, 495, 0,
	496, 295, 0, 296, 297, 298, 299, 497, 498, 499,
	351, 0, 300, 301, 0, 302, 303, 305, 0, 0,
	217, 304, 306, 313, 0, 0, 307, 500, 309, 308,
	310, 311, 312, 501, 0, 502, 0, 314, 0, 503,
	0, 315, 316, 317, 0, 318, 319, 0, 0, 320,
	321, 322, 323, 324, 0, 326, 325, 0, 327, 504,
	0, 328, 329, 0, 0, 330, 331, 0, 0, 332,
	333, 334, 0, 335, 336, 338, 340, 337, 339, 341,
	343, 344, 342, 0, 345, 346, 348, 0, 347, 0,
	218, 0, 349, 0, 505, 350, 506, 352, 353, 0,
	354, 355, 356, 0, 0, 358, 359, 360, 0, 0,
	361, 362, 507, 0, 363, 0, 508, 364, 357, 365,
	366, 367, 368, 369, 370, 371, 0, 372, 373, 509,
	374, 510, 375, 0, 376, 0, 377, 378, 379, 380,
	381, 382, 383, 511, 384, 385, 0, 386, 387, 388,
	389, 390, 0, 392, 393, 394, 391, 395, 396, 397,
	398, 0, 399, 0, 400, 401, 402, 403, 512, 404,
	0, 405, 409, 410, 411, 412, 413, 414, 415, 0,
	421, 422, 416, 418, 419, 420, 417, 423, 424, 425,
	0, 426, 406, 407, 427, 428, 0, 429, 430, 513,
	431, 432, 0, 433, 434, 435, 436, 408, 437, 441,
	442, 438, 439, 440, 514, 0, 444, 445, 443, 0,
	446, 447, 448, 449, 450, 279, 451, 0, 452, 515,
	516, 517, 518, 0, 459, 0, 453, 454, 519, 455,
	520, 0, 456, 457, 458, 0, 460, 461, 0, 0,
	462, 463, 464, 465, 466, 468, 0, 469, 0, 467,
	470, 471, 472, 521, 522, 523, 0, 474, 473, 524,
	213, 0, 0, 0, 475, 476, 525, 477, 478, 479,
	0, 0, 0, 0, 0, 0, 0, 219, 220, 221,
	222, 223, 0, 224, 0, 0, 0, 0, 0, 480,
	1287, 0, 0, 0, 225, 227, 226, 228, 229, 481,
	482, 230, 483, 233, 231, 232, 484, 0, 234, 235,
	236, 237, 238, 239, 0, 0, 240, 485, 486, 487,
	0, 241, 488, 0, 0, 0, 242, 243, 244, 245,
	246, 247, 0, 249, 250, 251, 248, 0, 252, 0,
	253, 254, 255, 0, 0, 256, 257, 0, 0, 0,
	0, 0, 0, 0, 258, 259, 260, 261, 262, 263,
	489, 490, 0, 264, 0, 266, 265, 0, 267, 0,
	0, 268, 269, 270, 0, 271, 0, 272, 273, 0,
	274, 491, 275, 276, 278, 280, 277, 281, 282, 283,
	284, 492, 493, 0, 0, 0, 0, 0, 0, 0,
	285, 286, 287, 494, 288, 289, 0, 290, 0, 291,
	0, 0, 0, 292, 293, 0, 294, 495, 0, 496,
	295, 0, 296, 297, 298, 299, 497, 498, 499, 351,
	0, 300, 301, 0, 302, 303, 305, 0, 0, 0,
	304, 306, 313, 0, 0, 307, 500, 309, 308, 310,
	311, 312, 501, 0, 502, 0, 314, 0, 503, 0,
	315, 316, 317, 0, 318, 319, 0, 0, 320, 321,
	322, 323, 324, 0, 326, 325, 0, 327, 504, 0,
	328, 329, 0, 0, 330, 331, 0, 0, 332, 333,
	334, 0, 335, 336, 338, 340, 337, 339, 341, 343,
	344, 342, 0, 345, 346, 348, 0, 347, 0, 0,
	0, 349, 0, 505, 350, 506, 352, 353, 0, 354,
	355, 356, 0, 0, 358, 359, 360, 0, 0, 361,
	362, 507, 0, 363, 0, 508, 364, 357, 365, 366,
	367, 368, 369, 370, 371, 0, 372, 373, 509, 374,
	510, 375, 0, 376, 0, 377, 378, 379, 380, 381,
	382, 383, 511, 384, 385, 0, 386, 387, 388, 389,
	390, 0, 392, 393, 394, 391, 395, 396, 397, 398,
	0, 399, 0, 400, 401, 402, 403, 512, 404, 0,
	405, 409, 410, 411, 412, 413, 414, 415, 0, 421,
	422, 416, 418, 419, 420, 417, 423, 424, 425, 0,
	426, 406, 407, 427, 428, 0, 429, 430, 513, 431,
	432, 0, 433, 434, 435, 436, 408, 437, 441, 442,
	438, 439, 440, 514, 0, 444, 445, 443, 0, 446,
	447, 448, 449, 450, 279, 451, 0, 452, 515, 516,
	517, 518, 0, 459, 0, 453, 454, 519, 455, 520,
	0, 456, 457, 458, 0, 460, 461, 0, 0, 462,
	463, 464, 465, 466, 468, 0, 469, 0, 467, 470,
	471, 472, 521, 522, 523, 0, 474, 473, 524, 213,
	0, 0, 0, 475, 476, 525, 477, 478, 479, 0,
	0, 0, 0, 0, 0, 0, 219, 220, 221, 222,
	223, 0, 224, 0, 0, 0, 0, 0, 480, 0,
	0, 2441, 0, 225, 227, 226, 228, 229, 481, 482,
	230, 483, 233, 231, 232, 484, 0, 234, 235, 236,
	237, 238, 239, 0, 0, 240, 485, 486, 487, 0,
	241, 488, 0, 0, 0, 242, 243, 244, 245, 246,
	247, 0, 249, 250, 251, 248, 0, 252, 0, 253,
	254, 255, 0, 0, 256, 257, 0, 0, 0, 0,
	0, 0, 0, 258, 259, 260, 261, 262, 263, 489,
	490, 0, 264, 0, 266, 265, 0, 267, 0, 0,
	268, 269, 270, 0, 271, 0, 272, 273, 0, 274,
	491, 275, 276, 278, 280, 277, 281, 282, 283, 284,
	492, 493, 0, 0, 0, 0, 0, 0, 0, 285,
	286, 287, 494, 288, 289, 0, 290, 0, 291, 0,
	0, 0, 292, 293, 0, 294, 495, 0, 496, 295,
	0, 296, 297, 298, 299, 497, 498, 499, 351, 0,
	300, 301, 0, 302, 303, 305, 0, 0, 0, 304,
	306, 313, 0, 0, 307, 500, 309, 308, 310, 311,
	312, 501, 0, 502, 0, 314, 0, 503, 0, 315,
	316, 317, 0, 318, 319, 0, 0, 320, 321, 322,
	323, 324, 0, 326, 325, 0, 327, 504, 0, 328,
	329, 0, 0, 330, 331, 0, 0, 332, 333, 334,
	0, 335, 336, 338, 340, 337, 339, 341, 343, 344,
	342, 0, 345, 346, 348, 0, 347, 0, 0, 0,
	349, 0, 505, 350, 506, 352, 353, 0, 354, 355,
	356, 0, 0, 358, 359, 360, 0, 0, 361, 362,
	507, 0, 363, 0, 508, 364, 357, 365, 366, 367,
	368, 369, 370, 371, 0, 372, 373, 509, 374, 510,
	375, 0, 376, 0, 377, 378, 379, 380, 381, 382,
	383, 511, 384, 385, 0, 386, 387, 388, 389, 390,
	0, 392, 393, 394, 391, 395, 396, 397, 398, 0,
	399, 0, 400, 401, 402, 403, 512, 404, 0, 405,
	409, 410, 411, 412, 413, 414, 415, 0, 421, 422,
	416, 418, 419, 420, 417, 423, 424, 425, 0, 426,
	406, 407, 427, 428, 0, 429, 430, 513, 431, 432,
	0, 433, 434, 435, 436, 408, 437, 441, 442, 438,
	439, 440, 514, 0, 444, 445, 443, 0, 446, 447,
	448, 449, 450, 279, 451, 0, 452, 515, 516, 517,
	518, 0, 459, 0, 453, 454, 519, 455, 520, 0,
	456, 457, 458, 0, 460, 461, 0, 0, 462, 463,
	464, 465, 466, 468, 0, 469, 0, 467, 470, 471,
	472, 521, 522, 523, 0, 474, 473, 524, 213, 0,
	0, 0, 475, 476, 525, 477, 478, 479, 0, 0,
	0, 0, 0, 0, 0, 219, 220, 221, 222, 223,
	0, 224, 0, 0, 0, 0, 0, 480, 0, 0,
	2978, 0, 225, 227, 226, 228, 229, 481, 482, 230,
	483, 233, 231, 232, 484, 0, 234, 235, 236, 237,
	238, 239, 0, 0, 240, 485, 486, 487, 0, 241,
	488, 0, 0, 0, 242, 243, 244, 245, 246, 247,
	0, 249, 250, 251, 248, 0, 252, 0, 253, 254,
	255, 0, 0, 256, 257, 0, 0, 0, 0, 0,
	0, 0, 258, 259, 260, 261, 262, 263, 489, 490,
	0, 264, 0, 266, 265, 0, 267, 0, 0, 268,
	269, 270, 0, 271, 0, 272, 273, 0, 274, 491,
	275, 276, 278, 280, 277, 281, 282, 283, 284, 492,
	493, 0, 0, 0, 0, 0, 0, 0, 285, 286,
	287, 494, 288, 289, 0, 290, 0, 291, 0, 0,
	0, 292, 293, 0, 294, 495, 0, 496, 295, 0,
	296, 297, 298, 299, 497, 498, 499, 351, 0, 300,
	301, 0, 302, 303, 305, 0, 0, 0, 304, 306,
	313, 0, 0, 307, 500, 309, 308, 310, 311, 312,
	501, 0, 502, 0, 314, 0, 503, 0, 315, 316,
	317, 0, 318, 319, 0, 0, 320, 321, 322, 323,
	324, 0, 326, 325, 0, 327, 504, 0, 328, 329,
	0, 0, 330, 331, 0, 0, 332, 333, 334, 0,
	335, 336, 338, 340, 337, 339, 341, 343, 344, 342,
	0, 345, 346, 348, 0, 347, 0, 0, 0, 349,
	0, 505, 350, 506, 352, 353, 0, 354, 355, 356,
	0, 0, 358, 359, 360, 0, 0, 361, 362, 507,
	0, 363, 0, 508, 364, 357, 365, 366, 367, 368,
	369, 370, 371, 0, 372, 373, 509, 374, 510, 375,
	0, 376, 0, 377, 378, 379, 380, 381, 382, 383,
	511, 384, 385, 0, 386, 387, 388, 389, 390, 0,
	392, 393, 394, 391, 395, 396, 397, 398, 0, 399,
	0, 400, 401, 402, 403, 512, 404, 0, 405, 409,
	410, 411, 412, 413, 414, 415, 0, 421, 422, 416,
	418, 419, 420, 417, 423, 424, 425, 0, 426, 406,
	407, 427, 428, 0, 429, 430, 513, 431, 432, 0,
	433, 434, 435, 436, 408, 437, 441, 442, 438, 439,
	440, 514, 0, 444, 445, 443, 0, 446, 447, 448,
	449, 450, 279, 451, 0, 452, 515, 516, 517, 518,
	0, 459, 0, 453, 454, 519, 455, 520, 0, 456,
	457, 458, 0, 460, 461, 0, 0, 462, 463, 464,
	465, 466, 468, 0, 469, 0, 467, 470, 471, 472,
	521, 522, 523, 0, 474, 473, 524, 705, 0, 593,
	0, 475, 476, 525, 477, 478, 479, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 219, 220, 221, 222,
	223, 0, 224, 0, 0, 0, 0, 0, 480, 1920,
	0, 0, 0, 225, 227, 226, 228, 229, 481, 482,
	230, 483, 233, 231, 232, 484, 0, 234, 235, 236,
	237, 238, 239, 0, 0, 240, 485, 486, 487, 0,
	241, 488, 0, 0, 0, 242, 243, 244, 245, 246,
	247, 0, 249, 250, 251, 248, 0, 252, 0, 253,
	254, 255, 0, 0, 256, 257, 0, 0, 0, 0,
	0, 0, 0, 258, 259, 599, 261, 262, 263, 489,
	490, 0, 264, 0, 266, 265, 0, 267, 0, 0,
	268, 269, 270, 0, 271, 0, 272, 273, 0, 274,
	491, 275, 276, 278, 280, 277, 281, 282, 283, 284,
	492, 493, 0, 216, 0, 0, 0, 0, 0, 285,
	286, 287, 494, 288, 289, 0, 290, 0, 291, 0,
	703, 0, 292, 293, 0, 294, 495, 0, 496, 295,
	0, 296, 297, 298, 299, 497, 498, 499, 351, 0,
	300, 301, 0, 302, 303, 305, 0, 0, 217, 304,
	306, 313, 0, 0, 307, 500, 309, 308, 310, 311,
	312, 501, 0, 502, 0, 314, 0, 503, 0, 315,
	316, 317, 0, 318, 319, 0, 0, 320, 321, 322,
	323, 324, 0, 326, 325, 0, 327, 504, 0, 328,
	329, 0, 0, 330, 331, 0, 0, 332, 333, 334,
	0, 335, 336, 338, 340, 337, 339, 341, 343, 344,
	342, 0, 345, 346, 348, 0, 347, 0, 218, 0,
	349, 0, 505, 350, 506, 352, 353, 0, 354, 355,
	356, 0, 0, 358, 359, 360, 0, 0, 361, 362,
	507, 0, 363, 0, 508, 364, 357, 365, 366, 367,
	368, 369, 370, 371, 0, 372, 373, 509, 374, 510,
	375, 0, 376, 0, 377, 378, 379, 380, 381, 382,
	383, 511, 384, 385, 0, 386, 387, 388, 389, 390,
	0, 392, 393, 394, 391, 395, 396, 397, 398, 0,
	399, 0, 400, 401, 402, 403, 512, 404, 0, 405,
	409, 410, 411, 412, 413, 414, 415, 0, 421, 422,
	416, 418, 419, 420, 417, 423, 424, 425, 0, 426,
	406, 407, 427, 428, 0, 429, 430, 513, 431, 432,
	0, 433, 434, 435, 436, 408, 437, 441, 442, 438,
	439, 440, 514, 0, 444, 445, 443, 598, 446, 447,
	448, 449, 450, 279, 451, 0, 452, 515, 516, 517,
	518, 0, 459, 0, 453, 454, 519, 455, 520, 0,
	456, 457, 458, 0, 460, 461, 0, 0, 462, 463,
	464, 465, 466, 468, 0, 469, 0, 467, 470, 471,
	472, 521, 522, 523, 0, 474, 473, 524, 0, 592,
	0, 593, 475, 476, 525, 477, 478, 479, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 219, 220,
	221, 222, 223, 602, 224, 0, 0, 0, 0, 0,
	480, 0, 0, 0, 0, 225, 227, 226, 228, 229,
	481, 482, 230, 483, 233, 231, 232, 484, 0, 234,
	235, 236, 237, 238, 239, 0, 0, 240, 485, 486,
	487, 0, 241, 488, 0, 0, 0, 242, 243, 244,
	245, 246, 247, 0, 249, 250, 251, 248, 0, 252,
	0, 253, 254, 255, 0, 0, 256, 257, 0, 0,
	0, 0, 0, 0, 0, 258, 259, 599, 261, 262,
	263, 489, 490, 0, 264, 0, 266, 265, 0, 267,
	0, 0, 268, 269, 270, 0, 271, 0, 272, 273,
	0, 274, 491, 275, 276, 278, 280, 277, 281, 282,
	283, 284, 492, 493, 0, 216, 0, 0, 0, 0,
	0, 285, 286, 287, 494, 288, 289, 0, 290, 0,
	291, 0, 0, 0, 292, 293, 0, 294, 495, 0,
	496, 295, 0, 296, 297, 298, 299, 497, 498, 499,
	351, 0, 300, 301, 0, 302, 303, 305, 0, 0,
	217, 304, 306, 313, 0, 0, 307, 500, 309, 308,
	310, 311, 312, 501, 0, 502, 0, 314, 0, 503,
	0, 315, 316, 317, 0, 318, 319, 0, 0, 320,
	321, 322, 323, 324, 0, 326, 325, 0, 327, 504,
	0, 328, 329, 0, 0, 330, 331, 0, 0, 332,
	333, 334, 0, 335, 336, 338, 340, 337, 339, 341,
	343, 344, 342, 0, 345, 346, 348, 0, 347, 0,
	218, 0, 349, 0, 505, 350, 506, 352, 353, 0,
	354, 355, 356, 0, 0, 358, 359, 360, 0, 0,
	361, 362, 507, 0, 363, 0, 508, 364, 357, 365,
	366, 367, 368, 369, 370, 371, 0, 372, 373, 509,
	374, 510, 375, 0, 376, 0, 377, 378, 379, 380,
	381, 382, 383, 511, 384, 385, 0, 386, 387, 388,
	389, 390, 0, 392, 393, 394, 391, 395, 396, 397,
	398, 0, 399, 0, 400, 401, 402, 403, 512, 404,
	0, 405, 409, 410, 411, 412, 413, 414, 415, 0,
	421, 422, 416, 418, 419, 420, 417, 423, 424, 425,
	0, 426, 406, 407, 427, 428, 0, 429, 430, 513,
	431, 432, 0, 433, 434, 435, 436, 408, 437, 441,
	442, 438, 439, 440, 514, 0, 444, 445, 443, 598,
	446, 447, 448, 449, 450, 279, 451, 0, 452, 515,
	516, 517, 518, 590, 459, 0, 453, 454, 519, 455,
	520, 0, 456, 457, 458, 0, 460, 461, 0, 0,
	462, 463, 464, 465, 466, 468, 0, 469, 0, 467,
	470, 471, 472, 521, 522, 523, 0, 474, 473, 524,
	0, 0, 0, 0, 475, 476, 525, 477, 478, 479,
	1185, 1184, 0, 0, 0, 0, 1182, 0, 0, 0,
	0, 0, 0, 0, 0, 602, 0, 219, 220, 221,
	222, 223, 0, 224, 0, 0, 0, 0, 0, 480,
	0, 0, 0, 0, 225, 227, 226, 228, 229, 481,
	482, 230, 483, 233, 231, 232, 484, 0, 234, 235,
	236, 237, 238, 239, 0, 0, 240, 485, 486, 487,
	0, 241, 488, 0, 1089, 0, 242, 243, 244, 245,
	246, 247, 0, 249, 250, 251, 248, 0, 252, 0,
	253, 254, 255, 0, 961, 256, 257, 0, 0, 0,
	0, 0, 0, 0, 258, 259, 260, 261, 262, 263,
	489, 490, 0, 264, 0, 266, 265, 0, 267, 0,
	0, 268, 269, 270, 0, 271, 0, 272, 273, 0,
	274, 491, 275, 276, 278, 280, 277, 281, 282, 283,
	284, 492, 493, 0, 216, 0, 0, 0, 0, 0,
	285, 286, 287, 494, 288, 289, 0, 290, 0, 291,
	0, 0, 962, 292, 293, 0, 294, 495, 0, 496,
	295, 0, 296, 297, 298, 299, 497, 498, 499, 351,
	964, 300, 301, 0, 302, 303, 305, 0, 0, 0,
	304, 306, 313, 0, 963, 307, 500, 309, 308, 310,
	311, 312, 501, 0, 502, 0, 314, 965, 503, 966,
	315, 316, 317, 967, 318, 319, 0, 0, 320, 321,
	322, 323, 324, 0, 326, 325, 0, 327, 504, 968,
	328, 329, 969, 0, 330, 331, 0, 0, 332, 333,
	334, 0, 335, 336, 338, 340, 337, 339, 341, 343,
	344, 342, 970, 345, 346, 348, 971, 347, 0, 0,
	972, 349, 2813, 505, 350, 506, 352, 353, 0, 354,
	355, 356, 0, 0, 358, 359, 360, 0, 0, 361,
	362, 507, 973, 363, 974, 508, 364, 357, 365, 366,
	367, 368, 369, 370, 371, 0, 372, 373, 509, 374,
	510, 375, 0, 376, 0, 377, 378, 379, 380, 381,
	382, 383, 511, 384, 385, 0, 386, 387, 388, 389,
	390, 0, 392, 393, 394, 391, 395, 396, 397, 398,
	0, 399, 975, 400, 401, 402, 403, 512, 404, 0,
	405, 409, 410, 411, 412, 413, 414, 415, 0, 421,
	422, 416, 418, 419, 420, 417, 423, 424, 425, 0,
	426, 406, 407, 427, 428, 976, 429, 430, 513, 431,
	432, 0, 433, 434, 435, 436, 408, 437, 441, 442,
	438, 439, 440, 514, 0, 444, 445, 443, 0, 446,
	447, 448, 449, 450, 279, 451, 0, 452, 515, 516,
	517, 518, 0, 459, 0, 453, 454, 519, 455, 520,
	0, 456, 457, 458, 0, 460, 461, 0, 0, 462,
	463, 464, 465, 466, 468, 0, 469, 0, 467, 470,
	471, 472, 521, 522, 523, 593, 474, 473, 524, 0,
	0, 0, 0, 475, 476, 525, 477, 478, 479, 0,
	0, 0, 219, 220, 221, 222, 223, 0, 224, 0,
	0, 0, 0, 0, 480, 0, 0, 0, 0, 225,
	227, 226, 228, 229, 481, 482, 230, 483, 233, 231,
	232, 484, 0, 234, 235, 236, 237, 238, 239, 0,
	0, 240, 485, 486, 487, 0, 241, 488, 0, 0,
	0, 242, 243, 244, 245, 246, 247, 0, 249, 250,
	251, 248, 0, 252, 0, 253, 254, 255, 0, 0,
	256, 257, 0, 0, 0, 0, 0, 0, 0, 258,
	259, 599, 261, 262, 263, 489, 490, 0, 264, 0,
	266, 265, 0, 267, 0, 0, 268, 269, 270, 0,
	271, 0, 272, 273, 0, 274, 491, 275, 276, 278,
	280, 277, 281, 282, 283, 284, 492, 493, 0, 216,
	0, 0, 0, 0, 0, 285, 286, 287, 494, 288,
	289, 0, 290, 0, 291, 0, 0, 0, 292, 293,
	0, 294, 495, 0, 496, 295, 0, 296, 297, 298,
	299, 497, 498, 499, 351, 0, 300, 301, 0, 302,
	303, 305, 0, 0, 217, 304, 306, 313, 0, 0,
	307, 500, 309, 308, 310, 311, 312, 501, 0, 502,
	0, 314, 0, 503, 0, 315, 316, 317, 0, 318,
	319, 0, 0, 320, 321, 322, 323, 324, 0, 326,
	325, 0, 327, 504, 0, 328, 329, 0, 0, 330,
	331, 0, 0, 332, 333, 334, 0, 335, 336, 338,
	340, 337, 339, 341, 343, 344, 342, 0, 345, 346,
	348, 0, 347, 0, 218, 0, 349, 0, 505, 350,
	506, 352, 353, 0, 354, 355, 356, 0, 0, 358,
	359, 360, 0, 0, 361, 362, 507, 0, 363, 0,
	508, 364, 357, 365, 366, 367, 368, 369, 370, 371,
	0, 372, 373, 509, 374, 510, 375, 0, 376, 0,
	377, 378, 379, 380, 381, 382, 383, 511, 384, 385,
	0, 386, 387, 388, 389, 390, 0, 392, 393, 394,
	391, 395, 396, 397, 398, 0, 399, 0, 1954, 401,
	402, 403, 512, 404, 0, 405, 409, 410, 411, 412,
	413, 414, 415, 0, 421, 422, 416, 418, 419, 420,
	417, 423, 424, 425, 0, 426, 406, 407, 427, 428,
	0, 429, 430, 513, 431, 432, 0, 433, 434, 435,
	436, 408, 437, 441, 442, 438, 439, 440, 514, 0,
	444, 445, 443, 598, 446, 447, 448, 449, 450, 279,
	451, 0, 452, 515, 516, 517, 518, 0, 459, 0,
	453, 454, 519, 455, 520, 0, 456, 457, 458, 0,
	460, 461, 0, 0, 462, 463, 464, 465, 466, 468,
	0, 469, 0, 467, 470, 471, 472, 521, 522, 523,
	0, 474, 473, 524, 593, 0, 0, 0, 475, 476,
	525, 477, 478, 479, 0, 0, 0, 0, 0, 0,
	0, 219, 220, 221, 222, 223, 0, 224, 0, 602,
	0, 0, 0, 480, 0, 0, 0, 0, 225, 227,
	226, 228, 229, 481, 482, 230, 483, 233, 231, 232,
	484, 0, 234, 235, 236, 237, 238, 239, 0, 0,
	240, 485, 486, 487, 0, 241, 488, 0, 0, 0,
	242, 243, 244, 245, 246, 247, 0, 249, 250, 251,
	248, 0, 252, 0, 253, 254, 255, 0, 0, 256,
	257, 0, 0, 0, 0, 0, 0, 0, 258, 259,
	599, 261, 262, 263, 489, 490, 0, 264, 0, 266,
	265, 0, 267, 0, 0, 268, 269, 270, 0, 271,
	0, 272, 273, 0, 274, 491, 275, 276, 278, 280,
	277, 281, 282, 283, 284, 492, 493, 0, 216, 0,
	0, 0, 0, 0, 285, 286, 287, 494, 288, 289,
	0, 290, 0, 291, 0, 0, 0, 292, 293, 0,
	294, 495, 0, 496, 295, 0, 296, 297, 298, 299,
	497, 498, 499, 351, 0, 300, 301, 0, 302, 303,
	305, 0, 0, 217, 304, 306, 313, 0, 0, 307,
	500, 309, 308, 310, 311, 312, 501, 0, 502, 0,
	314, 0, 503, 0, 315, 316, 317, 0, 318, 319,
	0, 0, 320, 321, 322, 323, 324, 0, 326, 325,
	0, 327, 504, 0, 328, 329, 0, 0, 330, 331,
	0, 0, 332, 333, 334, 0, 335, 336, 338, 340,
	337, 339, 341, 343, 344, 342, 0, 345, 346, 348,
	0, 347, 0, 218, 0, 349, 0, 505, 350, 506,
	352, 353, 0, 354, 355, 356, 0, 0, 358, 359,
	360, 0, 0, 361, 362, 507, 0, 363, 0, 508,
	364, 357, 365, 366, 367, 368, 369, 370, 371, 0,
	372, 373, 509, 374, 510, 375, 0, 376, 0, 377,
	378, 379, 380, 381, 382, 383, 511, 384, 385, 0,
	386, 387, 388, 389, 390, 0, 392, 393, 394, 391,
	395, 396, 397, 398, 0, 399, 0, 400, 401, 402,
	403, 512, 404, 0, 405, 409, 410, 411, 412, 413,
	414, 415, 0, 421, 422, 416, 418, 419, 420, 417,
	423, 424, 425, 0, 426, 406, 407, 427, 428, 0,
	429, 430, 513, 431, 432, 0, 433, 434, 435, 436,
	408, 437, 441, 442, 438, 439, 440, 514, 0, 444,
	445, 443, 598, 446, 447, 448, 449, 450, 279, 451,
	0, 452, 515, 516, 517, 518, 0, 459, 0, 453,
	454, 519, 455, 520, 0, 456, 457, 458, 0, 460,
	461, 0, 0, 462, 463, 464, 465, 466, 468, 0,
	469, 0, 467, 470, 471, 472, 521, 522, 523, 0,
	474, 473, 524, 0, 0, 0, 0, 475, 476, 525,
	477, 478, 479, 1369, 0, 1185, 1184, 0, 0, 0,
	0, 1182, 0, 0, 0, 0, 0, 0, 602, 0,
	0, 0, 219, 220, 221, 222, 223, 0, 224, 0,
	0, 0, 0, 0, 480, 0, 0, 0, 0, 225,
	227, 226, 228, 229, 481, 482, 230, 483, 233, 231,
	232, 484, 0, 234, 235, 236, 237, 238, 239, 0,
	0, 240, 485, 486, 487, 0, 241, 488, 0, 1089,
	0, 242, 243, 244, 245, 246, 247, 0, 249, 250,
	251, 248, 0, 252, 0, 253, 254, 255, 0, 961,
	256, 257, 0, 0, 0, 0, 0, 0, 0, 258,
	259, 260, 261, 262, 263, 489, 490, 0, 264, 0,
	266, 265, 0, 267, 0, 0, 268, 269, 270, 0,
	271, 0, 272, 273, 0, 274, 491, 275, 276, 278,
	280, 277, 281, 282, 283, 284, 492, 493, 0, 216,
	0, 0, 0, 0, 0, 1368, 286, 287, 494, 288,
	289, 0, 290, 0, 291, 0, 0, 962, 292, 293,
	0, 294, 495, 0, 496, 295, 0, 296, 297, 298,
	299, 497, 498, 499, 351, 964, 300, 301, 0, 302,
	303, 305, 0, 0, 0, 304, 306, 313, 0, 963,
	307, 500, 309, 308, 310, 311, 312, 501, 0, 502,
	0, 314, 965, 503, 966, 315, 316, 317, 967, 318,
	319, 0, 0, 320, 321, 322, 323, 324, 0, 326,
	325, 0, 327, 504, 968, 328, 329, 969, 0, 330,
	331, 0, 0, 332, 333, 334, 0, 335, 336, 338,
	340, 337, 339, 341, 343, 344, 342, 970, 345, 346,
	348, 971, 347, 0, 0, 972, 349, 0, 505, 350,
	506, 352, 353, 0, 354, 355, 356, 0, 0, 358,
	359, 360, 0, 0, 361, 362, 507, 973, 363, 974,
	508, 364, 357, 365, 366, 367, 368, 369, 370, 371,
	0, 372, 373, 509, 374, 510, 375, 0, 376, 0,
	377, 378, 379, 380, 381, 1367, 383, 511, 384, 385,
	0, 386, 387, 388, 389, 390, 0, 392, 393, 394,
	391, 395, 396, 397, 398, 0, 399, 975, 400, 401,
	402, 403, 512, 404, 0, 405, 409, 410, 411, 1366,
	413, 414, 415, 0, 421, 422, 416, 418, 419, 420,
	417, 423, 424, 425, 0, 426, 406, 407, 427, 428,
	976, 429, 430, 513, 431, 432, 0, 433, 434, 435,
	436, 408, 437, 441, 442, 438, 439, 440, 514, 0,
	444, 445, 443, 0, 446, 447, 448, 449, 450, 279,
	451, 0, 452, 515, 516, 517, 518, 0, 459, 0,
	453, 454, 519, 455, 520, 0, 456, 457, 458, 0,
	460, 461, 0, 0, 462, 463, 464, 465, 466, 468,
	0, 469, 0, 467, 470, 471, 472, 521, 522, 523,
	0, 474, 473, 524, 0, 0, 0, 0, 475, 476,
	525, 477, 478, 479, 1331, 0, 1185, 1184, 0, 0,
	0, 0, 1182, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 219, 220, 221, 222, 223, 0, 224,
	0, 0, 0, 0, 0, 480, 0, 0, 0, 0,
	225, 227, 226, 228, 229, 481, 482, 230, 483, 233,
	231, 232, 484, 0, 234, 235, 236, 237, 238, 239,
	0, 0, 240, 485, 486, 487, 0, 241, 488, 0,
	1089, 0, 242, 243, 244, 245, 246, 247, 0, 249,
	250, 251, 248, 0, 252, 0, 253, 254, 255, 0,
	961, 256, 257, 0, 0, 0, 0, 0, 0, 0,
	258, 259, 260, 261, 262, 263, 489, 490, 0, 264,
	0, 266, 265, 0, 267, 0, 0, 268, 269, 270,
	0, 271, 0, 272, 273, 0, 274, 491, 275, 276,
	278, 280, 277, 281, 282, 283, 284, 492, 493, 0,
	216, 0, 0, 0, 0, 0, 285, 286, 287, 494,
	288, 289, 0, 290, 0, 291, 0, 0, 962, 292,
	293, 0, 294, 495, 0, 496, 295, 0, 296, 297,
	298, 299, 1330, 498, 499, 351, 964, 300, 301, 0,
	302, 303, 305, 0, 0, 0, 304, 306, 313, 0,
	963, 307, 500, 309, 308, 310, 311, 312, 501, 0,
	502, 0, 314, 965, 503, 966, 315, 316, 317, 967,
	318, 319, 0, 0, 320, 321, 322, 323, 324, 0,
	326, 325, 0, 327, 504, 968, 328, 329, 969, 0,
	330, 331, 0, 0, 332, 333, 334, 0, 335, 336,
	338, 340, 337, 339, 341, 343, 344, 342, 970, 345,
	346, 348, 971, 347, 0, 0, 972, 349, 0, 505,
	350, 506, 352, 353, 0, 354, 355, 356, 0, 0,
	358, 359, 360, 0, 0, 361, 362, 507, 973, 363,
	974, 508, 364, 357, 365, 366, 367, 368, 369, 370,
	371, 0, 372, 373, 509, 374, 510, 375, 0, 376,
	0, 377, 378, 379, 380, 381, 382, 383, 511, 384,
	385, 0, 386, 387, 388, 389, 390, 0, 392, 393,
	394, 391, 395, 396, 397, 398, 0, 399, 975, 400,
	401, 402, 403, 512, 404, 0, 405, 409, 410, 411,
	412, 413, 414, 415, 0, 421, 422, 416, 418, 419,
	420, 417, 423, 424, 425, 0, 426, 406, 407, 427,
	428, 976, 429, 430, 513, 431, 432, 0, 433, 434,
	435, 436, 408, 437, 441, 442, 438, 439, 440, 514,
	0, 444, 445, 443, 0, 446, 447, 448, 449, 450,
	279, 451, 0, 452, 515, 516, 517, 518, 0, 459,
	0, 453, 454, 519, 455, 520, 0, 456, 457, 458,
	0, 460, 461, 0, 0, 462, 463, 464, 465, 466,
	468, 0, 469, 0, 467, 470, 471, 472, 521, 522,
	523, 0, 474, 473, 524, 0, 0, 0, 0, 475,
	476, 525, 477, 478, 479, 1327, 0, 1185, 1184, 0,
	0, 0, 0, 1182, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 219, 220, 221, 222, 223, 0,
	224, 0, 0, 0, 0, 0, 480, 0, 0, 0,
	0, 225, 227, 226, 228, 229, 481, 482, 230, 483,
	233, 231, 232, 484, 0, 234, 235, 236, 237, 238,
	239, 0, 0, 240, 485, 486, 487, 0, 241, 488,
	0, 1089, 0, 242, 243, 244, 245, 246, 247, 0,
	249, 250, 251, 248, 0, 252, 0, 253, 254, 255,
	0, 961, 256, 257, 0, 0, 0, 0, 0, 0,
	0, 258, 259, 260, 261, 262, 263, 489, 490, 0,
	264, 0, 266, 265, 0, 267, 0, 0, 268, 269,
	270, 0, 271, 0, 272, 273, 0, 274, 491, 275,
	276, 278, 280, 277, 281, 282, 283, 284, 492, 493,
	0, 216, 0, 0, 0, 0, 0, 285, 286, 287,
	494, 288, 289, 0, 290, 0, 291, 0, 0, 962,
	292, 293, 0, 294, 495, 0, 496, 295, 0, 296,
	297, 298, 299, 1326, 498, 499, 351, 964, 300, 301,
	0, 302, 303, 305, 0, 0, 0, 304, 306, 313,
	0, 963, 307, 500, 309, 308, 310, 311, 312, 501,
	0, 502, 0, 314, 965, 503, 966, 315, 316, 317,
	967, 318, 319, 0, 0, 320, 321, 322, 323, 324,
	0, 326, 325, 0, 327, 504, 968, 328, 329, 969,
	0, 330, 331, 0, 0, 332, 333, 334, 0, 335,
	336, 338, 340, 337, 339, 341, 343, 344, 342, 970,
	345, 346, 348, 971, 347, 0, 0, 972, 349, 0,
	505, 350, 506, 352, 353, 0, 354, 355, 356, 0,
	0, 358, 359, 360, 0, 0, 361, 362, 507, 973,
	363, 974, 508, 364, 357, 365, 366, 367, 368, 369,
	370, 371, 0, 372, 373, 509, 374, 510, 375, 0,
	376, 0, 377, 378, 379, 380, 381, 382, 383, 511,
	384, 385, 0, 386, 387, 388, 389, 390, 0, 392,
	393, 394, 391, 395, 396, 397, 398, 0, 399, 975,
	400, 401, 402, 403, 512, 404, 0, 405, 409, 410,
	411, 412, 413, 414, 415, 0, 421, 422, 416, 418,
	419, 420, 417, 423, 424, 425, 0, 426, 406, 407,
	427, 428, 976, 429, 430, 513, 431, 432, 0, 433,
	434, 435, 436, 408, 437, 441, 442, 438, 439, 440,
	514, 0, 444, 445, 443, 0, 446, 447, 448, 449,
	450, 279, 451, 0, 452, 515, 516, 517, 518, 0,
	459, 0, 453, 454, 519, 455, 520, 0, 456, 457,
	458, 0, 460, 461, 0, 0, 462, 463, 464, 465,
	466, 468, 0, 469, 0, 467, 470, 471, 472, 521,
	522, 523, 0, 474, 473, 524, 0, 0, 0, 0,
	475, 476, 525, 477, 478, 479, 1263, 0, 1185, 1184,
	0, 0, 0, 0, 1182, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 219, 220, 221, 222, 223,
	0, 224, 0, 0, 0, 0, 0, 480, 0, 0,
	0, 0, 225, 227, 226, 228, 229, 481, 482, 230,
	483, 233, 231, 232, 484, 0, 234, 235, 236, 237,
	238, 239, 0, 0, 240, 485, 486, 487, 0, 241,
	488, 0, 1089, 0, 242, 243, 244, 245, 246, 247,
	0, 249, 250, 251, 248, 0, 252, 0, 253, 254,
	255, 0, 961, 256, 257, 0, 0, 0, 0, 0,
	0, 0, 258, 259, 260, 261, 262, 263, 489, 490,
	0, 264, 0, 266, 265, 0, 267, 0, 0, 268,
	269, 270, 0, 271, 0, 272, 273, 0, 274, 491,
	275, 276, 278, 280, 277, 281, 282, 283, 284, 492,
	493, 0, 216, 0, 0, 0, 0, 0, 285, 286,
	287, 494, 288, 289, 0, 290, 0, 291, 0, 0,
	962, 292, 293, 0, 294, 495, 0, 496, 295, 0,
	296, 297, 298, 299, 1262, 498, 499, 351, 964, 300,
	301, 0, 302, 303, 305, 0, 0, 0, 304, 306,
	313, 0, 963, 307, 500, 309, 308, 310, 311, 312,
	501, 0, 502, 0, 314, 965, 503, 966, 315, 316,
	317, 967, 318, 319, 0, 0, 320, 321, 322, 323,
	324, 0, 326, 325, 0, 327, 504, 968, 328, 329,
	969, 0, 330, 331, 0, 0, 332, 333, 334, 0,
	335, 336, 338, 340, 337, 339, 341, 343, 344, 342,
	970, 345, 346, 348, 971, 347, 0, 0, 972, 349,
	0, 505, 350, 506, 352, 353, 0, 354, 355, 356,
	0, 0, 358, 359, 360, 0, 0, 361, 362, 507,
	973, 363, 974, 508, 364, 357, 365, 366, 367, 368,
	369, 370, 371, 0, 372, 373, 509, 374, 510, 375,
	0, 376, 0, 377, 378, 379, 380, 381, 382, 383,
	511, 384, 385, 0, 386, 387, 388, 389, 390, 0,
	392, 393, 394, 391, 395, 396, 397, 398, 0, 399,
	975, 400, 401, 402, 403, 512, 404, 0, 405, 409,
	410, 411, 412, 413, 414, 415, 0, 421, 422, 416,
	418, 419, 420, 417, 423, 424, 425, 0, 426, 406,
	407, 427, 428, 976, 429, 430, 513, 431, 432, 0,
	433, 434, 435, 436, 408, 437, 441, 442, 438, 439,
	440, 514, 0, 444, 445, 443, 0, 446, 447, 448,
	449, 450, 279, 451, 0, 452, 515, 516, 517, 518,
	0, 459, 0, 453, 454, 519, 455, 520, 0, 456,
	457, 458, 0, 460, 461, 0, 0, 462, 463, 464,
	465, 466, 468, 0, 469, 0, 467, 470, 471, 472,
	521, 522, 523, 0, 474, 473, 524, 0, 0, 0,
	0, 475, 476, 525, 477, 478, 479, 1260, 0, 1185,
	1184, 0, 0, 0, 0, 1182, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 219, 220, 221, 222,
	223, 0, 224, 0, 0, 0, 0, 0, 480, 0,
	0, 0, 0, 225, 227, 226, 228, 229, 481, 482,
	230, 483, 233, 231, 232, 484, 0, 234, 235, 236,
	237, 238, 239, 0, 0, 240, 485, 486, 487, 0,
	241, 488, 0, 1089, 0, 242, 243, 244, 245, 246,
	247, 0, 249, 250, 251, 248, 0, 252, 0, 253,
	254, 255, 0, 961, 256, 257, 0, 0, 0, 0,
	0, 0, 0, 258, 259, 260, 261, 262, 263, 489,
	490, 0, 264, 0, 266, 265, 0, 267, 0, 0,
	268, 269, 270, 0, 271, 0, 272, 273, 0, 274,
	491, 275, 276, 278, 280, 277, 281, 282, 283, 284,
	492, 493, 0, 216, 0, 0, 0, 0, 0, 285,
	286, 287, 494, 288, 289, 0, 290, 0, 291, 0,
	0, 962, 292, 293, 0, 294, 495, 0, 496, 295,
	0, 296, 297, 298, 299, 1259, 498, 499, 351, 964,
	300, 301, 0, 302, 303, 305, 0, 0, 0, 304,
	306, 313, 0, 963, 307, 500, 309, 308, 310, 311,
	312, 501, 0, 502, 0, 314, 965, 503, 966, 315,
	316, 317, 967, 318, 319, 0, 0, 320, 321, 322,
	323, 324, 0, 326, 325, 0, 327, 504, 968, 328,
	329, 969, 0, 330, 331, 0, 0, 332, 333, 334,
	0, 335, 336, 338, 340, 337, 339, 341, 343, 344,
	342, 970, 345, 346, 348, 971, 347, 0, 0, 972,
	349, 0, 505, 350, 506, 352, 353, 0, 354, 355,
	356, 0, 0, 358, 359, 360, 0, 0, 361, 362,
	507, 973, 363, 974, 508, 364, 357, 365, 366, 367,
	368, 369, 370, 371, 0, 372, 373, 509, 374, 510,
	375, 0, 376, 0, 377, 378, 379, 380, 381, 382,
	383, 511, 384, 385, 0, 386, 387, 388, 389, 390,
	0, 392, 393, 394, 391, 395, 396, 397, 398, 0,
	399, 975, 400, 401, 402, 403, 512, 404, 0, 405,
	409, 410, 411, 412, 413, 414, 415, 0, 421, 422,
	416, 418, 419, 420, 417, 423, 424, 425, 0, 426,
	406, 407, 427, 428, 976, 429, 430, 513, 431, 432,
	0, 433, 434, 435, 436, 408, 437, 441, 442, 438,
	439, 440, 514, 0, 444, 445, 443, 0, 446, 447,
	448, 449, 450, 279, 451, 0, 452, 515, 516, 517,
	518, 0, 459, 0, 453, 454, 519, 455, 520, 0,
	456, 457, 458, 0, 460, 461, 0, 0, 462, 463,
	464, 465, 466, 468, 0, 469, 0, 467, 470, 471,
	472, 521, 522, 523, 0, 474, 473, 524, 0, 0,
	0, 0, 475, 476, 525, 477, 478, 479, 1178, 0,
	1185, 1184, 0, 0, 0, 0, 1182, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 219, 220, 221,
	222, 223, 0, 224, 0, 0, 0, 0, 0, 480,
	0, 0, 0, 0, 225, 227, 226, 228, 229, 481,
	482, 230, 483, 233, 231, 232, 484, 0, 234, 235,
	236, 237, 238, 239, 0, 0, 240, 485, 486, 487,
	0, 241, 488, 0, 1089, 0, 242, 243, 244, 245,
	246, 247, 0, 249, 250, 251, 248, 0, 252, 0,
	253, 254, 255, 0, 961, 256, 257, 0, 0, 0,
	0, 0, 0, 0, 258, 259, 260, 261, 262, 263,
	489, 490, 0, 264, 0, 266, 265, 0, 267, 0,
	0, 268, 269, 270, 0, 271, 0, 272, 273, 0,
	274, 491, 275, 276, 278, 280, 277, 281, 282, 283,
	284, 492, 493, 0, 216, 0, 0, 0, 0, 0,
	285, 286, 287, 494, 288, 289, 0, 290, 0, 291,
	0, 0, 962, 292, 293, 0, 294, 495, 0, 496,
	295, 0, 296, 297, 298, 299, 1180, 498, 499, 351,
	964, 300, 301, 0, 302, 303, 305, 0, 0, 0,
	304, 306, 313, 0, 963, 307, 500, 309, 308, 310,
	311, 312, 501, 0, 502, 0, 314, 965, 503, 966,
	315, 316, 317, 967, 318, 319, 0, 0, 320, 321,
	322, 323, 324, 0, 326, 325, 0, 327, 504, 968,
	328, 329, 969, 0, 330, 331, 0, 0, 332, 333,
	334, 0, 335, 336, 338, 340, 337, 339, 341, 343,
	344, 342, 970, 345, 346, 348, 971, 347, 0, 0,
	972, 349, 0, 505, 350, 506, 352, 353, 0, 354,
	355, 356, 0, 0, 358, 359, 360, 0, 0, 361,
	362, 507, 973, 363, 974, 508, 364, 357, 365, 366,
	367, 368, 369, 370, 371, 0, 372, 373, 509, 374,
	510, 375, 0, 376, 0, 377, 378, 379, 380, 381,
	382, 383, 511, 384, 385, 0, 386, 387, 388, 389,
	390, 0, 392, 393, 394, 391, 395, 396, 397, 398,
	0, 399, 975, 400, 401, 402, 403, 512, 404, 0,
	405, 409, 410, 411, 412, 413, 414, 415, 0, 421,
	422, 416, 418, 419, 420, 417, 423, 424, 425, 0,
	426, 406, 407, 427, 428, 976, 429, 430, 513, 431,
	432, 0, 433, 434, 435, 436, 408, 437, 441, 442,
	438, 439, 440, 514, 0, 444, 445, 443, 0, 446,
	447, 448, 449, 450, 279, 451, 0, 452, 515, 516,
	517, 518, 0, 459, 0, 453, 454, 519, 455, 520,
	0, 456, 457, 458, 0, 460, 461, 0, 0, 462,
	463, 464, 465, 466, 468, 0, 469, 0, 467, 470,
	471, 472, 521, 522, 523, 0, 474, 473, 524, 0,
	0, 0, 0, 475, 476, 525, 477, 478, 479, 1185,
	1184, 0, 0, 0, 0, 1182, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 219, 220, 221, 222,
	223, 0, 224, 0, 0, 0, 0, 0, 480, 0,
	0, 0, 0, 225, 227, 226, 228, 229, 481, 482,
	230, 483, 233, 231, 232, 484, 0, 234, 235, 236,
	237, 238, 239, 0, 0, 240, 485, 486, 487, 0,
	241, 488, 0, 1089, 0, 242, 243, 244, 245, 246,
	247, 0, 249, 250, 251, 248, 0, 252, 0, 253,
	254, 255, 0, 961, 256, 257, 0, 0, 0, 0,
	0, 0, 0, 258, 259, 260, 261, 262, 263, 489,
	490, 0, 264, 0, 266, 265, 0, 267, 0, 0,
	268, 269, 270, 0, 271, 0, 272, 273, 0, 274,
	491, 275, 276, 278, 280, 277, 281, 282, 283, 284,
	492, 493, 0, 216, 0, 0, 0, 0, 0, 285,
	286, 287, 494, 288, 289, 0, 290, 0, 291, 0,
	0, 962, 292, 293, 0, 294, 495, 0, 496, 295,
	0, 296, 297, 298, 299, 497, 498, 499, 351, 964,
	300, 301, 0, 302, 303, 305, 0, 0, 0, 304,
	306, 313, 0, 963, 307, 500, 309, 308, 310, 311,
	312, 501, 0, 502, 0, 314, 965, 503, 966, 315,
	316, 317, 967, 318, 319, 0, 0, 320, 321, 322,
	323, 324, 0, 326, 325, 0, 327, 504, 968, 328,
	329, 969, 0, 330, 331, 0, 0, 332, 333, 334,
	0, 335, 336, 338, 340, 337, 339, 341, 343, 344,
	342, 970, 345, 346, 348, 971, 347, 0, 0, 972,
	349, 0, 505, 350, 506, 352, 353, 0, 354, 355,
	356, 0, 0, 358, 359, 360, 0, 0, 361, 362,
	507, 973, 363, 974, 508, 364, 357, 365, 366, 367,
	368, 369, 370, 371, 0, 372, 373, 509, 374, 510,
	375, 0, 376, 0, 377, 378, 379, 380, 381, 382,
	383, 511, 384, 385, 0, 386, 387, 388, 389, 390,
	0, 392, 393, 394, 391, 395, 396, 397, 398, 0,
	399, 975, 400, 401, 402, 403, 512, 404, 0, 405,
	409, 410, 411, 412, 413, 414, 415, 0, 421, 422,
	416, 418, 419, 420, 417, 423, 424, 425, 0, 426,
	406, 407, 427, 428, 976, 429, 430, 513, 431, 432,
	0, 433, 434, 435, 436, 408, 437, 441, 442, 438,
	439, 440, 514, 0, 444, 445, 443, 0, 446, 447,
	448, 449, 450, 279, 451, 0, 452, 515, 516, 517,
	518, 0, 459, 0, 453, 454, 519, 455, 520, 0,
	456, 457, 458, 0, 460, 461, 0, 0, 462, 463,
	464, 465, 466, 468, 0, 469, 0, 467, 470, 471,
	472, 521, 522, 523, 213, 474, 473, 524, 0, 0,
	0, 0, 475, 476, 525, 477, 478, 479, 0, 0,
	0, 219, 220, 221, 222, 223, 0, 224, 0, 0,
	0, 0, 0, 480, 0, 0, 0, 0, 225, 227,
	226, 228, 229, 481, 482, 230, 483, 233, 231, 232,
	484, 0, 234, 235, 236, 237, 238, 239, 0, 0,
	240, 485, 486, 487, 0, 241, 488, 0, 0, 0,
	242, 243, 244, 245, 246, 247, 0, 249, 250, 251,
	248, 0, 252, 0, 253, 254, 255, 0, 0, 256,
	257, 0, 0, 0, 0, 0, 0, 0, 258, 259,
	260, 261, 262, 263, 489, 490, 0, 264, 0, 266,
	265, 0, 267, 0, 0, 268, 269, 270, 0, 271,
	0, 272, 273, 0, 274, 491, 275, 276, 278, 280,
	277, 281, 282, 283, 284, 492, 493, 0, 216, 0,
	0, 0, 0, 0, 285, 286, 287, 494, 288, 289,
	0, 290, 0, 291, 0, 0, 0, 292, 293, 0,
	294, 495, 0, 496, 295, 0, 296, 297, 298, 299,
	497, 498, 499, 351, 0, 300, 301, 0, 302, 303,
	305, 0, 0, 217, 304, 306, 313, 0, 0, 307,
	500, 309, 308, 310, 311, 312, 501, 0, 502, 0,
	314, 0, 503, 0, 315, 316, 317, 0, 318, 319,
	0, 0, 320, 321, 322, 323, 324, 0, 326, 325,
	0, 327, 504, 0, 328, 329, 0, 0, 330, 331,
	0, 0, 332, 333, 334, 0, 335, 336, 338, 340,
	337, 339, 341, 343, 344, 342, 0, 345, 346, 348,
	0, 347, 0, 218, 0, 349, 0, 505, 350, 506,
	352, 353, 0, 354, 355, 356, 0, 0, 358, 359,
	360, 0, 0, 361, 362, 507, 0, 363, 0, 508,
	364, 357, 365, 366, 367, 368, 369, 370, 371, 0,
	372, 373, 509, 374, 510, 375, 0, 376, 0, 377,
	378, 379, 380, 381, 382, 383, 511, 384, 385, 0,
	386, 387, 388, 389, 390, 0, 392, 393, 394, 391,
	395, 396, 397, 398, 0, 399, 0, 400, 401, 402,
	403, 512, 404, 0, 405, 409, 410, 411, 412, 413,
	414, 415, 0, 421, 422, 416, 418, 419, 420, 417,
	423, 424, 425, 0, 426, 406, 407, 427, 428, 0,
	429, 430, 513, 431, 432, 0, 433, 434, 435, 436,
	408, 437, 441, 442, 438, 439, 440, 514, 0, 444,
	445, 443, 0, 446, 447, 448, 449, 450, 279, 451,
	0, 452, 515, 516, 517, 518, 0, 459, 0, 453,
	454, 519, 455, 520, 0, 456, 457, 458, 0, 460,
	461, 0, 0, 462, 463, 464, 465, 466, 468, 0,
	469, 0, 467, 470, 471, 472, 521, 522, 523, 0,
	474, 473, 524, 1185, 1184, 0, 0, 475, 476, 525,
	477, 478, 479, 0, 0, 0, 0, 0, 0, 0,
	219, 220, 221, 222, 223, 0, 224, 0, 602, 0,
	0, 0, 480, 0, 0, 0, 0, 225, 227, 226,
	228, 229, 481, 482, 230, 483, 233, 231, 232, 484,
	0, 234, 235, 236, 237, 238, 239, 0, 0, 240,
	485, 486, 487, 0, 241, 488, 0, 1089, 0, 242,
	243, 244, 245, 246, 247, 0, 249, 250, 251, 248,
	0, 252, 0, 253, 254, 255, 0, 961, 256, 257,
	0, 0, 0, 0, 0, 0, 0, 258, 259, 260,
	261, 262, 263, 489, 490, 1736, 264, 0, 266, 265,
	0, 267, 0, 0, 268, 269, 270, 0, 271, 0,
	272, 273, 0, 274, 491, 275, 276, 278, 280, 277,
	281, 282, 283, 284, 492, 493, 0, 216, 0, 0,
	0, 0, 0, 285, 286, 287, 494, 288, 289, 0,
	290, 0, 291, 0, 0, 962, 292, 293, 0, 294,
	495, 0, 496, 295, 0, 296, 297, 298, 299, 497,
	498, 499, 351, 964, 300, 301, 0, 302, 303, 305,
	0, 0, 0, 304, 306, 313, 0, 963, 307, 500,
	309, 308, 310, 311, 312, 501, 0, 502, 0, 314,
	965, 503, 966, 315, 316, 317, 967, 318, 319, 0,
	0, 320, 321, 322, 323, 324, 0, 326, 325, 0,
	327, 504, 968, 328, 329, 969, 0, 330, 331, 0,
	0, 332, 333, 334, 0, 335, 336, 338, 340, 337,
	339, 341, 343, 344, 342, 970, 345, 346, 348, 971,
	347, 0, 0, 972, 349, 0, 505, 350, 506, 352,
	353, 0, 354, 355, 356, 0, 0, 358, 359, 360,
	0, 0, 361, 362, 507, 973, 363, 974, 508, 364,
	357, 365, 366, 367, 368, 369, 370, 371, 0, 372,
	373, 509, 374, 510, 375, 0, 376, 0, 377, 378,
	379, 380, 381, 382, 383, 511, 384, 385, 0, 386,
	387, 388, 389, 390, 0, 392, 393, 394, 391, 395,
	396, 397, 398, 0, 399, 975, 400, 401, 402, 403,
	512, 404, 0, 405, 409, 410, 411, 412, 413, 414,
	415, 0, 421, 422, 416, 418, 419, 420, 417, 423,
	424, 425, 0, 426, 406, 407, 427, 428, 976, 429,
	430, 513, 431, 432, 0, 433, 434, 435, 436, 408,
	437, 441, 442, 438, 439, 440, 514, 0, 444, 445,
	443, 0, 446, 447, 448, 449, 450, 279, 451, 0,
	452, 515, 516, 517, 518, 0, 459, 0, 453, 454,
	519, 455, 520, 0, 456, 457, 458, 0, 460, 461,
	0, 0, 462, 463, 464, 465, 466, 468, 0, 469,
	0, 467, 470, 471, 472, 521, 522, 523, 0, 474,
	473, 524, 1185, 1184, 0, 0, 475, 476, 525, 477,
	478, 479, 0, 0, 0, 0, 0, 0, 0, 219,
	220, 221, 222, 223, 0, 224, 0, 0, 0, 0,
	0, 480, 0, 0, 0, 0, 225, 227, 226, 228,
	229, 481, 482, 230, 483, 233, 231, 232, 484, 0,
	234, 235, 236, 237, 238, 239, 0, 0, 240, 485,
	486, 487, 0, 241, 488, 0, 1089, 0, 242, 243,
	244, 245, 246, 247, 0, 249, 250, 251, 248, 0,
	252, 0, 253, 254, 255, 0, 961, 256, 257, 0,
	0, 0, 0, 0, 0, 0, 258, 259, 260, 261,
	262, 263, 489, 490, 0, 264, 0, 266, 265, 0,
	267, 0, 0, 268, 269, 270, 0, 271, 0, 272,
	273, 0, 274, 491, 275, 276, 278, 280, 277, 281,
	282, 283, 284, 492, 493, 0, 216, 0, 0, 0,
	0, 0, 285, 286, 287, 494, 288, 289, 0, 290,
	0, 291, 0, 0, 962, 292, 293, 0, 294, 495,
	0, 496, 295, 0, 296, 297, 298, 299, 497, 498,
	499, 351, 964, 300, 301, 0, 302, 303, 305, 0,
	0, 0, 304, 306, 313, 0, 963, 307, 500, 309,
	308, 310, 311, 312, 501, 0, 502, 0, 314, 965,
	503, 966, 315, 316, 317, 967, 318, 319, 0, 0,
	320, 321, 322, 323, 324, 0, 326, 325, 0, 327,
	504, 968, 328, 329, 969, 0, 330, 331, 0, 0,
	332, 333, 334, 0, 335, 336, 338, 340, 337, 339,
	341, 343, 344, 342, 970, 345, 346, 348, 971, 347,
	0, 0, 972, 349, 0, 505, 350, 506, 352, 353,
	0, 354, 355, 356, 0, 0, 358, 359, 360, 0,
	0, 361, 362, 507, 973, 363, 974, 508, 364, 357,
	365, 366, 367, 368, 369, 370, 371, 0, 372, 373,
	509, 374, 510, 375, 0, 376, 0, 377, 378, 379,
	380, 381, 382, 383, 511, 384, 385, 0, 386, 387,
	388, 389, 390, 0, 392, 393, 394, 391, 395, 396,
	397, 398, 0, 399, 975, 400, 401, 402, 403, 512,
	404, 0, 405, 409, 410, 411, 412, 413, 414, 415,
	0, 421, 422, 416, 418, 419, 420, 417, 423, 424,
	425, 0, 426, 406, 407, 427, 428, 976, 429, 430,
	513, 431, 432, 0, 433, 434, 435, 436, 408, 437,
	441, 442, 438, 439, 440, 514, 0, 444, 445, 443,
	0, 446, 447, 448, 449, 450, 279, 451, 0, 452,
	515, 516, 517, 518, 0, 459, 0, 453, 454, 519,
	455, 520, 0, 456, 457, 458, 0, 460, 461, 0,
	0, 462, 463, 464, 465, 466, 468, 0, 469, 0,
	467, 470, 471, 472, 521, 522, 523, 1185, 474, 473,
	524, 0, 0, 0, 0, 475, 476, 525, 477, 478,
	479, 0, 0, 0, 219, 220, 221, 222, 223, 0,
	224, 0, 0, 0, 0, 0, 480, 0, 0, 0,
	0, 225, 227, 226, 228, 229, 481, 482, 230, 483,
	233, 231, 232, 484, 0, 234, 235, 236, 237, 238,
	239, 0, 0, 240, 485, 486, 487, 0, 241, 488,
	0, 1089, 0, 242, 243, 244, 245, 246, 247, 0,
	249, 250, 251, 248, 0, 252, 0, 253, 254, 255,
	0, 961, 256, 257, 0, 0, 0, 0, 0, 0,
	0, 258, 259, 260, 261, 262, 263, 489, 490, 0,
	264, 0, 266, 265, 0, 267, 0, 0, 268, 269,
	270, 0, 271, 0, 272, 273, 0, 274, 491, 275,
	276, 278, 280, 277, 281, 282, 283, 284, 492, 493,
	0, 216, 0, 0, 0, 0, 0, 285, 286, 287,
	494, 288, 289, 0, 290, 0, 291, 0, 0, 962,
	292, 293, 0, 294, 495, 0, 496, 295, 0, 296,
	297, 298, 299, 497, 498, 499, 351, 964, 300, 301,
	0, 302, 303, 305, 0, 0, 0, 304, 306, 313,
	0, 963, 307, 500, 309, 308, 310, 311, 312, 501,
	0, 502, 0, 314, 965, 503, 966, 315, 316, 317,
	967, 318, 319, 0, 0, 320, 321, 322, 323, 324,
	0, 326, 325, 0, 327, 504, 968, 328, 329, 969,
	0, 330, 331, 0, 0, 332, 333, 334, 0, 335,
	336, 338, 340, 337, 339, 341, 343, 344, 342, 970,
	345, 346, 348, 971, 347, 0, 0, 972, 349, 0,
	505, 350, 506, 352, 353, 0, 354, 355, 356, 0,
	0, 358, 359, 360, 0, 0, 361, 362, 507, 973,
	363, 974, 508, 364, 357, 365, 366, 367, 368, 369,
	370, 371, 0, 372, 373, 509, 374, 510, 375, 0,
	376, 0, 377, 378, 379, 380, 381, 382, 383, 511,
	384, 385, 0, 386, 387, 388, 389, 390, 0, 392,
	393, 394, 391, 395, 396, 397, 398, 0, 399, 975,
	400, 401, 402, 403, 512, 404, 0, 405, 409, 410,
	411, 412, 413, 414, 415, 0, 421, 422, 416, 418,
	419, 420, 417, 423, 424, 425, 0, 426, 406, 407,
	427, 428, 976, 429, 430, 513, 431, 432, 0, 433,
	434, 435, 436, 408, 437, 441, 442, 438, 439, 440,
	514, 0, 444, 445, 443, 0, 446, 447, 448, 449,
	450, 279, 451, 0, 452, 515, 516, 517, 518, 0,
	459, 0, 453, 454, 519, 455, 520, 0, 456, 457,
	458, 0, 460, 461, 0, 0, 462, 463, 464, 465,
	466, 468, 0, 469, 0, 467, 470, 471, 472, 521,
	522, 523, 213, 474, 473, 524, 0, 0, 0, 0,
	475, 476, 525, 477, 478, 479, 0, 0, 0, 219,
	220, 221, 222, 223, 0, 224, 0, 0, 0, 0,
	0, 480, 0, 0, 0, 0, 225, 227, 226, 228,
	229, 481, 482, 230, 483, 233, 231, 232, 484, 0,
	234, 235, 236, 237, 238, 239, 0, 0, 240, 485,
	486, 487, 2327, 241, 488, 0, 0, 0, 242, 243,
	244, 245, 246, 247, 0, 249, 250, 251, 248, 2324,
	252, 0, 253, 254, 255, 0, 0, 256, 257, 0,
	0, 0, 0, 0, 0, 0, 258, 259, 260, 261,
	262, 263, 489, 490, 0, 264, 0, 266, 265, 0,
	267, 0, 0, 268, 269, 270, 0, 271, 0, 272,
	273, 0, 274, 491, 275, 276, 278, 280, 277, 281,
	282, 283, 284, 492, 493, 0, 2477, 0, 0, 0,
	0, 0, 285, 286, 287, 494, 288, 289, 0, 290,
	0, 291, 2330, 0, 0, 292, 293, 0, 294, 495,
	0, 496, 295, 0, 296, 297, 298, 299, 497, 498,
	499, 351, 0, 300, 301, 0, 302, 303, 305, 0,
	0, 2474, 304, 306, 313, 0, 0, 307, 500, 309,
	308, 310, 311, 312, 501, 0, 502, 0, 2476, 0,
	503, 0, 315, 316, 317, 0, 318, 319, 0, 0,
	320, 321, 322, 323, 324, 0, 326, 325, 0, 327,
	504, 0, 328, 329, 2473, 0, 330, 331, 0, 0,
	332, 333, 334, 0, 335, 336, 338, 340, 337, 339,
	341, 343, 344, 342, 0, 345, 346, 348, 0, 347,
	0, 0, 0, 349, 0, 505, 350, 506, 352, 353,
	0, 354, 355, 356, 0, 0, 358, 359, 360, 0,
	0, 361, 362, 507, 0, 363, 0, 508, 364, 357,
	365, 366, 367, 368, 369, 370, 371, 0, 372, 373,
	509, 374, 510, 375, 2329, 376, 0, 377, 378, 379,
	380, 381, 382, 383, 511, 384, 385, 0, 386, 387,
	388, 389, 390, 0, 392, 393, 394, 391, 395, 396,
	397, 398, 0, 399, 0, 400, 401, 402, 403, 512,
	404, 0, 405, 409, 410, 411, 412, 413, 414, 415,
	0, 421, 422, 416, 418, 419, 420, 417, 423, 424,
	425, 0, 426, 406, 407, 427, 428, 0, 429, 430,
	513, 431, 432, 0, 433, 434, 435, 436, 408, 437,
	441, 442, 438, 439, 440, 514, 0, 444, 445, 443,
	0, 446, 447, 448, 449, 450, 279, 451, 0, 452,
	515, 516, 517, 518, 0, 459, 0, 453, 454, 519,
	455, 520, 0, 456, 457, 458, 0, 460, 461, 0,
	2475, 462, 463, 464, 465, 466, 468, 0, 469, 0,
	467, 470, 471, 472, 521, 522, 523, 213, 474, 473,
	524, 0, 0, 0, 0, 475, 476, 525, 477, 478,
	479, 0, 0, 0, 219, 220, 221, 222, 223, 0,
	224, 0, 0, 0, 0, 0, 480, 0, 0, 0,
	0, 225, 227, 226, 228, 229, 481, 482, 230, 483,
	233, 231, 232, 484, 0, 234, 235, 236, 237, 238,
	239, 0, 0, 240, 485, 486, 487, 2327, 241, 488,
	0, 0, 2321, 242, 243, 244, 245, 246, 247, 0,
	249, 250, 251, 248, 2324, 252, 0, 253, 254, 255,
	0, 0, 256, 257, 0, 0, 0, 0, 0, 0,
	0, 258, 259, 260, 261, 262, 263, 489, 490, 0,
	264, 0, 266, 265, 0, 267, 0, 0, 268, 269,
	270, 0, 271, 0, 272, 273, 0, 274, 491, 275,
	276, 278, 280, 277, 281, 282, 283, 284, 492, 493,
	0, 0, 0, 0, 0, 0, 0, 285, 286, 287,
	494, 288, 289, 0, 290, 0, 291, 2330, 0, 0,
	292, 293, 0, 294, 495, 0, 496, 295, 0, 296,
	297, 298, 299, 2320, 498, 499, 351, 0, 300, 301,
	0, 302, 303, 305, 0, 0, 0, 304, 306, 313,
	0, 0, 307, 500, 309, 308, 310, 311, 312, 501,
	0, 502, 0, 314, 0, 503, 0, 315, 316, 317,
	0, 318, 319, 0, 0, 320, 321, 322, 323, 324,
	0, 326, 325, 0, 327, 504, 0, 328, 329, 0,
	0, 330, 331, 0, 0, 332, 333, 334, 0, 335,
	336, 338, 340, 337, 339, 341, 343, 344, 342, 0,
	345, 346, 348, 0, 347, 0, 0, 0, 349, 0,
	505, 350, 506, 352, 353, 0, 354, 355, 356, 0,
	0, 358, 359, 360, 0, 0, 361, 362, 507, 0,
	363, 0, 508, 364, 357, 365, 366, 367, 368, 369,
	370, 371, 0, 372, 373, 509, 374, 510, 375, 2329,
	376, 0, 377, 378, 379, 380, 381, 382, 383, 511,
	384, 385, 0, 386, 387, 388, 389, 390, 0, 392,
	393, 394, 391, 395, 396, 397, 398, 0, 399, 0,
	400, 401, 402, 403, 512, 404, 0, 405, 409, 410,
	411, 412, 413, 414, 415, 0, 421, 422, 416, 418,
	419, 420, 417, 423, 424, 425, 0, 426, 406, 407,
	427, 428, 0, 429, 430, 513, 431, 432, 0, 433,
	434, 435, 436, 408, 437, 441, 442, 438, 439, 440,
	514, 0, 444, 445, 443, 0, 446, 447, 448, 449,
	450, 279, 451, 0, 452, 515, 516, 517, 518, 0,
	459, 0, 453, 454, 519, 455, 520, 0, 456, 457,
	458, 0, 460, 461, 0, 2328, 462, 463, 464, 465,
	466, 468, 0, 469, 0, 467, 470, 471, 472, 521,
	522, 523, 0, 474, 473, 524, 1424, 0, 213, 0,
	475, 476, 525, 477, 478, 479, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 219, 220, 221, 222, 223,
	0, 224, 0, 0, 0, 0, 0, 480, 0, 0,
	0, 0, 225, 227, 226, 228, 229, 481, 482, 230,
	483, 233, 231, 232, 484, 0, 234, 235, 236, 237,
	238, 239, 0, 0, 240, 485, 486, 487, 0, 241,
	488, 0, 0, 0, 242, 243, 244, 245, 246, 247,
	0, 249, 250, 251, 248, 0, 252, 0, 253, 254,
	255, 0, 0, 256, 257, 0, 0, 0, 0, 0,
	0, 0, 258, 259, 260, 261, 262, 263, 489, 490,
	0, 264, 0, 266, 265, 0, 267, 0, 0, 268,
	269, 270, 0, 271, 0, 272, 273, 0, 274, 491,
	275, 276, 278, 280, 277, 281, 282, 283, 284, 492,
	493, 0, 216, 0, 0, 0, 0, 0, 285, 286,
	287, 494, 288, 289, 0, 290, 0, 291, 0, 0,
	0, 292, 293, 0, 294, 495, 0, 496, 295, 0,
	296, 297, 298, 299, 497, 498, 499, 351, 0, 300,
	301, 0, 302, 303, 305, 0, 0, 217, 304, 306,
	313, 0, 0, 307, 500, 309, 308, 310, 311, 312,
	501, 0, 502, 0, 314, 0, 503, 0, 315, 316,
	317, 0, 318, 319, 0, 0, 320, 321, 322, 323,
	324, 0, 326, 325, 0, 327, 504, 0, 328, 329,
	0, 0, 330, 331, 0, 0, 332, 333, 334, 0,
	335, 336, 338, 340, 337, 339, 341, 343, 344, 342,
	0, 345, 346, 348, 0, 347, 0, 218, 0, 349,
	0, 505, 350, 506, 352, 353, 0, 354, 355, 356,
	0, 0, 358, 359, 360, 0, 0, 361, 362, 507,
	0, 363, 0, 508, 364, 357, 365, 366, 367, 368,
	369, 370, 371, 0, 372, 373, 509, 374, 510, 375,
	0, 376, 0, 377, 378, 379, 380, 381, 382, 383,
	511, 384, 385, 0, 386, 387, 388, 389, 390, 0,
	392, 393, 394, 391, 395, 396, 397, 398, 0, 399,
	0, 400, 401, 402, 403, 512, 404, 0, 405, 409,
	410, 411, 412, 413, 414, 415, 0, 1427, 422, 416,
	418, 419, 420, 417, 423, 424, 425, 0, 426, 406,
	407, 427, 428, 0, 429, 430, 513, 431, 432, 0,
	433, 434, 435, 436, 408, 437, 441, 442, 438, 439,
	440, 514, 0, 444, 445, 443, 1425, 446, 447, 448,
	449, 450, 279, 451, 0, 452, 515, 516, 517, 518,
	0, 459, 0, 453, 454, 519, 455, 520, 0, 456,
	457, 458, 0, 460, 461, 0, 0, 462, 463, 464,
	465, 466, 468, 0, 469, 0, 467, 470, 471, 472,
	521, 522, 523, 0, 1426, 473, 524, 1173, 0, 213,
	0, 475, 476, 525, 477, 478, 479, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 219, 220, 221, 222,
	223, 0, 224, 0, 0, 0, 0, 0, 480, 0,
	0, 0, 0, 225, 227, 226, 228, 229, 481, 482,
	230, 483, 233, 231, 232, 484, 0, 234, 235, 236,
	237, 238, 239, 0, 0, 240, 485, 486, 487, 0,
	241, 488, 0, 0, 0, 242, 243, 244, 245, 246,
	247, 0, 249, 250, 251, 248, 0, 252, 0, 253,
	254, 255, 0, 0, 256, 257, 0, 0, 0, 0,
	0, 0, 0, 258, 259, 260, 261, 262, 263, 489,
	490, 0, 264, 0, 266, 265, 0, 267, 0, 0,
	268, 269, 270, 0, 271, 0, 272, 273, 0, 274,
	491, 275, 276, 278, 280, 277, 281, 282, 283, 284,
	492, 493, 0, 216, 0, 0, 0, 0, 0, 285,
	286, 287, 494, 288, 289, 0, 290, 0, 291, 0,
	0, 0, 292, 293, 0, 294, 495, 0, 496, 295,
	0, 296, 297, 298, 299, 1175, 498, 499, 351, 0,
	300, 301, 0, 302, 303, 305, 0, 0, 217, 304,
	306, 313, 0, 0, 307, 500, 309, 308, 310, 311,
	312, 501, 0, 502, 0, 314, 0, 503, 0, 315,
	316, 317, 0, 318, 319, 0, 0, 320, 321, 322,
	323, 324, 0, 326, 325, 0, 327, 504, 0, 328,
	329, 0, 0, 330, 331, 0, 0, 332, 333, 334,
	0, 335, 336, 338, 340, 337, 339, 341, 343, 344,
	342, 0, 345, 346, 348, 0, 347, 0, 218, 0,
	349, 0, 505, 350, 506, 352, 353, 0, 354, 355,
	356, 0, 1018, 358, 359, 360, 0, 0, 361, 362,
	507, 0, 363, 0, 508, 364, 357, 365, 366, 367,
	368, 369, 370, 371, 0, 372, 373, 509, 374, 510,
	375, 0, 376, 0, 377, 378, 379, 380, 381, 382,
	383, 511, 384, 385, 0, 386, 387, 388, 389, 390,
	0, 392, 393, 394, 391, 395, 396, 397, 398, 0,
	399, 0, 400, 401, 402, 403, 512, 404, 0, 405,
	409, 410, 411, 412, 413, 414, 415, 0, 421, 422,
	416, 418, 419, 420, 417, 423, 424, 425, 0, 426,
	406, 407, 427, 428, 0, 429, 430, 513, 431, 432,
	0, 433, 434, 435, 436, 408, 437, 441, 442, 438,
	439, 440, 514, 0, 444, 445, 443, 0, 446, 447,
	448, 449, 450, 279, 451, 0, 452, 515, 516, 517,
	518, 0, 459, 0, 453, 454, 519, 455, 520, 0,
	456, 457, 458, 0, 460, 461, 0, 0, 462, 463,
	464, 465, 466, 468, 0, 469, 0, 467, 470, 471,
	472, 521, 522, 523, 0, 474, 473, 524, 1170, 0,
	213, 0, 475, 476, 525, 477, 478, 479, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 219, 220, 221,
	222, 223, 0, 224, 0, 0, 0, 0, 0, 480,
	0, 0, 0, 0, 225, 227, 226, 228, 229, 481,
	482, 230, 483, 233, 231, 232, 484, 0, 234, 235,
	236, 237, 238, 239, 0, 0, 240, 485, 486, 487,
	0, 241, 488, 0, 0, 0, 242, 243, 244, 245,
	246, 247, 0, 249, 250, 251, 248, 0, 252, 0,
	253, 254, 255, 0, 0, 256, 257, 0, 0, 0,
	0, 0, 0, 0, 258, 259, 260, 261, 262, 263,
	489, 490, 0, 264, 0, 266, 265, 0, 267, 0,
	0, 268, 269, 270, 0, 271, 0, 272, 273, 0,
	274, 491, 275, 276, 278, 280, 277, 281, 282, 283,
	284, 492, 493, 0, 216, 0, 0, 0, 0, 0,
	285, 286, 287, 494, 288, 289, 0, 290, 0, 291,
	0, 0, 0, 292, 293, 0, 294, 495, 0, 496,
	295, 0, 296, 297, 298, 299, 1172, 498, 499, 351,
	0, 300, 301, 0, 302, 303, 305, 0, 0, 217,
	304, 306, 313, 0, 0, 307, 500, 309, 308, 310,
	311, 312, 501, 0, 502, 0, 314, 0, 503, 0,
	315, 316, 317, 0, 318, 319, 0, 0, 320, 321,
	322, 323, 324, 0, 326, 325, 0, 327, 504, 0,
	328, 329, 0, 0, 330, 331, 0, 0, 332, 333,
	334, 0, 335, 336, 338, 340, 337, 339, 341, 343,
	344, 342, 0, 345, 346, 348, 0, 347, 0, 218,
	0, 349, 0, 505, 350, 506, 352, 353, 0, 354,
	355, 356, 0, 1018, 358, 359, 360, 0, 0, 361,
	362, 507, 0, 363, 0, 508, 364, 357, 365, 366,
	367, 368, 369, 370, 371, 0, 372, 373, 509, 374,
	510, 375, 0, 376, 0, 377, 378, 379, 380, 381,
	382, 383, 511, 384, 385, 0, 386, 387, 388, 389,
	390, 0, 392, 393, 394, 391, 395, 396, 397, 398,
	0, 399, 0, 400, 401, 402, 403, 512, 404, 0,
	405, 409, 410, 411, 412, 413, 414, 415, 0, 421,
	422, 416, 418, 419, 420, 417, 423, 424, 425, 0,
	426, 406, 407, 427, 428, 0, 429, 430, 513, 431,
	432, 0, 433, 434, 435, 436, 408, 437, 441, 442,
	438, 439, 440, 514, 0, 444, 445, 443, 0, 446,
	447, 448, 449, 450, 279, 451, 0, 452, 515, 516,
	517, 518, 0, 459, 0, 453, 454, 519, 455, 520,
	0, 456, 457, 458, 0, 460, 461, 0, 0, 462,
	463, 464, 465, 466, 468, 0, 469, 0, 467, 470,
	471, 472, 521, 522, 523, 0, 474, 473, 524, 1077,
	0, 213, 0, 475, 476, 525, 477, 478, 479, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 219, 220,
	221, 222, 223, 0, 224, 0, 0, 0, 0, 0,
	480, 0, 0, 0, 0, 225, 227, 226, 228, 229,
	481, 482, 230, 483, 233, 231, 232, 484, 0, 234,
	235, 236, 237, 238, 239, 0, 0, 240, 485, 486,
	487, 0, 241, 488, 0, 0, 0, 242, 243, 244,
	245, 246, 247, 0, 249, 250, 251, 248, 0, 252,
	0, 253, 254, 255, 0, 0, 256, 257, 0, 0,
	0, 0, 0, 0, 0, 258, 259, 260, 261, 262,
	263, 489, 490, 0, 264, 0, 266, 265, 0, 267,
	0, 0, 268, 269, 270, 0, 271, 0, 272, 273,
	0, 274, 491, 275, 276, 278, 280, 277, 281, 282,
	283, 284, 492, 493, 0, 216, 0, 0, 0, 0,
	0, 285, 286, 287, 494, 288, 289, 0, 290, 0,
	291, 0, 0, 0, 292, 293, 0, 294, 495, 0,
	496, 295, 0, 296, 297, 298, 299, 1079, 498, 499,
	351, 0, 300, 301, 0, 302, 303, 305, 0, 0,
	217, 304, 306, 313, 0, 0, 307, 500, 309, 308,
	310, 311, 312, 501, 0, 502, 0, 314, 0, 503,
	0, 315, 316, 317, 0, 318, 319, 0, 0, 320,
	321, 322, 323, 324, 0, 326, 325, 0, 327, 504,
	0, 328, 329, 0, 0, 330, 331, 0, 0, 332,
	333, 334, 0, 335, 336, 338, 340, 337, 339, 341,
	343, 344, 342, 0, 345, 346, 348, 0, 347, 0,
	218, 0, 349, 0, 505, 350, 506, 352, 353, 0,
	354, 355, 356, 0, 1018, 358, 359, 360, 0, 0,
	361, 362, 507, 0, 363, 0, 508, 364, 357, 365,
	366, 367, 368, 369, 370, 371, 0, 372, 373, 509,
	374, 510, 375, 0, 376, 0, 377, 378, 379, 380,
	381, 382, 383, 511, 384, 385, 0, 386, 387, 388,
	389, 390, 0, 392, 393, 394, 391, 395, 396, 397,
	398, 0, 399, 0, 400, 401, 402, 403, 512, 404,
	0, 405, 409, 410, 411, 412, 413, 414, 415, 0,
	421, 422, 416, 418, 419, 420, 417, 423, 424, 425,
	0, 426, 406, 407, 427, 428, 0, 429, 430, 513,
	431, 432, 0, 433, 434, 435, 436, 408, 437, 441,
	442, 438, 439, 440, 514, 0, 444, 445, 443, 0,
	446, 447, 448, 449, 450, 279, 451, 0, 452, 515,
	516, 517, 518, 0, 459, 0, 453, 454, 519, 455,
	520, 0, 456, 457, 458, 0, 460, 461, 0, 0,
	462, 463, 464, 465, 466, 468, 0, 469, 0, 467,
	470, 471, 472, 521, 522, 523, 0, 474, 473, 524,
	554, 0, 213, 0, 475, 476, 525, 477, 478, 479,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 219,
	220, 221, 553, 223, 543, 224, 0, 0, 0, 0,
	0, 480, 0, 0, 0, 0, 225, 227, 226, 228,
	229, 481, 482, 230, 483, 233, 231, 232, 484, 0,
	234, 235, 236, 237, 238, 239, 0, 0, 240, 485,
	486, 487, 0, 241, 488, 0, 0, 0, 242, 243,
	244, 245, 246, 247, 0, 249, 250, 251, 248, 0,
	252, 0, 253, 254, 255, 546, 0, 256, 257, 0,
	0, 0, 0, 0, 0, 0, 258, 259, 260, 261,
	262, 263, 489, 490, 0, 264, 0, 266, 265, 0,
	267, 0, 0, 268, 269, 270, 0, 271, 0, 272,
	273, 0, 274, 491, 275, 276, 278, 280, 277, 281,
	282, 283, 284, 492, 493, 0, 0, 0, 0, 0,
	0, 0, 285, 286, 287, 494, 288, 289, 0, 290,
	0, 291, 0, 0, 0, 292, 293, 547, 294, 495,
	0, 496, 295, 0, 296, 297, 298, 299, 497, 498,
	499, 351, 0, 300, 301, 0, 302, 303, 305, 0,
	0, 0, 304, 306, 313, 0, 0, 307, 500, 309,
	308, 310, 311, 312, 501, 0, 502, 0, 314, 0,
	503, 0, 315, 316, 317, 0, 318, 319, 0, 0,
	320, 321, 322, 323, 324, 0, 326, 325, 0, 327,
	504, 0, 328, 329, 0, 0, 330, 331, 0, 0,
	332, 333, 334, 0, 335, 336, 338, 340, 337, 339,
	341, 343, 344, 342, 0, 345, 346, 348, 0, 347,
	0, 0, 0, 349, 0, 505, 350, 506, 352, 353,
	0, 354, 355, 356, 0, 0, 358, 359, 360, 0,
	0, 361, 362, 507, 0, 363, 0, 508, 364, 357,
	365, 366, 367, 368, 369, 370, 371, 0, 372, 373,
	509, 374, 510, 375, 0, 376, 0, 377, 378, 379,
	380, 381, 382, 383, 511, 384, 385, 0, 386, 387,
	388, 389, 390, 0, 392, 393, 394, 391, 395, 396,
	397, 398, 0, 399, 0, 400, 401, 402, 403, 512,
	404, 0, 405, 409, 410, 411, 412, 413, 414, 415,
	548, 421, 422, 416, 418, 419, 420, 417, 423, 424,
	425, 0, 426, 406, 407, 427, 428, 0, 429, 430,
	513, 431, 432, 0, 433, 434, 435, 436, 408, 437,
	441, 442, 438, 439, 440, 514, 0, 444, 445, 443,
	0, 446, 447, 448, 449, 450, 279, 451, 0, 452,
	515, 516, 517, 518, 0, 459, 0, 453, 454, 519,
	455, 520, 0, 456, 457, 458, 0, 460, 461, 0,
	0, 462, 463, 464, 465, 466, 468, 0, 469, 0,
	467, 470, 471, 472, 521, 522, 523, 0, 474, 473,
	524, 542, 0, 213, 0, 475, 476, 525, 477, 478,
	479, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	219, 220, 221, 222, 223, 543, 224, 0, 0, 0,
	0, 0, 480, 0, 0, 0, 0, 225, 227, 226,
	228, 229, 481, 482, 230, 483, 233, 231, 232, 484,
	0, 234, 235, 236, 237, 238, 239, 0, 0, 240,
	485, 486, 487, 0, 241, 488, 0, 0, 0, 242,
	243, 244, 245, 246, 247, 0, 249, 250, 251, 248,
	0, 252, 0, 253, 254, 255, 546, 0, 256, 257,
	0, 0, 0, 0, 0, 0, 0, 258, 259, 260,
	261, 262, 263, 489, 490, 0, 264, 0, 266, 265,
	0, 267, 0, 0, 268, 269, 270, 0, 271, 0,
	272, 273, 0, 274, 491, 275, 276, 278, 280, 277,
	281, 282, 283, 284, 492, 493, 0, 0, 0, 0,
	0, 0, 0, 285, 286, 287, 494, 288, 289, 0,
	290, 0, 291, 0, 0, 0, 292, 293, 547, 294,
	495, 0, 496, 295, 0, 296, 297, 298, 299, 497,
	498, 499, 351, 0, 300, 301, 0, 302, 303, 305,
	0, 0, 0, 304, 306, 313, 0, 0, 307, 500,
	309, 308, 310, 311, 312, 501, 0, 502, 0, 314,
	0, 503, 0, 315, 316, 317, 0, 318, 319, 0,
	0, 320, 321, 322, 323, 324, 0, 326, 325, 0,
	327, 504, 0, 328, 329, 0, 0, 330, 331, 0,
	0, 332, 333, 334, 0, 335, 336, 338, 340, 337,
	339, 341, 343, 344, 342, 0, 345, 346, 348, 0,
	347, 0, 0, 0, 349, 0, 505, 350, 506, 352,
	353, 0, 354, 355, 356, 0, 0, 358, 359, 360,
	0, 0, 361, 362, 507, 0, 363, 0, 508, 364,
	357, 365, 366, 367, 368, 369, 370, 371, 0, 372,
	373, 509, 374, 510, 375, 0, 376, 0, 377, 378,
	379, 380, 381, 382, 383, 511, 384, 385, 0, 386,
	387, 388, 389, 390, 0, 392, 393, 394, 391, 395,
	396, 397, 398, 0, 399, 0, 400, 401, 402, 403,
	512, 404, 0, 405, 409, 410, 411, 412, 413, 414,
	415, 548, 421, 422, 416, 418, 419, 420, 417, 423,
	424, 425, 0, 426, 406, 407, 427, 428, 0, 429,
	430, 513, 431, 432, 0, 433, 434, 435, 436, 408,
	437, 441, 442, 438, 439, 440, 514, 0, 444, 445,
	443, 0, 446, 447, 448, 449, 450, 279, 451, 0,
	452, 515, 516, 517, 518, 0, 459, 0, 453, 454,
	519, 455, 520, 0, 456, 457, 458, 0, 460, 461,
	0, 0, 462, 463, 464, 465, 466, 468, 0, 469,
	0, 467, 470, 471, 472, 521, 522, 523, 213, 474,
	473, 524, 0, 0, 0, 0, 475, 476, 525, 477,
	478, 479, 0, 0, 0, 219, 220, 221, 222, 223,
	0, 224, 0, 0, 0, 0, 0, 480, 0, 0,
	0, 0, 225, 227, 226, 228, 229, 481, 482, 230,
	483, 233, 231, 232, 484, 0, 234, 235, 236, 237,
	238, 239, 0, 0, 240, 485, 486, 487, 0, 241,
	488, 0, 0, 0, 242, 243, 244, 245, 246, 247,
	0, 249, 250, 251, 248, 0, 252, 0, 253, 254,
	255, 0, 0, 256, 257, 0, 0, 0, 0, 0,
	0, 0, 258, 259, 260, 261, 262, 263, 489, 490,
	0, 264, 0, 266, 265, 0, 267, 0, 0, 268,
	269, 270, 0, 271, 0, 272, 273, 0, 274, 491,
	275, 276, 278, 280, 277, 281, 282, 283, 284, 492,
	493, 0, 216, 0, 0, 0, 0, 0, 285, 286,
	287, 494, 288, 289, 0, 290, 0, 291, 0, 0,
	0, 292, 293, 0, 294, 495, 0, 496, 295, 0,
	296, 297, 298, 299, 497, 498, 499, 351, 0, 300,
	301, 0, 302, 303, 305, 0, 0, 217, 304, 306,
	313, 0, 0, 307, 500, 309, 308, 310, 311, 312,
	501, 0, 502, 0, 314, 0, 503, 0, 315, 316,
	317, 0, 318, 319, 0, 0, 320, 321, 322, 323,
	324, 0, 326, 325, 0, 327, 504, 0, 328, 329,
	0, 0, 330, 331, 0, 0, 332, 333, 334, 0,
	335, 336, 338, 340, 337, 339, 341, 343, 344, 342,
	0, 345, 346, 348, 2805, 347, 0, 218, 0, 349,
	0, 505, 350, 506, 352, 353, 0, 354, 355, 356,
	0, 0, 358, 359, 360, 0, 0, 361, 362, 507,
	0, 363, 0, 508, 364, 357, 365, 366, 367, 368,
	369, 370, 371, 0, 372, 373, 509, 374, 510, 375,
	0, 376, 0, 377, 378, 379, 380, 381, 382, 383,
	511, 384, 385, 0, 386, 387, 388, 389, 390, 0,
	392, 393, 394, 391, 395, 396, 397, 398, 0, 399,
	0, 400, 401, 402, 403, 512, 404, 0, 405, 409,
	410, 411, 412, 413, 414, 415, 0, 421, 422, 416,
	418, 419, 420, 417, 423, 424, 425, 0, 426, 406,
	407, 427, 428, 0, 429, 430, 513, 431, 432, 0,
	433, 434, 435, 436, 408, 437, 441, 442, 438, 439,
	440, 514, 0, 444, 445, 443, 0, 446, 447, 448,
	449, 450, 279, 451, 0, 452, 515, 516, 517, 518,
	0, 459, 0, 453, 454, 519, 455, 520, 0, 456,
	457, 458, 0, 460, 461, 0, 0, 462, 463, 464,
	465, 466, 468, 0, 469, 0, 467, 470, 471, 472,
	521, 522, 523, 213, 474, 473, 524, 0, 0, 0,
	0, 475, 476, 525, 477, 478, 479, 0, 0, 0,
	219, 220, 221, 222, 223, 0, 224, 0, 0, 0,
	0, 0, 480, 0, 0, 0, 0, 225, 227, 226,
	228, 229, 481, 482, 230, 483, 233, 231, 232, 484,
	0, 234, 235, 236, 237, 238, 239, 0, 0, 240,
	485, 486, 487, 0, 241, 488, 0, 0, 0, 242,
	243, 244, 245, 246, 247, 0, 249, 250, 251, 248,
	0, 252, 0, 253, 254, 255, 0, 0, 256, 257,
	0, 0, 0, 0, 0, 0, 0, 258, 259, 260,
	261, 262, 263, 489, 490, 0, 264, 0, 266, 265,
	0, 267, 0, 0, 268, 269, 270, 0, 271, 0,
	272, 273, 0, 274, 491, 275, 276, 278, 280, 277,
	281, 282, 283, 284, 492, 493, 0, 216, 0, 0,
	0, 0, 0, 285, 286, 287, 494, 288, 289, 0,
	290, 0, 291, 0, 0, 0, 292, 293, 0, 294,
	495, 0, 496, 295, 0, 296, 297, 298, 299, 497,
	498, 499, 351, 0, 300, 301, 0, 302, 303, 305,
	0, 0, 217, 304, 306, 313, 0, 0, 307, 500,
	309, 308, 310, 311, 312, 501, 0, 502, 0, 314,
	0, 503, 0, 315, 316, 317, 0, 318, 319, 0,
	0, 320, 321, 322, 323, 324, 0, 326, 325, 0,
	327, 504, 0, 328, 329, 0, 0, 330, 331, 0,
	0, 332, 333, 334, 0, 335, 336, 338, 340, 337,
	339, 341, 343, 344, 342, 0, 345, 346, 348, 0,
	347, 0, 218, 0, 349, 0, 505, 350, 506, 352,
	353, 0, 354, 355, 356, 0, 1018, 358, 359, 360,
	0, 0, 361, 362, 507, 0, 363, 0, 508, 364,
	357, 365, 366, 367, 368, 369, 370, 371, 0, 372,
	373, 509, 374, 510, 375, 0, 376, 0, 377, 378,
	379, 380, 381, 382, 383, 511, 384, 385, 0, 386,
	387, 388, 389, 390, 0, 392, 393, 394, 391, 395,
	396, 397, 398, 0, 399, 0, 400, 401, 402, 403,
	512, 404, 0, 405, 409, 410, 411, 412, 413, 414,
	415, 0, 421, 422, 416, 418, 419, 420, 417, 423,
	424, 425, 0, 426, 406, 407, 427, 428, 0, 429,
	430, 513, 431, 432, 0, 433, 434, 435, 436, 408,
	437, 441, 442, 438, 439, 440, 514, 0, 444, 445,
	443, 0, 446, 447, 448, 449, 450, 279, 451, 0,
	452, 515, 516, 517, 518, 0, 459, 0, 453, 454,
	519, 455, 520, 0, 456, 457, 458, 0, 460, 461,
	0, 0, 462, 463, 464, 465, 466, 468, 0, 469,
	0, 467, 470, 471, 472, 521, 522, 523, 0, 474,
	473, 524, 2413, 0, 213, 0, 475, 476, 525, 477,
	478, 479, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 219, 220, 221, 222, 223, 0, 224, 0, 0,
	0, 0, 0, 480, 0, 0, 0, 0, 225, 227,
	226, 228, 229, 481, 482, 230, 483, 233, 231, 232,
	484, 0, 234, 235, 236, 237, 238, 239, 0, 0,
	240, 485, 486, 487, 0, 241, 488, 0, 0, 0,
	242, 243, 244, 245, 246, 247, 0, 249, 250, 251,
	248, 0, 252, 0, 253, 254, 255, 0, 0, 256,
	257, 0, 0, 0, 0, 0, 0, 0, 258, 259,
	260, 261, 262, 263, 489, 490, 0, 264, 0, 266,
	265, 0, 267, 0, 0, 268, 269, 270, 0, 271,
	0, 272, 273, 0, 274, 491, 275, 276, 278, 280,
	277, 281, 282, 283, 284, 492, 493, 0, 216, 0,
	0, 0, 0, 0, 285, 286, 287, 494, 288, 289,
	0, 290, 0, 291, 0, 0, 0, 292, 293, 0,
	294, 495, 0, 496, 295, 0, 296, 297, 298, 299,
	2412, 498, 499, 351, 0, 300, 301, 0, 302, 303,
	305, 0, 0, 217, 304, 306, 313, 0, 0, 307,
	500, 309, 308, 310, 311, 312, 501, 0, 502, 0,
	314, 0, 503, 0, 315, 316, 317, 0, 318, 319,
	0, 0, 320, 321, 322, 323, 324, 0, 326, 325,
	0, 327, 504, 0, 328, 329, 0, 0, 330, 331,
	0, 0, 332, 333, 334, 0, 335, 336, 338, 340,
	337, 339, 341, 343, 344, 342, 0, 345, 346, 348,
	0, 347, 0, 218, 0, 349, 0, 505, 350, 506,
	352, 353, 0, 354, 355, 356, 0, 0, 358, 359,
	360, 0, 0, 361, 362, 507, 0, 363, 0, 508,
	364, 357, 365, 366, 367, 368, 369, 370, 371, 0,
	372, 373, 509, 374, 510, 375, 0, 376, 0, 377,
	378, 379, 380, 381, 382, 383, 511, 384, 385, 0,
	386, 387, 388, 389, 390, 0, 392, 393, 394, 391,
	395, 396, 397, 398, 0, 399, 0, 400, 401, 402,
	403, 512, 404, 0, 405, 409, 410, 411, 412, 413,
	414, 415, 0, 421, 422, 416, 418, 419, 420, 417,
	423, 424, 425, 0, 426, 406, 407, 427, 428, 0,
	429, 430, 513, 431, 432, 0, 433, 434, 435, 436,
	408, 437, 441, 442, 438, 439, 440, 514, 0, 444,
	445, 443, 0, 446, 447, 448, 449, 450, 279, 451,
	0, 452, 515, 516, 517, 518, 0, 459, 0, 453,
	454, 519, 455, 520, 0, 456, 457, 458, 0, 460,
	461, 0, 0, 462, 463, 464, 465, 466, 468, 0,
	469, 0, 467, 470, 471, 472, 521, 522, 523, 0,
	474, 473, 524, 1930, 0, 213, 0, 475, 476, 525,
	477, 478, 479, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 219, 220, 221, 222, 223, 0, 224, 0,
	0, 0, 0, 0, 480, 0, 0, 0, 0, 225,
	227, 226, 228, 229, 481, 482, 230, 483, 233, 231,
	232, 484, 0, 234, 235, 236, 237, 238, 239, 0,
	0, 240, 485, 486, 487, 0, 241, 488, 0, 0,
	0, 242, 243, 244, 245, 246, 247, 0, 249, 250,
	251, 248, 0, 252, 0, 253, 254, 255, 0, 0,
	256, 257, 0, 0, 0, 0, 0, 0, 0, 258,
	259, 260, 261, 262, 263, 489, 490, 0, 264, 0,
	266, 265, 0, 267, 0, 0, 268, 269, 270, 0,
	271, 0, 272, 273, 0, 274, 491, 275, 276, 278,
	280, 277, 281, 282, 283, 284, 492, 493, 0, 216,
	0, 0, 0, 0, 0, 285, 286, 287, 494, 288,
	289, 0, 290, 0, 291, 0, 0, 0, 292, 293,
	0, 294, 495, 0, 496, 295, 0, 296, 297, 298,
	299, 497, 498, 499, 351, 0, 300, 301, 0, 302,
	303, 305, 0, 0, 217, 304, 306, 313, 0, 0,
	307, 500, 309, 308, 310, 311, 312, 501, 0, 502,
	0, 314, 0, 503, 0, 315, 316, 317, 0, 318,
	319, 0, 0, 320, 321, 322, 323, 324, 0, 326,
	325, 0, 327, 504, 0, 328, 329, 0, 0, 330,
	331, 0, 0, 332, 333, 334, 0, 335, 336, 338,
	340, 337, 339, 341, 343, 344, 342, 0, 345, 346,
	348, 0, 347, 0, 218, 0, 349, 0, 505, 350,
	506, 352, 353, 0, 354, 355, 356, 0, 0, 358,
	359, 360, 0, 0, 361, 362, 507, 0, 363, 0,
	508, 364, 357, 365, 366, 367, 368, 369, 370, 371,
	0, 372, 373, 509, 374, 510, 375, 0, 376, 0,
	377, 378, 379, 380, 381, 382, 383, 511, 384, 385,
	0, 386, 387, 388, 389, 390, 0, 392, 393, 394,
	391, 395, 396, 397, 398, 0, 399, 0, 400, 401,
	402, 403, 512, 404, 0, 405, 409, 410, 411, 412,
	413, 414, 415, 0, 421, 422, 416, 418, 419, 420,
	417, 423, 424, 425, 0, 426, 406, 407, 427, 428,
	0, 429, 430, 513, 431, 432, 0, 433, 434, 435,
	436, 408, 437, 441, 442, 438, 439, 440, 514, 0,
	444, 445, 443, 0, 446, 447, 448, 449, 450, 279,
	451, 0, 452, 515, 516, 517, 518, 0, 459, 0,
	453, 454, 519, 455, 520, 0, 456, 457, 458, 0,
	460, 461, 0, 0, 462, 463, 464, 465, 466, 468,
	0, 469, 0, 467, 470, 471, 472, 521, 522, 523,
	213, 474, 473, 524, 0, 0, 0, 0, 475, 476,
	525, 477, 478, 479, 0, 0, 0, 219, 220, 221,
	222, 223, 0, 224, 0, 0, 0, 0, 0, 480,
	0, 0, 0, 0, 225, 227, 226, 228, 229, 481,
	482, 230, 483, 233, 231, 232, 484, 0, 234, 235,
	236, 237, 238, 239, 0, 0, 240, 485, 486, 487,
	0, 241, 488, 0, 0, 0, 242, 243, 244, 245,
	246, 247, 0, 249, 250, 251, 248, 0, 252, 0,
	253, 254, 255, 0, 0, 256, 257, 0, 0, 0,
	0, 0, 0, 0, 258, 259, 260, 261, 262, 263,
	489, 490, 0, 264, 0, 266, 265, 0, 267, 0,
	0, 268, 269, 270, 0, 271, 0, 272, 273, 0,
	274, 491, 275, 276, 278, 280, 277, 281, 282, 283,
	284, 492, 493, 0, 216, 0, 0, 0, 0, 0,
	285, 286, 287, 494, 288, 289, 0, 290, 0, 291,
	0, 0, 0, 292, 293, 0, 294, 495, 0, 496,
	295, 0, 296, 297, 298, 299, 497, 498, 499, 351,
	0, 300, 301, 0, 302, 303, 305, 0, 0, 217,
	304, 306, 313, 0, 0, 307, 500, 309, 308, 310,
	311, 312, 501, 0, 502, 0, 314, 0, 503, 0,
	315, 316, 317, 0, 318, 319, 0, 0, 320, 321,
	322, 323, 324, 0, 326, 325, 0, 327, 504, 0,
	328, 329, 0, 0, 330, 331, 0, 0, 332, 333,
	334, 0, 335, 336, 338, 340, 337, 339, 341, 343,
	344, 342, 0, 345, 346, 348, 0, 347, 0, 218,
	0, 349, 0, 505, 350, 506, 352, 353, 0, 354,
	355, 356, 0, 0, 358, 359, 360, 0, 0, 361,
	362, 507, 0, 363, 0, 508, 364, 357, 365, 366,
	367, 368, 369, 370, 371, 0, 372, 373, 509, 374,
	510, 375, 0, 376, 0, 377, 378, 379, 380, 381,
	382, 383, 511, 384, 385, 0, 386, 387, 388, 389,
	390, 0, 392, 393, 394, 391, 395, 396, 397, 398,
	0, 399, 0, 400, 401, 402, 403, 512, 404, 0,
	405, 409, 410, 411, 412, 413, 414, 415, 0, 421,
	422, 416, 418, 419, 420, 417, 423, 424, 425, 0,
	426, 406, 407, 427, 428, 0, 429, 430, 513, 431,
	432, 0, 433, 434, 435, 436, 408, 437, 441, 442,
	438, 439, 440, 514, 0, 444, 445, 443, 1856, 446,
	447, 448, 449, 450, 279, 451, 0, 452, 515, 516,
	517, 518, 0, 459, 0, 453, 454, 519, 455, 520,
	0, 456, 457, 458, 0, 460, 461, 0, 0, 462,
	463, 464, 465, 466, 468, 0, 469, 0, 467, 470,
	471, 472, 521, 522, 523, 0, 474, 473, 524, 1860,
	0, 213, 0, 475, 476, 525, 477, 478, 479, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 219, 220,
	221, 222, 223, 0, 224, 0, 0, 0, 0, 0,
	480, 0, 0, 0, 0, 225, 227, 226, 228, 229,
	481, 482, 230, 483, 233, 231, 232, 484, 0, 234,
	235, 236, 237, 238, 239, 0, 0, 240, 485, 486,
	487, 0, 241, 488, 0, 0, 0, 242, 243, 244,
	245, 246, 247, 0, 249, 250, 251, 248, 0, 252,
	0, 253, 254, 255, 0, 0, 256, 257, 0, 0,
	0, 0, 0, 0, 0, 258, 259, 260, 261, 262,
	263, 489, 490, 0, 264, 0, 266, 265, 0, 267,
	0, 0, 268, 269, 270, 0, 271, 0, 272, 273,
	0, 274, 491, 275, 276, 278, 280, 277, 281, 282,
	283, 284, 492, 493, 0, 216, 0, 0, 0, 0,
	0, 285, 286, 287, 494, 288, 289, 0, 290, 0,
	291, 0, 0, 0, 292, 293, 0, 294, 495, 0,
	496, 295, 0, 296, 297, 298, 299, 1859, 498, 499,
	351, 0, 300, 301, 0, 302, 303, 305, 0, 0,
	217, 304, 306, 313, 0, 0, 307, 500, 309, 308,
	310, 311, 312, 501, 0, 502, 0, 314, 0, 503,
	0, 315, 316, 317, 0, 318, 319, 0, 0, 320,
	321, 322, 323, 324, 0, 326, 325, 0, 327, 504,
	0, 328, 329, 0, 0, 330, 331, 0, 0, 332,
	333, 334, 0, 335, 336, 338, 340, 337, 339, 341,
	343, 344, 342, 0, 345, 346, 348, 0, 347, 0,
	218, 0, 349, 0, 505, 350, 506, 352, 353, 0,
	354, 355, 356, 0, 0, 358, 359, 360, 0, 0,
	361, 362, 507, 0, 363, 0, 508, 364, 357, 365,
	366, 367, 368, 369, 370, 371, 0, 372, 373, 509,
	374, 510, 375, 0, 376, 0, 377, 378, 379, 380,
	381, 382, 383, 511, 384, 385, 0, 386, 387, 388,
	389, 390, 0, 392, 393, 394, 391, 395, 396, 397,
	398, 0, 399, 0, 400, 401, 402, 403, 512, 404,
	0, 405, 409, 410, 411, 412, 413, 414, 415, 0,
	421, 422, 416, 418, 419, 420, 417, 423, 424, 425,
	0, 426, 406, 407, 427, 428, 0, 429, 430, 513,
	431, 432, 0, 433, 434, 435, 436, 408, 437, 441,
	442, 438, 439, 440, 514, 0, 444, 445, 443, 0,
	446, 447, 448, 449, 450, 279, 451, 0, 452, 515,
	516, 517, 518, 0, 459, 0, 453, 454, 519, 455,
	520, 0, 456, 457, 458, 0, 460, 461, 0, 0,
	462, 463, 464, 465, 466, 468, 0, 469, 0, 467,
	470, 471, 472, 521, 522, 523, 0, 474, 473, 524,
	1849, 0, 213, 0, 475, 476, 525, 477, 478, 479,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 219,
	220, 221, 222, 223, 0, 224, 0, 0, 0, 0,
	0, 480, 0, 0, 0, 0, 225, 227, 226, 228,
	229, 481, 482, 230, 483, 233, 231, 232, 484, 0,
	234, 235, 236, 237, 238, 239, 0, 0, 240, 485,
	486, 487, 0, 241, 488, 0, 0, 0, 242, 243,
	244, 245, 246, 247, 0, 249, 250, 251, 248, 0,
	252, 0, 253, 254, 255, 0, 0, 256, 257, 0,
	0, 0, 0, 0, 0, 0, 258, 259, 260, 261,
	262, 263, 489, 490, 0, 264, 0, 266, 265, 0,
	267, 0, 0, 268, 269, 270, 0, 271, 0, 272,
	273, 0, 274, 491, 275, 276, 278, 280, 277, 281,
	282, 283, 284, 492, 493, 0, 216, 0, 0, 0,
	0, 0, 285, 286, 287, 494, 288, 289, 0, 290,
	0, 291, 0, 0, 0, 292, 293, 0, 294, 495,
	0, 496, 295, 0, 296, 297, 298, 299, 1851, 498,
	499, 351, 0, 300, 301, 0, 302, 303, 305, 0,
	0, 217, 304, 306, 313, 0, 0, 307, 500, 309,
	308, 310, 311, 312, 501, 0, 502, 0, 314, 0,
	503, 0, 315, 316, 317, 0, 318, 319, 0, 0,
	320, 321, 322, 323, 324, 0, 326, 325, 0, 327,
	504, 0, 328, 329, 0, 0, 330, 331, 0, 0,
	332, 333, 334, 0, 335, 336, 338, 340, 337, 339,
	341, 343, 344, 342, 0, 345, 346, 348, 0, 347,
	0, 218, 0, 349, 0, 505, 350, 506, 352, 353,
	0, 354, 355, 356, 0, 0, 358, 359, 360, 0,
	0, 361, 362, 507, 0, 363, 0, 508, 364, 357,
	365, 366, 367, 368, 369, 370, 371, 0, 372, 373,
	509, 374, 510, 375, 0, 376, 0, 377, 378, 379,
	380, 381, 382, 383, 511, 384, 385, 0, 386, 387,
	388, 389, 390, 0, 392, 393, 394, 391, 395, 396,
	397, 398, 0, 399, 0, 400, 401, 402, 403, 512,
	404, 0, 405, 409, 410, 411, 412, 413, 414, 415,
	0, 421, 422, 416, 418, 419, 420, 417, 423, 424,
	425, 0, 426, 406, 407, 427, 428, 0, 429, 430,
	513, 431, 432, 0, 433, 434, 435, 436, 408, 437,
	441, 442, 438, 439, 440, 514, 0, 444, 445, 443,
	0, 446, 447, 448, 449, 450, 279, 451, 0, 452,
	515, 516, 517, 518, 0, 459, 0, 453, 454, 519,
	455, 520, 0, 456, 457, 458, 0, 460, 461, 0,
	0, 462, 463, 464, 465, 466, 468, 0, 469, 0,
	467, 470, 471, 472, 521, 522, 523, 0, 474, 473,
	524, 1320, 0, 213, 0, 475, 476, 525, 477, 478,
	479, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	219, 220, 221, 222, 223, 0, 224, 0, 0, 0,
	0, 0, 480, 0, 0, 0, 0, 225, 227, 226,
	228, 229, 481, 482, 230, 483, 233, 231, 232, 484,
	0, 234, 235, 236, 237, 238, 239, 0, 0, 240,
	485, 486, 487, 0, 241, 488, 0, 0, 0, 242,
	243, 244, 245, 246, 247, 0, 249, 250, 251, 248,
	0, 252, 0, 253, 254, 255, 0, 0, 256, 257,
	0, 0, 0, 0, 0, 0, 0, 258, 259, 260,
	261, 262, 263, 489, 490, 0, 264, 0, 266, 265,
	0, 267, 0, 0, 268, 269, 270, 0, 271, 0,
	272, 273, 0, 274, 491, 275, 276, 278, 280, 277,
	281, 282, 283, 284, 492, 493, 0, 216, 0, 0,
	0, 0, 0, 285, 286, 287, 494, 288, 289, 0,
	290, 0, 291, 0, 0, 0, 292, 293, 0, 294,
	495, 0, 496, 295, 0, 296, 297, 298, 299, 1319,
	498, 499, 351, 0, 300, 301, 0, 302, 303, 305,
	0, 0, 217, 304, 306, 313, 0, 0, 307, 500,
	309, 308, 310, 311, 312, 501, 0, 502, 0, 314,
	0, 503, 0, 315, 316, 317, 0, 318, 319, 0,
	0, 320, 321, 322, 323, 324, 0, 326, 325, 0,
	327, 504, 0, 328, 329, 0, 0, 330, 331, 0,
	0, 332, 333, 334, 0, 335, 336, 338, 340, 337,
	339, 341, 343, 344, 342, 0, 345, 346, 348, 0,
	347, 0, 218, 0, 349, 0, 505, 350, 506, 352,
	353, 0, 354, 355, 356, 0, 0, 358, 359, 360,
	0, 0, 361, 362, 507, 0, 363, 0, 508, 364,
	357, 365, 366, 367, 368, 369, 370, 371, 0, 372,
	373, 509, 374, 510, 375, 0, 376, 0, 377, 378,
	379, 380, 381, 382, 383, 511, 384, 385, 0, 386,
	387, 388, 389, 390, 0, 392, 393, 394, 391, 395,
	396, 397, 398, 0, 399, 0, 400, 401, 402, 403,
	512, 404, 0, 405, 409, 410, 411, 412, 413, 414,
	415, 0, 421, 422, 416, 418, 419, 420, 417, 423,
	424, 425, 0, 426, 406, 407, 427, 428, 0, 429,
	430, 513, 431, 432, 0, 433, 434, 435, 436, 408,
	437, 441, 442, 438, 439, 440, 514, 0, 444, 445,
	443, 0, 446, 447, 448, 449, 450, 279, 451, 0,
	452, 515, 516, 517, 518, 0, 459, 0, 453, 454,
	519, 455, 520, 0, 456, 457, 458, 0, 460, 461,
	0, 0, 462, 463, 464, 465, 466, 468, 0, 469,
	0, 467, 470, 471, 472, 521, 522, 523, 0, 474,
	473, 524, 1317, 0, 213, 0, 475, 476, 525, 477,
	478, 479, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 219, 220, 221, 222, 223, 0, 224, 0, 0,
	0, 0, 0, 480, 0, 0, 0, 0, 225, 227,
	226, 228, 229, 481, 482, 230, 483, 233, 231, 232,
	484, 0, 234, 235, 236, 237, 238, 239, 0, 0,
	240, 485, 486, 487, 0, 241, 488, 0, 0, 0,
	242, 243, 244, 245, 246, 247, 0, 249, 250, 251,
	248, 0, 252, 0, 253, 254, 255, 0, 0, 256,
	257, 0, 0, 0, 0, 0, 0, 0, 258, 259,
	260, 261, 262, 263, 489, 490, 0, 264, 0, 266,
	265, 0, 267, 0, 0, 268, 269, 270, 0, 271,
	0, 272, 273, 0, 274, 491, 275, 276, 278, 280,
	277, 281, 282, 283, 284, 492, 493, 0, 216, 0,
	0, 0, 0, 0, 285, 286, 287, 494, 288, 289,
	0, 290, 0, 291, 0, 0, 0, 292, 293, 0,
	294, 495, 0, 496, 295, 0, 296, 297, 298, 299,
	1316, 498, 499, 351, 0, 300, 301, 0, 302, 303,
	305, 0, 0, 217, 304, 306, 313, 0, 0, 307,
	500, 309, 308, 310, 311, 312, 501, 0, 502, 0,
	314, 0, 503, 0, 315, 316, 317, 0, 318, 319,
	0, 0, 320, 321, 322, 323, 324, 0, 326, 325,
	0, 327, 504, 0, 328, 329, 0, 0, 330, 331,
	0, 0, 332, 333, 334, 0, 335, 336, 338, 340,
	337, 339, 341, 343, 344, 342, 0, 345, 346, 348,
	0, 347, 0, 218, 0, 349, 0, 505, 350, 506,
	352, 353, 0, 354, 355, 356, 0, 0, 358, 359,
	360, 0, 0, 361, 362, 507, 0, 363, 0, 508,
	364, 357, 365, 366, 367, 368, 369, 370, 371, 0,
	372, 373, 509, 374, 510, 375, 0, 376, 0, 377,
	378, 379, 380, 381, 382, 383, 511, 384, 385, 0,
	386, 387, 388, 389, 390, 0, 392, 393, 394, 391,
	395, 396, 397, 398, 0, 399, 0, 400, 401, 402,
	403, 512, 404, 0, 405, 409, 410, 411, 412, 413,
	414, 415, 0, 421, 422, 416, 418, 419, 420, 417,
	423, 424, 425, 0, 426, 406, 407, 427, 428, 0,
	429, 430, 513, 431, 432, 0, 433, 434, 435, 436,
	408, 437, 441, 442, 438, 439, 440, 514, 0, 444,
	445, 443, 0, 446, 447, 448, 449, 450, 279, 451,
	0, 452, 515, 516, 517, 518, 0, 459, 0, 453,
	454, 519, 455, 520, 0, 456, 457, 458, 0, 460,
	461, 0, 0, 462, 463, 464, 465, 466, 468, 0,
	469, 0, 467, 470, 471, 472, 521, 522, 523, 0,
	474, 473, 524, 1314, 0, 213, 0, 475, 476, 525,
	477, 478, 479, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 219, 220, 221, 222, 223, 0, 224, 0,
	0, 0, 0, 0, 480, 0, 0, 0, 0, 225,
	227, 226, 228, 229, 481, 482, 230, 483, 233, 231,
	232, 484, 0, 234, 235, 236, 237, 238, 239, 0,
	0, 240, 485, 486, 487, 0, 241, 488, 0, 0,
	0, 242, 243, 244, 245, 246, 247, 0, 249, 250,
	251, 248, 0, 252, 0, 253, 254, 255, 0, 0,
	256, 257, 0, 0, 0, 0, 0, 0, 0, 258,
	259, 260, 261, 262, 263, 489, 490, 0, 264, 0,
	266, 265, 0, 267, 0, 0, 268, 269, 270, 0,
	271, 0, 272, 273, 0, 274, 491, 275, 276, 278,
	280, 277, 281, 282, 283, 284, 492, 493, 0, 216,
	0, 0, 0, 0, 0, 285, 286, 287, 494, 288,
	289, 0, 290, 0, 291, 0, 0, 0, 292, 293,
	0, 294, 495, 0, 496, 295, 0, 296, 297, 298,
	299, 1313, 498, 499, 351, 0, 300, 301, 0, 302,
	303, 305, 0, 0, 217, 304, 306, 313, 0, 0,
	307, 500, 309, 308, 310, 311, 312, 501, 0, 502,
	0, 314, 0, 503, 0, 315, 316, 317, 0, 318,
	319, 0, 0, 320, 321, 322, 323, 324, 0, 326,
	325, 0, 327, 504, 0, 328, 329, 0, 0, 330,
	331, 0, 0, 332, 333, 334, 0, 335, 336, 338,
	340, 337, 339, 341, 343, 344, 342, 0, 345, 346,
	348, 0, 347, 0, 218, 0, 349, 0, 505, 350,
	506, 352, 353, 0, 354, 355, 356, 0, 0, 358,
	359, 360, 0, 0, 361, 362, 507, 0, 363, 0,
	508, 364, 357, 365, 366, 367, 368, 369, 370, 371,
	0, 372, 373, 509, 374, 510, 375, 0, 376, 0,
	377, 378, 379, 380, 381, 382, 383, 511, 384, 385,
	0, 386, 387, 388, 389, 390, 0, 392, 393, 394,
	391, 395, 396, 397, 398, 0, 399, 0, 400, 401,
	402, 403, 512, 404, 0, 405, 409, 410, 411, 412,
	413, 414, 415, 0, 421, 422, 416, 418, 419, 420,
	417, 423, 424, 425, 0, 426, 406, 407, 427, 428,
	0, 429, 430, 513, 431, 432, 0, 433, 434, 435,
	436, 408, 437, 441, 442, 438, 439, 440, 514, 0,
	444, 445, 443, 0, 446, 447, 448, 449, 450, 279,
	451, 0, 452, 515, 516, 517, 518, 0, 459, 0,
	453, 454, 519, 455, 520, 0, 456, 457, 458, 0,
	460, 461, 0, 0, 462, 463, 464, 465, 466, 468,
	0, 469, 0, 467, 470, 471, 472, 521, 522, 523,
	0, 474, 473, 524, 1310, 0, 213, 0, 475, 476,
	525, 477, 478, 479, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 219, 220, 221, 222, 223, 0, 224,
	0, 0, 0, 0, 0, 480, 0, 0, 0, 0,
	225, 227, 226, 228, 229, 481, 482, 230, 483, 233,
	231, 232, 484, 0, 234, 235, 236, 237, 238, 239,
	0, 0, 240, 485, 486, 487, 0, 241, 488, 0,
	0, 0, 242, 243, 244, 245, 246, 247, 0, 249,
	250, 251, 248, 0, 252, 0, 253, 254, 255, 0,
	0, 256, 257, 0, 0, 0, 0, 0, 0, 0,
	258, 259, 260, 261, 262, 263, 489, 490, 0, 264,
	0, 266, 265, 0, 267, 0, 0, 268, 269, 270,
	0, 271, 0, 272, 273, 0, 274, 491, 275, 276,
	278, 280, 277, 281, 282, 283, 284, 492, 493, 0,
	216, 0, 0, 0, 0, 0, 285, 286, 287, 494,
	288, 289, 0, 290, 0, 291, 0, 0, 0, 292,
	293, 0, 294, 495, 0, 496, 295, 0, 296, 297,
	298, 299, 1309, 498, 499, 351, 0, 300, 301, 0,
	302, 303, 305, 0, 0, 217, 304, 306, 313, 0,
	0, 307, 500, 309, 308, 310, 311, 312, 501, 0,
	502, 0, 314, 0, 503, 0, 315, 316, 317, 0,
	318, 319, 0, 0, 320, 321, 322, 323, 324, 0,
	326, 325, 0, 327, 504, 0, 328, 329, 0, 0,
	330, 331, 0, 0, 332, 333, 334, 0, 335, 336,
	338, 340, 337, 339, 341, 343, 344, 342, 0, 345,
	346, 348, 0, 347, 0, 218, 0, 349, 0, 505,
	350, 506, 352, 353, 0, 354, 355, 356, 0, 0,
	358, 359, 360, 0, 0, 361, 362, 507, 0, 363,
	0, 508, 364, 357, 365, 366, 367, 368, 369, 370,
	371, 0, 372, 373, 509, 374, 510, 375, 0, 376,
	0, 377, 378, 379, 380, 381, 382, 383, 511, 384,
	385, 0, 386, 387, 388, 389, 390, 0, 392, 393,
	394, 391, 395, 396, 397, 398, 0, 399, 0, 400,
	401, 402, 403, 512, 404, 0, 405, 409, 410, 411,
	412, 413, 414, 415, 0, 421, 422, 416, 418, 419,
	420, 417, 423, 424, 425, 0, 426, 406, 407, 427,
	428, 0, 429, 430, 513, 431, 432, 0, 433, 434,
	435, 436, 408, 437, 441, 442, 438, 439, 440, 514,
	0, 444, 445, 443, 0, 446, 447, 448, 449, 450,
	279, 451, 0, 452, 515, 516, 517, 518, 0, 459,
	0, 453, 454, 519, 455, 520, 0, 456, 457, 458,
	0, 460, 461, 0, 0, 462, 463, 464, 465, 466,
	468, 0, 469, 0, 467, 470, 471, 472, 521, 522,
	523, 0, 474, 473, 524, 1195, 0, 213, 0, 475,
	476, 525, 477, 478, 479, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 219, 220, 221, 222, 223, 0,
	224, 0, 0, 0, 0, 0, 480, 0, 0, 0,
	0, 225, 227, 226, 228, 229, 481, 482, 230, 483,
	233, 231, 232, 484, 0, 234, 235, 236, 237, 238,
	239, 0, 0, 240, 485, 486, 487, 0, 241, 488,
	0, 0, 0, 242, 243, 244, 245, 246, 247, 0,
	249, 250, 251, 248, 0, 252, 0, 253, 254, 255,
	0, 0, 256, 257, 0, 0, 0, 0, 0, 0,
	0, 258, 259, 260, 261, 262, 263, 489, 490, 0,
	264, 0, 266, 265, 0, 267, 0, 0, 268, 269,
	270, 0, 271, 0, 272, 273, 0, 274, 491, 275,
	276, 278, 280, 277, 281, 282, 283, 284, 492, 493,
	0, 216, 0, 0, 0, 0, 0, 285, 286, 287,
	494, 288, 289, 0, 290, 0, 291, 0, 0, 0,
	292, 293, 0, 294, 495, 0, 496, 295, 0, 296,
	297, 298, 299, 1197, 498, 499, 351, 0, 300, 301,
	0, 302, 303, 305, 0, 0, 217, 304, 306, 313,
	0, 0, 307, 500, 309, 308, 310, 311, 312, 501,
	0, 502, 0, 314, 0, 503, 0, 315, 316, 317,
	0, 318, 319, 0, 0, 320, 321, 322, 323, 324,
	0, 326, 325, 0, 327, 504, 0, 328, 329, 0,
	0, 330, 331, 0, 0, 332, 333, 334, 0, 335,
	336, 338, 340, 337, 339, 341, 343, 344, 342, 0,
	345, 346, 348, 0, 347, 0, 218, 0, 349, 0,
	505, 350, 506, 352, 353, 0, 354, 355, 356, 0,
	0, 358, 359, 360, 0, 0, 361, 362, 507, 0,
	363, 0, 508, 364, 357, 365, 366, 367, 368, 369,
	370, 371, 0, 372, 373, 509, 374, 510, 375, 0,
	376, 0, 377, 378, 379, 380, 381, 382, 383, 511,
	384, 385, 0, 386, 387, 388, 389, 390, 0, 392,
	393, 394, 391, 395, 396, 397, 398, 0, 399, 0,
	400, 401, 402, 403, 512, 404, 0, 405, 409, 410,
	411, 412, 413, 414, 415, 0, 421, 422, 416, 418,
	419, 420, 417, 423, 424, 425, 0, 426, 406, 407,
	427, 428, 0, 429, 430, 513, 431, 432, 0, 433,
	434, 435, 436, 408, 437, 441, 442, 438, 439, 440,
	514, 0, 444, 445, 443, 0, 446, 447, 448, 449,
	450, 279, 451, 0, 452, 515, 516, 517, 518, 0,
	459, 0, 453, 454, 519, 455, 520, 0, 456, 457,
	458, 0, 460, 461, 0, 0, 462, 463, 464, 465,
	466, 468, 0, 469, 0, 467, 470, 471, 472, 521,
	522, 523, 213, 474, 473, 524, 0, 0, 0, 0,
	475, 476, 525, 477, 478, 479, 0, 0, 0, 219,
	220, 221, 222, 223, 0, 224, 0, 0, 0, 0,
	0, 480, 0, 0, 0, 0, 225, 227, 226, 228,
	229, 481, 482, 230, 483, 233, 231, 232, 484, 0,
	234, 235, 236, 237, 238, 239, 0, 0, 240, 485,
	486, 487, 0, 241, 488, 0, 0, 0, 242, 243,
	244, 245, 246, 247, 0, 249, 250, 251, 248, 0,
	252, 0, 253, 254, 255, 0, 0, 256, 257, 0,
	0, 0, 0, 0, 0, 0, 258, 259, 260, 261,
	262, 263, 489, 490, 0, 264, 0, 266, 265, 0,
	267, 0, 0, 268, 269, 270, 0, 271, 0, 272,
	273, 0, 274, 491, 275, 276, 278, 280, 277, 281,
	282, 283, 284, 492, 493, 0, 216, 0, 0, 0,
	0, 0, 285, 286, 287, 494, 288, 289, 0, 290,
	0, 291, 0, 0, 0, 292, 293, 0, 294, 495,
	0, 496, 295, 0, 296, 297, 298, 299, 497, 498,
	499, 351, 0, 300, 301, 0, 302, 303, 305, 0,
	0, 217, 304, 306, 313, 0, 0, 307, 500, 309,
	308, 310, 311, 312, 501, 0, 502, 0, 314, 0,
	503, 0, 315, 316, 317, 0, 318, 319, 0, 0,
	320, 321, 322, 323, 324, 0, 326, 325, 0, 327,
	504, 0, 328, 329, 0, 0, 330, 331, 0, 0,
	332, 333, 334, 0, 335, 336, 338, 340, 337, 339,
	341, 343, 344, 342, 0, 345, 346, 348, 0, 347,
	0, 218, 0, 349, 0, 505, 350, 506, 352, 353,
	0, 354, 355, 356, 0, 0, 358, 359, 360, 0,
	0, 361, 362, 507, 0, 363, 0, 508, 364, 357,
	365, 366, 367, 368, 369, 370, 371, 0, 372, 373,
	509, 374, 510, 375, 0, 376, 0, 377, 378, 379,
	380, 381, 382, 383, 511, 384, 385, 0, 386, 387,
	388, 389, 390, 0, 392, 393, 394, 391, 395, 396,
	397, 398, 0, 399, 0, 400, 401, 402, 403, 512,
	404, 0, 405, 409, 410, 411, 412, 413, 414, 415,
	0, 421, 422, 416, 418, 419, 420, 417, 423, 424,
	425, 0, 426, 406, 407, 427, 428, 0, 429, 430,
	513, 431, 432, 0, 433, 434, 435, 436, 408, 437,
	441, 442, 438, 439, 440, 514, 0, 444, 445, 443,
	0, 446, 447, 448, 449, 450, 279, 451, 0, 452,
	515, 516, 517, 518, 0, 459, 0, 453, 454, 519,
	455, 520, 0, 456, 457, 458, 0, 460, 461, 0,
	0, 462, 463, 464, 465, 466, 468, 0, 469, 0,
	467, 470, 471, 472, 521, 522, 523, 213, 474, 473,
	524, 0, 0, 0, 0, 475, 476, 525, 477, 478,
	479, 0, 0, 0, 219, 220, 221, 222, 223, 0,
	224, 0, 0, 0, 0, 0, 480, 0, 0, 0,
	0, 225, 227, 226, 228, 229, 481, 482, 230, 483,
	233, 231, 232, 484, 0, 234, 235, 236, 237, 238,
	239, 0, 0, 240, 485, 486, 487, 0, 241, 488,
	0, 0, 0, 242, 243, 244, 245, 246, 247, 0,
	249, 250, 251, 248, 0, 252, 0, 253, 254, 255,
	546, 0, 256, 257, 0, 0, 0, 0, 0, 0,
	0, 258, 259, 260, 261, 262, 263, 489, 490, 0,
	264, 0, 266, 265, 0, 267, 0, 0, 268, 269,
	270, 0, 271, 0, 272, 273, 0, 274, 491, 275,
	276, 278, 280, 277, 281, 282, 283, 284, 492, 493,
	0, 0, 0, 0, 0, 0, 0, 285, 286, 287,
	494, 288, 289, 0, 290, 0, 291, 0, 0, 0,
	292, 293, 547, 294, 495, 0, 496, 295, 0, 296,
	297, 298, 299, 497, 498, 499, 351, 0, 300, 301,
	0, 302, 303, 305, 0, 0, 0, 304, 306, 313,
	0, 0, 307, 500, 309, 308, 310, 311, 312, 501,
	0, 502, 0, 314, 0, 503, 0, 315, 316, 317,
	0, 318, 319, 0, 0, 320, 321, 322, 323, 324,
	0, 326, 325, 0, 327, 504, 0, 328, 329, 0,
	0, 330, 331, 0, 0, 332, 333, 334, 0, 335,
	336, 338, 340, 337, 339, 341, 343, 344, 342, 0,
	345, 346, 348, 0, 347, 0, 0, 0, 349, 0,
	505, 350, 506, 352, 353, 0, 354, 355, 356, 0,
	0, 358, 359, 360, 0, 0, 361, 362, 507, 0,
	363, 0, 508, 364, 357, 365, 366, 367, 368, 369,
	370, 371, 0, 372, 373, 509, 374, 510, 375, 0,
	376, 0, 377, 378, 379, 380, 381, 382, 383, 511,
	384, 385, 0, 386, 387, 388, 389, 390, 0, 392,
	393, 394, 391, 395, 396, 397, 398, 0, 399, 0,
	400, 401, 402, 403, 512, 404, 0, 405, 409, 410,
	411, 412, 413, 414, 415, 548, 421, 422, 416, 418,
	419, 420, 417, 423, 424, 425, 0, 426, 406, 407,
	427, 428, 0, 429, 430, 513, 431, 432, 0, 433,
	434, 435, 436, 408, 437, 441, 442, 438, 439, 440,
	514, 0, 444, 445, 443, 0, 446, 447, 448, 449,
	450, 279, 451, 0, 452, 515, 516, 517, 518, 0,
	459, 0, 453, 454, 519, 455, 520, 0, 456, 457,
	458, 0, 460, 461, 0, 0, 462, 463, 464, 465,
	466, 468, 0, 469, 0, 467, 470, 471, 472, 521,
	522, 523, 213, 474, 473, 524, 0, 0, 0, 0,
	475, 476, 525, 477, 478, 479, 0, 0, 0, 219,
	220, 221, 222, 223, 0, 224, 0, 0, 0, 0,
	0, 480, 0, 0, 0, 0, 225, 227, 226, 228,
	229, 481, 482, 230, 483, 233, 231, 232, 484, 0,
	234, 235, 236, 237, 238, 239, 0, 0, 240, 485,
	486, 487, 0, 241, 488, 0, 0, 0, 242, 243,
	244, 245, 246, 247, 0, 249, 250, 251, 248, 0,
	252, 0, 253, 254, 255, 0, 0, 256, 257, 0,
	0, 0, 0, 0, 0, 0, 258, 259, 1961, 261,
	262, 263, 489, 490, 0, 264, 0, 266, 265, 0,
	267, 0, 0, 268, 269, 270, 0, 271, 0, 272,
	273, 0, 274, 491, 275, 276, 278, 280, 277, 281,
	282, 283, 284, 492, 493, 0, 216, 0, 0, 0,
	0, 0, 285, 286, 287, 494, 288, 289, 0, 290,
	0, 291, 0, 0, 0, 292, 293, 0, 294, 495,
	0, 496, 295, 0, 296, 297, 298, 299, 497, 498,
	499, 351, 0, 300, 301, 0, 302, 303, 305, 0,
	0, 217, 304, 306, 313, 0, 0, 307, 500, 309,
	308, 310, 311, 312, 501, 0, 502, 0, 314, 0,
	503, 0, 315, 316, 317, 0, 318, 319, 0, 0,
	320, 321, 322, 323, 324, 0, 326, 325, 0, 327,
	504, 0, 328, 329, 0, 0, 330, 331, 0, 0,
	332, 333, 334, 0, 335, 336, 338, 340, 337, 339,
	341, 343, 344, 342, 0, 345, 346, 348, 0, 347,
	0, 218, 0, 349, 0, 505, 350, 506, 352, 353,
	0, 354, 355, 356, 0, 0, 358, 359, 360, 0,
	0, 361, 362, 507, 0, 363, 0, 508, 364, 357,
	365, 366, 367, 368, 369, 370, 371, 0, 372, 373,
	509, 374, 510, 375, 0, 376, 0, 377, 378, 379,
	380, 381, 382, 383, 511, 384, 385, 0, 386, 387,
	388, 389, 390, 0, 392, 393, 394, 391, 395, 396,
	397, 398, 0, 399, 0, 400, 401, 402, 403, 512,
	404, 0, 405, 409, 410, 411, 412, 413, 414, 415,
	0, 421, 422, 416, 418, 419, 420, 417, 423, 424,
	425, 0, 426, 406, 407, 427, 428, 0, 429, 430,
	513, 431, 432, 0, 433, 434, 435, 436, 408, 437,
	441, 442, 438, 439, 440, 514, 0, 444, 445, 443,
	0, 446, 447, 448, 449, 450, 279, 451, 0, 452,
	515, 516, 517, 518, 0, 459, 0, 453, 454, 519,
	455, 520, 0, 456, 457, 458, 0, 460, 461, 0,
	0, 462, 463, 464, 465, 466, 468, 0, 469, 0,
	467, 470, 471, 472, 521, 522, 523, 213, 474, 473,
	524, 0, 0, 0, 0, 475, 476, 525, 477, 478,
	479, 0, 0, 0, 219, 220, 221, 222, 223, 0,
	224, 0, 0, 0, 0, 0, 480, 0, 0, 0,
	0, 225, 227, 226, 228, 229, 481, 482, 230, 483,
	233, 231, 232, 484, 0, 234, 235, 236, 237, 238,
	239, 0, 0, 240, 485, 486, 487, 0, 241, 488,
	0, 0, 0, 242, 243, 244, 245, 246, 247, 0,
	249, 250, 251, 248, 0, 252, 0, 253, 254, 255,
	0, 0, 256, 257, 0, 0, 0, 0, 0, 0,
	0, 258, 259, 1959, 261, 262, 263, 489, 490, 0,
	264, 0, 266, 265, 0, 267, 0, 0, 268, 269,
	270, 0, 271, 0, 272, 273, 0, 274, 491, 275,
	276, 278, 280, 277, 281, 282, 283, 284, 492, 493,
	0, 216, 0, 0, 0, 0, 0, 285, 286, 287,
	494, 288, 289, 0, 290, 0, 291, 0, 0, 0,
	292, 293, 0, 294, 495, 0, 496, 295, 0, 296,
	297, 298, 299, 497, 498, 499, 351, 0, 300, 301,
	0, 302, 303, 305, 0, 0, 217, 304, 306, 313,
	0, 0, 307, 500, 309, 308, 310, 311, 312, 501,
	0, 502, 0, 314, 0, 503, 0, 315, 316, 317,
	0, 318, 319, 0, 0, 320, 321, 322, 323, 324,
	0, 326, 325, 0, 327, 504, 0, 328, 329, 0,
	0, 330, 331, 0, 0, 332, 333, 334, 0, 335,
	336, 338, 340, 337, 339, 341, 343, 344, 342, 0,
	345, 346, 348, 0, 347, 0, 218, 0, 349, 0,
	505, 350, 506, 352, 353, 0, 354, 355, 356, 0,
	0, 358, 359, 360, 0, 0, 361, 362, 507, 0,
	363, 0, 508, 364, 357, 365, 366, 367, 368, 369,
	370, 371, 0, 372, 373, 509, 374, 510, 375, 0,
	376, 0, 377, 378, 379, 380, 381, 382, 383, 511,
	384, 385, 0, 386, 387, 388, 389, 390, 0, 392,
	393, 394, 391, 395, 396, 397, 398, 0, 399, 0,
	400, 401, 402, 403, 512, 404, 0, 405, 409, 410,
	411, 412, 413, 414, 415, 0, 421, 422, 416, 418,
	419, 420, 417, 423, 424, 425, 0, 426, 406, 407,
	427, 428, 0, 429, 430, 513, 431, 432, 0, 433,
	434, 435, 436, 408, 437, 441, 442, 438, 439, 440,
	514, 0, 444, 445, 443, 0, 446, 447, 448, 449,
	450, 279, 451, 0, 452, 515, 516, 517, 518, 0,
	459, 0, 453, 454, 519, 455, 520, 0, 456, 457,
	458, 0, 460, 461, 0, 0, 462, 463, 464, 465,
	466, 468, 0, 469, 0, 467, 470, 471, 472, 521,
	522, 523, 213, 474, 473, 524, 0, 0, 0, 0,
	475, 476, 525, 477, 478, 479, 0, 0, 0, 219,
	220, 221, 222, 223, 0, 224, 0, 0, 0, 0,
	0, 480, 0, 0, 0, 0, 225, 227, 226, 228,
	229, 481, 482, 230, 483, 233, 231, 232, 484, 0,
	234, 235, 236, 237, 238, 239, 0, 0, 240, 485,
	486, 487, 0, 241, 488, 0, 0, 0, 242, 243,
	244, 245, 246, 247, 0, 249, 250, 251, 248, 0,
	252, 0, 253, 254, 255, 0, 0, 256, 257, 0,
	0, 0, 0, 0, 0, 0, 258, 259, 1957, 261,
	262, 263, 489, 490, 0, 264, 0, 266, 265, 0,
	267, 0, 0, 268, 269, 270, 0, 271, 0, 272,
	273, 0, 274, 491, 275, 276, 278, 280, 277, 281,
	282, 283, 284, 492, 493, 0, 216, 0, 0, 0,
	0, 0, 285, 286, 287, 494, 288, 289, 0, 290,
	0, 291, 0, 0, 0, 292, 293, 0, 294, 495,
	0, 496, 295, 0, 296, 297, 298, 299, 497, 498,
	499, 351, 0, 300, 301, 0, 302, 303, 305, 0,
	0, 217, 304, 306, 313, 0, 0, 307, 500, 309,
	308, 310, 311, 312, 501, 0, 502, 0, 314, 0,
	503, 0, 315, 316, 317, 0, 318, 319, 0, 0,
	320, 321, 322, 323, 324, 0, 326, 325, 0, 327,
	504, 0, 328, 329, 0, 0, 330, 331, 0, 0,
	332, 333, 334, 0, 335, 336, 338, 340, 337, 339,
	341, 343, 344, 342, 0, 345, 346, 348, 0, 347,
	0, 218, 0, 349, 0, 505, 350, 506, 352, 353,
	0, 354, 355, 356, 0, 0, 358, 359, 360, 0,
	0, 361, 362, 507, 0, 363, 0, 508, 364, 357,
	365, 366, 367, 368, 369, 370, 371, 0, 372, 373,
	509, 374, 510, 375, 0, 376, 0, 377, 378, 379,
	380, 381, 382, 383, 511, 384, 385, 0, 386, 387,
	388, 389, 390, 0, 392, 393, 394, 391, 395, 396,
	397, 398, 0, 399, 0, 400, 401, 402, 403, 512,
	404, 0, 405, 409, 410, 411, 412, 413, 414, 415,
	0, 421, 422, 416, 418, 419, 420, 417, 423, 424,
	425, 0, 426, 406, 407, 427, 428, 0, 429, 430,
	513, 431, 432, 0, 433, 434, 435, 436, 408, 437,
	441, 442, 438, 439, 440, 514, 0, 444, 445, 443,
	0, 446, 447, 448, 449, 450, 279, 451, 0, 452,
	515, 516, 517, 518, 0, 459, 0, 453, 454, 519,
	455, 520, 0, 456, 457, 458, 0, 460, 461, 0,
	0, 462, 463, 464, 465, 466, 468, 0, 469, 0,
	467, 470, 471, 472, 521, 522, 523, 0, 474, 473,
	524, 696, 0, 213, 0, 475, 476, 525, 477, 478,
	479, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	219, 220, 221, 222, 223, 0, 224, 0, 0, 0,
	0, 0, 480, 0, 0, 0, 0, 225, 227, 226,
	228, 229, 481, 482, 230, 483, 233, 231, 232, 484,
	0, 234, 235, 236, 237, 238, 239, 0, 0, 240,
	485, 486, 487, 0, 241, 488, 0, 0, 0, 242,
	243, 244, 245, 246, 247, 0, 249, 250, 251, 248,
	0, 252, 0, 253, 254, 255, 0, 0, 256, 257,
	0, 0, 0, 0, 0, 0, 0, 258, 259, 260,
	261, 262, 263, 489, 490, 0, 264, 0, 266, 265,
	0, 267, 0, 0, 268, 269, 270, 0, 271, 0,
	272, 273, 0, 274, 491, 275, 276, 278, 280, 277,
	281, 282, 283, 284, 492, 493, 0, 0, 0, 0,
	0, 0, 0, 285, 286, 287, 494, 288, 289, 0,
	290, 0, 291, 0, 0, 0, 292, 293, 0, 294,
	495, 0, 496, 295, 0, 296, 297, 298, 299, 497,
	498, 499, 351, 0, 300, 301, 0, 302, 303, 305,
	0, 0, 0, 304, 306, 313, 0, 0, 307, 500,
	309, 308, 310, 311, 312, 501, 0, 502, 695, 314,
	0, 503, 0, 315, 316, 317, 0, 318, 319, 0,
	0, 320, 321, 322, 323, 324, 0, 326, 325, 0,
	327, 504, 0, 328, 329, 0, 0, 330, 331, 0,
	0, 332, 333, 334, 0, 335, 336, 338, 340, 337,
	339, 341, 343, 344, 342, 0, 345, 346, 348, 0,
	347, 0, 0, 0, 349, 0, 505, 350, 506, 352,
	353, 0, 354, 355, 356, 0, 0, 358, 359, 360,
	0, 0, 361, 362, 507, 0, 363, 0, 508, 364,
	357, 365, 366, 367, 368, 369, 370, 371, 0, 372,
	373, 509, 374, 510, 375, 0, 376, 0, 377, 378,
	379, 380, 381, 382, 383, 511, 384, 385, 0, 386,
	387, 388, 389, 390, 0, 392, 393, 394, 391, 395,
	396, 397, 398, 0, 399, 0, 400, 401, 402, 403,
	512, 404, 0, 405, 409, 410, 411, 412, 413, 414,
	415, 0, 421, 422, 416, 418, 419, 420, 417, 423,
	424, 425, 0, 426, 406, 407, 427, 428, 0, 429,
	430, 513, 431, 432, 0, 433, 434, 435, 436, 408,
	437, 441, 442, 438, 439, 440, 514, 0, 444, 445,
	443, 694, 446, 447, 448, 449, 450, 279, 451, 0,
	452, 515, 516, 517, 518, 0, 459, 0, 453, 454,
	519, 455, 520, 0, 456, 457, 458, 0, 460, 461,
	0, 0, 462, 463, 464, 465, 466, 468, 0, 469,
	0, 467, 470, 471, 472, 521, 522, 523, 213, 474,
	473, 524, 0, 0, 0, 0, 475, 476, 525, 477,
	478, 479, 0, 0, 0, 219, 220, 221, 222, 223,
	0, 224, 0, 0, 0, 0, 0, 480, 0, 0,
	0, 0, 225, 227, 226, 228, 229, 481, 482, 230,
	483, 233, 231, 232, 484, 0, 234, 235, 236, 237,
	238, 239, 0, 0, 240, 485, 486, 487, 0, 241,
	488, 0, 0, 0, 242, 243, 244, 245, 246, 247,
	0, 249, 250, 251, 248, 0, 252, 0, 253, 254,
	255, 0, 0, 256, 257, 0, 0, 0, 0, 0,
	0, 0, 258, 259, 260, 261, 262, 263, 489, 490,
	0, 264, 0, 266, 265, 0, 267, 0, 0, 268,
	269, 270, 0, 271, 0, 272, 273, 0, 274, 491,
	275, 276, 278, 280, 277, 281, 282, 283, 284, 492,
	493, 0, 2477, 0, 0, 0, 0, 0, 285, 286,
	287, 494, 288, 289, 0, 290, 0, 291, 0, 0,
	0, 292, 293, 0, 294, 495, 0, 496, 295, 0,
	296, 297, 298, 299, 497, 498, 499, 351, 0, 300,
	301, 0, 302, 303, 305, 0, 0, 0, 304, 306,
	313, 0, 0, 307, 500, 309, 308, 310, 311, 312,
	501, 0, 502, 0, 314, 0, 503, 0, 315, 316,
	317, 0, 318, 319, 0, 0, 320, 321, 322, 323,
	324, 0, 326, 325, 0, 327, 504, 0, 328, 329,
	0, 0, 330, 331, 0, 0, 332, 333, 334, 0,
	335, 336, 338, 340, 337, 339, 341, 343, 344, 342,
	0, 345, 346, 348, 0, 347, 0, 0, 0, 349,
	0, 505, 350, 506, 352, 353, 0, 354, 355, 356,
	0, 0, 358, 359, 360, 0, 0, 361, 362, 507,
	0, 363, 0, 508, 364, 357, 365, 366, 367, 368,
	369, 370, 371, 0, 372, 373, 509, 374, 510, 375,
	3310, 376, 0, 377, 378, 379, 380, 381, 382, 383,
	511, 384, 385, 0, 386, 387, 388, 389, 390, 0,
	392, 393, 394, 391, 395, 396, 397, 398, 0, 399,
	0, 400, 401, 402, 403, 512, 404, 0, 405, 409,
	410, 411, 412, 413, 414, 415, 0, 421, 422, 416,
	418, 419, 420, 417, 423, 424, 425, 0, 426, 406,
	407, 427, 428, 0, 429, 430, 513, 431, 432, 0,
	433, 434, 435, 436, 408, 437, 441, 442, 438, 439,
	440, 514, 0, 444, 445, 443, 0, 446, 447, 448,
	449, 450, 279, 451, 0, 452, 515, 516, 517, 518,
	0, 459, 0, 453, 454, 519, 455, 520, 0, 456,
	457, 458, 0, 460, 461, 0, 0, 462, 463, 464,
	465, 466, 468, 0, 469, 0, 467, 470, 471, 472,
	521, 522, 523, 0, 474, 473, 524, 533, 0, 213,
	0, 475, 476, 525, 477, 478, 479, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 219, 220, 221, 222,
	223, 532, 224, 0, 0, 0, 0, 0, 480, 0,
	0, 0, 0, 225, 227, 226, 228, 229, 481, 482,
	230, 483, 233, 231, 232, 484, 0, 234, 235, 236,
	237, 238, 239, 0, 0, 240, 485, 486, 487, 0,
	241, 488, 0, 0, 0, 242, 243, 244, 245, 246,
	247, 0, 249, 250, 251, 248, 0, 252, 0, 253,
	254, 255, 0, 0, 256, 257, 0, 0, 0, 0,
	0, 0, 0, 258, 259, 260, 261, 262, 263, 489,
	490, 0, 264, 0, 266, 265, 0, 267, 0, 0,
	268, 269, 270, 0, 271, 0, 272, 273, 0, 274,
	491, 275, 276, 278, 280, 277, 281, 282, 283, 284,
	492, 493, 0, 0, 0, 0, 0, 0, 0, 285,
	286, 287, 494, 288, 289, 0, 290, 0, 291, 0,
	0, 0, 292, 293, 0, 294, 495, 0, 496, 295,
	0, 296, 297, 298, 299, 497, 498, 499, 351, 0,
	300, 301, 0, 302, 303, 305, 0, 0, 0, 304,
	306, 313, 0, 0, 307, 500, 309, 308, 310, 311,
	312, 501, 0, 502, 0, 314, 0, 503, 0, 315,
	316, 317, 0, 318, 319, 0, 0, 320, 321, 322,
	323, 324, 0, 326, 325, 0, 327, 504, 0, 328,
	329, 0, 0, 330, 331, 0, 0, 332, 333, 334,
	0, 335, 336, 338, 340, 337, 339, 341, 343, 344,
	342, 0, 345, 346, 348, 0, 347, 0, 0, 0,
	349, 0, 505, 350, 506, 352, 353, 0, 354, 355,
	356, 0, 0, 358, 359, 360, 0, 0, 361, 362,
	507, 0, 363, 0, 508, 364, 357, 365, 366, 367,
	368, 369, 370, 371, 0, 372, 373, 509, 374, 510,
	531, 0, 376, 0, 377, 378, 379, 380, 381, 382,
	383, 511, 384, 385, 0, 386, 387, 388, 389, 390,
	0, 392, 393, 394, 391, 395, 396, 397, 398, 0,
	399, 0, 400, 401, 402, 403, 512, 404, 0, 405,
	409, 410, 411, 412, 413, 414, 415, 0, 421, 422,
	416, 418, 419, 420, 417, 423, 424, 425, 0, 426,
	406, 407, 427, 428, 0, 429, 430, 513, 431, 432,
	0, 433, 434, 435, 436, 408, 437, 441, 442, 438,
	439, 440, 514, 0, 444, 445, 443, 0, 446, 447,
	448, 449, 450, 279, 451, 0, 452, 515, 516, 517,
	518, 0, 459, 0, 453, 454, 519, 455, 520, 0,
	456, 457, 458, 0, 460, 461, 0, 0, 462, 463,
	464, 465, 466, 468, 0, 469, 0, 467, 470, 471,
	472, 521, 522, 523, 0, 474, 473, 524, 213, 3319,
	0, 0, 475, 476, 525, 477, 478, 479, 0, 0,
	0, 0, 0, 0, 0, 219, 220, 221, 222, 223,
	0, 224, 0, 0, 0, 0, 0, 480, 0, 0,
	0, 0, 225, 227, 226, 228, 229, 481, 482, 230,
	483, 233, 231, 232, 484, 0, 234, 235, 236, 237,
	238, 239, 0, 0, 240, 485, 486, 487, 0, 241,
	488, 0, 0, 0, 242, 243, 244, 245, 246, 247,
	0, 249, 250, 251, 248, 0, 252, 0, 253, 254,
	255, 0, 0, 256, 257, 0, 0, 0, 0, 0,
	0, 0, 258, 259, 260, 261, 262, 263, 489, 490,
	0, 264, 0, 266, 265, 0, 267, 0, 0, 268,
	269, 270, 0, 271, 0, 272, 273, 0, 274, 491,
	275, 276, 278, 280, 277, 281, 282, 283, 284, 492,
	493, 0, 0, 0, 0, 0, 0, 0, 285, 286,
	287, 494, 288, 289, 0, 290, 0, 291, 0, 0,
	0, 292, 293, 0, 294, 495, 0, 496, 295, 0,
	296, 297, 298, 299, 497, 498, 499, 351, 0, 300,
	301, 0, 302, 303, 305, 0, 0, 0, 304, 306,
	313, 0, 0, 307, 500, 309, 308, 310, 311, 312,
	501, 0, 502, 0, 314, 0, 503, 0, 315, 316,
	317, 0, 318, 319, 0, 0, 320, 321, 322, 323,
	324, 0, 326, 325, 0, 327, 504, 0, 328, 329,
	0, 0, 330, 331, 0, 0, 332, 333, 334, 0,
	335, 336, 338, 340, 337, 339, 341, 343, 344, 342,
	0, 345, 346, 348, 0, 347, 0, 0, 0, 349,
	0, 505, 350, 506, 352, 353, 0, 354, 355, 356,
	0, 0, 358, 359, 360, 0, 0, 361, 362, 507,
	0, 363, 0, 508, 364, 357, 365, 366, 367, 368,
	369, 370, 371, 0, 372, 373, 509, 374, 510, 375,
	0, 376, 0, 377, 378, 379, 380, 381, 382, 383,
	511, 384, 385, 0, 386, 387, 388, 389, 390, 0,
	392, 393, 394, 391, 395, 396, 397, 398, 0, 399,
	0, 400, 401, 402, 403, 512, 404, 0, 405, 409,
	410, 411, 412, 413, 414, 415, 0, 421, 422, 416,
	418, 419, 420, 417, 423, 424, 425, 0, 426, 406,
	407, 427, 428, 0, 429, 430, 513, 431, 432, 0,
	433, 434, 435, 436, 408, 437, 441, 442, 438, 439,
	440, 514, 0, 444, 445, 443, 0, 446, 447, 448,
	449, 450, 279, 451, 0, 452, 515, 516, 517, 518,
	0, 459, 0, 453, 454, 519, 455, 520, 0, 456,
	457, 458, 0, 460, 461, 0, 0, 462, 463, 464,
	465, 466, 468, 0, 469, 0, 467, 470, 471, 472,
	521, 522, 523, 0, 474, 473, 524, 213, 2464, 0,
	0, 475, 476, 525, 477, 478, 479, 0, 0, 0,
	0, 0, 0, 0, 219, 220, 221, 222, 223, 0,
	224, 0, 0, 0, 0, 0, 480, 0, 0, 0,
	0, 225, 227, 226, 228, 229, 481, 482, 230, 483,
	233, 231, 232, 484, 0, 234, 235, 236, 237, 238,
	239, 0, 0, 240, 485, 486, 487, 0, 241, 488,
	0, 0, 0, 242, 243, 244, 245, 246, 247, 0,
	249, 250, 251, 248, 0, 252, 0, 253, 254, 255,
	0, 0, 256, 257, 0, 0, 0, 0, 0, 0,
	0, 258, 259, 260, 261, 262, 263, 489, 490, 0,
	264, 0, 266, 265, 0, 267, 0, 0, 268, 269,
	270, 0, 271, 0, 272, 273, 0, 274, 491, 275,
	276, 278, 280, 277, 281, 282, 283, 284, 492, 493,
	0, 0, 0, 0, 0, 0, 0, 285, 286, 287,
	494, 288, 289, 0, 290, 0, 291, 0, 0, 0,
	292, 293, 0, 294, 495, 0, 496, 295, 0, 296,
	297, 298, 299, 497, 498, 499, 351, 0, 300, 301,
	0, 302, 303, 305, 0, 0, 0, 304, 306, 313,
	0, 0, 307, 500, 309, 308, 310, 311, 312, 501,
	0, 502, 0, 314, 0, 503, 0, 315, 316, 317,
	0, 318, 319, 0, 0, 320, 321, 322, 323, 324,
	0, 326, 325, 0, 327, 504, 0, 328, 329, 0,
	0, 330, 331, 0, 0, 332, 333, 334, 0, 335,
	336, 338, 340, 337, 339, 341, 343, 344, 342, 0,
	345, 346, 348, 0, 347, 0, 0, 0, 349, 0,
	505, 350, 506, 352, 353, 0, 354, 355, 356, 0,
	0, 358, 359, 360, 0, 0, 361, 362, 507, 0,
	363, 0, 508, 364, 357, 365, 366, 367, 368, 369,
	370, 371, 0, 372, 373, 509, 374, 510, 375, 0,
	376, 0, 377, 378, 379, 380, 381, 382, 383, 511,
	384, 385, 0, 386, 387, 388, 389, 390, 0, 392,
	393, 394, 391, 395, 396, 397, 398, 0, 399, 0,
	400, 401, 402, 403, 512, 404, 0, 405, 409, 410,
	411, 412, 413, 414, 415, 0, 421, 422, 416, 418,
	419, 420, 417, 423, 424, 425, 0, 426, 406, 407,
	427, 428, 0, 429, 430, 513, 431, 432, 0, 433,
	434, 435, 436, 408, 437, 441, 442, 438, 439, 440,
	514, 0, 444, 445, 443, 0, 446, 447, 448, 449,
	450, 279, 451, 0, 452, 515, 516, 517, 518, 0,
	459, 0, 453, 454, 519, 455, 520, 0, 456, 457,
	458, 0, 460, 461, 0, 0, 462, 463, 464, 465,
	466, 468, 0, 469, 0, 467, 470, 471, 472, 521,
	522, 523, 213, 474, 473, 524, 0, 0, 0, 0,
	475, 476, 525, 477, 478, 479, 0, 0, 0, 219,
	220, 221, 222, 223, 0, 224, 0, 0, 0, 0,
	0, 480, 0, 0, 0, 0, 225, 227, 226, 228,
	229, 481, 482, 230, 483, 233, 231, 232, 484, 0,
	234, 235, 236, 237, 238, 239, 0, 0, 240, 485,
	486, 487, 0, 241, 488, 0, 0, 0, 242, 243,
	244, 245, 246, 247, 0, 249, 250, 251, 248, 0,
	252, 0, 253, 254, 255, 0, 0, 256, 257, 0,
	0, 0, 0, 0, 0, 0, 258, 259, 260, 261,
	262, 263, 489, 490, 3103, 264, 0, 266, 265, 0,
	267, 0, 0, 268, 269, 270, 0, 271, 0, 272,
	273, 0, 274, 491, 275, 276, 278, 280, 277, 281,
	282, 283, 284, 492, 493, 0, 0, 0, 0, 0,
	0, 0, 285, 286, 287, 494, 288, 289, 0, 290,
	0, 291, 0, 0, 0, 292, 293, 0, 294, 495,
	0, 496, 295, 0, 296, 297, 298, 299, 497, 498,
	499, 351, 0, 300, 301, 0, 302, 303, 305, 0,
	0, 0, 304, 306, 313, 0, 0, 307, 500, 309,
	308, 310, 311, 312, 501, 0, 502, 0, 314, 0,
	503, 0, 315, 316, 317, 0, 318, 319, 0, 0,
	320, 321, 322, 323, 324, 0, 326, 325, 0, 327,
	504, 0, 328, 329, 0, 0, 330, 331, 0, 0,
	332, 333, 334, 0, 335, 336, 338, 340, 337, 339,
	341, 343, 344, 342, 0, 345, 346, 348, 0, 347,
	0, 0, 0, 349, 0, 505, 350, 506, 352, 353,
	0, 354, 355, 356, 0, 0, 358, 359, 360, 0,
	0, 361, 362, 507, 0, 363, 0, 508, 364, 357,
	365, 366, 367, 368, 369, 370, 371, 0, 372, 373,
	509, 374, 510, 375, 0, 376, 0, 377, 378, 379,
	380, 381, 382, 383, 511, 384, 385, 0, 386, 387,
	388, 389, 390, 0, 392, 393, 394, 391, 395, 396,
	397, 398, 0, 399, 0, 400, 401, 402, 403, 512,
	404, 0, 405, 409, 410, 411, 412, 413, 414, 415,
	0, 421, 422, 416, 418, 419, 420, 417, 423, 424,
	425, 0, 426, 406, 407, 427, 428, 0, 429, 430,
	513, 431, 432, 0, 433, 434, 435, 436, 408, 437,
	441, 442, 438, 439, 440, 514, 0, 444, 445, 443,
	0, 446, 447, 448, 449, 450, 279, 451, 0, 452,
	515, 516, 517, 518, 0, 459, 0, 453, 454, 519,
	455, 520, 0, 456, 457, 458, 0, 460, 461, 0,
	0, 462, 463, 464, 465, 466, 468, 0, 469, 0,
	467, 470, 471, 472, 521, 522, 523, 213, 474, 473,
	524, 0, 0, 0, 0, 475, 476, 525, 477, 478,
	479, 0, 0, 0, 219, 220, 221, 222, 223, 0,
	224, 0, 0, 0, 0, 0, 480, 0, 2252, 0,
	0, 225, 227, 226, 228, 229, 481, 482, 230, 483,
	233, 231, 232, 484, 0, 234, 235, 236, 237, 238,
	239, 0, 0, 240, 485, 486, 487, 0, 241, 488,
	0, 0, 0, 242, 243, 244, 245, 246, 247, 0,
	249, 250, 251, 248, 0, 252, 0, 253, 254, 255,
	0, 0, 256, 257, 0, 0, 0, 0, 0, 0,
	0, 258, 259, 260, 261, 262, 263, 489, 490, 0,
	264, 0, 266, 265, 0, 267, 0, 0, 268, 269,
	270, 0, 271, 0, 272, 273, 0, 274, 491, 275,
	276, 278, 280, 277, 281, 282, 283, 284, 492, 493,
	0, 0, 0, 0, 0, 0, 0, 285, 286, 287,
	494, 288, 289, 0, 290, 0, 291, 0, 0, 0,
	292, 293, 0, 294, 495, 0, 496, 295, 0, 296,
	297, 298, 299, 497, 498, 499, 351, 0, 300, 301,
	0, 302, 303, 305, 0, 0, 0, 304, 306, 313,
	0, 0, 307, 500, 309, 308, 310, 311, 312, 501,
	0, 502, 0, 314, 0, 503, 0, 315, 316, 317,
	0, 318, 319, 0, 0, 320, 321, 322, 323, 324,
	0, 326, 325, 0, 327, 504, 0, 328, 329, 0,
	0, 330, 331, 0, 0, 332, 333, 334, 0, 335,
	336, 338, 340, 337, 339, 341, 343, 344, 342, 0,
	345, 346, 348, 0, 347, 0, 0, 0, 349, 0,
	505, 350, 506, 352, 353, 0, 354, 355, 356, 0,
	0, 358, 359, 360, 0, 0, 361, 362, 507, 0,
	363, 0, 508, 364, 357, 365, 366, 367, 368, 369,
	370, 371, 0, 372, 373, 509, 374, 510, 375, 0,
	376, 0, 377, 378, 379, 380, 381, 382, 383, 511,
	384, 385, 0, 386, 387, 388, 389, 390, 0, 392,
	393, 394, 391, 395, 396, 397, 398, 0, 399, 0,
	400, 401, 402, 403, 512, 404, 0, 405, 409, 410,
	411, 412, 413, 414, 415, 0, 421, 422, 416, 418,
	419, 420, 417, 423, 424, 425, 0, 426, 406, 407,
	427, 428, 0, 429, 430, 513, 431, 432, 0, 433,
	434, 435, 436, 408, 437, 441, 442, 438, 439, 440,
	514, 0, 444, 445, 443, 0, 446, 447, 448, 449,
	450, 279, 451, 0, 452, 515, 516, 517, 518, 0,
	459, 0, 453, 454, 519, 455, 520, 0, 456, 457,
	458, 0, 460, 461, 0, 0, 462, 463, 464, 465,
	466, 468, 0, 469, 0, 467, 470, 471, 472, 521,
	522, 523, 0, 474, 473, 524, 213, 2464, 0, 0,
	475, 476, 525, 477, 478, 479, 0, 0, 0, 0,
	0, 0, 0, 219, 220, 221, 222, 223, 0, 224,
	0, 0, 0, 0, 0, 480, 0, 0, 0, 0,
	225, 227, 226, 228, 229, 481, 482, 230, 483, 233,
	231, 232, 484, 0, 234, 235, 236, 237, 238, 239,
	0, 0, 240, 485, 486, 487, 0, 241, 488, 0,
	0, 0, 242, 243, 244, 245, 246, 247, 0, 249,
	250, 251, 248, 0, 252, 0, 253, 254, 255, 0,
	0, 256, 257, 0, 0, 0, 0, 0, 0, 0,
	258, 259, 260, 261, 262, 263, 489, 490, 0, 264,
	0, 266, 265, 0, 267, 0, 0, 268, 269, 270,
	0, 271, 0, 272, 273, 0, 274, 491, 275, 276,
	278, 280, 277, 281, 282, 283, 284, 492, 493, 0,
	0, 0, 0, 0, 0, 0, 285, 286, 287, 494,
	288, 289, 0, 290, 0, 291, 0, 0, 0, 292,
	293, 0, 294, 495, 0, 496, 295, 0, 296, 297,
	298, 299, 497, 498, 499, 351, 0, 300, 301, 0,
	302, 303, 305, 0, 0, 0, 304, 306, 313, 0,
	0, 307, 500, 309, 308, 310, 311, 312, 501, 0,
	502, 0, 314, 0, 503, 0, 315, 316, 317, 0,
	318, 319, 0, 0, 320, 321, 322, 323, 324, 0,
	326, 325, 0, 327, 504, 0, 328, 329, 0, 0,
	330, 331, 0, 0, 332, 333, 334, 0, 335, 336,
	338, 340, 337, 339, 341, 343, 344, 342, 0, 345,
	346, 348, 0, 347, 0, 0, 0, 349, 0, 505,
	350, 506, 352, 353, 0, 354, 355, 356, 0, 0,
	358, 359, 2461, 0, 0, 361, 362, 507, 0, 363,
	0, 508, 364, 357, 365, 366, 367, 368, 369, 370,
	371, 0, 372, 373, 509, 374, 510, 375, 0, 376,
	0, 377, 378, 379, 380, 381, 382, 383, 511, 384,
	385, 0, 386, 387, 388, 389, 390, 0, 392, 393,
	394, 391, 395, 396, 397, 398, 0, 399, 0, 400,
	401, 402, 403, 512, 404, 0, 405, 409, 410, 411,
	412, 413, 414, 415, 0, 421, 422, 416, 418, 419,
	420, 417, 423, 424, 425, 0, 426, 406, 407, 427,
	428, 0, 429, 430, 513, 431, 432, 0, 433, 434,
	435, 436, 408, 437, 441, 442, 438, 439, 440, 514,
	0, 444, 445, 443, 0, 446, 447, 448, 449, 450,
	279, 451, 0, 452, 515, 516, 517, 518, 0, 459,
	0, 453, 454, 519, 455, 520, 0, 456, 457, 458,
	0, 460, 461, 0, 0, 462, 463, 464, 465, 466,
	468, 0, 469, 0, 467, 470, 471, 472, 521, 522,
	523, 213, 474, 473, 524, 0, 0, 0, 0, 475,
	476, 525, 477, 478, 479, 0, 0, 0, 219, 220,
	221, 222, 223, 1938, 224, 0, 0, 0, 0, 0,
	480, 0, 0, 0, 0, 225, 227, 226, 228, 229,
	481, 482, 230, 483, 233, 231, 232, 484, 0, 234,
	235, 236, 237, 238, 239, 0, 0, 240, 485, 486,
	487, 0, 241, 488, 0, 0, 0, 242, 243, 244,
	245, 246, 247, 0, 249, 250, 251, 248, 0, 252,
	0, 253, 254, 255, 0, 0, 256, 257, 0, 0,
	0, 0, 0, 0, 0, 258, 259, 260, 261, 262,
	263, 489, 490, 0, 264, 0, 266, 265, 0, 267,
	0, 0, 268, 269, 270, 0, 271, 0, 272, 273,
	0, 274, 491, 275, 276, 278, 280, 277, 281, 282,
	283, 284, 492, 493, 0, 0, 0, 0, 0, 0,
	0, 285, 286, 287, 494, 288, 289, 0, 290, 0,
	291, 0, 0, 0, 292, 293, 0, 294, 495, 0,
	496, 295, 0, 296, 297, 298, 299, 497, 498, 499,
	351, 0, 300, 301, 0, 302, 303, 305, 0, 0,
	0, 304, 306, 313, 0, 0, 307, 500, 309, 308,
	310, 311, 312, 501, 0, 502, 0, 314, 0, 503,
	0, 315, 316, 317, 0, 318, 319, 0, 0, 320,
	321, 322, 323, 324, 0, 326, 325, 0, 327, 504,
	0, 328, 329, 0, 0, 330, 331, 0, 0, 332,
	333, 334, 0, 335, 336, 338, 340, 337, 339, 341,
	343, 344, 342, 0, 345, 346, 348, 0, 347, 0,
	0, 0, 349, 0, 505, 350, 506, 352, 353, 0,
	354, 355, 356, 0, 0, 358, 359, 360, 0, 0,
	361, 362, 507, 0, 363, 0, 508, 364, 357, 365,
	366, 367, 368, 369, 370, 371, 0, 372, 373, 509,
	374, 510, 375, 0, 376, 0, 377, 378, 379, 380,
	381, 382, 383, 511, 384, 385, 0, 386, 387, 388,
	389, 390, 0, 392, 393, 394, 391, 395, 396, 397,
	398, 0, 399, 0, 400, 401, 402, 403, 512, 404,
	0, 405, 409, 410, 411, 412, 413, 414, 415, 0,
	421, 422, 416, 418, 419, 420, 417, 423, 424, 425,
	0, 426, 406, 407, 427, 428, 0, 429, 430, 513,
	431, 432, 0, 433, 434, 435, 436, 408, 437, 441,
	442, 438, 439, 440, 514, 0, 444, 445, 443, 0,
	446, 447, 448, 449, 450, 279, 451, 0, 452, 515,
	516, 517, 518, 0, 459, 0, 453, 454, 519, 455,
	520, 0, 456, 457, 458, 0, 460, 461, 0, 0,
	462, 463, 464, 465, 466, 468, 0, 469, 0, 467,
	470, 471, 472, 521, 522, 523, 0, 474, 473, 524,
	1928, 0, 213, 0, 475, 476, 525, 477, 478, 479,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 219,
	220, 221, 222, 223, 0, 224, 0, 0, 0, 0,
	0, 480, 0, 0, 0, 0, 225, 227, 226, 228,
	229, 481, 482, 230, 483, 233, 231, 232, 484, 0,
	234, 235, 236, 237, 238, 239, 0, 0, 240, 485,
	486, 487, 0, 241, 488, 0, 0, 0, 242, 243,
	244, 245, 246, 247, 0, 249, 250, 251, 248, 0,
	252, 0, 253, 254, 255, 0, 0, 256, 257, 0,
	0, 0, 0, 0, 0, 0, 258, 259, 260, 261,
	262, 263, 489, 490, 0, 264, 0, 266, 265, 0,
	267, 0, 0, 268, 269, 270, 0, 271, 0, 272,
	273, 0, 274, 491, 275, 276, 278, 280, 277, 281,
	282, 283, 284, 492, 493, 0, 0, 0, 0, 0,
	0, 0, 285, 286, 287, 494, 288, 289, 0, 290,
	0, 291, 0, 0, 0, 292, 293, 0, 294, 495,
	0, 496, 295, 0, 296, 297, 298, 299, 497, 498,
	499, 351, 0, 300, 301, 0, 302, 303, 305, 0,
	0, 0, 304, 306, 313, 0, 0, 307, 500, 309,
	308, 310, 311, 312, 501, 0, 502, 0, 314, 0,
	503, 0, 315, 316, 317, 0, 318, 319, 0, 0,
	320, 321, 322, 323, 324, 0, 326, 325, 0, 327,
	504, 0, 328, 329, 0, 0, 330, 331, 0, 0,
	332, 333, 334, 0, 335, 336, 338, 340, 337, 339,
	341, 343, 344, 342, 0, 345, 346, 348, 0, 347,
	0, 0, 0, 349, 0, 505, 350, 506, 352, 353,
	0, 354, 355, 356, 0, 0, 358, 359, 360, 0,
	0, 361, 362, 507, 0, 363, 0, 508, 364, 357,
	365, 366, 367, 368, 369, 370, 371, 0, 372, 373,
	509, 374, 510, 375, 0, 376, 0, 377, 378, 379,
	380, 381, 382, 383, 511, 384, 385, 0, 386, 387,
	388, 389, 390, 0, 392, 393, 394, 391, 395, 396,
	397, 398, 0, 399, 0, 400, 401, 402, 403, 512,
	404, 0, 405, 409, 410, 411, 412, 413, 414, 415,
	0, 421, 422, 416, 418, 419, 420, 417, 423, 424,
	425, 0, 426, 406, 407, 427, 428, 0, 429, 430,
	513, 431, 432, 0, 433, 434, 435, 436, 408, 437,
	441, 442, 438, 439, 440, 514, 0, 444, 445, 443,
	0, 446, 447, 448, 449, 450, 279, 451, 0, 452,
	515, 516, 517, 518, 0, 459, 0, 453, 454, 519,
	455, 520, 0, 456, 457, 458, 0, 460, 461, 0,
	0, 462, 463, 464, 465, 466, 468, 0, 469, 0,
	467, 470, 471, 472, 521, 522, 523, 0, 474, 473,
	524, 574, 0, 213, 0, 475, 476, 525, 477, 478,
	479, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	219, 220, 221, 222, 223, 0, 224, 0, 0, 0,
	0, 0, 480, 0, 0, 0, 0, 225, 1055, 226,
	228, 229, 481, 482, 230, 483, 233, 231, 232, 484,
	0, 234, 235, 236, 237, 238, 239, 0, 0, 240,
	485, 486, 1053, 0, 241, 488, 0, 0, 0, 242,
	243, 244, 245, 246, 247, 0, 249, 250, 251, 248,
	0, 252, 0, 253, 254, 255, 0, 0, 256, 257,
	0, 0, 0, 0, 0, 0, 0, 258, 259, 260,
	261, 262, 263, 489, 490, 0, 264, 0, 266, 265,
	0, 267, 0, 0, 268, 269, 270, 0, 271, 0,
	272, 273, 0, 274, 491, 275, 276, 278, 280, 277,
	281, 282, 283, 284, 492, 493, 0, 0, 0, 0,
	0, 0, 0, 285, 286, 287, 494, 288, 289, 0,
	290, 0, 291, 0, 0, 0, 292, 293, 0, 294,
	495, 0, 496, 295, 0, 296, 297, 298, 299, 497,
	498, 499, 351, 0, 300, 301, 0, 302, 303, 305,
	0, 0, 0, 304, 306, 313, 0, 0, 307, 500,
	309, 308, 310, 311, 312, 501, 0, 502, 0, 314,
	0, 503, 0, 315, 316, 317, 0, 318, 319, 0,
	0, 320, 321, 322, 323, 324, 0, 326, 325, 0,
	327, 504, 0, 328, 329, 0, 0, 330, 331, 0,
	0, 332, 333, 334, 0, 335, 336, 338, 340, 337,
	339, 341, 343, 344, 575, 0, 345, 346, 348, 0,
	347, 0, 0, 0, 349, 0, 505, 350, 506, 352,
	353, 0, 354, 355, 356, 0, 0, 358, 359, 360,
	0, 0, 361, 362, 507, 0, 363, 0, 508, 364,
	357, 365, 366, 367, 368, 369, 370, 371, 0, 372,
	373, 509, 374, 510, 375, 0, 376, 0, 377, 378,
	379, 380, 381, 382, 383, 511, 384, 385, 0, 386,
	387, 388, 389, 390, 0, 392, 393, 394, 391, 395,
	396, 397, 398, 0, 399, 0, 400, 401, 402, 403,
	512, 404, 0, 405, 409, 410, 571, 412, 413, 414,
	415, 0, 421, 422, 416, 418, 419, 420, 417, 423,
	1056, 425, 0, 426, 406, 407, 427, 428, 0, 429,
	430, 513, 431, 432, 0, 433, 434, 435, 436, 408,
	437, 441, 442, 438, 439, 440, 514, 0, 444, 445,
	443, 0, 446, 447, 448, 449, 450, 279, 451, 0,
	452, 570, 516, 517, 518, 0, 459, 0, 453, 454,
	519, 455, 520, 0, 456, 457, 458, 0, 460, 461,
	0, 0, 462, 463, 464, 465, 466, 468, 0, 469,
	0, 467, 470, 471, 472, 521, 522, 523, 0, 474,
	473, 524, 1872, 0, 213, 0, 475, 476, 525, 477,
	478, 479, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 219, 220, 221, 222, 223, 0, 224, 0, 0,
	0, 0, 0, 480, 0, 0, 0, 0, 225, 227,
	226, 228, 229, 481, 482, 230, 483, 233, 231, 232,
	484, 0, 234, 235, 236, 237, 238, 239, 0, 0,
	240, 485, 486, 487, 0, 241, 488, 0, 0, 0,
	242, 243, 244, 245, 246, 247, 0, 249, 250, 251,
	248, 0, 252, 0, 253, 254, 255, 0, 0, 256,
	257, 0, 0, 0, 0, 0, 0, 0, 258, 259,
	260, 261, 262, 263, 489, 490, 0, 264, 0, 266,
	265, 0, 267, 0, 0, 268, 269, 270, 0, 271,
	0, 272, 273, 0, 274, 491, 275, 276, 278, 280,
	277, 281, 282, 283, 284, 492, 493, 0, 0, 0,
	0, 0, 0, 0, 285, 286, 287, 494, 288, 289,
	0, 290, 0, 291, 0, 0, 0, 292, 293, 0,
	294, 495, 0, 496, 295, 0, 296, 297, 298, 299,
	1871, 498, 499, 351, 0, 300, 301, 0, 302, 303,
	305, 0, 0, 0, 304, 306, 313, 0, 0, 307,
	500, 309, 308, 310, 311, 312, 501, 0, 502, 0,
	314, 0, 503, 0, 315, 316, 317, 0, 318, 319,
	0, 0, 320, 321, 322, 323, 324, 0, 326, 325,
	0, 327, 504, 0, 328, 329, 0, 0, 330, 331,
	0, 0, 332, 333, 334, 0, 335, 336, 338, 340,
	337, 339, 341, 343, 344, 342, 0, 345, 346, 348,
	0, 347, 0, 0, 0, 349, 0, 505, 350, 506,
	352, 353, 0, 354, 355, 356, 0, 0, 358, 359,
	360, 0, 0, 361, 362, 507, 0, 363, 0, 508,
	364, 357, 365, 366, 367, 368, 369, 370, 371, 0,
	372, 373, 509, 374, 510, 375, 0, 376, 0, 377,
	378, 379, 380, 381, 382, 383, 511, 384, 385, 0,
	386, 387, 388, 389, 390, 0, 392, 393, 394, 391,
	395, 396, 397, 398, 0, 399, 0, 400, 401, 402,
	403, 512, 404, 0, 405, 409, 410, 411, 412, 413,
	414, 415, 0, 421, 422, 416, 418, 419, 420, 417,
	423, 424, 425, 0, 426, 406, 407, 427, 428, 0,
	429, 430, 513, 431, 432, 0, 433, 434, 435, 436,
	408, 437, 441, 442, 438, 439, 440, 514, 0, 444,
	445, 443, 0, 446, 447, 448, 449, 450, 279, 451,
	0, 452, 515, 516, 517, 518, 0, 459, 0, 453,
	454, 519, 455, 520, 0, 456, 457, 458, 0, 460,
	461, 0, 0, 462, 463, 464, 465, 466, 468, 0,
	469, 0, 467, 470, 471, 472, 521, 522, 523, 0,
	474, 473, 524, 574, 0, 213, 0, 475, 476, 525,
	477, 478, 479, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 219, 220, 221, 222, 223, 0, 224, 0,
	0, 0, 0, 0, 480, 0, 0, 0, 0, 225,
	227, 226, 228, 229, 481, 482, 230, 483, 233, 231,
	232, 484, 0, 234, 235, 236, 237, 238, 239, 0,
	0, 240, 485, 486, 487, 0, 564, 488, 0, 0,
	0, 242, 243, 244, 245, 246, 247, 0, 249, 250,
	251, 248, 0, 252, 0, 253, 254, 255, 0, 0,
	256, 257, 0, 0, 0, 0, 0, 0, 0, 258,
	259, 260, 261, 262, 263, 489, 490, 0, 264, 0,
	266, 265, 0, 267, 0, 0, 268, 269, 270, 0,
	271, 0, 272, 273, 0, 274, 491, 275, 276, 278,
	280, 277, 281, 282, 283, 284, 492, 493, 0, 0,
	0, 0, 0, 0, 0, 285, 286, 287, 494, 288,
	289, 0, 290, 0, 291, 0, 0, 0, 292, 293,
	0, 294, 495, 0, 496, 295, 0, 296, 297, 298,
	299, 497, 498, 499, 351, 0, 300, 301, 0, 302,
	303, 305, 0, 0, 0, 304, 306, 313, 0, 0,
	307, 500, 309, 308, 310, 311, 312, 501, 0, 502,
	0, 314, 0, 503, 0, 315, 316, 317, 0, 318,
	319, 0, 0, 320, 321, 322, 323, 324, 0, 326,
	325, 0, 327, 504, 0, 328, 329, 0, 0, 330,
	331, 0, 0, 332, 333, 334, 0, 335, 336, 338,
	340, 337, 339, 341, 343, 344, 575, 0, 345, 346,
	348, 0, 347, 0, 0, 0, 349, 0, 505, 350,
	506, 352, 353, 0, 354, 355, 356, 0, 0, 358,
	359, 360, 0, 0, 361, 362, 507, 0, 363, 0,
	508, 364, 357, 365, 366, 367, 368, 369, 370, 371,
	0, 372, 373, 509, 374, 510, 375, 0, 376, 0,
	377, 378, 379, 380, 381, 382, 383, 511, 384, 385,
	0, 386, 387, 388, 389, 390, 0, 392, 393, 394,
	391, 395, 396, 397, 398, 0, 399, 0, 400, 401,
	402, 403, 512, 404, 0, 405, 409, 410, 571, 412,
	413, 414, 415, 0, 421, 422, 416, 418, 419, 420,
	417, 423, 1341, 425, 0, 426, 406, 407, 427, 428,
	0, 429, 430, 513, 431, 432, 0, 433, 434, 435,
	436, 408, 437, 441, 442, 438, 439, 440, 514, 0,
	444, 445, 443, 0, 446, 447, 448, 449, 450, 279,
	451, 0, 452, 570, 516, 517, 518, 0, 459, 0,
	453, 454, 519, 455, 520, 0, 456, 457, 458, 0,
	460, 461, 0, 0, 462, 463, 464, 465, 466, 468,
	0, 469, 0, 467, 470, 471, 472, 521, 522, 523,
	0, 474, 473, 524, 1324, 0, 213, 0, 475, 476,
	525, 477, 478, 479, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 219, 220, 221, 222, 223, 0, 224,
	0, 0, 0, 0, 0, 480, 0, 0, 0, 0,
	225, 227, 226, 228, 229, 481, 482, 230, 483, 233,
	231, 232, 484, 0, 234, 235, 236, 237, 238, 239,
	0, 0, 240, 485, 486, 487, 0, 241, 488, 0,
	0, 0, 242, 243, 244, 245, 246, 247, 0, 249,
	250, 251, 248, 0, 252, 0, 253, 254, 255, 0,
	0, 256, 257, 0, 0, 0, 0, 0, 0, 0,
	258, 259, 260, 261, 262, 263, 489, 490, 0, 264,
	0, 266, 265, 0, 267, 0, 0, 268, 269, 270,
	0, 271, 0, 272, 273, 0, 274, 491, 275, 276,
	278, 280, 277, 281, 282, 283, 284, 492, 493, 0,
	0, 0, 0, 0, 0, 0, 285, 286, 287, 494,
	288, 289, 0, 290, 0, 291, 0, 0, 0, 292,
	293, 0, 294, 495, 0, 496, 295, 0, 296, 297,
	298, 299, 1323, 498, 499, 351, 0, 300, 301, 0,
	302, 303, 305, 0, 0, 0, 304, 306, 313, 0,
	0, 307, 500, 309, 308, 310, 311, 312, 501, 0,
	502, 0, 314, 0, 503, 0, 315, 316, 317, 0,
	318, 319, 0, 0, 320, 321, 322, 323, 324, 0,
	326, 325, 0, 327, 504, 0, 328, 329, 0, 0,
	330, 331, 0, 0, 332, 333, 334, 0, 335, 336,
	338, 340, 337, 339, 341, 343, 344, 342, 0, 345,
	346, 348, 0, 347, 0, 0, 0, 349, 0, 505,
	350, 506, 352, 353, 0, 354, 355, 356, 0, 0,
	358, 359, 360, 0, 0, 361, 362, 507, 0, 363,
	0, 508, 364, 357, 365, 366, 367, 368, 369, 370,
	371, 0, 372, 373, 509, 374, 510, 375, 0, 376,
	0, 377, 378, 379, 380, 381, 382, 383, 511, 384,
	385, 0, 386, 387, 388, 389, 390, 0, 392, 393,
	394, 391, 395, 396, 397, 398, 0, 399, 0, 400,
	401, 402, 403, 512, 404, 0, 405, 409, 410, 411,
	412, 413, 414, 415, 0, 421, 422, 416, 418, 419,
	420, 417, 423, 424, 425, 0, 426, 406, 407, 427,
	428, 0, 429, 430, 513, 431, 432, 0, 433, 434,
	435, 436, 408, 437, 441, 442, 438, 439, 440, 514,
	0, 444, 445, 443, 0, 446, 447, 448, 449, 450,
	279, 451, 0, 452, 515, 516, 517, 518, 0, 459,
	0, 453, 454, 519, 455, 520, 0, 456, 457, 458,
	0, 460, 461, 0, 0, 462, 463, 464, 465, 466,
	468, 0, 469, 0, 467, 470, 471, 472, 521, 522,
	523, 0, 474, 473, 524, 1271, 0, 213, 0, 475,
	476, 525, 477, 478, 479, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 219, 220, 221, 222, 223, 0,
	224, 0, 0, 0, 0, 0, 480, 0, 0, 0,
	0, 225, 227, 226, 228, 229, 481, 482, 230, 483,
	233, 231, 232, 484, 0, 234, 235, 236, 237, 238,
	239, 0, 0, 240, 485, 486, 487, 0, 241, 488,
	0, 0, 0, 242, 243, 244, 245, 246, 247, 0,
	249, 250, 251, 248, 0, 252, 0, 253, 254, 255,
	0, 0, 256, 257, 0, 0, 0, 0, 0, 0,
	0, 258, 259, 260, 261, 262, 263, 489, 490, 0,
	264, 0, 266, 265, 0, 267, 0, 0, 268, 269,
	270, 0, 271, 0, 272, 273, 0, 274, 491, 275,
	276, 278, 280, 277, 281, 282, 283, 284, 492, 493,
	0, 0, 0, 0, 0, 0, 0, 285, 286, 287,
	494, 288, 289, 0, 290, 0, 291, 0, 0, 0,
	292, 293, 0, 294, 495, 0, 496, 295, 0, 296,
	297, 298, 299, 1270, 498, 499, 351, 0, 300, 301,
	0, 302, 303, 305, 0, 0, 0, 304, 306, 313,
	0, 0, 307, 500, 309, 308, 310, 311, 312, 501,
	0, 502, 0, 314, 0, 503, 0, 315, 316, 317,
	0, 318, 319, 0, 0, 320, 321, 322, 323, 324,
	0, 326, 325, 0, 327, 504, 0, 328, 329, 0,
	0, 330, 331, 0, 0, 332, 333, 334, 0, 335,
	336, 338, 340, 337, 339, 341, 343, 344, 342, 0,
	345, 346, 348, 0, 347, 0, 0, 0, 349, 0,
	505, 350, 506, 352, 353, 0, 354, 355, 356, 0,
	0, 358, 359, 360, 0, 0, 361, 362, 507, 0,
	363, 0, 508, 364, 357, 365, 366, 367, 368, 369,
	370, 371, 0, 372, 373, 509, 374, 510, 375, 0,
	376, 0, 377, 378, 379, 380, 381, 382, 383, 511,
	384, 385, 0, 386, 387, 388, 389, 390, 0, 392,
	393, 394, 391, 395, 396, 397, 398, 0, 399, 0,
	400, 401, 402, 403, 512, 404, 0, 405, 409, 410,
	411, 412, 413, 414, 415, 0, 421, 422, 416, 418,
	419, 420, 417, 423, 424, 425, 0, 426, 406, 407,
	427, 428, 0, 429, 430, 513, 431, 432, 0, 433,
	434, 435, 436, 408, 437, 441, 442, 438, 439, 440,
	514, 0, 444, 445, 443, 0, 446, 447, 448, 449,
	450, 279, 451, 0, 452, 515, 516, 517, 518, 0,
	459, 0, 453, 454, 519, 455, 520, 0, 456, 457,
	458, 0, 460, 461, 0, 0, 462, 463, 464, 465,
	466, 468, 0, 469, 0, 467, 470, 471, 472, 521,
	522, 523, 0, 474, 473, 524, 1252, 0, 213, 0,
	475, 476, 525, 477, 478, 479, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 219, 220, 221, 222, 223,
	0, 224, 0, 0, 0, 0, 0, 480, 0, 0,
	0, 0, 225, 227, 226, 228, 229, 481, 482, 230,
	483, 233, 231, 232, 484, 0, 234, 235, 236, 237,
	238, 239, 0, 0, 240, 485, 486, 487, 0, 241,
	488, 0, 0, 0, 242, 243, 244, 245, 246, 247,
	0, 249, 250, 251, 248, 0, 252, 0, 253, 254,
	255, 0, 0, 256, 257, 0, 0, 0, 0, 0,
	0, 0, 258, 259, 260, 261, 262, 263, 489, 490,
	0, 264, 0, 266, 265, 0, 267, 0, 0, 268,
	269, 270, 0, 271, 0, 272, 273, 0, 274, 491,
	275, 276, 278, 280, 277, 281, 282, 283, 284, 492,
	493, 0, 0, 0, 0, 0, 0, 0, 285, 286,
	287, 494, 288, 289, 0, 290, 0, 291, 0, 0,
	0, 292, 293, 0, 294, 495, 0, 496, 295, 0,
	296, 297, 298, 299, 497, 498, 499, 351, 0, 300,
	301, 0, 302, 303, 305, 0, 0, 0, 304, 306,
	313, 0, 0, 307, 500, 309, 308, 310, 311, 312,
	501, 0, 502, 0, 314, 0, 503, 0, 315, 316,
	317, 0, 318, 319, 0, 0, 320, 321, 322, 323,
	324, 0, 326, 325, 0, 327, 504, 0, 328, 329,
	0, 0, 330, 331, 0, 0, 332, 333, 334, 0,
	335, 336, 338, 340, 337, 339, 341, 343, 344, 342,
	0, 345, 346, 348, 0, 347, 0, 0, 0, 349,
	0, 505, 350, 506, 352, 353, 0, 354, 355, 356,
	0, 0, 358, 359, 360, 0, 0, 361, 362, 507,
	0, 363, 0, 508, 364, 357, 365, 366, 367, 368,
	369, 370, 371, 0, 372, 373, 509, 374, 510, 375,
	0, 376, 0, 377, 378, 379, 380, 381, 382, 383,
	511, 384, 385, 0, 386, 387, 388, 389, 390, 0,
	392, 393, 394, 391, 395, 396, 397, 398, 0, 399,
	0, 400, 401, 402, 403, 512, 404, 0, 405, 409,
	410, 411, 412, 413, 414, 415, 0, 421, 422, 416,
	418, 419, 420, 417, 423, 424, 425, 0, 426, 406,
	407, 427, 428, 0, 429, 430, 513, 431, 432, 0,
	433, 434, 435, 436, 408, 437, 441, 442, 438, 439,
	440, 514, 0, 444, 445, 443, 0, 446, 447, 448,
	449, 450, 279, 451, 0, 452, 515, 516, 517, 518,
	0, 459, 0, 453, 454, 519, 455, 520, 0, 456,
	457, 458, 0, 460, 461, 0, 0, 462, 463, 464,
	465, 466, 468, 0, 469, 0, 467, 470, 471, 472,
	521, 522, 523, 0, 474, 473, 524, 1189, 0, 213,
	0, 475, 476, 525, 477, 478, 479, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 219, 220, 221, 222,
	223, 0, 224, 0, 0, 0, 0, 0, 480, 0,
	0, 0, 0, 225, 227, 226, 228, 229, 481, 482,
	230, 483, 233, 231, 232, 484, 0, 234, 235, 236,
	237, 238, 239, 0, 0, 240, 485, 486, 487, 0,
	241, 488, 0, 0, 0, 242, 243, 244, 245, 246,
	247, 0, 249, 250, 251, 248, 0, 252, 0, 253,
	254, 255, 0, 0, 256, 257, 0, 0, 0, 0,
	0, 0, 0, 258, 259, 260, 261, 262, 263, 489,
	490, 0, 264, 0, 266, 265, 0, 267, 0, 0,
	268, 269, 270, 0, 271, 0, 272, 273, 0, 274,
	491, 275, 276, 278, 280, 277, 281, 282, 283, 284,
	492, 493, 0, 0, 0, 0, 0, 0, 0, 285,
	286, 287, 494, 288, 289, 0, 290, 0, 291, 0,
	0, 0, 292, 293, 0, 294, 495, 0, 496, 295,
	0, 296, 297, 298, 299, 497, 498, 499, 351, 0,
	300, 301, 0, 302, 303, 305, 0, 0, 0, 304,
	306, 313, 0, 0, 307, 500, 309, 308, 310, 311,
	312, 501, 0, 502, 0, 314, 0, 503, 0, 315,
	316, 317, 0, 318, 319, 0, 0, 320, 321, 322,
	323, 324, 0, 326, 325, 0, 327, 504, 0, 328,
	329, 0, 0, 330, 331, 0, 0, 332, 333, 334,
	0, 335, 336, 338, 340, 337, 339, 341, 343, 344,
	342, 0, 345, 346, 348, 0, 347, 0, 0, 0,
	349, 0, 505, 350, 506, 352, 353, 0, 354, 355,
	356, 0, 0, 358, 359, 360, 0, 0, 361, 362,
	507, 0, 363, 0, 508, 364, 357, 365, 366, 367,
	368, 369, 370, 371, 0, 372, 373, 509, 374, 510,
	375, 0, 376, 0, 377, 378, 379, 380, 381, 382,
	383, 511, 384, 385, 0, 386, 387, 388, 389, 390,
	0, 392, 393, 394, 391, 395, 396, 397, 398, 0,
	399, 0, 400, 401, 402, 403, 512, 404, 0, 405,
	409, 410, 411, 412, 413, 414, 415, 0, 421, 422,
	416, 418, 419, 420, 417, 423, 424, 425, 0, 426,
	406, 407, 427, 428, 0, 429, 430, 513, 431, 432,
	0, 433, 434, 435, 436, 408, 437, 441, 442, 438,
	439, 440, 514, 0, 444, 445, 443, 0, 446, 447,
	448, 449, 450, 279, 451, 0, 452, 515, 516, 517,
	518, 0, 459, 0, 453, 454, 519, 455, 520, 0,
	456, 457, 458, 0, 460, 461, 0, 0, 462, 463,
	464, 465, 466, 468, 0, 469, 0, 467, 470, 471,
	472, 521, 522, 523, 0, 474, 473, 524, 574, 0,
	213, 0, 475, 476, 525, 477, 478, 479, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 219, 220, 221,
	222, 223, 0, 224, 0, 0, 0, 0, 0, 480,
	0, 0, 0, 0, 225, 1055, 226, 228, 229, 481,
	482, 230, 483, 233, 231, 232, 484, 0, 234, 235,
	236, 237, 238, 239, 0, 0, 240, 485, 486, 1053,
	0, 241, 488, 0, 0, 0, 242, 243, 244, 245,
	246, 247, 0, 249, 250, 251, 248, 0, 252, 0,
	253, 254, 255, 0, 0, 256, 257, 0, 0, 0,
	0, 0, 0, 0, 258, 259, 260, 261, 262, 263,
	489, 490, 0, 264, 0, 266, 265, 0, 267, 0,
	0, 268, 269, 270, 0, 271, 0, 272, 273, 0,
	274, 491, 275, 276, 278, 280, 277, 281, 282, 283,
	284, 492, 493, 0, 0, 0, 0, 0, 0, 0,
	285, 286, 287, 494, 288, 289, 0, 290, 0, 291,
	0, 0, 0, 292, 293, 0, 294, 495, 0, 496,
	295, 0, 296, 297, 298, 299, 497, 498, 499, 351,
	0, 300, 301, 0, 302, 303, 305, 0, 0, 0,
	304, 306, 313, 0, 0, 307, 500, 309, 308, 310,
	311, 312, 501, 0, 502, 0, 314, 0, 503, 0,
	315, 316, 317, 0, 318, 319, 0, 0, 320, 321,
	322, 323, 324, 0, 326, 325, 0, 327, 504, 0,
	328, 329, 0, 0, 330, 331, 0, 0, 332, 333,
	334, 0, 335, 336, 338, 340, 337, 339, 341, 343,
	344, 575, 0, 345, 346, 348, 0, 347, 0, 0,
	0, 349, 0, 505, 350, 506, 352, 353, 0, 354,
	355, 356, 0, 0, 358, 359, 360, 0, 0, 361,
	362, 507, 0, 363, 0, 508, 364, 357, 365, 366,
	367, 368, 369, 370, 371, 0, 372, 373, 509, 374,
	510, 375, 0, 376, 0, 377, 378, 379, 380, 381,
	382, 383, 511, 384, 385, 0, 386, 387, 388, 389,
	390, 0, 392, 393, 394, 391, 395, 396, 397, 398,
	0, 399, 0, 400, 401, 402, 403, 512, 404, 0,
	405, 409, 410, 571, 412, 413, 414, 415, 0, 421,
	422, 416, 418, 419, 420, 417, 423, 1056, 425, 0,
	426, 406, 407, 427, 428, 0, 429, 430, 513, 431,
	432, 0, 433, 434, 435, 436, 408, 437, 441, 442,
	438, 439, 440, 514, 0, 444, 445, 443, 0, 446,
	447, 448, 449, 450, 279, 451, 0, 452, 570, 516,
	517, 518, 0, 459, 0, 453, 1054, 519, 455, 520,
	0, 456, 457, 458, 0, 460, 461, 0, 0, 462,
	463, 464, 465, 466, 468, 0, 469, 0, 467, 470,
	471, 472, 521, 522, 523, 213, 474, 473, 524, 0,
	0, 0, 0, 475, 476, 525, 477, 478, 479, 0,
	0, 0, 219, 220, 221, 222, 223, 1037, 224, 0,
	0, 0, 0, 0, 480, 0, 0, 0, 0, 225,
	227, 226, 228, 229, 481, 482, 230, 483, 233, 231,
	232, 484, 0, 234, 235, 236, 237, 238, 239, 0,
	0, 240, 485, 486, 487, 0, 241, 488, 0, 0,
	0, 242, 243, 244, 245, 246, 247, 0, 249, 250,
	251, 248, 0, 252, 0, 253, 254, 255, 0, 0,
	256, 257, 0, 0, 0, 0, 0, 0, 0, 258,
	259, 260, 261, 262, 263, 489, 490, 0, 264, 0,
	266, 265, 0, 267, 0, 0, 268, 269, 270, 0,
	271, 0, 272, 273, 0, 274, 491, 275, 276, 278,
	280, 277, 281, 282, 283, 284, 492, 493, 0, 0,
	0, 0, 0, 0, 0, 285, 286, 287, 494, 288,
	289, 0, 290, 0, 291, 0, 0, 0, 292, 293,
	0, 294, 495, 0, 496, 295, 0, 296, 297, 298,
	299, 497, 498, 499, 351, 0, 300, 301, 0, 302,
	303, 305, 0, 0, 0, 304, 306, 313, 0, 0,
	307, 500, 309, 308, 310, 311, 312, 501, 0, 502,
	0, 314, 0, 503, 0, 315, 316, 317, 0, 318,
	319, 0, 0, 320, 321, 322, 323, 324, 0, 326,
	325, 0, 327, 504, 0, 328, 329, 0, 0, 330,
	331, 0, 0, 332, 333, 334, 0, 335, 336, 338,
	340, 337, 339, 341, 343, 344, 342, 0, 345, 346,
	348, 0, 347, 0, 0, 0, 349, 0, 505, 350,
	506, 352, 353, 0, 354, 355, 356, 0, 0, 358,
	359, 360, 0, 0, 361, 362, 507, 0, 363, 0,
	508, 364, 357, 365, 366, 367, 368, 369, 370, 371,
	0, 372, 373, 509, 374, 510, 375, 0, 376, 0,
	377, 378, 379, 380, 381, 382, 383, 511, 384, 385,
	0, 386, 387, 388, 389, 390, 0, 392, 393, 394,
	391, 395, 396, 397, 398, 0, 399, 0, 400, 401,
	402, 403, 512, 404, 0, 405, 409, 410, 411, 412,
	413, 414, 415, 0, 421, 422, 416, 418, 419, 420,
	417, 423, 424, 425, 0, 426, 406, 407, 427, 428,
	0, 429, 430, 513, 431, 432, 0, 433, 434, 435,
	436, 408, 437, 441, 442, 438, 439, 440, 514, 0,
	444, 445, 443, 0, 446, 447, 448, 449, 450, 279,
	451, 0, 452, 515, 516, 517, 518, 0, 459, 0,
	453, 454, 519, 455, 520, 0, 456, 457, 458, 0,
	460, 461, 0, 0, 462, 463, 464, 465, 466, 468,
	0, 469, 0, 467, 470, 471, 472, 521, 522, 523,
	0, 474, 473, 524, 574, 0, 213, 0, 475, 476,
	525, 477, 478, 479, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 219, 220, 221, 222, 223, 0, 224,
	0, 0, 0, 0, 0, 480, 0, 0, 0, 0,
	225, 227, 226, 228, 229, 481, 482, 230, 483, 233,
	231, 232, 484, 0, 234, 235, 236, 237, 238, 239,
	0, 0, 240, 485, 486, 487, 0, 564, 488, 0,
	0, 0, 242, 243, 244, 245, 246, 247, 0, 249,
	250, 251, 248, 0, 562, 0, 253, 254, 255, 0,
	0, 256, 257, 0, 0, 0, 0, 0, 0, 0,
	258, 259, 260, 261, 262, 263, 489, 490, 0, 264,
	0, 266, 265, 0, 267, 0, 0, 268, 269, 270,
	0, 271, 0, 272, 273, 0, 274, 491, 275, 276,
	278, 280, 277, 281, 282, 283, 284, 492, 493, 0,
	0, 0, 0, 0, 0, 0, 285, 286, 287, 494,
	288, 289, 0, 290, 0, 291, 0, 0, 0, 292,
	293, 0, 294, 495, 0, 496, 295, 0, 296, 297,
	298, 299, 497, 498, 499, 351, 0, 300, 301, 0,
	302, 303, 305, 0, 0, 0, 304, 306, 313, 0,
	0, 307, 500, 309, 308, 310, 311, 312, 501, 0,
	502, 0, 314, 0, 503, 0, 315, 316, 317, 0,
	318, 319, 0, 0, 320, 321, 322, 323, 324, 0,
	326, 325, 0, 327, 504, 0, 328, 329, 0, 0,
	330, 563, 0, 0, 332, 333, 334, 0, 335, 336,
	338, 340, 337, 339, 341, 343, 344, 575, 0, 345,
	346, 348, 0, 347, 0, 0, 0, 349, 0, 505,
	350, 506, 352, 353, 0, 354, 355, 356, 0, 0,
	358, 359, 360, 0, 0, 361, 362, 507, 0, 363,
	0, 508, 364, 357, 365, 366, 367, 368, 369, 370,
	371, 0, 372, 373, 509, 374, 510, 375, 0, 376,
	0, 377, 378, 379, 380, 381, 382, 383, 511, 384,
	385, 0, 386, 387, 388, 389, 390, 0, 392, 393,
	394, 391, 395, 396, 397, 398, 0, 399, 0, 400,
	401, 402, 403, 565, 404, 0, 405, 409, 410, 571,
	412, 413, 414, 415, 0, 421, 422, 416, 418, 419,
	420, 417, 423, 566, 425, 0, 426, 406, 407, 427,
	428, 0, 429, 430, 513, 431, 432, 0, 433, 434,
	435, 436, 408, 437, 441, 442, 438, 439, 440, 514,
	0, 444, 445, 443, 0, 446, 447, 448, 449, 450,
	279, 451, 0, 452, 570, 516, 517, 518, 0, 459,
	0, 453, 568, 519, 455, 520, 0, 456, 457, 458,
	0, 460, 461, 0, 0, 462, 463, 464, 465, 466,
	468, 0, 469, 0, 467, 470, 471, 472, 521, 522,
	523, 0, 474, 473, 524, 558, 0, 213, 0, 475,
	476, 525, 477, 478, 479, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 219, 220, 221, 222, 223, 0,
	224, 0, 0, 0, 0, 0, 480, 0, 0, 0,
	0, 225, 227, 226, 228, 229, 481, 482, 230, 483,
	233, 231, 232, 484, 0, 234, 235, 236, 237, 238,
	239, 0, 0, 240, 485, 486, 487, 0, 241, 488,
	0, 0, 0, 242, 243, 244, 245, 246, 247, 0,
	249, 250, 251, 248, 0, 252, 0, 253, 254, 255,
	0, 0, 256, 257, 0, 0, 0, 0, 0, 0,
	0, 258, 259, 260, 261, 262, 263, 489, 490, 0,
	264, 0, 266, 265, 0, 267, 0, 0, 268, 269,
	270, 0, 271, 0, 272, 273, 0, 274, 491, 275,
	276, 278, 280, 277, 281, 282, 283, 284, 492, 493,
	0, 0, 0, 0, 0, 0, 0, 285, 286, 287,
	494, 288, 289, 0, 290, 0, 291, 0, 0, 0,
	292, 293, 0, 294, 495, 0, 496, 295, 0, 296,
	297, 298, 299, 497, 498, 499, 351, 0, 300, 301,
	0, 302, 303, 305, 0, 0, 0, 304, 306, 313,
	0, 0, 307, 500, 309, 308, 310, 311, 312, 501,
	0, 502, 0, 314, 0, 503, 0, 315, 316, 317,
	0, 318, 319, 0, 0, 320, 321, 322, 323, 324,
	0, 326, 325, 0, 327, 504, 0, 328, 329, 0,
	0, 330, 331, 0, 0, 332, 333, 334, 0, 335,
	336, 338, 340, 337, 339, 341, 343, 344, 342, 0,
	345, 346, 348, 0, 347, 0, 0, 0, 349, 0,
	505, 350, 506, 352, 353, 0, 354, 355, 356, 0,
	0, 358, 359, 360, 0, 0, 361, 362, 507, 0,
	363, 0, 508, 364, 357, 365, 366, 367, 368, 369,
	370, 371, 0, 372, 373, 509, 374, 510, 375, 0,
	376, 0, 377, 378, 379, 380, 381, 382, 383, 511,
	384, 385, 0, 386, 387, 388, 389, 390, 0, 392,
	393, 394, 391, 395, 396, 397, 398, 0, 399, 0,
	400, 401, 402, 403, 512, 404, 0, 405, 559, 410,
	411, 412, 413, 414, 415, 0, 421, 422, 416, 418,
	419, 420, 417, 423, 424, 425, 0, 426, 406, 407,
	427, 428, 0, 429, 430, 513, 431, 432, 0, 433,
	434, 435, 436, 408, 437, 441, 442, 438, 439, 440,
	514, 0, 444, 445, 443, 0, 446, 447, 448, 449,
	450, 279, 451, 0, 452, 515, 516, 517, 518, 0,
	459, 0, 453, 454, 519, 455, 520, 0, 456, 457,
	458, 0, 460, 461, 0, 0, 462, 463, 464, 465,
	466, 468, 0, 469, 0, 467, 470, 471, 472, 521,
	522, 523, 0, 474, 473, 524, 556, 0, 213, 0,
	475, 476, 525, 477, 478, 479, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 219, 220, 221, 222, 223,
	0, 224, 0, 0, 0, 0, 0, 480, 0, 0,
	0, 0, 225, 227, 226, 228, 229, 481, 482, 230,
	483, 233, 231, 232, 484, 0, 234, 235, 236, 237,
	238, 239, 0, 0, 240, 485, 486, 487, 0, 241,
	488, 0, 0, 0, 242, 243, 244, 245, 246, 247,
	0, 249, 250, 251, 248, 0, 252, 0, 253, 254,
	255, 0, 0, 256, 257, 0, 0, 0, 0, 0,
	0, 0, 258, 259, 260, 261, 262, 263, 489, 490,
	0, 264, 0, 266, 265, 0, 267, 0, 0, 268,
	269, 270, 0, 271, 0, 272, 273, 0, 274, 491,
	275, 276, 278, 280, 277, 281, 282, 283, 284, 492,
	493, 0, 0, 0, 0, 0, 0, 0, 285, 286,
	287, 494, 288, 289, 0, 290, 0, 291, 0, 0,
	0, 292, 293, 0, 294, 495, 0, 496, 295, 0,
	296, 297, 298, 299, 497, 498, 499, 351, 0, 300,
	301, 0, 302, 303, 305, 0, 0, 0, 304, 306,
	313, 0, 0, 307, 500, 309, 308, 310, 311, 312,
	501, 0, 502, 0, 314, 0, 503, 0, 315, 316,
	317, 0, 318, 319, 0, 0, 320, 321, 322, 323,
	324, 0, 326, 325, 0, 327, 504, 0, 328, 329,
	0, 0, 330, 331, 0, 0, 332, 333, 334, 0,
	335, 336, 338, 340, 337, 339, 341, 343, 344, 342,
	0, 345, 346, 348, 0, 347, 0, 0, 0, 349,
	0, 505, 350, 506, 352, 353, 0, 354, 355, 356,
	0, 0, 358, 359, 360, 0, 0, 361, 362, 507,
	0, 363, 0, 508, 364, 357, 365, 366, 367, 368,
	369, 370, 371, 0, 372, 373, 509, 374, 510, 375,
	0, 376, 0, 377, 378, 379, 380, 381, 382, 383,
	511, 384, 385, 0, 386, 387, 388, 389, 390, 0,
	392, 393, 394, 391, 395, 396, 397, 398, 0, 399,
	0, 400, 401, 402, 403, 512, 404, 0, 405, 409,
	410, 411, 412, 413, 414, 415, 0, 421, 422, 416,
	418, 419, 420, 417, 423, 424, 425, 0, 426, 406,
	407, 427, 428, 0, 429, 430, 513, 431, 432, 0,
	433, 434, 435, 436, 408, 437, 441, 442, 438, 439,
	440, 514, 0, 444, 445, 443, 0, 446, 447, 448,
	449, 450, 279, 451, 0, 452, 515, 516, 517, 518,
	0, 459, 0, 453, 454, 519, 455, 520, 0, 456,
	457, 458, 0, 460, 461, 0, 0, 462, 463, 464,
	465, 466, 468, 0, 469, 0, 467, 470, 471, 472,
	521, 522, 523, 0, 474, 473, 524, 550, 0, 213,
	0, 475, 476, 525, 477, 478, 479, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 219, 220, 221, 222,
	223, 0, 224, 0, 0, 0, 0, 0, 480, 0,
	0, 0, 0, 225, 227, 226, 228, 229, 481, 482,
	230, 483, 233, 231, 232, 484, 0, 234, 235, 236,
	237, 238, 239, 0, 0, 240, 485, 486, 487, 0,
	241, 488, 0, 0, 0, 242, 243, 244, 245, 246,
	247, 0, 249, 250, 251, 248, 0, 252, 0, 253,
	254, 255, 0, 0, 256, 257, 0, 0, 0, 0,
	0, 0, 0, 258, 259, 260, 261, 262, 263, 489,
	490, 0, 264, 0, 266, 265, 0, 267, 0, 0,
	268, 269, 270, 0, 271, 0, 272, 273, 0, 274,
	491, 275, 276, 278, 280, 277, 281, 282, 283, 284,
	492, 493, 0, 0, 0, 0, 0, 0, 0, 285,
	286, 287, 494, 288, 289, 0, 290, 0, 291, 0,
	0, 0, 292, 293, 0, 294, 495, 0, 496, 295,
	0, 296, 297, 298, 299, 497, 498, 499, 351, 0,
	300, 301, 0, 302, 303, 305, 0, 0, 0, 304,
	306, 313, 0, 0, 307, 500, 309, 308, 310, 311,
	312, 501, 0, 502, 0, 314, 0, 503, 0, 315,
	316, 317, 0, 318, 319, 0, 0, 320, 321, 322,
	323, 324, 0, 326, 325, 0, 327, 504, 0, 328,
	329, 0, 0, 330, 331, 0, 0, 332, 333, 334,
	0, 335, 336, 338, 340, 337, 339, 341, 343, 344,
	342, 0, 345, 346, 348, 0, 347, 0, 0, 0,
	349, 0, 505, 350, 506, 352, 353, 0, 354, 355,
	356, 0, 0, 358, 359, 360, 0, 0, 361, 362,
	507, 0, 363, 0, 508, 364, 357, 365, 366, 367,
	368, 369, 370, 371, 0, 372, 373, 509, 374, 510,
	375, 0, 376, 0, 377, 378, 379, 380, 381, 382,
	383, 511, 384, 385, 0, 386, 387, 388, 389, 390,
	0, 392, 393, 394, 391, 395, 396, 397, 398, 0,
	399, 0, 400, 401, 402, 403, 512, 404, 0, 405,
	409, 410, 411, 412, 413, 414, 415, 0, 421, 422,
	416, 418, 419, 420, 417, 423, 424, 425, 0, 426,
	406, 407, 427, 428, 0, 429, 430, 513, 431, 432,
	0, 433, 434, 435, 436, 408, 437, 441, 442, 438,
	439, 440, 514, 0, 444, 445, 443, 0, 446, 447,
	448, 449, 450, 279, 451, 0, 452, 515, 516, 517,
	518, 0, 459, 0, 453, 454, 519, 455, 520, 0,
	456, 457, 458, 0, 460, 461, 0, 0, 462, 463,
	464, 465, 466, 468, 0, 469, 0, 467, 470, 471,
	472, 521, 522, 523, 0, 474, 473, 524, 528, 0,
	213, 0, 475, 476, 525, 477, 478, 479, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 219, 220, 221,
	222, 223, 0, 224, 0, 0, 0, 0, 0, 480,
	0, 0, 0, 0, 225, 227, 226, 228, 229, 481,
	482, 230, 483, 233, 231, 232, 484, 0, 234, 235,
	236, 237, 238, 239, 0, 0, 240, 485, 486, 487,
	0, 241, 488, 0, 0, 0, 242, 243, 244, 245,
	246, 247, 0, 249, 250, 251, 248, 0, 252, 0,
	253, 254, 255, 0, 0, 256, 257, 0, 0, 0,
	0, 0, 0, 0, 258, 259, 260, 261, 262, 263,
	489, 490, 0, 264, 0, 266, 265, 0, 267, 0,
	0, 268, 269, 270, 0, 271, 0, 272, 273, 0,
	274, 491, 275, 276, 278, 280, 277, 281, 282, 283,
	284, 492, 493, 0, 0, 0, 0, 0, 0, 0,
	285, 286, 287, 494, 288, 289, 0, 290, 0, 291,
	0, 0, 0, 292, 293, 0, 294, 495, 0, 496,
	295, 0, 296, 297, 298, 299, 497, 498, 499, 351,
	0, 300, 301, 0, 302, 303, 305, 0, 0, 0,
	304, 306, 313, 0, 0, 307, 500, 309, 308, 310,
	311, 312, 501, 0, 502, 0, 314, 0, 503, 0,
	315, 316, 317, 0, 318, 319, 0, 0, 320, 321,
	322, 323, 324, 0, 326, 325, 0, 327, 504, 0,
	328, 329, 0, 0, 330, 331, 0, 0, 332, 333,
	334, 0, 335, 336, 338, 340, 337, 339, 341, 343,
	344, 342, 0, 345, 346, 348, 0, 347, 0, 0,
	0, 349, 0, 505, 350, 506, 352, 353, 0, 354,
	355, 356, 0, 0, 358, 359, 360, 0, 0, 361,
	362, 507, 0, 363, 0, 508, 364, 357, 365, 366,
	367, 368, 369, 370, 371, 0, 372, 373, 509, 374,
	510, 375, 0, 376, 0, 377, 378, 379, 380, 381,
	382, 383, 511, 384, 385, 0, 386, 387, 388, 389,
	390, 0, 392, 393, 394, 391, 395, 396, 397, 398,
	0, 399, 0, 400, 401, 402, 403, 512, 404, 0,
	405, 409, 410, 411, 412, 413, 414, 415, 0, 421,
	422, 416, 418, 419, 420, 417, 423, 424, 425, 0,
	426, 406, 407, 427, 428, 0, 429, 430, 513, 431,
	432, 0, 433, 434, 435, 436, 408, 437, 441, 442,
	438, 439, 440, 514, 0, 444, 445, 443, 0, 446,
	447, 448, 449, 450, 279, 451, 0, 452, 515, 516,
	517, 518, 0, 459, 0, 453, 454, 519, 455, 520,
	0, 456, 457, 458, 0, 460, 461, 0, 0, 462,
	463, 464, 465, 466, 468, 0, 469, 0, 467, 470,
	471, 472, 521, 522, 523, 213, 474, 473, 524, 0,
	0, 0, 0, 475, 476, 525, 477, 478, 479, 0,
	0, 0, 219, 220, 221, 222, 223, 0, 224, 0,
	0, 0, 0, 0, 480, 0, 0, 0, 0, 225,
	227, 226, 228, 229, 481, 482, 230, 483, 233, 231,
	232, 484, 0, 234, 235, 236, 237, 238, 239, 0,
	0, 240, 485, 486, 487, 0, 241, 488, 0, 0,
	0, 242, 243, 244, 245, 246, 247, 0, 249, 250,
	251, 248, 0, 252, 0, 253, 254, 255, 0, 0,
	256, 257, 0, 0, 0, 0, 0, 0, 0, 258,
	259, 260, 261, 262, 263, 489, 490, 0, 264, 0,
	266, 265, 0, 267, 0, 0, 268, 269, 270, 0,
	271, 0, 272, 273, 0, 274, 491, 275, 276, 278,
	280, 277, 281, 282, 283, 284, 492, 493, 0, 0,
	0, 0, 0, 0, 0, 285, 286, 287, 494, 288,
	289, 0, 290, 0, 291, 0, 0, 0, 292, 293,
	0, 294, 495, 0, 496, 295, 0, 296, 297, 298,
	299, 497, 498, 499, 351, 0, 300, 301, 0, 302,
	303, 305, 0, 0, 0, 304, 306, 313, 0, 0,
	307, 500, 309, 308, 310, 311, 312, 501, 0, 502,
	0, 314, 0, 503, 0, 315, 316, 317, 0, 318,
	319, 0, 0, 320, 321, 322, 323, 324, 0, 326,
	325, 0, 327, 504, 0, 328, 329, 0, 0, 330,
	331, 0, 0, 332, 333, 334, 0, 335, 336, 338,
	340, 337, 339, 341, 343, 344, 342, 0, 345, 346,
	348, 0, 347, 0, 0, 0, 349, 0, 505, 350,
	506, 352, 353, 0, 354, 355, 356, 0, 0, 358,
	359, 360, 0, 0, 361, 362, 507, 0, 363, 0,
	508, 364, 357, 365, 366, 367, 368, 369, 370, 371,
	0, 372, 373, 509, 374, 510, 375, 0, 376, 0,
	377, 378, 379, 380, 381, 382, 383, 511, 384, 385,
	0, 386, 387, 388, 389, 390, 0, 392, 393, 394,
	391, 395, 396, 397, 398, 0, 399, 0, 400, 401,
	402, 403, 512, 404, 0, 405, 409, 410, 411, 412,
	413, 414, 415, 0, 421, 422, 416, 418, 419, 420,
	417, 423, 424, 425, 0, 426, 406, 407, 427, 428,
	0, 429, 430, 513, 431, 432, 0, 433, 434, 435,
	436, 408, 437, 441, 442, 438, 439, 440, 514, 0,
	444, 445, 443, 0, 446, 447, 448, 449, 450, 279,
	451, 0, 452, 515, 516, 517, 518, 0, 459, 0,
	453, 454, 519, 455, 520, 0, 456, 457, 458, 0,
	460, 461, 0, 0, 462, 463, 464, 465, 466, 468,
	0, 469, 0, 467, 470, 471, 472, 521, 522, 523,
	213, 474, 473, 524, 0, 0, 0, 0, 475, 476,
	525, 477, 478, 479, 0, 0, 0, 219, 220, 221,
	222, 223, 0, 224, 0, 0, 0, 0, 0, 480,
	0, 0, 0, 0, 225, 227, 226, 228, 229, 481,
	482, 230, 483, 233, 231, 232, 484, 0, 234, 235,
	236, 237, 238, 239, 0, 0, 240, 485, 486, 487,
	0, 241, 488, 0, 0, 0, 242, 243, 244, 245,
	246, 247, 0, 249, 250, 251, 248, 0, 252, 0,
	253, 254, 255, 0, 0, 256, 257, 0, 0, 0,
	0, 0, 0, 0, 258, 259, 260, 261, 262, 263,
	489, 490, 0, 264, 0, 266, 265, 0, 267, 0,
	0, 268, 269, 270, 0, 271, 0, 272, 273, 0,
	274, 491, 275, 276, 278, 280, 277, 281, 282, 283,
	284, 492, 493, 0, 0, 0, 0, 0, 0, 0,
	285, 286, 287, 494, 288, 289, 0, 290, 0, 291,
	0, 0, 0, 292, 293, 0, 294, 495, 0, 496,
	295, 0, 296, 297, 298, 299, 2781, 498, 499, 351,
	0, 300, 301, 0, 302, 303, 305, 0, 0, 0,
	304, 306, 313, 0, 0, 307, 500, 309, 308, 310,
	311, 312, 501, 0, 502, 0, 314, 0, 503, 0,
	315, 316, 317, 0, 318, 319, 0, 0, 320, 321,
	322, 323, 324, 0, 326, 325, 0, 327, 504, 0,
	328, 329, 0, 0, 330, 331, 0, 0, 332, 333,
	334, 0, 335, 336, 338, 340, 337, 339, 341, 343,
	344, 342, 0, 345, 346, 348, 0, 347, 0, 0,
	0, 349, 0, 505, 350, 506, 352, 353, 0, 354,
	355, 356, 0, 0, 358, 359, 360, 0, 0, 361,
	362, 507, 0, 363, 0, 508, 364, 357, 365, 366,
	367, 368, 369, 370, 371, 0, 372, 373, 509, 374,
	510, 375, 0, 376, 0, 377, 378, 379, 380, 381,
	382, 383, 511, 384, 385, 0, 386, 387, 388, 389,
	390, 0, 392, 393, 394, 391, 395, 396, 397, 398,
	0, 399, 0, 400, 401, 402, 403, 512, 404, 0,
	405, 409, 410, 411, 412, 413, 414, 415, 0, 421,
	422, 416, 418, 419, 420, 417, 423, 424, 425, 0,
	426, 406, 407, 427, 428, 0, 429, 430, 513, 431,
	432, 0, 433, 434, 435, 436, 408, 437, 441, 442,
	438, 439, 440, 514, 0, 444, 445, 443, 0, 446,
	447, 448, 449, 450, 279, 451, 0, 452, 515, 516,
	517, 518, 0, 459, 0, 453, 454, 519, 455, 520,
	0, 456, 457, 458, 0, 460, 461, 0, 0, 462,
	463, 464, 465, 466, 468, 0, 469, 0, 467, 470,
	471, 472, 521, 522, 523, 213, 474, 473, 524, 0,
	0, 0, 0, 475, 476, 525, 477, 478, 479, 0,
	0, 0, 219, 220, 221, 222, 223, 0, 224, 0,
	0, 0, 0, 0, 480, 0, 0, 0, 0, 225,
	227, 226, 228, 229, 481, 482, 230, 483, 233, 231,
	232, 484, 0, 234, 235, 236, 237, 238, 239, 0,
	0, 240, 485, 486, 487, 0, 241, 488, 0, 0,
	0, 242, 243, 244, 245, 246, 247, 0, 249, 250,
	251, 248, 0, 252, 0, 253, 254, 255, 0, 0,
	256, 257, 0, 0, 0, 0, 0, 0, 0, 258,
	259, 260, 261, 262, 263, 489, 490, 0, 264, 0,
	266, 265, 0, 267, 0, 0, 268, 269, 270, 0,
	271, 0, 272, 273, 0, 274, 491, 275, 276, 278,
	280, 277, 281, 282, 283, 284, 492, 493, 0, 0,
	0, 0, 0, 0, 0, 285, 286, 287, 494, 288,
	289, 0, 290, 0, 291, 0, 0, 0, 292, 293,
	0, 294, 495, 0, 496, 295, 0, 296, 297, 298,
	299, 2779, 498, 499, 351, 0, 300, 301, 0, 302,
	303, 305, 0, 0, 0, 304, 306, 313, 0, 0,
	307, 500, 309, 308, 310, 311, 312, 501, 0, 502,
	0, 314, 0, 503, 0, 315, 316, 317, 0, 318,
	319, 0, 0, 320, 321, 322, 323, 324, 0, 326,
	325, 0, 327, 504, 0, 328, 329, 0, 0, 330,
	331, 0, 0, 332, 333, 334, 0, 335, 336, 338,
	340, 337, 339, 341, 343, 344, 342, 0, 345, 346,
	348, 0, 347, 0, 0, 0, 349, 0, 505, 350,
	506, 352, 353, 0, 354, 355, 356, 0, 0, 358,
	359, 360, 0, 0, 361, 362, 507, 0, 363, 0,
	508, 364, 357, 365, 366, 367, 368, 369, 370, 371,
	0, 372, 373, 509, 374, 510, 375, 0, 376, 0,
	377, 378, 379, 380, 381, 382, 383, 511, 384, 385,
	0, 386, 387, 388, 389, 390, 0, 392, 393, 394,
	391, 395, 396, 397, 398, 0, 399, 0, 400, 401,
	402, 403, 512, 404, 0, 405, 409, 410, 411, 412,
	413, 414, 415, 0, 421, 422, 416, 418, 419, 420,
	417, 423, 424, 425, 0, 426, 406, 407, 427, 428,
	0, 429, 430, 513, 431, 432, 0, 433, 434, 435,
	436, 408, 437, 441, 442, 438, 439, 440, 514, 0,
	444, 445, 443, 0, 446, 447, 448, 449, 450, 279,
	451, 0, 452, 515, 516, 517, 518, 0, 459, 0,
	453, 454, 519, 455, 520, 0, 456, 457, 458, 0,
	460, 461, 0, 0, 462, 463, 464, 465, 466, 468,
	0, 469, 0, 467, 470, 471, 472, 521, 522, 523,
	213, 474, 473, 524, 0, 0, 0, 0, 475, 476,
	525, 477, 478, 479, 0, 0, 0, 219, 220, 221,
	222, 223, 0, 224, 0, 0, 0, 0, 0, 480,
	0, 0, 0, 0, 225, 227, 226, 228, 229, 481,
	482, 230, 483, 233, 231, 232, 484, 0, 234, 235,
	236, 237, 238, 239, 0, 0, 240, 485, 486, 487,
	0, 241, 488, 0, 0, 0, 242, 243, 244, 245,
	246, 247, 0, 249, 250, 251, 248, 0, 252, 0,
	253, 254, 255, 0, 0, 256, 257, 0, 0, 0,
	0, 0, 0, 0, 258, 259, 260, 261, 262, 263,
	489, 490, 0, 264, 0, 266, 265, 0, 267, 0,
	0, 268, 269, 270, 0, 271, 0, 272, 273, 0,
	274, 491, 275, 276, 278, 280, 277, 281, 282, 283,
	284, 492, 493, 0, 0, 0, 0, 0, 0, 0,
	285, 286, 287, 494, 288, 289, 0, 290, 0, 291,
	0, 0, 0, 292, 293, 0, 294, 495, 0, 496,
	295, 0, 296, 297, 298, 299, 2766, 498, 499, 351,
	0, 300, 301, 0, 302, 303, 305, 0, 0, 0,
	304, 306, 313, 0, 0, 307, 500, 309, 308, 310,
	311, 312, 501, 0, 502, 0, 314, 0, 503, 0,
	315, 316, 317, 0, 318, 319, 0, 0, 320, 321,
	322, 323, 324, 0, 326, 325, 0, 327, 504, 0,
	328, 329, 0, 0, 330, 331, 0, 0, 332, 333,
	334, 0, 335, 336, 338, 340, 337, 339, 341, 343,
	344, 342, 0, 345, 346, 348, 0, 347, 0, 0,
	0, 349, 0, 505, 350, 506, 352, 353, 0, 354,
	355, 356, 0, 0, 358, 359, 360, 0, 0, 361,
	362, 507, 0, 363, 0, 508, 364, 357, 365, 366,
	367, 368, 369, 370, 371, 0, 372, 373, 509, 374,
	510, 375, 0, 376, 0, 377, 378, 379, 380, 381,
	382, 383, 511, 384, 385, 0, 386, 387, 388, 389,
	390, 0, 392, 393, 394, 391, 395, 396, 397, 398,
	0, 399, 0, 400, 401, 402, 403, 512, 404, 0,
	405, 409, 410, 411, 412, 413, 414, 415, 0, 421,
	422, 416, 418, 419, 420, 417, 423, 424, 425, 0,
	426, 406, 407, 427, 428, 0, 429, 430, 513, 431,
	432, 0, 433, 434, 435, 436, 408, 437, 441, 442,
	438, 439, 440, 514, 0, 444, 445, 443, 0, 446,
	447, 448, 449, 450, 279, 451, 0, 452, 515, 516,
	517, 518, 0, 459, 0, 453, 454, 519, 455, 520,
	0, 456, 457, 458, 0, 460, 461, 0, 0, 462,
	463, 464, 465, 466, 468, 0, 469, 0, 467, 470,
	471, 472, 521, 522, 523, 213, 474, 473, 524, 0,
	0, 0, 0, 475, 476, 525, 477, 478, 479, 0,
	0, 0, 219, 220, 221, 222, 223, 0, 224, 0,
	0, 0, 0, 0, 480, 0, 0, 0, 0, 225,
	227, 226, 228, 229, 481, 482, 230, 483, 233, 231,
	232, 484, 0, 234, 235, 236, 237, 238, 239, 0,
	0, 240, 485, 486, 487, 0, 241, 488, 0, 0,
	0, 242, 243, 244, 245, 246, 247, 0, 249, 250,
	251, 248, 0, 252, 0, 253, 254, 255, 0, 0,
	256, 257, 0, 0, 0, 0, 0, 0, 0, 258,
	259, 260, 261, 262, 263, 489, 490, 0, 264, 0,
	266, 265, 0, 267, 0, 0, 268, 269, 270, 0,
	271, 0, 272, 273, 0, 274, 491, 275, 276, 278,
	280, 277, 281, 282, 283, 284, 492, 493, 0, 0,
	0, 0, 0, 0, 0, 285, 286, 287, 494, 288,
	289, 0, 290, 0, 291, 0, 0, 0, 292, 293,
	0, 294, 495, 0, 496, 295, 0, 296, 297, 298,
	299, 2424, 498, 499, 351, 0, 300, 301, 0, 302,
	303, 305, 0, 0, 0, 304, 306, 313, 0, 0,
	307, 500, 309, 308, 310, 311, 312, 501, 0, 502,
	0, 314, 0, 503, 0, 315, 316, 317, 0, 318,
	319, 0, 0, 320, 321, 322, 323, 324, 0, 326,
	325, 0, 327, 504, 0, 328, 329, 0, 0, 330,
	331, 0, 0, 332, 333, 334, 0, 335, 336, 338,
	340, 337, 339, 341, 343, 344, 342, 0, 345, 346,
	348, 0, 347, 0, 0, 0, 349, 0, 505, 350,
	506, 352, 353, 0, 354, 355, 356, 0, 0, 358,
	359, 360, 0, 0, 361, 362, 507, 0, 363, 0,
	508, 364, 357, 365, 366, 367, 368, 369, 370, 371,
	0, 372, 373, 509, 374, 510, 375, 0, 376, 0,
	377, 378, 379, 380, 381, 382, 383, 511, 384, 385,
	0, 386, 387, 388, 389, 390, 0, 392, 393, 394,
	391, 395, 396, 397, 398, 0, 399, 0, 400, 401,
	402, 403, 512, 404, 0, 405, 409, 410, 411, 412,
	413, 414, 415, 0, 421, 422, 416, 418, 419, 420,
	417, 423, 424, 425, 0, 426, 406, 407, 427, 428,
	0, 429, 430, 513, 431, 432, 0, 433, 434, 435,
	436, 408, 437, 441, 442, 438, 439, 440, 514, 0,
	444, 445, 443, 0, 446, 447, 448, 449, 450, 279,
	451, 0, 452, 515, 516, 517, 518, 0, 459, 0,
	453, 454, 519, 455, 520, 0, 456, 457, 458, 0,
	460, 461, 0, 0, 462, 463, 464, 465, 466, 468,
	0, 469, 0, 467, 470, 471, 472, 521, 522, 523,
	213, 474, 473, 524, 0, 0, 0, 0, 475, 476,
	525, 477, 478, 479, 0, 0, 0, 219, 220, 221,
	222, 223, 0, 224, 0, 0, 0, 0, 0, 480,
	0, 0, 0, 0, 225, 227, 226, 228, 229, 481,
	482, 230, 483, 233, 231, 232, 484, 0, 234, 235,
	236, 237, 238, 239, 0, 0, 240, 485, 486, 487,
	0, 241, 488, 0, 0, 0, 242, 243, 244, 245,
	246, 247, 0, 249, 250, 251, 248, 0, 252, 0,
	253, 254, 255, 0, 0, 256, 257, 0, 0, 0,
	0, 0, 0, 0, 258, 259, 260, 261, 262, 263,
	489, 490, 0, 264, 0, 266, 265, 0, 267, 0,
	0, 268, 269, 270, 0, 271, 0, 272, 273, 0,
	274, 491, 275, 276, 278, 280, 277, 281, 282, 283,
	284, 492, 493, 0, 0, 0, 0, 0, 0, 0,
	285, 286, 287, 494, 288, 289, 0, 290, 0, 291,
	0, 0, 0, 292, 293, 0, 294, 495, 0, 496,
	295, 0, 296, 297, 298, 299, 497, 498, 499, 351,
	0, 300, 301, 0, 302, 303, 305, 0, 0, 0,
	304, 306, 313, 0, 0, 307, 500, 309, 308, 310,
	311, 312, 501, 0, 502, 0, 314, 0, 503, 0,
	315, 316, 317, 0, 318, 319, 0, 0, 320, 321,
	322, 323, 324, 0, 326, 325, 0, 327, 504, 0,
	328, 329, 0, 0, 330, 331, 0, 0, 332, 333,
	334, 0, 335, 336, 338, 340, 337, 339, 341, 343,
	344, 342, 0, 345, 346, 348, 0, 347, 0, 0,
	0, 349, 0, 505, 350, 506, 352, 353, 0, 354,
	355, 356, 0, 0, 358, 359, 360, 0, 0, 361,
	362, 507, 0, 363, 0, 508, 364, 357, 365, 366,
	367, 368, 369, 370, 371, 0, 372, 373, 509, 374,
	510, 375, 0, 376, 0, 377, 378, 379, 380, 381,
	382, 383, 511, 384, 385, 0, 386, 387, 388, 389,
	390, 0, 392, 393, 394, 391, 395, 396, 397, 398,
	0, 399, 0, 400, 401, 402, 403, 512, 404, 0,
	405, 559, 410, 411, 412, 413, 414, 415, 0, 421,
	422, 416, 418, 419, 420, 417, 423, 424, 425, 0,
	426, 406, 407, 427, 428, 0, 429, 430, 513, 431,
	432, 0, 433, 434, 435, 436, 408, 437, 441, 442,
	438, 439, 440, 514, 0, 444, 445, 443, 0, 446,
	447, 448, 449, 450, 279, 451, 0, 452, 515, 516,
	517, 518, 0, 459, 0, 453, 454, 519, 455, 520,
	0, 456, 457, 458, 0, 460, 461, 0, 0, 462,
	463, 464, 465, 466, 468, 0, 469, 0, 467, 470,
	471, 472, 521, 522, 523, 213, 474, 473, 524, 0,
	0, 0, 0, 475, 476, 525, 477, 478, 479, 0,
	0, 0, 219, 220, 221, 222, 223, 0, 224, 0,
	0, 0, 0, 0, 480, 0, 1885, 0, 0, 225,
	227, 226, 228, 229, 481, 482, 230, 483, 233, 231,
	232, 484, 0, 234, 235, 236, 237, 238, 239, 0,
	0, 240, 485, 486, 487, 0, 241, 488, 0, 0,
	0, 242, 243, 244, 245, 246, 247, 0, 249, 250,
	251, 248, 0, 252, 0, 253, 254, 255, 0, 0,
	256, 257, 0, 0, 0, 0, 0, 0, 0, 258,
	259, 260, 261, 262, 263, 489, 490, 0, 264, 0,
	266, 265, 0, 267, 0, 0, 268, 269, 270, 0,
	271, 0, 272, 273, 0, 274, 491, 275, 276, 278,
	280, 277, 281, 282, 283, 284, 492, 493, 0, 0,
	0, 0, 0, 0, 0, 285, 286, 287, 494, 288,
	289, 0, 290, 0, 291, 0, 0, 0, 292, 293,
	0, 294, 495, 0, 496, 295, 0, 296, 297, 298,
	299, 497, 498, 499, 351, 0, 300, 301, 0, 302,
	303, 305, 0, 0, 0, 304, 306, 313, 0, 0,
	307, 500, 309, 308, 310, 311, 312, 501, 0, 502,
	0, 314, 0, 503, 0, 315, 316, 317, 0, 318,
	319, 0, 0, 320, 321, 322, 323, 324, 0, 326,
	325, 0, 327, 504, 0, 328, 329, 0, 0, 330,
	331, 0, 0, 332, 333, 334, 0, 335, 336, 338,
	340, 337, 339, 341, 343, 344, 342, 0, 345, 346,
	348, 0, 347, 0, 0, 0, 349, 0, 505, 350,
	506, 352, 353, 0, 354, 355, 356, 0, 0, 358,
	359, 360, 0, 0, 361, 362, 507, 0, 363, 0,
	508, 364, 357, 365, 366, 367, 368, 369, 370, 371,
	0, 372, 373, 509, 374, 510, 375, 0, 376, 0,
	377, 378, 379, 380, 381, 382, 383, 511, 384, 385,
	0, 386, 387, 388, 389, 390, 0, 392, 393, 394,
	391, 395, 396, 397, 398, 0, 399, 0, 400, 401,
	402, 403, 512, 404, 0, 405, 409, 410, 411, 412,
	413, 414, 415, 0, 421, 422, 416, 418, 419, 420,
	417, 423, 424, 425, 0, 0, 406, 407, 427, 428,
	0, 429, 430, 513, 431, 432, 0, 433, 434, 435,
	436, 408, 437, 441, 442, 438, 439, 440, 514, 0,
	444, 445, 443, 0, 446, 447, 448, 449, 450, 279,
	451, 0, 452, 515, 516, 517, 518, 0, 459, 0,
	453, 454, 519, 455, 520, 0, 456, 457, 458, 0,
	460, 461, 0, 0, 462, 463, 464, 465, 466, 468,
	0, 469, 0, 467, 470, 471, 472, 521, 522, 523,
	213, 474, 473, 524, 0, 0, 0, 0, 475, 476,
	525, 477, 478, 479, 0, 0, 0, 219, 220, 221,
	222, 223, 0, 224, 0, 0, 0, 0, 0, 480,
	0, 0, 0, 0, 225, 227, 226, 228, 229, 481,
	482, 230, 483, 233, 231, 232, 484, 0, 234, 235,
	236, 237, 238, 239, 0, 0, 240, 485, 486, 487,
	0, 241, 488, 0, 0, 0, 242, 243, 244, 245,
	246, 247, 0, 249, 250, 251, 248, 0, 252, 0,
	253, 254, 255, 0, 0, 256, 257, 0, 0, 0,
	0, 0, 0, 0, 258, 259, 260, 261, 262, 263,
	489, 490, 0, 264, 0, 266, 265, 0, 267, 0,
	0, 268, 269, 270, 0, 271, 0, 272, 273, 0,
	274, 491, 275, 276, 278, 280, 277, 281, 282, 283,
	284, 492, 493, 0, 0, 0, 0, 0, 0, 0,
	285, 286, 287, 494, 288, 289, 0, 290, 0, 291,
	0, 0, 0, 292, 293, 0, 294, 495, 0, 496,
	295, 0, 296, 297, 298, 299, 1293, 498, 499, 351,
	0, 300, 301, 0, 302, 303, 305, 0, 0, 0,
	304, 306, 313, 0, 0, 307, 500, 309, 308, 310,
	311, 312, 501, 0, 502, 0, 314, 0, 503, 0,
	315, 316, 317, 0, 318, 319, 0, 0, 320, 321,
	322, 323, 324, 0, 326, 325, 0, 327, 504, 0,
	328, 329, 0, 0, 330, 331, 0, 0, 332, 333,
	334, 0, 335, 336, 338, 340, 337, 339, 341, 343,
	344, 342, 0, 345, 346, 348, 0, 347, 0, 0,
	0, 349, 0, 505, 350, 506, 352, 353, 0, 354,
	355, 356, 0, 0, 358, 359, 360, 0, 0, 361,
	362, 507, 0, 363, 0, 508, 364, 357, 365, 366,
	367, 368, 369, 370, 371, 0, 372, 373, 509, 374,
	510, 375, 0, 376, 0, 377, 378, 379, 380, 381,
	382, 383, 511, 384, 385, 0, 386, 387, 388, 389,
	390, 0, 392, 393, 394, 391, 395, 396, 397, 398,
	0, 399, 0, 400, 401, 402, 403, 512, 404, 0,
	405, 409, 410, 411, 412, 413, 414, 415, 0, 421,
	422, 416, 418, 419, 420, 417, 423, 424, 425, 0,
	426, 406, 407, 427, 428, 0, 429, 430, 513, 431,
	432, 0, 433, 434, 435, 436, 408, 437, 441, 442,
	438, 439, 440, 514, 0, 444, 445, 443, 0, 446,
	447, 448, 449, 450, 279, 451, 0, 452, 515, 516,
	517, 518, 0, 459, 0, 453, 454, 519, 455, 520,
	0, 456, 457, 458, 0, 460, 461, 0, 0, 462,
	463, 464, 465, 466, 468, 0, 469, 0, 467, 470,
	471, 472, 521, 522, 523, 213, 474, 473, 524, 0,
	0, 0, 0, 475, 476, 525, 477, 478, 479, 0,
	0, 0, 219, 220, 221, 222, 223, 0, 224, 0,
	0, 0, 0, 0, 480, 0, 0, 0, 0, 225,
	227, 226, 228, 229, 481, 482, 230, 483, 233, 231,
	232, 484, 0, 234, 235, 236, 237, 238, 239, 0,
	0, 240, 485, 486, 487, 0, 241, 488, 0, 0,
	0, 242, 243, 244, 245, 246, 247, 0, 249, 250,
	251, 248, 0, 252, 0, 253, 254, 255, 0, 0,
	256, 257, 0, 0, 0, 0, 0, 0, 0, 258,
	259, 260, 261, 262, 263, 489, 490, 0, 264, 0,
	266, 265, 0, 267, 0, 0, 268, 269, 270, 0,
	271, 0, 272, 273, 0, 274, 491, 275, 276, 278,
	280, 277, 281, 282, 283, 284, 492, 493, 0, 0,
	0, 0, 0, 0, 0, 285, 286, 287, 494, 288,
	289, 0, 290, 0, 291, 0, 0, 0, 292, 293,
	0, 294, 495, 0, 496, 295, 0, 296, 297, 298,
	299, 1233, 498, 499, 351, 0, 300, 301, 0, 302,
	303, 305, 0, 0, 0, 304, 306, 313, 0, 0,
	307, 500, 309, 308, 310, 311, 312, 501, 0, 502,
	0, 314, 0, 503, 0, 315, 316, 317, 0, 318,
	319, 0, 0, 320, 321, 322, 323, 324, 0, 326,
	325, 0, 327, 504, 0, 328, 329, 0, 0, 330,
	331, 0, 0, 332, 333, 334, 0, 335, 336, 338,
	340, 337, 339, 341, 343, 344, 342, 0, 345, 346,
	348, 0, 347, 0, 0, 0, 349, 0, 505, 350,
	506, 352, 353, 0, 354, 355, 356, 0, 0, 358,
	359, 360, 0, 0, 361, 362, 507, 0, 363, 0,
	508, 364, 357, 365, 366, 367, 368, 369, 370, 371,
	0, 372, 373, 509, 374, 510, 375, 0, 376, 0,
	377, 378, 379, 380, 381, 382, 383, 511, 384, 385,
	0, 386, 387, 388, 389, 390, 0, 392, 393, 394,
	391, 395, 396, 397, 398, 0, 399, 0, 400, 401,
	402, 403, 512, 404, 0, 405, 409, 410, 411, 412,
	413, 414, 415, 0, 421, 422, 416, 418, 419, 420,
	417, 423, 424, 425, 0, 426, 406, 407, 427, 428,
	0, 429, 430, 513, 431, 432, 0, 433, 434, 435,
	436, 408, 437, 441, 442, 438, 439, 440, 514, 0,
	444, 445, 443, 0, 446, 447, 448, 449, 450, 279,
	451, 0, 452, 515, 516, 517, 518, 0, 459, 0,
	453, 454, 519, 455, 520, 0, 456, 457, 458, 0,
	460, 461, 0, 0, 462, 463, 464, 465, 466, 468,
	0, 469, 0, 467, 470, 471, 472, 521, 522, 523,
	213, 474, 473, 524, 0, 0, 0, 0, 475, 476,
	525, 477, 478, 479, 0, 0, 0, 219, 220, 221,
	222, 223, 0, 224, 0, 0, 0, 0, 0, 480,
	0, 0, 0, 0, 225, 227, 226, 228, 229, 481,
	482, 230, 483, 233, 231, 232, 484, 0, 234, 235,
	236, 237, 238, 239, 0, 0, 240, 485, 486, 487,
	0, 241, 488, 0, 0, 0, 242, 243, 244, 245,
	246, 247, 0, 249, 250, 251, 248, 0, 252, 0,
	253, 254, 255, 0, 0, 256, 257, 0, 0, 0,
	0, 0, 0, 0, 258, 259, 260, 261, 262, 263,
	489, 490, 0, 264, 0, 266, 265, 0, 267, 0,
	0, 268, 269, 270, 0, 271, 0, 272, 273, 0,
	274, 491, 275, 276, 278, 280, 277, 281, 282, 283,
	284, 492, 493, 0, 0, 0, 0, 0, 0, 0,
	285, 286, 287, 494, 288, 289, 0, 290, 0, 291,
	0, 0, 0, 292, 293, 0, 294, 495, 0, 496,
	295, 0, 296, 297, 298, 299, 497, 498, 499, 351,
	0, 300, 301, 0, 302, 303, 305, 0, 0, 0,
	304, 306, 313, 0, 0, 307, 500, 309, 308, 310,
	311, 312, 501, 0, 502, 0, 314, 0, 503, 0,
	315, 316, 317, 0, 318, 319, 0, 0, 320, 321,
	322, 323, 324, 0, 326, 325, 0, 327, 504, 0,
	328, 329, 0, 0, 330, 331, 0, 0, 332, 333,
	334, 0, 335, 336, 338, 340, 337, 339, 341, 343,
	344, 342, 0, 345, 346, 348, 0, 347, 0, 0,
	0, 349, 0, 505, 350, 506, 352, 353, 0, 354,
	355, 356, 0, 0, 358, 359, 360, 0, 0, 361,
	362, 507, 0, 363, 0, 508, 364, 357, 365, 366,
	367, 368, 369, 370, 371, 0, 372, 373, 509, 374,
	510, 375, 0, 376, 0, 377, 378, 379, 380, 381,
	382, 383, 511, 991, 385, 0, 386, 387, 388, 389,
	390, 0, 392, 393, 394, 391, 395, 396, 397, 398,
	0, 399, 0, 400, 401, 402, 403, 512, 404, 0,
	405, 409, 410, 411, 412, 413, 414, 415, 0, 421,
	422, 416, 418, 419, 420, 417, 423, 424, 425, 0,
	426, 406, 407, 427, 428, 0, 429, 430, 513, 431,
	432, 0, 433, 434, 435, 436, 408, 437, 441, 442,
	438, 439, 440, 514, 0, 444, 445, 443, 0, 446,
	447, 448, 449, 450, 279, 451, 0, 452, 515, 516,
	517, 518, 0, 459, 0, 453, 454, 519, 455, 520,
	0, 456, 457, 458, 0, 460, 461, 0, 0, 462,
	463, 464, 465, 466, 468, 0, 469, 0, 467, 470,
	471, 472, 521, 522, 523, 213, 474, 473, 524, 0,
	0, 0, 0, 475, 476, 525, 477, 478, 479, 0,
	0, 0, 219, 220, 221, 222, 223, 0, 224, 0,
	0, 0, 0, 0, 480, 0, 0, 0, 0, 225,
	227, 226, 228, 229, 481, 482, 230, 483, 233, 231,
	232, 484, 0, 234, 235, 236, 237, 238, 239, 0,
	0, 240, 485, 486, 487, 0, 241, 488, 0, 0,
	0, 242, 243, 244, 245, 246, 247, 0, 249, 250,
	251, 248, 0, 252, 0, 253, 254, 255, 0, 0,
	256, 257, 0, 0, 0, 0, 0, 0, 0, 258,
	259, 260, 261, 262, 263, 489, 490, 0, 264, 0,
	266, 265, 0, 267, 0, 0, 268, 269, 270, 0,
	271, 0, 272, 273, 0, 274, 491, 275, 276, 278,
	280, 277, 281, 282, 283, 284, 492, 493, 0, 0,
	0, 0, 0, 0, 0, 285, 286, 287, 494, 288,
	289, 0, 290, 0, 291, 0, 0, 0, 292, 293,
	0, 294, 495, 0, 496, 0, 0, 296, 297, 298,
	299, 497, 498, 499, 351, 0, 300, 301, 0, 302,
	303, 305, 0, 0, 0, 304, 306, 313, 0, 0,
	307, 500, 309, 308, 310, 311, 312, 501, 0, 502,
	0, 314, 0, 503, 0, 315, 316, 317, 0, 318,
	319, 0, 0, 320, 321, 322, 323, 324, 0, 326,
	325, 0, 327, 504, 0, 328, 329, 0, 0, 330,
	331, 0, 0, 332, 333, 334, 0, 335, 336, 338,
	340, 337, 339, 341, 343, 344, 342, 0, 345, 346,
	348, 0, 347, 0, 0, 0, 349, 0, 505, 350,
	506, 352, 353, 0, 354, 355, 356, 0, 0, 358,
	359, 360, 0, 0, 361, 362, 507, 0, 363, 0,
	508, 364, 357, 365, 366, 0, 368, 369, 370, 371,
	0, 372, 373, 509, 374, 510, 375, 0, 376, 0,
	377, 378, 379, 380, 0, 382, 383, 511, 384, 385,
	0, 386, 387, 388, 389, 390, 0, 392, 393, 394,
	391, 395, 396, 397, 398, 0, 399, 0, 400, 401,
	402, 403, 512, 0, 0, 405, 409, 410, 411, 412,
	413, 414, 415, 0, 421, 422, 416, 418, 419, 420,
	417, 423, 424, 425, 0, 426, 406, 407, 427, 428,
	0, 429, 430, 513, 431, 432, 0, 433, 434, 435,
	436, 408, 437, 441, 442, 438, 439, 440, 514, 0,
	444, 445, 443, 0, 446, 447, 448, 449, 450, 279,
	451, 0, 452, 515, 516, 517, 518, 0, 459, 0,
	453, 454, 519, 455, 520, 0, 456, 457, 458, 0,
	460, 461, 0, 0, 462, 463, 464, 465, 466, 468,
	0, 469, 0, 467, 470, 471, 472, 521, 522, 523,
	0, 474, 473, 524, 0, 0, 0, 0, 475, 476,
	525, 477, 478, 479, 1470, 1471, 0, 1503, 1504, 1505,
	1513, 1514, 1515, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1506, 1501, 0, 0, 0, 0, 0,
	0, 1473, 0, 0, 0, 0, 1519, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1470, 1471, 0, 1503, 1504, 1505, 1513, 1514, 1515,
	1472, 0, 0, 0, 0, 0, 0, 0, 0, 1492,
	1506, 1501, 0, 0, 0, 0, 1489, 0, 1473, 0,
	0, 0, 0, 1519, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1472, 0, 0,
	0, 0, 0, 0, 0, 0, 1492, 0, 0, 0,
	0, 0, 0, 1489, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1495, 1496, 1497, 1498, 0, 0, 0,
	0, 0, 0, 1478, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1510, 0, 0,
	1520, 0, 0, 0, 1500, 1502, 0, 0, 0, 0,
	1495, 1496, 1497, 1498, 0, 0, 0, 0, 0, 0,
	1478, 0, 0, 0, 1516, 0, 1517, 0, 0, 0,
	0, 0, 0, 1487, 1488, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1510, 0, 0, 1520, 0, 1508,
	0, 1500, 1502, 0, 0, 0, 0, 0, 1493, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1516, 0, 1517, 0, 0, 0, 1518, 0, 0,
	1487, 1488, 0, 0, 0, 0, 1470, 1471, 0, 0,
	0, 0, 0, 0, 1507, 0, 1508, 0, 0, 0,
	0, 0, 0, 0, 0, 1493, 1501, 0, 0, 0,
	0, 0, 0, 1473, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1518, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1499, 0,
	0, 1507, 1472, 0, 0, 0, 0, 0, 0, 0,
	0, 1492, 0, 0, 0, 0, 1494, 0, 1489, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1470, 1471, 0, 1503, 1504, 1505, 1513, 1514,
	1515, 0, 1511, 0, 0, 1499, 0, 0, 0, 0,
	0, 1506, 1501, 0, 0, 0, 0, 0, 0, 1473,
	0, 0, 0, 1494, 1519, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1495, 1496, 1497, 1498, 0,
	0, 0, 0, 0, 0, 1478, 0, 0, 1472, 1511,
	0, 0, 0, 0, 0, 0, 0, 1492, 0, 0,
	0, 0, 0, 0, 1489, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1500, 1502, 0, 0,
	0, 0, 0, 0, 0, 0, 1509, 0, 0, 1484,
	1485, 1491, 1512, 1490, 1486, 0, 1483, 1481, 1482, 1474,
	1475, 1476, 1477, 1479, 1480, 1487, 1488, 0, 0, 0,
	0, 0, 0, 2950, 0, 0, 0, 0, 0, 0,
	0, 1495, 1496, 1497, 1498, 0, 0, 0, 0, 0,
	1493, 1478, 0, 1509, 0, 0, 1484, 1485, 1491, 1512,
	1490, 1486, 0, 1483, 1481, 1482, 1474, 1475, 1476, 1477,
	1479, 1480, 0, 0, 0, 1510, 0, 0, 1520, 0,
	2633, 0, 1500, 1502, 0, 0, 0, 0, 1470, 1471,
	0, 0, 0, 0, 1513, 1514, 1515, 0, 0, 0,
	0, 0, 1516, 0, 1517, 0, 0, 0, 1501, 0,
	0, 1487, 1488, 0, 0, 1473, 0, 0, 0, 0,
	1519, 0, 0, 0, 0, 0, 0, 1508, 0, 0,
	1499, 0, 0, 0, 0, 0, 1493, 0, 0, 0,
	0, 0, 0, 0, 1472, 0, 0, 0, 1494, 0,
	0, 0, 0, 1492, 0, 1518, 0, 0, 0, 0,
	1489, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1507, 0, 0, 1470, 1471, 0, 1503, 1504,
	1505, 1513, 1514, 1515, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1506, 1501, 0, 0, 0, 0,
	0, 0, 1473, 0, 0, 0, 0, 1519, 0, 0,
	0, 0, 0, 0, 0, 0, 1499, 1495, 1496, 1497,
	1498, 0, 0, 0, 0, 0, 0, 1478, 0, 0,
	0, 1472, 0, 0, 1494, 0, 0, 0, 0, 0,
	1492, 0, 0, 0, 0, 0, 0, 1489, 0, 0,
	0, 1510, 0, 0, 1520, 0, 0, 0, 1500, 1502,
	1511, 0, 0, 0, 0, 1490, 1486, 0, 1483, 1481,
	1482, 1474, 1475, 1476, 1477, 1479, 1480, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1487, 1488, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1508, 1495, 1496, 1497, 1498, 0, 0,
	0, 0, 1493, 0, 1478, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1510, 0,
	0, 1520, 0, 0, 1509, 1500, 1502, 1484, 1485, 1491,
	1512, 1490, 1486, 0, 1483, 1481, 1482, 1474, 1475, 1476,
	1477, 1479, 1480, 0, 0, 1516, 0, 1517, 0, 0,
	0, 2632, 0, 0, 1487, 1488, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1508, 0, 1499, 0, 0, 0, 0, 0, 0, 1493,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1494, 0, 0, 0, 0, 0, 0, 0, 1518, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1507, 1511, 0, 1470, 1471,
	0, 1503, 1504, 1505, 1513, 1514, 1515, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1506, 1501, 0,
	0, 0, 0, 0, 0, 1473, 0, 0, 0, 0,
	1519, 0, 0, 0, 0, 0, 0, 0, 0, 1499,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1472, 0, 0, 1494, 0, 0,
	0, 0, 0, 1492, 0, 0, 0, 0, 0, 0,
	1489, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1509, 0, 0, 1511, 0, 0, 1512, 1490, 1486, 0,
	1483, 1481, 1482, 1474, 1475, 1476, 1477, 1479, 1480, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1495, 1496, 1497,
	1498, 0, 0, 0, 0, 0, 0, 1478, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1510, 0, 0, 1520, 0, 0, 1509, 1500, 1502,
	1484, 1485, 1491, 1512, 1490, 1486, 0, 1483, 1481, 1482,
	1474, 1475, 1476, 1477, 1479, 1480, 0, 0, 1516, 0,
	1517, 0, 0, 0, 2629, 0, 0, 1487, 1488, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1508, 0, 0, 0, 0, 0, 0,
	0, 0, 1493, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1518, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1507, 0,
	0, 1470, 1471, 0, 1503, 1504, 1505, 1513, 1514, 1515,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1506, 1501, 0, 0, 0, 0, 0, 0, 1473, 0,
	0, 0, 0, 1519, 0, 0, 0, 0, 0, 0,
	0, 0, 1499, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1472, 0, 0,
	1494, 0, 0, 0, 0, 0, 1492, 0, 0, 0,
	0, 0, 0, 1489, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1511, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1495, 1496, 1497, 1498, 0, 0, 0, 0, 0, 0,
	1478, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1510, 0, 0, 1520, 0, 0,
	1509, 1500, 1502, 1484, 1485, 1491, 1512, 1490, 1486, 0,
	1483, 1481, 1482, 1474, 1475, 1476, 1477, 1479, 1480, 0,
	0, 1516, 0, 1517, 0, 0, 0, 2628, 0, 0,
	1487, 1488, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1508, 0, 0, 0,
	0, 0, 0, 0, 0, 1493, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1518, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1507, 0, 0, 1470, 1471, 0, 1503, 1504, 1505,
	1513, 1514, 1515, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1506, 1501, 0, 0, 0, 0, 0,
	0, 1473, 0, 0, 0, 0, 1519, 0, 0, 0,
	0, 0, 0, 0, 0, 1499, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1472, 0, 0, 1494, 0, 0, 0, 0, 0, 1492,
	0, 0, 0, 0, 0, 0, 1489, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1511,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1495, 1496, 1497, 1498, 0, 0, 0,
	0, 0, 0, 1478, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1510, 0, 0,
	1520, 0, 0, 1509, 1500, 1502, 1484, 1485, 1491, 1512,
	1490, 1486, 0, 1483, 1481, 1482, 1474, 1475, 1476, 1477,
	1479, 1480, 0, 0, 1516, 0, 1517, 0, 0, 0,
	2627, 0, 0, 1487, 1488, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1508,
	0, 0, 0, 0, 0, 0, 0, 0, 1493, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1518, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1507, 0, 0, 1470, 1471, 0,
	1503, 1504, 1505, 1513, 1514, 1515, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1506, 1501, 0, 0,
	0, 0, 0, 0, 1473, 0, 0, 0, 0, 1519,
	0, 0, 0, 0, 0, 0, 0, 0, 1499, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1472, 0, 0, 1494, 0, 0, 0,
	0, 0, 1492, 0, 0, 0, 0, 0, 0, 1489,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1511, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1495, 1496, 1497, 1498,
	0, 0, 0, 0, 0, 0, 1478, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1510, 0, 0, 1520, 0, 0, 1509, 1500, 1502, 1484,
	1485, 1491, 1512, 1490, 1486, 0, 1483, 1481, 1482, 1474,
	1475, 1476, 1477, 1479, 1480, 0, 0, 1516, 0, 1517,
	0, 0, 0, 2116, 0, 0, 1487, 1488, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1508, 0, 0, 0, 0, 0, 0, 0,
	0, 1493, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1518, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1507, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1470, 1471, 0, 1503, 1504,
	1505, 1513, 1514, 1515, 0, 0, 0, 0, 0, 0,
	0, 1499, 0, 0, 1506, 1501, 0, 0, 0, 0,
	0, 0, 1473, 0, 0, 0, 0, 1519, 0, 1494,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1470, 1471, 0, 1503, 1504, 1505, 1513, 1514,
	1515, 1472, 0, 0, 0, 1511, 0, 0, 0, 0,
	1492, 1506, 1501, 0, 0, 0, 0, 1489, 0, 1473,
	0, 0, 0, 0, 1519, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1472, 0,
	0, 0, 0, 0, 0, 0, 0, 1492, 0, 0,
	0, 0, 0, 0, 1489, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1495, 1496, 1497, 1498, 0, 0,
	0, 0, 0, 0, 1478, 0, 0, 0, 0, 1509,
	0, 0, 1484, 1485, 1491, 1512, 1490, 1486, 0, 1483,
	1481, 1482, 1474, 1475, 1476, 1477, 1479, 1480, 1510, 0,
	0, 1520, 3575, 0, 0, 1500, 1502, 0, 0, 0,
	0, 1495, 1496, 1497, 1498, 0, 0, 0, 0, 0,
	0, 1478, 0, 0, 0, 1516, 0, 1517, 0, 0,
	0, 0, 0, 0, 1487, 1488, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1510, 0, 0, 1520, 0,
	1508, 0, 1500, 1502, 0, 0, 0, 0, 0, 1493,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1516, 0, 1517, 0, 0, 0, 1518, 0,
	0, 1487, 1488, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1507, 0, 1508, 0, 0,
	0, 0, 0, 0, 0, 0, 1493, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1518, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1499,
	0, 0, 1507, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1494, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1470, 1471, 0, 1503, 1504, 1505, 1513, 1514, 1515, 0,
	0, 0, 0, 1511, 0, 0, 1499, 0, 0, 1506,
	1501, 0, 0, 0, 0, 0, 0, 1473, 0, 0,
	0, 0, 1519, 0, 1494, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1472, 0, 0, 0,
	1511, 0, 0, 0, 0, 1492, 0, 0, 0, 0,
	0, 0, 1489, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1509, 0, 0,
	1484, 1485, 1491, 1512, 1490, 1486, 0, 1483, 1481, 1482,
	1474, 1475, 1476, 1477, 1479, 1480, 0, 0, 0, 0,
	3571, 0, 0, 0, 0, 0, 0, 0, 0, 1495,
	1496, 1497, 1498, 0, 0, 0, 0, 0, 0, 1478,
	0, 0, 0, 0, 1509, 0, 0, 1484, 1485, 1491,
	1512, 1490, 1486, 0, 1483, 1481, 1482, 1474, 1475, 1476,
	1477, 1479, 1480, 1510, 0, 0, 1520, 3492, 0, 0,
	1500, 1502, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1516, 0, 1517, 0, 0, 0, 0, 0, 0, 1487,
	1488, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1508, 0, 0, 0, 0,
	0, 0, 0, 0, 1493, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1518, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1507, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1470, 1471,
	0, 1503, 1504, 1505, 1513, 1514, 1515, 0, 0, 0,
	0, 0, 0, 0, 1499, 0, 0, 1506, 1501, 0,
	0, 0, 0, 0, 0, 1473, 0, 0, 0, 0,
	1519, 0, 1494, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1470, 1471, 0, 1503, 1504,
	1505, 1513, 1514, 1515, 1472, 0, 0, 0, 1511, 0,
	0, 0, 0, 1492, 1506, 1501, 0, 0, 0, 0,
	1489, 0, 1473, 0, 0, 0, 0, 1519, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1472, 0, 0, 0, 0, 0, 0, 0, 0,
	1492, 0, 0, 0, 0, 0, 0, 1489, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1495, 1496, 1497,
	1498, 0, 0, 0, 0, 0, 0, 1478, 0, 0,
	0, 0, 1509, 0, 0, 1484, 1485, 1491, 1512, 1490,
	1486, 0, 1483, 1481, 1482, 1474, 1475, 1476, 1477, 1479,
	1480, 1510, 0, 0, 1520, 3491, 0, 0, 1500, 1502,
	0, 0, 0, 0, 1495, 1496, 1497, 1498, 0, 0,
	0, 0, 0, 0, 1478, 0, 0, 0, 1516, 0,
	1517, 0, 0, 0, 0, 0, 0, 1487, 1488, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1510, 0,
	0, 1520, 0, 1508, 0, 1500, 1502, 0, 0, 0,
	0, 0, 1493, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1516, 0, 1517, 0, 0,
	0, 1518, 0, 0, 1487, 1488, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1507, 0,
	1508, 0, 0, 0, 0, 0, 0, 0, 0, 1493,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1518, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1499, 0, 0, 1507, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1494, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1470, 1471, 0, 1503, 1504, 1505, 1513,
	1514, 1515, 0, 0, 0, 0, 1511, 0, 0, 1499,
	0, 0, 1506, 1501, 0, 0, 0, 0, 0, 0,
	1473, 0, 0, 0, 0, 1519, 0, 1494, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1472,
	0, 0, 0, 1511, 0, 0, 0, 0, 1492, 0,
	0, 0, 0, 0, 0, 1489, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1509, 0, 0, 1484, 1485, 1491, 1512, 1490, 1486, 0,
	1483, 1481, 1482, 1474, 1475, 1476, 1477, 1479, 1480, 0,
	0, 0, 0, 3376, 0, 0, 0, 0, 0, 0,
	0, 0, 1495, 1496, 1497, 1498, 0, 0, 0, 0,
	0, 0, 1478, 0, 0, 0, 0, 1509, 0, 0,
	1484, 1485, 1491, 1512, 1490, 1486, 0, 1483, 1481, 1482,
	1474, 1475, 1476, 1477, 1479, 1480, 1510, 0, 0, 1520,
	3273, 0, 0, 1500, 1502, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1516, 0, 1517, 0, 0, 0, 0,
	0, 0, 1487, 1488, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1508, 0,
	0, 0, 0, 0, 0, 0, 0, 1493, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1518, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1507, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1470, 1471, 0, 1503, 1504, 1505, 1513, 1514, 1515,
	0, 0, 0, 0, 0, 0, 0, 1499, 0, 0,
	1506, 1501, 0, 0, 0, 0, 0, 0, 1473, 0,
	0, 0, 0, 1519, 0, 1494, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1470, 1471,
	0, 1503, 1504, 1505, 1513, 1514, 1515, 1472, 0, 0,
	0, 1511, 0, 0, 0, 0, 1492, 1506, 1501, 0,
	0, 0, 0, 1489, 0, 1473, 0, 0, 0, 0,
	1519, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1472, 0, 0, 0, 0, 0,
	0, 0, 0, 1492, 0, 0, 0, 0, 0, 0,
	1489, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1495, 1496, 1497, 1498, 0, 0, 0, 0, 0, 0,
	1478, 0, 0, 0, 0, 1509, 0, 0, 1484, 1485,
	1491, 1512, 1490, 1486, 0, 1483, 1481, 1482, 1474, 1475,
	1476, 1477, 1479, 1480, 1510, 0, 0, 1520, 3226, 0,
	0, 1500, 1502, 0, 0, 0, 0, 1495, 1496, 1497,
	1498, 0, 0, 0, 0, 0, 0, 1478, 0, 0,
	0, 1516, 0, 1517, 0, 0, 0, 0, 0, 0,
	1487, 1488, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1510, 0, 0, 1520, 0, 1508, 0, 1500, 1502,
	0, 0, 0, 0, 0, 1493, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1516, 0,
	1517, 0, 0, 0, 1518, 0, 0, 1487, 1488, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1507, 0, 1508, 0, 0, 0, 0, 0, 0,
	0, 0, 1493, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1518, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1499, 0, 0, 1507, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1494, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1470, 1471, 0, 1503,
	1504, 1505, 1513, 1514, 1515, 0, 0, 0, 0, 1511,
	0, 0, 1499, 0, 0, 1506, 1501, 0, 0, 0,
	0, 0, 0, 1473, 0, 0, 0, 0, 1519, 0,
	1494, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1472, 0, 0, 0, 1511, 0, 0, 0,
	0, 1492, 0, 0, 0, 0, 0, 0, 1489, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1509, 0, 0, 1484, 1485, 1491, 1512,
	1490, 1486, 0, 1483, 1481, 1482, 1474, 1475, 1476, 1477,
	1479, 1480, 0, 0, 0, 0, 3225, 0, 0, 0,
	0, 0, 0, 0, 0, 1495, 1496, 1497, 1498, 0,
	0, 0, 0, 0, 0, 1478, 0, 0, 0, 0,
	1509, 0, 0, 1484, 1485, 1491, 1512, 1490, 1486, 0,
	1483, 1481, 1482, 1474, 1475, 1476, 1477, 1479, 1480, 1510,
	0, 0, 1520, 3224, 0, 0, 1500, 1502, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1516, 0, 1517, 0,
	0, 0, 0, 0, 0, 1487, 1488, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1508, 0, 0, 0, 0, 0, 0, 0, 0,
	1493, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1518,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1507, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1470, 1471, 0, 1503, 1504, 1505,
	1513, 1514, 1515, 0, 0, 0, 0, 0, 0, 0,
	1499, 0, 0, 1506, 1501, 0, 0, 0, 0, 0,
	0, 1473, 0, 0, 0, 0, 1519, 0, 1494, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1470, 1471, 0, 1503, 1504, 1505, 1513, 1514, 1515,
	1472, 0, 0, 0, 1511, 0, 0, 0, 0, 1492,
	1506, 1501, 0, 0, 0, 0, 1489, 0, 1473, 0,
	0, 0, 0, 1519, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1472, 0, 0,
	0, 0, 0, 0, 0, 0, 1492, 0, 0, 0,
	0, 0, 0, 1489, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1495, 1496, 1497, 1498, 0, 0, 0,
	0, 0, 0, 1478, 0, 0, 0, 0, 1509, 0,
	0, 1484, 1485, 1491, 1512, 1490, 1486, 0, 1483, 1481,
	1482, 1474, 1475, 1476, 1477, 1479, 1480, 1510, 0, 0,
	1520, 2985, 0, 0, 1500, 1502, 0, 0, 0, 0,
	1495, 1496, 1497, 1498, 0, 0, 0, 0, 0, 0,
	1478, 0, 0, 0, 1516, 0, 1517, 0, 0, 0,
	0, 0, 0, 1487, 1488, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1510, 0, 0, 1520, 0, 1508,
	0, 1500, 1502, 0, 0, 0, 0, 0, 1493, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1516, 0, 1517, 0, 0, 0, 1518, 0, 0,
	1487, 1488, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1507, 0, 1508, 0, 0, 0,
	0, 0, 0, 0, 0, 1493, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1518, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1499, 0,
	0, 1507, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1494, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1470,
	1471, 0, 1503, 1504, 1505, 1513, 1514, 1515, 0, 0,
	0, 0, 1511, 0, 0, 1499, 0, 0, 1506, 1501,
	0, 0, 0, 0, 0, 0, 1473, 0, 0, 0,
	0, 1519, 0, 1494, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1472, 0, 0, 0, 1511,
	0, 0, 0, 0, 1492, 0, 0, 0, 0, 0,
	0, 1489, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1509, 0, 0, 1484,
	1485, 1491, 1512, 1490, 1486, 0, 1483, 1481, 1482, 1474,
	1475, 1476, 1477, 1479, 1480, 0, 0, 0, 0, 2625,
	0, 0, 0, 0, 0, 0, 0, 0, 1495, 1496,
	1497, 1498, 0, 0, 0, 0, 0, 0, 1478, 0,
	0, 0, 0, 1509, 0, 0, 1484, 1485, 1491, 1512,
	1490, 1486, 0, 1483, 1481, 1482, 1474, 1475, 1476, 1477,
	1479, 1480, 1510, 0, 0, 1520, 2624, 0, 0, 1500,
	1502, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1516,
	0, 1517, 0, 0, 0, 0, 0, 0, 1487, 1488,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1508, 0, 0, 0, 0, 0,
	0, 0, 0, 1493, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1518, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1507,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1470, 1471, 0,
	1503, 1504, 1505, 1513, 1514, 1515, 0, 0, 0, 0,
	0, 0, 0, 1499, 0, 0, 1506, 1501, 0, 0,
	0, 0, 0, 0, 1473, 0, 0, 0, 0, 1519,
	0, 1494, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1470, 1471, 0, 1503, 1504, 1505,
	1513, 1514, 1515, 1472, 0, 0, 0, 1511, 0, 0,
	0, 0, 1492, 1506, 1501, 0, 0, 0, 0, 1489,
	0, 1473, 0, 0, 0, 0, 1519, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1472, 0, 0, 0, 0, 0, 0, 0, 0, 1492,
	0, 0, 0, 0, 0, 0, 1489, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1495, 1496, 1497, 1498,
	0, 0, 0, 0, 0, 0, 1478, 0, 0, 0,
	0, 1509, 0, 0, 1484, 1485, 1491, 1512, 1490, 1486,
	0, 1483, 1481, 1482, 1474, 1475, 1476, 1477, 1479, 1480,
	1510, 0, 0, 1520, 2623, 0, 0, 1500, 1502, 0,
	0, 0, 0, 1495, 1496, 1497, 1498, 0, 0, 0,
	0, 0, 0, 1478, 3679, 0, 0, 1516, 0, 1517,
	0, 0, 0, 0, 0, 0, 1487, 1488, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1510, 0, 0,
	1520, 0, 1508, 0, 1500, 1502, 0, 0, 0, 0,
	0, 1493, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1516, 0, 1517, 0, 0, 0,
	1518, 0, 0, 1487, 1488, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1507, 0, 1508,
	0, 0, 0, 0, 0, 0, 0, 0, 1493, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1518, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1499, 0, 0, 1507, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1494,
	0, 0, 0, 0, 0, 0, 3678, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1511, 0, 0, 1499, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1494, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1511, 0, 0, 1470, 1471, 0, 1503, 1504,
	1505, 1513, 1514, 1515, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1506, 1501, 0, 0, 0, 0,
	2551, 0, 1473, 0, 0, 0, 0, 1519, 0, 1509,
	0, 0, 1484, 1485, 1491, 1512, 1490, 1486, 0, 1483,
	1481, 1482, 1474, 1475, 1476, 1477, 1479, 1480, 0, 0,
	0, 1472, 2622, 0, 0, 0, 0, 0, 0, 0,
	1492, 0, 0, 0, 0, 0, 0, 1489, 0, 0,
	0, 0, 0, 0, 0, 0, 1509, 0, 0, 1484,
	1485, 1491, 1512, 1490, 1486, 0, 1483, 1481, 1482, 1474,
	1475, 1476, 1477, 1479, 1480, 2552, 0, 0, 0, 0,
	0, 0, 0, 1470, 1471, 0, 1503, 1504, 1505, 1513,
	1514, 1515, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1506, 1501, 1495, 1496, 1497, 1498, 0, 0,
	1473, 0, 0, 0, 1478, 1519, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1510, 1472,
	0, 1520, 0, 0, 0, 1500, 1502, 0, 1492, 0,
	0, 0, 0, 0, 0, 1489, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1516, 0, 1517, 0, 0,
	0, 0, 0, 0, 1487, 1488, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1508, 0, 0, 0, 0, 0, 0, 0, 0, 1493,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1495, 1496, 1497, 1498, 0, 0, 1518, 0,
	0, 0, 1478, 0, 2672, 0, 0, 2671, 0, 0,
	0, 0, 0, 0, 0, 1507, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1510, 0, 0, 1520,
	0, 0, 0, 1500, 1502, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1516, 0, 1517, 0, 0, 0, 1499,
	0, 0, 1487, 1488, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1494, 1508, 0,
	0, 0, 0, 0, 0, 0, 0, 1493, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1511, 0, 0, 1518, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1507, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2226, 0, 0, 0, 0, 0,
	0, 1470, 1471, 0, 1503, 1504, 1505, 1513, 1514, 1515,
	0, 0, 0, 0, 0, 0, 0, 1499, 0, 0,
	1506, 1501, 0, 0, 0, 2225, 0, 0, 1473, 0,
	0, 0, 0, 1519, 0, 1494, 0, 1509, 0, 0,
	1484, 1485, 1491, 1512, 1490, 1486, 0, 1483, 1481, 1482,
	1474, 1475, 1476, 1477, 1479, 1480, 0, 1472, 0, 0,
	0, 1511, 0, 0, 0, 0, 1492, 0, 0, 0,
	0, 0, 0, 1489, 0, 0, 0, 0, 0, 0,
	0, 0, 1470, 1471, 0, 1503, 1504, 1505, 1513, 1514,
	1515, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1506, 1501, 0, 0, 0, 0, 0, 0, 1473,
	0, 0, 0, 0, 1519, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1495, 1496, 1497, 1498, 0, 0, 0, 0, 1472, 0,
	1478, 0, 0, 0, 0, 1509, 0, 1492, 1484, 1485,
	1491, 1512, 1490, 1486, 1489, 1483, 1481, 1482, 1474, 1475,
	1476, 1477, 1479, 1480, 1510, 0, 0, 1520, 0, 0,
	0, 1500, 1502, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1516, 0, 1517, 0, 0, 0, 0, 0, 0,
	1487, 1488, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1495, 1496, 1497, 1498, 0, 1508, 0, 0, 0,
	0, 1478, 0, 0, 0, 1493, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1518, 1510, 0, 0, 1520, 0,
	0, 0, 1500, 1502, 0, 0, 0, 0, 0, 0,
	0, 1507, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1516, 0, 1517, 0, 0, 0, 0, 0,
	0, 1487, 1488, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1508, 0, 0,
	0, 0, 0, 0, 0, 1499, 1493, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1494, 0, 1518, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1507, 832, 0, 0, 0, 0, 0, 1511,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1470, 1471, 0, 1503, 1504, 1505, 1513, 1514, 1515, 0,
	0, 0, 0, 0, 0, 0, 1499, 0, 0, 1506,
	1501, 0, 0, 0, 0, 0, 0, 1473, 0, 0,
	0, 0, 1519, 0, 1494, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1472, 0, 0, 0,
	1511, 0, 0, 1509, 0, 1492, 1484, 1485, 1491, 1512,
	1490, 1486, 1489, 1483, 1481, 1482, 1474, 1475, 1476, 1477,
	1479, 1480, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1470, 1471,
	0, 1503, 1504, 1505, 1513, 1514, 1515, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1506, 1501, 1495,
	1496, 1497, 1498, 0, 0, 1473, 0, 0, 0, 1478,
	1519, 0, 0, 0, 1509, 0, 0, 1484, 1485, 1491,
	1512, 1490, 1486, 0, 1483, 1481, 1482, 1474, 1475, 1476,
	1477, 1479, 1480, 1510, 1472, 0, 1520, 0, 0, 0,
	1500, 1502, 0, 1492, 0, 0, 0, 0, 0, 0,
	1489, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1516, 0, 1517, 0, 0, 0, 0, 0, 0, 1487,
	1488, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1508, 0, 0, 0, 0,
	0, 0, 0, 0, 1493, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1495, 1496, 1497,
	1498, 0, 0, 1518, 0, 0, 0, 1478, 0, 0,
	0, 0, 2678, 0, 0, 0, 0, 0, 0, 0,
	1507, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1510, 0, 0, 1520, 0, 0, 0, 1500, 1502,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1516, 0,
	1517, 0, 0, 0, 1499, 0, 0, 1487, 1488, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1494, 1508, 0, 0, 0, 0, 0, 0,
	0, 0, 1493, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1511, 0,
	0, 1518, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1507, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2964,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1470, 1471, 0, 1503,
	1504, 1505, 1513, 1514, 1515, 0, 0, 0, 0, 0,
	0, 0, 1499, 0, 0, 1506, 1501, 0, 0, 0,
	2673, 0, 0, 1473, 0, 0, 0, 0, 1519, 0,
	1494, 0, 1509, 0, 0, 1484, 1485, 1491, 1512, 1490,
	1486, 0, 1483, 1481, 1482, 1474, 1475, 1476, 1477, 1479,
	1480, 0, 1472, 0, 0, 0, 1511, 0, 0, 0,
	0, 1492, 0, 0, 0, 0, 0, 0, 1489, 0,
	0, 0, 0, 0, 0, 0, 0, 1470, 1471, 0,
	1503, 1504, 1505, 1513, 1514, 1515, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1506, 1501, 0, 0,
	0, 0, 0, 0, 1473, 0, 0, 0, 0, 1519,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1495, 1496, 1497, 1498, 0,
	0, 0, 0, 1472, 0, 1478, 0, 0, 0, 0,
	1509, 0, 1492, 1484, 1485, 1491, 1512, 1490, 1486, 1489,
	1483, 1481, 1482, 1474, 1475, 1476, 1477, 1479, 1480, 1510,
	0, 0, 1520, 0, 0, 0, 1500, 1502, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1516, 0, 1517, 0,
	0, 0, 0, 0, 0, 1487, 1488, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1495, 1496, 1497, 1498,
	0, 1508, 0, 0, 0, 0, 1478, 0, 0, 0,
	1493, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1518,
	1510, 0, 0, 1520, 0, 0, 0, 1500, 1502, 0,
	0, 0, 0, 0, 0, 0, 1507, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1516, 0, 1517,
	0, 0, 0, 0, 0, 0, 1487, 1488, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1508, 0, 0, 0, 0, 0, 0, 0,
	1499, 1493, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1494, 0,
	1518, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1507, 0, 0,
	0, 0, 0, 0, 1511, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2640, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1470, 1471, 0, 1503, 1504,
	1505, 1513, 1514, 1515, 0, 0, 0, 0, 0, 0,
	0, 1499, 0, 0, 1506, 1501, 0, 0, 0, 2626,
	0, 0, 1473, 0, 0, 0, 0, 1519, 0, 1494,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1472, 0, 0, 0, 1511, 0, 0, 1509, 0,
	1492, 1484, 1485, 1491, 1512, 1490, 1486, 1489, 1483, 1481,
	1482, 1474, 1475, 1476, 1477, 1479, 1480, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1470, 1471, 0, 1503, 1504, 1505, 1513,
	1514, 1515, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1506, 1501, 1495, 1496, 1497, 1498, 0, 0,
	1473, 0, 0, 0, 1478, 1519, 0, 0, 0, 1509,
	0, 0, 1484, 1485, 1491, 1512, 1490, 1486, 0, 1483,
	1481, 1482, 1474, 1475, 1476, 1477, 1479, 1480, 1510, 1472,
	0, 1520, 0, 0, 0, 1500, 1502, 0, 1492, 0,
	0, 0, 0, 0, 0, 1489, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1516, 0, 1517, 0, 0,
	0, 0, 0, 0, 1487, 1488, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1508, 0, 0, 0, 0, 0, 0, 0, 0, 1493,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1495, 1496, 1497, 1498, 0, 0, 1518, 0,
	0, 0, 1478, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1507, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1510, 0, 0, 1520,
	0, 0, 0, 1500, 1502, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1516, 0, 1517, 0, 0, 0, 1499,
	0, 0, 1487, 1488, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1494, 1508, 0,
	0, 0, 0, 0, 0, 0, 0, 1493, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1511, 0, 0, 1518, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1507, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1470, 1471, 0, 1503, 1504, 1505, 1513, 1514, 1515,
	0, 0, 0, 0, 0, 0, 0, 1499, 0, 0,
	1506, 1501, 0, 0, 0, 0, 0, 0, 1473, 0,
	0, 0, 0, 1519, 0, 1494, 0, 1509, 0, 0,
	1484, 1485, 1491, 1512, 1490, 1486, 0, 1483, 1481, 1482,
	1474, 1475, 1476, 1477, 1479, 1480, 0, 1472, 0, 0,
	0, 1511, 0, 0, 0, 0, 1492, 0, 0, 0,
	0, 0, 0, 1489, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1495, 1496, 1497, 1498, 0, 0, 0, 0, 0, 0,
	1478, 0, 0, 0, 0, 1509, 0, 0, 1484, 1485,
	1491, 1512, 1490, 1486, 0, 1483, 1481, 1482, 1474, 1475,
	1476, 1477, 1479, 1480, 1510, 0, 0, 1520, 0, 0,
	0, 1500, 1502, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 125, 0, 0, 0,
	0, 1516, 57, 1517, 0, 0, 0, 0, 0, 0,
	1487, 1488, 0, 0, 0, 0, 58, 120, 0, 0,
	0, 0, 0, 0, 0, 0, 1508, 0, 0, 0,
	0, 62, 0, 0, 0, 1493, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 39, 122, 0, 0,
	0, 0, 0, 0, 1518, 0, 0, 0, 0, 0,
	38, 0, 68, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 41, 0, 0, 0, 0, 42, 0, 0,
	0, 0, 74, 0, 0, 123, 0, 0, 0, 0,
	0, 40, 85, 0, 0, 0, 0, 75, 82, 0,
	0, 0, 0, 0, 0, 1499, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1494, 43, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 76, 0, 0, 0, 0, 0, 0, 0, 1511,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1689, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1706, 1683, 1690,
	0, 1673, 1716, 1715, 0, 0, 1675, 1674, 0, 0,
	0, 0, 0, 0, 1726, 1727, 0, 0, 0, 0,
	0, 0, 0, 1509, 0, 0, 1484, 1485, 1491, 1512,
	1490, 1486, 0, 1483, 1481, 1482, 1474, 1475, 1476, 1477,
	1479, 1480, 77, 0, 0, 0, 0, 0, 0, 0,
	44, 0, 0, 0, 0, 1717, 0, 1713, 1712, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1711,
	0, 0, 0, 0, 47, 148, 80, 0, 81, 0,
	45, 0, 0, 0, 124, 0, 0, 0, 0, 0,
	46, 740, 0, 775, 0, 0, 0, 182, 0, 0,
	1710, 1708, 1709, 0, 0, 0, 0, 0, 0, 50,
	0, 0, 0, 118, 0, 747, 0, 0, 0, 0,
	0, 0, 0, 121, 0, 0, 0, 0, 0, 759,
	745, 0, 0, 1685, 0, 0, 0, 184, 0, 0,
	0, 0, 0, 1699, 1688, 1701, 1703, 1704, 1705, 1700,
	0, 1693, 0, 0, 746, 0, 0, 0, 0, 749,
	119, 1722, 1723, 781, 0, 0, 0, 0, 0, 0,
	756, 757, 617, 152, 0, 0, 768, 0, 0, 0,
	0, 183, 0, 0, 0, 0, 0, 0, 0, 776,
	751, 176, 0, 0, 0, 618, 0, 1677, 0, 177,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1714, 0, 0, 0, 1686, 774, 1687, 0,
	151, 0, 0, 3, 0, 0, 0, 0, 0, 619,
	638, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 752,
	0, 620, 0, 0, 621, 0, 0, 744, 0, 1707,
	0, 0, 0, 1696, 1694, 1695, 1698, 1697, 0, 0,
	645, 0, 753, 754, 0, 0, 622, 0, 0, 0,
	0, 0, 0, 0, 0, 643, 0, 0, 0, 0,
	0, 0, 0, 0, 761, 760, 0, 0, 1678, 1679,
	1681, 1682, 755, 0, 623, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1702, 1680, 0, 780, 0,
	0, 0, 0, 0, 624, 0, 1725, 625, 647, 0,
	0, 0, 652, 0, 777, 0, 0, 0, 0, 0,
	0, 0, 1676, 0, 0, 1718, 1719, 1720, 1721, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 750, 1684, 0, 0, 0, 0,
	1691, 1724, 0, 0, 0, 0, 0, 0, 748, 0,
	0, 0, 772, 773, 0, 0, 0, 0, 0, 646,
	0, 0, 0, 0, 0, 0, 0, 628, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 770, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 764, 0, 0,
	0, 0, 0, 765, 0, 0, 0, 0, 0, 0,
	742, 626, 778, 0, 0, 0, 0, 0, 0, 0,
	0, 629, 0, 0, 0, 0, 0, 0, 743, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 766, 0,
	630, 0, 763, 0, 0, 0, 0, 0, 0, 0,
	0, 779, 0, 0, 0, 0, 0, 0, 0, 767,
	0, 0, 0, 0, 0, 0, 0, 651, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 631, 0, 769,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	632, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 771, 0, 0, 0, 0, 0, 0, 0, 637,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 633, 0, 0, 650, 0, 649, 0, 0, 634,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 635, 0, 0, 0, 0, 642, 0, 0,
	0, 0, 653, 0, 648, 0, 0, 0, 0, 640,
}
var sqlPact = [...]int{

	83115, -1000, -1000, -1000, -1000, -1000, -1000, 208, 206, 205,
	202, 200, 199, 194, 193, -1000, -1000, -1000, 191, -1000,
	-1000, 179, -1000, 167, 165, 163, 162, -1000, 161, 160,
	159, -1000, -1000, -1000, -1000, 158, 155, 154, 59068, 1815,
	71076, 62055, 1808, 53489, 70645, 53058, 70214, 69783, 153, -1000,
	69352, 151, 149, 147, -1000, -1000, 146, 1432, 43967, 144,
	143, 142, 1994, 140, 139, -1000, 137, -1000, 83530, 1337,
	-1000, 136, 135, -1000, 7052, 5512, 61199, 2281, 130, 129,
	43535, 2250, 2301, -1000, -1000, 1557, -1000, -1000, 127, 114,
	113, 112, 110, 109, 107, 105, 103, -1000, 102, 97,
	95, 94, 93, 91, 85, -1000, 84, 83, 82, 78,
	77, 76, 75, 74, 73, 72, 71, -1000, 83449, 1500,
	1439, 1438, 1416, 1407, 1412, 898, 70, 69, 66, 65,
	63, 61, 59, -1000, -1000, 57, 55, 54, 52, -1000,
	51, 45, 148, 43, 39, 37, 36, 26, 2308, -1000,
	1314, 930, 20722, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 75326, 71501, 24, -70,
	20, -1000, 2632, 838, 36196, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 495, -1000, -1000, -1000, 272,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1491, 700, -1000, -1000,
	-1000, 68921, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1813, -23, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 698,
	-1000, 1809, 209, 1692, -1000, -1000, -1000, -1000, -1000, 71501,
	-1000, -1000, 2956, 2955, 1587, 697, 68496, -1000, 1293, -1000,
	852, 23458, -1000, 1067, -1000, 23458, 270, -1000, -1000, -1000,
	-1000, -1000, 52627, 15218, 52196, 51765, 47906, 68065, 14777, 58643,
	38800, 1121, -1000, -1000, -1000, -1000, -1000, -2, 48770, 71501,
	-1000, 266, -1000, -1000, -1000, -1000, -1000, -1000, 29946, 883,
	29480, 643, 29014, 455, -1000, -1000, -1000, -1000, 2954, 2952,
	1005, 2950, 2565, 74901, 1454, 2947, 1301, 1074, 932, 2946,
	2945, 2944, 2943, 2941, 2940, 2939, 1169, 67634, 2381, 1534,
	47465, 47024, 59068, 59068, 2090, 67203, 1150, 1144, -1000, -1000,
	-1000, -1000, -1000, -1000, 2424, 2289, 2278, 40959, -1000, -1000,
	2937, 2936, 2930, 2928, 2927, 74476, 1445, 2922, 1975, 2919,
	2918, 2917, 2916, 2915, 2914, 2912, 2911, 2908, -1000, 58212,
	57781, 57350, 56919, 66772, 46583, 46142, -1000, -1000, -1000, 37916,
	7412, 6274, 66341, 39239, 59068, 59068, -1000, -1000, 30400, 128,
	-1000, -1000, -1000, 38800, 2317, -1000, 30400, 128, -1000, 71501,
	-1000, 2380, 1621, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2283, 1373, 2794, 45701, 1712, 1269, 2622, 2416,
	2413, 1315, 1973, 2400, 2390, 2386, 2385, 2379, 1414, 2028,
	359, 20256, 1309, 1305, 2340, 2338, 2827, 1811, 51334, 2907,
	2906, 2596, 2328, 2326, 2315, -1000, -1000, -1000, -1000, 1261,
	-1000, -1000, 54339, -1000, -1000, 1114, -1000, -1000, 1114, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1120, 73626, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1314, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1978, -1000, 1576, -1000, -1000, 1985, 2598,
	2598, 2598, 2651, 469, 467, -1000, 148, -1000, -1000, 82652,
	-1000, -1000, 30400, 30400, 30400, 30400, 30400, 1607, -1000, 696,
	-1000, -1000, 745, -1000, 695, 563, -1000, -1000, -1000, -1000,
	-1000, -1000, 693, 2819, -1000, -1000, -1000, -1000, -1000, 2770,
	-1000, 17472, -1000, -1000, -1000, 471, 692, 30400, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 858, -1000, 262, 865, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	632, 1505, 631, 631, 631, -1000, -1000, 922, -1000, -1000,
	-1000, 340, 629, 329, 627, -1000, -1000, -1000, -1000, 2378,
	691, 689, -1000, 688, 687, 684, 683, 682, -1000, -1000,
	-1000, 680, 677, 676, 675, 674, 671, 669, 668, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 919, -1000, 667,
	666, 663, 662, 660, 659, 658, 650, 648, -1000, -1000,
	-3, 71501, -1000, 495, -3, -1000, -1000, 647, -1000, 23912,
	23912, 23912, -1000, -1000, 1796, 30400, -1000, 2098, -1000, 6,
	6, 809, 37054, -1000, 35334, 809, 644, 757, 40528, -1000,
	2314, -1000, -1000, 645, 260, -1000, -1000, 2313, 71501, 15657,
	71501, 59068, 59068, 59068, 2426, 30400, -1000, -1000, 45260, 71501,
	59493, 2732, 83313, 45260, 71501, 2377, -1000, -1000, -1000, 71501,
	-1000, 30400, -1000, 2730, 1282, 49199, 2675, -17, -1000, -1000,
	-1000, -1000, -1000, -1000, 1955, 1971, 1026, 1833, 1592, -1000,
	23458, 2556, -1000, -1000, -1000, 242, 15657, -1000, 1943, 2487,
	1106, -1000, 1830, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1406, 2486, -1000, 2059, 2484, 1402, -1000, -1000, 890,
	2482, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1641, -1000, -1000, 2583, -1000, -1000, 1781, 2481, 7, -1000,
	-1000, 807, -1000, 48345, 38800, 48770, -5, -1000, -1000, -32,
	-1000, 14336, 82652, -1000, -1000, -1000, 82652, 817, -1000, -1000,
	2480, -1000, 82652, 815, -1000, -1000, 2478, -1000, -1000, -1000,
	2900, -1000, 2896, 1915, 2884, 2883, 2882, -1000, 1431, 1434,
	2881, -1000, 2880, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	56488, 1773, -1000, -1000, 55626, 56057, 931, -1000, 890, 1914,
	-1000, -1000, 1913, -1000, 918, -1000, 2879, 65910, 2109, 890,
	1911, -1000, -1000, -1000, -1000, -1000, 41817, -1000, 41817, -1000,
	41817, -1000, 1241, -1000, 74051, 6, 6, 2770, -1000, -1000,
	-1000, -1000, -1000, 2465, 2878, 2877, 2876, -1000, 71501, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 181, 2463,
	-1000, -1000, 181, 2458, -1000, 181, 2456, -1000, 178, 2455,
	-1000, -1000, 1715, 2453, -1000, -43, 2452, -1000, -1000, -43,
	2451, -1000, -11, -1000, -1000, -1000, 838, -1000, 37485, -1000,
	37485, 65479, 48345, 874, 653, 43104, 82652, -1000, -137, -1000,
	38800, 82652, -1000, 48345, 55626, -1000, 65048, 55201, -1000, -1000,
	1163, 2010, -1000, -1000, -1000, 874, 48345, 48345, 48345, -1000,
	64617, -1000, -1000, 1591, 1342, 2589, 1582, 59068, -1000, 1471,
	-1000, -1000, -1000, 2600, 2375, -1000, 44831, 60768, -1000, 60343,
	-1000, 59918, -1000, 59068, -1000, 59068, -1000, 2875, 2871, 2870,
	-1000, 2869, 2602, 82652, 2601, -1000, 2477, 1446, 1444, 71501,
	-1000, -1000, 71501, -1000, 71501, -1000, -1000, -1000, 1954, -1000,
	-1000, -1000, -1000, 59068, -1000, -1000, -1000, -1000, -1000, -1000,
	2374, -1000, 1389, -1000, 1455, -1000, 1160, -1000, -1000, 190,
	-1000, -1000, -17, -1000, 73626, -1000, -1000, 1985, -1000, 71501,
	-1000, 1935, 2357, 2373, 1380, 1822, 2043, -1000, 28548, 1963,
	32670, 1826, 148, -1000, -1000, 148, 148, 23004, -1000, -1000,
	83313, 83313, 15657, 1130, 30400, 30400, 30400, 30400, 30400, 30400,
	30400, 30400, 30400, 30400, 30400, 30400, 30400, 30400, 30400, 30400,
	30400, 30400, 30400, 30400, 30400, 30400, 30400, 30400, 30400, 30400,
	30400, 30400, 30400, 30400, 30400, 30400, 30400, 30400, 30400, 1766,
	30400, 1117, 30400, 30400, 30400, 30400, 1746, -1000, -1000, 1538,
	515, 1636, -1000, 2778, 2778, 2778, 9911, 9911, 608, 2868,
	745, -1000, 30400, -1000, 128, 30400, 16098, -1000, -1000, -1000,
	467, 9398, 1853, -1000, 464, 16564, -1000, -1000, -1000, 17472,
	563, 28082, 30400, 907, 82652, 1228, 2775, 13897, 2347, 2161,
	-1000, 2802, -1000, -1000, 2775, -1000, -1000, -1000, -1000, 2775,
	1128, 1127, 2775, -1000, 2775, 2775, 641, 724, 722, 19790,
	19324, 18858, 18392, 704, 30400, 30400, 30400, 30400, 30400, 30400,
	30400, 30400, -1000, 27628, 27162, 26696, 33124, 26230, 30400, 17926,
	25764, 25298, 71501, -3, 2729, 30400, 169, -1000, 81410, -1000,
	169, 169, 640, -12, 82652, 2036, 2036, 36625, 2222, 1617,
	1617, 1617, -1000, 809, 10369, 809, 63763, 1666, 809, 809,
	238, 279, 453, 34905, 2098, 63763, 732, 637, 19, 18,
	17, -1000, -1000, 16, 13, -1000, -1000, 59068, 635, 16098,
	15657, 1186, -26, 235, 2047, 2040, 2037, -1000, 2034, 1278,
	-34, 1116, -135, -1000, 4907, -41, -1000, 1161, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	913, 634, 633, 423, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	632, 1505, 631, 631, 631, -1000, -1000, -1000, 340, 629,
	329, 627, -1000, -1000, -1000, -1000, -1000, -1000, 2306, -32,
	59493, 821, -42, 1022, -17, -1000, -1000, -1000, 49199, 1114,
	-1000, 1844, -1000, -1000, -1000, -1000, -1000, -1000, 1174, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 858, -1000, -1000, -1000,
	-1000, -1000, -1000, 2785, 2783, -4, -1000, -1000, 15657, -1000,
	-22, 1393, -1000, 50903, 1799, 2585, 2575, 1229, -1000, 1197,
	2646, 54339, 2691, 2711, 694, -1000, 2304, -1000, -1000, 844,
	1385, 1112, 54339, 2059, -1000, 83313, -1000, 2074, 2645, 1253,
	1210, 1253, 1253, 1240, -1000, 54339, 1111, -1000, 1558, -1000,
	48345, -1000, 1110, -1000, -25, 2685, 2710, 685, -1000, 2302,
	1109, -1000, -1000, 59068, 15657, 2114, -1000, -44, 807, -5,
	48770, 71501, 233, -1000, 30400, 128, 30400, 128, -1000, -1000,
	2450, -1000, -1000, -1000, 2867, 1417, 1974, -1000, -1000, -1000,
	624, 1903, 2293, 71501, 2056, -9, 59068, -1000, 2059, 1894,
	-1000, -1000, 54770, -1000, -1000, 2448, 2438, 592, 2866, -1000,
	1760, 1892, -1000, -1000, -1000, 73201, 1148, 2436, 964, 346,
	2726, -1000, 346, 42246, -1000, 71501, -1000, -1000, 71501, -1000,
	-1000, -1000, 2865, -1000, 59068, -1000, -1000, 59068, -1000, 59068,
	-1000, 59068, -1000, 59068, 59068, -1000, 71501, 48345, 48345, 48345,
	5658, 50053, -47, -50, 452, -1000, 64192, 71501, 963, 50478,
	71501, 2545, 874, 38800, -137, 874, 874, 807, -1000, 807,
	-1000, 59068, 2372, -1000, 874, 874, 874, -1000, -1000, -1000,
	-1000, 2864, 2859, -1000, -1000, -1000, 889, 59068, 71501, 59068,
	-1000, -1000, 71501, -1000, 71501, -1000, 889, 71501, 889, 71501,
	889, 71501, -1000, -1000, -1000, -1000, -1000, -1000, 128, 30400,
	1258, -1000, 2361, -1000, 2358, -1000, 41, -1000, -1000, -1000,
	-1000, 1730, 59068, 59068, 59068, 59068, 71501, 59068, -1000, 54339,
	-1000, 1935, 2357, -1000, -1000, -1000, -1000, -1000, -1000, 1204,
	1707, -1000, 2002, -1000, 1219, -1000, -1000, -1000, 82652, 33578,
	-1000, -1000, 82652, 1397, -1000, 32216, 31762, -1000, -1000, 1322,
	59068, 2049, -1000, 2049, -6, -1000, 81014, 2001, 59068, -1000,
	-1000, -1000, -1000, -1000, 841, 831, 831, 1079, 1079, 1079,
	1079, 2679, 468, 625, 490, 76697, 76697, 374, 374, 374,
	374, 374, 76697, 301, 451, 451, 301, 301, 301, 301,
	301, 451, 451, 451, 76697, 76697, 76697, 9911, 82940, 8748,
	30400, 30400, 1107, 1533, 515, 8520, 30400, 76435, 76435, 76435,
	76435, -1000, 2008, -1000, -1000, -1000, -1000, 2291, 613, 33124,
	33124, -1000, -1000, -1000, -1000, 17018, 30400, -1000, -1000, -1000,
	-1000, 24832, -1000, -1000, 6965, -244, 450, -167, 28, -1000,
	30400, 30400, 30400, 448, -1000, 232, 30400, 71501, -1000, 77573,
	729, -49, -1000, -52, 1220, -1000, 30400, -1000, -1000, 1104,
	-1000, 1100, 1099, 1092, -1000, 610, 447, -1000, 231, -1000,
	1615, 609, 607, 439, -53, 438, 832, 828, 436, 435,
	434, 30400, -1000, -1000, -1000, -1000, -1000, 80616, -1000, -1000,
	80328, -1000, -1000, 80040, -1000, -1000, 79993, -1000, -1000, -1000,
	82544, 77310, 77047, 76784, 9036, 76521, 76230, -60, 431, -1000,
	2286, -167, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	430, -1000, 428, -1000, 82256, -167, 427, 4045, -1000, 33124,
	33124, 33124, -1000, 426, -1000, 81122, -1000, 82175, 24378, 24378,
	24378, 424, 81887, 30400, -167, -71, -1000, -76, -1000, -1000,
	603, -77, 901, 23912, 35765, 15657, -1000, 901, 901, 30400,
	-1000, 30400, 2024, -1000, -1000, -1000, 2021, 2042, 2036, 36625,
	-1000, -1000, -1000, -1000, 63763, -1000, 2770, 2475, -1000, 63763,
	-1000, -1000, 71501, 495, -1000, 63763, 63763, 15657, 809, -1000,
	809, 63763, 588, -1000, -1000, -1000, -1000, -1000, 416, 39668,
	28, 230, 874, -1000, 15657, 2099, 2099, 2099, 2099, -1000,
	-1000, 71501, 2749, -1000, 1539, -1000, 83313, -1000, 739, 1063,
	601, -1000, 2775, 2775, -1000, 2775, 71501, 98, 23458, -1000,
	1114, -1000, -1000, 1348, -1000, 1421, -1000, 1126, -1000, -1000,
	-1000, -1000, 23458, -1000, 1842, 71501, 71501, 59068, -1000, -1000,
	1891, 72776, 1890, 83313, 71501, -1000, -1000, 596, 594, 1999,
	1997, 71501, 71501, 1995, 72351, 71926, 71501, 1561, 30400, 1800,
	1606, 128, 128, -1000, -1000, 128, 590, 1108, 59068, 59068,
	59068, 1396, -1000, -1000, -1000, -1000, -1000, 53914, -1000, -1000,
	2801, 2800, -1000, 1253, -1000, -1000, -1000, 1253, 2059, 1390,
	59068, 44406, 890, 71501, 1565, 128, 128, -1000, -1000, 128,
	578, 15657, 1562, -1000, 874, 2282, -1000, 2114, -1000, -1000,
	13458, 82652, -1000, 82652, -1000, 71501, -1000, 929, 71501, 50478,
	870, 2435, 41388, -32, 874, 48345, 59068, -9, -1000, 2059,
	2432, 495, 1883, -1000, -1000, 48345, 48345, 2857, 573, 2855,
	-1000, 59068, 2431, 1756, 1877, 2501, 781, 71501, 901, 36625,
	1468, -1000, 40099, 937, 71501, 1311, 88, -1000, -1000, -1000,
	30, 71501, -1000, 2852, -1000, -1000, 181, 181, 181, -1000,
	178, 1715, -1000, -43, -43, -1000, -1000, 5658, 5658, 874,
	-10, 572, -1000, 802, 801, 38361, 48345, -78, -1000, -1000,
	-1000, -1000, -1000, 59068, 71501, 642, 2106, 71501, -79, -1000,
	211, 570, -1000, -1000, 874, 2259, -1000, -1000, 894, -1000,
	1156, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	5, -32, -32, -1000, 889, -1000, 889, -1000, 889, -1000,
	82652, -1000, 1248, 1243, 71501, -1000, 15657, 71501, 59068, 15657,
	59068, 2344, 2330, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 983, -1000, 1397, 1701, -1000, 563, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1942, -1000, -14, 23004,
	1838, -1000, -1000, 59068, 4, 30400, 30400, 8000, 5135, 30400,
	33124, 33124, -1000, 30400, 4329, -1000, -1000, -1000, -1000, -1000,
	2258, 559, 30400, 83313, 3772, 3731, -1000, 396, 76183, 301,
	-1000, 30400, -1000, 395, 22550, -1000, 81491, 23, -86, -1000,
	13019, -167, -88, -1000, -1000, 738, -1000, 2499, -1000, 30400,
	81779, 1929, 1461, 1372, 1277, 2775, 2814, 12580, -1000, 42675,
	902, 1627, -1000, -1000, 2775, 829, -1000, -1000, -1000, 829,
	-1000, 79705, -1000, -1000, -1000, -1000, 83313, 83313, 30400, 30400,
	-1000, 30400, 30400, 30400, -1000, -1000, 30400, -1000, -1000, 2256,
	30400, -1000, 83313, 83313, 33124, 33124, 33124, 33124, 33124, 33124,
	33124, 33124, 33124, 33124, 33124, 33124, 33124, 33124, 33124, 33124,
	33124, 33124, 33124, 1969, 33124, 2774, 2774, 2774, -1000, 2253,
	2256, 30400, 30400, 83313, 382, 356, 355, -1000, 30400, -167,
	-1000, -1000, 5658, -1000, 2158, -1000, 30400, -1000, -161, -1000,
	2098, -1000, -1000, 2158, 2158, -91, 82652, 36625, 36625, -1000,
	558, 30400, 2018, -1000, -1000, 728, -240, -1000, 799, -1000,
	-1000, -1000, -1000, -1000, 495, -1000, -1000, -1000, 210, 63763,
	63763, 727, -1000, -94, -1000, -1000, -96, -1000, 2720, 354,
	15657, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -32,
	1685, 2810, -1000, 2790, 735, 725, 2775, 353, 352, 351,
	-32, 71501, -1000, -17, -1000, -1000, -1000, 30400, -1000, -1000,
	2582, 1086, 1082, -1000, 2427, -1000, 1868, -1000, 941, -1000,
	1356, -1000, 30400, 30400, 555, 552, 1465, 2851, 960, 2422,
	1715, 2421, 1715, -1000, -1000, 857, -1000, 82652, 550, 547,
	-1000, -22, 1384, 893, -1000, -1000, 30400, 30400, 63338, -1000,
	367, 2583, 0, -1000, 1080, -1000, -1000, -1000, -1000, 2059,
	1075, -1000, -1000, -1000, -1000, -1000, -1000, 892, -1000, -1000,
	30400, -1000, -25, 1060, -1000, 48345, 874, -1000, 2850, 2849,
	2848, 350, -99, -31, 83313, 2719, 1717, 548, 59068, 851,
	-1000, 2770, -1000, -1000, -1000, 59068, 2705, 2419, 890, -1000,
	-1000, 2847, -1000, 958, 15657, 59068, 2418, 1964, 781, 49628,
	-1000, 890, 1627, -73, -1000, 1311, 22084, 2584, -101, -1000,
	-1000, -1000, 901, 42246, 36625, 30400, 2846, -104, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 62913, 62913, 48345,
	48345, 48345, 874, 71501, 71501, 50478, 2843, 546, 71501, 71501,
	545, -1000, 71501, 71501, 2842, 48345, -1000, 128, -1000, 1681,
	59068, 12141, -1000, -1000, -1000, -1000, -1000, 889, -1000, -1000,
	1568, 1817, 1568, 1341, 1328, -1000, 1696, -1000, -1000, -1000,
	-1000, 2045, 2590, 15657, 2704, 76435, 30400, 30400, 261, 720,
	419, 76435, 30400, 30400, 83313, 6125, -107, 30400, 30400, -1000,
	30400, 719, 82652, 2808, 30400, 349, 348, -1000, -1000, -1000,
	-1000, -1000, -1000, 82652, 30400, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 344, -1000, 99, -1000, -1000, -1000, 75751, -1000,
	30400, 343, 333, -1000, -1000, -1000, 327, 323, 9730, 8291,
	79417, 79370, 79082, 82652, 2253, 82652, -1000, -1000, 945, 945,
	1188, 1188, 1188, 1188, 2774, 1232, 1304, 397, 1289, 1289,
	1289, 972, 537, 537, 1289, 1289, 1289, 2254, 1976, 544,
	4000, -1000, -1000, 82652, 82652, 322, -1000, -1000, -1000, -167,
	315, 2146, 2644, 82652, -1000, 36625, 2146, 2146, -1000, -1000,
	2042, 71501, 82652, 36625, -1000, 2475, -1000, 10820, -1000, 15657,
	-1000, -1000, -1000, -1000, 2770, -1000, 39668, -1000, 542, -1000,
	42, -1000, -1000, 718, 2841, 734, 314, -1000, -1000, -1000,
	-32, 82652, 71501, 71501, 71501, 2417, -1000, 2566, -1000, 78794,
	-110, -1000, 81014, 30400, 71501, -1000, 1467, 2054, 993, -1000,
	2608, 71501, -1000, 71501, -1000, -1000, 71501, 71501, 59068, 2406,
	-112, 82652, -33, -1000, 798, -1000, 1212, -1000, 11702, 59068,
	59068, 2405, -117, 15657, -43, -1000, -1000, -1000, -1000, 2091,
	-1000, 61624, 1736, 128, -1000, 62484, 2840, 541, -1000, 1675,
	-1000, 707, 2059, 128, 59068, -1000, -1000, 540, 71501, 1754,
	539, 15657, 1970, 781, 49628, -1000, 1148, 2043, -1000, -63,
	-1000, 511, 128, 1627, -1000, -73, 82652, -1000, 797, -1000,
	-118, -1000, -1000, 283, -1000, 2542, 2541, -1000, -1000, 30400,
	538, 536, 71501, 2540, -1000, -1000, -120, -1000, 1810, -1000,
	-1000, -1000, -1000, -1000, 15657, 1276, -1000, 534, 526, -1000,
	-1000, -1000, -1000, 2590, 76435, 76435, 30400, 30400, 30400, 76435,
	6125, -123, -1000, 76435, 76435, -167, -1000, -1000, 81491, -1000,
	-1000, 82652, -1000, 11263, 1583, -1000, 78747, -1000, -1000, -1000,
	-1000, 30400, 30400, -1000, -1000, -1000, -1000, -1000, 33124, 2243,
	524, 83313, -1000, -1000, 897, 30400, 30400, 2098, 897, 897,
	-1000, -125, -1000, -1000, -1000, 2770, 42, -1000, -1000, 2835,
	15657, 454, -1000, 2834, -1000, -1000, -1000, -1000, 71501, -1000,
	71501, -1000, 15657, 71501, 2189, 1860, -1000, -1000, 1991, 523,
	33124, 59068, 746, 2173, 1457, 30400, 1838, -128, -130, 1857,
	-1000, -1000, 1855, 30400, -1000, 83313, 517, 1715, 1715, -136,
	-139, -1000, 30400, 1055, 71501, 21630, -1000, 2831, 2583, -1000,
	-1000, 30400, 1053, -1000, 1565, 2124, -1000, -1000, -1000, -1000,
	1989, -1000, -1000, 71501, 1983, 884, -141, -1000, 794, 788,
	-1000, 50478, 870, 869, -1000, -1000, -1000, 495, 30400, -1000,
	59068, 30400, 1753, -1000, 781, 49628, -1000, 2501, 1311, -1000,
	2507, 71501, 2574, -1000, 2043, 515, -1000, 874, 514, 512,
	-144, 30400, 30400, -147, 510, 874, -89, -1000, 748, 721,
	-1000, -1000, 59068, 59068, 30400, 30400, -1000, 76435, 76435, 76435,
	-1000, 278, -1000, -1000, 1627, 2641, -1000, 78459, 78171, 4195,
	33124, 83313, -149, -1000, 71501, 82652, -167, -1000, -1000, -1000,
	705, -1000, 2828, -1000, -1000, 2671, -1000, -1000, -1000, 71501,
	1867, -1000, 959, 30400, 4000, 508, 30400, -1000, -1000, 2089,
	2275, 2091, 507, -1000, -1000, -1000, -1000, 955, 1391, -1000,
	-1000, 82652, 2617, 30400, -1000, -1000, 505, 504, 82652, 502,
	780, 2242, -1000, -1000, -1000, 82652, 501, 870, -1000, 1593,
	1736, 500, -1000, -1000, -1000, 2071, -1000, 62484, 34017, 34017,
	276, 2703, 869, -1000, 2767, -1000, 2698, -150, 958, -152,
	59068, 49628, -1000, 1964, -1000, 1136, -155, 71501, 1311, -1000,
	-1000, 48345, 48345, 955, -160, -168, -1000, 48345, -1000, 1810,
	-1000, 71501, -1000, 71501, -1000, -1000, -173, -176, -1000, 1691,
	30400, -1000, -1000, 4195, -179, -1000, -119, -1000, 2697, -1000,
	-1000, -1000, -1000, 2414, 2138, 78124, 1937, 71501, 77836, 2229,
	-1000, -1000, 1565, 71501, -1000, 2136, 59068, 956, 15657, -181,
	1568, 1568, 30400, 21176, 1589, 30400, -1000, 59068, 71501, -1000,
	2536, -1000, -1000, -1000, 2091, 128, -1000, -1000, 128, 955,
	498, 1457, 497, -1000, 1970, 1226, -1000, 901, -1000, -1000,
	-184, -187, 1457, 955, -1000, -189, -1000, -190, -196, -1000,
	-1000, 150, 31308, 31308, 31308, -167, -1000, 71501, 496, 2397,
	888, -1000, 1713, 1543, 25, 970, -1000, -1000, 2173, -199,
	886, 495, -1000, 30400, -1000, 955, -201, -1000, 934, -204,
	-1000, 923, -206, -1000, 2210, -1000, -207, 494, -214, -1000,
	-1000, -1000, 1565, 884, -1000, 1457, 30400, 2091, 30400, -1000,
	42246, -1000, 874, 874, 2091, 1457, 874, -1000, -1000, -1000,
	2491, -1000, 34456, 1626, 1326, 80663, 2491, 2491, -1000, -1000,
	71501, 2661, -1000, 1751, 1750, 1288, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 2660, 1937, 82652, 2091, -1000, 1568,
	2117, -1000, 1568, 2169, -1000, 1588, -1000, 71501, -1000, 71501,
	870, -1000, 2091, -215, 1565, -216, -192, -1000, -1000, 1565,
	2091, -1000, -1000, 1459, 2739, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 775, -1000, 2522, -1000, 975, 1761, 1761,
	773, 1713, -1000, -1000, 489, -1000, 487, -1000, -221, -1000,
	-1000, 1565, 955, 899, 1457, -1000, -1000, 1565, 1295, -1000,
	-1000, 1620, 30854, 30400, -1000, 2752, -1000, -1000, 2004, -1000,
	30400, 2173, 30400, 30400, 1702, 899, 1457, -1000, 2823, 2091,
	-1000, -1000, -1000, -1000, 82652, -1000, -1000, -1000, 82652, -1000,
	-222, -229, -1000, -1000, -1000, -1000, 2091, -1000, 1565, 1565,
	1027, 1565, 899, -1000, 478, 899, -1000, 30400, -1000, -230,
	1565, -1000,
}
var sqlPgo = [...]int{

	0, 3504, 3497, 3496, 3495, 3492, 3488, 3487, 3486, 3485,
	3481, 3480, 3479, 3477, 3476, 3475, 3471, 3469, 3467, 3466,
	3463, 3460, 3458, 3457, 3456, 3455, 3454, 3453, 3451, 3447,
	3445, 3443, 3442, 3441, 3440, 3439, 3438, 3437, 3436, 3432,
	3431, 3430, 3429, 3428, 3427, 3426, 3422, 3421, 36, 3420,
	3419, 3417, 3415, 3413, 3411, 3410, 3408, 3407, 3394, 3392,
	3390, 3384, 3381, 3380, 3378, 3374, 38, 3371, 224, 3368,
	3367, 3365, 3358, 3355, 3350, 3349, 3348, 3343, 3338, 223,
	3337, 158, 3334, 3333, 3330, 3329, 3328, 222, 3327, 3325,
	3324, 3323, 3321, 3319, 3316, 3315, 147, 197, 3313, 43,
	3311, 3310, 3309, 3308, 3306, 3303, 3302, 3301, 3300, 3299,
	199, 3297, 220, 3294, 3293, 3292, 3290, 3288, 3287, 3286,
	3282, 3281, 3279, 3277, 3275, 3274, 3273, 3271, 3270, 3269,
	3268, 3262, 3258, 3257, 3256, 3252, 3249, 3248, 3246, 3245,
	228, 175, 3223, 3222, 215, 213, 3221, 128, 99, 92,
	165, 3219, 90, 55, 3217, 12, 136, 214, 5005, 212,
	3215, 3213, 3212, 193, 141, 3208, 188, 3206, 3204, 3203,
	3199, 71, 70, 134, 135, 130, 120, 145, 3198, 3197,
	69, 60, 34, 32, 104, 133, 3193, 3189, 3183, 1999,
	96, 3181, 3180, 217, 189, 3179, 1673, 3178, 257, 76,
	89, 31, 85, 3176, 108, 25, 3175, 127, 57, 3174,
	121, 75, 33, 5574, 6872, 3172, 91, 227, 74, 201,
	187, 180, 166, 164, 131, 931, 3170, 200, 3169, 101,
	159, 3165, 3164, 3163, 61, 150, 79, 3162, 6, 2,
	124, 29, 88, 13, 3161, 15, 3160, 3159, 3157, 3152,
	24, 125, 3150, 107, 163, 3147, 50, 3146, 18, 170,
	3144, 176, 93, 3138, 3136, 211, 153, 157, 3132, 10,
	181, 3131, 3130, 3127, 3119, 3113, 102, 23, 97, 3112,
	3108, 111, 192, 148, 3107, 49, 3106, 129, 78, 112,
	233, 95, 183, 84, 179, 140, 191, 3102, 3101, 3100,
	143, 3096, 3095, 162, 123, 3093, 3091, 226, 35, 52,
	190, 54, 144, 118, 3089, 152, 3088, 3087, 3086, 225,
	139, 174, 9, 4, 73, 98, 27, 14, 186, 117,
	198, 82, 3084, 3090, 579, 1483, 40, 113, 87, 58,
	83, 109, 209, 53, 3081, 3079, 3155, 3078, 3077, 3076,
	3072, 138, 3071, 3070, 3069, 115, 119, 171, 3068, 110,
	68, 11, 122, 210, 221, 80, 169, 185, 202, 3067,
	137, 3065, 100, 106, 3064, 149, 196, 160, 3063, 184,
	114, 3062, 219, 3061, 3059, 3057, 3056, 3055, 3054, 3053,
	173, 3052, 116, 3051, 3046, 207, 146, 3045, 206, 208,
	126, 94, 30, 3041, 64, 675, 3037, 151, 37, 3036,
	296, 67, 0, 6428, 4852, 6261, 3035, 1695, 3034, 167,
	105, 3032, 3029, 3027, 72, 3025, 62, 3024, 3023, 56,
	3022, 19, 8, 7, 21, 16, 1499, 1126, 3021, 3020,
	86, 103, 155, 3017, 218, 182, 3016, 3015, 3009, 65,
	3007, 26, 3006, 22, 3005, 3003, 28, 5, 17, 3002,
	3001, 194, 3000, 195, 2999, 2997, 2710, 2990, 204, 63,
	2986, 205, 2983, 132, 161, 2982, 2977, 2976, 2975, 203,
	2974, 2972, 20, 1, 2970, 2966, 2964, 154, 3, 2618,
	2963, 2962, 66, 2960, 2959, 142,
}
var sqlR1 = [...]int{

	0, 1, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 3, 3, 3, 3, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 5, 5, 5, 5, 5, 5, 5,
	5, 5, 12, 12, 7, 7, 8, 8, 8, 36,
	36, 10, 10, 9, 9, 9, 11, 11, 6, 6,
	6, 6, 6, 6, 6, 6, 6, 14, 14, 26,
	26, 15, 15, 28, 28, 16, 16, 29, 29, 468,
	468, 19, 31, 20, 32, 13, 469, 469, 469, 469,
	24, 21, 33, 22, 22, 22, 22, 22, 151, 151,
	151, 151, 18, 18, 27, 27, 174, 174, 173, 173,
	173, 173, 173, 173, 173, 173, 173, 173, 173, 173,
	173, 173, 173, 173, 173, 173, 173, 173, 173, 173,
	467, 467, 176, 176, 175, 170, 170, 470, 470, 177,
	177, 177, 179, 179, 37, 37, 37, 95, 95, 95,
	96, 96, 97, 97, 152, 88, 88, 88, 88, 88,
	88, 88, 88, 88, 83, 83, 410, 410, 411, 411,
	147, 147, 148, 148, 148, 148, 149, 149, 150, 150,
	150, 51, 39, 39, 39, 39, 39, 39, 39, 40,
	40, 40, 40, 41, 41, 41, 41, 41, 41, 42,
	42, 42, 42, 42, 42, 49, 49, 49, 49, 141,
	141, 52, 52, 52, 52, 52, 52, 52, 52, 52,
	476, 476, 476, 476, 476, 476, 476, 476, 476, 476,
	476, 476, 476, 476, 476, 476, 476, 476, 476, 476,
	476, 477, 477, 478, 478, 479, 479, 480, 480, 480,
	480, 480, 480, 480, 480, 480, 480, 480, 480, 480,
	480, 480, 480, 480, 480, 480, 480, 54, 54, 54,
	54, 54, 54, 54, 54, 54, 54, 54, 54, 54,
	54, 54, 63, 63, 252, 252, 228, 228, 64, 64,
	64, 65, 65, 66, 66, 53, 53, 463, 463, 266,
	266, 374, 374, 68, 68, 286, 286, 69, 69, 69,
	69, 69, 69, 70, 70, 70, 70, 70, 70, 70,
	71, 71, 71, 71, 71, 71, 71, 71, 71, 71,
	77, 77, 77, 78, 78, 78, 75, 75, 75, 73,
	73, 73, 72, 72, 72, 76, 76, 76, 74, 74,
	74, 267, 267, 79, 79, 79, 79, 79, 79, 79,
	79, 81, 81, 81, 81, 81, 81, 81, 81, 81,
	81, 81, 81, 81, 81, 81, 81, 81, 81, 81,
	81, 81, 81, 81, 81, 81, 81, 81, 81, 81,
	81, 81, 81, 81, 82, 82, 82, 82, 82, 82,
	82, 82, 82, 82, 82, 82, 376, 376, 80, 80,
	80, 344, 344, 84, 84, 84, 301, 301, 85, 85,
	85, 85, 85, 86, 86, 86, 86, 98, 98, 98,
	98, 466, 466, 259, 259, 193, 193, 193, 193, 91,
	91, 91, 91, 92, 92, 92, 93, 93, 146, 146,
	104, 104, 104, 104, 104, 103, 103, 103, 103, 103,
	103, 43, 43, 43, 44, 44, 45, 45, 46, 46,
	47, 47, 48, 48, 48, 48, 48, 106, 106, 473,
	473, 108, 105, 105, 105, 107, 107, 107, 107, 109,
	110, 110, 110, 110, 110, 110, 110, 110, 111, 111,
	404, 404, 275, 275, 402, 402, 418, 418, 403, 403,
	232, 232, 232, 232, 232, 233, 233, 233, 409, 409,
	409, 409, 409, 409, 112, 112, 112, 112, 112, 112,
	112, 112, 112, 112, 112, 112, 112, 112, 112, 112,
	112, 112, 112, 112, 112, 112, 112, 112, 112, 112,
	112, 112, 112, 112, 112, 112, 112, 112, 112, 112,
	112, 112, 112, 112, 112, 112, 112, 112, 112, 112,
	112, 112, 112, 112, 112, 112, 131, 131, 131, 140,
	140, 140, 140, 140, 140, 140, 133, 133, 133, 121,
	121, 113, 113, 113, 113, 113, 117, 117, 117, 117,
	117, 117, 117, 117, 114, 114, 123, 123, 123, 123,
	123, 118, 118, 120, 120, 122, 122, 122, 122, 122,
	122, 122, 122, 122, 115, 115, 115, 115, 125, 125,
	125, 125, 307, 307, 307, 124, 124, 124, 124, 124,
	124, 124, 124, 124, 124, 136, 136, 136, 136, 136,
	136, 358, 358, 132, 132, 132, 132, 135, 135, 135,
	135, 291, 291, 129, 129, 129, 130, 130, 130, 134,
	134, 137, 137, 137, 137, 116, 116, 116, 481, 481,
	481, 138, 138, 128, 128, 139, 139, 139, 139, 139,
	139, 139, 139, 127, 127, 127, 126, 126, 126, 126,
	119, 464, 464, 461, 461, 461, 461, 461, 461, 461,
	462, 462, 465, 465, 89, 89, 89, 58, 58, 155,
	155, 155, 155, 153, 153, 154, 154, 59, 59, 482,
	482, 482, 471, 471, 471, 472, 472, 472, 472, 472,
	472, 234, 234, 235, 235, 325, 325, 325, 325, 325,
	238, 238, 178, 178, 178, 241, 242, 242, 239, 239,
	240, 240, 240, 244, 244, 243, 246, 246, 245, 324,
	425, 425, 427, 427, 427, 427, 427, 427, 427, 429,
	429, 429, 429, 429, 429, 429, 429, 429, 429, 429,
	423, 423, 423, 424, 419, 419, 420, 420, 420, 420,
	236, 236, 237, 237, 237, 237, 421, 422, 257, 257,
	361, 426, 426, 428, 428, 430, 483, 483, 483, 483,
	483, 483, 484, 484, 323, 323, 322, 322, 250, 250,
	431, 431, 431, 431, 432, 432, 432, 432, 432, 435,
	434, 433, 433, 433, 433, 433, 62, 62, 62, 288,
	288, 287, 287, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 143, 143,
	60, 60, 60, 184, 184, 185, 185, 57, 57, 57,
	486, 486, 61, 61, 61, 61, 487, 487, 67, 67,
	67, 67, 67, 67, 56, 56, 56, 56, 56, 488,
	488, 308, 308, 306, 306, 256, 256, 360, 197, 197,
	171, 171, 171, 23, 25, 25, 17, 17, 34, 34,
	35, 35, 30, 30, 474, 474, 475, 475, 90, 90,
	94, 94, 94, 102, 102, 142, 142, 142, 142, 142,
	142, 142, 38, 38, 38, 38, 50, 50, 50, 50,
	100, 490, 490, 490, 101, 101, 489, 489, 192, 192,
	192, 192, 194, 194, 319, 319, 320, 320, 491, 491,
	321, 321, 321, 321, 187, 186, 188, 188, 55, 55,
	55, 180, 180, 181, 181, 182, 182, 183, 183, 492,
	492, 87, 87, 87, 145, 145, 227, 227, 227, 315,
	315, 315, 251, 251, 202, 202, 318, 318, 316, 316,
	316, 316, 285, 285, 285, 144, 144, 264, 264, 277,
	277, 278, 278, 371, 371, 279, 99, 99, 158, 158,
	156, 156, 156, 156, 156, 156, 156, 156, 163, 163,
	164, 164, 165, 165, 166, 167, 167, 167, 167, 268,
	268, 168, 168, 168, 157, 157, 157, 159, 159, 159,
	159, 159, 159, 159, 162, 162, 162, 162, 169, 169,
	169, 161, 161, 442, 442, 442, 444, 444, 445, 441,
	441, 443, 443, 485, 485, 290, 290, 290, 248, 249,
	247, 247, 254, 254, 253, 255, 255, 359, 359, 359,
	172, 172, 172, 282, 282, 282, 282, 283, 283, 311,
	311, 309, 309, 309, 309, 310, 310, 312, 312, 312,
	313, 313, 314, 314, 281, 281, 340, 340, 160, 160,
	160, 261, 261, 261, 262, 262, 331, 331, 331, 331,
	331, 331, 332, 332, 330, 330, 330, 330, 362, 362,
	362, 362, 362, 362, 362, 362, 362, 363, 364, 364,
	263, 263, 365, 317, 317, 459, 459, 459, 460, 460,
	357, 357, 366, 366, 366, 366, 366, 366, 355, 355,
	356, 356, 372, 373, 373, 294, 294, 294, 294, 292,
	292, 295, 295, 295, 295, 293, 293, 367, 367, 367,
	367, 284, 284, 368, 368, 368, 368, 369, 326, 327,
	327, 377, 377, 377, 377, 392, 260, 260, 260, 260,
	260, 493, 493, 378, 378, 378, 378, 378, 379, 379,
	379, 379, 379, 379, 379, 379, 379, 379, 379, 379,
	379, 379, 379, 379, 379, 379, 379, 379, 379, 379,
	382, 382, 382, 381, 381, 381, 381, 381, 381, 381,
	381, 381, 381, 381, 381, 381, 381, 381, 381, 381,
	381, 391, 391, 391, 391, 391, 383, 383, 388, 388,
	389, 389, 389, 384, 385, 390, 390, 390, 390, 494,
	494, 394, 394, 386, 386, 386, 386, 386, 386, 386,
	386, 386, 380, 380, 380, 387, 387, 387, 303, 303,
	303, 303, 303, 303, 303, 303, 303, 303, 303, 303,
	303, 302, 302, 304, 304, 333, 333, 333, 333, 333,
	333, 333, 333, 333, 333, 333, 333, 333, 333, 333,
	333, 333, 333, 333, 333, 333, 333, 333, 333, 333,
	333, 333, 333, 333, 333, 333, 333, 333, 333, 333,
	333, 333, 333, 333, 333, 333, 333, 333, 333, 333,
	333, 333, 333, 333, 333, 333, 333, 333, 333, 333,
	333, 333, 333, 333, 333, 333, 333, 333, 333, 333,
	333, 333, 333, 333, 333, 333, 333, 333, 333, 333,
	333, 333, 333, 333, 333, 333, 333, 333, 333, 333,
	333, 334, 334, 334, 334, 334, 334, 334, 334, 334,
	334, 334, 334, 334, 334, 334, 334, 334, 334, 334,
	334, 334, 334, 334, 334, 334, 334, 334, 334, 334,
	335, 335, 335, 335, 336, 336, 336, 336, 336, 336,
	336, 336, 336, 336, 336, 336, 336, 336, 336, 336,
	336, 336, 336, 336, 336, 336, 336, 336, 436, 436,
	436, 436, 436, 436, 436, 436, 439, 439, 440, 440,
	437, 437, 437, 437, 437, 437, 437, 437, 437, 437,
	437, 437, 437, 437, 437, 437, 437, 437, 437, 437,
	437, 437, 437, 438, 438, 438, 438, 438, 438, 438,
	438, 438, 438, 438, 438, 438, 438, 438, 438, 438,
	438, 438, 438, 438, 438, 438, 438, 438, 438, 438,
	438, 438, 438, 438, 438, 438, 438, 438, 438, 446,
	446, 447, 447, 449, 449, 450, 450, 451, 452, 452,
	452, 453, 454, 454, 448, 448, 455, 455, 455, 455,
	456, 456, 457, 457, 457, 457, 457, 458, 458, 458,
	458, 458, 346, 346, 347, 347, 353, 353, 353, 231,
	231, 231, 231, 231, 231, 231, 231, 231, 231, 231,
	231, 231, 231, 231, 231, 195, 195, 195, 195, 195,
	273, 273, 271, 271, 271, 274, 274, 272, 272, 270,
	270, 269, 269, 343, 343, 341, 341, 345, 345, 296,
	296, 393, 393, 393, 393, 393, 393, 393, 393, 297,
	297, 297, 305, 298, 298, 299, 299, 299, 299, 299,
	337, 338, 300, 300, 300, 339, 339, 348, 352, 352,
	351, 350, 350, 349, 349, 328, 328, 329, 329, 280,
	280, 495, 495, 276, 276, 370, 370, 370, 370, 230,
	230, 265, 265, 229, 229, 222, 222, 223, 223, 223,
	223, 258, 258, 354, 354, 395, 395, 396, 396, 397,
	397, 398, 398, 399, 400, 401, 342, 342, 212, 211,
	199, 200, 210, 209, 208, 198, 201, 205, 206, 207,
	203, 204, 218, 217, 216, 214, 215, 375, 224, 224,
	225, 225, 225, 226, 226, 226, 226, 196, 196, 219,
	219, 220, 221, 221, 213, 213, 213, 189, 189, 189,
	190, 190, 191, 191, 408, 408, 406, 406, 406, 407,
	407, 407, 407, 405, 405, 405, 405, 405, 412, 412,
	412, 412, 412, 412, 412, 412, 412, 412, 412, 412,
	412, 412, 412, 412, 412, 412, 412, 412, 412, 412,
	412, 412, 412, 412, 412, 412, 412, 412, 412, 412,
	412, 412, 412, 412, 412, 412, 412, 412, 412, 412,
	412, 412, 412, 412, 412, 412, 412, 412, 412, 412,
	412, 412, 412, 412, 412, 412, 412, 412, 412, 412,
	412, 412, 412, 412, 412, 412, 412, 412, 412, 412,
	412, 412, 412, 412, 412, 412, 412, 412, 412, 412,
	412, 412, 412, 412, 412, 412, 412, 412, 412, 412,
	412, 412, 412, 412, 412, 412, 412, 412, 412, 412,
	412, 412, 412, 412, 412, 412, 412, 412, 412, 412,
	412, 412, 412, 412, 412, 412, 412, 412, 412, 412,
	412, 412, 412, 412, 412, 412, 412, 412, 412, 412,
	412, 412, 412, 412, 412, 412, 412, 412, 412, 412,
	412, 412, 412, 412, 412, 412, 412, 412, 412, 412,
	412, 412, 412, 412, 412, 412, 412, 412, 412, 412,
	412, 412, 412, 412, 412, 412, 412, 412, 412, 412,
	412, 412, 412, 412, 412, 412, 412, 412, 412, 412,
	412, 412, 412, 412, 412, 412, 412, 412, 412, 412,
	412, 412, 412, 412, 412, 412, 412, 412, 412, 412,
	412, 412, 412, 412, 412, 412, 412, 412, 412, 412,
	412, 412, 412, 412, 412, 412, 412, 412, 412, 412,
	412, 412, 412, 412, 412, 412, 412, 412, 412, 412,
	412, 412, 412, 412, 412, 412, 412, 412, 412, 412,
	412, 412, 412, 412, 412, 412, 412, 412, 412, 412,
	412, 412, 412, 412, 412, 412, 412, 412, 412, 415,
	415, 415, 415, 415, 415, 415, 415, 415, 415, 415,
	415, 415, 415, 415, 415, 415, 415, 415, 415, 415,
	415, 415, 415, 415, 415, 415, 415, 415, 415, 415,
	415, 415, 415, 415, 415, 415, 415, 415, 415, 415,
	415, 415, 415, 415, 415, 413, 413, 413, 413, 413,
	413, 413, 413, 413, 413, 413, 413, 413, 413, 413,
	413, 413, 413, 414, 416, 416, 416, 416, 416, 416,
	416, 416, 416, 416, 416, 416, 416, 416, 416, 416,
	416, 416, 416, 416, 416, 416, 416, 416, 416, 416,
	416, 416, 416, 416, 416, 416, 416, 416, 416, 416,
	416, 416, 416, 416, 416, 416, 416, 416, 416, 416,
	416, 416, 416, 416, 416, 416, 416, 416, 416, 416,
	416, 416, 416, 416, 416, 416, 416, 416, 416, 416,
	416, 416, 416, 416, 416, 416, 416, 416, 416, 416,
	416, 416, 416, 417, 417,
}
var sqlR2 = [...]int{

	0, 1, 1, 1, 1, 1, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 1, 0, 1, 1, 2, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 1, 3, 1, 3, 1, 1, 3, 4,
	6, 1, 3, 1, 1, 3, 1, 3, 1, 1,
	1, 1, 1, 1, 1, 1, 3, 4, 6, 4,
	6, 6, 9, 6, 9, 6, 5, 6, 5, 1,
	1, 5, 5, 6, 6, 4, 4, 4, 4, 3,
	4, 4, 4, 7, 7, 9, 8, 9, 5, 3,
	5, 7, 4, 12, 4, 12, 1, 3, 5, 5,
	2, 5, 3, 6, 4, 6, 5, 6, 6, 4,
	8, 3, 4, 10, 3, 6, 4, 3, 1, 3,
	2, 1, 1, 3, 1, 3, 2, 2, 0, 1,
	1, 0, 2, 0, 6, 7, 2, 5, 6, 2,
	1, 3, 1, 3, 1, 6, 4, 9, 7, 12,
	12, 12, 9, 2, 7, 2, 1, 1, 1, 3,
	3, 0, 3, 1, 3, 1, 1, 3, 2, 5,
	0, 6, 1, 2, 1, 2, 1, 2, 2, 3,
	3, 3, 3, 3, 5, 3, 3, 5, 3, 3,
	5, 3, 3, 5, 3, 6, 6, 6, 6, 1,
	1, 1, 2, 1, 2, 1, 1, 2, 1, 2,
	3, 3, 4, 3, 4, 7, 4, 4, 4, 3,
	5, 7, 4, 3, 3, 4, 3, 3, 3, 3,
	3, 2, 0, 1, 0, 1, 0, 3, 3, 3,
	3, 3, 6, 4, 4, 4, 3, 5, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 4, 1, 1, 2,
	1, 2, 7, 3, 2, 0, 1, 3, 3, 1,
	0, 1, 2, 2, 1, 6, 5, 1, 2, 1,
	3, 2, 0, 9, 3, 2, 0, 2, 2, 2,
	2, 2, 2, 1, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	4, 6, 3, 4, 6, 3, 4, 6, 3, 4,
	6, 3, 4, 6, 3, 3, 5, 3, 3, 5,
	3, 1, 3, 2, 2, 5, 3, 3, 6, 6,
	3, 1, 1, 2, 1, 1, 1, 2, 1, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 1, 2,
	1, 2, 1, 2, 1, 1, 1, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 1, 1, 2, 1, 2, 1, 3, 5, 7,
	2, 3, 0, 3, 5, 2, 3, 0, 2, 3,
	2, 3, 2, 6, 4, 7, 2, 6, 4, 7,
	2, 1, 1, 1, 3, 1, 1, 1, 1, 1,
	2, 1, 2, 2, 3, 2, 4, 3, 2, 2,
	1, 2, 1, 3, 3, 1, 2, 1, 2, 1,
	2, 1, 1, 3, 5, 4, 6, 4, 3, 0,
	1, 3, 2, 4, 2, 4, 1, 6, 3, 1,
	1, 5, 3, 2, 6, 3, 3, 4, 4, 3,
	1, 3, 2, 3, 3, 1, 3, 1, 2, 1,
	1, 2, 2, 3, 1, 1, 1, 1, 1, 3,
	2, 2, 1, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 2, 3, 3, 1,
	1, 1, 1, 1, 2, 2, 5, 7, 3, 3,
	3, 4, 5, 5, 5, 3, 4, 4, 3, 4,
	4, 3, 4, 4, 5, 3, 5, 5, 5, 7,
	3, 3, 3, 4, 3, 5, 3, 6, 5, 6,
	3, 5, 6, 3, 4, 3, 4, 3, 3, 4,
	4, 5, 0, 1, 1, 3, 2, 4, 3, 3,
	5, 4, 3, 5, 3, 5, 4, 6, 4, 6,
	4, 1, 0, 3, 4, 4, 5, 7, 5, 3,
	3, 2, 0, 4, 2, 3, 4, 2, 3, 3,
	3, 4, 3, 3, 3, 3, 4, 3, 1, 1,
	1, 2, 3, 2, 3, 6, 6, 7, 9, 7,
	9, 3, 4, 10, 10, 3, 5, 5, 5, 3,
	5, 2, 0, 1, 1, 1, 1, 3, 2, 2,
	2, 1, 2, 0, 3, 3, 2, 10, 13, 0,
	2, 4, 3, 3, 3, 1, 3, 9, 12, 0,
	2, 3, 1, 1, 0, 1, 2, 2, 2, 2,
	1, 1, 0, 1, 3, 1, 1, 1, 1, 3,
	8, 0, 1, 1, 0, 2, 1, 0, 1, 0,
	9, 9, 3, 1, 3, 7, 1, 3, 11, 3,
	2, 0, 3, 1, 2, 2, 3, 2, 6, 2,
	1, 1, 2, 8, 4, 2, 5, 5, 5, 2,
	9, 10, 6, 5, 3, 1, 5, 8, 6, 11,
	3, 0, 2, 4, 3, 3, 1, 5, 1, 3,
	1, 2, 0, 1, 2, 2, 0, 1, 3, 3,
	2, 2, 1, 1, 4, 0, 6, 0, 3, 0,
	2, 2, 2, 0, 1, 1, 2, 2, 0, 3,
	3, 2, 1, 1, 2, 2, 5, 8, 4, 1,
	0, 1, 2, 2, 1, 2, 3, 3, 2, 2,
	3, 2, 2, 2, 2, 2, 3, 1, 4, 2,
	4, 7, 3, 1, 0, 3, 3, 3, 6, 3,
	1, 1, 8, 11, 7, 5, 0, 1, 6, 7,
	6, 5, 3, 4, 15, 18, 14, 17, 4, 0,
	2, 2, 0, 1, 0, 1, 3, 3, 2, 0,
	1, 1, 0, 6, 4, 6, 6, 8, 6, 8,
	6, 8, 6, 8, 1, 0, 2, 0, 2, 2,
	3, 3, 2, 2, 2, 1, 2, 1, 2, 1,
	2, 1, 3, 2, 3, 2, 2, 2, 2, 2,
	2, 1, 1, 0, 2, 2, 1, 0, 1, 3,
	2, 0, 2, 1, 1, 0, 1, 3, 1, 0,
	1, 1, 1, 1, 2, 3, 2, 2, 8, 11,
	3, 3, 0, 3, 0, 3, 0, 3, 0, 1,
	0, 6, 7, 3, 6, 3, 1, 3, 1, 1,
	4, 2, 1, 3, 1, 3, 8, 5, 3, 4,
	3, 0, 2, 2, 0, 10, 3, 2, 0, 1,
	3, 1, 1, 3, 3, 5, 1, 1, 3, 3,
	1, 2, 4, 4, 2, 3, 5, 5, 1, 3,
	1, 0, 1, 2, 3, 2, 4, 2, 3, 0,
	2, 0, 2, 1, 2, 1, 1, 1, 2, 1,
	2, 1, 2, 1, 8, 8, 8, 2, 4, 4,
	4, 2, 2, 2, 2, 3, 1, 3, 6, 1,
	0, 1, 0, 1, 0, 1, 1, 0, 1, 5,
	1, 0, 1, 0, 3, 1, 3, 3, 4, 5,
	2, 2, 0, 2, 2, 1, 1, 1, 0, 1,
	0, 2, 2, 5, 4, 2, 3, 1, 1, 1,
	1, 1, 1, 1, 3, 0, 2, 0, 4, 2,
	5, 3, 2, 0, 1, 3, 3, 5, 1, 1,
	1, 1, 1, 3, 2, 4, 4, 0, 4, 4,
	3, 4, 1, 5, 3, 4, 5, 5, 1, 5,
	1, 3, 2, 0, 3, 0, 2, 3, 1, 3,
	2, 0, 3, 5, 6, 4, 6, 4, 3, 2,
	1, 0, 5, 1, 0, 2, 2, 2, 1, 1,
	0, 1, 1, 1, 0, 4, 2, 1, 2, 2,
	4, 1, 3, 1, 2, 3, 2, 2, 2, 1,
	0, 2, 5, 7, 2, 1, 2, 4, 3, 5,
	0, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	3, 5, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 2, 2, 2, 2, 2, 1,
	1, 1, 1, 1, 1, 1, 3, 0, 5, 4,
	1, 2, 1, 4, 1, 1, 2, 1, 1, 1,
	1, 1, 0, 1, 2, 5, 1, 4, 2, 5,
	1, 4, 3, 3, 0, 1, 2, 4, 1, 1,
	1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
	3, 1, 0, 1, 4, 1, 3, 3, 3, 5,
	2, 2, 2, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 2, 2, 3,
	5, 4, 6, 3, 5, 4, 6, 4, 6, 5,
	7, 3, 3, 3, 3, 3, 4, 3, 2, 4,
	2, 3, 3, 4, 3, 4, 3, 4, 5, 6,
	6, 7, 6, 7, 6, 7, 3, 4, 4, 1,
	3, 1, 3, 3, 2, 2, 2, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 5, 6, 6, 7,
	1, 2, 1, 2, 1, 1, 1, 1, 1, 6,
	2, 1, 1, 1, 1, 1, 2, 1, 5, 5,
	3, 1, 1, 1, 2, 2, 2, 4, 3, 5,
	6, 8, 6, 5, 4, 3, 4, 1, 1, 1,
	5, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 6, 6, 8, 8, 6, 4, 6, 6,
	6, 4, 1, 3, 3, 3, 3, 3, 4, 3,
	3, 4, 3, 3, 4, 3, 3, 4, 3, 3,
	3, 4, 3, 4, 3, 4, 3, 4, 4, 3,
	6, 5, 5, 5, 4, 4, 3, 4, 3, 5,
	0, 5, 0, 2, 0, 1, 3, 3, 2, 2,
	0, 6, 1, 0, 3, 0, 3, 3, 3, 0,
	1, 4, 2, 2, 2, 2, 2, 3, 2, 2,
	3, 0, 4, 1, 1, 5, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 2, 1, 2,
	2, 3, 1, 2, 3, 2, 3, 2, 3, 1,
	0, 1, 3, 1, 3, 3, 3, 1, 3, 3,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 4,
	3, 1, 2, 3, 0, 3, 3, 2, 2, 1,
	2, 2, 3, 2, 1, 1, 1, 5, 1, 2,
	4, 2, 0, 1, 0, 3, 5, 1, 0, 1,
	2, 1, 0, 1, 3, 3, 2, 1, 1, 1,
	3, 1, 3, 3, 1, 1, 1, 1, 5, 3,
	1, 1, 3, 1, 1, 1, 1, 2, 2, 1,
	1, 2, 2, 1, 1, 1, 3, 5, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	3, 5, 7, 1, 7, 5, 3, 1, 1, 1,
	1, 1, 3, 5, 1, 1, 1, 1, 1, 1,
	1, 0, 3, 0, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1,
}
var sqlChk = [...]int{

	-1000, -1, -2, 468, -81, -51, -49, -84, -85, -69,
	-86, -80, -98, -102, -90, -104, -142, -3, -37, -39,
	-52, -68, -70, -79, -88, -87, -89, -91, -95, -94,
	-83, -43, -99, -103, -112, -143, -144, -145, 85, 71,
	126, 107, 112, 159, 295, 325, 335, 319, -107, -108,
	354, -38, -50, -101, -100, -4, -10, 27, 41, -40,
	-41, -42, 56, -60, -57, -54, -63, -476, 87, -443,
	-71, -74, -76, -480, 117, 132, 176, 287, -92, -93,
	321, 323, 133, -45, -44, 127, -156, -158, -105, -106,
	-146, -113, -114, -115, -116, -117, -118, -119, -120, -121,
	-122, -123, -124, -125, -126, -127, -128, -129, -130, -131,
	-132, -133, -134, -135, -136, -137, -138, -139, 358, 405,
	42, 368, 72, 120, 329, 21, -5, -6, -7, -8,
	-9, -11, -12, -25, -53, -55, -56, -58, -59, -67,
	-61, -62, -442, -72, -73, -75, -77, -78, 320, -159,
	-157, 465, 418, -14, -19, -20, -15, -16, -18, -21,
	-17, -26, -31, -32, -28, -29, -27, -30, -33, -34,
	-35, -36, -23, -24, -13, -22, 436, 444, -162, -160,
	-161, -169, 342, 426, 382, 468, 468, 468, 468, 468,
	468, 468, 468, 468, 468, 468, 468, 468, 468, 468,
	468, 468, 468, 468, 468, -214, -219, -220, -221, -213,
	-189, -414, -417, 4, -412, -415, 138, 183, 253, 21,
	22, 23, 24, 25, 27, 38, 40, 39, 41, 42,
	45, 48, 49, 47, 52, 53, 54, 55, 56, 57,
	60, 65, 70, 71, 72, 73, 74, 75, 80, 77,
	78, 79, 82, 84, 85, 86, 89, 90, 98, 99,
	100, 101, 102, 103, 107, 110, 109, 112, 115, 116,
	117, 119, 121, 122, 124, 126, 127, 130, 128, 388,
	129, 131, 132, 133, 134, 144, 145, 146, 148, 149,
	151, 153, 157, 158, 160, 164, 166, 167, 168, 169,
	175, 176, 178, 179, 184, 180, 185, 189, 192, 191,
	193, 194, 195, 186, 200, 204, 205, 206, 208, 209,
	212, 213, 214, 215, 216, 219, 218, 221, 224, 225,
	228, 229, 232, 233, 234, 236, 237, 240, 238, 241,
	239, 242, 245, 243, 244, 247, 248, 251, 249, 255,
	258, 173, 260, 261, 263, 264, 265, 281, 268, 269,
	270, 273, 274, 277, 280, 282, 283, 284, 285, 286,
	287, 288, 290, 291, 293, 295, 297, 299, 300, 301,
	302, 303, 304, 305, 307, 308, 310, 311, 312, 313,
	314, 319, 316, 317, 318, 320, 321, 322, 323, 325,
	327, 328, 329, 330, 332, 334, 355, 356, 370, 335,
	336, 337, 338, 339, 340, 341, 345, 349, 346, 347,
	348, 343, 344, 350, 351, 352, 354, 357, 358, 360,
	361, 363, 364, 366, 367, 368, 369, 371, 374, 375,
	376, 372, 373, 381, 379, 380, 383, 384, 385, 386,
	387, 389, 391, 399, 400, 402, 405, 406, 407, 397,
	409, 410, 413, 414, 415, 416, 417, 422, 418, 420,
	423, 424, 425, 431, 430, 437, 438, 440, 441, 442,
	33, 43, 44, 46, 50, 61, 62, 63, 66, 104,
	105, 125, 135, 136, 147, 161, 163, 170, 171, 172,
	190, 196, 198, 202, 222, 257, 259, 275, 279, 292,
	294, 306, 331, 362, 377, 392, 393, 394, 395, 401,
	403, 426, 427, 428, 432, 439, 266, -207, 2, -189,
	-189, 295, 26, 2, 26, 291, 344, 384, 386, 2,
	-466, -259, 2, 26, -193, -189, 87, 159, 342, -207,
	2, -466, -259, 24, 2, -189, 2, -194, 2, 335,
	-189, 468, 82, 229, 65, 331, 351, -110, 400, -109,
	392, 337, -111, -404, 2, 245, -189, 468, 468, 468,
	468, 2, 382, 284, 430, 343, 419, 100, 303, 183,
	396, -461, 2, 4, -415, -412, -223, -222, 382, 100,
	-221, -213, 458, -220, 468, 468, 468, 2, 205, 206,
	302, 301, 351, 352, 468, 468, 468, 2, 25, 59,
	81, 84, 106, 134, 154, 157, 271, -477, 237, 281,
	300, 337, 350, 381, 389, 402, -472, 369, 60, -471,
	419, -486, 407, 115, -306, 100, 229, 158, 414, 386,
	384, 327, 162, 412, 110, 189, 417, 416, 468, 468,
	25, 59, 68, 84, 115, 134, 154, 157, -479, 281,
	300, 334, 337, 350, 381, 389, 407, 402, 2, 430,
	343, 382, 183, 100, 419, 327, 298, -81, 2, 465,
	29, 28, 354, -152, 382, 199, 2, -189, 205, 206,
	2, 468, 468, 155, -461, 2, 205, 206, 2, 199,
	2, 60, 339, 468, 468, 468, 468, 468, 468, 468,
	468, 468, 468, 468, 468, 468, 468, 468, 468, 468,
	468, 468, 468, 468, 468, 468, 468, 468, 468, 468,
	2, -140, 351, 369, 168, 41, 65, 26, 299, 70,
	285, 101, 160, 183, 184, 213, 81, 82, -307, 40,
	206, 205, -358, 383, 338, 344, 379, 400, 87, 420,
	328, 442, 303, 304, 128, 4, 100, 245, 353, 392,
	229, 74, -485, 2, 382, -489, 2, 400, 400, 2,
	-489, 2, -489, 2, -192, 2, 400, 396, -490, 400,
	439, 468, 468, 468, 468, 468, 468, 468, 468, 468,
	468, 468, 468, 468, -157, -159, -158, 468, 468, 468,
	468, 468, -140, 351, 2, 65, 26, -253, -254, 411,
	197, 123, 272, -156, -158, 2, -442, -402, 2, -333,
	-418, -335, 456, 457, 449, 252, 443, -346, 106, 412,
	266, -417, -336, -348, 125, 331, -274, 8, 9, 5,
	6, 7, -196, -379, -342, 404, 137, 256, -226, 469,
	10, 465, -439, -158, -347, 34, 163, 58, -406, -225,
	-381, -389, -385, -386, -493, 48, 54, 53, 389, 244,
	345, 346, 363, 347, 348, 45, 422, 180, 263, 265,
	191, 4, 198, -224, -213, -436, -437, -412, -413, 190,
	196, 192, 362, 193, 194, 195, 44, 306, 148, 149,
	147, 116, 105, 104, 259, 50, 49, 46, 427, -390,
	102, 392, 393, 394, 395, 208, 209, -189, -414, 68,
	92, 93, 91, 96, 95, 231, 230, 97, 94, 353,
	419, 59, 33, 170, 171, 202, 257, 172, 66, -438,
	373, 88, 156, 188, 174, 201, 203, 207, 223, 226,
	246, 250, 254, 276, 278, 326, 359, -494, 428, 135,
	136, 279, 292, 377, 401, 403, 161, 222, 61, 62,
	-444, 307, -445, -207, -444, 468, 468, 470, 468, -247,
	-248, -249, 2, 26, 113, 465, 2, -362, 2, -363,
	-367, -158, 217, -366, 465, -364, 463, -214, 267, -440,
	332, -436, -437, -196, -213, -225, 4, -250, 465, 467,
	100, 382, 69, 183, -301, 465, -189, 26, 266, 396,
	470, -344, 465, 266, 155, 269, -189, 2, 2, 355,
	2, 465, -110, 63, 400, 39, 351, -320, 2, -321,
	-186, -187, -188, -372, 204, 297, 305, 445, 442, -402,
	-473, 155, 448, 396, -402, -275, 467, 2, -367, 170,
	-214, 2, -211, -405, 4, -412, -415, -413, -416, 68,
	-414, 26, 28, 29, 30, 32, 34, 35, 36, 37,
	51, 58, 59, 64, 67, 69, 81, 87, 91, 92,
	94, 93, 95, 96, 97, 106, 108, 111, 113, 114,
	118, 120, 123, 137, 139, 152, 154, 155, 159, 162,
	165, 177, 187, 197, 199, 217, 220, 227, 230, 231,
	252, 256, 262, 266, 267, 271, 272, 289, 296, 309,
	324, 342, 353, 365, 378, 382, 390, 396, 398, 404,
	411, 412, 419, 421, 429, 433, 434, 435, 436, -417,
	2, -367, 170, 2, -216, 170, -367, -219, 2, -410,
	170, -408, 10, -407, 5, 4, -412, -415, -413, 2,
	-198, -189, 2, -210, -405, 2, -229, 170, -214, -215,
	-219, -96, -410, 465, 396, 470, -265, -222, -223, -258,
	-189, 467, -333, 2, -99, 2, -333, 170, 2, -99,
	170, 2, -333, 170, 2, -99, 170, 2, 2, 2,
	402, 2, 84, 170, -189, 382, 99, 2, 318, -478,
	334, 406, 430, 2, 2, 2, 2, 2, 2, 2,
	382, -203, 2, -189, 152, 343, -487, 307, -410, 170,
	2, -410, 170, 2, -217, -219, -217, 183, 200, -198,
	170, 2, 386, 384, 386, 384, 155, 2, 199, 2,
	199, 2, -368, 2, -369, -363, -214, 463, 2, 2,
	2, 2, 2, 170, -189, 382, 99, 2, 215, 2,
	2, 2, 2, 2, 2, 2, 2, 2, -267, 170,
	2, -214, -267, 170, 2, -267, 170, 2, -230, 170,
	2, -229, -198, 170, 2, -411, 170, 2, -410, -411,
	170, 2, -376, 2, -375, -407, 426, -81, 465, -81,
	465, 351, 465, -410, -214, -214, -333, -99, -97, -96,
	155, -333, -99, -152, 152, 2, 100, 382, -140, 2,
	152, 421, 2, 8, 2, -410, 338, 304, 144, 2,
	355, 2, 356, 65, -307, 442, 65, 155, 2, 155,
	2, -291, 2, 436, -464, 2, 266, 155, 2, 155,
	2, 155, 2, 155, 2, 155, 2, 301, 352, 206,
	2, -99, 433, -333, 433, 2, 399, 214, 129, 155,
	-291, 2, 155, 2, 155, 2, 5, 2, 204, 297,
	370, 2, -214, -481, 2, 382, 430, 343, 2, 2,
	77, 78, 155, 2, 155, 2, 155, 442, 2, -284,
	-367, -319, -320, -319, 396, -194, -253, -254, -140, 355,
	2, -163, -282, -165, 152, -309, -310, -166, 227, 139,
	262, -167, -290, 26, 113, -290, -290, 52, 466, 466,
	11, 12, 67, 38, 456, 457, 458, 459, 150, 460,
	461, 454, 455, 453, 446, 447, 451, 210, 211, 83,
	450, 448, 76, 235, 333, 140, 141, 142, 143, 315,
	181, 31, 182, 14, 15, 16, 30, 271, 226, 443,
	174, 359, 449, 17, 18, 19, 201, 203, 254, 43,
	177, -195, -231, -333, -333, -333, -333, -333, 278, 465,
	-280, -328, 463, -158, 465, 465, 465, 5, -401, 8,
	-158, -333, -346, 466, -272, 465, -158, -346, -341, 465,
	331, 463, 465, -349, -333, 5, 465, 467, -446, 437,
	-383, 465, 294, -382, 465, -382, -382, 431, -380, 465,
	444, 438, 465, -380, 465, 465, 152, 465, 465, 465,
	465, 465, 465, 465, 465, 465, 465, 465, 465, 465,
	465, 465, 431, 465, 465, 465, 465, 465, 465, 465,
	465, 465, 470, -444, -250, 465, -276, -370, -333, 458,
	-276, -276, 266, -269, -333, 88, -294, 207, 246, 156,
	223, 326, 188, -330, 469, -330, -357, 444, -158, -364,
	-213, -158, -366, 465, -362, -357, -82, -401, -68, -79,
	-87, -99, -112, -144, -145, 458, -214, 465, 155, 465,
	467, 155, -258, -405, -198, -214, -224, -225, -229, 112,
	-269, -461, -258, -193, 35, -343, -377, -378, -379, -388,
	-384, -387, -391, 48, 54, 53, 389, 244, 345, 346,
	363, 347, 348, 45, 422, 180, 263, 265, 191, 4,
	46, 427, -390, 198, 311, 312, 310, 314, 313, 190,
	196, 192, 362, 193, 194, 195, 44, 306, 148, 149,
	147, 116, 105, 104, 259, 50, 49, 102, 392, 393,
	394, 395, 208, 209, 428, 373, 61, 62, -461, -258,
	152, -404, -269, 35, -320, 2, 106, -408, 39, -491,
	470, 225, -233, 234, 251, 167, 267, 440, 260, -409,
	5, 4, -342, -354, 106, 229, 198, -395, -397, 8,
	-396, 9, -398, 456, 457, -403, -402, 90, 467, -405,
	-174, 316, -173, 23, 27, 117, 424, 130, -240, 185,
	284, 125, 366, 415, -468, -469, 336, 387, 388, 79,
	260, 316, 125, -287, -289, 35, 98, 248, 280, 55,
	178, 239, 240, 368, 432, 125, 316, -185, -441, 436,
	125, -469, 316, -469, -176, 366, 415, -468, -469, 336,
	316, -175, -240, 125, 469, -373, -372, -411, -96, -265,
	470, 470, -405, 458, 125, 125, 125, 125, 2, 2,
	252, 2, 2, 2, 157, -471, -479, 2, 2, 2,
	-214, 170, -252, 266, -463, -266, 382, -214, -216, 170,
	2, -219, 430, -184, -185, 252, 252, 35, 465, 2,
	-200, 170, 2, -190, -189, 183, -441, 252, -368, -227,
	-214, -363, -227, 354, -207, 35, -330, -330, 125, 2,
	2, 2, -189, -177, 470, 57, 322, 125, -177, 125,
	-177, 125, -177, 470, 125, -177, 125, 470, 125, 125,
	466, 470, -376, -376, -410, -150, 436, 155, 87, 465,
	465, -152, -373, 470, -97, -410, -463, -198, 2, -214,
	2, 382, 208, -150, -410, -410, -410, -404, 26, 356,
	2, 301, 352, 78, 356, 2, -214, 382, 100, 183,
	71, -465, 152, -462, 327, -461, -214, 100, -214, 100,
	-214, 100, -214, -214, 2, 2, 2, 2, 75, 75,
	152, 2, 399, 2, 399, 2, -189, -189, -189, 225,
	-214, 152, 382, 183, 382, 183, 100, 382, -177, 470,
	-194, -163, -282, -404, -283, -282, -164, -163, -166, 152,
	305, 416, 248, 357, 212, -310, -309, 26, -333, -314,
	146, 247, -333, -312, -335, 456, 457, -396, -398, -268,
	260, -157, -157, -157, -255, -359, -333, 296, 183, -392,
	-377, -377, -212, -405, 392, -333, -333, -333, -333, -333,
	-333, -333, -333, -333, -333, -333, -333, -333, -333, -333,
	-333, -333, -333, -333, -333, -333, -333, -333, -333, -333,
	-333, -333, -333, -333, -333, -333, -333, -333, -333, -333,
	226, 174, 359, 43, 177, -333, 396, -333, -333, -333,
	-333, 243, 252, 256, 404, 137, 413, 113, 260, -495,
	378, 37, -339, -158, -273, 465, -353, 32, 365, 26,
	-346, 465, 2, -328, -333, -329, -270, -269, -269, 466,
	429, 26, 113, 458, 2, 466, 470, 35, 466, -333,
	-270, -345, -341, -269, -352, -351, 433, -302, -303, 441,
	242, 103, 169, 241, -304, 341, -399, 8, -405, 458,
	-447, 145, 162, 8, -399, -399, 392, 392, -399, -399,
	-399, 465, 466, 2, 466, 2, 466, -333, 2, 466,
	-333, 2, 466, -333, 2, 466, -333, 2, 466, 2,
	-333, -333, -333, -333, -333, -333, -333, -269, -296, 2,
	-393, -269, 4, 441, 242, 103, 169, 241, 341, 5,
	-296, 2, -297, 2, -333, -269, -298, -334, -335, 456,
	457, 449, -346, -299, 2, -333, -270, -333, 51, 220,
	398, -300, -333, 155, -269, -269, 2, -269, 2, -445,
	35, -269, -261, 470, 155, 35, 4, -261, -261, 465,
	466, 470, -295, 166, 238, 233, -295, -362, -294, 207,
	-292, 276, -292, -292, -357, -199, 463, 471, -405, -357,
	-356, -355, 35, -207, 273, -357, -357, 467, 466, -356,
	464, -459, 465, 468, 468, 468, 468, 468, -214, 465,
	-269, -405, 371, 466, 467, 201, 201, 201, 201, 332,
	466, 396, 436, -81, 268, 466, 470, -260, 34, 463,
	-394, 431, 465, 465, -303, 465, 155, -259, -473, 466,
	400, -321, -232, 305, 364, 317, 349, 380, 8, 9,
	8, 9, 470, -405, 470, -474, 81, 396, 69, -324,
	170, 69, -419, -201, 81, -420, -189, 64, 412, 296,
	154, -474, 81, 296, -474, 81, 81, 354, 369, 52,
	-367, 38, 38, 26, -99, 221, 155, 442, 382, 183,
	396, -367, -289, -377, 98, 239, 240, 52, -400, -395,
	456, 457, -400, 52, -400, -400, -400, 436, -216, -367,
	396, 286, -410, 396, 470, 38, 38, 26, -99, 221,
	155, 396, -229, -199, -147, 179, 466, -373, -222, -189,
	467, -333, -99, -333, -99, 125, 2, -487, 215, 465,
	-236, 252, 155, -258, -374, 199, 470, -266, -288, -287,
	252, -218, 170, 2, -214, 125, 125, 465, 121, 303,
	2, 266, 252, -200, 170, -180, 385, 125, -286, 421,
	-315, -99, 465, 106, 35, -315, -277, -278, -371, -279,
	-201, 465, -207, -189, 2, -214, -267, -267, -267, -229,
	-230, -198, -410, -411, -411, -81, -375, 466, 466, 466,
	-149, 270, -148, -189, 5, -152, 421, -235, -325, -324,
	-423, -424, -419, 226, 183, 412, 200, 138, -251, -202,
	-201, 99, -150, -96, -373, -150, -150, -373, -373, -214,
	152, -150, -150, -150, 2, 2, -291, -214, -198, -229,
	-214, -258, -258, -291, -198, -291, -198, -291, -198, -99,
	-333, 351, 152, 152, 467, -291, 303, 100, 382, 284,
	183, -214, -229, -214, -229, -198, -214, -367, -283, -164,
	267, 212, 357, -312, -313, -335, 331, 332, -313, 331,
	332, 8, 9, 8, 9, -168, 361, 255, -267, 470,
	-171, 36, 111, 212, -214, 442, 122, -333, -333, 396,
	-495, 378, -339, 122, -333, 243, 256, 404, 137, 413,
	113, 260, 155, 465, -334, -334, 466, -271, -333, -333,
	464, 473, 466, -254, 470, -253, -333, -269, -269, 466,
	467, -269, -258, 464, 464, 470, 466, -350, -351, 118,
	-333, 396, 396, 396, 396, 465, 466, 467, -452, 277,
	465, 465, 466, 466, 470, 466, 442, 442, 466, 466,
	466, -333, 466, 466, 466, 466, 35, 470, 470, 470,
	466, 470, 470, 470, 466, 466, 155, 466, 466, -305,
	289, 466, 11, 12, 456, 457, 458, 459, 150, 460,
	461, 454, 455, 453, 446, 447, 448, 76, 235, 333,
	14, 15, 16, 201, 177, -334, -334, -334, 466, -337,
	-338, 155, 152, 35, -300, -300, -300, 466, 155, -269,
	466, 466, 465, 466, -327, -326, 434, -370, -262, 2,
	-362, -209, -405, -327, -327, -269, -333, 207, 207, -293,
	421, 266, -295, -362, -356, -401, -332, -331, 153, 36,
	111, 249, 173, -356, -207, -250, -356, -356, -405, -357,
	-357, -355, 466, -460, -401, 466, -263, -365, -440, -254,
	467, -150, -405, -141, 5, 256, -141, -141, -141, -258,
	24, 290, -377, 463, 464, 8, 465, -399, -399, -399,
	-258, 155, -402, -320, 410, 73, 305, 392, -402, -173,
	316, -201, -201, -214, 252, -324, 170, -179, 252, -377,
	-208, -189, 465, 465, 212, 212, -201, -208, 212, 170,
	-201, 170, -208, -208, -467, 305, 261, -333, 228, 303,
	253, -174, 316, -99, -99, -99, 465, -473, 421, 112,
	-214, -229, -214, -218, 316, 250, -224, -400, -400, -287,
	316, -216, -410, 256, -185, -198, -175, -99, -99, -99,
	465, -199, -176, 316, -150, 155, -147, 458, -189, 430,
	-189, -234, -237, -235, -201, -155, 438, 436, 125, -228,
	-214, 463, -150, -410, -214, 125, -250, 252, -410, -410,
	2, 465, 2, -214, 125, 266, 252, -181, 119, -492,
	448, -198, -327, -262, -285, -318, 324, 266, -251, 426,
	-207, -285, -264, 470, 155, 448, 467, -251, 2, -177,
	-177, -177, -177, -177, -81, -81, -150, 470, 465, 448,
	448, 465, -410, -410, 466, 470, -214, -200, 183, 183,
	-206, -190, 466, 470, 467, 465, -150, 155, -46, 436,
	382, 469, -291, -291, -291, 351, 351, -189, -210, -198,
	-214, -211, -229, 152, 152, 416, -313, 267, 232, -359,
	-172, 258, -214, 469, -333, -333, 122, 122, -333, -334,
	-334, -333, 122, 155, 465, -333, -343, 30, 30, 466,
	470, -329, -333, 466, 429, -254, -254, 466, 458, -405,
	466, -341, 120, -333, 390, 242, 169, 241, -304, 241,
	-304, -304, -399, 5, -405, 458, -453, -204, 465, -189,
	434, -253, -399, -380, -380, 466, -392, -377, -333, -333,
	-333, -333, -333, -333, -337, -333, -392, -377, -334, -334,
	-334, -334, -334, -334, -334, -334, -334, -334, -334, -334,
	-334, -334, -334, -334, -334, -334, -334, 113, 252, 260,
	-334, -338, -337, -333, -333, -377, 466, 466, 466, -269,
	-81, -281, 162, -333, -373, 470, -281, -281, 466, -362,
	-362, 465, -333, 207, 464, 470, 472, 448, -250, 467,
	-355, -356, 464, 466, 470, 466, 470, -317, 35, 466,
	-405, 269, 5, 8, 463, 464, -399, 466, 466, 466,
	-258, -333, 396, 396, 125, 252, 423, -425, -420, -333,
	-256, -360, -333, 465, 465, -170, 117, 354, -475, 2,
	421, 125, -177, 125, -177, 440, 465, 465, 396, 436,
	-269, -333, -151, 106, -404, -469, 469, -469, 469, 396,
	396, 436, -269, 396, -411, -150, 2, 2, 2, 466,
	466, 470, -426, 35, 264, 465, 264, -214, -64, 436,
	-372, -401, -216, 35, 125, -184, 2, -308, 421, -199,
	-214, 125, -182, 219, -492, -408, -441, -254, -285, -276,
	253, 80, 466, -327, -278, -262, -333, 2, 466, -148,
	-149, -410, -410, -410, -150, -152, -152, -325, 2, 465,
	-200, -190, 465, -152, -202, 2, -411, -99, 270, -214,
	458, -291, -242, -241, 284, 260, -242, 331, 331, 267,
	146, 216, -171, -199, -333, -333, 122, 30, 30, -333,
	-333, -343, 466, -333, -333, -269, 464, 5, -333, 466,
	466, -333, 466, 467, -454, -189, -333, 466, 466, 466,
	466, 470, 470, 466, 466, 466, 466, -338, 155, 113,
	260, 465, 466, 466, -340, 165, 52, -362, -340, -340,
	-293, -258, -362, -331, -199, 463, -405, -401, -365, 465,
	467, 464, 2, 463, 466, -201, -201, -324, 125, -427,
	81, -429, 67, 138, 87, 252, 256, 412, 296, 64,
	106, 309, 35, 466, 466, 470, -171, -256, -258, 252,
	375, 106, 252, 106, 99, 407, 70, -201, -208, -258,
	-258, -214, 131, 466, 470, 448, 2, 458, 458, -218,
	-216, 131, 466, -199, -238, 186, -201, -424, -421, -422,
	296, -428, -430, 138, 296, -99, -154, -153, -189, 5,
	2, 465, -236, 270, 464, -288, -99, -218, 465, -189,
	266, 465, -199, -183, 218, -492, -408, -180, -311, -309,
	-316, 465, 266, -99, -254, 448, 466, 466, 99, 99,
	-256, 465, 465, -258, 99, 466, -47, -48, 183, 81,
	288, -211, 382, 183, 465, 465, -171, -333, -333, -333,
	466, -254, -405, 458, -448, 284, 466, -333, -333, -334,
	155, 465, -343, -449, 435, -333, -269, -449, -449, 466,
	-401, 2, 463, 2, -324, -208, -212, -205, -189, 138,
	170, 256, 212, 465, -334, -214, 465, 2, -483, 108,
	187, -323, -484, 86, 376, -360, -172, 466, 466, 256,
	256, -333, -377, 465, -177, -177, 466, 466, -333, 396,
	-404, 85, -402, 2, -469, -333, 396, -239, -240, 177,
	-426, 212, -205, 212, -482, 436, 466, 470, 448, 448,
	-234, -155, -65, -66, 397, -372, -250, -256, -214, -256,
	266, -492, -408, -181, -285, 114, -258, 81, -311, -339,
	-150, 465, 465, 466, -256, -256, 466, 465, -150, 470,
	26, 465, 26, 465, -214, -229, -269, -269, 466, -254,
	52, 466, 466, -334, -343, 466, -450, -451, -204, 464,
	2, -429, -205, 252, 421, -333, -191, 465, -333, 187,
	109, 175, -238, 465, -322, 421, 309, -197, 67, -256,
	465, 465, 465, 448, 155, 465, -155, 282, 465, 99,
	248, -153, -336, -336, 466, 35, -66, 9, 35, 466,
	-308, 466, -214, -408, -182, 416, 253, 466, -208, -285,
	-411, -411, -322, 466, 466, -411, -48, -258, -258, 466,
	466, -455, 303, 332, 164, -269, 466, 470, 35, 125,
	166, 466, -431, 236, -189, 466, 109, 175, -239, -258,
	166, -214, -470, 421, -212, 466, -244, -243, -241, -246,
	-245, -241, -269, -402, 85, 282, -269, -214, -257, -361,
	-201, 99, -238, -99, -99, -322, 465, -323, 465, -183,
	354, -326, 466, 466, -323, -322, 466, 466, 466, 466,
	-456, -457, 43, 409, 90, -333, -456, -456, -451, -453,
	138, 436, -432, -435, -434, 266, 360, 156, 283, 466,
	375, 432, -483, 466, 436, -250, -333, -322, 466, 470,
	426, 466, 470, 426, 466, 155, 466, 465, 466, 470,
	-239, -482, -323, -256, -238, -256, -277, -150, -150, -238,
	-323, -150, -458, 124, -457, 293, 151, 331, 293, 151,
	-458, -458, -205, 47, -434, 266, -435, 266, 416, 110,
	47, -431, -238, -243, 177, -245, 155, 282, -258, -361,
	-155, -238, 466, -239, 466, -327, -239, -238, 90, 162,
	391, 248, 30, 448, -433, 248, 322, 57, 354, -433,
	448, -432, 465, 465, 466, -239, -322, -488, 434, -323,
	-239, 331, 274, -457, -333, 22, 256, 106, -333, -483,
	-269, -269, -178, 57, 322, -488, -323, 2, -238, 466,
	466, -238, -239, -239, 396, -239, -488, 465, -488, -269,
	466, -239,
}
var sqlDef = [...]int{

	-2, -2, 1, 2, 3, 4, 5, 6, 8, 10,
	12, 14, 16, 18, 20, 22, 23, 371, 372, 374,
	375, 376, 378, 379, 381, 383, 385, 387, 388, 390,
	392, 394, 395, 396, 397, 398, 400, 402, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 460, 462,
	0, 945, 947, 949, 951, 25, 26, 0, 0, 192,
	194, 196, 0, 221, 223, 225, 226, 228, -2, 0,
	323, 324, 326, 328, -2, -2, 0, 0, 449, 451,
	0, 0, 0, 471, 472, 0, 1036, -2, 465, 467,
	469, 534, 536, 538, 540, 542, 544, 546, 547, 549,
	551, 553, 555, 557, 559, 561, 562, 564, 566, 568,
	570, 572, 574, 576, 578, 580, 582, 584, -2, -2,
	-2, 0, -2, -2, -2, 963, 29, 31, 33, 35,
	37, 39, 41, 61, 277, 278, 280, 282, 284, 287,
	288, 290, 1091, 330, 332, 334, 336, 338, 0, -2,
	1103, 0, 0, 43, 44, 45, 46, 47, 48, 49,
	50, 68, 69, 70, 71, 72, 73, 74, 75, 54,
	56, 57, 63, 64, 66, 52, 0, 0, 1067, 1069,
	1071, 1073, -2, 0, 0, 7, 9, 11, 13, 15,
	17, 19, 21, 373, 377, 380, 382, 384, 386, 389,
	391, 393, 399, 401, 403, 839, 1725, 1739, 1740, 1741,
	1744, 1745, 1746, 1747, 1748, 1749, 2093, 2173, 2174, 1768,
	1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778,
	1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788,
	1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798,
	1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808,
	1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818,
	1819, 1820, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1828,
	1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838,
	1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848,
	1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858,
	1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868,
	1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878,
	1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888,
	1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898,
	1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908,
	1909, 1910, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918,
	1919, 1920, 1921, 1922, 1923, 1924, 1925, 1926, 1927, 1928,
	1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938,
	1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948,
	1949, 1950, 1951, 1952, 1953, 1954, 1955, 1956, 1957, 1958,
	1959, 1960, 1961, 1962, 1963, 1964, 1965, 1966, 1967, 1968,
	1969, 1970, 1971, 1972, 1973, 1974, 1975, 1976, 1977, 1978,
	1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988,
	1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998,
	1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008,
	2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018,
	2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028,
	2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038,
	2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048,
	2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058,
	2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068,
	2069, 2070, 2071, 2072, 2073, 2074, 0, 427, 425, 1719,
	428, 1924, 430, 432, 317, 318, 319, 320, 321, 322,
	0, 442, 436, 441, 443, 445, 446, 447, 448, 422,
	420, 0, 442, 1771, 440, 943, 944, 938, 939, 1958,
	973, 461, -2, -2, -2, 2061, -2, 493, -2, 500,
	2064, 1960, 505, 0, 507, -2, 510, 946, 948, 950,
	27, 28, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 156, -2, -2, -2, -2, 0, 0, 1809,
	1687, 1741, 1690, 1685, 193, 195, 197, 198, 0, 0,
	0, 0, 0, 0, 222, 224, 227, 229, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 254, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, -2,
	0, 0, 0, 0, 0, 0, 0, 0, 750, 742,
	743, 890, 891, 913, 0, 0, 0, 0, 325, 327,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 329, 0,
	0, 0, 0, 0, 0, 0, 255, 363, 364, 0,
	1092, 1092, 0, 0, 0, 0, 173, 164, 0, 0,
	726, 450, 452, 0, 0, 159, 0, 0, 942, 0,
	175, 0, 0, 466, 468, 470, 535, 537, 539, 541,
	543, 545, 548, 550, 552, 554, 556, 558, 560, 563,
	565, 567, 569, 571, 573, 575, 577, 579, 581, 583,
	585, 586, 0, 0, 0, 0, -2, -2, 0, 0,
	0, -2, -2, 0, 0, 0, 0, 0, 0, 0,
	-2, 0, 0, -2, -2, -2, 0, 0, 0, -2,
	-2, 0, 0, 0, 0, 589, 591, 592, 593, 0,
	644, 661, 0, 879, 1093, 975, 953, 966, 975, 955,
	956, 957, 958, 959, 964, 965, 968, 0, 960, 961,
	962, 30, 32, 34, 36, 38, 40, 42, 279, 281,
	283, 285, 289, 291, -2, 1065, 1066, 331, 333, 335,
	337, 339, 453, 0, 455, 0, 590, -2, 0, 1097,
	1097, 1097, 0, 0, 1066, 1064, 0, 458, 459, 514,
	515, 1335, 0, 0, 0, 0, 0, 1584, 1419, 0,
	516, -2, 1450, 1452, 2040, 2061, 1583, 1454, 1455, 1456,
	1457, 1458, 0, 0, 1461, 1462, 1463, 1464, 1465, 0,
	1467, 0, 1471, 1472, 1473, 0, 2045, 1664, 1737, -2,
	1238, 1239, 1240, 1241, 1242, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, 2051, 1733, 0, 1550, 1487, -2, 1758, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, 1818, -2, -2, -2, -2, -2, -2, -2, 1294,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, 2075,
	1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500,
	1501, 0, 2029, 2046, 2047, 2052, 2054, 2048, 2037, 1512,
	-2, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084,
	2085, 2086, 2087, 2088, 2089, 2090, 2091, 1295, -2, 2041,
	2042, 2057, 2058, 2063, 2068, 2069, 2044, 2053, -2, -2,
	1083, 1933, 1086, 839, 1084, 1068, 1070, 0, 1072, 0,
	0, 0, 1077, 1100, 1098, 0, 1139, 1081, 1082, 1157,
	1157, 1181, 0, 1162, 0, 1181, 1092, 1207, 0, 1168,
	1953, 1488, 1489, 0, 1741, 1738, -2, 0, 0, 0,
	0, 0, 0, 0, 423, 0, 429, 431, 0, 0,
	0, 0, 0, 0, 0, 0, 972, 463, 464, 0,
	488, 0, 492, 2036, -2, 1776, 1973, -2, 496, 976,
	980, 981, 982, 983, 0, 0, 0, 0, 0, 502,
	0, 0, 489, 490, 508, 511, 0, 51, 0, 2046,
	1207, 53, 0, 1709, 1763, 1764, 1765, 1766, 1767, 2075,
	2092, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102,
	2103, 2104, 2105, 2106, 2107, 2108, 2109, 2110, 2111, 2112,
	2113, 2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122,
	2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132,
	2133, 2134, 2135, 2136, 2137, 2138, 2139, 2140, 2141, 2142,
	2143, 2144, 2145, 2146, 2147, 2148, 2149, 2150, 2151, 2152,
	2153, 2154, 2155, 2156, 2157, 2158, 2159, 2160, 2161, 2162,
	2163, 2164, 2165, 2166, 2167, 2168, 2169, 2170, 2171, 2172,
	55, 0, 2046, 58, 0, 2046, 0, -2, 62, 1090,
	2046, 176, 177, 1754, 1755, 1759, 1760, 1761, 1762, 65,
	0, 1715, 67, 0, 1712, 76, 0, 2046, 0, 1684,
	-2, 1194, 160, 0, 0, 0, 718, 1681, 1686, 719,
	1691, 0, 199, 200, 201, 202, 203, 2046, 205, 206,
	0, 208, 209, 2046, 211, 212, 0, 214, 230, 231,
	0, 233, 0, 2046, 0, 0, 0, 239, -2, 256,
	0, 253, 0, 243, 244, 246, 247, 248, 249, 250,
	0, 295, 293, 1720, 0, 0, 0, 897, -2, 2046,
	882, 887, 2046, 889, 902, 1723, 0, -2, 0, 1090,
	2046, 990, 746, 747, 748, 749, 0, 314, 0, 1003,
	0, 1005, 0, 1026, 1213, 1157, 1157, 0, 257, 258,
	259, 260, 261, 2046, 0, 0, 0, 266, 0, 268,
	269, 270, 271, 272, 273, 274, 275, 276, 151, 2046,
	342, 361, 151, 2046, 345, 151, 2046, 348, 151, 2046,
	351, 1679, 151, 2046, 354, 355, 2046, 357, 178, 358,
	2046, 360, 0, -2, 416, 1727, -2, 366, 0, 367,
	0, -2, 0, 190, 0, 0, 724, 725, 1194, 162,
	0, 940, 941, 0, 0, 473, 0, 0, 587, 588,
	0, 0, 598, 599, 600, 190, 1961, 1931, 1834, 605,
	0, 608, 611, -2, 0, 0, 0, 0, 615, 0,
	620, 621, 622, 0, 723, 624, 0, 0, 626, 0,
	630, 0, 633, 0, 635, 0, 637, -2, -2, -2,
	648, -2, 0, 652, 0, 654, 0, 0, 0, 0,
	669, 670, 0, 675, 0, 678, 679, 680, 0, 682,
	683, 684, 685, 0, 687, 688, -2, -2, 692, 694,
	0, 701, 0, 705, 0, 709, 0, 594, 595, 151,
	1211, 952, -2, 954, 0, 970, -2, 0, 454, 0,
	457, 1118, 1051, 1048, 0, 1115, 1116, 1052, 0, 0,
	0, 1059, 0, 1095, 1096, 0, 0, 0, 1038, 1039,
	0, 0, 0, 0, 1589, 1590, 1591, 1592, 1593, 1594,
	1597, 1598, 1595, 1596, 1599, 1600, 0, 0, 0, 0,
	0, 1601, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1602, 1603, 1604, 0, 0, 1606, 0,
	1608, 0, 0, 0, 0, 0, 0, 1398, 1400, 1672,
	0, 0, 1605, 1340, 1341, 1342, 1377, 1378, 0, 0,
	1451, 1669, 1668, 1453, 0, 1620, 0, 1460, 1466, 1705,
	-2, 0, 1584, 1615, 0, 0, 1474, 1475, 1476, 0,
	0, 1620, 0, 0, 1663, 1332, 0, 0, 1552, 0,
	1274, 0, 1275, 1276, 0, 1277, 1278, 1291, 1304, 0,
	0, 0, 0, 1308, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1296, 0, 0, 0, 1644, -2, 0, 0,
	0, 0, 0, 1085, 0, 0, 1143, 1673, 1677, 1678,
	1143, 1143, 0, 0, 1621, 1204, 1204, 0, 0, 1200,
	1200, 1200, 1198, 1181, 0, 1181, 1191, 0, 1181, 1181,
	0, -2, 1162, 0, 0, 1191, 0, 1175, 404, 406,
	408, 410, 411, 412, 414, 1208, 1209, 0, 0, 0,
	0, 0, 0, 1742, 0, 0, 0, 1729, 0, 0,
	0, 0, 434, 444, 1092, 0, 1623, 1230, 1233, 1234,
	1235, 1236, 1237, 1243, 1244, 1245, 1246, 1247, 1248, 1249,
	1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259,
	-2, 1292, 1294, 1315, 1281, 1282, 1283, 1284, 1285, 1263,
	1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273,
	1287, 0, 1262, 1262, 1262, 1279, 1280, 1303, 1314, 1306,
	1314, 1310, 1231, 1232, 1297, 1298, 1299, 1300, 0, 438,
	0, 0, 0, 0, -2, 498, 503, 504, 0, 0,
	978, 0, 984, 525, 526, 527, 986, 987, 0, 501,
	528, 529, 530, 531, 532, 533, 0, 1693, 1694, 1695,
	1696, 1699, 1700, 0, 0, 499, 518, 506, 0, 512,
	77, 935, 116, 0, 935, 935, 0, 0, 138, 0,
	0, 0, 0, 0, 0, 101, 112, 89, 90, 0,
	0, 0, 0, 59, 861, 0, 864, 0, 0, 0,
	0, 0, 0, 0, 877, 0, 0, 924, 0, 1089,
	0, 100, 0, 95, 79, 0, 0, 0, 102, 114,
	0, 142, 144, 0, 0, 181, 1193, 0, 1194, 717,
	0, 0, 1742, 1689, 0, 0, 0, 0, 232, 234,
	0, 236, 237, 238, 0, 896, 0, 245, 242, 286,
	811, 2046, 0, 0, 312, 307, 0, 309, 860, 2046,
	858, 1724, 0, 880, 883, 0, 0, 0, 0, 903,
	0, 2046, 908, 1711, 1750, 1751, 992, 0, 316, 0,
	1006, 1008, 0, 0, 1214, 0, 1216, 1217, 0, 263,
	264, 265, 0, 340, 0, 149, 150, 0, 343, 0,
	346, 0, 349, 0, 0, 352, 0, 0, 0, 0,
	1092, 0, 0, 0, 0, 166, 0, 0, 0, 0,
	0, 0, 190, 0, 1194, 190, 190, 1194, 475, 1194,
	477, 0, 0, 601, 190, 190, 190, 606, 607, 609,
	610, -2, -2, 702, 612, 613, 672, 0, 0, 0,
	671, 623, 0, 711, 1949, 721, 672, 1809, 672, 1809,
	672, 1809, 634, 636, 639, 664, 647, 651, 0, 0,
	0, 656, 0, 658, 0, 660, 672, 673, 676, 681,
	686, 0, 0, 0, 0, 0, 0, 0, 878, 0,
	969, 1118, 1051, 456, 1042, 1117, 1043, 1050, 1053, 0,
	0, 1055, 0, 1057, 0, 1113, 1114, 1121, 1122, 0,
	1132, 1133, 1125, 0, -2, 0, 0, 1128, 1129, 1061,
	0, 1078, 1079, 1080, 1104, 1105, 922, 0, 2173, 1336,
	1225, 1337, 1338, 1708, 0, 1343, 1344, 1345, 1346, 1347,
	1348, 1349, 1350, 1351, 1352, -2, -2, -2, -2, -2,
	-2, -2, -2, 1361, 1362, 1363, 1364, 1365, 1366, 1367,
	1368, 1369, 1370, 1371, -2, -2, -2, 1375, 1376, -2,
	1607, 1609, 0, 1672, 0, -2, 0, -2, -2, -2,
	-2, 1395, 0, 1397, 1402, 1404, 1406, 0, 0, 0,
	0, 1671, 1416, 1655, 1656, 0, 0, 1586, 1587, 1588,
	1401, 0, 1420, 1670, 1667, 0, 0, 1619, 1103, 1478,
	0, 0, 0, 0, 1485, 1470, 1617, 0, 1616, 0,
	0, 0, 1627, 0, 1662, 1658, 0, 1706, 1331, 1318,
	1319, 1320, 1321, 1322, 1323, 1333, 0, 1703, 1730, 1736,
	1560, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1513, 1514, 1515, 1516, 1517, 0, 1519, 1520,
	0, 1522, 1523, 0, 1525, 1526, 0, 1528, 1529, 1530,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1532,
	0, 1630, -2, -2, -2, -2, -2, -2, -2, -2,
	0, 1534, 0, 1536, 1621, 1641, 0, 0, 1421, 0,
	0, 0, 1584, 0, 1539, 1621, 1649, 0, 0, 0,
	0, 0, 1621, 0, 1654, 0, 1546, 0, 1548, 1087,
	0, 0, 1220, 0, 0, 0, 1676, 1220, 1220, 0,
	1138, 0, 0, 1201, 1202, 1203, 0, 0, 1204, 0,
	1195, 1199, 1196, 1197, 1191, 1154, 0, 0, 1710, 1191,
	1160, 1190, 0, 839, 1180, 1191, 1191, 0, -2, 1164,
	1181, 0, 0, 405, 407, 409, 413, 415, 0, 0,
	1103, -2, 190, 838, 0, 0, 0, 0, 0, 424,
	426, 0, 0, 418, 0, 421, 0, 1221, 1224, 0,
	0, -2, 0, 0, 1316, 0, 0, 0, 0, 491,
	0, 977, 985, 0, 522, 0, 524, 0, 1697, 1701,
	1698, 1702, 0, 513, 0, 0, 0, 0, 934, 120,
	2046, 0, 153, 0, 0, 805, 1716, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 86, 91, 0, 0, 0, 0, 0,
	0, 0, 862, 863, 865, 872, 874, 0, 868, 1704,
	0, 0, 869, 0, 871, 873, 875, 0, 0, 0,
	0, 0, 1090, 0, 0, 0, 0, 88, 92, 0,
	0, 0, 0, 1683, 190, 0, 161, 181, 1682, 1692,
	0, 204, 207, 210, 213, 0, 240, 0, 0, 752,
	729, 0, 0, 294, 190, 0, 0, 308, 856, 859,
	0, 839, 2046, 895, 1722, 0, 0, 0, 0, 0,
	901, 0, 0, 0, 2046, 994, 1000, 0, 1220, 0,
	1024, 1009, 0, 0, 0, 1024, 1028, 1029, 1031, 1032,
	0, 0, 1215, 0, 267, 362, 151, 151, 151, 1680,
	151, 151, 179, 356, 359, 365, 417, 1092, 1092, 190,
	188, 1909, 186, 183, 185, 0, 0, 0, 753, 755,
	756, 757, 758, 0, 1751, 0, 1863, 1751, 0, 1012,
	1014, 0, 157, 163, 190, 0, 306, 474, 479, 596,
	0, 602, 603, 604, 641, 666, 614, 616, 617, 618,
	0, 722, 720, 625, 672, 628, 672, 631, 672, 650,
	653, 655, 0, 0, 0, 668, 0, 0, 0, 0,
	0, 0, 0, 706, 707, 708, 710, 1212, 1046, 1047,
	1049, 0, 1058, 0, 0, 1127, -2, -2, 1126, 1130,
	1131, -2, -2, -2, -2, 1054, 0, 1063, 1060, 0,
	1112, 920, 921, 0, 0, 0, 0, -2, -2, 0,
	0, 0, 1417, 0, -2, 1396, 1399, 1403, 1405, 1407,
	0, 0, 0, 0, 0, 0, 1610, 0, 1612, 1418,
	1665, 1668, 1582, 0, 0, 1102, 1103, 1103, 0, 1484,
	0, 1618, 0, 1625, 1626, 0, 1477, 0, 1659, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1486, 0,
	0, 0, 1286, 1260, 0, 1314, 1312, 1313, 1307, 1314,
	1311, 0, 1518, 1521, 1524, 1527, 0, 0, 0, 0,
	1507, 0, 0, 0, 1511, 1531, 0, 1533, 1535, 0,
	0, 1537, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1424, 1425, 1426, 1538, 1647,
	1648, 0, 0, 0, 0, 0, 0, 1544, 0, 1653,
	1545, 1547, 1092, 1140, 1135, 1219, 0, 1674, 1194, 1142,
	1144, 1675, 1713, 1135, 1135, 0, 1622, 0, 0, 1185,
	0, 0, 0, 1187, 1158, 0, 0, 1152, 0, 1148,
	1149, 1150, 1151, 1159, 839, 1189, 1161, 1165, 1730, 0,
	1191, 0, 1176, 0, 1178, 1210, 0, 1170, 1173, 0,
	0, 191, 1743, 215, 219, 220, 216, 217, 218, 433,
	0, 0, 1624, 0, 1226, 0, 0, 0, 0, 0,
	437, 0, 487, -2, 520, 521, 523, 0, 519, 117,
	935, 0, 0, 926, 0, 122, 2046, 131, 0, 781,
	0, 1714, 0, 0, 0, 0, 937, 0, 0, 2046,
	151, 2046, 151, 134, 137, 0, 141, 139, 0, 0,
	772, 78, 935, 81, 85, 93, 0, 0, 0, 99,
	0, 0, 0, 928, 0, 866, 867, 870, 876, 60,
	0, 930, 885, 886, 925, 923, 143, 83, 87, 94,
	0, 932, 80, 0, 154, 0, 190, 1688, 0, 0,
	0, 0, 0, 751, 822, 0, 0, 0, 0, 300,
	296, 0, 305, 311, 310, 0, 0, 0, -2, 888,
	898, 0, 900, 912, 0, 0, 0, 996, 1000, 0,
	999, 1090, 1103, 315, 1001, 1024, 0, 0, 0, 1011,
	1007, 1004, 1220, 0, 0, 0, 0, 0, 262, 341,
	344, 347, 350, 353, 368, 369, 165, 0, 0, 0,
	0, 0, 190, 0, 0, 0, 0, 0, 1751, 1751,
	0, 1718, 0, 0, 0, 0, 158, 0, 476, 0,
	0, 0, 627, 629, 632, 657, 659, 672, 695, 696,
	767, 0, 767, 0, 0, 1056, 0, 1124, 1062, 1106,
	1107, 0, 922, 0, 1339, 1380, 0, 0, -2, 0,
	0, 1384, 0, 0, 0, -2, 0, 0, 0, 1611,
	1613, 0, 1667, 1479, 0, 0, 0, 1483, 1468, 1469,
	1585, 1628, 1657, 1661, 0, 1324, 1325, 1326, 1327, 1328,
	1329, 1330, 0, 1707, 1731, 1735, 1558, 1559, 1563, 1721,
	0, 0, 0, 1305, 1309, 1490, 0, 0, 0, 0,
	0, 0, 0, 1629, 1640, 1642, 1422, 1423, 1427, 1428,
	1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, -2, -2,
	-2, 1440, 1441, 1442, -2, -2, -2, 0, 0, 0,
	1643, 1645, 1646, 1650, 1651, 0, 1541, 1542, 1543, 1652,
	0, 1137, 0, 1218, 1141, 0, 1137, 1137, 1099, 1183,
	0, 0, 1206, 0, 1155, 0, 1156, 0, 1188, 0,
	1163, 1166, 1167, 1177, 0, 1169, 0, 1172, 0, 1479,
	-2, 435, 419, 0, 0, 1228, 0, 1289, 1293, 1317,
	439, 1192, 0, 0, 0, 0, 152, 779, 804, 0,
	0, 915, 922, 0, 0, 124, 0, 0, 0, 132,
	0, 0, 129, 0, 136, 140, 0, 0, 0, 0,
	0, 96, 97, 98, 0, 103, 0, 104, 0, 0,
	0, 0, 0, 0, 180, 155, 235, 894, 241, 761,
	810, 0, 812, 0, 730, 0, 0, 811, 292, 0,
	299, 0, 860, 0, 0, 881, 899, 0, 0, 0,
	0, 0, 998, 1000, 0, 991, 992, 1120, 1002, 1022,
	-2, 1021, 0, 1103, 1030, 1027, 1033, 1034, 0, 187,
	0, 182, 184, 0, 168, 0, 0, 754, 759, 0,
	0, 0, 0, 0, 1013, 1015, 0, 174, 0, 597,
	619, 667, 697, 766, 0, 0, 699, 0, 0, 1123,
	1110, 1111, 1108, 922, 1382, 1386, 0, 0, 0, 1388,
	-2, 0, 1410, -2, -2, 1614, 1666, 1459, 1103, 1480,
	1482, 1660, 1334, 0, 1565, 1562, 0, 1549, 1261, 1502,
	1503, 0, 0, 1506, 1508, 1509, 1510, 1639, 0, 0,
	0, 0, 1540, 1088, 1554, 0, 0, 1145, 1554, 1554,
	1184, 0, 1186, 1153, 1146, 0, 1731, 1179, 1171, 0,
	0, 1222, 1227, 0, 1288, 118, 119, 121, 0, 780,
	0, 783, 0, 0, 0, 0, 790, 791, 0, 0,
	0, 0, 0, 826, 835, 0, 1112, 0, 0, 0,
	126, 146, 0, 0, 936, 0, 0, 151, 151, 0,
	0, 927, 0, 0, 0, 0, 106, 0, 0, 929,
	931, 0, 0, 933, 769, 0, 822, 814, 815, 816,
	0, 821, 823, 0, 0, 739, 0, 735, 0, 0,
	732, 752, 729, 0, 297, 857, 892, 839, 0, 911,
	0, 0, 0, 988, 1000, 0, 993, 994, 1024, 1119,
	0, 0, 0, 1010, 1120, 0, 189, 190, 0, 0,
	0, 0, 0, 0, 0, 190, 478, 480, 0, 0,
	486, 765, 0, 0, 0, 0, 1109, 1390, -2, -2,
	1411, 0, 1732, 1734, 1103, 0, 1551, 0, 0, -2,
	0, 0, 0, 1074, 0, 1136, 1134, 1075, 1076, 1205,
	0, 1174, 0, 1229, 123, 0, 784, 785, 1717, 787,
	0, 789, 792, 0, 795, 1753, 0, 799, 806, 827,
	0, 761, 0, 832, 833, 916, 917, 837, 0, 125,
	127, 145, 919, 0, 128, 135, 0, 0, 82, 0,
	0, 1803, 109, 107, 105, 84, 0, 729, 768, 0,
	813, 0, 824, 825, 737, 0, 731, 0, 0, 0,
	0, 0, 298, 301, 0, 304, 0, 0, 912, 0,
	0, 0, 995, 996, 313, 0, 0, 0, 1024, 1035,
	167, 0, 0, 837, 0, 0, 803, 0, 172, 0,
	482, 0, 484, 0, 698, 700, 0, 0, 1481, 1569,
	0, 1504, 1505, -2, 0, 1448, 1553, 1555, 0, 1147,
	1223, 782, 786, 0, 0, 0, 843, 0, 0, 0,
	830, 831, 769, 0, 808, 0, 0, 148, 0, 0,
	0, 0, 0, 0, 0, 0, 727, 0, 0, 740,
	0, 736, 733, 734, 761, 0, 302, 303, 0, 837,
	0, 835, 0, 997, 998, 0, 1017, 1018, 1020, 1025,
	0, 0, 835, 837, 802, 0, 481, 0, 0, 703,
	704, 0, 0, 0, 0, 1564, 1449, 0, 0, 0,
	0, 794, 848, 0, 0, 0, 828, 829, 826, 0,
	0, 839, 130, 0, 918, 837, 0, 773, 0, 0,
	776, 0, 0, 110, 1803, 108, 0, 0, 0, 818,
	820, 741, 769, 739, 893, 835, 0, 761, 0, 989,
	0, 1019, 190, 190, 761, 835, 190, 483, 485, 1561,
	1581, 1570, -2, 2009, 1806, 0, 1581, 1581, 1556, 1557,
	0, 0, 796, 844, 845, 0, 840, 841, 842, 1752,
	797, 798, 807, 834, 0, 843, 147, 761, 770, 0,
	0, 771, 0, 0, 113, 0, 115, 0, 817, 0,
	729, 738, 761, 0, 769, 0, 1220, 169, 170, 769,
	761, 171, 1566, 0, 0, 1572, 1573, 1574, 1575, 1576,
	1567, 1568, 788, 0, 846, 0, 847, 0, 0, 0,
	0, 848, 133, 774, 0, 777, 0, 111, 0, 819,
	728, 769, 837, 909, 835, 1016, 800, 769, 0, 1578,
	1579, 0, 0, 0, 849, 0, 852, 853, 0, 850,
	0, 826, 0, 0, 764, 909, 835, 906, 0, 761,
	801, 1577, 1580, 1571, 793, 851, 854, 855, 836, 809,
	0, 0, 760, 762, 763, 904, 761, 910, 769, 769,
	0, 769, 909, 775, 0, 909, 907, 0, 905, 0,
	769, 778,
}
var sqlTok1 = [...]int{

	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 454, 3, 460, 455, 3,
	465, 466, 458, 456, 470, 457, 467, 459, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 473, 3,
	446, 448, 447, 451, 469, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 463, 3, 464, 461, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 471, 453, 472, 449,
}
var sqlTok2 = [...]int{

	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 243, 244, 245, 246, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257,
}
var sqlTok3 = [...]int{
	57600, 258, 57601, 259, 57602, 260, 57603, 261, 57604, 262,
	57605, 263, 57606, 264, 57607, 265, 57608, 266, 57609, 267,
	57610, 268, 57611, 269, 57612, 270, 57613, 271, 57614, 272,
	57615, 273, 57616, 274, 57617, 275, 57618, 276, 57619, 277,
	57620, 278, 57621, 279, 57622, 280, 57623, 281, 57624, 282,
	57625, 283, 57626, 284, 57627, 285, 57628, 286, 57629, 287,
	57630, 288, 57631, 289, 57632, 290, 57633, 291, 57634, 292,
	57635, 293, 57636, 294, 57637, 295, 57638, 296, 57639, 297,
	57640, 298, 57641, 299, 57642, 300, 57643, 301, 57644, 302,
	57645, 303, 57646, 304, 57647, 305, 57648, 306, 57649, 307,
	57650, 308, 57651, 309, 57652, 310, 57653, 311, 57654, 312,
	57655, 313, 57656, 314, 57657, 315, 57658, 316, 57659, 317,
	57660, 318, 57661, 319, 57662, 320, 57663, 321, 57664, 322,
	57665, 323, 57666, 324, 57667, 325, 57668, 326, 57669, 327,
	57670, 328, 57671, 329, 57672, 330, 57673, 331, 57674, 332,
	57675, 333, 57676, 334, 57677, 335, 57678, 336, 57679, 337,
	57680, 338, 57681, 339, 57682, 340, 57683, 341, 57684, 342,
	57685, 343, 57686, 344, 57687, 345, 57688, 346, 57689, 347,
	57690, 348, 57691, 349, 57692, 350, 57693, 351, 57694, 352,
	57695, 353, 57696, 354, 57697, 355, 57698, 356, 57699, 357,
	57700, 358, 57701, 359, 57702, 360, 57703, 361, 57704, 362,
	57705, 363, 57706, 364, 57707, 365, 57708, 366, 57709, 367,
	57710, 368, 57711, 369, 57712, 370, 57713, 371, 57714, 372,
	57715, 373, 57716, 374, 57717, 375, 57718, 376, 57719, 377,
	57720, 378, 57721, 379, 57722, 380, 57723, 381, 57724, 382,
	57725, 383, 57726, 384, 57727, 385, 57728, 386, 57729, 387,
	57730, 388, 57731, 389, 57732, 390, 57733, 391, 57734, 392,
	57735, 393, 57736, 394, 57737, 395, 57738, 396, 57739, 397,
	57740, 398, 57741, 399, 57742, 400, 57743, 401, 57744, 402,
	57745, 403, 57746, 404, 57747, 405, 57748, 406, 57749, 407,
	57750, 408, 57751, 409, 57752, 410, 57753, 411, 57754, 412,
	57755, 413, 57756, 414, 57757, 415, 57758, 416, 57759, 417,
	57760, 418, 57761, 419, 57762, 420, 57763, 421, 57764, 422,
	57765, 423, 57766, 424, 57767, 425, 57768, 426, 57769, 427,
	57770, 428, 57771, 429, 57772, 430, 57773, 431, 57774, 432,
	57775, 433, 57776, 434, 57777, 435, 57778, 436, 57779, 437,
	57780, 438, 57781, 439, 57782, 440, 57783, 441, 57784, 442,
	57785, 443, 57786, 444, 57787, 445, 57788, 450, 57789, 452,
	57790, 462, 57791, 468, 0,
}

var sqlErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	sqlDebug        = 0
	sqlErrorVerbose = false
)

type sqlLexer interface {
	Lex(lval *sqlSymType) int
	Error(s string)
}

type sqlParser interface {
	Parse(sqlLexer) int
	Lookahead() int
}

type sqlParserImpl struct {
	lval  sqlSymType
	stack [sqlInitialStackSize]sqlSymType
	char  int
}

func (p *sqlParserImpl) Lookahead() int {
	return p.char
}

func sqlNewParser() sqlParser {
	return &sqlParserImpl{}
}

const sqlFlag = -1000

func sqlTokname(c int) string {
	if c >= 1 && c-1 < len(sqlToknames) {
		if sqlToknames[c-1] != "" {
			return sqlToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func sqlStatname(s int) string {
	if s >= 0 && s < len(sqlStatenames) {
		if sqlStatenames[s] != "" {
			return sqlStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func sqlErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !sqlErrorVerbose {
		return "syntax error"
	}

	for _, e := range sqlErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + sqlTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := sqlPact[state]
	for tok := TOKSTART; tok-1 < len(sqlToknames); tok++ {
		if n := base + tok; n >= 0 && n < sqlLast && sqlChk[sqlAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if sqlDef[state] == -2 {
		i := 0
		for sqlExca[i] != -1 || sqlExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; sqlExca[i] >= 0; i += 2 {
			tok := sqlExca[i]
			if tok < TOKSTART || sqlExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if sqlExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += sqlTokname(tok)
	}
	return res
}

func sqllex1(lex sqlLexer, lval *sqlSymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = sqlTok1[0]
		goto out
	}
	if char < len(sqlTok1) {
		token = sqlTok1[char]
		goto out
	}
	if char >= sqlPrivate {
		if char < sqlPrivate+len(sqlTok2) {
			token = sqlTok2[char-sqlPrivate]
			goto out
		}
	}
	for i := 0; i < len(sqlTok3); i += 2 {
		token = sqlTok3[i+0]
		if token == char {
			token = sqlTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = sqlTok2[1] /* unknown char */
	}
	if sqlDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", sqlTokname(token), uint(char))
	}
	return char, token
}

func sqlParse(sqllex sqlLexer) int {
	return sqlNewParser().Parse(sqllex)
}

func (sqlrcvr *sqlParserImpl) Parse(sqllex sqlLexer) int {
	var sqln int
	var sqlVAL sqlSymType
	var sqlDollar []sqlSymType
	_ = sqlDollar // silence set and not used
	sqlS := sqlrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	sqlstate := 0
	sqlrcvr.char = -1
	sqltoken := -1 // sqlrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		sqlstate = -1
		sqlrcvr.char = -1
		sqltoken = -1
	}()
	sqlp := -1
	goto sqlstack

ret0:
	return 0

ret1:
	return 1

sqlstack:
	/* put a state and value onto the stack */
	if sqlDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", sqlTokname(sqltoken), sqlStatname(sqlstate))
	}

	sqlp++
	if sqlp >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlS[sqlp] = sqlVAL
	sqlS[sqlp].yys = sqlstate

sqlnewstate:
	sqln = sqlPact[sqlstate]
	if sqln <= sqlFlag {
		goto sqldefault /* simple state */
	}
	if sqlrcvr.char < 0 {
		sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
	}
	sqln += sqltoken
	if sqln < 0 || sqln >= sqlLast {
		goto sqldefault
	}
	sqln = sqlAct[sqln]
	if sqlChk[sqln] == sqltoken { /* valid shift */
		sqlrcvr.char = -1
		sqltoken = -1
		sqlVAL = sqlrcvr.lval
		sqlstate = sqln
		if Errflag > 0 {
			Errflag--
		}
		goto sqlstack
	}

sqldefault:
	/* default state action */
	sqln = sqlDef[sqlstate]
	if sqln == -2 {
		if sqlrcvr.char < 0 {
			sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if sqlExca[xi+0] == -1 && sqlExca[xi+1] == sqlstate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			sqln = sqlExca[xi+0]
			if sqln < 0 || sqln == sqltoken {
				break
			}
		}
		sqln = sqlExca[xi+1]
		if sqln < 0 {
			goto ret0
		}
	}
	if sqln == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			sqllex.Error(sqlErrorMessage(sqlstate, sqltoken))
			Nerrs++
			if sqlDebug >= 1 {
				__yyfmt__.Printf("%s", sqlStatname(sqlstate))
				__yyfmt__.Printf(" saw %s\n", sqlTokname(sqltoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for sqlp >= 0 {
				sqln = sqlPact[sqlS[sqlp].yys] + sqlErrCode
				if sqln >= 0 && sqln < sqlLast {
					sqlstate = sqlAct[sqln] /* simulate a shift of "error" */
					if sqlChk[sqlstate] == sqlErrCode {
						goto sqlstack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if sqlDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", sqlS[sqlp].yys)
				}
				sqlp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if sqlDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", sqlTokname(sqltoken))
			}
			if sqltoken == sqlEofCode {
				goto ret1
			}
			sqlrcvr.char = -1
			sqltoken = -1
			goto sqlnewstate /* try again in the same state */
		}
	}

	/* reduction by production sqln */
	if sqlDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", sqln, sqlStatname(sqlstate))
	}

	sqlnt := sqln
	sqlpt := sqlp
	_ = sqlpt // guard against "declared and not used"

	sqlp -= sqlR2[sqln]
	// sqlp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if sqlp+1 >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlVAL = sqlS[sqlp+1]

	/* consult goto table to find next state */
	sqln = sqlR1[sqln]
	sqlg := sqlPgo[sqln]
	sqlj := sqlg + sqlS[sqlp].yys + 1

	if sqlj >= sqlLast {
		sqlstate = sqlAct[sqlg]
	} else {
		sqlstate = sqlAct[sqlj]
		if sqlChk[sqlstate] != -sqln {
			sqlstate = sqlAct[sqlg]
		}
	}
	// dummy call; replaced with literal code
	switch sqlnt {

	case 1:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1116
		{
			sqllex.(*lexer).SetStmt(sqlDollar[1].union.stmt())
		}
	case 2:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1121
		{
			return helpWith(sqllex, "")
		}
	case 7:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1125
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 9:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1126
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 11:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1127
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 13:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1128
		{
			return helpWith(sqllex, "GRANT")
		}
	case 15:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1129
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 17:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1130
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 19:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1131
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 21:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1132
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 24:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1136
		{
			sqlVAL.union.val = tree.Statement(nil)
		}
	case 27:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1145
		{
			return helpWith(sqllex, "ALTER USER")
		}
	case 28:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1146
		{
			return helpWith(sqllex, "ALTER")
		}
	case 30:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1149
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 32:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1150
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 34:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1151
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 36:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1152
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 38:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1153
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 40:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1154
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 42:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1155
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 51:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1209
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 53:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1235
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 55:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1246
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 58:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1261
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 59:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1265
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[3].union.unresolvedObjectName(), Options: sqlDollar[4].union.seqOpts(), IfExists: false}
		}
	case 60:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1269
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[5].union.unresolvedObjectName(), Options: sqlDollar[6].union.seqOpts(), IfExists: true}
		}
	case 62:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1280
		{
			return helpWith(sqllex, "ALTER USER")
		}
	case 65:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1292
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 67:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1311
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 76:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1343
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 77:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1347
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[3].union.unresolvedObjectName(), IfExists: false, Cmds: sqlDollar[4].union.alterTableCmds()}
		}
	case 78:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1351
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[5].union.unresolvedObjectName(), IfExists: true, Cmds: sqlDollar[6].union.alterTableCmds()}
		}
	case 79:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1357
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[3].union.tableIndexName(), IfExists: false, Cmds: sqlDollar[4].union.alterIndexCmds()}
		}
	case 80:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1361
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[5].union.tableIndexName(), IfExists: true, Cmds: sqlDollar[6].union.alterIndexCmds()}
		}
	case 81:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1367
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   tree.Expr(nil),
			}
		}
	case 82:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1376
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   sqlDollar[9].union.expr(),
			}
		}
	case 83:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1387
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: tree.Expr(nil)}
		}
	case 84:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1391
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: sqlDollar[9].union.expr()}
		}
	case 85:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1397
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 86:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1405
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				All:          true,
			}
		}
	case 87:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1415
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 88:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1419
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), All: true}
		}
	case 91:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1429
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[5].union.slct(),
			}
		}
	case 92:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1440
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[5].union.slct()}
		}
	case 93:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1447
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:  tree.TableIndexName{Table: name},
				Rows:          sqlDollar[6].union.slct(),
				RelocateLease: true,
			}
		}
	case 94:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1459
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), RelocateLease: true}
		}
	case 95:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1466
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 96:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1474
		{

			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: sqlDollar[4].union.expr()}
		}
	case 97:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1479
		{
			sqlVAL.union.val = &tree.SetZoneConfig{Options: sqlDollar[4].union.kvOptions()}
		}
	case 98:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1483
		{

			sqlVAL.union.val = &tree.SetZoneConfig{SetDefault: true}
		}
	case 99:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1488
		{
			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: tree.DNull}
		}
	case 100:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1494
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{Database: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 101:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1502
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
			}
			sqlVAL.union.val = s
		}
	case 102:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1513
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[3].union.tableIndexName(),
			}
			sqlVAL.union.val = s
		}
	case 103:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1523
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 104:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1533
		{
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 105:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1542
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[9].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			s.AllIndexes = true
			sqlVAL.union.val = s
		}
	case 106:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1553
		{
			err := errors.New("index name should not be specified in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION ... OF INDEX")
			return setErr(sqllex, err)
		}
	case 107:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1559
		{
			err := errors.New("index wildcard unsupported in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION <partition> OF INDEX <tablename>@*")
			return setErr(sqllex, err)
		}
	case 108:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1567
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), "."))}}
		}
	case 109:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1571
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), ".")), Value: sqlDollar[3].union.expr()}}
		}
	case 110:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1575
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), ".")), Value: sqlDollar[5].union.expr()})
		}
	case 111:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1579
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), "."))})
		}
	case 112:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1585
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 113:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:1590
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{
				TableOrIndex: tree.TableIndexName{Table: name},
				From:         sqlDollar[7].union.exprs(),
				To:           sqlDollar[11].union.exprs(),
			}
		}
	case 114:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1601
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName()}
		}
	case 115:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:1605
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName(), From: sqlDollar[7].union.exprs(), To: sqlDollar[11].union.exprs()}
		}
	case 116:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1611
		{
			sqlVAL.union.val = tree.AlterTableCmds{sqlDollar[1].union.alterTableCmd()}
		}
	case 117:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1615
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterTableCmds(), sqlDollar[3].union.alterTableCmd())
		}
	case 118:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1622
		{
			sqlVAL.union.val = &tree.AlterTableRenameColumn{Column: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 119:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1627
		{
			sqlVAL.union.val = &tree.AlterTableRenameConstraint{Constraint: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 120:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1632
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[2].union.colDef()}
		}
	case 121:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1637
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[5].union.colDef()}
		}
	case 122:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1642
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[3].union.colDef()}
		}
	case 123:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1647
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[6].union.colDef()}
		}
	case 124:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1652
		{
			sqlVAL.union.val = &tree.AlterTableSetDefault{Column: tree.Name(sqlDollar[3].str), Default: sqlDollar[4].union.expr()}
		}
	case 125:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1657
		{
			sqlVAL.union.val = &tree.AlterTableDropNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 126:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1662
		{
			sqlVAL.union.val = &tree.AlterTableDropStored{Column: tree.Name(sqlDollar[3].str)}
		}
	case 127:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1667
		{
			sqlVAL.union.val = &tree.AlterTableSetNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 128:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1672
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     true,
				Column:       tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 129:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1681
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     false,
				Column:       tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 130:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1693
		{
			sqlVAL.union.val = &tree.AlterTableAlterColumnType{
				Column:    tree.Name(sqlDollar[3].str),
				ToType:    sqlDollar[6].union.colType(),
				Collation: sqlDollar[7].str,
				Using:     sqlDollar[8].union.expr(),
			}
		}
	case 131:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1703
		{
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      sqlDollar[2].union.constraintDef(),
				ValidationBehavior: sqlDollar[3].union.validationBehavior(),
			}
		}
	case 132:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1710
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "alter constraint")
		}
	case 133:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:1714
		{
			sqlVAL.union.val = &tree.AlterTableAlterPrimaryKey{
				Columns:    sqlDollar[7].union.idxElems(),
				Sharded:    sqlDollar[9].union.shardedIndexDef(),
				Interleave: sqlDollar[10].union.interleave(),
			}
		}
	case 134:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1722
		{
			sqlVAL.union.val = &tree.AlterTableValidateConstraint{
				Constraint: tree.Name(sqlDollar[3].str),
			}
		}
	case 135:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1729
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     true,
				Constraint:   tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 136:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1738
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     false,
				Constraint:   tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 137:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1747
		{
			sqlVAL.union.val = &tree.AlterTableSetAudit{Mode: sqlDollar[3].union.auditMode()}
		}
	case 138:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1752
		{
			sqlVAL.union.val = &tree.AlterTablePartitionBy{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 139:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1759
		{

			sqlVAL.union.val = &tree.AlterTableInjectStats{
				Stats: sqlDollar[3].union.expr(),
			}
		}
	case 140:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1767
		{
			sqlVAL.union.val = tree.AuditModeReadWrite
		}
	case 141:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1768
		{
			sqlVAL.union.val = tree.AuditModeDisable
		}
	case 142:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1772
		{
			sqlVAL.union.val = tree.AlterIndexCmds{sqlDollar[1].union.alterIndexCmd()}
		}
	case 143:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1776
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterIndexCmds(), sqlDollar[3].union.alterIndexCmd())
		}
	case 144:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1782
		{
			sqlVAL.union.val = &tree.AlterIndexPartitionBy{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 145:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1790
		{
			sqlVAL.union.val = sqlDollar[3].union.expr()
		}
	case 146:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1794
		{
			sqlVAL.union.val = nil
		}
	case 147:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1800
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 148:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1804
		{
			sqlVAL.union.val = nil
		}
	case 149:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1811
		{
			sqlVAL.union.val = tree.DropCascade
		}
	case 150:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1815
		{
			sqlVAL.union.val = tree.DropRestrict
		}
	case 151:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1819
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 152:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1825
		{
			sqlVAL.union.val = tree.ValidationSkip
		}
	case 153:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1829
		{
			sqlVAL.union.val = tree.ValidationDefault
		}
	case 154:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1855
		{
			sqlVAL.union.val = &tree.Backup{DescriptorCoverage: tree.AllDescriptors, To: sqlDollar[3].union.partitionedBackup(), IncrementalFrom: sqlDollar[5].union.exprs(), AsOf: sqlDollar[4].union.asOfClause(), Options: sqlDollar[6].union.kvOptions()}
		}
	case 155:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1859
		{
			sqlVAL.union.val = &tree.Backup{Targets: sqlDollar[2].union.targetList(), To: sqlDollar[4].union.partitionedBackup(), IncrementalFrom: sqlDollar[6].union.exprs(), AsOf: sqlDollar[5].union.asOfClause(), Options: sqlDollar[7].union.kvOptions()}
		}
	case 156:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1862
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 157:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1885
		{
			sqlVAL.union.val = &tree.Restore{DescriptorCoverage: tree.AllDescriptors, From: sqlDollar[3].union.partitionedBackups(), AsOf: sqlDollar[4].union.asOfClause(), Options: sqlDollar[5].union.kvOptions()}
		}
	case 158:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1889
		{
			sqlVAL.union.val = &tree.Restore{Targets: sqlDollar[2].union.targetList(), From: sqlDollar[4].union.partitionedBackups(), AsOf: sqlDollar[5].union.asOfClause(), Options: sqlDollar[6].union.kvOptions()}
		}
	case 159:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1892
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 160:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1896
		{
			sqlVAL.union.val = tree.PartitionedBackup{sqlDollar[1].union.expr()}
		}
	case 161:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1900
		{
			sqlVAL.union.val = tree.PartitionedBackup(sqlDollar[2].union.exprs())
		}
	case 162:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1906
		{
			sqlVAL.union.val = []tree.PartitionedBackup{sqlDollar[1].union.partitionedBackup()}
		}
	case 163:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1910
		{
			sqlVAL.union.val = append(sqlDollar[1].union.partitionedBackups(), sqlDollar[3].union.partitionedBackup())
		}
	case 164:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1916
		{
			sqlVAL.str = strings.ToUpper(sqlDollar[1].str)
		}
	case 165:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1953
		{

			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[4].union.expr()}, Options: sqlDollar[6].union.kvOptions()}
		}
	case 166:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1958
		{
			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[3].union.expr()}, Options: sqlDollar[4].union.kvOptions()}
		}
	case 167:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1962
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[7].union.expr()}, Options: sqlDollar[9].union.kvOptions()}
		}
	case 168:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1968
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[6].union.expr()}, Options: sqlDollar[7].union.kvOptions()}
		}
	case 169:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:1973
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateFile: sqlDollar[6].union.expr(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 170:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:1978
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateDefs: sqlDollar[5].union.tblDefs(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 171:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:1983
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: sqlDollar[5].union.nameList(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 172:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1988
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: nil, FileFormat: sqlDollar[4].str, Files: sqlDollar[7].union.exprs(), Options: sqlDollar[9].union.kvOptions()}
		}
	case 173:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1992
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 174:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2008
		{
			sqlVAL.union.val = &tree.Export{Query: sqlDollar[7].union.slct(), FileFormat: sqlDollar[3].str, File: sqlDollar[4].union.expr(), Options: sqlDollar[5].union.kvOptions()}
		}
	case 175:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2011
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 176:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2015
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 177:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2019
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 178:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2027
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 179:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2031
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 180:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2037
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 181:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2041
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 182:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2047
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 183:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2051
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 184:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2055
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 185:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2059
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 186:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2065
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 187:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2069
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[3].union.kvOption())
		}
	case 188:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2075
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 189:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2079
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 190:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2083
		{
			sqlVAL.union.val = nil
		}
	case 191:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2089
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CopyFrom{
				Table:   name,
				Columns: sqlDollar[3].union.nameList(),
				Stdin:   true,
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 193:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2103
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 195:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2104
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 197:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2105
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 198:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2106
		{
			return helpWith(sqllex, "CANCEL")
		}
	case 199:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2116
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.CancelJob,
			}
		}
	case 200:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2124
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 201:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2126
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 202:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2129
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 203:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2139
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 204:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2148
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 205:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2156
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 206:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2158
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 207:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2162
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 208:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2165
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 209:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2175
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 210:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2184
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 211:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2192
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 212:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2194
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 213:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2198
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 214:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2201
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 215:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2205
		{
			sqlVAL.union.val = &tree.CommentOnDatabase{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 216:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2209
		{
			sqlVAL.union.val = &tree.CommentOnTable{Table: sqlDollar[4].union.unresolvedObjectName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 217:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2213
		{
			varName, err := sqlDollar[4].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[4].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = &tree.CommentOnColumn{ColumnItem: columnItem, Comment: sqlDollar[6].union.strPtr()}
		}
	case 218:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2226
		{
			sqlVAL.union.val = &tree.CommentOnIndex{Index: sqlDollar[4].union.tableIndexName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 219:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2232
		{
			t := sqlDollar[1].str
			sqlVAL.union.val = &t
		}
	case 220:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2237
		{
			var str *string
			sqlVAL.union.val = str
		}
	case 222:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2249
		{
			return helpWith(sqllex, "CREATE USER")
		}
	case 224:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2250
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 227:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2252
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 228:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2253
		{
		}
	case 229:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2254
		{
			return helpWith(sqllex, "CREATE")
		}
	case 230:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2257
		{
			return unimplemented(sqllex, "create aggregate")
		}
	case 231:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2258
		{
			return unimplemented(sqllex, "create cast")
		}
	case 232:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2259
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create constraint")
		}
	case 233:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2260
		{
			return unimplemented(sqllex, "create conversion")
		}
	case 234:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2261
		{
			return unimplemented(sqllex, "create def conv")
		}
	case 235:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2262
		{
			return unimplemented(sqllex, "create extension "+sqlDollar[6].str)
		}
	case 236:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2263
		{
			return unimplemented(sqllex, "create extension "+sqlDollar[3].str)
		}
	case 237:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2264
		{
			return unimplemented(sqllex, "create foreign table")
		}
	case 238:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2265
		{
			return unimplemented(sqllex, "create fdw")
		}
	case 239:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2266
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 240:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2267
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 241:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2268
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create language "+sqlDollar[6].str)
		}
	case 242:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2269
		{
			return unimplementedWithIssue(sqllex, 41649)
		}
	case 243:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2270
		{
			return unimplemented(sqllex, "create operator")
		}
	case 244:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2271
		{
			return unimplemented(sqllex, "create publication")
		}
	case 245:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2272
		{
			return unimplemented(sqllex, "create rule")
		}
	case 246:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2273
		{
			return unimplementedWithIssueDetail(sqllex, 26443, "create")
		}
	case 247:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2274
		{
			return unimplemented(sqllex, "create server")
		}
	case 248:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2275
		{
			return unimplemented(sqllex, "create subscription")
		}
	case 249:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2276
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "create text")
		}
	case 250:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2277
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create")
		}
	case 251:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2280
		{
		}
	case 252:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2281
		{
		}
	case 253:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2284
		{
		}
	case 254:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2285
		{
		}
	case 255:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2288
		{
		}
	case 256:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2289
		{
		}
	case 257:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2292
		{
			return unimplemented(sqllex, "drop aggregate")
		}
	case 258:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2293
		{
			return unimplemented(sqllex, "drop cast")
		}
	case 259:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2294
		{
			return unimplemented(sqllex, "drop collation")
		}
	case 260:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2295
		{
			return unimplemented(sqllex, "drop conversion")
		}
	case 261:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2296
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "drop")
		}
	case 262:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2297
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[5].str)
		}
	case 263:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2298
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[3].str)
		}
	case 264:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2299
		{
			return unimplemented(sqllex, "drop foreign table")
		}
	case 265:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2300
		{
			return unimplemented(sqllex, "drop fdw")
		}
	case 266:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2301
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop function")
		}
	case 267:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2302
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop language "+sqlDollar[4].str)
		}
	case 268:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2303
		{
			return unimplemented(sqllex, "drop operator")
		}
	case 269:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2304
		{
			return unimplemented(sqllex, "drop publication")
		}
	case 270:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2305
		{
			return unimplemented(sqllex, "drop rule")
		}
	case 271:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2306
		{
			return unimplementedWithIssueDetail(sqllex, 26443, "drop")
		}
	case 272:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2307
		{
			return unimplemented(sqllex, "drop server")
		}
	case 273:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2308
		{
			return unimplemented(sqllex, "drop subscription")
		}
	case 274:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2309
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "drop text")
		}
	case 275:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2310
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "drop type")
		}
	case 276:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2311
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "drop")
		}
	case 279:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2315
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 281:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2316
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 283:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2317
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 285:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2318
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 286:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2320
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 287:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2321
		{
		}
	case 289:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2322
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 291:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2323
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 292:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2333
		{
			sqlVAL.union.val = &tree.CreateStats{
				Name:        tree.Name(sqlDollar[3].str),
				ColumnNames: sqlDollar[4].union.nameList(),
				Table:       sqlDollar[6].union.tblExpr(),
				Options:     *sqlDollar[7].union.createStatsOptions(),
			}
		}
	case 293:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2341
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 294:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2345
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 295:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2349
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 296:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2355
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 297:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2359
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
			}
		}
	case 298:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2368
		{

			sqlVAL.union.val = sqlDollar[3].union.createStatsOptions()
		}
	case 299:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2375
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 300:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2381
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{}
		}
	case 301:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2387
		{
			sqlVAL.union.val = sqlDollar[1].union.createStatsOptions()
		}
	case 302:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2391
		{
			a := sqlDollar[1].union.createStatsOptions()
			b := sqlDollar[2].union.createStatsOptions()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 303:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2402
		{

			value, _ := constant.Float64Val(sqlDollar[2].union.numVal().AsConstantValue())
			if value < 0.0 || value >= 1.0 {
				sqllex.Error("THROTTLING fraction must be between 0 and 1")
				return 1
			}
			sqlVAL.union.val = &tree.CreateStatsOptions{
				Throttling: value,
			}
		}
	case 304:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2414
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 305:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2422
		{
			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				SinkURI: sqlDollar[5].union.expr(),
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 306:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2430
		{

			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 307:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2440
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[1].union.tablePatterns()}
		}
	case 308:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2444
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 309:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2450
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()}
		}
	case 310:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2454
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedObjectName().ToUnresolvedName())
		}
	case 311:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2461
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 312:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2465
		{

			sqlVAL.union.val = nil
		}
	case 313:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2479
		{
			sqlVAL.union.val = &tree.Delete{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[4].union.tblExpr(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[6].union.expr()),
				OrderBy:   sqlDollar[7].union.orderBy(),
				Limit:     sqlDollar[8].union.limit(),
				Returning: sqlDollar[9].union.retClause(),
			}
		}
	case 314:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2489
		{
			return helpWith(sqllex, "DELETE")
		}
	case 315:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2492
		{
			return unimplementedWithIssueDetail(sqllex, 40963, "delete using")
		}
	case 316:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2493
		{
		}
	case 317:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2501
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeAll}
		}
	case 318:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2504
		{
			return unimplemented(sqllex, "discard plans")
		}
	case 319:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2505
		{
			return unimplemented(sqllex, "discard sequences")
		}
	case 320:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2506
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 321:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2507
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 322:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2508
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 325:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2517
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 327:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2518
		{
			return helpWith(sqllex, "DROP USER")
		}
	case 328:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2519
		{
		}
	case 329:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2520
		{
			return helpWith(sqllex, "DROP")
		}
	case 331:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2523
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 333:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2524
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 335:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2525
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 337:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2526
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 339:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2527
		{
			return helpWith(sqllex, "DROP SEQUENCE")
		}
	case 340:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2535
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 341:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2539
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 342:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2542
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 343:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2550
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 344:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2554
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 345:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2557
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 346:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2565
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 347:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2569
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 348:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2572
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 349:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2580
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[3].union.newTableIndexNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 350:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2588
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[5].union.newTableIndexNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 351:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2595
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 352:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2603
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[3].str),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 353:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2611
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[5].str),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 354:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2618
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 355:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2626
		{
			sqlVAL.union.val = &tree.DropUser{Names: sqlDollar[3].union.exprs(), IfExists: false}
		}
	case 356:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2630
		{
			sqlVAL.union.val = &tree.DropUser{Names: sqlDollar[5].union.exprs(), IfExists: true}
		}
	case 357:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2633
		{
			return helpWith(sqllex, "DROP USER")
		}
	case 358:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2641
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[3].union.exprs(), IfExists: false}
		}
	case 359:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2645
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[5].union.exprs(), IfExists: true}
		}
	case 360:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2648
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 361:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2652
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 362:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2657
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 363:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2680
		{
			sqlVAL.union.val = &tree.Explain{Statement: sqlDollar[2].union.stmt()}
		}
	case 364:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2683
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 365:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2685
		{
			sqlVAL.union.val = &tree.Explain{Options: sqlDollar[3].union.strs(), Statement: sqlDollar[5].union.stmt()}
		}
	case 366:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2689
		{
			sqlVAL.union.val = &tree.Explain{Options: []string{"DISTSQL", "ANALYZE"}, Statement: sqlDollar[3].union.stmt()}
		}
	case 367:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2693
		{
			sqlVAL.union.val = &tree.Explain{Options: []string{"DISTSQL", "ANALYZE"}, Statement: sqlDollar[3].union.stmt()}
		}
	case 368:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2697
		{
			sqlVAL.union.val = &tree.Explain{Options: append(sqlDollar[4].union.strs(), "ANALYZE"), Statement: sqlDollar[6].union.stmt()}
		}
	case 369:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2701
		{
			sqlVAL.union.val = &tree.Explain{Options: append(sqlDollar[4].union.strs(), "ANALYZE"), Statement: sqlDollar[6].union.stmt()}
		}
	case 370:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2708
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 373:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2712
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 377:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2715
		{
			return helpWith(sqllex, "DELETE")
		}
	case 380:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2717
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 382:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2718
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 384:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2719
		{
			return helpWith(sqllex, "INSERT")
		}
	case 386:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2720
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 389:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2722
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 391:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2723
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 393:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2724
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 395:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2727
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 399:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2732
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 401:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2733
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 403:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2734
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 405:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2739
		{
			return helpWith(sqllex, "DELETE")
		}
	case 407:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2740
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 409:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2741
		{
			return helpWith(sqllex, "INSERT")
		}
	case 410:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2743
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 413:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2747
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 415:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2748
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 416:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2752
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 417:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2756
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 418:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2766
		{
			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.colTypes(),
				Statement: sqlDollar[5].union.stmt(),
			}
		}
	case 419:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2774
		{

			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.colTypes(),
				Statement: &tree.CannedOptPlan{Plan: sqlDollar[7].str},
			}
		}
	case 420:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2782
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 421:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2786
		{
			sqlVAL.union.val = sqlDollar[2].union.colTypes()
		}
	case 422:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2790
		{
			sqlVAL.union.val = []*types.T(nil)
		}
	case 423:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2800
		{
			sqlVAL.union.val = &tree.Execute{
				Name:   tree.Name(sqlDollar[2].str),
				Params: sqlDollar[3].union.exprs(),
			}
		}
	case 424:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2807
		{

			sqlVAL.union.val = &tree.Execute{
				Name:        tree.Name(sqlDollar[2].str),
				Params:      sqlDollar[3].union.exprs(),
				DiscardRows: true,
			}
		}
	case 425:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2815
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 426:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2819
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 427:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2823
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 428:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2833
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[2].str)}
		}
	case 429:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2837
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[3].str)}
		}
	case 430:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2841
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 431:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2845
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 432:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2848
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 433:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2868
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 434:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2872
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 435:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2876
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: true}
		}
	case 436:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2879
		{
			return helpWith(sqllex, "GRANT")
		}
	case 437:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2899
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 438:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2903
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 439:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2907
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[5].union.nameList(), Members: sqlDollar[7].union.nameList(), AdminOption: true}
		}
	case 440:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2910
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 441:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2915
		{
			sqlVAL.union.val = privilege.List{privilege.ALL}
		}
	case 442:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2919
		{
			privList, err := privilege.ListFromStrings(sqlDollar[1].union.nameList().ToStrings())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = privList
		}
	case 443:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2929
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 444:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2933
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 450:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2947
		{
			return helpWith(sqllex, "RESET")
		}
	case 452:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2948
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 453:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2956
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 454:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2960
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[3].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 455:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2963
		{
			return helpWith(sqllex, "RESET")
		}
	case 456:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2971
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: tree.DefaultVal{}}
		}
	case 457:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2974
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 458:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2985
		{
			sqlVAL.union.val = &tree.SetVar{Name: "database", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 459:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2988
		{
			return helpWith(sqllex, "USE")
		}
	case 461:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2992
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 462:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2993
		{
		}
	case 463:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2994
		{
			return unimplemented(sqllex, "set constraints")
		}
	case 464:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2995
		{
			return unimplementedWithIssue(sqllex, 32562)
		}
	case 466:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2999
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 468:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3000
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 470:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3001
		{
			return helpWith(sqllex, "USE")
		}
	case 473:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3017
		{
			return helpWith(sqllex, "SCRUB")
		}
	case 474:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3032
		{
			sqlVAL.union.val = &tree.Scrub{Typ: tree.ScrubDatabase, Database: tree.Name(sqlDollar[4].str), AsOf: sqlDollar[5].union.asOfClause()}
		}
	case 475:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3035
		{
			return helpWith(sqllex, "SCRUB DATABASE")
		}
	case 476:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3053
		{
			sqlVAL.union.val = &tree.Scrub{
				Typ:     tree.ScrubTable,
				Table:   sqlDollar[4].union.unresolvedObjectName(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: sqlDollar[6].union.scrubOptions(),
			}
		}
	case 477:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3061
		{
			return helpWith(sqllex, "SCRUB TABLE")
		}
	case 478:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3065
		{
			sqlVAL.union.val = sqlDollar[3].union.scrubOptions()
		}
	case 479:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3069
		{
			sqlVAL.union.val = tree.ScrubOptions{}
		}
	case 480:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3075
		{
			sqlVAL.union.val = tree.ScrubOptions{sqlDollar[1].union.scrubOption()}
		}
	case 481:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3079
		{
			sqlVAL.union.val = append(sqlDollar[1].union.scrubOptions(), sqlDollar[3].union.scrubOption())
		}
	case 482:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3085
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{}
		}
	case 483:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3089
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{IndexNames: sqlDollar[3].union.nameList()}
		}
	case 484:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3093
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{}
		}
	case 485:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3097
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{ConstraintNames: sqlDollar[3].union.nameList()}
		}
	case 486:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3101
		{
			sqlVAL.union.val = &tree.ScrubOptionPhysical{}
		}
	case 487:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3112
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: sqlDollar[6].union.expr()}
		}
	case 488:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3115
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 491:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3125
		{
			sqlVAL.union.val = &tree.SetVar{Values: sqlDollar[4].union.exprs()}
		}
	case 492:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3141
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 493:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3145
		{
			sqlVAL.union.val = sqlDollar[2].union.stmt()
		}
	case 494:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3150
		{
			sqlVAL.union.val = &tree.SetSessionCharacteristics{Modes: sqlDollar[6].union.transactionModes()}
		}
	case 495:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3167
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[3].union.transactionModes()}
		}
	case 496:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3170
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 497:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3172
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[4].union.transactionModes()}
		}
	case 498:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3175
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 499:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3179
		{

			varName := sqlDollar[1].union.strs()
			if len(varName) == 1 && varName[0] == "tracing" {
				sqlVAL.union.val = &tree.SetTracing{Values: sqlDollar[3].union.exprs()}
			} else {
				sqlVAL.union.val = &tree.SetVar{Name: strings.Join(sqlDollar[1].union.strs(), "."), Values: sqlDollar[3].union.exprs()}
			}
		}
	case 501:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3198
		{

			sqlVAL.union.val = &tree.SetVar{Name: "timezone", Values: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 502:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3205
		{

			sqlVAL.union.val = &tree.SetVar{Name: "search_path", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 503:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3210
		{

			sqlVAL.union.val = &tree.SetSessionAuthorizationDefault{}
		}
	case 504:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3215
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 506:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3220
		{
			return unimplemented(sqllex, "set from current")
		}
	case 507:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3221
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 508:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3229
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 509:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3234
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 510:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3241
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 511:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3245
		{
			sqlVAL.union.val = append([]string{sqlDollar[1].str}, sqlDollar[2].union.strs()...)
		}
	case 512:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3251
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 513:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3255
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 515:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3262
		{
			sqlVAL.union.val = tree.Expr(&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}})
		}
	case 518:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3283
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 519:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3287
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 520:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3293
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 521:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3297
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 522:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3301
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 523:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3305
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 524:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3309
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 525:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3315
		{
			sqlVAL.union.val = tree.Low
		}
	case 526:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3319
		{
			sqlVAL.union.val = tree.Normal
		}
	case 527:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3323
		{
			sqlVAL.union.val = tree.High
		}
	case 528:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3334
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 529:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3338
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 530:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3342
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 532:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3347
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 533:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3351
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 535:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3364
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 537:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3365
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 539:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3366
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 541:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3367
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 543:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3368
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 545:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3369
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 548:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3371
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 550:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3372
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 552:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3373
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 554:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3374
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 556:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3375
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 558:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3376
		{
			return helpWith(sqllex, "SHOW QUERIES")
		}
	case 560:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3377
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 563:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3379
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 565:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3380
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 567:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3381
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 569:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3382
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 571:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3383
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 573:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3384
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 575:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3385
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 577:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3386
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 579:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3387
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 581:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3388
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 583:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3389
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 585:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3391
		{
			return helpWith(sqllex, "SHOW")
		}
	case 586:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3398
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[2].str}
		}
	case 587:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3399
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[3].str}
		}
	case 588:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3400
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 592:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3411
		{
			sqlVAL.str = "client_encoding"
		}
	case 594:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3414
		{
			sqlVAL.str = "timezone"
		}
	case 595:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3415
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 596:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3429
		{
			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 597:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3433
		{

			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[7].union.unresolvedObjectName(), UsingJSON: true}
		}
	case 598:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3437
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 599:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3448
		{

			id, err := sqlDollar[3].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ShowHistogram{HistogramID: id}
		}
	case 600:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3456
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 601:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3464
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupDefaultDetails,
				Path:    sqlDollar[3].union.expr(),
				Options: sqlDollar[4].union.kvOptions(),
			}
		}
	case 602:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3472
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:              tree.BackupDefaultDetails,
				ShouldIncludeSchemas: true,
				Path:                 sqlDollar[4].union.expr(),
				Options:              sqlDollar[5].union.kvOptions(),
			}
		}
	case 603:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3481
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupRangeDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 604:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3490
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupFileDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 605:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3498
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 606:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3508
		{
			sqlVAL.union.val = &tree.ShowClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), ".")}
		}
	case 607:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3512
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 608:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3515
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 609:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3517
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 610:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3520
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 611:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3522
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 612:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3526
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 613:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3529
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 614:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3537
		{
			sqlVAL.union.val = &tree.ShowColumns{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 615:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3540
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 616:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3548
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 617:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3552
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsDB: true, Database: tree.Name(sqlDollar[5].str)}
		}
	case 618:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3556
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsIndex: true, Index: sqlDollar[5].union.tableIndexName()}
		}
	case 619:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3560
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 620:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3563
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 621:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3571
		{
			sqlVAL.union.val = &tree.ShowDatabases{WithComment: sqlDollar[3].union.bool()}
		}
	case 622:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3574
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 623:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3587
		{
			lst := sqlDollar[3].union.targetListPtr()
			if lst != nil && lst.ForRoles {
				sqlVAL.union.val = &tree.ShowRoleGrants{Roles: lst.Roles, Grantees: sqlDollar[4].union.nameList()}
			} else {
				sqlVAL.union.val = &tree.ShowGrants{Targets: lst, Grantees: sqlDollar[4].union.nameList()}
			}
		}
	case 624:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3595
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 625:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3603
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 626:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3606
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 627:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3608
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 628:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3612
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 629:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3616
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 630:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3619
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 631:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3621
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 632:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3625
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 633:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3628
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 634:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3636
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 635:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3639
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 636:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3641
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 637:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3644
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 638:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3652
		{
			sqlVAL.union.val = &tree.ShowQueries{All: false, Cluster: sqlDollar[2].union.bool()}
		}
	case 639:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3655
		{
			return helpWith(sqllex, "SHOW QUERIES")
		}
	case 640:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3657
		{
			sqlVAL.union.val = &tree.ShowQueries{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 641:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3660
		{
			return helpWith(sqllex, "SHOW QUERIES")
		}
	case 642:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3664
		{
			sqlVAL.union.val = true
		}
	case 643:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3666
		{
			sqlVAL.union.val = true
		}
	case 644:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3668
		{
			sqlVAL.union.val = false
		}
	case 645:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3678
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: true}
		}
	case 646:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3682
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: false}
		}
	case 647:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3685
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 648:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3686
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 649:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3688
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[3].union.slct()}
		}
	case 650:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3692
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[5].union.slct(), Block: true}
		}
	case 651:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3695
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 652:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3697
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
			}
		}
	case 653:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3705
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				Block: true,
			}
		}
	case 654:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3713
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 655:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3722
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceRaw, Compact: sqlDollar[2].union.bool()}
		}
	case 656:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3725
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 657:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3727
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceKV, Compact: sqlDollar[2].union.bool()}
		}
	case 658:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3730
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 659:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3732
		{

			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceReplica, Compact: sqlDollar[2].union.bool()}
		}
	case 660:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3736
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 661:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3739
		{
			sqlVAL.union.val = true
		}
	case 662:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3740
		{
			sqlVAL.union.val = false
		}
	case 663:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3748
		{
			sqlVAL.union.val = &tree.ShowSessions{Cluster: sqlDollar[2].union.bool()}
		}
	case 664:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3751
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 665:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3753
		{
			sqlVAL.union.val = &tree.ShowSessions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 666:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3756
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 667:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3764
		{
			sqlVAL.union.val = &tree.ShowTables{TableNamePrefix: tree.TableNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
				WithComment: sqlDollar[7].union.bool()}
		}
	case 668:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3774
		{
			sqlVAL.union.val = &tree.ShowTables{TableNamePrefix: tree.TableNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
				WithComment: sqlDollar[5].union.bool()}
		}
	case 669:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3784
		{
			sqlVAL.union.val = &tree.ShowTables{WithComment: sqlDollar[3].union.bool()}
		}
	case 670:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3787
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 671:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3790
		{
			sqlVAL.union.val = true
		}
	case 672:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3791
		{
			sqlVAL.union.val = false
		}
	case 673:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3798
		{
			sqlVAL.union.val = &tree.ShowSchemas{Database: tree.Name(sqlDollar[4].str)}
		}
	case 674:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3802
		{
			sqlVAL.union.val = &tree.ShowSchemas{}
		}
	case 675:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3805
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 676:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3812
		{
			sqlVAL.union.val = &tree.ShowSequences{Database: tree.Name(sqlDollar[4].str)}
		}
	case 677:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3816
		{
			sqlVAL.union.val = &tree.ShowSequences{}
		}
	case 678:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3819
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 679:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3826
		{

			sqlVAL.union.val = &tree.ShowSyntax{Statement: sqlDollar[3].str}
		}
	case 680:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3830
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 681:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3838
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_isolation"}
		}
	case 682:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3843
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_priority"}
		}
	case 683:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3848
		{

			sqlVAL.union.val = &tree.ShowTransactionStatus{}
		}
	case 684:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3852
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 685:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3860
		{
			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[3].union.unresolvedObjectName()}
		}
	case 686:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3864
		{

			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 687:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3868
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 691:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3881
		{
			sqlVAL.union.val = &tree.ShowUsers{}
		}
	case 692:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3884
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 693:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3892
		{
			sqlVAL.union.val = &tree.ShowRoles{}
		}
	case 694:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3895
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 695:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3899
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[6].str)}}
		}
	case 696:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3903
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{Database: tree.Name(sqlDollar[6].str)}}
		}
	case 697:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3907
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 698:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3915
		{
			name := sqlDollar[9].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 699:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3923
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 700:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3930
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[9].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 701:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3937
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 702:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3941
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 703:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:3952
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: tree.TableIndexName{Table: name},
			}
		}
	case 704:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:3960
		{
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: sqlDollar[5].union.tableIndexName(),
			}
		}
	case 705:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3966
		{
			return helpWith(sqllex, "SHOW RANGE")
		}
	case 706:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3975
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 707:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3980
		{
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: sqlDollar[5].union.tableIndexName()}
		}
	case 708:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3984
		{
			sqlVAL.union.val = &tree.ShowRanges{DatabaseName: tree.Name(sqlDollar[5].str)}
		}
	case 709:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3987
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 710:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3991
		{

			sqlVAL.union.val = &tree.ShowFingerprints{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 711:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3998
		{
			tmp := sqlDollar[2].union.targetList()
			sqlVAL.union.val = &tmp
		}
	case 712:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4003
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 713:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4123
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 714:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4127
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 715:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4131
		{

			sqlVAL.union.val = tree.TargetList{
				Tables:   tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}},
				ForRoles: sqlDollar[1].str == "role",
			}
		}
	case 716:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4170
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{sqlDollar[1].union.unresolvedName()}}
		}
	case 717:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4174
		{
			remainderPats := sqlDollar[3].union.tablePatterns()
			sqlVAL.union.val = tree.TargetList{Tables: append(tree.TablePatterns{sqlDollar[1].union.unresolvedName()}, remainderPats...)}
		}
	case 718:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4179
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 719:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4183
		{
			sqlVAL.union.val = tree.TargetList{Databases: sqlDollar[2].union.nameList()}
		}
	case 720:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4192
		{
			sqlVAL.union.val = tree.TargetList{ForRoles: true, Roles: sqlDollar[2].union.nameList()}
		}
	case 722:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4199
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 723:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4203
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 724:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4215
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
			}
		}
	case 725:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4224
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 726:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4227
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 727:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4263
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Interleave:    sqlDollar[8].union.interleave(),
				Defs:          sqlDollar[6].union.tblDefs(),
				AsSource:      nil,
				PartitionBy:   sqlDollar[9].union.partitionBy(),
				Temporary:     sqlDollar[2].union.persistenceType(),
				StorageParams: sqlDollar[10].union.storageParams(),
			}
		}
	case 728:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:4277
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Interleave:    sqlDollar[11].union.interleave(),
				Defs:          sqlDollar[9].union.tblDefs(),
				AsSource:      nil,
				PartitionBy:   sqlDollar[12].union.partitionBy(),
				Temporary:     sqlDollar[2].union.persistenceType(),
				StorageParams: sqlDollar[13].union.storageParams(),
			}
		}
	case 729:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4293
		{
			sqlVAL.union.val = nil
		}
	case 730:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4297
		{

			sqlVAL.union.val = nil
		}
	case 731:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4303
		{

			sqlVAL.union.val = sqlDollar[3].union.storageParams()
		}
	case 732:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4308
		{
			return unimplemented(sqllex, "create table with oids")
		}
	case 733:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4314
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 734:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4318
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 735:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4324
		{
			sqlVAL.union.val = []tree.StorageParam{sqlDollar[1].union.storageParam()}
		}
	case 736:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4328
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParams(), sqlDollar[3].union.storageParam())
		}
	case 737:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4334
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Interleave:    nil,
				Defs:          sqlDollar[5].union.tblDefs(),
				AsSource:      sqlDollar[8].union.slct(),
				StorageParams: sqlDollar[6].union.storageParams(),
			}
		}
	case 738:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:4346
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Interleave:    nil,
				Defs:          sqlDollar[8].union.tblDefs(),
				AsSource:      sqlDollar[11].union.slct(),
				StorageParams: sqlDollar[9].union.storageParams(),
			}
		}
	case 739:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4359
		{
		}
	case 740:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4360
		{
		}
	case 741:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4361
		{
			return unimplemented(sqllex, "create table as with no data")
		}
	case 742:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4379
		{
			sqlVAL.union.val = true
		}
	case 743:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4380
		{
			sqlVAL.union.val = true
		}
	case 744:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4381
		{
			sqlVAL.union.val = false
		}
	case 746:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4385
		{
			sqlVAL.union.val = true
		}
	case 747:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4386
		{
			sqlVAL.union.val = true
		}
	case 748:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4387
		{
			sqlVAL.union.val = true
		}
	case 749:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4388
		{
			sqlVAL.union.val = true
		}
	case 750:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4389
		{
			return unimplemented(sqllex, "create unlogged")
		}
	case 752:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4394
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 753:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4400
		{
			sqlVAL.union.val = tree.TableDefs{sqlDollar[1].union.tblDef()}
		}
	case 754:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4404
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 755:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4410
		{
			sqlVAL.union.val = sqlDollar[1].union.colDef()
		}
	case 758:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4416
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 759:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4419
		{
			return unimplementedWithIssue(sqllex, 30840)
		}
	case 760:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:4423
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.InterleaveDef{
				Parent:       name,
				Fields:       sqlDollar[6].union.nameList(),
				DropBehavior: sqlDollar[8].union.dropBehavior(),
			}
		}
	case 761:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4432
		{
			sqlVAL.union.val = (*tree.InterleaveDef)(nil)
		}
	case 762:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4439
		{

			sqlVAL.union.val = tree.DropCascade
		}
	case 763:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4444
		{

			sqlVAL.union.val = tree.DropRestrict
		}
	case 764:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4449
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 765:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4455
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 767:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4462
		{
			sqlVAL.str = ""
		}
	case 769:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4469
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 770:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4475
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[5].union.nameList(),
				List:   sqlDollar[8].union.listPartitions(),
			}
		}
	case 771:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4482
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[5].union.nameList(),
				Range:  sqlDollar[8].union.rangePartitions(),
			}
		}
	case 772:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4489
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 773:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4495
		{
			sqlVAL.union.val = []tree.ListPartition{sqlDollar[1].union.listPartition()}
		}
	case 774:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4499
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listPartitions(), sqlDollar[3].union.listPartition())
		}
	case 775:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4505
		{
			sqlVAL.union.val = tree.ListPartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				Exprs:        sqlDollar[5].union.exprs(),
				Subpartition: sqlDollar[7].union.partitionBy(),
			}
		}
	case 776:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4515
		{
			sqlVAL.union.val = []tree.RangePartition{sqlDollar[1].union.rangePartition()}
		}
	case 777:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4519
		{
			sqlVAL.union.val = append(sqlDollar[1].union.rangePartitions(), sqlDollar[3].union.rangePartition())
		}
	case 778:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:4525
		{
			sqlVAL.union.val = tree.RangePartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				From:         sqlDollar[5].union.exprs(),
				To:           sqlDollar[9].union.exprs(),
				Subpartition: sqlDollar[11].union.partitionBy(),
			}
		}
	case 779:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4539
		{
			typ := sqlDollar[2].union.colType()
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), typ, isSerialType(typ), sqlDollar[3].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = tableDef
		}
	case 780:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4550
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 781:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4554
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 782:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4560
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Name: tree.Name(sqlDollar[2].str), Qualification: sqlDollar[3].union.colQualElem()}
		}
	case 783:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4564
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 784:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4568
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: tree.ColumnCollation(sqlDollar[2].str)}
		}
	case 785:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4572
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 786:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4576
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[3].str), Create: true}}
		}
	case 787:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4580
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Create: true}}
		}
	case 788:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4584
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[6].str), Create: true, IfNotExists: true}}
		}
	case 789:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4602
		{
			sqlVAL.union.val = tree.NotNullConstraint{}
		}
	case 790:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4606
		{
			sqlVAL.union.val = tree.NullConstraint{}
		}
	case 791:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4610
		{
			sqlVAL.union.val = tree.UniqueConstraint{}
		}
	case 792:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4614
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 793:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:4618
		{
			sqlVAL.union.val = tree.ShardedPrimaryKeyConstraint{
				Sharded:      true,
				ShardBuckets: sqlDollar[8].union.expr(),
			}
		}
	case 794:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4625
		{
			sqlVAL.union.val = &tree.ColumnCheckConstraint{Expr: sqlDollar[3].union.expr()}
		}
	case 795:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4629
		{
			sqlVAL.union.val = &tree.ColumnDefault{Expr: sqlDollar[2].union.expr()}
		}
	case 796:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4633
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ColumnFKConstraint{
				Table:   name,
				Col:     tree.Name(sqlDollar[3].str),
				Actions: sqlDollar[5].union.referenceActions(),
				Match:   sqlDollar[4].union.compositeKeyMatchMethod(),
			}
		}
	case 797:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4643
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr()}
		}
	case 798:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4647
		{
			return unimplemented(sqllex, "virtual computed columns")
		}
	case 799:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4651
		{
			sqllex.Error("use AS ( <expr> ) STORED")
			return 1
		}
	case 800:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4658
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:        tree.Name(sqlDollar[2].str),
				Columns:     sqlDollar[4].union.idxElems(),
				Sharded:     sqlDollar[6].union.shardedIndexDef(),
				Storing:     sqlDollar[7].union.nameList(),
				Interleave:  sqlDollar[8].union.interleave(),
				PartitionBy: sqlDollar[9].union.partitionBy(),
			}
		}
	case 801:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4669
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Name:        tree.Name(sqlDollar[3].str),
					Columns:     sqlDollar[5].union.idxElems(),
					Sharded:     sqlDollar[7].union.shardedIndexDef(),
					Storing:     sqlDollar[8].union.nameList(),
					Interleave:  sqlDollar[9].union.interleave(),
					PartitionBy: sqlDollar[10].union.partitionBy(),
				},
			}
		}
	case 802:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4682
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:     tree.Name(sqlDollar[3].str),
				Columns:  sqlDollar[5].union.idxElems(),
				Inverted: true,
			}
		}
	case 803:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4692
		{
			sqlVAL.union.val = &tree.FamilyTableDef{
				Name:    tree.Name(sqlDollar[2].str),
				Columns: sqlDollar[4].union.nameList(),
			}
		}
	case 804:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4704
		{
			sqlVAL.union.val = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val.(tree.ConstraintTableDef).SetName(tree.Name(sqlDollar[2].str))
		}
	case 805:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4709
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 806:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4715
		{
			sqlVAL.union.val = &tree.CheckConstraintTableDef{
				Expr: sqlDollar[3].union.expr(),
			}
		}
	case 807:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:4721
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:     sqlDollar[3].union.idxElems(),
					Storing:     sqlDollar[5].union.nameList(),
					Interleave:  sqlDollar[6].union.interleave(),
					PartitionBy: sqlDollar[7].union.partitionBy(),
				},
			}
		}
	case 808:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4732
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns: sqlDollar[4].union.idxElems(),
					Sharded: sqlDollar[6].union.shardedIndexDef(),
				},
				PrimaryKey: true,
			}
		}
	case 809:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:4743
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ForeignKeyConstraintTableDef{
				Table:    name,
				FromCols: sqlDollar[4].union.nameList(),
				ToCols:   sqlDollar[8].union.nameList(),
				Match:    sqlDollar[9].union.compositeKeyMatchMethod(),
				Actions:  sqlDollar[10].union.referenceActions(),
			}
		}
	case 810:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4757
		{
			sqlVAL.union.val = sqlDollar[2].union.val
		}
	case 811:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4761
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 812:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4767
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), nil, false, sqlDollar[2].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef
			sqlVAL.union.val = tree.TableDefs{colToTableDef}
		}
	case 813:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4777
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[3].str), nil, false, sqlDollar[4].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef

			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), colToTableDef)
		}
	case 814:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4788
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 815:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4792
		{
			var constraintToTableDef tree.TableDef = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), constraintToTableDef)
		}
	case 816:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4799
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 817:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4805
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns: sqlDollar[4].union.idxElems(),
				},
				PrimaryKey: true,
			}
		}
	case 818:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4816
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 819:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4820
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 820:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4826
		{
			sqlVAL.union.val = tree.IndexElem{Column: tree.Name(sqlDollar[1].str)}
		}
	case 821:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4832
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 822:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4836
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 823:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4842
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 824:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4846
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 825:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4852
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 826:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4857
		{
		}
	case 827:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4858
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "deferrable")
		}
	case 828:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4859
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially deferred")
		}
	case 829:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4860
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially immediate")
		}
	case 830:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4861
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially deferred")
		}
	case 831:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4862
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially immediate")
		}
	case 834:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4879
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 835:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4883
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 836:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4889
		{
			sqlVAL.union.val = &tree.ShardedIndexDef{
				ShardBuckets: sqlDollar[6].union.expr(),
			}
		}
	case 837:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4895
		{
			sqlVAL.union.val = (*tree.ShardedIndexDef)(nil)
		}
	case 838:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4901
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 839:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4905
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 840:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4925
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 841:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4929
		{
			sqlVAL.union.val = tree.MatchFull
		}
	case 842:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4933
		{
			return unimplementedWithIssueDetail(sqllex, 20305, "match partial")
		}
	case 843:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4937
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 844:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4946
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction()}
		}
	case 845:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4950
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction()}
		}
	case 846:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4954
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction(), Delete: sqlDollar[2].union.referenceAction()}
		}
	case 847:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4958
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction(), Update: sqlDollar[2].union.referenceAction()}
		}
	case 848:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4962
		{
			sqlVAL.union.val = tree.ReferenceActions{}
		}
	case 849:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4968
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 850:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4974
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 851:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4982
		{
			sqlVAL.union.val = tree.NoAction
		}
	case 852:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4986
		{
			sqlVAL.union.val = tree.Restrict
		}
	case 853:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4990
		{
			sqlVAL.union.val = tree.Cascade
		}
	case 854:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4994
		{
			sqlVAL.union.val = tree.SetNull
		}
	case 855:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4998
		{
			sqlVAL.union.val = tree.SetDefault
		}
	case 856:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5017
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name:      name,
				Temporary: sqlDollar[2].union.persistenceType(),
				Options:   sqlDollar[5].union.seqOpts(),
			}
		}
	case 857:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5026
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name: name, Options: sqlDollar[8].union.seqOpts(),
				Temporary:   sqlDollar[2].union.persistenceType(),
				IfNotExists: true,
			}
		}
	case 858:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5034
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 860:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5038
		{
			sqlVAL.union.val = []tree.SequenceOption(nil)
		}
	case 861:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5041
		{
			sqlVAL.union.val = []tree.SequenceOption{sqlDollar[1].union.seqOpt()}
		}
	case 862:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5042
		{
			sqlVAL.union.val = append(sqlDollar[1].union.seqOpts(), sqlDollar[2].union.seqOpt())
		}
	case 863:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5045
		{
			return unimplementedWithIssueDetail(sqllex, 25110, sqlDollar[2].union.colType().SQLString())
		}
	case 864:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5046
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCycle}
		}
	case 865:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5048
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptNoCycle}
		}
	case 866:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5049
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: nil}
		}
	case 867:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5050
		{
			varName, err := sqlDollar[3].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[3].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: columnItem}
		}
	case 868:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5060
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCache, IntVal: &x}
		}
	case 869:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5063
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x}
		}
	case 870:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5065
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x, OptionalWord: true}
		}
	case 871:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5067
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue, IntVal: &x}
		}
	case 872:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5069
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue}
		}
	case 873:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5070
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue, IntVal: &x}
		}
	case 874:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5072
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue}
		}
	case 875:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5073
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x}
		}
	case 876:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5075
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x, OptionalWord: true}
		}
	case 877:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5077
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptVirtual}
		}
	case 878:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5085
		{
			sqlVAL.union.val = &tree.Truncate{Tables: sqlDollar[3].union.tableNames(), DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 879:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5088
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 880:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5096
		{
			sqlVAL.union.val = &tree.CreateUser{Name: sqlDollar[3].union.expr(), Password: sqlDollar[4].union.expr()}
		}
	case 881:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5100
		{
			sqlVAL.union.val = &tree.CreateUser{Name: sqlDollar[6].union.expr(), Password: sqlDollar[7].union.expr(), IfNotExists: true}
		}
	case 882:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5103
		{
			return helpWith(sqllex, "CREATE USER")
		}
	case 884:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5108
		{
			sqlVAL.union.val = nil
		}
	case 885:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5114
		{
			sqlVAL.union.val = sqlDollar[3].union.expr()
		}
	case 886:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5118
		{
			sqlVAL.union.val = tree.DNull
		}
	case 887:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5128
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[3].union.expr()}
		}
	case 888:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5132
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[6].union.expr(), IfNotExists: true}
		}
	case 889:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5135
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 890:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5140
		{
		}
	case 891:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5141
		{
		}
	case 892:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5149
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[6].union.nameList(),
				AsSource:    sqlDollar[8].union.slct(),
				Temporary:   sqlDollar[2].union.persistenceType(),
				IfNotExists: false,
			}
		}
	case 893:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5160
		{
			name := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[9].union.nameList(),
				AsSource:    sqlDollar[11].union.slct(),
				Temporary:   sqlDollar[2].union.persistenceType(),
				IfNotExists: true,
			}
		}
	case 894:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5170
		{
			return unimplementedWithIssue(sqllex, 24897)
		}
	case 895:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5171
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 896:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5174
		{
		}
	case 897:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5175
		{
			return unimplemented(sqllex, "create recursive view")
		}
	case 898:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5181
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 899:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5183
		{
			return unimplementedWithIssue(sqllex, 24873)
		}
	case 900:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5185
		{
			return unimplementedWithIssue(sqllex, 27791)
		}
	case 901:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5187
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "base")
		}
	case 902:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5189
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "shell")
		}
	case 903:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5191
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "create")
		}
	case 904:
		sqlDollar = sqlS[sqlpt-15 : sqlpt+1]
//line sql-gen.y:5207
		{
			table := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:        tree.Name(sqlDollar[4].str),
				Table:       table,
				Unique:      sqlDollar[2].union.bool(),
				Columns:     sqlDollar[9].union.idxElems(),
				Sharded:     sqlDollar[11].union.shardedIndexDef(),
				Storing:     sqlDollar[12].union.nameList(),
				Interleave:  sqlDollar[13].union.interleave(),
				PartitionBy: sqlDollar[14].union.partitionBy(),
				Inverted:    sqlDollar[7].union.bool(),
			}
		}
	case 905:
		sqlDollar = sqlS[sqlpt-18 : sqlpt+1]
//line sql-gen.y:5222
		{
			table := sqlDollar[9].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:        tree.Name(sqlDollar[7].str),
				Table:       table,
				Unique:      sqlDollar[2].union.bool(),
				IfNotExists: true,
				Columns:     sqlDollar[12].union.idxElems(),
				Sharded:     sqlDollar[14].union.shardedIndexDef(),
				Storing:     sqlDollar[15].union.nameList(),
				Interleave:  sqlDollar[16].union.interleave(),
				PartitionBy: sqlDollar[17].union.partitionBy(),
				Inverted:    sqlDollar[10].union.bool(),
			}
		}
	case 906:
		sqlDollar = sqlS[sqlpt-14 : sqlpt+1]
//line sql-gen.y:5238
		{
			table := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:        tree.Name(sqlDollar[5].str),
				Table:       table,
				Unique:      sqlDollar[2].union.bool(),
				Inverted:    true,
				Columns:     sqlDollar[9].union.idxElems(),
				Storing:     sqlDollar[11].union.nameList(),
				Interleave:  sqlDollar[12].union.interleave(),
				PartitionBy: sqlDollar[13].union.partitionBy(),
			}
		}
	case 907:
		sqlDollar = sqlS[sqlpt-17 : sqlpt+1]
//line sql-gen.y:5252
		{
			table := sqlDollar[10].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:        tree.Name(sqlDollar[8].str),
				Table:       table,
				Unique:      sqlDollar[2].union.bool(),
				Inverted:    true,
				IfNotExists: true,
				Columns:     sqlDollar[12].union.idxElems(),
				Storing:     sqlDollar[14].union.nameList(),
				Interleave:  sqlDollar[15].union.interleave(),
				PartitionBy: sqlDollar[16].union.partitionBy(),
			}
		}
	case 908:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5266
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 909:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5269
		{
		}
	case 910:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5270
		{
			return unimplementedWithIssue(sqllex, 9683)
		}
	case 911:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5274
		{

			switch sqlDollar[2].str {
			case "gin":
				sqlVAL.union.val = true
			case "btree":
				sqlVAL.union.val = false
			case "hash", "gist", "spgist", "brin":
				return unimplemented(sqllex, "index using "+sqlDollar[2].str)
			default:
				sqllex.Error("unrecognized access method: " + sqlDollar[2].str)
				return 1
			}
		}
	case 912:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5289
		{
			sqlVAL.union.val = false
		}
	case 913:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5295
		{
			sqlVAL.union.val = true
		}
	case 914:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5299
		{
			sqlVAL.union.val = false
		}
	case 915:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5305
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 916:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5309
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 917:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5318
		{

			e := sqlDollar[1].union.expr()
			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			if colName, ok := e.(*tree.UnresolvedName); ok && colName.NumParts == 1 {
				sqlVAL.union.val = tree.IndexElem{Column: tree.Name(colName.Parts[0]), Direction: dir, NullsOrder: nullsOrder}
			} else {
				return unimplementedWithIssueDetail(sqllex, 9682, fmt.Sprintf("%T", e))
			}
		}
	case 918:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5340
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 919:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5341
		{
			sqlVAL.str = ""
		}
	case 920:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5345
		{
			sqlVAL.union.val = tree.Ascending
		}
	case 921:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5349
		{
			sqlVAL.union.val = tree.Descending
		}
	case 922:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5353
		{
			sqlVAL.union.val = tree.DefaultDirection
		}
	case 923:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5359
		{
			sqlVAL.union.val = &tree.RenameDatabase{Name: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[6].str)}
		}
	case 924:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5366
		{
			sqlVAL.union.val = &tree.AlterUserSetPassword{Name: sqlDollar[3].union.expr(), Password: sqlDollar[4].union.expr()}
		}
	case 925:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5370
		{
			sqlVAL.union.val = &tree.AlterUserSetPassword{Name: sqlDollar[5].union.expr(), Password: sqlDollar[6].union.expr(), IfExists: true}
		}
	case 926:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5376
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: false}
		}
	case 927:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5382
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: false}
		}
	case 928:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5390
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: true}
		}
	case 929:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5396
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: true}
		}
	case 930:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5404
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsSequence: true}
		}
	case 931:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5410
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsSequence: true}
		}
	case 932:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5418
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[3].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[6].str), IfExists: false}
		}
	case 933:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5422
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[5].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[8].str), IfExists: true}
		}
	case 934:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5427
		{
		}
	case 935:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5428
		{
		}
	case 936:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5431
		{
		}
	case 937:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5432
		{
		}
	case 938:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5440
		{
			sqlVAL.union.val = &tree.ReleaseSavepoint{Savepoint: tree.Name(sqlDollar[2].str)}
		}
	case 939:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5443
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 940:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5453
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeJob,
			}
		}
	case 941:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5462
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 942:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5465
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 943:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5473
		{
			sqlVAL.union.val = &tree.Savepoint{Name: tree.Name(sqlDollar[2].str)}
		}
	case 944:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5476
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 946:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5480
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 948:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5481
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 950:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5482
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 952:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5498
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 953:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5501
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 954:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5503
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 955:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5506
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 956:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5516
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 957:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5519
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 958:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5521
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 959:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5524
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 960:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5528
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 961:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5533
		{
		}
	case 962:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5534
		{
		}
	case 963:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5535
		{
		}
	case 964:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5543
		{
			if sqlDollar[2].str != "" {
				sqlVAL.union.val = &tree.RollbackToSavepoint{Savepoint: tree.Name(sqlDollar[2].str)}
			} else {
				sqlVAL.union.val = &tree.RollbackTransaction{}
			}
		}
	case 965:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5550
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 966:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5553
		{
		}
	case 967:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5554
		{
		}
	case 968:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5558
		{
			sqlVAL.str = ""
		}
	case 969:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5562
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 970:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5566
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 971:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5570
		{
			sqlVAL.str = ""
		}
	case 972:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5576
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 973:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5580
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 974:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5586
		{
			sqlVAL.union.val = &tree.BeginTransaction{Modes: sqlDollar[1].union.transactionModes()}
		}
	case 975:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5590
		{
			sqlVAL.union.val = &tree.BeginTransaction{}
		}
	case 976:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5596
		{
			sqlVAL.union.val = sqlDollar[1].union.transactionModes()
		}
	case 977:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5600
		{
			a := sqlDollar[1].union.transactionModes()
			b := sqlDollar[3].union.transactionModes()
			err := a.Merge(b)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 978:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5613
		{
		}
	case 979:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5615
		{
		}
	case 980:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5619
		{

			sqlVAL.union.val = tree.TransactionModes{Isolation: sqlDollar[1].union.isoLevel()}
		}
	case 981:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5624
		{
			sqlVAL.union.val = tree.TransactionModes{UserPriority: sqlDollar[1].union.userPriority()}
		}
	case 982:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5628
		{
			sqlVAL.union.val = tree.TransactionModes{ReadWriteMode: sqlDollar[1].union.readWriteMode()}
		}
	case 983:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5632
		{
			sqlVAL.union.val = tree.TransactionModes{AsOf: sqlDollar[1].union.asOfClause()}
		}
	case 984:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5638
		{
			sqlVAL.union.val = sqlDollar[2].union.userPriority()
		}
	case 985:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5644
		{
			sqlVAL.union.val = sqlDollar[3].union.isoLevel()
		}
	case 986:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5650
		{
			sqlVAL.union.val = tree.ReadOnly
		}
	case 987:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5654
		{
			sqlVAL.union.val = tree.ReadWrite
		}
	case 988:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5664
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				Name:     tree.Name(sqlDollar[3].str),
				Template: sqlDollar[5].str,
				Encoding: sqlDollar[6].str,
				Collate:  sqlDollar[7].str,
				CType:    sqlDollar[8].str,
			}
		}
	case 989:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5674
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				IfNotExists: true,
				Name:        tree.Name(sqlDollar[6].str),
				Template:    sqlDollar[8].str,
				Encoding:    sqlDollar[9].str,
				Collate:     sqlDollar[10].str,
				CType:       sqlDollar[11].str,
			}
		}
	case 990:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5684
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 991:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5688
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 992:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5692
		{
			sqlVAL.str = ""
		}
	case 993:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5698
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 994:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5702
		{
			sqlVAL.str = ""
		}
	case 995:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5708
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 996:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5712
		{
			sqlVAL.str = ""
		}
	case 997:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5718
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 998:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5722
		{
			sqlVAL.str = ""
		}
	case 999:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5727
		{
		}
	case 1000:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5728
		{
		}
	case 1001:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5740
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1002:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5747
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = sqlDollar[6].union.onConflict()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[7].union.retClause()
		}
	case 1003:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5754
		{
			return helpWith(sqllex, "INSERT")
		}
	case 1004:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5765
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = &tree.OnConflict{}
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1005:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5772
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 1006:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5776
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &name
		}
	case 1007:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5785
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &name, As: tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}}
		}
	case 1008:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5790
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1009:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5796
		{
			sqlVAL.union.val = &tree.Insert{Rows: sqlDollar[1].union.slct()}
		}
	case 1010:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5800
		{
			sqlVAL.union.val = &tree.Insert{Columns: sqlDollar[2].union.nameList(), Rows: sqlDollar[4].union.slct()}
		}
	case 1011:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5804
		{
			sqlVAL.union.val = &tree.Insert{Rows: &tree.Select{}}
		}
	case 1012:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5810
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1013:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5814
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1015:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5834
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1016:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5838
		{
			sqlVAL.union.val = &tree.OnConflict{Columns: sqlDollar[3].union.nameList(), Exprs: sqlDollar[7].union.updateExprs(), Where: tree.NewWhere(tree.AstWhere, sqlDollar[8].union.expr())}
		}
	case 1017:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5842
		{
			sqlVAL.union.val = &tree.OnConflict{Columns: sqlDollar[3].union.nameList(), DoNothing: true}
		}
	case 1018:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5848
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1019:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5851
		{
			return unimplementedWithIssue(sqllex, 32557)
		}
	case 1020:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5852
		{
			return unimplementedWithIssue(sqllex, 28161)
		}
	case 1021:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5854
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1022:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5860
		{
			ret := tree.ReturningExprs(sqlDollar[2].union.selExprs())
			sqlVAL.union.val = &ret
		}
	case 1023:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5865
		{
			sqlVAL.union.val = tree.ReturningNothingClause
		}
	case 1024:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5869
		{
			sqlVAL.union.val = tree.AbsentReturningClause
		}
	case 1025:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5886
		{
			sqlVAL.union.val = &tree.Update{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[3].union.tblExpr(),
				Exprs:     sqlDollar[5].union.updateExprs(),
				From:      sqlDollar[6].union.tblExprs(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[7].union.expr()),
				OrderBy:   sqlDollar[8].union.orderBy(),
				Limit:     sqlDollar[9].union.limit(),
				Returning: sqlDollar[10].union.retClause(),
			}
		}
	case 1026:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5898
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 1027:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5901
		{
			sqlVAL.union.val = sqlDollar[2].union.tblExprs()
		}
	case 1028:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5904
		{
			sqlVAL.union.val = tree.TableExprs{}
		}
	case 1029:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5910
		{
			sqlVAL.union.val = tree.UpdateExprs{sqlDollar[1].union.updateExpr()}
		}
	case 1030:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5914
		{
			sqlVAL.union.val = append(sqlDollar[1].union.updateExprs(), sqlDollar[3].union.updateExpr())
		}
	case 1033:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5927
		{
			sqlVAL.union.val = &tree.UpdateExpr{Names: tree.NameList{tree.Name(sqlDollar[1].str)}, Expr: sqlDollar[3].union.expr()}
		}
	case 1034:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5930
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1035:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5934
		{
			sqlVAL.union.val = &tree.UpdateExpr{Tuple: true, Names: sqlDollar[2].union.nameList(), Expr: sqlDollar[5].union.expr()}
		}
	case 1037:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5977
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1038:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5983
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: sqlDollar[2].union.slct()}
		}
	case 1039:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5987
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: &tree.Select{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1040:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6002
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1041:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6006
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy()}
		}
	case 1042:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6010
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[3].union.lockingClause()}
		}
	case 1043:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6014
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[3].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1044:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6018
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt()}
		}
	case 1045:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6022
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy()}
		}
	case 1046:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6026
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[5].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1047:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6030
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[5].union.lockingClause()}
		}
	case 1048:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6035
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1049:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6036
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1050:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6039
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1051:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6040
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1052:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6044
		{
			sqlVAL.union.val = tree.LockingClause{sqlDollar[1].union.lockingItem()}
		}
	case 1053:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6048
		{
			sqlVAL.union.val = append(sqlDollar[1].union.lockingClause(), sqlDollar[2].union.lockingItem())
		}
	case 1054:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6054
		{
			sqlVAL.union.val = &tree.LockingItem{
				Strength:   sqlDollar[1].union.lockingStrength(),
				Targets:    sqlDollar[2].union.tableNames(),
				WaitPolicy: sqlDollar[3].union.lockingWaitPolicy(),
			}
		}
	case 1055:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6063
		{
			sqlVAL.union.val = tree.ForUpdate
		}
	case 1056:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6064
		{
			sqlVAL.union.val = tree.ForNoKeyUpdate
		}
	case 1057:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6065
		{
			sqlVAL.union.val = tree.ForShare
		}
	case 1058:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6066
		{
			sqlVAL.union.val = tree.ForKeyShare
		}
	case 1059:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6069
		{
			sqlVAL.union.val = tree.TableNames{}
		}
	case 1060:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6070
		{
			sqlVAL.union.val = sqlDollar[2].union.tableNames()
		}
	case 1061:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6073
		{
			sqlVAL.union.val = tree.LockWaitBlock
		}
	case 1062:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6074
		{
			sqlVAL.union.val = tree.LockWaitSkip
		}
	case 1063:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6075
		{
			sqlVAL.union.val = tree.LockWaitError
		}
	case 1064:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6080
		{
			return helpWith(sqllex, "<SELECTCLAUSE>")
		}
	case 1068:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6115
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1070:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6116
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1072:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6117
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1074:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6139
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:   sqlDollar[3].union.selExprs(),
				From:    sqlDollar[4].union.from(),
				Where:   tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy: sqlDollar[6].union.groupBy(),
				Having:  tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:  sqlDollar[8].union.window(),
			}
		}
	case 1075:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6152
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct: sqlDollar[2].union.bool(),
				Exprs:    sqlDollar[3].union.selExprs(),
				From:     sqlDollar[4].union.from(),
				Where:    tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:  sqlDollar[6].union.groupBy(),
				Having:   tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:   sqlDollar[8].union.window(),
			}
		}
	case 1076:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6166
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct:   true,
				DistinctOn: sqlDollar[2].union.distinctOn(),
				Exprs:      sqlDollar[3].union.selExprs(),
				From:       sqlDollar[4].union.from(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:    sqlDollar[6].union.groupBy(),
				Having:     tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:     sqlDollar[8].union.window(),
			}
		}
	case 1077:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6178
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1078:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6182
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.UnionOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1079:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6191
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.IntersectOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1080:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6200
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.ExceptOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1081:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6215
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:       tree.SelectExprs{tree.StarSelectExpr()},
				From:        tree.From{Tables: tree.TableExprs{sqlDollar[2].union.tblExpr()}},
				TableSelect: true,
			}
		}
	case 1082:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6222
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1083:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6234
		{
			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1084:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6238
		{

			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1085:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6243
		{
			sqlVAL.union.val = &tree.With{Recursive: true, CTEList: sqlDollar[3].union.ctes()}
		}
	case 1086:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6249
		{
			sqlVAL.union.val = []*tree.CTE{sqlDollar[1].union.cte()}
		}
	case 1087:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6253
		{
			sqlVAL.union.val = append(sqlDollar[1].union.ctes(), sqlDollar[3].union.cte())
		}
	case 1088:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6259
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Stmt: sqlDollar[5].union.stmt(),
			}
		}
	case 1089:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6267
		{
		}
	case 1090:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6268
		{
		}
	case 1091:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6272
		{
			sqlVAL.union.val = sqlDollar[1].union.with()
		}
	case 1092:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6276
		{
			sqlVAL.union.val = nil
		}
	case 1093:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6281
		{
		}
	case 1094:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6282
		{
		}
	case 1095:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6286
		{
			sqlVAL.union.val = true
		}
	case 1096:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6290
		{
			sqlVAL.union.val = false
		}
	case 1097:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6294
		{
			sqlVAL.union.val = false
		}
	case 1098:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6300
		{
			sqlVAL.union.val = true
		}
	case 1099:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6306
		{
			sqlVAL.union.val = tree.DistinctOn(sqlDollar[4].union.exprs())
		}
	case 1100:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6311
		{
		}
	case 1101:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6312
		{
		}
	case 1102:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6316
		{
			sqlVAL.union.val = sqlDollar[1].union.orderBy()
		}
	case 1103:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6320
		{
			sqlVAL.union.val = tree.OrderBy(nil)
		}
	case 1104:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6326
		{
			sqlVAL.union.val = tree.OrderBy(sqlDollar[3].union.orders())
		}
	case 1105:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6332
		{
			sqlVAL.union.val = []*tree.Order{sqlDollar[1].union.order()}
		}
	case 1106:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6336
		{
			sqlVAL.union.val = append(sqlDollar[1].union.orders(), sqlDollar[3].union.order())
		}
	case 1107:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6342
		{

			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = &tree.Order{
				OrderType:  tree.OrderByColumn,
				Expr:       sqlDollar[1].union.expr(),
				Direction:  dir,
				NullsOrder: nullsOrder,
			}
		}
	case 1108:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6363
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{OrderType: tree.OrderByIndex, Direction: sqlDollar[4].union.dir(), Table: name}
		}
	case 1109:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6368
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{
				OrderType: tree.OrderByIndex,
				Direction: sqlDollar[5].union.dir(),
				Table:     name,
				Index:     tree.UnrestrictedName(sqlDollar[4].str),
			}
		}
	case 1110:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6380
		{
			sqlVAL.union.val = tree.NullsFirst
		}
	case 1111:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6384
		{
			sqlVAL.union.val = tree.NullsLast
		}
	case 1112:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6388
		{
			sqlVAL.union.val = tree.DefaultNullsOrder
		}
	case 1113:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6397
		{
			if sqlDollar[1].union.limit() == nil {
				sqlVAL.union.val = sqlDollar[2].union.limit()
			} else {
				sqlVAL.union.val = sqlDollar[1].union.limit()
				sqlVAL.union.val.(*tree.Limit).Offset = sqlDollar[2].union.limit().Offset
			}
		}
	case 1114:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6406
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
			if sqlDollar[2].union.limit() != nil {
				sqlVAL.union.val.(*tree.Limit).Count = sqlDollar[2].union.limit().Count
				sqlVAL.union.val.(*tree.Limit).LimitAll = sqlDollar[2].union.limit().LimitAll
			}
		}
	case 1117:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6417
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
		}
	case 1118:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6418
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1120:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6422
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1121:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6426
		{
			sqlVAL.union.val = &tree.Limit{LimitAll: true}
		}
	case 1122:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6430
		{
			if sqlDollar[2].union.expr() == nil {
				sqlVAL.union.val = (*tree.Limit)(nil)
			} else {
				sqlVAL.union.val = &tree.Limit{Count: sqlDollar[2].union.expr()}
			}
		}
	case 1123:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6444
		{
			sqlVAL.union.val = &tree.Limit{Count: sqlDollar[3].union.expr()}
		}
	case 1124:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6448
		{
			sqlVAL.union.val = &tree.Limit{
				Count: tree.NewNumVal(constant.MakeInt64(1), "", false),
			}
		}
	case 1125:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6456
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1126:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6463
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1130:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6485
		{
		}
	case 1131:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6486
		{
		}
	case 1132:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6489
		{
		}
	case 1133:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6490
		{
		}
	case 1134:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6507
		{
			sqlVAL.union.val = tree.GroupBy(sqlDollar[3].union.exprs())
		}
	case 1135:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6511
		{
			sqlVAL.union.val = tree.GroupBy(nil)
		}
	case 1136:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6517
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1137:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6521
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1138:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6540
		{
			sqlVAL.union.val = &tree.ValuesClause{Rows: []tree.Exprs{sqlDollar[3].union.exprs()}}
		}
	case 1139:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6543
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1140:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6545
		{
			valNode := sqlDollar[1].union.selectStmt().(*tree.ValuesClause)
			valNode.Rows = append(valNode.Rows, sqlDollar[4].union.exprs())
			sqlVAL.union.val = valNode
		}
	case 1141:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6557
		{
			sqlVAL.union.val = tree.From{Tables: sqlDollar[2].union.tblExprs(), AsOf: sqlDollar[3].union.asOfClause()}
		}
	case 1142:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6560
		{
			return helpWith(sqllex, "<SOURCE>")
		}
	case 1143:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6562
		{
			sqlVAL.union.val = tree.From{}
		}
	case 1144:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6568
		{
			sqlVAL.union.val = tree.TableExprs{sqlDollar[1].union.tblExpr()}
		}
	case 1145:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6572
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblExprs(), sqlDollar[3].union.tblExpr())
		}
	case 1146:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6578
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1147:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6582
		{

			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[4].union.int64())}
		}
	case 1148:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6587
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Ascending}
		}
	case 1149:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6592
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Descending}
		}
	case 1150:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6598
		{
			sqlVAL.union.val = &tree.IndexFlags{NoIndexJoin: true}
		}
	case 1151:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6603
		{

			sqlVAL.union.val = &tree.IndexFlags{IgnoreForeignKeys: true}
		}
	case 1152:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6610
		{
			sqlVAL.union.val = sqlDollar[1].union.indexFlags()
		}
	case 1153:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6615
		{
			a := sqlDollar[1].union.indexFlags()
			b := sqlDollar[3].union.indexFlags()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1154:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6626
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1155:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6630
		{
			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[3].union.int64())}
		}
	case 1156:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6634
		{
			flags := sqlDollar[3].union.indexFlags()
			if err := flags.Check(); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = flags
		}
	case 1157:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6642
		{
			sqlVAL.union.val = (*tree.IndexFlags)(nil)
		}
	case 1158:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6673
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1159:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6683
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1160:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6693
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[1].union.selectStmt()},
				Ordinality: sqlDollar[2].union.bool(),
				As:         sqlDollar[3].union.aliasClause(),
			}
		}
	case 1161:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6701
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[2].union.selectStmt()},
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1162:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6710
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1163:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6714
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1164:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6718
		{
			f := sqlDollar[1].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[2].union.bool(),

				As: sqlDollar[3].union.aliasClause(),
			}
		}
	case 1165:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6729
		{
			f := sqlDollar[2].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1166:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6753
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.StatementSource{Statement: sqlDollar[2].union.stmt()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1167:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6759
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
				Columns: sqlDollar[3].union.tableRefCols(),
				As:      sqlDollar[4].union.aliasClause(),
			}
		}
	case 1168:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6770
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: tree.Exprs{sqlDollar[1].union.expr()}}
		}
	case 1169:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6774
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: sqlDollar[4].union.exprs()}
		}
	case 1170:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6780
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1171:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6782
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1172:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6786
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1173:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6792
		{
		}
	case 1174:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6794
		{
			return unimplemented(sqllex, "ROWS FROM with col_def_list")
		}
	case 1175:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6797
		{
			sqlVAL.union.val = nil
		}
	case 1176:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6798
		{
			sqlVAL.union.val = []tree.ColumnID{}
		}
	case 1177:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6799
		{
			sqlVAL.union.val = sqlDollar[2].union.tableRefCols()
		}
	case 1178:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6803
		{
			sqlVAL.union.val = []tree.ColumnID{tree.ColumnID(sqlDollar[1].union.int64())}
		}
	case 1179:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6807
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tableRefCols(), tree.ColumnID(sqlDollar[3].union.int64()))
		}
	case 1180:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6813
		{
			sqlVAL.union.val = true
		}
	case 1181:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6817
		{
			sqlVAL.union.val = false
		}
	case 1182:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6837
		{
			sqlVAL.union.val = &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}
		}
	case 1183:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6841
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: tree.AstCross, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Hint: sqlDollar[3].str}
		}
	case 1184:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6845
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[2].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Cond: sqlDollar[6].union.joinCond(), Hint: sqlDollar[3].str}
		}
	case 1185:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6849
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[3].union.tblExpr(), Cond: sqlDollar[4].union.joinCond()}
		}
	case 1186:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6853
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[3].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[6].union.tblExpr(), Cond: tree.NaturalJoinCond{}, Hint: sqlDollar[4].str}
		}
	case 1187:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6857
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[4].union.tblExpr(), Cond: tree.NaturalJoinCond{}}
		}
	case 1188:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6863
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str), Cols: sqlDollar[3].union.nameList()}
		}
	case 1189:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6867
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()}
		}
	case 1191:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6874
		{
			sqlVAL.union.val = tree.AliasClause{}
		}
	case 1192:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6880
		{
			sqlVAL.union.val = tree.AsOfClause{Expr: sqlDollar[5].union.expr()}
		}
	case 1194:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6887
		{
			sqlVAL.union.val = tree.AsOfClause{}
		}
	case 1195:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6893
		{
			sqlVAL.str = tree.AstFull
		}
	case 1196:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6897
		{
			sqlVAL.str = tree.AstLeft
		}
	case 1197:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6901
		{
			sqlVAL.str = tree.AstRight
		}
	case 1198:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6905
		{
			sqlVAL.str = tree.AstInner
		}
	case 1199:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6911
		{
		}
	case 1200:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6912
		{
		}
	case 1201:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6933
		{
			sqlVAL.str = tree.AstHash
		}
	case 1202:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6937
		{
			sqlVAL.str = tree.AstMerge
		}
	case 1203:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6941
		{
			sqlVAL.str = tree.AstLookup
		}
	case 1204:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6945
		{
			sqlVAL.str = ""
		}
	case 1205:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6958
		{
			sqlVAL.union.val = &tree.UsingJoinCond{Cols: sqlDollar[3].union.nameList()}
		}
	case 1206:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6962
		{
			sqlVAL.union.val = &tree.OnJoinCond{Expr: sqlDollar[2].union.expr()}
		}
	case 1207:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6967
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1208:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6968
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1209:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6969
		{
			sqlVAL.union.val = sqlDollar[2].union.unresolvedObjectName()
		}
	case 1210:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6970
		{
			sqlVAL.union.val = sqlDollar[3].union.unresolvedObjectName()
		}
	case 1211:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6974
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 1212:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6979
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 1213:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6993
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1214:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6997
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str)}
			sqlVAL.union.val = alias
		}
	case 1215:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7003
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = alias
		}
	case 1216:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7009
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 1217:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7019
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 1218:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7029
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1220:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7036
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1221:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7048
		{
			if bounds := sqlDollar[2].union.int32s(); bounds != nil {
				var err error
				sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.colType(), bounds)
				if err != nil {
					return setErr(sqllex, err)
				}
			} else {
				sqlVAL.union.val = sqlDollar[1].union.colType()
			}
		}
	case 1222:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7061
		{

			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.colType(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1223:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7069
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1224:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7070
		{
			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.colType(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1225:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7080
		{
			sqlVAL.union.val = sqlDollar[1].union.colType()
		}
	case 1226:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7087
		{
			sqlVAL.union.val = []int32{-1}
		}
	case 1227:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7088
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1228:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7090
		{

			bound, err := sqlDollar[2].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = []int32{bound}
		}
	case 1229:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7098
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1230:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7099
		{
			sqlVAL.union.val = []int32(nil)
		}
	case 1242:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7127
		{
			sqlVAL.union.val = types.Jsonb
		}
	case 1243:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7131
		{
			sqlVAL.union.val = types.Bytes
		}
	case 1244:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7135
		{
			sqlVAL.union.val = types.Bytes
		}
	case 1245:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7139
		{
			sqlVAL.union.val = types.Bytes
		}
	case 1246:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7143
		{
			sqlVAL.union.val = types.String
		}
	case 1247:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7147
		{
			sqlVAL.union.val = types.Name
		}
	case 1248:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7151
		{
			switch sqllex.(*lexer).nakedIntType.Width() {
			case 32:
				sqlVAL.union.val = &serial4Type
			default:
				sqlVAL.union.val = &serial8Type
			}
		}
	case 1249:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7160
		{
			sqlVAL.union.val = &serial2Type
		}
	case 1250:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7164
		{
			sqlVAL.union.val = &serial2Type
		}
	case 1251:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7168
		{
			sqlVAL.union.val = &serial4Type
		}
	case 1252:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7172
		{
			sqlVAL.union.val = &serial8Type
		}
	case 1253:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7176
		{
			sqlVAL.union.val = &serial8Type
		}
	case 1254:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7180
		{
			sqlVAL.union.val = types.Uuid
		}
	case 1255:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7184
		{
			sqlVAL.union.val = types.INet
		}
	case 1256:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7188
		{
			sqlVAL.union.val = types.Oid
		}
	case 1257:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7192
		{
			sqlVAL.union.val = types.OidVector
		}
	case 1258:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7196
		{
			sqlVAL.union.val = types.Int2Vector
		}
	case 1259:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7200
		{

			if sqlDollar[1].str == "char" {
				sqlVAL.union.val = types.MakeQChar(0)
			} else {
				var ok bool
				var unimp int
				sqlVAL.union.val, ok, unimp = types.TypeForNonKeywordTypeName(sqlDollar[1].str)
				if !ok {
					switch unimp {
					case 0:

						sqllex.Error("type does not exist")
						return 1
					case -1:
						return unimplemented(sqllex, "type name "+sqlDollar[1].str)
					default:
						return unimplementedWithIssueDetail(sqllex, unimp, sqlDollar[1].str)
					}
				}
			}
		}
	case 1260:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7231
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), 0)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1261:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7239
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), sqlDollar[4].union.int32())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1262:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7247
		{
			sqlVAL.union.val = nil
		}
	case 1263:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7254
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1264:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7258
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1265:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7262
		{
			sqlVAL.union.val = types.Int2
		}
	case 1266:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7266
		{
			sqlVAL.union.val = types.Int2
		}
	case 1267:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7270
		{
			sqlVAL.union.val = types.Int4
		}
	case 1268:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7274
		{
			sqlVAL.union.val = types.Int
		}
	case 1269:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7278
		{
			sqlVAL.union.val = types.Int
		}
	case 1270:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7282
		{
			sqlVAL.union.val = types.Int
		}
	case 1271:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7286
		{
			sqlVAL.union.val = types.Float4
		}
	case 1272:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7290
		{
			sqlVAL.union.val = types.Float4
		}
	case 1273:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7294
		{
			sqlVAL.union.val = types.Float
		}
	case 1274:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7298
		{
			sqlVAL.union.val = sqlDollar[2].union.colType()
		}
	case 1275:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7302
		{
			sqlVAL.union.val = types.Float
		}
	case 1276:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7306
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1277:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7314
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1278:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7322
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1279:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7330
		{
			sqlVAL.union.val = types.Bool
		}
	case 1280:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7334
		{
			sqlVAL.union.val = types.Bool
		}
	case 1281:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7341
		{
			sqlVAL.union.val = types.RegProc
		}
	case 1282:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7345
		{
			sqlVAL.union.val = types.RegProcedure
		}
	case 1283:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7349
		{
			sqlVAL.union.val = types.RegClass
		}
	case 1284:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7353
		{
			sqlVAL.union.val = types.RegType
		}
	case 1285:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7357
		{
			sqlVAL.union.val = types.RegNamespace
		}
	case 1286:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7363
		{
			nv := sqlDollar[2].union.numVal()
			prec, err := nv.AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			typ, err := newFloat(prec)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = typ
		}
	case 1287:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7376
		{
			sqlVAL.union.val = types.Float
		}
	case 1288:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7382
		{
			bit, err := newBitType(sqlDollar[4].union.int32(), sqlDollar[2].union.bool())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1289:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7388
		{
			bit, err := newBitType(sqlDollar[3].union.int32(), true)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1290:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7396
		{
			sqlVAL.union.val = types.MakeBit(1)
		}
	case 1291:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7400
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1292:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7404
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1293:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7410
		{
			colTyp := *sqlDollar[1].union.colType()
			n := sqlDollar[3].union.int32()
			if n == 0 {
				sqllex.Error(fmt.Sprintf("length for type %s must be at least 1", colTyp.SQLString()))
				return 1
			}
			sqlVAL.union.val = types.MakeScalar(types.StringFamily, colTyp.Oid(), colTyp.Precision(), n, colTyp.Locale())
		}
	case 1294:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7422
		{
			sqlVAL.union.val = sqlDollar[1].union.colType()
		}
	case 1295:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7428
		{
			sqlVAL.union.val = types.MakeChar(1)
		}
	case 1296:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7432
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1297:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7436
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1298:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7440
		{
			sqlVAL.union.val = types.String
		}
	case 1301:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7449
		{
			sqlVAL.union.val = true
		}
	case 1302:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7450
		{
			sqlVAL.union.val = false
		}
	case 1303:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7455
		{
			sqlVAL.union.val = types.Date
		}
	case 1304:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7459
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimeTZ
			} else {
				sqlVAL.union.val = types.Time
			}
		}
	case 1305:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7467
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimeTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTime(prec)
			}
		}
	case 1306:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7479
		{
			sqlVAL.union.val = types.TimeTZ
		}
	case 1307:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7481
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimeTZ(prec)
		}
	case 1308:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7490
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimestampTZ
			} else {
				sqlVAL.union.val = types.Timestamp
			}
		}
	case 1309:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7498
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimestampTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTimestamp(prec)
			}
		}
	case 1310:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7511
		{
			sqlVAL.union.val = types.TimestampTZ
		}
	case 1311:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7515
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimestampTZ(prec)
		}
	case 1312:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7525
		{
			sqlVAL.union.val = true
		}
	case 1313:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7526
		{
			sqlVAL.union.val = false
		}
	case 1314:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7527
		{
			sqlVAL.union.val = false
		}
	case 1315:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7531
		{
			sqlVAL.union.val = types.Interval
		}
	case 1316:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7535
		{
			sqlVAL.union.val = types.MakeInterval(sqlDollar[2].union.intervalTypeMetadata())
		}
	case 1317:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7539
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeInterval(types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true})
		}
	case 1318:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7550
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_YEAR,
				},
			}
		}
	case 1319:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7558
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1320:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7566
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_DAY,
				},
			}
		}
	case 1321:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7574
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1322:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7582
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1323:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7590
		{
			sqlVAL.union.val = sqlDollar[1].union.intervalTypeMetadata()
		}
	case 1324:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7596
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_YEAR,
					DurationType:     types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1325:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7605
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1326:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7614
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1327:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7623
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_DAY
			sqlVAL.union.val = ret
		}
	case 1328:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7629
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_HOUR,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1329:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7638
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_HOUR
			sqlVAL.union.val = ret
		}
	case 1330:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7644
		{
			sqlVAL.union.val = sqlDollar[3].union.intervalTypeMetadata()
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_MINUTE
			sqlVAL.union.val = ret
		}
	case 1332:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7654
		{
			sqlVAL.union.val = nil
		}
	case 1333:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7660
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
			}
		}
	case 1334:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7668
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
				PrecisionIsSet: true,
				Precision:      prec,
			}
		}
	case 1336:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7705
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.colType(), SyntaxMode: tree.CastShort}
		}
	case 1337:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7709
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.colType(), SyntaxMode: tree.AnnotateShort}
		}
	case 1338:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7713
		{
			sqlVAL.union.val = &tree.CollateExpr{Expr: sqlDollar[1].union.expr(), Locale: sqlDollar[3].str}
		}
	case 1339:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7717
		{

			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("timezone"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1340:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7730
		{

			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1341:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7735
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1342:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7739
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryComplement, Expr: sqlDollar[2].union.expr()}
		}
	case 1343:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7743
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Plus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1344:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7747
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Minus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1345:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7751
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mult, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1346:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7755
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Div, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1347:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7759
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.FloorDiv, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1348:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7763
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mod, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1349:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7767
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Pow, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1350:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7771
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitxor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1351:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7775
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitand, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1352:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7779
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1353:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7783
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1354:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7787
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1355:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7791
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1356:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7795
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONSomeExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1357:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7799
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONAllExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1358:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7803
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Contains, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1359:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7807
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.ContainedBy, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1360:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7811
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1361:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7815
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Concat, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1362:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7819
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.LShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1363:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7823
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.RShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1364:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7827
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchVal, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1365:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7831
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchText, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1366:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7835
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchValPath, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1367:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7839
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchTextPath, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1368:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7843
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("json_remove_path"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1369:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7847
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contained_by_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1370:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7851
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Overlaps, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1371:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7855
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contains_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1372:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7859
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1373:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7863
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1374:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7867
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1375:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7871
		{
			sqlVAL.union.val = &tree.AndExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1376:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7875
		{
			sqlVAL.union.val = &tree.OrExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1377:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7879
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1378:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7883
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1379:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7887
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Like, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1380:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7891
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1381:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7895
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotLike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1382:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7899
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1383:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7903
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.ILike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1384:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7907
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1385:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7911
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotILike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1386:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7915
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1387:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7919
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.SimilarTo, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1388:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7923
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1389:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7927
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotSimilarTo, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1390:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7931
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[5].union.expr(), sqlDollar[7].union.expr()}}
		}
	case 1391:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7935
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.RegMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1392:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7939
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotRegMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1393:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7943
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.RegIMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1394:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7947
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotRegIMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1395:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7951
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1396:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7955
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1397:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7959
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1398:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7963
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1399:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7967
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1400:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7971
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1401:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7974
		{
			return unimplemented(sqllex, "overlaps")
		}
	case 1402:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7976
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1403:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7980
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1404:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7984
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1405:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7988
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1406:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7992
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1407:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7996
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1408:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8000
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1409:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8004
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1410:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8008
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.colTypes()}
		}
	case 1411:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8012
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.colTypes()}
		}
	case 1412:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8016
		{
			sqlVAL.union.val = &tree.RangeCond{Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1413:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8020
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1414:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8024
		{
			sqlVAL.union.val = &tree.RangeCond{Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1415:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8028
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1416:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8032
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.In, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1417:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8036
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotIn, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1418:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8040
		{
			op := sqlDollar[3].union.cmpOp()
			subOp := sqlDollar[2].union.op()
			subOpCmp, ok := subOp.(tree.ComparisonOperator)
			if !ok {
				sqllex.Error(fmt.Sprintf("%s %s <array> is invalid because %q is not a boolean operator",
					subOp, op, subOp))
				return 1
			}
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator:    op,
				SubOperator: subOpCmp,
				Left:        sqlDollar[1].union.expr(),
				Right:       sqlDollar[4].union.expr(),
			}
		}
	case 1419:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8057
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 1420:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8062
		{
			return unimplemented(sqllex, "UNIQUE predicate")
		}
	case 1422:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8074
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.colType(), SyntaxMode: tree.CastShort}
		}
	case 1423:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8078
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.colType(), SyntaxMode: tree.AnnotateShort}
		}
	case 1424:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8082
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1425:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8086
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1426:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8090
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryComplement, Expr: sqlDollar[2].union.expr()}
		}
	case 1427:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8094
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Plus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1428:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8098
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Minus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1429:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8102
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mult, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1430:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8106
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Div, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1431:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8110
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.FloorDiv, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1432:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8114
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mod, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1433:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8118
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Pow, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1434:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8122
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitxor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1435:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8126
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitand, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1436:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8130
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1437:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8134
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1438:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8138
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1439:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8142
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1440:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8146
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Concat, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1441:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8150
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.LShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1442:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8154
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.RShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1443:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8158
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1444:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8162
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1445:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8166
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1446:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8170
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1447:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8174
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1448:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8178
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.colTypes()}
		}
	case 1449:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8182
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.colTypes()}
		}
	case 1451:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8196
		{
			sqlVAL.union.val = &tree.IndirectionExpr{
				Expr:        sqlDollar[1].union.expr(),
				Indirection: sqlDollar[2].union.arraySubscripts(),
			}
		}
	case 1453:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8204
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[2].union.selectStmt(), Exists: true}
		}
	case 1454:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8240
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1455:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8244
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1456:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8248
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 1457:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8252
		{
			sqlVAL.union.val = tree.NewBytesStrVal(sqlDollar[1].str)
		}
	case 1458:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8256
		{
			d, err := tree.ParseDBitArray(sqlDollar[1].str)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 1459:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8261
		{
			return unimplemented(sqllex, sqlDollar[1].union.unresolvedName().String()+"(...) SCONST")
		}
	case 1460:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8263
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: sqlDollar[1].union.colType(), SyntaxMode: tree.CastPrepend}
		}
	case 1461:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8267
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1462:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8271
		{
			sqlVAL.union.val = tree.MakeDBool(true)
		}
	case 1463:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8275
		{
			sqlVAL.union.val = tree.MakeDBool(false)
		}
	case 1464:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8279
		{
			sqlVAL.union.val = tree.DNull
		}
	case 1465:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8283
		{
			sqlVAL.union.val = tree.Expr(sqlDollar[1].union.unresolvedName())
		}
	case 1466:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8287
		{
			colNum := sqlDollar[2].union.int64()
			if colNum < 1 || colNum > int64(MaxInt) {
				sqllex.Error(fmt.Sprintf("invalid column ordinal: @%d", colNum))
				return 1
			}
			sqlVAL.union.val = tree.NewOrdinalReference(int(colNum - 1))
		}
	case 1467:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8296
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 1468:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8303
		{
			sqlVAL.union.val = &tree.TupleStar{Expr: sqlDollar[2].union.expr()}
		}
	case 1469:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8307
		{
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ColName: sqlDollar[5].str}
		}
	case 1470:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8311
		{
			sqlVAL.union.val = &tree.ParenExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1472:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8316
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1473:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8320
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 1474:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8324
		{
			sqlVAL.union.val = &tree.ArrayFlatten{Subquery: &tree.Subquery{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1475:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8328
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.tuple().Exprs}
		}
	case 1476:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8332
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1477:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8335
		{
			return unimplemented(sqllex, "d_expr grouping")
		}
	case 1478:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8339
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName()}
		}
	case 1479:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8343
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: sqlDollar[3].union.exprs(), OrderBy: sqlDollar[4].union.orderBy()}
		}
	case 1480:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8346
		{
			return unimplemented(sqllex, "variadic")
		}
	case 1481:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8347
		{
			return unimplemented(sqllex, "variadic")
		}
	case 1482:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8349
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.AllFuncType, Exprs: sqlDollar[4].union.exprs(), OrderBy: sqlDollar[5].union.orderBy()}
		}
	case 1483:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8355
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.DistinctFuncType, Exprs: sqlDollar[4].union.exprs()}
		}
	case 1484:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8359
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: tree.Exprs{tree.StarExpr()}}
		}
	case 1485:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8362
		{
			return helpWithFunction(sqllex, sqlDollar[1].union.resolvableFuncRefFromName())
		}
	case 1486:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8373
		{
			f := sqlDollar[1].union.expr().(*tree.FuncExpr)
			f.Filter = sqlDollar[3].union.expr()
			f.WindowDef = sqlDollar[4].union.windowDef()
			sqlVAL.union.val = f
		}
	case 1487:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8380
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1488:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8389
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1489:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8390
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1490:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8395
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("pg_collation_for"), Exprs: tree.Exprs{sqlDollar[4].union.expr()}}
		}
	case 1491:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8399
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1492:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8403
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1493:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8409
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_database")}
		}
	case 1494:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8413
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1495:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8417
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1496:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8421
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1497:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8425
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1498:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8429
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1499:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8435
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1500:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8439
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1501:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8443
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1502:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8447
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.colType(), SyntaxMode: tree.CastExplicit}
		}
	case 1503:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8451
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.colType(), SyntaxMode: tree.AnnotateExplicit}
		}
	case 1504:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8455
		{
			sqlVAL.union.val = &tree.IfExpr{Cond: sqlDollar[3].union.expr(), True: sqlDollar[5].union.expr(), Else: sqlDollar[7].union.expr()}
		}
	case 1505:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8459
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr(), ErrCode: sqlDollar[7].union.expr()}
		}
	case 1506:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8463
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr()}
		}
	case 1507:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8467
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr()}
		}
	case 1508:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8471
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), ErrCode: sqlDollar[5].union.expr()}
		}
	case 1509:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8475
		{
			sqlVAL.union.val = &tree.NullIfExpr{Expr1: sqlDollar[3].union.expr(), Expr2: sqlDollar[5].union.expr()}
		}
	case 1510:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8479
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "IFNULL", Exprs: tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1511:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8483
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "COALESCE", Exprs: sqlDollar[3].union.exprs()}
		}
	case 1513:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8490
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1514:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8493
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1515:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8495
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1516:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8498
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1517:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8500
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1518:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8504
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1519:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8507
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1520:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8509
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1521:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8513
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1522:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8516
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1523:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8518
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1524:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8522
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1525:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8525
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1526:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8527
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1527:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8531
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1528:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8534
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1529:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8536
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1530:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8539
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1531:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8541
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1532:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8544
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1533:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8546
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1534:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8549
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1535:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8551
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1536:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8554
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1537:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8556
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("strpos"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1538:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8560
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1539:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8563
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1540:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8564
		{
			return unimplemented(sqllex, "treat")
		}
	case 1541:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8566
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1542:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8570
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ltrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1543:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8574
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("rtrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1544:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8578
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1545:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8582
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1546:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8585
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1547:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8587
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1548:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8590
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1549:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8595
		{
			return unimplemented(sqllex, "within group")
		}
	case 1550:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8596
		{
		}
	case 1551:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8600
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 1552:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8604
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1553:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8611
		{
			sqlVAL.union.val = sqlDollar[2].union.window()
		}
	case 1554:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8615
		{
			sqlVAL.union.val = tree.Window(nil)
		}
	case 1555:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8621
		{
			sqlVAL.union.val = tree.Window{sqlDollar[1].union.windowDef()}
		}
	case 1556:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8625
		{
			sqlVAL.union.val = append(sqlDollar[1].union.window(), sqlDollar[3].union.windowDef())
		}
	case 1557:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8631
		{
			n := sqlDollar[3].union.windowDef()
			n.Name = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = n
		}
	case 1558:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8639
		{
			sqlVAL.union.val = sqlDollar[2].union.windowDef()
		}
	case 1559:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8643
		{
			sqlVAL.union.val = &tree.WindowDef{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1560:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8647
		{
			sqlVAL.union.val = (*tree.WindowDef)(nil)
		}
	case 1561:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8654
		{
			sqlVAL.union.val = &tree.WindowDef{
				RefName:    tree.Name(sqlDollar[2].str),
				Partitions: sqlDollar[3].union.exprs(),
				OrderBy:    sqlDollar[4].union.orderBy(),
				Frame:      sqlDollar[5].union.windowFrame(),
			}
		}
	case 1563:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8674
		{
			sqlVAL.str = ""
		}
	case 1564:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8680
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 1565:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8684
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 1566:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8690
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.RANGE,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1567:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8698
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.ROWS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1568:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8706
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.GROUPS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1569:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8714
		{
			sqlVAL.union.val = (*tree.WindowFrame)(nil)
		}
	case 1570:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8720
		{
			startBound := sqlDollar[1].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.BoundType == tree.OffsetFollowing:
				sqllex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound}
		}
	case 1571:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8733
		{
			startBound := sqlDollar[2].union.windowFrameBound()
			endBound := sqlDollar[4].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.BoundType == tree.UnboundedPreceding:
				sqllex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.BoundType == tree.CurrentRow && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.CurrentRow:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound, EndBound: endBound}
		}
	case 1572:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8761
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedPreceding}
		}
	case 1573:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8765
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedFollowing}
		}
	case 1574:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8769
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.CurrentRow}
		}
	case 1575:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8773
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetPreceding,
			}
		}
	case 1576:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8780
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetFollowing,
			}
		}
	case 1577:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8789
		{
			sqlVAL.union.val = tree.ExcludeCurrentRow
		}
	case 1578:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8793
		{
			sqlVAL.union.val = tree.ExcludeGroup
		}
	case 1579:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8797
		{
			sqlVAL.union.val = tree.ExcludeTies
		}
	case 1580:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8801
		{

			sqlVAL.union.val = tree.NoExclusion
		}
	case 1581:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8806
		{
			sqlVAL.union.val = tree.NoExclusion
		}
	case 1582:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8819
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[3].union.exprs(), Row: true}
		}
	case 1583:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8823
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 1585:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8830
		{
			t := sqlDollar[2].union.tuple()
			labels := sqlDollar[4].union.nameList()
			t.Labels = make([]string, len(labels))
			for i, l := range labels {
				t.Labels[i] = string(l)
			}
			sqlVAL.union.val = t
		}
	case 1586:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8842
		{
			sqlVAL.union.val = tree.Any
		}
	case 1587:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8846
		{
			sqlVAL.union.val = tree.Some
		}
	case 1588:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8850
		{
			sqlVAL.union.val = tree.All
		}
	case 1589:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8855
		{
			sqlVAL.union.val = tree.Plus
		}
	case 1590:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8856
		{
			sqlVAL.union.val = tree.Minus
		}
	case 1591:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8857
		{
			sqlVAL.union.val = tree.Mult
		}
	case 1592:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8858
		{
			sqlVAL.union.val = tree.Div
		}
	case 1593:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8859
		{
			sqlVAL.union.val = tree.FloorDiv
		}
	case 1594:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8860
		{
			sqlVAL.union.val = tree.Mod
		}
	case 1595:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8861
		{
			sqlVAL.union.val = tree.Bitand
		}
	case 1596:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8862
		{
			sqlVAL.union.val = tree.Bitor
		}
	case 1597:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8863
		{
			sqlVAL.union.val = tree.Pow
		}
	case 1598:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8864
		{
			sqlVAL.union.val = tree.Bitxor
		}
	case 1599:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8865
		{
			sqlVAL.union.val = tree.LT
		}
	case 1600:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8866
		{
			sqlVAL.union.val = tree.GT
		}
	case 1601:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8867
		{
			sqlVAL.union.val = tree.EQ
		}
	case 1602:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8868
		{
			sqlVAL.union.val = tree.LE
		}
	case 1603:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8869
		{
			sqlVAL.union.val = tree.GE
		}
	case 1604:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8870
		{
			sqlVAL.union.val = tree.NE
		}
	case 1606:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8874
		{
			sqlVAL.union.val = tree.Like
		}
	case 1607:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8875
		{
			sqlVAL.union.val = tree.NotLike
		}
	case 1608:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8876
		{
			sqlVAL.union.val = tree.ILike
		}
	case 1609:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8877
		{
			sqlVAL.union.val = tree.NotILike
		}
	case 1610:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8900
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 1611:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8904
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1612:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8910
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1613:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8914
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1614:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8918
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 1615:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8929
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 1616:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8933
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1617:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8939
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1618:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8943
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 1620:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8950
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 1621:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8956
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1622:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8960
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1623:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8966
		{
			sqlVAL.union.val = []*types.T{sqlDollar[1].union.colType()}
		}
	case 1624:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8970
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colTypes(), sqlDollar[3].union.colType())
		}
	case 1625:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8976
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1626:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8980
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1627:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8986
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1628:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8990
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1629:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8996
		{
			sqlVAL.union.val = tree.Exprs{tree.NewStrVal(sqlDollar[1].str), sqlDollar[3].union.expr()}
		}
	case 1630:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9000
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1639:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9023
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr(), sqlDollar[4].union.expr()}
		}
	case 1640:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9027
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 1641:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9031
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1642:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9037
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1643:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9044
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[1].union.expr()}
		}
	case 1644:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9048
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 1645:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9065
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 1646:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9069
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[2].union.expr()}
		}
	case 1647:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9073
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr()}
		}
	case 1648:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9077
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), tree.NewDInt(1), sqlDollar[2].union.expr()}
		}
	case 1649:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9081
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1650:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9087
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1651:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9093
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1652:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9099
		{
			sqlVAL.union.val = append(sqlDollar[3].union.exprs(), sqlDollar[1].union.expr())
		}
	case 1653:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9103
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 1654:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9107
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1655:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9113
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1657:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9125
		{
			sqlVAL.union.val = &tree.CaseExpr{Expr: sqlDollar[2].union.expr(), Whens: sqlDollar[3].union.whens(), Else: sqlDollar[4].union.expr()}
		}
	case 1658:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9132
		{
			sqlVAL.union.val = []*tree.When{sqlDollar[1].union.when()}
		}
	case 1659:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9136
		{
			sqlVAL.union.val = append(sqlDollar[1].union.whens(), sqlDollar[2].union.when())
		}
	case 1660:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9142
		{
			sqlVAL.union.val = &tree.When{Cond: sqlDollar[2].union.expr(), Val: sqlDollar[4].union.expr()}
		}
	case 1661:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9148
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1662:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9152
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1664:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9159
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1665:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9165
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr()}
		}
	case 1666:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9169
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr(), End: sqlDollar[4].union.expr(), Slice: true}
		}
	case 1668:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9176
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1669:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9182
		{
			sqlVAL.union.val = tree.ArraySubscripts{sqlDollar[1].union.arraySubscript()}
		}
	case 1670:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9186
		{
			sqlVAL.union.val = append(sqlDollar[1].union.arraySubscripts(), sqlDollar[2].union.arraySubscript())
		}
	case 1671:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9191
		{
		}
	case 1672:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9192
		{
		}
	case 1673:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9196
		{
			sqlVAL.union.val = tree.SelectExprs{sqlDollar[1].union.selExpr()}
		}
	case 1674:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9200
		{
			sqlVAL.union.val = append(sqlDollar[1].union.selExprs(), sqlDollar[3].union.selExpr())
		}
	case 1675:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9206
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1676:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9215
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1677:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9219
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1678:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9223
		{
			sqlVAL.union.val = tree.StarSelectExpr()
		}
	case 1679:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9231
		{
			sqlVAL.union.val = tree.TableIndexNames{sqlDollar[1].union.newTableIndexName()}
		}
	case 1680:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9235
		{
			sqlVAL.union.val = append(sqlDollar[1].union.newTableIndexNames(), sqlDollar[3].union.newTableIndexName())
		}
	case 1681:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9241
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedName()}
		}
	case 1682:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9245
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedName())
		}
	case 1683:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9264
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: tree.UnrestrictedName(sqlDollar[3].str),
			}
		}
	case 1684:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9272
		{

			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			indexName := tree.UnrestrictedName(name.TableName)
			name.TableName = ""
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: indexName,
			}
		}
	case 1685:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9295
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 1687:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9304
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 1688:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9308
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1689:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9312
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 1690:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9316
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 1}
		}
	case 1691:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9322
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1692:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9326
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1697:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9341
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 1698:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9345
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 1701:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9357
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 1702:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9361
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 1703:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9370
		{
			val, err := sqlDollar[1].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 1704:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9381
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 1705:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9390
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 1706:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9398
		{
			var err error
			var d tree.Datum
			if sqlDollar[3].union.val == nil {
				d, err = tree.ParseDInterval(sqlDollar[2].str)
			} else {
				d, err = tree.ParseDIntervalWithTypeMetadata(sqlDollar[2].str, sqlDollar[3].union.intervalTypeMetadata())
			}
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 1707:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9410
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			d, err := tree.ParseDIntervalWithTypeMetadata(sqlDollar[5].str, types.IntervalTypeMetadata{
				Precision:      prec,
				PrecisionIsSet: true,
			})
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 1728:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9507
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 1730:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9514
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 2, Parts: tree.NameParts{sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1731:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9518
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 3, Parts: tree.NameParts{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1732:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9522
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 4, Parts: tree.NameParts{sqlDollar[7].str, sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1734:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9536
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 4, Parts: tree.NameParts{"", sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1735:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9540
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1736:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9544
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 1737:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9557
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 1741:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9575
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1742:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9588
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1743:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9595
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1751:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9620
		{
			sqlVAL.str = ""
		}
	case 1752:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9626
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1753:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9630
		{
			sqlVAL.str = ""
		}
	}
	goto sqlstack /* stack new state and value */
}
