// Code generated by goyacc. DO NOT EDIT.
// GENERATED FILE DO NOT EDIT
// Code generated by goyacc -p sql -o sql.go.tmp sql-gen.y. DO NOT EDIT.

//line sql-gen.y:24
package parser

import (
	"fmt"
	__yyfmt__ "fmt"
	"go/constant"
	"strings"

	"github.com/cockroachdb/cockroach/pkg/geo/geopb"
	"github.com/cockroachdb/cockroach/pkg/sql/lex"
	"github.com/cockroachdb/cockroach/pkg/sql/privilege"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree"
	"github.com/cockroachdb/cockroach/pkg/sql/types"
	"github.com/cockroachdb/errors"
)

//line sql-gen.y:24

const MaxUint = ^uint(0)

const MaxInt = int(MaxUint >> 1)

func unimplemented(sqllex sqlLexer, feature string) int {
	sqllex.(*lexer).Unimplemented(feature)
	return 1
}
func purposelyUnimplemented(sqllex sqlLexer, feature string, reason string) int {
	sqllex.(*lexer).PurposelyUnimplemented(feature, reason)
	return 1
}

func setErr(sqllex sqlLexer, err error) int {
	sqllex.(*lexer).setErr(err)
	return 1
}

func unimplementedWithIssue(sqllex sqlLexer, issue int) int {
	sqllex.(*lexer).UnimplementedWithIssue(issue)
	return 1
}

func unimplementedWithIssueDetail(sqllex sqlLexer, issue int, detail string) int {
	sqllex.(*lexer).UnimplementedWithIssueDetail(issue, detail)
	return 1
}

//line sql-gen.y:72

type sqlSymUnion struct {
	val interface{}
}

func (u *sqlSymUnion) numVal() *tree.NumVal {
	return u.val.(*tree.NumVal)
}
func (u *sqlSymUnion) strVal() *tree.StrVal {
	if stmt, ok := u.val.(*tree.StrVal); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) placeholder() *tree.Placeholder {
	return u.val.(*tree.Placeholder)
}
func (u *sqlSymUnion) auditMode() tree.AuditMode {
	return u.val.(tree.AuditMode)
}
func (u *sqlSymUnion) bool() bool {
	return u.val.(bool)
}
func (u *sqlSymUnion) strPtr() *string {
	return u.val.(*string)
}
func (u *sqlSymUnion) strs() []string {
	return u.val.([]string)
}
func (u *sqlSymUnion) newTableIndexName() *tree.TableIndexName {
	tn := u.val.(tree.TableIndexName)
	return &tn
}
func (u *sqlSymUnion) tableIndexName() tree.TableIndexName {
	return u.val.(tree.TableIndexName)
}
func (u *sqlSymUnion) newTableIndexNames() tree.TableIndexNames {
	return u.val.(tree.TableIndexNames)
}
func (u *sqlSymUnion) shardedIndexDef() *tree.ShardedIndexDef {
	return u.val.(*tree.ShardedIndexDef)
}
func (u *sqlSymUnion) nameList() tree.NameList {
	return u.val.(tree.NameList)
}
func (u *sqlSymUnion) unresolvedName() *tree.UnresolvedName {
	return u.val.(*tree.UnresolvedName)
}
func (u *sqlSymUnion) unresolvedObjectName() *tree.UnresolvedObjectName {
	return u.val.(*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) functionReference() tree.FunctionReference {
	return u.val.(tree.FunctionReference)
}
func (u *sqlSymUnion) tablePatterns() tree.TablePatterns {
	return u.val.(tree.TablePatterns)
}
func (u *sqlSymUnion) tableNames() tree.TableNames {
	return u.val.(tree.TableNames)
}
func (u *sqlSymUnion) indexFlags() *tree.IndexFlags {
	return u.val.(*tree.IndexFlags)
}
func (u *sqlSymUnion) arraySubscript() *tree.ArraySubscript {
	return u.val.(*tree.ArraySubscript)
}
func (u *sqlSymUnion) arraySubscripts() tree.ArraySubscripts {
	if as, ok := u.val.(tree.ArraySubscripts); ok {
		return as
	}
	return nil
}
func (u *sqlSymUnion) stmt() tree.Statement {
	if stmt, ok := u.val.(tree.Statement); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) cte() *tree.CTE {
	if cte, ok := u.val.(*tree.CTE); ok {
		return cte
	}
	return nil
}
func (u *sqlSymUnion) ctes() []*tree.CTE {
	return u.val.([]*tree.CTE)
}
func (u *sqlSymUnion) with() *tree.With {
	if with, ok := u.val.(*tree.With); ok {
		return with
	}
	return nil
}
func (u *sqlSymUnion) slct() *tree.Select {
	return u.val.(*tree.Select)
}
func (u *sqlSymUnion) selectStmt() tree.SelectStatement {
	return u.val.(tree.SelectStatement)
}
func (u *sqlSymUnion) colDef() *tree.ColumnTableDef {
	return u.val.(*tree.ColumnTableDef)
}
func (u *sqlSymUnion) constraintDef() tree.ConstraintTableDef {
	return u.val.(tree.ConstraintTableDef)
}
func (u *sqlSymUnion) tblDef() tree.TableDef {
	return u.val.(tree.TableDef)
}
func (u *sqlSymUnion) tblDefs() tree.TableDefs {
	return u.val.(tree.TableDefs)
}
func (u *sqlSymUnion) colQual() tree.NamedColumnQualification {
	return u.val.(tree.NamedColumnQualification)
}
func (u *sqlSymUnion) colQualElem() tree.ColumnQualification {
	return u.val.(tree.ColumnQualification)
}
func (u *sqlSymUnion) colQuals() []tree.NamedColumnQualification {
	return u.val.([]tree.NamedColumnQualification)
}
func (u *sqlSymUnion) storageParam() tree.StorageParam {
	return u.val.(tree.StorageParam)
}
func (u *sqlSymUnion) storageParams() []tree.StorageParam {
	if params, ok := u.val.([]tree.StorageParam); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) persistenceType() bool {
	return u.val.(bool)
}
func (u *sqlSymUnion) colType() *types.T {
	if colType, ok := u.val.(*types.T); ok && colType != nil {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) tableRefCols() []tree.ColumnID {
	if refCols, ok := u.val.([]tree.ColumnID); ok {
		return refCols
	}
	return nil
}
func (u *sqlSymUnion) colTypes() []*types.T {
	return u.val.([]*types.T)
}
func (u *sqlSymUnion) int32() int32 {
	return u.val.(int32)
}
func (u *sqlSymUnion) int64() int64 {
	return u.val.(int64)
}
func (u *sqlSymUnion) seqOpt() tree.SequenceOption {
	return u.val.(tree.SequenceOption)
}
func (u *sqlSymUnion) seqOpts() []tree.SequenceOption {
	return u.val.([]tree.SequenceOption)
}
func (u *sqlSymUnion) expr() tree.Expr {
	if expr, ok := u.val.(tree.Expr); ok {
		return expr
	}
	return nil
}
func (u *sqlSymUnion) exprs() tree.Exprs {
	return u.val.(tree.Exprs)
}
func (u *sqlSymUnion) selExpr() tree.SelectExpr {
	return u.val.(tree.SelectExpr)
}
func (u *sqlSymUnion) selExprs() tree.SelectExprs {
	return u.val.(tree.SelectExprs)
}
func (u *sqlSymUnion) retClause() tree.ReturningClause {
	return u.val.(tree.ReturningClause)
}
func (u *sqlSymUnion) aliasClause() tree.AliasClause {
	return u.val.(tree.AliasClause)
}
func (u *sqlSymUnion) asOfClause() tree.AsOfClause {
	return u.val.(tree.AsOfClause)
}
func (u *sqlSymUnion) tblExpr() tree.TableExpr {
	return u.val.(tree.TableExpr)
}
func (u *sqlSymUnion) tblExprs() tree.TableExprs {
	return u.val.(tree.TableExprs)
}
func (u *sqlSymUnion) from() tree.From {
	return u.val.(tree.From)
}
func (u *sqlSymUnion) int32s() []int32 {
	return u.val.([]int32)
}
func (u *sqlSymUnion) joinCond() tree.JoinCond {
	return u.val.(tree.JoinCond)
}
func (u *sqlSymUnion) when() *tree.When {
	return u.val.(*tree.When)
}
func (u *sqlSymUnion) whens() []*tree.When {
	return u.val.([]*tree.When)
}
func (u *sqlSymUnion) lockingClause() tree.LockingClause {
	return u.val.(tree.LockingClause)
}
func (u *sqlSymUnion) lockingItem() *tree.LockingItem {
	return u.val.(*tree.LockingItem)
}
func (u *sqlSymUnion) lockingStrength() tree.LockingStrength {
	return u.val.(tree.LockingStrength)
}
func (u *sqlSymUnion) lockingWaitPolicy() tree.LockingWaitPolicy {
	return u.val.(tree.LockingWaitPolicy)
}
func (u *sqlSymUnion) updateExpr() *tree.UpdateExpr {
	return u.val.(*tree.UpdateExpr)
}
func (u *sqlSymUnion) updateExprs() tree.UpdateExprs {
	return u.val.(tree.UpdateExprs)
}
func (u *sqlSymUnion) limit() *tree.Limit {
	return u.val.(*tree.Limit)
}
func (u *sqlSymUnion) targetList() tree.TargetList {
	return u.val.(tree.TargetList)
}
func (u *sqlSymUnion) targetListPtr() *tree.TargetList {
	return u.val.(*tree.TargetList)
}
func (u *sqlSymUnion) privilegeType() privilege.Kind {
	return u.val.(privilege.Kind)
}
func (u *sqlSymUnion) privilegeList() privilege.List {
	return u.val.(privilege.List)
}
func (u *sqlSymUnion) onConflict() *tree.OnConflict {
	return u.val.(*tree.OnConflict)
}
func (u *sqlSymUnion) orderBy() tree.OrderBy {
	return u.val.(tree.OrderBy)
}
func (u *sqlSymUnion) order() *tree.Order {
	return u.val.(*tree.Order)
}
func (u *sqlSymUnion) orders() []*tree.Order {
	return u.val.([]*tree.Order)
}
func (u *sqlSymUnion) groupBy() tree.GroupBy {
	return u.val.(tree.GroupBy)
}
func (u *sqlSymUnion) windowFrame() *tree.WindowFrame {
	return u.val.(*tree.WindowFrame)
}
func (u *sqlSymUnion) windowFrameBounds() tree.WindowFrameBounds {
	return u.val.(tree.WindowFrameBounds)
}
func (u *sqlSymUnion) windowFrameBound() *tree.WindowFrameBound {
	return u.val.(*tree.WindowFrameBound)
}
func (u *sqlSymUnion) windowFrameExclusion() tree.WindowFrameExclusion {
	return u.val.(tree.WindowFrameExclusion)
}
func (u *sqlSymUnion) distinctOn() tree.DistinctOn {
	return u.val.(tree.DistinctOn)
}
func (u *sqlSymUnion) dir() tree.Direction {
	return u.val.(tree.Direction)
}
func (u *sqlSymUnion) nullsOrder() tree.NullsOrder {
	return u.val.(tree.NullsOrder)
}
func (u *sqlSymUnion) alterTableCmd() tree.AlterTableCmd {
	return u.val.(tree.AlterTableCmd)
}
func (u *sqlSymUnion) alterTableCmds() tree.AlterTableCmds {
	return u.val.(tree.AlterTableCmds)
}
func (u *sqlSymUnion) alterIndexCmd() tree.AlterIndexCmd {
	return u.val.(tree.AlterIndexCmd)
}
func (u *sqlSymUnion) alterIndexCmds() tree.AlterIndexCmds {
	return u.val.(tree.AlterIndexCmds)
}
func (u *sqlSymUnion) isoLevel() tree.IsolationLevel {
	return u.val.(tree.IsolationLevel)
}
func (u *sqlSymUnion) userPriority() tree.UserPriority {
	return u.val.(tree.UserPriority)
}
func (u *sqlSymUnion) readWriteMode() tree.ReadWriteMode {
	return u.val.(tree.ReadWriteMode)
}
func (u *sqlSymUnion) idxElem() tree.IndexElem {
	return u.val.(tree.IndexElem)
}
func (u *sqlSymUnion) idxElems() tree.IndexElemList {
	return u.val.(tree.IndexElemList)
}
func (u *sqlSymUnion) dropBehavior() tree.DropBehavior {
	return u.val.(tree.DropBehavior)
}
func (u *sqlSymUnion) validationBehavior() tree.ValidationBehavior {
	return u.val.(tree.ValidationBehavior)
}
func (u *sqlSymUnion) interleave() *tree.InterleaveDef {
	return u.val.(*tree.InterleaveDef)
}
func (u *sqlSymUnion) partitionBy() *tree.PartitionBy {
	return u.val.(*tree.PartitionBy)
}
func (u *sqlSymUnion) createTableOnCommitSetting() tree.CreateTableOnCommitSetting {
	return u.val.(tree.CreateTableOnCommitSetting)
}
func (u *sqlSymUnion) listPartition() tree.ListPartition {
	return u.val.(tree.ListPartition)
}
func (u *sqlSymUnion) listPartitions() []tree.ListPartition {
	return u.val.([]tree.ListPartition)
}
func (u *sqlSymUnion) rangePartition() tree.RangePartition {
	return u.val.(tree.RangePartition)
}
func (u *sqlSymUnion) rangePartitions() []tree.RangePartition {
	return u.val.([]tree.RangePartition)
}
func (u *sqlSymUnion) setZoneConfig() *tree.SetZoneConfig {
	return u.val.(*tree.SetZoneConfig)
}
func (u *sqlSymUnion) tuples() []*tree.Tuple {
	return u.val.([]*tree.Tuple)
}
func (u *sqlSymUnion) tuple() *tree.Tuple {
	return u.val.(*tree.Tuple)
}
func (u *sqlSymUnion) windowDef() *tree.WindowDef {
	return u.val.(*tree.WindowDef)
}
func (u *sqlSymUnion) window() tree.Window {
	return u.val.(tree.Window)
}
func (u *sqlSymUnion) op() tree.Operator {
	return u.val.(tree.Operator)
}
func (u *sqlSymUnion) cmpOp() tree.ComparisonOperator {
	return u.val.(tree.ComparisonOperator)
}
func (u *sqlSymUnion) intervalTypeMetadata() types.IntervalTypeMetadata {
	return u.val.(types.IntervalTypeMetadata)
}
func (u *sqlSymUnion) kvOption() tree.KVOption {
	return u.val.(tree.KVOption)
}
func (u *sqlSymUnion) kvOptions() []tree.KVOption {
	if colType, ok := u.val.([]tree.KVOption); ok {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) transactionModes() tree.TransactionModes {
	return u.val.(tree.TransactionModes)
}
func (u *sqlSymUnion) compositeKeyMatchMethod() tree.CompositeKeyMatchMethod {
	return u.val.(tree.CompositeKeyMatchMethod)
}
func (u *sqlSymUnion) referenceAction() tree.ReferenceAction {
	return u.val.(tree.ReferenceAction)
}
func (u *sqlSymUnion) referenceActions() tree.ReferenceActions {
	return u.val.(tree.ReferenceActions)
}
func (u *sqlSymUnion) createStatsOptions() *tree.CreateStatsOptions {
	return u.val.(*tree.CreateStatsOptions)
}
func (u *sqlSymUnion) scrubOptions() tree.ScrubOptions {
	return u.val.(tree.ScrubOptions)
}
func (u *sqlSymUnion) scrubOption() tree.ScrubOption {
	return u.val.(tree.ScrubOption)
}
func (u *sqlSymUnion) resolvableFuncRefFromName() tree.ResolvableFunctionReference {
	return tree.ResolvableFunctionReference{FunctionReference: u.unresolvedName()}
}
func (u *sqlSymUnion) rowsFromExpr() *tree.RowsFromExpr {
	return u.val.(*tree.RowsFromExpr)
}
func (u *sqlSymUnion) partitionedBackup() tree.PartitionedBackup {
	return u.val.(tree.PartitionedBackup)
}
func (u *sqlSymUnion) partitionedBackups() []tree.PartitionedBackup {
	return u.val.([]tree.PartitionedBackup)
}
func (u *sqlSymUnion) geoFigure() geopb.Shape {
	return u.val.(geopb.Shape)
}
func newNameFromStr(s string) *tree.Name {
	return (*tree.Name)(&s)
}

//line sql-gen.y:635
type sqlSymType struct {
	yys   int
	id    int32
	pos   int32
	str   string
	union sqlSymUnion
}

const IDENT = lex.IDENT
const SCONST = lex.SCONST
const BCONST = lex.BCONST
const BITCONST = lex.BITCONST
const ICONST = lex.ICONST
const FCONST = lex.FCONST
const PLACEHOLDER = lex.PLACEHOLDER
const TYPECAST = lex.TYPECAST
const TYPEANNOTATE = lex.TYPEANNOTATE
const DOT_DOT = lex.DOT_DOT
const LESS_EQUALS = lex.LESS_EQUALS
const GREATER_EQUALS = lex.GREATER_EQUALS
const NOT_EQUALS = lex.NOT_EQUALS
const NOT_REGMATCH = lex.NOT_REGMATCH
const REGIMATCH = lex.REGIMATCH
const NOT_REGIMATCH = lex.NOT_REGIMATCH
const ERROR = lex.ERROR
const ABORT = lex.ABORT
const ACTION = lex.ACTION
const ADD = lex.ADD
const ADMIN = lex.ADMIN
const AGGREGATE = lex.AGGREGATE
const ALL = lex.ALL
const ALTER = lex.ALTER
const ANALYSE = lex.ANALYSE
const ANALYZE = lex.ANALYZE
const AND = lex.AND
const AND_AND = lex.AND_AND
const ANY = lex.ANY
const ANNOTATE_TYPE = lex.ANNOTATE_TYPE
const ARRAY = lex.ARRAY
const AS = lex.AS
const ASC = lex.ASC
const ASYMMETRIC = lex.ASYMMETRIC
const AT = lex.AT
const AUTHORIZATION = lex.AUTHORIZATION
const AUTOMATIC = lex.AUTOMATIC
const BACKUP = lex.BACKUP
const BEGIN = lex.BEGIN
const BETWEEN = lex.BETWEEN
const BIGINT = lex.BIGINT
const BIGSERIAL = lex.BIGSERIAL
const BIT = lex.BIT
const BUCKET_COUNT = lex.BUCKET_COUNT
const BLOB = lex.BLOB
const BOOL = lex.BOOL
const BOOLEAN = lex.BOOLEAN
const BOTH = lex.BOTH
const BUNDLE = lex.BUNDLE
const BY = lex.BY
const BYTEA = lex.BYTEA
const BYTES = lex.BYTES
const CACHE = lex.CACHE
const CANCEL = lex.CANCEL
const CASCADE = lex.CASCADE
const CASE = lex.CASE
const CAST = lex.CAST
const CHANGEFEED = lex.CHANGEFEED
const CHAR = lex.CHAR
const CHARACTER = lex.CHARACTER
const CHARACTERISTICS = lex.CHARACTERISTICS
const CHECK = lex.CHECK
const CLOSE = lex.CLOSE
const CLUSTER = lex.CLUSTER
const COALESCE = lex.COALESCE
const COLLATE = lex.COLLATE
const COLLATION = lex.COLLATION
const COLUMN = lex.COLUMN
const COLUMNS = lex.COLUMNS
const COMMENT = lex.COMMENT
const COMMIT = lex.COMMIT
const COMMITTED = lex.COMMITTED
const COMPACT = lex.COMPACT
const COMPLETE = lex.COMPLETE
const CONCAT = lex.CONCAT
const CONCURRENTLY = lex.CONCURRENTLY
const CONFIGURATION = lex.CONFIGURATION
const CONFIGURATIONS = lex.CONFIGURATIONS
const CONFIGURE = lex.CONFIGURE
const CONFLICT = lex.CONFLICT
const CONSTRAINT = lex.CONSTRAINT
const CONSTRAINTS = lex.CONSTRAINTS
const CONTAINS = lex.CONTAINS
const CONVERSION = lex.CONVERSION
const COPY = lex.COPY
const COVERING = lex.COVERING
const CREATE = lex.CREATE
const CREATEROLE = lex.CREATEROLE
const CROSS = lex.CROSS
const CUBE = lex.CUBE
const CURRENT = lex.CURRENT
const CURRENT_CATALOG = lex.CURRENT_CATALOG
const CURRENT_DATE = lex.CURRENT_DATE
const CURRENT_SCHEMA = lex.CURRENT_SCHEMA
const CURRENT_ROLE = lex.CURRENT_ROLE
const CURRENT_TIME = lex.CURRENT_TIME
const CURRENT_TIMESTAMP = lex.CURRENT_TIMESTAMP
const CURRENT_USER = lex.CURRENT_USER
const CYCLE = lex.CYCLE
const DATA = lex.DATA
const DATABASE = lex.DATABASE
const DATABASES = lex.DATABASES
const DATE = lex.DATE
const DAY = lex.DAY
const DEC = lex.DEC
const DECIMAL = lex.DECIMAL
const DEFAULT = lex.DEFAULT
const DEALLOCATE = lex.DEALLOCATE
const DECLARE = lex.DECLARE
const DEFERRABLE = lex.DEFERRABLE
const DEFERRED = lex.DEFERRED
const DELETE = lex.DELETE
const DESC = lex.DESC
const DISCARD = lex.DISCARD
const DISTINCT = lex.DISTINCT
const DO = lex.DO
const DOMAIN = lex.DOMAIN
const DOUBLE = lex.DOUBLE
const DROP = lex.DROP
const ELSE = lex.ELSE
const ENCODING = lex.ENCODING
const END = lex.END
const ENUM = lex.ENUM
const ESCAPE = lex.ESCAPE
const EXCEPT = lex.EXCEPT
const EXCLUDE = lex.EXCLUDE
const EXISTS = lex.EXISTS
const EXECUTE = lex.EXECUTE
const EXPERIMENTAL = lex.EXPERIMENTAL
const EXPERIMENTAL_FINGERPRINTS = lex.EXPERIMENTAL_FINGERPRINTS
const EXPERIMENTAL_REPLICA = lex.EXPERIMENTAL_REPLICA
const EXPERIMENTAL_AUDIT = lex.EXPERIMENTAL_AUDIT
const EXPIRATION = lex.EXPIRATION
const EXPLAIN = lex.EXPLAIN
const EXPORT = lex.EXPORT
const EXTENSION = lex.EXTENSION
const EXTRACT = lex.EXTRACT
const EXTRACT_DURATION = lex.EXTRACT_DURATION
const FALSE = lex.FALSE
const FAMILY = lex.FAMILY
const FETCH = lex.FETCH
const FETCHVAL = lex.FETCHVAL
const FETCHTEXT = lex.FETCHTEXT
const FETCHVAL_PATH = lex.FETCHVAL_PATH
const FETCHTEXT_PATH = lex.FETCHTEXT_PATH
const FILES = lex.FILES
const FILTER = lex.FILTER
const FIRST = lex.FIRST
const FLOAT = lex.FLOAT
const FLOAT4 = lex.FLOAT4
const FLOAT8 = lex.FLOAT8
const FLOORDIV = lex.FLOORDIV
const FOLLOWING = lex.FOLLOWING
const FOR = lex.FOR
const FORCE_INDEX = lex.FORCE_INDEX
const FOREIGN = lex.FOREIGN
const FROM = lex.FROM
const FULL = lex.FULL
const FUNCTION = lex.FUNCTION
const GEOGRAPHY = lex.GEOGRAPHY
const GEOMETRY = lex.GEOMETRY
const GEOMETRYCOLLECTION = lex.GEOMETRYCOLLECTION
const GLOBAL = lex.GLOBAL
const GRANT = lex.GRANT
const GRANTS = lex.GRANTS
const GREATEST = lex.GREATEST
const GROUP = lex.GROUP
const GROUPING = lex.GROUPING
const GROUPS = lex.GROUPS
const HAVING = lex.HAVING
const HASH = lex.HASH
const HIGH = lex.HIGH
const HISTOGRAM = lex.HISTOGRAM
const HOUR = lex.HOUR
const IF = lex.IF
const IFERROR = lex.IFERROR
const IFNULL = lex.IFNULL
const IGNORE_FOREIGN_KEYS = lex.IGNORE_FOREIGN_KEYS
const ILIKE = lex.ILIKE
const IMMEDIATE = lex.IMMEDIATE
const IMPORT = lex.IMPORT
const IN = lex.IN
const INCLUDE = lex.INCLUDE
const INCREMENT = lex.INCREMENT
const INCREMENTAL = lex.INCREMENTAL
const INET = lex.INET
const INET_CONTAINED_BY_OR_EQUALS = lex.INET_CONTAINED_BY_OR_EQUALS
const INET_CONTAINS_OR_EQUALS = lex.INET_CONTAINS_OR_EQUALS
const INDEX = lex.INDEX
const INDEXES = lex.INDEXES
const INJECT = lex.INJECT
const INTERLEAVE = lex.INTERLEAVE
const INITIALLY = lex.INITIALLY
const INNER = lex.INNER
const INSERT = lex.INSERT
const INT = lex.INT
const INT2VECTOR = lex.INT2VECTOR
const INT2 = lex.INT2
const INT4 = lex.INT4
const INT8 = lex.INT8
const INT64 = lex.INT64
const INTEGER = lex.INTEGER
const INTERSECT = lex.INTERSECT
const INTERVAL = lex.INTERVAL
const INTO = lex.INTO
const INVERTED = lex.INVERTED
const IS = lex.IS
const ISERROR = lex.ISERROR
const ISNULL = lex.ISNULL
const ISOLATION = lex.ISOLATION
const JOB = lex.JOB
const JOBS = lex.JOBS
const JOIN = lex.JOIN
const JSON = lex.JSON
const JSONB = lex.JSONB
const JSON_SOME_EXISTS = lex.JSON_SOME_EXISTS
const JSON_ALL_EXISTS = lex.JSON_ALL_EXISTS
const KEY = lex.KEY
const KEYS = lex.KEYS
const KV = lex.KV
const LANGUAGE = lex.LANGUAGE
const LAST = lex.LAST
const LATERAL = lex.LATERAL
const LC_CTYPE = lex.LC_CTYPE
const LC_COLLATE = lex.LC_COLLATE
const LEADING = lex.LEADING
const LEASE = lex.LEASE
const LEAST = lex.LEAST
const LEFT = lex.LEFT
const LESS = lex.LESS
const LEVEL = lex.LEVEL
const LIKE = lex.LIKE
const LIMIT = lex.LIMIT
const LINESTRING = lex.LINESTRING
const LIST = lex.LIST
const LOCAL = lex.LOCAL
const LOCALTIME = lex.LOCALTIME
const LOCALTIMESTAMP = lex.LOCALTIMESTAMP
const LOCKED = lex.LOCKED
const LOGIN = lex.LOGIN
const LOOKUP = lex.LOOKUP
const LOW = lex.LOW
const LSHIFT = lex.LSHIFT
const MATCH = lex.MATCH
const MATERIALIZED = lex.MATERIALIZED
const MERGE = lex.MERGE
const MINVALUE = lex.MINVALUE
const MAXVALUE = lex.MAXVALUE
const MINUTE = lex.MINUTE
const MONTH = lex.MONTH
const MULTILINESTRING = lex.MULTILINESTRING
const MULTIPOINT = lex.MULTIPOINT
const MULTIPOLYGON = lex.MULTIPOLYGON
const NAN = lex.NAN
const NAME = lex.NAME
const NAMES = lex.NAMES
const NATURAL = lex.NATURAL
const NEXT = lex.NEXT
const NO = lex.NO
const NOCREATEROLE = lex.NOCREATEROLE
const NOLOGIN = lex.NOLOGIN
const NO_INDEX_JOIN = lex.NO_INDEX_JOIN
const NONE = lex.NONE
const NORMAL = lex.NORMAL
const NOT = lex.NOT
const NOTHING = lex.NOTHING
const NOTNULL = lex.NOTNULL
const NOWAIT = lex.NOWAIT
const NULL = lex.NULL
const NULLIF = lex.NULLIF
const NULLS = lex.NULLS
const NUMERIC = lex.NUMERIC
const OF = lex.OF
const OFF = lex.OFF
const OFFSET = lex.OFFSET
const OID = lex.OID
const OIDS = lex.OIDS
const OIDVECTOR = lex.OIDVECTOR
const ON = lex.ON
const ONLY = lex.ONLY
const OPT = lex.OPT
const OPTION = lex.OPTION
const OPTIONS = lex.OPTIONS
const OR = lex.OR
const ORDER = lex.ORDER
const ORDINALITY = lex.ORDINALITY
const OTHERS = lex.OTHERS
const OUT = lex.OUT
const OUTER = lex.OUTER
const OVER = lex.OVER
const OVERLAPS = lex.OVERLAPS
const OVERLAY = lex.OVERLAY
const OWNED = lex.OWNED
const OPERATOR = lex.OPERATOR
const PARENT = lex.PARENT
const PARTIAL = lex.PARTIAL
const PARTITION = lex.PARTITION
const PARTITIONS = lex.PARTITIONS
const PASSWORD = lex.PASSWORD
const PAUSE = lex.PAUSE
const PHYSICAL = lex.PHYSICAL
const PLACING = lex.PLACING
const PLAN = lex.PLAN
const PLANS = lex.PLANS
const POINT = lex.POINT
const POLYGON = lex.POLYGON
const POSITION = lex.POSITION
const PRECEDING = lex.PRECEDING
const PRECISION = lex.PRECISION
const PREPARE = lex.PREPARE
const PRESERVE = lex.PRESERVE
const PRIMARY = lex.PRIMARY
const PRIORITY = lex.PRIORITY
const PROCEDURAL = lex.PROCEDURAL
const PUBLIC = lex.PUBLIC
const PUBLICATION = lex.PUBLICATION
const QUERIES = lex.QUERIES
const QUERY = lex.QUERY
const RANGE = lex.RANGE
const RANGES = lex.RANGES
const READ = lex.READ
const REAL = lex.REAL
const RECURSIVE = lex.RECURSIVE
const REF = lex.REF
const REFERENCES = lex.REFERENCES
const REGCLASS = lex.REGCLASS
const REGPROC = lex.REGPROC
const REGPROCEDURE = lex.REGPROCEDURE
const REGNAMESPACE = lex.REGNAMESPACE
const REGTYPE = lex.REGTYPE
const REINDEX = lex.REINDEX
const REMOVE_PATH = lex.REMOVE_PATH
const RENAME = lex.RENAME
const REPEATABLE = lex.REPEATABLE
const REPLACE = lex.REPLACE
const RELEASE = lex.RELEASE
const RESET = lex.RESET
const RESTORE = lex.RESTORE
const RESTRICT = lex.RESTRICT
const RESUME = lex.RESUME
const RETURNING = lex.RETURNING
const REVOKE = lex.REVOKE
const RIGHT = lex.RIGHT
const ROLE = lex.ROLE
const ROLES = lex.ROLES
const ROLLBACK = lex.ROLLBACK
const ROLLUP = lex.ROLLUP
const ROW = lex.ROW
const ROWS = lex.ROWS
const RSHIFT = lex.RSHIFT
const RULE = lex.RULE
const SAVEPOINT = lex.SAVEPOINT
const SCATTER = lex.SCATTER
const SCHEMA = lex.SCHEMA
const SCHEMAS = lex.SCHEMAS
const SCRUB = lex.SCRUB
const SEARCH = lex.SEARCH
const SECOND = lex.SECOND
const SELECT = lex.SELECT
const SEQUENCE = lex.SEQUENCE
const SEQUENCES = lex.SEQUENCES
const SERIAL = lex.SERIAL
const SERIAL2 = lex.SERIAL2
const SERIAL4 = lex.SERIAL4
const SERIAL8 = lex.SERIAL8
const SERIALIZABLE = lex.SERIALIZABLE
const SERVER = lex.SERVER
const SESSION = lex.SESSION
const SESSIONS = lex.SESSIONS
const SESSION_USER = lex.SESSION_USER
const SET = lex.SET
const SETTING = lex.SETTING
const SETTINGS = lex.SETTINGS
const SHARE = lex.SHARE
const SHOW = lex.SHOW
const SIMILAR = lex.SIMILAR
const SIMPLE = lex.SIMPLE
const SKIP = lex.SKIP
const SMALLINT = lex.SMALLINT
const SMALLSERIAL = lex.SMALLSERIAL
const SNAPSHOT = lex.SNAPSHOT
const SOME = lex.SOME
const SPLIT = lex.SPLIT
const SQL = lex.SQL
const START = lex.START
const STATISTICS = lex.STATISTICS
const STATUS = lex.STATUS
const STDIN = lex.STDIN
const STRICT = lex.STRICT
const STRING = lex.STRING
const STORE = lex.STORE
const STORED = lex.STORED
const STORING = lex.STORING
const SUBSTRING = lex.SUBSTRING
const SYMMETRIC = lex.SYMMETRIC
const SYNTAX = lex.SYNTAX
const SYSTEM = lex.SYSTEM
const SUBSCRIPTION = lex.SUBSCRIPTION
const TABLE = lex.TABLE
const TABLES = lex.TABLES
const TEMP = lex.TEMP
const TEMPLATE = lex.TEMPLATE
const TEMPORARY = lex.TEMPORARY
const TESTING_RELOCATE = lex.TESTING_RELOCATE
const EXPERIMENTAL_RELOCATE = lex.EXPERIMENTAL_RELOCATE
const TEXT = lex.TEXT
const THEN = lex.THEN
const TIES = lex.TIES
const TIME = lex.TIME
const TIMETZ = lex.TIMETZ
const TIMESTAMP = lex.TIMESTAMP
const TIMESTAMPTZ = lex.TIMESTAMPTZ
const TO = lex.TO
const THROTTLING = lex.THROTTLING
const TRAILING = lex.TRAILING
const TRACE = lex.TRACE
const TRANSACTION = lex.TRANSACTION
const TREAT = lex.TREAT
const TRIGGER = lex.TRIGGER
const TRIM = lex.TRIM
const TRUE = lex.TRUE
const TRUNCATE = lex.TRUNCATE
const TRUSTED = lex.TRUSTED
const TYPE = lex.TYPE
const TRACING = lex.TRACING
const UNBOUNDED = lex.UNBOUNDED
const UNCOMMITTED = lex.UNCOMMITTED
const UNION = lex.UNION
const UNIQUE = lex.UNIQUE
const UNKNOWN = lex.UNKNOWN
const UNLOGGED = lex.UNLOGGED
const UNSPLIT = lex.UNSPLIT
const UPDATE = lex.UPDATE
const UPSERT = lex.UPSERT
const UNTIL = lex.UNTIL
const USE = lex.USE
const USER = lex.USER
const USERS = lex.USERS
const USING = lex.USING
const UUID = lex.UUID
const VALID = lex.VALID
const VALIDATE = lex.VALIDATE
const VALUE = lex.VALUE
const VALUES = lex.VALUES
const VARBIT = lex.VARBIT
const VARCHAR = lex.VARCHAR
const VARIADIC = lex.VARIADIC
const VIEW = lex.VIEW
const VARYING = lex.VARYING
const VIRTUAL = lex.VIRTUAL
const WHEN = lex.WHEN
const WHERE = lex.WHERE
const WINDOW = lex.WINDOW
const WITH = lex.WITH
const WITHIN = lex.WITHIN
const WITHOUT = lex.WITHOUT
const WORK = lex.WORK
const WRITE = lex.WRITE
const YEAR = lex.YEAR
const ZONE = lex.ZONE
const NOT_LA = lex.NOT_LA
const WITH_LA = lex.WITH_LA
const AS_LA = lex.AS_LA
const CONTAINED_BY = lex.CONTAINED_BY
const POSTFIXOP = lex.POSTFIXOP
const UMINUS = lex.UMINUS
const HELPTOKEN = lex.HELPTOKEN

var sqlToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENT",
	"SCONST",
	"BCONST",
	"BITCONST",
	"ICONST",
	"FCONST",
	"PLACEHOLDER",
	"TYPECAST",
	"TYPEANNOTATE",
	"DOT_DOT",
	"LESS_EQUALS",
	"GREATER_EQUALS",
	"NOT_EQUALS",
	"NOT_REGMATCH",
	"REGIMATCH",
	"NOT_REGIMATCH",
	"ERROR",
	"ABORT",
	"ACTION",
	"ADD",
	"ADMIN",
	"AGGREGATE",
	"ALL",
	"ALTER",
	"ANALYSE",
	"ANALYZE",
	"AND",
	"AND_AND",
	"ANY",
	"ANNOTATE_TYPE",
	"ARRAY",
	"AS",
	"ASC",
	"ASYMMETRIC",
	"AT",
	"AUTHORIZATION",
	"AUTOMATIC",
	"BACKUP",
	"BEGIN",
	"BETWEEN",
	"BIGINT",
	"BIGSERIAL",
	"BIT",
	"BUCKET_COUNT",
	"BLOB",
	"BOOL",
	"BOOLEAN",
	"BOTH",
	"BUNDLE",
	"BY",
	"BYTEA",
	"BYTES",
	"CACHE",
	"CANCEL",
	"CASCADE",
	"CASE",
	"CAST",
	"CHANGEFEED",
	"CHAR",
	"CHARACTER",
	"CHARACTERISTICS",
	"CHECK",
	"CLOSE",
	"CLUSTER",
	"COALESCE",
	"COLLATE",
	"COLLATION",
	"COLUMN",
	"COLUMNS",
	"COMMENT",
	"COMMIT",
	"COMMITTED",
	"COMPACT",
	"COMPLETE",
	"CONCAT",
	"CONCURRENTLY",
	"CONFIGURATION",
	"CONFIGURATIONS",
	"CONFIGURE",
	"CONFLICT",
	"CONSTRAINT",
	"CONSTRAINTS",
	"CONTAINS",
	"CONVERSION",
	"COPY",
	"COVERING",
	"CREATE",
	"CREATEROLE",
	"CROSS",
	"CUBE",
	"CURRENT",
	"CURRENT_CATALOG",
	"CURRENT_DATE",
	"CURRENT_SCHEMA",
	"CURRENT_ROLE",
	"CURRENT_TIME",
	"CURRENT_TIMESTAMP",
	"CURRENT_USER",
	"CYCLE",
	"DATA",
	"DATABASE",
	"DATABASES",
	"DATE",
	"DAY",
	"DEC",
	"DECIMAL",
	"DEFAULT",
	"DEALLOCATE",
	"DECLARE",
	"DEFERRABLE",
	"DEFERRED",
	"DELETE",
	"DESC",
	"DISCARD",
	"DISTINCT",
	"DO",
	"DOMAIN",
	"DOUBLE",
	"DROP",
	"ELSE",
	"ENCODING",
	"END",
	"ENUM",
	"ESCAPE",
	"EXCEPT",
	"EXCLUDE",
	"EXISTS",
	"EXECUTE",
	"EXPERIMENTAL",
	"EXPERIMENTAL_FINGERPRINTS",
	"EXPERIMENTAL_REPLICA",
	"EXPERIMENTAL_AUDIT",
	"EXPIRATION",
	"EXPLAIN",
	"EXPORT",
	"EXTENSION",
	"EXTRACT",
	"EXTRACT_DURATION",
	"FALSE",
	"FAMILY",
	"FETCH",
	"FETCHVAL",
	"FETCHTEXT",
	"FETCHVAL_PATH",
	"FETCHTEXT_PATH",
	"FILES",
	"FILTER",
	"FIRST",
	"FLOAT",
	"FLOAT4",
	"FLOAT8",
	"FLOORDIV",
	"FOLLOWING",
	"FOR",
	"FORCE_INDEX",
	"FOREIGN",
	"FROM",
	"FULL",
	"FUNCTION",
	"GEOGRAPHY",
	"GEOMETRY",
	"GEOMETRYCOLLECTION",
	"GLOBAL",
	"GRANT",
	"GRANTS",
	"GREATEST",
	"GROUP",
	"GROUPING",
	"GROUPS",
	"HAVING",
	"HASH",
	"HIGH",
	"HISTOGRAM",
	"HOUR",
	"IF",
	"IFERROR",
	"IFNULL",
	"IGNORE_FOREIGN_KEYS",
	"ILIKE",
	"IMMEDIATE",
	"IMPORT",
	"IN",
	"INCLUDE",
	"INCREMENT",
	"INCREMENTAL",
	"INET",
	"INET_CONTAINED_BY_OR_EQUALS",
	"INET_CONTAINS_OR_EQUALS",
	"INDEX",
	"INDEXES",
	"INJECT",
	"INTERLEAVE",
	"INITIALLY",
	"INNER",
	"INSERT",
	"INT",
	"INT2VECTOR",
	"INT2",
	"INT4",
	"INT8",
	"INT64",
	"INTEGER",
	"INTERSECT",
	"INTERVAL",
	"INTO",
	"INVERTED",
	"IS",
	"ISERROR",
	"ISNULL",
	"ISOLATION",
	"JOB",
	"JOBS",
	"JOIN",
	"JSON",
	"JSONB",
	"JSON_SOME_EXISTS",
	"JSON_ALL_EXISTS",
	"KEY",
	"KEYS",
	"KV",
	"LANGUAGE",
	"LAST",
	"LATERAL",
	"LC_CTYPE",
	"LC_COLLATE",
	"LEADING",
	"LEASE",
	"LEAST",
	"LEFT",
	"LESS",
	"LEVEL",
	"LIKE",
	"LIMIT",
	"LINESTRING",
	"LIST",
	"LOCAL",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"LOCKED",
	"LOGIN",
	"LOOKUP",
	"LOW",
	"LSHIFT",
	"MATCH",
	"MATERIALIZED",
	"MERGE",
	"MINVALUE",
	"MAXVALUE",
	"MINUTE",
	"MONTH",
	"MULTILINESTRING",
	"MULTIPOINT",
	"MULTIPOLYGON",
	"NAN",
	"NAME",
	"NAMES",
	"NATURAL",
	"NEXT",
	"NO",
	"NOCREATEROLE",
	"NOLOGIN",
	"NO_INDEX_JOIN",
	"NONE",
	"NORMAL",
	"NOT",
	"NOTHING",
	"NOTNULL",
	"NOWAIT",
	"NULL",
	"NULLIF",
	"NULLS",
	"NUMERIC",
	"OF",
	"OFF",
	"OFFSET",
	"OID",
	"OIDS",
	"OIDVECTOR",
	"ON",
	"ONLY",
	"OPT",
	"OPTION",
	"OPTIONS",
	"OR",
	"ORDER",
	"ORDINALITY",
	"OTHERS",
	"OUT",
	"OUTER",
	"OVER",
	"OVERLAPS",
	"OVERLAY",
	"OWNED",
	"OPERATOR",
	"PARENT",
	"PARTIAL",
	"PARTITION",
	"PARTITIONS",
	"PASSWORD",
	"PAUSE",
	"PHYSICAL",
	"PLACING",
	"PLAN",
	"PLANS",
	"POINT",
	"POLYGON",
	"POSITION",
	"PRECEDING",
	"PRECISION",
	"PREPARE",
	"PRESERVE",
	"PRIMARY",
	"PRIORITY",
	"PROCEDURAL",
	"PUBLIC",
	"PUBLICATION",
	"QUERIES",
	"QUERY",
	"RANGE",
	"RANGES",
	"READ",
	"REAL",
	"RECURSIVE",
	"REF",
	"REFERENCES",
	"REGCLASS",
	"REGPROC",
	"REGPROCEDURE",
	"REGNAMESPACE",
	"REGTYPE",
	"REINDEX",
	"REMOVE_PATH",
	"RENAME",
	"REPEATABLE",
	"REPLACE",
	"RELEASE",
	"RESET",
	"RESTORE",
	"RESTRICT",
	"RESUME",
	"RETURNING",
	"REVOKE",
	"RIGHT",
	"ROLE",
	"ROLES",
	"ROLLBACK",
	"ROLLUP",
	"ROW",
	"ROWS",
	"RSHIFT",
	"RULE",
	"SAVEPOINT",
	"SCATTER",
	"SCHEMA",
	"SCHEMAS",
	"SCRUB",
	"SEARCH",
	"SECOND",
	"SELECT",
	"SEQUENCE",
	"SEQUENCES",
	"SERIAL",
	"SERIAL2",
	"SERIAL4",
	"SERIAL8",
	"SERIALIZABLE",
	"SERVER",
	"SESSION",
	"SESSIONS",
	"SESSION_USER",
	"SET",
	"SETTING",
	"SETTINGS",
	"SHARE",
	"SHOW",
	"SIMILAR",
	"SIMPLE",
	"SKIP",
	"SMALLINT",
	"SMALLSERIAL",
	"SNAPSHOT",
	"SOME",
	"SPLIT",
	"SQL",
	"START",
	"STATISTICS",
	"STATUS",
	"STDIN",
	"STRICT",
	"STRING",
	"STORE",
	"STORED",
	"STORING",
	"SUBSTRING",
	"SYMMETRIC",
	"SYNTAX",
	"SYSTEM",
	"SUBSCRIPTION",
	"TABLE",
	"TABLES",
	"TEMP",
	"TEMPLATE",
	"TEMPORARY",
	"TESTING_RELOCATE",
	"EXPERIMENTAL_RELOCATE",
	"TEXT",
	"THEN",
	"TIES",
	"TIME",
	"TIMETZ",
	"TIMESTAMP",
	"TIMESTAMPTZ",
	"TO",
	"THROTTLING",
	"TRAILING",
	"TRACE",
	"TRANSACTION",
	"TREAT",
	"TRIGGER",
	"TRIM",
	"TRUE",
	"TRUNCATE",
	"TRUSTED",
	"TYPE",
	"TRACING",
	"UNBOUNDED",
	"UNCOMMITTED",
	"UNION",
	"UNIQUE",
	"UNKNOWN",
	"UNLOGGED",
	"UNSPLIT",
	"UPDATE",
	"UPSERT",
	"UNTIL",
	"USE",
	"USER",
	"USERS",
	"USING",
	"UUID",
	"VALID",
	"VALIDATE",
	"VALUE",
	"VALUES",
	"VARBIT",
	"VARCHAR",
	"VARIADIC",
	"VIEW",
	"VARYING",
	"VIRTUAL",
	"WHEN",
	"WHERE",
	"WINDOW",
	"WITH",
	"WITHIN",
	"WITHOUT",
	"WORK",
	"WRITE",
	"YEAR",
	"ZONE",
	"NOT_LA",
	"WITH_LA",
	"AS_LA",
	"'<'",
	"'>'",
	"'='",
	"'~'",
	"CONTAINED_BY",
	"'?'",
	"POSTFIXOP",
	"'|'",
	"'#'",
	"'&'",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"'%'",
	"'^'",
	"UMINUS",
	"'['",
	"']'",
	"'('",
	"')'",
	"'.'",
	"HELPTOKEN",
	"'@'",
	"','",
	"'{'",
	"'}'",
	"':'",
}
var sqlStatenames = [...]string{}

const sqlEofCode = 1
const sqlErrCode = 2
const sqlInitialStackSize = 16

//line sql-gen.y:10360

//line yacctab:1
var sqlExca = [...]int{
	-1, 0,
	1, 27,
	-2, 1115,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 73,
	192, 942,
	209, 942,
	224, 250,
	317, 250,
	326, 757,
	354, 250,
	363, 757,
	402, 757,
	426, 250,
	451, 757,
	-2, 0,
	-1, 78,
	224, 254,
	-2, 0,
	-1, 79,
	115, 1115,
	198, 1115,
	436, 1115,
	437, 1115,
	-2, 0,
	-1, 91,
	128, 1089,
	144, 1089,
	157, 1089,
	206, 1089,
	236, 1089,
	278, 1089,
	288, 1089,
	431, 1089,
	-2, 1060,
	-1, 123,
	134, 666,
	223, 666,
	320, 646,
	372, 646,
	419, 666,
	-2, 0,
	-1, 124,
	4, 1117,
	21, 1117,
	22, 1117,
	23, 1117,
	24, 1117,
	25, 1117,
	27, 1117,
	33, 1117,
	38, 1117,
	39, 1117,
	40, 1117,
	41, 1117,
	42, 1117,
	43, 1117,
	44, 1117,
	45, 1117,
	46, 1117,
	47, 1117,
	48, 1117,
	49, 1117,
	50, 1117,
	52, 1117,
	53, 1117,
	54, 1117,
	55, 1117,
	56, 1117,
	57, 1117,
	58, 1117,
	61, 1117,
	62, 1117,
	63, 1117,
	64, 1117,
	66, 1117,
	67, 1117,
	68, 1117,
	72, 1117,
	73, 1117,
	74, 1117,
	75, 1117,
	76, 1117,
	77, 1117,
	80, 1117,
	81, 1117,
	82, 1117,
	83, 1117,
	85, 1117,
	87, 1117,
	88, 1117,
	89, 1117,
	91, 1117,
	93, 1117,
	94, 1117,
	102, 1117,
	103, 1117,
	104, 1117,
	105, 1117,
	106, 1117,
	107, 1117,
	108, 1117,
	109, 1117,
	111, 1117,
	112, 1117,
	114, 1117,
	115, 1117,
	117, 1117,
	120, 1117,
	121, 1117,
	122, 1117,
	124, 1117,
	126, 1117,
	127, 1117,
	129, 1117,
	130, 1117,
	131, 1117,
	132, 1117,
	133, 1117,
	134, 1117,
	135, 1117,
	136, 1117,
	137, 1117,
	138, 1117,
	139, 1117,
	140, 1117,
	141, 1117,
	143, 1117,
	149, 1117,
	150, 1117,
	151, 1117,
	152, 1117,
	153, 1117,
	154, 1117,
	156, 1117,
	158, 1117,
	162, 1117,
	163, 1117,
	164, 1117,
	165, 1117,
	166, 1117,
	168, 1117,
	169, 1117,
	171, 1117,
	172, 1117,
	174, 1117,
	175, 1117,
	176, 1117,
	177, 1117,
	178, 1117,
	179, 1117,
	180, 1117,
	181, 1117,
	183, 1117,
	184, 1117,
	186, 1117,
	187, 1117,
	188, 1117,
	189, 1117,
	192, 1117,
	193, 1117,
	194, 1117,
	195, 1117,
	198, 1117,
	199, 1117,
	200, 1117,
	201, 1117,
	202, 1117,
	203, 1117,
	204, 1117,
	205, 1117,
	207, 1117,
	209, 1117,
	211, 1117,
	213, 1117,
	214, 1117,
	215, 1117,
	217, 1117,
	218, 1117,
	221, 1117,
	222, 1117,
	223, 1117,
	224, 1117,
	225, 1117,
	227, 1117,
	228, 1117,
	230, 1117,
	231, 1117,
	233, 1117,
	234, 1117,
	237, 1117,
	238, 1117,
	239, 1117,
	242, 1117,
	243, 1117,
	244, 1117,
	245, 1117,
	247, 1117,
	248, 1117,
	249, 1117,
	250, 1117,
	251, 1117,
	252, 1117,
	253, 1117,
	254, 1117,
	255, 1117,
	256, 1117,
	257, 1117,
	258, 1117,
	259, 1117,
	261, 1117,
	262, 1117,
	263, 1117,
	264, 1117,
	265, 1117,
	267, 1117,
	269, 1117,
	271, 1117,
	273, 1117,
	274, 1117,
	275, 1117,
	276, 1117,
	277, 1117,
	279, 1117,
	280, 1117,
	281, 1117,
	283, 1117,
	284, 1117,
	285, 1117,
	286, 1117,
	289, 1117,
	290, 1117,
	291, 1117,
	293, 1117,
	295, 1117,
	296, 1117,
	297, 1117,
	298, 1117,
	299, 1117,
	300, 1117,
	301, 1117,
	302, 1117,
	303, 1117,
	304, 1117,
	306, 1117,
	307, 1117,
	308, 1117,
	309, 1117,
	310, 1117,
	311, 1117,
	312, 1117,
	313, 1117,
	314, 1117,
	316, 1117,
	318, 1117,
	319, 1117,
	320, 1117,
	321, 1117,
	322, 1117,
	323, 1117,
	324, 1117,
	325, 1117,
	326, 1117,
	327, 1117,
	329, 1117,
	330, 1117,
	331, 1117,
	332, 1117,
	333, 1117,
	334, 1117,
	336, 1117,
	337, 1117,
	338, 1117,
	339, 1117,
	340, 1117,
	341, 1117,
	342, 1117,
	343, 1117,
	345, 1117,
	347, 1117,
	348, 1117,
	349, 1117,
	350, 1117,
	351, 1117,
	352, 1117,
	354, 1117,
	355, 1117,
	356, 1117,
	357, 1117,
	358, 1117,
	359, 1117,
	360, 1117,
	361, 1117,
	363, 1117,
	364, 1117,
	365, 1117,
	366, 1117,
	367, 1117,
	368, 1117,
	369, 1117,
	370, 1117,
	371, 1117,
	372, 1117,
	374, 1117,
	375, 1117,
	376, 1117,
	377, 1117,
	378, 1117,
	380, 1117,
	381, 1117,
	382, 1117,
	383, 1117,
	384, 1117,
	386, 1117,
	387, 1117,
	388, 1117,
	389, 1117,
	390, 1117,
	391, 1117,
	392, 1117,
	393, 1117,
	394, 1117,
	395, 1117,
	396, 1117,
	397, 1117,
	399, 1117,
	400, 1117,
	401, 1117,
	403, 1117,
	404, 1117,
	405, 1117,
	406, 1117,
	407, 1117,
	408, 1117,
	409, 1117,
	411, 1117,
	412, 1117,
	413, 1117,
	414, 1117,
	415, 1117,
	417, 1117,
	419, 1117,
	420, 1117,
	421, 1117,
	422, 1117,
	423, 1117,
	425, 1117,
	426, 1117,
	427, 1117,
	429, 1117,
	430, 1117,
	433, 1117,
	434, 1117,
	435, 1117,
	436, 1117,
	437, 1117,
	438, 1117,
	439, 1117,
	441, 1117,
	443, 1117,
	444, 1117,
	445, 1117,
	446, 1117,
	447, 1117,
	448, 1117,
	449, 1117,
	451, 1117,
	452, 1117,
	453, 1117,
	458, 1117,
	459, 1117,
	460, 1117,
	461, 1117,
	462, 1117,
	463, 1117,
	-2, 0,
	-1, 125,
	1, 994,
	213, 994,
	316, 994,
	324, 994,
	466, 994,
	489, 994,
	-2, 0,
	-1, 127,
	1, 994,
	489, 994,
	-2, 0,
	-1, 128,
	1, 994,
	489, 994,
	-2, 0,
	-1, 129,
	1, 994,
	416, 994,
	489, 994,
	-2, 0,
	-1, 154,
	128, 1088,
	144, 1088,
	157, 1088,
	206, 1088,
	236, 1088,
	278, 1088,
	288, 1088,
	431, 1088,
	-2, 1063,
	-1, 187,
	4, 1124,
	5, 1124,
	6, 1124,
	7, 1124,
	8, 1124,
	9, 1124,
	10, 1124,
	21, 1124,
	22, 1124,
	23, 1124,
	24, 1124,
	25, 1124,
	27, 1124,
	33, 1124,
	34, 1124,
	38, 1124,
	39, 1124,
	40, 1124,
	41, 1124,
	42, 1124,
	43, 1124,
	44, 1124,
	45, 1124,
	46, 1124,
	47, 1124,
	48, 1124,
	49, 1124,
	50, 1124,
	52, 1124,
	53, 1124,
	54, 1124,
	55, 1124,
	56, 1124,
	57, 1124,
	58, 1124,
	59, 1124,
	60, 1124,
	61, 1124,
	62, 1124,
	63, 1124,
	64, 1124,
	66, 1124,
	67, 1124,
	68, 1124,
	70, 1124,
	72, 1124,
	73, 1124,
	74, 1124,
	75, 1124,
	76, 1124,
	77, 1124,
	80, 1124,
	81, 1124,
	82, 1124,
	83, 1124,
	85, 1124,
	87, 1124,
	88, 1124,
	89, 1124,
	91, 1124,
	92, 1124,
	93, 1124,
	94, 1124,
	95, 1124,
	96, 1124,
	97, 1124,
	98, 1124,
	99, 1124,
	100, 1124,
	101, 1124,
	102, 1124,
	103, 1124,
	104, 1124,
	105, 1124,
	106, 1124,
	107, 1124,
	108, 1124,
	109, 1124,
	110, 1124,
	111, 1124,
	112, 1124,
	114, 1124,
	115, 1124,
	117, 1124,
	120, 1124,
	121, 1124,
	122, 1124,
	124, 1124,
	126, 1124,
	127, 1124,
	129, 1124,
	130, 1124,
	131, 1124,
	132, 1124,
	133, 1124,
	134, 1124,
	135, 1124,
	136, 1124,
	137, 1124,
	138, 1124,
	139, 1124,
	140, 1124,
	141, 1124,
	142, 1124,
	143, 1124,
	149, 1124,
	150, 1124,
	151, 1124,
	152, 1124,
	153, 1124,
	154, 1124,
	156, 1124,
	158, 1124,
	161, 1124,
	162, 1124,
	163, 1124,
	164, 1124,
	165, 1124,
	166, 1124,
	168, 1124,
	169, 1124,
	171, 1124,
	172, 1124,
	174, 1124,
	175, 1124,
	176, 1124,
	177, 1124,
	178, 1124,
	179, 1124,
	180, 1124,
	181, 1124,
	182, 1124,
	183, 1124,
	184, 1124,
	186, 1124,
	187, 1124,
	188, 1124,
	189, 1124,
	192, 1124,
	193, 1124,
	194, 1124,
	195, 1124,
	197, 1124,
	198, 1124,
	199, 1124,
	200, 1124,
	201, 1124,
	202, 1124,
	203, 1124,
	204, 1124,
	205, 1124,
	207, 1124,
	209, 1124,
	210, 1124,
	211, 1124,
	212, 1124,
	213, 1124,
	214, 1124,
	215, 1124,
	216, 1124,
	217, 1124,
	218, 1124,
	221, 1124,
	222, 1124,
	223, 1124,
	224, 1124,
	225, 1124,
	227, 1124,
	228, 1124,
	230, 1124,
	231, 1124,
	232, 1124,
	233, 1124,
	234, 1124,
	235, 1124,
	237, 1124,
	238, 1124,
	239, 1124,
	240, 1124,
	241, 1124,
	242, 1124,
	243, 1124,
	244, 1124,
	245, 1124,
	247, 1124,
	248, 1124,
	249, 1124,
	250, 1124,
	251, 1124,
	252, 1124,
	253, 1124,
	254, 1124,
	255, 1124,
	256, 1124,
	257, 1124,
	258, 1124,
	259, 1124,
	260, 1124,
	261, 1124,
	262, 1124,
	263, 1124,
	264, 1124,
	265, 1124,
	266, 1124,
	267, 1124,
	268, 1124,
	269, 1124,
	270, 1124,
	271, 1124,
	272, 1124,
	273, 1124,
	274, 1124,
	275, 1124,
	276, 1124,
	277, 1124,
	279, 1124,
	280, 1124,
	281, 1124,
	284, 1124,
	285, 1124,
	286, 1124,
	289, 1124,
	290, 1124,
	291, 1124,
	292, 1124,
	293, 1124,
	294, 1124,
	295, 1124,
	296, 1124,
	297, 1124,
	298, 1124,
	299, 1124,
	300, 1124,
	301, 1124,
	302, 1124,
	303, 1124,
	304, 1124,
	306, 1124,
	307, 1124,
	308, 1124,
	309, 1124,
	310, 1124,
	311, 1124,
	312, 1124,
	313, 1124,
	314, 1124,
	316, 1124,
	318, 1124,
	319, 1124,
	320, 1124,
	321, 1124,
	322, 1124,
	323, 1124,
	324, 1124,
	325, 1124,
	326, 1124,
	327, 1124,
	329, 1124,
	330, 1124,
	331, 1124,
	332, 1124,
	333, 1124,
	334, 1124,
	336, 1124,
	337, 1124,
	338, 1124,
	339, 1124,
	340, 1124,
	341, 1124,
	342, 1124,
	343, 1124,
	345, 1124,
	346, 1124,
	347, 1124,
	348, 1124,
	349, 1124,
	350, 1124,
	351, 1124,
	352, 1124,
	354, 1124,
	355, 1124,
	356, 1124,
	357, 1124,
	358, 1124,
	359, 1124,
	360, 1124,
	361, 1124,
	363, 1124,
	364, 1124,
	365, 1124,
	366, 1124,
	367, 1124,
	368, 1124,
	369, 1124,
	370, 1124,
	371, 1124,
	372, 1124,
	373, 1124,
	374, 1124,
	375, 1124,
	376, 1124,
	377, 1124,
	378, 1124,
	379, 1124,
	380, 1124,
	381, 1124,
	382, 1124,
	383, 1124,
	384, 1124,
	386, 1124,
	387, 1124,
	388, 1124,
	389, 1124,
	390, 1124,
	391, 1124,
	392, 1124,
	393, 1124,
	394, 1124,
	395, 1124,
	396, 1124,
	397, 1124,
	399, 1124,
	400, 1124,
	401, 1124,
	403, 1124,
	404, 1124,
	405, 1124,
	406, 1124,
	407, 1124,
	408, 1124,
	409, 1124,
	411, 1124,
	412, 1124,
	413, 1124,
	414, 1124,
	415, 1124,
	417, 1124,
	419, 1124,
	420, 1124,
	421, 1124,
	422, 1124,
	423, 1124,
	424, 1124,
	425, 1124,
	426, 1124,
	427, 1124,
	429, 1124,
	430, 1124,
	432, 1124,
	433, 1124,
	434, 1124,
	435, 1124,
	436, 1124,
	437, 1124,
	438, 1124,
	439, 1124,
	440, 1124,
	441, 1124,
	443, 1124,
	444, 1124,
	445, 1124,
	446, 1124,
	447, 1124,
	448, 1124,
	449, 1124,
	451, 1124,
	452, 1124,
	453, 1124,
	458, 1124,
	459, 1124,
	460, 1124,
	461, 1124,
	462, 1124,
	463, 1124,
	464, 1124,
	470, 1124,
	477, 1124,
	478, 1124,
	479, 1124,
	486, 1124,
	490, 1124,
	-2, 0,
	-1, 587,
	160, 1846,
	416, 1846,
	469, 1846,
	488, 1846,
	-2, 0,
	-1, 588,
	160, 1930,
	416, 1930,
	469, 1930,
	488, 1930,
	-2, 0,
	-1, 589,
	160, 1835,
	416, 1835,
	469, 1835,
	488, 1835,
	-2, 0,
	-1, 591,
	160, 2031,
	416, 2031,
	469, 2031,
	488, 2031,
	-2, 0,
	-1, 593,
	160, 2061,
	416, 2061,
	469, 2061,
	488, 2061,
	-2, 0,
	-1, 600,
	160, 1945,
	416, 1945,
	469, 1945,
	488, 1945,
	-2, 504,
	-1, 628,
	488, 1790,
	491, 1790,
	-2, 719,
	-1, 629,
	488, 1792,
	491, 1792,
	-2, 720,
	-1, 630,
	488, 1791,
	491, 1791,
	-2, 721,
	-1, 631,
	491, 1727,
	-2, 722,
	-1, 673,
	451, 922,
	-2, 758,
	-1, 712,
	4, 940,
	21, 940,
	22, 940,
	23, 940,
	24, 940,
	25, 940,
	27, 940,
	33, 940,
	38, 940,
	39, 940,
	40, 940,
	41, 940,
	42, 940,
	43, 940,
	44, 940,
	45, 940,
	46, 940,
	47, 940,
	48, 940,
	49, 940,
	50, 940,
	52, 940,
	53, 940,
	54, 940,
	55, 940,
	56, 940,
	57, 940,
	58, 940,
	61, 940,
	62, 940,
	63, 940,
	64, 940,
	66, 940,
	67, 940,
	68, 940,
	72, 940,
	73, 940,
	74, 940,
	75, 940,
	76, 940,
	77, 940,
	80, 940,
	81, 940,
	82, 940,
	83, 940,
	85, 940,
	87, 940,
	88, 940,
	89, 940,
	91, 940,
	93, 940,
	94, 940,
	102, 940,
	103, 940,
	104, 940,
	105, 940,
	106, 940,
	107, 940,
	108, 940,
	109, 940,
	111, 940,
	112, 940,
	114, 940,
	115, 940,
	117, 940,
	120, 940,
	121, 940,
	122, 940,
	124, 940,
	126, 940,
	127, 940,
	129, 940,
	130, 940,
	131, 940,
	132, 940,
	133, 940,
	134, 940,
	135, 940,
	136, 940,
	137, 940,
	138, 940,
	139, 940,
	140, 940,
	141, 940,
	143, 940,
	149, 940,
	150, 940,
	151, 940,
	152, 940,
	153, 940,
	154, 940,
	156, 940,
	158, 940,
	162, 940,
	163, 940,
	164, 940,
	165, 940,
	166, 940,
	168, 940,
	169, 940,
	171, 940,
	172, 940,
	174, 940,
	175, 940,
	176, 940,
	177, 940,
	178, 940,
	179, 940,
	180, 940,
	181, 940,
	183, 940,
	184, 940,
	186, 940,
	187, 940,
	188, 940,
	189, 940,
	192, 940,
	193, 940,
	194, 940,
	195, 940,
	198, 940,
	199, 940,
	200, 940,
	201, 940,
	202, 940,
	203, 940,
	204, 940,
	205, 940,
	207, 940,
	209, 940,
	211, 940,
	213, 940,
	214, 940,
	215, 940,
	217, 940,
	218, 940,
	221, 940,
	222, 940,
	223, 940,
	224, 940,
	225, 940,
	227, 940,
	228, 940,
	230, 940,
	231, 940,
	233, 940,
	234, 940,
	237, 940,
	238, 940,
	239, 940,
	242, 940,
	243, 940,
	244, 940,
	245, 940,
	247, 940,
	248, 940,
	249, 940,
	250, 940,
	251, 940,
	252, 940,
	253, 940,
	254, 940,
	255, 940,
	256, 940,
	257, 940,
	258, 940,
	259, 940,
	261, 940,
	262, 940,
	263, 940,
	264, 940,
	265, 940,
	267, 940,
	269, 940,
	271, 940,
	273, 940,
	274, 940,
	275, 940,
	276, 940,
	277, 940,
	279, 940,
	280, 940,
	281, 940,
	284, 940,
	285, 940,
	286, 940,
	289, 940,
	290, 940,
	291, 940,
	293, 940,
	295, 940,
	296, 940,
	297, 940,
	298, 940,
	299, 940,
	300, 940,
	301, 940,
	302, 940,
	303, 940,
	304, 940,
	306, 940,
	307, 940,
	308, 940,
	309, 940,
	310, 940,
	311, 940,
	312, 940,
	313, 940,
	314, 940,
	316, 940,
	318, 940,
	319, 940,
	320, 940,
	321, 940,
	322, 940,
	323, 940,
	324, 940,
	325, 940,
	326, 940,
	327, 940,
	329, 940,
	330, 940,
	331, 940,
	332, 940,
	333, 940,
	334, 940,
	336, 940,
	337, 940,
	338, 940,
	339, 940,
	340, 940,
	341, 940,
	342, 940,
	343, 940,
	345, 940,
	347, 940,
	348, 940,
	349, 940,
	350, 940,
	351, 940,
	352, 940,
	354, 940,
	355, 940,
	356, 940,
	357, 940,
	358, 940,
	359, 940,
	360, 940,
	361, 940,
	363, 940,
	364, 940,
	365, 940,
	366, 940,
	367, 940,
	368, 940,
	369, 940,
	370, 940,
	371, 940,
	372, 940,
	374, 940,
	375, 940,
	376, 940,
	377, 940,
	378, 940,
	380, 940,
	381, 940,
	382, 940,
	383, 940,
	384, 940,
	386, 940,
	387, 940,
	388, 940,
	389, 940,
	390, 940,
	391, 940,
	392, 940,
	393, 940,
	394, 940,
	395, 940,
	396, 940,
	397, 940,
	399, 940,
	400, 940,
	401, 940,
	403, 940,
	404, 940,
	405, 940,
	406, 940,
	407, 940,
	408, 940,
	409, 940,
	411, 940,
	412, 940,
	413, 940,
	414, 940,
	415, 940,
	417, 940,
	419, 940,
	420, 940,
	421, 940,
	422, 940,
	423, 940,
	425, 940,
	426, 940,
	427, 940,
	429, 940,
	430, 940,
	433, 940,
	434, 940,
	435, 940,
	436, 940,
	437, 940,
	438, 940,
	439, 940,
	441, 940,
	443, 940,
	444, 940,
	445, 940,
	446, 940,
	447, 940,
	448, 940,
	449, 940,
	451, 940,
	452, 940,
	453, 940,
	458, 940,
	459, 940,
	460, 940,
	461, 940,
	462, 940,
	463, 940,
	-2, 0,
	-1, 776,
	320, 647,
	372, 647,
	-2, 0,
	-1, 777,
	320, 646,
	372, 646,
	-2, 594,
	-1, 781,
	1, 676,
	485, 676,
	487, 676,
	489, 676,
	-2, 0,
	-1, 782,
	1, 718,
	157, 718,
	485, 718,
	487, 718,
	489, 718,
	-2, 0,
	-1, 790,
	1, 650,
	485, 650,
	487, 650,
	489, 650,
	-2, 0,
	-1, 793,
	1, 676,
	485, 676,
	487, 676,
	489, 676,
	-2, 0,
	-1, 794,
	1, 678,
	485, 678,
	487, 678,
	489, 678,
	-2, 0,
	-1, 795,
	1, 681,
	485, 681,
	487, 681,
	489, 681,
	-2, 0,
	-1, 800,
	1, 697,
	485, 697,
	487, 697,
	489, 697,
	-2, 0,
	-1, 801,
	1, 699,
	485, 699,
	487, 699,
	489, 699,
	-2, 0,
	-1, 844,
	144, 1126,
	157, 1126,
	236, 1126,
	278, 1126,
	-2, 1067,
	-1, 857,
	144, 1125,
	157, 1125,
	236, 1125,
	278, 1125,
	-2, 1064,
	-1, 881,
	488, 1789,
	-2, 512,
	-1, 909,
	486, 1781,
	-2, 1772,
	-1, 916,
	5, 1283,
	-2, 1823,
	-1, 917,
	5, 1284,
	-2, 1829,
	-1, 918,
	5, 1285,
	-2, 1828,
	-1, 919,
	5, 1286,
	-2, 2058,
	-1, 920,
	5, 1287,
	-2, 1947,
	-1, 921,
	5, 1288,
	-2, 2023,
	-1, 922,
	5, 1289,
	-2, 2025,
	-1, 923,
	5, 1290,
	-2, 2038,
	-1, 924,
	5, 1291,
	-2, 2026,
	-1, 925,
	5, 1292,
	-2, 2027,
	-1, 926,
	5, 1293,
	-2, 1822,
	-1, 927,
	5, 1294,
	-2, 2075,
	-1, 928,
	5, 1295,
	-2, 1903,
	-1, 929,
	5, 1296,
	-2, 1959,
	-1, 930,
	5, 1297,
	-2, 1961,
	-1, 931,
	5, 1298,
	-2, 1907,
	-1, 932,
	5, 1299,
	486, 1799,
	-2, 1790,
	-1, 938,
	486, 1800,
	-2, 1791,
	-1, 940,
	5, 1303,
	-2, 2110,
	-1, 941,
	5, 1304,
	-2, 2111,
	-1, 942,
	5, 1305,
	-2, 1906,
	-1, 943,
	5, 1306,
	-2, 2125,
	-1, 944,
	5, 1307,
	-2, 1908,
	-1, 945,
	5, 1308,
	-2, 1909,
	-1, 946,
	5, 1309,
	-2, 1910,
	-1, 947,
	5, 1310,
	-2, 2090,
	-1, 948,
	5, 1311,
	-2, 2123,
	-1, 949,
	5, 1312,
	-2, 1884,
	-1, 950,
	5, 1313,
	-2, 1885,
	-1, 951,
	5, 1327,
	-2, 2102,
	-1, 953,
	5, 1302,
	-2, 2098,
	-1, 954,
	5, 1302,
	-2, 2097,
	-1, 955,
	5, 1302,
	-2, 2116,
	-1, 956,
	5, 1319,
	-2, 2092,
	-1, 957,
	5, 1320,
	-2, 1824,
	-1, 958,
	5, 1330,
	-2, 2091,
	-1, 959,
	5, 1332,
	-2, 2134,
	-1, 961,
	5, 1343,
	-2, 1857,
	-1, 962,
	5, 1354,
	-2, 2127,
	-1, 963,
	5, 1346,
	-2, 2128,
	-1, 964,
	5, 1354,
	-2, 2129,
	-1, 965,
	5, 1350,
	-2, 2130,
	-1, 966,
	5, 1271,
	-2, 2103,
	-1, 967,
	5, 1272,
	-2, 2104,
	-1, 968,
	5, 1254,
	-2, 1916,
	-1, 969,
	5, 1255,
	-2, 1917,
	-1, 970,
	488, 1787,
	-2, 1771,
	-1, 971,
	486, 2155,
	-2, 1788,
	-1, 993,
	5, 1338,
	-2, 2049,
	-1, 1011,
	5, 1337,
	-2, 2135,
	-1, 1021,
	5, 1339,
	452, 1339,
	-2, 2093,
	-1, 1022,
	5, 1340,
	452, 1340,
	-2, 2094,
	-1, 1059,
	486, 1799,
	-2, 1790,
	-1, 1087,
	160, 2061,
	416, 2061,
	469, 2061,
	488, 2061,
	-2, 0,
	-1, 1090,
	1, 490,
	489, 490,
	-2, 1002,
	-1, 1215,
	336, 1767,
	479, 1767,
	-2, 1765,
	-1, 1227,
	490, 1767,
	-2, 1768,
	-1, 1228,
	1, 919,
	485, 919,
	487, 919,
	489, 919,
	-2, 1113,
	-1, 1276,
	326, 757,
	451, 757,
	-2, 249,
	-1, 1299,
	1, 919,
	485, 919,
	487, 919,
	489, 919,
	-2, 1113,
	-1, 1305,
	4, 940,
	21, 940,
	22, 940,
	23, 940,
	24, 940,
	25, 940,
	27, 940,
	33, 940,
	38, 940,
	39, 940,
	40, 940,
	41, 940,
	42, 940,
	43, 940,
	44, 940,
	45, 940,
	46, 940,
	47, 940,
	48, 940,
	49, 940,
	50, 940,
	52, 940,
	53, 940,
	54, 940,
	55, 940,
	56, 940,
	57, 940,
	58, 940,
	61, 940,
	62, 940,
	63, 940,
	64, 940,
	66, 940,
	67, 940,
	68, 940,
	72, 940,
	73, 940,
	74, 940,
	75, 940,
	76, 940,
	77, 940,
	80, 940,
	81, 940,
	82, 940,
	83, 940,
	85, 940,
	87, 940,
	88, 940,
	89, 940,
	91, 940,
	93, 940,
	94, 940,
	102, 940,
	103, 940,
	104, 940,
	105, 940,
	106, 940,
	107, 940,
	108, 940,
	109, 940,
	111, 940,
	112, 940,
	114, 940,
	115, 940,
	117, 940,
	120, 940,
	121, 940,
	122, 940,
	124, 940,
	126, 940,
	127, 940,
	129, 940,
	130, 940,
	131, 940,
	132, 940,
	133, 940,
	134, 940,
	135, 940,
	136, 940,
	137, 940,
	138, 940,
	139, 940,
	140, 940,
	141, 940,
	149, 940,
	150, 940,
	151, 940,
	152, 940,
	153, 940,
	154, 940,
	156, 940,
	158, 940,
	162, 940,
	163, 940,
	164, 940,
	165, 940,
	166, 940,
	168, 940,
	169, 940,
	171, 940,
	172, 940,
	174, 940,
	175, 940,
	176, 940,
	177, 940,
	178, 940,
	179, 940,
	180, 940,
	181, 940,
	183, 940,
	184, 940,
	186, 940,
	187, 940,
	188, 940,
	189, 940,
	193, 940,
	194, 940,
	195, 940,
	198, 940,
	199, 940,
	200, 940,
	201, 940,
	202, 940,
	203, 940,
	204, 940,
	205, 940,
	207, 940,
	209, 940,
	211, 940,
	213, 940,
	214, 940,
	215, 940,
	217, 940,
	218, 940,
	221, 940,
	222, 940,
	223, 940,
	224, 940,
	225, 940,
	227, 940,
	228, 940,
	230, 940,
	231, 940,
	233, 940,
	234, 940,
	237, 940,
	238, 940,
	239, 940,
	242, 940,
	243, 940,
	244, 940,
	245, 940,
	247, 940,
	248, 940,
	249, 940,
	250, 940,
	251, 940,
	252, 940,
	253, 940,
	254, 940,
	255, 940,
	256, 940,
	257, 940,
	258, 940,
	259, 940,
	261, 940,
	262, 940,
	263, 940,
	264, 940,
	265, 940,
	267, 940,
	271, 940,
	273, 940,
	274, 940,
	275, 940,
	276, 940,
	277, 940,
	279, 940,
	280, 940,
	281, 940,
	282, 940,
	284, 940,
	285, 940,
	286, 940,
	289, 940,
	290, 940,
	291, 940,
	293, 940,
	295, 940,
	296, 940,
	297, 940,
	298, 940,
	299, 940,
	300, 940,
	301, 940,
	302, 940,
	303, 940,
	304, 940,
	306, 940,
	307, 940,
	308, 940,
	309, 940,
	310, 940,
	311, 940,
	312, 940,
	313, 940,
	314, 940,
	316, 940,
	318, 940,
	319, 940,
	320, 940,
	321, 940,
	322, 940,
	323, 940,
	324, 940,
	325, 940,
	326, 940,
	327, 940,
	329, 940,
	330, 940,
	331, 940,
	332, 940,
	333, 940,
	334, 940,
	336, 940,
	337, 940,
	338, 940,
	339, 940,
	340, 940,
	341, 940,
	342, 940,
	343, 940,
	345, 940,
	347, 940,
	348, 940,
	349, 940,
	350, 940,
	351, 940,
	352, 940,
	354, 940,
	355, 940,
	356, 940,
	357, 940,
	358, 940,
	359, 940,
	360, 940,
	361, 940,
	363, 940,
	364, 940,
	365, 940,
	366, 940,
	367, 940,
	368, 940,
	369, 940,
	370, 940,
	371, 940,
	372, 940,
	374, 940,
	375, 940,
	376, 940,
	377, 940,
	378, 940,
	380, 940,
	381, 940,
	382, 940,
	383, 940,
	384, 940,
	386, 940,
	387, 940,
	388, 940,
	389, 940,
	390, 940,
	391, 940,
	392, 940,
	393, 940,
	394, 940,
	395, 940,
	396, 940,
	397, 940,
	399, 940,
	400, 940,
	401, 940,
	403, 940,
	404, 940,
	405, 940,
	406, 940,
	407, 940,
	408, 940,
	409, 940,
	411, 940,
	412, 940,
	413, 940,
	414, 940,
	415, 940,
	417, 940,
	419, 940,
	420, 940,
	421, 940,
	422, 940,
	423, 940,
	425, 940,
	426, 940,
	427, 940,
	429, 940,
	430, 940,
	433, 940,
	434, 940,
	435, 940,
	436, 940,
	437, 940,
	438, 940,
	439, 940,
	441, 940,
	443, 940,
	444, 940,
	445, 940,
	446, 940,
	447, 940,
	448, 940,
	449, 940,
	451, 940,
	452, 940,
	453, 940,
	458, 940,
	459, 940,
	460, 940,
	461, 940,
	462, 940,
	463, 940,
	-2, 0,
	-1, 1367,
	1, 365,
	485, 365,
	487, 365,
	489, 365,
	-2, 1087,
	-1, 1370,
	4, 2133,
	11, 2133,
	12, 2133,
	14, 2133,
	15, 2133,
	16, 2133,
	17, 2133,
	18, 2133,
	19, 2133,
	21, 2133,
	22, 2133,
	23, 2133,
	24, 2133,
	25, 2133,
	27, 2133,
	30, 2133,
	31, 2133,
	33, 2133,
	35, 2133,
	38, 2133,
	39, 2133,
	40, 2133,
	41, 2133,
	42, 2133,
	43, 2133,
	44, 2133,
	45, 2133,
	46, 2133,
	47, 2133,
	48, 2133,
	49, 2133,
	50, 2133,
	52, 2133,
	53, 2133,
	54, 2133,
	55, 2133,
	56, 2133,
	57, 2133,
	58, 2133,
	61, 2133,
	62, 2133,
	63, 2133,
	64, 2133,
	66, 2133,
	67, 2133,
	68, 2133,
	69, 2133,
	72, 2133,
	73, 2133,
	74, 2133,
	75, 2133,
	76, 2133,
	77, 2133,
	78, 2133,
	80, 2133,
	81, 2133,
	82, 2133,
	83, 2133,
	85, 2133,
	86, 2133,
	87, 2133,
	88, 2133,
	89, 2133,
	91, 2133,
	92, 2133,
	93, 2133,
	94, 2133,
	102, 2133,
	103, 2133,
	104, 2133,
	105, 2133,
	106, 2133,
	107, 2133,
	108, 2133,
	109, 2133,
	111, 2133,
	112, 2133,
	114, 2133,
	115, 2133,
	117, 2133,
	120, 2133,
	121, 2133,
	122, 2133,
	124, 2133,
	126, 2133,
	127, 2133,
	129, 2133,
	130, 2133,
	131, 2133,
	132, 2133,
	133, 2133,
	134, 2133,
	135, 2133,
	136, 2133,
	137, 2133,
	138, 2133,
	139, 2133,
	140, 2133,
	141, 2133,
	145, 2133,
	146, 2133,
	147, 2133,
	148, 2133,
	149, 2133,
	150, 2133,
	151, 2133,
	152, 2133,
	153, 2133,
	154, 2133,
	155, 2133,
	156, 2133,
	158, 2133,
	161, 2133,
	162, 2133,
	163, 2133,
	164, 2133,
	165, 2133,
	166, 2133,
	168, 2133,
	169, 2133,
	171, 2133,
	172, 2133,
	174, 2133,
	175, 2133,
	176, 2133,
	177, 2133,
	178, 2133,
	179, 2133,
	180, 2133,
	181, 2133,
	182, 2133,
	183, 2133,
	184, 2133,
	185, 2133,
	186, 2133,
	187, 2133,
	188, 2133,
	189, 2133,
	190, 2133,
	191, 2133,
	193, 2133,
	194, 2133,
	195, 2133,
	197, 2133,
	198, 2133,
	199, 2133,
	200, 2133,
	201, 2133,
	202, 2133,
	203, 2133,
	204, 2133,
	205, 2133,
	207, 2133,
	209, 2133,
	210, 2133,
	211, 2133,
	212, 2133,
	213, 2133,
	214, 2133,
	215, 2133,
	216, 2133,
	217, 2133,
	218, 2133,
	219, 2133,
	220, 2133,
	221, 2133,
	222, 2133,
	223, 2133,
	224, 2133,
	225, 2133,
	227, 2133,
	228, 2133,
	230, 2133,
	231, 2133,
	232, 2133,
	233, 2133,
	234, 2133,
	235, 2133,
	237, 2133,
	238, 2133,
	239, 2133,
	242, 2133,
	243, 2133,
	244, 2133,
	245, 2133,
	246, 2133,
	247, 2133,
	248, 2133,
	249, 2133,
	250, 2133,
	251, 2133,
	252, 2133,
	253, 2133,
	254, 2133,
	255, 2133,
	256, 2133,
	257, 2133,
	258, 2133,
	259, 2133,
	260, 2133,
	261, 2133,
	262, 2133,
	263, 2133,
	264, 2133,
	265, 2133,
	267, 2133,
	270, 2133,
	271, 2133,
	273, 2133,
	274, 2133,
	275, 2133,
	276, 2133,
	277, 2133,
	279, 2133,
	280, 2133,
	281, 2133,
	284, 2133,
	285, 2133,
	286, 2133,
	287, 2133,
	289, 2133,
	290, 2133,
	291, 2133,
	293, 2133,
	295, 2133,
	296, 2133,
	297, 2133,
	298, 2133,
	299, 2133,
	300, 2133,
	301, 2133,
	302, 2133,
	303, 2133,
	304, 2133,
	306, 2133,
	307, 2133,
	308, 2133,
	309, 2133,
	310, 2133,
	311, 2133,
	312, 2133,
	313, 2133,
	314, 2133,
	316, 2133,
	318, 2133,
	319, 2133,
	320, 2133,
	321, 2133,
	322, 2133,
	323, 2133,
	324, 2133,
	325, 2133,
	326, 2133,
	327, 2133,
	329, 2133,
	330, 2133,
	331, 2133,
	332, 2133,
	333, 2133,
	334, 2133,
	335, 2133,
	336, 2133,
	337, 2133,
	338, 2133,
	339, 2133,
	340, 2133,
	341, 2133,
	342, 2133,
	343, 2133,
	345, 2133,
	346, 2133,
	347, 2133,
	348, 2133,
	349, 2133,
	350, 2133,
	351, 2133,
	352, 2133,
	353, 2133,
	354, 2133,
	355, 2133,
	356, 2133,
	357, 2133,
	358, 2133,
	359, 2133,
	360, 2133,
	361, 2133,
	363, 2133,
	364, 2133,
	365, 2133,
	366, 2133,
	367, 2133,
	368, 2133,
	369, 2133,
	370, 2133,
	371, 2133,
	372, 2133,
	374, 2133,
	375, 2133,
	376, 2133,
	377, 2133,
	378, 2133,
	379, 2133,
	380, 2133,
	381, 2133,
	382, 2133,
	383, 2133,
	384, 2133,
	386, 2133,
	387, 2133,
	388, 2133,
	389, 2133,
	390, 2133,
	391, 2133,
	392, 2133,
	393, 2133,
	394, 2133,
	395, 2133,
	396, 2133,
	397, 2133,
	399, 2133,
	400, 2133,
	401, 2133,
	403, 2133,
	404, 2133,
	405, 2133,
	406, 2133,
	407, 2133,
	408, 2133,
	409, 2133,
	411, 2133,
	412, 2133,
	413, 2133,
	414, 2133,
	415, 2133,
	417, 2133,
	419, 2133,
	420, 2133,
	421, 2133,
	422, 2133,
	423, 2133,
	425, 2133,
	426, 2133,
	427, 2133,
	429, 2133,
	430, 2133,
	433, 2133,
	434, 2133,
	435, 2133,
	436, 2133,
	437, 2133,
	438, 2133,
	439, 2133,
	441, 2133,
	443, 2133,
	444, 2133,
	445, 2133,
	446, 2133,
	447, 2133,
	448, 2133,
	449, 2133,
	451, 2133,
	452, 2133,
	453, 2133,
	458, 2133,
	459, 2133,
	460, 2133,
	461, 2133,
	462, 2133,
	463, 2133,
	464, 2133,
	465, 2133,
	467, 2133,
	468, 2133,
	469, 2133,
	470, 2133,
	471, 2133,
	472, 2133,
	474, 2133,
	475, 2133,
	476, 2133,
	477, 2133,
	478, 2133,
	479, 2133,
	480, 2133,
	481, 2133,
	482, 2133,
	484, 2133,
	487, 2133,
	488, 2133,
	490, 2133,
	491, 2133,
	-2, 0,
	-1, 1375,
	160, 2031,
	416, 2031,
	469, 2031,
	488, 2031,
	-2, 0,
	-1, 1407,
	320, 647,
	372, 647,
	-2, 0,
	-1, 1431,
	1, 642,
	485, 642,
	487, 642,
	489, 642,
	-2, 0,
	-1, 1432,
	1, 667,
	485, 667,
	487, 667,
	489, 667,
	-2, 0,
	-1, 1433,
	1, 649,
	485, 649,
	487, 649,
	489, 649,
	-2, 0,
	-1, 1435,
	1, 653,
	485, 653,
	487, 653,
	489, 653,
	-2, 0,
	-1, 1462,
	1, 2082,
	485, 2082,
	487, 2082,
	488, 2082,
	489, 2082,
	-2, 695,
	-1, 1463,
	1, 2028,
	485, 2028,
	487, 2028,
	488, 2028,
	489, 2028,
	-2, 696,
	-1, 1478,
	1, 997,
	489, 997,
	-2, 1002,
	-1, 1481,
	144, 1125,
	157, 1125,
	236, 1125,
	278, 1125,
	-2, 1068,
	-1, 1575,
	128, 1089,
	144, 1089,
	157, 1089,
	206, 1089,
	236, 1089,
	278, 1089,
	288, 1089,
	431, 1089,
	-2, 1513,
	-1, 1634,
	487, 1661,
	-2, 0,
	-1, 1668,
	128, 1089,
	144, 1089,
	157, 1089,
	206, 1089,
	236, 1089,
	278, 1089,
	288, 1089,
	431, 1089,
	-2, 1204,
	-1, 1729,
	486, 1342,
	-2, 1330,
	-1, 1775,
	1, 492,
	489, 492,
	-2, 1002,
	-1, 1977,
	1, 644,
	485, 644,
	487, 644,
	489, 644,
	-2, 0,
	-1, 1978,
	1, 669,
	485, 669,
	487, 669,
	489, 669,
	-2, 0,
	-1, 2050,
	351, 1150,
	352, 1150,
	-2, 1375,
	-1, 2081,
	14, 0,
	15, 0,
	16, 0,
	467, 0,
	468, 0,
	469, 0,
	-2, 1393,
	-1, 2082,
	14, 0,
	15, 0,
	16, 0,
	467, 0,
	468, 0,
	469, 0,
	-2, 1394,
	-1, 2083,
	86, 0,
	219, 0,
	220, 0,
	471, 0,
	472, 0,
	-2, 1395,
	-1, 2084,
	86, 0,
	219, 0,
	220, 0,
	471, 0,
	472, 0,
	-2, 1396,
	-1, 2085,
	86, 0,
	219, 0,
	220, 0,
	471, 0,
	472, 0,
	-2, 1397,
	-1, 2086,
	86, 0,
	219, 0,
	220, 0,
	471, 0,
	472, 0,
	-2, 1398,
	-1, 2087,
	86, 0,
	219, 0,
	220, 0,
	471, 0,
	472, 0,
	-2, 1399,
	-1, 2088,
	14, 0,
	15, 0,
	16, 0,
	467, 0,
	468, 0,
	469, 0,
	-2, 1400,
	-1, 2100,
	14, 0,
	15, 0,
	16, 0,
	467, 0,
	468, 0,
	469, 0,
	-2, 1412,
	-1, 2101,
	14, 0,
	15, 0,
	16, 0,
	467, 0,
	468, 0,
	469, 0,
	-2, 1413,
	-1, 2102,
	14, 0,
	15, 0,
	16, 0,
	467, 0,
	468, 0,
	469, 0,
	-2, 1414,
	-1, 2105,
	17, 0,
	18, 0,
	19, 0,
	43, 0,
	182, 0,
	185, 0,
	235, 0,
	379, 0,
	464, 0,
	470, 0,
	-2, 1419,
	-1, 2111,
	17, 0,
	18, 0,
	19, 0,
	43, 0,
	182, 0,
	185, 0,
	235, 0,
	379, 0,
	464, 0,
	470, 0,
	-2, 1423,
	-1, 2113,
	17, 0,
	18, 0,
	19, 0,
	43, 0,
	182, 0,
	185, 0,
	235, 0,
	379, 0,
	464, 0,
	470, 0,
	-2, 1431,
	-1, 2114,
	17, 0,
	18, 0,
	19, 0,
	43, 0,
	182, 0,
	185, 0,
	235, 0,
	379, 0,
	464, 0,
	470, 0,
	-2, 1432,
	-1, 2115,
	17, 0,
	18, 0,
	19, 0,
	43, 0,
	182, 0,
	185, 0,
	235, 0,
	379, 0,
	464, 0,
	470, 0,
	-2, 1433,
	-1, 2116,
	17, 0,
	18, 0,
	19, 0,
	43, 0,
	182, 0,
	185, 0,
	235, 0,
	379, 0,
	464, 0,
	470, 0,
	-2, 1434,
	-1, 2228,
	5, 1299,
	160, 1672,
	486, 1799,
	-2, 1790,
	-1, 2229,
	160, 1673,
	-2, 2086,
	-1, 2230,
	160, 1674,
	-2, 1944,
	-1, 2231,
	160, 1675,
	-2, 1858,
	-1, 2232,
	160, 1676,
	-2, 1896,
	-1, 2233,
	160, 1677,
	-2, 1939,
	-1, 2234,
	160, 1678,
	-2, 2022,
	-1, 2235,
	160, 1679,
	-2, 1496,
	-1, 2304,
	1, 1205,
	2, 1205,
	92, 1205,
	128, 1205,
	144, 1205,
	157, 1205,
	161, 1205,
	170, 1205,
	173, 1205,
	197, 1205,
	206, 1205,
	216, 1205,
	232, 1205,
	236, 1205,
	260, 1205,
	278, 1205,
	282, 1205,
	288, 1205,
	344, 1205,
	346, 1205,
	431, 1205,
	442, 1205,
	455, 1205,
	456, 1205,
	457, 1205,
	466, 1205,
	485, 1205,
	487, 1205,
	489, 1205,
	491, 1205,
	-2, 1204,
	-1, 2317,
	486, 1773,
	-2, 1785,
	-1, 2339,
	486, 1341,
	-2, 1331,
	-1, 2441,
	1, 919,
	485, 919,
	487, 919,
	489, 919,
	-2, 1113,
	-1, 2595,
	283, 1153,
	-2, 2124,
	-1, 2596,
	283, 1154,
	-2, 2011,
	-1, 2600,
	351, 1738,
	352, 1738,
	-2, 1494,
	-1, 2601,
	351, 1742,
	352, 1742,
	-2, 1495,
	-1, 2602,
	351, 1739,
	352, 1739,
	-2, 1494,
	-1, 2603,
	351, 1743,
	352, 1743,
	-2, 1495,
	-1, 2616,
	17, 0,
	18, 0,
	19, 0,
	43, 0,
	182, 0,
	185, 0,
	235, 0,
	379, 0,
	464, 0,
	470, 0,
	-2, 1421,
	-1, 2617,
	17, 0,
	18, 0,
	19, 0,
	43, 0,
	182, 0,
	185, 0,
	235, 0,
	379, 0,
	464, 0,
	470, 0,
	-2, 1425,
	-1, 2623,
	17, 0,
	18, 0,
	19, 0,
	43, 0,
	182, 0,
	185, 0,
	235, 0,
	379, 0,
	464, 0,
	470, 0,
	-2, 1427,
	-1, 2816,
	213, 1002,
	316, 1002,
	324, 1002,
	466, 1002,
	-2, 489,
	-1, 2915,
	1, 919,
	485, 919,
	487, 919,
	489, 919,
	-2, 1113,
	-1, 3005,
	17, 0,
	18, 0,
	19, 0,
	43, 0,
	182, 0,
	185, 0,
	235, 0,
	379, 0,
	464, 0,
	470, 0,
	-2, 1429,
	-1, 3012,
	210, 0,
	212, 0,
	270, 0,
	-2, 1448,
	-1, 3078,
	14, 0,
	15, 0,
	16, 0,
	467, 0,
	468, 0,
	469, 0,
	-2, 1477,
	-1, 3079,
	14, 0,
	15, 0,
	16, 0,
	467, 0,
	468, 0,
	469, 0,
	-2, 1478,
	-1, 3080,
	14, 0,
	15, 0,
	16, 0,
	467, 0,
	468, 0,
	469, 0,
	-2, 1479,
	-1, 3084,
	14, 0,
	15, 0,
	16, 0,
	467, 0,
	468, 0,
	469, 0,
	-2, 1483,
	-1, 3085,
	14, 0,
	15, 0,
	16, 0,
	467, 0,
	468, 0,
	469, 0,
	-2, 1484,
	-1, 3086,
	14, 0,
	15, 0,
	16, 0,
	467, 0,
	468, 0,
	469, 0,
	-2, 1485,
	-1, 3130,
	486, 1774,
	-2, 1786,
	-1, 3223,
	488, 2238,
	-2, 1046,
	-1, 3274,
	210, 0,
	212, 0,
	270, 0,
	-2, 1449,
	-1, 3277,
	17, 0,
	18, 0,
	19, 0,
	43, 0,
	182, 0,
	185, 0,
	235, 0,
	379, 0,
	464, 0,
	470, 0,
	-2, 1452,
	-1, 3278,
	17, 0,
	18, 0,
	19, 0,
	43, 0,
	182, 0,
	185, 0,
	235, 0,
	379, 0,
	464, 0,
	470, 0,
	-2, 1454,
	-1, 3445,
	17, 0,
	18, 0,
	19, 0,
	43, 0,
	182, 0,
	185, 0,
	235, 0,
	379, 0,
	464, 0,
	470, 0,
	-2, 1453,
	-1, 3446,
	17, 0,
	18, 0,
	19, 0,
	43, 0,
	182, 0,
	185, 0,
	235, 0,
	379, 0,
	464, 0,
	470, 0,
	-2, 1455,
	-1, 3456,
	210, 0,
	-2, 1486,
	-1, 3572,
	210, 0,
	-2, 1487,
	-1, 3706,
	43, 0,
	182, 0,
	235, 0,
	379, 0,
	464, 0,
	470, 0,
	-2, 2089,
}

const sqlPrivate = 57344

const sqlLast = 87483

var sqlAct = [...]int{

	938, 3485, 3515, 3839, 3608, 3381, 3705, 3593, 3716, 3805,
	2747, 3682, 2901, 3257, 3672, 3669, 3653, 3151, 2260, 3717,
	3474, 3759, 3488, 1247, 2495, 3718, 1060, 3044, 3522, 3576,
	3405, 2748, 3410, 3434, 3215, 2068, 867, 2930, 3704, 1231,
	3531, 882, 219, 3338, 219, 219, 2371, 219, 219, 219,
	219, 219, 3394, 1702, 219, 2923, 2833, 2128, 2897, 219,
	1490, 3415, 2430, 2925, 2997, 630, 3196, 3152, 1119, 1674,
	1867, 3460, 1941, 1703, 2484, 2609, 2467, 858, 1930, 598,
	1826, 219, 211, 1362, 2458, 630, 2530, 2770, 1052, 2528,
	2470, 2762, 2733, 2790, 3256, 2481, 722, 3311, 2538, 2519,
	2751, 2527, 1212, 2496, 2479, 1863, 2521, 1951, 2297, 1862,
	3101, 1643, 3577, 2373, 1603, 2732, 2644, 1583, 2141, 937,
	1866, 2065, 2296, 2061, 4, 2593, 2753, 866, 147, 1220,
	1415, 2432, 1939, 2170, 1292, 1835, 1851, 2442, 2172, 2537,
	1858, 90, 2468, 1103, 1813, 934, 1811, 1478, 2278, 2796,
	2161, 2125, 1644, 2049, 2299, 1663, 1801, 2032, 2899, 2030,
	1346, 1233, 1368, 2489, 1383, 1896, 2363, 1297, 566, 1356,
	1043, 631, 632, 2531, 213, 212, 35, 1092, 2286, 2164,
	1025, 1046, 219, 219, 1653, 2224, 2187, 1566, 1491, 2142,
	2268, 154, 2407, 155, 1492, 2257, 582, 2031, 552, 626,
	1382, 592, 574, 1895, 716, 1660, 1916, 147, 1598, 1366,
	698, 1320, 673, 1244, 2054, 40, 2033, 577, 1042, 1825,
	2408, 569, 894, 39, 37, 1217, 1048, 28, 26, 24,
	1023, 3516, 1497, 788, 771, 1477, 3115, 1302, 3116, 635,
	638, 2640, 3857, 2749, 3843, 1932, 2277, 1932, 2277, 1932,
	3842, 3821, 3819, 3815, 2277, 3352, 3352, 1872, 3742, 635,
	638, 3740, 3743, 3738, 3735, 2277, 3732, 2277, 3736, 3727,
	3733, 3702, 857, 1872, 3701, 1872, 3700, 2294, 1872, 2939,
	1944, 862, 862, 2940, 733, 1505, 1506, 1574, 3697, 3696,
	3691, 3689, 1944, 1944, 3352, 3352, 3667, 3647, 863, 3641,
	3352, 2332, 3640, 2277, 3635, 1536, 2277, 3634, 3352, 1055,
	3628, 3352, 1508, 3574, 1872, 3555, 1040, 2332, 3552, 1872,
	3524, 3505, 3352, 3504, 3525, 1872, 3496, 1872, 3495, 3466,
	1872, 3447, 3352, 1872, 1434, 2332, 1026, 1026, 3432, 845,
	3423, 844, 1944, 1507, 2954, 3379, 3370, 3351, 2277, 2277,
	2277, 3352, 1527, 3276, 3231, 3225, 1100, 2332, 2970, 2970,
	1524, 3194, 3125, 3648, 3123, 3195, 3126, 1265, 3124, 3108,
	3028, 2705, 2706, 2277, 1872, 3024, 2969, 2814, 2653, 2277,
	2970, 3105, 871, 2961, 2654, 2746, 2744, 2962, 852, 2277,
	2277, 2328, 1100, 2743, 2697, 2705, 2706, 2277, 2277, 2682,
	2680, 3270, 2672, 2683, 2681, 2655, 2673, 2517, 2516, 2277,
	2444, 1947, 1947, 1027, 1944, 1072, 79, 1959, 3558, 1530,
	1531, 1532, 1533, 2347, 2331, 1872, 2326, 2277, 2332, 1513,
	2277, 2319, 2276, 2270, 1946, 1872, 2277, 1029, 1947, 1030,
	3105, 187, 1077, 2269, 1944, 3371, 1872, 2962, 2421, 2362,
	130, 1781, 1931, 2954, 2464, 2608, 63, 1871, 2360, 1830,
	1505, 1506, 1639, 1243, 1535, 1537, 3180, 2705, 2706, 3000,
	64, 125, 2978, 1661, 1861, 909, 1417, 2941, 2313, 2492,
	1536, 189, 3723, 187, 2277, 2643, 68, 1508, 3703, 2312,
	1073, 2311, 2310, 1522, 1523, 58, 2942, 2215, 2309, 1031,
	1028, 851, 42, 127, 850, 849, 848, 2573, 2705, 2706,
	847, 2723, 2724, 2725, 843, 2711, 842, 41, 1507, 73,
	1528, 960, 841, 189, 840, 839, 188, 3272, 838, 1933,
	837, 1933, 836, 1933, 835, 834, 181, 833, 832, 2711,
	44, 59, 831, 1264, 182, 830, 45, 1505, 1506, 769,
	768, 78, 767, 766, 128, 765, 764, 219, 763, 762,
	43, 89, 761, 760, 759, 156, 79, 86, 188, 758,
	757, 756, 755, 754, 1508, 2720, 753, 752, 751, 750,
	749, 748, 747, 746, 745, 219, 1259, 744, 743, 742,
	731, 730, 219, 689, 650, 649, 46, 641, 640, 639,
	612, 604, 603, 602, 1513, 1507, 2721, 156, 586, 1534,
	893, 2711, 3327, 80, 2939, 219, 1122, 219, 219, 219,
	1122, 219, 1236, 209, 208, 207, 1236, 1529, 206, 205,
	2721, 204, 203, 1102, 219, 219, 202, 1107, 201, 1535,
	1537, 187, 200, 199, 198, 197, 196, 195, 194, 193,
	2705, 2706, 2711, 2723, 2724, 2725, 192, 123, 219, 191,
	190, 3288, 3119, 2971, 1096, 1058, 2793, 2705, 2706, 3271,
	2666, 219, 1574, 219, 2649, 1236, 219, 219, 2509, 219,
	1931, 189, 2025, 2448, 2320, 2705, 2706, 2476, 2303, 219,
	2201, 1513, 1809, 1223, 187, 1528, 219, 1687, 1664, 2199,
	1215, 1592, 1249, 1227, 1109, 3419, 1062, 2726, 1073, 3615,
	219, 219, 219, 2722, 219, 1236, 3567, 2720, 3484, 1236,
	1504, 3561, 219, 1236, 219, 219, 188, 187, 3559, 3424,
	3331, 187, 81, 1236, 189, 3310, 181, 2722, 3309, 219,
	1585, 1090, 47, 2721, 182, 1525, 1521, 3297, 1518, 1516,
	1517, 1509, 1510, 1511, 1512, 1514, 1515, 3296, 1303, 1303,
	2965, 1039, 1258, 60, 2269, 156, 1877, 189, 50, 153,
	84, 189, 85, 1073, 48, 3295, 1236, 1606, 129, 188,
	3294, 3293, 1954, 1605, 49, 1115, 1436, 1209, 1214, 181,
	1239, 187, 1606, 1085, 2711, 3292, 3287, 182, 1605, 3284,
	219, 3283, 1529, 53, 1609, 1246, 1245, 123, 635, 638,
	3193, 2711, 188, 3200, 219, 2426, 188, 126, 156, 1604,
	1585, 1252, 181, 1257, 3139, 1263, 181, 3138, 3137, 2711,
	182, 189, 3129, 3098, 182, 1387, 2715, 2707, 2708, 2709,
	2710, 2712, 2713, 3097, 1371, 1373, 3096, 147, 147, 2726,
	2722, 156, 1953, 3020, 124, 2491, 1875, 1253, 3016, 2788,
	863, 2707, 2708, 2709, 2710, 2712, 2713, 3178, 157, 2740,
	2731, 1350, 1353, 1586, 2704, 1584, 188, 2701, 2700, 2698,
	1369, 2679, 2678, 2477, 2677, 2721, 181, 1096, 2674, 2671,
	1096, 2665, 2648, 1120, 182, 2705, 2706, 1221, 2723, 2724,
	2725, 2641, 2721, 2518, 1307, 1381, 2304, 1323, 2154, 3418,
	3578, 1504, 1590, 1386, 1304, 156, 1907, 1503, 3, 3852,
	3814, 3813, 1482, 3752, 1444, 1517, 1509, 1510, 1511, 1512,
	1514, 1515, 3750, 2707, 2708, 2709, 2710, 2712, 2713, 1359,
	3741, 1061, 1100, 3046, 3607, 3604, 187, 187, 3601, 3600,
	3599, 3592, 2167, 3586, 3556, 2137, 3551, 3550, 2131, 3538,
	3535, 1481, 2720, 3501, 2717, 2718, 2719, 1435, 3480, 1573,
	3458, 2716, 2714, 2715, 2707, 2708, 2709, 2710, 2712, 2713,
	3442, 2808, 2214, 3401, 1476, 3441, 189, 189, 3429, 3428,
	3398, 3326, 2722, 3308, 3246, 3243, 865, 2394, 3169, 3168,
	3155, 3154, 3111, 1505, 1506, 3011, 1570, 1392, 2972, 2722,
	2955, 1408, 2917, 1509, 1510, 1511, 1512, 1514, 1515, 3199,
	2881, 2860, 2168, 1536, 2836, 219, 2835, 2809, 2705, 2706,
	1508, 188, 188, 2745, 2670, 2669, 2664, 2632, 2457, 2711,
	1612, 181, 181, 863, 1611, 1610, 1607, 2475, 1599, 182,
	182, 1596, 219, 1641, 2836, 1479, 1487, 1650, 845, 2341,
	844, 1507, 219, 1122, 219, 219, 219, 219, 2340, 2315,
	156, 156, 630, 219, 219, 1486, 2308, 630, 219, 1608,
	2275, 2197, 1686, 219, 1642, 1689, 1638, 1697, 1483, 1236,
	1637, 1636, 1635, 1500, 1501, 2720, 1699, 2169, 2166, 1505,
	1506, 1770, 1634, 1773, 1633, 1632, 2717, 2718, 2719, 1631,
	1122, 1630, 1628, 2716, 2714, 2715, 2707, 2708, 2709, 2710,
	2712, 2713, 1623, 1627, 1626, 3328, 1508, 1625, 1778, 187,
	2721, 2714, 2715, 2707, 2708, 2709, 2710, 2712, 2713, 1695,
	1807, 1505, 1506, 936, 1624, 1647, 1648, 1513, 1623, 1227,
	3280, 2785, 892, 2709, 2710, 2712, 2713, 1507, 1096, 2705,
	2706, 1622, 1772, 1600, 1601, 1055, 1621, 1055, 1508, 189,
	1620, 1619, 2711, 1618, 1671, 2200, 1617, 147, 1955, 1026,
	1616, 3562, 1535, 1537, 2198, 1615, 1614, 1587, 3560, 863,
	1571, 1569, 1564, 1084, 1075, 1068, 3135, 3122, 3114, 1507,
	2652, 3469, 3483, 2306, 1672, 2334, 2171, 3330, 3134, 1586,
	3811, 1693, 1623, 2806, 188, 1567, 1682, 187, 3804, 2705,
	2706, 3602, 1104, 3373, 181, 2926, 1678, 1800, 1106, 1669,
	3527, 3526, 182, 1800, 1776, 1775, 2167, 2722, 1528, 1800,
	3422, 1830, 1236, 1236, 219, 1038, 635, 638, 3372, 1662,
	1122, 635, 638, 156, 3117, 1640, 2863, 189, 2957, 2956,
	3532, 3203, 1606, 2721, 1664, 1681, 1474, 1594, 1605, 2676,
	1100, 1698, 1666, 1680, 1679, 3167, 1769, 1677, 1676, 1675,
	2675, 1105, 1407, 2614, 2412, 1513, 2396, 1097, 219, 1691,
	1101, 1952, 219, 1091, 828, 1700, 1416, 219, 1848, 3523,
	3461, 1850, 188, 2711, 1855, 1787, 2168, 2165, 2903, 1100,
	2902, 3728, 181, 3715, 1417, 219, 1803, 219, 1864, 219,
	182, 3183, 1798, 219, 1793, 1868, 3171, 2976, 1445, 2658,
	3840, 2343, 2749, 1054, 829, 3048, 2162, 219, 2339, 3724,
	1690, 156, 1056, 1629, 1602, 1529, 2895, 1819, 1904, 1280,
	3737, 2717, 2718, 2719, 3146, 1834, 187, 219, 2716, 2714,
	2715, 2707, 2708, 2709, 2710, 2712, 2713, 1908, 3734, 2935,
	2722, 3594, 3406, 1236, 3665, 1236, 219, 1236, 3583, 1903,
	219, 2169, 2166, 2839, 3162, 1236, 2040, 1810, 1236, 219,
	1098, 219, 219, 1591, 2721, 2525, 189, 3725, 1099, 1900,
	2488, 1236, 1236, 1236, 1396, 219, 2888, 1869, 3775, 1905,
	3776, 3627, 219, 1913, 2992, 1246, 1245, 3362, 635, 638,
	2818, 630, 219, 685, 219, 1268, 219, 2038, 219, 1935,
	219, 826, 1937, 1442, 2348, 824, 822, 1278, 1942, 1227,
	2011, 188, 820, 1854, 219, 1097, 877, 219, 2009, 219,
	817, 181, 3849, 3514, 811, 1859, 3507, 1870, 2807, 182,
	219, 2433, 3185, 3182, 3181, 3143, 1518, 1516, 1517, 1509,
	1510, 1511, 1512, 1514, 1515, 1910, 1957, 1921, 1106, 861,
	156, 219, 3142, 1788, 1973, 219, 1443, 2366, 1887, 1886,
	2171, 2716, 2714, 2715, 2707, 2708, 2709, 2710, 2712, 2713,
	2364, 2722, 2663, 1958, 1097, 1830, 686, 1969, 1122, 1279,
	2662, 2661, 2660, 2618, 863, 1827, 863, 2428, 2420, 2419,
	2399, 1058, 1441, 1058, 2327, 1919, 1915, 1873, 2112, 1923,
	1924, 1105, 1480, 1323, 1369, 1918, 1369, 1918, 2366, 1242,
	1100, 1694, 2039, 2820, 2183, 1823, 2182, 2070, 1098, 1885,
	2375, 2364, 2042, 2977, 2024, 1106, 1099, 860, 1313, 1394,
	1312, 2485, 564, 2040, 2029, 3799, 1828, 1829, 1792, 1791,
	1515, 2023, 1800, 1802, 2629, 814, 3440, 1085, 3626, 2066,
	2067, 2862, 1948, 1967, 1949, 1960, 559, 1334, 1287, 2143,
	2144, 2165, 1962, 1122, 1824, 635, 638, 1731, 2627, 2022,
	1311, 2037, 1310, 1274, 2038, 2143, 2159, 1098, 1105, 1511,
	1512, 1514, 1515, 2435, 3149, 1099, 1963, 1814, 2398, 2318,
	1991, 1815, 2716, 2714, 2715, 2707, 2708, 2709, 2710, 2712,
	2713, 2019, 1389, 2434, 2436, 2243, 2355, 1652, 1682, 862,
	219, 3800, 1814, 3358, 2378, 2127, 1815, 2223, 2127, 2227,
	2227, 2241, 2053, 2143, 2387, 2335, 2261, 2263, 2591, 1981,
	2162, 2267, 1122, 1453, 219, 3490, 2036, 1485, 1065, 3721,
	3158, 1976, 2439, 219, 1795, 1984, 2416, 2026, 1409, 2041,
	2028, 2576, 610, 2034, 3694, 219, 1705, 2021, 1122, 845,
	2713, 2057, 845, 845, 2058, 2059, 2409, 2410, 1100, 2027,
	3374, 1063, 2409, 2410, 2158, 2316, 1656, 2351, 2409, 2410,
	2386, 863, 1083, 2624, 1920, 2606, 1816, 1405, 1440, 2039,
	2353, 1977, 863, 1821, 2291, 2983, 863, 1473, 2625, 1818,
	2982, 3775, 2630, 3802, 1390, 1431, 1814, 2570, 2180, 2171,
	1815, 1816, 1659, 2181, 688, 687, 2184, 3788, 2185, 2186,
	3037, 1417, 2354, 2139, 1818, 2598, 2599, 1100, 740, 1857,
	2135, 1654, 3492, 1985, 3787, 2325, 2133, 2352, 3349, 2579,
	609, 1797, 219, 1978, 1055, 2817, 2156, 1657, 2037, 1856,
	1236, 2283, 859, 1417, 1457, 2069, 3439, 1432, 1820, 1066,
	1055, 683, 3823, 682, 1026, 2305, 1298, 1671, 3346, 2196,
	2377, 3356, 2282, 1796, 3764, 1655, 3262, 3722, 2109, 1852,
	1122, 3261, 863, 1820, 2440, 219, 2290, 2236, 2295, 1778,
	2265, 2301, 2302, 219, 2252, 2605, 2329, 2764, 2397, 147,
	1828, 1829, 3170, 1296, 219, 1816, 2288, 2289, 2273, 2274,
	2284, 2018, 1276, 3347, 1395, 2932, 2874, 219, 1818, 818,
	3835, 1096, 1669, 818, 818, 1932, 1821, 2010, 1853, 2171,
	819, 219, 1122, 806, 2868, 2008, 1236, 560, 818, 854,
	2174, 806, 219, 219, 1608, 1830, 642, 2578, 2050, 1393,
	2626, 806, 3801, 2365, 1298, 856, 1333, 1847, 3720, 2628,
	1832, 1658, 2884, 856, 1821, 219, 3808, 2020, 219, 2575,
	3595, 715, 1273, 856, 2367, 219, 2819, 1820, 1597, 2804,
	2402, 219, 2342, 3745, 2933, 1821, 2346, 2376, 2461, 1821,
	3746, 219, 3159, 219, 561, 3645, 219, 2850, 3357, 1215,
	2856, 3258, 219, 2429, 855, 219, 3034, 219, 3452, 219,
	2345, 3784, 3677, 1227, 219, 1236, 1236, 2107, 1236, 2417,
	2110, 3606, 3763, 219, 219, 2823, 219, 219, 2349, 3390,
	1236, 1600, 1601, 807, 562, 2317, 563, 2499, 219, 2153,
	2401, 807, 3491, 1983, 2849, 815, 2932, 1563, 611, 2577,
	608, 807, 2380, 2383, 219, 219, 219, 2763, 2370, 219,
	2445, 219, 2668, 2389, 219, 1454, 219, 2366, 219, 1064,
	2106, 3342, 2393, 2539, 2400, 3343, 2620, 3436, 2287, 2126,
	2381, 3035, 2560, 1821, 2561, 3824, 2244, 2418, 2508, 219,
	219, 219, 219, 219, 219, 2300, 219, 1731, 1731, 2513,
	862, 2425, 1391, 1980, 2411, 2413, 2414, 2415, 3400, 1817,
	1484, 1804, 1805, 1246, 2446, 1975, 635, 638, 3345, 1812,
	2524, 1452, 1652, 2450, 2455, 2452, 741, 219, 2558, 3252,
	3131, 3348, 1078, 2465, 1817, 219, 2541, 1656, 1227, 2544,
	2545, 2514, 3263, 2994, 147, 3643, 3609, 2501, 2550, 2551,
	2552, 2543, 2483, 2494, 2546, 1082, 2547, 2361, 643, 644,
	1404, 1406, 2581, 2490, 2583, 2505, 2490, 2506, 1455, 2507,
	3806, 2589, 1227, 1659, 1227, 3644, 2852, 3762, 2123, 1369,
	2515, 1419, 3744, 2555, 2526, 3435, 1705, 1705, 808, 2134,
	2171, 1656, 2285, 2562, 2542, 2564, 808, 2566, 3719, 1849,
	1058, 3391, 2121, 3774, 3836, 3772, 808, 2854, 1657, 1933,
	1836, 3198, 3623, 2574, 2108, 3537, 1058, 3213, 2919, 3306,
	1495, 1894, 1649, 1076, 219, 1071, 3259, 1659, 1817, 3087,
	551, 1840, 2056, 1494, 1831, 3344, 2646, 2647, 2621, 2511,
	1789, 2650, 1456, 2998, 3829, 2597, 1654, 2651, 2195, 2191,
	3807, 2568, 3498, 3497, 1494, 3478, 2588, 2587, 2797, 1054,
	2853, 1054, 1657, 3582, 646, 645, 2586, 1489, 1056, 2592,
	1056, 3214, 2053, 3145, 3361, 2920, 2914, 1837, 2772, 2831,
	2557, 3360, 3809, 1786, 2827, 2469, 2459, 2607, 1914, 2563,
	1655, 2565, 2642, 2567, 1906, 1899, 1881, 3437, 1563, 3610,
	2046, 3033, 809, 3654, 2995, 1494, 2015, 1782, 853, 3216,
	809, 2382, 3411, 3521, 2403, 647, 648, 2117, 2584, 2279,
	809, 2189, 1658, 2456, 1336, 1493, 3519, 3264, 2118, 2324,
	3479, 2619, 2119, 2842, 2838, 2837, 2124, 2612, 2193, 2194,
	2192, 810, 1122, 863, 2590, 1968, 1493, 3113, 2742, 810,
	2323, 2761, 2760, 1784, 2756, 2757, 1433, 737, 2773, 810,
	2322, 219, 1841, 729, 2758, 2321, 219, 1495, 2463, 219,
	860, 2443, 219, 219, 1122, 1785, 1658, 3307, 219, 3088,
	1319, 2657, 1305, 1317, 739, 3588, 3382, 3089, 1495, 2281,
	3486, 1122, 2188, 2190, 2280, 2966, 2778, 1493, 219, 1306,
	2771, 3265, 1912, 3781, 3517, 3662, 3828, 3476, 3651, 3657,
	2047, 3312, 3783, 3102, 2178, 219, 3589, 3739, 1577, 3603,
	3457, 2802, 1582, 2775, 1471, 1842, 1843, 1469, 1731, 1449,
	1447, 3305, 2768, 1430, 219, 219, 219, 1838, 2813, 3359,
	219, 1428, 3477, 219, 2734, 3010, 2974, 1426, 2787, 2891,
	2699, 219, 219, 2815, 219, 219, 219, 1424, 3611, 2631,
	1055, 1420, 2404, 2405, 2792, 1422, 1414, 2821, 219, 219,
	219, 1839, 2460, 3487, 2791, 1055, 2805, 219, 3658, 2427,
	2824, 2825, 2766, 2767, 2120, 3590, 2784, 1412, 2776, 1096,
	219, 219, 2750, 2122, 2779, 2780, 2794, 2840, 2594, 1122,
	2844, 2395, 2344, 2765, 1688, 1055, 1685, 2774, 2841, 1315,
	1236, 2846, 2847, 1472, 1384, 2832, 2735, 1705, 2177, 1122,
	2737, 2738, 2739, 2777, 219, 2798, 2007, 219, 219, 2828,
	2782, 219, 2783, 2991, 1236, 219, 2990, 219, 3714, 3378,
	1489, 2865, 2799, 2800, 2801, 1236, 2572, 2571, 2549, 2810,
	2811, 1227, 2812, 2035, 219, 2017, 1988, 219, 1771, 1613,
	2867, 2882, 219, 1844, 219, 1388, 2816, 2913, 2928, 735,
	736, 219, 1903, 1291, 2900, 727, 728, 2822, 2244, 2244,
	219, 219, 1470, 3369, 3650, 1468, 1318, 1448, 1446, 1316,
	738, 1429, 2875, 2924, 3760, 1236, 1236, 816, 3409, 1427,
	3335, 3212, 2937, 219, 219, 1425, 2855, 219, 2539, 3208,
	2861, 3165, 3163, 3144, 2912, 1423, 2904, 2539, 2510, 2755,
	2890, 2889, 2870, 1421, 1413, 2486, 2474, 2466, 1845, 2453,
	2873, 1945, 2877, 2885, 1943, 1938, 2883, 2857, 2858, 1936,
	2908, 2859, 1934, 1925, 219, 1411, 1122, 219, 219, 1122,
	219, 2781, 2948, 2892, 2945, 2946, 2947, 1878, 2921, 2929,
	2950, 1876, 1227, 1227, 1819, 1865, 1860, 1314, 2795, 2878,
	2879, 2911, 1846, 2880, 2401, 2871, 1833, 1822, 1055, 2872,
	3030, 2006, 1035, 219, 3544, 1498, 1696, 2610, 3776, 3685,
	3431, 1819, 3426, 3425, 2540, 1808, 2953, 1270, 2244, 2244,
	2244, 2934, 2968, 863, 970, 3546, 1036, 2385, 2964, 3224,
	2943, 2951, 2952, 2949, 147, 147, 2876, 2988, 2936, 1830,
	1122, 2973, 2989, 1859, 1979, 821, 823, 825, 2366, 2366,
	1911, 1859, 1227, 1466, 1467, 1357, 621, 1122, 3684, 219,
	1358, 2364, 2384, 2005, 2004, 1986, 215, 3363, 554, 555,
	3597, 570, 554, 570, 580, 585, 3013, 1410, 601, 1505,
	1506, 1505, 1506, 607, 2979, 3569, 2980, 2611, 2981, 215,
	3313, 2406, 2388, 1502, 565, 2985, 3777, 1499, 3770, 2424,
	2392, 1779, 2927, 2422, 2390, 726, 1508, 3649, 2993, 215,
	3619, 2423, 2391, 3022, 3023, 3616, 2795, 3207, 1037, 3197,
	3128, 2493, 2996, 2266, 1774, 1701, 3803, 1358, 2803, 3827,
	674, 1574, 1358, 2705, 2706, 714, 1058, 1507, 3285, 1507,
	1505, 1506, 3618, 576, 2358, 2359, 2356, 2357, 2173, 3018,
	3099, 1058, 1398, 2066, 3057, 3133, 2358, 2356, 1397, 2179,
	1451, 3281, 3029, 1450, 3132, 3041, 1572, 3846, 3816, 2066,
	3067, 3045, 3789, 219, 219, 3579, 3511, 3049, 3470, 3051,
	3468, 1058, 3397, 3052, 1122, 3036, 3038, 3039, 1054, 3329,
	3249, 3242, 2986, 3040, 3118, 3230, 3210, 1056, 3192, 3191,
	3095, 3056, 3050, 3190, 1054, 219, 554, 554, 3064, 3161,
	3053, 3156, 3054, 1056, 215, 3091, 2944, 3066, 2918, 2916,
	2554, 2553, 2503, 2478, 2454, 2337, 2336, 2138, 3140, 2003,
	2002, 2001, 2000, 1928, 1927, 1926, 1909, 1889, 1888, 3092,
	1884, 1883, 1882, 1221, 1731, 1880, 1120, 1879, 1465, 1464,
	1345, 1344, 1343, 219, 1342, 1341, 1340, 3106, 3107, 1339,
	3100, 1338, 3104, 147, 1337, 1335, 1330, 1329, 1328, 3172,
	1055, 1055, 1694, 1327, 217, 1326, 1286, 3109, 3110, 1236,
	1285, 3120, 1236, 1731, 1284, 1283, 1282, 1281, 1275, 1269,
	3184, 1267, 1266, 1113, 1112, 219, 3121, 1111, 1110, 1081,
	1080, 1010, 915, 219, 1780, 827, 813, 3489, 1459, 77,
	219, 1277, 661, 3164, 72, 3166, 1236, 3026, 3160, 669,
	3664, 2848, 2431, 1987, 1418, 1989, 2786, 2307, 3642, 3289,
	219, 2667, 3176, 1705, 3042, 3177, 3179, 3148, 3136, 3226,
	3575, 3451, 2176, 1593, 74, 219, 219, 1236, 1236, 1236,
	902, 219, 219, 219, 1058, 3218, 219, 219, 992, 3221,
	219, 219, 3389, 1236, 2832, 3188, 3204, 3205, 219, 1122,
	3388, 3336, 1705, 3147, 2529, 3386, 2499, 3385, 3217, 870,
	1125, 1790, 908, 1806, 1799, 1903, 2338, 2226, 914, 1709,
	3189, 1122, 2244, 2244, 911, 1706, 3220, 1708, 913, 2401,
	2136, 912, 1707, 1595, 910, 3206, 1704, 2539, 2462, 2497,
	1322, 792, 1794, 2132, 2160, 3209, 2656, 1577, 3232, 1588,
	883, 904, 2157, 3219, 1074, 2769, 3279, 2931, 3127, 3417,
	2045, 3228, 881, 3227, 3222, 677, 2702, 219, 2163, 1067,
	2249, 2242, 2238, 2487, 1475, 3234, 3250, 3239, 3240, 1565,
	1055, 3233, 3245, 3267, 3241, 3275, 3247, 3238, 2498, 3248,
	3244, 3130, 1108, 886, 2130, 3266, 1579, 2636, 2055, 2938,
	2248, 2789, 2333, 3681, 3260, 2060, 1893, 3349, 1034, 1033,
	2244, 2244, 2244, 2244, 2244, 2244, 2244, 2244, 2244, 2244,
	2244, 2244, 2244, 2244, 2244, 2244, 2244, 2244, 2244, 1032,
	2244, 3671, 219, 3668, 2898, 3255, 1783, 3346, 1122, 2350,
	1122, 3339, 1557, 2905, 898, 1226, 2754, 2967, 1288, 606,
	3596, 1556, 2438, 2437, 3585, 3318, 3337, 1095, 1094, 1093,
	2830, 3834, 3341, 219, 219, 219, 3157, 186, 2604, 1496,
	1488, 3251, 183, 185, 1731, 184, 219, 3304, 3393, 3174,
	19, 18, 3347, 17, 219, 94, 219, 38, 16, 219,
	219, 219, 3354, 122, 121, 120, 119, 118, 117, 3355,
	3321, 1122, 219, 219, 116, 111, 1122, 115, 114, 3332,
	3333, 1069, 3366, 3367, 3324, 3340, 219, 113, 112, 110,
	219, 109, 3317, 3320, 3315, 3316, 108, 107, 106, 219,
	3364, 1731, 1731, 1122, 219, 2791, 105, 104, 1236, 1079,
	3325, 103, 3365, 102, 101, 1055, 601, 1731, 1731, 3353,
	100, 99, 3314, 1055, 3334, 98, 1058, 1058, 97, 96,
	3319, 95, 3383, 1705, 597, 594, 1055, 219, 3380, 215,
	52, 215, 215, 1218, 51, 215, 93, 3413, 1731, 1122,
	92, 3427, 15, 36, 13, 1903, 56, 57, 215, 1248,
	3430, 12, 3376, 31, 32, 3407, 83, 82, 30, 14,
	3412, 3416, 3384, 3402, 29, 3377, 3399, 27, 10, 1122,
	8, 7, 1272, 33, 3414, 1673, 11, 152, 151, 3404,
	1705, 1705, 150, 76, 3421, 1290, 149, 1295, 148, 75,
	215, 215, 25, 1218, 9, 144, 1705, 1705, 3530, 3202,
	3342, 71, 146, 215, 3343, 145, 143, 3438, 1122, 142,
	1332, 141, 3463, 69, 140, 139, 219, 70, 219, 138,
	1122, 219, 23, 3443, 215, 215, 215, 1705, 1218, 219,
	5, 55, 6, 3433, 2975, 87, 601, 1365, 215, 215,
	3448, 88, 3459, 34, 67, 66, 65, 3345, 22, 54,
	21, 176, 219, 726, 3392, 3473, 175, 174, 173, 168,
	3348, 167, 172, 170, 3403, 169, 171, 3464, 3465, 166,
	178, 219, 3467, 177, 3472, 180, 164, 3323, 160, 219,
	159, 163, 3420, 165, 162, 161, 158, 219, 179, 3510,
	1122, 3520, 3529, 1236, 1054, 62, 1058, 137, 3494, 219,
	3493, 136, 1731, 1056, 135, 3471, 134, 133, 132, 1054,
	131, 3534, 61, 20, 215, 2, 3500, 1, 1056, 0,
	219, 219, 3545, 3502, 3503, 2900, 3553, 3554, 215, 0,
	3518, 3508, 3541, 3543, 0, 0, 3512, 3528, 0, 1054,
	3565, 3566, 219, 0, 0, 0, 0, 0, 1056, 0,
	3542, 3533, 3539, 0, 0, 3540, 0, 219, 0, 0,
	3548, 881, 3416, 3547, 3344, 881, 0, 0, 0, 0,
	0, 0, 2248, 0, 3591, 0, 0, 3581, 0, 0,
	1207, 0, 0, 0, 1207, 0, 0, 0, 0, 0,
	0, 1705, 3573, 3564, 0, 0, 3580, 0, 0, 3598,
	0, 0, 0, 1227, 0, 0, 219, 0, 3605, 3568,
	0, 0, 3549, 1731, 0, 0, 1120, 0, 219, 0,
	3557, 1236, 0, 0, 0, 0, 0, 219, 0, 0,
	0, 1236, 1236, 3620, 0, 0, 3622, 1236, 0, 0,
	3633, 219, 0, 219, 0, 0, 3449, 0, 3613, 3614,
	0, 3617, 2248, 2248, 0, 0, 0, 3625, 3612, 0,
	3624, 1058, 0, 0, 3638, 3630, 3639, 219, 3646, 1058,
	0, 0, 3637, 219, 3659, 0, 219, 0, 1122, 3661,
	0, 3533, 1058, 3629, 0, 3449, 0, 219, 219, 0,
	3679, 0, 0, 3670, 3673, 0, 3660, 2069, 0, 0,
	3674, 3686, 1705, 3678, 219, 0, 0, 0, 0, 0,
	0, 0, 1054, 3666, 3631, 3632, 0, 0, 0, 3675,
	3636, 1056, 3699, 0, 0, 0, 0, 0, 0, 219,
	0, 0, 3690, 0, 3683, 0, 3698, 0, 3693, 554,
	3695, 3726, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3731, 0, 3713, 3712, 0,
	215, 0, 215, 3710, 3711, 0, 215, 0, 2244, 3747,
	3729, 0, 2248, 2248, 2248, 219, 1248, 3749, 1218, 215,
	0, 215, 0, 0, 3756, 0, 215, 1248, 570, 0,
	0, 215, 1248, 3761, 3751, 219, 3748, 601, 0, 3753,
	0, 0, 3757, 0, 0, 0, 0, 0, 0, 0,
	2244, 0, 3767, 3768, 0, 3769, 0, 3779, 3773, 1651,
	0, 2499, 219, 3771, 219, 0, 3778, 3670, 0, 3780,
	3673, 3782, 0, 3791, 0, 3786, 0, 3794, 0, 3797,
	3790, 2633, 2634, 3798, 3796, 3785, 0, 0, 3793, 0,
	3795, 0, 3792, 0, 0, 613, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3810, 3812, 0, 0,
	3683, 0, 0, 3687, 0, 3817, 3688, 3820, 3818, 0,
	0, 3822, 0, 0, 3754, 3755, 0, 0, 3758, 0,
	3825, 0, 0, 0, 3831, 0, 0, 0, 0, 0,
	0, 3837, 0, 0, 0, 0, 0, 3838, 0, 0,
	1731, 0, 3832, 3833, 0, 0, 0, 0, 0, 0,
	2244, 3844, 0, 0, 3841, 3848, 0, 3847, 0, 0,
	3851, 3850, 0, 3853, 0, 3854, 0, 3856, 0, 0,
	3858, 3845, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3855, 0, 0, 0, 2069, 0, 618, 215, 0,
	0, 2728, 2729, 2730, 1731, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 869, 0, 0,
	0, 0, 0, 0, 1054, 1054, 0, 0, 0, 1505,
	1506, 0, 0, 1056, 1056, 0, 0, 0, 0, 1705,
	0, 0, 215, 0, 0, 0, 215, 0, 0, 1536,
	0, 215, 0, 0, 0, 0, 1508, 0, 0, 0,
	0, 0, 0, 623, 0, 0, 0, 1207, 0, 215,
	0, 215, 0, 215, 0, 0, 0, 554, 0, 0,
	0, 0, 0, 0, 0, 620, 0, 1507, 0, 1505,
	1506, 1929, 0, 1705, 0, 1548, 1549, 1550, 0, 1228,
	1731, 0, 0, 1240, 0, 0, 0, 0, 881, 1536,
	0, 215, 0, 0, 1207, 0, 1508, 0, 0, 0,
	0, 1554, 0, 0, 0, 0, 0, 0, 0, 0,
	601, 0, 0, 0, 726, 0, 0, 0, 0, 0,
	0, 0, 0, 215, 0, 1218, 215, 1507, 0, 0,
	0, 0, 1299, 0, 0, 0, 1527, 0, 0, 601,
	0, 0, 0, 0, 1524, 0, 215, 0, 0, 0,
	0, 0, 0, 1513, 0, 215, 215, 0, 215, 0,
	215, 0, 215, 0, 215, 0, 2248, 2248, 0, 1705,
	0, 0, 0, 615, 0, 0, 0, 0, 2012, 0,
	1377, 2013, 0, 2014, 1054, 0, 0, 0, 1535, 1537,
	1240, 0, 0, 1056, 215, 619, 0, 0, 0, 0,
	0, 0, 0, 1530, 1531, 1532, 1533, 0, 0, 0,
	0, 0, 0, 1513, 0, 585, 0, 0, 0, 601,
	622, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1399, 1207, 0, 617, 0, 0, 0,
	1545, 0, 0, 1555, 1528, 0, 0, 0, 1535, 1537,
	0, 0, 0, 0, 2248, 2248, 2248, 2248, 2248, 2248,
	2248, 2248, 2248, 2248, 2248, 2248, 2248, 2248, 2248, 2248,
	2248, 2248, 2248, 0, 2248, 614, 0, 1522, 1523, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1543, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1528, 0, 0, 0, 0, 0,
	0, 0, 0, 624, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 616, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1054,
	0, 1529, 0, 0, 0, 3006, 3007, 1054, 1056, 0,
	0, 0, 0, 0, 0, 0, 1056, 0, 0, 0,
	1054, 0, 0, 0, 554, 0, 0, 0, 0, 1056,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 215,
	0, 0, 0, 1534, 0, 0, 0, 0, 554, 0,
	0, 0, 0, 0, 0, 215, 0, 554, 0, 0,
	0, 1529, 0, 0, 0, 0, 0, 0, 0, 215,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 869, 1546, 0, 0,
	869, 0, 0, 3068, 3069, 3070, 3071, 3072, 3073, 3074,
	3075, 3076, 3077, 3078, 3079, 3080, 3081, 3082, 3083, 3084,
	3085, 3086, 0, 3090, 0, 0, 0, 0, 717, 0,
	0, 0, 0, 1516, 1517, 1509, 1510, 1511, 1512, 1514,
	1515, 0, 0, 1250, 0, 1254, 0, 1260, 0, 0,
	0, 0, 1207, 63, 720, 719, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 570, 64, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1544, 68, 0, 0, 0, 0, 1547, 1525,
	1521, 0, 1518, 1516, 1517, 1509, 1510, 1511, 1512, 1514,
	1515, 0, 0, 0, 0, 0, 0, 0, 0, 2374,
	0, 0, 0, 0, 0, 0, 73, 215, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1380, 215, 0,
	0, 0, 0, 0, 0, 1385, 0, 1207, 0, 0,
	0, 215, 0, 0, 0, 0, 0, 0, 78, 0,
	0, 0, 0, 0, 0, 215, 0, 0, 89, 0,
	0, 0, 0, 79, 86, 0, 215, 2447, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1505, 1506, 0, 0, 63, 0, 0, 1248,
	0, 1437, 215, 0, 0, 0, 0, 0, 0, 215,
	64, 0, 1536, 0, 0, 2482, 1207, 0, 0, 1508,
	80, 0, 0, 0, 0, 2374, 68, 554, 0, 0,
	2502, 0, 0, 0, 0, 0, 215, 0, 0, 215,
	0, 215, 1207, 215, 0, 0, 1505, 1506, 1218, 0,
	1507, 0, 0, 0, 0, 0, 0, 2522, 726, 73,
	2374, 2374, 0, 0, 0, 0, 1536, 0, 0, 0,
	1240, 0, 215, 1508, 0, 0, 0, 0, 0, 0,
	0, 0, 1558, 1559, 1560, 1561, 1562, 0, 215, 1218,
	215, 78, 0, 1248, 0, 1248, 0, 0, 1218, 0,
	1218, 89, 1218, 0, 1507, 0, 79, 86, 0, 0,
	0, 1576, 0, 1527, 0, 0, 0, 1589, 0, 0,
	0, 1524, 0, 215, 215, 215, 215, 1218, 215, 0,
	215, 0, 0, 0, 0, 0, 1513, 0, 0, 81,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 80, 2705, 2706, 0, 2723, 2724, 2725,
	0, 215, 3009, 0, 1207, 0, 0, 0, 0, 215,
	0, 1535, 1537, 3015, 0, 0, 153, 84, 0, 85,
	1530, 1531, 1532, 1533, 0, 0, 0, 0, 0, 0,
	1513, 0, 0, 0, 0, 0, 0, 0, 187, 0,
	0, 0, 0, 0, 1950, 0, 0, 0, 0, 0,
	721, 0, 1240, 0, 123, 1961, 1207, 0, 0, 0,
	0, 2720, 2248, 0, 0, 1535, 1537, 1528, 1970, 1971,
	1972, 0, 0, 0, 0, 0, 0, 0, 189, 0,
	0, 0, 1645, 1645, 1645, 0, 0, 0, 0, 0,
	0, 0, 0, 2330, 1522, 1523, 0, 0, 1248, 0,
	0, 124, 0, 0, 2248, 0, 0, 0, 0, 0,
	0, 0, 81, 0, 0, 157, 0, 0, 0, 0,
	0, 1528, 0, 188, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 181, 0, 0, 0, 0, 2711, 0,
	0, 182, 0, 0, 0, 0, 0, 0, 0, 153,
	84, 0, 85, 869, 0, 0, 0, 0, 0, 0,
	0, 0, 718, 0, 0, 0, 0, 0, 0, 0,
	0, 187, 0, 0, 1529, 0, 0, 0, 0, 0,
	0, 0, 0, 721, 0, 0, 0, 123, 0, 0,
	0, 0, 0, 2726, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1534, 189, 0, 0, 2248, 215, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1529, 2721,
	215, 0, 0, 0, 124, 554, 0, 0, 0, 0,
	554, 0, 0, 554, 0, 0, 554, 554, 157, 0,
	0, 3456, 554, 0, 0, 0, 188, 0, 0, 0,
	215, 0, 0, 0, 0, 0, 181, 0, 0, 0,
	0, 0, 1248, 0, 182, 0, 0, 0, 0, 0,
	0, 0, 0, 2248, 2248, 0, 0, 0, 0, 1248,
	0, 0, 0, 3481, 0, 156, 0, 0, 1509, 1510,
	1511, 1512, 1514, 1515, 0, 0, 0, 0, 2374, 2374,
	215, 0, 1505, 1506, 2374, 0, 0, 2834, 0, 0,
	0, 0, 0, 0, 0, 2374, 2834, 0, 2374, 2834,
	2834, 0, 1536, 0, 0, 0, 2722, 0, 0, 1508,
	0, 0, 215, 215, 215, 0, 1525, 1521, 0, 1518,
	1516, 1517, 1509, 1510, 1511, 1512, 1514, 1515, 0, 0,
	0, 0, 0, 0, 215, 1218, 0, 0, 0, 0,
	1507, 0, 0, 0, 63, 0, 0, 0, 0, 1527,
	0, 0, 0, 0, 0, 0, 0, 0, 64, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2894, 0,
	0, 2896, 2374, 3572, 68, 215, 0, 0, 0, 215,
	0, 1295, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2482, 0,
	0, 1218, 0, 215, 0, 0, 2374, 73, 554, 0,
	0, 0, 0, 0, 0, 2374, 1530, 1531, 1532, 1533,
	2717, 2718, 2719, 0, 215, 215, 1513, 2716, 2714, 2715,
	2707, 2708, 2709, 2710, 2712, 2713, 1207, 0, 0, 78,
	0, 0, 0, 0, 0, 0, 0, 215, 2482, 89,
	0, 2482, 0, 0, 79, 86, 0, 0, 0, 0,
	0, 1535, 1537, 0, 0, 0, 0, 0, 1207, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1207, 0, 0, 2984, 0,
	0, 1218, 215, 0, 215, 0, 0, 0, 0, 0,
	0, 80, 0, 2441, 0, 0, 0, 0, 0, 0,
	0, 881, 0, 2044, 0, 2048, 0, 1528, 0, 0,
	0, 0, 2062, 0, 0, 881, 0, 215, 0, 2071,
	2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2081,
	2082, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091,
	2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101,
	2102, 2103, 2104, 2105, 0, 2111, 0, 2113, 2114, 2115,
	2116, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2512, 3047, 0, 0, 0, 2140, 0, 0,
	0, 0, 0, 1207, 0, 0, 0, 1240, 0, 0,
	1576, 0, 0, 0, 2155, 0, 1534, 0, 0, 0,
	0, 0, 0, 1207, 0, 0, 0, 0, 0, 0,
	81, 0, 0, 0, 1529, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2203, 2206, 2209, 2212,
	0, 2216, 2217, 2218, 2219, 2220, 2221, 2222, 0, 0,
	0, 0, 2240, 0, 2251, 2253, 2258, 153, 84, 0,
	85, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 215, 215, 0, 0, 187,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 721, 0, 0, 0, 123, 0, 554, 554, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 189,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1248,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1207, 0, 124, 1207, 0, 1518, 1516, 1517, 1509, 1510,
	1511, 1512, 1514, 1515, 0, 0, 157, 0, 0, 0,
	0, 0, 0, 0, 188, 1505, 1506, 0, 1538, 1539,
	1540, 1548, 1549, 1550, 181, 0, 0, 601, 0, 0,
	0, 0, 182, 0, 1541, 1536, 0, 0, 0, 0,
	0, 0, 1508, 0, 0, 0, 0, 1554, 0, 0,
	0, 0, 0, 156, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1207, 0, 0, 0, 0, 215,
	0, 0, 0, 1507, 0, 0, 0, 215, 0, 0,
	0, 1207, 1527, 0, 215, 0, 0, 0, 0, 0,
	1524, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2374, 215, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2522,
	2522, 0, 0, 0, 0, 726, 726, 2374, 0, 0,
	2482, 2482, 0, 0, 726, 2374, 0, 0, 0, 0,
	0, 0, 215, 0, 0, 2449, 0, 2451, 0, 1530,
	1531, 1532, 1533, 0, 0, 0, 0, 0, 0, 1513,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1505,
	1506, 0, 0, 0, 0, 0, 1545, 0, 0, 1555,
	0, 0, 0, 0, 1535, 1537, 0, 0, 0, 1536,
	0, 0, 0, 0, 0, 0, 1508, 0, 1207, 0,
	0, 3290, 0, 0, 1551, 0, 1552, 0, 0, 0,
	0, 0, 0, 1522, 1523, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1507, 0, 1543,
	0, 0, 0, 0, 0, 0, 1527, 0, 0, 0,
	1528, 0, 0, 0, 1524, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	215, 0, 0, 0, 1553, 2569, 1248, 0, 215, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 215, 0, 0, 0, 3004, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2374, 2374, 2374,
	0, 0, 0, 1530, 1531, 1532, 1533, 0, 0, 0,
	1248, 1558, 1559, 1513, 0, 0, 0, 2886, 2374, 0,
	2834, 0, 0, 1248, 1248, 215, 0, 0, 0, 1534,
	0, 0, 0, 0, 0, 0, 215, 215, 0, 0,
	0, 2909, 0, 0, 0, 0, 0, 1529, 1535, 1537,
	2374, 0, 2915, 971, 3395, 0, 0, 0, 0, 0,
	0, 0, 0, 215, 0, 0, 2616, 2617, 215, 0,
	0, 0, 2623, 1546, 0, 0, 0, 1522, 1523, 0,
	0, 0, 0, 1207, 0, 0, 0, 0, 0, 0,
	0, 2637, 2638, 0, 0, 216, 0, 2155, 0, 0,
	0, 1248, 2959, 2960, 1528, 1207, 2645, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 216, 0,
	0, 0, 2659, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 216, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2684, 1544, 0,
	0, 1519, 1520, 1526, 1547, 1525, 1521, 0, 1518, 1516,
	1517, 1509, 1510, 1511, 1512, 1514, 1515, 1505, 1506, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2374, 0, 2834, 1534, 0, 3475, 0, 1536, 0, 0,
	0, 0, 0, 215, 1508, 0, 0, 0, 0, 0,
	0, 1529, 0, 0, 2258, 2258, 2258, 0, 0, 0,
	0, 0, 1207, 1050, 1207, 0, 601, 0, 0, 1645,
	0, 0, 0, 0, 0, 1507, 0, 2759, 0, 0,
	0, 0, 0, 0, 1527, 3475, 0, 0, 0, 0,
	0, 0, 1524, 2374, 0, 0, 0, 0, 0, 0,
	0, 3536, 0, 0, 0, 210, 0, 0, 0, 0,
	0, 0, 0, 1248, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1207, 0, 0, 0, 0,
	1207, 0, 0, 3003, 215, 215, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 869, 0, 0, 0,
	0, 1530, 1531, 1532, 1533, 0, 3047, 1207, 0, 0,
	869, 1513, 0, 0, 0, 0, 0, 0, 0, 1525,
	1521, 3475, 1518, 1516, 1517, 1509, 1510, 1511, 1512, 1514,
	1515, 0, 0, 0, 0, 0, 0, 2851, 903, 91,
	0, 0, 0, 0, 0, 0, 1535, 1537, 0, 0,
	0, 0, 0, 1207, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3395, 0, 0, 0, 0, 1522, 1523, 0, 0, 0,
	0, 0, 215, 1207, 0, 0, 0, 0, 0, 0,
	0, 2834, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1528, 0, 0, 1248, 0, 1248, 0, 0,
	0, 0, 63, 0, 0, 0, 0, 0, 91, 0,
	0, 0, 1207, 0, 0, 0, 64, 0, 0, 0,
	0, 3655, 0, 0, 1207, 0, 0, 1248, 0, 0,
	215, 0, 68, 0, 0, 0, 0, 0, 0, 0,
	0, 215, 2374, 0, 0, 0, 3186, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 881, 215, 0,
	0, 0, 0, 0, 0, 73, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 846, 0, 0, 0,
	0, 1534, 0, 3047, 0, 864, 0, 0, 0, 0,
	0, 0, 0, 0, 1207, 0, 0, 78, 0, 1529,
	0, 0, 0, 0, 0, 0, 0, 89, 0, 0,
	0, 0, 79, 86, 3235, 3236, 3237, 0, 1044, 0,
	0, 0, 0, 0, 0, 0, 1505, 1506, 0, 2374,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1536, 0, 2062, 3475,
	0, 0, 0, 1508, 3001, 3002, 0, 0, 3005, 80,
	0, 0, 3008, 2705, 2706, 0, 2723, 2724, 2725, 0,
	0, 3012, 0, 0, 0, 0, 1248, 0, 2374, 0,
	3019, 0, 3014, 2759, 1507, 0, 0, 0, 0, 0,
	0, 0, 0, 1527, 0, 0, 0, 0, 3031, 0,
	0, 1524, 0, 0, 0, 0, 2705, 2706, 0, 2723,
	2724, 2725, 0, 0, 0, 0, 0, 1525, 1521, 0,
	1518, 1516, 1517, 1509, 1510, 1511, 1512, 1514, 1515, 0,
	2720, 3058, 3059, 0, 3060, 3061, 3062, 0, 0, 3063,
	0, 0, 2622, 3065, 0, 0, 0, 0, 216, 1127,
	216, 216, 0, 1127, 216, 1127, 0, 0, 0, 1127,
	1530, 1531, 1532, 1533, 0, 0, 0, 216, 0, 0,
	1513, 0, 0, 2720, 3093, 3094, 0, 0, 81, 0,
	0, 0, 1207, 0, 0, 0, 0, 881, 0, 3103,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3112, 1535, 1537, 2711, 1127, 216,
	216, 0, 0, 0, 0, 153, 84, 0, 85, 0,
	0, 0, 216, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1522, 1523, 0, 187, 0, 0,
	0, 0, 0, 216, 216, 216, 0, 0, 1127, 721,
	2711, 0, 1127, 123, 0, 0, 1127, 216, 216, 0,
	3141, 1528, 2726, 0, 0, 0, 1127, 0, 0, 0,
	0, 0, 0, 0, 0, 3150, 3153, 189, 0, 0,
	2727, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2721, 0,
	124, 3173, 0, 0, 0, 2726, 0, 0, 0, 1127,
	0, 0, 0, 0, 157, 0, 0, 0, 1117, 0,
	0, 63, 188, 0, 1225, 0, 0, 0, 0, 0,
	0, 0, 181, 216, 0, 64, 0, 0, 0, 0,
	182, 2721, 0, 0, 0, 0, 0, 216, 0, 0,
	1534, 68, 0, 0, 0, 935, 0, 0, 0, 0,
	0, 1374, 0, 0, 0, 0, 0, 0, 1529, 0,
	0, 0, 1645, 0, 0, 0, 0, 0, 0, 0,
	0, 3229, 0, 0, 73, 0, 0, 0, 0, 0,
	0, 0, 1324, 0, 0, 0, 0, 214, 0, 0,
	0, 0, 0, 0, 0, 2722, 0, 0, 0, 0,
	0, 0, 0, 1349, 1349, 1349, 78, 0, 0, 0,
	636, 0, 0, 0, 0, 0, 89, 1378, 1379, 0,
	0, 79, 86, 0, 0, 0, 0, 0, 0, 0,
	636, 0, 0, 3268, 3269, 0, 0, 0, 2722, 3273,
	3274, 0, 0, 0, 3277, 3278, 0, 0, 0, 0,
	0, 3282, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3286, 91, 0, 91, 0, 91, 80, 0,
	0, 0, 0, 0, 0, 0, 1525, 1521, 3291, 1518,
	1516, 1517, 1509, 1510, 1511, 1512, 1514, 1515, 0, 0,
	0, 0, 0, 1458, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2717,
	2718, 2719, 0, 0, 0, 0, 2716, 2714, 2715, 2707,
	2708, 2709, 2710, 2712, 2713, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1057, 0, 864, 91, 91,
	0, 0, 0, 0, 0, 0, 0, 91, 0, 0,
	0, 0, 2717, 2718, 2719, 91, 0, 0, 0, 2716,
	2714, 2715, 2707, 2708, 2709, 2710, 2712, 2713, 0, 0,
	0, 0, 0, 0, 0, 216, 0, 1505, 1506, 0,
	0, 0, 0, 0, 3153, 0, 1127, 81, 216, 216,
	216, 0, 0, 0, 0, 216, 0, 1536, 0, 0,
	216, 0, 0, 0, 1508, 0, 0, 0, 0, 91,
	0, 0, 1127, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 153, 84, 0, 85, 0, 0,
	0, 0, 0, 1127, 0, 1507, 0, 0, 0, 0,
	0, 0, 0, 0, 1527, 0, 187, 0, 0, 0,
	0, 0, 1524, 0, 0, 0, 0, 0, 721, 0,
	0, 0, 123, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3153, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 846, 189, 0, 0, 0,
	0, 0, 0, 2615, 0, 0, 0, 0, 0, 0,
	3444, 3445, 3446, 1568, 0, 0, 0, 0, 0, 124,
	0, 1530, 1531, 1532, 1533, 0, 0, 0, 0, 0,
	1575, 1513, 0, 157, 1581, 0, 0, 0, 3454, 3455,
	0, 188, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 181, 3462, 0, 0, 1683, 0, 0, 0, 182,
	0, 0, 0, 0, 0, 0, 1535, 1537, 1692, 0,
	1225, 0, 0, 0, 0, 1127, 1127, 216, 0, 0,
	1372, 0, 0, 1127, 0, 0, 0, 0, 0, 0,
	0, 0, 3153, 0, 0, 1522, 1523, 0, 0, 0,
	3499, 0, 0, 2705, 2706, 0, 2723, 2724, 2725, 3506,
	0, 0, 869, 0, 0, 0, 0, 0, 3513, 0,
	0, 216, 1528, 0, 0, 216, 0, 0, 0, 0,
	216, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 216, 0,
	216, 0, 216, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3153, 3153,
	2720, 0, 0, 0, 1665, 0, 1668, 0, 91, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	216, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1127, 0, 1127, 0,
	1127, 1534, 0, 0, 0, 0, 0, 0, 1127, 0,
	3584, 1127, 216, 3587, 0, 216, 0, 0, 0, 1529,
	0, 0, 0, 0, 1127, 1127, 1127, 0, 0, 0,
	0, 3153, 0, 0, 0, 216, 0, 2711, 0, 0,
	0, 0, 0, 0, 216, 216, 0, 216, 0, 216,
	0, 216, 0, 216, 0, 0, 0, 0, 0, 0,
	214, 0, 214, 214, 0, 3153, 214, 0, 3153, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 636,
	0, 1891, 0, 216, 0, 1898, 0, 0, 0, 0,
	0, 0, 2726, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1324, 0,
	1917, 0, 1917, 0, 0, 0, 0, 0, 0, 0,
	0, 214, 214, 0, 0, 0, 0, 0, 2721, 0,
	0, 1127, 869, 0, 214, 0, 0, 1525, 1521, 0,
	1518, 1516, 1517, 1509, 1510, 1511, 1512, 1514, 1515, 0,
	1225, 0, 0, 0, 0, 214, 214, 214, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 214,
	214, 0, 0, 3709, 3709, 3709, 0, 0, 0, 0,
	0, 0, 1898, 0, 0, 1965, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3730, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1982, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1992, 1127, 1994, 0, 1996,
	0, 1998, 0, 1999, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2722, 3709, 0, 0, 0,
	0, 0, 0, 0, 0, 214, 0, 0, 0, 0,
	0, 0, 0, 2016, 0, 0, 0, 0, 0, 214,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3153, 220, 3153, 0, 0, 1127, 0, 0, 0, 0,
	0, 864, 0, 864, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 216, 0,
	0, 1127, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3709, 3826, 0, 0, 0, 0, 0,
	0, 3830, 0, 0, 0, 0, 629, 0, 0, 2717,
	2718, 2719, 0, 0, 0, 0, 2716, 2714, 2715, 2707,
	2708, 2709, 2710, 2712, 2713, 0, 629, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1127, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 846, 0, 0, 846,
	846, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1127, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 216, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 216, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	216, 0, 0, 0, 2129, 0, 0, 0, 2314, 0,
	0, 0, 0, 0, 216, 1127, 0, 0, 864, 1127,
	0, 1667, 0, 1057, 0, 216, 0, 214, 0, 1575,
	0, 0, 0, 1575, 0, 0, 0, 0, 0, 0,
	214, 1667, 214, 0, 0, 0, 0, 636, 0, 0,
	0, 216, 636, 0, 0, 0, 0, 0, 216, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 216, 0, 0, 216, 0,
	216, 0, 216, 0, 0, 0, 0, 0, 1127, 1127,
	0, 1127, 0, 1044, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1127, 0, 0, 0, 0, 0, 1668,
	0, 216, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 216, 0, 216,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	91, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 216, 216, 216, 216, 0, 216, 0, 216,
	0, 0, 0, 0, 1225, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	216, 0, 0, 0, 0, 0, 0, 0, 216, 636,
	0, 1898, 0, 0, 0, 0, 0, 0, 2473, 0,
	0, 0, 0, 0, 0, 0, 0, 1505, 1506, 0,
	1538, 1539, 1540, 1548, 1549, 1550, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2504, 1541, 1536, 1349, 0,
	1349, 0, 1349, 214, 1508, 0, 0, 214, 0, 1554,
	0, 0, 214, 0, 91, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	214, 2548, 214, 0, 214, 1507, 0, 0, 0, 0,
	0, 0, 0, 91, 1527, 0, 0, 2556, 0, 2559,
	0, 0, 1524, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 91, 0, 91, 0, 0,
	0, 0, 214, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2580, 1225, 2582, 1225, 0, 2585, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 214, 91, 0, 214, 91, 0,
	0, 1530, 1531, 1532, 1533, 0, 0, 0, 0, 0,
	1349, 1513, 0, 0, 0, 0, 0, 214, 2613, 0,
	0, 0, 0, 0, 0, 91, 636, 214, 0, 214,
	0, 214, 0, 214, 0, 214, 0, 0, 1545, 0,
	0, 1555, 0, 0, 0, 939, 1535, 1537, 0, 0,
	0, 0, 0, 0, 0, 1127, 0, 1123, 0, 0,
	0, 1123, 0, 1237, 0, 214, 1551, 1237, 1552, 0,
	0, 0, 0, 0, 0, 1522, 1523, 0, 0, 0,
	0, 0, 0, 91, 0, 0, 0, 1127, 0, 0,
	0, 1543, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1528, 0, 1127, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1237, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1553, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1542, 0, 0, 0, 0, 0, 216,
	0, 0, 0, 0, 0, 0, 1237, 0, 0, 0,
	1237, 0, 0, 0, 1237, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1237, 0, 0, 0, 0, 0,
	0, 216, 216, 216, 0, 0, 0, 0, 0, 2129,
	216, 1534, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 216, 0, 0, 0, 0, 0, 1529,
	1575, 0, 1127, 0, 0, 0, 0, 1237, 0, 0,
	0, 0, 0, 1127, 0, 0, 0, 0, 0, 0,
	0, 0, 1127, 0, 0, 1546, 0, 0, 0, 0,
	0, 0, 0, 0, 216, 0, 0, 1127, 216, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1127, 0,
	1057, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1057, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	214, 0, 0, 216, 216, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1127, 1127,
	0, 0, 0, 0, 0, 0, 216, 0, 0, 2826,
	1544, 0, 0, 1519, 1520, 1526, 1547, 1525, 1521, 0,
	1518, 1516, 1517, 1509, 1510, 1511, 1512, 1514, 1515, 0,
	0, 0, 0, 3300, 0, 0, 0, 3299, 0, 1044,
	0, 2864, 2866, 2473, 0, 0, 0, 0, 0, 1127,
	0, 216, 1127, 216, 1044, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 216, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2906, 0, 0, 0, 2910, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 214, 0,
	0, 0, 0, 1127, 0, 0, 0, 0, 0, 214,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1127, 0, 214, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1225, 1225, 0, 214, 0, 0, 91,
	91, 0, 0, 91, 0, 0, 0, 636, 0, 0,
	0, 0, 0, 0, 0, 0, 2963, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 91, 91, 214, 1123, 91, 0, 0, 0, 0,
	214, 0, 0, 629, 0, 0, 0, 0, 629, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1237, 2987, 0, 1225, 0, 0, 0, 214, 0, 0,
	214, 0, 214, 0, 214, 0, 0, 0, 0, 0,
	0, 1123, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2999, 1044, 0, 0,
	864, 0, 0, 214, 0, 708, 0, 1127, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 214,
	0, 214, 0, 0, 0, 91, 91, 0, 690, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 214, 214, 214, 214, 0, 214,
	0, 214, 0, 691, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 692, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	693, 1124, 214, 0, 0, 1124, 0, 1238, 0, 0,
	214, 1238, 1127, 0, 0, 1127, 0, 713, 0, 0,
	0, 0, 0, 1237, 1237, 0, 0, 0, 216, 0,
	0, 1123, 0, 694, 0, 0, 216, 0, 0, 0,
	0, 0, 0, 216, 0, 0, 0, 0, 0, 1127,
	0, 0, 695, 0, 0, 0, 0, 0, 0, 0,
	1238, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 696, 0, 0, 697, 0, 0, 0, 0,
	1127, 1127, 1127, 623, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1127, 0, 0, 0,
	1238, 216, 1127, 0, 1238, 712, 0, 0, 1238, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1238, 0,
	0, 0, 0, 0, 1127, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1237, 0, 1237, 0, 1237, 0,
	0, 1238, 0, 0, 91, 0, 1237, 0, 0, 1237,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1044,
	1044, 0, 1237, 1237, 1237, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3201, 0,
	0, 0, 629, 0, 0, 0, 0, 0, 0, 0,
	699, 0, 0, 3211, 0, 0, 1057, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	715, 1057, 700, 0, 0, 0, 0, 0, 0, 0,
	0, 1127, 0, 1127, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	622, 1667, 0, 0, 0, 0, 0, 701, 0, 0,
	702, 3253, 0, 0, 0, 0, 710, 0, 0, 0,
	0, 0, 0, 703, 0, 0, 0, 0, 0, 1123,
	0, 0, 0, 0, 216, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1127, 216, 216, 0, 0, 1127,
	0, 214, 0, 0, 704, 711, 0, 0, 0, 0,
	0, 0, 705, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 216, 0, 0, 707, 1127, 216, 0, 0,
	706, 1127, 0, 214, 214, 214, 0, 0, 0, 0,
	0, 0, 1667, 624, 0, 0, 0, 0, 0, 1044,
	0, 0, 0, 0, 709, 214, 0, 0, 0, 0,
	0, 0, 0, 0, 1123, 0, 0, 0, 0, 0,
	0, 0, 1127, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 91, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 214, 0, 0, 0,
	214, 0, 1127, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1057, 0, 0, 0, 0, 0,
	0, 1505, 1506, 1123, 0, 0, 0, 0, 1124, 0,
	0, 1127, 0, 0, 0, 214, 214, 0, 0, 0,
	0, 1536, 0, 1127, 3368, 0, 0, 0, 1508, 1123,
	0, 0, 216, 0, 1238, 2473, 0, 0, 214, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1124, 0, 0, 0, 1507,
	0, 0, 2473, 0, 0, 0, 0, 3408, 1527, 0,
	0, 0, 0, 0, 0, 0, 1524, 0, 0, 0,
	0, 0, 0, 214, 1044, 214, 0, 0, 0, 0,
	0, 0, 1044, 1127, 0, 0, 1127, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 214, 0,
	0, 1237, 0, 216, 216, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1530, 1531, 1532, 1533, 0,
	0, 0, 0, 0, 0, 1513, 0, 0, 0, 0,
	0, 1123, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 91, 0, 0, 0,
	1535, 1537, 0, 0, 0, 0, 91, 1238, 1238, 0,
	0, 0, 0, 0, 0, 1124, 0, 0, 0, 0,
	0, 0, 3482, 1123, 91, 0, 0, 1237, 0, 1522,
	1523, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 216, 0, 0, 1127, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1127, 1127, 1528, 0, 0, 0,
	1127, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1057, 1057, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 216,
	0, 1127, 0, 0, 0, 0, 1237, 1237, 0, 1237,
	216, 0, 0, 3563, 1225, 0, 0, 0, 0, 0,
	0, 1237, 0, 0, 0, 0, 0, 216, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1238, 0,
	1238, 0, 1238, 0, 0, 1534, 0, 0, 0, 0,
	1238, 0, 0, 1238, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1529, 0, 0, 1238, 1238, 1238, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1505, 1506, 0, 1538, 1539, 1540, 1548, 1549, 1550,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1541, 1536, 0, 0, 0, 0, 0, 0, 1508, 0,
	0, 3621, 0, 1554, 0, 0, 0, 0, 0, 0,
	0, 2129, 0, 0, 0, 0, 0, 0, 0, 0,
	214, 0, 0, 0, 0, 0, 0, 0, 214, 1507,
	0, 0, 0, 0, 0, 214, 0, 0, 1527, 0,
	0, 0, 0, 0, 0, 0, 1524, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1057, 0, 0, 3663,
	0, 0, 0, 1124, 0, 0, 0, 0, 0, 0,
	3680, 1525, 1521, 0, 1518, 1516, 1517, 1509, 1510, 1511,
	1512, 1514, 1515, 0, 0, 0, 0, 3692, 0, 0,
	0, 0, 0, 214, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1530, 1531, 1532, 1533, 0,
	0, 0, 0, 0, 0, 1513, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1545, 0, 0, 1555, 0, 0, 1124, 0,
	1535, 1537, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1551, 0, 1552, 0, 0, 0, 0, 0, 0, 1522,
	1523, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1543, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 91, 1528, 0, 91, 0,
	0, 0, 0, 0, 0, 0, 0, 1124, 0, 0,
	0, 1057, 0, 1123, 0, 0, 0, 0, 0, 1057,
	1553, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1667, 1124, 0, 0, 0, 1542, 0, 0,
	0, 0, 0, 0, 0, 1123, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1123, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 214, 0, 0, 0,
	0, 0, 0, 0, 0, 1534, 0, 214, 214, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1529, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 214, 0, 0, 0, 0, 214,
	0, 0, 0, 0, 0, 1238, 0, 1505, 1506, 1546,
	1538, 1539, 1540, 1548, 1549, 1550, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1541, 1536, 0, 0,
	0, 0, 0, 0, 1508, 1124, 0, 0, 0, 1554,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1123, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1237, 0, 0, 0, 1507, 0, 0, 0, 0,
	1123, 0, 0, 0, 1527, 0, 0, 0, 0, 0,
	0, 0, 1524, 0, 0, 1237, 0, 1124, 0, 0,
	0, 1238, 0, 0, 1544, 0, 1237, 1519, 1520, 1526,
	1547, 1525, 1521, 0, 1518, 1516, 1517, 1509, 1510, 1511,
	1512, 1514, 1515, 0, 0, 0, 0, 2693, 0, 0,
	0, 2694, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 214, 0, 0, 0, 0, 0,
	0, 1530, 1531, 1532, 1533, 0, 1237, 1237, 0, 0,
	0, 1513, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1238, 1238, 0, 1238, 0, 0, 0, 0, 1545, 0,
	0, 1555, 0, 0, 0, 1238, 1535, 1537, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1123, 0, 0,
	1123, 0, 0, 0, 0, 0, 1551, 0, 1552, 0,
	0, 0, 0, 0, 0, 1522, 1523, 0, 0, 0,
	0, 0, 0, 0, 0, 214, 214, 0, 0, 0,
	0, 1543, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1528, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1553, 0, 0, 0,
	0, 1123, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1542, 0, 0, 0, 0, 1123, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1505, 1506, 0, 1538, 1539, 1540, 1548, 1549, 1550, 0,
	0, 0, 0, 214, 0, 0, 0, 0, 0, 1541,
	1536, 1534, 0, 0, 0, 0, 0, 1508, 0, 0,
	0, 0, 1554, 0, 0, 0, 0, 0, 0, 1529,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1507, 0,
	0, 0, 0, 0, 0, 1546, 0, 1527, 0, 0,
	0, 214, 0, 0, 0, 1524, 0, 0, 0, 0,
	0, 0, 214, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 214,
	0, 0, 0, 0, 0, 1123, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1530, 1531, 1532, 1533, 0, 0,
	0, 0, 0, 0, 1513, 0, 0, 0, 0, 0,
	1544, 0, 0, 1519, 1520, 1526, 1547, 1525, 1521, 0,
	1518, 1516, 1517, 1509, 1510, 1511, 1512, 1514, 1515, 0,
	0, 1545, 0, 2151, 1555, 0, 0, 2152, 0, 1535,
	1537, 0, 0, 0, 0, 0, 0, 1124, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1551,
	1237, 1552, 0, 1237, 0, 0, 0, 0, 1522, 1523,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1124,
	0, 0, 0, 0, 1543, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1528, 1124, 1237, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1553,
	0, 0, 0, 0, 0, 0, 0, 0, 1237, 1237,
	1237, 0, 0, 0, 0, 0, 1542, 0, 0, 0,
	0, 0, 0, 0, 1237, 0, 0, 0, 0, 0,
	1123, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1505, 1506, 0, 1538, 1539, 1540, 1548, 1549,
	1550, 0, 1123, 0, 0, 0, 0, 0, 0, 0,
	0, 1541, 1536, 0, 1534, 0, 0, 0, 0, 1508,
	0, 0, 0, 0, 1554, 0, 0, 0, 0, 0,
	0, 0, 1529, 0, 1124, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1238, 0, 0, 0, 0,
	1507, 0, 0, 0, 1124, 0, 0, 0, 1546, 1527,
	0, 0, 0, 0, 0, 0, 0, 1524, 0, 1238,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1238, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1123,
	0, 1123, 0, 0, 0, 0, 1530, 1531, 1532, 1533,
	1238, 1238, 0, 0, 0, 0, 1513, 0, 0, 0,
	0, 0, 0, 1544, 0, 0, 1519, 1520, 1526, 1547,
	1525, 1521, 0, 1518, 1516, 1517, 1509, 1510, 1511, 1512,
	1514, 1515, 0, 1545, 0, 0, 1555, 0, 0, 0,
	3298, 1535, 1537, 0, 0, 0, 0, 0, 0, 0,
	0, 1124, 1123, 0, 1124, 0, 0, 1123, 0, 0,
	0, 1551, 0, 1552, 0, 0, 0, 0, 0, 0,
	1522, 1523, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1123, 0, 1543, 0, 0, 1237,
	0, 0, 0, 0, 0, 0, 0, 1528, 0, 0,
	1505, 1506, 0, 1538, 1539, 1540, 1548, 1549, 1550, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1541,
	1536, 1553, 0, 0, 0, 1124, 0, 1508, 0, 0,
	1123, 0, 1554, 0, 0, 0, 0, 0, 1542, 0,
	0, 0, 1124, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1507, 0,
	1123, 0, 0, 0, 0, 0, 0, 1527, 0, 0,
	0, 0, 0, 0, 0, 1524, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1534, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1123,
	0, 0, 0, 0, 1529, 0, 0, 0, 0, 0,
	0, 1123, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1546, 0, 0, 0, 1530, 1531, 1532, 1533, 0, 0,
	0, 0, 0, 0, 1513, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1124,
	0, 1545, 0, 0, 1555, 0, 0, 0, 0, 1535,
	1537, 1123, 0, 0, 1237, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1551,
	0, 1552, 0, 0, 0, 0, 0, 0, 1522, 1523,
	0, 0, 0, 0, 0, 1544, 0, 0, 1519, 1520,
	1526, 1547, 1525, 1521, 1543, 1518, 1516, 1517, 1509, 1510,
	1511, 1512, 1514, 1515, 0, 1528, 0, 0, 0, 0,
	0, 0, 3017, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1553,
	0, 0, 0, 0, 1238, 0, 0, 1238, 0, 0,
	0, 0, 0, 0, 0, 0, 1542, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1238, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1237, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1237, 1237, 1534, 0, 0, 0, 1237, 0,
	0, 0, 1238, 1238, 1238, 0, 0, 0, 0, 0,
	0, 0, 1529, 0, 0, 0, 0, 0, 1238, 0,
	0, 0, 0, 0, 1124, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1546, 1123,
	0, 0, 0, 0, 1505, 1506, 1124, 1538, 1539, 1540,
	1548, 1549, 1550, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1541, 1536, 0, 0, 0, 0, 0,
	0, 1508, 0, 0, 0, 0, 1554, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1505, 1506, 0, 1538, 1539, 1540, 1548,
	1549, 1550, 1507, 0, 0, 0, 0, 0, 0, 0,
	0, 1527, 1541, 1536, 0, 0, 0, 0, 0, 1524,
	1508, 0, 0, 1544, 0, 1554, 1519, 1520, 1526, 1547,
	1525, 1521, 0, 1518, 1516, 1517, 1509, 1510, 1511, 1512,
	1514, 1515, 0, 0, 0, 0, 0, 0, 0, 0,
	2696, 1507, 0, 0, 0, 0, 0, 0, 0, 0,
	1527, 0, 0, 1124, 0, 1124, 0, 0, 1524, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1530, 1531,
	1532, 1533, 0, 0, 0, 0, 0, 0, 1513, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1545, 0, 0, 1555, 0,
	0, 0, 0, 1535, 1537, 0, 1124, 1530, 1531, 1532,
	1533, 1124, 0, 0, 0, 0, 0, 1513, 0, 0,
	0, 0, 0, 1551, 0, 1552, 0, 0, 0, 0,
	0, 0, 1522, 1523, 0, 0, 0, 0, 1124, 0,
	0, 0, 0, 1238, 1545, 0, 0, 1555, 1543, 0,
	0, 0, 1535, 1537, 0, 0, 0, 0, 0, 1528,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1551, 0, 1552, 0, 0, 0, 0, 0,
	0, 1522, 1523, 1553, 1124, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1543, 0, 0,
	1542, 0, 0, 0, 0, 0, 0, 0, 1528, 0,
	0, 0, 0, 0, 1124, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1553, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1534, 1542,
	0, 0, 0, 1124, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1124, 1529, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1546, 0, 0, 0, 0, 1534, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1529, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1124, 0, 0, 1238, 0,
	0, 1546, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1544, 0, 0,
	1519, 1520, 1526, 1547, 1525, 1521, 0, 1518, 1516, 1517,
	1509, 1510, 1511, 1512, 1514, 1515, 0, 0, 0, 0,
	0, 0, 0, 0, 2695, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1544, 0, 0, 1519,
	1520, 1526, 1547, 1525, 1521, 0, 1518, 1516, 1517, 1509,
	1510, 1511, 1512, 1514, 1515, 0, 0, 0, 0, 0,
	0, 0, 0, 2692, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1238, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1238, 1238, 0, 0,
	0, 0, 1238, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1121, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 224, 225, 226, 227, 228, 1128, 229,
	1129, 1130, 1131, 1124, 1132, 501, 1133, 1134, 1135, 1136,
	230, 232, 231, 233, 234, 502, 503, 235, 504, 238,
	236, 237, 505, 1137, 239, 240, 241, 242, 243, 244,
	245, 1138, 1139, 246, 506, 507, 508, 1140, 247, 248,
	509, 1141, 1126, 1142, 249, 250, 251, 252, 253, 254,
	0, 1143, 256, 257, 258, 255, 1144, 259, 0, 260,
	261, 262, 1145, 263, 994, 264, 265, 1146, 1147, 1149,
	1148, 1150, 1151, 1152, 266, 267, 268, 269, 270, 271,
	510, 511, 1153, 272, 273, 1154, 275, 274, 1155, 276,
	1156, 1157, 277, 278, 279, 1158, 280, 1159, 281, 282,
	1160, 283, 512, 284, 285, 287, 289, 286, 290, 291,
	292, 293, 513, 514, 1161, 221, 1162, 0, 0, 0,
	0, 294, 295, 296, 515, 297, 298, 0, 299, 1163,
	300, 1164, 1165, 995, 301, 516, 517, 302, 303, 1166,
	304, 518, 1167, 519, 305, 1168, 306, 307, 308, 309,
	520, 521, 522, 369, 997, 310, 311, 1169, 312, 313,
	314, 316, 0, 0, 222, 315, 317, 324, 1170, 996,
	318, 523, 320, 319, 321, 322, 323, 524, 1171, 525,
	1172, 325, 998, 526, 999, 326, 327, 328, 1000, 329,
	330, 0, 0, 331, 332, 333, 334, 335, 1173, 337,
	336, 1174, 338, 527, 1001, 339, 340, 1002, 1175, 341,
	342, 343, 1176, 1177, 344, 345, 346, 347, 0, 348,
	349, 351, 353, 350, 352, 357, 354, 355, 356, 359,
	360, 358, 1003, 361, 362, 365, 366, 364, 1004, 363,
	1178, 223, 1005, 367, 1179, 528, 368, 529, 370, 371,
	1180, 372, 373, 374, 1181, 1182, 376, 377, 378, 1183,
	1184, 379, 380, 530, 1006, 381, 1007, 531, 382, 375,
	383, 384, 385, 386, 387, 388, 389, 1185, 390, 391,
	532, 533, 534, 392, 535, 393, 394, 1186, 395, 0,
	396, 397, 398, 399, 400, 401, 402, 536, 403, 404,
	1187, 405, 406, 407, 408, 409, 410, 0, 412, 413,
	414, 411, 415, 416, 417, 418, 1188, 419, 1008, 420,
	421, 422, 423, 537, 424, 0, 425, 429, 430, 431,
	432, 433, 434, 435, 1189, 441, 442, 436, 438, 439,
	440, 437, 443, 444, 445, 1190, 446, 426, 427, 447,
	448, 1009, 449, 450, 538, 451, 452, 1191, 453, 454,
	455, 456, 428, 457, 461, 462, 458, 459, 460, 539,
	1192, 464, 465, 463, 1193, 466, 467, 468, 469, 470,
	288, 471, 1194, 472, 540, 541, 542, 543, 1195, 479,
	1196, 473, 474, 544, 475, 545, 1197, 476, 477, 478,
	0, 480, 481, 1198, 1199, 482, 483, 484, 486, 487,
	485, 489, 1200, 490, 1201, 488, 491, 492, 493, 546,
	547, 548, 1202, 495, 494, 549, 1203, 1204, 1205, 1206,
	496, 497, 550, 498, 499, 500, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1121, 0,
	0, 0, 0, 0, 0, 0, 2292, 0, 0, 0,
	0, 0, 0, 0, 2293, 224, 225, 226, 227, 228,
	1128, 229, 1129, 1130, 1131, 0, 1132, 501, 1133, 1134,
	1135, 1136, 230, 232, 231, 233, 234, 502, 503, 235,
	504, 238, 236, 237, 505, 1137, 239, 240, 241, 242,
	243, 244, 245, 1138, 1139, 246, 506, 507, 508, 1140,
	247, 248, 509, 1141, 1126, 1142, 249, 250, 251, 252,
	253, 254, 0, 1143, 256, 257, 258, 255, 1144, 259,
	0, 260, 261, 262, 1145, 263, 994, 264, 265, 1146,
	1147, 1149, 1148, 1150, 1151, 1152, 266, 267, 268, 269,
	270, 271, 510, 511, 1153, 272, 273, 1154, 275, 274,
	1155, 276, 1156, 1157, 277, 278, 279, 1158, 280, 1159,
	281, 282, 1160, 283, 512, 284, 285, 287, 289, 286,
	290, 291, 292, 293, 513, 514, 1161, 221, 1162, 0,
	0, 0, 0, 294, 295, 296, 515, 297, 298, 0,
	299, 1163, 300, 1164, 1165, 995, 301, 516, 517, 302,
	303, 1166, 304, 518, 1167, 519, 305, 1168, 306, 307,
	308, 309, 520, 521, 522, 369, 997, 310, 311, 1169,
	312, 313, 314, 316, 0, 0, 222, 315, 317, 324,
	1170, 996, 318, 523, 320, 319, 321, 322, 323, 524,
	1171, 525, 1172, 325, 998, 526, 999, 326, 327, 328,
	1000, 329, 330, 0, 0, 331, 332, 333, 334, 335,
	1173, 337, 336, 1174, 338, 527, 1001, 339, 340, 1002,
	1175, 341, 342, 343, 1176, 1177, 344, 345, 346, 347,
	0, 348, 349, 351, 353, 350, 352, 357, 354, 355,
	356, 359, 360, 358, 1003, 361, 362, 365, 366, 364,
	1004, 363, 1178, 223, 1005, 367, 1179, 528, 368, 529,
	370, 371, 1180, 372, 373, 374, 1181, 1182, 376, 377,
	378, 1183, 1184, 379, 380, 530, 1006, 381, 1007, 531,
	382, 375, 383, 384, 385, 386, 387, 388, 389, 1185,
	390, 391, 532, 533, 534, 392, 535, 393, 394, 1186,
	395, 0, 396, 397, 398, 399, 400, 401, 402, 536,
	403, 404, 1187, 405, 406, 407, 408, 409, 410, 0,
	412, 413, 414, 411, 415, 416, 417, 418, 1188, 419,
	1008, 420, 421, 422, 423, 537, 424, 0, 425, 429,
	430, 431, 432, 433, 434, 435, 1189, 441, 442, 436,
	438, 439, 440, 437, 443, 444, 445, 1190, 446, 426,
	427, 447, 448, 1009, 449, 450, 538, 451, 452, 1191,
	453, 454, 455, 456, 428, 457, 461, 462, 458, 459,
	460, 539, 1192, 464, 465, 463, 1193, 466, 467, 468,
	469, 470, 288, 471, 1194, 472, 540, 541, 542, 543,
	1195, 479, 1196, 473, 474, 544, 475, 545, 1197, 476,
	477, 478, 0, 480, 481, 1198, 1199, 482, 483, 484,
	486, 487, 485, 489, 1200, 490, 1201, 488, 491, 492,
	493, 546, 547, 548, 1202, 495, 494, 549, 1203, 1204,
	1205, 1206, 496, 497, 550, 498, 499, 500, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1121, 0,
	0, 0, 0, 3025, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3027, 224, 225, 226, 227, 228,
	1128, 229, 1129, 1130, 1131, 0, 1132, 501, 1133, 1134,
	1135, 1136, 230, 232, 231, 233, 234, 502, 503, 235,
	504, 238, 236, 237, 505, 1137, 239, 240, 241, 242,
	243, 244, 245, 1138, 1139, 246, 506, 507, 508, 1140,
	247, 248, 509, 1141, 1126, 1142, 249, 250, 251, 252,
	253, 254, 0, 1143, 256, 257, 258, 255, 1144, 259,
	0, 260, 261, 262, 1145, 263, 994, 264, 265, 1146,
	1147, 1149, 1148, 1150, 1151, 1152, 266, 267, 268, 269,
	270, 271, 510, 511, 1153, 272, 273, 1154, 275, 274,
	1155, 276, 1156, 1157, 277, 278, 279, 1158, 280, 1159,
	281, 282, 1160, 283, 512, 284, 285, 287, 289, 286,
	290, 291, 292, 293, 513, 514, 1161, 221, 1162, 0,
	0, 0, 0, 294, 295, 296, 515, 297, 298, 0,
	299, 1163, 300, 1164, 1165, 995, 301, 516, 517, 302,
	303, 1166, 304, 518, 1167, 519, 305, 1168, 306, 307,
	308, 309, 520, 521, 522, 369, 997, 310, 311, 1169,
	312, 313, 314, 316, 0, 0, 222, 315, 317, 324,
	1170, 996, 318, 523, 320, 319, 321, 322, 323, 524,
	1171, 525, 1172, 325, 998, 526, 999, 326, 327, 328,
	1000, 329, 330, 0, 0, 331, 332, 333, 334, 335,
	1173, 337, 336, 1174, 338, 527, 1001, 339, 340, 1002,
	1175, 341, 342, 343, 1176, 1177, 344, 345, 346, 347,
	0, 348, 349, 351, 353, 350, 352, 357, 354, 355,
	356, 359, 360, 358, 1003, 361, 362, 365, 366, 364,
	1004, 363, 1178, 223, 1005, 367, 1179, 528, 368, 529,
	370, 371, 1180, 372, 373, 374, 1181, 1182, 376, 377,
	378, 1183, 1184, 379, 380, 530, 1006, 381, 1007, 531,
	382, 375, 383, 384, 385, 386, 387, 388, 389, 1185,
	390, 391, 532, 533, 534, 392, 535, 393, 394, 1186,
	395, 0, 396, 397, 398, 399, 400, 401, 402, 536,
	403, 404, 1187, 405, 406, 407, 408, 409, 410, 0,
	412, 413, 414, 411, 415, 416, 417, 418, 1188, 419,
	1008, 420, 421, 422, 423, 537, 424, 0, 425, 429,
	430, 431, 432, 433, 434, 435, 1189, 441, 442, 436,
	438, 439, 440, 437, 443, 444, 445, 1190, 446, 426,
	427, 447, 448, 1009, 449, 450, 538, 451, 452, 1191,
	453, 454, 455, 456, 428, 457, 461, 462, 458, 459,
	460, 539, 1192, 464, 465, 463, 1193, 466, 467, 468,
	469, 470, 288, 471, 1194, 472, 540, 541, 542, 543,
	1195, 479, 1196, 473, 474, 544, 475, 545, 1197, 476,
	477, 478, 0, 480, 481, 1198, 1199, 482, 483, 484,
	486, 487, 485, 489, 1200, 490, 1201, 488, 491, 492,
	493, 546, 547, 548, 1202, 495, 494, 549, 1203, 1204,
	1205, 1206, 496, 497, 550, 498, 499, 500, 0, 0,
	0, 0, 1121, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3322, 224,
	225, 226, 227, 228, 1128, 229, 1129, 1130, 1131, 0,
	1132, 501, 1133, 1134, 1135, 1136, 230, 232, 231, 233,
	234, 502, 503, 235, 504, 238, 236, 237, 505, 1137,
	239, 240, 241, 242, 243, 244, 245, 1138, 1139, 246,
	506, 507, 508, 1140, 247, 248, 509, 1141, 1126, 1142,
	249, 250, 251, 252, 253, 254, 0, 1143, 256, 257,
	258, 255, 1144, 259, 0, 260, 261, 262, 1145, 263,
	994, 264, 265, 1146, 1147, 1149, 1148, 1150, 1151, 1152,
	266, 267, 268, 269, 270, 271, 510, 511, 1153, 272,
	273, 1154, 275, 274, 1155, 276, 1156, 1157, 277, 278,
	279, 1158, 280, 1159, 281, 282, 1160, 283, 512, 284,
	285, 287, 289, 286, 290, 291, 292, 293, 513, 514,
	1161, 221, 1162, 0, 0, 0, 0, 294, 295, 296,
	515, 297, 298, 0, 299, 1163, 300, 1164, 1165, 995,
	301, 516, 517, 302, 303, 1166, 304, 518, 1167, 519,
	305, 1168, 306, 307, 308, 309, 520, 521, 522, 369,
	997, 310, 311, 1169, 312, 313, 314, 316, 0, 0,
	222, 315, 317, 324, 1170, 996, 318, 523, 320, 319,
	321, 322, 323, 524, 1171, 525, 1172, 325, 998, 526,
	999, 326, 327, 328, 1000, 329, 330, 0, 0, 331,
	332, 333, 334, 335, 1173, 337, 336, 1174, 338, 527,
	1001, 339, 340, 1002, 1175, 341, 342, 343, 1176, 1177,
	344, 345, 346, 347, 0, 348, 349, 351, 353, 350,
	352, 357, 354, 355, 356, 359, 360, 358, 1003, 361,
	362, 365, 366, 364, 1004, 363, 1178, 223, 1005, 367,
	1179, 528, 368, 529, 370, 371, 1180, 372, 373, 374,
	1181, 1182, 376, 377, 378, 1183, 1184, 379, 380, 530,
	1006, 381, 1007, 531, 382, 375, 383, 384, 385, 386,
	387, 388, 389, 1185, 390, 391, 532, 533, 534, 392,
	535, 393, 394, 1186, 395, 0, 396, 397, 398, 399,
	400, 401, 402, 536, 403, 404, 1187, 405, 406, 407,
	408, 409, 410, 0, 412, 413, 414, 411, 415, 416,
	417, 418, 1188, 419, 1008, 420, 421, 422, 423, 537,
	424, 0, 425, 429, 430, 431, 432, 433, 434, 435,
	1189, 441, 442, 436, 438, 439, 440, 437, 443, 444,
	445, 1190, 446, 426, 427, 447, 448, 1009, 449, 450,
	538, 451, 452, 1191, 453, 454, 455, 456, 428, 457,
	461, 462, 458, 459, 460, 539, 1192, 464, 465, 463,
	1193, 466, 467, 468, 469, 470, 288, 471, 1194, 472,
	540, 541, 542, 543, 1195, 479, 1196, 473, 474, 544,
	475, 545, 1197, 476, 477, 478, 0, 480, 481, 1198,
	1199, 482, 483, 484, 486, 487, 485, 489, 1200, 490,
	1201, 488, 491, 492, 493, 546, 547, 548, 1202, 495,
	494, 549, 1203, 1204, 1205, 1206, 496, 497, 550, 498,
	499, 500, 1121, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3450, 0, 224,
	225, 226, 227, 228, 1128, 229, 1129, 1130, 1131, 0,
	1132, 501, 1133, 1134, 1135, 1136, 230, 232, 231, 233,
	234, 502, 503, 235, 504, 238, 236, 237, 505, 1137,
	239, 240, 241, 242, 243, 244, 245, 1138, 1139, 246,
	506, 507, 508, 1140, 247, 248, 509, 1141, 1126, 1142,
	249, 250, 251, 252, 253, 254, 0, 1143, 256, 257,
	258, 255, 1144, 259, 0, 260, 261, 262, 1145, 263,
	994, 264, 265, 1146, 1147, 1149, 1148, 1150, 1151, 1152,
	266, 267, 268, 269, 270, 271, 510, 511, 1153, 272,
	273, 1154, 275, 274, 1155, 276, 1156, 1157, 277, 278,
	279, 1158, 280, 1159, 281, 282, 1160, 283, 512, 284,
	285, 287, 289, 286, 290, 291, 292, 293, 513, 514,
	1161, 221, 1162, 0, 0, 0, 0, 294, 295, 296,
	515, 297, 298, 0, 299, 1163, 300, 1164, 1165, 995,
	301, 516, 517, 302, 303, 1166, 304, 518, 1167, 519,
	305, 1168, 306, 307, 308, 309, 520, 521, 522, 369,
	997, 310, 311, 1169, 312, 313, 314, 316, 0, 0,
	222, 315, 317, 324, 1170, 996, 318, 523, 320, 319,
	321, 322, 323, 524, 1171, 525, 1172, 325, 998, 526,
	999, 326, 327, 328, 1000, 329, 330, 0, 0, 331,
	332, 333, 334, 335, 1173, 337, 336, 1174, 338, 527,
	1001, 339, 340, 1002, 1175, 341, 342, 343, 1176, 1177,
	344, 345, 346, 347, 0, 348, 349, 351, 353, 350,
	352, 357, 354, 355, 356, 359, 360, 358, 1003, 361,
	362, 365, 366, 364, 1004, 363, 1178, 223, 1005, 367,
	1179, 528, 368, 529, 370, 371, 1180, 372, 373, 374,
	1181, 1182, 376, 377, 378, 1183, 1184, 379, 380, 530,
	1006, 381, 1007, 531, 382, 375, 383, 384, 385, 386,
	387, 388, 389, 1185, 390, 391, 532, 533, 534, 392,
	535, 393, 394, 1186, 395, 0, 396, 397, 398, 399,
	400, 401, 402, 536, 403, 404, 1187, 405, 406, 407,
	408, 409, 410, 0, 412, 413, 414, 411, 415, 416,
	417, 418, 1188, 419, 1008, 420, 421, 422, 423, 537,
	424, 0, 425, 429, 430, 431, 432, 433, 434, 435,
	1189, 441, 442, 436, 438, 439, 440, 437, 443, 444,
	445, 1190, 446, 426, 427, 447, 448, 1009, 449, 450,
	538, 451, 452, 1191, 453, 454, 455, 456, 428, 457,
	461, 462, 458, 459, 460, 539, 1192, 464, 465, 463,
	1193, 466, 467, 468, 469, 470, 288, 471, 1194, 472,
	540, 541, 542, 543, 1195, 479, 1196, 473, 474, 544,
	475, 545, 1197, 476, 477, 478, 0, 480, 481, 1198,
	1199, 482, 483, 484, 486, 487, 485, 489, 1200, 490,
	1201, 488, 491, 492, 493, 546, 547, 548, 1202, 495,
	494, 549, 1203, 1204, 1205, 1206, 496, 497, 550, 498,
	499, 500, 1121, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3375, 0, 224,
	225, 226, 227, 228, 1128, 229, 1129, 1130, 1131, 0,
	1132, 501, 1133, 1134, 1135, 1136, 230, 232, 231, 233,
	234, 502, 503, 235, 504, 238, 236, 237, 505, 1137,
	239, 240, 241, 242, 243, 244, 245, 1138, 1139, 246,
	506, 507, 508, 1140, 247, 248, 509, 1141, 1126, 1142,
	249, 250, 251, 252, 253, 254, 0, 1143, 256, 257,
	258, 255, 1144, 259, 0, 260, 261, 262, 1145, 263,
	994, 264, 265, 1146, 1147, 1149, 1148, 1150, 1151, 1152,
	266, 267, 268, 269, 270, 271, 510, 511, 1153, 272,
	273, 1154, 275, 274, 1155, 276, 1156, 1157, 277, 278,
	279, 1158, 280, 1159, 281, 282, 1160, 283, 512, 284,
	285, 287, 289, 286, 290, 291, 292, 293, 513, 514,
	1161, 221, 1162, 0, 0, 0, 0, 294, 295, 296,
	515, 297, 298, 0, 299, 1163, 300, 1164, 1165, 995,
	301, 516, 517, 302, 303, 1166, 304, 518, 1167, 519,
	305, 1168, 306, 307, 308, 309, 520, 521, 522, 369,
	997, 310, 311, 1169, 312, 313, 314, 316, 0, 0,
	222, 315, 317, 324, 1170, 996, 318, 523, 320, 319,
	321, 322, 323, 524, 1171, 525, 1172, 325, 998, 526,
	999, 326, 327, 328, 1000, 329, 330, 0, 0, 331,
	332, 333, 334, 335, 1173, 337, 336, 1174, 338, 527,
	1001, 339, 340, 1002, 1175, 341, 342, 343, 1176, 1177,
	344, 345, 346, 347, 0, 348, 349, 351, 353, 350,
	352, 357, 354, 355, 356, 359, 360, 358, 1003, 361,
	362, 365, 366, 364, 1004, 363, 1178, 223, 1005, 367,
	1179, 528, 368, 529, 370, 371, 1180, 372, 373, 374,
	1181, 1182, 376, 377, 378, 1183, 1184, 379, 380, 530,
	1006, 381, 1007, 531, 382, 375, 383, 384, 385, 386,
	387, 388, 389, 1185, 390, 391, 532, 533, 534, 392,
	535, 393, 394, 1186, 395, 0, 396, 397, 398, 399,
	400, 401, 402, 536, 403, 404, 1187, 405, 406, 407,
	408, 409, 410, 0, 412, 413, 414, 411, 415, 416,
	417, 418, 1188, 419, 1008, 420, 421, 422, 423, 537,
	424, 0, 425, 429, 430, 431, 432, 433, 434, 435,
	1189, 441, 442, 436, 438, 439, 440, 437, 443, 444,
	445, 1190, 446, 426, 427, 447, 448, 1009, 449, 450,
	538, 451, 452, 1191, 453, 454, 455, 456, 428, 457,
	461, 462, 458, 459, 460, 539, 1192, 464, 465, 463,
	1193, 466, 467, 468, 469, 470, 288, 471, 1194, 472,
	540, 541, 542, 543, 1195, 479, 1196, 473, 474, 544,
	475, 545, 1197, 476, 477, 478, 0, 480, 481, 1198,
	1199, 482, 483, 484, 486, 487, 485, 489, 1200, 490,
	1201, 488, 491, 492, 493, 546, 547, 548, 1202, 495,
	494, 549, 1203, 1204, 1205, 1206, 496, 497, 550, 498,
	499, 500, 1121, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3254, 0, 224,
	225, 226, 227, 228, 1128, 229, 1129, 1130, 1131, 0,
	1132, 501, 1133, 1134, 1135, 1136, 230, 232, 231, 233,
	234, 502, 503, 235, 504, 238, 236, 237, 505, 1137,
	239, 240, 241, 242, 243, 244, 245, 1138, 1139, 246,
	506, 507, 508, 1140, 247, 248, 509, 1141, 1126, 1142,
	249, 250, 251, 252, 253, 254, 0, 1143, 256, 257,
	258, 255, 1144, 259, 0, 260, 261, 262, 1145, 263,
	994, 264, 265, 1146, 1147, 1149, 1148, 1150, 1151, 1152,
	266, 267, 268, 269, 270, 271, 510, 511, 1153, 272,
	273, 1154, 275, 274, 1155, 276, 1156, 1157, 277, 278,
	279, 1158, 280, 1159, 281, 282, 1160, 283, 512, 284,
	285, 287, 289, 286, 290, 291, 292, 293, 513, 514,
	1161, 221, 1162, 0, 0, 0, 0, 294, 295, 296,
	515, 297, 298, 0, 299, 1163, 300, 1164, 1165, 995,
	301, 516, 517, 302, 303, 1166, 304, 518, 1167, 519,
	305, 1168, 306, 307, 308, 309, 520, 521, 522, 369,
	997, 310, 311, 1169, 312, 313, 314, 316, 0, 0,
	222, 315, 317, 324, 1170, 996, 318, 523, 320, 319,
	321, 322, 323, 524, 1171, 525, 1172, 325, 998, 526,
	999, 326, 327, 328, 1000, 329, 330, 0, 0, 331,
	332, 333, 334, 335, 1173, 337, 336, 1174, 338, 527,
	1001, 339, 340, 1002, 1175, 341, 342, 343, 1176, 1177,
	344, 345, 346, 347, 0, 348, 349, 351, 353, 350,
	352, 357, 354, 355, 356, 359, 360, 358, 1003, 361,
	362, 365, 366, 364, 1004, 363, 1178, 223, 1005, 367,
	1179, 528, 368, 529, 370, 371, 1180, 372, 373, 374,
	1181, 1182, 376, 377, 378, 1183, 1184, 379, 380, 530,
	1006, 381, 1007, 531, 382, 375, 383, 384, 385, 386,
	387, 388, 389, 1185, 390, 391, 532, 533, 534, 392,
	535, 393, 394, 1186, 395, 0, 396, 397, 398, 399,
	400, 401, 402, 536, 403, 404, 1187, 405, 406, 407,
	408, 409, 410, 0, 412, 413, 414, 411, 415, 416,
	417, 418, 1188, 419, 1008, 420, 421, 422, 423, 537,
	424, 0, 425, 429, 430, 431, 432, 433, 434, 435,
	1189, 441, 442, 436, 438, 439, 440, 437, 443, 444,
	445, 1190, 446, 426, 427, 447, 448, 1009, 449, 450,
	538, 451, 452, 1191, 453, 454, 455, 456, 428, 457,
	461, 462, 458, 459, 460, 539, 1192, 464, 465, 463,
	1193, 466, 467, 468, 469, 470, 288, 471, 1194, 472,
	540, 541, 542, 543, 1195, 479, 1196, 473, 474, 544,
	475, 545, 1197, 476, 477, 478, 0, 480, 481, 1198,
	1199, 482, 483, 484, 486, 487, 485, 489, 1200, 490,
	1201, 488, 491, 492, 493, 546, 547, 548, 1202, 495,
	494, 549, 1203, 1204, 1205, 1206, 496, 497, 550, 498,
	499, 500, 1121, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3043, 0, 224,
	225, 226, 227, 228, 1128, 229, 1129, 1130, 1131, 0,
	1132, 501, 1133, 1134, 1135, 1136, 230, 232, 231, 233,
	234, 502, 503, 235, 504, 238, 236, 237, 505, 1137,
	239, 240, 241, 242, 243, 244, 245, 1138, 1139, 246,
	506, 507, 508, 1140, 247, 248, 509, 1141, 1126, 1142,
	249, 250, 251, 252, 253, 254, 0, 1143, 256, 257,
	258, 255, 1144, 259, 0, 260, 261, 262, 1145, 263,
	994, 264, 265, 1146, 1147, 1149, 1148, 1150, 1151, 1152,
	266, 267, 268, 269, 270, 271, 510, 511, 1153, 272,
	273, 1154, 275, 274, 1155, 276, 1156, 1157, 277, 278,
	279, 1158, 280, 1159, 281, 282, 1160, 283, 512, 284,
	285, 287, 289, 286, 290, 291, 292, 293, 513, 514,
	1161, 221, 1162, 0, 0, 0, 0, 294, 295, 296,
	515, 297, 298, 0, 299, 1163, 300, 1164, 1165, 995,
	301, 516, 517, 302, 303, 1166, 304, 518, 1167, 519,
	305, 1168, 306, 307, 308, 309, 520, 521, 522, 369,
	997, 310, 311, 1169, 312, 313, 314, 316, 0, 0,
	222, 315, 317, 324, 1170, 996, 318, 523, 320, 319,
	321, 322, 323, 524, 1171, 525, 1172, 325, 998, 526,
	999, 326, 327, 328, 1000, 329, 330, 0, 0, 331,
	332, 333, 334, 335, 1173, 337, 336, 1174, 338, 527,
	1001, 339, 340, 1002, 1175, 341, 342, 343, 1176, 1177,
	344, 345, 346, 347, 0, 348, 349, 351, 353, 350,
	352, 357, 354, 355, 356, 359, 360, 358, 1003, 361,
	362, 365, 366, 364, 1004, 363, 1178, 223, 1005, 367,
	1179, 528, 368, 529, 370, 371, 1180, 372, 373, 374,
	1181, 1182, 376, 377, 378, 1183, 1184, 379, 380, 530,
	1006, 381, 1007, 531, 382, 375, 383, 384, 385, 386,
	387, 388, 389, 1185, 390, 391, 532, 533, 534, 392,
	535, 393, 394, 1186, 395, 0, 396, 397, 398, 399,
	400, 401, 402, 536, 403, 404, 1187, 405, 406, 407,
	408, 409, 410, 0, 412, 413, 414, 411, 415, 416,
	417, 418, 1188, 419, 1008, 420, 421, 422, 423, 537,
	424, 0, 425, 429, 430, 431, 432, 433, 434, 435,
	1189, 441, 442, 436, 438, 439, 440, 437, 443, 444,
	445, 1190, 446, 426, 427, 447, 448, 1009, 449, 450,
	538, 451, 452, 1191, 453, 454, 455, 456, 428, 457,
	461, 462, 458, 459, 460, 539, 1192, 464, 465, 463,
	1193, 466, 467, 468, 469, 470, 288, 471, 1194, 472,
	540, 541, 542, 543, 1195, 479, 1196, 473, 474, 544,
	475, 545, 1197, 476, 477, 478, 0, 480, 481, 1198,
	1199, 482, 483, 484, 486, 487, 485, 489, 1200, 490,
	1201, 488, 491, 492, 493, 546, 547, 548, 1202, 495,
	494, 549, 1203, 1204, 1205, 1206, 496, 497, 550, 498,
	499, 500, 1121, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2893, 0, 224,
	225, 226, 227, 228, 1128, 229, 1129, 1130, 1131, 0,
	1132, 501, 1133, 1134, 1135, 1136, 230, 232, 231, 233,
	234, 502, 503, 235, 504, 238, 236, 237, 505, 1137,
	239, 240, 241, 242, 243, 244, 245, 1138, 1139, 246,
	506, 507, 508, 1140, 247, 248, 509, 1141, 1126, 1142,
	249, 250, 251, 252, 253, 254, 0, 1143, 256, 257,
	258, 255, 1144, 259, 0, 260, 261, 262, 1145, 263,
	994, 264, 265, 1146, 1147, 1149, 1148, 1150, 1151, 1152,
	266, 267, 268, 269, 270, 271, 510, 511, 1153, 272,
	273, 1154, 275, 274, 1155, 276, 1156, 1157, 277, 278,
	279, 1158, 280, 1159, 281, 282, 1160, 283, 512, 284,
	285, 287, 289, 286, 290, 291, 292, 293, 513, 514,
	1161, 221, 1162, 0, 0, 0, 0, 294, 295, 296,
	515, 297, 298, 0, 299, 1163, 300, 1164, 1165, 995,
	301, 516, 517, 302, 303, 1166, 304, 518, 1167, 519,
	305, 1168, 306, 307, 308, 309, 520, 521, 522, 369,
	997, 310, 311, 1169, 312, 313, 314, 316, 0, 0,
	222, 315, 317, 324, 1170, 996, 318, 523, 320, 319,
	321, 322, 323, 524, 1171, 525, 1172, 325, 998, 526,
	999, 326, 327, 328, 1000, 329, 330, 0, 0, 331,
	332, 333, 334, 335, 1173, 337, 336, 1174, 338, 527,
	1001, 339, 340, 1002, 1175, 341, 342, 343, 1176, 1177,
	344, 345, 346, 347, 0, 348, 349, 351, 353, 350,
	352, 357, 354, 355, 356, 359, 360, 358, 1003, 361,
	362, 365, 366, 364, 1004, 363, 1178, 223, 1005, 367,
	1179, 528, 368, 529, 370, 371, 1180, 372, 373, 374,
	1181, 1182, 376, 377, 378, 1183, 1184, 379, 380, 530,
	1006, 381, 1007, 531, 382, 375, 383, 384, 385, 386,
	387, 388, 389, 1185, 390, 391, 532, 533, 534, 392,
	535, 393, 394, 1186, 395, 0, 396, 397, 398, 399,
	400, 401, 402, 536, 403, 404, 1187, 405, 406, 407,
	408, 409, 410, 0, 412, 413, 414, 411, 415, 416,
	417, 418, 1188, 419, 1008, 420, 421, 422, 423, 537,
	424, 0, 425, 429, 430, 431, 432, 433, 434, 435,
	1189, 441, 442, 436, 438, 439, 440, 437, 443, 444,
	445, 1190, 446, 426, 427, 447, 448, 1009, 449, 450,
	538, 451, 452, 1191, 453, 454, 455, 456, 428, 457,
	461, 462, 458, 459, 460, 539, 1192, 464, 465, 463,
	1193, 466, 467, 468, 469, 470, 288, 471, 1194, 472,
	540, 541, 542, 543, 1195, 479, 1196, 473, 474, 544,
	475, 545, 1197, 476, 477, 478, 0, 480, 481, 1198,
	1199, 482, 483, 484, 486, 487, 485, 489, 1200, 490,
	1201, 488, 491, 492, 493, 546, 547, 548, 1202, 495,
	494, 549, 1203, 1204, 1205, 1206, 496, 497, 550, 498,
	499, 500, 1121, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2175, 0, 224,
	225, 226, 227, 228, 1128, 229, 1129, 1130, 1131, 0,
	1132, 501, 1133, 1134, 1135, 1136, 230, 232, 231, 233,
	234, 502, 503, 235, 504, 238, 236, 237, 505, 1137,
	239, 240, 241, 242, 243, 244, 245, 1138, 1139, 246,
	506, 507, 508, 1140, 247, 248, 509, 1141, 1126, 1142,
	249, 250, 251, 252, 253, 254, 0, 1143, 256, 257,
	258, 255, 1144, 259, 0, 260, 261, 262, 1145, 263,
	994, 264, 265, 1146, 1147, 1149, 1148, 1150, 1151, 1152,
	266, 267, 268, 269, 270, 271, 510, 511, 1153, 272,
	273, 1154, 275, 274, 1155, 276, 1156, 1157, 277, 278,
	279, 1158, 280, 1159, 281, 282, 1160, 283, 512, 284,
	285, 287, 289, 286, 290, 291, 292, 293, 513, 514,
	1161, 221, 1162, 0, 0, 0, 0, 294, 295, 296,
	515, 297, 298, 0, 299, 1163, 300, 1164, 1165, 995,
	301, 516, 517, 302, 303, 1166, 304, 518, 1167, 519,
	305, 1168, 306, 307, 308, 309, 520, 521, 522, 369,
	997, 310, 311, 1169, 312, 313, 314, 316, 0, 0,
	222, 315, 317, 324, 1170, 996, 318, 523, 320, 319,
	321, 322, 323, 524, 1171, 525, 1172, 325, 998, 526,
	999, 326, 327, 328, 1000, 329, 330, 0, 0, 331,
	332, 333, 334, 335, 1173, 337, 336, 1174, 338, 527,
	1001, 339, 340, 1002, 1175, 341, 342, 343, 1176, 1177,
	344, 345, 346, 347, 0, 348, 349, 351, 353, 350,
	352, 357, 354, 355, 356, 359, 360, 358, 1003, 361,
	362, 365, 366, 364, 1004, 363, 1178, 223, 1005, 367,
	1179, 528, 368, 529, 370, 371, 1180, 372, 373, 374,
	1181, 1182, 376, 377, 378, 1183, 1184, 379, 380, 530,
	1006, 381, 1007, 531, 382, 375, 383, 384, 385, 386,
	387, 388, 389, 1185, 390, 391, 532, 533, 534, 392,
	535, 393, 394, 1186, 395, 0, 396, 397, 398, 399,
	400, 401, 402, 536, 403, 404, 1187, 405, 406, 407,
	408, 409, 410, 0, 412, 413, 414, 411, 415, 416,
	417, 418, 1188, 419, 1008, 420, 421, 422, 423, 537,
	424, 0, 425, 429, 430, 431, 432, 433, 434, 435,
	1189, 441, 442, 436, 438, 439, 440, 437, 443, 444,
	445, 1190, 446, 426, 427, 447, 448, 1009, 449, 450,
	538, 451, 452, 1191, 453, 454, 455, 456, 428, 457,
	461, 462, 458, 459, 460, 539, 1192, 464, 465, 463,
	1193, 466, 467, 468, 469, 470, 288, 471, 1194, 472,
	540, 541, 542, 543, 1195, 479, 1196, 473, 474, 544,
	475, 545, 1197, 476, 477, 478, 0, 480, 481, 1198,
	1199, 482, 483, 484, 486, 487, 485, 489, 1200, 490,
	1201, 488, 491, 492, 493, 546, 547, 548, 1202, 495,
	494, 549, 1203, 1204, 1205, 1206, 496, 497, 550, 498,
	499, 500, 1219, 0, 1121, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1874, 0, 0,
	0, 224, 225, 226, 227, 228, 1128, 229, 1129, 1130,
	1131, 0, 1132, 501, 1133, 1134, 1135, 1136, 230, 232,
	231, 233, 234, 502, 503, 235, 504, 238, 236, 237,
	505, 1137, 239, 240, 241, 242, 243, 244, 245, 1138,
	1139, 246, 506, 507, 508, 1140, 247, 248, 509, 1141,
	1126, 1142, 249, 250, 251, 252, 253, 254, 0, 1143,
	256, 257, 258, 255, 1144, 259, 0, 260, 261, 262,
	1145, 263, 994, 264, 265, 1146, 1147, 1149, 1148, 1150,
	1151, 1152, 266, 267, 268, 269, 270, 271, 510, 511,
	1153, 272, 273, 1154, 275, 274, 1155, 276, 1156, 1157,
	277, 278, 279, 1158, 280, 1159, 281, 282, 1160, 283,
	512, 284, 285, 287, 289, 286, 290, 291, 292, 293,
	513, 514, 1161, 221, 1162, 0, 0, 0, 0, 294,
	295, 296, 515, 297, 298, 0, 299, 1163, 300, 1164,
	1165, 995, 301, 516, 517, 302, 303, 1166, 304, 518,
	1167, 519, 305, 1168, 306, 307, 308, 309, 520, 521,
	522, 369, 997, 310, 311, 1169, 312, 313, 314, 316,
	0, 0, 222, 315, 317, 324, 1170, 996, 318, 523,
	320, 319, 321, 322, 323, 524, 1171, 525, 1172, 325,
	998, 526, 999, 326, 327, 328, 1000, 329, 330, 0,
	0, 331, 332, 333, 334, 335, 1173, 337, 336, 1174,
	338, 527, 1001, 339, 340, 1002, 1175, 341, 342, 343,
	1176, 1177, 344, 345, 346, 347, 0, 348, 349, 351,
	353, 350, 352, 357, 354, 355, 356, 359, 360, 358,
	1003, 361, 362, 365, 366, 364, 1004, 363, 1178, 223,
	1005, 367, 1179, 528, 368, 529, 370, 371, 1180, 372,
	373, 374, 1181, 1182, 376, 377, 378, 1183, 1184, 379,
	380, 530, 1006, 381, 1007, 531, 382, 375, 383, 384,
	385, 386, 387, 388, 389, 1185, 390, 391, 532, 533,
	534, 392, 535, 393, 394, 1186, 395, 0, 396, 397,
	398, 399, 400, 401, 402, 536, 403, 404, 1187, 405,
	406, 407, 408, 409, 410, 0, 412, 413, 414, 411,
	415, 416, 417, 418, 1188, 419, 1008, 420, 421, 422,
	423, 537, 424, 0, 425, 429, 430, 431, 432, 433,
	434, 435, 1189, 441, 442, 436, 438, 439, 440, 437,
	443, 444, 445, 1190, 446, 426, 427, 447, 448, 1009,
	449, 450, 538, 451, 452, 1191, 453, 454, 455, 456,
	428, 457, 461, 462, 458, 459, 460, 539, 1192, 464,
	465, 463, 1193, 466, 467, 468, 469, 470, 288, 471,
	1194, 472, 540, 541, 542, 543, 1195, 479, 1196, 473,
	474, 544, 475, 545, 1197, 476, 477, 478, 0, 480,
	481, 1198, 1199, 482, 483, 484, 486, 487, 485, 489,
	1200, 490, 1201, 488, 491, 492, 493, 546, 547, 548,
	1202, 495, 494, 549, 1203, 1204, 1205, 1206, 496, 497,
	550, 498, 499, 500, 1118, 0, 1121, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 224, 225, 226, 227, 228, 1128, 229,
	1129, 1130, 1131, 0, 1132, 501, 1133, 1134, 1135, 1136,
	230, 232, 231, 233, 234, 502, 503, 235, 504, 238,
	236, 237, 505, 1137, 239, 240, 241, 242, 243, 244,
	245, 1138, 1139, 246, 506, 507, 508, 1140, 247, 248,
	509, 1141, 1126, 1142, 249, 250, 251, 252, 253, 254,
	0, 1143, 256, 257, 258, 255, 1144, 259, 0, 260,
	261, 262, 1145, 263, 994, 264, 265, 1146, 1147, 1149,
	1148, 1150, 1151, 1152, 266, 267, 268, 269, 270, 271,
	510, 511, 1153, 272, 273, 1154, 275, 274, 1155, 276,
	1156, 1157, 277, 278, 279, 1158, 280, 1159, 281, 282,
	1160, 283, 512, 284, 285, 287, 289, 286, 290, 291,
	292, 293, 513, 514, 1161, 221, 1162, 0, 0, 0,
	0, 294, 295, 296, 515, 297, 298, 0, 299, 1163,
	300, 1164, 1165, 995, 301, 516, 517, 302, 303, 1166,
	304, 518, 1167, 519, 305, 1168, 306, 307, 308, 309,
	520, 521, 522, 369, 997, 310, 311, 1169, 312, 313,
	314, 316, 0, 0, 222, 315, 317, 324, 1170, 996,
	318, 523, 320, 319, 321, 322, 323, 524, 1171, 525,
	1172, 325, 998, 526, 999, 326, 327, 328, 1000, 329,
	330, 0, 0, 331, 332, 333, 334, 335, 1173, 337,
	336, 1174, 338, 527, 1001, 339, 340, 1002, 1175, 341,
	342, 343, 1176, 1177, 344, 345, 346, 347, 0, 348,
	349, 351, 353, 350, 352, 357, 354, 355, 356, 359,
	360, 358, 1003, 361, 362, 365, 366, 364, 1004, 363,
	1178, 223, 1005, 367, 1179, 528, 368, 529, 370, 371,
	1180, 372, 373, 374, 1181, 1182, 376, 377, 378, 1183,
	1184, 379, 380, 530, 1006, 381, 1007, 531, 382, 375,
	383, 384, 385, 386, 387, 388, 389, 1185, 390, 391,
	532, 533, 534, 392, 535, 393, 394, 1186, 395, 0,
	396, 397, 398, 399, 400, 401, 402, 536, 403, 404,
	1187, 405, 406, 407, 408, 409, 410, 0, 412, 413,
	414, 411, 415, 416, 417, 418, 1188, 419, 1008, 420,
	421, 422, 423, 537, 424, 0, 425, 429, 430, 431,
	432, 433, 434, 435, 1189, 441, 442, 436, 438, 439,
	440, 437, 443, 444, 445, 1190, 446, 426, 427, 447,
	448, 1009, 449, 450, 538, 451, 452, 1191, 453, 454,
	455, 456, 428, 457, 461, 462, 458, 459, 460, 539,
	1192, 464, 465, 463, 1193, 466, 467, 468, 469, 470,
	288, 471, 1194, 472, 540, 541, 542, 543, 1195, 479,
	1196, 473, 474, 544, 475, 545, 1197, 476, 477, 478,
	0, 480, 481, 1198, 1199, 482, 483, 484, 486, 487,
	485, 489, 1200, 490, 1201, 488, 491, 492, 493, 546,
	547, 548, 1202, 495, 494, 549, 1203, 1204, 1205, 1206,
	496, 497, 550, 498, 499, 500, 1121, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 224, 225, 226, 227, 228, 1128, 229,
	1129, 1130, 1131, 0, 1132, 501, 1133, 1134, 1135, 1136,
	230, 232, 231, 233, 234, 502, 503, 235, 504, 238,
	236, 237, 505, 1137, 239, 240, 241, 242, 243, 244,
	245, 1138, 1139, 246, 506, 507, 508, 1140, 247, 248,
	509, 1141, 1126, 1142, 249, 250, 251, 252, 253, 254,
	0, 1143, 256, 257, 258, 255, 1144, 259, 0, 260,
	261, 262, 1145, 263, 994, 264, 265, 1146, 1147, 1149,
	1148, 1150, 1151, 1152, 266, 267, 268, 269, 270, 271,
	510, 511, 1153, 272, 273, 1154, 275, 274, 1155, 276,
	1156, 1157, 277, 278, 279, 1158, 280, 1159, 281, 282,
	1160, 283, 512, 284, 285, 287, 289, 286, 290, 291,
	292, 293, 513, 514, 1161, 221, 1162, 0, 0, 0,
	0, 294, 295, 296, 515, 297, 298, 0, 299, 1163,
	300, 1164, 1165, 995, 301, 516, 517, 302, 303, 1166,
	304, 518, 1167, 519, 305, 1168, 306, 307, 308, 309,
	520, 521, 522, 369, 997, 310, 311, 1169, 312, 313,
	314, 316, 0, 0, 222, 315, 317, 324, 1170, 996,
	318, 523, 320, 319, 321, 322, 323, 524, 1171, 525,
	1172, 325, 998, 526, 999, 326, 327, 328, 1000, 329,
	330, 0, 0, 331, 332, 333, 334, 335, 1173, 337,
	336, 1174, 338, 527, 1001, 339, 340, 1002, 1175, 341,
	342, 343, 1176, 1177, 344, 345, 346, 347, 0, 348,
	349, 351, 353, 350, 352, 357, 354, 355, 356, 359,
	360, 358, 1003, 361, 362, 365, 366, 364, 1004, 363,
	1178, 223, 1005, 367, 1179, 528, 368, 529, 370, 371,
	1180, 372, 373, 374, 1181, 1182, 376, 377, 378, 1183,
	1184, 379, 380, 530, 1006, 381, 1007, 531, 382, 375,
	383, 384, 385, 386, 387, 388, 389, 1185, 390, 391,
	532, 533, 534, 392, 535, 393, 394, 1186, 395, 0,
	396, 397, 398, 399, 400, 401, 402, 536, 403, 404,
	1187, 405, 406, 407, 408, 409, 410, 0, 412, 413,
	414, 411, 415, 416, 417, 418, 1188, 419, 1008, 420,
	421, 422, 423, 537, 424, 0, 425, 429, 430, 431,
	432, 433, 434, 435, 1189, 441, 442, 436, 438, 439,
	440, 437, 443, 444, 445, 1190, 446, 426, 427, 447,
	448, 1009, 449, 450, 538, 451, 452, 1191, 453, 454,
	455, 456, 428, 457, 461, 462, 458, 459, 460, 539,
	1192, 464, 465, 463, 1193, 466, 467, 468, 469, 470,
	288, 471, 1194, 472, 540, 541, 542, 543, 1195, 479,
	1196, 473, 474, 544, 475, 545, 1197, 476, 477, 478,
	0, 480, 481, 1198, 1199, 482, 483, 484, 486, 487,
	485, 489, 1200, 490, 1201, 488, 491, 492, 493, 546,
	547, 548, 1202, 495, 494, 549, 1203, 1204, 1205, 1206,
	496, 497, 550, 498, 499, 500, 2150, 0, 932, 889,
	890, 891, 887, 888, 900, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 224, 225, 226, 227, 228,
	2147, 229, 0, 0, 0, 0, 0, 985, 905, 0,
	0, 0, 230, 232, 231, 233, 234, 502, 947, 926,
	958, 238, 916, 957, 956, 0, 239, 240, 918, 917,
	243, 244, 245, 907, 984, 246, 1021, 1022, 508, 0,
	247, 248, 991, 0, 972, 0, 249, 250, 251, 252,
	253, 254, 0, 0, 256, 257, 258, 255, 0, 259,
	0, 260, 261, 262, 0, 263, 994, 264, 265, 975,
	973, 974, 981, 977, 976, 980, 266, 267, 268, 269,
	961, 271, 954, 953, 878, 272, 273, 0, 275, 274,
	0, 276, 2148, 0, 277, 952, 279, 0, 280, 0,
	281, 282, 0, 283, 884, 284, 285, 287, 289, 286,
	290, 291, 292, 293, 1012, 1013, 896, 221, 0, 0,
	0, 0, 0, 294, 295, 296, 951, 949, 950, 0,
	299, 0, 300, 0, 0, 995, 301, 966, 967, 302,
	303, 0, 304, 1019, 0, 906, 305, 0, 306, 307,
	308, 309, 986, 987, 990, 369, 997, 310, 311, 0,
	312, 313, 314, 928, 0, 0, 222, 315, 317, 324,
	0, 996, 318, 940, 931, 942, 944, 945, 946, 941,
	0, 933, 0, 325, 998, 988, 999, 326, 327, 328,
	1000, 968, 969, 0, 0, 331, 332, 333, 334, 335,
	0, 337, 336, 0, 338, 1020, 1001, 339, 340, 1002,
	0, 341, 342, 343, 979, 978, 344, 345, 346, 347,
	0, 348, 349, 351, 353, 350, 352, 357, 354, 355,
	356, 359, 920, 358, 1003, 361, 362, 365, 366, 364,
	1004, 363, 875, 223, 1005, 367, 897, 989, 368, 955,
	370, 371, 0, 929, 373, 930, 0, 0, 376, 377,
	378, 0, 0, 379, 380, 530, 1006, 381, 1007, 1014,
	382, 375, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 391, 532, 533, 1015, 392, 535, 393, 394, 0,
	395, 0, 396, 397, 398, 399, 400, 401, 402, 948,
	403, 404, 0, 405, 406, 407, 408, 409, 410, 0,
	412, 413, 414, 411, 415, 416, 417, 418, 0, 419,
	1008, 420, 421, 422, 423, 885, 424, 0, 425, 429,
	430, 431, 432, 433, 434, 435, 0, 441, 442, 921,
	922, 924, 925, 437, 443, 444, 445, 982, 446, 426,
	427, 447, 448, 1009, 449, 450, 943, 923, 452, 0,
	453, 454, 455, 456, 428, 457, 461, 993, 458, 459,
	460, 1016, 0, 464, 465, 463, 0, 466, 467, 468,
	469, 470, 288, 919, 0, 472, 962, 963, 964, 965,
	0, 479, 0, 473, 474, 1017, 475, 1018, 895, 476,
	477, 478, 0, 480, 481, 0, 879, 482, 483, 484,
	486, 487, 485, 489, 983, 490, 0, 927, 491, 492,
	493, 546, 959, 1011, 2146, 495, 494, 549, 0, 0,
	0, 0, 496, 497, 550, 498, 499, 500, 876, 0,
	0, 0, 0, 0, 874, 0, 0, 0, 0, 0,
	0, 872, 873, 2149, 0, 0, 0, 0, 0, 0,
	901, 2145, 0, 865, 899, 932, 889, 890, 891, 887,
	888, 900, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 224, 225, 226, 227, 228, 0, 229, 0,
	0, 0, 0, 0, 985, 905, 0, 0, 0, 230,
	232, 231, 233, 234, 502, 947, 926, 958, 238, 916,
	957, 956, 0, 239, 240, 918, 917, 243, 244, 245,
	907, 984, 246, 1021, 1022, 508, 0, 247, 248, 991,
	0, 972, 0, 249, 250, 251, 252, 253, 254, 0,
	0, 256, 257, 258, 255, 0, 259, 0, 260, 261,
	262, 0, 263, 994, 264, 265, 975, 973, 974, 981,
	977, 976, 980, 266, 267, 268, 269, 961, 271, 954,
	953, 878, 272, 273, 0, 275, 274, 0, 276, 0,
	0, 277, 952, 279, 0, 280, 0, 281, 282, 0,
	283, 884, 284, 285, 287, 289, 286, 290, 291, 292,
	293, 1012, 1013, 896, 221, 0, 0, 0, 0, 0,
	294, 295, 296, 951, 949, 950, 0, 299, 0, 300,
	0, 0, 995, 301, 966, 967, 302, 303, 0, 304,
	1019, 0, 906, 305, 0, 306, 307, 308, 309, 986,
	987, 990, 369, 997, 310, 311, 0, 312, 313, 314,
	928, 0, 0, 222, 315, 317, 324, 0, 996, 318,
	940, 931, 942, 944, 945, 946, 941, 0, 933, 0,
	325, 998, 988, 999, 326, 327, 328, 1000, 968, 969,
	0, 0, 331, 332, 333, 334, 335, 0, 337, 336,
	0, 338, 1020, 1001, 339, 340, 1002, 0, 341, 342,
	343, 979, 978, 344, 345, 346, 347, 0, 348, 349,
	351, 353, 350, 352, 357, 354, 355, 356, 359, 920,
	358, 1003, 361, 362, 365, 366, 364, 1004, 363, 875,
	223, 1005, 367, 897, 989, 368, 955, 370, 371, 0,
	929, 373, 930, 0, 0, 376, 377, 378, 0, 0,
	379, 380, 530, 1006, 381, 1007, 1014, 382, 375, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 391, 532,
	533, 1015, 392, 535, 393, 394, 0, 395, 0, 396,
	397, 398, 399, 400, 401, 402, 948, 403, 404, 0,
	405, 406, 407, 408, 409, 410, 0, 412, 413, 414,
	411, 415, 416, 417, 418, 0, 419, 1008, 420, 421,
	422, 423, 885, 424, 0, 425, 429, 430, 431, 432,
	433, 434, 435, 187, 441, 442, 921, 922, 924, 925,
	437, 443, 444, 445, 982, 446, 426, 427, 447, 448,
	1009, 449, 450, 943, 923, 452, 0, 453, 454, 455,
	456, 428, 457, 461, 993, 458, 459, 460, 1016, 0,
	464, 465, 463, 189, 466, 467, 468, 469, 470, 288,
	919, 0, 472, 962, 963, 964, 965, 0, 479, 0,
	473, 474, 1017, 475, 1018, 895, 476, 477, 478, 0,
	480, 481, 0, 879, 482, 483, 484, 486, 487, 485,
	489, 983, 490, 0, 927, 491, 492, 493, 1370, 959,
	1011, 0, 495, 494, 549, 0, 0, 0, 181, 496,
	497, 550, 498, 499, 500, 876, 182, 0, 0, 0,
	0, 874, 0, 0, 0, 0, 0, 0, 872, 873,
	932, 889, 890, 891, 887, 888, 900, 1580, 1578, 0,
	0, 899, 0, 0, 0, 0, 0, 224, 225, 226,
	227, 228, 0, 229, 0, 0, 0, 0, 0, 985,
	905, 0, 0, 0, 230, 232, 231, 233, 234, 502,
	947, 926, 958, 238, 916, 957, 956, 0, 239, 240,
	918, 917, 243, 244, 245, 907, 984, 246, 1021, 1022,
	508, 0, 247, 248, 991, 0, 972, 0, 249, 250,
	251, 252, 253, 254, 0, 0, 256, 257, 258, 255,
	0, 259, 0, 260, 261, 262, 0, 263, 994, 264,
	265, 975, 973, 974, 981, 977, 976, 980, 266, 267,
	268, 269, 961, 271, 954, 953, 878, 272, 273, 0,
	275, 274, 0, 276, 0, 0, 277, 952, 279, 0,
	280, 0, 281, 282, 0, 283, 884, 284, 285, 287,
	289, 286, 290, 291, 292, 293, 1012, 1013, 896, 221,
	0, 0, 0, 0, 0, 294, 295, 296, 951, 949,
	950, 0, 299, 0, 300, 0, 0, 995, 301, 966,
	967, 302, 303, 0, 304, 1019, 0, 906, 305, 0,
	306, 307, 308, 309, 986, 987, 990, 369, 997, 310,
	311, 0, 312, 313, 314, 928, 0, 0, 222, 315,
	317, 324, 0, 996, 318, 940, 931, 942, 944, 945,
	946, 941, 0, 933, 0, 325, 998, 988, 999, 326,
	327, 328, 1000, 968, 969, 0, 0, 331, 332, 333,
	334, 335, 0, 337, 336, 0, 338, 1020, 1001, 339,
	340, 1002, 0, 341, 342, 343, 979, 978, 344, 345,
	346, 347, 0, 348, 349, 351, 353, 350, 352, 357,
	354, 355, 356, 359, 920, 358, 1003, 361, 362, 365,
	366, 364, 1004, 363, 875, 223, 1005, 367, 897, 989,
	368, 955, 370, 371, 0, 929, 373, 930, 0, 0,
	376, 377, 378, 0, 0, 379, 380, 530, 1006, 381,
	1007, 1014, 382, 375, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 391, 532, 533, 1015, 392, 535, 393,
	394, 0, 395, 0, 396, 397, 398, 399, 400, 401,
	402, 948, 403, 404, 0, 405, 406, 407, 408, 409,
	410, 0, 412, 413, 414, 411, 415, 416, 417, 418,
	0, 419, 1008, 420, 421, 422, 423, 885, 424, 0,
	425, 429, 430, 431, 432, 433, 434, 435, 187, 441,
	442, 921, 922, 924, 925, 437, 443, 444, 445, 982,
	446, 426, 427, 447, 448, 1009, 449, 450, 943, 923,
	452, 0, 453, 454, 455, 456, 428, 457, 461, 993,
	458, 459, 460, 1016, 0, 464, 465, 463, 189, 466,
	467, 468, 469, 470, 288, 919, 0, 472, 962, 963,
	964, 965, 0, 479, 0, 473, 474, 1017, 475, 1018,
	895, 476, 477, 478, 0, 480, 481, 0, 879, 482,
	483, 484, 486, 487, 485, 489, 983, 490, 0, 927,
	491, 492, 493, 1370, 959, 1011, 0, 495, 494, 549,
	0, 0, 0, 181, 496, 497, 550, 498, 499, 500,
	876, 182, 0, 0, 0, 0, 874, 0, 0, 0,
	0, 0, 0, 872, 873, 932, 889, 890, 891, 887,
	888, 900, 1580, 2635, 0, 0, 899, 0, 0, 0,
	0, 0, 224, 225, 226, 227, 228, 0, 229, 0,
	0, 0, 0, 0, 985, 905, 0, 0, 0, 230,
	232, 231, 233, 234, 502, 947, 926, 958, 238, 916,
	957, 956, 0, 239, 240, 918, 917, 243, 244, 245,
	907, 984, 246, 1021, 1022, 508, 0, 247, 248, 991,
	0, 972, 0, 249, 250, 251, 252, 253, 254, 0,
	0, 256, 257, 258, 255, 0, 259, 0, 260, 261,
	262, 0, 263, 994, 264, 265, 975, 973, 974, 981,
	977, 976, 980, 266, 267, 268, 269, 961, 271, 954,
	953, 878, 272, 273, 0, 275, 274, 0, 276, 0,
	0, 277, 952, 279, 0, 280, 0, 281, 282, 0,
	283, 884, 284, 285, 287, 289, 286, 290, 291, 292,
	293, 1012, 1013, 896, 221, 0, 0, 0, 0, 0,
	294, 295, 296, 951, 949, 950, 0, 299, 0, 300,
	0, 0, 995, 301, 966, 967, 302, 303, 0, 304,
	1019, 0, 906, 305, 0, 306, 307, 308, 309, 986,
	987, 990, 369, 997, 310, 311, 0, 312, 313, 314,
	928, 0, 0, 222, 315, 317, 324, 0, 996, 318,
	940, 931, 942, 944, 945, 946, 941, 0, 933, 0,
	325, 998, 988, 999, 326, 327, 328, 1000, 968, 969,
	0, 0, 331, 332, 333, 334, 335, 0, 337, 336,
	0, 338, 1020, 1001, 339, 340, 1002, 0, 341, 342,
	343, 979, 978, 344, 345, 346, 347, 0, 348, 349,
	351, 353, 350, 352, 357, 354, 355, 356, 359, 920,
	358, 1003, 361, 362, 365, 366, 364, 1004, 363, 875,
	223, 1005, 367, 897, 989, 368, 955, 370, 371, 0,
	929, 373, 930, 0, 0, 376, 377, 378, 0, 0,
	379, 380, 530, 1006, 381, 1007, 1014, 382, 375, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 391, 532,
	533, 1015, 392, 535, 393, 394, 0, 395, 0, 396,
	397, 398, 399, 400, 401, 402, 948, 403, 404, 0,
	405, 406, 407, 408, 409, 410, 0, 412, 413, 414,
	411, 415, 416, 417, 418, 0, 419, 1008, 420, 421,
	422, 423, 885, 424, 0, 425, 429, 430, 431, 432,
	433, 434, 435, 187, 441, 442, 921, 922, 924, 925,
	437, 443, 444, 445, 982, 446, 426, 427, 447, 448,
	1009, 449, 450, 943, 923, 452, 0, 453, 454, 455,
	456, 428, 457, 461, 993, 458, 459, 460, 1016, 0,
	464, 465, 463, 189, 466, 467, 468, 469, 470, 288,
	919, 0, 472, 962, 963, 964, 965, 0, 479, 0,
	473, 474, 1017, 475, 1018, 895, 476, 477, 478, 0,
	480, 481, 0, 879, 482, 483, 484, 486, 487, 485,
	489, 983, 490, 0, 927, 491, 492, 493, 1370, 959,
	1011, 0, 495, 494, 549, 0, 0, 0, 181, 496,
	497, 550, 498, 499, 500, 876, 182, 0, 0, 0,
	0, 874, 0, 0, 0, 0, 0, 0, 872, 873,
	932, 889, 890, 891, 887, 888, 900, 1580, 1578, 0,
	0, 899, 0, 0, 0, 0, 0, 224, 225, 226,
	227, 228, 0, 229, 0, 0, 0, 0, 0, 985,
	905, 0, 0, 0, 230, 232, 231, 233, 234, 502,
	947, 926, 958, 238, 916, 957, 956, 2254, 239, 240,
	918, 917, 243, 244, 245, 907, 984, 246, 1021, 1022,
	508, 0, 247, 248, 991, 0, 972, 0, 249, 250,
	251, 252, 253, 254, 0, 0, 256, 257, 258, 255,
	0, 259, 0, 260, 261, 262, 0, 263, 994, 264,
	265, 975, 973, 974, 981, 977, 976, 980, 266, 267,
	268, 269, 961, 271, 954, 953, 878, 272, 273, 0,
	275, 274, 0, 276, 0, 0, 277, 952, 279, 0,
	280, 0, 281, 282, 0, 283, 884, 284, 285, 287,
	289, 286, 290, 291, 292, 293, 1012, 1013, 896, 221,
	0, 0, 0, 0, 0, 294, 295, 296, 951, 949,
	950, 0, 299, 0, 300, 0, 2259, 995, 301, 966,
	967, 302, 303, 0, 304, 1019, 0, 906, 305, 0,
	306, 307, 308, 309, 986, 987, 990, 369, 997, 310,
	311, 0, 312, 313, 314, 928, 0, 0, 222, 315,
	317, 324, 0, 996, 318, 940, 931, 942, 944, 945,
	946, 941, 0, 933, 0, 325, 998, 988, 999, 326,
	327, 328, 1000, 968, 969, 0, 0, 331, 332, 333,
	334, 335, 0, 337, 336, 2255, 338, 1020, 1001, 339,
	340, 1002, 0, 341, 342, 343, 979, 978, 344, 345,
	346, 347, 0, 348, 349, 351, 353, 350, 352, 357,
	354, 355, 356, 359, 920, 358, 1003, 361, 362, 365,
	366, 364, 1004, 363, 875, 223, 1005, 367, 897, 989,
	368, 955, 370, 371, 0, 929, 373, 930, 0, 0,
	376, 377, 378, 0, 0, 379, 380, 530, 1006, 381,
	1007, 1014, 382, 375, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 391, 532, 533, 1015, 392, 535, 393,
	394, 0, 395, 0, 396, 397, 398, 399, 400, 401,
	402, 948, 403, 404, 0, 405, 406, 407, 408, 409,
	410, 0, 412, 413, 414, 411, 415, 416, 417, 418,
	0, 419, 1008, 420, 421, 422, 423, 885, 424, 0,
	425, 429, 430, 431, 432, 433, 434, 435, 0, 441,
	442, 921, 922, 924, 925, 437, 443, 444, 445, 982,
	446, 426, 427, 447, 448, 1009, 449, 450, 943, 923,
	452, 0, 453, 454, 455, 456, 428, 457, 461, 993,
	458, 459, 460, 1016, 0, 464, 465, 463, 0, 466,
	467, 468, 469, 470, 288, 919, 0, 472, 962, 963,
	964, 965, 0, 479, 2256, 473, 474, 1017, 475, 1018,
	895, 476, 477, 478, 0, 480, 481, 0, 879, 482,
	483, 484, 486, 487, 485, 489, 983, 490, 0, 927,
	491, 492, 493, 546, 959, 1011, 0, 495, 494, 549,
	0, 0, 0, 0, 496, 497, 550, 498, 499, 500,
	876, 0, 0, 0, 0, 0, 874, 0, 0, 0,
	0, 0, 0, 872, 873, 0, 0, 0, 0, 0,
	0, 0, 901, 0, 0, 2213, 899, 932, 889, 890,
	891, 887, 888, 900, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 224, 225, 226, 227, 228, 0,
	229, 0, 0, 0, 0, 0, 985, 905, 0, 0,
	0, 230, 232, 231, 233, 234, 502, 947, 926, 958,
	238, 916, 957, 956, 0, 239, 240, 918, 917, 243,
	244, 245, 907, 984, 246, 1021, 1022, 508, 0, 247,
	248, 991, 0, 972, 0, 249, 250, 251, 252, 253,
	254, 0, 0, 256, 257, 258, 255, 0, 259, 0,
	260, 261, 262, 0, 263, 994, 264, 265, 975, 973,
	974, 981, 977, 976, 980, 266, 267, 268, 269, 961,
	271, 954, 953, 878, 272, 273, 0, 275, 274, 0,
	276, 0, 0, 277, 952, 279, 0, 280, 0, 281,
	282, 0, 283, 884, 284, 285, 287, 289, 286, 290,
	291, 292, 293, 1012, 1013, 896, 221, 0, 0, 0,
	0, 0, 294, 295, 296, 951, 949, 950, 0, 299,
	0, 300, 0, 0, 995, 301, 966, 967, 302, 303,
	0, 304, 1019, 0, 906, 305, 0, 306, 307, 308,
	309, 986, 987, 990, 369, 997, 310, 311, 0, 312,
	313, 314, 928, 0, 0, 222, 315, 317, 324, 0,
	996, 318, 940, 931, 942, 944, 945, 946, 941, 0,
	933, 0, 325, 998, 988, 999, 326, 327, 328, 1000,
	968, 969, 0, 0, 331, 332, 333, 334, 335, 0,
	337, 336, 0, 338, 1020, 1001, 339, 340, 1002, 0,
	341, 342, 343, 979, 978, 344, 345, 346, 347, 0,
	348, 349, 351, 353, 350, 352, 357, 354, 355, 356,
	359, 920, 358, 1003, 361, 362, 365, 366, 364, 1004,
	363, 875, 223, 1005, 367, 897, 989, 368, 955, 370,
	371, 0, 929, 373, 930, 0, 0, 376, 377, 378,
	0, 0, 379, 380, 530, 1006, 381, 1007, 1014, 382,
	375, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	391, 532, 533, 1015, 392, 535, 393, 394, 0, 395,
	0, 396, 397, 398, 399, 400, 401, 402, 948, 403,
	404, 0, 405, 406, 407, 408, 409, 410, 0, 412,
	413, 414, 411, 415, 416, 417, 418, 0, 419, 1008,
	420, 421, 422, 423, 885, 424, 0, 425, 429, 430,
	431, 432, 433, 434, 435, 0, 441, 442, 921, 922,
	924, 925, 437, 443, 444, 445, 982, 446, 426, 427,
	447, 448, 1009, 449, 450, 943, 923, 452, 0, 453,
	454, 455, 456, 428, 457, 461, 993, 458, 459, 460,
	1016, 0, 464, 465, 463, 0, 466, 467, 468, 469,
	470, 288, 919, 0, 472, 962, 963, 964, 965, 0,
	479, 0, 473, 474, 1017, 475, 1018, 895, 476, 477,
	478, 0, 480, 481, 0, 879, 482, 483, 484, 486,
	487, 485, 489, 983, 490, 0, 927, 491, 492, 493,
	546, 959, 1011, 0, 495, 494, 549, 0, 0, 0,
	0, 496, 497, 550, 498, 499, 500, 876, 0, 0,
	0, 0, 0, 874, 0, 0, 0, 0, 0, 0,
	872, 873, 0, 0, 0, 0, 0, 0, 0, 901,
	2211, 0, 2210, 899, 932, 889, 890, 891, 887, 888,
	900, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 224, 225, 226, 227, 228, 0, 229, 0, 0,
	0, 0, 0, 985, 905, 0, 0, 0, 230, 232,
	231, 233, 234, 502, 947, 926, 958, 238, 916, 957,
	956, 0, 239, 240, 918, 917, 243, 244, 245, 907,
	984, 246, 1021, 1022, 508, 0, 247, 248, 991, 0,
	972, 0, 249, 250, 251, 252, 253, 254, 0, 0,
	256, 257, 258, 255, 0, 259, 0, 260, 261, 262,
	0, 263, 994, 264, 265, 975, 973, 974, 981, 977,
	976, 980, 266, 267, 268, 269, 961, 271, 954, 953,
	878, 272, 273, 0, 275, 274, 0, 276, 0, 0,
	277, 952, 279, 0, 280, 0, 281, 282, 0, 283,
	884, 284, 285, 287, 289, 286, 290, 291, 292, 293,
	1012, 1013, 896, 221, 0, 0, 0, 0, 0, 294,
	295, 296, 951, 949, 950, 0, 299, 0, 300, 0,
	0, 995, 301, 966, 967, 302, 303, 0, 304, 1019,
	0, 906, 305, 0, 306, 307, 308, 309, 986, 987,
	990, 369, 997, 310, 311, 0, 312, 313, 314, 928,
	0, 0, 222, 315, 317, 324, 0, 996, 318, 940,
	931, 942, 944, 945, 946, 941, 0, 933, 0, 325,
	998, 988, 999, 326, 327, 328, 1000, 968, 969, 0,
	0, 331, 332, 333, 334, 335, 0, 337, 336, 0,
	338, 1020, 1001, 339, 340, 1002, 0, 341, 342, 343,
	979, 978, 344, 345, 346, 347, 0, 348, 349, 351,
	353, 350, 352, 357, 354, 355, 356, 359, 920, 358,
	1003, 361, 362, 365, 366, 364, 1004, 363, 875, 223,
	1005, 367, 897, 989, 368, 955, 370, 371, 0, 929,
	373, 930, 0, 0, 376, 377, 378, 0, 0, 379,
	380, 530, 1006, 381, 1007, 1014, 382, 375, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 391, 532, 533,
	1015, 392, 535, 393, 394, 0, 395, 0, 396, 397,
	398, 399, 400, 401, 402, 948, 403, 404, 0, 405,
	406, 407, 408, 409, 410, 0, 412, 413, 414, 411,
	415, 416, 417, 418, 0, 419, 1008, 420, 421, 422,
	423, 885, 424, 0, 425, 429, 430, 431, 432, 433,
	434, 435, 0, 441, 442, 921, 922, 924, 925, 437,
	443, 444, 445, 982, 446, 426, 427, 447, 448, 1009,
	449, 450, 943, 923, 452, 0, 453, 454, 455, 456,
	428, 457, 461, 993, 458, 459, 460, 1016, 0, 464,
	465, 463, 0, 466, 467, 468, 469, 470, 288, 919,
	0, 472, 962, 963, 964, 965, 0, 479, 0, 473,
	474, 1017, 475, 1018, 895, 476, 477, 478, 0, 480,
	481, 0, 879, 482, 483, 484, 486, 487, 485, 489,
	983, 490, 0, 927, 491, 492, 493, 546, 959, 1011,
	0, 495, 494, 549, 0, 0, 0, 0, 496, 497,
	550, 498, 499, 500, 876, 0, 0, 0, 0, 0,
	874, 0, 0, 0, 0, 0, 0, 872, 873, 0,
	0, 0, 0, 0, 0, 0, 901, 2208, 0, 2207,
	899, 932, 889, 890, 891, 887, 888, 900, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 224, 225,
	226, 227, 228, 0, 229, 0, 0, 0, 0, 0,
	985, 905, 0, 0, 0, 230, 232, 231, 233, 234,
	502, 947, 926, 958, 238, 916, 957, 956, 0, 239,
	240, 918, 917, 243, 244, 245, 907, 984, 246, 1021,
	1022, 508, 0, 247, 248, 991, 0, 972, 0, 249,
	250, 251, 252, 253, 254, 0, 0, 256, 257, 258,
	255, 0, 259, 0, 260, 261, 262, 0, 263, 994,
	264, 265, 975, 973, 974, 981, 977, 976, 980, 266,
	267, 268, 269, 961, 271, 954, 953, 878, 272, 273,
	0, 275, 274, 0, 276, 0, 0, 277, 952, 279,
	0, 280, 0, 281, 282, 0, 283, 884, 284, 285,
	287, 289, 286, 290, 291, 292, 293, 1012, 1013, 896,
	221, 0, 0, 0, 0, 0, 294, 295, 296, 951,
	949, 950, 0, 299, 0, 300, 0, 0, 995, 301,
	966, 967, 302, 303, 0, 304, 1019, 0, 906, 305,
	0, 306, 307, 308, 309, 986, 987, 990, 369, 997,
	310, 311, 0, 312, 313, 314, 928, 0, 0, 222,
	315, 317, 324, 0, 996, 318, 940, 931, 942, 944,
	945, 946, 941, 0, 933, 0, 325, 998, 988, 999,
	326, 327, 328, 1000, 968, 969, 0, 0, 331, 332,
	333, 334, 335, 0, 337, 336, 0, 338, 1020, 1001,
	339, 340, 1002, 0, 341, 342, 343, 979, 978, 344,
	345, 346, 347, 0, 348, 349, 351, 353, 350, 352,
	357, 354, 355, 356, 359, 920, 358, 1003, 361, 362,
	365, 366, 364, 1004, 363, 875, 223, 1005, 367, 897,
	989, 368, 955, 370, 371, 0, 929, 373, 930, 0,
	0, 376, 377, 378, 0, 0, 379, 380, 530, 1006,
	381, 1007, 1014, 382, 375, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 391, 532, 533, 1015, 392, 535,
	393, 394, 0, 395, 0, 396, 397, 398, 399, 400,
	401, 402, 948, 403, 404, 0, 405, 406, 407, 408,
	409, 410, 0, 412, 413, 414, 411, 415, 416, 417,
	418, 0, 419, 1008, 420, 421, 422, 423, 885, 424,
	0, 425, 429, 430, 431, 432, 433, 434, 435, 0,
	441, 442, 921, 922, 924, 925, 437, 443, 444, 445,
	982, 446, 426, 427, 447, 448, 1009, 449, 450, 943,
	923, 452, 0, 453, 454, 455, 456, 428, 457, 461,
	993, 458, 459, 460, 1016, 0, 464, 465, 463, 0,
	466, 467, 468, 469, 470, 288, 919, 0, 472, 962,
	963, 964, 965, 0, 479, 0, 473, 474, 1017, 475,
	1018, 895, 476, 477, 478, 0, 480, 481, 0, 879,
	482, 483, 484, 486, 487, 485, 489, 983, 490, 0,
	927, 491, 492, 493, 546, 959, 1011, 0, 495, 494,
	549, 0, 0, 0, 0, 496, 497, 550, 498, 499,
	500, 876, 0, 0, 0, 0, 0, 874, 0, 0,
	0, 0, 0, 0, 872, 873, 0, 0, 0, 0,
	0, 0, 0, 901, 2205, 0, 2204, 899, 932, 889,
	890, 891, 887, 888, 900, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 224, 225, 226, 227, 228,
	0, 229, 0, 0, 0, 0, 0, 985, 905, 0,
	0, 0, 230, 232, 231, 233, 234, 502, 947, 926,
	958, 238, 916, 957, 956, 0, 239, 240, 918, 917,
	243, 244, 245, 907, 984, 246, 1021, 1022, 508, 0,
	247, 248, 991, 0, 972, 0, 249, 250, 251, 252,
	253, 254, 0, 0, 256, 257, 258, 255, 0, 259,
	0, 260, 261, 262, 0, 263, 994, 264, 265, 975,
	973, 974, 981, 977, 976, 980, 266, 267, 268, 269,
	961, 271, 954, 953, 878, 272, 273, 0, 275, 274,
	0, 276, 0, 0, 277, 952, 279, 0, 280, 0,
	281, 282, 0, 283, 884, 284, 285, 287, 289, 286,
	290, 291, 292, 293, 1012, 1013, 896, 221, 0, 0,
	0, 0, 0, 294, 295, 296, 951, 949, 950, 0,
	299, 0, 300, 0, 0, 995, 301, 966, 967, 302,
	303, 0, 304, 1019, 0, 906, 305, 0, 306, 307,
	308, 309, 986, 987, 990, 369, 997, 310, 311, 0,
	312, 313, 314, 928, 0, 0, 222, 315, 317, 324,
	0, 996, 318, 940, 931, 942, 944, 945, 946, 941,
	0, 933, 0, 325, 998, 988, 999, 326, 327, 328,
	1000, 968, 969, 0, 0, 331, 332, 333, 334, 335,
	0, 337, 336, 0, 338, 1020, 1001, 339, 340, 1002,
	0, 341, 342, 343, 979, 978, 344, 345, 346, 347,
	0, 348, 349, 351, 353, 350, 352, 357, 354, 355,
	356, 359, 920, 358, 1003, 361, 362, 365, 366, 364,
	1004, 363, 875, 223, 1005, 367, 897, 989, 368, 955,
	370, 371, 0, 929, 373, 930, 0, 0, 376, 377,
	378, 0, 0, 379, 380, 530, 1006, 381, 1007, 1014,
	382, 375, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 391, 532, 533, 1015, 392, 535, 393, 394, 0,
	395, 0, 396, 397, 398, 399, 400, 401, 402, 948,
	403, 404, 0, 405, 406, 407, 408, 409, 410, 0,
	412, 413, 414, 411, 415, 416, 417, 418, 0, 419,
	1008, 420, 421, 422, 423, 885, 424, 0, 425, 429,
	430, 431, 432, 433, 434, 435, 0, 441, 442, 921,
	922, 924, 925, 437, 443, 444, 445, 982, 446, 426,
	427, 447, 448, 1009, 449, 450, 943, 923, 452, 0,
	453, 454, 455, 456, 428, 457, 461, 993, 458, 459,
	460, 1016, 0, 464, 465, 463, 0, 466, 467, 468,
	469, 470, 288, 919, 0, 472, 962, 963, 964, 965,
	0, 479, 0, 473, 474, 1017, 475, 1018, 895, 476,
	477, 478, 0, 480, 481, 0, 879, 482, 483, 484,
	486, 487, 485, 489, 983, 490, 0, 927, 491, 492,
	493, 546, 959, 1011, 0, 495, 494, 549, 0, 0,
	0, 0, 496, 497, 550, 498, 499, 500, 876, 0,
	0, 0, 0, 0, 874, 0, 0, 0, 0, 0,
	0, 872, 873, 0, 0, 0, 0, 0, 0, 0,
	901, 2202, 0, 1439, 899, 932, 889, 890, 891, 887,
	888, 900, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 224, 225, 226, 227, 228, 0, 229, 0,
	0, 0, 0, 0, 985, 905, 0, 0, 0, 230,
	232, 231, 233, 234, 502, 947, 926, 958, 238, 916,
	957, 956, 0, 239, 240, 918, 917, 243, 244, 245,
	907, 984, 246, 1021, 1022, 508, 0, 247, 248, 991,
	0, 972, 0, 249, 250, 251, 252, 253, 254, 0,
	0, 256, 257, 258, 255, 0, 259, 0, 260, 261,
	262, 0, 263, 994, 264, 265, 975, 973, 974, 981,
	977, 976, 980, 266, 267, 268, 269, 961, 271, 954,
	953, 878, 272, 273, 0, 275, 274, 0, 276, 0,
	0, 277, 952, 279, 0, 280, 0, 281, 282, 0,
	283, 884, 284, 285, 287, 289, 286, 290, 291, 292,
	293, 1012, 1013, 896, 221, 0, 0, 0, 0, 0,
	294, 295, 296, 951, 949, 950, 0, 299, 0, 300,
	0, 0, 995, 301, 966, 967, 302, 303, 0, 304,
	1019, 0, 906, 305, 0, 306, 307, 308, 309, 986,
	987, 990, 369, 997, 310, 311, 0, 312, 313, 314,
	928, 0, 0, 222, 315, 317, 324, 0, 996, 318,
	940, 931, 942, 944, 945, 946, 941, 0, 933, 0,
	325, 998, 988, 999, 326, 327, 328, 1000, 968, 969,
	0, 0, 331, 332, 333, 334, 335, 0, 337, 336,
	0, 338, 1020, 1001, 339, 340, 1002, 0, 341, 342,
	343, 979, 978, 344, 345, 346, 347, 0, 348, 349,
	351, 353, 350, 352, 357, 354, 355, 356, 359, 920,
	358, 1003, 361, 362, 365, 366, 364, 1004, 363, 875,
	223, 1005, 367, 897, 989, 368, 955, 370, 371, 0,
	929, 373, 930, 0, 0, 376, 377, 378, 0, 0,
	379, 380, 530, 1006, 381, 1007, 1014, 382, 375, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 391, 532,
	533, 1015, 392, 535, 393, 394, 0, 395, 0, 396,
	397, 398, 399, 400, 401, 402, 948, 403, 404, 0,
	405, 406, 407, 408, 409, 410, 0, 412, 413, 414,
	411, 415, 416, 417, 418, 0, 419, 1008, 420, 421,
	422, 423, 885, 424, 0, 425, 429, 430, 431, 432,
	433, 434, 435, 0, 441, 442, 921, 922, 924, 925,
	437, 443, 444, 445, 982, 446, 426, 427, 447, 448,
	1009, 449, 450, 943, 923, 452, 0, 453, 454, 455,
	456, 428, 457, 461, 993, 458, 459, 460, 1016, 0,
	464, 465, 463, 0, 466, 467, 468, 469, 470, 288,
	919, 0, 472, 962, 963, 964, 965, 0, 479, 0,
	473, 474, 1017, 475, 1018, 895, 476, 477, 478, 0,
	480, 481, 0, 879, 482, 483, 484, 486, 487, 485,
	489, 983, 490, 0, 927, 491, 492, 493, 546, 959,
	1011, 0, 495, 494, 549, 1438, 0, 0, 0, 496,
	497, 550, 498, 499, 500, 876, 0, 0, 0, 0,
	0, 874, 0, 0, 0, 0, 0, 0, 872, 873,
	0, 0, 0, 0, 0, 0, 0, 901, 0, 0,
	868, 899, 932, 889, 890, 891, 887, 888, 900, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 224,
	225, 226, 227, 228, 0, 229, 0, 0, 0, 0,
	0, 985, 905, 0, 0, 0, 230, 232, 231, 233,
	234, 502, 947, 926, 958, 238, 916, 957, 956, 0,
	239, 240, 918, 917, 243, 244, 245, 907, 984, 246,
	1021, 1022, 508, 0, 247, 248, 991, 0, 972, 0,
	249, 250, 251, 252, 253, 254, 0, 0, 256, 257,
	258, 255, 0, 259, 0, 260, 261, 262, 0, 263,
	994, 264, 265, 975, 973, 974, 981, 977, 976, 980,
	266, 267, 268, 269, 961, 271, 954, 953, 878, 272,
	273, 0, 275, 274, 0, 276, 0, 0, 277, 952,
	279, 0, 280, 0, 281, 282, 0, 283, 884, 284,
	285, 287, 289, 286, 290, 291, 292, 293, 1012, 1013,
	896, 221, 0, 0, 0, 0, 0, 294, 295, 296,
	951, 949, 950, 0, 299, 0, 300, 0, 0, 995,
	301, 966, 967, 302, 303, 0, 304, 1019, 0, 906,
	305, 0, 306, 307, 308, 309, 986, 987, 990, 369,
	997, 310, 311, 0, 312, 313, 314, 928, 0, 0,
	222, 315, 317, 324, 0, 996, 318, 940, 931, 942,
	944, 945, 946, 941, 0, 933, 0, 325, 998, 988,
	999, 326, 327, 328, 1000, 968, 969, 0, 0, 331,
	332, 333, 334, 335, 0, 337, 336, 0, 338, 1020,
	1001, 339, 340, 1002, 0, 341, 342, 343, 979, 978,
	344, 345, 346, 347, 0, 348, 349, 351, 353, 350,
	352, 357, 354, 355, 356, 359, 920, 358, 1003, 361,
	362, 365, 366, 364, 1004, 363, 875, 223, 1005, 367,
	897, 989, 368, 955, 370, 371, 0, 929, 373, 930,
	880, 0, 376, 377, 378, 0, 0, 379, 380, 530,
	1006, 381, 1007, 1014, 382, 375, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 391, 532, 533, 1015, 392,
	535, 393, 394, 0, 395, 0, 396, 397, 398, 399,
	400, 401, 402, 948, 403, 404, 0, 405, 406, 407,
	408, 409, 410, 0, 412, 413, 414, 411, 415, 416,
	417, 418, 0, 419, 1008, 420, 421, 422, 423, 885,
	424, 0, 425, 429, 430, 431, 432, 433, 434, 435,
	0, 441, 442, 921, 922, 924, 925, 437, 443, 444,
	445, 982, 446, 426, 427, 447, 448, 1009, 449, 450,
	943, 923, 452, 0, 453, 454, 455, 456, 428, 457,
	461, 993, 458, 459, 460, 1016, 0, 464, 465, 463,
	0, 466, 467, 468, 469, 470, 288, 919, 0, 472,
	962, 963, 964, 965, 0, 479, 0, 473, 474, 1017,
	475, 1018, 895, 476, 477, 478, 0, 480, 481, 0,
	879, 482, 483, 484, 486, 487, 485, 489, 983, 490,
	0, 927, 491, 492, 493, 546, 959, 1011, 0, 495,
	494, 549, 0, 0, 0, 0, 496, 497, 550, 498,
	499, 500, 876, 0, 0, 0, 0, 0, 874, 0,
	0, 0, 0, 0, 0, 872, 873, 932, 889, 890,
	891, 887, 888, 900, 901, 0, 0, 0, 899, 0,
	0, 0, 0, 0, 224, 225, 226, 227, 228, 0,
	229, 0, 0, 0, 0, 0, 985, 905, 0, 0,
	0, 230, 232, 231, 233, 234, 502, 947, 926, 958,
	238, 916, 957, 956, 0, 239, 240, 918, 917, 243,
	244, 245, 907, 984, 246, 1021, 1022, 508, 0, 247,
	248, 991, 0, 972, 0, 249, 250, 251, 252, 253,
	254, 0, 0, 256, 257, 258, 255, 0, 259, 0,
	260, 3676, 262, 0, 263, 994, 264, 265, 975, 973,
	974, 981, 977, 976, 980, 266, 267, 268, 269, 961,
	271, 954, 953, 878, 272, 273, 0, 275, 274, 0,
	276, 0, 0, 277, 952, 279, 0, 280, 0, 281,
	282, 0, 283, 884, 284, 285, 287, 289, 286, 290,
	291, 292, 293, 1012, 1013, 896, 221, 0, 0, 0,
	0, 0, 294, 295, 296, 951, 949, 950, 0, 299,
	0, 300, 0, 0, 995, 301, 966, 967, 302, 303,
	0, 304, 1019, 0, 906, 305, 0, 306, 307, 308,
	309, 986, 987, 990, 369, 997, 310, 311, 0, 312,
	313, 314, 928, 0, 0, 222, 315, 317, 324, 0,
	996, 318, 940, 931, 942, 944, 945, 946, 941, 0,
	933, 0, 325, 998, 988, 999, 326, 327, 328, 1000,
	968, 969, 0, 0, 331, 332, 333, 334, 335, 0,
	337, 336, 0, 338, 1020, 1001, 339, 340, 1002, 0,
	341, 342, 343, 979, 978, 344, 345, 346, 347, 0,
	348, 349, 351, 353, 350, 352, 357, 354, 355, 356,
	359, 920, 358, 1003, 361, 362, 365, 366, 364, 1004,
	363, 875, 223, 1005, 367, 897, 989, 368, 955, 370,
	371, 0, 929, 373, 930, 880, 0, 376, 377, 378,
	0, 0, 379, 380, 530, 1006, 381, 1007, 1014, 382,
	375, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	391, 532, 533, 1015, 392, 535, 393, 394, 0, 395,
	0, 396, 397, 398, 399, 400, 401, 402, 948, 403,
	404, 0, 405, 406, 407, 408, 409, 410, 0, 412,
	413, 414, 411, 415, 416, 417, 418, 0, 419, 1008,
	420, 421, 422, 423, 885, 424, 0, 425, 429, 430,
	431, 432, 433, 434, 435, 0, 441, 442, 921, 922,
	924, 925, 437, 443, 444, 445, 982, 446, 426, 427,
	447, 448, 1009, 449, 450, 943, 923, 452, 0, 453,
	454, 455, 456, 428, 457, 461, 993, 458, 459, 460,
	1016, 0, 464, 465, 463, 0, 466, 467, 468, 469,
	470, 288, 919, 0, 472, 962, 963, 964, 965, 0,
	479, 0, 473, 474, 1017, 475, 1018, 895, 476, 477,
	478, 0, 480, 481, 0, 879, 482, 483, 484, 486,
	487, 485, 489, 983, 490, 0, 927, 491, 492, 493,
	546, 959, 1011, 0, 495, 494, 549, 0, 0, 0,
	0, 496, 497, 550, 498, 499, 500, 876, 0, 0,
	0, 0, 0, 874, 0, 0, 0, 0, 0, 0,
	872, 873, 932, 889, 890, 891, 887, 888, 900, 901,
	0, 0, 0, 899, 0, 0, 0, 0, 0, 224,
	225, 226, 227, 228, 0, 229, 0, 0, 0, 0,
	0, 985, 905, 0, 0, 0, 230, 232, 231, 233,
	234, 502, 947, 926, 958, 238, 916, 957, 956, 0,
	239, 240, 918, 917, 243, 244, 245, 907, 984, 246,
	1021, 1022, 508, 0, 247, 248, 991, 0, 972, 0,
	249, 250, 251, 252, 253, 254, 0, 0, 256, 257,
	258, 255, 0, 259, 0, 260, 3509, 262, 0, 263,
	994, 264, 265, 975, 973, 974, 981, 977, 976, 980,
	266, 267, 268, 269, 961, 271, 954, 953, 878, 272,
	273, 0, 275, 274, 0, 276, 0, 0, 277, 952,
	279, 0, 280, 0, 281, 282, 0, 283, 884, 284,
	285, 287, 289, 286, 290, 291, 292, 293, 1012, 1013,
	896, 221, 0, 0, 0, 0, 0, 294, 295, 296,
	951, 949, 950, 0, 299, 0, 300, 0, 0, 995,
	301, 966, 967, 302, 303, 0, 304, 1019, 0, 906,
	305, 0, 306, 307, 308, 309, 986, 987, 990, 369,
	997, 310, 311, 0, 312, 313, 314, 928, 0, 0,
	222, 315, 317, 324, 0, 996, 318, 940, 931, 942,
	944, 945, 946, 941, 0, 933, 0, 325, 998, 988,
	999, 326, 327, 328, 1000, 968, 969, 0, 0, 331,
	332, 333, 334, 335, 0, 337, 336, 0, 338, 1020,
	1001, 339, 340, 1002, 0, 341, 342, 343, 979, 978,
	344, 345, 346, 347, 0, 348, 349, 351, 353, 350,
	352, 357, 354, 355, 356, 359, 920, 358, 1003, 361,
	362, 365, 366, 364, 1004, 363, 875, 223, 1005, 367,
	897, 989, 368, 955, 370, 371, 0, 929, 373, 930,
	880, 0, 376, 377, 378, 0, 0, 379, 380, 530,
	1006, 381, 1007, 1014, 382, 375, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 391, 532, 533, 1015, 392,
	535, 393, 394, 0, 395, 0, 396, 397, 398, 399,
	400, 401, 402, 948, 403, 404, 0, 405, 406, 407,
	408, 409, 410, 0, 412, 413, 414, 411, 415, 416,
	417, 418, 0, 419, 1008, 420, 421, 422, 423, 885,
	424, 0, 425, 429, 430, 431, 432, 433, 434, 435,
	0, 441, 442, 921, 922, 924, 925, 437, 443, 444,
	445, 982, 446, 426, 427, 447, 448, 1009, 449, 450,
	943, 923, 452, 0, 453, 454, 455, 456, 428, 457,
	461, 993, 458, 459, 460, 1016, 0, 464, 465, 463,
	0, 466, 467, 468, 469, 470, 288, 919, 0, 472,
	962, 963, 964, 965, 0, 479, 0, 473, 474, 1017,
	475, 1018, 895, 476, 477, 478, 0, 480, 481, 0,
	879, 482, 483, 484, 486, 487, 485, 489, 983, 490,
	0, 927, 491, 492, 493, 546, 959, 1011, 0, 495,
	494, 549, 0, 0, 0, 0, 496, 497, 550, 498,
	499, 500, 876, 0, 0, 0, 0, 0, 874, 0,
	0, 0, 0, 0, 0, 872, 873, 932, 889, 890,
	891, 887, 888, 900, 901, 0, 0, 0, 899, 0,
	0, 0, 0, 0, 224, 225, 226, 227, 228, 0,
	229, 0, 0, 0, 0, 0, 985, 905, 0, 0,
	0, 230, 232, 231, 233, 234, 502, 947, 926, 958,
	238, 916, 957, 956, 0, 239, 240, 918, 917, 243,
	244, 245, 907, 984, 246, 1021, 1022, 508, 0, 247,
	248, 991, 0, 972, 0, 249, 250, 251, 252, 253,
	254, 0, 0, 256, 257, 258, 255, 0, 259, 0,
	260, 261, 262, 0, 263, 994, 264, 265, 975, 973,
	974, 981, 977, 976, 980, 266, 267, 268, 269, 961,
	271, 954, 953, 878, 272, 273, 0, 275, 274, 0,
	276, 0, 0, 277, 952, 279, 0, 280, 0, 281,
	282, 0, 283, 884, 284, 285, 287, 289, 286, 290,
	291, 292, 293, 1012, 1013, 896, 221, 0, 0, 0,
	0, 0, 294, 295, 296, 951, 949, 950, 0, 299,
	0, 300, 0, 0, 995, 301, 966, 967, 302, 303,
	0, 304, 1019, 0, 906, 305, 0, 306, 307, 308,
	309, 986, 987, 990, 369, 997, 310, 311, 0, 312,
	313, 314, 928, 0, 0, 222, 315, 317, 324, 0,
	996, 318, 940, 931, 942, 944, 945, 946, 941, 0,
	933, 0, 325, 998, 988, 999, 326, 327, 328, 1000,
	968, 969, 0, 0, 331, 332, 333, 334, 335, 0,
	337, 336, 0, 338, 1020, 1001, 339, 340, 1002, 0,
	341, 342, 343, 979, 978, 344, 345, 346, 347, 0,
	348, 349, 351, 353, 350, 352, 357, 354, 355, 356,
	359, 920, 358, 1003, 361, 362, 365, 366, 364, 1004,
	363, 875, 3223, 1005, 367, 897, 989, 368, 955, 370,
	371, 0, 929, 373, 930, 0, 0, 376, 377, 378,
	0, 0, 379, 380, 530, 1006, 381, 1007, 1014, 382,
	375, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	391, 532, 533, 1015, 392, 535, 393, 394, 0, 395,
	0, 396, 397, 398, 399, 400, 401, 402, 948, 403,
	404, 0, 405, 406, 407, 408, 409, 410, 0, 412,
	413, 414, 411, 415, 416, 417, 418, 0, 419, 1008,
	420, 421, 422, 423, 885, 424, 0, 425, 429, 430,
	431, 432, 433, 434, 435, 0, 441, 442, 921, 922,
	924, 925, 437, 443, 444, 445, 982, 446, 426, 427,
	447, 448, 1009, 449, 450, 943, 923, 452, 0, 453,
	454, 455, 456, 428, 457, 461, 993, 458, 459, 460,
	1016, 0, 464, 465, 463, 0, 466, 467, 468, 469,
	470, 288, 919, 0, 472, 962, 963, 964, 965, 0,
	479, 0, 473, 474, 1017, 475, 1018, 895, 476, 477,
	478, 0, 480, 481, 0, 879, 482, 483, 484, 486,
	487, 485, 489, 983, 490, 0, 927, 491, 492, 493,
	546, 959, 1011, 0, 495, 494, 549, 0, 0, 0,
	0, 496, 497, 550, 498, 499, 500, 876, 0, 0,
	0, 0, 0, 874, 0, 0, 0, 0, 0, 0,
	872, 873, 1646, 0, 0, 0, 0, 0, 0, 901,
	0, 0, 0, 899, 932, 889, 890, 891, 887, 888,
	900, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 224, 225, 226, 227, 228, 0, 229, 0, 0,
	0, 0, 0, 985, 905, 0, 0, 0, 230, 232,
	231, 233, 234, 502, 947, 926, 958, 238, 916, 957,
	956, 0, 239, 240, 918, 917, 243, 244, 245, 907,
	984, 246, 1021, 1022, 508, 0, 247, 248, 991, 0,
	972, 0, 249, 250, 251, 252, 253, 254, 0, 0,
	256, 257, 258, 255, 0, 259, 0, 260, 261, 262,
	0, 263, 994, 264, 265, 975, 973, 974, 981, 977,
	976, 980, 266, 267, 268, 269, 961, 271, 954, 953,
	878, 272, 273, 0, 275, 274, 0, 276, 0, 0,
	277, 952, 279, 0, 280, 0, 281, 282, 0, 283,
	884, 284, 285, 287, 289, 286, 290, 291, 292, 293,
	1012, 1013, 896, 221, 0, 0, 0, 0, 0, 294,
	295, 296, 951, 949, 950, 0, 299, 0, 300, 0,
	0, 995, 301, 966, 967, 302, 303, 0, 304, 1019,
	0, 906, 305, 0, 306, 307, 308, 309, 986, 987,
	990, 369, 997, 310, 311, 0, 312, 313, 314, 928,
	0, 0, 222, 315, 317, 324, 0, 996, 318, 940,
	931, 942, 944, 945, 946, 941, 0, 933, 0, 325,
	998, 988, 999, 326, 327, 328, 1000, 968, 969, 0,
	0, 331, 332, 333, 334, 335, 0, 337, 336, 0,
	338, 1020, 1001, 339, 340, 1002, 0, 341, 342, 343,
	979, 978, 344, 345, 346, 347, 0, 348, 349, 351,
	353, 350, 352, 357, 354, 355, 356, 359, 920, 358,
	1003, 361, 362, 365, 366, 364, 1004, 363, 875, 223,
	1005, 367, 897, 989, 368, 955, 370, 371, 0, 929,
	373, 930, 0, 0, 376, 377, 378, 0, 0, 379,
	380, 530, 1006, 381, 1007, 1014, 382, 375, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 391, 532, 533,
	1015, 392, 535, 393, 394, 0, 395, 0, 396, 397,
	398, 399, 400, 401, 402, 948, 403, 404, 0, 405,
	406, 407, 408, 409, 410, 0, 412, 413, 414, 411,
	415, 416, 417, 418, 0, 419, 1008, 420, 421, 422,
	423, 885, 424, 0, 425, 429, 430, 431, 432, 433,
	434, 435, 0, 441, 442, 921, 922, 924, 925, 437,
	443, 444, 445, 982, 446, 426, 427, 447, 448, 1009,
	449, 450, 943, 923, 452, 0, 453, 454, 455, 456,
	428, 457, 461, 993, 458, 459, 460, 1016, 0, 464,
	465, 463, 0, 466, 467, 468, 469, 470, 288, 919,
	0, 472, 962, 963, 964, 965, 0, 479, 0, 473,
	474, 1017, 475, 1018, 895, 476, 477, 478, 0, 480,
	481, 0, 879, 482, 483, 484, 486, 487, 485, 489,
	983, 490, 0, 927, 491, 492, 493, 546, 959, 1011,
	3021, 495, 494, 549, 0, 0, 0, 0, 496, 497,
	550, 498, 499, 500, 876, 0, 0, 0, 0, 0,
	874, 0, 0, 0, 0, 0, 0, 872, 873, 932,
	889, 890, 891, 887, 888, 900, 901, 0, 0, 0,
	899, 0, 0, 0, 0, 0, 224, 225, 226, 227,
	228, 0, 229, 0, 0, 0, 0, 0, 985, 905,
	0, 0, 0, 230, 232, 231, 233, 234, 502, 947,
	926, 958, 238, 916, 957, 956, 0, 239, 240, 918,
	917, 243, 244, 245, 907, 984, 246, 1021, 1022, 508,
	0, 247, 248, 991, 0, 972, 0, 249, 250, 251,
	252, 253, 254, 0, 0, 256, 257, 258, 255, 0,
	259, 0, 260, 261, 262, 0, 263, 994, 264, 265,
	975, 973, 974, 981, 977, 976, 980, 266, 267, 268,
	269, 961, 271, 954, 953, 878, 272, 273, 0, 275,
	274, 0, 276, 0, 0, 277, 952, 279, 0, 280,
	0, 281, 282, 0, 283, 884, 284, 285, 287, 289,
	286, 290, 291, 292, 293, 1012, 1013, 896, 221, 0,
	0, 0, 0, 0, 294, 295, 296, 951, 949, 950,
	0, 299, 0, 300, 0, 0, 995, 301, 966, 967,
	302, 303, 0, 304, 1019, 0, 906, 305, 0, 306,
	307, 308, 309, 986, 987, 990, 369, 997, 310, 311,
	0, 312, 313, 314, 928, 0, 0, 2064, 315, 317,
	324, 0, 996, 318, 940, 931, 942, 944, 945, 946,
	941, 0, 933, 0, 325, 998, 988, 999, 326, 327,
	328, 1000, 968, 969, 0, 0, 331, 332, 333, 334,
	335, 0, 337, 336, 0, 338, 1020, 1001, 339, 340,
	1002, 0, 341, 342, 343, 979, 978, 344, 345, 346,
	347, 0, 348, 349, 351, 353, 350, 352, 357, 354,
	355, 356, 359, 920, 358, 1003, 361, 362, 365, 366,
	364, 1004, 363, 875, 223, 1005, 367, 897, 989, 368,
	955, 370, 371, 0, 929, 373, 930, 0, 0, 376,
	377, 378, 0, 0, 379, 380, 530, 1006, 381, 1007,
	1014, 382, 375, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 391, 532, 533, 1015, 392, 535, 393, 394,
	2063, 395, 0, 396, 397, 398, 399, 400, 401, 402,
	948, 403, 404, 0, 405, 406, 407, 408, 409, 410,
	0, 412, 413, 414, 411, 415, 416, 417, 418, 0,
	419, 1008, 420, 421, 422, 423, 885, 424, 0, 425,
	429, 430, 431, 432, 433, 434, 435, 0, 441, 442,
	921, 922, 924, 925, 437, 443, 444, 445, 982, 446,
	426, 427, 447, 448, 1009, 449, 450, 943, 923, 452,
	0, 453, 454, 455, 456, 428, 457, 461, 993, 458,
	459, 460, 1016, 0, 464, 465, 463, 0, 466, 467,
	468, 469, 470, 288, 919, 0, 472, 962, 963, 964,
	965, 0, 479, 0, 473, 474, 1017, 475, 1018, 895,
	476, 477, 478, 0, 480, 481, 0, 879, 482, 483,
	484, 486, 487, 485, 489, 983, 490, 0, 927, 491,
	492, 493, 546, 959, 1011, 0, 495, 494, 549, 0,
	0, 0, 0, 496, 497, 550, 498, 499, 500, 876,
	0, 0, 0, 0, 0, 874, 0, 0, 0, 0,
	0, 0, 872, 873, 932, 889, 890, 891, 887, 888,
	900, 901, 0, 0, 0, 899, 0, 0, 0, 0,
	0, 224, 225, 226, 227, 228, 0, 229, 0, 0,
	0, 0, 0, 985, 905, 0, 0, 0, 230, 232,
	231, 233, 234, 502, 947, 926, 958, 238, 916, 957,
	956, 0, 239, 240, 918, 917, 243, 244, 245, 907,
	984, 246, 1021, 1022, 508, 0, 247, 248, 991, 0,
	972, 0, 249, 250, 251, 252, 253, 254, 0, 0,
	256, 257, 258, 255, 0, 259, 0, 260, 261, 262,
	0, 263, 994, 264, 265, 975, 973, 974, 981, 977,
	976, 980, 266, 267, 268, 269, 961, 271, 954, 953,
	878, 272, 273, 0, 275, 274, 0, 276, 0, 0,
	277, 952, 279, 0, 280, 0, 281, 282, 0, 283,
	884, 284, 285, 287, 289, 286, 290, 291, 292, 293,
	1012, 1013, 896, 221, 0, 0, 0, 0, 0, 294,
	295, 296, 951, 949, 950, 0, 299, 0, 300, 0,
	0, 995, 301, 966, 967, 302, 303, 0, 304, 1019,
	0, 906, 305, 0, 306, 307, 308, 309, 986, 987,
	990, 369, 997, 310, 311, 0, 312, 313, 314, 928,
	0, 0, 222, 315, 317, 324, 0, 996, 318, 940,
	931, 942, 944, 945, 946, 941, 0, 933, 0, 325,
	998, 988, 999, 326, 327, 328, 1000, 968, 969, 0,
	0, 331, 332, 333, 334, 335, 0, 337, 336, 0,
	338, 1020, 1001, 339, 340, 1002, 0, 341, 342, 343,
	979, 978, 344, 345, 346, 347, 0, 348, 349, 351,
	353, 350, 352, 357, 354, 355, 356, 359, 920, 358,
	1003, 361, 362, 365, 366, 364, 1004, 363, 875, 223,
	1005, 367, 897, 989, 368, 955, 370, 371, 0, 929,
	373, 930, 880, 0, 376, 377, 378, 0, 0, 379,
	380, 530, 1006, 381, 1007, 1014, 382, 375, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 391, 532, 533,
	1015, 392, 535, 393, 394, 0, 395, 0, 396, 397,
	398, 399, 400, 401, 402, 948, 403, 404, 0, 405,
	406, 407, 408, 409, 410, 0, 412, 413, 414, 411,
	415, 416, 417, 418, 0, 419, 1008, 420, 421, 422,
	423, 885, 424, 0, 425, 429, 430, 431, 432, 433,
	434, 435, 0, 441, 442, 921, 922, 924, 925, 437,
	443, 444, 445, 982, 446, 426, 427, 447, 448, 1009,
	449, 450, 943, 923, 452, 0, 453, 454, 455, 456,
	428, 457, 461, 993, 458, 459, 460, 1016, 0, 464,
	465, 463, 0, 466, 467, 468, 469, 470, 288, 919,
	0, 472, 962, 963, 964, 965, 0, 479, 0, 473,
	474, 1017, 475, 1018, 895, 476, 477, 478, 0, 480,
	481, 0, 879, 482, 483, 484, 486, 487, 485, 489,
	983, 490, 0, 927, 491, 492, 493, 546, 959, 1011,
	0, 495, 494, 549, 0, 0, 0, 0, 496, 497,
	550, 498, 499, 500, 876, 0, 0, 0, 0, 0,
	874, 0, 0, 0, 0, 0, 0, 872, 873, 932,
	889, 890, 891, 887, 888, 900, 901, 0, 0, 0,
	899, 0, 0, 0, 0, 0, 224, 225, 226, 227,
	228, 0, 229, 0, 0, 0, 0, 0, 985, 905,
	0, 0, 0, 230, 232, 231, 233, 234, 502, 947,
	926, 958, 238, 916, 957, 956, 0, 239, 240, 918,
	917, 243, 244, 245, 907, 984, 246, 1021, 1022, 508,
	0, 247, 248, 991, 0, 972, 0, 249, 250, 251,
	252, 253, 254, 0, 0, 256, 257, 258, 255, 0,
	259, 0, 260, 261, 262, 0, 263, 994, 264, 265,
	975, 973, 974, 981, 977, 976, 980, 266, 267, 268,
	269, 961, 271, 954, 953, 878, 272, 273, 0, 275,
	274, 0, 276, 0, 0, 277, 952, 279, 0, 280,
	0, 281, 282, 0, 283, 884, 284, 285, 287, 289,
	286, 290, 291, 292, 293, 1012, 1013, 896, 221, 0,
	0, 0, 0, 0, 294, 295, 296, 951, 949, 950,
	0, 299, 0, 300, 0, 0, 995, 301, 966, 967,
	302, 303, 0, 304, 1019, 0, 906, 305, 0, 306,
	307, 308, 309, 986, 987, 990, 369, 997, 310, 311,
	0, 312, 313, 314, 928, 0, 0, 222, 315, 317,
	324, 0, 996, 318, 940, 931, 942, 944, 945, 946,
	941, 0, 933, 0, 325, 998, 988, 999, 326, 327,
	328, 1000, 968, 969, 0, 0, 331, 332, 333, 334,
	335, 0, 337, 336, 0, 338, 1020, 1001, 339, 340,
	1002, 0, 341, 342, 343, 979, 978, 344, 345, 346,
	347, 0, 348, 349, 351, 353, 350, 352, 357, 354,
	355, 356, 359, 920, 358, 1003, 361, 362, 365, 366,
	364, 1004, 363, 875, 223, 1005, 367, 897, 989, 368,
	955, 370, 371, 0, 929, 373, 930, 0, 0, 376,
	377, 378, 0, 0, 379, 380, 530, 1006, 381, 1007,
	1014, 382, 375, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 391, 532, 533, 1015, 392, 535, 393, 394,
	0, 395, 0, 396, 397, 398, 399, 400, 401, 402,
	948, 403, 404, 0, 405, 406, 407, 408, 409, 410,
	0, 412, 413, 414, 411, 415, 416, 417, 418, 0,
	419, 1008, 420, 421, 422, 423, 885, 424, 0, 425,
	429, 430, 431, 432, 433, 434, 435, 0, 441, 442,
	921, 922, 924, 925, 437, 443, 444, 445, 982, 446,
	426, 427, 447, 448, 1009, 449, 450, 943, 923, 452,
	0, 453, 454, 455, 456, 428, 457, 461, 993, 458,
	459, 460, 1016, 0, 464, 465, 463, 0, 466, 467,
	468, 469, 470, 288, 919, 0, 472, 962, 963, 964,
	965, 0, 479, 0, 473, 474, 1017, 475, 1018, 895,
	476, 477, 478, 0, 480, 481, 0, 879, 482, 483,
	484, 486, 487, 485, 489, 983, 490, 0, 927, 491,
	492, 493, 546, 959, 1011, 0, 495, 494, 549, 0,
	0, 0, 0, 496, 497, 550, 498, 499, 500, 876,
	0, 0, 0, 0, 0, 874, 0, 0, 0, 0,
	0, 0, 872, 873, 1646, 0, 0, 0, 0, 0,
	0, 901, 0, 0, 0, 899, 932, 889, 890, 891,
	887, 888, 900, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 224, 225, 226, 227, 228, 0, 229,
	0, 0, 0, 0, 0, 985, 905, 0, 0, 0,
	230, 232, 231, 233, 234, 502, 947, 926, 958, 238,
	916, 957, 956, 0, 239, 240, 918, 917, 243, 244,
	245, 907, 984, 246, 1021, 1022, 508, 0, 247, 248,
	991, 0, 972, 0, 249, 250, 251, 252, 253, 254,
	0, 0, 256, 257, 258, 255, 0, 259, 0, 260,
	261, 262, 0, 263, 994, 264, 265, 975, 973, 974,
	981, 977, 976, 980, 266, 267, 268, 269, 961, 271,
	954, 953, 878, 272, 273, 0, 275, 274, 0, 276,
	0, 0, 277, 952, 279, 0, 280, 0, 281, 282,
	0, 283, 884, 284, 285, 287, 289, 286, 290, 291,
	292, 293, 1012, 1013, 896, 221, 0, 0, 0, 0,
	0, 294, 295, 296, 951, 949, 950, 0, 299, 0,
	300, 0, 2259, 995, 301, 966, 967, 302, 303, 0,
	304, 1019, 0, 906, 305, 0, 306, 307, 308, 309,
	986, 987, 990, 369, 997, 310, 311, 0, 312, 313,
	314, 928, 0, 0, 222, 315, 317, 324, 0, 996,
	318, 940, 931, 942, 944, 945, 946, 941, 0, 933,
	0, 325, 998, 988, 999, 326, 327, 328, 1000, 968,
	969, 0, 0, 331, 332, 333, 334, 335, 0, 337,
	336, 0, 338, 1020, 1001, 339, 340, 1002, 0, 341,
	342, 343, 979, 978, 344, 345, 346, 347, 0, 348,
	349, 351, 353, 350, 352, 357, 354, 355, 356, 359,
	920, 358, 1003, 361, 362, 365, 366, 364, 1004, 363,
	875, 223, 1005, 367, 897, 989, 368, 955, 370, 371,
	0, 929, 373, 930, 0, 0, 376, 377, 378, 0,
	0, 379, 380, 530, 1006, 381, 1007, 1014, 382, 375,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 391,
	532, 533, 1015, 392, 535, 393, 394, 0, 395, 0,
	396, 397, 398, 399, 400, 401, 402, 948, 403, 404,
	0, 405, 406, 407, 408, 409, 410, 0, 412, 413,
	414, 411, 415, 416, 417, 418, 0, 419, 1008, 420,
	421, 422, 423, 885, 424, 0, 425, 429, 430, 431,
	432, 433, 434, 435, 0, 441, 442, 921, 922, 924,
	925, 437, 443, 444, 445, 982, 446, 426, 427, 447,
	448, 1009, 449, 450, 943, 923, 452, 0, 453, 454,
	455, 456, 428, 457, 461, 993, 458, 459, 460, 1016,
	0, 464, 465, 463, 0, 466, 467, 468, 469, 470,
	288, 919, 0, 472, 962, 963, 964, 965, 0, 479,
	0, 473, 474, 1017, 475, 1018, 895, 476, 477, 478,
	0, 480, 481, 0, 879, 482, 483, 484, 486, 487,
	485, 489, 983, 490, 0, 927, 491, 492, 493, 546,
	959, 1011, 0, 495, 494, 549, 0, 0, 0, 0,
	496, 497, 550, 498, 499, 500, 876, 0, 0, 0,
	0, 0, 874, 0, 0, 0, 0, 0, 0, 872,
	873, 932, 889, 890, 891, 887, 888, 900, 901, 0,
	0, 0, 899, 0, 0, 0, 0, 0, 224, 225,
	226, 227, 228, 0, 229, 0, 0, 0, 0, 0,
	985, 905, 0, 0, 0, 230, 232, 231, 233, 234,
	502, 947, 926, 958, 238, 916, 957, 956, 0, 239,
	240, 918, 917, 243, 244, 245, 907, 984, 246, 1021,
	1022, 508, 0, 247, 248, 991, 0, 972, 0, 249,
	250, 251, 252, 253, 254, 0, 0, 256, 257, 258,
	255, 0, 259, 0, 260, 261, 262, 0, 263, 994,
	264, 265, 975, 973, 974, 981, 977, 976, 980, 266,
	267, 268, 269, 961, 271, 954, 953, 878, 272, 273,
	0, 275, 274, 0, 276, 0, 0, 277, 952, 279,
	0, 280, 0, 281, 282, 0, 283, 884, 284, 285,
	287, 289, 286, 290, 291, 292, 293, 1012, 1013, 896,
	221, 0, 0, 0, 0, 0, 294, 295, 296, 951,
	949, 950, 0, 299, 0, 300, 0, 0, 995, 301,
	966, 967, 302, 303, 0, 304, 1019, 0, 906, 305,
	0, 306, 307, 308, 309, 986, 987, 990, 369, 997,
	310, 311, 0, 312, 313, 314, 928, 0, 0, 222,
	315, 317, 324, 0, 996, 318, 940, 931, 942, 944,
	945, 946, 941, 0, 933, 0, 325, 998, 988, 999,
	326, 327, 328, 1000, 968, 969, 0, 0, 331, 332,
	333, 334, 335, 0, 337, 336, 0, 338, 1020, 1001,
	339, 340, 1002, 0, 341, 342, 343, 979, 978, 344,
	345, 346, 347, 0, 348, 349, 351, 353, 350, 352,
	357, 354, 355, 356, 359, 920, 358, 1003, 361, 362,
	365, 366, 364, 1004, 363, 875, 223, 1005, 367, 897,
	989, 368, 955, 370, 371, 0, 929, 373, 930, 0,
	0, 376, 377, 378, 0, 0, 379, 380, 530, 1006,
	381, 1007, 1014, 382, 375, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 391, 532, 533, 1015, 392, 535,
	393, 394, 0, 395, 0, 396, 397, 398, 399, 400,
	401, 402, 948, 403, 404, 0, 405, 406, 407, 408,
	409, 410, 0, 412, 413, 414, 411, 415, 416, 417,
	418, 0, 419, 1008, 420, 421, 422, 423, 885, 424,
	0, 425, 429, 430, 431, 432, 433, 434, 435, 0,
	441, 442, 921, 922, 924, 925, 437, 443, 444, 445,
	982, 446, 426, 427, 447, 448, 1009, 449, 450, 943,
	923, 452, 0, 453, 454, 455, 456, 428, 457, 461,
	993, 458, 459, 460, 1016, 0, 464, 465, 463, 0,
	466, 467, 468, 469, 470, 288, 919, 0, 472, 962,
	963, 964, 965, 0, 479, 0, 473, 474, 1017, 475,
	1018, 895, 476, 477, 478, 0, 480, 481, 0, 879,
	482, 483, 484, 486, 487, 485, 489, 983, 490, 0,
	927, 491, 492, 493, 546, 959, 1011, 0, 495, 494,
	549, 0, 0, 0, 0, 496, 497, 550, 498, 499,
	500, 876, 0, 0, 0, 0, 0, 874, 0, 0,
	0, 0, 0, 0, 872, 873, 0, 0, 0, 0,
	0, 0, 0, 901, 1578, 0, 2264, 899, 932, 889,
	890, 891, 887, 888, 900, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 224, 225, 226, 227, 228,
	0, 229, 0, 0, 0, 0, 0, 985, 905, 0,
	0, 0, 230, 232, 231, 233, 234, 502, 947, 926,
	958, 238, 916, 957, 956, 0, 239, 240, 918, 917,
	243, 244, 245, 907, 984, 246, 1021, 1022, 508, 0,
	247, 248, 991, 0, 972, 0, 249, 250, 251, 252,
	253, 254, 0, 0, 256, 257, 258, 255, 0, 259,
	0, 260, 261, 262, 0, 263, 994, 264, 265, 975,
	973, 974, 981, 977, 976, 980, 266, 267, 268, 269,
	961, 271, 954, 953, 878, 272, 273, 0, 275, 274,
	0, 276, 0, 0, 277, 952, 279, 0, 280, 0,
	281, 282, 0, 283, 884, 284, 285, 287, 289, 286,
	290, 291, 292, 293, 1012, 1013, 896, 221, 0, 0,
	0, 0, 0, 294, 295, 296, 951, 949, 950, 0,
	299, 0, 300, 0, 0, 995, 301, 966, 967, 302,
	303, 0, 304, 1019, 0, 906, 305, 0, 306, 307,
	308, 309, 986, 987, 990, 369, 997, 310, 311, 0,
	312, 313, 314, 928, 0, 0, 222, 315, 317, 324,
	0, 996, 318, 940, 931, 942, 944, 945, 946, 941,
	0, 933, 0, 325, 998, 988, 999, 326, 327, 328,
	1000, 968, 969, 0, 0, 331, 332, 333, 334, 335,
	0, 337, 336, 0, 338, 1020, 1001, 339, 340, 1002,
	0, 341, 342, 343, 979, 978, 344, 345, 346, 347,
	0, 348, 349, 351, 353, 350, 352, 357, 354, 355,
	356, 359, 920, 358, 1003, 361, 362, 365, 366, 364,
	1004, 363, 875, 223, 1005, 367, 897, 989, 368, 955,
	370, 371, 0, 929, 373, 930, 0, 0, 376, 377,
	378, 0, 0, 379, 380, 530, 1006, 381, 1007, 1014,
	382, 375, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 391, 532, 533, 1015, 392, 535, 393, 394, 0,
	395, 0, 396, 397, 398, 399, 400, 401, 402, 948,
	403, 404, 0, 405, 406, 407, 408, 409, 410, 0,
	412, 413, 414, 411, 415, 416, 417, 418, 0, 419,
	1008, 420, 421, 422, 423, 885, 424, 0, 425, 429,
	430, 431, 432, 433, 434, 435, 0, 441, 442, 921,
	922, 924, 925, 437, 443, 444, 445, 982, 446, 426,
	427, 447, 448, 1009, 449, 450, 943, 923, 452, 0,
	453, 454, 455, 456, 428, 457, 461, 993, 458, 459,
	460, 1016, 0, 464, 465, 463, 0, 466, 467, 468,
	469, 470, 288, 919, 0, 472, 962, 963, 964, 965,
	0, 479, 0, 473, 474, 1017, 475, 1018, 895, 476,
	477, 478, 0, 480, 481, 0, 879, 482, 483, 484,
	486, 487, 485, 489, 983, 490, 0, 927, 491, 492,
	493, 546, 959, 1011, 0, 495, 494, 549, 0, 0,
	0, 0, 496, 497, 550, 498, 499, 500, 876, 0,
	0, 0, 0, 0, 874, 0, 0, 0, 0, 0,
	0, 872, 873, 0, 0, 0, 0, 0, 0, 0,
	901, 0, 0, 2262, 899, 932, 889, 890, 891, 887,
	888, 900, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 224, 225, 226, 227, 228, 0, 229, 0,
	0, 0, 0, 0, 985, 905, 0, 0, 0, 230,
	232, 231, 233, 234, 502, 947, 926, 958, 238, 916,
	957, 956, 0, 239, 240, 918, 917, 243, 244, 245,
	907, 984, 246, 1021, 1022, 508, 0, 247, 248, 991,
	0, 972, 0, 249, 250, 251, 252, 253, 254, 0,
	0, 256, 257, 258, 255, 0, 259, 0, 260, 261,
	262, 0, 263, 994, 264, 265, 975, 973, 974, 981,
	977, 976, 980, 266, 267, 268, 269, 961, 271, 954,
	953, 878, 272, 273, 0, 275, 274, 0, 276, 0,
	0, 277, 952, 279, 0, 280, 0, 281, 282, 0,
	283, 884, 284, 285, 287, 289, 286, 290, 291, 292,
	293, 1012, 1013, 896, 221, 0, 0, 0, 0, 0,
	294, 295, 296, 951, 949, 950, 0, 299, 0, 300,
	0, 0, 995, 301, 966, 967, 302, 303, 0, 304,
	1019, 0, 906, 305, 0, 306, 307, 308, 309, 986,
	987, 990, 369, 997, 310, 311, 0, 312, 313, 314,
	928, 0, 0, 222, 315, 317, 324, 0, 996, 318,
	940, 931, 942, 944, 945, 946, 941, 0, 933, 0,
	325, 998, 988, 999, 326, 327, 328, 1000, 968, 969,
	0, 0, 331, 332, 333, 334, 335, 0, 337, 336,
	0, 338, 1020, 1001, 339, 340, 1002, 0, 341, 342,
	343, 979, 978, 344, 345, 346, 347, 0, 348, 349,
	351, 353, 350, 352, 357, 354, 355, 356, 359, 920,
	358, 1003, 361, 362, 365, 366, 364, 1004, 363, 875,
	223, 1005, 367, 897, 989, 368, 955, 370, 371, 0,
	929, 373, 930, 0, 0, 376, 377, 378, 0, 0,
	379, 380, 530, 1006, 381, 1007, 1014, 382, 375, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 391, 532,
	533, 1015, 392, 535, 393, 394, 0, 395, 0, 396,
	397, 398, 399, 400, 401, 402, 948, 403, 404, 0,
	405, 406, 407, 408, 409, 410, 0, 412, 413, 414,
	411, 415, 416, 417, 418, 0, 419, 1008, 420, 421,
	422, 423, 885, 424, 0, 425, 429, 430, 431, 432,
	433, 434, 435, 0, 441, 442, 921, 922, 924, 925,
	437, 443, 444, 445, 982, 446, 426, 427, 447, 448,
	1009, 449, 450, 943, 923, 452, 0, 453, 454, 455,
	456, 428, 457, 461, 993, 458, 459, 460, 1016, 0,
	464, 465, 463, 0, 466, 467, 468, 469, 470, 288,
	919, 0, 472, 962, 963, 964, 965, 0, 479, 0,
	473, 474, 1017, 475, 1018, 895, 476, 477, 478, 0,
	480, 481, 0, 879, 482, 483, 484, 486, 487, 485,
	489, 983, 490, 0, 927, 491, 492, 493, 546, 959,
	1011, 0, 495, 494, 549, 0, 0, 0, 0, 496,
	497, 550, 498, 499, 500, 876, 0, 0, 0, 0,
	0, 874, 0, 0, 0, 0, 0, 0, 872, 873,
	0, 0, 0, 0, 0, 0, 0, 901, 0, 0,
	2250, 899, 932, 889, 890, 891, 887, 888, 900, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 224,
	225, 226, 227, 228, 0, 229, 0, 0, 0, 0,
	0, 985, 905, 0, 0, 0, 230, 232, 231, 233,
	234, 502, 947, 926, 958, 238, 916, 957, 956, 0,
	239, 240, 918, 917, 243, 244, 245, 907, 984, 246,
	1021, 1022, 508, 0, 247, 248, 991, 0, 972, 0,
	249, 250, 251, 252, 253, 254, 0, 0, 256, 257,
	258, 255, 0, 259, 0, 260, 261, 262, 0, 263,
	994, 264, 265, 975, 973, 974, 981, 977, 976, 980,
	266, 267, 268, 269, 961, 271, 954, 953, 878, 272,
	273, 0, 275, 274, 0, 276, 0, 0, 277, 952,
	279, 0, 280, 0, 281, 282, 0, 283, 884, 284,
	285, 287, 289, 286, 290, 291, 292, 293, 1012, 1013,
	896, 221, 0, 0, 0, 0, 0, 294, 295, 296,
	951, 949, 950, 0, 299, 0, 300, 0, 0, 995,
	301, 966, 967, 302, 303, 0, 304, 1019, 0, 906,
	305, 0, 306, 307, 308, 309, 986, 987, 990, 369,
	997, 310, 311, 0, 312, 313, 314, 928, 0, 0,
	222, 315, 317, 324, 0, 996, 318, 940, 931, 942,
	944, 945, 946, 941, 0, 933, 0, 325, 998, 988,
	999, 326, 327, 328, 1000, 968, 969, 0, 0, 331,
	332, 333, 334, 335, 0, 337, 336, 0, 338, 1020,
	1001, 339, 340, 1002, 0, 341, 342, 343, 979, 978,
	344, 345, 346, 347, 0, 348, 349, 351, 353, 350,
	352, 357, 354, 355, 356, 359, 920, 358, 1003, 361,
	362, 365, 366, 364, 1004, 363, 875, 223, 1005, 367,
	897, 989, 368, 955, 370, 371, 0, 929, 373, 930,
	0, 0, 376, 377, 378, 0, 0, 379, 380, 530,
	1006, 381, 1007, 1014, 382, 375, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 391, 532, 533, 1015, 392,
	535, 393, 394, 0, 395, 0, 396, 397, 398, 399,
	400, 401, 402, 948, 403, 404, 0, 405, 406, 407,
	408, 409, 410, 0, 412, 413, 414, 411, 415, 416,
	417, 418, 0, 419, 1008, 420, 421, 422, 423, 885,
	424, 0, 425, 429, 430, 431, 432, 433, 434, 435,
	0, 441, 442, 921, 922, 924, 925, 437, 443, 444,
	445, 982, 446, 426, 427, 447, 448, 1009, 449, 450,
	943, 923, 452, 0, 453, 454, 455, 456, 428, 457,
	461, 993, 458, 459, 460, 1016, 0, 464, 465, 463,
	0, 466, 467, 468, 469, 470, 288, 919, 0, 472,
	962, 963, 964, 965, 0, 479, 0, 473, 474, 1017,
	475, 1018, 895, 476, 477, 478, 0, 480, 481, 0,
	879, 482, 483, 484, 486, 487, 485, 489, 983, 490,
	0, 927, 491, 492, 493, 546, 959, 1011, 0, 495,
	494, 549, 0, 0, 0, 0, 496, 497, 550, 498,
	499, 500, 876, 0, 0, 0, 0, 0, 874, 0,
	0, 0, 0, 0, 0, 872, 873, 0, 0, 0,
	0, 0, 0, 0, 901, 0, 0, 2239, 899, 932,
	889, 890, 891, 887, 888, 900, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 224, 225, 226, 227,
	228, 0, 229, 0, 0, 0, 0, 0, 985, 905,
	0, 0, 0, 230, 232, 231, 233, 234, 502, 947,
	926, 958, 238, 916, 957, 956, 0, 239, 240, 918,
	917, 243, 244, 245, 907, 984, 246, 1021, 1022, 508,
	0, 247, 248, 991, 0, 972, 0, 249, 250, 251,
	252, 253, 254, 0, 0, 256, 257, 258, 255, 0,
	259, 0, 260, 261, 262, 0, 263, 994, 264, 265,
	975, 973, 974, 981, 977, 976, 980, 266, 267, 268,
	269, 961, 271, 954, 953, 878, 272, 273, 0, 275,
	274, 0, 276, 0, 0, 277, 952, 279, 0, 280,
	0, 281, 282, 0, 283, 884, 284, 285, 287, 289,
	286, 290, 291, 292, 293, 1012, 1013, 896, 221, 0,
	0, 0, 0, 0, 294, 295, 296, 951, 949, 950,
	0, 299, 0, 300, 0, 0, 995, 301, 966, 967,
	302, 303, 0, 304, 1019, 0, 906, 305, 0, 306,
	307, 308, 309, 986, 987, 990, 369, 997, 310, 311,
	0, 312, 313, 314, 928, 0, 0, 222, 315, 317,
	324, 0, 996, 318, 940, 931, 942, 944, 945, 946,
	941, 0, 933, 0, 325, 998, 988, 999, 326, 327,
	328, 1000, 968, 969, 0, 0, 331, 332, 333, 334,
	335, 0, 337, 336, 0, 338, 1020, 1001, 339, 340,
	1002, 0, 341, 342, 343, 979, 978, 344, 345, 346,
	347, 0, 348, 349, 351, 353, 350, 352, 357, 354,
	355, 356, 359, 920, 358, 1003, 361, 362, 365, 366,
	364, 1004, 363, 875, 223, 1005, 367, 897, 989, 368,
	955, 370, 371, 0, 929, 373, 930, 0, 0, 376,
	377, 378, 0, 0, 379, 380, 530, 1006, 381, 1007,
	1014, 382, 375, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 391, 532, 533, 1015, 392, 535, 393, 394,
	0, 395, 0, 396, 397, 398, 399, 400, 401, 402,
	948, 403, 404, 0, 405, 406, 407, 408, 409, 410,
	0, 412, 413, 414, 411, 415, 416, 417, 418, 0,
	419, 1008, 420, 421, 422, 423, 885, 424, 0, 425,
	429, 430, 431, 432, 433, 434, 435, 0, 441, 442,
	921, 922, 924, 925, 437, 443, 444, 445, 982, 446,
	426, 427, 447, 448, 1009, 449, 450, 943, 923, 452,
	0, 453, 454, 455, 456, 428, 457, 461, 993, 458,
	459, 460, 1016, 0, 464, 465, 463, 0, 466, 467,
	468, 469, 470, 288, 919, 0, 472, 962, 963, 964,
	965, 0, 479, 0, 473, 474, 1017, 475, 1018, 895,
	476, 477, 478, 0, 480, 481, 0, 879, 482, 483,
	484, 486, 487, 485, 489, 983, 490, 0, 927, 491,
	492, 493, 546, 959, 1011, 0, 495, 494, 549, 0,
	0, 0, 0, 496, 497, 550, 498, 499, 500, 876,
	0, 0, 0, 0, 0, 874, 0, 0, 0, 0,
	0, 0, 872, 873, 0, 0, 0, 0, 0, 0,
	0, 901, 0, 0, 2237, 899, 2228, 2235, 890, 891,
	887, 888, 900, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 224, 225, 226, 227, 228, 0, 229,
	0, 0, 0, 0, 0, 985, 905, 0, 0, 0,
	230, 232, 231, 233, 234, 502, 947, 926, 958, 238,
	916, 957, 956, 0, 239, 240, 918, 917, 243, 244,
	245, 907, 984, 246, 1021, 1022, 508, 0, 247, 248,
	991, 0, 972, 0, 249, 250, 251, 252, 253, 254,
	0, 0, 256, 257, 258, 255, 0, 259, 0, 260,
	261, 262, 0, 263, 994, 264, 265, 975, 973, 974,
	981, 977, 976, 980, 266, 267, 268, 269, 961, 2231,
	954, 953, 878, 272, 273, 0, 275, 274, 0, 276,
	0, 0, 277, 952, 279, 0, 280, 0, 281, 282,
	0, 283, 884, 284, 285, 287, 289, 286, 290, 291,
	292, 293, 1012, 1013, 896, 221, 0, 0, 0, 0,
	0, 294, 295, 296, 951, 949, 950, 0, 299, 0,
	300, 0, 0, 995, 301, 966, 967, 302, 303, 0,
	304, 1019, 0, 906, 305, 0, 306, 307, 308, 2232,
	986, 987, 990, 369, 997, 310, 311, 0, 312, 313,
	314, 928, 0, 0, 222, 315, 317, 324, 0, 996,
	318, 940, 931, 942, 944, 945, 946, 941, 0, 933,
	0, 325, 998, 988, 999, 326, 327, 328, 1000, 968,
	969, 0, 0, 331, 332, 333, 334, 335, 0, 337,
	336, 0, 338, 1020, 1001, 339, 340, 1002, 0, 341,
	342, 343, 979, 978, 344, 345, 346, 347, 0, 348,
	349, 351, 353, 350, 2233, 2230, 354, 355, 356, 359,
	920, 358, 1003, 361, 362, 365, 366, 364, 1004, 363,
	875, 223, 1005, 367, 897, 989, 368, 955, 370, 371,
	0, 929, 373, 930, 0, 0, 376, 377, 378, 0,
	0, 379, 380, 530, 1006, 381, 1007, 1014, 382, 375,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 391,
	532, 533, 1015, 392, 535, 393, 394, 0, 395, 0,
	396, 397, 398, 399, 400, 401, 402, 948, 403, 404,
	0, 405, 406, 407, 408, 409, 410, 0, 412, 413,
	414, 411, 415, 416, 417, 418, 0, 419, 1008, 420,
	421, 422, 423, 885, 424, 0, 425, 429, 430, 431,
	432, 433, 434, 2234, 0, 441, 442, 921, 922, 924,
	925, 437, 443, 444, 445, 982, 446, 426, 427, 447,
	448, 1009, 449, 450, 943, 923, 452, 0, 453, 454,
	455, 456, 428, 457, 461, 993, 458, 459, 460, 1016,
	0, 464, 465, 463, 0, 466, 467, 468, 469, 470,
	288, 919, 0, 472, 962, 963, 964, 965, 0, 479,
	0, 473, 474, 1017, 475, 1018, 895, 476, 477, 478,
	0, 480, 481, 0, 879, 482, 483, 484, 486, 487,
	485, 489, 983, 490, 0, 927, 491, 492, 493, 546,
	959, 1011, 0, 495, 494, 549, 0, 0, 0, 0,
	496, 497, 550, 498, 2229, 500, 876, 0, 0, 0,
	0, 0, 874, 0, 0, 0, 0, 0, 0, 872,
	873, 0, 0, 0, 0, 0, 0, 0, 901, 0,
	0, 2225, 899, 2228, 2235, 890, 891, 887, 888, 900,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	224, 225, 226, 227, 228, 0, 229, 0, 0, 0,
	0, 0, 985, 905, 0, 0, 0, 230, 232, 231,
	233, 234, 502, 947, 926, 958, 238, 916, 957, 956,
	0, 239, 240, 918, 917, 243, 244, 245, 907, 984,
	246, 1021, 1022, 508, 0, 247, 248, 991, 0, 972,
	0, 249, 250, 251, 252, 253, 254, 0, 0, 256,
	257, 258, 255, 0, 259, 0, 260, 261, 262, 0,
	263, 994, 264, 265, 975, 973, 974, 981, 977, 976,
	980, 266, 267, 268, 269, 961, 2231, 954, 953, 878,
	272, 273, 0, 275, 274, 0, 276, 0, 0, 277,
	952, 279, 0, 280, 0, 281, 282, 0, 283, 884,
	284, 285, 287, 289, 286, 290, 291, 292, 293, 1012,
	1013, 896, 221, 0, 0, 0, 0, 0, 294, 295,
	296, 951, 949, 950, 0, 299, 0, 300, 0, 0,
	995, 301, 966, 967, 302, 303, 0, 304, 1019, 0,
	906, 305, 0, 306, 307, 308, 2232, 986, 987, 990,
	369, 997, 310, 311, 0, 312, 313, 314, 928, 0,
	0, 222, 315, 317, 324, 0, 996, 318, 940, 931,
	942, 944, 945, 946, 941, 0, 933, 0, 325, 998,
	988, 999, 326, 327, 328, 1000, 968, 969, 0, 0,
	331, 332, 333, 334, 335, 0, 337, 336, 0, 338,
	1020, 1001, 339, 340, 1002, 0, 341, 342, 343, 979,
	978, 344, 345, 346, 347, 0, 348, 349, 351, 353,
	350, 2233, 2230, 354, 355, 356, 359, 920, 358, 1003,
	361, 362, 365, 366, 364, 1004, 363, 875, 223, 1005,
	367, 897, 989, 368, 955, 370, 371, 0, 929, 373,
	930, 0, 0, 376, 377, 378, 0, 0, 379, 380,
	530, 1006, 381, 1007, 1014, 382, 375, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 391, 532, 533, 1015,
	392, 535, 393, 394, 0, 395, 0, 396, 397, 398,
	399, 400, 401, 402, 948, 403, 404, 0, 405, 406,
	407, 408, 409, 410, 0, 412, 413, 414, 411, 415,
	416, 417, 418, 0, 419, 1008, 420, 421, 422, 423,
	885, 424, 0, 425, 429, 430, 431, 432, 433, 434,
	2234, 0, 441, 442, 921, 922, 924, 925, 437, 443,
	444, 445, 982, 446, 426, 427, 447, 448, 1009, 449,
	450, 943, 923, 452, 0, 453, 454, 455, 456, 428,
	457, 461, 993, 458, 459, 460, 1016, 0, 464, 465,
	463, 0, 466, 467, 468, 469, 470, 288, 919, 0,
	472, 962, 963, 964, 965, 0, 479, 0, 473, 474,
	1017, 475, 1018, 895, 476, 477, 478, 0, 480, 481,
	0, 879, 482, 483, 484, 486, 487, 485, 489, 983,
	490, 0, 927, 491, 492, 493, 546, 959, 1011, 0,
	495, 494, 549, 0, 0, 0, 0, 496, 497, 550,
	498, 2229, 500, 876, 0, 0, 0, 0, 0, 874,
	0, 0, 0, 0, 0, 0, 872, 873, 932, 889,
	890, 891, 887, 888, 900, 901, 0, 0, 0, 899,
	0, 0, 0, 0, 0, 224, 225, 226, 227, 228,
	0, 229, 0, 0, 0, 0, 0, 985, 905, 0,
	0, 0, 230, 232, 231, 233, 234, 502, 947, 926,
	958, 238, 916, 957, 956, 0, 239, 240, 918, 917,
	243, 244, 245, 907, 984, 246, 1021, 1022, 508, 0,
	247, 248, 991, 0, 972, 0, 249, 250, 251, 252,
	253, 254, 0, 0, 256, 257, 258, 255, 0, 259,
	0, 260, 261, 262, 0, 263, 994, 264, 265, 975,
	973, 974, 981, 977, 976, 980, 266, 267, 268, 269,
	961, 271, 954, 953, 878, 272, 273, 0, 275, 274,
	0, 276, 0, 0, 277, 952, 279, 0, 280, 0,
	281, 282, 0, 283, 884, 284, 285, 287, 289, 286,
	290, 291, 292, 293, 1012, 1013, 896, 221, 0, 0,
	0, 0, 0, 294, 295, 296, 951, 949, 950, 0,
	299, 0, 300, 0, 0, 995, 301, 966, 967, 302,
	303, 0, 304, 1019, 0, 906, 305, 0, 306, 307,
	308, 309, 986, 987, 990, 369, 997, 310, 311, 0,
	312, 313, 314, 928, 0, 0, 222, 315, 317, 324,
	0, 996, 318, 940, 931, 942, 944, 945, 946, 941,
	0, 933, 0, 325, 998, 988, 999, 326, 327, 328,
	1000, 968, 969, 0, 0, 331, 332, 333, 334, 335,
	0, 337, 336, 0, 338, 1020, 1001, 339, 340, 1002,
	0, 341, 342, 343, 979, 978, 344, 345, 346, 347,
	0, 348, 349, 351, 353, 350, 352, 357, 354, 355,
	356, 359, 920, 358, 1003, 361, 362, 365, 366, 364,
	1004, 363, 875, 223, 1005, 367, 897, 989, 368, 955,
	370, 371, 0, 929, 373, 930, 0, 0, 376, 377,
	378, 0, 0, 379, 380, 530, 1006, 381, 1007, 1014,
	382, 375, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 391, 532, 533, 1015, 392, 535, 393, 394, 0,
	395, 0, 396, 397, 398, 399, 400, 401, 402, 948,
	403, 404, 0, 405, 406, 407, 408, 409, 410, 0,
	412, 413, 414, 411, 415, 416, 417, 418, 0, 419,
	1008, 420, 421, 422, 423, 885, 424, 0, 425, 429,
	430, 431, 432, 433, 434, 435, 0, 441, 442, 921,
	922, 924, 925, 437, 443, 444, 445, 982, 446, 426,
	427, 447, 448, 1009, 449, 450, 943, 923, 452, 0,
	453, 454, 455, 456, 428, 457, 461, 993, 458, 459,
	460, 1016, 0, 464, 465, 463, 0, 466, 467, 468,
	469, 470, 288, 919, 0, 472, 962, 963, 964, 965,
	0, 479, 0, 473, 474, 1017, 475, 1018, 895, 476,
	477, 478, 0, 480, 481, 0, 879, 482, 483, 484,
	486, 487, 485, 489, 983, 490, 0, 927, 491, 492,
	493, 546, 959, 1011, 0, 495, 494, 549, 0, 0,
	0, 0, 496, 497, 550, 498, 499, 500, 876, 0,
	0, 0, 0, 0, 874, 0, 0, 0, 0, 0,
	0, 872, 873, 0, 0, 0, 0, 0, 1586, 0,
	901, 0, 0, 0, 899, 932, 889, 890, 891, 887,
	888, 900, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 224, 225, 226, 227, 228, 2043, 229, 0,
	0, 0, 0, 0, 985, 905, 0, 0, 0, 230,
	232, 231, 233, 234, 502, 947, 926, 958, 238, 916,
	957, 956, 0, 239, 240, 918, 917, 243, 244, 245,
	907, 984, 246, 1021, 1022, 508, 0, 247, 248, 991,
	0, 972, 0, 249, 250, 251, 252, 253, 254, 0,
	0, 256, 257, 258, 255, 0, 259, 0, 260, 261,
	262, 0, 263, 994, 264, 265, 975, 973, 974, 981,
	977, 976, 980, 266, 267, 268, 269, 961, 271, 954,
	953, 878, 272, 273, 0, 275, 274, 0, 276, 0,
	0, 277, 952, 279, 0, 280, 0, 281, 282, 0,
	283, 884, 284, 285, 287, 289, 286, 290, 291, 292,
	293, 1012, 1013, 896, 221, 0, 0, 0, 0, 0,
	294, 295, 296, 951, 949, 950, 0, 299, 0, 300,
	0, 0, 995, 301, 966, 967, 302, 303, 0, 304,
	1019, 0, 906, 305, 0, 306, 307, 308, 309, 986,
	987, 990, 369, 997, 310, 311, 0, 312, 313, 314,
	928, 0, 0, 222, 315, 317, 324, 0, 996, 318,
	940, 931, 942, 944, 945, 946, 941, 0, 933, 0,
	325, 998, 988, 999, 326, 327, 328, 1000, 968, 969,
	0, 0, 331, 332, 333, 334, 335, 0, 337, 336,
	0, 338, 1020, 1001, 339, 340, 1002, 0, 341, 342,
	343, 979, 978, 344, 345, 346, 347, 0, 348, 349,
	351, 353, 350, 352, 357, 354, 355, 356, 359, 920,
	358, 1003, 361, 362, 365, 366, 364, 1004, 363, 875,
	223, 1005, 367, 897, 989, 368, 955, 370, 371, 0,
	929, 373, 930, 0, 0, 376, 377, 378, 0, 0,
	379, 380, 530, 1006, 381, 1007, 1014, 382, 375, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 391, 532,
	533, 1015, 392, 535, 393, 394, 0, 395, 0, 396,
	397, 398, 399, 400, 401, 402, 948, 403, 404, 0,
	405, 406, 407, 408, 409, 410, 0, 412, 413, 414,
	411, 415, 416, 417, 418, 0, 419, 1008, 420, 421,
	422, 423, 885, 424, 0, 425, 429, 430, 431, 432,
	433, 434, 435, 0, 441, 442, 921, 922, 924, 925,
	437, 443, 444, 445, 982, 446, 426, 427, 447, 448,
	1009, 449, 450, 943, 923, 452, 0, 453, 454, 455,
	456, 428, 457, 461, 993, 458, 459, 460, 1016, 0,
	464, 465, 463, 0, 466, 467, 468, 469, 470, 288,
	919, 0, 472, 962, 963, 964, 965, 0, 479, 0,
	473, 474, 1017, 475, 1018, 895, 476, 477, 478, 0,
	480, 481, 0, 879, 482, 483, 484, 486, 487, 485,
	489, 983, 490, 0, 927, 491, 492, 493, 546, 959,
	1011, 0, 495, 494, 549, 0, 0, 0, 0, 496,
	497, 550, 498, 499, 500, 876, 0, 0, 0, 0,
	0, 874, 0, 0, 0, 0, 0, 0, 872, 873,
	0, 0, 0, 0, 0, 0, 0, 901, 0, 0,
	1262, 899, 932, 889, 890, 891, 887, 888, 900, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 224,
	225, 226, 227, 228, 0, 229, 0, 0, 0, 0,
	0, 985, 905, 0, 0, 0, 230, 232, 231, 233,
	234, 502, 947, 926, 958, 238, 916, 957, 956, 0,
	239, 240, 918, 917, 243, 244, 245, 907, 984, 246,
	1021, 1022, 508, 0, 247, 248, 991, 0, 972, 0,
	249, 250, 251, 252, 253, 254, 0, 0, 256, 257,
	258, 255, 0, 259, 0, 260, 261, 262, 0, 263,
	994, 264, 265, 975, 973, 974, 981, 977, 976, 980,
	266, 267, 268, 269, 961, 271, 954, 953, 878, 272,
	273, 0, 275, 274, 0, 276, 0, 0, 277, 952,
	279, 0, 280, 0, 281, 282, 0, 283, 884, 284,
	285, 287, 289, 286, 290, 291, 292, 293, 1012, 1013,
	896, 221, 0, 0, 0, 0, 0, 294, 295, 296,
	951, 949, 950, 0, 299, 0, 300, 0, 0, 995,
	301, 966, 967, 302, 303, 0, 304, 1019, 0, 906,
	305, 0, 306, 307, 308, 309, 1261, 987, 990, 369,
	997, 310, 311, 0, 312, 313, 314, 928, 0, 0,
	222, 315, 317, 324, 0, 996, 318, 940, 931, 942,
	944, 945, 946, 941, 0, 933, 0, 325, 998, 988,
	999, 326, 327, 328, 1000, 968, 969, 0, 0, 331,
	332, 333, 334, 335, 0, 337, 336, 0, 338, 1020,
	1001, 339, 340, 1002, 0, 341, 342, 343, 979, 978,
	344, 345, 346, 347, 0, 348, 349, 351, 353, 350,
	352, 357, 354, 355, 356, 359, 920, 358, 1003, 361,
	362, 365, 366, 364, 1004, 363, 875, 223, 1005, 367,
	897, 989, 368, 955, 370, 371, 0, 929, 373, 930,
	0, 0, 376, 377, 378, 0, 0, 379, 380, 530,
	1006, 381, 1007, 1014, 382, 375, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 391, 532, 533, 1015, 392,
	535, 393, 394, 0, 395, 0, 396, 397, 398, 399,
	400, 401, 402, 948, 403, 404, 0, 405, 406, 407,
	408, 409, 410, 0, 412, 413, 414, 411, 415, 416,
	417, 418, 0, 419, 1008, 420, 421, 422, 423, 885,
	424, 0, 425, 429, 430, 431, 432, 433, 434, 435,
	0, 441, 442, 921, 922, 924, 925, 437, 443, 444,
	445, 982, 446, 426, 427, 447, 448, 1009, 449, 450,
	943, 923, 452, 0, 453, 454, 455, 456, 428, 457,
	461, 993, 458, 459, 460, 1016, 0, 464, 465, 463,
	0, 466, 467, 468, 469, 470, 288, 919, 0, 472,
	962, 963, 964, 965, 0, 479, 0, 473, 474, 1017,
	475, 1018, 895, 476, 477, 478, 0, 480, 481, 0,
	879, 482, 483, 484, 486, 487, 485, 489, 983, 490,
	0, 927, 491, 492, 493, 546, 959, 1011, 0, 495,
	494, 549, 0, 0, 0, 0, 496, 497, 550, 498,
	499, 500, 876, 0, 0, 0, 0, 0, 874, 0,
	0, 0, 0, 0, 0, 872, 873, 0, 0, 0,
	0, 0, 0, 0, 901, 0, 0, 1256, 899, 932,
	889, 890, 891, 887, 888, 900, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 224, 225, 226, 227,
	228, 0, 229, 0, 0, 0, 0, 0, 985, 905,
	0, 0, 0, 230, 232, 231, 233, 234, 502, 947,
	926, 958, 238, 916, 957, 956, 0, 239, 240, 918,
	917, 243, 244, 245, 907, 984, 246, 1021, 1022, 508,
	0, 247, 248, 991, 0, 972, 0, 249, 250, 251,
	252, 253, 254, 0, 0, 256, 257, 258, 255, 0,
	259, 0, 260, 261, 262, 0, 263, 994, 264, 265,
	975, 973, 974, 981, 977, 976, 980, 266, 267, 268,
	269, 961, 271, 954, 953, 878, 272, 273, 0, 275,
	274, 0, 276, 0, 0, 277, 952, 279, 0, 280,
	0, 281, 282, 0, 283, 884, 284, 285, 287, 289,
	286, 290, 291, 292, 293, 1012, 1013, 896, 221, 0,
	0, 0, 0, 0, 294, 295, 296, 951, 949, 950,
	0, 299, 0, 300, 0, 0, 995, 301, 966, 967,
	302, 303, 0, 304, 1019, 0, 906, 305, 0, 306,
	307, 308, 309, 1255, 987, 990, 369, 997, 310, 311,
	0, 312, 313, 314, 928, 0, 0, 222, 315, 317,
	324, 0, 996, 318, 940, 931, 942, 944, 945, 946,
	941, 0, 933, 0, 325, 998, 988, 999, 326, 327,
	328, 1000, 968, 969, 0, 0, 331, 332, 333, 334,
	335, 0, 337, 336, 0, 338, 1020, 1001, 339, 340,
	1002, 0, 341, 342, 343, 979, 978, 344, 345, 346,
	347, 0, 348, 349, 351, 353, 350, 352, 357, 354,
	355, 356, 359, 920, 358, 1003, 361, 362, 365, 366,
	364, 1004, 363, 875, 223, 1005, 367, 897, 989, 368,
	955, 370, 371, 0, 929, 373, 930, 0, 0, 376,
	377, 378, 0, 0, 379, 380, 530, 1006, 381, 1007,
	1014, 382, 375, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 391, 532, 533, 1015, 392, 535, 393, 394,
	0, 395, 0, 396, 397, 398, 399, 400, 401, 402,
	948, 403, 404, 0, 405, 406, 407, 408, 409, 410,
	0, 412, 413, 414, 411, 415, 416, 417, 418, 0,
	419, 1008, 420, 421, 422, 423, 885, 424, 0, 425,
	429, 430, 431, 432, 433, 434, 435, 0, 441, 442,
	921, 922, 924, 925, 437, 443, 444, 445, 982, 446,
	426, 427, 447, 448, 1009, 449, 450, 943, 923, 452,
	0, 453, 454, 455, 456, 428, 457, 461, 993, 458,
	459, 460, 1016, 0, 464, 465, 463, 0, 466, 467,
	468, 469, 470, 288, 919, 0, 472, 962, 963, 964,
	965, 0, 479, 0, 473, 474, 1017, 475, 1018, 895,
	476, 477, 478, 0, 480, 481, 0, 879, 482, 483,
	484, 486, 487, 485, 489, 983, 490, 0, 927, 491,
	492, 493, 546, 959, 1011, 0, 495, 494, 549, 0,
	0, 0, 0, 496, 497, 550, 498, 499, 500, 876,
	0, 0, 0, 0, 0, 874, 0, 0, 0, 0,
	0, 0, 872, 873, 0, 0, 0, 0, 0, 0,
	0, 901, 0, 0, 1251, 899, 932, 889, 890, 891,
	887, 888, 900, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 224, 225, 226, 227, 228, 0, 229,
	0, 0, 0, 0, 0, 985, 905, 0, 0, 0,
	230, 232, 231, 233, 234, 502, 947, 926, 958, 238,
	916, 957, 956, 0, 239, 240, 918, 917, 243, 244,
	245, 907, 984, 246, 1021, 1022, 508, 0, 247, 248,
	991, 0, 972, 0, 249, 250, 251, 252, 253, 254,
	0, 0, 256, 257, 258, 255, 0, 259, 0, 260,
	261, 262, 0, 263, 994, 264, 265, 975, 973, 974,
	981, 977, 976, 980, 266, 267, 268, 269, 961, 271,
	954, 953, 878, 272, 273, 0, 275, 274, 0, 276,
	0, 0, 277, 952, 279, 0, 280, 0, 281, 282,
	0, 283, 884, 284, 285, 287, 289, 286, 290, 291,
	292, 293, 1012, 1013, 896, 221, 0, 0, 0, 0,
	0, 294, 295, 296, 951, 949, 950, 0, 299, 0,
	300, 0, 0, 995, 301, 966, 967, 302, 303, 0,
	304, 1019, 0, 906, 305, 0, 306, 307, 308, 309,
	986, 987, 990, 369, 997, 310, 311, 0, 312, 313,
	314, 928, 0, 0, 222, 315, 317, 324, 0, 996,
	318, 940, 931, 942, 944, 945, 946, 941, 0, 933,
	0, 325, 998, 988, 999, 326, 327, 328, 1000, 968,
	969, 0, 0, 331, 332, 333, 334, 335, 0, 337,
	336, 0, 338, 1020, 1001, 339, 340, 1002, 0, 341,
	342, 343, 979, 978, 344, 345, 346, 347, 0, 348,
	349, 351, 353, 350, 352, 357, 354, 355, 356, 359,
	920, 358, 1003, 361, 362, 365, 366, 364, 1004, 363,
	875, 223, 1005, 367, 897, 989, 368, 955, 370, 371,
	0, 929, 373, 930, 0, 0, 376, 377, 378, 0,
	0, 379, 380, 530, 1006, 381, 1007, 1014, 382, 375,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 391,
	532, 533, 1015, 392, 535, 393, 394, 0, 395, 0,
	396, 397, 398, 399, 400, 401, 402, 948, 403, 404,
	0, 405, 406, 407, 408, 409, 410, 0, 412, 413,
	414, 411, 415, 416, 417, 418, 0, 419, 1008, 420,
	421, 422, 423, 885, 424, 0, 425, 429, 430, 431,
	432, 433, 434, 435, 0, 441, 442, 921, 922, 924,
	925, 437, 443, 444, 445, 982, 446, 426, 427, 447,
	448, 1009, 449, 450, 943, 923, 452, 0, 453, 454,
	455, 456, 428, 457, 461, 993, 458, 459, 460, 1016,
	0, 464, 465, 463, 0, 466, 467, 468, 469, 470,
	288, 919, 0, 472, 962, 963, 964, 965, 0, 479,
	0, 473, 474, 1017, 475, 1018, 895, 476, 477, 478,
	0, 480, 481, 0, 879, 482, 483, 484, 486, 487,
	485, 489, 983, 490, 0, 927, 491, 492, 493, 546,
	959, 1011, 0, 495, 494, 549, 0, 0, 0, 0,
	496, 497, 550, 498, 499, 500, 876, 0, 0, 0,
	0, 0, 874, 0, 0, 0, 0, 0, 0, 872,
	873, 932, 889, 890, 891, 887, 888, 900, 901, 0,
	0, 0, 899, 0, 0, 0, 0, 0, 224, 225,
	226, 227, 228, 0, 229, 0, 0, 0, 0, 0,
	985, 905, 0, 0, 0, 230, 232, 231, 233, 234,
	502, 947, 926, 958, 238, 916, 957, 956, 0, 239,
	240, 918, 917, 243, 244, 245, 907, 984, 246, 1021,
	1022, 508, 0, 247, 248, 991, 0, 972, 0, 249,
	250, 251, 252, 253, 254, 0, 0, 256, 257, 258,
	255, 0, 259, 0, 260, 261, 262, 0, 263, 994,
	264, 265, 975, 973, 974, 981, 977, 976, 980, 266,
	267, 268, 269, 961, 271, 954, 953, 878, 272, 273,
	0, 275, 274, 0, 276, 0, 0, 277, 952, 279,
	0, 280, 0, 281, 282, 0, 283, 884, 284, 285,
	287, 289, 286, 290, 291, 292, 293, 1012, 1013, 896,
	221, 0, 0, 0, 0, 0, 294, 295, 296, 951,
	949, 950, 0, 299, 0, 300, 0, 0, 995, 301,
	966, 967, 302, 303, 0, 304, 1019, 0, 906, 305,
	0, 306, 307, 308, 309, 986, 987, 990, 369, 997,
	310, 311, 0, 312, 313, 314, 928, 0, 0, 222,
	315, 317, 324, 0, 996, 318, 940, 931, 942, 944,
	945, 946, 941, 0, 933, 0, 325, 998, 988, 999,
	326, 327, 328, 1000, 968, 969, 0, 0, 331, 332,
	333, 334, 335, 0, 337, 336, 0, 338, 1020, 1001,
	339, 340, 1002, 0, 341, 342, 343, 979, 978, 344,
	345, 346, 347, 0, 348, 349, 351, 353, 350, 352,
	357, 354, 355, 356, 359, 920, 358, 1003, 361, 362,
	365, 366, 364, 1004, 363, 875, 223, 1005, 367, 897,
	989, 368, 955, 370, 371, 0, 929, 373, 930, 0,
	0, 376, 377, 378, 0, 0, 379, 380, 530, 1006,
	381, 1007, 1014, 382, 375, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 391, 532, 533, 1015, 392, 535,
	393, 394, 0, 395, 0, 396, 397, 398, 399, 400,
	401, 402, 948, 403, 404, 0, 405, 406, 407, 408,
	409, 410, 0, 412, 413, 414, 411, 415, 416, 417,
	418, 0, 419, 1008, 420, 421, 422, 423, 885, 424,
	0, 425, 429, 430, 431, 432, 433, 434, 435, 0,
	441, 442, 921, 922, 924, 925, 437, 443, 444, 445,
	982, 446, 426, 427, 447, 448, 1009, 449, 450, 943,
	923, 452, 0, 453, 454, 455, 456, 428, 457, 461,
	993, 458, 459, 460, 1016, 0, 464, 465, 463, 0,
	466, 467, 468, 469, 470, 288, 919, 0, 472, 962,
	963, 964, 965, 0, 479, 0, 473, 474, 1017, 475,
	1018, 895, 476, 477, 478, 0, 480, 481, 0, 879,
	482, 483, 484, 486, 487, 485, 489, 983, 490, 0,
	927, 491, 492, 493, 546, 959, 1011, 0, 495, 494,
	549, 0, 0, 0, 0, 496, 497, 550, 498, 499,
	500, 876, 0, 0, 0, 0, 0, 874, 0, 0,
	0, 0, 0, 0, 872, 873, 932, 889, 890, 891,
	887, 888, 900, 901, 0, 0, 0, 899, 0, 0,
	0, 0, 0, 224, 225, 226, 227, 228, 0, 229,
	0, 0, 0, 0, 0, 985, 905, 0, 0, 0,
	230, 232, 231, 233, 234, 502, 947, 926, 958, 238,
	916, 957, 956, 0, 239, 240, 918, 917, 243, 244,
	245, 907, 984, 246, 1021, 1022, 508, 0, 247, 248,
	991, 0, 972, 0, 249, 250, 251, 252, 253, 254,
	0, 0, 256, 257, 258, 255, 0, 259, 0, 260,
	261, 262, 0, 263, 994, 264, 3708, 975, 973, 974,
	981, 977, 976, 980, 266, 267, 268, 269, 961, 271,
	954, 953, 878, 272, 273, 0, 275, 274, 0, 276,
	0, 0, 277, 952, 279, 0, 280, 0, 281, 282,
	0, 283, 884, 284, 285, 287, 289, 286, 290, 291,
	292, 293, 1012, 1013, 896, 221, 0, 0, 0, 0,
	0, 294, 295, 296, 951, 949, 950, 0, 299, 0,
	300, 0, 0, 995, 301, 966, 967, 302, 303, 0,
	304, 1019, 0, 906, 305, 0, 306, 307, 308, 309,
	986, 987, 990, 369, 997, 310, 311, 0, 312, 313,
	314, 928, 0, 0, 222, 315, 317, 324, 0, 996,
	318, 940, 931, 942, 944, 945, 946, 941, 0, 933,
	0, 325, 998, 988, 999, 326, 327, 328, 1000, 968,
	969, 0, 0, 331, 332, 333, 334, 335, 0, 337,
	336, 0, 338, 1020, 1001, 339, 340, 1002, 0, 341,
	342, 343, 979, 978, 344, 345, 346, 347, 0, 348,
	349, 351, 353, 350, 352, 357, 354, 355, 356, 359,
	920, 358, 1003, 361, 362, 365, 366, 364, 1004, 363,
	875, 223, 1005, 367, 897, 989, 368, 955, 370, 371,
	0, 929, 373, 930, 0, 0, 376, 377, 378, 0,
	0, 379, 380, 530, 1006, 381, 1007, 1014, 382, 375,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 391,
	532, 533, 1015, 392, 535, 393, 394, 0, 395, 0,
	396, 397, 398, 399, 400, 401, 402, 948, 403, 404,
	0, 405, 406, 407, 408, 409, 410, 0, 412, 413,
	414, 411, 415, 416, 417, 418, 0, 419, 1008, 420,
	421, 422, 423, 885, 424, 0, 425, 429, 430, 431,
	432, 433, 434, 435, 0, 441, 442, 921, 922, 924,
	925, 437, 443, 444, 445, 982, 446, 426, 427, 447,
	448, 1009, 449, 450, 943, 923, 452, 0, 453, 454,
	455, 456, 428, 457, 461, 993, 458, 459, 460, 1016,
	0, 464, 465, 463, 0, 466, 467, 468, 469, 470,
	288, 919, 0, 472, 962, 963, 964, 965, 0, 479,
	0, 473, 474, 1017, 475, 1018, 895, 476, 477, 478,
	0, 3707, 481, 0, 879, 482, 483, 484, 486, 487,
	485, 489, 983, 490, 0, 927, 491, 492, 493, 546,
	959, 1011, 0, 495, 494, 549, 0, 0, 0, 0,
	496, 497, 550, 498, 499, 500, 876, 0, 0, 0,
	0, 0, 874, 0, 0, 0, 0, 0, 0, 872,
	873, 932, 889, 890, 891, 887, 888, 900, 901, 0,
	0, 0, 899, 0, 0, 0, 0, 0, 224, 225,
	226, 227, 228, 0, 229, 0, 0, 0, 0, 0,
	985, 905, 0, 0, 0, 230, 232, 231, 233, 234,
	3706, 947, 926, 958, 238, 916, 957, 956, 0, 239,
	240, 918, 917, 243, 244, 245, 907, 984, 246, 1021,
	1022, 508, 0, 247, 248, 991, 0, 972, 0, 249,
	250, 251, 252, 253, 254, 0, 0, 256, 257, 258,
	255, 0, 259, 0, 260, 261, 262, 0, 263, 994,
	264, 3708, 975, 973, 974, 981, 977, 976, 980, 266,
	267, 268, 269, 961, 271, 954, 953, 878, 272, 273,
	0, 275, 274, 0, 276, 0, 0, 277, 952, 279,
	0, 280, 0, 281, 282, 0, 283, 884, 284, 285,
	287, 289, 286, 290, 291, 292, 293, 1012, 1013, 896,
	221, 0, 0, 0, 0, 0, 294, 295, 296, 951,
	949, 950, 0, 299, 0, 300, 0, 0, 995, 301,
	966, 967, 302, 303, 0, 304, 1019, 0, 906, 305,
	0, 306, 307, 308, 309, 986, 987, 990, 369, 997,
	310, 311, 0, 312, 313, 314, 928, 0, 0, 222,
	315, 317, 324, 0, 996, 318, 940, 931, 942, 944,
	945, 946, 941, 0, 933, 0, 325, 998, 988, 999,
	326, 327, 328, 1000, 968, 969, 0, 0, 331, 332,
	333, 334, 335, 0, 337, 336, 0, 338, 1020, 1001,
	339, 340, 1002, 0, 341, 342, 343, 979, 978, 344,
	345, 346, 347, 0, 348, 349, 351, 353, 350, 352,
	357, 354, 355, 356, 359, 920, 358, 1003, 361, 362,
	365, 366, 364, 1004, 363, 875, 223, 1005, 367, 897,
	989, 368, 955, 370, 371, 0, 929, 373, 930, 0,
	0, 376, 377, 378, 0, 0, 379, 380, 530, 1006,
	381, 1007, 1014, 382, 375, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 391, 532, 533, 1015, 392, 535,
	393, 394, 0, 395, 0, 396, 397, 398, 399, 400,
	401, 402, 948, 403, 404, 0, 405, 406, 407, 408,
	409, 410, 0, 412, 413, 414, 411, 415, 416, 417,
	418, 0, 419, 1008, 420, 421, 422, 423, 885, 424,
	0, 425, 429, 430, 431, 432, 433, 434, 435, 0,
	441, 442, 921, 922, 924, 925, 437, 443, 444, 445,
	982, 446, 426, 427, 447, 448, 1009, 449, 450, 943,
	923, 452, 0, 453, 454, 455, 456, 428, 457, 461,
	993, 458, 459, 460, 1016, 0, 464, 465, 463, 0,
	466, 467, 468, 469, 470, 288, 919, 0, 472, 962,
	963, 964, 965, 0, 479, 0, 473, 474, 1017, 475,
	1018, 895, 476, 477, 478, 0, 3707, 481, 0, 879,
	482, 483, 484, 486, 487, 485, 489, 983, 490, 0,
	927, 491, 492, 493, 546, 959, 1011, 0, 495, 494,
	549, 0, 0, 0, 0, 496, 497, 550, 498, 499,
	500, 876, 0, 0, 0, 0, 0, 874, 0, 0,
	0, 0, 0, 0, 872, 873, 932, 889, 890, 891,
	2602, 2603, 900, 901, 0, 0, 0, 899, 0, 0,
	0, 0, 0, 224, 225, 226, 227, 228, 0, 229,
	0, 0, 0, 0, 0, 985, 905, 0, 0, 0,
	230, 232, 231, 233, 234, 502, 947, 926, 958, 238,
	916, 957, 956, 0, 239, 240, 918, 917, 243, 244,
	245, 907, 984, 246, 1021, 1022, 508, 0, 247, 248,
	991, 0, 972, 0, 249, 250, 251, 252, 253, 254,
	0, 0, 256, 257, 258, 255, 0, 259, 0, 260,
	261, 262, 0, 263, 994, 264, 265, 975, 973, 974,
	981, 977, 976, 980, 266, 267, 268, 269, 961, 271,
	954, 953, 878, 272, 273, 0, 275, 274, 0, 276,
	0, 0, 277, 952, 279, 0, 280, 0, 281, 282,
	0, 283, 884, 284, 285, 287, 289, 286, 290, 291,
	292, 293, 1012, 1013, 896, 221, 0, 0, 0, 0,
	0, 294, 295, 296, 951, 949, 950, 0, 299, 0,
	300, 0, 0, 995, 301, 966, 967, 302, 303, 0,
	304, 1019, 0, 906, 305, 0, 306, 307, 308, 309,
	986, 987, 990, 369, 997, 310, 311, 0, 312, 313,
	314, 928, 0, 0, 222, 315, 317, 324, 0, 996,
	318, 940, 931, 942, 944, 945, 946, 941, 0, 933,
	0, 325, 998, 988, 999, 326, 327, 328, 1000, 968,
	969, 0, 0, 331, 332, 333, 334, 335, 0, 337,
	336, 0, 338, 1020, 1001, 339, 340, 1002, 0, 341,
	342, 343, 979, 978, 344, 345, 346, 347, 0, 348,
	349, 351, 353, 350, 352, 357, 354, 355, 356, 359,
	920, 358, 1003, 361, 362, 365, 366, 364, 1004, 363,
	875, 223, 1005, 367, 897, 989, 368, 955, 370, 371,
	0, 929, 373, 930, 0, 0, 376, 377, 378, 0,
	0, 379, 380, 530, 1006, 381, 1007, 1014, 382, 375,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 391,
	532, 533, 1015, 392, 535, 393, 394, 0, 395, 0,
	396, 397, 398, 399, 400, 401, 402, 948, 403, 404,
	0, 405, 406, 407, 408, 409, 410, 0, 412, 413,
	414, 411, 415, 416, 417, 418, 0, 419, 1008, 420,
	421, 422, 423, 885, 424, 0, 425, 429, 430, 431,
	432, 433, 434, 435, 0, 441, 442, 921, 922, 924,
	925, 437, 443, 444, 445, 982, 446, 426, 427, 447,
	448, 1009, 449, 450, 943, 923, 452, 0, 453, 454,
	455, 456, 428, 457, 461, 993, 458, 459, 460, 1016,
	0, 464, 465, 463, 0, 466, 467, 468, 469, 470,
	288, 919, 0, 472, 962, 963, 964, 965, 0, 479,
	0, 473, 474, 1017, 475, 1018, 895, 476, 477, 478,
	0, 480, 481, 0, 879, 482, 483, 484, 486, 487,
	485, 489, 983, 490, 0, 927, 491, 492, 493, 546,
	959, 1011, 0, 495, 494, 549, 0, 0, 0, 0,
	496, 497, 550, 498, 499, 500, 876, 0, 0, 0,
	0, 0, 874, 0, 0, 0, 0, 0, 0, 872,
	873, 932, 889, 890, 891, 2600, 2601, 900, 901, 0,
	0, 0, 899, 0, 0, 0, 0, 0, 224, 225,
	226, 227, 228, 0, 229, 0, 0, 0, 0, 0,
	985, 905, 0, 0, 0, 230, 232, 231, 233, 234,
	502, 947, 926, 958, 238, 916, 957, 956, 0, 239,
	240, 918, 917, 243, 244, 245, 907, 984, 246, 1021,
	1022, 508, 0, 247, 248, 991, 0, 972, 0, 249,
	250, 251, 252, 253, 254, 0, 0, 256, 257, 258,
	255, 0, 259, 0, 260, 261, 262, 0, 263, 994,
	264, 265, 975, 973, 974, 981, 977, 976, 980, 266,
	267, 268, 269, 961, 271, 954, 953, 878, 272, 273,
	0, 275, 274, 0, 276, 0, 0, 277, 952, 279,
	0, 280, 0, 281, 282, 0, 283, 884, 284, 285,
	287, 289, 286, 290, 291, 292, 293, 1012, 1013, 896,
	221, 0, 0, 0, 0, 0, 294, 295, 296, 951,
	949, 950, 0, 299, 0, 300, 0, 0, 995, 301,
	966, 967, 302, 303, 0, 304, 1019, 0, 906, 305,
	0, 306, 307, 308, 309, 986, 987, 990, 369, 997,
	310, 311, 0, 312, 313, 314, 928, 0, 0, 222,
	315, 317, 324, 0, 996, 318, 940, 931, 942, 944,
	945, 946, 941, 0, 933, 0, 325, 998, 988, 999,
	326, 327, 328, 1000, 968, 969, 0, 0, 331, 332,
	333, 334, 335, 0, 337, 336, 0, 338, 1020, 1001,
	339, 340, 1002, 0, 341, 342, 343, 979, 978, 344,
	345, 346, 347, 0, 348, 349, 351, 353, 350, 352,
	357, 354, 355, 356, 359, 920, 358, 1003, 361, 362,
	365, 366, 364, 1004, 363, 875, 223, 1005, 367, 897,
	989, 368, 955, 370, 371, 0, 929, 373, 930, 0,
	0, 376, 377, 378, 0, 0, 379, 380, 530, 1006,
	381, 1007, 1014, 382, 375, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 391, 532, 533, 1015, 392, 535,
	393, 394, 0, 395, 0, 396, 397, 398, 399, 400,
	401, 402, 948, 403, 404, 0, 405, 406, 407, 408,
	409, 410, 0, 412, 413, 414, 411, 415, 416, 417,
	418, 0, 419, 1008, 420, 421, 422, 423, 885, 424,
	0, 425, 429, 430, 431, 432, 433, 434, 435, 0,
	441, 442, 921, 922, 924, 925, 437, 443, 444, 445,
	982, 446, 426, 427, 447, 448, 1009, 449, 450, 943,
	923, 452, 0, 453, 454, 455, 456, 428, 457, 461,
	993, 458, 459, 460, 1016, 0, 464, 465, 463, 0,
	466, 467, 468, 469, 470, 288, 919, 0, 472, 962,
	963, 964, 965, 0, 479, 0, 473, 474, 1017, 475,
	1018, 895, 476, 477, 478, 0, 480, 481, 0, 879,
	482, 483, 484, 486, 487, 485, 489, 983, 490, 0,
	927, 491, 492, 493, 546, 959, 1011, 0, 495, 494,
	549, 0, 0, 0, 0, 496, 497, 550, 498, 499,
	500, 876, 0, 0, 0, 0, 0, 874, 0, 0,
	0, 0, 0, 0, 872, 873, 932, 889, 890, 891,
	887, 888, 900, 901, 0, 0, 0, 899, 0, 0,
	0, 0, 0, 224, 225, 226, 227, 228, 0, 229,
	0, 0, 0, 0, 0, 985, 905, 0, 0, 0,
	230, 232, 231, 233, 234, 502, 947, 926, 958, 238,
	916, 957, 956, 0, 239, 240, 918, 917, 243, 244,
	245, 907, 984, 246, 1021, 1022, 508, 0, 247, 248,
	991, 0, 972, 0, 249, 250, 251, 252, 253, 254,
	0, 0, 256, 257, 258, 255, 0, 259, 0, 260,
	261, 262, 0, 263, 994, 264, 265, 975, 973, 974,
	981, 977, 976, 980, 266, 267, 268, 269, 961, 271,
	954, 953, 878, 272, 273, 0, 275, 274, 0, 276,
	0, 0, 277, 952, 279, 0, 280, 0, 281, 282,
	0, 283, 884, 284, 285, 287, 289, 286, 290, 291,
	292, 293, 1012, 1013, 896, 221, 0, 0, 0, 0,
	0, 294, 295, 296, 951, 949, 950, 0, 299, 0,
	300, 0, 0, 995, 301, 966, 967, 302, 303, 0,
	304, 1019, 0, 906, 305, 0, 306, 307, 308, 309,
	986, 987, 990, 369, 997, 310, 311, 0, 312, 313,
	314, 928, 0, 0, 222, 315, 317, 324, 0, 996,
	318, 940, 931, 942, 944, 945, 946, 941, 0, 933,
	0, 325, 998, 988, 999, 326, 327, 328, 1000, 968,
	969, 0, 0, 331, 332, 333, 334, 335, 0, 337,
	336, 0, 338, 1020, 1001, 339, 340, 1002, 0, 341,
	342, 343, 979, 978, 344, 345, 346, 347, 0, 348,
	349, 351, 353, 350, 352, 357, 354, 355, 356, 359,
	920, 358, 1003, 361, 362, 365, 366, 364, 1004, 363,
	875, 223, 1005, 367, 897, 989, 368, 955, 370, 371,
	0, 929, 373, 930, 0, 0, 376, 377, 378, 0,
	0, 379, 380, 530, 1006, 381, 1007, 1014, 382, 375,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 391,
	532, 533, 1015, 392, 535, 393, 394, 0, 395, 0,
	396, 397, 398, 399, 400, 401, 402, 948, 403, 404,
	0, 405, 406, 407, 408, 409, 410, 0, 412, 413,
	414, 411, 415, 416, 417, 418, 0, 419, 1008, 420,
	421, 422, 423, 885, 424, 0, 425, 429, 430, 431,
	432, 433, 434, 435, 0, 441, 442, 921, 922, 924,
	925, 437, 443, 444, 445, 982, 446, 426, 427, 447,
	448, 1009, 449, 450, 943, 923, 452, 0, 453, 454,
	455, 456, 428, 457, 461, 993, 458, 459, 460, 1016,
	0, 464, 465, 463, 0, 466, 467, 468, 469, 470,
	288, 919, 0, 472, 962, 963, 964, 965, 0, 479,
	0, 473, 474, 1017, 475, 1018, 895, 476, 477, 478,
	0, 480, 481, 0, 879, 482, 483, 484, 486, 487,
	485, 489, 983, 490, 0, 927, 491, 492, 493, 546,
	959, 1011, 0, 495, 494, 549, 0, 0, 0, 0,
	496, 497, 550, 498, 499, 500, 876, 0, 0, 0,
	0, 0, 874, 0, 0, 0, 0, 0, 0, 2051,
	2052, 932, 889, 890, 891, 887, 888, 900, 901, 0,
	0, 0, 899, 0, 0, 0, 0, 0, 224, 225,
	226, 227, 228, 0, 229, 0, 0, 0, 0, 0,
	985, 905, 0, 0, 0, 230, 232, 231, 233, 234,
	502, 947, 926, 958, 238, 916, 957, 956, 0, 239,
	240, 918, 917, 243, 244, 245, 907, 984, 246, 1021,
	1022, 508, 0, 247, 248, 991, 0, 972, 0, 249,
	250, 251, 252, 253, 254, 0, 0, 256, 257, 258,
	255, 0, 259, 0, 260, 261, 262, 0, 263, 994,
	264, 265, 975, 973, 974, 981, 977, 976, 980, 266,
	267, 268, 269, 961, 271, 954, 953, 0, 272, 273,
	0, 275, 274, 0, 276, 0, 0, 277, 952, 279,
	0, 280, 0, 281, 282, 0, 283, 884, 284, 285,
	287, 289, 286, 290, 291, 292, 293, 1012, 1013, 896,
	221, 0, 0, 0, 0, 0, 294, 295, 296, 951,
	949, 950, 0, 299, 0, 300, 0, 0, 995, 301,
	966, 967, 302, 303, 0, 304, 1019, 0, 906, 305,
	0, 306, 307, 308, 309, 986, 987, 990, 369, 997,
	310, 311, 0, 312, 313, 314, 928, 0, 0, 222,
	315, 317, 324, 0, 996, 318, 940, 931, 942, 944,
	945, 946, 941, 0, 933, 0, 325, 998, 988, 999,
	326, 327, 328, 1000, 968, 969, 0, 0, 331, 332,
	333, 334, 335, 0, 337, 336, 0, 338, 1020, 1001,
	339, 340, 1002, 0, 341, 342, 343, 979, 978, 344,
	345, 346, 347, 0, 348, 349, 351, 353, 350, 352,
	357, 354, 355, 356, 359, 920, 358, 1003, 361, 362,
	365, 366, 364, 1004, 363, 0, 223, 1005, 367, 897,
	989, 368, 955, 370, 371, 0, 929, 373, 930, 0,
	0, 376, 377, 378, 0, 0, 379, 380, 530, 1006,
	381, 1007, 1014, 382, 375, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 391, 532, 533, 1015, 392, 535,
	393, 394, 0, 395, 0, 396, 397, 398, 399, 400,
	401, 402, 948, 403, 404, 0, 405, 406, 407, 408,
	409, 410, 0, 412, 413, 414, 411, 415, 416, 417,
	418, 0, 419, 1008, 420, 421, 422, 423, 885, 424,
	0, 425, 429, 430, 431, 432, 433, 434, 435, 0,
	441, 442, 921, 922, 924, 925, 437, 443, 444, 445,
	982, 446, 426, 427, 447, 448, 1009, 449, 450, 943,
	923, 452, 0, 453, 454, 455, 456, 428, 457, 461,
	993, 458, 459, 460, 1016, 0, 464, 465, 463, 0,
	466, 467, 468, 469, 470, 288, 919, 0, 472, 962,
	963, 964, 965, 0, 479, 0, 473, 474, 1017, 475,
	1018, 895, 476, 477, 478, 0, 480, 481, 0, 0,
	482, 483, 484, 486, 487, 485, 489, 983, 490, 0,
	927, 491, 492, 493, 546, 959, 1011, 0, 495, 494,
	549, 0, 0, 0, 0, 496, 497, 550, 498, 499,
	500, 0, 0, 0, 0, 0, 0, 2247, 0, 0,
	0, 0, 0, 0, 2245, 2246, 932, 889, 890, 891,
	887, 888, 900, 901, 0, 0, 0, 899, 0, 0,
	0, 0, 0, 224, 225, 226, 227, 228, 0, 229,
	0, 0, 0, 0, 0, 985, 905, 0, 0, 0,
	230, 232, 231, 233, 234, 502, 947, 926, 958, 238,
	916, 957, 956, 0, 239, 240, 918, 917, 243, 244,
	245, 907, 984, 246, 1021, 1022, 508, 0, 247, 248,
	991, 0, 972, 0, 249, 250, 251, 252, 253, 254,
	0, 0, 256, 257, 258, 255, 0, 259, 0, 260,
	261, 262, 0, 263, 994, 264, 265, 975, 973, 974,
	981, 977, 976, 980, 266, 267, 268, 269, 961, 271,
	954, 953, 0, 272, 273, 0, 275, 274, 0, 276,
	0, 0, 277, 952, 279, 0, 280, 0, 281, 282,
	0, 283, 884, 284, 285, 287, 289, 286, 290, 291,
	292, 293, 1012, 1013, 896, 221, 0, 0, 0, 0,
	0, 294, 295, 296, 951, 949, 950, 0, 299, 0,
	300, 0, 0, 995, 301, 966, 967, 302, 303, 0,
	304, 1019, 0, 906, 305, 0, 306, 307, 308, 309,
	986, 987, 990, 369, 997, 310, 311, 0, 312, 313,
	314, 928, 0, 0, 222, 315, 317, 324, 0, 996,
	318, 940, 931, 942, 944, 945, 946, 941, 0, 933,
	0, 325, 998, 988, 999, 326, 327, 328, 1000, 968,
	969, 0, 0, 331, 332, 333, 334, 335, 0, 337,
	336, 0, 338, 1020, 1001, 339, 340, 1002, 0, 341,
	342, 343, 979, 978, 344, 345, 346, 347, 0, 348,
	349, 351, 353, 350, 352, 357, 354, 355, 356, 359,
	920, 358, 1003, 361, 362, 365, 366, 364, 1004, 363,
	0, 223, 1005, 367, 897, 989, 368, 955, 370, 371,
	0, 929, 373, 930, 0, 0, 376, 377, 378, 0,
	0, 379, 380, 530, 1006, 381, 1007, 1014, 382, 375,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 391,
	532, 533, 1015, 392, 535, 393, 394, 0, 395, 0,
	396, 397, 398, 399, 400, 401, 402, 948, 403, 404,
	0, 405, 406, 407, 408, 409, 410, 0, 412, 413,
	414, 411, 415, 416, 417, 418, 0, 419, 1008, 420,
	421, 422, 423, 2595, 2596, 0, 425, 429, 430, 431,
	432, 433, 434, 435, 0, 441, 442, 921, 922, 924,
	925, 437, 443, 444, 445, 982, 446, 426, 427, 447,
	448, 1009, 449, 450, 943, 923, 452, 0, 453, 454,
	455, 456, 428, 457, 461, 993, 458, 459, 460, 1016,
	0, 464, 465, 463, 0, 466, 467, 468, 469, 470,
	288, 919, 0, 472, 962, 963, 964, 965, 0, 479,
	0, 473, 474, 1017, 475, 1018, 895, 476, 477, 478,
	0, 480, 481, 0, 0, 482, 483, 484, 486, 487,
	485, 489, 983, 490, 0, 927, 491, 492, 493, 546,
	959, 1011, 0, 495, 494, 549, 0, 0, 0, 0,
	496, 497, 550, 498, 499, 500, 932, 889, 890, 891,
	887, 888, 900, 0, 0, 0, 0, 0, 0, 1804,
	1805, 0, 0, 224, 225, 226, 227, 228, 901, 229,
	0, 0, 899, 0, 0, 985, 905, 0, 0, 0,
	230, 232, 231, 233, 234, 502, 947, 926, 958, 238,
	916, 957, 956, 0, 239, 240, 918, 917, 243, 244,
	245, 0, 984, 246, 1021, 1022, 508, 0, 247, 248,
	991, 0, 972, 0, 249, 250, 251, 252, 253, 254,
	0, 0, 256, 257, 258, 255, 0, 259, 0, 260,
	261, 262, 0, 263, 994, 264, 265, 975, 973, 974,
	981, 977, 976, 980, 266, 267, 268, 269, 961, 271,
	954, 953, 0, 272, 273, 0, 275, 274, 0, 276,
	0, 0, 277, 952, 279, 0, 280, 0, 281, 282,
	0, 283, 512, 284, 285, 287, 289, 286, 290, 291,
	292, 293, 1012, 1013, 896, 221, 0, 0, 0, 0,
	0, 294, 295, 296, 951, 949, 950, 0, 299, 0,
	300, 0, 0, 995, 301, 966, 967, 302, 303, 0,
	304, 1019, 0, 906, 305, 0, 306, 307, 308, 309,
	986, 987, 990, 369, 997, 310, 311, 0, 312, 313,
	314, 928, 0, 0, 222, 315, 317, 324, 0, 996,
	318, 940, 931, 942, 944, 945, 946, 941, 0, 933,
	0, 325, 998, 988, 999, 326, 327, 328, 1000, 968,
	969, 0, 0, 331, 332, 333, 334, 335, 0, 337,
	336, 0, 338, 1020, 1001, 339, 340, 1002, 0, 341,
	342, 343, 979, 978, 344, 345, 346, 347, 0, 348,
	349, 351, 353, 350, 352, 357, 354, 355, 356, 359,
	920, 358, 1003, 361, 362, 365, 366, 364, 1004, 363,
	0, 223, 1005, 367, 897, 989, 368, 955, 370, 371,
	0, 929, 373, 930, 0, 0, 376, 377, 378, 0,
	0, 379, 380, 530, 1006, 381, 1007, 1014, 382, 375,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 391,
	532, 533, 1015, 392, 535, 393, 394, 0, 395, 0,
	396, 397, 398, 399, 400, 401, 402, 948, 403, 404,
	0, 405, 406, 407, 408, 409, 410, 0, 412, 413,
	414, 411, 415, 416, 417, 418, 0, 419, 1008, 420,
	421, 422, 423, 885, 424, 0, 425, 429, 430, 431,
	432, 433, 434, 435, 0, 441, 442, 921, 922, 924,
	925, 437, 443, 444, 445, 982, 446, 426, 427, 447,
	448, 1009, 449, 450, 943, 923, 452, 0, 453, 454,
	455, 456, 428, 457, 461, 993, 458, 459, 460, 1016,
	0, 464, 465, 463, 0, 466, 467, 468, 469, 470,
	288, 919, 0, 472, 962, 963, 964, 965, 0, 479,
	0, 473, 474, 1017, 475, 1018, 895, 476, 477, 478,
	0, 480, 481, 0, 0, 482, 483, 484, 486, 487,
	485, 489, 983, 490, 0, 927, 491, 492, 493, 546,
	959, 1011, 0, 495, 494, 549, 0, 0, 0, 0,
	496, 497, 550, 498, 499, 500, 932, 889, 890, 891,
	887, 888, 900, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 224, 225, 226, 227, 228, 901, 229,
	0, 0, 899, 0, 0, 985, 905, 0, 0, 0,
	230, 232, 231, 233, 234, 0, 947, 926, 958, 238,
	916, 957, 956, 0, 239, 240, 918, 917, 243, 244,
	245, 907, 984, 246, 1021, 1022, 508, 0, 247, 248,
	991, 0, 972, 0, 249, 250, 251, 252, 253, 254,
	0, 0, 256, 257, 258, 255, 0, 259, 0, 260,
	261, 262, 0, 263, 994, 264, 3708, 975, 973, 974,
	981, 977, 976, 980, 266, 267, 268, 269, 961, 271,
	954, 953, 878, 272, 273, 0, 275, 274, 0, 276,
	0, 0, 277, 952, 279, 0, 280, 0, 281, 282,
	0, 283, 884, 284, 285, 287, 289, 286, 290, 291,
	292, 293, 1012, 1013, 896, 221, 0, 0, 0, 0,
	0, 294, 295, 296, 951, 949, 950, 0, 299, 0,
	300, 0, 0, 995, 301, 966, 967, 302, 303, 0,
	304, 1019, 0, 906, 305, 0, 306, 307, 308, 309,
	986, 987, 990, 369, 0, 310, 311, 0, 312, 313,
	314, 928, 0, 0, 222, 315, 317, 324, 0, 996,
	318, 940, 931, 942, 944, 945, 946, 941, 0, 933,
	0, 325, 0, 988, 0, 326, 327, 328, 1000, 968,
	969, 0, 0, 331, 332, 333, 334, 335, 0, 337,
	336, 0, 338, 1020, 1001, 339, 340, 0, 0, 341,
	342, 343, 979, 978, 344, 345, 346, 347, 0, 348,
	349, 351, 353, 350, 352, 357, 354, 355, 356, 359,
	920, 358, 1003, 361, 362, 365, 366, 364, 1004, 363,
	875, 223, 0, 367, 897, 989, 368, 955, 370, 371,
	0, 929, 373, 930, 0, 0, 376, 377, 378, 0,
	0, 379, 380, 530, 1006, 381, 1007, 1014, 382, 375,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 391,
	532, 533, 1015, 392, 535, 393, 394, 0, 395, 0,
	396, 397, 398, 399, 400, 401, 402, 948, 403, 404,
	0, 405, 406, 407, 408, 409, 410, 0, 412, 413,
	414, 411, 415, 416, 417, 418, 0, 419, 1008, 420,
	421, 422, 423, 885, 424, 0, 425, 429, 430, 431,
	432, 433, 434, 435, 0, 441, 442, 921, 922, 924,
	925, 437, 443, 444, 445, 982, 446, 426, 427, 447,
	448, 0, 449, 450, 943, 923, 452, 0, 453, 454,
	455, 456, 428, 457, 461, 993, 458, 459, 460, 1016,
	0, 464, 465, 463, 0, 466, 467, 468, 469, 470,
	288, 919, 0, 472, 962, 963, 964, 965, 0, 479,
	0, 473, 474, 1017, 475, 1018, 895, 476, 477, 478,
	0, 3707, 481, 0, 879, 482, 483, 484, 486, 487,
	485, 489, 983, 490, 0, 927, 491, 492, 493, 546,
	959, 1011, 0, 495, 494, 549, 0, 0, 0, 0,
	496, 497, 550, 498, 499, 500, 0, 0, 0, 0,
	0, 0, 0, 0, 865, 0, 1059, 0, 0, 872,
	873, 0, 0, 0, 0, 0, 0, 0, 901, 0,
	0, 0, 899, 224, 225, 226, 227, 228, 0, 229,
	0, 0, 0, 0, 0, 985, 0, 0, 0, 0,
	230, 232, 231, 233, 234, 502, 503, 235, 504, 238,
	236, 237, 505, 0, 239, 240, 241, 242, 243, 244,
	245, 0, 984, 246, 506, 507, 508, 0, 247, 248,
	991, 0, 972, 0, 249, 250, 251, 252, 253, 254,
	0, 0, 256, 257, 258, 255, 0, 259, 0, 260,
	261, 262, 0, 263, 994, 264, 265, 975, 973, 974,
	981, 977, 976, 980, 266, 267, 268, 269, 270, 271,
	510, 511, 0, 272, 273, 0, 275, 274, 0, 276,
	0, 0, 277, 278, 279, 0, 280, 0, 281, 282,
	0, 283, 512, 284, 285, 287, 289, 286, 290, 291,
	292, 293, 1012, 1013, 0, 221, 0, 0, 0, 0,
	0, 294, 295, 296, 515, 297, 298, 0, 299, 0,
	300, 0, 0, 995, 301, 516, 517, 302, 303, 0,
	304, 1019, 0, 519, 305, 0, 306, 307, 308, 309,
	986, 987, 990, 369, 997, 310, 311, 0, 312, 313,
	314, 316, 0, 0, 222, 315, 317, 324, 0, 996,
	318, 523, 320, 319, 321, 322, 323, 524, 0, 525,
	0, 325, 998, 988, 999, 326, 327, 328, 1000, 329,
	330, 0, 0, 331, 332, 333, 334, 335, 1045, 337,
	336, 0, 338, 1020, 1001, 339, 340, 1002, 0, 341,
	342, 343, 979, 978, 344, 345, 346, 347, 0, 348,
	349, 351, 353, 350, 352, 357, 354, 355, 356, 359,
	360, 358, 1003, 361, 362, 365, 366, 364, 1004, 363,
	0, 223, 1005, 367, 0, 989, 368, 529, 370, 371,
	0, 372, 373, 374, 0, 1051, 376, 377, 378, 0,
	0, 379, 380, 530, 1006, 381, 1007, 1014, 382, 375,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 391,
	532, 533, 1015, 392, 535, 393, 394, 0, 395, 0,
	396, 397, 398, 399, 400, 401, 402, 536, 403, 404,
	0, 405, 406, 407, 408, 409, 410, 0, 412, 413,
	414, 411, 415, 416, 417, 418, 0, 419, 1008, 420,
	421, 422, 423, 537, 1053, 0, 425, 429, 430, 431,
	432, 433, 434, 435, 187, 441, 442, 436, 438, 439,
	440, 437, 443, 444, 445, 982, 446, 426, 427, 447,
	448, 1009, 449, 450, 538, 451, 452, 0, 453, 454,
	455, 456, 428, 457, 461, 462, 458, 459, 460, 1016,
	0, 464, 465, 463, 189, 466, 467, 468, 469, 470,
	288, 471, 0, 472, 540, 541, 542, 543, 0, 479,
	0, 473, 474, 1017, 475, 1018, 0, 476, 477, 478,
	0, 480, 481, 0, 0, 482, 483, 484, 486, 487,
	485, 489, 983, 490, 0, 488, 491, 492, 493, 1370,
	547, 548, 0, 495, 494, 549, 1059, 0, 0, 181,
	496, 497, 550, 498, 499, 500, 0, 182, 0, 0,
	0, 0, 0, 224, 225, 226, 227, 228, 0, 229,
	0, 0, 0, 0, 0, 985, 1049, 0, 1670, 0,
	230, 232, 231, 233, 234, 502, 503, 235, 504, 238,
	236, 237, 505, 0, 239, 240, 241, 242, 243, 244,
	245, 0, 984, 246, 506, 507, 508, 0, 247, 248,
	991, 0, 972, 0, 249, 250, 251, 252, 253, 254,
	0, 0, 256, 257, 258, 255, 0, 259, 0, 260,
	261, 262, 0, 263, 994, 264, 265, 975, 973, 974,
	981, 977, 976, 980, 266, 267, 268, 269, 270, 271,
	510, 511, 0, 272, 273, 0, 275, 274, 0, 276,
	0, 0, 277, 278, 279, 0, 280, 0, 281, 282,
	0, 283, 512, 284, 285, 287, 289, 286, 290, 291,
	292, 293, 1012, 1013, 0, 221, 0, 0, 0, 0,
	0, 294, 295, 296, 515, 297, 298, 0, 299, 0,
	300, 0, 0, 995, 301, 516, 517, 302, 303, 0,
	304, 1019, 0, 519, 305, 0, 306, 307, 308, 309,
	986, 987, 990, 369, 997, 310, 311, 0, 312, 313,
	314, 316, 0, 0, 222, 315, 317, 324, 0, 996,
	318, 523, 320, 319, 321, 322, 323, 524, 0, 525,
	0, 325, 998, 988, 999, 326, 327, 328, 1000, 329,
	330, 0, 0, 331, 332, 333, 334, 335, 1045, 337,
	336, 0, 338, 1020, 1001, 339, 340, 1002, 0, 341,
	342, 343, 979, 978, 344, 345, 346, 347, 0, 348,
	349, 351, 353, 350, 352, 357, 354, 355, 356, 359,
	360, 358, 1003, 361, 362, 365, 366, 364, 1004, 363,
	0, 223, 1005, 367, 0, 989, 368, 529, 370, 371,
	0, 372, 373, 374, 0, 1051, 376, 377, 378, 0,
	0, 379, 380, 530, 1006, 381, 1007, 1014, 382, 375,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 391,
	532, 533, 1015, 392, 535, 393, 394, 0, 395, 0,
	396, 397, 398, 399, 400, 401, 402, 536, 403, 404,
	0, 405, 406, 407, 408, 409, 410, 0, 412, 413,
	414, 411, 415, 416, 417, 418, 0, 419, 1008, 420,
	421, 422, 423, 537, 1053, 0, 425, 429, 430, 431,
	432, 433, 434, 435, 187, 441, 442, 436, 438, 439,
	440, 437, 443, 444, 445, 982, 446, 426, 427, 447,
	448, 1009, 449, 450, 538, 451, 452, 0, 453, 454,
	455, 456, 428, 457, 461, 462, 458, 459, 460, 1016,
	0, 464, 465, 463, 189, 466, 467, 468, 469, 470,
	288, 471, 0, 472, 540, 541, 542, 543, 0, 479,
	0, 473, 474, 1017, 475, 1018, 0, 476, 477, 478,
	0, 480, 481, 0, 0, 482, 483, 484, 486, 487,
	485, 489, 983, 490, 0, 488, 491, 492, 493, 1370,
	547, 548, 0, 495, 494, 549, 2752, 0, 1059, 181,
	496, 497, 550, 498, 499, 500, 0, 182, 0, 0,
	0, 0, 0, 0, 0, 224, 225, 226, 227, 228,
	0, 229, 0, 0, 0, 0, 1049, 985, 1670, 0,
	0, 0, 230, 232, 231, 233, 234, 502, 503, 235,
	504, 238, 236, 237, 505, 0, 239, 240, 241, 242,
	243, 244, 245, 0, 984, 246, 506, 507, 508, 0,
	247, 248, 991, 0, 972, 0, 249, 250, 251, 252,
	253, 254, 0, 0, 256, 257, 258, 255, 0, 259,
	0, 260, 261, 262, 0, 263, 994, 264, 265, 975,
	973, 974, 981, 977, 976, 980, 266, 267, 268, 269,
	270, 271, 510, 511, 0, 272, 273, 0, 275, 274,
	0, 276, 0, 0, 277, 278, 279, 0, 280, 0,
	281, 282, 0, 283, 512, 284, 285, 287, 289, 286,
	290, 291, 292, 293, 1012, 1013, 0, 221, 0, 0,
	0, 0, 0, 294, 295, 296, 515, 297, 298, 0,
	299, 0, 300, 0, 0, 995, 301, 516, 517, 302,
	303, 0, 304, 1019, 0, 519, 305, 0, 306, 307,
	308, 309, 986, 987, 990, 369, 997, 310, 311, 0,
	312, 313, 314, 316, 0, 0, 222, 315, 317, 324,
	0, 996, 318, 523, 320, 319, 321, 322, 323, 524,
	0, 525, 0, 325, 998, 988, 999, 326, 327, 328,
	1000, 329, 330, 0, 0, 331, 332, 333, 334, 335,
	1045, 337, 336, 0, 338, 1020, 1001, 339, 340, 1002,
	0, 341, 342, 343, 979, 978, 344, 345, 346, 347,
	0, 348, 349, 351, 353, 350, 352, 357, 354, 355,
	356, 359, 360, 358, 1003, 361, 362, 365, 366, 364,
	1004, 363, 0, 223, 1005, 367, 0, 989, 368, 529,
	370, 371, 0, 372, 373, 374, 0, 1051, 376, 377,
	378, 0, 0, 379, 380, 530, 1006, 381, 1007, 1014,
	382, 375, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 391, 532, 533, 1015, 392, 535, 393, 394, 0,
	395, 0, 396, 397, 398, 399, 400, 401, 402, 536,
	403, 404, 0, 405, 406, 407, 408, 409, 410, 0,
	412, 413, 414, 411, 415, 416, 417, 418, 0, 419,
	1008, 420, 421, 422, 423, 537, 1053, 0, 425, 429,
	430, 431, 432, 433, 434, 435, 0, 441, 442, 436,
	438, 439, 440, 437, 443, 444, 445, 982, 446, 426,
	427, 447, 448, 1009, 449, 450, 538, 451, 452, 0,
	453, 454, 455, 456, 428, 457, 461, 462, 458, 459,
	460, 1016, 0, 464, 465, 463, 0, 466, 467, 468,
	469, 470, 288, 471, 0, 472, 540, 541, 542, 543,
	0, 479, 0, 473, 474, 1017, 475, 1018, 0, 476,
	477, 478, 0, 480, 481, 0, 0, 482, 483, 484,
	486, 487, 485, 489, 983, 490, 0, 488, 491, 492,
	493, 546, 547, 548, 0, 495, 494, 549, 1041, 0,
	1059, 0, 496, 497, 550, 498, 499, 500, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 224, 225, 226,
	227, 228, 0, 229, 0, 0, 0, 0, 1049, 985,
	1047, 0, 0, 0, 230, 232, 231, 233, 234, 502,
	503, 235, 504, 238, 236, 237, 505, 0, 239, 240,
	241, 242, 243, 244, 245, 0, 984, 246, 506, 507,
	508, 0, 247, 248, 991, 0, 972, 0, 249, 250,
	251, 252, 253, 254, 0, 0, 256, 257, 258, 255,
	0, 259, 0, 260, 261, 262, 0, 263, 994, 264,
	265, 975, 973, 974, 981, 977, 976, 980, 266, 267,
	268, 269, 270, 271, 510, 511, 0, 272, 273, 0,
	275, 274, 0, 276, 0, 0, 277, 278, 279, 0,
	280, 0, 281, 282, 0, 283, 512, 284, 285, 287,
	289, 286, 290, 291, 292, 293, 1012, 1013, 0, 221,
	0, 0, 0, 0, 0, 294, 295, 296, 515, 297,
	298, 0, 299, 0, 300, 0, 0, 995, 301, 516,
	517, 302, 303, 0, 304, 1019, 0, 519, 305, 0,
	306, 307, 308, 309, 986, 987, 990, 369, 997, 310,
	311, 0, 312, 313, 314, 316, 0, 0, 222, 315,
	317, 324, 0, 996, 318, 523, 320, 319, 321, 322,
	323, 524, 0, 525, 0, 325, 998, 988, 999, 326,
	327, 328, 1000, 329, 330, 0, 0, 331, 332, 333,
	334, 335, 1045, 337, 336, 0, 338, 1020, 1001, 339,
	340, 1002, 0, 341, 342, 343, 979, 978, 344, 345,
	346, 347, 0, 348, 349, 351, 353, 350, 352, 357,
	354, 355, 356, 359, 360, 358, 1003, 361, 362, 365,
	366, 364, 1004, 363, 0, 223, 1005, 367, 0, 989,
	368, 529, 370, 371, 0, 372, 373, 374, 0, 1051,
	376, 377, 378, 0, 0, 379, 380, 530, 1006, 381,
	1007, 1014, 382, 375, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 391, 532, 533, 1015, 392, 535, 393,
	394, 0, 395, 0, 396, 397, 398, 399, 400, 401,
	402, 536, 403, 404, 0, 405, 406, 407, 408, 409,
	410, 0, 412, 413, 414, 411, 415, 416, 417, 418,
	0, 419, 1008, 420, 421, 422, 423, 537, 1053, 0,
	425, 429, 430, 431, 432, 433, 434, 435, 0, 441,
	442, 436, 438, 439, 440, 437, 443, 444, 445, 982,
	446, 426, 427, 447, 448, 1009, 449, 450, 538, 451,
	452, 0, 453, 454, 455, 456, 428, 457, 461, 462,
	458, 459, 460, 1016, 0, 464, 465, 463, 0, 466,
	467, 468, 469, 470, 288, 471, 0, 472, 540, 541,
	542, 543, 0, 479, 0, 473, 474, 1017, 475, 1018,
	0, 476, 477, 478, 0, 480, 481, 0, 0, 482,
	483, 484, 486, 487, 485, 489, 983, 490, 0, 488,
	491, 492, 493, 546, 547, 548, 0, 495, 494, 549,
	1059, 0, 0, 0, 496, 497, 550, 498, 499, 500,
	0, 0, 0, 0, 0, 0, 0, 224, 225, 226,
	227, 228, 0, 229, 0, 0, 0, 0, 0, 985,
	1049, 0, 1047, 0, 230, 232, 231, 233, 234, 502,
	503, 235, 504, 238, 236, 237, 505, 0, 239, 240,
	241, 242, 243, 244, 245, 0, 984, 246, 506, 507,
	508, 0, 247, 248, 991, 0, 972, 0, 249, 250,
	251, 252, 253, 254, 0, 0, 256, 257, 258, 255,
	0, 259, 0, 260, 261, 262, 0, 263, 994, 264,
	265, 975, 973, 974, 981, 977, 976, 980, 266, 267,
	268, 269, 270, 271, 510, 511, 0, 272, 273, 0,
	275, 274, 0, 276, 0, 0, 277, 278, 279, 0,
	280, 0, 281, 282, 0, 283, 512, 284, 285, 287,
	289, 286, 290, 291, 292, 293, 1012, 1013, 0, 221,
	0, 0, 0, 0, 0, 294, 295, 296, 515, 297,
	298, 0, 299, 0, 300, 0, 0, 995, 301, 516,
	517, 302, 303, 0, 304, 1019, 0, 519, 305, 0,
	306, 307, 308, 309, 986, 987, 990, 369, 997, 310,
	311, 0, 312, 313, 314, 316, 0, 0, 222, 315,
	317, 324, 0, 996, 318, 523, 320, 319, 321, 322,
	323, 524, 0, 525, 0, 325, 998, 988, 999, 326,
	327, 328, 1000, 329, 330, 0, 0, 331, 332, 333,
	334, 335, 1045, 337, 336, 0, 338, 1020, 1001, 339,
	340, 1002, 0, 341, 342, 343, 979, 978, 344, 345,
	346, 347, 0, 348, 349, 351, 353, 350, 352, 357,
	354, 355, 356, 359, 360, 358, 1003, 361, 362, 365,
	366, 364, 1004, 363, 0, 223, 1005, 367, 0, 989,
	368, 529, 370, 371, 0, 372, 373, 374, 0, 1051,
	376, 377, 378, 0, 0, 379, 380, 530, 1006, 381,
	1007, 1014, 382, 375, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 391, 532, 533, 1015, 392, 535, 393,
	394, 0, 395, 0, 396, 397, 398, 399, 400, 401,
	402, 536, 403, 404, 0, 405, 406, 407, 408, 409,
	410, 0, 412, 413, 414, 411, 415, 416, 417, 418,
	0, 419, 1008, 420, 421, 422, 423, 537, 1053, 0,
	425, 429, 430, 431, 432, 433, 434, 435, 0, 441,
	442, 436, 438, 439, 440, 437, 443, 444, 445, 982,
	446, 426, 427, 447, 448, 1009, 449, 450, 538, 451,
	452, 0, 453, 454, 455, 456, 428, 457, 461, 462,
	458, 459, 460, 1016, 0, 464, 465, 463, 0, 466,
	467, 468, 469, 470, 288, 471, 0, 472, 540, 541,
	542, 543, 0, 479, 0, 473, 474, 1017, 475, 1018,
	0, 476, 477, 478, 0, 480, 481, 0, 0, 482,
	483, 484, 486, 487, 485, 489, 983, 490, 0, 488,
	491, 492, 493, 546, 547, 548, 0, 495, 494, 549,
	1059, 0, 0, 0, 496, 497, 550, 498, 499, 500,
	0, 0, 0, 0, 0, 0, 0, 224, 225, 226,
	227, 228, 0, 229, 0, 0, 0, 0, 0, 985,
	1049, 0, 1047, 0, 230, 232, 231, 233, 234, 502,
	503, 235, 504, 238, 236, 237, 505, 0, 239, 240,
	241, 242, 243, 244, 245, 0, 984, 246, 506, 507,
	508, 0, 247, 248, 991, 0, 972, 0, 249, 250,
	251, 252, 253, 254, 0, 0, 256, 257, 258, 255,
	0, 259, 0, 260, 261, 262, 0, 263, 994, 264,
	265, 975, 973, 974, 981, 977, 976, 980, 266, 267,
	268, 269, 270, 271, 510, 511, 0, 272, 273, 0,
	275, 274, 0, 276, 0, 0, 277, 278, 279, 0,
	280, 0, 281, 282, 0, 283, 512, 284, 285, 287,
	289, 286, 290, 291, 292, 293, 1012, 1013, 0, 221,
	0, 0, 0, 0, 0, 294, 295, 296, 515, 297,
	298, 0, 299, 0, 300, 0, 0, 995, 301, 516,
	517, 302, 303, 0, 304, 1019, 0, 519, 305, 0,
	306, 307, 308, 309, 986, 987, 990, 369, 997, 310,
	311, 0, 312, 313, 314, 316, 0, 0, 222, 315,
	317, 324, 0, 996, 318, 523, 320, 319, 321, 322,
	323, 524, 0, 525, 0, 325, 998, 988, 999, 326,
	327, 328, 1000, 329, 330, 0, 0, 331, 332, 333,
	334, 335, 0, 337, 336, 0, 338, 1020, 1001, 339,
	340, 1002, 0, 341, 342, 343, 979, 978, 344, 345,
	346, 347, 0, 348, 349, 351, 353, 350, 352, 357,
	354, 355, 356, 359, 360, 358, 1003, 361, 362, 365,
	366, 364, 1004, 363, 0, 223, 1005, 367, 0, 989,
	368, 529, 370, 371, 0, 372, 373, 374, 0, 0,
	376, 377, 378, 0, 0, 379, 380, 530, 1006, 381,
	1007, 1014, 382, 375, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 391, 532, 533, 1015, 392, 535, 393,
	394, 0, 395, 0, 396, 397, 398, 399, 400, 401,
	402, 536, 403, 404, 0, 405, 406, 407, 408, 409,
	410, 0, 412, 413, 414, 411, 415, 416, 417, 418,
	0, 419, 1008, 420, 421, 422, 423, 537, 1053, 0,
	425, 429, 430, 431, 432, 433, 434, 435, 0, 441,
	442, 436, 438, 439, 440, 437, 443, 444, 445, 982,
	446, 426, 427, 447, 448, 1009, 449, 450, 538, 451,
	452, 0, 453, 454, 455, 456, 428, 457, 461, 462,
	458, 459, 460, 1016, 0, 464, 465, 463, 0, 466,
	467, 468, 469, 470, 288, 471, 0, 472, 540, 541,
	542, 543, 0, 479, 0, 473, 474, 1017, 475, 1018,
	0, 476, 477, 478, 0, 480, 481, 0, 0, 482,
	483, 484, 486, 487, 485, 489, 983, 490, 0, 488,
	491, 492, 493, 546, 547, 548, 0, 495, 494, 549,
	865, 0, 1235, 0, 496, 497, 550, 498, 499, 500,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 224,
	225, 226, 227, 228, 0, 229, 0, 0, 0, 0,
	0, 501, 1569, 0, 0, 0, 230, 232, 231, 233,
	234, 502, 503, 235, 504, 238, 236, 237, 505, 0,
	239, 240, 241, 242, 243, 244, 245, 0, 0, 246,
	506, 507, 508, 0, 247, 248, 509, 0, 1126, 0,
	249, 250, 251, 252, 253, 254, 0, 0, 256, 257,
	258, 255, 0, 259, 0, 260, 261, 262, 0, 263,
	994, 264, 265, 0, 0, 0, 0, 0, 0, 0,
	266, 267, 268, 269, 270, 271, 510, 511, 0, 272,
	273, 0, 275, 274, 0, 276, 0, 0, 277, 278,
	279, 0, 280, 0, 281, 282, 0, 283, 512, 284,
	285, 287, 289, 286, 290, 291, 292, 293, 513, 514,
	0, 221, 0, 0, 0, 0, 0, 294, 295, 296,
	515, 297, 298, 0, 299, 0, 300, 0, 0, 995,
	301, 516, 517, 302, 303, 0, 304, 518, 0, 519,
	305, 0, 306, 307, 308, 309, 520, 521, 522, 369,
	997, 310, 311, 0, 312, 313, 314, 316, 0, 0,
	0, 315, 317, 324, 0, 996, 318, 523, 320, 319,
	321, 322, 323, 524, 0, 525, 0, 325, 998, 526,
	999, 326, 327, 328, 1000, 329, 330, 0, 0, 331,
	332, 333, 334, 335, 0, 337, 336, 0, 338, 527,
	1001, 339, 340, 1002, 0, 341, 342, 343, 0, 0,
	344, 345, 346, 347, 0, 348, 349, 351, 353, 350,
	352, 357, 354, 355, 356, 359, 360, 358, 1003, 361,
	362, 365, 366, 364, 1004, 363, 0, 0, 1005, 367,
	0, 528, 368, 529, 370, 371, 0, 372, 373, 374,
	0, 0, 376, 377, 378, 0, 0, 379, 380, 530,
	1006, 381, 1007, 531, 382, 375, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 391, 532, 533, 534, 392,
	535, 393, 394, 0, 395, 0, 396, 397, 398, 399,
	400, 401, 402, 536, 403, 404, 0, 405, 406, 407,
	408, 409, 410, 0, 412, 413, 414, 411, 415, 416,
	417, 418, 0, 419, 1008, 420, 421, 422, 423, 537,
	424, 0, 425, 429, 430, 431, 432, 433, 434, 435,
	187, 441, 442, 436, 438, 439, 440, 437, 443, 444,
	445, 0, 446, 426, 427, 447, 448, 1009, 449, 450,
	538, 451, 452, 0, 453, 454, 455, 456, 428, 457,
	461, 462, 458, 459, 460, 539, 0, 464, 465, 463,
	189, 466, 467, 468, 469, 470, 288, 471, 0, 472,
	540, 541, 542, 543, 0, 479, 0, 473, 474, 544,
	475, 545, 0, 476, 477, 478, 0, 480, 481, 0,
	0, 482, 483, 484, 486, 487, 485, 489, 0, 490,
	0, 488, 491, 492, 493, 1370, 547, 548, 0, 495,
	494, 549, 1367, 0, 1235, 181, 496, 497, 550, 498,
	499, 500, 0, 182, 0, 0, 0, 0, 0, 0,
	0, 224, 225, 226, 227, 228, 0, 229, 0, 0,
	0, 0, 0, 501, 156, 0, 0, 0, 230, 232,
	231, 233, 234, 502, 503, 235, 504, 238, 236, 237,
	505, 0, 239, 240, 241, 242, 243, 244, 245, 0,
	0, 246, 506, 507, 508, 0, 247, 248, 509, 0,
	1126, 0, 249, 250, 251, 252, 253, 254, 0, 0,
	256, 257, 258, 255, 0, 259, 0, 260, 261, 262,
	0, 263, 994, 264, 265, 0, 0, 0, 0, 0,
	0, 0, 266, 267, 268, 269, 270, 271, 510, 511,
	0, 272, 273, 0, 275, 274, 0, 276, 0, 0,
	277, 278, 279, 0, 280, 0, 281, 282, 0, 283,
	512, 284, 285, 287, 289, 286, 290, 291, 292, 293,
	513, 514, 0, 221, 0, 0, 0, 0, 0, 294,
	295, 296, 515, 297, 298, 0, 299, 0, 300, 0,
	0, 995, 301, 516, 517, 302, 303, 0, 304, 518,
	0, 519, 305, 0, 306, 307, 308, 309, 520, 521,
	522, 369, 997, 310, 311, 0, 312, 313, 314, 316,
	0, 0, 0, 315, 317, 324, 0, 996, 318, 523,
	320, 319, 321, 322, 323, 524, 0, 525, 0, 325,
	998, 526, 999, 326, 327, 328, 1000, 329, 330, 0,
	0, 331, 332, 333, 334, 335, 0, 337, 336, 0,
	338, 527, 1001, 339, 340, 1002, 0, 341, 342, 343,
	0, 0, 344, 345, 346, 347, 0, 348, 349, 351,
	353, 350, 352, 357, 354, 355, 356, 359, 360, 358,
	1003, 361, 362, 365, 366, 364, 1004, 363, 0, 0,
	1005, 367, 0, 528, 368, 529, 370, 371, 0, 372,
	373, 374, 0, 0, 376, 377, 378, 0, 0, 379,
	380, 530, 1006, 381, 1007, 531, 382, 375, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 391, 532, 533,
	534, 392, 535, 393, 394, 0, 395, 0, 396, 397,
	398, 399, 400, 401, 402, 536, 403, 404, 0, 405,
	406, 407, 408, 409, 410, 0, 412, 413, 414, 411,
	415, 416, 417, 418, 0, 419, 1008, 420, 421, 422,
	423, 537, 424, 0, 425, 429, 430, 431, 432, 433,
	434, 435, 187, 441, 442, 436, 438, 439, 440, 437,
	443, 444, 445, 0, 446, 426, 427, 447, 448, 1009,
	449, 450, 538, 451, 452, 0, 453, 454, 455, 456,
	428, 457, 461, 462, 458, 459, 460, 539, 0, 464,
	465, 463, 189, 466, 467, 468, 469, 470, 288, 471,
	0, 472, 540, 541, 542, 543, 0, 479, 0, 473,
	474, 544, 475, 545, 0, 476, 477, 478, 0, 480,
	481, 0, 0, 482, 483, 484, 486, 487, 485, 489,
	0, 490, 0, 488, 491, 492, 493, 1370, 547, 548,
	0, 495, 494, 549, 0, 0, 0, 181, 496, 497,
	550, 498, 499, 500, 0, 182, 0, 0, 0, 0,
	1235, 1234, 0, 0, 0, 0, 1232, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 156, 224, 225, 226,
	227, 228, 0, 229, 0, 0, 0, 0, 0, 501,
	0, 0, 0, 0, 230, 232, 231, 233, 234, 502,
	503, 235, 504, 238, 236, 237, 505, 0, 239, 240,
	241, 242, 243, 244, 245, 0, 0, 246, 506, 507,
	508, 0, 247, 248, 509, 0, 1126, 0, 249, 250,
	251, 252, 253, 254, 0, 0, 256, 257, 258, 255,
	0, 259, 0, 260, 261, 262, 0, 263, 994, 264,
	265, 0, 0, 0, 0, 0, 0, 0, 266, 267,
	268, 269, 270, 271, 510, 511, 0, 272, 273, 0,
	275, 274, 0, 276, 0, 0, 277, 278, 279, 0,
	280, 0, 281, 282, 0, 283, 512, 284, 285, 287,
	289, 286, 290, 291, 292, 293, 513, 514, 0, 221,
	0, 0, 0, 0, 0, 294, 295, 296, 515, 297,
	298, 0, 299, 0, 300, 0, 0, 995, 301, 516,
	517, 302, 303, 0, 304, 518, 0, 519, 305, 0,
	306, 307, 308, 309, 520, 521, 522, 369, 997, 310,
	311, 0, 312, 313, 314, 316, 0, 0, 0, 315,
	317, 324, 0, 996, 318, 523, 320, 319, 321, 322,
	323, 524, 0, 525, 0, 325, 998, 526, 999, 326,
	327, 328, 1000, 329, 330, 0, 0, 331, 332, 333,
	334, 335, 0, 337, 336, 0, 338, 527, 1001, 339,
	340, 1002, 0, 341, 342, 343, 0, 0, 344, 345,
	346, 347, 0, 348, 349, 351, 353, 350, 352, 357,
	354, 355, 356, 359, 360, 358, 1003, 361, 362, 365,
	366, 364, 1004, 363, 0, 0, 1005, 367, 0, 528,
	368, 529, 370, 371, 0, 372, 373, 374, 0, 0,
	376, 377, 378, 0, 0, 379, 380, 530, 1006, 381,
	1007, 531, 382, 375, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 391, 532, 533, 534, 392, 535, 393,
	394, 0, 395, 0, 396, 397, 398, 399, 400, 401,
	402, 536, 403, 404, 0, 405, 406, 407, 408, 409,
	410, 0, 412, 413, 414, 411, 415, 416, 417, 418,
	0, 419, 1008, 420, 421, 422, 423, 537, 424, 0,
	425, 429, 430, 431, 432, 433, 434, 435, 0, 441,
	442, 436, 438, 439, 440, 437, 443, 444, 445, 0,
	446, 426, 427, 447, 448, 1009, 449, 450, 538, 451,
	452, 0, 453, 454, 455, 456, 428, 457, 461, 462,
	458, 459, 460, 539, 0, 464, 465, 463, 0, 466,
	467, 468, 469, 470, 288, 471, 0, 472, 540, 541,
	542, 543, 0, 479, 0, 473, 474, 544, 475, 545,
	0, 476, 477, 478, 0, 480, 481, 0, 0, 482,
	483, 484, 486, 487, 485, 489, 0, 490, 0, 488,
	491, 492, 493, 546, 547, 548, 0, 495, 494, 549,
	0, 0, 0, 0, 496, 497, 550, 498, 499, 500,
	1235, 1234, 0, 0, 0, 0, 1232, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 224, 225, 226,
	227, 228, 2958, 229, 0, 0, 0, 0, 0, 501,
	0, 0, 0, 0, 230, 232, 231, 233, 234, 502,
	503, 235, 504, 238, 236, 237, 505, 0, 239, 240,
	241, 242, 243, 244, 245, 0, 0, 246, 506, 507,
	508, 0, 247, 248, 509, 0, 1126, 0, 249, 250,
	251, 252, 253, 254, 0, 0, 256, 257, 258, 255,
	0, 259, 0, 260, 261, 262, 0, 263, 994, 264,
	265, 0, 0, 0, 0, 0, 0, 0, 266, 267,
	268, 269, 270, 271, 510, 511, 0, 272, 273, 0,
	275, 274, 0, 276, 0, 0, 277, 278, 279, 0,
	280, 0, 281, 282, 0, 283, 512, 284, 285, 287,
	289, 286, 290, 291, 292, 293, 513, 514, 0, 221,
	0, 0, 0, 0, 0, 294, 295, 296, 515, 297,
	298, 0, 299, 0, 300, 0, 0, 995, 301, 516,
	517, 302, 303, 0, 304, 518, 0, 519, 305, 0,
	306, 307, 308, 309, 520, 521, 522, 369, 997, 310,
	311, 0, 312, 313, 314, 316, 0, 0, 0, 315,
	317, 324, 0, 996, 318, 523, 320, 319, 321, 322,
	323, 524, 0, 525, 0, 325, 998, 526, 999, 326,
	327, 328, 1000, 329, 330, 0, 0, 331, 332, 333,
	334, 335, 0, 337, 336, 0, 338, 527, 1001, 339,
	340, 1002, 0, 341, 342, 343, 0, 0, 344, 345,
	346, 347, 0, 348, 349, 351, 353, 350, 352, 357,
	354, 355, 356, 359, 360, 358, 1003, 361, 362, 365,
	366, 364, 1004, 363, 0, 0, 1005, 367, 0, 528,
	368, 529, 370, 371, 0, 372, 373, 374, 0, 0,
	376, 377, 378, 0, 0, 379, 380, 530, 1006, 381,
	1007, 531, 382, 375, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 391, 532, 533, 534, 392, 535, 393,
	394, 0, 395, 0, 396, 397, 398, 399, 400, 401,
	402, 536, 403, 404, 0, 405, 406, 407, 408, 409,
	410, 0, 412, 413, 414, 411, 415, 416, 417, 418,
	0, 419, 1008, 420, 421, 422, 423, 537, 424, 0,
	425, 429, 430, 431, 432, 433, 434, 435, 0, 441,
	442, 436, 438, 439, 440, 437, 443, 444, 445, 0,
	446, 426, 427, 447, 448, 1009, 449, 450, 538, 451,
	452, 0, 453, 454, 455, 456, 428, 457, 461, 462,
	458, 459, 460, 539, 0, 464, 465, 463, 0, 466,
	467, 468, 469, 470, 288, 471, 0, 472, 540, 541,
	542, 543, 0, 479, 0, 473, 474, 544, 475, 545,
	0, 476, 477, 478, 0, 480, 481, 0, 0, 482,
	483, 484, 486, 487, 485, 489, 0, 490, 0, 488,
	491, 492, 493, 546, 547, 548, 0, 495, 494, 549,
	0, 0, 0, 0, 496, 497, 550, 498, 499, 500,
	1235, 1234, 0, 0, 0, 0, 1232, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 224, 225, 226,
	227, 228, 1241, 229, 0, 0, 0, 0, 0, 501,
	0, 0, 0, 0, 230, 232, 231, 233, 234, 502,
	503, 235, 504, 238, 236, 237, 505, 0, 239, 240,
	241, 242, 243, 244, 245, 0, 0, 246, 506, 507,
	508, 0, 247, 248, 509, 0, 1126, 0, 249, 250,
	251, 252, 253, 254, 0, 0, 256, 257, 258, 255,
	0, 259, 0, 260, 261, 262, 0, 263, 994, 264,
	265, 0, 0, 0, 0, 0, 0, 0, 266, 267,
	268, 269, 270, 271, 510, 511, 0, 272, 273, 0,
	275, 274, 0, 276, 0, 0, 277, 278, 279, 0,
	280, 0, 281, 282, 0, 283, 512, 284, 285, 287,
	289, 286, 290, 291, 292, 293, 513, 514, 0, 221,
	0, 0, 0, 0, 0, 294, 295, 296, 515, 297,
	298, 0, 299, 0, 300, 0, 0, 995, 301, 516,
	517, 302, 303, 0, 304, 518, 0, 519, 305, 0,
	306, 307, 308, 309, 520, 521, 522, 369, 997, 310,
	311, 0, 312, 313, 314, 316, 0, 0, 0, 315,
	317, 324, 0, 996, 318, 523, 320, 319, 321, 322,
	323, 524, 0, 525, 0, 325, 998, 526, 999, 326,
	327, 328, 1000, 329, 330, 0, 0, 331, 332, 333,
	334, 335, 0, 337, 336, 0, 338, 527, 1001, 339,
	340, 1002, 0, 341, 342, 343, 0, 0, 344, 345,
	346, 347, 0, 348, 349, 351, 353, 350, 352, 357,
	354, 355, 356, 359, 360, 358, 1003, 361, 362, 365,
	366, 364, 1004, 363, 0, 0, 1005, 367, 0, 528,
	368, 529, 370, 371, 0, 372, 373, 374, 0, 0,
	376, 377, 378, 0, 0, 379, 380, 530, 1006, 381,
	1007, 531, 382, 375, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 391, 532, 533, 534, 392, 535, 393,
	394, 0, 395, 0, 396, 397, 398, 399, 400, 401,
	402, 536, 403, 404, 0, 405, 406, 407, 408, 409,
	410, 0, 412, 413, 414, 411, 415, 416, 417, 418,
	0, 419, 1008, 420, 421, 422, 423, 537, 424, 0,
	425, 429, 430, 431, 432, 433, 434, 435, 0, 441,
	442, 436, 438, 439, 440, 437, 443, 444, 445, 0,
	446, 426, 427, 447, 448, 1009, 449, 450, 538, 451,
	452, 0, 453, 454, 455, 456, 428, 457, 461, 462,
	458, 459, 460, 539, 0, 464, 465, 463, 0, 466,
	467, 468, 469, 470, 288, 471, 0, 472, 540, 541,
	542, 543, 0, 479, 0, 473, 474, 544, 475, 545,
	0, 476, 477, 478, 0, 480, 481, 0, 0, 482,
	483, 484, 486, 487, 485, 489, 0, 490, 0, 488,
	491, 492, 493, 546, 547, 548, 0, 495, 494, 549,
	1059, 0, 0, 0, 496, 497, 550, 498, 499, 500,
	0, 0, 0, 0, 0, 0, 0, 224, 225, 226,
	227, 228, 0, 229, 0, 0, 0, 0, 0, 985,
	0, 0, 1376, 0, 230, 232, 231, 233, 234, 502,
	503, 235, 504, 238, 236, 237, 505, 0, 239, 240,
	241, 242, 243, 244, 245, 0, 984, 246, 506, 507,
	508, 0, 247, 248, 991, 0, 972, 0, 249, 250,
	251, 252, 253, 254, 0, 0, 256, 257, 258, 255,
	0, 259, 0, 260, 261, 262, 0, 263, 994, 264,
	265, 975, 973, 974, 981, 977, 976, 980, 266, 267,
	268, 269, 270, 271, 510, 511, 0, 272, 273, 0,
	275, 274, 0, 276, 0, 0, 277, 278, 279, 0,
	280, 0, 281, 282, 0, 283, 512, 284, 285, 287,
	289, 286, 290, 291, 292, 293, 1012, 1013, 0, 221,
	0, 0, 0, 0, 0, 294, 295, 296, 515, 297,
	298, 0, 299, 0, 300, 0, 0, 995, 301, 516,
	517, 302, 303, 0, 304, 1019, 0, 519, 305, 0,
	306, 307, 308, 309, 986, 987, 990, 369, 997, 310,
	311, 0, 312, 313, 314, 316, 0, 0, 222, 315,
	317, 324, 0, 996, 318, 523, 320, 319, 321, 322,
	323, 524, 0, 525, 0, 325, 998, 988, 999, 326,
	327, 328, 1000, 329, 330, 0, 0, 331, 332, 333,
	334, 335, 0, 337, 336, 0, 338, 1020, 1001, 339,
	340, 1002, 0, 341, 342, 343, 979, 978, 344, 345,
	346, 347, 0, 348, 349, 351, 353, 350, 352, 357,
	354, 355, 356, 359, 360, 358, 1003, 361, 362, 365,
	366, 364, 1004, 363, 0, 223, 1005, 367, 0, 989,
	368, 529, 370, 371, 0, 372, 373, 374, 0, 0,
	376, 377, 378, 0, 0, 379, 380, 530, 1006, 381,
	1007, 1014, 382, 375, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 391, 532, 533, 1015, 392, 535, 393,
	394, 0, 395, 0, 396, 397, 398, 399, 400, 401,
	402, 536, 403, 404, 0, 405, 406, 407, 408, 409,
	410, 0, 412, 413, 414, 411, 415, 416, 417, 418,
	0, 419, 1008, 420, 421, 422, 423, 537, 424, 0,
	425, 429, 430, 431, 432, 433, 434, 435, 0, 441,
	442, 436, 438, 439, 440, 437, 443, 444, 445, 982,
	446, 426, 427, 447, 448, 1009, 449, 450, 538, 451,
	452, 0, 453, 454, 455, 456, 428, 457, 461, 462,
	458, 459, 460, 1016, 0, 464, 465, 463, 0, 466,
	467, 468, 469, 470, 288, 471, 0, 472, 540, 541,
	542, 543, 0, 479, 0, 473, 474, 1017, 475, 1018,
	0, 476, 477, 478, 0, 480, 481, 0, 0, 482,
	483, 484, 486, 487, 485, 489, 983, 490, 0, 488,
	491, 492, 493, 546, 547, 548, 0, 495, 494, 549,
	865, 0, 218, 0, 496, 497, 550, 498, 499, 500,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 224,
	225, 226, 227, 228, 0, 229, 0, 0, 0, 0,
	0, 501, 0, 0, 0, 0, 230, 232, 231, 233,
	234, 502, 503, 235, 504, 238, 236, 237, 505, 0,
	239, 240, 241, 242, 243, 244, 245, 0, 0, 246,
	506, 507, 508, 0, 247, 248, 509, 0, 0, 0,
	249, 250, 251, 252, 253, 254, 0, 0, 256, 257,
	258, 255, 0, 259, 0, 260, 261, 262, 0, 263,
	0, 264, 265, 0, 0, 0, 0, 0, 0, 0,
	266, 267, 268, 269, 270, 271, 510, 511, 0, 272,
	273, 0, 275, 274, 0, 276, 0, 0, 277, 278,
	279, 0, 280, 0, 281, 282, 0, 283, 512, 284,
	285, 287, 289, 286, 290, 291, 292, 293, 513, 514,
	0, 0, 0, 0, 0, 0, 0, 294, 295, 296,
	515, 297, 298, 0, 299, 0, 300, 0, 0, 0,
	301, 516, 517, 302, 303, 0, 304, 518, 0, 519,
	305, 0, 306, 307, 308, 309, 520, 521, 522, 369,
	0, 310, 311, 0, 312, 313, 314, 316, 0, 0,
	0, 315, 317, 324, 0, 0, 318, 523, 320, 319,
	321, 322, 323, 524, 0, 525, 0, 325, 0, 526,
	0, 326, 327, 328, 0, 329, 330, 0, 0, 331,
	332, 333, 334, 335, 0, 337, 336, 0, 338, 527,
	0, 339, 340, 0, 0, 341, 342, 343, 0, 0,
	344, 345, 346, 347, 0, 348, 349, 351, 353, 350,
	352, 357, 354, 355, 356, 359, 360, 358, 0, 361,
	362, 365, 366, 364, 0, 363, 0, 0, 0, 367,
	0, 528, 368, 529, 370, 371, 0, 372, 373, 374,
	0, 0, 376, 377, 378, 0, 0, 379, 380, 530,
	0, 381, 0, 531, 382, 375, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 391, 532, 533, 534, 392,
	535, 393, 394, 0, 395, 0, 396, 397, 398, 399,
	400, 401, 402, 536, 403, 404, 0, 405, 406, 407,
	408, 409, 410, 0, 412, 413, 414, 411, 415, 416,
	417, 418, 0, 419, 0, 420, 421, 422, 423, 537,
	424, 0, 425, 429, 430, 431, 432, 433, 434, 435,
	187, 441, 442, 436, 438, 439, 440, 437, 443, 444,
	445, 0, 446, 426, 427, 447, 448, 0, 449, 450,
	538, 451, 452, 0, 453, 454, 455, 456, 428, 457,
	461, 462, 458, 459, 460, 539, 0, 464, 465, 463,
	189, 466, 467, 468, 469, 470, 288, 471, 0, 472,
	540, 541, 542, 543, 0, 479, 0, 473, 474, 544,
	475, 545, 0, 476, 477, 478, 0, 480, 481, 0,
	0, 482, 483, 484, 486, 487, 485, 489, 0, 490,
	0, 488, 491, 492, 493, 1370, 547, 548, 0, 495,
	494, 549, 218, 0, 0, 181, 496, 497, 550, 498,
	499, 500, 0, 182, 0, 0, 0, 0, 0, 224,
	225, 226, 227, 228, 0, 229, 0, 0, 0, 0,
	0, 501, 0, 0, 156, 0, 230, 232, 231, 233,
	234, 502, 503, 235, 504, 238, 236, 237, 505, 0,
	239, 240, 241, 242, 243, 244, 245, 0, 0, 246,
	506, 507, 508, 0, 247, 248, 509, 0, 0, 0,
	249, 250, 251, 252, 253, 254, 0, 0, 256, 257,
	258, 255, 0, 259, 0, 260, 261, 262, 0, 263,
	0, 264, 265, 0, 0, 0, 0, 0, 0, 0,
	266, 267, 268, 269, 270, 271, 510, 511, 0, 272,
	273, 0, 275, 274, 0, 276, 0, 0, 277, 278,
	279, 0, 280, 0, 281, 282, 0, 283, 512, 284,
	285, 287, 289, 286, 290, 291, 292, 293, 513, 514,
	0, 221, 0, 0, 0, 0, 0, 294, 295, 296,
	515, 297, 298, 0, 299, 0, 300, 0, 0, 0,
	301, 516, 517, 302, 303, 0, 304, 518, 0, 519,
	305, 0, 306, 307, 308, 309, 520, 521, 522, 369,
	0, 310, 311, 0, 312, 313, 314, 316, 0, 0,
	222, 315, 317, 324, 0, 0, 318, 523, 320, 319,
	321, 322, 323, 524, 0, 525, 0, 325, 0, 526,
	0, 326, 327, 328, 0, 329, 330, 0, 0, 331,
	332, 333, 334, 335, 0, 337, 336, 0, 338, 527,
	0, 339, 340, 0, 0, 341, 342, 343, 0, 0,
	344, 345, 346, 347, 0, 348, 349, 351, 353, 350,
	352, 357, 354, 355, 356, 359, 360, 358, 0, 361,
	362, 365, 366, 364, 0, 363, 0, 223, 0, 367,
	0, 528, 368, 529, 370, 371, 0, 372, 373, 374,
	0, 0, 376, 377, 378, 0, 0, 379, 380, 530,
	0, 381, 0, 531, 382, 375, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 391, 532, 533, 534, 392,
	535, 393, 394, 0, 395, 0, 396, 397, 398, 399,
	400, 401, 402, 536, 403, 404, 0, 405, 406, 407,
	408, 409, 410, 0, 412, 413, 414, 411, 415, 416,
	417, 418, 0, 419, 0, 420, 421, 422, 423, 537,
	424, 0, 425, 429, 430, 431, 432, 433, 434, 435,
	0, 441, 442, 436, 438, 439, 440, 437, 443, 444,
	445, 0, 446, 426, 427, 447, 448, 0, 449, 450,
	538, 451, 452, 0, 453, 454, 455, 456, 428, 457,
	461, 462, 458, 459, 460, 539, 0, 464, 465, 463,
	0, 466, 467, 468, 469, 470, 288, 471, 0, 472,
	540, 541, 542, 543, 0, 479, 0, 473, 474, 544,
	475, 545, 0, 476, 477, 478, 0, 480, 481, 0,
	0, 482, 483, 484, 486, 487, 485, 489, 0, 490,
	0, 488, 491, 492, 493, 546, 547, 548, 0, 495,
	494, 549, 1321, 0, 218, 0, 496, 497, 550, 498,
	499, 500, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 224, 225, 226, 227, 228, 0, 229, 0, 0,
	0, 0, 0, 501, 1684, 0, 0, 0, 230, 232,
	231, 233, 234, 502, 503, 235, 504, 238, 236, 237,
	505, 0, 239, 240, 241, 242, 243, 244, 245, 0,
	0, 246, 506, 507, 508, 0, 247, 248, 509, 0,
	0, 0, 249, 250, 251, 252, 253, 254, 0, 0,
	256, 257, 258, 255, 0, 259, 0, 260, 261, 262,
	0, 263, 0, 264, 265, 0, 0, 0, 0, 0,
	0, 0, 266, 267, 268, 269, 270, 271, 510, 511,
	0, 272, 273, 0, 275, 274, 0, 276, 0, 0,
	277, 278, 279, 0, 280, 0, 281, 282, 0, 283,
	512, 284, 285, 287, 289, 286, 290, 291, 292, 293,
	513, 514, 0, 221, 0, 0, 0, 0, 0, 294,
	295, 296, 515, 297, 298, 0, 299, 0, 300, 0,
	0, 0, 301, 516, 517, 302, 303, 0, 304, 518,
	0, 519, 305, 0, 306, 307, 308, 309, 520, 521,
	522, 369, 0, 310, 311, 0, 312, 313, 314, 316,
	0, 0, 222, 315, 317, 324, 0, 0, 318, 523,
	320, 319, 321, 322, 323, 524, 0, 525, 0, 325,
	0, 526, 0, 326, 327, 328, 0, 329, 330, 0,
	0, 331, 332, 333, 334, 335, 0, 337, 336, 0,
	338, 527, 0, 339, 340, 0, 0, 341, 342, 343,
	0, 0, 344, 345, 346, 347, 0, 348, 349, 351,
	353, 350, 352, 357, 354, 355, 356, 359, 360, 358,
	0, 361, 362, 365, 366, 364, 0, 363, 0, 223,
	0, 367, 0, 528, 368, 529, 370, 371, 0, 372,
	373, 374, 0, 0, 376, 377, 378, 0, 0, 379,
	380, 530, 0, 381, 0, 531, 382, 375, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 391, 532, 533,
	534, 392, 535, 393, 394, 0, 395, 0, 396, 397,
	398, 399, 400, 401, 402, 536, 403, 404, 0, 405,
	406, 407, 408, 409, 410, 0, 412, 413, 414, 411,
	415, 416, 417, 418, 0, 419, 0, 420, 421, 422,
	423, 537, 424, 0, 425, 429, 430, 431, 432, 433,
	434, 435, 0, 441, 442, 436, 438, 439, 440, 437,
	443, 444, 445, 0, 446, 426, 427, 447, 448, 0,
	449, 450, 538, 451, 452, 0, 453, 454, 455, 456,
	428, 457, 461, 462, 458, 459, 460, 539, 0, 464,
	465, 463, 0, 466, 467, 468, 469, 470, 288, 471,
	0, 472, 540, 541, 542, 543, 0, 479, 0, 473,
	474, 544, 475, 545, 0, 476, 477, 478, 0, 480,
	481, 0, 0, 482, 483, 484, 486, 487, 485, 489,
	0, 490, 0, 488, 491, 492, 493, 546, 547, 548,
	0, 495, 494, 549, 218, 0, 0, 0, 496, 497,
	550, 498, 499, 500, 0, 0, 0, 0, 0, 0,
	0, 224, 225, 226, 227, 228, 0, 229, 0, 0,
	0, 0, 0, 501, 1325, 0, 0, 0, 230, 232,
	231, 233, 234, 502, 503, 235, 504, 238, 236, 237,
	505, 0, 239, 240, 241, 242, 243, 244, 245, 0,
	0, 246, 506, 507, 508, 0, 247, 248, 509, 0,
	0, 0, 249, 250, 251, 252, 253, 254, 0, 0,
	256, 257, 258, 255, 0, 259, 0, 260, 261, 262,
	0, 263, 0, 264, 265, 0, 0, 0, 0, 0,
	0, 0, 266, 267, 268, 269, 270, 271, 510, 511,
	0, 272, 273, 0, 275, 274, 0, 276, 0, 0,
	277, 278, 279, 0, 280, 0, 281, 282, 0, 283,
	512, 284, 285, 287, 289, 286, 290, 291, 292, 293,
	513, 514, 0, 221, 0, 0, 0, 0, 0, 294,
	295, 296, 515, 297, 298, 0, 299, 0, 300, 0,
	0, 0, 301, 516, 517, 302, 303, 0, 304, 518,
	0, 519, 305, 0, 306, 307, 308, 309, 520, 521,
	522, 369, 0, 310, 311, 0, 312, 313, 314, 316,
	0, 0, 222, 315, 317, 324, 0, 0, 318, 523,
	320, 319, 321, 322, 323, 524, 0, 525, 0, 325,
	0, 526, 0, 326, 327, 328, 0, 329, 330, 0,
	0, 331, 332, 333, 334, 335, 0, 337, 336, 0,
	338, 527, 0, 339, 340, 0, 0, 341, 342, 343,
	0, 0, 344, 345, 346, 347, 0, 348, 349, 351,
	353, 350, 352, 357, 354, 355, 356, 359, 360, 358,
	0, 361, 362, 365, 366, 364, 0, 363, 0, 223,
	0, 367, 0, 528, 368, 529, 370, 371, 0, 372,
	373, 374, 0, 0, 376, 377, 378, 0, 0, 379,
	380, 530, 0, 381, 0, 531, 382, 375, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 391, 532, 533,
	534, 392, 535, 393, 394, 0, 395, 0, 396, 397,
	398, 399, 400, 401, 402, 536, 403, 404, 0, 405,
	406, 407, 408, 409, 410, 0, 412, 413, 414, 411,
	415, 416, 417, 418, 0, 419, 0, 420, 421, 422,
	423, 537, 424, 0, 425, 429, 430, 431, 432, 433,
	434, 435, 0, 441, 442, 436, 438, 439, 440, 437,
	443, 444, 445, 0, 446, 426, 427, 447, 448, 0,
	449, 450, 538, 451, 452, 0, 453, 454, 455, 456,
	428, 457, 461, 462, 458, 459, 460, 539, 0, 464,
	465, 463, 0, 466, 467, 468, 469, 470, 288, 471,
	0, 472, 540, 541, 542, 543, 0, 479, 0, 473,
	474, 544, 475, 545, 0, 476, 477, 478, 0, 480,
	481, 0, 0, 482, 483, 484, 486, 487, 485, 489,
	0, 490, 0, 488, 491, 492, 493, 546, 547, 548,
	0, 495, 494, 549, 218, 0, 0, 0, 496, 497,
	550, 498, 499, 500, 0, 0, 0, 0, 0, 0,
	0, 224, 225, 226, 227, 228, 0, 229, 0, 0,
	0, 0, 0, 501, 2907, 0, 0, 0, 230, 232,
	231, 233, 234, 502, 503, 235, 504, 238, 236, 237,
	505, 0, 239, 240, 241, 242, 243, 244, 245, 0,
	0, 246, 506, 507, 508, 0, 247, 248, 509, 0,
	0, 0, 249, 250, 251, 252, 253, 254, 0, 0,
	256, 257, 258, 255, 0, 259, 0, 260, 261, 262,
	0, 263, 0, 264, 265, 0, 0, 0, 0, 0,
	0, 0, 266, 267, 268, 269, 270, 271, 510, 511,
	0, 272, 273, 0, 275, 274, 0, 276, 0, 0,
	277, 278, 279, 0, 280, 0, 281, 282, 0, 283,
	512, 284, 285, 287, 289, 286, 290, 291, 292, 293,
	513, 514, 0, 221, 0, 0, 0, 0, 0, 294,
	295, 296, 515, 297, 298, 0, 299, 0, 300, 0,
	0, 0, 301, 516, 517, 302, 303, 0, 304, 518,
	0, 519, 305, 0, 306, 307, 308, 309, 520, 521,
	522, 369, 0, 310, 311, 0, 312, 313, 314, 316,
	0, 0, 222, 315, 317, 324, 0, 0, 318, 523,
	320, 319, 321, 322, 323, 524, 0, 525, 0, 325,
	0, 526, 0, 326, 327, 328, 0, 329, 330, 0,
	0, 331, 332, 333, 334, 335, 0, 337, 336, 0,
	338, 527, 0, 339, 340, 0, 0, 341, 342, 343,
	0, 0, 344, 345, 346, 347, 0, 348, 349, 351,
	353, 350, 352, 357, 354, 355, 356, 359, 360, 358,
	0, 361, 362, 365, 366, 364, 0, 363, 0, 223,
	0, 367, 0, 528, 368, 529, 370, 371, 0, 372,
	373, 374, 0, 0, 376, 377, 378, 0, 0, 379,
	380, 530, 0, 381, 0, 531, 382, 375, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 391, 532, 533,
	534, 392, 535, 393, 394, 0, 395, 0, 396, 397,
	398, 399, 400, 401, 402, 536, 403, 404, 0, 405,
	406, 407, 408, 409, 410, 0, 412, 413, 414, 411,
	415, 416, 417, 418, 0, 419, 0, 420, 421, 422,
	423, 537, 424, 0, 425, 429, 430, 431, 432, 433,
	434, 435, 0, 441, 442, 436, 438, 439, 440, 437,
	443, 444, 445, 0, 446, 426, 427, 447, 448, 0,
	449, 450, 538, 451, 452, 0, 453, 454, 455, 456,
	428, 457, 461, 462, 458, 459, 460, 539, 0, 464,
	465, 463, 0, 466, 467, 468, 469, 470, 288, 471,
	0, 472, 540, 541, 542, 543, 0, 479, 0, 473,
	474, 544, 475, 545, 0, 476, 477, 478, 0, 480,
	481, 0, 0, 482, 483, 484, 486, 487, 485, 489,
	0, 490, 0, 488, 491, 492, 493, 546, 547, 548,
	0, 495, 494, 549, 218, 0, 0, 0, 496, 497,
	550, 498, 499, 500, 0, 0, 0, 0, 0, 0,
	0, 224, 225, 226, 227, 228, 0, 229, 0, 0,
	0, 0, 0, 501, 1325, 0, 0, 0, 230, 232,
	231, 233, 234, 502, 503, 235, 504, 238, 236, 237,
	505, 0, 239, 240, 241, 242, 243, 244, 245, 0,
	0, 246, 506, 507, 508, 0, 247, 248, 509, 0,
	0, 0, 249, 250, 251, 252, 253, 254, 0, 0,
	256, 257, 258, 255, 0, 259, 0, 260, 261, 262,
	0, 263, 0, 264, 265, 0, 0, 0, 0, 0,
	0, 0, 266, 267, 268, 269, 270, 271, 510, 511,
	0, 272, 273, 0, 275, 274, 0, 276, 0, 0,
	277, 278, 279, 0, 280, 0, 281, 282, 0, 283,
	512, 284, 285, 287, 289, 286, 290, 291, 292, 293,
	513, 514, 0, 0, 0, 0, 0, 0, 0, 294,
	295, 296, 515, 297, 298, 0, 299, 0, 300, 0,
	0, 0, 301, 516, 517, 302, 303, 0, 304, 518,
	0, 519, 305, 0, 306, 307, 308, 309, 520, 521,
	522, 369, 0, 310, 311, 0, 312, 313, 314, 316,
	0, 0, 0, 315, 317, 324, 0, 0, 318, 523,
	320, 319, 321, 322, 323, 524, 0, 525, 0, 325,
	0, 526, 0, 326, 327, 328, 0, 329, 330, 0,
	0, 331, 332, 333, 334, 335, 0, 337, 336, 0,
	338, 527, 0, 339, 340, 0, 0, 341, 342, 343,
	0, 0, 344, 345, 346, 347, 0, 348, 349, 351,
	353, 350, 352, 357, 354, 355, 356, 359, 360, 358,
	0, 361, 362, 365, 366, 364, 0, 363, 0, 0,
	0, 367, 0, 528, 368, 529, 370, 371, 0, 372,
	373, 374, 0, 0, 376, 377, 378, 0, 0, 379,
	380, 530, 0, 381, 0, 531, 382, 375, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 391, 532, 533,
	534, 392, 535, 393, 394, 0, 395, 0, 396, 397,
	398, 399, 400, 401, 402, 536, 403, 404, 0, 405,
	406, 407, 408, 409, 410, 0, 412, 413, 414, 411,
	415, 416, 417, 418, 0, 419, 0, 420, 421, 422,
	423, 537, 424, 0, 425, 429, 430, 431, 432, 433,
	434, 435, 0, 441, 442, 436, 438, 439, 440, 437,
	443, 444, 445, 0, 446, 426, 427, 447, 448, 0,
	449, 450, 538, 451, 452, 0, 453, 454, 455, 456,
	428, 457, 461, 462, 458, 459, 460, 539, 0, 464,
	465, 463, 0, 466, 467, 468, 469, 470, 288, 471,
	0, 472, 540, 541, 542, 543, 0, 479, 0, 473,
	474, 544, 475, 545, 0, 476, 477, 478, 0, 480,
	481, 0, 0, 482, 483, 484, 486, 487, 485, 489,
	0, 490, 0, 488, 491, 492, 493, 546, 547, 548,
	0, 495, 494, 549, 218, 0, 0, 0, 496, 497,
	550, 498, 499, 500, 0, 0, 0, 0, 0, 0,
	0, 224, 225, 226, 227, 228, 0, 229, 0, 0,
	0, 0, 0, 501, 0, 0, 2500, 0, 230, 232,
	231, 233, 234, 502, 503, 235, 504, 238, 236, 237,
	505, 0, 239, 240, 241, 242, 243, 244, 245, 0,
	0, 246, 506, 507, 508, 0, 247, 248, 509, 0,
	0, 0, 249, 250, 251, 252, 253, 254, 0, 0,
	256, 257, 258, 255, 0, 259, 0, 260, 261, 262,
	0, 263, 0, 264, 265, 0, 0, 0, 0, 0,
	0, 0, 266, 267, 268, 269, 270, 271, 510, 511,
	0, 272, 273, 0, 275, 274, 0, 276, 0, 0,
	277, 278, 279, 0, 280, 0, 281, 282, 0, 283,
	512, 284, 285, 287, 289, 286, 290, 291, 292, 293,
	513, 514, 0, 0, 0, 0, 0, 0, 0, 294,
	295, 296, 515, 297, 298, 0, 299, 0, 300, 0,
	0, 0, 301, 516, 517, 302, 303, 0, 304, 518,
	0, 519, 305, 0, 306, 307, 308, 309, 520, 521,
	522, 369, 0, 310, 311, 0, 312, 313, 314, 316,
	0, 0, 0, 315, 317, 324, 0, 0, 318, 523,
	320, 319, 321, 322, 323, 524, 0, 525, 0, 325,
	0, 526, 0, 326, 327, 328, 0, 329, 330, 0,
	0, 331, 332, 333, 334, 335, 0, 337, 336, 0,
	338, 527, 0, 339, 340, 0, 0, 341, 342, 343,
	0, 0, 344, 345, 346, 347, 0, 348, 349, 351,
	353, 350, 352, 357, 354, 355, 356, 359, 360, 358,
	0, 361, 362, 365, 366, 364, 0, 363, 0, 0,
	0, 367, 0, 528, 368, 529, 370, 371, 0, 372,
	373, 374, 0, 0, 376, 377, 378, 0, 0, 379,
	380, 530, 0, 381, 0, 531, 382, 375, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 391, 532, 533,
	534, 392, 535, 393, 394, 0, 395, 0, 396, 397,
	398, 399, 400, 401, 402, 536, 403, 404, 0, 405,
	406, 407, 408, 409, 410, 0, 412, 413, 414, 411,
	415, 416, 417, 418, 0, 419, 0, 420, 421, 422,
	423, 537, 424, 0, 425, 429, 430, 431, 432, 433,
	434, 435, 0, 441, 442, 436, 438, 439, 440, 437,
	443, 444, 445, 0, 446, 426, 427, 447, 448, 0,
	449, 450, 538, 451, 452, 0, 453, 454, 455, 456,
	428, 457, 461, 462, 458, 459, 460, 539, 0, 464,
	465, 463, 0, 466, 467, 468, 469, 470, 288, 471,
	0, 472, 540, 541, 542, 543, 0, 479, 0, 473,
	474, 544, 475, 545, 0, 476, 477, 478, 0, 480,
	481, 0, 0, 482, 483, 484, 486, 487, 485, 489,
	0, 490, 0, 488, 491, 492, 493, 546, 547, 548,
	0, 495, 494, 549, 218, 0, 0, 0, 496, 497,
	550, 498, 499, 500, 0, 0, 0, 0, 0, 0,
	0, 224, 225, 226, 227, 228, 0, 229, 0, 0,
	0, 0, 0, 501, 0, 0, 3046, 0, 230, 232,
	231, 233, 234, 502, 503, 235, 504, 238, 236, 237,
	505, 0, 239, 240, 241, 242, 243, 244, 245, 0,
	0, 246, 506, 507, 508, 0, 247, 248, 509, 0,
	0, 0, 249, 250, 251, 252, 253, 254, 0, 0,
	256, 257, 258, 255, 0, 259, 0, 260, 261, 262,
	0, 263, 0, 264, 265, 0, 0, 0, 0, 0,
	0, 0, 266, 267, 268, 269, 270, 271, 510, 511,
	0, 272, 273, 0, 275, 274, 0, 276, 0, 0,
	277, 278, 279, 0, 280, 0, 281, 282, 0, 283,
	512, 284, 285, 287, 289, 286, 290, 291, 292, 293,
	513, 514, 0, 0, 0, 0, 0, 0, 0, 294,
	295, 296, 515, 297, 298, 0, 299, 0, 300, 0,
	0, 0, 301, 516, 517, 302, 303, 0, 304, 518,
	0, 519, 305, 0, 306, 307, 308, 309, 520, 521,
	522, 369, 0, 310, 311, 0, 312, 313, 314, 316,
	0, 0, 0, 315, 317, 324, 0, 0, 318, 523,
	320, 319, 321, 322, 323, 524, 0, 525, 0, 325,
	0, 526, 0, 326, 327, 328, 0, 329, 330, 0,
	0, 331, 332, 333, 334, 335, 0, 337, 336, 0,
	338, 527, 0, 339, 340, 0, 0, 341, 342, 343,
	0, 0, 344, 345, 346, 347, 0, 348, 349, 351,
	353, 350, 352, 357, 354, 355, 356, 359, 360, 358,
	0, 361, 362, 365, 366, 364, 0, 363, 0, 0,
	0, 367, 0, 528, 368, 529, 370, 371, 0, 372,
	373, 374, 0, 0, 376, 377, 378, 0, 0, 379,
	380, 530, 0, 381, 0, 531, 382, 375, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 391, 532, 533,
	534, 392, 535, 393, 394, 0, 395, 0, 396, 397,
	398, 399, 400, 401, 402, 536, 403, 404, 0, 405,
	406, 407, 408, 409, 410, 0, 412, 413, 414, 411,
	415, 416, 417, 418, 0, 419, 0, 420, 421, 422,
	423, 537, 424, 0, 425, 429, 430, 431, 432, 433,
	434, 435, 0, 441, 442, 436, 438, 439, 440, 437,
	443, 444, 445, 0, 446, 426, 427, 447, 448, 0,
	449, 450, 538, 451, 452, 0, 453, 454, 455, 456,
	428, 457, 461, 462, 458, 459, 460, 539, 0, 464,
	465, 463, 0, 466, 467, 468, 469, 470, 288, 471,
	0, 472, 540, 541, 542, 543, 0, 479, 0, 473,
	474, 544, 475, 545, 0, 476, 477, 478, 0, 480,
	481, 0, 0, 482, 483, 484, 486, 487, 485, 489,
	0, 490, 0, 488, 491, 492, 493, 546, 547, 548,
	0, 495, 494, 549, 734, 0, 628, 0, 496, 497,
	550, 498, 499, 500, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 224, 225, 226, 227, 228, 0, 229,
	0, 0, 0, 0, 0, 501, 1956, 0, 0, 0,
	230, 232, 231, 233, 234, 502, 503, 235, 504, 238,
	236, 237, 505, 0, 239, 240, 241, 242, 243, 244,
	245, 0, 0, 246, 506, 507, 508, 0, 247, 248,
	509, 0, 0, 0, 249, 250, 251, 252, 253, 254,
	0, 0, 256, 257, 258, 255, 0, 259, 0, 260,
	261, 262, 0, 263, 0, 264, 265, 0, 0, 0,
	0, 0, 0, 0, 266, 267, 634, 269, 270, 271,
	510, 511, 0, 272, 273, 0, 275, 274, 0, 276,
	0, 0, 277, 278, 279, 0, 280, 0, 281, 282,
	0, 283, 512, 284, 285, 287, 289, 286, 290, 291,
	292, 293, 513, 514, 0, 221, 0, 0, 0, 0,
	0, 294, 295, 296, 515, 297, 298, 0, 299, 0,
	300, 0, 732, 0, 301, 516, 517, 302, 303, 0,
	304, 518, 0, 519, 305, 0, 306, 307, 308, 309,
	520, 521, 522, 369, 0, 310, 311, 0, 312, 313,
	314, 316, 0, 0, 222, 315, 317, 324, 0, 0,
	318, 523, 320, 319, 321, 322, 323, 524, 0, 525,
	0, 325, 0, 526, 0, 326, 327, 328, 0, 329,
	330, 0, 0, 331, 332, 333, 334, 335, 0, 337,
	336, 0, 338, 527, 0, 339, 340, 0, 0, 341,
	342, 343, 0, 0, 344, 345, 346, 347, 0, 348,
	349, 351, 353, 350, 352, 357, 354, 355, 356, 359,
	360, 358, 0, 361, 362, 365, 366, 364, 0, 363,
	0, 223, 0, 367, 0, 528, 368, 529, 370, 371,
	0, 372, 373, 374, 0, 0, 376, 377, 378, 0,
	0, 379, 380, 530, 0, 381, 0, 531, 382, 375,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 391,
	532, 533, 534, 392, 535, 393, 394, 0, 395, 0,
	396, 397, 398, 399, 400, 401, 402, 536, 403, 404,
	0, 405, 406, 407, 408, 409, 410, 0, 412, 413,
	414, 411, 415, 416, 417, 418, 0, 419, 0, 420,
	421, 422, 423, 537, 424, 0, 425, 429, 430, 431,
	432, 433, 434, 435, 0, 441, 442, 436, 438, 439,
	440, 437, 443, 444, 445, 0, 446, 426, 427, 447,
	448, 0, 449, 450, 538, 451, 452, 0, 453, 454,
	455, 456, 428, 457, 461, 462, 458, 459, 460, 539,
	0, 464, 465, 463, 633, 466, 467, 468, 469, 470,
	288, 471, 0, 472, 540, 541, 542, 543, 0, 479,
	0, 473, 474, 544, 475, 545, 0, 476, 477, 478,
	0, 480, 481, 0, 0, 482, 483, 484, 486, 487,
	485, 489, 0, 490, 0, 488, 491, 492, 493, 546,
	547, 548, 0, 495, 494, 549, 0, 627, 0, 628,
	496, 497, 550, 498, 499, 500, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 224, 225, 226, 227,
	228, 637, 229, 0, 0, 0, 0, 0, 501, 0,
	0, 0, 0, 230, 232, 231, 233, 234, 502, 503,
	235, 504, 238, 236, 237, 505, 0, 239, 240, 241,
	242, 243, 244, 245, 0, 0, 246, 506, 507, 508,
	0, 247, 248, 509, 0, 0, 0, 249, 250, 251,
	252, 253, 254, 0, 0, 256, 257, 258, 255, 0,
	259, 0, 260, 261, 262, 0, 263, 0, 264, 265,
	0, 0, 0, 0, 0, 0, 0, 266, 267, 634,
	269, 270, 271, 510, 511, 0, 272, 273, 0, 275,
	274, 0, 276, 0, 0, 277, 278, 279, 0, 280,
	0, 281, 282, 0, 283, 512, 284, 285, 287, 289,
	286, 290, 291, 292, 293, 513, 514, 0, 221, 0,
	0, 0, 0, 0, 294, 295, 296, 515, 297, 298,
	0, 299, 0, 300, 0, 0, 0, 301, 516, 517,
	302, 303, 0, 304, 518, 0, 519, 305, 0, 306,
	307, 308, 309, 520, 521, 522, 369, 0, 310, 311,
	0, 312, 313, 314, 316, 0, 0, 222, 315, 317,
	324, 0, 0, 318, 523, 320, 319, 321, 322, 323,
	524, 0, 525, 0, 325, 0, 526, 0, 326, 327,
	328, 0, 329, 330, 0, 0, 331, 332, 333, 334,
	335, 0, 337, 336, 0, 338, 527, 0, 339, 340,
	0, 0, 341, 342, 343, 0, 0, 344, 345, 346,
	347, 0, 348, 349, 351, 353, 350, 352, 357, 354,
	355, 356, 359, 360, 358, 0, 361, 362, 365, 366,
	364, 0, 363, 0, 223, 0, 367, 0, 528, 368,
	529, 370, 371, 0, 372, 373, 374, 0, 0, 376,
	377, 378, 0, 0, 379, 380, 530, 0, 381, 0,
	531, 382, 375, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 391, 532, 533, 534, 392, 535, 393, 394,
	0, 395, 0, 396, 397, 398, 399, 400, 401, 402,
	536, 403, 404, 0, 405, 406, 407, 408, 409, 410,
	0, 412, 413, 414, 411, 415, 416, 417, 418, 0,
	419, 0, 420, 421, 422, 423, 537, 424, 0, 425,
	429, 430, 431, 432, 433, 434, 435, 0, 441, 442,
	436, 438, 439, 440, 437, 443, 444, 445, 0, 446,
	426, 427, 447, 448, 0, 449, 450, 538, 451, 452,
	0, 453, 454, 455, 456, 428, 457, 461, 462, 458,
	459, 460, 539, 0, 464, 465, 463, 633, 466, 467,
	468, 469, 470, 288, 471, 0, 472, 540, 541, 542,
	543, 625, 479, 0, 473, 474, 544, 475, 545, 0,
	476, 477, 478, 0, 480, 481, 0, 0, 482, 483,
	484, 486, 487, 485, 489, 0, 490, 0, 488, 491,
	492, 493, 546, 547, 548, 0, 495, 494, 549, 0,
	0, 0, 0, 496, 497, 550, 498, 499, 500, 1235,
	1234, 0, 0, 0, 0, 1232, 0, 0, 0, 0,
	0, 0, 0, 0, 637, 0, 224, 225, 226, 227,
	228, 0, 229, 0, 0, 0, 0, 0, 501, 0,
	0, 0, 0, 230, 232, 231, 233, 234, 502, 503,
	235, 504, 238, 236, 237, 505, 0, 239, 240, 241,
	242, 243, 244, 245, 0, 0, 246, 506, 507, 508,
	0, 247, 248, 509, 0, 1126, 0, 249, 250, 251,
	252, 253, 254, 0, 0, 256, 257, 258, 255, 0,
	259, 0, 260, 261, 262, 0, 263, 994, 264, 265,
	0, 0, 0, 0, 0, 0, 0, 266, 267, 268,
	269, 270, 271, 510, 511, 0, 272, 273, 0, 275,
	274, 0, 276, 0, 0, 277, 278, 279, 0, 280,
	0, 281, 282, 0, 283, 512, 284, 285, 287, 289,
	286, 290, 291, 292, 293, 513, 514, 0, 221, 0,
	0, 0, 0, 0, 294, 295, 296, 515, 297, 298,
	0, 299, 0, 300, 0, 0, 995, 301, 516, 517,
	302, 303, 0, 304, 518, 0, 519, 305, 0, 306,
	307, 308, 309, 520, 521, 522, 369, 997, 310, 311,
	0, 312, 313, 314, 316, 0, 0, 0, 315, 317,
	324, 0, 996, 318, 523, 320, 319, 321, 322, 323,
	524, 0, 525, 0, 325, 998, 526, 999, 326, 327,
	328, 1000, 329, 330, 0, 0, 331, 332, 333, 334,
	335, 0, 337, 336, 0, 338, 527, 1001, 339, 340,
	1002, 0, 341, 342, 343, 0, 0, 344, 345, 346,
	347, 0, 348, 349, 351, 353, 350, 352, 357, 354,
	355, 356, 359, 360, 358, 1003, 361, 362, 365, 366,
	364, 1004, 363, 0, 0, 1005, 367, 3187, 528, 368,
	529, 370, 371, 0, 372, 373, 374, 0, 0, 376,
	377, 378, 0, 0, 379, 380, 530, 1006, 381, 1007,
	531, 382, 375, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 391, 532, 533, 534, 392, 535, 393, 394,
	0, 395, 0, 396, 397, 398, 399, 400, 401, 402,
	536, 403, 404, 0, 405, 406, 407, 408, 409, 410,
	0, 412, 413, 414, 411, 415, 416, 417, 418, 0,
	419, 1008, 420, 421, 422, 423, 537, 424, 0, 425,
	429, 430, 431, 432, 433, 434, 435, 0, 441, 442,
	436, 438, 439, 440, 437, 443, 444, 445, 0, 446,
	426, 427, 447, 448, 1009, 449, 450, 538, 451, 452,
	0, 453, 454, 455, 456, 428, 457, 461, 462, 458,
	459, 460, 539, 0, 464, 465, 463, 0, 466, 467,
	468, 469, 470, 288, 471, 0, 472, 540, 541, 542,
	543, 0, 479, 0, 473, 474, 544, 475, 545, 0,
	476, 477, 478, 0, 480, 481, 0, 0, 482, 483,
	484, 486, 487, 485, 489, 0, 490, 0, 488, 491,
	492, 493, 546, 547, 548, 0, 495, 494, 549, 0,
	0, 0, 0, 496, 497, 550, 498, 499, 500, 1235,
	1234, 0, 0, 0, 0, 1232, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 224, 225, 226, 227,
	228, 0, 229, 0, 0, 0, 0, 0, 501, 0,
	0, 0, 0, 230, 232, 231, 233, 234, 502, 503,
	235, 504, 238, 236, 237, 505, 0, 239, 240, 241,
	242, 243, 244, 245, 0, 0, 246, 506, 507, 508,
	0, 247, 248, 509, 0, 1126, 0, 249, 250, 251,
	252, 253, 254, 0, 0, 256, 257, 258, 255, 0,
	259, 0, 260, 261, 262, 0, 263, 994, 264, 265,
	0, 0, 0, 0, 0, 0, 0, 266, 267, 268,
	269, 270, 271, 510, 511, 0, 272, 273, 0, 275,
	274, 0, 276, 0, 0, 277, 278, 279, 0, 280,
	0, 281, 282, 0, 283, 512, 284, 285, 287, 289,
	286, 290, 291, 292, 293, 513, 514, 0, 221, 0,
	0, 0, 0, 0, 294, 295, 296, 515, 297, 298,
	0, 299, 0, 300, 0, 0, 995, 301, 516, 517,
	302, 303, 0, 304, 518, 0, 519, 305, 0, 306,
	307, 308, 309, 520, 521, 522, 369, 997, 310, 311,
	0, 312, 313, 314, 316, 0, 0, 0, 315, 317,
	324, 0, 996, 318, 523, 320, 319, 321, 322, 323,
	524, 0, 525, 0, 325, 998, 526, 999, 326, 327,
	328, 1000, 329, 330, 0, 0, 331, 332, 333, 334,
	335, 0, 337, 336, 0, 338, 527, 1001, 339, 340,
	1002, 0, 341, 342, 343, 0, 0, 344, 345, 346,
	347, 0, 348, 349, 351, 353, 350, 352, 357, 354,
	355, 356, 359, 360, 358, 1003, 361, 362, 365, 366,
	364, 1004, 363, 0, 0, 1005, 367, 2887, 528, 368,
	529, 370, 371, 0, 372, 373, 374, 0, 0, 376,
	377, 378, 0, 0, 379, 380, 530, 1006, 381, 1007,
	531, 382, 375, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 391, 532, 533, 534, 392, 535, 393, 394,
	0, 395, 0, 396, 397, 398, 399, 400, 401, 402,
	536, 403, 404, 0, 405, 406, 407, 408, 409, 410,
	0, 412, 413, 414, 411, 415, 416, 417, 418, 0,
	419, 1008, 420, 421, 422, 423, 537, 424, 0, 425,
	429, 430, 431, 432, 433, 434, 435, 0, 441, 442,
	436, 438, 439, 440, 437, 443, 444, 445, 0, 446,
	426, 427, 447, 448, 1009, 449, 450, 538, 451, 452,
	0, 453, 454, 455, 456, 428, 457, 461, 462, 458,
	459, 460, 539, 0, 464, 465, 463, 0, 466, 467,
	468, 469, 470, 288, 471, 0, 472, 540, 541, 542,
	543, 0, 479, 0, 473, 474, 544, 475, 545, 0,
	476, 477, 478, 0, 480, 481, 0, 0, 482, 483,
	484, 486, 487, 485, 489, 0, 490, 0, 488, 491,
	492, 493, 546, 547, 548, 628, 495, 494, 549, 0,
	0, 0, 0, 496, 497, 550, 498, 499, 500, 0,
	0, 0, 224, 225, 226, 227, 228, 0, 229, 0,
	0, 0, 0, 0, 501, 0, 0, 0, 0, 230,
	232, 231, 233, 234, 502, 503, 235, 504, 238, 236,
	237, 505, 0, 239, 240, 241, 242, 243, 244, 245,
	0, 0, 246, 506, 507, 508, 0, 247, 248, 509,
	0, 0, 0, 249, 250, 251, 252, 253, 254, 0,
	0, 256, 257, 258, 255, 0, 259, 0, 260, 261,
	262, 0, 263, 0, 264, 265, 0, 0, 0, 0,
	0, 0, 0, 266, 267, 634, 269, 270, 271, 510,
	511, 0, 272, 273, 0, 275, 274, 0, 276, 0,
	0, 277, 278, 279, 0, 280, 0, 281, 282, 0,
	283, 512, 284, 285, 287, 289, 286, 290, 291, 292,
	293, 513, 514, 0, 221, 0, 0, 0, 0, 0,
	294, 295, 296, 515, 297, 298, 0, 299, 0, 300,
	0, 0, 0, 301, 516, 517, 302, 303, 0, 304,
	518, 0, 519, 305, 0, 306, 307, 308, 309, 520,
	521, 522, 369, 0, 310, 311, 0, 312, 313, 314,
	316, 0, 0, 222, 315, 317, 324, 0, 0, 318,
	523, 320, 319, 321, 322, 323, 524, 0, 525, 0,
	325, 0, 526, 0, 326, 327, 328, 0, 329, 330,
	0, 0, 331, 332, 333, 334, 335, 0, 337, 336,
	0, 338, 527, 0, 339, 340, 0, 0, 341, 342,
	343, 0, 0, 344, 345, 346, 347, 0, 348, 349,
	351, 353, 350, 352, 357, 354, 355, 356, 359, 360,
	358, 0, 361, 362, 365, 366, 364, 0, 363, 0,
	223, 0, 367, 0, 528, 368, 529, 370, 371, 0,
	372, 373, 374, 0, 0, 376, 377, 378, 0, 0,
	379, 380, 530, 0, 381, 0, 531, 382, 375, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 391, 532,
	533, 534, 392, 535, 393, 394, 0, 395, 0, 396,
	397, 398, 399, 400, 401, 402, 536, 403, 404, 0,
	405, 406, 407, 408, 409, 410, 0, 412, 413, 414,
	411, 415, 416, 417, 418, 0, 419, 0, 1990, 421,
	422, 423, 537, 424, 0, 425, 429, 430, 431, 432,
	433, 434, 435, 0, 441, 442, 436, 438, 439, 440,
	437, 443, 444, 445, 0, 446, 426, 427, 447, 448,
	0, 449, 450, 538, 451, 452, 0, 453, 454, 455,
	456, 428, 457, 461, 462, 458, 459, 460, 539, 0,
	464, 465, 463, 633, 466, 467, 468, 469, 470, 288,
	471, 0, 472, 540, 541, 542, 543, 0, 479, 0,
	473, 474, 544, 475, 545, 0, 476, 477, 478, 0,
	480, 481, 0, 0, 482, 483, 484, 486, 487, 485,
	489, 0, 490, 0, 488, 491, 492, 493, 546, 547,
	548, 0, 495, 494, 549, 628, 0, 0, 0, 496,
	497, 550, 498, 499, 500, 0, 0, 0, 0, 0,
	0, 0, 224, 225, 226, 227, 228, 0, 229, 0,
	637, 0, 0, 0, 501, 0, 0, 0, 0, 230,
	232, 231, 233, 234, 502, 503, 235, 504, 238, 236,
	237, 505, 0, 239, 240, 241, 242, 243, 244, 245,
	0, 0, 246, 506, 507, 508, 0, 247, 248, 509,
	0, 0, 0, 249, 250, 251, 252, 253, 254, 0,
	0, 256, 257, 258, 255, 0, 259, 0, 260, 261,
	262, 0, 263, 0, 264, 265, 0, 0, 0, 0,
	0, 0, 0, 266, 267, 634, 269, 270, 271, 510,
	511, 0, 272, 273, 0, 275, 274, 0, 276, 0,
	0, 277, 278, 279, 0, 280, 0, 281, 282, 0,
	283, 512, 284, 285, 287, 289, 286, 290, 291, 292,
	293, 513, 514, 0, 221, 0, 0, 0, 0, 0,
	294, 295, 296, 515, 297, 298, 0, 299, 0, 300,
	0, 0, 0, 301, 516, 517, 302, 303, 0, 304,
	518, 0, 519, 305, 0, 306, 307, 308, 309, 520,
	521, 522, 369, 0, 310, 311, 0, 312, 313, 314,
	316, 0, 0, 222, 315, 317, 324, 0, 0, 318,
	523, 320, 319, 321, 322, 323, 524, 0, 525, 0,
	325, 0, 526, 0, 326, 327, 328, 0, 329, 330,
	0, 0, 331, 332, 333, 334, 335, 0, 337, 336,
	0, 338, 527, 0, 339, 340, 0, 0, 341, 342,
	343, 0, 0, 344, 345, 346, 347, 0, 348, 349,
	351, 353, 350, 352, 357, 354, 355, 356, 359, 360,
	358, 0, 361, 362, 365, 366, 364, 0, 363, 0,
	223, 0, 367, 0, 528, 368, 529, 370, 371, 0,
	372, 373, 374, 0, 0, 376, 377, 378, 0, 0,
	379, 380, 530, 0, 381, 0, 531, 382, 375, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 391, 532,
	533, 534, 392, 535, 393, 394, 0, 395, 0, 396,
	397, 398, 399, 400, 401, 402, 536, 403, 404, 0,
	405, 406, 407, 408, 409, 410, 0, 412, 413, 414,
	411, 415, 416, 417, 418, 0, 419, 0, 420, 421,
	422, 423, 537, 424, 0, 425, 429, 430, 431, 432,
	433, 434, 435, 0, 441, 442, 436, 438, 439, 440,
	437, 443, 444, 445, 0, 446, 426, 427, 447, 448,
	0, 449, 450, 538, 451, 452, 0, 453, 454, 455,
	456, 428, 457, 461, 462, 458, 459, 460, 539, 0,
	464, 465, 463, 633, 466, 467, 468, 469, 470, 288,
	471, 0, 472, 540, 541, 542, 543, 0, 479, 0,
	473, 474, 544, 475, 545, 0, 476, 477, 478, 0,
	480, 481, 0, 0, 482, 483, 484, 486, 487, 485,
	489, 0, 490, 0, 488, 491, 492, 493, 546, 547,
	548, 0, 495, 494, 549, 0, 0, 0, 0, 496,
	497, 550, 498, 499, 500, 1403, 0, 1235, 1234, 0,
	0, 0, 0, 1232, 0, 0, 0, 0, 0, 0,
	637, 0, 0, 0, 224, 225, 226, 227, 228, 0,
	229, 0, 0, 0, 0, 0, 501, 0, 0, 0,
	0, 230, 232, 231, 233, 234, 502, 503, 235, 504,
	238, 236, 237, 505, 0, 239, 240, 241, 242, 243,
	244, 245, 0, 0, 246, 506, 507, 508, 0, 247,
	248, 509, 0, 1126, 0, 249, 250, 251, 252, 253,
	254, 0, 0, 256, 257, 258, 255, 0, 259, 0,
	260, 261, 262, 0, 263, 994, 264, 265, 0, 0,
	0, 0, 0, 0, 0, 266, 267, 268, 269, 270,
	271, 510, 511, 0, 272, 273, 0, 275, 274, 0,
	276, 0, 0, 277, 278, 279, 0, 280, 0, 281,
	282, 0, 283, 512, 284, 285, 287, 289, 286, 290,
	291, 292, 293, 513, 514, 0, 221, 0, 0, 0,
	0, 0, 1402, 295, 296, 515, 297, 298, 0, 299,
	0, 300, 0, 0, 995, 301, 516, 517, 302, 303,
	0, 304, 518, 0, 519, 305, 0, 306, 307, 308,
	309, 520, 521, 522, 369, 997, 310, 311, 0, 312,
	313, 314, 316, 0, 0, 0, 315, 317, 324, 0,
	996, 318, 523, 320, 319, 321, 322, 323, 524, 0,
	525, 0, 325, 998, 526, 999, 326, 327, 328, 1000,
	329, 330, 0, 0, 331, 332, 333, 334, 335, 0,
	337, 336, 0, 338, 527, 1001, 339, 340, 1002, 0,
	341, 342, 343, 0, 0, 344, 345, 346, 347, 0,
	348, 349, 351, 353, 350, 352, 357, 354, 355, 356,
	359, 360, 358, 1003, 361, 362, 365, 366, 364, 1004,
	363, 0, 0, 1005, 367, 0, 528, 368, 529, 370,
	371, 0, 372, 373, 374, 0, 0, 376, 377, 378,
	0, 0, 379, 380, 530, 1006, 381, 1007, 531, 382,
	375, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	391, 532, 533, 534, 392, 535, 393, 394, 0, 395,
	0, 396, 397, 398, 399, 400, 1401, 402, 536, 403,
	404, 0, 405, 406, 407, 408, 409, 410, 0, 412,
	413, 414, 411, 415, 416, 417, 418, 0, 419, 1008,
	420, 421, 422, 423, 537, 424, 0, 425, 429, 430,
	431, 1400, 433, 434, 435, 0, 441, 442, 436, 438,
	439, 440, 437, 443, 444, 445, 0, 446, 426, 427,
	447, 448, 1009, 449, 450, 538, 451, 452, 0, 453,
	454, 455, 456, 428, 457, 461, 462, 458, 459, 460,
	539, 0, 464, 465, 463, 0, 466, 467, 468, 469,
	470, 288, 471, 0, 472, 540, 541, 542, 543, 0,
	479, 0, 473, 474, 544, 475, 545, 0, 476, 477,
	478, 0, 480, 481, 0, 0, 482, 483, 484, 486,
	487, 485, 489, 0, 490, 0, 488, 491, 492, 493,
	546, 547, 548, 0, 495, 494, 549, 0, 0, 0,
	0, 496, 497, 550, 498, 499, 500, 1364, 0, 1235,
	1234, 0, 0, 0, 0, 1232, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 224, 225, 226, 227,
	228, 0, 229, 0, 0, 0, 0, 0, 501, 0,
	0, 0, 0, 230, 232, 231, 233, 234, 502, 503,
	235, 504, 238, 236, 237, 505, 0, 239, 240, 241,
	242, 243, 244, 245, 0, 0, 246, 506, 507, 508,
	0, 247, 248, 509, 0, 1126, 0, 249, 250, 251,
	252, 253, 254, 0, 0, 256, 257, 258, 255, 0,
	259, 0, 260, 261, 262, 0, 263, 994, 264, 265,
	0, 0, 0, 0, 0, 0, 0, 266, 267, 268,
	269, 270, 271, 510, 511, 0, 272, 273, 0, 275,
	274, 0, 276, 0, 0, 277, 278, 279, 0, 280,
	0, 281, 282, 0, 283, 512, 284, 285, 287, 289,
	286, 290, 291, 292, 293, 513, 514, 0, 221, 0,
	0, 0, 0, 0, 294, 295, 296, 515, 297, 298,
	0, 299, 0, 300, 0, 0, 995, 301, 516, 517,
	302, 303, 0, 304, 518, 0, 519, 305, 0, 306,
	307, 308, 309, 1363, 521, 522, 369, 997, 310, 311,
	0, 312, 313, 314, 316, 0, 0, 0, 315, 317,
	324, 0, 996, 318, 523, 320, 319, 321, 322, 323,
	524, 0, 525, 0, 325, 998, 526, 999, 326, 327,
	328, 1000, 329, 330, 0, 0, 331, 332, 333, 334,
	335, 0, 337, 336, 0, 338, 527, 1001, 339, 340,
	1002, 0, 341, 342, 343, 0, 0, 344, 345, 346,
	347, 0, 348, 349, 351, 353, 350, 352, 357, 354,
	355, 356, 359, 360, 358, 1003, 361, 362, 365, 366,
	364, 1004, 363, 0, 0, 1005, 367, 0, 528, 368,
	529, 370, 371, 0, 372, 373, 374, 0, 0, 376,
	377, 378, 0, 0, 379, 380, 530, 1006, 381, 1007,
	531, 382, 375, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 391, 532, 533, 534, 392, 535, 393, 394,
	0, 395, 0, 396, 397, 398, 399, 400, 401, 402,
	536, 403, 404, 0, 405, 406, 407, 408, 409, 410,
	0, 412, 413, 414, 411, 415, 416, 417, 418, 0,
	419, 1008, 420, 421, 422, 423, 537, 424, 0, 425,
	429, 430, 431, 432, 433, 434, 435, 0, 441, 442,
	436, 438, 439, 440, 437, 443, 444, 445, 0, 446,
	426, 427, 447, 448, 1009, 449, 450, 538, 451, 452,
	0, 453, 454, 455, 456, 428, 457, 461, 462, 458,
	459, 460, 539, 0, 464, 465, 463, 0, 466, 467,
	468, 469, 470, 288, 471, 0, 472, 540, 541, 542,
	543, 0, 479, 0, 473, 474, 544, 475, 545, 0,
	476, 477, 478, 0, 480, 481, 0, 0, 482, 483,
	484, 486, 487, 485, 489, 0, 490, 0, 488, 491,
	492, 493, 546, 547, 548, 0, 495, 494, 549, 0,
	0, 0, 0, 496, 497, 550, 498, 499, 500, 1301,
	0, 1235, 1234, 0, 0, 0, 0, 1232, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 224, 225,
	226, 227, 228, 0, 229, 0, 0, 0, 0, 0,
	501, 0, 0, 0, 0, 230, 232, 231, 233, 234,
	502, 503, 235, 504, 238, 236, 237, 505, 0, 239,
	240, 241, 242, 243, 244, 245, 0, 0, 246, 506,
	507, 508, 0, 247, 248, 509, 0, 1126, 0, 249,
	250, 251, 252, 253, 254, 0, 0, 256, 257, 258,
	255, 0, 259, 0, 260, 261, 262, 0, 263, 994,
	264, 265, 0, 0, 0, 0, 0, 0, 0, 266,
	267, 268, 269, 270, 271, 510, 511, 0, 272, 273,
	0, 275, 274, 0, 276, 0, 0, 277, 278, 279,
	0, 280, 0, 281, 282, 0, 283, 512, 284, 285,
	287, 289, 286, 290, 291, 292, 293, 513, 514, 0,
	221, 0, 0, 0, 0, 0, 294, 295, 296, 515,
	297, 298, 0, 299, 0, 300, 0, 0, 995, 301,
	516, 517, 302, 303, 0, 304, 518, 0, 519, 305,
	0, 306, 307, 308, 309, 1300, 521, 522, 369, 997,
	310, 311, 0, 312, 313, 314, 316, 0, 0, 0,
	315, 317, 324, 0, 996, 318, 523, 320, 319, 321,
	322, 323, 524, 0, 525, 0, 325, 998, 526, 999,
	326, 327, 328, 1000, 329, 330, 0, 0, 331, 332,
	333, 334, 335, 0, 337, 336, 0, 338, 527, 1001,
	339, 340, 1002, 0, 341, 342, 343, 0, 0, 344,
	345, 346, 347, 0, 348, 349, 351, 353, 350, 352,
	357, 354, 355, 356, 359, 360, 358, 1003, 361, 362,
	365, 366, 364, 1004, 363, 0, 0, 1005, 367, 0,
	528, 368, 529, 370, 371, 0, 372, 373, 374, 0,
	0, 376, 377, 378, 0, 0, 379, 380, 530, 1006,
	381, 1007, 531, 382, 375, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 391, 532, 533, 534, 392, 535,
	393, 394, 0, 395, 0, 396, 397, 398, 399, 400,
	401, 402, 536, 403, 404, 0, 405, 406, 407, 408,
	409, 410, 0, 412, 413, 414, 411, 415, 416, 417,
	418, 0, 419, 1008, 420, 421, 422, 423, 537, 424,
	0, 425, 429, 430, 431, 432, 433, 434, 435, 0,
	441, 442, 436, 438, 439, 440, 437, 443, 444, 445,
	0, 446, 426, 427, 447, 448, 1009, 449, 450, 538,
	451, 452, 0, 453, 454, 455, 456, 428, 457, 461,
	462, 458, 459, 460, 539, 0, 464, 465, 463, 0,
	466, 467, 468, 469, 470, 288, 471, 0, 472, 540,
	541, 542, 543, 0, 479, 0, 473, 474, 544, 475,
	545, 0, 476, 477, 478, 0, 480, 481, 0, 0,
	482, 483, 484, 486, 487, 485, 489, 0, 490, 0,
	488, 491, 492, 493, 546, 547, 548, 0, 495, 494,
	549, 0, 0, 0, 0, 496, 497, 550, 498, 499,
	500, 1230, 0, 1235, 1234, 0, 0, 0, 0, 1232,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	224, 225, 226, 227, 228, 0, 229, 0, 0, 0,
	0, 0, 501, 0, 0, 0, 0, 230, 232, 231,
	233, 234, 502, 503, 235, 504, 238, 236, 237, 505,
	0, 239, 240, 241, 242, 243, 244, 245, 0, 0,
	246, 506, 507, 508, 0, 247, 248, 509, 0, 1126,
	0, 249, 250, 251, 252, 253, 254, 0, 0, 256,
	257, 258, 255, 0, 259, 0, 260, 261, 262, 0,
	263, 994, 264, 265, 0, 0, 0, 0, 0, 0,
	0, 266, 267, 268, 269, 270, 271, 510, 511, 0,
	272, 273, 0, 275, 274, 0, 276, 0, 0, 277,
	278, 279, 0, 280, 0, 281, 282, 0, 283, 512,
	284, 285, 287, 289, 286, 290, 291, 292, 293, 513,
	514, 0, 221, 0, 0, 0, 0, 0, 294, 295,
	296, 515, 297, 298, 0, 299, 0, 300, 0, 0,
	995, 301, 516, 517, 302, 303, 0, 304, 518, 0,
	519, 305, 0, 306, 307, 308, 309, 1229, 521, 522,
	369, 997, 310, 311, 0, 312, 313, 314, 316, 0,
	0, 0, 315, 317, 324, 0, 996, 318, 523, 320,
	319, 321, 322, 323, 524, 0, 525, 0, 325, 998,
	526, 999, 326, 327, 328, 1000, 329, 330, 0, 0,
	331, 332, 333, 334, 335, 0, 337, 336, 0, 338,
	527, 1001, 339, 340, 1002, 0, 341, 342, 343, 0,
	0, 344, 345, 346, 347, 0, 348, 349, 351, 353,
	350, 352, 357, 354, 355, 356, 359, 360, 358, 1003,
	361, 362, 365, 366, 364, 1004, 363, 0, 0, 1005,
	367, 0, 528, 368, 529, 370, 371, 0, 372, 373,
	374, 0, 0, 376, 377, 378, 0, 0, 379, 380,
	530, 1006, 381, 1007, 531, 382, 375, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 391, 532, 533, 534,
	392, 535, 393, 394, 0, 395, 0, 396, 397, 398,
	399, 400, 401, 402, 536, 403, 404, 0, 405, 406,
	407, 408, 409, 410, 0, 412, 413, 414, 411, 415,
	416, 417, 418, 0, 419, 1008, 420, 421, 422, 423,
	537, 424, 0, 425, 429, 430, 431, 432, 433, 434,
	435, 0, 441, 442, 436, 438, 439, 440, 437, 443,
	444, 445, 0, 446, 426, 427, 447, 448, 1009, 449,
	450, 538, 451, 452, 0, 453, 454, 455, 456, 428,
	457, 461, 462, 458, 459, 460, 539, 0, 464, 465,
	463, 0, 466, 467, 468, 469, 470, 288, 471, 0,
	472, 540, 541, 542, 543, 0, 479, 0, 473, 474,
	544, 475, 545, 0, 476, 477, 478, 0, 480, 481,
	0, 0, 482, 483, 484, 486, 487, 485, 489, 0,
	490, 0, 488, 491, 492, 493, 546, 547, 548, 0,
	495, 494, 549, 0, 0, 0, 0, 496, 497, 550,
	498, 499, 500, 1235, 1234, 0, 0, 0, 0, 1232,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	224, 225, 226, 227, 228, 0, 229, 0, 0, 0,
	0, 0, 501, 0, 0, 0, 0, 230, 232, 231,
	233, 234, 502, 503, 235, 504, 238, 236, 237, 505,
	0, 239, 240, 241, 242, 243, 244, 245, 0, 0,
	246, 506, 507, 508, 0, 247, 248, 509, 0, 1126,
	0, 249, 250, 251, 252, 253, 254, 0, 0, 256,
	257, 258, 255, 0, 259, 0, 260, 261, 262, 0,
	263, 994, 264, 265, 0, 0, 0, 0, 0, 0,
	0, 266, 267, 268, 269, 270, 271, 510, 511, 0,
	272, 273, 0, 275, 274, 0, 276, 0, 0, 277,
	278, 279, 0, 280, 0, 281, 282, 0, 283, 512,
	284, 285, 287, 289, 286, 290, 291, 292, 293, 513,
	514, 0, 221, 0, 0, 0, 0, 0, 294, 295,
	296, 515, 297, 298, 0, 299, 0, 300, 0, 0,
	995, 301, 516, 517, 302, 303, 0, 304, 518, 0,
	519, 305, 0, 306, 307, 308, 309, 520, 521, 522,
	369, 997, 310, 311, 0, 312, 313, 314, 316, 0,
	0, 0, 315, 317, 324, 0, 996, 318, 523, 320,
	319, 321, 322, 323, 524, 0, 525, 0, 325, 998,
	526, 999, 326, 327, 328, 1000, 329, 330, 0, 0,
	331, 332, 333, 334, 335, 0, 337, 336, 0, 338,
	527, 1001, 339, 340, 1002, 0, 341, 342, 343, 0,
	0, 344, 345, 346, 347, 0, 348, 349, 351, 353,
	350, 352, 357, 354, 355, 356, 359, 360, 358, 1003,
	361, 362, 365, 366, 364, 1004, 363, 0, 0, 1005,
	367, 0, 528, 368, 529, 370, 371, 0, 372, 373,
	374, 0, 0, 376, 377, 378, 0, 0, 379, 380,
	530, 1006, 381, 1007, 531, 382, 375, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 391, 532, 533, 534,
	392, 535, 393, 394, 0, 395, 0, 396, 397, 398,
	399, 400, 401, 402, 536, 403, 404, 0, 405, 406,
	407, 408, 409, 410, 0, 412, 413, 414, 411, 415,
	416, 417, 418, 0, 419, 1008, 420, 421, 422, 423,
	537, 424, 0, 425, 429, 430, 431, 432, 433, 434,
	435, 0, 441, 442, 436, 438, 439, 440, 437, 443,
	444, 445, 0, 446, 426, 427, 447, 448, 1009, 449,
	450, 538, 451, 452, 0, 453, 454, 455, 456, 428,
	457, 461, 462, 458, 459, 460, 539, 0, 464, 465,
	463, 0, 466, 467, 468, 469, 470, 288, 471, 0,
	472, 540, 541, 542, 543, 0, 479, 0, 473, 474,
	544, 475, 545, 0, 476, 477, 478, 0, 480, 481,
	0, 0, 482, 483, 484, 486, 487, 485, 489, 0,
	490, 0, 488, 491, 492, 493, 546, 547, 548, 218,
	495, 494, 549, 0, 0, 0, 0, 496, 497, 550,
	498, 499, 500, 0, 0, 0, 224, 225, 226, 227,
	228, 0, 229, 0, 0, 0, 0, 0, 501, 0,
	0, 0, 0, 230, 232, 231, 233, 234, 502, 503,
	235, 504, 238, 236, 237, 505, 0, 239, 240, 241,
	242, 243, 244, 245, 0, 0, 246, 506, 507, 508,
	0, 247, 248, 509, 0, 0, 0, 249, 250, 251,
	252, 253, 254, 0, 0, 256, 257, 258, 255, 0,
	259, 0, 260, 261, 262, 0, 263, 0, 264, 265,
	0, 0, 0, 0, 0, 0, 0, 266, 267, 268,
	269, 270, 271, 510, 511, 0, 272, 273, 0, 275,
	274, 0, 276, 0, 0, 277, 278, 279, 0, 280,
	0, 281, 282, 0, 283, 512, 284, 285, 287, 289,
	286, 290, 291, 292, 293, 513, 514, 0, 221, 0,
	0, 0, 0, 0, 294, 295, 296, 515, 297, 298,
	0, 299, 0, 300, 0, 0, 0, 301, 516, 517,
	302, 303, 0, 304, 518, 0, 519, 305, 0, 306,
	307, 308, 309, 520, 521, 522, 369, 0, 310, 311,
	0, 312, 313, 314, 316, 0, 0, 222, 315, 317,
	324, 0, 0, 318, 523, 320, 319, 321, 322, 323,
	524, 0, 525, 0, 325, 0, 526, 0, 326, 327,
	328, 0, 329, 330, 0, 0, 331, 332, 333, 334,
	335, 0, 337, 336, 0, 338, 527, 0, 339, 340,
	0, 0, 341, 342, 343, 0, 0, 344, 345, 346,
	347, 0, 348, 349, 351, 353, 350, 352, 357, 354,
	355, 356, 359, 360, 358, 0, 361, 362, 365, 366,
	364, 0, 363, 0, 223, 0, 367, 0, 528, 368,
	529, 370, 371, 0, 372, 373, 374, 0, 0, 376,
	377, 378, 0, 0, 379, 380, 530, 0, 381, 0,
	531, 382, 375, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 391, 532, 533, 534, 392, 535, 393, 394,
	0, 395, 0, 396, 397, 398, 399, 400, 401, 402,
	536, 403, 404, 0, 405, 406, 407, 408, 409, 410,
	0, 412, 413, 414, 411, 415, 416, 417, 418, 0,
	419, 0, 420, 421, 422, 423, 537, 424, 0, 425,
	429, 430, 431, 432, 433, 434, 435, 0, 441, 442,
	436, 438, 439, 440, 437, 443, 444, 445, 0, 446,
	426, 427, 447, 448, 0, 449, 450, 538, 451, 452,
	0, 453, 454, 455, 456, 428, 457, 461, 462, 458,
	459, 460, 539, 0, 464, 465, 463, 0, 466, 467,
	468, 469, 470, 288, 471, 0, 472, 540, 541, 542,
	543, 0, 479, 0, 473, 474, 544, 475, 545, 0,
	476, 477, 478, 0, 480, 481, 0, 0, 482, 483,
	484, 486, 487, 485, 489, 0, 490, 0, 488, 491,
	492, 493, 546, 547, 548, 0, 495, 494, 549, 1235,
	1234, 0, 0, 496, 497, 550, 498, 499, 500, 0,
	0, 0, 0, 0, 0, 0, 224, 225, 226, 227,
	228, 0, 229, 0, 637, 0, 0, 0, 501, 0,
	0, 0, 0, 230, 232, 231, 233, 234, 502, 503,
	235, 504, 238, 236, 237, 505, 0, 239, 240, 241,
	242, 243, 244, 245, 0, 0, 246, 506, 507, 508,
	0, 247, 248, 509, 0, 1126, 0, 249, 250, 251,
	252, 253, 254, 0, 0, 256, 257, 258, 255, 0,
	259, 0, 260, 261, 262, 0, 263, 994, 264, 265,
	0, 0, 0, 0, 0, 0, 0, 266, 267, 268,
	269, 270, 271, 510, 511, 1777, 272, 273, 0, 275,
	274, 0, 276, 0, 0, 277, 278, 279, 0, 280,
	0, 281, 282, 0, 283, 512, 284, 285, 287, 289,
	286, 290, 291, 292, 293, 513, 514, 0, 221, 0,
	0, 0, 0, 0, 294, 295, 296, 515, 297, 298,
	0, 299, 0, 300, 0, 0, 995, 301, 516, 517,
	302, 303, 0, 304, 518, 0, 519, 305, 0, 306,
	307, 308, 309, 520, 521, 522, 369, 997, 310, 311,
	0, 312, 313, 314, 316, 0, 0, 0, 315, 317,
	324, 0, 996, 318, 523, 320, 319, 321, 322, 323,
	524, 0, 525, 0, 325, 998, 526, 999, 326, 327,
	328, 1000, 329, 330, 0, 0, 331, 332, 333, 334,
	335, 0, 337, 336, 0, 338, 527, 1001, 339, 340,
	1002, 0, 341, 342, 343, 0, 0, 344, 345, 346,
	347, 0, 348, 349, 351, 353, 350, 352, 357, 354,
	355, 356, 359, 360, 358, 1003, 361, 362, 365, 366,
	364, 1004, 363, 0, 0, 1005, 367, 0, 528, 368,
	529, 370, 371, 0, 372, 373, 374, 0, 0, 376,
	377, 378, 0, 0, 379, 380, 530, 1006, 381, 1007,
	531, 382, 375, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 391, 532, 533, 534, 392, 535, 393, 394,
	0, 395, 0, 396, 397, 398, 399, 400, 401, 402,
	536, 403, 404, 0, 405, 406, 407, 408, 409, 410,
	0, 412, 413, 414, 411, 415, 416, 417, 418, 0,
	419, 1008, 420, 421, 422, 423, 537, 424, 0, 425,
	429, 430, 431, 432, 433, 434, 435, 0, 441, 442,
	436, 438, 439, 440, 437, 443, 444, 445, 0, 446,
	426, 427, 447, 448, 1009, 449, 450, 538, 451, 452,
	0, 453, 454, 455, 456, 428, 457, 461, 462, 458,
	459, 460, 539, 0, 464, 465, 463, 0, 466, 467,
	468, 469, 470, 288, 471, 0, 472, 540, 541, 542,
	543, 0, 479, 0, 473, 474, 544, 475, 545, 0,
	476, 477, 478, 0, 480, 481, 0, 0, 482, 483,
	484, 486, 487, 485, 489, 0, 490, 0, 488, 491,
	492, 493, 546, 547, 548, 0, 495, 494, 549, 1235,
	1234, 0, 0, 496, 497, 550, 498, 499, 500, 0,
	0, 0, 0, 0, 0, 0, 224, 225, 226, 227,
	228, 0, 229, 0, 0, 0, 0, 0, 501, 0,
	0, 0, 0, 230, 232, 231, 233, 234, 502, 503,
	235, 504, 238, 236, 237, 505, 0, 239, 240, 241,
	242, 243, 244, 245, 0, 0, 246, 506, 507, 508,
	0, 247, 248, 509, 0, 1126, 0, 249, 250, 251,
	252, 253, 254, 0, 0, 256, 257, 258, 255, 0,
	259, 0, 260, 261, 262, 0, 263, 994, 264, 265,
	0, 0, 0, 0, 0, 0, 0, 266, 267, 268,
	269, 270, 271, 510, 511, 0, 272, 273, 0, 275,
	274, 0, 276, 0, 0, 277, 278, 279, 0, 280,
	0, 281, 282, 0, 283, 512, 284, 285, 287, 289,
	286, 290, 291, 292, 293, 513, 514, 0, 221, 0,
	0, 0, 0, 0, 294, 295, 296, 515, 297, 298,
	0, 299, 0, 300, 0, 0, 995, 301, 516, 517,
	302, 303, 0, 304, 518, 0, 519, 305, 0, 306,
	307, 308, 309, 520, 521, 522, 369, 997, 310, 311,
	0, 312, 313, 314, 316, 0, 0, 0, 315, 317,
	324, 0, 996, 318, 523, 320, 319, 321, 322, 323,
	524, 0, 525, 0, 325, 998, 526, 999, 326, 327,
	328, 1000, 329, 330, 0, 0, 331, 332, 333, 334,
	335, 0, 337, 336, 0, 338, 527, 1001, 339, 340,
	1002, 0, 341, 342, 343, 0, 0, 344, 345, 346,
	347, 0, 348, 349, 351, 353, 350, 352, 357, 354,
	355, 356, 359, 360, 358, 1003, 361, 362, 365, 366,
	364, 1004, 363, 0, 0, 1005, 367, 0, 528, 368,
	529, 370, 371, 0, 372, 373, 374, 0, 0, 376,
	377, 378, 0, 0, 379, 380, 530, 1006, 381, 1007,
	531, 382, 375, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 391, 532, 533, 534, 392, 535, 393, 394,
	0, 395, 0, 396, 397, 398, 399, 400, 401, 402,
	536, 403, 404, 0, 405, 406, 407, 408, 409, 410,
	0, 412, 413, 414, 411, 415, 416, 417, 418, 0,
	419, 1008, 420, 421, 422, 423, 537, 424, 0, 425,
	429, 430, 431, 432, 433, 434, 435, 0, 441, 442,
	436, 438, 439, 440, 437, 443, 444, 445, 0, 446,
	426, 427, 447, 448, 1009, 449, 450, 538, 451, 452,
	0, 453, 454, 455, 456, 428, 457, 461, 462, 458,
	459, 460, 539, 0, 464, 465, 463, 0, 466, 467,
	468, 469, 470, 288, 471, 0, 472, 540, 541, 542,
	543, 0, 479, 0, 473, 474, 544, 475, 545, 0,
	476, 477, 478, 0, 480, 481, 0, 0, 482, 483,
	484, 486, 487, 485, 489, 0, 490, 0, 488, 491,
	492, 493, 546, 547, 548, 1235, 495, 494, 549, 0,
	0, 0, 0, 496, 497, 550, 498, 499, 500, 0,
	0, 0, 224, 225, 226, 227, 228, 0, 229, 0,
	0, 0, 0, 0, 501, 0, 0, 0, 0, 230,
	232, 231, 233, 234, 502, 503, 235, 504, 238, 236,
	237, 505, 0, 239, 240, 241, 242, 243, 244, 245,
	0, 0, 246, 506, 507, 508, 0, 247, 248, 509,
	0, 1126, 0, 249, 250, 251, 252, 253, 254, 0,
	0, 256, 257, 258, 255, 0, 259, 0, 260, 261,
	262, 0, 263, 994, 264, 265, 0, 0, 0, 0,
	0, 0, 0, 266, 267, 268, 269, 270, 271, 510,
	511, 0, 272, 273, 0, 275, 274, 0, 276, 0,
	0, 277, 278, 279, 0, 280, 0, 281, 282, 0,
	283, 512, 284, 285, 287, 289, 286, 290, 291, 292,
	293, 513, 514, 0, 221, 0, 0, 0, 0, 0,
	294, 295, 296, 515, 297, 298, 0, 299, 0, 300,
	0, 0, 995, 301, 516, 517, 302, 303, 0, 304,
	518, 0, 519, 305, 0, 306, 307, 308, 309, 520,
	521, 522, 369, 997, 310, 311, 0, 312, 313, 314,
	316, 0, 0, 0, 315, 317, 324, 0, 996, 318,
	523, 320, 319, 321, 322, 323, 524, 0, 525, 0,
	325, 998, 526, 999, 326, 327, 328, 1000, 329, 330,
	0, 0, 331, 332, 333, 334, 335, 0, 337, 336,
	0, 338, 527, 1001, 339, 340, 1002, 0, 341, 342,
	343, 0, 0, 344, 345, 346, 347, 0, 348, 349,
	351, 353, 350, 352, 357, 354, 355, 356, 359, 360,
	358, 1003, 361, 362, 365, 366, 364, 1004, 363, 0,
	0, 1005, 367, 0, 528, 368, 529, 370, 371, 0,
	372, 373, 374, 0, 0, 376, 377, 378, 0, 0,
	379, 380, 530, 1006, 381, 1007, 531, 382, 375, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 391, 532,
	533, 534, 392, 535, 393, 394, 0, 395, 0, 396,
	397, 398, 399, 400, 401, 402, 536, 403, 404, 0,
	405, 406, 407, 408, 409, 410, 0, 412, 413, 414,
	411, 415, 416, 417, 418, 0, 419, 1008, 420, 421,
	422, 423, 537, 424, 0, 425, 429, 430, 431, 432,
	433, 434, 435, 0, 441, 442, 436, 438, 439, 440,
	437, 443, 444, 445, 0, 446, 426, 427, 447, 448,
	1009, 449, 450, 538, 451, 452, 0, 453, 454, 455,
	456, 428, 457, 461, 462, 458, 459, 460, 539, 0,
	464, 465, 463, 0, 466, 467, 468, 469, 470, 288,
	471, 0, 472, 540, 541, 542, 543, 0, 479, 0,
	473, 474, 544, 475, 545, 0, 476, 477, 478, 0,
	480, 481, 0, 0, 482, 483, 484, 486, 487, 485,
	489, 0, 490, 0, 488, 491, 492, 493, 546, 547,
	548, 218, 495, 494, 549, 0, 0, 0, 0, 496,
	497, 550, 498, 499, 500, 0, 0, 0, 224, 225,
	226, 227, 228, 0, 229, 0, 0, 0, 0, 0,
	501, 0, 0, 0, 0, 230, 232, 231, 233, 234,
	502, 503, 235, 504, 238, 236, 237, 505, 0, 239,
	240, 241, 242, 243, 244, 245, 0, 0, 246, 506,
	507, 508, 2375, 247, 248, 509, 0, 0, 0, 249,
	250, 251, 252, 253, 254, 0, 0, 256, 257, 258,
	255, 2372, 259, 0, 260, 261, 262, 0, 263, 0,
	264, 265, 0, 0, 0, 0, 0, 0, 0, 266,
	267, 268, 269, 270, 271, 510, 511, 0, 272, 273,
	0, 275, 274, 0, 276, 0, 0, 277, 278, 279,
	0, 280, 0, 281, 282, 0, 2379, 512, 284, 285,
	287, 289, 286, 290, 291, 292, 293, 513, 514, 0,
	2536, 0, 0, 0, 0, 0, 294, 295, 296, 515,
	297, 298, 0, 299, 0, 300, 2378, 0, 0, 301,
	516, 517, 302, 303, 0, 304, 518, 0, 519, 305,
	0, 306, 307, 308, 309, 520, 521, 522, 369, 0,
	310, 311, 0, 312, 313, 314, 316, 0, 0, 2533,
	315, 317, 324, 0, 0, 318, 523, 320, 319, 321,
	322, 323, 524, 0, 525, 0, 2535, 0, 526, 0,
	326, 327, 328, 0, 329, 330, 0, 0, 331, 332,
	333, 334, 335, 0, 337, 336, 0, 338, 527, 0,
	339, 340, 2532, 0, 341, 342, 343, 0, 0, 344,
	345, 346, 347, 0, 348, 349, 351, 353, 350, 352,
	357, 354, 355, 356, 359, 360, 358, 0, 361, 362,
	365, 366, 364, 0, 363, 0, 0, 0, 367, 0,
	528, 368, 529, 370, 371, 0, 372, 373, 374, 0,
	0, 376, 377, 378, 0, 0, 379, 380, 530, 0,
	381, 0, 531, 382, 375, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 391, 532, 533, 534, 392, 535,
	393, 394, 2377, 395, 0, 396, 397, 398, 399, 400,
	401, 402, 536, 403, 404, 0, 405, 406, 407, 408,
	409, 410, 0, 412, 413, 414, 411, 415, 416, 417,
	418, 0, 419, 0, 420, 421, 422, 423, 537, 424,
	0, 425, 429, 430, 431, 432, 433, 434, 435, 0,
	441, 442, 436, 438, 439, 440, 437, 443, 444, 445,
	0, 446, 426, 427, 447, 448, 0, 449, 450, 538,
	451, 452, 0, 453, 454, 455, 456, 428, 457, 461,
	462, 458, 459, 460, 539, 0, 464, 465, 463, 0,
	466, 467, 468, 469, 470, 288, 471, 0, 472, 540,
	541, 542, 543, 0, 479, 0, 473, 474, 544, 475,
	545, 0, 476, 477, 478, 0, 480, 481, 0, 2534,
	482, 483, 484, 486, 487, 485, 489, 0, 490, 0,
	488, 491, 492, 493, 546, 547, 548, 218, 495, 494,
	549, 0, 0, 0, 0, 496, 497, 550, 498, 499,
	500, 0, 0, 0, 224, 225, 226, 227, 228, 0,
	229, 0, 0, 0, 0, 0, 501, 0, 0, 0,
	0, 230, 232, 231, 233, 234, 502, 503, 235, 504,
	238, 236, 237, 505, 0, 239, 240, 241, 242, 243,
	244, 245, 0, 0, 246, 506, 507, 508, 2375, 247,
	248, 509, 0, 0, 2369, 249, 250, 251, 252, 253,
	254, 0, 0, 256, 257, 258, 255, 2372, 259, 0,
	260, 261, 262, 0, 263, 0, 264, 265, 0, 0,
	0, 0, 0, 0, 0, 266, 267, 268, 269, 270,
	271, 510, 511, 0, 272, 273, 0, 275, 274, 0,
	276, 0, 0, 277, 278, 279, 0, 280, 0, 281,
	282, 0, 2379, 512, 284, 285, 287, 289, 286, 290,
	291, 292, 293, 513, 514, 0, 0, 0, 0, 0,
	0, 0, 294, 295, 296, 515, 297, 298, 0, 299,
	0, 300, 2378, 0, 0, 301, 516, 517, 302, 303,
	0, 304, 518, 0, 519, 305, 0, 306, 307, 308,
	309, 2368, 521, 522, 369, 0, 310, 311, 0, 312,
	313, 314, 316, 0, 0, 0, 315, 317, 324, 0,
	0, 318, 523, 320, 319, 321, 322, 323, 524, 0,
	525, 0, 325, 0, 526, 0, 326, 327, 328, 0,
	329, 330, 0, 0, 331, 332, 333, 334, 335, 0,
	337, 336, 0, 338, 527, 0, 339, 340, 0, 0,
	341, 342, 343, 0, 0, 344, 345, 346, 347, 0,
	348, 349, 351, 353, 350, 352, 357, 354, 355, 356,
	359, 360, 358, 0, 361, 362, 365, 366, 364, 0,
	363, 0, 0, 0, 367, 0, 528, 368, 529, 370,
	371, 0, 372, 373, 374, 0, 0, 376, 377, 378,
	0, 0, 379, 380, 530, 0, 381, 0, 531, 382,
	375, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	391, 532, 533, 534, 392, 535, 393, 394, 2377, 395,
	0, 396, 397, 398, 399, 400, 401, 402, 536, 403,
	404, 0, 405, 406, 407, 408, 409, 410, 0, 412,
	413, 414, 411, 415, 416, 417, 418, 0, 419, 0,
	420, 421, 422, 423, 537, 424, 0, 425, 429, 430,
	431, 432, 433, 434, 435, 0, 441, 442, 436, 438,
	439, 440, 437, 443, 444, 445, 0, 446, 426, 427,
	447, 448, 0, 449, 450, 538, 451, 452, 0, 453,
	454, 455, 456, 428, 457, 461, 462, 458, 459, 460,
	539, 0, 464, 465, 463, 0, 466, 467, 468, 469,
	470, 288, 471, 0, 472, 540, 541, 542, 543, 0,
	479, 0, 473, 474, 544, 475, 545, 0, 476, 477,
	478, 0, 480, 481, 0, 2376, 482, 483, 484, 486,
	487, 485, 489, 0, 490, 0, 488, 491, 492, 493,
	546, 547, 548, 0, 495, 494, 549, 1460, 0, 218,
	0, 496, 497, 550, 498, 499, 500, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 224, 225, 226, 227,
	228, 0, 229, 0, 0, 0, 0, 0, 501, 0,
	0, 0, 0, 230, 232, 231, 233, 234, 502, 503,
	235, 504, 238, 236, 237, 505, 0, 239, 240, 241,
	242, 243, 244, 245, 0, 0, 246, 506, 507, 508,
	0, 247, 248, 509, 0, 0, 0, 249, 250, 251,
	252, 253, 254, 0, 0, 256, 257, 258, 255, 0,
	259, 0, 260, 261, 262, 0, 263, 0, 264, 265,
	0, 0, 0, 0, 0, 0, 0, 266, 267, 268,
	269, 270, 271, 510, 511, 0, 272, 273, 0, 275,
	274, 0, 276, 0, 0, 277, 278, 279, 0, 280,
	0, 281, 282, 0, 283, 512, 284, 285, 287, 289,
	286, 290, 291, 292, 293, 513, 514, 0, 221, 0,
	0, 0, 0, 0, 294, 295, 296, 515, 297, 298,
	0, 299, 0, 300, 0, 0, 0, 301, 516, 517,
	302, 303, 0, 304, 518, 0, 519, 305, 0, 306,
	307, 308, 309, 520, 521, 522, 369, 0, 310, 311,
	0, 312, 313, 314, 316, 0, 0, 222, 315, 317,
	324, 0, 0, 318, 523, 320, 319, 321, 322, 323,
	524, 0, 525, 0, 325, 0, 526, 0, 326, 327,
	328, 0, 329, 330, 0, 0, 331, 332, 333, 334,
	335, 0, 337, 336, 0, 338, 527, 0, 339, 340,
	0, 0, 341, 342, 343, 0, 0, 344, 345, 346,
	347, 0, 348, 349, 351, 353, 350, 352, 357, 354,
	355, 356, 359, 360, 358, 0, 361, 362, 365, 366,
	364, 0, 363, 0, 223, 0, 367, 0, 528, 368,
	529, 370, 371, 0, 372, 373, 374, 0, 0, 376,
	377, 378, 0, 0, 379, 380, 530, 0, 381, 0,
	531, 382, 375, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 391, 532, 533, 534, 392, 535, 393, 394,
	0, 395, 0, 396, 397, 398, 399, 400, 401, 402,
	536, 403, 404, 0, 405, 406, 407, 408, 409, 410,
	0, 412, 413, 414, 411, 415, 416, 417, 418, 0,
	419, 0, 420, 421, 422, 423, 537, 424, 0, 425,
	429, 430, 431, 432, 433, 434, 435, 0, 1463, 442,
	436, 438, 439, 440, 437, 443, 444, 445, 0, 446,
	426, 427, 447, 448, 0, 449, 450, 538, 451, 452,
	0, 453, 454, 455, 456, 428, 457, 461, 462, 458,
	459, 460, 539, 0, 464, 465, 463, 1461, 466, 467,
	468, 469, 470, 288, 471, 0, 472, 540, 541, 542,
	543, 0, 479, 0, 473, 474, 544, 475, 545, 0,
	476, 477, 478, 0, 480, 481, 0, 0, 482, 483,
	484, 486, 487, 485, 489, 0, 490, 0, 488, 491,
	492, 493, 546, 547, 548, 0, 1462, 494, 549, 1211,
	0, 218, 0, 496, 497, 550, 498, 499, 500, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 224, 225,
	226, 227, 228, 0, 229, 0, 0, 0, 0, 0,
	501, 0, 0, 0, 0, 230, 232, 231, 233, 234,
	502, 503, 235, 504, 238, 236, 237, 505, 0, 239,
	240, 241, 242, 243, 244, 245, 0, 0, 246, 506,
	507, 508, 0, 247, 248, 509, 0, 0, 0, 249,
	250, 251, 252, 253, 254, 0, 0, 256, 257, 258,
	255, 0, 259, 0, 260, 261, 262, 0, 263, 0,
	264, 265, 0, 0, 0, 0, 0, 0, 0, 266,
	267, 268, 269, 270, 271, 510, 511, 0, 272, 273,
	0, 275, 274, 0, 276, 0, 0, 277, 278, 279,
	0, 280, 0, 281, 282, 0, 283, 512, 284, 285,
	287, 289, 286, 290, 291, 292, 293, 513, 514, 0,
	221, 0, 0, 0, 0, 0, 294, 295, 296, 515,
	297, 298, 0, 299, 0, 300, 0, 0, 0, 301,
	516, 517, 302, 303, 0, 304, 518, 0, 519, 305,
	0, 306, 307, 308, 309, 1213, 521, 522, 369, 0,
	310, 311, 0, 312, 313, 314, 316, 0, 0, 222,
	315, 317, 324, 0, 0, 318, 523, 320, 319, 321,
	322, 323, 524, 0, 525, 0, 325, 0, 526, 0,
	326, 327, 328, 0, 329, 330, 0, 0, 331, 332,
	333, 334, 335, 0, 337, 336, 0, 338, 527, 0,
	339, 340, 0, 0, 341, 342, 343, 0, 0, 344,
	345, 346, 347, 0, 348, 349, 351, 353, 350, 352,
	357, 354, 355, 356, 359, 360, 358, 0, 361, 362,
	365, 366, 364, 0, 363, 0, 223, 0, 367, 0,
	528, 368, 529, 370, 371, 0, 372, 373, 374, 0,
	1051, 376, 377, 378, 0, 0, 379, 380, 530, 0,
	381, 0, 531, 382, 375, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 391, 532, 533, 534, 392, 535,
	393, 394, 0, 395, 0, 396, 397, 398, 399, 400,
	401, 402, 536, 403, 404, 0, 405, 406, 407, 408,
	409, 410, 0, 412, 413, 414, 411, 415, 416, 417,
	418, 0, 419, 0, 420, 421, 422, 423, 537, 424,
	0, 425, 429, 430, 431, 432, 433, 434, 435, 0,
	441, 442, 436, 438, 439, 440, 437, 443, 444, 445,
	0, 446, 426, 427, 447, 448, 0, 449, 450, 538,
	451, 452, 0, 453, 454, 455, 456, 428, 457, 461,
	462, 458, 459, 460, 539, 0, 464, 465, 463, 0,
	466, 467, 468, 469, 470, 288, 471, 0, 472, 540,
	541, 542, 543, 0, 479, 0, 473, 474, 544, 475,
	545, 0, 476, 477, 478, 0, 480, 481, 0, 0,
	482, 483, 484, 486, 487, 485, 489, 0, 490, 0,
	488, 491, 492, 493, 546, 547, 548, 0, 495, 494,
	549, 1208, 0, 218, 0, 496, 497, 550, 498, 499,
	500, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	224, 225, 226, 227, 228, 0, 229, 0, 0, 0,
	0, 0, 501, 0, 0, 0, 0, 230, 232, 231,
	233, 234, 502, 503, 235, 504, 238, 236, 237, 505,
	0, 239, 240, 241, 242, 243, 244, 245, 0, 0,
	246, 506, 507, 508, 0, 247, 248, 509, 0, 0,
	0, 249, 250, 251, 252, 253, 254, 0, 0, 256,
	257, 258, 255, 0, 259, 0, 260, 261, 262, 0,
	263, 0, 264, 265, 0, 0, 0, 0, 0, 0,
	0, 266, 267, 268, 269, 270, 271, 510, 511, 0,
	272, 273, 0, 275, 274, 0, 276, 0, 0, 277,
	278, 279, 0, 280, 0, 281, 282, 0, 283, 512,
	284, 285, 287, 289, 286, 290, 291, 292, 293, 513,
	514, 0, 221, 0, 0, 0, 0, 0, 294, 295,
	296, 515, 297, 298, 0, 299, 0, 300, 0, 0,
	0, 301, 516, 517, 302, 303, 0, 304, 518, 0,
	519, 305, 0, 306, 307, 308, 309, 1210, 521, 522,
	369, 0, 310, 311, 0, 312, 313, 314, 316, 0,
	0, 222, 315, 317, 324, 0, 0, 318, 523, 320,
	319, 321, 322, 323, 524, 0, 525, 0, 325, 0,
	526, 0, 326, 327, 328, 0, 329, 330, 0, 0,
	331, 332, 333, 334, 335, 0, 337, 336, 0, 338,
	527, 0, 339, 340, 0, 0, 341, 342, 343, 0,
	0, 344, 345, 346, 347, 0, 348, 349, 351, 353,
	350, 352, 357, 354, 355, 356, 359, 360, 358, 0,
	361, 362, 365, 366, 364, 0, 363, 0, 223, 0,
	367, 0, 528, 368, 529, 370, 371, 0, 372, 373,
	374, 0, 1051, 376, 377, 378, 0, 0, 379, 380,
	530, 0, 381, 0, 531, 382, 375, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 391, 532, 533, 534,
	392, 535, 393, 394, 0, 395, 0, 396, 397, 398,
	399, 400, 401, 402, 536, 403, 404, 0, 405, 406,
	407, 408, 409, 410, 0, 412, 413, 414, 411, 415,
	416, 417, 418, 0, 419, 0, 420, 421, 422, 423,
	537, 424, 0, 425, 429, 430, 431, 432, 433, 434,
	435, 0, 441, 442, 436, 438, 439, 440, 437, 443,
	444, 445, 0, 446, 426, 427, 447, 448, 0, 449,
	450, 538, 451, 452, 0, 453, 454, 455, 456, 428,
	457, 461, 462, 458, 459, 460, 539, 0, 464, 465,
	463, 0, 466, 467, 468, 469, 470, 288, 471, 0,
	472, 540, 541, 542, 543, 0, 479, 0, 473, 474,
	544, 475, 545, 0, 476, 477, 478, 0, 480, 481,
	0, 0, 482, 483, 484, 486, 487, 485, 489, 0,
	490, 0, 488, 491, 492, 493, 546, 547, 548, 0,
	495, 494, 549, 1114, 0, 218, 0, 496, 497, 550,
	498, 499, 500, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 224, 225, 226, 227, 228, 0, 229, 0,
	0, 0, 0, 0, 501, 0, 0, 0, 0, 230,
	232, 231, 233, 234, 502, 503, 235, 504, 238, 236,
	237, 505, 0, 239, 240, 241, 242, 243, 244, 245,
	0, 0, 246, 506, 507, 508, 0, 247, 248, 509,
	0, 0, 0, 249, 250, 251, 252, 253, 254, 0,
	0, 256, 257, 258, 255, 0, 259, 0, 260, 261,
	262, 0, 263, 0, 264, 265, 0, 0, 0, 0,
	0, 0, 0, 266, 267, 268, 269, 270, 271, 510,
	511, 0, 272, 273, 0, 275, 274, 0, 276, 0,
	0, 277, 278, 279, 0, 280, 0, 281, 282, 0,
	283, 512, 284, 285, 287, 289, 286, 290, 291, 292,
	293, 513, 514, 0, 221, 0, 0, 0, 0, 0,
	294, 295, 296, 515, 297, 298, 0, 299, 0, 300,
	0, 0, 0, 301, 516, 517, 302, 303, 0, 304,
	518, 0, 519, 305, 0, 306, 307, 308, 309, 1116,
	521, 522, 369, 0, 310, 311, 0, 312, 313, 314,
	316, 0, 0, 222, 315, 317, 324, 0, 0, 318,
	523, 320, 319, 321, 322, 323, 524, 0, 525, 0,
	325, 0, 526, 0, 326, 327, 328, 0, 329, 330,
	0, 0, 331, 332, 333, 334, 335, 0, 337, 336,
	0, 338, 527, 0, 339, 340, 0, 0, 341, 342,
	343, 0, 0, 344, 345, 346, 347, 0, 348, 349,
	351, 353, 350, 352, 357, 354, 355, 356, 359, 360,
	358, 0, 361, 362, 365, 366, 364, 0, 363, 0,
	223, 0, 367, 0, 528, 368, 529, 370, 371, 0,
	372, 373, 374, 0, 1051, 376, 377, 378, 0, 0,
	379, 380, 530, 0, 381, 0, 531, 382, 375, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 391, 532,
	533, 534, 392, 535, 393, 394, 0, 395, 0, 396,
	397, 398, 399, 400, 401, 402, 536, 403, 404, 0,
	405, 406, 407, 408, 409, 410, 0, 412, 413, 414,
	411, 415, 416, 417, 418, 0, 419, 0, 420, 421,
	422, 423, 537, 424, 0, 425, 429, 430, 431, 432,
	433, 434, 435, 0, 441, 442, 436, 438, 439, 440,
	437, 443, 444, 445, 0, 446, 426, 427, 447, 448,
	0, 449, 450, 538, 451, 452, 0, 453, 454, 455,
	456, 428, 457, 461, 462, 458, 459, 460, 539, 0,
	464, 465, 463, 0, 466, 467, 468, 469, 470, 288,
	471, 0, 472, 540, 541, 542, 543, 0, 479, 0,
	473, 474, 544, 475, 545, 0, 476, 477, 478, 0,
	480, 481, 0, 0, 482, 483, 484, 486, 487, 485,
	489, 0, 490, 0, 488, 491, 492, 493, 546, 547,
	548, 0, 495, 494, 549, 579, 0, 218, 0, 496,
	497, 550, 498, 499, 500, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 224, 225, 226, 578, 228, 568,
	229, 0, 0, 0, 0, 0, 501, 0, 0, 0,
	0, 230, 232, 231, 233, 234, 502, 503, 235, 504,
	238, 236, 237, 505, 0, 239, 240, 241, 242, 243,
	244, 245, 0, 0, 246, 506, 507, 508, 0, 247,
	248, 509, 0, 0, 0, 249, 250, 251, 252, 253,
	254, 0, 0, 256, 257, 258, 255, 0, 259, 0,
	260, 261, 262, 571, 263, 0, 264, 265, 0, 0,
	0, 0, 0, 0, 0, 266, 267, 268, 269, 270,
	271, 510, 511, 0, 272, 273, 0, 275, 274, 0,
	276, 0, 0, 277, 278, 279, 0, 280, 0, 281,
	282, 0, 283, 512, 284, 285, 287, 289, 286, 290,
	291, 292, 293, 513, 514, 0, 0, 0, 0, 0,
	0, 0, 294, 295, 296, 515, 297, 298, 0, 299,
	0, 300, 0, 0, 0, 301, 516, 517, 302, 303,
	572, 304, 518, 0, 519, 305, 0, 306, 307, 308,
	309, 520, 521, 522, 369, 0, 310, 311, 0, 312,
	313, 314, 316, 0, 0, 0, 315, 317, 324, 0,
	0, 318, 523, 320, 319, 321, 322, 323, 524, 0,
	525, 0, 325, 0, 526, 0, 326, 327, 328, 0,
	329, 330, 0, 0, 331, 332, 333, 334, 335, 0,
	337, 336, 0, 338, 527, 0, 339, 340, 0, 0,
	341, 342, 343, 0, 0, 344, 345, 346, 347, 0,
	348, 349, 351, 353, 350, 352, 357, 354, 355, 356,
	359, 360, 358, 0, 361, 362, 365, 366, 364, 0,
	363, 0, 0, 0, 367, 0, 528, 368, 529, 370,
	371, 0, 372, 373, 374, 0, 0, 376, 377, 378,
	0, 0, 379, 380, 530, 0, 381, 0, 531, 382,
	375, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	391, 532, 533, 534, 392, 535, 393, 394, 0, 395,
	0, 396, 397, 398, 399, 400, 401, 402, 536, 403,
	404, 0, 405, 406, 407, 408, 409, 410, 0, 412,
	413, 414, 411, 415, 416, 417, 418, 0, 419, 0,
	420, 421, 422, 423, 537, 424, 0, 425, 429, 430,
	431, 432, 433, 434, 435, 573, 441, 442, 436, 438,
	439, 440, 437, 443, 444, 445, 0, 446, 426, 427,
	447, 448, 0, 449, 450, 538, 451, 452, 0, 453,
	454, 455, 456, 428, 457, 461, 462, 458, 459, 460,
	539, 0, 464, 465, 463, 0, 466, 467, 468, 469,
	470, 288, 471, 0, 472, 540, 541, 542, 543, 0,
	479, 0, 473, 474, 544, 475, 545, 0, 476, 477,
	478, 0, 480, 481, 0, 0, 482, 483, 484, 486,
	487, 485, 489, 0, 490, 0, 488, 491, 492, 493,
	546, 547, 548, 0, 495, 494, 549, 567, 0, 218,
	0, 496, 497, 550, 498, 499, 500, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 224, 225, 226, 227,
	228, 568, 229, 0, 0, 0, 0, 0, 501, 0,
	0, 0, 0, 230, 232, 231, 233, 234, 502, 503,
	235, 504, 238, 236, 237, 505, 0, 239, 240, 241,
	242, 243, 244, 245, 0, 0, 246, 506, 507, 508,
	0, 247, 248, 509, 0, 0, 0, 249, 250, 251,
	252, 253, 254, 0, 0, 256, 257, 258, 255, 0,
	259, 0, 260, 261, 262, 571, 263, 0, 264, 265,
	0, 0, 0, 0, 0, 0, 0, 266, 267, 268,
	269, 270, 271, 510, 511, 0, 272, 273, 0, 275,
	274, 0, 276, 0, 0, 277, 278, 279, 0, 280,
	0, 281, 282, 0, 283, 512, 284, 285, 287, 289,
	286, 290, 291, 292, 293, 513, 514, 0, 0, 0,
	0, 0, 0, 0, 294, 295, 296, 515, 297, 298,
	0, 299, 0, 300, 0, 0, 0, 301, 516, 517,
	302, 303, 572, 304, 518, 0, 519, 305, 0, 306,
	307, 308, 309, 520, 521, 522, 369, 0, 310, 311,
	0, 312, 313, 314, 316, 0, 0, 0, 315, 317,
	324, 0, 0, 318, 523, 320, 319, 321, 322, 323,
	524, 0, 525, 0, 325, 0, 526, 0, 326, 327,
	328, 0, 329, 330, 0, 0, 331, 332, 333, 334,
	335, 0, 337, 336, 0, 338, 527, 0, 339, 340,
	0, 0, 341, 342, 343, 0, 0, 344, 345, 346,
	347, 0, 348, 349, 351, 353, 350, 352, 357, 354,
	355, 356, 359, 360, 358, 0, 361, 362, 365, 366,
	364, 0, 363, 0, 0, 0, 367, 0, 528, 368,
	529, 370, 371, 0, 372, 373, 374, 0, 0, 376,
	377, 378, 0, 0, 379, 380, 530, 0, 381, 0,
	531, 382, 375, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 391, 532, 533, 534, 392, 535, 393, 394,
	0, 395, 0, 396, 397, 398, 399, 400, 401, 402,
	536, 403, 404, 0, 405, 406, 407, 408, 409, 410,
	0, 412, 413, 414, 411, 415, 416, 417, 418, 0,
	419, 0, 420, 421, 422, 423, 537, 424, 0, 425,
	429, 430, 431, 432, 433, 434, 435, 573, 441, 442,
	436, 438, 439, 440, 437, 443, 444, 445, 0, 446,
	426, 427, 447, 448, 0, 449, 450, 538, 451, 452,
	0, 453, 454, 455, 456, 428, 457, 461, 462, 458,
	459, 460, 539, 0, 464, 465, 463, 0, 466, 467,
	468, 469, 470, 288, 471, 0, 472, 540, 541, 542,
	543, 0, 479, 0, 473, 474, 544, 475, 545, 0,
	476, 477, 478, 0, 480, 481, 0, 0, 482, 483,
	484, 486, 487, 485, 489, 0, 490, 0, 488, 491,
	492, 493, 546, 547, 548, 218, 495, 494, 549, 0,
	0, 0, 0, 496, 497, 550, 498, 499, 500, 0,
	0, 0, 224, 225, 226, 227, 228, 0, 229, 0,
	0, 0, 0, 0, 501, 0, 0, 0, 0, 230,
	232, 231, 233, 234, 502, 503, 235, 504, 238, 236,
	237, 505, 0, 239, 240, 241, 242, 243, 244, 245,
	0, 0, 246, 506, 507, 508, 0, 247, 248, 509,
	0, 0, 0, 249, 250, 251, 252, 253, 254, 0,
	0, 256, 257, 258, 255, 0, 259, 0, 260, 261,
	262, 0, 263, 0, 264, 265, 0, 0, 0, 0,
	0, 0, 0, 266, 267, 268, 269, 270, 271, 510,
	511, 0, 272, 273, 0, 275, 274, 0, 276, 0,
	0, 277, 278, 279, 0, 280, 0, 281, 282, 0,
	283, 512, 284, 285, 287, 289, 286, 290, 291, 292,
	293, 513, 514, 0, 221, 0, 0, 0, 0, 0,
	294, 295, 296, 515, 297, 298, 0, 299, 0, 300,
	0, 0, 0, 301, 516, 517, 302, 303, 0, 304,
	518, 0, 519, 305, 0, 306, 307, 308, 309, 520,
	521, 522, 369, 0, 310, 311, 0, 312, 313, 314,
	316, 0, 0, 222, 315, 317, 324, 0, 0, 318,
	523, 320, 319, 321, 322, 323, 524, 0, 525, 0,
	325, 0, 526, 0, 326, 327, 328, 0, 329, 330,
	0, 0, 331, 332, 333, 334, 335, 0, 337, 336,
	0, 338, 527, 0, 339, 340, 0, 0, 341, 342,
	343, 0, 0, 344, 345, 346, 347, 0, 348, 349,
	351, 353, 350, 352, 357, 354, 355, 356, 359, 360,
	358, 0, 361, 362, 365, 366, 364, 2869, 363, 0,
	223, 0, 367, 0, 528, 368, 529, 370, 371, 0,
	372, 373, 374, 0, 0, 376, 377, 378, 0, 0,
	379, 380, 530, 0, 381, 0, 531, 382, 375, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 391, 532,
	533, 534, 392, 535, 393, 394, 0, 395, 0, 396,
	397, 398, 399, 400, 401, 402, 536, 403, 404, 0,
	405, 406, 407, 408, 409, 410, 0, 412, 413, 414,
	411, 415, 416, 417, 418, 0, 419, 0, 420, 421,
	422, 423, 537, 424, 0, 425, 429, 430, 431, 432,
	433, 434, 435, 0, 441, 442, 436, 438, 439, 440,
	437, 443, 444, 445, 0, 446, 426, 427, 447, 448,
	0, 449, 450, 538, 451, 452, 0, 453, 454, 455,
	456, 428, 457, 461, 462, 458, 459, 460, 539, 0,
	464, 465, 463, 0, 466, 467, 468, 469, 470, 288,
	471, 0, 472, 540, 541, 542, 543, 0, 479, 0,
	473, 474, 544, 475, 545, 0, 476, 477, 478, 0,
	480, 481, 0, 0, 482, 483, 484, 486, 487, 485,
	489, 0, 490, 0, 488, 491, 492, 493, 546, 547,
	548, 218, 495, 494, 549, 0, 0, 0, 0, 496,
	497, 550, 498, 499, 500, 0, 0, 0, 224, 225,
	226, 227, 228, 0, 229, 0, 0, 0, 0, 0,
	501, 0, 0, 0, 0, 230, 232, 231, 233, 234,
	502, 503, 235, 504, 238, 236, 237, 505, 0, 239,
	240, 241, 242, 243, 244, 245, 0, 0, 246, 506,
	507, 508, 0, 247, 248, 509, 0, 0, 0, 249,
	250, 251, 252, 253, 254, 0, 0, 256, 257, 258,
	255, 0, 259, 0, 260, 261, 262, 0, 263, 0,
	264, 265, 0, 0, 0, 0, 0, 0, 0, 266,
	267, 268, 269, 270, 271, 510, 511, 0, 272, 273,
	0, 275, 274, 0, 276, 0, 0, 277, 278, 279,
	0, 280, 0, 281, 282, 0, 283, 512, 284, 285,
	287, 289, 286, 290, 291, 292, 293, 513, 514, 0,
	221, 0, 0, 0, 0, 0, 294, 295, 296, 515,
	297, 298, 0, 299, 0, 300, 0, 0, 0, 301,
	516, 517, 302, 303, 0, 304, 518, 0, 519, 305,
	0, 306, 307, 308, 309, 520, 521, 522, 369, 0,
	310, 311, 0, 312, 313, 314, 316, 0, 0, 222,
	315, 317, 324, 0, 0, 318, 523, 320, 319, 321,
	322, 323, 524, 0, 525, 0, 325, 0, 526, 0,
	326, 327, 328, 0, 329, 330, 0, 0, 331, 332,
	333, 334, 335, 0, 337, 336, 0, 338, 527, 0,
	339, 340, 0, 0, 341, 342, 343, 0, 0, 344,
	345, 346, 347, 0, 348, 349, 351, 353, 350, 352,
	357, 354, 355, 356, 359, 360, 358, 0, 361, 362,
	365, 366, 364, 0, 363, 0, 223, 0, 367, 0,
	528, 368, 529, 370, 371, 0, 372, 373, 374, 0,
	1051, 376, 377, 378, 0, 0, 379, 380, 530, 0,
	381, 0, 531, 382, 375, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 391, 532, 533, 534, 392, 535,
	393, 394, 0, 395, 0, 396, 397, 398, 399, 400,
	401, 402, 536, 403, 404, 0, 405, 406, 407, 408,
	409, 410, 0, 412, 413, 414, 411, 415, 416, 417,
	418, 0, 419, 0, 420, 421, 422, 423, 537, 424,
	0, 425, 429, 430, 431, 432, 433, 434, 435, 0,
	441, 442, 436, 438, 439, 440, 437, 443, 444, 445,
	0, 446, 426, 427, 447, 448, 0, 449, 450, 538,
	451, 452, 0, 453, 454, 455, 456, 428, 457, 461,
	462, 458, 459, 460, 539, 0, 464, 465, 463, 0,
	466, 467, 468, 469, 470, 288, 471, 0, 472, 540,
	541, 542, 543, 0, 479, 0, 473, 474, 544, 475,
	545, 0, 476, 477, 478, 0, 480, 481, 0, 0,
	482, 483, 484, 486, 487, 485, 489, 0, 490, 0,
	488, 491, 492, 493, 546, 547, 548, 0, 495, 494,
	549, 2472, 0, 218, 0, 496, 497, 550, 498, 499,
	500, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	224, 225, 226, 227, 228, 0, 229, 0, 0, 0,
	0, 0, 501, 0, 0, 0, 0, 230, 232, 231,
	233, 234, 502, 503, 235, 504, 238, 236, 237, 505,
	0, 239, 240, 241, 242, 243, 244, 245, 0, 0,
	246, 506, 507, 508, 0, 247, 248, 509, 0, 0,
	0, 249, 250, 251, 252, 253, 254, 0, 0, 256,
	257, 258, 255, 0, 259, 0, 260, 261, 262, 0,
	263, 0, 264, 265, 0, 0, 0, 0, 0, 0,
	0, 266, 267, 268, 269, 270, 271, 510, 511, 0,
	272, 273, 0, 275, 274, 0, 276, 0, 0, 277,
	278, 279, 0, 280, 0, 281, 282, 0, 283, 512,
	284, 285, 287, 289, 286, 290, 291, 292, 293, 513,
	514, 0, 221, 0, 0, 0, 0, 0, 294, 295,
	296, 515, 297, 298, 0, 299, 0, 300, 0, 0,
	0, 301, 516, 517, 302, 303, 0, 304, 518, 0,
	519, 305, 0, 306, 307, 308, 309, 2471, 521, 522,
	369, 0, 310, 311, 0, 312, 313, 314, 316, 0,
	0, 222, 315, 317, 324, 0, 0, 318, 523, 320,
	319, 321, 322, 323, 524, 0, 525, 0, 325, 0,
	526, 0, 326, 327, 328, 0, 329, 330, 0, 0,
	331, 332, 333, 334, 335, 0, 337, 336, 0, 338,
	527, 0, 339, 340, 0, 0, 341, 342, 343, 0,
	0, 344, 345, 346, 347, 0, 348, 349, 351, 353,
	350, 352, 357, 354, 355, 356, 359, 360, 358, 0,
	361, 362, 365, 366, 364, 0, 363, 0, 223, 0,
	367, 0, 528, 368, 529, 370, 371, 0, 372, 373,
	374, 0, 0, 376, 377, 378, 0, 0, 379, 380,
	530, 0, 381, 0, 531, 382, 375, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 391, 532, 533, 534,
	392, 535, 393, 394, 0, 395, 0, 396, 397, 398,
	399, 400, 401, 402, 536, 403, 404, 0, 405, 406,
	407, 408, 409, 410, 0, 412, 413, 414, 411, 415,
	416, 417, 418, 0, 419, 0, 420, 421, 422, 423,
	537, 424, 0, 425, 429, 430, 431, 432, 433, 434,
	435, 0, 441, 442, 436, 438, 439, 440, 437, 443,
	444, 445, 0, 446, 426, 427, 447, 448, 0, 449,
	450, 538, 451, 452, 0, 453, 454, 455, 456, 428,
	457, 461, 462, 458, 459, 460, 539, 0, 464, 465,
	463, 0, 466, 467, 468, 469, 470, 288, 471, 0,
	472, 540, 541, 542, 543, 0, 479, 0, 473, 474,
	544, 475, 545, 0, 476, 477, 478, 0, 480, 481,
	0, 0, 482, 483, 484, 486, 487, 485, 489, 0,
	490, 0, 488, 491, 492, 493, 546, 547, 548, 0,
	495, 494, 549, 1966, 0, 218, 0, 496, 497, 550,
	498, 499, 500, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 224, 225, 226, 227, 228, 0, 229, 0,
	0, 0, 0, 0, 501, 0, 0, 0, 0, 230,
	232, 231, 233, 234, 502, 503, 235, 504, 238, 236,
	237, 505, 0, 239, 240, 241, 242, 243, 244, 245,
	0, 0, 246, 506, 507, 508, 0, 247, 248, 509,
	0, 0, 0, 249, 250, 251, 252, 253, 254, 0,
	0, 256, 257, 258, 255, 0, 259, 0, 260, 261,
	262, 0, 263, 0, 264, 265, 0, 0, 0, 0,
	0, 0, 0, 266, 267, 268, 269, 270, 271, 510,
	511, 0, 272, 273, 0, 275, 274, 0, 276, 0,
	0, 277, 278, 279, 0, 280, 0, 281, 282, 0,
	283, 512, 284, 285, 287, 289, 286, 290, 291, 292,
	293, 513, 514, 0, 221, 0, 0, 0, 0, 0,
	294, 295, 296, 515, 297, 298, 0, 299, 0, 300,
	0, 0, 0, 301, 516, 517, 302, 303, 0, 304,
	518, 0, 519, 305, 0, 306, 307, 308, 309, 520,
	521, 522, 369, 0, 310, 311, 0, 312, 313, 314,
	316, 0, 0, 222, 315, 317, 324, 0, 0, 318,
	523, 320, 319, 321, 322, 323, 524, 0, 525, 0,
	325, 0, 526, 0, 326, 327, 328, 0, 329, 330,
	0, 0, 331, 332, 333, 334, 335, 0, 337, 336,
	0, 338, 527, 0, 339, 340, 0, 0, 341, 342,
	343, 0, 0, 344, 345, 346, 347, 0, 348, 349,
	351, 353, 350, 352, 357, 354, 355, 356, 359, 360,
	358, 0, 361, 362, 365, 366, 364, 0, 363, 0,
	223, 0, 367, 0, 528, 368, 529, 370, 371, 0,
	372, 373, 374, 0, 0, 376, 377, 378, 0, 0,
	379, 380, 530, 0, 381, 0, 531, 382, 375, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 391, 532,
	533, 534, 392, 535, 393, 394, 0, 395, 0, 396,
	397, 398, 399, 400, 401, 402, 536, 403, 404, 0,
	405, 406, 407, 408, 409, 410, 0, 412, 413, 414,
	411, 415, 416, 417, 418, 0, 419, 0, 420, 421,
	422, 423, 537, 424, 0, 425, 429, 430, 431, 432,
	433, 434, 435, 0, 441, 442, 436, 438, 439, 440,
	437, 443, 444, 445, 0, 446, 426, 427, 447, 448,
	0, 449, 450, 538, 451, 452, 0, 453, 454, 455,
	456, 428, 457, 461, 462, 458, 459, 460, 539, 0,
	464, 465, 463, 0, 466, 467, 468, 469, 470, 288,
	471, 0, 472, 540, 541, 542, 543, 0, 479, 0,
	473, 474, 544, 475, 545, 0, 476, 477, 478, 0,
	480, 481, 0, 0, 482, 483, 484, 486, 487, 485,
	489, 0, 490, 0, 488, 491, 492, 493, 546, 547,
	548, 218, 495, 494, 549, 0, 0, 0, 0, 496,
	497, 550, 498, 499, 500, 0, 0, 0, 224, 225,
	226, 227, 228, 0, 229, 0, 0, 0, 0, 0,
	501, 0, 0, 0, 0, 230, 232, 231, 233, 234,
	502, 503, 235, 504, 238, 236, 237, 505, 0, 239,
	240, 241, 242, 243, 244, 245, 0, 0, 246, 506,
	507, 508, 0, 247, 248, 509, 0, 0, 0, 249,
	250, 251, 252, 253, 254, 0, 0, 256, 257, 258,
	255, 0, 259, 0, 260, 261, 262, 0, 263, 0,
	264, 265, 0, 0, 0, 0, 0, 0, 0, 266,
	267, 268, 269, 270, 271, 510, 511, 0, 272, 273,
	0, 275, 274, 0, 276, 0, 0, 277, 278, 279,
	0, 280, 0, 281, 282, 0, 283, 512, 284, 285,
	287, 289, 286, 290, 291, 292, 293, 513, 514, 0,
	221, 0, 0, 0, 0, 0, 294, 295, 296, 515,
	297, 298, 0, 299, 0, 300, 0, 0, 0, 301,
	516, 517, 302, 303, 0, 304, 518, 0, 519, 305,
	0, 306, 307, 308, 309, 520, 521, 522, 369, 0,
	310, 311, 0, 312, 313, 314, 316, 0, 0, 222,
	315, 317, 324, 0, 0, 318, 523, 320, 319, 321,
	322, 323, 524, 0, 525, 0, 325, 0, 526, 0,
	326, 327, 328, 0, 329, 330, 0, 0, 331, 332,
	333, 334, 335, 0, 337, 336, 0, 338, 527, 0,
	339, 340, 0, 0, 341, 342, 343, 0, 0, 344,
	345, 346, 347, 0, 348, 349, 351, 353, 350, 352,
	357, 354, 355, 356, 359, 360, 358, 0, 361, 362,
	365, 366, 364, 0, 363, 0, 223, 0, 367, 0,
	528, 368, 529, 370, 371, 0, 372, 373, 374, 0,
	0, 376, 377, 378, 0, 0, 379, 380, 530, 0,
	381, 0, 531, 382, 375, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 391, 532, 533, 534, 392, 535,
	393, 394, 0, 395, 0, 396, 397, 398, 399, 400,
	401, 402, 536, 403, 404, 0, 405, 406, 407, 408,
	409, 410, 0, 412, 413, 414, 411, 415, 416, 417,
	418, 0, 419, 0, 420, 421, 422, 423, 537, 424,
	0, 425, 429, 430, 431, 432, 433, 434, 435, 0,
	441, 442, 436, 438, 439, 440, 437, 443, 444, 445,
	0, 446, 426, 427, 447, 448, 0, 449, 450, 538,
	451, 452, 0, 453, 454, 455, 456, 428, 457, 461,
	462, 458, 459, 460, 539, 0, 464, 465, 463, 1897,
	466, 467, 468, 469, 470, 288, 471, 0, 472, 540,
	541, 542, 543, 0, 479, 0, 473, 474, 544, 475,
	545, 0, 476, 477, 478, 0, 480, 481, 0, 0,
	482, 483, 484, 486, 487, 485, 489, 0, 490, 0,
	488, 491, 492, 493, 546, 547, 548, 0, 495, 494,
	549, 1902, 0, 218, 0, 496, 497, 550, 498, 499,
	500, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	224, 225, 226, 227, 228, 0, 229, 0, 0, 0,
	0, 0, 501, 0, 0, 0, 0, 230, 232, 231,
	233, 234, 502, 503, 235, 504, 238, 236, 237, 505,
	0, 239, 240, 241, 242, 243, 244, 245, 0, 0,
	246, 506, 507, 508, 0, 247, 248, 509, 0, 0,
	0, 249, 250, 251, 252, 253, 254, 0, 0, 256,
	257, 258, 255, 0, 259, 0, 260, 261, 262, 0,
	263, 0, 264, 265, 0, 0, 0, 0, 0, 0,
	0, 266, 267, 268, 269, 270, 271, 510, 511, 0,
	272, 273, 0, 275, 274, 0, 276, 0, 0, 277,
	278, 279, 0, 280, 0, 281, 282, 0, 283, 512,
	284, 285, 287, 289, 286, 290, 291, 292, 293, 513,
	514, 0, 221, 0, 0, 0, 0, 0, 294, 295,
	296, 515, 297, 298, 0, 299, 0, 300, 0, 0,
	0, 301, 516, 517, 302, 303, 0, 304, 518, 0,
	519, 305, 0, 306, 307, 308, 309, 1901, 521, 522,
	369, 0, 310, 311, 0, 312, 313, 314, 316, 0,
	0, 222, 315, 317, 324, 0, 0, 318, 523, 320,
	319, 321, 322, 323, 524, 0, 525, 0, 325, 0,
	526, 0, 326, 327, 328, 0, 329, 330, 0, 0,
	331, 332, 333, 334, 335, 0, 337, 336, 0, 338,
	527, 0, 339, 340, 0, 0, 341, 342, 343, 0,
	0, 344, 345, 346, 347, 0, 348, 349, 351, 353,
	350, 352, 357, 354, 355, 356, 359, 360, 358, 0,
	361, 362, 365, 366, 364, 0, 363, 0, 223, 0,
	367, 0, 528, 368, 529, 370, 371, 0, 372, 373,
	374, 0, 0, 376, 377, 378, 0, 0, 379, 380,
	530, 0, 381, 0, 531, 382, 375, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 391, 532, 533, 534,
	392, 535, 393, 394, 0, 395, 0, 396, 397, 398,
	399, 400, 401, 402, 536, 403, 404, 0, 405, 406,
	407, 408, 409, 410, 0, 412, 413, 414, 411, 415,
	416, 417, 418, 0, 419, 0, 420, 421, 422, 423,
	537, 424, 0, 425, 429, 430, 431, 432, 433, 434,
	435, 0, 441, 442, 436, 438, 439, 440, 437, 443,
	444, 445, 0, 446, 426, 427, 447, 448, 0, 449,
	450, 538, 451, 452, 0, 453, 454, 455, 456, 428,
	457, 461, 462, 458, 459, 460, 539, 0, 464, 465,
	463, 0, 466, 467, 468, 469, 470, 288, 471, 0,
	472, 540, 541, 542, 543, 0, 479, 0, 473, 474,
	544, 475, 545, 0, 476, 477, 478, 0, 480, 481,
	0, 0, 482, 483, 484, 486, 487, 485, 489, 0,
	490, 0, 488, 491, 492, 493, 546, 547, 548, 0,
	495, 494, 549, 1890, 0, 218, 0, 496, 497, 550,
	498, 499, 500, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 224, 225, 226, 227, 228, 0, 229, 0,
	0, 0, 0, 0, 501, 0, 0, 0, 0, 230,
	232, 231, 233, 234, 502, 503, 235, 504, 238, 236,
	237, 505, 0, 239, 240, 241, 242, 243, 244, 245,
	0, 0, 246, 506, 507, 508, 0, 247, 248, 509,
	0, 0, 0, 249, 250, 251, 252, 253, 254, 0,
	0, 256, 257, 258, 255, 0, 259, 0, 260, 261,
	262, 0, 263, 0, 264, 265, 0, 0, 0, 0,
	0, 0, 0, 266, 267, 268, 269, 270, 271, 510,
	511, 0, 272, 273, 0, 275, 274, 0, 276, 0,
	0, 277, 278, 279, 0, 280, 0, 281, 282, 0,
	283, 512, 284, 285, 287, 289, 286, 290, 291, 292,
	293, 513, 514, 0, 221, 0, 0, 0, 0, 0,
	294, 295, 296, 515, 297, 298, 0, 299, 0, 300,
	0, 0, 0, 301, 516, 517, 302, 303, 0, 304,
	518, 0, 519, 305, 0, 306, 307, 308, 309, 1892,
	521, 522, 369, 0, 310, 311, 0, 312, 313, 314,
	316, 0, 0, 222, 315, 317, 324, 0, 0, 318,
	523, 320, 319, 321, 322, 323, 524, 0, 525, 0,
	325, 0, 526, 0, 326, 327, 328, 0, 329, 330,
	0, 0, 331, 332, 333, 334, 335, 0, 337, 336,
	0, 338, 527, 0, 339, 340, 0, 0, 341, 342,
	343, 0, 0, 344, 345, 346, 347, 0, 348, 349,
	351, 353, 350, 352, 357, 354, 355, 356, 359, 360,
	358, 0, 361, 362, 365, 366, 364, 0, 363, 0,
	223, 0, 367, 0, 528, 368, 529, 370, 371, 0,
	372, 373, 374, 0, 0, 376, 377, 378, 0, 0,
	379, 380, 530, 0, 381, 0, 531, 382, 375, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 391, 532,
	533, 534, 392, 535, 393, 394, 0, 395, 0, 396,
	397, 398, 399, 400, 401, 402, 536, 403, 404, 0,
	405, 406, 407, 408, 409, 410, 0, 412, 413, 414,
	411, 415, 416, 417, 418, 0, 419, 0, 420, 421,
	422, 423, 537, 424, 0, 425, 429, 430, 431, 432,
	433, 434, 435, 0, 441, 442, 436, 438, 439, 440,
	437, 443, 444, 445, 0, 446, 426, 427, 447, 448,
	0, 449, 450, 538, 451, 452, 0, 453, 454, 455,
	456, 428, 457, 461, 462, 458, 459, 460, 539, 0,
	464, 465, 463, 0, 466, 467, 468, 469, 470, 288,
	471, 0, 472, 540, 541, 542, 543, 0, 479, 0,
	473, 474, 544, 475, 545, 0, 476, 477, 478, 0,
	480, 481, 0, 0, 482, 483, 484, 486, 487, 485,
	489, 0, 490, 0, 488, 491, 492, 493, 546, 547,
	548, 0, 495, 494, 549, 1355, 0, 218, 0, 496,
	497, 550, 498, 499, 500, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 224, 225, 226, 227, 228, 0,
	229, 0, 0, 0, 0, 0, 501, 0, 0, 0,
	0, 230, 232, 231, 233, 234, 502, 503, 235, 504,
	238, 236, 237, 505, 0, 239, 240, 241, 242, 243,
	244, 245, 0, 0, 246, 506, 507, 508, 0, 247,
	248, 509, 0, 0, 0, 249, 250, 251, 252, 253,
	254, 0, 0, 256, 257, 258, 255, 0, 259, 0,
	260, 261, 262, 0, 263, 0, 264, 265, 0, 0,
	0, 0, 0, 0, 0, 266, 267, 268, 269, 270,
	271, 510, 511, 0, 272, 273, 0, 275, 274, 0,
	276, 0, 0, 277, 278, 279, 0, 280, 0, 281,
	282, 0, 283, 512, 284, 285, 287, 289, 286, 290,
	291, 292, 293, 513, 514, 0, 221, 0, 0, 0,
	0, 0, 294, 295, 296, 515, 297, 298, 0, 299,
	0, 300, 0, 0, 0, 301, 516, 517, 302, 303,
	0, 304, 518, 0, 519, 305, 0, 306, 307, 308,
	309, 1354, 521, 522, 369, 0, 310, 311, 0, 312,
	313, 314, 316, 0, 0, 222, 315, 317, 324, 0,
	0, 318, 523, 320, 319, 321, 322, 323, 524, 0,
	525, 0, 325, 0, 526, 0, 326, 327, 328, 0,
	329, 330, 0, 0, 331, 332, 333, 334, 335, 0,
	337, 336, 0, 338, 527, 0, 339, 340, 0, 0,
	341, 342, 343, 0, 0, 344, 345, 346, 347, 0,
	348, 349, 351, 353, 350, 352, 357, 354, 355, 356,
	359, 360, 358, 0, 361, 362, 365, 366, 364, 0,
	363, 0, 223, 0, 367, 0, 528, 368, 529, 370,
	371, 0, 372, 373, 374, 0, 0, 376, 377, 378,
	0, 0, 379, 380, 530, 0, 381, 0, 531, 382,
	375, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	391, 532, 533, 534, 392, 535, 393, 394, 0, 395,
	0, 396, 397, 398, 399, 400, 401, 402, 536, 403,
	404, 0, 405, 406, 407, 408, 409, 410, 0, 412,
	413, 414, 411, 415, 416, 417, 418, 0, 419, 0,
	420, 421, 422, 423, 537, 424, 0, 425, 429, 430,
	431, 432, 433, 434, 435, 0, 441, 442, 436, 438,
	439, 440, 437, 443, 444, 445, 0, 446, 426, 427,
	447, 448, 0, 449, 450, 538, 451, 452, 0, 453,
	454, 455, 456, 428, 457, 461, 462, 458, 459, 460,
	539, 0, 464, 465, 463, 0, 466, 467, 468, 469,
	470, 288, 471, 0, 472, 540, 541, 542, 543, 0,
	479, 0, 473, 474, 544, 475, 545, 0, 476, 477,
	478, 0, 480, 481, 0, 0, 482, 483, 484, 486,
	487, 485, 489, 0, 490, 0, 488, 491, 492, 493,
	546, 547, 548, 0, 495, 494, 549, 1352, 0, 218,
	0, 496, 497, 550, 498, 499, 500, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 224, 225, 226, 227,
	228, 0, 229, 0, 0, 0, 0, 0, 501, 0,
	0, 0, 0, 230, 232, 231, 233, 234, 502, 503,
	235, 504, 238, 236, 237, 505, 0, 239, 240, 241,
	242, 243, 244, 245, 0, 0, 246, 506, 507, 508,
	0, 247, 248, 509, 0, 0, 0, 249, 250, 251,
	252, 253, 254, 0, 0, 256, 257, 258, 255, 0,
	259, 0, 260, 261, 262, 0, 263, 0, 264, 265,
	0, 0, 0, 0, 0, 0, 0, 266, 267, 268,
	269, 270, 271, 510, 511, 0, 272, 273, 0, 275,
	274, 0, 276, 0, 0, 277, 278, 279, 0, 280,
	0, 281, 282, 0, 283, 512, 284, 285, 287, 289,
	286, 290, 291, 292, 293, 513, 514, 0, 221, 0,
	0, 0, 0, 0, 294, 295, 296, 515, 297, 298,
	0, 299, 0, 300, 0, 0, 0, 301, 516, 517,
	302, 303, 0, 304, 518, 0, 519, 305, 0, 306,
	307, 308, 309, 1351, 521, 522, 369, 0, 310, 311,
	0, 312, 313, 314, 316, 0, 0, 222, 315, 317,
	324, 0, 0, 318, 523, 320, 319, 321, 322, 323,
	524, 0, 525, 0, 325, 0, 526, 0, 326, 327,
	328, 0, 329, 330, 0, 0, 331, 332, 333, 334,
	335, 0, 337, 336, 0, 338, 527, 0, 339, 340,
	0, 0, 341, 342, 343, 0, 0, 344, 345, 346,
	347, 0, 348, 349, 351, 353, 350, 352, 357, 354,
	355, 356, 359, 360, 358, 0, 361, 362, 365, 366,
	364, 0, 363, 0, 223, 0, 367, 0, 528, 368,
	529, 370, 371, 0, 372, 373, 374, 0, 0, 376,
	377, 378, 0, 0, 379, 380, 530, 0, 381, 0,
	531, 382, 375, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 391, 532, 533, 534, 392, 535, 393, 394,
	0, 395, 0, 396, 397, 398, 399, 400, 401, 402,
	536, 403, 404, 0, 405, 406, 407, 408, 409, 410,
	0, 412, 413, 414, 411, 415, 416, 417, 418, 0,
	419, 0, 420, 421, 422, 423, 537, 424, 0, 425,
	429, 430, 431, 432, 433, 434, 435, 0, 441, 442,
	436, 438, 439, 440, 437, 443, 444, 445, 0, 446,
	426, 427, 447, 448, 0, 449, 450, 538, 451, 452,
	0, 453, 454, 455, 456, 428, 457, 461, 462, 458,
	459, 460, 539, 0, 464, 465, 463, 0, 466, 467,
	468, 469, 470, 288, 471, 0, 472, 540, 541, 542,
	543, 0, 479, 0, 473, 474, 544, 475, 545, 0,
	476, 477, 478, 0, 480, 481, 0, 0, 482, 483,
	484, 486, 487, 485, 489, 0, 490, 0, 488, 491,
	492, 493, 546, 547, 548, 0, 495, 494, 549, 1348,
	0, 218, 0, 496, 497, 550, 498, 499, 500, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 224, 225,
	226, 227, 228, 0, 229, 0, 0, 0, 0, 0,
	501, 0, 0, 0, 0, 230, 232, 231, 233, 234,
	502, 503, 235, 504, 238, 236, 237, 505, 0, 239,
	240, 241, 242, 243, 244, 245, 0, 0, 246, 506,
	507, 508, 0, 247, 248, 509, 0, 0, 0, 249,
	250, 251, 252, 253, 254, 0, 0, 256, 257, 258,
	255, 0, 259, 0, 260, 261, 262, 0, 263, 0,
	264, 265, 0, 0, 0, 0, 0, 0, 0, 266,
	267, 268, 269, 270, 271, 510, 511, 0, 272, 273,
	0, 275, 274, 0, 276, 0, 0, 277, 278, 279,
	0, 280, 0, 281, 282, 0, 283, 512, 284, 285,
	287, 289, 286, 290, 291, 292, 293, 513, 514, 0,
	221, 0, 0, 0, 0, 0, 294, 295, 296, 515,
	297, 298, 0, 299, 0, 300, 0, 0, 0, 301,
	516, 517, 302, 303, 0, 304, 518, 0, 519, 305,
	0, 306, 307, 308, 309, 1347, 521, 522, 369, 0,
	310, 311, 0, 312, 313, 314, 316, 0, 0, 222,
	315, 317, 324, 0, 0, 318, 523, 320, 319, 321,
	322, 323, 524, 0, 525, 0, 325, 0, 526, 0,
	326, 327, 328, 0, 329, 330, 0, 0, 331, 332,
	333, 334, 335, 0, 337, 336, 0, 338, 527, 0,
	339, 340, 0, 0, 341, 342, 343, 0, 0, 344,
	345, 346, 347, 0, 348, 349, 351, 353, 350, 352,
	357, 354, 355, 356, 359, 360, 358, 0, 361, 362,
	365, 366, 364, 0, 363, 0, 223, 0, 367, 0,
	528, 368, 529, 370, 371, 0, 372, 373, 374, 0,
	0, 376, 377, 378, 0, 0, 379, 380, 530, 0,
	381, 0, 531, 382, 375, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 391, 532, 533, 534, 392, 535,
	393, 394, 0, 395, 0, 396, 397, 398, 399, 400,
	401, 402, 536, 403, 404, 0, 405, 406, 407, 408,
	409, 410, 0, 412, 413, 414, 411, 415, 416, 417,
	418, 0, 419, 0, 420, 421, 422, 423, 537, 424,
	0, 425, 429, 430, 431, 432, 433, 434, 435, 0,
	441, 442, 436, 438, 439, 440, 437, 443, 444, 445,
	0, 446, 426, 427, 447, 448, 0, 449, 450, 538,
	451, 452, 0, 453, 454, 455, 456, 428, 457, 461,
	462, 458, 459, 460, 539, 0, 464, 465, 463, 0,
	466, 467, 468, 469, 470, 288, 471, 0, 472, 540,
	541, 542, 543, 0, 479, 0, 473, 474, 544, 475,
	545, 0, 476, 477, 478, 0, 480, 481, 0, 0,
	482, 483, 484, 486, 487, 485, 489, 0, 490, 0,
	488, 491, 492, 493, 546, 547, 548, 0, 495, 494,
	549, 1222, 0, 218, 0, 496, 497, 550, 498, 499,
	500, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	224, 225, 226, 227, 228, 0, 229, 0, 0, 0,
	0, 0, 501, 0, 0, 0, 0, 230, 232, 231,
	233, 234, 502, 503, 235, 504, 238, 236, 237, 505,
	0, 239, 240, 241, 242, 243, 244, 245, 0, 0,
	246, 506, 507, 508, 0, 247, 248, 509, 0, 0,
	0, 249, 250, 251, 252, 253, 254, 0, 0, 256,
	257, 258, 255, 0, 259, 0, 260, 261, 262, 0,
	263, 0, 264, 265, 0, 0, 0, 0, 0, 0,
	0, 266, 267, 268, 269, 270, 271, 510, 511, 0,
	272, 273, 0, 275, 274, 0, 276, 0, 0, 277,
	278, 279, 0, 280, 0, 281, 282, 0, 283, 512,
	284, 285, 287, 289, 286, 290, 291, 292, 293, 513,
	514, 0, 221, 0, 0, 0, 0, 0, 294, 295,
	296, 515, 297, 298, 0, 299, 0, 300, 0, 0,
	0, 301, 516, 517, 302, 303, 0, 304, 518, 0,
	519, 305, 0, 306, 307, 308, 309, 1224, 521, 522,
	369, 0, 310, 311, 0, 312, 313, 314, 316, 0,
	0, 222, 315, 317, 324, 0, 0, 318, 523, 320,
	319, 321, 322, 323, 524, 0, 525, 0, 325, 0,
	526, 0, 326, 327, 328, 0, 329, 330, 0, 0,
	331, 332, 333, 334, 335, 0, 337, 336, 0, 338,
	527, 0, 339, 340, 0, 0, 341, 342, 343, 0,
	0, 344, 345, 346, 347, 0, 348, 349, 351, 353,
	350, 352, 357, 354, 355, 356, 359, 360, 358, 0,
	361, 362, 365, 366, 364, 0, 363, 0, 223, 0,
	367, 0, 528, 368, 529, 370, 371, 0, 372, 373,
	374, 0, 0, 376, 377, 378, 0, 0, 379, 380,
	530, 0, 381, 0, 531, 382, 375, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 391, 532, 533, 534,
	392, 535, 393, 394, 0, 395, 0, 396, 397, 398,
	399, 400, 401, 402, 536, 403, 404, 0, 405, 406,
	407, 408, 409, 410, 0, 412, 413, 414, 411, 415,
	416, 417, 418, 0, 419, 0, 420, 421, 422, 423,
	537, 424, 0, 425, 429, 430, 431, 432, 433, 434,
	435, 0, 441, 442, 436, 438, 439, 440, 437, 443,
	444, 445, 0, 446, 426, 427, 447, 448, 0, 449,
	450, 538, 451, 452, 0, 453, 454, 455, 456, 428,
	457, 461, 462, 458, 459, 460, 539, 0, 464, 465,
	463, 0, 466, 467, 468, 469, 470, 288, 471, 0,
	472, 540, 541, 542, 543, 0, 479, 0, 473, 474,
	544, 475, 545, 0, 476, 477, 478, 0, 480, 481,
	0, 0, 482, 483, 484, 486, 487, 485, 489, 0,
	490, 0, 488, 491, 492, 493, 546, 547, 548, 218,
	495, 494, 549, 0, 0, 0, 0, 496, 497, 550,
	498, 499, 500, 0, 0, 0, 224, 225, 226, 227,
	228, 0, 229, 0, 0, 0, 0, 0, 501, 0,
	0, 0, 0, 230, 232, 231, 233, 234, 502, 503,
	235, 504, 238, 236, 237, 505, 0, 239, 240, 241,
	242, 243, 244, 245, 0, 0, 246, 506, 507, 508,
	0, 247, 248, 509, 0, 0, 0, 249, 250, 251,
	252, 253, 254, 0, 0, 256, 257, 258, 255, 0,
	259, 0, 260, 261, 262, 0, 263, 0, 264, 265,
	0, 0, 0, 0, 0, 0, 0, 266, 267, 268,
	269, 270, 271, 510, 511, 0, 272, 273, 0, 275,
	274, 0, 276, 0, 0, 277, 278, 279, 0, 280,
	0, 281, 282, 0, 283, 512, 284, 285, 287, 289,
	286, 290, 291, 292, 293, 513, 514, 0, 221, 0,
	0, 0, 0, 0, 294, 295, 296, 515, 297, 298,
	0, 299, 0, 300, 0, 0, 0, 301, 516, 517,
	302, 303, 0, 304, 518, 0, 519, 305, 0, 306,
	307, 308, 309, 520, 521, 522, 369, 0, 310, 311,
	0, 312, 313, 314, 316, 0, 0, 222, 315, 317,
	324, 0, 0, 318, 523, 320, 319, 321, 322, 323,
	524, 0, 525, 0, 325, 0, 526, 0, 326, 327,
	328, 0, 329, 330, 0, 0, 331, 332, 333, 334,
	335, 0, 337, 336, 0, 338, 527, 0, 339, 340,
	0, 0, 341, 342, 343, 0, 0, 344, 345, 346,
	347, 0, 348, 349, 351, 353, 350, 352, 357, 354,
	355, 356, 359, 360, 358, 0, 361, 362, 365, 366,
	364, 0, 363, 0, 223, 0, 367, 0, 528, 368,
	529, 370, 371, 0, 372, 373, 374, 0, 0, 376,
	377, 378, 0, 0, 379, 380, 530, 0, 381, 0,
	531, 382, 375, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 391, 532, 533, 534, 392, 535, 393, 394,
	0, 395, 0, 396, 397, 398, 399, 400, 401, 402,
	536, 403, 404, 0, 405, 406, 407, 408, 409, 410,
	0, 412, 413, 414, 411, 415, 416, 417, 418, 0,
	419, 0, 420, 421, 422, 423, 537, 424, 0, 425,
	429, 430, 431, 432, 433, 434, 435, 0, 441, 442,
	436, 438, 439, 440, 437, 443, 444, 445, 0, 446,
	426, 427, 447, 448, 0, 449, 450, 538, 451, 452,
	0, 453, 454, 455, 456, 428, 457, 461, 462, 458,
	459, 460, 539, 0, 464, 465, 463, 0, 466, 467,
	468, 469, 470, 288, 471, 0, 472, 540, 541, 542,
	543, 0, 479, 0, 473, 474, 544, 475, 545, 0,
	476, 477, 478, 0, 480, 481, 0, 0, 482, 483,
	484, 486, 487, 485, 489, 0, 490, 0, 488, 491,
	492, 493, 546, 547, 548, 218, 495, 494, 549, 0,
	0, 0, 0, 496, 497, 550, 498, 499, 500, 0,
	0, 0, 224, 225, 226, 227, 228, 0, 229, 0,
	0, 0, 0, 0, 501, 0, 0, 0, 0, 230,
	232, 231, 233, 234, 502, 503, 235, 504, 238, 236,
	237, 505, 0, 239, 240, 241, 242, 243, 244, 245,
	0, 0, 246, 506, 507, 508, 0, 247, 248, 509,
	0, 0, 0, 249, 250, 251, 252, 253, 254, 0,
	0, 256, 257, 258, 255, 0, 259, 0, 260, 261,
	262, 571, 263, 0, 264, 265, 0, 0, 0, 0,
	0, 0, 0, 266, 267, 268, 269, 270, 271, 510,
	511, 0, 272, 273, 0, 275, 274, 0, 276, 0,
	0, 277, 278, 279, 0, 280, 0, 281, 282, 0,
	283, 512, 284, 285, 287, 289, 286, 290, 291, 292,
	293, 513, 514, 0, 0, 0, 0, 0, 0, 0,
	294, 295, 296, 515, 297, 298, 0, 299, 0, 300,
	0, 0, 0, 301, 516, 517, 302, 303, 572, 304,
	518, 0, 519, 305, 0, 306, 307, 308, 309, 520,
	521, 522, 369, 0, 310, 311, 0, 312, 313, 314,
	316, 0, 0, 0, 315, 317, 324, 0, 0, 318,
	523, 320, 319, 321, 322, 323, 524, 0, 525, 0,
	325, 0, 526, 0, 326, 327, 328, 0, 329, 330,
	0, 0, 331, 332, 333, 334, 335, 0, 337, 336,
	0, 338, 527, 0, 339, 340, 0, 0, 341, 342,
	343, 0, 0, 344, 345, 346, 347, 0, 348, 349,
	351, 353, 350, 352, 357, 354, 355, 356, 359, 360,
	358, 0, 361, 362, 365, 366, 364, 0, 363, 0,
	0, 0, 367, 0, 528, 368, 529, 370, 371, 0,
	372, 373, 374, 0, 0, 376, 377, 378, 0, 0,
	379, 380, 530, 0, 381, 0, 531, 382, 375, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 391, 532,
	533, 534, 392, 535, 393, 394, 0, 395, 0, 396,
	397, 398, 399, 400, 401, 402, 536, 403, 404, 0,
	405, 406, 407, 408, 409, 410, 0, 412, 413, 414,
	411, 415, 416, 417, 418, 0, 419, 0, 420, 421,
	422, 423, 537, 424, 0, 425, 429, 430, 431, 432,
	433, 434, 435, 573, 441, 442, 436, 438, 439, 440,
	437, 443, 444, 445, 0, 446, 426, 427, 447, 448,
	0, 449, 450, 538, 451, 452, 0, 453, 454, 455,
	456, 428, 457, 461, 462, 458, 459, 460, 539, 0,
	464, 465, 463, 0, 466, 467, 468, 469, 470, 288,
	471, 0, 472, 540, 541, 542, 543, 0, 479, 0,
	473, 474, 544, 475, 545, 0, 476, 477, 478, 0,
	480, 481, 0, 0, 482, 483, 484, 486, 487, 485,
	489, 0, 490, 0, 488, 491, 492, 493, 546, 547,
	548, 218, 495, 494, 549, 0, 0, 0, 0, 496,
	497, 550, 498, 499, 500, 0, 0, 0, 224, 225,
	226, 227, 228, 0, 229, 0, 0, 0, 0, 0,
	501, 0, 0, 0, 0, 230, 232, 231, 233, 234,
	502, 503, 235, 504, 238, 236, 237, 505, 0, 239,
	240, 241, 242, 243, 244, 245, 0, 0, 246, 506,
	507, 508, 0, 247, 248, 509, 0, 0, 0, 249,
	250, 251, 252, 253, 254, 0, 0, 256, 257, 258,
	255, 0, 259, 0, 260, 261, 262, 0, 263, 0,
	264, 265, 0, 0, 0, 0, 0, 0, 0, 266,
	267, 1997, 269, 270, 271, 510, 511, 0, 272, 273,
	0, 275, 274, 0, 276, 0, 0, 277, 278, 279,
	0, 280, 0, 281, 282, 0, 283, 512, 284, 285,
	287, 289, 286, 290, 291, 292, 293, 513, 514, 0,
	221, 0, 0, 0, 0, 0, 294, 295, 296, 515,
	297, 298, 0, 299, 0, 300, 0, 0, 0, 301,
	516, 517, 302, 303, 0, 304, 518, 0, 519, 305,
	0, 306, 307, 308, 309, 520, 521, 522, 369, 0,
	310, 311, 0, 312, 313, 314, 316, 0, 0, 222,
	315, 317, 324, 0, 0, 318, 523, 320, 319, 321,
	322, 323, 524, 0, 525, 0, 325, 0, 526, 0,
	326, 327, 328, 0, 329, 330, 0, 0, 331, 332,
	333, 334, 335, 0, 337, 336, 0, 338, 527, 0,
	339, 340, 0, 0, 341, 342, 343, 0, 0, 344,
	345, 346, 347, 0, 348, 349, 351, 353, 350, 352,
	357, 354, 355, 356, 359, 360, 358, 0, 361, 362,
	365, 366, 364, 0, 363, 0, 223, 0, 367, 0,
	528, 368, 529, 370, 371, 0, 372, 373, 374, 0,
	0, 376, 377, 378, 0, 0, 379, 380, 530, 0,
	381, 0, 531, 382, 375, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 391, 532, 533, 534, 392, 535,
	393, 394, 0, 395, 0, 396, 397, 398, 399, 400,
	401, 402, 536, 403, 404, 0, 405, 406, 407, 408,
	409, 410, 0, 412, 413, 414, 411, 415, 416, 417,
	418, 0, 419, 0, 420, 421, 422, 423, 537, 424,
	0, 425, 429, 430, 431, 432, 433, 434, 435, 0,
	441, 442, 436, 438, 439, 440, 437, 443, 444, 445,
	0, 446, 426, 427, 447, 448, 0, 449, 450, 538,
	451, 452, 0, 453, 454, 455, 456, 428, 457, 461,
	462, 458, 459, 460, 539, 0, 464, 465, 463, 0,
	466, 467, 468, 469, 470, 288, 471, 0, 472, 540,
	541, 542, 543, 0, 479, 0, 473, 474, 544, 475,
	545, 0, 476, 477, 478, 0, 480, 481, 0, 0,
	482, 483, 484, 486, 487, 485, 489, 0, 490, 0,
	488, 491, 492, 493, 546, 547, 548, 218, 495, 494,
	549, 0, 0, 0, 0, 496, 497, 550, 498, 499,
	500, 0, 0, 0, 224, 225, 226, 227, 228, 0,
	229, 0, 0, 0, 0, 0, 501, 0, 0, 0,
	0, 230, 232, 231, 233, 234, 502, 503, 235, 504,
	238, 236, 237, 505, 0, 239, 240, 241, 242, 243,
	244, 245, 0, 0, 246, 506, 507, 508, 0, 247,
	248, 509, 0, 0, 0, 249, 250, 251, 252, 253,
	254, 0, 0, 256, 257, 258, 255, 0, 259, 0,
	260, 261, 262, 0, 263, 0, 264, 265, 0, 0,
	0, 0, 0, 0, 0, 266, 267, 1995, 269, 270,
	271, 510, 511, 0, 272, 273, 0, 275, 274, 0,
	276, 0, 0, 277, 278, 279, 0, 280, 0, 281,
	282, 0, 283, 512, 284, 285, 287, 289, 286, 290,
	291, 292, 293, 513, 514, 0, 221, 0, 0, 0,
	0, 0, 294, 295, 296, 515, 297, 298, 0, 299,
	0, 300, 0, 0, 0, 301, 516, 517, 302, 303,
	0, 304, 518, 0, 519, 305, 0, 306, 307, 308,
	309, 520, 521, 522, 369, 0, 310, 311, 0, 312,
	313, 314, 316, 0, 0, 222, 315, 317, 324, 0,
	0, 318, 523, 320, 319, 321, 322, 323, 524, 0,
	525, 0, 325, 0, 526, 0, 326, 327, 328, 0,
	329, 330, 0, 0, 331, 332, 333, 334, 335, 0,
	337, 336, 0, 338, 527, 0, 339, 340, 0, 0,
	341, 342, 343, 0, 0, 344, 345, 346, 347, 0,
	348, 349, 351, 353, 350, 352, 357, 354, 355, 356,
	359, 360, 358, 0, 361, 362, 365, 366, 364, 0,
	363, 0, 223, 0, 367, 0, 528, 368, 529, 370,
	371, 0, 372, 373, 374, 0, 0, 376, 377, 378,
	0, 0, 379, 380, 530, 0, 381, 0, 531, 382,
	375, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	391, 532, 533, 534, 392, 535, 393, 394, 0, 395,
	0, 396, 397, 398, 399, 400, 401, 402, 536, 403,
	404, 0, 405, 406, 407, 408, 409, 410, 0, 412,
	413, 414, 411, 415, 416, 417, 418, 0, 419, 0,
	420, 421, 422, 423, 537, 424, 0, 425, 429, 430,
	431, 432, 433, 434, 435, 0, 441, 442, 436, 438,
	439, 440, 437, 443, 444, 445, 0, 446, 426, 427,
	447, 448, 0, 449, 450, 538, 451, 452, 0, 453,
	454, 455, 456, 428, 457, 461, 462, 458, 459, 460,
	539, 0, 464, 465, 463, 0, 466, 467, 468, 469,
	470, 288, 471, 0, 472, 540, 541, 542, 543, 0,
	479, 0, 473, 474, 544, 475, 545, 0, 476, 477,
	478, 0, 480, 481, 0, 0, 482, 483, 484, 486,
	487, 485, 489, 0, 490, 0, 488, 491, 492, 493,
	546, 547, 548, 218, 495, 494, 549, 0, 0, 0,
	0, 496, 497, 550, 498, 499, 500, 0, 0, 0,
	224, 225, 226, 227, 228, 0, 229, 0, 0, 0,
	0, 0, 501, 0, 0, 0, 0, 230, 232, 231,
	233, 234, 502, 503, 235, 504, 238, 236, 237, 505,
	0, 239, 240, 241, 242, 243, 244, 245, 0, 0,
	246, 506, 507, 508, 0, 247, 248, 509, 0, 0,
	0, 249, 250, 251, 252, 253, 254, 0, 0, 256,
	257, 258, 255, 0, 259, 0, 260, 261, 262, 0,
	263, 0, 264, 265, 0, 0, 0, 0, 0, 0,
	0, 266, 267, 1993, 269, 270, 271, 510, 511, 0,
	272, 273, 0, 275, 274, 0, 276, 0, 0, 277,
	278, 279, 0, 280, 0, 281, 282, 0, 283, 512,
	284, 285, 287, 289, 286, 290, 291, 292, 293, 513,
	514, 0, 221, 0, 0, 0, 0, 0, 294, 295,
	296, 515, 297, 298, 0, 299, 0, 300, 0, 0,
	0, 301, 516, 517, 302, 303, 0, 304, 518, 0,
	519, 305, 0, 306, 307, 308, 309, 520, 521, 522,
	369, 0, 310, 311, 0, 312, 313, 314, 316, 0,
	0, 222, 315, 317, 324, 0, 0, 318, 523, 320,
	319, 321, 322, 323, 524, 0, 525, 0, 325, 0,
	526, 0, 326, 327, 328, 0, 329, 330, 0, 0,
	331, 332, 333, 334, 335, 0, 337, 336, 0, 338,
	527, 0, 339, 340, 0, 0, 341, 342, 343, 0,
	0, 344, 345, 346, 347, 0, 348, 349, 351, 353,
	350, 352, 357, 354, 355, 356, 359, 360, 358, 0,
	361, 362, 365, 366, 364, 0, 363, 0, 223, 0,
	367, 0, 528, 368, 529, 370, 371, 0, 372, 373,
	374, 0, 0, 376, 377, 378, 0, 0, 379, 380,
	530, 0, 381, 0, 531, 382, 375, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 391, 532, 533, 534,
	392, 535, 393, 394, 0, 395, 0, 396, 397, 398,
	399, 400, 401, 402, 536, 403, 404, 0, 405, 406,
	407, 408, 409, 410, 0, 412, 413, 414, 411, 415,
	416, 417, 418, 0, 419, 0, 420, 421, 422, 423,
	537, 424, 0, 425, 429, 430, 431, 432, 433, 434,
	435, 0, 441, 442, 436, 438, 439, 440, 437, 443,
	444, 445, 0, 446, 426, 427, 447, 448, 0, 449,
	450, 538, 451, 452, 0, 453, 454, 455, 456, 428,
	457, 461, 462, 458, 459, 460, 539, 0, 464, 465,
	463, 0, 466, 467, 468, 469, 470, 288, 471, 0,
	472, 540, 541, 542, 543, 0, 479, 0, 473, 474,
	544, 475, 545, 0, 476, 477, 478, 0, 480, 481,
	0, 0, 482, 483, 484, 486, 487, 485, 489, 0,
	490, 0, 488, 491, 492, 493, 546, 547, 548, 218,
	495, 494, 549, 0, 0, 0, 0, 496, 497, 550,
	498, 499, 500, 0, 0, 0, 224, 225, 226, 227,
	228, 0, 229, 0, 0, 0, 0, 0, 501, 0,
	0, 0, 0, 230, 232, 231, 233, 234, 502, 503,
	235, 504, 238, 236, 237, 505, 0, 239, 240, 241,
	242, 243, 244, 245, 0, 0, 246, 506, 507, 508,
	0, 247, 248, 509, 0, 0, 0, 249, 250, 251,
	252, 253, 254, 0, 0, 256, 257, 258, 255, 0,
	259, 0, 260, 261, 262, 0, 263, 0, 264, 265,
	0, 0, 0, 0, 0, 0, 0, 266, 267, 268,
	269, 270, 271, 510, 511, 0, 272, 273, 0, 275,
	274, 0, 276, 0, 0, 277, 278, 279, 0, 280,
	0, 281, 282, 0, 283, 512, 284, 285, 287, 289,
	286, 290, 291, 292, 293, 513, 514, 0, 221, 0,
	0, 0, 0, 0, 294, 295, 296, 515, 297, 298,
	0, 299, 0, 300, 0, 0, 0, 301, 516, 517,
	302, 303, 0, 304, 518, 0, 519, 305, 0, 306,
	307, 308, 309, 1940, 521, 522, 369, 0, 310, 311,
	0, 312, 313, 314, 316, 0, 0, 222, 315, 317,
	324, 0, 0, 318, 523, 320, 319, 321, 322, 323,
	524, 0, 525, 0, 325, 0, 526, 0, 326, 327,
	328, 0, 329, 330, 0, 0, 331, 332, 333, 334,
	335, 0, 337, 336, 0, 338, 527, 0, 339, 340,
	0, 0, 341, 342, 343, 0, 0, 344, 345, 346,
	347, 0, 348, 349, 351, 353, 350, 352, 357, 354,
	355, 356, 359, 360, 358, 0, 361, 362, 365, 366,
	364, 0, 363, 0, 223, 0, 367, 0, 528, 368,
	529, 370, 371, 0, 372, 373, 374, 0, 0, 376,
	377, 378, 0, 0, 379, 380, 530, 0, 381, 0,
	531, 382, 375, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 391, 532, 533, 534, 392, 535, 393, 394,
	0, 395, 0, 396, 397, 398, 399, 400, 401, 402,
	536, 403, 404, 0, 405, 406, 407, 408, 409, 410,
	0, 412, 413, 414, 411, 415, 416, 417, 418, 0,
	419, 0, 420, 421, 422, 423, 537, 424, 0, 425,
	429, 430, 431, 432, 433, 434, 435, 0, 441, 442,
	436, 438, 439, 440, 437, 443, 444, 445, 0, 446,
	426, 427, 447, 448, 0, 449, 450, 538, 451, 452,
	0, 453, 454, 455, 456, 428, 457, 461, 462, 458,
	459, 460, 539, 0, 464, 465, 463, 0, 466, 467,
	468, 469, 470, 288, 471, 0, 472, 540, 541, 542,
	543, 0, 479, 0, 473, 474, 544, 475, 545, 0,
	476, 477, 478, 0, 480, 481, 0, 0, 482, 483,
	484, 486, 487, 485, 489, 0, 490, 0, 488, 491,
	492, 493, 546, 547, 548, 0, 495, 494, 549, 725,
	0, 218, 0, 496, 497, 550, 498, 499, 500, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 224, 225,
	226, 227, 228, 0, 229, 0, 0, 0, 0, 0,
	501, 0, 0, 0, 0, 230, 232, 231, 233, 234,
	502, 503, 235, 504, 238, 236, 237, 505, 0, 239,
	240, 241, 242, 243, 244, 245, 0, 0, 246, 506,
	507, 508, 0, 247, 248, 509, 0, 0, 0, 249,
	250, 251, 252, 253, 254, 0, 0, 256, 257, 258,
	255, 0, 259, 0, 260, 261, 262, 0, 263, 0,
	264, 265, 0, 0, 0, 0, 0, 0, 0, 266,
	267, 268, 269, 270, 271, 510, 511, 0, 272, 273,
	0, 275, 274, 0, 276, 0, 0, 277, 278, 279,
	0, 280, 0, 281, 282, 0, 283, 512, 284, 285,
	287, 289, 286, 290, 291, 292, 293, 513, 514, 0,
	0, 0, 0, 0, 0, 0, 294, 295, 296, 515,
	297, 298, 0, 299, 0, 300, 0, 0, 0, 301,
	516, 517, 302, 303, 0, 304, 518, 0, 519, 305,
	0, 306, 307, 308, 309, 520, 521, 522, 369, 0,
	310, 311, 0, 312, 313, 314, 316, 0, 0, 0,
	315, 317, 324, 0, 0, 318, 523, 320, 319, 321,
	322, 323, 524, 0, 525, 724, 325, 0, 526, 0,
	326, 327, 328, 0, 329, 330, 0, 0, 331, 332,
	333, 334, 335, 0, 337, 336, 0, 338, 527, 0,
	339, 340, 0, 0, 341, 342, 343, 0, 0, 344,
	345, 346, 347, 0, 348, 349, 351, 353, 350, 352,
	357, 354, 355, 356, 359, 360, 358, 0, 361, 362,
	365, 366, 364, 0, 363, 0, 0, 0, 367, 0,
	528, 368, 529, 370, 371, 0, 372, 373, 374, 0,
	0, 376, 377, 378, 0, 0, 379, 380, 530, 0,
	381, 0, 531, 382, 375, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 391, 532, 533, 534, 392, 535,
	393, 394, 0, 395, 0, 396, 397, 398, 399, 400,
	401, 402, 536, 403, 404, 0, 405, 406, 407, 408,
	409, 410, 0, 412, 413, 414, 411, 415, 416, 417,
	418, 0, 419, 0, 420, 421, 422, 423, 537, 424,
	0, 425, 429, 430, 431, 432, 433, 434, 435, 0,
	441, 442, 436, 438, 439, 440, 437, 443, 444, 445,
	0, 446, 426, 427, 447, 448, 0, 449, 450, 538,
	451, 452, 0, 453, 454, 455, 456, 428, 457, 461,
	462, 458, 459, 460, 539, 0, 464, 465, 463, 723,
	466, 467, 468, 469, 470, 288, 471, 0, 472, 540,
	541, 542, 543, 0, 479, 0, 473, 474, 544, 475,
	545, 0, 476, 477, 478, 0, 480, 481, 0, 0,
	482, 483, 484, 486, 487, 485, 489, 0, 490, 0,
	488, 491, 492, 493, 546, 547, 548, 218, 495, 494,
	549, 0, 0, 0, 0, 496, 497, 550, 498, 499,
	500, 0, 0, 0, 224, 225, 226, 227, 228, 0,
	229, 0, 0, 0, 0, 0, 501, 0, 0, 0,
	0, 230, 232, 231, 233, 234, 502, 503, 235, 504,
	238, 236, 237, 505, 0, 239, 240, 241, 242, 243,
	244, 245, 0, 0, 246, 506, 507, 508, 0, 247,
	248, 509, 0, 0, 0, 249, 250, 251, 252, 253,
	254, 0, 0, 256, 257, 258, 255, 0, 259, 0,
	260, 261, 262, 0, 263, 0, 264, 265, 0, 0,
	0, 0, 0, 0, 0, 266, 267, 268, 269, 270,
	271, 510, 511, 0, 272, 273, 0, 275, 274, 0,
	276, 0, 0, 277, 278, 279, 0, 280, 0, 281,
	282, 0, 283, 512, 284, 285, 287, 289, 286, 290,
	291, 292, 293, 513, 514, 0, 2536, 0, 0, 0,
	0, 0, 294, 295, 296, 515, 297, 298, 0, 299,
	0, 300, 0, 0, 0, 301, 516, 517, 302, 303,
	0, 304, 518, 0, 519, 305, 0, 306, 307, 308,
	309, 520, 521, 522, 369, 0, 310, 311, 0, 312,
	313, 314, 316, 0, 0, 0, 315, 317, 324, 0,
	0, 318, 523, 320, 319, 321, 322, 323, 524, 0,
	525, 0, 325, 0, 526, 0, 326, 327, 328, 0,
	329, 330, 0, 0, 331, 332, 333, 334, 335, 0,
	337, 336, 0, 338, 527, 0, 339, 340, 0, 0,
	341, 342, 343, 0, 0, 344, 345, 346, 347, 0,
	348, 349, 351, 353, 350, 352, 357, 354, 355, 356,
	359, 360, 358, 0, 361, 362, 365, 366, 364, 0,
	363, 0, 0, 0, 367, 0, 528, 368, 529, 370,
	371, 0, 372, 373, 374, 0, 0, 376, 377, 378,
	0, 0, 379, 380, 530, 0, 381, 0, 531, 382,
	375, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	391, 532, 533, 534, 392, 535, 393, 394, 3387, 395,
	0, 396, 397, 398, 399, 400, 401, 402, 536, 403,
	404, 0, 405, 406, 407, 408, 409, 410, 0, 412,
	413, 414, 411, 415, 416, 417, 418, 0, 419, 0,
	420, 421, 422, 423, 537, 424, 0, 425, 429, 430,
	431, 432, 433, 434, 435, 0, 441, 442, 436, 438,
	439, 440, 437, 443, 444, 445, 0, 446, 426, 427,
	447, 448, 0, 449, 450, 538, 451, 452, 0, 453,
	454, 455, 456, 428, 457, 461, 462, 458, 459, 460,
	539, 0, 464, 465, 463, 0, 466, 467, 468, 469,
	470, 288, 471, 0, 472, 540, 541, 542, 543, 0,
	479, 0, 473, 474, 544, 475, 545, 0, 476, 477,
	478, 0, 480, 481, 0, 0, 482, 483, 484, 486,
	487, 485, 489, 0, 490, 0, 488, 491, 492, 493,
	546, 547, 548, 0, 495, 494, 549, 558, 0, 218,
	0, 496, 497, 550, 498, 499, 500, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 224, 225, 226, 227,
	228, 557, 229, 0, 0, 0, 0, 0, 501, 0,
	0, 0, 0, 230, 232, 231, 233, 234, 502, 503,
	235, 504, 238, 236, 237, 505, 0, 239, 240, 241,
	242, 243, 244, 245, 0, 0, 246, 506, 507, 508,
	0, 247, 248, 509, 0, 0, 0, 249, 250, 251,
	252, 253, 254, 0, 0, 256, 257, 258, 255, 0,
	259, 0, 260, 261, 262, 0, 263, 0, 264, 265,
	0, 0, 0, 0, 0, 0, 0, 266, 267, 268,
	269, 270, 271, 510, 511, 0, 272, 273, 0, 275,
	274, 0, 276, 0, 0, 277, 278, 279, 0, 280,
	0, 281, 282, 0, 283, 512, 284, 285, 287, 289,
	286, 290, 291, 292, 293, 513, 514, 0, 0, 0,
	0, 0, 0, 0, 294, 295, 296, 515, 297, 298,
	0, 299, 0, 300, 0, 0, 0, 301, 516, 517,
	302, 303, 0, 304, 518, 0, 519, 305, 0, 306,
	307, 308, 309, 520, 521, 522, 369, 0, 310, 311,
	0, 312, 313, 314, 316, 0, 0, 0, 315, 317,
	324, 0, 0, 318, 523, 320, 319, 321, 322, 323,
	524, 0, 525, 0, 325, 0, 526, 0, 326, 327,
	328, 0, 329, 330, 0, 0, 331, 332, 333, 334,
	335, 0, 337, 336, 0, 338, 527, 0, 339, 340,
	0, 0, 341, 342, 343, 0, 0, 344, 345, 346,
	347, 0, 348, 349, 351, 353, 350, 352, 357, 354,
	355, 356, 359, 360, 358, 0, 361, 362, 365, 366,
	364, 0, 363, 0, 0, 0, 367, 0, 528, 368,
	529, 370, 371, 0, 372, 373, 374, 0, 0, 376,
	377, 378, 0, 0, 379, 380, 530, 0, 381, 0,
	531, 382, 375, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 391, 532, 533, 534, 392, 535, 556, 394,
	0, 395, 0, 396, 397, 398, 399, 400, 401, 402,
	536, 403, 404, 0, 405, 406, 407, 408, 409, 410,
	0, 412, 413, 414, 411, 415, 416, 417, 418, 0,
	419, 0, 420, 421, 422, 423, 537, 424, 0, 425,
	429, 430, 431, 432, 433, 434, 435, 0, 441, 442,
	436, 438, 439, 440, 437, 443, 444, 445, 0, 446,
	426, 427, 447, 448, 0, 449, 450, 538, 451, 452,
	0, 453, 454, 455, 456, 428, 457, 461, 462, 458,
	459, 460, 539, 0, 464, 465, 463, 0, 466, 467,
	468, 469, 470, 288, 471, 0, 472, 540, 541, 542,
	543, 0, 479, 0, 473, 474, 544, 475, 545, 0,
	476, 477, 478, 0, 480, 481, 0, 0, 482, 483,
	484, 486, 487, 485, 489, 0, 490, 0, 488, 491,
	492, 493, 546, 547, 548, 0, 495, 494, 549, 218,
	3396, 0, 0, 496, 497, 550, 498, 499, 500, 0,
	0, 0, 0, 0, 0, 0, 224, 225, 226, 227,
	228, 0, 229, 0, 0, 0, 0, 0, 501, 0,
	0, 0, 0, 230, 232, 231, 233, 234, 502, 503,
	235, 504, 238, 236, 237, 505, 0, 239, 240, 241,
	242, 243, 244, 245, 0, 0, 246, 506, 507, 508,
	0, 247, 248, 509, 0, 0, 0, 249, 250, 251,
	252, 253, 254, 0, 0, 256, 257, 258, 255, 0,
	259, 0, 260, 261, 262, 0, 263, 0, 264, 265,
	0, 0, 0, 0, 0, 0, 0, 266, 267, 268,
	269, 270, 271, 510, 511, 0, 272, 273, 0, 275,
	274, 0, 276, 0, 0, 277, 278, 279, 0, 280,
	0, 281, 282, 0, 283, 512, 284, 285, 287, 289,
	286, 290, 291, 292, 293, 513, 514, 0, 0, 0,
	0, 0, 0, 0, 294, 295, 296, 515, 297, 298,
	0, 299, 0, 300, 0, 0, 0, 301, 516, 517,
	302, 303, 0, 304, 518, 0, 519, 305, 0, 306,
	307, 308, 309, 520, 521, 522, 369, 0, 310, 311,
	0, 312, 313, 314, 316, 0, 0, 0, 315, 317,
	324, 0, 0, 318, 523, 320, 319, 321, 322, 323,
	524, 0, 525, 0, 325, 0, 526, 0, 326, 327,
	328, 0, 329, 330, 0, 0, 331, 332, 333, 334,
	335, 0, 337, 336, 0, 338, 527, 0, 339, 340,
	0, 0, 341, 342, 343, 0, 0, 344, 345, 346,
	347, 0, 348, 349, 351, 353, 350, 352, 357, 354,
	355, 356, 359, 360, 358, 0, 361, 362, 365, 366,
	364, 0, 363, 0, 0, 0, 367, 0, 528, 368,
	529, 370, 371, 0, 372, 373, 374, 0, 0, 376,
	377, 378, 0, 0, 379, 380, 530, 0, 381, 0,
	531, 382, 375, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 391, 532, 533, 534, 392, 535, 393, 394,
	0, 395, 0, 396, 397, 398, 399, 400, 401, 402,
	536, 403, 404, 0, 405, 406, 407, 408, 409, 410,
	0, 412, 413, 414, 411, 415, 416, 417, 418, 0,
	419, 0, 420, 421, 422, 423, 537, 424, 0, 425,
	429, 430, 431, 432, 433, 434, 435, 0, 441, 442,
	436, 438, 439, 440, 437, 443, 444, 445, 0, 446,
	426, 427, 447, 448, 0, 449, 450, 538, 451, 452,
	0, 453, 454, 455, 456, 428, 457, 461, 462, 458,
	459, 460, 539, 0, 464, 465, 463, 0, 466, 467,
	468, 469, 470, 288, 471, 0, 472, 540, 541, 542,
	543, 0, 479, 0, 473, 474, 544, 475, 545, 0,
	476, 477, 478, 0, 480, 481, 0, 0, 482, 483,
	484, 486, 487, 485, 489, 0, 490, 0, 488, 491,
	492, 493, 546, 547, 548, 0, 495, 494, 549, 218,
	2523, 0, 0, 496, 497, 550, 498, 499, 500, 0,
	0, 0, 0, 0, 0, 0, 224, 225, 226, 227,
	228, 0, 229, 0, 0, 0, 0, 0, 501, 0,
	0, 0, 0, 230, 232, 231, 233, 234, 502, 503,
	235, 504, 238, 236, 237, 505, 0, 239, 240, 241,
	242, 243, 244, 245, 0, 0, 246, 506, 507, 508,
	0, 247, 248, 509, 0, 0, 0, 249, 250, 251,
	252, 253, 254, 0, 0, 256, 257, 258, 255, 0,
	259, 0, 260, 261, 262, 0, 263, 0, 264, 265,
	0, 0, 0, 0, 0, 0, 0, 266, 267, 268,
	269, 270, 271, 510, 511, 0, 272, 273, 0, 275,
	274, 0, 276, 0, 0, 277, 278, 279, 0, 280,
	0, 281, 282, 0, 283, 512, 284, 285, 287, 289,
	286, 290, 291, 292, 293, 513, 514, 0, 0, 0,
	0, 0, 0, 0, 294, 295, 296, 515, 297, 298,
	0, 299, 0, 300, 0, 0, 0, 301, 516, 517,
	302, 303, 0, 304, 518, 0, 519, 305, 0, 306,
	307, 308, 309, 520, 521, 522, 369, 0, 310, 311,
	0, 312, 313, 314, 316, 0, 0, 0, 315, 317,
	324, 0, 0, 318, 523, 320, 319, 321, 322, 323,
	524, 0, 525, 0, 325, 0, 526, 0, 326, 327,
	328, 0, 329, 330, 0, 0, 331, 332, 333, 334,
	335, 0, 337, 336, 0, 338, 527, 0, 339, 340,
	0, 0, 341, 342, 343, 0, 0, 344, 345, 346,
	347, 0, 348, 349, 351, 353, 350, 352, 357, 354,
	355, 356, 359, 360, 358, 0, 361, 362, 365, 366,
	364, 0, 363, 0, 0, 0, 367, 0, 528, 368,
	529, 370, 371, 0, 372, 373, 374, 0, 0, 376,
	377, 378, 0, 0, 379, 380, 530, 0, 381, 0,
	531, 382, 375, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 391, 532, 533, 534, 392, 535, 393, 394,
	0, 395, 0, 396, 397, 398, 399, 400, 401, 402,
	536, 403, 404, 0, 405, 406, 407, 408, 409, 410,
	0, 412, 413, 414, 411, 415, 416, 417, 418, 0,
	419, 0, 420, 421, 422, 423, 537, 424, 0, 425,
	429, 430, 431, 432, 433, 434, 435, 0, 441, 442,
	436, 438, 439, 440, 437, 443, 444, 445, 0, 446,
	426, 427, 447, 448, 0, 449, 450, 538, 451, 452,
	0, 453, 454, 455, 456, 428, 457, 461, 462, 458,
	459, 460, 539, 0, 464, 465, 463, 0, 466, 467,
	468, 469, 470, 288, 471, 0, 472, 540, 541, 542,
	543, 0, 479, 0, 473, 474, 544, 475, 545, 0,
	476, 477, 478, 0, 480, 481, 0, 0, 482, 483,
	484, 486, 487, 485, 489, 0, 490, 0, 488, 491,
	492, 493, 546, 547, 548, 218, 495, 494, 549, 0,
	0, 0, 0, 496, 497, 550, 498, 499, 500, 0,
	0, 0, 224, 225, 226, 227, 228, 0, 229, 0,
	0, 0, 0, 0, 501, 0, 0, 0, 0, 230,
	232, 231, 233, 234, 502, 503, 235, 504, 238, 236,
	237, 505, 0, 239, 240, 241, 242, 243, 244, 245,
	0, 0, 246, 506, 507, 508, 0, 247, 248, 509,
	0, 0, 0, 249, 250, 251, 252, 253, 254, 0,
	0, 256, 257, 258, 255, 0, 259, 0, 260, 261,
	262, 0, 263, 0, 264, 265, 0, 0, 0, 0,
	0, 0, 0, 266, 267, 268, 269, 270, 271, 510,
	511, 3175, 272, 273, 0, 275, 274, 0, 276, 0,
	0, 277, 278, 279, 0, 280, 0, 281, 282, 0,
	283, 512, 284, 285, 287, 289, 286, 290, 291, 292,
	293, 513, 514, 0, 0, 0, 0, 0, 0, 0,
	294, 295, 296, 515, 297, 298, 0, 299, 0, 300,
	0, 0, 0, 301, 516, 517, 302, 303, 0, 304,
	518, 0, 519, 305, 0, 306, 307, 308, 309, 520,
	521, 522, 369, 0, 310, 311, 0, 312, 313, 314,
	316, 0, 0, 0, 315, 317, 324, 0, 0, 318,
	523, 320, 319, 321, 322, 323, 524, 0, 525, 0,
	325, 0, 526, 0, 326, 327, 328, 0, 329, 330,
	0, 0, 331, 332, 333, 334, 335, 0, 337, 336,
	0, 338, 527, 0, 339, 340, 0, 0, 341, 342,
	343, 0, 0, 344, 345, 346, 347, 0, 348, 349,
	351, 353, 350, 352, 357, 354, 355, 356, 359, 360,
	358, 0, 361, 362, 365, 366, 364, 0, 363, 0,
	0, 0, 367, 0, 528, 368, 529, 370, 371, 0,
	372, 373, 374, 0, 0, 376, 377, 378, 0, 0,
	379, 380, 530, 0, 381, 0, 531, 382, 375, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 391, 532,
	533, 534, 392, 535, 393, 394, 0, 395, 0, 396,
	397, 398, 399, 400, 401, 402, 536, 403, 404, 0,
	405, 406, 407, 408, 409, 410, 0, 412, 413, 414,
	411, 415, 416, 417, 418, 0, 419, 0, 420, 421,
	422, 423, 537, 424, 0, 425, 429, 430, 431, 432,
	433, 434, 435, 0, 441, 442, 436, 438, 439, 440,
	437, 443, 444, 445, 0, 446, 426, 427, 447, 448,
	0, 449, 450, 538, 451, 452, 0, 453, 454, 455,
	456, 428, 457, 461, 462, 458, 459, 460, 539, 0,
	464, 465, 463, 0, 466, 467, 468, 469, 470, 288,
	471, 0, 472, 540, 541, 542, 543, 0, 479, 0,
	473, 474, 544, 475, 545, 0, 476, 477, 478, 0,
	480, 481, 0, 0, 482, 483, 484, 486, 487, 485,
	489, 0, 490, 0, 488, 491, 492, 493, 546, 547,
	548, 218, 495, 494, 549, 0, 0, 0, 0, 496,
	497, 550, 498, 499, 500, 0, 0, 0, 224, 225,
	226, 227, 228, 0, 229, 0, 0, 0, 0, 0,
	501, 0, 2298, 0, 0, 230, 232, 231, 233, 234,
	502, 503, 235, 504, 238, 236, 237, 505, 0, 239,
	240, 241, 242, 243, 244, 245, 0, 0, 246, 506,
	507, 508, 0, 247, 248, 509, 0, 0, 0, 249,
	250, 251, 252, 253, 254, 0, 0, 256, 257, 258,
	255, 0, 259, 0, 260, 261, 262, 0, 263, 0,
	264, 265, 0, 0, 0, 0, 0, 0, 0, 266,
	267, 268, 269, 270, 271, 510, 511, 0, 272, 273,
	0, 275, 274, 0, 276, 0, 0, 277, 278, 279,
	0, 280, 0, 281, 282, 0, 283, 512, 284, 285,
	287, 289, 286, 290, 291, 292, 293, 513, 514, 0,
	0, 0, 0, 0, 0, 0, 294, 295, 296, 515,
	297, 298, 0, 299, 0, 300, 0, 0, 0, 301,
	516, 517, 302, 303, 0, 304, 518, 0, 519, 305,
	0, 306, 307, 308, 309, 520, 521, 522, 369, 0,
	310, 311, 0, 312, 313, 314, 316, 0, 0, 0,
	315, 317, 324, 0, 0, 318, 523, 320, 319, 321,
	322, 323, 524, 0, 525, 0, 325, 0, 526, 0,
	326, 327, 328, 0, 329, 330, 0, 0, 331, 332,
	333, 334, 335, 0, 337, 336, 0, 338, 527, 0,
	339, 340, 0, 0, 341, 342, 343, 0, 0, 344,
	345, 346, 347, 0, 348, 349, 351, 353, 350, 352,
	357, 354, 355, 356, 359, 360, 358, 0, 361, 362,
	365, 366, 364, 0, 363, 0, 0, 0, 367, 0,
	528, 368, 529, 370, 371, 0, 372, 373, 374, 0,
	0, 376, 377, 378, 0, 0, 379, 380, 530, 0,
	381, 0, 531, 382, 375, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 391, 532, 533, 534, 392, 535,
	393, 394, 0, 395, 0, 396, 397, 398, 399, 400,
	401, 402, 536, 403, 404, 0, 405, 406, 407, 408,
	409, 410, 0, 412, 413, 414, 411, 415, 416, 417,
	418, 0, 419, 0, 420, 421, 422, 423, 537, 424,
	0, 425, 429, 430, 431, 432, 433, 434, 435, 0,
	441, 442, 436, 438, 439, 440, 437, 443, 444, 445,
	0, 446, 426, 427, 447, 448, 0, 449, 450, 538,
	451, 452, 0, 453, 454, 455, 456, 428, 457, 461,
	462, 458, 459, 460, 539, 0, 464, 465, 463, 0,
	466, 467, 468, 469, 470, 288, 471, 0, 472, 540,
	541, 542, 543, 0, 479, 0, 473, 474, 544, 475,
	545, 0, 476, 477, 478, 0, 480, 481, 0, 0,
	482, 483, 484, 486, 487, 485, 489, 0, 490, 0,
	488, 491, 492, 493, 546, 547, 548, 0, 495, 494,
	549, 218, 2523, 0, 0, 496, 497, 550, 498, 499,
	500, 0, 0, 0, 0, 0, 0, 0, 224, 225,
	226, 227, 228, 0, 229, 0, 0, 0, 0, 0,
	501, 0, 0, 0, 0, 230, 232, 231, 233, 234,
	502, 503, 235, 504, 238, 236, 237, 505, 0, 239,
	240, 241, 242, 243, 244, 245, 0, 0, 246, 506,
	507, 508, 0, 247, 248, 509, 0, 0, 0, 249,
	250, 251, 252, 253, 254, 0, 0, 256, 257, 258,
	255, 0, 259, 0, 260, 261, 262, 0, 263, 0,
	264, 265, 0, 0, 0, 0, 0, 0, 0, 266,
	267, 268, 269, 270, 271, 510, 511, 0, 272, 273,
	0, 275, 274, 0, 276, 0, 0, 277, 278, 279,
	0, 280, 0, 281, 282, 0, 283, 512, 284, 285,
	287, 289, 286, 290, 291, 292, 293, 513, 514, 0,
	0, 0, 0, 0, 0, 0, 294, 295, 296, 515,
	297, 298, 0, 299, 0, 300, 0, 0, 0, 301,
	516, 517, 302, 303, 0, 304, 518, 0, 519, 305,
	0, 306, 307, 308, 309, 520, 521, 522, 369, 0,
	310, 311, 0, 312, 313, 314, 316, 0, 0, 0,
	315, 317, 324, 0, 0, 318, 523, 320, 319, 321,
	322, 323, 524, 0, 525, 0, 325, 0, 526, 0,
	326, 327, 328, 0, 329, 330, 0, 0, 331, 332,
	333, 334, 335, 0, 337, 336, 0, 338, 527, 0,
	339, 340, 0, 0, 341, 342, 343, 0, 0, 344,
	345, 346, 347, 0, 348, 349, 351, 353, 350, 352,
	357, 354, 355, 356, 359, 360, 358, 0, 361, 362,
	365, 366, 364, 0, 363, 0, 0, 0, 367, 0,
	528, 368, 529, 370, 371, 0, 372, 373, 374, 0,
	0, 376, 377, 2520, 0, 0, 379, 380, 530, 0,
	381, 0, 531, 382, 375, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 391, 532, 533, 534, 392, 535,
	393, 394, 0, 395, 0, 396, 397, 398, 399, 400,
	401, 402, 536, 403, 404, 0, 405, 406, 407, 408,
	409, 410, 0, 412, 413, 414, 411, 415, 416, 417,
	418, 0, 419, 0, 420, 421, 422, 423, 537, 424,
	0, 425, 429, 430, 431, 432, 433, 434, 435, 0,
	441, 442, 436, 438, 439, 440, 437, 443, 444, 445,
	0, 446, 426, 427, 447, 448, 0, 449, 450, 538,
	451, 452, 0, 453, 454, 455, 456, 428, 457, 461,
	462, 458, 459, 460, 539, 0, 464, 465, 463, 0,
	466, 467, 468, 469, 470, 288, 471, 0, 472, 540,
	541, 542, 543, 0, 479, 0, 473, 474, 544, 475,
	545, 0, 476, 477, 478, 0, 480, 481, 0, 0,
	482, 483, 484, 486, 487, 485, 489, 0, 490, 0,
	488, 491, 492, 493, 546, 547, 548, 218, 495, 494,
	549, 0, 0, 0, 0, 496, 497, 550, 498, 499,
	500, 0, 0, 0, 224, 225, 226, 227, 228, 1974,
	229, 0, 0, 0, 0, 0, 501, 0, 0, 0,
	0, 230, 232, 231, 233, 234, 502, 503, 235, 504,
	238, 236, 237, 505, 0, 239, 240, 241, 242, 243,
	244, 245, 0, 0, 246, 506, 507, 508, 0, 247,
	248, 509, 0, 0, 0, 249, 250, 251, 252, 253,
	254, 0, 0, 256, 257, 258, 255, 0, 259, 0,
	260, 261, 262, 0, 263, 0, 264, 265, 0, 0,
	0, 0, 0, 0, 0, 266, 267, 268, 269, 270,
	271, 510, 511, 0, 272, 273, 0, 275, 274, 0,
	276, 0, 0, 277, 278, 279, 0, 280, 0, 281,
	282, 0, 283, 512, 284, 285, 287, 289, 286, 290,
	291, 292, 293, 513, 514, 0, 0, 0, 0, 0,
	0, 0, 294, 295, 296, 515, 297, 298, 0, 299,
	0, 300, 0, 0, 0, 301, 516, 517, 302, 303,
	0, 304, 518, 0, 519, 305, 0, 306, 307, 308,
	309, 520, 521, 522, 369, 0, 310, 311, 0, 312,
	313, 314, 316, 0, 0, 0, 315, 317, 324, 0,
	0, 318, 523, 320, 319, 321, 322, 323, 524, 0,
	525, 0, 325, 0, 526, 0, 326, 327, 328, 0,
	329, 330, 0, 0, 331, 332, 333, 334, 335, 0,
	337, 336, 0, 338, 527, 0, 339, 340, 0, 0,
	341, 342, 343, 0, 0, 344, 345, 346, 347, 0,
	348, 349, 351, 353, 350, 352, 357, 354, 355, 356,
	359, 360, 358, 0, 361, 362, 365, 366, 364, 0,
	363, 0, 0, 0, 367, 0, 528, 368, 529, 370,
	371, 0, 372, 373, 374, 0, 0, 376, 377, 378,
	0, 0, 379, 380, 530, 0, 381, 0, 531, 382,
	375, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	391, 532, 533, 534, 392, 535, 393, 394, 0, 395,
	0, 396, 397, 398, 399, 400, 401, 402, 536, 403,
	404, 0, 405, 406, 407, 408, 409, 410, 0, 412,
	413, 414, 411, 415, 416, 417, 418, 0, 419, 0,
	420, 421, 422, 423, 537, 424, 0, 425, 429, 430,
	431, 432, 433, 434, 435, 0, 441, 442, 436, 438,
	439, 440, 437, 443, 444, 445, 0, 446, 426, 427,
	447, 448, 0, 449, 450, 538, 451, 452, 0, 453,
	454, 455, 456, 428, 457, 461, 462, 458, 459, 460,
	539, 0, 464, 465, 463, 0, 466, 467, 468, 469,
	470, 288, 471, 0, 472, 540, 541, 542, 543, 0,
	479, 0, 473, 474, 544, 475, 545, 0, 476, 477,
	478, 0, 480, 481, 0, 0, 482, 483, 484, 486,
	487, 485, 489, 0, 490, 0, 488, 491, 492, 493,
	546, 547, 548, 0, 495, 494, 549, 1964, 0, 218,
	0, 496, 497, 550, 498, 499, 500, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 224, 225, 226, 227,
	228, 0, 229, 0, 0, 0, 0, 0, 501, 0,
	0, 0, 0, 230, 232, 231, 233, 234, 502, 503,
	235, 504, 238, 236, 237, 505, 0, 239, 240, 241,
	242, 243, 244, 245, 0, 0, 246, 506, 507, 508,
	0, 247, 248, 509, 0, 0, 0, 249, 250, 251,
	252, 253, 254, 0, 0, 256, 257, 258, 255, 0,
	259, 0, 260, 261, 262, 0, 263, 0, 264, 265,
	0, 0, 0, 0, 0, 0, 0, 266, 267, 268,
	269, 270, 271, 510, 511, 0, 272, 273, 0, 275,
	274, 0, 276, 0, 0, 277, 278, 279, 0, 280,
	0, 281, 282, 0, 283, 512, 284, 285, 287, 289,
	286, 290, 291, 292, 293, 513, 514, 0, 0, 0,
	0, 0, 0, 0, 294, 295, 296, 515, 297, 298,
	0, 299, 0, 300, 0, 0, 0, 301, 516, 517,
	302, 303, 0, 304, 518, 0, 519, 305, 0, 306,
	307, 308, 309, 520, 521, 522, 369, 0, 310, 311,
	0, 312, 313, 314, 316, 0, 0, 0, 315, 317,
	324, 0, 0, 318, 523, 320, 319, 321, 322, 323,
	524, 0, 525, 0, 325, 0, 526, 0, 326, 327,
	328, 0, 329, 330, 0, 0, 331, 332, 333, 334,
	335, 0, 337, 336, 0, 338, 527, 0, 339, 340,
	0, 0, 341, 342, 343, 0, 0, 344, 345, 346,
	347, 0, 348, 349, 351, 353, 350, 352, 357, 354,
	355, 356, 359, 360, 358, 0, 361, 362, 365, 366,
	364, 0, 363, 0, 0, 0, 367, 0, 528, 368,
	529, 370, 371, 0, 372, 373, 374, 0, 0, 376,
	377, 378, 0, 0, 379, 380, 530, 0, 381, 0,
	531, 382, 375, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 391, 532, 533, 534, 392, 535, 393, 394,
	0, 395, 0, 396, 397, 398, 399, 400, 401, 402,
	536, 403, 404, 0, 405, 406, 407, 408, 409, 410,
	0, 412, 413, 414, 411, 415, 416, 417, 418, 0,
	419, 0, 420, 421, 422, 423, 537, 424, 0, 425,
	429, 430, 431, 432, 433, 434, 435, 0, 441, 442,
	436, 438, 439, 440, 437, 443, 444, 445, 0, 446,
	426, 427, 447, 448, 0, 449, 450, 538, 451, 452,
	0, 453, 454, 455, 456, 428, 457, 461, 462, 458,
	459, 460, 539, 0, 464, 465, 463, 0, 466, 467,
	468, 469, 470, 288, 471, 0, 472, 540, 541, 542,
	543, 0, 479, 0, 473, 474, 544, 475, 545, 0,
	476, 477, 478, 0, 480, 481, 0, 0, 482, 483,
	484, 486, 487, 485, 489, 0, 490, 0, 488, 491,
	492, 493, 546, 547, 548, 0, 495, 494, 549, 599,
	0, 218, 0, 496, 497, 550, 498, 499, 500, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 224, 225,
	226, 227, 228, 0, 229, 0, 0, 0, 0, 0,
	501, 0, 0, 0, 0, 230, 1088, 231, 233, 234,
	502, 503, 235, 504, 238, 236, 237, 505, 0, 239,
	240, 241, 242, 243, 244, 245, 0, 0, 246, 506,
	507, 1086, 0, 247, 248, 509, 0, 0, 0, 249,
	250, 251, 252, 253, 254, 0, 0, 256, 257, 258,
	255, 0, 259, 0, 260, 261, 262, 0, 263, 0,
	264, 265, 0, 0, 0, 0, 0, 0, 0, 266,
	267, 268, 269, 270, 271, 510, 511, 0, 272, 273,
	0, 275, 274, 0, 276, 0, 0, 277, 278, 279,
	0, 280, 0, 281, 282, 0, 283, 512, 284, 285,
	287, 289, 286, 290, 291, 292, 293, 513, 514, 0,
	0, 0, 0, 0, 0, 0, 294, 295, 296, 515,
	297, 298, 0, 299, 0, 300, 0, 0, 0, 301,
	516, 517, 302, 303, 0, 304, 518, 0, 519, 305,
	0, 306, 307, 308, 309, 520, 521, 522, 369, 0,
	310, 311, 0, 312, 313, 314, 316, 0, 0, 0,
	315, 317, 324, 0, 0, 318, 523, 320, 319, 321,
	322, 323, 524, 0, 525, 0, 325, 0, 526, 0,
	326, 327, 328, 0, 329, 330, 0, 0, 331, 332,
	333, 334, 335, 0, 337, 336, 0, 338, 527, 0,
	339, 340, 0, 0, 341, 342, 343, 0, 0, 344,
	345, 346, 347, 0, 348, 349, 351, 353, 350, 352,
	357, 354, 355, 356, 359, 360, 600, 0, 361, 362,
	365, 366, 364, 0, 363, 0, 0, 0, 367, 0,
	528, 368, 529, 370, 371, 0, 372, 373, 374, 0,
	0, 376, 377, 378, 0, 0, 379, 380, 530, 0,
	381, 0, 531, 382, 375, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 391, 532, 533, 534, 392, 535,
	393, 394, 0, 395, 0, 396, 397, 398, 399, 400,
	401, 402, 536, 403, 404, 0, 405, 406, 407, 408,
	409, 410, 0, 412, 413, 414, 411, 415, 416, 417,
	418, 0, 419, 0, 420, 421, 422, 423, 537, 424,
	0, 425, 429, 430, 596, 432, 433, 434, 435, 0,
	441, 442, 436, 438, 439, 440, 437, 443, 1089, 445,
	0, 446, 426, 427, 447, 448, 0, 449, 450, 538,
	451, 452, 0, 453, 454, 455, 456, 428, 457, 461,
	462, 458, 459, 460, 539, 0, 464, 465, 463, 0,
	466, 467, 468, 469, 470, 288, 471, 0, 472, 595,
	541, 542, 543, 0, 479, 0, 473, 474, 544, 475,
	545, 0, 476, 477, 478, 0, 480, 481, 0, 0,
	482, 483, 484, 486, 487, 485, 489, 0, 490, 0,
	488, 491, 492, 493, 546, 547, 548, 0, 495, 494,
	549, 599, 0, 218, 0, 496, 497, 550, 498, 499,
	500, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	224, 225, 226, 227, 228, 0, 229, 0, 0, 0,
	0, 0, 501, 0, 0, 0, 0, 230, 232, 231,
	233, 234, 502, 503, 235, 504, 238, 236, 237, 505,
	0, 239, 240, 241, 242, 243, 244, 245, 0, 0,
	246, 506, 507, 508, 0, 247, 589, 509, 0, 0,
	0, 249, 250, 251, 252, 253, 254, 0, 0, 256,
	257, 258, 255, 0, 259, 0, 260, 261, 262, 0,
	263, 0, 264, 265, 0, 0, 0, 0, 0, 0,
	0, 266, 267, 268, 269, 270, 271, 510, 511, 0,
	272, 273, 0, 275, 274, 0, 276, 0, 0, 277,
	278, 279, 0, 280, 0, 281, 282, 0, 283, 512,
	284, 285, 287, 289, 286, 290, 291, 292, 293, 513,
	514, 0, 0, 0, 0, 0, 0, 0, 294, 295,
	296, 515, 297, 298, 0, 299, 0, 300, 0, 0,
	0, 301, 516, 517, 302, 303, 0, 304, 518, 0,
	519, 305, 0, 306, 307, 308, 309, 520, 521, 522,
	369, 0, 310, 311, 0, 312, 313, 314, 316, 0,
	0, 0, 315, 317, 324, 0, 0, 318, 523, 320,
	319, 321, 322, 323, 524, 0, 525, 0, 325, 0,
	526, 0, 326, 327, 328, 0, 329, 330, 0, 0,
	331, 332, 333, 334, 335, 0, 337, 336, 0, 338,
	527, 0, 339, 340, 0, 0, 341, 342, 343, 0,
	0, 344, 345, 346, 347, 0, 348, 349, 351, 353,
	350, 352, 357, 354, 355, 356, 359, 360, 600, 0,
	361, 362, 365, 366, 364, 0, 363, 0, 0, 0,
	367, 0, 528, 368, 529, 370, 371, 0, 372, 373,
	374, 0, 0, 376, 377, 378, 0, 0, 379, 380,
	530, 0, 381, 0, 531, 382, 375, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 391, 532, 533, 534,
	392, 535, 393, 394, 0, 395, 0, 396, 397, 398,
	399, 400, 401, 402, 536, 403, 404, 0, 405, 406,
	407, 408, 409, 410, 0, 412, 413, 414, 411, 415,
	416, 417, 418, 0, 419, 0, 420, 421, 422, 423,
	537, 424, 0, 425, 429, 430, 596, 432, 433, 434,
	435, 0, 441, 442, 436, 438, 439, 440, 437, 443,
	1375, 445, 0, 446, 426, 427, 447, 448, 0, 449,
	450, 538, 451, 452, 0, 453, 454, 455, 456, 428,
	457, 461, 462, 458, 459, 460, 539, 0, 464, 465,
	463, 0, 466, 467, 468, 469, 470, 288, 471, 0,
	472, 595, 541, 542, 543, 0, 479, 0, 473, 474,
	544, 475, 545, 0, 476, 477, 478, 0, 480, 481,
	0, 0, 482, 483, 484, 486, 487, 485, 489, 0,
	490, 0, 488, 491, 492, 493, 546, 547, 548, 0,
	495, 494, 549, 1361, 0, 218, 0, 496, 497, 550,
	498, 499, 500, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 224, 225, 226, 227, 228, 0, 229, 0,
	0, 0, 0, 0, 501, 0, 0, 0, 0, 230,
	232, 231, 233, 234, 502, 503, 235, 504, 238, 236,
	237, 505, 0, 239, 240, 241, 242, 243, 244, 245,
	0, 0, 246, 506, 507, 508, 0, 247, 248, 509,
	0, 0, 0, 249, 250, 251, 252, 253, 254, 0,
	0, 256, 257, 258, 255, 0, 259, 0, 260, 261,
	262, 0, 263, 0, 264, 265, 0, 0, 0, 0,
	0, 0, 0, 266, 267, 268, 269, 270, 271, 510,
	511, 0, 272, 273, 0, 275, 274, 0, 276, 0,
	0, 277, 278, 279, 0, 280, 0, 281, 282, 0,
	283, 512, 284, 285, 287, 289, 286, 290, 291, 292,
	293, 513, 514, 0, 0, 0, 0, 0, 0, 0,
	294, 295, 296, 515, 297, 298, 0, 299, 0, 300,
	0, 0, 0, 301, 516, 517, 302, 303, 0, 304,
	518, 0, 519, 305, 0, 306, 307, 308, 309, 1360,
	521, 522, 369, 0, 310, 311, 0, 312, 313, 314,
	316, 0, 0, 0, 315, 317, 324, 0, 0, 318,
	523, 320, 319, 321, 322, 323, 524, 0, 525, 0,
	325, 0, 526, 0, 326, 327, 328, 0, 329, 330,
	0, 0, 331, 332, 333, 334, 335, 0, 337, 336,
	0, 338, 527, 0, 339, 340, 0, 0, 341, 342,
	343, 0, 0, 344, 345, 346, 347, 0, 348, 349,
	351, 353, 350, 352, 357, 354, 355, 356, 359, 360,
	358, 0, 361, 362, 365, 366, 364, 0, 363, 0,
	0, 0, 367, 0, 528, 368, 529, 370, 371, 0,
	372, 373, 374, 0, 0, 376, 377, 378, 0, 0,
	379, 380, 530, 0, 381, 0, 531, 382, 375, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 391, 532,
	533, 534, 392, 535, 393, 394, 0, 395, 0, 396,
	397, 398, 399, 400, 401, 402, 536, 403, 404, 0,
	405, 406, 407, 408, 409, 410, 0, 412, 413, 414,
	411, 415, 416, 417, 418, 0, 419, 0, 420, 421,
	422, 423, 537, 424, 0, 425, 429, 430, 431, 432,
	433, 434, 435, 0, 441, 442, 436, 438, 439, 440,
	437, 443, 444, 445, 0, 446, 426, 427, 447, 448,
	0, 449, 450, 538, 451, 452, 0, 453, 454, 455,
	456, 428, 457, 461, 462, 458, 459, 460, 539, 0,
	464, 465, 463, 0, 466, 467, 468, 469, 470, 288,
	471, 0, 472, 540, 541, 542, 543, 0, 479, 0,
	473, 474, 544, 475, 545, 0, 476, 477, 478, 0,
	480, 481, 0, 0, 482, 483, 484, 486, 487, 485,
	489, 0, 490, 0, 488, 491, 492, 493, 546, 547,
	548, 0, 495, 494, 549, 1309, 0, 218, 0, 496,
	497, 550, 498, 499, 500, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 224, 225, 226, 227, 228, 0,
	229, 0, 0, 0, 0, 0, 501, 0, 0, 0,
	0, 230, 232, 231, 233, 234, 502, 503, 235, 504,
	238, 236, 237, 505, 0, 239, 240, 241, 242, 243,
	244, 245, 0, 0, 246, 506, 507, 508, 0, 247,
	248, 509, 0, 0, 0, 249, 250, 251, 252, 253,
	254, 0, 0, 256, 257, 258, 255, 0, 259, 0,
	260, 261, 262, 0, 263, 0, 264, 265, 0, 0,
	0, 0, 0, 0, 0, 266, 267, 268, 269, 270,
	271, 510, 511, 0, 272, 273, 0, 275, 274, 0,
	276, 0, 0, 277, 278, 279, 0, 280, 0, 281,
	282, 0, 283, 512, 284, 285, 287, 289, 286, 290,
	291, 292, 293, 513, 514, 0, 0, 0, 0, 0,
	0, 0, 294, 295, 296, 515, 297, 298, 0, 299,
	0, 300, 0, 0, 0, 301, 516, 517, 302, 303,
	0, 304, 518, 0, 519, 305, 0, 306, 307, 308,
	309, 1308, 521, 522, 369, 0, 310, 311, 0, 312,
	313, 314, 316, 0, 0, 0, 315, 317, 324, 0,
	0, 318, 523, 320, 319, 321, 322, 323, 524, 0,
	525, 0, 325, 0, 526, 0, 326, 327, 328, 0,
	329, 330, 0, 0, 331, 332, 333, 334, 335, 0,
	337, 336, 0, 338, 527, 0, 339, 340, 0, 0,
	341, 342, 343, 0, 0, 344, 345, 346, 347, 0,
	348, 349, 351, 353, 350, 352, 357, 354, 355, 356,
	359, 360, 358, 0, 361, 362, 365, 366, 364, 0,
	363, 0, 0, 0, 367, 0, 528, 368, 529, 370,
	371, 0, 372, 373, 374, 0, 0, 376, 377, 378,
	0, 0, 379, 380, 530, 0, 381, 0, 531, 382,
	375, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	391, 532, 533, 534, 392, 535, 393, 394, 0, 395,
	0, 396, 397, 398, 399, 400, 401, 402, 536, 403,
	404, 0, 405, 406, 407, 408, 409, 410, 0, 412,
	413, 414, 411, 415, 416, 417, 418, 0, 419, 0,
	420, 421, 422, 423, 537, 424, 0, 425, 429, 430,
	431, 432, 433, 434, 435, 0, 441, 442, 436, 438,
	439, 440, 437, 443, 444, 445, 0, 446, 426, 427,
	447, 448, 0, 449, 450, 538, 451, 452, 0, 453,
	454, 455, 456, 428, 457, 461, 462, 458, 459, 460,
	539, 0, 464, 465, 463, 0, 466, 467, 468, 469,
	470, 288, 471, 0, 472, 540, 541, 542, 543, 0,
	479, 0, 473, 474, 544, 475, 545, 0, 476, 477,
	478, 0, 480, 481, 0, 0, 482, 483, 484, 486,
	487, 485, 489, 0, 490, 0, 488, 491, 492, 493,
	546, 547, 548, 0, 495, 494, 549, 1294, 0, 218,
	0, 496, 497, 550, 498, 499, 500, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 224, 225, 226, 227,
	228, 0, 229, 0, 0, 0, 0, 0, 501, 0,
	0, 0, 0, 230, 232, 231, 233, 234, 502, 503,
	235, 504, 238, 236, 237, 505, 0, 239, 240, 241,
	242, 243, 244, 245, 0, 0, 246, 506, 507, 508,
	0, 247, 248, 509, 0, 0, 0, 249, 250, 251,
	252, 253, 254, 0, 0, 256, 257, 258, 255, 0,
	259, 0, 260, 261, 262, 0, 263, 0, 264, 265,
	0, 0, 0, 0, 0, 0, 0, 266, 267, 268,
	269, 270, 271, 510, 511, 0, 272, 273, 0, 275,
	274, 0, 276, 0, 0, 277, 278, 279, 0, 280,
	0, 281, 282, 0, 283, 512, 284, 285, 287, 289,
	286, 290, 291, 292, 293, 513, 514, 0, 0, 0,
	0, 0, 0, 0, 294, 295, 296, 515, 297, 298,
	0, 299, 0, 300, 0, 0, 0, 301, 516, 517,
	302, 303, 0, 304, 518, 0, 519, 305, 0, 306,
	307, 308, 309, 1293, 521, 522, 369, 0, 310, 311,
	0, 312, 313, 314, 316, 0, 0, 0, 315, 317,
	324, 0, 0, 318, 523, 320, 319, 321, 322, 323,
	524, 0, 525, 0, 325, 0, 526, 0, 326, 327,
	328, 0, 329, 330, 0, 0, 331, 332, 333, 334,
	335, 0, 337, 336, 0, 338, 527, 0, 339, 340,
	0, 0, 341, 342, 343, 0, 0, 344, 345, 346,
	347, 0, 348, 349, 351, 353, 350, 352, 357, 354,
	355, 356, 359, 360, 358, 0, 361, 362, 365, 366,
	364, 0, 363, 0, 0, 0, 367, 0, 528, 368,
	529, 370, 371, 0, 372, 373, 374, 0, 0, 376,
	377, 378, 0, 0, 379, 380, 530, 0, 381, 0,
	531, 382, 375, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 391, 532, 533, 534, 392, 535, 393, 394,
	0, 395, 0, 396, 397, 398, 399, 400, 401, 402,
	536, 403, 404, 0, 405, 406, 407, 408, 409, 410,
	0, 412, 413, 414, 411, 415, 416, 417, 418, 0,
	419, 0, 420, 421, 422, 423, 537, 424, 0, 425,
	429, 430, 431, 432, 433, 434, 435, 0, 441, 442,
	436, 438, 439, 440, 437, 443, 444, 445, 0, 446,
	426, 427, 447, 448, 0, 449, 450, 538, 451, 452,
	0, 453, 454, 455, 456, 428, 457, 461, 462, 458,
	459, 460, 539, 0, 464, 465, 463, 0, 466, 467,
	468, 469, 470, 288, 471, 0, 472, 540, 541, 542,
	543, 0, 479, 0, 473, 474, 544, 475, 545, 0,
	476, 477, 478, 0, 480, 481, 0, 0, 482, 483,
	484, 486, 487, 485, 489, 0, 490, 0, 488, 491,
	492, 493, 546, 547, 548, 0, 495, 494, 549, 1289,
	0, 218, 0, 496, 497, 550, 498, 499, 500, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 224, 225,
	226, 227, 228, 0, 229, 0, 0, 0, 0, 0,
	501, 0, 0, 0, 0, 230, 232, 231, 233, 234,
	502, 503, 235, 504, 238, 236, 237, 505, 0, 239,
	240, 241, 242, 243, 244, 245, 0, 0, 246, 506,
	507, 508, 0, 247, 248, 509, 0, 0, 0, 249,
	250, 251, 252, 253, 254, 0, 0, 256, 257, 258,
	255, 0, 259, 0, 260, 261, 262, 0, 263, 0,
	264, 265, 0, 0, 0, 0, 0, 0, 0, 266,
	267, 268, 269, 270, 271, 510, 511, 0, 272, 273,
	0, 275, 274, 0, 276, 0, 0, 277, 278, 279,
	0, 280, 0, 281, 282, 0, 283, 512, 284, 285,
	287, 289, 286, 290, 291, 292, 293, 513, 514, 0,
	0, 0, 0, 0, 0, 0, 294, 295, 296, 515,
	297, 298, 0, 299, 0, 300, 0, 0, 0, 301,
	516, 517, 302, 303, 0, 304, 518, 0, 519, 305,
	0, 306, 307, 308, 309, 520, 521, 522, 369, 0,
	310, 311, 0, 312, 313, 314, 316, 0, 0, 0,
	315, 317, 324, 0, 0, 318, 523, 320, 319, 321,
	322, 323, 524, 0, 525, 0, 325, 0, 526, 0,
	326, 327, 328, 0, 329, 330, 0, 0, 331, 332,
	333, 334, 335, 0, 337, 336, 0, 338, 527, 0,
	339, 340, 0, 0, 341, 342, 343, 0, 0, 344,
	345, 346, 347, 0, 348, 349, 351, 353, 350, 352,
	357, 354, 355, 356, 359, 360, 358, 0, 361, 362,
	365, 366, 364, 0, 363, 0, 0, 0, 367, 0,
	528, 368, 529, 370, 371, 0, 372, 373, 374, 0,
	0, 376, 377, 378, 0, 0, 379, 380, 530, 0,
	381, 0, 531, 382, 375, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 391, 532, 533, 534, 392, 535,
	393, 394, 0, 395, 0, 396, 397, 398, 399, 400,
	401, 402, 536, 403, 404, 0, 405, 406, 407, 408,
	409, 410, 0, 412, 413, 414, 411, 415, 416, 417,
	418, 0, 419, 0, 420, 421, 422, 423, 537, 424,
	0, 425, 429, 430, 431, 432, 433, 434, 435, 0,
	441, 442, 436, 438, 439, 440, 437, 443, 444, 445,
	0, 446, 426, 427, 447, 448, 0, 449, 450, 538,
	451, 452, 0, 453, 454, 455, 456, 428, 457, 461,
	462, 458, 459, 460, 539, 0, 464, 465, 463, 0,
	466, 467, 468, 469, 470, 288, 471, 0, 472, 540,
	541, 542, 543, 0, 479, 0, 473, 474, 544, 475,
	545, 0, 476, 477, 478, 0, 480, 481, 0, 0,
	482, 483, 484, 486, 487, 485, 489, 0, 490, 0,
	488, 491, 492, 493, 546, 547, 548, 0, 495, 494,
	549, 1216, 0, 218, 0, 496, 497, 550, 498, 499,
	500, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	224, 225, 226, 227, 228, 0, 229, 0, 0, 0,
	0, 0, 501, 0, 0, 0, 0, 230, 232, 231,
	233, 234, 502, 503, 235, 504, 238, 236, 237, 505,
	0, 239, 240, 241, 242, 243, 244, 245, 0, 0,
	246, 506, 507, 508, 0, 247, 248, 509, 0, 0,
	0, 249, 250, 251, 252, 253, 254, 0, 0, 256,
	257, 258, 255, 0, 259, 0, 260, 261, 262, 0,
	263, 0, 264, 265, 0, 0, 0, 0, 0, 0,
	0, 266, 267, 268, 269, 270, 271, 510, 511, 0,
	272, 273, 0, 275, 274, 0, 276, 0, 0, 277,
	278, 279, 0, 280, 0, 281, 282, 0, 283, 512,
	284, 285, 287, 289, 286, 290, 291, 292, 293, 513,
	514, 0, 0, 0, 0, 0, 0, 0, 294, 295,
	296, 515, 297, 298, 0, 299, 0, 300, 0, 0,
	0, 301, 516, 517, 302, 303, 0, 304, 518, 0,
	519, 305, 0, 306, 307, 308, 309, 520, 521, 522,
	369, 0, 310, 311, 0, 312, 313, 314, 316, 0,
	0, 0, 315, 317, 324, 0, 0, 318, 523, 320,
	319, 321, 322, 323, 524, 0, 525, 0, 325, 0,
	526, 0, 326, 327, 328, 0, 329, 330, 0, 0,
	331, 332, 333, 334, 335, 0, 337, 336, 0, 338,
	527, 0, 339, 340, 0, 0, 341, 342, 343, 0,
	0, 344, 345, 346, 347, 0, 348, 349, 351, 353,
	350, 352, 357, 354, 355, 356, 359, 360, 358, 0,
	361, 362, 365, 366, 364, 0, 363, 0, 0, 0,
	367, 0, 528, 368, 529, 370, 371, 0, 372, 373,
	374, 0, 0, 376, 377, 378, 0, 0, 379, 380,
	530, 0, 381, 0, 531, 382, 375, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 391, 532, 533, 534,
	392, 535, 393, 394, 0, 395, 0, 396, 397, 398,
	399, 400, 401, 402, 536, 403, 404, 0, 405, 406,
	407, 408, 409, 410, 0, 412, 413, 414, 411, 415,
	416, 417, 418, 0, 419, 0, 420, 421, 422, 423,
	537, 424, 0, 425, 429, 430, 431, 432, 433, 434,
	435, 0, 441, 442, 436, 438, 439, 440, 437, 443,
	444, 445, 0, 446, 426, 427, 447, 448, 0, 449,
	450, 538, 451, 452, 0, 453, 454, 455, 456, 428,
	457, 461, 462, 458, 459, 460, 539, 0, 464, 465,
	463, 0, 466, 467, 468, 469, 470, 288, 471, 0,
	472, 540, 541, 542, 543, 0, 479, 0, 473, 474,
	544, 475, 545, 0, 476, 477, 478, 0, 480, 481,
	0, 0, 482, 483, 484, 486, 487, 485, 489, 0,
	490, 0, 488, 491, 492, 493, 546, 547, 548, 0,
	495, 494, 549, 599, 0, 218, 0, 496, 497, 550,
	498, 499, 500, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 224, 225, 226, 227, 228, 0, 229, 0,
	0, 0, 0, 0, 501, 0, 0, 0, 0, 230,
	1088, 231, 233, 234, 502, 503, 235, 504, 238, 236,
	237, 505, 0, 239, 240, 241, 242, 243, 244, 245,
	0, 0, 246, 506, 507, 1086, 0, 247, 248, 509,
	0, 0, 0, 249, 250, 251, 252, 253, 254, 0,
	0, 256, 257, 258, 255, 0, 259, 0, 260, 261,
	262, 0, 263, 0, 264, 265, 0, 0, 0, 0,
	0, 0, 0, 266, 267, 268, 269, 270, 271, 510,
	511, 0, 272, 273, 0, 275, 274, 0, 276, 0,
	0, 277, 278, 279, 0, 280, 0, 281, 282, 0,
	283, 512, 284, 285, 287, 289, 286, 290, 291, 292,
	293, 513, 514, 0, 0, 0, 0, 0, 0, 0,
	294, 295, 296, 515, 297, 298, 0, 299, 0, 300,
	0, 0, 0, 301, 516, 517, 302, 303, 0, 304,
	518, 0, 519, 305, 0, 306, 307, 308, 309, 520,
	521, 522, 369, 0, 310, 311, 0, 312, 313, 314,
	316, 0, 0, 0, 315, 317, 324, 0, 0, 318,
	523, 320, 319, 321, 322, 323, 524, 0, 525, 0,
	325, 0, 526, 0, 326, 327, 328, 0, 329, 330,
	0, 0, 331, 332, 333, 334, 335, 0, 337, 336,
	0, 338, 527, 0, 339, 340, 0, 0, 341, 342,
	343, 0, 0, 344, 345, 346, 347, 0, 348, 349,
	351, 353, 350, 352, 357, 354, 355, 356, 359, 360,
	600, 0, 361, 362, 365, 366, 364, 0, 363, 0,
	0, 0, 367, 0, 528, 368, 529, 370, 371, 0,
	372, 373, 374, 0, 0, 376, 377, 378, 0, 0,
	379, 380, 530, 0, 381, 0, 531, 382, 375, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 391, 532,
	533, 534, 392, 535, 393, 394, 0, 395, 0, 396,
	397, 398, 399, 400, 401, 402, 536, 403, 404, 0,
	405, 406, 407, 408, 409, 410, 0, 412, 413, 414,
	411, 415, 416, 417, 418, 0, 419, 0, 420, 421,
	422, 423, 537, 424, 0, 425, 429, 430, 596, 432,
	433, 434, 435, 0, 441, 442, 436, 438, 439, 440,
	437, 443, 1089, 445, 0, 446, 426, 427, 447, 448,
	0, 449, 450, 538, 451, 452, 0, 453, 454, 455,
	456, 428, 457, 461, 462, 458, 459, 460, 539, 0,
	464, 465, 463, 0, 466, 467, 468, 469, 470, 288,
	471, 0, 472, 595, 541, 542, 543, 0, 479, 0,
	473, 1087, 544, 475, 545, 0, 476, 477, 478, 0,
	480, 481, 0, 0, 482, 483, 484, 486, 487, 485,
	489, 0, 490, 0, 488, 491, 492, 493, 546, 547,
	548, 218, 495, 494, 549, 0, 0, 0, 0, 496,
	497, 550, 498, 499, 500, 0, 0, 0, 224, 225,
	226, 227, 228, 1070, 229, 0, 0, 0, 0, 0,
	501, 0, 0, 0, 0, 230, 232, 231, 233, 234,
	502, 503, 235, 504, 238, 236, 237, 505, 0, 239,
	240, 241, 242, 243, 244, 245, 0, 0, 246, 506,
	507, 508, 0, 247, 248, 509, 0, 0, 0, 249,
	250, 251, 252, 253, 254, 0, 0, 256, 257, 258,
	255, 0, 259, 0, 260, 261, 262, 0, 263, 0,
	264, 265, 0, 0, 0, 0, 0, 0, 0, 266,
	267, 268, 269, 270, 271, 510, 511, 0, 272, 273,
	0, 275, 274, 0, 276, 0, 0, 277, 278, 279,
	0, 280, 0, 281, 282, 0, 283, 512, 284, 285,
	287, 289, 286, 290, 291, 292, 293, 513, 514, 0,
	0, 0, 0, 0, 0, 0, 294, 295, 296, 515,
	297, 298, 0, 299, 0, 300, 0, 0, 0, 301,
	516, 517, 302, 303, 0, 304, 518, 0, 519, 305,
	0, 306, 307, 308, 309, 520, 521, 522, 369, 0,
	310, 311, 0, 312, 313, 314, 316, 0, 0, 0,
	315, 317, 324, 0, 0, 318, 523, 320, 319, 321,
	322, 323, 524, 0, 525, 0, 325, 0, 526, 0,
	326, 327, 328, 0, 329, 330, 0, 0, 331, 332,
	333, 334, 335, 0, 337, 336, 0, 338, 527, 0,
	339, 340, 0, 0, 341, 342, 343, 0, 0, 344,
	345, 346, 347, 0, 348, 349, 351, 353, 350, 352,
	357, 354, 355, 356, 359, 360, 358, 0, 361, 362,
	365, 366, 364, 0, 363, 0, 0, 0, 367, 0,
	528, 368, 529, 370, 371, 0, 372, 373, 374, 0,
	0, 376, 377, 378, 0, 0, 379, 380, 530, 0,
	381, 0, 531, 382, 375, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 391, 532, 533, 534, 392, 535,
	393, 394, 0, 395, 0, 396, 397, 398, 399, 400,
	401, 402, 536, 403, 404, 0, 405, 406, 407, 408,
	409, 410, 0, 412, 413, 414, 411, 415, 416, 417,
	418, 0, 419, 0, 420, 421, 422, 423, 537, 424,
	0, 425, 429, 430, 431, 432, 433, 434, 435, 0,
	441, 442, 436, 438, 439, 440, 437, 443, 444, 445,
	0, 446, 426, 427, 447, 448, 0, 449, 450, 538,
	451, 452, 0, 453, 454, 455, 456, 428, 457, 461,
	462, 458, 459, 460, 539, 0, 464, 465, 463, 0,
	466, 467, 468, 469, 470, 288, 471, 0, 472, 540,
	541, 542, 543, 0, 479, 0, 473, 474, 544, 475,
	545, 0, 476, 477, 478, 0, 480, 481, 0, 0,
	482, 483, 484, 486, 487, 485, 489, 0, 490, 0,
	488, 491, 492, 493, 546, 547, 548, 218, 495, 494,
	549, 0, 0, 0, 0, 496, 497, 550, 498, 499,
	500, 0, 0, 0, 224, 225, 226, 227, 228, 605,
	229, 0, 0, 0, 0, 0, 501, 0, 0, 0,
	0, 230, 232, 231, 233, 234, 502, 503, 235, 504,
	238, 236, 237, 505, 0, 239, 240, 241, 242, 243,
	244, 245, 0, 0, 246, 506, 507, 508, 0, 247,
	248, 509, 0, 0, 0, 249, 250, 251, 252, 253,
	254, 0, 0, 256, 257, 258, 255, 0, 259, 0,
	260, 261, 262, 0, 263, 0, 264, 265, 0, 0,
	0, 0, 0, 0, 0, 266, 267, 268, 269, 270,
	271, 510, 511, 0, 272, 273, 0, 275, 274, 0,
	276, 0, 0, 277, 278, 279, 0, 280, 0, 281,
	282, 0, 283, 512, 284, 285, 287, 289, 286, 290,
	291, 292, 293, 513, 514, 0, 0, 0, 0, 0,
	0, 0, 294, 295, 296, 515, 297, 298, 0, 299,
	0, 300, 0, 0, 0, 301, 516, 517, 302, 303,
	0, 304, 518, 0, 519, 305, 0, 306, 307, 308,
	309, 520, 521, 522, 369, 0, 310, 311, 0, 312,
	313, 314, 316, 0, 0, 0, 315, 317, 324, 0,
	0, 318, 523, 320, 319, 321, 322, 323, 524, 0,
	525, 0, 325, 0, 526, 0, 326, 327, 328, 0,
	329, 330, 0, 0, 331, 332, 333, 334, 335, 0,
	337, 336, 0, 338, 527, 0, 339, 340, 0, 0,
	341, 342, 343, 0, 0, 344, 345, 346, 347, 0,
	348, 349, 351, 353, 350, 352, 357, 354, 355, 356,
	359, 360, 358, 0, 361, 362, 365, 366, 364, 0,
	363, 0, 0, 0, 367, 0, 528, 368, 529, 370,
	371, 0, 372, 373, 374, 0, 0, 376, 377, 378,
	0, 0, 379, 380, 530, 0, 381, 0, 531, 382,
	375, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	391, 532, 533, 534, 392, 535, 393, 394, 0, 395,
	0, 396, 397, 398, 399, 400, 401, 402, 536, 403,
	404, 0, 405, 406, 407, 408, 409, 410, 0, 412,
	413, 414, 411, 415, 416, 417, 418, 0, 419, 0,
	420, 421, 422, 423, 537, 424, 0, 425, 429, 430,
	431, 432, 433, 434, 435, 0, 441, 442, 436, 438,
	439, 440, 437, 443, 444, 445, 0, 446, 426, 427,
	447, 448, 0, 449, 450, 538, 451, 452, 0, 453,
	454, 455, 456, 428, 457, 461, 462, 458, 459, 460,
	539, 0, 464, 465, 463, 0, 466, 467, 468, 469,
	470, 288, 471, 0, 472, 540, 541, 542, 543, 0,
	479, 0, 473, 474, 544, 475, 545, 0, 476, 477,
	478, 0, 480, 481, 0, 0, 482, 483, 484, 486,
	487, 485, 489, 0, 490, 0, 488, 491, 492, 493,
	546, 547, 548, 0, 495, 494, 549, 599, 0, 218,
	0, 496, 497, 550, 498, 499, 500, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 224, 225, 226, 227,
	228, 0, 229, 0, 0, 0, 0, 0, 501, 0,
	0, 0, 0, 230, 232, 231, 233, 234, 502, 503,
	235, 504, 238, 236, 237, 505, 0, 239, 240, 241,
	242, 243, 244, 245, 0, 0, 246, 506, 507, 508,
	0, 247, 589, 509, 0, 0, 0, 249, 250, 251,
	252, 253, 254, 0, 0, 256, 257, 258, 255, 0,
	587, 0, 260, 261, 262, 0, 263, 0, 264, 265,
	0, 0, 0, 0, 0, 0, 0, 266, 267, 268,
	269, 270, 271, 510, 511, 0, 272, 273, 0, 275,
	274, 0, 276, 0, 0, 277, 278, 279, 0, 280,
	0, 281, 282, 0, 283, 512, 284, 285, 287, 289,
	286, 290, 291, 292, 293, 513, 514, 0, 0, 0,
	0, 0, 0, 0, 294, 295, 296, 515, 297, 298,
	0, 299, 0, 300, 0, 0, 0, 301, 516, 517,
	302, 303, 0, 304, 518, 0, 519, 305, 0, 306,
	307, 308, 309, 520, 521, 522, 369, 0, 310, 311,
	0, 312, 313, 314, 316, 0, 0, 0, 315, 317,
	324, 0, 0, 318, 523, 320, 319, 321, 322, 323,
	524, 0, 525, 0, 325, 0, 526, 0, 326, 327,
	328, 0, 329, 330, 0, 0, 331, 332, 333, 334,
	335, 0, 337, 336, 0, 338, 527, 0, 339, 340,
	0, 0, 341, 342, 588, 0, 0, 344, 345, 346,
	347, 0, 348, 349, 351, 353, 350, 352, 357, 354,
	355, 356, 359, 360, 600, 0, 361, 362, 365, 366,
	364, 0, 363, 0, 0, 0, 367, 0, 528, 368,
	529, 370, 371, 0, 372, 373, 374, 0, 0, 376,
	377, 378, 0, 0, 379, 380, 530, 0, 381, 0,
	531, 382, 375, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 391, 532, 533, 534, 392, 535, 393, 394,
	0, 395, 0, 396, 397, 398, 399, 400, 401, 402,
	536, 403, 404, 0, 405, 406, 407, 408, 409, 410,
	0, 412, 413, 414, 411, 415, 416, 417, 418, 0,
	419, 0, 420, 421, 422, 423, 590, 424, 0, 425,
	429, 430, 596, 432, 433, 434, 435, 0, 441, 442,
	436, 438, 439, 440, 437, 443, 591, 445, 0, 446,
	426, 427, 447, 448, 0, 449, 450, 538, 451, 452,
	0, 453, 454, 455, 456, 428, 457, 461, 462, 458,
	459, 460, 539, 0, 464, 465, 463, 0, 466, 467,
	468, 469, 470, 288, 471, 0, 472, 595, 541, 542,
	543, 0, 479, 0, 473, 593, 544, 475, 545, 0,
	476, 477, 478, 0, 480, 481, 0, 0, 482, 483,
	484, 486, 487, 485, 489, 0, 490, 0, 488, 491,
	492, 493, 546, 547, 548, 0, 495, 494, 549, 583,
	0, 218, 0, 496, 497, 550, 498, 499, 500, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 224, 225,
	226, 227, 228, 0, 229, 0, 0, 0, 0, 0,
	501, 0, 0, 0, 0, 230, 232, 231, 233, 234,
	502, 503, 235, 504, 238, 236, 237, 505, 0, 239,
	240, 241, 242, 243, 244, 245, 0, 0, 246, 506,
	507, 508, 0, 247, 248, 509, 0, 0, 0, 249,
	250, 251, 252, 253, 254, 0, 0, 256, 257, 258,
	255, 0, 259, 0, 260, 261, 262, 0, 263, 0,
	264, 265, 0, 0, 0, 0, 0, 0, 0, 266,
	267, 268, 269, 270, 271, 510, 511, 0, 272, 273,
	0, 275, 274, 0, 276, 0, 0, 277, 278, 279,
	0, 280, 0, 281, 282, 0, 283, 512, 284, 285,
	287, 289, 286, 290, 291, 292, 293, 513, 514, 0,
	0, 0, 0, 0, 0, 0, 294, 295, 296, 515,
	297, 298, 0, 299, 0, 300, 0, 0, 0, 301,
	516, 517, 302, 303, 0, 304, 518, 0, 519, 305,
	0, 306, 307, 308, 309, 520, 521, 522, 369, 0,
	310, 311, 0, 312, 313, 314, 316, 0, 0, 0,
	315, 317, 324, 0, 0, 318, 523, 320, 319, 321,
	322, 323, 524, 0, 525, 0, 325, 0, 526, 0,
	326, 327, 328, 0, 329, 330, 0, 0, 331, 332,
	333, 334, 335, 0, 337, 336, 0, 338, 527, 0,
	339, 340, 0, 0, 341, 342, 343, 0, 0, 344,
	345, 346, 347, 0, 348, 349, 351, 353, 350, 352,
	357, 354, 355, 356, 359, 360, 358, 0, 361, 362,
	365, 366, 364, 0, 363, 0, 0, 0, 367, 0,
	528, 368, 529, 370, 371, 0, 372, 373, 374, 0,
	0, 376, 377, 378, 0, 0, 379, 380, 530, 0,
	381, 0, 531, 382, 375, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 391, 532, 533, 534, 392, 535,
	393, 394, 0, 395, 0, 396, 397, 398, 399, 400,
	401, 402, 536, 403, 404, 0, 405, 406, 407, 408,
	409, 410, 0, 412, 413, 414, 411, 415, 416, 417,
	418, 0, 419, 0, 420, 421, 422, 423, 537, 424,
	0, 425, 584, 430, 431, 432, 433, 434, 435, 0,
	441, 442, 436, 438, 439, 440, 437, 443, 444, 445,
	0, 446, 426, 427, 447, 448, 0, 449, 450, 538,
	451, 452, 0, 453, 454, 455, 456, 428, 457, 461,
	462, 458, 459, 460, 539, 0, 464, 465, 463, 0,
	466, 467, 468, 469, 470, 288, 471, 0, 472, 540,
	541, 542, 543, 0, 479, 0, 473, 474, 544, 475,
	545, 0, 476, 477, 478, 0, 480, 481, 0, 0,
	482, 483, 484, 486, 487, 485, 489, 0, 490, 0,
	488, 491, 492, 493, 546, 547, 548, 0, 495, 494,
	549, 581, 0, 218, 0, 496, 497, 550, 498, 499,
	500, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	224, 225, 226, 227, 228, 0, 229, 0, 0, 0,
	0, 0, 501, 0, 0, 0, 0, 230, 232, 231,
	233, 234, 502, 503, 235, 504, 238, 236, 237, 505,
	0, 239, 240, 241, 242, 243, 244, 245, 0, 0,
	246, 506, 507, 508, 0, 247, 248, 509, 0, 0,
	0, 249, 250, 251, 252, 253, 254, 0, 0, 256,
	257, 258, 255, 0, 259, 0, 260, 261, 262, 0,
	263, 0, 264, 265, 0, 0, 0, 0, 0, 0,
	0, 266, 267, 268, 269, 270, 271, 510, 511, 0,
	272, 273, 0, 275, 274, 0, 276, 0, 0, 277,
	278, 279, 0, 280, 0, 281, 282, 0, 283, 512,
	284, 285, 287, 289, 286, 290, 291, 292, 293, 513,
	514, 0, 0, 0, 0, 0, 0, 0, 294, 295,
	296, 515, 297, 298, 0, 299, 0, 300, 0, 0,
	0, 301, 516, 517, 302, 303, 0, 304, 518, 0,
	519, 305, 0, 306, 307, 308, 309, 520, 521, 522,
	369, 0, 310, 311, 0, 312, 313, 314, 316, 0,
	0, 0, 315, 317, 324, 0, 0, 318, 523, 320,
	319, 321, 322, 323, 524, 0, 525, 0, 325, 0,
	526, 0, 326, 327, 328, 0, 329, 330, 0, 0,
	331, 332, 333, 334, 335, 0, 337, 336, 0, 338,
	527, 0, 339, 340, 0, 0, 341, 342, 343, 0,
	0, 344, 345, 346, 347, 0, 348, 349, 351, 353,
	350, 352, 357, 354, 355, 356, 359, 360, 358, 0,
	361, 362, 365, 366, 364, 0, 363, 0, 0, 0,
	367, 0, 528, 368, 529, 370, 371, 0, 372, 373,
	374, 0, 0, 376, 377, 378, 0, 0, 379, 380,
	530, 0, 381, 0, 531, 382, 375, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 391, 532, 533, 534,
	392, 535, 393, 394, 0, 395, 0, 396, 397, 398,
	399, 400, 401, 402, 536, 403, 404, 0, 405, 406,
	407, 408, 409, 410, 0, 412, 413, 414, 411, 415,
	416, 417, 418, 0, 419, 0, 420, 421, 422, 423,
	537, 424, 0, 425, 429, 430, 431, 432, 433, 434,
	435, 0, 441, 442, 436, 438, 439, 440, 437, 443,
	444, 445, 0, 446, 426, 427, 447, 448, 0, 449,
	450, 538, 451, 452, 0, 453, 454, 455, 456, 428,
	457, 461, 462, 458, 459, 460, 539, 0, 464, 465,
	463, 0, 466, 467, 468, 469, 470, 288, 471, 0,
	472, 540, 541, 542, 543, 0, 479, 0, 473, 474,
	544, 475, 545, 0, 476, 477, 478, 0, 480, 481,
	0, 0, 482, 483, 484, 486, 487, 485, 489, 0,
	490, 0, 488, 491, 492, 493, 546, 547, 548, 0,
	495, 494, 549, 575, 0, 218, 0, 496, 497, 550,
	498, 499, 500, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 224, 225, 226, 227, 228, 0, 229, 0,
	0, 0, 0, 0, 501, 0, 0, 0, 0, 230,
	232, 231, 233, 234, 502, 503, 235, 504, 238, 236,
	237, 505, 0, 239, 240, 241, 242, 243, 244, 245,
	0, 0, 246, 506, 507, 508, 0, 247, 248, 509,
	0, 0, 0, 249, 250, 251, 252, 253, 254, 0,
	0, 256, 257, 258, 255, 0, 259, 0, 260, 261,
	262, 0, 263, 0, 264, 265, 0, 0, 0, 0,
	0, 0, 0, 266, 267, 268, 269, 270, 271, 510,
	511, 0, 272, 273, 0, 275, 274, 0, 276, 0,
	0, 277, 278, 279, 0, 280, 0, 281, 282, 0,
	283, 512, 284, 285, 287, 289, 286, 290, 291, 292,
	293, 513, 514, 0, 0, 0, 0, 0, 0, 0,
	294, 295, 296, 515, 297, 298, 0, 299, 0, 300,
	0, 0, 0, 301, 516, 517, 302, 303, 0, 304,
	518, 0, 519, 305, 0, 306, 307, 308, 309, 520,
	521, 522, 369, 0, 310, 311, 0, 312, 313, 314,
	316, 0, 0, 0, 315, 317, 324, 0, 0, 318,
	523, 320, 319, 321, 322, 323, 524, 0, 525, 0,
	325, 0, 526, 0, 326, 327, 328, 0, 329, 330,
	0, 0, 331, 332, 333, 334, 335, 0, 337, 336,
	0, 338, 527, 0, 339, 340, 0, 0, 341, 342,
	343, 0, 0, 344, 345, 346, 347, 0, 348, 349,
	351, 353, 350, 352, 357, 354, 355, 356, 359, 360,
	358, 0, 361, 362, 365, 366, 364, 0, 363, 0,
	0, 0, 367, 0, 528, 368, 529, 370, 371, 0,
	372, 373, 374, 0, 0, 376, 377, 378, 0, 0,
	379, 380, 530, 0, 381, 0, 531, 382, 375, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 391, 532,
	533, 534, 392, 535, 393, 394, 0, 395, 0, 396,
	397, 398, 399, 400, 401, 402, 536, 403, 404, 0,
	405, 406, 407, 408, 409, 410, 0, 412, 413, 414,
	411, 415, 416, 417, 418, 0, 419, 0, 420, 421,
	422, 423, 537, 424, 0, 425, 429, 430, 431, 432,
	433, 434, 435, 0, 441, 442, 436, 438, 439, 440,
	437, 443, 444, 445, 0, 446, 426, 427, 447, 448,
	0, 449, 450, 538, 451, 452, 0, 453, 454, 455,
	456, 428, 457, 461, 462, 458, 459, 460, 539, 0,
	464, 465, 463, 0, 466, 467, 468, 469, 470, 288,
	471, 0, 472, 540, 541, 542, 543, 0, 479, 0,
	473, 474, 544, 475, 545, 0, 476, 477, 478, 0,
	480, 481, 0, 0, 482, 483, 484, 486, 487, 485,
	489, 0, 490, 0, 488, 491, 492, 493, 546, 547,
	548, 0, 495, 494, 549, 553, 0, 218, 0, 496,
	497, 550, 498, 499, 500, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 224, 225, 226, 227, 228, 0,
	229, 0, 0, 0, 0, 0, 501, 0, 0, 0,
	0, 230, 232, 231, 233, 234, 502, 503, 235, 504,
	238, 236, 237, 505, 0, 239, 240, 241, 242, 243,
	244, 245, 0, 0, 246, 506, 507, 508, 0, 247,
	248, 509, 0, 0, 0, 249, 250, 251, 252, 253,
	254, 0, 0, 256, 257, 258, 255, 0, 259, 0,
	260, 261, 262, 0, 263, 0, 264, 265, 0, 0,
	0, 0, 0, 0, 0, 266, 267, 268, 269, 270,
	271, 510, 511, 0, 272, 273, 0, 275, 274, 0,
	276, 0, 0, 277, 278, 279, 0, 280, 0, 281,
	282, 0, 283, 512, 284, 285, 287, 289, 286, 290,
	291, 292, 293, 513, 514, 0, 0, 0, 0, 0,
	0, 0, 294, 295, 296, 515, 297, 298, 0, 299,
	0, 300, 0, 0, 0, 301, 516, 517, 302, 303,
	0, 304, 518, 0, 519, 305, 0, 306, 307, 308,
	309, 520, 521, 522, 369, 0, 310, 311, 0, 312,
	313, 314, 316, 0, 0, 0, 315, 317, 324, 0,
	0, 318, 523, 320, 319, 321, 322, 323, 524, 0,
	525, 0, 325, 0, 526, 0, 326, 327, 328, 0,
	329, 330, 0, 0, 331, 332, 333, 334, 335, 0,
	337, 336, 0, 338, 527, 0, 339, 340, 0, 0,
	341, 342, 343, 0, 0, 344, 345, 346, 347, 0,
	348, 349, 351, 353, 350, 352, 357, 354, 355, 356,
	359, 360, 358, 0, 361, 362, 365, 366, 364, 0,
	363, 0, 0, 0, 367, 0, 528, 368, 529, 370,
	371, 0, 372, 373, 374, 0, 0, 376, 377, 378,
	0, 0, 379, 380, 530, 0, 381, 0, 531, 382,
	375, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	391, 532, 533, 534, 392, 535, 393, 394, 0, 395,
	0, 396, 397, 398, 399, 400, 401, 402, 536, 403,
	404, 0, 405, 406, 407, 408, 409, 410, 0, 412,
	413, 414, 411, 415, 416, 417, 418, 0, 419, 0,
	420, 421, 422, 423, 537, 424, 0, 425, 429, 430,
	431, 432, 433, 434, 435, 0, 441, 442, 436, 438,
	439, 440, 437, 443, 444, 445, 0, 446, 426, 427,
	447, 448, 0, 449, 450, 538, 451, 452, 0, 453,
	454, 455, 456, 428, 457, 461, 462, 458, 459, 460,
	539, 0, 464, 465, 463, 0, 466, 467, 468, 469,
	470, 288, 471, 0, 472, 540, 541, 542, 543, 0,
	479, 0, 473, 474, 544, 475, 545, 0, 476, 477,
	478, 0, 480, 481, 0, 0, 482, 483, 484, 486,
	487, 485, 489, 0, 490, 0, 488, 491, 492, 493,
	546, 547, 548, 218, 495, 494, 549, 0, 0, 0,
	0, 496, 497, 550, 498, 499, 500, 0, 0, 0,
	224, 225, 226, 227, 228, 0, 229, 0, 0, 0,
	0, 0, 501, 0, 0, 0, 0, 230, 232, 231,
	233, 234, 502, 503, 235, 504, 238, 236, 237, 505,
	0, 239, 240, 241, 242, 243, 244, 245, 0, 0,
	246, 506, 507, 508, 0, 247, 248, 509, 0, 0,
	0, 249, 250, 251, 252, 253, 254, 0, 0, 256,
	257, 258, 255, 0, 259, 0, 260, 261, 262, 0,
	263, 0, 264, 265, 0, 0, 0, 0, 0, 0,
	0, 266, 267, 268, 269, 270, 271, 510, 511, 0,
	272, 273, 0, 275, 274, 0, 276, 0, 0, 277,
	278, 279, 0, 280, 0, 281, 282, 0, 283, 512,
	284, 285, 287, 289, 286, 290, 291, 292, 293, 513,
	514, 0, 0, 0, 0, 0, 0, 0, 294, 295,
	296, 515, 297, 298, 0, 299, 0, 300, 0, 0,
	0, 301, 516, 517, 302, 303, 0, 304, 518, 0,
	519, 305, 0, 306, 307, 308, 309, 520, 521, 522,
	369, 0, 310, 311, 0, 312, 313, 314, 316, 0,
	0, 0, 315, 317, 324, 0, 0, 318, 523, 320,
	319, 321, 322, 323, 524, 0, 525, 0, 325, 0,
	526, 0, 326, 327, 328, 0, 329, 330, 0, 0,
	331, 332, 333, 334, 335, 0, 337, 336, 0, 338,
	527, 0, 339, 340, 0, 0, 341, 342, 343, 0,
	0, 344, 345, 346, 347, 0, 348, 349, 351, 353,
	350, 352, 357, 354, 355, 356, 359, 360, 358, 0,
	361, 362, 365, 366, 364, 0, 363, 0, 0, 0,
	367, 0, 528, 368, 529, 370, 371, 0, 372, 373,
	374, 0, 0, 376, 377, 378, 0, 0, 379, 380,
	530, 0, 381, 0, 531, 382, 375, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 391, 532, 533, 534,
	392, 535, 393, 394, 0, 395, 0, 396, 397, 398,
	399, 400, 401, 402, 536, 403, 404, 0, 405, 406,
	407, 408, 409, 410, 0, 412, 413, 414, 411, 415,
	416, 417, 418, 0, 419, 0, 420, 421, 422, 423,
	537, 424, 0, 425, 429, 430, 431, 432, 433, 434,
	435, 0, 441, 442, 436, 438, 439, 440, 437, 443,
	444, 445, 0, 446, 426, 427, 447, 448, 0, 449,
	450, 538, 451, 452, 0, 453, 454, 455, 456, 428,
	457, 461, 462, 458, 459, 460, 539, 0, 464, 465,
	463, 0, 466, 467, 468, 469, 470, 288, 471, 0,
	472, 540, 541, 542, 543, 0, 479, 0, 473, 474,
	544, 475, 545, 0, 476, 477, 478, 0, 480, 481,
	0, 0, 482, 483, 484, 486, 487, 485, 489, 0,
	490, 0, 488, 491, 492, 493, 546, 547, 548, 218,
	495, 494, 549, 0, 0, 0, 0, 496, 497, 550,
	498, 499, 500, 0, 0, 0, 224, 225, 226, 227,
	228, 0, 229, 0, 0, 0, 0, 0, 501, 0,
	0, 0, 0, 230, 232, 231, 233, 234, 502, 503,
	235, 504, 238, 236, 237, 505, 0, 239, 240, 241,
	242, 243, 244, 245, 0, 0, 246, 506, 507, 508,
	0, 247, 248, 509, 0, 0, 0, 249, 250, 251,
	252, 253, 254, 0, 0, 256, 257, 258, 255, 0,
	259, 0, 260, 261, 262, 0, 263, 0, 264, 265,
	0, 0, 0, 0, 0, 0, 0, 266, 267, 268,
	269, 270, 271, 510, 511, 0, 272, 273, 0, 275,
	274, 0, 276, 0, 0, 277, 278, 279, 0, 280,
	0, 281, 282, 0, 283, 512, 284, 285, 287, 289,
	286, 290, 291, 292, 293, 513, 514, 0, 0, 0,
	0, 0, 0, 0, 294, 295, 296, 515, 297, 298,
	0, 299, 0, 300, 0, 0, 0, 301, 516, 517,
	302, 303, 0, 304, 518, 0, 519, 305, 0, 306,
	307, 308, 309, 2922, 521, 522, 369, 0, 310, 311,
	0, 312, 313, 314, 316, 0, 0, 0, 315, 317,
	324, 0, 0, 318, 523, 320, 319, 321, 322, 323,
	524, 0, 525, 0, 325, 0, 526, 0, 326, 327,
	328, 0, 329, 330, 0, 0, 331, 332, 333, 334,
	335, 0, 337, 336, 0, 338, 527, 0, 339, 340,
	0, 0, 341, 342, 343, 0, 0, 344, 345, 346,
	347, 0, 348, 349, 351, 353, 350, 352, 357, 354,
	355, 356, 359, 360, 358, 0, 361, 362, 365, 366,
	364, 0, 363, 0, 0, 0, 367, 0, 528, 368,
	529, 370, 371, 0, 372, 373, 374, 0, 0, 376,
	377, 378, 0, 0, 379, 380, 530, 0, 381, 0,
	531, 382, 375, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 391, 532, 533, 534, 392, 535, 393, 394,
	0, 395, 0, 396, 397, 398, 399, 400, 401, 402,
	536, 403, 404, 0, 405, 406, 407, 408, 409, 410,
	0, 412, 413, 414, 411, 415, 416, 417, 418, 0,
	419, 0, 420, 421, 422, 423, 537, 424, 0, 425,
	429, 430, 431, 432, 433, 434, 435, 0, 441, 442,
	436, 438, 439, 440, 437, 443, 444, 445, 0, 446,
	426, 427, 447, 448, 0, 449, 450, 538, 451, 452,
	0, 453, 454, 455, 456, 428, 457, 461, 462, 458,
	459, 460, 539, 0, 464, 465, 463, 0, 466, 467,
	468, 469, 470, 288, 471, 0, 472, 540, 541, 542,
	543, 0, 479, 0, 473, 474, 544, 475, 545, 0,
	476, 477, 478, 0, 480, 481, 0, 0, 482, 483,
	484, 486, 487, 485, 489, 0, 490, 0, 488, 491,
	492, 493, 546, 547, 548, 218, 495, 494, 549, 0,
	0, 0, 0, 496, 497, 550, 498, 499, 500, 0,
	0, 0, 224, 225, 226, 227, 228, 0, 229, 0,
	0, 0, 0, 0, 501, 0, 0, 0, 0, 230,
	232, 231, 233, 234, 502, 503, 235, 504, 238, 236,
	237, 505, 0, 239, 240, 241, 242, 243, 244, 245,
	0, 0, 246, 506, 507, 508, 0, 247, 248, 509,
	0, 0, 0, 249, 250, 251, 252, 253, 254, 0,
	0, 256, 257, 258, 255, 0, 259, 0, 260, 261,
	262, 0, 263, 0, 264, 265, 0, 0, 0, 0,
	0, 0, 0, 266, 267, 268, 269, 270, 271, 510,
	511, 0, 272, 273, 0, 275, 274, 0, 276, 0,
	0, 277, 278, 279, 0, 280, 0, 281, 282, 0,
	283, 512, 284, 285, 287, 289, 286, 290, 291, 292,
	293, 513, 514, 0, 0, 0, 0, 0, 0, 0,
	294, 295, 296, 515, 297, 298, 0, 299, 0, 300,
	0, 0, 0, 301, 516, 517, 302, 303, 0, 304,
	518, 0, 519, 305, 0, 306, 307, 308, 309, 2845,
	521, 522, 369, 0, 310, 311, 0, 312, 313, 314,
	316, 0, 0, 0, 315, 317, 324, 0, 0, 318,
	523, 320, 319, 321, 322, 323, 524, 0, 525, 0,
	325, 0, 526, 0, 326, 327, 328, 0, 329, 330,
	0, 0, 331, 332, 333, 334, 335, 0, 337, 336,
	0, 338, 527, 0, 339, 340, 0, 0, 341, 342,
	343, 0, 0, 344, 345, 346, 347, 0, 348, 349,
	351, 353, 350, 352, 357, 354, 355, 356, 359, 360,
	358, 0, 361, 362, 365, 366, 364, 0, 363, 0,
	0, 0, 367, 0, 528, 368, 529, 370, 371, 0,
	372, 373, 374, 0, 0, 376, 377, 378, 0, 0,
	379, 380, 530, 0, 381, 0, 531, 382, 375, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 391, 532,
	533, 534, 392, 535, 393, 394, 0, 395, 0, 396,
	397, 398, 399, 400, 401, 402, 536, 403, 404, 0,
	405, 406, 407, 408, 409, 410, 0, 412, 413, 414,
	411, 415, 416, 417, 418, 0, 419, 0, 420, 421,
	422, 423, 537, 424, 0, 425, 429, 430, 431, 432,
	433, 434, 435, 0, 441, 442, 436, 438, 439, 440,
	437, 443, 444, 445, 0, 446, 426, 427, 447, 448,
	0, 449, 450, 538, 451, 452, 0, 453, 454, 455,
	456, 428, 457, 461, 462, 458, 459, 460, 539, 0,
	464, 465, 463, 0, 466, 467, 468, 469, 470, 288,
	471, 0, 472, 540, 541, 542, 543, 0, 479, 0,
	473, 474, 544, 475, 545, 0, 476, 477, 478, 0,
	480, 481, 0, 0, 482, 483, 484, 486, 487, 485,
	489, 0, 490, 0, 488, 491, 492, 493, 546, 547,
	548, 218, 495, 494, 549, 0, 0, 0, 0, 496,
	497, 550, 498, 499, 500, 0, 0, 0, 224, 225,
	226, 227, 228, 0, 229, 0, 0, 0, 0, 0,
	501, 0, 0, 0, 0, 230, 232, 231, 233, 234,
	502, 503, 235, 504, 238, 236, 237, 505, 0, 239,
	240, 241, 242, 243, 244, 245, 0, 0, 246, 506,
	507, 508, 0, 247, 248, 509, 0, 0, 0, 249,
	250, 251, 252, 253, 254, 0, 0, 256, 257, 258,
	255, 0, 259, 0, 260, 261, 262, 0, 263, 0,
	264, 265, 0, 0, 0, 0, 0, 0, 0, 266,
	267, 268, 269, 270, 271, 510, 511, 0, 272, 273,
	0, 275, 274, 0, 276, 0, 0, 277, 278, 279,
	0, 280, 0, 281, 282, 0, 283, 512, 284, 285,
	287, 289, 286, 290, 291, 292, 293, 513, 514, 0,
	0, 0, 0, 0, 0, 0, 294, 295, 296, 515,
	297, 298, 0, 299, 0, 300, 0, 0, 0, 301,
	516, 517, 302, 303, 0, 304, 518, 0, 519, 305,
	0, 306, 307, 308, 309, 2843, 521, 522, 369, 0,
	310, 311, 0, 312, 313, 314, 316, 0, 0, 0,
	315, 317, 324, 0, 0, 318, 523, 320, 319, 321,
	322, 323, 524, 0, 525, 0, 325, 0, 526, 0,
	326, 327, 328, 0, 329, 330, 0, 0, 331, 332,
	333, 334, 335, 0, 337, 336, 0, 338, 527, 0,
	339, 340, 0, 0, 341, 342, 343, 0, 0, 344,
	345, 346, 347, 0, 348, 349, 351, 353, 350, 352,
	357, 354, 355, 356, 359, 360, 358, 0, 361, 362,
	365, 366, 364, 0, 363, 0, 0, 0, 367, 0,
	528, 368, 529, 370, 371, 0, 372, 373, 374, 0,
	0, 376, 377, 378, 0, 0, 379, 380, 530, 0,
	381, 0, 531, 382, 375, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 391, 532, 533, 534, 392, 535,
	393, 394, 0, 395, 0, 396, 397, 398, 399, 400,
	401, 402, 536, 403, 404, 0, 405, 406, 407, 408,
	409, 410, 0, 412, 413, 414, 411, 415, 416, 417,
	418, 0, 419, 0, 420, 421, 422, 423, 537, 424,
	0, 425, 429, 430, 431, 432, 433, 434, 435, 0,
	441, 442, 436, 438, 439, 440, 437, 443, 444, 445,
	0, 446, 426, 427, 447, 448, 0, 449, 450, 538,
	451, 452, 0, 453, 454, 455, 456, 428, 457, 461,
	462, 458, 459, 460, 539, 0, 464, 465, 463, 0,
	466, 467, 468, 469, 470, 288, 471, 0, 472, 540,
	541, 542, 543, 0, 479, 0, 473, 474, 544, 475,
	545, 0, 476, 477, 478, 0, 480, 481, 0, 0,
	482, 483, 484, 486, 487, 485, 489, 0, 490, 0,
	488, 491, 492, 493, 546, 547, 548, 218, 495, 494,
	549, 0, 0, 0, 0, 496, 497, 550, 498, 499,
	500, 0, 0, 0, 224, 225, 226, 227, 228, 0,
	229, 0, 0, 0, 0, 0, 501, 0, 0, 0,
	0, 230, 232, 231, 233, 234, 502, 503, 235, 504,
	238, 236, 237, 505, 0, 239, 240, 241, 242, 243,
	244, 245, 0, 0, 246, 506, 507, 508, 0, 247,
	248, 509, 0, 0, 0, 249, 250, 251, 252, 253,
	254, 0, 0, 256, 257, 258, 255, 0, 259, 0,
	260, 261, 262, 0, 263, 0, 264, 265, 0, 0,
	0, 0, 0, 0, 0, 266, 267, 268, 269, 270,
	271, 510, 511, 0, 272, 273, 0, 275, 274, 0,
	276, 0, 0, 277, 278, 279, 0, 280, 0, 281,
	282, 0, 283, 512, 284, 285, 287, 289, 286, 290,
	291, 292, 293, 513, 514, 0, 0, 0, 0, 0,
	0, 0, 294, 295, 296, 515, 297, 298, 0, 299,
	0, 300, 0, 0, 0, 301, 516, 517, 302, 303,
	0, 304, 518, 0, 519, 305, 0, 306, 307, 308,
	309, 2829, 521, 522, 369, 0, 310, 311, 0, 312,
	313, 314, 316, 0, 0, 0, 315, 317, 324, 0,
	0, 318, 523, 320, 319, 321, 322, 323, 524, 0,
	525, 0, 325, 0, 526, 0, 326, 327, 328, 0,
	329, 330, 0, 0, 331, 332, 333, 334, 335, 0,
	337, 336, 0, 338, 527, 0, 339, 340, 0, 0,
	341, 342, 343, 0, 0, 344, 345, 346, 347, 0,
	348, 349, 351, 353, 350, 352, 357, 354, 355, 356,
	359, 360, 358, 0, 361, 362, 365, 366, 364, 0,
	363, 0, 0, 0, 367, 0, 528, 368, 529, 370,
	371, 0, 372, 373, 374, 0, 0, 376, 377, 378,
	0, 0, 379, 380, 530, 0, 381, 0, 531, 382,
	375, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	391, 532, 533, 534, 392, 535, 393, 394, 0, 395,
	0, 396, 397, 398, 399, 400, 401, 402, 536, 403,
	404, 0, 405, 406, 407, 408, 409, 410, 0, 412,
	413, 414, 411, 415, 416, 417, 418, 0, 419, 0,
	420, 421, 422, 423, 537, 424, 0, 425, 429, 430,
	431, 432, 433, 434, 435, 0, 441, 442, 436, 438,
	439, 440, 437, 443, 444, 445, 0, 446, 426, 427,
	447, 448, 0, 449, 450, 538, 451, 452, 0, 453,
	454, 455, 456, 428, 457, 461, 462, 458, 459, 460,
	539, 0, 464, 465, 463, 0, 466, 467, 468, 469,
	470, 288, 471, 0, 472, 540, 541, 542, 543, 0,
	479, 0, 473, 474, 544, 475, 545, 0, 476, 477,
	478, 0, 480, 481, 0, 0, 482, 483, 484, 486,
	487, 485, 489, 0, 490, 0, 488, 491, 492, 493,
	546, 547, 548, 218, 495, 494, 549, 0, 0, 0,
	0, 496, 497, 550, 498, 499, 500, 0, 0, 0,
	224, 225, 226, 227, 228, 0, 229, 0, 0, 0,
	0, 0, 501, 0, 0, 0, 0, 230, 232, 231,
	233, 234, 502, 503, 235, 504, 238, 236, 237, 505,
	0, 239, 240, 241, 242, 243, 244, 245, 0, 0,
	246, 506, 507, 508, 0, 247, 248, 509, 0, 0,
	0, 249, 250, 251, 252, 253, 254, 0, 0, 256,
	257, 258, 255, 0, 259, 0, 260, 261, 262, 0,
	263, 0, 264, 265, 0, 0, 0, 0, 0, 0,
	0, 266, 267, 268, 269, 270, 271, 510, 511, 0,
	272, 273, 0, 275, 274, 0, 276, 0, 0, 277,
	278, 279, 0, 280, 0, 281, 282, 0, 283, 512,
	284, 285, 287, 289, 286, 290, 291, 292, 293, 513,
	514, 0, 0, 0, 0, 0, 0, 0, 294, 295,
	296, 515, 297, 298, 0, 299, 0, 300, 0, 0,
	0, 301, 516, 517, 302, 303, 0, 304, 518, 0,
	519, 305, 0, 306, 307, 308, 309, 2480, 521, 522,
	369, 0, 310, 311, 0, 312, 313, 314, 316, 0,
	0, 0, 315, 317, 324, 0, 0, 318, 523, 320,
	319, 321, 322, 323, 524, 0, 525, 0, 325, 0,
	526, 0, 326, 327, 328, 0, 329, 330, 0, 0,
	331, 332, 333, 334, 335, 0, 337, 336, 0, 338,
	527, 0, 339, 340, 0, 0, 341, 342, 343, 0,
	0, 344, 345, 346, 347, 0, 348, 349, 351, 353,
	350, 352, 357, 354, 355, 356, 359, 360, 358, 0,
	361, 362, 365, 366, 364, 0, 363, 0, 0, 0,
	367, 0, 528, 368, 529, 370, 371, 0, 372, 373,
	374, 0, 0, 376, 377, 378, 0, 0, 379, 380,
	530, 0, 381, 0, 531, 382, 375, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 391, 532, 533, 534,
	392, 535, 393, 394, 0, 395, 0, 396, 397, 398,
	399, 400, 401, 402, 536, 403, 404, 0, 405, 406,
	407, 408, 409, 410, 0, 412, 413, 414, 411, 415,
	416, 417, 418, 0, 419, 0, 420, 421, 422, 423,
	537, 424, 0, 425, 429, 430, 431, 432, 433, 434,
	435, 0, 441, 442, 436, 438, 439, 440, 437, 443,
	444, 445, 0, 446, 426, 427, 447, 448, 0, 449,
	450, 538, 451, 452, 0, 453, 454, 455, 456, 428,
	457, 461, 462, 458, 459, 460, 539, 0, 464, 465,
	463, 0, 466, 467, 468, 469, 470, 288, 471, 0,
	472, 540, 541, 542, 543, 0, 479, 0, 473, 474,
	544, 475, 545, 0, 476, 477, 478, 0, 480, 481,
	0, 0, 482, 483, 484, 486, 487, 485, 489, 0,
	490, 0, 488, 491, 492, 493, 546, 547, 548, 218,
	495, 494, 549, 0, 0, 0, 0, 496, 497, 550,
	498, 499, 500, 0, 0, 0, 224, 225, 226, 227,
	228, 0, 229, 0, 0, 0, 0, 0, 501, 0,
	0, 0, 0, 230, 232, 231, 233, 234, 502, 503,
	235, 504, 238, 236, 237, 505, 0, 239, 240, 241,
	242, 243, 244, 245, 0, 0, 246, 506, 507, 508,
	0, 247, 248, 509, 0, 0, 0, 249, 250, 251,
	252, 253, 254, 0, 0, 256, 257, 258, 255, 0,
	259, 0, 260, 261, 262, 0, 263, 0, 264, 265,
	0, 0, 0, 0, 0, 0, 0, 266, 267, 268,
	269, 270, 271, 510, 511, 0, 272, 273, 0, 275,
	274, 0, 276, 0, 0, 277, 278, 279, 0, 280,
	0, 281, 282, 0, 283, 512, 284, 285, 287, 289,
	286, 290, 291, 292, 293, 513, 514, 0, 0, 0,
	0, 0, 0, 0, 294, 295, 296, 515, 297, 298,
	0, 299, 0, 300, 0, 0, 0, 301, 516, 517,
	302, 303, 0, 304, 518, 0, 519, 305, 0, 306,
	307, 308, 309, 520, 521, 522, 369, 0, 310, 311,
	0, 312, 313, 314, 316, 0, 0, 0, 315, 317,
	324, 0, 0, 318, 523, 320, 319, 321, 322, 323,
	524, 0, 525, 0, 325, 0, 526, 0, 326, 327,
	328, 0, 329, 330, 0, 0, 331, 332, 333, 334,
	335, 0, 337, 336, 0, 338, 527, 0, 339, 340,
	0, 0, 341, 342, 343, 0, 0, 344, 345, 346,
	347, 0, 348, 349, 351, 353, 350, 352, 357, 354,
	355, 356, 359, 360, 358, 0, 361, 362, 365, 366,
	364, 0, 363, 0, 0, 0, 367, 0, 528, 368,
	529, 370, 371, 0, 372, 373, 374, 0, 0, 376,
	377, 378, 0, 0, 379, 380, 530, 0, 381, 0,
	531, 382, 375, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 391, 532, 533, 534, 392, 535, 393, 394,
	0, 395, 0, 396, 397, 398, 399, 400, 401, 402,
	536, 403, 404, 0, 405, 406, 407, 408, 409, 410,
	0, 412, 413, 414, 411, 415, 416, 417, 418, 0,
	419, 0, 420, 421, 422, 423, 537, 424, 0, 425,
	584, 430, 431, 432, 433, 434, 435, 0, 441, 442,
	436, 438, 439, 440, 437, 443, 444, 445, 0, 446,
	426, 427, 447, 448, 0, 449, 450, 538, 451, 452,
	0, 453, 454, 455, 456, 428, 457, 461, 462, 458,
	459, 460, 539, 0, 464, 465, 463, 0, 466, 467,
	468, 469, 470, 288, 471, 0, 472, 540, 541, 542,
	543, 0, 479, 0, 473, 474, 544, 475, 545, 0,
	476, 477, 478, 0, 480, 481, 0, 0, 482, 483,
	484, 486, 487, 485, 489, 0, 490, 0, 488, 491,
	492, 493, 546, 547, 548, 218, 495, 494, 549, 0,
	0, 0, 0, 496, 497, 550, 498, 499, 500, 0,
	0, 0, 224, 225, 226, 227, 228, 0, 229, 0,
	0, 0, 0, 0, 501, 0, 1922, 0, 0, 230,
	232, 231, 233, 234, 502, 503, 235, 504, 238, 236,
	237, 505, 0, 239, 240, 241, 242, 243, 244, 245,
	0, 0, 246, 506, 507, 508, 0, 247, 248, 509,
	0, 0, 0, 249, 250, 251, 252, 253, 254, 0,
	0, 256, 257, 258, 255, 0, 259, 0, 260, 261,
	262, 0, 263, 0, 264, 265, 0, 0, 0, 0,
	0, 0, 0, 266, 267, 268, 269, 270, 271, 510,
	511, 0, 272, 273, 0, 275, 274, 0, 276, 0,
	0, 277, 278, 279, 0, 280, 0, 281, 282, 0,
	283, 512, 284, 285, 287, 289, 286, 290, 291, 292,
	293, 513, 514, 0, 0, 0, 0, 0, 0, 0,
	294, 295, 296, 515, 297, 298, 0, 299, 0, 300,
	0, 0, 0, 301, 516, 517, 302, 303, 0, 304,
	518, 0, 519, 305, 0, 306, 307, 308, 309, 520,
	521, 522, 369, 0, 310, 311, 0, 312, 313, 314,
	316, 0, 0, 0, 315, 317, 324, 0, 0, 318,
	523, 320, 319, 321, 322, 323, 524, 0, 525, 0,
	325, 0, 526, 0, 326, 327, 328, 0, 329, 330,
	0, 0, 331, 332, 333, 334, 335, 0, 337, 336,
	0, 338, 527, 0, 339, 340, 0, 0, 341, 342,
	343, 0, 0, 344, 345, 346, 347, 0, 348, 349,
	351, 353, 350, 352, 357, 354, 355, 356, 359, 360,
	358, 0, 361, 362, 365, 366, 364, 0, 363, 0,
	0, 0, 367, 0, 528, 368, 529, 370, 371, 0,
	372, 373, 374, 0, 0, 376, 377, 378, 0, 0,
	379, 380, 530, 0, 381, 0, 531, 382, 375, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 391, 532,
	533, 534, 392, 535, 393, 394, 0, 395, 0, 396,
	397, 398, 399, 400, 401, 402, 536, 403, 404, 0,
	405, 406, 407, 408, 409, 410, 0, 412, 413, 414,
	411, 415, 416, 417, 418, 0, 419, 0, 420, 421,
	422, 423, 537, 424, 0, 425, 429, 430, 431, 432,
	433, 434, 435, 0, 441, 442, 436, 438, 439, 440,
	437, 443, 444, 445, 0, 0, 426, 427, 447, 448,
	0, 449, 450, 538, 451, 452, 0, 453, 454, 455,
	456, 428, 457, 461, 462, 458, 459, 460, 539, 0,
	464, 465, 463, 0, 466, 467, 468, 469, 470, 288,
	471, 0, 472, 540, 541, 542, 543, 0, 479, 0,
	473, 474, 544, 475, 545, 0, 476, 477, 478, 0,
	480, 481, 0, 0, 482, 483, 484, 486, 487, 485,
	489, 0, 490, 0, 488, 491, 492, 493, 546, 547,
	548, 218, 495, 494, 549, 0, 0, 0, 0, 496,
	497, 550, 498, 499, 500, 0, 0, 0, 224, 225,
	226, 227, 228, 0, 229, 0, 0, 0, 0, 0,
	501, 0, 0, 0, 0, 230, 232, 231, 233, 234,
	502, 503, 235, 504, 238, 236, 237, 505, 0, 239,
	240, 241, 242, 243, 244, 245, 0, 0, 246, 506,
	507, 508, 0, 247, 248, 509, 0, 0, 0, 249,
	250, 251, 252, 253, 254, 0, 0, 256, 257, 258,
	255, 0, 259, 0, 260, 261, 262, 0, 263, 0,
	264, 265, 0, 0, 0, 0, 0, 0, 0, 266,
	267, 268, 269, 270, 271, 510, 511, 0, 272, 273,
	0, 275, 274, 0, 276, 0, 0, 277, 278, 279,
	0, 280, 0, 281, 282, 0, 283, 512, 284, 285,
	287, 289, 286, 290, 291, 292, 293, 513, 514, 0,
	0, 0, 0, 0, 0, 0, 294, 295, 296, 515,
	297, 298, 0, 299, 0, 300, 0, 0, 0, 301,
	516, 517, 302, 303, 0, 304, 518, 0, 519, 305,
	0, 306, 307, 308, 309, 1331, 521, 522, 369, 0,
	310, 311, 0, 312, 313, 314, 316, 0, 0, 0,
	315, 317, 324, 0, 0, 318, 523, 320, 319, 321,
	322, 323, 524, 0, 525, 0, 325, 0, 526, 0,
	326, 327, 328, 0, 329, 330, 0, 0, 331, 332,
	333, 334, 335, 0, 337, 336, 0, 338, 527, 0,
	339, 340, 0, 0, 341, 342, 343, 0, 0, 344,
	345, 346, 347, 0, 348, 349, 351, 353, 350, 352,
	357, 354, 355, 356, 359, 360, 358, 0, 361, 362,
	365, 366, 364, 0, 363, 0, 0, 0, 367, 0,
	528, 368, 529, 370, 371, 0, 372, 373, 374, 0,
	0, 376, 377, 378, 0, 0, 379, 380, 530, 0,
	381, 0, 531, 382, 375, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 391, 532, 533, 534, 392, 535,
	393, 394, 0, 395, 0, 396, 397, 398, 399, 400,
	401, 402, 536, 403, 404, 0, 405, 406, 407, 408,
	409, 410, 0, 412, 413, 414, 411, 415, 416, 417,
	418, 0, 419, 0, 420, 421, 422, 423, 537, 424,
	0, 425, 429, 430, 431, 432, 433, 434, 435, 0,
	441, 442, 436, 438, 439, 440, 437, 443, 444, 445,
	0, 446, 426, 427, 447, 448, 0, 449, 450, 538,
	451, 452, 0, 453, 454, 455, 456, 428, 457, 461,
	462, 458, 459, 460, 539, 0, 464, 465, 463, 0,
	466, 467, 468, 469, 470, 288, 471, 0, 472, 540,
	541, 542, 543, 0, 479, 0, 473, 474, 544, 475,
	545, 0, 476, 477, 478, 0, 480, 481, 0, 0,
	482, 483, 484, 486, 487, 485, 489, 0, 490, 0,
	488, 491, 492, 493, 546, 547, 548, 218, 495, 494,
	549, 0, 0, 0, 0, 496, 497, 550, 498, 499,
	500, 0, 0, 0, 224, 225, 226, 227, 228, 0,
	229, 0, 0, 0, 0, 0, 501, 0, 0, 0,
	0, 230, 232, 231, 233, 234, 502, 503, 235, 504,
	238, 236, 237, 505, 0, 239, 240, 241, 242, 243,
	244, 245, 0, 0, 246, 506, 507, 508, 0, 247,
	248, 509, 0, 0, 0, 249, 250, 251, 252, 253,
	254, 0, 0, 256, 257, 258, 255, 0, 259, 0,
	260, 261, 262, 0, 263, 0, 264, 265, 0, 0,
	0, 0, 0, 0, 0, 266, 267, 268, 269, 270,
	271, 510, 511, 0, 272, 273, 0, 275, 274, 0,
	276, 0, 0, 277, 278, 279, 0, 280, 0, 281,
	282, 0, 283, 512, 284, 285, 287, 289, 286, 290,
	291, 292, 293, 513, 514, 0, 0, 0, 0, 0,
	0, 0, 294, 295, 296, 515, 297, 298, 0, 299,
	0, 300, 0, 0, 0, 301, 516, 517, 302, 303,
	0, 304, 518, 0, 519, 305, 0, 306, 307, 308,
	309, 1271, 521, 522, 369, 0, 310, 311, 0, 312,
	313, 314, 316, 0, 0, 0, 315, 317, 324, 0,
	0, 318, 523, 320, 319, 321, 322, 323, 524, 0,
	525, 0, 325, 0, 526, 0, 326, 327, 328, 0,
	329, 330, 0, 0, 331, 332, 333, 334, 335, 0,
	337, 336, 0, 338, 527, 0, 339, 340, 0, 0,
	341, 342, 343, 0, 0, 344, 345, 346, 347, 0,
	348, 349, 351, 353, 350, 352, 357, 354, 355, 356,
	359, 360, 358, 0, 361, 362, 365, 366, 364, 0,
	363, 0, 0, 0, 367, 0, 528, 368, 529, 370,
	371, 0, 372, 373, 374, 0, 0, 376, 377, 378,
	0, 0, 379, 380, 530, 0, 381, 0, 531, 382,
	375, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	391, 532, 533, 534, 392, 535, 393, 394, 0, 395,
	0, 396, 397, 398, 399, 400, 401, 402, 536, 403,
	404, 0, 405, 406, 407, 408, 409, 410, 0, 412,
	413, 414, 411, 415, 416, 417, 418, 0, 419, 0,
	420, 421, 422, 423, 537, 424, 0, 425, 429, 430,
	431, 432, 433, 434, 435, 0, 441, 442, 436, 438,
	439, 440, 437, 443, 444, 445, 0, 446, 426, 427,
	447, 448, 0, 449, 450, 538, 451, 452, 0, 453,
	454, 455, 456, 428, 457, 461, 462, 458, 459, 460,
	539, 0, 464, 465, 463, 0, 466, 467, 468, 469,
	470, 288, 471, 0, 472, 540, 541, 542, 543, 0,
	479, 0, 473, 474, 544, 475, 545, 0, 476, 477,
	478, 0, 480, 481, 0, 0, 482, 483, 484, 486,
	487, 485, 489, 0, 490, 0, 488, 491, 492, 493,
	546, 547, 548, 218, 495, 494, 549, 0, 0, 0,
	0, 496, 497, 550, 498, 499, 500, 0, 0, 0,
	224, 225, 226, 227, 228, 0, 229, 0, 0, 0,
	0, 0, 501, 0, 0, 0, 0, 230, 232, 231,
	233, 234, 502, 503, 235, 504, 238, 236, 237, 505,
	0, 239, 240, 241, 242, 243, 244, 245, 0, 0,
	246, 506, 507, 508, 0, 247, 248, 509, 0, 0,
	0, 249, 250, 251, 252, 253, 254, 0, 0, 256,
	257, 258, 255, 0, 259, 0, 260, 261, 262, 0,
	263, 0, 264, 265, 0, 0, 0, 0, 0, 0,
	0, 266, 267, 268, 269, 270, 271, 510, 511, 0,
	272, 273, 0, 275, 274, 0, 276, 0, 0, 277,
	278, 279, 0, 280, 0, 281, 282, 0, 283, 512,
	284, 285, 287, 289, 286, 290, 291, 292, 293, 513,
	514, 0, 0, 0, 0, 0, 0, 0, 294, 295,
	296, 515, 297, 298, 0, 299, 0, 300, 0, 0,
	0, 301, 516, 517, 302, 303, 0, 304, 518, 0,
	519, 305, 0, 306, 307, 308, 309, 520, 521, 522,
	369, 0, 310, 311, 0, 312, 313, 314, 316, 0,
	0, 0, 315, 317, 324, 0, 0, 318, 523, 320,
	319, 321, 322, 323, 524, 0, 525, 0, 325, 0,
	526, 0, 326, 327, 328, 0, 329, 330, 0, 0,
	331, 332, 333, 334, 335, 0, 337, 336, 0, 338,
	527, 0, 339, 340, 0, 0, 341, 342, 343, 0,
	0, 344, 345, 346, 347, 0, 348, 349, 351, 353,
	350, 352, 357, 354, 355, 356, 359, 360, 358, 0,
	361, 362, 365, 366, 364, 0, 363, 0, 0, 0,
	367, 0, 528, 368, 529, 370, 371, 0, 372, 373,
	374, 0, 0, 376, 377, 378, 0, 0, 379, 380,
	530, 0, 381, 0, 531, 382, 375, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 391, 532, 533, 534,
	392, 535, 393, 394, 0, 395, 0, 396, 397, 398,
	399, 400, 401, 402, 536, 1024, 404, 0, 405, 406,
	407, 408, 409, 410, 0, 412, 413, 414, 411, 415,
	416, 417, 418, 0, 419, 0, 420, 421, 422, 423,
	537, 424, 0, 425, 429, 430, 431, 432, 433, 434,
	435, 0, 441, 442, 436, 438, 439, 440, 437, 443,
	444, 445, 0, 446, 426, 427, 447, 448, 0, 449,
	450, 538, 451, 452, 0, 453, 454, 455, 456, 428,
	457, 461, 462, 458, 459, 460, 539, 0, 464, 465,
	463, 0, 466, 467, 468, 469, 470, 288, 471, 0,
	472, 540, 541, 542, 543, 0, 479, 0, 473, 474,
	544, 475, 545, 0, 476, 477, 478, 0, 480, 481,
	0, 0, 482, 483, 484, 486, 487, 485, 489, 0,
	490, 0, 488, 491, 492, 493, 546, 547, 548, 218,
	495, 494, 549, 0, 0, 0, 0, 496, 497, 550,
	498, 499, 500, 0, 0, 0, 224, 225, 226, 227,
	228, 0, 229, 0, 0, 0, 0, 0, 501, 0,
	0, 0, 0, 230, 232, 231, 233, 234, 502, 503,
	235, 504, 238, 236, 237, 505, 0, 239, 240, 241,
	242, 243, 244, 245, 0, 0, 246, 506, 507, 508,
	0, 247, 248, 509, 0, 0, 0, 249, 250, 251,
	252, 253, 254, 0, 0, 256, 257, 258, 255, 0,
	259, 0, 260, 261, 262, 0, 263, 0, 264, 265,
	0, 0, 0, 0, 0, 0, 0, 266, 267, 268,
	269, 270, 271, 510, 511, 0, 272, 273, 0, 275,
	274, 0, 276, 0, 0, 277, 278, 279, 0, 280,
	0, 281, 282, 0, 283, 512, 284, 285, 287, 289,
	286, 290, 291, 292, 293, 513, 514, 0, 0, 0,
	0, 0, 0, 0, 294, 295, 296, 515, 297, 298,
	0, 299, 0, 300, 0, 0, 0, 301, 516, 517,
	302, 303, 0, 304, 518, 0, 519, 0, 0, 306,
	307, 308, 309, 520, 521, 522, 369, 0, 310, 311,
	0, 312, 313, 314, 316, 0, 0, 0, 315, 317,
	324, 0, 0, 318, 523, 320, 319, 321, 322, 323,
	524, 0, 525, 0, 325, 0, 526, 0, 326, 327,
	328, 0, 329, 330, 0, 0, 331, 332, 333, 334,
	335, 0, 337, 336, 0, 338, 527, 0, 339, 340,
	0, 0, 341, 342, 343, 0, 0, 344, 345, 346,
	347, 0, 348, 349, 351, 353, 350, 352, 357, 354,
	355, 356, 359, 360, 358, 0, 361, 362, 365, 366,
	364, 0, 363, 0, 0, 0, 367, 0, 528, 368,
	529, 370, 371, 0, 372, 373, 374, 0, 0, 376,
	377, 378, 0, 0, 379, 380, 530, 0, 381, 0,
	531, 382, 375, 383, 384, 0, 386, 387, 388, 389,
	0, 390, 391, 532, 533, 534, 392, 535, 393, 394,
	0, 395, 0, 396, 397, 398, 399, 0, 401, 402,
	536, 403, 404, 0, 405, 406, 407, 408, 409, 410,
	0, 412, 413, 414, 411, 415, 416, 417, 418, 0,
	419, 0, 420, 421, 422, 423, 537, 0, 0, 425,
	429, 430, 431, 432, 433, 434, 435, 0, 441, 442,
	436, 438, 439, 440, 437, 443, 444, 445, 0, 446,
	426, 427, 447, 448, 0, 449, 450, 538, 451, 452,
	0, 453, 454, 455, 456, 428, 457, 461, 462, 458,
	459, 460, 539, 0, 464, 465, 463, 0, 466, 467,
	468, 469, 470, 288, 471, 0, 472, 540, 541, 542,
	543, 0, 479, 0, 473, 474, 544, 475, 545, 0,
	476, 477, 478, 0, 480, 481, 0, 0, 482, 483,
	484, 486, 487, 485, 489, 0, 490, 0, 488, 491,
	492, 493, 546, 547, 548, 0, 495, 494, 549, 0,
	0, 0, 0, 496, 497, 550, 498, 499, 500, 1505,
	1506, 0, 1538, 1539, 1540, 1548, 1549, 1550, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1541, 1536,
	0, 0, 0, 0, 0, 0, 1508, 0, 0, 0,
	0, 1554, 1505, 1506, 0, 1538, 1539, 1540, 1548, 1549,
	1550, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1541, 1536, 0, 0, 0, 0, 1507, 0, 1508,
	0, 0, 0, 0, 1554, 0, 1527, 0, 0, 0,
	0, 0, 0, 0, 1524, 0, 0, 0, 0, 0,
	0, 1505, 1506, 0, 1538, 1539, 1540, 1548, 1549, 1550,
	1507, 0, 0, 0, 0, 0, 0, 0, 0, 1527,
	1541, 1536, 0, 0, 0, 0, 0, 1524, 1508, 0,
	0, 0, 0, 1554, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1530, 1531, 1532, 1533, 0, 0, 1507,
	0, 0, 0, 1513, 0, 0, 0, 0, 1527, 0,
	0, 0, 0, 0, 0, 0, 1524, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1530, 1531, 1532, 1533,
	1545, 0, 0, 1555, 0, 0, 1513, 0, 1535, 1537,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1551, 0,
	1552, 0, 0, 1545, 0, 0, 1555, 1522, 1523, 0,
	0, 1535, 1537, 0, 0, 1530, 1531, 1532, 1533, 0,
	0, 0, 0, 1543, 0, 1513, 0, 0, 0, 0,
	0, 1551, 0, 1552, 1528, 0, 0, 0, 0, 0,
	1522, 1523, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1545, 0, 0, 1555, 1543, 0, 1553, 0,
	1535, 1537, 0, 0, 0, 0, 0, 1528, 0, 0,
	0, 0, 0, 0, 0, 1542, 0, 0, 0, 0,
	1551, 0, 1552, 0, 0, 0, 0, 0, 0, 1522,
	1523, 1553, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1543, 0, 0, 1542, 0,
	0, 0, 0, 0, 0, 0, 1528, 0, 0, 0,
	0, 0, 0, 1534, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1553, 1529, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1534, 1542, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1546, 0, 0,
	0, 0, 0, 0, 1529, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1546, 0, 0, 0, 0, 1534, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1529, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1546,
	0, 0, 1544, 0, 0, 1519, 1520, 1526, 1547, 1525,
	1521, 0, 1518, 1516, 1517, 1509, 1510, 1511, 1512, 1514,
	1515, 0, 0, 0, 0, 0, 0, 0, 0, 2691,
	0, 0, 0, 0, 0, 1544, 0, 0, 1519, 1520,
	1526, 1547, 1525, 1521, 0, 1518, 1516, 1517, 1509, 1510,
	1511, 1512, 1514, 1515, 0, 0, 0, 0, 0, 0,
	0, 0, 2690, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1544, 0, 0, 1519, 1520, 1526,
	1547, 1525, 1521, 0, 1518, 1516, 1517, 1509, 1510, 1511,
	1512, 1514, 1515, 0, 0, 0, 0, 0, 0, 1505,
	1506, 2152, 1538, 1539, 1540, 1548, 1549, 1550, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1541, 1536,
	0, 0, 0, 0, 0, 0, 1508, 0, 0, 0,
	0, 1554, 1505, 1506, 0, 1538, 1539, 1540, 1548, 1549,
	1550, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1541, 1536, 0, 0, 0, 0, 1507, 0, 1508,
	0, 0, 0, 0, 1554, 0, 1527, 0, 0, 0,
	0, 0, 0, 0, 1524, 0, 0, 0, 0, 0,
	0, 1505, 1506, 0, 1538, 1539, 1540, 1548, 1549, 1550,
	1507, 0, 0, 0, 0, 0, 0, 0, 0, 1527,
	1541, 1536, 0, 0, 0, 0, 0, 1524, 1508, 0,
	0, 0, 0, 1554, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1530, 1531, 1532, 1533, 0, 0, 1507,
	0, 0, 0, 1513, 0, 0, 0, 0, 1527, 0,
	0, 0, 0, 0, 0, 0, 1524, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1530, 1531, 1532, 1533,
	1545, 0, 0, 1555, 0, 0, 1513, 0, 1535, 1537,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1551, 0,
	1552, 0, 0, 1545, 0, 0, 1555, 1522, 1523, 0,
	0, 1535, 1537, 0, 0, 1530, 1531, 1532, 1533, 0,
	0, 0, 0, 1543, 0, 1513, 0, 0, 0, 0,
	0, 1551, 0, 1552, 1528, 0, 0, 0, 0, 0,
	1522, 1523, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1545, 0, 0, 1555, 1543, 0, 1553, 0,
	1535, 1537, 0, 0, 0, 0, 0, 1528, 0, 0,
	0, 0, 0, 0, 0, 1542, 0, 0, 0, 0,
	1551, 0, 1552, 0, 0, 0, 0, 0, 0, 1522,
	1523, 1553, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1543, 0, 0, 1542, 0,
	0, 0, 0, 0, 0, 0, 1528, 0, 0, 0,
	0, 0, 0, 1534, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1553, 1529, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1534, 1542, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1546, 0, 0,
	0, 0, 0, 0, 1529, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1546, 0, 0, 0, 0, 1534, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1529, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1546,
	0, 0, 1544, 0, 0, 1519, 1520, 1526, 1547, 1525,
	1521, 0, 1518, 1516, 1517, 1509, 1510, 1511, 1512, 1514,
	1515, 0, 0, 0, 0, 3656, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1544, 0, 0, 1519, 1520,
	1526, 1547, 1525, 1521, 0, 1518, 1516, 1517, 1509, 1510,
	1511, 1512, 1514, 1515, 0, 0, 0, 0, 3652, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1544, 0, 0, 1519, 1520, 1526,
	1547, 1525, 1521, 0, 1518, 1516, 1517, 1509, 1510, 1511,
	1512, 1514, 1515, 0, 0, 1505, 1506, 3571, 1538, 1539,
	1540, 1548, 1549, 1550, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1541, 1536, 0, 0, 0, 0,
	0, 0, 1508, 0, 0, 0, 0, 1554, 1505, 1506,
	0, 1538, 1539, 1540, 1548, 1549, 1550, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1541, 1536, 0,
	0, 0, 0, 1507, 0, 1508, 0, 0, 0, 0,
	1554, 0, 1527, 0, 0, 0, 0, 0, 0, 0,
	1524, 0, 0, 0, 0, 0, 0, 1505, 1506, 0,
	1538, 1539, 1540, 1548, 1549, 1550, 1507, 0, 0, 0,
	0, 0, 0, 0, 0, 1527, 1541, 1536, 0, 0,
	0, 0, 0, 1524, 1508, 0, 0, 0, 0, 1554,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1530,
	1531, 1532, 1533, 0, 0, 1507, 0, 0, 0, 1513,
	0, 0, 0, 0, 1527, 0, 0, 0, 0, 0,
	0, 0, 1524, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1530, 1531, 1532, 1533, 1545, 0, 0, 1555,
	0, 0, 1513, 0, 1535, 1537, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1551, 0, 1552, 0, 0, 1545,
	0, 0, 1555, 1522, 1523, 0, 0, 1535, 1537, 0,
	0, 1530, 1531, 1532, 1533, 0, 0, 0, 0, 1543,
	0, 1513, 0, 0, 0, 0, 0, 1551, 0, 1552,
	1528, 0, 0, 0, 0, 0, 1522, 1523, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1545, 0,
	0, 1555, 1543, 0, 1553, 0, 1535, 1537, 0, 0,
	0, 0, 0, 1528, 0, 0, 0, 0, 0, 0,
	0, 1542, 0, 0, 0, 0, 1551, 0, 1552, 0,
	0, 0, 0, 0, 0, 1522, 1523, 1553, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1543, 0, 0, 1542, 0, 0, 0, 0, 0,
	0, 0, 1528, 0, 0, 0, 0, 0, 0, 1534,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1553, 1529, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1534, 1542, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1546, 0, 0, 0, 0, 0, 0,
	1529, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1546, 0, 0, 0,
	0, 1534, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1529,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1546, 0, 0, 1544, 0,
	0, 1519, 1520, 1526, 1547, 1525, 1521, 0, 1518, 1516,
	1517, 1509, 1510, 1511, 1512, 1514, 1515, 0, 0, 0,
	0, 3570, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1544, 0, 0, 1519, 1520, 1526, 1547, 1525, 1521,
	0, 1518, 1516, 1517, 1509, 1510, 1511, 1512, 1514, 1515,
	0, 0, 0, 0, 3453, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1544, 0, 0, 1519, 1520, 1526, 1547, 1525, 1521, 0,
	1518, 1516, 1517, 1509, 1510, 1511, 1512, 1514, 1515, 0,
	0, 1505, 1506, 3350, 1538, 1539, 1540, 1548, 1549, 1550,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1541, 1536, 0, 0, 0, 0, 0, 0, 1508, 0,
	0, 0, 0, 1554, 1505, 1506, 0, 1538, 1539, 1540,
	1548, 1549, 1550, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1541, 1536, 0, 0, 0, 0, 1507,
	0, 1508, 0, 0, 0, 0, 1554, 0, 1527, 0,
	0, 0, 0, 0, 0, 0, 1524, 0, 0, 0,
	0, 0, 0, 1505, 1506, 0, 1538, 1539, 1540, 1548,
	1549, 1550, 1507, 0, 0, 0, 0, 0, 0, 0,
	0, 1527, 1541, 1536, 0, 0, 0, 0, 0, 1524,
	1508, 0, 0, 0, 0, 1554, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1530, 1531, 1532, 1533, 0,
	0, 1507, 0, 0, 0, 1513, 0, 0, 0, 0,
	1527, 0, 0, 0, 0, 0, 0, 0, 1524, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1530, 1531,
	1532, 1533, 1545, 0, 0, 1555, 0, 0, 1513, 0,
	1535, 1537, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1551, 0, 1552, 0, 0, 1545, 0, 0, 1555, 1522,
	1523, 0, 0, 1535, 1537, 0, 0, 1530, 1531, 1532,
	1533, 0, 0, 0, 0, 1543, 0, 1513, 0, 0,
	0, 0, 0, 1551, 0, 1552, 1528, 0, 0, 0,
	0, 0, 1522, 1523, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1545, 0, 0, 1555, 1543, 0,
	1553, 0, 1535, 1537, 0, 0, 0, 0, 0, 1528,
	0, 0, 0, 0, 0, 0, 0, 1542, 0, 0,
	0, 0, 1551, 0, 1552, 0, 0, 0, 0, 0,
	0, 1522, 1523, 1553, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1543, 0, 0,
	1542, 0, 0, 0, 0, 0, 0, 0, 1528, 0,
	0, 0, 0, 0, 0, 1534, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1553, 1529, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1534, 1542,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1546,
	0, 0, 0, 0, 0, 0, 1529, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1546, 0, 0, 0, 0, 1534, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1529, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1546, 0, 0, 1544, 0, 0, 1519, 1520, 1526,
	1547, 1525, 1521, 0, 1518, 1516, 1517, 1509, 1510, 1511,
	1512, 1514, 1515, 0, 0, 0, 0, 3303, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1544, 0, 0,
	1519, 1520, 1526, 1547, 1525, 1521, 0, 1518, 1516, 1517,
	1509, 1510, 1511, 1512, 1514, 1515, 0, 0, 0, 0,
	3302, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1544, 0, 0, 1519,
	1520, 1526, 1547, 1525, 1521, 0, 1518, 1516, 1517, 1509,
	1510, 1511, 1512, 1514, 1515, 0, 0, 1505, 1506, 3301,
	1538, 1539, 1540, 1548, 1549, 1550, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1541, 1536, 0, 0,
	0, 0, 0, 0, 1508, 0, 0, 0, 0, 1554,
	1505, 1506, 0, 1538, 1539, 1540, 1548, 1549, 1550, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1541,
	1536, 0, 0, 0, 0, 1507, 0, 1508, 0, 0,
	0, 0, 1554, 0, 1527, 0, 0, 0, 0, 0,
	0, 0, 1524, 0, 0, 0, 0, 0, 0, 1505,
	1506, 0, 1538, 1539, 1540, 1548, 1549, 1550, 1507, 0,
	0, 0, 0, 0, 0, 0, 0, 1527, 1541, 1536,
	0, 0, 0, 0, 0, 1524, 1508, 0, 0, 0,
	0, 1554, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1530, 1531, 1532, 1533, 0, 0, 1507, 0, 0,
	0, 1513, 0, 0, 0, 0, 1527, 0, 0, 0,
	0, 0, 0, 0, 1524, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1530, 1531, 1532, 1533, 1545, 0,
	0, 1555, 0, 0, 1513, 0, 1535, 1537, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1551, 0, 1552, 0,
	0, 1545, 0, 0, 1555, 1522, 1523, 0, 0, 1535,
	1537, 0, 0, 1530, 1531, 1532, 1533, 0, 0, 0,
	0, 1543, 0, 1513, 0, 0, 0, 0, 0, 1551,
	0, 1552, 1528, 0, 0, 0, 0, 0, 1522, 1523,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1545, 0, 0, 1555, 1543, 0, 1553, 0, 1535, 1537,
	0, 0, 0, 0, 0, 1528, 0, 0, 0, 0,
	0, 0, 0, 1542, 0, 0, 0, 0, 1551, 0,
	1552, 0, 0, 0, 0, 0, 0, 1522, 1523, 1553,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1543, 0, 0, 1542, 0, 0, 0,
	0, 0, 0, 0, 1528, 0, 0, 0, 0, 0,
	0, 1534, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1553, 1529,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1534, 1542, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1546, 0, 0, 0, 0,
	0, 0, 1529, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1546, 0,
	0, 0, 0, 1534, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1529, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1546, 0, 0,
	1544, 0, 0, 1519, 1520, 1526, 1547, 1525, 1521, 0,
	1518, 1516, 1517, 1509, 1510, 1511, 1512, 1514, 1515, 0,
	0, 0, 0, 3055, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1544, 0, 0, 1519, 1520, 1526, 1547,
	1525, 1521, 0, 1518, 1516, 1517, 1509, 1510, 1511, 1512,
	1514, 1515, 0, 0, 0, 0, 2688, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1544, 0, 0, 1519, 1520, 1526, 1547, 1525,
	1521, 0, 1518, 1516, 1517, 1509, 1510, 1511, 1512, 1514,
	1515, 0, 0, 1505, 1506, 2687, 1538, 1539, 1540, 1548,
	1549, 1550, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1541, 1536, 0, 0, 0, 0, 0, 0,
	1508, 0, 0, 0, 0, 1554, 1505, 1506, 0, 1538,
	1539, 1540, 1548, 1549, 1550, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1541, 1536, 0, 0, 0,
	0, 1507, 0, 1508, 0, 0, 0, 0, 1554, 0,
	1527, 0, 0, 0, 0, 0, 0, 0, 1524, 0,
	0, 0, 0, 0, 0, 1505, 1506, 0, 1538, 1539,
	1540, 1548, 1549, 1550, 1507, 0, 0, 0, 0, 0,
	0, 0, 0, 1527, 1541, 1536, 0, 0, 0, 0,
	0, 1524, 1508, 0, 0, 0, 0, 1554, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1530, 1531, 1532,
	1533, 0, 0, 1507, 0, 0, 0, 1513, 0, 0,
	0, 0, 1527, 0, 0, 0, 0, 0, 0, 0,
	1524, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1530, 1531, 1532, 1533, 1545, 0, 0, 1555, 0, 0,
	1513, 0, 1535, 1537, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1551, 0, 1552, 0, 0, 1545, 0, 0,
	1555, 1522, 1523, 0, 0, 1535, 1537, 0, 0, 1530,
	1531, 1532, 1533, 0, 0, 0, 0, 1543, 0, 1513,
	0, 0, 0, 0, 0, 1551, 0, 1552, 1528, 0,
	0, 0, 0, 0, 1522, 1523, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1545, 0, 0, 1555,
	1543, 0, 1553, 0, 1535, 1537, 0, 0, 0, 0,
	0, 1528, 0, 0, 0, 0, 0, 0, 0, 1542,
	0, 0, 0, 0, 1551, 0, 1552, 0, 0, 0,
	0, 0, 0, 1522, 1523, 1553, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1543,
	0, 0, 1542, 0, 0, 0, 0, 0, 0, 0,
	1528, 0, 0, 0, 0, 0, 0, 1534, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1553, 1529, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1534, 1542, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1546, 0, 0, 0, 0, 0, 0, 1529, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1546, 0, 0, 0, 0, 1534,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1529, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1546, 0, 0, 1544, 0, 0, 1519,
	1520, 1526, 1547, 1525, 1521, 0, 1518, 1516, 1517, 1509,
	1510, 1511, 1512, 1514, 1515, 0, 0, 0, 0, 2686,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1544,
	0, 0, 1519, 1520, 1526, 1547, 1525, 1521, 0, 1518,
	1516, 1517, 1509, 1510, 1511, 1512, 1514, 1515, 0, 0,
	0, 0, 2685, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1544, 0,
	0, 1519, 1520, 1526, 1547, 1525, 1521, 0, 1518, 1516,
	1517, 1509, 1510, 1511, 1512, 1514, 1515, 1505, 1506, 2639,
	1538, 1539, 1540, 1548, 1549, 1550, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1541, 1536, 0, 0,
	0, 0, 0, 0, 1508, 0, 0, 0, 0, 1554,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1505, 1506, 0, 1538,
	1539, 1540, 1548, 1549, 1550, 1507, 0, 0, 0, 0,
	0, 0, 0, 0, 1527, 1541, 1536, 0, 0, 0,
	0, 2610, 1524, 1508, 0, 0, 0, 0, 1554, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1507, 0, 0, 0, 0, 0,
	0, 0, 0, 1527, 0, 0, 0, 0, 0, 0,
	0, 1524, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1530, 1531, 1532, 1533, 0, 0, 0, 0, 0,
	0, 1513, 3766, 0, 0, 0, 0, 0, 0, 0,
	0, 2611, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1545, 0,
	0, 1555, 0, 0, 0, 0, 1535, 1537, 0, 0,
	1530, 1531, 1532, 1533, 0, 0, 0, 0, 0, 0,
	1513, 0, 0, 0, 0, 0, 1551, 0, 1552, 0,
	0, 0, 0, 0, 0, 1522, 1523, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1545, 0, 0,
	1555, 1543, 0, 0, 0, 1535, 1537, 0, 0, 0,
	0, 0, 1528, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1551, 0, 1552, 0, 0,
	0, 0, 0, 0, 1522, 1523, 1553, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1543, 0, 0, 1542, 0, 0, 0, 0, 0, 0,
	0, 1528, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3765, 0, 0,
	0, 0, 0, 0, 0, 1553, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1534, 1542, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1529,
	0, 0, 0, 0, 0, 0, 0, 0, 1505, 1506,
	0, 1538, 1539, 1540, 1548, 1549, 1550, 0, 0, 0,
	0, 0, 0, 0, 0, 1546, 0, 1541, 1536, 0,
	1534, 0, 0, 0, 0, 1508, 0, 0, 0, 0,
	1554, 0, 0, 0, 0, 0, 0, 0, 1529, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1507, 0, 0, 0,
	0, 0, 0, 0, 1546, 1527, 0, 0, 0, 0,
	0, 0, 0, 1524, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1544, 0, 0, 1519, 1520, 1526, 1547, 1525, 1521, 0,
	1518, 1516, 1517, 1509, 1510, 1511, 1512, 1514, 1515, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1530, 1531, 1532, 1533, 0, 0, 0, 0,
	0, 0, 1513, 0, 2735, 0, 0, 2734, 0, 1544,
	0, 0, 1519, 1520, 1526, 1547, 1525, 1521, 0, 1518,
	1516, 1517, 1509, 1510, 1511, 1512, 1514, 1515, 0, 1545,
	0, 0, 1555, 0, 0, 0, 0, 1535, 1537, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1551, 0, 1552,
	0, 0, 0, 0, 2272, 0, 1522, 1523, 0, 0,
	0, 1505, 1506, 0, 1538, 1539, 1540, 1548, 1549, 1550,
	0, 0, 1543, 0, 0, 0, 0, 0, 0, 0,
	1541, 1536, 0, 1528, 0, 2271, 0, 0, 1508, 0,
	0, 0, 0, 1554, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1553, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1507,
	0, 0, 0, 0, 1542, 0, 0, 0, 1527, 0,
	0, 0, 0, 0, 0, 0, 1524, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1505, 1506, 0, 1538, 1539,
	1540, 1548, 1549, 1550, 0, 0, 0, 0, 0, 0,
	0, 0, 1534, 0, 1541, 1536, 0, 0, 0, 0,
	0, 0, 1508, 0, 0, 0, 0, 1554, 0, 0,
	1529, 0, 0, 0, 0, 1530, 1531, 1532, 1533, 0,
	0, 0, 0, 0, 0, 1513, 0, 0, 0, 0,
	0, 0, 0, 1507, 0, 0, 1546, 0, 0, 0,
	0, 0, 1527, 0, 0, 0, 0, 0, 0, 0,
	1524, 0, 1545, 0, 0, 1555, 0, 0, 0, 0,
	1535, 1537, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1551, 0, 1552, 0, 0, 0, 0, 0, 0, 1522,
	1523, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1543, 0, 0, 0, 1530,
	1531, 1532, 1533, 0, 0, 0, 1528, 0, 0, 1513,
	0, 1544, 0, 0, 1519, 1520, 1526, 1547, 1525, 1521,
	0, 1518, 1516, 1517, 1509, 1510, 1511, 1512, 1514, 1515,
	1553, 0, 0, 0, 0, 0, 1545, 0, 0, 1555,
	0, 0, 0, 0, 1535, 1537, 0, 1542, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1551, 0, 1552, 0, 0, 0,
	0, 0, 0, 1522, 1523, 0, 0, 0, 1505, 1506,
	0, 1538, 1539, 1540, 1548, 1549, 1550, 0, 0, 1543,
	0, 0, 0, 0, 0, 1534, 0, 1541, 1536, 0,
	1528, 0, 0, 0, 0, 1508, 0, 0, 0, 0,
	1554, 0, 0, 1529, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1553, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1507, 0, 0, 1546,
	0, 1542, 862, 0, 0, 1527, 0, 0, 0, 0,
	0, 0, 0, 1524, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1534,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1529, 0, 0,
	0, 0, 1530, 1531, 1532, 1533, 0, 0, 0, 0,
	0, 0, 1513, 0, 1544, 0, 0, 1519, 1520, 1526,
	1547, 1525, 1521, 1546, 1518, 1516, 1517, 1509, 1510, 1511,
	1512, 1514, 1515, 0, 0, 0, 0, 0, 0, 1545,
	0, 0, 1555, 0, 0, 0, 0, 1535, 1537, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1551, 0, 1552,
	0, 0, 0, 0, 0, 0, 1522, 1523, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1543, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1528, 0, 0, 0, 0, 1544, 0,
	0, 1519, 1520, 1526, 1547, 1525, 1521, 0, 1518, 1516,
	1517, 1509, 1510, 1511, 1512, 1514, 1515, 1553, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1542, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1505, 1506, 0, 1538, 1539, 1540, 1548, 1549, 1550, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1541,
	1536, 0, 1534, 0, 0, 0, 0, 1508, 0, 0,
	0, 0, 1554, 0, 0, 0, 0, 0, 0, 0,
	1529, 0, 0, 0, 0, 0, 0, 0, 0, 1505,
	1506, 0, 1538, 1539, 1540, 1548, 1549, 1550, 1507, 0,
	0, 0, 0, 0, 0, 0, 1546, 1527, 1541, 1536,
	0, 0, 0, 2736, 0, 1524, 1508, 0, 0, 0,
	0, 1554, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3032, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1507, 0, 0,
	0, 0, 0, 0, 0, 0, 1527, 0, 0, 0,
	0, 0, 0, 0, 1524, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1530, 1531, 1532, 1533, 0, 0,
	0, 0, 0, 0, 1513, 0, 0, 0, 0, 2741,
	0, 1544, 0, 0, 1519, 1520, 1526, 1547, 1525, 1521,
	0, 1518, 1516, 1517, 1509, 1510, 1511, 1512, 1514, 1515,
	0, 1545, 0, 0, 1555, 0, 0, 0, 0, 1535,
	1537, 0, 0, 1530, 1531, 1532, 1533, 0, 0, 0,
	0, 0, 0, 1513, 0, 0, 0, 0, 0, 1551,
	0, 1552, 0, 0, 0, 0, 0, 0, 1522, 1523,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1545, 0, 0, 1555, 1543, 0, 0, 0, 1535, 1537,
	0, 0, 0, 0, 0, 1528, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1551, 0,
	1552, 0, 0, 0, 0, 0, 0, 1522, 1523, 1553,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1543, 0, 0, 1542, 0, 0, 0,
	0, 0, 0, 0, 1528, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1553, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1534, 1542, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1529, 0, 0, 0, 0, 0, 0, 0,
	0, 1505, 1506, 0, 1538, 1539, 1540, 1548, 1549, 1550,
	0, 0, 0, 0, 0, 0, 0, 0, 1546, 0,
	1541, 1536, 0, 1534, 0, 0, 0, 0, 1508, 0,
	0, 0, 0, 1554, 0, 0, 0, 0, 0, 0,
	0, 1529, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1507,
	0, 0, 0, 0, 0, 0, 0, 1546, 1527, 0,
	0, 0, 0, 0, 0, 0, 1524, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1544, 0, 0, 1519, 1520, 1526, 1547,
	1525, 1521, 0, 1518, 1516, 1517, 1509, 1510, 1511, 1512,
	1514, 1515, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1530, 1531, 1532, 1533, 0,
	0, 0, 0, 0, 0, 1513, 0, 0, 0, 0,
	0, 0, 1544, 0, 0, 1519, 1520, 1526, 1547, 1525,
	1521, 0, 1518, 1516, 1517, 1509, 1510, 1511, 1512, 1514,
	1515, 0, 1545, 0, 0, 1555, 0, 0, 0, 0,
	1535, 1537, 0, 0, 0, 0, 0, 1505, 1506, 0,
	1538, 1539, 1540, 1548, 1549, 1550, 0, 0, 0, 0,
	1551, 0, 1552, 0, 0, 0, 1541, 1536, 0, 1522,
	1523, 2689, 0, 0, 1508, 0, 0, 0, 0, 1554,
	0, 0, 0, 0, 0, 1543, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1528, 0, 0, 0,
	0, 0, 0, 0, 0, 1507, 0, 0, 0, 0,
	0, 0, 0, 0, 1527, 0, 0, 0, 0, 0,
	1553, 0, 1524, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1542, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2703, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1505, 1506, 0,
	1538, 1539, 1540, 1548, 1549, 1550, 0, 0, 0, 0,
	0, 1530, 1531, 1532, 1533, 1534, 1541, 1536, 0, 0,
	0, 1513, 0, 0, 1508, 0, 0, 0, 0, 1554,
	0, 0, 0, 1529, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1545, 0,
	0, 1555, 0, 0, 0, 1507, 1535, 1537, 0, 1546,
	0, 0, 0, 0, 1527, 0, 0, 0, 0, 0,
	0, 0, 1524, 0, 0, 0, 1551, 0, 1552, 0,
	0, 0, 0, 0, 0, 1522, 1523, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1543, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1528, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1530, 1531, 1532, 1533, 0, 1553, 0, 0, 0,
	0, 1513, 0, 0, 1544, 0, 0, 1519, 1520, 1526,
	1547, 1525, 1521, 1542, 1518, 1516, 1517, 1509, 1510, 1511,
	1512, 1514, 1515, 0, 0, 0, 0, 0, 1545, 0,
	0, 1555, 0, 0, 0, 0, 1535, 1537, 0, 0,
	1505, 1506, 0, 1538, 1539, 1540, 1548, 1549, 1550, 0,
	0, 0, 0, 0, 0, 0, 1551, 0, 1552, 0,
	1536, 1534, 0, 0, 0, 1522, 1523, 1508, 0, 0,
	0, 0, 1554, 0, 0, 0, 0, 0, 0, 1529,
	0, 1543, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1528, 0, 0, 0, 0, 0, 1507, 0,
	0, 0, 0, 0, 0, 1546, 0, 1527, 0, 0,
	0, 0, 0, 0, 0, 1524, 1553, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1542, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1505, 1506, 0, 1538, 1539, 1540, 1548, 1549, 1550, 0,
	0, 0, 0, 0, 1530, 1531, 1532, 1533, 0, 0,
	1536, 1534, 0, 0, 1513, 0, 0, 1508, 0, 0,
	1544, 0, 1554, 1519, 1520, 1526, 1547, 1525, 1521, 1529,
	1518, 1516, 1517, 1509, 1510, 1511, 1512, 1514, 1515, 0,
	0, 1545, 0, 0, 1555, 0, 0, 0, 1507, 1535,
	1537, 0, 0, 0, 0, 1546, 0, 1527, 0, 0,
	0, 0, 0, 0, 0, 1524, 0, 0, 0, 1551,
	0, 1552, 0, 0, 0, 0, 0, 0, 1522, 1523,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1543, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1528, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1530, 1531, 1532, 1533, 0, 1553,
	0, 0, 0, 0, 1513, 0, 0, 0, 0, 0,
	1544, 0, 0, 1519, 1520, 1526, 1547, 1525, 1521, 0,
	1518, 1516, 1517, 1509, 1510, 1511, 1512, 1514, 1515, 0,
	0, 1545, 0, 0, 1555, 0, 0, 0, 0, 1535,
	1537, 0, 0, 0, 0, 0, 0, 770, 0, 806,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1534, 0, 0, 0, 1522, 1523,
	0, 777, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1529, 0, 1543, 789, 775, 0, 0, 0,
	0, 0, 0, 0, 0, 1528, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1546, 0,
	0, 0, 776, 0, 0, 0, 0, 779, 0, 0,
	0, 812, 0, 0, 0, 0, 0, 0, 0, 786,
	787, 0, 0, 0, 0, 799, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 807,
	781, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 805, 0,
	0, 0, 0, 0, 1534, 1728, 0, 0, 0, 0,
	0, 0, 0, 1544, 0, 0, 1519, 1520, 1526, 1547,
	1525, 1521, 1529, 1518, 1516, 1517, 1509, 1510, 1511, 1512,
	1514, 1515, 0, 782, 0, 0, 0, 0, 0, 0,
	0, 774, 0, 0, 0, 1745, 1722, 1729, 1546, 1712,
	1755, 1754, 0, 0, 0, 1714, 1713, 783, 784, 0,
	0, 0, 0, 1767, 1768, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 791,
	790, 0, 0, 0, 0, 0, 0, 785, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 811, 0, 0, 1756, 0, 1752,
	1751, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1750, 0, 808, 0, 0, 0, 0, 0,
	0, 0, 0, 1544, 0, 0, 1519, 1520, 1526, 1547,
	1525, 1521, 0, 1518, 1516, 1517, 1509, 1510, 1511, 1512,
	1514, 1515, 0, 1749, 1747, 1748, 0, 0, 0, 0,
	0, 0, 0, 0, 1761, 1762, 780, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 778, 651, 0, 0, 803, 804, 0,
	1724, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1738, 1727, 1740, 1742, 1743, 1744, 1739, 652, 1732, 0,
	0, 0, 0, 801, 0, 0, 0, 0, 1763, 1764,
	797, 0, 0, 794, 0, 0, 0, 0, 0, 795,
	0, 0, 0, 0, 0, 0, 772, 0, 809, 0,
	0, 0, 653, 671, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 773, 0, 0, 0, 0, 1716,
	0, 0, 0, 0, 796, 0, 654, 0, 793, 655,
	0, 0, 0, 0, 0, 0, 1753, 810, 0, 0,
	1725, 0, 1726, 0, 0, 798, 678, 0, 0, 0,
	0, 0, 656, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 676, 0, 0, 0, 800, 0, 0, 1710,
	1711, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 657, 0, 0, 0, 0, 1746, 0, 802, 0,
	1735, 1733, 1734, 1737, 1736, 0, 0, 0, 0, 0,
	0, 658, 0, 0, 659, 0, 0, 0, 680, 0,
	0, 0, 623, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1717, 1718, 1720, 1721,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1741, 1719, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1766, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1715, 0, 0, 1757, 1758, 1759, 1760, 0, 0, 0,
	0, 679, 0, 0, 0, 0, 0, 0, 0, 0,
	662, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1723, 0, 0, 0, 0, 1730,
	1765, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 660,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 663,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 664, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 622,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 672,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 665, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 670, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 666, 0, 0, 683, 0, 682, 0,
	0, 667, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 668, 0, 0, 0, 0, 675,
	0, 0, 0, 0, 684, 0, 681, 0, 0, 0,
	0, 0, 624,
}
var sqlPact = [...]int{

	429, -1000, -1000, -1000, -1000, -1000, -1000, 171, 170, 167,
	160, 159, 158, 157, 156, -1000, -1000, -1000, -1000, -1000,
	-1000, 155, -1000, -1000, 154, -1000, 153, 149, 147, 143,
	-1000, 142, 140, 139, -1000, -1000, -1000, -1000, 136, 135,
	134, 61765, 1878, 75253, 65345, 1560, 56365, 74801, 55913, 74349,
	73897, 119, -1000, 73445, 114, 113, 112, -1000, 72993, -1000,
	1578, -1000, 111, 3773, 46845, 110, 109, 108, 1874, 106,
	-1000, 105, -1000, 87042, 1308, -1000, 104, -1000, 8623, 4366,
	64447, 2291, 102, 101, 46392, 2285, 2312, -1000, -1000, 1697,
	-1000, -1000, 100, 99, 98, 95, 94, 93, 92, 91,
	90, -1000, 89, 88, 87, 84, 83, 82, 81, -1000,
	80, 75, 74, 73, 70, 69, 67, 66, 64, 63,
	61, 60, -1000, 86725, 1573, 1448, 1440, 1434, 1433, 1429,
	874, 56, 53, 49, 48, 46, 45, 43, -1000, 41,
	39, 36, 35, 33, -1000, 27, 25, 121, 21, 17,
	16, 15, 12, 1867, -1000, 1351, 994, 22508, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 80159, 75699, 11, -52, 10, -1000, 2610, 759, 38696,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	455, -1000, -1000, -1000, 218, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1597, 709, -1000, -1000, -1000, 72547, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1873, -1, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 708, -1000, 1871, 282, 1777, -1000,
	-1000, -1000, -1000, -1000, 75699, -1000, -1000, 2908, 2907, 1710,
	707, 72101, -1000, 1291, -1000, 827, 25370, -1000, 1062, -1000,
	25370, 216, -1000, -1000, -1000, -1000, -1000, -1000, 2906, 2905,
	2902, 2901, -1000, -1000, 55461, 16752, 55009, 54557, 71649, 16290,
	61319, 50509, -1000, -1000, -1000, 41426, 1123, -1000, -1000, -1000,
	-1000, -1000, -28, 51415, 75699, -1000, 214, -1000, -1000, -1000,
	-1000, -1000, -1000, 32152, 855, 31665, 584, 31178, 365, -1000,
	-1000, -1000, 2900, 2899, 1003, 2897, 2540, 79713, 1500, 2896,
	1504, 1083, 898, 2895, 2894, 2893, 2892, 2888, 2884, 1186,
	71197, 2346, 70745, 1470, 50047, 61765, 61765, 2120, 70293, 1196,
	1154, -1000, -1000, -1000, -1000, 2437, 2311, 2308, 43690, -1000,
	2883, 2881, 2876, 2875, 2874, 79267, 1484, 2873, 2030, 2872,
	2869, 2867, 2864, 2863, 2862, 2860, 2859, 2858, -1000, 60867,
	60415, 59963, 2663, 69841, 49585, -1000, -1000, -1000, 40500, 6594,
	6175, 69389, 41886, 61765, 61765, -1000, -1000, 32627, 79, -1000,
	-1000, -1000, 41426, 2284, -1000, 32627, 79, -1000, 75699, -1000,
	2338, 1630, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1877, 1402, 2760, 49123, 1715, 1215, 2620, 2415,
	2394, 1294, 2109, 2393, 2385, 2375, 2369, 2361, 1415, 2071,
	332, 22021, 1299, 1326, 2358, 2357, 2768, 1661, 1782, 54105,
	2857, 2856, 2583, 2355, 2352, 2283, -1000, -1000, -1000, -1000,
	1264, -1000, -1000, 57257, -1000, -1000, 1074, -1000, -1000, 1074,
	-1000, -1000, -1000, -1000, -1000, 1116, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1351, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1859, -1000, 1665, -1000, -1000, 2040, 2589,
	2589, 2589, 2650, 430, 424, -1000, 121, -1000, -1000, 86226,
	-1000, -1000, 32627, 32627, 32627, 32627, 32627, 1683, -1000, 706,
	-1000, -1000, 731, -1000, 705, 520, -1000, -1000, -1000, -1000,
	-1000, -1000, 704, 2771, -1000, -1000, -1000, -1000, -1000, 2733,
	-1000, 19111, -1000, -1000, -1000, 389, 701, 32627, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 907, -1000, 213, 809, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 565, 1596, 562, 562, 562, -1000, -1000, 892, -1000,
	-1000, -1000, 333, 560, 318, 559, 558, 554, -1000, -1000,
	-1000, -1000, 2332, 700, 699, -1000, 694, 690, 687, 685,
	684, -1000, -1000, -1000, 680, 675, 662, 658, 641, 638,
	637, 626, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	891, -1000, 625, 623, 619, 618, 616, 606, 605, 604,
	600, -1000, -1000, -29, 75699, -1000, 455, -29, -1000, -1000,
	598, -1000, 25845, 25845, 25845, -1000, -1000, 1870, 32627, -1000,
	1960, -1000, -17, -17, 799, 39596, -1000, 37792, 799, 279,
	737, 43238, -1000, 2276, -1000, -1000, 596, 209, -1000, -1000,
	2274, 75699, 17212, 75699, 61765, 61765, 61765, 2499, 32627, -1000,
	-1000, 48661, 75699, 62211, 2700, 86861, 48661, 75699, 2331, -1000,
	-1000, -1000, 75699, -1000, 32627, -1000, 2699, 1232, 51865, 2672,
	-40, -1000, -1000, -1000, -1000, -1000, -1000, 2003, 2038, 1022,
	1894, 1564, -1000, 25370, 2531, -1000, -1000, -1000, 204, 17212,
	-1000, -1000, -1000, -1000, -1000, 1713, 2477, 1159, -1000, 1888,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1554,
	2476, -1000, 2105, 2472, 1551, -1000, -1000, 1793, -1000, -1000,
	2567, -1000, -1000, 1423, 2466, -16, -1000, -1000, 861, 2465,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 476,
	-1000, 50969, 41426, 51415, -34, -1000, -1000, -45, -1000, 15828,
	86226, -1000, -1000, -1000, 86226, 726, -1000, -1000, 2461, -1000,
	86226, 636, -1000, -1000, 2457, -1000, -1000, -1000, 2855, -1000,
	2853, 1958, 2850, 2849, 2848, -1000, 1387, 1584, 2846, -1000,
	2845, -1000, -1000, -1000, -1000, -1000, -1000, 59511, 1869, -1000,
	-1000, 58607, -1000, 1957, -1000, -1000, 59059, 897, -1000, 861,
	1956, -1000, 881, -1000, 2844, 2658, 2140, 861, 1950, -1000,
	-1000, -1000, -1000, -1000, 44590, -1000, 44590, -1000, 44590, -1000,
	1340, -1000, 78821, -17, -17, 2733, -1000, -1000, -1000, -1000,
	-1000, 2443, 2843, 2842, 2841, -1000, 75699, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 189, 2442, -1000, -1000,
	189, 2439, -1000, 189, 2435, -1000, 63995, -1000, -1000, 1797,
	2434, -1000, -47, 2431, -1000, -1000, -53, -1000, -1000, -1000,
	759, -1000, 40048, -1000, 40048, 68937, 50969, 834, 692, 45940,
	86226, -1000, -74, -1000, 41426, 86226, -1000, 50969, 58607, -1000,
	68485, 58161, -1000, -1000, 1181, 2058, -1000, -1000, -1000, 834,
	50969, 50969, 50969, -1000, 68033, -1000, -1000, 1669, 1401, 2573,
	1657, 61765, -1000, 1571, -1000, -1000, -1000, 2602, 2329, -1000,
	48211, 63549, -1000, 63103, -1000, 62657, -1000, 61765, -1000, 61765,
	-1000, 2840, 2839, 2838, -1000, 2837, 2597, 86226, 2596, -1000,
	2454, 1446, 1438, 75699, -1000, -1000, 75699, -1000, 75699, -1000,
	-1000, -1000, -1000, -1000, 2002, -1000, -1000, -1000, -1000, 61765,
	-1000, -1000, -1000, -1000, -1000, -1000, 2328, -1000, 1439, -1000,
	1495, -1000, 1169, -1000, -1000, 191, -1000, -1000, -40, -1000,
	78375, -1000, 2040, -1000, 75699, -1000, 2019, 2313, 2326, 1342,
	1872, 2091, -1000, 30691, 2079, 35002, 1886, 121, -1000, -1000,
	121, 121, 24895, -1000, -1000, 86861, 86861, 17212, 1135, 32627,
	32627, 32627, 32627, 32627, 32627, 32627, 32627, 32627, 32627, 32627,
	32627, 32627, 32627, 32627, 32627, 32627, 32627, 32627, 32627, 32627,
	32627, 32627, 32627, 32627, 32627, 32627, 32627, 32627, 32627, 32627,
	32627, 32627, 32627, 32627, 1765, 32627, 1112, 32627, 32627, 32627,
	32627, 1990, -1000, -1000, 1611, 472, 1734, -1000, 2739, 2739,
	2739, 86409, 86409, 469, 2835, 731, -1000, 32627, -1000, 79,
	32627, 17674, -1000, -1000, -1000, 424, 9866, 1934, -1000, 421,
	18161, -1000, -1000, -1000, 19111, 520, 30204, 32627, 882, 86226,
	1129, 2750, 15368, 2298, 2174, -1000, 2761, -1000, -1000, 2750,
	-1000, -1000, -1000, -1000, 2750, 1134, 1132, 2750, -1000, 2750,
	2750, 2014, 2014, 595, 697, 688, 21534, 21047, 20560, 20073,
	495, 32627, 32627, 32627, 32627, 32627, 32627, 32627, 32627, -1000,
	29729, 29242, 28755, 35477, 28268, 32627, 19586, 27781, 27294, 75699,
	-29, 2698, 32627, 273, -1000, 84960, -1000, 273, 273, 594,
	-55, 86226, 2075, 2075, 39146, 1906, 1716, 1716, 1716, -1000,
	799, 11662, 799, 67137, 1736, 799, 799, 200, 233, 419,
	37342, 1960, 67137, 718, 590, 9, 3, 2, -1000, -1000,
	0, -11, -1000, -1000, 61765, 583, 17674, 17212, 1228, -56,
	196, 2085, 2080, 2070, -1000, 2049, 1413, -61, 1108, -66,
	-1000, 4499, -63, -1000, 1171, -1000, -1000, -1000, -1000, -1000,
	2834, 2833, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 886,
	582, 573, 845, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 565,
	1596, 562, 562, 562, -1000, -1000, -1000, 333, 560, 318,
	559, 558, 554, -1000, -1000, -1000, -1000, -1000, -1000, 2272,
	-45, 62211, 812, -64, 1014, -40, -1000, -1000, -1000, 51865,
	1074, -1000, 1383, -1000, -1000, -1000, -1000, -1000, -1000, 1236,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 907, -1000, -1000,
	-1000, -1000, -1000, -1000, 2748, 2746, -33, -1000, -1000, 17212,
	-1000, -42, 1467, -1000, 53653, 1926, 2588, 2553, 1336, -1000,
	1265, 2649, 57257, 2676, 2684, 767, -1000, 2271, -1000, -1000,
	823, 1426, 1104, 57257, 2105, -1000, 86861, -1000, 2142, 2648,
	1225, 1231, 1225, 1225, 1219, -1000, 57257, 1103, -1000, 1102,
	-1000, -43, 2675, 2683, 585, -1000, 2249, 1101, -1000, -1000,
	61765, 17212, -1000, 1370, -1000, 50969, 2113, -1000, -77, 476,
	-34, 51415, 75699, 195, -1000, 32627, 79, 32627, 79, -1000,
	-1000, 2429, -1000, -1000, -1000, 2832, 1558, 2029, -1000, -1000,
	-1000, 552, 1948, 2242, 75699, 2090, -37, 61765, -1000, 2427,
	2105, 1947, -1000, -1000, 57709, -1000, 2426, 561, 2831, -1000,
	77929, -1000, 2591, 1156, 2425, 958, 369, 2696, -1000, 369,
	45040, -1000, 75699, -1000, -1000, 75699, -1000, -1000, -1000, 2830,
	-1000, 61765, -1000, -1000, 61765, -1000, 61765, -1000, 61765, 187,
	2418, -1000, -1000, 75699, 50969, 50969, 5037, 52761, -79, -80,
	416, -1000, 67587, 75699, 953, 53207, 75699, 2521, 834, 41426,
	-74, 834, 834, 476, -1000, 476, -1000, 61765, 2321, -1000,
	834, 834, 834, -1000, -1000, -1000, -1000, 2829, 2828, -1000,
	-1000, -1000, 857, 61765, 75699, 61765, -1000, -1000, 75699, -1000,
	75699, -1000, 857, 75699, 857, 75699, 857, 75699, -1000, -1000,
	-1000, -1000, -1000, -1000, 79, 32627, 1366, -1000, 2320, -1000,
	2319, -1000, 19, -1000, -1000, -1000, -1000, 1577, 61765, 61765,
	61765, 61765, 75699, 61765, -1000, 57257, -1000, 2019, 2313, -1000,
	-1000, -1000, -1000, -1000, -1000, 1165, 1818, -1000, 2053, -1000,
	1281, -1000, -1000, -1000, 86226, 35952, -1000, -1000, 86226, 1404,
	-1000, 34527, 34052, -1000, -1000, 1444, 61765, 2094, -1000, 2094,
	-36, -1000, 84445, 2046, 61765, -1000, -1000, -1000, -1000, -1000,
	820, 1130, 1130, 1088, 1088, 1088, 1088, 2678, 449, 4511,
	3898, 3958, 3958, 4991, 4991, 4991, 4991, 4991, 3958, 992,
	536, 536, 992, 992, 992, 992, 992, 536, 536, 536,
	3958, 3958, 3958, 86409, 5474, 6876, 32627, 32627, 1097, 1608,
	472, 6315, 32627, 9140, 9140, 9140, 9140, -1000, 1456, -1000,
	-1000, -1000, -1000, 2229, 551, 35477, 35477, -1000, -1000, -1000,
	-1000, 18636, 32627, -1000, -1000, -1000, -1000, 26807, -1000, -1000,
	83924, -253, 414, -143, -6, -1000, 32627, 32627, 32627, 405,
	-1000, 186, 32627, 75699, -1000, 81140, 715, -107, -1000, -82,
	1206, -1000, 32627, -1000, -1000, 1096, -1000, 1095, 1094, 1086,
	-1000, 550, 404, -1000, 182, -1000, 1699, 549, 548, 402,
	-85, 401, 817, 806, 397, 395, 394, -87, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -88, 32627, -1000, -1000,
	-1000, -1000, -1000, 83875, -1000, -1000, 83842, -1000, -1000, 83368,
	-1000, -1000, 83319, -1000, -1000, -1000, 86106, 81091, 81058, 11132,
	9500, 11083, 10709, -93, 392, -1000, 2220, -143, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 391, -1000, 390, -1000,
	85920, -143, 387, 6395, -1000, 35477, 35477, 35477, -1000, 383,
	-1000, 84747, -1000, 85618, 26332, 26332, 26332, 382, 85569, 32627,
	-143, -94, -1000, -101, -1000, -1000, 547, -102, 877, 25845,
	38244, 17212, -1000, 877, 877, 32627, -1000, 32627, 2066, -1000,
	-1000, -1000, 2065, 1545, 2075, 39146, -1000, -1000, -1000, -1000,
	67137, -1000, 2733, 2172, -1000, 67137, -1000, -1000, 75699, 455,
	-1000, 67137, 67137, 17212, 799, -1000, 799, 67137, 664, -1000,
	-1000, -1000, -1000, -1000, 372, 42336, -6, 178, 834, -1000,
	17212, 2183, 2183, 2183, 2183, -1000, -1000, 75699, 2714, -1000,
	1603, -1000, 86861, -1000, 729, 973, -1000, -1000, 541, -1000,
	2750, 2750, -1000, 2750, 75699, 217, 25370, -1000, 1074, -1000,
	-1000, 1345, -1000, 1582, -1000, 1131, -1000, -1000, -1000, -1000,
	25370, -1000, 1619, 75699, 75699, 61765, -1000, -1000, 1946, 77483,
	1941, 86861, 75699, -1000, -1000, 540, 538, 2044, 2043, 941,
	75699, 75699, 2042, 77037, 76591, 75699, 1650, 32627, 1868, 1594,
	79, 79, -1000, -1000, 79, 535, 1139, 61765, 61765, 61765,
	1528, -1000, -1000, -1000, -1000, -1000, 56811, -1000, -1000, 2759,
	2758, -1000, 1225, -1000, -1000, -1000, 1225, 2105, 1510, 61765,
	75699, 1615, 79, 79, -1000, -1000, 79, 534, 17212, 1556,
	-1000, 1370, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 47765,
	968, 861, 834, 2219, -1000, 2113, -1000, -1000, 14908, 86226,
	-1000, 86226, -1000, 75699, -1000, 895, 75699, 53207, 851, 2416,
	44140, -45, 834, 50969, 61765, -37, 75699, -1000, 2105, 2414,
	455, 1938, -1000, -1000, 50969, 2827, 526, 2826, -1000, 1866,
	1937, -1000, -1000, 76145, 2399, 756, 75699, 877, 39146, 1632,
	-1000, 42788, 922, 75699, 1501, 123, -1000, -1000, -1000, 8,
	75699, -1000, 2824, -1000, -1000, 189, 189, 189, -1000, 61765,
	61765, 1797, -1000, -47, -1000, -1000, 5037, 5037, 834, -38,
	524, -1000, 790, 789, 40966, 50969, -104, -1000, -1000, -1000,
	-1000, -1000, 61765, 75699, 568, 2133, 75699, -111, -1000, 175,
	522, -1000, -1000, 834, 2216, -1000, -1000, 870, -1000, 1151,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -18,
	-45, -45, -1000, 857, -1000, 857, -1000, 857, -1000, 86226,
	-1000, 1359, 1354, 75699, -1000, 17212, 75699, 61765, 17212, 61765,
	2309, 2306, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	978, -1000, 1404, 1790, -1000, 520, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1992, -1000, -39, 24895, 1899,
	-1000, -1000, 61765, -21, 32627, 32627, 5946, 5638, 32627, 35477,
	35477, -1000, 32627, 4565, -1000, -1000, -1000, -1000, -1000, 2215,
	519, 32627, 86861, 6352, 4673, -1000, 371, 10471, 992, -1000,
	32627, -1000, 366, 24420, -1000, 85054, -7, -112, -1000, 12134,
	-143, -117, -1000, -1000, 725, -1000, 2485, -1000, 32627, 85267,
	1978, 1759, 1498, 1378, 2750, 2770, 14448, -1000, 45490, 880,
	1742, -1000, -1000, 2750, 803, -1000, -1000, -1000, 803, -1000,
	-1000, 2750, -1000, 2750, 83286, -1000, -1000, -1000, -1000, 86861,
	86861, 32627, 32627, -1000, 32627, 32627, 32627, -1000, -1000, 32627,
	-1000, -1000, 2214, 32627, -1000, 86861, 86861, 35477, 35477, 35477,
	35477, 35477, 35477, 35477, 35477, 35477, 35477, 35477, 35477, 35477,
	35477, 35477, 35477, 35477, 35477, 35477, 2041, 35477, 2732, 2732,
	2732, -1000, 2289, 2214, 32627, 32627, 86861, 359, 356, 346,
	-1000, 32627, -143, -1000, -1000, 5037, -1000, 2173, -1000, 32627,
	-1000, -110, -1000, 1960, -1000, -1000, 2173, 2173, -118, 86226,
	39146, 39146, -1000, 516, 32627, 2061, -1000, -1000, 713, -255,
	-1000, 785, -1000, -1000, -1000, -1000, -1000, 455, -1000, -1000,
	-1000, 174, 67137, 67137, 712, -1000, -123, -1000, -1000, -125,
	-1000, 2695, 345, 17212, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -45, 1775, 2769, -1000, 2757, 724, 711, 2750,
	341, 340, 337, -45, 75699, -1000, -40, -1000, -1000, -1000,
	32627, -1000, -1000, 2587, 1066, 1049, -1000, 2413, -1000, 1935,
	-1000, 910, -1000, 1485, -1000, 32627, 32627, 515, 514, 2819,
	1548, 2817, 942, 2412, 1797, 2411, 1797, -1000, -1000, 814,
	-1000, 86226, 513, 512, -1000, -42, 1416, 869, -1000, -1000,
	32627, 32627, 66691, -1000, 377, 2567, -24, -1000, 1048, -1000,
	-1000, -1000, -1000, 2105, 1047, -1000, -1000, -1000, 864, -1000,
	-1000, 32627, -1000, -43, 1046, -1000, -1000, -1000, 47305, -1000,
	-1000, 50969, 834, -1000, 2811, 2807, 2806, 323, -126, -44,
	86861, 2694, 1861, 533, 61765, 804, -1000, 2733, -1000, -1000,
	-1000, -1000, 61765, 2692, 2409, 861, -1000, 2804, -1000, 61765,
	2401, 1865, 1933, 2011, 756, 52315, -1000, 861, 1742, -51,
	-1000, 1501, 23933, 2556, -132, -1000, -1000, -1000, 877, 45040,
	39146, 32627, 2803, -133, -1000, -1000, -1000, -1000, -1000, 187,
	-1000, -1000, -1000, -1000, 66245, 66245, 50969, 50969, 50969, 834,
	75699, 75699, 53207, 2799, 509, 75699, 75699, 508, -1000, 75699,
	75699, 2798, 50969, -1000, 79, -1000, 1773, 61765, 13988, -1000,
	-1000, -1000, -1000, -1000, 857, -1000, -1000, 1631, 1880, 1631,
	1460, 1455, -1000, 1789, -1000, -1000, -1000, -1000, 2106, 2581,
	17212, 2680, 9140, 32627, 32627, 274, 639, 497, 9140, 32627,
	32627, 86861, 86529, -134, 32627, 32627, -1000, 32627, 665, 86226,
	2766, 32627, 314, 312, -1000, -1000, -1000, 2740, -1000, -1000,
	-1000, 86226, 32627, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	309, -1000, 173, -1000, -1000, -1000, 80605, -1000, 32627, 308,
	294, -1000, -1000, 293, 288, -1000, 270, 260, 10169, 7906,
	82812, 82763, 82730, 86226, 2289, 86226, -1000, -1000, 674, 674,
	1208, 1208, 1208, 1208, 2732, 360, 384, 656, 1017, 1017,
	1017, 1148, 456, 456, 1017, 1017, 1017, 2201, 2031, 507,
	7092, -1000, -1000, 86226, 86226, 251, -1000, -1000, -1000, -143,
	248, 2168, 2647, 86226, -1000, 39146, 2168, 2168, -1000, -1000,
	1545, 75699, 86226, 39146, -1000, 2172, -1000, 12604, -1000, 17212,
	-1000, -1000, -1000, -1000, 2733, -1000, 42336, -1000, 505, -1000,
	124, -1000, -1000, 640, 2797, 723, 243, -1000, -1000, -1000,
	-45, 86226, 75699, 75699, 75699, 2400, -1000, 3052, -1000, 941,
	82256, -140, -1000, 84445, 32627, 75699, -1000, -1000, 1533, 2101,
	990, -1000, 2605, 75699, -1000, 75699, -1000, -1000, 75699, 75699,
	61765, 2377, -141, 86226, -46, -1000, 779, -1000, 1221, -1000,
	13528, 61765, 61765, 2333, -142, 17212, -1000, -1000, -47, -1000,
	-1000, -1000, -1000, 2121, -1000, 64893, 1816, 79, -1000, 65795,
	2790, 504, -1000, 1752, -1000, 498, 2105, 79, 61765, -1000,
	-1000, 930, 17212, 61765, 2398, 2015, 756, 52315, -1000, 1156,
	2091, -1000, -48, -1000, 423, 79, 1742, -1000, -51, 86226,
	-1000, 771, -1000, -1000, -147, -1000, -1000, 242, -1000, 2520,
	2519, -1000, -1000, 32627, 503, 502, 75699, 2517, -1000, -1000,
	-149, -1000, 1923, -1000, -1000, -1000, -1000, -1000, 17212, 1384,
	-1000, 499, 494, -1000, -1000, -1000, -1000, 2581, 9140, 9140,
	32627, 32627, 32627, 9140, 86529, -156, -1000, 9140, 9140, -143,
	-1000, -1000, 85054, -1000, -1000, -1000, 86226, -1000, 13068, 1638,
	-1000, 82207, -1000, -1000, -1000, -1000, -1000, -1000, 32627, 32627,
	-1000, -1000, -1000, -1000, -1000, 35477, 2190, 484, 86861, -1000,
	-1000, 844, 32627, 32627, 1960, 844, 844, -1000, -158, -1000,
	-1000, -1000, 2733, 124, -1000, -1000, 2788, 17212, 717, -1000,
	2786, -1000, -1000, -1000, -1000, 75699, -1000, 75699, -1000, 17212,
	75699, 2194, 1913, -1000, -1000, 2039, 482, 35477, 61765, 716,
	2207, 1576, 32627, 1899, -159, -161, 1911, -1000, -1000, 1910,
	32627, -1000, 86861, 477, 1797, 1797, -164, -166, -1000, 32627,
	1040, 75699, 23458, -1000, 2784, 2567, -1000, -1000, 32627, 1037,
	-1000, 1615, 2149, -1000, -1000, -1000, -1000, 2035, -1000, -1000,
	75699, 2022, 842, -167, -1000, 762, 761, -1000, 53207, 851,
	843, -1000, -1000, -1000, 455, 474, 75699, 1863, 473, 17212,
	-1000, 756, 52315, -1000, 2399, 1501, -1000, 2495, 75699, 2551,
	-1000, 2091, 472, -1000, 834, 471, 470, -169, 32627, 32627,
	-172, 468, 834, -73, -1000, 702, 695, -1000, -1000, 61765,
	61765, 32627, 32627, -1000, 9140, 9140, 9140, -1000, 229, -1000,
	-1000, 1742, 2642, -1000, 82174, 81700, 884, 35477, 86861, -174,
	-1000, 75699, 86226, -143, -1000, -1000, -1000, 425, -1000, 2783,
	-1000, -1000, 1733, -1000, -1000, -1000, 75699, 1925, -1000, 936,
	32627, 7092, 467, 32627, -1000, -1000, 2119, 2232, 2121, 465,
	-1000, -1000, -1000, -1000, -1000, 929, 1572, -1000, -1000, 86226,
	2611, 32627, -1000, -1000, 464, 463, 86226, 462, 752, 2189,
	-1000, -1000, -1000, 86226, 459, 851, -1000, 1653, 1816, 458,
	-1000, -1000, 1794, 2126, -1000, 65795, 36412, 36412, 222, 2690,
	843, -1000, 2743, -1000, 2685, 32627, -1000, 61765, 32627, 1860,
	52315, -1000, 2011, -1000, 1142, -177, 75699, 1501, -1000, -1000,
	50969, 50969, 929, -180, -183, -1000, 50969, -1000, 1923, -1000,
	75699, -1000, 75699, -1000, -1000, -185, -188, -1000, 1753, 32627,
	-1000, -1000, 884, -190, -1000, -128, -1000, 2682, -1000, -1000,
	-1000, -1000, 2384, 2164, 81651, 1986, 75699, 81618, 2225, -1000,
	-1000, 1615, 75699, 2121, 2161, 61765, 932, 17212, -191, 1631,
	1631, 32627, 22983, 1644, 32627, 1794, 61765, 75699, -1000, 2594,
	-1000, 2516, -1000, -1000, -1000, 2121, 79, -1000, -1000, 79,
	-196, 930, -197, 61765, -1000, 2015, 1310, -1000, 877, -1000,
	-1000, -198, -199, 1576, 929, -1000, -211, -1000, -213, -216,
	-1000, -1000, 1, 33577, 33577, 33577, -143, -1000, 75699, 457,
	2325, 856, -1000, 1846, 1508, -5, 944, -1000, -1000, 2207,
	-218, -1000, 854, 455, -1000, 32627, -1000, 929, -221, -1000,
	921, -223, -1000, 903, -224, -1000, 2187, -1000, -226, -1000,
	454, -229, -1000, -1000, 1798, -1000, 1615, 842, -1000, 929,
	446, 1576, 437, -1000, 45040, -1000, 834, 834, 2121, 1576,
	834, -1000, -1000, -1000, 2395, -1000, 36872, 1796, 1453, 84396,
	2395, 2395, -1000, -1000, 75699, 2661, -1000, 1853, 1851, 1295,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2659, 1986,
	86226, 2121, -1000, 1631, 2148, -1000, 1631, 2182, -1000, 1643,
	-1000, 75699, -1000, 75699, 1412, 1395, 2780, 851, 1794, 1576,
	32627, 2121, 32627, -212, -1000, -1000, 1615, 2121, -1000, -1000,
	1471, 2706, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	749, -1000, 2503, -1000, 972, 1838, 1838, 741, 1846, -1000,
	-1000, 435, -1000, 434, -1000, -234, -1000, -1000, 2776, -1000,
	1794, -1000, 2121, -235, 1615, -236, -1000, -1000, 1615, 1441,
	-1000, -1000, 1725, 33102, 32627, -1000, 2717, -1000, -1000, 2064,
	-1000, 32627, 2207, 32627, 32627, 1792, -1000, -1000, 1615, 929,
	875, 1576, -1000, -1000, -1000, -1000, 86226, -1000, -1000, -1000,
	86226, -1000, -237, -243, -1000, -1000, -1000, 875, 1576, -1000,
	2775, 2121, 1615, 1036, -1000, 2121, -1000, 1615, -1000, 433,
	1615, 875, 32627, 875, -1000, -245, -1000, 1615, -1000,
}
var sqlPgo = [...]int{

	0, 3437, 3435, 3433, 3432, 3430, 3428, 3427, 3426, 3424,
	3421, 3417, 3415, 3408, 3406, 3405, 3404, 3403, 3401, 3400,
	3398, 3396, 3395, 3393, 3390, 3389, 3386, 3385, 3383, 3382,
	3381, 3379, 3378, 3377, 3376, 3371, 3370, 3369, 3368, 3366,
	3365, 3364, 3363, 3361, 3355, 3354, 3353, 33, 3352, 3351,
	3350, 3342, 3339, 3337, 3335, 3334, 3333, 3331, 3329, 3326,
	3325, 3322, 3321, 3319, 3318, 40, 3315, 229, 3314, 3312,
	3309, 3308, 3306, 3303, 3302, 3298, 3297, 228, 3296, 124,
	3295, 3293, 3291, 3290, 3288, 227, 3287, 3284, 3279, 3278,
	3277, 3276, 3274, 3273, 164, 200, 3271, 176, 3267, 3266,
	3264, 3263, 3262, 3260, 3256, 3254, 3250, 3245, 201, 3244,
	224, 3241, 3239, 3238, 3235, 3231, 3230, 3224, 3223, 3221,
	3217, 3216, 3208, 3207, 3206, 3201, 3199, 3198, 3197, 3188,
	3187, 3185, 3184, 3178, 3177, 3176, 3175, 3174, 3173, 234,
	149, 3168, 3167, 223, 215, 3165, 3163, 3161, 3160, 137,
	106, 99, 107, 3159, 96, 52, 3158, 12, 141, 193,
	6128, 191, 3155, 3153, 3152, 216, 157, 3150, 194, 3149,
	3148, 3147, 3146, 75, 64, 144, 146, 140, 136, 78,
	3141, 3140, 74, 55, 34, 32, 3139, 3138, 3137, 2634,
	95, 3134, 221, 196, 131, 3133, 3132, 3131, 1152, 3130,
	3129, 225, 62, 104, 46, 98, 3128, 112, 20, 3127,
	154, 56, 3126, 129, 68, 35, 6655, 6003, 3125, 102,
	237, 90, 82, 175, 174, 134, 172, 171, 145, 475,
	3124, 206, 3123, 72, 132, 3122, 3119, 3116, 58, 158,
	84, 3114, 4, 5, 2, 231, 13, 94, 15, 3113,
	14, 3111, 3109, 3089, 3088, 26, 139, 3086, 116, 77,
	3085, 17, 3083, 23, 168, 3082, 190, 100, 3081, 3079,
	213, 165, 160, 3078, 18, 189, 3077, 3076, 3074, 3073,
	3072, 111, 24, 103, 3068, 3059, 110, 197, 159, 3054,
	37, 3053, 142, 76, 135, 232, 130, 178, 91, 184,
	148, 185, 3052, 3051, 3050, 195, 3049, 3048, 179, 133,
	3046, 3045, 169, 233, 30, 60, 188, 61, 153, 125,
	3040, 163, 3039, 3038, 3037, 235, 147, 177, 7, 22,
	89, 101, 31, 10, 187, 118, 205, 87, 3035, 3739,
	1635, 382, 41, 115, 92, 57, 97, 117, 222, 53,
	3034, 3032, 1446, 3031, 3030, 3029, 3026, 150, 3024, 3023,
	3022, 108, 122, 155, 3021, 123, 67, 11, 126, 218,
	226, 93, 181, 170, 211, 3020, 152, 3019, 70, 120,
	3018, 162, 209, 73, 3016, 610, 114, 3014, 208, 3013,
	3012, 3011, 3008, 3007, 3005, 3004, 521, 186, 2999, 121,
	2998, 2997, 2996, 220, 156, 2994, 214, 138, 192, 69,
	36, 2993, 79, 277, 2992, 161, 39, 2991, 3357, 83,
	0, 8095, 5833, 7491, 2990, 2884, 2989, 173, 113, 2987,
	2985, 2984, 86, 2983, 66, 2981, 2980, 43, 2972, 16,
	8, 9, 25, 19, 1143, 119, 2968, 2960, 88, 105,
	127, 2954, 230, 180, 2953, 2952, 2951, 71, 2950, 29,
	2941, 27, 2939, 2938, 38, 6, 21, 2937, 2936, 199,
	2935, 203, 2934, 2933, 2704, 109, 2932, 2931, 219, 80,
	2930, 212, 2929, 2666, 143, 166, 2928, 2924, 2922, 2921,
	210, 2919, 2918, 28, 1, 2917, 2916, 167, 3, 2527,
	2915, 2914, 63, 2912, 2911, 151,
}
var sqlR1 = [...]int{

	0, 1, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 3, 3,
	3, 3, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 5, 5, 5, 5,
	5, 5, 5, 5, 5, 11, 11, 7, 7, 8,
	8, 8, 35, 35, 9, 9, 9, 10, 10, 6,
	6, 6, 6, 6, 6, 6, 6, 6, 14, 14,
	25, 25, 15, 15, 27, 27, 16, 16, 28, 28,
	478, 478, 19, 30, 20, 31, 13, 479, 479, 479,
	479, 24, 21, 32, 22, 22, 22, 22, 22, 153,
	153, 153, 153, 18, 18, 26, 26, 176, 176, 175,
	175, 175, 175, 175, 175, 175, 175, 175, 175, 175,
	175, 175, 175, 175, 175, 175, 175, 175, 175, 175,
	175, 477, 477, 178, 178, 177, 172, 172, 480, 480,
	179, 179, 179, 181, 181, 36, 36, 36, 93, 93,
	93, 94, 94, 95, 95, 154, 86, 86, 86, 86,
	86, 86, 86, 86, 86, 81, 81, 418, 418, 419,
	419, 149, 149, 150, 150, 150, 150, 151, 151, 152,
	152, 152, 50, 38, 38, 38, 38, 38, 38, 38,
	39, 39, 39, 39, 40, 40, 40, 40, 40, 40,
	41, 41, 41, 41, 41, 41, 48, 48, 48, 48,
	140, 140, 51, 51, 51, 51, 51, 51, 51, 487,
	487, 487, 487, 487, 487, 487, 487, 487, 487, 487,
	487, 487, 487, 487, 487, 487, 487, 487, 487, 488,
	488, 489, 489, 490, 490, 491, 491, 491, 491, 491,
	491, 491, 491, 491, 491, 491, 491, 491, 491, 491,
	491, 491, 491, 491, 491, 53, 53, 53, 53, 53,
	53, 53, 53, 53, 53, 53, 53, 53, 53, 53,
	53, 53, 62, 62, 257, 257, 232, 232, 63, 63,
	63, 64, 64, 65, 65, 52, 52, 471, 471, 271,
	271, 380, 380, 67, 67, 291, 291, 68, 68, 68,
	68, 68, 68, 69, 69, 69, 69, 69, 70, 70,
	70, 70, 70, 70, 70, 70, 70, 70, 75, 75,
	75, 76, 76, 76, 74, 74, 74, 72, 72, 72,
	71, 71, 71, 73, 73, 73, 272, 272, 77, 77,
	77, 77, 77, 77, 77, 77, 79, 79, 79, 79,
	79, 79, 79, 79, 79, 79, 79, 79, 79, 79,
	79, 79, 79, 79, 79, 79, 79, 79, 79, 79,
	79, 79, 79, 79, 79, 79, 79, 79, 79, 80,
	80, 80, 80, 80, 80, 80, 80, 80, 80, 80,
	80, 382, 382, 78, 78, 78, 350, 350, 82, 82,
	82, 306, 306, 83, 83, 83, 83, 83, 84, 84,
	84, 84, 96, 96, 96, 96, 474, 474, 264, 264,
	192, 192, 192, 192, 89, 89, 89, 89, 90, 90,
	90, 91, 91, 145, 145, 102, 102, 102, 102, 102,
	101, 101, 101, 101, 101, 101, 42, 42, 42, 43,
	43, 44, 44, 45, 45, 46, 46, 47, 47, 47,
	47, 47, 104, 104, 484, 484, 106, 103, 103, 103,
	105, 105, 105, 105, 107, 108, 108, 108, 108, 108,
	108, 108, 108, 109, 109, 412, 412, 280, 280, 410,
	410, 426, 426, 411, 411, 236, 236, 236, 236, 236,
	237, 237, 237, 417, 417, 417, 417, 417, 417, 110,
	110, 110, 110, 110, 110, 110, 110, 110, 110, 110,
	110, 110, 110, 110, 110, 110, 110, 110, 110, 110,
	110, 110, 110, 110, 110, 110, 110, 110, 110, 110,
	110, 110, 110, 110, 110, 110, 110, 110, 110, 110,
	110, 110, 110, 110, 110, 110, 110, 110, 110, 110,
	110, 110, 110, 146, 146, 147, 148, 148, 148, 148,
	129, 129, 129, 139, 139, 139, 139, 139, 139, 139,
	132, 132, 132, 119, 119, 111, 111, 111, 111, 111,
	115, 115, 115, 115, 115, 115, 115, 115, 112, 112,
	121, 121, 121, 121, 121, 116, 116, 118, 118, 120,
	120, 120, 120, 120, 120, 120, 120, 120, 113, 113,
	113, 113, 123, 123, 123, 123, 313, 313, 313, 122,
	122, 122, 122, 122, 122, 122, 122, 122, 122, 135,
	135, 135, 135, 135, 135, 364, 364, 130, 130, 130,
	130, 134, 134, 134, 134, 296, 296, 127, 127, 127,
	128, 128, 128, 133, 133, 131, 131, 136, 136, 136,
	136, 114, 114, 114, 492, 492, 492, 137, 137, 126,
	126, 138, 138, 138, 138, 138, 138, 138, 138, 125,
	125, 125, 124, 124, 124, 124, 117, 472, 472, 469,
	469, 469, 469, 469, 469, 469, 470, 470, 473, 473,
	87, 87, 87, 57, 57, 57, 58, 58, 157, 157,
	157, 157, 242, 242, 242, 242, 155, 155, 156, 156,
	59, 59, 493, 493, 493, 481, 481, 481, 482, 482,
	482, 482, 482, 482, 238, 238, 239, 239, 331, 331,
	331, 331, 331, 243, 243, 180, 180, 180, 246, 247,
	247, 244, 244, 245, 245, 245, 249, 249, 248, 251,
	251, 250, 330, 433, 433, 435, 435, 435, 435, 435,
	435, 435, 437, 437, 437, 437, 437, 437, 437, 437,
	437, 437, 437, 431, 431, 431, 432, 427, 427, 428,
	428, 428, 428, 428, 240, 240, 241, 241, 241, 241,
	429, 430, 262, 262, 367, 434, 434, 436, 436, 438,
	494, 494, 494, 494, 494, 494, 495, 495, 495, 329,
	329, 328, 328, 255, 255, 439, 439, 439, 439, 440,
	440, 440, 440, 440, 443, 442, 441, 441, 441, 441,
	441, 61, 61, 61, 293, 293, 292, 292, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 142, 142, 195, 195, 56, 56, 56,
	12, 12, 12, 483, 483, 483, 60, 60, 60, 60,
	194, 194, 194, 194, 194, 194, 476, 476, 475, 475,
	196, 196, 497, 497, 66, 66, 66, 66, 66, 66,
	55, 55, 55, 55, 55, 498, 498, 314, 314, 312,
	312, 311, 311, 261, 261, 366, 199, 199, 173, 173,
	173, 23, 17, 17, 33, 33, 34, 34, 29, 29,
	485, 485, 486, 486, 88, 88, 92, 92, 92, 100,
	100, 141, 141, 141, 141, 141, 141, 141, 37, 37,
	37, 37, 49, 49, 49, 49, 98, 500, 500, 500,
	99, 99, 99, 499, 499, 193, 193, 325, 325, 326,
	326, 501, 501, 327, 327, 327, 327, 187, 186, 188,
	188, 54, 54, 54, 182, 182, 183, 183, 184, 184,
	185, 185, 502, 502, 85, 85, 85, 144, 144, 231,
	231, 231, 321, 321, 321, 256, 256, 205, 205, 324,
	324, 322, 322, 322, 322, 290, 290, 290, 143, 143,
	269, 269, 282, 282, 283, 283, 377, 377, 284, 97,
	97, 160, 160, 158, 158, 158, 158, 158, 158, 158,
	158, 165, 165, 166, 166, 167, 167, 168, 169, 169,
	169, 169, 273, 273, 170, 170, 170, 159, 159, 159,
	161, 161, 161, 161, 161, 161, 161, 164, 164, 164,
	164, 171, 171, 171, 163, 163, 450, 450, 450, 452,
	452, 453, 449, 449, 451, 451, 496, 496, 295, 295,
	295, 253, 254, 252, 252, 259, 259, 258, 260, 260,
	365, 365, 365, 174, 174, 174, 287, 287, 287, 287,
	288, 288, 317, 317, 315, 315, 315, 315, 316, 316,
	318, 318, 318, 319, 319, 320, 320, 286, 286, 346,
	346, 162, 162, 162, 266, 266, 266, 267, 267, 337,
	337, 337, 337, 337, 337, 338, 338, 336, 336, 336,
	336, 368, 368, 368, 368, 368, 368, 368, 368, 368,
	369, 370, 370, 268, 268, 371, 323, 323, 467, 467,
	467, 468, 468, 363, 363, 372, 372, 372, 372, 372,
	372, 361, 361, 362, 362, 378, 379, 379, 299, 299,
	299, 299, 297, 297, 300, 300, 300, 300, 298, 298,
	373, 373, 373, 373, 289, 289, 374, 374, 374, 374,
	375, 332, 333, 333, 383, 383, 383, 383, 399, 265,
	265, 265, 265, 265, 503, 503, 384, 384, 384, 384,
	384, 384, 384, 397, 397, 397, 397, 397, 397, 397,
	397, 400, 400, 400, 400, 400, 400, 385, 385, 385,
	385, 385, 385, 385, 385, 385, 385, 385, 385, 385,
	385, 385, 385, 385, 385, 385, 385, 385, 385, 385,
	388, 388, 388, 387, 387, 387, 387, 387, 387, 387,
	387, 387, 387, 387, 387, 387, 387, 387, 387, 387,
	387, 398, 398, 398, 398, 398, 389, 389, 394, 394,
	395, 395, 395, 390, 391, 396, 396, 396, 396, 504,
	504, 402, 402, 392, 392, 392, 392, 392, 392, 392,
	392, 392, 386, 386, 386, 393, 393, 393, 308, 308,
	308, 308, 308, 308, 308, 308, 308, 308, 308, 308,
	308, 307, 307, 309, 309, 339, 339, 339, 339, 339,
	339, 339, 339, 339, 339, 339, 339, 339, 339, 339,
	339, 339, 339, 339, 339, 339, 339, 339, 339, 339,
	339, 339, 339, 339, 339, 339, 339, 339, 339, 339,
	339, 339, 339, 339, 339, 339, 339, 339, 339, 339,
	339, 339, 339, 339, 339, 339, 339, 339, 339, 339,
	339, 339, 339, 339, 339, 339, 339, 339, 339, 339,
	339, 339, 339, 339, 339, 339, 339, 339, 339, 339,
	339, 339, 339, 339, 339, 339, 339, 339, 339, 339,
	339, 340, 340, 340, 340, 340, 340, 340, 340, 340,
	340, 340, 340, 340, 340, 340, 340, 340, 340, 340,
	340, 340, 340, 340, 340, 340, 340, 340, 340, 340,
	341, 341, 341, 341, 342, 342, 342, 342, 342, 342,
	342, 342, 342, 342, 342, 342, 342, 342, 342, 342,
	342, 342, 342, 342, 342, 342, 342, 342, 342, 444,
	444, 444, 444, 444, 444, 444, 444, 447, 447, 448,
	448, 445, 445, 445, 445, 445, 445, 445, 445, 445,
	445, 445, 445, 445, 445, 445, 445, 445, 445, 445,
	445, 445, 445, 445, 446, 446, 446, 446, 446, 446,
	446, 446, 446, 446, 446, 446, 446, 446, 446, 446,
	446, 446, 446, 446, 446, 446, 446, 446, 446, 446,
	446, 446, 446, 446, 446, 446, 446, 446, 446, 446,
	454, 454, 455, 455, 457, 457, 458, 458, 459, 460,
	460, 460, 461, 462, 462, 456, 456, 463, 463, 463,
	463, 464, 464, 465, 465, 465, 465, 465, 466, 466,
	466, 466, 466, 352, 352, 353, 353, 359, 359, 359,
	235, 235, 235, 235, 235, 235, 235, 235, 235, 235,
	235, 235, 235, 235, 235, 235, 197, 197, 197, 197,
	197, 278, 278, 276, 276, 276, 279, 279, 277, 277,
	275, 275, 274, 274, 349, 349, 347, 347, 351, 351,
	301, 301, 401, 401, 401, 401, 401, 401, 401, 401,
	302, 302, 302, 310, 303, 303, 304, 304, 304, 304,
	304, 343, 344, 305, 305, 305, 345, 345, 354, 358,
	358, 357, 356, 356, 355, 355, 334, 334, 335, 335,
	285, 285, 505, 505, 281, 281, 376, 376, 376, 376,
	234, 234, 270, 270, 233, 233, 226, 226, 227, 227,
	227, 227, 263, 263, 360, 360, 403, 403, 404, 404,
	405, 405, 406, 406, 407, 408, 409, 348, 348, 215,
	214, 202, 203, 213, 212, 211, 201, 204, 208, 209,
	210, 206, 207, 221, 220, 219, 225, 217, 218, 381,
	200, 228, 228, 229, 229, 229, 230, 230, 230, 230,
	198, 198, 222, 222, 223, 224, 224, 216, 216, 216,
	189, 189, 189, 190, 190, 191, 191, 416, 416, 414,
	414, 414, 415, 415, 415, 415, 413, 413, 413, 413,
	413, 420, 420, 420, 420, 420, 420, 420, 420, 420,
	420, 420, 420, 420, 420, 420, 420, 420, 420, 420,
	420, 420, 420, 420, 420, 420, 420, 420, 420, 420,
	420, 420, 420, 420, 420, 420, 420, 420, 420, 420,
	420, 420, 420, 420, 420, 420, 420, 420, 420, 420,
	420, 420, 420, 420, 420, 420, 420, 420, 420, 420,
	420, 420, 420, 420, 420, 420, 420, 420, 420, 420,
	420, 420, 420, 420, 420, 420, 420, 420, 420, 420,
	420, 420, 420, 420, 420, 420, 420, 420, 420, 420,
	420, 420, 420, 420, 420, 420, 420, 420, 420, 420,
	420, 420, 420, 420, 420, 420, 420, 420, 420, 420,
	420, 420, 420, 420, 420, 420, 420, 420, 420, 420,
	420, 420, 420, 420, 420, 420, 420, 420, 420, 420,
	420, 420, 420, 420, 420, 420, 420, 420, 420, 420,
	420, 420, 420, 420, 420, 420, 420, 420, 420, 420,
	420, 420, 420, 420, 420, 420, 420, 420, 420, 420,
	420, 420, 420, 420, 420, 420, 420, 420, 420, 420,
	420, 420, 420, 420, 420, 420, 420, 420, 420, 420,
	420, 420, 420, 420, 420, 420, 420, 420, 420, 420,
	420, 420, 420, 420, 420, 420, 420, 420, 420, 420,
	420, 420, 420, 420, 420, 420, 420, 420, 420, 420,
	420, 420, 420, 420, 420, 420, 420, 420, 420, 420,
	420, 420, 420, 420, 420, 420, 420, 420, 420, 420,
	420, 420, 420, 420, 420, 420, 420, 420, 420, 420,
	420, 420, 420, 420, 420, 420, 420, 420, 420, 420,
	420, 420, 420, 420, 420, 420, 420, 420, 420, 420,
	420, 420, 420, 420, 420, 420, 420, 420, 420, 420,
	420, 420, 420, 420, 420, 420, 420, 420, 423, 423,
	423, 423, 423, 423, 423, 423, 423, 423, 423, 423,
	423, 423, 423, 423, 423, 423, 423, 423, 423, 423,
	423, 423, 423, 423, 423, 423, 423, 423, 423, 423,
	423, 423, 423, 423, 423, 423, 423, 423, 423, 423,
	423, 423, 423, 423, 423, 423, 423, 423, 421, 421,
	421, 421, 421, 421, 421, 421, 421, 421, 421, 421,
	421, 421, 421, 421, 421, 421, 422, 424, 424, 424,
	424, 424, 424, 424, 424, 424, 424, 424, 424, 424,
	424, 424, 424, 424, 424, 424, 424, 424, 424, 424,
	424, 424, 424, 424, 424, 424, 424, 424, 424, 424,
	424, 424, 424, 424, 424, 424, 424, 424, 424, 424,
	424, 424, 424, 424, 424, 424, 424, 424, 424, 424,
	424, 424, 424, 424, 424, 424, 424, 424, 424, 424,
	424, 424, 424, 424, 424, 424, 424, 424, 424, 424,
	424, 424, 424, 424, 424, 424, 424, 425, 425,
}
var sqlR2 = [...]int{

	0, 1, 1, 1, 1, 1, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 1, 1, 1, 1, 0, 1, 1,
	2, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 1, 3, 1, 3, 1,
	1, 3, 4, 6, 1, 1, 3, 1, 3, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 4, 6,
	4, 6, 6, 9, 6, 9, 6, 5, 6, 5,
	1, 1, 5, 5, 6, 6, 4, 4, 4, 4,
	3, 4, 4, 4, 7, 7, 9, 8, 9, 5,
	3, 5, 7, 4, 12, 4, 12, 1, 3, 5,
	5, 2, 5, 3, 6, 4, 6, 5, 6, 6,
	4, 8, 3, 4, 10, 3, 6, 4, 3, 1,
	3, 2, 1, 1, 3, 1, 3, 2, 2, 0,
	1, 1, 0, 2, 0, 6, 7, 2, 5, 6,
	2, 1, 3, 1, 3, 1, 6, 4, 9, 7,
	12, 12, 12, 9, 2, 7, 2, 1, 1, 1,
	3, 3, 0, 3, 1, 3, 1, 1, 3, 2,
	5, 0, 6, 1, 2, 1, 2, 1, 2, 2,
	3, 3, 3, 3, 3, 5, 3, 3, 5, 3,
	3, 5, 3, 3, 5, 3, 6, 6, 6, 6,
	1, 1, 1, 2, 1, 1, 2, 1, 2, 3,
	3, 4, 3, 4, 7, 4, 4, 4, 3, 5,
	7, 4, 3, 3, 4, 3, 3, 3, 3, 2,
	0, 1, 0, 1, 0, 3, 3, 3, 3, 3,
	6, 4, 4, 4, 3, 5, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 1, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 4, 1, 1, 2,
	1, 2, 7, 3, 2, 0, 1, 3, 3, 1,
	0, 1, 2, 2, 1, 6, 5, 1, 2, 1,
	3, 2, 0, 9, 3, 2, 0, 2, 2, 2,
	2, 2, 2, 1, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 4, 6,
	3, 4, 6, 3, 4, 6, 3, 5, 7, 3,
	4, 6, 3, 3, 5, 3, 1, 3, 2, 2,
	5, 3, 3, 6, 6, 3, 1, 1, 2, 1,
	1, 1, 2, 1, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 1, 2, 1, 2, 1, 2, 1,
	1, 1, 1, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 1, 1, 2, 1,
	2, 1, 3, 5, 7, 2, 3, 0, 3, 5,
	2, 3, 0, 2, 3, 2, 3, 2, 6, 4,
	7, 2, 6, 4, 7, 2, 1, 1, 1, 3,
	1, 1, 1, 1, 1, 2, 1, 2, 2, 3,
	2, 4, 3, 2, 2, 1, 2, 1, 3, 3,
	1, 2, 1, 2, 1, 2, 1, 1, 3, 5,
	4, 6, 4, 3, 0, 1, 3, 2, 4, 2,
	4, 1, 6, 3, 1, 1, 5, 3, 2, 6,
	3, 3, 4, 4, 3, 1, 3, 2, 3, 3,
	1, 3, 1, 2, 1, 1, 2, 2, 3, 1,
	1, 1, 1, 1, 3, 2, 2, 1, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 2, 2, 1, 3, 3, 3, 3,
	2, 3, 3, 1, 1, 1, 1, 1, 2, 2,
	5, 7, 3, 3, 3, 4, 5, 5, 5, 3,
	4, 4, 3, 4, 4, 3, 4, 4, 5, 3,
	5, 5, 5, 7, 3, 3, 3, 4, 3, 5,
	3, 6, 5, 6, 3, 5, 6, 3, 4, 3,
	4, 3, 3, 4, 4, 5, 0, 1, 1, 3,
	2, 4, 3, 3, 5, 4, 3, 5, 3, 5,
	4, 6, 4, 6, 4, 1, 0, 3, 4, 4,
	5, 7, 5, 3, 3, 2, 0, 4, 2, 3,
	4, 2, 3, 3, 3, 3, 3, 4, 3, 3,
	3, 3, 4, 3, 1, 1, 1, 2, 3, 2,
	3, 6, 6, 7, 9, 7, 9, 3, 4, 10,
	10, 3, 5, 5, 5, 3, 5, 2, 0, 1,
	1, 1, 1, 3, 2, 2, 2, 1, 2, 0,
	3, 3, 2, 3, 6, 3, 11, 14, 0, 2,
	4, 3, 0, 4, 5, 4, 3, 3, 1, 3,
	10, 13, 0, 2, 3, 1, 1, 0, 1, 2,
	2, 2, 2, 1, 1, 0, 1, 3, 1, 1,
	1, 1, 3, 8, 0, 1, 1, 0, 2, 1,
	0, 1, 0, 9, 9, 3, 1, 3, 7, 1,
	3, 11, 3, 2, 0, 3, 1, 2, 2, 3,
	2, 6, 2, 1, 1, 2, 8, 4, 2, 5,
	5, 5, 2, 9, 10, 6, 5, 3, 1, 5,
	8, 7, 11, 3, 3, 0, 2, 4, 3, 3,
	1, 5, 1, 3, 1, 2, 0, 1, 2, 2,
	0, 1, 3, 3, 2, 2, 1, 1, 1, 4,
	0, 6, 0, 3, 0, 2, 2, 2, 0, 1,
	1, 2, 2, 0, 3, 3, 2, 1, 1, 2,
	2, 5, 8, 4, 1, 0, 1, 2, 2, 1,
	2, 3, 3, 2, 2, 3, 2, 2, 2, 2,
	2, 3, 1, 4, 2, 2, 2, 4, 7, 3,
	4, 6, 3, 1, 1, 1, 8, 11, 7, 5,
	1, 1, 1, 1, 1, 1, 1, 2, 2, 0,
	3, 3, 0, 1, 6, 7, 6, 5, 3, 4,
	16, 19, 15, 18, 4, 0, 2, 2, 0, 1,
	0, 1, 0, 1, 3, 3, 2, 0, 1, 1,
	0, 6, 6, 8, 6, 8, 6, 8, 6, 8,
	1, 0, 2, 0, 2, 2, 3, 3, 2, 2,
	2, 1, 2, 1, 2, 1, 2, 1, 3, 2,
	3, 2, 2, 2, 2, 2, 2, 1, 1, 0,
	2, 4, 2, 1, 0, 2, 1, 1, 0, 1,
	3, 1, 0, 1, 1, 1, 1, 2, 3, 2,
	2, 8, 11, 3, 3, 0, 3, 0, 3, 0,
	3, 0, 1, 0, 6, 7, 3, 6, 3, 1,
	3, 1, 1, 4, 2, 1, 3, 1, 3, 8,
	5, 3, 4, 3, 0, 2, 2, 0, 10, 3,
	2, 0, 1, 3, 1, 1, 3, 3, 5, 1,
	1, 3, 3, 1, 2, 4, 4, 2, 3, 5,
	5, 1, 3, 1, 0, 1, 2, 3, 2, 4,
	2, 3, 0, 2, 0, 2, 1, 2, 1, 1,
	1, 2, 1, 2, 1, 2, 1, 8, 8, 8,
	2, 4, 4, 4, 2, 2, 2, 2, 3, 1,
	3, 6, 1, 0, 1, 0, 1, 0, 1, 1,
	0, 1, 5, 1, 0, 1, 0, 3, 1, 3,
	3, 4, 5, 2, 2, 0, 2, 2, 1, 1,
	1, 0, 1, 0, 2, 2, 5, 4, 2, 3,
	1, 1, 1, 1, 1, 1, 1, 3, 0, 2,
	0, 4, 2, 5, 3, 2, 0, 1, 3, 3,
	5, 1, 1, 1, 1, 1, 3, 2, 4, 4,
	0, 4, 4, 3, 4, 1, 5, 3, 4, 5,
	5, 1, 5, 1, 3, 2, 0, 3, 0, 2,
	3, 1, 3, 2, 0, 3, 5, 6, 4, 6,
	4, 3, 2, 1, 0, 5, 1, 0, 2, 2,
	2, 1, 1, 0, 1, 1, 1, 0, 4, 2,
	1, 2, 2, 4, 1, 3, 1, 2, 3, 2,
	2, 2, 1, 0, 2, 5, 7, 2, 1, 2,
	4, 3, 5, 0, 1, 1, 1, 1, 1, 1,
	1, 2, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 4, 4, 6, 6, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	3, 5, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 2, 2, 2, 2, 2, 1,
	1, 1, 1, 1, 1, 1, 3, 0, 5, 4,
	1, 2, 1, 4, 1, 1, 2, 1, 1, 1,
	1, 1, 0, 1, 2, 5, 1, 4, 2, 5,
	1, 4, 3, 3, 0, 1, 2, 4, 1, 1,
	1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
	3, 1, 0, 1, 4, 1, 3, 3, 3, 5,
	2, 2, 2, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 2, 2, 3,
	5, 4, 6, 3, 5, 4, 6, 4, 6, 5,
	7, 3, 3, 3, 3, 3, 4, 3, 2, 4,
	2, 3, 3, 4, 3, 4, 3, 4, 5, 6,
	6, 7, 6, 7, 6, 7, 3, 4, 4, 1,
	3, 1, 3, 3, 2, 2, 2, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 5, 6, 6, 7,
	1, 2, 1, 2, 1, 1, 1, 1, 1, 6,
	2, 1, 1, 1, 1, 1, 2, 1, 5, 5,
	6, 3, 1, 1, 1, 2, 2, 2, 4, 3,
	5, 6, 8, 6, 5, 4, 3, 4, 1, 1,
	1, 5, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 6, 6, 8, 8, 6, 4, 6,
	6, 6, 4, 1, 3, 3, 3, 3, 3, 4,
	3, 3, 4, 3, 3, 4, 3, 3, 4, 3,
	3, 3, 4, 3, 4, 3, 4, 3, 4, 4,
	3, 6, 5, 5, 5, 4, 4, 3, 4, 3,
	5, 0, 5, 0, 2, 0, 1, 3, 3, 2,
	2, 0, 6, 1, 0, 3, 0, 3, 3, 3,
	0, 1, 4, 2, 2, 2, 2, 2, 3, 2,
	2, 3, 0, 4, 1, 1, 5, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 2, 1,
	2, 2, 3, 1, 2, 3, 2, 3, 2, 3,
	1, 0, 1, 3, 1, 3, 3, 3, 1, 3,
	3, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	4, 3, 1, 2, 3, 0, 3, 3, 2, 2,
	1, 2, 2, 3, 2, 1, 1, 1, 5, 1,
	2, 4, 2, 0, 1, 0, 3, 5, 1, 0,
	1, 2, 1, 0, 1, 3, 3, 2, 1, 1,
	1, 3, 1, 3, 3, 1, 1, 1, 1, 5,
	3, 1, 1, 3, 1, 1, 1, 1, 2, 2,
	1, 1, 2, 2, 1, 1, 1, 3, 5, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 3, 5, 7, 1, 7, 5, 3,
	1, 1, 1, 1, 1, 3, 5, 1, 1, 1,
	1, 1, 1, 1, 0, 3, 0, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1,
}
var sqlChk = [...]int{

	-1000, -1, -2, 489, -79, -50, -48, -82, -83, -68,
	-84, -78, -96, -100, -88, -102, -141, -146, -147, -148,
	-3, -36, -38, -51, -67, -69, -77, -86, -85, -87,
	-89, -93, -92, -81, -42, -97, -101, -110, -142, -143,
	-144, 88, 73, 131, 111, 117, 167, 313, 345, 355,
	339, -105, -106, 374, -37, -49, -99, -98, 66, 112,
	334, -4, -12, 27, 41, -39, -40, -41, 57, -56,
	-53, -62, -487, 90, -451, -70, -73, -491, 122, 137,
	184, 303, -90, -91, 341, 343, 138, -44, -43, 132,
	-158, -160, -103, -104, -145, -111, -112, -113, -114, -115,
	-116, -117, -118, -119, -120, -121, -122, -123, -124, -125,
	-126, -131, -127, -128, -129, -130, -132, -133, -134, -135,
	-136, -137, -138, 378, 425, 42, 388, 74, 125, 349,
	21, -5, -6, -7, -8, -9, -10, -11, -52, -54,
	-55, -57, -58, -59, -66, -60, -61, -450, -71, -72,
	-74, -75, -76, 340, -161, -159, 486, 439, -14, -19,
	-20, -15, -16, -18, -21, -17, -25, -30, -31, -27,
	-28, -26, -29, -32, -33, -34, -35, -23, -24, -13,
	-22, 457, 465, -164, -162, -163, -171, 362, 447, 402,
	489, 489, 489, 489, 489, 489, 489, 489, 489, 489,
	489, 489, 489, 489, 489, 489, 489, 489, 489, 489,
	-217, -222, -223, -224, -216, -189, -422, -425, 4, -420,
	-423, 143, 192, 269, 21, 22, 23, 24, 25, 27,
	38, 40, 39, 41, 42, 45, 48, 49, 47, 52,
	53, 54, 55, 56, 57, 58, 61, 66, 67, 72,
	73, 74, 75, 76, 77, 83, 80, 81, 82, 85,
	87, 88, 89, 91, 93, 94, 102, 103, 104, 105,
	106, 107, 111, 112, 115, 114, 117, 120, 121, 122,
	124, 126, 127, 129, 131, 132, 135, 133, 408, 134,
	136, 137, 138, 139, 149, 150, 151, 153, 154, 156,
	158, 162, 165, 166, 168, 172, 174, 175, 176, 177,
	183, 184, 186, 187, 188, 193, 189, 194, 198, 201,
	200, 202, 203, 204, 195, 209, 213, 214, 215, 217,
	218, 221, 222, 223, 224, 225, 228, 227, 230, 233,
	234, 237, 238, 239, 242, 243, 244, 245, 247, 248,
	251, 249, 252, 250, 254, 255, 256, 253, 259, 257,
	258, 261, 262, 267, 265, 263, 264, 271, 274, 181,
	276, 277, 279, 280, 281, 297, 284, 285, 286, 289,
	290, 293, 296, 298, 299, 300, 301, 302, 303, 304,
	306, 307, 311, 313, 314, 316, 318, 319, 320, 321,
	322, 323, 324, 326, 327, 329, 330, 331, 332, 333,
	334, 339, 336, 337, 338, 340, 341, 342, 343, 345,
	347, 348, 349, 350, 352, 354, 375, 376, 390, 355,
	356, 357, 358, 359, 360, 361, 365, 369, 366, 367,
	368, 363, 364, 370, 371, 372, 374, 377, 378, 380,
	381, 383, 384, 386, 387, 388, 389, 391, 394, 395,
	396, 392, 393, 401, 399, 400, 403, 404, 405, 406,
	407, 409, 411, 419, 420, 422, 425, 426, 427, 417,
	429, 430, 433, 434, 435, 438, 436, 437, 443, 439,
	441, 444, 445, 446, 452, 451, 458, 459, 461, 462,
	463, 33, 43, 44, 46, 50, 62, 63, 64, 68,
	108, 109, 130, 140, 141, 152, 163, 164, 169, 171,
	178, 179, 180, 199, 205, 207, 211, 231, 273, 275,
	291, 295, 308, 309, 310, 312, 325, 351, 382, 397,
	412, 413, 414, 415, 421, 423, 447, 448, 449, 453,
	460, 282, -210, 2, -189, -189, 313, 26, 2, 26,
	307, 364, 404, 406, 2, -474, -264, 2, 26, -192,
	-189, 90, 167, 362, -210, 2, -474, -264, 24, 2,
	-189, 2, -193, 2, 355, -189, 489, 85, 239, 67,
	351, 371, -108, 420, -107, 412, 357, -109, -412, 2,
	259, -189, 489, 489, 489, 26, -200, -189, 402, 192,
	104, 400, 489, 2, 402, 300, 451, 363, 104, 322,
	192, -483, 347, 170, 440, 416, -469, 2, 4, -423,
	-420, -227, -226, 402, 104, -224, -216, 479, -223, 489,
	489, 489, 2, 214, 215, 321, 320, 371, 372, 489,
	489, 2, 25, 60, 84, 87, 110, 139, 159, 162,
	287, -488, 248, 297, 319, 370, 401, 409, 422, -482,
	389, 61, 357, -481, -483, 427, 120, -311, 104, 239,
	166, 434, 406, 404, 432, 115, 198, 437, 436, 489,
	25, 60, 70, 87, 120, 139, 159, 162, -490, 297,
	319, 354, 357, 370, 401, 409, 427, 422, 2, 451,
	363, 402, 192, 104, -483, 317, -79, 2, 486, 29,
	28, 374, -154, 402, 208, 2, -189, 214, 215, 2,
	489, 489, 160, -469, 2, 214, 215, 2, 208, 2,
	61, 359, 489, 489, 489, 489, 489, 489, 489, 489,
	489, 489, 489, 489, 489, 489, 489, 489, 489, 489,
	489, 489, 489, 489, 489, 489, 489, 489, 489, 489,
	2, -139, 371, 389, 176, 41, 67, 26, 318, 72,
	301, 105, 168, 192, 193, 222, 84, 85, -313, 40,
	215, 214, -364, 403, 358, 364, 399, 355, 420, 90,
	441, 348, 463, 322, 323, 133, 4, 104, 259, 373,
	412, 239, 76, -496, 2, 402, -499, 2, 420, 420,
	2, -499, 2, -499, 2, -499, 2, -500, 420, 460,
	489, 489, 489, 489, 489, 489, 489, 489, 489, 489,
	489, 489, 489, 489, -159, -161, -160, 489, 489, 489,
	489, 489, -139, 371, 2, 67, 26, -258, -259, 431,
	206, 128, 288, -158, -160, 2, -450, -410, 2, -339,
	-426, -341, 477, 478, 470, 268, 464, -352, 110, 432,
	282, -425, -342, -354, 130, 351, -279, 8, 9, 5,
	6, 7, -198, -385, -348, 424, 142, 272, -230, 490,
	10, 486, -447, -160, -353, 34, 171, 59, -414, -229,
	-387, -395, -391, -392, -400, -503, 48, 55, 54, 409,
	258, 365, 366, 383, 367, 368, 45, 443, 189, 279,
	281, 200, 4, 207, -228, -216, -444, -445, -420, -421,
	199, 205, 201, 382, 202, 203, 204, 44, 325, 153,
	154, 152, 121, 109, 108, 275, 50, 49, 46, 448,
	-396, 106, 412, 413, 414, 415, 163, 164, 217, 218,
	-189, -422, 70, 96, 97, 95, 100, 99, 241, 240,
	101, 98, 373, 440, 60, 33, 178, 179, 211, 273,
	180, 68, -446, 393, 92, 161, 197, 182, 210, 212,
	216, 232, 235, 260, 266, 270, 292, 294, 346, 379,
	-504, 449, 140, 141, 295, 310, 397, 421, 423, 169,
	231, 62, 63, -452, 326, -453, -210, -452, 489, 489,
	491, 489, -252, -253, -254, 2, 26, 118, 486, 2,
	-368, 2, -369, -373, -160, 226, -372, 486, -370, 484,
	-217, 283, -448, 352, -444, -445, -198, -216, -229, 4,
	-255, 486, 488, 104, 402, 71, 192, -306, 486, -189,
	26, 282, 416, 491, -350, 486, 282, 160, 285, -189,
	2, 2, 375, 2, 486, -108, 64, 420, 39, 371,
	-326, 2, -327, -186, -187, -188, -378, 213, 316, 324,
	466, 463, -410, -484, 160, 469, 416, -410, -280, 488,
	2, 2, 2, 2, 2, -373, 178, -217, 2, -214,
	-413, 4, -420, -423, -421, -424, 70, -422, 26, 28,
	29, 30, 32, 34, 35, 36, 37, 51, 59, 60,
	65, 69, 71, 79, 84, 90, 95, 96, 98, 97,
	99, 100, 101, 110, 113, 116, 118, 119, 123, 125,
	128, 142, 144, 157, 159, 160, 167, 170, 173, 185,
	196, 206, 208, 226, 229, 236, 240, 241, 268, 272,
	278, 282, 283, 287, 288, 305, 315, 328, 344, 362,
	373, 385, 398, 402, 410, 416, 418, 424, 431, 432,
	440, 442, 450, 454, 455, 456, 457, -425, 2, -373,
	178, 2, -219, 178, -373, -222, 2, -201, -189, 2,
	-213, -413, 2, -233, 178, -217, -218, -222, -418, 178,
	2, -416, 10, -415, 5, 4, -420, -423, -421, -94,
	-418, 486, 416, 491, -270, -226, -227, -263, -189, 488,
	-339, 2, -97, 2, -339, 178, 2, -97, 178, 2,
	-339, 178, 2, -97, 178, 2, 2, 2, 422, 2,
	87, 178, -189, 402, 103, 2, 338, -489, 354, 426,
	451, 2, 2, 2, 2, 2, 2, 402, -206, 2,
	-189, 157, -225, 178, 2, -189, 363, -497, 326, -418,
	178, 2, -220, -222, -220, 192, 209, -201, 178, 2,
	406, 404, 406, 404, 160, 2, 208, 2, 208, 2,
	-374, 2, -375, -369, -217, 484, 2, 2, 2, 2,
	2, 178, -189, 402, 103, 2, 224, 2, 2, 2,
	2, 2, 2, 2, 2, 2, -272, 178, 2, -217,
	-272, 178, 2, -272, 178, 2, -312, 2, 79, -201,
	178, 2, -419, 178, 2, -418, -382, 2, -381, -415,
	447, -79, 486, -79, 486, 371, 486, -418, -217, -217,
	-339, -97, -95, -94, 160, -339, -97, -154, 157, 2,
	104, 402, -139, 2, 157, 442, 2, 8, 2, -418,
	358, 323, 149, 2, 375, 2, 376, 67, -313, 463,
	67, 160, 2, 160, 2, -296, 2, 457, -472, 2,
	282, 160, 2, 160, 2, 160, 2, 160, 2, 160,
	2, 320, 372, 215, 2, -97, 454, -339, 454, 2,
	419, 223, 134, 160, -296, 2, 160, 2, 160, 2,
	5, 2, 390, 2, 213, 316, 390, 2, -217, -492,
	2, 402, 451, 363, 2, 2, 80, 81, 160, 2,
	160, 2, 160, 463, 2, -289, -373, -325, -326, -325,
	416, -258, -259, -139, 375, 2, -165, -287, -167, 157,
	-315, -316, -168, 236, 144, 278, -169, -295, 26, 118,
	-295, -295, 53, 487, 487, 11, 12, 69, 38, 477,
	478, 479, 480, 155, 481, 482, 475, 476, 474, 467,
	468, 472, 219, 220, 86, 471, 469, 78, 246, 353,
	145, 146, 147, 148, 335, 190, 31, 191, 14, 15,
	16, 30, 287, 235, 464, 182, 379, 470, 17, 18,
	19, 210, 212, 270, 43, 185, -197, -235, -339, -339,
	-339, -339, -339, 294, 486, -285, -334, 484, -160, 486,
	486, 486, 5, -409, 8, -160, -339, -352, 487, -277,
	486, -160, -352, -347, 486, 351, 484, 486, -355, -339,
	5, 486, 488, -454, 458, -389, 486, 312, -388, 486,
	-388, -388, 452, -386, 486, 465, 459, 486, -386, 486,
	486, 486, 486, 157, 486, 486, 486, 486, 486, 486,
	486, 486, 486, 486, 486, 486, 486, 486, 486, 452,
	486, 486, 486, 486, 486, 486, 486, 486, 486, 491,
	-452, -255, 486, -281, -376, -339, 479, -281, -281, 282,
	-274, -339, 92, -299, 216, 260, 161, 232, 346, 197,
	-336, 490, -336, -363, 465, -160, -370, -216, -160, -372,
	486, -368, -363, -80, -409, -67, -77, -85, -97, -110,
	-143, -144, 479, -217, 486, 160, 486, 488, 160, -263,
	-413, -201, -217, -228, -229, -233, 117, -274, -469, -263,
	-192, 35, -349, -383, -384, -385, -394, -390, -393, -398,
	308, 309, 48, 55, 54, 409, 258, 365, 366, 383,
	367, 368, 45, 443, 189, 279, 281, 200, 4, 46,
	448, -396, 207, 330, 331, 329, 333, 332, 199, 205,
	201, 382, 202, 203, 204, 44, 325, 153, 154, 152,
	121, 109, 108, 275, 50, 49, 106, 412, 413, 414,
	415, 163, 164, 217, 218, 449, 393, 62, 63, -469,
	-263, 157, -412, -274, 35, -326, 2, 110, -416, 39,
	-501, 491, 234, -237, 245, 267, 175, 283, 461, 276,
	-417, 5, 4, -348, -360, 110, 239, 207, -403, -405,
	8, -404, 9, -406, 477, 478, -411, -410, 94, 488,
	-413, -176, 336, -175, 23, 27, 122, 445, 135, -245,
	194, 300, 130, 386, 435, -478, -479, 356, 407, 408,
	82, 276, 336, 130, -292, -294, 35, 102, 262, 296,
	56, 187, 250, 251, 388, 453, 130, 336, -479, 336,
	-479, -178, 386, 435, -478, -479, 356, 336, -177, -245,
	130, 490, -475, -449, 457, 130, -379, -378, -419, -94,
	-270, 491, 491, -413, 479, 130, 130, 130, 130, 2,
	2, 268, 2, 2, 2, 162, -481, -490, 2, 2,
	2, -217, 178, -257, 282, -471, -271, 402, -217, 268,
	-219, 178, 2, -222, 451, -475, 268, 35, 486, 2,
	-312, 2, 192, -449, 268, -374, -231, -217, -369, -231,
	374, -210, 35, -336, -336, 130, 2, 2, 2, -189,
	-179, 491, 58, 342, 130, -179, 130, -179, 130, -234,
	178, -233, -179, 130, 491, 130, 487, 491, -382, -382,
	-418, -152, 457, 160, 90, 486, 486, -154, -379, 491,
	-95, -418, -471, -201, 2, -217, 2, 402, 217, -152,
	-418, -418, -418, -412, 26, 376, 2, 320, 372, 81,
	376, 2, -217, 402, 104, 192, 73, -473, 157, -470,
	347, -469, -217, 104, -217, 104, -217, 104, -217, -217,
	2, 2, 2, 2, 77, 77, 157, 2, 419, 2,
	419, 2, -189, -189, -189, 234, -217, 157, 402, 192,
	402, 192, 104, 402, -179, 491, -193, -165, -287, -412,
	-288, -287, -166, -165, -168, 157, 324, 436, 262, 377,
	221, -316, -315, 26, -339, -320, 151, 261, -339, -318,
	-341, 477, 478, -404, -406, -273, 276, -159, -159, -159,
	-260, -365, -339, 315, 192, -399, -383, -383, -215, -413,
	412, -339, -339, -339, -339, -339, -339, -339, -339, -339,
	-339, -339, -339, -339, -339, -339, -339, -339, -339, -339,
	-339, -339, -339, -339, -339, -339, -339, -339, -339, -339,
	-339, -339, -339, -339, -339, -339, 235, 182, 379, 43,
	185, -339, 416, -339, -339, -339, -339, 257, 268, 272,
	424, 142, 433, 118, 276, -505, 398, 37, -345, -160,
	-278, 486, -359, 32, 385, 26, -352, 486, 2, -334,
	-339, -335, -275, -274, -274, 487, 450, 26, 118, 479,
	2, 487, 491, 35, 487, -339, -275, -351, -347, -274,
	-358, -357, 454, -307, -308, 462, 253, 107, 177, 252,
	-309, 361, -407, 8, -413, 479, -455, 150, 170, 8,
	-407, -407, 412, 412, -407, -407, -407, -397, 308, 237,
	309, 165, 256, 254, 255, 164, -397, 486, 487, 2,
	487, 2, 487, -339, 2, 487, -339, 2, 487, -339,
	2, 487, -339, 2, 487, 2, -339, -339, -339, -339,
	-339, -339, -339, -274, -301, 2, -401, -274, 4, 462,
	253, 107, 177, 252, 361, 5, -301, 2, -302, 2,
	-339, -274, -303, -340, -341, 477, 478, 470, -352, -304,
	2, -339, -275, -339, 51, 229, 418, -305, -339, 160,
	-274, -274, 2, -274, 2, -453, 35, -274, -266, 491,
	160, 35, 4, -266, -266, 486, 487, 491, -300, 174,
	249, 244, -300, -368, -299, 216, -297, 292, -297, -297,
	-363, -202, 484, 492, -413, -363, -362, -361, 35, -210,
	289, -363, -363, 488, 487, -362, 485, -467, 486, 489,
	489, 489, 489, 489, -217, 486, -274, -413, 391, 487,
	488, 210, 210, 210, 210, 352, 487, 416, 457, -79,
	284, 487, 491, -265, 34, 484, 2, 2, -402, 452,
	486, 486, -308, 486, 160, -264, -484, 487, 420, -327,
	-236, 324, 384, 337, 369, 400, 8, 9, 8, 9,
	491, -413, 491, -485, 84, 416, 71, -330, 178, 71,
	-427, -204, 84, -428, -189, 65, 432, 315, 159, 129,
	-485, 84, 315, -485, 84, 84, 374, 389, 53, -373,
	38, 38, 26, -97, 230, 160, 463, 402, 192, 416,
	-373, -294, -383, 102, 250, 251, 53, -408, -403, 477,
	478, -408, 53, -408, -408, -408, 457, -219, -373, 416,
	416, 491, 38, 38, 26, -97, 230, 160, 416, -233,
	-202, -476, -194, 91, 263, 243, 264, -195, -196, 302,
	444, -418, -149, 188, 487, -379, -226, -189, 488, -339,
	-97, -339, -97, 130, 2, -497, 224, 486, -240, 268,
	160, -263, -380, 208, 491, -271, 130, -293, -292, 268,
	-221, 178, 2, -217, 130, 486, 126, 322, 2, -203,
	178, -190, -189, -312, -182, 405, 130, -291, 442, -321,
	-97, 486, 110, 35, -321, -282, -283, -377, -284, -204,
	486, -210, -189, 2, -217, -272, -272, -272, -179, 491,
	130, -201, -418, -419, -79, -381, 487, 487, 487, -151,
	286, -150, -189, 5, -154, 442, -239, -331, -330, -431,
	-432, -427, 235, 192, 432, 209, 143, -256, -205, -204,
	103, -152, -94, -379, -152, -152, -379, -379, -217, 157,
	-152, -152, -152, 2, 2, -296, -217, -201, -233, -217,
	-263, -263, -296, -201, -296, -201, -296, -201, -97, -339,
	371, 157, 157, 488, -296, 322, 104, 402, 300, 192,
	-217, -233, -217, -233, -201, -217, -373, -288, -166, 283,
	221, 377, -318, -319, -341, 351, 352, -319, 351, 352,
	8, 9, 8, 9, -170, 381, 271, -272, 491, -173,
	36, 116, 221, -217, 463, 127, -339, -339, 416, -505,
	398, -345, 127, -339, 257, 272, 424, 142, 433, 118,
	276, 160, 486, -340, -340, 487, -276, -339, -339, 485,
	494, 487, -259, 491, -258, -339, -274, -274, 487, 488,
	-274, -263, 485, 485, 491, 487, -356, -357, 123, -339,
	416, 416, 416, 416, 486, 487, 488, -460, 293, 486,
	486, 487, 487, 491, 487, 463, 463, 487, 487, 487,
	487, 491, 487, 491, -339, 487, 487, 487, 487, 35,
	491, 491, 491, 487, 491, 491, 491, 487, 487, 160,
	487, 487, -310, 305, 487, 11, 12, 477, 478, 479,
	480, 155, 481, 482, 475, 476, 474, 467, 468, 469,
	78, 246, 353, 14, 15, 16, 210, 185, -340, -340,
	-340, 487, -343, -344, 160, 157, 35, -305, -305, -305,
	487, 160, -274, 487, 487, 486, 487, -333, -332, 455,
	-376, -267, 2, -368, -212, -413, -333, -333, -274, -339,
	216, 216, -298, 442, 282, -300, -368, -362, -409, -338,
	-337, 158, 36, 116, 265, 181, -362, -210, -255, -362,
	-362, -413, -363, -363, -361, 487, -468, -409, 487, -268,
	-371, -448, -259, 488, -152, -413, -140, 5, 272, -140,
	-140, -140, -263, 24, 306, -383, 484, 485, 8, 486,
	-407, -407, -407, -263, 160, -410, -326, 430, 75, 324,
	412, -410, -175, 336, -204, -204, -217, 268, -330, 178,
	-181, 268, -383, -211, -189, 486, 486, 221, 221, 442,
	-204, -211, 221, 178, -204, 178, -211, -211, -477, 324,
	277, -339, 238, 322, 269, -176, 336, -97, -97, -97,
	486, -484, 442, 117, -217, -233, -217, -221, 336, 266,
	-228, -408, -408, -292, 336, -219, -201, -177, -97, -97,
	-97, 486, -202, -178, 336, -194, -418, 272, 438, -475,
	-152, 160, -149, 479, -189, 451, -189, -238, -241, -239,
	-204, -157, 459, 457, 130, -232, -217, 484, -152, -418,
	-217, -225, 130, -255, 268, -418, 2, 486, 2, 282,
	268, -203, 178, -183, 124, -502, 469, -201, -333, -267,
	-290, -324, 344, 282, -256, 447, -210, -290, -269, 491,
	160, 469, 488, -256, 2, -179, -179, -179, -233, -234,
	-179, -79, -79, -152, 491, 486, 469, 469, 486, -418,
	-418, 487, 491, -217, -203, 192, 192, -209, -190, 487,
	491, 488, 486, -152, 160, -45, 457, 402, 490, -296,
	-296, -296, 371, 371, -189, -213, -201, -217, -214, -233,
	157, 157, 436, -319, 283, 242, -365, -174, 274, -217,
	490, -339, -339, 127, 127, -339, -340, -340, -339, 127,
	160, 486, -339, -349, 30, 30, 487, 491, -335, -339,
	487, 450, -259, -259, 487, 479, -413, 490, 487, -347,
	125, -339, 410, 253, 177, 252, -309, 252, -309, -309,
	-407, 5, -413, 479, -461, -207, 486, -189, 455, -258,
	-407, -386, -386, -407, -407, 487, -399, -383, -339, -339,
	-339, -339, -339, -339, -343, -339, -399, -383, -340, -340,
	-340, -340, -340, -340, -340, -340, -340, -340, -340, -340,
	-340, -340, -340, -340, -340, -340, -340, 118, 268, 276,
	-340, -344, -343, -339, -339, -383, 487, 487, 487, -274,
	-79, -286, 170, -339, -379, 491, -286, -286, 487, -368,
	-368, 486, -339, 216, 485, 491, 493, 469, -255, 488,
	-361, -362, 485, 487, 491, 487, 491, -323, 35, 487,
	-413, 285, 5, 8, 484, 485, -407, 487, 487, 487,
	-263, -339, 416, 416, 130, 268, 444, -433, -428, 129,
	-339, -261, -366, -339, 486, 486, 2, -172, 122, 374,
	-486, 2, 442, 130, -179, 130, -179, 461, 486, 486,
	416, 457, -274, -339, -153, 110, -412, -479, 490, -479,
	490, 416, 416, 457, -274, 416, -418, 272, -419, -152,
	2, 2, 2, 487, 487, 491, -434, 35, 280, 486,
	280, -217, -63, 457, -378, -409, -219, 35, 130, -475,
	2, -217, 130, 282, 268, -184, 228, -502, -416, -449,
	-259, -290, -281, 269, 83, 487, -333, -283, -267, -339,
	2, 487, -179, -150, -151, -418, -418, -418, -152, -154,
	-154, -331, 2, 486, -203, -190, 486, -154, -205, 2,
	-419, -97, 286, -217, 479, -296, -247, -246, 300, 276,
	-247, 351, 351, 283, 151, 225, -173, -202, -339, -339,
	127, 30, 30, -339, -339, -349, 487, -339, -339, -274,
	485, 5, -339, 487, 487, 8, -339, 487, 488, -462,
	-189, -339, 487, 487, 487, 487, 487, 487, 491, 491,
	487, 487, 487, 487, -344, 160, 118, 276, 486, 487,
	487, -346, 173, 53, -368, -346, -346, -298, -263, -368,
	-337, -202, 484, -413, -409, -371, 486, 488, 485, 2,
	484, 487, -204, -204, -330, 130, -435, 84, -437, 69,
	143, 90, 268, 272, 432, 315, 65, 110, 328, 35,
	487, 487, 491, -173, -261, -263, 268, 395, 110, 268,
	110, 103, 427, 72, -204, -211, -263, -263, -217, 136,
	487, 491, 469, 2, 479, 479, -221, -219, 136, 487,
	-202, -243, 195, -204, -432, -429, -430, 315, -436, -438,
	143, 315, -97, -156, -155, -189, 5, 2, 486, -240,
	286, 485, -293, -97, -221, -314, 442, -202, -217, 130,
	-185, 227, -502, -416, -182, -317, -315, -322, 486, 282,
	-97, -259, 469, 487, 487, 103, 103, -261, 486, 486,
	-263, 103, 487, -46, -47, 192, 84, 304, -214, 402,
	192, 486, 486, -173, -339, -339, -339, 487, -259, -413,
	479, -456, 300, 487, -339, -339, -340, 160, 486, -349,
	-457, 456, -339, -274, -457, -457, 487, -409, 2, 484,
	2, -330, -211, -215, -208, -189, 143, 178, 272, 221,
	486, -340, -217, 486, 2, -494, 113, 196, -329, -495,
	89, 396, 186, -366, -174, 487, 487, 272, 272, -339,
	-383, 486, -179, -179, 487, 487, -339, 416, -412, 88,
	-410, 2, -479, -339, 416, -244, -245, 185, -434, 221,
	-208, 221, -493, 457, 487, 491, 469, 469, -238, -157,
	-64, -65, 417, -378, -255, 486, -189, 282, 486, -202,
	-502, -416, -183, -290, 119, -263, 84, -317, -345, -152,
	486, 486, 487, -261, -261, 487, 486, -152, 491, 26,
	486, 26, 486, -217, -233, -274, -274, 487, -259, 53,
	487, 487, -340, -349, 487, -458, -459, -207, 485, 2,
	-437, -208, 268, 442, -339, -191, 486, -339, 196, 114,
	183, -243, 486, -328, 442, 328, -199, 69, -261, 486,
	486, 486, 469, 160, 486, -157, 298, 486, -242, 282,
	103, 262, -155, -342, -342, 487, 35, -65, 9, 35,
	-261, -217, -261, 282, -416, -184, 436, 269, 487, -211,
	-290, -419, -419, -328, 487, 487, -419, -47, -263, -263,
	487, 487, -463, 322, 352, 172, -274, 487, 491, 35,
	130, 174, 487, -439, 247, -189, 487, 114, 183, -244,
	-263, -243, 174, -217, -480, 442, -215, 487, -249, -248,
	-246, -251, -250, -246, -274, -410, 88, 298, -274, -242,
	-217, -262, -367, -204, 74, 103, -243, -97, -97, 487,
	-314, 487, -217, -185, 374, -332, 487, 487, -329, -328,
	487, 487, 487, 487, -464, -465, 43, 429, 94, -339,
	-464, -464, -459, -461, 143, 457, -440, -443, -442, 282,
	380, 161, 299, 487, 395, 453, -494, 487, 457, -255,
	-339, -328, 487, 491, 447, 487, 491, 447, 487, 160,
	487, 486, 487, 491, 314, 115, 122, -244, -493, -328,
	486, -329, 486, -282, -152, -152, -243, -329, -152, -466,
	129, -465, 311, 156, 351, 311, 156, -466, -466, -208,
	47, -442, 282, -443, 282, 436, 115, 47, -439, -243,
	-248, 185, -250, 160, 298, -263, -367, 352, 352, 2,
	-157, -242, -329, -261, -243, -261, -333, -244, -243, 94,
	170, 411, 262, 30, 469, -441, 262, 342, 58, 374,
	-441, 469, -440, 486, 486, 487, 2, -242, -243, 487,
	-244, 487, -244, 351, 290, -465, -339, 22, 272, 110,
	-339, -494, -274, -274, -180, 58, 342, -244, -328, -498,
	455, -329, 487, 487, -498, -329, 2, -243, -244, 416,
	-243, -244, 486, -244, -498, -274, -498, 487, -244,
}
var sqlDef = [...]int{

	-2, -2, 1, 2, 3, 4, 5, 6, 8, 10,
	12, 14, 16, 18, 20, 22, 23, 24, 25, 26,
	366, 367, 369, 370, 371, 373, 374, 376, 378, 380,
	382, 383, 385, 387, 389, 390, 391, 392, 393, 395,
	397, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 455, 457, 0, 971, 973, 975, 977, 0, 585,
	0, 28, 29, 0, 0, 193, 195, 197, 0, 222,
	224, 225, 227, -2, 0, 323, 324, 326, -2, -2,
	0, 0, 444, 446, 0, 0, 0, 466, 467, 0,
	1059, -2, 460, 462, 464, 529, 531, 533, 535, 537,
	539, 541, 542, 544, 546, 548, 550, 552, 554, 556,
	557, 559, 561, 563, 565, 567, 569, 571, 573, 575,
	577, 579, 581, -2, -2, -2, 0, -2, -2, -2,
	989, 32, 34, 36, 38, 40, 42, 44, 275, 276,
	278, 280, 282, 284, 287, 288, 290, 1114, 328, 330,
	332, 334, 336, 0, -2, 1126, 0, 0, 46, 47,
	48, 49, 50, 51, 52, 53, 69, 70, 71, 72,
	73, 74, 75, 76, 57, 59, 60, 64, 65, 67,
	55, 0, 0, 1090, 1092, 1094, 1096, -2, 0, 0,
	7, 9, 11, 13, 15, 17, 19, 21, 368, 372,
	375, 377, 379, 381, 384, 386, 388, 394, 396, 398,
	854, 1767, 1782, 1783, 1784, 1787, 1788, 1789, 1790, 1791,
	1792, 2156, 2237, 2238, 1811, 1812, 1813, 1814, 1815, 1816,
	1817, 1818, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1826,
	1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836,
	1837, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846,
	1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856,
	1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866,
	1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876,
	1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886,
	1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896,
	1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906,
	1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1916,
	1917, 1918, 1919, 1920, 1921, 1922, 1923, 1924, 1925, 1926,
	1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936,
	1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946,
	1947, 1948, 1949, 1950, 1951, 1952, 1953, 1954, 1955, 1956,
	1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1965, 1966,
	1967, 1968, 1969, 1970, 1971, 1972, 1973, 1974, 1975, 1976,
	1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986,
	1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996,
	1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006,
	2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016,
	2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026,
	2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036,
	2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046,
	2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056,
	2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066,
	2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076,
	2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084, 2085, 2086,
	2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096,
	2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104, 2105, 2106,
	2107, 2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116,
	2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2125, 2126,
	2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136,
	2137, 0, 422, 420, 1760, 423, 1980, 425, 427, 317,
	318, 319, 320, 321, 322, 0, 437, 431, 436, 438,
	440, 441, 442, 443, 417, 415, 0, 437, 1814, 435,
	969, 970, 964, 965, 2016, 996, 456, -2, -2, -2,
	2124, -2, 488, -2, 495, 2127, 2018, 500, 0, 502,
	-2, 505, 972, 974, 976, 583, 584, 1770, 0, 0,
	0, 0, 30, 31, 0, 0, 0, 0, 0, 0,
	0, 0, 903, 904, 905, 0, 0, 157, -2, -2,
	-2, -2, 0, 0, 1855, 1728, 1784, 1731, 1726, 194,
	196, 198, 199, 0, 0, 0, 0, 0, 0, 223,
	226, 228, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 252, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, -2, 0, 0, 0, 0, 0, 0,
	0, 763, 755, 756, 941, 0, 0, 0, 0, 325,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 327, 0,
	0, 0, -2, 0, 0, 253, 358, 359, 0, 1115,
	1115, 0, 0, 0, 0, 174, 165, 0, 0, 732,
	445, 447, 0, 0, 160, 0, 0, 968, 0, 176,
	0, 0, 461, 463, 465, 530, 532, 534, 536, 538,
	540, 543, 545, 547, 549, 551, 553, 555, 558, 560,
	562, 564, 566, 568, 570, 572, 574, 576, 578, 580,
	582, 590, 0, 0, 0, 0, -2, -2, 0, 0,
	0, -2, -2, 0, 0, 0, 0, 0, 0, 0,
	-2, 0, 0, -2, -2, -2, 0, 0, 0, 0,
	-2, -2, 0, 0, 0, 0, 593, 595, 596, 597,
	0, 648, 665, 0, 894, 1116, 998, 979, 993, 998,
	981, 982, 983, 984, 985, 990, 992, 986, 987, 988,
	33, 35, 37, 39, 41, 43, 45, 277, 279, 281,
	283, 285, 289, 291, -2, 1088, 1089, 329, 331, 333,
	335, 337, 448, 0, 450, 0, 594, -2, 0, 1120,
	1120, 1120, 0, 0, 1089, 1087, 0, 453, 454, 509,
	510, 1375, 0, 0, 0, 0, 0, 1625, 1459, 0,
	511, -2, 1490, 1492, 2099, 2124, 1624, 1494, 1495, 1496,
	1497, 1498, 0, 0, 1501, 1502, 1503, 1504, 1505, 0,
	1507, 0, 1512, 1513, 1514, 0, 2106, 1705, 1780, -2,
	1277, 1278, 1279, 1280, 1281, 1282, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, 2112, 1776, 0, 1591, 1528, -2, 1801,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, 1865, -2, -2, -2, -2, -2, -2, -2,
	1334, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, 2138, 1532, 1533, 1534, 1535, 1536, 1537, 1538,
	1539, 1540, 1541, 1542, 0, 2088, 2107, 2108, 2113, 2115,
	2109, 2096, 1553, -2, 2139, 2140, 2141, 2142, 2143, 2144,
	2145, 2146, 2147, 2148, 2149, 2150, 2151, 2152, 2153, 2154,
	1335, -2, 2100, 2101, 2118, 2121, 2126, 2131, 2132, 2105,
	2114, -2, -2, 1106, 1990, 1109, 854, 1107, 1091, 1093,
	0, 1095, 0, 0, 0, 1100, 1123, 1121, 0, 1162,
	1104, 1105, 1180, 1180, 1204, 0, 1185, 0, 1204, 1115,
	1230, 0, 1191, 2011, 1529, 1530, 0, 1784, 1781, -2,
	0, 0, 0, 0, 0, 0, 0, 418, 0, 424,
	426, 0, 0, 0, 0, 0, 0, 0, 0, 995,
	458, 459, 0, 483, 0, 487, 2095, -2, 1819, 2031,
	-2, 491, 999, 1003, 1004, 1005, 1006, 0, 0, 0,
	0, 0, 497, 0, 0, 484, 485, 503, 506, 0,
	586, 587, 588, 589, 54, 0, 2107, 1230, 56, 0,
	1750, 1806, 1807, 1808, 1809, 1810, 2138, 2155, 2157, 2158,
	2159, 2160, 2161, 2162, 2163, 2164, 2165, 2166, 2167, 2168,
	2169, 2170, 2171, 2172, 2173, 2174, 2175, 2176, 2177, 2178,
	2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186, 2187, 2188,
	2189, 2190, 2191, 2192, 2193, 2194, 2195, 2196, 2197, 2198,
	2199, 2200, 2201, 2202, 2203, 2204, 2205, 2206, 2207, 2208,
	2209, 2210, 2211, 2212, 2213, 2214, 2215, 2216, 2217, 2218,
	2219, 2220, 2221, 2222, 2223, 2224, 2225, 2226, 2227, 2228,
	2229, 2230, 2231, 2232, 2233, 2234, 2235, 2236, 58, 0,
	2107, 61, 0, 2107, 0, -2, 66, 0, 1756, 68,
	0, 1753, 77, 0, 2107, 0, 1725, -2, -2, 2107,
	902, 177, 178, 1797, 1798, 1802, 1803, 1804, 1805, 1217,
	161, 0, 0, 0, 724, 1722, 1727, 725, 1732, 0,
	200, 201, 202, 203, 204, 2107, 206, 207, 0, 209,
	210, 2107, 212, 213, 0, 215, 229, 230, 0, 232,
	0, 2107, 0, 0, 0, 238, -2, 254, 0, 251,
	0, 242, 243, 245, 246, 247, 248, 0, 295, 293,
	1761, 0, 733, 2107, 735, 1766, 0, 0, 923, -2,
	2107, 899, 928, 1764, 0, -2, 0, 1113, 2107, 1013,
	759, 760, 761, 762, 0, 314, 0, 1026, 0, 1028,
	0, 1049, 1236, 1180, 1180, 0, 255, 256, 257, 258,
	259, 2107, 0, 0, 0, 264, 0, 266, 267, 268,
	269, 270, 271, 272, 273, 274, 152, 2107, 340, 356,
	152, 2107, 343, 152, 2107, 346, 0, 349, 939, 152,
	2107, 352, 353, 2107, 355, 179, 0, -2, 411, 1769,
	-2, 361, 0, 362, 0, -2, 0, 191, 0, 0,
	730, 731, 1217, 163, 0, 966, 967, 0, 0, 468,
	0, 0, 591, 592, 0, 0, 602, 603, 604, 191,
	2019, 1988, 1881, 609, 0, 612, 615, -2, 0, 0,
	0, 0, 619, 0, 624, 625, 626, 0, 729, 628,
	0, 0, 630, 0, 634, 0, 637, 0, 639, 0,
	641, -2, -2, -2, 652, -2, 0, 656, 0, 658,
	0, 0, 0, 0, 673, 674, 0, 679, 0, 682,
	683, 684, 685, 686, 0, 688, 689, 690, 691, 0,
	693, 694, -2, -2, 698, 700, 0, 707, 0, 711,
	0, 715, 0, 598, 599, 152, 1234, 978, -2, 980,
	0, -2, 0, 449, 0, 452, 1141, 1074, 1071, 0,
	1138, 1139, 1075, 0, 0, 0, 1082, 0, 1118, 1119,
	0, 0, 0, 1061, 1062, 0, 0, 0, 0, 1630,
	1631, 1632, 1633, 1634, 1635, 1638, 1639, 1636, 1637, 1640,
	1641, 0, 0, 0, 0, 0, 1642, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1643, 1644,
	1645, 0, 0, 1647, 0, 1649, 0, 0, 0, 0,
	0, 0, 1438, 1440, 1713, 0, 0, 1646, 1380, 1381,
	1382, 1417, 1418, 0, 0, 1491, 1710, 1709, 1493, 0,
	1661, 0, 1500, 1506, 1746, -2, 0, 1625, 1656, 0,
	0, 1515, 1516, 1517, 0, 0, 1661, 0, 0, 1704,
	1372, 0, 0, 1593, 0, 1314, 0, 1315, 1316, 0,
	1317, 1318, 1331, 1344, 0, 0, 0, 0, 1348, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1336,
	0, 0, 0, 1685, -2, 0, 0, 0, 0, 0,
	1108, 0, 0, 1166, 1714, 1718, 1719, 1166, 1166, 0,
	0, 1662, 1227, 1227, 0, 0, 1223, 1223, 1223, 1221,
	1204, 0, 1204, 1214, 0, 1204, 1204, 0, -2, 1185,
	0, 0, 1214, 0, 1198, 399, 401, 403, 405, 406,
	407, 409, 1231, 1232, 0, 0, 0, 0, 0, 0,
	1785, 0, 0, 0, 1772, 0, 0, 0, 0, 429,
	439, 1115, 0, 1664, 1253, 1256, 1257, 1258, 1259, 1260,
	0, 0, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290,
	1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, -2,
	1332, 1334, 1355, 1321, 1322, 1323, 1324, 1325, 1303, 1304,
	1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1327,
	0, 1302, 1302, 1302, 1319, 1320, 1343, 1354, 1346, 1354,
	1350, 1271, 1272, 1254, 1255, 1337, 1338, 1339, 1340, 0,
	433, 0, 0, 0, 0, -2, 493, 498, 499, 0,
	0, 1001, 0, 1007, 520, 521, 522, 1009, 1010, 0,
	496, 523, 524, 525, 526, 527, 528, 0, 1734, 1735,
	1736, 1737, 1740, 1741, 0, 0, 494, 513, 501, 0,
	507, 78, 961, 117, 0, 961, 961, 0, 0, 139,
	0, 0, 0, 0, 0, 0, 102, 113, 90, 91,
	0, 0, 0, 0, 62, 876, 0, 879, 0, 0,
	0, 0, 0, 0, 0, 892, 0, 0, 101, 0,
	96, 80, 0, 0, 0, 103, 115, 0, 143, 145,
	0, 0, 900, 0, 1112, 0, 182, 1216, 0, 1217,
	723, 0, 0, 1785, 1730, 0, 0, 0, 0, 231,
	233, 0, 235, 236, 237, 0, 922, 0, 244, 241,
	286, 825, 2107, 0, 0, 312, 307, 0, 309, 0,
	875, 2107, 873, 1765, 0, 897, 0, 0, 0, 929,
	1794, 934, 940, 1015, 0, 316, 0, 1029, 1031, 0,
	0, 1237, 0, 1239, 1240, 0, 261, 262, 263, 0,
	338, 0, 150, 151, 0, 341, 0, 344, 0, 152,
	2107, 1720, 350, 0, 0, 0, 1115, 0, 0, 0,
	0, 167, 0, 0, 0, 0, 0, 0, 191, 0,
	1217, 191, 191, 1217, 470, 1217, 472, 0, 0, 605,
	191, 191, 191, 610, 611, 613, 614, -2, -2, 708,
	616, 617, 676, 0, 0, 0, 675, 627, 0, 717,
	2007, 727, 676, 1855, 676, 1855, 676, 1855, 638, 640,
	643, 668, 651, 655, 0, 0, 0, 660, 0, 662,
	0, 664, 676, 677, 680, 687, 692, 0, 0, 0,
	0, 0, 0, 0, 893, 0, 991, 1141, 1074, 451,
	1065, 1140, 1066, 1073, 1076, 0, 0, 1078, 0, 1080,
	0, 1136, 1137, 1144, 1145, 0, 1155, 1156, 1148, 0,
	-2, 0, 0, 1151, 1152, 1084, 0, 1101, 1102, 1103,
	1127, 1128, 950, 0, 2237, 1376, 1248, 1377, 1378, 1749,
	0, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391,
	1392, -2, -2, -2, -2, -2, -2, -2, -2, 1401,
	1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411,
	-2, -2, -2, 1415, 1416, -2, 1648, 1650, 0, 1713,
	0, -2, 0, -2, -2, -2, -2, 1435, 0, 1437,
	1442, 1444, 1446, 0, 0, 0, 0, 1712, 1456, 1696,
	1697, 0, 0, 1627, 1628, 1629, 1441, 0, 1460, 1711,
	1708, 0, 0, 1660, 1126, 1519, 0, 0, 0, 0,
	1526, 1511, 1658, 0, 1657, 0, 0, 0, 1668, 0,
	1703, 1699, 0, 1747, 1371, 1358, 1359, 1360, 1361, 1362,
	1363, 1373, 0, 1744, 1773, 1779, 1601, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1263, 1264,
	1265, 1266, 1267, 1268, 1269, 1270, 0, 0, 1554, 1555,
	1556, 1557, 1558, 0, 1560, 1561, 0, 1563, 1564, 0,
	1566, 1567, 0, 1569, 1570, 1571, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1573, 0, 1671, -2, -2,
	-2, -2, -2, -2, -2, -2, 0, 1575, 0, 1577,
	1662, 1682, 0, 0, 1461, 0, 0, 0, 1625, 0,
	1580, 1662, 1690, 0, 0, 0, 0, 0, 1662, 0,
	1695, 0, 1587, 0, 1589, 1110, 0, 0, 1243, 0,
	0, 0, 1717, 1243, 1243, 0, 1161, 0, 0, 1224,
	1225, 1226, 0, 0, 1227, 0, 1218, 1222, 1219, 1220,
	1214, 1177, 0, 0, 1751, 1214, 1183, 1213, 0, 854,
	1203, 1214, 1214, 0, -2, 1187, 1204, 0, 0, 400,
	402, 404, 408, 410, 0, 0, 1126, -2, 191, 853,
	0, 0, 0, 0, 0, 419, 421, 0, 0, 413,
	0, 416, 0, 1244, 1247, 0, 1261, 1262, 0, -2,
	0, 0, 1356, 0, 0, 0, 0, 486, 0, 1000,
	1008, 0, 517, 0, 519, 0, 1738, 1742, 1739, 1743,
	0, 508, 0, 0, 0, 0, 960, 121, 2107, 0,
	154, 0, 0, 818, 1757, 0, 0, 0, 0, 1870,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 87, 92, 0, 0, 0, 0, 0, 0,
	0, 877, 878, 880, 887, 889, 0, 883, 1745, 0,
	0, 884, 0, 886, 888, 890, 0, 0, 0, 0,
	0, 0, 0, 0, 89, 93, 0, 0, 0, 0,
	1724, 918, 916, 910, 911, 912, 913, 914, 915, 0,
	0, -2, 191, 0, 162, 182, 1723, 1733, 0, 205,
	208, 211, 214, 0, 239, 0, 0, 765, 738, 0,
	0, 294, 191, 0, 0, 308, 0, 871, 874, 0,
	854, 2107, 909, 1763, 0, 0, 0, 0, 927, 0,
	2107, 1752, 1793, 1794, 1017, 1023, 0, 1243, 0, 1047,
	1032, 0, 0, 0, 1047, 1051, 1052, 1054, 1055, 0,
	0, 1238, 0, 265, 357, 152, 152, 152, 347, 0,
	0, 152, 180, 354, 360, 412, 1115, 1115, 191, 189,
	1965, 187, 184, 186, 0, 0, 0, 766, 768, 769,
	770, 771, 0, 1794, 0, 1912, 1794, 0, 1035, 1037,
	0, 158, 164, 191, 0, 306, 469, 474, 600, 0,
	606, 607, 608, 645, 670, 618, 620, 621, 622, 0,
	728, 726, 629, 676, 632, 676, 635, 676, 654, 657,
	659, 0, 0, 0, 672, 0, 0, 0, 0, 0,
	0, 0, 712, 713, 714, 716, 1235, 1069, 1070, 1072,
	0, 1081, 0, 0, 1150, -2, -2, 1149, 1153, 1154,
	-2, -2, -2, -2, 1077, 0, 1086, 1083, 0, 1135,
	948, 949, 0, 0, 0, 0, -2, -2, 0, 0,
	0, 1457, 0, -2, 1436, 1439, 1443, 1445, 1447, 0,
	0, 0, 0, 0, 0, 1651, 0, 1653, 1458, 1706,
	1709, 1623, 0, 0, 1125, 1126, 1126, 0, 1525, 0,
	1659, 0, 1666, 1667, 0, 1518, 0, 1700, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1527, 0, 0,
	0, 1326, 1300, 0, 1354, 1352, 1353, 1347, 1354, 1351,
	1274, 0, 1273, 0, 0, 1559, 1562, 1565, 1568, 0,
	0, 0, 0, 1548, 0, 0, 0, 1552, 1572, 0,
	1574, 1576, 0, 0, 1578, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1464, 1465,
	1466, 1579, 1688, 1689, 0, 0, 0, 0, 0, 0,
	1585, 0, 1694, 1586, 1588, 1115, 1163, 1158, 1242, 0,
	1715, 1217, 1165, 1167, 1716, 1754, 1158, 1158, 0, 1663,
	0, 0, 1208, 0, 0, 0, 1210, 1181, 0, 0,
	1175, 0, 1171, 1172, 1173, 1174, 1182, 854, 1212, 1184,
	1188, 1773, 0, 1214, 0, 1199, 0, 1201, 1233, 0,
	1193, 1196, 0, 0, 192, 1786, 216, 220, 221, 217,
	218, 219, 428, 0, 0, 1665, 0, 1249, 0, 0,
	0, 0, 0, 432, 0, 482, -2, 515, 516, 518,
	0, 514, 118, 961, 0, 0, 952, 0, 123, 2107,
	132, 0, 794, 0, 1755, 0, 0, 0, 0, 0,
	963, 0, 0, 2107, 152, 2107, 152, 135, 138, 0,
	142, 140, 0, 0, 785, 79, 961, 82, 86, 94,
	0, 0, 0, 100, 0, 0, 0, 954, 0, 881,
	882, 885, 891, 63, 0, 956, 951, 144, 84, 88,
	95, 0, 958, 81, 0, 917, 895, 896, 0, 901,
	155, 0, 191, 1729, 0, 0, 0, 0, 0, 764,
	836, 0, 0, 0, 0, 300, 296, 0, 305, 311,
	310, 734, 0, 0, 0, -2, 924, 0, 926, 0,
	0, 0, 2107, 1019, 1023, 0, 1022, 1113, 1126, 315,
	1024, 1047, 0, 0, 0, 1034, 1030, 1027, 1243, 0,
	0, 0, 0, 0, 260, 339, 342, 345, 1721, 152,
	351, 363, 364, 166, 0, 0, 0, 0, 0, 191,
	0, 0, 0, 0, 0, 1794, 1794, 0, 1759, 0,
	0, 0, 0, 159, 0, 471, 0, 0, 0, 631,
	633, 636, 661, 663, 676, 701, 702, 780, 0, 780,
	0, 0, 1079, 0, 1147, 1085, 1129, 1130, 0, 950,
	0, 1379, 1420, 0, 0, -2, 0, 0, 1424, 0,
	0, 0, -2, 0, 0, 0, 1652, 1654, 0, 1708,
	1520, 0, 0, 0, 1524, 1508, 1509, 0, 1626, 1669,
	1698, 1702, 0, 1364, 1365, 1366, 1367, 1368, 1369, 1370,
	0, 1748, 1774, 1778, 1599, 1600, 1604, 1762, 0, 0,
	0, 1345, 1349, 0, 0, 1531, 0, 0, 0, 0,
	0, 0, 0, 1670, 1681, 1683, 1462, 1463, 1467, 1468,
	1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, -2, -2,
	-2, 1480, 1481, 1482, -2, -2, -2, 0, 0, 0,
	1684, 1686, 1687, 1691, 1692, 0, 1582, 1583, 1584, 1693,
	0, 1160, 0, 1241, 1164, 0, 1160, 1160, 1122, 1206,
	0, 0, 1229, 0, 1178, 0, 1179, 0, 1211, 0,
	1186, 1189, 1190, 1200, 0, 1192, 0, 1195, 0, 1520,
	-2, 430, 414, 0, 0, 1251, 0, 1329, 1333, 1357,
	434, 1215, 0, 0, 0, 0, 153, 792, 817, 0,
	0, 0, 943, 950, 0, 0, 823, 125, 0, 0,
	0, 133, 0, 0, 130, 0, 137, 141, 0, 0,
	0, 0, 0, 97, 98, 99, 0, 104, 0, 105,
	0, 0, 0, 0, 0, 0, 920, 921, 181, 156,
	234, 908, 240, 774, 824, 0, 826, 0, 739, 0,
	0, 825, 292, 0, 299, 0, 875, 0, 0, 898,
	925, 938, 0, 0, 0, 1021, 1023, 0, 1014, 1015,
	1143, 1025, 1045, -2, 1044, 0, 1126, 1053, 1050, 1056,
	1057, 0, 348, 188, 0, 183, 185, 0, 169, 0,
	0, 767, 772, 0, 0, 0, 0, 0, 1036, 1038,
	0, 175, 0, 601, 623, 671, 703, 779, 0, 0,
	705, 0, 0, 1146, 1133, 1134, 1131, 950, 1422, 1426,
	0, 0, 0, 1428, -2, 0, 1450, -2, -2, 1655,
	1707, 1499, 1126, 1521, 1523, 1510, 1701, 1374, 0, 1606,
	1603, 0, 1590, 1301, 1276, 1275, 1543, 1544, 0, 0,
	1547, 1549, 1550, 1551, 1680, 0, 0, 0, 0, 1581,
	1111, 1595, 0, 0, 1168, 1595, 1595, 1207, 0, 1209,
	1176, 1169, 0, 1774, 1202, 1194, 0, 0, 1245, 1250,
	0, 1328, 119, 120, 122, 0, 793, 0, 796, 0,
	0, 0, 0, 803, 804, 0, 0, 0, 0, 0,
	840, 850, 0, 1135, 0, 0, 0, 127, 147, 0,
	0, 962, 0, 0, 152, 152, 0, 0, 953, 0,
	0, 0, 0, 107, 0, 0, 955, 957, 0, 0,
	959, 782, 0, 836, 828, 829, 830, 0, 835, 837,
	0, 0, 752, 0, 748, 0, 0, 741, 765, 738,
	0, 297, 872, 906, 854, 0, 0, 0, 0, 0,
	1011, 1023, 0, 1016, 1017, 1047, 1142, 0, 0, 0,
	1033, 1143, 0, 190, 191, 0, 0, 0, 0, 0,
	0, 0, 191, 473, 475, 0, 0, 481, 778, 0,
	0, 0, 0, 1132, 1430, -2, -2, 1451, 0, 1775,
	1777, 1126, 0, 1592, 0, 0, -2, 0, 0, 0,
	1097, 0, 1159, 1157, 1098, 1099, 1228, 0, 1197, 0,
	1252, 124, 0, 797, 798, 1758, 800, 0, 802, 805,
	0, 808, 1796, 0, 812, 819, 841, 0, 774, 0,
	846, 847, 848, 944, 945, 852, 0, 126, 128, 146,
	947, 0, 129, 136, 0, 0, 83, 0, 0, 1848,
	110, 108, 106, 85, 0, 738, 781, 0, 827, 0,
	838, 839, 742, 0, 740, 0, 0, 0, 0, 0,
	298, 301, 0, 304, 0, 0, 937, 0, 0, 0,
	0, 1018, 1019, 313, 0, 0, 0, 1047, 1058, 168,
	0, 0, 852, 0, 0, 816, 0, 173, 0, 477,
	0, 479, 0, 704, 706, 0, 0, 1522, 1610, 0,
	1545, 1546, -2, 0, 1488, 1594, 1596, 0, 1170, 1246,
	795, 799, 0, 0, 0, 858, 0, 0, 0, 844,
	845, 782, 0, 774, 0, 0, 149, 0, 0, 0,
	0, 0, 0, 0, 0, 742, 0, 0, 750, 0,
	753, 0, 749, 746, 747, 774, 0, 302, 303, 0,
	0, 938, 0, 0, 1020, 1021, 0, 1040, 1041, 1043,
	1048, 0, 0, 850, 852, 815, 0, 476, 0, 0,
	709, 710, 0, 0, 0, 0, 1605, 1489, 0, 0,
	0, 0, 807, 863, 0, 0, 0, 842, 843, 840,
	0, 821, 0, 854, 131, 0, 946, 852, 0, 786,
	0, 0, 789, 0, 0, 111, 1848, 109, 0, 736,
	0, 0, 832, 834, 0, 754, 782, 752, 907, 852,
	0, 850, 0, 1012, 0, 1042, 191, 191, 774, 850,
	191, 478, 480, 1602, 1622, 1611, -2, 2067, 1852, 0,
	1622, 1622, 1597, 1598, 0, 0, 809, 859, 860, 0,
	855, 856, 857, 1795, 810, 811, 820, 849, 0, 858,
	148, 774, 783, 0, 0, 784, 0, 0, 114, 0,
	116, 0, 831, 0, 0, 0, 0, 738, 742, 850,
	0, 774, 0, 1243, 170, 171, 782, 774, 172, 1607,
	0, 0, 1613, 1614, 1615, 1616, 1617, 1608, 1609, 801,
	0, 861, 0, 862, 0, 0, 0, 0, 863, 134,
	787, 0, 790, 0, 112, 0, 833, 743, 0, 745,
	742, 751, 774, 0, 782, 0, 1039, 813, 782, 0,
	1619, 1620, 0, 0, 0, 864, 0, 867, 868, 0,
	865, 0, 840, 0, 0, 777, 744, 737, 782, 852,
	935, 850, 814, 1618, 1621, 1612, 806, 866, 869, 870,
	851, 822, 0, 0, 773, 775, 776, 935, 850, 932,
	0, 774, 782, 0, 930, 774, 936, 782, 788, 0,
	782, 935, 0, 935, 933, 0, 931, 782, 791,
}
var sqlTok1 = [...]int{

	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 475, 3, 481, 476, 3,
	486, 487, 479, 477, 491, 478, 488, 480, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 494, 3,
	467, 469, 468, 472, 490, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 484, 3, 485, 482, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 492, 474, 493, 470,
}
var sqlTok2 = [...]int{

	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 243, 244, 245, 246, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257,
}
var sqlTok3 = [...]int{
	57600, 258, 57601, 259, 57602, 260, 57603, 261, 57604, 262,
	57605, 263, 57606, 264, 57607, 265, 57608, 266, 57609, 267,
	57610, 268, 57611, 269, 57612, 270, 57613, 271, 57614, 272,
	57615, 273, 57616, 274, 57617, 275, 57618, 276, 57619, 277,
	57620, 278, 57621, 279, 57622, 280, 57623, 281, 57624, 282,
	57625, 283, 57626, 284, 57627, 285, 57628, 286, 57629, 287,
	57630, 288, 57631, 289, 57632, 290, 57633, 291, 57634, 292,
	57635, 293, 57636, 294, 57637, 295, 57638, 296, 57639, 297,
	57640, 298, 57641, 299, 57642, 300, 57643, 301, 57644, 302,
	57645, 303, 57646, 304, 57647, 305, 57648, 306, 57649, 307,
	57650, 308, 57651, 309, 57652, 310, 57653, 311, 57654, 312,
	57655, 313, 57656, 314, 57657, 315, 57658, 316, 57659, 317,
	57660, 318, 57661, 319, 57662, 320, 57663, 321, 57664, 322,
	57665, 323, 57666, 324, 57667, 325, 57668, 326, 57669, 327,
	57670, 328, 57671, 329, 57672, 330, 57673, 331, 57674, 332,
	57675, 333, 57676, 334, 57677, 335, 57678, 336, 57679, 337,
	57680, 338, 57681, 339, 57682, 340, 57683, 341, 57684, 342,
	57685, 343, 57686, 344, 57687, 345, 57688, 346, 57689, 347,
	57690, 348, 57691, 349, 57692, 350, 57693, 351, 57694, 352,
	57695, 353, 57696, 354, 57697, 355, 57698, 356, 57699, 357,
	57700, 358, 57701, 359, 57702, 360, 57703, 361, 57704, 362,
	57705, 363, 57706, 364, 57707, 365, 57708, 366, 57709, 367,
	57710, 368, 57711, 369, 57712, 370, 57713, 371, 57714, 372,
	57715, 373, 57716, 374, 57717, 375, 57718, 376, 57719, 377,
	57720, 378, 57721, 379, 57722, 380, 57723, 381, 57724, 382,
	57725, 383, 57726, 384, 57727, 385, 57728, 386, 57729, 387,
	57730, 388, 57731, 389, 57732, 390, 57733, 391, 57734, 392,
	57735, 393, 57736, 394, 57737, 395, 57738, 396, 57739, 397,
	57740, 398, 57741, 399, 57742, 400, 57743, 401, 57744, 402,
	57745, 403, 57746, 404, 57747, 405, 57748, 406, 57749, 407,
	57750, 408, 57751, 409, 57752, 410, 57753, 411, 57754, 412,
	57755, 413, 57756, 414, 57757, 415, 57758, 416, 57759, 417,
	57760, 418, 57761, 419, 57762, 420, 57763, 421, 57764, 422,
	57765, 423, 57766, 424, 57767, 425, 57768, 426, 57769, 427,
	57770, 428, 57771, 429, 57772, 430, 57773, 431, 57774, 432,
	57775, 433, 57776, 434, 57777, 435, 57778, 436, 57779, 437,
	57780, 438, 57781, 439, 57782, 440, 57783, 441, 57784, 442,
	57785, 443, 57786, 444, 57787, 445, 57788, 446, 57789, 447,
	57790, 448, 57791, 449, 57792, 450, 57793, 451, 57794, 452,
	57795, 453, 57796, 454, 57797, 455, 57798, 456, 57799, 457,
	57800, 458, 57801, 459, 57802, 460, 57803, 461, 57804, 462,
	57805, 463, 57806, 464, 57807, 465, 57808, 466, 57809, 471,
	57810, 473, 57811, 483, 57812, 489, 0,
}

var sqlErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	sqlDebug        = 0
	sqlErrorVerbose = false
)

type sqlLexer interface {
	Lex(lval *sqlSymType) int
	Error(s string)
}

type sqlParser interface {
	Parse(sqlLexer) int
	Lookahead() int
}

type sqlParserImpl struct {
	lval  sqlSymType
	stack [sqlInitialStackSize]sqlSymType
	char  int
}

func (p *sqlParserImpl) Lookahead() int {
	return p.char
}

func sqlNewParser() sqlParser {
	return &sqlParserImpl{}
}

const sqlFlag = -1000

func sqlTokname(c int) string {
	if c >= 1 && c-1 < len(sqlToknames) {
		if sqlToknames[c-1] != "" {
			return sqlToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func sqlStatname(s int) string {
	if s >= 0 && s < len(sqlStatenames) {
		if sqlStatenames[s] != "" {
			return sqlStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func sqlErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !sqlErrorVerbose {
		return "syntax error"
	}

	for _, e := range sqlErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + sqlTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := sqlPact[state]
	for tok := TOKSTART; tok-1 < len(sqlToknames); tok++ {
		if n := base + tok; n >= 0 && n < sqlLast && sqlChk[sqlAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if sqlDef[state] == -2 {
		i := 0
		for sqlExca[i] != -1 || sqlExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; sqlExca[i] >= 0; i += 2 {
			tok := sqlExca[i]
			if tok < TOKSTART || sqlExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if sqlExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += sqlTokname(tok)
	}
	return res
}

func sqllex1(lex sqlLexer, lval *sqlSymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = sqlTok1[0]
		goto out
	}
	if char < len(sqlTok1) {
		token = sqlTok1[char]
		goto out
	}
	if char >= sqlPrivate {
		if char < sqlPrivate+len(sqlTok2) {
			token = sqlTok2[char-sqlPrivate]
			goto out
		}
	}
	for i := 0; i < len(sqlTok3); i += 2 {
		token = sqlTok3[i+0]
		if token == char {
			token = sqlTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = sqlTok2[1] /* unknown char */
	}
	if sqlDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", sqlTokname(token), uint(char))
	}
	return char, token
}

func sqlParse(sqllex sqlLexer) int {
	return sqlNewParser().Parse(sqllex)
}

func (sqlrcvr *sqlParserImpl) Parse(sqllex sqlLexer) int {
	var sqln int
	var sqlVAL sqlSymType
	var sqlDollar []sqlSymType
	_ = sqlDollar // silence set and not used
	sqlS := sqlrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	sqlstate := 0
	sqlrcvr.char = -1
	sqltoken := -1 // sqlrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		sqlstate = -1
		sqlrcvr.char = -1
		sqltoken = -1
	}()
	sqlp := -1
	goto sqlstack

ret0:
	return 0

ret1:
	return 1

sqlstack:
	/* put a state and value onto the stack */
	if sqlDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", sqlTokname(sqltoken), sqlStatname(sqlstate))
	}

	sqlp++
	if sqlp >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlS[sqlp] = sqlVAL
	sqlS[sqlp].yys = sqlstate

sqlnewstate:
	sqln = sqlPact[sqlstate]
	if sqln <= sqlFlag {
		goto sqldefault /* simple state */
	}
	if sqlrcvr.char < 0 {
		sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
	}
	sqln += sqltoken
	if sqln < 0 || sqln >= sqlLast {
		goto sqldefault
	}
	sqln = sqlAct[sqln]
	if sqlChk[sqln] == sqltoken { /* valid shift */
		sqlrcvr.char = -1
		sqltoken = -1
		sqlVAL = sqlrcvr.lval
		sqlstate = sqln
		if Errflag > 0 {
			Errflag--
		}
		goto sqlstack
	}

sqldefault:
	/* default state action */
	sqln = sqlDef[sqlstate]
	if sqln == -2 {
		if sqlrcvr.char < 0 {
			sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if sqlExca[xi+0] == -1 && sqlExca[xi+1] == sqlstate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			sqln = sqlExca[xi+0]
			if sqln < 0 || sqln == sqltoken {
				break
			}
		}
		sqln = sqlExca[xi+1]
		if sqln < 0 {
			goto ret0
		}
	}
	if sqln == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			sqllex.Error(sqlErrorMessage(sqlstate, sqltoken))
			Nerrs++
			if sqlDebug >= 1 {
				__yyfmt__.Printf("%s", sqlStatname(sqlstate))
				__yyfmt__.Printf(" saw %s\n", sqlTokname(sqltoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for sqlp >= 0 {
				sqln = sqlPact[sqlS[sqlp].yys] + sqlErrCode
				if sqln >= 0 && sqln < sqlLast {
					sqlstate = sqlAct[sqln] /* simulate a shift of "error" */
					if sqlChk[sqlstate] == sqlErrCode {
						goto sqlstack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if sqlDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", sqlS[sqlp].yys)
				}
				sqlp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if sqlDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", sqlTokname(sqltoken))
			}
			if sqltoken == sqlEofCode {
				goto ret1
			}
			sqlrcvr.char = -1
			sqltoken = -1
			goto sqlnewstate /* try again in the same state */
		}
	}

	/* reduction by production sqln */
	if sqlDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", sqln, sqlStatname(sqlstate))
	}

	sqlnt := sqln
	sqlpt := sqlp
	_ = sqlpt // guard against "declared and not used"

	sqlp -= sqlR2[sqln]
	// sqlp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if sqlp+1 >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlVAL = sqlS[sqlp+1]

	/* consult goto table to find next state */
	sqln = sqlR1[sqln]
	sqlg := sqlPgo[sqln]
	sqlj := sqlg + sqlS[sqlp].yys + 1

	if sqlj >= sqlLast {
		sqlstate = sqlAct[sqlg]
	} else {
		sqlstate = sqlAct[sqlj]
		if sqlChk[sqlstate] != -sqln {
			sqlstate = sqlAct[sqlg]
		}
	}
	// dummy call; replaced with literal code
	switch sqlnt {

	case 1:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1137
		{
			sqllex.(*lexer).SetStmt(sqlDollar[1].union.stmt())
		}
	case 2:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1142
		{
			return helpWith(sqllex, "")
		}
	case 7:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1146
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 9:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1147
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 11:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1148
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 13:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1149
		{
			return helpWith(sqllex, "GRANT")
		}
	case 15:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1150
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 17:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1151
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 19:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1152
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 21:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1153
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 27:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1160
		{
			sqlVAL.union.val = tree.Statement(nil)
		}
	case 30:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1169
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 31:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1170
		{
			return helpWith(sqllex, "ALTER")
		}
	case 33:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1173
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 35:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1174
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 37:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1175
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 39:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1176
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 41:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1177
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 43:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1178
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 45:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1179
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 54:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1233
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 56:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1259
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 58:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1270
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 61:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1285
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 62:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1289
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[3].union.unresolvedObjectName(), Options: sqlDollar[4].union.seqOpts(), IfExists: false}
		}
	case 63:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1293
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[5].union.unresolvedObjectName(), Options: sqlDollar[6].union.seqOpts(), IfExists: true}
		}
	case 66:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1307
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 68:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1326
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 77:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1358
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 78:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1362
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[3].union.unresolvedObjectName(), IfExists: false, Cmds: sqlDollar[4].union.alterTableCmds()}
		}
	case 79:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1366
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[5].union.unresolvedObjectName(), IfExists: true, Cmds: sqlDollar[6].union.alterTableCmds()}
		}
	case 80:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1372
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[3].union.tableIndexName(), IfExists: false, Cmds: sqlDollar[4].union.alterIndexCmds()}
		}
	case 81:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1376
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[5].union.tableIndexName(), IfExists: true, Cmds: sqlDollar[6].union.alterIndexCmds()}
		}
	case 82:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1382
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   tree.Expr(nil),
			}
		}
	case 83:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1391
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   sqlDollar[9].union.expr(),
			}
		}
	case 84:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1402
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: tree.Expr(nil)}
		}
	case 85:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1406
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: sqlDollar[9].union.expr()}
		}
	case 86:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1412
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 87:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1420
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				All:          true,
			}
		}
	case 88:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1430
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 89:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1434
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), All: true}
		}
	case 92:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1444
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[5].union.slct(),
			}
		}
	case 93:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1455
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[5].union.slct()}
		}
	case 94:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1462
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:  tree.TableIndexName{Table: name},
				Rows:          sqlDollar[6].union.slct(),
				RelocateLease: true,
			}
		}
	case 95:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1474
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), RelocateLease: true}
		}
	case 96:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1481
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 97:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1489
		{

			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: sqlDollar[4].union.expr()}
		}
	case 98:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1494
		{
			sqlVAL.union.val = &tree.SetZoneConfig{Options: sqlDollar[4].union.kvOptions()}
		}
	case 99:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1498
		{

			sqlVAL.union.val = &tree.SetZoneConfig{SetDefault: true}
		}
	case 100:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1503
		{
			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: tree.DNull}
		}
	case 101:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1509
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{Database: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 102:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1517
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
			}
			sqlVAL.union.val = s
		}
	case 103:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1528
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[3].union.tableIndexName(),
			}
			sqlVAL.union.val = s
		}
	case 104:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1538
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 105:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1548
		{
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 106:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1557
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[9].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			s.AllIndexes = true
			sqlVAL.union.val = s
		}
	case 107:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1568
		{
			err := errors.New("index name should not be specified in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION ... OF INDEX")
			return setErr(sqllex, err)
		}
	case 108:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1574
		{
			err := errors.New("index wildcard unsupported in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION <partition> OF INDEX <tablename>@*")
			return setErr(sqllex, err)
		}
	case 109:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1582
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), "."))}}
		}
	case 110:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1586
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), ".")), Value: sqlDollar[3].union.expr()}}
		}
	case 111:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1590
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), ".")), Value: sqlDollar[5].union.expr()})
		}
	case 112:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1594
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), "."))})
		}
	case 113:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1600
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 114:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:1605
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{
				TableOrIndex: tree.TableIndexName{Table: name},
				From:         sqlDollar[7].union.exprs(),
				To:           sqlDollar[11].union.exprs(),
			}
		}
	case 115:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1616
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName()}
		}
	case 116:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:1620
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName(), From: sqlDollar[7].union.exprs(), To: sqlDollar[11].union.exprs()}
		}
	case 117:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1626
		{
			sqlVAL.union.val = tree.AlterTableCmds{sqlDollar[1].union.alterTableCmd()}
		}
	case 118:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1630
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterTableCmds(), sqlDollar[3].union.alterTableCmd())
		}
	case 119:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1637
		{
			sqlVAL.union.val = &tree.AlterTableRenameColumn{Column: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 120:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1642
		{
			sqlVAL.union.val = &tree.AlterTableRenameConstraint{Constraint: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 121:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1647
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[2].union.colDef()}
		}
	case 122:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1652
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[5].union.colDef()}
		}
	case 123:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1657
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[3].union.colDef()}
		}
	case 124:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1662
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[6].union.colDef()}
		}
	case 125:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1667
		{
			sqlVAL.union.val = &tree.AlterTableSetDefault{Column: tree.Name(sqlDollar[3].str), Default: sqlDollar[4].union.expr()}
		}
	case 126:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1672
		{
			sqlVAL.union.val = &tree.AlterTableDropNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 127:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1677
		{
			sqlVAL.union.val = &tree.AlterTableDropStored{Column: tree.Name(sqlDollar[3].str)}
		}
	case 128:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1682
		{
			sqlVAL.union.val = &tree.AlterTableSetNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 129:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1687
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     true,
				Column:       tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 130:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1696
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     false,
				Column:       tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 131:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1708
		{
			sqlVAL.union.val = &tree.AlterTableAlterColumnType{
				Column:    tree.Name(sqlDollar[3].str),
				ToType:    sqlDollar[6].union.colType(),
				Collation: sqlDollar[7].str,
				Using:     sqlDollar[8].union.expr(),
			}
		}
	case 132:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1718
		{
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      sqlDollar[2].union.constraintDef(),
				ValidationBehavior: sqlDollar[3].union.validationBehavior(),
			}
		}
	case 133:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1725
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "alter constraint")
		}
	case 134:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:1729
		{
			sqlVAL.union.val = &tree.AlterTableAlterPrimaryKey{
				Columns:    sqlDollar[7].union.idxElems(),
				Sharded:    sqlDollar[9].union.shardedIndexDef(),
				Interleave: sqlDollar[10].union.interleave(),
			}
		}
	case 135:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1737
		{
			sqlVAL.union.val = &tree.AlterTableValidateConstraint{
				Constraint: tree.Name(sqlDollar[3].str),
			}
		}
	case 136:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1744
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     true,
				Constraint:   tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 137:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1753
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     false,
				Constraint:   tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 138:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1762
		{
			sqlVAL.union.val = &tree.AlterTableSetAudit{Mode: sqlDollar[3].union.auditMode()}
		}
	case 139:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1767
		{
			sqlVAL.union.val = &tree.AlterTablePartitionBy{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 140:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1774
		{

			sqlVAL.union.val = &tree.AlterTableInjectStats{
				Stats: sqlDollar[3].union.expr(),
			}
		}
	case 141:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1782
		{
			sqlVAL.union.val = tree.AuditModeReadWrite
		}
	case 142:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1783
		{
			sqlVAL.union.val = tree.AuditModeDisable
		}
	case 143:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1787
		{
			sqlVAL.union.val = tree.AlterIndexCmds{sqlDollar[1].union.alterIndexCmd()}
		}
	case 144:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1791
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterIndexCmds(), sqlDollar[3].union.alterIndexCmd())
		}
	case 145:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1797
		{
			sqlVAL.union.val = &tree.AlterIndexPartitionBy{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 146:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1805
		{
			sqlVAL.union.val = sqlDollar[3].union.expr()
		}
	case 147:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1809
		{
			sqlVAL.union.val = nil
		}
	case 148:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1815
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 149:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1819
		{
			sqlVAL.union.val = nil
		}
	case 150:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1826
		{
			sqlVAL.union.val = tree.DropCascade
		}
	case 151:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1830
		{
			sqlVAL.union.val = tree.DropRestrict
		}
	case 152:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1834
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 153:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1840
		{
			sqlVAL.union.val = tree.ValidationSkip
		}
	case 154:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1844
		{
			sqlVAL.union.val = tree.ValidationDefault
		}
	case 155:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1870
		{
			sqlVAL.union.val = &tree.Backup{DescriptorCoverage: tree.AllDescriptors, To: sqlDollar[3].union.partitionedBackup(), IncrementalFrom: sqlDollar[5].union.exprs(), AsOf: sqlDollar[4].union.asOfClause(), Options: sqlDollar[6].union.kvOptions()}
		}
	case 156:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1874
		{
			sqlVAL.union.val = &tree.Backup{Targets: sqlDollar[2].union.targetList(), To: sqlDollar[4].union.partitionedBackup(), IncrementalFrom: sqlDollar[6].union.exprs(), AsOf: sqlDollar[5].union.asOfClause(), Options: sqlDollar[7].union.kvOptions()}
		}
	case 157:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1877
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 158:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1900
		{
			sqlVAL.union.val = &tree.Restore{DescriptorCoverage: tree.AllDescriptors, From: sqlDollar[3].union.partitionedBackups(), AsOf: sqlDollar[4].union.asOfClause(), Options: sqlDollar[5].union.kvOptions()}
		}
	case 159:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1904
		{
			sqlVAL.union.val = &tree.Restore{Targets: sqlDollar[2].union.targetList(), From: sqlDollar[4].union.partitionedBackups(), AsOf: sqlDollar[5].union.asOfClause(), Options: sqlDollar[6].union.kvOptions()}
		}
	case 160:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1907
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 161:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1911
		{
			sqlVAL.union.val = tree.PartitionedBackup{sqlDollar[1].union.expr()}
		}
	case 162:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1915
		{
			sqlVAL.union.val = tree.PartitionedBackup(sqlDollar[2].union.exprs())
		}
	case 163:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1921
		{
			sqlVAL.union.val = []tree.PartitionedBackup{sqlDollar[1].union.partitionedBackup()}
		}
	case 164:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1925
		{
			sqlVAL.union.val = append(sqlDollar[1].union.partitionedBackups(), sqlDollar[3].union.partitionedBackup())
		}
	case 165:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1931
		{
			sqlVAL.str = strings.ToUpper(sqlDollar[1].str)
		}
	case 166:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1968
		{

			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[4].union.expr()}, Options: sqlDollar[6].union.kvOptions()}
		}
	case 167:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1973
		{
			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[3].union.expr()}, Options: sqlDollar[4].union.kvOptions()}
		}
	case 168:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1977
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[7].union.expr()}, Options: sqlDollar[9].union.kvOptions()}
		}
	case 169:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1983
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[6].union.expr()}, Options: sqlDollar[7].union.kvOptions()}
		}
	case 170:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:1988
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateFile: sqlDollar[6].union.expr(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 171:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:1993
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateDefs: sqlDollar[5].union.tblDefs(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 172:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:1998
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: sqlDollar[5].union.nameList(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 173:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2003
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: nil, FileFormat: sqlDollar[4].str, Files: sqlDollar[7].union.exprs(), Options: sqlDollar[9].union.kvOptions()}
		}
	case 174:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2007
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 175:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2023
		{
			sqlVAL.union.val = &tree.Export{Query: sqlDollar[7].union.slct(), FileFormat: sqlDollar[3].str, File: sqlDollar[4].union.expr(), Options: sqlDollar[5].union.kvOptions()}
		}
	case 176:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2026
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 177:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2030
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 178:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2034
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 179:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2042
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 180:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2046
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 181:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2052
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 182:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2056
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 183:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2062
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 184:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2066
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 185:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2070
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 186:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2074
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 187:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2080
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 188:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2084
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[3].union.kvOption())
		}
	case 189:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2090
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 190:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2094
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 191:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2098
		{
			sqlVAL.union.val = nil
		}
	case 192:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2104
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CopyFrom{
				Table:   name,
				Columns: sqlDollar[3].union.nameList(),
				Stdin:   true,
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 194:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2118
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 196:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2119
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 198:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2120
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 199:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2121
		{
			return helpWith(sqllex, "CANCEL")
		}
	case 200:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2131
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.CancelJob,
			}
		}
	case 201:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2139
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 202:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2141
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 203:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2144
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 204:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2154
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 205:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2163
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 206:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2171
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 207:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2173
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 208:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2177
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 209:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2180
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 210:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2190
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 211:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2199
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 212:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2207
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 213:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2209
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 214:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2213
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 215:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2216
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 216:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2220
		{
			sqlVAL.union.val = &tree.CommentOnDatabase{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 217:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2224
		{
			sqlVAL.union.val = &tree.CommentOnTable{Table: sqlDollar[4].union.unresolvedObjectName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 218:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2228
		{
			varName, err := sqlDollar[4].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[4].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = &tree.CommentOnColumn{ColumnItem: columnItem, Comment: sqlDollar[6].union.strPtr()}
		}
	case 219:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2241
		{
			sqlVAL.union.val = &tree.CommentOnIndex{Index: sqlDollar[4].union.tableIndexName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 220:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2247
		{
			t := sqlDollar[1].str
			sqlVAL.union.val = &t
		}
	case 221:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2252
		{
			var str *string
			sqlVAL.union.val = str
		}
	case 223:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2264
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 226:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2266
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 227:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2267
		{
		}
	case 228:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2268
		{
			return helpWith(sqllex, "CREATE")
		}
	case 229:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2271
		{
			return unimplemented(sqllex, "create aggregate")
		}
	case 230:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2272
		{
			return unimplemented(sqllex, "create cast")
		}
	case 231:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2273
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create constraint")
		}
	case 232:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2274
		{
			return unimplemented(sqllex, "create conversion")
		}
	case 233:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2275
		{
			return unimplemented(sqllex, "create def conv")
		}
	case 234:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2276
		{
			return unimplemented(sqllex, "create extension "+sqlDollar[6].str)
		}
	case 235:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2277
		{
			return unimplemented(sqllex, "create extension "+sqlDollar[3].str)
		}
	case 236:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2278
		{
			return unimplemented(sqllex, "create foreign table")
		}
	case 237:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2279
		{
			return unimplemented(sqllex, "create fdw")
		}
	case 238:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2280
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 239:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2281
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 240:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2282
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create language "+sqlDollar[6].str)
		}
	case 241:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2283
		{
			return unimplementedWithIssue(sqllex, 41649)
		}
	case 242:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2284
		{
			return unimplemented(sqllex, "create operator")
		}
	case 243:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2285
		{
			return unimplemented(sqllex, "create publication")
		}
	case 244:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2286
		{
			return unimplemented(sqllex, "create rule")
		}
	case 245:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2287
		{
			return unimplemented(sqllex, "create server")
		}
	case 246:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2288
		{
			return unimplemented(sqllex, "create subscription")
		}
	case 247:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2289
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "create text")
		}
	case 248:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2290
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create")
		}
	case 249:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2293
		{
		}
	case 250:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2294
		{
		}
	case 251:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2297
		{
		}
	case 252:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2298
		{
		}
	case 253:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2301
		{
		}
	case 254:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2302
		{
		}
	case 255:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2305
		{
			return unimplemented(sqllex, "drop aggregate")
		}
	case 256:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2306
		{
			return unimplemented(sqllex, "drop cast")
		}
	case 257:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2307
		{
			return unimplemented(sqllex, "drop collation")
		}
	case 258:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2308
		{
			return unimplemented(sqllex, "drop conversion")
		}
	case 259:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2309
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "drop")
		}
	case 260:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2310
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[5].str)
		}
	case 261:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2311
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[3].str)
		}
	case 262:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2312
		{
			return unimplemented(sqllex, "drop foreign table")
		}
	case 263:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2313
		{
			return unimplemented(sqllex, "drop fdw")
		}
	case 264:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2314
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop function")
		}
	case 265:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2315
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop language "+sqlDollar[4].str)
		}
	case 266:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2316
		{
			return unimplemented(sqllex, "drop operator")
		}
	case 267:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2317
		{
			return unimplemented(sqllex, "drop publication")
		}
	case 268:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2318
		{
			return unimplemented(sqllex, "drop rule")
		}
	case 269:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2319
		{
			return unimplementedWithIssueDetail(sqllex, 26443, "drop")
		}
	case 270:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2320
		{
			return unimplemented(sqllex, "drop server")
		}
	case 271:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2321
		{
			return unimplemented(sqllex, "drop subscription")
		}
	case 272:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2322
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "drop text")
		}
	case 273:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2323
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "drop type")
		}
	case 274:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2324
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "drop")
		}
	case 277:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2328
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 279:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2329
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 281:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2330
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 283:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2331
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 285:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2332
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 286:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2334
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 287:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2335
		{
		}
	case 289:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2336
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 291:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2337
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 292:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2347
		{
			sqlVAL.union.val = &tree.CreateStats{
				Name:        tree.Name(sqlDollar[3].str),
				ColumnNames: sqlDollar[4].union.nameList(),
				Table:       sqlDollar[6].union.tblExpr(),
				Options:     *sqlDollar[7].union.createStatsOptions(),
			}
		}
	case 293:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2355
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 294:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2359
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 295:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2363
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 296:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2369
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 297:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2373
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
			}
		}
	case 298:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2382
		{

			sqlVAL.union.val = sqlDollar[3].union.createStatsOptions()
		}
	case 299:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2389
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 300:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2395
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{}
		}
	case 301:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2401
		{
			sqlVAL.union.val = sqlDollar[1].union.createStatsOptions()
		}
	case 302:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2405
		{
			a := sqlDollar[1].union.createStatsOptions()
			b := sqlDollar[2].union.createStatsOptions()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 303:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2416
		{

			value, _ := constant.Float64Val(sqlDollar[2].union.numVal().AsConstantValue())
			if value < 0.0 || value >= 1.0 {
				sqllex.Error("THROTTLING fraction must be between 0 and 1")
				return 1
			}
			sqlVAL.union.val = &tree.CreateStatsOptions{
				Throttling: value,
			}
		}
	case 304:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2428
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 305:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2436
		{
			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				SinkURI: sqlDollar[5].union.expr(),
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 306:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2444
		{

			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 307:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2454
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[1].union.tablePatterns()}
		}
	case 308:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2458
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 309:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2464
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()}
		}
	case 310:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2468
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedObjectName().ToUnresolvedName())
		}
	case 311:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2475
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 312:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2479
		{

			sqlVAL.union.val = nil
		}
	case 313:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2493
		{
			sqlVAL.union.val = &tree.Delete{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[4].union.tblExpr(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[6].union.expr()),
				OrderBy:   sqlDollar[7].union.orderBy(),
				Limit:     sqlDollar[8].union.limit(),
				Returning: sqlDollar[9].union.retClause(),
			}
		}
	case 314:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2503
		{
			return helpWith(sqllex, "DELETE")
		}
	case 315:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2506
		{
			return unimplementedWithIssueDetail(sqllex, 40963, "delete using")
		}
	case 316:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2507
		{
		}
	case 317:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2515
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeAll}
		}
	case 318:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2518
		{
			return unimplemented(sqllex, "discard plans")
		}
	case 319:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2519
		{
			return unimplemented(sqllex, "discard sequences")
		}
	case 320:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2520
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 321:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2521
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 322:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2522
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 325:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2531
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 326:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2532
		{
		}
	case 327:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2533
		{
			return helpWith(sqllex, "DROP")
		}
	case 329:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2536
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 331:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2537
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 333:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2538
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 335:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2539
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 337:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2540
		{
			return helpWith(sqllex, "DROP SEQUENCE")
		}
	case 338:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2548
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 339:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2552
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 340:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2555
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 341:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2563
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 342:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2567
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 343:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2570
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 344:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2578
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 345:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2582
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 346:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2585
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 347:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2593
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[4].union.newTableIndexNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[5].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 348:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2602
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[6].union.newTableIndexNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[7].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 349:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2610
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 350:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2618
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[3].str),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 351:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2626
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[5].str),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 352:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2633
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 353:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2641
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[3].union.exprs(), IfExists: false, IsRole: sqlDollar[2].union.bool()}
		}
	case 354:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2645
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[5].union.exprs(), IfExists: true, IsRole: sqlDollar[2].union.bool()}
		}
	case 355:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2648
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 356:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2652
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 357:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2657
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 358:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2680
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(nil, sqlDollar[2].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 359:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2687
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 360:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2689
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(sqlDollar[3].union.strs(), sqlDollar[5].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 361:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2697
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"DISTSQL", "ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 362:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2705
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"DISTSQL", "ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 363:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2713
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 364:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2721
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 365:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2732
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 368:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2736
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 372:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2739
		{
			return helpWith(sqllex, "DELETE")
		}
	case 375:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2741
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 377:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2742
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 379:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2743
		{
			return helpWith(sqllex, "INSERT")
		}
	case 381:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2744
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 384:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2746
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 386:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2747
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 388:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2748
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 390:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2751
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 394:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2756
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 396:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2757
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 398:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2758
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 400:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2763
		{
			return helpWith(sqllex, "DELETE")
		}
	case 402:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2764
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 404:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2765
		{
			return helpWith(sqllex, "INSERT")
		}
	case 405:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2767
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 408:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2771
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 410:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2772
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 411:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2776
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 412:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2780
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 413:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2790
		{
			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.colTypes(),
				Statement: sqlDollar[5].union.stmt(),
			}
		}
	case 414:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2798
		{

			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.colTypes(),
				Statement: &tree.CannedOptPlan{Plan: sqlDollar[7].str},
			}
		}
	case 415:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2806
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 416:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2810
		{
			sqlVAL.union.val = sqlDollar[2].union.colTypes()
		}
	case 417:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2814
		{
			sqlVAL.union.val = []*types.T(nil)
		}
	case 418:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2824
		{
			sqlVAL.union.val = &tree.Execute{
				Name:   tree.Name(sqlDollar[2].str),
				Params: sqlDollar[3].union.exprs(),
			}
		}
	case 419:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2831
		{

			sqlVAL.union.val = &tree.Execute{
				Name:        tree.Name(sqlDollar[2].str),
				Params:      sqlDollar[3].union.exprs(),
				DiscardRows: true,
			}
		}
	case 420:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2839
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 421:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2843
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 422:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2847
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 423:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2857
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[2].str)}
		}
	case 424:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2861
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[3].str)}
		}
	case 425:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2865
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 426:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2869
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 427:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2872
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 428:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2892
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 429:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2896
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 430:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2900
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: true}
		}
	case 431:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2903
		{
			return helpWith(sqllex, "GRANT")
		}
	case 432:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2923
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 433:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2927
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 434:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2931
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[5].union.nameList(), Members: sqlDollar[7].union.nameList(), AdminOption: true}
		}
	case 435:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2934
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 436:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2939
		{
			sqlVAL.union.val = privilege.List{privilege.ALL}
		}
	case 437:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2943
		{
			privList, err := privilege.ListFromStrings(sqlDollar[1].union.nameList().ToStrings())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = privList
		}
	case 438:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2953
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 439:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2957
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 445:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2971
		{
			return helpWith(sqllex, "RESET")
		}
	case 447:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2972
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 448:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2980
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 449:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2984
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[3].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 450:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2987
		{
			return helpWith(sqllex, "RESET")
		}
	case 451:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2995
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: tree.DefaultVal{}}
		}
	case 452:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2998
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 453:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3009
		{
			sqlVAL.union.val = &tree.SetVar{Name: "database", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 454:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3012
		{
			return helpWith(sqllex, "USE")
		}
	case 456:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3016
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 457:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3017
		{
		}
	case 458:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3018
		{
			return unimplemented(sqllex, "set constraints")
		}
	case 459:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3019
		{
			return unimplementedWithIssue(sqllex, 32562)
		}
	case 461:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3023
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 463:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3024
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 465:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3025
		{
			return helpWith(sqllex, "USE")
		}
	case 468:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3041
		{
			return helpWith(sqllex, "SCRUB")
		}
	case 469:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3056
		{
			sqlVAL.union.val = &tree.Scrub{Typ: tree.ScrubDatabase, Database: tree.Name(sqlDollar[4].str), AsOf: sqlDollar[5].union.asOfClause()}
		}
	case 470:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3059
		{
			return helpWith(sqllex, "SCRUB DATABASE")
		}
	case 471:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3077
		{
			sqlVAL.union.val = &tree.Scrub{
				Typ:     tree.ScrubTable,
				Table:   sqlDollar[4].union.unresolvedObjectName(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: sqlDollar[6].union.scrubOptions(),
			}
		}
	case 472:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3085
		{
			return helpWith(sqllex, "SCRUB TABLE")
		}
	case 473:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3089
		{
			sqlVAL.union.val = sqlDollar[3].union.scrubOptions()
		}
	case 474:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3093
		{
			sqlVAL.union.val = tree.ScrubOptions{}
		}
	case 475:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3099
		{
			sqlVAL.union.val = tree.ScrubOptions{sqlDollar[1].union.scrubOption()}
		}
	case 476:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3103
		{
			sqlVAL.union.val = append(sqlDollar[1].union.scrubOptions(), sqlDollar[3].union.scrubOption())
		}
	case 477:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3109
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{}
		}
	case 478:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3113
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{IndexNames: sqlDollar[3].union.nameList()}
		}
	case 479:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3117
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{}
		}
	case 480:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3121
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{ConstraintNames: sqlDollar[3].union.nameList()}
		}
	case 481:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3125
		{
			sqlVAL.union.val = &tree.ScrubOptionPhysical{}
		}
	case 482:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3136
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: sqlDollar[6].union.expr()}
		}
	case 483:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3139
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 486:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3149
		{
			sqlVAL.union.val = &tree.SetVar{Values: sqlDollar[4].union.exprs()}
		}
	case 487:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3165
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 488:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3169
		{
			sqlVAL.union.val = sqlDollar[2].union.stmt()
		}
	case 489:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3174
		{
			sqlVAL.union.val = &tree.SetSessionCharacteristics{Modes: sqlDollar[6].union.transactionModes()}
		}
	case 490:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3191
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[3].union.transactionModes()}
		}
	case 491:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3194
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 492:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3196
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[4].union.transactionModes()}
		}
	case 493:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3199
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 494:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3203
		{

			varName := sqlDollar[1].union.strs()
			if len(varName) == 1 && varName[0] == "tracing" {
				sqlVAL.union.val = &tree.SetTracing{Values: sqlDollar[3].union.exprs()}
			} else {
				sqlVAL.union.val = &tree.SetVar{Name: strings.Join(sqlDollar[1].union.strs(), "."), Values: sqlDollar[3].union.exprs()}
			}
		}
	case 496:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3222
		{

			sqlVAL.union.val = &tree.SetVar{Name: "timezone", Values: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 497:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3229
		{

			sqlVAL.union.val = &tree.SetVar{Name: "search_path", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 498:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3234
		{

			sqlVAL.union.val = &tree.SetSessionAuthorizationDefault{}
		}
	case 499:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3239
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 501:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3244
		{
			return unimplemented(sqllex, "set from current")
		}
	case 502:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3245
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 503:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3253
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 504:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3258
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 505:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3265
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 506:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3269
		{
			sqlVAL.union.val = append([]string{sqlDollar[1].str}, sqlDollar[2].union.strs()...)
		}
	case 507:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3275
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 508:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3279
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 510:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3286
		{
			sqlVAL.union.val = tree.Expr(&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}})
		}
	case 513:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3307
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 514:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3311
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 515:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3317
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 516:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3321
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 517:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3325
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 518:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3329
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 519:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3333
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 520:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3339
		{
			sqlVAL.union.val = tree.Low
		}
	case 521:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3343
		{
			sqlVAL.union.val = tree.Normal
		}
	case 522:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3347
		{
			sqlVAL.union.val = tree.High
		}
	case 523:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3358
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 524:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3362
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 525:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3366
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 527:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3371
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 528:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3375
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 530:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3388
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 532:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3389
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 534:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3390
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 536:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3391
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 538:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3392
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 540:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3393
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 543:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3395
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 545:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3396
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 547:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3397
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 549:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3398
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 551:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3399
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 553:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3400
		{
			return helpWith(sqllex, "SHOW QUERIES")
		}
	case 555:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3401
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 558:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3403
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 560:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3404
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 562:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3405
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 564:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3406
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 566:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3407
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 568:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3408
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 570:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3409
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 572:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3410
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 574:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3411
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 576:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3412
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 578:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3413
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 580:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3414
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 582:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3416
		{
			return helpWith(sqllex, "SHOW")
		}
	case 583:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3421
		{
		}
	case 584:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3422
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 585:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3425
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 586:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3429
		{

			return purposelyUnimplemented(sqllex, "reindex table", "CockroachDB does not require reindexing.")
		}
	case 587:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3434
		{

			return purposelyUnimplemented(sqllex, "reindex index", "CockroachDB does not require reindexing.")
		}
	case 588:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3439
		{

			return purposelyUnimplemented(sqllex, "reindex database", "CockroachDB does not require reindexing.")
		}
	case 589:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3444
		{

			return purposelyUnimplemented(sqllex, "reindex system", "CockroachDB does not require reindexing.")
		}
	case 590:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3454
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[2].str}
		}
	case 591:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3455
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[3].str}
		}
	case 592:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3456
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 596:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3467
		{
			sqlVAL.str = "client_encoding"
		}
	case 598:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3470
		{
			sqlVAL.str = "timezone"
		}
	case 599:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3471
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 600:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3485
		{
			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 601:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3489
		{

			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[7].union.unresolvedObjectName(), UsingJSON: true}
		}
	case 602:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3493
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 603:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3504
		{

			id, err := sqlDollar[3].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ShowHistogram{HistogramID: id}
		}
	case 604:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3512
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 605:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3520
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupDefaultDetails,
				Path:    sqlDollar[3].union.expr(),
				Options: sqlDollar[4].union.kvOptions(),
			}
		}
	case 606:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3528
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:              tree.BackupDefaultDetails,
				ShouldIncludeSchemas: true,
				Path:                 sqlDollar[4].union.expr(),
				Options:              sqlDollar[5].union.kvOptions(),
			}
		}
	case 607:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3537
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupRangeDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 608:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3546
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupFileDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 609:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3554
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 610:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3564
		{
			sqlVAL.union.val = &tree.ShowClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), ".")}
		}
	case 611:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3568
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 612:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3571
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 613:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3573
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 614:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3576
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 615:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3578
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 616:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3582
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 617:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3585
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 618:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3593
		{
			sqlVAL.union.val = &tree.ShowColumns{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 619:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3596
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 620:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3604
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 621:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3608
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsDB: true, Database: tree.Name(sqlDollar[5].str)}
		}
	case 622:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3612
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsIndex: true, Index: sqlDollar[5].union.tableIndexName()}
		}
	case 623:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3616
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 624:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3619
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 625:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3627
		{
			sqlVAL.union.val = &tree.ShowDatabases{WithComment: sqlDollar[3].union.bool()}
		}
	case 626:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3630
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 627:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3643
		{
			lst := sqlDollar[3].union.targetListPtr()
			if lst != nil && lst.ForRoles {
				sqlVAL.union.val = &tree.ShowRoleGrants{Roles: lst.Roles, Grantees: sqlDollar[4].union.nameList()}
			} else {
				sqlVAL.union.val = &tree.ShowGrants{Targets: lst, Grantees: sqlDollar[4].union.nameList()}
			}
		}
	case 628:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3651
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 629:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3659
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 630:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3662
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 631:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3664
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 632:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3668
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 633:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3672
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 634:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3675
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 635:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3677
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 636:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3681
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 637:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3684
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 638:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3692
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 639:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3695
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 640:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3697
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 641:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3700
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 642:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3708
		{
			sqlVAL.union.val = &tree.ShowQueries{All: false, Cluster: sqlDollar[2].union.bool()}
		}
	case 643:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3711
		{
			return helpWith(sqllex, "SHOW QUERIES")
		}
	case 644:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3713
		{
			sqlVAL.union.val = &tree.ShowQueries{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 645:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3716
		{
			return helpWith(sqllex, "SHOW QUERIES")
		}
	case 646:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3720
		{
			sqlVAL.union.val = true
		}
	case 647:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3722
		{
			sqlVAL.union.val = true
		}
	case 648:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3724
		{
			sqlVAL.union.val = false
		}
	case 649:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3734
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: true}
		}
	case 650:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3738
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: false}
		}
	case 651:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3741
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 652:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3742
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 653:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3744
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[3].union.slct()}
		}
	case 654:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3748
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[5].union.slct(), Block: true}
		}
	case 655:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3751
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 656:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3753
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
			}
		}
	case 657:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3761
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				Block: true,
			}
		}
	case 658:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3769
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 659:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3778
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceRaw, Compact: sqlDollar[2].union.bool()}
		}
	case 660:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3781
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 661:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3783
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceKV, Compact: sqlDollar[2].union.bool()}
		}
	case 662:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3786
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 663:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3788
		{

			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceReplica, Compact: sqlDollar[2].union.bool()}
		}
	case 664:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3792
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 665:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3795
		{
			sqlVAL.union.val = true
		}
	case 666:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3796
		{
			sqlVAL.union.val = false
		}
	case 667:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3804
		{
			sqlVAL.union.val = &tree.ShowSessions{Cluster: sqlDollar[2].union.bool()}
		}
	case 668:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3807
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 669:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3809
		{
			sqlVAL.union.val = &tree.ShowSessions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 670:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3812
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 671:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3820
		{
			sqlVAL.union.val = &tree.ShowTables{TableNamePrefix: tree.TableNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
				WithComment: sqlDollar[7].union.bool()}
		}
	case 672:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3830
		{
			sqlVAL.union.val = &tree.ShowTables{TableNamePrefix: tree.TableNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
				WithComment: sqlDollar[5].union.bool()}
		}
	case 673:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3840
		{
			sqlVAL.union.val = &tree.ShowTables{WithComment: sqlDollar[3].union.bool()}
		}
	case 674:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3843
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 675:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3846
		{
			sqlVAL.union.val = true
		}
	case 676:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3847
		{
			sqlVAL.union.val = false
		}
	case 677:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3854
		{
			sqlVAL.union.val = &tree.ShowSchemas{Database: tree.Name(sqlDollar[4].str)}
		}
	case 678:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3858
		{
			sqlVAL.union.val = &tree.ShowSchemas{}
		}
	case 679:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3861
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 680:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3868
		{
			sqlVAL.union.val = &tree.ShowSequences{Database: tree.Name(sqlDollar[4].str)}
		}
	case 681:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3872
		{
			sqlVAL.union.val = &tree.ShowSequences{}
		}
	case 682:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3875
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 683:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3882
		{

			sqlVAL.union.val = &tree.ShowSyntax{Statement: sqlDollar[3].str}
		}
	case 684:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3886
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 685:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3893
		{
			sqlVAL.union.val = &tree.ShowSavepointStatus{}
		}
	case 686:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3896
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 687:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3904
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_isolation"}
		}
	case 688:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3909
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_priority"}
		}
	case 689:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3914
		{

			sqlVAL.union.val = &tree.ShowTransactionStatus{}
		}
	case 690:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3918
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 691:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3926
		{
			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[3].union.unresolvedObjectName()}
		}
	case 692:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3930
		{

			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 693:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3934
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 697:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3947
		{
			sqlVAL.union.val = &tree.ShowUsers{}
		}
	case 698:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3950
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 699:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3958
		{
			sqlVAL.union.val = &tree.ShowRoles{}
		}
	case 700:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3961
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 701:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3965
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[6].str)}}
		}
	case 702:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3969
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{Database: tree.Name(sqlDollar[6].str)}}
		}
	case 703:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3973
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 704:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3981
		{
			name := sqlDollar[9].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 705:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3989
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 706:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3996
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[9].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 707:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4003
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 708:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4007
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 709:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4018
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: tree.TableIndexName{Table: name},
			}
		}
	case 710:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4026
		{
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: sqlDollar[5].union.tableIndexName(),
			}
		}
	case 711:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4032
		{
			return helpWith(sqllex, "SHOW RANGE")
		}
	case 712:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4041
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 713:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4046
		{
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: sqlDollar[5].union.tableIndexName()}
		}
	case 714:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4050
		{
			sqlVAL.union.val = &tree.ShowRanges{DatabaseName: tree.Name(sqlDollar[5].str)}
		}
	case 715:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4053
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 716:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4057
		{

			sqlVAL.union.val = &tree.ShowFingerprints{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 717:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4064
		{
			tmp := sqlDollar[2].union.targetList()
			sqlVAL.union.val = &tmp
		}
	case 718:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4069
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 719:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4189
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 720:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4193
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 721:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4197
		{

			sqlVAL.union.val = tree.TargetList{
				Tables:   tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}},
				ForRoles: sqlDollar[1].str == "role",
			}
		}
	case 722:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4236
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{sqlDollar[1].union.unresolvedName()}}
		}
	case 723:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4240
		{
			remainderPats := sqlDollar[3].union.tablePatterns()
			sqlVAL.union.val = tree.TargetList{Tables: append(tree.TablePatterns{sqlDollar[1].union.unresolvedName()}, remainderPats...)}
		}
	case 724:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4245
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 725:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4249
		{
			sqlVAL.union.val = tree.TargetList{Databases: sqlDollar[2].union.nameList()}
		}
	case 726:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4258
		{
			sqlVAL.union.val = tree.TargetList{ForRoles: true, Roles: sqlDollar[2].union.nameList()}
		}
	case 728:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4265
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 729:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4269
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 730:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4281
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
			}
		}
	case 731:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4290
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 732:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4293
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 733:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4301
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema: sqlDollar[3].str,
			}
		}
	case 734:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4307
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].str,
				IfNotExists: true,
			}
		}
	case 735:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4313
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 736:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:4352
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Interleave:    sqlDollar[8].union.interleave(),
				Defs:          sqlDollar[6].union.tblDefs(),
				AsSource:      nil,
				PartitionBy:   sqlDollar[9].union.partitionBy(),
				Temporary:     sqlDollar[2].union.persistenceType(),
				StorageParams: sqlDollar[10].union.storageParams(),
				OnCommit:      sqlDollar[11].union.createTableOnCommitSetting(),
			}
		}
	case 737:
		sqlDollar = sqlS[sqlpt-14 : sqlpt+1]
//line sql-gen.y:4367
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Interleave:    sqlDollar[11].union.interleave(),
				Defs:          sqlDollar[9].union.tblDefs(),
				AsSource:      nil,
				PartitionBy:   sqlDollar[12].union.partitionBy(),
				Temporary:     sqlDollar[2].union.persistenceType(),
				StorageParams: sqlDollar[13].union.storageParams(),
				OnCommit:      sqlDollar[14].union.createTableOnCommitSetting(),
			}
		}
	case 738:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4384
		{
			sqlVAL.union.val = nil
		}
	case 739:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4388
		{

			sqlVAL.union.val = nil
		}
	case 740:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4394
		{

			sqlVAL.union.val = sqlDollar[3].union.storageParams()
		}
	case 741:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4399
		{
			return unimplemented(sqllex, "create table with oids")
		}
	case 742:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4405
		{
			sqlVAL.union.val = tree.CreateTableOnCommitUnset
		}
	case 743:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4409
		{

			sqlVAL.union.val = tree.CreateTableOnCommitPreserveRows
		}
	case 744:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4414
		{

			return unimplementedWithIssueDetail(sqllex, 46556, "delete rows")
		}
	case 745:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4419
		{

			return unimplementedWithIssueDetail(sqllex, 46556, "drop")
		}
	case 746:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4426
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 747:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4430
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 748:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4436
		{
			sqlVAL.union.val = []tree.StorageParam{sqlDollar[1].union.storageParam()}
		}
	case 749:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4440
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParams(), sqlDollar[3].union.storageParam())
		}
	case 750:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4446
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Interleave:    nil,
				Defs:          sqlDollar[5].union.tblDefs(),
				AsSource:      sqlDollar[8].union.slct(),
				StorageParams: sqlDollar[6].union.storageParams(),
				OnCommit:      sqlDollar[10].union.createTableOnCommitSetting(),
			}
		}
	case 751:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:4459
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Interleave:    nil,
				Defs:          sqlDollar[8].union.tblDefs(),
				AsSource:      sqlDollar[11].union.slct(),
				StorageParams: sqlDollar[9].union.storageParams(),
				OnCommit:      sqlDollar[13].union.createTableOnCommitSetting(),
			}
		}
	case 752:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4473
		{
		}
	case 753:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4474
		{
		}
	case 754:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4475
		{
			return unimplemented(sqllex, "create table as with no data")
		}
	case 755:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4493
		{
			sqlVAL.union.val = true
		}
	case 756:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4494
		{
			sqlVAL.union.val = true
		}
	case 757:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4495
		{
			sqlVAL.union.val = false
		}
	case 759:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4499
		{
			sqlVAL.union.val = true
		}
	case 760:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4500
		{
			sqlVAL.union.val = true
		}
	case 761:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4501
		{
			sqlVAL.union.val = true
		}
	case 762:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4502
		{
			sqlVAL.union.val = true
		}
	case 763:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4503
		{
			return unimplemented(sqllex, "create unlogged")
		}
	case 765:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4508
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 766:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4514
		{
			sqlVAL.union.val = tree.TableDefs{sqlDollar[1].union.tblDef()}
		}
	case 767:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4518
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 768:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4524
		{
			sqlVAL.union.val = sqlDollar[1].union.colDef()
		}
	case 771:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4530
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 772:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4533
		{
			return unimplementedWithIssue(sqllex, 30840)
		}
	case 773:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:4537
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.InterleaveDef{
				Parent:       name,
				Fields:       sqlDollar[6].union.nameList(),
				DropBehavior: sqlDollar[8].union.dropBehavior(),
			}
		}
	case 774:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4546
		{
			sqlVAL.union.val = (*tree.InterleaveDef)(nil)
		}
	case 775:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4553
		{

			sqlVAL.union.val = tree.DropCascade
		}
	case 776:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4558
		{

			sqlVAL.union.val = tree.DropRestrict
		}
	case 777:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4563
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 778:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4569
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 780:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4576
		{
			sqlVAL.str = ""
		}
	case 782:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4583
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 783:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4589
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[5].union.nameList(),
				List:   sqlDollar[8].union.listPartitions(),
			}
		}
	case 784:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4596
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[5].union.nameList(),
				Range:  sqlDollar[8].union.rangePartitions(),
			}
		}
	case 785:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4603
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 786:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4609
		{
			sqlVAL.union.val = []tree.ListPartition{sqlDollar[1].union.listPartition()}
		}
	case 787:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4613
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listPartitions(), sqlDollar[3].union.listPartition())
		}
	case 788:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4619
		{
			sqlVAL.union.val = tree.ListPartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				Exprs:        sqlDollar[5].union.exprs(),
				Subpartition: sqlDollar[7].union.partitionBy(),
			}
		}
	case 789:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4629
		{
			sqlVAL.union.val = []tree.RangePartition{sqlDollar[1].union.rangePartition()}
		}
	case 790:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4633
		{
			sqlVAL.union.val = append(sqlDollar[1].union.rangePartitions(), sqlDollar[3].union.rangePartition())
		}
	case 791:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:4639
		{
			sqlVAL.union.val = tree.RangePartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				From:         sqlDollar[5].union.exprs(),
				To:           sqlDollar[9].union.exprs(),
				Subpartition: sqlDollar[11].union.partitionBy(),
			}
		}
	case 792:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4653
		{
			typ := sqlDollar[2].union.colType()
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), typ, isSerialType(typ), sqlDollar[3].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = tableDef
		}
	case 793:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4664
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 794:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4668
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 795:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4674
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Name: tree.Name(sqlDollar[2].str), Qualification: sqlDollar[3].union.colQualElem()}
		}
	case 796:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4678
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 797:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4682
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: tree.ColumnCollation(sqlDollar[2].str)}
		}
	case 798:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4686
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 799:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4690
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[3].str), Create: true}}
		}
	case 800:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4694
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Create: true}}
		}
	case 801:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4698
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[6].str), Create: true, IfNotExists: true}}
		}
	case 802:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4716
		{
			sqlVAL.union.val = tree.NotNullConstraint{}
		}
	case 803:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4720
		{
			sqlVAL.union.val = tree.NullConstraint{}
		}
	case 804:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4724
		{
			sqlVAL.union.val = tree.UniqueConstraint{}
		}
	case 805:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4728
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 806:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:4732
		{
			sqlVAL.union.val = tree.ShardedPrimaryKeyConstraint{
				Sharded:      true,
				ShardBuckets: sqlDollar[8].union.expr(),
			}
		}
	case 807:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4739
		{
			sqlVAL.union.val = &tree.ColumnCheckConstraint{Expr: sqlDollar[3].union.expr()}
		}
	case 808:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4743
		{
			sqlVAL.union.val = &tree.ColumnDefault{Expr: sqlDollar[2].union.expr()}
		}
	case 809:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4747
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ColumnFKConstraint{
				Table:   name,
				Col:     tree.Name(sqlDollar[3].str),
				Actions: sqlDollar[5].union.referenceActions(),
				Match:   sqlDollar[4].union.compositeKeyMatchMethod(),
			}
		}
	case 810:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4757
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr()}
		}
	case 811:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4761
		{
			return unimplemented(sqllex, "virtual computed columns")
		}
	case 812:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4765
		{
			sqllex.Error("use AS ( <expr> ) STORED")
			return 1
		}
	case 813:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4772
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:        tree.Name(sqlDollar[2].str),
				Columns:     sqlDollar[4].union.idxElems(),
				Sharded:     sqlDollar[6].union.shardedIndexDef(),
				Storing:     sqlDollar[7].union.nameList(),
				Interleave:  sqlDollar[8].union.interleave(),
				PartitionBy: sqlDollar[9].union.partitionBy(),
			}
		}
	case 814:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4783
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Name:        tree.Name(sqlDollar[3].str),
					Columns:     sqlDollar[5].union.idxElems(),
					Sharded:     sqlDollar[7].union.shardedIndexDef(),
					Storing:     sqlDollar[8].union.nameList(),
					Interleave:  sqlDollar[9].union.interleave(),
					PartitionBy: sqlDollar[10].union.partitionBy(),
				},
			}
		}
	case 815:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4796
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:     tree.Name(sqlDollar[3].str),
				Columns:  sqlDollar[5].union.idxElems(),
				Inverted: true,
			}
		}
	case 816:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4806
		{
			sqlVAL.union.val = &tree.FamilyTableDef{
				Name:    tree.Name(sqlDollar[2].str),
				Columns: sqlDollar[4].union.nameList(),
			}
		}
	case 817:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4818
		{
			sqlVAL.union.val = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val.(tree.ConstraintTableDef).SetName(tree.Name(sqlDollar[2].str))
		}
	case 818:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4823
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 819:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4829
		{
			sqlVAL.union.val = &tree.CheckConstraintTableDef{
				Expr: sqlDollar[3].union.expr(),
			}
		}
	case 820:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:4835
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:     sqlDollar[3].union.idxElems(),
					Storing:     sqlDollar[5].union.nameList(),
					Interleave:  sqlDollar[6].union.interleave(),
					PartitionBy: sqlDollar[7].union.partitionBy(),
				},
			}
		}
	case 821:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4846
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:    sqlDollar[4].union.idxElems(),
					Sharded:    sqlDollar[6].union.shardedIndexDef(),
					Interleave: sqlDollar[7].union.interleave(),
				},
				PrimaryKey: true,
			}
		}
	case 822:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:4858
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ForeignKeyConstraintTableDef{
				Table:    name,
				FromCols: sqlDollar[4].union.nameList(),
				ToCols:   sqlDollar[8].union.nameList(),
				Match:    sqlDollar[9].union.compositeKeyMatchMethod(),
				Actions:  sqlDollar[10].union.referenceActions(),
			}
		}
	case 823:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4869
		{
			return unimplementedWithIssueDetail(sqllex, 46657, "add constraint exclude using")
		}
	case 824:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4876
		{
			sqlVAL.union.val = sqlDollar[2].union.val
		}
	case 825:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4880
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 826:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4886
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), nil, false, sqlDollar[2].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef
			sqlVAL.union.val = tree.TableDefs{colToTableDef}
		}
	case 827:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4896
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[3].str), nil, false, sqlDollar[4].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef

			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), colToTableDef)
		}
	case 828:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4907
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 829:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4911
		{
			var constraintToTableDef tree.TableDef = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), constraintToTableDef)
		}
	case 830:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4918
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 831:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4924
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns: sqlDollar[4].union.idxElems(),
				},
				PrimaryKey: true,
			}
		}
	case 832:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4935
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 833:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4939
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 834:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4945
		{
			sqlVAL.union.val = tree.IndexElem{Column: tree.Name(sqlDollar[1].str)}
		}
	case 835:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4951
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 836:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4955
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 837:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4961
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 838:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4965
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 839:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4971
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 840:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4976
		{
		}
	case 841:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4977
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "deferrable")
		}
	case 842:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4978
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially deferred")
		}
	case 843:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4979
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially immediate")
		}
	case 844:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4980
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially deferred")
		}
	case 845:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4981
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially immediate")
		}
	case 849:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4999
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 850:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5003
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 851:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5009
		{
			sqlVAL.union.val = &tree.ShardedIndexDef{
				ShardBuckets: sqlDollar[6].union.expr(),
			}
		}
	case 852:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5015
		{
			sqlVAL.union.val = (*tree.ShardedIndexDef)(nil)
		}
	case 853:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5021
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 854:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5025
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 855:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5045
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 856:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5049
		{
			sqlVAL.union.val = tree.MatchFull
		}
	case 857:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5053
		{
			return unimplementedWithIssueDetail(sqllex, 20305, "match partial")
		}
	case 858:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5057
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 859:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5066
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction()}
		}
	case 860:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5070
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction()}
		}
	case 861:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5074
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction(), Delete: sqlDollar[2].union.referenceAction()}
		}
	case 862:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5078
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction(), Update: sqlDollar[2].union.referenceAction()}
		}
	case 863:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5082
		{
			sqlVAL.union.val = tree.ReferenceActions{}
		}
	case 864:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5088
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 865:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5094
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 866:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5102
		{
			sqlVAL.union.val = tree.NoAction
		}
	case 867:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5106
		{
			sqlVAL.union.val = tree.Restrict
		}
	case 868:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5110
		{
			sqlVAL.union.val = tree.Cascade
		}
	case 869:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5114
		{
			sqlVAL.union.val = tree.SetNull
		}
	case 870:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5118
		{
			sqlVAL.union.val = tree.SetDefault
		}
	case 871:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5137
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name:      name,
				Temporary: sqlDollar[2].union.persistenceType(),
				Options:   sqlDollar[5].union.seqOpts(),
			}
		}
	case 872:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5146
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name: name, Options: sqlDollar[8].union.seqOpts(),
				Temporary:   sqlDollar[2].union.persistenceType(),
				IfNotExists: true,
			}
		}
	case 873:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5154
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 875:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5158
		{
			sqlVAL.union.val = []tree.SequenceOption(nil)
		}
	case 876:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5161
		{
			sqlVAL.union.val = []tree.SequenceOption{sqlDollar[1].union.seqOpt()}
		}
	case 877:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5162
		{
			sqlVAL.union.val = append(sqlDollar[1].union.seqOpts(), sqlDollar[2].union.seqOpt())
		}
	case 878:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5165
		{
			return unimplementedWithIssueDetail(sqllex, 25110, sqlDollar[2].union.colType().SQLString())
		}
	case 879:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5166
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCycle}
		}
	case 880:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5168
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptNoCycle}
		}
	case 881:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5169
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: nil}
		}
	case 882:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5170
		{
			varName, err := sqlDollar[3].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[3].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: columnItem}
		}
	case 883:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5180
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCache, IntVal: &x}
		}
	case 884:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5183
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x}
		}
	case 885:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5185
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x, OptionalWord: true}
		}
	case 886:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5187
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue, IntVal: &x}
		}
	case 887:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5189
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue}
		}
	case 888:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5190
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue, IntVal: &x}
		}
	case 889:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5192
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue}
		}
	case 890:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5193
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x}
		}
	case 891:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5195
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x, OptionalWord: true}
		}
	case 892:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5197
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptVirtual}
		}
	case 893:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5205
		{
			sqlVAL.union.val = &tree.Truncate{Tables: sqlDollar[3].union.tableNames(), DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 894:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5208
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 895:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5212
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[2].union.expr()}
		}
	case 896:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5216
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: tree.DNull}
		}
	case 897:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5226
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 898:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5230
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[6].union.expr(), IfNotExists: true, KVOptions: sqlDollar[7].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 899:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5233
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 900:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5241
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 901:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5245
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[5].union.expr(), IfExists: true, KVOptions: sqlDollar[6].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 902:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5248
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 903:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5254
		{
			sqlVAL.union.val = true
		}
	case 904:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5258
		{

			sqlVAL.union.val = true
		}
	case 905:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5263
		{
			sqlVAL.union.val = false
		}
	case 906:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5273
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[6].union.nameList(),
				AsSource:    sqlDollar[8].union.slct(),
				Temporary:   sqlDollar[2].union.persistenceType(),
				IfNotExists: false,
			}
		}
	case 907:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5284
		{
			name := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[9].union.nameList(),
				AsSource:    sqlDollar[11].union.slct(),
				Temporary:   sqlDollar[2].union.persistenceType(),
				IfNotExists: true,
			}
		}
	case 908:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5294
		{
			return unimplementedWithIssue(sqllex, 24897)
		}
	case 909:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5295
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 910:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5299
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 911:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5303
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 912:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5307
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 913:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5311
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 916:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5319
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 917:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5323
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[2].union.kvOption())
		}
	case 918:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5329
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 919:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5333
		{
			sqlVAL.union.val = nil
		}
	case 920:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5339
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: sqlDollar[3].union.expr()}
		}
	case 921:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5343
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: tree.DNull}
		}
	case 922:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5348
		{
		}
	case 923:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5349
		{
			return unimplemented(sqllex, "create recursive view")
		}
	case 924:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5355
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 925:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5357
		{
			return unimplementedWithIssue(sqllex, 24873)
		}
	case 926:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5359
		{
			return unimplementedWithIssue(sqllex, 27791)
		}
	case 927:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5361
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "base")
		}
	case 928:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5363
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "shell")
		}
	case 929:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5365
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "create")
		}
	case 930:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:5381
		{
			table := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:         tree.Name(sqlDollar[5].str),
				Table:        table,
				Unique:       sqlDollar[2].union.bool(),
				Columns:      sqlDollar[10].union.idxElems(),
				Sharded:      sqlDollar[12].union.shardedIndexDef(),
				Storing:      sqlDollar[13].union.nameList(),
				Interleave:   sqlDollar[14].union.interleave(),
				PartitionBy:  sqlDollar[15].union.partitionBy(),
				Inverted:     sqlDollar[8].union.bool(),
				Concurrently: sqlDollar[4].union.bool(),
			}
		}
	case 931:
		sqlDollar = sqlS[sqlpt-19 : sqlpt+1]
//line sql-gen.y:5397
		{
			table := sqlDollar[10].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:         tree.Name(sqlDollar[8].str),
				Table:        table,
				Unique:       sqlDollar[2].union.bool(),
				IfNotExists:  true,
				Columns:      sqlDollar[13].union.idxElems(),
				Sharded:      sqlDollar[15].union.shardedIndexDef(),
				Storing:      sqlDollar[16].union.nameList(),
				Interleave:   sqlDollar[17].union.interleave(),
				PartitionBy:  sqlDollar[18].union.partitionBy(),
				Inverted:     sqlDollar[11].union.bool(),
				Concurrently: sqlDollar[4].union.bool(),
			}
		}
	case 932:
		sqlDollar = sqlS[sqlpt-15 : sqlpt+1]
//line sql-gen.y:5414
		{
			table := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:         tree.Name(sqlDollar[6].str),
				Table:        table,
				Unique:       sqlDollar[2].union.bool(),
				Inverted:     true,
				Columns:      sqlDollar[10].union.idxElems(),
				Storing:      sqlDollar[12].union.nameList(),
				Interleave:   sqlDollar[13].union.interleave(),
				PartitionBy:  sqlDollar[14].union.partitionBy(),
				Concurrently: sqlDollar[5].union.bool(),
			}
		}
	case 933:
		sqlDollar = sqlS[sqlpt-18 : sqlpt+1]
//line sql-gen.y:5429
		{
			table := sqlDollar[11].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:         tree.Name(sqlDollar[9].str),
				Table:        table,
				Unique:       sqlDollar[2].union.bool(),
				Inverted:     true,
				IfNotExists:  true,
				Columns:      sqlDollar[13].union.idxElems(),
				Storing:      sqlDollar[15].union.nameList(),
				Interleave:   sqlDollar[16].union.interleave(),
				PartitionBy:  sqlDollar[17].union.partitionBy(),
				Concurrently: sqlDollar[5].union.bool(),
			}
		}
	case 934:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5444
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 935:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5447
		{
		}
	case 936:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5448
		{
			return unimplementedWithIssue(sqllex, 9683)
		}
	case 937:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5452
		{

			switch sqlDollar[2].str {
			case "gin":
				sqlVAL.union.val = true
			case "btree":
				sqlVAL.union.val = false
			case "hash", "gist", "spgist", "brin":
				return unimplemented(sqllex, "index using "+sqlDollar[2].str)
			default:
				sqllex.Error("unrecognized access method: " + sqlDollar[2].str)
				return 1
			}
		}
	case 938:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5467
		{
			sqlVAL.union.val = false
		}
	case 939:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5473
		{
			sqlVAL.union.val = true
		}
	case 940:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5477
		{
			sqlVAL.union.val = false
		}
	case 941:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5483
		{
			sqlVAL.union.val = true
		}
	case 942:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5487
		{
			sqlVAL.union.val = false
		}
	case 943:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5493
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 944:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5497
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 945:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5506
		{

			e := sqlDollar[1].union.expr()
			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			if colName, ok := e.(*tree.UnresolvedName); ok && colName.NumParts == 1 {
				sqlVAL.union.val = tree.IndexElem{Column: tree.Name(colName.Parts[0]), Direction: dir, NullsOrder: nullsOrder}
			} else {
				return unimplementedWithIssueDetail(sqllex, 9682, fmt.Sprintf("%T", e))
			}
		}
	case 946:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5528
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 947:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5529
		{
			sqlVAL.str = ""
		}
	case 948:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5533
		{
			sqlVAL.union.val = tree.Ascending
		}
	case 949:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5537
		{
			sqlVAL.union.val = tree.Descending
		}
	case 950:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5541
		{
			sqlVAL.union.val = tree.DefaultDirection
		}
	case 951:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5547
		{
			sqlVAL.union.val = &tree.RenameDatabase{Name: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[6].str)}
		}
	case 952:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5553
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: false}
		}
	case 953:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5559
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: false}
		}
	case 954:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5567
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: true}
		}
	case 955:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5573
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: true}
		}
	case 956:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5581
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsSequence: true}
		}
	case 957:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5587
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsSequence: true}
		}
	case 958:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5595
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[3].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[6].str), IfExists: false}
		}
	case 959:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5599
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[5].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[8].str), IfExists: true}
		}
	case 960:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5604
		{
		}
	case 961:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5605
		{
		}
	case 962:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5608
		{
		}
	case 963:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5609
		{
		}
	case 964:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5617
		{
			sqlVAL.union.val = &tree.ReleaseSavepoint{Savepoint: tree.Name(sqlDollar[2].str)}
		}
	case 965:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5620
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 966:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5630
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeJob,
			}
		}
	case 967:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5639
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 968:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5642
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 969:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5650
		{
			sqlVAL.union.val = &tree.Savepoint{Name: tree.Name(sqlDollar[2].str)}
		}
	case 970:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5653
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 972:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5657
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 974:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5658
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 976:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5659
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 978:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5675
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 979:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5678
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 980:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5680
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 981:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5683
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 982:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5693
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 983:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5696
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 984:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5698
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 985:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5701
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 986:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5705
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 987:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5710
		{
		}
	case 988:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5711
		{
		}
	case 989:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5712
		{
		}
	case 990:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5722
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 991:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5726
		{
			sqlVAL.union.val = &tree.RollbackToSavepoint{Savepoint: tree.Name(sqlDollar[4].str)}
		}
	case 992:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5729
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 993:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5732
		{
		}
	case 994:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5733
		{
		}
	case 995:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5737
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 996:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5741
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 997:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5747
		{
			sqlVAL.union.val = &tree.BeginTransaction{Modes: sqlDollar[1].union.transactionModes()}
		}
	case 998:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5751
		{
			sqlVAL.union.val = &tree.BeginTransaction{}
		}
	case 999:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5757
		{
			sqlVAL.union.val = sqlDollar[1].union.transactionModes()
		}
	case 1000:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5761
		{
			a := sqlDollar[1].union.transactionModes()
			b := sqlDollar[3].union.transactionModes()
			err := a.Merge(b)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1001:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5774
		{
		}
	case 1002:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5776
		{
		}
	case 1003:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5780
		{

			sqlVAL.union.val = tree.TransactionModes{Isolation: sqlDollar[1].union.isoLevel()}
		}
	case 1004:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5785
		{
			sqlVAL.union.val = tree.TransactionModes{UserPriority: sqlDollar[1].union.userPriority()}
		}
	case 1005:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5789
		{
			sqlVAL.union.val = tree.TransactionModes{ReadWriteMode: sqlDollar[1].union.readWriteMode()}
		}
	case 1006:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5793
		{
			sqlVAL.union.val = tree.TransactionModes{AsOf: sqlDollar[1].union.asOfClause()}
		}
	case 1007:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5799
		{
			sqlVAL.union.val = sqlDollar[2].union.userPriority()
		}
	case 1008:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5805
		{
			sqlVAL.union.val = sqlDollar[3].union.isoLevel()
		}
	case 1009:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5811
		{
			sqlVAL.union.val = tree.ReadOnly
		}
	case 1010:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5815
		{
			sqlVAL.union.val = tree.ReadWrite
		}
	case 1011:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5825
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				Name:     tree.Name(sqlDollar[3].str),
				Template: sqlDollar[5].str,
				Encoding: sqlDollar[6].str,
				Collate:  sqlDollar[7].str,
				CType:    sqlDollar[8].str,
			}
		}
	case 1012:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5835
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				IfNotExists: true,
				Name:        tree.Name(sqlDollar[6].str),
				Template:    sqlDollar[8].str,
				Encoding:    sqlDollar[9].str,
				Collate:     sqlDollar[10].str,
				CType:       sqlDollar[11].str,
			}
		}
	case 1013:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5845
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 1014:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5849
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1015:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5853
		{
			sqlVAL.str = ""
		}
	case 1016:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5859
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1017:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5863
		{
			sqlVAL.str = ""
		}
	case 1018:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5869
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1019:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5873
		{
			sqlVAL.str = ""
		}
	case 1020:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5879
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1021:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5883
		{
			sqlVAL.str = ""
		}
	case 1022:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5888
		{
		}
	case 1023:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5889
		{
		}
	case 1024:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5901
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1025:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5908
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = sqlDollar[6].union.onConflict()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[7].union.retClause()
		}
	case 1026:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5915
		{
			return helpWith(sqllex, "INSERT")
		}
	case 1027:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5926
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = &tree.OnConflict{}
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1028:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5933
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 1029:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5937
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &name
		}
	case 1030:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5946
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &name, As: tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}}
		}
	case 1031:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5951
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1032:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5957
		{
			sqlVAL.union.val = &tree.Insert{Rows: sqlDollar[1].union.slct()}
		}
	case 1033:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5961
		{
			sqlVAL.union.val = &tree.Insert{Columns: sqlDollar[2].union.nameList(), Rows: sqlDollar[4].union.slct()}
		}
	case 1034:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5965
		{
			sqlVAL.union.val = &tree.Insert{Rows: &tree.Select{}}
		}
	case 1035:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5971
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1036:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5975
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1038:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5995
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1039:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5999
		{
			sqlVAL.union.val = &tree.OnConflict{Columns: sqlDollar[3].union.nameList(), Exprs: sqlDollar[7].union.updateExprs(), Where: tree.NewWhere(tree.AstWhere, sqlDollar[8].union.expr())}
		}
	case 1040:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6003
		{
			sqlVAL.union.val = &tree.OnConflict{Columns: sqlDollar[3].union.nameList(), DoNothing: true}
		}
	case 1041:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6009
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1042:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6012
		{
			return unimplementedWithIssue(sqllex, 32557)
		}
	case 1043:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6013
		{
			return unimplementedWithIssue(sqllex, 28161)
		}
	case 1044:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6015
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1045:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6021
		{
			ret := tree.ReturningExprs(sqlDollar[2].union.selExprs())
			sqlVAL.union.val = &ret
		}
	case 1046:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6026
		{
			sqlVAL.union.val = tree.ReturningNothingClause
		}
	case 1047:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6030
		{
			sqlVAL.union.val = tree.AbsentReturningClause
		}
	case 1048:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6047
		{
			sqlVAL.union.val = &tree.Update{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[3].union.tblExpr(),
				Exprs:     sqlDollar[5].union.updateExprs(),
				From:      sqlDollar[6].union.tblExprs(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[7].union.expr()),
				OrderBy:   sqlDollar[8].union.orderBy(),
				Limit:     sqlDollar[9].union.limit(),
				Returning: sqlDollar[10].union.retClause(),
			}
		}
	case 1049:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6059
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 1050:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6062
		{
			sqlVAL.union.val = sqlDollar[2].union.tblExprs()
		}
	case 1051:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6065
		{
			sqlVAL.union.val = tree.TableExprs{}
		}
	case 1052:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6071
		{
			sqlVAL.union.val = tree.UpdateExprs{sqlDollar[1].union.updateExpr()}
		}
	case 1053:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6075
		{
			sqlVAL.union.val = append(sqlDollar[1].union.updateExprs(), sqlDollar[3].union.updateExpr())
		}
	case 1056:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6088
		{
			sqlVAL.union.val = &tree.UpdateExpr{Names: tree.NameList{tree.Name(sqlDollar[1].str)}, Expr: sqlDollar[3].union.expr()}
		}
	case 1057:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6091
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1058:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6095
		{
			sqlVAL.union.val = &tree.UpdateExpr{Tuple: true, Names: sqlDollar[2].union.nameList(), Expr: sqlDollar[5].union.expr()}
		}
	case 1060:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6138
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1061:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6144
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: sqlDollar[2].union.slct()}
		}
	case 1062:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6148
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: &tree.Select{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1063:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6163
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1064:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6167
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy()}
		}
	case 1065:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6171
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[3].union.lockingClause()}
		}
	case 1066:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6175
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[3].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1067:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6179
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt()}
		}
	case 1068:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6183
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy()}
		}
	case 1069:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6187
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[5].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1070:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6191
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[5].union.lockingClause()}
		}
	case 1071:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6196
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1072:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6197
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1073:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6200
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1074:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6201
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1075:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6205
		{
			sqlVAL.union.val = tree.LockingClause{sqlDollar[1].union.lockingItem()}
		}
	case 1076:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6209
		{
			sqlVAL.union.val = append(sqlDollar[1].union.lockingClause(), sqlDollar[2].union.lockingItem())
		}
	case 1077:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6215
		{
			sqlVAL.union.val = &tree.LockingItem{
				Strength:   sqlDollar[1].union.lockingStrength(),
				Targets:    sqlDollar[2].union.tableNames(),
				WaitPolicy: sqlDollar[3].union.lockingWaitPolicy(),
			}
		}
	case 1078:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6224
		{
			sqlVAL.union.val = tree.ForUpdate
		}
	case 1079:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6225
		{
			sqlVAL.union.val = tree.ForNoKeyUpdate
		}
	case 1080:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6226
		{
			sqlVAL.union.val = tree.ForShare
		}
	case 1081:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6227
		{
			sqlVAL.union.val = tree.ForKeyShare
		}
	case 1082:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6230
		{
			sqlVAL.union.val = tree.TableNames{}
		}
	case 1083:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6231
		{
			sqlVAL.union.val = sqlDollar[2].union.tableNames()
		}
	case 1084:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6234
		{
			sqlVAL.union.val = tree.LockWaitBlock
		}
	case 1085:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6235
		{
			sqlVAL.union.val = tree.LockWaitSkip
		}
	case 1086:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6236
		{
			sqlVAL.union.val = tree.LockWaitError
		}
	case 1087:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6241
		{
			return helpWith(sqllex, "<SELECTCLAUSE>")
		}
	case 1091:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6276
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1093:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6277
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1095:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6278
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1097:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6300
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:   sqlDollar[3].union.selExprs(),
				From:    sqlDollar[4].union.from(),
				Where:   tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy: sqlDollar[6].union.groupBy(),
				Having:  tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:  sqlDollar[8].union.window(),
			}
		}
	case 1098:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6313
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct: sqlDollar[2].union.bool(),
				Exprs:    sqlDollar[3].union.selExprs(),
				From:     sqlDollar[4].union.from(),
				Where:    tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:  sqlDollar[6].union.groupBy(),
				Having:   tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:   sqlDollar[8].union.window(),
			}
		}
	case 1099:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6327
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct:   true,
				DistinctOn: sqlDollar[2].union.distinctOn(),
				Exprs:      sqlDollar[3].union.selExprs(),
				From:       sqlDollar[4].union.from(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:    sqlDollar[6].union.groupBy(),
				Having:     tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:     sqlDollar[8].union.window(),
			}
		}
	case 1100:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6339
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1101:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6343
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.UnionOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1102:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6352
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.IntersectOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1103:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6361
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.ExceptOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1104:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6376
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:       tree.SelectExprs{tree.StarSelectExpr()},
				From:        tree.From{Tables: tree.TableExprs{sqlDollar[2].union.tblExpr()}},
				TableSelect: true,
			}
		}
	case 1105:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6383
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1106:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6395
		{
			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1107:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6399
		{

			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1108:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6404
		{
			sqlVAL.union.val = &tree.With{Recursive: true, CTEList: sqlDollar[3].union.ctes()}
		}
	case 1109:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6410
		{
			sqlVAL.union.val = []*tree.CTE{sqlDollar[1].union.cte()}
		}
	case 1110:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6414
		{
			sqlVAL.union.val = append(sqlDollar[1].union.ctes(), sqlDollar[3].union.cte())
		}
	case 1111:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6420
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Stmt: sqlDollar[5].union.stmt(),
			}
		}
	case 1112:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6428
		{
		}
	case 1113:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6429
		{
		}
	case 1114:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6433
		{
			sqlVAL.union.val = sqlDollar[1].union.with()
		}
	case 1115:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6437
		{
			sqlVAL.union.val = nil
		}
	case 1116:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6442
		{
		}
	case 1117:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6443
		{
		}
	case 1118:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6447
		{
			sqlVAL.union.val = true
		}
	case 1119:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6451
		{
			sqlVAL.union.val = false
		}
	case 1120:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6455
		{
			sqlVAL.union.val = false
		}
	case 1121:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6461
		{
			sqlVAL.union.val = true
		}
	case 1122:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6467
		{
			sqlVAL.union.val = tree.DistinctOn(sqlDollar[4].union.exprs())
		}
	case 1123:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6472
		{
		}
	case 1124:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6473
		{
		}
	case 1125:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6477
		{
			sqlVAL.union.val = sqlDollar[1].union.orderBy()
		}
	case 1126:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6481
		{
			sqlVAL.union.val = tree.OrderBy(nil)
		}
	case 1127:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6487
		{
			sqlVAL.union.val = tree.OrderBy(sqlDollar[3].union.orders())
		}
	case 1128:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6493
		{
			sqlVAL.union.val = []*tree.Order{sqlDollar[1].union.order()}
		}
	case 1129:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6497
		{
			sqlVAL.union.val = append(sqlDollar[1].union.orders(), sqlDollar[3].union.order())
		}
	case 1130:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6503
		{

			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = &tree.Order{
				OrderType:  tree.OrderByColumn,
				Expr:       sqlDollar[1].union.expr(),
				Direction:  dir,
				NullsOrder: nullsOrder,
			}
		}
	case 1131:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6524
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{OrderType: tree.OrderByIndex, Direction: sqlDollar[4].union.dir(), Table: name}
		}
	case 1132:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6529
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{
				OrderType: tree.OrderByIndex,
				Direction: sqlDollar[5].union.dir(),
				Table:     name,
				Index:     tree.UnrestrictedName(sqlDollar[4].str),
			}
		}
	case 1133:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6541
		{
			sqlVAL.union.val = tree.NullsFirst
		}
	case 1134:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6545
		{
			sqlVAL.union.val = tree.NullsLast
		}
	case 1135:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6549
		{
			sqlVAL.union.val = tree.DefaultNullsOrder
		}
	case 1136:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6558
		{
			if sqlDollar[1].union.limit() == nil {
				sqlVAL.union.val = sqlDollar[2].union.limit()
			} else {
				sqlVAL.union.val = sqlDollar[1].union.limit()
				sqlVAL.union.val.(*tree.Limit).Offset = sqlDollar[2].union.limit().Offset
			}
		}
	case 1137:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6567
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
			if sqlDollar[2].union.limit() != nil {
				sqlVAL.union.val.(*tree.Limit).Count = sqlDollar[2].union.limit().Count
				sqlVAL.union.val.(*tree.Limit).LimitAll = sqlDollar[2].union.limit().LimitAll
			}
		}
	case 1140:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6578
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
		}
	case 1141:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6579
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1143:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6583
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1144:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6587
		{
			sqlVAL.union.val = &tree.Limit{LimitAll: true}
		}
	case 1145:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6591
		{
			if sqlDollar[2].union.expr() == nil {
				sqlVAL.union.val = (*tree.Limit)(nil)
			} else {
				sqlVAL.union.val = &tree.Limit{Count: sqlDollar[2].union.expr()}
			}
		}
	case 1146:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6605
		{
			sqlVAL.union.val = &tree.Limit{Count: sqlDollar[3].union.expr()}
		}
	case 1147:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6609
		{
			sqlVAL.union.val = &tree.Limit{
				Count: tree.NewNumVal(constant.MakeInt64(1), "", false),
			}
		}
	case 1148:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6617
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1149:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6624
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1153:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6646
		{
		}
	case 1154:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6647
		{
		}
	case 1155:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6650
		{
		}
	case 1156:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6651
		{
		}
	case 1157:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6668
		{
			sqlVAL.union.val = tree.GroupBy(sqlDollar[3].union.exprs())
		}
	case 1158:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6672
		{
			sqlVAL.union.val = tree.GroupBy(nil)
		}
	case 1159:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6678
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1160:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6682
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1161:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6701
		{
			sqlVAL.union.val = &tree.ValuesClause{Rows: []tree.Exprs{sqlDollar[3].union.exprs()}}
		}
	case 1162:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6704
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1163:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6706
		{
			valNode := sqlDollar[1].union.selectStmt().(*tree.ValuesClause)
			valNode.Rows = append(valNode.Rows, sqlDollar[4].union.exprs())
			sqlVAL.union.val = valNode
		}
	case 1164:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6718
		{
			sqlVAL.union.val = tree.From{Tables: sqlDollar[2].union.tblExprs(), AsOf: sqlDollar[3].union.asOfClause()}
		}
	case 1165:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6721
		{
			return helpWith(sqllex, "<SOURCE>")
		}
	case 1166:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6723
		{
			sqlVAL.union.val = tree.From{}
		}
	case 1167:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6729
		{
			sqlVAL.union.val = tree.TableExprs{sqlDollar[1].union.tblExpr()}
		}
	case 1168:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6733
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblExprs(), sqlDollar[3].union.tblExpr())
		}
	case 1169:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6739
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1170:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6743
		{

			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[4].union.int64())}
		}
	case 1171:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6748
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Ascending}
		}
	case 1172:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6753
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Descending}
		}
	case 1173:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6759
		{
			sqlVAL.union.val = &tree.IndexFlags{NoIndexJoin: true}
		}
	case 1174:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6764
		{

			sqlVAL.union.val = &tree.IndexFlags{IgnoreForeignKeys: true}
		}
	case 1175:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6771
		{
			sqlVAL.union.val = sqlDollar[1].union.indexFlags()
		}
	case 1176:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6776
		{
			a := sqlDollar[1].union.indexFlags()
			b := sqlDollar[3].union.indexFlags()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1177:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6787
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1178:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6791
		{
			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[3].union.int64())}
		}
	case 1179:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6795
		{
			flags := sqlDollar[3].union.indexFlags()
			if err := flags.Check(); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = flags
		}
	case 1180:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6803
		{
			sqlVAL.union.val = (*tree.IndexFlags)(nil)
		}
	case 1181:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6834
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1182:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6844
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1183:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6854
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[1].union.selectStmt()},
				Ordinality: sqlDollar[2].union.bool(),
				As:         sqlDollar[3].union.aliasClause(),
			}
		}
	case 1184:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6862
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[2].union.selectStmt()},
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1185:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6871
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1186:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6875
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1187:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6879
		{
			f := sqlDollar[1].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[2].union.bool(),

				As: sqlDollar[3].union.aliasClause(),
			}
		}
	case 1188:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6890
		{
			f := sqlDollar[2].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1189:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6914
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.StatementSource{Statement: sqlDollar[2].union.stmt()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1190:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6920
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
				Columns: sqlDollar[3].union.tableRefCols(),
				As:      sqlDollar[4].union.aliasClause(),
			}
		}
	case 1191:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6931
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: tree.Exprs{sqlDollar[1].union.expr()}}
		}
	case 1192:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6935
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: sqlDollar[4].union.exprs()}
		}
	case 1193:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6941
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1194:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6943
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1195:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6947
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1196:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6953
		{
		}
	case 1197:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6955
		{
			return unimplemented(sqllex, "ROWS FROM with col_def_list")
		}
	case 1198:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6958
		{
			sqlVAL.union.val = nil
		}
	case 1199:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6959
		{
			sqlVAL.union.val = []tree.ColumnID{}
		}
	case 1200:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6960
		{
			sqlVAL.union.val = sqlDollar[2].union.tableRefCols()
		}
	case 1201:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6964
		{
			sqlVAL.union.val = []tree.ColumnID{tree.ColumnID(sqlDollar[1].union.int64())}
		}
	case 1202:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6968
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tableRefCols(), tree.ColumnID(sqlDollar[3].union.int64()))
		}
	case 1203:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6974
		{
			sqlVAL.union.val = true
		}
	case 1204:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6978
		{
			sqlVAL.union.val = false
		}
	case 1205:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6998
		{
			sqlVAL.union.val = &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}
		}
	case 1206:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7002
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: tree.AstCross, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Hint: sqlDollar[3].str}
		}
	case 1207:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7006
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[2].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Cond: sqlDollar[6].union.joinCond(), Hint: sqlDollar[3].str}
		}
	case 1208:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7010
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[3].union.tblExpr(), Cond: sqlDollar[4].union.joinCond()}
		}
	case 1209:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7014
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[3].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[6].union.tblExpr(), Cond: tree.NaturalJoinCond{}, Hint: sqlDollar[4].str}
		}
	case 1210:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7018
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[4].union.tblExpr(), Cond: tree.NaturalJoinCond{}}
		}
	case 1211:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7024
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str), Cols: sqlDollar[3].union.nameList()}
		}
	case 1212:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7028
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()}
		}
	case 1214:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7035
		{
			sqlVAL.union.val = tree.AliasClause{}
		}
	case 1215:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7041
		{
			sqlVAL.union.val = tree.AsOfClause{Expr: sqlDollar[5].union.expr()}
		}
	case 1217:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7048
		{
			sqlVAL.union.val = tree.AsOfClause{}
		}
	case 1218:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7054
		{
			sqlVAL.str = tree.AstFull
		}
	case 1219:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7058
		{
			sqlVAL.str = tree.AstLeft
		}
	case 1220:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7062
		{
			sqlVAL.str = tree.AstRight
		}
	case 1221:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7066
		{
			sqlVAL.str = tree.AstInner
		}
	case 1222:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7072
		{
		}
	case 1223:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7073
		{
		}
	case 1224:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7094
		{
			sqlVAL.str = tree.AstHash
		}
	case 1225:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7098
		{
			sqlVAL.str = tree.AstMerge
		}
	case 1226:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7102
		{
			sqlVAL.str = tree.AstLookup
		}
	case 1227:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7106
		{
			sqlVAL.str = ""
		}
	case 1228:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7119
		{
			sqlVAL.union.val = &tree.UsingJoinCond{Cols: sqlDollar[3].union.nameList()}
		}
	case 1229:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7123
		{
			sqlVAL.union.val = &tree.OnJoinCond{Expr: sqlDollar[2].union.expr()}
		}
	case 1230:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7128
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1231:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7129
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1232:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7130
		{
			sqlVAL.union.val = sqlDollar[2].union.unresolvedObjectName()
		}
	case 1233:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7131
		{
			sqlVAL.union.val = sqlDollar[3].union.unresolvedObjectName()
		}
	case 1234:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7135
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 1235:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7140
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 1236:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7154
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1237:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7158
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str)}
			sqlVAL.union.val = alias
		}
	case 1238:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7164
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = alias
		}
	case 1239:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7170
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 1240:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7180
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 1241:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7190
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1243:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7197
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1244:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7209
		{
			if bounds := sqlDollar[2].union.int32s(); bounds != nil {
				var err error
				sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.colType(), bounds)
				if err != nil {
					return setErr(sqllex, err)
				}
			} else {
				sqlVAL.union.val = sqlDollar[1].union.colType()
			}
		}
	case 1245:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7222
		{

			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.colType(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1246:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7230
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1247:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7231
		{
			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.colType(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1248:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7241
		{
			sqlVAL.union.val = sqlDollar[1].union.colType()
		}
	case 1249:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7248
		{
			sqlVAL.union.val = []int32{-1}
		}
	case 1250:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7249
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1251:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7251
		{

			bound, err := sqlDollar[2].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = []int32{bound}
		}
	case 1252:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7259
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1253:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7260
		{
			sqlVAL.union.val = []int32(nil)
		}
	case 1261:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7272
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "point")
		}
	case 1262:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7273
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "polygon")
		}
	case 1263:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7276
		{
			sqlVAL.union.val = geopb.Shape_Point
		}
	case 1264:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7277
		{
			sqlVAL.union.val = geopb.Shape_LineString
		}
	case 1265:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7278
		{
			sqlVAL.union.val = geopb.Shape_Polygon
		}
	case 1266:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7279
		{
			sqlVAL.union.val = geopb.Shape_GeometryCollection
		}
	case 1267:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7280
		{
			sqlVAL.union.val = geopb.Shape_MultiPolygon
		}
	case 1268:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7281
		{
			sqlVAL.union.val = geopb.Shape_MultiLineString
		}
	case 1269:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7282
		{
			sqlVAL.union.val = geopb.Shape_MultiPoint
		}
	case 1270:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7283
		{
			sqlVAL.union.val = geopb.Shape_Geometry
		}
	case 1271:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7286
		{
			sqlVAL.union.val = types.Geography
		}
	case 1272:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7287
		{
			sqlVAL.union.val = types.Geometry
		}
	case 1273:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7289
		{
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoFigure(), geopb.DefaultGeometrySRID)
		}
	case 1274:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7293
		{
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoFigure(), geopb.DefaultGeographySRID)
		}
	case 1275:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7297
		{
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoFigure(), geopb.SRID(sqlDollar[5].union.int32()))
		}
	case 1276:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7301
		{
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoFigure(), geopb.SRID(sqlDollar[5].union.int32()))
		}
	case 1282:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7321
		{
			sqlVAL.union.val = types.Jsonb
		}
	case 1283:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7325
		{
			sqlVAL.union.val = types.Bytes
		}
	case 1284:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7329
		{
			sqlVAL.union.val = types.Bytes
		}
	case 1285:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7333
		{
			sqlVAL.union.val = types.Bytes
		}
	case 1286:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7337
		{
			sqlVAL.union.val = types.String
		}
	case 1287:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7341
		{
			sqlVAL.union.val = types.Name
		}
	case 1288:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7345
		{
			switch sqllex.(*lexer).nakedIntType.Width() {
			case 32:
				sqlVAL.union.val = &serial4Type
			default:
				sqlVAL.union.val = &serial8Type
			}
		}
	case 1289:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7354
		{
			sqlVAL.union.val = &serial2Type
		}
	case 1290:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7358
		{
			sqlVAL.union.val = &serial2Type
		}
	case 1291:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7362
		{
			sqlVAL.union.val = &serial4Type
		}
	case 1292:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7366
		{
			sqlVAL.union.val = &serial8Type
		}
	case 1293:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7370
		{
			sqlVAL.union.val = &serial8Type
		}
	case 1294:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7374
		{
			sqlVAL.union.val = types.Uuid
		}
	case 1295:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7378
		{
			sqlVAL.union.val = types.INet
		}
	case 1296:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7382
		{
			sqlVAL.union.val = types.Oid
		}
	case 1297:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7386
		{
			sqlVAL.union.val = types.OidVector
		}
	case 1298:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7390
		{
			sqlVAL.union.val = types.Int2Vector
		}
	case 1299:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7394
		{

			if sqlDollar[1].str == "char" {
				sqlVAL.union.val = types.MakeQChar(0)
			} else {
				var ok bool
				var unimp int
				sqlVAL.union.val, ok, unimp = types.TypeForNonKeywordTypeName(sqlDollar[1].str)
				if !ok {
					switch unimp {
					case 0:

						sqllex.Error("type does not exist")
						return 1
					case -1:
						return unimplemented(sqllex, "type name "+sqlDollar[1].str)
					default:
						return unimplementedWithIssueDetail(sqllex, unimp, sqlDollar[1].str)
					}
				}
			}
		}
	case 1300:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7425
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), 0)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1301:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7433
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), sqlDollar[4].union.int32())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1302:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7441
		{
			sqlVAL.union.val = nil
		}
	case 1303:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7448
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1304:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7452
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1305:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7456
		{
			sqlVAL.union.val = types.Int2
		}
	case 1306:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7460
		{
			sqlVAL.union.val = types.Int2
		}
	case 1307:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7464
		{
			sqlVAL.union.val = types.Int4
		}
	case 1308:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7468
		{
			sqlVAL.union.val = types.Int
		}
	case 1309:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7472
		{
			sqlVAL.union.val = types.Int
		}
	case 1310:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7476
		{
			sqlVAL.union.val = types.Int
		}
	case 1311:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7480
		{
			sqlVAL.union.val = types.Float4
		}
	case 1312:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7484
		{
			sqlVAL.union.val = types.Float4
		}
	case 1313:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7488
		{
			sqlVAL.union.val = types.Float
		}
	case 1314:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7492
		{
			sqlVAL.union.val = sqlDollar[2].union.colType()
		}
	case 1315:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7496
		{
			sqlVAL.union.val = types.Float
		}
	case 1316:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7500
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1317:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7508
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1318:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7516
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1319:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7524
		{
			sqlVAL.union.val = types.Bool
		}
	case 1320:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7528
		{
			sqlVAL.union.val = types.Bool
		}
	case 1321:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7535
		{
			sqlVAL.union.val = types.RegProc
		}
	case 1322:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7539
		{
			sqlVAL.union.val = types.RegProcedure
		}
	case 1323:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7543
		{
			sqlVAL.union.val = types.RegClass
		}
	case 1324:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7547
		{
			sqlVAL.union.val = types.RegType
		}
	case 1325:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7551
		{
			sqlVAL.union.val = types.RegNamespace
		}
	case 1326:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7557
		{
			nv := sqlDollar[2].union.numVal()
			prec, err := nv.AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			typ, err := newFloat(prec)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = typ
		}
	case 1327:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7570
		{
			sqlVAL.union.val = types.Float
		}
	case 1328:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7576
		{
			bit, err := newBitType(sqlDollar[4].union.int32(), sqlDollar[2].union.bool())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1329:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7582
		{
			bit, err := newBitType(sqlDollar[3].union.int32(), true)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1330:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7590
		{
			sqlVAL.union.val = types.MakeBit(1)
		}
	case 1331:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7594
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1332:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7598
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1333:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7604
		{
			colTyp := *sqlDollar[1].union.colType()
			n := sqlDollar[3].union.int32()
			if n == 0 {
				sqllex.Error(fmt.Sprintf("length for type %s must be at least 1", colTyp.SQLString()))
				return 1
			}
			sqlVAL.union.val = types.MakeScalar(types.StringFamily, colTyp.Oid(), colTyp.Precision(), n, colTyp.Locale())
		}
	case 1334:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7616
		{
			sqlVAL.union.val = sqlDollar[1].union.colType()
		}
	case 1335:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7622
		{
			sqlVAL.union.val = types.MakeChar(1)
		}
	case 1336:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7626
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1337:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7630
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1338:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7634
		{
			sqlVAL.union.val = types.String
		}
	case 1341:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7643
		{
			sqlVAL.union.val = true
		}
	case 1342:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7644
		{
			sqlVAL.union.val = false
		}
	case 1343:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7649
		{
			sqlVAL.union.val = types.Date
		}
	case 1344:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7653
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimeTZ
			} else {
				sqlVAL.union.val = types.Time
			}
		}
	case 1345:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7661
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimeTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTime(prec)
			}
		}
	case 1346:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7673
		{
			sqlVAL.union.val = types.TimeTZ
		}
	case 1347:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7675
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimeTZ(prec)
		}
	case 1348:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7684
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimestampTZ
			} else {
				sqlVAL.union.val = types.Timestamp
			}
		}
	case 1349:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7692
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimestampTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTimestamp(prec)
			}
		}
	case 1350:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7705
		{
			sqlVAL.union.val = types.TimestampTZ
		}
	case 1351:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7709
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimestampTZ(prec)
		}
	case 1352:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7719
		{
			sqlVAL.union.val = true
		}
	case 1353:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7720
		{
			sqlVAL.union.val = false
		}
	case 1354:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7721
		{
			sqlVAL.union.val = false
		}
	case 1355:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7725
		{
			sqlVAL.union.val = types.Interval
		}
	case 1356:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7729
		{
			sqlVAL.union.val = types.MakeInterval(sqlDollar[2].union.intervalTypeMetadata())
		}
	case 1357:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7733
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeInterval(types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true})
		}
	case 1358:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7744
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_YEAR,
				},
			}
		}
	case 1359:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7752
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1360:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7760
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_DAY,
				},
			}
		}
	case 1361:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7768
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1362:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7776
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1363:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7784
		{
			sqlVAL.union.val = sqlDollar[1].union.intervalTypeMetadata()
		}
	case 1364:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7790
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_YEAR,
					DurationType:     types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1365:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7799
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1366:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7808
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1367:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7817
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_DAY
			sqlVAL.union.val = ret
		}
	case 1368:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7823
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_HOUR,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1369:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7832
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_HOUR
			sqlVAL.union.val = ret
		}
	case 1370:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7838
		{
			sqlVAL.union.val = sqlDollar[3].union.intervalTypeMetadata()
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_MINUTE
			sqlVAL.union.val = ret
		}
	case 1372:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7848
		{
			sqlVAL.union.val = nil
		}
	case 1373:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7854
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
			}
		}
	case 1374:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7862
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
				PrecisionIsSet: true,
				Precision:      prec,
			}
		}
	case 1376:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7899
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.colType(), SyntaxMode: tree.CastShort}
		}
	case 1377:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7903
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.colType(), SyntaxMode: tree.AnnotateShort}
		}
	case 1378:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7907
		{
			sqlVAL.union.val = &tree.CollateExpr{Expr: sqlDollar[1].union.expr(), Locale: sqlDollar[3].str}
		}
	case 1379:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7911
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("timezone"), Exprs: tree.Exprs{sqlDollar[5].union.expr(), sqlDollar[1].union.expr()}}
		}
	case 1380:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7922
		{

			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1381:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7927
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1382:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7931
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryComplement, Expr: sqlDollar[2].union.expr()}
		}
	case 1383:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7935
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Plus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1384:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7939
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Minus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1385:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7943
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mult, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1386:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7947
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Div, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1387:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7951
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.FloorDiv, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1388:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7955
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mod, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1389:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7959
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Pow, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1390:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7963
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitxor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1391:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7967
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitand, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1392:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7971
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1393:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7975
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1394:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7979
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1395:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7983
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1396:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7987
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONSomeExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1397:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7991
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONAllExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1398:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7995
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Contains, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1399:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7999
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.ContainedBy, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1400:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8003
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1401:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8007
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Concat, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1402:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8011
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.LShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1403:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8015
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.RShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1404:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8019
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchVal, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1405:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8023
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchText, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1406:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8027
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchValPath, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1407:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8031
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchTextPath, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1408:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8035
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("json_remove_path"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1409:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8039
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contained_by_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1410:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8043
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Overlaps, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1411:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8047
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contains_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1412:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8051
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1413:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8055
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1414:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8059
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1415:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8063
		{
			sqlVAL.union.val = &tree.AndExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1416:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8067
		{
			sqlVAL.union.val = &tree.OrExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1417:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8071
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1418:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8075
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1419:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8079
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Like, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1420:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8083
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1421:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8087
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotLike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1422:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8091
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1423:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8095
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.ILike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1424:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8099
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1425:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8103
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotILike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1426:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8107
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1427:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8111
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.SimilarTo, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1428:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8115
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1429:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8119
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotSimilarTo, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1430:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8123
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[5].union.expr(), sqlDollar[7].union.expr()}}
		}
	case 1431:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8127
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.RegMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1432:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8131
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotRegMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1433:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8135
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.RegIMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1434:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8139
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotRegIMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1435:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8143
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1436:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8147
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1437:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8151
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1438:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8155
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1439:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8159
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1440:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8163
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1441:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8166
		{
			return unimplemented(sqllex, "overlaps")
		}
	case 1442:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8168
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1443:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8172
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1444:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8176
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1445:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8180
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1446:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8184
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1447:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8188
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1448:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8192
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1449:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8196
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1450:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8200
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.colTypes()}
		}
	case 1451:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8204
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.colTypes()}
		}
	case 1452:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8208
		{
			sqlVAL.union.val = &tree.RangeCond{Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1453:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8212
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1454:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8216
		{
			sqlVAL.union.val = &tree.RangeCond{Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1455:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8220
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1456:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8224
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.In, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1457:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8228
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotIn, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1458:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8232
		{
			op := sqlDollar[3].union.cmpOp()
			subOp := sqlDollar[2].union.op()
			subOpCmp, ok := subOp.(tree.ComparisonOperator)
			if !ok {
				sqllex.Error(fmt.Sprintf("%s %s <array> is invalid because %q is not a boolean operator",
					subOp, op, subOp))
				return 1
			}
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator:    op,
				SubOperator: subOpCmp,
				Left:        sqlDollar[1].union.expr(),
				Right:       sqlDollar[4].union.expr(),
			}
		}
	case 1459:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8249
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 1460:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8254
		{
			return unimplemented(sqllex, "UNIQUE predicate")
		}
	case 1462:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8266
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.colType(), SyntaxMode: tree.CastShort}
		}
	case 1463:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8270
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.colType(), SyntaxMode: tree.AnnotateShort}
		}
	case 1464:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8274
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1465:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8278
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1466:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8282
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryComplement, Expr: sqlDollar[2].union.expr()}
		}
	case 1467:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8286
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Plus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1468:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8290
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Minus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1469:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8294
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mult, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1470:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8298
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Div, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1471:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8302
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.FloorDiv, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1472:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8306
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mod, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1473:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8310
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Pow, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1474:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8314
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitxor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1475:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8318
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitand, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1476:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8322
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1477:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8326
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1478:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8330
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1479:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8334
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1480:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8338
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Concat, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1481:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8342
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.LShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1482:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8346
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.RShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1483:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8350
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1484:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8354
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1485:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8358
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1486:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8362
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1487:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8366
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1488:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8370
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.colTypes()}
		}
	case 1489:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8374
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.colTypes()}
		}
	case 1491:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8388
		{
			sqlVAL.union.val = &tree.IndirectionExpr{
				Expr:        sqlDollar[1].union.expr(),
				Indirection: sqlDollar[2].union.arraySubscripts(),
			}
		}
	case 1493:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8396
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[2].union.selectStmt(), Exists: true}
		}
	case 1494:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8432
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1495:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8436
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1496:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8440
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 1497:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8444
		{
			sqlVAL.union.val = tree.NewBytesStrVal(sqlDollar[1].str)
		}
	case 1498:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8448
		{
			d, err := tree.ParseDBitArray(sqlDollar[1].str)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 1499:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8453
		{
			return unimplemented(sqllex, sqlDollar[1].union.unresolvedName().String()+"(...) SCONST")
		}
	case 1500:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8455
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: sqlDollar[1].union.colType(), SyntaxMode: tree.CastPrepend}
		}
	case 1501:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8459
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1502:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8463
		{
			sqlVAL.union.val = tree.MakeDBool(true)
		}
	case 1503:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8467
		{
			sqlVAL.union.val = tree.MakeDBool(false)
		}
	case 1504:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8471
		{
			sqlVAL.union.val = tree.DNull
		}
	case 1505:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8475
		{
			sqlVAL.union.val = tree.Expr(sqlDollar[1].union.unresolvedName())
		}
	case 1506:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8479
		{
			colNum := sqlDollar[2].union.int64()
			if colNum < 1 || colNum > int64(MaxInt) {
				sqllex.Error(fmt.Sprintf("invalid column ordinal: @%d", colNum))
				return 1
			}
			sqlVAL.union.val = tree.NewOrdinalReference(int(colNum - 1))
		}
	case 1507:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8488
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 1508:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8495
		{
			sqlVAL.union.val = &tree.TupleStar{Expr: sqlDollar[2].union.expr()}
		}
	case 1509:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8499
		{
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ColName: sqlDollar[5].str}
		}
	case 1510:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8503
		{
			idx, err := sqlDollar[6].union.numVal().AsInt32()
			if err != nil || idx <= 0 {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ByIndex: true, ColIndex: int(idx - 1)}
		}
	case 1511:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8509
		{
			sqlVAL.union.val = &tree.ParenExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1513:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8514
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1514:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8518
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 1515:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8522
		{
			sqlVAL.union.val = &tree.ArrayFlatten{Subquery: &tree.Subquery{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1516:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8526
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.tuple().Exprs}
		}
	case 1517:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8530
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1518:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8533
		{
			return unimplemented(sqllex, "d_expr grouping")
		}
	case 1519:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8537
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName()}
		}
	case 1520:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8541
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: sqlDollar[3].union.exprs(), OrderBy: sqlDollar[4].union.orderBy()}
		}
	case 1521:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8544
		{
			return unimplemented(sqllex, "variadic")
		}
	case 1522:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8545
		{
			return unimplemented(sqllex, "variadic")
		}
	case 1523:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8547
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.AllFuncType, Exprs: sqlDollar[4].union.exprs(), OrderBy: sqlDollar[5].union.orderBy()}
		}
	case 1524:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8553
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.DistinctFuncType, Exprs: sqlDollar[4].union.exprs()}
		}
	case 1525:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8557
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: tree.Exprs{tree.StarExpr()}}
		}
	case 1526:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8560
		{
			return helpWithFunction(sqllex, sqlDollar[1].union.resolvableFuncRefFromName())
		}
	case 1527:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8571
		{
			f := sqlDollar[1].union.expr().(*tree.FuncExpr)
			f.Filter = sqlDollar[3].union.expr()
			f.WindowDef = sqlDollar[4].union.windowDef()
			sqlVAL.union.val = f
		}
	case 1528:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8578
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1529:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8587
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1530:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8588
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1531:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8593
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("pg_collation_for"), Exprs: tree.Exprs{sqlDollar[4].union.expr()}}
		}
	case 1532:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8597
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1533:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8601
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1534:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8607
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_database")}
		}
	case 1535:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8611
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1536:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8615
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1537:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8619
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1538:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8623
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1539:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8627
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1540:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8633
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1541:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8637
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1542:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8641
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1543:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8645
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.colType(), SyntaxMode: tree.CastExplicit}
		}
	case 1544:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8649
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.colType(), SyntaxMode: tree.AnnotateExplicit}
		}
	case 1545:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8653
		{
			sqlVAL.union.val = &tree.IfExpr{Cond: sqlDollar[3].union.expr(), True: sqlDollar[5].union.expr(), Else: sqlDollar[7].union.expr()}
		}
	case 1546:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8657
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr(), ErrCode: sqlDollar[7].union.expr()}
		}
	case 1547:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8661
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr()}
		}
	case 1548:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8665
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr()}
		}
	case 1549:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8669
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), ErrCode: sqlDollar[5].union.expr()}
		}
	case 1550:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8673
		{
			sqlVAL.union.val = &tree.NullIfExpr{Expr1: sqlDollar[3].union.expr(), Expr2: sqlDollar[5].union.expr()}
		}
	case 1551:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8677
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "IFNULL", Exprs: tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1552:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8681
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "COALESCE", Exprs: sqlDollar[3].union.exprs()}
		}
	case 1554:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8688
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1555:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8691
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1556:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8693
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1557:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8696
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1558:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8698
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1559:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8702
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1560:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8705
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1561:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8707
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1562:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8711
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1563:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8714
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1564:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8716
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1565:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8720
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1566:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8723
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1567:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8725
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1568:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8729
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1569:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8732
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1570:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8734
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1571:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8737
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1572:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8739
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1573:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8742
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1574:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8744
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1575:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8747
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1576:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8749
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1577:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8752
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1578:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8754
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("strpos"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1579:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8758
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1580:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8761
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1581:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8762
		{
			return unimplemented(sqllex, "treat")
		}
	case 1582:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8764
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1583:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8768
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ltrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1584:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8772
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("rtrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1585:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8776
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1586:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8780
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1587:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8783
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1588:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8785
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1589:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8788
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1590:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8793
		{
			return unimplemented(sqllex, "within group")
		}
	case 1591:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8794
		{
		}
	case 1592:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8798
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 1593:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8802
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1594:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8809
		{
			sqlVAL.union.val = sqlDollar[2].union.window()
		}
	case 1595:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8813
		{
			sqlVAL.union.val = tree.Window(nil)
		}
	case 1596:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8819
		{
			sqlVAL.union.val = tree.Window{sqlDollar[1].union.windowDef()}
		}
	case 1597:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8823
		{
			sqlVAL.union.val = append(sqlDollar[1].union.window(), sqlDollar[3].union.windowDef())
		}
	case 1598:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8829
		{
			n := sqlDollar[3].union.windowDef()
			n.Name = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = n
		}
	case 1599:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8837
		{
			sqlVAL.union.val = sqlDollar[2].union.windowDef()
		}
	case 1600:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8841
		{
			sqlVAL.union.val = &tree.WindowDef{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1601:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8845
		{
			sqlVAL.union.val = (*tree.WindowDef)(nil)
		}
	case 1602:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8852
		{
			sqlVAL.union.val = &tree.WindowDef{
				RefName:    tree.Name(sqlDollar[2].str),
				Partitions: sqlDollar[3].union.exprs(),
				OrderBy:    sqlDollar[4].union.orderBy(),
				Frame:      sqlDollar[5].union.windowFrame(),
			}
		}
	case 1604:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8872
		{
			sqlVAL.str = ""
		}
	case 1605:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8878
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 1606:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8882
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 1607:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8888
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.RANGE,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1608:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8896
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.ROWS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1609:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8904
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.GROUPS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1610:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8912
		{
			sqlVAL.union.val = (*tree.WindowFrame)(nil)
		}
	case 1611:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8918
		{
			startBound := sqlDollar[1].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.BoundType == tree.OffsetFollowing:
				sqllex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound}
		}
	case 1612:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8931
		{
			startBound := sqlDollar[2].union.windowFrameBound()
			endBound := sqlDollar[4].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.BoundType == tree.UnboundedPreceding:
				sqllex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.BoundType == tree.CurrentRow && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.CurrentRow:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound, EndBound: endBound}
		}
	case 1613:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8959
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedPreceding}
		}
	case 1614:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8963
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedFollowing}
		}
	case 1615:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8967
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.CurrentRow}
		}
	case 1616:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8971
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetPreceding,
			}
		}
	case 1617:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8978
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetFollowing,
			}
		}
	case 1618:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8987
		{
			sqlVAL.union.val = tree.ExcludeCurrentRow
		}
	case 1619:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8991
		{
			sqlVAL.union.val = tree.ExcludeGroup
		}
	case 1620:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8995
		{
			sqlVAL.union.val = tree.ExcludeTies
		}
	case 1621:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8999
		{

			sqlVAL.union.val = tree.NoExclusion
		}
	case 1622:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9004
		{
			sqlVAL.union.val = tree.NoExclusion
		}
	case 1623:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9017
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[3].union.exprs(), Row: true}
		}
	case 1624:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9021
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 1626:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9028
		{
			t := sqlDollar[2].union.tuple()
			labels := sqlDollar[4].union.nameList()
			t.Labels = make([]string, len(labels))
			for i, l := range labels {
				t.Labels[i] = string(l)
			}
			sqlVAL.union.val = t
		}
	case 1627:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9040
		{
			sqlVAL.union.val = tree.Any
		}
	case 1628:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9044
		{
			sqlVAL.union.val = tree.Some
		}
	case 1629:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9048
		{
			sqlVAL.union.val = tree.All
		}
	case 1630:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9053
		{
			sqlVAL.union.val = tree.Plus
		}
	case 1631:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9054
		{
			sqlVAL.union.val = tree.Minus
		}
	case 1632:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9055
		{
			sqlVAL.union.val = tree.Mult
		}
	case 1633:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9056
		{
			sqlVAL.union.val = tree.Div
		}
	case 1634:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9057
		{
			sqlVAL.union.val = tree.FloorDiv
		}
	case 1635:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9058
		{
			sqlVAL.union.val = tree.Mod
		}
	case 1636:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9059
		{
			sqlVAL.union.val = tree.Bitand
		}
	case 1637:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9060
		{
			sqlVAL.union.val = tree.Bitor
		}
	case 1638:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9061
		{
			sqlVAL.union.val = tree.Pow
		}
	case 1639:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9062
		{
			sqlVAL.union.val = tree.Bitxor
		}
	case 1640:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9063
		{
			sqlVAL.union.val = tree.LT
		}
	case 1641:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9064
		{
			sqlVAL.union.val = tree.GT
		}
	case 1642:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9065
		{
			sqlVAL.union.val = tree.EQ
		}
	case 1643:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9066
		{
			sqlVAL.union.val = tree.LE
		}
	case 1644:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9067
		{
			sqlVAL.union.val = tree.GE
		}
	case 1645:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9068
		{
			sqlVAL.union.val = tree.NE
		}
	case 1647:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9072
		{
			sqlVAL.union.val = tree.Like
		}
	case 1648:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9073
		{
			sqlVAL.union.val = tree.NotLike
		}
	case 1649:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9074
		{
			sqlVAL.union.val = tree.ILike
		}
	case 1650:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9075
		{
			sqlVAL.union.val = tree.NotILike
		}
	case 1651:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9098
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 1652:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9102
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1653:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9108
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1654:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9112
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1655:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9116
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 1656:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9127
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 1657:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9131
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1658:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9137
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1659:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9141
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 1661:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9148
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 1662:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9154
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1663:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9158
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1664:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9164
		{
			sqlVAL.union.val = []*types.T{sqlDollar[1].union.colType()}
		}
	case 1665:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9168
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colTypes(), sqlDollar[3].union.colType())
		}
	case 1666:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9174
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1667:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9178
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1668:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9184
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1669:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9188
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1670:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9194
		{
			sqlVAL.union.val = tree.Exprs{tree.NewStrVal(sqlDollar[1].str), sqlDollar[3].union.expr()}
		}
	case 1671:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9198
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1680:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9221
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr(), sqlDollar[4].union.expr()}
		}
	case 1681:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9225
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 1682:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9229
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1683:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9235
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1684:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9242
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[1].union.expr()}
		}
	case 1685:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9246
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 1686:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9263
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 1687:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9267
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[2].union.expr()}
		}
	case 1688:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9271
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr()}
		}
	case 1689:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9275
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), tree.NewDInt(1), sqlDollar[2].union.expr()}
		}
	case 1690:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9279
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1691:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9285
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1692:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9291
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1693:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9297
		{
			sqlVAL.union.val = append(sqlDollar[3].union.exprs(), sqlDollar[1].union.expr())
		}
	case 1694:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9301
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 1695:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9305
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1696:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9311
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1698:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9323
		{
			sqlVAL.union.val = &tree.CaseExpr{Expr: sqlDollar[2].union.expr(), Whens: sqlDollar[3].union.whens(), Else: sqlDollar[4].union.expr()}
		}
	case 1699:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9330
		{
			sqlVAL.union.val = []*tree.When{sqlDollar[1].union.when()}
		}
	case 1700:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9334
		{
			sqlVAL.union.val = append(sqlDollar[1].union.whens(), sqlDollar[2].union.when())
		}
	case 1701:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9340
		{
			sqlVAL.union.val = &tree.When{Cond: sqlDollar[2].union.expr(), Val: sqlDollar[4].union.expr()}
		}
	case 1702:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9346
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1703:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9350
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1705:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9357
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1706:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9363
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr()}
		}
	case 1707:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9367
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr(), End: sqlDollar[4].union.expr(), Slice: true}
		}
	case 1709:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9374
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1710:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9380
		{
			sqlVAL.union.val = tree.ArraySubscripts{sqlDollar[1].union.arraySubscript()}
		}
	case 1711:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9384
		{
			sqlVAL.union.val = append(sqlDollar[1].union.arraySubscripts(), sqlDollar[2].union.arraySubscript())
		}
	case 1712:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9389
		{
		}
	case 1713:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9390
		{
		}
	case 1714:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9394
		{
			sqlVAL.union.val = tree.SelectExprs{sqlDollar[1].union.selExpr()}
		}
	case 1715:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9398
		{
			sqlVAL.union.val = append(sqlDollar[1].union.selExprs(), sqlDollar[3].union.selExpr())
		}
	case 1716:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9404
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1717:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9413
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1718:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9417
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1719:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9421
		{
			sqlVAL.union.val = tree.StarSelectExpr()
		}
	case 1720:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9429
		{
			sqlVAL.union.val = tree.TableIndexNames{sqlDollar[1].union.newTableIndexName()}
		}
	case 1721:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9433
		{
			sqlVAL.union.val = append(sqlDollar[1].union.newTableIndexNames(), sqlDollar[3].union.newTableIndexName())
		}
	case 1722:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9439
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedName()}
		}
	case 1723:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9443
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedName())
		}
	case 1724:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9462
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: tree.UnrestrictedName(sqlDollar[3].str),
			}
		}
	case 1725:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9470
		{

			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			indexName := tree.UnrestrictedName(name.TableName)
			name.TableName = ""
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: indexName,
			}
		}
	case 1726:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9493
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 1728:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9502
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 1729:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9506
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1730:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9510
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 1731:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9514
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 1}
		}
	case 1732:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9520
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1733:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9524
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1738:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9539
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 1739:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9543
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 1742:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9555
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 1743:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9559
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 1744:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9568
		{
			val, err := sqlDollar[1].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 1745:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9579
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 1746:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9588
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 1747:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9596
		{
			var err error
			var d tree.Datum
			if sqlDollar[3].union.val == nil {
				d, err = tree.ParseDInterval(sqlDollar[2].str)
			} else {
				d, err = tree.ParseDIntervalWithTypeMetadata(sqlDollar[2].str, sqlDollar[3].union.intervalTypeMetadata())
			}
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 1748:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9608
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			d, err := tree.ParseDIntervalWithTypeMetadata(sqlDollar[5].str, types.IntervalTypeMetadata{
				Precision:      prec,
				PrecisionIsSet: true,
			})
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 1771:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9709
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 1773:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9716
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 2, Parts: tree.NameParts{sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1774:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9720
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 3, Parts: tree.NameParts{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1775:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9724
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 4, Parts: tree.NameParts{sqlDollar[7].str, sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1777:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9738
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 4, Parts: tree.NameParts{"", sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1778:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9742
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1779:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9746
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 1780:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9759
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 1784:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9777
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1785:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9790
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1786:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9797
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1794:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9822
		{
			sqlVAL.str = ""
		}
	case 1795:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9828
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1796:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9832
		{
			sqlVAL.str = ""
		}
	}
	goto sqlstack /* stack new state and value */
}
