// Code generated by goyacc. DO NOT EDIT.
// GENERATED FILE DO NOT EDIT
// Code generated by goyacc -p sql -o sql.go.tmp sql-gen.y. DO NOT EDIT.

//line sql-gen.y:24
package parser

import (
	"fmt"
	__yyfmt__ "fmt"
	"go/constant"
	"math"
	"strings"

	"github.com/cockroachdb/cockroach/pkg/geo/geopb"
	"github.com/cockroachdb/cockroach/pkg/roachpb"
	"github.com/cockroachdb/cockroach/pkg/security"
	"github.com/cockroachdb/cockroach/pkg/sql/lexbase"
	"github.com/cockroachdb/cockroach/pkg/sql/privilege"
	"github.com/cockroachdb/cockroach/pkg/sql/scanner"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree/treebin"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree/treecmp"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree/treewindow"
	"github.com/cockroachdb/cockroach/pkg/sql/types"
	"github.com/cockroachdb/errors"
	"github.com/lib/pq/oid"
)

//line sql-gen.y:24

const MaxUint = ^uint(0)

const MaxInt = int(MaxUint >> 1)

func unimplemented(sqllex sqlLexer, feature string) int {
	sqllex.(*lexer).Unimplemented(feature)
	return 1
}

func purposelyUnimplemented(sqllex sqlLexer, feature string, reason string) int {
	sqllex.(*lexer).PurposelyUnimplemented(feature, reason)
	return 1
}

func setErr(sqllex sqlLexer, err error) int {
	sqllex.(*lexer).setErr(err)
	return 1
}

func unimplementedWithIssue(sqllex sqlLexer, issue int) int {
	sqllex.(*lexer).UnimplementedWithIssue(issue)
	return 1
}

func unimplementedWithIssueDetail(sqllex sqlLexer, issue int, detail string) int {
	sqllex.(*lexer).UnimplementedWithIssueDetail(issue, detail)
	return 1
}

func processBinaryQualOp(
	sqllex sqlLexer,
	op tree.Operator,
	lhs tree.Expr,
	rhs tree.Expr,
) (tree.Expr, int) {
	switch op := op.(type) {
	case treebin.BinaryOperator:
		op.IsExplicitOperator = true
		return &tree.BinaryExpr{Operator: op, Left: lhs, Right: rhs}, 0
	case treecmp.ComparisonOperator:
		op.IsExplicitOperator = true
		return &tree.ComparisonExpr{Operator: op, Left: lhs, Right: rhs}, 0
	case tree.UnaryOperator:

		switch op.Symbol {
		case tree.UnaryComplement:
			return &tree.ComparisonExpr{
				Operator: treecmp.ComparisonOperator{
					Symbol:             treecmp.RegMatch,
					IsExplicitOperator: true,
				},
				Left:  lhs,
				Right: rhs,
			}, 0
		default:
			sqllex.Error(fmt.Sprintf("unknown binary operator %s", op))
			return nil, -1
		}
	default:
		sqllex.Error(fmt.Sprintf("unknown binary operator %s", op))
		return nil, 1
	}
}

func processUnaryQualOp(
	sqllex sqlLexer,
	op tree.Operator,
	expr tree.Expr,
) (tree.Expr, int) {
	e, code := processUnaryQualOpInternal(sqllex, op, expr)
	if code != 0 {
		return e, code
	}
	if e, ok := e.(*tree.UnaryExpr); ok {
		e.Operator.IsExplicitOperator = true
	}
	return e, code
}

func processUnaryQualOpInternal(
	sqllex sqlLexer,
	op tree.Operator,
	expr tree.Expr,
) (tree.Expr, int) {
	switch op := op.(type) {
	case tree.UnaryOperator:
		return &tree.UnaryExpr{Operator: op, Expr: expr}, 0
	case treebin.BinaryOperator:

		switch op.Symbol {
		case treebin.Plus:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryPlus),
				Expr:     expr,
			}, 0
		case treebin.Minus:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryMinus),
				Expr:     expr,
			}, 0
		}
	case treecmp.ComparisonOperator:
		switch op.Symbol {
		case treecmp.RegMatch:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryComplement),
				Expr:     expr,
			}, 0
		}
	}
	sqllex.Error(fmt.Sprintf("unknown unary operator %s", op))
	return nil, 1
}

//line sql-gen.y:168

var _ scanner.ScanSymType = &sqlSymType{}

func (s *sqlSymType) ID() int32 {
	return s.id
}

func (s *sqlSymType) SetID(id int32) {
	s.id = id
}

func (s *sqlSymType) Pos() int32 {
	return s.pos
}

func (s *sqlSymType) SetPos(pos int32) {
	s.pos = pos
}

func (s *sqlSymType) Str() string {
	return s.str
}

func (s *sqlSymType) SetStr(str string) {
	s.str = str
}

func (s *sqlSymType) UnionVal() interface{} {
	return s.union.val
}

func (s *sqlSymType) SetUnionVal(val interface{}) {
	s.union.val = val
}

type sqlSymUnion struct {
	val interface{}
}

func (u *sqlSymUnion) numVal() *tree.NumVal {
	return u.val.(*tree.NumVal)
}
func (u *sqlSymUnion) strVal() *tree.StrVal {
	if stmt, ok := u.val.(*tree.StrVal); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) placeholder() *tree.Placeholder {
	return u.val.(*tree.Placeholder)
}
func (u *sqlSymUnion) auditMode() tree.AuditMode {
	return u.val.(tree.AuditMode)
}
func (u *sqlSymUnion) bool() bool {
	return u.val.(bool)
}
func (u *sqlSymUnion) strPtr() *string {
	return u.val.(*string)
}
func (u *sqlSymUnion) strs() []string {
	return u.val.([]string)
}
func (u *sqlSymUnion) roleSpec() tree.RoleSpec {
	return u.val.(tree.RoleSpec)
}
func (u *sqlSymUnion) roleSpecList() tree.RoleSpecList {
	return u.val.(tree.RoleSpecList)
}
func (u *sqlSymUnion) user() security.SQLUsername {
	return u.val.(security.SQLUsername)
}
func (u *sqlSymUnion) userPtr() *security.SQLUsername {
	return u.val.(*security.SQLUsername)
}
func (u *sqlSymUnion) users() []security.SQLUsername {
	return u.val.([]security.SQLUsername)
}
func (u *sqlSymUnion) newTableIndexName() *tree.TableIndexName {
	tn := u.val.(tree.TableIndexName)
	return &tn
}
func (u *sqlSymUnion) tableIndexName() tree.TableIndexName {
	return u.val.(tree.TableIndexName)
}
func (u *sqlSymUnion) newTableIndexNames() tree.TableIndexNames {
	return u.val.(tree.TableIndexNames)
}
func (u *sqlSymUnion) shardedIndexDef() *tree.ShardedIndexDef {
	return u.val.(*tree.ShardedIndexDef)
}
func (u *sqlSymUnion) nameList() tree.NameList {
	return u.val.(tree.NameList)
}
func (u *sqlSymUnion) enumValueList() tree.EnumValueList {
	return u.val.(tree.EnumValueList)
}
func (u *sqlSymUnion) unresolvedName() *tree.UnresolvedName {
	return u.val.(*tree.UnresolvedName)
}
func (u *sqlSymUnion) unresolvedObjectName() *tree.UnresolvedObjectName {
	return u.val.(*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) unresolvedObjectNames() []*tree.UnresolvedObjectName {
	return u.val.([]*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) functionReference() tree.FunctionReference {
	return u.val.(tree.FunctionReference)
}
func (u *sqlSymUnion) tablePatterns() tree.TablePatterns {
	return u.val.(tree.TablePatterns)
}
func (u *sqlSymUnion) tableNames() tree.TableNames {
	return u.val.(tree.TableNames)
}
func (u *sqlSymUnion) indexFlags() *tree.IndexFlags {
	return u.val.(*tree.IndexFlags)
}
func (u *sqlSymUnion) arraySubscript() *tree.ArraySubscript {
	return u.val.(*tree.ArraySubscript)
}
func (u *sqlSymUnion) arraySubscripts() tree.ArraySubscripts {
	if as, ok := u.val.(tree.ArraySubscripts); ok {
		return as
	}
	return nil
}
func (u *sqlSymUnion) stmt() tree.Statement {
	if stmt, ok := u.val.(tree.Statement); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) cte() *tree.CTE {
	if cte, ok := u.val.(*tree.CTE); ok {
		return cte
	}
	return nil
}
func (u *sqlSymUnion) ctes() []*tree.CTE {
	return u.val.([]*tree.CTE)
}
func (u *sqlSymUnion) with() *tree.With {
	if with, ok := u.val.(*tree.With); ok {
		return with
	}
	return nil
}
func (u *sqlSymUnion) slct() *tree.Select {
	return u.val.(*tree.Select)
}
func (u *sqlSymUnion) selectStmt() tree.SelectStatement {
	return u.val.(tree.SelectStatement)
}
func (u *sqlSymUnion) colDef() *tree.ColumnTableDef {
	return u.val.(*tree.ColumnTableDef)
}
func (u *sqlSymUnion) constraintDef() tree.ConstraintTableDef {
	return u.val.(tree.ConstraintTableDef)
}
func (u *sqlSymUnion) tblDef() tree.TableDef {
	return u.val.(tree.TableDef)
}
func (u *sqlSymUnion) tblDefs() tree.TableDefs {
	return u.val.(tree.TableDefs)
}
func (u *sqlSymUnion) likeTableOption() tree.LikeTableOption {
	return u.val.(tree.LikeTableOption)
}
func (u *sqlSymUnion) likeTableOptionList() []tree.LikeTableOption {
	return u.val.([]tree.LikeTableOption)
}
func (u *sqlSymUnion) colQual() tree.NamedColumnQualification {
	return u.val.(tree.NamedColumnQualification)
}
func (u *sqlSymUnion) colQualElem() tree.ColumnQualification {
	return u.val.(tree.ColumnQualification)
}
func (u *sqlSymUnion) colQuals() []tree.NamedColumnQualification {
	return u.val.([]tree.NamedColumnQualification)
}
func (u *sqlSymUnion) storageParam() tree.StorageParam {
	return u.val.(tree.StorageParam)
}
func (u *sqlSymUnion) storageParams() []tree.StorageParam {
	if params, ok := u.val.([]tree.StorageParam); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) storageParamKeys() []tree.Name {
	if params, ok := u.val.([]tree.Name); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) persistence() tree.Persistence {
	return u.val.(tree.Persistence)
}
func (u *sqlSymUnion) colType() *types.T {
	if colType, ok := u.val.(*types.T); ok && colType != nil {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) tableRefCols() []tree.ColumnID {
	if refCols, ok := u.val.([]tree.ColumnID); ok {
		return refCols
	}
	return nil
}
func (u *sqlSymUnion) colTypes() []*types.T {
	return u.val.([]*types.T)
}
func (u *sqlSymUnion) int32() int32 {
	return u.val.(int32)
}
func (u *sqlSymUnion) int64() int64 {
	return u.val.(int64)
}
func (u *sqlSymUnion) seqOpt() tree.SequenceOption {
	return u.val.(tree.SequenceOption)
}
func (u *sqlSymUnion) seqOpts() []tree.SequenceOption {
	return u.val.([]tree.SequenceOption)
}
func (u *sqlSymUnion) expr() tree.Expr {
	if expr, ok := u.val.(tree.Expr); ok {
		return expr
	}
	return nil
}
func (u *sqlSymUnion) exprs() tree.Exprs {
	return u.val.(tree.Exprs)
}
func (u *sqlSymUnion) selExpr() tree.SelectExpr {
	return u.val.(tree.SelectExpr)
}
func (u *sqlSymUnion) selExprs() tree.SelectExprs {
	return u.val.(tree.SelectExprs)
}
func (u *sqlSymUnion) retClause() tree.ReturningClause {
	return u.val.(tree.ReturningClause)
}
func (u *sqlSymUnion) aliasClause() tree.AliasClause {
	return u.val.(tree.AliasClause)
}
func (u *sqlSymUnion) asOfClause() tree.AsOfClause {
	return u.val.(tree.AsOfClause)
}
func (u *sqlSymUnion) tblExpr() tree.TableExpr {
	return u.val.(tree.TableExpr)
}
func (u *sqlSymUnion) tblExprs() tree.TableExprs {
	return u.val.(tree.TableExprs)
}
func (u *sqlSymUnion) from() tree.From {
	return u.val.(tree.From)
}
func (u *sqlSymUnion) int32s() []int32 {
	return u.val.([]int32)
}
func (u *sqlSymUnion) joinCond() tree.JoinCond {
	return u.val.(tree.JoinCond)
}
func (u *sqlSymUnion) when() *tree.When {
	return u.val.(*tree.When)
}
func (u *sqlSymUnion) whens() []*tree.When {
	return u.val.([]*tree.When)
}
func (u *sqlSymUnion) lockingClause() tree.LockingClause {
	return u.val.(tree.LockingClause)
}
func (u *sqlSymUnion) lockingItem() *tree.LockingItem {
	return u.val.(*tree.LockingItem)
}
func (u *sqlSymUnion) lockingStrength() tree.LockingStrength {
	return u.val.(tree.LockingStrength)
}
func (u *sqlSymUnion) lockingWaitPolicy() tree.LockingWaitPolicy {
	return u.val.(tree.LockingWaitPolicy)
}
func (u *sqlSymUnion) updateExpr() *tree.UpdateExpr {
	return u.val.(*tree.UpdateExpr)
}
func (u *sqlSymUnion) updateExprs() tree.UpdateExprs {
	return u.val.(tree.UpdateExprs)
}
func (u *sqlSymUnion) limit() *tree.Limit {
	return u.val.(*tree.Limit)
}
func (u *sqlSymUnion) targetList() tree.TargetList {
	return u.val.(tree.TargetList)
}
func (u *sqlSymUnion) targetListPtr() *tree.TargetList {
	return u.val.(*tree.TargetList)
}
func (u *sqlSymUnion) privilegeType() privilege.Kind {
	return u.val.(privilege.Kind)
}
func (u *sqlSymUnion) privilegeList() privilege.List {
	return u.val.(privilege.List)
}
func (u *sqlSymUnion) onConflict() *tree.OnConflict {
	return u.val.(*tree.OnConflict)
}
func (u *sqlSymUnion) orderBy() tree.OrderBy {
	return u.val.(tree.OrderBy)
}
func (u *sqlSymUnion) order() *tree.Order {
	return u.val.(*tree.Order)
}
func (u *sqlSymUnion) orders() []*tree.Order {
	return u.val.([]*tree.Order)
}
func (u *sqlSymUnion) groupBy() tree.GroupBy {
	return u.val.(tree.GroupBy)
}
func (u *sqlSymUnion) windowFrame() *tree.WindowFrame {
	return u.val.(*tree.WindowFrame)
}
func (u *sqlSymUnion) windowFrameBounds() tree.WindowFrameBounds {
	return u.val.(tree.WindowFrameBounds)
}
func (u *sqlSymUnion) windowFrameBound() *tree.WindowFrameBound {
	return u.val.(*tree.WindowFrameBound)
}
func (u *sqlSymUnion) windowFrameExclusion() treewindow.WindowFrameExclusion {
	return u.val.(treewindow.WindowFrameExclusion)
}
func (u *sqlSymUnion) distinctOn() tree.DistinctOn {
	return u.val.(tree.DistinctOn)
}
func (u *sqlSymUnion) dir() tree.Direction {
	return u.val.(tree.Direction)
}
func (u *sqlSymUnion) nullsOrder() tree.NullsOrder {
	return u.val.(tree.NullsOrder)
}
func (u *sqlSymUnion) alterChangefeedCmd() tree.AlterChangefeedCmd {
	return u.val.(tree.AlterChangefeedCmd)
}
func (u *sqlSymUnion) alterChangefeedCmds() tree.AlterChangefeedCmds {
	return u.val.(tree.AlterChangefeedCmds)
}
func (u *sqlSymUnion) backupKMS() tree.BackupKMS {
	return u.val.(tree.BackupKMS)
}
func (u *sqlSymUnion) alterBackupCmd() tree.AlterBackupCmd {
	return u.val.(tree.AlterBackupCmd)
}
func (u *sqlSymUnion) alterBackupCmds() tree.AlterBackupCmds {
	return u.val.(tree.AlterBackupCmds)
}
func (u *sqlSymUnion) alterTableCmd() tree.AlterTableCmd {
	return u.val.(tree.AlterTableCmd)
}
func (u *sqlSymUnion) alterTableCmds() tree.AlterTableCmds {
	return u.val.(tree.AlterTableCmds)
}
func (u *sqlSymUnion) alterIndexCmd() tree.AlterIndexCmd {
	return u.val.(tree.AlterIndexCmd)
}
func (u *sqlSymUnion) alterIndexCmds() tree.AlterIndexCmds {
	return u.val.(tree.AlterIndexCmds)
}
func (u *sqlSymUnion) isoLevel() tree.IsolationLevel {
	return u.val.(tree.IsolationLevel)
}
func (u *sqlSymUnion) userPriority() tree.UserPriority {
	return u.val.(tree.UserPriority)
}
func (u *sqlSymUnion) readWriteMode() tree.ReadWriteMode {
	return u.val.(tree.ReadWriteMode)
}
func (u *sqlSymUnion) deferrableMode() tree.DeferrableMode {
	return u.val.(tree.DeferrableMode)
}
func (u *sqlSymUnion) idxElem() tree.IndexElem {
	return u.val.(tree.IndexElem)
}
func (u *sqlSymUnion) idxElems() tree.IndexElemList {
	return u.val.(tree.IndexElemList)
}
func (u *sqlSymUnion) dropBehavior() tree.DropBehavior {
	return u.val.(tree.DropBehavior)
}
func (u *sqlSymUnion) validationBehavior() tree.ValidationBehavior {
	return u.val.(tree.ValidationBehavior)
}
func (u *sqlSymUnion) partitionBy() *tree.PartitionBy {
	return u.val.(*tree.PartitionBy)
}
func (u *sqlSymUnion) partitionByTable() *tree.PartitionByTable {
	return u.val.(*tree.PartitionByTable)
}
func (u *sqlSymUnion) partitionByIndex() *tree.PartitionByIndex {
	return u.val.(*tree.PartitionByIndex)
}
func (u *sqlSymUnion) createTableOnCommitSetting() tree.CreateTableOnCommitSetting {
	return u.val.(tree.CreateTableOnCommitSetting)
}
func (u *sqlSymUnion) listPartition() tree.ListPartition {
	return u.val.(tree.ListPartition)
}
func (u *sqlSymUnion) listPartitions() []tree.ListPartition {
	return u.val.([]tree.ListPartition)
}
func (u *sqlSymUnion) rangePartition() tree.RangePartition {
	return u.val.(tree.RangePartition)
}
func (u *sqlSymUnion) rangePartitions() []tree.RangePartition {
	return u.val.([]tree.RangePartition)
}
func (u *sqlSymUnion) relocateSubject() tree.RelocateSubject {
	return u.val.(tree.RelocateSubject)
}
func (u *sqlSymUnion) setZoneConfig() *tree.SetZoneConfig {
	return u.val.(*tree.SetZoneConfig)
}
func (u *sqlSymUnion) tuples() []*tree.Tuple {
	return u.val.([]*tree.Tuple)
}
func (u *sqlSymUnion) tuple() *tree.Tuple {
	return u.val.(*tree.Tuple)
}
func (u *sqlSymUnion) windowDef() *tree.WindowDef {
	return u.val.(*tree.WindowDef)
}
func (u *sqlSymUnion) window() tree.Window {
	return u.val.(tree.Window)
}
func (u *sqlSymUnion) op() tree.Operator {
	return u.val.(tree.Operator)
}
func (u *sqlSymUnion) cmpOp() treecmp.ComparisonOperator {
	return u.val.(treecmp.ComparisonOperator)
}
func (u *sqlSymUnion) intervalTypeMetadata() types.IntervalTypeMetadata {
	return u.val.(types.IntervalTypeMetadata)
}
func (u *sqlSymUnion) kvOption() tree.KVOption {
	return u.val.(tree.KVOption)
}
func (u *sqlSymUnion) kvOptions() []tree.KVOption {
	if colType, ok := u.val.([]tree.KVOption); ok {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) backupOptions() *tree.BackupOptions {
	return u.val.(*tree.BackupOptions)
}
func (u *sqlSymUnion) replicationOptions() *tree.ReplicationOptions {
	return u.val.(*tree.ReplicationOptions)
}
func (u *sqlSymUnion) copyOptions() *tree.CopyOptions {
	return u.val.(*tree.CopyOptions)
}
func (u *sqlSymUnion) restoreOptions() *tree.RestoreOptions {
	return u.val.(*tree.RestoreOptions)
}
func (u *sqlSymUnion) transactionModes() tree.TransactionModes {
	return u.val.(tree.TransactionModes)
}
func (u *sqlSymUnion) compositeKeyMatchMethod() tree.CompositeKeyMatchMethod {
	return u.val.(tree.CompositeKeyMatchMethod)
}
func (u *sqlSymUnion) referenceAction() tree.ReferenceAction {
	return u.val.(tree.ReferenceAction)
}
func (u *sqlSymUnion) referenceActions() tree.ReferenceActions {
	return u.val.(tree.ReferenceActions)
}
func (u *sqlSymUnion) createStatsOptions() *tree.CreateStatsOptions {
	return u.val.(*tree.CreateStatsOptions)
}
func (u *sqlSymUnion) scrubOptions() tree.ScrubOptions {
	return u.val.(tree.ScrubOptions)
}
func (u *sqlSymUnion) scrubOption() tree.ScrubOption {
	return u.val.(tree.ScrubOption)
}
func (u *sqlSymUnion) resolvableFuncRefFromName() tree.ResolvableFunctionReference {
	return tree.ResolvableFunctionReference{FunctionReference: u.unresolvedName()}
}
func (u *sqlSymUnion) rowsFromExpr() *tree.RowsFromExpr {
	return u.val.(*tree.RowsFromExpr)
}
func (u *sqlSymUnion) stringOrPlaceholderOptList() tree.StringOrPlaceholderOptList {
	return u.val.(tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) listOfStringOrPlaceholderOptList() []tree.StringOrPlaceholderOptList {
	return u.val.([]tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) fullBackupClause() *tree.FullBackupClause {
	return u.val.(*tree.FullBackupClause)
}

func (u *sqlSymUnion) scheduleLabelSpec() *tree.ScheduleLabelSpec {
	return u.val.(*tree.ScheduleLabelSpec)
}

func (u *sqlSymUnion) geoShapeType() geopb.ShapeType {
	return u.val.(geopb.ShapeType)
}
func newNameFromStr(s string) *tree.Name {
	return (*tree.Name)(&s)
}
func (u *sqlSymUnion) typeReference() tree.ResolvableTypeReference {
	return u.val.(tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) typeReferences() []tree.ResolvableTypeReference {
	return u.val.([]tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) alterTypeAddValuePlacement() *tree.AlterTypeAddValuePlacement {
	return u.val.(*tree.AlterTypeAddValuePlacement)
}
func (u *sqlSymUnion) scheduleState() tree.ScheduleState {
	return u.val.(tree.ScheduleState)
}
func (u *sqlSymUnion) executorType() tree.ScheduledJobExecutorType {
	return u.val.(tree.ScheduledJobExecutorType)
}
func (u *sqlSymUnion) refreshDataOption() tree.RefreshDataOption {
	return u.val.(tree.RefreshDataOption)
}
func (u *sqlSymUnion) locality() *tree.Locality {
	return u.val.(*tree.Locality)
}
func (u *sqlSymUnion) survivalGoal() tree.SurvivalGoal {
	return u.val.(tree.SurvivalGoal)
}
func (u *sqlSymUnion) dataPlacement() tree.DataPlacement {
	return u.val.(tree.DataPlacement)
}
func (u *sqlSymUnion) objectNamePrefix() tree.ObjectNamePrefix {
	return u.val.(tree.ObjectNamePrefix)
}
func (u *sqlSymUnion) objectNamePrefixList() tree.ObjectNamePrefixList {
	return u.val.(tree.ObjectNamePrefixList)
}
func (u *sqlSymUnion) abbreviatedGrant() tree.AbbreviatedGrant {
	return u.val.(tree.AbbreviatedGrant)
}
func (u *sqlSymUnion) abbreviatedRevoke() tree.AbbreviatedRevoke {
	return u.val.(tree.AbbreviatedRevoke)
}
func (u *sqlSymUnion) alterDefaultPrivilegesTargetObject() tree.AlterDefaultPrivilegesTargetObject {
	return u.val.(tree.AlterDefaultPrivilegesTargetObject)
}
func (u *sqlSymUnion) setVar() *tree.SetVar {
	return u.val.(*tree.SetVar)
}
func (u *sqlSymUnion) cursorSensitivity() tree.CursorSensitivity {
	return u.val.(tree.CursorSensitivity)
}
func (u *sqlSymUnion) cursorScrollOption() tree.CursorScrollOption {
	return u.val.(tree.CursorScrollOption)
}
func (u *sqlSymUnion) fetchCursor() *tree.FetchCursor {
	return u.val.(*tree.FetchCursor)
}

//line sql-gen.y:923
type sqlSymType struct {
	yys   int
	id    int32
	pos   int32
	str   string
	union sqlSymUnion
}

const IDENT = lexbase.IDENT
const SCONST = lexbase.SCONST
const BCONST = lexbase.BCONST
const BITCONST = lexbase.BITCONST
const ICONST = lexbase.ICONST
const FCONST = lexbase.FCONST
const PLACEHOLDER = lexbase.PLACEHOLDER
const TYPECAST = lexbase.TYPECAST
const TYPEANNOTATE = lexbase.TYPEANNOTATE
const DOT_DOT = lexbase.DOT_DOT
const LESS_EQUALS = lexbase.LESS_EQUALS
const GREATER_EQUALS = lexbase.GREATER_EQUALS
const NOT_EQUALS = lexbase.NOT_EQUALS
const NOT_REGMATCH = lexbase.NOT_REGMATCH
const REGIMATCH = lexbase.REGIMATCH
const NOT_REGIMATCH = lexbase.NOT_REGIMATCH
const ERROR = lexbase.ERROR
const ABORT = lexbase.ABORT
const ABSOLUTE = lexbase.ABSOLUTE
const ACCESS = lexbase.ACCESS
const ACTION = lexbase.ACTION
const ADD = lexbase.ADD
const ADMIN = lexbase.ADMIN
const AFTER = lexbase.AFTER
const AGGREGATE = lexbase.AGGREGATE
const ALL = lexbase.ALL
const ALTER = lexbase.ALTER
const ALWAYS = lexbase.ALWAYS
const ANALYSE = lexbase.ANALYSE
const ANALYZE = lexbase.ANALYZE
const AND = lexbase.AND
const AND_AND = lexbase.AND_AND
const ANY = lexbase.ANY
const ANNOTATE_TYPE = lexbase.ANNOTATE_TYPE
const ARRAY = lexbase.ARRAY
const AS = lexbase.AS
const ASC = lexbase.ASC
const ASENSITIVE = lexbase.ASENSITIVE
const ASYMMETRIC = lexbase.ASYMMETRIC
const AT = lexbase.AT
const ATTRIBUTE = lexbase.ATTRIBUTE
const AUTHORIZATION = lexbase.AUTHORIZATION
const AUTOMATIC = lexbase.AUTOMATIC
const AVAILABILITY = lexbase.AVAILABILITY
const BACKUP = lexbase.BACKUP
const BACKUPS = lexbase.BACKUPS
const BACKWARD = lexbase.BACKWARD
const BEFORE = lexbase.BEFORE
const BEGIN = lexbase.BEGIN
const BETWEEN = lexbase.BETWEEN
const BIGINT = lexbase.BIGINT
const BIGSERIAL = lexbase.BIGSERIAL
const BINARY = lexbase.BINARY
const BIT = lexbase.BIT
const BUCKET_COUNT = lexbase.BUCKET_COUNT
const BOOLEAN = lexbase.BOOLEAN
const BOTH = lexbase.BOTH
const BOX2D = lexbase.BOX2D
const BUNDLE = lexbase.BUNDLE
const BY = lexbase.BY
const CACHE = lexbase.CACHE
const CANCEL = lexbase.CANCEL
const CANCELQUERY = lexbase.CANCELQUERY
const CASCADE = lexbase.CASCADE
const CASE = lexbase.CASE
const CAST = lexbase.CAST
const CBRT = lexbase.CBRT
const CHANGEFEED = lexbase.CHANGEFEED
const CHAR = lexbase.CHAR
const CHARACTER = lexbase.CHARACTER
const CHARACTERISTICS = lexbase.CHARACTERISTICS
const CHECK = lexbase.CHECK
const CLOSE = lexbase.CLOSE
const CLUSTER = lexbase.CLUSTER
const COALESCE = lexbase.COALESCE
const COLLATE = lexbase.COLLATE
const COLLATION = lexbase.COLLATION
const COLUMN = lexbase.COLUMN
const COLUMNS = lexbase.COLUMNS
const COMMENT = lexbase.COMMENT
const COMMENTS = lexbase.COMMENTS
const COMMIT = lexbase.COMMIT
const COMMITTED = lexbase.COMMITTED
const COMPACT = lexbase.COMPACT
const COMPLETE = lexbase.COMPLETE
const COMPLETIONS = lexbase.COMPLETIONS
const CONCAT = lexbase.CONCAT
const CONCURRENTLY = lexbase.CONCURRENTLY
const CONFIGURATION = lexbase.CONFIGURATION
const CONFIGURATIONS = lexbase.CONFIGURATIONS
const CONFIGURE = lexbase.CONFIGURE
const CONFLICT = lexbase.CONFLICT
const CONNECTION = lexbase.CONNECTION
const CONSTRAINT = lexbase.CONSTRAINT
const CONSTRAINTS = lexbase.CONSTRAINTS
const CONTAINS = lexbase.CONTAINS
const CONTROLCHANGEFEED = lexbase.CONTROLCHANGEFEED
const CONTROLJOB = lexbase.CONTROLJOB
const CONVERSION = lexbase.CONVERSION
const CONVERT = lexbase.CONVERT
const COPY = lexbase.COPY
const COVERING = lexbase.COVERING
const CREATE = lexbase.CREATE
const CREATEDB = lexbase.CREATEDB
const CREATELOGIN = lexbase.CREATELOGIN
const CREATEROLE = lexbase.CREATEROLE
const CROSS = lexbase.CROSS
const CSV = lexbase.CSV
const CUBE = lexbase.CUBE
const CURRENT = lexbase.CURRENT
const CURRENT_CATALOG = lexbase.CURRENT_CATALOG
const CURRENT_DATE = lexbase.CURRENT_DATE
const CURRENT_SCHEMA = lexbase.CURRENT_SCHEMA
const CURRENT_ROLE = lexbase.CURRENT_ROLE
const CURRENT_TIME = lexbase.CURRENT_TIME
const CURRENT_TIMESTAMP = lexbase.CURRENT_TIMESTAMP
const CURRENT_USER = lexbase.CURRENT_USER
const CURSOR = lexbase.CURSOR
const CYCLE = lexbase.CYCLE
const DATA = lexbase.DATA
const DATABASE = lexbase.DATABASE
const DATABASES = lexbase.DATABASES
const DATE = lexbase.DATE
const DAY = lexbase.DAY
const DEBUG_PAUSE_ON = lexbase.DEBUG_PAUSE_ON
const DEC = lexbase.DEC
const DECIMAL = lexbase.DECIMAL
const DEFAULT = lexbase.DEFAULT
const DEFAULTS = lexbase.DEFAULTS
const DEALLOCATE = lexbase.DEALLOCATE
const DECLARE = lexbase.DECLARE
const DEFERRABLE = lexbase.DEFERRABLE
const DEFERRED = lexbase.DEFERRED
const DELETE = lexbase.DELETE
const DELIMITER = lexbase.DELIMITER
const DESC = lexbase.DESC
const DESTINATION = lexbase.DESTINATION
const DETACHED = lexbase.DETACHED
const DISCARD = lexbase.DISCARD
const DISTINCT = lexbase.DISTINCT
const DO = lexbase.DO
const DOMAIN = lexbase.DOMAIN
const DOUBLE = lexbase.DOUBLE
const DROP = lexbase.DROP
const ELSE = lexbase.ELSE
const ENCODING = lexbase.ENCODING
const ENCRYPTED = lexbase.ENCRYPTED
const ENCRYPTION_PASSPHRASE = lexbase.ENCRYPTION_PASSPHRASE
const END = lexbase.END
const ENUM = lexbase.ENUM
const ENUMS = lexbase.ENUMS
const ESCAPE = lexbase.ESCAPE
const EXCEPT = lexbase.EXCEPT
const EXCLUDE = lexbase.EXCLUDE
const EXCLUDING = lexbase.EXCLUDING
const EXISTS = lexbase.EXISTS
const EXECUTE = lexbase.EXECUTE
const EXECUTION = lexbase.EXECUTION
const EXPERIMENTAL = lexbase.EXPERIMENTAL
const EXPERIMENTAL_FINGERPRINTS = lexbase.EXPERIMENTAL_FINGERPRINTS
const EXPERIMENTAL_REPLICA = lexbase.EXPERIMENTAL_REPLICA
const EXPERIMENTAL_AUDIT = lexbase.EXPERIMENTAL_AUDIT
const EXPERIMENTAL_RELOCATE = lexbase.EXPERIMENTAL_RELOCATE
const EXPIRATION = lexbase.EXPIRATION
const EXPLAIN = lexbase.EXPLAIN
const EXPORT = lexbase.EXPORT
const EXTENSION = lexbase.EXTENSION
const EXTRACT = lexbase.EXTRACT
const EXTRACT_DURATION = lexbase.EXTRACT_DURATION
const FAILURE = lexbase.FAILURE
const FALSE = lexbase.FALSE
const FAMILY = lexbase.FAMILY
const FETCH = lexbase.FETCH
const FETCHVAL = lexbase.FETCHVAL
const FETCHTEXT = lexbase.FETCHTEXT
const FETCHVAL_PATH = lexbase.FETCHVAL_PATH
const FETCHTEXT_PATH = lexbase.FETCHTEXT_PATH
const FILES = lexbase.FILES
const FILTER = lexbase.FILTER
const FIRST = lexbase.FIRST
const FLOAT = lexbase.FLOAT
const FLOAT4 = lexbase.FLOAT4
const FLOAT8 = lexbase.FLOAT8
const FLOORDIV = lexbase.FLOORDIV
const FOLLOWING = lexbase.FOLLOWING
const FOR = lexbase.FOR
const FORCE = lexbase.FORCE
const FORCE_INDEX = lexbase.FORCE_INDEX
const FORCE_ZIGZAG = lexbase.FORCE_ZIGZAG
const FOREIGN = lexbase.FOREIGN
const FORWARD = lexbase.FORWARD
const FROM = lexbase.FROM
const FULL = lexbase.FULL
const FUNCTION = lexbase.FUNCTION
const FUNCTIONS = lexbase.FUNCTIONS
const GENERATED = lexbase.GENERATED
const GEOGRAPHY = lexbase.GEOGRAPHY
const GEOMETRY = lexbase.GEOMETRY
const GEOMETRYM = lexbase.GEOMETRYM
const GEOMETRYZ = lexbase.GEOMETRYZ
const GEOMETRYZM = lexbase.GEOMETRYZM
const GEOMETRYCOLLECTION = lexbase.GEOMETRYCOLLECTION
const GEOMETRYCOLLECTIONM = lexbase.GEOMETRYCOLLECTIONM
const GEOMETRYCOLLECTIONZ = lexbase.GEOMETRYCOLLECTIONZ
const GEOMETRYCOLLECTIONZM = lexbase.GEOMETRYCOLLECTIONZM
const GLOBAL = lexbase.GLOBAL
const GOAL = lexbase.GOAL
const GRANT = lexbase.GRANT
const GRANTS = lexbase.GRANTS
const GREATEST = lexbase.GREATEST
const GROUP = lexbase.GROUP
const GROUPING = lexbase.GROUPING
const GROUPS = lexbase.GROUPS
const HAVING = lexbase.HAVING
const HASH = lexbase.HASH
const HIGH = lexbase.HIGH
const HISTOGRAM = lexbase.HISTOGRAM
const HOLD = lexbase.HOLD
const HOUR = lexbase.HOUR
const IDENTITY = lexbase.IDENTITY
const IF = lexbase.IF
const IFERROR = lexbase.IFERROR
const IFNULL = lexbase.IFNULL
const IGNORE_FOREIGN_KEYS = lexbase.IGNORE_FOREIGN_KEYS
const ILIKE = lexbase.ILIKE
const IMMEDIATE = lexbase.IMMEDIATE
const IMPORT = lexbase.IMPORT
const IN = lexbase.IN
const INCLUDE = lexbase.INCLUDE
const INCLUDING = lexbase.INCLUDING
const INCREMENT = lexbase.INCREMENT
const INCREMENTAL = lexbase.INCREMENTAL
const INCREMENTAL_LOCATION = lexbase.INCREMENTAL_LOCATION
const INET = lexbase.INET
const INET_CONTAINED_BY_OR_EQUALS = lexbase.INET_CONTAINED_BY_OR_EQUALS
const INET_CONTAINS_OR_EQUALS = lexbase.INET_CONTAINS_OR_EQUALS
const INDEX = lexbase.INDEX
const INDEXES = lexbase.INDEXES
const INHERITS = lexbase.INHERITS
const INJECT = lexbase.INJECT
const INITIALLY = lexbase.INITIALLY
const INNER = lexbase.INNER
const INSENSITIVE = lexbase.INSENSITIVE
const INSERT = lexbase.INSERT
const INT = lexbase.INT
const INTEGER = lexbase.INTEGER
const INTERSECT = lexbase.INTERSECT
const INTERVAL = lexbase.INTERVAL
const INTO = lexbase.INTO
const INTO_DB = lexbase.INTO_DB
const INVERTED = lexbase.INVERTED
const IS = lexbase.IS
const ISERROR = lexbase.ISERROR
const ISNULL = lexbase.ISNULL
const ISOLATION = lexbase.ISOLATION
const JOB = lexbase.JOB
const JOBS = lexbase.JOBS
const JOIN = lexbase.JOIN
const JSON = lexbase.JSON
const JSONB = lexbase.JSONB
const JSON_SOME_EXISTS = lexbase.JSON_SOME_EXISTS
const JSON_ALL_EXISTS = lexbase.JSON_ALL_EXISTS
const KEY = lexbase.KEY
const KEYS = lexbase.KEYS
const KMS = lexbase.KMS
const KV = lexbase.KV
const LANGUAGE = lexbase.LANGUAGE
const LAST = lexbase.LAST
const LATERAL = lexbase.LATERAL
const LATEST = lexbase.LATEST
const LC_CTYPE = lexbase.LC_CTYPE
const LC_COLLATE = lexbase.LC_COLLATE
const LEADING = lexbase.LEADING
const LEASE = lexbase.LEASE
const LEAST = lexbase.LEAST
const LEFT = lexbase.LEFT
const LESS = lexbase.LESS
const LEVEL = lexbase.LEVEL
const LIKE = lexbase.LIKE
const LIMIT = lexbase.LIMIT
const LINESTRING = lexbase.LINESTRING
const LINESTRINGM = lexbase.LINESTRINGM
const LINESTRINGZ = lexbase.LINESTRINGZ
const LINESTRINGZM = lexbase.LINESTRINGZM
const LIST = lexbase.LIST
const LOCAL = lexbase.LOCAL
const LOCALITY = lexbase.LOCALITY
const LOCALTIME = lexbase.LOCALTIME
const LOCALTIMESTAMP = lexbase.LOCALTIMESTAMP
const LOCKED = lexbase.LOCKED
const LOGIN = lexbase.LOGIN
const LOOKUP = lexbase.LOOKUP
const LOW = lexbase.LOW
const LSHIFT = lexbase.LSHIFT
const MATCH = lexbase.MATCH
const MATERIALIZED = lexbase.MATERIALIZED
const MERGE = lexbase.MERGE
const MINVALUE = lexbase.MINVALUE
const MAXVALUE = lexbase.MAXVALUE
const METHOD = lexbase.METHOD
const MINUTE = lexbase.MINUTE
const MODIFYCLUSTERSETTING = lexbase.MODIFYCLUSTERSETTING
const MONTH = lexbase.MONTH
const MULTILINESTRING = lexbase.MULTILINESTRING
const MULTILINESTRINGM = lexbase.MULTILINESTRINGM
const MULTILINESTRINGZ = lexbase.MULTILINESTRINGZ
const MULTILINESTRINGZM = lexbase.MULTILINESTRINGZM
const MULTIPOINT = lexbase.MULTIPOINT
const MULTIPOINTM = lexbase.MULTIPOINTM
const MULTIPOINTZ = lexbase.MULTIPOINTZ
const MULTIPOINTZM = lexbase.MULTIPOINTZM
const MULTIPOLYGON = lexbase.MULTIPOLYGON
const MULTIPOLYGONM = lexbase.MULTIPOLYGONM
const MULTIPOLYGONZ = lexbase.MULTIPOLYGONZ
const MULTIPOLYGONZM = lexbase.MULTIPOLYGONZM
const NAN = lexbase.NAN
const NAME = lexbase.NAME
const NAMES = lexbase.NAMES
const NATURAL = lexbase.NATURAL
const NEVER = lexbase.NEVER
const NEW_DB_NAME = lexbase.NEW_DB_NAME
const NEW_KMS = lexbase.NEW_KMS
const NEXT = lexbase.NEXT
const NO = lexbase.NO
const NOCANCELQUERY = lexbase.NOCANCELQUERY
const NOCONTROLCHANGEFEED = lexbase.NOCONTROLCHANGEFEED
const NOCONTROLJOB = lexbase.NOCONTROLJOB
const NOCREATEDB = lexbase.NOCREATEDB
const NOCREATELOGIN = lexbase.NOCREATELOGIN
const NOCREATEROLE = lexbase.NOCREATEROLE
const NOLOGIN = lexbase.NOLOGIN
const NOMODIFYCLUSTERSETTING = lexbase.NOMODIFYCLUSTERSETTING
const NOSQLLOGIN = lexbase.NOSQLLOGIN
const NO_INDEX_JOIN = lexbase.NO_INDEX_JOIN
const NO_ZIGZAG_JOIN = lexbase.NO_ZIGZAG_JOIN
const NO_FULL_SCAN = lexbase.NO_FULL_SCAN
const NONE = lexbase.NONE
const NONVOTERS = lexbase.NONVOTERS
const NORMAL = lexbase.NORMAL
const NOT = lexbase.NOT
const NOTHING = lexbase.NOTHING
const NOTNULL = lexbase.NOTNULL
const NOVIEWACTIVITY = lexbase.NOVIEWACTIVITY
const NOVIEWACTIVITYREDACTED = lexbase.NOVIEWACTIVITYREDACTED
const NOVIEWCLUSTERSETTING = lexbase.NOVIEWCLUSTERSETTING
const NOWAIT = lexbase.NOWAIT
const NULL = lexbase.NULL
const NULLIF = lexbase.NULLIF
const NULLS = lexbase.NULLS
const NUMERIC = lexbase.NUMERIC
const OF = lexbase.OF
const OFF = lexbase.OFF
const OFFSET = lexbase.OFFSET
const OID = lexbase.OID
const OIDS = lexbase.OIDS
const OIDVECTOR = lexbase.OIDVECTOR
const OLD_KMS = lexbase.OLD_KMS
const ON = lexbase.ON
const ONLY = lexbase.ONLY
const OPT = lexbase.OPT
const OPTION = lexbase.OPTION
const OPTIONS = lexbase.OPTIONS
const OR = lexbase.OR
const ORDER = lexbase.ORDER
const ORDINALITY = lexbase.ORDINALITY
const OTHERS = lexbase.OTHERS
const OUT = lexbase.OUT
const OUTER = lexbase.OUTER
const OVER = lexbase.OVER
const OVERLAPS = lexbase.OVERLAPS
const OVERLAY = lexbase.OVERLAY
const OWNED = lexbase.OWNED
const OWNER = lexbase.OWNER
const OPERATOR = lexbase.OPERATOR
const PARENT = lexbase.PARENT
const PARTIAL = lexbase.PARTIAL
const PARTITION = lexbase.PARTITION
const PARTITIONS = lexbase.PARTITIONS
const PASSWORD = lexbase.PASSWORD
const PAUSE = lexbase.PAUSE
const PAUSED = lexbase.PAUSED
const PHYSICAL = lexbase.PHYSICAL
const PLACEMENT = lexbase.PLACEMENT
const PLACING = lexbase.PLACING
const PLAN = lexbase.PLAN
const PLANS = lexbase.PLANS
const POINT = lexbase.POINT
const POINTM = lexbase.POINTM
const POINTZ = lexbase.POINTZ
const POINTZM = lexbase.POINTZM
const POLYGON = lexbase.POLYGON
const POLYGONM = lexbase.POLYGONM
const POLYGONZ = lexbase.POLYGONZ
const POLYGONZM = lexbase.POLYGONZM
const POSITION = lexbase.POSITION
const PRECEDING = lexbase.PRECEDING
const PRECISION = lexbase.PRECISION
const PREPARE = lexbase.PREPARE
const PRESERVE = lexbase.PRESERVE
const PRIMARY = lexbase.PRIMARY
const PRIOR = lexbase.PRIOR
const PRIORITY = lexbase.PRIORITY
const PRIVILEGES = lexbase.PRIVILEGES
const PROCEDURAL = lexbase.PROCEDURAL
const PUBLIC = lexbase.PUBLIC
const PUBLICATION = lexbase.PUBLICATION
const QUERIES = lexbase.QUERIES
const QUERY = lexbase.QUERY
const RANGE = lexbase.RANGE
const RANGES = lexbase.RANGES
const READ = lexbase.READ
const REAL = lexbase.REAL
const REASON = lexbase.REASON
const REASSIGN = lexbase.REASSIGN
const RECURSIVE = lexbase.RECURSIVE
const RECURRING = lexbase.RECURRING
const REF = lexbase.REF
const REFERENCES = lexbase.REFERENCES
const REFRESH = lexbase.REFRESH
const REGCLASS = lexbase.REGCLASS
const REGION = lexbase.REGION
const REGIONAL = lexbase.REGIONAL
const REGIONS = lexbase.REGIONS
const REGNAMESPACE = lexbase.REGNAMESPACE
const REGPROC = lexbase.REGPROC
const REGPROCEDURE = lexbase.REGPROCEDURE
const REGROLE = lexbase.REGROLE
const REGTYPE = lexbase.REGTYPE
const REINDEX = lexbase.REINDEX
const RELATIVE = lexbase.RELATIVE
const RELOCATE = lexbase.RELOCATE
const REMOVE_PATH = lexbase.REMOVE_PATH
const RENAME = lexbase.RENAME
const REPEATABLE = lexbase.REPEATABLE
const REPLACE = lexbase.REPLACE
const REPLICATION = lexbase.REPLICATION
const RELEASE = lexbase.RELEASE
const RESET = lexbase.RESET
const RESTORE = lexbase.RESTORE
const RESTRICT = lexbase.RESTRICT
const RESTRICTED = lexbase.RESTRICTED
const RESUME = lexbase.RESUME
const RETURNING = lexbase.RETURNING
const RETRY = lexbase.RETRY
const REVISION_HISTORY = lexbase.REVISION_HISTORY
const REVOKE = lexbase.REVOKE
const RIGHT = lexbase.RIGHT
const ROLE = lexbase.ROLE
const ROLES = lexbase.ROLES
const ROLLBACK = lexbase.ROLLBACK
const ROLLUP = lexbase.ROLLUP
const ROUTINES = lexbase.ROUTINES
const ROW = lexbase.ROW
const ROWS = lexbase.ROWS
const RSHIFT = lexbase.RSHIFT
const RULE = lexbase.RULE
const RUNNING = lexbase.RUNNING
const SAVEPOINT = lexbase.SAVEPOINT
const SCANS = lexbase.SCANS
const SCATTER = lexbase.SCATTER
const SCHEDULE = lexbase.SCHEDULE
const SCHEDULES = lexbase.SCHEDULES
const SCROLL = lexbase.SCROLL
const SCHEMA = lexbase.SCHEMA
const SCHEMAS = lexbase.SCHEMAS
const SCRUB = lexbase.SCRUB
const SEARCH = lexbase.SEARCH
const SECOND = lexbase.SECOND
const SELECT = lexbase.SELECT
const SEQUENCE = lexbase.SEQUENCE
const SEQUENCES = lexbase.SEQUENCES
const SERIALIZABLE = lexbase.SERIALIZABLE
const SERVER = lexbase.SERVER
const SESSION = lexbase.SESSION
const SESSIONS = lexbase.SESSIONS
const SESSION_USER = lexbase.SESSION_USER
const SET = lexbase.SET
const SETS = lexbase.SETS
const SETTING = lexbase.SETTING
const SETTINGS = lexbase.SETTINGS
const SHARE = lexbase.SHARE
const SHOW = lexbase.SHOW
const SIMILAR = lexbase.SIMILAR
const SIMPLE = lexbase.SIMPLE
const SKIP = lexbase.SKIP
const SKIP_LOCALITIES_CHECK = lexbase.SKIP_LOCALITIES_CHECK
const SKIP_MISSING_FOREIGN_KEYS = lexbase.SKIP_MISSING_FOREIGN_KEYS
const SKIP_MISSING_SEQUENCES = lexbase.SKIP_MISSING_SEQUENCES
const SKIP_MISSING_SEQUENCE_OWNERS = lexbase.SKIP_MISSING_SEQUENCE_OWNERS
const SKIP_MISSING_VIEWS = lexbase.SKIP_MISSING_VIEWS
const SMALLINT = lexbase.SMALLINT
const SMALLSERIAL = lexbase.SMALLSERIAL
const SNAPSHOT = lexbase.SNAPSHOT
const SOME = lexbase.SOME
const SPLIT = lexbase.SPLIT
const SQL = lexbase.SQL
const SQLLOGIN = lexbase.SQLLOGIN
const START = lexbase.START
const STATE = lexbase.STATE
const STATISTICS = lexbase.STATISTICS
const STATUS = lexbase.STATUS
const STDIN = lexbase.STDIN
const STREAM = lexbase.STREAM
const STRICT = lexbase.STRICT
const STRING = lexbase.STRING
const STORAGE = lexbase.STORAGE
const STORE = lexbase.STORE
const STORED = lexbase.STORED
const STORING = lexbase.STORING
const SUBSTRING = lexbase.SUBSTRING
const SURVIVE = lexbase.SURVIVE
const SURVIVAL = lexbase.SURVIVAL
const SYMMETRIC = lexbase.SYMMETRIC
const SYNTAX = lexbase.SYNTAX
const SYSTEM = lexbase.SYSTEM
const SQRT = lexbase.SQRT
const SUBSCRIPTION = lexbase.SUBSCRIPTION
const STATEMENTS = lexbase.STATEMENTS
const TABLE = lexbase.TABLE
const TABLES = lexbase.TABLES
const TABLESPACE = lexbase.TABLESPACE
const TEMP = lexbase.TEMP
const TEMPLATE = lexbase.TEMPLATE
const TEMPORARY = lexbase.TEMPORARY
const TENANT = lexbase.TENANT
const TENANTS = lexbase.TENANTS
const TESTING_RELOCATE = lexbase.TESTING_RELOCATE
const TEXT = lexbase.TEXT
const THEN = lexbase.THEN
const TIES = lexbase.TIES
const TIME = lexbase.TIME
const TIMETZ = lexbase.TIMETZ
const TIMESTAMP = lexbase.TIMESTAMP
const TIMESTAMPTZ = lexbase.TIMESTAMPTZ
const TO = lexbase.TO
const THROTTLING = lexbase.THROTTLING
const TRAILING = lexbase.TRAILING
const TRACE = lexbase.TRACE
const TRANSACTION = lexbase.TRANSACTION
const TRANSACTIONS = lexbase.TRANSACTIONS
const TRANSFER = lexbase.TRANSFER
const TREAT = lexbase.TREAT
const TRIGGER = lexbase.TRIGGER
const TRIM = lexbase.TRIM
const TRUE = lexbase.TRUE
const TRUNCATE = lexbase.TRUNCATE
const TRUSTED = lexbase.TRUSTED
const TYPE = lexbase.TYPE
const TYPES = lexbase.TYPES
const TRACING = lexbase.TRACING
const UNBOUNDED = lexbase.UNBOUNDED
const UNCOMMITTED = lexbase.UNCOMMITTED
const UNION = lexbase.UNION
const UNIQUE = lexbase.UNIQUE
const UNKNOWN = lexbase.UNKNOWN
const UNLOGGED = lexbase.UNLOGGED
const UNSPLIT = lexbase.UNSPLIT
const UPDATE = lexbase.UPDATE
const UPSERT = lexbase.UPSERT
const UNSET = lexbase.UNSET
const UNTIL = lexbase.UNTIL
const USE = lexbase.USE
const USER = lexbase.USER
const USERS = lexbase.USERS
const USING = lexbase.USING
const UUID = lexbase.UUID
const VALID = lexbase.VALID
const VALIDATE = lexbase.VALIDATE
const VALUE = lexbase.VALUE
const VALUES = lexbase.VALUES
const VARBIT = lexbase.VARBIT
const VARCHAR = lexbase.VARCHAR
const VARIADIC = lexbase.VARIADIC
const VIEW = lexbase.VIEW
const VARYING = lexbase.VARYING
const VIEWACTIVITY = lexbase.VIEWACTIVITY
const VIEWACTIVITYREDACTED = lexbase.VIEWACTIVITYREDACTED
const VIEWCLUSTERSETTING = lexbase.VIEWCLUSTERSETTING
const VIRTUAL = lexbase.VIRTUAL
const VISIBLE = lexbase.VISIBLE
const VOTERS = lexbase.VOTERS
const WHEN = lexbase.WHEN
const WHERE = lexbase.WHERE
const WINDOW = lexbase.WINDOW
const WITH = lexbase.WITH
const WITHIN = lexbase.WITHIN
const WITHOUT = lexbase.WITHOUT
const WORK = lexbase.WORK
const WRITE = lexbase.WRITE
const YEAR = lexbase.YEAR
const ZONE = lexbase.ZONE
const NOT_LA = lexbase.NOT_LA
const NULLS_LA = lexbase.NULLS_LA
const WITH_LA = lexbase.WITH_LA
const AS_LA = lexbase.AS_LA
const GENERATED_ALWAYS = lexbase.GENERATED_ALWAYS
const GENERATED_BY_DEFAULT = lexbase.GENERATED_BY_DEFAULT
const RESET_ALL = lexbase.RESET_ALL
const ROLE_ALL = lexbase.ROLE_ALL
const USER_ALL = lexbase.USER_ALL
const ON_LA = lexbase.ON_LA
const TENANT_ALL = lexbase.TENANT_ALL
const CONTAINED_BY = lexbase.CONTAINED_BY
const POSTFIXOP = lexbase.POSTFIXOP
const INTERVAL_SIMPLE = lexbase.INTERVAL_SIMPLE
const UMINUS = lexbase.UMINUS
const HELPTOKEN = lexbase.HELPTOKEN

var sqlToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENT",
	"SCONST",
	"BCONST",
	"BITCONST",
	"ICONST",
	"FCONST",
	"PLACEHOLDER",
	"TYPECAST",
	"TYPEANNOTATE",
	"DOT_DOT",
	"LESS_EQUALS",
	"GREATER_EQUALS",
	"NOT_EQUALS",
	"NOT_REGMATCH",
	"REGIMATCH",
	"NOT_REGIMATCH",
	"ERROR",
	"ABORT",
	"ABSOLUTE",
	"ACCESS",
	"ACTION",
	"ADD",
	"ADMIN",
	"AFTER",
	"AGGREGATE",
	"ALL",
	"ALTER",
	"ALWAYS",
	"ANALYSE",
	"ANALYZE",
	"AND",
	"AND_AND",
	"ANY",
	"ANNOTATE_TYPE",
	"ARRAY",
	"AS",
	"ASC",
	"ASENSITIVE",
	"ASYMMETRIC",
	"AT",
	"ATTRIBUTE",
	"AUTHORIZATION",
	"AUTOMATIC",
	"AVAILABILITY",
	"BACKUP",
	"BACKUPS",
	"BACKWARD",
	"BEFORE",
	"BEGIN",
	"BETWEEN",
	"BIGINT",
	"BIGSERIAL",
	"BINARY",
	"BIT",
	"BUCKET_COUNT",
	"BOOLEAN",
	"BOTH",
	"BOX2D",
	"BUNDLE",
	"BY",
	"CACHE",
	"CANCEL",
	"CANCELQUERY",
	"CASCADE",
	"CASE",
	"CAST",
	"CBRT",
	"CHANGEFEED",
	"CHAR",
	"CHARACTER",
	"CHARACTERISTICS",
	"CHECK",
	"CLOSE",
	"CLUSTER",
	"COALESCE",
	"COLLATE",
	"COLLATION",
	"COLUMN",
	"COLUMNS",
	"COMMENT",
	"COMMENTS",
	"COMMIT",
	"COMMITTED",
	"COMPACT",
	"COMPLETE",
	"COMPLETIONS",
	"CONCAT",
	"CONCURRENTLY",
	"CONFIGURATION",
	"CONFIGURATIONS",
	"CONFIGURE",
	"CONFLICT",
	"CONNECTION",
	"CONSTRAINT",
	"CONSTRAINTS",
	"CONTAINS",
	"CONTROLCHANGEFEED",
	"CONTROLJOB",
	"CONVERSION",
	"CONVERT",
	"COPY",
	"COVERING",
	"CREATE",
	"CREATEDB",
	"CREATELOGIN",
	"CREATEROLE",
	"CROSS",
	"CSV",
	"CUBE",
	"CURRENT",
	"CURRENT_CATALOG",
	"CURRENT_DATE",
	"CURRENT_SCHEMA",
	"CURRENT_ROLE",
	"CURRENT_TIME",
	"CURRENT_TIMESTAMP",
	"CURRENT_USER",
	"CURSOR",
	"CYCLE",
	"DATA",
	"DATABASE",
	"DATABASES",
	"DATE",
	"DAY",
	"DEBUG_PAUSE_ON",
	"DEC",
	"DECIMAL",
	"DEFAULT",
	"DEFAULTS",
	"DEALLOCATE",
	"DECLARE",
	"DEFERRABLE",
	"DEFERRED",
	"DELETE",
	"DELIMITER",
	"DESC",
	"DESTINATION",
	"DETACHED",
	"DISCARD",
	"DISTINCT",
	"DO",
	"DOMAIN",
	"DOUBLE",
	"DROP",
	"ELSE",
	"ENCODING",
	"ENCRYPTED",
	"ENCRYPTION_PASSPHRASE",
	"END",
	"ENUM",
	"ENUMS",
	"ESCAPE",
	"EXCEPT",
	"EXCLUDE",
	"EXCLUDING",
	"EXISTS",
	"EXECUTE",
	"EXECUTION",
	"EXPERIMENTAL",
	"EXPERIMENTAL_FINGERPRINTS",
	"EXPERIMENTAL_REPLICA",
	"EXPERIMENTAL_AUDIT",
	"EXPERIMENTAL_RELOCATE",
	"EXPIRATION",
	"EXPLAIN",
	"EXPORT",
	"EXTENSION",
	"EXTRACT",
	"EXTRACT_DURATION",
	"FAILURE",
	"FALSE",
	"FAMILY",
	"FETCH",
	"FETCHVAL",
	"FETCHTEXT",
	"FETCHVAL_PATH",
	"FETCHTEXT_PATH",
	"FILES",
	"FILTER",
	"FIRST",
	"FLOAT",
	"FLOAT4",
	"FLOAT8",
	"FLOORDIV",
	"FOLLOWING",
	"FOR",
	"FORCE",
	"FORCE_INDEX",
	"FORCE_ZIGZAG",
	"FOREIGN",
	"FORWARD",
	"FROM",
	"FULL",
	"FUNCTION",
	"FUNCTIONS",
	"GENERATED",
	"GEOGRAPHY",
	"GEOMETRY",
	"GEOMETRYM",
	"GEOMETRYZ",
	"GEOMETRYZM",
	"GEOMETRYCOLLECTION",
	"GEOMETRYCOLLECTIONM",
	"GEOMETRYCOLLECTIONZ",
	"GEOMETRYCOLLECTIONZM",
	"GLOBAL",
	"GOAL",
	"GRANT",
	"GRANTS",
	"GREATEST",
	"GROUP",
	"GROUPING",
	"GROUPS",
	"HAVING",
	"HASH",
	"HIGH",
	"HISTOGRAM",
	"HOLD",
	"HOUR",
	"IDENTITY",
	"IF",
	"IFERROR",
	"IFNULL",
	"IGNORE_FOREIGN_KEYS",
	"ILIKE",
	"IMMEDIATE",
	"IMPORT",
	"IN",
	"INCLUDE",
	"INCLUDING",
	"INCREMENT",
	"INCREMENTAL",
	"INCREMENTAL_LOCATION",
	"INET",
	"INET_CONTAINED_BY_OR_EQUALS",
	"INET_CONTAINS_OR_EQUALS",
	"INDEX",
	"INDEXES",
	"INHERITS",
	"INJECT",
	"INITIALLY",
	"INNER",
	"INSENSITIVE",
	"INSERT",
	"INT",
	"INTEGER",
	"INTERSECT",
	"INTERVAL",
	"INTO",
	"INTO_DB",
	"INVERTED",
	"IS",
	"ISERROR",
	"ISNULL",
	"ISOLATION",
	"JOB",
	"JOBS",
	"JOIN",
	"JSON",
	"JSONB",
	"JSON_SOME_EXISTS",
	"JSON_ALL_EXISTS",
	"KEY",
	"KEYS",
	"KMS",
	"KV",
	"LANGUAGE",
	"LAST",
	"LATERAL",
	"LATEST",
	"LC_CTYPE",
	"LC_COLLATE",
	"LEADING",
	"LEASE",
	"LEAST",
	"LEFT",
	"LESS",
	"LEVEL",
	"LIKE",
	"LIMIT",
	"LINESTRING",
	"LINESTRINGM",
	"LINESTRINGZ",
	"LINESTRINGZM",
	"LIST",
	"LOCAL",
	"LOCALITY",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"LOCKED",
	"LOGIN",
	"LOOKUP",
	"LOW",
	"LSHIFT",
	"MATCH",
	"MATERIALIZED",
	"MERGE",
	"MINVALUE",
	"MAXVALUE",
	"METHOD",
	"MINUTE",
	"MODIFYCLUSTERSETTING",
	"MONTH",
	"MULTILINESTRING",
	"MULTILINESTRINGM",
	"MULTILINESTRINGZ",
	"MULTILINESTRINGZM",
	"MULTIPOINT",
	"MULTIPOINTM",
	"MULTIPOINTZ",
	"MULTIPOINTZM",
	"MULTIPOLYGON",
	"MULTIPOLYGONM",
	"MULTIPOLYGONZ",
	"MULTIPOLYGONZM",
	"NAN",
	"NAME",
	"NAMES",
	"NATURAL",
	"NEVER",
	"NEW_DB_NAME",
	"NEW_KMS",
	"NEXT",
	"NO",
	"NOCANCELQUERY",
	"NOCONTROLCHANGEFEED",
	"NOCONTROLJOB",
	"NOCREATEDB",
	"NOCREATELOGIN",
	"NOCREATEROLE",
	"NOLOGIN",
	"NOMODIFYCLUSTERSETTING",
	"NOSQLLOGIN",
	"NO_INDEX_JOIN",
	"NO_ZIGZAG_JOIN",
	"NO_FULL_SCAN",
	"NONE",
	"NONVOTERS",
	"NORMAL",
	"NOT",
	"NOTHING",
	"NOTNULL",
	"NOVIEWACTIVITY",
	"NOVIEWACTIVITYREDACTED",
	"NOVIEWCLUSTERSETTING",
	"NOWAIT",
	"NULL",
	"NULLIF",
	"NULLS",
	"NUMERIC",
	"OF",
	"OFF",
	"OFFSET",
	"OID",
	"OIDS",
	"OIDVECTOR",
	"OLD_KMS",
	"ON",
	"ONLY",
	"OPT",
	"OPTION",
	"OPTIONS",
	"OR",
	"ORDER",
	"ORDINALITY",
	"OTHERS",
	"OUT",
	"OUTER",
	"OVER",
	"OVERLAPS",
	"OVERLAY",
	"OWNED",
	"OWNER",
	"OPERATOR",
	"PARENT",
	"PARTIAL",
	"PARTITION",
	"PARTITIONS",
	"PASSWORD",
	"PAUSE",
	"PAUSED",
	"PHYSICAL",
	"PLACEMENT",
	"PLACING",
	"PLAN",
	"PLANS",
	"POINT",
	"POINTM",
	"POINTZ",
	"POINTZM",
	"POLYGON",
	"POLYGONM",
	"POLYGONZ",
	"POLYGONZM",
	"POSITION",
	"PRECEDING",
	"PRECISION",
	"PREPARE",
	"PRESERVE",
	"PRIMARY",
	"PRIOR",
	"PRIORITY",
	"PRIVILEGES",
	"PROCEDURAL",
	"PUBLIC",
	"PUBLICATION",
	"QUERIES",
	"QUERY",
	"RANGE",
	"RANGES",
	"READ",
	"REAL",
	"REASON",
	"REASSIGN",
	"RECURSIVE",
	"RECURRING",
	"REF",
	"REFERENCES",
	"REFRESH",
	"REGCLASS",
	"REGION",
	"REGIONAL",
	"REGIONS",
	"REGNAMESPACE",
	"REGPROC",
	"REGPROCEDURE",
	"REGROLE",
	"REGTYPE",
	"REINDEX",
	"RELATIVE",
	"RELOCATE",
	"REMOVE_PATH",
	"RENAME",
	"REPEATABLE",
	"REPLACE",
	"REPLICATION",
	"RELEASE",
	"RESET",
	"RESTORE",
	"RESTRICT",
	"RESTRICTED",
	"RESUME",
	"RETURNING",
	"RETRY",
	"REVISION_HISTORY",
	"REVOKE",
	"RIGHT",
	"ROLE",
	"ROLES",
	"ROLLBACK",
	"ROLLUP",
	"ROUTINES",
	"ROW",
	"ROWS",
	"RSHIFT",
	"RULE",
	"RUNNING",
	"SAVEPOINT",
	"SCANS",
	"SCATTER",
	"SCHEDULE",
	"SCHEDULES",
	"SCROLL",
	"SCHEMA",
	"SCHEMAS",
	"SCRUB",
	"SEARCH",
	"SECOND",
	"SELECT",
	"SEQUENCE",
	"SEQUENCES",
	"SERIALIZABLE",
	"SERVER",
	"SESSION",
	"SESSIONS",
	"SESSION_USER",
	"SET",
	"SETS",
	"SETTING",
	"SETTINGS",
	"SHARE",
	"SHOW",
	"SIMILAR",
	"SIMPLE",
	"SKIP",
	"SKIP_LOCALITIES_CHECK",
	"SKIP_MISSING_FOREIGN_KEYS",
	"SKIP_MISSING_SEQUENCES",
	"SKIP_MISSING_SEQUENCE_OWNERS",
	"SKIP_MISSING_VIEWS",
	"SMALLINT",
	"SMALLSERIAL",
	"SNAPSHOT",
	"SOME",
	"SPLIT",
	"SQL",
	"SQLLOGIN",
	"START",
	"STATE",
	"STATISTICS",
	"STATUS",
	"STDIN",
	"STREAM",
	"STRICT",
	"STRING",
	"STORAGE",
	"STORE",
	"STORED",
	"STORING",
	"SUBSTRING",
	"SURVIVE",
	"SURVIVAL",
	"SYMMETRIC",
	"SYNTAX",
	"SYSTEM",
	"SQRT",
	"SUBSCRIPTION",
	"STATEMENTS",
	"TABLE",
	"TABLES",
	"TABLESPACE",
	"TEMP",
	"TEMPLATE",
	"TEMPORARY",
	"TENANT",
	"TENANTS",
	"TESTING_RELOCATE",
	"TEXT",
	"THEN",
	"TIES",
	"TIME",
	"TIMETZ",
	"TIMESTAMP",
	"TIMESTAMPTZ",
	"TO",
	"THROTTLING",
	"TRAILING",
	"TRACE",
	"TRANSACTION",
	"TRANSACTIONS",
	"TRANSFER",
	"TREAT",
	"TRIGGER",
	"TRIM",
	"TRUE",
	"TRUNCATE",
	"TRUSTED",
	"TYPE",
	"TYPES",
	"TRACING",
	"UNBOUNDED",
	"UNCOMMITTED",
	"UNION",
	"UNIQUE",
	"UNKNOWN",
	"UNLOGGED",
	"UNSPLIT",
	"UPDATE",
	"UPSERT",
	"UNSET",
	"UNTIL",
	"USE",
	"USER",
	"USERS",
	"USING",
	"UUID",
	"VALID",
	"VALIDATE",
	"VALUE",
	"VALUES",
	"VARBIT",
	"VARCHAR",
	"VARIADIC",
	"VIEW",
	"VARYING",
	"VIEWACTIVITY",
	"VIEWACTIVITYREDACTED",
	"VIEWCLUSTERSETTING",
	"VIRTUAL",
	"VISIBLE",
	"VOTERS",
	"WHEN",
	"WHERE",
	"WINDOW",
	"WITH",
	"WITHIN",
	"WITHOUT",
	"WORK",
	"WRITE",
	"YEAR",
	"ZONE",
	"NOT_LA",
	"NULLS_LA",
	"WITH_LA",
	"AS_LA",
	"GENERATED_ALWAYS",
	"GENERATED_BY_DEFAULT",
	"RESET_ALL",
	"ROLE_ALL",
	"USER_ALL",
	"ON_LA",
	"TENANT_ALL",
	"'<'",
	"'>'",
	"'='",
	"'~'",
	"CONTAINED_BY",
	"'?'",
	"POSTFIXOP",
	"'|'",
	"'#'",
	"'&'",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"'%'",
	"'^'",
	"INTERVAL_SIMPLE",
	"UMINUS",
	"'['",
	"']'",
	"'('",
	"')'",
	"'.'",
	"HELPTOKEN",
	"'@'",
	"','",
	"'{'",
	"'}'",
	"':'",
}

var sqlStatenames = [...]string{}

const sqlEofCode = 1
const sqlErrCode = 2
const sqlInitialStackSize = 16

//line sql-gen.y:14447

//line yacctab:1
var sqlExca = [...]int{
	-1, 0,
	1, 39,
	-2, 1704,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 58,
	270, 435,
	-2, 0,
	-1, 70,
	8, 888,
	29, 888,
	616, 888,
	617, 888,
	-2, 0,
	-1, 77,
	252, 260,
	538, 260,
	-2, 0,
	-1, 91,
	240, 1437,
	254, 1437,
	270, 431,
	407, 431,
	418, 1184,
	459, 431,
	473, 1184,
	522, 1184,
	550, 431,
	577, 1184,
	-2, 0,
	-1, 97,
	137, 1704,
	247, 1704,
	561, 1704,
	562, 1704,
	-2, 0,
	-1, 115,
	156, 1675,
	176, 1675,
	189, 1675,
	250, 1675,
	283, 1675,
	356, 1675,
	367, 1675,
	556, 1675,
	-2, 1646,
	-1, 157,
	164, 1015,
	269, 1015,
	410, 976,
	478, 976,
	521, 976,
	541, 1015,
	543, 976,
	-2, 0,
	-1, 162,
	4, 1706,
	21, 1706,
	22, 1706,
	23, 1706,
	24, 1706,
	25, 1706,
	26, 1706,
	27, 1706,
	28, 1706,
	30, 1706,
	31, 1706,
	37, 1706,
	41, 1706,
	43, 1706,
	44, 1706,
	46, 1706,
	47, 1706,
	48, 1706,
	49, 1706,
	50, 1706,
	51, 1706,
	52, 1706,
	53, 1706,
	54, 1706,
	56, 1706,
	57, 1706,
	58, 1706,
	59, 1706,
	61, 1706,
	62, 1706,
	63, 1706,
	64, 1706,
	65, 1706,
	66, 1706,
	67, 1706,
	71, 1706,
	72, 1706,
	73, 1706,
	74, 1706,
	76, 1706,
	77, 1706,
	78, 1706,
	82, 1706,
	83, 1706,
	84, 1706,
	85, 1706,
	86, 1706,
	87, 1706,
	88, 1706,
	89, 1706,
	92, 1706,
	93, 1706,
	94, 1706,
	95, 1706,
	96, 1706,
	98, 1706,
	100, 1706,
	101, 1706,
	102, 1706,
	103, 1706,
	104, 1706,
	105, 1706,
	107, 1706,
	108, 1706,
	109, 1706,
	111, 1706,
	112, 1706,
	113, 1706,
	121, 1706,
	122, 1706,
	123, 1706,
	124, 1706,
	125, 1706,
	127, 1706,
	128, 1706,
	129, 1706,
	130, 1706,
	132, 1706,
	133, 1706,
	134, 1706,
	136, 1706,
	137, 1706,
	138, 1706,
	140, 1706,
	141, 1706,
	142, 1706,
	145, 1706,
	146, 1706,
	147, 1706,
	149, 1706,
	150, 1706,
	151, 1706,
	153, 1706,
	154, 1706,
	155, 1706,
	157, 1706,
	158, 1706,
	159, 1706,
	160, 1706,
	161, 1706,
	162, 1706,
	163, 1706,
	164, 1706,
	165, 1706,
	166, 1706,
	167, 1706,
	168, 1706,
	169, 1706,
	170, 1706,
	171, 1706,
	172, 1706,
	173, 1706,
	175, 1706,
	181, 1706,
	182, 1706,
	183, 1706,
	184, 1706,
	188, 1706,
	190, 1706,
	191, 1706,
	192, 1706,
	194, 1706,
	197, 1706,
	198, 1706,
	199, 1706,
	200, 1706,
	201, 1706,
	202, 1706,
	203, 1706,
	204, 1706,
	205, 1706,
	206, 1706,
	207, 1706,
	208, 1706,
	209, 1706,
	210, 1706,
	212, 1706,
	213, 1706,
	215, 1706,
	216, 1706,
	218, 1706,
	219, 1706,
	220, 1706,
	221, 1706,
	222, 1706,
	223, 1706,
	224, 1706,
	225, 1706,
	226, 1706,
	227, 1706,
	229, 1706,
	230, 1706,
	232, 1706,
	233, 1706,
	234, 1706,
	235, 1706,
	236, 1706,
	240, 1706,
	241, 1706,
	242, 1706,
	243, 1706,
	246, 1706,
	247, 1706,
	248, 1706,
	249, 1706,
	251, 1706,
	253, 1706,
	254, 1706,
	256, 1706,
	258, 1706,
	259, 1706,
	260, 1706,
	262, 1706,
	266, 1706,
	267, 1706,
	268, 1706,
	269, 1706,
	270, 1706,
	271, 1706,
	273, 1706,
	274, 1706,
	275, 1706,
	277, 1706,
	278, 1706,
	280, 1706,
	281, 1706,
	284, 1706,
	285, 1706,
	286, 1706,
	287, 1706,
	288, 1706,
	289, 1706,
	290, 1706,
	293, 1706,
	294, 1706,
	295, 1706,
	296, 1706,
	298, 1706,
	299, 1706,
	300, 1706,
	301, 1706,
	302, 1706,
	303, 1706,
	304, 1706,
	305, 1706,
	306, 1706,
	307, 1706,
	308, 1706,
	309, 1706,
	310, 1706,
	311, 1706,
	312, 1706,
	313, 1706,
	314, 1706,
	315, 1706,
	316, 1706,
	317, 1706,
	318, 1706,
	319, 1706,
	321, 1706,
	323, 1706,
	324, 1706,
	325, 1706,
	326, 1706,
	327, 1706,
	328, 1706,
	329, 1706,
	330, 1706,
	331, 1706,
	332, 1706,
	333, 1706,
	334, 1706,
	335, 1706,
	336, 1706,
	337, 1706,
	338, 1706,
	339, 1706,
	341, 1706,
	342, 1706,
	344, 1706,
	346, 1706,
	347, 1706,
	348, 1706,
	349, 1706,
	351, 1706,
	352, 1706,
	353, 1706,
	354, 1706,
	355, 1706,
	358, 1706,
	360, 1706,
	362, 1706,
	363, 1706,
	364, 1706,
	365, 1706,
	368, 1706,
	369, 1706,
	370, 1706,
	372, 1706,
	374, 1706,
	375, 1706,
	376, 1706,
	377, 1706,
	378, 1706,
	379, 1706,
	380, 1706,
	381, 1706,
	382, 1706,
	383, 1706,
	384, 1706,
	385, 1706,
	386, 1706,
	388, 1706,
	389, 1706,
	390, 1706,
	391, 1706,
	392, 1706,
	393, 1706,
	394, 1706,
	395, 1706,
	396, 1706,
	397, 1706,
	398, 1706,
	399, 1706,
	400, 1706,
	401, 1706,
	402, 1706,
	404, 1706,
	405, 1706,
	406, 1706,
	408, 1706,
	409, 1706,
	410, 1706,
	411, 1706,
	412, 1706,
	413, 1706,
	414, 1706,
	415, 1706,
	416, 1706,
	417, 1706,
	418, 1706,
	419, 1706,
	420, 1706,
	422, 1706,
	424, 1706,
	425, 1706,
	426, 1706,
	432, 1706,
	433, 1706,
	434, 1706,
	436, 1706,
	437, 1706,
	438, 1706,
	439, 1706,
	440, 1706,
	441, 1706,
	442, 1706,
	443, 1706,
	444, 1706,
	445, 1706,
	447, 1706,
	448, 1706,
	449, 1706,
	451, 1706,
	452, 1706,
	453, 1706,
	454, 1706,
	455, 1706,
	456, 1706,
	457, 1706,
	459, 1706,
	460, 1706,
	461, 1706,
	462, 1706,
	463, 1706,
	464, 1706,
	465, 1706,
	466, 1706,
	467, 1706,
	468, 1706,
	469, 1706,
	470, 1706,
	471, 1706,
	473, 1706,
	474, 1706,
	475, 1706,
	476, 1706,
	477, 1706,
	478, 1706,
	480, 1706,
	481, 1706,
	482, 1706,
	483, 1706,
	484, 1706,
	485, 1706,
	487, 1706,
	488, 1706,
	489, 1706,
	490, 1706,
	491, 1706,
	492, 1706,
	493, 1706,
	494, 1706,
	496, 1706,
	498, 1706,
	499, 1706,
	500, 1706,
	501, 1706,
	502, 1706,
	503, 1706,
	504, 1706,
	505, 1706,
	506, 1706,
	507, 1706,
	508, 1706,
	509, 1706,
	510, 1706,
	511, 1706,
	512, 1706,
	513, 1706,
	514, 1706,
	515, 1706,
	517, 1706,
	518, 1706,
	520, 1706,
	521, 1706,
	523, 1706,
	524, 1706,
	525, 1706,
	526, 1706,
	527, 1706,
	528, 1706,
	530, 1706,
	531, 1706,
	533, 1706,
	534, 1706,
	535, 1706,
	536, 1706,
	537, 1706,
	539, 1706,
	541, 1706,
	542, 1706,
	543, 1706,
	544, 1706,
	545, 1706,
	546, 1706,
	547, 1706,
	549, 1706,
	550, 1706,
	551, 1706,
	552, 1706,
	554, 1706,
	555, 1706,
	558, 1706,
	559, 1706,
	560, 1706,
	561, 1706,
	562, 1706,
	563, 1706,
	564, 1706,
	565, 1706,
	567, 1706,
	570, 1706,
	571, 1706,
	572, 1706,
	573, 1706,
	574, 1706,
	575, 1706,
	577, 1706,
	578, 1706,
	579, 1706,
	580, 1706,
	581, 1706,
	582, 1706,
	583, 1706,
	584, 1706,
	589, 1706,
	590, 1706,
	591, 1706,
	592, 1706,
	593, 1706,
	594, 1706,
	-2, 0,
	-1, 163,
	1, 1554,
	135, 1554,
	258, 1554,
	343, 1554,
	405, 1554,
	414, 1554,
	598, 1554,
	629, 1554,
	-2, 0,
	-1, 165,
	1, 1554,
	629, 1554,
	-2, 0,
	-1, 166,
	1, 1554,
	629, 1554,
	-2, 0,
	-1, 167,
	1, 1554,
	538, 1554,
	629, 1554,
	-2, 0,
	-1, 199,
	156, 1674,
	176, 1674,
	189, 1674,
	250, 1674,
	283, 1674,
	356, 1674,
	367, 1674,
	556, 1674,
	-2, 1649,
	-1, 247,
	4, 1713,
	5, 1713,
	6, 1713,
	7, 1713,
	8, 1713,
	9, 1713,
	10, 1713,
	21, 1713,
	22, 1713,
	23, 1713,
	24, 1713,
	25, 1713,
	26, 1713,
	27, 1713,
	28, 1713,
	30, 1713,
	31, 1713,
	37, 1713,
	38, 1713,
	41, 1713,
	43, 1713,
	44, 1713,
	45, 1713,
	46, 1713,
	47, 1713,
	48, 1713,
	49, 1713,
	50, 1713,
	51, 1713,
	52, 1713,
	53, 1713,
	54, 1713,
	56, 1713,
	57, 1713,
	58, 1713,
	59, 1713,
	61, 1713,
	62, 1713,
	63, 1713,
	64, 1713,
	65, 1713,
	66, 1713,
	67, 1713,
	68, 1713,
	69, 1713,
	70, 1713,
	71, 1713,
	72, 1713,
	73, 1713,
	74, 1713,
	76, 1713,
	77, 1713,
	78, 1713,
	80, 1713,
	82, 1713,
	83, 1713,
	84, 1713,
	85, 1713,
	86, 1713,
	87, 1713,
	88, 1713,
	89, 1713,
	92, 1713,
	93, 1713,
	94, 1713,
	95, 1713,
	96, 1713,
	98, 1713,
	100, 1713,
	101, 1713,
	102, 1713,
	103, 1713,
	104, 1713,
	105, 1713,
	107, 1713,
	108, 1713,
	109, 1713,
	110, 1713,
	111, 1713,
	112, 1713,
	113, 1713,
	114, 1713,
	115, 1713,
	116, 1713,
	117, 1713,
	118, 1713,
	119, 1713,
	120, 1713,
	121, 1713,
	122, 1713,
	123, 1713,
	124, 1713,
	125, 1713,
	126, 1713,
	127, 1713,
	128, 1713,
	129, 1713,
	130, 1713,
	131, 1713,
	132, 1713,
	133, 1713,
	134, 1713,
	136, 1713,
	137, 1713,
	138, 1713,
	140, 1713,
	141, 1713,
	142, 1713,
	145, 1713,
	146, 1713,
	147, 1713,
	149, 1713,
	150, 1713,
	151, 1713,
	153, 1713,
	154, 1713,
	155, 1713,
	157, 1713,
	158, 1713,
	159, 1713,
	160, 1713,
	161, 1713,
	162, 1713,
	163, 1713,
	164, 1713,
	165, 1713,
	166, 1713,
	167, 1713,
	168, 1713,
	169, 1713,
	170, 1713,
	171, 1713,
	172, 1713,
	173, 1713,
	174, 1713,
	175, 1713,
	181, 1713,
	182, 1713,
	183, 1713,
	184, 1713,
	188, 1713,
	190, 1713,
	191, 1713,
	192, 1713,
	194, 1713,
	196, 1713,
	197, 1713,
	198, 1713,
	199, 1713,
	200, 1713,
	201, 1713,
	202, 1713,
	203, 1713,
	204, 1713,
	205, 1713,
	206, 1713,
	207, 1713,
	208, 1713,
	209, 1713,
	210, 1713,
	212, 1713,
	213, 1713,
	215, 1713,
	216, 1713,
	218, 1713,
	219, 1713,
	220, 1713,
	221, 1713,
	222, 1713,
	223, 1713,
	224, 1713,
	225, 1713,
	226, 1713,
	227, 1713,
	228, 1713,
	229, 1713,
	230, 1713,
	232, 1713,
	233, 1713,
	234, 1713,
	235, 1713,
	236, 1713,
	240, 1713,
	241, 1713,
	242, 1713,
	243, 1713,
	245, 1713,
	246, 1713,
	247, 1713,
	248, 1713,
	249, 1713,
	251, 1713,
	253, 1713,
	254, 1713,
	255, 1713,
	256, 1713,
	257, 1713,
	258, 1713,
	259, 1713,
	260, 1713,
	261, 1713,
	262, 1713,
	266, 1713,
	267, 1713,
	268, 1713,
	269, 1713,
	270, 1713,
	271, 1713,
	273, 1713,
	274, 1713,
	275, 1713,
	277, 1713,
	278, 1713,
	279, 1713,
	280, 1713,
	281, 1713,
	282, 1713,
	284, 1713,
	285, 1713,
	286, 1713,
	287, 1713,
	288, 1713,
	289, 1713,
	290, 1713,
	291, 1713,
	292, 1713,
	293, 1713,
	294, 1713,
	295, 1713,
	296, 1713,
	298, 1713,
	299, 1713,
	300, 1713,
	301, 1713,
	302, 1713,
	303, 1713,
	304, 1713,
	305, 1713,
	306, 1713,
	307, 1713,
	308, 1713,
	309, 1713,
	310, 1713,
	311, 1713,
	312, 1713,
	313, 1713,
	314, 1713,
	315, 1713,
	316, 1713,
	317, 1713,
	318, 1713,
	319, 1713,
	321, 1713,
	322, 1713,
	323, 1713,
	324, 1713,
	325, 1713,
	326, 1713,
	327, 1713,
	328, 1713,
	329, 1713,
	330, 1713,
	331, 1713,
	332, 1713,
	333, 1713,
	334, 1713,
	335, 1713,
	336, 1713,
	337, 1713,
	338, 1713,
	339, 1713,
	340, 1713,
	341, 1713,
	342, 1713,
	343, 1713,
	344, 1713,
	345, 1713,
	346, 1713,
	347, 1713,
	348, 1713,
	349, 1713,
	350, 1713,
	351, 1713,
	352, 1713,
	353, 1713,
	354, 1713,
	355, 1713,
	358, 1713,
	360, 1713,
	363, 1713,
	364, 1713,
	365, 1713,
	368, 1713,
	369, 1713,
	370, 1713,
	371, 1713,
	372, 1713,
	373, 1713,
	374, 1713,
	375, 1713,
	376, 1713,
	377, 1713,
	378, 1713,
	379, 1713,
	380, 1713,
	381, 1713,
	382, 1713,
	383, 1713,
	384, 1713,
	385, 1713,
	386, 1713,
	388, 1713,
	389, 1713,
	390, 1713,
	391, 1713,
	392, 1713,
	393, 1713,
	394, 1713,
	395, 1713,
	396, 1713,
	397, 1713,
	398, 1713,
	399, 1713,
	400, 1713,
	401, 1713,
	402, 1713,
	404, 1713,
	405, 1713,
	406, 1713,
	408, 1713,
	409, 1713,
	410, 1713,
	411, 1713,
	412, 1713,
	413, 1713,
	414, 1713,
	415, 1713,
	416, 1713,
	417, 1713,
	418, 1713,
	419, 1713,
	420, 1713,
	422, 1713,
	424, 1713,
	425, 1713,
	426, 1713,
	432, 1713,
	433, 1713,
	434, 1713,
	436, 1713,
	437, 1713,
	438, 1713,
	439, 1713,
	440, 1713,
	441, 1713,
	442, 1713,
	443, 1713,
	444, 1713,
	445, 1713,
	447, 1713,
	448, 1713,
	449, 1713,
	450, 1713,
	451, 1713,
	452, 1713,
	453, 1713,
	454, 1713,
	455, 1713,
	456, 1713,
	457, 1713,
	459, 1713,
	460, 1713,
	461, 1713,
	462, 1713,
	463, 1713,
	464, 1713,
	465, 1713,
	466, 1713,
	467, 1713,
	468, 1713,
	469, 1713,
	470, 1713,
	471, 1713,
	473, 1713,
	474, 1713,
	475, 1713,
	476, 1713,
	477, 1713,
	478, 1713,
	479, 1713,
	480, 1713,
	481, 1713,
	482, 1713,
	483, 1713,
	484, 1713,
	485, 1713,
	486, 1713,
	487, 1713,
	488, 1713,
	489, 1713,
	490, 1713,
	491, 1713,
	492, 1713,
	493, 1713,
	494, 1713,
	496, 1713,
	498, 1713,
	499, 1713,
	500, 1713,
	501, 1713,
	502, 1713,
	503, 1713,
	504, 1713,
	505, 1713,
	506, 1713,
	507, 1713,
	508, 1713,
	509, 1713,
	510, 1713,
	511, 1713,
	512, 1713,
	513, 1713,
	514, 1713,
	515, 1713,
	517, 1713,
	518, 1713,
	519, 1713,
	520, 1713,
	521, 1713,
	523, 1713,
	524, 1713,
	525, 1713,
	526, 1713,
	527, 1713,
	528, 1713,
	530, 1713,
	531, 1713,
	533, 1713,
	534, 1713,
	535, 1713,
	536, 1713,
	537, 1713,
	539, 1713,
	541, 1713,
	542, 1713,
	543, 1713,
	544, 1713,
	545, 1713,
	546, 1713,
	547, 1713,
	548, 1713,
	549, 1713,
	550, 1713,
	551, 1713,
	552, 1713,
	554, 1713,
	555, 1713,
	557, 1713,
	558, 1713,
	559, 1713,
	560, 1713,
	561, 1713,
	562, 1713,
	563, 1713,
	564, 1713,
	565, 1713,
	566, 1713,
	567, 1713,
	570, 1713,
	571, 1713,
	572, 1713,
	573, 1713,
	574, 1713,
	575, 1713,
	577, 1713,
	578, 1713,
	579, 1713,
	580, 1713,
	581, 1713,
	582, 1713,
	583, 1713,
	584, 1713,
	589, 1713,
	590, 1713,
	591, 1713,
	592, 1713,
	593, 1713,
	594, 1713,
	595, 1713,
	609, 1713,
	616, 1713,
	617, 1713,
	618, 1713,
	626, 1713,
	630, 1713,
	-2, 0,
	-1, 786,
	4, 1435,
	21, 1435,
	22, 1435,
	23, 1435,
	24, 1435,
	25, 1435,
	26, 1435,
	27, 1435,
	28, 1435,
	30, 1435,
	31, 1435,
	37, 1435,
	41, 1435,
	43, 1435,
	44, 1435,
	46, 1435,
	47, 1435,
	48, 1435,
	49, 1435,
	50, 1435,
	51, 1435,
	52, 1435,
	53, 1435,
	54, 1435,
	56, 1435,
	57, 1435,
	58, 1435,
	59, 1435,
	61, 1435,
	62, 1435,
	63, 1435,
	64, 1435,
	65, 1435,
	66, 1435,
	67, 1435,
	71, 1435,
	72, 1435,
	73, 1435,
	74, 1435,
	76, 1435,
	77, 1435,
	78, 1435,
	82, 1435,
	83, 1435,
	84, 1435,
	85, 1435,
	86, 1435,
	87, 1435,
	88, 1435,
	89, 1435,
	92, 1435,
	93, 1435,
	94, 1435,
	95, 1435,
	96, 1435,
	98, 1435,
	100, 1435,
	101, 1435,
	102, 1435,
	103, 1435,
	104, 1435,
	105, 1435,
	107, 1435,
	108, 1435,
	109, 1435,
	111, 1435,
	112, 1435,
	113, 1435,
	121, 1435,
	122, 1435,
	123, 1435,
	124, 1435,
	125, 1435,
	127, 1435,
	128, 1435,
	129, 1435,
	130, 1435,
	132, 1435,
	133, 1435,
	134, 1435,
	136, 1435,
	137, 1435,
	138, 1435,
	140, 1435,
	141, 1435,
	142, 1435,
	145, 1435,
	146, 1435,
	147, 1435,
	149, 1435,
	150, 1435,
	151, 1435,
	153, 1435,
	154, 1435,
	155, 1435,
	157, 1435,
	158, 1435,
	159, 1435,
	160, 1435,
	161, 1435,
	162, 1435,
	163, 1435,
	164, 1435,
	165, 1435,
	166, 1435,
	167, 1435,
	168, 1435,
	169, 1435,
	170, 1435,
	171, 1435,
	172, 1435,
	173, 1435,
	175, 1435,
	181, 1435,
	182, 1435,
	183, 1435,
	184, 1435,
	188, 1435,
	190, 1435,
	191, 1435,
	192, 1435,
	194, 1435,
	197, 1435,
	198, 1435,
	199, 1435,
	200, 1435,
	201, 1435,
	202, 1435,
	203, 1435,
	204, 1435,
	205, 1435,
	206, 1435,
	207, 1435,
	208, 1435,
	209, 1435,
	210, 1435,
	212, 1435,
	213, 1435,
	215, 1435,
	216, 1435,
	218, 1435,
	219, 1435,
	220, 1435,
	221, 1435,
	222, 1435,
	223, 1435,
	224, 1435,
	225, 1435,
	226, 1435,
	227, 1435,
	229, 1435,
	230, 1435,
	232, 1435,
	233, 1435,
	234, 1435,
	235, 1435,
	236, 1435,
	240, 1435,
	241, 1435,
	242, 1435,
	243, 1435,
	246, 1435,
	247, 1435,
	248, 1435,
	249, 1435,
	251, 1435,
	253, 1435,
	254, 1435,
	256, 1435,
	258, 1435,
	259, 1435,
	260, 1435,
	262, 1435,
	266, 1435,
	267, 1435,
	268, 1435,
	269, 1435,
	270, 1435,
	271, 1435,
	273, 1435,
	274, 1435,
	275, 1435,
	277, 1435,
	278, 1435,
	280, 1435,
	281, 1435,
	284, 1435,
	285, 1435,
	286, 1435,
	287, 1435,
	288, 1435,
	289, 1435,
	290, 1435,
	293, 1435,
	294, 1435,
	295, 1435,
	296, 1435,
	298, 1435,
	299, 1435,
	300, 1435,
	301, 1435,
	302, 1435,
	303, 1435,
	304, 1435,
	305, 1435,
	306, 1435,
	307, 1435,
	308, 1435,
	309, 1435,
	310, 1435,
	311, 1435,
	312, 1435,
	313, 1435,
	314, 1435,
	315, 1435,
	316, 1435,
	317, 1435,
	318, 1435,
	319, 1435,
	321, 1435,
	323, 1435,
	324, 1435,
	325, 1435,
	326, 1435,
	327, 1435,
	328, 1435,
	329, 1435,
	330, 1435,
	331, 1435,
	332, 1435,
	333, 1435,
	334, 1435,
	335, 1435,
	336, 1435,
	337, 1435,
	338, 1435,
	339, 1435,
	341, 1435,
	342, 1435,
	344, 1435,
	346, 1435,
	347, 1435,
	348, 1435,
	349, 1435,
	351, 1435,
	352, 1435,
	353, 1435,
	354, 1435,
	355, 1435,
	358, 1435,
	360, 1435,
	363, 1435,
	364, 1435,
	365, 1435,
	368, 1435,
	369, 1435,
	370, 1435,
	372, 1435,
	374, 1435,
	375, 1435,
	376, 1435,
	377, 1435,
	378, 1435,
	379, 1435,
	380, 1435,
	381, 1435,
	382, 1435,
	383, 1435,
	384, 1435,
	385, 1435,
	386, 1435,
	388, 1435,
	389, 1435,
	390, 1435,
	391, 1435,
	392, 1435,
	393, 1435,
	394, 1435,
	395, 1435,
	396, 1435,
	397, 1435,
	398, 1435,
	399, 1435,
	400, 1435,
	401, 1435,
	402, 1435,
	404, 1435,
	405, 1435,
	406, 1435,
	408, 1435,
	409, 1435,
	410, 1435,
	411, 1435,
	412, 1435,
	413, 1435,
	414, 1435,
	415, 1435,
	416, 1435,
	417, 1435,
	418, 1435,
	419, 1435,
	420, 1435,
	422, 1435,
	424, 1435,
	425, 1435,
	426, 1435,
	432, 1435,
	433, 1435,
	434, 1435,
	436, 1435,
	437, 1435,
	438, 1435,
	439, 1435,
	440, 1435,
	441, 1435,
	442, 1435,
	443, 1435,
	444, 1435,
	445, 1435,
	447, 1435,
	448, 1435,
	449, 1435,
	451, 1435,
	452, 1435,
	453, 1435,
	454, 1435,
	455, 1435,
	456, 1435,
	457, 1435,
	459, 1435,
	460, 1435,
	461, 1435,
	462, 1435,
	463, 1435,
	464, 1435,
	465, 1435,
	466, 1435,
	467, 1435,
	468, 1435,
	469, 1435,
	470, 1435,
	471, 1435,
	473, 1435,
	474, 1435,
	475, 1435,
	476, 1435,
	477, 1435,
	478, 1435,
	480, 1435,
	481, 1435,
	482, 1435,
	483, 1435,
	484, 1435,
	485, 1435,
	487, 1435,
	488, 1435,
	489, 1435,
	490, 1435,
	491, 1435,
	492, 1435,
	493, 1435,
	494, 1435,
	496, 1435,
	498, 1435,
	499, 1435,
	500, 1435,
	501, 1435,
	502, 1435,
	503, 1435,
	504, 1435,
	505, 1435,
	506, 1435,
	507, 1435,
	508, 1435,
	509, 1435,
	510, 1435,
	511, 1435,
	512, 1435,
	513, 1435,
	514, 1435,
	515, 1435,
	517, 1435,
	518, 1435,
	520, 1435,
	521, 1435,
	523, 1435,
	524, 1435,
	525, 1435,
	526, 1435,
	527, 1435,
	528, 1435,
	530, 1435,
	531, 1435,
	533, 1435,
	534, 1435,
	535, 1435,
	536, 1435,
	537, 1435,
	539, 1435,
	541, 1435,
	542, 1435,
	543, 1435,
	544, 1435,
	545, 1435,
	546, 1435,
	547, 1435,
	549, 1435,
	550, 1435,
	551, 1435,
	552, 1435,
	554, 1435,
	555, 1435,
	558, 1435,
	559, 1435,
	560, 1435,
	561, 1435,
	562, 1435,
	563, 1435,
	564, 1435,
	565, 1435,
	567, 1435,
	570, 1435,
	571, 1435,
	572, 1435,
	573, 1435,
	574, 1435,
	575, 1435,
	577, 1435,
	578, 1435,
	579, 1435,
	580, 1435,
	581, 1435,
	582, 1435,
	583, 1435,
	584, 1435,
	589, 1435,
	590, 1435,
	591, 1435,
	592, 1435,
	593, 1435,
	594, 1435,
	-2, 0,
	-1, 805,
	195, 2509,
	538, 2509,
	608, 2509,
	628, 2509,
	-2, 0,
	-1, 806,
	195, 2495,
	538, 2495,
	608, 2495,
	628, 2495,
	-2, 0,
	-1, 808,
	195, 2772,
	538, 2772,
	608, 2772,
	628, 2772,
	-2, 0,
	-1, 811,
	195, 2623,
	538, 2623,
	608, 2623,
	628, 2623,
	-2, 0,
	-1, 812,
	195, 2815,
	538, 2815,
	608, 2815,
	628, 2815,
	-2, 0,
	-1, 820,
	195, 2650,
	538, 2650,
	608, 2650,
	628, 2650,
	-2, 756,
	-1, 836,
	8, 887,
	29, 887,
	616, 887,
	617, 887,
	-2, 892,
	-1, 840,
	1, 2563,
	629, 2563,
	-2, 892,
	-1, 841,
	1, 2611,
	629, 2611,
	-2, 892,
	-1, 844,
	1, 2655,
	629, 2655,
	-2, 885,
	-1, 845,
	1, 2711,
	629, 2711,
	-2, 886,
	-1, 846,
	1, 2568,
	629, 2568,
	-2, 889,
	-1, 847,
	1, 2482,
	629, 2482,
	-2, 890,
	-1, 880,
	628, 2441,
	631, 2441,
	-2, 1101,
	-1, 881,
	628, 2443,
	631, 2443,
	-2, 1102,
	-1, 882,
	628, 2442,
	631, 2442,
	-2, 1103,
	-1, 883,
	631, 2367,
	-2, 1104,
	-1, 908,
	189, 279,
	-2, 0,
	-1, 932,
	45, 2414,
	-2, 0,
	-1, 933,
	577, 1413,
	-2, 1185,
	-1, 949,
	4, 1847,
	21, 1847,
	22, 1847,
	23, 1847,
	24, 1847,
	25, 1847,
	26, 1847,
	27, 1847,
	28, 1847,
	30, 1847,
	31, 1847,
	37, 1847,
	41, 1847,
	43, 1847,
	44, 1847,
	46, 1847,
	47, 1847,
	48, 1847,
	49, 1847,
	50, 1847,
	51, 1847,
	52, 1847,
	53, 1847,
	54, 1847,
	56, 1847,
	57, 1847,
	58, 1847,
	59, 1847,
	61, 1847,
	62, 1847,
	63, 1847,
	64, 1847,
	65, 1847,
	66, 1847,
	67, 1847,
	71, 1847,
	72, 1847,
	73, 1847,
	74, 1847,
	76, 1847,
	77, 1847,
	78, 1847,
	82, 1847,
	83, 1847,
	84, 1847,
	85, 1847,
	86, 1847,
	87, 1847,
	88, 1847,
	89, 1847,
	92, 1847,
	93, 1847,
	94, 1847,
	95, 1847,
	96, 1847,
	98, 1847,
	100, 1847,
	101, 1847,
	102, 1847,
	103, 1847,
	104, 1847,
	105, 1847,
	107, 1847,
	108, 1847,
	109, 1847,
	111, 1847,
	112, 1847,
	113, 1847,
	121, 1847,
	122, 1847,
	123, 1847,
	124, 1847,
	125, 1847,
	127, 1847,
	128, 1847,
	129, 1847,
	130, 1847,
	132, 1847,
	133, 1847,
	134, 1847,
	136, 1847,
	137, 1847,
	138, 1847,
	140, 1847,
	141, 1847,
	142, 1847,
	145, 1847,
	146, 1847,
	147, 1847,
	149, 1847,
	150, 1847,
	151, 1847,
	153, 1847,
	154, 1847,
	155, 1847,
	157, 1847,
	158, 1847,
	159, 1847,
	160, 1847,
	161, 1847,
	162, 1847,
	163, 1847,
	164, 1847,
	165, 1847,
	166, 1847,
	167, 1847,
	168, 1847,
	169, 1847,
	170, 1847,
	171, 1847,
	172, 1847,
	173, 1847,
	175, 1847,
	181, 1847,
	182, 1847,
	183, 1847,
	184, 1847,
	188, 1847,
	190, 1847,
	191, 1847,
	192, 1847,
	194, 1847,
	197, 1847,
	198, 1847,
	199, 1847,
	200, 1847,
	201, 1847,
	202, 1847,
	203, 1847,
	204, 1847,
	205, 1847,
	206, 1847,
	207, 1847,
	208, 1847,
	209, 1847,
	210, 1847,
	212, 1847,
	213, 1847,
	215, 1847,
	216, 1847,
	218, 1847,
	219, 1847,
	220, 1847,
	221, 1847,
	222, 1847,
	223, 1847,
	224, 1847,
	225, 1847,
	226, 1847,
	227, 1847,
	229, 1847,
	230, 1847,
	232, 1847,
	233, 1847,
	234, 1847,
	235, 1847,
	236, 1847,
	240, 1847,
	241, 1847,
	242, 1847,
	243, 1847,
	246, 1847,
	247, 1847,
	248, 1847,
	249, 1847,
	251, 1847,
	253, 1847,
	254, 1847,
	256, 1847,
	258, 1847,
	259, 1847,
	260, 1847,
	262, 1847,
	266, 1847,
	267, 1847,
	268, 1847,
	269, 1847,
	270, 1847,
	271, 1847,
	273, 1847,
	274, 1847,
	275, 1847,
	277, 1847,
	278, 1847,
	280, 1847,
	281, 1847,
	284, 1847,
	285, 1847,
	286, 1847,
	287, 1847,
	288, 1847,
	289, 1847,
	290, 1847,
	293, 1847,
	294, 1847,
	295, 1847,
	296, 1847,
	298, 1847,
	299, 1847,
	300, 1847,
	301, 1847,
	302, 1847,
	303, 1847,
	304, 1847,
	305, 1847,
	306, 1847,
	307, 1847,
	308, 1847,
	309, 1847,
	310, 1847,
	311, 1847,
	312, 1847,
	313, 1847,
	314, 1847,
	315, 1847,
	316, 1847,
	317, 1847,
	318, 1847,
	319, 1847,
	321, 1847,
	323, 1847,
	324, 1847,
	325, 1847,
	326, 1847,
	327, 1847,
	328, 1847,
	329, 1847,
	330, 1847,
	331, 1847,
	332, 1847,
	333, 1847,
	334, 1847,
	335, 1847,
	336, 1847,
	337, 1847,
	338, 1847,
	339, 1847,
	341, 1847,
	342, 1847,
	344, 1847,
	346, 1847,
	347, 1847,
	348, 1847,
	349, 1847,
	351, 1847,
	352, 1847,
	353, 1847,
	354, 1847,
	355, 1847,
	358, 1847,
	360, 1847,
	363, 1847,
	364, 1847,
	365, 1847,
	368, 1847,
	369, 1847,
	370, 1847,
	372, 1847,
	374, 1847,
	375, 1847,
	376, 1847,
	377, 1847,
	378, 1847,
	379, 1847,
	380, 1847,
	381, 1847,
	382, 1847,
	383, 1847,
	384, 1847,
	385, 1847,
	386, 1847,
	388, 1847,
	389, 1847,
	390, 1847,
	391, 1847,
	392, 1847,
	393, 1847,
	394, 1847,
	395, 1847,
	396, 1847,
	397, 1847,
	398, 1847,
	399, 1847,
	400, 1847,
	401, 1847,
	402, 1847,
	404, 1847,
	405, 1847,
	406, 1847,
	408, 1847,
	409, 1847,
	410, 1847,
	411, 1847,
	412, 1847,
	413, 1847,
	414, 1847,
	415, 1847,
	416, 1847,
	417, 1847,
	418, 1847,
	419, 1847,
	420, 1847,
	422, 1847,
	424, 1847,
	425, 1847,
	426, 1847,
	432, 1847,
	433, 1847,
	434, 1847,
	436, 1847,
	437, 1847,
	438, 1847,
	439, 1847,
	440, 1847,
	441, 1847,
	442, 1847,
	443, 1847,
	444, 1847,
	445, 1847,
	447, 1847,
	448, 1847,
	449, 1847,
	451, 1847,
	452, 1847,
	453, 1847,
	454, 1847,
	455, 1847,
	456, 1847,
	457, 1847,
	459, 1847,
	460, 1847,
	461, 1847,
	462, 1847,
	463, 1847,
	464, 1847,
	465, 1847,
	466, 1847,
	467, 1847,
	468, 1847,
	469, 1847,
	470, 1847,
	471, 1847,
	473, 1847,
	474, 1847,
	475, 1847,
	476, 1847,
	477, 1847,
	478, 1847,
	480, 1847,
	481, 1847,
	482, 1847,
	483, 1847,
	484, 1847,
	485, 1847,
	487, 1847,
	488, 1847,
	489, 1847,
	490, 1847,
	491, 1847,
	492, 1847,
	493, 1847,
	494, 1847,
	496, 1847,
	498, 1847,
	499, 1847,
	500, 1847,
	501, 1847,
	502, 1847,
	503, 1847,
	504, 1847,
	505, 1847,
	506, 1847,
	507, 1847,
	508, 1847,
	509, 1847,
	510, 1847,
	511, 1847,
	512, 1847,
	513, 1847,
	514, 1847,
	515, 1847,
	517, 1847,
	518, 1847,
	520, 1847,
	521, 1847,
	523, 1847,
	524, 1847,
	525, 1847,
	526, 1847,
	527, 1847,
	528, 1847,
	530, 1847,
	531, 1847,
	533, 1847,
	534, 1847,
	535, 1847,
	536, 1847,
	537, 1847,
	539, 1847,
	541, 1847,
	542, 1847,
	543, 1847,
	544, 1847,
	545, 1847,
	546, 1847,
	547, 1847,
	549, 1847,
	550, 1847,
	551, 1847,
	552, 1847,
	554, 1847,
	555, 1847,
	558, 1847,
	559, 1847,
	560, 1847,
	561, 1847,
	562, 1847,
	563, 1847,
	564, 1847,
	565, 1847,
	567, 1847,
	570, 1847,
	571, 1847,
	572, 1847,
	573, 1847,
	574, 1847,
	575, 1847,
	577, 1847,
	578, 1847,
	579, 1847,
	580, 1847,
	581, 1847,
	582, 1847,
	583, 1847,
	584, 1847,
	589, 1847,
	590, 1847,
	591, 1847,
	592, 1847,
	593, 1847,
	594, 1847,
	-2, 0,
	-1, 959,
	270, 435,
	-2, 0,
	-1, 1038,
	410, 977,
	478, 977,
	521, 977,
	543, 977,
	-2, 0,
	-1, 1039,
	410, 976,
	478, 976,
	521, 976,
	543, 976,
	-2, 905,
	-1, 1043,
	1, 1029,
	625, 1029,
	627, 1029,
	629, 1029,
	-2, 0,
	-1, 1045,
	1, 951,
	625, 951,
	627, 951,
	629, 951,
	-2, 0,
	-1, 1046,
	1, 955,
	625, 955,
	627, 955,
	629, 955,
	-2, 0,
	-1, 1047,
	1, 1100,
	189, 1100,
	625, 1100,
	627, 1100,
	629, 1100,
	-2, 0,
	-1, 1055,
	1, 982,
	625, 982,
	627, 982,
	629, 982,
	-2, 0,
	-1, 1062,
	1, 1029,
	625, 1029,
	627, 1029,
	629, 1029,
	-2, 0,
	-1, 1063,
	1, 1031,
	625, 1031,
	627, 1031,
	629, 1031,
	-2, 0,
	-1, 1064,
	1, 1034,
	625, 1034,
	627, 1034,
	629, 1034,
	-2, 0,
	-1, 1072,
	1, 1064,
	625, 1064,
	627, 1064,
	629, 1064,
	-2, 0,
	-1, 1073,
	1, 1066,
	625, 1066,
	627, 1066,
	629, 1066,
	-2, 0,
	-1, 1078,
	1, 1094,
	625, 1094,
	627, 1094,
	629, 1094,
	-2, 0,
	-1, 1132,
	176, 1717,
	189, 1717,
	283, 1717,
	356, 1717,
	-2, 1653,
	-1, 1148,
	176, 1716,
	189, 1716,
	283, 1716,
	356, 1716,
	-2, 1650,
	-1, 1175,
	628, 2440,
	-2, 764,
	-1, 1204,
	5, 2432,
	626, 2430,
	-2, 2421,
	-1, 1212,
	5, 2453,
	626, 2450,
	-2, 2441,
	-1, 1213,
	5, 2454,
	626, 2451,
	-2, 2442,
	-1, 1221,
	628, 2438,
	-2, 2420,
	-1, 1222,
	626, 2903,
	-2, 2439,
	-1, 1245,
	626, 2902,
	-2, 2455,
	-1, 1246,
	5, 1922,
	-2, 2873,
	-1, 1247,
	5, 1923,
	-2, 2874,
	-1, 1248,
	5, 1924,
	-2, 2888,
	-1, 1249,
	5, 1925,
	-2, 2852,
	-1, 1250,
	5, 1926,
	-2, 2886,
	-1, 1251,
	5, 1934,
	-2, 2865,
	-1, 1252,
	5, 1921,
	-2, 2861,
	-1, 1253,
	5, 1921,
	-2, 2860,
	-1, 1254,
	5, 1921,
	-2, 2879,
	-1, 1255,
	5, 1932,
	-2, 2854,
	-1, 1256,
	5, 1937,
	-2, 2853,
	-1, 1257,
	5, 1939,
	-2, 2898,
	-1, 1260,
	5, 1961,
	-2, 2891,
	-1, 1261,
	5, 1953,
	-2, 2892,
	-1, 1262,
	5, 1961,
	-2, 2893,
	-1, 1263,
	5, 1957,
	-2, 2894,
	-1, 1264,
	5, 1907,
	-2, 2866,
	-1, 1265,
	5, 1908,
	-2, 2867,
	-1, 1266,
	5, 1909,
	-2, 2855,
	-1, 1294,
	5, 1944,
	-2, 2899,
	-1, 1295,
	5, 1945,
	-2, 2889,
	-1, 1296,
	5, 1946,
	578, 1946,
	-2, 2856,
	-1, 1297,
	5, 1947,
	578, 1947,
	-2, 2857,
	-1, 1335,
	626, 2450,
	-2, 2441,
	-1, 1336,
	626, 2451,
	-2, 2442,
	-1, 1434,
	195, 2815,
	538, 2815,
	608, 2815,
	628, 2815,
	-2, 0,
	-1, 1439,
	1, 740,
	629, 740,
	-2, 1562,
	-1, 1586,
	376, 2415,
	436, 2415,
	480, 2415,
	618, 2415,
	-2, 2405,
	-1, 1592,
	195, 139,
	277, 139,
	341, 139,
	584, 139,
	-2, 2811,
	-1, 1593,
	195, 140,
	277, 140,
	341, 140,
	584, 140,
	-2, 2554,
	-1, 1594,
	195, 141,
	277, 141,
	341, 141,
	584, 141,
	-2, 2733,
	-1, 1600,
	630, 2415,
	-2, 2417,
	-1, 1624,
	1, 1410,
	441, 1365,
	480, 1365,
	601, 1365,
	625, 1410,
	627, 1410,
	629, 1410,
	-2, 1702,
	-1, 1630,
	211, 1507,
	231, 1507,
	449, 1507,
	-2, 0,
	-1, 1679,
	418, 1184,
	577, 1184,
	-2, 430,
	-1, 1696,
	45, 2413,
	-2, 1147,
	-1, 1703,
	1, 1410,
	625, 1410,
	627, 1410,
	629, 1410,
	-2, 1702,
	-1, 1711,
	4, 1435,
	21, 1435,
	22, 1435,
	23, 1435,
	24, 1435,
	25, 1435,
	26, 1435,
	27, 1435,
	28, 1435,
	30, 1435,
	31, 1435,
	37, 1435,
	41, 1435,
	43, 1435,
	44, 1435,
	46, 1435,
	47, 1435,
	48, 1435,
	49, 1435,
	50, 1435,
	51, 1435,
	52, 1435,
	53, 1435,
	54, 1435,
	56, 1435,
	57, 1435,
	58, 1435,
	59, 1435,
	61, 1435,
	62, 1435,
	63, 1435,
	64, 1435,
	65, 1435,
	66, 1435,
	67, 1435,
	71, 1435,
	72, 1435,
	73, 1435,
	74, 1435,
	76, 1435,
	77, 1435,
	78, 1435,
	82, 1435,
	83, 1435,
	84, 1435,
	85, 1435,
	86, 1435,
	87, 1435,
	88, 1435,
	89, 1435,
	92, 1435,
	93, 1435,
	94, 1435,
	95, 1435,
	96, 1435,
	98, 1435,
	100, 1435,
	101, 1435,
	102, 1435,
	103, 1435,
	104, 1435,
	105, 1435,
	107, 1435,
	108, 1435,
	109, 1435,
	111, 1435,
	112, 1435,
	113, 1435,
	121, 1435,
	122, 1435,
	123, 1435,
	124, 1435,
	125, 1435,
	127, 1435,
	128, 1435,
	129, 1435,
	130, 1435,
	132, 1435,
	133, 1435,
	134, 1435,
	136, 1435,
	137, 1435,
	138, 1435,
	140, 1435,
	141, 1435,
	142, 1435,
	145, 1435,
	146, 1435,
	147, 1435,
	149, 1435,
	150, 1435,
	151, 1435,
	153, 1435,
	154, 1435,
	155, 1435,
	157, 1435,
	158, 1435,
	159, 1435,
	160, 1435,
	161, 1435,
	162, 1435,
	163, 1435,
	164, 1435,
	165, 1435,
	166, 1435,
	167, 1435,
	168, 1435,
	169, 1435,
	170, 1435,
	171, 1435,
	172, 1435,
	173, 1435,
	181, 1435,
	182, 1435,
	183, 1435,
	184, 1435,
	188, 1435,
	190, 1435,
	191, 1435,
	192, 1435,
	194, 1435,
	197, 1435,
	198, 1435,
	199, 1435,
	200, 1435,
	201, 1435,
	202, 1435,
	203, 1435,
	204, 1435,
	205, 1435,
	206, 1435,
	207, 1435,
	208, 1435,
	209, 1435,
	210, 1435,
	212, 1435,
	213, 1435,
	215, 1435,
	216, 1435,
	218, 1435,
	219, 1435,
	220, 1435,
	221, 1435,
	222, 1435,
	223, 1435,
	224, 1435,
	225, 1435,
	226, 1435,
	227, 1435,
	229, 1435,
	230, 1435,
	232, 1435,
	233, 1435,
	234, 1435,
	235, 1435,
	236, 1435,
	241, 1435,
	242, 1435,
	243, 1435,
	246, 1435,
	247, 1435,
	248, 1435,
	249, 1435,
	251, 1435,
	253, 1435,
	254, 1435,
	256, 1435,
	258, 1435,
	259, 1435,
	260, 1435,
	262, 1435,
	266, 1435,
	267, 1435,
	268, 1435,
	269, 1435,
	270, 1435,
	271, 1435,
	273, 1435,
	274, 1435,
	275, 1435,
	277, 1435,
	278, 1435,
	280, 1435,
	281, 1435,
	284, 1435,
	285, 1435,
	286, 1435,
	287, 1435,
	288, 1435,
	289, 1435,
	290, 1435,
	293, 1435,
	294, 1435,
	295, 1435,
	296, 1435,
	298, 1435,
	299, 1435,
	300, 1435,
	301, 1435,
	302, 1435,
	303, 1435,
	304, 1435,
	305, 1435,
	306, 1435,
	307, 1435,
	308, 1435,
	309, 1435,
	310, 1435,
	311, 1435,
	312, 1435,
	313, 1435,
	314, 1435,
	315, 1435,
	316, 1435,
	317, 1435,
	318, 1435,
	319, 1435,
	321, 1435,
	323, 1435,
	324, 1435,
	325, 1435,
	326, 1435,
	327, 1435,
	328, 1435,
	329, 1435,
	330, 1435,
	331, 1435,
	332, 1435,
	333, 1435,
	334, 1435,
	335, 1435,
	336, 1435,
	337, 1435,
	338, 1435,
	339, 1435,
	341, 1435,
	342, 1435,
	346, 1435,
	347, 1435,
	348, 1435,
	349, 1435,
	351, 1435,
	352, 1435,
	353, 1435,
	354, 1435,
	355, 1435,
	358, 1435,
	360, 1435,
	361, 1435,
	363, 1435,
	364, 1435,
	365, 1435,
	368, 1435,
	369, 1435,
	370, 1435,
	372, 1435,
	374, 1435,
	375, 1435,
	376, 1435,
	377, 1435,
	378, 1435,
	379, 1435,
	380, 1435,
	381, 1435,
	382, 1435,
	383, 1435,
	384, 1435,
	385, 1435,
	386, 1435,
	388, 1435,
	389, 1435,
	390, 1435,
	391, 1435,
	392, 1435,
	393, 1435,
	394, 1435,
	395, 1435,
	396, 1435,
	397, 1435,
	398, 1435,
	399, 1435,
	400, 1435,
	401, 1435,
	402, 1435,
	404, 1435,
	405, 1435,
	406, 1435,
	408, 1435,
	409, 1435,
	410, 1435,
	411, 1435,
	412, 1435,
	413, 1435,
	414, 1435,
	415, 1435,
	416, 1435,
	417, 1435,
	418, 1435,
	419, 1435,
	420, 1435,
	422, 1435,
	424, 1435,
	425, 1435,
	426, 1435,
	432, 1435,
	433, 1435,
	434, 1435,
	436, 1435,
	437, 1435,
	438, 1435,
	439, 1435,
	440, 1435,
	441, 1435,
	442, 1435,
	443, 1435,
	444, 1435,
	445, 1435,
	447, 1435,
	448, 1435,
	449, 1435,
	451, 1435,
	452, 1435,
	453, 1435,
	454, 1435,
	455, 1435,
	456, 1435,
	457, 1435,
	459, 1435,
	460, 1435,
	461, 1435,
	462, 1435,
	463, 1435,
	464, 1435,
	465, 1435,
	466, 1435,
	467, 1435,
	468, 1435,
	469, 1435,
	470, 1435,
	471, 1435,
	473, 1435,
	474, 1435,
	475, 1435,
	476, 1435,
	477, 1435,
	478, 1435,
	480, 1435,
	481, 1435,
	482, 1435,
	483, 1435,
	484, 1435,
	485, 1435,
	487, 1435,
	488, 1435,
	489, 1435,
	490, 1435,
	491, 1435,
	492, 1435,
	493, 1435,
	494, 1435,
	496, 1435,
	498, 1435,
	499, 1435,
	500, 1435,
	501, 1435,
	502, 1435,
	503, 1435,
	504, 1435,
	505, 1435,
	506, 1435,
	507, 1435,
	508, 1435,
	509, 1435,
	510, 1435,
	511, 1435,
	512, 1435,
	513, 1435,
	514, 1435,
	515, 1435,
	517, 1435,
	518, 1435,
	520, 1435,
	521, 1435,
	523, 1435,
	524, 1435,
	525, 1435,
	526, 1435,
	527, 1435,
	528, 1435,
	530, 1435,
	531, 1435,
	533, 1435,
	534, 1435,
	535, 1435,
	536, 1435,
	537, 1435,
	539, 1435,
	541, 1435,
	542, 1435,
	543, 1435,
	544, 1435,
	545, 1435,
	546, 1435,
	547, 1435,
	549, 1435,
	550, 1435,
	551, 1435,
	552, 1435,
	554, 1435,
	555, 1435,
	558, 1435,
	559, 1435,
	560, 1435,
	561, 1435,
	562, 1435,
	563, 1435,
	564, 1435,
	565, 1435,
	567, 1435,
	570, 1435,
	571, 1435,
	572, 1435,
	573, 1435,
	574, 1435,
	575, 1435,
	577, 1435,
	578, 1435,
	579, 1435,
	580, 1435,
	581, 1435,
	582, 1435,
	583, 1435,
	584, 1435,
	589, 1435,
	590, 1435,
	591, 1435,
	592, 1435,
	593, 1435,
	594, 1435,
	-2, 0,
	-1, 1734,
	1, 575,
	625, 575,
	627, 575,
	629, 575,
	-2, 1673,
	-1, 1737,
	4, 2897,
	11, 2897,
	12, 2897,
	14, 2897,
	15, 2897,
	16, 2897,
	17, 2897,
	18, 2897,
	19, 2897,
	21, 2897,
	22, 2897,
	23, 2897,
	24, 2897,
	25, 2897,
	26, 2897,
	27, 2897,
	28, 2897,
	30, 2897,
	31, 2897,
	34, 2897,
	35, 2897,
	37, 2897,
	39, 2897,
	41, 2897,
	43, 2897,
	44, 2897,
	46, 2897,
	47, 2897,
	48, 2897,
	49, 2897,
	50, 2897,
	51, 2897,
	52, 2897,
	53, 2897,
	54, 2897,
	56, 2897,
	57, 2897,
	58, 2897,
	59, 2897,
	61, 2897,
	62, 2897,
	63, 2897,
	64, 2897,
	65, 2897,
	66, 2897,
	67, 2897,
	70, 2897,
	71, 2897,
	72, 2897,
	73, 2897,
	74, 2897,
	76, 2897,
	77, 2897,
	78, 2897,
	79, 2897,
	82, 2897,
	83, 2897,
	84, 2897,
	85, 2897,
	86, 2897,
	87, 2897,
	88, 2897,
	89, 2897,
	90, 2897,
	92, 2897,
	93, 2897,
	94, 2897,
	95, 2897,
	96, 2897,
	98, 2897,
	99, 2897,
	100, 2897,
	101, 2897,
	102, 2897,
	103, 2897,
	104, 2897,
	105, 2897,
	107, 2897,
	108, 2897,
	109, 2897,
	110, 2897,
	111, 2897,
	112, 2897,
	113, 2897,
	121, 2897,
	122, 2897,
	123, 2897,
	124, 2897,
	125, 2897,
	127, 2897,
	128, 2897,
	129, 2897,
	130, 2897,
	132, 2897,
	133, 2897,
	134, 2897,
	136, 2897,
	137, 2897,
	138, 2897,
	140, 2897,
	141, 2897,
	142, 2897,
	145, 2897,
	146, 2897,
	147, 2897,
	149, 2897,
	150, 2897,
	151, 2897,
	153, 2897,
	154, 2897,
	155, 2897,
	157, 2897,
	158, 2897,
	159, 2897,
	160, 2897,
	161, 2897,
	162, 2897,
	163, 2897,
	164, 2897,
	165, 2897,
	166, 2897,
	167, 2897,
	168, 2897,
	169, 2897,
	170, 2897,
	171, 2897,
	172, 2897,
	173, 2897,
	177, 2897,
	178, 2897,
	179, 2897,
	180, 2897,
	181, 2897,
	182, 2897,
	183, 2897,
	184, 2897,
	187, 2897,
	188, 2897,
	190, 2897,
	191, 2897,
	192, 2897,
	194, 2897,
	196, 2897,
	197, 2897,
	198, 2897,
	199, 2897,
	200, 2897,
	201, 2897,
	202, 2897,
	203, 2897,
	204, 2897,
	205, 2897,
	206, 2897,
	207, 2897,
	208, 2897,
	209, 2897,
	210, 2897,
	212, 2897,
	213, 2897,
	215, 2897,
	216, 2897,
	218, 2897,
	219, 2897,
	220, 2897,
	221, 2897,
	222, 2897,
	223, 2897,
	224, 2897,
	225, 2897,
	226, 2897,
	227, 2897,
	228, 2897,
	229, 2897,
	230, 2897,
	231, 2897,
	232, 2897,
	233, 2897,
	234, 2897,
	235, 2897,
	236, 2897,
	238, 2897,
	239, 2897,
	241, 2897,
	242, 2897,
	243, 2897,
	245, 2897,
	246, 2897,
	247, 2897,
	248, 2897,
	249, 2897,
	251, 2897,
	253, 2897,
	254, 2897,
	255, 2897,
	256, 2897,
	257, 2897,
	258, 2897,
	259, 2897,
	260, 2897,
	261, 2897,
	262, 2897,
	264, 2897,
	265, 2897,
	266, 2897,
	267, 2897,
	268, 2897,
	269, 2897,
	270, 2897,
	271, 2897,
	273, 2897,
	274, 2897,
	275, 2897,
	277, 2897,
	278, 2897,
	279, 2897,
	280, 2897,
	281, 2897,
	282, 2897,
	284, 2897,
	285, 2897,
	286, 2897,
	287, 2897,
	288, 2897,
	289, 2897,
	290, 2897,
	293, 2897,
	294, 2897,
	295, 2897,
	296, 2897,
	297, 2897,
	298, 2897,
	299, 2897,
	300, 2897,
	301, 2897,
	302, 2897,
	303, 2897,
	304, 2897,
	305, 2897,
	306, 2897,
	307, 2897,
	308, 2897,
	309, 2897,
	310, 2897,
	311, 2897,
	312, 2897,
	313, 2897,
	314, 2897,
	315, 2897,
	316, 2897,
	317, 2897,
	318, 2897,
	319, 2897,
	321, 2897,
	322, 2897,
	323, 2897,
	324, 2897,
	325, 2897,
	326, 2897,
	327, 2897,
	328, 2897,
	329, 2897,
	330, 2897,
	331, 2897,
	332, 2897,
	333, 2897,
	334, 2897,
	335, 2897,
	336, 2897,
	337, 2897,
	338, 2897,
	339, 2897,
	341, 2897,
	342, 2897,
	345, 2897,
	346, 2897,
	347, 2897,
	348, 2897,
	349, 2897,
	351, 2897,
	352, 2897,
	353, 2897,
	354, 2897,
	355, 2897,
	358, 2897,
	360, 2897,
	363, 2897,
	364, 2897,
	365, 2897,
	366, 2897,
	368, 2897,
	369, 2897,
	370, 2897,
	372, 2897,
	374, 2897,
	375, 2897,
	376, 2897,
	377, 2897,
	378, 2897,
	379, 2897,
	380, 2897,
	381, 2897,
	382, 2897,
	383, 2897,
	384, 2897,
	385, 2897,
	386, 2897,
	388, 2897,
	389, 2897,
	390, 2897,
	391, 2897,
	392, 2897,
	393, 2897,
	394, 2897,
	395, 2897,
	396, 2897,
	397, 2897,
	398, 2897,
	399, 2897,
	400, 2897,
	401, 2897,
	402, 2897,
	404, 2897,
	405, 2897,
	406, 2897,
	408, 2897,
	409, 2897,
	410, 2897,
	411, 2897,
	412, 2897,
	413, 2897,
	414, 2897,
	415, 2897,
	416, 2897,
	417, 2897,
	418, 2897,
	419, 2897,
	420, 2897,
	422, 2897,
	424, 2897,
	425, 2897,
	426, 2897,
	432, 2897,
	433, 2897,
	434, 2897,
	435, 2897,
	436, 2897,
	437, 2897,
	438, 2897,
	439, 2897,
	440, 2897,
	441, 2897,
	442, 2897,
	443, 2897,
	444, 2897,
	445, 2897,
	447, 2897,
	448, 2897,
	449, 2897,
	450, 2897,
	451, 2897,
	452, 2897,
	453, 2897,
	454, 2897,
	455, 2897,
	456, 2897,
	457, 2897,
	458, 2897,
	459, 2897,
	460, 2897,
	461, 2897,
	462, 2897,
	463, 2897,
	464, 2897,
	465, 2897,
	466, 2897,
	467, 2897,
	468, 2897,
	469, 2897,
	470, 2897,
	471, 2897,
	473, 2897,
	474, 2897,
	475, 2897,
	476, 2897,
	477, 2897,
	478, 2897,
	480, 2897,
	481, 2897,
	482, 2897,
	483, 2897,
	484, 2897,
	485, 2897,
	486, 2897,
	487, 2897,
	488, 2897,
	489, 2897,
	490, 2897,
	491, 2897,
	492, 2897,
	493, 2897,
	494, 2897,
	496, 2897,
	498, 2897,
	499, 2897,
	500, 2897,
	501, 2897,
	502, 2897,
	503, 2897,
	504, 2897,
	505, 2897,
	506, 2897,
	507, 2897,
	508, 2897,
	509, 2897,
	510, 2897,
	511, 2897,
	512, 2897,
	513, 2897,
	514, 2897,
	515, 2897,
	517, 2897,
	518, 2897,
	519, 2897,
	520, 2897,
	521, 2897,
	523, 2897,
	524, 2897,
	525, 2897,
	526, 2897,
	527, 2897,
	528, 2897,
	530, 2897,
	531, 2897,
	533, 2897,
	534, 2897,
	535, 2897,
	536, 2897,
	537, 2897,
	539, 2897,
	541, 2897,
	542, 2897,
	543, 2897,
	544, 2897,
	545, 2897,
	546, 2897,
	547, 2897,
	549, 2897,
	550, 2897,
	551, 2897,
	552, 2897,
	554, 2897,
	555, 2897,
	558, 2897,
	559, 2897,
	560, 2897,
	561, 2897,
	562, 2897,
	563, 2897,
	564, 2897,
	565, 2897,
	567, 2897,
	570, 2897,
	571, 2897,
	572, 2897,
	573, 2897,
	574, 2897,
	575, 2897,
	577, 2897,
	578, 2897,
	579, 2897,
	580, 2897,
	581, 2897,
	582, 2897,
	583, 2897,
	584, 2897,
	589, 2897,
	590, 2897,
	591, 2897,
	592, 2897,
	593, 2897,
	594, 2897,
	595, 2897,
	597, 2897,
	606, 2897,
	607, 2897,
	608, 2897,
	609, 2897,
	610, 2897,
	611, 2897,
	613, 2897,
	614, 2897,
	615, 2897,
	616, 2897,
	617, 2897,
	618, 2897,
	619, 2897,
	620, 2897,
	621, 2897,
	624, 2897,
	627, 2897,
	628, 2897,
	630, 2897,
	631, 2897,
	-2, 0,
	-1, 1742,
	195, 2772,
	538, 2772,
	608, 2772,
	628, 2772,
	-2, 0,
	-1, 1796,
	410, 977,
	478, 977,
	521, 977,
	543, 977,
	-2, 0,
	-1, 1807,
	1, 1507,
	625, 1507,
	627, 1507,
	629, 1507,
	-2, 0,
	-1, 1824,
	1, 972,
	625, 972,
	627, 972,
	629, 972,
	-2, 0,
	-1, 1825,
	1, 1016,
	625, 1016,
	627, 1016,
	629, 1016,
	-2, 0,
	-1, 1826,
	1, 1024,
	625, 1024,
	627, 1024,
	629, 1024,
	-2, 0,
	-1, 1829,
	1, 981,
	625, 981,
	627, 981,
	629, 981,
	-2, 0,
	-1, 1831,
	1, 987,
	625, 987,
	627, 987,
	629, 987,
	-2, 0,
	-1, 1834,
	1, 983,
	625, 983,
	627, 983,
	629, 983,
	-2, 0,
	-1, 1839,
	1, 997,
	625, 997,
	627, 997,
	629, 997,
	-2, 0,
	-1, 1873,
	1, 2754,
	625, 2754,
	627, 2754,
	628, 2754,
	629, 2754,
	-2, 0,
	-1, 1877,
	1, 1075,
	625, 1075,
	627, 1075,
	629, 1075,
	-2, 0,
	-1, 1894,
	1, 1557,
	629, 1557,
	-2, 1562,
	-1, 1897,
	176, 1716,
	189, 1716,
	283, 1716,
	356, 1716,
	-2, 1654,
	-1, 1997,
	156, 1675,
	176, 1675,
	189, 1675,
	250, 1675,
	283, 1675,
	356, 1675,
	367, 1675,
	556, 1675,
	-2, 2126,
	-1, 2058,
	627, 2301,
	-2, 0,
	-1, 2094,
	156, 1675,
	176, 1675,
	189, 1675,
	250, 1675,
	283, 1675,
	356, 1675,
	367, 1675,
	556, 1675,
	-2, 1808,
	-1, 2134,
	538, 2769,
	628, 2769,
	631, 2769,
	-2, 0,
	-1, 2151,
	626, 1949,
	-2, 1937,
	-1, 2183,
	195, 2769,
	628, 2769,
	631, 2769,
	-2, 0,
	-1, 2226,
	1, 742,
	629, 742,
	-2, 1562,
	-1, 2400,
	231, 274,
	-2, 2449,
	-1, 2401,
	231, 275,
	-2, 330,
	-1, 2512,
	1, 974,
	625, 974,
	627, 974,
	629, 974,
	-2, 0,
	-1, 2513,
	1, 1018,
	625, 1018,
	627, 1018,
	629, 1018,
	-2, 0,
	-1, 2514,
	1, 1026,
	625, 1026,
	627, 1026,
	629, 1026,
	-2, 0,
	-1, 2515,
	1, 1077,
	625, 1077,
	627, 1077,
	629, 1077,
	-2, 0,
	-1, 2556,
	1, 999,
	625, 999,
	627, 999,
	629, 999,
	-2, 0,
	-1, 2578,
	1, 1060,
	625, 1060,
	627, 1060,
	629, 1060,
	-2, 0,
	-1, 2625,
	456, 1743,
	457, 1743,
	-2, 1982,
	-1, 2656,
	14, 0,
	15, 0,
	16, 0,
	606, 0,
	607, 0,
	608, 0,
	-2, 2002,
	-1, 2657,
	14, 0,
	15, 0,
	16, 0,
	606, 0,
	607, 0,
	608, 0,
	-2, 2003,
	-1, 2658,
	99, 0,
	264, 0,
	265, 0,
	610, 0,
	611, 0,
	-2, 2004,
	-1, 2659,
	99, 0,
	264, 0,
	265, 0,
	610, 0,
	611, 0,
	-2, 2005,
	-1, 2660,
	99, 0,
	264, 0,
	265, 0,
	610, 0,
	611, 0,
	-2, 2006,
	-1, 2661,
	99, 0,
	264, 0,
	265, 0,
	610, 0,
	611, 0,
	-2, 2007,
	-1, 2662,
	99, 0,
	264, 0,
	265, 0,
	610, 0,
	611, 0,
	-2, 2008,
	-1, 2663,
	14, 0,
	15, 0,
	16, 0,
	606, 0,
	607, 0,
	608, 0,
	-2, 2009,
	-1, 2675,
	14, 0,
	15, 0,
	16, 0,
	606, 0,
	607, 0,
	608, 0,
	-2, 2021,
	-1, 2676,
	14, 0,
	15, 0,
	16, 0,
	606, 0,
	607, 0,
	608, 0,
	-2, 2022,
	-1, 2677,
	14, 0,
	15, 0,
	16, 0,
	606, 0,
	607, 0,
	608, 0,
	-2, 2023,
	-1, 2681,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	228, 0,
	231, 0,
	282, 0,
	486, 0,
	595, 0,
	609, 0,
	-2, 2030,
	-1, 2687,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	228, 0,
	231, 0,
	282, 0,
	486, 0,
	595, 0,
	609, 0,
	-2, 2034,
	-1, 2689,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	228, 0,
	231, 0,
	282, 0,
	486, 0,
	595, 0,
	609, 0,
	-2, 2042,
	-1, 2690,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	228, 0,
	231, 0,
	282, 0,
	486, 0,
	595, 0,
	609, 0,
	-2, 2043,
	-1, 2691,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	228, 0,
	231, 0,
	282, 0,
	486, 0,
	595, 0,
	609, 0,
	-2, 2044,
	-1, 2692,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	228, 0,
	231, 0,
	282, 0,
	486, 0,
	595, 0,
	609, 0,
	-2, 2045,
	-1, 2866,
	5, 2453,
	195, 2312,
	626, 2450,
	-2, 2441,
	-1, 2867,
	195, 2313,
	-2, 2848,
	-1, 2868,
	195, 2314,
	-2, 2649,
	-1, 2869,
	195, 2315,
	-2, 2527,
	-1, 2870,
	195, 2316,
	-2, 2587,
	-1, 2871,
	195, 2317,
	-2, 2634,
	-1, 2872,
	195, 2318,
	-2, 2767,
	-1, 2873,
	195, 2319,
	-2, 2109,
	-1, 2945,
	1, 1809,
	2, 1809,
	110, 1809,
	156, 1809,
	176, 1809,
	189, 1809,
	196, 1809,
	214, 1809,
	217, 1809,
	245, 1809,
	250, 1809,
	261, 1809,
	279, 1809,
	283, 1809,
	322, 1809,
	356, 1809,
	361, 1809,
	367, 1809,
	446, 1809,
	450, 1809,
	556, 1809,
	568, 1809,
	586, 1809,
	587, 1809,
	588, 1809,
	598, 1809,
	625, 1809,
	627, 1809,
	629, 1809,
	631, 1809,
	-2, 1808,
	-1, 2958,
	626, 2422,
	-2, 2436,
	-1, 2960,
	1, 347,
	586, 347,
	-2, 1702,
	-1, 2990,
	626, 1948,
	-2, 1938,
	-1, 3202,
	1, 1410,
	441, 1365,
	480, 1365,
	601, 1365,
	625, 1410,
	627, 1410,
	629, 1410,
	-2, 1702,
	-1, 3379,
	362, 1746,
	-2, 2887,
	-1, 3380,
	362, 1747,
	-2, 2751,
	-1, 3384,
	456, 2378,
	457, 2378,
	-2, 2107,
	-1, 3385,
	456, 2382,
	457, 2382,
	-2, 2108,
	-1, 3386,
	456, 2379,
	457, 2379,
	-2, 2107,
	-1, 3387,
	456, 2383,
	457, 2383,
	-2, 2108,
	-1, 3400,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	228, 0,
	231, 0,
	282, 0,
	486, 0,
	595, 0,
	609, 0,
	-2, 2032,
	-1, 3401,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	228, 0,
	231, 0,
	282, 0,
	486, 0,
	595, 0,
	609, 0,
	-2, 2036,
	-1, 3407,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	228, 0,
	231, 0,
	282, 0,
	486, 0,
	595, 0,
	609, 0,
	-2, 2038,
	-1, 3634,
	1, 737,
	625, 737,
	627, 737,
	629, 737,
	-2, 1562,
	-1, 3826,
	45, 2413,
	-2, 1148,
	-1, 3831,
	1, 1410,
	625, 1410,
	627, 1410,
	629, 1410,
	-2, 1702,
	-1, 3937,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	228, 0,
	231, 0,
	282, 0,
	486, 0,
	595, 0,
	609, 0,
	-2, 2040,
	-1, 3944,
	255, 0,
	257, 0,
	345, 0,
	-2, 2059,
	-1, 4012,
	14, 0,
	15, 0,
	16, 0,
	606, 0,
	607, 0,
	608, 0,
	-2, 2088,
	-1, 4013,
	14, 0,
	15, 0,
	16, 0,
	606, 0,
	607, 0,
	608, 0,
	-2, 2089,
	-1, 4014,
	14, 0,
	15, 0,
	16, 0,
	606, 0,
	607, 0,
	608, 0,
	-2, 2090,
	-1, 4018,
	14, 0,
	15, 0,
	16, 0,
	606, 0,
	607, 0,
	608, 0,
	-2, 2094,
	-1, 4019,
	14, 0,
	15, 0,
	16, 0,
	606, 0,
	607, 0,
	608, 0,
	-2, 2095,
	-1, 4020,
	14, 0,
	15, 0,
	16, 0,
	606, 0,
	607, 0,
	608, 0,
	-2, 2096,
	-1, 4068,
	626, 2423,
	-2, 2437,
	-1, 4274,
	628, 3004,
	-2, 1628,
	-1, 4330,
	255, 0,
	257, 0,
	345, 0,
	-2, 2060,
	-1, 4333,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	228, 0,
	231, 0,
	282, 0,
	486, 0,
	595, 0,
	609, 0,
	-2, 2063,
	-1, 4334,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	228, 0,
	231, 0,
	282, 0,
	486, 0,
	595, 0,
	609, 0,
	-2, 2065,
	-1, 4448,
	628, 2438,
	-2, 1445,
	-1, 4609,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	228, 0,
	231, 0,
	282, 0,
	486, 0,
	595, 0,
	609, 0,
	-2, 2064,
	-1, 4610,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	228, 0,
	231, 0,
	282, 0,
	486, 0,
	595, 0,
	609, 0,
	-2, 2066,
	-1, 4621,
	255, 0,
	-2, 2099,
	-1, 4809,
	255, 0,
	-2, 2100,
	-1, 5029,
	53, 0,
	228, 0,
	282, 0,
	486, 0,
	595, 0,
	609, 0,
	-2, 2851,
}

const sqlPrivate = 57344

const sqlLast = 146130

var sqlAct = [...]int{
	286, 3275, 4964, 5220, 5147, 3538, 4849, 5028, 1415, 3126,
	4963, 5091, 3156, 5075, 4678, 4857, 5015, 5041, 5161, 4997,
	3061, 1640, 4901, 4920, 4978, 4975, 3814, 4954, 5042, 1412,
	2397, 5043, 4313, 4778, 4660, 5100, 4755, 2475, 2286, 4742,
	4078, 4726, 3977, 5039, 1471, 5027, 1339, 4568, 4813, 4563,
	4557, 4524, 4497, 4683, 1407, 3929, 1760, 3245, 2635, 3660,
	4630, 1328, 4598, 3815, 2487, 4548, 1158, 1610, 4258, 4266,
	3848, 4550, 4761, 745, 4886, 3393, 1405, 4182, 882, 4445,
	4425, 3663, 2485, 2898, 3062, 2704, 3842, 4573, 3799, 2195,
	1906, 3297, 4232, 2448, 3788, 4213, 2643, 4215, 2935, 817,
	3666, 3723, 2138, 2295, 3804, 4626, 882, 1149, 1490, 3876,
	3264, 2208, 3234, 3261, 3878, 3648, 3806, 3803, 3650, 3781,
	2483, 2636, 1398, 3780, 3259, 3649, 4071, 3544, 3584, 756,
	2972, 3561, 4369, 3553, 1583, 2069, 4312, 957, 4, 2100,
	3521, 3292, 1758, 3542, 961, 3276, 3209, 5076, 1215, 1211,
	3141, 2386, 3591, 2373, 1157, 189, 3687, 879, 4038, 3157,
	2640, 2307, 2938, 2384, 2139, 2323, 4444, 4814, 2005, 3520,
	280, 1975, 2044, 3377, 2717, 952, 1698, 3291, 813, 279,
	1410, 2385, 877, 3238, 2782, 1319, 2940, 3171, 2371, 2363,
	2344, 2784, 1804, 3246, 2351, 1454, 1469, 1208, 2274, 2278,
	2206, 2918, 1894, 1213, 2773, 2937, 2701, 2624, 1473, 2607,
	790, 2070, 2605, 1735, 2118, 2973, 3269, 1701, 2435, 278,
	883, 1384, 1612, 2366, 2434, 3086, 2089, 3087, 884, 1032,
	1441, 4921, 2776, 3047, 1322, 826, 3807, 732, 2927, 3001,
	2086, 754, 2079, 2862, 2754, 1989, 2908, 1176, 888, 2039,
	1336, 1301, 189, 2828, 199, 1907, 200, 891, 1908, 1258,
	1395, 2606, 798, 978, 1839, 2608, 2394, 2895, 1206, 1824,
	1634, 114, 809, 1726, 1733, 118, 888, 104, 2375, 1204,
	2461, 1318, 1591, 5092, 2629, 891, 5148, 872, 773, 1189,
	749, 45, 44, 746, 933, 758, 1466, 42, 1324, 33,
	31, 29, 934, 1299, 1893, 829, 833, 1913, 3430, 4052,
	1646, 4053, 1053, 3424, 2197, 2197, 3540, 5231, 2197, 2197,
	2197, 2917, 1921, 1922, 2197, 1954, 1955, 1956, 1965, 1966,
	1967, 5223, 5211, 5210, 5180, 3761, 2917, 2917, 4682, 4079,
	1153, 3761, 1153, 1921, 1922, 1958, 1952, 5178, 5121, 5077,
	2406, 4682, 2406, 5078, 1924, 5067, 5065, 1210, 5062, 2917,
	2917, 3857, 5063, 5037, 1971, 5059, 5025, 1952, 5024, 5060,
	2406, 4650, 2406, 4647, 5023, 1924, 5013, 1316, 3302, 5011,
	4682, 1977, 2218, 4682, 5006, 5001, 4644, 5000, 4764, 4682,
	1923, 4682, 4973, 1921, 1922, 3858, 4682, 4396, 2218, 1331,
	4940, 1943, 1977, 4933, 2981, 4932, 3619, 2917, 4925, 2917,
	1940, 1923, 2406, 3616, 4900, 4897, 4879, 1952, 2406, 4682,
	4514, 1450, 4811, 3601, 1450, 1924, 2981, 1142, 1302, 1302,
	4792, 4757, 4701, 4700, 4292, 4112, 2406, 2406, 4689, 4688,
	2218, 4681, 2406, 4682, 1133, 4682, 1132, 4637, 3003, 4611,
	3392, 2406, 1977, 2981, 2484, 4584, 4581, 4042, 4492, 3302,
	3761, 1923, 2917, 4472, 2917, 1187, 4332, 2917, 3491, 3492,
	2981, 4282, 1943, 1154, 4276, 3871, 4229, 3439, 3871, 2215,
	4230, 1940, 1305, 3440, 1306, 4941, 1921, 1922, 1946, 1947,
	1948, 1949, 4143, 4111, 3491, 3492, 4144, 4112, 1929, 4063,
	4061, 4045, 3961, 4064, 4062, 2917, 2406, 3957, 3870, 1148,
	1952, 2917, 3871, 3537, 2977, 4815, 2215, 2917, 1924, 1929,
	3532, 3531, 3482, 3480, 2917, 2917, 3483, 3481, 3472, 1334,
	3470, 3441, 3473, 1354, 2917, 2917, 3301, 4326, 4806, 1962,
	3302, 2218, 1972, 3286, 3285, 1977, 1303, 2471, 2471, 1951,
	1953, 3026, 2980, 4794, 1923, 2917, 2981, 2218, 4764, 1946,
	1947, 1948, 1949, 2970, 3302, 1943, 1968, 2917, 1969, 1929,
	1951, 1953, 4042, 2962, 1940, 1938, 1939, 2406, 2916, 2909,
	2470, 4561, 2917, 2910, 2471, 4514, 1362, 2215, 4473, 4292,
	4231, 247, 3133, 1960, 2300, 3046, 2232, 2196, 2212, 3240,
	1355, 2405, 3151, 3037, 2917, 76, 3429, 1330, 1944, 2065,
	1633, 4161, 3932, 2730, 2731, 2732, 2749, 2750, 2751, 3904,
	1951, 1953, 2087, 77, 2356, 3859, 1355, 1806, 2954, 1944,
	3941, 2953, 2952, 2951, 2752, 2950, 1307, 1304, 1141, 1140,
	82, 249, 1139, 1138, 3497, 3860, 1938, 1939, 1137, 247,
	1136, 1135, 1946, 1947, 1948, 1949, 1970, 1131, 1130, 1129,
	1128, 1127, 1929, 1126, 1125, 1639, 1124, 3348, 4387, 1977,
	3497, 1660, 1123, 1122, 1121, 1120, 2548, 1959, 1119, 1944,
	1118, 91, 1654, 1117, 1116, 1115, 1114, 1113, 1974, 2742,
	2198, 2198, 248, 1112, 2198, 2198, 2198, 1094, 2738, 249,
	2198, 1030, 1029, 1028, 1770, 1027, 1026, 241, 1025, 1974,
	1024, 1023, 1022, 1951, 1953, 1332, 242, 1021, 1830, 1020,
	1019, 1018, 959, 1017, 1016, 1015, 1014, 1013, 1012, 1011,
	1010, 1009, 1008, 1007, 1006, 50, 1005, 113, 1004, 1938,
	1939, 1003, 1002, 97, 110, 201, 1950, 1001, 1639, 1000,
	248, 999, 1751, 998, 3507, 997, 996, 995, 994, 1974,
	983, 982, 981, 976, 975, 968, 967, 966, 951, 1945,
	950, 907, 1944, 1647, 906, 905, 2743, 2744, 2745, 2746,
	3507, 3491, 3492, 904, 895, 894, 2737, 893, 892, 854,
	1945, 1417, 1213, 853, 824, 823, 822, 1963, 804, 2215,
	274, 273, 272, 201, 271, 98, 4797, 2215, 270, 2215,
	269, 268, 1921, 1922, 267, 266, 265, 1950, 264, 1213,
	1213, 1213, 263, 262, 261, 97, 260, 259, 258, 4344,
	1976, 3857, 257, 256, 1974, 255, 1952, 76, 254, 253,
	1945, 252, 1355, 251, 1924, 250, 3054, 4088, 4057, 2215,
	3872, 1976, 1974, 3587, 3452, 77, 3435, 3426, 1493, 3535,
	1974, 1774, 1213, 2747, 2748, 3328, 3219, 3254, 1213, 1615,
	1213, 1977, 82, 1417, 2985, 2811, 2809, 2959, 2218, 3013,
	1923, 1624, 2196, 2215, 2212, 1458, 1459, 1460, 2600, 2944,
	2795, 1648, 2597, 1659, 2259, 1445, 2740, 2793, 1213, 2217,
	1213, 1976, 1213, 3536, 1653, 1648, 1961, 2090, 2113, 1615,
	1950, 2016, 1888, 91, 1642, 3508, 1462, 1935, 1936, 1942,
	1964, 1941, 1937, 1338, 1934, 1932, 1933, 1925, 1926, 1927,
	1928, 1930, 1931, 1945, 5052, 1417, 5051, 1920, 4354, 1648,
	1601, 3508, 4353, 1703, 4575, 1934, 1932, 1933, 1925, 1926,
	1927, 1928, 1930, 1931, 959, 1615, 1491, 3497, 102, 4795,
	1648, 5048, 1615, 5026, 5010, 4905, 3054, 50, 4803, 113,
	4673, 1213, 4625, 1213, 1596, 97, 110, 4818, 1615, 4582,
	4560, 4402, 1755, 1588, 4367, 4366, 4360, 1213, 1929, 1213,
	1437, 4359, 1941, 1937, 1976, 1934, 1932, 1933, 1925, 1926,
	1927, 1928, 1930, 1931, 1402, 2047, 1389, 1392, 1406, 2014,
	4358, 4351, 2046, 1707, 1710, 1439, 197, 105, 2047, 2909,
	109, 1423, 1355, 4149, 4350, 2046, 1637, 4348, 4343, 4340,
	2007, 4339, 4228, 4092, 4091, 1476, 1477, 98, 1615, 1951,
	1953, 2050, 1486, 4090, 1580, 1585, 4242, 247, 4067, 3491,
	3492, 4033, 1622, 4032, 2045, 960, 888, 2741, 1213, 4031,
	157, 1213, 1713, 3953, 3948, 891, 3582, 3507, 3528, 1156,
	1465, 3500, 3501, 3493, 3494, 3495, 3496, 3498, 3499, 1586,
	3519, 1431, 1600, 1406, 1315, 1941, 1937, 3490, 1934, 1932,
	1933, 1925, 1926, 1927, 1928, 1930, 1931, 249, 1944, 3493,
	3494, 3495, 3496, 3498, 3499, 3487, 1636, 3486, 3484, 2779,
	189, 189, 3479, 1696, 1635, 3491, 3492, 1618, 1976, 3478,
	3477, 3474, 2009, 2451, 162, 3471, 3256, 3491, 3492, 247,
	4159, 1738, 1740, 1468, 3272, 1775, 3451, 1478, 1479, 3434,
	202, 247, 157, 3052, 3427, 3425, 247, 1974, 248, 3287,
	3491, 3492, 247, 3509, 3510, 3511, 1406, 1406, 2945, 2766,
	1920, 4577, 2007, 241, 1213, 1213, 1213, 1213, 1213, 1213,
	1213, 1213, 242, 1919, 247, 2413, 198, 1736, 1974, 249,
	2411, 1445, 3051, 5226, 1445, 5169, 3533, 5168, 247, 5090,
	102, 249, 5088, 1340, 3506, 3979, 249, 1213, 2008, 4965,
	2006, 201, 249, 1213, 2780, 2727, 2728, 2729, 2753, 2739,
	2733, 4243, 2735, 2736, 2734, 2721, 2722, 2723, 2724, 2725,
	2726, 4884, 247, 4869, 249, 3497, 1154, 4865, 3508, 3506,
	248, 1729, 4864, 4863, 4843, 4842, 4840, 4817, 249, 4816,
	1898, 4790, 248, 247, 2707, 241, 4776, 248, 197, 105,
	4773, 4772, 109, 248, 242, 1848, 4765, 241, 4753, 1945,
	4752, 4697, 241, 1780, 4668, 4623, 242, 4606, 241, 4605,
	4544, 242, 249, 1921, 1922, 248, 4540, 242, 4537, 247,
	4515, 1892, 1750, 201, 4386, 4365, 2781, 960, 2778, 248,
	241, 3497, 157, 249, 4293, 201, 4147, 4146, 1769, 242,
	201, 1832, 3051, 3497, 241, 1924, 201, 4127, 4126, 1213,
	1213, 1213, 4124, 242, 4243, 1213, 3051, 4048, 4036, 3943,
	1976, 1994, 1336, 248, 1336, 3873, 3497, 3867, 201, 249,
	3834, 247, 2713, 3742, 1996, 3698, 3665, 3610, 241, 1493,
	3255, 1923, 201, 3456, 248, 3455, 3450, 242, 3416, 2067,
	3233, 1213, 1797, 3079, 882, 1417, 162, 2053, 3608, 241,
	2156, 882, 2116, 1417, 2052, 1417, 1833, 3579, 242, 2051,
	2048, 2040, 202, 1899, 2038, 2992, 201, 2991, 2956, 2949,
	248, 249, 2915, 2791, 2135, 3501, 3493, 3494, 3495, 3496,
	3498, 3499, 2185, 1993, 2187, 241, 2983, 201, 2076, 2112,
	2068, 3507, 2062, 4798, 242, 2061, 1895, 2060, 198, 2059,
	2058, 1903, 1133, 3507, 1132, 1902, 1933, 1925, 1926, 1927,
	1928, 1930, 1931, 2057, 2056, 1417, 4576, 4820, 2124, 2055,
	2054, 1213, 248, 1741, 2129, 2049, 3507, 2114, 2035, 2034,
	2033, 1897, 2032, 2031, 2030, 2073, 2074, 241, 2029, 1929,
	2028, 2097, 247, 2783, 2220, 1213, 242, 2123, 2027, 1916,
	1917, 2026, 2025, 1493, 2117, 2024, 2023, 2022, 1154, 2021,
	2020, 1331, 2009, 1331, 1995, 247, 1992, 1987, 1430, 2202,
	189, 1974, 2204, 1359, 1350, 201, 4819, 1302, 2209, 2289,
	1727, 247, 2211, 1974, 4547, 1921, 1922, 2214, 2250, 1732,
	2810, 2808, 249, 2041, 2042, 4398, 4336, 4087, 2150, 4060,
	4051, 2130, 3438, 4645, 2224, 2794, 1974, 1445, 2179, 3491,
	3492, 2257, 2792, 2947, 888, 249, 4400, 1924, 2223, 4086,
	2008, 888, 3606, 891, 1921, 1922, 1990, 3491, 3492, 247,
	891, 249, 2121, 3863, 2108, 4475, 1472, 3127, 1472, 5160,
	4873, 2098, 4866, 248, 4766, 4580, 4796, 4518, 2095, 4517,
	2088, 2260, 3508, 1923, 1455, 1600, 1924, 1472, 241, 1470,
	1472, 1457, 4516, 4474, 3508, 2777, 248, 242, 4389, 4300,
	4299, 4298, 3701, 4297, 4296, 4295, 4294, 4113, 5044, 249,
	5117, 241, 248, 4055, 4672, 1154, 4054, 3508, 3875, 2353,
	242, 1334, 1923, 1334, 2066, 3874, 201, 241, 2994, 3765,
	2200, 5115, 1450, 3763, 3762, 1600, 242, 2107, 2106, 2153,
	2092, 5040, 3105, 2105, 2122, 2103, 2102, 2101, 2144, 3271,
	2015, 4762, 1615, 1615, 2334, 4173, 2090, 2226, 4246, 2227,
	248, 1456, 2030, 1493, 2047, 201, 2136, 2030, 1450, 3930,
	3732, 2046, 1890, 3476, 3475, 241, 3495, 3496, 3498, 3499,
	3398, 3667, 3090, 1453, 242, 4142, 1796, 1110, 2238, 4236,
	1849, 1929, 2018, 3169, 3817, 4107, 3816, 4108, 4835, 1330,
	2387, 1330, 2504, 1805, 4836, 2476, 4756, 2222, 2398, 2403,
	1450, 5073, 2330, 201, 2338, 3497, 4558, 3298, 4836, 3789,
	2348, 4504, 2264, 1806, 2265, 2388, 1451, 4250, 1314, 4225,
	2452, 4179, 4170, 4627, 2272, 2273, 1111, 3502, 3500, 3501,
	3493, 3494, 3495, 3496, 3498, 3499, 4152, 3540, 3901, 3502,
	3500, 3501, 3493, 3494, 3495, 3496, 3498, 3499, 2253, 3632,
	1615, 2407, 1615, 2245, 1615, 3503, 3504, 3505, 2569, 2300,
	2481, 2419, 3502, 3500, 3501, 3493, 3494, 3495, 3496, 3498,
	3499, 1731, 1615, 1615, 3981, 3444, 2266, 2267, 3088, 3129,
	2774, 2294, 1451, 2270, 2271, 2340, 1615, 2306, 5049, 2990,
	2063, 2244, 2243, 2043, 3797, 1472, 2252, 1332, 1615, 1332,
	1615, 1615, 1615, 2445, 2333, 1706, 1629, 1426, 1388, 3148,
	5064, 5061, 3853, 4118, 888, 4692, 4858, 4664, 3145, 2390,
	2391, 3143, 1784, 891, 882, 2392, 4564, 4972, 3670, 2341,
	2328, 2298, 4137, 3268, 1763, 3772, 2503, 5152, 3636, 1447,
	5097, 5119, 2343, 2343, 5118, 2441, 1213, 4695, 4691, 2343,
	4670, 3924, 4192, 4721, 4461, 1673, 3027, 5222, 1108, 5050,
	1732, 2367, 2562, 4874, 1636, 4714, 4703, 1631, 3327, 1106,
	3211, 1974, 1635, 1847, 1104, 2458, 1102, 2446, 1099, 4507,
	4506, 4190, 2327, 2339, 1213, 2324, 946, 4189, 1090, 2347,
	1927, 1928, 1930, 1931, 4181, 1974, 4167, 4166, 3638, 4164,
	4163, 2479, 1681, 2508, 2377, 1447, 2376, 2377, 2239, 2376,
	2380, 2496, 3050, 2560, 2404, 2489, 4151, 1457, 2247, 3050,
	1213, 4110, 1213, 4191, 1452, 2466, 4109, 2779, 3048, 1213,
	2444, 3778, 2156, 2156, 1493, 3048, 1213, 1213, 1213, 1213,
	1213, 1213, 1213, 1213, 1213, 1213, 1213, 1213, 1213, 1213,
	1213, 1213, 1213, 1213, 1213, 1213, 1213, 1213, 1213, 1213,
	1213, 1213, 1213, 1213, 1213, 1213, 1213, 1213, 1213, 1213,
	1213, 1213, 1736, 1213, 1736, 1213, 1213, 1213, 1213, 2427,
	2468, 2533, 2455, 2368, 2426, 3607, 1448, 1456, 1457, 1846,
	1452, 2599, 2984, 1682, 888, 1449, 947, 2824, 2615, 2615,
	3777, 1213, 3734, 891, 2460, 1213, 1213, 3600, 2617, 1782,
	2604, 2495, 1729, 1213, 2463, 2464, 2463, 1213, 3700, 1213,
	1213, 1154, 2780, 1154, 2472, 1431, 2473, 1493, 3449, 3667,
	3448, 2823, 2644, 1213, 1213, 1213, 1213, 3730, 2249, 1213,
	1213, 1213, 1213, 1213, 1213, 1213, 1213, 2388, 4693, 2476,
	4665, 4440, 1448, 796, 5153, 796, 2645, 5098, 1456, 2613,
	2613, 1449, 3447, 3446, 3402, 1213, 1213, 1213, 1213, 1213,
	1213, 1213, 1213, 1213, 2064, 1213, 2248, 2512, 3167, 1213,
	2150, 2150, 1440, 3166, 2523, 2342, 2342, 4433, 2755, 2756,
	3150, 1336, 2342, 1828, 1845, 3139, 2641, 2642, 1493, 2299,
	2574, 3131, 2755, 2771, 2781, 3121, 2778, 1336, 3120, 3115,
	1925, 1926, 1927, 1928, 1930, 1931, 2556, 3114, 2578, 4459,
	4731, 2575, 1731, 1213, 1493, 2786, 3113, 4456, 2296, 2819,
	2628, 3095, 3094, 3055, 3493, 3494, 3495, 3496, 3498, 3499,
	1828, 2971, 3064, 4434, 2688, 1152, 2611, 1896, 2865, 2865,
	2879, 3265, 2755, 1632, 1931, 2899, 2901, 3499, 4407, 2590,
	3109, 2513, 2907, 2292, 1474, 1475, 1474, 1475, 5155, 2601,
	2603, 4476, 2616, 2609, 2602, 2719, 2576, 4417, 1133, 1450,
	2632, 1133, 1133, 2633, 2634, 1474, 1475, 2770, 1474, 1475,
	1777, 2153, 2153, 1798, 1719, 2297, 1718, 2974, 4604, 2520,
	2144, 2144, 2425, 2998, 1827, 2577, 2957, 3731, 1825, 1717,
	3092, 1716, 2774, 2975, 1677, 1451, 2614, 2614, 2924, 3902,
	2595, 2500, 2958, 1374, 4121, 2293, 2514, 1096, 2587, 1417,
	1417, 744, 1886, 1690, 2097, 3034, 2336, 3021, 3343, 1151,
	1331, 2703, 2821, 4416, 2715, 1450, 2997, 2822, 2932, 3305,
	2825, 1827, 2826, 2827, 1889, 2703, 1331, 2961, 739, 3022,
	3067, 1695, 1302, 2768, 3413, 5118, 1806, 3078, 3000, 5156,
	1493, 2783, 1859, 1826, 1154, 2589, 2567, 2078, 4453, 1806,
	1865, 3019, 2554, 2108, 1154, 2978, 3375, 5184, 1154, 5154,
	795, 2923, 795, 2612, 2612, 3411, 1794, 2711, 2517, 3016,
	3008, 5046, 189, 3147, 2709, 2511, 3012, 3635, 3390, 2874,
	949, 948, 1778, 2890, 2946, 2521, 2369, 2861, 2783, 2156,
	3023, 2996, 2903, 2931, 1445, 2936, 3024, 2905, 2942, 2943,
	2913, 2914, 2929, 2930, 2925, 4851, 1429, 3146, 1447, 4455,
	5164, 2095, 3356, 3015, 2986, 2378, 3144, 1901, 2300, 3142,
	3077, 2465, 3911, 2049, 1863, 4429, 1153, 4457, 3910, 3345,
	3970, 1406, 4430, 2082, 4826, 2381, 1844, 1493, 3038, 4148,
	1334, 4134, 1702, 4435, 4505, 4165, 3049, 4732, 1154, 4162,
	4095, 4082, 5158, 1615, 2379, 992, 1334, 3784, 1783, 3641,
	4730, 3776, 3728, 2777, 3056, 3149, 4728, 2993, 1100, 2370,
	1417, 2561, 3160, 2254, 2255, 797, 3018, 797, 3202, 1100,
	1406, 1144, 2085, 1082, 1100, 4432, 1101, 3112, 1100, 2308,
	2298, 1213, 1213, 1452, 1213, 2041, 2042, 1700, 2080, 3025,
	851, 3007, 3093, 4436, 3053, 3010, 3002, 3011, 1146, 3017,
	3408, 3041, 1406, 1406, 2312, 4727, 2083, 3389, 1330, 882,
	2699, 1417, 2559, 5186, 2410, 2409, 1841, 5130, 3359, 3244,
	2596, 5139, 4853, 3110, 1330, 3237, 5138, 2150, 2969, 2325,
	3066, 3409, 3028, 2881, 4729, 3414, 5105, 3140, 3097, 4318,
	4603, 2697, 1615, 3098, 5047, 1448, 1145, 3082, 4317, 2081,
	4451, 4937, 3091, 4132, 1449, 1615, 3279, 1615, 3905, 3288,
	4205, 3096, 2309, 1615, 3717, 3252, 3382, 3383, 4454, 3293,
	2586, 3785, 3042, 3043, 3111, 1615, 3044, 3045, 3119, 3103,
	3104, 3106, 3107, 3108, 3069, 3072, 3059, 2783, 3555, 3214,
	944, 3850, 943, 1083, 3216, 3161, 3352, 1679, 2300, 1417,
	4949, 1417, 3308, 3309, 4655, 1150, 849, 2331, 1586, 3248,
	3782, 3299, 3888, 3315, 3316, 3317, 1332, 2588, 3967, 3125,
	4206, 3168, 3851, 1213, 3718, 3886, 3203, 3204, 3329, 4431,
	3330, 3118, 1332, 2197, 3123, 3879, 3128, 3130, 2153, 4458,
	3040, 2383, 3709, 3137, 3654, 1600, 888, 2144, 5157, 1162,
	2354, 2326, 5045, 3117, 3116, 891, 3331, 2519, 3358, 3153,
	5162, 4859, 3154, 3155, 4204, 5017, 3242, 5018, 3716, 1344,
	1860, 4441, 4442, 1676, 2313, 4881, 3212, 2084, 740, 888,
	3303, 896, 1373, 2685, 3065, 1346, 2693, 3310, 891, 3311,
	3355, 1213, 3290, 1702, 2354, 189, 1636, 1213, 1213, 3300,
	3968, 2382, 3710, 3325, 3217, 3306, 3745, 3850, 903, 3296,
	2694, 3295, 1341, 3324, 3231, 3682, 3283, 2695, 4452, 3637,
	3890, 2700, 1857, 794, 3281, 3241, 1807, 1630, 3334, 3410,
	3336, 1357, 3338, 4534, 3206, 2337, 5104, 3881, 1450, 3412,
	3050, 2314, 2315, 1088, 1087, 3030, 3708, 4935, 2299, 2320,
	2350, 3274, 3880, 1213, 1213, 3284, 3070, 2036, 1347, 1213,
	3604, 2303, 4600, 741, 1736, 2335, 2078, 2310, 3032, 3361,
	1779, 3363, 1213, 1213, 3681, 3404, 5163, 2349, 1213, 1213,
	3282, 3322, 2279, 3364, 1213, 1348, 3366, 2280, 3263, 2702,
	1084, 3769, 4936, 2555, 3207, 3554, 2354, 3333, 4314, 3335,
	3357, 3337, 4852, 3339, 3340, 3212, 3033, 1097, 3889, 2321,
	2082, 1600, 2345, 5165, 742, 2311, 743, 1861, 3332, 2290,
	2960, 2304, 1406, 4616, 5128, 2710, 3349, 3031, 1345, 1213,
	1213, 1213, 4983, 850, 1858, 1213, 1793, 1795, 3205, 2516,
	1864, 4895, 3405, 993, 2297, 1213, 2510, 5182, 3783, 3877,
	2357, 4486, 2082, 2319, 763, 2364, 3370, 3437, 2683, 2085,
	3655, 2686, 1213, 3688, 2378, 2302, 1986, 2783, 3381, 3454,
	2765, 4218, 2928, 2941, 2346, 2926, 1428, 1600, 5187, 1600,
	2322, 4216, 5083, 3372, 852, 3371, 4133, 1900, 848, 1153,
	2335, 3983, 5084, 2083, 5171, 4546, 4887, 2279, 3376, 2628,
	4307, 2085, 2280, 2379, 2281, 4599, 4551, 2337, 4642, 4510,
	4888, 4083, 2682, 3432, 3433, 2696, 1862, 2080, 3436, 3690,
	1085, 1363, 2285, 3391, 1361, 2698, 4552, 4319, 1812, 3926,
	3373, 4902, 3124, 4989, 3428, 2083, 4241, 4919, 897, 898,
	2332, 2316, 4775, 4509, 4889, 2334, 1143, 5103, 1086, 1911,
	4508, 4264, 3838, 3618, 1213, 1213, 1213, 1213, 2968, 2433,
	2075, 4535, 3403, 1213, 1213, 1213, 4220, 1360, 1213, 984,
	1353, 731, 2358, 3887, 3882, 3883, 3884, 3885, 2081, 4722,
	1213, 1336, 1493, 2566, 2329, 4315, 1213, 3689, 1213, 3547,
	3548, 2631, 1910, 969, 4363, 2301, 985, 1336, 4219, 2282,
	2287, 2240, 3592, 1089, 5192, 1905, 4784, 4690, 2237, 2198,
	3661, 4891, 3891, 4833, 4265, 1493, 4185, 4168, 2336, 2281,
	974, 4119, 2317, 4117, 4022, 3839, 3830, 1336, 3657, 1910,
	1493, 3253, 3247, 3235, 4218, 4890, 2459, 2285, 4073, 2453,
	2447, 2439, 1417, 2418, 4216, 2417, 3164, 3443, 3966, 1154,
	4601, 3530, 2156, 4892, 1670, 1342, 1493, 3572, 4903, 4769,
	4103, 1365, 3071, 4037, 2084, 4955, 1417, 803, 2621, 3549,
	3927, 3599, 3054, 4922, 1417, 2568, 2919, 2233, 1910, 4267,
	3546, 4569, 3620, 3232, 2283, 2235, 40, 3099, 3585, 900,
	899, 1376, 4748, 4074, 4746, 3614, 1213, 4077, 4667, 1909,
	3673, 3669, 3668, 3396, 3374, 2333, 2084, 2501, 1213, 4050,
	1343, 3552, 2922, 3575, 2282, 2287, 2684, 3551, 1725, 2289,
	4075, 2493, 4072, 2482, 3557, 2415, 1417, 4320, 3588, 4220,
	1331, 2236, 2156, 3694, 3656, 3586, 1909, 2290, 3645, 3646,
	1829, 2967, 3563, 3559, 2966, 2965, 1331, 5082, 4224, 1213,
	4549, 1835, 1834, 2921, 3609, 2289, 901, 902, 2920, 3581,
	3671, 4219, 3633, 3675, 2964, 1417, 2963, 3622, 3239, 1711,
	3624, 3625, 1911, 3706, 3639, 3628, 1331, 3629, 4217, 3630,
	1445, 3578, 3590, 1712, 1417, 1909, 1417, 3594, 3595, 3596,
	3597, 3541, 3720, 3692, 3722, 3626, 3571, 3556, 2288, 2283,
	2150, 2361, 1213, 1213, 1986, 4364, 2353, 3558, 3733, 1911,
	1493, 2622, 3570, 2353, 1151, 4321, 3605, 4679, 3573, 3574,
	2263, 1417, 3672, 5191, 4023, 3677, 986, 987, 3679, 3756,
	3525, 3526, 3527, 3658, 3748, 4024, 3750, 3693, 1417, 3754,
	4846, 3564, 3576, 3760, 3577, 4525, 3767, 3075, 2277, 1723,
	970, 971, 2290, 3611, 3612, 991, 3613, 4237, 4214, 3707,
	1334, 2359, 4904, 4768, 4104, 4125, 3100, 3101, 3685, 2457,
	1615, 3792, 5125, 4750, 3703, 2374, 1334, 4114, 4653, 4651,
	2150, 842, 3210, 1417, 1615, 3627, 1615, 1813, 3898, 3726,
	1493, 3617, 3602, 3562, 3569, 3304, 3664, 882, 1615, 3215,
	3634, 3623, 3213, 1600, 1600, 2360, 1334, 2486, 2275, 2387,
	1615, 2153, 3786, 2288, 3729, 4893, 3642, 843, 1787, 3721,
	2144, 4894, 1417, 4961, 3802, 3746, 4680, 4847, 2284, 3568,
	3831, 4662, 4076, 4675, 4674, 4411, 4969, 3653, 1330, 1336,
	3787, 4217, 3790, 3846, 284, 3844, 3822, 3593, 4749, 4410,
	4952, 3691, 2276, 4370, 1330, 4039, 3699, 2790, 4393, 1882,
	3743, 1615, 3293, 4991, 802, 3829, 2582, 5129, 1724, 5127,
	3712, 3293, 3713, 1615, 3715, 1615, 3714, 4643, 3705, 5066,
	4663, 4877, 1600, 4867, 1330, 4649, 2789, 4622, 3588, 4404,
	4362, 2153, 4223, 3522, 3773, 3866, 3942, 3719, 3738, 1884,
	2144, 3744, 3899, 3896, 2444, 3837, 3735, 3615, 3485, 4734,
	1881, 3757, 1879, 1853, 1851, 3855, 4962, 3415, 3119, 1823,
	4848, 3764, 3903, 1821, 3236, 2262, 1493, 3138, 3768, 1493,
	3132, 988, 989, 3089, 3755, 1819, 3774, 1817, 1815, 3565,
	3566, 3567, 2558, 2284, 3914, 4115, 1332, 1809, 1803, 1801,
	1721, 3766, 2122, 2995, 3775, 972, 973, 2591, 3840, 3845,
	2492, 2477, 1332, 1213, 3779, 3894, 2115, 888, 2111, 1213,
	1213, 1885, 1762, 1213, 1213, 1213, 891, 1213, 3097, 3794,
	2525, 2372, 3847, 4409, 3523, 3922, 1213, 2156, 1331, 2396,
	3827, 3892, 1332, 3921, 3826, 1213, 3825, 3897, 3913, 1722,
	1213, 1905, 3347, 3346, 3313, 990, 1493, 2610, 1840, 5038,
	189, 189, 2528, 2438, 2416, 1213, 2186, 3895, 2184, 3852,
	2019, 1776, 1694, 1493, 3916, 1298, 4487, 1491, 3861, 4172,
	3854, 3864, 3865, 2156, 2156, 1213, 1213, 3919, 1213, 1213,
	1213, 3920, 4171, 4491, 3747, 4471, 4951, 1175, 1406, 3917,
	4567, 4496, 4484, 2584, 4422, 4421, 1213, 1098, 3923, 2583,
	1213, 4263, 2156, 2156, 1213, 1213, 1213, 1213, 1213, 1213,
	1213, 1213, 1213, 1213, 1213, 1213, 1213, 1213, 1213, 1213,
	1213, 1213, 1213, 1213, 3928, 1213, 4393, 4254, 4188, 3945,
	4169, 4140, 1883, 1213, 1213, 2156, 3995, 3907, 3996, 3908,
	1213, 3909, 2402, 1880, 3959, 1878, 1852, 1850, 4138, 3955,
	3956, 1213, 1822, 1154, 4116, 3833, 1820, 1781, 1334, 1082,
	3925, 3975, 1336, 1336, 3828, 3818, 1213, 3266, 1818, 2557,
	1816, 1814, 3258, 3251, 3243, 2150, 3228, 1082, 3227, 3208,
	1808, 1802, 1800, 1720, 1146, 3014, 1914, 3009, 2414, 1600,
	2412, 2389, 2355, 2318, 2305, 2291, 2219, 2216, 1493, 2213,
	2210, 2205, 1146, 2203, 2199, 4069, 2190, 2524, 3952, 3950,
	1171, 1417, 1417, 5101, 4562, 3963, 2395, 3843, 1311, 3962,
	5096, 2150, 2150, 4034, 5022, 2128, 1417, 1417, 4056, 882,
	1417, 3394, 3978, 3985, 3758, 5119, 1330, 2641, 3986, 2364,
	4080, 4081, 3969, 3971, 3972, 1312, 2241, 4845, 3367, 1213,
	2150, 2150, 3973, 3365, 4551, 4093, 4094, 3993, 3201, 4100,
	2594, 3994, 4000, 1103, 1105, 1107, 2641, 4001, 3998, 5003,
	4913, 4026, 4583, 4041, 4552, 3992, 1213, 2229, 2230, 1083,
	2258, 4035, 4503, 2150, 4408, 3294, 2153, 3640, 1675, 4046,
	4047, 3050, 4786, 3076, 4779, 2144, 4068, 1083, 189, 4030,
	1915, 4027, 3050, 4275, 5002, 2300, 2515, 3048, 2592, 1213,
	1213, 1331, 1331, 2456, 1876, 1877, 4043, 4044, 3073, 1397,
	1396, 2552, 2547, 4101, 2522, 4462, 4498, 4102, 3165, 1145,
	3395, 1799, 2153, 2153, 3080, 1467, 5113, 1921, 1922, 1921,
	1922, 2144, 2144, 4805, 1332, 1213, 1213, 4677, 4371, 4058,
	4349, 3686, 3081, 1213, 3102, 2593, 3759, 1918, 4120, 1313,
	1424, 2153, 2153, 1364, 1464, 4184, 275, 5074, 3081, 1924,
	2144, 2144, 3226, 1615, 1615, 4139, 1615, 4141, 4251, 2440,
	1615, 1435, 3134, 1615, 3145, 3143, 4096, 3152, 1417, 4183,
	3083, 1856, 4153, 4059, 2153, 4960, 4202, 3136, 4942, 888,
	4912, 3085, 1397, 2144, 2228, 1923, 834, 1923, 891, 1397,
	4157, 3135, 4089, 2156, 728, 3084, 4158, 4160, 4906, 1422,
	4844, 4770, 4741, 4654, 4261, 4253, 4240, 4066, 3832, 1088,
	1087, 3273, 4196, 2906, 2225, 4186, 4180, 2137, 5159, 4993,
	4676, 1334, 1334, 3122, 4994, 4174, 1628, 1088, 1087, 4210,
	4187, 4150, 1627, 4145, 1621, 1615, 1147, 3603, 2374, 5190,
	4908, 1213, 1786, 4268, 1639, 5132, 4207, 4208, 1785, 1336,
	1213, 1638, 4277, 3491, 3492, 1639, 1084, 4233, 4993, 1615,
	1921, 1922, 4203, 4994, 1615, 1615, 1615, 3097, 3279, 4341,
	4283, 2269, 3036, 2785, 1084, 4085, 4222, 2268, 3035, 3350,
	2820, 4226, 3293, 2269, 2268, 1855, 4260, 1615, 1854, 1615,
	4771, 4715, 4247, 4500, 4495, 1493, 4494, 4285, 4212, 1330,
	1330, 4221, 4269, 4337, 4311, 1645, 4084, 1652, 3161, 1658,
	4272, 4193, 3974, 1221, 3752, 3749, 4239, 4257, 3353, 2013,
	2012, 3369, 4211, 1493, 4235, 2598, 1213, 1213, 4289, 5175,
	5140, 4200, 1213, 1213, 2156, 5008, 4946, 1213, 1213, 4945,
	1213, 2150, 4944, 4303, 4271, 1213, 4876, 4875, 4822, 4744,
	4707, 4248, 4646, 4252, 4640, 4542, 1213, 3664, 1406, 4522,
	282, 282, 282, 4460, 734, 735, 4399, 750, 734, 750,
	761, 4288, 1213, 801, 4301, 4281, 4273, 821, 1749, 4304,
	1754, 4201, 828, 828, 828, 4255, 1085, 4270, 4227, 4136,
	4128, 282, 4279, 4278, 1768, 3836, 1773, 4322, 1331, 3835,
	3678, 3621, 3354, 4287, 1085, 4286, 4302, 1332, 1332, 3344,
	3321, 3320, 965, 3319, 1086, 3318, 3257, 3230, 3229, 282,
	3074, 3005, 2999, 4335, 2988, 2987, 2976, 2714, 2585, 2553,
	2546, 4305, 1086, 1336, 2545, 2544, 4331, 2543, 2444, 2542,
	2454, 1336, 2428, 2424, 2423, 1493, 1493, 4316, 1493, 2422,
	2421, 2420, 2153, 2193, 2192, 1336, 2191, 2189, 2127, 2126,
	4376, 2144, 1831, 1875, 1874, 1810, 1615, 1615, 1689, 1089,
	1688, 1687, 1686, 4323, 1685, 1684, 1683, 1678, 1674, 1493,
	1672, 1671, 2150, 1175, 1175, 1175, 1605, 1089, 1604, 1603,
	1484, 1483, 1482, 1481, 1480, 4310, 1427, 1383, 1382, 1381,
	1380, 1379, 1378, 1377, 1213, 1375, 1370, 1369, 1368, 1367,
	1366, 4394, 4395, 958, 8, 1336, 3585, 1336, 1293, 2231,
	4412, 4413, 1577, 1109, 1095, 4850, 4439, 4397, 1334, 4361,
	4438, 4437, 2581, 96, 1680, 920, 90, 2362, 4135, 4450,
	4403, 1059, 1417, 4406, 4990, 4880, 4383, 1663, 928, 4463,
	4470, 4971, 1493, 4249, 1417, 734, 734, 1417, 4466, 4467,
	4372, 3680, 4479, 282, 4368, 4482, 4373, 4374, 4377, 1213,
	4415, 4375, 1493, 3170, 4378, 2527, 4446, 4401, 4446, 1811,
	2529, 189, 1331, 4385, 3580, 2948, 4934, 4388, 4345, 3453,
	1331, 4812, 4384, 2153, 4615, 4379, 4381, 2788, 2017, 4499,
	3534, 4501, 2144, 92, 1331, 1197, 1330, 4418, 1243, 4533,
	4532, 4420, 4464, 4423, 1615, 1615, 4122, 3805, 4405, 4529,
	4392, 4528, 2141, 2143, 1161, 1496, 5016, 2242, 4414, 5181,
	1203, 2256, 2251, 2989, 2864, 1220, 1217, 2145, 2147, 1219,
	1218, 4526, 1417, 2146, 2037, 1216, 2140, 4259, 4480, 3277,
	4553, 3862, 1730, 4465, 1493, 1728, 1061, 2246, 4502, 1615,
	2708, 4485, 2772, 4523, 1331, 3442, 1331, 4570, 2010, 1177,
	1199, 4521, 2769, 1358, 1188, 3560, 3539, 3849, 4520, 4065,
	2620, 938, 3488, 4449, 2775, 1615, 1615, 1615, 1615, 1615,
	1615, 1615, 4483, 1349, 4559, 2887, 2880, 4513, 2876, 3631,
	4554, 3267, 1891, 4629, 1988, 1493, 4519, 1406, 3278, 1887,
	1461, 1181, 1334, 2706, 1332, 2001, 3420, 1213, 1213, 1213,
	1334, 4512, 4493, 2630, 3856, 4511, 4571, 3583, 2982, 4996,
	3982, 3351, 2104, 2432, 1334, 1493, 1310, 4527, 4556, 4531,
	1213, 4539, 4588, 1213, 1213, 1309, 4592, 4545, 1356, 4543,
	1308, 4538, 4574, 1213, 4469, 4977, 2156, 4974, 2352, 4536,
	3800, 1213, 1213, 3801, 2234, 3029, 2718, 4478, 3819, 1193,
	4481, 4572, 1599, 2573, 3915, 4579, 3545, 2444, 1493, 4238,
	1615, 1691, 4684, 1205, 4594, 1973, 3197, 3196, 4839, 4607,
	1330, 1608, 1446, 4586, 1334, 1417, 1334, 4585, 1330, 1444,
	1443, 1406, 1442, 1491, 4565, 5149, 3163, 2365, 4131, 4130,
	4129, 246, 1330, 4602, 4595, 3388, 4596, 1493, 1912, 1904,
	243, 245, 244, 3684, 4648, 1213, 4070, 3589, 5072, 4155,
	3791, 1665, 24, 4613, 835, 836, 4612, 837, 1213, 3039,
	2261, 1463, 4106, 831, 23, 22, 21, 1213, 119, 43,
	20, 161, 2156, 159, 136, 156, 155, 128, 4624, 154,
	1620, 4618, 1213, 153, 152, 1213, 151, 150, 158, 4635,
	4636, 149, 1330, 148, 1330, 143, 4613, 147, 146, 1213,
	145, 2625, 1213, 144, 1744, 142, 140, 141, 135, 1493,
	139, 138, 4687, 137, 4657, 134, 4658, 1417, 1332, 133,
	1759, 132, 131, 130, 2150, 4724, 1332, 1615, 1615, 1615,
	4638, 129, 4639, 4659, 127, 2644, 4656, 2289, 160, 126,
	1332, 125, 4666, 203, 124, 123, 122, 121, 1336, 120,
	814, 4706, 815, 62, 61, 116, 117, 19, 41, 14,
	66, 4733, 67, 4698, 4699, 4720, 18, 13, 36, 95,
	108, 107, 4754, 4743, 106, 3802, 37, 103, 1493, 4747,
	1788, 1615, 4759, 4704, 4738, 4739, 35, 17, 16, 4780,
	15, 4708, 101, 100, 99, 34, 4709, 4716, 32, 4718,
	1332, 4719, 1332, 11, 9, 4717, 38, 2644, 4785, 4446,
	2099, 4725, 12, 4767, 5, 194, 1213, 1213, 193, 4710,
	2150, 4736, 4735, 1577, 196, 192, 4740, 195, 94, 4745,
	4789, 191, 4791, 1213, 2156, 2153, 4696, 190, 93, 4763,
	30, 10, 186, 4758, 2144, 4760, 4245, 2882, 4781, 85,
	188, 187, 185, 184, 4783, 1417, 183, 86, 1417, 83,
	1417, 1417, 182, 89, 181, 84, 88, 87, 28, 4782,
	1351, 6, 65, 7, 4597, 3900, 4788, 4787, 111, 1213,
	4574, 1213, 112, 1213, 4821, 39, 81, 4823, 80, 4824,
	4825, 79, 78, 1336, 27, 64, 26, 1331, 4793, 4801,
	4802, 178, 227, 226, 1372, 225, 1213, 4832, 1336, 224,
	223, 222, 221, 220, 4751, 215, 282, 219, 282, 282,
	217, 1401, 282, 1411, 216, 218, 4800, 214, 4777, 237,
	4723, 2153, 236, 4804, 1425, 230, 4810, 229, 235, 1175,
	2144, 4834, 821, 234, 233, 821, 232, 1577, 231, 4831,
	228, 240, 4830, 74, 4446, 213, 212, 211, 209, 4861,
	205, 208, 210, 1336, 1336, 4827, 207, 206, 828, 4446,
	4855, 204, 4854, 239, 238, 75, 176, 1213, 177, 4883,
	73, 175, 2150, 174, 1336, 173, 172, 1336, 171, 170,
	282, 1615, 282, 282, 1401, 169, 282, 282, 72, 180,
	179, 1615, 25, 4870, 2, 1411, 1, 1999, 4872, 0,
	0, 2004, 0, 0, 0, 0, 1213, 1213, 4878, 282,
	4871, 1641, 4885, 0, 4446, 4446, 1213, 1334, 4930, 0,
	4931, 0, 0, 0, 1600, 4896, 0, 1661, 0, 0,
	0, 4910, 1331, 4907, 1668, 4446, 4909, 0, 4446, 0,
	0, 4915, 0, 4763, 0, 0, 0, 1331, 4923, 0,
	0, 2549, 4924, 1693, 0, 4928, 1411, 4929, 4927, 0,
	282, 282, 4947, 1401, 4862, 4939, 1213, 1213, 4926, 0,
	1213, 0, 0, 0, 1615, 1417, 4943, 0, 1417, 0,
	0, 4948, 0, 2153, 821, 0, 282, 282, 0, 4938,
	4950, 0, 2144, 0, 0, 1330, 4976, 4979, 1756, 0,
	4958, 4959, 1331, 1331, 4987, 4998, 4995, 4988, 0, 1764,
	4967, 4966, 4992, 4999, 965, 0, 0, 1577, 0, 4898,
	4899, 4968, 0, 1331, 0, 4985, 1331, 0, 0, 0,
	4986, 5021, 5019, 4981, 0, 0, 1213, 1213, 1213, 0,
	4916, 1406, 0, 4918, 0, 0, 0, 0, 0, 4980,
	0, 0, 0, 4984, 0, 0, 0, 5004, 0, 0,
	0, 0, 1334, 0, 0, 5009, 0, 5012, 0, 0,
	0, 0, 5020, 1213, 0, 0, 0, 1334, 5053, 0,
	0, 0, 5033, 5034, 0, 5036, 0, 5054, 0, 5058,
	5035, 0, 0, 0, 0, 282, 0, 0, 0, 0,
	0, 0, 0, 1332, 0, 0, 5079, 2289, 0, 0,
	0, 0, 5081, 5055, 0, 0, 5080, 5056, 0, 282,
	5089, 0, 0, 0, 0, 0, 5093, 5087, 5069, 0,
	1213, 5071, 1334, 1334, 0, 0, 0, 5102, 1417, 0,
	1330, 0, 5086, 4743, 5085, 0, 0, 0, 0, 0,
	0, 0, 0, 1334, 5095, 1330, 1334, 0, 0, 5120,
	0, 5099, 0, 0, 5094, 0, 0, 5110, 0, 5108,
	5109, 0, 5116, 5111, 5114, 5068, 0, 0, 5070, 0,
	0, 0, 0, 0, 5122, 0, 5124, 5136, 5126, 1336,
	5135, 1336, 0, 4976, 5143, 0, 4979, 0, 5134, 4998,
	5145, 0, 0, 5112, 0, 5131, 0, 0, 0, 5142,
	1330, 1330, 5141, 0, 0, 5150, 0, 0, 0, 5151,
	0, 0, 5123, 0, 0, 0, 0, 0, 0, 0,
	1417, 1330, 0, 0, 1330, 0, 0, 0, 5166, 0,
	5167, 5133, 0, 5174, 0, 5137, 0, 5173, 1332, 0,
	4446, 0, 4446, 0, 5177, 0, 5185, 0, 0, 5170,
	1213, 1213, 0, 1332, 5176, 3417, 3418, 5188, 5183, 1213,
	1213, 0, 0, 0, 0, 3279, 0, 0, 5199, 0,
	0, 0, 5193, 0, 5197, 5204, 5208, 5205, 0, 0,
	5201, 5209, 5206, 0, 5203, 5207, 0, 0, 1577, 5172,
	3378, 0, 0, 0, 0, 3279, 5213, 1417, 5214, 5179,
	5215, 5212, 5218, 5221, 5219, 5217, 5216, 0, 1332, 1332,
	0, 0, 0, 0, 734, 0, 5224, 1213, 0, 0,
	0, 5228, 0, 5230, 5221, 5232, 3888, 5200, 1331, 1332,
	1331, 5202, 1332, 0, 0, 282, 0, 282, 0, 3886,
	0, 282, 5194, 5195, 0, 5144, 2279, 5146, 0, 3879,
	5196, 2280, 0, 0, 1641, 1401, 2119, 282, 0, 282,
	2125, 0, 0, 0, 0, 953, 2474, 282, 0, 750,
	5225, 2882, 2882, 0, 282, 0, 0, 0, 5227, 0,
	0, 1577, 0, 0, 2488, 2490, 0, 0, 0, 0,
	2194, 0, 0, 76, 0, 956, 955, 0, 2494, 0,
	5229, 0, 282, 0, 0, 0, 0, 0, 0, 282,
	2502, 77, 2505, 2506, 2507, 0, 3491, 3492, 0, 3509,
	3510, 3511, 0, 0, 0, 0, 0, 0, 82, 1921,
	1922, 0, 0, 0, 3890, 0, 4440, 3515, 3516, 3517,
	3518, 0, 821, 0, 0, 0, 0, 0, 0, 0,
	0, 3881, 1577, 1952, 0, 0, 0, 0, 1334, 0,
	1334, 1924, 0, 0, 0, 0, 3880, 0, 2281, 91,
	0, 0, 4433, 0, 0, 0, 4426, 0, 1577, 0,
	828, 0, 828, 1921, 1922, 0, 2285, 0, 1977, 0,
	0, 0, 828, 828, 4424, 3506, 0, 1923, 0, 0,
	0, 0, 0, 4428, 0, 0, 0, 1952, 1943, 0,
	959, 0, 0, 0, 0, 1924, 3220, 1940, 0, 3223,
	0, 3225, 3889, 50, 0, 113, 0, 0, 4434, 0,
	0, 97, 110, 0, 0, 0, 1330, 0, 1330, 0,
	0, 0, 1977, 0, 0, 0, 0, 0, 0, 0,
	0, 1923, 0, 2882, 2882, 2882, 2882, 0, 0, 0,
	0, 0, 1943, 2282, 2287, 0, 0, 0, 3270, 1198,
	115, 3270, 4427, 3936, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3497, 98, 0, 1946, 1947, 1948, 1949, 0,
	0, 0, 0, 0, 0, 1929, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1577, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3514, 0, 0, 0,
	0, 0, 0, 282, 1332, 0, 1332, 282, 2283, 1946,
	1947, 1948, 1949, 0, 3341, 0, 1951, 1953, 0, 1929,
	3513, 0, 0, 0, 0, 0, 0, 115, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2712, 0, 0,
	0, 0, 1938, 1939, 0, 0, 0, 3887, 3882, 3883,
	3884, 3885, 0, 1999, 0, 0, 0, 0, 0, 0,
	0, 2290, 3507, 0, 282, 0, 0, 0, 282, 0,
	1951, 1953, 0, 0, 282, 1944, 0, 0, 0, 0,
	282, 1577, 0, 0, 0, 0, 3891, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 282, 0, 282, 0,
	4429, 0, 734, 0, 282, 0, 102, 4430, 1620, 0,
	0, 0, 0, 0, 0, 1620, 821, 3643, 4435, 1134,
	965, 0, 2288, 0, 0, 0, 0, 0, 0, 1944,
	0, 1155, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1974, 0, 0, 0, 0, 0, 0, 0,
	282, 0, 1401, 282, 0, 1974, 0, 0, 0, 0,
	4432, 3644, 0, 76, 197, 105, 0, 821, 109, 0,
	0, 0, 0, 0, 282, 0, 0, 0, 4436, 1320,
	0, 77, 2526, 0, 0, 0, 0, 282, 282, 0,
	282, 0, 282, 0, 282, 247, 282, 0, 82, 0,
	0, 0, 0, 960, 0, 0, 0, 0, 157, 1974,
	0, 0, 0, 1950, 0, 0, 0, 0, 0, 0,
	0, 2563, 0, 3508, 2564, 0, 2565, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1945, 0, 0, 91,
	0, 282, 282, 282, 282, 249, 0, 0, 0, 0,
	0, 0, 2284, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1950, 0, 0,
	801, 0, 162, 0, 821, 0, 0, 0, 0, 0,
	959, 0, 0, 0, 0, 0, 0, 0, 202, 0,
	1945, 0, 0, 0, 0, 113, 248, 1976, 0, 0,
	0, 97, 110, 0, 0, 0, 0, 0, 0, 0,
	0, 241, 0, 0, 4431, 0, 0, 3938, 3939, 0,
	242, 0, 0, 0, 198, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 954,
	0, 1976, 0, 0, 0, 3162, 4441, 4442, 0, 0,
	0, 0, 0, 98, 0, 0, 0, 2720, 0, 0,
	0, 3503, 3504, 3505, 0, 0, 0, 0, 3502, 3500,
	3501, 3493, 3494, 3495, 3496, 3498, 3499, 0, 1941, 1937,
	0, 1934, 1932, 1933, 1925, 1926, 1927, 1928, 1930, 1931,
	0, 0, 0, 0, 0, 0, 0, 4002, 4003, 4004,
	4005, 4006, 4007, 4008, 4009, 4010, 4011, 4012, 4013, 4014,
	4015, 4016, 4017, 4018, 4019, 4020, 4021, 0, 4025, 0,
	0, 0, 0, 2882, 2882, 0, 0, 0, 0, 734,
	0, 0, 0, 0, 0, 1934, 1932, 1933, 1925, 1926,
	1927, 1928, 1930, 1931, 282, 0, 0, 0, 0, 0,
	0, 0, 0, 734, 0, 0, 0, 0, 0, 0,
	282, 0, 734, 0, 0, 3307, 0, 0, 0, 0,
	0, 0, 0, 0, 282, 0, 0, 3314, 0, 0,
	0, 0, 0, 0, 0, 0, 2979, 0, 0, 0,
	0, 0, 0, 0, 0, 282, 1411, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 102, 0, 0, 0,
	0, 0, 0, 2882, 2882, 2882, 2882, 2882, 2882, 2882,
	2882, 2882, 2882, 2882, 2882, 2882, 2882, 2882, 2882, 2882,
	2882, 2882, 2882, 0, 2882, 0, 0, 0, 0, 0,
	3695, 3696, 0, 3697, 282, 1411, 0, 0, 750, 0,
	750, 1921, 1922, 0, 3004, 0, 0, 0, 0, 0,
	282, 0, 0, 282, 197, 105, 0, 282, 109, 282,
	0, 0, 0, 0, 1401, 1952, 282, 282, 0, 1411,
	1411, 3020, 0, 1924, 0, 0, 282, 0, 0, 0,
	0, 3739, 3740, 0, 3741, 247, 0, 0, 0, 0,
	0, 0, 0, 960, 0, 0, 0, 0, 157, 0,
	1977, 0, 0, 0, 0, 0, 1921, 1922, 0, 1923,
	0, 0, 0, 0, 0, 0, 1577, 0, 0, 0,
	828, 828, 0, 0, 828, 828, 0, 0, 0, 0,
	1952, 0, 0, 3063, 0, 249, 0, 0, 1924, 0,
	0, 0, 0, 0, 0, 282, 0, 0, 0, 1577,
	0, 1620, 0, 0, 0, 0, 0, 0, 0, 282,
	0, 0, 162, 0, 1577, 1977, 0, 0, 0, 0,
	0, 0, 282, 0, 1923, 0, 0, 0, 202, 0,
	0, 0, 0, 821, 0, 1943, 248, 0, 0, 0,
	1577, 0, 0, 0, 1940, 0, 0, 0, 0, 0,
	0, 241, 115, 0, 0, 0, 0, 0, 0, 282,
	242, 1921, 1922, 0, 198, 0, 0, 1929, 0, 0,
	0, 282, 282, 3158, 1641, 0, 0, 0, 0, 0,
	1175, 0, 1620, 1620, 0, 1952, 0, 0, 0, 201,
	0, 0, 1175, 1924, 0, 0, 0, 0, 0, 0,
	3935, 0, 0, 0, 0, 0, 0, 0, 0, 282,
	3218, 0, 0, 0, 0, 0, 0, 0, 1951, 1953,
	1977, 0, 1946, 1947, 1948, 1949, 0, 0, 0, 1923,
	0, 0, 1929, 0, 0, 0, 0, 1641, 0, 0,
	282, 0, 282, 0, 0, 0, 0, 0, 0, 282,
	0, 0, 0, 0, 0, 0, 0, 0, 115, 3262,
	115, 0, 115, 0, 0, 0, 0, 0, 0, 3063,
	0, 734, 0, 0, 0, 0, 0, 1944, 0, 0,
	3158, 965, 3063, 1951, 1953, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1577, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 282, 0, 0, 0, 0, 1938,
	1939, 0, 0, 0, 1155, 115, 115, 0, 0, 0,
	0, 0, 0, 282, 1401, 282, 0, 0, 0, 0,
	0, 115, 0, 115, 0, 1411, 282, 1929, 0, 1401,
	0, 1401, 1944, 1401, 76, 0, 0, 115, 0, 115,
	0, 0, 0, 0, 0, 0, 0, 1974, 0, 0,
	0, 0, 77, 0, 1620, 1620, 1620, 1620, 0, 0,
	1168, 0, 0, 0, 1577, 0, 0, 0, 0, 82,
	0, 0, 0, 0, 0, 0, 0, 0, 1951, 1953,
	282, 282, 282, 282, 1401, 0, 0, 1401, 0, 282,
	0, 0, 0, 0, 282, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 115, 0, 0, 1921, 1922,
	91, 0, 1974, 0, 1965, 1966, 1967, 0, 0, 0,
	0, 0, 0, 0, 0, 282, 0, 0, 1945, 0,
	0, 0, 1952, 282, 0, 0, 0, 1944, 0, 0,
	1924, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1971, 959, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 50, 0, 113, 1977, 0, 0,
	1950, 0, 97, 110, 0, 0, 1923, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1943, 0, 1976,
	0, 0, 0, 1945, 0, 0, 1940, 0, 0, 0,
	1577, 0, 0, 1577, 0, 0, 0, 1134, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1974, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1991, 0,
	0, 0, 0, 0, 98, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1997, 0, 0, 0,
	2003, 0, 0, 0, 1976, 0, 0, 0, 0, 1641,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1946, 1947, 1948, 1949, 0, 0,
	1577, 0, 0, 0, 1929, 0, 1925, 1926, 1927, 1928,
	1930, 1931, 0, 0, 0, 0, 0, 1577, 1945, 0,
	0, 0, 3770, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1962, 0, 0, 1972, 0,
	3795, 0, 0, 0, 0, 1951, 1953, 0, 0, 0,
	0, 0, 3823, 0, 0, 1941, 1937, 0, 1934, 1932,
	1933, 1925, 1926, 1927, 1928, 1930, 1931, 0, 0, 1976,
	0, 1938, 1939, 0, 0, 0, 0, 0, 0, 0,
	0, 2091, 0, 2094, 0, 115, 0, 0, 0, 1960,
	0, 0, 0, 0, 0, 0, 0, 102, 0, 0,
	0, 0, 0, 3869, 1944, 0, 4621, 0, 0, 0,
	0, 0, 0, 0, 282, 3893, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4256,
	282, 0, 0, 0, 0, 734, 0, 0, 0, 0,
	734, 0, 1577, 734, 0, 0, 734, 734, 0, 0,
	0, 0, 734, 0, 0, 197, 105, 0, 0, 109,
	282, 0, 0, 0, 1932, 1933, 1925, 1926, 1927, 1928,
	1930, 1931, 282, 0, 0, 0, 0, 0, 4669, 0,
	0, 0, 0, 0, 1974, 0, 247, 0, 0, 0,
	0, 0, 0, 0, 960, 0, 4306, 0, 0, 157,
	0, 0, 0, 0, 0, 0, 76, 0, 0, 0,
	0, 0, 0, 282, 0, 0, 0, 282, 282, 0,
	0, 0, 2882, 0, 77, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 249, 0, 0, 0,
	0, 82, 1950, 0, 0, 0, 0, 0, 0, 0,
	0, 3063, 3063, 282, 0, 3651, 2119, 0, 0, 0,
	0, 0, 3063, 162, 2125, 1945, 0, 0, 0, 0,
	0, 0, 0, 3063, 2125, 0, 3063, 2125, 0, 202,
	2125, 0, 91, 3651, 1620, 1620, 0, 248, 0, 0,
	0, 0, 0, 1963, 2882, 282, 282, 2119, 0, 282,
	0, 0, 241, 0, 0, 0, 0, 0, 0, 0,
	0, 242, 0, 0, 0, 198, 2119, 0, 282, 0,
	3725, 3725, 0, 959, 0, 1401, 1976, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 113, 0,
	1739, 0, 0, 0, 97, 110, 0, 3063, 0, 3063,
	0, 3753, 3063, 2119, 0, 0, 3063, 0, 0, 0,
	0, 0, 0, 0, 3491, 3492, 4809, 3509, 3510, 3511,
	2119, 0, 0, 821, 1620, 1620, 1620, 1620, 1620, 1620,
	1620, 1620, 1620, 1620, 1620, 1620, 1620, 1620, 1620, 1620,
	1620, 1620, 1620, 1620, 0, 1620, 0, 0, 0, 0,
	0, 0, 1961, 0, 0, 1401, 98, 0, 0, 0,
	0, 0, 282, 0, 4838, 0, 1964, 1941, 1937, 0,
	1934, 1932, 1933, 1925, 1926, 1927, 1928, 1930, 1931, 0,
	282, 0, 3796, 0, 0, 0, 3798, 3063, 0, 4860,
	282, 0, 0, 3506, 282, 0, 0, 1411, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1577,
	0, 0, 282, 0, 0, 0, 0, 3262, 0, 0,
	1401, 0, 282, 0, 4489, 3063, 0, 734, 0, 0,
	0, 0, 2882, 0, 3063, 0, 0, 1577, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1155,
	0, 1155, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2882, 0, 3906, 0, 0, 0, 0, 4541, 0, 0,
	3497, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4555, 0, 3912, 0, 0, 2882, 1641, 0, 0, 102,
	1401, 282, 0, 282, 0, 0, 0, 0, 0, 1401,
	0, 0, 0, 4578, 0, 4194, 4195, 0, 0, 0,
	0, 0, 4197, 0, 0, 4198, 0, 0, 0, 0,
	0, 0, 0, 0, 115, 0, 0, 0, 0, 0,
	282, 0, 0, 0, 0, 0, 0, 0, 3513, 1577,
	1577, 0, 1577, 0, 0, 0, 0, 197, 105, 0,
	0, 109, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1577, 0, 0, 0, 0, 247, 0,
	3507, 0, 0, 0, 0, 0, 960, 0, 3980, 0,
	0, 157, 0, 0, 0, 0, 0, 0, 1175, 0,
	0, 0, 0, 1134, 0, 0, 1134, 1134, 0, 0,
	0, 4284, 0, 0, 168, 0, 2488, 4290, 4291, 0,
	0, 0, 0, 76, 0, 47, 46, 0, 249, 0,
	0, 0, 0, 0, 0, 0, 4652, 0, 0, 0,
	0, 77, 0, 0, 0, 163, 1577, 0, 0, 0,
	0, 0, 0, 0, 0, 162, 0, 0, 82, 0,
	1974, 0, 2705, 0, 0, 0, 1577, 0, 0, 68,
	0, 202, 0, 0, 0, 0, 49, 0, 165, 248,
	0, 0, 1155, 0, 0, 282, 282, 0, 0, 0,
	0, 0, 1997, 0, 241, 0, 1997, 48, 0, 91,
	0, 0, 0, 242, 0, 0, 0, 198, 0, 0,
	734, 734, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 51, 69, 0, 0,
	0, 0, 201, 0, 0, 52, 0, 0, 0, 0,
	58, 3508, 0, 0, 0, 166, 0, 0, 1577, 0,
	0, 0, 282, 50, 0, 113, 0, 0, 0, 0,
	0, 97, 110, 0, 0, 0, 0, 0, 0, 70,
	1320, 0, 0, 0, 0, 0, 0, 3491, 3492, 0,
	3509, 3510, 3511, 0, 0, 0, 2094, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1577,
	4328, 0, 0, 0, 53, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4390, 4391,
	0, 0, 0, 98, 0, 0, 0, 115, 0, 1577,
	0, 0, 0, 0, 821, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3506, 0, 0, 0,
	0, 1957, 0, 0, 0, 0, 0, 3725, 0, 0,
	0, 0, 1577, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 282, 0, 0, 0, 0, 0, 0, 3503,
	3504, 3505, 0, 0, 0, 3158, 3502, 3500, 3501, 3493,
	3494, 3495, 3496, 3498, 3499, 0, 0, 0, 0, 0,
	2119, 1577, 282, 0, 0, 0, 750, 750, 1411, 0,
	0, 3491, 3492, 0, 3509, 3510, 3511, 0, 0, 0,
	0, 282, 0, 0, 0, 0, 0, 0, 0, 4868,
	0, 0, 282, 3262, 4327, 0, 3262, 2125, 0, 0,
	0, 0, 282, 3497, 0, 0, 0, 0, 0, 1175,
	0, 0, 282, 0, 0, 0, 2488, 282, 4882, 0,
	0, 0, 282, 0, 0, 0, 102, 0, 0, 0,
	0, 0, 0, 1577, 0, 0, 0, 0, 0, 0,
	0, 3063, 282, 0, 54, 0, 0, 4914, 0, 0,
	3506, 3158, 0, 0, 965, 3063, 0, 0, 0, 0,
	57, 0, 0, 0, 0, 60, 0, 0, 0, 0,
	0, 3513, 0, 0, 0, 71, 0, 0, 0, 0,
	0, 0, 0, 59, 197, 105, 282, 4587, 109, 4589,
	4590, 4591, 55, 4593, 0, 0, 167, 0, 0, 0,
	0, 0, 1577, 0, 56, 0, 0, 0, 0, 0,
	0, 0, 0, 3507, 0, 247, 0, 0, 0, 0,
	0, 0, 0, 63, 0, 0, 0, 0, 157, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 164, 0, 0, 3497, 0, 115,
	0, 0, 115, 0, 115, 0, 0, 0, 0, 0,
	0, 0, 0, 4346, 0, 249, 0, 0, 0, 0,
	0, 1957, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4641, 5005, 0, 0, 0, 0, 0, 5007,
	0, 0, 162, 1974, 0, 0, 0, 0, 0, 0,
	0, 115, 0, 0, 115, 0, 0, 0, 202, 0,
	115, 0, 0, 0, 0, 3513, 248, 0, 0, 0,
	0, 0, 0, 1620, 0, 0, 282, 0, 0, 0,
	0, 241, 1641, 0, 282, 0, 0, 0, 0, 0,
	242, 0, 0, 0, 198, 0, 0, 0, 282, 0,
	0, 0, 0, 0, 0, 0, 0, 3507, 0, 0,
	0, 0, 0, 0, 0, 0, 1411, 0, 0, 201,
	0, 0, 3, 0, 3508, 0, 0, 0, 0, 1411,
	0, 282, 1411, 0, 0, 0, 0, 115, 0, 0,
	0, 0, 0, 3063, 3063, 1620, 3651, 0, 0, 3725,
	3063, 0, 0, 0, 0, 0, 0, 0, 4448, 4737,
	4448, 1641, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3063, 0, 2125, 0, 0, 0, 3651, 0,
	1641, 1641, 282, 2119, 0, 0, 0, 1974, 0, 0,
	0, 1957, 0, 0, 0, 0, 2119, 0, 282, 2119,
	0, 282, 0, 3725, 0, 0, 0, 1957, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3063, 0, 3063, 282, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1921, 1922, 0, 0, 0,
	0, 0, 0, 0, 1957, 0, 0, 0, 0, 0,
	1957, 1175, 0, 0, 0, 0, 1957, 0, 0, 1952,
	0, 0, 0, 0, 3063, 3063, 0, 1924, 3508, 0,
	3262, 3262, 3503, 3504, 3505, 0, 2705, 3651, 0, 3502,
	3500, 3501, 3493, 3494, 3495, 3496, 3498, 3499, 282, 0,
	0, 0, 0, 0, 1977, 0, 0, 1997, 282, 0,
	0, 0, 0, 1923, 0, 1921, 1922, 0, 1954, 1955,
	1956, 1965, 1966, 1967, 1943, 0, 0, 0, 0, 0,
	0, 0, 0, 1940, 0, 0, 0, 0, 1958, 1952,
	0, 0, 0, 1620, 0, 0, 0, 1924, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1971, 1957, 0,
	0, 0, 0, 1957, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1977, 0, 0, 1957, 0, 0,
	0, 0, 1957, 1923, 0, 0, 0, 0, 0, 3406,
	0, 1620, 0, 0, 1943, 0, 0, 0, 0, 0,
	0, 0, 0, 1940, 0, 0, 0, 0, 0, 0,
	0, 1946, 1947, 1948, 1949, 0, 1620, 0, 0, 0,
	0, 1929, 0, 0, 0, 0, 3503, 3504, 3505, 0,
	0, 0, 0, 3502, 3500, 3501, 3493, 3494, 3495, 3496,
	3498, 3499, 0, 2488, 0, 0, 0, 1957, 0, 0,
	0, 0, 0, 1957, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3063, 2125, 0, 2125, 0,
	0, 4661, 1951, 1953, 0, 0, 0, 0, 0, 0,
	282, 1946, 1947, 1948, 1949, 0, 0, 0, 0, 0,
	4685, 1929, 4685, 0, 0, 0, 0, 0, 1938, 1939,
	0, 0, 0, 0, 2077, 0, 0, 0, 0, 0,
	1320, 0, 0, 0, 0, 0, 0, 821, 0, 0,
	0, 0, 0, 0, 0, 0, 1320, 0, 3725, 0,
	1401, 1944, 1962, 0, 0, 1972, 0, 0, 0, 0,
	0, 0, 1951, 1953, 0, 0, 0, 0, 0, 2119,
	0, 282, 0, 0, 0, 0, 0, 0, 0, 1968,
	0, 1969, 0, 0, 0, 0, 0, 0, 1938, 1939,
	0, 0, 855, 0, 0, 0, 0, 0, 4661, 0,
	0, 4448, 0, 0, 1641, 0, 1960, 0, 3063, 1957,
	1957, 1957, 1957, 1957, 1957, 1957, 1957, 0, 866, 0,
	0, 1944, 0, 0, 0, 0, 0, 0, 4774, 1957,
	0, 1974, 0, 0, 0, 0, 0, 0, 868, 0,
	1641, 0, 1957, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 867, 0, 0, 0, 0, 0, 282, 282, 1970,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2886, 1950,
	1959, 3980, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1974, 1957, 115, 115, 0, 115, 0, 1957, 0,
	0, 0, 1945, 0, 860, 0, 0, 3725, 4829, 0,
	0, 876, 0, 0, 0, 0, 4661, 1160, 0, 0,
	0, 0, 0, 0, 0, 865, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4448, 0, 0, 0,
	0, 0, 0, 0, 115, 115, 0, 115, 0, 1950,
	0, 4448, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1976, 0, 0, 0, 0, 0, 0,
	0, 0, 1945, 0, 0, 282, 0, 864, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 750, 0,
	0, 0, 0, 0, 796, 0, 0, 0, 0, 0,
	1963, 0, 0, 0, 0, 0, 4448, 4448, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	862, 0, 0, 0, 0, 0, 0, 4448, 0, 282,
	4448, 0, 0, 1976, 0, 0, 0, 0, 0, 0,
	2125, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1641, 0, 1641, 0, 1941, 1937, 0, 1934, 1932, 1933,
	1925, 1926, 1927, 1928, 1930, 1931, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1320, 875,
	1411, 1155, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4956, 115, 115, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1961,
	4685, 0, 0, 282, 0, 0, 0, 0, 0, 0,
	1935, 1936, 1942, 1964, 1941, 1937, 0, 1934, 1932, 1933,
	1925, 1926, 1927, 1928, 1930, 1931, 0, 0, 3063, 0,
	0, 3466, 0, 0, 0, 3467, 0, 0, 1921, 1922,
	0, 1954, 1955, 1956, 1965, 1966, 1967, 0, 0, 0,
	857, 1921, 1922, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1952, 282, 0, 0, 0, 0, 0, 0,
	1924, 0, 0, 0, 0, 1952, 0, 0, 0, 0,
	1971, 0, 861, 1924, 0, 3980, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1977, 0, 0,
	0, 0, 0, 0, 0, 0, 1923, 0, 0, 1641,
	1977, 0, 0, 0, 0, 0, 0, 1943, 0, 1923,
	0, 795, 0, 0, 0, 0, 1940, 0, 0, 0,
	1943, 0, 0, 0, 0, 0, 0, 871, 0, 1940,
	0, 0, 0, 859, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4661, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 856, 0, 0, 3399, 0, 0, 869, 0,
	0, 0, 0, 0, 1946, 1947, 1948, 1949, 0, 0,
	0, 0, 0, 0, 1929, 0, 0, 1946, 1947, 1948,
	1949, 863, 3063, 0, 0, 0, 0, 1929, 0, 0,
	0, 0, 4448, 115, 4448, 0, 797, 1641, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 858, 0, 0,
	0, 1320, 1320, 0, 0, 1962, 0, 0, 1972, 3491,
	3492, 1957, 3509, 3510, 3511, 1951, 1953, 0, 0, 0,
	0, 0, 873, 874, 0, 870, 0, 0, 1951, 1953,
	0, 0, 3947, 0, 0, 0, 0, 0, 0, 0,
	1957, 1938, 1939, 0, 0, 0, 0, 0, 3063, 0,
	0, 0, 0, 0, 1938, 1939, 0, 0, 0, 1960,
	0, 0, 0, 0, 0, 3158, 0, 0, 0, 0,
	0, 0, 0, 0, 1944, 0, 0, 0, 3063, 0,
	1957, 0, 0, 0, 1957, 0, 0, 1944, 3506, 0,
	0, 0, 3158, 0, 0, 0, 0, 0, 1957, 0,
	0, 0, 0, 0, 0, 0, 0, 1957, 1957, 1957,
	1957, 1957, 1957, 1957, 1957, 1957, 1957, 1957, 1957, 1957,
	1957, 1957, 1957, 1957, 1957, 1957, 1957, 1957, 1957, 1957,
	1957, 1957, 1957, 1957, 1957, 1957, 1957, 1957, 1957, 1957,
	1957, 1957, 1957, 0, 0, 0, 1420, 0, 1957, 0,
	1957, 1957, 1957, 1957, 1974, 0, 0, 0, 0, 0,
	0, 0, 2886, 2886, 0, 0, 0, 1974, 0, 0,
	0, 0, 0, 1160, 1160, 1160, 0, 1957, 3491, 3492,
	0, 3509, 3510, 3511, 0, 3497, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3946, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1950, 1921, 1922, 0, 1590, 0, 0, 0,
	0, 0, 1606, 0, 0, 1950, 0, 0, 1957, 0,
	0, 0, 0, 0, 0, 1945, 0, 1952, 0, 0,
	0, 0, 0, 0, 0, 1924, 0, 0, 1945, 0,
	0, 0, 1643, 3513, 1649, 0, 1655, 3506, 1957, 0,
	0, 1957, 0, 1963, 1957, 0, 0, 1957, 0, 0,
	0, 0, 1977, 1957, 1957, 1957, 1957, 1957, 1957, 1957,
	0, 1923, 115, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1943, 0, 0, 3507, 1976, 0, 0, 0,
	0, 1940, 0, 0, 0, 0, 0, 0, 1320, 1976,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1747, 0, 1752, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1957,
	0, 1766, 3512, 1771, 2886, 2886, 2886, 2886, 0, 115,
	1957, 0, 1957, 0, 3497, 0, 0, 1957, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1961, 0, 0, 1974, 0, 0, 0, 1946,
	1947, 1948, 1949, 1935, 1936, 1942, 1964, 1941, 1937, 1929,
	1934, 1932, 1933, 1925, 1926, 1927, 1928, 1930, 1931, 0,
	1941, 1937, 0, 1934, 1932, 1933, 1925, 1926, 1927, 1928,
	1930, 1931, 1836, 0, 0, 1842, 0, 0, 0, 0,
	0, 0, 3513, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1951, 1953, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3508, 0, 0, 0,
	0, 0, 0, 0, 3507, 0, 1938, 1939, 0, 0,
	0, 0, 0, 0, 1921, 1922, 0, 1954, 1955, 1956,
	1965, 1966, 1967, 0, 0, 0, 115, 0, 0, 0,
	0, 0, 1320, 0, 0, 0, 0, 1958, 1952, 1944,
	1320, 0, 0, 0, 0, 0, 1924, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1971, 0, 1978, 1979,
	1980, 1981, 1982, 1983, 1984, 1985, 0, 0, 0, 0,
	0, 0, 0, 1977, 0, 0, 0, 0, 0, 0,
	0, 0, 1923, 0, 1974, 0, 0, 0, 0, 0,
	0, 1998, 0, 1943, 0, 0, 0, 2011, 0, 0,
	0, 0, 1940, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1974,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3503, 3504, 3505, 0, 0, 0,
	0, 3502, 3500, 3501, 3493, 3494, 3495, 3496, 3498, 3499,
	0, 0, 0, 0, 0, 3508, 0, 115, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1950, 0, 0,
	1946, 1947, 1948, 1949, 0, 0, 0, 0, 0, 0,
	1929, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1945, 0, 0, 2071, 2071, 2071, 0, 0, 0, 0,
	0, 3188, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1957, 1957, 0, 1957, 0, 0, 0, 0,
	115, 1962, 0, 0, 1972, 0, 0, 0, 0, 0,
	0, 1951, 1953, 115, 0, 3178, 3176, 0, 0, 0,
	0, 0, 3180, 3182, 3172, 0, 0, 0, 1968, 0,
	1969, 1976, 0, 0, 0, 0, 115, 1938, 1939, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1960, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3198, 0, 0, 0, 0,
	1944, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3503, 3504, 3505, 0, 0, 0, 0,
	3502, 3500, 3501, 3493, 3494, 3495, 3496, 3498, 3499, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1957, 0, 0, 0, 0, 1970, 1160,
	0, 0, 1941, 1937, 0, 1934, 1932, 1933, 1925, 1926,
	1927, 1928, 1930, 1931, 0, 0, 0, 0, 0, 1959,
	0, 0, 0, 0, 0, 0, 0, 0, 1209, 0,
	1974, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 115,
	0, 1957, 1957, 0, 2886, 2886, 0, 0, 1957, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3512, 3512,
	0, 0, 1957, 1957, 0, 281, 281, 281, 0, 0,
	0, 0, 1957, 0, 0, 0, 0, 0, 1950, 3174,
	0, 0, 0, 0, 0, 0, 1957, 0, 0, 0,
	3190, 0, 0, 0, 0, 0, 889, 0, 1957, 0,
	0, 1945, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3189, 3179, 3177, 3181, 3183, 3173, 3175,
	3191, 3193, 0, 0, 889, 0, 0, 0, 0, 1963,
	0, 3185, 3187, 3195, 2886, 2886, 2886, 2886, 2886, 2886,
	2886, 2886, 2886, 2886, 2886, 2886, 2886, 2886, 2886, 2886,
	2886, 2886, 2886, 2886, 0, 2886, 3512, 3512, 3512, 3512,
	0, 0, 1976, 0, 0, 0, 0, 3199, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1957, 0, 0, 2857, 2858, 2859, 2860, 2853, 2854,
	2855, 2856, 0, 0, 0, 0, 0, 0, 0, 0,
	2705, 0, 0, 0, 781, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 764, 0, 0, 1961, 0,
	765, 0, 0, 0, 0, 0, 0, 0, 0, 1935,
	1936, 1942, 1964, 1941, 1937, 0, 1934, 1932, 1933, 1925,
	1926, 1927, 1928, 1930, 1931, 0, 0, 0, 1333, 0,
	2763, 0, 0, 0, 2764, 0, 0, 2833, 2834, 2835,
	2836, 766, 0, 0, 0, 3192, 0, 0, 0, 0,
	0, 0, 767, 0, 0, 0, 0, 0, 0, 0,
	2845, 2846, 2847, 2848, 2841, 2842, 2843, 2844, 2849, 2850,
	2851, 2852, 0, 0, 768, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1957, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 787, 0, 0, 0,
	0, 0, 115, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3200, 0, 769, 0, 0,
	0, 0, 0, 0, 3184, 3186, 3194, 0, 0, 0,
	2550, 115, 0, 0, 0, 0, 0, 1957, 1957, 0,
	0, 0, 770, 2829, 2830, 2831, 2832, 2837, 2838, 2839,
	2840, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	115, 0, 0, 0, 0, 771, 0, 0, 2579, 772,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 796, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2619, 0, 2623, 0, 0, 0,
	0, 0, 786, 2637, 0, 0, 0, 0, 0, 0,
	2646, 2647, 2648, 2649, 2650, 2651, 2652, 2653, 2654, 2655,
	2656, 2657, 2658, 2659, 2660, 2661, 2662, 2663, 2664, 2665,
	2666, 2667, 2668, 2669, 2670, 2671, 2672, 2673, 2674, 2675,
	2676, 2677, 2678, 2679, 2680, 2681, 0, 2687, 0, 2689,
	2690, 2691, 2692, 0, 0, 0, 0, 0, 0, 0,
	0, 783, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2716, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 115, 1998, 0, 0,
	0, 2767, 115, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2797, 2800, 2803,
	2806, 0, 0, 2812, 2813, 2814, 2815, 2816, 2817, 2818,
	0, 0, 0, 0, 1957, 1957, 0, 0, 1957, 3512,
	3512, 1957, 0, 0, 0, 1957, 0, 793, 0, 774,
	0, 2878, 1957, 2889, 2891, 2896, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1957, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 794,
	0, 775, 0, 0, 0, 0, 0, 0, 1957, 1957,
	1957, 1957, 1957, 0, 0, 0, 0, 0, 1957, 0,
	1957, 0, 0, 3512, 3512, 3512, 3512, 3512, 3512, 3512,
	3512, 3512, 3512, 3512, 3512, 3512, 3512, 3512, 3512, 3512,
	3512, 3512, 3512, 795, 0, 0, 3512, 0, 0, 1957,
	1957, 776, 0, 0, 0, 0, 791, 792, 0, 789,
	0, 1957, 0, 0, 0, 784, 0, 0, 777, 0,
	1957, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 778, 0, 785, 0, 0, 0, 0, 0,
	0, 0, 0, 779, 0, 0, 1957, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 780, 0,
	0, 0, 0, 788, 1957, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 797, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 782,
	0, 0, 0, 0, 0, 1957, 0, 0, 0, 0,
	0, 281, 0, 281, 281, 0, 0, 281, 0, 0,
	0, 0, 0, 0, 0, 0, 1957, 1957, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 781,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	764, 0, 0, 0, 0, 765, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 281, 0, 281, 281, 0,
	0, 281, 281, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 766, 0, 0, 0,
	0, 0, 0, 0, 889, 0, 0, 767, 0, 0,
	1921, 1922, 0, 1954, 1955, 1956, 1965, 1966, 1967, 0,
	0, 1957, 0, 0, 0, 0, 0, 0, 0, 768,
	0, 0, 0, 1958, 1952, 0, 0, 0, 0, 0,
	0, 0, 1924, 0, 0, 3221, 3222, 0, 3224, 0,
	0, 787, 1971, 0, 0, 281, 281, 1245, 0, 0,
	0, 0, 0, 0, 0, 1957, 1957, 0, 0, 1977,
	1957, 1957, 769, 0, 1957, 1957, 0, 0, 1923, 1957,
	0, 281, 281, 1957, 0, 0, 0, 0, 1957, 1943,
	0, 0, 0, 0, 0, 0, 0, 770, 1940, 0,
	0, 0, 0, 2886, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	771, 0, 0, 0, 772, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 796, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 786, 0, 0,
	0, 0, 0, 0, 0, 2886, 1946, 1947, 1948, 1949,
	0, 0, 0, 0, 0, 0, 1929, 3342, 0, 0,
	281, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 281, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 783, 1962, 0, 0,
	1972, 1957, 0, 0, 0, 0, 0, 1951, 1953, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1968, 0, 1969, 0, 0, 0,
	0, 1978, 1979, 1938, 1939, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1960, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1944, 0, 0, 0,
	0, 0, 0, 0, 774, 0, 0, 1337, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3400, 3401, 0,
	0, 0, 0, 3407, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 794, 0, 775, 0, 0, 0,
	0, 0, 3421, 3422, 1970, 0, 0, 0, 2767, 1957,
	1957, 1957, 0, 0, 0, 0, 0, 0, 0, 0,
	1957, 1957, 3512, 2886, 0, 1959, 0, 0, 0, 1957,
	0, 0, 1957, 0, 0, 0, 1974, 0, 795, 0,
	0, 0, 0, 0, 0, 0, 776, 0, 0, 0,
	0, 791, 792, 3431, 789, 0, 0, 0, 0, 0,
	784, 0, 0, 777, 0, 0, 0, 0, 0, 3445,
	3512, 2886, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3457, 1957, 0, 0,
	0, 0, 0, 0, 1950, 1957, 2886, 0, 0, 0,
	2093, 0, 1333, 1957, 0, 0, 281, 778, 0, 785,
	0, 0, 1957, 0, 1957, 0, 0, 1945, 779, 0,
	0, 0, 281, 2093, 281, 0, 0, 0, 0, 0,
	0, 0, 889, 780, 0, 0, 0, 0, 788, 889,
	0, 0, 0, 0, 0, 1963, 0, 0, 0, 0,
	0, 0, 0, 797, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 782, 0, 0, 281, 0, 0,
	0, 0, 0, 0, 281, 0, 0, 0, 1976, 0,
	0, 0, 0, 0, 0, 0, 0, 2896, 2896, 2896,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2071, 0, 0, 0, 0, 0,
	3512, 0, 3550, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1957, 3512,
	0, 0, 1957, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1961, 0, 0, 0, 0, 0,
	0, 3512, 0, 0, 0, 1935, 1936, 1942, 1964, 1941,
	1937, 0, 1934, 1932, 1933, 1925, 1926, 1927, 1928, 1930,
	1931, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4352, 0, 0, 0, 0, 0, 0, 0, 1921, 1922,
	0, 1954, 1955, 1956, 1965, 1966, 1967, 909, 0, 0,
	0, 0, 1957, 0, 0, 0, 0, 0, 0, 0,
	1160, 1958, 1952, 0, 0, 0, 0, 0, 911, 0,
	1924, 0, 1160, 912, 0, 0, 0, 0, 0, 0,
	1971, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1977, 0, 0,
	0, 0, 0, 0, 0, 0, 1923, 0, 0, 0,
	0, 0, 0, 3683, 913, 0, 930, 1943, 0, 0,
	0, 0, 0, 0, 0, 0, 1940, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 914, 0, 0, 0, 0, 915, 281, 0,
	0, 0, 889, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3736, 3737, 0, 939,
	0, 0, 0, 1957, 0, 0, 916, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	937, 0, 0, 0, 0, 0, 0, 0, 1957, 0,
	0, 0, 0, 0, 1946, 1947, 1948, 1949, 0, 281,
	0, 0, 0, 281, 1929, 910, 0, 0, 0, 281,
	0, 0, 0, 0, 0, 281, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 917, 0,
	0, 281, 918, 281, 0, 0, 0, 0, 0, 281,
	0, 0, 0, 0, 941, 1962, 0, 0, 1972, 796,
	0, 0, 0, 0, 0, 1951, 1953, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1968, 0, 1969, 0, 0, 0, 0, 0,
	0, 1938, 1939, 0, 0, 281, 0, 0, 281, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1960,
	0, 0, 0, 0, 0, 1337, 0, 0, 0, 281,
	0, 0, 0, 0, 1944, 0, 1337, 0, 0, 0,
	1957, 0, 889, 281, 940, 281, 0, 281, 0, 281,
	0, 281, 0, 0, 935, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1337, 0, 0, 0,
	0, 0, 1970, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 281, 281, 281, 281,
	0, 0, 0, 1959, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1974, 0, 0, 0, 0, 0,
	0, 919, 1337, 0, 0, 0, 0, 0, 0, 1337,
	0, 0, 921, 0, 0, 0, 0, 2637, 0, 0,
	0, 0, 0, 3933, 3934, 1337, 0, 3937, 0, 0,
	0, 3940, 0, 0, 0, 0, 0, 0, 0, 0,
	3944, 0, 0, 0, 922, 0, 0, 0, 0, 3951,
	0, 0, 1950, 0, 3550, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3964,
	0, 0, 0, 0, 931, 1945, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1337, 795, 0, 0, 3987,
	3988, 0, 3989, 3990, 3991, 0, 0, 0, 0, 908,
	0, 0, 932, 1963, 0, 0, 0, 0, 0, 0,
	3997, 923, 0, 0, 3999, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1976, 0, 929, 0,
	0, 0, 0, 0, 0, 0, 0, 4028, 4029, 0,
	0, 0, 0, 0, 0, 924, 0, 0, 0, 925,
	944, 0, 943, 0, 0, 4040, 926, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4049, 927, 0, 0, 0, 0, 936, 0, 0, 1333,
	0, 0, 945, 0, 942, 0, 0, 0, 0, 0,
	0, 797, 0, 0, 0, 1333, 0, 0, 0, 0,
	0, 0, 1961, 0, 0, 0, 0, 0, 0, 281,
	0, 0, 0, 1935, 1936, 1942, 1964, 1941, 1937, 0,
	1934, 1932, 1933, 1925, 1926, 1927, 1928, 1930, 1931, 0,
	281, 0, 0, 0, 0, 0, 0, 0, 3949, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4105, 0, 0, 0, 0, 0, 1921,
	1922, 0, 1954, 1955, 1956, 1965, 1966, 1967, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 281,
	4123, 0, 1958, 1952, 0, 0, 0, 0, 0, 0,
	0, 1924, 0, 0, 0, 281, 0, 0, 281, 0,
	0, 1971, 281, 0, 281, 0, 0, 0, 0, 0,
	0, 281, 281, 0, 4154, 0, 0, 0, 1977, 0,
	0, 281, 0, 0, 0, 0, 0, 1923, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1943, 0,
	0, 0, 0, 0, 0, 0, 0, 1940, 0, 4175,
	4176, 0, 0, 0, 0, 0, 0, 0, 0, 1337,
	0, 1337, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1337, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	281, 0, 0, 0, 0, 0, 0, 2157, 0, 0,
	0, 0, 0, 0, 281, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 281, 0, 0,
	0, 0, 0, 0, 0, 1946, 1947, 1948, 1949, 0,
	0, 0, 0, 0, 0, 1929, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 281, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2071, 281, 281, 0, 0,
	0, 0, 0, 0, 4280, 0, 1962, 0, 0, 1972,
	0, 0, 0, 0, 0, 0, 1951, 1953, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1337, 0, 0, 1968, 889, 1969, 0, 0, 0, 0,
	0, 0, 1938, 1939, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1960, 0, 0, 0, 0, 281, 0, 889, 0, 0,
	0, 0, 0, 0, 281, 1944, 0, 0, 0, 0,
	4324, 4325, 0, 0, 0, 0, 4329, 4330, 0, 0,
	0, 4333, 4334, 0, 0, 0, 0, 0, 0, 4338,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4342, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1970, 0, 0, 4347, 0, 0, 281,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1959, 0, 0, 0, 281, 0,
	281, 0, 0, 0, 0, 1974, 0, 0, 0, 0,
	0, 281, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1337,
	1337, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1337, 0, 0, 1950, 0, 281, 281, 281, 281, 0,
	0, 0, 0, 0, 281, 0, 0, 0, 0, 281,
	0, 0, 0, 0, 0, 0, 1945, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1160, 0,
	281, 0, 0, 0, 1963, 0, 0, 0, 281, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1976, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1337, 0, 1337,
	0, 1337, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4490, 0, 0, 0, 0, 0, 1337,
	1337, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1337, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1337, 0, 1337, 1337, 1337,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1961, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1935, 1936, 1942, 1964, 1941, 1937,
	0, 1934, 1932, 1933, 1925, 1926, 1927, 1928, 1930, 1931,
	1921, 1922, 0, 1954, 1955, 1956, 1965, 1966, 1967, 3469,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1958, 1952, 0, 0, 0, 0, 0,
	0, 0, 1924, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1971, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1977,
	0, 0, 0, 0, 0, 0, 0, 0, 1923, 0,
	0, 4608, 4609, 4610, 0, 0, 0, 0, 0, 1943,
	0, 0, 0, 0, 0, 0, 0, 0, 1940, 2157,
	2157, 1337, 0, 0, 2637, 0, 0, 4619, 4620, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4628, 4631, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1333,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1333, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1946, 1947, 1948, 1949,
	0, 0, 0, 0, 0, 0, 1929, 0, 0, 0,
	0, 0, 0, 0, 1337, 2093, 0, 0, 0, 0,
	0, 0, 4686, 0, 0, 0, 0, 281, 0, 0,
	0, 4694, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4702, 1962, 0, 1160,
	1972, 0, 0, 0, 0, 0, 0, 1951, 1953, 0,
	0, 0, 0, 4711, 0, 0, 4713, 0, 281, 0,
	0, 0, 281, 281, 1968, 0, 1969, 0, 1337, 0,
	0, 0, 0, 1938, 1939, 1337, 0, 0, 0, 0,
	0, 0, 0, 0, 1337, 0, 0, 0, 0, 0,
	0, 1960, 0, 0, 0, 0, 0, 0, 281, 0,
	0, 1337, 0, 0, 0, 0, 1944, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	281, 281, 0, 0, 281, 0, 0, 0, 0, 0,
	0, 2093, 0, 0, 1970, 0, 0, 0, 0, 0,
	0, 0, 0, 281, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1959, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1974, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4837, 0, 0, 0, 4841, 0, 0,
	0, 0, 0, 0, 1950, 0, 0, 1337, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 281, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1945, 0, 0,
	0, 0, 0, 0, 0, 889, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 281, 0, 0, 0, 281,
	0, 0, 0, 0, 0, 1963, 2157, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 281, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1333, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1976, 0,
	0, 4911, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1337, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1337, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2637, 0, 0, 0, 0, 0, 0, 0, 0,
	4631, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1961, 0, 281, 0, 281, 0,
	0, 0, 0, 0, 0, 1935, 1936, 1942, 1964, 1941,
	1937, 0, 1934, 1932, 1933, 1925, 1926, 1927, 1928, 1930,
	1931, 1160, 0, 0, 0, 0, 0, 0, 0, 0,
	3468, 0, 0, 0, 0, 281, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1337,
	0, 0, 1921, 1922, 0, 1954, 1955, 1956, 1965, 1966,
	1967, 0, 1337, 0, 1337, 0, 0, 0, 0, 0,
	1337, 0, 0, 0, 0, 1958, 1952, 0, 0, 0,
	0, 0, 1337, 0, 1924, 0, 0, 0, 0, 0,
	5032, 5032, 5032, 0, 1971, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1977, 0, 0, 0, 0, 0, 0, 0, 1222,
	1923, 0, 0, 0, 0, 0, 0, 5057, 0, 0,
	0, 1943, 0, 0, 0, 0, 0, 0, 0, 0,
	1940, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 283, 283, 283, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 5032, 0, 0, 0, 0, 0,
	1333, 1333, 0, 0, 0, 0, 0, 283, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1946, 1947,
	1948, 1949, 0, 0, 0, 283, 0, 0, 1929, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 889, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1962,
	0, 0, 1972, 0, 0, 0, 0, 0, 0, 1951,
	1953, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1968, 0, 1969, 0,
	0, 0, 0, 1326, 0, 1938, 1939, 0, 0, 0,
	0, 0, 0, 0, 5032, 5189, 0, 0, 0, 0,
	0, 0, 0, 1960, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1944, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	277, 277, 730, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1970, 281, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1959, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 281, 1974, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 281, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 281, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 281, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 281, 0, 0,
	0, 0, 281, 0, 0, 0, 1950, 281, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1337, 1337,
	0, 0, 0, 0, 0, 0, 0, 1333, 0, 1945,
	0, 0, 0, 0, 1337, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1337, 0, 0, 0, 0, 1963, 0, 0,
	0, 0, 0, 0, 1337, 0, 0, 1337, 0, 0,
	0, 281, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2157,
	1976, 0, 0, 1337, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1961, 0, 0, 2157,
	0, 0, 0, 0, 0, 0, 0, 1935, 1936, 1942,
	1964, 1941, 1937, 0, 1934, 1932, 1933, 1925, 1926, 1927,
	1928, 1930, 1931, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3465, 0, 0, 0, 0, 0, 0, 0,
	0, 1333, 0, 0, 0, 0, 0, 0, 0, 1333,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2093, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1337, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 281, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2093, 0, 2093, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1337, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 281, 0, 0,
	0, 1337, 0, 1337, 0, 0, 0, 1337, 0, 0,
	0, 0, 0, 281, 0, 1337, 281, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1337, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	281, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1337, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1337, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1337, 0, 1337, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 281, 0, 0, 0, 0, 0, 0,
	0, 0, 283, 281, 283, 283, 0, 0, 283, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1337, 0, 0, 1337, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 283, 1497, 283, 283,
	0, 0, 283, 283, 0, 0, 0, 0, 1497, 0,
	0, 0, 0, 0, 2157, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 283, 0, 0, 0, 0,
	0, 0, 0, 1337, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1497, 0,
	1337, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2157, 2157, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 283, 283, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2157,
	2157, 0, 0, 0, 1497, 281, 0, 0, 0, 0,
	0, 1497, 283, 283, 0, 0, 1387, 0, 1387, 1387,
	0, 0, 0, 0, 0, 0, 0, 1497, 0, 0,
	0, 0, 2157, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1337,
	1337, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 281, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1497, 0, 0,
	1488, 0, 0, 0, 0, 1337, 1598, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2093, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 283, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 283, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 281, 281, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1745, 1746, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2093, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2093, 0, 0, 0,
	1337, 1337, 0, 1337, 0, 0, 0, 1337, 0, 0,
	1337, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	281, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1866, 0, 0, 0, 0,
	2157, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2093, 2093, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2093, 0, 281, 2093, 0, 0, 0, 0,
	0, 0, 1337, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1337, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1337, 283, 0, 0,
	0, 1337, 1337, 1337, 0, 0, 0, 0, 1497, 0,
	0, 0, 0, 283, 283, 283, 0, 0, 0, 0,
	0, 0, 0, 283, 1337, 0, 1337, 0, 0, 0,
	283, 0, 1337, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 281, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 283, 0,
	1337, 0, 0, 0, 0, 283, 0, 0, 0, 0,
	0, 2157, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 287, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 281, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1497, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 881, 0, 0, 0, 0, 0, 0, 0,
	1337, 0, 0, 0, 0, 0, 0, 0, 1337, 0,
	0, 2109, 1337, 1337, 0, 1337, 0, 0, 0, 0,
	881, 0, 1337, 0, 0, 0, 0, 2120, 0, 1598,
	0, 0, 0, 1337, 1337, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1337, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1387, 0, 0, 0, 0, 0, 0, 1598,
	0, 0, 1337, 0, 1337, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2093, 0, 2093,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1337,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 283,
	0, 1497, 1497, 283, 0, 0, 0, 0, 0, 1337,
	0, 0, 1497, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1214, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1337, 1337, 0, 0, 0, 0, 0, 0, 0,
	283, 0, 0, 0, 283, 0, 0, 0, 0, 0,
	283, 0, 0, 0, 0, 0, 283, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1337, 283, 0, 283, 0, 1337, 0, 0, 0,
	283, 0, 0, 0, 0, 0, 0, 0, 0, 1497,
	0, 1497, 0, 1497, 0, 0, 0, 0, 0, 0,
	0, 0, 1337, 1337, 1337, 1337, 1337, 1337, 1337, 0,
	0, 1497, 1497, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1337, 0, 0, 1497, 283, 0, 0, 283,
	0, 0, 0, 0, 0, 0, 0, 1497, 0, 1497,
	1497, 1497, 0, 0, 0, 0, 0, 0, 0, 0,
	283, 0, 1337, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 283, 283, 0, 283, 0, 283, 0,
	283, 0, 283, 2157, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1337, 0, 1337, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 283, 283, 283,
	283, 0, 0, 0, 2430, 0, 0, 0, 2437, 0,
	0, 0, 0, 0, 1337, 0, 0, 0, 0, 0,
	2450, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2462, 0, 2462, 0,
	0, 0, 0, 0, 2469, 0, 0, 0, 0, 2157,
	0, 0, 0, 1497, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1337, 0, 0, 0,
	2437, 0, 0, 2498, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1337, 1337, 1337, 0, 0, 0,
	0, 0, 0, 0, 2518, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1337, 0, 0, 2534, 0,
	2536, 0, 2538, 0, 2540, 0, 2541, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1497, 0, 0, 0,
	0, 0, 0, 0, 0, 1337, 0, 0, 1337, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2570, 2571, 2572, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2157, 0, 0, 0, 0, 0, 1497, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	283, 0, 0, 1497, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 283, 0, 0, 0, 0, 0, 0, 0, 0,
	1337, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1337, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	283, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 283, 0, 0, 283,
	0, 0, 0, 283, 0, 283, 0, 0, 0, 0,
	1337, 1337, 283, 283, 0, 0, 0, 0, 0, 0,
	0, 0, 283, 0, 0, 0, 0, 0, 0, 0,
	0, 1337, 0, 0, 1337, 0, 0, 0, 1337, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1337, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1497,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1494, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1616, 0, 0, 0, 0, 0, 0,
	0, 283, 0, 0, 2955, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 283, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 283, 0,
	0, 0, 0, 1616, 0, 0, 0, 0, 0, 0,
	0, 1337, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 283, 1497, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 283, 283, 1616,
	0, 0, 1497, 0, 0, 0, 1616, 0, 0, 0,
	3006, 0, 0, 1387, 0, 0, 0, 1387, 0, 1387,
	0, 0, 1616, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 283, 2450, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 283, 0, 283, 0,
	0, 0, 0, 0, 0, 283, 0, 0, 0, 0,
	0, 0, 1616, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1497, 0, 0, 1921, 1922, 0, 1954, 1955, 1956,
	1965, 1966, 1967, 0, 1497, 0, 1497, 0, 0, 0,
	0, 0, 1497, 0, 0, 0, 0, 1958, 1952, 0,
	283, 0, 0, 0, 1497, 0, 1924, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1971, 0, 0, 283,
	0, 283, 0, 0, 1495, 0, 0, 0, 0, 0,
	0, 0, 283, 1977, 0, 1617, 0, 0, 0, 1598,
	0, 0, 1923, 0, 0, 0, 1337, 0, 1337, 0,
	0, 2437, 2437, 1943, 0, 0, 0, 0, 0, 0,
	0, 0, 1940, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1617, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 283, 283, 283, 283,
	0, 0, 0, 0, 0, 283, 0, 0, 0, 0,
	283, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2437, 1617, 0, 0, 0, 0, 0, 0, 1617, 2450,
	0, 283, 0, 0, 0, 0, 0, 0, 0, 283,
	1946, 1947, 1948, 1949, 1617, 0, 0, 0, 0, 0,
	1929, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3312, 0, 0, 0, 0, 0,
	0, 1962, 0, 0, 1972, 0, 0, 0, 0, 0,
	0, 1951, 1953, 3323, 1617, 3326, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1968, 0,
	1969, 0, 0, 0, 0, 0, 0, 1938, 1939, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1960, 0, 0, 0, 0,
	0, 0, 0, 1494, 0, 0, 0, 0, 0, 0,
	1944, 0, 0, 0, 0, 0, 0, 0, 881, 0,
	3360, 1598, 3362, 1598, 0, 881, 0, 0, 0, 3368,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1970, 0,
	0, 0, 0, 0, 0, 1387, 0, 0, 0, 0,
	0, 0, 0, 3397, 0, 0, 0, 0, 0, 1959,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1974, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1494, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1950, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1497, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1945, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1497, 0, 0, 0, 0, 1963,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1497,
	0, 0, 0, 0, 0, 0, 0, 0, 283, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1976, 0, 0, 1497, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1495, 0, 0, 0, 283,
	0, 0, 0, 283, 283, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1616, 1616, 0, 283,
	0, 0, 0, 0, 0, 0, 0, 1494, 1961, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1935,
	1936, 1942, 1964, 1941, 1937, 0, 1934, 1932, 1933, 1925,
	1926, 1927, 1928, 1930, 1931, 0, 0, 0, 0, 0,
	0, 283, 283, 0, 3464, 283, 0, 0, 0, 0,
	0, 0, 283, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 283, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1495,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1497,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3598, 0, 1616, 0, 1616, 0, 1616, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1616, 1616, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1616, 0, 0, 1387, 0, 0, 0, 1598, 1598, 1497,
	0, 0, 1616, 0, 1616, 1616, 1616, 0, 283, 0,
	0, 0, 0, 1497, 0, 1497, 0, 0, 0, 1497,
	0, 0, 0, 0, 0, 0, 283, 1497, 881, 0,
	0, 0, 0, 3647, 0, 0, 283, 0, 0, 1497,
	283, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 283, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3702, 3704, 0, 0, 2450,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1497, 0, 0, 0, 0, 0, 0, 0, 1617, 1617,
	0, 0, 1497, 0, 1497, 0, 0, 0, 0, 1495,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1494, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1497, 0, 283, 1497, 283,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1921, 1922, 0, 1954, 1955, 1956, 1965, 1966, 1967, 0,
	0, 0, 0, 0, 0, 0, 283, 0, 0, 0,
	0, 0, 0, 1958, 1952, 0, 1617, 0, 1617, 0,
	1617, 0, 1924, 0, 0, 0, 0, 0, 0, 0,
	3820, 0, 1971, 0, 3824, 0, 0, 0, 1617, 1617,
	0, 1494, 0, 0, 0, 1497, 0, 0, 0, 1977,
	0, 0, 1617, 0, 0, 0, 0, 0, 1923, 0,
	0, 0, 1497, 0, 1617, 0, 1617, 1617, 1617, 1943,
	0, 0, 0, 0, 0, 0, 0, 0, 1940, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1494, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1494, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3918, 0, 1598, 0, 0, 1946, 1947, 1948, 1949,
	0, 0, 0, 0, 0, 0, 1929, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3931, 0, 0, 0, 0, 0, 0, 1497, 0, 0,
	1495, 0, 0, 0, 0, 0, 0, 1962, 0, 0,
	1972, 0, 0, 0, 0, 0, 0, 1951, 1953, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 283, 0,
	0, 0, 0, 0, 1968, 0, 1969, 0, 0, 0,
	0, 0, 0, 1938, 1939, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1960, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1944, 0, 0, 0,
	0, 0, 0, 0, 1494, 0, 0, 0, 0, 0,
	0, 0, 0, 1495, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1970, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1959, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1974, 0, 283, 0,
	0, 0, 0, 0, 1495, 0, 0, 0, 0, 0,
	0, 0, 1497, 1497, 0, 1497, 0, 0, 0, 1497,
	0, 1494, 1497, 0, 0, 0, 0, 0, 283, 0,
	1495, 0, 0, 0, 0, 0, 0, 1616, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 283, 0, 0,
	0, 0, 0, 0, 1950, 0, 0, 0, 283, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 283, 0,
	0, 0, 0, 0, 0, 0, 0, 1945, 283, 0,
	0, 0, 0, 283, 0, 0, 0, 0, 283, 0,
	0, 0, 0, 0, 1497, 0, 0, 0, 0, 0,
	0, 0, 0, 881, 0, 1963, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1497, 0,
	0, 0, 0, 1497, 1497, 1497, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1616, 0, 1976, 0,
	0, 0, 0, 0, 0, 0, 1497, 0, 1497, 1616,
	0, 1616, 283, 0, 1497, 0, 0, 1616, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1616,
	0, 0, 0, 0, 0, 0, 1495, 0, 0, 0,
	0, 0, 1497, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2450, 0, 1961, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1935, 1936, 1942, 1964, 1941,
	1937, 2450, 1934, 1932, 1933, 1925, 1926, 1927, 1928, 1930,
	1931, 0, 4234, 0, 0, 0, 0, 0, 0, 0,
	3463, 0, 4244, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2450, 0, 0,
	0, 0, 4262, 1495, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1617,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1497, 1497, 0, 1497, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1497, 1497, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4308, 0, 1497, 0,
	0, 0, 0, 0, 0, 0, 0, 283, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1617, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 283, 0,
	0, 1617, 0, 1617, 0, 0, 0, 0, 0, 1617,
	0, 1497, 0, 0, 283, 0, 0, 283, 0, 0,
	0, 1617, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1497, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 283, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1921, 1922, 0, 1954, 1955, 1956,
	1965, 1966, 1967, 1497, 1497, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1958, 1952, 0,
	0, 0, 0, 0, 0, 0, 1924, 0, 0, 0,
	0, 0, 0, 0, 283, 0, 1971, 0, 0, 0,
	0, 0, 0, 1497, 283, 0, 0, 0, 1497, 0,
	0, 0, 0, 1977, 0, 0, 0, 0, 0, 0,
	0, 0, 1923, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1943, 1497, 1497, 1497, 1497, 1497, 1497,
	1497, 0, 1940, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1497, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1494, 0, 0, 0,
	0, 0, 4468, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1497, 0, 0, 0, 2450, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1494,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1494, 0, 0, 0, 0, 0,
	1946, 1947, 1948, 1949, 0, 0, 0, 1497, 0, 1497,
	1929, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1494, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1497, 0, 0, 0,
	0, 1962, 0, 0, 1972, 0, 283, 0, 2450, 0,
	0, 1951, 1953, 0, 0, 0, 0, 0, 4566, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1968, 0,
	1969, 0, 0, 0, 0, 0, 0, 1938, 1939, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1960, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1497, 0,
	1944, 0, 0, 0, 0, 0, 0, 283, 0, 0,
	0, 0, 0, 0, 0, 0, 1497, 1497, 1497, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1970, 0,
	0, 0, 0, 0, 1494, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1497, 0, 1959,
	1497, 0, 0, 0, 0, 0, 0, 0, 1495, 0,
	1974, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 283, 283, 0, 0, 0, 0, 0,
	0, 1495, 0, 0, 1616, 0, 0, 0, 0, 0,
	4671, 0, 0, 0, 0, 0, 1495, 0, 1616, 0,
	1616, 0, 0, 0, 1494, 0, 0, 0, 1950, 0,
	0, 881, 1616, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1495, 0, 1616, 0, 0, 0, 0, 0,
	0, 1945, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1963,
	0, 2450, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1616, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1616, 0, 1616,
	0, 283, 1976, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1494, 0, 0, 1494, 0, 283, 0, 0, 0, 0,
	1497, 0, 0, 0, 0, 0, 0, 4799, 1598, 0,
	1497, 0, 0, 0, 0, 0, 0, 0, 1961, 0,
	0, 0, 0, 0, 0, 0, 1495, 0, 0, 1935,
	1936, 1942, 1964, 1941, 1937, 0, 1934, 1932, 1933, 1925,
	1926, 1927, 1928, 1930, 1931, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2764, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1494, 0, 0, 0, 0, 0, 0, 0, 0, 283,
	0, 0, 0, 0, 0, 0, 1617, 1494, 0, 0,
	0, 0, 0, 1497, 0, 0, 0, 0, 0, 0,
	1617, 0, 1617, 0, 0, 0, 1495, 0, 0, 0,
	0, 0, 0, 0, 1617, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1617, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 283,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1617, 0, 4917,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1617,
	0, 1617, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1494, 0, 0, 0, 0, 1921, 1922, 0,
	1954, 1955, 1956, 1965, 1966, 1967, 0, 0, 0, 0,
	0, 0, 1495, 0, 0, 1495, 0, 0, 0, 0,
	1958, 1952, 0, 881, 0, 0, 0, 0, 0, 1924,
	0, 0, 0, 4970, 0, 0, 0, 0, 0, 1971,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1977, 0, 0, 0,
	0, 0, 0, 0, 0, 1923, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1943, 0, 0, 0,
	0, 0, 0, 0, 0, 1940, 0, 0, 0, 0,
	0, 0, 1495, 5014, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1495,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1946, 1947, 1948, 1949, 1616, 1616, 0,
	1616, 0, 0, 1929, 1616, 0, 0, 1616, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1962, 0, 0, 1972, 0, 0,
	0, 0, 0, 0, 1951, 1953, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1968, 0, 1969, 1495, 0, 0, 0, 0, 1616,
	1938, 1939, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1960, 0,
	0, 0, 0, 1616, 0, 0, 0, 0, 1616, 1616,
	1616, 0, 0, 1944, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1616, 0, 1616, 0, 0, 0, 0, 0, 1494,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1970, 0, 0, 0, 0, 0, 1494, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1959, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1974, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1617,
	1617, 1950, 1617, 0, 0, 0, 1617, 0, 0, 1617,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1945, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1494,
	1494, 0, 1494, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1963, 0, 0, 0, 0, 0, 0, 0,
	1616, 1616, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1494, 0, 0, 0, 0, 0, 0,
	0, 1617, 0, 0, 0, 1976, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1617, 0, 0, 0, 0,
	1617, 1617, 1617, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1617, 0, 1617, 0, 0, 0, 0,
	0, 1495, 0, 0, 0, 0, 1494, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1961, 0, 0, 0, 0, 1494, 0, 0, 1495,
	0, 0, 1935, 1936, 1942, 1964, 1941, 1937, 0, 1934,
	1932, 1933, 1925, 1926, 1927, 1928, 1930, 1931, 0, 0,
	0, 0, 0, 4957, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1616, 1616,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1921, 1922,
	0, 1954, 1955, 1956, 1965, 1966, 1967, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1494, 0,
	0, 1958, 1952, 1616, 0, 0, 0, 0, 0, 0,
	1924, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1971, 0, 0, 0, 0, 0, 0, 0, 0, 1616,
	1616, 1616, 1616, 1616, 1616, 1616, 0, 1977, 0, 0,
	0, 1495, 1495, 0, 1495, 0, 1923, 0, 0, 1494,
	0, 0, 0, 0, 0, 0, 0, 1943, 0, 0,
	0, 0, 1617, 1617, 0, 0, 1940, 0, 0, 0,
	0, 0, 0, 0, 0, 1495, 0, 0, 0, 1494,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1921, 1922, 0, 1954, 1955, 1956,
	1965, 1966, 1967, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1958, 1952, 0,
	0, 0, 1494, 0, 1616, 0, 1924, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1971, 0, 0, 0,
	0, 0, 0, 0, 1946, 1947, 1948, 1949, 1495, 0,
	0, 0, 0, 1977, 1929, 0, 0, 0, 0, 0,
	0, 1494, 1923, 0, 0, 0, 0, 0, 1495, 0,
	0, 0, 0, 1943, 0, 0, 0, 0, 0, 0,
	0, 0, 1940, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1962, 0, 0, 1972, 0,
	0, 0, 0, 0, 0, 1951, 1953, 0, 0, 0,
	1617, 1617, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1968, 0, 1969, 0, 0, 0, 0, 0,
	0, 1938, 1939, 1494, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1960,
	1495, 1616, 1616, 1616, 0, 1617, 0, 0, 0, 0,
	1946, 1947, 1948, 1949, 1944, 0, 0, 0, 0, 0,
	1929, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1617, 1617, 1617, 1617, 1617, 1617, 1617, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1495, 1494, 0, 0, 1616, 0, 0, 0, 0,
	0, 1962, 1970, 0, 1972, 0, 0, 0, 0, 0,
	0, 1951, 1953, 0, 0, 0, 0, 0, 0, 0,
	0, 1495, 0, 1959, 0, 0, 0, 0, 1968, 0,
	1969, 0, 0, 0, 1974, 0, 0, 1938, 1939, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1960, 0, 0, 0, 0,
	0, 0, 0, 0, 1495, 0, 1617, 0, 0, 0,
	1944, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1950, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1495, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1945, 0, 0, 1970, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1959,
	0, 0, 0, 1963, 0, 0, 0, 0, 0, 0,
	1974, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1495, 1976, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1617, 1617, 1617, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1616, 0, 0, 1950, 0,
	0, 0, 0, 0, 0, 1616, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1945, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1495, 0, 0, 1617, 0, 0,
	0, 0, 1961, 0, 0, 0, 0, 0, 0, 1963,
	0, 0, 0, 1935, 1936, 1942, 1964, 1941, 1937, 0,
	1934, 1932, 1933, 1925, 1926, 1927, 1928, 1930, 1931, 0,
	0, 0, 0, 0, 4953, 0, 0, 0, 0, 0,
	0, 0, 1976, 0, 0, 0, 0, 0, 1616, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1961, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1935,
	1936, 1942, 1964, 1941, 1937, 0, 1934, 1932, 1933, 1925,
	1926, 1927, 1928, 1930, 1931, 0, 0, 0, 0, 0,
	4856, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1492, 0, 1617, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1617, 0, 0,
	0, 0, 291, 292, 294, 293, 295, 296, 297, 298,
	1498, 299, 300, 1499, 1500, 1501, 0, 1502, 676, 1503,
	1504, 1505, 301, 1506, 302, 303, 1276, 304, 305, 306,
	307, 308, 309, 310, 677, 678, 0, 311, 679, 312,
	680, 1507, 681, 313, 314, 315, 316, 317, 318, 1508,
	1509, 0, 319, 682, 683, 684, 1510, 320, 321, 685,
	1511, 1578, 1512, 322, 323, 324, 325, 326, 327, 328,
	329, 0, 1513, 331, 332, 333, 330, 334, 1514, 335,
	1617, 336, 337, 338, 339, 340, 341, 1515, 342, 343,
	344, 1277, 345, 346, 347, 1516, 1517, 1519, 1518, 1520,
	1521, 1522, 348, 349, 350, 351, 352, 0, 353, 355,
	686, 687, 1523, 358, 354, 356, 1524, 359, 357, 360,
	1525, 361, 362, 363, 1526, 1527, 364, 365, 366, 1528,
	367, 368, 369, 1529, 370, 371, 372, 1530, 373, 374,
	688, 375, 376, 377, 379, 381, 378, 380, 382, 383,
	384, 385, 689, 690, 386, 1531, 288, 1532, 0, 0,
	0, 0, 387, 388, 389, 691, 0, 0, 0, 390,
	1533, 391, 392, 393, 1534, 394, 1535, 1278, 395, 396,
	397, 692, 693, 398, 399, 400, 401, 402, 403, 404,
	405, 406, 1536, 407, 694, 1537, 695, 408, 1538, 409,
	410, 411, 412, 413, 414, 696, 697, 698, 502, 1280,
	415, 416, 1539, 417, 418, 419, 420, 421, 0, 0,
	0, 289, 422, 423, 424, 1540, 1279, 503, 425, 699,
	700, 1541, 701, 1542, 426, 427, 1281, 702, 1282, 428,
	429, 430, 1283, 431, 0, 0, 0, 432, 433, 434,
	435, 436, 437, 1543, 438, 440, 439, 1544, 441, 703,
	1284, 442, 443, 1285, 1545, 444, 445, 446, 447, 448,
	449, 452, 1546, 1547, 450, 451, 453, 454, 0, 455,
	456, 458, 461, 457, 459, 460, 462, 475, 463, 464,
	465, 466, 467, 468, 469, 470, 471, 472, 473, 474,
	477, 0, 476, 1286, 478, 479, 480, 481, 482, 489,
	491, 492, 487, 488, 490, 493, 494, 496, 484, 485,
	486, 1287, 495, 483, 1548, 290, 1288, 497, 498, 499,
	500, 1549, 704, 501, 705, 504, 505, 1550, 0, 506,
	0, 507, 1551, 1552, 509, 510, 511, 1553, 1554, 512,
	513, 706, 1289, 514, 1290, 707, 515, 516, 508, 517,
	518, 519, 520, 521, 522, 523, 524, 525, 1555, 526,
	527, 708, 528, 529, 530, 709, 531, 532, 533, 710,
	534, 711, 535, 536, 1556, 537, 538, 539, 0, 540,
	541, 542, 543, 544, 545, 546, 712, 547, 548, 550,
	549, 551, 1557, 552, 0, 553, 554, 555, 0, 0,
	0, 0, 0, 556, 557, 559, 0, 560, 561, 562,
	563, 558, 564, 565, 566, 567, 568, 1558, 569, 570,
	571, 1291, 572, 573, 574, 575, 576, 713, 577, 0,
	578, 579, 586, 587, 588, 580, 581, 582, 589, 590,
	591, 592, 593, 1559, 595, 596, 594, 597, 598, 599,
	1560, 600, 601, 583, 584, 602, 603, 1292, 604, 605,
	606, 607, 608, 609, 610, 714, 0, 611, 1561, 612,
	613, 614, 615, 616, 618, 585, 619, 624, 625, 715,
	620, 621, 622, 623, 716, 627, 628, 1562, 629, 630,
	0, 626, 617, 1563, 631, 632, 633, 634, 635, 636,
	0, 637, 638, 1564, 639, 717, 718, 719, 720, 1565,
	649, 1566, 640, 641, 642, 643, 721, 644, 722, 1567,
	645, 646, 647, 648, 0, 650, 651, 1568, 1569, 652,
	653, 655, 657, 658, 654, 656, 659, 1570, 660, 1571,
	0, 661, 662, 663, 723, 724, 725, 1572, 665, 664,
	666, 667, 668, 726, 669, 670, 1573, 1574, 1575, 1576,
	671, 672, 727, 673, 674, 675, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1492, 0, 0,
	0, 0, 0, 0, 0, 2933, 0, 0, 0, 0,
	0, 0, 0, 2934, 291, 292, 294, 293, 295, 296,
	297, 298, 1498, 299, 300, 1499, 1500, 1501, 0, 1502,
	676, 1503, 1504, 1505, 301, 1506, 302, 303, 1276, 304,
	305, 306, 307, 308, 309, 310, 677, 678, 0, 311,
	679, 312, 680, 1507, 681, 313, 314, 315, 316, 317,
	318, 1508, 1509, 0, 319, 682, 683, 684, 1510, 320,
	321, 685, 1511, 1578, 1512, 322, 323, 324, 325, 326,
	327, 328, 329, 0, 1513, 331, 332, 333, 330, 334,
	1514, 335, 0, 336, 337, 338, 339, 340, 341, 1515,
	342, 343, 344, 1277, 345, 346, 347, 1516, 1517, 1519,
	1518, 1520, 1521, 1522, 348, 349, 350, 351, 352, 0,
	353, 355, 686, 687, 1523, 358, 354, 356, 1524, 359,
	357, 360, 1525, 361, 362, 363, 1526, 1527, 364, 365,
	366, 1528, 367, 368, 369, 1529, 370, 371, 372, 1530,
	373, 374, 688, 375, 376, 377, 379, 381, 378, 380,
	382, 383, 384, 385, 689, 690, 386, 1531, 288, 1532,
	0, 0, 0, 0, 387, 388, 389, 691, 0, 0,
	0, 390, 1533, 391, 392, 393, 1534, 394, 1535, 1278,
	395, 396, 397, 692, 693, 398, 399, 400, 401, 402,
	403, 404, 405, 406, 1536, 407, 694, 1537, 695, 408,
	1538, 409, 410, 411, 412, 413, 414, 696, 697, 698,
	502, 1280, 415, 416, 1539, 417, 418, 419, 420, 421,
	0, 0, 0, 289, 422, 423, 424, 1540, 1279, 503,
	425, 699, 700, 1541, 701, 1542, 426, 427, 1281, 702,
	1282, 428, 429, 430, 1283, 431, 0, 0, 0, 432,
	433, 434, 435, 436, 437, 1543, 438, 440, 439, 1544,
	441, 703, 1284, 442, 443, 1285, 1545, 444, 445, 446,
	447, 448, 449, 452, 1546, 1547, 450, 451, 453, 454,
	0, 455, 456, 458, 461, 457, 459, 460, 462, 475,
	463, 464, 465, 466, 467, 468, 469, 470, 471, 472,
	473, 474, 477, 0, 476, 1286, 478, 479, 480, 481,
	482, 489, 491, 492, 487, 488, 490, 493, 494, 496,
	484, 485, 486, 1287, 495, 483, 1548, 290, 1288, 497,
	498, 499, 500, 1549, 704, 501, 705, 504, 505, 1550,
	0, 506, 0, 507, 1551, 1552, 509, 510, 511, 1553,
	1554, 512, 513, 706, 1289, 514, 1290, 707, 515, 516,
	508, 517, 518, 519, 520, 521, 522, 523, 524, 525,
	1555, 526, 527, 708, 528, 529, 530, 709, 531, 532,
	533, 710, 534, 711, 535, 536, 1556, 537, 538, 539,
	0, 540, 541, 542, 543, 544, 545, 546, 712, 547,
	548, 550, 549, 551, 1557, 552, 0, 553, 554, 555,
	0, 0, 0, 0, 0, 556, 557, 559, 0, 560,
	561, 562, 563, 558, 564, 565, 566, 567, 568, 1558,
	569, 570, 571, 1291, 572, 573, 574, 575, 576, 713,
	577, 0, 578, 579, 586, 587, 588, 580, 581, 582,
	589, 590, 591, 592, 593, 1559, 595, 596, 594, 597,
	598, 599, 1560, 600, 601, 583, 584, 602, 603, 1292,
	604, 605, 606, 607, 608, 609, 610, 714, 0, 611,
	1561, 612, 613, 614, 615, 616, 618, 585, 619, 624,
	625, 715, 620, 621, 622, 623, 716, 627, 628, 1562,
	629, 630, 0, 626, 617, 1563, 631, 632, 633, 634,
	635, 636, 0, 637, 638, 1564, 639, 717, 718, 719,
	720, 1565, 649, 1566, 640, 641, 642, 643, 721, 644,
	722, 1567, 645, 646, 647, 648, 0, 650, 651, 1568,
	1569, 652, 653, 655, 657, 658, 654, 656, 659, 1570,
	660, 1571, 0, 661, 662, 663, 723, 724, 725, 1572,
	665, 664, 666, 667, 668, 726, 669, 670, 1573, 1574,
	1575, 1576, 671, 672, 727, 673, 674, 675, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1492, 0, 0,
	0, 3958, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3960, 291, 292, 294, 293, 295, 296,
	297, 298, 1498, 299, 300, 1499, 1500, 1501, 0, 1502,
	676, 1503, 1504, 1505, 301, 1506, 302, 303, 1276, 304,
	305, 306, 307, 308, 309, 310, 677, 678, 0, 311,
	679, 312, 680, 1507, 681, 313, 314, 315, 316, 317,
	318, 1508, 1509, 0, 319, 682, 683, 684, 1510, 320,
	321, 685, 1511, 1578, 1512, 322, 323, 324, 325, 326,
	327, 328, 329, 0, 1513, 331, 332, 333, 330, 334,
	1514, 335, 0, 336, 337, 338, 339, 340, 341, 1515,
	342, 343, 344, 1277, 345, 346, 347, 1516, 1517, 1519,
	1518, 1520, 1521, 1522, 348, 349, 350, 351, 352, 0,
	353, 355, 686, 687, 1523, 358, 354, 356, 1524, 359,
	357, 360, 1525, 361, 362, 363, 1526, 1527, 364, 365,
	366, 1528, 367, 368, 369, 1529, 370, 371, 372, 1530,
	373, 374, 688, 375, 376, 377, 379, 381, 378, 380,
	382, 383, 384, 385, 689, 690, 386, 1531, 288, 1532,
	0, 0, 0, 0, 387, 388, 389, 691, 0, 0,
	0, 390, 1533, 391, 392, 393, 1534, 394, 1535, 1278,
	395, 396, 397, 692, 693, 398, 399, 400, 401, 402,
	403, 404, 405, 406, 1536, 407, 694, 1537, 695, 408,
	1538, 409, 410, 411, 412, 413, 414, 696, 697, 698,
	502, 1280, 415, 416, 1539, 417, 418, 419, 420, 421,
	0, 0, 0, 289, 422, 423, 424, 1540, 1279, 503,
	425, 699, 700, 1541, 701, 1542, 426, 427, 1281, 702,
	1282, 428, 429, 430, 1283, 431, 0, 0, 0, 432,
	433, 434, 435, 436, 437, 1543, 438, 440, 439, 1544,
	441, 703, 1284, 442, 443, 1285, 1545, 444, 445, 446,
	447, 448, 449, 452, 1546, 1547, 450, 451, 453, 454,
	0, 455, 456, 458, 461, 457, 459, 460, 462, 475,
	463, 464, 465, 466, 467, 468, 469, 470, 471, 472,
	473, 474, 477, 0, 476, 1286, 478, 479, 480, 481,
	482, 489, 491, 492, 487, 488, 490, 493, 494, 496,
	484, 485, 486, 1287, 495, 483, 1548, 290, 1288, 497,
	498, 499, 500, 1549, 704, 501, 705, 504, 505, 1550,
	0, 506, 0, 507, 1551, 1552, 509, 510, 511, 1553,
	1554, 512, 513, 706, 1289, 514, 1290, 707, 515, 516,
	508, 517, 518, 519, 520, 521, 522, 523, 524, 525,
	1555, 526, 527, 708, 528, 529, 530, 709, 531, 532,
	533, 710, 534, 711, 535, 536, 1556, 537, 538, 539,
	0, 540, 541, 542, 543, 544, 545, 546, 712, 547,
	548, 550, 549, 551, 1557, 552, 0, 553, 554, 555,
	0, 0, 0, 0, 0, 556, 557, 559, 0, 560,
	561, 562, 563, 558, 564, 565, 566, 567, 568, 1558,
	569, 570, 571, 1291, 572, 573, 574, 575, 576, 713,
	577, 0, 578, 579, 586, 587, 588, 580, 581, 582,
	589, 590, 591, 592, 593, 1559, 595, 596, 594, 597,
	598, 599, 1560, 600, 601, 583, 584, 602, 603, 1292,
	604, 605, 606, 607, 608, 609, 610, 714, 0, 611,
	1561, 612, 613, 614, 615, 616, 618, 585, 619, 624,
	625, 715, 620, 621, 622, 623, 716, 627, 628, 1562,
	629, 630, 0, 626, 617, 1563, 631, 632, 633, 634,
	635, 636, 0, 637, 638, 1564, 639, 717, 718, 719,
	720, 1565, 649, 1566, 640, 641, 642, 643, 721, 644,
	722, 1567, 645, 646, 647, 648, 0, 650, 651, 1568,
	1569, 652, 653, 655, 657, 658, 654, 656, 659, 1570,
	660, 1571, 0, 661, 662, 663, 723, 724, 725, 1572,
	665, 664, 666, 667, 668, 726, 669, 670, 1573, 1574,
	1575, 1576, 671, 672, 727, 673, 674, 675, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1492, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4382, 291, 292,
	294, 293, 295, 296, 297, 298, 1498, 299, 300, 1499,
	1500, 1501, 0, 1502, 676, 1503, 1504, 1505, 301, 1506,
	302, 303, 1276, 304, 305, 306, 307, 308, 309, 310,
	677, 678, 0, 311, 679, 312, 680, 1507, 681, 313,
	314, 315, 316, 317, 318, 1508, 1509, 0, 319, 682,
	683, 684, 1510, 320, 321, 685, 1511, 1578, 1512, 322,
	323, 324, 325, 326, 327, 328, 329, 0, 1513, 331,
	332, 333, 330, 334, 1514, 335, 0, 336, 337, 338,
	339, 340, 341, 1515, 342, 343, 344, 1277, 345, 346,
	347, 1516, 1517, 1519, 1518, 1520, 1521, 1522, 348, 349,
	350, 351, 352, 0, 353, 355, 686, 687, 1523, 358,
	354, 356, 1524, 359, 357, 360, 1525, 361, 362, 363,
	1526, 1527, 364, 365, 366, 1528, 367, 368, 369, 1529,
	370, 371, 372, 1530, 373, 374, 688, 375, 376, 377,
	379, 381, 378, 380, 382, 383, 384, 385, 689, 690,
	386, 1531, 288, 1532, 0, 0, 0, 0, 387, 388,
	389, 691, 0, 0, 0, 390, 1533, 391, 392, 393,
	1534, 394, 1535, 1278, 395, 396, 397, 692, 693, 398,
	399, 400, 401, 402, 403, 404, 405, 406, 1536, 407,
	694, 1537, 695, 408, 1538, 409, 410, 411, 412, 413,
	414, 696, 697, 698, 502, 1280, 415, 416, 1539, 417,
	418, 419, 420, 421, 0, 0, 0, 289, 422, 423,
	424, 1540, 1279, 503, 425, 699, 700, 1541, 701, 1542,
	426, 427, 1281, 702, 1282, 428, 429, 430, 1283, 431,
	0, 0, 0, 432, 433, 434, 435, 436, 437, 1543,
	438, 440, 439, 1544, 441, 703, 1284, 442, 443, 1285,
	1545, 444, 445, 446, 447, 448, 449, 452, 1546, 1547,
	450, 451, 453, 454, 0, 455, 456, 458, 461, 457,
	459, 460, 462, 475, 463, 464, 465, 466, 467, 468,
	469, 470, 471, 472, 473, 474, 477, 0, 476, 1286,
	478, 479, 480, 481, 482, 489, 491, 492, 487, 488,
	490, 493, 494, 496, 484, 485, 486, 1287, 495, 483,
	1548, 290, 1288, 497, 498, 499, 500, 1549, 704, 501,
	705, 504, 505, 1550, 0, 506, 0, 507, 1551, 1552,
	509, 510, 511, 1553, 1554, 512, 513, 706, 1289, 514,
	1290, 707, 515, 516, 508, 517, 518, 519, 520, 521,
	522, 523, 524, 525, 1555, 526, 527, 708, 528, 529,
	530, 709, 531, 532, 533, 710, 534, 711, 535, 536,
	1556, 537, 538, 539, 0, 540, 541, 542, 543, 544,
	545, 546, 712, 547, 548, 550, 549, 551, 1557, 552,
	0, 553, 554, 555, 0, 0, 0, 0, 0, 556,
	557, 559, 0, 560, 561, 562, 563, 558, 564, 565,
	566, 567, 568, 1558, 569, 570, 571, 1291, 572, 573,
	574, 575, 576, 713, 577, 0, 578, 579, 586, 587,
	588, 580, 581, 582, 589, 590, 591, 592, 593, 1559,
	595, 596, 594, 597, 598, 599, 1560, 600, 601, 583,
	584, 602, 603, 1292, 604, 605, 606, 607, 608, 609,
	610, 714, 0, 611, 1561, 612, 613, 614, 615, 616,
	618, 585, 619, 624, 625, 715, 620, 621, 622, 623,
	716, 627, 628, 1562, 629, 630, 0, 626, 617, 1563,
	631, 632, 633, 634, 635, 636, 0, 637, 638, 1564,
	639, 717, 718, 719, 720, 1565, 649, 1566, 640, 641,
	642, 643, 721, 644, 722, 1567, 645, 646, 647, 648,
	0, 650, 651, 1568, 1569, 652, 653, 655, 657, 658,
	654, 656, 659, 1570, 660, 1571, 0, 661, 662, 663,
	723, 724, 725, 1572, 665, 664, 666, 667, 668, 726,
	669, 670, 1573, 1574, 1575, 1576, 671, 672, 727, 673,
	674, 675, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1492, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4380, 291, 292, 294, 293, 295, 296, 297, 298,
	1498, 299, 300, 1499, 1500, 1501, 0, 1502, 676, 1503,
	1504, 1505, 301, 1506, 302, 303, 1276, 304, 305, 306,
	307, 308, 309, 310, 677, 678, 0, 311, 679, 312,
	680, 1507, 681, 313, 314, 315, 316, 317, 318, 1508,
	1509, 0, 319, 682, 683, 684, 1510, 320, 321, 685,
	1511, 1578, 1512, 322, 323, 324, 325, 326, 327, 328,
	329, 0, 1513, 331, 332, 333, 330, 334, 1514, 335,
	0, 336, 337, 338, 339, 340, 341, 1515, 342, 343,
	344, 1277, 345, 346, 347, 1516, 1517, 1519, 1518, 1520,
	1521, 1522, 348, 349, 350, 351, 352, 0, 353, 355,
	686, 687, 1523, 358, 354, 356, 1524, 359, 357, 360,
	1525, 361, 362, 363, 1526, 1527, 364, 365, 366, 1528,
	367, 368, 369, 1529, 370, 371, 372, 1530, 373, 374,
	688, 375, 376, 377, 379, 381, 378, 380, 382, 383,
	384, 385, 689, 690, 386, 1531, 288, 1532, 0, 0,
	0, 0, 387, 388, 389, 691, 0, 0, 0, 390,
	1533, 391, 392, 393, 1534, 394, 1535, 1278, 395, 396,
	397, 692, 693, 398, 399, 400, 401, 402, 403, 404,
	405, 406, 1536, 407, 694, 1537, 695, 408, 1538, 409,
	410, 411, 412, 413, 414, 696, 697, 698, 502, 1280,
	415, 416, 1539, 417, 418, 419, 420, 421, 0, 0,
	0, 289, 422, 423, 424, 1540, 1279, 503, 425, 699,
	700, 1541, 701, 1542, 426, 427, 1281, 702, 1282, 428,
	429, 430, 1283, 431, 0, 0, 0, 432, 433, 434,
	435, 436, 437, 1543, 438, 440, 439, 1544, 441, 703,
	1284, 442, 443, 1285, 1545, 444, 445, 446, 447, 448,
	449, 452, 1546, 1547, 450, 451, 453, 454, 0, 455,
	456, 458, 461, 457, 459, 460, 462, 475, 463, 464,
	465, 466, 467, 468, 469, 470, 471, 472, 473, 474,
	477, 0, 476, 1286, 478, 479, 480, 481, 482, 489,
	491, 492, 487, 488, 490, 493, 494, 496, 484, 485,
	486, 1287, 495, 483, 1548, 290, 1288, 497, 498, 499,
	500, 1549, 704, 501, 705, 504, 505, 1550, 0, 506,
	0, 507, 1551, 1552, 509, 510, 511, 1553, 1554, 512,
	513, 706, 1289, 514, 1290, 707, 515, 516, 508, 517,
	518, 519, 520, 521, 522, 523, 524, 525, 1555, 526,
	527, 708, 528, 529, 530, 709, 531, 532, 533, 710,
	534, 711, 535, 536, 1556, 537, 538, 539, 0, 540,
	541, 542, 543, 544, 545, 546, 712, 547, 548, 550,
	549, 551, 1557, 552, 0, 553, 554, 555, 0, 0,
	0, 0, 0, 556, 557, 559, 0, 560, 561, 562,
	563, 558, 564, 565, 566, 567, 568, 1558, 569, 570,
	571, 1291, 572, 573, 574, 575, 576, 713, 577, 0,
	578, 579, 586, 587, 588, 580, 581, 582, 589, 590,
	591, 592, 593, 1559, 595, 596, 594, 597, 598, 599,
	1560, 600, 601, 583, 584, 602, 603, 1292, 604, 605,
	606, 607, 608, 609, 610, 714, 0, 611, 1561, 612,
	613, 614, 615, 616, 618, 585, 619, 624, 625, 715,
	620, 621, 622, 623, 716, 627, 628, 1562, 629, 630,
	0, 626, 617, 1563, 631, 632, 633, 634, 635, 636,
	0, 637, 638, 1564, 639, 717, 718, 719, 720, 1565,
	649, 1566, 640, 641, 642, 643, 721, 644, 722, 1567,
	645, 646, 647, 648, 0, 650, 651, 1568, 1569, 652,
	653, 655, 657, 658, 654, 656, 659, 1570, 660, 1571,
	0, 661, 662, 663, 723, 724, 725, 1572, 665, 664,
	666, 667, 668, 726, 669, 670, 1573, 1574, 1575, 1576,
	671, 672, 727, 673, 674, 675, 0, 0, 0, 0,
	0, 0, 0, 1492, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4614,
	291, 292, 294, 293, 295, 296, 297, 298, 1498, 299,
	300, 1499, 1500, 1501, 0, 1502, 676, 1503, 1504, 1505,
	301, 1506, 302, 303, 1276, 304, 305, 306, 307, 308,
	309, 310, 677, 678, 0, 311, 679, 312, 680, 1507,
	681, 313, 314, 315, 316, 317, 318, 1508, 1509, 0,
	319, 682, 683, 684, 1510, 320, 321, 685, 1511, 1578,
	1512, 322, 323, 324, 325, 326, 327, 328, 329, 0,
	1513, 331, 332, 333, 330, 334, 1514, 335, 0, 336,
	337, 338, 339, 340, 341, 1515, 342, 343, 344, 1277,
	345, 346, 347, 1516, 1517, 1519, 1518, 1520, 1521, 1522,
	348, 349, 350, 351, 352, 0, 353, 355, 686, 687,
	1523, 358, 354, 356, 1524, 359, 357, 360, 1525, 361,
	362, 363, 1526, 1527, 364, 365, 366, 1528, 367, 368,
	369, 1529, 370, 371, 372, 1530, 373, 374, 688, 375,
	376, 377, 379, 381, 378, 380, 382, 383, 384, 385,
	689, 690, 386, 1531, 288, 1532, 0, 0, 0, 0,
	387, 388, 389, 691, 0, 0, 0, 390, 1533, 391,
	392, 393, 1534, 394, 1535, 1278, 395, 396, 397, 692,
	693, 398, 399, 400, 401, 402, 403, 404, 405, 406,
	1536, 407, 694, 1537, 695, 408, 1538, 409, 410, 411,
	412, 413, 414, 696, 697, 698, 502, 1280, 415, 416,
	1539, 417, 418, 419, 420, 421, 0, 0, 0, 289,
	422, 423, 424, 1540, 1279, 503, 425, 699, 700, 1541,
	701, 1542, 426, 427, 1281, 702, 1282, 428, 429, 430,
	1283, 431, 0, 0, 0, 432, 433, 434, 435, 436,
	437, 1543, 438, 440, 439, 1544, 441, 703, 1284, 442,
	443, 1285, 1545, 444, 445, 446, 447, 448, 449, 452,
	1546, 1547, 450, 451, 453, 454, 0, 455, 456, 458,
	461, 457, 459, 460, 462, 475, 463, 464, 465, 466,
	467, 468, 469, 470, 471, 472, 473, 474, 477, 0,
	476, 1286, 478, 479, 480, 481, 482, 489, 491, 492,
	487, 488, 490, 493, 494, 496, 484, 485, 486, 1287,
	495, 483, 1548, 290, 1288, 497, 498, 499, 500, 1549,
	704, 501, 705, 504, 505, 1550, 0, 506, 0, 507,
	1551, 1552, 509, 510, 511, 1553, 1554, 512, 513, 706,
	1289, 514, 1290, 707, 515, 516, 508, 517, 518, 519,
	520, 521, 522, 523, 524, 525, 1555, 526, 527, 708,
	528, 529, 530, 709, 531, 532, 533, 710, 534, 711,
	535, 536, 1556, 537, 538, 539, 0, 540, 541, 542,
	543, 544, 545, 546, 712, 547, 548, 550, 549, 551,
	1557, 552, 0, 553, 554, 555, 0, 0, 0, 0,
	0, 556, 557, 559, 0, 560, 561, 562, 563, 558,
	564, 565, 566, 567, 568, 1558, 569, 570, 571, 1291,
	572, 573, 574, 575, 576, 713, 577, 0, 578, 579,
	586, 587, 588, 580, 581, 582, 589, 590, 591, 592,
	593, 1559, 595, 596, 594, 597, 598, 599, 1560, 600,
	601, 583, 584, 602, 603, 1292, 604, 605, 606, 607,
	608, 609, 610, 714, 0, 611, 1561, 612, 613, 614,
	615, 616, 618, 585, 619, 624, 625, 715, 620, 621,
	622, 623, 716, 627, 628, 1562, 629, 630, 0, 626,
	617, 1563, 631, 632, 633, 634, 635, 636, 0, 637,
	638, 1564, 639, 717, 718, 719, 720, 1565, 649, 1566,
	640, 641, 642, 643, 721, 644, 722, 1567, 645, 646,
	647, 648, 0, 650, 651, 1568, 1569, 652, 653, 655,
	657, 658, 654, 656, 659, 1570, 660, 1571, 0, 661,
	662, 663, 723, 724, 725, 1572, 665, 664, 666, 667,
	668, 726, 669, 670, 1573, 1574, 1575, 1576, 671, 672,
	727, 673, 674, 675, 0, 0, 0, 0, 0, 0,
	0, 1492, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4477, 291, 292,
	294, 293, 295, 296, 297, 298, 1498, 299, 300, 1499,
	1500, 1501, 0, 1502, 676, 1503, 1504, 1505, 301, 1506,
	302, 303, 1276, 304, 305, 306, 307, 308, 309, 310,
	677, 678, 0, 311, 679, 312, 680, 1507, 681, 313,
	314, 315, 316, 317, 318, 1508, 1509, 0, 319, 682,
	683, 684, 1510, 320, 321, 685, 1511, 1578, 1512, 322,
	323, 324, 325, 326, 327, 328, 329, 0, 1513, 331,
	332, 333, 330, 334, 1514, 335, 0, 336, 337, 338,
	339, 340, 341, 1515, 342, 343, 344, 1277, 345, 346,
	347, 1516, 1517, 1519, 1518, 1520, 1521, 1522, 348, 349,
	350, 351, 352, 0, 353, 355, 686, 687, 1523, 358,
	354, 356, 1524, 359, 357, 360, 1525, 361, 362, 363,
	1526, 1527, 364, 365, 366, 1528, 367, 368, 369, 1529,
	370, 371, 372, 1530, 373, 374, 688, 375, 376, 377,
	379, 381, 378, 380, 382, 383, 384, 385, 689, 690,
	386, 1531, 288, 1532, 0, 0, 0, 0, 387, 388,
	389, 691, 0, 0, 0, 390, 1533, 391, 392, 393,
	1534, 394, 1535, 1278, 395, 396, 397, 692, 693, 398,
	399, 400, 401, 402, 403, 404, 405, 406, 1536, 407,
	694, 1537, 695, 408, 1538, 409, 410, 411, 412, 413,
	414, 696, 697, 698, 502, 1280, 415, 416, 1539, 417,
	418, 419, 420, 421, 0, 0, 0, 289, 422, 423,
	424, 1540, 1279, 503, 425, 699, 700, 1541, 701, 1542,
	426, 427, 1281, 702, 1282, 428, 429, 430, 1283, 431,
	0, 0, 0, 432, 433, 434, 435, 436, 437, 1543,
	438, 440, 439, 1544, 441, 703, 1284, 442, 443, 1285,
	1545, 444, 445, 446, 447, 448, 449, 452, 1546, 1547,
	450, 451, 453, 454, 0, 455, 456, 458, 461, 457,
	459, 460, 462, 475, 463, 464, 465, 466, 467, 468,
	469, 470, 471, 472, 473, 474, 477, 0, 476, 1286,
	478, 479, 480, 481, 482, 489, 491, 492, 487, 488,
	490, 493, 494, 496, 484, 485, 486, 1287, 495, 483,
	1548, 290, 1288, 497, 498, 499, 500, 1549, 704, 501,
	705, 504, 505, 1550, 0, 506, 0, 507, 1551, 1552,
	509, 510, 511, 1553, 1554, 512, 513, 706, 1289, 514,
	1290, 707, 515, 516, 508, 517, 518, 519, 520, 521,
	522, 523, 524, 525, 1555, 526, 527, 708, 528, 529,
	530, 709, 531, 532, 533, 710, 534, 711, 535, 536,
	1556, 537, 538, 539, 0, 540, 541, 542, 543, 544,
	545, 546, 712, 547, 548, 550, 549, 551, 1557, 552,
	0, 553, 554, 555, 0, 0, 0, 0, 0, 556,
	557, 559, 0, 560, 561, 562, 563, 558, 564, 565,
	566, 567, 568, 1558, 569, 570, 571, 1291, 572, 573,
	574, 575, 576, 713, 577, 0, 578, 579, 586, 587,
	588, 580, 581, 582, 589, 590, 591, 592, 593, 1559,
	595, 596, 594, 597, 598, 599, 1560, 600, 601, 583,
	584, 602, 603, 1292, 604, 605, 606, 607, 608, 609,
	610, 714, 0, 611, 1561, 612, 613, 614, 615, 616,
	618, 585, 619, 624, 625, 715, 620, 621, 622, 623,
	716, 627, 628, 1562, 629, 630, 0, 626, 617, 1563,
	631, 632, 633, 634, 635, 636, 0, 637, 638, 1564,
	639, 717, 718, 719, 720, 1565, 649, 1566, 640, 641,
	642, 643, 721, 644, 722, 1567, 645, 646, 647, 648,
	0, 650, 651, 1568, 1569, 652, 653, 655, 657, 658,
	654, 656, 659, 1570, 660, 1571, 0, 661, 662, 663,
	723, 724, 725, 1572, 665, 664, 666, 667, 668, 726,
	669, 670, 1573, 1574, 1575, 1576, 671, 672, 727, 673,
	674, 675, 0, 0, 0, 0, 0, 0, 0, 1492,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4309, 291, 292, 294, 293,
	295, 296, 297, 298, 1498, 299, 300, 1499, 1500, 1501,
	0, 1502, 676, 1503, 1504, 1505, 301, 1506, 302, 303,
	1276, 304, 305, 306, 307, 308, 309, 310, 677, 678,
	0, 311, 679, 312, 680, 1507, 681, 313, 314, 315,
	316, 317, 318, 1508, 1509, 0, 319, 682, 683, 684,
	1510, 320, 321, 685, 1511, 1578, 1512, 322, 323, 324,
	325, 326, 327, 328, 329, 0, 1513, 331, 332, 333,
	330, 334, 1514, 335, 0, 336, 337, 338, 339, 340,
	341, 1515, 342, 343, 344, 1277, 345, 346, 347, 1516,
	1517, 1519, 1518, 1520, 1521, 1522, 348, 349, 350, 351,
	352, 0, 353, 355, 686, 687, 1523, 358, 354, 356,
	1524, 359, 357, 360, 1525, 361, 362, 363, 1526, 1527,
	364, 365, 366, 1528, 367, 368, 369, 1529, 370, 371,
	372, 1530, 373, 374, 688, 375, 376, 377, 379, 381,
	378, 380, 382, 383, 384, 385, 689, 690, 386, 1531,
	288, 1532, 0, 0, 0, 0, 387, 388, 389, 691,
	0, 0, 0, 390, 1533, 391, 392, 393, 1534, 394,
	1535, 1278, 395, 396, 397, 692, 693, 398, 399, 400,
	401, 402, 403, 404, 405, 406, 1536, 407, 694, 1537,
	695, 408, 1538, 409, 410, 411, 412, 413, 414, 696,
	697, 698, 502, 1280, 415, 416, 1539, 417, 418, 419,
	420, 421, 0, 0, 0, 289, 422, 423, 424, 1540,
	1279, 503, 425, 699, 700, 1541, 701, 1542, 426, 427,
	1281, 702, 1282, 428, 429, 430, 1283, 431, 0, 0,
	0, 432, 433, 434, 435, 436, 437, 1543, 438, 440,
	439, 1544, 441, 703, 1284, 442, 443, 1285, 1545, 444,
	445, 446, 447, 448, 449, 452, 1546, 1547, 450, 451,
	453, 454, 0, 455, 456, 458, 461, 457, 459, 460,
	462, 475, 463, 464, 465, 466, 467, 468, 469, 470,
	471, 472, 473, 474, 477, 0, 476, 1286, 478, 479,
	480, 481, 482, 489, 491, 492, 487, 488, 490, 493,
	494, 496, 484, 485, 486, 1287, 495, 483, 1548, 290,
	1288, 497, 498, 499, 500, 1549, 704, 501, 705, 504,
	505, 1550, 0, 506, 0, 507, 1551, 1552, 509, 510,
	511, 1553, 1554, 512, 513, 706, 1289, 514, 1290, 707,
	515, 516, 508, 517, 518, 519, 520, 521, 522, 523,
	524, 525, 1555, 526, 527, 708, 528, 529, 530, 709,
	531, 532, 533, 710, 534, 711, 535, 536, 1556, 537,
	538, 539, 0, 540, 541, 542, 543, 544, 545, 546,
	712, 547, 548, 550, 549, 551, 1557, 552, 0, 553,
	554, 555, 0, 0, 0, 0, 0, 556, 557, 559,
	0, 560, 561, 562, 563, 558, 564, 565, 566, 567,
	568, 1558, 569, 570, 571, 1291, 572, 573, 574, 575,
	576, 713, 577, 0, 578, 579, 586, 587, 588, 580,
	581, 582, 589, 590, 591, 592, 593, 1559, 595, 596,
	594, 597, 598, 599, 1560, 600, 601, 583, 584, 602,
	603, 1292, 604, 605, 606, 607, 608, 609, 610, 714,
	0, 611, 1561, 612, 613, 614, 615, 616, 618, 585,
	619, 624, 625, 715, 620, 621, 622, 623, 716, 627,
	628, 1562, 629, 630, 0, 626, 617, 1563, 631, 632,
	633, 634, 635, 636, 0, 637, 638, 1564, 639, 717,
	718, 719, 720, 1565, 649, 1566, 640, 641, 642, 643,
	721, 644, 722, 1567, 645, 646, 647, 648, 0, 650,
	651, 1568, 1569, 652, 653, 655, 657, 658, 654, 656,
	659, 1570, 660, 1571, 0, 661, 662, 663, 723, 724,
	725, 1572, 665, 664, 666, 667, 668, 726, 669, 670,
	1573, 1574, 1575, 1576, 671, 672, 727, 673, 674, 675,
	0, 0, 0, 0, 0, 0, 0, 1492, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3976, 291, 292, 294, 293, 295, 296,
	297, 298, 1498, 299, 300, 1499, 1500, 1501, 0, 1502,
	676, 1503, 1504, 1505, 301, 1506, 302, 303, 1276, 304,
	305, 306, 307, 308, 309, 310, 677, 678, 0, 311,
	679, 312, 680, 1507, 681, 313, 314, 315, 316, 317,
	318, 1508, 1509, 0, 319, 682, 683, 684, 1510, 320,
	321, 685, 1511, 1578, 1512, 322, 323, 324, 325, 326,
	327, 328, 329, 0, 1513, 331, 332, 333, 330, 334,
	1514, 335, 0, 336, 337, 338, 339, 340, 341, 1515,
	342, 343, 344, 1277, 345, 346, 347, 1516, 1517, 1519,
	1518, 1520, 1521, 1522, 348, 349, 350, 351, 352, 0,
	353, 355, 686, 687, 1523, 358, 354, 356, 1524, 359,
	357, 360, 1525, 361, 362, 363, 1526, 1527, 364, 365,
	366, 1528, 367, 368, 369, 1529, 370, 371, 372, 1530,
	373, 374, 688, 375, 376, 377, 379, 381, 378, 380,
	382, 383, 384, 385, 689, 690, 386, 1531, 288, 1532,
	0, 0, 0, 0, 387, 388, 389, 691, 0, 0,
	0, 390, 1533, 391, 392, 393, 1534, 394, 1535, 1278,
	395, 396, 397, 692, 693, 398, 399, 400, 401, 402,
	403, 404, 405, 406, 1536, 407, 694, 1537, 695, 408,
	1538, 409, 410, 411, 412, 413, 414, 696, 697, 698,
	502, 1280, 415, 416, 1539, 417, 418, 419, 420, 421,
	0, 0, 0, 289, 422, 423, 424, 1540, 1279, 503,
	425, 699, 700, 1541, 701, 1542, 426, 427, 1281, 702,
	1282, 428, 429, 430, 1283, 431, 0, 0, 0, 432,
	433, 434, 435, 436, 437, 1543, 438, 440, 439, 1544,
	441, 703, 1284, 442, 443, 1285, 1545, 444, 445, 446,
	447, 448, 449, 452, 1546, 1547, 450, 451, 453, 454,
	0, 455, 456, 458, 461, 457, 459, 460, 462, 475,
	463, 464, 465, 466, 467, 468, 469, 470, 471, 472,
	473, 474, 477, 0, 476, 1286, 478, 479, 480, 481,
	482, 489, 491, 492, 487, 488, 490, 493, 494, 496,
	484, 485, 486, 1287, 495, 483, 1548, 290, 1288, 497,
	498, 499, 500, 1549, 704, 501, 705, 504, 505, 1550,
	0, 506, 0, 507, 1551, 1552, 509, 510, 511, 1553,
	1554, 512, 513, 706, 1289, 514, 1290, 707, 515, 516,
	508, 517, 518, 519, 520, 521, 522, 523, 524, 525,
	1555, 526, 527, 708, 528, 529, 530, 709, 531, 532,
	533, 710, 534, 711, 535, 536, 1556, 537, 538, 539,
	0, 540, 541, 542, 543, 544, 545, 546, 712, 547,
	548, 550, 549, 551, 1557, 552, 0, 553, 554, 555,
	0, 0, 0, 0, 0, 556, 557, 559, 0, 560,
	561, 562, 563, 558, 564, 565, 566, 567, 568, 1558,
	569, 570, 571, 1291, 572, 573, 574, 575, 576, 713,
	577, 0, 578, 579, 586, 587, 588, 580, 581, 582,
	589, 590, 591, 592, 593, 1559, 595, 596, 594, 597,
	598, 599, 1560, 600, 601, 583, 584, 602, 603, 1292,
	604, 605, 606, 607, 608, 609, 610, 714, 0, 611,
	1561, 612, 613, 614, 615, 616, 618, 585, 619, 624,
	625, 715, 620, 621, 622, 623, 716, 627, 628, 1562,
	629, 630, 0, 626, 617, 1563, 631, 632, 633, 634,
	635, 636, 0, 637, 638, 1564, 639, 717, 718, 719,
	720, 1565, 649, 1566, 640, 641, 642, 643, 721, 644,
	722, 1567, 645, 646, 647, 648, 0, 650, 651, 1568,
	1569, 652, 653, 655, 657, 658, 654, 656, 659, 1570,
	660, 1571, 0, 661, 662, 663, 723, 724, 725, 1572,
	665, 664, 666, 667, 668, 726, 669, 670, 1573, 1574,
	1575, 1576, 671, 672, 727, 673, 674, 675, 0, 0,
	0, 0, 0, 0, 0, 1492, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3793, 291, 292, 294, 293, 295, 296, 297, 298,
	1498, 299, 300, 1499, 1500, 1501, 0, 1502, 676, 1503,
	1504, 1505, 301, 1506, 302, 303, 1276, 304, 305, 306,
	307, 308, 309, 310, 677, 678, 0, 311, 679, 312,
	680, 1507, 681, 313, 314, 315, 316, 317, 318, 1508,
	1509, 0, 319, 682, 683, 684, 1510, 320, 321, 685,
	1511, 1578, 1512, 322, 323, 324, 325, 326, 327, 328,
	329, 0, 1513, 331, 332, 333, 330, 334, 1514, 335,
	0, 336, 337, 338, 339, 340, 341, 1515, 342, 343,
	344, 1277, 345, 346, 347, 1516, 1517, 1519, 1518, 1520,
	1521, 1522, 348, 349, 350, 351, 352, 0, 353, 355,
	686, 687, 1523, 358, 354, 356, 1524, 359, 357, 360,
	1525, 361, 362, 363, 1526, 1527, 364, 365, 366, 1528,
	367, 368, 369, 1529, 370, 371, 372, 1530, 373, 374,
	688, 375, 376, 377, 379, 381, 378, 380, 382, 383,
	384, 385, 689, 690, 386, 1531, 288, 1532, 0, 0,
	0, 0, 387, 388, 389, 691, 0, 0, 0, 390,
	1533, 391, 392, 393, 1534, 394, 1535, 1278, 395, 396,
	397, 692, 693, 398, 399, 400, 401, 402, 403, 404,
	405, 406, 1536, 407, 694, 1537, 695, 408, 1538, 409,
	410, 411, 412, 413, 414, 696, 697, 698, 502, 1280,
	415, 416, 1539, 417, 418, 419, 420, 421, 0, 0,
	0, 289, 422, 423, 424, 1540, 1279, 503, 425, 699,
	700, 1541, 701, 1542, 426, 427, 1281, 702, 1282, 428,
	429, 430, 1283, 431, 0, 0, 0, 432, 433, 434,
	435, 436, 437, 1543, 438, 440, 439, 1544, 441, 703,
	1284, 442, 443, 1285, 1545, 444, 445, 446, 447, 448,
	449, 452, 1546, 1547, 450, 451, 453, 454, 0, 455,
	456, 458, 461, 457, 459, 460, 462, 475, 463, 464,
	465, 466, 467, 468, 469, 470, 471, 472, 473, 474,
	477, 0, 476, 1286, 478, 479, 480, 481, 482, 489,
	491, 492, 487, 488, 490, 493, 494, 496, 484, 485,
	486, 1287, 495, 483, 1548, 290, 1288, 497, 498, 499,
	500, 1549, 704, 501, 705, 504, 505, 1550, 0, 506,
	0, 507, 1551, 1552, 509, 510, 511, 1553, 1554, 512,
	513, 706, 1289, 514, 1290, 707, 515, 516, 508, 517,
	518, 519, 520, 521, 522, 523, 524, 525, 1555, 526,
	527, 708, 528, 529, 530, 709, 531, 532, 533, 710,
	534, 711, 535, 536, 1556, 537, 538, 539, 0, 540,
	541, 542, 543, 544, 545, 546, 712, 547, 548, 550,
	549, 551, 1557, 552, 0, 553, 554, 555, 0, 0,
	0, 0, 0, 556, 557, 559, 0, 560, 561, 562,
	563, 558, 564, 565, 566, 567, 568, 1558, 569, 570,
	571, 1291, 572, 573, 574, 575, 576, 713, 577, 0,
	578, 579, 586, 587, 588, 580, 581, 582, 589, 590,
	591, 592, 593, 1559, 595, 596, 594, 597, 598, 599,
	1560, 600, 601, 583, 584, 602, 603, 1292, 604, 605,
	606, 607, 608, 609, 610, 714, 0, 611, 1561, 612,
	613, 614, 615, 616, 618, 585, 619, 624, 625, 715,
	620, 621, 622, 623, 716, 627, 628, 1562, 629, 630,
	0, 626, 617, 1563, 631, 632, 633, 634, 635, 636,
	0, 637, 638, 1564, 639, 717, 718, 719, 720, 1565,
	649, 1566, 640, 641, 642, 643, 721, 644, 722, 1567,
	645, 646, 647, 648, 0, 650, 651, 1568, 1569, 652,
	653, 655, 657, 658, 654, 656, 659, 1570, 660, 1571,
	0, 661, 662, 663, 723, 724, 725, 1572, 665, 664,
	666, 667, 668, 726, 669, 670, 1573, 1574, 1575, 1576,
	671, 672, 727, 673, 674, 675, 0, 0, 0, 0,
	0, 0, 0, 1492, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2787,
	291, 292, 294, 293, 295, 296, 297, 298, 1498, 299,
	300, 1499, 1500, 1501, 0, 1502, 676, 1503, 1504, 1505,
	301, 1506, 302, 303, 1276, 304, 305, 306, 307, 308,
	309, 310, 677, 678, 0, 311, 679, 312, 680, 1507,
	681, 313, 314, 315, 316, 317, 318, 1508, 1509, 0,
	319, 682, 683, 684, 1510, 320, 321, 685, 1511, 1578,
	1512, 322, 323, 324, 325, 326, 327, 328, 329, 0,
	1513, 331, 332, 333, 330, 334, 1514, 335, 0, 336,
	337, 338, 339, 340, 341, 1515, 342, 343, 344, 1277,
	345, 346, 347, 1516, 1517, 1519, 1518, 1520, 1521, 1522,
	348, 349, 350, 351, 352, 0, 353, 355, 686, 687,
	1523, 358, 354, 356, 1524, 359, 357, 360, 1525, 361,
	362, 363, 1526, 1527, 364, 365, 366, 1528, 367, 368,
	369, 1529, 370, 371, 372, 1530, 373, 374, 688, 375,
	376, 377, 379, 381, 378, 380, 382, 383, 384, 385,
	689, 690, 386, 1531, 288, 1532, 0, 0, 0, 0,
	387, 388, 389, 691, 0, 0, 0, 390, 1533, 391,
	392, 393, 1534, 394, 1535, 1278, 395, 396, 397, 692,
	693, 398, 399, 400, 401, 402, 403, 404, 405, 406,
	1536, 407, 694, 1537, 695, 408, 1538, 409, 410, 411,
	412, 413, 414, 696, 697, 698, 502, 1280, 415, 416,
	1539, 417, 418, 419, 420, 421, 0, 0, 0, 289,
	422, 423, 424, 1540, 1279, 503, 425, 699, 700, 1541,
	701, 1542, 426, 427, 1281, 702, 1282, 428, 429, 430,
	1283, 431, 0, 0, 0, 432, 433, 434, 435, 436,
	437, 1543, 438, 440, 439, 1544, 441, 703, 1284, 442,
	443, 1285, 1545, 444, 445, 446, 447, 448, 449, 452,
	1546, 1547, 450, 451, 453, 454, 0, 455, 456, 458,
	461, 457, 459, 460, 462, 475, 463, 464, 465, 466,
	467, 468, 469, 470, 471, 472, 473, 474, 477, 0,
	476, 1286, 478, 479, 480, 481, 482, 489, 491, 492,
	487, 488, 490, 493, 494, 496, 484, 485, 486, 1287,
	495, 483, 1548, 290, 1288, 497, 498, 499, 500, 1549,
	704, 501, 705, 504, 505, 1550, 0, 506, 0, 507,
	1551, 1552, 509, 510, 511, 1553, 1554, 512, 513, 706,
	1289, 514, 1290, 707, 515, 516, 508, 517, 518, 519,
	520, 521, 522, 523, 524, 525, 1555, 526, 527, 708,
	528, 529, 530, 709, 531, 532, 533, 710, 534, 711,
	535, 536, 1556, 537, 538, 539, 0, 540, 541, 542,
	543, 544, 545, 546, 712, 547, 548, 550, 549, 551,
	1557, 552, 0, 553, 554, 555, 0, 0, 0, 0,
	0, 556, 557, 559, 0, 560, 561, 562, 563, 558,
	564, 565, 566, 567, 568, 1558, 569, 570, 571, 1291,
	572, 573, 574, 575, 576, 713, 577, 0, 578, 579,
	586, 587, 588, 580, 581, 582, 589, 590, 591, 592,
	593, 1559, 595, 596, 594, 597, 598, 599, 1560, 600,
	601, 583, 584, 602, 603, 1292, 604, 605, 606, 607,
	608, 609, 610, 714, 0, 611, 1561, 612, 613, 614,
	615, 616, 618, 585, 619, 624, 625, 715, 620, 621,
	622, 623, 716, 627, 628, 1562, 629, 630, 0, 626,
	617, 1563, 631, 632, 633, 634, 635, 636, 0, 637,
	638, 1564, 639, 717, 718, 719, 720, 1565, 649, 1566,
	640, 641, 642, 643, 721, 644, 722, 1567, 645, 646,
	647, 648, 0, 650, 651, 1568, 1569, 652, 653, 655,
	657, 658, 654, 656, 659, 1570, 660, 1571, 0, 661,
	662, 663, 723, 724, 725, 1572, 665, 664, 666, 667,
	668, 726, 669, 670, 1573, 1574, 1575, 1576, 671, 672,
	727, 673, 674, 675, 0, 0, 0, 0, 0, 1489,
	0, 1492, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2408, 291, 292,
	294, 293, 295, 296, 297, 298, 1498, 299, 300, 1499,
	1500, 1501, 0, 1502, 676, 1503, 1504, 1505, 301, 1506,
	302, 303, 1276, 304, 305, 306, 307, 308, 309, 310,
	677, 678, 0, 311, 679, 312, 680, 1507, 681, 313,
	314, 315, 316, 317, 318, 1508, 1509, 0, 319, 682,
	683, 684, 1510, 320, 321, 685, 1511, 1578, 1512, 322,
	323, 324, 325, 326, 327, 328, 329, 0, 1513, 331,
	332, 333, 330, 334, 1514, 335, 0, 336, 337, 338,
	339, 340, 341, 1515, 342, 343, 344, 1277, 345, 346,
	347, 1516, 1517, 1519, 1518, 1520, 1521, 1522, 348, 349,
	350, 351, 352, 0, 353, 355, 686, 687, 1523, 358,
	354, 356, 1524, 359, 357, 360, 1525, 361, 362, 363,
	1526, 1527, 364, 365, 366, 1528, 367, 368, 369, 1529,
	370, 371, 372, 1530, 373, 374, 688, 375, 376, 377,
	379, 381, 378, 380, 382, 383, 384, 385, 689, 690,
	386, 1531, 288, 1532, 0, 0, 0, 0, 387, 388,
	389, 691, 0, 0, 0, 390, 1533, 391, 392, 393,
	1534, 394, 1535, 1278, 395, 396, 397, 692, 693, 398,
	399, 400, 401, 402, 403, 404, 405, 406, 1536, 407,
	694, 1537, 695, 408, 1538, 409, 410, 411, 412, 413,
	414, 696, 697, 698, 502, 1280, 415, 416, 1539, 417,
	418, 419, 420, 421, 0, 0, 0, 289, 422, 423,
	424, 1540, 1279, 503, 425, 699, 700, 1541, 701, 1542,
	426, 427, 1281, 702, 1282, 428, 429, 430, 1283, 431,
	0, 0, 0, 432, 433, 434, 435, 436, 437, 1543,
	438, 440, 439, 1544, 441, 703, 1284, 442, 443, 1285,
	1545, 444, 445, 446, 447, 448, 449, 452, 1546, 1547,
	450, 451, 453, 454, 0, 455, 456, 458, 461, 457,
	459, 460, 462, 475, 463, 464, 465, 466, 467, 468,
	469, 470, 471, 472, 473, 474, 477, 0, 476, 1286,
	478, 479, 480, 481, 482, 489, 491, 492, 487, 488,
	490, 493, 494, 496, 484, 485, 486, 1287, 495, 483,
	1548, 290, 1288, 497, 498, 499, 500, 1549, 704, 501,
	705, 504, 505, 1550, 0, 506, 0, 507, 1551, 1552,
	509, 510, 511, 1553, 1554, 512, 513, 706, 1289, 514,
	1290, 707, 515, 516, 508, 517, 518, 519, 520, 521,
	522, 523, 524, 525, 1555, 526, 527, 708, 528, 529,
	530, 709, 531, 532, 533, 710, 534, 711, 535, 536,
	1556, 537, 538, 539, 0, 540, 541, 542, 543, 544,
	545, 546, 712, 547, 548, 550, 549, 551, 1557, 552,
	0, 553, 554, 555, 0, 0, 0, 0, 0, 556,
	557, 559, 0, 560, 561, 562, 563, 558, 564, 565,
	566, 567, 568, 1558, 569, 570, 571, 1291, 572, 573,
	574, 575, 576, 713, 577, 0, 578, 579, 586, 587,
	588, 580, 581, 582, 589, 590, 591, 592, 593, 1559,
	595, 596, 594, 597, 598, 599, 1560, 600, 601, 583,
	584, 602, 603, 1292, 604, 605, 606, 607, 608, 609,
	610, 714, 0, 611, 1561, 612, 613, 614, 615, 616,
	618, 585, 619, 624, 625, 715, 620, 621, 622, 623,
	716, 627, 628, 1562, 629, 630, 0, 626, 617, 1563,
	631, 632, 633, 634, 635, 636, 0, 637, 638, 1564,
	639, 717, 718, 719, 720, 1565, 649, 1566, 640, 641,
	642, 643, 721, 644, 722, 1567, 645, 646, 647, 648,
	0, 650, 651, 1568, 1569, 652, 653, 655, 657, 658,
	654, 656, 659, 1570, 660, 1571, 0, 661, 662, 663,
	723, 724, 725, 1572, 665, 664, 666, 667, 668, 726,
	669, 670, 1573, 1574, 1575, 1576, 671, 672, 727, 673,
	674, 675, 1492, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 291,
	292, 294, 293, 295, 296, 297, 298, 1498, 299, 300,
	1499, 1500, 1501, 0, 1502, 676, 1503, 1504, 1505, 301,
	1506, 302, 303, 1276, 304, 305, 306, 307, 308, 309,
	310, 677, 678, 0, 311, 679, 312, 680, 1507, 681,
	313, 314, 315, 316, 317, 318, 1508, 1509, 0, 319,
	682, 683, 684, 1510, 320, 321, 685, 1511, 1578, 1512,
	322, 323, 324, 325, 326, 327, 328, 329, 0, 1513,
	331, 332, 333, 330, 334, 1514, 335, 0, 336, 337,
	338, 339, 340, 341, 1515, 342, 343, 344, 1277, 345,
	346, 347, 1516, 1517, 1519, 1518, 1520, 1521, 1522, 348,
	349, 350, 351, 352, 0, 353, 355, 686, 687, 1523,
	358, 354, 356, 1524, 359, 357, 360, 1525, 361, 362,
	363, 1526, 1527, 364, 365, 366, 1528, 367, 368, 369,
	1529, 370, 371, 372, 1530, 373, 374, 688, 375, 376,
	377, 379, 381, 378, 380, 382, 383, 384, 385, 689,
	690, 386, 1531, 288, 1532, 0, 0, 0, 0, 387,
	388, 389, 691, 0, 0, 0, 390, 1533, 391, 392,
	393, 1534, 394, 1535, 1278, 395, 396, 397, 692, 693,
	398, 399, 400, 401, 402, 403, 404, 405, 406, 1536,
	407, 694, 1537, 695, 408, 1538, 409, 410, 411, 412,
	413, 414, 696, 697, 698, 502, 1280, 415, 416, 1539,
	417, 418, 419, 420, 421, 0, 0, 0, 289, 422,
	423, 424, 1540, 1279, 503, 425, 699, 700, 1541, 701,
	1542, 426, 427, 1281, 702, 1282, 428, 429, 430, 1283,
	431, 0, 0, 0, 432, 433, 434, 435, 436, 437,
	1543, 438, 440, 439, 1544, 441, 703, 1284, 442, 443,
	1285, 1545, 444, 445, 446, 447, 448, 449, 452, 1546,
	1547, 450, 451, 453, 454, 0, 455, 456, 458, 461,
	457, 459, 460, 462, 475, 463, 464, 465, 466, 467,
	468, 469, 470, 471, 472, 473, 474, 477, 0, 476,
	1286, 478, 479, 480, 481, 482, 489, 491, 492, 487,
	488, 490, 493, 494, 496, 484, 485, 486, 1287, 495,
	483, 1548, 290, 1288, 497, 498, 499, 500, 1549, 704,
	501, 705, 504, 505, 1550, 0, 506, 0, 507, 1551,
	1552, 509, 510, 511, 1553, 1554, 512, 513, 706, 1289,
	514, 1290, 707, 515, 516, 508, 517, 518, 519, 520,
	521, 522, 523, 524, 525, 1555, 526, 527, 708, 528,
	529, 530, 709, 531, 532, 533, 710, 534, 711, 535,
	536, 1556, 537, 538, 539, 0, 540, 541, 542, 543,
	544, 545, 546, 712, 547, 548, 550, 549, 551, 1557,
	552, 0, 553, 554, 555, 0, 0, 0, 0, 0,
	556, 557, 559, 0, 560, 561, 562, 563, 558, 564,
	565, 566, 567, 568, 1558, 569, 570, 571, 1291, 572,
	573, 574, 575, 576, 713, 577, 0, 578, 579, 586,
	587, 588, 580, 581, 582, 589, 590, 591, 592, 593,
	1559, 595, 596, 594, 597, 598, 599, 1560, 600, 601,
	583, 584, 602, 603, 1292, 604, 605, 606, 607, 608,
	609, 610, 714, 0, 611, 1561, 612, 613, 614, 615,
	616, 618, 585, 619, 624, 625, 715, 620, 621, 622,
	623, 716, 627, 628, 1562, 629, 630, 0, 626, 617,
	1563, 631, 632, 633, 634, 635, 636, 0, 637, 638,
	1564, 639, 717, 718, 719, 720, 1565, 649, 1566, 640,
	641, 642, 643, 721, 644, 722, 1567, 645, 646, 647,
	648, 0, 650, 651, 1568, 1569, 652, 653, 655, 657,
	658, 654, 656, 659, 1570, 660, 1571, 0, 661, 662,
	663, 723, 724, 725, 1572, 665, 664, 666, 667, 668,
	726, 669, 670, 1573, 1574, 1575, 1576, 671, 672, 727,
	673, 674, 675, 2762, 0, 1212, 1184, 1185, 1186, 1182,
	1183, 1195, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 291, 292, 294, 293, 295, 296, 297, 298,
	2759, 299, 300, 0, 0, 0, 0, 0, 1236, 1200,
	0, 0, 301, 0, 302, 303, 1276, 304, 305, 306,
	307, 308, 309, 310, 677, 1249, 0, 311, 1256, 312,
	1255, 0, 1266, 313, 314, 315, 316, 317, 318, 1202,
	1235, 1167, 319, 1296, 1297, 684, 0, 320, 321, 1242,
	0, 1223, 0, 322, 323, 324, 325, 326, 327, 328,
	329, 0, 0, 331, 332, 333, 330, 334, 0, 335,
	0, 336, 337, 338, 339, 340, 341, 0, 342, 343,
	344, 1277, 345, 346, 347, 1226, 1224, 1225, 1232, 1228,
	1227, 1231, 348, 349, 350, 351, 352, 1259, 353, 355,
	1253, 1252, 1172, 358, 354, 356, 0, 359, 357, 360,
	0, 361, 362, 363, 2760, 0, 364, 1244, 366, 0,
	367, 368, 369, 0, 370, 371, 372, 0, 373, 374,
	1178, 375, 376, 377, 379, 381, 378, 380, 382, 383,
	384, 385, 1267, 1268, 386, 1191, 288, 0, 0, 0,
	0, 0, 387, 388, 389, 1251, 0, 0, 0, 390,
	0, 391, 392, 393, 0, 394, 0, 1278, 395, 396,
	397, 1264, 1265, 398, 399, 400, 401, 402, 403, 404,
	405, 406, 0, 407, 1274, 0, 1201, 408, 0, 409,
	410, 411, 412, 413, 414, 1237, 1238, 1241, 502, 1280,
	415, 416, 0, 417, 418, 419, 420, 421, 0, 0,
	0, 289, 422, 423, 424, 0, 1279, 503, 425, 1246,
	1247, 0, 1207, 0, 426, 427, 1281, 1239, 1282, 428,
	429, 430, 1283, 431, 0, 0, 0, 432, 433, 434,
	435, 436, 437, 0, 438, 440, 439, 0, 441, 1275,
	1284, 442, 443, 1285, 0, 444, 445, 446, 447, 448,
	449, 452, 1230, 1229, 450, 451, 453, 454, 0, 455,
	456, 458, 461, 457, 459, 460, 462, 475, 463, 464,
	465, 466, 467, 468, 469, 470, 471, 472, 473, 474,
	477, 0, 476, 1286, 478, 479, 480, 481, 482, 489,
	491, 492, 487, 488, 490, 493, 494, 496, 484, 485,
	486, 1287, 495, 483, 1169, 290, 1288, 497, 498, 499,
	500, 1192, 1240, 501, 1254, 504, 505, 0, 0, 506,
	0, 507, 0, 0, 509, 510, 511, 0, 0, 512,
	513, 706, 1289, 514, 1290, 1269, 515, 516, 1179, 517,
	518, 519, 520, 521, 522, 523, 524, 525, 0, 526,
	527, 708, 528, 529, 530, 709, 531, 532, 533, 1270,
	534, 711, 535, 536, 0, 537, 538, 539, 0, 540,
	541, 542, 543, 544, 545, 546, 1250, 547, 548, 550,
	549, 551, 0, 552, 0, 553, 554, 555, 0, 0,
	0, 0, 0, 556, 557, 559, 0, 560, 561, 562,
	563, 558, 564, 565, 566, 567, 568, 0, 569, 570,
	571, 1291, 572, 573, 574, 575, 576, 1180, 577, 0,
	578, 579, 586, 587, 588, 580, 581, 582, 589, 590,
	591, 592, 593, 0, 595, 596, 594, 597, 598, 599,
	1233, 600, 601, 583, 584, 602, 603, 1292, 604, 605,
	606, 607, 608, 609, 610, 1248, 0, 611, 0, 612,
	613, 614, 615, 616, 618, 585, 619, 624, 625, 1295,
	620, 621, 622, 623, 1271, 627, 628, 0, 629, 630,
	1166, 626, 617, 0, 631, 632, 633, 634, 635, 636,
	0, 637, 638, 0, 639, 1260, 1261, 1262, 1263, 0,
	649, 0, 640, 641, 642, 643, 1272, 644, 1273, 1190,
	645, 646, 647, 648, 0, 650, 651, 0, 1173, 652,
	653, 655, 657, 658, 654, 656, 659, 1234, 660, 0,
	0, 661, 662, 663, 723, 1257, 1294, 2758, 665, 664,
	666, 667, 668, 726, 669, 670, 0, 0, 0, 0,
	671, 672, 727, 673, 674, 675, 1170, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1165, 0, 0, 0, 0, 0, 0, 1163, 1164, 2761,
	0, 0, 0, 0, 0, 0, 0, 1196, 2757, 0,
	1156, 1194, 1212, 1184, 1185, 1186, 1182, 1183, 1195, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 291,
	292, 294, 293, 295, 296, 297, 298, 0, 299, 300,
	0, 0, 0, 0, 0, 1236, 1200, 0, 0, 301,
	0, 302, 303, 1276, 304, 305, 306, 307, 308, 309,
	310, 677, 1249, 0, 311, 1256, 312, 1255, 0, 1266,
	313, 314, 315, 316, 317, 318, 1202, 1235, 1167, 319,
	1296, 1297, 684, 0, 320, 321, 1242, 0, 1223, 0,
	322, 323, 324, 325, 326, 327, 328, 329, 0, 0,
	331, 332, 333, 330, 334, 0, 335, 0, 336, 337,
	338, 339, 340, 341, 0, 342, 343, 344, 1277, 345,
	346, 347, 1226, 1224, 1225, 1232, 1228, 1227, 1231, 348,
	349, 350, 351, 352, 1259, 353, 355, 1253, 1252, 1172,
	358, 354, 356, 0, 359, 357, 360, 0, 361, 362,
	363, 0, 0, 364, 1244, 366, 0, 367, 368, 369,
	0, 370, 371, 372, 0, 373, 374, 1178, 375, 376,
	377, 379, 381, 378, 380, 382, 383, 384, 385, 1267,
	1268, 386, 1191, 288, 0, 0, 0, 0, 0, 387,
	388, 389, 1251, 0, 0, 0, 390, 0, 391, 392,
	393, 0, 394, 0, 1278, 395, 396, 397, 1264, 1265,
	398, 399, 400, 401, 402, 403, 404, 405, 406, 0,
	407, 1274, 0, 1201, 408, 0, 409, 410, 411, 412,
	413, 414, 1237, 1238, 1241, 502, 1280, 415, 416, 0,
	417, 418, 419, 420, 421, 0, 0, 0, 289, 422,
	423, 424, 0, 1279, 503, 425, 1246, 1247, 0, 1207,
	0, 426, 427, 1281, 1239, 1282, 428, 429, 430, 1283,
	431, 0, 0, 0, 432, 433, 434, 435, 436, 437,
	0, 438, 440, 439, 0, 441, 1275, 1284, 442, 443,
	1285, 0, 444, 445, 446, 447, 448, 449, 452, 1230,
	1229, 450, 451, 453, 454, 0, 455, 456, 458, 461,
	457, 459, 460, 462, 475, 463, 464, 465, 466, 467,
	468, 469, 470, 471, 472, 473, 474, 477, 0, 476,
	1286, 478, 479, 480, 481, 482, 489, 491, 492, 487,
	488, 490, 493, 494, 496, 484, 485, 486, 1287, 495,
	483, 1169, 290, 1288, 497, 498, 499, 500, 1192, 1240,
	501, 1254, 504, 505, 0, 0, 506, 0, 507, 0,
	0, 509, 510, 511, 0, 0, 512, 513, 706, 1289,
	514, 1290, 1269, 515, 516, 1179, 517, 518, 519, 520,
	521, 522, 523, 524, 525, 0, 526, 527, 708, 528,
	529, 530, 709, 531, 532, 533, 1270, 534, 711, 535,
	536, 0, 537, 538, 539, 0, 540, 541, 542, 543,
	544, 545, 546, 1250, 547, 548, 550, 549, 551, 0,
	552, 0, 553, 554, 555, 0, 0, 0, 0, 0,
	556, 557, 559, 0, 560, 561, 562, 563, 558, 564,
	565, 566, 567, 568, 0, 569, 570, 571, 1291, 572,
	573, 574, 575, 576, 1180, 577, 0, 578, 579, 586,
	587, 588, 580, 581, 582, 589, 590, 591, 592, 593,
	247, 595, 596, 594, 597, 598, 599, 1233, 600, 601,
	583, 584, 602, 603, 1292, 604, 605, 606, 607, 608,
	609, 610, 1248, 0, 611, 0, 612, 613, 614, 615,
	616, 618, 585, 619, 624, 625, 1295, 620, 621, 622,
	623, 1271, 627, 628, 0, 629, 630, 1166, 626, 617,
	249, 631, 632, 633, 634, 635, 636, 0, 637, 638,
	0, 639, 1260, 1261, 1262, 1263, 0, 649, 0, 640,
	641, 642, 643, 1272, 644, 1273, 1190, 645, 646, 647,
	648, 0, 650, 651, 0, 1173, 652, 653, 655, 657,
	658, 654, 656, 659, 1234, 660, 0, 0, 661, 662,
	663, 1737, 1257, 1294, 0, 665, 664, 666, 667, 668,
	726, 669, 670, 0, 0, 0, 241, 671, 672, 727,
	673, 674, 675, 1170, 0, 242, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1165, 0, 0,
	0, 0, 0, 0, 1163, 1164, 1212, 1184, 1185, 1186,
	1182, 1183, 1195, 0, 2002, 2000, 0, 0, 1194, 0,
	0, 0, 0, 291, 292, 294, 293, 295, 296, 297,
	298, 0, 299, 300, 0, 0, 0, 0, 0, 1236,
	1200, 0, 0, 301, 0, 302, 303, 1276, 304, 305,
	306, 307, 308, 309, 310, 677, 1249, 0, 311, 1256,
	312, 1255, 0, 1266, 313, 314, 315, 316, 317, 318,
	1202, 1235, 1167, 319, 1296, 1297, 684, 0, 320, 321,
	1242, 0, 1223, 0, 322, 323, 324, 325, 326, 327,
	328, 329, 0, 0, 331, 332, 333, 330, 334, 0,
	335, 0, 336, 337, 338, 339, 340, 341, 0, 342,
	343, 344, 1277, 345, 346, 347, 1226, 1224, 1225, 1232,
	1228, 1227, 1231, 348, 349, 350, 351, 352, 1259, 353,
	355, 1253, 1252, 1172, 358, 354, 356, 0, 359, 357,
	360, 0, 361, 362, 363, 0, 0, 364, 1244, 366,
	0, 367, 368, 369, 0, 370, 371, 372, 0, 373,
	374, 1178, 375, 376, 377, 379, 381, 378, 380, 382,
	383, 384, 385, 1267, 1268, 386, 1191, 288, 0, 0,
	0, 0, 0, 387, 388, 389, 1251, 0, 0, 0,
	390, 0, 391, 392, 393, 0, 394, 0, 1278, 395,
	396, 397, 1264, 1265, 398, 399, 400, 401, 402, 403,
	404, 405, 406, 0, 407, 1274, 0, 1201, 408, 0,
	409, 410, 411, 412, 413, 414, 1237, 1238, 1241, 502,
	1280, 415, 416, 0, 417, 418, 419, 420, 421, 0,
	0, 0, 289, 422, 423, 424, 0, 1279, 503, 425,
	1246, 1247, 0, 1207, 0, 426, 427, 1281, 1239, 1282,
	428, 429, 430, 1283, 431, 0, 0, 0, 432, 433,
	434, 435, 436, 437, 0, 438, 440, 439, 0, 441,
	1275, 1284, 442, 443, 1285, 0, 444, 445, 446, 447,
	448, 449, 452, 1230, 1229, 450, 451, 453, 454, 0,
	455, 456, 458, 461, 457, 459, 460, 462, 475, 463,
	464, 465, 466, 467, 468, 469, 470, 471, 472, 473,
	474, 477, 0, 476, 1286, 478, 479, 480, 481, 482,
	489, 491, 492, 487, 488, 490, 493, 494, 496, 484,
	485, 486, 1287, 495, 483, 1169, 290, 1288, 497, 498,
	499, 500, 1192, 1240, 501, 1254, 504, 505, 0, 0,
	506, 0, 507, 0, 0, 509, 510, 511, 0, 0,
	512, 513, 706, 1289, 514, 1290, 1269, 515, 516, 1179,
	517, 518, 519, 520, 521, 522, 523, 524, 525, 0,
	526, 527, 708, 528, 529, 530, 709, 531, 532, 533,
	1270, 534, 711, 535, 536, 0, 537, 538, 539, 0,
	540, 541, 542, 543, 544, 545, 546, 1250, 547, 548,
	550, 549, 551, 0, 552, 0, 553, 554, 555, 0,
	0, 0, 0, 0, 556, 557, 559, 0, 560, 561,
	562, 563, 558, 564, 565, 566, 567, 568, 0, 569,
	570, 571, 1291, 572, 573, 574, 575, 576, 1180, 577,
	0, 578, 579, 586, 587, 588, 580, 581, 582, 589,
	590, 591, 592, 593, 247, 595, 596, 594, 597, 598,
	599, 1233, 600, 601, 583, 584, 602, 603, 1292, 604,
	605, 606, 607, 608, 609, 610, 1248, 0, 611, 0,
	612, 613, 614, 615, 616, 618, 585, 619, 624, 625,
	1295, 620, 621, 622, 623, 1271, 627, 628, 0, 629,
	630, 1166, 626, 617, 249, 631, 632, 633, 634, 635,
	636, 0, 637, 638, 0, 639, 1260, 1261, 1262, 1263,
	0, 649, 0, 640, 641, 642, 643, 1272, 644, 1273,
	1190, 645, 646, 647, 648, 0, 650, 651, 0, 1173,
	652, 653, 655, 657, 658, 654, 656, 659, 1234, 660,
	0, 0, 661, 662, 663, 1737, 1257, 1294, 0, 665,
	664, 666, 667, 668, 726, 669, 670, 0, 0, 0,
	241, 671, 672, 727, 673, 674, 675, 1170, 0, 242,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1165, 0, 0, 0, 0, 0, 0, 1163, 1164,
	1212, 1184, 1185, 1186, 1182, 1183, 1195, 0, 2002, 3419,
	0, 0, 1194, 0, 0, 0, 0, 291, 292, 294,
	293, 295, 296, 297, 298, 0, 299, 300, 0, 0,
	0, 0, 0, 1236, 1200, 0, 0, 301, 0, 302,
	303, 1276, 304, 305, 306, 307, 308, 309, 310, 677,
	1249, 0, 311, 1256, 312, 1255, 0, 1266, 313, 314,
	315, 316, 317, 318, 1202, 1235, 1167, 319, 1296, 1297,
	684, 0, 320, 321, 1242, 0, 1223, 0, 322, 323,
	324, 325, 326, 327, 328, 329, 0, 0, 331, 332,
	333, 330, 334, 0, 335, 0, 336, 337, 338, 339,
	340, 341, 0, 342, 343, 344, 1277, 345, 346, 347,
	1226, 1224, 1225, 1232, 1228, 1227, 1231, 348, 349, 350,
	351, 352, 1259, 353, 355, 1253, 1252, 1172, 358, 354,
	356, 0, 359, 357, 360, 0, 361, 362, 363, 0,
	0, 364, 1244, 366, 0, 367, 368, 369, 0, 370,
	371, 372, 0, 373, 374, 1178, 375, 376, 377, 379,
	381, 378, 380, 382, 383, 384, 385, 1267, 1268, 386,
	1191, 288, 0, 0, 0, 0, 0, 387, 388, 389,
	1251, 0, 0, 0, 390, 0, 391, 392, 393, 0,
	394, 0, 1278, 395, 396, 397, 1264, 1265, 398, 399,
	400, 401, 402, 403, 404, 405, 406, 0, 407, 1274,
	0, 1201, 408, 0, 409, 410, 411, 412, 413, 414,
	1237, 1238, 1241, 502, 1280, 415, 416, 0, 417, 418,
	419, 420, 421, 0, 0, 0, 289, 422, 423, 424,
	0, 1279, 503, 425, 1246, 1247, 0, 1207, 0, 426,
	427, 1281, 1239, 1282, 428, 429, 430, 1283, 431, 0,
	0, 0, 432, 433, 434, 435, 436, 437, 0, 438,
	440, 439, 0, 441, 1275, 1284, 442, 443, 1285, 0,
	444, 445, 446, 447, 448, 449, 452, 1230, 1229, 450,
	451, 453, 454, 0, 455, 456, 458, 461, 457, 459,
	460, 462, 475, 463, 464, 465, 466, 467, 468, 469,
	470, 471, 472, 473, 474, 477, 0, 476, 1286, 478,
	479, 480, 481, 482, 489, 491, 492, 487, 488, 490,
	493, 494, 496, 484, 485, 486, 1287, 495, 483, 1169,
	290, 1288, 497, 498, 499, 500, 1192, 1240, 501, 1254,
	504, 505, 0, 0, 506, 0, 507, 0, 0, 509,
	510, 511, 0, 0, 512, 513, 706, 1289, 514, 1290,
	1269, 515, 516, 1179, 517, 518, 519, 520, 521, 522,
	523, 524, 525, 0, 526, 527, 708, 528, 529, 530,
	709, 531, 532, 533, 1270, 534, 711, 535, 536, 0,
	537, 538, 539, 0, 540, 541, 542, 543, 544, 545,
	546, 1250, 547, 548, 550, 549, 551, 0, 552, 0,
	553, 554, 555, 0, 0, 0, 0, 0, 556, 557,
	559, 0, 560, 561, 562, 563, 558, 564, 565, 566,
	567, 568, 0, 569, 570, 571, 1291, 572, 573, 574,
	575, 576, 1180, 577, 0, 578, 579, 586, 587, 588,
	580, 581, 582, 589, 590, 591, 592, 593, 247, 595,
	596, 594, 597, 598, 599, 1233, 600, 601, 583, 584,
	602, 603, 1292, 604, 605, 606, 607, 608, 609, 610,
	1248, 0, 611, 0, 612, 613, 614, 615, 616, 618,
	585, 619, 624, 625, 1295, 620, 621, 622, 623, 1271,
	627, 628, 0, 629, 630, 1166, 626, 617, 249, 631,
	632, 633, 634, 635, 636, 0, 637, 638, 0, 639,
	1260, 1261, 1262, 1263, 0, 649, 0, 640, 641, 642,
	643, 1272, 644, 1273, 1190, 645, 646, 647, 648, 0,
	650, 651, 0, 1173, 652, 653, 655, 657, 658, 654,
	656, 659, 1234, 660, 0, 0, 661, 662, 663, 1737,
	1257, 1294, 0, 665, 664, 666, 667, 668, 726, 669,
	670, 0, 0, 0, 241, 671, 672, 727, 673, 674,
	675, 1170, 0, 242, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1165, 0, 0, 0, 0,
	0, 0, 1163, 1164, 1212, 1184, 1185, 1186, 1182, 1183,
	1195, 0, 2002, 2000, 0, 0, 1194, 0, 0, 0,
	0, 291, 292, 294, 293, 295, 296, 297, 298, 0,
	299, 300, 0, 0, 0, 0, 0, 1236, 1200, 0,
	0, 301, 0, 302, 303, 1276, 304, 305, 306, 307,
	308, 309, 310, 677, 1249, 0, 311, 1256, 312, 1255,
	2892, 1266, 313, 314, 315, 316, 317, 318, 1202, 1235,
	1167, 319, 1296, 1297, 684, 0, 320, 321, 1242, 0,
	1223, 0, 322, 323, 324, 325, 326, 327, 328, 329,
	0, 0, 331, 332, 333, 330, 334, 0, 335, 0,
	336, 337, 338, 339, 340, 341, 0, 342, 343, 344,
	1277, 345, 346, 347, 1226, 1224, 1225, 1232, 1228, 1227,
	1231, 348, 349, 350, 351, 352, 1259, 353, 355, 1253,
	1252, 1172, 358, 354, 356, 0, 359, 357, 360, 0,
	361, 362, 363, 0, 0, 364, 1244, 366, 0, 367,
	368, 369, 0, 370, 371, 372, 0, 373, 374, 1178,
	375, 376, 377, 379, 381, 378, 380, 382, 383, 384,
	385, 1267, 1268, 386, 1191, 288, 0, 0, 0, 0,
	0, 387, 388, 389, 1251, 0, 0, 0, 390, 0,
	391, 392, 393, 0, 394, 2897, 1278, 395, 396, 397,
	1264, 1265, 398, 399, 400, 401, 402, 403, 404, 405,
	406, 0, 407, 1274, 0, 1201, 408, 0, 409, 410,
	411, 412, 413, 414, 1237, 1238, 1241, 502, 1280, 415,
	416, 0, 417, 418, 419, 420, 421, 0, 0, 0,
	289, 422, 423, 424, 0, 1279, 503, 425, 1246, 1247,
	0, 1207, 0, 426, 427, 1281, 1239, 1282, 428, 429,
	430, 1283, 431, 0, 0, 0, 432, 433, 434, 435,
	436, 437, 0, 438, 440, 439, 2893, 441, 1275, 1284,
	442, 443, 1285, 0, 444, 445, 446, 447, 448, 449,
	452, 1230, 1229, 450, 451, 453, 454, 0, 455, 456,
	458, 461, 457, 459, 460, 462, 475, 463, 464, 465,
	466, 467, 468, 469, 470, 471, 472, 473, 474, 477,
	0, 476, 1286, 478, 479, 480, 481, 482, 489, 491,
	492, 487, 488, 490, 493, 494, 496, 484, 485, 486,
	1287, 495, 483, 1169, 290, 1288, 497, 498, 499, 500,
	1192, 1240, 501, 1254, 504, 505, 0, 0, 506, 0,
	507, 0, 0, 509, 510, 511, 0, 0, 512, 513,
	706, 1289, 514, 1290, 1269, 515, 516, 1179, 517, 518,
	519, 520, 521, 522, 523, 524, 525, 0, 526, 527,
	708, 528, 529, 530, 709, 531, 532, 533, 1270, 534,
	711, 535, 536, 0, 537, 538, 539, 0, 540, 541,
	542, 543, 544, 545, 546, 1250, 547, 548, 550, 549,
	551, 0, 552, 0, 553, 554, 555, 0, 0, 0,
	0, 0, 556, 557, 559, 0, 560, 561, 562, 563,
	558, 564, 565, 566, 567, 568, 0, 569, 570, 571,
	1291, 572, 573, 574, 575, 576, 1180, 577, 0, 578,
	579, 586, 587, 588, 580, 581, 582, 589, 590, 591,
	592, 593, 0, 595, 596, 594, 597, 598, 599, 1233,
	600, 601, 583, 584, 602, 603, 1292, 604, 605, 606,
	607, 608, 609, 610, 1248, 0, 611, 0, 612, 613,
	614, 615, 616, 618, 585, 619, 624, 625, 1295, 620,
	621, 622, 623, 1271, 627, 628, 0, 629, 630, 1166,
	626, 617, 0, 631, 632, 633, 634, 635, 636, 0,
	637, 638, 0, 639, 1260, 1261, 1262, 1263, 0, 649,
	2894, 640, 641, 642, 643, 1272, 644, 1273, 1190, 645,
	646, 647, 648, 0, 650, 651, 0, 1173, 652, 653,
	655, 657, 658, 654, 656, 659, 1234, 660, 0, 0,
	661, 662, 663, 723, 1257, 1294, 0, 665, 664, 666,
	667, 668, 726, 669, 670, 0, 0, 0, 0, 671,
	672, 727, 673, 674, 675, 1170, 0, 0, 0, 2807,
	0, 1212, 1184, 1185, 1186, 1182, 1183, 1195, 0, 1165,
	0, 0, 0, 0, 0, 0, 1163, 1164, 291, 292,
	294, 293, 295, 296, 297, 298, 1196, 299, 300, 0,
	1194, 0, 0, 0, 1236, 1200, 0, 0, 301, 0,
	302, 303, 1276, 304, 305, 306, 307, 308, 309, 310,
	677, 1249, 0, 311, 1256, 312, 1255, 0, 1266, 313,
	314, 315, 316, 317, 318, 1202, 1235, 1167, 319, 1296,
	1297, 684, 0, 320, 321, 1242, 0, 1223, 0, 322,
	323, 324, 325, 326, 327, 328, 329, 0, 0, 331,
	332, 333, 330, 334, 0, 335, 0, 336, 337, 338,
	339, 340, 341, 0, 342, 343, 344, 1277, 345, 346,
	347, 1226, 1224, 1225, 1232, 1228, 1227, 1231, 348, 349,
	350, 351, 352, 1259, 353, 355, 1253, 1252, 1172, 358,
	354, 356, 0, 359, 357, 360, 0, 361, 362, 363,
	0, 0, 364, 1244, 366, 0, 367, 368, 369, 0,
	370, 371, 372, 0, 373, 374, 1178, 375, 376, 377,
	379, 381, 378, 380, 382, 383, 384, 385, 1267, 1268,
	386, 1191, 288, 0, 0, 0, 0, 0, 387, 388,
	389, 1251, 0, 0, 0, 390, 0, 391, 392, 393,
	0, 394, 0, 1278, 395, 396, 397, 1264, 1265, 398,
	399, 400, 401, 402, 403, 404, 405, 406, 0, 407,
	1274, 0, 1201, 408, 0, 409, 410, 411, 412, 413,
	414, 1237, 1238, 1241, 502, 1280, 415, 416, 0, 417,
	418, 419, 420, 421, 0, 0, 0, 289, 422, 423,
	424, 0, 1279, 503, 425, 1246, 1247, 0, 1207, 0,
	426, 427, 1281, 1239, 1282, 428, 429, 430, 1283, 431,
	0, 0, 0, 432, 433, 434, 435, 436, 437, 0,
	438, 440, 439, 0, 441, 1275, 1284, 442, 443, 1285,
	0, 444, 445, 446, 447, 448, 449, 452, 1230, 1229,
	450, 451, 453, 454, 0, 455, 456, 458, 461, 457,
	459, 460, 462, 475, 463, 464, 465, 466, 467, 468,
	469, 470, 471, 472, 473, 474, 477, 0, 476, 1286,
	478, 479, 480, 481, 482, 489, 491, 492, 487, 488,
	490, 493, 494, 496, 484, 485, 486, 1287, 495, 483,
	1169, 290, 1288, 497, 498, 499, 500, 1192, 1240, 501,
	1254, 504, 505, 0, 0, 506, 0, 507, 0, 0,
	509, 510, 511, 0, 0, 512, 513, 706, 1289, 514,
	1290, 1269, 515, 516, 1179, 517, 518, 519, 520, 521,
	522, 523, 524, 525, 0, 526, 527, 708, 528, 529,
	530, 709, 531, 532, 533, 1270, 534, 711, 535, 536,
	0, 537, 538, 539, 0, 540, 541, 542, 543, 544,
	545, 546, 1250, 547, 548, 550, 549, 551, 0, 552,
	0, 553, 554, 555, 0, 0, 0, 0, 0, 556,
	557, 559, 0, 560, 561, 562, 563, 558, 564, 565,
	566, 567, 568, 0, 569, 570, 571, 1291, 572, 573,
	574, 575, 576, 1180, 577, 0, 578, 579, 586, 587,
	588, 580, 581, 582, 589, 590, 591, 592, 593, 0,
	595, 596, 594, 597, 598, 599, 1233, 600, 601, 583,
	584, 602, 603, 1292, 604, 605, 606, 607, 608, 609,
	610, 1248, 0, 611, 0, 612, 613, 614, 615, 616,
	618, 585, 619, 624, 625, 1295, 620, 621, 622, 623,
	1271, 627, 628, 0, 629, 630, 1166, 626, 617, 0,
	631, 632, 633, 634, 635, 636, 0, 637, 638, 0,
	639, 1260, 1261, 1262, 1263, 0, 649, 0, 640, 641,
	642, 643, 1272, 644, 1273, 1190, 645, 646, 647, 648,
	0, 650, 651, 0, 1173, 652, 653, 655, 657, 658,
	654, 656, 659, 1234, 660, 0, 0, 661, 662, 663,
	723, 1257, 1294, 0, 665, 664, 666, 667, 668, 726,
	669, 670, 0, 0, 0, 0, 671, 672, 727, 673,
	674, 675, 1170, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1165, 0, 0, 0,
	0, 0, 0, 1163, 1164, 0, 0, 0, 0, 0,
	0, 0, 0, 1196, 2805, 0, 2804, 1194, 1212, 1184,
	1185, 1186, 1182, 1183, 1195, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 291, 292, 294, 293, 295,
	296, 297, 298, 0, 299, 300, 0, 0, 0, 0,
	0, 1236, 1200, 0, 0, 301, 0, 302, 303, 1276,
	304, 305, 306, 307, 308, 309, 310, 677, 1249, 0,
	311, 1256, 312, 1255, 0, 1266, 313, 314, 315, 316,
	317, 318, 1202, 1235, 1167, 319, 1296, 1297, 684, 0,
	320, 321, 1242, 0, 1223, 0, 322, 323, 324, 325,
	326, 327, 328, 329, 0, 0, 331, 332, 333, 330,
	334, 0, 335, 0, 336, 337, 338, 339, 340, 341,
	0, 342, 343, 344, 1277, 345, 346, 347, 1226, 1224,
	1225, 1232, 1228, 1227, 1231, 348, 349, 350, 351, 352,
	1259, 353, 355, 1253, 1252, 1172, 358, 354, 356, 0,
	359, 357, 360, 0, 361, 362, 363, 0, 0, 364,
	1244, 366, 0, 367, 368, 369, 0, 370, 371, 372,
	0, 373, 374, 1178, 375, 376, 377, 379, 381, 378,
	380, 382, 383, 384, 385, 1267, 1268, 386, 1191, 288,
	0, 0, 0, 0, 0, 387, 388, 389, 1251, 0,
	0, 0, 390, 0, 391, 392, 393, 0, 394, 0,
	1278, 395, 396, 397, 1264, 1265, 398, 399, 400, 401,
	402, 403, 404, 405, 406, 0, 407, 1274, 0, 1201,
	408, 0, 409, 410, 411, 412, 413, 414, 1237, 1238,
	1241, 502, 1280, 415, 416, 0, 417, 418, 419, 420,
	421, 0, 0, 0, 289, 422, 423, 424, 0, 1279,
	503, 425, 1246, 1247, 0, 1207, 0, 426, 427, 1281,
	1239, 1282, 428, 429, 430, 1283, 431, 0, 0, 0,
	432, 433, 434, 435, 436, 437, 0, 438, 440, 439,
	0, 441, 1275, 1284, 442, 443, 1285, 0, 444, 445,
	446, 447, 448, 449, 452, 1230, 1229, 450, 451, 453,
	454, 0, 455, 456, 458, 461, 457, 459, 460, 462,
	475, 463, 464, 465, 466, 467, 468, 469, 470, 471,
	472, 473, 474, 477, 0, 476, 1286, 478, 479, 480,
	481, 482, 489, 491, 492, 487, 488, 490, 493, 494,
	496, 484, 485, 486, 1287, 495, 483, 1169, 290, 1288,
	497, 498, 499, 500, 1192, 1240, 501, 1254, 504, 505,
	0, 0, 506, 0, 507, 0, 0, 509, 510, 511,
	0, 0, 512, 513, 706, 1289, 514, 1290, 1269, 515,
	516, 1179, 517, 518, 519, 520, 521, 522, 523, 524,
	525, 0, 526, 527, 708, 528, 529, 530, 709, 531,
	532, 533, 1270, 534, 711, 535, 536, 0, 537, 538,
	539, 0, 540, 541, 542, 543, 544, 545, 546, 1250,
	547, 548, 550, 549, 551, 0, 552, 0, 553, 554,
	555, 0, 0, 0, 0, 0, 556, 557, 559, 0,
	560, 561, 562, 563, 558, 564, 565, 566, 567, 568,
	0, 569, 570, 571, 1291, 572, 573, 574, 575, 576,
	1180, 577, 0, 578, 579, 586, 587, 588, 580, 581,
	582, 589, 590, 591, 592, 593, 0, 595, 596, 594,
	597, 598, 599, 1233, 600, 601, 583, 584, 602, 603,
	1292, 604, 605, 606, 607, 608, 609, 610, 1248, 0,
	611, 0, 612, 613, 614, 615, 616, 618, 585, 619,
	624, 625, 1295, 620, 621, 622, 623, 1271, 627, 628,
	0, 629, 630, 1166, 626, 617, 0, 631, 632, 633,
	634, 635, 636, 0, 637, 638, 0, 639, 1260, 1261,
	1262, 1263, 0, 649, 0, 640, 641, 642, 643, 1272,
	644, 1273, 1190, 645, 646, 647, 648, 0, 650, 651,
	0, 1173, 652, 653, 655, 657, 658, 654, 656, 659,
	1234, 660, 0, 0, 661, 662, 663, 723, 1257, 1294,
	0, 665, 664, 666, 667, 668, 726, 669, 670, 0,
	0, 0, 0, 671, 672, 727, 673, 674, 675, 1170,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1165, 0, 0, 0, 0, 0, 0,
	1163, 1164, 0, 0, 0, 0, 0, 0, 0, 0,
	1196, 2802, 0, 2801, 1194, 1212, 1184, 1185, 1186, 1182,
	1183, 1195, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 291, 292, 294, 293, 295, 296, 297, 298,
	0, 299, 300, 0, 0, 0, 0, 0, 1236, 1200,
	0, 0, 301, 0, 302, 303, 1276, 304, 305, 306,
	307, 308, 309, 310, 677, 1249, 0, 311, 1256, 312,
	1255, 0, 1266, 313, 314, 315, 316, 317, 318, 1202,
	1235, 1167, 319, 1296, 1297, 684, 0, 320, 321, 1242,
	0, 1223, 0, 322, 323, 324, 325, 326, 327, 328,
	329, 0, 0, 331, 332, 333, 330, 334, 0, 335,
	0, 336, 337, 338, 339, 340, 341, 0, 342, 343,
	344, 1277, 345, 346, 347, 1226, 1224, 1225, 1232, 1228,
	1227, 1231, 348, 349, 350, 351, 352, 1259, 353, 355,
	1253, 1252, 1172, 358, 354, 356, 0, 359, 357, 360,
	0, 361, 362, 363, 0, 0, 364, 1244, 366, 0,
	367, 368, 369, 0, 370, 371, 372, 0, 373, 374,
	1178, 375, 376, 377, 379, 381, 378, 380, 382, 383,
	384, 385, 1267, 1268, 386, 1191, 288, 0, 0, 0,
	0, 0, 387, 388, 389, 1251, 0, 0, 0, 390,
	0, 391, 392, 393, 0, 394, 0, 1278, 395, 396,
	397, 1264, 1265, 398, 399, 400, 401, 402, 403, 404,
	405, 406, 0, 407, 1274, 0, 1201, 408, 0, 409,
	410, 411, 412, 413, 414, 1237, 1238, 1241, 502, 1280,
	415, 416, 0, 417, 418, 419, 420, 421, 0, 0,
	0, 289, 422, 423, 424, 0, 1279, 503, 425, 1246,
	1247, 0, 1207, 0, 426, 427, 1281, 1239, 1282, 428,
	429, 430, 1283, 431, 0, 0, 0, 432, 433, 434,
	435, 436, 437, 0, 438, 440, 439, 0, 441, 1275,
	1284, 442, 443, 1285, 0, 444, 445, 446, 447, 448,
	449, 452, 1230, 1229, 450, 451, 453, 454, 0, 455,
	456, 458, 461, 457, 459, 460, 462, 475, 463, 464,
	465, 466, 467, 468, 469, 470, 471, 472, 473, 474,
	477, 0, 476, 1286, 478, 479, 480, 481, 482, 489,
	491, 492, 487, 488, 490, 493, 494, 496, 484, 485,
	486, 1287, 495, 483, 1169, 290, 1288, 497, 498, 499,
	500, 1192, 1240, 501, 1254, 504, 505, 0, 0, 506,
	0, 507, 0, 0, 509, 510, 511, 0, 0, 512,
	513, 706, 1289, 514, 1290, 1269, 515, 516, 1179, 517,
	518, 519, 520, 521, 522, 523, 524, 525, 0, 526,
	527, 708, 528, 529, 530, 709, 531, 532, 533, 1270,
	534, 711, 535, 536, 0, 537, 538, 539, 0, 540,
	541, 542, 543, 544, 545, 546, 1250, 547, 548, 550,
	549, 551, 0, 552, 0, 553, 554, 555, 0, 0,
	0, 0, 0, 556, 557, 559, 0, 560, 561, 562,
	563, 558, 564, 565, 566, 567, 568, 0, 569, 570,
	571, 1291, 572, 573, 574, 575, 576, 1180, 577, 0,
	578, 579, 586, 587, 588, 580, 581, 582, 589, 590,
	591, 592, 593, 0, 595, 596, 594, 597, 598, 599,
	1233, 600, 601, 583, 584, 602, 603, 1292, 604, 605,
	606, 607, 608, 609, 610, 1248, 0, 611, 0, 612,
	613, 614, 615, 616, 618, 585, 619, 624, 625, 1295,
	620, 621, 622, 623, 1271, 627, 628, 0, 629, 630,
	1166, 626, 617, 0, 631, 632, 633, 634, 635, 636,
	0, 637, 638, 0, 639, 1260, 1261, 1262, 1263, 0,
	649, 0, 640, 641, 642, 643, 1272, 644, 1273, 1190,
	645, 646, 647, 648, 0, 650, 651, 0, 1173, 652,
	653, 655, 657, 658, 654, 656, 659, 1234, 660, 0,
	0, 661, 662, 663, 723, 1257, 1294, 0, 665, 664,
	666, 667, 668, 726, 669, 670, 0, 0, 0, 0,
	671, 672, 727, 673, 674, 675, 1170, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1165, 0, 0, 0, 0, 0, 0, 1163, 1164, 0,
	0, 0, 0, 0, 0, 0, 0, 1196, 2799, 0,
	2798, 1194, 1212, 1184, 1185, 1186, 1182, 1183, 1195, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 291,
	292, 294, 293, 295, 296, 297, 298, 0, 299, 300,
	0, 0, 0, 0, 0, 1236, 1200, 0, 0, 301,
	0, 302, 303, 1276, 304, 305, 306, 307, 308, 309,
	310, 677, 1249, 0, 311, 1256, 312, 1255, 0, 1266,
	313, 314, 315, 316, 317, 318, 1202, 1235, 1167, 319,
	1296, 1297, 684, 0, 320, 321, 1242, 0, 1223, 0,
	322, 323, 324, 325, 326, 327, 328, 329, 0, 0,
	331, 332, 333, 330, 334, 0, 335, 0, 336, 337,
	338, 339, 340, 341, 0, 342, 343, 344, 1277, 345,
	346, 347, 1226, 1224, 1225, 1232, 1228, 1227, 1231, 348,
	349, 350, 351, 352, 1259, 353, 355, 1253, 1252, 1172,
	358, 354, 356, 0, 359, 357, 360, 0, 361, 362,
	363, 0, 0, 364, 1244, 366, 0, 367, 368, 369,
	0, 370, 371, 372, 0, 373, 374, 1178, 375, 376,
	377, 379, 381, 378, 380, 382, 383, 384, 385, 1267,
	1268, 386, 1191, 288, 0, 0, 0, 0, 0, 387,
	388, 389, 1251, 0, 0, 0, 390, 0, 391, 392,
	393, 0, 394, 0, 1278, 395, 396, 397, 1264, 1265,
	398, 399, 400, 401, 402, 403, 404, 405, 406, 0,
	407, 1274, 0, 1201, 408, 0, 409, 410, 411, 412,
	413, 414, 1237, 1238, 1241, 502, 1280, 415, 416, 0,
	417, 418, 419, 420, 421, 0, 0, 0, 289, 422,
	423, 424, 0, 1279, 503, 425, 1246, 1247, 0, 1207,
	0, 426, 427, 1281, 1239, 1282, 428, 429, 430, 1283,
	431, 0, 0, 0, 432, 433, 434, 435, 436, 437,
	0, 438, 440, 439, 0, 441, 1275, 1284, 442, 443,
	1285, 0, 444, 445, 446, 447, 448, 449, 452, 1230,
	1229, 450, 451, 453, 454, 0, 455, 456, 458, 461,
	457, 459, 460, 462, 475, 463, 464, 465, 466, 467,
	468, 469, 470, 471, 472, 473, 474, 477, 0, 476,
	1286, 478, 479, 480, 481, 482, 489, 491, 492, 487,
	488, 490, 493, 494, 496, 484, 485, 486, 1287, 495,
	483, 1169, 290, 1288, 497, 498, 499, 500, 1192, 1240,
	501, 1254, 504, 505, 0, 0, 506, 0, 507, 0,
	0, 509, 510, 511, 0, 0, 512, 513, 706, 1289,
	514, 1290, 1269, 515, 516, 1179, 517, 518, 519, 520,
	521, 522, 523, 524, 525, 0, 526, 527, 708, 528,
	529, 530, 709, 531, 532, 533, 1270, 534, 711, 535,
	536, 0, 537, 538, 539, 0, 540, 541, 542, 543,
	544, 545, 546, 1250, 547, 548, 550, 549, 551, 0,
	552, 0, 553, 554, 555, 0, 0, 0, 0, 0,
	556, 557, 559, 0, 560, 561, 562, 563, 558, 564,
	565, 566, 567, 568, 0, 569, 570, 571, 1291, 572,
	573, 574, 575, 576, 1180, 577, 0, 578, 579, 586,
	587, 588, 580, 581, 582, 589, 590, 591, 592, 593,
	0, 595, 596, 594, 597, 598, 599, 1233, 600, 601,
	583, 584, 602, 603, 1292, 604, 605, 606, 607, 608,
	609, 610, 1248, 0, 611, 0, 612, 613, 614, 615,
	616, 618, 585, 619, 624, 625, 1295, 620, 621, 622,
	623, 1271, 627, 628, 0, 629, 630, 1166, 626, 617,
	0, 631, 632, 633, 634, 635, 636, 0, 637, 638,
	0, 639, 1260, 1261, 1262, 1263, 0, 649, 0, 640,
	641, 642, 643, 1272, 644, 1273, 1190, 645, 646, 647,
	648, 0, 650, 651, 0, 1173, 652, 653, 655, 657,
	658, 654, 656, 659, 1234, 660, 0, 0, 661, 662,
	663, 723, 1257, 1294, 0, 665, 664, 666, 667, 668,
	726, 669, 670, 0, 0, 0, 0, 671, 672, 727,
	673, 674, 675, 1170, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1165, 0, 0,
	0, 0, 0, 0, 1163, 1164, 0, 0, 0, 0,
	0, 0, 0, 0, 1196, 2796, 0, 1838, 1194, 1212,
	1184, 1185, 1186, 1182, 1183, 1195, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 291, 292, 294, 293,
	295, 296, 297, 298, 0, 299, 300, 0, 0, 0,
	0, 0, 1236, 1200, 0, 0, 301, 0, 302, 303,
	1276, 304, 305, 306, 307, 308, 309, 310, 677, 1249,
	0, 311, 1256, 312, 1255, 0, 1266, 313, 314, 315,
	316, 317, 318, 1202, 1235, 1167, 319, 1296, 1297, 684,
	0, 320, 321, 1242, 0, 1223, 0, 322, 323, 324,
	325, 326, 327, 328, 329, 0, 0, 331, 332, 333,
	330, 334, 0, 335, 0, 336, 337, 338, 339, 340,
	341, 0, 342, 343, 344, 1277, 345, 346, 347, 1226,
	1224, 1225, 1232, 1228, 1227, 1231, 348, 349, 350, 351,
	352, 1259, 353, 355, 1253, 1252, 1172, 358, 354, 356,
	0, 359, 357, 360, 0, 361, 362, 363, 0, 0,
	364, 1244, 366, 0, 367, 368, 369, 0, 370, 371,
	372, 0, 373, 374, 1178, 375, 376, 377, 379, 381,
	378, 380, 382, 383, 384, 385, 1267, 1268, 386, 1191,
	288, 0, 0, 0, 0, 0, 387, 388, 389, 1251,
	0, 0, 0, 390, 0, 391, 392, 393, 0, 394,
	0, 1278, 395, 396, 397, 1264, 1265, 398, 399, 400,
	401, 402, 403, 404, 405, 406, 0, 407, 1274, 0,
	1201, 408, 0, 409, 410, 411, 412, 413, 414, 1237,
	1238, 1241, 502, 1280, 415, 416, 0, 417, 418, 419,
	420, 421, 0, 0, 0, 289, 422, 423, 424, 0,
	1279, 503, 425, 1246, 1247, 0, 1207, 0, 426, 427,
	1281, 1239, 1282, 428, 429, 430, 1283, 431, 0, 0,
	0, 432, 433, 434, 435, 436, 437, 0, 438, 440,
	439, 0, 441, 1275, 1284, 442, 443, 1285, 0, 444,
	445, 446, 447, 448, 449, 452, 1230, 1229, 450, 451,
	453, 454, 0, 455, 456, 458, 461, 457, 459, 460,
	462, 475, 463, 464, 465, 466, 467, 468, 469, 470,
	471, 472, 473, 474, 477, 0, 476, 1286, 478, 479,
	480, 481, 482, 489, 491, 492, 487, 488, 490, 493,
	494, 496, 484, 485, 486, 1287, 495, 483, 1169, 290,
	1288, 497, 498, 499, 500, 1192, 1240, 501, 1254, 504,
	505, 0, 0, 506, 0, 507, 0, 0, 509, 510,
	511, 0, 0, 512, 513, 706, 1289, 514, 1290, 1269,
	515, 516, 1179, 517, 518, 519, 520, 521, 522, 523,
	524, 525, 0, 526, 527, 708, 528, 529, 530, 709,
	531, 532, 533, 1270, 534, 711, 535, 536, 0, 537,
	538, 539, 0, 540, 541, 542, 543, 544, 545, 546,
	1250, 547, 548, 550, 549, 551, 0, 552, 0, 553,
	554, 555, 0, 0, 0, 0, 0, 556, 557, 559,
	0, 560, 561, 562, 563, 558, 564, 565, 566, 567,
	568, 0, 569, 570, 571, 1291, 572, 573, 574, 575,
	576, 1180, 577, 0, 578, 579, 586, 587, 588, 580,
	581, 582, 589, 590, 591, 592, 593, 0, 595, 596,
	594, 597, 598, 599, 1233, 600, 601, 583, 584, 602,
	603, 1292, 604, 605, 606, 607, 608, 609, 610, 1248,
	0, 611, 0, 612, 613, 614, 615, 616, 618, 585,
	619, 624, 625, 1295, 620, 621, 622, 623, 1271, 627,
	628, 0, 629, 630, 1166, 626, 617, 0, 631, 632,
	633, 634, 635, 636, 0, 637, 638, 0, 639, 1260,
	1261, 1262, 1263, 0, 649, 0, 640, 641, 642, 643,
	1272, 644, 1273, 1190, 645, 646, 647, 648, 0, 650,
	651, 0, 1173, 652, 653, 655, 657, 658, 654, 656,
	659, 1234, 660, 0, 0, 661, 662, 663, 723, 1257,
	1294, 0, 665, 664, 666, 667, 668, 726, 669, 670,
	1837, 0, 0, 0, 671, 672, 727, 673, 674, 675,
	1170, 0, 0, 0, 1159, 0, 1212, 1184, 1185, 1186,
	1182, 1183, 1195, 0, 1165, 0, 0, 0, 0, 0,
	0, 1163, 1164, 291, 292, 294, 293, 295, 296, 297,
	298, 1196, 299, 300, 0, 1194, 0, 0, 0, 1236,
	1200, 0, 0, 301, 0, 302, 303, 1276, 304, 305,
	306, 307, 308, 309, 310, 677, 1249, 0, 311, 1256,
	312, 1255, 0, 1266, 313, 314, 315, 316, 317, 318,
	1202, 1235, 1167, 319, 1296, 1297, 684, 0, 320, 321,
	1242, 0, 1223, 0, 322, 323, 324, 325, 326, 327,
	328, 329, 0, 0, 331, 332, 333, 330, 334, 0,
	335, 0, 336, 337, 338, 339, 340, 341, 0, 342,
	343, 344, 1277, 345, 346, 347, 1226, 1224, 1225, 1232,
	1228, 1227, 1231, 348, 349, 350, 351, 352, 1259, 353,
	355, 1253, 1252, 1172, 358, 354, 356, 0, 359, 357,
	360, 0, 361, 362, 363, 0, 0, 364, 1244, 366,
	0, 367, 368, 369, 0, 370, 371, 372, 0, 373,
	374, 1178, 375, 376, 377, 379, 381, 378, 380, 382,
	383, 384, 385, 1267, 1268, 386, 1191, 288, 0, 0,
	0, 0, 0, 387, 388, 389, 1251, 0, 0, 0,
	390, 0, 391, 392, 393, 0, 394, 0, 1278, 395,
	396, 397, 1264, 1265, 398, 399, 400, 401, 402, 403,
	404, 405, 406, 0, 407, 1274, 0, 1201, 408, 0,
	409, 410, 411, 412, 413, 414, 1237, 1238, 1241, 502,
	1280, 415, 416, 0, 417, 418, 419, 420, 421, 0,
	0, 0, 289, 422, 423, 424, 0, 1279, 503, 425,
	1246, 1247, 0, 1207, 0, 426, 427, 1281, 1239, 1282,
	428, 429, 430, 1283, 431, 0, 0, 0, 432, 433,
	434, 435, 436, 437, 0, 438, 440, 439, 0, 441,
	1275, 1284, 442, 443, 1285, 0, 444, 445, 446, 447,
	448, 449, 452, 1230, 1229, 450, 451, 453, 454, 0,
	455, 456, 458, 461, 457, 459, 460, 462, 475, 463,
	464, 465, 466, 467, 468, 469, 470, 471, 472, 473,
	474, 477, 0, 476, 1286, 478, 479, 480, 481, 482,
	489, 491, 492, 487, 488, 490, 493, 494, 496, 484,
	485, 486, 1287, 495, 483, 1169, 290, 1288, 497, 498,
	499, 500, 1192, 1240, 501, 1254, 504, 505, 0, 0,
	506, 0, 507, 1174, 0, 509, 510, 511, 0, 0,
	512, 513, 706, 1289, 514, 1290, 1269, 515, 516, 1179,
	517, 518, 519, 520, 521, 522, 523, 524, 525, 0,
	526, 527, 708, 528, 529, 530, 709, 531, 532, 533,
	1270, 534, 711, 535, 536, 0, 537, 538, 539, 0,
	540, 541, 542, 543, 544, 545, 546, 1250, 547, 548,
	550, 549, 551, 0, 552, 0, 553, 554, 555, 0,
	0, 0, 0, 0, 556, 557, 559, 0, 560, 561,
	562, 563, 558, 564, 565, 566, 567, 568, 0, 569,
	570, 571, 1291, 572, 573, 574, 575, 576, 1180, 577,
	0, 578, 579, 586, 587, 588, 580, 581, 582, 589,
	590, 591, 592, 593, 0, 595, 596, 594, 597, 598,
	599, 1233, 600, 601, 583, 584, 602, 603, 1292, 604,
	605, 606, 607, 608, 609, 610, 1248, 0, 611, 0,
	612, 613, 614, 615, 616, 618, 585, 619, 624, 625,
	1295, 620, 621, 622, 623, 1271, 627, 628, 0, 629,
	630, 1166, 626, 617, 0, 631, 632, 633, 634, 635,
	636, 0, 637, 638, 0, 639, 1260, 1261, 1262, 1263,
	0, 649, 0, 640, 641, 642, 643, 1272, 644, 1273,
	1190, 645, 646, 647, 648, 0, 650, 651, 0, 1173,
	652, 653, 655, 657, 658, 654, 656, 659, 1234, 660,
	0, 0, 661, 662, 663, 723, 1257, 1294, 0, 665,
	664, 666, 667, 668, 726, 669, 670, 0, 0, 0,
	0, 671, 672, 727, 673, 674, 675, 1170, 0, 0,
	0, 0, 0, 1212, 1184, 1185, 1186, 1182, 1183, 1195,
	0, 1165, 0, 0, 0, 0, 0, 0, 1163, 1164,
	291, 292, 294, 293, 295, 296, 297, 298, 1196, 299,
	300, 0, 1194, 0, 0, 0, 1236, 1200, 0, 0,
	301, 0, 302, 303, 1276, 304, 305, 306, 307, 308,
	309, 310, 677, 1249, 0, 311, 1256, 312, 1255, 0,
	1266, 313, 314, 315, 316, 317, 318, 1202, 1235, 1167,
	319, 1296, 1297, 684, 0, 320, 321, 1242, 0, 1223,
	0, 322, 323, 324, 325, 326, 327, 328, 329, 0,
	0, 331, 332, 333, 330, 334, 0, 335, 0, 336,
	337, 338, 339, 4982, 341, 0, 342, 343, 344, 1277,
	345, 346, 347, 1226, 1224, 1225, 1232, 1228, 1227, 1231,
	348, 349, 350, 351, 352, 1259, 353, 355, 1253, 1252,
	1172, 358, 354, 356, 0, 359, 357, 360, 0, 361,
	362, 363, 0, 0, 364, 1244, 366, 0, 367, 368,
	369, 0, 370, 371, 372, 0, 373, 374, 1178, 375,
	376, 377, 379, 381, 378, 380, 382, 383, 384, 385,
	1267, 1268, 386, 1191, 288, 0, 0, 0, 0, 0,
	387, 388, 389, 1251, 0, 0, 0, 390, 0, 391,
	392, 393, 0, 394, 0, 1278, 395, 396, 397, 1264,
	1265, 398, 399, 400, 401, 402, 403, 404, 405, 406,
	0, 407, 1274, 0, 1201, 408, 0, 409, 410, 411,
	412, 413, 414, 1237, 1238, 1241, 502, 1280, 415, 416,
	0, 417, 418, 419, 420, 421, 0, 0, 0, 289,
	422, 423, 424, 0, 1279, 503, 425, 1246, 1247, 0,
	1207, 0, 426, 427, 1281, 1239, 1282, 428, 429, 430,
	1283, 431, 0, 0, 0, 432, 433, 434, 435, 436,
	437, 0, 438, 440, 439, 0, 441, 1275, 1284, 442,
	443, 1285, 0, 444, 445, 446, 447, 448, 449, 452,
	1230, 1229, 450, 451, 453, 454, 0, 455, 456, 458,
	461, 457, 459, 460, 462, 475, 463, 464, 465, 466,
	467, 468, 469, 470, 471, 472, 473, 474, 477, 0,
	476, 1286, 478, 479, 480, 481, 482, 489, 491, 492,
	487, 488, 490, 493, 494, 496, 484, 485, 486, 1287,
	495, 483, 1169, 290, 1288, 497, 498, 499, 500, 1192,
	1240, 501, 1254, 504, 505, 0, 0, 506, 0, 507,
	1174, 0, 509, 510, 511, 0, 0, 512, 513, 706,
	1289, 514, 1290, 1269, 515, 516, 1179, 517, 518, 519,
	520, 521, 522, 523, 524, 525, 0, 526, 527, 708,
	528, 529, 530, 709, 531, 532, 533, 1270, 534, 711,
	535, 536, 0, 537, 538, 539, 0, 540, 541, 542,
	543, 544, 545, 546, 1250, 547, 548, 550, 549, 551,
	0, 552, 0, 553, 554, 555, 0, 0, 0, 0,
	0, 556, 557, 559, 0, 560, 561, 562, 563, 558,
	564, 565, 566, 567, 568, 0, 569, 570, 571, 1291,
	572, 573, 574, 575, 576, 1180, 577, 0, 578, 579,
	586, 587, 588, 580, 581, 582, 589, 590, 591, 592,
	593, 0, 595, 596, 594, 597, 598, 599, 1233, 600,
	601, 583, 584, 602, 603, 1292, 604, 605, 606, 607,
	608, 609, 610, 1248, 0, 611, 0, 612, 613, 614,
	615, 616, 618, 585, 619, 624, 625, 1295, 620, 621,
	622, 623, 1271, 627, 628, 0, 629, 630, 1166, 626,
	617, 0, 631, 632, 633, 634, 635, 636, 0, 637,
	638, 0, 639, 1260, 1261, 1262, 1263, 0, 649, 0,
	640, 641, 642, 643, 1272, 644, 1273, 1190, 645, 646,
	647, 648, 0, 650, 651, 0, 1173, 652, 653, 655,
	657, 658, 654, 656, 659, 1234, 660, 0, 0, 661,
	662, 663, 723, 1257, 1294, 0, 665, 664, 666, 667,
	668, 726, 669, 670, 0, 0, 0, 0, 671, 672,
	727, 673, 674, 675, 1170, 0, 0, 0, 0, 0,
	1212, 1184, 1185, 1186, 1182, 1183, 1195, 0, 1165, 0,
	0, 0, 0, 0, 0, 1163, 1164, 291, 292, 294,
	293, 295, 296, 297, 298, 1196, 299, 300, 0, 1194,
	0, 0, 0, 1236, 1200, 0, 0, 301, 0, 302,
	303, 1276, 304, 305, 306, 307, 308, 309, 310, 677,
	1249, 0, 311, 1256, 312, 1255, 0, 1266, 313, 314,
	315, 316, 317, 318, 1202, 1235, 1167, 319, 1296, 1297,
	684, 0, 320, 321, 1242, 0, 1223, 0, 322, 323,
	324, 325, 326, 327, 328, 329, 0, 0, 331, 332,
	333, 330, 334, 0, 335, 0, 336, 337, 338, 339,
	340, 341, 0, 342, 343, 344, 1277, 345, 346, 347,
	1226, 1224, 1225, 1232, 1228, 1227, 1231, 348, 349, 350,
	351, 352, 1259, 353, 355, 1253, 1252, 1172, 358, 354,
	356, 0, 359, 357, 360, 0, 361, 362, 363, 0,
	0, 364, 1244, 366, 0, 367, 368, 369, 0, 370,
	371, 372, 0, 373, 374, 1178, 375, 376, 377, 379,
	381, 378, 380, 382, 383, 384, 385, 1267, 1268, 386,
	1191, 288, 0, 0, 0, 0, 0, 387, 388, 389,
	1251, 0, 0, 0, 390, 0, 391, 392, 393, 0,
	394, 0, 1278, 395, 396, 397, 1264, 1265, 398, 399,
	400, 401, 402, 403, 404, 405, 406, 0, 407, 1274,
	0, 1201, 408, 0, 409, 410, 411, 412, 413, 414,
	1237, 1238, 1241, 502, 1280, 415, 416, 0, 417, 418,
	419, 420, 421, 0, 0, 0, 2639, 422, 423, 424,
	0, 1279, 503, 425, 1246, 1247, 0, 1207, 0, 426,
	427, 1281, 1239, 1282, 428, 429, 430, 1283, 431, 0,
	0, 0, 432, 433, 434, 435, 436, 437, 0, 438,
	440, 439, 0, 441, 1275, 1284, 442, 443, 1285, 0,
	444, 445, 446, 447, 448, 449, 452, 1230, 1229, 450,
	451, 453, 454, 0, 455, 456, 458, 461, 457, 459,
	460, 462, 475, 463, 464, 465, 466, 467, 468, 469,
	470, 471, 472, 473, 474, 477, 0, 476, 1286, 478,
	479, 480, 481, 482, 489, 491, 492, 487, 488, 490,
	493, 494, 496, 484, 485, 486, 1287, 495, 483, 1169,
	290, 1288, 497, 498, 499, 500, 1192, 1240, 501, 1254,
	504, 505, 0, 0, 506, 0, 507, 0, 0, 509,
	510, 511, 0, 0, 512, 513, 706, 1289, 514, 1290,
	1269, 515, 516, 1179, 517, 518, 519, 520, 521, 522,
	523, 524, 525, 0, 526, 527, 708, 528, 529, 530,
	709, 531, 532, 533, 1270, 534, 711, 535, 536, 2638,
	537, 538, 539, 0, 540, 541, 542, 543, 544, 545,
	546, 1250, 547, 548, 550, 549, 551, 0, 552, 0,
	553, 554, 555, 0, 0, 0, 0, 0, 556, 557,
	559, 0, 560, 561, 562, 563, 558, 564, 565, 566,
	567, 568, 0, 569, 570, 571, 1291, 572, 573, 574,
	575, 576, 1180, 577, 0, 578, 579, 586, 587, 588,
	580, 581, 582, 589, 590, 591, 592, 593, 0, 595,
	596, 594, 597, 598, 599, 1233, 600, 601, 583, 584,
	602, 603, 1292, 604, 605, 606, 607, 608, 609, 610,
	1248, 0, 611, 0, 612, 613, 614, 615, 616, 618,
	585, 619, 624, 625, 1295, 620, 621, 622, 623, 1271,
	627, 628, 0, 629, 630, 1166, 626, 617, 0, 631,
	632, 633, 634, 635, 636, 0, 637, 638, 0, 639,
	1260, 1261, 1262, 1263, 0, 649, 0, 640, 641, 642,
	643, 1272, 644, 1273, 1190, 645, 646, 647, 648, 0,
	650, 651, 0, 1173, 652, 653, 655, 657, 658, 654,
	656, 659, 1234, 660, 0, 0, 661, 662, 663, 723,
	1257, 1294, 0, 665, 664, 666, 667, 668, 726, 669,
	670, 0, 0, 0, 0, 671, 672, 727, 673, 674,
	675, 1170, 0, 0, 0, 0, 0, 1212, 1184, 1185,
	1186, 1182, 1183, 1195, 0, 1165, 0, 0, 0, 0,
	0, 0, 1163, 1164, 291, 292, 294, 293, 295, 296,
	297, 298, 1196, 299, 300, 0, 1194, 0, 0, 0,
	1236, 1200, 0, 0, 301, 0, 302, 303, 1276, 304,
	305, 306, 307, 308, 309, 310, 677, 1249, 0, 311,
	1256, 312, 1255, 0, 1266, 313, 314, 315, 316, 317,
	318, 1202, 1235, 1167, 319, 1296, 1297, 684, 0, 320,
	321, 1242, 0, 1223, 0, 322, 323, 324, 325, 326,
	327, 328, 329, 0, 0, 331, 332, 333, 330, 334,
	0, 335, 0, 336, 337, 338, 339, 4705, 341, 0,
	342, 343, 344, 1277, 345, 346, 347, 1226, 1224, 1225,
	1232, 1228, 1227, 1231, 348, 349, 350, 351, 352, 1259,
	353, 355, 1253, 1252, 1172, 358, 354, 356, 0, 359,
	357, 360, 0, 361, 362, 363, 0, 0, 364, 1244,
	366, 0, 367, 368, 369, 0, 370, 371, 372, 0,
	373, 374, 1178, 375, 376, 377, 379, 381, 378, 380,
	382, 383, 384, 385, 1267, 1268, 386, 1191, 288, 0,
	0, 0, 0, 0, 387, 388, 389, 1251, 0, 0,
	0, 390, 0, 391, 392, 393, 0, 394, 0, 1278,
	395, 396, 397, 1264, 1265, 398, 399, 400, 401, 402,
	403, 404, 405, 406, 0, 407, 1274, 0, 1201, 408,
	0, 409, 410, 411, 412, 413, 414, 1237, 1238, 1241,
	502, 1280, 415, 416, 0, 417, 418, 419, 420, 421,
	0, 0, 0, 289, 422, 423, 424, 0, 1279, 503,
	425, 1246, 1247, 0, 1207, 0, 426, 427, 1281, 1239,
	1282, 428, 429, 430, 1283, 431, 0, 0, 0, 432,
	433, 434, 435, 436, 437, 0, 438, 440, 439, 0,
	441, 1275, 1284, 442, 443, 1285, 0, 444, 445, 446,
	447, 448, 449, 452, 1230, 1229, 450, 451, 453, 454,
	0, 455, 456, 458, 461, 457, 459, 460, 462, 475,
	463, 464, 465, 466, 467, 468, 469, 470, 471, 472,
	473, 474, 477, 0, 476, 1286, 478, 479, 480, 481,
	482, 489, 491, 492, 487, 488, 490, 493, 494, 496,
	484, 485, 486, 1287, 495, 483, 1169, 290, 1288, 497,
	498, 499, 500, 1192, 1240, 501, 1254, 504, 505, 0,
	0, 506, 0, 507, 1174, 0, 509, 510, 511, 0,
	0, 512, 513, 706, 1289, 514, 1290, 1269, 515, 516,
	1179, 517, 518, 519, 520, 521, 522, 523, 524, 525,
	0, 526, 527, 708, 528, 529, 530, 709, 531, 532,
	533, 1270, 534, 711, 535, 536, 0, 537, 538, 539,
	0, 540, 541, 542, 543, 544, 545, 546, 1250, 547,
	548, 550, 549, 551, 0, 552, 0, 553, 554, 555,
	0, 0, 0, 0, 0, 556, 557, 559, 0, 560,
	561, 562, 563, 558, 564, 565, 566, 567, 568, 0,
	569, 570, 571, 1291, 572, 573, 574, 575, 576, 1180,
	577, 0, 578, 579, 586, 587, 588, 580, 581, 582,
	589, 590, 591, 592, 593, 0, 595, 596, 594, 597,
	598, 599, 1233, 600, 601, 583, 584, 602, 603, 1292,
	604, 605, 606, 607, 608, 609, 610, 1248, 0, 611,
	0, 612, 613, 614, 615, 616, 618, 585, 619, 624,
	625, 1295, 620, 621, 622, 623, 1271, 627, 628, 0,
	629, 630, 1166, 626, 617, 0, 631, 632, 633, 634,
	635, 636, 0, 637, 638, 0, 639, 1260, 1261, 1262,
	1263, 0, 649, 0, 640, 641, 642, 643, 1272, 644,
	1273, 1190, 645, 646, 647, 648, 0, 650, 651, 0,
	1173, 652, 653, 655, 657, 658, 654, 656, 659, 1234,
	660, 0, 0, 661, 662, 663, 723, 1257, 1294, 0,
	665, 664, 666, 667, 668, 726, 669, 670, 0, 0,
	0, 0, 671, 672, 727, 673, 674, 675, 1170, 0,
	0, 0, 0, 0, 1212, 1184, 1185, 1186, 1182, 1183,
	1195, 0, 1165, 0, 0, 0, 0, 0, 0, 1163,
	1164, 291, 292, 294, 293, 295, 296, 297, 298, 1196,
	299, 300, 0, 1194, 0, 0, 0, 1236, 1200, 0,
	0, 301, 0, 302, 303, 1276, 304, 305, 306, 307,
	308, 309, 310, 677, 1249, 0, 311, 1256, 312, 1255,
	0, 1266, 313, 314, 315, 316, 317, 318, 1202, 1235,
	1167, 319, 1296, 1297, 684, 0, 320, 321, 1242, 0,
	1223, 0, 322, 323, 324, 325, 326, 327, 328, 329,
	0, 0, 331, 332, 333, 330, 334, 0, 335, 0,
	336, 337, 338, 339, 340, 341, 0, 342, 343, 344,
	1277, 345, 346, 347, 1226, 1224, 1225, 1232, 1228, 1227,
	1231, 348, 349, 350, 351, 352, 1259, 353, 355, 1253,
	1252, 1172, 358, 354, 356, 0, 359, 357, 360, 0,
	361, 362, 363, 0, 0, 364, 1244, 366, 0, 367,
	368, 369, 0, 370, 371, 372, 0, 373, 374, 1178,
	375, 376, 377, 379, 381, 378, 380, 382, 383, 384,
	385, 1267, 1268, 386, 1191, 288, 0, 0, 0, 0,
	0, 387, 388, 389, 1251, 0, 0, 0, 390, 0,
	391, 392, 393, 0, 394, 0, 1278, 395, 396, 397,
	1264, 1265, 398, 399, 400, 401, 402, 403, 404, 405,
	406, 0, 407, 1274, 0, 1201, 408, 0, 409, 410,
	411, 412, 413, 414, 1237, 1238, 1241, 502, 1280, 415,
	416, 0, 417, 418, 419, 420, 421, 0, 0, 0,
	289, 422, 423, 424, 0, 1279, 503, 425, 1246, 1247,
	0, 1207, 0, 426, 427, 1281, 1239, 1282, 428, 429,
	430, 1283, 431, 0, 0, 0, 432, 433, 434, 435,
	436, 437, 0, 438, 440, 439, 0, 441, 1275, 1284,
	442, 443, 1285, 0, 444, 445, 446, 447, 448, 449,
	452, 1230, 1229, 450, 451, 453, 454, 0, 455, 456,
	458, 461, 457, 459, 460, 462, 475, 463, 464, 465,
	466, 467, 468, 469, 470, 471, 472, 473, 474, 477,
	0, 476, 1286, 478, 479, 480, 481, 482, 489, 491,
	492, 487, 488, 490, 493, 494, 496, 484, 485, 486,
	1287, 495, 483, 1169, 290, 1288, 497, 498, 499, 500,
	1192, 1240, 501, 1254, 504, 505, 0, 0, 506, 0,
	507, 1174, 0, 509, 510, 511, 0, 0, 512, 513,
	706, 1289, 514, 1290, 1269, 515, 516, 1179, 517, 518,
	519, 520, 521, 522, 523, 524, 525, 0, 526, 527,
	708, 528, 529, 530, 709, 531, 532, 533, 1270, 534,
	711, 535, 536, 0, 537, 538, 539, 0, 540, 541,
	542, 543, 544, 545, 546, 1250, 547, 548, 550, 549,
	551, 0, 552, 0, 553, 554, 555, 0, 0, 0,
	0, 0, 556, 557, 559, 0, 560, 561, 562, 563,
	558, 564, 565, 566, 567, 568, 0, 569, 570, 571,
	1291, 572, 573, 574, 575, 576, 1180, 577, 0, 578,
	579, 586, 587, 588, 580, 581, 582, 589, 590, 591,
	592, 593, 0, 595, 596, 594, 597, 598, 599, 1233,
	600, 601, 583, 584, 602, 603, 1292, 604, 605, 606,
	607, 608, 609, 610, 1248, 0, 611, 0, 612, 613,
	614, 615, 616, 618, 585, 619, 624, 625, 1295, 620,
	621, 622, 623, 1271, 627, 628, 0, 629, 630, 1166,
	626, 617, 0, 631, 632, 633, 634, 635, 636, 0,
	637, 638, 0, 639, 1260, 1261, 1262, 1263, 0, 649,
	0, 640, 641, 642, 643, 1272, 644, 1273, 1190, 645,
	646, 647, 648, 0, 650, 651, 0, 1173, 652, 653,
	655, 657, 658, 654, 656, 659, 1234, 660, 0, 0,
	661, 662, 663, 723, 1257, 1294, 0, 665, 664, 666,
	667, 668, 726, 669, 670, 0, 0, 0, 0, 671,
	672, 727, 673, 674, 675, 1170, 0, 0, 0, 0,
	0, 1212, 1184, 1185, 1186, 1182, 1183, 1195, 0, 1165,
	0, 0, 0, 0, 0, 0, 1163, 1164, 291, 292,
	294, 293, 295, 296, 297, 298, 1196, 299, 300, 0,
	1194, 0, 0, 0, 1236, 1200, 0, 0, 301, 0,
	302, 303, 1276, 304, 305, 306, 307, 308, 309, 310,
	677, 1249, 0, 311, 1256, 312, 1255, 0, 1266, 313,
	314, 315, 316, 317, 318, 1202, 1235, 1167, 319, 1296,
	1297, 684, 0, 320, 321, 1242, 0, 1223, 0, 322,
	323, 324, 325, 326, 327, 328, 329, 0, 0, 331,
	332, 333, 330, 334, 0, 335, 0, 336, 337, 338,
	339, 340, 341, 0, 342, 343, 344, 1277, 345, 346,
	347, 1226, 1224, 1225, 1232, 1228, 1227, 1231, 348, 349,
	350, 351, 352, 1259, 353, 355, 1253, 1252, 1172, 358,
	354, 356, 0, 359, 357, 360, 0, 361, 362, 363,
	0, 0, 364, 1244, 366, 0, 367, 368, 369, 0,
	370, 371, 372, 0, 373, 374, 1178, 375, 376, 377,
	379, 381, 378, 380, 382, 383, 384, 385, 1267, 1268,
	386, 1191, 288, 0, 0, 0, 0, 0, 387, 388,
	389, 1251, 0, 0, 0, 390, 0, 391, 392, 393,
	0, 394, 0, 1278, 395, 396, 397, 1264, 1265, 398,
	399, 400, 401, 402, 403, 404, 405, 406, 0, 407,
	1274, 0, 1201, 408, 0, 409, 410, 411, 412, 413,
	414, 1237, 1238, 1241, 502, 1280, 415, 416, 0, 417,
	418, 419, 420, 421, 0, 0, 0, 289, 422, 423,
	424, 0, 1279, 503, 425, 1246, 1247, 0, 1207, 0,
	426, 427, 1281, 1239, 1282, 428, 429, 430, 1283, 431,
	0, 0, 0, 432, 433, 434, 435, 436, 437, 0,
	438, 440, 439, 0, 441, 1275, 1284, 442, 443, 1285,
	0, 444, 445, 446, 447, 448, 449, 452, 1230, 1229,
	450, 451, 453, 454, 0, 455, 456, 458, 461, 457,
	459, 460, 462, 475, 463, 464, 465, 466, 467, 468,
	469, 470, 471, 472, 473, 474, 477, 0, 476, 1286,
	478, 479, 480, 481, 482, 489, 491, 492, 487, 488,
	490, 493, 494, 496, 484, 485, 486, 1287, 495, 483,
	1169, 4274, 1288, 497, 498, 499, 500, 1192, 1240, 501,
	1254, 504, 505, 0, 0, 506, 0, 507, 0, 0,
	509, 510, 511, 0, 0, 512, 513, 706, 1289, 514,
	1290, 1269, 515, 516, 1179, 517, 518, 519, 520, 521,
	522, 523, 524, 525, 0, 526, 527, 708, 528, 529,
	530, 709, 531, 532, 533, 1270, 534, 711, 535, 536,
	0, 537, 538, 539, 0, 540, 541, 542, 543, 544,
	545, 546, 1250, 547, 548, 550, 549, 551, 0, 552,
	0, 553, 554, 555, 0, 0, 0, 0, 0, 556,
	557, 559, 0, 560, 561, 562, 563, 558, 564, 565,
	566, 567, 568, 0, 569, 570, 571, 1291, 572, 573,
	574, 575, 576, 1180, 577, 0, 578, 579, 586, 587,
	588, 580, 581, 582, 589, 590, 591, 592, 593, 0,
	595, 596, 594, 597, 598, 599, 1233, 600, 601, 583,
	584, 602, 603, 1292, 604, 605, 606, 607, 608, 609,
	610, 1248, 0, 611, 0, 612, 613, 614, 615, 616,
	618, 585, 619, 624, 625, 1295, 620, 621, 622, 623,
	1271, 627, 628, 0, 629, 630, 1166, 626, 617, 0,
	631, 632, 633, 634, 635, 636, 0, 637, 638, 0,
	639, 1260, 1261, 1262, 1263, 0, 649, 0, 640, 641,
	642, 643, 1272, 644, 1273, 1190, 645, 646, 647, 648,
	0, 650, 651, 0, 1173, 652, 653, 655, 657, 658,
	654, 656, 659, 1234, 660, 0, 0, 661, 662, 663,
	723, 1257, 1294, 0, 665, 664, 666, 667, 668, 726,
	669, 670, 0, 0, 0, 0, 671, 672, 727, 673,
	674, 675, 1170, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1165, 0, 0, 0,
	0, 0, 0, 1163, 1164, 2072, 1212, 1184, 1185, 1186,
	1182, 1183, 1195, 1196, 0, 0, 0, 1194, 0, 0,
	0, 0, 0, 291, 292, 294, 293, 295, 296, 297,
	298, 0, 299, 300, 0, 0, 0, 0, 0, 1236,
	1200, 0, 0, 301, 0, 302, 303, 1276, 304, 305,
	306, 307, 308, 309, 310, 677, 1249, 0, 311, 1256,
	312, 1255, 0, 1266, 313, 314, 315, 316, 317, 318,
	1202, 1235, 1167, 319, 1296, 1297, 684, 0, 320, 321,
	1242, 0, 1223, 0, 322, 323, 324, 325, 326, 327,
	328, 329, 0, 0, 331, 332, 333, 330, 334, 0,
	335, 0, 336, 337, 338, 339, 340, 341, 0, 342,
	343, 344, 1277, 345, 346, 347, 1226, 1224, 1225, 1232,
	1228, 1227, 1231, 348, 349, 350, 351, 352, 1259, 353,
	355, 1253, 1252, 1172, 358, 354, 356, 0, 359, 357,
	360, 0, 361, 362, 363, 0, 0, 364, 1244, 366,
	0, 367, 368, 369, 0, 370, 371, 372, 0, 373,
	374, 1178, 375, 376, 377, 379, 381, 378, 380, 382,
	383, 384, 385, 1267, 1268, 386, 1191, 288, 0, 0,
	0, 0, 0, 387, 388, 389, 1251, 0, 0, 0,
	390, 0, 391, 392, 393, 0, 394, 0, 1278, 395,
	396, 397, 1264, 1265, 398, 399, 400, 401, 402, 403,
	404, 405, 406, 0, 407, 1274, 0, 1201, 408, 0,
	409, 410, 411, 412, 413, 414, 1237, 1238, 1241, 502,
	1280, 415, 416, 0, 417, 418, 419, 420, 421, 0,
	0, 0, 289, 422, 423, 424, 0, 1279, 503, 425,
	1246, 1247, 0, 1207, 0, 426, 427, 1281, 1239, 1282,
	428, 429, 430, 1283, 431, 0, 0, 0, 432, 433,
	434, 435, 436, 437, 0, 438, 440, 439, 0, 441,
	1275, 1284, 442, 443, 1285, 0, 444, 445, 446, 447,
	448, 449, 452, 1230, 1229, 450, 451, 453, 454, 0,
	455, 456, 458, 461, 457, 459, 460, 462, 475, 463,
	464, 465, 466, 467, 468, 469, 470, 471, 472, 473,
	474, 477, 0, 476, 1286, 478, 479, 480, 481, 482,
	489, 491, 492, 487, 488, 490, 493, 494, 496, 484,
	485, 486, 1287, 495, 483, 1169, 290, 1288, 497, 498,
	499, 500, 1192, 1240, 501, 1254, 504, 505, 0, 0,
	506, 0, 507, 0, 0, 509, 510, 511, 0, 0,
	512, 513, 706, 1289, 514, 1290, 1269, 515, 516, 1179,
	517, 518, 519, 520, 521, 522, 523, 524, 525, 0,
	526, 527, 708, 528, 529, 530, 709, 531, 532, 533,
	1270, 534, 711, 535, 536, 0, 537, 538, 539, 0,
	540, 541, 542, 543, 544, 545, 546, 1250, 547, 548,
	550, 549, 551, 0, 552, 0, 553, 554, 555, 0,
	0, 0, 0, 0, 556, 557, 559, 0, 560, 561,
	562, 563, 558, 564, 565, 566, 567, 568, 0, 569,
	570, 571, 1291, 572, 573, 574, 575, 576, 1180, 577,
	0, 578, 579, 586, 587, 588, 580, 581, 582, 589,
	590, 591, 592, 593, 0, 595, 596, 594, 597, 598,
	599, 1233, 600, 601, 583, 584, 602, 603, 1292, 604,
	605, 606, 607, 608, 609, 610, 1248, 0, 611, 0,
	612, 613, 614, 615, 616, 618, 585, 619, 624, 625,
	1295, 620, 621, 622, 623, 1271, 627, 628, 0, 629,
	630, 1166, 626, 617, 0, 631, 632, 633, 634, 635,
	636, 0, 637, 638, 0, 639, 1260, 1261, 1262, 1263,
	0, 649, 0, 640, 641, 642, 643, 1272, 644, 1273,
	1190, 645, 646, 647, 648, 0, 650, 651, 0, 1173,
	652, 653, 655, 657, 658, 654, 656, 659, 1234, 660,
	0, 0, 661, 662, 663, 723, 1257, 1294, 3954, 665,
	664, 666, 667, 668, 726, 669, 670, 0, 0, 0,
	0, 671, 672, 727, 673, 674, 675, 1170, 0, 0,
	0, 0, 0, 1212, 1184, 1185, 1186, 1182, 1183, 1195,
	0, 1165, 0, 0, 0, 0, 0, 0, 1163, 1164,
	291, 292, 294, 293, 295, 296, 297, 298, 1196, 299,
	300, 0, 1194, 0, 0, 0, 1236, 1200, 0, 0,
	301, 0, 302, 303, 1276, 304, 305, 306, 307, 308,
	309, 310, 677, 1249, 0, 311, 1256, 312, 1255, 0,
	1266, 313, 314, 315, 316, 317, 318, 1202, 1235, 1167,
	319, 1296, 1297, 684, 0, 320, 321, 1242, 0, 1223,
	0, 322, 323, 324, 325, 326, 327, 328, 329, 0,
	0, 331, 332, 333, 330, 334, 0, 335, 0, 336,
	337, 338, 339, 340, 341, 0, 342, 343, 344, 1277,
	345, 346, 347, 1226, 1224, 1225, 1232, 1228, 1227, 1231,
	348, 349, 350, 351, 352, 1259, 353, 355, 1253, 1252,
	1172, 358, 354, 356, 0, 359, 357, 360, 0, 361,
	362, 363, 0, 0, 364, 1244, 366, 0, 367, 368,
	369, 0, 370, 371, 372, 0, 373, 374, 1178, 375,
	376, 377, 379, 381, 378, 380, 382, 383, 384, 385,
	1267, 1268, 386, 1191, 288, 0, 0, 0, 0, 0,
	387, 388, 389, 1251, 0, 0, 0, 390, 0, 391,
	392, 393, 0, 394, 0, 1278, 395, 396, 397, 1264,
	1265, 398, 399, 400, 401, 402, 403, 404, 405, 406,
	0, 407, 1274, 0, 1201, 408, 0, 409, 410, 411,
	412, 413, 414, 1237, 1238, 1241, 502, 1280, 415, 416,
	0, 417, 418, 419, 420, 421, 0, 0, 0, 289,
	422, 423, 424, 0, 1279, 503, 425, 1246, 1247, 0,
	1207, 0, 426, 427, 1281, 1239, 1282, 428, 429, 430,
	1283, 431, 0, 0, 0, 432, 433, 434, 435, 436,
	437, 0, 438, 440, 439, 0, 441, 1275, 1284, 442,
	443, 1285, 0, 444, 445, 446, 447, 448, 449, 452,
	1230, 1229, 450, 451, 453, 454, 0, 455, 456, 458,
	461, 457, 459, 460, 462, 475, 463, 464, 465, 466,
	467, 468, 469, 470, 471, 472, 473, 474, 477, 0,
	476, 1286, 478, 479, 480, 481, 482, 489, 491, 492,
	487, 488, 490, 493, 494, 496, 484, 485, 486, 1287,
	495, 483, 1169, 290, 1288, 497, 498, 499, 500, 1192,
	1240, 501, 1254, 504, 505, 0, 0, 506, 0, 507,
	0, 0, 509, 510, 511, 0, 0, 512, 513, 706,
	1289, 514, 1290, 1269, 515, 516, 1179, 517, 518, 519,
	520, 521, 522, 523, 524, 525, 0, 526, 527, 708,
	528, 529, 530, 709, 531, 532, 533, 1270, 534, 711,
	535, 536, 0, 537, 538, 539, 0, 540, 541, 542,
	543, 544, 545, 546, 1250, 547, 548, 550, 549, 551,
	0, 552, 0, 553, 554, 555, 0, 0, 0, 0,
	0, 556, 557, 559, 0, 560, 561, 562, 563, 558,
	564, 565, 566, 567, 568, 0, 569, 570, 571, 1291,
	572, 573, 574, 575, 576, 1180, 577, 0, 578, 579,
	586, 587, 588, 580, 581, 582, 589, 590, 591, 592,
	593, 0, 595, 596, 594, 597, 598, 599, 1233, 600,
	601, 583, 584, 602, 603, 1292, 604, 605, 606, 607,
	608, 609, 610, 1248, 0, 611, 0, 612, 613, 614,
	615, 616, 618, 585, 619, 624, 625, 1295, 620, 621,
	622, 623, 1271, 627, 628, 0, 629, 630, 1166, 626,
	617, 0, 631, 632, 633, 634, 635, 636, 0, 637,
	638, 0, 639, 1260, 1261, 1262, 1263, 0, 649, 0,
	640, 641, 642, 643, 1272, 644, 1273, 1190, 645, 646,
	647, 648, 0, 650, 651, 0, 1173, 652, 653, 655,
	657, 658, 654, 656, 659, 1234, 660, 0, 0, 661,
	662, 663, 723, 1257, 1294, 0, 665, 664, 666, 667,
	668, 726, 669, 670, 0, 0, 0, 0, 671, 672,
	727, 673, 674, 675, 1170, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1165, 0,
	0, 0, 0, 0, 0, 1163, 1164, 2072, 1212, 1184,
	1185, 1186, 1182, 1183, 1195, 1196, 0, 0, 0, 1194,
	0, 0, 0, 0, 0, 291, 292, 294, 293, 295,
	296, 297, 298, 0, 299, 300, 0, 0, 0, 0,
	0, 1236, 1200, 0, 0, 301, 0, 302, 303, 1276,
	304, 305, 306, 307, 308, 309, 310, 677, 1249, 0,
	311, 1256, 312, 1255, 0, 1266, 313, 314, 315, 316,
	317, 318, 1202, 1235, 1167, 319, 1296, 1297, 684, 0,
	320, 321, 1242, 0, 1223, 0, 322, 323, 324, 325,
	326, 327, 328, 329, 0, 0, 331, 332, 333, 330,
	334, 0, 335, 0, 336, 337, 338, 339, 340, 341,
	0, 342, 343, 344, 1277, 345, 346, 347, 1226, 1224,
	1225, 1232, 1228, 1227, 1231, 348, 349, 350, 351, 352,
	1259, 353, 355, 1253, 1252, 1172, 358, 354, 356, 0,
	359, 357, 360, 0, 361, 362, 363, 0, 0, 364,
	1244, 366, 0, 367, 368, 369, 0, 370, 371, 372,
	0, 373, 374, 1178, 375, 376, 377, 379, 381, 378,
	380, 382, 383, 384, 385, 1267, 1268, 386, 1191, 288,
	0, 0, 0, 0, 0, 387, 388, 389, 1251, 0,
	0, 0, 390, 0, 391, 392, 393, 0, 394, 2897,
	1278, 395, 396, 397, 1264, 1265, 398, 399, 400, 401,
	402, 403, 404, 405, 406, 0, 407, 1274, 0, 1201,
	408, 0, 409, 410, 411, 412, 413, 414, 1237, 1238,
	1241, 502, 1280, 415, 416, 0, 417, 418, 419, 420,
	421, 0, 0, 0, 289, 422, 423, 424, 0, 1279,
	503, 425, 1246, 1247, 0, 1207, 0, 426, 427, 1281,
	1239, 1282, 428, 429, 430, 1283, 431, 0, 0, 0,
	432, 433, 434, 435, 436, 437, 0, 438, 440, 439,
	0, 441, 1275, 1284, 442, 443, 1285, 0, 444, 445,
	446, 447, 448, 449, 452, 1230, 1229, 450, 451, 453,
	454, 0, 455, 456, 458, 461, 457, 459, 460, 462,
	475, 463, 464, 465, 466, 467, 468, 469, 470, 471,
	472, 473, 474, 477, 0, 476, 1286, 478, 479, 480,
	481, 482, 489, 491, 492, 487, 488, 490, 493, 494,
	496, 484, 485, 486, 1287, 495, 483, 1169, 290, 1288,
	497, 498, 499, 500, 1192, 1240, 501, 1254, 504, 505,
	0, 0, 506, 0, 507, 0, 0, 509, 510, 511,
	0, 0, 512, 513, 706, 1289, 514, 1290, 1269, 515,
	516, 1179, 517, 518, 519, 520, 521, 522, 523, 524,
	525, 0, 526, 527, 708, 528, 529, 530, 709, 531,
	532, 533, 1270, 534, 711, 535, 536, 0, 537, 538,
	539, 0, 540, 541, 542, 543, 544, 545, 546, 1250,
	547, 548, 550, 549, 551, 0, 552, 0, 553, 554,
	555, 0, 0, 0, 0, 0, 556, 557, 559, 0,
	560, 561, 562, 563, 558, 564, 565, 566, 567, 568,
	0, 569, 570, 571, 1291, 572, 573, 574, 575, 576,
	1180, 577, 0, 578, 579, 586, 587, 588, 580, 581,
	582, 589, 590, 591, 592, 593, 0, 595, 596, 594,
	597, 598, 599, 1233, 600, 601, 583, 584, 602, 603,
	1292, 604, 605, 606, 607, 608, 609, 610, 1248, 0,
	611, 0, 612, 613, 614, 615, 616, 618, 585, 619,
	624, 625, 1295, 620, 621, 622, 623, 1271, 627, 628,
	0, 629, 630, 1166, 626, 617, 0, 631, 632, 633,
	634, 635, 636, 0, 637, 638, 0, 639, 1260, 1261,
	1262, 1263, 0, 649, 0, 640, 641, 642, 643, 1272,
	644, 1273, 1190, 645, 646, 647, 648, 0, 650, 651,
	0, 1173, 652, 653, 655, 657, 658, 654, 656, 659,
	1234, 660, 0, 0, 661, 662, 663, 723, 1257, 1294,
	0, 665, 664, 666, 667, 668, 726, 669, 670, 0,
	0, 0, 0, 671, 672, 727, 673, 674, 675, 1170,
	0, 0, 0, 0, 0, 1212, 1184, 1185, 1186, 1182,
	1183, 1195, 0, 1165, 0, 0, 0, 0, 0, 0,
	1163, 1164, 291, 292, 294, 293, 295, 296, 297, 298,
	1196, 299, 300, 0, 1194, 0, 0, 0, 1236, 1200,
	0, 0, 301, 0, 302, 303, 1276, 304, 305, 306,
	307, 308, 309, 310, 677, 1249, 0, 311, 1256, 312,
	1255, 0, 1266, 313, 314, 315, 316, 317, 318, 1202,
	1235, 1167, 319, 1296, 1297, 684, 0, 320, 321, 1242,
	0, 1223, 0, 322, 323, 324, 325, 326, 327, 328,
	329, 0, 0, 331, 332, 333, 330, 334, 0, 335,
	0, 336, 337, 338, 339, 340, 341, 0, 342, 343,
	344, 1277, 345, 346, 347, 1226, 1224, 1225, 1232, 1228,
	1227, 1231, 348, 349, 350, 351, 352, 1259, 353, 355,
	1253, 1252, 1172, 358, 354, 356, 0, 359, 357, 360,
	0, 361, 362, 363, 0, 0, 364, 1244, 366, 0,
	367, 368, 369, 0, 370, 371, 372, 0, 373, 374,
	1178, 375, 376, 377, 379, 381, 378, 380, 382, 383,
	384, 385, 1267, 1268, 386, 1191, 288, 0, 0, 0,
	0, 0, 387, 388, 389, 1251, 0, 0, 0, 390,
	0, 391, 392, 393, 0, 394, 0, 1278, 395, 396,
	397, 1264, 1265, 398, 399, 400, 401, 402, 403, 404,
	405, 406, 0, 407, 1274, 0, 1201, 408, 0, 409,
	410, 411, 412, 413, 414, 1237, 1238, 1241, 502, 1280,
	415, 416, 0, 417, 418, 419, 420, 421, 0, 0,
	0, 289, 422, 423, 424, 0, 1279, 503, 425, 1246,
	1247, 0, 1207, 0, 426, 427, 1281, 1239, 1282, 428,
	429, 430, 1283, 431, 0, 0, 0, 432, 433, 434,
	435, 436, 437, 0, 438, 440, 439, 0, 441, 1275,
	1284, 442, 443, 1285, 0, 444, 445, 446, 447, 448,
	449, 452, 1230, 1229, 450, 451, 453, 454, 0, 455,
	456, 458, 461, 457, 459, 460, 462, 475, 463, 464,
	465, 466, 467, 468, 469, 470, 471, 472, 473, 474,
	477, 0, 476, 1286, 478, 479, 480, 481, 482, 489,
	491, 492, 487, 488, 490, 493, 494, 496, 484, 485,
	486, 1287, 495, 483, 1169, 290, 1288, 497, 498, 499,
	500, 1192, 1240, 501, 1254, 504, 505, 0, 0, 506,
	0, 507, 0, 0, 509, 510, 511, 0, 0, 512,
	513, 706, 1289, 514, 1290, 1269, 515, 516, 1179, 517,
	518, 519, 520, 521, 522, 523, 524, 525, 0, 526,
	527, 708, 528, 529, 530, 709, 531, 532, 533, 1270,
	534, 711, 535, 536, 0, 537, 538, 539, 0, 540,
	541, 542, 543, 544, 545, 546, 1250, 547, 548, 550,
	549, 551, 0, 552, 0, 553, 554, 555, 0, 0,
	0, 0, 0, 556, 557, 559, 0, 560, 561, 562,
	563, 558, 564, 565, 566, 567, 568, 0, 569, 570,
	571, 1291, 572, 573, 574, 575, 576, 1180, 577, 0,
	578, 579, 586, 587, 588, 580, 581, 582, 589, 590,
	591, 592, 593, 0, 595, 596, 594, 597, 598, 599,
	1233, 600, 601, 583, 584, 602, 603, 1292, 604, 605,
	606, 607, 608, 609, 610, 1248, 0, 611, 0, 612,
	613, 614, 615, 616, 618, 585, 619, 624, 625, 1295,
	620, 621, 622, 623, 1271, 627, 628, 0, 629, 630,
	1166, 626, 617, 0, 631, 632, 633, 634, 635, 636,
	0, 637, 638, 0, 639, 1260, 1261, 1262, 1263, 0,
	649, 0, 640, 641, 642, 643, 1272, 644, 1273, 1190,
	645, 646, 647, 648, 0, 650, 651, 0, 1173, 652,
	653, 655, 657, 658, 654, 656, 659, 1234, 660, 0,
	0, 661, 662, 663, 723, 1257, 1294, 0, 665, 664,
	666, 667, 668, 726, 669, 670, 0, 0, 0, 0,
	671, 672, 727, 673, 674, 675, 1170, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1165, 0, 0, 0, 0, 0, 0, 1163, 1164, 0,
	0, 0, 0, 0, 0, 0, 0, 1196, 2000, 0,
	2902, 1194, 1212, 1184, 1185, 1186, 1182, 1183, 1195, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 291,
	292, 294, 293, 295, 296, 297, 298, 0, 299, 300,
	0, 0, 0, 0, 0, 1236, 1200, 0, 0, 301,
	0, 302, 303, 1276, 304, 305, 306, 307, 308, 309,
	310, 677, 1249, 0, 311, 1256, 312, 1255, 0, 1266,
	313, 314, 315, 316, 317, 318, 1202, 1235, 1167, 319,
	1296, 1297, 684, 0, 320, 321, 1242, 0, 1223, 0,
	322, 323, 324, 325, 326, 327, 328, 329, 0, 0,
	331, 332, 333, 330, 334, 0, 335, 0, 336, 337,
	338, 339, 340, 341, 0, 342, 343, 344, 1277, 345,
	346, 347, 1226, 1224, 1225, 1232, 1228, 1227, 1231, 348,
	349, 350, 351, 352, 1259, 353, 355, 1253, 1252, 1172,
	358, 354, 356, 0, 359, 357, 360, 0, 361, 362,
	363, 0, 0, 364, 1244, 366, 0, 367, 368, 369,
	0, 370, 371, 372, 0, 373, 374, 1178, 375, 376,
	377, 379, 381, 378, 380, 382, 383, 384, 385, 1267,
	1268, 386, 1191, 288, 0, 0, 0, 0, 0, 387,
	388, 389, 1251, 0, 0, 0, 390, 0, 391, 392,
	393, 0, 394, 0, 1278, 395, 396, 397, 1264, 1265,
	398, 399, 400, 401, 402, 403, 404, 405, 406, 0,
	407, 1274, 0, 1201, 408, 0, 409, 410, 411, 412,
	413, 414, 1237, 1238, 1241, 502, 1280, 415, 416, 0,
	417, 418, 419, 420, 421, 0, 0, 0, 289, 422,
	423, 424, 0, 1279, 503, 425, 1246, 1247, 0, 1207,
	0, 426, 427, 1281, 1239, 1282, 428, 429, 430, 1283,
	431, 0, 0, 0, 432, 433, 434, 435, 436, 437,
	0, 438, 440, 439, 0, 441, 1275, 1284, 442, 443,
	1285, 0, 444, 445, 446, 447, 448, 449, 452, 1230,
	1229, 450, 451, 453, 454, 0, 455, 456, 458, 461,
	457, 459, 460, 462, 475, 463, 464, 465, 466, 467,
	468, 469, 470, 471, 472, 473, 474, 477, 0, 476,
	1286, 478, 479, 480, 481, 482, 489, 491, 492, 487,
	488, 490, 493, 494, 496, 484, 485, 486, 1287, 495,
	483, 1169, 290, 1288, 497, 498, 499, 500, 1192, 1240,
	501, 1254, 504, 505, 0, 0, 506, 0, 507, 0,
	0, 509, 510, 511, 0, 0, 512, 513, 706, 1289,
	514, 1290, 1269, 515, 516, 1179, 517, 518, 519, 520,
	521, 522, 523, 524, 525, 0, 526, 527, 708, 528,
	529, 530, 709, 531, 532, 533, 1270, 534, 711, 535,
	536, 0, 537, 538, 539, 0, 540, 541, 542, 543,
	544, 545, 546, 1250, 547, 548, 550, 549, 551, 0,
	552, 0, 553, 554, 555, 0, 0, 0, 0, 0,
	556, 557, 559, 0, 560, 561, 562, 563, 558, 564,
	565, 566, 567, 568, 0, 569, 570, 571, 1291, 572,
	573, 574, 575, 576, 1180, 577, 0, 578, 579, 586,
	587, 588, 580, 581, 582, 589, 590, 591, 592, 593,
	0, 595, 596, 594, 597, 598, 599, 1233, 600, 601,
	583, 584, 602, 603, 1292, 604, 605, 606, 607, 608,
	609, 610, 1248, 0, 611, 0, 612, 613, 614, 615,
	616, 618, 585, 619, 624, 625, 1295, 620, 621, 622,
	623, 1271, 627, 628, 0, 629, 630, 1166, 626, 617,
	0, 631, 632, 633, 634, 635, 636, 0, 637, 638,
	0, 639, 1260, 1261, 1262, 1263, 0, 649, 0, 640,
	641, 642, 643, 1272, 644, 1273, 1190, 645, 646, 647,
	648, 0, 650, 651, 0, 1173, 652, 653, 655, 657,
	658, 654, 656, 659, 1234, 660, 0, 0, 661, 662,
	663, 723, 1257, 1294, 0, 665, 664, 666, 667, 668,
	726, 669, 670, 0, 0, 0, 0, 671, 672, 727,
	673, 674, 675, 1170, 0, 0, 0, 2900, 0, 1212,
	1184, 1185, 1186, 1182, 1183, 1195, 0, 1165, 0, 0,
	0, 0, 0, 0, 1163, 1164, 291, 292, 294, 293,
	295, 296, 297, 298, 1196, 299, 300, 0, 1194, 0,
	0, 0, 1236, 1200, 0, 0, 301, 0, 302, 303,
	1276, 304, 305, 306, 307, 308, 309, 310, 677, 1249,
	0, 311, 1256, 312, 1255, 0, 1266, 313, 314, 315,
	316, 317, 318, 1202, 1235, 1167, 319, 1296, 1297, 684,
	0, 320, 321, 1242, 0, 1223, 0, 322, 323, 324,
	325, 326, 327, 328, 329, 0, 0, 331, 332, 333,
	330, 334, 0, 335, 0, 336, 337, 338, 339, 340,
	341, 0, 342, 343, 344, 1277, 345, 346, 347, 1226,
	1224, 1225, 1232, 1228, 1227, 1231, 348, 349, 350, 351,
	352, 1259, 353, 355, 1253, 1252, 1172, 358, 354, 356,
	0, 359, 357, 360, 0, 361, 362, 363, 0, 0,
	364, 1244, 366, 0, 367, 368, 369, 0, 370, 371,
	372, 0, 373, 374, 1178, 375, 376, 377, 379, 381,
	378, 380, 382, 383, 384, 385, 1267, 1268, 386, 1191,
	288, 0, 0, 0, 0, 0, 387, 388, 389, 1251,
	0, 0, 0, 390, 0, 391, 392, 393, 0, 394,
	0, 1278, 395, 396, 397, 1264, 1265, 398, 399, 400,
	401, 402, 403, 404, 405, 406, 0, 407, 1274, 0,
	1201, 408, 0, 409, 410, 411, 412, 413, 414, 1237,
	1238, 1241, 502, 1280, 415, 416, 0, 417, 418, 419,
	420, 421, 0, 0, 0, 289, 422, 423, 424, 0,
	1279, 503, 425, 1246, 1247, 0, 1207, 0, 426, 427,
	1281, 1239, 1282, 428, 429, 430, 1283, 431, 0, 0,
	0, 432, 433, 434, 435, 436, 437, 0, 438, 440,
	439, 0, 441, 1275, 1284, 442, 443, 1285, 0, 444,
	445, 446, 447, 448, 449, 452, 1230, 1229, 450, 451,
	453, 454, 0, 455, 456, 458, 461, 457, 459, 460,
	462, 475, 463, 464, 465, 466, 467, 468, 469, 470,
	471, 472, 473, 474, 477, 0, 476, 1286, 478, 479,
	480, 481, 482, 489, 491, 492, 487, 488, 490, 493,
	494, 496, 484, 485, 486, 1287, 495, 483, 1169, 290,
	1288, 497, 498, 499, 500, 1192, 1240, 501, 1254, 504,
	505, 0, 0, 506, 0, 507, 0, 0, 509, 510,
	511, 0, 0, 512, 513, 706, 1289, 514, 1290, 1269,
	515, 516, 1179, 517, 518, 519, 520, 521, 522, 523,
	524, 525, 0, 526, 527, 708, 528, 529, 530, 709,
	531, 532, 533, 1270, 534, 711, 535, 536, 0, 537,
	538, 539, 0, 540, 541, 542, 543, 544, 545, 546,
	1250, 547, 548, 550, 549, 551, 0, 552, 0, 553,
	554, 555, 0, 0, 0, 0, 0, 556, 557, 559,
	0, 560, 561, 562, 563, 558, 564, 565, 566, 567,
	568, 0, 569, 570, 571, 1291, 572, 573, 574, 575,
	576, 1180, 577, 0, 578, 579, 586, 587, 588, 580,
	581, 582, 589, 590, 591, 592, 593, 0, 595, 596,
	594, 597, 598, 599, 1233, 600, 601, 583, 584, 602,
	603, 1292, 604, 605, 606, 607, 608, 609, 610, 1248,
	0, 611, 0, 612, 613, 614, 615, 616, 618, 585,
	619, 624, 625, 1295, 620, 621, 622, 623, 1271, 627,
	628, 0, 629, 630, 1166, 626, 617, 0, 631, 632,
	633, 634, 635, 636, 0, 637, 638, 0, 639, 1260,
	1261, 1262, 1263, 0, 649, 0, 640, 641, 642, 643,
	1272, 644, 1273, 1190, 645, 646, 647, 648, 0, 650,
	651, 0, 1173, 652, 653, 655, 657, 658, 654, 656,
	659, 1234, 660, 0, 0, 661, 662, 663, 723, 1257,
	1294, 0, 665, 664, 666, 667, 668, 726, 669, 670,
	0, 0, 0, 0, 671, 672, 727, 673, 674, 675,
	1170, 0, 0, 0, 2888, 0, 1212, 1184, 1185, 1186,
	1182, 1183, 1195, 0, 1165, 0, 0, 0, 0, 0,
	0, 1163, 1164, 291, 292, 294, 293, 295, 296, 297,
	298, 1196, 299, 300, 0, 1194, 0, 0, 0, 1236,
	1200, 0, 0, 301, 0, 302, 303, 1276, 304, 305,
	306, 307, 308, 309, 310, 677, 1249, 0, 311, 1256,
	312, 1255, 0, 1266, 313, 314, 315, 316, 317, 318,
	1202, 1235, 1167, 319, 1296, 1297, 684, 0, 320, 321,
	1242, 0, 1223, 0, 322, 323, 324, 325, 326, 327,
	328, 329, 0, 0, 331, 332, 333, 330, 334, 0,
	335, 0, 336, 337, 338, 339, 340, 341, 0, 342,
	343, 344, 1277, 345, 346, 347, 1226, 1224, 1225, 1232,
	1228, 1227, 1231, 348, 349, 350, 351, 352, 1259, 353,
	355, 1253, 1252, 1172, 358, 354, 356, 0, 359, 357,
	360, 0, 361, 362, 363, 0, 0, 364, 1244, 366,
	0, 367, 368, 369, 0, 370, 371, 372, 0, 373,
	374, 1178, 375, 376, 377, 379, 381, 378, 380, 382,
	383, 384, 385, 1267, 1268, 386, 1191, 288, 0, 0,
	0, 0, 0, 387, 388, 389, 1251, 0, 0, 0,
	390, 0, 391, 392, 393, 0, 394, 0, 1278, 395,
	396, 397, 1264, 1265, 398, 399, 400, 401, 402, 403,
	404, 405, 406, 0, 407, 1274, 0, 1201, 408, 0,
	409, 410, 411, 412, 413, 414, 1237, 1238, 1241, 502,
	1280, 415, 416, 0, 417, 418, 419, 420, 421, 0,
	0, 0, 289, 422, 423, 424, 0, 1279, 503, 425,
	1246, 1247, 0, 1207, 0, 426, 427, 1281, 1239, 1282,
	428, 429, 430, 1283, 431, 0, 0, 0, 432, 433,
	434, 435, 436, 437, 0, 438, 440, 439, 0, 441,
	1275, 1284, 442, 443, 1285, 0, 444, 445, 446, 447,
	448, 449, 452, 1230, 1229, 450, 451, 453, 454, 0,
	455, 456, 458, 461, 457, 459, 460, 462, 475, 463,
	464, 465, 466, 467, 468, 469, 470, 471, 472, 473,
	474, 477, 0, 476, 1286, 478, 479, 480, 481, 482,
	489, 491, 492, 487, 488, 490, 493, 494, 496, 484,
	485, 486, 1287, 495, 483, 1169, 290, 1288, 497, 498,
	499, 500, 1192, 1240, 501, 1254, 504, 505, 0, 0,
	506, 0, 507, 0, 0, 509, 510, 511, 0, 0,
	512, 513, 706, 1289, 514, 1290, 1269, 515, 516, 1179,
	517, 518, 519, 520, 521, 522, 523, 524, 525, 0,
	526, 527, 708, 528, 529, 530, 709, 531, 532, 533,
	1270, 534, 711, 535, 536, 0, 537, 538, 539, 0,
	540, 541, 542, 543, 544, 545, 546, 1250, 547, 548,
	550, 549, 551, 0, 552, 0, 553, 554, 555, 0,
	0, 0, 0, 0, 556, 557, 559, 0, 560, 561,
	562, 563, 558, 564, 565, 566, 567, 568, 0, 569,
	570, 571, 1291, 572, 573, 574, 575, 576, 1180, 577,
	0, 578, 579, 586, 587, 588, 580, 581, 582, 589,
	590, 591, 592, 593, 0, 595, 596, 594, 597, 598,
	599, 1233, 600, 601, 583, 584, 602, 603, 1292, 604,
	605, 606, 607, 608, 609, 610, 1248, 0, 611, 0,
	612, 613, 614, 615, 616, 618, 585, 619, 624, 625,
	1295, 620, 621, 622, 623, 1271, 627, 628, 0, 629,
	630, 1166, 626, 617, 0, 631, 632, 633, 634, 635,
	636, 0, 637, 638, 0, 639, 1260, 1261, 1262, 1263,
	0, 649, 0, 640, 641, 642, 643, 1272, 644, 1273,
	1190, 645, 646, 647, 648, 0, 650, 651, 0, 1173,
	652, 653, 655, 657, 658, 654, 656, 659, 1234, 660,
	0, 0, 661, 662, 663, 723, 1257, 1294, 0, 665,
	664, 666, 667, 668, 726, 669, 670, 0, 0, 0,
	0, 671, 672, 727, 673, 674, 675, 1170, 0, 0,
	0, 2877, 0, 1212, 1184, 1185, 1186, 1182, 1183, 1195,
	0, 1165, 0, 0, 0, 0, 0, 0, 1163, 1164,
	291, 292, 294, 293, 295, 296, 297, 298, 1196, 299,
	300, 0, 1194, 0, 0, 0, 1236, 1200, 0, 0,
	301, 0, 302, 303, 1276, 304, 305, 306, 307, 308,
	309, 310, 677, 1249, 0, 311, 1256, 312, 1255, 0,
	1266, 313, 314, 315, 316, 317, 318, 1202, 1235, 1167,
	319, 1296, 1297, 684, 0, 320, 321, 1242, 0, 1223,
	0, 322, 323, 324, 325, 326, 327, 328, 329, 0,
	0, 331, 332, 333, 330, 334, 0, 335, 0, 336,
	337, 338, 339, 340, 341, 0, 342, 343, 344, 1277,
	345, 346, 347, 1226, 1224, 1225, 1232, 1228, 1227, 1231,
	348, 349, 350, 351, 352, 1259, 353, 355, 1253, 1252,
	1172, 358, 354, 356, 0, 359, 357, 360, 0, 361,
	362, 363, 0, 0, 364, 1244, 366, 0, 367, 368,
	369, 0, 370, 371, 372, 0, 373, 374, 1178, 375,
	376, 377, 379, 381, 378, 380, 382, 383, 384, 385,
	1267, 1268, 386, 1191, 288, 0, 0, 0, 0, 0,
	387, 388, 389, 1251, 0, 0, 0, 390, 0, 391,
	392, 393, 0, 394, 0, 1278, 395, 396, 397, 1264,
	1265, 398, 399, 400, 401, 402, 403, 404, 405, 406,
	0, 407, 1274, 0, 1201, 408, 0, 409, 410, 411,
	412, 413, 414, 1237, 1238, 1241, 502, 1280, 415, 416,
	0, 417, 418, 419, 420, 421, 0, 0, 0, 289,
	422, 423, 424, 0, 1279, 503, 425, 1246, 1247, 0,
	1207, 0, 426, 427, 1281, 1239, 1282, 428, 429, 430,
	1283, 431, 0, 0, 0, 432, 433, 434, 435, 436,
	437, 0, 438, 440, 439, 0, 441, 1275, 1284, 442,
	443, 1285, 0, 444, 445, 446, 447, 448, 449, 452,
	1230, 1229, 450, 451, 453, 454, 0, 455, 456, 458,
	461, 457, 459, 460, 462, 475, 463, 464, 465, 466,
	467, 468, 469, 470, 471, 472, 473, 474, 477, 0,
	476, 1286, 478, 479, 480, 481, 482, 489, 491, 492,
	487, 488, 490, 493, 494, 496, 484, 485, 486, 1287,
	495, 483, 1169, 290, 1288, 497, 498, 499, 500, 1192,
	1240, 501, 1254, 504, 505, 0, 0, 506, 0, 507,
	0, 0, 509, 510, 511, 0, 0, 512, 513, 706,
	1289, 514, 1290, 1269, 515, 516, 1179, 517, 518, 519,
	520, 521, 522, 523, 524, 525, 0, 526, 527, 708,
	528, 529, 530, 709, 531, 532, 533, 1270, 534, 711,
	535, 536, 0, 537, 538, 539, 0, 540, 541, 542,
	543, 544, 545, 546, 1250, 547, 548, 550, 549, 551,
	0, 552, 0, 553, 554, 555, 0, 0, 0, 0,
	0, 556, 557, 559, 0, 560, 561, 562, 563, 558,
	564, 565, 566, 567, 568, 0, 569, 570, 571, 1291,
	572, 573, 574, 575, 576, 1180, 577, 0, 578, 579,
	586, 587, 588, 580, 581, 582, 589, 590, 591, 592,
	593, 0, 595, 596, 594, 597, 598, 599, 1233, 600,
	601, 583, 584, 602, 603, 1292, 604, 605, 606, 607,
	608, 609, 610, 1248, 0, 611, 0, 612, 613, 614,
	615, 616, 618, 585, 619, 624, 625, 1295, 620, 621,
	622, 623, 1271, 627, 628, 0, 629, 630, 1166, 626,
	617, 0, 631, 632, 633, 634, 635, 636, 0, 637,
	638, 0, 639, 1260, 1261, 1262, 1263, 0, 649, 0,
	640, 641, 642, 643, 1272, 644, 1273, 1190, 645, 646,
	647, 648, 0, 650, 651, 0, 1173, 652, 653, 655,
	657, 658, 654, 656, 659, 1234, 660, 0, 0, 661,
	662, 663, 723, 1257, 1294, 0, 665, 664, 666, 667,
	668, 726, 669, 670, 0, 0, 0, 0, 671, 672,
	727, 673, 674, 675, 1170, 0, 0, 0, 2875, 0,
	2866, 2873, 1185, 1186, 1182, 1183, 1195, 0, 1165, 0,
	0, 0, 0, 0, 0, 1163, 1164, 291, 292, 294,
	293, 295, 296, 297, 298, 1196, 299, 300, 0, 1194,
	0, 0, 0, 1236, 1200, 0, 0, 301, 0, 302,
	303, 1276, 304, 305, 306, 307, 308, 309, 310, 677,
	1249, 0, 311, 1256, 312, 1255, 0, 1266, 313, 314,
	315, 316, 317, 318, 1202, 1235, 1167, 319, 1296, 1297,
	684, 0, 320, 321, 1242, 0, 1223, 0, 322, 323,
	324, 325, 326, 327, 328, 329, 0, 0, 331, 332,
	333, 330, 334, 0, 335, 0, 336, 337, 338, 339,
	340, 341, 0, 342, 343, 344, 1277, 345, 346, 347,
	1226, 1224, 1225, 1232, 1228, 1227, 1231, 348, 349, 350,
	351, 352, 1259, 2869, 355, 1253, 1252, 1172, 358, 354,
	356, 0, 359, 357, 360, 0, 361, 362, 363, 0,
	0, 364, 1244, 366, 0, 367, 368, 369, 0, 370,
	371, 372, 0, 373, 374, 1178, 375, 376, 377, 379,
	381, 378, 380, 382, 383, 384, 385, 1267, 1268, 386,
	1191, 288, 0, 0, 0, 0, 0, 387, 388, 389,
	1251, 0, 0, 0, 390, 0, 391, 392, 393, 0,
	394, 0, 1278, 395, 396, 397, 1264, 1265, 398, 399,
	400, 401, 402, 403, 404, 405, 406, 0, 407, 1274,
	0, 1201, 408, 0, 409, 410, 411, 412, 2870, 414,
	1237, 1238, 1241, 502, 1280, 415, 416, 0, 417, 418,
	419, 420, 421, 0, 0, 0, 289, 422, 423, 424,
	0, 1279, 503, 425, 1246, 1247, 0, 1207, 0, 426,
	427, 1281, 1239, 1282, 428, 429, 430, 1283, 431, 0,
	0, 0, 432, 433, 434, 435, 436, 437, 0, 438,
	440, 439, 0, 441, 1275, 1284, 442, 443, 1285, 0,
	444, 445, 446, 447, 448, 449, 452, 1230, 1229, 450,
	451, 453, 454, 0, 455, 456, 458, 461, 457, 459,
	2871, 462, 2868, 463, 464, 465, 466, 467, 468, 469,
	470, 471, 472, 473, 474, 477, 0, 476, 1286, 478,
	479, 480, 481, 482, 489, 491, 492, 487, 488, 490,
	493, 494, 496, 484, 485, 486, 1287, 495, 483, 1169,
	290, 1288, 497, 498, 499, 500, 1192, 1240, 501, 1254,
	504, 505, 0, 0, 506, 0, 507, 0, 0, 509,
	510, 511, 0, 0, 512, 513, 706, 1289, 514, 1290,
	1269, 515, 516, 1179, 517, 518, 519, 520, 521, 522,
	523, 524, 525, 0, 526, 527, 708, 528, 529, 530,
	709, 531, 532, 533, 1270, 534, 711, 535, 536, 0,
	537, 538, 539, 0, 540, 541, 542, 543, 544, 545,
	546, 1250, 547, 548, 550, 549, 551, 0, 552, 0,
	553, 554, 555, 0, 0, 0, 0, 0, 556, 557,
	559, 0, 560, 561, 562, 563, 558, 564, 565, 566,
	567, 568, 0, 569, 570, 571, 1291, 572, 573, 574,
	575, 576, 1180, 577, 0, 578, 579, 586, 587, 588,
	580, 581, 582, 589, 590, 591, 592, 2872, 0, 595,
	596, 594, 597, 598, 599, 1233, 600, 601, 583, 584,
	602, 603, 1292, 604, 605, 606, 607, 608, 609, 610,
	1248, 0, 611, 0, 612, 613, 614, 615, 616, 618,
	585, 619, 624, 625, 1295, 620, 621, 622, 623, 1271,
	627, 628, 0, 629, 630, 1166, 626, 617, 0, 631,
	632, 633, 634, 635, 636, 0, 637, 638, 0, 639,
	1260, 1261, 1262, 1263, 0, 649, 0, 640, 641, 642,
	643, 1272, 644, 1273, 1190, 645, 646, 647, 648, 0,
	650, 651, 0, 1173, 652, 653, 655, 657, 658, 654,
	656, 659, 1234, 660, 0, 0, 661, 662, 663, 723,
	1257, 1294, 0, 665, 664, 666, 667, 668, 726, 669,
	670, 0, 0, 0, 0, 671, 672, 727, 673, 2867,
	675, 1170, 0, 0, 0, 2863, 0, 2866, 2873, 1185,
	1186, 1182, 1183, 1195, 0, 1165, 0, 0, 0, 0,
	0, 0, 1163, 1164, 291, 292, 294, 293, 295, 296,
	297, 298, 1196, 299, 300, 0, 1194, 0, 0, 0,
	1236, 1200, 0, 0, 301, 0, 302, 303, 1276, 304,
	305, 306, 307, 308, 309, 310, 677, 1249, 0, 311,
	1256, 312, 1255, 0, 1266, 313, 314, 315, 316, 317,
	318, 1202, 1235, 1167, 319, 1296, 1297, 684, 0, 320,
	321, 1242, 0, 1223, 0, 322, 323, 324, 325, 326,
	327, 328, 329, 0, 0, 331, 332, 333, 330, 334,
	0, 335, 0, 336, 337, 338, 339, 340, 341, 0,
	342, 343, 344, 1277, 345, 346, 347, 1226, 1224, 1225,
	1232, 1228, 1227, 1231, 348, 349, 350, 351, 352, 1259,
	2869, 355, 1253, 1252, 1172, 358, 354, 356, 0, 359,
	357, 360, 0, 361, 362, 363, 0, 0, 364, 1244,
	366, 0, 367, 368, 369, 0, 370, 371, 372, 0,
	373, 374, 1178, 375, 376, 377, 379, 381, 378, 380,
	382, 383, 384, 385, 1267, 1268, 386, 1191, 288, 0,
	0, 0, 0, 0, 387, 388, 389, 1251, 0, 0,
	0, 390, 0, 391, 392, 393, 0, 394, 0, 1278,
	395, 396, 397, 1264, 1265, 398, 399, 400, 401, 402,
	403, 404, 405, 406, 0, 407, 1274, 0, 1201, 408,
	0, 409, 410, 411, 412, 2870, 414, 1237, 1238, 1241,
	502, 1280, 415, 416, 0, 417, 418, 419, 420, 421,
	0, 0, 0, 289, 422, 423, 424, 0, 1279, 503,
	425, 1246, 1247, 0, 1207, 0, 426, 427, 1281, 1239,
	1282, 428, 429, 430, 1283, 431, 0, 0, 0, 432,
	433, 434, 435, 436, 437, 0, 438, 440, 439, 0,
	441, 1275, 1284, 442, 443, 1285, 0, 444, 445, 446,
	447, 448, 449, 452, 1230, 1229, 450, 451, 453, 454,
	0, 455, 456, 458, 461, 457, 459, 2871, 462, 2868,
	463, 464, 465, 466, 467, 468, 469, 470, 471, 472,
	473, 474, 477, 0, 476, 1286, 478, 479, 480, 481,
	482, 489, 491, 492, 487, 488, 490, 493, 494, 496,
	484, 485, 486, 1287, 495, 483, 1169, 290, 1288, 497,
	498, 499, 500, 1192, 1240, 501, 1254, 504, 505, 0,
	0, 506, 0, 507, 0, 0, 509, 510, 511, 0,
	0, 512, 513, 706, 1289, 514, 1290, 1269, 515, 516,
	1179, 517, 518, 519, 520, 521, 522, 523, 524, 525,
	0, 526, 527, 708, 528, 529, 530, 709, 531, 532,
	533, 1270, 534, 711, 535, 536, 0, 537, 538, 539,
	0, 540, 541, 542, 543, 544, 545, 546, 1250, 547,
	548, 550, 549, 551, 0, 552, 0, 553, 554, 555,
	0, 0, 0, 0, 0, 556, 557, 559, 0, 560,
	561, 562, 563, 558, 564, 565, 566, 567, 568, 0,
	569, 570, 571, 1291, 572, 573, 574, 575, 576, 1180,
	577, 0, 578, 579, 586, 587, 588, 580, 581, 582,
	589, 590, 591, 592, 2872, 0, 595, 596, 594, 597,
	598, 599, 1233, 600, 601, 583, 584, 602, 603, 1292,
	604, 605, 606, 607, 608, 609, 610, 1248, 0, 611,
	0, 612, 613, 614, 615, 616, 618, 585, 619, 624,
	625, 1295, 620, 621, 622, 623, 1271, 627, 628, 0,
	629, 630, 1166, 626, 617, 0, 631, 632, 633, 634,
	635, 636, 0, 637, 638, 0, 639, 1260, 1261, 1262,
	1263, 0, 649, 0, 640, 641, 642, 643, 1272, 644,
	1273, 1190, 645, 646, 647, 648, 0, 650, 651, 0,
	1173, 652, 653, 655, 657, 658, 654, 656, 659, 1234,
	660, 0, 0, 661, 662, 663, 723, 1257, 1294, 0,
	665, 664, 666, 667, 668, 726, 669, 670, 0, 0,
	0, 0, 671, 672, 727, 673, 2867, 675, 1170, 0,
	0, 0, 0, 0, 1212, 1184, 1185, 1186, 1182, 1183,
	1195, 0, 1165, 0, 0, 0, 0, 0, 0, 1163,
	1164, 291, 292, 294, 293, 295, 296, 297, 298, 1196,
	299, 300, 0, 1194, 0, 0, 0, 1236, 1200, 0,
	0, 301, 0, 302, 303, 1276, 304, 305, 306, 307,
	308, 309, 310, 677, 1249, 0, 311, 1256, 312, 1255,
	0, 1266, 313, 314, 315, 316, 317, 318, 1202, 1235,
	1167, 319, 1296, 1297, 684, 0, 320, 321, 1242, 0,
	1223, 0, 322, 323, 324, 325, 326, 327, 328, 329,
	0, 0, 331, 332, 333, 330, 334, 0, 335, 0,
	336, 337, 338, 339, 340, 341, 0, 342, 343, 344,
	1277, 345, 346, 347, 1226, 1224, 1225, 1232, 1228, 1227,
	1231, 348, 349, 350, 351, 352, 1259, 353, 355, 1253,
	1252, 1172, 358, 354, 356, 0, 359, 357, 360, 0,
	361, 362, 363, 0, 0, 364, 1244, 366, 0, 367,
	368, 369, 0, 370, 371, 372, 0, 373, 374, 1178,
	375, 376, 377, 379, 381, 378, 380, 382, 383, 384,
	385, 1267, 1268, 386, 1191, 288, 0, 0, 0, 0,
	0, 387, 388, 389, 1251, 0, 0, 0, 390, 0,
	391, 392, 393, 0, 394, 0, 1278, 395, 396, 397,
	1264, 1265, 398, 399, 400, 401, 402, 403, 404, 405,
	406, 0, 407, 1274, 0, 1201, 408, 0, 409, 410,
	411, 412, 413, 414, 1237, 1238, 1241, 502, 1280, 415,
	416, 0, 417, 418, 419, 420, 421, 0, 0, 0,
	289, 422, 423, 424, 0, 1279, 503, 425, 1246, 1247,
	0, 1207, 0, 426, 427, 1281, 1239, 1282, 428, 429,
	430, 1283, 431, 0, 0, 0, 432, 433, 434, 435,
	436, 437, 0, 438, 440, 439, 0, 441, 1275, 1284,
	442, 443, 1285, 0, 444, 445, 446, 447, 448, 449,
	452, 1230, 1229, 450, 451, 453, 454, 0, 455, 456,
	458, 461, 457, 459, 460, 462, 475, 463, 464, 465,
	466, 467, 468, 469, 470, 471, 472, 473, 474, 477,
	0, 476, 1286, 478, 479, 480, 481, 482, 489, 491,
	492, 487, 488, 490, 493, 494, 496, 484, 485, 486,
	1287, 495, 483, 1169, 290, 1288, 497, 498, 499, 500,
	1192, 1240, 501, 1254, 504, 505, 0, 0, 506, 0,
	507, 0, 0, 509, 510, 511, 0, 0, 512, 513,
	706, 1289, 514, 1290, 1269, 515, 516, 1179, 517, 518,
	519, 520, 521, 522, 523, 524, 525, 0, 526, 527,
	708, 528, 529, 530, 709, 531, 532, 533, 1270, 534,
	711, 535, 536, 0, 537, 538, 539, 0, 540, 541,
	542, 543, 544, 545, 546, 1250, 547, 548, 550, 549,
	551, 0, 552, 0, 553, 554, 555, 0, 0, 0,
	0, 0, 556, 557, 559, 0, 560, 561, 562, 563,
	558, 564, 565, 566, 567, 568, 0, 569, 570, 571,
	1291, 572, 573, 574, 575, 576, 1180, 577, 0, 578,
	579, 586, 587, 588, 580, 581, 582, 589, 590, 591,
	592, 593, 0, 595, 596, 594, 597, 598, 599, 1233,
	600, 601, 583, 584, 602, 603, 1292, 604, 605, 606,
	607, 608, 609, 610, 1248, 0, 611, 0, 612, 613,
	614, 615, 616, 618, 585, 619, 624, 625, 1295, 620,
	621, 622, 623, 1271, 627, 628, 0, 629, 630, 1166,
	626, 617, 0, 631, 632, 633, 634, 635, 636, 0,
	637, 638, 0, 639, 1260, 1261, 1262, 1263, 0, 649,
	0, 640, 641, 642, 643, 1272, 644, 1273, 1190, 645,
	646, 647, 648, 0, 650, 651, 0, 1173, 652, 653,
	655, 657, 658, 654, 656, 659, 1234, 660, 0, 0,
	661, 662, 663, 723, 1257, 1294, 0, 665, 664, 666,
	667, 668, 726, 669, 670, 0, 0, 0, 0, 671,
	672, 727, 673, 674, 675, 1170, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1165,
	0, 0, 0, 0, 0, 0, 1163, 1164, 0, 0,
	0, 0, 0, 0, 2008, 0, 1196, 0, 0, 0,
	1194, 1212, 1184, 1185, 1186, 1182, 1183, 1195, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 291, 292,
	294, 293, 295, 296, 297, 298, 2618, 299, 300, 0,
	0, 0, 0, 0, 1236, 1200, 0, 0, 301, 0,
	302, 303, 1276, 304, 305, 306, 307, 308, 309, 310,
	677, 1249, 0, 311, 1256, 312, 1255, 0, 1266, 313,
	314, 315, 316, 317, 318, 1202, 1235, 1167, 319, 1296,
	1297, 684, 0, 320, 321, 1242, 0, 1223, 0, 322,
	323, 324, 325, 326, 327, 328, 329, 0, 0, 331,
	332, 333, 330, 334, 0, 335, 0, 336, 337, 338,
	339, 340, 341, 0, 342, 343, 344, 1277, 345, 346,
	347, 1226, 1224, 1225, 1232, 1228, 1227, 1231, 348, 349,
	350, 351, 352, 1259, 353, 355, 1253, 1252, 1172, 358,
	354, 356, 0, 359, 357, 360, 0, 361, 362, 363,
	0, 0, 364, 1244, 366, 0, 367, 368, 369, 0,
	370, 371, 372, 0, 373, 374, 1178, 375, 376, 377,
	379, 381, 378, 380, 382, 383, 384, 385, 1267, 1268,
	386, 1191, 288, 0, 0, 0, 0, 0, 387, 388,
	389, 1251, 0, 0, 0, 390, 0, 391, 392, 393,
	0, 394, 0, 1278, 395, 396, 397, 1264, 1265, 398,
	399, 400, 401, 402, 403, 404, 405, 406, 0, 407,
	1274, 0, 1201, 408, 0, 409, 410, 411, 412, 413,
	414, 1237, 1238, 1241, 502, 1280, 415, 416, 0, 417,
	418, 419, 420, 421, 0, 0, 0, 289, 422, 423,
	424, 0, 1279, 503, 425, 1246, 1247, 0, 1207, 0,
	426, 427, 1281, 1239, 1282, 428, 429, 430, 1283, 431,
	0, 0, 0, 432, 433, 434, 435, 436, 437, 0,
	438, 440, 439, 0, 441, 1275, 1284, 442, 443, 1285,
	0, 444, 445, 446, 447, 448, 449, 452, 1230, 1229,
	450, 451, 453, 454, 0, 455, 456, 458, 461, 457,
	459, 460, 462, 475, 463, 464, 465, 466, 467, 468,
	469, 470, 471, 472, 473, 474, 477, 0, 476, 1286,
	478, 479, 480, 481, 482, 489, 491, 492, 487, 488,
	490, 493, 494, 496, 484, 485, 486, 1287, 495, 483,
	1169, 290, 1288, 497, 498, 499, 500, 1192, 1240, 501,
	1254, 504, 505, 0, 0, 506, 0, 507, 0, 0,
	509, 510, 511, 0, 0, 512, 513, 706, 1289, 514,
	1290, 1269, 515, 516, 1179, 517, 518, 519, 520, 521,
	522, 523, 524, 525, 0, 526, 527, 708, 528, 529,
	530, 709, 531, 532, 533, 1270, 534, 711, 535, 536,
	0, 537, 538, 539, 0, 540, 541, 542, 543, 544,
	545, 546, 1250, 547, 548, 550, 549, 551, 0, 552,
	0, 553, 554, 555, 0, 0, 0, 0, 0, 556,
	557, 559, 0, 560, 561, 562, 563, 558, 564, 565,
	566, 567, 568, 0, 569, 570, 571, 1291, 572, 573,
	574, 575, 576, 1180, 577, 0, 578, 579, 586, 587,
	588, 580, 581, 582, 589, 590, 591, 592, 593, 0,
	595, 596, 594, 597, 598, 599, 1233, 600, 601, 583,
	584, 602, 603, 1292, 604, 605, 606, 607, 608, 609,
	610, 1248, 0, 611, 0, 612, 613, 614, 615, 616,
	618, 585, 619, 624, 625, 1295, 620, 621, 622, 623,
	1271, 627, 628, 0, 629, 630, 1166, 626, 617, 0,
	631, 632, 633, 634, 635, 636, 0, 637, 638, 0,
	639, 1260, 1261, 1262, 1263, 0, 649, 0, 640, 641,
	642, 643, 1272, 644, 1273, 1190, 645, 646, 647, 648,
	0, 650, 651, 0, 1173, 652, 653, 655, 657, 658,
	654, 656, 659, 1234, 660, 0, 0, 661, 662, 663,
	723, 1257, 1294, 0, 665, 664, 666, 667, 668, 726,
	669, 670, 0, 0, 0, 0, 671, 672, 727, 673,
	674, 675, 1170, 0, 0, 0, 2580, 0, 1212, 1184,
	1185, 1186, 1182, 1183, 1195, 0, 1165, 0, 0, 0,
	0, 0, 0, 1163, 1164, 291, 292, 294, 293, 295,
	296, 297, 298, 1196, 299, 300, 0, 1194, 0, 0,
	0, 1236, 1200, 0, 0, 301, 0, 302, 303, 1276,
	304, 305, 306, 307, 308, 309, 310, 677, 1249, 0,
	311, 1256, 312, 1255, 0, 1266, 313, 314, 315, 316,
	317, 318, 1202, 1235, 1167, 319, 1296, 1297, 684, 0,
	320, 321, 1242, 0, 1223, 0, 322, 323, 324, 325,
	326, 327, 328, 329, 0, 0, 331, 332, 333, 330,
	334, 0, 335, 0, 336, 337, 338, 339, 340, 341,
	0, 342, 343, 344, 1277, 345, 346, 347, 1226, 1224,
	1225, 1232, 1228, 1227, 1231, 348, 349, 350, 351, 352,
	1259, 353, 355, 1253, 1252, 1172, 358, 354, 356, 0,
	359, 357, 360, 0, 361, 362, 363, 0, 0, 364,
	1244, 366, 0, 367, 368, 369, 0, 370, 371, 372,
	0, 373, 374, 1178, 375, 376, 377, 379, 381, 378,
	380, 382, 383, 384, 385, 1267, 1268, 386, 1191, 288,
	0, 0, 0, 0, 0, 387, 388, 389, 1251, 0,
	0, 0, 390, 0, 391, 392, 393, 0, 394, 0,
	1278, 395, 396, 397, 1264, 1265, 398, 399, 400, 401,
	402, 403, 404, 405, 406, 0, 407, 1274, 0, 1201,
	408, 0, 409, 410, 411, 412, 413, 414, 1237, 1238,
	1241, 502, 1280, 415, 416, 0, 417, 418, 419, 420,
	421, 0, 0, 0, 289, 422, 423, 424, 0, 1279,
	503, 425, 1246, 1247, 0, 1207, 0, 426, 427, 1281,
	1239, 1282, 428, 429, 430, 1283, 431, 0, 0, 0,
	432, 433, 434, 435, 436, 437, 0, 438, 440, 439,
	0, 441, 1275, 1284, 442, 443, 1285, 0, 444, 445,
	446, 447, 448, 449, 452, 1230, 1229, 450, 451, 453,
	454, 0, 455, 456, 458, 461, 457, 459, 460, 462,
	475, 463, 464, 465, 466, 467, 468, 469, 470, 471,
	472, 473, 474, 477, 0, 476, 1286, 478, 479, 480,
	481, 482, 489, 491, 492, 487, 488, 490, 493, 494,
	496, 484, 485, 486, 1287, 495, 483, 1169, 290, 1288,
	497, 498, 499, 500, 1192, 1240, 501, 1254, 504, 505,
	0, 0, 506, 0, 507, 0, 0, 509, 510, 511,
	0, 0, 512, 513, 706, 1289, 514, 1290, 1269, 515,
	516, 1179, 517, 518, 519, 520, 521, 522, 523, 524,
	525, 0, 526, 527, 708, 528, 529, 530, 709, 531,
	532, 533, 1270, 534, 711, 535, 536, 0, 537, 538,
	539, 0, 540, 541, 542, 543, 544, 545, 546, 1250,
	547, 548, 550, 549, 551, 0, 552, 0, 553, 554,
	555, 0, 0, 0, 0, 0, 556, 557, 559, 0,
	560, 561, 562, 563, 558, 564, 565, 566, 567, 568,
	0, 569, 570, 571, 1291, 572, 573, 574, 575, 576,
	1180, 577, 0, 578, 579, 586, 587, 588, 580, 581,
	582, 589, 590, 591, 592, 593, 0, 595, 596, 594,
	597, 598, 599, 1233, 600, 601, 583, 584, 602, 603,
	1292, 604, 605, 606, 607, 608, 609, 610, 1248, 0,
	611, 0, 612, 613, 614, 615, 616, 618, 585, 619,
	624, 625, 1295, 620, 621, 622, 623, 1271, 627, 628,
	0, 629, 630, 1166, 626, 617, 0, 631, 632, 633,
	634, 635, 636, 0, 637, 638, 0, 639, 1260, 1261,
	1262, 1263, 0, 649, 0, 640, 641, 642, 643, 1272,
	644, 1273, 1190, 645, 646, 647, 648, 0, 650, 651,
	0, 1173, 652, 653, 655, 657, 658, 654, 656, 659,
	1234, 660, 0, 0, 661, 662, 663, 723, 1257, 1294,
	0, 665, 664, 666, 667, 668, 726, 669, 670, 0,
	0, 0, 0, 671, 672, 727, 673, 674, 675, 1170,
	0, 0, 0, 2551, 0, 1212, 1184, 1185, 1186, 1182,
	1183, 1195, 0, 1165, 0, 0, 0, 0, 0, 0,
	1163, 1164, 291, 292, 294, 293, 295, 296, 297, 298,
	1196, 299, 300, 0, 1194, 0, 0, 0, 1236, 1200,
	0, 0, 301, 0, 302, 303, 1276, 304, 305, 306,
	307, 308, 309, 310, 677, 1249, 0, 311, 1256, 312,
	1255, 0, 1266, 313, 314, 315, 316, 317, 318, 1202,
	1235, 1167, 319, 1296, 1297, 684, 0, 320, 321, 1242,
	0, 1223, 0, 322, 323, 324, 325, 326, 327, 328,
	329, 0, 0, 331, 332, 333, 330, 334, 0, 335,
	0, 336, 337, 338, 339, 340, 341, 0, 342, 343,
	344, 1277, 345, 346, 347, 1226, 1224, 1225, 1232, 1228,
	1227, 1231, 348, 349, 350, 351, 352, 1259, 353, 355,
	1253, 1252, 1172, 358, 354, 356, 0, 359, 357, 360,
	0, 361, 362, 363, 0, 0, 364, 1244, 366, 0,
	367, 368, 369, 0, 370, 371, 372, 0, 373, 374,
	1178, 375, 376, 377, 379, 381, 378, 380, 382, 383,
	384, 385, 1267, 1268, 386, 1191, 288, 0, 0, 0,
	0, 0, 387, 388, 389, 1251, 0, 0, 0, 390,
	0, 391, 392, 393, 0, 394, 0, 1278, 395, 396,
	397, 1264, 1265, 398, 399, 400, 401, 402, 403, 404,
	405, 406, 0, 407, 1274, 0, 1201, 408, 0, 409,
	410, 411, 412, 413, 414, 1237, 1238, 1241, 502, 1280,
	415, 416, 0, 417, 418, 419, 420, 421, 0, 0,
	0, 289, 422, 423, 424, 0, 1279, 503, 425, 1246,
	1247, 0, 1207, 0, 426, 427, 1281, 1239, 1282, 428,
	429, 430, 1283, 431, 0, 0, 0, 432, 433, 434,
	435, 436, 437, 0, 438, 440, 439, 0, 441, 1275,
	1284, 442, 443, 1285, 0, 444, 445, 446, 447, 448,
	449, 452, 1230, 1229, 450, 451, 453, 454, 0, 455,
	456, 458, 461, 457, 459, 460, 462, 475, 463, 464,
	465, 466, 467, 468, 469, 470, 471, 472, 473, 474,
	477, 0, 476, 1286, 478, 479, 480, 481, 482, 489,
	491, 492, 487, 488, 490, 493, 494, 496, 484, 485,
	486, 1287, 495, 483, 1169, 290, 1288, 497, 498, 499,
	500, 1192, 1240, 501, 1254, 504, 505, 0, 0, 506,
	0, 507, 0, 0, 509, 510, 511, 0, 0, 512,
	513, 706, 1289, 514, 1290, 1269, 515, 516, 1179, 517,
	518, 519, 520, 521, 522, 523, 524, 525, 0, 526,
	527, 708, 528, 529, 530, 709, 531, 532, 533, 1270,
	534, 711, 535, 536, 0, 537, 538, 539, 0, 540,
	541, 542, 543, 544, 545, 546, 1250, 547, 548, 550,
	549, 551, 0, 552, 0, 553, 554, 555, 0, 0,
	0, 0, 0, 556, 557, 559, 0, 560, 561, 562,
	563, 558, 564, 565, 566, 567, 568, 0, 569, 570,
	571, 1291, 572, 573, 574, 575, 576, 1180, 577, 0,
	578, 579, 586, 587, 588, 580, 581, 582, 589, 590,
	591, 592, 593, 0, 595, 596, 594, 597, 598, 599,
	1233, 600, 601, 583, 584, 602, 603, 1292, 604, 605,
	606, 607, 608, 609, 610, 1248, 0, 611, 0, 612,
	613, 614, 615, 616, 618, 585, 619, 624, 625, 1295,
	620, 621, 622, 623, 1271, 627, 628, 0, 629, 630,
	1166, 626, 617, 0, 631, 632, 633, 634, 635, 636,
	0, 637, 638, 0, 639, 1260, 1261, 1262, 1263, 0,
	649, 0, 640, 641, 642, 643, 1272, 644, 1273, 1190,
	645, 646, 647, 648, 0, 650, 651, 0, 1173, 652,
	653, 655, 657, 658, 654, 656, 659, 1234, 660, 0,
	0, 661, 662, 663, 723, 1257, 1294, 0, 665, 664,
	666, 667, 668, 726, 669, 670, 0, 0, 0, 0,
	671, 672, 727, 673, 674, 675, 1170, 0, 0, 0,
	1843, 0, 1212, 1184, 1185, 1186, 1182, 1183, 1195, 0,
	1165, 0, 0, 0, 0, 0, 0, 1163, 1164, 291,
	292, 294, 293, 295, 296, 297, 298, 1196, 299, 300,
	0, 1194, 0, 0, 0, 1236, 1200, 0, 0, 301,
	0, 302, 303, 1276, 304, 305, 306, 307, 308, 309,
	310, 677, 1249, 0, 311, 1256, 312, 1255, 0, 1266,
	313, 314, 315, 316, 317, 318, 1202, 1235, 1167, 319,
	1296, 1297, 684, 0, 320, 321, 1242, 0, 1223, 0,
	322, 323, 324, 325, 326, 327, 328, 329, 0, 0,
	331, 332, 333, 330, 334, 0, 335, 0, 336, 337,
	338, 339, 340, 341, 0, 342, 343, 344, 1277, 345,
	346, 347, 1226, 1224, 1225, 1232, 1228, 1227, 1231, 348,
	349, 350, 351, 352, 1259, 353, 355, 1253, 1252, 1172,
	358, 354, 356, 0, 359, 357, 360, 0, 361, 362,
	363, 0, 0, 364, 1244, 366, 0, 367, 368, 369,
	0, 370, 371, 372, 0, 373, 374, 1178, 375, 376,
	377, 379, 381, 378, 380, 382, 383, 384, 385, 1267,
	1268, 386, 1191, 288, 0, 0, 0, 0, 0, 387,
	388, 389, 1251, 0, 0, 0, 390, 0, 391, 392,
	393, 0, 394, 0, 1278, 395, 396, 397, 1264, 1265,
	398, 399, 400, 401, 402, 403, 404, 405, 406, 0,
	407, 1274, 0, 1201, 408, 0, 409, 410, 411, 412,
	413, 414, 1237, 1238, 1241, 502, 1280, 415, 416, 0,
	417, 418, 419, 420, 421, 0, 0, 0, 289, 422,
	423, 424, 0, 1279, 503, 425, 1246, 1247, 0, 1207,
	0, 426, 427, 1281, 1239, 1282, 428, 429, 430, 1283,
	431, 0, 0, 0, 432, 433, 434, 435, 436, 437,
	0, 438, 440, 439, 0, 441, 1275, 1284, 442, 443,
	1285, 0, 444, 445, 446, 447, 448, 449, 452, 1230,
	1229, 450, 451, 453, 454, 0, 455, 456, 458, 461,
	457, 459, 460, 462, 475, 463, 464, 465, 466, 467,
	468, 469, 470, 471, 472, 473, 474, 477, 0, 476,
	1286, 478, 479, 480, 481, 482, 489, 491, 492, 487,
	488, 490, 493, 494, 496, 484, 485, 486, 1287, 495,
	483, 1169, 290, 1288, 497, 498, 499, 500, 1192, 1240,
	501, 1254, 504, 505, 0, 0, 506, 0, 507, 0,
	0, 509, 510, 511, 0, 0, 512, 513, 706, 1289,
	514, 1290, 1269, 515, 516, 1179, 517, 518, 519, 520,
	521, 522, 523, 524, 525, 0, 526, 527, 708, 528,
	529, 530, 709, 531, 532, 533, 1270, 534, 711, 535,
	536, 0, 537, 538, 539, 0, 540, 541, 542, 543,
	544, 545, 546, 1250, 547, 548, 550, 549, 551, 0,
	552, 0, 553, 554, 555, 0, 0, 0, 0, 0,
	556, 557, 559, 0, 560, 561, 562, 563, 558, 564,
	565, 566, 567, 568, 0, 569, 570, 571, 1291, 572,
	573, 574, 575, 576, 1180, 577, 0, 578, 579, 586,
	587, 588, 580, 581, 582, 589, 590, 591, 592, 593,
	0, 595, 596, 594, 597, 598, 599, 1233, 600, 601,
	583, 584, 602, 603, 1292, 604, 605, 606, 607, 608,
	609, 610, 1248, 0, 611, 0, 612, 613, 614, 615,
	616, 618, 585, 619, 624, 625, 1295, 620, 621, 622,
	623, 1271, 627, 628, 0, 629, 630, 1166, 626, 617,
	0, 631, 632, 633, 634, 635, 636, 0, 637, 638,
	0, 639, 1260, 1261, 1262, 1263, 0, 649, 0, 640,
	641, 642, 643, 1272, 644, 1273, 1190, 645, 646, 647,
	648, 0, 650, 651, 0, 1173, 652, 653, 655, 657,
	658, 654, 656, 659, 1234, 660, 0, 0, 661, 662,
	663, 723, 1257, 1294, 0, 665, 664, 666, 667, 668,
	726, 669, 670, 0, 0, 0, 0, 671, 672, 727,
	673, 674, 675, 1170, 0, 0, 0, 1772, 0, 1212,
	1184, 1185, 1186, 1182, 1183, 1195, 0, 1165, 0, 0,
	0, 0, 0, 0, 1163, 1164, 291, 292, 294, 293,
	295, 296, 297, 298, 1196, 299, 300, 0, 1194, 0,
	0, 0, 1236, 1200, 0, 0, 301, 0, 302, 303,
	1276, 304, 305, 306, 307, 308, 309, 310, 677, 1249,
	0, 311, 1256, 312, 1255, 0, 1266, 313, 314, 315,
	316, 317, 318, 1202, 1235, 1167, 319, 1296, 1297, 684,
	0, 320, 321, 1242, 0, 1223, 0, 322, 323, 324,
	325, 326, 327, 328, 329, 0, 0, 331, 332, 333,
	330, 334, 0, 335, 0, 336, 337, 338, 339, 340,
	341, 0, 342, 343, 344, 1277, 345, 346, 347, 1226,
	1224, 1225, 1232, 1228, 1227, 1231, 348, 349, 350, 351,
	352, 1259, 353, 355, 1253, 1252, 1172, 358, 354, 356,
	0, 359, 357, 360, 0, 361, 362, 363, 0, 0,
	364, 1244, 366, 0, 367, 368, 369, 0, 370, 371,
	372, 0, 373, 374, 1178, 375, 376, 377, 379, 381,
	378, 380, 382, 383, 384, 385, 1267, 1268, 386, 1191,
	288, 0, 0, 0, 0, 0, 387, 388, 389, 1251,
	0, 0, 0, 390, 0, 391, 392, 393, 0, 394,
	0, 1278, 395, 396, 397, 1264, 1265, 398, 399, 400,
	401, 402, 403, 404, 405, 406, 0, 407, 1274, 0,
	1201, 408, 0, 409, 410, 411, 412, 413, 414, 1237,
	1238, 1241, 502, 1280, 415, 416, 0, 417, 418, 419,
	420, 421, 0, 0, 0, 289, 422, 423, 424, 0,
	1279, 503, 425, 1246, 1247, 0, 1207, 0, 426, 427,
	1281, 1239, 1282, 428, 429, 430, 1283, 431, 0, 0,
	0, 432, 433, 434, 435, 436, 437, 0, 438, 440,
	439, 0, 441, 1275, 1284, 442, 443, 1285, 0, 444,
	445, 446, 447, 448, 449, 452, 1230, 1229, 450, 451,
	453, 454, 0, 455, 456, 458, 461, 457, 459, 460,
	462, 475, 463, 464, 465, 466, 467, 468, 469, 470,
	471, 472, 473, 474, 477, 0, 476, 1286, 478, 479,
	480, 481, 482, 489, 491, 492, 487, 488, 490, 493,
	494, 496, 484, 485, 486, 1287, 495, 483, 1169, 290,
	1288, 497, 498, 499, 500, 1192, 1240, 501, 1254, 504,
	505, 0, 0, 506, 0, 507, 0, 0, 509, 510,
	511, 0, 0, 512, 513, 706, 1289, 514, 1290, 1269,
	515, 516, 1179, 517, 518, 519, 520, 521, 522, 523,
	524, 525, 0, 526, 527, 708, 528, 529, 530, 709,
	531, 532, 533, 1270, 534, 711, 535, 536, 0, 537,
	538, 539, 0, 540, 541, 542, 543, 544, 545, 546,
	1250, 547, 548, 550, 549, 551, 0, 552, 0, 553,
	554, 555, 0, 0, 0, 0, 0, 556, 557, 559,
	0, 560, 561, 562, 563, 558, 564, 565, 566, 567,
	568, 0, 569, 570, 571, 1291, 572, 573, 574, 575,
	576, 1180, 577, 0, 578, 579, 586, 587, 588, 580,
	581, 582, 589, 590, 591, 592, 593, 0, 595, 596,
	594, 597, 598, 599, 1233, 600, 601, 583, 584, 602,
	603, 1292, 604, 605, 606, 607, 608, 609, 610, 1248,
	0, 611, 0, 612, 613, 614, 615, 616, 618, 585,
	619, 624, 625, 1295, 620, 621, 622, 623, 1271, 627,
	628, 0, 629, 630, 1166, 626, 617, 0, 631, 632,
	633, 634, 635, 636, 0, 637, 638, 0, 639, 1260,
	1261, 1262, 1263, 0, 649, 0, 640, 641, 642, 643,
	1272, 644, 1273, 1190, 645, 646, 647, 648, 0, 650,
	651, 0, 1173, 652, 653, 655, 657, 658, 654, 656,
	659, 1234, 660, 0, 0, 661, 662, 663, 723, 1257,
	1294, 0, 665, 664, 666, 667, 668, 726, 669, 670,
	0, 0, 0, 0, 671, 672, 727, 673, 674, 675,
	1170, 0, 0, 0, 1767, 0, 1212, 1184, 1185, 1186,
	1182, 1183, 1195, 0, 1165, 0, 0, 0, 0, 0,
	0, 1163, 1164, 291, 292, 294, 293, 295, 296, 297,
	298, 1196, 299, 300, 0, 1194, 0, 0, 0, 1236,
	1200, 0, 0, 301, 0, 302, 303, 1276, 304, 305,
	306, 307, 308, 309, 310, 677, 1249, 0, 311, 1256,
	312, 1255, 0, 1266, 313, 314, 315, 316, 317, 318,
	1202, 1235, 1167, 319, 1296, 1297, 684, 0, 320, 321,
	1242, 0, 1223, 0, 322, 323, 324, 325, 326, 327,
	328, 329, 0, 0, 331, 332, 333, 330, 334, 0,
	335, 0, 336, 337, 338, 339, 340, 341, 0, 342,
	343, 344, 1277, 345, 346, 347, 1226, 1224, 1225, 1232,
	1228, 1227, 1231, 348, 349, 350, 351, 352, 1259, 353,
	355, 1253, 1252, 1172, 358, 354, 356, 0, 359, 357,
	360, 0, 361, 362, 363, 0, 0, 364, 1244, 366,
	0, 367, 368, 369, 0, 370, 371, 372, 0, 373,
	374, 1178, 375, 376, 377, 379, 381, 378, 380, 382,
	383, 384, 385, 1267, 1268, 386, 1191, 288, 0, 0,
	0, 0, 0, 387, 388, 389, 1251, 0, 0, 0,
	390, 0, 391, 392, 393, 0, 394, 0, 1278, 395,
	396, 397, 1264, 1265, 398, 399, 400, 401, 402, 403,
	404, 405, 406, 0, 407, 1274, 0, 1201, 408, 0,
	409, 410, 411, 412, 413, 414, 1237, 1238, 1241, 502,
	1280, 415, 416, 0, 417, 418, 419, 420, 421, 0,
	0, 0, 289, 422, 423, 424, 0, 1279, 503, 425,
	1246, 1247, 0, 1207, 0, 426, 427, 1281, 1239, 1282,
	428, 429, 430, 1283, 431, 0, 0, 0, 432, 433,
	434, 435, 436, 437, 0, 438, 440, 439, 0, 441,
	1275, 1284, 442, 443, 1285, 0, 444, 445, 446, 447,
	448, 449, 452, 1230, 1229, 450, 451, 453, 454, 0,
	455, 456, 458, 461, 457, 459, 460, 462, 475, 463,
	464, 465, 466, 467, 468, 469, 470, 471, 472, 473,
	474, 477, 0, 476, 1286, 478, 479, 480, 481, 482,
	489, 491, 492, 487, 488, 490, 493, 494, 496, 484,
	485, 486, 1287, 495, 483, 1169, 290, 1288, 497, 498,
	499, 500, 1192, 1240, 501, 1254, 504, 505, 0, 0,
	506, 0, 507, 0, 0, 509, 510, 511, 0, 0,
	512, 513, 706, 1289, 514, 1290, 1269, 515, 516, 1179,
	517, 518, 519, 520, 521, 522, 523, 524, 525, 0,
	526, 527, 708, 528, 529, 530, 709, 531, 532, 533,
	1270, 534, 711, 535, 536, 0, 537, 538, 539, 0,
	540, 541, 542, 543, 544, 545, 546, 1250, 547, 548,
	550, 549, 551, 0, 552, 0, 553, 554, 555, 0,
	0, 0, 0, 0, 556, 557, 559, 0, 560, 561,
	562, 563, 558, 564, 565, 566, 567, 568, 0, 569,
	570, 571, 1291, 572, 573, 574, 575, 576, 1180, 577,
	0, 578, 579, 586, 587, 588, 580, 581, 582, 589,
	590, 591, 592, 593, 0, 595, 596, 594, 597, 598,
	599, 1233, 600, 601, 583, 584, 602, 603, 1292, 604,
	605, 606, 607, 608, 609, 610, 1248, 0, 611, 0,
	612, 613, 614, 615, 616, 618, 585, 619, 624, 625,
	1295, 620, 621, 622, 623, 1271, 627, 628, 0, 629,
	630, 1166, 626, 617, 0, 631, 632, 633, 634, 635,
	636, 0, 637, 638, 0, 639, 1260, 1261, 1262, 1263,
	0, 649, 0, 640, 641, 642, 643, 1272, 644, 1273,
	1190, 645, 646, 647, 648, 0, 650, 651, 0, 1173,
	652, 653, 655, 657, 658, 654, 656, 659, 1234, 660,
	0, 0, 661, 662, 663, 723, 1257, 1294, 0, 665,
	664, 666, 667, 668, 726, 669, 670, 0, 0, 0,
	0, 671, 672, 727, 673, 674, 675, 1170, 0, 0,
	0, 1753, 0, 1212, 1184, 1185, 1186, 1182, 1183, 1195,
	0, 1165, 0, 0, 0, 0, 0, 0, 1163, 1164,
	291, 292, 294, 293, 295, 296, 297, 298, 1196, 299,
	300, 0, 1194, 0, 0, 0, 1236, 1200, 0, 0,
	301, 0, 302, 303, 1276, 304, 305, 306, 307, 308,
	309, 310, 677, 1249, 0, 311, 1256, 312, 1255, 0,
	1266, 313, 314, 315, 316, 317, 318, 1202, 1235, 1167,
	319, 1296, 1297, 684, 0, 320, 321, 1242, 0, 1223,
	0, 322, 323, 324, 325, 326, 327, 328, 329, 0,
	0, 331, 332, 333, 330, 334, 0, 335, 0, 336,
	337, 338, 339, 340, 341, 0, 342, 343, 344, 1277,
	345, 346, 347, 1226, 1224, 1225, 1232, 1228, 1227, 1231,
	348, 349, 350, 351, 352, 1259, 353, 355, 1253, 1252,
	1172, 358, 354, 356, 0, 359, 357, 360, 0, 361,
	362, 363, 0, 0, 364, 1244, 366, 0, 367, 368,
	369, 0, 370, 371, 372, 0, 373, 374, 1178, 375,
	376, 377, 379, 381, 378, 380, 382, 383, 384, 385,
	1267, 1268, 386, 1191, 288, 0, 0, 0, 0, 0,
	387, 388, 389, 1251, 0, 0, 0, 390, 0, 391,
	392, 393, 0, 394, 0, 1278, 395, 396, 397, 1264,
	1265, 398, 399, 400, 401, 402, 403, 404, 405, 406,
	0, 407, 1274, 0, 1201, 408, 0, 409, 410, 411,
	412, 413, 414, 1237, 1238, 1241, 502, 1280, 415, 416,
	0, 417, 418, 419, 420, 421, 0, 0, 0, 289,
	422, 423, 424, 0, 1279, 503, 425, 1246, 1247, 0,
	1207, 0, 426, 427, 1281, 1239, 1282, 428, 429, 430,
	1283, 431, 0, 0, 0, 432, 433, 434, 435, 436,
	437, 0, 438, 440, 439, 0, 441, 1275, 1284, 442,
	443, 1285, 0, 444, 445, 446, 447, 448, 449, 452,
	1230, 1229, 450, 451, 453, 454, 0, 455, 456, 458,
	461, 457, 459, 460, 462, 475, 463, 464, 465, 466,
	467, 468, 469, 470, 471, 472, 473, 474, 477, 0,
	476, 1286, 478, 479, 480, 481, 482, 489, 491, 492,
	487, 488, 490, 493, 494, 496, 484, 485, 486, 1287,
	495, 483, 1169, 290, 1288, 497, 498, 499, 500, 1192,
	1240, 501, 1254, 504, 505, 0, 0, 506, 0, 507,
	0, 0, 509, 510, 511, 0, 0, 512, 513, 706,
	1289, 514, 1290, 1269, 515, 516, 1179, 517, 518, 519,
	520, 521, 522, 523, 524, 525, 0, 526, 527, 708,
	528, 529, 530, 709, 531, 532, 533, 1270, 534, 711,
	535, 536, 0, 537, 538, 539, 0, 540, 541, 542,
	543, 544, 545, 546, 1250, 547, 548, 550, 549, 551,
	0, 552, 0, 553, 554, 555, 0, 0, 0, 0,
	0, 556, 557, 559, 0, 560, 561, 562, 563, 558,
	564, 565, 566, 567, 568, 0, 569, 570, 571, 1291,
	572, 573, 574, 575, 576, 1180, 577, 0, 578, 579,
	586, 587, 588, 580, 581, 582, 589, 590, 591, 592,
	593, 0, 595, 596, 594, 597, 598, 599, 1233, 600,
	601, 583, 584, 602, 603, 1292, 604, 605, 606, 607,
	608, 609, 610, 1248, 0, 611, 0, 612, 613, 614,
	615, 616, 618, 585, 619, 624, 625, 1295, 620, 621,
	622, 623, 1271, 627, 628, 0, 629, 630, 1166, 626,
	617, 0, 631, 632, 633, 634, 635, 636, 0, 637,
	638, 0, 639, 1260, 1261, 1262, 1263, 0, 649, 0,
	640, 641, 642, 643, 1272, 644, 1273, 1190, 645, 646,
	647, 648, 0, 650, 651, 0, 1173, 652, 653, 655,
	657, 658, 654, 656, 659, 1234, 660, 0, 0, 661,
	662, 663, 723, 1257, 1294, 0, 665, 664, 666, 667,
	668, 726, 669, 670, 0, 0, 0, 0, 671, 672,
	727, 673, 674, 675, 1170, 0, 0, 0, 1748, 0,
	1212, 1184, 1185, 1186, 1182, 1183, 1195, 0, 1165, 0,
	0, 0, 0, 0, 0, 1163, 1164, 291, 292, 294,
	293, 295, 296, 297, 298, 1196, 299, 300, 0, 1194,
	0, 0, 0, 1236, 1200, 0, 0, 301, 0, 302,
	303, 1276, 304, 305, 306, 307, 308, 309, 310, 677,
	1249, 0, 311, 1256, 312, 1255, 0, 1266, 313, 314,
	315, 316, 317, 318, 1202, 1235, 1167, 319, 1296, 1297,
	684, 0, 320, 321, 1242, 0, 1223, 0, 322, 323,
	324, 325, 326, 327, 328, 329, 0, 0, 331, 332,
	333, 330, 334, 0, 335, 0, 336, 337, 338, 339,
	340, 341, 0, 342, 343, 344, 1277, 345, 346, 347,
	1226, 1224, 1225, 1232, 1228, 1227, 1231, 348, 349, 350,
	351, 352, 1259, 353, 355, 1253, 1252, 1172, 358, 354,
	356, 0, 359, 357, 360, 0, 361, 362, 363, 0,
	0, 364, 1244, 366, 0, 367, 368, 369, 0, 370,
	371, 372, 0, 373, 374, 1178, 375, 376, 377, 379,
	381, 378, 380, 382, 383, 384, 385, 1267, 1268, 386,
	1191, 288, 0, 0, 0, 0, 0, 387, 388, 389,
	1251, 0, 0, 0, 390, 0, 391, 392, 393, 0,
	394, 0, 1278, 395, 396, 397, 1264, 1265, 398, 399,
	400, 401, 402, 403, 404, 405, 406, 0, 407, 1274,
	0, 1201, 408, 0, 409, 410, 411, 412, 413, 414,
	1237, 1238, 1241, 502, 1280, 415, 416, 0, 417, 418,
	419, 420, 421, 0, 0, 0, 289, 422, 423, 424,
	0, 1279, 503, 425, 1246, 1247, 0, 1207, 0, 426,
	427, 1281, 1239, 1282, 428, 429, 430, 1283, 431, 0,
	0, 0, 432, 433, 434, 435, 436, 437, 0, 438,
	440, 439, 0, 441, 1275, 1284, 442, 443, 1285, 0,
	444, 445, 446, 447, 448, 449, 452, 1230, 1229, 450,
	451, 453, 454, 0, 455, 456, 458, 461, 457, 459,
	460, 462, 475, 463, 464, 465, 466, 467, 468, 469,
	470, 471, 472, 473, 474, 477, 0, 476, 1286, 478,
	479, 480, 481, 482, 489, 491, 492, 487, 488, 490,
	493, 494, 496, 484, 485, 486, 1287, 495, 483, 1169,
	290, 1288, 497, 498, 499, 500, 1192, 1240, 501, 1254,
	504, 505, 0, 0, 506, 0, 507, 0, 0, 509,
	510, 511, 0, 0, 512, 513, 706, 1289, 514, 1290,
	1269, 515, 516, 1179, 517, 518, 519, 520, 521, 522,
	523, 524, 525, 0, 526, 527, 708, 528, 529, 530,
	709, 531, 532, 533, 1270, 534, 711, 535, 536, 0,
	537, 538, 539, 0, 540, 541, 542, 543, 544, 545,
	546, 1250, 547, 548, 550, 549, 551, 0, 552, 0,
	553, 554, 555, 0, 0, 0, 0, 0, 556, 557,
	559, 0, 560, 561, 562, 563, 558, 564, 565, 566,
	567, 568, 0, 569, 570, 571, 1291, 572, 573, 574,
	575, 576, 1180, 577, 0, 578, 579, 586, 587, 588,
	580, 581, 582, 589, 590, 591, 592, 593, 0, 595,
	596, 594, 597, 598, 599, 1233, 600, 601, 583, 584,
	602, 603, 1292, 604, 605, 606, 607, 608, 609, 610,
	1248, 0, 611, 0, 612, 613, 614, 615, 616, 618,
	585, 619, 624, 625, 1295, 620, 621, 622, 623, 1271,
	627, 628, 0, 629, 630, 1166, 626, 617, 0, 631,
	632, 633, 634, 635, 636, 0, 637, 638, 0, 639,
	1260, 1261, 1262, 1263, 0, 649, 0, 640, 641, 642,
	643, 1272, 644, 1273, 1190, 645, 646, 647, 648, 0,
	650, 651, 0, 1173, 652, 653, 655, 657, 658, 654,
	656, 659, 1234, 660, 0, 0, 661, 662, 663, 723,
	1257, 1294, 0, 665, 664, 666, 667, 668, 726, 669,
	670, 0, 0, 0, 0, 671, 672, 727, 673, 674,
	675, 1170, 0, 0, 0, 1657, 0, 1212, 1184, 1185,
	1186, 1182, 1183, 1195, 0, 1165, 0, 0, 0, 0,
	0, 0, 1163, 1164, 291, 292, 294, 293, 295, 296,
	297, 298, 1196, 299, 300, 0, 1194, 0, 0, 0,
	1236, 1200, 0, 0, 301, 0, 302, 303, 1276, 304,
	305, 306, 307, 308, 309, 310, 677, 1249, 0, 311,
	1256, 312, 1255, 0, 1266, 313, 314, 315, 316, 317,
	318, 1202, 1235, 1167, 319, 1296, 1297, 684, 0, 320,
	321, 1242, 0, 1223, 0, 322, 323, 324, 325, 326,
	327, 328, 329, 0, 0, 331, 332, 333, 330, 334,
	0, 335, 0, 336, 337, 338, 339, 340, 341, 0,
	342, 343, 344, 1277, 345, 346, 347, 1226, 1224, 1225,
	1232, 1228, 1227, 1231, 348, 349, 350, 351, 352, 1259,
	353, 355, 1253, 1252, 1172, 358, 354, 356, 0, 359,
	357, 360, 0, 361, 362, 363, 0, 0, 364, 1244,
	366, 0, 367, 368, 369, 0, 370, 371, 372, 0,
	373, 374, 1178, 375, 376, 377, 379, 381, 378, 380,
	382, 383, 384, 385, 1267, 1268, 386, 1191, 288, 0,
	0, 0, 0, 0, 387, 388, 389, 1251, 0, 0,
	0, 390, 0, 391, 392, 393, 0, 394, 0, 1278,
	395, 396, 397, 1264, 1265, 398, 399, 400, 401, 402,
	403, 404, 405, 406, 0, 407, 1274, 0, 1201, 408,
	0, 409, 410, 411, 412, 413, 414, 1656, 1238, 1241,
	502, 1280, 415, 416, 0, 417, 418, 419, 420, 421,
	0, 0, 0, 289, 422, 423, 424, 0, 1279, 503,
	425, 1246, 1247, 0, 1207, 0, 426, 427, 1281, 1239,
	1282, 428, 429, 430, 1283, 431, 0, 0, 0, 432,
	433, 434, 435, 436, 437, 0, 438, 440, 439, 0,
	441, 1275, 1284, 442, 443, 1285, 0, 444, 445, 446,
	447, 448, 449, 452, 1230, 1229, 450, 451, 453, 454,
	0, 455, 456, 458, 461, 457, 459, 460, 462, 475,
	463, 464, 465, 466, 467, 468, 469, 470, 471, 472,
	473, 474, 477, 0, 476, 1286, 478, 479, 480, 481,
	482, 489, 491, 492, 487, 488, 490, 493, 494, 496,
	484, 485, 486, 1287, 495, 483, 1169, 290, 1288, 497,
	498, 499, 500, 1192, 1240, 501, 1254, 504, 505, 0,
	0, 506, 0, 507, 0, 0, 509, 510, 511, 0,
	0, 512, 513, 706, 1289, 514, 1290, 1269, 515, 516,
	1179, 517, 518, 519, 520, 521, 522, 523, 524, 525,
	0, 526, 527, 708, 528, 529, 530, 709, 531, 532,
	533, 1270, 534, 711, 535, 536, 0, 537, 538, 539,
	0, 540, 541, 542, 543, 544, 545, 546, 1250, 547,
	548, 550, 549, 551, 0, 552, 0, 553, 554, 555,
	0, 0, 0, 0, 0, 556, 557, 559, 0, 560,
	561, 562, 563, 558, 564, 565, 566, 567, 568, 0,
	569, 570, 571, 1291, 572, 573, 574, 575, 576, 1180,
	577, 0, 578, 579, 586, 587, 588, 580, 581, 582,
	589, 590, 591, 592, 593, 0, 595, 596, 594, 597,
	598, 599, 1233, 600, 601, 583, 584, 602, 603, 1292,
	604, 605, 606, 607, 608, 609, 610, 1248, 0, 611,
	0, 612, 613, 614, 615, 616, 618, 585, 619, 624,
	625, 1295, 620, 621, 622, 623, 1271, 627, 628, 0,
	629, 630, 1166, 626, 617, 0, 631, 632, 633, 634,
	635, 636, 0, 637, 638, 0, 639, 1260, 1261, 1262,
	1263, 0, 649, 0, 640, 641, 642, 643, 1272, 644,
	1273, 1190, 645, 646, 647, 648, 0, 650, 651, 0,
	1173, 652, 653, 655, 657, 658, 654, 656, 659, 1234,
	660, 0, 0, 661, 662, 663, 723, 1257, 1294, 0,
	665, 664, 666, 667, 668, 726, 669, 670, 0, 0,
	0, 0, 671, 672, 727, 673, 674, 675, 1170, 0,
	0, 0, 1651, 0, 1212, 1184, 1185, 1186, 1182, 1183,
	1195, 0, 1165, 0, 0, 0, 0, 0, 0, 1163,
	1164, 291, 292, 294, 293, 295, 296, 297, 298, 1196,
	299, 300, 0, 1194, 0, 0, 0, 1236, 1200, 0,
	0, 301, 0, 302, 303, 1276, 304, 305, 306, 307,
	308, 309, 310, 677, 1249, 0, 311, 1256, 312, 1255,
	0, 1266, 313, 314, 315, 316, 317, 318, 1202, 1235,
	1167, 319, 1296, 1297, 684, 0, 320, 321, 1242, 0,
	1223, 0, 322, 323, 324, 325, 326, 327, 328, 329,
	0, 0, 331, 332, 333, 330, 334, 0, 335, 0,
	336, 337, 338, 339, 340, 341, 0, 342, 343, 344,
	1277, 345, 346, 347, 1226, 1224, 1225, 1232, 1228, 1227,
	1231, 348, 349, 350, 351, 352, 1259, 353, 355, 1253,
	1252, 1172, 358, 354, 356, 0, 359, 357, 360, 0,
	361, 362, 363, 0, 0, 364, 1244, 366, 0, 367,
	368, 369, 0, 370, 371, 372, 0, 373, 374, 1178,
	375, 376, 377, 379, 381, 378, 380, 382, 383, 384,
	385, 1267, 1268, 386, 1191, 288, 0, 0, 0, 0,
	0, 387, 388, 389, 1251, 0, 0, 0, 390, 0,
	391, 392, 393, 0, 394, 0, 1278, 395, 396, 397,
	1264, 1265, 398, 399, 400, 401, 402, 403, 404, 405,
	406, 0, 407, 1274, 0, 1201, 408, 0, 409, 410,
	411, 412, 413, 414, 1650, 1238, 1241, 502, 1280, 415,
	416, 0, 417, 418, 419, 420, 421, 0, 0, 0,
	289, 422, 423, 424, 0, 1279, 503, 425, 1246, 1247,
	0, 1207, 0, 426, 427, 1281, 1239, 1282, 428, 429,
	430, 1283, 431, 0, 0, 0, 432, 433, 434, 435,
	436, 437, 0, 438, 440, 439, 0, 441, 1275, 1284,
	442, 443, 1285, 0, 444, 445, 446, 447, 448, 449,
	452, 1230, 1229, 450, 451, 453, 454, 0, 455, 456,
	458, 461, 457, 459, 460, 462, 475, 463, 464, 465,
	466, 467, 468, 469, 470, 471, 472, 473, 474, 477,
	0, 476, 1286, 478, 479, 480, 481, 482, 489, 491,
	492, 487, 488, 490, 493, 494, 496, 484, 485, 486,
	1287, 495, 483, 1169, 290, 1288, 497, 498, 499, 500,
	1192, 1240, 501, 1254, 504, 505, 0, 0, 506, 0,
	507, 0, 0, 509, 510, 511, 0, 0, 512, 513,
	706, 1289, 514, 1290, 1269, 515, 516, 1179, 517, 518,
	519, 520, 521, 522, 523, 524, 525, 0, 526, 527,
	708, 528, 529, 530, 709, 531, 532, 533, 1270, 534,
	711, 535, 536, 0, 537, 538, 539, 0, 540, 541,
	542, 543, 544, 545, 546, 1250, 547, 548, 550, 549,
	551, 0, 552, 0, 553, 554, 555, 0, 0, 0,
	0, 0, 556, 557, 559, 0, 560, 561, 562, 563,
	558, 564, 565, 566, 567, 568, 0, 569, 570, 571,
	1291, 572, 573, 574, 575, 576, 1180, 577, 0, 578,
	579, 586, 587, 588, 580, 581, 582, 589, 590, 591,
	592, 593, 0, 595, 596, 594, 597, 598, 599, 1233,
	600, 601, 583, 584, 602, 603, 1292, 604, 605, 606,
	607, 608, 609, 610, 1248, 0, 611, 0, 612, 613,
	614, 615, 616, 618, 585, 619, 624, 625, 1295, 620,
	621, 622, 623, 1271, 627, 628, 0, 629, 630, 1166,
	626, 617, 0, 631, 632, 633, 634, 635, 636, 0,
	637, 638, 0, 639, 1260, 1261, 1262, 1263, 0, 649,
	0, 640, 641, 642, 643, 1272, 644, 1273, 1190, 645,
	646, 647, 648, 0, 650, 651, 0, 1173, 652, 653,
	655, 657, 658, 654, 656, 659, 1234, 660, 0, 0,
	661, 662, 663, 723, 1257, 1294, 0, 665, 664, 666,
	667, 668, 726, 669, 670, 0, 0, 0, 0, 671,
	672, 727, 673, 674, 675, 1170, 0, 0, 0, 1644,
	0, 1212, 1184, 1185, 1186, 1182, 1183, 1195, 0, 1165,
	0, 0, 0, 0, 0, 0, 1163, 1164, 291, 292,
	294, 293, 295, 296, 297, 298, 1196, 299, 300, 0,
	1194, 0, 0, 0, 1236, 1200, 0, 0, 301, 0,
	302, 303, 1276, 304, 305, 306, 307, 308, 309, 310,
	677, 1249, 0, 311, 1256, 312, 1255, 0, 1266, 313,
	314, 315, 316, 317, 318, 1202, 1235, 1167, 319, 1296,
	1297, 684, 0, 320, 321, 1242, 0, 1223, 0, 322,
	323, 324, 325, 326, 327, 328, 329, 0, 0, 331,
	332, 333, 330, 334, 0, 335, 0, 336, 337, 338,
	339, 340, 341, 0, 342, 343, 344, 1277, 345, 346,
	347, 1226, 1224, 1225, 1232, 1228, 1227, 1231, 348, 349,
	350, 351, 352, 1259, 353, 355, 1253, 1252, 1172, 358,
	354, 356, 0, 359, 357, 360, 0, 361, 362, 363,
	0, 0, 364, 1244, 366, 0, 367, 368, 369, 0,
	370, 371, 372, 0, 373, 374, 1178, 375, 376, 377,
	379, 381, 378, 380, 382, 383, 384, 385, 1267, 1268,
	386, 1191, 288, 0, 0, 0, 0, 0, 387, 388,
	389, 1251, 0, 0, 0, 390, 0, 391, 392, 393,
	0, 394, 0, 1278, 395, 396, 397, 1264, 1265, 398,
	399, 400, 401, 402, 403, 404, 405, 406, 0, 407,
	1274, 0, 1201, 408, 0, 409, 410, 411, 412, 413,
	414, 1237, 1238, 1241, 502, 1280, 415, 416, 0, 417,
	418, 419, 420, 421, 0, 0, 0, 289, 422, 423,
	424, 0, 1279, 503, 425, 1246, 1247, 0, 1207, 0,
	426, 427, 1281, 1239, 1282, 428, 429, 430, 1283, 431,
	0, 0, 0, 432, 433, 434, 435, 436, 437, 0,
	438, 440, 439, 0, 441, 1275, 1284, 442, 443, 1285,
	0, 444, 445, 446, 447, 448, 449, 452, 1230, 1229,
	450, 451, 453, 454, 0, 455, 456, 458, 461, 457,
	459, 460, 462, 475, 463, 464, 465, 466, 467, 468,
	469, 470, 471, 472, 473, 474, 477, 0, 476, 1286,
	478, 479, 480, 481, 482, 489, 491, 492, 487, 488,
	490, 493, 494, 496, 484, 485, 486, 1287, 495, 483,
	1169, 290, 1288, 497, 498, 499, 500, 1192, 1240, 501,
	1254, 504, 505, 0, 0, 506, 0, 507, 0, 0,
	509, 510, 511, 0, 0, 512, 513, 706, 1289, 514,
	1290, 1269, 515, 516, 1179, 517, 518, 519, 520, 521,
	522, 523, 524, 525, 0, 526, 527, 708, 528, 529,
	530, 709, 531, 532, 533, 1270, 534, 711, 535, 536,
	0, 537, 538, 539, 0, 540, 541, 542, 543, 544,
	545, 546, 1250, 547, 548, 550, 549, 551, 0, 552,
	0, 553, 554, 555, 0, 0, 0, 0, 0, 556,
	557, 559, 0, 560, 561, 562, 563, 558, 564, 565,
	566, 567, 568, 0, 569, 570, 571, 1291, 572, 573,
	574, 575, 576, 1180, 577, 0, 578, 579, 586, 587,
	588, 580, 581, 582, 589, 590, 591, 592, 593, 0,
	595, 596, 594, 597, 598, 599, 1233, 600, 601, 583,
	584, 602, 603, 1292, 604, 605, 606, 607, 608, 609,
	610, 1248, 0, 611, 0, 612, 613, 614, 615, 616,
	618, 585, 619, 624, 625, 1295, 620, 621, 622, 623,
	1271, 627, 628, 0, 629, 630, 1166, 626, 617, 0,
	631, 632, 633, 634, 635, 636, 0, 637, 638, 0,
	639, 1260, 1261, 1262, 1263, 0, 649, 0, 640, 641,
	642, 643, 1272, 644, 1273, 1190, 645, 646, 647, 648,
	0, 650, 651, 0, 1173, 652, 653, 655, 657, 658,
	654, 656, 659, 1234, 660, 0, 0, 661, 662, 663,
	723, 1257, 1294, 0, 665, 664, 666, 667, 668, 726,
	669, 670, 0, 0, 0, 0, 671, 672, 727, 673,
	674, 675, 1170, 0, 0, 0, 1607, 0, 1212, 1184,
	1185, 1186, 1182, 1183, 1195, 0, 1165, 0, 0, 0,
	0, 0, 0, 1163, 1164, 291, 292, 294, 293, 295,
	296, 297, 298, 1196, 299, 300, 0, 1194, 0, 0,
	0, 1236, 1200, 0, 0, 301, 0, 302, 303, 1276,
	304, 305, 306, 307, 308, 309, 310, 677, 1249, 0,
	311, 1256, 312, 1255, 0, 1266, 313, 314, 315, 316,
	317, 318, 1202, 1235, 1167, 319, 1296, 1297, 684, 0,
	320, 321, 1242, 0, 1223, 0, 322, 323, 324, 325,
	326, 327, 328, 329, 0, 0, 331, 332, 333, 330,
	334, 0, 335, 0, 336, 337, 338, 339, 340, 341,
	0, 342, 343, 344, 1277, 345, 346, 347, 1226, 1224,
	1225, 1232, 1228, 1227, 1231, 348, 349, 350, 351, 352,
	1259, 353, 355, 1253, 1252, 1172, 358, 354, 356, 0,
	359, 357, 360, 0, 361, 362, 363, 0, 0, 364,
	1244, 366, 0, 367, 368, 369, 0, 370, 371, 372,
	0, 373, 374, 1178, 375, 376, 377, 379, 381, 378,
	380, 382, 383, 384, 385, 1267, 1268, 386, 1191, 288,
	0, 0, 0, 0, 0, 387, 388, 389, 1251, 0,
	0, 0, 390, 0, 391, 392, 393, 0, 394, 0,
	1278, 395, 396, 397, 1264, 1265, 398, 399, 400, 401,
	402, 403, 404, 405, 406, 0, 407, 1274, 0, 1201,
	408, 0, 409, 410, 411, 412, 413, 414, 1237, 1238,
	1241, 502, 1280, 415, 416, 0, 417, 418, 419, 420,
	421, 0, 0, 0, 289, 422, 423, 424, 0, 1279,
	503, 425, 1246, 1247, 0, 1207, 0, 426, 427, 1281,
	1239, 1282, 428, 429, 430, 1283, 431, 0, 0, 0,
	432, 433, 434, 435, 436, 437, 0, 438, 440, 439,
	0, 441, 1275, 1284, 442, 443, 1285, 0, 444, 445,
	446, 447, 448, 449, 452, 1230, 1229, 450, 451, 453,
	454, 0, 455, 456, 458, 461, 457, 459, 460, 462,
	475, 463, 464, 465, 466, 467, 468, 469, 470, 471,
	472, 473, 474, 477, 0, 476, 1286, 478, 479, 480,
	481, 482, 489, 491, 492, 487, 488, 490, 493, 494,
	496, 484, 485, 486, 1287, 495, 483, 1169, 290, 1288,
	497, 498, 499, 500, 1192, 1240, 501, 1254, 504, 505,
	0, 0, 506, 0, 507, 0, 0, 509, 510, 511,
	0, 0, 512, 513, 706, 1289, 514, 1290, 1269, 515,
	516, 1179, 517, 518, 519, 520, 521, 522, 523, 524,
	525, 0, 526, 527, 708, 528, 529, 530, 709, 531,
	532, 533, 1270, 534, 711, 535, 536, 0, 537, 538,
	539, 0, 540, 541, 542, 543, 544, 545, 546, 1250,
	547, 548, 550, 549, 551, 0, 552, 0, 553, 554,
	555, 0, 0, 0, 0, 0, 556, 557, 559, 0,
	560, 561, 562, 563, 558, 564, 565, 566, 567, 568,
	0, 569, 570, 571, 1291, 572, 573, 574, 575, 576,
	1180, 577, 0, 578, 579, 586, 587, 588, 580, 581,
	582, 589, 590, 591, 592, 593, 0, 595, 596, 594,
	597, 598, 599, 1233, 600, 601, 583, 584, 602, 603,
	1292, 604, 605, 606, 607, 608, 609, 610, 1248, 0,
	611, 0, 612, 613, 614, 615, 616, 618, 585, 619,
	624, 625, 1295, 620, 621, 622, 623, 1271, 627, 628,
	0, 629, 630, 1166, 626, 617, 0, 631, 632, 633,
	634, 635, 636, 0, 637, 638, 0, 639, 1260, 1261,
	1262, 1263, 0, 649, 0, 640, 641, 642, 643, 1272,
	644, 1273, 1190, 645, 646, 647, 648, 0, 650, 651,
	0, 1173, 652, 653, 655, 657, 658, 654, 656, 659,
	1234, 660, 0, 0, 661, 662, 663, 723, 1257, 1294,
	0, 665, 664, 666, 667, 668, 726, 669, 670, 0,
	0, 0, 0, 671, 672, 727, 673, 674, 675, 1170,
	0, 0, 0, 1589, 0, 1212, 1184, 1185, 1186, 1182,
	1183, 1195, 0, 1165, 0, 0, 0, 0, 0, 0,
	1163, 1164, 291, 292, 294, 293, 295, 296, 297, 298,
	1196, 299, 300, 0, 1194, 0, 0, 0, 1236, 1200,
	0, 0, 301, 0, 302, 303, 1276, 304, 305, 306,
	307, 308, 309, 310, 677, 1249, 0, 311, 1256, 312,
	1255, 0, 1266, 313, 314, 315, 316, 317, 318, 1202,
	1235, 1167, 319, 1296, 1297, 684, 0, 320, 321, 1242,
	0, 1223, 0, 322, 323, 324, 325, 326, 327, 328,
	329, 0, 0, 331, 332, 333, 330, 334, 0, 335,
	0, 336, 337, 338, 339, 340, 341, 0, 342, 343,
	344, 1277, 345, 346, 347, 1226, 1224, 1225, 1232, 1228,
	1227, 1231, 348, 349, 350, 351, 352, 1259, 353, 355,
	1253, 1252, 1172, 358, 354, 356, 0, 359, 357, 360,
	0, 361, 362, 363, 0, 0, 364, 1244, 366, 0,
	367, 368, 369, 0, 370, 371, 372, 0, 373, 374,
	1178, 375, 376, 377, 379, 381, 378, 1593, 382, 383,
	384, 385, 1267, 1268, 386, 1191, 288, 0, 0, 0,
	0, 0, 387, 388, 389, 1251, 0, 0, 0, 390,
	0, 391, 392, 393, 0, 394, 0, 1278, 395, 396,
	397, 1264, 1265, 398, 399, 400, 401, 402, 403, 404,
	405, 406, 0, 407, 1274, 0, 1201, 408, 0, 409,
	410, 411, 412, 413, 414, 1237, 1238, 1241, 502, 1280,
	415, 416, 0, 417, 418, 419, 420, 421, 0, 0,
	0, 289, 422, 423, 424, 0, 1279, 503, 425, 1246,
	1247, 0, 1207, 0, 426, 427, 1281, 1239, 1282, 428,
	429, 430, 1283, 431, 0, 0, 0, 432, 433, 434,
	435, 436, 437, 0, 438, 440, 439, 0, 441, 1275,
	1284, 442, 443, 1285, 0, 444, 445, 446, 447, 448,
	449, 452, 1230, 1229, 450, 451, 453, 454, 0, 455,
	456, 458, 461, 457, 459, 460, 462, 475, 463, 464,
	465, 466, 467, 468, 469, 470, 471, 472, 473, 474,
	477, 0, 476, 1286, 478, 479, 480, 481, 482, 489,
	491, 492, 487, 488, 490, 493, 494, 496, 484, 485,
	486, 1287, 495, 483, 1169, 290, 1288, 497, 498, 499,
	500, 1192, 1240, 501, 1254, 504, 505, 0, 0, 506,
	0, 507, 0, 0, 509, 510, 511, 0, 0, 512,
	513, 706, 1289, 514, 1290, 1269, 515, 516, 1179, 517,
	518, 519, 520, 521, 522, 523, 524, 525, 0, 526,
	527, 708, 528, 529, 530, 709, 531, 532, 533, 1270,
	534, 711, 535, 536, 0, 537, 538, 539, 0, 540,
	541, 542, 543, 544, 545, 546, 1250, 547, 548, 550,
	549, 551, 0, 552, 0, 553, 554, 555, 0, 0,
	0, 0, 0, 556, 557, 1594, 0, 560, 561, 562,
	563, 558, 564, 565, 566, 567, 568, 0, 569, 570,
	571, 1291, 572, 573, 574, 575, 576, 1180, 577, 0,
	578, 579, 586, 587, 588, 580, 581, 582, 589, 590,
	591, 592, 593, 0, 595, 596, 594, 597, 598, 599,
	1233, 600, 601, 583, 584, 602, 603, 1292, 604, 605,
	606, 607, 608, 609, 610, 1248, 0, 611, 0, 612,
	613, 614, 615, 616, 618, 585, 619, 624, 625, 1295,
	620, 621, 622, 623, 1271, 627, 628, 0, 629, 630,
	1166, 626, 617, 0, 631, 632, 633, 634, 635, 636,
	0, 1592, 638, 0, 639, 1260, 1261, 1262, 1263, 0,
	649, 0, 640, 641, 642, 643, 1272, 644, 1273, 1190,
	645, 646, 647, 648, 0, 650, 651, 0, 1173, 652,
	653, 655, 657, 658, 654, 656, 659, 1234, 660, 0,
	0, 661, 662, 663, 723, 1257, 1294, 0, 665, 664,
	666, 667, 668, 726, 669, 670, 0, 0, 0, 0,
	671, 672, 727, 673, 674, 675, 1170, 0, 0, 0,
	1421, 0, 1212, 1184, 1185, 1186, 1182, 1183, 1195, 0,
	1165, 0, 0, 0, 0, 0, 0, 1163, 1164, 291,
	292, 294, 293, 295, 296, 297, 298, 1196, 299, 300,
	0, 1194, 0, 0, 0, 1236, 1200, 0, 0, 301,
	0, 302, 303, 1276, 304, 305, 306, 307, 308, 309,
	310, 677, 1249, 0, 311, 1256, 312, 1255, 0, 1266,
	313, 314, 315, 316, 317, 318, 1202, 1235, 1167, 319,
	1296, 1297, 684, 0, 320, 321, 1242, 0, 1223, 0,
	322, 323, 324, 325, 326, 327, 328, 329, 0, 0,
	331, 332, 333, 330, 334, 0, 335, 0, 336, 337,
	338, 339, 340, 341, 0, 342, 343, 344, 1277, 345,
	346, 347, 1226, 1224, 1225, 1232, 1228, 1227, 1231, 348,
	349, 350, 351, 352, 1259, 353, 355, 1253, 1252, 1172,
	358, 354, 356, 0, 359, 357, 360, 0, 361, 362,
	363, 0, 0, 364, 1244, 366, 0, 367, 368, 369,
	0, 370, 371, 372, 0, 373, 374, 1178, 375, 376,
	377, 379, 381, 378, 380, 382, 383, 384, 385, 1267,
	1268, 386, 1191, 288, 0, 0, 0, 0, 0, 387,
	388, 389, 1251, 0, 0, 0, 390, 0, 391, 392,
	393, 0, 394, 0, 1278, 395, 396, 397, 1264, 1265,
	398, 399, 400, 401, 402, 403, 404, 405, 406, 0,
	407, 1274, 0, 1201, 408, 0, 409, 410, 411, 412,
	413, 414, 1237, 1238, 1241, 502, 1280, 415, 416, 0,
	417, 418, 419, 420, 421, 0, 0, 0, 289, 422,
	423, 424, 0, 1279, 503, 425, 1246, 1247, 0, 1207,
	0, 426, 427, 1281, 1239, 1282, 428, 429, 430, 1283,
	431, 0, 0, 0, 432, 433, 434, 435, 436, 437,
	0, 438, 440, 439, 0, 441, 1275, 1284, 442, 443,
	1285, 0, 444, 445, 446, 447, 448, 449, 452, 1230,
	1229, 450, 451, 453, 454, 0, 455, 456, 458, 461,
	457, 459, 460, 462, 475, 463, 464, 465, 466, 467,
	468, 469, 470, 471, 472, 473, 474, 477, 0, 476,
	1286, 478, 479, 480, 481, 482, 489, 491, 492, 487,
	488, 490, 493, 494, 496, 484, 485, 486, 1287, 495,
	483, 1169, 290, 1288, 497, 498, 499, 500, 1192, 1240,
	501, 1254, 504, 505, 0, 0, 506, 0, 507, 0,
	0, 509, 510, 511, 0, 0, 512, 513, 706, 1289,
	514, 1290, 1269, 515, 516, 1179, 517, 518, 519, 520,
	521, 522, 523, 524, 525, 0, 526, 527, 708, 528,
	529, 530, 709, 531, 532, 533, 1270, 534, 711, 535,
	536, 0, 537, 538, 539, 0, 540, 541, 542, 543,
	544, 545, 546, 1250, 547, 548, 550, 549, 551, 0,
	552, 0, 553, 554, 555, 0, 0, 0, 0, 0,
	556, 557, 559, 0, 560, 561, 562, 563, 558, 564,
	565, 566, 567, 568, 0, 569, 570, 571, 1291, 572,
	573, 574, 575, 576, 1180, 577, 0, 578, 579, 586,
	587, 588, 580, 581, 582, 589, 590, 591, 592, 593,
	0, 595, 596, 594, 597, 598, 599, 1233, 600, 601,
	583, 584, 602, 603, 1292, 604, 605, 606, 607, 608,
	609, 610, 1248, 0, 611, 0, 612, 613, 614, 615,
	616, 618, 585, 619, 624, 625, 1295, 620, 621, 622,
	623, 1271, 627, 628, 0, 629, 630, 1166, 626, 617,
	0, 631, 632, 633, 634, 635, 636, 0, 637, 638,
	0, 639, 1260, 1261, 1262, 1263, 0, 649, 0, 640,
	641, 642, 643, 1272, 644, 1273, 1190, 645, 646, 647,
	648, 0, 650, 651, 0, 1173, 652, 653, 655, 657,
	658, 654, 656, 659, 1234, 660, 0, 0, 661, 662,
	663, 723, 1257, 1294, 0, 665, 664, 666, 667, 668,
	726, 669, 670, 0, 0, 0, 0, 671, 672, 727,
	673, 674, 675, 1170, 0, 0, 0, 0, 0, 1212,
	1184, 1185, 1186, 1182, 1183, 1195, 0, 1165, 0, 0,
	0, 0, 0, 0, 1163, 1164, 291, 292, 294, 293,
	295, 296, 297, 298, 1196, 299, 300, 0, 1194, 0,
	0, 0, 1236, 1200, 0, 0, 301, 0, 302, 303,
	1276, 304, 305, 306, 307, 308, 309, 310, 677, 1249,
	0, 311, 1256, 312, 1255, 0, 1266, 313, 314, 315,
	316, 317, 318, 1202, 1235, 1167, 319, 1296, 1297, 684,
	0, 320, 321, 1242, 0, 1223, 0, 322, 323, 324,
	325, 326, 327, 328, 329, 0, 0, 331, 332, 333,
	330, 334, 0, 335, 0, 336, 337, 338, 339, 340,
	341, 0, 342, 343, 344, 1277, 345, 346, 347, 1226,
	1224, 1225, 1232, 1228, 1227, 1231, 348, 349, 350, 351,
	352, 1259, 353, 355, 1253, 1252, 1172, 358, 354, 356,
	0, 359, 357, 360, 0, 361, 362, 363, 0, 0,
	364, 1244, 366, 0, 367, 368, 369, 0, 370, 371,
	372, 0, 373, 374, 1178, 375, 376, 377, 379, 381,
	378, 380, 382, 383, 384, 385, 1267, 1268, 386, 1191,
	288, 0, 0, 0, 0, 0, 387, 388, 389, 1251,
	0, 0, 0, 390, 0, 391, 392, 393, 0, 394,
	0, 1278, 395, 396, 397, 1264, 1265, 398, 399, 400,
	401, 402, 403, 404, 405, 406, 0, 407, 1274, 0,
	1201, 408, 0, 409, 410, 411, 412, 413, 414, 1237,
	1238, 1241, 502, 1280, 415, 416, 0, 417, 418, 419,
	420, 421, 0, 0, 0, 289, 422, 423, 424, 0,
	1279, 503, 425, 1246, 1247, 0, 1207, 0, 426, 427,
	1281, 1239, 1282, 428, 429, 430, 1283, 431, 0, 0,
	0, 432, 433, 434, 435, 436, 437, 0, 438, 440,
	439, 0, 441, 1275, 1284, 442, 443, 1285, 0, 444,
	445, 446, 447, 448, 449, 452, 1230, 1229, 450, 451,
	453, 454, 0, 455, 456, 458, 461, 457, 459, 460,
	462, 475, 463, 464, 465, 466, 467, 468, 469, 470,
	471, 472, 473, 474, 477, 0, 476, 1286, 478, 479,
	480, 481, 482, 489, 491, 492, 487, 488, 490, 493,
	494, 496, 484, 485, 486, 1287, 495, 483, 1169, 290,
	1288, 497, 498, 499, 500, 1192, 1240, 501, 1254, 504,
	505, 0, 0, 506, 0, 507, 0, 0, 509, 510,
	511, 0, 0, 512, 513, 706, 1289, 514, 1290, 1269,
	515, 516, 1179, 517, 518, 519, 520, 521, 522, 523,
	524, 525, 0, 526, 527, 708, 528, 529, 530, 709,
	531, 532, 533, 1270, 534, 711, 535, 536, 0, 537,
	538, 539, 0, 540, 541, 542, 543, 544, 545, 546,
	1250, 547, 548, 550, 549, 551, 0, 552, 0, 553,
	554, 555, 0, 0, 0, 0, 0, 556, 557, 559,
	0, 560, 561, 562, 563, 558, 564, 565, 566, 567,
	568, 0, 569, 570, 571, 1291, 572, 573, 574, 575,
	576, 1180, 577, 0, 578, 579, 586, 587, 588, 580,
	581, 582, 589, 590, 591, 592, 593, 0, 595, 596,
	594, 597, 598, 599, 1233, 600, 601, 583, 584, 602,
	603, 1292, 604, 605, 606, 607, 608, 609, 610, 1248,
	0, 611, 0, 612, 613, 614, 615, 616, 618, 585,
	619, 624, 625, 1295, 620, 621, 622, 623, 1271, 627,
	628, 0, 629, 630, 1166, 626, 617, 0, 631, 632,
	633, 634, 635, 636, 0, 637, 638, 0, 639, 1260,
	1261, 1262, 1263, 0, 649, 0, 640, 641, 642, 643,
	1272, 644, 1273, 1190, 645, 646, 647, 648, 0, 650,
	651, 0, 1173, 652, 653, 655, 657, 658, 654, 656,
	659, 1234, 660, 0, 0, 661, 662, 663, 723, 1257,
	1294, 0, 665, 664, 666, 667, 668, 726, 669, 670,
	0, 0, 0, 0, 671, 672, 727, 673, 674, 675,
	1170, 0, 0, 0, 0, 0, 1212, 1184, 1185, 1186,
	1182, 1183, 1195, 0, 1165, 0, 0, 0, 0, 0,
	0, 1163, 1164, 291, 292, 294, 293, 295, 296, 297,
	298, 1196, 299, 300, 0, 1194, 0, 0, 0, 1236,
	1200, 0, 0, 301, 0, 302, 303, 1276, 304, 305,
	306, 307, 308, 309, 310, 677, 1249, 0, 311, 1256,
	312, 1255, 0, 1266, 313, 314, 315, 316, 317, 318,
	1202, 1235, 1167, 319, 1296, 1297, 684, 0, 320, 321,
	1242, 0, 1223, 0, 322, 323, 324, 325, 326, 327,
	328, 329, 0, 0, 331, 332, 333, 330, 334, 0,
	335, 0, 336, 337, 338, 339, 340, 341, 0, 342,
	343, 344, 1277, 345, 346, 5031, 1226, 1224, 1225, 1232,
	1228, 1227, 1231, 348, 349, 350, 351, 352, 1259, 353,
	355, 1253, 1252, 1172, 358, 354, 356, 0, 359, 357,
	360, 0, 361, 362, 363, 0, 0, 364, 1244, 366,
	0, 367, 368, 369, 0, 370, 371, 372, 0, 373,
	374, 1178, 375, 376, 377, 379, 381, 378, 380, 382,
	383, 384, 385, 1267, 1268, 386, 1191, 288, 0, 0,
	0, 0, 0, 387, 388, 389, 1251, 0, 0, 0,
	390, 0, 391, 392, 393, 0, 394, 0, 1278, 395,
	396, 397, 1264, 1265, 398, 399, 400, 401, 402, 403,
	404, 405, 406, 0, 407, 1274, 0, 1201, 408, 0,
	409, 410, 411, 412, 413, 414, 1237, 1238, 1241, 502,
	1280, 415, 416, 0, 417, 418, 419, 420, 421, 0,
	0, 0, 289, 422, 423, 424, 0, 1279, 503, 425,
	1246, 1247, 0, 1207, 0, 426, 427, 1281, 1239, 1282,
	428, 429, 430, 1283, 431, 0, 0, 0, 432, 433,
	434, 435, 436, 437, 0, 438, 440, 439, 0, 441,
	1275, 1284, 442, 443, 1285, 0, 444, 445, 446, 447,
	448, 449, 452, 1230, 1229, 450, 451, 453, 454, 0,
	455, 456, 458, 461, 457, 459, 460, 462, 475, 463,
	464, 465, 466, 467, 468, 469, 470, 471, 472, 473,
	474, 477, 0, 476, 1286, 478, 479, 480, 481, 482,
	489, 491, 492, 487, 488, 490, 493, 494, 496, 484,
	485, 486, 1287, 495, 483, 1169, 290, 1288, 497, 498,
	499, 500, 1192, 1240, 501, 1254, 504, 505, 0, 0,
	506, 0, 507, 0, 0, 509, 510, 511, 0, 0,
	512, 513, 706, 1289, 514, 1290, 1269, 515, 516, 1179,
	517, 518, 519, 520, 521, 522, 523, 524, 525, 0,
	526, 527, 708, 528, 529, 530, 709, 531, 532, 533,
	1270, 534, 711, 535, 536, 0, 537, 538, 539, 0,
	540, 541, 542, 543, 544, 545, 546, 1250, 547, 548,
	550, 549, 551, 0, 552, 0, 553, 554, 555, 0,
	0, 0, 0, 0, 556, 557, 559, 0, 560, 561,
	562, 563, 558, 564, 565, 566, 567, 568, 0, 569,
	570, 571, 1291, 572, 573, 574, 575, 576, 1180, 577,
	0, 578, 579, 586, 587, 588, 580, 581, 582, 589,
	590, 591, 592, 593, 0, 595, 596, 594, 597, 598,
	599, 1233, 600, 601, 583, 584, 602, 603, 1292, 604,
	605, 606, 607, 608, 609, 610, 1248, 0, 611, 0,
	612, 613, 614, 615, 616, 618, 585, 619, 624, 625,
	1295, 620, 621, 622, 623, 1271, 627, 628, 0, 629,
	630, 1166, 626, 617, 0, 631, 632, 633, 634, 635,
	636, 0, 637, 638, 0, 639, 1260, 1261, 1262, 1263,
	0, 649, 0, 640, 641, 642, 643, 1272, 644, 1273,
	1190, 645, 646, 647, 648, 0, 5030, 651, 0, 1173,
	652, 653, 655, 657, 658, 654, 656, 659, 1234, 660,
	0, 0, 661, 662, 663, 723, 1257, 1294, 0, 665,
	664, 666, 667, 668, 726, 669, 670, 0, 0, 0,
	0, 671, 672, 727, 673, 674, 675, 1170, 0, 0,
	0, 0, 0, 1212, 1184, 1185, 1186, 1182, 1183, 1195,
	0, 1165, 0, 0, 0, 0, 0, 0, 1163, 1164,
	291, 292, 294, 293, 295, 296, 297, 298, 1196, 299,
	300, 0, 1194, 0, 0, 0, 1236, 1200, 0, 0,
	301, 0, 302, 303, 1276, 304, 305, 306, 307, 308,
	309, 310, 5029, 1249, 0, 311, 1256, 312, 1255, 0,
	1266, 313, 314, 315, 316, 317, 318, 1202, 1235, 1167,
	319, 1296, 1297, 684, 0, 320, 321, 1242, 0, 1223,
	0, 322, 323, 324, 325, 326, 327, 328, 329, 0,
	0, 331, 332, 333, 330, 334, 0, 335, 0, 336,
	337, 338, 339, 340, 341, 0, 342, 343, 344, 1277,
	345, 346, 5031, 1226, 1224, 1225, 1232, 1228, 1227, 1231,
	348, 349, 350, 351, 352, 1259, 353, 355, 1253, 1252,
	1172, 358, 354, 356, 0, 359, 357, 360, 0, 361,
	362, 363, 0, 0, 364, 1244, 366, 0, 367, 368,
	369, 0, 370, 371, 372, 0, 373, 374, 1178, 375,
	376, 377, 379, 381, 378, 380, 382, 383, 384, 385,
	1267, 1268, 386, 1191, 288, 0, 0, 0, 0, 0,
	387, 388, 389, 1251, 0, 0, 0, 390, 0, 391,
	392, 393, 0, 394, 0, 1278, 395, 396, 397, 1264,
	1265, 398, 399, 400, 401, 402, 403, 404, 405, 406,
	0, 407, 1274, 0, 1201, 408, 0, 409, 410, 411,
	412, 413, 414, 1237, 1238, 1241, 502, 1280, 415, 416,
	0, 417, 418, 419, 420, 421, 0, 0, 0, 289,
	422, 423, 424, 0, 1279, 503, 425, 1246, 1247, 0,
	1207, 0, 426, 427, 1281, 1239, 1282, 428, 429, 430,
	1283, 431, 0, 0, 0, 432, 433, 434, 435, 436,
	437, 0, 438, 440, 439, 0, 441, 1275, 1284, 442,
	443, 1285, 0, 444, 445, 446, 447, 448, 449, 452,
	1230, 1229, 450, 451, 453, 454, 0, 455, 456, 458,
	461, 457, 459, 460, 462, 475, 463, 464, 465, 466,
	467, 468, 469, 470, 471, 472, 473, 474, 477, 0,
	476, 1286, 478, 479, 480, 481, 482, 489, 491, 492,
	487, 488, 490, 493, 494, 496, 484, 485, 486, 1287,
	495, 483, 1169, 290, 1288, 497, 498, 499, 500, 1192,
	1240, 501, 1254, 504, 505, 0, 0, 506, 0, 507,
	0, 0, 509, 510, 511, 0, 0, 512, 513, 706,
	1289, 514, 1290, 1269, 515, 516, 1179, 517, 518, 519,
	520, 521, 522, 523, 524, 525, 0, 526, 527, 708,
	528, 529, 530, 709, 531, 532, 533, 1270, 534, 711,
	535, 536, 0, 537, 538, 539, 0, 540, 541, 542,
	543, 544, 545, 546, 1250, 547, 548, 550, 549, 551,
	0, 552, 0, 553, 554, 555, 0, 0, 0, 0,
	0, 556, 557, 559, 0, 560, 561, 562, 563, 558,
	564, 565, 566, 567, 568, 0, 569, 570, 571, 1291,
	572, 573, 574, 575, 576, 1180, 577, 0, 578, 579,
	586, 587, 588, 580, 581, 582, 589, 590, 591, 592,
	593, 0, 595, 596, 594, 597, 598, 599, 1233, 600,
	601, 583, 584, 602, 603, 1292, 604, 605, 606, 607,
	608, 609, 610, 1248, 0, 611, 0, 612, 613, 614,
	615, 616, 618, 585, 619, 624, 625, 1295, 620, 621,
	622, 623, 1271, 627, 628, 0, 629, 630, 1166, 626,
	617, 0, 631, 632, 633, 634, 635, 636, 0, 637,
	638, 0, 639, 1260, 1261, 1262, 1263, 0, 649, 0,
	640, 641, 642, 643, 1272, 644, 1273, 1190, 645, 646,
	647, 648, 0, 5030, 651, 0, 1173, 652, 653, 655,
	657, 658, 654, 656, 659, 1234, 660, 0, 0, 661,
	662, 663, 723, 1257, 1294, 0, 665, 664, 666, 667,
	668, 726, 669, 670, 0, 0, 0, 0, 671, 672,
	727, 673, 674, 675, 1170, 0, 0, 0, 0, 0,
	1212, 1184, 1185, 1186, 1182, 1183, 1195, 0, 1165, 0,
	0, 0, 0, 0, 0, 1163, 1164, 291, 292, 294,
	293, 295, 296, 297, 298, 1196, 299, 300, 0, 1194,
	0, 0, 0, 1236, 1200, 0, 0, 301, 0, 302,
	303, 1276, 304, 305, 306, 307, 308, 309, 310, 677,
	1249, 0, 311, 1256, 312, 1255, 0, 1266, 313, 314,
	315, 316, 317, 318, 1202, 1235, 1167, 319, 1296, 1297,
	684, 0, 320, 321, 1242, 0, 1223, 0, 322, 323,
	324, 325, 326, 327, 328, 329, 0, 0, 331, 332,
	333, 330, 334, 0, 335, 0, 336, 337, 338, 339,
	340, 341, 0, 342, 343, 344, 1277, 345, 4633, 347,
	1226, 1224, 1225, 1232, 1228, 1227, 1231, 348, 349, 350,
	351, 352, 1259, 353, 355, 1253, 1252, 1172, 358, 354,
	356, 0, 359, 357, 360, 0, 361, 362, 363, 0,
	0, 364, 1244, 366, 0, 367, 368, 369, 0, 370,
	371, 372, 0, 373, 374, 1178, 375, 376, 377, 379,
	381, 378, 380, 382, 383, 384, 385, 1267, 1268, 386,
	1191, 288, 0, 0, 0, 0, 0, 387, 388, 389,
	1251, 0, 0, 0, 390, 0, 391, 392, 393, 0,
	394, 0, 1278, 395, 396, 397, 1264, 1265, 398, 399,
	400, 401, 402, 403, 404, 405, 406, 0, 407, 1274,
	0, 4634, 408, 0, 409, 410, 411, 412, 413, 414,
	1237, 1238, 1241, 502, 1280, 415, 416, 0, 417, 418,
	419, 420, 421, 0, 0, 0, 289, 422, 423, 424,
	0, 1279, 503, 425, 1246, 1247, 0, 1207, 0, 426,
	427, 1281, 1239, 1282, 428, 429, 430, 1283, 431, 0,
	0, 0, 432, 433, 434, 435, 436, 437, 0, 438,
	440, 439, 0, 441, 1275, 1284, 442, 443, 1285, 0,
	444, 445, 446, 447, 448, 449, 452, 1230, 1229, 450,
	451, 453, 454, 0, 455, 456, 458, 461, 457, 459,
	460, 462, 475, 463, 464, 465, 466, 467, 468, 469,
	470, 471, 472, 473, 474, 477, 0, 476, 1286, 478,
	479, 480, 481, 482, 489, 491, 492, 487, 488, 490,
	493, 494, 496, 484, 485, 486, 1287, 495, 483, 1169,
	290, 1288, 497, 498, 499, 500, 1192, 1240, 501, 1254,
	504, 505, 0, 0, 506, 0, 507, 0, 0, 509,
	510, 511, 0, 0, 512, 513, 706, 1289, 514, 1290,
	1269, 515, 516, 1179, 517, 518, 519, 520, 521, 522,
	523, 524, 525, 0, 526, 527, 708, 528, 529, 530,
	709, 531, 532, 533, 1270, 534, 711, 535, 536, 0,
	537, 538, 539, 0, 540, 541, 542, 543, 544, 545,
	546, 1250, 547, 548, 550, 549, 551, 0, 552, 0,
	553, 554, 555, 0, 0, 0, 0, 0, 556, 557,
	559, 0, 560, 561, 562, 563, 558, 564, 565, 566,
	567, 568, 0, 569, 570, 571, 1291, 572, 573, 574,
	4632, 576, 1180, 577, 0, 578, 579, 586, 587, 588,
	580, 581, 582, 589, 590, 591, 592, 593, 0, 595,
	596, 594, 597, 598, 599, 1233, 600, 601, 583, 584,
	602, 603, 1292, 604, 605, 606, 607, 608, 609, 610,
	1248, 0, 611, 0, 612, 613, 614, 615, 616, 618,
	585, 619, 624, 625, 1295, 620, 621, 622, 623, 1271,
	627, 628, 0, 629, 630, 1166, 626, 617, 0, 631,
	632, 633, 634, 635, 636, 0, 637, 638, 0, 639,
	1260, 1261, 1262, 1263, 0, 649, 0, 640, 641, 642,
	643, 1272, 644, 1273, 1190, 645, 646, 647, 648, 0,
	650, 651, 0, 1173, 652, 653, 655, 657, 658, 654,
	656, 659, 1234, 660, 0, 0, 661, 662, 663, 723,
	1257, 1294, 0, 665, 664, 666, 667, 668, 726, 669,
	670, 0, 0, 0, 0, 671, 672, 727, 673, 674,
	675, 1170, 0, 0, 0, 0, 0, 1212, 1184, 1185,
	1186, 3386, 3387, 1195, 0, 1165, 0, 0, 0, 0,
	0, 0, 1163, 1164, 291, 292, 294, 293, 295, 296,
	297, 298, 1196, 299, 300, 0, 1194, 0, 0, 0,
	1236, 1200, 0, 0, 301, 0, 302, 303, 1276, 304,
	305, 306, 307, 308, 309, 310, 677, 1249, 0, 311,
	1256, 312, 1255, 0, 1266, 313, 314, 315, 316, 317,
	318, 1202, 1235, 1167, 319, 1296, 1297, 684, 0, 320,
	321, 1242, 0, 1223, 0, 322, 323, 324, 325, 326,
	327, 328, 329, 0, 0, 331, 332, 333, 330, 334,
	0, 335, 0, 336, 337, 338, 339, 340, 341, 0,
	342, 343, 344, 1277, 345, 346, 347, 1226, 1224, 1225,
	1232, 1228, 1227, 1231, 348, 349, 350, 351, 352, 1259,
	353, 355, 1253, 1252, 1172, 358, 354, 356, 0, 359,
	357, 360, 0, 361, 362, 363, 0, 0, 364, 1244,
	366, 0, 367, 368, 369, 0, 370, 371, 372, 0,
	373, 374, 1178, 375, 376, 377, 379, 381, 378, 380,
	382, 383, 384, 385, 1267, 1268, 386, 1191, 288, 0,
	0, 0, 0, 0, 387, 388, 389, 1251, 0, 0,
	0, 390, 0, 391, 392, 393, 0, 394, 0, 1278,
	395, 396, 397, 1264, 1265, 398, 399, 400, 401, 402,
	403, 404, 405, 406, 0, 407, 1274, 0, 1201, 408,
	0, 409, 410, 411, 412, 413, 414, 1237, 1238, 1241,
	502, 1280, 415, 416, 0, 417, 418, 419, 420, 421,
	0, 0, 0, 289, 422, 423, 424, 0, 1279, 503,
	425, 1246, 1247, 0, 1207, 0, 426, 427, 1281, 1239,
	1282, 428, 429, 430, 1283, 431, 0, 0, 0, 432,
	433, 434, 435, 436, 437, 0, 438, 440, 439, 0,
	441, 1275, 1284, 442, 443, 1285, 0, 444, 445, 446,
	447, 448, 449, 452, 1230, 1229, 450, 451, 453, 454,
	0, 455, 456, 458, 461, 457, 459, 460, 462, 475,
	463, 464, 465, 466, 467, 468, 469, 470, 471, 472,
	473, 474, 477, 0, 476, 1286, 478, 479, 480, 481,
	482, 489, 491, 492, 487, 488, 490, 493, 494, 496,
	484, 485, 486, 1287, 495, 483, 1169, 290, 1288, 497,
	498, 499, 500, 1192, 1240, 501, 1254, 504, 505, 0,
	0, 506, 0, 507, 0, 0, 509, 510, 511, 0,
	0, 512, 513, 706, 1289, 514, 1290, 1269, 515, 516,
	1179, 517, 518, 519, 520, 521, 522, 523, 524, 525,
	0, 526, 527, 708, 528, 529, 530, 709, 531, 532,
	533, 1270, 534, 711, 535, 536, 0, 537, 538, 539,
	0, 540, 541, 542, 543, 544, 545, 546, 1250, 547,
	548, 550, 549, 551, 0, 552, 0, 553, 554, 555,
	0, 0, 0, 0, 0, 556, 557, 559, 0, 560,
	561, 562, 563, 558, 564, 565, 566, 567, 568, 0,
	569, 570, 571, 1291, 572, 573, 574, 575, 576, 1180,
	577, 0, 578, 579, 586, 587, 588, 580, 581, 582,
	589, 590, 591, 592, 593, 0, 595, 596, 594, 597,
	598, 599, 1233, 600, 601, 583, 584, 602, 603, 1292,
	604, 605, 606, 607, 608, 609, 610, 1248, 0, 611,
	0, 612, 613, 614, 615, 616, 618, 585, 619, 624,
	625, 1295, 620, 621, 622, 623, 1271, 627, 628, 0,
	629, 630, 1166, 626, 617, 0, 631, 632, 633, 634,
	635, 636, 0, 637, 638, 0, 639, 1260, 1261, 1262,
	1263, 0, 649, 0, 640, 641, 642, 643, 1272, 644,
	1273, 1190, 645, 646, 647, 648, 0, 650, 651, 0,
	1173, 652, 653, 655, 657, 658, 654, 656, 659, 1234,
	660, 0, 0, 661, 662, 663, 723, 1257, 1294, 0,
	665, 664, 666, 667, 668, 726, 669, 670, 0, 0,
	0, 0, 671, 672, 727, 673, 674, 675, 1170, 0,
	0, 0, 0, 0, 1212, 1184, 1185, 1186, 3384, 3385,
	1195, 0, 1165, 0, 0, 0, 0, 0, 0, 1163,
	1164, 291, 292, 294, 293, 295, 296, 297, 298, 1196,
	299, 300, 0, 1194, 0, 0, 0, 1236, 1200, 0,
	0, 301, 0, 302, 303, 1276, 304, 305, 306, 307,
	308, 309, 310, 677, 1249, 0, 311, 1256, 312, 1255,
	0, 1266, 313, 314, 315, 316, 317, 318, 1202, 1235,
	1167, 319, 1296, 1297, 684, 0, 320, 321, 1242, 0,
	1223, 0, 322, 323, 324, 325, 326, 327, 328, 329,
	0, 0, 331, 332, 333, 330, 334, 0, 335, 0,
	336, 337, 338, 339, 340, 341, 0, 342, 343, 344,
	1277, 345, 346, 347, 1226, 1224, 1225, 1232, 1228, 1227,
	1231, 348, 349, 350, 351, 352, 1259, 353, 355, 1253,
	1252, 1172, 358, 354, 356, 0, 359, 357, 360, 0,
	361, 362, 363, 0, 0, 364, 1244, 366, 0, 367,
	368, 369, 0, 370, 371, 372, 0, 373, 374, 1178,
	375, 376, 377, 379, 381, 378, 380, 382, 383, 384,
	385, 1267, 1268, 386, 1191, 288, 0, 0, 0, 0,
	0, 387, 388, 389, 1251, 0, 0, 0, 390, 0,
	391, 392, 393, 0, 394, 0, 1278, 395, 396, 397,
	1264, 1265, 398, 399, 400, 401, 402, 403, 404, 405,
	406, 0, 407, 1274, 0, 1201, 408, 0, 409, 410,
	411, 412, 413, 414, 1237, 1238, 1241, 502, 1280, 415,
	416, 0, 417, 418, 419, 420, 421, 0, 0, 0,
	289, 422, 423, 424, 0, 1279, 503, 425, 1246, 1247,
	0, 1207, 0, 426, 427, 1281, 1239, 1282, 428, 429,
	430, 1283, 431, 0, 0, 0, 432, 433, 434, 435,
	436, 437, 0, 438, 440, 439, 0, 441, 1275, 1284,
	442, 443, 1285, 0, 444, 445, 446, 447, 448, 449,
	452, 1230, 1229, 450, 451, 453, 454, 0, 455, 456,
	458, 461, 457, 459, 460, 462, 475, 463, 464, 465,
	466, 467, 468, 469, 470, 471, 472, 473, 474, 477,
	0, 476, 1286, 478, 479, 480, 481, 482, 489, 491,
	492, 487, 488, 490, 493, 494, 496, 484, 485, 486,
	1287, 495, 483, 1169, 290, 1288, 497, 498, 499, 500,
	1192, 1240, 501, 1254, 504, 505, 0, 0, 506, 0,
	507, 0, 0, 509, 510, 511, 0, 0, 512, 513,
	706, 1289, 514, 1290, 1269, 515, 516, 1179, 517, 518,
	519, 520, 521, 522, 523, 524, 525, 0, 526, 527,
	708, 528, 529, 530, 709, 531, 532, 533, 1270, 534,
	711, 535, 536, 0, 537, 538, 539, 0, 540, 541,
	542, 543, 544, 545, 546, 1250, 547, 548, 550, 549,
	551, 0, 552, 0, 553, 554, 555, 0, 0, 0,
	0, 0, 556, 557, 559, 0, 560, 561, 562, 563,
	558, 564, 565, 566, 567, 568, 0, 569, 570, 571,
	1291, 572, 573, 574, 575, 576, 1180, 577, 0, 578,
	579, 586, 587, 588, 580, 581, 582, 589, 590, 591,
	592, 593, 0, 595, 596, 594, 597, 598, 599, 1233,
	600, 601, 583, 584, 602, 603, 1292, 604, 605, 606,
	607, 608, 609, 610, 1248, 0, 611, 0, 612, 613,
	614, 615, 616, 618, 585, 619, 624, 625, 1295, 620,
	621, 622, 623, 1271, 627, 628, 0, 629, 630, 1166,
	626, 617, 0, 631, 632, 633, 634, 635, 636, 0,
	637, 638, 0, 639, 1260, 1261, 1262, 1263, 0, 649,
	0, 640, 641, 642, 643, 1272, 644, 1273, 1190, 645,
	646, 647, 648, 0, 650, 651, 0, 1173, 652, 653,
	655, 657, 658, 654, 656, 659, 1234, 660, 0, 0,
	661, 662, 663, 723, 1257, 1294, 0, 665, 664, 666,
	667, 668, 726, 669, 670, 0, 0, 0, 0, 671,
	672, 727, 673, 674, 675, 1170, 0, 0, 0, 0,
	0, 1212, 1184, 1185, 1186, 1182, 1183, 1195, 0, 1165,
	0, 0, 0, 0, 0, 0, 1163, 1164, 291, 292,
	294, 293, 295, 296, 297, 298, 1196, 299, 300, 0,
	1194, 0, 0, 0, 1236, 1200, 0, 0, 301, 0,
	302, 303, 1276, 304, 305, 306, 307, 308, 309, 310,
	677, 1249, 0, 311, 1256, 312, 1255, 0, 1266, 313,
	314, 315, 316, 317, 318, 1202, 1235, 1167, 319, 1296,
	1297, 684, 0, 320, 321, 1242, 0, 1223, 0, 322,
	323, 324, 325, 326, 327, 328, 329, 0, 0, 331,
	332, 333, 330, 334, 0, 335, 0, 336, 337, 338,
	339, 340, 341, 0, 342, 343, 344, 1277, 345, 346,
	347, 1226, 1224, 1225, 1232, 1228, 1227, 1231, 348, 349,
	350, 351, 352, 1259, 353, 355, 1253, 1252, 1172, 358,
	354, 356, 0, 359, 357, 360, 0, 361, 362, 363,
	0, 0, 364, 1244, 366, 0, 367, 368, 369, 0,
	370, 371, 372, 0, 373, 374, 1178, 375, 376, 377,
	379, 381, 378, 380, 382, 383, 384, 385, 1267, 1268,
	386, 1191, 288, 0, 0, 0, 0, 0, 387, 388,
	389, 1251, 0, 0, 0, 390, 0, 391, 392, 393,
	0, 394, 0, 1278, 395, 396, 397, 1264, 1265, 398,
	399, 400, 401, 402, 403, 404, 405, 406, 0, 407,
	1274, 0, 1201, 408, 0, 409, 410, 411, 412, 413,
	414, 1237, 1238, 1241, 502, 1280, 415, 416, 0, 417,
	418, 419, 420, 421, 0, 0, 0, 289, 422, 423,
	424, 0, 1279, 503, 425, 1246, 1247, 0, 1207, 0,
	426, 427, 1281, 1239, 1282, 428, 429, 430, 1283, 431,
	0, 0, 0, 432, 433, 434, 435, 436, 437, 0,
	438, 440, 439, 0, 441, 1275, 1284, 442, 443, 1285,
	0, 444, 445, 446, 447, 448, 449, 452, 1230, 1229,
	450, 451, 453, 454, 0, 455, 456, 458, 461, 457,
	459, 460, 462, 475, 463, 464, 465, 466, 467, 468,
	469, 470, 471, 472, 473, 474, 477, 0, 476, 1286,
	478, 479, 480, 481, 482, 489, 491, 492, 487, 488,
	490, 493, 494, 496, 484, 485, 486, 1287, 495, 483,
	1169, 290, 1288, 497, 498, 499, 500, 1192, 1240, 501,
	1254, 504, 505, 0, 0, 506, 0, 507, 0, 0,
	509, 510, 511, 0, 0, 512, 513, 706, 1289, 514,
	1290, 1269, 515, 516, 1179, 517, 518, 519, 520, 521,
	522, 523, 524, 525, 0, 526, 527, 708, 528, 529,
	530, 709, 531, 532, 533, 1270, 534, 711, 535, 536,
	0, 537, 538, 539, 0, 540, 541, 542, 543, 544,
	545, 546, 1250, 547, 548, 550, 549, 551, 0, 552,
	0, 553, 554, 555, 0, 0, 0, 0, 0, 556,
	557, 559, 0, 560, 561, 562, 563, 558, 564, 565,
	566, 567, 568, 0, 569, 570, 571, 1291, 572, 573,
	574, 575, 576, 1180, 577, 0, 578, 579, 586, 587,
	588, 580, 581, 582, 589, 590, 591, 592, 593, 0,
	595, 596, 594, 597, 598, 599, 1233, 600, 601, 583,
	584, 602, 603, 1292, 604, 605, 606, 607, 608, 609,
	610, 1248, 0, 611, 0, 612, 613, 614, 615, 616,
	618, 585, 619, 624, 625, 1295, 620, 621, 622, 623,
	1271, 627, 628, 0, 629, 630, 1166, 626, 617, 0,
	631, 632, 633, 634, 635, 636, 0, 637, 638, 0,
	639, 1260, 1261, 1262, 1263, 0, 649, 0, 640, 641,
	642, 643, 1272, 644, 1273, 1190, 645, 646, 647, 648,
	0, 650, 651, 0, 1173, 652, 653, 655, 657, 658,
	654, 656, 659, 1234, 660, 0, 0, 661, 662, 663,
	723, 1257, 1294, 0, 665, 664, 666, 667, 668, 726,
	669, 670, 0, 0, 0, 0, 671, 672, 727, 673,
	674, 675, 1170, 0, 0, 0, 0, 0, 1212, 1184,
	1185, 1186, 1182, 1183, 1195, 0, 1165, 0, 0, 0,
	0, 0, 0, 2626, 2627, 291, 292, 294, 293, 295,
	296, 297, 298, 1196, 299, 300, 0, 1194, 0, 0,
	0, 1236, 1200, 0, 0, 301, 0, 302, 303, 1276,
	304, 305, 306, 307, 308, 309, 310, 677, 1249, 0,
	311, 1256, 312, 1255, 0, 1266, 313, 314, 315, 316,
	317, 318, 1202, 1235, 0, 319, 1296, 1297, 684, 0,
	320, 321, 1242, 0, 1223, 0, 322, 323, 324, 325,
	326, 327, 328, 329, 0, 0, 331, 332, 333, 330,
	334, 0, 335, 0, 336, 337, 338, 339, 340, 341,
	0, 342, 343, 344, 1277, 345, 346, 347, 1226, 1224,
	1225, 1232, 1228, 1227, 1231, 348, 349, 350, 351, 352,
	1259, 353, 355, 1253, 1252, 0, 358, 354, 356, 0,
	359, 357, 360, 0, 361, 362, 363, 0, 0, 364,
	1244, 366, 0, 367, 368, 369, 0, 370, 371, 372,
	0, 373, 374, 1178, 375, 376, 377, 379, 381, 378,
	380, 382, 383, 384, 385, 1267, 1268, 386, 1191, 288,
	0, 0, 0, 0, 0, 387, 388, 389, 1251, 0,
	0, 0, 390, 0, 391, 392, 393, 0, 394, 0,
	1278, 395, 396, 397, 1264, 1265, 398, 399, 400, 401,
	402, 403, 404, 405, 406, 0, 407, 1274, 0, 1201,
	408, 0, 409, 410, 411, 412, 413, 414, 1237, 1238,
	1241, 502, 1280, 415, 416, 0, 417, 418, 419, 420,
	421, 0, 0, 0, 289, 422, 423, 424, 0, 1279,
	503, 425, 1246, 1247, 0, 1207, 0, 426, 427, 1281,
	1239, 1282, 428, 429, 430, 1283, 431, 0, 0, 0,
	432, 433, 434, 435, 436, 437, 0, 438, 440, 439,
	0, 441, 1275, 1284, 442, 443, 1285, 0, 444, 445,
	446, 447, 448, 449, 452, 1230, 1229, 450, 451, 453,
	454, 0, 455, 456, 458, 461, 457, 459, 460, 462,
	475, 463, 464, 465, 466, 467, 468, 469, 470, 471,
	472, 473, 474, 477, 0, 476, 1286, 478, 479, 480,
	481, 482, 489, 491, 492, 487, 488, 490, 493, 494,
	496, 484, 485, 486, 1287, 495, 483, 0, 290, 1288,
	497, 498, 499, 500, 1192, 1240, 501, 1254, 504, 505,
	0, 0, 506, 0, 507, 0, 0, 509, 510, 511,
	0, 0, 512, 513, 706, 1289, 514, 1290, 1269, 515,
	516, 1179, 517, 518, 519, 520, 521, 522, 523, 524,
	525, 0, 526, 527, 708, 528, 529, 530, 709, 531,
	532, 533, 1270, 534, 711, 535, 536, 0, 537, 538,
	539, 0, 540, 541, 542, 543, 544, 545, 546, 1250,
	547, 548, 550, 549, 551, 0, 552, 0, 553, 554,
	555, 0, 0, 0, 0, 0, 556, 557, 559, 0,
	560, 561, 562, 563, 558, 564, 565, 566, 567, 568,
	0, 569, 570, 571, 1291, 572, 573, 574, 575, 576,
	1180, 577, 0, 578, 579, 586, 587, 588, 580, 581,
	582, 589, 590, 591, 592, 593, 0, 595, 596, 594,
	597, 598, 599, 1233, 600, 601, 583, 584, 602, 603,
	1292, 604, 605, 606, 607, 608, 609, 610, 1248, 0,
	611, 0, 612, 613, 614, 615, 616, 618, 585, 619,
	624, 625, 1295, 620, 621, 622, 623, 1271, 627, 628,
	0, 629, 630, 0, 626, 617, 0, 631, 632, 633,
	634, 635, 636, 0, 637, 638, 0, 639, 1260, 1261,
	1262, 1263, 0, 649, 0, 640, 641, 642, 643, 1272,
	644, 1273, 1190, 645, 646, 647, 648, 0, 650, 651,
	0, 0, 652, 653, 655, 657, 658, 654, 656, 659,
	1234, 660, 0, 0, 661, 662, 663, 723, 1257, 1294,
	0, 665, 664, 666, 667, 668, 726, 669, 670, 0,
	0, 0, 0, 671, 672, 727, 673, 674, 675, 0,
	0, 0, 0, 0, 0, 1212, 1184, 1185, 1186, 1182,
	1183, 1195, 0, 2885, 0, 0, 0, 0, 0, 0,
	2883, 2884, 291, 292, 294, 293, 295, 296, 297, 298,
	1196, 299, 300, 0, 1194, 0, 0, 0, 1236, 1200,
	0, 0, 301, 0, 302, 303, 1276, 304, 305, 306,
	307, 308, 309, 310, 677, 1249, 0, 311, 1256, 312,
	1255, 0, 1266, 313, 314, 315, 316, 317, 318, 1202,
	1235, 0, 319, 1296, 1297, 684, 0, 320, 321, 1242,
	0, 1223, 0, 322, 323, 324, 325, 326, 327, 328,
	329, 0, 0, 331, 332, 333, 330, 334, 0, 335,
	0, 336, 337, 338, 339, 340, 341, 0, 342, 343,
	344, 1277, 345, 346, 347, 1226, 1224, 1225, 1232, 1228,
	1227, 1231, 348, 349, 350, 351, 352, 1259, 353, 355,
	1253, 1252, 0, 358, 354, 356, 0, 359, 357, 360,
	0, 361, 362, 363, 0, 0, 364, 1244, 366, 0,
	367, 368, 369, 0, 370, 371, 372, 0, 373, 374,
	1178, 375, 376, 377, 379, 381, 378, 380, 382, 383,
	384, 385, 1267, 1268, 386, 1191, 288, 0, 0, 0,
	0, 0, 387, 388, 389, 1251, 0, 0, 0, 390,
	0, 391, 392, 393, 0, 394, 0, 1278, 395, 396,
	397, 1264, 1265, 398, 399, 400, 401, 402, 403, 404,
	405, 406, 0, 407, 1274, 0, 1201, 408, 0, 409,
	410, 411, 412, 413, 414, 1237, 1238, 1241, 502, 1280,
	415, 416, 0, 417, 418, 419, 420, 421, 0, 0,
	0, 289, 422, 423, 424, 0, 1279, 503, 425, 1246,
	1247, 0, 1207, 0, 426, 427, 1281, 1239, 1282, 428,
	429, 430, 1283, 431, 0, 0, 0, 432, 433, 434,
	435, 436, 437, 0, 438, 440, 439, 0, 441, 1275,
	1284, 442, 443, 1285, 0, 444, 445, 446, 447, 448,
	449, 452, 1230, 1229, 450, 451, 453, 454, 0, 455,
	456, 458, 461, 457, 459, 460, 462, 475, 463, 464,
	465, 466, 467, 468, 469, 470, 471, 472, 473, 474,
	477, 0, 476, 1286, 478, 479, 480, 481, 482, 489,
	491, 492, 487, 488, 490, 493, 494, 496, 484, 485,
	486, 1287, 495, 483, 0, 290, 1288, 497, 498, 499,
	500, 1192, 1240, 501, 1254, 504, 505, 0, 0, 506,
	0, 507, 0, 0, 509, 510, 511, 0, 0, 512,
	513, 706, 1289, 514, 1290, 1269, 515, 516, 508, 517,
	518, 519, 520, 521, 522, 523, 524, 525, 0, 526,
	527, 708, 528, 529, 530, 709, 531, 532, 533, 1270,
	534, 711, 535, 536, 0, 537, 538, 539, 0, 540,
	541, 542, 543, 544, 545, 546, 1250, 547, 548, 550,
	549, 551, 0, 552, 0, 553, 554, 555, 0, 0,
	0, 0, 0, 556, 557, 559, 0, 560, 561, 562,
	563, 558, 564, 565, 566, 567, 568, 0, 569, 570,
	571, 1291, 572, 573, 574, 575, 576, 3379, 3380, 0,
	578, 579, 586, 587, 588, 580, 581, 582, 589, 590,
	591, 592, 593, 0, 595, 596, 594, 597, 598, 599,
	1233, 600, 601, 583, 584, 602, 603, 1292, 604, 605,
	606, 607, 608, 609, 610, 1248, 0, 611, 0, 612,
	613, 614, 615, 616, 618, 585, 619, 624, 625, 1295,
	620, 621, 622, 623, 1271, 627, 628, 0, 629, 630,
	0, 626, 617, 0, 631, 632, 633, 634, 635, 636,
	0, 637, 638, 0, 639, 1260, 1261, 1262, 1263, 0,
	649, 0, 640, 641, 642, 643, 1272, 644, 1273, 1190,
	645, 646, 647, 648, 0, 650, 651, 0, 0, 652,
	653, 655, 657, 658, 654, 656, 659, 1234, 660, 0,
	0, 661, 662, 663, 723, 1257, 1294, 0, 665, 664,
	666, 667, 668, 726, 669, 670, 0, 0, 0, 0,
	671, 672, 727, 673, 674, 675, 0, 0, 0, 0,
	0, 0, 1212, 1184, 1185, 1186, 1182, 1183, 1195, 0,
	0, 0, 0, 0, 0, 0, 0, 2254, 2255, 291,
	292, 294, 293, 295, 296, 297, 298, 1196, 299, 300,
	0, 1194, 0, 0, 0, 1236, 1200, 0, 0, 301,
	0, 302, 303, 1276, 304, 305, 306, 307, 308, 309,
	310, 0, 1249, 0, 311, 1256, 312, 1255, 0, 1266,
	313, 314, 315, 316, 317, 318, 1202, 1235, 1167, 319,
	1296, 1297, 684, 0, 320, 321, 1242, 0, 1223, 0,
	322, 323, 324, 325, 326, 327, 328, 329, 0, 0,
	331, 332, 333, 330, 334, 0, 335, 0, 336, 337,
	338, 339, 340, 341, 0, 342, 343, 344, 1277, 345,
	346, 5031, 1226, 1224, 1225, 1232, 1228, 1227, 1231, 348,
	349, 350, 351, 352, 1259, 353, 355, 1253, 1252, 1172,
	358, 354, 356, 0, 359, 357, 360, 0, 361, 362,
	363, 0, 0, 364, 1244, 366, 0, 367, 368, 369,
	0, 370, 371, 372, 0, 373, 374, 1178, 375, 376,
	377, 379, 381, 378, 380, 382, 383, 384, 385, 1267,
	1268, 386, 1191, 288, 0, 0, 0, 0, 0, 387,
	388, 389, 1251, 0, 0, 0, 390, 0, 391, 392,
	393, 0, 394, 0, 1278, 395, 396, 397, 1264, 1265,
	398, 399, 400, 401, 402, 403, 404, 405, 406, 0,
	407, 1274, 0, 1201, 408, 0, 409, 410, 411, 412,
	413, 414, 1237, 1238, 1241, 502, 0, 415, 416, 0,
	417, 418, 419, 420, 421, 0, 0, 0, 289, 422,
	423, 424, 0, 1279, 503, 425, 1246, 1247, 0, 1207,
	0, 426, 427, 0, 1239, 0, 428, 429, 430, 1283,
	431, 0, 0, 0, 432, 433, 434, 435, 436, 437,
	0, 438, 440, 439, 0, 441, 1275, 1284, 442, 443,
	0, 0, 444, 445, 446, 447, 448, 449, 452, 1230,
	1229, 450, 451, 453, 454, 0, 455, 456, 458, 461,
	457, 459, 460, 462, 475, 463, 464, 465, 466, 467,
	468, 469, 470, 471, 472, 473, 474, 477, 0, 476,
	1286, 478, 479, 480, 481, 482, 489, 491, 492, 487,
	488, 490, 493, 494, 496, 484, 485, 486, 1287, 495,
	483, 1169, 290, 0, 497, 498, 499, 500, 1192, 1240,
	501, 1254, 504, 505, 0, 0, 506, 0, 507, 0,
	0, 509, 510, 511, 0, 0, 512, 513, 706, 1289,
	514, 1290, 1269, 515, 516, 1179, 517, 518, 519, 520,
	521, 522, 523, 524, 525, 0, 526, 527, 708, 528,
	529, 530, 709, 531, 532, 533, 1270, 534, 711, 535,
	536, 0, 537, 538, 539, 0, 540, 541, 542, 543,
	544, 545, 546, 1250, 547, 548, 550, 549, 551, 0,
	552, 0, 553, 554, 555, 0, 0, 0, 0, 0,
	556, 557, 559, 0, 560, 561, 562, 563, 558, 564,
	565, 566, 567, 568, 0, 569, 570, 571, 1291, 572,
	573, 574, 575, 576, 1180, 577, 0, 578, 579, 586,
	587, 588, 580, 581, 582, 589, 590, 591, 592, 593,
	0, 595, 596, 594, 597, 598, 599, 1233, 600, 601,
	583, 584, 602, 603, 0, 604, 605, 606, 607, 608,
	609, 610, 1248, 0, 611, 0, 612, 613, 614, 615,
	616, 618, 585, 619, 624, 625, 1295, 620, 621, 622,
	623, 1271, 627, 628, 0, 629, 630, 1166, 626, 617,
	0, 631, 632, 633, 634, 635, 636, 0, 637, 638,
	0, 639, 1260, 1261, 1262, 1263, 0, 649, 0, 640,
	641, 642, 643, 1272, 644, 1273, 1190, 645, 646, 647,
	648, 0, 5030, 651, 0, 1173, 652, 653, 655, 657,
	658, 654, 656, 659, 1234, 660, 0, 0, 661, 662,
	663, 723, 1257, 1294, 0, 665, 664, 666, 667, 668,
	726, 669, 670, 0, 0, 0, 0, 671, 672, 727,
	673, 674, 675, 0, 0, 0, 0, 2904, 0, 1212,
	1184, 1185, 1186, 1182, 1183, 1195, 0, 0, 0, 0,
	0, 0, 0, 0, 1163, 1164, 291, 292, 294, 293,
	295, 296, 297, 298, 1196, 299, 300, 0, 1194, 0,
	0, 0, 1236, 1200, 0, 0, 301, 0, 302, 303,
	1276, 304, 305, 306, 307, 308, 309, 310, 677, 1249,
	0, 311, 1256, 312, 1255, 0, 1266, 313, 314, 315,
	316, 317, 318, 0, 1235, 0, 319, 1296, 1297, 684,
	0, 320, 321, 1242, 0, 1223, 0, 322, 323, 324,
	325, 326, 327, 328, 329, 0, 0, 331, 332, 333,
	330, 334, 0, 335, 0, 336, 337, 338, 339, 340,
	341, 0, 342, 343, 344, 1277, 345, 346, 347, 1226,
	1224, 1225, 1232, 1228, 1227, 1231, 348, 349, 350, 351,
	352, 1259, 353, 355, 1253, 1252, 0, 358, 354, 356,
	0, 359, 357, 360, 0, 361, 362, 363, 0, 0,
	364, 1244, 366, 0, 367, 368, 369, 0, 370, 371,
	372, 0, 373, 374, 688, 375, 376, 377, 379, 381,
	378, 380, 382, 383, 384, 385, 1267, 1268, 386, 1191,
	288, 0, 0, 0, 0, 0, 387, 388, 389, 1251,
	0, 0, 0, 390, 0, 391, 392, 393, 0, 394,
	0, 1278, 395, 396, 397, 1264, 1265, 398, 399, 400,
	401, 402, 403, 404, 405, 406, 0, 407, 1274, 0,
	1201, 408, 0, 409, 410, 411, 412, 413, 414, 1237,
	1238, 1241, 502, 1280, 415, 416, 0, 417, 418, 419,
	420, 421, 0, 0, 0, 289, 422, 423, 424, 0,
	1279, 503, 425, 1246, 1247, 0, 1207, 0, 426, 427,
	1281, 1239, 1282, 428, 429, 430, 1283, 431, 0, 0,
	0, 432, 433, 434, 435, 436, 437, 0, 438, 440,
	439, 0, 441, 1275, 1284, 442, 443, 1285, 0, 444,
	445, 446, 447, 448, 449, 452, 1230, 1229, 450, 451,
	453, 454, 0, 455, 456, 458, 461, 457, 459, 460,
	462, 475, 463, 464, 465, 466, 467, 468, 469, 470,
	471, 472, 473, 474, 477, 0, 476, 1286, 478, 479,
	480, 481, 482, 489, 491, 492, 487, 488, 490, 493,
	494, 496, 484, 485, 486, 1287, 495, 483, 0, 290,
	1288, 497, 498, 499, 500, 1192, 1240, 501, 1254, 504,
	505, 0, 0, 506, 0, 507, 0, 0, 509, 510,
	511, 0, 0, 512, 513, 706, 1289, 514, 1290, 1269,
	515, 516, 508, 517, 518, 519, 520, 521, 522, 523,
	524, 525, 0, 526, 527, 708, 528, 529, 530, 709,
	531, 532, 533, 1270, 534, 711, 535, 536, 0, 537,
	538, 539, 0, 540, 541, 542, 543, 544, 545, 546,
	1250, 547, 548, 550, 549, 551, 0, 552, 0, 553,
	554, 555, 0, 0, 0, 0, 0, 556, 557, 559,
	0, 560, 561, 562, 563, 558, 564, 565, 566, 567,
	568, 0, 569, 570, 571, 1291, 572, 573, 574, 575,
	576, 1180, 577, 0, 578, 579, 586, 587, 588, 580,
	581, 582, 589, 590, 591, 592, 593, 0, 595, 596,
	594, 597, 598, 599, 1233, 600, 601, 583, 584, 602,
	603, 1292, 604, 605, 606, 607, 608, 609, 610, 1248,
	0, 611, 0, 612, 613, 614, 615, 616, 618, 585,
	619, 624, 625, 1295, 620, 621, 622, 623, 1271, 627,
	628, 0, 629, 630, 0, 626, 617, 0, 631, 632,
	633, 634, 635, 636, 0, 637, 638, 0, 639, 1260,
	1261, 1262, 1263, 0, 649, 0, 640, 641, 642, 643,
	1272, 644, 1273, 1190, 645, 646, 647, 648, 0, 650,
	651, 0, 0, 652, 653, 655, 657, 658, 654, 656,
	659, 1234, 660, 0, 0, 661, 662, 663, 723, 1257,
	1294, 0, 665, 664, 666, 667, 668, 726, 669, 670,
	0, 0, 0, 0, 671, 672, 727, 673, 674, 675,
	0, 1619, 0, 1212, 1184, 1185, 1186, 1182, 1183, 1195,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	291, 292, 294, 293, 295, 296, 297, 298, 0, 299,
	300, 1196, 0, 0, 0, 1194, 1236, 1200, 0, 0,
	301, 0, 302, 303, 1276, 304, 305, 306, 307, 308,
	309, 310, 677, 1249, 0, 311, 1256, 312, 1255, 0,
	1266, 313, 314, 315, 316, 317, 318, 0, 1235, 0,
	319, 1296, 1297, 684, 0, 320, 321, 1242, 0, 1223,
	0, 322, 323, 324, 325, 326, 327, 328, 329, 0,
	0, 331, 332, 333, 330, 334, 0, 335, 0, 336,
	337, 338, 339, 340, 341, 0, 342, 343, 344, 1277,
	345, 346, 347, 1226, 1224, 1225, 1232, 1228, 1227, 1231,
	348, 349, 350, 351, 352, 1259, 353, 355, 1253, 1252,
	0, 358, 354, 356, 0, 359, 357, 360, 0, 361,
	362, 363, 0, 0, 364, 1244, 366, 0, 367, 368,
	369, 0, 370, 371, 372, 0, 373, 374, 688, 375,
	376, 377, 379, 381, 378, 380, 382, 383, 384, 385,
	1267, 1268, 386, 1191, 288, 0, 0, 0, 0, 0,
	387, 388, 389, 1251, 0, 0, 0, 390, 0, 391,
	392, 393, 0, 394, 0, 1278, 395, 396, 397, 1264,
	1265, 398, 399, 400, 401, 402, 403, 404, 405, 406,
	0, 407, 1274, 0, 1201, 408, 0, 409, 410, 411,
	412, 413, 414, 1237, 1238, 1241, 502, 1280, 415, 416,
	0, 417, 418, 419, 420, 421, 0, 0, 0, 289,
	422, 423, 424, 0, 1279, 503, 425, 1246, 1247, 0,
	1207, 0, 426, 427, 1281, 1239, 1282, 428, 429, 430,
	1283, 431, 0, 0, 0, 432, 433, 434, 435, 436,
	437, 0, 438, 440, 439, 0, 441, 1275, 1284, 442,
	443, 1285, 0, 444, 445, 446, 447, 448, 449, 452,
	1230, 1229, 450, 451, 453, 454, 0, 455, 456, 458,
	461, 457, 459, 460, 462, 475, 463, 464, 465, 466,
	467, 468, 469, 470, 471, 472, 473, 474, 477, 0,
	476, 1286, 478, 479, 480, 481, 482, 489, 491, 492,
	487, 488, 490, 493, 494, 496, 484, 485, 486, 1287,
	495, 483, 0, 290, 1288, 497, 498, 499, 500, 1192,
	1240, 501, 1254, 504, 505, 0, 0, 506, 0, 507,
	0, 0, 509, 510, 511, 0, 0, 512, 513, 706,
	1289, 514, 1290, 1269, 515, 516, 508, 517, 518, 519,
	520, 521, 522, 523, 524, 525, 0, 526, 527, 708,
	528, 529, 530, 709, 531, 532, 533, 1270, 534, 711,
	535, 536, 0, 537, 538, 539, 0, 540, 541, 542,
	543, 544, 545, 546, 1250, 547, 548, 550, 549, 551,
	0, 552, 0, 553, 554, 555, 0, 0, 0, 0,
	0, 556, 557, 559, 0, 560, 561, 562, 563, 558,
	564, 565, 566, 567, 568, 0, 569, 570, 571, 1291,
	572, 573, 574, 575, 576, 1180, 577, 0, 578, 579,
	586, 587, 588, 580, 581, 582, 589, 590, 591, 592,
	593, 0, 595, 596, 594, 597, 598, 599, 1233, 600,
	601, 583, 584, 602, 603, 1292, 604, 605, 606, 607,
	608, 609, 610, 1248, 0, 611, 0, 612, 613, 614,
	615, 616, 618, 585, 619, 624, 625, 1295, 620, 621,
	622, 623, 1271, 627, 628, 0, 629, 630, 0, 626,
	617, 0, 631, 632, 633, 634, 635, 636, 0, 637,
	638, 0, 639, 1260, 1261, 1262, 1263, 0, 649, 0,
	640, 641, 642, 643, 1272, 644, 1273, 1190, 645, 646,
	647, 648, 0, 650, 651, 0, 0, 652, 653, 655,
	657, 658, 654, 656, 659, 1234, 660, 0, 0, 661,
	662, 663, 723, 1257, 1294, 0, 665, 664, 666, 667,
	668, 726, 669, 670, 0, 0, 0, 0, 671, 672,
	727, 673, 674, 675, 0, 1156, 0, 1335, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 291, 292, 294, 293, 295, 296,
	297, 298, 0, 299, 300, 1196, 0, 0, 0, 1194,
	1236, 0, 0, 0, 301, 0, 302, 303, 1276, 304,
	305, 306, 307, 308, 309, 310, 677, 678, 0, 311,
	679, 312, 680, 0, 681, 313, 314, 315, 316, 317,
	318, 0, 1235, 0, 319, 682, 683, 684, 0, 320,
	321, 1242, 0, 1223, 0, 322, 323, 324, 325, 326,
	327, 328, 329, 0, 0, 331, 332, 333, 330, 334,
	0, 335, 0, 336, 337, 338, 339, 340, 341, 0,
	342, 343, 344, 1277, 345, 346, 347, 1226, 1224, 1225,
	1232, 1228, 1227, 1231, 348, 349, 350, 351, 352, 0,
	353, 355, 686, 687, 0, 358, 354, 356, 0, 359,
	357, 360, 0, 361, 362, 363, 0, 0, 364, 365,
	366, 0, 367, 368, 369, 0, 370, 371, 372, 0,
	373, 374, 688, 375, 376, 377, 379, 381, 378, 380,
	382, 383, 384, 385, 1267, 1268, 386, 0, 288, 0,
	0, 0, 0, 0, 387, 388, 389, 691, 0, 0,
	0, 390, 0, 391, 392, 393, 0, 394, 0, 1278,
	395, 396, 397, 692, 693, 398, 399, 400, 401, 402,
	403, 404, 405, 406, 0, 407, 1274, 0, 695, 408,
	0, 409, 410, 411, 412, 413, 414, 1237, 1238, 1241,
	502, 1280, 415, 416, 0, 417, 418, 419, 420, 421,
	0, 0, 0, 289, 422, 423, 424, 0, 1279, 503,
	425, 699, 700, 0, 701, 0, 426, 427, 1281, 1239,
	1282, 428, 429, 430, 1283, 431, 0, 0, 0, 432,
	433, 434, 435, 436, 437, 1321, 438, 440, 439, 0,
	441, 1275, 1284, 442, 443, 1285, 0, 444, 445, 446,
	447, 448, 449, 452, 1230, 1229, 450, 451, 453, 454,
	0, 455, 456, 458, 461, 457, 459, 460, 462, 475,
	463, 464, 465, 466, 467, 468, 469, 470, 471, 472,
	473, 474, 477, 0, 476, 1286, 478, 479, 480, 481,
	482, 489, 491, 492, 487, 488, 490, 493, 494, 496,
	484, 485, 486, 1287, 495, 483, 0, 290, 1288, 497,
	498, 499, 500, 0, 1240, 501, 705, 504, 505, 0,
	0, 506, 0, 507, 0, 1327, 509, 510, 511, 0,
	0, 512, 513, 706, 1289, 514, 1290, 1269, 515, 516,
	508, 517, 518, 519, 520, 521, 522, 523, 524, 525,
	0, 526, 527, 708, 528, 529, 530, 709, 531, 532,
	533, 1270, 534, 711, 535, 536, 0, 537, 538, 539,
	0, 540, 541, 542, 543, 544, 545, 546, 712, 547,
	548, 550, 549, 551, 0, 552, 0, 553, 554, 555,
	0, 0, 0, 0, 0, 556, 557, 559, 0, 560,
	561, 562, 563, 558, 564, 565, 566, 567, 568, 0,
	569, 570, 571, 1291, 572, 573, 574, 575, 576, 713,
	1329, 0, 578, 579, 586, 587, 588, 580, 581, 582,
	589, 590, 591, 592, 593, 247, 595, 596, 594, 597,
	598, 599, 1233, 600, 601, 583, 584, 602, 603, 1292,
	604, 605, 606, 607, 608, 609, 610, 714, 0, 611,
	0, 612, 613, 614, 615, 616, 618, 585, 619, 624,
	625, 715, 620, 621, 622, 623, 1271, 627, 628, 0,
	629, 630, 0, 626, 617, 249, 631, 632, 633, 634,
	635, 636, 0, 637, 638, 0, 639, 717, 718, 719,
	720, 0, 649, 0, 640, 641, 642, 643, 1272, 644,
	1273, 0, 645, 646, 647, 648, 0, 650, 651, 0,
	0, 652, 653, 655, 657, 658, 654, 656, 659, 1234,
	660, 0, 0, 661, 662, 663, 1737, 724, 725, 0,
	665, 664, 666, 667, 668, 726, 669, 670, 0, 0,
	0, 241, 671, 672, 727, 673, 674, 675, 1335, 0,
	242, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 291, 292, 294, 293, 295,
	296, 297, 298, 0, 299, 300, 0, 1325, 0, 2096,
	0, 1236, 0, 0, 0, 301, 0, 302, 303, 1276,
	304, 305, 306, 307, 308, 309, 310, 677, 678, 0,
	311, 679, 312, 680, 0, 681, 313, 314, 315, 316,
	317, 318, 0, 1235, 0, 319, 682, 683, 684, 0,
	320, 321, 1242, 0, 1223, 0, 322, 323, 324, 325,
	326, 327, 328, 329, 0, 0, 331, 332, 333, 330,
	334, 0, 335, 0, 336, 337, 338, 339, 340, 341,
	0, 342, 343, 344, 1277, 345, 346, 347, 1226, 1224,
	1225, 1232, 1228, 1227, 1231, 348, 349, 350, 351, 352,
	0, 353, 355, 686, 687, 0, 358, 354, 356, 0,
	359, 357, 360, 0, 361, 362, 363, 0, 0, 364,
	365, 366, 0, 367, 368, 369, 0, 370, 371, 372,
	0, 373, 374, 688, 375, 376, 377, 379, 381, 378,
	380, 382, 383, 384, 385, 1267, 1268, 386, 0, 288,
	0, 0, 0, 0, 0, 387, 388, 389, 691, 0,
	0, 0, 390, 0, 391, 392, 393, 0, 394, 0,
	1278, 395, 396, 397, 692, 693, 398, 399, 400, 401,
	402, 403, 404, 405, 406, 0, 407, 1274, 0, 695,
	408, 0, 409, 410, 411, 412, 413, 414, 1237, 1238,
	1241, 502, 1280, 415, 416, 0, 417, 418, 419, 420,
	421, 0, 0, 0, 289, 422, 423, 424, 0, 1279,
	503, 425, 699, 700, 0, 701, 0, 426, 427, 1281,
	1239, 1282, 428, 429, 430, 1283, 431, 0, 0, 0,
	432, 433, 434, 435, 436, 437, 1321, 438, 440, 439,
	0, 441, 1275, 1284, 442, 443, 1285, 0, 444, 445,
	446, 447, 448, 449, 452, 1230, 1229, 450, 451, 453,
	454, 0, 455, 456, 458, 461, 457, 459, 460, 462,
	475, 463, 464, 465, 466, 467, 468, 469, 470, 471,
	472, 473, 474, 477, 0, 476, 1286, 478, 479, 480,
	481, 482, 489, 491, 492, 487, 488, 490, 493, 494,
	496, 484, 485, 486, 1287, 495, 483, 0, 290, 1288,
	497, 498, 499, 500, 0, 1240, 501, 705, 504, 505,
	0, 0, 506, 0, 507, 0, 1327, 509, 510, 511,
	0, 0, 512, 513, 706, 1289, 514, 1290, 1269, 515,
	516, 508, 517, 518, 519, 520, 521, 522, 523, 524,
	525, 0, 526, 527, 708, 528, 529, 530, 709, 531,
	532, 533, 1270, 534, 711, 535, 536, 0, 537, 538,
	539, 0, 540, 541, 542, 543, 544, 545, 546, 712,
	547, 548, 550, 549, 551, 0, 552, 0, 553, 554,
	555, 0, 0, 0, 0, 0, 556, 557, 559, 0,
	560, 561, 562, 563, 558, 564, 565, 566, 567, 568,
	0, 569, 570, 571, 1291, 572, 573, 574, 575, 576,
	713, 1329, 0, 578, 579, 586, 587, 588, 580, 581,
	582, 589, 590, 591, 592, 593, 247, 595, 596, 594,
	597, 598, 599, 1233, 600, 601, 583, 584, 602, 603,
	1292, 604, 605, 606, 607, 608, 609, 610, 714, 0,
	611, 0, 612, 613, 614, 615, 616, 618, 585, 619,
	624, 625, 715, 620, 621, 622, 623, 1271, 627, 628,
	0, 629, 630, 0, 626, 617, 249, 631, 632, 633,
	634, 635, 636, 0, 637, 638, 0, 639, 717, 718,
	719, 720, 0, 649, 0, 640, 641, 642, 643, 1272,
	644, 1273, 0, 645, 646, 647, 648, 0, 650, 651,
	0, 0, 652, 653, 655, 657, 658, 654, 656, 659,
	1234, 660, 0, 0, 661, 662, 663, 1737, 724, 725,
	0, 665, 664, 666, 667, 668, 726, 669, 670, 0,
	0, 0, 241, 671, 672, 727, 673, 674, 675, 0,
	0, 242, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3543, 0, 1335, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1325, 0,
	2096, 291, 292, 294, 293, 295, 296, 297, 298, 0,
	299, 300, 0, 0, 0, 0, 0, 1236, 0, 0,
	0, 301, 0, 302, 303, 1276, 304, 305, 306, 307,
	308, 309, 310, 677, 678, 0, 311, 679, 312, 680,
	0, 681, 313, 314, 315, 316, 317, 318, 0, 1235,
	0, 319, 682, 683, 684, 0, 320, 321, 1242, 0,
	1223, 0, 322, 323, 324, 325, 326, 327, 328, 329,
	0, 0, 331, 332, 333, 330, 334, 0, 335, 0,
	336, 337, 338, 339, 340, 341, 0, 342, 343, 344,
	1277, 345, 346, 347, 1226, 1224, 1225, 1232, 1228, 1227,
	1231, 348, 349, 350, 351, 352, 0, 353, 355, 686,
	687, 0, 358, 354, 356, 0, 359, 357, 360, 0,
	361, 362, 363, 0, 0, 364, 365, 366, 0, 367,
	368, 369, 0, 370, 371, 372, 0, 373, 374, 688,
	375, 376, 377, 379, 381, 378, 380, 382, 383, 384,
	385, 1267, 1268, 386, 0, 288, 0, 0, 0, 0,
	0, 387, 388, 389, 691, 0, 0, 0, 390, 0,
	391, 392, 393, 0, 394, 0, 1278, 395, 396, 397,
	692, 693, 398, 399, 400, 401, 402, 403, 404, 405,
	406, 0, 407, 1274, 0, 695, 408, 0, 409, 410,
	411, 412, 413, 414, 1237, 1238, 1241, 502, 1280, 415,
	416, 0, 417, 418, 419, 420, 421, 0, 0, 0,
	289, 422, 423, 424, 0, 1279, 503, 425, 699, 700,
	0, 701, 0, 426, 427, 1281, 1239, 1282, 428, 429,
	430, 1283, 431, 0, 0, 0, 432, 433, 434, 435,
	436, 437, 1321, 438, 440, 439, 0, 441, 1275, 1284,
	442, 443, 1285, 0, 444, 445, 446, 447, 448, 449,
	452, 1230, 1229, 450, 451, 453, 454, 0, 455, 456,
	458, 461, 457, 459, 460, 462, 475, 463, 464, 465,
	466, 467, 468, 469, 470, 471, 472, 473, 474, 477,
	0, 476, 1286, 478, 479, 480, 481, 482, 489, 491,
	492, 487, 488, 490, 493, 494, 496, 484, 485, 486,
	1287, 495, 483, 0, 290, 1288, 497, 498, 499, 500,
	0, 1240, 501, 705, 504, 505, 0, 0, 506, 0,
	507, 0, 1327, 509, 510, 511, 0, 0, 512, 513,
	706, 1289, 514, 1290, 1269, 515, 516, 508, 517, 518,
	519, 520, 521, 522, 523, 524, 525, 0, 526, 527,
	708, 528, 529, 530, 709, 531, 532, 533, 1270, 534,
	711, 535, 536, 0, 537, 538, 539, 0, 540, 541,
	542, 543, 544, 545, 546, 712, 547, 548, 550, 549,
	551, 0, 552, 0, 553, 554, 555, 0, 0, 0,
	0, 0, 556, 557, 559, 0, 560, 561, 562, 563,
	558, 564, 565, 566, 567, 568, 0, 569, 570, 571,
	1291, 572, 573, 574, 575, 576, 713, 1329, 0, 578,
	579, 586, 587, 588, 580, 581, 582, 589, 590, 591,
	592, 593, 0, 595, 596, 594, 597, 598, 599, 1233,
	600, 601, 583, 584, 602, 603, 1292, 604, 605, 606,
	607, 608, 609, 610, 714, 0, 611, 0, 612, 613,
	614, 615, 616, 618, 585, 619, 624, 625, 715, 620,
	621, 622, 623, 1271, 627, 628, 0, 629, 630, 0,
	626, 617, 0, 631, 632, 633, 634, 635, 636, 0,
	637, 638, 0, 639, 717, 718, 719, 720, 0, 649,
	0, 640, 641, 642, 643, 1272, 644, 1273, 0, 645,
	646, 647, 648, 0, 650, 651, 0, 0, 652, 653,
	655, 657, 658, 654, 656, 659, 1234, 660, 0, 0,
	661, 662, 663, 723, 724, 725, 0, 665, 664, 666,
	667, 668, 726, 669, 670, 0, 1317, 0, 1335, 671,
	672, 727, 673, 674, 675, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 291, 292, 294, 293, 295,
	296, 297, 298, 0, 299, 300, 0, 0, 0, 0,
	0, 1236, 0, 0, 1325, 301, 1323, 302, 303, 1276,
	304, 305, 306, 307, 308, 309, 310, 677, 678, 0,
	311, 679, 312, 680, 0, 681, 313, 314, 315, 316,
	317, 318, 0, 1235, 0, 319, 682, 683, 684, 0,
	320, 321, 1242, 0, 1223, 0, 322, 323, 324, 325,
	326, 327, 328, 329, 0, 0, 331, 332, 333, 330,
	334, 0, 335, 0, 336, 337, 338, 339, 340, 341,
	0, 342, 343, 344, 1277, 345, 346, 347, 1226, 1224,
	1225, 1232, 1228, 1227, 1231, 348, 349, 350, 351, 352,
	0, 353, 355, 686, 687, 0, 358, 354, 356, 0,
	359, 357, 360, 0, 361, 362, 363, 0, 0, 364,
	365, 366, 0, 367, 368, 369, 0, 370, 371, 372,
	0, 373, 374, 688, 375, 376, 377, 379, 381, 378,
	380, 382, 383, 384, 385, 1267, 1268, 386, 0, 288,
	0, 0, 0, 0, 0, 387, 388, 389, 691, 0,
	0, 0, 390, 0, 391, 392, 393, 0, 394, 0,
	1278, 395, 396, 397, 692, 693, 398, 399, 400, 401,
	402, 403, 404, 405, 406, 0, 407, 1274, 0, 695,
	408, 0, 409, 410, 411, 412, 413, 414, 1237, 1238,
	1241, 502, 1280, 415, 416, 0, 417, 418, 419, 420,
	421, 0, 0, 0, 289, 422, 423, 424, 0, 1279,
	503, 425, 699, 700, 0, 701, 0, 426, 427, 1281,
	1239, 1282, 428, 429, 430, 1283, 431, 0, 0, 0,
	432, 433, 434, 435, 436, 437, 1321, 438, 440, 439,
	0, 441, 1275, 1284, 442, 443, 1285, 0, 444, 445,
	446, 447, 448, 449, 452, 1230, 1229, 450, 451, 453,
	454, 0, 455, 456, 458, 461, 457, 459, 460, 462,
	475, 463, 464, 465, 466, 467, 468, 469, 470, 471,
	472, 473, 474, 477, 0, 476, 1286, 478, 479, 480,
	481, 482, 489, 491, 492, 487, 488, 490, 493, 494,
	496, 484, 485, 486, 1287, 495, 483, 0, 290, 1288,
	497, 498, 499, 500, 0, 1240, 501, 705, 504, 505,
	0, 0, 506, 0, 507, 0, 1327, 509, 510, 511,
	0, 0, 512, 513, 706, 1289, 514, 1290, 1269, 515,
	516, 508, 517, 518, 519, 520, 521, 522, 523, 524,
	525, 0, 526, 527, 708, 528, 529, 530, 709, 531,
	532, 533, 1270, 534, 711, 535, 536, 0, 537, 538,
	539, 0, 540, 541, 542, 543, 544, 545, 546, 712,
	547, 548, 550, 549, 551, 0, 552, 0, 553, 554,
	555, 0, 0, 0, 0, 0, 556, 557, 559, 0,
	560, 561, 562, 563, 558, 564, 565, 566, 567, 568,
	0, 569, 570, 571, 1291, 572, 573, 574, 575, 576,
	713, 1329, 0, 578, 579, 586, 587, 588, 580, 581,
	582, 589, 590, 591, 592, 593, 0, 595, 596, 594,
	597, 598, 599, 1233, 600, 601, 583, 584, 602, 603,
	1292, 604, 605, 606, 607, 608, 609, 610, 714, 0,
	611, 0, 612, 613, 614, 615, 616, 618, 585, 619,
	624, 625, 715, 620, 621, 622, 623, 1271, 627, 628,
	0, 629, 630, 0, 626, 617, 0, 631, 632, 633,
	634, 635, 636, 0, 637, 638, 0, 639, 717, 718,
	719, 720, 0, 649, 0, 640, 641, 642, 643, 1272,
	644, 1273, 0, 645, 646, 647, 648, 0, 650, 651,
	0, 0, 652, 653, 655, 657, 658, 654, 656, 659,
	1234, 660, 0, 0, 661, 662, 663, 723, 724, 725,
	0, 665, 664, 666, 667, 668, 726, 669, 670, 0,
	0, 0, 1335, 671, 672, 727, 673, 674, 675, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 291,
	292, 294, 293, 295, 296, 297, 298, 0, 299, 300,
	0, 0, 0, 0, 0, 1236, 0, 0, 1325, 301,
	1323, 302, 303, 1276, 304, 305, 306, 307, 308, 309,
	310, 677, 678, 0, 311, 679, 312, 680, 0, 681,
	313, 314, 315, 316, 317, 318, 0, 1235, 0, 319,
	682, 683, 684, 0, 320, 321, 1242, 0, 1223, 0,
	322, 323, 324, 325, 326, 327, 328, 329, 0, 0,
	331, 332, 333, 330, 334, 0, 335, 0, 336, 337,
	338, 339, 340, 341, 0, 342, 343, 344, 1277, 345,
	346, 347, 1226, 1224, 1225, 1232, 1228, 1227, 1231, 348,
	349, 350, 351, 352, 0, 353, 355, 686, 687, 0,
	358, 354, 356, 0, 359, 357, 360, 0, 361, 362,
	363, 0, 0, 364, 365, 366, 0, 367, 368, 369,
	0, 370, 371, 372, 0, 373, 374, 688, 375, 376,
	377, 379, 381, 378, 380, 382, 383, 384, 385, 1267,
	1268, 386, 0, 288, 0, 0, 0, 0, 0, 387,
	388, 389, 691, 0, 0, 0, 390, 0, 391, 392,
	393, 0, 394, 0, 1278, 395, 396, 397, 692, 693,
	398, 399, 400, 401, 402, 403, 404, 405, 406, 0,
	407, 1274, 0, 695, 408, 0, 409, 410, 411, 412,
	413, 414, 1237, 1238, 1241, 502, 1280, 415, 416, 0,
	417, 418, 419, 420, 421, 0, 0, 0, 289, 422,
	423, 424, 0, 1279, 503, 425, 699, 700, 0, 701,
	0, 426, 427, 1281, 1239, 1282, 428, 429, 430, 1283,
	431, 0, 0, 0, 432, 433, 434, 435, 436, 437,
	1321, 438, 440, 439, 0, 441, 1275, 1284, 442, 443,
	1285, 0, 444, 445, 446, 447, 448, 449, 452, 1230,
	1229, 450, 451, 453, 454, 0, 455, 456, 458, 461,
	457, 459, 460, 462, 475, 463, 464, 465, 466, 467,
	468, 469, 470, 471, 472, 473, 474, 477, 0, 476,
	1286, 478, 479, 480, 481, 482, 489, 491, 492, 487,
	488, 490, 493, 494, 496, 484, 485, 486, 1287, 495,
	483, 0, 290, 1288, 497, 498, 499, 500, 0, 1240,
	501, 705, 504, 505, 0, 0, 506, 0, 507, 0,
	1327, 509, 510, 511, 0, 0, 512, 513, 706, 1289,
	514, 1290, 1269, 515, 516, 508, 517, 518, 519, 520,
	521, 522, 523, 524, 525, 0, 526, 527, 708, 528,
	529, 530, 709, 531, 532, 533, 1270, 534, 711, 535,
	536, 0, 537, 538, 539, 0, 540, 541, 542, 543,
	544, 545, 546, 712, 547, 548, 550, 549, 551, 0,
	552, 0, 553, 554, 555, 0, 0, 0, 0, 0,
	556, 557, 559, 0, 560, 561, 562, 563, 558, 564,
	565, 566, 567, 568, 0, 569, 570, 571, 1291, 572,
	573, 574, 575, 576, 713, 1329, 0, 578, 579, 586,
	587, 588, 580, 581, 582, 589, 590, 591, 592, 593,
	0, 595, 596, 594, 597, 598, 599, 1233, 600, 601,
	583, 584, 602, 603, 1292, 604, 605, 606, 607, 608,
	609, 610, 714, 0, 611, 0, 612, 613, 614, 615,
	616, 618, 585, 619, 624, 625, 715, 620, 621, 622,
	623, 1271, 627, 628, 0, 629, 630, 0, 626, 617,
	0, 631, 632, 633, 634, 635, 636, 0, 637, 638,
	0, 639, 717, 718, 719, 720, 0, 649, 0, 640,
	641, 642, 643, 1272, 644, 1273, 0, 645, 646, 647,
	648, 0, 650, 651, 0, 0, 652, 653, 655, 657,
	658, 654, 656, 659, 1234, 660, 0, 0, 661, 662,
	663, 723, 724, 725, 0, 665, 664, 666, 667, 668,
	726, 669, 670, 0, 0, 0, 1335, 671, 672, 727,
	673, 674, 675, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 291, 292, 294, 293, 295, 296, 297,
	298, 0, 299, 300, 0, 0, 0, 0, 0, 1236,
	0, 0, 1325, 301, 1323, 302, 303, 1276, 304, 305,
	306, 307, 308, 309, 310, 677, 678, 0, 311, 679,
	312, 680, 0, 681, 313, 314, 315, 316, 317, 318,
	0, 1235, 0, 319, 682, 683, 684, 0, 320, 321,
	1242, 0, 1223, 0, 322, 323, 324, 325, 326, 327,
	328, 329, 0, 0, 331, 332, 333, 330, 334, 0,
	335, 0, 336, 337, 338, 339, 340, 341, 0, 342,
	343, 344, 1277, 345, 346, 347, 1226, 1224, 1225, 1232,
	1228, 1227, 1231, 348, 349, 350, 351, 352, 0, 353,
	355, 686, 687, 0, 358, 354, 356, 0, 359, 357,
	360, 0, 361, 362, 363, 0, 0, 364, 365, 366,
	0, 367, 368, 369, 0, 370, 371, 372, 0, 373,
	374, 688, 375, 376, 377, 379, 381, 378, 380, 382,
	383, 384, 385, 1267, 1268, 386, 0, 288, 0, 0,
	0, 0, 0, 387, 388, 389, 691, 0, 0, 0,
	390, 0, 391, 392, 393, 0, 394, 0, 1278, 395,
	396, 397, 692, 693, 398, 399, 400, 401, 402, 403,
	404, 405, 406, 0, 407, 1274, 0, 695, 408, 0,
	409, 410, 411, 412, 413, 414, 1237, 1238, 1241, 502,
	1280, 415, 416, 0, 417, 418, 419, 420, 421, 0,
	0, 0, 289, 422, 423, 424, 0, 1279, 503, 425,
	699, 700, 0, 701, 0, 426, 427, 1281, 1239, 1282,
	428, 429, 430, 1283, 431, 0, 0, 0, 432, 433,
	434, 435, 436, 437, 0, 438, 440, 439, 0, 441,
	1275, 1284, 442, 443, 1285, 0, 444, 445, 446, 447,
	448, 449, 452, 1230, 1229, 450, 451, 453, 454, 0,
	455, 456, 458, 461, 457, 459, 460, 462, 475, 463,
	464, 465, 466, 467, 468, 469, 470, 471, 472, 473,
	474, 477, 0, 476, 1286, 478, 479, 480, 481, 482,
	489, 491, 492, 487, 488, 490, 493, 494, 496, 484,
	485, 486, 1287, 495, 483, 0, 290, 1288, 497, 498,
	499, 500, 0, 1240, 501, 705, 504, 505, 0, 0,
	506, 0, 507, 0, 0, 509, 510, 511, 0, 0,
	512, 513, 706, 1289, 514, 1290, 1269, 515, 516, 508,
	517, 518, 519, 520, 521, 522, 523, 524, 525, 0,
	526, 527, 708, 528, 529, 530, 709, 531, 532, 533,
	1270, 534, 711, 535, 536, 0, 537, 538, 539, 0,
	540, 541, 542, 543, 544, 545, 546, 712, 547, 548,
	550, 549, 551, 0, 552, 0, 553, 554, 555, 0,
	0, 0, 0, 0, 556, 557, 559, 0, 560, 561,
	562, 563, 558, 564, 565, 566, 567, 568, 0, 569,
	570, 571, 1291, 572, 573, 574, 575, 576, 713, 577,
	0, 578, 579, 586, 587, 588, 580, 581, 582, 589,
	590, 591, 592, 593, 0, 595, 596, 594, 597, 598,
	599, 1233, 600, 601, 583, 584, 602, 603, 1292, 604,
	605, 606, 607, 608, 609, 610, 714, 0, 611, 0,
	612, 613, 614, 615, 616, 618, 585, 619, 624, 625,
	715, 620, 621, 622, 623, 1271, 627, 628, 0, 629,
	630, 0, 626, 617, 0, 631, 632, 633, 634, 635,
	636, 0, 637, 638, 0, 639, 717, 718, 719, 720,
	0, 649, 0, 640, 641, 642, 643, 1272, 644, 1273,
	0, 645, 646, 647, 648, 0, 650, 651, 0, 0,
	652, 653, 655, 657, 658, 654, 656, 659, 1234, 660,
	0, 0, 661, 662, 663, 723, 724, 725, 0, 665,
	664, 666, 667, 668, 726, 669, 670, 0, 0, 0,
	1335, 671, 672, 727, 673, 674, 675, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 291, 292, 294,
	293, 295, 296, 297, 298, 0, 299, 300, 0, 0,
	0, 0, 0, 1236, 0, 0, 0, 301, 4447, 302,
	303, 1276, 304, 305, 306, 307, 308, 309, 310, 677,
	678, 0, 311, 679, 312, 680, 0, 681, 313, 314,
	315, 316, 317, 318, 0, 1235, 0, 319, 682, 683,
	684, 0, 320, 321, 1242, 0, 1223, 0, 322, 323,
	324, 325, 326, 327, 328, 329, 0, 0, 331, 332,
	333, 330, 334, 0, 335, 0, 336, 337, 338, 339,
	340, 341, 0, 342, 343, 344, 1277, 345, 346, 347,
	1226, 1224, 1225, 1232, 1228, 1227, 1231, 348, 349, 350,
	351, 352, 0, 353, 355, 686, 687, 0, 358, 354,
	356, 0, 359, 357, 360, 0, 361, 362, 363, 0,
	0, 364, 365, 366, 0, 367, 368, 369, 0, 370,
	371, 372, 0, 373, 374, 688, 375, 376, 377, 379,
	381, 378, 380, 382, 383, 384, 385, 1267, 1268, 386,
	0, 288, 0, 0, 0, 0, 0, 387, 388, 389,
	691, 0, 0, 0, 390, 0, 391, 392, 393, 0,
	394, 0, 1278, 395, 396, 397, 692, 693, 398, 399,
	400, 401, 402, 403, 404, 405, 406, 0, 407, 1274,
	0, 695, 408, 0, 409, 410, 411, 412, 413, 414,
	1237, 1238, 1241, 502, 1280, 415, 416, 0, 417, 418,
	419, 420, 421, 0, 0, 0, 289, 422, 423, 424,
	0, 1279, 503, 425, 699, 700, 0, 701, 0, 426,
	427, 1281, 1239, 1282, 428, 429, 430, 1283, 431, 0,
	0, 0, 432, 433, 434, 435, 436, 437, 0, 438,
	440, 439, 0, 441, 1275, 1284, 442, 443, 1285, 0,
	444, 445, 446, 447, 448, 449, 452, 1230, 1229, 450,
	451, 453, 454, 0, 455, 456, 458, 461, 457, 459,
	460, 462, 475, 463, 464, 465, 466, 467, 468, 469,
	470, 471, 472, 473, 474, 477, 0, 476, 1286, 478,
	479, 480, 481, 482, 489, 491, 492, 487, 488, 490,
	493, 494, 496, 484, 485, 486, 1287, 495, 483, 0,
	290, 1288, 497, 498, 499, 500, 0, 1240, 501, 705,
	504, 505, 0, 0, 506, 0, 507, 0, 0, 509,
	510, 511, 0, 0, 512, 513, 706, 1289, 514, 1290,
	1269, 515, 516, 508, 517, 518, 519, 520, 521, 522,
	523, 524, 525, 0, 526, 527, 708, 528, 529, 530,
	709, 531, 532, 533, 1270, 534, 711, 535, 536, 0,
	537, 538, 539, 0, 540, 541, 542, 543, 544, 545,
	546, 712, 547, 548, 550, 549, 551, 0, 552, 0,
	553, 554, 555, 0, 0, 0, 0, 0, 556, 557,
	559, 0, 560, 561, 562, 563, 558, 564, 565, 566,
	567, 568, 0, 569, 570, 571, 1291, 572, 573, 574,
	575, 576, 713, 1329, 0, 578, 579, 586, 587, 588,
	580, 581, 582, 589, 590, 591, 592, 593, 0, 595,
	596, 594, 597, 598, 599, 1233, 600, 601, 583, 584,
	602, 603, 1292, 604, 605, 606, 607, 608, 609, 610,
	714, 0, 611, 0, 612, 613, 614, 615, 616, 618,
	585, 619, 624, 625, 715, 620, 621, 622, 623, 1271,
	627, 628, 0, 629, 630, 0, 626, 617, 0, 631,
	632, 633, 634, 635, 636, 0, 637, 638, 0, 639,
	717, 718, 719, 720, 0, 649, 0, 640, 641, 642,
	643, 1272, 644, 1273, 0, 645, 646, 647, 648, 0,
	650, 651, 0, 0, 652, 653, 655, 657, 658, 654,
	656, 659, 1234, 660, 0, 0, 661, 662, 663, 723,
	724, 725, 0, 665, 664, 666, 667, 668, 726, 669,
	670, 285, 0, 0, 0, 671, 672, 727, 673, 674,
	675, 2730, 2731, 2732, 2749, 2750, 2751, 0, 291, 292,
	294, 293, 295, 296, 297, 298, 0, 299, 300, 0,
	0, 0, 2752, 0, 676, 0, 0, 0, 301, 0,
	302, 303, 1992, 304, 305, 306, 307, 308, 309, 310,
	677, 678, 0, 311, 679, 312, 680, 0, 681, 313,
	314, 315, 316, 317, 318, 0, 0, 1977, 319, 682,
	683, 684, 0, 320, 321, 685, 0, 0, 0, 322,
	323, 324, 325, 326, 327, 328, 329, 2742, 0, 331,
	332, 333, 330, 334, 0, 335, 2738, 336, 337, 338,
	339, 340, 341, 0, 342, 343, 344, 0, 345, 346,
	347, 0, 0, 0, 0, 0, 0, 0, 348, 349,
	350, 351, 352, 0, 353, 355, 686, 687, 0, 358,
	354, 356, 0, 359, 357, 360, 0, 361, 362, 363,
	0, 0, 364, 365, 366, 0, 367, 368, 369, 0,
	370, 371, 372, 0, 373, 374, 688, 375, 376, 377,
	379, 381, 378, 380, 382, 383, 384, 385, 689, 690,
	386, 0, 0, 0, 2743, 2744, 2745, 2746, 387, 388,
	389, 691, 0, 0, 2737, 390, 0, 391, 392, 393,
	0, 394, 0, 0, 395, 396, 397, 692, 693, 398,
	399, 400, 401, 402, 403, 404, 405, 406, 0, 407,
	694, 0, 695, 408, 0, 409, 410, 411, 412, 413,
	414, 696, 697, 698, 502, 0, 415, 416, 0, 417,
	418, 419, 420, 421, 0, 0, 0, 0, 422, 423,
	424, 0, 0, 503, 425, 699, 700, 0, 701, 0,
	426, 427, 0, 702, 0, 428, 429, 430, 0, 431,
	0, 2747, 2748, 432, 433, 434, 435, 436, 437, 0,
	438, 440, 439, 0, 441, 703, 0, 442, 443, 0,
	0, 444, 445, 446, 447, 448, 449, 452, 0, 0,
	450, 451, 453, 454, 2740, 455, 456, 458, 461, 457,
	459, 460, 462, 475, 463, 464, 465, 466, 467, 468,
	469, 470, 471, 472, 473, 474, 477, 0, 476, 0,
	478, 479, 480, 481, 482, 489, 491, 492, 487, 488,
	490, 493, 494, 496, 484, 485, 486, 0, 495, 483,
	0, 0, 0, 497, 498, 499, 500, 0, 704, 501,
	705, 504, 505, 0, 0, 506, 0, 507, 0, 0,
	509, 510, 511, 0, 0, 512, 513, 706, 0, 514,
	0, 707, 515, 516, 508, 517, 518, 519, 520, 521,
	522, 523, 524, 525, 0, 526, 527, 708, 528, 529,
	530, 709, 531, 532, 533, 710, 534, 711, 535, 536,
	0, 537, 538, 539, 0, 540, 541, 542, 543, 544,
	545, 546, 712, 547, 548, 550, 549, 551, 0, 552,
	0, 553, 554, 555, 0, 0, 0, 0, 0, 556,
	557, 559, 0, 560, 561, 562, 563, 558, 564, 565,
	566, 567, 568, 0, 569, 570, 571, 0, 572, 573,
	574, 575, 576, 713, 577, 2741, 578, 579, 586, 587,
	588, 580, 581, 582, 589, 590, 591, 592, 593, 0,
	595, 596, 594, 597, 598, 599, 0, 600, 601, 583,
	584, 602, 603, 0, 604, 605, 606, 607, 608, 609,
	610, 714, 0, 611, 0, 612, 613, 614, 615, 616,
	618, 585, 619, 624, 625, 715, 620, 621, 622, 623,
	716, 627, 628, 0, 629, 630, 1976, 626, 617, 0,
	631, 632, 633, 634, 635, 636, 0, 637, 638, 0,
	639, 717, 718, 719, 720, 0, 649, 0, 640, 641,
	642, 643, 721, 644, 722, 0, 645, 646, 647, 648,
	0, 650, 651, 0, 0, 652, 653, 655, 657, 658,
	654, 656, 659, 0, 660, 0, 0, 661, 662, 663,
	723, 724, 725, 0, 665, 664, 666, 667, 668, 726,
	669, 670, 0, 0, 0, 0, 671, 672, 727, 673,
	674, 675, 0, 0, 0, 0, 0, 0, 0, 0,
	1156, 0, 1614, 2727, 2728, 2729, 2753, 2739, 2733, 0,
	2735, 2736, 2734, 2721, 2722, 2723, 2724, 2725, 2726, 291,
	292, 294, 293, 295, 296, 297, 298, 0, 299, 300,
	0, 0, 0, 0, 0, 676, 0, 0, 0, 301,
	0, 302, 303, 1276, 304, 305, 306, 307, 308, 309,
	310, 677, 678, 0, 311, 679, 312, 680, 0, 681,
	313, 314, 315, 316, 317, 318, 0, 0, 0, 319,
	682, 683, 684, 0, 320, 321, 685, 0, 1578, 0,
	322, 323, 324, 325, 326, 327, 328, 329, 0, 0,
	331, 332, 333, 330, 334, 0, 335, 0, 336, 337,
	338, 339, 340, 341, 0, 342, 343, 344, 1277, 345,
	346, 347, 0, 0, 0, 0, 0, 0, 0, 348,
	349, 350, 351, 352, 0, 353, 355, 686, 687, 0,
	358, 354, 356, 0, 359, 357, 360, 0, 361, 362,
	363, 0, 0, 364, 365, 366, 0, 367, 368, 369,
	0, 370, 371, 372, 0, 373, 374, 688, 375, 376,
	377, 379, 381, 378, 380, 382, 383, 384, 385, 689,
	690, 386, 0, 288, 0, 0, 0, 0, 0, 387,
	388, 389, 691, 0, 0, 0, 390, 0, 391, 392,
	393, 0, 394, 0, 1278, 395, 396, 397, 692, 693,
	398, 399, 400, 401, 402, 403, 404, 405, 406, 0,
	407, 694, 0, 695, 408, 0, 409, 410, 411, 412,
	413, 414, 696, 697, 698, 502, 1280, 415, 416, 0,
	417, 418, 419, 420, 421, 0, 0, 0, 0, 422,
	423, 424, 0, 1279, 503, 425, 699, 700, 0, 701,
	0, 426, 427, 1281, 702, 1282, 428, 429, 430, 1283,
	431, 0, 0, 0, 432, 433, 434, 435, 436, 437,
	0, 438, 440, 439, 0, 441, 703, 1284, 442, 443,
	1285, 0, 444, 445, 446, 447, 448, 449, 452, 0,
	0, 450, 451, 453, 454, 0, 455, 456, 458, 461,
	457, 459, 460, 462, 475, 463, 464, 465, 466, 467,
	468, 469, 470, 471, 472, 473, 474, 477, 0, 476,
	1286, 478, 479, 480, 481, 482, 489, 491, 492, 487,
	488, 490, 493, 494, 496, 484, 485, 486, 1287, 495,
	483, 0, 0, 1288, 497, 498, 499, 500, 0, 704,
	501, 705, 504, 505, 0, 0, 506, 0, 507, 0,
	0, 509, 510, 511, 0, 0, 512, 513, 706, 1289,
	514, 1290, 707, 515, 516, 508, 517, 518, 519, 520,
	521, 522, 523, 524, 525, 0, 526, 527, 708, 528,
	529, 530, 709, 531, 532, 533, 710, 534, 711, 535,
	536, 0, 537, 538, 539, 0, 540, 541, 542, 543,
	544, 545, 546, 712, 547, 548, 550, 549, 551, 0,
	552, 0, 553, 554, 555, 0, 0, 0, 0, 0,
	556, 557, 559, 0, 560, 561, 562, 563, 558, 564,
	565, 566, 567, 568, 0, 569, 570, 571, 1291, 572,
	573, 574, 575, 576, 713, 577, 0, 578, 579, 586,
	587, 588, 580, 581, 582, 589, 590, 591, 592, 593,
	247, 595, 596, 594, 597, 598, 599, 0, 600, 601,
	583, 584, 602, 603, 1292, 604, 605, 606, 607, 608,
	609, 610, 714, 0, 611, 0, 612, 613, 614, 615,
	616, 618, 585, 619, 624, 625, 715, 620, 621, 622,
	623, 716, 627, 628, 0, 629, 630, 0, 626, 617,
	249, 631, 632, 633, 634, 635, 636, 0, 637, 638,
	0, 639, 717, 718, 719, 720, 0, 649, 0, 640,
	641, 642, 643, 721, 644, 722, 0, 645, 646, 647,
	648, 0, 650, 651, 0, 0, 652, 653, 655, 657,
	658, 654, 656, 659, 0, 660, 0, 0, 661, 662,
	663, 1737, 724, 725, 0, 665, 664, 666, 667, 668,
	726, 669, 670, 0, 0, 0, 241, 671, 672, 727,
	673, 674, 675, 0, 1734, 242, 1614, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 291, 292, 294, 293, 295, 296, 297,
	298, 0, 299, 300, 201, 0, 0, 0, 0, 676,
	0, 0, 0, 301, 0, 302, 303, 1276, 304, 305,
	306, 307, 308, 309, 310, 677, 678, 0, 311, 679,
	312, 680, 0, 681, 313, 314, 315, 316, 317, 318,
	0, 0, 0, 319, 682, 683, 684, 0, 320, 321,
	685, 0, 1578, 0, 322, 323, 324, 325, 326, 327,
	328, 329, 0, 0, 331, 332, 333, 330, 334, 0,
	335, 0, 336, 337, 338, 339, 340, 341, 0, 342,
	343, 344, 1277, 345, 346, 347, 0, 0, 0, 0,
	0, 0, 0, 348, 349, 350, 351, 352, 0, 353,
	355, 686, 687, 0, 358, 354, 356, 0, 359, 357,
	360, 0, 361, 362, 363, 0, 0, 364, 365, 366,
	0, 367, 368, 369, 0, 370, 371, 372, 0, 373,
	374, 688, 375, 376, 377, 379, 381, 378, 380, 382,
	383, 384, 385, 689, 690, 386, 0, 288, 0, 0,
	0, 0, 0, 387, 388, 389, 691, 0, 0, 0,
	390, 0, 391, 392, 393, 0, 394, 0, 1278, 395,
	396, 397, 692, 693, 398, 399, 400, 401, 402, 403,
	404, 405, 406, 0, 407, 694, 0, 695, 408, 0,
	409, 410, 411, 412, 413, 414, 696, 697, 698, 502,
	1280, 415, 416, 0, 417, 418, 419, 420, 421, 0,
	0, 0, 0, 422, 423, 424, 0, 1279, 503, 425,
	699, 700, 0, 701, 0, 426, 427, 1281, 702, 1282,
	428, 429, 430, 1283, 431, 0, 0, 0, 432, 433,
	434, 435, 436, 437, 0, 438, 440, 439, 0, 441,
	703, 1284, 442, 443, 1285, 0, 444, 445, 446, 447,
	448, 449, 452, 0, 0, 450, 451, 453, 454, 0,
	455, 456, 458, 461, 457, 459, 460, 462, 475, 463,
	464, 465, 466, 467, 468, 469, 470, 471, 472, 473,
	474, 477, 0, 476, 1286, 478, 479, 480, 481, 482,
	489, 491, 492, 487, 488, 490, 493, 494, 496, 484,
	485, 486, 1287, 495, 483, 0, 0, 1288, 497, 498,
	499, 500, 0, 704, 501, 705, 504, 505, 0, 0,
	506, 0, 507, 0, 0, 509, 510, 511, 0, 0,
	512, 513, 706, 1289, 514, 1290, 707, 515, 516, 508,
	517, 518, 519, 520, 521, 522, 523, 524, 525, 0,
	526, 527, 708, 528, 529, 530, 709, 531, 532, 533,
	710, 534, 711, 535, 536, 0, 537, 538, 539, 0,
	540, 541, 542, 543, 544, 545, 546, 712, 547, 548,
	550, 549, 551, 0, 552, 0, 553, 554, 555, 0,
	0, 0, 0, 0, 556, 557, 559, 0, 560, 561,
	562, 563, 558, 564, 565, 566, 567, 568, 0, 569,
	570, 571, 1291, 572, 573, 574, 575, 576, 713, 577,
	0, 578, 579, 586, 587, 588, 580, 581, 582, 589,
	590, 591, 592, 593, 247, 595, 596, 594, 597, 598,
	599, 0, 600, 601, 583, 584, 602, 603, 1292, 604,
	605, 606, 607, 608, 609, 610, 714, 0, 611, 0,
	612, 613, 614, 615, 616, 618, 585, 619, 624, 625,
	715, 620, 621, 622, 623, 716, 627, 628, 0, 629,
	630, 0, 626, 617, 249, 631, 632, 633, 634, 635,
	636, 0, 637, 638, 0, 639, 717, 718, 719, 720,
	0, 649, 0, 640, 641, 642, 643, 721, 644, 722,
	0, 645, 646, 647, 648, 0, 650, 651, 0, 0,
	652, 653, 655, 657, 658, 654, 656, 659, 0, 660,
	0, 0, 661, 662, 663, 1737, 724, 725, 0, 665,
	664, 666, 667, 668, 726, 669, 670, 0, 0, 0,
	241, 671, 672, 727, 673, 674, 675, 1614, 1613, 242,
	0, 0, 0, 1611, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 291, 292, 294, 293, 295, 296,
	297, 298, 0, 299, 300, 0, 0, 0, 201, 0,
	676, 0, 0, 0, 301, 0, 302, 303, 1276, 304,
	305, 306, 307, 308, 309, 310, 677, 678, 0, 311,
	679, 312, 680, 0, 681, 313, 314, 315, 316, 317,
	318, 0, 0, 0, 319, 682, 683, 684, 0, 320,
	321, 685, 0, 1578, 0, 322, 323, 324, 325, 326,
	327, 328, 329, 0, 0, 331, 332, 333, 330, 334,
	0, 335, 0, 336, 337, 338, 339, 340, 341, 0,
	342, 343, 344, 1277, 345, 346, 347, 0, 0, 0,
	0, 0, 0, 0, 348, 349, 350, 351, 352, 0,
	353, 355, 686, 687, 0, 358, 354, 356, 0, 359,
	357, 360, 0, 361, 362, 363, 0, 0, 364, 365,
	366, 0, 367, 368, 369, 0, 370, 371, 372, 0,
	373, 374, 688, 375, 376, 377, 379, 381, 378, 380,
	382, 383, 384, 385, 689, 690, 386, 0, 288, 0,
	0, 0, 0, 0, 387, 388, 389, 691, 0, 0,
	0, 390, 0, 391, 392, 393, 0, 394, 0, 1278,
	395, 396, 397, 692, 693, 398, 399, 400, 401, 402,
	403, 404, 405, 406, 0, 407, 694, 0, 695, 408,
	0, 409, 410, 411, 412, 413, 414, 696, 697, 698,
	502, 1280, 415, 416, 0, 417, 418, 419, 420, 421,
	0, 0, 0, 0, 422, 423, 424, 0, 1279, 503,
	425, 699, 700, 0, 701, 0, 426, 427, 1281, 702,
	1282, 428, 429, 430, 1283, 431, 0, 0, 0, 432,
	433, 434, 435, 436, 437, 0, 438, 440, 439, 0,
	441, 703, 1284, 442, 443, 1285, 0, 444, 445, 446,
	447, 448, 449, 452, 0, 0, 450, 451, 453, 454,
	0, 455, 456, 458, 461, 457, 459, 460, 462, 475,
	463, 464, 465, 466, 467, 468, 469, 470, 471, 472,
	473, 474, 477, 0, 476, 1286, 478, 479, 480, 481,
	482, 489, 491, 492, 487, 488, 490, 493, 494, 496,
	484, 485, 486, 1287, 495, 483, 0, 0, 1288, 497,
	498, 499, 500, 0, 704, 501, 705, 504, 505, 0,
	0, 506, 0, 507, 0, 0, 509, 510, 511, 0,
	0, 512, 513, 706, 1289, 514, 1290, 707, 515, 516,
	508, 517, 518, 519, 520, 521, 522, 523, 524, 525,
	0, 526, 527, 708, 528, 529, 530, 709, 531, 532,
	533, 710, 534, 711, 535, 536, 0, 537, 538, 539,
	0, 540, 541, 542, 543, 544, 545, 546, 712, 547,
	548, 550, 549, 551, 0, 552, 0, 553, 554, 555,
	0, 0, 0, 0, 0, 556, 557, 559, 0, 560,
	561, 562, 563, 558, 564, 565, 566, 567, 568, 0,
	569, 570, 571, 1291, 572, 573, 574, 575, 576, 713,
	577, 0, 578, 579, 586, 587, 588, 580, 581, 582,
	589, 590, 591, 592, 593, 0, 595, 596, 594, 597,
	598, 599, 0, 600, 601, 583, 584, 602, 603, 1292,
	604, 605, 606, 607, 608, 609, 610, 714, 0, 611,
	0, 612, 613, 614, 615, 616, 618, 585, 619, 624,
	625, 715, 620, 621, 622, 623, 716, 627, 628, 0,
	629, 630, 0, 626, 617, 0, 631, 632, 633, 634,
	635, 636, 0, 637, 638, 0, 639, 717, 718, 719,
	720, 0, 649, 0, 640, 641, 642, 643, 721, 644,
	722, 0, 645, 646, 647, 648, 0, 650, 651, 0,
	0, 652, 653, 655, 657, 658, 654, 656, 659, 0,
	660, 0, 0, 661, 662, 663, 723, 724, 725, 0,
	665, 664, 666, 667, 668, 726, 669, 670, 0, 0,
	0, 0, 671, 672, 727, 673, 674, 675, 1614, 1613,
	0, 0, 0, 0, 1611, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 291, 292, 294, 293, 295,
	296, 297, 298, 0, 299, 300, 0, 0, 0, 1761,
	0, 676, 0, 0, 0, 301, 0, 302, 303, 1276,
	304, 305, 306, 307, 308, 309, 310, 677, 678, 0,
	311, 679, 312, 680, 0, 681, 313, 314, 315, 316,
	317, 318, 0, 0, 0, 319, 682, 683, 684, 0,
	320, 321, 685, 0, 1578, 0, 322, 323, 324, 325,
	326, 327, 328, 329, 0, 0, 331, 332, 333, 330,
	334, 0, 335, 0, 336, 337, 338, 339, 340, 341,
	0, 342, 343, 344, 1277, 345, 346, 347, 0, 0,
	0, 0, 0, 0, 0, 348, 349, 350, 351, 352,
	0, 353, 355, 686, 687, 0, 358, 354, 356, 0,
	359, 357, 360, 0, 361, 362, 363, 0, 0, 364,
	365, 366, 0, 367, 368, 369, 0, 370, 371, 372,
	0, 373, 374, 688, 375, 376, 377, 379, 381, 378,
	380, 382, 383, 384, 385, 689, 690, 386, 0, 288,
	0, 0, 0, 0, 0, 387, 388, 389, 691, 0,
	0, 0, 390, 0, 391, 392, 393, 0, 394, 0,
	1278, 395, 396, 397, 692, 693, 398, 399, 400, 401,
	402, 403, 404, 405, 406, 0, 407, 694, 0, 695,
	408, 0, 409, 410, 411, 412, 413, 414, 696, 697,
	698, 502, 1280, 415, 416, 0, 417, 418, 419, 420,
	421, 0, 0, 0, 0, 422, 423, 424, 0, 1279,
	503, 425, 699, 700, 0, 701, 0, 426, 427, 1281,
	702, 1282, 428, 429, 430, 1283, 431, 0, 0, 0,
	432, 433, 434, 435, 436, 437, 0, 438, 440, 439,
	0, 441, 703, 1284, 442, 443, 1285, 0, 444, 445,
	446, 447, 448, 449, 452, 0, 0, 450, 451, 453,
	454, 0, 455, 456, 458, 461, 457, 459, 460, 462,
	475, 463, 464, 465, 466, 467, 468, 469, 470, 471,
	472, 473, 474, 477, 0, 476, 1286, 478, 479, 480,
	481, 482, 489, 491, 492, 487, 488, 490, 493, 494,
	496, 484, 485, 486, 1287, 495, 483, 0, 0, 1288,
	497, 498, 499, 500, 0, 704, 501, 705, 504, 505,
	0, 0, 506, 0, 507, 0, 0, 509, 510, 511,
	0, 0, 512, 513, 706, 1289, 514, 1290, 707, 515,
	516, 508, 517, 518, 519, 520, 521, 522, 523, 524,
	525, 0, 526, 527, 708, 528, 529, 530, 709, 531,
	532, 533, 710, 534, 711, 535, 536, 0, 537, 538,
	539, 0, 540, 541, 542, 543, 544, 545, 546, 712,
	547, 548, 550, 549, 551, 0, 552, 0, 553, 554,
	555, 0, 0, 0, 0, 0, 556, 557, 559, 0,
	560, 561, 562, 563, 558, 564, 565, 566, 567, 568,
	0, 569, 570, 571, 1291, 572, 573, 574, 575, 576,
	713, 577, 0, 578, 579, 586, 587, 588, 580, 581,
	582, 589, 590, 591, 592, 593, 0, 595, 596, 594,
	597, 598, 599, 0, 600, 601, 583, 584, 602, 603,
	1292, 604, 605, 606, 607, 608, 609, 610, 714, 0,
	611, 0, 612, 613, 614, 615, 616, 618, 585, 619,
	624, 625, 715, 620, 621, 622, 623, 716, 627, 628,
	0, 629, 630, 0, 626, 617, 0, 631, 632, 633,
	634, 635, 636, 0, 637, 638, 0, 639, 717, 718,
	719, 720, 0, 649, 0, 640, 641, 642, 643, 721,
	644, 722, 0, 645, 646, 647, 648, 0, 650, 651,
	0, 0, 652, 653, 655, 657, 658, 654, 656, 659,
	0, 660, 0, 0, 661, 662, 663, 723, 724, 725,
	0, 665, 664, 666, 667, 668, 726, 669, 670, 0,
	0, 0, 0, 671, 672, 727, 673, 674, 675, 1614,
	1613, 0, 0, 0, 0, 1611, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 291, 292, 294, 293,
	295, 296, 297, 298, 0, 299, 300, 0, 0, 0,
	3868, 0, 676, 0, 0, 0, 301, 0, 302, 303,
	1276, 304, 305, 306, 307, 308, 309, 310, 677, 678,
	0, 311, 679, 312, 680, 0, 681, 313, 314, 315,
	316, 317, 318, 0, 0, 0, 319, 682, 683, 684,
	0, 320, 321, 685, 0, 1578, 0, 322, 323, 324,
	325, 326, 327, 328, 329, 0, 0, 331, 332, 333,
	330, 334, 0, 335, 0, 336, 337, 338, 339, 340,
	341, 0, 342, 343, 344, 1277, 345, 346, 347, 0,
	0, 0, 0, 0, 0, 0, 348, 349, 350, 351,
	352, 0, 353, 355, 686, 687, 0, 358, 354, 356,
	0, 359, 357, 360, 0, 361, 362, 363, 0, 0,
	364, 365, 366, 0, 367, 368, 369, 0, 370, 371,
	372, 0, 373, 374, 688, 375, 376, 377, 379, 381,
	378, 380, 382, 383, 384, 385, 689, 690, 386, 0,
	288, 0, 0, 0, 0, 0, 387, 388, 389, 691,
	0, 0, 0, 390, 0, 391, 392, 393, 0, 394,
	0, 1278, 395, 396, 397, 692, 693, 398, 399, 400,
	401, 402, 403, 404, 405, 406, 0, 407, 694, 0,
	695, 408, 0, 409, 410, 411, 412, 413, 414, 696,
	697, 698, 502, 1280, 415, 416, 0, 417, 418, 419,
	420, 421, 0, 0, 0, 0, 422, 423, 424, 0,
	1279, 503, 425, 699, 700, 0, 701, 0, 426, 427,
	1281, 702, 1282, 428, 429, 430, 1283, 431, 0, 0,
	0, 432, 433, 434, 435, 436, 437, 0, 438, 440,
	439, 0, 441, 703, 1284, 442, 443, 1285, 0, 444,
	445, 446, 447, 448, 449, 452, 0, 0, 450, 451,
	453, 454, 0, 455, 456, 458, 461, 457, 459, 460,
	462, 475, 463, 464, 465, 466, 467, 468, 469, 470,
	471, 472, 473, 474, 477, 0, 476, 1286, 478, 479,
	480, 481, 482, 489, 491, 492, 487, 488, 490, 493,
	494, 496, 484, 485, 486, 1287, 495, 483, 0, 0,
	1288, 497, 498, 499, 500, 0, 704, 501, 705, 504,
	505, 0, 0, 506, 0, 507, 0, 0, 509, 510,
	511, 0, 0, 512, 513, 706, 1289, 514, 1290, 707,
	515, 516, 508, 517, 518, 519, 520, 521, 522, 523,
	524, 525, 0, 526, 527, 708, 528, 529, 530, 709,
	531, 532, 533, 710, 534, 711, 535, 536, 0, 537,
	538, 539, 0, 540, 541, 542, 543, 544, 545, 546,
	712, 547, 548, 550, 549, 551, 0, 552, 0, 553,
	554, 555, 0, 0, 0, 0, 0, 556, 557, 559,
	0, 560, 561, 562, 2491, 558, 564, 565, 566, 567,
	568, 0, 569, 570, 571, 1291, 572, 573, 574, 575,
	576, 713, 577, 0, 578, 579, 586, 587, 588, 580,
	581, 582, 589, 590, 591, 592, 593, 0, 595, 596,
	594, 597, 598, 599, 0, 600, 601, 583, 584, 602,
	603, 1292, 604, 605, 606, 607, 608, 609, 610, 714,
	0, 611, 0, 612, 613, 614, 615, 616, 618, 585,
	619, 624, 625, 715, 620, 621, 622, 623, 716, 627,
	628, 0, 629, 630, 0, 626, 617, 0, 631, 632,
	633, 634, 635, 636, 0, 637, 638, 0, 639, 717,
	718, 719, 720, 0, 649, 0, 640, 641, 642, 643,
	721, 644, 722, 0, 645, 646, 647, 648, 0, 650,
	651, 0, 0, 652, 653, 655, 657, 658, 654, 656,
	659, 0, 660, 0, 0, 661, 662, 663, 723, 724,
	725, 0, 665, 664, 666, 667, 668, 726, 669, 670,
	0, 0, 0, 0, 671, 672, 727, 673, 674, 675,
	1614, 2400, 0, 0, 0, 0, 2401, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 291, 292, 294,
	293, 295, 296, 297, 298, 0, 299, 300, 0, 0,
	0, 1761, 0, 676, 0, 0, 0, 301, 0, 302,
	303, 1276, 304, 305, 306, 307, 308, 309, 310, 677,
	678, 0, 311, 679, 312, 680, 0, 681, 313, 314,
	315, 316, 317, 318, 0, 0, 0, 319, 682, 683,
	684, 0, 320, 321, 685, 0, 1578, 0, 322, 323,
	324, 325, 326, 327, 328, 329, 0, 0, 331, 332,
	333, 330, 334, 0, 335, 0, 336, 337, 338, 339,
	340, 341, 0, 342, 343, 344, 1277, 345, 346, 347,
	0, 0, 0, 0, 0, 0, 0, 348, 349, 350,
	351, 352, 0, 353, 355, 686, 687, 0, 358, 354,
	356, 0, 359, 357, 360, 0, 361, 362, 363, 0,
	0, 364, 365, 366, 0, 367, 368, 369, 0, 370,
	371, 372, 0, 373, 374, 688, 375, 376, 377, 379,
	381, 378, 380, 382, 383, 384, 385, 689, 690, 386,
	0, 288, 0, 0, 0, 0, 0, 387, 388, 389,
	691, 0, 0, 0, 390, 0, 391, 392, 393, 0,
	394, 0, 1278, 395, 396, 397, 692, 693, 398, 399,
	400, 401, 402, 403, 404, 405, 406, 0, 407, 694,
	0, 695, 408, 0, 409, 410, 411, 412, 413, 414,
	696, 697, 698, 502, 1280, 415, 416, 0, 417, 418,
	419, 420, 421, 0, 0, 0, 0, 422, 423, 424,
	0, 1279, 503, 425, 699, 700, 0, 701, 0, 426,
	427, 1281, 702, 1282, 428, 429, 430, 1283, 431, 0,
	0, 0, 432, 433, 434, 435, 436, 437, 0, 2399,
	440, 439, 0, 441, 703, 1284, 442, 443, 1285, 0,
	444, 445, 446, 447, 448, 449, 452, 0, 0, 450,
	451, 453, 454, 0, 455, 456, 458, 461, 457, 459,
	460, 462, 475, 463, 464, 465, 466, 467, 468, 469,
	470, 471, 472, 473, 474, 477, 0, 476, 1286, 478,
	479, 480, 481, 482, 489, 491, 492, 487, 488, 490,
	493, 494, 496, 484, 485, 486, 1287, 495, 483, 0,
	0, 1288, 497, 498, 499, 500, 0, 704, 501, 705,
	504, 505, 0, 0, 506, 0, 507, 0, 0, 509,
	510, 511, 0, 0, 512, 513, 706, 1289, 514, 1290,
	707, 515, 516, 508, 517, 518, 519, 520, 521, 522,
	523, 524, 525, 0, 526, 527, 708, 528, 529, 530,
	709, 531, 532, 533, 710, 534, 711, 535, 536, 0,
	537, 538, 539, 0, 540, 541, 542, 543, 544, 545,
	546, 712, 547, 548, 550, 549, 551, 0, 552, 0,
	553, 554, 555, 0, 0, 0, 0, 0, 556, 557,
	559, 0, 560, 561, 562, 563, 558, 564, 565, 566,
	567, 568, 0, 569, 570, 571, 1291, 572, 573, 574,
	575, 576, 713, 577, 0, 578, 579, 586, 587, 588,
	580, 581, 582, 589, 590, 591, 592, 593, 0, 595,
	596, 594, 597, 598, 599, 0, 600, 601, 583, 584,
	602, 603, 1292, 604, 605, 606, 607, 608, 609, 610,
	714, 0, 611, 0, 612, 613, 614, 615, 616, 618,
	585, 619, 624, 625, 715, 620, 621, 622, 623, 716,
	627, 628, 0, 629, 630, 0, 626, 617, 0, 631,
	632, 633, 634, 635, 636, 0, 637, 638, 0, 639,
	717, 718, 719, 720, 0, 649, 0, 640, 641, 642,
	643, 721, 644, 722, 0, 645, 646, 647, 648, 0,
	650, 651, 0, 0, 652, 653, 655, 657, 658, 654,
	656, 659, 0, 660, 0, 0, 661, 662, 663, 723,
	724, 725, 0, 665, 664, 666, 667, 668, 726, 669,
	670, 0, 0, 0, 0, 671, 672, 727, 673, 674,
	675, 1614, 1613, 0, 0, 0, 0, 1611, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 291, 292,
	294, 293, 295, 296, 297, 298, 0, 299, 300, 0,
	0, 0, 1761, 0, 676, 0, 0, 0, 301, 0,
	302, 303, 1276, 304, 305, 306, 307, 308, 309, 310,
	677, 678, 0, 311, 679, 312, 680, 0, 681, 313,
	314, 315, 316, 317, 318, 0, 0, 0, 319, 682,
	683, 684, 0, 320, 321, 685, 0, 1578, 0, 322,
	323, 324, 325, 326, 327, 328, 329, 0, 0, 331,
	332, 333, 330, 334, 0, 335, 0, 336, 337, 338,
	339, 340, 341, 0, 342, 343, 344, 1277, 345, 346,
	347, 0, 0, 0, 0, 0, 0, 0, 348, 349,
	350, 351, 352, 0, 353, 355, 686, 687, 0, 358,
	354, 356, 0, 359, 357, 360, 0, 361, 362, 363,
	0, 0, 364, 365, 366, 0, 367, 368, 369, 0,
	370, 371, 372, 0, 373, 374, 688, 375, 376, 377,
	379, 381, 378, 380, 382, 383, 384, 385, 689, 690,
	386, 0, 288, 0, 0, 0, 0, 0, 387, 388,
	389, 691, 0, 0, 0, 390, 0, 391, 392, 393,
	0, 394, 0, 1278, 395, 396, 397, 692, 693, 398,
	399, 400, 401, 402, 403, 404, 405, 406, 0, 407,
	694, 0, 695, 408, 0, 409, 410, 411, 412, 413,
	414, 696, 697, 698, 502, 1280, 415, 416, 0, 417,
	418, 419, 420, 421, 0, 0, 0, 0, 422, 423,
	424, 0, 1279, 503, 425, 699, 700, 0, 701, 0,
	426, 427, 1281, 702, 1282, 428, 429, 430, 1283, 431,
	0, 0, 0, 432, 433, 434, 435, 436, 437, 0,
	438, 440, 439, 0, 441, 703, 1284, 442, 443, 1285,
	0, 444, 445, 446, 447, 448, 449, 452, 0, 0,
	450, 451, 453, 454, 0, 455, 456, 458, 461, 457,
	459, 460, 462, 475, 463, 464, 465, 466, 467, 468,
	469, 470, 471, 472, 473, 474, 477, 0, 476, 1286,
	478, 479, 480, 481, 482, 489, 491, 492, 487, 488,
	490, 493, 494, 496, 484, 485, 486, 1287, 495, 483,
	0, 0, 1288, 497, 498, 499, 500, 0, 704, 501,
	705, 504, 505, 0, 0, 506, 0, 507, 0, 0,
	509, 510, 511, 0, 0, 512, 513, 706, 1289, 514,
	1290, 707, 515, 516, 508, 517, 518, 519, 520, 521,
	522, 523, 524, 525, 0, 526, 527, 708, 528, 529,
	530, 709, 531, 532, 533, 710, 534, 711, 535, 536,
	0, 537, 538, 539, 0, 540, 541, 542, 543, 544,
	545, 546, 712, 547, 548, 550, 549, 551, 0, 552,
	0, 553, 554, 555, 0, 0, 0, 0, 0, 556,
	557, 559, 0, 560, 561, 562, 563, 558, 564, 565,
	566, 567, 568, 0, 569, 570, 571, 1291, 572, 573,
	574, 575, 576, 713, 577, 0, 578, 579, 586, 587,
	588, 580, 581, 582, 589, 590, 591, 592, 593, 0,
	595, 596, 594, 597, 598, 599, 0, 600, 601, 583,
	584, 602, 603, 1292, 604, 605, 606, 607, 608, 609,
	610, 714, 0, 611, 0, 612, 613, 614, 615, 616,
	618, 585, 619, 624, 625, 715, 620, 621, 622, 623,
	716, 627, 628, 0, 629, 630, 0, 626, 617, 0,
	631, 632, 633, 634, 635, 636, 0, 637, 638, 0,
	639, 717, 718, 719, 720, 0, 649, 0, 640, 641,
	642, 643, 721, 644, 722, 0, 645, 646, 647, 648,
	0, 650, 651, 0, 0, 652, 653, 655, 657, 658,
	654, 656, 659, 0, 660, 0, 0, 661, 662, 663,
	723, 724, 725, 0, 665, 664, 666, 667, 668, 726,
	669, 670, 0, 1156, 0, 285, 671, 672, 727, 673,
	674, 675, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 291, 292, 294, 293, 295, 296, 297, 298,
	0, 299, 300, 0, 0, 0, 0, 0, 676, 0,
	0, 0, 301, 1743, 302, 303, 0, 304, 305, 306,
	307, 308, 309, 310, 677, 678, 0, 311, 679, 312,
	680, 0, 681, 313, 314, 315, 316, 317, 318, 0,
	0, 0, 319, 682, 683, 684, 0, 320, 321, 685,
	0, 0, 0, 322, 323, 324, 325, 326, 327, 328,
	329, 0, 0, 331, 332, 333, 330, 334, 0, 335,
	0, 336, 337, 338, 339, 340, 341, 0, 342, 343,
	344, 0, 345, 346, 347, 0, 0, 0, 0, 0,
	0, 0, 348, 349, 350, 351, 352, 0, 353, 355,
	686, 687, 0, 358, 354, 356, 0, 359, 357, 360,
	0, 361, 362, 363, 0, 0, 364, 365, 366, 0,
	367, 368, 369, 0, 370, 371, 372, 0, 373, 374,
	688, 375, 376, 377, 379, 381, 378, 380, 382, 383,
	384, 385, 689, 690, 386, 0, 0, 0, 0, 0,
	0, 0, 387, 388, 389, 691, 0, 0, 0, 390,
	0, 391, 392, 393, 0, 394, 0, 0, 395, 396,
	397, 692, 693, 398, 399, 400, 401, 402, 403, 404,
	405, 406, 0, 407, 694, 0, 695, 408, 0, 409,
	410, 411, 412, 413, 414, 696, 697, 698, 502, 0,
	415, 416, 0, 417, 418, 419, 420, 421, 0, 0,
	0, 0, 422, 423, 424, 0, 0, 503, 425, 699,
	700, 0, 701, 0, 426, 427, 0, 702, 0, 428,
	429, 430, 0, 431, 0, 0, 0, 432, 433, 434,
	435, 436, 437, 0, 438, 440, 439, 0, 441, 703,
	0, 442, 443, 0, 0, 444, 445, 446, 447, 448,
	449, 452, 0, 0, 450, 451, 453, 454, 0, 455,
	456, 458, 461, 457, 459, 460, 462, 475, 463, 464,
	465, 466, 467, 468, 469, 470, 471, 472, 473, 474,
	477, 0, 476, 0, 478, 479, 480, 481, 482, 489,
	491, 492, 487, 488, 490, 493, 494, 496, 484, 485,
	486, 0, 495, 483, 0, 0, 0, 497, 498, 499,
	500, 0, 704, 501, 705, 504, 505, 0, 0, 506,
	0, 507, 0, 0, 509, 510, 511, 0, 0, 512,
	513, 706, 0, 514, 0, 707, 515, 516, 508, 517,
	518, 519, 520, 521, 522, 523, 524, 525, 0, 526,
	527, 708, 528, 529, 530, 709, 531, 532, 533, 710,
	534, 711, 535, 536, 0, 537, 538, 539, 0, 540,
	541, 542, 543, 544, 545, 546, 712, 547, 548, 550,
	549, 551, 0, 552, 0, 553, 554, 555, 0, 0,
	0, 0, 0, 556, 557, 559, 0, 560, 561, 562,
	563, 558, 564, 565, 566, 567, 568, 0, 569, 570,
	571, 0, 572, 573, 574, 575, 576, 713, 577, 0,
	578, 579, 586, 587, 588, 580, 581, 582, 589, 590,
	591, 592, 593, 247, 595, 596, 594, 597, 598, 599,
	0, 600, 601, 583, 584, 602, 603, 0, 604, 605,
	606, 607, 608, 609, 610, 714, 0, 611, 0, 612,
	613, 614, 615, 616, 618, 585, 619, 624, 625, 715,
	620, 621, 622, 623, 716, 627, 628, 0, 629, 630,
	0, 626, 617, 249, 631, 632, 633, 634, 635, 636,
	0, 637, 638, 0, 639, 717, 718, 719, 720, 0,
	649, 0, 640, 641, 642, 643, 721, 644, 722, 0,
	645, 646, 647, 648, 0, 650, 651, 0, 0, 652,
	653, 655, 657, 658, 654, 656, 659, 0, 660, 0,
	0, 661, 662, 663, 1737, 724, 725, 0, 665, 664,
	666, 667, 668, 726, 669, 670, 285, 0, 0, 241,
	671, 672, 727, 673, 674, 675, 0, 0, 242, 0,
	0, 0, 0, 291, 292, 294, 293, 295, 296, 297,
	298, 0, 299, 300, 0, 0, 0, 0, 0, 676,
	0, 0, 0, 301, 0, 302, 303, 201, 304, 305,
	306, 307, 308, 309, 310, 677, 678, 0, 311, 679,
	312, 680, 0, 681, 313, 314, 315, 316, 317, 318,
	0, 0, 0, 319, 682, 683, 684, 0, 320, 321,
	685, 0, 0, 0, 322, 323, 324, 325, 326, 327,
	328, 329, 0, 0, 331, 332, 333, 330, 334, 0,
	335, 0, 336, 337, 338, 339, 340, 341, 0, 342,
	343, 344, 0, 345, 346, 347, 0, 0, 0, 0,
	0, 0, 0, 348, 349, 350, 351, 352, 0, 353,
	355, 686, 687, 0, 358, 354, 356, 0, 359, 357,
	360, 0, 361, 362, 363, 0, 0, 364, 365, 366,
	0, 367, 368, 369, 0, 370, 371, 372, 0, 373,
	374, 688, 375, 376, 377, 379, 381, 378, 380, 382,
	383, 384, 385, 689, 690, 386, 0, 288, 0, 0,
	0, 0, 0, 387, 388, 389, 691, 0, 0, 0,
	390, 0, 391, 392, 393, 0, 394, 0, 0, 395,
	396, 397, 692, 693, 398, 399, 400, 401, 402, 403,
	404, 405, 406, 0, 407, 694, 0, 695, 408, 0,
	409, 410, 411, 412, 413, 414, 696, 697, 698, 502,
	0, 415, 416, 0, 417, 418, 419, 420, 421, 0,
	0, 0, 289, 422, 423, 424, 0, 0, 503, 425,
	699, 700, 0, 701, 0, 426, 427, 0, 702, 0,
	428, 429, 430, 0, 431, 0, 0, 0, 432, 433,
	434, 435, 436, 437, 0, 438, 440, 439, 0, 441,
	703, 0, 442, 443, 0, 0, 444, 445, 446, 447,
	448, 449, 452, 0, 0, 450, 451, 453, 454, 0,
	455, 456, 458, 461, 457, 459, 460, 462, 475, 463,
	464, 465, 466, 467, 468, 469, 470, 471, 472, 473,
	474, 477, 0, 476, 0, 478, 479, 480, 481, 482,
	489, 491, 492, 487, 488, 490, 493, 494, 496, 484,
	485, 486, 0, 495, 483, 0, 290, 0, 497, 498,
	499, 500, 0, 704, 501, 705, 504, 505, 0, 0,
	506, 0, 507, 0, 0, 509, 510, 511, 0, 0,
	512, 513, 706, 0, 514, 0, 707, 515, 516, 508,
	517, 518, 519, 520, 521, 522, 523, 524, 525, 0,
	526, 527, 708, 528, 529, 530, 709, 531, 532, 533,
	710, 534, 711, 535, 536, 0, 537, 538, 539, 0,
	540, 541, 542, 543, 544, 545, 546, 712, 547, 548,
	550, 549, 551, 0, 552, 0, 553, 554, 555, 0,
	0, 0, 0, 0, 556, 557, 559, 0, 560, 561,
	562, 563, 558, 564, 565, 566, 567, 568, 0, 569,
	570, 571, 0, 572, 573, 574, 575, 576, 713, 577,
	0, 578, 579, 586, 587, 588, 580, 581, 582, 589,
	590, 591, 592, 593, 0, 595, 596, 594, 597, 598,
	599, 0, 600, 601, 583, 584, 602, 603, 0, 604,
	605, 606, 607, 608, 609, 610, 714, 0, 611, 0,
	612, 613, 614, 615, 616, 618, 585, 619, 624, 625,
	715, 620, 621, 622, 623, 716, 627, 628, 0, 629,
	630, 0, 626, 617, 0, 631, 632, 633, 634, 635,
	636, 0, 637, 638, 0, 639, 717, 718, 719, 720,
	0, 649, 0, 640, 641, 642, 643, 721, 644, 722,
	0, 645, 646, 647, 648, 0, 650, 651, 0, 0,
	652, 653, 655, 657, 658, 654, 656, 659, 0, 660,
	0, 0, 661, 662, 663, 723, 724, 725, 0, 665,
	664, 666, 667, 668, 726, 669, 670, 285, 3159, 0,
	0, 671, 672, 727, 673, 674, 675, 0, 0, 0,
	0, 0, 0, 0, 291, 292, 294, 293, 295, 296,
	297, 298, 0, 299, 300, 0, 0, 0, 0, 0,
	676, 0, 0, 0, 301, 0, 302, 303, 2110, 304,
	305, 306, 307, 308, 309, 310, 677, 678, 0, 311,
	679, 312, 680, 0, 681, 313, 314, 315, 316, 317,
	318, 0, 0, 0, 319, 682, 683, 684, 0, 320,
	321, 685, 0, 0, 0, 322, 323, 324, 325, 326,
	327, 328, 329, 0, 0, 331, 332, 333, 330, 334,
	0, 335, 0, 336, 337, 338, 339, 340, 341, 0,
	342, 343, 344, 0, 345, 346, 347, 0, 0, 0,
	0, 0, 0, 0, 348, 349, 350, 351, 352, 0,
	353, 355, 686, 687, 0, 358, 354, 356, 0, 359,
	357, 360, 0, 361, 362, 363, 0, 0, 364, 365,
	366, 0, 367, 368, 369, 0, 370, 371, 372, 0,
	373, 374, 688, 375, 376, 377, 379, 381, 378, 380,
	382, 383, 384, 385, 689, 690, 386, 0, 0, 0,
	0, 0, 0, 0, 387, 388, 389, 691, 0, 0,
	0, 390, 0, 391, 392, 393, 0, 394, 0, 0,
	395, 396, 397, 692, 693, 398, 399, 400, 401, 402,
	403, 404, 405, 406, 0, 407, 694, 0, 695, 408,
	0, 409, 410, 411, 412, 413, 414, 696, 697, 698,
	502, 0, 415, 416, 0, 417, 418, 419, 420, 421,
	0, 0, 0, 0, 422, 423, 424, 0, 0, 503,
	425, 699, 700, 0, 701, 0, 426, 427, 0, 702,
	0, 428, 429, 430, 0, 431, 0, 0, 0, 432,
	433, 434, 435, 436, 437, 0, 438, 440, 439, 0,
	441, 703, 0, 442, 443, 0, 0, 444, 445, 446,
	447, 448, 449, 452, 0, 0, 450, 451, 453, 454,
	0, 455, 456, 458, 461, 457, 459, 460, 462, 475,
	463, 464, 465, 466, 467, 468, 469, 470, 471, 472,
	473, 474, 477, 0, 476, 0, 478, 479, 480, 481,
	482, 489, 491, 492, 487, 488, 490, 493, 494, 496,
	484, 485, 486, 0, 495, 483, 0, 0, 0, 497,
	498, 499, 500, 0, 704, 501, 705, 504, 505, 0,
	0, 506, 0, 507, 0, 0, 509, 510, 511, 0,
	0, 512, 513, 706, 0, 514, 0, 707, 515, 516,
	508, 517, 518, 519, 520, 521, 522, 523, 524, 525,
	0, 526, 527, 708, 528, 529, 530, 709, 531, 532,
	533, 710, 534, 711, 535, 536, 0, 537, 538, 539,
	0, 540, 541, 542, 543, 544, 545, 546, 712, 547,
	548, 550, 549, 551, 0, 552, 0, 553, 554, 555,
	0, 0, 0, 0, 0, 556, 557, 559, 0, 560,
	561, 562, 563, 558, 564, 565, 566, 567, 568, 0,
	569, 570, 571, 0, 572, 573, 574, 575, 576, 713,
	577, 0, 578, 579, 586, 587, 588, 580, 581, 582,
	589, 590, 591, 592, 593, 0, 595, 596, 594, 597,
	598, 599, 0, 600, 601, 583, 584, 602, 603, 0,
	604, 605, 606, 607, 608, 609, 610, 714, 0, 611,
	0, 612, 613, 614, 615, 616, 618, 585, 619, 624,
	625, 715, 620, 621, 622, 623, 716, 627, 628, 0,
	629, 630, 0, 626, 617, 0, 631, 632, 633, 634,
	635, 636, 0, 637, 638, 0, 639, 717, 718, 719,
	720, 0, 649, 0, 640, 641, 642, 643, 721, 644,
	722, 0, 645, 646, 647, 648, 0, 650, 651, 0,
	0, 652, 653, 655, 657, 658, 654, 656, 659, 0,
	660, 0, 0, 661, 662, 663, 723, 724, 725, 0,
	665, 664, 666, 667, 668, 726, 669, 670, 285, 0,
	0, 0, 671, 672, 727, 673, 674, 675, 0, 0,
	0, 0, 0, 0, 0, 291, 292, 294, 293, 295,
	296, 297, 298, 0, 299, 300, 0, 0, 0, 0,
	0, 676, 0, 0, 0, 301, 0, 302, 303, 5198,
	304, 305, 306, 307, 308, 309, 310, 677, 678, 0,
	311, 679, 312, 680, 0, 681, 313, 314, 315, 316,
	317, 318, 0, 0, 0, 319, 682, 683, 684, 0,
	320, 321, 685, 0, 0, 0, 322, 323, 324, 325,
	326, 327, 328, 329, 0, 0, 331, 332, 333, 330,
	334, 0, 335, 0, 336, 337, 338, 339, 340, 341,
	0, 342, 343, 344, 0, 345, 346, 347, 0, 0,
	0, 0, 0, 0, 0, 348, 349, 350, 351, 352,
	0, 353, 355, 686, 687, 0, 358, 354, 356, 0,
	359, 357, 360, 0, 361, 362, 363, 0, 0, 364,
	365, 366, 0, 367, 368, 369, 0, 370, 371, 372,
	0, 373, 374, 688, 375, 376, 377, 379, 381, 378,
	380, 382, 383, 384, 385, 689, 690, 386, 0, 288,
	0, 0, 0, 0, 0, 387, 388, 389, 691, 0,
	0, 0, 390, 0, 391, 392, 393, 0, 394, 0,
	0, 395, 396, 397, 692, 693, 398, 399, 400, 401,
	402, 403, 404, 405, 406, 0, 407, 694, 0, 695,
	408, 0, 409, 410, 411, 412, 413, 414, 696, 697,
	698, 502, 0, 415, 416, 0, 417, 418, 419, 420,
	421, 0, 0, 0, 289, 422, 423, 424, 0, 0,
	503, 425, 699, 700, 0, 701, 0, 426, 427, 0,
	702, 0, 428, 429, 430, 0, 431, 0, 0, 0,
	432, 433, 434, 435, 436, 437, 0, 438, 440, 439,
	0, 441, 703, 0, 442, 443, 0, 0, 444, 445,
	446, 447, 448, 449, 452, 0, 0, 450, 451, 453,
	454, 0, 455, 456, 458, 461, 457, 459, 460, 462,
	475, 463, 464, 465, 466, 467, 468, 469, 470, 471,
	472, 473, 474, 477, 0, 476, 0, 478, 479, 480,
	481, 482, 489, 491, 492, 487, 488, 490, 493, 494,
	496, 484, 485, 486, 0, 495, 483, 0, 290, 0,
	497, 498, 499, 500, 0, 704, 501, 705, 504, 505,
	0, 0, 506, 0, 507, 0, 0, 509, 510, 511,
	0, 0, 512, 513, 706, 0, 514, 0, 707, 515,
	516, 508, 517, 518, 519, 520, 521, 522, 523, 524,
	525, 0, 526, 527, 708, 528, 529, 530, 709, 531,
	532, 533, 710, 534, 711, 535, 536, 0, 537, 538,
	539, 0, 540, 541, 542, 543, 544, 545, 546, 712,
	547, 548, 550, 549, 551, 0, 552, 0, 553, 554,
	555, 0, 0, 0, 0, 0, 556, 557, 559, 0,
	560, 561, 562, 563, 558, 564, 565, 566, 567, 568,
	0, 569, 570, 571, 0, 572, 573, 574, 575, 576,
	713, 577, 0, 578, 579, 586, 587, 588, 580, 581,
	582, 589, 590, 591, 592, 593, 0, 595, 596, 594,
	597, 598, 599, 0, 600, 601, 583, 584, 602, 603,
	0, 604, 605, 606, 607, 608, 609, 610, 714, 0,
	611, 0, 612, 613, 614, 615, 616, 618, 585, 619,
	624, 625, 715, 620, 621, 622, 623, 716, 627, 628,
	0, 629, 630, 0, 626, 617, 0, 631, 632, 633,
	634, 635, 636, 0, 637, 638, 0, 639, 717, 718,
	719, 720, 0, 649, 0, 640, 641, 642, 643, 721,
	644, 722, 0, 645, 646, 647, 648, 0, 650, 651,
	0, 0, 652, 653, 655, 657, 658, 654, 656, 659,
	0, 660, 0, 0, 661, 662, 663, 723, 724, 725,
	0, 665, 664, 666, 667, 668, 726, 669, 670, 0,
	285, 0, 0, 671, 672, 727, 673, 674, 675, 0,
	0, 0, 0, 0, 0, 0, 0, 291, 292, 294,
	293, 295, 296, 297, 298, 0, 299, 300, 0, 0,
	0, 0, 0, 676, 0, 0, 0, 301, 3821, 302,
	303, 0, 304, 305, 306, 307, 308, 309, 310, 677,
	678, 0, 311, 679, 312, 680, 0, 681, 313, 314,
	315, 316, 317, 318, 0, 0, 0, 319, 682, 683,
	684, 0, 320, 321, 685, 0, 0, 0, 322, 323,
	324, 325, 326, 327, 328, 329, 0, 0, 331, 332,
	333, 330, 334, 0, 335, 0, 336, 337, 338, 339,
	340, 341, 0, 342, 343, 344, 0, 345, 346, 347,
	0, 0, 0, 0, 0, 0, 0, 348, 349, 350,
	351, 352, 0, 353, 355, 686, 687, 0, 358, 354,
	356, 0, 359, 357, 360, 0, 361, 362, 363, 0,
	0, 364, 365, 366, 0, 367, 368, 369, 0, 370,
	371, 372, 0, 373, 374, 688, 375, 376, 377, 379,
	381, 378, 380, 382, 383, 384, 385, 689, 690, 386,
	0, 288, 0, 0, 0, 0, 0, 387, 388, 389,
	691, 0, 0, 0, 390, 0, 391, 392, 393, 0,
	394, 0, 0, 395, 396, 397, 692, 693, 398, 399,
	400, 401, 402, 403, 404, 405, 406, 0, 407, 694,
	0, 695, 408, 0, 409, 410, 411, 412, 413, 414,
	696, 697, 698, 502, 0, 415, 416, 0, 417, 418,
	419, 420, 421, 0, 0, 0, 289, 422, 423, 424,
	0, 0, 503, 425, 699, 700, 0, 701, 0, 426,
	427, 0, 702, 0, 428, 429, 430, 0, 431, 0,
	0, 0, 432, 433, 434, 435, 436, 437, 0, 438,
	440, 439, 0, 441, 703, 0, 442, 443, 0, 0,
	444, 445, 446, 447, 448, 449, 452, 0, 0, 450,
	451, 453, 454, 0, 455, 456, 458, 461, 457, 459,
	460, 462, 475, 463, 464, 465, 466, 467, 468, 469,
	470, 471, 472, 473, 474, 477, 0, 476, 0, 478,
	479, 480, 481, 482, 489, 491, 492, 487, 488, 490,
	493, 494, 496, 484, 485, 486, 0, 495, 483, 0,
	290, 0, 497, 498, 499, 500, 0, 704, 501, 705,
	504, 505, 0, 0, 506, 0, 507, 0, 0, 509,
	510, 511, 0, 0, 512, 513, 706, 0, 514, 0,
	707, 515, 516, 508, 517, 518, 519, 520, 521, 522,
	523, 524, 525, 0, 526, 527, 708, 528, 529, 530,
	709, 531, 532, 533, 710, 534, 711, 535, 536, 0,
	537, 538, 539, 0, 540, 541, 542, 543, 544, 545,
	546, 712, 547, 548, 550, 549, 551, 0, 552, 0,
	553, 554, 555, 0, 0, 0, 0, 0, 556, 557,
	559, 0, 560, 561, 562, 563, 558, 564, 565, 566,
	567, 568, 0, 569, 570, 571, 0, 572, 573, 574,
	575, 576, 713, 577, 0, 578, 579, 586, 587, 588,
	580, 581, 582, 589, 590, 591, 592, 593, 0, 595,
	596, 594, 597, 598, 599, 0, 600, 601, 583, 584,
	602, 603, 0, 604, 605, 606, 607, 608, 609, 610,
	714, 0, 611, 0, 612, 613, 614, 615, 616, 618,
	585, 619, 624, 625, 715, 620, 621, 622, 623, 716,
	627, 628, 0, 629, 630, 0, 626, 617, 0, 631,
	632, 633, 634, 635, 636, 0, 637, 638, 0, 639,
	717, 718, 719, 720, 0, 649, 0, 640, 641, 642,
	643, 721, 644, 722, 0, 645, 646, 647, 648, 0,
	650, 651, 0, 0, 652, 653, 655, 657, 658, 654,
	656, 659, 0, 660, 0, 0, 661, 662, 663, 723,
	724, 725, 0, 665, 664, 666, 667, 668, 726, 669,
	670, 0, 285, 0, 0, 671, 672, 727, 673, 674,
	675, 0, 0, 0, 0, 0, 0, 0, 0, 291,
	292, 294, 293, 295, 296, 297, 298, 0, 299, 300,
	0, 0, 0, 0, 0, 676, 0, 0, 0, 301,
	1731, 302, 303, 0, 304, 305, 306, 307, 308, 309,
	310, 677, 678, 0, 311, 679, 312, 680, 0, 681,
	313, 314, 315, 316, 317, 318, 0, 0, 0, 319,
	682, 683, 684, 0, 320, 321, 685, 0, 0, 0,
	322, 323, 324, 325, 326, 327, 328, 329, 0, 0,
	331, 332, 333, 330, 334, 0, 335, 0, 336, 337,
	338, 339, 340, 341, 0, 342, 343, 344, 0, 345,
	346, 347, 0, 0, 0, 0, 0, 0, 0, 348,
	349, 350, 351, 352, 0, 353, 355, 686, 687, 0,
	358, 354, 356, 0, 359, 357, 360, 0, 361, 362,
	363, 0, 0, 364, 365, 366, 0, 367, 368, 369,
	0, 370, 371, 372, 0, 373, 374, 688, 375, 376,
	377, 379, 381, 378, 380, 382, 383, 384, 385, 689,
	690, 386, 0, 0, 0, 0, 0, 0, 0, 387,
	388, 389, 691, 0, 0, 0, 390, 0, 391, 392,
	393, 0, 394, 0, 0, 395, 396, 397, 692, 693,
	398, 399, 400, 401, 402, 403, 404, 405, 406, 0,
	407, 694, 0, 695, 408, 0, 409, 410, 411, 412,
	413, 414, 696, 697, 698, 502, 0, 415, 416, 0,
	417, 418, 419, 420, 421, 0, 0, 0, 0, 422,
	423, 424, 0, 0, 503, 425, 699, 700, 0, 701,
	0, 426, 427, 0, 702, 0, 428, 429, 430, 0,
	431, 0, 0, 0, 432, 433, 434, 435, 436, 437,
	0, 438, 440, 439, 0, 441, 703, 0, 442, 443,
	0, 0, 444, 445, 446, 447, 448, 449, 452, 0,
	0, 450, 451, 453, 454, 0, 455, 456, 458, 461,
	457, 459, 460, 462, 475, 463, 464, 465, 466, 467,
	468, 469, 470, 471, 472, 473, 474, 477, 0, 476,
	0, 478, 479, 480, 481, 482, 489, 491, 492, 487,
	488, 490, 493, 494, 496, 484, 485, 486, 0, 495,
	483, 0, 0, 0, 497, 498, 499, 500, 0, 704,
	501, 705, 504, 505, 0, 0, 506, 0, 507, 0,
	0, 509, 510, 511, 0, 0, 512, 513, 706, 0,
	514, 0, 707, 515, 516, 508, 517, 518, 519, 520,
	521, 522, 523, 524, 525, 0, 526, 527, 708, 528,
	529, 530, 709, 531, 532, 533, 710, 534, 711, 535,
	536, 0, 537, 538, 539, 0, 540, 541, 542, 543,
	544, 545, 546, 712, 547, 548, 550, 549, 551, 0,
	552, 0, 553, 554, 555, 0, 0, 0, 0, 0,
	556, 557, 559, 0, 560, 561, 562, 563, 558, 564,
	565, 566, 567, 568, 0, 569, 570, 571, 0, 572,
	573, 574, 575, 576, 713, 577, 0, 578, 579, 586,
	587, 588, 580, 581, 582, 589, 590, 591, 592, 593,
	0, 595, 596, 594, 597, 598, 599, 0, 600, 601,
	583, 584, 602, 603, 0, 604, 605, 606, 607, 608,
	609, 610, 714, 0, 611, 0, 612, 613, 614, 615,
	616, 618, 585, 619, 624, 625, 715, 620, 621, 622,
	623, 716, 627, 628, 0, 629, 630, 0, 626, 617,
	0, 631, 632, 633, 634, 635, 636, 0, 637, 638,
	0, 639, 717, 718, 719, 720, 0, 649, 0, 640,
	641, 642, 643, 721, 644, 722, 0, 645, 646, 647,
	648, 0, 650, 651, 0, 0, 652, 653, 655, 657,
	658, 654, 656, 659, 0, 660, 0, 0, 661, 662,
	663, 723, 724, 725, 0, 665, 664, 666, 667, 668,
	726, 669, 670, 0, 0, 0, 1335, 671, 672, 727,
	673, 674, 675, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 291, 292, 294, 293, 295, 296, 297,
	298, 0, 299, 300, 0, 0, 0, 0, 0, 1236,
	0, 0, 0, 301, 3280, 302, 303, 1276, 304, 305,
	306, 307, 308, 309, 310, 677, 678, 0, 311, 679,
	312, 680, 0, 681, 313, 314, 315, 316, 317, 318,
	0, 1235, 0, 319, 682, 683, 684, 0, 320, 321,
	1242, 0, 1223, 0, 322, 323, 324, 325, 326, 327,
	328, 329, 0, 0, 331, 332, 333, 330, 334, 0,
	335, 0, 336, 337, 338, 339, 340, 341, 0, 342,
	343, 344, 1277, 345, 346, 347, 1226, 1224, 1225, 1232,
	1228, 1227, 1231, 348, 349, 350, 351, 352, 0, 353,
	355, 686, 687, 0, 358, 354, 356, 0, 359, 357,
	360, 0, 361, 362, 363, 0, 0, 364, 365, 366,
	0, 367, 368, 369, 0, 370, 371, 372, 0, 373,
	374, 688, 375, 376, 377, 379, 381, 378, 380, 382,
	383, 384, 385, 1267, 1268, 386, 0, 288, 0, 0,
	0, 0, 0, 387, 388, 389, 691, 0, 0, 0,
	390, 0, 391, 392, 393, 0, 394, 0, 1278, 395,
	396, 397, 692, 693, 398, 399, 400, 401, 402, 403,
	404, 405, 406, 0, 407, 1274, 0, 695, 408, 0,
	409, 410, 411, 412, 413, 414, 1237, 1238, 1241, 502,
	1280, 415, 416, 0, 417, 418, 419, 420, 421, 0,
	0, 0, 289, 422, 423, 424, 0, 1279, 503, 425,
	699, 700, 0, 701, 0, 426, 427, 1281, 1239, 1282,
	428, 429, 430, 1283, 431, 0, 0, 0, 432, 433,
	434, 435, 436, 437, 0, 438, 440, 439, 0, 441,
	1275, 1284, 442, 443, 1285, 0, 444, 445, 446, 447,
	448, 449, 452, 1230, 1229, 450, 451, 453, 454, 0,
	455, 456, 458, 461, 457, 459, 460, 462, 475, 463,
	464, 465, 466, 467, 468, 469, 470, 471, 472, 473,
	474, 477, 0, 476, 1286, 478, 479, 480, 481, 482,
	489, 491, 492, 487, 488, 490, 493, 494, 496, 484,
	485, 486, 1287, 495, 483, 0, 290, 1288, 497, 498,
	499, 500, 0, 1240, 501, 705, 504, 505, 0, 0,
	506, 0, 507, 0, 0, 509, 510, 511, 0, 0,
	512, 513, 706, 1289, 514, 1290, 1269, 515, 516, 508,
	517, 518, 519, 520, 521, 522, 523, 524, 525, 0,
	526, 527, 708, 528, 529, 530, 709, 531, 532, 533,
	1270, 534, 711, 535, 536, 0, 537, 538, 539, 0,
	540, 541, 542, 543, 544, 545, 546, 712, 547, 548,
	550, 549, 551, 0, 552, 0, 553, 554, 555, 0,
	0, 0, 0, 0, 556, 557, 559, 0, 560, 561,
	562, 563, 558, 564, 565, 566, 567, 568, 0, 569,
	570, 571, 1291, 572, 573, 574, 575, 576, 713, 577,
	0, 578, 579, 586, 587, 588, 580, 581, 582, 589,
	590, 591, 592, 593, 0, 595, 596, 594, 597, 598,
	599, 1233, 600, 601, 583, 584, 602, 603, 1292, 604,
	605, 606, 607, 608, 609, 610, 714, 0, 611, 0,
	612, 613, 614, 615, 616, 618, 585, 619, 624, 625,
	715, 620, 621, 622, 623, 1271, 627, 628, 0, 629,
	630, 0, 626, 617, 0, 631, 632, 633, 634, 635,
	636, 0, 637, 638, 0, 639, 717, 718, 719, 720,
	0, 649, 0, 640, 641, 642, 643, 1272, 644, 1273,
	0, 645, 646, 647, 648, 0, 650, 651, 0, 0,
	652, 653, 655, 657, 658, 654, 656, 659, 1234, 660,
	0, 0, 661, 662, 663, 723, 724, 725, 0, 665,
	664, 666, 667, 668, 726, 669, 670, 285, 0, 0,
	0, 671, 672, 727, 673, 674, 675, 0, 0, 0,
	0, 0, 0, 0, 291, 292, 294, 293, 295, 296,
	297, 298, 0, 299, 300, 0, 0, 0, 0, 0,
	676, 0, 0, 0, 301, 0, 302, 303, 0, 304,
	305, 306, 307, 308, 309, 310, 677, 678, 0, 311,
	679, 312, 680, 0, 681, 313, 314, 315, 316, 317,
	318, 0, 0, 0, 319, 682, 683, 684, 0, 320,
	321, 685, 0, 0, 0, 322, 323, 324, 325, 326,
	327, 328, 329, 0, 0, 331, 332, 333, 330, 334,
	0, 335, 0, 336, 337, 338, 339, 340, 341, 0,
	342, 343, 344, 0, 345, 346, 347, 0, 0, 0,
	0, 0, 0, 0, 348, 349, 350, 351, 352, 0,
	353, 355, 686, 687, 0, 358, 354, 356, 0, 359,
	357, 360, 0, 361, 362, 363, 0, 0, 364, 365,
	366, 0, 367, 368, 369, 0, 370, 371, 372, 0,
	373, 374, 688, 375, 376, 377, 379, 381, 378, 380,
	382, 383, 384, 385, 689, 690, 386, 0, 0, 0,
	0, 0, 0, 0, 387, 388, 389, 691, 0, 0,
	0, 390, 0, 391, 392, 393, 0, 394, 0, 0,
	395, 396, 397, 692, 693, 398, 399, 400, 401, 402,
	403, 404, 405, 406, 0, 407, 694, 0, 695, 408,
	0, 409, 410, 411, 412, 413, 414, 696, 697, 698,
	502, 0, 415, 416, 0, 417, 418, 419, 420, 421,
	0, 0, 0, 0, 422, 423, 424, 0, 0, 503,
	425, 699, 700, 0, 701, 0, 426, 427, 0, 702,
	0, 428, 429, 430, 0, 431, 0, 0, 0, 432,
	433, 434, 435, 436, 437, 0, 438, 440, 439, 0,
	441, 703, 0, 442, 443, 0, 0, 444, 445, 446,
	447, 448, 449, 452, 0, 0, 450, 451, 453, 454,
	0, 455, 456, 458, 461, 457, 459, 460, 462, 475,
	463, 464, 465, 466, 467, 468, 469, 470, 471, 472,
	473, 474, 477, 0, 476, 0, 478, 479, 480, 481,
	482, 489, 491, 492, 487, 488, 490, 493, 494, 496,
	484, 485, 486, 0, 495, 483, 0, 0, 0, 497,
	498, 499, 500, 0, 704, 501, 705, 504, 505, 0,
	0, 506, 0, 507, 0, 0, 509, 510, 511, 0,
	0, 512, 513, 706, 0, 514, 0, 707, 515, 516,
	508, 517, 518, 519, 520, 521, 522, 523, 524, 525,
	0, 526, 527, 708, 528, 529, 530, 709, 531, 532,
	533, 710, 534, 711, 535, 536, 0, 537, 538, 539,
	0, 540, 541, 542, 543, 544, 545, 546, 712, 547,
	548, 550, 549, 551, 0, 552, 0, 553, 554, 555,
	0, 0, 0, 0, 0, 556, 557, 559, 0, 560,
	561, 562, 563, 558, 564, 565, 566, 567, 568, 0,
	569, 570, 571, 0, 572, 573, 574, 575, 576, 713,
	577, 0, 578, 579, 586, 587, 588, 580, 581, 582,
	589, 590, 591, 592, 593, 0, 595, 596, 594, 597,
	598, 599, 0, 600, 601, 583, 584, 602, 603, 0,
	604, 605, 606, 607, 608, 609, 610, 714, 0, 611,
	0, 612, 613, 614, 615, 616, 618, 585, 619, 624,
	625, 715, 620, 621, 622, 623, 716, 627, 628, 0,
	629, 630, 0, 626, 617, 0, 631, 632, 633, 634,
	635, 636, 0, 637, 638, 0, 639, 717, 718, 719,
	720, 0, 649, 0, 640, 641, 642, 643, 721, 644,
	722, 0, 645, 646, 647, 648, 0, 650, 651, 0,
	0, 652, 653, 655, 657, 658, 654, 656, 659, 0,
	660, 0, 0, 661, 662, 663, 723, 724, 725, 0,
	665, 664, 666, 667, 668, 726, 669, 670, 285, 0,
	0, 0, 671, 672, 727, 673, 674, 675, 0, 0,
	0, 0, 0, 0, 0, 291, 292, 294, 293, 295,
	296, 297, 298, 0, 299, 300, 0, 0, 0, 0,
	0, 676, 0, 0, 0, 301, 0, 302, 303, 3979,
	304, 305, 306, 307, 308, 309, 310, 677, 678, 0,
	311, 679, 312, 680, 0, 681, 313, 314, 315, 316,
	317, 318, 0, 0, 0, 319, 682, 683, 684, 0,
	320, 321, 685, 0, 0, 0, 322, 323, 324, 325,
	326, 327, 328, 329, 0, 0, 331, 332, 333, 330,
	334, 0, 335, 0, 336, 337, 338, 339, 340, 341,
	0, 342, 343, 344, 0, 345, 346, 347, 0, 0,
	0, 0, 0, 0, 0, 348, 349, 350, 351, 352,
	0, 353, 355, 686, 687, 0, 358, 354, 356, 0,
	359, 357, 360, 0, 361, 362, 363, 0, 0, 364,
	365, 366, 0, 367, 368, 369, 0, 370, 371, 372,
	0, 373, 374, 688, 375, 376, 377, 379, 381, 378,
	380, 382, 383, 384, 385, 689, 690, 386, 0, 0,
	0, 0, 0, 0, 0, 387, 388, 389, 691, 0,
	0, 0, 390, 0, 391, 392, 393, 0, 394, 0,
	0, 395, 396, 397, 692, 693, 398, 399, 400, 401,
	402, 403, 404, 405, 406, 0, 407, 694, 0, 695,
	408, 0, 409, 410, 411, 412, 413, 414, 696, 697,
	698, 502, 0, 415, 416, 0, 417, 418, 419, 420,
	421, 0, 0, 0, 0, 422, 423, 424, 0, 0,
	503, 425, 699, 700, 0, 701, 0, 426, 427, 0,
	702, 0, 428, 429, 430, 0, 431, 0, 0, 0,
	432, 433, 434, 435, 436, 437, 0, 438, 440, 439,
	0, 441, 703, 0, 442, 443, 0, 0, 444, 445,
	446, 447, 448, 449, 452, 0, 0, 450, 451, 453,
	454, 0, 455, 456, 458, 461, 457, 459, 460, 462,
	475, 463, 464, 465, 466, 467, 468, 469, 470, 471,
	472, 473, 474, 477, 0, 476, 0, 478, 479, 480,
	481, 482, 489, 491, 492, 487, 488, 490, 493, 494,
	496, 484, 485, 486, 0, 495, 483, 0, 0, 0,
	497, 498, 499, 500, 0, 704, 501, 705, 504, 505,
	0, 0, 506, 0, 507, 0, 0, 509, 510, 511,
	0, 0, 512, 513, 706, 0, 514, 0, 707, 515,
	516, 508, 517, 518, 519, 520, 521, 522, 523, 524,
	525, 0, 526, 527, 708, 528, 529, 530, 709, 531,
	532, 533, 710, 534, 711, 535, 536, 0, 537, 538,
	539, 0, 540, 541, 542, 543, 544, 545, 546, 712,
	547, 548, 550, 549, 551, 0, 552, 0, 553, 554,
	555, 0, 0, 0, 0, 0, 556, 557, 559, 0,
	560, 561, 562, 563, 558, 564, 565, 566, 567, 568,
	0, 569, 570, 571, 0, 572, 573, 574, 575, 576,
	713, 577, 0, 578, 579, 586, 587, 588, 580, 581,
	582, 589, 590, 591, 592, 593, 0, 595, 596, 594,
	597, 598, 599, 0, 600, 601, 583, 584, 602, 603,
	0, 604, 605, 606, 607, 608, 609, 610, 714, 0,
	611, 0, 612, 613, 614, 615, 616, 618, 585, 619,
	624, 625, 715, 620, 621, 622, 623, 716, 627, 628,
	0, 629, 630, 0, 626, 617, 0, 631, 632, 633,
	634, 635, 636, 0, 637, 638, 0, 639, 717, 718,
	719, 720, 0, 649, 0, 640, 641, 642, 643, 721,
	644, 722, 0, 645, 646, 647, 648, 0, 650, 651,
	0, 0, 652, 653, 655, 657, 658, 654, 656, 659,
	0, 660, 0, 0, 661, 662, 663, 723, 724, 725,
	0, 665, 664, 666, 667, 668, 726, 669, 670, 0,
	980, 0, 880, 671, 672, 727, 673, 674, 675, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 291,
	292, 294, 293, 295, 296, 297, 298, 0, 299, 300,
	0, 0, 0, 0, 0, 676, 0, 0, 0, 301,
	2478, 302, 303, 0, 304, 305, 306, 307, 308, 309,
	310, 677, 678, 0, 311, 679, 312, 680, 0, 681,
	313, 314, 315, 316, 317, 318, 0, 0, 0, 319,
	682, 683, 684, 0, 320, 321, 685, 0, 0, 0,
	322, 323, 324, 325, 326, 327, 328, 329, 0, 0,
	331, 332, 333, 330, 334, 0, 335, 0, 336, 337,
	338, 339, 340, 341, 0, 342, 343, 344, 0, 345,
	346, 347, 0, 0, 0, 0, 0, 0, 0, 348,
	349, 350, 887, 352, 0, 353, 355, 686, 687, 0,
	358, 354, 356, 0, 359, 357, 360, 0, 361, 362,
	363, 0, 0, 364, 365, 366, 0, 367, 368, 369,
	0, 370, 371, 372, 0, 373, 374, 688, 375, 376,
	377, 379, 381, 378, 380, 382, 383, 384, 385, 689,
	690, 386, 0, 288, 0, 0, 0, 0, 0, 387,
	388, 389, 691, 0, 0, 0, 390, 0, 391, 392,
	393, 0, 394, 977, 0, 395, 396, 397, 692, 693,
	398, 399, 400, 401, 402, 403, 404, 405, 406, 0,
	407, 694, 0, 695, 408, 0, 409, 410, 411, 412,
	413, 414, 696, 697, 698, 502, 0, 415, 416, 0,
	417, 418, 419, 420, 421, 0, 0, 0, 289, 422,
	423, 424, 0, 0, 503, 425, 699, 700, 0, 701,
	0, 426, 427, 0, 702, 0, 428, 429, 430, 0,
	431, 0, 0, 0, 432, 433, 434, 435, 436, 437,
	0, 438, 440, 439, 0, 441, 703, 0, 442, 443,
	0, 0, 444, 445, 446, 447, 448, 449, 452, 0,
	0, 450, 451, 453, 454, 0, 455, 456, 458, 461,
	457, 459, 460, 462, 475, 463, 464, 465, 466, 467,
	468, 469, 470, 471, 472, 473, 474, 477, 0, 476,
	0, 478, 479, 480, 481, 482, 489, 491, 492, 487,
	488, 490, 493, 494, 496, 484, 485, 486, 0, 495,
	483, 0, 290, 0, 497, 498, 499, 500, 0, 704,
	501, 705, 504, 505, 0, 0, 506, 0, 507, 0,
	0, 509, 510, 511, 0, 0, 512, 513, 706, 0,
	514, 0, 707, 515, 516, 508, 517, 518, 519, 520,
	521, 522, 523, 524, 525, 0, 526, 527, 708, 528,
	529, 530, 709, 531, 532, 533, 710, 534, 711, 535,
	536, 0, 537, 538, 539, 0, 540, 541, 542, 543,
	544, 545, 546, 712, 547, 548, 550, 549, 551, 0,
	552, 0, 553, 554, 555, 0, 0, 0, 0, 0,
	556, 557, 559, 0, 560, 561, 562, 563, 558, 564,
	565, 566, 567, 568, 0, 569, 570, 571, 0, 572,
	573, 574, 575, 576, 713, 577, 0, 578, 579, 586,
	587, 588, 580, 581, 582, 589, 590, 591, 592, 593,
	0, 595, 596, 594, 597, 598, 599, 0, 600, 601,
	583, 584, 602, 603, 0, 604, 605, 606, 607, 608,
	609, 610, 714, 0, 611, 0, 612, 613, 614, 615,
	616, 618, 585, 619, 624, 625, 715, 620, 621, 622,
	623, 716, 627, 628, 0, 629, 979, 0, 626, 617,
	885, 631, 632, 633, 634, 635, 886, 0, 637, 638,
	0, 639, 717, 718, 719, 720, 0, 649, 0, 640,
	641, 642, 643, 721, 644, 722, 0, 645, 646, 647,
	648, 0, 650, 651, 0, 0, 652, 653, 655, 657,
	658, 654, 656, 659, 0, 660, 0, 0, 661, 662,
	663, 723, 724, 725, 0, 665, 664, 666, 667, 668,
	726, 669, 670, 2155, 0, 0, 0, 671, 672, 727,
	673, 674, 675, 0, 0, 0, 0, 0, 0, 0,
	291, 292, 294, 293, 295, 296, 297, 298, 0, 299,
	300, 0, 0, 0, 0, 0, 890, 0, 0, 0,
	301, 0, 302, 303, 1276, 304, 305, 306, 307, 308,
	309, 310, 0, 2161, 0, 311, 2151, 312, 2167, 0,
	2174, 313, 314, 315, 316, 317, 318, 0, 0, 0,
	319, 2177, 2178, 0, 0, 320, 321, 0, 0, 1578,
	0, 322, 323, 324, 325, 326, 327, 328, 329, 0,
	0, 331, 332, 333, 330, 334, 0, 335, 0, 336,
	337, 338, 339, 340, 341, 0, 342, 343, 344, 1277,
	345, 346, 347, 0, 0, 0, 0, 0, 0, 0,
	348, 349, 350, 351, 352, 1259, 353, 355, 2165, 2164,
	0, 358, 354, 356, 0, 359, 357, 360, 0, 361,
	362, 363, 0, 0, 364, 1244, 366, 0, 367, 368,
	369, 0, 370, 371, 372, 0, 373, 374, 0, 375,
	376, 377, 379, 381, 378, 380, 382, 383, 384, 385,
	0, 0, 386, 0, 0, 0, 0, 0, 0, 0,
	387, 388, 389, 2163, 0, 0, 0, 390, 0, 391,
	392, 393, 0, 394, 0, 1278, 395, 396, 397, 2172,
	2173, 398, 399, 400, 401, 402, 403, 404, 405, 406,
	0, 407, 0, 0, 0, 408, 0, 409, 410, 411,
	412, 413, 414, 0, 0, 0, 502, 1280, 415, 416,
	0, 417, 418, 419, 420, 421, 0, 0, 0, 0,
	422, 423, 424, 0, 1279, 503, 425, 2158, 2159, 0,
	2154, 0, 426, 427, 1281, 0, 1282, 428, 429, 430,
	1283, 431, 0, 0, 0, 432, 433, 434, 435, 436,
	437, 0, 438, 440, 439, 0, 441, 0, 1284, 442,
	443, 1285, 0, 444, 445, 446, 447, 448, 449, 452,
	0, 0, 450, 451, 453, 454, 0, 455, 456, 458,
	461, 457, 459, 460, 462, 475, 463, 464, 465, 466,
	467, 468, 469, 470, 471, 472, 473, 474, 477, 0,
	476, 1286, 478, 479, 480, 481, 482, 489, 491, 492,
	487, 488, 490, 493, 494, 496, 484, 485, 486, 1287,
	495, 483, 0, 0, 1288, 497, 498, 499, 500, 0,
	0, 501, 2166, 504, 505, 0, 0, 506, 0, 507,
	0, 0, 509, 510, 511, 0, 0, 512, 513, 0,
	1289, 514, 1290, 0, 515, 516, 508, 517, 518, 519,
	520, 521, 522, 523, 524, 525, 0, 526, 527, 2148,
	528, 529, 530, 2149, 531, 532, 533, 0, 534, 0,
	535, 536, 0, 537, 538, 539, 0, 540, 541, 542,
	543, 544, 545, 546, 2162, 547, 548, 550, 549, 551,
	0, 552, 0, 553, 554, 555, 0, 0, 0, 0,
	0, 556, 557, 559, 0, 560, 561, 562, 563, 558,
	564, 565, 566, 567, 568, 0, 569, 570, 571, 1291,
	572, 573, 574, 575, 576, 0, 577, 0, 578, 579,
	586, 587, 588, 580, 581, 582, 589, 590, 591, 592,
	593, 0, 595, 596, 594, 597, 598, 599, 0, 600,
	601, 583, 584, 602, 603, 1292, 604, 605, 606, 607,
	608, 609, 610, 2160, 0, 611, 0, 612, 613, 614,
	615, 616, 618, 585, 619, 624, 625, 2176, 620, 621,
	622, 623, 0, 627, 628, 0, 629, 630, 0, 626,
	617, 0, 631, 632, 633, 634, 635, 636, 0, 637,
	638, 0, 639, 2168, 2169, 2170, 2171, 0, 649, 0,
	640, 641, 642, 643, 0, 644, 0, 0, 645, 646,
	647, 648, 0, 650, 651, 0, 0, 652, 653, 655,
	657, 658, 654, 656, 659, 0, 660, 0, 0, 661,
	662, 663, 0, 2152, 2175, 0, 665, 664, 666, 667,
	668, 0, 669, 670, 0, 0, 0, 0, 671, 672,
	0, 673, 674, 675, 880, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 291, 292, 294, 293, 295, 296, 297, 298, 4099,
	299, 300, 0, 0, 0, 0, 0, 676, 0, 2142,
	0, 301, 0, 302, 303, 0, 304, 305, 306, 307,
	308, 309, 310, 677, 678, 0, 311, 679, 312, 680,
	0, 681, 313, 314, 315, 316, 317, 318, 0, 0,
	0, 319, 682, 683, 684, 0, 320, 321, 685, 0,
	0, 0, 322, 323, 324, 325, 326, 327, 328, 329,
	0, 0, 331, 332, 333, 330, 334, 0, 335, 0,
	336, 337, 338, 339, 340, 341, 0, 342, 343, 344,
	0, 345, 346, 347, 0, 0, 0, 0, 0, 0,
	0, 348, 349, 350, 887, 352, 0, 353, 355, 686,
	687, 0, 358, 354, 356, 0, 359, 357, 360, 0,
	361, 362, 363, 0, 0, 364, 365, 366, 0, 367,
	368, 369, 0, 370, 371, 372, 0, 373, 374, 688,
	375, 376, 377, 379, 381, 378, 380, 382, 383, 384,
	385, 689, 690, 386, 0, 288, 0, 0, 0, 0,
	0, 387, 388, 389, 691, 0, 0, 0, 390, 0,
	391, 392, 393, 0, 394, 0, 0, 395, 396, 397,
	692, 693, 398, 399, 400, 401, 402, 403, 404, 405,
	406, 0, 407, 694, 0, 695, 408, 0, 409, 410,
	411, 412, 413, 414, 696, 697, 698, 502, 0, 415,
	416, 0, 417, 418, 419, 420, 421, 0, 0, 0,
	289, 422, 423, 424, 0, 0, 503, 425, 699, 700,
	0, 701, 0, 426, 427, 0, 702, 0, 428, 429,
	430, 0, 431, 0, 0, 0, 432, 433, 434, 435,
	436, 437, 0, 438, 440, 439, 0, 441, 703, 0,
	442, 443, 0, 0, 444, 445, 446, 447, 448, 449,
	452, 0, 0, 450, 451, 453, 454, 0, 455, 456,
	458, 461, 457, 459, 460, 462, 475, 463, 464, 465,
	466, 467, 468, 469, 470, 471, 472, 473, 474, 477,
	0, 476, 0, 478, 479, 480, 481, 482, 489, 491,
	492, 487, 488, 490, 493, 494, 496, 484, 485, 486,
	0, 495, 483, 0, 290, 0, 497, 498, 499, 500,
	0, 704, 501, 705, 504, 505, 0, 0, 506, 0,
	507, 0, 0, 509, 510, 511, 0, 0, 512, 513,
	706, 0, 514, 0, 707, 515, 516, 508, 517, 518,
	519, 520, 521, 522, 523, 524, 525, 0, 526, 527,
	708, 528, 529, 530, 709, 531, 532, 533, 710, 534,
	711, 535, 536, 0, 537, 538, 539, 0, 540, 541,
	542, 543, 544, 545, 546, 712, 547, 548, 550, 549,
	551, 0, 552, 0, 553, 554, 555, 0, 0, 0,
	0, 0, 556, 557, 559, 0, 560, 561, 562, 563,
	558, 564, 565, 566, 567, 568, 0, 569, 570, 571,
	0, 572, 573, 574, 575, 576, 713, 577, 0, 578,
	579, 586, 587, 588, 580, 581, 582, 4098, 590, 591,
	592, 593, 0, 595, 596, 594, 597, 598, 599, 0,
	600, 601, 583, 584, 602, 603, 0, 604, 605, 606,
	607, 608, 609, 610, 714, 0, 611, 0, 612, 613,
	614, 615, 616, 618, 585, 619, 624, 625, 715, 620,
	621, 622, 623, 716, 627, 628, 0, 629, 630, 0,
	626, 617, 885, 631, 632, 633, 634, 635, 886, 0,
	637, 638, 0, 639, 717, 718, 719, 720, 0, 649,
	0, 640, 641, 642, 643, 721, 644, 722, 0, 645,
	646, 4097, 648, 0, 650, 651, 0, 0, 652, 653,
	655, 657, 658, 654, 656, 659, 0, 660, 0, 0,
	661, 662, 663, 723, 724, 725, 0, 665, 664, 666,
	667, 668, 726, 669, 670, 0, 880, 0, 0, 671,
	672, 727, 673, 674, 675, 0, 0, 0, 0, 0,
	0, 0, 0, 291, 292, 294, 293, 295, 296, 297,
	298, 2182, 299, 300, 0, 0, 0, 0, 890, 676,
	0, 0, 0, 301, 0, 302, 303, 0, 304, 305,
	306, 307, 308, 309, 310, 677, 678, 0, 311, 679,
	312, 680, 0, 681, 313, 314, 315, 316, 317, 318,
	0, 0, 0, 319, 682, 683, 684, 0, 320, 321,
	685, 0, 0, 0, 322, 323, 324, 325, 326, 327,
	328, 329, 0, 0, 331, 332, 333, 330, 334, 0,
	335, 0, 336, 337, 338, 339, 340, 341, 0, 342,
	343, 344, 0, 345, 346, 347, 0, 0, 0, 0,
	0, 0, 0, 348, 349, 350, 887, 352, 0, 353,
	355, 686, 687, 0, 358, 354, 356, 0, 359, 357,
	360, 0, 361, 362, 363, 0, 0, 364, 365, 366,
	0, 367, 368, 369, 0, 370, 371, 372, 0, 373,
	374, 688, 375, 376, 377, 379, 381, 378, 380, 382,
	383, 384, 385, 689, 690, 386, 0, 288, 0, 0,
	0, 0, 0, 387, 388, 389, 691, 0, 0, 0,
	390, 0, 391, 392, 393, 0, 394, 0, 0, 395,
	396, 397, 692, 693, 398, 399, 400, 401, 402, 403,
	404, 405, 406, 0, 407, 694, 0, 695, 408, 0,
	409, 410, 411, 412, 413, 414, 696, 697, 698, 502,
	0, 415, 416, 0, 417, 418, 419, 420, 421, 0,
	0, 0, 289, 422, 423, 424, 0, 0, 503, 425,
	699, 700, 0, 701, 0, 426, 427, 0, 702, 0,
	428, 429, 430, 0, 431, 0, 0, 0, 432, 433,
	434, 435, 436, 437, 0, 438, 440, 439, 0, 441,
	703, 0, 442, 443, 0, 0, 444, 445, 446, 447,
	448, 449, 452, 0, 0, 450, 451, 453, 454, 0,
	455, 456, 458, 461, 457, 459, 460, 462, 475, 463,
	464, 465, 466, 467, 468, 469, 470, 471, 472, 473,
	474, 477, 0, 476, 0, 478, 479, 480, 481, 482,
	489, 491, 492, 487, 488, 490, 493, 494, 496, 484,
	485, 486, 0, 495, 483, 0, 290, 0, 497, 498,
	499, 500, 0, 704, 501, 705, 504, 505, 0, 0,
	506, 0, 507, 0, 0, 509, 510, 511, 0, 0,
	512, 513, 706, 0, 514, 0, 707, 515, 516, 508,
	517, 518, 519, 520, 521, 522, 523, 524, 525, 0,
	526, 527, 708, 528, 529, 530, 709, 531, 532, 533,
	710, 534, 711, 535, 536, 0, 537, 538, 539, 0,
	540, 541, 542, 543, 544, 545, 546, 712, 547, 548,
	550, 549, 551, 0, 552, 0, 553, 554, 555, 0,
	0, 0, 0, 0, 556, 557, 559, 0, 560, 561,
	562, 563, 558, 564, 565, 566, 567, 568, 0, 569,
	570, 571, 0, 572, 573, 574, 575, 576, 713, 577,
	0, 578, 579, 586, 587, 588, 580, 581, 582, 2181,
	590, 591, 592, 593, 0, 2183, 596, 594, 597, 598,
	599, 0, 600, 601, 583, 584, 602, 603, 0, 604,
	605, 606, 607, 608, 609, 610, 714, 0, 611, 0,
	612, 613, 614, 615, 616, 618, 585, 619, 624, 625,
	715, 620, 621, 622, 623, 716, 627, 628, 0, 629,
	630, 0, 626, 617, 885, 631, 632, 633, 634, 635,
	886, 0, 637, 638, 0, 639, 717, 718, 719, 720,
	0, 649, 0, 640, 641, 642, 643, 721, 644, 722,
	0, 645, 646, 2180, 648, 0, 650, 651, 0, 0,
	652, 653, 655, 657, 658, 654, 656, 659, 0, 660,
	0, 0, 661, 662, 663, 723, 724, 725, 0, 665,
	664, 666, 667, 668, 726, 669, 670, 0, 880, 0,
	0, 671, 672, 727, 673, 674, 675, 0, 0, 0,
	0, 0, 0, 0, 0, 291, 292, 294, 293, 295,
	296, 297, 298, 2133, 299, 300, 0, 0, 0, 0,
	890, 676, 0, 0, 0, 301, 0, 302, 303, 0,
	304, 305, 306, 307, 308, 309, 310, 677, 678, 0,
	311, 679, 312, 680, 0, 681, 313, 314, 315, 316,
	317, 318, 0, 0, 0, 319, 682, 683, 684, 0,
	320, 321, 685, 0, 0, 0, 322, 323, 324, 325,
	326, 327, 328, 329, 0, 0, 331, 332, 333, 330,
	334, 0, 335, 0, 336, 337, 338, 339, 340, 341,
	0, 342, 343, 344, 0, 345, 346, 347, 0, 0,
	0, 0, 0, 0, 0, 348, 349, 350, 887, 352,
	0, 353, 355, 686, 687, 0, 358, 354, 356, 0,
	359, 357, 360, 0, 361, 362, 363, 0, 0, 364,
	365, 366, 0, 367, 368, 369, 0, 370, 371, 372,
	0, 373, 374, 688, 375, 376, 377, 379, 381, 378,
	380, 382, 383, 384, 385, 689, 690, 386, 0, 288,
	0, 0, 0, 0, 0, 387, 388, 389, 691, 0,
	0, 0, 390, 0, 391, 392, 393, 0, 394, 0,
	0, 395, 396, 397, 692, 693, 398, 399, 400, 401,
	402, 403, 404, 405, 406, 0, 407, 694, 0, 695,
	408, 0, 409, 410, 411, 412, 413, 414, 696, 697,
	698, 502, 0, 415, 416, 0, 417, 418, 419, 420,
	421, 0, 0, 0, 289, 422, 423, 424, 0, 0,
	503, 425, 699, 700, 0, 701, 0, 426, 427, 0,
	702, 0, 428, 429, 430, 0, 431, 0, 0, 0,
	432, 433, 434, 435, 436, 437, 0, 438, 440, 439,
	0, 441, 703, 0, 442, 443, 0, 0, 444, 445,
	446, 447, 448, 449, 452, 0, 0, 450, 451, 453,
	454, 0, 455, 456, 458, 461, 457, 459, 460, 462,
	475, 463, 464, 465, 466, 467, 468, 469, 470, 471,
	472, 473, 474, 477, 0, 476, 0, 478, 479, 480,
	481, 482, 489, 491, 492, 487, 488, 490, 493, 494,
	496, 484, 485, 486, 0, 495, 483, 0, 290, 0,
	497, 498, 499, 500, 0, 704, 501, 705, 504, 505,
	0, 0, 506, 0, 507, 0, 0, 509, 510, 511,
	0, 0, 512, 513, 706, 0, 514, 0, 707, 515,
	516, 508, 517, 518, 519, 520, 521, 522, 523, 524,
	525, 0, 526, 527, 708, 528, 529, 530, 709, 531,
	532, 533, 710, 534, 711, 535, 536, 0, 537, 538,
	539, 0, 540, 541, 542, 543, 544, 545, 546, 712,
	547, 548, 550, 549, 551, 0, 552, 0, 553, 554,
	555, 0, 0, 0, 0, 0, 556, 557, 559, 0,
	560, 561, 562, 563, 558, 564, 565, 566, 567, 568,
	0, 569, 570, 571, 0, 572, 573, 574, 575, 576,
	713, 577, 0, 578, 579, 586, 587, 588, 580, 581,
	582, 2132, 590, 591, 592, 593, 0, 2134, 596, 594,
	597, 598, 599, 0, 600, 601, 583, 584, 602, 603,
	0, 604, 605, 606, 607, 608, 609, 610, 714, 0,
	611, 0, 612, 613, 614, 615, 616, 618, 585, 619,
	624, 625, 715, 620, 621, 622, 623, 716, 627, 628,
	0, 629, 630, 0, 626, 617, 885, 631, 632, 633,
	634, 635, 886, 0, 637, 638, 0, 639, 717, 718,
	719, 720, 0, 649, 0, 640, 641, 642, 643, 721,
	644, 722, 0, 645, 646, 2131, 648, 0, 650, 651,
	0, 0, 652, 653, 655, 657, 658, 654, 656, 659,
	0, 660, 0, 0, 661, 662, 663, 723, 724, 725,
	0, 665, 664, 666, 667, 668, 726, 669, 670, 878,
	0, 880, 0, 671, 672, 727, 673, 674, 675, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 291, 292,
	294, 293, 295, 296, 297, 298, 0, 299, 300, 0,
	0, 0, 890, 0, 676, 0, 0, 0, 301, 0,
	302, 303, 0, 304, 305, 306, 307, 308, 309, 310,
	677, 678, 0, 311, 679, 312, 680, 0, 681, 313,
	314, 315, 316, 317, 318, 0, 0, 0, 319, 682,
	683, 684, 0, 320, 321, 685, 0, 0, 0, 322,
	323, 324, 325, 326, 327, 328, 329, 0, 0, 331,
	332, 333, 330, 334, 0, 335, 0, 336, 337, 338,
	339, 340, 341, 0, 342, 343, 344, 0, 345, 346,
	347, 0, 0, 0, 0, 0, 0, 0, 348, 349,
	350, 887, 352, 0, 353, 355, 686, 687, 0, 358,
	354, 356, 0, 359, 357, 360, 0, 361, 362, 363,
	0, 0, 364, 365, 366, 0, 367, 368, 369, 0,
	370, 371, 372, 0, 373, 374, 688, 375, 376, 377,
	379, 381, 378, 380, 382, 383, 384, 385, 689, 690,
	386, 0, 288, 0, 0, 0, 0, 0, 387, 388,
	389, 691, 0, 0, 0, 390, 0, 391, 392, 393,
	0, 394, 0, 0, 395, 396, 397, 692, 693, 398,
	399, 400, 401, 402, 403, 404, 405, 406, 0, 407,
	694, 0, 695, 408, 0, 409, 410, 411, 412, 413,
	414, 696, 697, 698, 502, 0, 415, 416, 0, 417,
	418, 419, 420, 421, 0, 0, 0, 289, 422, 423,
	424, 0, 0, 503, 425, 699, 700, 0, 701, 0,
	426, 427, 0, 702, 0, 428, 429, 430, 0, 431,
	0, 0, 0, 432, 433, 434, 435, 436, 437, 0,
	438, 440, 439, 0, 441, 703, 0, 442, 443, 0,
	0, 444, 445, 446, 447, 448, 449, 452, 0, 0,
	450, 451, 453, 454, 0, 455, 456, 458, 461, 457,
	459, 460, 462, 475, 463, 464, 465, 466, 467, 468,
	469, 470, 471, 472, 473, 474, 477, 0, 476, 0,
	478, 479, 480, 481, 482, 489, 491, 492, 487, 488,
	490, 493, 494, 496, 484, 485, 486, 0, 495, 483,
	0, 290, 0, 497, 498, 499, 500, 0, 704, 501,
	705, 504, 505, 0, 0, 506, 0, 507, 0, 0,
	509, 510, 511, 0, 0, 512, 513, 706, 0, 514,
	0, 707, 515, 516, 508, 517, 518, 519, 520, 521,
	522, 523, 524, 525, 0, 526, 527, 708, 528, 529,
	530, 709, 531, 532, 533, 710, 534, 711, 535, 536,
	0, 537, 538, 539, 0, 540, 541, 542, 543, 544,
	545, 546, 712, 547, 548, 550, 549, 551, 0, 552,
	0, 553, 554, 555, 0, 0, 0, 0, 0, 556,
	557, 559, 0, 560, 561, 562, 563, 558, 564, 565,
	566, 567, 568, 0, 569, 570, 571, 0, 572, 573,
	574, 575, 576, 713, 577, 0, 578, 579, 586, 587,
	588, 580, 581, 582, 589, 590, 591, 592, 593, 0,
	595, 596, 594, 597, 598, 599, 0, 600, 601, 583,
	584, 602, 603, 0, 604, 605, 606, 607, 608, 609,
	610, 714, 0, 611, 0, 612, 613, 614, 615, 616,
	618, 585, 619, 624, 625, 715, 620, 621, 622, 623,
	716, 627, 628, 0, 629, 630, 0, 626, 617, 885,
	631, 632, 633, 634, 635, 886, 0, 637, 638, 0,
	639, 717, 718, 719, 720, 0, 649, 0, 640, 641,
	642, 643, 721, 644, 722, 0, 645, 646, 647, 648,
	0, 650, 651, 0, 0, 652, 653, 655, 657, 658,
	654, 656, 659, 0, 660, 0, 0, 661, 662, 663,
	723, 724, 725, 0, 665, 664, 666, 667, 668, 726,
	669, 670, 0, 880, 0, 0, 671, 672, 727, 673,
	674, 675, 0, 0, 0, 0, 0, 0, 0, 0,
	291, 292, 294, 293, 295, 296, 297, 298, 0, 299,
	300, 0, 0, 0, 0, 890, 676, 0, 0, 0,
	301, 0, 302, 303, 0, 304, 305, 306, 307, 308,
	309, 310, 677, 678, 0, 311, 679, 312, 680, 0,
	681, 313, 314, 315, 316, 317, 318, 0, 0, 0,
	319, 682, 683, 684, 0, 320, 321, 685, 0, 0,
	0, 322, 323, 324, 325, 326, 327, 328, 329, 0,
	0, 331, 332, 333, 330, 334, 0, 335, 0, 336,
	337, 338, 339, 340, 341, 0, 342, 343, 344, 0,
	345, 346, 347, 0, 0, 0, 0, 0, 0, 0,
	348, 349, 350, 887, 352, 0, 353, 355, 686, 687,
	0, 358, 354, 356, 0, 359, 357, 360, 0, 361,
	362, 363, 0, 0, 364, 365, 366, 0, 367, 368,
	369, 0, 370, 371, 372, 0, 373, 374, 688, 375,
	376, 377, 379, 381, 378, 380, 382, 383, 384, 385,
	689, 690, 386, 0, 288, 0, 0, 0, 0, 0,
	387, 388, 389, 691, 0, 0, 0, 390, 0, 391,
	392, 393, 0, 394, 0, 0, 395, 396, 397, 692,
	693, 398, 399, 400, 401, 402, 403, 404, 405, 406,
	0, 407, 694, 0, 695, 408, 0, 409, 410, 411,
	412, 413, 414, 696, 697, 698, 502, 0, 415, 416,
	0, 417, 418, 419, 420, 421, 0, 0, 0, 289,
	422, 423, 424, 0, 0, 503, 425, 699, 700, 0,
	701, 0, 426, 427, 0, 702, 0, 428, 429, 430,
	0, 431, 0, 0, 0, 432, 433, 434, 435, 436,
	437, 0, 438, 440, 439, 0, 441, 703, 0, 442,
	443, 0, 0, 444, 445, 446, 447, 448, 449, 452,
	0, 0, 450, 451, 453, 454, 0, 455, 456, 458,
	461, 457, 459, 460, 462, 475, 463, 464, 465, 466,
	467, 468, 469, 470, 471, 472, 473, 474, 477, 0,
	476, 0, 478, 479, 480, 481, 482, 489, 491, 492,
	487, 488, 490, 493, 494, 496, 484, 485, 486, 0,
	495, 483, 0, 290, 0, 497, 498, 499, 500, 0,
	704, 501, 705, 504, 505, 0, 0, 506, 0, 507,
	0, 0, 509, 510, 511, 0, 0, 512, 513, 706,
	0, 514, 0, 707, 515, 516, 508, 517, 518, 519,
	520, 521, 522, 523, 524, 525, 0, 526, 527, 708,
	528, 529, 530, 709, 531, 532, 533, 710, 534, 711,
	535, 536, 0, 537, 538, 539, 0, 540, 541, 542,
	543, 544, 545, 546, 712, 547, 548, 550, 549, 551,
	0, 552, 0, 553, 554, 555, 0, 0, 0, 0,
	0, 556, 557, 559, 0, 560, 561, 562, 563, 558,
	564, 565, 566, 567, 568, 0, 569, 570, 571, 0,
	572, 573, 574, 575, 576, 713, 577, 0, 578, 579,
	586, 587, 588, 580, 581, 582, 589, 590, 591, 592,
	593, 0, 595, 596, 594, 597, 598, 599, 0, 600,
	601, 583, 584, 602, 603, 0, 604, 605, 606, 607,
	608, 609, 610, 714, 0, 611, 0, 612, 613, 614,
	615, 616, 618, 585, 619, 624, 625, 715, 620, 621,
	622, 623, 716, 627, 628, 0, 629, 630, 0, 626,
	617, 885, 631, 632, 633, 634, 635, 886, 0, 637,
	638, 0, 639, 717, 718, 719, 720, 0, 649, 0,
	640, 641, 642, 643, 721, 644, 722, 0, 645, 646,
	647, 648, 0, 650, 651, 0, 0, 652, 653, 655,
	657, 658, 654, 656, 659, 0, 660, 0, 0, 661,
	662, 663, 723, 724, 725, 0, 665, 664, 666, 667,
	668, 726, 669, 670, 0, 880, 0, 0, 671, 672,
	727, 673, 674, 675, 0, 0, 0, 0, 0, 0,
	0, 0, 291, 292, 294, 293, 295, 296, 297, 298,
	0, 299, 300, 0, 0, 0, 0, 890, 676, 0,
	0, 0, 301, 0, 302, 303, 0, 304, 305, 306,
	307, 308, 309, 310, 677, 678, 0, 311, 679, 312,
	680, 0, 681, 313, 314, 315, 316, 317, 318, 0,
	0, 0, 319, 682, 683, 684, 0, 320, 321, 685,
	0, 0, 0, 322, 323, 324, 325, 326, 327, 328,
	329, 0, 0, 331, 332, 333, 330, 334, 0, 335,
	0, 336, 337, 338, 339, 340, 341, 0, 342, 343,
	344, 0, 345, 346, 347, 0, 0, 0, 0, 0,
	0, 0, 348, 349, 350, 887, 352, 0, 353, 355,
	686, 687, 0, 358, 354, 356, 0, 359, 357, 360,
	0, 361, 362, 363, 0, 0, 364, 365, 366, 0,
	367, 368, 369, 0, 370, 371, 372, 0, 373, 374,
	688, 375, 376, 377, 379, 381, 378, 380, 382, 383,
	384, 385, 689, 690, 386, 0, 288, 0, 0, 0,
	0, 0, 387, 388, 389, 691, 0, 0, 0, 390,
	0, 391, 392, 393, 0, 394, 0, 0, 395, 396,
	397, 692, 693, 398, 399, 400, 401, 402, 403, 404,
	405, 406, 0, 407, 694, 0, 695, 408, 0, 409,
	410, 411, 412, 413, 414, 696, 697, 698, 502, 0,
	415, 416, 0, 417, 418, 419, 420, 421, 0, 0,
	0, 289, 422, 423, 424, 0, 0, 503, 425, 699,
	700, 0, 701, 0, 426, 427, 0, 702, 0, 428,
	429, 430, 0, 431, 0, 0, 0, 432, 433, 434,
	435, 436, 437, 0, 438, 440, 439, 0, 441, 703,
	0, 442, 443, 0, 0, 444, 445, 446, 447, 448,
	449, 452, 0, 0, 450, 451, 453, 454, 0, 455,
	456, 458, 461, 457, 459, 460, 462, 475, 463, 464,
	465, 466, 467, 468, 469, 470, 471, 472, 473, 474,
	477, 0, 476, 0, 478, 479, 480, 481, 482, 489,
	491, 492, 487, 488, 490, 493, 494, 496, 484, 485,
	486, 0, 495, 483, 0, 290, 0, 497, 498, 499,
	500, 0, 704, 501, 705, 504, 505, 0, 0, 506,
	0, 507, 0, 0, 509, 510, 511, 0, 0, 512,
	513, 706, 0, 514, 0, 707, 515, 516, 508, 517,
	518, 519, 520, 521, 522, 523, 524, 525, 0, 526,
	527, 708, 528, 529, 530, 709, 531, 532, 533, 710,
	534, 711, 535, 536, 0, 537, 538, 539, 0, 540,
	541, 542, 543, 544, 545, 546, 712, 547, 548, 550,
	549, 551, 0, 552, 0, 553, 554, 555, 0, 0,
	0, 0, 0, 556, 557, 559, 0, 560, 561, 562,
	563, 558, 564, 565, 566, 567, 568, 0, 569, 570,
	571, 0, 2530, 573, 574, 575, 576, 713, 577, 0,
	578, 579, 586, 587, 588, 580, 581, 582, 2531, 590,
	591, 592, 593, 0, 595, 596, 594, 597, 598, 599,
	0, 600, 601, 583, 584, 602, 603, 0, 604, 605,
	606, 607, 608, 609, 610, 714, 0, 611, 0, 612,
	613, 614, 615, 616, 618, 585, 619, 624, 625, 715,
	620, 621, 622, 623, 716, 627, 628, 0, 629, 630,
	0, 626, 617, 885, 631, 632, 633, 634, 635, 886,
	0, 637, 638, 0, 639, 717, 718, 719, 720, 0,
	649, 0, 640, 641, 642, 643, 721, 644, 722, 0,
	645, 646, 2532, 648, 0, 650, 651, 0, 0, 652,
	653, 655, 657, 658, 654, 656, 659, 0, 660, 0,
	0, 661, 662, 663, 723, 724, 725, 0, 665, 664,
	666, 667, 668, 726, 669, 670, 0, 285, 0, 0,
	671, 672, 727, 673, 674, 675, 0, 0, 0, 0,
	0, 0, 0, 0, 291, 292, 294, 293, 295, 296,
	297, 298, 0, 299, 300, 0, 0, 0, 0, 890,
	676, 0, 0, 0, 301, 0, 302, 303, 0, 304,
	305, 306, 307, 308, 309, 310, 677, 678, 0, 311,
	679, 312, 680, 0, 681, 313, 314, 315, 316, 317,
	318, 0, 0, 0, 319, 682, 683, 684, 0, 320,
	321, 685, 0, 0, 0, 322, 323, 324, 325, 326,
	327, 328, 329, 0, 0, 331, 332, 333, 330, 334,
	0, 335, 0, 336, 337, 338, 339, 340, 341, 0,
	342, 343, 344, 0, 345, 346, 347, 0, 0, 0,
	0, 0, 0, 0, 348, 349, 350, 351, 352, 0,
	353, 355, 686, 687, 0, 358, 354, 356, 0, 359,
	357, 360, 0, 361, 362, 363, 0, 0, 364, 365,
	366, 0, 367, 368, 369, 0, 370, 371, 372, 0,
	373, 374, 688, 375, 376, 377, 379, 381, 378, 380,
	382, 383, 384, 385, 689, 690, 386, 0, 288, 0,
	0, 0, 0, 0, 387, 388, 389, 691, 0, 0,
	0, 390, 0, 391, 392, 393, 0, 394, 0, 0,
	395, 396, 397, 692, 693, 398, 399, 400, 401, 402,
	403, 404, 405, 406, 0, 407, 694, 0, 695, 408,
	0, 409, 410, 411, 412, 413, 414, 696, 697, 698,
	502, 0, 415, 416, 0, 417, 418, 419, 420, 421,
	0, 0, 0, 289, 422, 423, 424, 0, 0, 503,
	425, 699, 700, 0, 701, 0, 426, 427, 0, 702,
	0, 428, 429, 430, 0, 431, 0, 0, 0, 432,
	433, 434, 435, 436, 437, 0, 438, 440, 439, 0,
	441, 703, 0, 442, 443, 0, 0, 444, 445, 446,
	447, 448, 449, 452, 0, 0, 450, 451, 453, 454,
	0, 455, 456, 458, 461, 457, 459, 460, 462, 475,
	463, 464, 465, 466, 467, 468, 469, 470, 471, 472,
	473, 474, 477, 0, 476, 0, 478, 479, 480, 481,
	482, 489, 491, 492, 487, 488, 490, 493, 494, 496,
	484, 485, 486, 0, 495, 483, 0, 290, 0, 497,
	498, 499, 500, 0, 704, 501, 705, 504, 505, 0,
	0, 506, 0, 507, 0, 0, 509, 510, 511, 0,
	0, 512, 513, 706, 0, 514, 0, 707, 515, 516,
	508, 517, 518, 519, 520, 521, 522, 523, 524, 525,
	0, 526, 527, 708, 528, 529, 530, 709, 531, 532,
	533, 710, 534, 711, 535, 536, 0, 537, 538, 539,
	0, 540, 541, 542, 543, 544, 545, 546, 712, 547,
	548, 550, 549, 551, 0, 552, 0, 553, 554, 555,
	0, 0, 0, 0, 0, 556, 557, 559, 0, 560,
	561, 562, 563, 558, 564, 565, 566, 567, 568, 0,
	569, 570, 571, 0, 572, 573, 574, 575, 576, 713,
	577, 0, 578, 579, 586, 587, 588, 580, 581, 582,
	589, 590, 591, 592, 593, 0, 595, 596, 594, 597,
	598, 599, 0, 600, 601, 583, 584, 602, 603, 0,
	604, 605, 606, 607, 608, 609, 610, 714, 0, 611,
	0, 612, 613, 614, 615, 616, 618, 585, 619, 624,
	625, 715, 620, 621, 622, 623, 716, 627, 628, 0,
	629, 630, 0, 626, 617, 0, 631, 632, 633, 634,
	635, 636, 0, 637, 638, 0, 639, 717, 718, 719,
	720, 0, 649, 0, 640, 641, 642, 643, 721, 644,
	722, 0, 645, 646, 647, 648, 0, 650, 651, 0,
	0, 652, 653, 655, 657, 658, 654, 656, 659, 0,
	660, 0, 0, 661, 662, 663, 723, 724, 725, 0,
	665, 664, 666, 667, 668, 726, 669, 670, 0, 0,
	0, 0, 671, 672, 727, 673, 674, 675, 0, 0,
	0, 0, 0, 0, 0, 1614, 1613, 0, 0, 0,
	0, 1611, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 890, 291, 292, 294, 293, 295, 296, 297, 298,
	0, 299, 300, 0, 0, 0, 0, 0, 676, 0,
	0, 0, 301, 0, 302, 303, 1276, 304, 305, 306,
	307, 308, 309, 310, 677, 678, 0, 311, 679, 312,
	680, 0, 681, 313, 314, 315, 316, 317, 318, 0,
	0, 0, 319, 682, 683, 684, 0, 320, 321, 685,
	0, 1578, 0, 322, 323, 324, 325, 326, 327, 328,
	329, 0, 0, 331, 332, 333, 330, 334, 0, 335,
	0, 336, 337, 338, 339, 340, 341, 0, 342, 343,
	344, 1277, 345, 346, 347, 0, 0, 0, 0, 0,
	0, 0, 348, 349, 350, 351, 352, 0, 353, 355,
	686, 687, 0, 358, 354, 356, 0, 359, 357, 360,
	0, 361, 362, 363, 0, 0, 364, 365, 366, 0,
	367, 368, 369, 0, 370, 371, 372, 0, 373, 374,
	688, 375, 376, 377, 379, 381, 378, 380, 382, 383,
	384, 385, 689, 690, 386, 0, 288, 0, 0, 0,
	0, 0, 387, 388, 389, 691, 0, 0, 0, 390,
	0, 391, 392, 393, 0, 394, 0, 1278, 395, 396,
	397, 692, 693, 398, 399, 400, 401, 402, 403, 404,
	405, 406, 0, 407, 694, 0, 695, 408, 0, 409,
	410, 411, 412, 413, 414, 696, 697, 698, 502, 1280,
	415, 416, 0, 417, 418, 419, 420, 421, 0, 0,
	0, 0, 422, 423, 424, 0, 1279, 503, 425, 699,
	700, 0, 701, 0, 426, 427, 1281, 702, 1282, 428,
	429, 430, 1283, 431, 0, 0, 0, 432, 433, 434,
	435, 436, 437, 0, 438, 440, 439, 0, 441, 703,
	1284, 442, 443, 1285, 0, 444, 445, 446, 447, 448,
	449, 452, 0, 0, 450, 451, 453, 454, 0, 455,
	456, 458, 461, 457, 459, 460, 462, 475, 463, 464,
	465, 466, 467, 468, 469, 470, 471, 472, 473, 474,
	477, 0, 476, 1286, 478, 479, 480, 481, 482, 489,
	491, 492, 487, 488, 490, 493, 494, 496, 484, 485,
	486, 1287, 495, 483, 0, 0, 1288, 497, 498, 499,
	500, 4199, 704, 501, 705, 504, 505, 0, 0, 506,
	0, 507, 0, 0, 509, 510, 511, 0, 0, 512,
	513, 706, 1289, 514, 1290, 707, 515, 516, 508, 517,
	518, 519, 520, 521, 522, 523, 524, 525, 0, 526,
	527, 708, 528, 529, 530, 709, 531, 532, 533, 710,
	534, 711, 535, 536, 0, 537, 538, 539, 0, 540,
	541, 542, 543, 544, 545, 546, 712, 547, 548, 550,
	549, 551, 0, 552, 0, 553, 554, 555, 0, 0,
	0, 0, 0, 556, 557, 559, 0, 560, 561, 562,
	563, 558, 564, 565, 566, 567, 568, 0, 569, 570,
	571, 1291, 572, 573, 574, 575, 576, 713, 577, 0,
	578, 579, 586, 587, 588, 580, 581, 582, 589, 590,
	591, 592, 593, 0, 595, 596, 594, 597, 598, 599,
	0, 600, 601, 583, 584, 602, 603, 1292, 604, 605,
	606, 607, 608, 609, 610, 714, 0, 611, 0, 612,
	613, 614, 615, 616, 618, 585, 619, 624, 625, 715,
	620, 621, 622, 623, 716, 627, 628, 0, 629, 630,
	0, 626, 617, 0, 631, 632, 633, 634, 635, 636,
	0, 637, 638, 0, 639, 717, 718, 719, 720, 0,
	649, 0, 640, 641, 642, 643, 721, 644, 722, 0,
	645, 646, 647, 648, 0, 650, 651, 0, 0, 652,
	653, 655, 657, 658, 654, 656, 659, 0, 660, 0,
	0, 661, 662, 663, 723, 724, 725, 0, 665, 664,
	666, 667, 668, 726, 669, 670, 0, 0, 0, 0,
	671, 672, 727, 673, 674, 675, 1614, 1613, 0, 0,
	0, 0, 1611, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 291, 292, 294, 293, 295, 296, 297,
	298, 0, 299, 300, 0, 0, 0, 0, 0, 676,
	0, 0, 0, 301, 0, 302, 303, 1276, 304, 305,
	306, 307, 308, 309, 310, 677, 678, 0, 311, 679,
	312, 680, 0, 681, 313, 314, 315, 316, 317, 318,
	0, 0, 0, 319, 682, 683, 684, 0, 320, 321,
	685, 0, 1578, 0, 322, 323, 324, 325, 326, 327,
	328, 329, 0, 0, 331, 332, 333, 330, 334, 0,
	335, 0, 336, 337, 338, 339, 340, 341, 0, 342,
	343, 344, 1277, 345, 346, 347, 0, 0, 0, 0,
	0, 0, 0, 348, 349, 350, 351, 352, 0, 353,
	355, 686, 687, 0, 358, 354, 356, 0, 359, 357,
	360, 0, 361, 362, 363, 0, 0, 364, 365, 366,
	0, 367, 368, 369, 0, 370, 371, 372, 0, 373,
	374, 688, 375, 376, 377, 379, 381, 378, 380, 382,
	383, 384, 385, 689, 690, 386, 0, 288, 0, 0,
	0, 0, 0, 387, 388, 389, 691, 0, 0, 0,
	390, 0, 391, 392, 393, 0, 394, 0, 1278, 395,
	396, 397, 692, 693, 398, 399, 400, 401, 402, 403,
	404, 405, 406, 0, 407, 694, 0, 695, 408, 0,
	409, 410, 411, 412, 413, 414, 696, 697, 698, 502,
	1280, 415, 416, 0, 417, 418, 419, 420, 421, 0,
	0, 0, 0, 422, 423, 424, 0, 1279, 503, 425,
	699, 700, 0, 701, 0, 426, 427, 1281, 702, 1282,
	428, 429, 430, 1283, 431, 0, 0, 0, 432, 433,
	434, 435, 436, 437, 0, 438, 440, 439, 0, 441,
	703, 1284, 442, 443, 1285, 0, 444, 445, 446, 447,
	448, 449, 452, 0, 0, 450, 451, 453, 454, 0,
	455, 456, 458, 461, 457, 459, 460, 462, 475, 463,
	464, 465, 466, 467, 468, 469, 470, 471, 472, 473,
	474, 477, 0, 476, 1286, 478, 479, 480, 481, 482,
	489, 491, 492, 487, 488, 490, 493, 494, 496, 484,
	485, 486, 1287, 495, 483, 0, 0, 1288, 497, 498,
	499, 500, 3771, 704, 501, 705, 504, 505, 0, 0,
	506, 0, 507, 0, 0, 509, 510, 511, 0, 0,
	512, 513, 706, 1289, 514, 1290, 707, 515, 516, 508,
	517, 518, 519, 520, 521, 522, 523, 524, 525, 0,
	526, 527, 708, 528, 529, 530, 709, 531, 532, 533,
	710, 534, 711, 535, 536, 0, 537, 538, 539, 0,
	540, 541, 542, 543, 544, 545, 546, 712, 547, 548,
	550, 549, 551, 0, 552, 0, 553, 554, 555, 0,
	0, 0, 0, 0, 556, 557, 559, 0, 560, 561,
	562, 563, 558, 564, 565, 566, 567, 568, 0, 569,
	570, 571, 1291, 572, 573, 574, 575, 576, 713, 577,
	0, 578, 579, 586, 587, 588, 580, 581, 582, 589,
	590, 591, 592, 593, 0, 595, 596, 594, 597, 598,
	599, 0, 600, 601, 583, 584, 602, 603, 1292, 604,
	605, 606, 607, 608, 609, 610, 714, 0, 611, 0,
	612, 613, 614, 615, 616, 618, 585, 619, 624, 625,
	715, 620, 621, 622, 623, 716, 627, 628, 0, 629,
	630, 0, 626, 617, 0, 631, 632, 633, 634, 635,
	636, 0, 637, 638, 0, 639, 717, 718, 719, 720,
	0, 649, 0, 640, 641, 642, 643, 721, 644, 722,
	0, 645, 646, 647, 648, 0, 650, 651, 0, 0,
	652, 653, 655, 657, 658, 654, 656, 659, 0, 660,
	0, 0, 661, 662, 663, 723, 724, 725, 0, 665,
	664, 666, 667, 668, 726, 669, 670, 0, 0, 0,
	0, 671, 672, 727, 673, 674, 675, 1792, 0, 1614,
	1613, 0, 0, 0, 0, 1611, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 291, 292, 294, 293,
	295, 296, 297, 298, 0, 299, 300, 0, 0, 0,
	0, 0, 676, 0, 0, 0, 301, 0, 302, 303,
	1276, 304, 305, 306, 307, 308, 309, 310, 677, 678,
	0, 311, 679, 312, 680, 0, 681, 313, 314, 315,
	316, 317, 318, 0, 0, 0, 319, 682, 683, 684,
	0, 320, 321, 685, 0, 1578, 0, 322, 323, 324,
	325, 326, 327, 328, 329, 0, 0, 331, 332, 333,
	330, 334, 0, 335, 0, 336, 337, 338, 339, 340,
	341, 0, 342, 343, 344, 1277, 345, 346, 347, 0,
	0, 0, 0, 0, 0, 0, 348, 349, 350, 351,
	352, 0, 353, 355, 686, 687, 0, 358, 354, 356,
	0, 359, 357, 360, 0, 361, 362, 363, 0, 0,
	364, 365, 366, 0, 367, 368, 369, 0, 370, 371,
	372, 0, 373, 374, 688, 375, 376, 377, 379, 381,
	378, 380, 382, 383, 384, 385, 689, 690, 386, 0,
	288, 0, 0, 0, 0, 0, 1791, 388, 389, 691,
	0, 0, 0, 390, 0, 391, 392, 393, 0, 394,
	0, 1278, 395, 396, 397, 692, 693, 398, 399, 400,
	401, 402, 403, 404, 405, 406, 0, 407, 694, 0,
	695, 408, 0, 409, 410, 411, 412, 413, 414, 696,
	697, 698, 502, 1280, 415, 416, 0, 417, 418, 419,
	420, 421, 0, 0, 0, 0, 422, 423, 424, 0,
	1279, 503, 425, 699, 700, 0, 701, 0, 426, 427,
	1281, 702, 1282, 428, 429, 430, 1283, 431, 0, 0,
	0, 432, 433, 434, 435, 436, 437, 0, 438, 440,
	439, 0, 441, 703, 1284, 442, 443, 1285, 0, 444,
	445, 446, 447, 448, 449, 452, 0, 0, 450, 451,
	453, 454, 0, 455, 456, 458, 461, 457, 459, 460,
	462, 475, 463, 464, 465, 466, 467, 468, 469, 470,
	471, 472, 473, 474, 477, 0, 476, 1286, 478, 479,
	480, 481, 482, 489, 491, 492, 487, 488, 490, 493,
	494, 496, 484, 485, 486, 1287, 495, 483, 0, 0,
	1288, 497, 498, 499, 500, 0, 704, 501, 705, 504,
	505, 0, 0, 506, 0, 507, 0, 0, 509, 510,
	511, 0, 0, 512, 513, 706, 1289, 514, 1290, 707,
	515, 516, 508, 517, 518, 519, 520, 521, 522, 523,
	524, 525, 0, 526, 527, 708, 528, 529, 530, 709,
	531, 532, 533, 710, 534, 711, 535, 536, 0, 537,
	538, 539, 0, 540, 541, 542, 543, 544, 1790, 546,
	712, 547, 548, 550, 549, 551, 0, 552, 0, 553,
	554, 555, 0, 0, 0, 0, 0, 556, 557, 559,
	0, 560, 561, 562, 563, 558, 564, 565, 566, 567,
	568, 0, 569, 570, 571, 1291, 572, 573, 574, 575,
	576, 713, 577, 0, 578, 579, 586, 587, 588, 580,
	581, 582, 589, 1789, 591, 592, 593, 0, 595, 596,
	594, 597, 598, 599, 0, 600, 601, 583, 584, 602,
	603, 1292, 604, 605, 606, 607, 608, 609, 610, 714,
	0, 611, 0, 612, 613, 614, 615, 616, 618, 585,
	619, 624, 625, 715, 620, 621, 622, 623, 716, 627,
	628, 0, 629, 630, 0, 626, 617, 0, 631, 632,
	633, 634, 635, 636, 0, 637, 638, 0, 639, 717,
	718, 719, 720, 0, 649, 0, 640, 641, 642, 643,
	721, 644, 722, 0, 645, 646, 647, 648, 0, 650,
	651, 0, 0, 652, 653, 655, 657, 658, 654, 656,
	659, 0, 660, 0, 0, 661, 662, 663, 723, 724,
	725, 0, 665, 664, 666, 667, 668, 726, 669, 670,
	0, 0, 0, 0, 671, 672, 727, 673, 674, 675,
	1664, 0, 1614, 1613, 0, 0, 0, 0, 1611, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 291,
	292, 294, 293, 295, 296, 297, 298, 0, 299, 300,
	0, 0, 0, 0, 0, 676, 0, 0, 0, 301,
	0, 302, 303, 1276, 304, 305, 306, 307, 308, 309,
	310, 677, 678, 0, 311, 679, 312, 680, 0, 681,
	313, 314, 315, 316, 317, 318, 0, 0, 0, 319,
	682, 683, 684, 0, 320, 321, 685, 0, 1578, 0,
	322, 323, 324, 325, 326, 327, 328, 329, 0, 0,
	331, 332, 333, 330, 334, 0, 335, 0, 336, 337,
	338, 339, 340, 341, 0, 342, 343, 344, 1277, 345,
	346, 347, 0, 0, 0, 0, 0, 0, 0, 348,
	349, 350, 351, 352, 0, 353, 355, 686, 687, 0,
	358, 354, 356, 0, 359, 357, 360, 0, 361, 362,
	363, 0, 0, 364, 365, 366, 0, 367, 368, 369,
	0, 370, 371, 372, 0, 373, 374, 688, 375, 376,
	377, 379, 381, 378, 380, 382, 383, 384, 385, 689,
	690, 386, 0, 288, 0, 0, 0, 0, 0, 387,
	388, 389, 691, 0, 0, 0, 390, 0, 391, 392,
	393, 0, 394, 0, 1278, 395, 396, 397, 692, 693,
	398, 399, 400, 401, 402, 403, 404, 405, 406, 0,
	407, 694, 0, 695, 408, 0, 409, 410, 411, 412,
	413, 414, 1666, 697, 698, 502, 1280, 415, 416, 0,
	417, 418, 419, 420, 421, 0, 0, 0, 0, 422,
	423, 424, 0, 1279, 503, 425, 699, 700, 0, 701,
	0, 426, 427, 1281, 702, 1282, 428, 429, 430, 1283,
	431, 0, 0, 0, 432, 433, 434, 435, 436, 437,
	0, 438, 440, 439, 0, 441, 703, 1284, 442, 443,
	1285, 0, 444, 445, 446, 447, 448, 449, 452, 0,
	0, 450, 451, 453, 454, 0, 455, 456, 458, 461,
	457, 459, 460, 462, 475, 463, 464, 465, 466, 467,
	468, 469, 470, 471, 472, 473, 474, 477, 0, 476,
	1286, 478, 479, 480, 481, 482, 489, 491, 492, 487,
	488, 490, 493, 494, 496, 484, 485, 486, 1287, 495,
	483, 0, 0, 1288, 497, 498, 499, 500, 0, 704,
	501, 705, 504, 505, 0, 0, 506, 0, 507, 0,
	0, 509, 510, 511, 0, 0, 512, 513, 706, 1289,
	514, 1290, 707, 515, 516, 508, 517, 518, 519, 520,
	521, 522, 523, 524, 525, 0, 526, 527, 708, 528,
	529, 530, 709, 531, 532, 533, 710, 534, 711, 535,
	536, 0, 537, 538, 539, 0, 540, 541, 542, 543,
	544, 545, 546, 712, 547, 548, 550, 549, 551, 0,
	552, 0, 553, 554, 555, 0, 0, 0, 0, 0,
	556, 557, 559, 0, 560, 561, 562, 563, 558, 564,
	565, 566, 567, 568, 0, 569, 570, 571, 1291, 572,
	573, 574, 575, 576, 713, 577, 0, 578, 579, 586,
	587, 588, 580, 581, 582, 589, 590, 591, 592, 593,
	0, 595, 596, 594, 597, 598, 599, 0, 600, 601,
	583, 584, 602, 603, 1292, 604, 605, 606, 607, 608,
	609, 610, 714, 0, 611, 0, 612, 613, 614, 615,
	616, 618, 585, 619, 624, 625, 715, 620, 621, 622,
	623, 716, 627, 628, 0, 629, 630, 0, 626, 617,
	0, 631, 632, 633, 634, 635, 636, 0, 637, 638,
	0, 639, 717, 718, 719, 720, 0, 649, 0, 640,
	641, 642, 643, 721, 644, 722, 0, 645, 646, 647,
	648, 0, 650, 651, 0, 0, 652, 653, 655, 657,
	658, 654, 656, 659, 0, 660, 0, 0, 661, 662,
	663, 723, 724, 725, 0, 665, 664, 666, 667, 668,
	726, 669, 670, 0, 0, 0, 0, 671, 672, 727,
	673, 674, 675, 1609, 0, 1614, 1613, 0, 0, 0,
	0, 1611, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 291, 292, 294, 293, 295, 296, 297, 298,
	0, 299, 300, 0, 0, 0, 0, 0, 676, 0,
	0, 0, 301, 0, 302, 303, 1276, 304, 305, 306,
	307, 308, 309, 310, 677, 678, 0, 311, 679, 312,
	680, 0, 681, 313, 314, 315, 316, 317, 318, 0,
	0, 0, 319, 682, 683, 684, 0, 320, 321, 685,
	0, 1578, 0, 322, 323, 324, 325, 326, 327, 328,
	329, 0, 0, 331, 332, 333, 330, 334, 0, 335,
	0, 336, 337, 338, 339, 340, 341, 0, 342, 343,
	344, 1277, 345, 346, 347, 0, 0, 0, 0, 0,
	0, 0, 348, 349, 350, 351, 352, 0, 353, 355,
	686, 687, 0, 358, 354, 356, 0, 359, 357, 360,
	0, 361, 362, 363, 0, 0, 364, 365, 366, 0,
	367, 368, 369, 0, 370, 371, 372, 0, 373, 374,
	688, 375, 376, 377, 379, 381, 378, 380, 382, 383,
	384, 385, 689, 690, 386, 0, 288, 0, 0, 0,
	0, 0, 387, 388, 389, 691, 0, 0, 0, 390,
	0, 391, 392, 393, 0, 394, 0, 1278, 395, 396,
	397, 692, 693, 398, 399, 400, 401, 402, 403, 404,
	405, 406, 0, 407, 694, 0, 695, 408, 0, 409,
	410, 411, 412, 413, 414, 696, 697, 698, 502, 1280,
	415, 416, 0, 417, 418, 419, 420, 421, 0, 0,
	0, 0, 422, 423, 424, 0, 1279, 503, 425, 699,
	700, 0, 701, 0, 426, 427, 1281, 702, 1282, 428,
	429, 430, 1283, 431, 0, 0, 0, 432, 433, 434,
	435, 436, 437, 0, 438, 440, 439, 0, 441, 703,
	1284, 442, 443, 1285, 0, 444, 445, 446, 447, 448,
	449, 452, 0, 0, 450, 451, 453, 454, 0, 455,
	456, 458, 461, 457, 459, 460, 462, 475, 463, 464,
	465, 466, 467, 468, 469, 470, 471, 472, 473, 474,
	477, 0, 476, 1286, 478, 479, 480, 481, 482, 489,
	491, 492, 487, 488, 490, 493, 494, 496, 484, 485,
	486, 1287, 495, 483, 0, 0, 1288, 497, 498, 499,
	500, 0, 704, 501, 705, 504, 505, 0, 0, 506,
	0, 507, 0, 0, 509, 510, 511, 0, 0, 512,
	513, 706, 1289, 514, 1290, 707, 515, 516, 508, 517,
	518, 519, 520, 521, 522, 523, 524, 525, 0, 526,
	527, 708, 528, 529, 530, 709, 531, 532, 533, 710,
	534, 711, 535, 536, 0, 537, 538, 539, 0, 540,
	541, 542, 543, 544, 545, 546, 712, 547, 548, 550,
	549, 551, 0, 552, 0, 553, 554, 555, 0, 0,
	0, 0, 0, 556, 557, 559, 0, 560, 561, 562,
	563, 558, 564, 565, 566, 567, 568, 0, 569, 570,
	571, 1291, 572, 573, 574, 575, 576, 713, 577, 0,
	578, 579, 586, 587, 588, 580, 581, 582, 589, 590,
	591, 592, 593, 0, 595, 596, 594, 597, 598, 599,
	0, 600, 601, 583, 584, 602, 603, 1292, 604, 605,
	606, 607, 608, 609, 610, 714, 0, 611, 0, 612,
	613, 614, 615, 616, 618, 585, 619, 624, 625, 715,
	620, 621, 622, 623, 716, 627, 628, 0, 629, 630,
	0, 626, 617, 0, 631, 632, 633, 634, 635, 636,
	0, 637, 638, 0, 639, 717, 718, 719, 720, 0,
	649, 0, 640, 641, 642, 643, 721, 644, 722, 0,
	645, 646, 647, 648, 0, 650, 651, 0, 0, 652,
	653, 655, 657, 658, 654, 656, 659, 0, 660, 0,
	0, 661, 662, 663, 723, 724, 725, 0, 665, 664,
	666, 667, 668, 726, 669, 670, 0, 0, 0, 0,
	671, 672, 727, 673, 674, 675, 1614, 1613, 0, 0,
	0, 0, 1611, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 291, 292, 294, 293, 295, 296, 297,
	298, 0, 299, 300, 0, 0, 0, 0, 0, 676,
	0, 0, 0, 301, 0, 302, 303, 1276, 304, 305,
	306, 307, 308, 309, 310, 677, 678, 0, 311, 679,
	312, 680, 0, 681, 313, 314, 315, 316, 317, 318,
	0, 0, 0, 319, 682, 683, 684, 0, 320, 321,
	685, 0, 1578, 0, 322, 323, 324, 325, 326, 327,
	328, 329, 0, 0, 331, 332, 333, 330, 334, 0,
	335, 0, 336, 337, 338, 339, 340, 341, 0, 342,
	343, 344, 1277, 345, 346, 347, 0, 0, 0, 0,
	0, 0, 0, 348, 349, 350, 351, 352, 0, 353,
	355, 686, 687, 0, 358, 354, 356, 0, 359, 357,
	360, 0, 361, 362, 363, 0, 0, 364, 365, 366,
	0, 367, 368, 369, 0, 370, 371, 372, 0, 373,
	374, 688, 375, 376, 377, 379, 381, 378, 380, 382,
	383, 384, 385, 689, 690, 386, 0, 288, 0, 0,
	0, 0, 0, 387, 388, 389, 691, 0, 0, 0,
	390, 0, 391, 392, 393, 0, 394, 0, 1278, 395,
	396, 397, 692, 693, 398, 399, 400, 401, 402, 403,
	404, 405, 406, 0, 407, 694, 0, 695, 408, 0,
	409, 410, 411, 412, 413, 414, 696, 697, 698, 502,
	1280, 415, 416, 0, 417, 418, 419, 420, 421, 0,
	0, 0, 0, 422, 423, 424, 0, 1279, 503, 425,
	699, 700, 0, 701, 0, 426, 427, 1281, 702, 1282,
	428, 429, 430, 1283, 431, 0, 0, 0, 432, 433,
	434, 435, 436, 437, 0, 438, 440, 439, 0, 441,
	703, 1284, 442, 443, 1285, 0, 444, 445, 446, 447,
	448, 449, 452, 0, 0, 450, 451, 453, 454, 0,
	455, 456, 458, 461, 457, 459, 460, 462, 475, 463,
	464, 465, 466, 467, 468, 469, 470, 471, 472, 473,
	474, 477, 0, 476, 1286, 478, 479, 480, 481, 482,
	489, 491, 492, 487, 488, 490, 493, 494, 496, 484,
	485, 486, 1287, 495, 483, 0, 0, 1288, 497, 498,
	499, 500, 0, 704, 501, 705, 504, 505, 0, 0,
	506, 0, 507, 0, 0, 509, 510, 511, 0, 0,
	512, 513, 706, 1289, 514, 1290, 707, 515, 516, 508,
	517, 518, 519, 520, 521, 522, 523, 524, 525, 0,
	526, 527, 708, 528, 529, 530, 709, 531, 532, 533,
	710, 534, 711, 535, 536, 0, 537, 538, 539, 0,
	540, 541, 542, 543, 544, 545, 546, 712, 547, 548,
	550, 549, 551, 0, 552, 0, 553, 554, 555, 0,
	0, 0, 0, 0, 556, 557, 559, 0, 560, 561,
	562, 563, 558, 564, 565, 566, 567, 568, 0, 569,
	570, 571, 1291, 572, 573, 574, 575, 576, 713, 577,
	0, 578, 579, 586, 587, 588, 580, 581, 582, 589,
	590, 591, 592, 593, 0, 595, 596, 594, 597, 598,
	599, 0, 600, 601, 583, 584, 602, 603, 1292, 604,
	605, 606, 607, 608, 609, 610, 714, 0, 611, 0,
	612, 613, 614, 615, 616, 618, 585, 619, 624, 625,
	715, 620, 621, 622, 623, 716, 627, 628, 0, 629,
	630, 0, 626, 617, 0, 631, 632, 633, 634, 635,
	636, 0, 637, 638, 0, 639, 717, 718, 719, 720,
	0, 649, 0, 640, 641, 642, 643, 721, 644, 722,
	0, 645, 646, 647, 648, 0, 650, 651, 0, 0,
	652, 653, 655, 657, 658, 654, 656, 659, 0, 660,
	0, 0, 661, 662, 663, 723, 724, 725, 0, 665,
	664, 666, 667, 668, 726, 669, 670, 1614, 1613, 0,
	0, 671, 672, 727, 673, 674, 675, 0, 0, 0,
	0, 0, 0, 0, 291, 292, 294, 293, 295, 296,
	297, 298, 0, 299, 300, 0, 0, 0, 0, 0,
	676, 0, 0, 0, 301, 0, 302, 303, 1276, 304,
	305, 306, 307, 308, 309, 310, 677, 678, 0, 311,
	679, 312, 680, 0, 681, 313, 314, 315, 316, 317,
	318, 0, 0, 0, 319, 682, 683, 684, 0, 320,
	321, 685, 0, 1578, 0, 322, 323, 324, 325, 326,
	327, 328, 329, 0, 0, 331, 332, 333, 330, 334,
	0, 335, 0, 336, 337, 338, 339, 340, 341, 0,
	342, 343, 344, 1277, 345, 346, 347, 0, 0, 0,
	0, 0, 0, 0, 348, 349, 350, 351, 352, 0,
	353, 355, 686, 687, 0, 358, 354, 356, 0, 359,
	357, 360, 0, 361, 362, 363, 0, 0, 364, 365,
	366, 0, 367, 368, 369, 0, 370, 371, 372, 0,
	373, 374, 688, 375, 376, 377, 379, 381, 378, 380,
	382, 383, 384, 385, 689, 690, 386, 0, 288, 0,
	0, 0, 0, 0, 387, 388, 389, 691, 0, 0,
	0, 390, 0, 391, 392, 393, 0, 394, 0, 1278,
	395, 396, 397, 692, 693, 398, 399, 400, 401, 402,
	403, 404, 405, 406, 0, 407, 694, 0, 695, 408,
	0, 409, 410, 411, 412, 413, 414, 696, 697, 698,
	502, 1280, 415, 416, 0, 417, 418, 419, 420, 421,
	0, 0, 0, 0, 422, 423, 424, 0, 1279, 503,
	425, 699, 700, 0, 701, 0, 426, 427, 1281, 702,
	1282, 428, 429, 430, 1283, 431, 0, 0, 0, 432,
	433, 434, 435, 436, 437, 0, 438, 440, 439, 0,
	441, 703, 1284, 442, 443, 1285, 0, 444, 445, 446,
	447, 448, 449, 452, 0, 0, 450, 451, 453, 454,
	0, 455, 456, 458, 461, 457, 459, 460, 462, 475,
	463, 464, 465, 466, 467, 468, 469, 470, 471, 472,
	473, 474, 477, 0, 476, 1286, 478, 479, 480, 481,
	482, 489, 491, 492, 487, 488, 490, 493, 494, 496,
	484, 485, 486, 1287, 495, 483, 0, 0, 1288, 497,
	498, 499, 500, 0, 704, 501, 705, 504, 505, 0,
	0, 506, 0, 507, 0, 0, 509, 510, 511, 0,
	0, 512, 513, 706, 1289, 514, 1290, 707, 515, 516,
	508, 517, 518, 519, 520, 521, 522, 523, 524, 525,
	0, 526, 527, 708, 528, 529, 530, 709, 531, 532,
	533, 710, 534, 711, 535, 536, 0, 537, 538, 539,
	0, 540, 541, 542, 543, 544, 545, 546, 712, 547,
	548, 550, 549, 551, 0, 552, 0, 553, 554, 555,
	0, 0, 0, 0, 0, 556, 557, 559, 0, 560,
	561, 562, 563, 558, 564, 565, 566, 567, 568, 0,
	569, 570, 571, 1291, 572, 573, 574, 575, 576, 713,
	577, 0, 578, 579, 586, 587, 588, 580, 581, 582,
	589, 590, 591, 592, 593, 0, 595, 596, 594, 597,
	598, 599, 0, 600, 601, 583, 584, 602, 603, 1292,
	604, 605, 606, 607, 608, 609, 610, 714, 0, 611,
	0, 612, 613, 614, 615, 616, 618, 585, 619, 624,
	625, 715, 620, 621, 622, 623, 716, 627, 628, 0,
	629, 630, 0, 626, 617, 0, 631, 632, 633, 634,
	635, 636, 0, 637, 638, 0, 639, 717, 718, 719,
	720, 0, 649, 0, 640, 641, 642, 643, 721, 644,
	722, 0, 645, 646, 647, 648, 0, 650, 651, 0,
	0, 652, 653, 655, 657, 658, 654, 656, 659, 0,
	660, 0, 0, 661, 662, 663, 723, 724, 725, 0,
	665, 664, 666, 667, 668, 726, 669, 670, 1614, 0,
	0, 0, 671, 672, 727, 673, 674, 675, 0, 0,
	0, 0, 0, 0, 0, 291, 292, 294, 293, 295,
	296, 297, 298, 0, 299, 300, 0, 0, 0, 0,
	0, 676, 0, 0, 0, 301, 0, 302, 303, 1276,
	304, 305, 306, 307, 308, 309, 310, 677, 678, 0,
	311, 679, 312, 680, 0, 681, 313, 314, 315, 316,
	317, 318, 0, 0, 0, 319, 682, 683, 684, 0,
	320, 321, 685, 0, 1578, 0, 322, 323, 324, 325,
	326, 327, 328, 329, 0, 0, 331, 332, 333, 330,
	334, 0, 335, 0, 336, 337, 338, 339, 340, 341,
	0, 342, 343, 344, 1277, 345, 346, 347, 0, 0,
	0, 0, 0, 0, 0, 348, 349, 350, 351, 352,
	0, 353, 355, 686, 687, 0, 358, 354, 356, 0,
	359, 357, 360, 0, 361, 362, 363, 0, 0, 364,
	365, 366, 0, 367, 368, 369, 0, 370, 371, 372,
	0, 373, 374, 688, 375, 376, 377, 379, 381, 378,
	380, 382, 383, 384, 385, 689, 690, 386, 0, 288,
	0, 0, 0, 0, 0, 387, 388, 389, 691, 0,
	0, 0, 390, 0, 391, 392, 393, 0, 394, 0,
	1278, 395, 396, 397, 692, 693, 398, 399, 400, 401,
	402, 403, 404, 405, 406, 0, 407, 694, 0, 695,
	408, 0, 409, 410, 411, 412, 413, 414, 696, 697,
	698, 502, 1280, 415, 416, 0, 417, 418, 419, 420,
	421, 0, 0, 0, 0, 422, 423, 424, 0, 1279,
	503, 425, 699, 700, 0, 701, 0, 426, 427, 1281,
	702, 1282, 428, 429, 430, 1283, 431, 0, 0, 0,
	432, 433, 434, 435, 436, 437, 0, 438, 440, 439,
	0, 441, 703, 1284, 442, 443, 1285, 0, 444, 445,
	446, 447, 448, 449, 452, 0, 0, 450, 451, 453,
	454, 0, 455, 456, 458, 461, 457, 459, 460, 462,
	475, 463, 464, 465, 466, 467, 468, 469, 470, 471,
	472, 473, 474, 477, 0, 476, 1286, 478, 479, 480,
	481, 482, 489, 491, 492, 487, 488, 490, 493, 494,
	496, 484, 485, 486, 1287, 495, 483, 0, 0, 1288,
	497, 498, 499, 500, 0, 704, 501, 705, 504, 505,
	0, 0, 506, 0, 507, 0, 0, 509, 510, 511,
	0, 0, 512, 513, 706, 1289, 514, 1290, 707, 515,
	516, 508, 517, 518, 519, 520, 521, 522, 523, 524,
	525, 0, 526, 527, 708, 528, 529, 530, 709, 531,
	532, 533, 710, 534, 711, 535, 536, 0, 537, 538,
	539, 0, 540, 541, 542, 543, 544, 545, 546, 712,
	547, 548, 550, 549, 551, 0, 552, 0, 553, 554,
	555, 0, 0, 0, 0, 0, 556, 557, 559, 0,
	560, 561, 562, 563, 558, 564, 565, 566, 567, 568,
	0, 569, 570, 571, 1291, 572, 573, 574, 575, 576,
	713, 577, 0, 578, 579, 586, 587, 588, 580, 581,
	582, 589, 590, 591, 592, 593, 0, 595, 596, 594,
	597, 598, 599, 0, 600, 601, 583, 584, 602, 603,
	1292, 604, 605, 606, 607, 608, 609, 610, 714, 0,
	611, 0, 612, 613, 614, 615, 616, 618, 585, 619,
	624, 625, 715, 620, 621, 622, 623, 716, 627, 628,
	0, 629, 630, 0, 626, 617, 0, 631, 632, 633,
	634, 635, 636, 0, 637, 638, 0, 639, 717, 718,
	719, 720, 0, 649, 0, 640, 641, 642, 643, 721,
	644, 722, 0, 645, 646, 647, 648, 0, 650, 651,
	0, 0, 652, 653, 655, 657, 658, 654, 656, 659,
	0, 660, 0, 0, 661, 662, 663, 723, 724, 725,
	0, 665, 664, 666, 667, 668, 726, 669, 670, 285,
	0, 0, 0, 671, 672, 727, 673, 674, 675, 0,
	0, 0, 0, 0, 0, 0, 291, 292, 294, 293,
	295, 296, 297, 298, 0, 299, 300, 0, 0, 0,
	0, 0, 676, 0, 0, 0, 301, 0, 302, 303,
	0, 304, 305, 306, 307, 308, 309, 310, 677, 678,
	0, 311, 679, 312, 680, 0, 681, 313, 314, 315,
	316, 317, 318, 0, 0, 0, 319, 682, 683, 684,
	3064, 320, 321, 685, 0, 0, 0, 322, 323, 324,
	325, 326, 327, 328, 329, 0, 0, 331, 332, 333,
	330, 334, 3813, 335, 0, 336, 337, 338, 339, 340,
	341, 0, 342, 343, 344, 0, 345, 346, 347, 0,
	0, 0, 0, 0, 0, 0, 348, 349, 350, 351,
	352, 0, 353, 355, 686, 687, 0, 358, 354, 356,
	0, 359, 357, 360, 0, 361, 362, 363, 0, 0,
	364, 365, 366, 0, 367, 368, 369, 0, 370, 371,
	372, 0, 3068, 374, 688, 375, 376, 377, 379, 381,
	378, 380, 382, 383, 384, 385, 689, 690, 386, 0,
	3812, 0, 0, 0, 0, 0, 387, 388, 389, 691,
	0, 0, 0, 390, 0, 391, 392, 393, 3067, 394,
	0, 0, 395, 396, 397, 692, 693, 398, 399, 400,
	401, 402, 403, 404, 405, 406, 0, 407, 694, 0,
	695, 408, 0, 409, 410, 411, 412, 413, 414, 696,
	697, 698, 502, 0, 415, 416, 0, 417, 418, 419,
	420, 421, 0, 0, 0, 3809, 422, 423, 424, 0,
	0, 503, 425, 699, 700, 0, 701, 0, 426, 3811,
	0, 702, 0, 428, 429, 430, 0, 431, 0, 0,
	0, 432, 433, 434, 435, 436, 437, 0, 438, 440,
	439, 0, 441, 703, 0, 442, 443, 3808, 0, 444,
	445, 446, 447, 448, 449, 452, 0, 0, 450, 451,
	453, 454, 0, 455, 456, 458, 461, 457, 459, 460,
	462, 475, 463, 464, 465, 466, 467, 468, 469, 470,
	471, 472, 473, 474, 477, 0, 476, 0, 478, 479,
	480, 481, 482, 489, 491, 492, 487, 488, 490, 493,
	494, 496, 484, 485, 486, 0, 495, 483, 0, 0,
	0, 497, 498, 499, 500, 0, 704, 501, 705, 504,
	505, 0, 0, 506, 0, 507, 0, 0, 509, 510,
	511, 0, 0, 512, 513, 706, 0, 514, 0, 707,
	515, 516, 508, 517, 518, 519, 520, 521, 522, 523,
	524, 525, 0, 526, 527, 708, 528, 529, 530, 709,
	531, 532, 533, 710, 534, 711, 535, 536, 3066, 537,
	538, 539, 0, 540, 541, 542, 543, 544, 545, 546,
	712, 547, 548, 550, 549, 551, 0, 552, 0, 553,
	554, 555, 0, 0, 0, 0, 0, 556, 557, 559,
	0, 560, 561, 562, 563, 558, 564, 565, 566, 567,
	568, 0, 569, 570, 571, 0, 572, 573, 574, 575,
	576, 713, 577, 0, 578, 579, 586, 587, 588, 580,
	581, 582, 589, 590, 591, 592, 593, 0, 595, 596,
	594, 597, 598, 599, 0, 600, 601, 583, 584, 602,
	603, 0, 604, 605, 606, 607, 608, 609, 610, 714,
	0, 611, 0, 612, 613, 614, 615, 616, 618, 585,
	619, 624, 625, 715, 620, 621, 622, 623, 716, 627,
	628, 0, 629, 630, 0, 626, 617, 0, 631, 632,
	633, 634, 635, 636, 0, 637, 638, 0, 639, 717,
	718, 719, 720, 0, 649, 0, 640, 641, 642, 643,
	721, 644, 722, 0, 645, 646, 647, 648, 0, 650,
	651, 0, 3810, 652, 653, 655, 657, 658, 654, 656,
	659, 0, 660, 0, 0, 661, 662, 663, 723, 724,
	725, 0, 665, 664, 666, 667, 668, 726, 669, 670,
	285, 0, 0, 0, 671, 672, 727, 673, 674, 675,
	0, 0, 0, 0, 0, 0, 0, 291, 292, 294,
	293, 295, 296, 297, 298, 0, 299, 300, 0, 0,
	0, 0, 0, 676, 0, 0, 0, 301, 0, 302,
	303, 0, 304, 305, 306, 307, 308, 309, 310, 677,
	678, 0, 311, 679, 312, 680, 0, 681, 313, 314,
	315, 316, 317, 318, 0, 0, 0, 319, 682, 683,
	684, 3064, 320, 321, 685, 0, 0, 3058, 322, 323,
	324, 325, 326, 327, 328, 329, 0, 0, 331, 332,
	333, 330, 334, 3060, 335, 0, 336, 337, 338, 339,
	340, 341, 0, 342, 343, 344, 0, 345, 346, 347,
	0, 0, 0, 0, 0, 0, 0, 348, 349, 350,
	351, 352, 0, 353, 355, 686, 687, 0, 358, 354,
	356, 0, 359, 357, 360, 0, 361, 362, 363, 0,
	0, 364, 365, 366, 0, 367, 368, 369, 0, 370,
	371, 372, 0, 3068, 374, 688, 375, 376, 377, 379,
	381, 378, 380, 382, 383, 384, 385, 689, 690, 386,
	0, 0, 0, 0, 0, 0, 0, 387, 388, 389,
	691, 0, 0, 0, 390, 0, 391, 392, 393, 3067,
	394, 0, 0, 395, 396, 397, 692, 693, 398, 399,
	400, 401, 402, 403, 404, 405, 406, 0, 407, 694,
	0, 695, 408, 0, 409, 410, 411, 412, 413, 414,
	3057, 697, 698, 502, 0, 415, 416, 0, 417, 418,
	419, 420, 421, 0, 0, 0, 0, 422, 423, 424,
	0, 0, 503, 425, 699, 700, 0, 701, 0, 426,
	427, 0, 702, 0, 428, 429, 430, 0, 431, 0,
	0, 0, 432, 433, 434, 435, 436, 437, 0, 438,
	440, 439, 0, 441, 703, 0, 442, 443, 0, 0,
	444, 445, 446, 447, 448, 449, 452, 0, 0, 450,
	451, 453, 454, 0, 455, 456, 458, 461, 457, 459,
	460, 462, 475, 463, 464, 465, 466, 467, 468, 469,
	470, 471, 472, 473, 474, 477, 0, 476, 0, 478,
	479, 480, 481, 482, 489, 491, 492, 487, 488, 490,
	493, 494, 496, 484, 485, 486, 0, 495, 483, 0,
	0, 0, 497, 498, 499, 500, 0, 704, 501, 705,
	504, 505, 0, 0, 506, 0, 507, 0, 0, 509,
	510, 511, 0, 0, 512, 513, 706, 0, 514, 0,
	707, 515, 516, 508, 517, 518, 519, 520, 521, 522,
	523, 524, 525, 0, 526, 527, 708, 528, 529, 530,
	709, 531, 532, 533, 710, 534, 711, 535, 536, 3066,
	537, 538, 539, 0, 540, 541, 542, 543, 544, 545,
	546, 712, 547, 548, 550, 549, 551, 0, 552, 0,
	553, 554, 555, 0, 0, 0, 0, 0, 556, 557,
	559, 0, 560, 561, 562, 563, 558, 564, 565, 566,
	567, 568, 0, 569, 570, 571, 0, 572, 573, 574,
	575, 576, 713, 577, 0, 578, 579, 586, 587, 588,
	580, 581, 582, 589, 590, 591, 592, 593, 0, 595,
	596, 594, 597, 598, 599, 0, 600, 601, 583, 584,
	602, 603, 0, 604, 605, 606, 607, 608, 609, 610,
	714, 0, 611, 0, 612, 613, 614, 615, 616, 618,
	585, 619, 624, 625, 715, 620, 621, 622, 623, 716,
	627, 628, 0, 629, 630, 0, 626, 617, 0, 631,
	632, 633, 634, 635, 636, 0, 637, 638, 0, 639,
	717, 718, 719, 720, 0, 649, 0, 640, 641, 642,
	643, 721, 644, 722, 0, 645, 646, 647, 648, 0,
	650, 651, 0, 3065, 652, 653, 655, 657, 658, 654,
	656, 659, 0, 660, 0, 0, 661, 662, 663, 723,
	724, 725, 0, 665, 664, 666, 667, 668, 726, 669,
	670, 1872, 0, 285, 0, 671, 672, 727, 673, 674,
	675, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	291, 292, 294, 293, 295, 296, 297, 298, 1871, 299,
	300, 0, 0, 0, 0, 0, 676, 0, 0, 0,
	301, 0, 302, 303, 0, 304, 305, 306, 307, 308,
	309, 310, 677, 678, 0, 311, 679, 312, 680, 0,
	681, 313, 314, 315, 316, 317, 318, 0, 0, 0,
	319, 682, 683, 684, 0, 320, 321, 685, 0, 0,
	0, 322, 323, 324, 325, 326, 327, 328, 329, 0,
	0, 331, 332, 333, 330, 334, 0, 335, 0, 336,
	337, 338, 339, 340, 341, 0, 342, 343, 344, 0,
	345, 346, 347, 0, 0, 0, 0, 0, 0, 0,
	348, 349, 350, 1870, 352, 0, 353, 355, 686, 687,
	0, 358, 354, 356, 0, 359, 357, 360, 0, 361,
	362, 363, 0, 0, 364, 365, 366, 0, 367, 368,
	369, 0, 370, 371, 372, 0, 373, 374, 688, 375,
	376, 377, 379, 381, 378, 380, 382, 383, 384, 385,
	689, 690, 386, 0, 288, 0, 0, 0, 0, 0,
	387, 388, 389, 691, 0, 0, 0, 390, 0, 391,
	392, 393, 0, 394, 0, 0, 395, 396, 397, 692,
	693, 398, 399, 400, 401, 402, 403, 404, 405, 406,
	0, 407, 694, 0, 695, 408, 0, 409, 410, 411,
	412, 413, 414, 696, 697, 698, 502, 0, 415, 416,
	0, 417, 418, 419, 420, 421, 0, 0, 0, 289,
	422, 423, 424, 0, 0, 503, 425, 699, 700, 0,
	701, 0, 426, 427, 0, 702, 0, 428, 429, 430,
	0, 431, 0, 0, 0, 432, 433, 434, 435, 436,
	437, 0, 438, 440, 439, 0, 441, 703, 0, 442,
	443, 0, 0, 444, 445, 446, 447, 448, 449, 452,
	0, 0, 450, 451, 453, 454, 0, 455, 456, 458,
	461, 457, 459, 460, 462, 475, 463, 464, 465, 466,
	467, 468, 469, 470, 471, 472, 473, 474, 477, 0,
	476, 0, 478, 479, 480, 481, 482, 489, 491, 492,
	487, 488, 490, 493, 494, 496, 484, 485, 486, 0,
	495, 483, 0, 290, 0, 497, 498, 499, 500, 0,
	704, 501, 705, 504, 505, 0, 0, 506, 0, 507,
	0, 0, 509, 510, 511, 0, 0, 512, 513, 706,
	0, 514, 0, 707, 515, 516, 508, 517, 518, 519,
	520, 521, 522, 523, 524, 525, 0, 526, 527, 708,
	528, 529, 530, 709, 531, 532, 533, 710, 534, 711,
	535, 536, 0, 537, 538, 539, 0, 540, 541, 542,
	543, 544, 545, 546, 712, 547, 548, 550, 549, 551,
	0, 552, 0, 553, 554, 555, 0, 0, 0, 0,
	0, 556, 557, 559, 0, 560, 561, 562, 563, 558,
	564, 565, 566, 567, 568, 0, 569, 570, 571, 0,
	572, 573, 574, 575, 576, 713, 577, 0, 578, 579,
	586, 587, 588, 1873, 581, 582, 589, 590, 591, 592,
	593, 0, 1869, 596, 594, 597, 598, 599, 0, 600,
	601, 583, 584, 602, 603, 0, 604, 605, 606, 607,
	608, 609, 610, 714, 0, 611, 0, 612, 613, 614,
	615, 616, 618, 585, 619, 624, 625, 715, 620, 621,
	622, 623, 716, 627, 628, 0, 629, 630, 0, 626,
	617, 1867, 631, 632, 633, 634, 635, 636, 0, 637,
	638, 0, 639, 717, 718, 719, 720, 0, 649, 0,
	640, 641, 642, 643, 721, 644, 722, 0, 645, 646,
	647, 648, 0, 650, 651, 0, 0, 652, 653, 655,
	657, 658, 654, 656, 659, 0, 660, 0, 0, 661,
	662, 663, 723, 724, 725, 0, 1868, 664, 666, 667,
	668, 726, 669, 670, 1582, 0, 285, 0, 671, 672,
	727, 673, 674, 675, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 291, 292, 294, 293, 295, 296, 297,
	298, 0, 299, 300, 0, 0, 0, 0, 0, 676,
	0, 0, 0, 301, 0, 302, 303, 0, 304, 305,
	306, 307, 308, 309, 310, 677, 678, 0, 311, 679,
	312, 680, 0, 681, 313, 314, 315, 316, 317, 318,
	0, 0, 0, 319, 682, 683, 684, 0, 320, 321,
	685, 0, 0, 0, 322, 323, 324, 325, 326, 327,
	328, 329, 0, 0, 331, 332, 333, 330, 334, 0,
	335, 0, 336, 337, 338, 339, 340, 341, 0, 342,
	343, 344, 0, 345, 346, 347, 0, 0, 0, 0,
	0, 0, 0, 348, 349, 350, 351, 352, 0, 353,
	355, 686, 687, 0, 358, 354, 356, 0, 359, 357,
	360, 0, 361, 362, 363, 0, 0, 364, 365, 366,
	0, 367, 368, 369, 0, 370, 371, 372, 0, 373,
	374, 688, 375, 376, 377, 379, 381, 378, 380, 382,
	383, 384, 385, 689, 690, 386, 0, 288, 0, 0,
	0, 0, 0, 387, 388, 389, 691, 0, 0, 0,
	390, 0, 391, 392, 393, 0, 394, 0, 0, 395,
	396, 397, 692, 693, 398, 399, 400, 401, 402, 403,
	404, 405, 406, 0, 407, 694, 0, 695, 408, 0,
	409, 410, 411, 412, 413, 414, 1584, 697, 698, 502,
	0, 415, 416, 0, 417, 418, 419, 420, 421, 0,
	0, 0, 289, 422, 423, 424, 0, 0, 503, 425,
	699, 700, 0, 701, 0, 426, 427, 0, 702, 0,
	428, 429, 430, 0, 431, 0, 0, 0, 432, 433,
	434, 435, 436, 437, 0, 438, 440, 439, 0, 441,
	703, 0, 442, 443, 0, 0, 444, 445, 446, 447,
	448, 449, 452, 0, 0, 450, 451, 453, 454, 0,
	455, 456, 458, 461, 457, 459, 460, 462, 475, 463,
	464, 465, 466, 467, 468, 469, 470, 471, 472, 473,
	474, 477, 0, 476, 0, 478, 479, 480, 481, 482,
	489, 491, 492, 487, 488, 490, 493, 494, 496, 484,
	485, 486, 0, 495, 483, 0, 290, 0, 497, 498,
	499, 500, 0, 704, 501, 705, 504, 505, 0, 0,
	506, 0, 507, 0, 1327, 509, 510, 511, 0, 0,
	512, 513, 706, 0, 514, 0, 707, 515, 516, 508,
	517, 518, 519, 520, 521, 522, 523, 524, 525, 0,
	526, 527, 708, 528, 529, 530, 709, 531, 532, 533,
	710, 534, 711, 535, 536, 0, 537, 538, 539, 0,
	540, 541, 542, 543, 544, 545, 546, 712, 547, 548,
	550, 549, 551, 0, 552, 0, 553, 554, 555, 0,
	0, 0, 0, 0, 556, 557, 559, 0, 560, 561,
	562, 563, 558, 564, 565, 566, 567, 568, 0, 569,
	570, 571, 0, 572, 573, 574, 575, 576, 713, 577,
	0, 578, 579, 586, 587, 588, 580, 581, 582, 589,
	590, 591, 592, 593, 0, 595, 596, 594, 597, 598,
	599, 0, 600, 601, 583, 584, 602, 603, 0, 604,
	605, 606, 607, 608, 609, 610, 714, 0, 611, 0,
	612, 613, 614, 615, 616, 618, 585, 619, 624, 625,
	715, 620, 621, 622, 623, 716, 627, 628, 0, 629,
	630, 0, 626, 617, 0, 631, 632, 633, 634, 635,
	636, 0, 637, 638, 0, 639, 717, 718, 719, 720,
	0, 649, 0, 640, 641, 642, 643, 721, 644, 722,
	0, 645, 646, 647, 648, 0, 650, 651, 0, 0,
	652, 653, 655, 657, 658, 654, 656, 659, 0, 660,
	0, 0, 661, 662, 663, 723, 724, 725, 0, 665,
	664, 666, 667, 668, 726, 669, 670, 1579, 0, 285,
	0, 671, 672, 727, 673, 674, 675, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 291, 292, 294, 293,
	295, 296, 297, 298, 0, 299, 300, 0, 0, 0,
	0, 0, 676, 0, 0, 0, 301, 0, 302, 303,
	0, 304, 305, 306, 307, 308, 309, 310, 677, 678,
	0, 311, 679, 312, 680, 0, 681, 313, 314, 315,
	316, 317, 318, 0, 0, 0, 319, 682, 683, 684,
	0, 320, 321, 685, 0, 0, 0, 322, 323, 324,
	325, 326, 327, 328, 329, 0, 0, 331, 332, 333,
	330, 334, 0, 335, 0, 336, 337, 338, 339, 340,
	341, 0, 342, 343, 344, 0, 345, 346, 347, 0,
	0, 0, 0, 0, 0, 0, 348, 349, 350, 351,
	352, 0, 353, 355, 686, 687, 0, 358, 354, 356,
	0, 359, 357, 360, 0, 361, 362, 363, 0, 0,
	364, 365, 366, 0, 367, 368, 369, 0, 370, 371,
	372, 0, 373, 374, 688, 375, 376, 377, 379, 381,
	378, 380, 382, 383, 384, 385, 689, 690, 386, 0,
	288, 0, 0, 0, 0, 0, 387, 388, 389, 691,
	0, 0, 0, 390, 0, 391, 392, 393, 0, 394,
	0, 0, 395, 396, 397, 692, 693, 398, 399, 400,
	401, 402, 403, 404, 405, 406, 0, 407, 694, 0,
	695, 408, 0, 409, 410, 411, 412, 413, 414, 1581,
	697, 698, 502, 0, 415, 416, 0, 417, 418, 419,
	420, 421, 0, 0, 0, 289, 422, 423, 424, 0,
	0, 503, 425, 699, 700, 0, 701, 0, 426, 427,
	0, 702, 0, 428, 429, 430, 0, 431, 0, 0,
	0, 432, 433, 434, 435, 436, 437, 0, 438, 440,
	439, 0, 441, 703, 0, 442, 443, 0, 0, 444,
	445, 446, 447, 448, 449, 452, 0, 0, 450, 451,
	453, 454, 0, 455, 456, 458, 461, 457, 459, 460,
	462, 475, 463, 464, 465, 466, 467, 468, 469, 470,
	471, 472, 473, 474, 477, 0, 476, 0, 478, 479,
	480, 481, 482, 489, 491, 492, 487, 488, 490, 493,
	494, 496, 484, 485, 486, 0, 495, 483, 0, 290,
	0, 497, 498, 499, 500, 0, 704, 501, 705, 504,
	505, 0, 0, 506, 0, 507, 0, 1327, 509, 510,
	511, 0, 0, 512, 513, 706, 0, 514, 0, 707,
	515, 516, 508, 517, 518, 519, 520, 521, 522, 523,
	524, 525, 0, 526, 527, 708, 528, 529, 530, 709,
	531, 532, 533, 710, 534, 711, 535, 536, 0, 537,
	538, 539, 0, 540, 541, 542, 543, 544, 545, 546,
	712, 547, 548, 550, 549, 551, 0, 552, 0, 553,
	554, 555, 0, 0, 0, 0, 0, 556, 557, 559,
	0, 560, 561, 562, 563, 558, 564, 565, 566, 567,
	568, 0, 569, 570, 571, 0, 572, 573, 574, 575,
	576, 713, 577, 0, 578, 579, 586, 587, 588, 580,
	581, 582, 589, 590, 591, 592, 593, 0, 595, 596,
	594, 597, 598, 599, 0, 600, 601, 583, 584, 602,
	603, 0, 604, 605, 606, 607, 608, 609, 610, 714,
	0, 611, 0, 612, 613, 614, 615, 616, 618, 585,
	619, 624, 625, 715, 620, 621, 622, 623, 716, 627,
	628, 0, 629, 630, 0, 626, 617, 0, 631, 632,
	633, 634, 635, 636, 0, 637, 638, 0, 639, 717,
	718, 719, 720, 0, 649, 0, 640, 641, 642, 643,
	721, 644, 722, 0, 645, 646, 647, 648, 0, 650,
	651, 0, 0, 652, 653, 655, 657, 658, 654, 656,
	659, 0, 660, 0, 0, 661, 662, 663, 723, 724,
	725, 0, 665, 664, 666, 667, 668, 726, 669, 670,
	1485, 0, 285, 0, 671, 672, 727, 673, 674, 675,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 291,
	292, 294, 293, 295, 296, 297, 298, 0, 299, 300,
	0, 0, 0, 0, 0, 676, 0, 0, 0, 301,
	0, 302, 303, 0, 304, 305, 306, 307, 308, 309,
	310, 677, 678, 0, 311, 679, 312, 680, 0, 681,
	313, 314, 315, 316, 317, 318, 0, 0, 0, 319,
	682, 683, 684, 0, 320, 321, 685, 0, 0, 0,
	322, 323, 324, 325, 326, 327, 328, 329, 0, 0,
	331, 332, 333, 330, 334, 0, 335, 0, 336, 337,
	338, 339, 340, 341, 0, 342, 343, 344, 0, 345,
	346, 347, 0, 0, 0, 0, 0, 0, 0, 348,
	349, 350, 351, 352, 0, 353, 355, 686, 687, 0,
	358, 354, 356, 0, 359, 357, 360, 0, 361, 362,
	363, 0, 0, 364, 365, 366, 0, 367, 368, 369,
	0, 370, 371, 372, 0, 373, 374, 688, 375, 376,
	377, 379, 381, 378, 380, 382, 383, 384, 385, 689,
	690, 386, 0, 288, 0, 0, 0, 0, 0, 387,
	388, 389, 691, 0, 0, 0, 390, 0, 391, 392,
	393, 0, 394, 0, 0, 395, 396, 397, 692, 693,
	398, 399, 400, 401, 402, 403, 404, 405, 406, 0,
	407, 694, 0, 695, 408, 0, 409, 410, 411, 412,
	413, 414, 1487, 697, 698, 502, 0, 415, 416, 0,
	417, 418, 419, 420, 421, 0, 0, 0, 289, 422,
	423, 424, 0, 0, 503, 425, 699, 700, 0, 701,
	0, 426, 427, 0, 702, 0, 428, 429, 430, 0,
	431, 0, 0, 0, 432, 433, 434, 435, 436, 437,
	0, 438, 440, 439, 0, 441, 703, 0, 442, 443,
	0, 0, 444, 445, 446, 447, 448, 449, 452, 0,
	0, 450, 451, 453, 454, 0, 455, 456, 458, 461,
	457, 459, 460, 462, 475, 463, 464, 465, 466, 467,
	468, 469, 470, 471, 472, 473, 474, 477, 0, 476,
	0, 478, 479, 480, 481, 482, 489, 491, 492, 487,
	488, 490, 493, 494, 496, 484, 485, 486, 0, 495,
	483, 0, 290, 0, 497, 498, 499, 500, 0, 704,
	501, 705, 504, 505, 0, 0, 506, 0, 507, 0,
	1327, 509, 510, 511, 0, 0, 512, 513, 706, 0,
	514, 0, 707, 515, 516, 508, 517, 518, 519, 520,
	521, 522, 523, 524, 525, 0, 526, 527, 708, 528,
	529, 530, 709, 531, 532, 533, 710, 534, 711, 535,
	536, 0, 537, 538, 539, 0, 540, 541, 542, 543,
	544, 545, 546, 712, 547, 548, 550, 549, 551, 0,
	552, 0, 553, 554, 555, 0, 0, 0, 0, 0,
	556, 557, 559, 0, 560, 561, 562, 563, 558, 564,
	565, 566, 567, 568, 0, 569, 570, 571, 0, 572,
	573, 574, 575, 576, 713, 577, 0, 578, 579, 586,
	587, 588, 580, 581, 582, 589, 590, 591, 592, 593,
	0, 595, 596, 594, 597, 598, 599, 0, 600, 601,
	583, 584, 602, 603, 0, 604, 605, 606, 607, 608,
	609, 610, 714, 0, 611, 0, 612, 613, 614, 615,
	616, 618, 585, 619, 624, 625, 715, 620, 621, 622,
	623, 716, 627, 628, 0, 629, 630, 0, 626, 617,
	0, 631, 632, 633, 634, 635, 636, 0, 637, 638,
	0, 639, 717, 718, 719, 720, 0, 649, 0, 640,
	641, 642, 643, 721, 644, 722, 0, 645, 646, 647,
	648, 0, 650, 651, 0, 0, 652, 653, 655, 657,
	658, 654, 656, 659, 0, 660, 0, 0, 661, 662,
	663, 723, 724, 725, 0, 665, 664, 666, 667, 668,
	726, 669, 670, 760, 0, 285, 0, 671, 672, 727,
	673, 674, 675, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 291, 292, 294, 293, 295, 759, 297, 298,
	748, 299, 300, 0, 0, 0, 0, 0, 676, 0,
	0, 0, 301, 0, 302, 303, 0, 304, 305, 306,
	307, 308, 309, 310, 677, 678, 0, 311, 679, 312,
	680, 0, 681, 313, 314, 315, 316, 317, 318, 0,
	0, 0, 319, 682, 683, 684, 0, 320, 321, 685,
	0, 0, 0, 322, 323, 324, 325, 326, 327, 328,
	329, 0, 0, 331, 332, 333, 330, 334, 0, 335,
	0, 336, 337, 338, 339, 340, 341, 751, 342, 343,
	344, 0, 345, 346, 347, 0, 0, 0, 0, 0,
	0, 0, 348, 349, 350, 351, 352, 0, 353, 355,
	686, 687, 0, 358, 354, 356, 0, 359, 357, 360,
	0, 361, 362, 363, 0, 0, 364, 365, 366, 0,
	367, 368, 369, 0, 370, 371, 372, 0, 373, 374,
	688, 375, 376, 377, 379, 381, 378, 380, 382, 383,
	384, 385, 689, 690, 386, 0, 0, 0, 0, 0,
	0, 0, 387, 388, 389, 691, 0, 0, 0, 390,
	0, 391, 392, 393, 0, 394, 0, 0, 395, 396,
	397, 692, 693, 398, 399, 400, 401, 402, 403, 404,
	405, 406, 757, 407, 694, 0, 695, 408, 0, 409,
	410, 411, 412, 413, 414, 696, 697, 698, 502, 0,
	415, 416, 0, 417, 418, 419, 420, 421, 0, 0,
	0, 0, 422, 423, 424, 0, 0, 503, 425, 699,
	700, 0, 701, 0, 426, 427, 0, 702, 0, 428,
	429, 430, 0, 431, 0, 0, 0, 432, 433, 434,
	435, 436, 437, 0, 438, 440, 439, 0, 441, 703,
	0, 442, 443, 0, 0, 444, 445, 446, 447, 448,
	449, 452, 0, 0, 450, 451, 453, 454, 0, 455,
	456, 458, 461, 457, 459, 460, 462, 475, 463, 464,
	465, 466, 467, 468, 469, 470, 471, 472, 473, 474,
	477, 0, 476, 0, 478, 479, 480, 481, 482, 489,
	491, 492, 487, 488, 490, 493, 494, 496, 484, 485,
	486, 0, 495, 483, 0, 0, 0, 497, 498, 499,
	500, 0, 704, 501, 705, 504, 505, 0, 0, 506,
	0, 507, 0, 0, 509, 510, 511, 0, 0, 512,
	513, 706, 0, 514, 0, 707, 515, 516, 508, 517,
	518, 519, 520, 521, 522, 523, 524, 525, 0, 526,
	527, 708, 528, 529, 530, 709, 531, 532, 533, 710,
	534, 711, 535, 536, 0, 537, 538, 539, 0, 540,
	541, 542, 543, 544, 545, 546, 712, 547, 548, 550,
	549, 551, 0, 552, 0, 553, 554, 555, 0, 0,
	0, 0, 0, 556, 557, 559, 0, 560, 561, 562,
	563, 558, 564, 565, 566, 567, 568, 0, 569, 570,
	571, 0, 572, 573, 574, 575, 576, 713, 577, 0,
	578, 579, 586, 587, 588, 580, 581, 582, 589, 590,
	591, 592, 593, 753, 595, 596, 594, 597, 598, 599,
	0, 600, 601, 583, 584, 602, 603, 0, 604, 605,
	606, 607, 608, 609, 610, 714, 0, 611, 0, 612,
	613, 614, 615, 616, 618, 585, 619, 624, 625, 715,
	620, 621, 622, 623, 716, 627, 628, 0, 629, 630,
	0, 626, 617, 0, 631, 632, 633, 634, 635, 636,
	0, 637, 638, 0, 639, 717, 718, 719, 720, 0,
	649, 0, 640, 641, 642, 643, 721, 644, 722, 0,
	645, 646, 647, 648, 0, 650, 651, 0, 0, 652,
	653, 655, 657, 658, 654, 656, 659, 0, 660, 0,
	0, 661, 662, 663, 723, 724, 725, 0, 665, 664,
	666, 667, 668, 726, 669, 670, 747, 0, 285, 0,
	671, 672, 727, 673, 674, 675, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 291, 292, 294, 293, 295,
	296, 297, 298, 748, 299, 300, 0, 0, 0, 0,
	0, 676, 0, 0, 0, 301, 0, 302, 303, 0,
	304, 305, 306, 307, 308, 309, 310, 677, 678, 0,
	311, 679, 312, 680, 0, 681, 313, 314, 315, 316,
	317, 318, 0, 0, 0, 319, 682, 683, 684, 0,
	320, 321, 685, 0, 0, 0, 322, 323, 324, 325,
	326, 327, 328, 329, 0, 0, 331, 332, 333, 330,
	334, 0, 335, 0, 336, 337, 338, 339, 340, 341,
	751, 342, 343, 344, 0, 345, 346, 347, 0, 0,
	0, 0, 0, 0, 0, 348, 349, 350, 351, 352,
	0, 353, 355, 686, 687, 0, 358, 354, 356, 0,
	359, 357, 360, 0, 361, 362, 363, 0, 0, 364,
	365, 366, 0, 367, 368, 369, 0, 370, 371, 372,
	0, 373, 374, 688, 375, 376, 377, 379, 381, 378,
	380, 382, 383, 384, 385, 689, 690, 386, 0, 0,
	0, 0, 0, 0, 0, 387, 388, 389, 691, 0,
	0, 0, 390, 0, 391, 392, 393, 0, 394, 0,
	0, 395, 396, 397, 692, 693, 398, 399, 400, 401,
	402, 403, 404, 405, 406, 752, 407, 694, 0, 695,
	408, 0, 409, 410, 411, 412, 413, 414, 696, 697,
	698, 502, 0, 415, 416, 0, 417, 418, 419, 420,
	421, 0, 0, 0, 0, 422, 423, 424, 0, 0,
	503, 425, 699, 700, 0, 701, 0, 426, 427, 0,
	702, 0, 428, 429, 430, 0, 431, 0, 0, 0,
	432, 433, 434, 435, 436, 437, 0, 438, 440, 439,
	0, 441, 703, 0, 442, 443, 0, 0, 444, 445,
	446, 447, 448, 449, 452, 0, 0, 450, 451, 453,
	454, 0, 455, 456, 458, 461, 457, 459, 460, 462,
	475, 463, 464, 465, 466, 467, 468, 469, 470, 471,
	472, 473, 474, 477, 0, 476, 0, 478, 479, 480,
	481, 482, 489, 491, 492, 487, 488, 490, 493, 494,
	496, 484, 485, 486, 0, 495, 483, 0, 0, 0,
	497, 498, 499, 500, 0, 704, 501, 705, 504, 505,
	0, 0, 506, 0, 507, 0, 0, 509, 510, 511,
	0, 0, 512, 513, 706, 0, 514, 0, 707, 515,
	516, 508, 517, 518, 519, 520, 521, 522, 523, 524,
	525, 0, 526, 527, 708, 528, 529, 530, 709, 531,
	532, 533, 710, 534, 711, 535, 536, 0, 537, 538,
	539, 0, 540, 541, 542, 543, 544, 545, 546, 712,
	547, 548, 550, 549, 551, 0, 552, 0, 553, 554,
	555, 0, 0, 0, 0, 0, 556, 557, 559, 0,
	560, 561, 562, 563, 558, 564, 565, 566, 567, 568,
	0, 569, 570, 571, 0, 572, 573, 574, 575, 576,
	713, 577, 0, 578, 579, 586, 587, 588, 580, 581,
	582, 589, 590, 591, 592, 593, 753, 595, 596, 594,
	597, 598, 599, 0, 600, 601, 583, 584, 602, 603,
	0, 604, 605, 606, 607, 608, 609, 610, 714, 0,
	611, 0, 612, 613, 614, 615, 616, 618, 585, 619,
	624, 625, 715, 620, 621, 622, 623, 716, 627, 628,
	0, 629, 630, 0, 626, 617, 0, 631, 632, 633,
	634, 635, 636, 0, 637, 638, 0, 639, 717, 718,
	719, 720, 0, 649, 0, 640, 641, 642, 643, 721,
	644, 722, 0, 645, 646, 647, 648, 0, 650, 651,
	0, 0, 652, 653, 655, 657, 658, 654, 656, 659,
	0, 660, 0, 0, 661, 662, 663, 723, 724, 725,
	0, 665, 664, 666, 667, 668, 726, 669, 670, 285,
	0, 0, 0, 671, 672, 727, 673, 674, 675, 0,
	0, 0, 0, 0, 0, 0, 291, 292, 294, 293,
	295, 296, 297, 298, 748, 299, 300, 0, 0, 0,
	0, 0, 676, 0, 0, 0, 301, 0, 302, 303,
	0, 304, 305, 306, 307, 308, 309, 310, 677, 678,
	0, 311, 679, 312, 680, 0, 681, 313, 314, 315,
	316, 317, 318, 0, 0, 0, 319, 682, 683, 684,
	0, 320, 321, 685, 0, 0, 0, 322, 323, 324,
	325, 326, 327, 328, 329, 0, 0, 331, 332, 333,
	330, 334, 0, 335, 0, 336, 337, 338, 339, 340,
	341, 751, 342, 343, 344, 0, 345, 346, 347, 0,
	0, 0, 0, 0, 0, 0, 348, 349, 350, 351,
	352, 0, 353, 355, 686, 687, 0, 358, 354, 356,
	0, 359, 357, 360, 0, 361, 362, 363, 0, 0,
	364, 365, 366, 0, 367, 368, 369, 0, 370, 371,
	372, 0, 373, 374, 688, 375, 376, 377, 379, 381,
	378, 380, 382, 383, 384, 385, 689, 690, 386, 0,
	0, 0, 0, 0, 0, 0, 387, 388, 389, 691,
	0, 0, 0, 390, 0, 391, 392, 393, 0, 394,
	0, 0, 395, 396, 397, 692, 693, 398, 399, 400,
	401, 402, 403, 404, 405, 406, 752, 407, 694, 0,
	695, 408, 0, 409, 410, 411, 412, 413, 414, 696,
	697, 698, 502, 0, 415, 416, 0, 417, 418, 419,
	420, 421, 0, 0, 0, 0, 422, 423, 424, 0,
	0, 503, 425, 699, 700, 0, 701, 0, 426, 427,
	0, 702, 0, 428, 429, 430, 0, 431, 0, 0,
	0, 432, 433, 434, 435, 436, 437, 0, 438, 440,
	439, 0, 441, 703, 0, 442, 443, 0, 0, 444,
	445, 446, 447, 448, 449, 452, 0, 0, 450, 451,
	453, 454, 0, 455, 456, 458, 461, 457, 459, 460,
	462, 475, 463, 464, 465, 466, 467, 468, 469, 470,
	471, 472, 473, 474, 477, 0, 476, 0, 478, 479,
	480, 481, 482, 489, 491, 492, 487, 488, 490, 493,
	494, 496, 484, 485, 486, 0, 495, 483, 0, 0,
	0, 497, 498, 499, 500, 0, 704, 501, 705, 504,
	505, 0, 0, 506, 0, 507, 0, 0, 509, 510,
	511, 0, 0, 512, 513, 706, 0, 514, 0, 707,
	515, 516, 508, 517, 518, 519, 520, 521, 522, 523,
	524, 525, 0, 526, 527, 708, 528, 529, 530, 709,
	531, 532, 533, 710, 534, 711, 535, 536, 0, 537,
	538, 539, 0, 540, 541, 542, 543, 544, 545, 546,
	712, 547, 548, 550, 549, 551, 0, 552, 0, 553,
	554, 555, 0, 0, 0, 0, 0, 556, 557, 559,
	0, 560, 561, 562, 563, 558, 564, 565, 566, 567,
	568, 0, 569, 570, 571, 0, 572, 573, 574, 575,
	576, 713, 577, 0, 578, 579, 586, 587, 588, 580,
	581, 582, 589, 590, 591, 592, 593, 753, 595, 596,
	594, 597, 598, 599, 0, 600, 601, 583, 584, 602,
	603, 0, 604, 605, 606, 607, 608, 609, 610, 714,
	0, 611, 0, 612, 613, 614, 615, 616, 618, 585,
	619, 624, 625, 715, 620, 621, 622, 623, 716, 627,
	628, 0, 629, 630, 0, 626, 617, 0, 631, 632,
	633, 634, 635, 636, 0, 637, 638, 0, 639, 717,
	718, 719, 720, 0, 649, 0, 640, 641, 642, 643,
	721, 644, 722, 0, 645, 646, 647, 648, 0, 650,
	651, 0, 0, 652, 653, 655, 657, 658, 654, 656,
	659, 0, 660, 0, 0, 661, 662, 663, 723, 724,
	725, 0, 665, 664, 666, 667, 668, 726, 669, 670,
	285, 0, 0, 0, 671, 672, 727, 673, 674, 675,
	0, 0, 0, 0, 0, 0, 0, 291, 292, 294,
	293, 295, 296, 297, 298, 748, 299, 300, 0, 0,
	0, 0, 0, 676, 0, 0, 0, 301, 0, 302,
	303, 0, 304, 305, 306, 307, 308, 309, 310, 677,
	678, 0, 311, 679, 312, 680, 0, 681, 313, 314,
	315, 316, 317, 318, 0, 0, 0, 319, 682, 683,
	684, 0, 320, 321, 685, 0, 0, 0, 322, 323,
	324, 325, 326, 327, 328, 329, 0, 0, 331, 332,
	333, 330, 334, 0, 335, 0, 336, 337, 338, 339,
	340, 341, 751, 342, 343, 344, 0, 345, 346, 347,
	0, 0, 0, 0, 0, 0, 0, 348, 349, 350,
	351, 352, 0, 353, 355, 686, 687, 0, 358, 354,
	356, 0, 359, 357, 360, 0, 361, 362, 363, 0,
	0, 364, 365, 366, 0, 367, 368, 369, 0, 370,
	371, 372, 0, 373, 374, 688, 375, 376, 377, 379,
	381, 378, 380, 382, 383, 384, 385, 689, 690, 386,
	0, 0, 0, 0, 0, 0, 0, 387, 388, 389,
	691, 0, 0, 0, 390, 0, 391, 392, 393, 0,
	394, 0, 0, 395, 396, 397, 692, 693, 398, 399,
	400, 401, 402, 403, 404, 405, 406, 4209, 407, 694,
	0, 695, 408, 0, 409, 410, 411, 412, 413, 414,
	696, 697, 698, 502, 0, 415, 416, 0, 417, 418,
	419, 420, 421, 0, 0, 0, 0, 422, 423, 424,
	0, 0, 503, 425, 699, 700, 0, 701, 0, 426,
	427, 0, 702, 0, 428, 429, 430, 0, 431, 0,
	0, 0, 432, 433, 434, 435, 436, 437, 0, 438,
	440, 439, 0, 441, 703, 0, 442, 443, 0, 0,
	444, 445, 446, 447, 448, 449, 452, 0, 0, 450,
	451, 453, 454, 0, 455, 456, 458, 461, 457, 459,
	460, 462, 475, 463, 464, 465, 466, 467, 468, 469,
	470, 471, 472, 473, 474, 477, 0, 476, 0, 478,
	479, 480, 481, 482, 489, 491, 492, 487, 488, 490,
	493, 494, 496, 484, 485, 486, 0, 495, 483, 0,
	0, 0, 497, 498, 499, 500, 0, 704, 501, 705,
	504, 505, 0, 0, 506, 0, 507, 0, 0, 509,
	510, 511, 0, 0, 512, 513, 706, 0, 514, 0,
	707, 515, 516, 508, 517, 518, 519, 520, 521, 522,
	523, 524, 525, 0, 526, 527, 708, 528, 529, 530,
	709, 531, 532, 533, 710, 534, 711, 535, 536, 0,
	537, 538, 539, 0, 540, 541, 542, 543, 544, 545,
	546, 712, 547, 548, 550, 549, 551, 0, 552, 0,
	553, 554, 555, 0, 0, 0, 0, 0, 556, 557,
	559, 0, 560, 561, 562, 563, 558, 564, 565, 566,
	567, 568, 0, 569, 570, 571, 0, 572, 573, 574,
	575, 576, 713, 577, 0, 578, 579, 586, 587, 588,
	580, 581, 582, 589, 590, 591, 592, 593, 753, 595,
	596, 594, 597, 598, 599, 0, 600, 601, 583, 584,
	602, 603, 0, 604, 605, 606, 607, 608, 609, 610,
	714, 0, 611, 0, 612, 613, 614, 615, 616, 618,
	585, 619, 624, 625, 715, 620, 621, 622, 623, 716,
	627, 628, 0, 629, 630, 0, 626, 617, 0, 631,
	632, 633, 634, 635, 636, 0, 637, 638, 0, 639,
	717, 718, 719, 720, 0, 649, 0, 640, 641, 642,
	643, 721, 644, 722, 0, 645, 646, 647, 648, 0,
	650, 651, 0, 0, 652, 653, 655, 657, 658, 654,
	656, 659, 0, 660, 0, 0, 661, 662, 663, 723,
	724, 725, 0, 665, 664, 666, 667, 668, 726, 669,
	670, 285, 0, 0, 0, 671, 672, 727, 673, 674,
	675, 0, 0, 0, 0, 0, 0, 0, 291, 292,
	294, 293, 295, 296, 297, 298, 0, 299, 300, 0,
	0, 0, 0, 0, 676, 0, 0, 0, 301, 0,
	302, 303, 0, 304, 305, 306, 307, 308, 309, 310,
	677, 678, 0, 311, 679, 312, 680, 0, 681, 313,
	314, 315, 316, 317, 318, 0, 0, 0, 319, 682,
	683, 684, 0, 320, 321, 685, 0, 0, 0, 322,
	323, 324, 325, 326, 327, 328, 329, 0, 0, 331,
	332, 333, 330, 334, 0, 335, 0, 336, 337, 338,
	339, 340, 341, 0, 342, 343, 344, 0, 345, 346,
	347, 0, 0, 0, 0, 0, 0, 0, 348, 349,
	350, 351, 352, 0, 353, 355, 686, 687, 0, 358,
	354, 356, 0, 359, 357, 360, 0, 361, 362, 363,
	0, 0, 364, 365, 366, 0, 367, 368, 369, 0,
	370, 371, 372, 0, 373, 374, 688, 375, 376, 377,
	379, 381, 378, 380, 382, 383, 384, 385, 689, 690,
	386, 0, 288, 0, 0, 0, 0, 0, 387, 388,
	389, 691, 0, 0, 0, 390, 0, 391, 392, 393,
	0, 394, 0, 0, 395, 396, 397, 692, 693, 398,
	399, 400, 401, 402, 403, 404, 405, 406, 0, 407,
	694, 0, 695, 408, 0, 409, 410, 411, 412, 413,
	414, 696, 697, 698, 502, 0, 415, 416, 0, 417,
	418, 419, 420, 421, 0, 0, 0, 289, 422, 423,
	424, 0, 0, 503, 425, 699, 700, 0, 701, 0,
	426, 427, 0, 702, 0, 428, 429, 430, 0, 431,
	0, 0, 0, 432, 433, 434, 435, 436, 437, 0,
	438, 440, 439, 0, 441, 703, 0, 442, 443, 0,
	0, 444, 445, 446, 447, 448, 449, 452, 0, 0,
	450, 451, 453, 454, 0, 455, 456, 458, 461, 457,
	459, 460, 462, 475, 463, 464, 465, 466, 467, 468,
	469, 470, 471, 472, 473, 474, 477, 0, 476, 0,
	478, 479, 480, 481, 482, 489, 491, 492, 487, 488,
	490, 493, 494, 496, 484, 485, 486, 0, 495, 483,
	0, 290, 0, 497, 498, 499, 500, 0, 704, 501,
	705, 504, 505, 0, 0, 506, 0, 507, 0, 1327,
	509, 510, 511, 0, 0, 512, 513, 706, 0, 514,
	0, 707, 515, 516, 508, 517, 518, 519, 520, 521,
	522, 523, 524, 525, 0, 526, 527, 708, 528, 529,
	530, 709, 531, 532, 533, 710, 534, 711, 535, 536,
	0, 537, 538, 539, 0, 540, 541, 542, 543, 544,
	545, 546, 712, 547, 548, 550, 549, 551, 0, 552,
	0, 553, 554, 555, 0, 0, 0, 0, 0, 556,
	557, 559, 0, 560, 561, 562, 563, 558, 564, 565,
	566, 567, 568, 0, 569, 570, 571, 0, 572, 573,
	574, 575, 576, 713, 577, 0, 578, 579, 586, 587,
	588, 580, 581, 582, 589, 590, 591, 592, 593, 0,
	595, 596, 594, 597, 598, 599, 0, 600, 601, 583,
	584, 602, 603, 0, 604, 605, 606, 607, 608, 609,
	610, 714, 0, 611, 0, 612, 613, 614, 615, 616,
	618, 585, 619, 624, 625, 715, 620, 621, 622, 623,
	716, 627, 628, 0, 629, 630, 0, 626, 617, 0,
	631, 632, 633, 634, 635, 636, 0, 637, 638, 0,
	639, 717, 718, 719, 720, 0, 649, 0, 640, 641,
	642, 643, 721, 644, 722, 0, 645, 646, 647, 648,
	0, 650, 651, 0, 0, 652, 653, 655, 657, 658,
	654, 656, 659, 0, 660, 0, 0, 661, 662, 663,
	723, 724, 725, 0, 665, 664, 666, 667, 668, 726,
	669, 670, 285, 0, 0, 0, 671, 672, 727, 673,
	674, 675, 0, 0, 0, 0, 0, 0, 0, 291,
	292, 294, 293, 295, 296, 297, 298, 0, 299, 300,
	0, 0, 0, 0, 0, 676, 0, 0, 0, 301,
	0, 302, 303, 0, 304, 305, 306, 307, 308, 309,
	310, 677, 678, 0, 311, 679, 312, 680, 0, 681,
	313, 314, 315, 316, 317, 318, 0, 0, 0, 319,
	682, 683, 684, 0, 320, 321, 685, 0, 0, 0,
	322, 323, 324, 325, 326, 327, 328, 329, 0, 0,
	331, 332, 333, 330, 334, 0, 335, 0, 336, 337,
	338, 339, 340, 341, 0, 342, 343, 344, 0, 345,
	346, 347, 0, 0, 0, 0, 0, 0, 0, 348,
	349, 350, 351, 352, 0, 353, 355, 686, 687, 0,
	358, 354, 356, 0, 359, 357, 360, 0, 361, 362,
	363, 0, 0, 364, 365, 366, 0, 367, 368, 369,
	0, 370, 371, 372, 0, 373, 374, 688, 375, 376,
	377, 379, 381, 378, 380, 382, 383, 384, 385, 689,
	690, 386, 0, 288, 0, 0, 0, 0, 0, 387,
	388, 389, 691, 0, 0, 0, 390, 0, 391, 392,
	393, 0, 394, 0, 0, 395, 396, 397, 692, 693,
	398, 399, 400, 401, 402, 403, 404, 405, 406, 0,
	407, 694, 0, 695, 408, 0, 409, 410, 411, 412,
	413, 414, 696, 697, 698, 502, 0, 415, 416, 0,
	417, 418, 419, 420, 421, 0, 0, 0, 289, 422,
	423, 424, 0, 0, 503, 425, 699, 700, 0, 701,
	0, 426, 427, 0, 702, 0, 428, 429, 430, 0,
	431, 0, 0, 0, 432, 433, 434, 435, 436, 437,
	0, 438, 440, 439, 0, 441, 703, 0, 442, 443,
	0, 0, 444, 445, 446, 447, 448, 449, 452, 0,
	0, 450, 451, 453, 454, 0, 455, 456, 458, 461,
	457, 459, 460, 462, 475, 463, 464, 465, 466, 467,
	468, 469, 470, 471, 472, 473, 474, 477, 0, 476,
	0, 478, 479, 480, 481, 482, 489, 491, 492, 487,
	488, 490, 493, 494, 496, 484, 485, 486, 3711, 495,
	483, 0, 290, 0, 497, 498, 499, 500, 0, 704,
	501, 705, 504, 505, 0, 0, 506, 0, 507, 0,
	0, 509, 510, 511, 0, 0, 512, 513, 706, 0,
	514, 0, 707, 515, 516, 508, 517, 518, 519, 520,
	521, 522, 523, 524, 525, 0, 526, 527, 708, 528,
	529, 530, 709, 531, 532, 533, 710, 534, 711, 535,
	536, 0, 537, 538, 539, 0, 540, 541, 542, 543,
	544, 545, 546, 712, 547, 548, 550, 549, 551, 0,
	552, 0, 553, 554, 555, 0, 0, 0, 0, 0,
	556, 557, 559, 0, 560, 561, 562, 563, 558, 564,
	565, 566, 567, 568, 0, 569, 570, 571, 0, 572,
	573, 574, 575, 576, 713, 577, 0, 578, 579, 586,
	587, 588, 580, 581, 582, 589, 590, 591, 592, 593,
	0, 595, 596, 594, 597, 598, 599, 0, 600, 601,
	583, 584, 602, 603, 0, 604, 605, 606, 607, 608,
	609, 610, 714, 0, 611, 0, 612, 613, 614, 615,
	616, 618, 585, 619, 624, 625, 715, 620, 621, 622,
	623, 716, 627, 628, 0, 629, 630, 0, 626, 617,
	0, 631, 632, 633, 634, 635, 636, 0, 637, 638,
	0, 639, 717, 718, 719, 720, 0, 649, 0, 640,
	641, 642, 643, 721, 644, 722, 0, 645, 646, 647,
	648, 0, 650, 651, 0, 0, 652, 653, 655, 657,
	658, 654, 656, 659, 0, 660, 0, 0, 661, 662,
	663, 723, 724, 725, 0, 665, 664, 666, 667, 668,
	726, 669, 670, 3250, 0, 285, 0, 671, 672, 727,
	673, 674, 675, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 291, 292, 294, 293, 295, 296, 297, 298,
	0, 299, 300, 0, 0, 0, 0, 0, 676, 0,
	0, 0, 301, 0, 302, 303, 0, 304, 305, 306,
	307, 308, 309, 310, 677, 678, 0, 311, 679, 312,
	680, 0, 681, 313, 314, 315, 316, 317, 318, 0,
	0, 0, 319, 682, 683, 684, 0, 320, 321, 685,
	0, 0, 0, 322, 323, 324, 325, 326, 327, 328,
	329, 0, 0, 331, 332, 333, 330, 334, 0, 335,
	0, 336, 337, 338, 339, 340, 341, 0, 342, 343,
	344, 0, 345, 346, 347, 0, 0, 0, 0, 0,
	0, 0, 348, 349, 350, 351, 352, 0, 353, 355,
	686, 687, 0, 358, 354, 356, 0, 359, 357, 360,
	0, 361, 362, 363, 0, 0, 364, 365, 366, 0,
	367, 368, 369, 0, 370, 371, 372, 0, 373, 374,
	688, 375, 376, 377, 379, 381, 378, 380, 382, 383,
	384, 385, 689, 690, 386, 0, 288, 0, 0, 0,
	0, 0, 387, 388, 389, 691, 0, 0, 0, 390,
	0, 391, 392, 393, 0, 394, 0, 0, 395, 396,
	397, 692, 693, 398, 399, 400, 401, 402, 403, 404,
	405, 406, 0, 407, 694, 0, 695, 408, 0, 409,
	410, 411, 412, 413, 414, 3249, 697, 698, 502, 0,
	415, 416, 0, 417, 418, 419, 420, 421, 0, 0,
	0, 289, 422, 423, 424, 0, 0, 503, 425, 699,
	700, 0, 701, 0, 426, 427, 0, 702, 0, 428,
	429, 430, 0, 431, 0, 0, 0, 432, 433, 434,
	435, 436, 437, 0, 438, 440, 439, 0, 441, 703,
	0, 442, 443, 0, 0, 444, 445, 446, 447, 448,
	449, 452, 0, 0, 450, 451, 453, 454, 0, 455,
	456, 458, 461, 457, 459, 460, 462, 475, 463, 464,
	465, 466, 467, 468, 469, 470, 471, 472, 473, 474,
	477, 0, 476, 0, 478, 479, 480, 481, 482, 489,
	491, 492, 487, 488, 490, 493, 494, 496, 484, 485,
	486, 0, 495, 483, 0, 290, 0, 497, 498, 499,
	500, 0, 704, 501, 705, 504, 505, 0, 0, 506,
	0, 507, 0, 0, 509, 510, 511, 0, 0, 512,
	513, 706, 0, 514, 0, 707, 515, 516, 508, 517,
	518, 519, 520, 521, 522, 523, 524, 525, 0, 526,
	527, 708, 528, 529, 530, 709, 531, 532, 533, 710,
	534, 711, 535, 536, 0, 537, 538, 539, 0, 540,
	541, 542, 543, 544, 545, 546, 712, 547, 548, 550,
	549, 551, 0, 552, 0, 553, 554, 555, 0, 0,
	0, 0, 0, 556, 557, 559, 0, 560, 561, 562,
	563, 558, 564, 565, 566, 567, 568, 0, 569, 570,
	571, 0, 572, 573, 574, 575, 576, 713, 577, 0,
	578, 579, 586, 587, 588, 580, 581, 582, 589, 590,
	591, 592, 593, 0, 595, 596, 594, 597, 598, 599,
	0, 600, 601, 583, 584, 602, 603, 0, 604, 605,
	606, 607, 608, 609, 610, 714, 0, 611, 0, 612,
	613, 614, 615, 616, 618, 585, 619, 624, 625, 715,
	620, 621, 622, 623, 716, 627, 628, 0, 629, 630,
	0, 626, 617, 0, 631, 632, 633, 634, 635, 636,
	0, 637, 638, 0, 639, 717, 718, 719, 720, 0,
	649, 0, 640, 641, 642, 643, 721, 644, 722, 0,
	645, 646, 647, 648, 0, 650, 651, 0, 0, 652,
	653, 655, 657, 658, 654, 656, 659, 0, 660, 0,
	0, 661, 662, 663, 723, 724, 725, 0, 665, 664,
	666, 667, 668, 726, 669, 670, 285, 0, 0, 0,
	671, 672, 727, 673, 674, 675, 0, 0, 0, 0,
	0, 0, 0, 291, 292, 294, 293, 295, 296, 297,
	298, 0, 299, 300, 0, 0, 0, 0, 0, 676,
	0, 0, 0, 301, 0, 302, 303, 0, 304, 305,
	306, 307, 308, 309, 310, 677, 678, 0, 311, 679,
	312, 680, 0, 681, 313, 314, 315, 316, 317, 318,
	0, 0, 0, 319, 682, 683, 684, 0, 320, 321,
	685, 0, 0, 0, 322, 323, 324, 325, 326, 327,
	328, 329, 0, 0, 331, 332, 333, 330, 334, 0,
	335, 0, 336, 337, 338, 339, 340, 341, 0, 342,
	343, 344, 0, 345, 346, 347, 0, 0, 0, 0,
	0, 0, 0, 348, 349, 350, 351, 352, 0, 353,
	355, 686, 687, 0, 358, 354, 356, 0, 359, 357,
	360, 0, 361, 362, 363, 0, 0, 364, 365, 366,
	0, 367, 368, 369, 0, 370, 371, 372, 0, 373,
	374, 688, 375, 376, 377, 379, 381, 378, 380, 382,
	383, 384, 385, 689, 690, 386, 0, 288, 0, 0,
	0, 0, 0, 387, 388, 389, 691, 0, 0, 0,
	390, 0, 391, 392, 393, 0, 394, 0, 0, 395,
	396, 397, 692, 693, 398, 399, 400, 401, 402, 403,
	404, 405, 406, 0, 407, 694, 0, 695, 408, 0,
	409, 410, 411, 412, 413, 414, 696, 697, 698, 502,
	0, 415, 416, 0, 417, 418, 419, 420, 421, 0,
	0, 0, 289, 422, 423, 424, 0, 0, 503, 425,
	699, 700, 0, 701, 0, 426, 427, 0, 702, 0,
	428, 429, 430, 0, 431, 0, 0, 0, 432, 433,
	434, 435, 436, 437, 0, 438, 440, 439, 0, 441,
	703, 0, 442, 443, 0, 0, 444, 445, 446, 447,
	448, 449, 452, 0, 0, 450, 451, 453, 454, 0,
	455, 456, 458, 461, 457, 459, 460, 462, 475, 463,
	464, 465, 466, 467, 468, 469, 470, 471, 472, 473,
	474, 477, 0, 476, 0, 478, 479, 480, 481, 482,
	489, 491, 492, 487, 488, 490, 493, 494, 496, 484,
	485, 486, 0, 495, 483, 0, 290, 0, 497, 498,
	499, 500, 0, 704, 501, 705, 504, 505, 0, 0,
	506, 0, 507, 0, 0, 509, 510, 511, 0, 0,
	512, 513, 706, 0, 514, 0, 707, 515, 516, 508,
	517, 518, 519, 520, 521, 522, 523, 524, 525, 0,
	526, 527, 708, 528, 529, 530, 709, 531, 532, 533,
	710, 534, 711, 535, 536, 0, 537, 538, 539, 0,
	540, 541, 542, 543, 544, 545, 546, 712, 547, 548,
	550, 549, 551, 0, 552, 0, 553, 554, 555, 0,
	0, 0, 0, 0, 556, 557, 559, 0, 560, 561,
	562, 563, 558, 564, 565, 566, 567, 568, 0, 569,
	570, 571, 0, 572, 573, 574, 575, 576, 713, 577,
	0, 578, 579, 586, 587, 588, 580, 581, 582, 589,
	590, 591, 592, 593, 0, 595, 596, 594, 597, 598,
	599, 0, 600, 601, 583, 584, 602, 603, 0, 604,
	605, 606, 607, 608, 609, 610, 714, 0, 611, 0,
	612, 613, 614, 615, 616, 618, 585, 619, 624, 625,
	715, 620, 621, 622, 623, 716, 627, 628, 0, 629,
	630, 0, 626, 617, 2436, 631, 632, 633, 634, 635,
	636, 0, 637, 638, 0, 639, 717, 718, 719, 720,
	0, 649, 0, 640, 641, 642, 643, 721, 644, 722,
	0, 645, 646, 647, 648, 0, 650, 651, 0, 0,
	652, 653, 655, 657, 658, 654, 656, 659, 0, 660,
	0, 0, 661, 662, 663, 723, 724, 725, 0, 665,
	664, 666, 667, 668, 726, 669, 670, 2499, 0, 285,
	0, 671, 672, 727, 673, 674, 675, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 291, 292, 294, 293,
	295, 296, 297, 298, 0, 299, 300, 0, 0, 0,
	0, 0, 676, 0, 0, 0, 301, 0, 302, 303,
	0, 304, 305, 306, 307, 308, 309, 310, 677, 678,
	0, 311, 679, 312, 680, 0, 681, 313, 314, 315,
	316, 317, 318, 0, 0, 0, 319, 682, 683, 684,
	0, 320, 321, 685, 0, 0, 0, 322, 323, 324,
	325, 326, 327, 328, 329, 0, 0, 331, 332, 333,
	330, 334, 0, 335, 0, 336, 337, 338, 339, 340,
	341, 0, 342, 343, 344, 0, 345, 346, 347, 0,
	0, 0, 0, 0, 0, 0, 348, 349, 350, 351,
	352, 0, 353, 355, 686, 687, 0, 358, 354, 356,
	0, 359, 357, 360, 0, 361, 362, 363, 0, 0,
	364, 365, 366, 0, 367, 368, 369, 0, 370, 371,
	372, 0, 373, 374, 688, 375, 376, 377, 379, 381,
	378, 380, 382, 383, 384, 385, 689, 690, 386, 0,
	288, 0, 0, 0, 0, 0, 387, 388, 389, 691,
	0, 0, 0, 390, 0, 391, 392, 393, 0, 394,
	0, 0, 395, 396, 397, 692, 693, 398, 399, 400,
	401, 402, 403, 404, 405, 406, 0, 407, 694, 0,
	695, 408, 0, 409, 410, 411, 412, 413, 414, 696,
	697, 698, 502, 0, 415, 416, 0, 417, 418, 419,
	420, 421, 0, 0, 0, 289, 422, 423, 424, 0,
	0, 503, 425, 699, 700, 0, 701, 0, 426, 427,
	0, 702, 0, 428, 429, 430, 0, 431, 0, 0,
	0, 432, 433, 434, 435, 436, 437, 0, 438, 440,
	439, 0, 441, 703, 0, 442, 443, 0, 0, 444,
	445, 446, 447, 448, 449, 452, 0, 0, 450, 451,
	453, 454, 0, 455, 456, 458, 461, 457, 459, 460,
	462, 475, 463, 464, 465, 466, 467, 468, 469, 470,
	471, 472, 473, 474, 477, 0, 476, 0, 478, 479,
	480, 481, 482, 489, 491, 492, 487, 488, 490, 493,
	494, 496, 484, 485, 486, 0, 495, 483, 0, 290,
	0, 497, 498, 499, 500, 0, 704, 501, 705, 504,
	505, 0, 0, 506, 0, 507, 0, 0, 509, 510,
	511, 0, 0, 512, 513, 706, 0, 514, 0, 707,
	515, 516, 508, 517, 518, 519, 520, 521, 522, 523,
	524, 525, 0, 526, 527, 708, 528, 529, 530, 709,
	531, 532, 533, 710, 534, 711, 535, 536, 0, 537,
	538, 539, 0, 540, 541, 542, 543, 544, 545, 546,
	712, 547, 548, 550, 549, 551, 0, 552, 0, 553,
	554, 555, 0, 0, 0, 0, 0, 556, 557, 559,
	0, 560, 561, 562, 563, 558, 564, 565, 566, 567,
	568, 0, 569, 570, 571, 0, 572, 573, 574, 575,
	576, 713, 577, 0, 578, 579, 586, 587, 588, 580,
	581, 582, 589, 590, 591, 592, 593, 0, 595, 596,
	594, 597, 598, 599, 0, 600, 601, 583, 584, 602,
	603, 0, 604, 605, 606, 607, 608, 609, 610, 714,
	0, 611, 0, 612, 613, 614, 615, 616, 618, 585,
	619, 624, 625, 715, 620, 621, 622, 623, 716, 627,
	628, 0, 629, 630, 0, 626, 617, 0, 631, 632,
	633, 634, 635, 636, 0, 637, 638, 0, 639, 717,
	718, 719, 720, 0, 649, 0, 640, 641, 642, 643,
	721, 644, 722, 0, 645, 646, 647, 648, 0, 650,
	651, 0, 0, 652, 653, 655, 657, 658, 654, 656,
	659, 0, 660, 0, 0, 661, 662, 663, 723, 724,
	725, 0, 665, 664, 666, 667, 668, 726, 669, 670,
	2443, 0, 285, 0, 671, 672, 727, 673, 674, 675,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 291,
	292, 294, 293, 295, 296, 297, 298, 0, 299, 300,
	0, 0, 0, 0, 0, 676, 0, 0, 0, 301,
	0, 302, 303, 0, 304, 305, 306, 307, 308, 309,
	310, 677, 678, 0, 311, 679, 312, 680, 0, 681,
	313, 314, 315, 316, 317, 318, 0, 0, 0, 319,
	682, 683, 684, 0, 320, 321, 685, 0, 0, 0,
	322, 323, 324, 325, 326, 327, 328, 329, 0, 0,
	331, 332, 333, 330, 334, 0, 335, 0, 336, 337,
	338, 339, 340, 341, 0, 342, 343, 344, 0, 345,
	346, 347, 0, 0, 0, 0, 0, 0, 0, 348,
	349, 350, 351, 352, 0, 353, 355, 686, 687, 0,
	358, 354, 356, 0, 359, 357, 360, 0, 361, 362,
	363, 0, 0, 364, 365, 366, 0, 367, 368, 369,
	0, 370, 371, 372, 0, 373, 374, 688, 375, 376,
	377, 379, 381, 378, 380, 382, 383, 384, 385, 689,
	690, 386, 0, 288, 0, 0, 0, 0, 0, 387,
	388, 389, 691, 0, 0, 0, 390, 0, 391, 392,
	393, 0, 394, 0, 0, 395, 396, 397, 692, 693,
	398, 399, 400, 401, 402, 403, 404, 405, 406, 0,
	407, 694, 0, 695, 408, 0, 409, 410, 411, 412,
	413, 414, 2442, 697, 698, 502, 0, 415, 416, 0,
	417, 418, 419, 420, 421, 0, 0, 0, 289, 422,
	423, 424, 0, 0, 503, 425, 699, 700, 0, 701,
	0, 426, 427, 0, 702, 0, 428, 429, 430, 0,
	431, 0, 0, 0, 432, 433, 434, 435, 436, 437,
	0, 438, 440, 439, 0, 441, 703, 0, 442, 443,
	0, 0, 444, 445, 446, 447, 448, 449, 452, 0,
	0, 450, 451, 453, 454, 0, 455, 456, 458, 461,
	457, 459, 460, 462, 475, 463, 464, 465, 466, 467,
	468, 469, 470, 471, 472, 473, 474, 477, 0, 476,
	0, 478, 479, 480, 481, 482, 489, 491, 492, 487,
	488, 490, 493, 494, 496, 484, 485, 486, 0, 495,
	483, 0, 290, 0, 497, 498, 499, 500, 0, 704,
	501, 705, 504, 505, 0, 0, 506, 0, 507, 0,
	0, 509, 510, 511, 0, 0, 512, 513, 706, 0,
	514, 0, 707, 515, 516, 508, 517, 518, 519, 520,
	521, 522, 523, 524, 525, 0, 526, 527, 708, 528,
	529, 530, 709, 531, 532, 533, 710, 534, 711, 535,
	536, 0, 537, 538, 539, 0, 540, 541, 542, 543,
	544, 545, 546, 712, 547, 548, 550, 549, 551, 0,
	552, 0, 553, 554, 555, 0, 0, 0, 0, 0,
	556, 557, 559, 0, 560, 561, 562, 563, 558, 564,
	565, 566, 567, 568, 0, 569, 570, 571, 0, 572,
	573, 574, 575, 576, 713, 577, 0, 578, 579, 586,
	587, 588, 580, 581, 582, 589, 590, 591, 592, 593,
	0, 595, 596, 594, 597, 598, 599, 0, 600, 601,
	583, 584, 602, 603, 0, 604, 605, 606, 607, 608,
	609, 610, 714, 0, 611, 0, 612, 613, 614, 615,
	616, 618, 585, 619, 624, 625, 715, 620, 621, 622,
	623, 716, 627, 628, 0, 629, 630, 0, 626, 617,
	0, 631, 632, 633, 634, 635, 636, 0, 637, 638,
	0, 639, 717, 718, 719, 720, 0, 649, 0, 640,
	641, 642, 643, 721, 644, 722, 0, 645, 646, 647,
	648, 0, 650, 651, 0, 0, 652, 653, 655, 657,
	658, 654, 656, 659, 0, 660, 0, 0, 661, 662,
	663, 723, 724, 725, 0, 665, 664, 666, 667, 668,
	726, 669, 670, 2429, 0, 285, 0, 671, 672, 727,
	673, 674, 675, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 291, 292, 294, 293, 295, 296, 297, 298,
	0, 299, 300, 0, 0, 0, 0, 0, 676, 0,
	0, 0, 301, 0, 302, 303, 0, 304, 305, 306,
	307, 308, 309, 310, 677, 678, 0, 311, 679, 312,
	680, 0, 681, 313, 314, 315, 316, 317, 318, 0,
	0, 0, 319, 682, 683, 684, 0, 320, 321, 685,
	0, 0, 0, 322, 323, 324, 325, 326, 327, 328,
	329, 0, 0, 331, 332, 333, 330, 334, 0, 335,
	0, 336, 337, 338, 339, 340, 341, 0, 342, 343,
	344, 0, 345, 346, 347, 0, 0, 0, 0, 0,
	0, 0, 348, 349, 350, 351, 352, 0, 353, 355,
	686, 687, 0, 358, 354, 356, 0, 359, 357, 360,
	0, 361, 362, 363, 0, 0, 364, 365, 366, 0,
	367, 368, 369, 0, 370, 371, 372, 0, 373, 374,
	688, 375, 376, 377, 379, 381, 378, 380, 382, 383,
	384, 385, 689, 690, 386, 0, 288, 0, 0, 0,
	0, 0, 387, 388, 389, 691, 0, 0, 0, 390,
	0, 391, 392, 393, 0, 394, 0, 0, 395, 396,
	397, 692, 693, 398, 399, 400, 401, 402, 403, 404,
	405, 406, 0, 407, 694, 0, 695, 408, 0, 409,
	410, 411, 412, 413, 414, 2431, 697, 698, 502, 0,
	415, 416, 0, 417, 418, 419, 420, 421, 0, 0,
	0, 289, 422, 423, 424, 0, 0, 503, 425, 699,
	700, 0, 701, 0, 426, 427, 0, 702, 0, 428,
	429, 430, 0, 431, 0, 0, 0, 432, 433, 434,
	435, 436, 437, 0, 438, 440, 439, 0, 441, 703,
	0, 442, 443, 0, 0, 444, 445, 446, 447, 448,
	449, 452, 0, 0, 450, 451, 453, 454, 0, 455,
	456, 458, 461, 457, 459, 460, 462, 475, 463, 464,
	465, 466, 467, 468, 469, 470, 471, 472, 473, 474,
	477, 0, 476, 0, 478, 479, 480, 481, 482, 489,
	491, 492, 487, 488, 490, 493, 494, 496, 484, 485,
	486, 0, 495, 483, 0, 290, 0, 497, 498, 499,
	500, 0, 704, 501, 705, 504, 505, 0, 0, 506,
	0, 507, 0, 0, 509, 510, 511, 0, 0, 512,
	513, 706, 0, 514, 0, 707, 515, 516, 508, 517,
	518, 519, 520, 521, 522, 523, 524, 525, 0, 526,
	527, 708, 528, 529, 530, 709, 531, 532, 533, 710,
	534, 711, 535, 536, 0, 537, 538, 539, 0, 540,
	541, 542, 543, 544, 545, 546, 712, 547, 548, 550,
	549, 551, 0, 552, 0, 553, 554, 555, 0, 0,
	0, 0, 0, 556, 557, 559, 0, 560, 561, 562,
	563, 558, 564, 565, 566, 567, 568, 0, 569, 570,
	571, 0, 572, 573, 574, 575, 576, 713, 577, 0,
	578, 579, 586, 587, 588, 580, 581, 582, 589, 590,
	591, 592, 593, 0, 595, 596, 594, 597, 598, 599,
	0, 600, 601, 583, 584, 602, 603, 0, 604, 605,
	606, 607, 608, 609, 610, 714, 0, 611, 0, 612,
	613, 614, 615, 616, 618, 585, 619, 624, 625, 715,
	620, 621, 622, 623, 716, 627, 628, 0, 629, 630,
	0, 626, 617, 0, 631, 632, 633, 634, 635, 636,
	0, 637, 638, 0, 639, 717, 718, 719, 720, 0,
	649, 0, 640, 641, 642, 643, 721, 644, 722, 0,
	645, 646, 647, 648, 0, 650, 651, 0, 0, 652,
	653, 655, 657, 658, 654, 656, 659, 0, 660, 0,
	0, 661, 662, 663, 723, 724, 725, 0, 665, 664,
	666, 667, 668, 726, 669, 670, 285, 0, 0, 0,
	671, 672, 727, 673, 674, 675, 0, 0, 0, 0,
	0, 0, 0, 291, 292, 294, 293, 295, 296, 297,
	298, 0, 299, 300, 0, 0, 0, 0, 0, 676,
	0, 0, 0, 301, 0, 302, 303, 0, 304, 305,
	306, 307, 308, 309, 310, 677, 678, 0, 311, 679,
	312, 680, 0, 681, 313, 314, 315, 316, 317, 318,
	0, 0, 0, 319, 682, 683, 684, 0, 320, 321,
	685, 0, 0, 0, 322, 323, 324, 325, 326, 327,
	328, 329, 0, 0, 331, 332, 333, 330, 334, 0,
	335, 0, 336, 337, 338, 339, 340, 341, 0, 342,
	343, 344, 0, 345, 346, 347, 0, 0, 0, 0,
	0, 0, 0, 348, 349, 350, 351, 352, 0, 353,
	355, 686, 687, 0, 358, 354, 356, 0, 359, 357,
	360, 0, 361, 362, 363, 0, 0, 364, 365, 366,
	0, 367, 368, 369, 0, 370, 371, 372, 0, 373,
	374, 688, 375, 376, 377, 379, 381, 378, 380, 382,
	383, 384, 385, 689, 690, 386, 0, 288, 0, 0,
	0, 0, 0, 387, 388, 389, 691, 0, 0, 0,
	390, 0, 391, 392, 393, 0, 394, 0, 0, 395,
	396, 397, 692, 693, 398, 399, 400, 401, 402, 403,
	404, 405, 406, 0, 407, 694, 0, 695, 408, 0,
	409, 410, 411, 412, 413, 414, 2393, 697, 698, 502,
	0, 415, 416, 0, 417, 418, 419, 420, 421, 0,
	0, 0, 289, 422, 423, 424, 0, 0, 503, 425,
	699, 700, 0, 701, 0, 426, 427, 0, 702, 0,
	428, 429, 430, 0, 431, 0, 0, 0, 432, 433,
	434, 435, 436, 437, 0, 438, 440, 439, 0, 441,
	703, 0, 442, 443, 0, 0, 444, 445, 446, 447,
	448, 449, 452, 0, 0, 450, 451, 453, 454, 0,
	455, 456, 458, 461, 457, 459, 460, 462, 475, 463,
	464, 465, 466, 467, 468, 469, 470, 471, 472, 473,
	474, 477, 0, 476, 0, 478, 479, 480, 481, 482,
	489, 491, 492, 487, 488, 490, 493, 494, 496, 484,
	485, 486, 0, 495, 483, 0, 290, 0, 497, 498,
	499, 500, 0, 704, 501, 705, 504, 505, 0, 0,
	506, 0, 507, 0, 1327, 509, 510, 511, 0, 0,
	512, 513, 706, 0, 514, 0, 707, 515, 516, 508,
	517, 518, 519, 520, 521, 522, 523, 524, 525, 0,
	526, 527, 708, 528, 529, 530, 709, 531, 532, 533,
	710, 534, 711, 535, 536, 0, 537, 538, 539, 0,
	540, 541, 542, 543, 544, 545, 546, 712, 547, 548,
	550, 549, 551, 0, 552, 0, 553, 554, 555, 0,
	0, 0, 0, 0, 556, 557, 559, 0, 560, 561,
	562, 563, 558, 564, 565, 566, 567, 568, 0, 569,
	570, 571, 0, 572, 573, 574, 575, 576, 713, 577,
	0, 578, 579, 586, 587, 588, 580, 581, 582, 589,
	590, 591, 592, 593, 0, 595, 596, 594, 597, 598,
	599, 0, 600, 601, 583, 584, 602, 603, 0, 604,
	605, 606, 607, 608, 609, 610, 714, 0, 611, 0,
	612, 613, 614, 615, 616, 618, 585, 619, 624, 625,
	715, 620, 621, 622, 623, 716, 627, 628, 0, 629,
	630, 0, 626, 617, 0, 631, 632, 633, 634, 635,
	636, 0, 637, 638, 0, 639, 717, 718, 719, 720,
	0, 649, 0, 640, 641, 642, 643, 721, 644, 722,
	0, 645, 646, 647, 648, 0, 650, 651, 0, 0,
	652, 653, 655, 657, 658, 654, 656, 659, 0, 660,
	0, 0, 661, 662, 663, 723, 724, 725, 0, 665,
	664, 666, 667, 668, 726, 669, 670, 1709, 0, 285,
	0, 671, 672, 727, 673, 674, 675, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 291, 292, 294, 293,
	295, 296, 297, 298, 0, 299, 300, 0, 0, 0,
	0, 0, 676, 0, 0, 0, 301, 0, 302, 303,
	0, 304, 305, 306, 307, 308, 309, 310, 677, 678,
	0, 311, 679, 312, 680, 0, 681, 313, 314, 315,
	316, 317, 318, 0, 0, 0, 319, 682, 683, 684,
	0, 320, 321, 685, 0, 0, 0, 322, 323, 324,
	325, 326, 327, 328, 329, 0, 0, 331, 332, 333,
	330, 334, 0, 335, 0, 336, 337, 338, 339, 340,
	341, 0, 342, 343, 344, 0, 345, 346, 347, 0,
	0, 0, 0, 0, 0, 0, 348, 349, 350, 351,
	352, 0, 353, 355, 686, 687, 0, 358, 354, 356,
	0, 359, 357, 360, 0, 361, 362, 363, 0, 0,
	364, 365, 366, 0, 367, 368, 369, 0, 370, 371,
	372, 0, 373, 374, 688, 375, 376, 377, 379, 381,
	378, 380, 382, 383, 384, 385, 689, 690, 386, 0,
	288, 0, 0, 0, 0, 0, 387, 388, 389, 691,
	0, 0, 0, 390, 0, 391, 392, 393, 0, 394,
	0, 0, 395, 396, 397, 692, 693, 398, 399, 400,
	401, 402, 403, 404, 405, 406, 0, 407, 694, 0,
	695, 408, 0, 409, 410, 411, 412, 413, 414, 1708,
	697, 698, 502, 0, 415, 416, 0, 417, 418, 419,
	420, 421, 0, 0, 0, 289, 422, 423, 424, 0,
	0, 503, 425, 699, 700, 0, 701, 0, 426, 427,
	0, 702, 0, 428, 429, 430, 0, 431, 0, 0,
	0, 432, 433, 434, 435, 436, 437, 0, 438, 440,
	439, 0, 441, 703, 0, 442, 443, 0, 0, 444,
	445, 446, 447, 448, 449, 452, 0, 0, 450, 451,
	453, 454, 0, 455, 456, 458, 461, 457, 459, 460,
	462, 475, 463, 464, 465, 466, 467, 468, 469, 470,
	471, 472, 473, 474, 477, 0, 476, 0, 478, 479,
	480, 481, 482, 489, 491, 492, 487, 488, 490, 493,
	494, 496, 484, 485, 486, 0, 495, 483, 0, 290,
	0, 497, 498, 499, 500, 0, 704, 501, 705, 504,
	505, 0, 0, 506, 0, 507, 0, 0, 509, 510,
	511, 0, 0, 512, 513, 706, 0, 514, 0, 707,
	515, 516, 508, 517, 518, 519, 520, 521, 522, 523,
	524, 525, 0, 526, 527, 708, 528, 529, 530, 709,
	531, 532, 533, 710, 534, 711, 535, 536, 0, 537,
	538, 539, 0, 540, 541, 542, 543, 544, 545, 546,
	712, 547, 548, 550, 549, 551, 0, 552, 0, 553,
	554, 555, 0, 0, 0, 0, 0, 556, 557, 559,
	0, 560, 561, 562, 563, 558, 564, 565, 566, 567,
	568, 0, 569, 570, 571, 0, 572, 573, 574, 575,
	576, 713, 577, 0, 578, 579, 586, 587, 588, 580,
	581, 582, 589, 590, 591, 592, 593, 0, 595, 596,
	594, 597, 598, 599, 0, 600, 601, 583, 584, 602,
	603, 0, 604, 605, 606, 607, 608, 609, 610, 714,
	0, 611, 0, 612, 613, 614, 615, 616, 618, 585,
	619, 624, 625, 715, 620, 621, 622, 623, 716, 627,
	628, 0, 629, 630, 0, 626, 617, 0, 631, 632,
	633, 634, 635, 636, 0, 637, 638, 0, 639, 717,
	718, 719, 720, 0, 649, 0, 640, 641, 642, 643,
	721, 644, 722, 0, 645, 646, 647, 648, 0, 650,
	651, 0, 0, 652, 653, 655, 657, 658, 654, 656,
	659, 0, 660, 0, 0, 661, 662, 663, 723, 724,
	725, 0, 665, 664, 666, 667, 668, 726, 669, 670,
	1602, 0, 285, 0, 671, 672, 727, 673, 674, 675,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 291,
	292, 294, 293, 295, 296, 297, 298, 0, 299, 300,
	0, 0, 0, 0, 0, 676, 0, 0, 0, 301,
	0, 302, 303, 0, 304, 305, 306, 307, 308, 309,
	310, 677, 678, 0, 311, 679, 312, 680, 0, 681,
	313, 314, 315, 316, 317, 318, 0, 0, 0, 319,
	682, 683, 684, 0, 320, 321, 685, 0, 0, 0,
	322, 323, 324, 325, 326, 327, 328, 329, 0, 0,
	331, 332, 333, 330, 334, 0, 335, 0, 336, 337,
	338, 339, 340, 341, 0, 342, 343, 344, 0, 345,
	346, 347, 0, 0, 0, 0, 0, 0, 0, 348,
	349, 350, 351, 352, 0, 353, 355, 686, 687, 0,
	358, 354, 356, 0, 359, 357, 360, 0, 361, 362,
	363, 0, 0, 364, 365, 366, 0, 367, 368, 369,
	0, 370, 371, 372, 0, 373, 374, 688, 375, 376,
	377, 379, 381, 378, 380, 382, 383, 384, 385, 689,
	690, 386, 0, 288, 0, 0, 0, 0, 0, 387,
	388, 389, 691, 0, 0, 0, 390, 0, 391, 392,
	393, 0, 394, 0, 0, 395, 396, 397, 692, 693,
	398, 399, 400, 401, 402, 403, 404, 405, 406, 0,
	407, 694, 0, 695, 408, 0, 409, 410, 411, 412,
	413, 414, 696, 697, 698, 502, 0, 415, 416, 0,
	417, 418, 419, 420, 421, 0, 0, 0, 289, 422,
	423, 424, 0, 0, 503, 425, 699, 700, 0, 701,
	0, 426, 427, 0, 702, 0, 428, 429, 430, 0,
	431, 0, 0, 0, 432, 433, 434, 435, 436, 437,
	0, 438, 440, 439, 0, 441, 703, 0, 442, 443,
	0, 0, 444, 445, 446, 447, 448, 449, 452, 0,
	0, 450, 451, 453, 454, 0, 455, 456, 458, 461,
	457, 459, 460, 462, 475, 463, 464, 465, 466, 467,
	468, 469, 470, 471, 472, 473, 474, 477, 0, 476,
	0, 478, 479, 480, 481, 482, 489, 491, 492, 487,
	488, 490, 493, 494, 496, 484, 485, 486, 0, 495,
	483, 0, 290, 0, 497, 498, 499, 500, 0, 704,
	501, 705, 504, 505, 0, 0, 506, 0, 507, 0,
	0, 509, 510, 511, 0, 0, 512, 513, 706, 0,
	514, 0, 707, 515, 516, 508, 517, 518, 519, 520,
	521, 522, 523, 524, 525, 0, 526, 527, 708, 528,
	529, 530, 709, 531, 532, 533, 710, 534, 711, 535,
	536, 0, 537, 538, 539, 0, 540, 541, 542, 543,
	544, 545, 546, 712, 547, 548, 550, 549, 551, 0,
	552, 0, 553, 554, 555, 0, 0, 0, 0, 0,
	556, 557, 559, 0, 560, 561, 562, 563, 558, 564,
	565, 566, 567, 568, 0, 569, 570, 571, 0, 572,
	573, 574, 575, 576, 713, 577, 0, 578, 579, 586,
	587, 588, 580, 581, 582, 589, 590, 591, 592, 593,
	0, 595, 596, 594, 597, 598, 599, 0, 600, 601,
	583, 584, 602, 603, 0, 604, 605, 606, 607, 608,
	609, 610, 714, 0, 611, 0, 612, 613, 614, 615,
	616, 618, 585, 619, 624, 625, 715, 620, 621, 622,
	623, 716, 627, 628, 0, 629, 630, 0, 626, 617,
	0, 631, 632, 633, 634, 635, 636, 0, 637, 638,
	0, 639, 717, 718, 719, 720, 0, 649, 0, 640,
	641, 642, 643, 721, 644, 722, 0, 645, 646, 647,
	648, 0, 650, 651, 0, 0, 652, 653, 655, 657,
	658, 654, 656, 659, 0, 660, 0, 0, 661, 662,
	663, 723, 724, 725, 0, 665, 664, 666, 667, 668,
	726, 669, 670, 1595, 0, 285, 0, 671, 672, 727,
	673, 674, 675, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 291, 292, 294, 293, 295, 296, 297, 298,
	0, 299, 300, 0, 0, 0, 0, 0, 676, 0,
	0, 0, 301, 0, 302, 303, 0, 304, 305, 306,
	307, 308, 309, 310, 677, 678, 0, 311, 679, 312,
	680, 0, 681, 313, 314, 315, 316, 317, 318, 0,
	0, 0, 319, 682, 683, 684, 0, 320, 321, 685,
	0, 0, 0, 322, 323, 324, 325, 326, 327, 328,
	329, 0, 0, 331, 332, 333, 330, 334, 0, 335,
	0, 336, 337, 338, 339, 340, 341, 0, 342, 343,
	344, 0, 345, 346, 347, 0, 0, 0, 0, 0,
	0, 0, 348, 349, 350, 351, 352, 0, 353, 355,
	686, 687, 0, 358, 354, 356, 0, 359, 357, 360,
	0, 361, 362, 363, 0, 0, 364, 365, 366, 0,
	367, 368, 369, 0, 370, 371, 372, 0, 373, 374,
	688, 375, 376, 377, 379, 381, 378, 380, 382, 383,
	384, 385, 689, 690, 386, 0, 288, 0, 0, 0,
	0, 0, 387, 388, 389, 691, 0, 0, 0, 390,
	0, 391, 392, 393, 0, 394, 0, 0, 395, 396,
	397, 692, 693, 398, 399, 400, 401, 402, 403, 404,
	405, 406, 0, 407, 694, 0, 695, 408, 0, 409,
	410, 411, 412, 413, 414, 1597, 697, 698, 502, 0,
	415, 416, 0, 417, 418, 419, 420, 421, 0, 0,
	0, 289, 422, 423, 424, 0, 0, 503, 425, 699,
	700, 0, 701, 0, 426, 427, 0, 702, 0, 428,
	429, 430, 0, 431, 0, 0, 0, 432, 433, 434,
	435, 436, 437, 0, 438, 440, 439, 0, 441, 703,
	0, 442, 443, 0, 0, 444, 445, 446, 447, 448,
	449, 452, 0, 0, 450, 451, 453, 454, 0, 455,
	456, 458, 461, 457, 459, 460, 462, 475, 463, 464,
	465, 466, 467, 468, 469, 470, 471, 472, 473, 474,
	477, 0, 476, 0, 478, 479, 480, 481, 482, 489,
	491, 492, 487, 488, 490, 493, 494, 496, 484, 485,
	486, 0, 495, 483, 0, 290, 0, 497, 498, 499,
	500, 0, 704, 501, 705, 504, 505, 0, 0, 506,
	0, 507, 0, 0, 509, 510, 511, 0, 0, 512,
	513, 706, 0, 514, 0, 707, 515, 516, 508, 517,
	518, 519, 520, 521, 522, 523, 524, 525, 0, 526,
	527, 708, 528, 529, 530, 709, 531, 532, 533, 710,
	534, 711, 535, 536, 0, 537, 538, 539, 0, 540,
	541, 542, 543, 544, 545, 546, 712, 547, 548, 550,
	549, 551, 0, 552, 0, 553, 554, 555, 0, 0,
	0, 0, 0, 556, 557, 559, 0, 560, 561, 562,
	563, 558, 564, 565, 566, 567, 568, 0, 569, 570,
	571, 0, 572, 573, 574, 575, 576, 713, 577, 0,
	578, 579, 586, 587, 588, 580, 581, 582, 589, 590,
	591, 592, 593, 0, 595, 596, 594, 597, 598, 599,
	0, 600, 601, 583, 584, 602, 603, 0, 604, 605,
	606, 607, 608, 609, 610, 714, 0, 611, 0, 612,
	613, 614, 615, 616, 618, 585, 619, 624, 625, 715,
	620, 621, 622, 623, 716, 627, 628, 0, 629, 630,
	0, 626, 617, 0, 631, 632, 633, 634, 635, 636,
	0, 637, 638, 0, 639, 717, 718, 719, 720, 0,
	649, 0, 640, 641, 642, 643, 721, 644, 722, 0,
	645, 646, 647, 648, 0, 650, 651, 0, 0, 652,
	653, 655, 657, 658, 654, 656, 659, 0, 660, 0,
	0, 661, 662, 663, 723, 724, 725, 0, 665, 664,
	666, 667, 668, 726, 669, 670, 1404, 0, 285, 0,
	671, 672, 727, 673, 674, 675, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 291, 292, 294, 293, 295,
	296, 297, 298, 0, 299, 300, 0, 0, 0, 0,
	0, 676, 0, 0, 0, 301, 0, 302, 303, 0,
	304, 305, 306, 307, 308, 309, 310, 677, 678, 0,
	311, 679, 312, 680, 0, 681, 313, 314, 315, 316,
	317, 318, 0, 0, 0, 319, 682, 683, 684, 0,
	320, 321, 685, 0, 0, 0, 322, 323, 324, 325,
	326, 327, 328, 329, 0, 0, 331, 332, 333, 330,
	334, 0, 335, 0, 336, 337, 338, 339, 340, 341,
	0, 342, 343, 344, 0, 345, 346, 347, 0, 0,
	0, 0, 0, 0, 0, 348, 349, 350, 351, 352,
	0, 353, 355, 686, 687, 0, 358, 354, 356, 0,
	359, 357, 360, 0, 361, 362, 363, 0, 0, 364,
	365, 366, 0, 367, 368, 369, 0, 370, 371, 372,
	0, 373, 374, 688, 375, 376, 377, 379, 381, 378,
	380, 382, 383, 384, 385, 689, 690, 386, 0, 288,
	0, 0, 0, 0, 0, 387, 388, 389, 691, 0,
	0, 0, 390, 0, 391, 392, 393, 0, 394, 0,
	0, 395, 396, 397, 692, 693, 398, 399, 400, 401,
	402, 403, 404, 405, 406, 0, 407, 694, 0, 695,
	408, 0, 409, 410, 411, 412, 413, 414, 1403, 697,
	698, 502, 0, 415, 416, 0, 417, 418, 419, 420,
	421, 0, 0, 0, 289, 422, 423, 424, 0, 0,
	503, 425, 699, 700, 0, 701, 0, 426, 427, 0,
	702, 0, 428, 429, 430, 0, 431, 0, 0, 0,
	432, 433, 434, 435, 436, 437, 0, 438, 440, 439,
	0, 441, 703, 0, 442, 443, 0, 0, 444, 445,
	446, 447, 448, 449, 452, 0, 0, 450, 451, 453,
	454, 0, 455, 456, 458, 461, 457, 459, 460, 462,
	475, 463, 464, 465, 466, 467, 468, 469, 470, 471,
	472, 473, 474, 477, 0, 476, 0, 478, 479, 480,
	481, 482, 489, 491, 492, 487, 488, 490, 493, 494,
	496, 484, 485, 486, 0, 495, 483, 0, 290, 0,
	497, 498, 499, 500, 0, 704, 501, 705, 504, 505,
	0, 0, 506, 0, 507, 0, 0, 509, 510, 511,
	0, 0, 512, 513, 706, 0, 514, 0, 707, 515,
	516, 508, 517, 518, 519, 520, 521, 522, 523, 524,
	525, 0, 526, 527, 708, 528, 529, 530, 709, 531,
	532, 533, 710, 534, 711, 535, 536, 0, 537, 538,
	539, 0, 540, 541, 542, 543, 544, 545, 546, 712,
	547, 548, 550, 549, 551, 0, 552, 0, 553, 554,
	555, 0, 0, 0, 0, 0, 556, 557, 559, 0,
	560, 561, 562, 563, 558, 564, 565, 566, 567, 568,
	0, 569, 570, 571, 0, 572, 573, 574, 575, 576,
	713, 577, 0, 578, 579, 586, 587, 588, 580, 581,
	582, 589, 590, 591, 592, 593, 0, 595, 596, 594,
	597, 598, 599, 0, 600, 601, 583, 584, 602, 603,
	0, 604, 605, 606, 607, 608, 609, 610, 714, 0,
	611, 0, 612, 613, 614, 615, 616, 618, 585, 619,
	624, 625, 715, 620, 621, 622, 623, 716, 627, 628,
	0, 629, 630, 0, 626, 617, 0, 631, 632, 633,
	634, 635, 636, 0, 637, 638, 0, 639, 717, 718,
	719, 720, 0, 649, 0, 640, 641, 642, 643, 721,
	644, 722, 0, 645, 646, 647, 648, 0, 650, 651,
	0, 0, 652, 653, 655, 657, 658, 654, 656, 659,
	0, 660, 0, 0, 661, 662, 663, 723, 724, 725,
	0, 665, 664, 666, 667, 668, 726, 669, 670, 1394,
	0, 285, 0, 671, 672, 727, 673, 674, 675, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 291, 292,
	294, 293, 295, 296, 297, 298, 0, 299, 300, 0,
	0, 0, 0, 0, 676, 0, 0, 0, 301, 0,
	302, 303, 0, 304, 305, 306, 307, 308, 309, 310,
	677, 678, 0, 311, 679, 312, 680, 0, 681, 313,
	314, 315, 316, 317, 318, 0, 0, 0, 319, 682,
	683, 684, 0, 320, 321, 685, 0, 0, 0, 322,
	323, 324, 325, 326, 327, 328, 329, 0, 0, 331,
	332, 333, 330, 334, 0, 335, 0, 336, 337, 338,
	339, 340, 341, 0, 342, 343, 344, 0, 345, 346,
	347, 0, 0, 0, 0, 0, 0, 0, 348, 349,
	350, 351, 352, 0, 353, 355, 686, 687, 0, 358,
	354, 356, 0, 359, 357, 360, 0, 361, 362, 363,
	0, 0, 364, 365, 366, 0, 367, 368, 369, 0,
	370, 371, 372, 0, 373, 374, 688, 375, 376, 377,
	379, 381, 378, 380, 382, 383, 384, 385, 689, 690,
	386, 0, 288, 0, 0, 0, 0, 0, 387, 388,
	389, 691, 0, 0, 0, 390, 0, 391, 392, 393,
	0, 394, 0, 0, 395, 396, 397, 692, 693, 398,
	399, 400, 401, 402, 403, 404, 405, 406, 0, 407,
	694, 0, 695, 408, 0, 409, 410, 411, 412, 413,
	414, 1393, 697, 698, 502, 0, 415, 416, 0, 417,
	418, 419, 420, 421, 0, 0, 0, 289, 422, 423,
	424, 0, 0, 503, 425, 699, 700, 0, 701, 0,
	426, 427, 0, 702, 0, 428, 429, 430, 0, 431,
	0, 0, 0, 432, 433, 434, 435, 436, 437, 0,
	438, 440, 439, 0, 441, 703, 0, 442, 443, 0,
	0, 444, 445, 446, 447, 448, 449, 452, 0, 0,
	450, 451, 453, 454, 0, 455, 456, 458, 461, 457,
	459, 460, 462, 475, 463, 464, 465, 466, 467, 468,
	469, 470, 471, 472, 473, 474, 477, 0, 476, 0,
	478, 479, 480, 481, 482, 489, 491, 492, 487, 488,
	490, 493, 494, 496, 484, 485, 486, 0, 495, 483,
	0, 290, 0, 497, 498, 499, 500, 0, 704, 501,
	705, 504, 505, 0, 0, 506, 0, 507, 0, 0,
	509, 510, 511, 0, 0, 512, 513, 706, 0, 514,
	0, 707, 515, 516, 508, 517, 518, 519, 520, 521,
	522, 523, 524, 525, 0, 526, 527, 708, 528, 529,
	530, 709, 531, 532, 533, 710, 534, 711, 535, 536,
	0, 537, 538, 539, 0, 540, 541, 542, 543, 544,
	545, 546, 712, 547, 548, 550, 549, 551, 0, 552,
	0, 553, 554, 555, 0, 0, 0, 0, 0, 556,
	557, 559, 0, 560, 561, 562, 563, 558, 564, 565,
	566, 567, 568, 0, 569, 570, 571, 0, 572, 573,
	574, 575, 576, 713, 577, 0, 578, 579, 586, 587,
	588, 580, 581, 582, 589, 590, 591, 592, 593, 0,
	595, 596, 594, 597, 598, 599, 0, 600, 601, 583,
	584, 602, 603, 0, 604, 605, 606, 607, 608, 609,
	610, 714, 0, 611, 0, 612, 613, 614, 615, 616,
	618, 585, 619, 624, 625, 715, 620, 621, 622, 623,
	716, 627, 628, 0, 629, 630, 0, 626, 617, 0,
	631, 632, 633, 634, 635, 636, 0, 637, 638, 0,
	639, 717, 718, 719, 720, 0, 649, 0, 640, 641,
	642, 643, 721, 644, 722, 0, 645, 646, 647, 648,
	0, 650, 651, 0, 0, 652, 653, 655, 657, 658,
	654, 656, 659, 0, 660, 0, 0, 661, 662, 663,
	723, 724, 725, 0, 665, 664, 666, 667, 668, 726,
	669, 670, 1391, 0, 285, 0, 671, 672, 727, 673,
	674, 675, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 291, 292, 294, 293, 295, 296, 297, 298, 0,
	299, 300, 0, 0, 0, 0, 0, 676, 0, 0,
	0, 301, 0, 302, 303, 0, 304, 305, 306, 307,
	308, 309, 310, 677, 678, 0, 311, 679, 312, 680,
	0, 681, 313, 314, 315, 316, 317, 318, 0, 0,
	0, 319, 682, 683, 684, 0, 320, 321, 685, 0,
	0, 0, 322, 323, 324, 325, 326, 327, 328, 329,
	0, 0, 331, 332, 333, 330, 334, 0, 335, 0,
	336, 337, 338, 339, 340, 341, 0, 342, 343, 344,
	0, 345, 346, 347, 0, 0, 0, 0, 0, 0,
	0, 348, 349, 350, 351, 352, 0, 353, 355, 686,
	687, 0, 358, 354, 356, 0, 359, 357, 360, 0,
	361, 362, 363, 0, 0, 364, 365, 366, 0, 367,
	368, 369, 0, 370, 371, 372, 0, 373, 374, 688,
	375, 376, 377, 379, 381, 378, 380, 382, 383, 384,
	385, 689, 690, 386, 0, 288, 0, 0, 0, 0,
	0, 387, 388, 389, 691, 0, 0, 0, 390, 0,
	391, 392, 393, 0, 394, 0, 0, 395, 396, 397,
	692, 693, 398, 399, 400, 401, 402, 403, 404, 405,
	406, 0, 407, 694, 0, 695, 408, 0, 409, 410,
	411, 412, 413, 414, 1390, 697, 698, 502, 0, 415,
	416, 0, 417, 418, 419, 420, 421, 0, 0, 0,
	289, 422, 423, 424, 0, 0, 503, 425, 699, 700,
	0, 701, 0, 426, 427, 0, 702, 0, 428, 429,
	430, 0, 431, 0, 0, 0, 432, 433, 434, 435,
	436, 437, 0, 438, 440, 439, 0, 441, 703, 0,
	442, 443, 0, 0, 444, 445, 446, 447, 448, 449,
	452, 0, 0, 450, 451, 453, 454, 0, 455, 456,
	458, 461, 457, 459, 460, 462, 475, 463, 464, 465,
	466, 467, 468, 469, 470, 471, 472, 473, 474, 477,
	0, 476, 0, 478, 479, 480, 481, 482, 489, 491,
	492, 487, 488, 490, 493, 494, 496, 484, 485, 486,
	0, 495, 483, 0, 290, 0, 497, 498, 499, 500,
	0, 704, 501, 705, 504, 505, 0, 0, 506, 0,
	507, 0, 0, 509, 510, 511, 0, 0, 512, 513,
	706, 0, 514, 0, 707, 515, 516, 508, 517, 518,
	519, 520, 521, 522, 523, 524, 525, 0, 526, 527,
	708, 528, 529, 530, 709, 531, 532, 533, 710, 534,
	711, 535, 536, 0, 537, 538, 539, 0, 540, 541,
	542, 543, 544, 545, 546, 712, 547, 548, 550, 549,
	551, 0, 552, 0, 553, 554, 555, 0, 0, 0,
	0, 0, 556, 557, 559, 0, 560, 561, 562, 563,
	558, 564, 565, 566, 567, 568, 0, 569, 570, 571,
	0, 572, 573, 574, 575, 576, 713, 577, 0, 578,
	579, 586, 587, 588, 580, 581, 582, 589, 590, 591,
	592, 593, 0, 595, 596, 594, 597, 598, 599, 0,
	600, 601, 583, 584, 602, 603, 0, 604, 605, 606,
	607, 608, 609, 610, 714, 0, 611, 0, 612, 613,
	614, 615, 616, 618, 585, 619, 624, 625, 715, 620,
	621, 622, 623, 716, 627, 628, 0, 629, 630, 0,
	626, 617, 0, 631, 632, 633, 634, 635, 636, 0,
	637, 638, 0, 639, 717, 718, 719, 720, 0, 649,
	0, 640, 641, 642, 643, 721, 644, 722, 0, 645,
	646, 647, 648, 0, 650, 651, 0, 0, 652, 653,
	655, 657, 658, 654, 656, 659, 0, 660, 0, 0,
	661, 662, 663, 723, 724, 725, 0, 665, 664, 666,
	667, 668, 726, 669, 670, 1386, 0, 285, 0, 671,
	672, 727, 673, 674, 675, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 291, 292, 294, 293, 295, 296,
	297, 298, 0, 299, 300, 0, 0, 0, 0, 0,
	676, 0, 0, 0, 301, 0, 302, 303, 0, 304,
	305, 306, 307, 308, 309, 310, 677, 678, 0, 311,
	679, 312, 680, 0, 681, 313, 314, 315, 316, 317,
	318, 0, 0, 0, 319, 682, 683, 684, 0, 320,
	321, 685, 0, 0, 0, 322, 323, 324, 325, 326,
	327, 328, 329, 0, 0, 331, 332, 333, 330, 334,
	0, 335, 0, 336, 337, 338, 339, 340, 341, 0,
	342, 343, 344, 0, 345, 346, 347, 0, 0, 0,
	0, 0, 0, 0, 348, 349, 350, 351, 352, 0,
	353, 355, 686, 687, 0, 358, 354, 356, 0, 359,
	357, 360, 0, 361, 362, 363, 0, 0, 364, 365,
	366, 0, 367, 368, 369, 0, 370, 371, 372, 0,
	373, 374, 688, 375, 376, 377, 379, 381, 378, 380,
	382, 383, 384, 385, 689, 690, 386, 0, 288, 0,
	0, 0, 0, 0, 387, 388, 389, 691, 0, 0,
	0, 390, 0, 391, 392, 393, 0, 394, 0, 0,
	395, 396, 397, 692, 693, 398, 399, 400, 401, 402,
	403, 404, 405, 406, 0, 407, 694, 0, 695, 408,
	0, 409, 410, 411, 412, 413, 414, 1385, 697, 698,
	502, 0, 415, 416, 0, 417, 418, 419, 420, 421,
	0, 0, 0, 289, 422, 423, 424, 0, 0, 503,
	425, 699, 700, 0, 701, 0, 426, 427, 0, 702,
	0, 428, 429, 430, 0, 431, 0, 0, 0, 432,
	433, 434, 435, 436, 437, 0, 438, 440, 439, 0,
	441, 703, 0, 442, 443, 0, 0, 444, 445, 446,
	447, 448, 449, 452, 0, 0, 450, 451, 453, 454,
	0, 455, 456, 458, 461, 457, 459, 460, 462, 475,
	463, 464, 465, 466, 467, 468, 469, 470, 471, 472,
	473, 474, 477, 0, 476, 0, 478, 479, 480, 481,
	482, 489, 491, 492, 487, 488, 490, 493, 494, 496,
	484, 485, 486, 0, 495, 483, 0, 290, 0, 497,
	498, 499, 500, 0, 704, 501, 705, 504, 505, 0,
	0, 506, 0, 507, 0, 0, 509, 510, 511, 0,
	0, 512, 513, 706, 0, 514, 0, 707, 515, 516,
	508, 517, 518, 519, 520, 521, 522, 523, 524, 525,
	0, 526, 527, 708, 528, 529, 530, 709, 531, 532,
	533, 710, 534, 711, 535, 536, 0, 537, 538, 539,
	0, 540, 541, 542, 543, 544, 545, 546, 712, 547,
	548, 550, 549, 551, 0, 552, 0, 553, 554, 555,
	0, 0, 0, 0, 0, 556, 557, 559, 0, 560,
	561, 562, 563, 558, 564, 565, 566, 567, 568, 0,
	569, 570, 571, 0, 572, 573, 574, 575, 576, 713,
	577, 0, 578, 579, 586, 587, 588, 580, 581, 582,
	589, 590, 591, 592, 593, 0, 595, 596, 594, 597,
	598, 599, 0, 600, 601, 583, 584, 602, 603, 0,
	604, 605, 606, 607, 608, 609, 610, 714, 0, 611,
	0, 612, 613, 614, 615, 616, 618, 585, 619, 624,
	625, 715, 620, 621, 622, 623, 716, 627, 628, 0,
	629, 630, 0, 626, 617, 0, 631, 632, 633, 634,
	635, 636, 0, 637, 638, 0, 639, 717, 718, 719,
	720, 0, 649, 0, 640, 641, 642, 643, 721, 644,
	722, 0, 645, 646, 647, 648, 0, 650, 651, 0,
	0, 652, 653, 655, 657, 658, 654, 656, 659, 0,
	660, 0, 0, 661, 662, 663, 723, 724, 725, 0,
	665, 664, 666, 667, 668, 726, 669, 670, 729, 0,
	285, 0, 671, 672, 727, 673, 674, 675, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 291, 292, 294,
	293, 295, 296, 297, 298, 0, 299, 300, 0, 0,
	0, 0, 0, 676, 0, 0, 0, 301, 0, 302,
	303, 0, 304, 305, 306, 307, 308, 309, 310, 677,
	678, 0, 311, 679, 312, 680, 0, 681, 313, 314,
	315, 316, 317, 318, 0, 0, 0, 319, 682, 683,
	684, 0, 320, 321, 685, 0, 0, 0, 322, 323,
	324, 325, 326, 327, 328, 329, 0, 0, 331, 332,
	333, 330, 334, 0, 335, 0, 336, 337, 338, 339,
	340, 341, 0, 342, 343, 344, 0, 345, 346, 347,
	0, 0, 0, 0, 0, 0, 0, 348, 349, 350,
	351, 352, 0, 353, 355, 686, 687, 0, 358, 354,
	356, 0, 359, 357, 360, 0, 361, 362, 363, 0,
	0, 364, 365, 366, 0, 367, 368, 369, 0, 370,
	371, 372, 0, 373, 374, 688, 375, 376, 377, 379,
	381, 378, 380, 382, 383, 384, 385, 689, 690, 386,
	0, 288, 0, 0, 0, 0, 0, 387, 388, 389,
	691, 0, 0, 0, 390, 0, 391, 392, 393, 0,
	394, 0, 0, 395, 396, 397, 692, 693, 398, 399,
	400, 401, 402, 403, 404, 405, 406, 0, 407, 694,
	0, 695, 408, 0, 409, 410, 411, 412, 413, 414,
	696, 697, 698, 502, 0, 415, 416, 0, 417, 418,
	419, 420, 421, 0, 0, 0, 289, 422, 423, 424,
	0, 0, 503, 425, 699, 700, 0, 701, 0, 426,
	427, 0, 702, 0, 428, 429, 430, 0, 431, 0,
	0, 0, 432, 433, 434, 435, 436, 437, 0, 438,
	440, 439, 0, 441, 703, 0, 442, 443, 0, 0,
	444, 445, 446, 447, 448, 449, 452, 0, 0, 450,
	451, 453, 454, 0, 455, 456, 458, 461, 457, 459,
	460, 462, 475, 463, 464, 465, 466, 467, 468, 469,
	470, 471, 472, 473, 474, 477, 0, 476, 0, 478,
	479, 480, 481, 482, 489, 491, 492, 487, 488, 490,
	493, 494, 496, 484, 485, 486, 0, 495, 483, 0,
	290, 0, 497, 498, 499, 500, 0, 704, 501, 705,
	504, 505, 0, 0, 506, 0, 507, 0, 0, 509,
	510, 511, 0, 0, 512, 513, 706, 0, 514, 0,
	707, 515, 516, 508, 517, 518, 519, 520, 521, 522,
	523, 524, 525, 0, 526, 527, 708, 528, 529, 530,
	709, 531, 532, 533, 710, 534, 711, 535, 536, 0,
	537, 538, 539, 0, 540, 541, 542, 543, 544, 545,
	546, 712, 547, 548, 550, 549, 551, 0, 552, 0,
	553, 554, 555, 0, 0, 0, 0, 0, 556, 557,
	559, 0, 560, 561, 562, 563, 558, 564, 565, 566,
	567, 568, 0, 569, 570, 571, 0, 572, 573, 574,
	575, 576, 713, 577, 0, 578, 579, 586, 587, 588,
	580, 581, 582, 589, 590, 591, 592, 593, 0, 595,
	596, 594, 597, 598, 599, 0, 600, 601, 583, 584,
	602, 603, 0, 604, 605, 606, 607, 608, 609, 610,
	714, 0, 611, 0, 612, 613, 614, 615, 616, 618,
	585, 619, 624, 625, 715, 620, 621, 622, 623, 716,
	627, 628, 0, 629, 630, 0, 626, 617, 0, 631,
	632, 633, 634, 635, 636, 0, 637, 638, 0, 639,
	717, 718, 719, 720, 0, 649, 0, 640, 641, 642,
	643, 721, 644, 722, 0, 645, 646, 647, 648, 0,
	650, 651, 0, 0, 652, 653, 655, 657, 658, 654,
	656, 659, 0, 660, 0, 0, 661, 662, 663, 723,
	724, 725, 0, 665, 664, 666, 667, 668, 726, 669,
	670, 276, 0, 285, 0, 671, 672, 727, 673, 674,
	675, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	291, 292, 294, 293, 295, 296, 297, 298, 0, 299,
	300, 0, 0, 0, 0, 0, 676, 0, 0, 0,
	301, 0, 302, 303, 0, 304, 305, 306, 307, 308,
	309, 310, 677, 678, 0, 311, 679, 312, 680, 0,
	681, 313, 314, 315, 316, 317, 318, 0, 0, 0,
	319, 682, 683, 684, 0, 320, 321, 685, 0, 0,
	0, 322, 323, 324, 325, 326, 327, 328, 329, 0,
	0, 331, 332, 333, 330, 334, 0, 335, 0, 336,
	337, 338, 339, 340, 341, 0, 342, 343, 344, 0,
	345, 346, 347, 0, 0, 0, 0, 0, 0, 0,
	348, 349, 350, 351, 352, 0, 353, 355, 686, 687,
	0, 358, 354, 356, 0, 359, 357, 360, 0, 361,
	362, 363, 0, 0, 364, 365, 366, 0, 367, 368,
	369, 0, 370, 371, 372, 0, 373, 374, 688, 375,
	376, 377, 379, 381, 378, 380, 382, 383, 384, 385,
	689, 690, 386, 0, 288, 0, 0, 0, 0, 0,
	387, 388, 389, 691, 0, 0, 0, 390, 0, 391,
	392, 393, 0, 394, 0, 0, 395, 396, 397, 692,
	693, 398, 399, 400, 401, 402, 403, 404, 405, 406,
	0, 407, 694, 0, 695, 408, 0, 409, 410, 411,
	412, 413, 414, 696, 697, 698, 502, 0, 415, 416,
	0, 417, 418, 419, 420, 421, 0, 0, 0, 289,
	422, 423, 424, 0, 0, 503, 425, 699, 700, 0,
	701, 0, 426, 427, 0, 702, 0, 428, 429, 430,
	0, 431, 0, 0, 0, 432, 433, 434, 435, 436,
	437, 0, 438, 440, 439, 0, 441, 703, 0, 442,
	443, 0, 0, 444, 445, 446, 447, 448, 449, 452,
	0, 0, 450, 451, 453, 454, 0, 455, 456, 458,
	461, 457, 459, 460, 462, 475, 463, 464, 465, 466,
	467, 468, 469, 470, 471, 472, 473, 474, 477, 0,
	476, 0, 478, 479, 480, 481, 482, 489, 491, 492,
	487, 488, 490, 493, 494, 496, 484, 485, 486, 0,
	495, 483, 0, 290, 0, 497, 498, 499, 500, 0,
	704, 501, 705, 504, 505, 0, 0, 506, 0, 507,
	0, 0, 509, 510, 511, 0, 0, 512, 513, 706,
	0, 514, 0, 707, 515, 516, 508, 517, 518, 519,
	520, 521, 522, 523, 524, 525, 0, 526, 527, 708,
	528, 529, 530, 709, 531, 532, 533, 710, 534, 711,
	535, 536, 0, 537, 538, 539, 0, 540, 541, 542,
	543, 544, 545, 546, 712, 547, 548, 550, 549, 551,
	0, 552, 0, 553, 554, 555, 0, 0, 0, 0,
	0, 556, 557, 559, 0, 560, 561, 562, 563, 558,
	564, 565, 566, 567, 568, 0, 569, 570, 571, 0,
	572, 573, 574, 575, 576, 713, 577, 0, 578, 579,
	586, 587, 588, 580, 581, 582, 589, 590, 591, 592,
	593, 0, 595, 596, 594, 597, 598, 599, 0, 600,
	601, 583, 584, 602, 603, 0, 604, 605, 606, 607,
	608, 609, 610, 714, 0, 611, 0, 612, 613, 614,
	615, 616, 618, 585, 619, 624, 625, 715, 620, 621,
	622, 623, 716, 627, 628, 0, 629, 630, 0, 626,
	617, 0, 631, 632, 633, 634, 635, 636, 0, 637,
	638, 0, 639, 717, 718, 719, 720, 0, 649, 0,
	640, 641, 642, 643, 721, 644, 722, 0, 645, 646,
	647, 648, 0, 650, 651, 0, 0, 652, 653, 655,
	657, 658, 654, 656, 659, 0, 660, 0, 0, 661,
	662, 663, 723, 724, 725, 0, 665, 664, 666, 667,
	668, 726, 669, 670, 285, 0, 0, 0, 671, 672,
	727, 673, 674, 675, 0, 0, 0, 0, 0, 0,
	0, 291, 292, 294, 293, 295, 296, 297, 298, 0,
	299, 300, 0, 0, 0, 0, 0, 676, 0, 0,
	0, 301, 0, 302, 303, 0, 304, 305, 306, 307,
	308, 309, 310, 677, 678, 0, 311, 679, 312, 680,
	0, 681, 313, 314, 315, 316, 317, 318, 0, 0,
	0, 319, 682, 683, 684, 0, 320, 321, 685, 0,
	0, 0, 322, 323, 324, 325, 326, 327, 328, 329,
	0, 0, 331, 332, 333, 330, 334, 0, 335, 0,
	336, 337, 338, 339, 340, 341, 0, 342, 343, 344,
	0, 345, 346, 347, 0, 0, 0, 0, 0, 0,
	0, 348, 349, 350, 351, 352, 0, 353, 355, 686,
	687, 0, 358, 354, 356, 0, 359, 357, 360, 0,
	361, 362, 363, 0, 0, 364, 365, 366, 0, 367,
	368, 369, 0, 370, 371, 372, 0, 373, 374, 688,
	375, 376, 377, 379, 381, 378, 380, 382, 383, 384,
	385, 689, 690, 386, 0, 288, 0, 0, 0, 0,
	0, 387, 388, 389, 691, 0, 0, 0, 390, 0,
	391, 392, 393, 0, 394, 0, 0, 395, 396, 397,
	692, 693, 398, 399, 400, 401, 402, 403, 404, 405,
	406, 0, 407, 694, 0, 695, 408, 0, 409, 410,
	411, 412, 413, 414, 696, 697, 698, 502, 0, 415,
	416, 0, 417, 418, 419, 420, 421, 0, 0, 0,
	289, 422, 423, 424, 0, 0, 503, 425, 699, 700,
	0, 701, 0, 426, 427, 0, 702, 0, 428, 429,
	430, 0, 431, 0, 0, 0, 432, 433, 434, 435,
	436, 437, 0, 438, 440, 439, 0, 441, 703, 0,
	442, 443, 0, 0, 444, 445, 446, 447, 448, 449,
	452, 0, 0, 450, 451, 453, 454, 0, 455, 456,
	458, 461, 457, 459, 460, 462, 475, 463, 464, 465,
	466, 467, 468, 469, 470, 471, 472, 473, 474, 477,
	0, 476, 0, 478, 479, 480, 481, 482, 489, 491,
	492, 487, 488, 490, 493, 494, 496, 484, 485, 486,
	0, 495, 483, 0, 290, 0, 497, 498, 499, 500,
	0, 704, 501, 705, 504, 505, 0, 0, 506, 0,
	507, 0, 0, 509, 510, 511, 0, 0, 512, 513,
	706, 0, 514, 0, 707, 515, 516, 508, 517, 518,
	519, 520, 521, 522, 523, 524, 525, 0, 526, 527,
	708, 528, 529, 530, 709, 531, 532, 533, 710, 534,
	711, 535, 536, 0, 537, 538, 539, 0, 540, 541,
	542, 543, 544, 545, 546, 712, 547, 548, 550, 549,
	551, 0, 552, 0, 553, 554, 555, 0, 0, 0,
	0, 0, 556, 557, 559, 0, 560, 561, 562, 563,
	558, 564, 565, 566, 567, 568, 0, 569, 570, 571,
	0, 572, 573, 574, 575, 576, 713, 577, 0, 578,
	579, 586, 587, 588, 580, 581, 582, 589, 590, 591,
	592, 593, 0, 595, 596, 594, 597, 598, 599, 0,
	600, 601, 583, 584, 602, 603, 0, 604, 605, 606,
	607, 608, 609, 610, 714, 0, 611, 0, 612, 613,
	614, 615, 616, 618, 585, 619, 624, 625, 715, 620,
	621, 622, 623, 716, 627, 628, 0, 629, 630, 0,
	626, 617, 0, 631, 632, 633, 634, 635, 636, 0,
	637, 638, 0, 639, 717, 718, 719, 720, 0, 649,
	0, 640, 641, 642, 643, 721, 644, 722, 0, 645,
	646, 647, 648, 0, 650, 651, 0, 0, 652, 653,
	655, 657, 658, 654, 656, 659, 0, 660, 0, 0,
	661, 662, 663, 723, 724, 725, 0, 665, 664, 666,
	667, 668, 726, 669, 670, 285, 0, 0, 0, 671,
	672, 727, 673, 674, 675, 0, 0, 0, 0, 0,
	0, 0, 291, 292, 294, 293, 295, 296, 297, 298,
	0, 299, 300, 0, 0, 0, 0, 0, 676, 0,
	0, 0, 301, 0, 302, 303, 0, 304, 305, 306,
	307, 308, 309, 310, 677, 678, 0, 311, 679, 312,
	680, 0, 681, 313, 314, 315, 316, 317, 318, 0,
	0, 0, 319, 682, 683, 684, 0, 320, 321, 685,
	0, 0, 0, 322, 323, 324, 325, 326, 327, 328,
	329, 0, 0, 331, 332, 333, 330, 334, 0, 335,
	0, 336, 337, 338, 339, 340, 341, 751, 342, 343,
	344, 0, 345, 346, 347, 0, 0, 0, 0, 0,
	0, 0, 348, 349, 350, 351, 352, 0, 353, 355,
	686, 687, 0, 358, 354, 356, 0, 359, 357, 360,
	0, 361, 362, 363, 0, 0, 364, 365, 366, 0,
	367, 368, 369, 0, 370, 371, 372, 0, 373, 374,
	688, 375, 376, 377, 379, 381, 378, 380, 382, 383,
	384, 385, 689, 690, 386, 0, 0, 0, 0, 0,
	0, 0, 387, 388, 389, 691, 0, 0, 0, 390,
	0, 391, 392, 393, 0, 394, 0, 0, 395, 396,
	397, 692, 693, 398, 399, 400, 401, 402, 403, 404,
	405, 406, 752, 407, 694, 0, 695, 408, 0, 409,
	410, 411, 412, 413, 414, 696, 697, 698, 502, 0,
	415, 416, 0, 417, 418, 419, 420, 421, 0, 0,
	0, 0, 422, 423, 424, 0, 0, 503, 425, 699,
	700, 0, 701, 0, 426, 427, 0, 702, 0, 428,
	429, 430, 0, 431, 0, 0, 0, 432, 433, 434,
	435, 436, 437, 0, 438, 440, 439, 0, 441, 703,
	0, 442, 443, 0, 0, 444, 445, 446, 447, 448,
	449, 452, 0, 0, 450, 451, 453, 454, 0, 455,
	456, 458, 461, 457, 459, 460, 462, 475, 463, 464,
	465, 466, 467, 468, 469, 470, 471, 472, 473, 474,
	477, 0, 476, 0, 478, 479, 480, 481, 482, 489,
	491, 492, 487, 488, 490, 493, 494, 496, 484, 485,
	486, 0, 495, 483, 0, 0, 0, 497, 498, 499,
	500, 0, 704, 501, 705, 504, 505, 0, 0, 506,
	0, 507, 0, 0, 509, 510, 511, 0, 0, 512,
	513, 706, 0, 514, 0, 707, 515, 516, 508, 517,
	518, 519, 520, 521, 522, 523, 524, 525, 0, 526,
	527, 708, 528, 529, 530, 709, 531, 532, 533, 710,
	534, 711, 535, 536, 0, 537, 538, 539, 0, 540,
	541, 542, 543, 544, 545, 546, 712, 547, 548, 550,
	549, 551, 0, 552, 0, 553, 554, 555, 0, 0,
	0, 0, 0, 556, 557, 559, 0, 560, 561, 562,
	563, 558, 564, 565, 566, 567, 568, 0, 569, 570,
	571, 0, 572, 573, 574, 575, 576, 713, 577, 0,
	578, 579, 586, 587, 588, 580, 581, 582, 589, 590,
	591, 592, 593, 753, 595, 596, 594, 597, 598, 599,
	0, 600, 601, 583, 584, 602, 603, 0, 604, 605,
	606, 607, 608, 609, 610, 714, 0, 611, 0, 612,
	613, 614, 615, 616, 618, 585, 619, 624, 625, 715,
	620, 621, 622, 623, 716, 627, 628, 0, 629, 630,
	0, 626, 617, 0, 631, 632, 633, 634, 635, 636,
	0, 637, 638, 0, 639, 717, 718, 719, 720, 0,
	649, 0, 640, 641, 642, 643, 721, 644, 722, 0,
	645, 646, 647, 648, 0, 650, 651, 0, 0, 652,
	653, 655, 657, 658, 654, 656, 659, 0, 660, 0,
	0, 661, 662, 663, 723, 724, 725, 0, 665, 664,
	666, 667, 668, 726, 669, 670, 285, 0, 0, 0,
	671, 672, 727, 673, 674, 675, 0, 0, 0, 0,
	0, 0, 0, 291, 292, 294, 293, 295, 296, 297,
	298, 0, 299, 300, 0, 0, 0, 0, 0, 676,
	0, 0, 0, 301, 0, 302, 303, 0, 304, 305,
	306, 307, 308, 309, 310, 677, 678, 0, 311, 679,
	312, 680, 0, 681, 313, 314, 315, 316, 317, 318,
	0, 0, 0, 319, 682, 683, 684, 0, 320, 321,
	685, 0, 0, 0, 322, 323, 324, 325, 326, 327,
	328, 329, 0, 0, 331, 332, 333, 330, 334, 0,
	335, 0, 336, 337, 338, 339, 340, 341, 0, 342,
	343, 344, 0, 345, 346, 347, 0, 0, 0, 0,
	0, 0, 0, 348, 349, 350, 2539, 352, 0, 353,
	355, 686, 687, 0, 358, 354, 356, 0, 359, 357,
	360, 0, 361, 362, 363, 0, 0, 364, 365, 366,
	0, 367, 368, 369, 0, 370, 371, 372, 0, 373,
	374, 688, 375, 376, 377, 379, 381, 378, 380, 382,
	383, 384, 385, 689, 690, 386, 0, 288, 0, 0,
	0, 0, 0, 387, 388, 389, 691, 0, 0, 0,
	390, 0, 391, 392, 393, 0, 394, 0, 0, 395,
	396, 397, 692, 693, 398, 399, 400, 401, 402, 403,
	404, 405, 406, 0, 407, 694, 0, 695, 408, 0,
	409, 410, 411, 412, 413, 414, 696, 697, 698, 502,
	0, 415, 416, 0, 417, 418, 419, 420, 421, 0,
	0, 0, 289, 422, 423, 424, 0, 0, 503, 425,
	699, 700, 0, 701, 0, 426, 427, 0, 702, 0,
	428, 429, 430, 0, 431, 0, 0, 0, 432, 433,
	434, 435, 436, 437, 0, 438, 440, 439, 0, 441,
	703, 0, 442, 443, 0, 0, 444, 445, 446, 447,
	448, 449, 452, 0, 0, 450, 451, 453, 454, 0,
	455, 456, 458, 461, 457, 459, 460, 462, 475, 463,
	464, 465, 466, 467, 468, 469, 470, 471, 472, 473,
	474, 477, 0, 476, 0, 478, 479, 480, 481, 482,
	489, 491, 492, 487, 488, 490, 493, 494, 496, 484,
	485, 486, 0, 495, 483, 0, 290, 0, 497, 498,
	499, 500, 0, 704, 501, 705, 504, 505, 0, 0,
	506, 0, 507, 0, 0, 509, 510, 511, 0, 0,
	512, 513, 706, 0, 514, 0, 707, 515, 516, 508,
	517, 518, 519, 520, 521, 522, 523, 524, 525, 0,
	526, 527, 708, 528, 529, 530, 709, 531, 532, 533,
	710, 534, 711, 535, 536, 0, 537, 538, 539, 0,
	540, 541, 542, 543, 544, 545, 546, 712, 547, 548,
	550, 549, 551, 0, 552, 0, 553, 554, 555, 0,
	0, 0, 0, 0, 556, 557, 559, 0, 560, 561,
	562, 563, 558, 564, 565, 566, 567, 568, 0, 569,
	570, 571, 0, 572, 573, 574, 575, 576, 713, 577,
	0, 578, 579, 586, 587, 588, 580, 581, 582, 589,
	590, 591, 592, 593, 0, 595, 596, 594, 597, 598,
	599, 0, 600, 601, 583, 584, 602, 603, 0, 604,
	605, 606, 607, 608, 609, 610, 714, 0, 611, 0,
	612, 613, 614, 615, 616, 618, 585, 619, 624, 625,
	715, 620, 621, 622, 623, 716, 627, 628, 0, 629,
	630, 0, 626, 617, 0, 631, 632, 633, 634, 635,
	636, 0, 637, 638, 0, 639, 717, 718, 719, 720,
	0, 649, 0, 640, 641, 642, 643, 721, 644, 722,
	0, 645, 646, 647, 648, 0, 650, 651, 0, 0,
	652, 653, 655, 657, 658, 654, 656, 659, 0, 660,
	0, 0, 661, 662, 663, 723, 724, 725, 0, 665,
	664, 666, 667, 668, 726, 669, 670, 285, 0, 0,
	0, 671, 672, 727, 673, 674, 675, 0, 0, 0,
	0, 0, 0, 0, 291, 292, 294, 293, 295, 296,
	297, 298, 0, 299, 300, 0, 0, 0, 0, 0,
	676, 0, 0, 0, 301, 0, 302, 303, 0, 304,
	305, 306, 307, 308, 309, 310, 677, 678, 0, 311,
	679, 312, 680, 0, 681, 313, 314, 315, 316, 317,
	318, 0, 0, 0, 319, 682, 683, 684, 0, 320,
	321, 685, 0, 0, 0, 322, 323, 324, 325, 326,
	327, 328, 329, 0, 0, 331, 332, 333, 330, 334,
	0, 335, 0, 336, 337, 338, 339, 340, 341, 0,
	342, 343, 344, 0, 345, 346, 347, 0, 0, 0,
	0, 0, 0, 0, 348, 349, 350, 2537, 352, 0,
	353, 355, 686, 687, 0, 358, 354, 356, 0, 359,
	357, 360, 0, 361, 362, 363, 0, 0, 364, 365,
	366, 0, 367, 368, 369, 0, 370, 371, 372, 0,
	373, 374, 688, 375, 376, 377, 379, 381, 378, 380,
	382, 383, 384, 385, 689, 690, 386, 0, 288, 0,
	0, 0, 0, 0, 387, 388, 389, 691, 0, 0,
	0, 390, 0, 391, 392, 393, 0, 394, 0, 0,
	395, 396, 397, 692, 693, 398, 399, 400, 401, 402,
	403, 404, 405, 406, 0, 407, 694, 0, 695, 408,
	0, 409, 410, 411, 412, 413, 414, 696, 697, 698,
	502, 0, 415, 416, 0, 417, 418, 419, 420, 421,
	0, 0, 0, 289, 422, 423, 424, 0, 0, 503,
	425, 699, 700, 0, 701, 0, 426, 427, 0, 702,
	0, 428, 429, 430, 0, 431, 0, 0, 0, 432,
	433, 434, 435, 436, 437, 0, 438, 440, 439, 0,
	441, 703, 0, 442, 443, 0, 0, 444, 445, 446,
	447, 448, 449, 452, 0, 0, 450, 451, 453, 454,
	0, 455, 456, 458, 461, 457, 459, 460, 462, 475,
	463, 464, 465, 466, 467, 468, 469, 470, 471, 472,
	473, 474, 477, 0, 476, 0, 478, 479, 480, 481,
	482, 489, 491, 492, 487, 488, 490, 493, 494, 496,
	484, 485, 486, 0, 495, 483, 0, 290, 0, 497,
	498, 499, 500, 0, 704, 501, 705, 504, 505, 0,
	0, 506, 0, 507, 0, 0, 509, 510, 511, 0,
	0, 512, 513, 706, 0, 514, 0, 707, 515, 516,
	508, 517, 518, 519, 520, 521, 522, 523, 524, 525,
	0, 526, 527, 708, 528, 529, 530, 709, 531, 532,
	533, 710, 534, 711, 535, 536, 0, 537, 538, 539,
	0, 540, 541, 542, 543, 544, 545, 546, 712, 547,
	548, 550, 549, 551, 0, 552, 0, 553, 554, 555,
	0, 0, 0, 0, 0, 556, 557, 559, 0, 560,
	561, 562, 563, 558, 564, 565, 566, 567, 568, 0,
	569, 570, 571, 0, 572, 573, 574, 575, 576, 713,
	577, 0, 578, 579, 586, 587, 588, 580, 581, 582,
	589, 590, 591, 592, 593, 0, 595, 596, 594, 597,
	598, 599, 0, 600, 601, 583, 584, 602, 603, 0,
	604, 605, 606, 607, 608, 609, 610, 714, 0, 611,
	0, 612, 613, 614, 615, 616, 618, 585, 619, 624,
	625, 715, 620, 621, 622, 623, 716, 627, 628, 0,
	629, 630, 0, 626, 617, 0, 631, 632, 633, 634,
	635, 636, 0, 637, 638, 0, 639, 717, 718, 719,
	720, 0, 649, 0, 640, 641, 642, 643, 721, 644,
	722, 0, 645, 646, 647, 648, 0, 650, 651, 0,
	0, 652, 653, 655, 657, 658, 654, 656, 659, 0,
	660, 0, 0, 661, 662, 663, 723, 724, 725, 0,
	665, 664, 666, 667, 668, 726, 669, 670, 285, 0,
	0, 0, 671, 672, 727, 673, 674, 675, 0, 0,
	0, 0, 0, 0, 0, 291, 292, 294, 293, 295,
	296, 297, 298, 0, 299, 300, 0, 0, 0, 0,
	0, 676, 0, 0, 0, 301, 0, 302, 303, 0,
	304, 305, 306, 307, 308, 309, 310, 677, 678, 0,
	311, 679, 312, 680, 0, 681, 313, 314, 315, 316,
	317, 318, 0, 0, 0, 319, 682, 683, 684, 0,
	320, 321, 685, 0, 0, 0, 322, 323, 324, 325,
	326, 327, 328, 329, 0, 0, 331, 332, 333, 330,
	334, 0, 335, 0, 336, 337, 338, 339, 340, 341,
	0, 342, 343, 344, 0, 345, 346, 347, 0, 0,
	0, 0, 0, 0, 0, 348, 349, 350, 2535, 352,
	0, 353, 355, 686, 687, 0, 358, 354, 356, 0,
	359, 357, 360, 0, 361, 362, 363, 0, 0, 364,
	365, 366, 0, 367, 368, 369, 0, 370, 371, 372,
	0, 373, 374, 688, 375, 376, 377, 379, 381, 378,
	380, 382, 383, 384, 385, 689, 690, 386, 0, 288,
	0, 0, 0, 0, 0, 387, 388, 389, 691, 0,
	0, 0, 390, 0, 391, 392, 393, 0, 394, 0,
	0, 395, 396, 397, 692, 693, 398, 399, 400, 401,
	402, 403, 404, 405, 406, 0, 407, 694, 0, 695,
	408, 0, 409, 410, 411, 412, 413, 414, 696, 697,
	698, 502, 0, 415, 416, 0, 417, 418, 419, 420,
	421, 0, 0, 0, 289, 422, 423, 424, 0, 0,
	503, 425, 699, 700, 0, 701, 0, 426, 427, 0,
	702, 0, 428, 429, 430, 0, 431, 0, 0, 0,
	432, 433, 434, 435, 436, 437, 0, 438, 440, 439,
	0, 441, 703, 0, 442, 443, 0, 0, 444, 445,
	446, 447, 448, 449, 452, 0, 0, 450, 451, 453,
	454, 0, 455, 456, 458, 461, 457, 459, 460, 462,
	475, 463, 464, 465, 466, 467, 468, 469, 470, 471,
	472, 473, 474, 477, 0, 476, 0, 478, 479, 480,
	481, 482, 489, 491, 492, 487, 488, 490, 493, 494,
	496, 484, 485, 486, 0, 495, 483, 0, 290, 0,
	497, 498, 499, 500, 0, 704, 501, 705, 504, 505,
	0, 0, 506, 0, 507, 0, 0, 509, 510, 511,
	0, 0, 512, 513, 706, 0, 514, 0, 707, 515,
	516, 508, 517, 518, 519, 520, 521, 522, 523, 524,
	525, 0, 526, 527, 708, 528, 529, 530, 709, 531,
	532, 533, 710, 534, 711, 535, 536, 0, 537, 538,
	539, 0, 540, 541, 542, 543, 544, 545, 546, 712,
	547, 548, 550, 549, 551, 0, 552, 0, 553, 554,
	555, 0, 0, 0, 0, 0, 556, 557, 559, 0,
	560, 561, 562, 563, 558, 564, 565, 566, 567, 568,
	0, 569, 570, 571, 0, 572, 573, 574, 575, 576,
	713, 577, 0, 578, 579, 586, 587, 588, 580, 581,
	582, 589, 590, 591, 592, 593, 0, 595, 596, 594,
	597, 598, 599, 0, 600, 601, 583, 584, 602, 603,
	0, 604, 605, 606, 607, 608, 609, 610, 714, 0,
	611, 0, 612, 613, 614, 615, 616, 618, 585, 619,
	624, 625, 715, 620, 621, 622, 623, 716, 627, 628,
	0, 629, 630, 0, 626, 617, 0, 631, 632, 633,
	634, 635, 636, 0, 637, 638, 0, 639, 717, 718,
	719, 720, 0, 649, 0, 640, 641, 642, 643, 721,
	644, 722, 0, 645, 646, 647, 648, 0, 650, 651,
	0, 0, 652, 653, 655, 657, 658, 654, 656, 659,
	0, 660, 0, 0, 661, 662, 663, 723, 724, 725,
	0, 665, 664, 666, 667, 668, 726, 669, 670, 285,
	0, 0, 0, 671, 672, 727, 673, 674, 675, 0,
	0, 0, 0, 0, 0, 0, 291, 292, 294, 293,
	295, 296, 297, 298, 0, 299, 300, 0, 0, 0,
	0, 0, 676, 0, 0, 0, 301, 0, 302, 303,
	0, 304, 305, 306, 307, 308, 309, 310, 677, 678,
	0, 311, 679, 312, 680, 0, 681, 313, 314, 315,
	316, 317, 318, 0, 0, 0, 319, 682, 683, 684,
	0, 320, 321, 685, 0, 0, 0, 322, 323, 324,
	325, 326, 327, 328, 329, 0, 0, 331, 332, 333,
	330, 334, 0, 335, 0, 336, 337, 338, 339, 340,
	341, 0, 342, 343, 344, 0, 345, 346, 347, 0,
	0, 0, 0, 0, 0, 0, 348, 349, 350, 351,
	352, 0, 353, 355, 686, 687, 0, 358, 354, 356,
	0, 359, 357, 360, 0, 361, 362, 363, 0, 0,
	364, 365, 366, 0, 367, 368, 369, 0, 370, 371,
	372, 0, 373, 374, 688, 375, 376, 377, 379, 381,
	378, 380, 382, 383, 384, 385, 689, 690, 386, 0,
	288, 0, 0, 0, 0, 0, 387, 388, 389, 691,
	0, 0, 0, 390, 0, 391, 392, 393, 0, 394,
	0, 0, 395, 396, 397, 692, 693, 398, 399, 400,
	401, 402, 403, 404, 405, 406, 0, 407, 694, 0,
	695, 408, 0, 409, 410, 411, 412, 413, 414, 2449,
	697, 698, 502, 0, 415, 416, 0, 417, 418, 419,
	420, 421, 0, 0, 0, 289, 422, 423, 424, 0,
	0, 503, 425, 699, 700, 0, 701, 0, 426, 427,
	0, 702, 0, 428, 429, 430, 0, 431, 0, 0,
	0, 432, 433, 434, 435, 436, 437, 0, 438, 440,
	439, 0, 441, 703, 0, 442, 443, 0, 0, 444,
	445, 446, 447, 448, 449, 452, 0, 0, 450, 451,
	453, 454, 0, 455, 456, 458, 461, 457, 459, 460,
	462, 475, 463, 464, 465, 466, 467, 468, 469, 470,
	471, 472, 473, 474, 477, 0, 476, 0, 478, 479,
	480, 481, 482, 489, 491, 492, 487, 488, 490, 493,
	494, 496, 484, 485, 486, 0, 495, 483, 0, 290,
	0, 497, 498, 499, 500, 0, 704, 501, 705, 504,
	505, 0, 0, 506, 0, 507, 0, 0, 509, 510,
	511, 0, 0, 512, 513, 706, 0, 514, 0, 707,
	515, 516, 508, 517, 518, 519, 520, 521, 522, 523,
	524, 525, 0, 526, 527, 708, 528, 529, 530, 709,
	531, 532, 533, 710, 534, 711, 535, 536, 0, 537,
	538, 539, 0, 540, 541, 542, 543, 544, 545, 546,
	712, 547, 548, 550, 549, 551, 0, 552, 0, 553,
	554, 555, 0, 0, 0, 0, 0, 556, 557, 559,
	0, 560, 561, 562, 563, 558, 564, 565, 566, 567,
	568, 0, 569, 570, 571, 0, 572, 573, 574, 575,
	576, 713, 577, 0, 578, 579, 586, 587, 588, 580,
	581, 582, 589, 590, 591, 592, 593, 0, 595, 596,
	594, 597, 598, 599, 0, 600, 601, 583, 584, 602,
	603, 0, 604, 605, 606, 607, 608, 609, 610, 714,
	0, 611, 0, 612, 613, 614, 615, 616, 618, 585,
	619, 624, 625, 715, 620, 621, 622, 623, 716, 627,
	628, 0, 629, 630, 0, 626, 617, 0, 631, 632,
	633, 634, 635, 636, 0, 637, 638, 0, 639, 717,
	718, 719, 720, 0, 649, 0, 640, 641, 642, 643,
	721, 644, 722, 0, 645, 646, 647, 648, 0, 650,
	651, 0, 0, 652, 653, 655, 657, 658, 654, 656,
	659, 0, 660, 0, 0, 661, 662, 663, 723, 724,
	725, 0, 665, 664, 666, 667, 668, 726, 669, 670,
	285, 0, 0, 0, 671, 672, 727, 673, 674, 675,
	0, 0, 0, 0, 0, 0, 0, 291, 292, 294,
	293, 295, 296, 297, 298, 0, 299, 300, 0, 0,
	0, 0, 0, 676, 0, 0, 0, 301, 0, 302,
	303, 0, 304, 305, 306, 307, 308, 309, 310, 677,
	678, 0, 311, 679, 312, 680, 0, 681, 313, 314,
	315, 316, 317, 318, 0, 0, 0, 319, 682, 683,
	684, 0, 320, 321, 685, 0, 0, 0, 322, 323,
	324, 325, 326, 327, 328, 329, 0, 0, 331, 332,
	333, 330, 334, 0, 335, 0, 336, 337, 338, 339,
	340, 341, 0, 342, 343, 344, 0, 345, 346, 347,
	0, 0, 0, 0, 0, 0, 0, 348, 349, 350,
	351, 352, 0, 353, 355, 686, 687, 0, 358, 354,
	356, 0, 359, 357, 360, 0, 361, 362, 363, 0,
	0, 364, 365, 366, 0, 367, 368, 369, 0, 370,
	371, 372, 0, 373, 374, 688, 375, 376, 377, 379,
	381, 378, 380, 382, 383, 384, 385, 689, 690, 386,
	0, 288, 0, 0, 0, 0, 0, 387, 388, 389,
	691, 0, 0, 0, 390, 0, 391, 392, 393, 0,
	394, 0, 0, 395, 396, 397, 692, 693, 398, 399,
	400, 401, 402, 403, 404, 405, 406, 0, 407, 694,
	0, 695, 408, 0, 409, 410, 411, 412, 413, 414,
	2207, 697, 698, 502, 0, 415, 416, 0, 417, 418,
	419, 420, 421, 0, 0, 0, 289, 422, 423, 424,
	0, 0, 503, 425, 699, 700, 0, 701, 0, 426,
	427, 0, 702, 0, 428, 429, 430, 0, 431, 0,
	0, 0, 432, 433, 434, 435, 436, 437, 0, 438,
	440, 439, 0, 441, 703, 0, 442, 443, 0, 0,
	444, 445, 446, 447, 448, 449, 452, 0, 0, 450,
	451, 453, 454, 0, 455, 456, 458, 461, 457, 459,
	460, 462, 475, 463, 464, 465, 466, 467, 468, 469,
	470, 471, 472, 473, 474, 477, 0, 476, 0, 478,
	479, 480, 481, 482, 489, 491, 492, 487, 488, 490,
	493, 494, 496, 484, 485, 486, 0, 495, 483, 0,
	290, 0, 497, 498, 499, 500, 0, 704, 501, 705,
	504, 505, 0, 0, 506, 0, 507, 0, 0, 509,
	510, 511, 0, 0, 512, 513, 706, 0, 514, 0,
	707, 515, 516, 508, 517, 518, 519, 520, 521, 522,
	523, 524, 525, 0, 526, 527, 708, 528, 529, 530,
	709, 531, 532, 533, 710, 534, 711, 535, 536, 0,
	537, 538, 539, 0, 540, 541, 542, 543, 544, 545,
	546, 712, 547, 548, 550, 549, 551, 0, 552, 0,
	553, 554, 555, 0, 0, 0, 0, 0, 556, 557,
	559, 0, 560, 561, 562, 563, 558, 564, 565, 566,
	567, 568, 0, 569, 570, 571, 0, 572, 573, 574,
	575, 576, 713, 577, 0, 578, 579, 586, 587, 588,
	580, 581, 582, 589, 590, 591, 592, 593, 0, 595,
	596, 594, 597, 598, 599, 0, 600, 601, 583, 584,
	602, 603, 0, 604, 605, 606, 607, 608, 609, 610,
	714, 0, 611, 0, 612, 613, 614, 615, 616, 618,
	585, 619, 624, 625, 715, 620, 621, 622, 623, 716,
	627, 628, 0, 629, 630, 0, 626, 617, 0, 631,
	632, 633, 634, 635, 636, 0, 637, 638, 0, 639,
	717, 718, 719, 720, 0, 649, 0, 640, 641, 642,
	643, 721, 644, 722, 0, 645, 646, 647, 648, 0,
	650, 651, 0, 0, 652, 653, 655, 657, 658, 654,
	656, 659, 0, 660, 0, 0, 661, 662, 663, 723,
	724, 725, 0, 665, 664, 666, 667, 668, 726, 669,
	670, 285, 0, 0, 0, 671, 672, 727, 673, 674,
	675, 0, 0, 0, 0, 0, 0, 0, 291, 292,
	294, 293, 295, 296, 297, 298, 0, 299, 300, 0,
	0, 0, 0, 0, 676, 0, 0, 0, 301, 0,
	302, 303, 0, 304, 305, 306, 307, 308, 309, 310,
	677, 678, 0, 311, 679, 312, 680, 0, 681, 313,
	314, 315, 316, 317, 318, 0, 0, 0, 319, 682,
	683, 684, 0, 320, 321, 685, 0, 0, 0, 322,
	323, 324, 325, 326, 327, 328, 329, 0, 0, 331,
	332, 333, 330, 334, 0, 335, 0, 336, 337, 338,
	339, 340, 341, 0, 342, 343, 344, 0, 345, 346,
	347, 0, 0, 0, 0, 0, 0, 0, 348, 349,
	350, 351, 352, 0, 353, 355, 686, 687, 0, 358,
	354, 356, 0, 359, 357, 360, 0, 361, 362, 363,
	0, 0, 364, 365, 366, 0, 367, 368, 369, 0,
	370, 371, 372, 0, 373, 374, 688, 375, 376, 377,
	379, 381, 378, 380, 382, 383, 384, 385, 689, 690,
	386, 0, 288, 0, 0, 0, 0, 0, 387, 388,
	389, 691, 0, 0, 0, 390, 0, 391, 392, 393,
	0, 394, 0, 0, 395, 396, 397, 692, 693, 398,
	399, 400, 401, 402, 403, 404, 405, 406, 0, 407,
	694, 0, 695, 408, 0, 409, 410, 411, 412, 413,
	414, 2201, 697, 698, 502, 0, 415, 416, 0, 417,
	418, 419, 420, 421, 0, 0, 0, 289, 422, 423,
	424, 0, 0, 503, 425, 699, 700, 0, 701, 0,
	426, 427, 0, 702, 0, 428, 429, 430, 0, 431,
	0, 0, 0, 432, 433, 434, 435, 436, 437, 0,
	438, 440, 439, 0, 441, 703, 0, 442, 443, 0,
	0, 444, 445, 446, 447, 448, 449, 452, 0, 0,
	450, 451, 453, 454, 0, 455, 456, 458, 461, 457,
	459, 460, 462, 475, 463, 464, 465, 466, 467, 468,
	469, 470, 471, 472, 473, 474, 477, 0, 476, 0,
	478, 479, 480, 481, 482, 489, 491, 492, 487, 488,
	490, 493, 494, 496, 484, 485, 486, 0, 495, 483,
	0, 290, 0, 497, 498, 499, 500, 0, 704, 501,
	705, 504, 505, 0, 0, 506, 0, 507, 0, 0,
	509, 510, 511, 0, 0, 512, 513, 706, 0, 514,
	0, 707, 515, 516, 508, 517, 518, 519, 520, 521,
	522, 523, 524, 525, 0, 526, 527, 708, 528, 529,
	530, 709, 531, 532, 533, 710, 534, 711, 535, 536,
	0, 537, 538, 539, 0, 540, 541, 542, 543, 544,
	545, 546, 712, 547, 548, 550, 549, 551, 0, 552,
	0, 553, 554, 555, 0, 0, 0, 0, 0, 556,
	557, 559, 0, 560, 561, 562, 563, 558, 564, 565,
	566, 567, 568, 0, 569, 570, 571, 0, 572, 573,
	574, 575, 576, 713, 577, 0, 578, 579, 586, 587,
	588, 580, 581, 582, 589, 590, 591, 592, 593, 0,
	595, 596, 594, 597, 598, 599, 0, 600, 601, 583,
	584, 602, 603, 0, 604, 605, 606, 607, 608, 609,
	610, 714, 0, 611, 0, 612, 613, 614, 615, 616,
	618, 585, 619, 624, 625, 715, 620, 621, 622, 623,
	716, 627, 628, 0, 629, 630, 0, 626, 617, 0,
	631, 632, 633, 634, 635, 636, 0, 637, 638, 0,
	639, 717, 718, 719, 720, 0, 649, 0, 640, 641,
	642, 643, 721, 644, 722, 0, 645, 646, 647, 648,
	0, 650, 651, 0, 0, 652, 653, 655, 657, 658,
	654, 656, 659, 0, 660, 0, 0, 661, 662, 663,
	723, 724, 725, 0, 665, 664, 666, 667, 668, 726,
	669, 670, 964, 0, 285, 0, 671, 672, 727, 673,
	674, 675, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 291, 292, 294, 293, 295, 296, 297, 298, 0,
	299, 300, 0, 0, 0, 0, 0, 676, 0, 0,
	0, 301, 0, 302, 303, 0, 304, 305, 306, 307,
	308, 309, 310, 677, 678, 0, 311, 679, 312, 680,
	0, 681, 313, 314, 315, 316, 317, 318, 0, 0,
	0, 319, 682, 683, 684, 0, 320, 321, 685, 0,
	0, 0, 322, 323, 324, 325, 326, 327, 328, 329,
	0, 0, 331, 332, 333, 330, 334, 0, 335, 0,
	336, 337, 338, 339, 340, 341, 0, 342, 343, 344,
	0, 345, 346, 347, 0, 0, 0, 0, 0, 0,
	0, 348, 349, 350, 351, 352, 0, 353, 355, 686,
	687, 0, 358, 354, 356, 0, 359, 357, 360, 0,
	361, 362, 363, 0, 0, 364, 365, 366, 0, 367,
	368, 369, 0, 370, 371, 372, 0, 373, 374, 688,
	375, 376, 377, 379, 381, 378, 380, 382, 383, 384,
	385, 689, 690, 386, 0, 0, 0, 0, 0, 0,
	0, 387, 388, 389, 691, 0, 0, 0, 390, 0,
	391, 392, 393, 0, 394, 0, 0, 395, 396, 397,
	692, 693, 398, 399, 400, 401, 402, 403, 404, 405,
	406, 0, 407, 694, 0, 695, 408, 0, 409, 410,
	411, 412, 413, 414, 696, 697, 698, 502, 0, 415,
	416, 0, 417, 418, 419, 420, 421, 0, 0, 0,
	0, 422, 423, 424, 0, 0, 503, 425, 699, 700,
	0, 701, 963, 426, 427, 0, 702, 0, 428, 429,
	430, 0, 431, 0, 0, 0, 432, 433, 434, 435,
	436, 437, 0, 438, 440, 439, 0, 441, 703, 0,
	442, 443, 0, 0, 444, 445, 446, 447, 448, 449,
	452, 0, 0, 450, 451, 453, 454, 0, 455, 456,
	458, 461, 457, 459, 460, 462, 475, 463, 464, 465,
	466, 467, 468, 469, 470, 471, 472, 473, 474, 477,
	0, 476, 0, 478, 479, 480, 481, 482, 489, 491,
	492, 487, 488, 490, 493, 494, 496, 484, 485, 486,
	0, 495, 483, 0, 0, 0, 497, 498, 499, 500,
	0, 704, 501, 705, 504, 505, 0, 0, 506, 0,
	507, 0, 0, 509, 510, 511, 0, 0, 512, 513,
	706, 0, 514, 0, 707, 515, 516, 508, 517, 518,
	519, 520, 521, 522, 523, 524, 525, 0, 526, 527,
	708, 528, 529, 530, 709, 531, 532, 533, 710, 534,
	711, 535, 536, 0, 537, 538, 539, 0, 540, 541,
	542, 543, 544, 545, 546, 712, 547, 548, 550, 549,
	551, 0, 552, 0, 553, 554, 555, 0, 0, 0,
	0, 0, 556, 557, 559, 0, 560, 561, 562, 563,
	558, 564, 565, 566, 567, 568, 0, 569, 570, 571,
	0, 572, 573, 574, 575, 576, 713, 577, 0, 578,
	579, 586, 587, 588, 580, 581, 582, 589, 590, 591,
	592, 593, 0, 595, 596, 594, 597, 598, 599, 0,
	600, 601, 583, 584, 602, 603, 0, 604, 605, 606,
	607, 608, 609, 610, 714, 0, 611, 0, 612, 613,
	614, 615, 616, 618, 585, 619, 624, 625, 715, 620,
	621, 622, 623, 716, 627, 628, 0, 629, 630, 0,
	626, 617, 962, 631, 632, 633, 634, 635, 636, 0,
	637, 638, 0, 639, 717, 718, 719, 720, 0, 649,
	0, 640, 641, 642, 643, 721, 644, 722, 0, 645,
	646, 647, 648, 0, 650, 651, 0, 0, 652, 653,
	655, 657, 658, 654, 656, 659, 0, 660, 0, 0,
	661, 662, 663, 723, 724, 725, 0, 665, 664, 666,
	667, 668, 726, 669, 670, 832, 0, 285, 0, 671,
	672, 727, 673, 674, 675, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 291, 838, 294, 293, 295, 296,
	297, 298, 0, 299, 300, 0, 0, 0, 0, 0,
	676, 0, 0, 0, 301, 0, 302, 303, 0, 304,
	305, 306, 307, 847, 309, 310, 677, 678, 0, 311,
	679, 312, 680, 0, 681, 313, 314, 315, 316, 317,
	318, 0, 0, 0, 319, 682, 683, 684, 0, 320,
	321, 685, 0, 0, 0, 322, 323, 324, 325, 326,
	327, 328, 329, 0, 0, 331, 332, 333, 330, 334,
	0, 335, 0, 336, 337, 338, 339, 340, 341, 0,
	342, 343, 344, 0, 345, 346, 347, 0, 0, 0,
	0, 0, 0, 0, 348, 349, 350, 351, 352, 0,
	353, 355, 686, 687, 0, 358, 354, 356, 0, 359,
	357, 360, 0, 361, 362, 363, 0, 0, 364, 365,
	366, 0, 367, 368, 369, 0, 370, 371, 372, 0,
	373, 374, 688, 375, 376, 377, 379, 381, 378, 380,
	382, 383, 384, 385, 689, 690, 386, 0, 0, 0,
	0, 0, 0, 0, 387, 388, 840, 691, 0, 0,
	0, 390, 0, 391, 392, 393, 0, 846, 842, 0,
	395, 396, 397, 692, 693, 398, 399, 400, 401, 402,
	403, 404, 405, 406, 0, 407, 694, 0, 695, 408,
	0, 409, 410, 411, 412, 413, 414, 696, 697, 698,
	502, 0, 415, 416, 843, 417, 418, 419, 420, 421,
	0, 0, 0, 0, 422, 423, 424, 0, 0, 503,
	425, 699, 700, 0, 701, 0, 426, 427, 0, 702,
	0, 428, 429, 430, 0, 431, 0, 0, 0, 432,
	433, 434, 435, 436, 841, 0, 438, 440, 439, 0,
	441, 703, 0, 442, 443, 0, 0, 444, 445, 446,
	447, 448, 449, 452, 0, 0, 450, 451, 453, 454,
	0, 455, 456, 458, 461, 457, 459, 460, 462, 475,
	463, 464, 465, 466, 467, 468, 469, 470, 471, 472,
	473, 474, 477, 0, 476, 0, 478, 479, 480, 844,
	482, 489, 491, 492, 487, 488, 490, 493, 494, 496,
	484, 485, 486, 0, 495, 483, 0, 0, 0, 497,
	498, 499, 500, 0, 704, 501, 705, 504, 505, 0,
	0, 506, 0, 507, 0, 0, 509, 510, 511, 0,
	0, 512, 513, 706, 0, 514, 0, 707, 515, 516,
	508, 517, 518, 519, 520, 521, 522, 523, 524, 525,
	0, 526, 527, 708, 528, 529, 530, 709, 531, 532,
	533, 710, 534, 711, 535, 536, 0, 845, 538, 539,
	0, 540, 541, 542, 543, 544, 545, 546, 712, 547,
	548, 550, 549, 551, 0, 552, 0, 553, 554, 555,
	0, 0, 0, 0, 0, 556, 839, 559, 0, 560,
	561, 562, 563, 558, 564, 565, 566, 567, 568, 0,
	569, 570, 571, 0, 572, 573, 574, 575, 576, 713,
	577, 0, 578, 579, 586, 587, 588, 580, 581, 582,
	589, 590, 591, 592, 593, 0, 595, 596, 594, 597,
	598, 599, 0, 600, 601, 583, 584, 602, 603, 0,
	604, 605, 606, 607, 608, 609, 610, 714, 0, 611,
	0, 612, 613, 614, 615, 616, 618, 585, 619, 624,
	625, 715, 620, 621, 622, 623, 716, 627, 628, 0,
	629, 630, 0, 626, 617, 0, 631, 632, 633, 634,
	635, 636, 0, 637, 638, 0, 639, 717, 718, 719,
	720, 0, 649, 0, 640, 641, 642, 643, 721, 644,
	722, 0, 645, 646, 647, 648, 0, 650, 651, 0,
	0, 652, 653, 655, 657, 658, 654, 656, 659, 0,
	660, 0, 0, 661, 662, 663, 723, 724, 725, 0,
	665, 664, 666, 667, 668, 726, 669, 670, 285, 0,
	0, 0, 671, 672, 727, 673, 674, 675, 0, 0,
	0, 0, 0, 0, 0, 291, 292, 294, 293, 295,
	296, 297, 298, 0, 299, 300, 0, 0, 0, 0,
	0, 676, 0, 0, 0, 301, 0, 302, 303, 0,
	304, 305, 306, 307, 308, 309, 310, 677, 678, 0,
	311, 679, 312, 680, 0, 681, 313, 314, 315, 316,
	317, 318, 0, 0, 0, 319, 682, 683, 684, 0,
	320, 321, 685, 0, 0, 0, 322, 323, 324, 325,
	326, 327, 328, 329, 0, 0, 331, 332, 333, 330,
	334, 0, 335, 0, 336, 337, 338, 339, 340, 341,
	0, 342, 343, 344, 0, 345, 346, 347, 0, 0,
	0, 0, 0, 0, 0, 348, 349, 350, 351, 352,
	0, 353, 355, 686, 687, 0, 358, 354, 356, 0,
	359, 357, 360, 0, 361, 362, 363, 0, 0, 364,
	365, 366, 0, 367, 368, 369, 0, 370, 371, 372,
	0, 373, 374, 688, 375, 376, 377, 379, 381, 378,
	380, 382, 383, 384, 385, 689, 690, 386, 0, 3812,
	0, 0, 0, 0, 0, 387, 388, 389, 691, 0,
	0, 0, 390, 0, 391, 392, 393, 0, 394, 0,
	0, 395, 396, 397, 692, 693, 398, 399, 400, 401,
	402, 403, 404, 405, 406, 0, 407, 694, 0, 695,
	408, 0, 409, 410, 411, 412, 413, 414, 696, 697,
	698, 502, 0, 415, 416, 0, 417, 418, 419, 420,
	421, 0, 0, 0, 0, 422, 423, 424, 0, 0,
	503, 425, 699, 700, 0, 701, 0, 426, 427, 0,
	702, 0, 428, 429, 430, 0, 431, 0, 0, 0,
	432, 433, 434, 435, 436, 437, 0, 438, 440, 439,
	0, 441, 703, 0, 442, 443, 0, 0, 444, 445,
	446, 447, 448, 449, 452, 0, 0, 450, 451, 453,
	454, 0, 455, 456, 458, 461, 457, 459, 460, 462,
	475, 463, 464, 465, 466, 467, 468, 469, 470, 471,
	472, 473, 474, 477, 0, 476, 0, 478, 479, 480,
	481, 482, 489, 491, 492, 487, 488, 490, 493, 494,
	496, 484, 485, 486, 0, 495, 483, 0, 0, 0,
	497, 498, 499, 500, 0, 704, 501, 705, 504, 505,
	0, 0, 506, 0, 507, 0, 0, 509, 510, 511,
	0, 0, 512, 513, 706, 0, 514, 0, 707, 515,
	516, 508, 517, 518, 519, 520, 521, 522, 523, 524,
	525, 0, 526, 527, 708, 528, 529, 530, 709, 531,
	532, 533, 710, 534, 711, 535, 536, 4530, 537, 538,
	539, 0, 540, 541, 542, 543, 544, 545, 546, 712,
	547, 548, 550, 549, 551, 0, 552, 0, 553, 554,
	555, 0, 0, 0, 0, 0, 556, 557, 559, 0,
	560, 561, 562, 563, 558, 564, 565, 566, 567, 568,
	0, 569, 570, 571, 0, 572, 573, 574, 575, 576,
	713, 577, 0, 578, 579, 586, 587, 588, 580, 581,
	582, 589, 590, 591, 592, 593, 0, 595, 596, 594,
	597, 598, 599, 0, 600, 601, 583, 584, 602, 603,
	0, 604, 605, 606, 607, 608, 609, 610, 714, 0,
	611, 0, 612, 613, 614, 615, 616, 618, 585, 619,
	624, 625, 715, 620, 621, 622, 623, 716, 627, 628,
	0, 629, 630, 0, 626, 617, 0, 631, 632, 633,
	634, 635, 636, 0, 637, 638, 0, 639, 717, 718,
	719, 720, 0, 649, 0, 640, 641, 642, 643, 721,
	644, 722, 0, 645, 646, 647, 648, 0, 650, 651,
	0, 0, 652, 653, 655, 657, 658, 654, 656, 659,
	0, 660, 0, 0, 661, 662, 663, 723, 724, 725,
	0, 665, 664, 666, 667, 668, 726, 669, 670, 1432,
	0, 285, 0, 671, 672, 727, 673, 674, 675, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 291, 292,
	294, 293, 295, 296, 297, 298, 0, 299, 300, 0,
	0, 0, 0, 0, 676, 0, 0, 0, 301, 0,
	302, 303, 1435, 304, 305, 306, 307, 308, 309, 310,
	677, 678, 0, 311, 679, 312, 680, 0, 681, 313,
	314, 315, 316, 317, 318, 0, 0, 0, 319, 682,
	683, 1433, 0, 320, 321, 685, 0, 0, 0, 322,
	323, 324, 325, 326, 327, 328, 329, 0, 0, 331,
	332, 333, 330, 334, 0, 335, 0, 336, 337, 338,
	339, 340, 341, 0, 342, 343, 344, 0, 345, 346,
	347, 0, 0, 0, 0, 0, 0, 0, 348, 349,
	350, 351, 352, 0, 353, 355, 686, 687, 0, 358,
	354, 356, 0, 359, 357, 360, 0, 361, 362, 363,
	0, 0, 364, 365, 366, 0, 367, 368, 369, 0,
	370, 371, 372, 0, 373, 374, 688, 375, 376, 377,
	379, 381, 378, 380, 382, 383, 384, 385, 689, 690,
	386, 0, 0, 0, 0, 0, 0, 0, 387, 388,
	389, 691, 0, 0, 0, 390, 0, 391, 392, 393,
	0, 394, 0, 0, 395, 396, 397, 692, 693, 398,
	399, 400, 401, 402, 403, 404, 405, 406, 0, 407,
	694, 0, 695, 408, 0, 409, 410, 411, 412, 413,
	414, 696, 697, 698, 502, 0, 415, 416, 0, 417,
	418, 419, 420, 421, 0, 0, 0, 0, 422, 423,
	424, 0, 0, 503, 425, 699, 700, 0, 701, 0,
	426, 427, 0, 702, 0, 428, 429, 430, 0, 431,
	0, 0, 0, 432, 433, 434, 435, 436, 437, 0,
	438, 440, 439, 0, 441, 703, 0, 442, 443, 0,
	0, 444, 445, 446, 447, 448, 449, 452, 0, 0,
	450, 451, 453, 454, 0, 455, 456, 458, 461, 457,
	459, 460, 462, 475, 463, 464, 465, 466, 467, 468,
	469, 470, 471, 472, 473, 474, 477, 0, 820, 0,
	478, 479, 480, 481, 482, 489, 491, 492, 487, 488,
	490, 493, 494, 496, 484, 485, 486, 0, 495, 483,
	0, 0, 0, 497, 498, 499, 500, 0, 704, 501,
	705, 504, 505, 0, 0, 506, 0, 507, 0, 0,
	509, 510, 511, 0, 0, 512, 513, 706, 0, 514,
	0, 707, 515, 516, 508, 517, 518, 519, 520, 521,
	522, 523, 524, 525, 0, 526, 527, 708, 528, 529,
	530, 709, 531, 532, 533, 710, 534, 711, 535, 536,
	0, 537, 538, 539, 0, 540, 541, 542, 543, 544,
	545, 546, 712, 547, 548, 550, 549, 551, 0, 552,
	0, 553, 554, 555, 0, 0, 0, 0, 0, 556,
	557, 559, 0, 560, 561, 562, 563, 558, 564, 565,
	566, 567, 568, 0, 569, 570, 571, 0, 819, 573,
	574, 575, 576, 713, 577, 0, 578, 579, 586, 587,
	588, 580, 581, 582, 818, 590, 591, 592, 593, 0,
	595, 596, 594, 597, 1436, 599, 0, 600, 601, 583,
	584, 602, 603, 0, 604, 605, 606, 607, 608, 609,
	610, 714, 0, 611, 0, 612, 613, 614, 615, 616,
	618, 585, 619, 624, 625, 715, 620, 621, 622, 623,
	716, 627, 628, 0, 629, 630, 0, 626, 617, 0,
	631, 632, 633, 634, 635, 636, 0, 637, 638, 0,
	639, 816, 718, 719, 720, 0, 649, 0, 640, 641,
	642, 643, 721, 644, 722, 0, 645, 646, 647, 648,
	0, 650, 651, 0, 0, 652, 653, 655, 657, 658,
	654, 656, 659, 0, 660, 0, 0, 661, 662, 663,
	723, 724, 725, 0, 665, 664, 666, 667, 668, 726,
	669, 670, 1432, 0, 285, 0, 671, 672, 727, 673,
	674, 675, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 291, 292, 294, 293, 295, 296, 297, 298, 0,
	299, 300, 0, 0, 0, 0, 0, 676, 0, 0,
	0, 301, 0, 302, 303, 1435, 304, 305, 306, 307,
	308, 309, 310, 677, 678, 0, 311, 679, 312, 680,
	0, 681, 313, 314, 315, 316, 317, 318, 0, 0,
	0, 319, 682, 683, 1433, 0, 320, 321, 685, 0,
	0, 0, 322, 323, 324, 325, 326, 327, 328, 329,
	0, 0, 331, 332, 333, 330, 334, 0, 335, 0,
	336, 337, 338, 339, 340, 341, 0, 342, 343, 344,
	0, 345, 346, 347, 0, 0, 0, 0, 0, 0,
	0, 348, 349, 350, 351, 352, 0, 353, 355, 686,
	687, 0, 358, 354, 356, 0, 359, 357, 360, 0,
	361, 362, 363, 0, 0, 364, 365, 366, 0, 367,
	368, 369, 0, 370, 371, 372, 0, 373, 374, 688,
	375, 376, 377, 379, 381, 378, 380, 382, 383, 384,
	385, 689, 690, 386, 0, 0, 0, 0, 0, 0,
	0, 387, 388, 389, 691, 0, 0, 0, 390, 0,
	391, 392, 393, 0, 394, 0, 0, 395, 396, 397,
	692, 693, 398, 399, 400, 401, 402, 403, 404, 405,
	406, 0, 407, 694, 0, 695, 408, 0, 409, 410,
	411, 412, 413, 414, 696, 697, 698, 502, 0, 415,
	416, 0, 417, 418, 419, 420, 421, 0, 0, 0,
	0, 422, 423, 424, 0, 0, 503, 425, 699, 700,
	0, 701, 0, 426, 427, 0, 702, 0, 428, 429,
	430, 0, 431, 0, 0, 0, 432, 433, 434, 435,
	436, 437, 0, 438, 440, 439, 0, 441, 703, 0,
	442, 443, 0, 0, 444, 445, 446, 447, 448, 449,
	452, 0, 0, 450, 451, 453, 454, 0, 455, 456,
	458, 461, 457, 459, 460, 462, 475, 463, 464, 465,
	466, 467, 468, 469, 470, 471, 472, 473, 474, 477,
	0, 820, 0, 478, 479, 480, 481, 482, 489, 491,
	492, 487, 488, 490, 493, 494, 496, 484, 485, 486,
	0, 495, 483, 0, 0, 0, 497, 498, 499, 500,
	0, 704, 501, 705, 504, 505, 0, 0, 506, 0,
	507, 0, 0, 509, 510, 511, 0, 0, 512, 513,
	706, 0, 514, 0, 707, 515, 516, 508, 517, 518,
	519, 520, 521, 522, 523, 524, 525, 0, 526, 527,
	708, 528, 529, 530, 709, 531, 532, 533, 710, 534,
	711, 535, 536, 0, 537, 538, 539, 0, 540, 541,
	542, 543, 544, 545, 546, 712, 547, 548, 550, 549,
	551, 0, 552, 0, 553, 554, 555, 0, 0, 0,
	0, 0, 556, 557, 559, 0, 560, 561, 562, 563,
	558, 564, 565, 566, 567, 568, 0, 569, 570, 571,
	0, 819, 573, 574, 575, 576, 713, 577, 0, 578,
	579, 586, 587, 588, 580, 581, 582, 818, 590, 591,
	592, 593, 0, 595, 596, 594, 597, 1436, 599, 0,
	600, 601, 583, 584, 602, 603, 0, 604, 605, 606,
	607, 608, 609, 610, 714, 0, 611, 0, 612, 613,
	614, 615, 616, 618, 585, 619, 624, 625, 715, 620,
	621, 622, 623, 716, 627, 628, 0, 629, 630, 0,
	626, 617, 0, 631, 632, 633, 634, 635, 636, 0,
	637, 638, 0, 639, 816, 718, 719, 720, 0, 649,
	0, 640, 1434, 642, 643, 721, 644, 722, 0, 645,
	646, 647, 648, 0, 650, 651, 0, 0, 652, 653,
	655, 657, 658, 654, 656, 659, 0, 660, 0, 0,
	661, 662, 663, 723, 724, 725, 0, 665, 664, 666,
	667, 668, 726, 669, 670, 827, 0, 285, 0, 671,
	672, 727, 673, 674, 675, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 291, 292, 294, 293, 295, 296,
	297, 298, 825, 299, 300, 0, 0, 0, 0, 0,
	676, 0, 0, 0, 301, 0, 302, 303, 0, 304,
	305, 306, 307, 308, 309, 310, 677, 678, 0, 311,
	679, 312, 680, 0, 681, 313, 314, 315, 316, 317,
	318, 0, 0, 0, 319, 682, 683, 684, 0, 320,
	321, 685, 0, 0, 0, 322, 323, 324, 325, 326,
	327, 328, 329, 0, 0, 331, 332, 333, 330, 334,
	0, 335, 0, 336, 337, 338, 339, 340, 341, 0,
	342, 343, 344, 0, 345, 346, 347, 0, 0, 0,
	0, 0, 0, 0, 348, 349, 350, 351, 352, 0,
	353, 355, 686, 687, 0, 358, 354, 356, 0, 359,
	357, 360, 0, 361, 362, 363, 0, 0, 364, 365,
	366, 0, 367, 368, 369, 0, 370, 371, 372, 0,
	373, 374, 688, 375, 376, 377, 379, 381, 378, 380,
	382, 383, 384, 385, 689, 690, 386, 0, 0, 0,
	0, 0, 0, 0, 387, 388, 389, 691, 0, 0,
	0, 390, 0, 391, 392, 393, 0, 394, 0, 0,
	395, 396, 397, 692, 693, 398, 399, 400, 401, 402,
	403, 404, 405, 406, 0, 407, 694, 0, 695, 408,
	0, 409, 410, 411, 412, 413, 414, 696, 697, 698,
	502, 0, 415, 416, 0, 417, 418, 419, 420, 421,
	0, 0, 0, 0, 422, 423, 424, 0, 0, 503,
	425, 699, 700, 0, 701, 0, 426, 427, 0, 702,
	0, 428, 429, 430, 0, 431, 0, 0, 0, 432,
	433, 434, 435, 436, 437, 0, 438, 440, 439, 0,
	441, 703, 0, 442, 443, 0, 0, 444, 445, 446,
	447, 448, 449, 452, 0, 0, 450, 451, 453, 454,
	0, 455, 456, 458, 461, 457, 459, 460, 462, 475,
	463, 464, 465, 466, 467, 468, 469, 470, 471, 472,
	473, 474, 477, 0, 476, 0, 478, 479, 480, 481,
	482, 489, 491, 492, 487, 488, 490, 493, 494, 496,
	484, 485, 486, 0, 495, 483, 0, 0, 0, 497,
	498, 499, 500, 0, 704, 501, 705, 504, 505, 0,
	0, 506, 0, 507, 0, 0, 509, 510, 511, 0,
	0, 512, 513, 706, 0, 514, 0, 707, 515, 516,
	508, 517, 518, 519, 520, 521, 522, 523, 524, 525,
	0, 526, 527, 708, 528, 529, 530, 709, 531, 532,
	533, 710, 534, 711, 535, 536, 0, 537, 538, 539,
	0, 540, 541, 542, 543, 544, 545, 546, 712, 547,
	548, 550, 549, 551, 0, 552, 0, 553, 554, 555,
	0, 0, 0, 0, 0, 556, 557, 559, 0, 560,
	561, 562, 563, 558, 564, 565, 566, 567, 568, 0,
	569, 570, 571, 0, 572, 573, 574, 575, 576, 713,
	577, 0, 578, 579, 586, 587, 588, 580, 581, 582,
	589, 590, 591, 592, 593, 0, 595, 596, 594, 597,
	598, 599, 0, 600, 601, 583, 584, 602, 603, 0,
	604, 605, 606, 607, 608, 609, 610, 714, 0, 611,
	0, 612, 613, 614, 615, 616, 618, 585, 619, 624,
	625, 715, 620, 621, 622, 623, 716, 627, 628, 0,
	629, 630, 0, 626, 617, 0, 631, 632, 633, 634,
	635, 636, 0, 637, 638, 0, 639, 717, 718, 719,
	720, 0, 649, 0, 640, 641, 642, 643, 721, 644,
	722, 0, 645, 646, 647, 648, 0, 650, 651, 0,
	0, 652, 653, 655, 657, 658, 654, 656, 659, 0,
	660, 0, 0, 661, 662, 663, 723, 724, 725, 0,
	665, 664, 666, 667, 668, 726, 669, 670, 738, 0,
	285, 0, 671, 672, 727, 673, 674, 675, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 291, 292, 294,
	293, 295, 296, 297, 298, 737, 299, 300, 0, 0,
	0, 0, 0, 676, 0, 0, 0, 301, 0, 302,
	303, 0, 304, 305, 306, 307, 308, 309, 310, 677,
	678, 0, 311, 679, 312, 680, 0, 681, 313, 314,
	315, 316, 317, 318, 0, 0, 0, 319, 682, 683,
	684, 0, 320, 321, 685, 0, 0, 0, 322, 323,
	324, 325, 326, 327, 328, 329, 0, 0, 331, 332,
	333, 330, 334, 0, 335, 0, 336, 337, 338, 339,
	340, 341, 0, 342, 343, 344, 0, 345, 346, 347,
	0, 0, 0, 0, 0, 0, 0, 348, 349, 350,
	351, 352, 0, 353, 355, 686, 687, 0, 358, 354,
	356, 0, 359, 357, 360, 0, 361, 362, 363, 0,
	0, 364, 365, 366, 0, 367, 368, 369, 0, 370,
	371, 372, 0, 373, 374, 688, 375, 376, 377, 379,
	381, 378, 380, 382, 383, 384, 385, 689, 690, 386,
	0, 0, 0, 0, 0, 0, 0, 387, 388, 389,
	691, 0, 0, 0, 390, 0, 391, 392, 393, 0,
	394, 0, 0, 395, 396, 397, 692, 693, 398, 399,
	400, 401, 402, 403, 404, 405, 406, 0, 407, 694,
	0, 695, 408, 0, 409, 410, 411, 412, 413, 414,
	696, 697, 698, 502, 0, 415, 416, 0, 417, 418,
	419, 420, 421, 0, 0, 0, 0, 422, 423, 424,
	0, 0, 503, 425, 699, 700, 0, 701, 0, 426,
	427, 0, 702, 0, 428, 429, 430, 0, 431, 0,
	0, 0, 432, 433, 434, 435, 436, 437, 0, 438,
	440, 439, 0, 441, 703, 0, 442, 443, 0, 0,
	444, 445, 446, 447, 448, 449, 452, 0, 0, 450,
	451, 453, 454, 0, 455, 456, 458, 461, 457, 459,
	460, 462, 475, 463, 464, 465, 466, 467, 468, 469,
	470, 471, 472, 473, 474, 477, 0, 476, 0, 478,
	479, 480, 481, 482, 489, 491, 492, 487, 488, 490,
	493, 494, 496, 484, 485, 486, 0, 495, 483, 0,
	0, 0, 497, 498, 499, 500, 0, 704, 501, 705,
	504, 505, 0, 0, 506, 0, 507, 0, 0, 509,
	510, 511, 0, 0, 512, 513, 706, 0, 514, 0,
	707, 515, 516, 508, 517, 518, 519, 520, 521, 522,
	523, 524, 525, 0, 526, 527, 708, 528, 529, 530,
	709, 531, 532, 533, 710, 534, 711, 736, 536, 0,
	537, 538, 539, 0, 540, 541, 542, 543, 544, 545,
	546, 712, 547, 548, 550, 549, 551, 0, 552, 0,
	553, 554, 555, 0, 0, 0, 0, 0, 556, 557,
	559, 0, 560, 561, 562, 563, 558, 564, 565, 566,
	567, 568, 0, 569, 570, 571, 0, 572, 573, 574,
	575, 576, 713, 577, 0, 578, 579, 586, 587, 588,
	580, 581, 582, 589, 590, 591, 592, 593, 0, 595,
	596, 594, 597, 598, 599, 0, 600, 601, 583, 584,
	602, 603, 0, 604, 605, 606, 607, 608, 609, 610,
	714, 0, 611, 0, 612, 613, 614, 615, 616, 618,
	585, 619, 624, 625, 715, 620, 621, 622, 623, 716,
	627, 628, 0, 629, 630, 0, 626, 617, 0, 631,
	632, 633, 634, 635, 636, 0, 637, 638, 0, 639,
	717, 718, 719, 720, 0, 649, 0, 640, 641, 642,
	643, 721, 644, 722, 0, 645, 646, 647, 648, 0,
	650, 651, 0, 0, 652, 653, 655, 657, 658, 654,
	656, 659, 0, 660, 0, 0, 661, 662, 663, 723,
	724, 725, 0, 665, 664, 666, 667, 668, 726, 669,
	670, 285, 3159, 0, 0, 671, 672, 727, 673, 674,
	675, 0, 0, 0, 0, 0, 0, 0, 291, 292,
	294, 293, 295, 296, 297, 298, 0, 299, 300, 0,
	0, 0, 0, 0, 676, 0, 0, 0, 301, 0,
	302, 303, 0, 304, 305, 306, 307, 308, 309, 310,
	677, 678, 0, 311, 679, 312, 680, 0, 681, 313,
	314, 315, 316, 317, 318, 0, 0, 0, 319, 682,
	683, 684, 0, 320, 321, 685, 0, 0, 0, 322,
	323, 324, 325, 326, 327, 328, 329, 0, 0, 331,
	332, 333, 330, 334, 0, 335, 0, 336, 337, 338,
	339, 340, 341, 0, 342, 343, 344, 0, 345, 346,
	347, 0, 0, 0, 0, 0, 0, 0, 348, 349,
	350, 351, 352, 0, 353, 355, 686, 687, 0, 358,
	354, 356, 0, 359, 357, 360, 0, 361, 362, 363,
	0, 0, 364, 365, 366, 0, 367, 368, 369, 0,
	370, 371, 372, 0, 373, 374, 688, 375, 376, 377,
	379, 381, 378, 380, 382, 383, 384, 385, 689, 690,
	386, 0, 0, 0, 0, 0, 0, 0, 387, 388,
	389, 691, 0, 0, 0, 390, 0, 391, 392, 393,
	0, 394, 0, 0, 395, 396, 397, 692, 693, 398,
	399, 400, 401, 402, 403, 404, 405, 406, 0, 407,
	694, 0, 695, 408, 0, 409, 410, 411, 412, 413,
	414, 696, 697, 698, 502, 0, 415, 416, 0, 417,
	418, 419, 420, 421, 0, 0, 0, 0, 422, 423,
	424, 0, 0, 503, 425, 699, 700, 0, 701, 0,
	426, 427, 0, 702, 0, 428, 429, 430, 0, 431,
	0, 0, 0, 432, 433, 434, 435, 436, 437, 0,
	438, 440, 439, 0, 441, 703, 0, 442, 443, 0,
	0, 444, 445, 446, 447, 448, 449, 452, 0, 0,
	450, 451, 453, 454, 0, 455, 456, 458, 461, 457,
	459, 460, 462, 475, 463, 464, 465, 466, 467, 468,
	469, 470, 471, 472, 473, 474, 477, 0, 476, 0,
	478, 479, 480, 481, 482, 489, 491, 492, 487, 488,
	490, 493, 494, 496, 484, 485, 486, 0, 495, 483,
	0, 0, 0, 497, 498, 499, 500, 0, 704, 501,
	705, 504, 505, 0, 0, 506, 0, 507, 0, 0,
	509, 510, 511, 0, 0, 512, 513, 706, 0, 514,
	0, 707, 515, 516, 508, 517, 518, 519, 520, 521,
	522, 523, 524, 525, 0, 526, 527, 708, 528, 529,
	530, 709, 531, 532, 533, 710, 534, 711, 535, 536,
	0, 537, 538, 539, 0, 540, 541, 542, 543, 544,
	545, 546, 712, 547, 548, 550, 549, 551, 0, 552,
	0, 553, 554, 555, 0, 0, 0, 0, 0, 556,
	557, 559, 0, 560, 561, 562, 563, 558, 564, 565,
	566, 567, 568, 0, 569, 570, 571, 0, 572, 573,
	574, 575, 576, 713, 577, 0, 578, 579, 586, 587,
	588, 580, 581, 582, 589, 590, 591, 592, 593, 0,
	595, 596, 594, 597, 598, 599, 0, 600, 601, 583,
	584, 602, 603, 0, 604, 605, 606, 607, 608, 609,
	610, 714, 0, 611, 0, 612, 613, 614, 615, 616,
	618, 585, 619, 624, 625, 715, 620, 621, 622, 623,
	716, 627, 628, 0, 629, 630, 0, 626, 617, 0,
	631, 632, 633, 634, 635, 636, 0, 637, 638, 0,
	639, 717, 718, 719, 720, 0, 649, 0, 640, 641,
	642, 643, 721, 644, 722, 0, 645, 646, 647, 648,
	0, 650, 651, 0, 0, 652, 653, 655, 657, 658,
	654, 656, 659, 0, 660, 0, 0, 661, 662, 663,
	723, 724, 725, 0, 665, 664, 666, 667, 668, 726,
	669, 670, 285, 0, 0, 0, 671, 672, 727, 673,
	674, 675, 0, 0, 0, 0, 0, 0, 0, 291,
	292, 294, 293, 295, 296, 297, 298, 0, 299, 300,
	0, 0, 0, 0, 0, 676, 0, 0, 0, 301,
	0, 302, 303, 0, 304, 305, 306, 307, 308, 309,
	310, 677, 678, 0, 311, 679, 312, 680, 0, 681,
	313, 314, 315, 316, 317, 318, 0, 0, 0, 319,
	682, 683, 684, 0, 320, 321, 685, 0, 0, 0,
	322, 323, 324, 325, 326, 327, 328, 329, 0, 0,
	331, 332, 333, 330, 334, 0, 335, 0, 336, 337,
	338, 339, 340, 341, 0, 342, 343, 344, 0, 345,
	346, 347, 0, 0, 0, 0, 0, 0, 0, 348,
	349, 350, 351, 352, 0, 353, 355, 686, 687, 0,
	358, 354, 356, 0, 359, 357, 360, 0, 361, 362,
	363, 0, 0, 364, 365, 366, 0, 367, 368, 369,
	0, 370, 371, 372, 0, 373, 374, 688, 375, 376,
	377, 379, 381, 378, 380, 382, 383, 384, 385, 689,
	690, 386, 0, 0, 0, 0, 0, 0, 0, 387,
	388, 389, 691, 0, 0, 0, 390, 0, 391, 392,
	393, 0, 394, 0, 0, 395, 396, 397, 692, 693,
	398, 399, 400, 401, 402, 403, 404, 405, 406, 0,
	407, 694, 0, 695, 408, 0, 409, 410, 411, 412,
	413, 414, 696, 697, 698, 502, 0, 415, 416, 0,
	417, 418, 419, 420, 421, 0, 0, 0, 0, 422,
	423, 424, 0, 0, 503, 425, 699, 700, 0, 701,
	0, 426, 427, 0, 702, 0, 428, 429, 430, 0,
	431, 0, 0, 0, 432, 433, 434, 435, 436, 437,
	0, 438, 440, 439, 0, 441, 703, 0, 442, 443,
	0, 0, 444, 445, 446, 447, 448, 449, 452, 0,
	0, 450, 451, 453, 454, 0, 455, 456, 458, 461,
	457, 459, 460, 462, 475, 463, 464, 465, 466, 467,
	468, 469, 470, 471, 472, 473, 474, 477, 0, 476,
	0, 478, 479, 480, 481, 482, 489, 491, 492, 487,
	488, 490, 493, 494, 496, 484, 485, 486, 0, 495,
	483, 0, 0, 0, 497, 498, 499, 500, 0, 704,
	501, 705, 504, 505, 0, 0, 506, 0, 507, 0,
	0, 509, 510, 511, 0, 0, 512, 513, 706, 0,
	514, 0, 707, 515, 516, 508, 517, 518, 519, 520,
	521, 522, 523, 524, 525, 0, 526, 527, 708, 528,
	529, 530, 709, 531, 532, 533, 710, 534, 711, 535,
	536, 4828, 537, 538, 539, 0, 540, 541, 542, 543,
	544, 545, 546, 712, 547, 548, 550, 549, 551, 0,
	552, 0, 553, 554, 555, 0, 0, 0, 0, 0,
	556, 557, 559, 0, 560, 561, 562, 563, 558, 564,
	565, 566, 567, 568, 0, 569, 570, 571, 0, 572,
	573, 574, 575, 576, 713, 577, 0, 578, 579, 586,
	587, 588, 580, 581, 582, 589, 590, 591, 592, 593,
	0, 595, 596, 594, 597, 598, 599, 0, 600, 601,
	583, 584, 602, 603, 0, 604, 605, 606, 607, 608,
	609, 610, 714, 0, 611, 0, 612, 613, 614, 615,
	616, 618, 585, 619, 624, 625, 715, 620, 621, 622,
	623, 716, 627, 628, 0, 629, 630, 0, 626, 617,
	0, 631, 632, 633, 634, 635, 636, 0, 637, 638,
	0, 639, 717, 718, 719, 720, 0, 649, 0, 640,
	641, 642, 643, 721, 644, 722, 0, 645, 646, 647,
	648, 0, 650, 651, 0, 0, 652, 653, 655, 657,
	658, 654, 656, 659, 0, 660, 0, 0, 661, 662,
	663, 723, 724, 725, 0, 665, 664, 666, 667, 668,
	726, 669, 670, 285, 3652, 0, 0, 671, 672, 727,
	673, 674, 675, 0, 0, 0, 0, 0, 0, 0,
	291, 292, 294, 293, 295, 296, 297, 298, 0, 299,
	300, 0, 0, 0, 0, 0, 676, 0, 0, 0,
	301, 0, 302, 303, 0, 304, 305, 306, 307, 308,
	309, 310, 677, 678, 0, 311, 679, 312, 680, 0,
	681, 313, 314, 315, 316, 317, 318, 0, 0, 0,
	319, 682, 683, 684, 0, 320, 321, 685, 0, 0,
	0, 322, 323, 324, 325, 326, 327, 328, 329, 0,
	0, 331, 332, 333, 330, 334, 0, 335, 0, 336,
	337, 338, 339, 340, 341, 0, 342, 343, 344, 0,
	345, 346, 347, 0, 0, 0, 0, 0, 0, 0,
	348, 349, 350, 351, 352, 0, 353, 355, 686, 687,
	0, 358, 354, 356, 0, 359, 357, 360, 0, 361,
	362, 363, 0, 0, 364, 365, 366, 0, 367, 368,
	369, 0, 370, 371, 372, 0, 373, 374, 688, 375,
	376, 377, 379, 381, 378, 380, 382, 383, 384, 385,
	689, 690, 386, 0, 0, 0, 0, 0, 0, 0,
	387, 388, 389, 691, 0, 0, 0, 390, 0, 391,
	392, 393, 0, 394, 0, 0, 395, 396, 397, 692,
	693, 398, 399, 400, 401, 402, 403, 404, 405, 406,
	0, 407, 694, 0, 695, 408, 0, 409, 410, 411,
	412, 413, 414, 696, 697, 698, 502, 0, 415, 416,
	0, 417, 418, 419, 420, 421, 0, 0, 0, 0,
	422, 423, 424, 0, 0, 503, 425, 699, 700, 0,
	701, 0, 426, 427, 0, 702, 0, 428, 429, 430,
	0, 431, 0, 0, 0, 432, 433, 434, 435, 436,
	437, 0, 438, 440, 439, 0, 441, 703, 0, 442,
	443, 0, 0, 444, 445, 446, 447, 448, 449, 452,
	0, 0, 450, 451, 453, 454, 0, 455, 456, 458,
	461, 457, 459, 460, 462, 475, 463, 464, 465, 466,
	467, 468, 469, 470, 471, 472, 473, 474, 477, 0,
	476, 0, 478, 479, 480, 481, 482, 489, 491, 492,
	487, 488, 490, 493, 494, 496, 484, 485, 486, 0,
	495, 483, 0, 0, 0, 497, 498, 499, 500, 0,
	704, 501, 705, 504, 505, 0, 0, 506, 0, 507,
	0, 0, 509, 510, 511, 0, 0, 512, 513, 706,
	0, 514, 0, 707, 515, 516, 508, 517, 518, 519,
	520, 521, 522, 523, 524, 525, 0, 526, 527, 708,
	528, 529, 530, 709, 531, 532, 533, 710, 534, 711,
	535, 536, 0, 537, 538, 539, 0, 540, 541, 542,
	543, 544, 545, 546, 712, 547, 548, 550, 549, 551,
	0, 552, 0, 553, 554, 555, 0, 0, 0, 0,
	0, 556, 557, 559, 0, 560, 561, 562, 563, 558,
	564, 565, 566, 567, 568, 0, 569, 570, 571, 0,
	572, 573, 574, 575, 576, 713, 577, 0, 578, 579,
	586, 587, 588, 580, 581, 582, 589, 590, 591, 592,
	593, 0, 595, 596, 594, 597, 598, 599, 0, 600,
	601, 583, 584, 602, 603, 0, 604, 605, 606, 607,
	608, 609, 610, 714, 0, 611, 0, 612, 613, 614,
	615, 616, 618, 585, 619, 624, 625, 715, 620, 621,
	622, 623, 716, 627, 628, 0, 629, 630, 0, 626,
	617, 0, 631, 632, 633, 634, 635, 636, 0, 637,
	638, 0, 639, 717, 718, 719, 720, 0, 649, 0,
	640, 641, 642, 643, 721, 644, 722, 0, 645, 646,
	647, 648, 0, 650, 651, 0, 0, 652, 653, 655,
	657, 658, 654, 656, 659, 0, 660, 0, 0, 661,
	662, 663, 723, 724, 725, 0, 665, 664, 666, 667,
	668, 726, 669, 670, 285, 0, 0, 0, 671, 672,
	727, 673, 674, 675, 0, 0, 0, 0, 0, 0,
	0, 291, 292, 294, 293, 295, 296, 297, 298, 0,
	299, 300, 0, 0, 0, 0, 0, 676, 0, 0,
	0, 301, 0, 302, 303, 0, 304, 305, 306, 307,
	308, 309, 310, 677, 678, 0, 311, 679, 312, 680,
	0, 681, 313, 314, 315, 316, 317, 318, 0, 0,
	0, 319, 682, 683, 684, 0, 320, 321, 685, 0,
	0, 0, 322, 323, 324, 325, 326, 327, 328, 329,
	0, 0, 331, 332, 333, 330, 334, 0, 335, 0,
	336, 337, 338, 339, 340, 341, 0, 342, 343, 344,
	0, 345, 346, 347, 0, 0, 0, 0, 0, 0,
	0, 348, 349, 350, 351, 352, 0, 353, 355, 686,
	687, 0, 358, 354, 356, 0, 359, 357, 360, 0,
	361, 362, 363, 0, 0, 364, 365, 366, 0, 367,
	368, 369, 0, 370, 371, 372, 0, 373, 374, 688,
	375, 376, 377, 379, 381, 378, 380, 382, 383, 384,
	385, 689, 690, 386, 0, 0, 0, 0, 0, 0,
	0, 387, 388, 389, 691, 0, 0, 0, 390, 0,
	391, 392, 393, 0, 394, 0, 0, 395, 396, 397,
	692, 693, 398, 399, 400, 401, 402, 403, 404, 405,
	406, 0, 407, 694, 0, 695, 408, 0, 409, 410,
	411, 412, 413, 414, 696, 697, 698, 502, 0, 415,
	416, 0, 417, 418, 419, 420, 421, 0, 0, 0,
	0, 422, 423, 424, 0, 0, 503, 425, 699, 700,
	0, 701, 0, 426, 427, 0, 702, 0, 428, 429,
	430, 0, 431, 0, 0, 0, 432, 433, 434, 435,
	436, 437, 0, 438, 440, 439, 0, 441, 703, 0,
	442, 443, 0, 0, 444, 445, 446, 447, 448, 449,
	452, 0, 0, 450, 451, 453, 454, 0, 455, 456,
	458, 461, 457, 459, 460, 462, 475, 463, 464, 465,
	466, 467, 468, 469, 470, 471, 472, 473, 474, 477,
	0, 476, 0, 478, 479, 480, 481, 482, 489, 491,
	492, 487, 488, 490, 493, 494, 496, 484, 485, 486,
	0, 495, 483, 0, 0, 0, 497, 498, 499, 500,
	0, 704, 501, 705, 504, 505, 0, 0, 506, 0,
	507, 0, 0, 509, 510, 511, 0, 0, 512, 513,
	706, 0, 514, 0, 707, 515, 516, 508, 517, 518,
	519, 520, 521, 522, 523, 524, 525, 0, 526, 527,
	708, 528, 529, 530, 709, 531, 532, 533, 710, 534,
	711, 535, 536, 4419, 537, 538, 539, 0, 540, 541,
	542, 543, 544, 545, 546, 712, 547, 548, 550, 549,
	551, 0, 552, 0, 553, 554, 555, 0, 0, 0,
	0, 0, 556, 557, 559, 0, 560, 561, 562, 563,
	558, 564, 565, 566, 567, 568, 0, 569, 570, 571,
	0, 572, 573, 574, 575, 576, 713, 577, 0, 578,
	579, 586, 587, 588, 580, 581, 582, 589, 590, 591,
	592, 593, 0, 595, 596, 594, 597, 598, 599, 0,
	600, 601, 583, 584, 602, 603, 0, 604, 605, 606,
	607, 608, 609, 610, 714, 0, 611, 0, 612, 613,
	614, 615, 616, 618, 585, 619, 624, 625, 715, 620,
	621, 622, 623, 716, 627, 628, 0, 629, 630, 0,
	626, 617, 0, 631, 632, 633, 634, 635, 636, 0,
	637, 638, 0, 639, 717, 718, 719, 720, 0, 649,
	0, 640, 641, 642, 643, 721, 644, 722, 0, 645,
	646, 647, 648, 0, 650, 651, 0, 0, 652, 653,
	655, 657, 658, 654, 656, 659, 0, 660, 0, 0,
	661, 662, 663, 723, 724, 725, 0, 665, 664, 666,
	667, 668, 726, 669, 670, 285, 0, 0, 0, 671,
	672, 727, 673, 674, 675, 0, 0, 0, 0, 0,
	0, 0, 291, 292, 294, 293, 295, 296, 297, 298,
	0, 299, 300, 0, 0, 0, 0, 0, 676, 0,
	0, 0, 301, 0, 302, 303, 0, 304, 305, 306,
	307, 308, 309, 310, 677, 678, 0, 311, 679, 312,
	680, 0, 681, 313, 314, 315, 316, 317, 318, 0,
	0, 0, 319, 682, 683, 684, 0, 320, 321, 685,
	0, 0, 0, 322, 323, 324, 325, 326, 327, 328,
	329, 0, 0, 331, 332, 333, 330, 334, 0, 335,
	0, 336, 337, 338, 339, 340, 341, 0, 342, 343,
	344, 0, 345, 346, 347, 0, 0, 0, 0, 0,
	0, 0, 348, 349, 350, 351, 352, 0, 353, 355,
	686, 687, 4156, 358, 354, 356, 0, 359, 357, 360,
	0, 361, 362, 363, 0, 0, 364, 365, 366, 0,
	367, 368, 369, 0, 370, 371, 372, 0, 373, 374,
	688, 375, 376, 377, 379, 381, 378, 380, 382, 383,
	384, 385, 689, 690, 386, 0, 0, 0, 0, 0,
	0, 0, 387, 388, 389, 691, 0, 0, 0, 390,
	0, 391, 392, 393, 0, 394, 0, 0, 395, 396,
	397, 692, 693, 398, 399, 400, 401, 402, 403, 404,
	405, 406, 0, 407, 694, 0, 695, 408, 0, 409,
	410, 411, 412, 413, 414, 696, 697, 698, 502, 0,
	415, 416, 0, 417, 418, 419, 420, 421, 0, 0,
	0, 0, 422, 423, 424, 0, 0, 503, 425, 699,
	700, 0, 701, 0, 426, 427, 0, 702, 0, 428,
	429, 430, 0, 431, 0, 0, 0, 432, 433, 434,
	435, 436, 437, 0, 438, 440, 439, 0, 441, 703,
	0, 442, 443, 0, 0, 444, 445, 446, 447, 448,
	449, 452, 0, 0, 450, 451, 453, 454, 0, 455,
	456, 458, 461, 457, 459, 460, 462, 475, 463, 464,
	465, 466, 467, 468, 469, 470, 471, 472, 473, 474,
	477, 0, 476, 0, 478, 479, 480, 481, 482, 489,
	491, 492, 487, 488, 490, 493, 494, 496, 484, 485,
	486, 0, 495, 483, 0, 0, 0, 497, 498, 499,
	500, 0, 704, 501, 705, 504, 505, 0, 0, 506,
	0, 507, 0, 0, 509, 510, 511, 0, 0, 512,
	513, 706, 0, 514, 0, 707, 515, 516, 508, 517,
	518, 519, 520, 521, 522, 523, 524, 525, 0, 526,
	527, 708, 528, 529, 530, 709, 531, 532, 533, 710,
	534, 711, 535, 536, 0, 537, 538, 539, 0, 540,
	541, 542, 543, 544, 545, 546, 712, 547, 548, 550,
	549, 551, 0, 552, 0, 553, 554, 555, 0, 0,
	0, 0, 0, 556, 557, 559, 0, 560, 561, 562,
	563, 558, 564, 565, 566, 567, 568, 0, 569, 570,
	571, 0, 572, 573, 574, 575, 576, 713, 577, 0,
	578, 579, 586, 587, 588, 580, 581, 582, 589, 590,
	591, 592, 593, 0, 595, 596, 594, 597, 598, 599,
	0, 600, 601, 583, 584, 602, 603, 0, 604, 605,
	606, 607, 608, 609, 610, 714, 0, 611, 0, 612,
	613, 614, 615, 616, 618, 585, 619, 624, 625, 715,
	620, 621, 622, 623, 716, 627, 628, 0, 629, 630,
	0, 626, 617, 0, 631, 632, 633, 634, 635, 636,
	0, 637, 638, 0, 639, 717, 718, 719, 720, 0,
	649, 0, 640, 641, 642, 643, 721, 644, 722, 0,
	645, 646, 647, 648, 0, 650, 651, 0, 0, 652,
	653, 655, 657, 658, 654, 656, 659, 0, 660, 0,
	0, 661, 662, 663, 723, 724, 725, 0, 665, 664,
	666, 667, 668, 726, 669, 670, 285, 0, 0, 0,
	671, 672, 727, 673, 674, 675, 0, 0, 0, 0,
	0, 0, 0, 291, 292, 294, 293, 295, 296, 297,
	298, 0, 299, 300, 0, 0, 0, 0, 0, 676,
	0, 2939, 0, 301, 0, 302, 303, 0, 304, 305,
	306, 307, 308, 309, 310, 677, 678, 0, 311, 679,
	312, 680, 0, 681, 313, 314, 315, 316, 317, 318,
	0, 0, 0, 319, 682, 683, 684, 0, 320, 321,
	685, 0, 0, 0, 322, 323, 324, 325, 326, 327,
	328, 329, 0, 0, 331, 332, 333, 330, 334, 0,
	335, 0, 336, 337, 338, 339, 340, 341, 0, 342,
	343, 344, 0, 345, 346, 347, 0, 0, 0, 0,
	0, 0, 0, 348, 349, 350, 351, 352, 0, 353,
	355, 686, 687, 0, 358, 354, 356, 0, 359, 357,
	360, 0, 361, 362, 363, 0, 0, 364, 365, 366,
	0, 367, 368, 369, 0, 370, 371, 372, 0, 373,
	374, 688, 375, 376, 377, 379, 381, 378, 380, 382,
	383, 384, 385, 689, 690, 386, 0, 0, 0, 0,
	0, 0, 0, 387, 388, 389, 691, 0, 0, 0,
	390, 0, 391, 392, 393, 0, 394, 0, 0, 395,
	396, 397, 692, 693, 398, 399, 400, 401, 402, 403,
	404, 405, 406, 0, 407, 694, 0, 695, 408, 0,
	409, 410, 411, 412, 413, 414, 696, 697, 698, 502,
	0, 415, 416, 0, 417, 418, 419, 420, 421, 0,
	0, 0, 0, 422, 423, 424, 0, 0, 503, 425,
	699, 700, 0, 701, 0, 426, 427, 0, 702, 0,
	428, 429, 430, 0, 431, 0, 0, 0, 432, 433,
	434, 435, 436, 437, 0, 438, 440, 439, 0, 441,
	703, 0, 442, 443, 0, 0, 444, 445, 446, 447,
	448, 449, 452, 0, 0, 450, 451, 453, 454, 0,
	455, 456, 458, 461, 457, 459, 460, 462, 475, 463,
	464, 465, 466, 467, 468, 469, 470, 471, 472, 473,
	474, 477, 0, 476, 0, 478, 479, 480, 481, 482,
	489, 491, 492, 487, 488, 490, 493, 494, 496, 484,
	485, 486, 0, 495, 483, 0, 0, 0, 497, 498,
	499, 500, 0, 704, 501, 705, 504, 505, 0, 0,
	506, 0, 507, 0, 0, 509, 510, 511, 0, 0,
	512, 513, 706, 0, 514, 0, 707, 515, 516, 508,
	517, 518, 519, 520, 521, 522, 523, 524, 525, 0,
	526, 527, 708, 528, 529, 530, 709, 531, 532, 533,
	710, 534, 711, 535, 536, 0, 537, 538, 539, 0,
	540, 541, 542, 543, 544, 545, 546, 712, 547, 548,
	550, 549, 551, 0, 552, 0, 553, 554, 555, 0,
	0, 0, 0, 0, 556, 557, 559, 0, 560, 561,
	562, 563, 558, 564, 565, 566, 567, 568, 0, 569,
	570, 571, 0, 572, 573, 574, 575, 576, 713, 577,
	0, 578, 579, 586, 587, 588, 580, 581, 582, 589,
	590, 591, 592, 593, 0, 595, 596, 594, 597, 598,
	599, 0, 600, 601, 583, 584, 602, 603, 0, 604,
	605, 606, 607, 608, 609, 610, 714, 0, 611, 0,
	612, 613, 614, 615, 616, 618, 585, 619, 624, 625,
	715, 620, 621, 622, 623, 716, 627, 628, 0, 629,
	630, 0, 626, 617, 0, 631, 632, 633, 634, 635,
	636, 0, 637, 638, 0, 639, 717, 718, 719, 720,
	0, 649, 0, 640, 641, 642, 643, 721, 644, 722,
	0, 645, 646, 647, 648, 0, 650, 651, 0, 0,
	652, 653, 655, 657, 658, 654, 656, 659, 0, 660,
	0, 0, 661, 662, 663, 723, 724, 725, 0, 665,
	664, 666, 667, 668, 726, 669, 670, 285, 3159, 0,
	0, 671, 672, 727, 673, 674, 675, 0, 0, 0,
	0, 0, 0, 0, 291, 292, 294, 293, 295, 296,
	297, 298, 0, 299, 300, 0, 0, 0, 0, 0,
	676, 0, 0, 0, 301, 0, 302, 303, 0, 304,
	305, 306, 307, 308, 309, 310, 677, 678, 0, 311,
	679, 312, 680, 0, 681, 313, 314, 315, 316, 317,
	318, 0, 0, 0, 319, 682, 683, 684, 0, 320,
	321, 685, 0, 0, 0, 322, 323, 324, 325, 326,
	327, 328, 329, 0, 0, 331, 332, 333, 330, 334,
	0, 335, 0, 336, 337, 338, 339, 340, 341, 0,
	342, 343, 344, 0, 345, 346, 347, 0, 0, 0,
	0, 0, 0, 0, 348, 349, 350, 351, 352, 0,
	353, 355, 686, 687, 0, 358, 354, 356, 0, 359,
	357, 360, 0, 361, 362, 363, 0, 0, 364, 365,
	366, 0, 367, 368, 369, 0, 370, 371, 372, 0,
	373, 374, 688, 375, 376, 377, 379, 381, 378, 380,
	382, 383, 384, 385, 689, 690, 386, 0, 0, 0,
	0, 0, 0, 0, 387, 388, 389, 691, 0, 0,
	0, 390, 0, 391, 392, 393, 0, 394, 0, 0,
	395, 396, 397, 692, 693, 398, 399, 400, 401, 402,
	403, 404, 405, 406, 0, 407, 694, 0, 695, 408,
	0, 409, 410, 411, 412, 413, 414, 696, 697, 698,
	502, 0, 415, 416, 0, 417, 418, 419, 420, 421,
	0, 0, 0, 0, 422, 423, 424, 0, 0, 503,
	425, 699, 700, 0, 701, 0, 426, 427, 0, 702,
	0, 428, 429, 430, 0, 431, 0, 0, 0, 432,
	433, 434, 435, 436, 437, 0, 438, 440, 439, 0,
	441, 703, 0, 442, 443, 0, 0, 444, 445, 446,
	447, 448, 449, 452, 0, 0, 450, 451, 453, 454,
	0, 455, 456, 458, 461, 457, 459, 460, 462, 475,
	463, 464, 465, 466, 467, 468, 469, 470, 471, 472,
	473, 474, 477, 0, 476, 0, 478, 479, 480, 481,
	482, 489, 491, 492, 487, 488, 490, 493, 494, 496,
	484, 485, 486, 0, 495, 483, 0, 0, 0, 497,
	498, 499, 500, 0, 704, 501, 705, 504, 505, 0,
	0, 506, 0, 507, 0, 0, 509, 510, 3289, 0,
	0, 512, 513, 706, 0, 514, 0, 707, 515, 516,
	508, 517, 518, 519, 520, 521, 522, 523, 524, 525,
	0, 526, 527, 708, 528, 529, 530, 709, 531, 532,
	533, 710, 534, 711, 535, 536, 0, 537, 538, 539,
	0, 540, 541, 542, 543, 544, 545, 546, 712, 547,
	548, 550, 549, 551, 0, 552, 0, 553, 554, 555,
	0, 0, 0, 0, 0, 556, 557, 559, 0, 560,
	561, 562, 563, 558, 564, 565, 566, 567, 568, 0,
	569, 570, 571, 0, 572, 573, 574, 575, 576, 713,
	577, 0, 578, 579, 586, 587, 588, 580, 581, 582,
	589, 590, 591, 592, 593, 0, 595, 596, 594, 597,
	598, 599, 0, 600, 601, 583, 584, 602, 603, 0,
	604, 605, 606, 607, 608, 609, 610, 714, 0, 611,
	0, 612, 613, 614, 615, 616, 618, 585, 619, 624,
	625, 715, 620, 621, 622, 623, 716, 627, 628, 0,
	629, 630, 0, 626, 617, 0, 631, 632, 633, 634,
	635, 636, 0, 637, 638, 0, 639, 717, 718, 719,
	720, 0, 649, 0, 640, 641, 642, 643, 721, 644,
	722, 0, 645, 646, 647, 648, 0, 650, 651, 0,
	0, 652, 653, 655, 657, 658, 654, 656, 659, 0,
	660, 0, 0, 661, 662, 663, 723, 724, 725, 0,
	665, 664, 666, 667, 668, 726, 669, 670, 285, 0,
	0, 0, 671, 672, 727, 673, 674, 675, 0, 0,
	0, 0, 0, 0, 0, 291, 292, 294, 293, 295,
	296, 297, 298, 0, 299, 300, 0, 0, 0, 0,
	0, 676, 0, 0, 0, 301, 0, 302, 303, 0,
	304, 305, 306, 307, 308, 309, 310, 677, 678, 0,
	311, 679, 312, 680, 0, 681, 313, 314, 315, 316,
	317, 318, 0, 0, 0, 319, 682, 683, 684, 0,
	320, 321, 685, 0, 0, 0, 322, 323, 324, 325,
	326, 327, 328, 329, 0, 0, 331, 332, 333, 330,
	334, 0, 335, 0, 336, 337, 338, 339, 340, 341,
	0, 342, 343, 344, 0, 345, 346, 347, 0, 0,
	0, 0, 0, 0, 0, 348, 349, 350, 351, 352,
	0, 353, 355, 686, 687, 0, 358, 354, 356, 0,
	359, 357, 360, 0, 361, 362, 363, 0, 0, 364,
	365, 366, 0, 367, 368, 369, 0, 370, 371, 372,
	0, 373, 374, 688, 375, 376, 377, 379, 381, 378,
	380, 382, 383, 384, 385, 689, 690, 386, 0, 0,
	0, 0, 0, 0, 0, 387, 388, 389, 691, 0,
	0, 0, 390, 0, 391, 392, 393, 0, 394, 0,
	0, 395, 396, 397, 692, 693, 398, 399, 400, 401,
	402, 403, 404, 405, 406, 0, 407, 694, 0, 695,
	408, 0, 409, 410, 411, 412, 413, 414, 696, 697,
	698, 502, 0, 415, 416, 0, 417, 418, 419, 420,
	421, 0, 0, 0, 0, 422, 423, 424, 0, 0,
	503, 425, 699, 700, 0, 701, 0, 426, 427, 0,
	702, 0, 428, 429, 430, 0, 431, 0, 0, 0,
	432, 433, 434, 435, 436, 437, 0, 438, 440, 439,
	0, 441, 703, 0, 442, 443, 0, 0, 444, 445,
	446, 447, 448, 449, 452, 0, 0, 450, 451, 453,
	454, 0, 455, 456, 458, 461, 457, 459, 460, 462,
	475, 463, 464, 465, 466, 467, 468, 469, 470, 471,
	472, 473, 474, 477, 0, 476, 0, 478, 479, 480,
	481, 482, 489, 491, 492, 487, 488, 490, 493, 494,
	496, 484, 485, 486, 0, 495, 483, 0, 0, 0,
	497, 498, 499, 500, 0, 704, 501, 705, 504, 505,
	0, 0, 506, 0, 507, 0, 0, 509, 510, 511,
	0, 0, 512, 513, 706, 0, 514, 0, 707, 515,
	516, 508, 517, 518, 519, 520, 521, 522, 523, 524,
	525, 0, 526, 527, 708, 528, 529, 530, 709, 531,
	532, 533, 710, 534, 711, 535, 536, 2337, 537, 538,
	539, 0, 540, 541, 542, 543, 544, 545, 546, 712,
	547, 548, 550, 549, 551, 0, 552, 0, 553, 554,
	555, 0, 0, 0, 0, 0, 556, 557, 559, 0,
	560, 561, 562, 563, 558, 564, 565, 566, 567, 568,
	0, 569, 570, 571, 0, 819, 573, 574, 575, 576,
	713, 577, 0, 578, 579, 586, 587, 588, 580, 581,
	582, 818, 590, 591, 592, 593, 0, 595, 596, 594,
	597, 598, 599, 0, 600, 601, 583, 584, 602, 603,
	0, 604, 605, 606, 607, 608, 609, 610, 714, 0,
	611, 0, 612, 613, 614, 615, 616, 618, 585, 619,
	624, 625, 715, 620, 621, 622, 623, 716, 627, 628,
	0, 629, 630, 0, 626, 617, 0, 631, 632, 633,
	634, 635, 636, 0, 637, 638, 0, 639, 816, 718,
	719, 720, 0, 649, 0, 640, 641, 642, 643, 721,
	644, 722, 0, 645, 646, 647, 648, 0, 650, 651,
	0, 0, 652, 653, 655, 657, 658, 654, 656, 659,
	0, 660, 0, 0, 661, 662, 663, 723, 724, 725,
	0, 665, 664, 666, 667, 668, 726, 669, 670, 285,
	0, 0, 0, 671, 672, 727, 673, 674, 675, 0,
	0, 0, 0, 0, 0, 0, 291, 292, 294, 293,
	295, 296, 297, 298, 2509, 299, 300, 0, 0, 0,
	0, 0, 676, 0, 0, 0, 301, 0, 302, 303,
	0, 304, 305, 306, 307, 308, 309, 310, 677, 678,
	0, 311, 679, 312, 680, 0, 681, 313, 314, 315,
	316, 317, 318, 0, 0, 0, 319, 682, 683, 684,
	0, 320, 321, 685, 0, 0, 0, 322, 323, 324,
	325, 326, 327, 328, 329, 0, 0, 331, 332, 333,
	330, 334, 0, 335, 0, 336, 337, 338, 339, 340,
	341, 0, 342, 343, 344, 0, 345, 346, 347, 0,
	0, 0, 0, 0, 0, 0, 348, 349, 350, 351,
	352, 0, 353, 355, 686, 687, 0, 358, 354, 356,
	0, 359, 357, 360, 0, 361, 362, 363, 0, 0,
	364, 365, 366, 0, 367, 368, 369, 0, 370, 371,
	372, 0, 373, 374, 688, 375, 376, 377, 379, 381,
	378, 380, 382, 383, 384, 385, 689, 690, 386, 0,
	0, 0, 0, 0, 0, 0, 387, 388, 389, 691,
	0, 0, 0, 390, 0, 391, 392, 393, 0, 394,
	0, 0, 395, 396, 397, 692, 693, 398, 399, 400,
	401, 402, 403, 404, 405, 406, 0, 407, 694, 0,
	695, 408, 0, 409, 410, 411, 412, 413, 414, 696,
	697, 698, 502, 0, 415, 416, 0, 417, 418, 419,
	420, 421, 0, 0, 0, 0, 422, 423, 424, 0,
	0, 503, 425, 699, 700, 0, 701, 0, 426, 427,
	0, 702, 0, 428, 429, 430, 0, 431, 0, 0,
	0, 432, 433, 434, 435, 436, 437, 0, 438, 440,
	439, 0, 441, 703, 0, 442, 443, 0, 0, 444,
	445, 446, 447, 448, 449, 452, 0, 0, 450, 451,
	453, 454, 0, 455, 456, 458, 461, 457, 459, 460,
	462, 475, 463, 464, 465, 466, 467, 468, 469, 470,
	471, 472, 473, 474, 477, 0, 476, 0, 478, 479,
	480, 481, 482, 489, 491, 492, 487, 488, 490, 493,
	494, 496, 484, 485, 486, 0, 495, 483, 0, 0,
	0, 497, 498, 499, 500, 0, 704, 501, 705, 504,
	505, 0, 0, 506, 0, 507, 0, 0, 509, 510,
	511, 0, 0, 512, 513, 706, 0, 514, 0, 707,
	515, 516, 508, 517, 518, 519, 520, 521, 522, 523,
	524, 525, 0, 526, 527, 708, 528, 529, 530, 709,
	531, 532, 533, 710, 534, 711, 535, 536, 0, 537,
	538, 539, 0, 540, 541, 542, 543, 544, 545, 546,
	712, 547, 548, 550, 549, 551, 0, 552, 0, 553,
	554, 555, 0, 0, 0, 0, 0, 556, 557, 559,
	0, 560, 561, 562, 563, 558, 564, 565, 566, 567,
	568, 0, 569, 570, 571, 0, 572, 573, 574, 575,
	576, 713, 577, 0, 578, 579, 586, 587, 588, 580,
	581, 582, 589, 590, 591, 592, 593, 0, 595, 596,
	594, 597, 598, 599, 0, 600, 601, 583, 584, 602,
	603, 0, 604, 605, 606, 607, 608, 609, 610, 714,
	0, 611, 0, 612, 613, 614, 615, 616, 618, 585,
	619, 624, 625, 715, 620, 621, 622, 623, 716, 627,
	628, 0, 629, 630, 0, 626, 617, 0, 631, 632,
	633, 634, 635, 636, 0, 637, 638, 0, 639, 717,
	718, 719, 720, 0, 649, 0, 640, 641, 642, 643,
	721, 644, 722, 0, 645, 646, 647, 648, 0, 650,
	651, 0, 0, 652, 653, 655, 657, 658, 654, 656,
	659, 0, 660, 0, 0, 661, 662, 663, 723, 724,
	725, 0, 665, 664, 666, 667, 668, 726, 669, 670,
	2497, 0, 285, 0, 671, 672, 727, 673, 674, 675,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 291,
	292, 294, 293, 295, 296, 297, 298, 0, 299, 300,
	0, 0, 0, 0, 0, 676, 0, 0, 0, 301,
	0, 302, 303, 0, 304, 305, 306, 307, 308, 309,
	310, 677, 678, 0, 311, 679, 312, 680, 0, 681,
	313, 314, 315, 316, 317, 318, 0, 0, 0, 319,
	682, 683, 684, 0, 320, 321, 685, 0, 0, 0,
	322, 323, 324, 325, 326, 327, 328, 329, 0, 0,
	331, 332, 333, 330, 334, 0, 335, 0, 336, 337,
	338, 339, 340, 341, 0, 342, 343, 344, 0, 345,
	346, 347, 0, 0, 0, 0, 0, 0, 0, 348,
	349, 350, 351, 352, 0, 353, 355, 686, 687, 0,
	358, 354, 356, 0, 359, 357, 360, 0, 361, 362,
	363, 0, 0, 364, 365, 366, 0, 367, 368, 369,
	0, 370, 371, 372, 0, 373, 374, 688, 375, 376,
	377, 379, 381, 378, 380, 382, 383, 384, 385, 689,
	690, 386, 0, 0, 0, 0, 0, 0, 0, 387,
	388, 389, 691, 0, 0, 0, 390, 0, 391, 392,
	393, 0, 394, 0, 0, 395, 396, 397, 692, 693,
	398, 399, 400, 401, 402, 403, 404, 405, 406, 0,
	407, 694, 0, 695, 408, 0, 409, 410, 411, 412,
	413, 414, 696, 697, 698, 502, 0, 415, 416, 0,
	417, 418, 419, 420, 421, 0, 0, 0, 0, 422,
	423, 424, 0, 0, 503, 425, 699, 700, 0, 701,
	0, 426, 427, 0, 702, 0, 428, 429, 430, 0,
	431, 0, 0, 0, 432, 433, 434, 435, 436, 437,
	0, 438, 440, 439, 0, 441, 703, 0, 442, 443,
	0, 0, 444, 445, 446, 447, 448, 449, 452, 0,
	0, 450, 451, 453, 454, 0, 455, 456, 458, 461,
	457, 459, 460, 462, 475, 463, 464, 465, 466, 467,
	468, 469, 470, 471, 472, 473, 474, 477, 0, 476,
	0, 478, 479, 480, 481, 482, 489, 491, 492, 487,
	488, 490, 493, 494, 496, 484, 485, 486, 0, 495,
	483, 0, 0, 0, 497, 498, 499, 500, 0, 704,
	501, 705, 504, 505, 0, 0, 506, 0, 507, 0,
	0, 509, 510, 511, 0, 0, 512, 513, 706, 0,
	514, 0, 707, 515, 516, 508, 517, 518, 519, 520,
	521, 522, 523, 524, 525, 0, 526, 527, 708, 528,
	529, 530, 709, 531, 532, 533, 710, 534, 711, 535,
	536, 0, 537, 538, 539, 0, 540, 541, 542, 543,
	544, 545, 546, 712, 547, 548, 550, 549, 551, 0,
	552, 0, 553, 554, 555, 0, 0, 0, 0, 0,
	556, 557, 559, 0, 560, 561, 562, 563, 558, 564,
	565, 566, 567, 568, 0, 569, 570, 571, 0, 572,
	573, 574, 575, 576, 713, 577, 0, 578, 579, 586,
	587, 588, 580, 581, 582, 589, 590, 591, 592, 593,
	0, 595, 596, 594, 597, 598, 599, 0, 600, 601,
	583, 584, 602, 603, 0, 604, 605, 606, 607, 608,
	609, 610, 714, 0, 611, 0, 612, 613, 614, 615,
	616, 618, 585, 619, 624, 625, 715, 620, 621, 622,
	623, 716, 627, 628, 0, 629, 630, 0, 626, 617,
	0, 631, 632, 633, 634, 635, 636, 0, 637, 638,
	0, 639, 717, 718, 719, 720, 0, 649, 0, 640,
	641, 642, 643, 721, 644, 722, 0, 645, 646, 647,
	648, 0, 650, 651, 0, 0, 652, 653, 655, 657,
	658, 654, 656, 659, 0, 660, 0, 0, 661, 662,
	663, 723, 724, 725, 0, 665, 664, 666, 667, 668,
	726, 669, 670, 1765, 0, 285, 0, 671, 672, 727,
	673, 674, 675, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 291, 292, 294, 293, 295, 296, 297, 298,
	0, 299, 300, 0, 0, 0, 0, 0, 676, 0,
	0, 0, 301, 0, 302, 303, 0, 304, 305, 306,
	307, 308, 309, 310, 677, 678, 0, 311, 679, 312,
	680, 0, 681, 313, 314, 315, 316, 317, 318, 0,
	0, 0, 319, 682, 683, 684, 0, 320, 321, 685,
	0, 0, 0, 322, 323, 324, 325, 326, 327, 328,
	329, 0, 0, 331, 332, 333, 330, 334, 0, 335,
	0, 336, 337, 338, 339, 340, 341, 0, 342, 343,
	344, 0, 345, 346, 347, 0, 0, 0, 0, 0,
	0, 0, 348, 349, 350, 351, 352, 0, 353, 355,
	686, 687, 0, 358, 354, 356, 0, 359, 357, 360,
	0, 361, 362, 363, 0, 0, 364, 365, 366, 0,
	367, 368, 369, 0, 370, 371, 372, 0, 373, 374,
	688, 375, 376, 377, 379, 381, 378, 380, 382, 383,
	384, 385, 689, 690, 386, 0, 0, 0, 0, 0,
	0, 0, 387, 388, 389, 691, 0, 0, 0, 390,
	0, 391, 392, 393, 0, 394, 0, 0, 395, 396,
	397, 692, 693, 398, 399, 400, 401, 402, 403, 404,
	405, 406, 0, 407, 694, 0, 695, 408, 0, 409,
	410, 411, 412, 413, 414, 696, 697, 698, 502, 0,
	415, 416, 0, 417, 418, 419, 420, 421, 0, 0,
	0, 0, 422, 423, 424, 0, 0, 503, 425, 699,
	700, 0, 701, 0, 426, 427, 0, 702, 0, 428,
	429, 430, 0, 431, 0, 0, 0, 432, 433, 434,
	435, 436, 437, 0, 438, 440, 439, 0, 441, 703,
	0, 442, 443, 0, 0, 444, 445, 446, 447, 448,
	449, 452, 0, 0, 450, 451, 453, 454, 0, 455,
	456, 458, 461, 457, 459, 460, 462, 475, 463, 464,
	465, 466, 467, 468, 469, 470, 471, 472, 473, 474,
	477, 0, 476, 0, 478, 479, 480, 481, 482, 489,
	491, 492, 487, 488, 490, 493, 494, 496, 484, 485,
	486, 0, 495, 483, 0, 0, 0, 497, 498, 499,
	500, 0, 704, 501, 705, 504, 505, 0, 0, 506,
	0, 507, 0, 0, 509, 510, 511, 0, 0, 512,
	513, 706, 0, 514, 0, 707, 515, 516, 508, 517,
	518, 519, 520, 521, 522, 523, 524, 525, 0, 526,
	527, 708, 528, 529, 530, 709, 531, 532, 533, 710,
	534, 711, 535, 536, 0, 537, 538, 539, 0, 540,
	541, 542, 543, 544, 545, 546, 712, 547, 548, 550,
	549, 551, 0, 552, 0, 553, 554, 555, 0, 0,
	0, 0, 0, 556, 557, 559, 0, 560, 561, 562,
	563, 558, 564, 565, 566, 567, 568, 0, 569, 570,
	571, 0, 572, 573, 574, 575, 576, 713, 577, 0,
	578, 579, 586, 587, 588, 580, 581, 582, 589, 590,
	591, 592, 593, 0, 595, 596, 594, 597, 598, 599,
	0, 600, 601, 583, 584, 602, 603, 0, 604, 605,
	606, 607, 608, 609, 610, 714, 0, 611, 0, 612,
	613, 614, 615, 616, 618, 585, 619, 624, 625, 715,
	620, 621, 622, 623, 716, 627, 628, 0, 629, 630,
	0, 626, 617, 0, 631, 632, 633, 634, 635, 636,
	0, 637, 638, 0, 639, 717, 718, 719, 720, 0,
	649, 0, 640, 641, 642, 643, 721, 644, 722, 0,
	645, 646, 647, 648, 0, 650, 651, 0, 0, 652,
	653, 655, 657, 658, 654, 656, 659, 0, 660, 0,
	0, 661, 662, 663, 723, 724, 725, 0, 665, 664,
	666, 667, 668, 726, 669, 670, 1757, 0, 285, 0,
	671, 672, 727, 673, 674, 675, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 291, 292, 294, 293, 295,
	296, 297, 298, 0, 299, 300, 0, 0, 0, 0,
	0, 676, 0, 0, 0, 301, 0, 302, 303, 0,
	304, 305, 306, 307, 308, 309, 310, 677, 678, 0,
	311, 679, 312, 680, 0, 681, 313, 314, 315, 316,
	317, 318, 0, 0, 0, 319, 682, 683, 684, 0,
	320, 321, 685, 0, 0, 0, 322, 323, 324, 325,
	326, 327, 328, 329, 0, 0, 331, 332, 333, 330,
	334, 0, 335, 0, 336, 337, 338, 339, 340, 341,
	0, 342, 343, 344, 0, 345, 346, 347, 0, 0,
	0, 0, 0, 0, 0, 348, 349, 350, 351, 352,
	0, 353, 355, 686, 687, 0, 358, 354, 356, 0,
	359, 357, 360, 0, 361, 362, 363, 0, 0, 364,
	365, 366, 0, 367, 368, 369, 0, 370, 371, 372,
	0, 373, 374, 688, 375, 376, 377, 379, 381, 378,
	380, 382, 383, 384, 385, 689, 690, 386, 0, 0,
	0, 0, 0, 0, 0, 387, 388, 389, 691, 0,
	0, 0, 390, 0, 391, 392, 393, 0, 394, 0,
	0, 395, 396, 397, 692, 693, 398, 399, 400, 401,
	402, 403, 404, 405, 406, 0, 407, 694, 0, 695,
	408, 0, 409, 410, 411, 412, 413, 414, 696, 697,
	698, 502, 0, 415, 416, 0, 417, 418, 419, 420,
	421, 0, 0, 0, 0, 422, 423, 424, 0, 0,
	503, 425, 699, 700, 0, 701, 0, 426, 427, 0,
	702, 0, 428, 429, 430, 0, 431, 0, 0, 0,
	432, 433, 434, 435, 436, 437, 0, 438, 440, 439,
	0, 441, 703, 0, 442, 443, 0, 0, 444, 445,
	446, 447, 448, 449, 452, 0, 0, 450, 451, 453,
	454, 0, 455, 456, 458, 461, 457, 459, 460, 462,
	475, 463, 464, 465, 466, 467, 468, 469, 470, 471,
	472, 473, 474, 477, 0, 476, 0, 478, 479, 480,
	481, 482, 489, 491, 492, 487, 488, 490, 493, 494,
	496, 484, 485, 486, 0, 495, 483, 0, 0, 0,
	497, 498, 499, 500, 0, 704, 501, 705, 504, 505,
	0, 0, 506, 0, 507, 0, 0, 509, 510, 511,
	0, 0, 512, 513, 706, 0, 514, 0, 707, 515,
	516, 508, 517, 518, 519, 520, 521, 522, 523, 524,
	525, 0, 526, 527, 708, 528, 529, 530, 709, 531,
	532, 533, 710, 534, 711, 535, 536, 0, 537, 538,
	539, 0, 540, 541, 542, 543, 544, 545, 546, 712,
	547, 548, 550, 549, 551, 0, 552, 0, 553, 554,
	555, 0, 0, 0, 0, 0, 556, 557, 559, 0,
	560, 561, 562, 563, 558, 564, 565, 566, 567, 568,
	0, 569, 570, 571, 0, 572, 573, 574, 575, 576,
	713, 577, 0, 578, 579, 586, 587, 588, 580, 581,
	582, 589, 590, 591, 592, 593, 0, 595, 596, 594,
	597, 598, 599, 0, 600, 601, 583, 584, 602, 603,
	0, 604, 605, 606, 607, 608, 609, 610, 714, 0,
	611, 0, 612, 613, 614, 615, 616, 618, 585, 619,
	624, 625, 715, 620, 621, 622, 623, 716, 627, 628,
	0, 629, 630, 0, 626, 617, 0, 631, 632, 633,
	634, 635, 636, 0, 637, 638, 0, 639, 717, 718,
	719, 720, 0, 649, 0, 640, 641, 642, 643, 721,
	644, 722, 0, 645, 646, 647, 648, 0, 650, 651,
	0, 0, 652, 653, 655, 657, 658, 654, 656, 659,
	0, 660, 0, 0, 661, 662, 663, 723, 724, 725,
	0, 665, 664, 666, 667, 668, 726, 669, 670, 810,
	0, 285, 0, 671, 672, 727, 673, 674, 675, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 291, 292,
	294, 293, 295, 296, 297, 298, 0, 299, 300, 0,
	0, 0, 0, 0, 676, 0, 0, 0, 301, 0,
	302, 303, 0, 304, 305, 306, 307, 308, 309, 310,
	677, 678, 0, 311, 679, 312, 680, 0, 681, 313,
	314, 315, 316, 317, 318, 0, 0, 0, 319, 682,
	683, 684, 0, 320, 806, 685, 0, 0, 0, 322,
	323, 324, 325, 326, 327, 328, 329, 0, 0, 331,
	332, 333, 330, 334, 0, 335, 0, 336, 337, 338,
	339, 340, 341, 0, 342, 343, 344, 0, 345, 346,
	347, 0, 0, 0, 0, 0, 0, 0, 348, 349,
	350, 351, 352, 0, 353, 355, 686, 687, 0, 358,
	354, 356, 0, 359, 357, 360, 0, 361, 362, 363,
	0, 0, 364, 365, 366, 0, 367, 368, 369, 0,
	370, 371, 372, 0, 373, 374, 688, 375, 376, 377,
	379, 381, 378, 380, 382, 383, 384, 385, 689, 690,
	386, 0, 0, 0, 0, 0, 0, 0, 387, 388,
	389, 691, 0, 0, 0, 390, 0, 391, 392, 393,
	0, 394, 0, 0, 395, 396, 397, 692, 693, 398,
	399, 400, 401, 402, 403, 404, 405, 406, 0, 407,
	694, 0, 695, 408, 0, 409, 410, 411, 412, 413,
	414, 696, 697, 698, 502, 0, 415, 416, 0, 417,
	418, 419, 420, 421, 0, 0, 0, 0, 422, 423,
	424, 0, 0, 503, 425, 699, 700, 0, 701, 0,
	426, 427, 0, 702, 0, 428, 429, 430, 0, 431,
	0, 0, 0, 432, 433, 434, 435, 436, 437, 0,
	438, 440, 439, 0, 441, 703, 0, 442, 443, 0,
	0, 444, 445, 446, 447, 448, 811, 452, 0, 0,
	450, 451, 453, 454, 0, 455, 456, 458, 461, 457,
	459, 460, 462, 475, 463, 464, 465, 466, 467, 468,
	469, 470, 471, 472, 473, 474, 477, 0, 820, 0,
	478, 479, 480, 481, 482, 489, 491, 492, 487, 488,
	490, 493, 494, 496, 484, 485, 486, 0, 495, 483,
	0, 0, 0, 497, 498, 499, 500, 0, 704, 501,
	705, 504, 505, 0, 0, 506, 0, 507, 0, 0,
	509, 510, 511, 0, 0, 512, 513, 706, 0, 514,
	0, 707, 515, 516, 508, 517, 518, 519, 520, 521,
	522, 523, 524, 525, 0, 526, 527, 708, 528, 529,
	530, 709, 531, 532, 533, 710, 534, 711, 535, 536,
	0, 537, 538, 539, 0, 540, 541, 542, 543, 544,
	545, 546, 712, 547, 548, 550, 549, 551, 0, 552,
	0, 553, 554, 555, 0, 0, 0, 0, 0, 556,
	557, 559, 0, 560, 561, 562, 563, 558, 564, 565,
	566, 567, 568, 0, 569, 570, 571, 0, 819, 573,
	574, 575, 576, 713, 577, 0, 578, 579, 586, 587,
	588, 580, 581, 582, 818, 590, 591, 592, 593, 0,
	595, 596, 594, 597, 1742, 599, 0, 600, 601, 583,
	584, 602, 603, 0, 604, 605, 606, 607, 608, 609,
	610, 714, 0, 611, 0, 612, 613, 614, 615, 616,
	618, 585, 619, 624, 625, 715, 620, 621, 622, 623,
	716, 627, 628, 0, 629, 630, 0, 626, 617, 0,
	631, 632, 633, 634, 635, 636, 0, 637, 638, 0,
	639, 816, 718, 719, 720, 0, 649, 0, 640, 641,
	642, 643, 721, 644, 722, 0, 645, 646, 647, 648,
	0, 650, 651, 0, 0, 652, 653, 655, 657, 658,
	654, 656, 659, 0, 660, 0, 0, 661, 662, 663,
	723, 724, 725, 0, 665, 664, 666, 667, 668, 726,
	669, 670, 1715, 0, 285, 0, 671, 672, 727, 673,
	674, 675, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 291, 292, 294, 293, 295, 296, 297, 298, 0,
	299, 300, 0, 0, 0, 0, 0, 676, 0, 0,
	0, 301, 0, 302, 303, 0, 304, 305, 306, 307,
	308, 309, 310, 677, 678, 0, 311, 679, 312, 680,
	0, 681, 313, 314, 315, 316, 317, 318, 0, 0,
	0, 319, 682, 683, 684, 0, 320, 321, 685, 0,
	0, 0, 322, 323, 324, 325, 326, 327, 328, 329,
	0, 0, 331, 332, 333, 330, 334, 0, 335, 0,
	336, 337, 338, 339, 340, 341, 0, 342, 343, 344,
	0, 345, 346, 347, 0, 0, 0, 0, 0, 0,
	0, 348, 349, 350, 351, 352, 0, 353, 355, 686,
	687, 0, 358, 354, 356, 0, 359, 357, 360, 0,
	361, 362, 363, 0, 0, 364, 365, 366, 0, 367,
	368, 369, 0, 370, 371, 372, 0, 373, 374, 688,
	375, 376, 377, 379, 381, 378, 380, 382, 383, 384,
	385, 689, 690, 386, 0, 0, 0, 0, 0, 0,
	0, 387, 388, 389, 691, 0, 0, 0, 390, 0,
	391, 392, 393, 0, 394, 0, 0, 395, 396, 397,
	692, 693, 398, 399, 400, 401, 402, 403, 404, 405,
	406, 0, 407, 694, 0, 695, 408, 0, 409, 410,
	411, 412, 413, 414, 1714, 697, 698, 502, 0, 415,
	416, 0, 417, 418, 419, 420, 421, 0, 0, 0,
	0, 422, 423, 424, 0, 0, 503, 425, 699, 700,
	0, 701, 0, 426, 427, 0, 702, 0, 428, 429,
	430, 0, 431, 0, 0, 0, 432, 433, 434, 435,
	436, 437, 0, 438, 440, 439, 0, 441, 703, 0,
	442, 443, 0, 0, 444, 445, 446, 447, 448, 449,
	452, 0, 0, 450, 451, 453, 454, 0, 455, 456,
	458, 461, 457, 459, 460, 462, 475, 463, 464, 465,
	466, 467, 468, 469, 470, 471, 472, 473, 474, 477,
	0, 476, 0, 478, 479, 480, 481, 482, 489, 491,
	492, 487, 488, 490, 493, 494, 496, 484, 485, 486,
	0, 495, 483, 0, 0, 0, 497, 498, 499, 500,
	0, 704, 501, 705, 504, 505, 0, 0, 506, 0,
	507, 0, 0, 509, 510, 511, 0, 0, 512, 513,
	706, 0, 514, 0, 707, 515, 516, 508, 517, 518,
	519, 520, 521, 522, 523, 524, 525, 0, 526, 527,
	708, 528, 529, 530, 709, 531, 532, 533, 710, 534,
	711, 535, 536, 0, 537, 538, 539, 0, 540, 541,
	542, 543, 544, 545, 546, 712, 547, 548, 550, 549,
	551, 0, 552, 0, 553, 554, 555, 0, 0, 0,
	0, 0, 556, 557, 559, 0, 560, 561, 562, 563,
	558, 564, 565, 566, 567, 568, 0, 569, 570, 571,
	0, 572, 573, 574, 575, 576, 713, 577, 0, 578,
	579, 586, 587, 588, 580, 581, 582, 589, 590, 591,
	592, 593, 0, 595, 596, 594, 597, 598, 599, 0,
	600, 601, 583, 584, 602, 603, 0, 604, 605, 606,
	607, 608, 609, 610, 714, 0, 611, 0, 612, 613,
	614, 615, 616, 618, 585, 619, 624, 625, 715, 620,
	621, 622, 623, 716, 627, 628, 0, 629, 630, 0,
	626, 617, 0, 631, 632, 633, 634, 635, 636, 0,
	637, 638, 0, 639, 717, 718, 719, 720, 0, 649,
	0, 640, 641, 642, 643, 721, 644, 722, 0, 645,
	646, 647, 648, 0, 650, 651, 0, 0, 652, 653,
	655, 657, 658, 654, 656, 659, 0, 660, 0, 0,
	661, 662, 663, 723, 724, 725, 0, 665, 664, 666,
	667, 668, 726, 669, 670, 1699, 0, 285, 0, 671,
	672, 727, 673, 674, 675, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 291, 292, 294, 293, 295, 296,
	297, 298, 0, 299, 300, 0, 0, 0, 0, 0,
	676, 0, 0, 0, 301, 0, 302, 303, 0, 304,
	305, 306, 307, 308, 309, 310, 677, 678, 0, 311,
	679, 312, 680, 0, 681, 313, 314, 315, 316, 317,
	318, 0, 0, 0, 319, 682, 683, 684, 0, 320,
	321, 685, 0, 0, 0, 322, 323, 324, 325, 326,
	327, 328, 329, 0, 0, 331, 332, 333, 330, 334,
	0, 335, 0, 336, 337, 338, 339, 340, 341, 0,
	342, 343, 344, 0, 345, 346, 347, 0, 0, 0,
	0, 0, 0, 0, 348, 349, 350, 351, 352, 0,
	353, 355, 686, 687, 0, 358, 354, 356, 0, 359,
	357, 360, 0, 361, 362, 363, 0, 0, 364, 365,
	366, 0, 367, 368, 369, 0, 370, 371, 372, 0,
	373, 374, 688, 375, 376, 377, 379, 381, 378, 380,
	382, 383, 384, 385, 689, 690, 386, 0, 0, 0,
	0, 0, 0, 0, 387, 388, 389, 691, 0, 0,
	0, 390, 0, 391, 392, 393, 0, 394, 0, 0,
	395, 396, 397, 692, 693, 398, 399, 400, 401, 402,
	403, 404, 405, 406, 0, 407, 694, 0, 695, 408,
	0, 409, 410, 411, 412, 413, 414, 1697, 697, 698,
	502, 0, 415, 416, 0, 417, 418, 419, 420, 421,
	0, 0, 0, 0, 422, 423, 424, 0, 0, 503,
	425, 699, 700, 0, 701, 0, 426, 427, 0, 702,
	0, 428, 429, 430, 0, 431, 0, 0, 0, 432,
	433, 434, 435, 436, 437, 0, 438, 440, 439, 0,
	441, 703, 0, 442, 443, 0, 0, 444, 445, 446,
	447, 448, 449, 452, 0, 0, 450, 451, 453, 454,
	0, 455, 456, 458, 461, 457, 459, 460, 462, 475,
	463, 464, 465, 466, 467, 468, 469, 470, 471, 472,
	473, 474, 477, 0, 476, 0, 478, 479, 480, 481,
	482, 489, 491, 492, 487, 488, 490, 493, 494, 496,
	484, 485, 486, 0, 495, 483, 0, 0, 0, 497,
	498, 499, 500, 0, 704, 501, 705, 504, 505, 0,
	0, 506, 0, 507, 0, 0, 509, 510, 511, 0,
	0, 512, 513, 706, 0, 514, 0, 707, 515, 516,
	508, 517, 518, 519, 520, 521, 522, 523, 524, 525,
	0, 526, 527, 708, 528, 529, 530, 709, 531, 532,
	533, 710, 534, 711, 535, 536, 0, 537, 538, 539,
	0, 540, 541, 542, 543, 544, 545, 546, 712, 547,
	548, 550, 549, 551, 0, 552, 0, 553, 554, 555,
	0, 0, 0, 0, 0, 556, 557, 559, 0, 560,
	561, 562, 563, 558, 564, 565, 566, 567, 568, 0,
	569, 570, 571, 0, 572, 573, 574, 575, 576, 713,
	577, 0, 578, 579, 586, 587, 588, 580, 581, 582,
	589, 590, 591, 592, 593, 0, 595, 596, 594, 597,
	598, 599, 0, 600, 601, 583, 584, 602, 603, 0,
	604, 605, 606, 607, 608, 609, 610, 714, 0, 611,
	0, 612, 613, 614, 615, 616, 618, 585, 619, 624,
	625, 715, 620, 621, 622, 623, 716, 627, 628, 0,
	629, 630, 0, 626, 617, 0, 631, 632, 633, 634,
	635, 636, 0, 637, 638, 0, 639, 717, 718, 719,
	720, 0, 649, 0, 640, 641, 642, 643, 721, 644,
	722, 0, 645, 646, 647, 648, 0, 650, 651, 0,
	0, 652, 653, 655, 657, 658, 654, 656, 659, 0,
	660, 0, 0, 661, 662, 663, 723, 724, 725, 0,
	665, 664, 666, 667, 668, 726, 669, 670, 1692, 0,
	285, 0, 671, 672, 727, 673, 674, 675, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 291, 292, 294,
	293, 295, 296, 297, 298, 0, 299, 300, 0, 0,
	0, 0, 0, 676, 0, 0, 0, 301, 0, 302,
	303, 0, 304, 305, 306, 307, 308, 309, 310, 677,
	678, 0, 311, 679, 312, 680, 0, 681, 313, 314,
	315, 316, 317, 318, 0, 0, 0, 319, 682, 683,
	684, 0, 320, 321, 685, 0, 0, 0, 322, 323,
	324, 325, 326, 327, 328, 329, 0, 0, 331, 332,
	333, 330, 334, 0, 335, 0, 336, 337, 338, 339,
	340, 341, 0, 342, 343, 344, 0, 345, 346, 347,
	0, 0, 0, 0, 0, 0, 0, 348, 349, 350,
	351, 352, 0, 353, 355, 686, 687, 0, 358, 354,
	356, 0, 359, 357, 360, 0, 361, 362, 363, 0,
	0, 364, 365, 366, 0, 367, 368, 369, 0, 370,
	371, 372, 0, 373, 374, 688, 375, 376, 377, 379,
	381, 378, 380, 382, 383, 384, 385, 689, 690, 386,
	0, 0, 0, 0, 0, 0, 0, 387, 388, 389,
	691, 0, 0, 0, 390, 0, 391, 392, 393, 0,
	394, 0, 0, 395, 396, 397, 692, 693, 398, 399,
	400, 401, 402, 403, 404, 405, 406, 0, 407, 694,
	0, 695, 408, 0, 409, 410, 411, 412, 413, 414,
	696, 697, 698, 502, 0, 415, 416, 0, 417, 418,
	419, 420, 421, 0, 0, 0, 0, 422, 423, 424,
	0, 0, 503, 425, 699, 700, 0, 701, 0, 426,
	427, 0, 702, 0, 428, 429, 430, 0, 431, 0,
	0, 0, 432, 433, 434, 435, 436, 437, 0, 438,
	440, 439, 0, 441, 703, 0, 442, 443, 0, 0,
	444, 445, 446, 447, 448, 449, 452, 0, 0, 450,
	451, 453, 454, 0, 455, 456, 458, 461, 457, 459,
	460, 462, 475, 463, 464, 465, 466, 467, 468, 469,
	470, 471, 472, 473, 474, 477, 0, 476, 0, 478,
	479, 480, 481, 482, 489, 491, 492, 487, 488, 490,
	493, 494, 496, 484, 485, 486, 0, 495, 483, 0,
	0, 0, 497, 498, 499, 500, 0, 704, 501, 705,
	504, 505, 0, 0, 506, 0, 507, 0, 0, 509,
	510, 511, 0, 0, 512, 513, 706, 0, 514, 0,
	707, 515, 516, 508, 517, 518, 519, 520, 521, 522,
	523, 524, 525, 0, 526, 527, 708, 528, 529, 530,
	709, 531, 532, 533, 710, 534, 711, 535, 536, 0,
	537, 538, 539, 0, 540, 541, 542, 543, 544, 545,
	546, 712, 547, 548, 550, 549, 551, 0, 552, 0,
	553, 554, 555, 0, 0, 0, 0, 0, 556, 557,
	559, 0, 560, 561, 562, 563, 558, 564, 565, 566,
	567, 568, 0, 569, 570, 571, 0, 572, 573, 574,
	575, 576, 713, 577, 0, 578, 579, 586, 587, 588,
	580, 581, 582, 589, 590, 591, 592, 593, 0, 595,
	596, 594, 597, 598, 599, 0, 600, 601, 583, 584,
	602, 603, 0, 604, 605, 606, 607, 608, 609, 610,
	714, 0, 611, 0, 612, 613, 614, 615, 616, 618,
	585, 619, 624, 625, 715, 620, 621, 622, 623, 716,
	627, 628, 0, 629, 630, 0, 626, 617, 0, 631,
	632, 633, 634, 635, 636, 0, 637, 638, 0, 639,
	717, 718, 719, 720, 0, 649, 0, 640, 641, 642,
	643, 721, 644, 722, 0, 645, 646, 647, 648, 0,
	650, 651, 0, 0, 652, 653, 655, 657, 658, 654,
	656, 659, 0, 660, 0, 0, 661, 662, 663, 723,
	724, 725, 0, 665, 664, 666, 667, 668, 726, 669,
	670, 1669, 0, 285, 0, 671, 672, 727, 673, 674,
	675, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	291, 292, 294, 293, 295, 296, 297, 298, 0, 299,
	300, 0, 0, 0, 0, 0, 676, 0, 0, 0,
	301, 0, 302, 303, 0, 304, 305, 306, 307, 308,
	309, 310, 677, 678, 0, 311, 679, 312, 680, 0,
	681, 313, 314, 315, 316, 317, 318, 0, 0, 0,
	319, 682, 683, 684, 0, 320, 321, 685, 0, 0,
	0, 322, 323, 324, 325, 326, 327, 328, 329, 0,
	0, 331, 332, 333, 330, 334, 0, 335, 0, 336,
	337, 338, 339, 340, 341, 0, 342, 343, 344, 0,
	345, 346, 347, 0, 0, 0, 0, 0, 0, 0,
	348, 349, 350, 351, 352, 0, 353, 355, 686, 687,
	0, 358, 354, 356, 0, 359, 357, 360, 0, 361,
	362, 363, 0, 0, 364, 365, 366, 0, 367, 368,
	369, 0, 370, 371, 372, 0, 373, 374, 688, 375,
	376, 377, 379, 381, 378, 380, 382, 383, 384, 385,
	689, 690, 386, 0, 0, 0, 0, 0, 0, 0,
	387, 388, 389, 691, 0, 0, 0, 390, 0, 391,
	392, 393, 0, 394, 0, 0, 395, 396, 397, 692,
	693, 398, 399, 400, 401, 402, 403, 404, 405, 406,
	0, 407, 694, 0, 695, 408, 0, 409, 410, 411,
	412, 413, 414, 1667, 697, 698, 502, 0, 415, 416,
	0, 417, 418, 419, 420, 421, 0, 0, 0, 0,
	422, 423, 424, 0, 0, 503, 425, 699, 700, 0,
	701, 0, 426, 427, 0, 702, 0, 428, 429, 430,
	0, 431, 0, 0, 0, 432, 433, 434, 435, 436,
	437, 0, 438, 440, 439, 0, 441, 703, 0, 442,
	443, 0, 0, 444, 445, 446, 447, 448, 449, 452,
	0, 0, 450, 451, 453, 454, 0, 455, 456, 458,
	461, 457, 459, 460, 462, 475, 463, 464, 465, 466,
	467, 468, 469, 470, 471, 472, 473, 474, 477, 0,
	476, 0, 478, 479, 480, 481, 482, 489, 491, 492,
	487, 488, 490, 493, 494, 496, 484, 485, 486, 0,
	495, 483, 0, 0, 0, 497, 498, 499, 500, 0,
	704, 501, 705, 504, 505, 0, 0, 506, 0, 507,
	0, 0, 509, 510, 511, 0, 0, 512, 513, 706,
	0, 514, 0, 707, 515, 516, 508, 517, 518, 519,
	520, 521, 522, 523, 524, 525, 0, 526, 527, 708,
	528, 529, 530, 709, 531, 532, 533, 710, 534, 711,
	535, 536, 0, 537, 538, 539, 0, 540, 541, 542,
	543, 544, 545, 546, 712, 547, 548, 550, 549, 551,
	0, 552, 0, 553, 554, 555, 0, 0, 0, 0,
	0, 556, 557, 559, 0, 560, 561, 562, 563, 558,
	564, 565, 566, 567, 568, 0, 569, 570, 571, 0,
	572, 573, 574, 575, 576, 713, 577, 0, 578, 579,
	586, 587, 588, 580, 581, 582, 589, 590, 591, 592,
	593, 0, 595, 596, 594, 597, 598, 599, 0, 600,
	601, 583, 584, 602, 603, 0, 604, 605, 606, 607,
	608, 609, 610, 714, 0, 611, 0, 612, 613, 614,
	615, 616, 618, 585, 619, 624, 625, 715, 620, 621,
	622, 623, 716, 627, 628, 0, 629, 630, 0, 626,
	617, 0, 631, 632, 633, 634, 635, 636, 0, 637,
	638, 0, 639, 717, 718, 719, 720, 0, 649, 0,
	640, 641, 642, 643, 721, 644, 722, 0, 645, 646,
	647, 648, 0, 650, 651, 0, 0, 652, 653, 655,
	657, 658, 654, 656, 659, 0, 660, 0, 0, 661,
	662, 663, 723, 724, 725, 0, 665, 664, 666, 667,
	668, 726, 669, 670, 1662, 0, 285, 0, 671, 672,
	727, 673, 674, 675, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 291, 292, 294, 293, 295, 296, 297,
	298, 0, 299, 300, 0, 0, 0, 0, 0, 676,
	0, 0, 0, 301, 0, 302, 303, 0, 304, 305,
	306, 307, 308, 309, 310, 677, 678, 0, 311, 679,
	312, 680, 0, 681, 313, 314, 315, 316, 317, 318,
	0, 0, 0, 319, 682, 683, 684, 0, 320, 321,
	685, 0, 0, 0, 322, 323, 324, 325, 326, 327,
	328, 329, 0, 0, 331, 332, 333, 330, 334, 0,
	335, 0, 336, 337, 338, 339, 340, 341, 0, 342,
	343, 344, 0, 345, 346, 347, 0, 0, 0, 0,
	0, 0, 0, 348, 349, 350, 351, 352, 0, 353,
	355, 686, 687, 0, 358, 354, 356, 0, 359, 357,
	360, 0, 361, 362, 363, 0, 0, 364, 365, 366,
	0, 367, 368, 369, 0, 370, 371, 372, 0, 373,
	374, 688, 375, 376, 377, 379, 381, 378, 380, 382,
	383, 384, 385, 689, 690, 386, 0, 0, 0, 0,
	0, 0, 0, 387, 388, 389, 691, 0, 0, 0,
	390, 0, 391, 392, 393, 0, 394, 0, 0, 395,
	396, 397, 692, 693, 398, 399, 400, 401, 402, 403,
	404, 405, 406, 0, 407, 694, 0, 695, 408, 0,
	409, 410, 411, 412, 413, 414, 696, 697, 698, 502,
	0, 415, 416, 0, 417, 418, 419, 420, 421, 0,
	0, 0, 0, 422, 423, 424, 0, 0, 503, 425,
	699, 700, 0, 701, 0, 426, 427, 0, 702, 0,
	428, 429, 430, 0, 431, 0, 0, 0, 432, 433,
	434, 435, 436, 437, 0, 438, 440, 439, 0, 441,
	703, 0, 442, 443, 0, 0, 444, 445, 446, 447,
	448, 449, 452, 0, 0, 450, 451, 453, 454, 0,
	455, 456, 458, 461, 457, 459, 460, 462, 475, 463,
	464, 465, 466, 467, 468, 469, 470, 471, 472, 473,
	474, 477, 0, 476, 0, 478, 479, 480, 481, 482,
	489, 491, 492, 487, 488, 490, 493, 494, 496, 484,
	485, 486, 0, 495, 483, 0, 0, 0, 497, 498,
	499, 500, 0, 704, 501, 705, 504, 505, 0, 0,
	506, 0, 507, 0, 0, 509, 510, 511, 0, 0,
	512, 513, 706, 0, 514, 0, 707, 515, 516, 508,
	517, 518, 519, 520, 521, 522, 523, 524, 525, 0,
	526, 527, 708, 528, 529, 530, 709, 531, 532, 533,
	710, 534, 711, 535, 536, 0, 537, 538, 539, 0,
	540, 541, 542, 543, 544, 545, 546, 712, 547, 548,
	550, 549, 551, 0, 552, 0, 553, 554, 555, 0,
	0, 0, 0, 0, 556, 557, 559, 0, 560, 561,
	562, 563, 558, 564, 565, 566, 567, 568, 0, 569,
	570, 571, 0, 572, 573, 574, 575, 576, 713, 577,
	0, 578, 579, 586, 587, 588, 580, 581, 582, 589,
	590, 591, 592, 593, 0, 595, 596, 594, 597, 598,
	599, 0, 600, 601, 583, 584, 602, 603, 0, 604,
	605, 606, 607, 608, 609, 610, 714, 0, 611, 0,
	612, 613, 614, 615, 616, 618, 585, 619, 624, 625,
	715, 620, 621, 622, 623, 716, 627, 628, 0, 629,
	630, 0, 626, 617, 0, 631, 632, 633, 634, 635,
	636, 0, 637, 638, 0, 639, 717, 718, 719, 720,
	0, 649, 0, 640, 641, 642, 643, 721, 644, 722,
	0, 645, 646, 647, 648, 0, 650, 651, 0, 0,
	652, 653, 655, 657, 658, 654, 656, 659, 0, 660,
	0, 0, 661, 662, 663, 723, 724, 725, 0, 665,
	664, 666, 667, 668, 726, 669, 670, 1623, 0, 285,
	0, 671, 672, 727, 673, 674, 675, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 291, 292, 294, 293,
	295, 296, 297, 298, 0, 299, 300, 0, 0, 0,
	0, 0, 676, 0, 0, 0, 301, 0, 302, 303,
	0, 304, 305, 306, 307, 308, 309, 310, 677, 678,
	0, 311, 679, 312, 680, 0, 681, 313, 314, 315,
	316, 317, 318, 0, 0, 0, 319, 682, 683, 684,
	0, 320, 321, 685, 0, 0, 0, 322, 323, 324,
	325, 326, 327, 328, 329, 0, 0, 331, 332, 333,
	330, 334, 0, 335, 0, 336, 337, 338, 339, 340,
	341, 0, 342, 343, 344, 0, 345, 346, 347, 0,
	0, 0, 0, 0, 0, 0, 348, 349, 350, 351,
	352, 0, 353, 355, 686, 687, 0, 358, 354, 356,
	0, 359, 357, 360, 0, 361, 362, 363, 0, 0,
	364, 365, 366, 0, 367, 368, 369, 0, 370, 371,
	372, 0, 373, 374, 688, 375, 376, 377, 379, 381,
	378, 380, 382, 383, 384, 385, 689, 690, 386, 0,
	0, 0, 0, 0, 0, 0, 387, 388, 389, 691,
	0, 0, 0, 390, 0, 391, 392, 393, 0, 394,
	0, 0, 395, 396, 397, 692, 693, 398, 399, 400,
	401, 402, 403, 404, 405, 406, 0, 407, 694, 0,
	695, 408, 0, 409, 410, 411, 412, 413, 414, 696,
	697, 698, 502, 0, 415, 416, 0, 417, 418, 419,
	420, 421, 0, 0, 0, 0, 422, 423, 424, 0,
	0, 503, 425, 699, 700, 0, 701, 0, 426, 427,
	0, 702, 0, 428, 429, 430, 0, 431, 0, 0,
	0, 432, 433, 434, 435, 436, 437, 0, 438, 440,
	439, 0, 441, 703, 0, 442, 443, 0, 0, 444,
	445, 446, 447, 448, 449, 452, 0, 0, 450, 451,
	453, 454, 0, 455, 456, 458, 461, 457, 459, 460,
	462, 475, 463, 464, 465, 466, 467, 468, 469, 470,
	471, 472, 473, 474, 477, 0, 476, 0, 478, 479,
	480, 481, 482, 489, 491, 492, 487, 488, 490, 493,
	494, 496, 484, 485, 486, 0, 495, 483, 0, 0,
	0, 497, 498, 499, 500, 0, 704, 501, 705, 504,
	505, 0, 0, 506, 0, 507, 0, 0, 509, 510,
	511, 0, 0, 512, 513, 706, 0, 514, 0, 707,
	515, 516, 508, 517, 518, 519, 520, 521, 522, 523,
	524, 525, 0, 526, 527, 708, 528, 529, 530, 709,
	531, 532, 533, 710, 534, 711, 535, 536, 0, 537,
	538, 539, 0, 540, 541, 542, 543, 544, 545, 546,
	712, 547, 548, 550, 549, 551, 0, 552, 0, 553,
	554, 555, 0, 0, 0, 0, 0, 556, 557, 559,
	0, 560, 561, 562, 563, 558, 564, 565, 566, 567,
	568, 0, 569, 570, 571, 0, 572, 573, 574, 575,
	576, 713, 577, 0, 578, 579, 586, 587, 588, 580,
	581, 582, 589, 590, 591, 592, 593, 0, 595, 596,
	594, 597, 598, 599, 0, 600, 601, 583, 584, 602,
	603, 0, 604, 605, 606, 607, 608, 609, 610, 714,
	0, 611, 0, 612, 613, 614, 615, 616, 618, 585,
	619, 624, 625, 715, 620, 621, 622, 623, 716, 627,
	628, 0, 629, 630, 0, 626, 617, 0, 631, 632,
	633, 634, 635, 636, 0, 637, 638, 0, 639, 717,
	718, 719, 720, 0, 649, 0, 640, 641, 642, 643,
	721, 644, 722, 0, 645, 646, 647, 648, 0, 650,
	651, 0, 0, 652, 653, 655, 657, 658, 654, 656,
	659, 0, 660, 0, 0, 661, 662, 663, 723, 724,
	725, 0, 665, 664, 666, 667, 668, 726, 669, 670,
	1587, 0, 285, 0, 671, 672, 727, 673, 674, 675,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 291,
	292, 294, 293, 295, 296, 297, 298, 0, 299, 300,
	0, 0, 0, 0, 0, 676, 0, 0, 0, 301,
	0, 302, 303, 0, 304, 305, 306, 307, 308, 309,
	310, 677, 678, 0, 311, 679, 312, 680, 0, 681,
	313, 314, 315, 316, 317, 318, 0, 0, 0, 319,
	682, 683, 684, 0, 320, 321, 685, 0, 0, 0,
	322, 323, 324, 325, 326, 327, 328, 329, 0, 0,
	331, 332, 333, 330, 334, 0, 335, 0, 336, 337,
	338, 339, 340, 341, 0, 342, 343, 344, 0, 345,
	346, 347, 0, 0, 0, 0, 0, 0, 0, 348,
	349, 350, 351, 352, 0, 353, 355, 686, 687, 0,
	358, 354, 356, 0, 359, 357, 360, 0, 361, 362,
	363, 0, 0, 364, 365, 366, 0, 367, 368, 369,
	0, 370, 371, 372, 0, 373, 374, 688, 375, 376,
	377, 379, 381, 378, 380, 382, 383, 384, 385, 689,
	690, 386, 0, 0, 0, 0, 0, 0, 0, 387,
	388, 389, 691, 0, 0, 0, 390, 0, 391, 392,
	393, 0, 394, 0, 0, 395, 396, 397, 692, 693,
	398, 399, 400, 401, 402, 403, 404, 405, 406, 0,
	407, 694, 0, 695, 408, 0, 409, 410, 411, 412,
	413, 414, 696, 697, 698, 502, 0, 415, 416, 0,
	417, 418, 419, 420, 421, 0, 0, 0, 0, 422,
	423, 424, 0, 0, 503, 425, 699, 700, 0, 701,
	0, 426, 427, 0, 702, 0, 428, 429, 430, 0,
	431, 0, 0, 0, 432, 433, 434, 435, 436, 437,
	0, 438, 440, 439, 0, 441, 703, 0, 442, 443,
	0, 0, 444, 445, 446, 447, 448, 449, 452, 0,
	0, 450, 451, 453, 454, 0, 455, 456, 458, 461,
	457, 459, 460, 462, 475, 463, 464, 465, 466, 467,
	468, 469, 470, 471, 472, 473, 474, 477, 0, 476,
	0, 478, 479, 480, 481, 482, 489, 491, 492, 487,
	488, 490, 493, 494, 496, 484, 485, 486, 0, 495,
	483, 0, 0, 0, 497, 498, 499, 500, 0, 704,
	501, 705, 504, 505, 0, 0, 506, 0, 507, 0,
	0, 509, 510, 511, 0, 0, 512, 513, 706, 0,
	514, 0, 707, 515, 516, 508, 517, 518, 519, 520,
	521, 522, 523, 524, 525, 0, 526, 527, 708, 528,
	529, 530, 709, 531, 532, 533, 710, 534, 711, 535,
	536, 0, 537, 538, 539, 0, 540, 541, 542, 543,
	544, 545, 546, 712, 547, 548, 550, 549, 551, 0,
	552, 0, 553, 554, 555, 0, 0, 0, 0, 0,
	556, 557, 559, 0, 560, 561, 562, 563, 558, 564,
	565, 566, 567, 568, 0, 569, 570, 571, 0, 572,
	573, 574, 575, 576, 713, 577, 0, 578, 579, 586,
	587, 588, 580, 581, 582, 589, 590, 591, 592, 593,
	0, 595, 596, 594, 597, 598, 599, 0, 600, 601,
	583, 584, 602, 603, 0, 604, 605, 606, 607, 608,
	609, 610, 714, 0, 611, 0, 612, 613, 614, 615,
	616, 618, 585, 619, 624, 625, 715, 620, 621, 622,
	623, 716, 627, 628, 0, 629, 630, 0, 626, 617,
	0, 631, 632, 633, 634, 635, 636, 0, 637, 638,
	0, 639, 717, 718, 719, 720, 0, 649, 0, 640,
	641, 642, 643, 721, 644, 722, 0, 645, 646, 647,
	648, 0, 650, 651, 0, 0, 652, 653, 655, 657,
	658, 654, 656, 659, 0, 660, 0, 0, 661, 662,
	663, 723, 724, 725, 0, 665, 664, 666, 667, 668,
	726, 669, 670, 1438, 0, 285, 0, 671, 672, 727,
	673, 674, 675, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 291, 292, 294, 293, 295, 296, 297, 298,
	0, 299, 300, 0, 0, 0, 0, 0, 676, 0,
	0, 0, 301, 0, 302, 303, 0, 304, 305, 306,
	307, 308, 309, 310, 677, 678, 0, 311, 679, 312,
	680, 0, 681, 313, 314, 315, 316, 317, 318, 0,
	0, 0, 319, 682, 683, 684, 0, 320, 321, 685,
	0, 0, 0, 322, 323, 324, 325, 326, 327, 328,
	329, 0, 0, 331, 332, 333, 330, 334, 0, 335,
	0, 336, 337, 338, 339, 340, 341, 0, 342, 343,
	344, 0, 345, 346, 347, 0, 0, 0, 0, 0,
	0, 0, 348, 349, 350, 351, 352, 0, 353, 355,
	686, 687, 0, 358, 354, 356, 0, 359, 357, 360,
	0, 361, 362, 363, 0, 0, 364, 365, 366, 0,
	367, 368, 369, 0, 370, 371, 372, 0, 373, 374,
	688, 375, 376, 377, 379, 381, 378, 380, 382, 383,
	384, 385, 689, 690, 386, 0, 0, 0, 0, 0,
	0, 0, 387, 388, 389, 691, 0, 0, 0, 390,
	0, 391, 392, 393, 0, 394, 0, 0, 395, 396,
	397, 692, 693, 398, 399, 400, 401, 402, 403, 404,
	405, 406, 0, 407, 694, 0, 695, 408, 0, 409,
	410, 411, 412, 413, 414, 696, 697, 698, 502, 0,
	415, 416, 0, 417, 418, 419, 420, 421, 0, 0,
	0, 0, 422, 423, 424, 0, 0, 503, 425, 699,
	700, 0, 701, 0, 426, 427, 0, 702, 0, 428,
	429, 430, 0, 431, 0, 0, 0, 432, 433, 434,
	435, 436, 437, 0, 438, 440, 439, 0, 441, 703,
	0, 442, 443, 0, 0, 444, 445, 446, 447, 448,
	449, 452, 0, 0, 450, 451, 453, 454, 0, 455,
	456, 458, 461, 457, 459, 460, 462, 475, 463, 464,
	465, 466, 467, 468, 469, 470, 471, 472, 473, 474,
	477, 0, 476, 0, 478, 479, 480, 481, 482, 489,
	491, 492, 487, 488, 490, 493, 494, 496, 484, 485,
	486, 0, 495, 483, 0, 0, 0, 497, 498, 499,
	500, 0, 704, 501, 705, 504, 505, 0, 0, 506,
	0, 507, 0, 0, 509, 510, 511, 0, 0, 512,
	513, 706, 0, 514, 0, 707, 515, 516, 508, 517,
	518, 519, 520, 521, 522, 523, 524, 525, 0, 526,
	527, 708, 528, 529, 530, 709, 531, 532, 533, 710,
	534, 711, 535, 536, 0, 537, 538, 539, 0, 540,
	541, 542, 543, 544, 545, 546, 712, 547, 548, 550,
	549, 551, 0, 552, 0, 553, 554, 555, 0, 0,
	0, 0, 0, 556, 557, 559, 0, 560, 561, 562,
	563, 558, 564, 565, 566, 567, 568, 0, 569, 570,
	571, 0, 819, 573, 574, 575, 576, 713, 577, 0,
	578, 579, 586, 587, 588, 580, 581, 582, 818, 590,
	591, 592, 593, 0, 595, 596, 594, 597, 598, 599,
	0, 600, 601, 583, 584, 602, 603, 0, 604, 605,
	606, 607, 608, 609, 610, 714, 0, 611, 0, 612,
	613, 614, 615, 616, 618, 585, 619, 624, 625, 715,
	620, 621, 622, 623, 716, 627, 628, 0, 629, 630,
	0, 626, 617, 0, 631, 632, 633, 634, 635, 636,
	0, 637, 638, 0, 639, 816, 718, 719, 720, 0,
	649, 0, 640, 641, 642, 643, 721, 644, 722, 0,
	645, 646, 647, 648, 0, 650, 651, 0, 0, 652,
	653, 655, 657, 658, 654, 656, 659, 0, 660, 0,
	0, 661, 662, 663, 723, 724, 725, 0, 665, 664,
	666, 667, 668, 726, 669, 670, 1409, 0, 285, 0,
	671, 672, 727, 673, 674, 675, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 291, 292, 294, 293, 295,
	296, 297, 298, 0, 299, 300, 0, 0, 0, 0,
	0, 676, 0, 0, 0, 301, 0, 302, 303, 0,
	304, 305, 306, 307, 308, 309, 310, 677, 678, 0,
	311, 679, 312, 680, 0, 681, 313, 314, 315, 316,
	317, 318, 0, 0, 0, 319, 682, 683, 684, 0,
	320, 321, 685, 0, 0, 0, 322, 323, 324, 325,
	326, 327, 328, 329, 0, 0, 331, 332, 333, 330,
	334, 0, 335, 0, 336, 337, 338, 339, 340, 341,
	0, 342, 343, 344, 0, 345, 346, 347, 0, 0,
	0, 0, 0, 0, 0, 348, 349, 350, 351, 352,
	0, 353, 355, 686, 687, 0, 358, 354, 356, 0,
	359, 357, 360, 0, 361, 362, 363, 0, 0, 364,
	365, 366, 0, 367, 368, 369, 0, 370, 371, 372,
	0, 373, 374, 688, 375, 376, 377, 379, 381, 378,
	380, 382, 383, 384, 385, 689, 690, 386, 0, 0,
	0, 0, 0, 0, 0, 387, 388, 389, 691, 0,
	0, 0, 390, 0, 391, 392, 393, 0, 394, 0,
	0, 395, 396, 397, 692, 693, 398, 399, 400, 401,
	402, 403, 404, 405, 406, 0, 407, 694, 0, 695,
	408, 0, 409, 410, 411, 412, 413, 414, 1408, 697,
	698, 502, 0, 415, 416, 0, 417, 418, 419, 420,
	421, 0, 0, 0, 0, 422, 423, 424, 0, 0,
	503, 425, 699, 700, 0, 701, 0, 426, 427, 0,
	702, 0, 428, 429, 430, 0, 431, 0, 0, 0,
	432, 433, 434, 435, 436, 437, 0, 438, 440, 439,
	0, 441, 703, 0, 442, 443, 0, 0, 444, 445,
	446, 447, 448, 449, 452, 0, 0, 450, 451, 453,
	454, 0, 455, 456, 458, 461, 457, 459, 460, 462,
	475, 463, 464, 465, 466, 467, 468, 469, 470, 471,
	472, 473, 474, 477, 0, 476, 0, 478, 479, 480,
	481, 482, 489, 491, 492, 487, 488, 490, 493, 494,
	496, 484, 485, 486, 0, 495, 483, 0, 0, 0,
	497, 498, 499, 500, 0, 704, 501, 705, 504, 505,
	0, 0, 506, 0, 507, 0, 0, 509, 510, 511,
	0, 0, 512, 513, 706, 0, 514, 0, 707, 515,
	516, 508, 517, 518, 519, 520, 521, 522, 523, 524,
	525, 0, 526, 527, 708, 528, 529, 530, 709, 531,
	532, 533, 710, 534, 711, 535, 536, 0, 537, 538,
	539, 0, 540, 541, 542, 543, 544, 545, 546, 712,
	547, 548, 550, 549, 551, 0, 552, 0, 553, 554,
	555, 0, 0, 0, 0, 0, 556, 557, 559, 0,
	560, 561, 562, 563, 558, 564, 565, 566, 567, 568,
	0, 569, 570, 571, 0, 572, 573, 574, 575, 576,
	713, 577, 0, 578, 579, 586, 587, 588, 580, 581,
	582, 589, 590, 591, 592, 593, 0, 595, 596, 594,
	597, 598, 599, 0, 600, 601, 583, 584, 602, 603,
	0, 604, 605, 606, 607, 608, 609, 610, 714, 0,
	611, 0, 612, 613, 614, 615, 616, 618, 585, 619,
	624, 625, 715, 620, 621, 622, 623, 716, 627, 628,
	0, 629, 630, 0, 626, 617, 0, 631, 632, 633,
	634, 635, 636, 0, 637, 638, 0, 639, 717, 718,
	719, 720, 0, 649, 0, 640, 641, 642, 643, 721,
	644, 722, 0, 645, 646, 647, 648, 0, 650, 651,
	0, 0, 652, 653, 655, 657, 658, 654, 656, 659,
	0, 660, 0, 0, 661, 662, 663, 723, 724, 725,
	0, 665, 664, 666, 667, 668, 726, 669, 670, 1400,
	0, 285, 0, 671, 672, 727, 673, 674, 675, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 291, 292,
	294, 293, 295, 296, 297, 298, 0, 299, 300, 0,
	0, 0, 0, 0, 676, 0, 0, 0, 301, 0,
	302, 303, 0, 304, 305, 306, 307, 308, 309, 310,
	677, 678, 0, 311, 679, 312, 680, 0, 681, 313,
	314, 315, 316, 317, 318, 0, 0, 0, 319, 682,
	683, 684, 0, 320, 321, 685, 0, 0, 0, 322,
	323, 324, 325, 326, 327, 328, 329, 0, 0, 331,
	332, 333, 330, 334, 0, 335, 0, 336, 337, 338,
	339, 340, 341, 0, 342, 343, 344, 0, 345, 346,
	347, 0, 0, 0, 0, 0, 0, 0, 348, 349,
	350, 351, 352, 0, 353, 355, 686, 687, 0, 358,
	354, 356, 0, 359, 357, 360, 0, 361, 362, 363,
	0, 0, 364, 365, 366, 0, 367, 368, 369, 0,
	370, 371, 372, 0, 373, 374, 688, 375, 376, 377,
	379, 381, 378, 380, 382, 383, 384, 385, 689, 690,
	386, 0, 0, 0, 0, 0, 0, 0, 387, 388,
	389, 691, 0, 0, 0, 390, 0, 391, 392, 393,
	0, 394, 0, 0, 395, 396, 397, 692, 693, 398,
	399, 400, 401, 402, 403, 404, 405, 406, 0, 407,
	694, 0, 695, 408, 0, 409, 410, 411, 412, 413,
	414, 1399, 697, 698, 502, 0, 415, 416, 0, 417,
	418, 419, 420, 421, 0, 0, 0, 0, 422, 423,
	424, 0, 0, 503, 425, 699, 700, 0, 701, 0,
	426, 427, 0, 702, 0, 428, 429, 430, 0, 431,
	0, 0, 0, 432, 433, 434, 435, 436, 437, 0,
	438, 440, 439, 0, 441, 703, 0, 442, 443, 0,
	0, 444, 445, 446, 447, 448, 449, 452, 0, 0,
	450, 451, 453, 454, 0, 455, 456, 458, 461, 457,
	459, 460, 462, 475, 463, 464, 465, 466, 467, 468,
	469, 470, 471, 472, 473, 474, 477, 0, 476, 0,
	478, 479, 480, 481, 482, 489, 491, 492, 487, 488,
	490, 493, 494, 496, 484, 485, 486, 0, 495, 483,
	0, 0, 0, 497, 498, 499, 500, 0, 704, 501,
	705, 504, 505, 0, 0, 506, 0, 507, 0, 0,
	509, 510, 511, 0, 0, 512, 513, 706, 0, 514,
	0, 707, 515, 516, 508, 517, 518, 519, 520, 521,
	522, 523, 524, 525, 0, 526, 527, 708, 528, 529,
	530, 709, 531, 532, 533, 710, 534, 711, 535, 536,
	0, 537, 538, 539, 0, 540, 541, 542, 543, 544,
	545, 546, 712, 547, 548, 550, 549, 551, 0, 552,
	0, 553, 554, 555, 0, 0, 0, 0, 0, 556,
	557, 559, 0, 560, 561, 562, 563, 558, 564, 565,
	566, 567, 568, 0, 569, 570, 571, 0, 572, 573,
	574, 575, 576, 713, 577, 0, 578, 579, 586, 587,
	588, 580, 581, 582, 589, 590, 591, 592, 593, 0,
	595, 596, 594, 597, 598, 599, 0, 600, 601, 583,
	584, 602, 603, 0, 604, 605, 606, 607, 608, 609,
	610, 714, 0, 611, 0, 612, 613, 614, 615, 616,
	618, 585, 619, 624, 625, 715, 620, 621, 622, 623,
	716, 627, 628, 0, 629, 630, 0, 626, 617, 0,
	631, 632, 633, 634, 635, 636, 0, 637, 638, 0,
	639, 717, 718, 719, 720, 0, 649, 0, 640, 641,
	642, 643, 721, 644, 722, 0, 645, 646, 647, 648,
	0, 650, 651, 0, 0, 652, 653, 655, 657, 658,
	654, 656, 659, 0, 660, 0, 0, 661, 662, 663,
	723, 724, 725, 0, 665, 664, 666, 667, 668, 726,
	669, 670, 285, 0, 0, 0, 671, 672, 727, 673,
	674, 675, 0, 0, 0, 0, 0, 0, 0, 291,
	292, 294, 293, 295, 296, 297, 298, 1352, 299, 300,
	0, 0, 0, 0, 0, 676, 0, 0, 0, 301,
	0, 302, 303, 0, 304, 305, 306, 307, 308, 309,
	310, 677, 678, 0, 311, 679, 312, 680, 0, 681,
	313, 314, 315, 316, 317, 318, 0, 0, 0, 319,
	682, 683, 684, 0, 320, 321, 685, 0, 0, 0,
	322, 323, 324, 325, 326, 327, 328, 329, 0, 0,
	331, 332, 333, 330, 334, 0, 335, 0, 336, 337,
	338, 339, 340, 341, 0, 342, 343, 344, 0, 345,
	346, 347, 0, 0, 0, 0, 0, 0, 0, 348,
	349, 350, 351, 352, 0, 353, 355, 686, 687, 0,
	358, 354, 356, 0, 359, 357, 360, 0, 361, 362,
	363, 0, 0, 364, 365, 366, 0, 367, 368, 369,
	0, 370, 371, 372, 0, 373, 374, 688, 375, 376,
	377, 379, 381, 378, 380, 382, 383, 384, 385, 689,
	690, 386, 0, 0, 0, 0, 0, 0, 0, 387,
	388, 389, 691, 0, 0, 0, 390, 0, 391, 392,
	393, 0, 394, 0, 0, 395, 396, 397, 692, 693,
	398, 399, 400, 401, 402, 403, 404, 405, 406, 0,
	407, 694, 0, 695, 408, 0, 409, 410, 411, 412,
	413, 414, 696, 697, 698, 502, 0, 415, 416, 0,
	417, 418, 419, 420, 421, 0, 0, 0, 0, 422,
	423, 424, 0, 0, 503, 425, 699, 700, 0, 701,
	0, 426, 427, 0, 702, 0, 428, 429, 430, 0,
	431, 0, 0, 0, 432, 433, 434, 435, 436, 437,
	0, 438, 440, 439, 0, 441, 703, 0, 442, 443,
	0, 0, 444, 445, 446, 447, 448, 449, 452, 0,
	0, 450, 451, 453, 454, 0, 455, 456, 458, 461,
	457, 459, 460, 462, 475, 463, 464, 465, 466, 467,
	468, 469, 470, 471, 472, 473, 474, 477, 0, 476,
	0, 478, 479, 480, 481, 482, 489, 491, 492, 487,
	488, 490, 493, 494, 496, 484, 485, 486, 0, 495,
	483, 0, 0, 0, 497, 498, 499, 500, 0, 704,
	501, 705, 504, 505, 0, 0, 506, 0, 507, 0,
	0, 509, 510, 511, 0, 0, 512, 513, 706, 0,
	514, 0, 707, 515, 516, 508, 517, 518, 519, 520,
	521, 522, 523, 524, 525, 0, 526, 527, 708, 528,
	529, 530, 709, 531, 532, 533, 710, 534, 711, 535,
	536, 0, 537, 538, 539, 0, 540, 541, 542, 543,
	544, 545, 546, 712, 547, 548, 550, 549, 551, 0,
	552, 0, 553, 554, 555, 0, 0, 0, 0, 0,
	556, 557, 559, 0, 560, 561, 562, 563, 558, 564,
	565, 566, 567, 568, 0, 569, 570, 571, 0, 572,
	573, 574, 575, 576, 713, 577, 0, 578, 579, 586,
	587, 588, 580, 581, 582, 589, 590, 591, 592, 593,
	0, 595, 596, 594, 597, 598, 599, 0, 600, 601,
	583, 584, 602, 603, 0, 604, 605, 606, 607, 608,
	609, 610, 714, 0, 611, 0, 612, 613, 614, 615,
	616, 618, 585, 619, 624, 625, 715, 620, 621, 622,
	623, 716, 627, 628, 0, 629, 630, 0, 626, 617,
	0, 631, 632, 633, 634, 635, 636, 0, 637, 638,
	0, 639, 717, 718, 719, 720, 0, 649, 0, 640,
	641, 642, 643, 721, 644, 722, 0, 645, 646, 647,
	648, 0, 650, 651, 0, 0, 652, 653, 655, 657,
	658, 654, 656, 659, 0, 660, 0, 0, 661, 662,
	663, 723, 724, 725, 0, 665, 664, 666, 667, 668,
	726, 669, 670, 830, 0, 285, 0, 671, 672, 727,
	673, 674, 675, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 291, 292, 294, 293, 295, 296, 297, 298,
	0, 299, 300, 0, 0, 0, 0, 0, 676, 0,
	0, 0, 301, 0, 302, 303, 0, 304, 305, 306,
	307, 308, 309, 310, 677, 678, 0, 311, 679, 312,
	680, 0, 681, 313, 314, 315, 316, 317, 318, 0,
	0, 0, 319, 682, 683, 684, 0, 320, 321, 685,
	0, 0, 0, 322, 323, 324, 325, 326, 327, 328,
	329, 0, 0, 331, 332, 333, 330, 334, 0, 335,
	0, 336, 337, 338, 339, 340, 341, 0, 342, 343,
	344, 0, 345, 346, 347, 0, 0, 0, 0, 0,
	0, 0, 348, 349, 350, 351, 352, 0, 353, 355,
	686, 687, 0, 358, 354, 356, 0, 359, 357, 360,
	0, 361, 362, 363, 0, 0, 364, 365, 366, 0,
	367, 368, 369, 0, 370, 371, 372, 0, 373, 374,
	688, 375, 376, 377, 379, 381, 378, 380, 382, 383,
	384, 385, 689, 690, 386, 0, 0, 0, 0, 0,
	0, 0, 387, 388, 389, 691, 0, 0, 0, 390,
	0, 391, 392, 393, 0, 394, 0, 0, 395, 396,
	397, 692, 693, 398, 399, 400, 401, 402, 403, 404,
	405, 406, 0, 407, 694, 0, 695, 408, 0, 409,
	410, 411, 412, 413, 414, 696, 697, 698, 502, 0,
	415, 416, 0, 417, 418, 419, 420, 421, 0, 0,
	0, 0, 422, 423, 424, 0, 0, 503, 425, 699,
	700, 0, 701, 0, 426, 427, 0, 702, 0, 428,
	429, 430, 0, 431, 0, 0, 0, 432, 433, 434,
	435, 436, 437, 0, 438, 440, 439, 0, 441, 703,
	0, 442, 443, 0, 0, 444, 445, 446, 447, 448,
	449, 452, 0, 0, 450, 451, 453, 454, 0, 455,
	456, 458, 461, 457, 459, 460, 462, 475, 463, 464,
	465, 466, 467, 468, 469, 470, 471, 472, 473, 474,
	477, 0, 476, 0, 478, 479, 480, 481, 482, 489,
	491, 492, 487, 488, 490, 493, 494, 496, 484, 485,
	486, 0, 495, 483, 0, 0, 0, 497, 498, 499,
	500, 0, 704, 501, 705, 504, 505, 0, 0, 506,
	0, 507, 0, 0, 509, 510, 511, 0, 0, 512,
	513, 706, 0, 514, 0, 707, 515, 516, 508, 517,
	518, 519, 520, 521, 522, 523, 524, 525, 0, 526,
	527, 708, 528, 529, 530, 709, 531, 532, 533, 710,
	534, 711, 535, 536, 0, 537, 538, 539, 0, 540,
	541, 542, 543, 544, 545, 546, 712, 547, 548, 550,
	549, 551, 0, 552, 0, 553, 554, 555, 0, 0,
	0, 0, 0, 556, 557, 559, 0, 560, 561, 562,
	563, 558, 564, 565, 566, 567, 568, 0, 569, 570,
	571, 0, 572, 573, 574, 575, 576, 713, 577, 0,
	578, 579, 586, 587, 588, 580, 581, 582, 589, 590,
	591, 592, 593, 0, 595, 596, 594, 597, 598, 599,
	0, 600, 601, 583, 584, 602, 603, 0, 604, 605,
	606, 607, 608, 609, 610, 714, 0, 611, 0, 612,
	613, 614, 615, 616, 618, 585, 619, 624, 625, 715,
	620, 621, 622, 623, 716, 627, 628, 0, 629, 630,
	0, 626, 617, 0, 631, 632, 633, 634, 635, 636,
	0, 637, 638, 0, 639, 717, 718, 719, 720, 0,
	649, 0, 640, 641, 642, 643, 721, 644, 722, 0,
	645, 646, 647, 648, 0, 650, 651, 0, 0, 652,
	653, 655, 657, 658, 654, 656, 659, 0, 660, 0,
	0, 661, 662, 663, 723, 724, 725, 0, 665, 664,
	666, 667, 668, 726, 669, 670, 810, 0, 285, 0,
	671, 672, 727, 673, 674, 675, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 291, 292, 294, 293, 295,
	296, 297, 298, 0, 299, 300, 0, 0, 0, 0,
	0, 676, 0, 0, 0, 301, 0, 302, 303, 0,
	304, 305, 306, 307, 308, 309, 310, 677, 678, 0,
	311, 679, 312, 680, 0, 681, 313, 314, 315, 316,
	317, 318, 0, 0, 0, 319, 682, 683, 684, 0,
	320, 806, 685, 0, 0, 0, 322, 323, 324, 325,
	326, 327, 328, 329, 0, 0, 331, 332, 333, 330,
	334, 0, 805, 0, 336, 337, 338, 339, 340, 341,
	0, 342, 343, 344, 0, 345, 346, 347, 0, 0,
	0, 0, 0, 0, 0, 348, 349, 350, 351, 352,
	0, 353, 355, 686, 687, 0, 358, 354, 356, 0,
	359, 357, 360, 0, 361, 362, 363, 0, 0, 364,
	365, 366, 0, 367, 368, 369, 0, 370, 371, 372,
	0, 373, 374, 688, 375, 376, 377, 379, 381, 378,
	380, 382, 383, 384, 385, 689, 690, 386, 0, 0,
	0, 0, 0, 0, 0, 387, 388, 389, 691, 0,
	0, 0, 390, 0, 391, 392, 393, 0, 394, 0,
	0, 395, 396, 397, 692, 693, 398, 399, 400, 401,
	402, 403, 404, 405, 406, 0, 407, 694, 0, 695,
	408, 0, 409, 410, 411, 412, 413, 414, 696, 697,
	698, 502, 0, 415, 416, 0, 417, 418, 419, 420,
	421, 0, 0, 0, 0, 422, 423, 424, 0, 0,
	503, 425, 699, 700, 0, 701, 0, 426, 427, 0,
	702, 0, 428, 429, 430, 0, 431, 0, 0, 0,
	432, 433, 434, 435, 436, 437, 0, 438, 440, 439,
	0, 441, 703, 0, 442, 443, 0, 0, 444, 445,
	446, 447, 448, 811, 452, 0, 0, 450, 451, 453,
	454, 0, 455, 456, 458, 461, 457, 459, 460, 462,
	475, 463, 464, 465, 466, 467, 468, 469, 470, 471,
	472, 473, 474, 477, 0, 820, 0, 478, 479, 480,
	481, 482, 489, 491, 492, 487, 488, 490, 493, 494,
	496, 484, 485, 486, 0, 495, 483, 0, 0, 0,
	497, 498, 499, 500, 0, 704, 501, 705, 504, 505,
	0, 0, 506, 0, 507, 0, 0, 509, 510, 511,
	0, 0, 512, 513, 706, 0, 514, 0, 707, 515,
	516, 508, 517, 518, 519, 520, 521, 522, 523, 524,
	525, 0, 526, 527, 708, 528, 529, 530, 709, 531,
	532, 533, 710, 534, 711, 535, 536, 0, 537, 538,
	539, 0, 540, 541, 542, 543, 544, 545, 546, 712,
	547, 548, 550, 549, 551, 0, 552, 0, 553, 554,
	555, 0, 0, 0, 0, 0, 556, 557, 559, 0,
	560, 561, 562, 563, 558, 564, 565, 566, 567, 568,
	0, 569, 570, 571, 0, 819, 573, 574, 575, 576,
	807, 577, 0, 578, 579, 586, 587, 588, 580, 581,
	582, 818, 590, 591, 592, 593, 0, 595, 596, 594,
	597, 808, 599, 0, 600, 601, 583, 584, 602, 603,
	0, 604, 605, 606, 607, 608, 609, 610, 714, 0,
	611, 0, 612, 613, 614, 615, 616, 618, 585, 619,
	624, 625, 715, 620, 621, 622, 623, 716, 627, 628,
	0, 629, 630, 0, 626, 617, 0, 631, 632, 633,
	634, 635, 636, 0, 637, 638, 0, 639, 816, 718,
	719, 720, 0, 649, 0, 640, 812, 642, 643, 721,
	644, 722, 0, 645, 646, 647, 648, 0, 650, 651,
	0, 0, 652, 653, 655, 657, 658, 654, 656, 659,
	0, 660, 0, 0, 661, 662, 663, 723, 724, 725,
	0, 665, 664, 666, 667, 668, 726, 669, 670, 799,
	0, 285, 0, 671, 672, 727, 673, 674, 675, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 291, 292,
	294, 293, 295, 296, 297, 298, 0, 299, 300, 0,
	0, 0, 0, 0, 676, 0, 0, 0, 301, 0,
	302, 303, 0, 304, 305, 306, 307, 308, 309, 310,
	677, 678, 0, 311, 679, 312, 680, 0, 681, 313,
	314, 315, 316, 317, 318, 0, 0, 0, 319, 682,
	683, 684, 0, 320, 321, 685, 0, 0, 0, 322,
	323, 324, 325, 326, 327, 328, 329, 0, 0, 331,
	332, 333, 330, 334, 0, 335, 0, 336, 337, 338,
	339, 340, 341, 0, 342, 343, 344, 0, 345, 346,
	347, 0, 0, 0, 0, 0, 0, 0, 348, 349,
	350, 351, 352, 0, 353, 355, 686, 687, 0, 358,
	354, 356, 0, 359, 357, 360, 0, 361, 362, 363,
	0, 0, 364, 365, 366, 0, 367, 368, 369, 0,
	370, 371, 372, 0, 373, 374, 688, 375, 376, 377,
	379, 381, 378, 380, 382, 383, 384, 385, 689, 690,
	386, 0, 0, 0, 0, 0, 0, 0, 387, 388,
	389, 691, 0, 0, 0, 390, 0, 391, 392, 393,
	0, 394, 0, 0, 395, 396, 397, 692, 693, 398,
	399, 400, 401, 402, 403, 404, 405, 406, 0, 407,
	694, 0, 695, 408, 0, 409, 410, 411, 412, 413,
	414, 696, 697, 698, 502, 0, 415, 416, 0, 417,
	418, 419, 420, 421, 0, 0, 0, 0, 422, 423,
	424, 0, 0, 503, 425, 699, 700, 0, 701, 0,
	426, 427, 0, 702, 0, 428, 429, 430, 0, 431,
	0, 0, 0, 432, 433, 434, 435, 436, 437, 0,
	438, 440, 439, 0, 441, 703, 0, 442, 443, 0,
	0, 444, 445, 446, 447, 448, 449, 452, 0, 0,
	450, 451, 453, 454, 0, 455, 456, 458, 461, 457,
	459, 460, 462, 475, 463, 464, 465, 466, 467, 468,
	469, 470, 471, 472, 473, 474, 477, 0, 476, 0,
	478, 479, 480, 481, 482, 489, 491, 492, 487, 488,
	490, 493, 494, 496, 484, 485, 486, 0, 495, 483,
	0, 0, 0, 497, 498, 499, 500, 0, 704, 501,
	705, 504, 505, 0, 0, 506, 0, 507, 0, 0,
	509, 510, 511, 0, 0, 512, 513, 706, 0, 514,
	0, 707, 515, 516, 508, 517, 518, 519, 520, 521,
	522, 523, 524, 525, 0, 526, 527, 708, 528, 529,
	530, 709, 531, 532, 533, 710, 534, 711, 535, 536,
	0, 537, 538, 539, 0, 540, 541, 542, 543, 544,
	545, 546, 712, 547, 548, 550, 549, 551, 0, 552,
	0, 553, 554, 555, 0, 0, 0, 0, 0, 556,
	557, 559, 0, 560, 561, 562, 563, 558, 564, 565,
	566, 567, 568, 0, 569, 570, 571, 0, 572, 573,
	574, 575, 576, 713, 577, 0, 578, 579, 800, 587,
	588, 580, 581, 582, 589, 590, 591, 592, 593, 0,
	595, 596, 594, 597, 598, 599, 0, 600, 601, 583,
	584, 602, 603, 0, 604, 605, 606, 607, 608, 609,
	610, 714, 0, 611, 0, 612, 613, 614, 615, 616,
	618, 585, 619, 624, 625, 715, 620, 621, 622, 623,
	716, 627, 628, 0, 629, 630, 0, 626, 617, 0,
	631, 632, 633, 634, 635, 636, 0, 637, 638, 0,
	639, 717, 718, 719, 720, 0, 649, 0, 640, 641,
	642, 643, 721, 644, 722, 0, 645, 646, 647, 648,
	0, 650, 651, 0, 0, 652, 653, 655, 657, 658,
	654, 656, 659, 0, 660, 0, 0, 661, 662, 663,
	723, 724, 725, 0, 665, 664, 666, 667, 668, 726,
	669, 670, 762, 0, 285, 0, 671, 672, 727, 673,
	674, 675, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 291, 292, 294, 293, 295, 296, 297, 298, 0,
	299, 300, 0, 0, 0, 0, 0, 676, 0, 0,
	0, 301, 0, 302, 303, 0, 304, 305, 306, 307,
	308, 309, 310, 677, 678, 0, 311, 679, 312, 680,
	0, 681, 313, 314, 315, 316, 317, 318, 0, 0,
	0, 319, 682, 683, 684, 0, 320, 321, 685, 0,
	0, 0, 322, 323, 324, 325, 326, 327, 328, 329,
	0, 0, 331, 332, 333, 330, 334, 0, 335, 0,
	336, 337, 338, 339, 340, 341, 0, 342, 343, 344,
	0, 345, 346, 347, 0, 0, 0, 0, 0, 0,
	0, 348, 349, 350, 351, 352, 0, 353, 355, 686,
	687, 0, 358, 354, 356, 0, 359, 357, 360, 0,
	361, 362, 363, 0, 0, 364, 365, 366, 0, 367,
	368, 369, 0, 370, 371, 372, 0, 373, 374, 688,
	375, 376, 377, 379, 381, 378, 380, 382, 383, 384,
	385, 689, 690, 386, 0, 0, 0, 0, 0, 0,
	0, 387, 388, 389, 691, 0, 0, 0, 390, 0,
	391, 392, 393, 0, 394, 0, 0, 395, 396, 397,
	692, 693, 398, 399, 400, 401, 402, 403, 404, 405,
	406, 0, 407, 694, 0, 695, 408, 0, 409, 410,
	411, 412, 413, 414, 696, 697, 698, 502, 0, 415,
	416, 0, 417, 418, 419, 420, 421, 0, 0, 0,
	0, 422, 423, 424, 0, 0, 503, 425, 699, 700,
	0, 701, 0, 426, 427, 0, 702, 0, 428, 429,
	430, 0, 431, 0, 0, 0, 432, 433, 434, 435,
	436, 437, 0, 438, 440, 439, 0, 441, 703, 0,
	442, 443, 0, 0, 444, 445, 446, 447, 448, 449,
	452, 0, 0, 450, 451, 453, 454, 0, 455, 456,
	458, 461, 457, 459, 460, 462, 475, 463, 464, 465,
	466, 467, 468, 469, 470, 471, 472, 473, 474, 477,
	0, 476, 0, 478, 479, 480, 481, 482, 489, 491,
	492, 487, 488, 490, 493, 494, 496, 484, 485, 486,
	0, 495, 483, 0, 0, 0, 497, 498, 499, 500,
	0, 704, 501, 705, 504, 505, 0, 0, 506, 0,
	507, 0, 0, 509, 510, 511, 0, 0, 512, 513,
	706, 0, 514, 0, 707, 515, 516, 508, 517, 518,
	519, 520, 521, 522, 523, 524, 525, 0, 526, 527,
	708, 528, 529, 530, 709, 531, 532, 533, 710, 534,
	711, 535, 536, 0, 537, 538, 539, 0, 540, 541,
	542, 543, 544, 545, 546, 712, 547, 548, 550, 549,
	551, 0, 552, 0, 553, 554, 555, 0, 0, 0,
	0, 0, 556, 557, 559, 0, 560, 561, 562, 563,
	558, 564, 565, 566, 567, 568, 0, 569, 570, 571,
	0, 572, 573, 574, 575, 576, 713, 577, 0, 578,
	579, 586, 587, 588, 580, 581, 582, 589, 590, 591,
	592, 593, 0, 595, 596, 594, 597, 598, 599, 0,
	600, 601, 583, 584, 602, 603, 0, 604, 605, 606,
	607, 608, 609, 610, 714, 0, 611, 0, 612, 613,
	614, 615, 616, 618, 585, 619, 624, 625, 715, 620,
	621, 622, 623, 716, 627, 628, 0, 629, 630, 0,
	626, 617, 0, 631, 632, 633, 634, 635, 636, 0,
	637, 638, 0, 639, 717, 718, 719, 720, 0, 649,
	0, 640, 641, 642, 643, 721, 644, 722, 0, 645,
	646, 647, 648, 0, 650, 651, 0, 0, 652, 653,
	655, 657, 658, 654, 656, 659, 0, 660, 0, 0,
	661, 662, 663, 723, 724, 725, 0, 665, 664, 666,
	667, 668, 726, 669, 670, 755, 0, 285, 0, 671,
	672, 727, 673, 674, 675, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 291, 292, 294, 293, 295, 296,
	297, 298, 0, 299, 300, 0, 0, 0, 0, 0,
	676, 0, 0, 0, 301, 0, 302, 303, 0, 304,
	305, 306, 307, 308, 309, 310, 677, 678, 0, 311,
	679, 312, 680, 0, 681, 313, 314, 315, 316, 317,
	318, 0, 0, 0, 319, 682, 683, 684, 0, 320,
	321, 685, 0, 0, 0, 322, 323, 324, 325, 326,
	327, 328, 329, 0, 0, 331, 332, 333, 330, 334,
	0, 335, 0, 336, 337, 338, 339, 340, 341, 0,
	342, 343, 344, 0, 345, 346, 347, 0, 0, 0,
	0, 0, 0, 0, 348, 349, 350, 351, 352, 0,
	353, 355, 686, 687, 0, 358, 354, 356, 0, 359,
	357, 360, 0, 361, 362, 363, 0, 0, 364, 365,
	366, 0, 367, 368, 369, 0, 370, 371, 372, 0,
	373, 374, 688, 375, 376, 377, 379, 381, 378, 380,
	382, 383, 384, 385, 689, 690, 386, 0, 0, 0,
	0, 0, 0, 0, 387, 388, 389, 691, 0, 0,
	0, 390, 0, 391, 392, 393, 0, 394, 0, 0,
	395, 396, 397, 692, 693, 398, 399, 400, 401, 402,
	403, 404, 405, 406, 0, 407, 694, 0, 695, 408,
	0, 409, 410, 411, 412, 413, 414, 696, 697, 698,
	502, 0, 415, 416, 0, 417, 418, 419, 420, 421,
	0, 0, 0, 0, 422, 423, 424, 0, 0, 503,
	425, 699, 700, 0, 701, 0, 426, 427, 0, 702,
	0, 428, 429, 430, 0, 431, 0, 0, 0, 432,
	433, 434, 435, 436, 437, 0, 438, 440, 439, 0,
	441, 703, 0, 442, 443, 0, 0, 444, 445, 446,
	447, 448, 449, 452, 0, 0, 450, 451, 453, 454,
	0, 455, 456, 458, 461, 457, 459, 460, 462, 475,
	463, 464, 465, 466, 467, 468, 469, 470, 471, 472,
	473, 474, 477, 0, 476, 0, 478, 479, 480, 481,
	482, 489, 491, 492, 487, 488, 490, 493, 494, 496,
	484, 485, 486, 0, 495, 483, 0, 0, 0, 497,
	498, 499, 500, 0, 704, 501, 705, 504, 505, 0,
	0, 506, 0, 507, 0, 0, 509, 510, 511, 0,
	0, 512, 513, 706, 0, 514, 0, 707, 515, 516,
	508, 517, 518, 519, 520, 521, 522, 523, 524, 525,
	0, 526, 527, 708, 528, 529, 530, 709, 531, 532,
	533, 710, 534, 711, 535, 536, 0, 537, 538, 539,
	0, 540, 541, 542, 543, 544, 545, 546, 712, 547,
	548, 550, 549, 551, 0, 552, 0, 553, 554, 555,
	0, 0, 0, 0, 0, 556, 557, 559, 0, 560,
	561, 562, 563, 558, 564, 565, 566, 567, 568, 0,
	569, 570, 571, 0, 572, 573, 574, 575, 576, 713,
	577, 0, 578, 579, 586, 587, 588, 580, 581, 582,
	589, 590, 591, 592, 593, 0, 595, 596, 594, 597,
	598, 599, 0, 600, 601, 583, 584, 602, 603, 0,
	604, 605, 606, 607, 608, 609, 610, 714, 0, 611,
	0, 612, 613, 614, 615, 616, 618, 585, 619, 624,
	625, 715, 620, 621, 622, 623, 716, 627, 628, 0,
	629, 630, 0, 626, 617, 0, 631, 632, 633, 634,
	635, 636, 0, 637, 638, 0, 639, 717, 718, 719,
	720, 0, 649, 0, 640, 641, 642, 643, 721, 644,
	722, 0, 645, 646, 647, 648, 0, 650, 651, 0,
	0, 652, 653, 655, 657, 658, 654, 656, 659, 0,
	660, 0, 0, 661, 662, 663, 723, 724, 725, 0,
	665, 664, 666, 667, 668, 726, 669, 670, 733, 0,
	285, 0, 671, 672, 727, 673, 674, 675, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 291, 292, 294,
	293, 295, 296, 297, 298, 0, 299, 300, 0, 0,
	0, 0, 0, 676, 0, 0, 0, 301, 0, 302,
	303, 0, 304, 305, 306, 307, 308, 309, 310, 677,
	678, 0, 311, 679, 312, 680, 0, 681, 313, 314,
	315, 316, 317, 318, 0, 0, 0, 319, 682, 683,
	684, 0, 320, 321, 685, 0, 0, 0, 322, 323,
	324, 325, 326, 327, 328, 329, 0, 0, 331, 332,
	333, 330, 334, 0, 335, 0, 336, 337, 338, 339,
	340, 341, 0, 342, 343, 344, 0, 345, 346, 347,
	0, 0, 0, 0, 0, 0, 0, 348, 349, 350,
	351, 352, 0, 353, 355, 686, 687, 0, 358, 354,
	356, 0, 359, 357, 360, 0, 361, 362, 363, 0,
	0, 364, 365, 366, 0, 367, 368, 369, 0, 370,
	371, 372, 0, 373, 374, 688, 375, 376, 377, 379,
	381, 378, 380, 382, 383, 384, 385, 689, 690, 386,
	0, 0, 0, 0, 0, 0, 0, 387, 388, 389,
	691, 0, 0, 0, 390, 0, 391, 392, 393, 0,
	394, 0, 0, 395, 396, 397, 692, 693, 398, 399,
	400, 401, 402, 403, 404, 405, 406, 0, 407, 694,
	0, 695, 408, 0, 409, 410, 411, 412, 413, 414,
	696, 697, 698, 502, 0, 415, 416, 0, 417, 418,
	419, 420, 421, 0, 0, 0, 0, 422, 423, 424,
	0, 0, 503, 425, 699, 700, 0, 701, 0, 426,
	427, 0, 702, 0, 428, 429, 430, 0, 431, 0,
	0, 0, 432, 433, 434, 435, 436, 437, 0, 438,
	440, 439, 0, 441, 703, 0, 442, 443, 0, 0,
	444, 445, 446, 447, 448, 449, 452, 0, 0, 450,
	451, 453, 454, 0, 455, 456, 458, 461, 457, 459,
	460, 462, 475, 463, 464, 465, 466, 467, 468, 469,
	470, 471, 472, 473, 474, 477, 0, 476, 0, 478,
	479, 480, 481, 482, 489, 491, 492, 487, 488, 490,
	493, 494, 496, 484, 485, 486, 0, 495, 483, 0,
	0, 0, 497, 498, 499, 500, 0, 704, 501, 705,
	504, 505, 0, 0, 506, 0, 507, 0, 0, 509,
	510, 511, 0, 0, 512, 513, 706, 0, 514, 0,
	707, 515, 516, 508, 517, 518, 519, 520, 521, 522,
	523, 524, 525, 0, 526, 527, 708, 528, 529, 530,
	709, 531, 532, 533, 710, 534, 711, 535, 536, 0,
	537, 538, 539, 0, 540, 541, 542, 543, 544, 545,
	546, 712, 547, 548, 550, 549, 551, 0, 552, 0,
	553, 554, 555, 0, 0, 0, 0, 0, 556, 557,
	559, 0, 560, 561, 562, 563, 558, 564, 565, 566,
	567, 568, 0, 569, 570, 571, 0, 572, 573, 574,
	575, 576, 713, 577, 0, 578, 579, 586, 587, 588,
	580, 581, 582, 589, 590, 591, 592, 593, 0, 595,
	596, 594, 597, 598, 599, 0, 600, 601, 583, 584,
	602, 603, 0, 604, 605, 606, 607, 608, 609, 610,
	714, 0, 611, 0, 612, 613, 614, 615, 616, 618,
	585, 619, 624, 625, 715, 620, 621, 622, 623, 716,
	627, 628, 0, 629, 630, 0, 626, 617, 0, 631,
	632, 633, 634, 635, 636, 0, 637, 638, 0, 639,
	717, 718, 719, 720, 0, 649, 0, 640, 641, 642,
	643, 721, 644, 722, 0, 645, 646, 647, 648, 0,
	650, 651, 0, 0, 652, 653, 655, 657, 658, 654,
	656, 659, 0, 660, 0, 0, 661, 662, 663, 723,
	724, 725, 0, 665, 664, 666, 667, 668, 726, 669,
	670, 285, 0, 0, 0, 671, 672, 727, 673, 674,
	675, 0, 0, 0, 0, 0, 0, 0, 291, 292,
	294, 293, 295, 296, 297, 298, 0, 299, 300, 0,
	0, 0, 0, 0, 676, 0, 0, 0, 301, 0,
	302, 303, 0, 304, 305, 306, 307, 308, 309, 310,
	677, 678, 0, 311, 679, 312, 680, 0, 681, 313,
	314, 315, 316, 317, 318, 0, 0, 0, 319, 682,
	683, 684, 0, 320, 321, 685, 0, 0, 0, 322,
	323, 324, 325, 326, 327, 328, 329, 0, 0, 331,
	332, 333, 330, 334, 0, 335, 0, 336, 337, 338,
	339, 340, 341, 0, 342, 343, 344, 0, 345, 346,
	347, 0, 0, 0, 0, 0, 0, 0, 348, 349,
	350, 351, 352, 0, 353, 355, 686, 687, 0, 358,
	354, 356, 0, 359, 357, 360, 0, 361, 362, 363,
	0, 0, 364, 365, 366, 0, 367, 368, 369, 0,
	370, 371, 372, 0, 373, 374, 688, 375, 376, 377,
	379, 381, 378, 380, 382, 383, 384, 385, 689, 690,
	386, 0, 0, 0, 0, 0, 0, 0, 387, 388,
	389, 691, 0, 0, 0, 390, 0, 391, 392, 393,
	0, 394, 0, 0, 395, 396, 397, 692, 693, 398,
	399, 400, 401, 402, 403, 404, 405, 406, 0, 407,
	694, 0, 695, 408, 0, 409, 410, 411, 412, 413,
	414, 696, 697, 698, 502, 0, 415, 416, 0, 417,
	418, 419, 420, 421, 0, 0, 0, 0, 422, 423,
	424, 0, 0, 503, 425, 699, 700, 0, 701, 0,
	426, 427, 0, 702, 0, 428, 429, 430, 0, 431,
	0, 0, 0, 432, 433, 434, 435, 436, 437, 0,
	438, 440, 439, 0, 441, 703, 0, 442, 443, 0,
	0, 444, 445, 446, 447, 448, 449, 452, 0, 0,
	450, 451, 453, 454, 0, 455, 456, 458, 461, 457,
	459, 460, 462, 475, 463, 464, 465, 466, 467, 468,
	469, 470, 471, 472, 473, 474, 477, 0, 476, 0,
	478, 479, 480, 481, 482, 489, 491, 492, 487, 488,
	490, 493, 494, 496, 484, 485, 486, 0, 495, 483,
	0, 0, 0, 497, 498, 499, 500, 0, 704, 501,
	705, 504, 505, 0, 0, 506, 0, 507, 0, 0,
	509, 510, 511, 0, 0, 512, 513, 706, 0, 514,
	0, 707, 515, 516, 508, 517, 518, 519, 520, 521,
	522, 523, 524, 525, 0, 526, 527, 708, 528, 529,
	530, 709, 531, 532, 533, 710, 534, 711, 535, 536,
	0, 537, 538, 539, 0, 540, 541, 542, 543, 544,
	545, 546, 712, 547, 548, 550, 549, 551, 0, 552,
	0, 553, 554, 555, 0, 0, 0, 0, 0, 556,
	557, 559, 0, 560, 561, 562, 563, 558, 564, 565,
	566, 567, 568, 0, 569, 570, 571, 0, 572, 573,
	574, 575, 576, 713, 577, 0, 578, 579, 586, 587,
	588, 580, 581, 582, 589, 590, 591, 592, 593, 0,
	595, 596, 594, 597, 598, 599, 0, 600, 601, 583,
	584, 602, 603, 0, 604, 605, 606, 607, 608, 609,
	610, 714, 0, 611, 0, 612, 613, 614, 615, 616,
	618, 585, 619, 624, 625, 715, 620, 621, 622, 623,
	716, 627, 628, 0, 629, 630, 0, 626, 617, 0,
	631, 632, 633, 634, 635, 636, 0, 637, 638, 0,
	639, 717, 718, 719, 720, 0, 649, 0, 640, 641,
	642, 643, 721, 644, 722, 0, 645, 646, 647, 648,
	0, 650, 651, 0, 0, 652, 653, 655, 657, 658,
	654, 656, 659, 0, 660, 0, 0, 661, 662, 663,
	723, 724, 725, 0, 665, 664, 666, 667, 668, 726,
	669, 670, 285, 0, 0, 0, 671, 672, 727, 673,
	674, 675, 0, 0, 0, 0, 0, 0, 0, 291,
	292, 294, 293, 295, 296, 297, 298, 0, 299, 300,
	0, 0, 0, 0, 0, 676, 0, 0, 0, 301,
	0, 302, 303, 0, 304, 305, 306, 307, 308, 309,
	310, 677, 678, 0, 311, 679, 312, 680, 0, 681,
	313, 314, 315, 316, 317, 318, 0, 0, 0, 319,
	682, 683, 684, 0, 320, 321, 685, 0, 0, 0,
	322, 323, 324, 325, 326, 327, 328, 329, 0, 0,
	331, 332, 333, 330, 334, 0, 335, 0, 336, 337,
	338, 339, 340, 341, 0, 342, 343, 344, 0, 345,
	346, 347, 0, 0, 0, 0, 0, 0, 0, 348,
	349, 350, 351, 352, 0, 353, 355, 686, 687, 0,
	358, 354, 356, 0, 359, 357, 360, 0, 361, 362,
	363, 0, 0, 364, 365, 366, 0, 367, 368, 369,
	0, 370, 371, 372, 0, 373, 374, 688, 375, 376,
	377, 379, 381, 378, 380, 382, 383, 384, 385, 689,
	690, 386, 0, 0, 0, 0, 0, 0, 0, 387,
	388, 389, 691, 0, 0, 0, 390, 0, 391, 392,
	393, 0, 394, 0, 0, 395, 396, 397, 692, 693,
	398, 399, 400, 401, 402, 403, 404, 405, 406, 0,
	407, 694, 0, 695, 408, 0, 409, 410, 411, 412,
	413, 414, 3841, 697, 698, 502, 0, 415, 416, 0,
	417, 418, 419, 420, 421, 0, 0, 0, 0, 422,
	423, 424, 0, 0, 503, 425, 699, 700, 0, 701,
	0, 426, 427, 0, 702, 0, 428, 429, 430, 0,
	431, 0, 0, 0, 432, 433, 434, 435, 436, 437,
	0, 438, 440, 439, 0, 441, 703, 0, 442, 443,
	0, 0, 444, 445, 446, 447, 448, 449, 452, 0,
	0, 450, 451, 453, 454, 0, 455, 456, 458, 461,
	457, 459, 460, 462, 475, 463, 464, 465, 466, 467,
	468, 469, 470, 471, 472, 473, 474, 477, 0, 476,
	0, 478, 479, 480, 481, 482, 489, 491, 492, 487,
	488, 490, 493, 494, 496, 484, 485, 486, 0, 495,
	483, 0, 0, 0, 497, 498, 499, 500, 0, 704,
	501, 705, 504, 505, 0, 0, 506, 0, 507, 0,
	0, 509, 510, 511, 0, 0, 512, 513, 706, 0,
	514, 0, 707, 515, 516, 508, 517, 518, 519, 520,
	521, 522, 523, 524, 525, 0, 526, 527, 708, 528,
	529, 530, 709, 531, 532, 533, 710, 534, 711, 535,
	536, 0, 537, 538, 539, 0, 540, 541, 542, 543,
	544, 545, 546, 712, 547, 548, 550, 549, 551, 0,
	552, 0, 553, 554, 555, 0, 0, 0, 0, 0,
	556, 557, 559, 0, 560, 561, 562, 563, 558, 564,
	565, 566, 567, 568, 0, 569, 570, 571, 0, 572,
	573, 574, 575, 576, 713, 577, 0, 578, 579, 586,
	587, 588, 580, 581, 582, 589, 590, 591, 592, 593,
	0, 595, 596, 594, 597, 598, 599, 0, 600, 601,
	583, 584, 602, 603, 0, 604, 605, 606, 607, 608,
	609, 610, 714, 0, 611, 0, 612, 613, 614, 615,
	616, 618, 585, 619, 624, 625, 715, 620, 621, 622,
	623, 716, 627, 628, 0, 629, 630, 0, 626, 617,
	0, 631, 632, 633, 634, 635, 636, 0, 637, 638,
	0, 639, 717, 718, 719, 720, 0, 649, 0, 640,
	641, 642, 643, 721, 644, 722, 0, 645, 646, 647,
	648, 0, 650, 651, 0, 0, 652, 653, 655, 657,
	658, 654, 656, 659, 0, 660, 0, 0, 661, 662,
	663, 723, 724, 725, 0, 665, 664, 666, 667, 668,
	726, 669, 670, 285, 0, 0, 0, 671, 672, 727,
	673, 674, 675, 0, 0, 0, 0, 0, 0, 0,
	291, 292, 294, 293, 295, 296, 297, 298, 0, 299,
	300, 0, 0, 0, 0, 0, 676, 0, 0, 0,
	301, 0, 302, 303, 0, 304, 305, 306, 307, 308,
	309, 310, 677, 678, 0, 311, 679, 312, 680, 0,
	681, 313, 314, 315, 316, 317, 318, 0, 0, 0,
	319, 682, 683, 684, 0, 320, 321, 685, 0, 0,
	0, 322, 323, 324, 325, 326, 327, 328, 329, 0,
	0, 331, 332, 333, 330, 334, 0, 335, 0, 336,
	337, 338, 339, 340, 341, 0, 342, 343, 344, 0,
	345, 346, 347, 0, 0, 0, 0, 0, 0, 0,
	348, 349, 350, 351, 352, 0, 353, 355, 686, 687,
	0, 358, 354, 356, 0, 359, 357, 360, 0, 361,
	362, 363, 0, 0, 364, 365, 366, 0, 367, 368,
	369, 0, 370, 371, 372, 0, 373, 374, 688, 375,
	376, 377, 379, 381, 378, 380, 382, 383, 384, 385,
	689, 690, 386, 0, 0, 0, 0, 0, 0, 0,
	387, 388, 389, 691, 0, 0, 0, 390, 0, 391,
	392, 393, 0, 394, 0, 0, 395, 396, 397, 692,
	693, 398, 399, 400, 401, 402, 403, 404, 405, 406,
	0, 407, 694, 0, 695, 408, 0, 409, 410, 411,
	412, 413, 414, 696, 697, 698, 502, 0, 415, 416,
	0, 417, 418, 419, 420, 421, 0, 0, 0, 0,
	422, 423, 424, 0, 0, 503, 425, 699, 700, 0,
	701, 0, 426, 427, 0, 702, 0, 428, 429, 430,
	0, 431, 0, 0, 0, 432, 433, 434, 435, 436,
	437, 0, 438, 440, 439, 0, 441, 703, 0, 442,
	443, 0, 0, 444, 445, 446, 447, 448, 449, 452,
	0, 0, 450, 451, 453, 454, 0, 455, 456, 458,
	461, 457, 459, 460, 462, 475, 463, 464, 465, 466,
	467, 468, 469, 470, 471, 472, 473, 474, 477, 0,
	476, 0, 478, 479, 480, 481, 482, 489, 491, 492,
	487, 488, 490, 493, 494, 496, 484, 485, 486, 0,
	495, 483, 0, 0, 0, 497, 498, 499, 500, 0,
	704, 501, 705, 504, 505, 0, 0, 506, 0, 507,
	0, 0, 509, 510, 511, 0, 0, 512, 513, 706,
	0, 514, 0, 707, 515, 516, 508, 517, 518, 519,
	520, 521, 522, 523, 524, 525, 0, 526, 527, 708,
	528, 529, 530, 709, 531, 532, 533, 710, 534, 711,
	535, 536, 0, 537, 538, 539, 0, 540, 541, 542,
	543, 544, 545, 546, 712, 547, 548, 550, 549, 551,
	0, 552, 0, 553, 554, 555, 0, 0, 0, 0,
	0, 556, 557, 559, 0, 560, 561, 562, 563, 558,
	564, 565, 566, 567, 568, 0, 569, 570, 571, 0,
	819, 573, 574, 575, 576, 713, 577, 0, 578, 579,
	586, 587, 588, 580, 581, 582, 818, 590, 591, 592,
	593, 0, 595, 596, 594, 597, 598, 599, 0, 600,
	601, 583, 584, 602, 603, 0, 604, 605, 606, 607,
	608, 609, 610, 714, 0, 611, 0, 612, 613, 614,
	615, 616, 618, 585, 619, 624, 625, 715, 620, 621,
	622, 623, 716, 627, 628, 0, 629, 630, 0, 626,
	617, 0, 631, 632, 633, 634, 635, 636, 0, 637,
	638, 0, 639, 816, 718, 719, 720, 0, 649, 0,
	640, 641, 642, 643, 721, 644, 722, 0, 645, 646,
	647, 648, 0, 650, 651, 0, 0, 652, 653, 655,
	657, 658, 654, 656, 659, 0, 660, 0, 0, 661,
	662, 663, 723, 724, 725, 0, 665, 664, 666, 667,
	668, 726, 669, 670, 285, 0, 0, 0, 671, 672,
	727, 673, 674, 675, 0, 0, 0, 0, 0, 0,
	0, 291, 292, 294, 293, 295, 296, 297, 298, 0,
	299, 300, 0, 0, 0, 0, 0, 676, 0, 0,
	0, 301, 0, 302, 303, 0, 304, 305, 306, 307,
	308, 309, 310, 677, 678, 0, 311, 679, 312, 680,
	0, 681, 313, 314, 315, 316, 317, 318, 0, 0,
	0, 319, 682, 683, 684, 0, 320, 321, 685, 0,
	0, 0, 322, 323, 324, 325, 326, 327, 328, 329,
	0, 0, 331, 332, 333, 330, 334, 0, 335, 0,
	336, 337, 338, 339, 340, 341, 0, 342, 343, 344,
	0, 345, 346, 347, 0, 0, 0, 0, 0, 0,
	0, 348, 349, 350, 351, 352, 0, 353, 355, 686,
	687, 0, 358, 354, 356, 0, 359, 357, 360, 0,
	361, 362, 363, 0, 0, 364, 365, 366, 0, 367,
	368, 369, 0, 370, 371, 372, 0, 373, 374, 688,
	375, 376, 377, 379, 381, 378, 380, 382, 383, 384,
	385, 689, 690, 386, 0, 0, 0, 0, 0, 0,
	0, 387, 388, 389, 691, 0, 0, 0, 390, 0,
	391, 392, 393, 0, 394, 0, 0, 395, 396, 397,
	692, 693, 398, 399, 400, 401, 402, 403, 404, 405,
	406, 0, 407, 694, 0, 695, 408, 0, 409, 410,
	411, 412, 413, 414, 3751, 697, 698, 502, 0, 415,
	416, 0, 417, 418, 419, 420, 421, 0, 0, 0,
	0, 422, 423, 424, 0, 0, 503, 425, 699, 700,
	0, 701, 0, 426, 427, 0, 702, 0, 428, 429,
	430, 0, 431, 0, 0, 0, 432, 433, 434, 435,
	436, 437, 0, 438, 440, 439, 0, 441, 703, 0,
	442, 443, 0, 0, 444, 445, 446, 447, 448, 449,
	452, 0, 0, 450, 451, 453, 454, 0, 455, 456,
	458, 461, 457, 459, 460, 462, 475, 463, 464, 465,
	466, 467, 468, 469, 470, 471, 472, 473, 474, 477,
	0, 476, 0, 478, 479, 480, 481, 482, 489, 491,
	492, 487, 488, 490, 493, 494, 496, 484, 485, 486,
	0, 495, 483, 0, 0, 0, 497, 498, 499, 500,
	0, 704, 501, 705, 504, 505, 0, 0, 506, 0,
	507, 0, 0, 509, 510, 511, 0, 0, 512, 513,
	706, 0, 514, 0, 707, 515, 516, 508, 517, 518,
	519, 520, 521, 522, 523, 524, 525, 0, 526, 527,
	708, 528, 529, 530, 709, 531, 532, 533, 710, 534,
	711, 535, 536, 0, 537, 538, 539, 0, 540, 541,
	542, 543, 544, 545, 546, 712, 547, 548, 550, 549,
	551, 0, 552, 0, 553, 554, 555, 0, 0, 0,
	0, 0, 556, 557, 559, 0, 560, 561, 562, 563,
	558, 564, 565, 566, 567, 568, 0, 569, 570, 571,
	0, 572, 573, 574, 575, 576, 713, 577, 0, 578,
	579, 586, 587, 588, 580, 581, 582, 589, 590, 591,
	592, 593, 0, 595, 596, 594, 597, 598, 599, 0,
	600, 601, 583, 584, 602, 603, 0, 604, 605, 606,
	607, 608, 609, 610, 714, 0, 611, 0, 612, 613,
	614, 615, 616, 618, 585, 619, 624, 625, 715, 620,
	621, 622, 623, 716, 627, 628, 0, 629, 630, 0,
	626, 617, 0, 631, 632, 633, 634, 635, 636, 0,
	637, 638, 0, 639, 717, 718, 719, 720, 0, 649,
	0, 640, 641, 642, 643, 721, 644, 722, 0, 645,
	646, 647, 648, 0, 650, 651, 0, 0, 652, 653,
	655, 657, 658, 654, 656, 659, 0, 660, 0, 0,
	661, 662, 663, 723, 724, 725, 0, 665, 664, 666,
	667, 668, 726, 669, 670, 285, 0, 0, 0, 671,
	672, 727, 673, 674, 675, 0, 0, 0, 0, 0,
	0, 0, 291, 292, 294, 293, 295, 296, 297, 298,
	0, 299, 300, 0, 0, 0, 0, 0, 676, 0,
	0, 0, 301, 0, 302, 303, 0, 304, 305, 306,
	307, 308, 309, 310, 677, 678, 0, 311, 679, 312,
	680, 0, 681, 313, 314, 315, 316, 317, 318, 0,
	0, 0, 319, 682, 683, 684, 0, 320, 321, 685,
	0, 0, 0, 322, 323, 324, 325, 326, 327, 328,
	329, 0, 0, 331, 332, 333, 330, 334, 0, 335,
	0, 336, 337, 338, 339, 340, 341, 0, 342, 343,
	344, 0, 345, 346, 347, 0, 0, 0, 0, 0,
	0, 0, 348, 349, 350, 351, 352, 0, 353, 355,
	686, 687, 0, 358, 354, 356, 0, 359, 357, 360,
	0, 361, 362, 363, 0, 0, 364, 365, 366, 0,
	367, 368, 369, 0, 370, 371, 372, 0, 373, 374,
	688, 375, 376, 377, 379, 381, 378, 380, 382, 383,
	384, 385, 689, 690, 386, 0, 0, 0, 0, 0,
	0, 0, 387, 388, 389, 691, 0, 0, 0, 390,
	0, 391, 392, 393, 0, 394, 0, 0, 395, 396,
	397, 692, 693, 398, 399, 400, 401, 402, 403, 404,
	405, 406, 0, 407, 694, 0, 695, 408, 0, 409,
	410, 411, 412, 413, 414, 3727, 697, 698, 502, 0,
	415, 416, 0, 417, 418, 419, 420, 421, 0, 0,
	0, 0, 422, 423, 424, 0, 0, 503, 425, 699,
	700, 0, 701, 0, 426, 427, 0, 702, 0, 428,
	429, 430, 0, 431, 0, 0, 0, 432, 433, 434,
	435, 436, 437, 0, 438, 440, 439, 0, 441, 703,
	0, 442, 443, 0, 0, 444, 445, 446, 447, 448,
	449, 452, 0, 0, 450, 451, 453, 454, 0, 455,
	456, 458, 461, 457, 459, 460, 462, 475, 463, 464,
	465, 466, 467, 468, 469, 470, 471, 472, 473, 474,
	477, 0, 476, 0, 478, 479, 480, 481, 482, 489,
	491, 492, 487, 488, 490, 493, 494, 496, 484, 485,
	486, 0, 495, 483, 0, 0, 0, 497, 498, 499,
	500, 0, 704, 501, 705, 504, 505, 0, 0, 506,
	0, 507, 0, 0, 509, 510, 511, 0, 0, 512,
	513, 706, 0, 514, 0, 707, 515, 516, 508, 517,
	518, 519, 520, 521, 522, 523, 524, 525, 0, 526,
	527, 708, 528, 529, 530, 709, 531, 532, 533, 710,
	534, 711, 535, 536, 0, 537, 538, 539, 0, 540,
	541, 542, 543, 544, 545, 546, 712, 547, 548, 550,
	549, 551, 0, 552, 0, 553, 554, 555, 0, 0,
	0, 0, 0, 556, 557, 559, 0, 560, 561, 562,
	563, 558, 564, 565, 566, 567, 568, 0, 569, 570,
	571, 0, 572, 573, 574, 575, 576, 713, 577, 0,
	578, 579, 586, 587, 588, 580, 581, 582, 589, 590,
	591, 592, 593, 0, 595, 596, 594, 597, 598, 599,
	0, 600, 601, 583, 584, 602, 603, 0, 604, 605,
	606, 607, 608, 609, 610, 714, 0, 611, 0, 612,
	613, 614, 615, 616, 618, 585, 619, 624, 625, 715,
	620, 621, 622, 623, 716, 627, 628, 0, 629, 630,
	0, 626, 617, 0, 631, 632, 633, 634, 635, 636,
	0, 637, 638, 0, 639, 717, 718, 719, 720, 0,
	649, 0, 640, 641, 642, 643, 721, 644, 722, 0,
	645, 646, 647, 648, 0, 650, 651, 0, 0, 652,
	653, 655, 657, 658, 654, 656, 659, 0, 660, 0,
	0, 661, 662, 663, 723, 724, 725, 0, 665, 664,
	666, 667, 668, 726, 669, 670, 285, 0, 0, 0,
	671, 672, 727, 673, 674, 675, 0, 0, 0, 0,
	0, 0, 0, 291, 292, 294, 293, 295, 296, 297,
	298, 0, 299, 300, 0, 0, 0, 0, 0, 676,
	0, 0, 0, 301, 0, 302, 303, 0, 304, 305,
	306, 307, 308, 309, 310, 677, 678, 0, 311, 679,
	312, 680, 0, 681, 313, 314, 315, 316, 317, 318,
	0, 0, 0, 319, 682, 683, 684, 0, 320, 321,
	685, 0, 0, 0, 322, 323, 324, 325, 326, 327,
	328, 329, 0, 0, 331, 332, 333, 330, 334, 0,
	335, 0, 336, 337, 338, 339, 340, 341, 0, 342,
	343, 344, 0, 345, 346, 347, 0, 0, 0, 0,
	0, 0, 0, 348, 349, 350, 351, 352, 0, 353,
	355, 686, 687, 0, 358, 354, 356, 0, 359, 357,
	360, 0, 361, 362, 363, 0, 0, 364, 365, 366,
	0, 367, 368, 369, 0, 370, 371, 372, 0, 373,
	374, 688, 375, 376, 377, 379, 381, 378, 380, 382,
	383, 384, 385, 689, 690, 386, 0, 0, 0, 0,
	0, 0, 0, 387, 388, 389, 691, 0, 0, 0,
	390, 0, 391, 392, 393, 0, 394, 0, 0, 395,
	396, 397, 692, 693, 398, 399, 400, 401, 402, 403,
	404, 405, 406, 0, 407, 694, 0, 695, 408, 0,
	409, 410, 411, 412, 413, 414, 3724, 697, 698, 502,
	0, 415, 416, 0, 417, 418, 419, 420, 421, 0,
	0, 0, 0, 422, 423, 424, 0, 0, 503, 425,
	699, 700, 0, 701, 0, 426, 427, 0, 702, 0,
	428, 429, 430, 0, 431, 0, 0, 0, 432, 433,
	434, 435, 436, 437, 0, 438, 440, 439, 0, 441,
	703, 0, 442, 443, 0, 0, 444, 445, 446, 447,
	448, 449, 452, 0, 0, 450, 451, 453, 454, 0,
	455, 456, 458, 461, 457, 459, 460, 462, 475, 463,
	464, 465, 466, 467, 468, 469, 470, 471, 472, 473,
	474, 477, 0, 476, 0, 478, 479, 480, 481, 482,
	489, 491, 492, 487, 488, 490, 493, 494, 496, 484,
	485, 486, 0, 495, 483, 0, 0, 0, 497, 498,
	499, 500, 0, 704, 501, 705, 504, 505, 0, 0,
	506, 0, 507, 0, 0, 509, 510, 511, 0, 0,
	512, 513, 706, 0, 514, 0, 707, 515, 516, 508,
	517, 518, 519, 520, 521, 522, 523, 524, 525, 0,
	526, 527, 708, 528, 529, 530, 709, 531, 532, 533,
	710, 534, 711, 535, 536, 0, 537, 538, 539, 0,
	540, 541, 542, 543, 544, 545, 546, 712, 547, 548,
	550, 549, 551, 0, 552, 0, 553, 554, 555, 0,
	0, 0, 0, 0, 556, 557, 559, 0, 560, 561,
	562, 563, 558, 564, 565, 566, 567, 568, 0, 569,
	570, 571, 0, 572, 573, 574, 575, 576, 713, 577,
	0, 578, 579, 586, 587, 588, 580, 581, 582, 589,
	590, 591, 592, 593, 0, 595, 596, 594, 597, 598,
	599, 0, 600, 601, 583, 584, 602, 603, 0, 604,
	605, 606, 607, 608, 609, 610, 714, 0, 611, 0,
	612, 613, 614, 615, 616, 618, 585, 619, 624, 625,
	715, 620, 621, 622, 623, 716, 627, 628, 0, 629,
	630, 0, 626, 617, 0, 631, 632, 633, 634, 635,
	636, 0, 637, 638, 0, 639, 717, 718, 719, 720,
	0, 649, 0, 640, 641, 642, 643, 721, 644, 722,
	0, 645, 646, 647, 648, 0, 650, 651, 0, 0,
	652, 653, 655, 657, 658, 654, 656, 659, 0, 660,
	0, 0, 661, 662, 663, 723, 724, 725, 0, 665,
	664, 666, 667, 668, 726, 669, 670, 285, 0, 0,
	0, 671, 672, 727, 673, 674, 675, 0, 0, 0,
	0, 0, 0, 0, 291, 292, 294, 293, 295, 296,
	297, 298, 0, 299, 300, 0, 0, 0, 0, 0,
	676, 0, 0, 0, 301, 0, 302, 303, 0, 304,
	305, 306, 307, 308, 309, 310, 677, 678, 0, 311,
	679, 312, 680, 0, 681, 313, 314, 315, 316, 317,
	318, 0, 0, 0, 319, 682, 683, 684, 0, 320,
	321, 685, 0, 0, 0, 322, 323, 324, 325, 326,
	327, 328, 329, 0, 0, 331, 332, 333, 330, 334,
	0, 335, 0, 336, 337, 338, 339, 340, 341, 0,
	342, 343, 344, 0, 345, 346, 347, 0, 0, 0,
	0, 0, 0, 0, 348, 349, 350, 351, 352, 0,
	353, 355, 686, 687, 0, 358, 354, 356, 0, 359,
	357, 360, 0, 361, 362, 363, 0, 0, 364, 365,
	366, 0, 367, 368, 369, 0, 370, 371, 372, 0,
	373, 374, 688, 375, 376, 377, 379, 381, 378, 380,
	382, 383, 384, 385, 689, 690, 386, 0, 0, 0,
	0, 0, 0, 0, 387, 388, 389, 691, 0, 0,
	0, 390, 0, 391, 392, 393, 0, 394, 0, 0,
	395, 396, 397, 692, 693, 398, 399, 400, 401, 402,
	403, 404, 405, 406, 0, 407, 694, 0, 695, 408,
	0, 409, 410, 411, 412, 413, 414, 3676, 697, 698,
	502, 0, 415, 416, 0, 417, 418, 419, 420, 421,
	0, 0, 0, 0, 422, 423, 424, 0, 0, 503,
	425, 699, 700, 0, 701, 0, 426, 427, 0, 702,
	0, 428, 429, 430, 0, 431, 0, 0, 0, 432,
	433, 434, 435, 436, 437, 0, 438, 440, 439, 0,
	441, 703, 0, 442, 443, 0, 0, 444, 445, 446,
	447, 448, 449, 452, 0, 0, 450, 451, 453, 454,
	0, 455, 456, 458, 461, 457, 459, 460, 462, 475,
	463, 464, 465, 466, 467, 468, 469, 470, 471, 472,
	473, 474, 477, 0, 476, 0, 478, 479, 480, 481,
	482, 489, 491, 492, 487, 488, 490, 493, 494, 496,
	484, 485, 486, 0, 495, 483, 0, 0, 0, 497,
	498, 499, 500, 0, 704, 501, 705, 504, 505, 0,
	0, 506, 0, 507, 0, 0, 509, 510, 511, 0,
	0, 512, 513, 706, 0, 514, 0, 707, 515, 516,
	508, 517, 518, 519, 520, 521, 522, 523, 524, 525,
	0, 526, 527, 708, 528, 529, 530, 709, 531, 532,
	533, 710, 534, 711, 535, 536, 0, 537, 538, 539,
	0, 540, 541, 542, 543, 544, 545, 546, 712, 547,
	548, 550, 549, 551, 0, 552, 0, 553, 554, 555,
	0, 0, 0, 0, 0, 556, 557, 559, 0, 560,
	561, 562, 563, 558, 564, 565, 566, 567, 568, 0,
	569, 570, 571, 0, 572, 573, 574, 575, 576, 713,
	577, 0, 578, 579, 586, 587, 588, 580, 581, 582,
	589, 590, 591, 592, 593, 0, 595, 596, 594, 597,
	598, 599, 0, 600, 601, 583, 584, 602, 603, 0,
	604, 605, 606, 607, 608, 609, 610, 714, 0, 611,
	0, 612, 613, 614, 615, 616, 618, 585, 619, 624,
	625, 715, 620, 621, 622, 623, 716, 627, 628, 0,
	629, 630, 0, 626, 617, 0, 631, 632, 633, 634,
	635, 636, 0, 637, 638, 0, 639, 717, 718, 719,
	720, 0, 649, 0, 640, 641, 642, 643, 721, 644,
	722, 0, 645, 646, 647, 648, 0, 650, 651, 0,
	0, 652, 653, 655, 657, 658, 654, 656, 659, 0,
	660, 0, 0, 661, 662, 663, 723, 724, 725, 0,
	665, 664, 666, 667, 668, 726, 669, 670, 285, 0,
	0, 0, 671, 672, 727, 673, 674, 675, 0, 0,
	0, 0, 0, 0, 0, 291, 292, 294, 293, 295,
	296, 297, 298, 0, 299, 300, 0, 0, 0, 0,
	0, 676, 0, 0, 0, 301, 0, 302, 303, 0,
	304, 305, 306, 307, 308, 309, 310, 677, 678, 0,
	311, 679, 312, 680, 0, 681, 313, 314, 315, 316,
	317, 318, 0, 0, 0, 319, 682, 683, 684, 0,
	320, 321, 685, 0, 0, 0, 322, 323, 324, 325,
	326, 327, 328, 329, 0, 0, 331, 332, 333, 330,
	334, 0, 335, 0, 336, 337, 338, 339, 340, 341,
	0, 342, 343, 344, 0, 345, 346, 347, 0, 0,
	0, 0, 0, 0, 0, 348, 349, 350, 351, 352,
	0, 353, 355, 686, 687, 0, 358, 354, 356, 0,
	359, 357, 360, 0, 361, 362, 363, 0, 0, 364,
	365, 366, 0, 367, 368, 369, 0, 370, 371, 372,
	0, 373, 374, 688, 375, 376, 377, 379, 381, 378,
	380, 382, 383, 384, 385, 689, 690, 386, 0, 0,
	0, 0, 0, 0, 0, 387, 388, 389, 691, 0,
	0, 0, 390, 0, 391, 392, 393, 0, 394, 0,
	0, 395, 396, 397, 692, 693, 398, 399, 400, 401,
	402, 403, 404, 405, 406, 0, 407, 694, 0, 695,
	408, 0, 409, 410, 411, 412, 413, 414, 3674, 697,
	698, 502, 0, 415, 416, 0, 417, 418, 419, 420,
	421, 0, 0, 0, 0, 422, 423, 424, 0, 0,
	503, 425, 699, 700, 0, 701, 0, 426, 427, 0,
	702, 0, 428, 429, 430, 0, 431, 0, 0, 0,
	432, 433, 434, 435, 436, 437, 0, 438, 440, 439,
	0, 441, 703, 0, 442, 443, 0, 0, 444, 445,
	446, 447, 448, 449, 452, 0, 0, 450, 451, 453,
	454, 0, 455, 456, 458, 461, 457, 459, 460, 462,
	475, 463, 464, 465, 466, 467, 468, 469, 470, 471,
	472, 473, 474, 477, 0, 476, 0, 478, 479, 480,
	481, 482, 489, 491, 492, 487, 488, 490, 493, 494,
	496, 484, 485, 486, 0, 495, 483, 0, 0, 0,
	497, 498, 499, 500, 0, 704, 501, 705, 504, 505,
	0, 0, 506, 0, 507, 0, 0, 509, 510, 511,
	0, 0, 512, 513, 706, 0, 514, 0, 707, 515,
	516, 508, 517, 518, 519, 520, 521, 522, 523, 524,
	525, 0, 526, 527, 708, 528, 529, 530, 709, 531,
	532, 533, 710, 534, 711, 535, 536, 0, 537, 538,
	539, 0, 540, 541, 542, 543, 544, 545, 546, 712,
	547, 548, 550, 549, 551, 0, 552, 0, 553, 554,
	555, 0, 0, 0, 0, 0, 556, 557, 559, 0,
	560, 561, 562, 563, 558, 564, 565, 566, 567, 568,
	0, 569, 570, 571, 0, 572, 573, 574, 575, 576,
	713, 577, 0, 578, 579, 586, 587, 588, 580, 581,
	582, 589, 590, 591, 592, 593, 0, 595, 596, 594,
	597, 598, 599, 0, 600, 601, 583, 584, 602, 603,
	0, 604, 605, 606, 607, 608, 609, 610, 714, 0,
	611, 0, 612, 613, 614, 615, 616, 618, 585, 619,
	624, 625, 715, 620, 621, 622, 623, 716, 627, 628,
	0, 629, 630, 0, 626, 617, 0, 631, 632, 633,
	634, 635, 636, 0, 637, 638, 0, 639, 717, 718,
	719, 720, 0, 649, 0, 640, 641, 642, 643, 721,
	644, 722, 0, 645, 646, 647, 648, 0, 650, 651,
	0, 0, 652, 653, 655, 657, 658, 654, 656, 659,
	0, 660, 0, 0, 661, 662, 663, 723, 724, 725,
	0, 665, 664, 666, 667, 668, 726, 669, 670, 285,
	0, 0, 0, 671, 672, 727, 673, 674, 675, 0,
	0, 0, 0, 0, 0, 0, 291, 292, 294, 293,
	295, 296, 297, 298, 0, 299, 300, 0, 0, 0,
	0, 0, 676, 0, 0, 0, 301, 0, 302, 303,
	0, 304, 305, 306, 307, 308, 309, 310, 677, 678,
	0, 311, 679, 312, 680, 0, 681, 313, 314, 315,
	316, 317, 318, 0, 0, 0, 319, 682, 683, 684,
	0, 320, 321, 685, 0, 0, 0, 322, 323, 324,
	325, 326, 327, 328, 329, 0, 0, 331, 332, 333,
	330, 334, 0, 335, 0, 336, 337, 338, 339, 340,
	341, 0, 342, 343, 344, 0, 345, 346, 347, 0,
	0, 0, 0, 0, 0, 0, 348, 349, 350, 351,
	352, 0, 353, 355, 686, 687, 0, 358, 354, 356,
	0, 359, 357, 360, 0, 361, 362, 363, 0, 0,
	364, 365, 366, 0, 367, 368, 369, 0, 370, 371,
	372, 0, 373, 374, 688, 375, 376, 377, 379, 381,
	378, 380, 382, 383, 384, 385, 689, 690, 386, 0,
	0, 0, 0, 0, 0, 0, 387, 388, 389, 691,
	0, 0, 0, 390, 0, 391, 392, 393, 0, 394,
	0, 0, 395, 396, 397, 692, 693, 398, 399, 400,
	401, 402, 403, 404, 405, 406, 0, 407, 694, 0,
	695, 408, 0, 409, 410, 411, 412, 413, 414, 3662,
	697, 698, 502, 0, 415, 416, 0, 417, 418, 419,
	420, 421, 0, 0, 0, 0, 422, 423, 424, 0,
	0, 503, 425, 699, 700, 0, 701, 0, 426, 427,
	0, 702, 0, 428, 429, 430, 0, 431, 0, 0,
	0, 432, 433, 434, 435, 436, 437, 0, 438, 440,
	439, 0, 441, 703, 0, 442, 443, 0, 0, 444,
	445, 446, 447, 448, 449, 452, 0, 0, 450, 451,
	453, 454, 0, 455, 456, 458, 461, 457, 459, 460,
	462, 475, 463, 464, 465, 466, 467, 468, 469, 470,
	471, 472, 473, 474, 477, 0, 476, 0, 478, 479,
	480, 481, 482, 489, 491, 492, 487, 488, 490, 493,
	494, 496, 484, 485, 486, 0, 495, 483, 0, 0,
	0, 497, 498, 499, 500, 0, 704, 501, 705, 504,
	505, 0, 0, 506, 0, 507, 0, 0, 509, 510,
	511, 0, 0, 512, 513, 706, 0, 514, 0, 707,
	515, 516, 508, 517, 518, 519, 520, 521, 522, 523,
	524, 525, 0, 526, 527, 708, 528, 529, 530, 709,
	531, 532, 533, 710, 534, 711, 535, 536, 0, 537,
	538, 539, 0, 540, 541, 542, 543, 544, 545, 546,
	712, 547, 548, 550, 549, 551, 0, 552, 0, 553,
	554, 555, 0, 0, 0, 0, 0, 556, 557, 559,
	0, 560, 561, 562, 563, 558, 564, 565, 566, 567,
	568, 0, 569, 570, 571, 0, 572, 573, 574, 575,
	576, 713, 577, 0, 578, 579, 586, 587, 588, 580,
	581, 582, 589, 590, 591, 592, 593, 0, 595, 596,
	594, 597, 598, 599, 0, 600, 601, 583, 584, 602,
	603, 0, 604, 605, 606, 607, 608, 609, 610, 714,
	0, 611, 0, 612, 613, 614, 615, 616, 618, 585,
	619, 624, 625, 715, 620, 621, 622, 623, 716, 627,
	628, 0, 629, 630, 0, 626, 617, 0, 631, 632,
	633, 634, 635, 636, 0, 637, 638, 0, 639, 717,
	718, 719, 720, 0, 649, 0, 640, 641, 642, 643,
	721, 644, 722, 0, 645, 646, 647, 648, 0, 650,
	651, 0, 0, 652, 653, 655, 657, 658, 654, 656,
	659, 0, 660, 0, 0, 661, 662, 663, 723, 724,
	725, 0, 665, 664, 666, 667, 668, 726, 669, 670,
	285, 0, 0, 0, 671, 672, 727, 673, 674, 675,
	0, 0, 0, 0, 0, 0, 0, 291, 292, 294,
	293, 295, 296, 297, 298, 0, 299, 300, 0, 0,
	0, 0, 0, 676, 0, 0, 0, 301, 0, 302,
	303, 0, 304, 305, 306, 307, 308, 309, 310, 677,
	678, 0, 311, 679, 312, 680, 0, 681, 313, 314,
	315, 316, 317, 318, 0, 0, 0, 319, 682, 683,
	684, 0, 320, 321, 685, 0, 0, 0, 322, 323,
	324, 325, 326, 327, 328, 329, 0, 0, 331, 332,
	333, 330, 334, 0, 335, 0, 336, 337, 338, 339,
	340, 341, 0, 342, 343, 344, 0, 345, 346, 347,
	0, 0, 0, 0, 0, 0, 0, 348, 349, 350,
	351, 352, 0, 353, 355, 686, 687, 0, 358, 354,
	356, 0, 359, 357, 360, 0, 361, 362, 363, 0,
	0, 364, 365, 366, 0, 367, 368, 369, 0, 370,
	371, 372, 0, 373, 374, 688, 375, 376, 377, 379,
	381, 378, 380, 382, 383, 384, 385, 689, 690, 386,
	0, 0, 0, 0, 0, 0, 0, 387, 388, 389,
	691, 0, 0, 0, 390, 0, 391, 392, 393, 0,
	394, 0, 0, 395, 396, 397, 692, 693, 398, 399,
	400, 401, 402, 403, 404, 405, 406, 0, 407, 694,
	0, 695, 408, 0, 409, 410, 411, 412, 413, 414,
	3659, 697, 698, 502, 0, 415, 416, 0, 417, 418,
	419, 420, 421, 0, 0, 0, 0, 422, 423, 424,
	0, 0, 503, 425, 699, 700, 0, 701, 0, 426,
	427, 0, 702, 0, 428, 429, 430, 0, 431, 0,
	0, 0, 432, 433, 434, 435, 436, 437, 0, 438,
	440, 439, 0, 441, 703, 0, 442, 443, 0, 0,
	444, 445, 446, 447, 448, 449, 452, 0, 0, 450,
	451, 453, 454, 0, 455, 456, 458, 461, 457, 459,
	460, 462, 475, 463, 464, 465, 466, 467, 468, 469,
	470, 471, 472, 473, 474, 477, 0, 476, 0, 478,
	479, 480, 481, 482, 489, 491, 492, 487, 488, 490,
	493, 494, 496, 484, 485, 486, 0, 495, 483, 0,
	0, 0, 497, 498, 499, 500, 0, 704, 501, 705,
	504, 505, 0, 0, 506, 0, 507, 0, 0, 509,
	510, 511, 0, 0, 512, 513, 706, 0, 514, 0,
	707, 515, 516, 508, 517, 518, 519, 520, 521, 522,
	523, 524, 525, 0, 526, 527, 708, 528, 529, 530,
	709, 531, 532, 533, 710, 534, 711, 535, 536, 0,
	537, 538, 539, 0, 540, 541, 542, 543, 544, 545,
	546, 712, 547, 548, 550, 549, 551, 0, 552, 0,
	553, 554, 555, 0, 0, 0, 0, 0, 556, 557,
	559, 0, 560, 561, 562, 563, 558, 564, 565, 566,
	567, 568, 0, 569, 570, 571, 0, 572, 573, 574,
	575, 576, 713, 577, 0, 578, 579, 586, 587, 588,
	580, 581, 582, 589, 590, 591, 592, 593, 0, 595,
	596, 594, 597, 598, 599, 0, 600, 601, 583, 584,
	602, 603, 0, 604, 605, 606, 607, 608, 609, 610,
	714, 0, 611, 0, 612, 613, 614, 615, 616, 618,
	585, 619, 624, 625, 715, 620, 621, 622, 623, 716,
	627, 628, 0, 629, 630, 0, 626, 617, 0, 631,
	632, 633, 634, 635, 636, 0, 637, 638, 0, 639,
	717, 718, 719, 720, 0, 649, 0, 640, 641, 642,
	643, 721, 644, 722, 0, 645, 646, 647, 648, 0,
	650, 651, 0, 0, 652, 653, 655, 657, 658, 654,
	656, 659, 0, 660, 0, 0, 661, 662, 663, 723,
	724, 725, 0, 665, 664, 666, 667, 668, 726, 669,
	670, 285, 0, 0, 0, 671, 672, 727, 673, 674,
	675, 0, 0, 0, 0, 0, 0, 0, 291, 292,
	294, 293, 295, 296, 297, 298, 0, 299, 300, 0,
	0, 0, 0, 0, 676, 0, 0, 0, 301, 0,
	302, 303, 0, 304, 305, 306, 307, 308, 309, 310,
	677, 678, 0, 311, 679, 312, 680, 0, 681, 313,
	314, 315, 316, 317, 318, 0, 0, 0, 319, 682,
	683, 684, 0, 320, 321, 685, 0, 0, 0, 322,
	323, 324, 325, 326, 327, 328, 329, 0, 0, 331,
	332, 333, 330, 334, 0, 335, 0, 336, 337, 338,
	339, 340, 341, 0, 342, 343, 344, 0, 345, 346,
	347, 0, 0, 0, 0, 0, 0, 0, 348, 349,
	350, 351, 352, 0, 353, 355, 686, 687, 0, 358,
	354, 356, 0, 359, 357, 360, 0, 361, 362, 363,
	0, 0, 364, 365, 366, 0, 367, 368, 369, 0,
	370, 371, 372, 0, 373, 374, 688, 375, 376, 377,
	379, 381, 378, 380, 382, 383, 384, 385, 689, 690,
	386, 0, 0, 0, 0, 0, 0, 0, 387, 388,
	389, 691, 0, 0, 0, 390, 0, 391, 392, 393,
	0, 394, 0, 0, 395, 396, 397, 692, 693, 398,
	399, 400, 401, 402, 403, 404, 405, 406, 0, 407,
	694, 0, 695, 408, 0, 409, 410, 411, 412, 413,
	414, 3260, 697, 698, 502, 0, 415, 416, 0, 417,
	418, 419, 420, 421, 0, 0, 0, 0, 422, 423,
	424, 0, 0, 503, 425, 699, 700, 0, 701, 0,
	426, 427, 0, 702, 0, 428, 429, 430, 0, 431,
	0, 0, 0, 432, 433, 434, 435, 436, 437, 0,
	438, 440, 439, 0, 441, 703, 0, 442, 443, 0,
	0, 444, 445, 446, 447, 448, 449, 452, 0, 0,
	450, 451, 453, 454, 0, 455, 456, 458, 461, 457,
	459, 460, 462, 475, 463, 464, 465, 466, 467, 468,
	469, 470, 471, 472, 473, 474, 477, 0, 476, 0,
	478, 479, 480, 481, 482, 489, 491, 492, 487, 488,
	490, 493, 494, 496, 484, 485, 486, 0, 495, 483,
	0, 0, 0, 497, 498, 499, 500, 0, 704, 501,
	705, 504, 505, 0, 0, 506, 0, 507, 0, 0,
	509, 510, 511, 0, 0, 512, 513, 706, 0, 514,
	0, 707, 515, 516, 508, 517, 518, 519, 520, 521,
	522, 523, 524, 525, 0, 526, 527, 708, 528, 529,
	530, 709, 531, 532, 533, 710, 534, 711, 535, 536,
	0, 537, 538, 539, 0, 540, 541, 542, 543, 544,
	545, 546, 712, 547, 548, 550, 549, 551, 0, 552,
	0, 553, 554, 555, 0, 0, 0, 0, 0, 556,
	557, 559, 0, 560, 561, 562, 563, 558, 564, 565,
	566, 567, 568, 0, 569, 570, 571, 0, 572, 573,
	574, 575, 576, 713, 577, 0, 578, 579, 586, 587,
	588, 580, 581, 582, 589, 590, 591, 592, 593, 0,
	595, 596, 594, 597, 598, 599, 0, 600, 601, 583,
	584, 602, 603, 0, 604, 605, 606, 607, 608, 609,
	610, 714, 0, 611, 0, 612, 613, 614, 615, 616,
	618, 585, 619, 624, 625, 715, 620, 621, 622, 623,
	716, 627, 628, 0, 629, 630, 0, 626, 617, 0,
	631, 632, 633, 634, 635, 636, 0, 637, 638, 0,
	639, 717, 718, 719, 720, 0, 649, 0, 640, 641,
	642, 643, 721, 644, 722, 0, 645, 646, 647, 648,
	0, 650, 651, 0, 0, 652, 653, 655, 657, 658,
	654, 656, 659, 0, 660, 0, 0, 661, 662, 663,
	723, 724, 725, 0, 665, 664, 666, 667, 668, 726,
	669, 670, 285, 0, 0, 0, 671, 672, 727, 673,
	674, 675, 0, 0, 0, 0, 0, 0, 0, 291,
	292, 294, 293, 295, 296, 297, 298, 0, 299, 300,
	0, 0, 0, 0, 0, 676, 0, 0, 0, 301,
	0, 302, 303, 0, 304, 305, 306, 307, 308, 309,
	310, 677, 678, 0, 311, 679, 312, 680, 0, 681,
	313, 314, 315, 316, 317, 318, 0, 0, 0, 319,
	682, 683, 684, 0, 320, 321, 685, 0, 0, 0,
	322, 323, 324, 325, 326, 327, 328, 329, 0, 0,
	331, 332, 333, 330, 334, 0, 335, 0, 336, 337,
	338, 339, 340, 341, 0, 342, 343, 344, 0, 345,
	346, 347, 0, 0, 0, 0, 0, 0, 0, 348,
	349, 350, 351, 352, 0, 353, 355, 686, 687, 0,
	358, 354, 356, 0, 359, 357, 360, 0, 361, 362,
	363, 0, 0, 364, 365, 366, 0, 367, 368, 369,
	0, 370, 371, 372, 0, 373, 374, 688, 375, 376,
	377, 379, 381, 378, 380, 382, 383, 384, 385, 689,
	690, 386, 0, 0, 0, 0, 0, 0, 0, 387,
	388, 389, 691, 0, 0, 0, 390, 0, 391, 392,
	393, 0, 394, 0, 0, 395, 396, 397, 692, 693,
	398, 399, 400, 401, 402, 403, 404, 405, 406, 0,
	407, 694, 0, 695, 408, 0, 409, 410, 411, 412,
	413, 414, 696, 697, 698, 502, 0, 415, 416, 0,
	417, 418, 419, 420, 421, 0, 0, 0, 0, 422,
	423, 424, 0, 0, 503, 425, 699, 700, 0, 701,
	0, 426, 427, 0, 702, 0, 428, 429, 430, 0,
	431, 0, 0, 0, 432, 433, 434, 435, 436, 437,
	0, 438, 440, 439, 0, 441, 703, 0, 442, 443,
	0, 0, 444, 445, 446, 447, 448, 449, 452, 0,
	0, 450, 451, 453, 454, 0, 455, 456, 458, 461,
	457, 459, 460, 462, 475, 463, 464, 465, 466, 467,
	468, 469, 470, 471, 472, 473, 474, 477, 0, 476,
	0, 478, 479, 480, 481, 482, 489, 491, 492, 487,
	488, 490, 493, 494, 496, 484, 485, 486, 0, 495,
	483, 0, 0, 0, 497, 498, 499, 500, 0, 704,
	501, 705, 504, 505, 0, 0, 506, 0, 507, 0,
	0, 509, 510, 511, 0, 0, 512, 513, 706, 0,
	514, 0, 707, 515, 516, 508, 517, 518, 519, 520,
	521, 522, 523, 524, 525, 0, 526, 527, 708, 528,
	529, 530, 709, 531, 532, 533, 710, 534, 711, 535,
	536, 0, 537, 538, 539, 0, 540, 541, 542, 543,
	544, 545, 546, 712, 547, 548, 550, 549, 551, 0,
	552, 0, 553, 554, 555, 0, 0, 0, 0, 0,
	556, 557, 559, 0, 560, 561, 562, 563, 558, 564,
	565, 566, 567, 568, 0, 569, 570, 571, 0, 572,
	573, 574, 575, 576, 713, 577, 0, 578, 579, 800,
	587, 588, 580, 581, 582, 589, 590, 591, 592, 593,
	0, 595, 596, 594, 597, 598, 599, 0, 600, 601,
	583, 584, 602, 603, 0, 604, 605, 606, 607, 608,
	609, 610, 714, 0, 611, 0, 612, 613, 614, 615,
	616, 618, 585, 619, 624, 625, 715, 620, 621, 622,
	623, 716, 627, 628, 0, 629, 630, 0, 626, 617,
	0, 631, 632, 633, 634, 635, 636, 0, 637, 638,
	0, 639, 717, 718, 719, 720, 0, 649, 0, 640,
	641, 642, 643, 721, 644, 722, 0, 645, 646, 647,
	648, 0, 650, 651, 0, 0, 652, 653, 655, 657,
	658, 654, 656, 659, 0, 660, 0, 0, 661, 662,
	663, 723, 724, 725, 0, 665, 664, 666, 667, 668,
	726, 669, 670, 285, 0, 0, 0, 671, 672, 727,
	673, 674, 675, 0, 0, 0, 0, 0, 0, 0,
	291, 292, 294, 293, 295, 296, 297, 298, 0, 299,
	300, 0, 0, 0, 0, 0, 676, 0, 2467, 0,
	301, 0, 302, 303, 0, 304, 305, 306, 307, 308,
	309, 310, 677, 678, 0, 311, 679, 312, 680, 0,
	681, 313, 314, 315, 316, 317, 318, 0, 0, 0,
	319, 682, 683, 684, 0, 320, 321, 685, 0, 0,
	0, 322, 323, 324, 325, 326, 327, 328, 329, 0,
	0, 331, 332, 333, 330, 334, 0, 335, 0, 336,
	337, 338, 339, 340, 341, 0, 342, 343, 344, 0,
	345, 346, 347, 0, 0, 0, 0, 0, 0, 0,
	348, 349, 350, 351, 352, 0, 353, 355, 686, 687,
	0, 358, 354, 356, 0, 359, 357, 360, 0, 361,
	362, 363, 0, 0, 364, 365, 366, 0, 367, 368,
	369, 0, 370, 371, 372, 0, 373, 374, 688, 375,
	376, 377, 379, 381, 378, 380, 382, 383, 384, 385,
	689, 690, 386, 0, 0, 0, 0, 0, 0, 0,
	387, 388, 389, 691, 0, 0, 0, 390, 0, 391,
	392, 393, 0, 394, 0, 0, 395, 396, 397, 692,
	693, 398, 399, 400, 401, 402, 403, 404, 405, 406,
	0, 407, 694, 0, 695, 408, 0, 409, 410, 411,
	412, 413, 414, 696, 697, 698, 502, 0, 415, 416,
	0, 417, 418, 419, 420, 421, 0, 0, 0, 0,
	422, 423, 424, 0, 0, 503, 425, 699, 700, 0,
	701, 0, 426, 427, 0, 702, 0, 428, 429, 430,
	0, 431, 0, 0, 0, 432, 433, 434, 435, 436,
	437, 0, 438, 440, 439, 0, 441, 703, 0, 442,
	443, 0, 0, 444, 445, 446, 447, 448, 449, 452,
	0, 0, 450, 451, 453, 454, 0, 455, 456, 458,
	461, 457, 459, 460, 462, 475, 463, 464, 465, 466,
	467, 468, 469, 470, 471, 472, 473, 474, 477, 0,
	476, 0, 478, 479, 480, 481, 482, 489, 491, 492,
	487, 488, 490, 493, 494, 496, 484, 485, 486, 0,
	495, 483, 0, 0, 0, 497, 498, 499, 500, 0,
	704, 501, 705, 504, 505, 0, 0, 506, 0, 507,
	0, 0, 509, 510, 511, 0, 0, 512, 513, 706,
	0, 514, 0, 707, 515, 516, 508, 517, 518, 519,
	520, 521, 522, 523, 524, 525, 0, 526, 527, 708,
	528, 529, 530, 709, 531, 532, 533, 710, 534, 711,
	535, 536, 0, 537, 538, 539, 0, 540, 541, 542,
	543, 544, 545, 546, 712, 547, 548, 550, 549, 551,
	0, 552, 0, 553, 554, 555, 0, 0, 0, 0,
	0, 556, 557, 559, 0, 560, 561, 562, 563, 558,
	564, 565, 566, 567, 568, 0, 569, 570, 571, 0,
	572, 573, 574, 575, 576, 713, 577, 0, 578, 579,
	586, 587, 588, 580, 581, 582, 589, 590, 591, 592,
	593, 0, 595, 596, 594, 597, 598, 599, 0, 0,
	601, 583, 584, 602, 603, 0, 604, 605, 606, 607,
	608, 609, 610, 714, 0, 611, 0, 612, 613, 614,
	615, 616, 618, 585, 619, 624, 625, 715, 620, 621,
	622, 623, 716, 627, 628, 0, 629, 630, 0, 626,
	617, 0, 631, 632, 633, 634, 635, 636, 0, 637,
	638, 0, 639, 717, 718, 719, 720, 0, 649, 0,
	640, 641, 642, 643, 721, 644, 722, 0, 645, 646,
	647, 648, 0, 650, 651, 0, 0, 652, 653, 655,
	657, 658, 654, 656, 659, 0, 660, 0, 0, 661,
	662, 663, 723, 724, 725, 0, 665, 664, 666, 667,
	668, 726, 669, 670, 285, 0, 0, 0, 671, 672,
	727, 673, 674, 675, 0, 0, 0, 0, 0, 0,
	0, 291, 292, 294, 293, 295, 296, 297, 298, 0,
	299, 300, 0, 0, 0, 0, 0, 676, 0, 0,
	0, 301, 0, 302, 303, 0, 304, 305, 306, 307,
	308, 309, 310, 677, 678, 0, 311, 679, 312, 680,
	0, 681, 313, 314, 315, 316, 317, 318, 0, 0,
	0, 319, 682, 683, 684, 0, 320, 321, 685, 0,
	0, 0, 322, 323, 324, 325, 326, 327, 328, 329,
	0, 0, 331, 332, 333, 330, 334, 0, 335, 0,
	336, 337, 338, 339, 340, 341, 0, 342, 343, 344,
	0, 345, 346, 347, 0, 0, 0, 0, 0, 0,
	0, 348, 349, 350, 351, 352, 0, 353, 355, 686,
	687, 0, 358, 354, 356, 0, 359, 357, 360, 0,
	361, 362, 363, 0, 0, 364, 365, 366, 0, 367,
	368, 369, 0, 370, 371, 372, 0, 373, 374, 688,
	375, 376, 377, 379, 381, 378, 380, 382, 383, 384,
	385, 689, 690, 386, 0, 0, 0, 0, 0, 0,
	0, 387, 388, 389, 691, 0, 0, 0, 390, 0,
	391, 392, 393, 0, 394, 0, 0, 395, 396, 397,
	692, 693, 398, 399, 400, 401, 402, 403, 404, 405,
	406, 0, 407, 694, 0, 695, 408, 0, 409, 410,
	411, 412, 413, 414, 1371, 697, 698, 502, 0, 415,
	416, 0, 417, 418, 419, 420, 421, 0, 0, 0,
	0, 422, 423, 424, 0, 0, 503, 425, 699, 700,
	0, 701, 0, 426, 427, 0, 702, 0, 428, 429,
	430, 0, 431, 0, 0, 0, 432, 433, 434, 435,
	436, 437, 0, 438, 440, 439, 0, 441, 703, 0,
	442, 443, 0, 0, 444, 445, 446, 447, 448, 449,
	452, 0, 0, 450, 451, 453, 454, 0, 455, 456,
	458, 461, 457, 459, 460, 462, 475, 463, 464, 465,
	466, 467, 468, 469, 470, 471, 472, 473, 474, 477,
	0, 476, 0, 478, 479, 480, 481, 482, 489, 491,
	492, 487, 488, 490, 493, 494, 496, 484, 485, 486,
	0, 495, 483, 0, 0, 0, 497, 498, 499, 500,
	0, 704, 501, 705, 504, 505, 0, 0, 506, 0,
	507, 0, 0, 509, 510, 511, 0, 0, 512, 513,
	706, 0, 514, 0, 707, 515, 516, 508, 517, 518,
	519, 520, 521, 522, 523, 524, 525, 0, 526, 527,
	708, 528, 529, 530, 709, 531, 532, 533, 710, 534,
	711, 535, 536, 0, 537, 538, 539, 0, 540, 541,
	542, 543, 544, 545, 546, 712, 547, 548, 550, 549,
	551, 0, 552, 0, 553, 554, 555, 0, 0, 0,
	0, 0, 556, 557, 559, 0, 560, 561, 562, 563,
	558, 564, 565, 566, 567, 568, 0, 569, 570, 571,
	0, 572, 573, 574, 575, 576, 713, 577, 0, 578,
	579, 586, 587, 588, 580, 581, 582, 589, 590, 591,
	592, 593, 0, 595, 596, 594, 597, 598, 599, 0,
	600, 601, 583, 584, 602, 603, 0, 604, 605, 606,
	607, 608, 609, 610, 714, 0, 611, 0, 612, 613,
	614, 615, 616, 618, 585, 619, 624, 625, 715, 620,
	621, 622, 623, 716, 627, 628, 0, 629, 630, 0,
	626, 617, 0, 631, 632, 633, 634, 635, 636, 0,
	637, 638, 0, 639, 717, 718, 719, 720, 0, 649,
	0, 640, 641, 642, 643, 721, 644, 722, 0, 645,
	646, 647, 648, 0, 650, 651, 0, 0, 652, 653,
	655, 657, 658, 654, 656, 659, 0, 660, 0, 0,
	661, 662, 663, 723, 724, 725, 0, 665, 664, 666,
	667, 668, 726, 669, 670, 285, 0, 0, 0, 671,
	672, 727, 673, 674, 675, 0, 0, 0, 0, 0,
	0, 0, 291, 292, 294, 293, 295, 296, 297, 298,
	0, 299, 300, 0, 0, 0, 0, 0, 676, 0,
	0, 0, 301, 0, 302, 303, 0, 304, 305, 306,
	307, 308, 309, 310, 677, 678, 0, 311, 679, 312,
	680, 0, 681, 313, 314, 315, 316, 317, 318, 0,
	0, 0, 319, 682, 683, 684, 0, 320, 321, 685,
	0, 0, 0, 322, 323, 324, 325, 326, 327, 328,
	329, 0, 0, 331, 332, 333, 330, 334, 0, 335,
	0, 336, 337, 338, 339, 340, 341, 0, 342, 343,
	344, 0, 345, 346, 347, 0, 0, 0, 0, 0,
	0, 0, 348, 349, 350, 351, 352, 0, 353, 355,
	686, 687, 0, 358, 354, 356, 0, 359, 357, 360,
	0, 361, 362, 363, 0, 0, 364, 365, 366, 0,
	367, 368, 369, 0, 370, 371, 372, 0, 373, 374,
	688, 375, 376, 377, 379, 381, 378, 380, 382, 383,
	384, 385, 689, 690, 386, 0, 0, 0, 0, 0,
	0, 0, 387, 388, 389, 691, 0, 0, 0, 390,
	0, 391, 392, 393, 0, 394, 0, 0, 395, 396,
	397, 692, 693, 398, 399, 400, 401, 402, 403, 404,
	405, 406, 0, 407, 694, 0, 695, 408, 0, 409,
	410, 411, 412, 413, 414, 696, 697, 698, 502, 0,
	415, 416, 0, 417, 418, 419, 420, 421, 0, 0,
	0, 0, 422, 423, 424, 0, 0, 503, 425, 699,
	700, 0, 701, 0, 426, 427, 0, 702, 0, 428,
	429, 430, 0, 431, 0, 0, 0, 432, 433, 434,
	435, 436, 437, 0, 438, 440, 439, 0, 441, 703,
	0, 442, 443, 0, 0, 444, 445, 446, 447, 448,
	449, 452, 0, 0, 450, 451, 453, 454, 0, 455,
	456, 458, 461, 457, 459, 460, 462, 475, 463, 464,
	465, 466, 467, 468, 469, 470, 471, 472, 473, 474,
	477, 0, 476, 0, 478, 479, 480, 481, 482, 489,
	491, 492, 487, 488, 490, 493, 494, 496, 484, 485,
	486, 0, 495, 483, 0, 0, 0, 497, 498, 499,
	500, 0, 704, 501, 705, 504, 505, 0, 0, 506,
	0, 507, 0, 0, 509, 510, 511, 0, 0, 512,
	513, 706, 0, 514, 0, 707, 515, 516, 508, 517,
	518, 519, 520, 521, 522, 523, 524, 525, 0, 526,
	527, 708, 528, 529, 530, 709, 531, 532, 533, 710,
	534, 711, 535, 536, 0, 537, 538, 539, 0, 540,
	541, 542, 543, 544, 545, 546, 712, 547, 548, 1300,
	549, 551, 0, 552, 0, 553, 554, 555, 0, 0,
	0, 0, 0, 556, 557, 559, 0, 560, 561, 562,
	563, 558, 564, 565, 566, 567, 568, 0, 569, 570,
	571, 0, 572, 573, 574, 575, 576, 713, 577, 0,
	578, 579, 586, 587, 588, 580, 581, 582, 589, 590,
	591, 592, 593, 0, 595, 596, 594, 597, 598, 599,
	0, 600, 601, 583, 584, 602, 603, 0, 604, 605,
	606, 607, 608, 609, 610, 714, 0, 611, 0, 612,
	613, 614, 615, 616, 618, 585, 619, 624, 625, 715,
	620, 621, 622, 623, 716, 627, 628, 0, 629, 630,
	0, 626, 617, 0, 631, 632, 633, 634, 635, 636,
	0, 637, 638, 0, 639, 717, 718, 719, 720, 0,
	649, 0, 640, 641, 642, 643, 721, 644, 722, 0,
	645, 646, 647, 648, 0, 650, 651, 0, 0, 652,
	653, 655, 657, 658, 654, 656, 659, 0, 660, 0,
	0, 661, 662, 663, 723, 724, 725, 0, 665, 664,
	666, 667, 668, 726, 669, 670, 285, 0, 0, 0,
	671, 672, 727, 673, 674, 675, 0, 0, 0, 0,
	0, 0, 0, 291, 292, 294, 293, 295, 296, 297,
	298, 0, 299, 300, 0, 0, 0, 0, 0, 676,
	0, 0, 0, 301, 0, 302, 303, 0, 304, 305,
	306, 307, 308, 309, 310, 677, 678, 0, 311, 679,
	312, 680, 0, 681, 313, 314, 315, 316, 317, 318,
	0, 0, 0, 319, 682, 683, 684, 0, 320, 321,
	685, 0, 0, 0, 322, 323, 324, 325, 326, 327,
	328, 329, 0, 0, 331, 332, 333, 330, 334, 0,
	335, 0, 336, 337, 338, 339, 340, 341, 0, 342,
	343, 344, 0, 345, 346, 347, 0, 0, 0, 0,
	0, 0, 0, 348, 349, 350, 351, 352, 0, 353,
	355, 686, 687, 0, 358, 354, 356, 0, 359, 357,
	360, 0, 361, 362, 363, 0, 0, 364, 365, 366,
	0, 367, 368, 369, 0, 370, 371, 372, 0, 373,
	374, 688, 375, 376, 377, 379, 381, 378, 380, 382,
	383, 384, 385, 689, 690, 386, 0, 0, 0, 0,
	0, 0, 0, 387, 388, 389, 691, 0, 0, 0,
	390, 0, 391, 392, 393, 0, 394, 0, 0, 395,
	396, 397, 692, 693, 398, 399, 400, 401, 402, 403,
	404, 405, 406, 0, 407, 694, 0, 695, 0, 0,
	409, 410, 411, 412, 413, 414, 696, 697, 698, 502,
	0, 415, 416, 0, 417, 418, 419, 420, 421, 0,
	0, 0, 0, 422, 423, 424, 0, 0, 503, 425,
	699, 700, 0, 701, 0, 426, 427, 0, 702, 0,
	428, 429, 430, 0, 431, 0, 0, 0, 432, 433,
	434, 435, 436, 437, 0, 438, 440, 439, 0, 441,
	703, 0, 442, 443, 0, 0, 444, 445, 446, 447,
	448, 449, 452, 0, 0, 450, 451, 453, 454, 0,
	455, 456, 458, 461, 457, 459, 460, 462, 475, 463,
	464, 465, 466, 467, 468, 469, 470, 471, 472, 473,
	474, 477, 0, 476, 0, 478, 479, 480, 481, 482,
	489, 491, 492, 487, 488, 490, 493, 494, 496, 484,
	485, 486, 0, 495, 483, 0, 0, 0, 497, 498,
	499, 500, 0, 704, 501, 705, 504, 505, 0, 0,
	506, 0, 507, 0, 0, 509, 510, 511, 0, 0,
	512, 513, 706, 0, 514, 0, 707, 515, 516, 508,
	517, 518, 0, 520, 521, 522, 523, 524, 525, 0,
	526, 527, 708, 528, 529, 530, 709, 531, 532, 533,
	710, 534, 711, 535, 536, 0, 537, 538, 539, 0,
	540, 541, 542, 543, 0, 545, 546, 712, 547, 548,
	550, 549, 551, 0, 552, 0, 553, 554, 555, 0,
	0, 0, 0, 0, 556, 557, 559, 0, 560, 561,
	562, 563, 558, 564, 565, 566, 567, 568, 0, 569,
	570, 571, 0, 572, 573, 574, 575, 576, 713, 0,
	0, 578, 579, 586, 587, 588, 580, 581, 582, 589,
	590, 591, 592, 593, 0, 595, 596, 594, 597, 598,
	599, 0, 600, 601, 583, 584, 602, 603, 0, 604,
	605, 606, 607, 608, 609, 610, 714, 0, 611, 0,
	612, 613, 614, 615, 616, 618, 585, 619, 624, 625,
	715, 620, 621, 622, 623, 716, 627, 628, 0, 629,
	630, 0, 626, 617, 0, 631, 632, 633, 634, 635,
	636, 0, 637, 638, 0, 639, 717, 718, 719, 720,
	0, 649, 0, 640, 641, 642, 643, 721, 644, 722,
	0, 645, 646, 647, 648, 0, 650, 651, 0, 0,
	652, 653, 655, 657, 658, 654, 656, 659, 0, 660,
	0, 0, 661, 662, 663, 723, 724, 725, 0, 665,
	664, 666, 667, 668, 726, 669, 670, 1705, 0, 1416,
	0, 671, 672, 727, 673, 674, 675, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 291, 292, 294, 293,
	295, 296, 297, 298, 0, 299, 300, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 301, 0, 302, 303,
	0, 304, 305, 306, 307, 308, 309, 310, 0, 0,
	0, 311, 0, 312, 0, 0, 0, 313, 314, 315,
	316, 317, 318, 0, 0, 0, 319, 0, 0, 0,
	0, 320, 321, 0, 0, 0, 0, 322, 323, 324,
	325, 326, 327, 328, 329, 0, 0, 331, 332, 333,
	330, 334, 0, 335, 0, 336, 337, 338, 339, 340,
	341, 0, 342, 343, 344, 0, 345, 346, 347, 0,
	0, 0, 0, 0, 0, 1418, 348, 349, 350, 351,
	352, 0, 353, 355, 0, 0, 0, 358, 354, 356,
	0, 359, 357, 360, 0, 361, 362, 363, 0, 0,
	364, 365, 366, 0, 367, 368, 369, 0, 370, 371,
	372, 0, 373, 374, 0, 375, 376, 377, 379, 381,
	378, 380, 382, 383, 384, 385, 0, 0, 386, 0,
	0, 0, 0, 0, 0, 0, 387, 388, 389, 0,
	0, 0, 0, 390, 0, 391, 392, 393, 0, 394,
	0, 0, 395, 396, 397, 0, 0, 398, 399, 400,
	401, 402, 403, 404, 405, 406, 0, 407, 0, 0,
	0, 408, 0, 409, 410, 411, 412, 413, 414, 1704,
	0, 0, 502, 0, 415, 416, 0, 417, 418, 419,
	420, 421, 0, 0, 0, 0, 422, 423, 424, 0,
	0, 503, 425, 0, 0, 0, 0, 0, 426, 427,
	0, 0, 0, 428, 429, 430, 0, 431, 0, 0,
	0, 432, 433, 434, 435, 436, 437, 0, 438, 440,
	439, 0, 441, 0, 0, 442, 443, 0, 0, 444,
	445, 446, 447, 448, 449, 452, 0, 0, 450, 451,
	453, 454, 0, 455, 456, 458, 461, 457, 459, 460,
	462, 475, 463, 464, 465, 466, 467, 468, 469, 470,
	471, 472, 473, 474, 477, 0, 476, 0, 478, 479,
	480, 481, 482, 489, 491, 492, 487, 488, 490, 493,
	494, 496, 484, 485, 486, 0, 495, 483, 0, 0,
	0, 497, 498, 499, 500, 0, 0, 501, 0, 504,
	505, 0, 0, 506, 0, 507, 0, 0, 509, 510,
	511, 0, 0, 512, 513, 0, 0, 514, 0, 0,
	515, 516, 508, 517, 518, 519, 520, 521, 522, 523,
	524, 525, 0, 526, 527, 0, 528, 529, 530, 0,
	531, 532, 533, 0, 534, 0, 535, 536, 0, 537,
	538, 539, 0, 540, 541, 542, 543, 544, 545, 546,
	0, 547, 548, 550, 549, 551, 0, 552, 0, 553,
	554, 555, 0, 0, 0, 0, 0, 556, 557, 559,
	0, 560, 561, 562, 563, 558, 564, 565, 566, 567,
	568, 0, 569, 570, 571, 0, 572, 573, 574, 575,
	576, 0, 577, 0, 578, 579, 586, 587, 588, 580,
	581, 582, 589, 590, 591, 592, 593, 0, 595, 596,
	594, 597, 598, 599, 1419, 600, 601, 583, 584, 602,
	603, 0, 604, 605, 606, 607, 608, 609, 610, 0,
	0, 611, 0, 612, 613, 614, 615, 616, 618, 585,
	619, 624, 625, 0, 620, 621, 622, 623, 0, 627,
	628, 0, 629, 630, 0, 626, 617, 0, 631, 632,
	633, 634, 635, 636, 0, 637, 638, 0, 639, 0,
	0, 0, 0, 0, 649, 0, 640, 641, 642, 643,
	0, 644, 0, 0, 645, 646, 647, 648, 0, 650,
	651, 0, 0, 652, 653, 655, 657, 658, 654, 656,
	659, 0, 660, 0, 0, 661, 662, 663, 0, 0,
	0, 0, 665, 664, 666, 667, 668, 0, 669, 670,
	1626, 0, 1416, 0, 671, 672, 0, 673, 674, 675,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 291,
	292, 294, 293, 295, 296, 297, 298, 0, 299, 300,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 301,
	0, 302, 303, 0, 304, 305, 306, 307, 308, 309,
	310, 0, 0, 0, 311, 0, 312, 0, 0, 0,
	313, 314, 315, 316, 317, 318, 0, 0, 0, 319,
	0, 0, 0, 0, 320, 321, 0, 0, 0, 0,
	322, 323, 324, 325, 326, 327, 328, 329, 0, 0,
	331, 332, 333, 330, 334, 0, 335, 0, 336, 337,
	338, 339, 340, 341, 0, 342, 343, 344, 0, 345,
	346, 347, 0, 0, 0, 0, 0, 0, 1418, 348,
	349, 350, 351, 352, 0, 353, 355, 0, 0, 0,
	358, 354, 356, 0, 359, 357, 360, 0, 361, 362,
	363, 0, 0, 364, 365, 366, 0, 367, 368, 369,
	0, 370, 371, 372, 0, 373, 374, 0, 375, 376,
	377, 379, 381, 378, 380, 382, 383, 384, 385, 0,
	0, 386, 0, 0, 0, 0, 0, 0, 0, 387,
	388, 389, 0, 0, 0, 0, 390, 0, 391, 392,
	393, 0, 394, 0, 0, 395, 396, 397, 0, 0,
	398, 399, 400, 401, 402, 403, 404, 405, 406, 0,
	407, 0, 0, 0, 408, 0, 409, 410, 411, 412,
	413, 414, 1625, 0, 0, 502, 0, 415, 416, 0,
	417, 418, 419, 420, 421, 0, 0, 0, 0, 422,
	423, 424, 0, 0, 503, 425, 0, 0, 0, 0,
	0, 426, 427, 0, 0, 0, 428, 429, 430, 0,
	431, 0, 0, 0, 432, 433, 434, 435, 436, 437,
	0, 438, 440, 439, 0, 441, 0, 0, 442, 443,
	0, 0, 444, 445, 446, 447, 448, 449, 452, 0,
	0, 450, 451, 453, 454, 0, 455, 456, 458, 461,
	457, 459, 460, 462, 475, 463, 464, 465, 466, 467,
	468, 469, 470, 471, 472, 473, 474, 477, 0, 476,
	0, 478, 479, 480, 481, 482, 489, 491, 492, 487,
	488, 490, 493, 494, 496, 484, 485, 486, 0, 495,
	483, 0, 0, 0, 497, 498, 499, 500, 0, 0,
	501, 0, 504, 505, 0, 0, 506, 0, 507, 0,
	0, 509, 510, 511, 0, 0, 512, 513, 0, 0,
	514, 0, 0, 515, 516, 508, 517, 518, 519, 520,
	521, 522, 523, 524, 525, 0, 526, 527, 0, 528,
	529, 530, 0, 531, 532, 533, 0, 534, 0, 535,
	536, 0, 537, 538, 539, 0, 540, 541, 542, 543,
	544, 545, 546, 0, 547, 548, 550, 549, 551, 0,
	552, 0, 553, 554, 555, 0, 0, 0, 0, 0,
	556, 557, 559, 0, 560, 561, 562, 563, 558, 564,
	565, 566, 567, 568, 0, 569, 570, 571, 0, 572,
	573, 574, 575, 576, 0, 577, 0, 578, 579, 586,
	587, 588, 580, 581, 582, 589, 590, 591, 592, 593,
	0, 595, 596, 594, 597, 598, 599, 1419, 600, 601,
	583, 584, 602, 603, 0, 604, 605, 606, 607, 608,
	609, 610, 0, 0, 611, 0, 612, 613, 614, 615,
	616, 618, 585, 619, 624, 625, 0, 620, 621, 622,
	623, 0, 627, 628, 0, 629, 630, 0, 626, 617,
	0, 631, 632, 633, 634, 635, 636, 0, 637, 638,
	0, 639, 0, 0, 0, 0, 0, 649, 0, 640,
	641, 642, 643, 0, 644, 0, 0, 645, 646, 647,
	648, 0, 650, 651, 0, 0, 652, 653, 655, 657,
	658, 654, 656, 659, 0, 660, 0, 0, 661, 662,
	663, 0, 0, 0, 0, 665, 664, 666, 667, 668,
	0, 669, 670, 1414, 0, 1416, 0, 671, 672, 0,
	673, 674, 675, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 291, 292, 294, 293, 295, 296, 297, 298,
	0, 299, 300, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 301, 0, 302, 303, 0, 304, 305, 306,
	307, 308, 309, 310, 0, 0, 0, 311, 0, 312,
	0, 0, 0, 313, 314, 315, 316, 317, 318, 0,
	0, 0, 319, 0, 0, 0, 0, 320, 321, 0,
	0, 0, 0, 322, 323, 324, 325, 326, 327, 328,
	329, 0, 0, 331, 332, 333, 330, 334, 0, 335,
	0, 336, 337, 338, 339, 340, 341, 0, 342, 343,
	344, 0, 345, 346, 347, 0, 0, 0, 0, 0,
	0, 1418, 348, 349, 350, 351, 352, 0, 353, 355,
	0, 0, 0, 358, 354, 356, 0, 359, 357, 360,
	0, 361, 362, 363, 0, 0, 364, 365, 366, 0,
	367, 368, 369, 0, 370, 371, 372, 0, 373, 374,
	0, 375, 376, 377, 379, 381, 378, 380, 382, 383,
	384, 385, 0, 0, 386, 0, 0, 0, 0, 0,
	0, 0, 387, 388, 389, 0, 0, 0, 0, 390,
	0, 391, 392, 393, 0, 394, 0, 0, 395, 396,
	397, 0, 0, 398, 399, 400, 401, 402, 403, 404,
	405, 406, 0, 407, 0, 0, 0, 408, 0, 409,
	410, 411, 412, 413, 414, 1413, 0, 0, 502, 0,
	415, 416, 0, 417, 418, 419, 420, 421, 0, 0,
	0, 0, 422, 423, 424, 0, 0, 503, 425, 0,
	0, 0, 0, 0, 426, 427, 0, 0, 0, 428,
	429, 430, 0, 431, 0, 0, 0, 432, 433, 434,
	435, 436, 437, 0, 438, 440, 439, 0, 441, 0,
	0, 442, 443, 0, 0, 444, 445, 446, 447, 448,
	449, 452, 0, 0, 450, 451, 453, 454, 0, 455,
	456, 458, 461, 457, 459, 460, 462, 475, 463, 464,
	465, 466, 467, 468, 469, 470, 471, 472, 473, 474,
	477, 0, 476, 0, 478, 479, 480, 481, 482, 489,
	491, 492, 487, 488, 490, 493, 494, 496, 484, 485,
	486, 0, 495, 483, 0, 0, 0, 497, 498, 499,
	500, 0, 0, 501, 0, 504, 505, 0, 0, 506,
	0, 507, 0, 0, 509, 510, 511, 0, 0, 512,
	513, 0, 0, 514, 0, 0, 515, 516, 508, 517,
	518, 519, 520, 521, 522, 523, 524, 525, 0, 526,
	527, 0, 528, 529, 530, 0, 531, 532, 533, 0,
	534, 0, 535, 536, 0, 537, 538, 539, 0, 540,
	541, 542, 543, 544, 545, 546, 0, 547, 548, 550,
	549, 551, 0, 552, 0, 553, 554, 555, 0, 0,
	0, 0, 0, 556, 557, 559, 0, 560, 561, 562,
	563, 558, 564, 565, 566, 567, 568, 0, 569, 570,
	571, 0, 572, 573, 574, 575, 576, 0, 577, 0,
	578, 579, 586, 587, 588, 580, 581, 582, 589, 590,
	591, 592, 593, 0, 595, 596, 594, 597, 598, 599,
	1419, 600, 601, 583, 584, 602, 603, 0, 604, 605,
	606, 607, 608, 609, 610, 0, 0, 611, 0, 612,
	613, 614, 615, 616, 618, 585, 619, 624, 625, 0,
	620, 621, 622, 623, 0, 627, 628, 0, 629, 630,
	0, 626, 617, 0, 631, 632, 633, 634, 635, 636,
	0, 637, 638, 0, 639, 0, 0, 0, 0, 0,
	649, 0, 640, 641, 642, 643, 0, 644, 0, 0,
	645, 646, 647, 648, 0, 650, 651, 0, 0, 652,
	653, 655, 657, 658, 654, 656, 659, 0, 660, 0,
	0, 661, 662, 663, 0, 0, 0, 0, 665, 664,
	666, 667, 668, 0, 669, 670, 2221, 0, 1416, 0,
	671, 672, 0, 673, 674, 675, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 291, 292, 294, 293, 295,
	296, 297, 298, 0, 299, 300, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 301, 0, 302, 303, 0,
	304, 305, 306, 307, 308, 309, 310, 0, 0, 0,
	311, 0, 312, 0, 0, 0, 313, 314, 315, 316,
	317, 318, 0, 0, 0, 319, 0, 0, 0, 0,
	320, 321, 0, 0, 0, 0, 322, 323, 324, 325,
	326, 327, 328, 329, 0, 0, 331, 332, 333, 330,
	334, 0, 335, 0, 336, 337, 338, 339, 340, 341,
	0, 342, 343, 344, 0, 345, 346, 347, 0, 0,
	0, 0, 0, 0, 1418, 348, 349, 350, 351, 352,
	0, 353, 355, 0, 0, 0, 358, 354, 356, 0,
	359, 357, 360, 0, 361, 362, 363, 0, 0, 364,
	365, 366, 0, 367, 368, 369, 0, 370, 371, 372,
	0, 373, 374, 0, 375, 376, 377, 379, 381, 378,
	380, 382, 383, 384, 385, 0, 0, 386, 0, 0,
	0, 0, 0, 0, 0, 387, 388, 389, 0, 0,
	0, 0, 390, 0, 391, 392, 393, 0, 394, 0,
	0, 395, 396, 397, 0, 0, 398, 399, 400, 401,
	402, 403, 404, 405, 406, 0, 407, 0, 0, 0,
	408, 0, 409, 410, 411, 412, 413, 414, 0, 0,
	0, 502, 0, 415, 416, 0, 417, 418, 419, 420,
	421, 0, 0, 0, 0, 422, 423, 424, 0, 0,
	503, 425, 0, 0, 0, 0, 0, 426, 427, 0,
	0, 0, 428, 429, 430, 0, 431, 0, 0, 0,
	432, 433, 434, 435, 436, 437, 0, 438, 440, 439,
	0, 441, 0, 0, 442, 443, 0, 0, 444, 445,
	446, 447, 448, 449, 452, 0, 0, 450, 451, 453,
	454, 0, 455, 456, 458, 461, 457, 459, 460, 462,
	475, 463, 464, 465, 466, 467, 468, 469, 470, 471,
	472, 473, 474, 477, 0, 476, 0, 478, 479, 480,
	481, 482, 489, 491, 492, 487, 488, 490, 493, 494,
	496, 484, 485, 486, 0, 495, 483, 0, 0, 0,
	497, 498, 499, 500, 0, 0, 501, 0, 504, 505,
	0, 0, 506, 0, 507, 0, 0, 509, 510, 511,
	0, 0, 512, 513, 0, 0, 514, 0, 0, 515,
	516, 508, 517, 518, 519, 520, 521, 522, 523, 524,
	525, 0, 526, 527, 0, 528, 529, 530, 0, 531,
	532, 533, 0, 534, 0, 535, 536, 0, 537, 538,
	539, 0, 540, 541, 542, 543, 544, 545, 546, 0,
	547, 548, 550, 549, 551, 0, 552, 0, 553, 554,
	555, 0, 0, 0, 0, 0, 556, 557, 559, 0,
	560, 561, 562, 563, 558, 564, 565, 566, 567, 568,
	0, 569, 570, 571, 0, 572, 573, 574, 575, 576,
	0, 577, 0, 578, 579, 586, 587, 588, 580, 581,
	582, 589, 590, 591, 592, 593, 0, 595, 596, 594,
	597, 598, 599, 1419, 600, 601, 583, 584, 602, 603,
	0, 604, 605, 606, 607, 608, 609, 610, 0, 0,
	611, 0, 612, 613, 614, 615, 616, 618, 585, 619,
	624, 625, 0, 620, 621, 622, 623, 0, 627, 628,
	0, 629, 630, 0, 626, 617, 0, 631, 632, 633,
	634, 635, 636, 0, 637, 638, 0, 639, 0, 0,
	0, 0, 0, 649, 0, 640, 641, 642, 643, 0,
	644, 0, 0, 645, 646, 647, 648, 0, 650, 651,
	0, 0, 652, 653, 655, 657, 658, 654, 656, 659,
	0, 660, 0, 0, 661, 662, 663, 0, 0, 0,
	0, 665, 664, 666, 667, 668, 0, 669, 670, 2188,
	0, 1416, 0, 671, 672, 0, 673, 674, 675, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 291, 292,
	294, 293, 295, 296, 297, 298, 0, 299, 300, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 301, 0,
	302, 303, 0, 304, 305, 306, 307, 308, 309, 310,
	0, 0, 0, 311, 0, 312, 0, 0, 0, 313,
	314, 315, 316, 317, 318, 0, 0, 0, 319, 0,
	0, 0, 0, 320, 321, 0, 0, 0, 0, 322,
	323, 324, 325, 326, 327, 328, 329, 0, 0, 331,
	332, 333, 330, 334, 0, 335, 0, 336, 337, 338,
	339, 340, 341, 0, 342, 343, 344, 0, 345, 346,
	347, 0, 0, 0, 0, 0, 0, 1418, 348, 349,
	350, 351, 352, 0, 353, 355, 0, 0, 0, 358,
	354, 356, 0, 359, 357, 360, 0, 361, 362, 363,
	0, 0, 364, 365, 366, 0, 367, 368, 369, 0,
	370, 371, 372, 0, 373, 374, 0, 375, 376, 377,
	379, 381, 378, 380, 382, 383, 384, 385, 0, 0,
	386, 0, 0, 0, 0, 0, 0, 0, 387, 388,
	389, 0, 0, 0, 0, 390, 0, 391, 392, 393,
	0, 394, 0, 0, 395, 396, 397, 0, 0, 398,
	399, 400, 401, 402, 403, 404, 405, 406, 0, 407,
	0, 0, 0, 408, 0, 409, 410, 411, 412, 413,
	414, 0, 0, 0, 502, 0, 415, 416, 0, 417,
	418, 419, 420, 421, 0, 0, 0, 0, 422, 423,
	424, 0, 0, 503, 425, 0, 0, 0, 0, 0,
	426, 427, 0, 0, 0, 428, 429, 430, 0, 431,
	0, 0, 0, 432, 433, 434, 435, 436, 437, 0,
	438, 440, 439, 0, 441, 0, 0, 442, 443, 0,
	0, 444, 445, 446, 447, 448, 449, 452, 0, 0,
	450, 451, 453, 454, 0, 455, 456, 458, 461, 457,
	459, 460, 462, 475, 463, 464, 465, 466, 467, 468,
	469, 470, 471, 472, 473, 474, 477, 0, 476, 0,
	478, 479, 480, 481, 482, 489, 491, 492, 487, 488,
	490, 493, 494, 496, 484, 485, 486, 0, 495, 483,
	0, 0, 0, 497, 498, 499, 500, 0, 0, 501,
	0, 504, 505, 0, 0, 506, 0, 507, 0, 0,
	509, 510, 511, 0, 0, 512, 513, 0, 0, 514,
	0, 0, 515, 516, 508, 517, 518, 519, 520, 521,
	522, 523, 524, 525, 0, 526, 527, 0, 528, 529,
	530, 0, 531, 532, 533, 0, 534, 0, 535, 536,
	0, 537, 538, 539, 0, 540, 541, 542, 543, 544,
	545, 546, 0, 547, 548, 550, 549, 551, 0, 552,
	0, 553, 554, 555, 0, 0, 0, 0, 0, 556,
	557, 559, 0, 560, 561, 562, 563, 558, 564, 565,
	566, 567, 568, 0, 569, 570, 571, 0, 572, 573,
	574, 575, 576, 0, 577, 0, 578, 579, 586, 587,
	588, 580, 581, 582, 589, 590, 591, 592, 593, 0,
	595, 596, 594, 597, 598, 599, 1419, 600, 601, 583,
	584, 602, 603, 0, 604, 605, 606, 607, 608, 609,
	610, 0, 0, 611, 0, 612, 613, 614, 615, 616,
	618, 585, 619, 624, 625, 0, 620, 621, 622, 623,
	0, 627, 628, 0, 629, 630, 0, 626, 617, 0,
	631, 632, 633, 634, 635, 636, 0, 637, 638, 0,
	639, 0, 0, 0, 0, 0, 649, 0, 640, 641,
	642, 643, 0, 644, 0, 0, 645, 646, 647, 648,
	0, 650, 651, 0, 0, 652, 653, 655, 657, 658,
	654, 656, 659, 0, 660, 0, 0, 661, 662, 663,
	0, 0, 0, 0, 665, 664, 666, 667, 668, 1416,
	669, 670, 0, 0, 0, 0, 671, 672, 0, 673,
	674, 675, 0, 0, 0, 0, 291, 292, 294, 293,
	295, 296, 297, 298, 0, 299, 300, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 301, 0, 302, 303,
	0, 304, 305, 306, 307, 308, 309, 310, 0, 0,
	0, 311, 0, 312, 0, 0, 0, 313, 314, 315,
	316, 317, 318, 0, 0, 0, 319, 0, 0, 0,
	0, 320, 321, 0, 0, 0, 0, 322, 323, 324,
	325, 326, 327, 328, 329, 0, 0, 331, 332, 333,
	330, 334, 0, 335, 0, 336, 337, 338, 339, 340,
	341, 0, 342, 343, 344, 0, 345, 346, 347, 0,
	0, 0, 0, 0, 0, 1418, 348, 349, 350, 351,
	352, 0, 353, 355, 0, 0, 0, 358, 354, 356,
	0, 359, 357, 360, 0, 361, 362, 363, 0, 0,
	364, 365, 366, 0, 367, 368, 369, 0, 370, 371,
	372, 0, 373, 374, 0, 375, 376, 377, 379, 381,
	378, 380, 382, 383, 384, 385, 0, 0, 386, 0,
	0, 0, 0, 0, 0, 0, 387, 388, 389, 0,
	0, 0, 0, 390, 0, 391, 392, 393, 0, 394,
	0, 0, 395, 396, 397, 0, 0, 398, 399, 400,
	401, 402, 403, 404, 405, 406, 0, 407, 0, 0,
	0, 408, 0, 409, 410, 411, 412, 413, 414, 0,
	0, 0, 502, 0, 415, 416, 0, 417, 418, 419,
	420, 421, 0, 0, 0, 0, 422, 423, 424, 0,
	0, 503, 425, 0, 0, 0, 0, 0, 426, 427,
	0, 0, 0, 428, 429, 430, 0, 431, 0, 0,
	0, 432, 433, 434, 435, 436, 437, 0, 438, 440,
	439, 0, 441, 0, 0, 442, 443, 0, 0, 444,
	445, 446, 447, 448, 449, 452, 0, 0, 450, 451,
	453, 454, 0, 455, 456, 458, 461, 457, 459, 460,
	462, 475, 463, 464, 465, 466, 467, 468, 469, 470,
	471, 472, 473, 474, 477, 0, 476, 0, 478, 479,
	480, 481, 482, 489, 491, 492, 487, 488, 490, 493,
	494, 496, 484, 485, 486, 0, 495, 483, 0, 0,
	0, 497, 498, 499, 500, 0, 0, 501, 0, 504,
	505, 0, 0, 506, 0, 507, 0, 0, 509, 510,
	511, 0, 0, 512, 513, 0, 0, 514, 0, 0,
	515, 516, 508, 517, 518, 519, 520, 521, 522, 523,
	524, 525, 0, 526, 527, 0, 528, 529, 530, 0,
	531, 532, 533, 0, 534, 0, 535, 536, 0, 537,
	538, 539, 0, 540, 541, 542, 543, 544, 545, 546,
	0, 547, 548, 550, 549, 551, 0, 552, 0, 553,
	554, 555, 0, 0, 0, 0, 0, 556, 557, 559,
	0, 560, 561, 562, 563, 558, 564, 565, 566, 567,
	568, 0, 569, 570, 571, 0, 572, 573, 574, 575,
	576, 0, 577, 0, 578, 579, 586, 587, 588, 580,
	581, 582, 589, 590, 591, 592, 593, 0, 595, 596,
	594, 597, 598, 599, 1419, 600, 601, 583, 584, 602,
	603, 0, 604, 605, 606, 607, 608, 609, 610, 0,
	0, 611, 0, 612, 613, 614, 615, 616, 618, 585,
	619, 624, 625, 0, 620, 621, 622, 623, 0, 627,
	628, 0, 629, 630, 0, 626, 617, 0, 631, 632,
	633, 634, 635, 636, 0, 637, 638, 0, 639, 0,
	0, 0, 0, 0, 649, 0, 640, 641, 642, 643,
	0, 644, 0, 0, 645, 646, 647, 648, 0, 650,
	651, 0, 0, 652, 653, 655, 657, 658, 654, 656,
	659, 0, 660, 0, 0, 661, 662, 663, 0, 0,
	0, 0, 665, 664, 666, 667, 668, 0, 669, 670,
	0, 0, 0, 0, 671, 672, 0, 673, 674, 675,
	1921, 1922, 0, 1954, 1955, 1956, 1965, 1966, 1967, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1958, 1952, 0, 0, 0, 0, 0,
	1921, 1922, 1924, 1954, 1955, 1956, 1965, 1966, 1967, 0,
	0, 0, 1971, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1958, 1952, 0, 0, 0, 0, 1977,
	0, 0, 1924, 0, 0, 0, 0, 0, 1923, 0,
	0, 0, 1971, 0, 0, 0, 0, 0, 0, 1943,
	0, 0, 0, 0, 0, 0, 0, 0, 1940, 1977,
	0, 0, 0, 0, 0, 0, 0, 0, 1923, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1943,
	0, 0, 0, 0, 0, 0, 0, 0, 1940, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1946, 1947, 1948, 1949,
	0, 0, 0, 0, 0, 0, 1929, 1921, 1922, 0,
	1954, 1955, 1956, 1965, 1966, 1967, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1946, 1947, 1948, 1949,
	1958, 1952, 0, 0, 0, 0, 1929, 0, 0, 1924,
	0, 0, 0, 0, 0, 0, 0, 1962, 0, 1971,
	1972, 0, 0, 0, 0, 0, 0, 1951, 1953, 0,
	0, 0, 0, 0, 0, 0, 1977, 0, 0, 0,
	0, 0, 0, 0, 1968, 1923, 1969, 1962, 0, 0,
	1972, 0, 0, 1938, 1939, 0, 1943, 1951, 1953, 0,
	0, 0, 0, 0, 0, 1940, 0, 0, 0, 0,
	0, 1960, 0, 0, 1968, 0, 1969, 0, 0, 0,
	0, 0, 0, 1938, 1939, 0, 1944, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1960, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1944, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1970, 0, 0, 0, 0, 0,
	0, 0, 0, 1946, 1947, 1948, 1949, 0, 0, 0,
	0, 0, 0, 1929, 0, 1959, 0, 0, 0, 0,
	0, 0, 0, 0, 1970, 0, 1974, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1959, 0, 0, 0, 0,
	0, 0, 0, 0, 1962, 0, 1974, 1972, 0, 0,
	0, 0, 0, 0, 1951, 1953, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1968, 0, 1969, 1950, 0, 0, 0, 0, 0,
	1938, 1939, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1945, 1960, 0,
	0, 0, 0, 0, 1950, 0, 0, 0, 0, 0,
	0, 0, 0, 1944, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1963, 0, 1945, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1921, 1922, 0, 1954, 1955, 1956, 1965, 1966,
	1967, 0, 0, 0, 0, 1963, 0, 0, 1976, 0,
	0, 1970, 0, 0, 0, 1958, 1952, 0, 0, 0,
	0, 0, 0, 0, 1924, 0, 0, 0, 0, 0,
	0, 0, 1959, 0, 1971, 0, 0, 0, 1976, 0,
	0, 0, 0, 1974, 0, 0, 0, 0, 0, 0,
	0, 1977, 0, 0, 0, 0, 0, 0, 0, 0,
	1923, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1943, 0, 0, 0, 0, 0, 0, 0, 0,
	1940, 0, 0, 0, 1961, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1935, 1936, 1942, 1964, 1941,
	1937, 1950, 1934, 1932, 1933, 1925, 1926, 1927, 1928, 1930,
	1931, 0, 0, 0, 1961, 0, 4808, 0, 0, 0,
	0, 0, 0, 0, 1945, 1935, 1936, 1942, 1964, 1941,
	1937, 0, 1934, 1932, 1933, 1925, 1926, 1927, 1928, 1930,
	1931, 0, 0, 0, 0, 0, 4807, 0, 0, 0,
	0, 0, 1963, 0, 0, 0, 0, 0, 1946, 1947,
	1948, 1949, 0, 0, 0, 0, 0, 0, 1929, 1921,
	1922, 0, 1954, 1955, 1956, 1965, 1966, 1967, 0, 0,
	0, 0, 0, 0, 0, 1976, 0, 0, 0, 0,
	0, 0, 1958, 1952, 0, 0, 0, 0, 0, 0,
	0, 1924, 0, 0, 0, 0, 0, 0, 0, 1962,
	0, 1971, 1972, 0, 0, 0, 0, 0, 0, 1951,
	1953, 0, 0, 0, 0, 0, 0, 0, 1977, 0,
	0, 0, 0, 0, 0, 0, 1968, 1923, 1969, 0,
	0, 0, 0, 0, 0, 1938, 1939, 0, 1943, 0,
	0, 0, 0, 0, 0, 0, 0, 1940, 0, 0,
	0, 1961, 0, 1960, 0, 0, 0, 0, 0, 0,
	0, 0, 1935, 1936, 1942, 1964, 1941, 1937, 1944, 1934,
	1932, 1933, 1925, 1926, 1927, 1928, 1930, 1931, 0, 0,
	0, 0, 0, 4617, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1970, 0, 0, 0,
	0, 0, 0, 0, 0, 1946, 1947, 1948, 1949, 0,
	0, 0, 0, 0, 0, 1929, 0, 1959, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1974, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1962, 0, 0, 1972,
	0, 0, 0, 0, 0, 0, 1951, 1953, 0, 0,
	0, 0, 0, 0, 1921, 1922, 0, 1954, 1955, 1956,
	1965, 1966, 1967, 1968, 0, 1969, 1950, 0, 0, 0,
	0, 0, 1938, 1939, 0, 0, 0, 1958, 1952, 0,
	0, 0, 0, 0, 0, 0, 1924, 0, 0, 1945,
	1960, 0, 0, 0, 0, 0, 1971, 0, 0, 0,
	0, 0, 0, 0, 0, 1944, 0, 0, 0, 0,
	0, 0, 0, 1977, 0, 0, 0, 1963, 0, 0,
	0, 0, 1923, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1943, 0, 0, 0, 0, 0, 0,
	0, 0, 1940, 0, 0, 0, 0, 0, 0, 0,
	1976, 0, 0, 1970, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1959, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1974, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1946, 1947, 1948, 1949, 0, 0, 1961, 0, 0, 0,
	1929, 0, 0, 0, 0, 0, 0, 1935, 1936, 1942,
	1964, 1941, 1937, 1950, 1934, 1932, 1933, 1925, 1926, 1927,
	1928, 1930, 1931, 0, 0, 0, 0, 0, 4443, 0,
	0, 0, 0, 0, 0, 0, 1945, 0, 0, 0,
	0, 1962, 0, 0, 1972, 0, 0, 0, 0, 0,
	0, 1951, 1953, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1963, 0, 0, 0, 1968, 0,
	1969, 0, 0, 0, 0, 0, 0, 1938, 1939, 0,
	0, 0, 0, 1921, 1922, 0, 1954, 1955, 1956, 1965,
	1966, 1967, 0, 0, 0, 1960, 0, 1976, 0, 0,
	0, 0, 0, 0, 0, 0, 1958, 1952, 0, 0,
	1944, 0, 0, 0, 0, 1924, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1971, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1977, 0, 0, 0, 0, 0, 0, 0,
	0, 1923, 0, 0, 0, 0, 0, 0, 1970, 0,
	0, 0, 1943, 0, 0, 0, 0, 0, 0, 0,
	0, 1940, 0, 1961, 0, 0, 0, 0, 0, 1959,
	0, 0, 0, 0, 1935, 1936, 1942, 1964, 1941, 1937,
	1974, 1934, 1932, 1933, 1925, 1926, 1927, 1928, 1930, 1931,
	0, 0, 0, 0, 0, 4357, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1921, 1922, 0, 1954, 1955, 1956, 1965, 1966, 1967, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1950, 1946,
	1947, 1948, 1949, 1958, 1952, 0, 0, 0, 0, 1929,
	0, 0, 1924, 0, 0, 0, 0, 0, 0, 0,
	0, 1945, 1971, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1977,
	0, 0, 0, 0, 0, 0, 0, 0, 1923, 1963,
	1962, 0, 0, 1972, 0, 0, 0, 0, 0, 1943,
	1951, 1953, 0, 0, 0, 0, 0, 0, 1940, 0,
	0, 0, 0, 0, 0, 0, 0, 1968, 0, 1969,
	0, 0, 1976, 0, 0, 0, 1938, 1939, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1960, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1944,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1946, 1947, 1948, 1949,
	0, 0, 0, 0, 0, 0, 1929, 0, 1961, 0,
	0, 0, 0, 0, 0, 0, 0, 1970, 0, 1935,
	1936, 1942, 1964, 1941, 1937, 0, 1934, 1932, 1933, 1925,
	1926, 1927, 1928, 1930, 1931, 0, 0, 0, 1959, 0,
	4356, 0, 0, 0, 0, 0, 0, 1962, 0, 1974,
	1972, 0, 0, 0, 0, 0, 0, 1951, 1953, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1968, 0, 1969, 0, 0, 0,
	0, 0, 0, 1938, 1939, 0, 0, 0, 0, 1921,
	1922, 0, 1954, 1955, 1956, 1965, 1966, 1967, 0, 0,
	0, 1960, 0, 0, 0, 0, 0, 1950, 0, 0,
	0, 0, 1958, 1952, 0, 0, 1944, 0, 0, 0,
	0, 1924, 0, 0, 0, 0, 0, 0, 0, 0,
	1945, 1971, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1977, 0,
	0, 0, 0, 0, 0, 0, 0, 1923, 1963, 0,
	0, 0, 0, 0, 1970, 0, 0, 0, 1943, 0,
	0, 0, 0, 0, 0, 0, 0, 1940, 0, 0,
	0, 0, 0, 0, 0, 1959, 0, 0, 0, 0,
	0, 1976, 0, 0, 0, 0, 1974, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1950, 1946, 1947, 1948, 1949, 0,
	0, 0, 0, 0, 0, 1929, 0, 1961, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1945, 1935, 1936,
	1942, 1964, 1941, 1937, 0, 1934, 1932, 1933, 1925, 1926,
	1927, 1928, 1930, 1931, 0, 0, 0, 0, 0, 4355,
	0, 0, 0, 0, 0, 1963, 1962, 0, 0, 1972,
	0, 0, 0, 0, 0, 0, 1951, 1953, 0, 0,
	0, 0, 0, 0, 1921, 1922, 0, 1954, 1955, 1956,
	1965, 1966, 1967, 1968, 0, 1969, 0, 0, 1976, 0,
	0, 0, 1938, 1939, 0, 0, 0, 1958, 1952, 0,
	0, 0, 0, 0, 0, 0, 1924, 0, 0, 0,
	1960, 0, 0, 0, 0, 0, 1971, 0, 0, 0,
	0, 0, 0, 0, 0, 1944, 0, 0, 0, 0,
	0, 0, 0, 1977, 0, 0, 0, 0, 0, 0,
	0, 0, 1923, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1943, 0, 0, 0, 0, 0, 0,
	0, 0, 1940, 0, 1961, 0, 0, 0, 0, 0,
	0, 0, 0, 1970, 0, 1935, 1936, 1942, 1964, 1941,
	1937, 0, 1934, 1932, 1933, 1925, 1926, 1927, 1928, 1930,
	1931, 0, 0, 0, 1959, 0, 3984, 0, 0, 0,
	0, 0, 0, 0, 0, 1974, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1946, 1947, 1948, 1949, 0, 0, 0, 0, 0, 0,
	1929, 1921, 1922, 0, 1954, 1955, 1956, 1965, 1966, 1967,
	0, 0, 0, 1950, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1958, 1952, 0, 0, 0, 0,
	0, 0, 0, 1924, 0, 0, 1945, 0, 0, 0,
	0, 1962, 0, 1971, 1972, 0, 0, 0, 0, 0,
	0, 1951, 1953, 0, 0, 0, 0, 0, 0, 0,
	1977, 0, 0, 0, 1963, 0, 0, 0, 1968, 1923,
	1969, 0, 0, 0, 0, 0, 0, 1938, 1939, 0,
	1943, 0, 0, 0, 0, 0, 0, 0, 0, 1940,
	0, 0, 0, 0, 0, 1960, 0, 1976, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1944, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1970, 0,
	0, 0, 0, 0, 0, 0, 0, 1946, 1947, 1948,
	1949, 0, 0, 1961, 0, 0, 0, 1929, 0, 1959,
	0, 0, 0, 0, 1935, 1936, 1942, 1964, 1941, 1937,
	1974, 1934, 1932, 1933, 1925, 1926, 1927, 1928, 1930, 1931,
	0, 0, 0, 0, 0, 3461, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1962, 0,
	0, 1972, 0, 0, 0, 0, 0, 0, 1951, 1953,
	0, 0, 0, 0, 0, 0, 1921, 1922, 0, 1954,
	1955, 1956, 1965, 1966, 1967, 1968, 0, 1969, 1950, 0,
	0, 0, 0, 0, 1938, 1939, 0, 0, 0, 1958,
	1952, 0, 0, 0, 0, 0, 0, 0, 1924, 0,
	0, 1945, 1960, 0, 0, 0, 0, 0, 1971, 0,
	0, 0, 0, 0, 0, 0, 0, 1944, 0, 0,
	0, 0, 0, 0, 0, 1977, 0, 0, 0, 1963,
	0, 0, 0, 0, 1923, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1943, 0, 0, 0, 0,
	0, 0, 0, 0, 1940, 0, 0, 0, 0, 0,
	0, 0, 1976, 0, 0, 1970, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1959, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1974, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1946, 1947, 1948, 1949, 0, 0, 1961, 0,
	0, 0, 1929, 0, 0, 0, 0, 0, 0, 1935,
	1936, 1942, 1964, 1941, 1937, 1950, 1934, 1932, 1933, 1925,
	1926, 1927, 1928, 1930, 1931, 0, 0, 0, 0, 0,
	3460, 0, 0, 0, 0, 0, 0, 0, 1945, 0,
	0, 0, 0, 1962, 0, 0, 1972, 0, 0, 0,
	0, 0, 0, 1951, 1953, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1963, 0, 0, 0,
	1968, 0, 1969, 0, 0, 0, 0, 0, 0, 1938,
	1939, 0, 0, 0, 0, 1921, 1922, 0, 1954, 1955,
	1956, 1965, 1966, 1967, 0, 0, 0, 1960, 0, 1976,
	0, 0, 0, 0, 0, 0, 0, 0, 1958, 1952,
	0, 0, 1944, 0, 0, 0, 0, 1924, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1971, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1977, 0, 0, 0, 0, 0,
	0, 0, 0, 1923, 0, 0, 0, 0, 0, 0,
	1970, 0, 0, 0, 1943, 0, 0, 0, 0, 0,
	0, 0, 0, 1940, 0, 1961, 0, 0, 0, 0,
	0, 1959, 0, 0, 0, 0, 1935, 1936, 1942, 1964,
	1941, 1937, 1974, 1934, 1932, 1933, 1925, 1926, 1927, 1928,
	1930, 1931, 0, 0, 0, 0, 0, 3459, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1921, 1922, 0, 1954, 1955, 1956, 1965, 1966,
	1967, 0, 0, 0, 0, 0, 2367, 0, 0, 0,
	1950, 1946, 1947, 1948, 1949, 1958, 1952, 0, 0, 0,
	0, 1929, 0, 0, 1924, 0, 0, 0, 0, 0,
	0, 0, 0, 1945, 1971, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1977, 0, 0, 0, 0, 0, 0, 0, 0,
	1923, 1963, 1962, 0, 0, 1972, 0, 0, 0, 0,
	0, 1943, 1951, 1953, 0, 0, 0, 0, 0, 0,
	1940, 0, 0, 0, 0, 0, 0, 0, 0, 1968,
	0, 1969, 0, 0, 1976, 0, 0, 0, 1938, 1939,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1960, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2368, 0,
	0, 1944, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1946, 1947,
	1948, 1949, 0, 0, 0, 0, 0, 0, 1929, 0,
	1961, 0, 0, 0, 0, 0, 0, 0, 0, 1970,
	0, 1935, 1936, 1942, 1964, 1941, 1937, 0, 1934, 1932,
	1933, 1925, 1926, 1927, 1928, 1930, 1931, 0, 0, 0,
	1959, 0, 3458, 0, 0, 0, 0, 0, 0, 1962,
	0, 1974, 1972, 0, 0, 0, 0, 0, 0, 1951,
	1953, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1968, 0, 1969, 0,
	0, 0, 0, 0, 0, 1938, 1939, 0, 0, 0,
	0, 1921, 1922, 0, 1954, 1955, 1956, 1965, 1966, 1967,
	0, 0, 0, 1960, 0, 0, 0, 0, 0, 1950,
	0, 0, 0, 0, 1958, 1952, 0, 0, 1944, 0,
	0, 0, 0, 1924, 0, 0, 0, 0, 0, 0,
	0, 0, 1945, 1971, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1977, 0, 0, 0, 0, 0, 0, 0, 0, 1923,
	1963, 0, 0, 0, 0, 0, 1970, 0, 0, 0,
	1943, 0, 0, 0, 2300, 0, 0, 0, 0, 1940,
	0, 0, 0, 0, 0, 0, 0, 1959, 0, 0,
	0, 0, 0, 1976, 0, 0, 0, 0, 1974, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2298, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1950, 1946, 1947, 1948,
	1949, 0, 0, 0, 0, 0, 0, 1929, 0, 1961,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1945,
	1935, 1936, 1942, 1964, 1941, 1937, 0, 1934, 1932, 1933,
	1925, 1926, 1927, 1928, 1930, 1931, 0, 0, 0, 3423,
	0, 2369, 0, 0, 0, 0, 0, 1963, 1962, 0,
	0, 1972, 0, 0, 0, 0, 0, 0, 1951, 1953,
	0, 0, 0, 0, 0, 0, 1921, 1922, 0, 1954,
	1955, 1956, 1965, 1966, 1967, 1968, 0, 1969, 0, 0,
	1976, 0, 0, 0, 1938, 1939, 0, 0, 0, 1958,
	1952, 0, 0, 0, 0, 0, 0, 0, 1924, 0,
	0, 0, 1960, 0, 0, 0, 0, 0, 1971, 0,
	0, 0, 0, 0, 0, 0, 0, 1944, 0, 0,
	0, 0, 0, 0, 2370, 1977, 0, 0, 0, 0,
	0, 0, 0, 0, 1923, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1943, 0, 0, 0, 0,
	0, 0, 0, 0, 1940, 0, 1961, 0, 0, 0,
	0, 0, 0, 0, 0, 1970, 0, 1935, 1936, 1942,
	1964, 1941, 1937, 0, 1934, 1932, 1933, 1925, 1926, 1927,
	1928, 1930, 1931, 0, 0, 0, 1959, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1974, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1946, 1947, 1948, 1949, 0, 0, 0, 0,
	0, 0, 1929, 5107, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2299, 1950, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1945, 0,
	0, 0, 0, 1962, 0, 0, 1972, 0, 0, 0,
	0, 0, 0, 1951, 1953, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1963, 0, 0, 0,
	1968, 0, 1969, 0, 0, 0, 0, 0, 0, 1938,
	1939, 0, 0, 0, 0, 1921, 1922, 0, 1954, 1955,
	1956, 1965, 1966, 1967, 0, 0, 0, 1960, 0, 1976,
	0, 0, 0, 0, 0, 0, 0, 0, 1958, 1952,
	2297, 0, 1944, 0, 0, 0, 0, 1924, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1971, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1977, 0, 0, 0, 0, 0,
	0, 0, 0, 1923, 0, 0, 0, 0, 0, 0,
	1970, 0, 0, 0, 1943, 0, 0, 0, 0, 0,
	0, 0, 0, 1940, 0, 1961, 0, 0, 0, 0,
	0, 1959, 0, 0, 0, 0, 1935, 1936, 1942, 1964,
	1941, 1937, 1974, 1934, 1932, 1933, 1925, 1926, 1927, 1928,
	1930, 1931, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 5106, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1950, 1946, 1947, 1948, 1949, 0, 0, 0, 0, 0,
	0, 1929, 0, 3523, 0, 0, 0, 0, 0, 3522,
	0, 0, 0, 1945, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1963, 1962, 0, 0, 1972, 0, 0, 0, 0,
	0, 0, 1951, 1953, 0, 0, 0, 0, 0, 0,
	1921, 1922, 0, 1954, 1955, 1956, 1965, 1966, 1967, 1968,
	0, 1969, 0, 0, 1976, 0, 0, 0, 1938, 1939,
	0, 0, 0, 1958, 1952, 0, 0, 0, 0, 3394,
	0, 0, 1924, 0, 0, 0, 1960, 0, 0, 0,
	0, 0, 1971, 0, 0, 0, 0, 0, 0, 0,
	0, 1944, 0, 0, 0, 0, 0, 0, 0, 1977,
	0, 0, 0, 0, 0, 0, 0, 0, 1923, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1943,
	0, 0, 0, 0, 0, 0, 0, 0, 1940, 0,
	1961, 0, 0, 0, 0, 0, 0, 0, 0, 1970,
	0, 1935, 1936, 1942, 1964, 1941, 1937, 0, 1934, 1932,
	1933, 1925, 1926, 1927, 1928, 1930, 1931, 0, 0, 0,
	1959, 0, 0, 0, 0, 0, 0, 0, 3395, 0,
	0, 1974, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1946, 1947, 1948, 1949,
	2912, 0, 0, 0, 0, 0, 1929, 1921, 1922, 0,
	1954, 1955, 1956, 1965, 1966, 1967, 0, 0, 0, 1950,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1958, 1952, 0, 0, 0, 2911, 0, 0, 0, 1924,
	0, 0, 1945, 0, 0, 0, 0, 1962, 0, 1971,
	1972, 0, 0, 0, 0, 0, 0, 1951, 1953, 0,
	0, 0, 0, 0, 0, 0, 1977, 0, 0, 0,
	1963, 0, 0, 0, 1968, 1923, 1969, 0, 0, 0,
	0, 0, 0, 1938, 1939, 0, 1943, 0, 0, 0,
	0, 0, 0, 0, 0, 1940, 0, 0, 0, 0,
	0, 1960, 0, 1976, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1944, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1970, 0, 0, 0, 0, 0,
	0, 0, 0, 1946, 1947, 1948, 1949, 0, 0, 1961,
	0, 0, 0, 1929, 0, 1959, 0, 0, 0, 0,
	1935, 1936, 1942, 1964, 1941, 1937, 1974, 1934, 1932, 1933,
	1925, 1926, 1927, 1928, 1930, 1931, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1962, 0, 0, 1972, 0, 0,
	0, 0, 0, 0, 1951, 1953, 0, 0, 0, 0,
	0, 0, 1921, 1922, 0, 1954, 1955, 1956, 1965, 1966,
	1967, 1968, 0, 1969, 1950, 0, 0, 0, 0, 0,
	1938, 1939, 0, 0, 0, 1958, 1952, 0, 0, 0,
	0, 0, 0, 0, 1924, 0, 0, 1945, 1960, 0,
	0, 0, 0, 0, 1971, 0, 0, 0, 0, 0,
	0, 0, 0, 1944, 0, 0, 0, 0, 0, 0,
	0, 1977, 0, 0, 0, 1963, 0, 0, 0, 0,
	1923, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1943, 0, 0, 0, 0, 0, 0, 0, 0,
	1940, 0, 0, 0, 0, 0, 0, 0, 1976, 0,
	0, 1970, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1959, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1974, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1946, 1947,
	1948, 1949, 0, 0, 1961, 0, 0, 0, 1929, 0,
	4712, 0, 0, 0, 0, 1935, 1936, 1942, 1964, 1941,
	1937, 1950, 1934, 1932, 1933, 1925, 1926, 1927, 1928, 1930,
	1931, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1945, 0, 0, 0, 0, 1962,
	0, 0, 1972, 0, 0, 0, 0, 0, 0, 1951,
	1953, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1963, 0, 0, 0, 1968, 0, 1969, 0,
	0, 0, 0, 0, 0, 1938, 1939, 0, 0, 0,
	0, 1921, 1922, 0, 1954, 1955, 1956, 1965, 1966, 1967,
	0, 0, 0, 1960, 0, 1976, 0, 0, 0, 0,
	0, 0, 0, 0, 1958, 1952, 0, 0, 1944, 0,
	0, 0, 0, 1924, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1971, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1977, 0, 0, 0, 0, 0, 0, 0, 0, 1923,
	0, 0, 0, 0, 0, 0, 1970, 0, 0, 0,
	1943, 0, 0, 0, 0, 0, 0, 0, 0, 1940,
	0, 1961, 0, 0, 0, 0, 0, 1959, 0, 0,
	0, 0, 1935, 1936, 1942, 1964, 1941, 1937, 1974, 1934,
	1932, 1933, 1925, 1926, 1927, 1928, 1930, 1931, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1921, 1922,
	0, 1954, 1955, 1956, 1965, 1966, 1967, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1950, 1946, 1947, 1948,
	1949, 1958, 1952, 0, 0, 0, 0, 1929, 0, 0,
	1924, 0, 0, 0, 0, 0, 0, 0, 0, 1945,
	1971, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1977, 0, 0,
	0, 0, 0, 0, 0, 0, 1923, 1963, 1962, 0,
	0, 1972, 0, 0, 0, 0, 0, 1943, 1951, 1953,
	0, 0, 0, 0, 0, 0, 1940, 0, 0, 0,
	0, 0, 0, 0, 0, 1968, 0, 1969, 0, 0,
	1976, 0, 0, 0, 1938, 1939, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1960, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1944, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1946, 1947, 1948, 1949, 0, 0,
	0, 0, 0, 0, 1929, 0, 1961, 0, 0, 0,
	0, 0, 0, 0, 0, 1970, 0, 1935, 1936, 1942,
	1964, 1941, 1937, 0, 1934, 1932, 1933, 1925, 1926, 1927,
	1928, 1930, 1931, 0, 0, 0, 1959, 1153, 0, 0,
	0, 0, 0, 0, 0, 1962, 0, 1974, 1972, 0,
	0, 0, 0, 0, 0, 1951, 1953, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1968, 0, 1969, 0, 0, 0, 0, 0,
	0, 1938, 1939, 0, 0, 0, 0, 1921, 1922, 0,
	1954, 1955, 1956, 1965, 1966, 1967, 0, 0, 0, 1960,
	0, 0, 0, 0, 0, 1950, 0, 0, 0, 0,
	1958, 1952, 0, 0, 1944, 0, 0, 0, 0, 1924,
	0, 0, 0, 0, 0, 0, 0, 0, 1945, 1971,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1977, 0, 0, 0,
	0, 0, 0, 0, 0, 1923, 1963, 0, 0, 0,
	0, 0, 1970, 0, 0, 0, 1943, 0, 0, 0,
	0, 0, 0, 0, 0, 1940, 0, 0, 0, 0,
	0, 0, 0, 1959, 0, 0, 0, 0, 0, 1976,
	0, 0, 0, 0, 1974, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1950, 1946, 1947, 1948, 1949, 0, 0, 0,
	0, 0, 0, 1929, 0, 1961, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1945, 1935, 1936, 1942, 1964,
	1941, 1937, 0, 1934, 1932, 1933, 1925, 1926, 1927, 1928,
	1930, 1931, 0, 1921, 1922, 0, 1954, 1955, 1956, 1965,
	1966, 1967, 0, 1963, 1962, 0, 0, 1972, 0, 0,
	0, 0, 0, 0, 1951, 1953, 1958, 1952, 0, 0,
	0, 0, 0, 0, 0, 1924, 0, 0, 0, 0,
	0, 1968, 0, 1969, 0, 1971, 1976, 0, 0, 0,
	1938, 1939, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1977, 0, 0, 4488, 0, 0, 1960, 0,
	0, 1923, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1943, 1944, 0, 0, 0, 0, 0, 0,
	0, 1940, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1961, 0, 0, 0, 0, 0, 0, 0,
	0, 1970, 0, 1935, 1936, 1942, 1964, 1941, 1937, 0,
	1934, 1932, 1933, 1925, 1926, 1927, 1928, 1930, 1931, 0,
	0, 0, 1959, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1974, 0, 0, 0, 0, 0, 1946,
	1947, 1948, 1949, 0, 0, 0, 0, 0, 0, 1929,
	0, 4177, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1921, 1922, 0, 1954, 1955, 1956,
	1965, 1966, 1967, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1958, 1952, 0,
	1962, 1950, 0, 1972, 0, 0, 1924, 0, 0, 0,
	1951, 1953, 0, 0, 0, 0, 1971, 0, 0, 0,
	0, 0, 0, 0, 1945, 0, 0, 1968, 0, 1969,
	0, 0, 0, 1977, 0, 0, 1938, 1939, 0, 0,
	0, 0, 1923, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1963, 1943, 1960, 0, 0, 0, 0, 0,
	0, 0, 1940, 0, 0, 0, 0, 1921, 1922, 1944,
	1954, 1955, 1956, 1965, 1966, 1967, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1976, 0, 0, 0, 0,
	1958, 1952, 0, 0, 0, 0, 0, 0, 0, 1924,
	0, 0, 0, 0, 4178, 0, 0, 0, 0, 1971,
	0, 0, 0, 0, 0, 0, 0, 1970, 0, 0,
	0, 0, 0, 0, 0, 0, 1977, 0, 0, 0,
	0, 0, 0, 0, 0, 1923, 0, 0, 1959, 0,
	1946, 1947, 1948, 1949, 0, 0, 1943, 0, 0, 1974,
	1929, 0, 0, 0, 0, 1940, 0, 0, 0, 0,
	0, 1961, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1935, 1936, 1942, 1964, 1941, 1937, 0, 1934,
	1932, 1933, 1925, 1926, 1927, 1928, 1930, 1931, 0, 0,
	0, 1962, 0, 0, 1972, 0, 0, 0, 0, 0,
	0, 1951, 1953, 0, 0, 0, 0, 1950, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1968, 0,
	1969, 0, 0, 0, 0, 0, 0, 1938, 1939, 0,
	1945, 0, 0, 1946, 1947, 1948, 1949, 0, 0, 0,
	0, 0, 0, 1929, 0, 1960, 0, 0, 0, 0,
	0, 3529, 0, 0, 0, 0, 0, 0, 1963, 0,
	1944, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1962, 0, 0, 1972, 0, 0,
	0, 1976, 0, 0, 1951, 1953, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1970, 0,
	0, 1968, 0, 1969, 0, 0, 0, 0, 0, 0,
	1938, 1939, 0, 0, 0, 0, 0, 0, 0, 1959,
	0, 0, 0, 0, 0, 0, 0, 0, 1960, 0,
	1974, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1944, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1961, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1935, 1936,
	1942, 1964, 1941, 1937, 0, 1934, 1932, 1933, 1925, 1926,
	1927, 1928, 1930, 1931, 0, 0, 0, 0, 1950, 0,
	0, 1970, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1945, 1959, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1974, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1963,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1921, 1922, 0, 1954, 1955, 1956, 1965, 1966, 1967,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1976, 0, 1958, 1952, 0, 0, 0, 3524,
	0, 1950, 0, 1924, 0, 3965, 0, 0, 0, 0,
	0, 0, 0, 1971, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1945, 0, 0, 0, 0, 0,
	1977, 0, 0, 0, 0, 0, 0, 0, 0, 1923,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1943, 0, 1963, 0, 0, 0, 0, 0, 0, 1940,
	0, 0, 0, 0, 0, 0, 0, 0, 1961, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1935,
	1936, 1942, 1964, 1941, 1937, 1976, 1934, 1932, 1933, 1925,
	1926, 1927, 1928, 1930, 1931, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1946, 1947, 1948,
	1949, 0, 0, 0, 0, 0, 0, 1929, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1961, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1935, 1936, 1942, 1964, 1941, 1937, 0, 1934,
	1932, 1933, 1925, 1926, 1927, 1928, 1930, 1931, 1962, 0,
	0, 1972, 0, 0, 0, 0, 0, 0, 1951, 1953,
	0, 0, 0, 0, 0, 0, 1921, 1922, 0, 1954,
	1955, 1956, 1965, 1966, 1967, 1968, 0, 1969, 0, 0,
	0, 0, 0, 0, 1938, 1939, 0, 0, 0, 1958,
	1952, 0, 0, 0, 0, 0, 0, 0, 1924, 0,
	0, 0, 1960, 0, 0, 0, 0, 0, 1971, 0,
	0, 0, 0, 0, 0, 0, 0, 1944, 0, 0,
	0, 0, 0, 0, 0, 1977, 0, 0, 0, 0,
	0, 0, 0, 0, 1923, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1943, 0, 0, 0, 0,
	0, 0, 0, 0, 1940, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1970, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1959, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1974, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1946, 1947, 1948, 1949, 0, 0, 0, 0,
	0, 0, 1929, 1921, 1922, 0, 1954, 1955, 1956, 1965,
	1966, 1967, 0, 0, 0, 1950, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1958, 1952, 0, 0,
	0, 3462, 0, 0, 0, 1924, 0, 0, 1945, 0,
	0, 0, 0, 1962, 0, 1971, 1972, 0, 0, 0,
	0, 0, 0, 1951, 1953, 0, 0, 0, 0, 0,
	0, 0, 1977, 0, 0, 0, 1963, 0, 0, 0,
	1968, 1923, 1969, 0, 0, 0, 0, 0, 0, 1938,
	1939, 0, 1943, 0, 0, 0, 0, 0, 0, 0,
	0, 1940, 0, 0, 0, 0, 0, 1960, 0, 1976,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1944, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1970, 0, 0, 0, 0, 0, 0, 0, 0, 1946,
	1947, 1948, 1949, 0, 0, 1961, 0, 0, 0, 1929,
	0, 1959, 0, 0, 0, 0, 1935, 1936, 1942, 1964,
	1941, 1937, 1974, 1934, 1932, 1933, 1925, 1926, 1927, 1928,
	1930, 1931, 3489, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1962, 0, 0, 1972, 0, 0, 0, 0, 0, 0,
	1951, 1953, 0, 0, 0, 0, 0, 0, 1921, 1922,
	0, 1954, 1955, 1956, 1965, 1966, 1967, 1968, 0, 1969,
	1950, 0, 0, 0, 0, 0, 1938, 1939, 0, 0,
	0, 1958, 1952, 0, 0, 0, 0, 0, 0, 0,
	1924, 0, 0, 1945, 1960, 0, 0, 0, 0, 0,
	1971, 0, 0, 0, 0, 0, 0, 0, 0, 1944,
	0, 0, 0, 0, 0, 0, 0, 1977, 0, 0,
	0, 1963, 0, 0, 0, 0, 1923, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1943, 0, 0,
	0, 0, 0, 0, 0, 0, 1940, 0, 0, 0,
	0, 0, 0, 0, 1976, 0, 0, 1970, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1959, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1974,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1946, 1947, 1948, 1949, 0, 0,
	1961, 0, 0, 0, 1929, 0, 0, 0, 0, 0,
	0, 1935, 1936, 1942, 1964, 1941, 1937, 1950, 1934, 1932,
	1933, 1925, 1926, 1927, 1928, 1930, 1931, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1945, 0, 0, 0, 0, 1962, 0, 0, 1972, 0,
	0, 0, 0, 0, 0, 1951, 1953, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1963, 0,
	0, 0, 1968, 0, 1969, 0, 0, 0, 0, 0,
	0, 1938, 1939, 0, 0, 0, 0, 1921, 1922, 0,
	1954, 1955, 1956, 1965, 1966, 1967, 0, 0, 0, 1960,
	0, 1976, 0, 0, 0, 0, 0, 0, 0, 0,
	1958, 1952, 0, 0, 1944, 0, 0, 0, 0, 1924,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1971,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1977, 0, 0, 0,
	0, 0, 0, 0, 0, 1923, 0, 0, 0, 0,
	0, 0, 1970, 0, 0, 0, 1943, 0, 0, 0,
	0, 0, 0, 0, 0, 1940, 0, 1961, 0, 0,
	0, 0, 0, 1959, 0, 0, 0, 0, 1935, 1936,
	1942, 1964, 1941, 1937, 1974, 1934, 1932, 1933, 1925, 1926,
	1927, 1928, 1930, 1931, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1921, 1922, 0, 1954, 1955, 1956,
	1965, 1966, 1967, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1950, 1946, 1947, 1948, 1949, 1958, 1952, 0,
	0, 0, 0, 1929, 0, 0, 1924, 0, 0, 0,
	0, 0, 0, 0, 0, 1945, 1971, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1977, 0, 0, 0, 0, 0, 0,
	0, 0, 1923, 1963, 1962, 0, 0, 1972, 0, 0,
	0, 0, 0, 1943, 1951, 1953, 0, 0, 0, 0,
	0, 0, 1940, 0, 0, 0, 0, 0, 0, 0,
	0, 1968, 0, 1969, 0, 0, 1976, 0, 0, 0,
	1938, 1939, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1960, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1944, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1946, 1947, 1948, 1949, 0, 2480, 0, 0, 0, 0,
	1929, 0, 1961, 0, 0, 0, 0, 0, 0, 0,
	0, 1970, 0, 1935, 1936, 1942, 1964, 1941, 1937, 0,
	1934, 1932, 1933, 1925, 1926, 1927, 1928, 1930, 1931, 0,
	0, 0, 1959, 0, 0, 0, 0, 0, 0, 0,
	0, 1962, 0, 1974, 1972, 0, 0, 0, 0, 0,
	0, 1951, 1953, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1968, 0,
	1969, 0, 0, 0, 0, 0, 0, 1938, 1939, 0,
	0, 0, 0, 1921, 1922, 0, 1954, 1955, 1956, 1965,
	1966, 1967, 0, 0, 0, 1960, 0, 0, 0, 0,
	0, 1950, 0, 0, 0, 0, 0, 1952, 0, 0,
	1944, 0, 0, 0, 0, 1924, 0, 0, 0, 0,
	0, 0, 0, 0, 1945, 1971, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1977, 0, 0, 0, 0, 0, 0, 0,
	0, 1923, 1963, 0, 0, 0, 0, 0, 1970, 0,
	0, 0, 1943, 0, 0, 0, 0, 0, 0, 0,
	0, 1940, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1976, 0, 0, 0, 0,
	1974, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1950, 1946,
	1947, 1948, 1949, 0, 0, 0, 0, 0, 0, 1929,
	0, 1961, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1945, 1935, 1936, 1942, 1964, 1941, 1937, 0, 1934,
	1932, 1933, 1925, 1926, 1927, 1928, 1930, 1931, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1963,
	1962, 0, 0, 1972, 0, 0, 0, 0, 0, 0,
	1951, 1953, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1968, 0, 1969,
	0, 0, 1976, 0, 0, 0, 1938, 1939, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1960, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1944,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1961, 0,
	0, 0, 0, 0, 0, 0, 0, 1970, 0, 1935,
	1936, 1942, 1964, 1941, 1937, 0, 1934, 1932, 1933, 1925,
	1926, 1927, 1928, 1930, 1931, 0, 0, 1031, 0, 1082,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1974,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1039, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1054, 0, 1037, 1036, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1056, 1950, 0, 0,
	0, 0, 1038, 0, 0, 0, 0, 1041, 0, 0,
	0, 0, 1093, 0, 1066, 0, 0, 0, 0, 0,
	1945, 0, 1051, 1052, 0, 0, 0, 0, 0, 0,
	0, 1071, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1963, 1083,
	1043, 0, 0, 0, 0, 0, 1044, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1045,
	0, 1976, 0, 0, 0, 0, 0, 0, 1080, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1081, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1047, 0, 0,
	0, 0, 0, 0, 0, 1035, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1961, 0, 0,
	0, 0, 0, 0, 0, 1048, 1049, 0, 1935, 1936,
	1942, 1964, 1941, 1937, 0, 1934, 1932, 1933, 1925, 1926,
	1927, 1928, 1930, 1931, 1057, 1055, 0, 0, 0, 0,
	0, 0, 1050, 0, 0, 0, 1067, 0, 0, 1088,
	1087, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1090, 1079, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1084, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1042, 0, 0, 1092,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1040, 0, 0, 0, 1075, 1076, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1078, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1085, 1073, 0, 0,
	0, 0, 0, 0, 0, 1091, 1068, 0, 0, 1060,
	1058, 0, 0, 1063, 0, 0, 0, 0, 0, 1064,
	0, 0, 1033, 0, 1086, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1034, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1077, 0, 1065, 0, 0, 0, 0, 0, 1062, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1089,
	0, 0, 0, 0, 0, 0, 0, 1069, 0, 1070,
	0, 0, 0, 0, 0, 0, 0, 1046, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1072, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1074,
}

var sqlPact = [...]int{
	7383, -1000, -1000, -1000, -1000, 216, -1000, -1000, 214, 212,
	210, 209, 206, 204, 203, 199, 198, 197, 195, -1000,
	-1000, 194, 193, 189, -1000, -1000, 187, -1000, -1000, 186,
	-1000, 185, 182, 181, -1000, -1000, 179, -1000, 175, -1000,
	-1000, -1000, -1000, 173, 172, 171, 98719, 98136, 99300, 2540,
	124916, 107446, 2219, 87654, 124333, 87071, 123750, 2409, 10062, 123167,
	2995, 169, -1000, 122584, 167, 166, 165, -1000, 106863, 122001,
	104533, 2296, -1000, 164, 160, -1000, 8450, 76527, 159, 158,
	156, 155, 2609, 154, -1000, 146, 145, -1000, -1000, 142,
	-1000, 11395, 1739, -1000, 141, 139, -1000, 5273, 103950, 138,
	137, 136, 2921, 135, 134, 73608, 133, 132, 131, 2897,
	3183, -1000, -1000, 2304, -1000, -1000, 129, 128, 127, 126,
	124, 122, 120, 118, 113, 112, 109, 107, 105, -1000,
	104, 103, 102, 101, 100, -1000, 99, 98, 97, -1000,
	96, -1000, 95, 94, 92, 91, 90, 88, 83, 82,
	81, 79, 77, 76, 74, 73, 72, 145535, -1000, -1000,
	68, -1000, 2215, 1866, 1864, 1862, 1857, 1846, 1125, 64,
	58, 57, 56, 55, 54, 51, 49, 46, 45, 44,
	43, 37, 35, 34, 32, 31, 30, 29, 28, 177,
	22, 21, 19, 14, 13, 10, 9, 2399, 3817, -1000,
	1979, 1067, 33762, 3266, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 133631, 125497, 8, -147, 7, -1000, 3606, 1082, 61304,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 295, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	567, 2518, 858, -1000, -1000, -1000, 121418, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2539, -5, -1000, 2255, -1000,
	-1000, -1000, -1000, -1000, 857, -1000, 2536, 2490, 391, 2487,
	-1000, -1000, -1000, 3690, 2688, 4118, 4117, 4116, 4115, 4114,
	133050, 2090, 4113, 2751, 4111, 4110, 4109, 4108, 4107, 4106,
	4105, -1000, 97553, 1221, 96970, 96387, 3708, 120837, 95804, 120254,
	135961, 51768, 1019, 3687, -1000, -1000, -1000, -1000, -1000, -1000,
	125497, -1000, 1220, -1000, -1000, 4104, 2324, 852, 106280, -1000,
	-1000, 119671, 2070, -1000, -1000, -1000, 1069, 1369, 36150, 36150,
	36150, 288, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 3698,
	-1000, -1000, -1000, -1000, 125497, 3016, 3016, 1540, 1538, 1538,
	3016, 3016, -1000, -1000, -1000, -1000, -1000, -1000, 4102, 4101,
	4100, 4099, 4098, -1000, -1000, -1000, 86488, 26407, 85905, 85322,
	119088, 51171, 95221, 94638, 4097, 4096, 4094, 50574, 81241, 58929,
	3815, 118505, 135378, 3813, 3807, 1219, 2251, 1605, -1000, -1000,
	-1000, -1000, -1000, -1000, -21, 78273, 3857, 125497, -1000, 286,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 49977, 771, 49380,
	680, 48783, 669, 117922, -1000, -1000, -1000, -1000, 80648, -1000,
	117339, 2681, 4089, 4088, 1299, 4086, 3576, 2081, 4085, 2089,
	1433, 4084, 4083, 4082, 4080, 4079, 4078, 4076, 1701, 116756,
	3263, 1745, 116173, 1944, 134795, 1218, 94055, 99300, 2859, 115590,
	1674, 1659, -1000, -1000, -1000, -1000, 3378, 3177, 3046, 1488,
	-1000, -1000, -1000, -1000, 64832, 6434, 807, -1000, -1000, 10677,
	115007, 67787, 99300, 99300, -1000, -1000, -1000, -1000, -1000, -1000,
	48186, 750, 47589, 980, 114424, -1000, -1000, 65423, 3207, 1257,
	-1000, -1000, -1000, -1000, -1000, 113841, 46992, 702, 46395, 859,
	125497, -1000, 3262, 2178, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 3545, 1810, 3850, 3017, 80055, 2284, 1589,
	3644, 3377, 3376, 1681, 2250, 3375, 4073, 2856, 3366, 3365,
	3363, 3351, 3347, 1720, 2810, 716, 2822, 33165, 3249, 1981,
	45798, 1815, 1668, 3342, 3341, 3893, 3738, 2241, 2260, 2342,
	2268, 84739, 4072, 4071, 3612, 3340, 3338, 3079, 3327, -1000,
	3206, 1700, 284, -1000, -1000, -1000, -1000, -1000, -1000, 1650,
	-1000, -1000, -1000, -1000, -1000, 89397, -1000, -1000, 1571, -1000,
	-1000, 1571, -1000, -1000, -1000, -1000, -1000, 1599, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1979, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 3563, -1000, 2335, -1000, -1000, -1000, 2746,
	3547, 3547, 3547, 3684, 546, 533, -1000, 177, -1000, -1000,
	144766, -1000, -1000, 52365, 52365, 52365, 52365, 52365, 52365, 52365,
	52365, 2423, -1000, 851, -1000, -1000, 912, -1000, 850, 767,
	695, -1000, -1000, -1000, -1000, -1000, -1000, 848, -1000, -1000,
	-1000, -1000, -1000, -1000, 3846, -1000, 29446, -1000, -1000, -1000,
	574, 846, 52365, -1000, -1000, 3925, 3924, 1004, -1000, 283,
	1083, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 3261, 844, 843, -1000, 841, 840, 839,
	836, 835, -1000, 832, -1000, 824, 822, 818, 817, 816,
	814, 813, 812, -1000, 2287, -1000, -1000, -1000, -1000, -1000,
	-1000, 748, 745, 745, 745, -1000, 1205, -1000, -1000, -1000,
	428, 744, 415, 743, 738, 731, -1000, 804, 803, 798,
	797, 784, 783, 781, 779, 776, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1202, -1000, -1000, -1000, -1000, 1536, -22,
	125497, -1000, 567, -22, -1000, -1000, 774, -1000, 37959, 37959,
	37959, -1000, -1000, 2529, 52365, -1000, 2586, -1000, -8, -8,
	1039, 63056, -1000, 60114, 1039, 657, 926, 68952, -1000, 3203,
	-1000, -1000, 773, 280, -1000, -1000, -1000, -1000, 26998, 3201,
	125497, 125497, 125497, 99300, 99300, 99300, 125497, 4067, 4066, 3473,
	52365, -1000, -1000, 75944, 137705, 99881, -1000, -1000, 3788, 74189,
	75362, 3259, 137705, 3257, 137127, 4065, -1000, -1000, -1000, -1000,
	-1000, 3437, 4064, 4062, 4061, -1000, 125497, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 251, 3435, -1000, -1000, 103367, 251,
	3434, -1000, 251, 3432, -1000, 102786, -1000, -1000, 2496, 3431,
	-1000, -1000, 253, 3430, -1000, -1000, -1000, 252, 3428, -1000,
	-1000, 271, -233, 3427, -1000, -1000, -1000, -1000, -1000, -1000,
	144766, -1000, -1000, -1000, 136544, -1000, 3618, -1000, 125497, -1000,
	52365, -1000, -1000, 3785, 1637, 3663, 3726, -1000, -1000, -35,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 2726, 2719, 1306,
	2577, -1000, 3501, 1777, 36150, 3557, -1000, -1000, -1000, -1000,
	-1000, 266, 26998, 3109, -1000, -1000, 125497, -1000, 125497, 3016,
	3016, -1000, -1000, -1000, 3886, 3885, 3016, 3016, 125497, 125497,
	-1000, -1000, -1000, -1000, -1000, -1000, 2802, 3426, 1655, -1000,
	2571, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2315, 3425, -1000, 2370, 3424, 2303, -1000, -1000, 2434, -1000,
	141170, 1498, -1000, -1000, -1000, -1000, 2244, 3423, -6, -1000,
	-1000, 2755, -1000, -1000, -1000, -1000, 140911, -1000, 3180, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1894, -1000,
	-1000, 2353, 2195, -1000, 1449, 3422, -1000, 3008, 3008, 93472,
	3417, 67196, 65423, 78273, -30, -1000, -1000, -1000, -1000, -1000,
	-281, -1000, 25809, 144766, -1000, -1000, -1000, -1000, 1980, 144766,
	1021, -1000, -1000, 3421, -1000, 144766, 1016, -1000, -1000, 3419,
	-1000, 2795, -1000, 3255, -1000, -1000, 2632, 2630, 1163, -1000,
	4059, -1000, -1000, 4058, -1000, 4057, 4052, 4051, -1000, 1995,
	2246, 4050, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	92891, 2528, -1000, -1000, 91142, 3254, -1000, 2628, 3724, -1000,
	92308, 1216, -1000, 1117, 2627, -1000, 102205, 1084, 2626, -1000,
	4048, 3701, 2959, 1117, 2623, -1000, -1000, -1000, -1000, -1000,
	1137, -1000, 70696, -1000, 70696, -1000, 1861, -1000, 132469, -8,
	99300, 3846, -1000, -47, -1000, -1000, -1000, 1082, -1000, 64238,
	-1000, 64238, 105697, 81832, 1097, 3196, 73024, 144507, -1000, 1162,
	-1000, -1000, 144766, -1000, -1000, -1000, 2793, -1000, -177, 3006,
	-1000, 81832, 66605, 3195, 2791, -1000, 144766, -1000, -1000, -1000,
	-1000, 144766, -1000, -1000, -1000, 81832, 91142, -1000, 113258, 91725,
	-1000, -1000, 1689, 2775, -1000, -1000, -1000, 81832, 1451, 81832,
	81832, 81832, -1000, 112675, -1000, -1000, 2293, 1673, 3603, 2286,
	99300, -1000, 2065, -1000, -1000, -1000, 3631, 3408, 125497, -1000,
	-1000, 3253, -1000, 77691, 101624, -1000, 101043, -1000, 100462, -1000,
	99300, -1000, 99300, -1000, 4047, 4045, 4043, -1000, -1000, 4042,
	-1000, 4038, 3624, -1000, 674, 45201, 144766, 3623, -1000, 4037,
	2224, 3249, 144766, -1000, 3370, 1901, 1850, 125497, -1000, -1000,
	125497, -1000, 125497, -1000, -1000, -1000, 2557, 1763, -1000, -1000,
	2724, -1000, -1000, -1000, 1160, -1000, -1000, 99300, 99300, 99300,
	99300, 1643, -1000, 44604, -1000, -1000, 3294, 4036, 1978, -1000,
	2025, -1000, 3192, 3621, -1000, 1688, 1988, 264, 3931, -1000,
	-1000, 257, -1000, -1000, -35, -1000, 131888, -1000, 2746, -1000,
	125497, -1000, 2783, 3242, 3248, 1722, 2523, 2832, -1000, 44007,
	2815, 55947, 2567, 177, -1000, -1000, 177, 177, 34956, -1000,
	-1000, 74189, 74189, 26998, 1512, 52365, 52365, 52365, 52365, 52365,
	52365, 52365, 52365, 52365, 52365, 52365, 52365, 52365, 52365, 52365,
	52365, 52365, 52365, 52365, 52365, 52365, 52365, 52365, 52365, 52365,
	52365, 52365, 52365, 52365, 52365, 52365, 52365, 52365, 52365, 52365,
	52365, 2560, 52365, 1596, 52365, 52365, 52365, 52365, 2297, -1000,
	-1000, 2203, 618, 2258, 767, -1000, -1000, -1000, 3859, 3859,
	3859, 1484, 1484, 1484, 145172, 145172, 706, 4035, 912, -1000,
	52365, -1000, 119, 63637, 52365, 27591, -1000, 533, 9493, 2761,
	-1000, 532, 28218, -1000, -1000, -1000, 29446, 695, 43380, 52365,
	1185, 144766, -1000, -1000, 1790, 3875, 25211, 3134, 3073, 757,
	895, 888, 32538, 31911, 31284, 30657, 874, 873, 52365, 52365,
	52365, 52365, 52365, 52365, 52365, 52365, -1000, -1000, 3882, -1000,
	3875, -1000, -1000, -1000, -1000, 3875, 1487, 1453, 3875, -1000,
	3875, 3875, 9843, 9843, 42783, 42186, 41589, 56544, 40992, 52365,
	30060, 40395, 39798, -1000, 58335, 125497, -22, 3784, 52365, 388,
	-1000, 142076, -1000, 388, 388, 756, -49, 144766, 2788, 2788,
	61888, 2544, 2431, 2431, 2431, -1000, 1039, 19791, 1039, 110932,
	2435, 1039, 1039, 261, 310, 531, 59523, 2586, 110932, 898,
	753, 6, 4, 3, -1000, -1000, 2, -1, -1000, -1000,
	99300, 752, 27591, 26998, 249, 2245, -54, 2841, 2839, -1000,
	2820, 2819, -1000, 2816, 2527, -1000, -1000, -1000, 2001, -64,
	1593, 99300, 125497, 1680, 4034, -74, -1000, 5683, -75, -1000,
	1358, 246, 3875, -1000, -1000, -1000, -1000, -1000, 4033, 4032,
	-1000, 1201, 751, 749, 982, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 748, 745, 745, 745, -1000, 428, 744,
	415, 743, 738, 731, -1000, -1000, -1000, -1000, -1000, 3188,
	99300, 125497, 1670, 4030, 88235, -233, 99881, -90, -1000, -1000,
	125497, -1000, -1000, -1000, 4029, -1000, 99300, -1000, -1000, 99300,
	251, 3418, -1000, 99300, -1000, 99300, 248, 3416, -1000, -1000,
	125497, -1000, 99300, 99300, -1000, 125497, 125497, 125497, 137705, 137705,
	247, -1000, 99300, 1033, -76, 1304, -35, -1000, -1000, -1000,
	-1000, 1571, -1000, 2261, -1000, -1000, -1000, -1000, -1000, -1000,
	1707, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1004,
	-1000, -1000, -1000, -1000, 3879, 3873, -28, -1000, -1000, 26998,
	-1000, 2104, -1000, -1000, -1000, -1000, 125497, 125497, -1000, -1000,
	125497, 125497, -1000, -1000, -36, 1828, 676, 1585, -1000, 84156,
	2589, 3611, 4028, 2935, 3586, 1860, -1000, 1754, 727, -1000,
	3695, 89397, 3737, 3762, 1491, -1000, 3168, -1000, -1000, -1000,
	1068, 1960, 1955, 1584, 1583, 89397, 2370, -1000, 74189, -1000,
	2895, 3681, 1538, 1559, 1538, 1538, 1562, -1000, 89397, 1940,
	1578, 1569, 1561, -1000, -1000, 2160, 2159, -1000, -1000, 112094,
	-1000, 1560, 1557, 3804, 3563, 2418, 939, 2142, -1000, 1492,
	1553, 3165, -1000, -1000, -39, 3729, 3758, 1491, -1000, 3162,
	1547, -1000, -1000, -1000, 3679, 99300, 26998, 1767, 1764, 1755,
	1918, 1542, -29, -1000, 3733, 1826, -1000, 91142, 91142, 108027,
	125497, 3823, 81832, -1000, 2651, -1000, -1000, -1000, 3642, 3641,
	-1000, -1000, 1535, 1530, -1000, 1193, 9635, 3524, -1000, 137705,
	1193, 1193, 2288, 3410, 2981, 1831, -1000, 3001, 1014, 2998,
	-1000, -1000, -1000, 1014, -30, 78273, 125497, 238, -1000, 119,
	52365, 52365, 119, 52365, 119, -1000, 3714, 3409, 3407, 4026,
	-1000, -1000, -1000, -1000, -1000, 4025, 2205, 2743, -1000, -1000,
	724, 2620, 3159, 125497, 2846, -32, 99300, -1000, 77109, 3405,
	137705, 2370, 2619, -1000, -1000, 90561, -1000, 3404, 567, 2618,
	-1000, 714, 4024, 3403, -1000, 131307, -1000, 3618, 1615, 3398,
	1255, 1003, 3782, -1000, 1003, 71278, -1000, 125497, -1000, -8,
	575, 82994, -83, -84, 522, -1000, 111513, 125497, 125497, 3552,
	2225, 2223, -1000, 1109, 65423, -1000, 65423, -91, -1000, -177,
	2994, 1733, 65423, -1000, 1097, 1097, 1014, -1000, 1014, -1000,
	99300, 3245, -1000, -1000, 81832, 1097, 1097, 1097, -1000, -1000,
	-1000, -1000, 4023, 4021, 4019, 4018, -1000, -1000, 1115, 99300,
	125497, 99300, -1000, -1000, 1829, -1000, 237, -1000, 137705, -1000,
	137705, 125497, 99300, -1000, 1115, 125497, 1115, 125497, 1115, 125497,
	1115, 1115, -1000, -1000, -1000, -1000, -1000, 119, -1000, -1000,
	144766, -1000, 52365, -1000, -1000, 1725, 4017, 1872, -1000, 3244,
	-1000, 3243, -1000, 39, -1000, -1000, 3881, 2080, -1000, 3923,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 4010, 144766,
	-1000, 2208, -1000, -1000, -1000, -1000, 99300, 99300, 99300, 99300,
	125497, 3519, -1000, 125497, 3513, 99300, -1000, 3927, -1000, -1000,
	89397, -1000, 2783, 3242, -1000, -1000, -1000, -1000, -1000, -1000,
	1723, 2498, -1000, 2768, -1000, 1792, -1000, -1000, -1000, 144766,
	57141, -1000, -1000, 144766, 2040, -1000, 55350, 54753, -1000, -1000,
	1949, 99300, 2894, -1000, 2894, -181, -1000, 141899, 2767, 99300,
	-1000, -1000, -1000, -1000, -1000, 1066, 1262, 1262, 1523, 1523,
	1523, 1523, 3716, 801, 6100, 6270, 6527, 6527, 5382, 5382,
	5382, 5382, 5382, 6527, 332, 1484, 1484, 332, 332, 332,
	332, 332, 1484, 1484, 1484, 6527, 6527, 6527, 1484, 145172,
	144913, 8820, 52365, 52365, 1516, 2189, 618, 8114, 52365, 9232,
	9232, 9232, 9232, -1000, 2111, -1000, -1000, -1000, -1000, 3152,
	722, 56544, 56544, -1000, -1000, -1000, -1000, 28832, 52365, -1000,
	-1000, -1000, -1000, 39171, -1000, -1000, 140764, -321, 518, -1000,
	229, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 517, -167, -25, -1000, 52365, 52365,
	52365, 512, -1000, 228, 52365, 125497, -1000, 17553, 887, -148,
	-1000, -96, 1617, -1000, 52365, -1000, -1000, 1515, -1000, 1514,
	1482, 1480, -1000, 720, 509, -1000, 226, -1000, 2427, 719,
	717, 52365, -1000, -1000, -1000, -1000, -1000, 140505, -1000, -1000,
	140270, -1000, -1000, 140093, -1000, -1000, 139858, -1000, -1000, -1000,
	-1000, -1000, 144272, 16719, 15813, 13271, 8184, 12629, 12018, -97,
	498, -99, 494, 1060, 1059, 493, 492, 485, -104, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -105, 481, -1000, 3143, -167, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 480, -1000, 478, -1000, 144095, -167,
	460, 5315, -1000, 56544, 56544, 56544, 56544, 453, -1000, 141664,
	-1000, 143860, 38574, 38574, 38574, 441, 143466, 52365, -167, -106,
	-1000, -107, -1000, -1000, -1000, -1000, 560, -114, 1141, 37959,
	60720, 26998, -1000, 1141, 1141, 52365, -1000, 52365, 2786, -1000,
	-1000, -1000, -1000, 2780, 2157, 2788, 61888, -1000, -1000, -1000,
	-1000, 110932, -1000, 3846, 3032, -1000, 110932, -1000, -1000, 125497,
	567, -1000, 110932, 110932, 26998, 1039, -1000, 1039, 110932, 740,
	-1000, -1000, -1000, -1000, -1000, 439, 71862, -25, 225, 26998,
	1117, -1000, -1000, 2927, 2927, 2927, 2927, 2927, 99300, -1000,
	-1000, 137705, 1459, -33, -115, 2991, -1000, 3821, -1000, 2302,
	-1000, 74189, -1000, 908, 1350, 26998, -1000, -1000, -1000, 711,
	-1000, 3875, 3875, -1000, 3875, 137705, 3142, 218, 2990, -1000,
	2522, -31, 211, 137705, 4009, -1000, -1000, 251, -1000, 99300,
	251, 251, -1000, 99300, 99300, 2496, -1000, 253, -1000, 252,
	-1000, -1000, -233, -1000, 1151, 36150, -1000, 1571, -1000, -1000,
	1742, -1000, 2235, -1000, 1354, -1000, -1000, 36150, -1000, 3556,
	-1000, 1913, -1000, -1000, -1000, -1000, 5231, 125497, 125497, 99300,
	-1000, 109189, 125497, -1000, 2365, 137705, -1000, 2615, 130726, 2597,
	130145, 74189, -1000, -1000, 710, 1071, 2766, 2765, 1250, 125497,
	125497, 2764, 129564, 128983, -1000, 4008, 125497, 2290, 52365, 109189,
	3678, 2505, 2687, 119, 119, -1000, 119, -1000, -1000, 709,
	1440, 99300, 99300, 125497, 137705, 99300, 2196, -1000, -1000, -1000,
	-1000, -1000, 89978, -1000, -1000, 1538, -1000, -1000, -1000, 1538,
	2370, 2118, 125497, 137705, 99300, 137705, 128402, 127821, -1000, -1000,
	1915, 125497, -1000, -1000, -1000, -1000, 1603, -1000, 939, 1454,
	3141, 52365, 52365, 2346, 119, 119, -1000, 119, 707, 26998,
	2200, -1000, 3250, 125497, 3920, 127240, 3919, 125497, 125497, 125497,
	137705, 3599, 125497, -1000, -1000, -1000, -290, -1000, 1006, 1005,
	-281, -1000, 3823, -1000, 1001, 2324, 125497, 137705, -1000, 126659,
	9635, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2339, 79462,
	1261, 125497, 1449, -1000, -1000, 1914, 1452, 1383, 89397, 2329,
	1910, 2049, 137705, 65423, 1111, 65423, 2966, -1000, -1000, 24613,
	-1000, 144766, 144766, -1000, 144766, -1000, 77109, 81832, 125497, -1000,
	-1000, 1207, 125497, 83575, 1086, 3396, 70114, -281, 1097, 81832,
	99300, -32, 2846, 125497, -1000, -1000, 2370, 3395, 567, 2613,
	-1000, 137705, 3779, 3386, 704, 4007, 4003, -1000, 99300, 2521,
	2612, -1000, -1000, 126078, 3458, 939, 125497, 1141, 61888, 2191,
	-1000, 68371, 1229, 125497, 2075, 200, -1000, -1000, -1000, 17,
	125497, -1000, 925, -1000, -1000, 575, 575, 1097, -290, 701,
	66014, -119, -1000, 222, 699, 997, 990, -1000, 2414, -1000,
	-177, -1000, 81832, 1109, 65423, 3138, -177, 2987, 3137, -1000,
	-1000, 1140, -1000, 1687, 1097, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -11, 2036, 125497, -233,
	-233, -44, -33, -1000, 1115, -1000, 1115, -1000, 1115, -1000,
	-1000, -1000, 144766, -1000, -1000, -1000, 1871, 1865, 125497, -1000,
	3239, -1000, 125497, -1000, -1000, 26998, 125497, 99300, 26998, 99300,
	3234, 3226, -1000, -1000, -1000, 125497, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1280, -1000, 2040, 2497, -1000, 695,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2707,
	-1000, -34, 34956, 1053, -1000, -1000, 99300, -18, 52365, 52365,
	6165, 5328, 52365, 56544, 56544, -1000, 52365, 475, -1000, -1000,
	-1000, -1000, -1000, 3131, 693, 52365, 74189, 9197, 9028, -1000,
	437, 11377, 332, -1000, 52365, -1000, 599, -1000, 436, 37362,
	-1000, 142570, -27, -120, -1000, 20403, -167, -125, -1000, -1000,
	906, -1000, 3453, -1000, 52365, 143373, 2672, 2326, 2046, 1837,
	3875, 3917, 24015, -1000, 72443, 1178, 2454, 139599, -1000, -1000,
	-1000, -1000, 74189, 74189, 52365, 52365, -1000, 52365, 52365, 52365,
	-1000, -1000, -1000, 3875, 1054, -1000, -1000, -1000, 1054, -1000,
	-1000, 1538, -1000, 1538, -1000, 52365, -1000, -1000, 3128, 52365,
	-1000, 74189, 74189, 56544, 56544, 56544, 56544, 56544, 56544, 56544,
	56544, 56544, 56544, 56544, 56544, 56544, 56544, 56544, 56544, 56544,
	56544, 56544, 56544, 2811, 56544, 3852, 3852, 3852, 1508, -1000,
	3225, 3128, 52365, 52365, 74189, 432, 426, 424, -1000, 52365,
	-167, -1000, -1000, 6896, 692, -1000, 2694, -1000, 3071, -1000,
	52365, -1000, -174, -1000, 2586, -1000, -1000, 3071, 3071, -126,
	144766, 61888, 61888, -1000, 691, 52365, 2778, -1000, -1000, 885,
	-322, -1000, 988, -1000, -1000, -1000, -1000, -1000, -1000, 985,
	-1000, 567, -1000, -1000, -1000, 220, 110932, 110932, 884, -1000,
	-127, -1000, -1000, -128, -1000, 3778, 421, 26998, -1000, 1141,
	2912, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2772, -249,
	137705, 137705, 1904, 2477, 3911, -1000, 3877, 905, 882, 219,
	3875, 416, 407, 406, -233, 137705, 137705, 1903, 74780, 137705,
	-1000, -1000, -1000, 251, -1000, -1000, -1000, 248, -1000, -1000,
	-1000, -1000, 2867, -1000, -35, -1000, -1000, -1000, 52365, -1000,
	1087, -1000, -1000, 3600, 690, 1378, 1373, -1000, -134, -1000,
	979, -1000, -1000, -1000, -1000, 3144, -1000, 3385, -1000, 2610,
	-1000, 1233, 2608, 2057, -1000, 52365, 686, 2955, 682, 681,
	3998, 2336, 3997, 1254, 3379, 2496, 3362, 2496, -1000, -1000,
	-1000, 1073, -1000, 144766, -135, -1000, 2505, -1000, 671, 670,
	-1000, -36, 1821, 556, 1368, 1138, -1000, -1000, 52365, 52365,
	110351, -1000, 500, 3601, -19, -1000, -1000, -1000, 1902, 1352,
	1351, -1000, -1000, -1000, -1000, 2370, 1898, 1349, 1348, -1000,
	-1000, -1000, -1000, -1000, 2604, -1000, -1000, 3361, 1124, -1000,
	3299, 3286, 1041, 125497, 52365, 52365, 143182, 142976, -1000, 1123,
	-1000, -1000, 52365, -1000, -39, 1346, 3728, 2603, 99300, -1000,
	2496, 3359, 1339, -1000, 1333, -1000, -1000, -1000, 3731, 3730,
	1362, 108027, 81832, 81832, 3823, 65423, -1000, -1000, -1000, 81832,
	-1000, -1000, 78871, -1000, -1000, 1193, 125497, 137705, 99300, 2114,
	-1000, -1000, 88235, 88816, 125497, 2981, -233, 1014, -1000, 2823,
	1014, 1111, 3127, -1000, 2826, -1000, 1121, 99300, 3996, 405,
	-151, -41, 74189, -1000, -1000, -1000, -1000, 2597, 99300, 125497,
	1429, 2947, 125497, 125497, 3777, -1000, 2508, 688, 99300, 1050,
	-1000, 3846, -1000, -1000, -1000, 1119, -1000, 3723, 99300, 3776,
	3358, 1117, 119, 99300, 3891, -1000, -1000, 3775, 99300, 3332,
	2520, 2601, 2734, 939, 82413, 1117, 2452, -59, -1000, 2075,
	36747, 3598, -153, -1000, -1000, -1000, 1141, 71278, 61888, 52365,
	3983, -156, -1000, -1000, -1000, -1000, -1000, 108027, 81832, 1097,
	125497, 125497, 3979, 81832, 81832, 81832, -42, 668, -1000, 978,
	977, 976, -1000, -1000, -1000, -1000, -1000, -1000, 975, 973,
	972, 971, 1109, -1000, -1000, -177, 65423, 1109, 65423, 119,
	-1000, 2465, 99300, -1000, 23417, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1115, 3909, -281, -1000, -1000, -1000, 2348, 2561,
	2348, 2022, 2013, -1000, -1000, 2495, -1000, -1000, -1000, -1000,
	2874, 3581, 26998, 3718, 9232, 52365, 52365, 382, 7700, 7556,
	9232, 52365, 52365, 74189, 8807, -161, 52365, 52365, -1000, 52365,
	881, 144766, -1000, 3908, 52365, 404, 402, -1000, -1000, -1000,
	3871, -1000, -1000, -1000, 144766, 52365, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 401, -1000, 201, -1000, -1000, -1000, 134212,
	-1000, 52365, 400, 3677, -1000, 397, 384, 10749, 311, 139452,
	139193, 138958, 383, -1000, -1000, 364, 359, 144766, 3225, 144766,
	-1000, -1000, 1038, 1038, 1526, 1526, 1526, 1526, 3852, 770,
	483, 457, 1104, 1104, 1104, 1116, 1508, 1508, 1104, 1104,
	1104, 1508, 3125, 2781, 659, 7073, -1000, -1000, 144766, 144766,
	358, -1000, -1000, -1000, -167, 357, 6896, -1000, 3066, 3675,
	144766, -1000, 61888, 3066, 3066, -1000, -1000, 2157, 125497, 144766,
	61888, -1000, 3032, -1000, 21617, 21013, -1000, 26998, -1000, -1000,
	-1000, -1000, 3846, -1000, 71862, -1000, 658, -1000, 40, -1000,
	2912, -1000, 970, -1000, -1000, 81832, 81832, 2927, -1000, 3077,
	-249, -191, 125497, -1000, -1000, 880, 3974, 902, 26998, 354,
	-1000, -1000, -1000, -233, -233, 125497, 3124, 99300, 125497, 1625,
	-233, -1000, -1000, -1000, 3551, 144766, 3224, 3058, 3044, 125497,
	125497, -1000, 109189, 36150, 1711, 109770, 125497, 3326, -1000, 3325,
	-1000, 1250, 5307, 138781, 62472, -1000, 62472, 125497, -1000, -1000,
	-1000, -1000, 2137, 1986, 3971, 1293, -1000, 3633, 125497, -1000,
	125497, -1000, -1000, -1000, 109189, -1000, 125497, 125497, 99300, 125497,
	-1000, 137705, 3308, -164, 144766, -43, -1000, 965, -1000, 1543,
	-1000, 22819, 125497, 137705, 99300, 125497, 137705, 99300, 3323, 125497,
	2403, -1000, -1000, 3283, -1000, 144766, 142717, 119, 52365, 3306,
	-169, 26998, -1000, 3901, 3899, 3322, 3637, -1000, 125497, 3898,
	125497, 99300, 3549, -1000, -1000, -1000, 1113, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1897, 1332, 1331, 2519, 2512, 2475,
	-44, 2329, 1111, -46, 654, -1000, 964, -1000, -1000, 951,
	949, 1111, -1000, 81832, 65423, 3967, 567, -1000, 2933, -1000,
	105114, 83575, 2488, -1000, -1000, 652, 125497, 125497, 650, -1000,
	119, -1000, 3963, 109189, 644, -1000, 2460, -1000, 869, -1000,
	2715, 137705, 2370, 119, 99300, -1000, 1108, 567, 353, -50,
	-1000, 3451, 1248, 26998, 99300, 3321, 2737, 939, 82413, -1000,
	1615, 2832, -1000, -52, -1000, 800, 119, 2452, -1000, -59,
	144766, -1000, 947, -171, 352, -1000, 3539, -1000, -1000, -172,
	-1000, -1000, 5108, 5108, 81832, 65423, 81832, 81832, 81832, 65423,
	81832, -1000, 1109, 1014, -1000, -177, -1000, 2595, -1000, -1000,
	-1000, -1000, -1000, -1000, 26998, 1948, -1000, 643, 641, -1000,
	-1000, -1000, -1000, 3581, 9232, 9232, 52365, 52365, 52365, 9232,
	8807, -178, -1000, 9232, 9232, -167, -1000, -1000, 142570, -1000,
	-1000, -1000, 144766, -1000, 22221, 2373, -1000, 138466, -1000, 34956,
	-1000, -1000, 52365, 52365, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 56544, 3122, 639, 74189, -1000, -1000, 345, 1126,
	52365, 54156, 2586, 1126, 1126, -1000, -180, -1000, -1000, -1000,
	3846, -1000, 3846, 40, -1000, -1000, 3962, 26998, -1000, 81832,
	-1000, -1000, -1000, 2474, -1000, -1000, 3305, -152, 889, -1000,
	3960, -1000, -1000, 178, 137705, 3120, 176, 2978, -1000, 119,
	-1000, -1000, -1000, -1000, -1000, -1000, 2977, 3774, -1000, 2110,
	-1000, 125497, 125497, -1000, 125497, -1000, 26998, 125497, 3086, 1457,
	-1000, 1071, 2762, 638, 56544, 1279, 99300, 968, 3041, 3040,
	-1000, 3799, 3674, 3012, -186, -1000, 125497, 52365, 125497, -188,
	-189, 2587, -1000, -1000, 1277, 1455, 52365, 1276, -1000, -1000,
	-1000, 74189, 635, 2496, 2496, -1000, -194, -195, -1000, -1000,
	-1000, 52365, 1318, 125497, 35553, -1000, 3958, 3601, -1000, -1000,
	-1000, -1000, -1000, -1000, 125497, -1000, 125497, -1000, 52365, -1000,
	142311, 52365, 1317, -1000, -1000, -1000, 3896, 2496, 26998, 2496,
	-1000, 2496, 3637, 1292, 2549, 125497, 137705, 99300, 1912, 1912,
	3150, -1000, -1000, -1000, 2660, 2660, 81832, 65423, 65423, -1000,
	-67, 1111, -1000, 3773, 2369, 3957, -1000, -1000, -1000, -1000,
	2758, -1000, -1000, -1000, 125497, 2756, 3045, 62472, 634, 632,
	125497, 1098, -1000, -196, 83575, 1086, 1092, -1000, -73, 630,
	-1000, 946, -1000, -1000, -1000, -1000, 567, -1000, 2866, 3772,
	-1000, 3895, 625, 624, 125497, 2511, 620, 26998, 3588, 939,
	82413, -1000, 3458, 2075, -1000, 2592, 125497, 3585, -1000, 2832,
	618, -1000, 1097, 615, 1097, -1000, -197, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1109, -78, -1000, 930,
	777, -1000, -1000, 99300, 99300, 52365, 52365, -1000, 9232, 9232,
	9232, -1000, 341, -1000, -1000, 2452, 3670, -1000, -93, 138319,
	138289, 1139, 56544, 74189, -205, -1000, -1000, 125497, 144766, -116,
	-1000, 144766, 613, 611, 496, -1000, -1000, -1000, 861, 802,
	-1000, -1000, -1000, -1000, 137705, 3956, -1000, 137705, -233, 137705,
	137705, 1887, -1000, 108608, 125497, -1000, -1000, 2057, 2002, -1000,
	-1000, -1000, 125497, 2600, -1000, -1000, -1000, 1110, 52365, 7073,
	56544, 610, 52365, -1000, 609, 608, 3771, 3506, -1000, 2926,
	3121, 2220, 62472, -1000, 3581, -1000, 19113, -1000, 1238, 2170,
	-1000, -1000, -1000, -1000, 144766, 56544, 3637, 62472, -1000, -1000,
	607, 606, 144766, 601, 944, 3118, -1000, -1000, -1000, -1000,
	-1000, 144766, 119, 144766, 597, 3728, -1000, -1000, -1000, -1000,
	2496, 99300, 942, -1000, -1000, -1000, 1315, -1000, -1000, -1000,
	-1000, 3955, 3954, 3116, 88235, -1000, -211, -1000, -1000, -1000,
	2186, 119, 1086, -1000, -1000, 2488, 595, -1000, 1096, 2742,
	2742, -212, 62472, 62472, -213, 2500, 2865, -1000, 338, 3769,
	1092, -1000, 3841, -1000, 3523, 3523, 52365, 3751, 3537, -1000,
	119, -1000, 3891, 62472, -1000, 99300, 62472, 2506, 2262, 2720,
	82413, -1000, 2734, -1000, -1000, -219, 125497, 2075, -1000, -1000,
	81832, -1000, -1000, -1000, 2595, -1000, 125497, -1000, 125497, -1000,
	-1000, -222, -224, -1000, 2265, 52365, 34956, -1000, -1000, 1139,
	-227, -1000, -146, -1000, 3749, 54156, 3950, 3947, 3944, -1000,
	-1000, -249, -1000, -233, -233, -233, 125497, -1000, 2106, -1000,
	2597, -1000, -1000, 3317, -1000, 3062, 585, 18997, 7073, 2697,
	125497, 18346, 2370, 2370, -1000, 3746, 3117, -1000, -1000, 2346,
	573, -1000, -1000, -1000, -1000, 1053, 125497, 1096, 3048, 99300,
	7073, 1249, -235, 2348, 2348, 52365, 34359, 2384, -1000, 52365,
	-1000, -1000, 3637, 65423, 137705, -1000, -1000, 137705, 2502, -1000,
	3097, 3863, -1000, 2500, 125497, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1238, -240, -242,
	-1000, -1000, 3609, -1000, 3536, 2933, 119, -1000, -1000, -1000,
	-243, 144766, 119, 3943, 1108, 337, -248, 1248, -251, 99300,
	2171, -1000, 939, -1000, 2737, 1141, 3470, -1000, -253, -1000,
	-259, -261, -1000, -1000, 336, 53559, 53559, 53559, -167, -181,
	-1000, 125497, 569, -1000, -1000, -1000, -1000, -1000, 168, -1000,
	-1000, 3264, 1024, -1000, 984, 2095, 334, 1267, 309, 307,
	-1000, -1000, -1000, 3012, -1000, 125497, -1000, -1000, -1000, 1024,
	567, -1000, 52365, 1238, -262, -1000, 1228, -269, -1000, 1227,
	-271, -1000, 3114, -1000, -272, 2496, -1000, -249, 247, 1912,
	1103, 3709, -1000, -1000, -1000, 2712, -278, -1000, -1000, 2220,
	1238, 2346, 2675, -1000, 2369, 1098, -1000, -1000, -1000, -1000,
	-1000, 1238, 566, 2220, 563, 1712, 939, -1000, -1000, 1538,
	3588, 3466, 1486, 1097, -1000, -1000, -1000, 3446, -1000, 57738,
	2478, 2010, 141405, 3446, 3446, -1000, -1000, 137705, 125497, 1096,
	3668, -1000, 1007, 986, 1694, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1141, -279, -1000, 2697, 144766, 1096, -1000,
	2348, 2971, -1000, 2348, 3104, -1000, 2376, -1000, -1000, -1000,
	-1000, 3102, -1000, 1983, 3824, -1000, -1000, 1096, 125497, 2346,
	2220, 1096, 1999, 1994, 3938, 1086, 2500, 2220, 62472, 2346,
	62472, 2309, -1000, 125497, -1000, 2262, 1483, -1000, 1799, -1000,
	-1000, 2045, 3794, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-233, -1000, -1000, 941, -1000, 3488, -1000, 1273, 2263, 2263,
	-1000, -1000, 984, -1000, -1000, 561, -1000, 559, -1000, 137705,
	2459, -1000, -1000, -1000, -1000, 1096, 2346, 1141, -1000, 3937,
	-1000, 2500, -1000, 2346, -280, 1096, -293, 2401, -1000, -1000,
	-281, 2171, -1000, 1797, 71278, 1987, -1000, -1000, 2439, 52962,
	52365, -1000, 3825, -1000, -1000, 2803, -1000, 3012, 52365, 52365,
	247, 69533, 1141, 1096, -1000, -1000, 2712, 1096, 1238, 1141,
	2220, -1000, 939, 1712, 71278, -270, -1000, -1000, -1000, 144766,
	-1000, -1000, -1000, -1000, -294, -295, -1000, -290, 108027, -1000,
	1141, -1000, 1141, 2220, -1000, 2346, 137705, 2309, -270, -1000,
	2346, 1309, -296, -1000, -1000, 2346, 1096, -1000, -1000, -1000,
	-1000, -1000, 557, -1000, 1096, 1141, 52365, 1141, -1000, -310,
	-1000, 2346, -1000,
}

var sqlPgo = [...]int{
	0, 4796, 4794, 4792, 4790, 4789, 4788, 4785, 4779, 4778,
	4776, 4775, 4773, 4771, 4770, 165, 4768, 4766, 4765, 4764,
	4763, 4761, 4757, 4756, 4752, 4751, 4750, 4748, 4747, 4746,
	4745, 4743, 4741, 4740, 4738, 4736, 4734, 4733, 4728, 4727,
	4725, 4722, 4719, 4717, 4715, 4714, 4710, 4707, 4705, 4703,
	4702, 4701, 4700, 4699, 4695, 4693, 4692, 4691, 4686, 4685,
	4684, 4682, 4681, 4678, 4676, 4675, 4672, 4668, 4665, 4664,
	62, 4663, 4662, 4661, 4658, 4657, 4656, 4655, 4654, 4653,
	4652, 4649, 4647, 4646, 4643, 4642, 4641, 4640, 4639, 4636,
	4635, 72, 4632, 301, 4631, 4630, 4628, 4627, 4621, 4618,
	4617, 4615, 4614, 4608, 4605, 4604, 300, 4602, 137, 175,
	4600, 4596, 4123, 4594, 4593, 299, 4588, 4585, 4584, 4583,
	4582, 310, 4580, 4578, 4577, 4576, 4567, 277, 4566, 4564,
	4561, 4560, 4559, 4558, 56, 142, 4557, 4556, 3016, 4552,
	4550, 4549, 4548, 4547, 4546, 4545, 275, 278, 4544, 4543,
	4542, 272, 178, 4540, 297, 4539, 4537, 4536, 4535, 4534,
	4533, 4531, 4529, 4528, 4524, 4521, 4513, 4512, 4511, 4509,
	4505, 4503, 4501, 4500, 4498, 4497, 4496, 4495, 4493, 4490,
	4488, 4487, 4485, 4483, 4481, 4478, 4477, 4476, 4474, 4473,
	4469, 4467, 4466, 4465, 4464, 4463, 4461, 269, 229, 152,
	4460, 4459, 292, 291, 4458, 4456, 4455, 4454, 4453, 4452,
	4451, 4450, 4449, 4447, 4445, 4444, 4442, 4440, 159, 12,
	37, 4439, 4438, 94, 97, 95, 91, 114, 109, 4437,
	126, 4436, 144, 118, 4433, 125, 115, 26, 63, 271,
	256, 5479, 254, 4432, 4431, 4430, 265, 209, 4429, 258,
	4428, 4425, 4421, 4420, 4419, 4418, 75, 55, 223, 4417,
	4416, 153, 188, 199, 198, 194, 190, 89, 59, 110,
	86, 69, 47, 16, 101, 231, 23, 4, 286, 4415,
	283, 11, 147, 13, 33, 4412, 4410, 4409, 4402, 3923,
	113, 4398, 290, 262, 187, 4397, 4396, 4395, 465, 4393,
	4392, 52, 235, 122, 150, 124, 20, 141, 4391, 167,
	181, 34, 4389, 186, 81, 4386, 4384, 108, 96, 9868,
	13533, 4383, 4382, 134, 76, 93, 219, 179, 170, 215,
	214, 180, 176, 54, 228, 220, 197, 279, 4379, 280,
	4378, 3756, 111, 200, 171, 6490, 4376, 4375, 4374, 88,
	4373, 112, 4370, 4369, 74, 22, 3, 2, 156, 39,
	38, 10, 4368, 32, 136, 51, 25, 4367, 24, 4365,
	4360, 4358, 4355, 50, 4346, 46, 177, 4343, 4341, 308,
	4340, 107, 58, 166, 4339, 21, 239, 4338, 246, 143,
	4337, 4334, 270, 218, 221, 4333, 83, 244, 4326, 4325,
	4323, 4321, 4320, 4319, 135, 1, 145, 4318, 4314, 158,
	4313, 60, 261, 212, 4312, 70, 4311, 4309, 193, 57,
	161, 307, 192, 238, 133, 242, 201, 243, 4308, 4306,
	4305, 267, 4303, 4294, 232, 184, 4292, 4291, 260, 312,
	100, 49, 90, 255, 87, 207, 173, 4290, 216, 4289,
	4287, 304, 202, 230, 43, 15, 6, 104, 117, 4286,
	5, 245, 174, 240, 131, 4285, 8384, 2463, 2579, 247,
	4284, 169, 140, 85, 132, 168, 289, 102, 4283, 4282,
	3600, 4280, 4279, 4278, 4275, 204, 4272, 4270, 4267, 162,
	205, 226, 4266, 121, 79, 53, 19, 127, 281, 298,
	128, 234, 185, 273, 4265, 4262, 4261, 211, 4259, 82,
	120, 183, 213, 274, 68, 4257, 164, 4256, 160, 268,
	77, 172, 4255, 249, 4254, 4253, 4250, 4249, 4248, 4247,
	4246, 259, 253, 4245, 4244, 4243, 44, 208, 4242, 284,
	191, 196, 139, 66, 4241, 99, 98, 4240, 148, 222,
	67, 8, 4239, 29, 4237, 3532, 64, 4236, 0, 15016,
	10807, 13349, 14764, 4235, 3274, 4234, 4233, 4232, 236, 84,
	4231, 4229, 4227, 116, 4226, 92, 4223, 4220, 80, 4219,
	27, 17, 18, 31, 28, 357, 149, 4218, 4215, 61,
	151, 154, 4213, 303, 251, 4210, 4208, 4207, 4204, 105,
	4201, 48, 4199, 42, 4198, 4196, 45, 7, 35, 4195,
	4194, 157, 4190, 130, 224, 4189, 182, 4185, 73, 163,
	4183, 4171, 4163, 71, 65, 282, 225, 227, 103, 4161,
	294, 4158, 210, 4157, 4155, 30, 4154, 4151, 264, 123,
	119, 40, 266, 146, 41, 195, 233, 4148, 4147, 189,
	4146, 4145, 4144, 288, 4143, 3725, 296, 4142, 36, 4141,
	4140, 4136, 14, 4135, 4134, 217, 3487, 4133, 4129, 9,
	4128, 206,
}

var sqlR1 = [...]int{
	0, 1, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	3, 3, 3, 3, 3, 3, 3, 6, 6, 6,
	6, 6, 6, 6, 6, 6, 6, 6, 6, 6,
	6, 6, 6, 6, 6, 6, 6, 6, 6, 6,
	6, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 13, 13, 9, 9, 9, 9, 10, 10,
	10, 10, 10, 54, 54, 11, 11, 11, 11, 11,
	11, 11, 11, 11, 11, 11, 40, 42, 41, 35,
	35, 36, 36, 37, 38, 38, 12, 12, 12, 8,
	8, 8, 8, 8, 8, 8, 8, 21, 21, 43,
	43, 22, 22, 45, 45, 23, 23, 46, 46, 625,
	625, 625, 626, 626, 627, 627, 627, 26, 48, 19,
	20, 20, 20, 20, 628, 628, 628, 628, 39, 27,
	49, 32, 32, 32, 32, 32, 221, 221, 221, 221,
	25, 25, 44, 44, 264, 264, 263, 263, 263, 263,
	263, 263, 263, 263, 263, 263, 263, 263, 263, 263,
	263, 263, 263, 263, 263, 263, 263, 263, 263, 263,
	263, 263, 263, 263, 263, 263, 621, 621, 266, 266,
	265, 253, 253, 254, 254, 255, 255, 629, 629, 267,
	267, 267, 268, 268, 16, 16, 16, 16, 16, 16,
	16, 16, 16, 16, 520, 520, 520, 551, 551, 551,
	551, 553, 553, 648, 648, 649, 649, 649, 649, 649,
	137, 137, 417, 417, 417, 58, 58, 58, 58, 58,
	616, 616, 223, 223, 223, 225, 225, 224, 224, 224,
	224, 224, 82, 82, 635, 635, 634, 633, 633, 633,
	636, 636, 636, 222, 222, 222, 133, 133, 133, 133,
	133, 133, 133, 133, 134, 134, 135, 135, 226, 226,
	226, 228, 228, 227, 227, 227, 227, 227, 227, 227,
	227, 227, 227, 227, 227, 227, 232, 18, 18, 18,
	116, 116, 116, 116, 116, 116, 116, 111, 111, 555,
	555, 556, 556, 217, 217, 218, 218, 218, 218, 219,
	219, 220, 220, 220, 73, 73, 229, 229, 231, 231,
	230, 230, 230, 230, 230, 60, 60, 60, 60, 60,
	60, 60, 60, 60, 61, 61, 61, 61, 61, 62,
	62, 62, 62, 62, 62, 63, 63, 63, 63, 63,
	63, 64, 64, 71, 71, 71, 71, 71, 71, 71,
	71, 199, 199, 74, 74, 74, 74, 74, 74, 74,
	74, 74, 74, 74, 74, 74, 79, 79, 79, 79,
	79, 650, 650, 650, 650, 650, 650, 650, 650, 650,
	650, 650, 650, 650, 650, 650, 650, 650, 650, 650,
	651, 651, 652, 652, 653, 653, 654, 654, 654, 654,
	654, 654, 654, 654, 654, 654, 654, 654, 654, 654,
	654, 654, 654, 654, 654, 77, 77, 77, 77, 77,
	77, 77, 77, 77, 77, 77, 77, 77, 77, 77,
	77, 77, 88, 88, 377, 377, 340, 340, 89, 89,
	89, 90, 90, 91, 91, 75, 75, 614, 614, 393,
	393, 511, 511, 76, 622, 622, 622, 624, 624, 623,
	623, 93, 93, 416, 416, 94, 94, 94, 94, 94,
	94, 95, 95, 95, 95, 95, 95, 95, 96, 96,
	96, 96, 96, 96, 96, 96, 96, 96, 96, 96,
	96, 96, 103, 103, 103, 103, 103, 104, 104, 104,
	101, 101, 101, 98, 98, 98, 97, 97, 97, 102,
	102, 102, 613, 329, 329, 100, 100, 100, 99, 99,
	99, 394, 394, 105, 105, 105, 105, 341, 106, 106,
	106, 106, 106, 106, 106, 106, 109, 109, 108, 108,
	108, 108, 108, 108, 108, 108, 108, 108, 108, 108,
	108, 108, 108, 108, 108, 108, 108, 108, 108, 108,
	108, 108, 108, 108, 108, 108, 108, 108, 108, 110,
	110, 110, 110, 110, 110, 110, 110, 110, 110, 110,
	110, 513, 513, 4, 4, 259, 259, 258, 258, 258,
	258, 5, 5, 5, 262, 262, 261, 260, 107, 107,
	107, 478, 478, 112, 112, 112, 432, 432, 113, 113,
	113, 113, 113, 114, 114, 114, 114, 114, 114, 114,
	114, 114, 136, 136, 136, 136, 136, 136, 136, 136,
	136, 136, 136, 136, 618, 618, 386, 386, 292, 292,
	292, 292, 125, 125, 125, 125, 126, 126, 126, 126,
	127, 127, 204, 204, 143, 143, 143, 143, 142, 142,
	142, 142, 142, 142, 142, 142, 65, 65, 65, 66,
	66, 67, 67, 68, 68, 69, 69, 70, 70, 70,
	70, 70, 146, 146, 31, 31, 31, 31, 147, 147,
	645, 645, 149, 145, 145, 145, 145, 145, 144, 144,
	148, 148, 148, 148, 150, 152, 152, 152, 152, 152,
	151, 151, 151, 151, 151, 153, 153, 545, 545, 402,
	402, 543, 543, 565, 565, 544, 544, 347, 347, 347,
	347, 347, 348, 348, 348, 554, 554, 554, 554, 554,
	554, 154, 154, 154, 154, 154, 154, 154, 154, 154,
	154, 154, 154, 154, 154, 154, 154, 154, 154, 154,
	154, 154, 154, 154, 154, 154, 154, 154, 154, 154,
	154, 154, 154, 154, 154, 154, 154, 154, 154, 154,
	154, 154, 154, 154, 154, 154, 154, 154, 154, 154,
	154, 154, 154, 154, 154, 154, 154, 154, 154, 154,
	154, 154, 154, 154, 154, 154, 154, 154, 154, 154,
	154, 154, 154, 154, 154, 154, 154, 205, 205, 205,
	206, 206, 210, 210, 211, 211, 211, 212, 212, 212,
	209, 209, 209, 207, 207, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 215, 215, 213, 213, 214,
	214, 656, 656, 655, 655, 216, 216, 216, 216, 216,
	180, 180, 180, 198, 198, 198, 198, 198, 198, 198,
	198, 198, 198, 198, 403, 403, 183, 183, 183, 167,
	167, 155, 155, 155, 155, 155, 155, 155, 160, 160,
	160, 160, 160, 160, 160, 160, 161, 161, 161, 156,
	156, 169, 169, 169, 169, 169, 162, 162, 163, 163,
	163, 164, 164, 164, 164, 191, 191, 166, 166, 168,
	168, 168, 168, 168, 168, 168, 168, 168, 157, 157,
	157, 157, 171, 171, 171, 171, 439, 439, 439, 197,
	197, 170, 170, 170, 170, 170, 170, 170, 170, 170,
	170, 170, 170, 170, 170, 170, 170, 194, 194, 194,
	194, 194, 194, 637, 637, 638, 638, 638, 187, 187,
	187, 187, 187, 187, 492, 492, 181, 181, 181, 181,
	186, 186, 186, 186, 189, 189, 189, 189, 422, 422,
	178, 178, 178, 179, 179, 179, 184, 184, 196, 185,
	378, 378, 182, 182, 188, 188, 188, 188, 190, 190,
	190, 158, 158, 158, 158, 158, 158, 158, 158, 158,
	159, 159, 159, 159, 192, 192, 177, 177, 193, 193,
	193, 193, 193, 193, 193, 193, 193, 193, 193, 657,
	657, 173, 173, 173, 172, 172, 172, 172, 175, 175,
	176, 176, 176, 176, 176, 176, 174, 165, 195, 615,
	615, 611, 611, 611, 611, 611, 611, 611, 611, 611,
	612, 612, 612, 612, 617, 617, 117, 117, 117, 117,
	117, 117, 117, 128, 128, 128, 128, 128, 128, 128,
	131, 131, 118, 118, 118, 118, 118, 118, 118, 121,
	121, 119, 119, 119, 119, 120, 120, 83, 83, 83,
	83, 83, 17, 17, 17, 84, 84, 283, 283, 237,
	237, 237, 365, 365, 238, 238, 355, 355, 355, 355,
	233, 233, 234, 234, 235, 236, 236, 85, 85, 658,
	658, 658, 630, 630, 630, 631, 631, 631, 631, 631,
	631, 349, 349, 350, 350, 458, 458, 458, 458, 458,
	353, 353, 353, 354, 354, 354, 354, 354, 354, 354,
	354, 354, 363, 364, 364, 356, 356, 362, 361, 361,
	360, 360, 359, 359, 357, 358, 358, 358, 367, 367,
	366, 369, 369, 368, 457, 574, 574, 576, 576, 576,
	576, 576, 576, 576, 578, 578, 578, 578, 578, 578,
	578, 578, 578, 578, 578, 578, 578, 578, 578, 578,
	578, 440, 440, 659, 659, 660, 661, 572, 572, 572,
	573, 568, 568, 569, 569, 569, 569, 569, 351, 351,
	352, 352, 352, 352, 570, 571, 384, 384, 496, 575,
	575, 577, 577, 579, 662, 662, 662, 662, 662, 662,
	663, 663, 663, 456, 456, 455, 455, 454, 454, 375,
	375, 580, 580, 580, 580, 581, 581, 581, 581, 581,
	584, 583, 582, 582, 582, 582, 582, 87, 87, 87,
	419, 419, 418, 418, 420, 420, 420, 420, 420, 420,
	420, 420, 420, 420, 420, 420, 420, 420, 420, 201,
	201, 295, 295, 295, 81, 81, 81, 14, 14, 14,
	14, 14, 14, 14, 310, 310, 15, 15, 15, 632,
	632, 632, 86, 86, 86, 86, 86, 86, 373, 373,
	373, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 620, 620, 619,
	619, 296, 296, 665, 665, 92, 92, 92, 92, 92,
	92, 92, 92, 514, 514, 515, 515, 80, 80, 80,
	80, 80, 441, 441, 438, 438, 437, 437, 383, 383,
	494, 494, 494, 495, 300, 300, 301, 301, 256, 256,
	256, 34, 33, 24, 24, 28, 28, 29, 29, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 30, 30,
	51, 51, 51, 51, 52, 52, 52, 52, 55, 55,
	56, 56, 50, 50, 50, 50, 53, 53, 47, 47,
	57, 57, 57, 57, 57, 639, 641, 641, 640, 640,
	644, 644, 644, 644, 644, 644, 642, 642, 643, 643,
	646, 646, 647, 647, 124, 124, 129, 129, 129, 129,
	129, 130, 130, 130, 130, 132, 132, 132, 132, 141,
	141, 200, 200, 200, 200, 200, 200, 200, 59, 59,
	59, 59, 72, 72, 72, 72, 139, 667, 667, 667,
	140, 140, 140, 666, 666, 293, 293, 451, 451, 452,
	452, 668, 668, 453, 453, 453, 453, 453, 286, 285,
	287, 287, 288, 288, 78, 78, 78, 276, 276, 275,
	277, 277, 278, 278, 273, 273, 557, 557, 280, 280,
	280, 281, 281, 269, 269, 270, 270, 271, 271, 272,
	272, 284, 284, 552, 552, 669, 669, 115, 115, 115,
	203, 203, 339, 339, 339, 448, 448, 448, 376, 376,
	307, 307, 450, 450, 450, 450, 450, 415, 415, 415,
	202, 202, 391, 391, 405, 405, 406, 406, 508, 508,
	407, 122, 122, 123, 123, 138, 138, 241, 241, 239,
	239, 239, 239, 239, 239, 239, 239, 246, 246, 247,
	247, 248, 248, 249, 250, 250, 250, 250, 395, 395,
	251, 251, 251, 240, 240, 240, 242, 242, 242, 242,
	242, 242, 242, 245, 245, 245, 245, 252, 252, 252,
	244, 244, 591, 591, 591, 593, 593, 595, 595, 594,
	594, 590, 590, 592, 592, 664, 664, 421, 421, 421,
	372, 374, 370, 370, 371, 371, 381, 381, 379, 380,
	380, 382, 382, 493, 493, 493, 257, 257, 257, 412,
	412, 412, 412, 413, 413, 444, 444, 442, 442, 442,
	442, 443, 443, 445, 445, 445, 446, 446, 447, 447,
	409, 409, 410, 410, 411, 411, 411, 411, 474, 474,
	243, 243, 243, 388, 388, 388, 389, 389, 464, 464,
	464, 464, 464, 464, 464, 464, 464, 464, 464, 465,
	465, 463, 463, 463, 463, 497, 497, 497, 497, 497,
	497, 497, 497, 497, 498, 499, 499, 390, 390, 500,
	449, 449, 609, 609, 609, 610, 610, 491, 491, 501,
	501, 501, 501, 501, 501, 489, 489, 490, 490, 509,
	510, 510, 425, 425, 425, 425, 423, 423, 426, 426,
	426, 426, 426, 424, 424, 502, 502, 502, 502, 414,
	414, 503, 503, 503, 503, 504, 505, 505, 506, 506,
	459, 460, 460, 516, 516, 516, 516, 518, 387, 387,
	387, 387, 387, 567, 566, 566, 517, 517, 517, 517,
	517, 517, 517, 517, 517, 532, 532, 532, 532, 532,
	532, 532, 532, 532, 532, 532, 532, 532, 532, 532,
	532, 532, 532, 532, 532, 532, 532, 532, 532, 532,
	532, 532, 532, 532, 532, 532, 532, 533, 533, 533,
	533, 533, 533, 533, 519, 519, 519, 519, 519, 523,
	523, 523, 522, 522, 522, 522, 522, 522, 522, 522,
	522, 522, 522, 524, 524, 529, 529, 530, 530, 530,
	525, 526, 531, 531, 531, 531, 670, 670, 535, 535,
	527, 527, 527, 527, 527, 527, 527, 527, 527, 521,
	521, 521, 528, 528, 528, 434, 434, 434, 434, 434,
	434, 434, 434, 434, 434, 434, 434, 434, 433, 433,
	435, 435, 466, 466, 466, 466, 466, 466, 466, 466,
	466, 466, 466, 466, 466, 466, 466, 466, 466, 466,
	466, 466, 466, 466, 466, 466, 466, 466, 466, 466,
	466, 466, 466, 466, 466, 466, 466, 466, 466, 466,
	466, 466, 466, 466, 466, 466, 466, 466, 466, 466,
	466, 466, 466, 466, 466, 466, 466, 466, 466, 466,
	466, 466, 466, 466, 466, 466, 466, 466, 466, 466,
	466, 466, 466, 466, 466, 466, 466, 466, 466, 466,
	466, 466, 466, 466, 466, 466, 466, 466, 466, 466,
	466, 466, 467, 467, 467, 467, 467, 467, 467, 467,
	467, 467, 467, 467, 467, 467, 467, 467, 467, 467,
	467, 467, 467, 467, 467, 467, 467, 467, 467, 467,
	467, 467, 467, 468, 468, 468, 468, 469, 469, 469,
	469, 469, 469, 469, 469, 469, 469, 469, 469, 469,
	469, 469, 469, 469, 469, 469, 469, 469, 469, 469,
	469, 469, 585, 585, 585, 585, 585, 585, 585, 585,
	470, 470, 588, 588, 589, 589, 586, 586, 586, 586,
	586, 586, 586, 586, 586, 586, 586, 586, 586, 586,
	586, 586, 586, 586, 586, 586, 586, 586, 586, 587,
	587, 587, 587, 587, 587, 587, 587, 587, 587, 587,
	587, 587, 587, 587, 587, 587, 587, 587, 587, 587,
	587, 587, 587, 587, 587, 587, 587, 587, 587, 587,
	587, 587, 587, 587, 587, 587, 587, 596, 596, 597,
	597, 599, 599, 600, 600, 601, 602, 602, 602, 603,
	604, 604, 598, 598, 605, 605, 605, 605, 606, 606,
	607, 607, 607, 607, 607, 608, 608, 608, 608, 608,
	480, 480, 481, 481, 487, 487, 487, 344, 344, 344,
	344, 344, 344, 344, 344, 344, 344, 344, 344, 344,
	344, 344, 344, 344, 344, 344, 344, 344, 344, 344,
	344, 344, 344, 344, 344, 344, 344, 344, 344, 344,
	344, 344, 346, 346, 345, 297, 297, 297, 297, 297,
	297, 400, 400, 398, 398, 398, 401, 401, 399, 399,
	397, 397, 396, 396, 477, 477, 475, 475, 479, 479,
	427, 427, 534, 534, 534, 534, 534, 534, 534, 534,
	428, 428, 428, 436, 429, 429, 430, 430, 430, 430,
	430, 471, 472, 431, 431, 431, 473, 473, 482, 486,
	486, 485, 484, 484, 483, 483, 461, 461, 462, 462,
	408, 408, 671, 671, 404, 404, 507, 507, 507, 507,
	343, 343, 392, 392, 342, 342, 334, 334, 335, 335,
	335, 335, 385, 385, 488, 488, 536, 536, 537, 537,
	538, 538, 539, 539, 540, 541, 542, 476, 476, 318,
	317, 304, 305, 316, 315, 314, 303, 306, 311, 312,
	313, 308, 309, 325, 324, 323, 274, 279, 330, 331,
	331, 333, 333, 332, 332, 320, 321, 322, 512, 302,
	336, 336, 337, 337, 337, 338, 338, 338, 338, 298,
	298, 299, 299, 326, 326, 327, 328, 328, 319, 319,
	319, 289, 289, 289, 290, 290, 291, 291, 550, 550,
	547, 547, 547, 548, 548, 548, 549, 549, 549, 549,
	546, 546, 546, 546, 546, 558, 558, 558, 558, 558,
	558, 558, 558, 558, 558, 558, 558, 558, 558, 558,
	558, 558, 558, 558, 558, 558, 558, 558, 558, 558,
	558, 558, 558, 558, 558, 558, 558, 558, 558, 558,
	558, 558, 558, 558, 558, 558, 558, 558, 558, 558,
	558, 558, 558, 558, 558, 558, 558, 558, 558, 558,
	558, 558, 558, 558, 558, 558, 558, 558, 558, 558,
	558, 558, 558, 558, 558, 558, 558, 558, 558, 558,
	558, 558, 558, 558, 558, 558, 558, 558, 558, 558,
	558, 558, 558, 558, 558, 558, 558, 558, 558, 558,
	558, 558, 558, 558, 558, 558, 558, 558, 558, 558,
	558, 558, 558, 558, 558, 558, 558, 558, 558, 558,
	558, 558, 558, 558, 558, 558, 558, 558, 558, 558,
	558, 558, 558, 558, 558, 558, 558, 558, 558, 558,
	558, 558, 558, 558, 558, 558, 558, 558, 558, 558,
	558, 558, 558, 558, 558, 558, 558, 558, 558, 558,
	558, 558, 558, 558, 558, 558, 558, 558, 558, 558,
	558, 558, 558, 558, 558, 558, 558, 558, 558, 558,
	558, 558, 558, 558, 558, 558, 558, 558, 558, 558,
	558, 558, 558, 558, 558, 558, 558, 558, 558, 558,
	558, 558, 558, 558, 558, 558, 558, 558, 558, 558,
	558, 558, 558, 558, 558, 558, 558, 558, 558, 558,
	558, 558, 558, 558, 558, 558, 558, 558, 558, 558,
	558, 558, 558, 558, 558, 558, 558, 558, 558, 558,
	558, 558, 558, 558, 558, 558, 558, 558, 558, 558,
	558, 558, 558, 558, 558, 558, 558, 558, 558, 558,
	558, 558, 558, 558, 558, 558, 558, 558, 558, 558,
	558, 558, 558, 558, 558, 558, 558, 558, 558, 558,
	558, 558, 558, 558, 558, 558, 558, 558, 558, 558,
	558, 558, 558, 558, 558, 558, 558, 558, 558, 558,
	558, 558, 558, 558, 558, 558, 558, 558, 558, 558,
	558, 558, 558, 558, 558, 558, 558, 558, 558, 558,
	558, 558, 558, 558, 558, 558, 558, 558, 558, 558,
	558, 558, 558, 558, 558, 558, 558, 558, 558, 558,
	558, 558, 558, 558, 558, 558, 558, 558, 558, 558,
	558, 558, 558, 558, 558, 558, 558, 558, 558, 558,
	558, 558, 558, 558, 558, 558, 558, 558, 558, 558,
	558, 558, 558, 558, 558, 558, 558, 558, 558, 558,
	558, 558, 558, 558, 558, 558, 558, 558, 558, 558,
	562, 562, 562, 562, 562, 562, 562, 562, 562, 562,
	562, 562, 562, 562, 562, 562, 562, 562, 562, 562,
	562, 562, 562, 562, 562, 562, 562, 562, 562, 562,
	562, 562, 562, 562, 562, 562, 562, 562, 562, 562,
	562, 562, 562, 562, 562, 562, 562, 562, 562, 562,
	562, 562, 559, 559, 560, 560, 560, 560, 560, 560,
	560, 560, 560, 560, 560, 560, 560, 560, 560, 560,
	560, 560, 561, 563, 563, 563, 563, 563, 563, 563,
	563, 563, 563, 563, 563, 563, 563, 563, 563, 563,
	563, 563, 563, 563, 563, 563, 563, 563, 563, 563,
	563, 563, 563, 563, 563, 563, 563, 563, 563, 563,
	563, 563, 563, 563, 563, 563, 563, 563, 563, 563,
	563, 563, 563, 563, 563, 563, 563, 563, 563, 563,
	563, 563, 563, 563, 563, 563, 563, 563, 563, 563,
	563, 563, 563, 563, 563, 563, 563, 563, 563, 563,
	563, 563, 563, 564, 564,
}

var sqlR2 = [...]int{
	0, 1, 1, 1, 1, 2, 1, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 1, 1, 2, 1, 2, 1, 2, 1, 0,
	1, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 1, 3, 1, 1, 1, 3, 1, 1,
	1, 1, 3, 4, 6, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 3, 6, 4, 4, 6,
	9, 6, 8, 4, 4, 5, 1, 1, 3, 1,
	1, 1, 1, 1, 1, 1, 3, 4, 6, 4,
	6, 6, 9, 6, 9, 6, 5, 6, 5, 1,
	1, 1, 1, 1, 1, 0, 1, 6, 6, 4,
	8, 7, 10, 9, 4, 4, 4, 3, 4, 4,
	4, 7, 7, 9, 8, 9, 5, 3, 5, 7,
	4, 12, 4, 12, 1, 3, 5, 5, 2, 5,
	3, 6, 4, 4, 4, 6, 5, 6, 5, 6,
	4, 8, 3, 8, 4, 2, 3, 10, 3, 6,
	4, 3, 1, 3, 4, 4, 2, 1, 1, 3,
	1, 3, 2, 4, 3, 2, 3, 2, 0, 1,
	1, 0, 2, 0, 7, 10, 6, 8, 6, 6,
	6, 9, 4, 3, 2, 2, 0, 1, 1, 1,
	1, 1, 3, 1, 3, 6, 4, 6, 7, 9,
	6, 2, 2, 3, 0, 8, 6, 8, 7, 2,
	0, 1, 2, 5, 0, 1, 3, 3, 1, 1,
	3, 3, 12, 3, 1, 1, 2, 1, 4, 0,
	3, 3, 0, 4, 6, 0, 5, 7, 6, 8,
	7, 9, 8, 2, 1, 3, 1, 3, 2, 5,
	0, 1, 3, 3, 3, 3, 1, 1, 1, 1,
	1, 1, 3, 3, 3, 3, 1, 3, 3, 3,
	6, 4, 9, 7, 12, 9, 2, 7, 2, 1,
	1, 1, 3, 3, 0, 3, 1, 3, 1, 1,
	3, 2, 5, 0, 7, 5, 2, 0, 1, 2,
	3, 1, 1, 2, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 2, 3, 3, 3, 3, 3, 3,
	5, 3, 3, 5, 3, 3, 5, 3, 3, 5,
	3, 4, 3, 6, 6, 6, 6, 6, 8, 4,
	4, 1, 1, 1, 2, 1, 1, 2, 1, 2,
	1, 1, 1, 2, 1, 2, 6, 3, 8, 5,
	3, 4, 3, 3, 4, 3, 4, 4, 4, 3,
	5, 7, 3, 3, 4, 3, 3, 3, 3, 3,
	2, 0, 1, 0, 1, 0, 4, 3, 3, 3,
	3, 3, 6, 4, 4, 4, 3, 5, 3, 3,
	3, 3, 3, 3, 3, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 4, 1, 2, 1, 2,
	1, 2, 7, 3, 2, 0, 1, 3, 3, 1,
	0, 1, 2, 2, 1, 6, 5, 1, 2, 1,
	3, 2, 0, 7, 2, 5, 0, 1, 3, 3,
	1, 9, 3, 2, 0, 2, 2, 2, 2, 2,
	2, 1, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 4, 6, 5, 7, 3, 4, 6, 3,
	4, 6, 3, 5, 7, 3, 4, 6, 3, 4,
	6, 3, 1, 1, 3, 4, 6, 3, 3, 5,
	3, 1, 3, 2, 2, 2, 2, 1, 2, 2,
	5, 3, 3, 6, 6, 3, 1, 1, 1, 1,
	2, 1, 1, 1, 2, 1, 1, 2, 1, 2,
	1, 2, 1, 1, 1, 2, 1, 1, 2, 1,
	1, 1, 1, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 1, 1, 2, 1,
	2, 1, 3, 4, 3, 1, 2, 2, 2, 2,
	2, 4, 6, 3, 1, 2, 2, 7, 5, 7,
	2, 3, 0, 3, 5, 2, 3, 0, 2, 3,
	2, 3, 2, 7, 4, 7, 8, 8, 9, 11,
	5, 2, 6, 9, 4, 7, 7, 10, 7, 10,
	10, 13, 5, 2, 2, 1, 1, 3, 1, 1,
	1, 1, 1, 2, 1, 2, 2, 3, 2, 2,
	4, 3, 2, 2, 1, 2, 1, 3, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 1, 3, 5,
	4, 6, 4, 3, 0, 1, 3, 2, 4, 2,
	4, 1, 6, 3, 4, 4, 3, 4, 1, 1,
	1, 1, 5, 3, 3, 2, 2, 6, 3, 3,
	3, 3, 4, 4, 3, 1, 3, 3, 2, 2,
	1, 3, 3, 3, 1, 2, 1, 1, 2, 2,
	3, 1, 1, 1, 1, 1, 3, 2, 2, 1,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 1, 2, 1, 2, 1, 2, 1, 1, 2,
	1, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 2, 1, 1, 1, 2, 1, 2, 2, 2,
	9, 2, 1, 0, 1, 1, 0, 1, 2, 0,
	2, 2, 0, 2, 2, 1, 2, 3, 3, 4,
	4, 4, 4, 3, 3, 1, 1, 1, 0, 1,
	1, 1, 0, 1, 1, 3, 3, 3, 3, 3,
	2, 3, 3, 1, 2, 1, 1, 1, 1, 1,
	1, 1, 2, 2, 2, 3, 5, 7, 3, 3,
	3, 4, 4, 6, 5, 5, 5, 3, 4, 4,
	3, 4, 4, 3, 4, 4, 1, 4, 4, 5,
	3, 5, 5, 5, 7, 3, 3, 3, 4, 6,
	4, 2, 6, 4, 3, 2, 3, 4, 3, 5,
	3, 6, 5, 6, 3, 5, 6, 3, 5, 3,
	5, 3, 3, 4, 4, 5, 0, 1, 1, 1,
	1, 3, 2, 3, 4, 3, 4, 3, 5, 3,
	4, 4, 3, 4, 5, 3, 4, 3, 4, 4,
	5, 3, 3, 1, 1, 0, 2, 3, 5, 4,
	6, 4, 6, 4, 1, 0, 3, 4, 4, 5,
	7, 5, 3, 3, 3, 4, 4, 5, 2, 0,
	4, 2, 3, 4, 2, 3, 3, 3, 7, 5,
	2, 0, 3, 3, 4, 3, 3, 3, 5, 3,
	3, 3, 4, 4, 4, 4, 4, 4, 4, 3,
	4, 5, 4, 4, 2, 3, 2, 3, 6, 6,
	7, 9, 7, 9, 4, 3, 4, 4, 5, 1,
	1, 10, 10, 3, 5, 5, 5, 3, 5, 6,
	4, 4, 5, 5, 2, 3, 2, 5, 4, 2,
	0, 1, 1, 1, 1, 3, 2, 2, 2, 2,
	2, 2, 2, 1, 2, 0, 1, 2, 1, 2,
	1, 2, 2, 1, 2, 1, 2, 1, 2, 2,
	4, 3, 3, 7, 3, 3, 7, 3, 3, 3,
	3, 3, 3, 3, 3, 4, 3, 3, 6, 5,
	8, 3, 6, 6, 3, 12, 15, 1, 0, 1,
	2, 3, 0, 2, 0, 4, 0, 4, 5, 4,
	1, 1, 1, 3, 3, 1, 3, 10, 13, 0,
	2, 3, 1, 1, 0, 1, 2, 2, 2, 2,
	1, 1, 0, 1, 3, 1, 1, 1, 2, 3,
	3, 3, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 1, 0, 1, 0, 1, 1, 0,
	1, 4, 1, 0, 3, 7, 7, 1, 1, 3,
	7, 1, 3, 11, 3, 2, 0, 3, 1, 2,
	2, 3, 2, 6, 2, 1, 2, 2, 3, 6,
	4, 2, 3, 5, 5, 5, 2, 5, 5, 2,
	2, 2, 0, 1, 1, 3, 4, 10, 11, 9,
	5, 3, 1, 5, 9, 7, 11, 3, 3, 0,
	2, 4, 3, 3, 1, 6, 1, 3, 1, 2,
	0, 1, 2, 3, 0, 1, 3, 3, 2, 2,
	1, 1, 1, 4, 0, 3, 0, 4, 0, 3,
	0, 2, 2, 2, 0, 1, 1, 2, 2, 0,
	3, 3, 2, 1, 1, 2, 2, 5, 8, 4,
	1, 0, 1, 2, 2, 1, 2, 3, 3, 2,
	2, 3, 2, 2, 2, 2, 2, 3, 1, 4,
	2, 3, 2, 2, 4, 7, 3, 4, 6, 5,
	7, 5, 5, 3, 3, 0, 2, 2, 2, 1,
	1, 1, 8, 10, 11, 8, 11, 5, 4, 2,
	0, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 2, 2,
	0, 3, 3, 0, 1, 8, 11, 3, 6, 6,
	5, 3, 4, 1, 0, 1, 3, 16, 19, 15,
	18, 4, 2, 0, 1, 0, 1, 0, 1, 3,
	2, 4, 2, 3, 1, 0, 2, 0, 1, 1,
	0, 9, 6, 6, 8, 6, 8, 5, 7, 2,
	6, 7, 4, 4, 5, 2, 4, 6, 6, 8,
	6, 7, 8, 9, 6, 7, 8, 9, 6, 8,
	6, 8, 6, 7, 8, 9, 6, 8, 6, 8,
	6, 6, 8, 8, 4, 7, 3, 0, 7, 10,
	1, 1, 1, 1, 2, 2, 3, 0, 3, 0,
	1, 0, 2, 0, 2, 2, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 2,
	2, 1, 2, 1, 2, 1, 2, 1, 3, 2,
	3, 2, 2, 2, 2, 2, 2, 1, 1, 0,
	2, 4, 2, 1, 0, 2, 1, 1, 0, 1,
	3, 1, 0, 1, 1, 1, 1, 1, 2, 3,
	2, 2, 1, 2, 14, 16, 3, 1, 0, 4,
	1, 0, 2, 2, 3, 0, 1, 1, 4, 4,
	5, 1, 0, 3, 0, 3, 0, 3, 0, 3,
	0, 4, 0, 3, 0, 1, 0, 6, 7, 3,
	6, 3, 1, 3, 1, 1, 4, 2, 1, 3,
	1, 3, 4, 8, 11, 7, 10, 2, 2, 0,
	10, 3, 2, 0, 1, 3, 1, 1, 3, 3,
	5, 6, 4, 5, 4, 1, 1, 3, 3, 1,
	2, 4, 4, 2, 3, 5, 5, 1, 3, 1,
	0, 1, 2, 3, 2, 4, 2, 3, 0, 2,
	0, 2, 1, 2, 1, 1, 1, 2, 1, 2,
	1, 2, 1, 8, 8, 8, 2, 4, 4, 4,
	2, 2, 2, 2, 3, 1, 3, 1, 2, 6,
	7, 1, 0, 1, 0, 1, 0, 1, 1, 0,
	1, 5, 1, 0, 1, 0, 1, 0, 3, 3,
	5, 1, 3, 3, 4, 5, 2, 2, 0, 2,
	2, 1, 1, 1, 0, 1, 0, 2, 2, 5,
	4, 2, 3, 1, 1, 1, 1, 1, 1, 1,
	3, 0, 1, 3, 1, 3, 3, 3, 2, 0,
	4, 2, 5, 3, 2, 0, 1, 3, 3, 5,
	1, 1, 1, 1, 1, 1, 1, 3, 5, 1,
	3, 2, 4, 4, 0, 4, 4, 3, 4, 1,
	5, 3, 4, 5, 5, 1, 5, 1, 3, 2,
	0, 3, 0, 2, 3, 1, 3, 2, 0, 3,
	5, 6, 4, 6, 4, 3, 2, 1, 0, 5,
	1, 0, 2, 2, 2, 1, 1, 0, 1, 1,
	1, 1, 0, 4, 2, 1, 2, 2, 4, 1,
	3, 1, 2, 3, 2, 4, 1, 0, 1, 0,
	2, 1, 0, 2, 5, 7, 2, 1, 2, 4,
	3, 5, 0, 1, 3, 5, 1, 2, 1, 1,
	1, 1, 1, 2, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	4, 4, 6, 6, 1, 1, 1, 1, 1, 3,
	5, 0, 1, 1, 1, 1, 1, 2, 2, 2,
	2, 2, 1, 3, 0, 5, 4, 1, 2, 1,
	4, 1, 1, 2, 1, 1, 1, 1, 1, 0,
	1, 2, 5, 1, 4, 2, 5, 1, 4, 3,
	3, 0, 1, 2, 4, 1, 1, 1, 1, 1,
	1, 3, 3, 3, 3, 3, 3, 3, 1, 0,
	1, 4, 1, 3, 3, 3, 5, 2, 2, 2,
	2, 2, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 2, 3, 3, 3, 2, 2,
	3, 5, 4, 6, 3, 5, 4, 6, 4, 6,
	5, 7, 3, 3, 3, 3, 3, 4, 3, 2,
	4, 2, 3, 3, 4, 3, 4, 3, 4, 5,
	6, 6, 7, 6, 7, 6, 7, 3, 4, 4,
	1, 3, 1, 3, 3, 2, 2, 2, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 2, 3, 5,
	6, 6, 7, 1, 2, 1, 2, 1, 1, 1,
	1, 1, 6, 1, 1, 1, 1, 1, 1, 2,
	1, 5, 5, 6, 3, 1, 1, 1, 2, 2,
	2, 4, 3, 5, 6, 8, 6, 5, 4, 3,
	2, 2, 4, 1, 1, 1, 5, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 6, 6,
	8, 8, 6, 4, 6, 6, 6, 4, 1, 3,
	3, 3, 3, 3, 4, 3, 3, 4, 3, 3,
	4, 3, 3, 4, 3, 3, 3, 3, 3, 4,
	3, 4, 3, 4, 3, 4, 4, 3, 6, 5,
	5, 5, 4, 4, 3, 4, 3, 5, 0, 5,
	0, 2, 0, 1, 3, 3, 2, 2, 0, 6,
	1, 0, 3, 0, 3, 3, 3, 0, 1, 4,
	2, 2, 2, 2, 2, 3, 2, 2, 3, 0,
	4, 1, 1, 5, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 3, 4, 1, 1, 1, 2, 1,
	2, 2, 3, 1, 2, 3, 2, 3, 2, 3,
	1, 0, 1, 3, 1, 3, 3, 3, 1, 3,
	3, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	4, 3, 1, 2, 3, 0, 3, 3, 2, 2,
	1, 2, 2, 3, 2, 1, 1, 1, 5, 1,
	2, 4, 2, 0, 1, 0, 3, 5, 1, 0,
	1, 2, 1, 0, 1, 3, 3, 2, 1, 1,
	1, 3, 1, 3, 3, 1, 1, 1, 1, 5,
	3, 1, 1, 3, 1, 1, 1, 1, 2, 2,
	1, 1, 2, 2, 1, 1, 1, 3, 5, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	3, 1, 3, 1, 0, 1, 1, 1, 1, 1,
	1, 1, 3, 5, 7, 1, 7, 5, 3, 1,
	1, 1, 1, 1, 1, 1, 3, 5, 1, 1,
	1, 1, 1, 1, 1, 0, 3, 0, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1,
}

var sqlChk = [...]int{
	-1000, -1, -2, 629, -108, -105, -73, -71, -112, -113,
	-94, -114, -107, -136, -141, -122, -123, -124, -137, -143,
	-200, -205, -206, -207, -216, -3, -58, -60, -74, -93,
	-95, -106, -116, -115, -117, -125, -133, -128, -111, -65,
	-138, -142, -154, -201, -202, -203, 33, 32, 104, 83,
	160, 133, 142, 211, 401, 449, 461, 417, 147, 440,
	422, -148, -149, 480, -59, -72, -140, -139, 76, 134,
	176, 432, -6, -14, -31, -18, 30, 48, -61, -62,
	-63, -64, 65, -81, -77, -88, -82, -75, -76, -79,
	-650, 106, -592, -96, -99, -132, -654, 168, 230, -118,
	-119, -120, 383, -126, -127, 442, -129, -130, -131, 445,
	169, -67, -66, 162, -239, -241, -145, -144, -146, -204,
	-155, -156, -157, -158, -159, -161, -162, -164, -191, -165,
	-166, -167, -168, -169, -170, -174, -194, -171, -172, -173,
	-176, -175, -177, -182, -178, -179, -180, -181, -183, -184,
	-186, -187, -188, -189, -190, -192, -193, 485, -185, -195,
	-163, -196, 549, 52, 501, 85, 152, 453, 21, -7,
	-8, -9, -10, -11, -12, -13, -17, -16, -57, -4,
	-5, -78, -80, -83, -84, -85, -92, -86, -87, -591,
	-97, -98, -101, -103, -104, -100, -102, 441, 601, -242,
	-240, 626, 565, -160, -21, -26, -22, -23, -25, -27,
	-24, -28, -29, -30, -43, -48, -45, -46, -44, -47,
	-49, -50, -51, -52, -53, -54, -55, -56, -33, -39,
	-40, -34, -35, -36, -37, -38, -41, -42, -19, -20,
	-32, 588, 597, -245, -243, -244, -252, 472, 573, 522,
	629, 629, 629, 629, 629, 629, 629, 629, 629, 629,
	629, 629, 629, 629, 629, 629, 629, 629, 629, 629,
	629, 629, 629, 629, 629, -341, 2, -320, -326, -327,
	-328, -319, -289, -561, -564, 4, -558, -562, 175, 240,
	344, 21, 22, 24, 23, 25, 26, 27, 28, 30,
	31, 41, 43, 44, 46, 47, 48, 49, 50, 51,
	52, 56, 58, 62, 63, 64, 65, 66, 67, 71,
	76, 77, 82, 83, 84, 85, 86, 87, 88, 89,
	95, 92, 93, 94, 96, 98, 100, 101, 102, 103,
	104, 105, 107, 108, 109, 111, 112, 113, 121, 122,
	123, 124, 125, 127, 133, 128, 134, 137, 132, 136,
	138, 140, 141, 142, 145, 146, 147, 149, 150, 151,
	153, 154, 155, 157, 158, 160, 161, 162, 165, 163,
	166, 164, 167, 168, 169, 170, 173, 181, 182, 183,
	188, 190, 191, 192, 194, 197, 198, 199, 202, 203,
	204, 205, 206, 207, 208, 209, 210, 212, 216, 218,
	219, 220, 221, 222, 223, 229, 230, 232, 233, 234,
	235, 236, 241, 242, 243, 247, 253, 254, 258, 259,
	260, 262, 266, 267, 268, 269, 270, 271, 273, 275,
	274, 277, 280, 281, 284, 285, 286, 287, 288, 289,
	293, 294, 290, 295, 296, 298, 299, 302, 300, 303,
	304, 301, 305, 307, 308, 309, 310, 311, 312, 313,
	314, 315, 316, 317, 318, 306, 321, 319, 323, 324,
	325, 326, 327, 342, 337, 338, 339, 331, 332, 328,
	333, 329, 330, 334, 335, 341, 336, 346, 347, 348,
	349, 352, 227, 246, 354, 355, 358, 360, 377, 363,
	364, 365, 368, 369, 372, 375, 376, 378, 379, 380,
	381, 382, 383, 384, 385, 386, 388, 389, 391, 392,
	393, 395, 396, 397, 399, 401, 402, 404, 405, 406,
	408, 409, 410, 411, 412, 413, 414, 416, 417, 419,
	418, 420, 422, 424, 425, 426, 432, 433, 440, 434,
	436, 437, 438, 439, 441, 442, 443, 444, 445, 447,
	448, 449, 451, 452, 453, 454, 455, 457, 459, 460,
	464, 465, 466, 482, 483, 504, 461, 462, 463, 467,
	468, 469, 470, 471, 475, 473, 474, 476, 477, 478,
	480, 481, 484, 485, 487, 488, 489, 490, 491, 492,
	493, 496, 498, 499, 500, 501, 502, 521, 503, 505,
	509, 510, 511, 512, 506, 507, 520, 514, 515, 517,
	518, 523, 524, 525, 526, 527, 528, 530, 531, 533,
	541, 542, 543, 544, 546, 549, 550, 551, 552, 539,
	554, 555, 558, 559, 563, 560, 564, 561, 562, 565,
	567, 570, 571, 572, 578, 577, 579, 580, 581, 583,
	584, 589, 590, 592, 593, 594, 37, 53, 54, 57,
	59, 61, 72, 73, 74, 78, 129, 130, 159, 171,
	172, 184, 200, 201, 213, 215, 224, 225, 226, 248,
	249, 251, 256, 278, 351, 353, 370, 374, 390, 394,
	398, 400, 415, 456, 494, 508, 513, 534, 535, 536,
	537, 545, 547, 573, 574, 575, 582, 591, -341, 2,
	-320, 361, -313, 2, -289, -289, 401, 29, 2, 29,
	389, 474, 525, 527, 2, -618, -386, 2, 29, -292,
	-289, 106, 211, 472, -313, 2, -618, 211, -386, 26,
	2, -289, 2, 375, 23, 28, 69, 80, 102, 145,
	170, 193, 197, -653, 377, 409, 459, 476, 520, 531,
	546, 2, 577, 299, 473, 522, 240, 124, 551, 467,
	-632, 464, 465, 375, 407, 451, 214, 566, -293, 2,
	461, -289, 299, 2, 629, 98, 77, 456, 477, -151,
	2, 289, 542, -152, -153, -150, 534, -545, 467, 451,
	321, -289, 629, 629, 629, 29, -302, 2, -289, -302,
	2, -208, 2, -302, -655, -215, -214, -213, 22, 433,
	183, 271, 195, 231, 326, 404, 194, 50, 522, 240,
	467, 124, 518, 629, 629, 2, 522, 380, 577, 473,
	124, 412, 240, 551, 197, 145, 28, 71, 48, 528,
	605, 467, -632, 602, 603, 299, 131, -616, 2, -611,
	4, -562, -558, -335, -334, 522, 528, 124, -328, -319,
	618, -327, 629, 629, 629, 629, 2, 259, 260, 411,
	410, 477, 478, 29, 629, 629, 629, 629, 464, 2,
	170, 23, 28, 69, 97, 102, 131, 193, 197, 366,
	-651, 377, 409, 476, 520, 524, 531, 546, -631, 503,
	71, 439, 467, -630, -632, 299, 551, 145, -437, 124,
	289, 209, 559, 527, 525, 557, 137, 247, 562, 561,
	629, 629, -109, 2, 626, 33, 32, -108, -112, 147,
	480, -232, 522, 252, 2, -289, 629, 629, 629, 2,
	259, 260, 464, 465, 29, 629, 629, 195, -611, 518,
	2, 629, 629, 629, 2, 29, 259, 260, 464, 465,
	252, 2, 71, 469, 629, 629, 629, 629, 629, 629,
	629, 629, 629, 629, 629, 629, 629, 629, 629, 629,
	629, 629, 629, 629, 629, 629, 629, 629, 629, 629,
	629, 629, 629, 629, 629, 629, 629, 629, 629, 629,
	629, 2, -198, 477, 503, 220, 49, 48, 77, 29,
	408, 82, 381, 125, 131, 154, 552, 212, 240, 241,
	267, 97, 98, -439, 46, 260, 71, 259, 465, -637,
	464, -492, 523, 468, 474, 517, 89, 271, 461, 542,
	544, 106, 567, 452, 594, 412, 413, 515, 426, 290,
	163, 196, 4, 124, 321, 451, 479, 275, 274, 534,
	289, 460, 384, 87, 629, -664, 2, 522, -666, 2,
	542, 542, 2, -666, 2, -666, 2, -666, 2, -667,
	542, 591, 629, 629, 629, 629, 629, 629, 629, 629,
	629, 629, 629, 629, 629, 629, 629, 629, 629, 629,
	629, 629, -240, -242, -241, 629, 629, 629, 629, 629,
	629, 629, -198, 477, 2, 77, 29, 29, -379, -381,
	556, 250, 156, 367, -239, -241, 2, -591, -543, 2,
	-466, -565, -468, 616, 617, 609, 519, 70, -345, 343,
	595, -480, 131, 557, 361, -564, -469, -482, 159, 377,
	456, -401, 8, 9, 5, 6, 7, -298, -470, -476,
	548, 174, 350, -338, 630, 10, 626, -588, -241, -481,
	38, 215, 68, -547, -337, -299, -519, 251, -336, -319,
	-585, -586, 4, -558, -559, -548, -522, -530, -526, -527,
	-533, -289, -561, 80, 115, 116, 114, 119, 118, 292,
	291, 120, 117, 479, 566, 69, 37, 224, 225, 256,
	351, 226, 78, -587, 146, -560, 248, 249, 494, 54,
	415, 184, 130, 129, 353, 59, 57, 574, -531, 126,
	534, 535, 536, 537, 200, 201, 61, 171, 172, 374,
	398, 513, 545, 547, 213, 278, 45, 110, 196, 245,
	228, 255, 257, 261, 279, 282, 322, 340, 345, 371,
	373, 450, 486, -670, 575, 508, 72, 73, 189, -593,
	418, -594, -313, -593, 629, 629, 631, 629, -370, -372,
	-374, 2, 29, 143, 626, 2, -497, 2, -498, -502,
	-241, 272, -501, 626, -499, 624, -320, 362, -589, 457,
	-585, -586, -298, -319, -337, 4, -558, -560, 628, -375,
	626, 124, 467, 522, 81, 240, 97, 170, 197, -432,
	626, -289, 29, 361, 538, 631, -371, 406, -478, 626,
	361, 364, 195, 364, 63, 303, 2, 2, 2, 2,
	2, 224, -289, 522, 123, 2, 270, 2, 2, 2,
	2, 2, 2, 2, -394, 224, 2, -320, 577, -394,
	224, 2, -394, 224, 2, -438, 2, 91, -303, 224,
	2, -289, -329, 224, 2, -324, -326, -333, 224, 2,
	-331, -289, -553, 224, 2, -551, 4, -558, 120, 479,
	-466, 2, -138, 2, 63, -289, 577, 2, 482, 2,
	626, -151, 2, 74, 542, 45, 477, -152, 2, -452,
	2, -453, -285, -286, -287, -509, -288, 258, 405, 414,
	598, 135, 343, 594, -645, 195, 608, 538, -543, -543,
	-543, -402, 628, -210, 56, -302, -656, -655, -656, -541,
	29, -536, 8, -537, 616, 617, -541, -541, -656, -656,
	2, 2, 2, 2, 2, 2, -502, 224, -320, 2,
	-317, -546, 4, -558, -562, -559, -563, -561, 29, 32,
	33, 34, 36, 38, 39, 40, 42, 60, 68, 69,
	75, 79, 81, 91, 97, 106, 114, 115, 117, 116,
	118, 119, 120, 131, 135, 139, 143, 144, 148, 152,
	156, 174, 176, 189, 193, 195, 211, 214, 217, 231,
	244, 250, 252, 272, 276, 283, 291, 292, 343, 350,
	356, 361, 362, 366, 367, 387, 403, 421, 446, 472,
	479, 497, 516, 522, 532, 538, 540, 548, 556, 557,
	566, 568, 576, 585, 586, 587, 588, -564, 80, 2,
	-502, 224, 2, -323, 224, -502, -326, 2, -303, 2,
	-466, -625, 530, 166, 434, 2, -342, 224, -320, -322,
	-326, -324, 2, 2, 2, 2, -466, 2, -555, 2,
	-550, 10, -549, 5, 4, -558, -562, -559, -469, 2,
	-480, 29, -331, 2, -551, 224, 2, 29, 29, 577,
	406, 252, 538, 631, -392, -334, -335, -542, 4, 8,
	-385, -289, 628, -466, 2, -138, -121, 2, 189, -466,
	224, 2, -138, 224, 2, -466, 224, 2, -138, 224,
	2, -289, 2, -633, 2, -555, 224, 224, -289, 2,
	303, 2, 2, 546, 2, 102, 522, 123, 2, 438,
	-652, 459, 550, 2, 2, 2, 2, 2, 2, 2,
	522, -308, 2, -289, 189, 506, -331, 224, -332, 2,
	473, -665, 418, -551, 224, 2, 577, -324, 224, 2,
	-324, 240, 254, -303, 224, 2, 527, 525, 527, 525,
	195, 2, 252, 2, 252, 2, -503, 2, -504, -498,
	-505, 624, 362, -513, 2, -512, -549, 573, -109, 626,
	-109, 626, 477, 626, -555, -320, -320, -466, 2, -138,
	-121, 2, -466, 2, -138, 2, -289, 2, -135, -555,
	-134, 626, 195, 567, -289, 2, -466, 2, -138, -121,
	2, -466, 2, -138, 2, -232, 189, 2, 124, 522,
	-198, 2, 189, 568, 2, 8, 2, 231, -555, 468,
	413, 181, 2, 482, 2, 483, 77, -439, 594, 77,
	195, 2, 195, 2, -422, 2, 588, 406, 195, 2,
	2, -615, 2, 361, 195, 2, 195, 2, 195, 2,
	195, 2, 195, 2, -197, 478, 543, 521, 410, 260,
	2, -138, 585, -121, 260, 259, -466, 585, 2, -638,
	189, 465, -466, 2, 541, 269, 164, 195, -422, 2,
	195, 2, 195, 2, 5, 2, 43, 411, 504, 2,
	258, 405, 504, 2, 502, 2, -320, 522, 577, 473,
	124, 29, 2, 464, 2, 2, 92, 93, 195, 2,
	195, 2, 210, 195, 2, 195, 522, -403, 628, 594,
	2, -414, -502, -451, -452, -451, 538, -379, -381, -198,
	482, 2, -246, -412, -248, 189, -442, -443, -249, 283,
	176, 356, -250, -421, 29, 143, -421, -421, 63, 627,
	627, 11, 12, 79, 43, 616, 617, 618, 619, 187,
	620, 621, 614, 615, 613, 606, 607, 611, 264, 265,
	99, 610, 608, 90, 297, 458, 177, 178, 179, 180,
	435, 238, 35, 239, 14, 15, 16, -345, 34, 366,
	282, 595, 228, 486, 609, 17, 18, 19, 255, 257,
	345, 53, 231, -297, 377, -344, 519, 70, -466, -466,
	-466, -466, -466, -466, -466, -466, 373, 626, -408, -461,
	624, -241, 626, 626, 626, 626, -542, -241, -466, -480,
	627, -399, 626, -241, -480, -475, 626, 456, 624, 626,
	-483, -466, 5, 5, 5, 626, 628, -596, 589, 189,
	626, 626, 626, 626, 626, 626, 626, 626, 626, 626,
	626, 626, 626, 626, 626, 626, 400, -524, 626, -523,
	626, -523, -523, 578, -521, 626, 597, 590, 626, -521,
	626, 626, 626, 626, 626, 626, 626, 626, 626, 626,
	626, 626, 626, 578, 528, 631, -593, -375, 626, -404,
	-507, -466, 618, -404, -404, 361, -396, -466, 110, -425,
	261, 322, 196, 279, 450, 245, -463, 630, -463, -491,
	597, -241, -499, -319, -241, -501, 626, -497, -491, -110,
	-542, -93, -106, -115, -138, -154, -202, -203, 618, -320,
	626, 195, 626, 628, -546, 195, -385, -303, -330, -289,
	-320, -336, -337, -342, -314, -289, 2, 2, 142, -396,
	-611, 551, 467, 29, 473, -553, -292, 39, -477, -516,
	-517, -567, 630, -566, -519, -529, -525, -528, 390, 394,
	-548, 57, 574, -531, 251, 4, -558, -560, 248, 249,
	494, 54, 415, 184, 130, 129, 353, 59, 534, 535,
	536, 537, 200, 201, 61, 575, 508, 72, 73, -611,
	551, 467, 29, 473, 189, -553, 189, -553, 2, 2,
	159, 2, 2, 2, -289, -267, 631, 67, 443, 159,
	-394, 224, -267, 159, -267, 159, -343, 224, -342, -267,
	159, -267, 631, 159, -267, 631, 159, 628, 631, 159,
	-553, 2, -438, -545, -396, 39, -452, 2, 131, 4,
	5, -668, 631, 281, -348, 296, 342, 219, 362, 592,
	354, 135, -554, 5, 4, -476, -488, 131, 289, 251,
	-536, -538, 9, -539, 616, 617, -544, -543, 113, 628,
	-546, -211, 246, 41, -302, -302, -656, -656, 8, 8,
	-656, -656, -302, -302, -264, 436, 480, 376, -263, 25,
	30, 147, 242, 327, 571, 165, -360, 243, 441, -357,
	380, 159, 498, 560, -625, -628, 463, 530, 166, 434,
	94, 354, 480, 376, 436, 159, -418, -420, 39, 122,
	327, 375, 64, 234, 301, 302, 501, 582, 159, 480,
	376, 436, 376, -15, -278, 25, 147, -280, -275, 480,
	-628, 103, 436, 601, 441, 386, 514, 403, -628, -625,
	277, -627, 584, 341, -266, 498, 560, -625, -628, 463,
	436, -265, -362, -357, 380, 159, 630, 25, 147, 436,
	480, 376, -648, -649, 30, -259, -258, 25, 147, 480,
	563, -262, 231, -261, 25, -147, -127, -146, 441, 480,
	-147, 2, 436, 376, -619, -310, -590, 231, 588, 159,
	-310, -310, -502, 224, -642, 189, 2, -635, -134, 273,
	5, 10, -555, -134, -392, 631, 631, -546, 618, 465,
	464, 159, 159, 159, 159, 260, 189, 343, 343, 588,
	2, 2, 2, 2, 2, 197, -630, -653, 2, 2,
	-320, 224, -377, 361, -614, -393, 522, -320, 189, 343,
	45, -323, 224, 2, -326, 577, -619, 343, -325, 224,
	-320, 39, 626, 343, 2, -438, 2, 240, -590, 343,
	-503, -339, -320, -498, -339, 480, -313, 39, -463, -320,
	627, 631, -513, -513, -555, -220, 588, 195, 626, -232,
	588, 588, 260, -510, 631, -509, 231, -556, -555, -135,
	-555, 439, 195, 260, -555, -614, -303, 2, -320, 2,
	522, 262, -555, -220, 231, -555, -555, -555, -545, 29,
	483, 2, -197, 478, 543, 93, 483, 2, -320, 522,
	124, 240, 83, -642, 189, 2, -289, -617, 189, -612,
	451, 467, 551, -611, -320, 124, -320, 124, -320, 124,
	-320, -320, 2, 2, 2, 2, 2, 88, 2, -138,
	-466, 2, 88, 2, 48, 499, -638, 189, 2, 541,
	2, 541, 2, -289, -289, -289, 356, 503, 281, 588,
	-320, -320, -320, -321, -326, 468, 523, 552, 465, -466,
	2, -657, 2, 195, 189, 2, 522, 240, 522, 240,
	124, 195, 77, 124, 29, 522, 462, 628, 4, -267,
	631, -293, -246, -412, -545, -413, -412, -247, -246, -249,
	189, 414, 561, 327, 484, 266, -443, -442, 29, -466,
	-447, 183, 326, -466, -445, -468, 616, 617, -537, -539,
	-395, 354, -240, -240, -240, -382, -493, -466, 403, 240,
	-518, -516, -516, -318, -546, 534, -466, -466, -466, -466,
	-466, -466, -466, -466, -466, -466, -466, -466, -466, -466,
	-466, -466, -466, -466, -466, -466, -466, -466, -466, -466,
	-466, -466, -466, -466, -466, -466, -466, -466, -466, -466,
	-466, -466, 282, 228, 486, 53, 231, -466, 538, -466,
	-466, -466, -466, 319, 343, 350, 548, 174, 558, 143,
	354, -671, 516, 42, -473, -241, -400, 626, -487, 36,
	497, 29, -480, 626, 2, -461, -466, -462, -346, -344,
	-289, 616, 617, 618, 619, 620, 621, 606, 607, 608,
	14, 15, 16, 611, 615, 613, 614, 187, 99, 610,
	297, 458, 90, 177, 178, 179, 180, 264, 265, 17,
	18, 19, 35, 609, -397, -396, -396, 627, 576, 29,
	143, 618, 2, 627, 631, 39, 627, -466, -397, -479,
	-475, -396, -486, -485, 585, -433, -434, 593, 306, 127,
	222, 304, -435, 471, -540, 8, -546, 618, -597, 182,
	214, 626, 627, 2, 627, 2, 627, -466, 2, 627,
	-466, 2, 627, -466, 2, 627, -466, 2, 627, 2,
	627, 2, -466, -466, -466, -466, -466, -466, -466, -396,
	8, -540, -540, 534, 534, -540, -540, -540, -532, 390,
	391, 392, 393, 284, 285, 286, 287, 394, 395, 396,
	397, 311, 312, 313, 314, 307, 308, 309, 310, 315,
	316, 317, 318, 205, 206, 207, 208, 201, 202, 203,
	204, -532, -427, 2, -534, -396, 4, 593, 306, 127,
	222, 304, 471, 5, -427, 2, -428, 2, -466, -396,
	-429, -467, -468, 616, 617, 609, -345, -430, 2, -466,
	-397, -466, 60, 276, 540, -431, -466, 195, -396, -396,
	2, -396, 2, -469, 2, -594, 39, -396, -388, 631,
	195, 39, 4, -388, -388, 626, 627, 631, -426, 218,
	300, 295, 254, -426, -497, -425, 261, -423, 371, -423,
	-423, -491, -304, 624, 632, -546, -491, -490, -489, 39,
	-313, 368, -491, -491, 628, 627, -490, 625, -609, 626,
	629, 629, 629, 629, 629, -320, 626, -396, -546, 628,
	505, 2, 627, 255, 255, 255, 255, 255, 361, 457,
	627, 538, -613, -329, -333, 523, 2, 588, -108, 363,
	627, 631, -387, 38, 624, 628, -540, 2, 2, -535,
	578, 626, 626, -434, 626, 195, -613, -333, 523, 2,
	-618, -386, -386, 538, -289, 2, -320, -394, -267, 159,
	-394, -394, -267, 631, 159, -303, -324, -329, -331, -333,
	-289, -551, -553, -267, -325, -645, 627, 542, -453, -347,
	414, 496, 437, 475, 518, 9, 9, 631, -546, -212,
	466, 327, -302, -302, -302, -302, 631, -646, 97, 538,
	81, 626, 467, -282, 290, 538, -457, 224, 81, -568,
	97, -306, -569, -289, 75, 557, 403, 193, 157, -646,
	97, 403, -646, 97, 2, 242, 97, 480, 503, 626,
	29, 63, -502, 43, 43, 29, -626, -627, 277, 195,
	594, 522, 240, 467, 538, 538, -502, -420, -516, 122,
	301, 302, 63, -541, -541, 63, -541, -541, -541, 588,
	-323, -502, 467, 538, 538, 538, 424, 424, -275, -152,
	538, 538, 29, -198, 444, 131, -669, 608, 424, 277,
	-627, 538, 195, 631, 43, 43, 29, -626, 195, 538,
	-342, -304, 572, 44, 572, 44, 572, 538, 44, 467,
	538, 631, 44, -258, -614, -614, -219, -218, -289, 5,
	-385, -261, -555, -260, 325, 77, 538, 538, -15, 480,
	-620, -294, 109, 333, 294, 334, 101, 330, 100, 329,
	107, 331, 108, 332, 579, 346, 580, 347, 66, 328,
	305, 335, 500, 336, 581, 348, -295, -296, 150, 382,
	570, 124, -551, -15, -15, 480, 376, 436, 159, -643,
	231, 29, -632, 231, -510, 231, -510, -334, -289, 628,
	-138, -466, -466, -138, -466, -138, 48, 159, 159, 2,
	2, -665, 270, 626, -351, 343, 195, -385, -511, 252,
	631, -393, -611, 159, -551, -419, -418, 343, -325, 224,
	2, 159, -375, 343, 153, 626, 412, 2, 159, -305,
	224, -290, -289, -438, -269, 526, 159, -416, 568, -448,
	-138, 626, 131, 39, -448, -405, -406, -508, -407, -306,
	626, -313, -463, -109, -512, 627, 627, 627, -219, 365,
	-232, -376, -307, -306, 123, 416, 416, -226, 588, -134,
	-135, 627, 631, -510, 231, 506, -135, -555, -220, -220,
	-510, -510, -320, 189, -555, -220, -220, -220, 2, 2,
	2, 2, -422, -320, -303, -342, -320, 29, 628, -553,
	-553, -333, -329, -422, -303, -422, -303, -422, -303, -422,
	-422, -138, -466, 503, 2, 477, 189, 189, 628, -422,
	8, -378, 446, 5, 2, 412, 124, 522, 380, 240,
	-320, -342, -320, -342, -303, 124, -303, 125, -320, 4,
	-502, -413, -247, 362, 266, 484, -445, -446, -468, 456,
	457, -446, 456, 457, 8, 9, 8, 9, -251, 488,
	349, -394, 631, -256, 40, 139, 266, -320, 594, 155,
	-466, -466, 538, -671, 516, -473, 155, -466, 319, 350,
	548, 174, 558, 143, 354, 195, 626, -467, -467, 627,
	-398, -466, -466, 625, 634, 627, 628, 627, -381, 631,
	-379, -466, -396, -396, 627, 628, -396, -385, 625, 625,
	631, 627, -484, -485, 148, -466, 538, 538, 538, 538,
	626, 627, 628, -602, 372, 626, 626, -466, 627, 627,
	627, 627, 39, 631, 631, 631, 627, 631, 631, 631,
	627, 627, 627, 631, 627, 594, 594, 627, 627, 627,
	627, 631, 627, 631, 627, 195, 627, 627, -436, 387,
	627, 11, 12, 616, 617, 618, 619, 187, 620, 621,
	614, 615, 613, 606, 607, 608, 90, 297, 458, 14,
	15, 16, -345, 255, 231, -467, -467, -467, -467, 627,
	-471, -472, 195, 189, 39, -431, -431, -431, 627, 195,
	-396, 627, 627, 626, -595, 299, 343, 627, -460, -459,
	586, -507, -389, 2, -497, -315, -546, -460, -460, -396,
	-466, 261, 261, -424, 568, 361, -426, -497, -490, -542,
	-465, -464, 191, 40, 139, 337, 338, 339, 227, 192,
	-490, -313, -375, -490, -490, -546, -491, -491, -489, 627,
	-610, -542, 627, -390, -500, -589, -381, 628, -546, -229,
	-590, -199, 5, 350, -199, -199, -199, -199, -320, -553,
	538, 538, 231, 26, 388, -516, 624, 625, 8, -546,
	626, -540, -540, -540, -553, 195, 195, 231, 361, 195,
	-551, 2, -267, -394, -267, -267, -342, -343, -267, -267,
	-267, -417, 588, -543, -452, 555, 86, 414, 534, -543,
	121, 466, -263, 436, 480, -306, -306, -320, -236, -235,
	-233, -289, 5, -330, 209, 425, -551, 343, -457, 224,
	-268, 343, 224, -314, -516, 626, -440, 590, 266, 266,
	568, -306, -314, 266, 224, -306, 224, -314, 2, -314,
	-621, 414, 355, -466, -234, -233, 63, -358, 288, 412,
	344, -264, 436, 480, 376, -138, -138, -138, 626, -645,
	568, 142, -320, -342, -320, -330, -551, -325, 480, 376,
	436, 340, -336, -541, -541, -418, 480, 376, 436, -330,
	-551, -323, -551, -274, 224, -289, -274, 224, 467, -303,
	424, 594, 47, -669, 538, 195, -466, -466, -265, -138,
	-138, -138, 626, -304, -266, 436, 5, 224, -306, 5,
	-306, 224, 5, -289, -306, -330, -551, -649, 25, 147,
	-306, 631, 608, 608, -262, 608, -330, -551, -294, 382,
	-555, 350, 564, -303, -619, -310, 467, 538, 538, -502,
	-639, -640, 211, 449, 467, 452, -553, -134, -223, 588,
	-134, -217, 235, 618, -616, -555, -289, 577, -289, -349,
	-352, -350, -306, -458, -457, -572, -573, -568, 282, 240,
	557, 254, 175, 97, -237, -238, 590, 588, 159, -340,
	-320, 624, -220, -555, -320, -511, -331, -332, 159, -375,
	343, -551, 39, 159, 626, 2, 2, -324, 361, 343,
	-305, 224, -270, 149, -669, -303, -460, -389, -415, -450,
	446, 361, -376, 573, -313, -415, -391, 631, 195, 608,
	628, -376, -506, 618, -109, -109, -220, 626, 626, -555,
	627, 631, 628, 626, 608, 608, -228, 365, -227, 151,
	268, 253, 490, 491, 492, 493, 141, 489, 128, 324,
	236, 528, -510, -555, -226, -135, 195, -510, 231, 195,
	-68, 588, 522, -220, 630, 452, -289, -422, -422, -422,
	477, 477, -289, 189, -385, -316, -546, -303, -320, -317,
	-342, 189, 189, -303, 561, -446, 362, 293, -493, -257,
	596, -320, 630, -466, -466, 155, 155, -466, -467, -467,
	-466, 155, 195, 626, -466, -477, 34, 34, 627, 631,
	-462, -466, -344, 627, 576, -381, -381, 627, 618, -546,
	630, 627, -475, 152, -466, 532, 306, 222, 304, -435,
	304, -435, -435, -540, 5, -546, 618, -603, -309, 626,
	-289, 586, -380, 367, 627, -518, -516, -466, -466, -466,
	-466, -466, -540, -521, -521, -536, -536, -466, -471, -466,
	-518, -516, -467, -467, -467, -467, -467, -467, -467, -467,
	-467, -467, -467, -467, -467, -467, -467, -467, -467, -467,
	-467, -467, 143, 343, 354, -467, -472, -471, -466, -466,
	-516, 627, 627, 627, -396, -108, 626, 299, -409, 214,
	-466, -510, 631, -409, -409, 627, -497, -497, 626, -466,
	261, 625, 631, 633, 608, 608, -375, 628, -489, -490,
	625, 627, 631, 627, 631, -449, 39, 627, -546, -460,
	-231, -230, 140, 56, 111, 138, 350, 255, -641, 588,
	-553, -553, 467, 364, 5, 8, 624, 625, 628, -540,
	627, 627, 627, -553, -553, 467, -611, 551, 467, 29,
	-553, -267, -267, 123, 327, -466, -209, 588, 590, 538,
	538, 627, 631, 608, 63, 231, 159, 343, 570, 343,
	-569, 157, -574, -466, 626, 240, 626, 626, 2, -253,
	-254, -255, 147, 480, 25, -647, 2, 568, 159, -267,
	159, -267, 592, 627, 631, -358, 626, 626, 538, 467,
	-282, 538, 588, -396, -466, -221, 131, -545, -628, 630,
	-628, 630, 467, 538, 538, 467, 538, 538, 343, 159,
	588, 173, 173, 594, -274, -466, -466, 189, 538, 588,
	-396, 538, -520, 51, 27, 343, -324, -267, 159, 538,
	538, 551, 480, -218, -555, -555, -134, -555, -555, 350,
	-15, -330, -551, -325, 480, 376, 436, -618, -618, 211,
	-333, -643, -510, -225, 365, -224, 151, 448, 141, 268,
	236, -510, -223, 195, 252, 588, -325, 2, 627, 627,
	631, 631, -575, -268, -320, -305, 240, 240, -312, -290,
	39, 358, 358, 626, -320, -89, 588, -509, -542, -622,
	588, 45, -323, 39, 159, -619, -138, -325, -514, -515,
	5, 39, -320, 159, 361, 343, -271, 275, -669, -550,
	-590, -381, -415, -404, 344, 95, 627, -460, -406, -389,
	-466, 2, 627, -219, -555, -220, -232, -307, 2, -556,
	-555, -555, 631, 626, 608, 608, 608, 608, 608, 608,
	608, -226, -510, -134, -226, -135, -138, 365, -320, 618,
	-422, 5, -364, -363, 380, 354, -364, 456, 456, 362,
	183, 271, -256, -304, -466, -466, 155, 34, 34, -466,
	-466, -477, 627, -466, -466, -396, 625, 5, -466, 627,
	627, 8, -466, 627, 628, -604, -289, -466, 627, 63,
	627, 627, 631, 631, 627, 627, 627, 627, 627, 627,
	627, -472, 195, 143, 354, 626, 627, 627, -108, -474,
	217, 63, -497, -474, -474, -424, -385, -497, -464, -304,
	624, -304, 624, -546, -542, -500, 626, 628, -230, 608,
	-555, -555, -199, 211, -641, -641, 588, -333, 625, 2,
	624, -546, 627, -333, 195, -613, -333, 523, 123, 189,
	221, 221, -306, -306, -235, -543, 522, 456, -274, 403,
	-457, 159, 159, -576, 97, -578, 79, 175, 106, 343,
	350, 557, 403, 75, 131, 361, 421, -659, -660, -661,
	39, 599, 600, 627, -383, -494, -589, 626, -289, -383,
	-385, 343, 511, 131, 361, 343, 131, 361, 583, 123,
	2, 551, 82, -306, -314, -233, -385, -385, -320, -330,
	-551, 167, 627, 631, 608, 2, 618, 618, -330, -551,
	-325, -330, -551, -323, 159, -274, 378, 173, 538, -138,
	-466, 167, 627, -304, 5, 5, 159, -301, 79, -306,
	5, -306, -324, 123, 588, 467, 538, 538, 361, 361,
	364, -639, -640, -223, 631, 626, 608, 608, 608, -223,
	-556, -134, 2, -375, -365, 242, -306, -573, -570, -571,
	403, -458, -577, -579, 175, 403, -353, 626, -305, -290,
	626, -138, 2, -236, 626, -351, 365, 625, -624, 365,
	-623, 121, 141, -551, -419, -138, -325, -373, 588, -375,
	627, 631, 153, -441, 568, -304, -320, 159, -272, 274,
	-669, -550, -269, -444, -442, 144, 626, 361, -138, -381,
	608, 627, 627, 123, 627, -227, -228, -555, -134, -555,
	-555, -555, -134, -555, -226, -510, -510, -69, -70, 240,
	97, 385, -317, 522, 240, 626, 626, -256, -466, -466,
	-466, 627, -381, -546, 618, -598, 380, 627, -493, -466,
	-466, -467, 195, 626, -477, 627, -599, 587, -466, -410,
	-411, -466, 454, 112, 215, -599, -599, 627, -542, -542,
	2, -555, 364, 2, 538, 624, 2, 195, -553, 195,
	195, 231, -138, 231, 39, 424, -457, -314, -314, -318,
	-311, -289, 175, 224, 350, 583, -440, 266, 626, -467,
	561, -320, 626, 2, 223, 223, 31, 63, -662, 135,
	244, 627, 631, -495, -300, -289, -466, -495, 627, 627,
	350, 561, 350, 583, -466, 561, -516, 626, -267, -267,
	627, 627, -466, 538, -545, 104, -543, 2, -628, -274,
	-303, -466, 189, -466, 538, 5, -267, -318, -267, -267,
	-301, 551, 360, -330, -551, -325, -644, 523, 474, 552,
	468, 198, 455, -644, 189, -224, -225, -555, -134, -134,
	-223, 39, -359, -360, 2, -575, 266, -311, 266, 233,
	158, -383, 626, 626, -385, -658, 588, 627, -349, -237,
	-90, -91, 539, -509, 631, 626, 608, -375, 327, 123,
	39, 5, 626, 626, -289, 361, 626, -304, -284, 96,
	-669, -550, -270, -415, 344, -385, 97, -444, -473, -220,
	626, -220, 627, -226, 631, 29, 626, 29, 626, -320,
	-342, -396, -396, 627, -381, 63, 631, 627, 627, -467,
	-477, 627, -600, -601, -309, 631, 626, 626, 481, 625,
	625, -553, 2, -553, -553, -553, 467, -274, 403, -289,
	-569, -578, -311, 343, -238, 568, 588, -466, -467, -291,
	626, -466, 626, 626, 39, 131, 244, 136, 229, -456,
	-663, 105, 512, 232, -494, -256, 627, -455, 568, 421,
	-467, -301, -383, 626, 626, 626, 608, 195, -138, 626,
	-520, -267, -324, 608, 538, 2, 2, 195, -618, 627,
	-634, 419, -138, -237, 626, -238, -354, 84, 98, 132,
	223, 199, 241, 503, 509, 29, -354, 627, -383, -383,
	627, -355, 361, 123, 327, 627, 39, -91, 9, -623,
	-624, -466, 39, 123, -138, -514, -383, -320, -383, 361,
	-276, -275, 283, -550, -271, 627, -314, -415, -556, -70,
	-385, -385, 627, 627, -605, 412, 457, 216, -396, -382,
	627, 631, 39, -411, 2, 2, 2, -641, -333, 424,
	-268, 159, 218, 627, -580, 298, -289, 627, -419, -419,
	39, 136, 229, -361, -357, 626, -257, -495, -238, 218,
	-320, -629, 568, 627, -367, -366, -363, -369, -368, -363,
	-396, -543, 104, 378, -396, -301, -134, -553, -553, 361,
	-636, 196, -635, 5, 10, -355, -384, -496, -306, -455,
	627, 627, 85, 123, -365, -138, 627, -138, 2, -373,
	627, 627, -441, 627, -320, -273, -557, 424, 426, -669,
	-272, -460, 144, 627, 627, 627, 627, -606, -607, 53,
	554, 113, -466, -606, -606, -601, -603, 195, 175, -454,
	597, -581, -584, -583, 604, 487, 196, 379, 627, 511,
	582, 627, 627, -662, -385, -454, -375, -466, -455, 627,
	631, 573, 627, 631, 573, 627, 195, 627, -267, -641,
	-267, -644, -222, 588, 48, -283, -282, 627, 631, -456,
	-455, -361, 402, 137, 147, -359, -658, -455, 626, -456,
	626, -281, -280, -669, -536, -284, 144, 344, 561, -220,
	-608, 157, -607, 399, 188, 456, 399, 188, -608, -608,
	-553, -311, -238, 58, -583, 604, -584, 604, 561, 137,
	-460, 627, -580, -238, -366, 231, -368, 195, 378, 195,
	464, -635, 31, -238, -496, -361, -456, -238, 457, 457,
	2, -237, -355, -456, -383, -361, -383, -277, -278, -279,
	-385, -276, 344, 561, 480, 113, 214, 533, 327, 34,
	608, -582, 327, 443, 67, 480, -582, -581, 626, 626,
	-553, 365, -238, -361, -460, 2, -355, -361, 627, -238,
	627, -552, 376, -273, 480, -405, 456, 369, -607, -466,
	24, 350, 131, -662, -396, -396, -267, -219, 626, -460,
	-238, -283, -238, -455, -460, -456, -669, -281, -405, -460,
	627, 627, -219, -460, -460, -456, -361, -551, -277, -460,
	-356, -357, 538, 627, -361, -238, 626, -238, -460, -396,
	-460, 627, -356,
}

var sqlDef = [...]int{
	-2, -2, 1, 2, 3, 4, 6, 7, 8, 10,
	12, 14, 16, 18, 20, 22, 24, 26, 28, 30,
	31, 32, 34, 36, 38, 578, 579, 581, 582, 583,
	585, 586, 588, 590, 592, 593, 594, 596, 597, 599,
	600, 601, 602, 603, 605, 607, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, -2, 0,
	0, 694, 696, 0, 1531, 1533, 1535, 1537, 0, 0,
	-2, 0, 40, 41, 43, 45, 0, -2, 355, 357,
	359, 361, 0, 393, 395, 396, 398, 400, 401, 402,
	404, -2, 0, 511, 512, 514, 516, -2, 0, 1116,
	1118, 1120, 0, 682, 684, 0, 1123, 1125, 1127, 0,
	0, 706, 707, 0, 1645, -2, 698, 700, 702, 704,
	781, 783, 785, 787, 789, 791, 793, 795, 797, 799,
	800, 802, 804, 806, 808, 810, 811, 813, 815, 817,
	818, 820, 821, 823, 825, 827, 829, 831, 833, 835,
	837, 839, 841, 843, 845, 847, 849, -2, 852, 853,
	854, 856, -2, -2, 0, -2, -2, -2, 1549, 47,
	49, 51, 53, 55, 57, 59, 61, 63, 65, 67,
	69, 455, 457, 459, 461, 463, 466, 468, 470, 1703,
	518, 520, 522, 524, 526, 528, 530, 0, 0, -2,
	1717, 0, 0, 936, 71, 72, 73, 74, 75, 76,
	77, 78, 79, 80, 119, 120, 121, 122, 123, 124,
	125, 84, 85, 86, 88, 89, 90, 91, 95, 96,
	97, 98, 99, 100, 101, 102, 103, 104, 116, 117,
	82, 0, 0, 1676, 1678, 1680, 1682, -2, 0, 0,
	5, 9, 11, 13, 15, 17, 19, 21, 23, 25,
	27, 29, 33, 35, 37, 580, 584, 587, 589, 591,
	595, 598, 604, 606, 608, 563, 564, 567, 2415, 2433,
	2434, 2435, 2438, 2439, 2440, 2441, 2442, 2443, 2922, 3003,
	3004, 2465, 2466, 2467, 2468, 2469, 2470, 2471, 2472, 2473,
	2474, 2475, 2476, 2477, 2478, 2479, 2480, 2481, 2482, 2483,
	2484, 2485, 2486, 2487, 2488, 2489, 2490, 2491, 2492, 2493,
	2494, 2495, 2496, 2497, 2498, 2499, 2500, 2501, 2502, 2503,
	2504, 2505, 2506, 2507, 2508, 2509, 2510, 2511, 2512, 2513,
	2514, 2515, 2516, 2517, 2518, 2519, 2520, 2521, 2522, 2523,
	2524, 2525, 2526, 2527, 2528, 2529, 2530, 2531, 2532, 2533,
	2534, 2535, 2536, 2537, 2538, 2539, 2540, 2541, 2542, 2543,
	2544, 2545, 2546, 2547, 2548, 2549, 2550, 2551, 2552, 2553,
	2554, 2555, 2556, 2557, 2558, 2559, 2560, 2561, 2562, 2563,
	2564, 2565, 2566, 2567, 2568, 2569, 2570, 2571, 2572, 2573,
	2574, 2575, 2576, 2577, 2578, 2579, 2580, 2581, 2582, 2583,
	2584, 2585, 2586, 2587, 2588, 2589, 2590, 2591, 2592, 2593,
	2594, 2595, 2596, 2597, 2598, 2599, 2600, 2601, 2602, 2603,
	2604, 2605, 2606, 2607, 2608, 2609, 2610, 2611, 2612, 2613,
	2614, 2615, 2616, 2617, 2618, 2619, 2620, 2621, 2622, 2623,
	2624, 2625, 2626, 2627, 2628, 2629, 2630, 2631, 2632, 2633,
	2634, 2635, 2636, 2637, 2638, 2639, 2640, 2641, 2642, 2643,
	2644, 2645, 2646, 2647, 2648, 2649, 2650, 2651, 2652, 2653,
	2654, 2655, 2656, 2657, 2658, 2659, 2660, 2661, 2662, 2663,
	2664, 2665, 2666, 2667, 2668, 2669, 2670, 2671, 2672, 2673,
	2674, 2675, 2676, 2677, 2678, 2679, 2680, 2681, 2682, 2683,
	2684, 2685, 2686, 2687, 2688, 2689, 2690, 2691, 2692, 2693,
	2694, 2695, 2696, 2697, 2698, 2699, 2700, 2701, 2702, 2703,
	2704, 2705, 2706, 2707, 2708, 2709, 2710, 2711, 2712, 2713,
	2714, 2715, 2716, 2717, 2718, 2719, 2720, 2721, 2722, 2723,
	2724, 2725, 2726, 2727, 2728, 2729, 2730, 2731, 2732, 2733,
	2734, 2735, 2736, 2737, 2738, 2739, 2740, 2741, 2742, 2743,
	2744, 2745, 2746, 2747, 2748, 2749, 2750, 2751, 2752, 2753,
	2754, 2755, 2756, 2757, 2758, 2759, 2760, 2761, 2762, 2763,
	2764, 2765, 2766, 2767, 2768, 2769, 2770, 2771, 2772, 2773,
	2774, 2775, 2776, 2777, 2778, 2779, 2780, 2781, 2782, 2783,
	2784, 2785, 2786, 2787, 2788, 2789, 2790, 2791, 2792, 2793,
	2794, 2795, 2796, 2797, 2798, 2799, 2800, 2801, 2802, 2803,
	2804, 2805, 2806, 2807, 2808, 2809, 2810, 2811, 2812, 2813,
	2814, 2815, 2816, 2817, 2818, 2819, 2820, 2821, 2822, 2823,
	2824, 2825, 2826, 2827, 2828, 2829, 2830, 2831, 2832, 2833,
	2834, 2835, 2836, 2837, 2838, 2839, 2840, 2841, 2842, 2843,
	2844, 2845, 2846, 2847, 2848, 2849, 2850, 2851, 2852, 2853,
	2854, 2855, 2856, 2857, 2858, 2859, 2860, 2861, 2862, 2863,
	2864, 2865, 2866, 2867, 2868, 2869, 2870, 2871, 2872, 2873,
	2874, 2875, 2876, 2877, 2878, 2879, 2880, 2881, 2882, 2883,
	2884, 2885, 2886, 2887, 2888, 2889, 2890, 2891, 2892, 2893,
	2894, 2895, 2896, 2897, 2898, 2899, 2900, 2901, 565, 566,
	1310, 0, 647, 645, 2400, 648, 2709, 650, 652, 505,
	506, 507, 508, 509, 510, 0, 675, 661, 1715, 676,
	678, 679, 680, 681, 642, 640, 0, 680, 675, 2470,
	673, 1529, 1530, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 517, 0, 0, 0, 0, -2, 0, 0, 0,
	0, 0, 0, 0, 434, 1369, 1370, 1371, 1514, 1515,
	2760, 1556, 0, 251, 695, -2, -2, 2887, -2, 735,
	736, -2, -2, 750, 754, 745, 2891, 0, 2763, 2746,
	-2, 757, 1532, 1534, 1536, 857, 858, 859, 2419, 863,
	861, 873, 874, 875, 0, 892, -2, 0, 2466, 2731,
	-2, -2, 893, 894, -2, -2, -2, -2, 0, 0,
	0, 0, 0, 42, 44, 46, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 259, 261,
	-2, -2, -2, -2, 0, 0, 2810, 2525, 2368, 2435,
	2371, 2366, 356, 358, 360, 362, 363, 0, 0, 0,
	0, 0, 0, 0, 394, 397, 399, 403, -2, 405,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	433, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, -2, -2, 0, 0, 0, 0, 0, 0,
	0, 0, 1190, 1182, 1183, 1436, 0, 0, 0, -2,
	513, 515, 568, 569, 0, 1704, 1704, 576, 577, -2,
	0, 0, 0, 0, 326, 316, 1117, 1119, 1121, 1122,
	0, 0, 0, 0, 0, 683, 685, 0, 0, 2804,
	293, 1124, 1126, 1128, 1129, 0, 0, 0, 0, 0,
	0, 328, 0, 0, 699, 701, 703, 705, 782, 784,
	786, 788, 790, 792, 794, 796, 798, 801, 803, 805,
	807, 809, 812, 814, 816, 819, 822, 824, 826, 828,
	830, 832, 834, 836, 838, 840, 842, 844, 846, 848,
	850, 851, 900, 0, 0, 0, 0, 0, -2, -2,
	0, 0, 0, -2, 0, -2, -2, -2, 0, 0,
	0, 0, 0, 0, 0, -2, 0, 0, 1005, 0,
	0, 0, -2, -2, -2, 0, 0, 0, 0, 0,
	0, 0, -2, -2, 0, 0, 0, 0, -2, 1096,
	0, 0, 903, 906, 907, 908, 909, 910, 911, 0,
	978, 1003, 1004, 1014, 855, 0, 1350, 1705, 1558, 1539,
	1553, 1558, 1541, 1542, 1543, 1544, 1545, 1550, 1552, 1546,
	1547, 1548, 48, 50, 52, 54, 56, 58, 60, 62,
	64, 66, 68, 70, 456, 458, 460, 462, 464, 467,
	469, 471, -2, 1674, 1675, 519, 521, 523, 525, 527,
	529, 531, 686, 0, 689, 0, 905, 688, -2, 0,
	1709, 1709, 1709, 0, 0, 1675, 1673, 0, 692, 693,
	761, 762, 1982, 0, 0, 0, 0, 0, 0, 0,
	0, 2242, 2070, 0, 763, -2, 2103, 2105, 2862, 2682,
	2887, 2241, 2107, 2108, 2109, 2110, 2111, 0, 2113, 2114,
	2115, 2116, 2117, 2118, 0, 2120, 0, 2125, 2126, 2127,
	0, 2869, 2345, 2429, -2, 0, 0, 2875, 2425, 0,
	2208, 2143, -2, -2, 2452, 2431, 1914, 1915, 1916, 1917,
	1918, -2, -2, 2905, 2147, 2148, 2149, 2150, 2151, 2152,
	2153, 2154, 2155, 2156, 2157, 0, 2850, 2870, 2871, 2876,
	2878, 2872, 2859, 2168, 2539, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, 1941, 1950,
	-2, -2, -2, -2, -2, -2, -2, 2863, 2864, 2881,
	2884, 2890, 2895, 2896, 2868, 2877, 2904, 2906, 2907, 2908,
	2909, 2910, 2911, 2912, 2913, 2914, 2915, 2916, 2917, 2918,
	2919, 2920, 2921, 1942, -2, -2, -2, -2, 0, 1692,
	2724, 1695, 1310, 1693, 1677, 1679, 0, 1681, 0, 0,
	0, 1686, 1712, 1710, 0, 1761, 1690, 1691, 1784, 1784,
	1808, 0, 1789, 0, 1808, 1704, 1835, 0, 1795, 2751,
	2144, 2145, 0, 2435, 2430, -2, -2, 2902, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 643,
	0, 649, 651, 0, 0, 0, 674, 1714, 0, 0,
	0, 0, 0, 0, 0, 0, 437, 438, 439, 440,
	441, 2870, 0, 0, 0, 446, 0, 448, 449, 450,
	451, 452, 453, 454, 221, 2870, 536, 561, 0, 221,
	2870, 539, 221, 2870, 542, 0, 545, 1434, 221, 2870,
	548, 2396, 221, 2870, 551, 553, 2404, 221, 2870, 557,
	2411, 2409, 558, 0, 560, 241, 237, 238, 239, 240,
	1525, 1526, 1527, 1528, 0, 1555, 1435, 697, 0, 723,
	0, 733, 734, 2858, -2, 0, 2772, 738, 739, -2,
	741, 1559, 1563, 1564, 1565, 1566, 1567, 0, 0, 0,
	0, 1572, 0, 0, 0, 0, 730, 731, 748, 749,
	755, 758, 0, 866, 862, 876, 0, 891, 0, 892,
	892, 2385, 2376, 2377, 0, 0, 892, 892, 0, 0,
	895, 896, 897, 898, 899, 81, 0, 2870, 1835, 83,
	0, 2390, 2460, 2461, 2462, 2463, 2464, 2903, 2923, 2924,
	2925, 2926, 2927, 2928, 2929, 2930, 2931, 2932, 2933, 2934,
	2935, 2936, 2937, 2938, 2939, 2940, 2941, 2942, 2943, 2944,
	2945, 2946, 2947, 2948, 2949, 2950, 2951, 2952, 2953, 2954,
	2955, 2956, 2957, 2958, 2959, 2960, 2961, 2962, 2963, 2964,
	2965, 2966, 2967, 2968, 2969, 2970, 2971, 2972, 2973, 2974,
	2975, 2976, 2977, 2978, 2979, 2980, 2981, 2982, 2983, 2984,
	2985, 2986, 2987, 2988, 2989, 2990, 2991, 2992, 2993, 2994,
	2995, 2996, 2997, 2998, 2999, 3000, 3001, 3002, 2905, 87,
	0, 2870, 92, 0, 2870, 0, -2, 105, 0, 118,
	0, 145, -2, -2, -2, 126, 0, 2870, 0, 2365,
	-2, 0, 233, 317, 318, 319, 0, 624, 0, 633,
	329, 330, 2448, 2449, 2456, 2457, 2458, 2459, 0, 726,
	2242, 0, 0, 1154, -2, 0, 1363, 1365, 1365, 0,
	-2, 0, 0, 0, 1106, 2362, 2367, 1107, 1108, 2386,
	1109, 2372, 0, 364, 365, 366, 367, 368, 0, 369,
	2870, 371, 372, 0, 374, 375, 2870, 377, 378, 0,
	380, 0, 382, 0, 273, 277, 2870, 2870, 407, 410,
	0, 412, 413, 0, 415, 0, 0, 0, 419, -2,
	435, 0, 432, 422, 423, 425, 426, 427, 428, 429,
	0, 475, 473, 2401, 0, 0, -2, 2870, 0, 1151,
	0, 0, 1414, -2, 0, 1356, 0, 1421, 2870, 1417,
	0, -2, 0, 1702, 2870, 1576, 1186, 1187, 1188, 1189,
	1847, 502, 0, 1609, 0, 1611, 0, 1631, 1841, 1784,
	0, 0, 1846, 0, -2, 621, 2418, -2, 571, 0,
	572, 0, -2, 0, 343, 0, 0, 1132, 1134, 1135,
	1137, 1138, 1141, 1142, 1143, 1144, 0, 1146, 1821, 294,
	296, 0, 0, 0, 0, 1131, 1516, 1517, 1518, 1519,
	1520, 1521, 1522, 1523, 1524, 0, 0, 708, 0, 0,
	901, 902, 0, 0, 918, 919, 920, 0, 343, 2764,
	2719, 2561, 927, 0, 930, 933, -2, 0, 0, 0,
	0, 940, 0, 945, 946, 947, 0, -2, 0, 954,
	956, 1115, 958, 0, 0, 960, 0, 964, 0, 967,
	0, 969, 0, 971, -2, -2, -2, 979, 980, -2,
	985, -2, 0, 989, -2, 0, 992, 0, 995, -2,
	0, 1005, 1001, 1002, 0, 0, 0, 0, 1022, 1023,
	0, 1032, 0, 1035, 1036, 1037, 0, 0, 1042, 1043,
	0, 1045, 1046, 1047, 1049, 1050, 1051, 0, 2839, 2769,
	2525, 0, 1059, -2, 1065, 1067, 0, -2, 0, 1083,
	0, 1087, 0, 0, 1095, 0, 0, 904, 0, 912,
	913, 221, 1839, 1538, -2, 1540, 0, -2, 0, 687,
	0, 691, 1734, 1660, 1657, 0, 1731, 1732, 1661, 0,
	0, 0, 1668, 0, 1707, 1708, 0, 0, 0, 1647,
	1648, 0, 0, 0, 0, 2247, 2248, 2249, 2250, 2263,
	2251, 2252, 2262, 2260, 2261, 2253, 2254, 2259, 2273, 2274,
	2264, 2265, 2255, 2268, 2266, 2267, 2269, 2270, 2271, 2272,
	0, 0, 2278, 0, 2256, 2257, 2258, 2286, 0, 0,
	2287, 0, 2289, 0, 2279, 2275, 2276, 2277, 0, 2049,
	2051, 2353, 0, 0, 0, 2285, 2280, 2281, 1987, 1988,
	1989, 1990, 1991, 2024, 2028, 2029, 0, 0, 2104, 2350,
	2349, 2106, 0, 0, 2301, 0, 2119, -2, 0, 2242,
	2296, 0, 0, 2128, 2129, 2130, 0, 0, 2301, 0,
	0, 2344, 2140, 2141, 1979, 0, 0, 2210, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1928, 1927, 0, 1929,
	0, 1930, 1931, 1938, 1951, 0, 0, 0, 0, 1955,
	0, 0, 0, 0, 0, 0, 0, 2325, -2, 0,
	0, 0, 0, 1943, 0, 0, 1694, 0, 0, 1765,
	2354, 2358, 2359, 1765, 1765, 0, 0, 2302, 1832, 1832,
	0, 0, 1827, 1827, 1827, 1825, 1808, 0, 1808, 1818,
	0, 1808, 1808, 0, -2, 1789, 0, 0, 1818, 0,
	1802, 609, 611, 613, 615, 616, 617, 619, 1836, 1837,
	0, 0, 0, 0, 2436, 0, 0, 0, 0, 2408,
	0, 0, 2421, 0, 0, 2395, 389, 390, 0, 0,
	0, 2821, 2763, 0, -2, 654, 677, 1704, 0, 2304,
	1862, 1866, 0, 1868, 1869, 1870, 1871, 1872, 0, 0,
	1863, -2, 1939, 1941, 1962, 2453, 2454, 2455, 1922, 1923,
	1924, 1925, 1926, 1934, 1921, 1921, 1921, 1932, 1961, 1953,
	1961, 1957, 1907, 1908, 1909, 1944, 1945, 1946, 1947, 0,
	2821, 2763, 0, -2, 0, 664, 0, 0, 1642, 436,
	0, 443, 444, 445, 0, 532, 0, 219, 220, 0,
	221, 2870, 537, 0, 540, 0, 221, 2870, 2360, 546,
	0, 549, 0, 0, 555, 0, 0, 0, 0, 0,
	221, 1644, 0, 0, 0, 0, -2, 743, 751, 752,
	753, 0, 1561, 0, 1568, 772, 773, 774, 1570, 1571,
	0, 1573, 746, 775, 776, 777, 778, 779, 780, 0,
	2374, 2375, 2380, 2381, 0, 0, 744, 765, 747, 0,
	759, 869, 864, 865, 877, 878, 0, 0, 2378, 2379,
	0, 0, 883, 884, 127, 1511, 0, 0, 174, 0,
	1511, 1511, 0, 0, 0, 0, 202, 0, 0, 1220,
	0, 0, 0, 0, 145, 159, 170, 139, 140, 141,
	0, 0, 0, 0, 0, 0, 93, 1332, 0, 1335,
	0, 0, 0, 0, 0, 0, 0, 1348, 0, 0,
	0, 0, 0, 107, 108, 0, 0, 113, 114, 0,
	158, 0, 0, 0, 0, 0, 1606, 0, 149, 145,
	0, 0, 144, 146, 129, 0, 0, 145, 160, 172,
	0, 208, 210, 1217, 0, 0, 0, 0, 0, 0,
	0, 0, 232, 243, 0, 623, 625, 0, 0, 0,
	0, 631, 0, 634, 0, 724, 728, 729, 0, 0,
	725, 727, 0, 0, 1357, 0, 0, 0, 1701, 0,
	0, 0, 0, 2870, 1509, 0, 1494, 0, 1821, 2612,
	-2, -2, 294, 1821, 1105, 0, 0, 2436, 2370, 0,
	0, 0, 0, 0, 0, 381, 0, 0, 0, 0,
	411, 414, 416, 417, 418, 0, 1413, 0, 424, 465,
	1279, 2870, 0, 0, 492, 487, 0, 489, 0, 0,
	0, 1331, 2870, 1329, 2405, 0, 1354, 0, 1310, 2870,
	2403, 0, 0, 0, 1422, 2445, 1431, 1435, 1594, 0,
	504, 0, 1612, 1614, 0, 0, 1842, 0, 1844, 1784,
	1704, 0, 0, 0, 0, 321, 0, 0, 0, 0,
	0, 0, 1145, 300, 0, 1820, 0, 0, 331, 1821,
	294, 2737, 0, 1130, 343, 343, 1821, 710, 1821, 712,
	0, 0, 921, 922, 0, 343, 343, 343, 928, 929,
	931, 932, -2, -2, -2, -2, 934, 935, 1029, 0,
	0, 0, 1028, 948, 0, 950, 953, 957, 0, 1099,
	2746, 2763, 2821, 1113, 1029, 2525, 1029, 2525, 1029, 2525,
	1029, 1029, 973, 1017, 1025, 984, 991, 0, 986, 990,
	993, 996, 0, 998, 1006, 0, -2, 0, 1009, 0,
	1011, 0, 1013, 1029, 1030, 1033, 0, 1041, 1044, 0,
	1052, 1053, 1054, 1055, 2416, 1056, 1057, 1058, -2, 1062,
	1063, 0, 1074, 1079, 1080, 1076, 0, 0, 0, 0,
	0, 0, 1090, 1091, 0, 0, 1098, 0, 914, 1349,
	0, 1551, 1734, 1660, 690, 1651, 1733, 1652, 1659, 1662,
	0, 0, 1664, 0, 1666, 0, 1729, 1730, 1737, 1738,
	0, 1748, 1749, 1741, 0, -2, 0, 0, 1744, 1745,
	1670, 0, 1687, 1688, 1689, 1718, 1721, 1450, 0, 3003,
	1983, 1857, 1984, 1985, 2389, 0, 1992, 1993, 1994, 1995,
	1996, 1997, 1998, 1999, 2000, 2001, -2, -2, -2, -2,
	-2, -2, -2, -2, 2010, 2011, 2012, 2013, 2014, 2015,
	2016, 2017, 2018, 2019, 2020, -2, -2, -2, 2025, 2026,
	2027, -2, 2288, 2290, 0, 2353, 0, -2, 0, -2,
	-2, -2, -2, 2046, 0, 2048, 2053, 2055, 2057, 0,
	0, 0, 0, 2352, 2067, 2336, 2337, 0, 0, 2244,
	2245, 2246, 2052, 0, 2071, 2351, 2348, 0, 0, 2282,
	0, 2247, 2248, 2249, 2250, 2251, 2252, 2253, 2254, 2255,
	2256, 2257, 2258, 2259, 2260, 2261, 2262, 2263, 2264, 2265,
	2266, 2267, 2268, 2269, 2270, 2271, 2272, 2273, 2274, 2275,
	2276, 2277, 2278, 2279, 0, 2300, 1717, 2132, 0, 0,
	0, 0, 2139, 2124, 2298, 0, 2297, 0, 0, 0,
	2308, 0, 2343, 2339, 0, 2387, 1978, 1965, 1966, 1967,
	1968, 1969, 1970, 1980, 0, 2384, 2422, 2428, 2218, 0,
	0, 0, 2169, 2170, 2171, 2172, 2173, 0, 2175, 2176,
	0, 2178, 2179, 0, 2181, 2182, 0, 2184, 2185, 2186,
	2187, 2188, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1875,
	1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885,
	1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895,
	1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905,
	1906, 0, 0, 2190, 0, 2311, -2, -2, -2, -2,
	-2, -2, -2, -2, 0, 2192, 0, 2194, 2302, 2322,
	0, 0, 2072, 0, 0, 0, 0, 0, 2197, 2302,
	2330, 0, 0, 0, 0, 0, 2302, 0, 2335, 0,
	2204, 0, 2206, 937, 938, 1696, 0, 0, 1852, 0,
	0, 0, 2357, 1852, 1852, 0, 1760, 0, 0, 1828,
	1829, 1830, 1831, 0, 0, 1832, 0, 1822, 1826, 1823,
	1824, 1818, 1781, 0, 0, 2391, 1818, 1787, 1817, 0,
	1310, 1807, 1818, 1818, 0, -2, 1791, 1808, 0, 0,
	610, 612, 614, 618, 620, 0, 0, 1717, -2, 0,
	-2, 345, 1309, 0, 0, 0, 0, 0, 0, 644,
	646, 0, 0, 552, 0, 0, 660, 0, 638, 0,
	641, 0, 1853, 1856, 0, 0, 1867, 1873, 1874, 0,
	-2, 0, 0, 1963, 0, 0, 0, 0, 0, 672,
	0, 675, 0, 0, 0, 447, 562, 221, 534, 0,
	221, 221, 543, 0, 0, 221, 554, 221, 2412, 221,
	2410, 242, 559, 1643, 254, 0, 732, 0, 1560, 1569,
	0, 769, 0, 771, 0, 2382, 2383, 0, 760, 0,
	867, 0, 879, 880, 881, 882, 0, 0, 0, 0,
	1510, 0, 0, 1457, 0, 0, 178, 2870, 0, 223,
	0, 0, 1272, 2397, 0, 1262, 0, 0, 2547, 0,
	0, 0, 0, 0, 195, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 136, 0, 142, 143, 0,
	0, 0, 0, 0, 0, 0, 0, 1333, 1334, 1336,
	1343, 1345, 0, 1339, 1340, 0, 1342, 1344, 1346, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 115, 1366,
	0, 0, 1367, 1368, 1582, 1583, 0, 1605, 1606, 0,
	0, 0, 0, 0, 0, 0, 138, 0, 0, 0,
	0, 2364, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 626, 627, 628, 629, 339, 336, 338,
	630, 635, 0, 636, 0, 0, 0, 0, 1359, 0,
	1409, 1407, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388,
	1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398,
	1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 0, 0,
	0, 0, -2, 1361, 1362, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 264, 0, 334, 2363, 2373, 0,
	1139, 1140, 370, 373, 376, 379, 260, 0, 0, 409,
	420, 0, 0, 1192, 1164, 0, 0, 474, 343, 0,
	0, 488, 492, 2414, 1149, 1327, 1330, 0, 1310, 2870,
	1377, 0, 0, 0, 0, 0, 0, 1420, 0, 0,
	2870, 2392, 2444, 2445, 1596, 1606, 0, 1852, 0, 1629,
	1615, 0, 0, 0, 1629, 1633, 1634, 1636, 1637, 0,
	0, 1843, 1849, 570, 622, 1704, 1704, 343, 341, 2685,
	0, 0, 1618, 1620, 0, 0, 0, 286, 0, 297,
	1821, 295, 0, 300, 0, 0, 1821, 294, 0, 486,
	709, 714, 916, 0, 343, 924, 925, 926, 975, 1019,
	1027, 1078, 939, 941, 942, 943, 0, 0, 0, 1114,
	1110, 1111, 1112, 959, 1029, 962, 1029, 965, 1029, 968,
	970, 988, 994, 1007, 1000, 1008, 0, 0, 0, 1021,
	0, 1039, 0, 1048, 1061, 0, 0, 0, 0, 0,
	0, 0, 1084, 1085, 1086, 1088, 1093, 1092, 1097, 915,
	1840, 1655, 1656, 1658, 0, 1667, 0, 0, 1743, -2,
	-2, 1742, 1746, 1747, -2, -2, -2, -2, 1663, 0,
	1672, 1669, 0, 1728, 1448, 1449, 0, 0, 0, 0,
	-2, -2, 0, 0, 0, 2068, 0, -2, 2047, 2050,
	2054, 2056, 2058, 0, 0, 0, 0, 0, 0, 2291,
	0, 2293, 2069, 2346, 2349, 2284, 0, 2240, 0, 0,
	1716, 1717, 1717, 0, 2138, 0, 2299, 0, 2306, 2307,
	0, 2131, 0, 2340, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2142, 0, 0, 0, 0, 2174, 2177,
	2180, 2183, 0, 0, 0, 0, 2163, 0, 0, 0,
	2167, 1933, 1919, 0, 1961, 1959, 1960, 1954, 1961, 1958,
	1911, 0, 1910, 0, 2189, 0, 2191, 2193, 0, 0,
	2195, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2075, 2076, 2077, 2097, 2196,
	2328, 2329, 0, 0, 0, 0, 0, 0, 2202, 0,
	2334, 2203, 2205, 1704, 0, 1697, 0, 1762, 1751, 1851,
	0, 2355, 1821, 1764, 1766, 2356, 2394, 1751, 1751, 0,
	2303, 0, 0, 1812, 0, 0, 0, 1814, 1785, 0,
	0, 1779, 0, 1770, 1771, 1772, 1773, 1774, 1775, 1776,
	1786, 1310, 1816, 1788, 1792, 2422, 0, 1818, 0, 1803,
	0, 1805, 1838, 0, 1797, 1800, 0, 0, 2437, 1852,
	0, 383, 391, 392, 384, 385, 386, 387, 0, 1497,
	0, 0, 0, 0, 0, 2305, 0, 1858, 0, 1864,
	0, 0, 0, 0, 662, 0, 0, 0, 0, 0,
	1641, 442, 533, 221, 538, 541, 2361, 221, 547, 550,
	556, 250, 0, 722, -2, 767, 768, 770, 0, 766,
	872, 868, 175, 1511, 0, 0, 0, 1453, 0, 1175,
	0, 1170, 1171, 1455, 1459, 1465, 1468, 0, 180, 2870,
	192, 0, 2870, 0, 1236, 0, 0, 0, 0, 0,
	0, 1513, 0, 0, 2870, 221, 2870, 221, 196, 198,
	201, 0, 207, 203, 0, 1172, 0, 1224, 0, 0,
	1227, 128, 1511, 0, 0, 131, 135, 147, 0, 0,
	0, 157, 0, 0, 0, 1470, 1474, 1482, 0, 0,
	0, 1337, 1338, 1341, 1347, 94, 0, 0, 0, 1478,
	1480, 1486, 106, 109, 2870, 2406, 111, 2870, 0, 1452,
	0, 0, 0, 0, 0, 0, 0, 0, 209, 133,
	137, 148, 0, 1488, 130, 0, 236, 0, 0, 226,
	221, 2870, 0, 228, 0, 229, 230, 244, 0, 0,
	0, 0, 0, 0, 632, 0, 1152, 1153, 1408, 0,
	1352, 1353, 0, 1364, 1358, 0, 0, 0, 0, 0,
	1490, 1491, 0, 0, 0, 1509, 1506, 1821, 256, 0,
	1821, 264, 0, 2369, 0, 278, 406, 0, 0, 0,
	0, 1191, 1290, 1193, 1195, 1196, 1197, 223, 0, 2445,
	1262, 2601, 2445, 0, 0, 1159, 0, 0, 0, 480,
	476, 0, 485, 491, 490, 496, -2, 0, 0, 0,
	0, -2, 0, 0, 1424, 1418, 1419, 0, 0, 0,
	0, 2870, 1598, 1606, 0, 1702, 1717, 503, 1607, 1629,
	0, 0, 0, 1617, 1613, 1610, 1852, 0, 0, 0,
	0, 0, 1845, 1848, 573, 574, 320, 0, 0, 343,
	0, 0, 0, 0, 0, 0, 298, 0, 301, 0,
	0, 0, 306, 307, 308, 309, 310, 311, 0, 0,
	0, 0, 300, 332, 288, 1821, 0, 300, 0, 0,
	711, 0, 0, 923, 0, 949, 952, 961, 963, 966,
	1010, 1012, 1029, 0, 1040, 1068, 2393, 1069, 1214, 0,
	1214, 0, 0, 1089, 1665, 0, 1740, 1671, 1722, 1723,
	0, 1450, 0, 1986, 2031, 0, 0, -2, 0, 0,
	2035, 0, 0, 0, -2, 0, 0, 0, 2292, 2294,
	0, 2348, 2283, 2133, 0, 0, 0, 2137, 2121, 2122,
	0, 2243, 2309, 2338, 2342, 0, 1971, 1972, 1973, 1974,
	1975, 1976, 1977, 0, 2388, 2423, 2427, 2216, 2217, 2221,
	2402, 0, 0, 0, 2146, 0, 0, 0, 0, 0,
	0, 0, 0, 1952, 1956, 0, 0, 2310, 2321, 2323,
	2073, 2074, 2078, 2079, 2080, 2081, 2082, 2083, 2084, 2085,
	2086, 2087, -2, -2, -2, 2091, 2092, 2093, -2, -2,
	-2, 2098, 0, 0, 0, 2324, 2326, 2327, 2331, 2332,
	0, 2199, 2200, 2201, 2333, 0, 1704, 1698, 1759, 0,
	1850, 1763, 0, 1759, 1759, 1711, 1810, 0, 0, 1834,
	0, 1782, 0, 1783, 0, 0, 1815, 0, 1790, 1793,
	1794, 1804, 0, 1796, 0, 1799, 0, 2133, -2, 344,
	346, 348, 0, 351, 352, 0, 0, 0, 653, 0,
	1497, 1497, 0, 655, 639, 0, 0, 1860, 0, 0,
	1936, 1940, 1964, 666, 668, 0, 0, 2821, 2763, 0,
	665, 535, 544, 252, 0, 1819, 0, 0, 0, 0,
	0, 204, 0, 0, 0, 0, 0, 0, 222, 0,
	1271, 0, 1234, 0, 0, 1261, 0, 0, 1277, 182,
	183, 184, 0, 0, 0, 0, 194, 0, 0, 190,
	0, 200, 206, 205, 0, 1221, 0, 0, 0, 0,
	1458, 0, 0, 0, 154, 155, 156, 0, 161, 0,
	162, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1588, 1589, 0, 1579, 151, 0, 0, 0, 0,
	0, 0, 224, 0, 0, 0, 1447, 246, 0, 0,
	0, 0, 0, 340, 335, 337, 0, 1351, 1411, 1412,
	1360, 1471, 1475, 1483, 0, 0, 0, 0, 0, 680,
	1508, 0, 264, 262, 0, 265, 0, 268, 269, 0,
	0, 264, 258, 0, 0, 0, 1310, 421, 1162, 1278,
	0, 0, 1280, 1198, 1202, 0, 2445, 2445, 0, 2399,
	0, 1160, 0, 0, 1279, 472, 0, 479, 0, 493,
	0, 0, 1331, 0, 0, 1355, 1380, 1310, 0, 1423,
	1425, 0, 1433, 0, 0, 0, 1600, 1606, 0, 1593,
	1594, 1736, 1608, 1627, -2, 0, 0, 1717, 1635, 1632,
	1638, 1639, 0, 0, 0, 323, 0, 1619, 1621, 0,
	1133, 1136, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 287, 300, 1821, 290, 1821, 327, 0, 917, 944,
	1020, 1038, 1070, 1213, 0, 0, 1072, 0, 0, 1739,
	1726, 1727, 1724, 1450, 2033, 2037, 0, 0, 0, 2039,
	-2, 0, 2061, -2, -2, 2295, 2347, 2112, 1717, 2134,
	2136, 2123, 2341, 1981, 0, 2223, 2220, 0, 2207, 0,
	2158, 2159, 0, 0, 2162, 2164, 2165, 2166, 1920, 1913,
	1912, 2320, 0, 0, 0, 0, 2198, 1699, 0, 2212,
	0, 0, 1767, 2212, 2212, 1811, 0, 1813, 1780, 1768,
	0, 1777, 0, 2423, 1806, 1798, 0, 0, 349, 0,
	353, 354, 388, 0, 656, 657, 0, 0, 1854, 1859,
	0, 1865, 1935, 0, 0, 0, 0, 0, 253, 0,
	870, 871, 176, 177, 1176, 1174, 1462, 1466, 1463, 0,
	179, 0, 0, 1235, 0, 1238, 0, 0, 0, 0,
	1245, 1262, 0, 0, 0, 0, 0, 0, 1264, 0,
	1263, 0, 0, 1294, 0, 1438, 1445, 0, -2, 0,
	0, 0, 186, 212, 0, 0, 0, 0, 215, 1512,
	188, 0, 0, 221, 221, 1173, 0, 0, 1454, 1456,
	1469, 0, 0, 0, 0, 164, 0, 0, 1472, 1476,
	1484, 1479, 1481, 1487, 0, 112, 0, 1590, 0, 150,
	0, 0, 0, 1489, 234, 235, 0, 221, 0, 221,
	227, 221, 1447, 0, 0, 0, 0, 0, 0, 0,
	0, 1492, 1493, 255, 0, 0, 0, 0, 0, 257,
	333, 264, 408, 0, 1223, 0, 1290, 1282, 1283, 1284,
	0, 1194, 1289, 1291, 0, 0, 1199, 0, 0, 0,
	0, 1179, 1161, 0, 1192, 1164, 0, 477, 494, 0,
	497, 0, 500, 1150, 1328, 1372, 1310, 1375, 0, 0,
	1415, 0, 0, 0, 0, 0, 0, 0, 1602, 1606,
	0, 1595, 1596, 1629, 1735, 0, 0, 0, 1616, 1736,
	0, 342, 343, 0, 343, 302, 0, 303, 304, 305,
	312, 313, 314, 315, 289, 292, 300, 713, 715, 0,
	0, 721, 1212, 0, 0, 0, 0, 1725, 2041, -2,
	-2, 2062, 0, 2424, 2426, 1717, 0, 2209, 1719, 0,
	0, -2, 0, 0, 0, 1700, 1683, 0, 1758, 1750,
	1752, 1754, 2749, 2520, 2869, 1684, 1685, 1833, 0, 0,
	1801, 350, 1496, 658, 0, 0, 1861, 0, 663, 0,
	0, 0, 860, 0, 0, 1464, 181, 0, 0, 1239,
	1240, 2398, 1242, 0, 1244, 1246, 1247, 1164, 0, 1251,
	0, 2447, 0, 1256, 1259, 1260, 0, 0, 1273, 1295,
	0, 1304, 0, 1440, 1450, 1444, 0, 1442, 1306, 0,
	185, 214, 187, 216, 211, 0, 1447, 0, 189, 199,
	0, 0, 132, 0, 0, 2514, 167, 165, 163, 110,
	1451, 153, 0, 134, 0, 236, 245, 1446, 247, 231,
	221, 0, 0, 1473, 1477, 1485, 0, 1500, 1501, 1502,
	1503, 0, 0, 0, 0, 266, 0, 267, 270, 271,
	0, 0, 1164, 1222, 1163, 1281, 0, 1292, 1164, 0,
	0, 0, 0, 0, 0, 1166, 0, 1165, 0, 0,
	478, 481, 0, 484, 0, 0, 0, 0, 0, 1379,
	0, 1426, 1424, 0, 1432, 0, 0, 0, 1578, 0,
	0, 1597, 1598, 501, 1622, 0, 0, 1629, 1640, 322,
	0, 325, 299, 291, 0, 717, 0, 719, 0, 1071,
	1073, 0, 0, 2135, 2227, 0, 0, 2160, 2161, -2,
	0, 2101, 2211, 2213, 0, 0, 0, 0, 0, 1769,
	1778, 1497, 1855, 670, 667, 669, 0, 1460, 0, 1467,
	223, 1237, 1241, 0, 1248, 0, 0, 0, 1252, 1314,
	0, 0, 1331, 1331, 1265, 0, 0, 1298, 1299, 1219,
	0, 1300, 1301, 1302, 1439, 1728, 1445, 1164, 0, 0,
	213, 218, 0, 0, 0, 0, 0, 0, 152, 0,
	225, 248, 1447, 0, 0, 1504, 1505, 0, 0, 263,
	282, 0, 1373, 1166, 0, 1293, 1200, 1203, 1204, 1205,
	1206, 1207, 1208, 1209, 1210, 1211, 1201, 1306, 0, 0,
	1270, 1177, 0, 1180, 0, 1162, 0, 482, 483, 498,
	0, 499, 0, 0, 1380, 0, 0, 1433, 0, 0,
	1585, 1577, 1606, 1599, 1600, 1852, 0, 1630, 0, 716,
	0, 0, 1081, 1082, 0, 0, 0, 0, 2222, 1720,
	2102, 0, 0, 1753, 1755, 1756, 1757, 659, 0, 1461,
	193, 0, 1308, 1250, 1319, 0, 0, 0, 0, 0,
	1266, 1296, 1297, 1294, 1218, 0, 1443, 1441, 1275, 1308,
	1310, 191, 0, 1306, 0, 1228, 0, 0, 1231, 0,
	0, 168, 2514, 166, 0, 221, 637, 1497, 221, 0,
	285, 0, 276, 274, 275, 1158, 0, 1286, 1288, 1304,
	1306, 1219, 0, 1181, 1223, 1179, 495, 1374, 1378, 1376,
	1416, 1306, 0, 1304, 0, 1592, 1606, 1586, 1587, 0,
	1602, 0, 0, 343, 718, 720, 2219, 2239, 2228, -2,
	2824, 2521, 0, 2239, 2239, 2214, 2215, 0, 0, 1164,
	0, 1253, 1315, 1316, 0, 1311, 1312, 1313, 2446, 1254,
	1255, 1257, 1258, 1852, 0, 1305, 1314, 217, 1164, 1225,
	0, 0, 1226, 0, 0, 171, 0, 173, 249, 1495,
	1498, 0, 272, 0, 0, 1155, 1157, 1164, 0, 1219,
	1304, 1164, 0, 0, 0, 1164, 1166, 1304, 0, 1219,
	0, 1581, 1591, 0, 1601, 1578, 0, 1625, 0, 324,
	2224, 0, 0, 2230, 2231, 2232, 2233, 2234, 2225, 2226,
	671, 1243, 1249, 0, 1317, 0, 1318, 0, 0, 0,
	1274, 1303, 1319, 197, 1229, 0, 1232, 0, 169, 0,
	0, 280, 281, 1285, 1287, 1164, 1219, 1852, 1167, 0,
	1169, 1166, 1178, 1219, 0, 1164, 0, 1604, 1580, 1584,
	2407, 1585, 1623, 0, 0, 0, 2236, 2237, 0, 0,
	0, 1320, 0, 1323, 1324, 0, 1321, 1294, 0, 0,
	221, 0, 1852, 1164, 1269, 1168, 1158, 1164, 1306, 1852,
	1304, 1574, 1606, 1592, 0, 1852, 2235, 2238, 2229, 1307,
	1322, 1325, 1326, 1276, 0, 0, 1499, 283, 0, 1267,
	1852, 1156, 1852, 1304, 1429, 1219, 0, 1581, 1852, 1626,
	1216, 0, 0, 1268, 1427, 1219, 1164, 1603, 1575, 1624,
	1230, 1215, 0, 284, 1164, 1852, 0, 1852, 1430, 0,
	1428, 1216, 1233,
}

var sqlTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 614, 3, 620, 615, 3,
	626, 627, 618, 616, 631, 617, 628, 619, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 634, 3,
	606, 608, 607, 611, 630, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 624, 3, 625, 621, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 632, 613, 633, 609,
}

var sqlTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 243, 244, 245, 246, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257,
}

var sqlTok3 = [...]int{
	57600, 258, 57601, 259, 57602, 260, 57603, 261, 57604, 262,
	57605, 263, 57606, 264, 57607, 265, 57608, 266, 57609, 267,
	57610, 268, 57611, 269, 57612, 270, 57613, 271, 57614, 272,
	57615, 273, 57616, 274, 57617, 275, 57618, 276, 57619, 277,
	57620, 278, 57621, 279, 57622, 280, 57623, 281, 57624, 282,
	57625, 283, 57626, 284, 57627, 285, 57628, 286, 57629, 287,
	57630, 288, 57631, 289, 57632, 290, 57633, 291, 57634, 292,
	57635, 293, 57636, 294, 57637, 295, 57638, 296, 57639, 297,
	57640, 298, 57641, 299, 57642, 300, 57643, 301, 57644, 302,
	57645, 303, 57646, 304, 57647, 305, 57648, 306, 57649, 307,
	57650, 308, 57651, 309, 57652, 310, 57653, 311, 57654, 312,
	57655, 313, 57656, 314, 57657, 315, 57658, 316, 57659, 317,
	57660, 318, 57661, 319, 57662, 320, 57663, 321, 57664, 322,
	57665, 323, 57666, 324, 57667, 325, 57668, 326, 57669, 327,
	57670, 328, 57671, 329, 57672, 330, 57673, 331, 57674, 332,
	57675, 333, 57676, 334, 57677, 335, 57678, 336, 57679, 337,
	57680, 338, 57681, 339, 57682, 340, 57683, 341, 57684, 342,
	57685, 343, 57686, 344, 57687, 345, 57688, 346, 57689, 347,
	57690, 348, 57691, 349, 57692, 350, 57693, 351, 57694, 352,
	57695, 353, 57696, 354, 57697, 355, 57698, 356, 57699, 357,
	57700, 358, 57701, 359, 57702, 360, 57703, 361, 57704, 362,
	57705, 363, 57706, 364, 57707, 365, 57708, 366, 57709, 367,
	57710, 368, 57711, 369, 57712, 370, 57713, 371, 57714, 372,
	57715, 373, 57716, 374, 57717, 375, 57718, 376, 57719, 377,
	57720, 378, 57721, 379, 57722, 380, 57723, 381, 57724, 382,
	57725, 383, 57726, 384, 57727, 385, 57728, 386, 57729, 387,
	57730, 388, 57731, 389, 57732, 390, 57733, 391, 57734, 392,
	57735, 393, 57736, 394, 57737, 395, 57738, 396, 57739, 397,
	57740, 398, 57741, 399, 57742, 400, 57743, 401, 57744, 402,
	57745, 403, 57746, 404, 57747, 405, 57748, 406, 57749, 407,
	57750, 408, 57751, 409, 57752, 410, 57753, 411, 57754, 412,
	57755, 413, 57756, 414, 57757, 415, 57758, 416, 57759, 417,
	57760, 418, 57761, 419, 57762, 420, 57763, 421, 57764, 422,
	57765, 423, 57766, 424, 57767, 425, 57768, 426, 57769, 427,
	57770, 428, 57771, 429, 57772, 430, 57773, 431, 57774, 432,
	57775, 433, 57776, 434, 57777, 435, 57778, 436, 57779, 437,
	57780, 438, 57781, 439, 57782, 440, 57783, 441, 57784, 442,
	57785, 443, 57786, 444, 57787, 445, 57788, 446, 57789, 447,
	57790, 448, 57791, 449, 57792, 450, 57793, 451, 57794, 452,
	57795, 453, 57796, 454, 57797, 455, 57798, 456, 57799, 457,
	57800, 458, 57801, 459, 57802, 460, 57803, 461, 57804, 462,
	57805, 463, 57806, 464, 57807, 465, 57808, 466, 57809, 467,
	57810, 468, 57811, 469, 57812, 470, 57813, 471, 57814, 472,
	57815, 473, 57816, 474, 57817, 475, 57818, 476, 57819, 477,
	57820, 478, 57821, 479, 57822, 480, 57823, 481, 57824, 482,
	57825, 483, 57826, 484, 57827, 485, 57828, 486, 57829, 487,
	57830, 488, 57831, 489, 57832, 490, 57833, 491, 57834, 492,
	57835, 493, 57836, 494, 57837, 495, 57838, 496, 57839, 497,
	57840, 498, 57841, 499, 57842, 500, 57843, 501, 57844, 502,
	57845, 503, 57846, 504, 57847, 505, 57848, 506, 57849, 507,
	57850, 508, 57851, 509, 57852, 510, 57853, 511, 57854, 512,
	57855, 513, 57856, 514, 57857, 515, 57858, 516, 57859, 517,
	57860, 518, 57861, 519, 57862, 520, 57863, 521, 57864, 522,
	57865, 523, 57866, 524, 57867, 525, 57868, 526, 57869, 527,
	57870, 528, 57871, 529, 57872, 530, 57873, 531, 57874, 532,
	57875, 533, 57876, 534, 57877, 535, 57878, 536, 57879, 537,
	57880, 538, 57881, 539, 57882, 540, 57883, 541, 57884, 542,
	57885, 543, 57886, 544, 57887, 545, 57888, 546, 57889, 547,
	57890, 548, 57891, 549, 57892, 550, 57893, 551, 57894, 552,
	57895, 553, 57896, 554, 57897, 555, 57898, 556, 57899, 557,
	57900, 558, 57901, 559, 57902, 560, 57903, 561, 57904, 562,
	57905, 563, 57906, 564, 57907, 565, 57908, 566, 57909, 567,
	57910, 568, 57911, 569, 57912, 570, 57913, 571, 57914, 572,
	57915, 573, 57916, 574, 57917, 575, 57918, 576, 57919, 577,
	57920, 578, 57921, 579, 57922, 580, 57923, 581, 57924, 582,
	57925, 583, 57926, 584, 57927, 585, 57928, 586, 57929, 587,
	57930, 588, 57931, 589, 57932, 590, 57933, 591, 57934, 592,
	57935, 593, 57936, 594, 57937, 595, 57938, 596, 57939, 597,
	57940, 598, 57941, 599, 57942, 600, 57943, 601, 57944, 602,
	57945, 603, 57946, 604, 57947, 605, 57948, 610, 57949, 612,
	57950, 622, 57951, 623, 57952, 629, 0,
}

var sqlErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	sqlDebug        = 0
	sqlErrorVerbose = false
)

type sqlLexer interface {
	Lex(lval *sqlSymType) int
	Error(s string)
}

type sqlParser interface {
	Parse(sqlLexer) int
	Lookahead() int
}

type sqlParserImpl struct {
	lval  sqlSymType
	stack [sqlInitialStackSize]sqlSymType
	char  int
}

func (p *sqlParserImpl) Lookahead() int {
	return p.char
}

func sqlNewParser() sqlParser {
	return &sqlParserImpl{}
}

const sqlFlag = -1000

func sqlTokname(c int) string {
	if c >= 1 && c-1 < len(sqlToknames) {
		if sqlToknames[c-1] != "" {
			return sqlToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func sqlStatname(s int) string {
	if s >= 0 && s < len(sqlStatenames) {
		if sqlStatenames[s] != "" {
			return sqlStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func sqlErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !sqlErrorVerbose {
		return "syntax error"
	}

	for _, e := range sqlErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + sqlTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := sqlPact[state]
	for tok := TOKSTART; tok-1 < len(sqlToknames); tok++ {
		if n := base + tok; n >= 0 && n < sqlLast && sqlChk[sqlAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if sqlDef[state] == -2 {
		i := 0
		for sqlExca[i] != -1 || sqlExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; sqlExca[i] >= 0; i += 2 {
			tok := sqlExca[i]
			if tok < TOKSTART || sqlExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if sqlExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += sqlTokname(tok)
	}
	return res
}

func sqllex1(lex sqlLexer, lval *sqlSymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = sqlTok1[0]
		goto out
	}
	if char < len(sqlTok1) {
		token = sqlTok1[char]
		goto out
	}
	if char >= sqlPrivate {
		if char < sqlPrivate+len(sqlTok2) {
			token = sqlTok2[char-sqlPrivate]
			goto out
		}
	}
	for i := 0; i < len(sqlTok3); i += 2 {
		token = sqlTok3[i+0]
		if token == char {
			token = sqlTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = sqlTok2[1] /* unknown char */
	}
	if sqlDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", sqlTokname(token), uint(char))
	}
	return char, token
}

func sqlParse(sqllex sqlLexer) int {
	return sqlNewParser().Parse(sqllex)
}

func (sqlrcvr *sqlParserImpl) Parse(sqllex sqlLexer) int {
	var sqln int
	var sqlVAL sqlSymType
	var sqlDollar []sqlSymType
	_ = sqlDollar // silence set and not used
	sqlS := sqlrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	sqlstate := 0
	sqlrcvr.char = -1
	sqltoken := -1 // sqlrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		sqlstate = -1
		sqlrcvr.char = -1
		sqltoken = -1
	}()
	sqlp := -1
	goto sqlstack

ret0:
	return 0

ret1:
	return 1

sqlstack:
	/* put a state and value onto the stack */
	if sqlDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", sqlTokname(sqltoken), sqlStatname(sqlstate))
	}

	sqlp++
	if sqlp >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlS[sqlp] = sqlVAL
	sqlS[sqlp].yys = sqlstate

sqlnewstate:
	sqln = sqlPact[sqlstate]
	if sqln <= sqlFlag {
		goto sqldefault /* simple state */
	}
	if sqlrcvr.char < 0 {
		sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
	}
	sqln += sqltoken
	if sqln < 0 || sqln >= sqlLast {
		goto sqldefault
	}
	sqln = sqlAct[sqln]
	if sqlChk[sqln] == sqltoken { /* valid shift */
		sqlrcvr.char = -1
		sqltoken = -1
		sqlVAL = sqlrcvr.lval
		sqlstate = sqln
		if Errflag > 0 {
			Errflag--
		}
		goto sqlstack
	}

sqldefault:
	/* default state action */
	sqln = sqlDef[sqlstate]
	if sqln == -2 {
		if sqlrcvr.char < 0 {
			sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if sqlExca[xi+0] == -1 && sqlExca[xi+1] == sqlstate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			sqln = sqlExca[xi+0]
			if sqln < 0 || sqln == sqltoken {
				break
			}
		}
		sqln = sqlExca[xi+1]
		if sqln < 0 {
			goto ret0
		}
	}
	if sqln == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			sqllex.Error(sqlErrorMessage(sqlstate, sqltoken))
			Nerrs++
			if sqlDebug >= 1 {
				__yyfmt__.Printf("%s", sqlStatname(sqlstate))
				__yyfmt__.Printf(" saw %s\n", sqlTokname(sqltoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for sqlp >= 0 {
				sqln = sqlPact[sqlS[sqlp].yys] + sqlErrCode
				if sqln >= 0 && sqln < sqlLast {
					sqlstate = sqlAct[sqln] /* simulate a shift of "error" */
					if sqlChk[sqlstate] == sqlErrCode {
						goto sqlstack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if sqlDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", sqlS[sqlp].yys)
				}
				sqlp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if sqlDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", sqlTokname(sqltoken))
			}
			if sqltoken == sqlEofCode {
				goto ret1
			}
			sqlrcvr.char = -1
			sqltoken = -1
			goto sqlnewstate /* try again in the same state */
		}
	}

	/* reduction by production sqln */
	if sqlDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", sqln, sqlStatname(sqlstate))
	}

	sqlnt := sqln
	sqlpt := sqlp
	_ = sqlpt // guard against "declared and not used"

	sqlp -= sqlR2[sqln]
	// sqlp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if sqlp+1 >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlVAL = sqlS[sqlp+1]

	/* consult goto table to find next state */
	sqln = sqlR1[sqln]
	sqlg := sqlPgo[sqln]
	sqlj := sqlg + sqlS[sqlp].yys + 1

	if sqlj >= sqlLast {
		sqlstate = sqlAct[sqlg]
	} else {
		sqlstate = sqlAct[sqlj]
		if sqlChk[sqlstate] != -sqln {
			sqlstate = sqlAct[sqlg]
		}
	}
	// dummy call; replaced with literal code
	switch sqlnt {

	case 1:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1550
		{
			sqllex.(*lexer).SetStmt(sqlDollar[1].union.stmt())
		}
	case 2:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1555
		{
			return helpWith(sqllex, "")
		}
	case 5:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1557
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 9:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1560
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 11:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1561
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 13:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1562
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 15:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1563
		{
			return helpWith(sqllex, "GRANT")
		}
	case 17:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1564
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 19:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1565
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 21:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1566
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 23:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1567
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 25:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1568
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 27:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1569
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 29:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1570
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 33:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1573
		{
			return helpWith(sqllex, "CLOSE")
		}
	case 35:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1574
		{
			return helpWith(sqllex, "DECLARE")
		}
	case 37:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1575
		{
			return helpWith(sqllex, "FETCH")
		}
	case 39:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1578
		{
			sqlVAL.union.val = tree.Statement(nil)
		}
	case 42:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1587
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 44:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1588
		{
			return helpWith(sqllex, "ALTER TENANT")
		}
	case 46:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1590
		{
			return helpWith(sqllex, "ALTER")
		}
	case 48:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1593
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 50:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1594
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 52:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1595
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 54:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1596
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 56:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1597
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 58:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1598
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 60:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1599
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 62:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1600
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 64:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1601
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 66:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1602
		{
			return helpWith(sqllex, "ALTER DEFAULT PRIVILEGES")
		}
	case 68:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1603
		{
			return helpWith(sqllex, "ALTER CHANGEFEED")
		}
	case 70:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1604
		{
			return helpWith(sqllex, "ALTER BACKUP")
		}
	case 81:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1665
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 83:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1691
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 87:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1705
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 92:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1724
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 93:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1728
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[3].union.unresolvedObjectName(), Options: sqlDollar[4].union.seqOpts(), IfExists: false}
		}
	case 94:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1732
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[5].union.unresolvedObjectName(), Options: sqlDollar[6].union.seqOpts(), IfExists: true}
		}
	case 105:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1764
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 106:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1768
		{
			sqlVAL.union.val = &tree.AlterDatabaseOwner{Name: tree.Name(sqlDollar[3].str), Owner: sqlDollar[6].union.roleSpec()}
		}
	case 107:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1775
		{

			sqlVAL.union.val = &tree.AlterRoleSet{
				AllRoles:     true,
				DatabaseName: tree.Name(sqlDollar[3].str),
				IsRole:       true,
				SetOrReset:   sqlDollar[4].union.setVar(),
			}
		}
	case 108:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1787
		{

			sqlVAL.union.val = &tree.AlterDatabasePlacement{
				Name:      tree.Name(sqlDollar[3].str),
				Placement: sqlDollar[4].union.dataPlacement(),
			}
		}
	case 109:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1797
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 110:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1804
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:        tree.Name(sqlDollar[3].str),
				Region:      tree.Name(sqlDollar[9].str),
				IfNotExists: true,
			}
		}
	case 111:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1814
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 112:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1821
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:     tree.Name(sqlDollar[3].str),
				Region:   tree.Name(sqlDollar[8].str),
				IfExists: true,
			}
		}
	case 113:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1831
		{
			sqlVAL.union.val = &tree.AlterDatabaseSurvivalGoal{
				Name:         tree.Name(sqlDollar[3].str),
				SurvivalGoal: sqlDollar[4].union.survivalGoal(),
			}
		}
	case 114:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1840
		{
			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[4].str),
			}
		}
	case 115:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1847
		{
			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[5].str),
			}
		}
	case 118:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1876
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 126:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1908
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 127:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1912
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[3].union.unresolvedObjectName(), IfExists: false, Cmds: sqlDollar[4].union.alterTableCmds()}
		}
	case 128:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1916
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[5].union.unresolvedObjectName(), IfExists: true, Cmds: sqlDollar[6].union.alterTableCmds()}
		}
	case 129:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1922
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[3].union.tableIndexName(), IfExists: false, Cmds: sqlDollar[4].union.alterIndexCmds()}
		}
	case 130:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1926
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[5].union.tableIndexName(), IfExists: true, Cmds: sqlDollar[6].union.alterIndexCmds()}
		}
	case 131:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1932
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   tree.Expr(nil),
			}
		}
	case 132:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1941
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   sqlDollar[9].union.expr(),
			}
		}
	case 133:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1952
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: tree.Expr(nil)}
		}
	case 134:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1956
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: sqlDollar[9].union.expr()}
		}
	case 135:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1962
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 136:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1970
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				All:          true,
			}
		}
	case 137:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1980
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 138:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1984
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), All: true}
		}
	case 143:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1996
		{
			sqlVAL.union.val = tree.RelocateLease
		}
	case 144:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2002
		{
			sqlVAL.union.val = tree.RelocateVoters
		}
	case 145:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2006
		{

			sqlVAL.union.val = tree.RelocateVoters
		}
	case 146:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2011
		{
			sqlVAL.union.val = tree.RelocateNonVoters
		}
	case 147:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2017
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:    tree.TableIndexName{Table: name},
				Rows:            sqlDollar[6].union.slct(),
				SubjectReplicas: sqlDollar[5].union.relocateSubject(),
			}
		}
	case 148:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2029
		{

			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:    sqlDollar[3].union.tableIndexName(),
				Rows:            sqlDollar[6].union.slct(),
				SubjectReplicas: sqlDollar[5].union.relocateSubject(),
			}
		}
	case 149:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2050
		{
			var zoneName string
			switch e := sqlDollar[3].union.expr().(type) {
			case *tree.UnresolvedName:
				if e.NumParts != 1 {
					return setErr(sqllex, errors.New("only simple names are supported in ALTER RANGE ... CONFIGURE ZONE"))
				}
				zoneName = e.Parts[0]
			case tree.DefaultVal:
				zoneName = "default"
			default:
				return setErr(sqllex, errors.New("only simple names are supported in ALTER RANGE ... CONFIGURE ZONE"))
			}
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(zoneName)}
			sqlVAL.union.val = s
		}
	case 150:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2070
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows:            sqlDollar[8].union.slct(),
				FromStoreID:     tree.DNull,
				ToStoreID:       sqlDollar[6].union.expr(),
				SubjectReplicas: tree.RelocateLease,
			}
		}
	case 151:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2079
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				FromStoreID:     tree.DNull,
				ToStoreID:       sqlDollar[7].union.expr(),
				SubjectReplicas: tree.RelocateLease,
			}
		}
	case 152:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2090
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows:            sqlDollar[10].union.slct(),
				FromStoreID:     sqlDollar[6].union.expr(),
				ToStoreID:       sqlDollar[8].union.expr(),
				SubjectReplicas: sqlDollar[4].union.relocateSubject(),
			}
		}
	case 153:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2099
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				FromStoreID:     sqlDollar[7].union.expr(),
				ToStoreID:       sqlDollar[9].union.expr(),
				SubjectReplicas: sqlDollar[5].union.relocateSubject(),
			}
		}
	case 154:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2112
		{

			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: sqlDollar[4].union.expr()}
		}
	case 155:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2117
		{
			sqlVAL.union.val = &tree.SetZoneConfig{Options: sqlDollar[4].union.kvOptions()}
		}
	case 156:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2121
		{

			sqlVAL.union.val = &tree.SetZoneConfig{SetDefault: true}
		}
	case 157:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2126
		{
			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: tree.DNull}
		}
	case 158:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2132
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{Database: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 159:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2140
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
			}
			sqlVAL.union.val = s
		}
	case 160:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2151
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[3].union.tableIndexName(),
			}
			sqlVAL.union.val = s
		}
	case 161:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2161
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 162:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2171
		{
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 163:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2180
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[9].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			s.AllIndexes = true
			sqlVAL.union.val = s
		}
	case 164:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2191
		{
			err := errors.New("index name should not be specified in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION ... OF INDEX")
			return setErr(sqllex, err)
		}
	case 165:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2197
		{
			err := errors.New("index wildcard unsupported in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION <partition> OF INDEX <tablename>@*")
			return setErr(sqllex, err)
		}
	case 166:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2205
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), "."))}}
		}
	case 167:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2209
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), ".")), Value: sqlDollar[3].union.expr()}}
		}
	case 168:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2213
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), ".")), Value: sqlDollar[5].union.expr()})
		}
	case 169:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2217
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), "."))})
		}
	case 170:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2223
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 171:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2228
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{
				TableOrIndex: tree.TableIndexName{Table: name},
				From:         sqlDollar[7].union.exprs(),
				To:           sqlDollar[11].union.exprs(),
			}
		}
	case 172:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2239
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName()}
		}
	case 173:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2243
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName(), From: sqlDollar[7].union.exprs(), To: sqlDollar[11].union.exprs()}
		}
	case 174:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2249
		{
			sqlVAL.union.val = tree.AlterTableCmds{sqlDollar[1].union.alterTableCmd()}
		}
	case 175:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2253
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterTableCmds(), sqlDollar[3].union.alterTableCmd())
		}
	case 176:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2260
		{
			sqlVAL.union.val = &tree.AlterTableRenameColumn{Column: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 177:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2265
		{
			sqlVAL.union.val = &tree.AlterTableRenameConstraint{Constraint: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 178:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2270
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[2].union.colDef()}
		}
	case 179:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2275
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[5].union.colDef()}
		}
	case 180:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2280
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[3].union.colDef()}
		}
	case 181:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2285
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[6].union.colDef()}
		}
	case 182:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2290
		{
			sqlVAL.union.val = &tree.AlterTableSetDefault{Column: tree.Name(sqlDollar[3].str), Default: sqlDollar[4].union.expr()}
		}
	case 183:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2295
		{
			sqlVAL.union.val = &tree.AlterTableSetOnUpdate{Column: tree.Name(sqlDollar[3].str), Expr: sqlDollar[4].union.expr()}
		}
	case 184:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2300
		{
			sqlVAL.union.val = &tree.AlterTableSetVisible{Column: tree.Name(sqlDollar[3].str), Visible: sqlDollar[4].union.bool()}
		}
	case 185:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2305
		{
			sqlVAL.union.val = &tree.AlterTableDropNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 186:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2310
		{
			sqlVAL.union.val = &tree.AlterTableDropStored{Column: tree.Name(sqlDollar[3].str)}
		}
	case 187:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2315
		{
			sqlVAL.union.val = &tree.AlterTableSetNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 188:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2319
		{
			return unimplemented(sqllex, "alter table alter column add")
		}
	case 189:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2324
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     true,
				Column:       tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 190:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2333
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     false,
				Column:       tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 191:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2345
		{
			sqlVAL.union.val = &tree.AlterTableAlterColumnType{
				Column:    tree.Name(sqlDollar[3].str),
				ToType:    sqlDollar[6].union.typeReference(),
				Collation: sqlDollar[7].str,
				Using:     sqlDollar[8].union.expr(),
			}
		}
	case 192:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2355
		{
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      sqlDollar[2].union.constraintDef(),
				ValidationBehavior: sqlDollar[3].union.validationBehavior(),
			}
		}
	case 193:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2363
		{
			def := sqlDollar[7].union.constraintDef()
			def.SetName(tree.Name(sqlDollar[6].str))
			def.SetIfNotExists()
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      def,
				ValidationBehavior: sqlDollar[8].union.validationBehavior(),
			}
		}
	case 194:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2373
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "alter constraint")
		}
	case 195:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2376
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table inherits")
		}
	case 196:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2382
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table no inherits")
		}
	case 197:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2389
		{
			sqlVAL.union.val = &tree.AlterTableAlterPrimaryKey{
				Columns:       sqlDollar[7].union.idxElems(),
				Sharded:       sqlDollar[9].union.shardedIndexDef(),
				StorageParams: sqlDollar[10].union.storageParams(),
			}
		}
	case 198:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2397
		{
			sqlVAL.union.val = &tree.AlterTableValidateConstraint{
				Constraint: tree.Name(sqlDollar[3].str),
			}
		}
	case 199:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2404
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     true,
				Constraint:   tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 200:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2413
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     false,
				Constraint:   tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 201:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2422
		{
			sqlVAL.union.val = &tree.AlterTableSetAudit{Mode: sqlDollar[3].union.auditMode()}
		}
	case 202:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2427
		{
			sqlVAL.union.val = &tree.AlterTablePartitionByTable{
				PartitionByTable: sqlDollar[1].union.partitionByTable(),
			}
		}
	case 203:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2434
		{

			sqlVAL.union.val = &tree.AlterTableInjectStats{
				Stats: sqlDollar[3].union.expr(),
			}
		}
	case 204:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2441
		{
			sqlVAL.union.val = &tree.AlterTableSetStorageParams{
				StorageParams: sqlDollar[3].union.storageParams(),
			}
		}
	case 205:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2447
		{
			sqlVAL.union.val = &tree.AlterTableResetStorageParams{
				Params: sqlDollar[3].union.storageParamKeys(),
			}
		}
	case 206:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2454
		{
			sqlVAL.union.val = tree.AuditModeReadWrite
		}
	case 207:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2455
		{
			sqlVAL.union.val = tree.AuditModeDisable
		}
	case 208:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2459
		{
			sqlVAL.union.val = tree.AlterIndexCmds{sqlDollar[1].union.alterIndexCmd()}
		}
	case 209:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2463
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterIndexCmds(), sqlDollar[3].union.alterIndexCmd())
		}
	case 210:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2469
		{
			sqlVAL.union.val = &tree.AlterIndexPartitionBy{
				PartitionByIndex: sqlDollar[1].union.partitionByIndex(),
			}
		}
	case 211:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2477
		{
			sqlVAL.union.val = sqlDollar[3].union.expr()
		}
	case 212:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2481
		{
			sqlVAL.union.val = nil
		}
	case 213:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2487
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 214:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2491
		{
			sqlVAL.union.val = nil
		}
	case 215:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2497
		{
			sqlVAL.union.val = true
		}
	case 216:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2501
		{
			sqlVAL.union.val = false
		}
	case 217:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2507
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 218:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2511
		{
			sqlVAL.union.val = nil
		}
	case 219:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2518
		{
			sqlVAL.union.val = tree.DropCascade
		}
	case 220:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2522
		{
			sqlVAL.union.val = tree.DropRestrict
		}
	case 221:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2526
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 222:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2532
		{
			sqlVAL.union.val = tree.ValidationSkip
		}
	case 223:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2536
		{
			sqlVAL.union.val = tree.ValidationDefault
		}
	case 224:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2561
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[6].str),
					IfNotExists: false,
					Placement:   sqlDollar[7].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 225:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2572
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[9].str),
					IfNotExists: true,
					Placement:   sqlDollar[10].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 226:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2583
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeDropValue{
					Val: tree.EnumValue(sqlDollar[6].str),
				},
			}
		}
	case 227:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2592
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRenameValue{
					OldVal: tree.EnumValue(sqlDollar[6].str),
					NewVal: tree.EnumValue(sqlDollar[8].str),
				},
			}
		}
	case 228:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2602
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 229:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2611
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeSetSchema{
					Schema: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 230:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2620
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeOwner{
					Owner: sqlDollar[6].union.roleSpec(),
				},
			}
		}
	case 231:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2629
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 232:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2633
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 233:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2636
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 234:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2640
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      true,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 235:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2647
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      false,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 236:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2654
		{
			sqlVAL.union.val = (*tree.AlterTypeAddValuePlacement)(nil)
		}
	case 237:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2660
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.RoleName,
				Name:         sqlDollar[1].str,
			}
		}
	case 238:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2667
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.RoleName,
				Name:         sqlDollar[1].str,
			}
		}
	case 239:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2674
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.CurrentUser,
			}
		}
	case 240:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2680
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.SessionUser,
			}
		}
	case 241:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2688
		{
			sqlVAL.union.val = tree.RoleSpecList{sqlDollar[1].union.roleSpec()}
		}
	case 242:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2692
		{
			sqlVAL.union.val = append(sqlDollar[1].union.roleSpecList(), sqlDollar[3].union.roleSpec())
		}
	case 250:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2713
		{
			sqlVAL.union.val = &tree.RefreshMaterializedView{
				Name:              sqlDollar[5].union.unresolvedObjectName(),
				Concurrently:      sqlDollar[4].union.bool(),
				RefreshDataOption: sqlDollar[6].union.refreshDataOption(),
			}
		}
	case 251:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2720
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 252:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2724
		{
			sqlVAL.union.val = tree.RefreshDataWithData
		}
	case 253:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2728
		{
			sqlVAL.union.val = tree.RefreshDataClear
		}
	case 254:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2732
		{
			sqlVAL.union.val = tree.RefreshDataDefault
		}
	case 255:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2775
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: false,
				Subdir:         sqlDollar[4].union.expr(),
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 256:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2787
		{
			sqlVAL.union.val = &tree.Backup{
				Targets: sqlDollar[2].union.targetListPtr(),
				To:      sqlDollar[4].union.stringOrPlaceholderOptList(),
				Nested:  true,
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *sqlDollar[6].union.backupOptions(),
			}
		}
	case 257:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2797
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: true,
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 258:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2808
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:         sqlDollar[2].union.targetListPtr(),
				To:              sqlDollar[4].union.stringOrPlaceholderOptList(),
				IncrementalFrom: sqlDollar[6].union.exprs(),
				AsOf:            sqlDollar[5].union.asOfClause(),
				Options:         *sqlDollar[7].union.backupOptions(),
			}
		}
	case 259:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2817
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 260:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2821
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 261:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2825
		{
			t := sqlDollar[1].union.targetList()
			sqlVAL.union.val = &t
		}
	case 262:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2833
		{
			sqlVAL.union.val = sqlDollar[2].union.backupOptions()
		}
	case 263:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2837
		{
			sqlVAL.union.val = sqlDollar[4].union.backupOptions()
		}
	case 264:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2841
		{
			sqlVAL.union.val = &tree.BackupOptions{}
		}
	case 265:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2848
		{
			sqlVAL.union.val = sqlDollar[1].union.backupOptions()
		}
	case 266:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2852
		{
			if err := sqlDollar[1].union.backupOptions().CombineWith(sqlDollar[3].union.backupOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 267:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2861
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 268:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2865
		{
			sqlVAL.union.val = &tree.BackupOptions{CaptureRevisionHistory: true}
		}
	case 269:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2869
		{
			sqlVAL.union.val = &tree.BackupOptions{Detached: true}
		}
	case 270:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2873
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 271:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2877
		{
			sqlVAL.union.val = &tree.BackupOptions{IncrementalStorage: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 272:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2959
		{
			sqlVAL.union.val = &tree.ScheduledBackup{
				ScheduleLabelSpec: *(sqlDollar[3].union.scheduleLabelSpec()),
				Recurrence:        sqlDollar[10].union.expr(),
				FullBackup:        sqlDollar[11].union.fullBackupClause(),
				To:                sqlDollar[8].union.stringOrPlaceholderOptList(),
				Targets:           sqlDollar[6].union.targetListPtr(),
				BackupOptions:     *(sqlDollar[9].union.backupOptions()),
				ScheduleOptions:   sqlDollar[12].union.kvOptions(),
			}
		}
	case 273:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2970
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 274:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2975
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 275:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2979
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 276:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2989
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 277:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2995
		{
			sqlVAL.union.val = &tree.ScheduleLabelSpec{Label: sqlDollar[1].union.expr(), IfNotExists: false}
		}
	case 278:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2999
		{
			sqlVAL.union.val = &tree.ScheduleLabelSpec{Label: sqlDollar[4].union.expr(), IfNotExists: true}
		}
	case 279:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3003
		{
			sqlVAL.union.val = &tree.ScheduleLabelSpec{IfNotExists: false}
		}
	case 280:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3012
		{
			sqlVAL.union.val = &tree.FullBackupClause{Recurrence: sqlDollar[3].union.expr()}
		}
	case 281:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3016
		{
			sqlVAL.union.val = &tree.FullBackupClause{AlwaysFull: true}
		}
	case 282:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3020
		{
			sqlVAL.union.val = (*tree.FullBackupClause)(nil)
		}
	case 283:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3026
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 284:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3030
		{
			sqlVAL.union.val = sqlDollar[5].union.kvOptions()
		}
	case 285:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3034
		{
			sqlVAL.union.val = nil
		}
	case 286:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3072
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				From:               sqlDollar[3].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[4].union.asOfClause(),
				Options:            *(sqlDollar[5].union.restoreOptions()),
			}
		}
	case 287:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3081
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				Subdir:             sqlDollar[3].union.expr(),
				From:               sqlDollar[5].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[6].union.asOfClause(),
				Options:            *(sqlDollar[7].union.restoreOptions()),
			}
		}
	case 288:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3091
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[4].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *(sqlDollar[6].union.restoreOptions()),
			}
		}
	case 289:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3100
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				Subdir:  sqlDollar[4].union.expr(),
				From:    sqlDollar[6].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[7].union.asOfClause(),
				Options: *(sqlDollar[8].union.restoreOptions()),
			}
		}
	case 290:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3110
		{
			sqlVAL.union.val = &tree.Restore{
				SystemUsers: true,
				From:        sqlDollar[5].union.listOfStringOrPlaceholderOptList(),
				AsOf:        sqlDollar[6].union.asOfClause(),
				Options:     *(sqlDollar[7].union.restoreOptions()),
			}
		}
	case 291:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3119
		{
			sqlVAL.union.val = &tree.Restore{
				SystemUsers: true,
				Subdir:      sqlDollar[5].union.expr(),
				From:        sqlDollar[7].union.listOfStringOrPlaceholderOptList(),
				AsOf:        sqlDollar[8].union.asOfClause(),
				Options:     *(sqlDollar[9].union.restoreOptions()),
			}
		}
	case 292:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3129
		{
			sqlVAL.union.val = &tree.StreamIngestion{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[7].union.stringOrPlaceholderOptList(),
				AsOf:    sqlDollar[8].union.asOfClause(),
			}
		}
	case 293:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3136
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 294:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3140
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList{sqlDollar[1].union.expr()}
		}
	case 295:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3144
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList(sqlDollar[2].union.exprs())
		}
	case 296:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3150
		{
			sqlVAL.union.val = []tree.StringOrPlaceholderOptList{sqlDollar[1].union.stringOrPlaceholderOptList()}
		}
	case 297:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3154
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listOfStringOrPlaceholderOptList(), sqlDollar[3].union.stringOrPlaceholderOptList())
		}
	case 298:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3161
		{
			sqlVAL.union.val = sqlDollar[2].union.restoreOptions()
		}
	case 299:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3165
		{
			sqlVAL.union.val = sqlDollar[4].union.restoreOptions()
		}
	case 300:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3169
		{
			sqlVAL.union.val = &tree.RestoreOptions{}
		}
	case 301:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3176
		{
			sqlVAL.union.val = sqlDollar[1].union.restoreOptions()
		}
	case 302:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3180
		{
			if err := sqlDollar[1].union.restoreOptions().CombineWith(sqlDollar[3].union.restoreOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 303:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3189
		{
			sqlVAL.union.val = &tree.RestoreOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 304:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3193
		{
			sqlVAL.union.val = &tree.RestoreOptions{DecryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 305:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3197
		{
			sqlVAL.union.val = &tree.RestoreOptions{IntoDB: sqlDollar[3].union.expr()}
		}
	case 306:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3201
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingFKs: true}
		}
	case 307:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3205
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequences: true}
		}
	case 308:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3209
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequenceOwners: true}
		}
	case 309:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3213
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingViews: true}
		}
	case 310:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3217
		{
			sqlVAL.union.val = &tree.RestoreOptions{Detached: true}
		}
	case 311:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3221
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipLocalitiesCheck: true}
		}
	case 312:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3225
		{
			sqlVAL.union.val = &tree.RestoreOptions{DebugPauseOn: sqlDollar[3].union.expr()}
		}
	case 313:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3229
		{
			sqlVAL.union.val = &tree.RestoreOptions{NewDBName: sqlDollar[3].union.expr()}
		}
	case 314:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3233
		{
			sqlVAL.union.val = &tree.RestoreOptions{IncrementalStorage: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 315:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3237
		{
			sqlVAL.union.val = &tree.RestoreOptions{AsTenant: sqlDollar[3].union.expr()}
		}
	case 316:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3243
		{
			sqlVAL.str = strings.ToUpper(sqlDollar[1].str)
		}
	case 317:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3249
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "alter function")
		}
	case 318:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3253
		{
			return unimplemented(sqllex, "alter domain")
		}
	case 319:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3257
		{
			return unimplementedWithIssueDetail(sqllex, 74775, "alter aggregate")
		}
	case 320:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3294
		{

			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[4].union.expr()}, Options: sqlDollar[6].union.kvOptions()}
		}
	case 321:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3299
		{
			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[3].union.expr()}, Options: sqlDollar[4].union.kvOptions()}
		}
	case 322:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3303
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[7].union.expr()}, Options: sqlDollar[9].union.kvOptions()}
		}
	case 323:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3309
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[6].union.expr()}, Options: sqlDollar[7].union.kvOptions()}
		}
	case 324:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:3314
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: sqlDollar[5].union.nameList(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 325:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3319
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: nil, FileFormat: sqlDollar[4].str, Files: sqlDollar[7].union.exprs(), Options: sqlDollar[9].union.kvOptions()}
		}
	case 326:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3323
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 327:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3340
		{
			sqlVAL.union.val = &tree.Export{Query: sqlDollar[7].union.slct(), FileFormat: sqlDollar[3].str, File: sqlDollar[4].union.expr(), Options: sqlDollar[5].union.kvOptions()}
		}
	case 328:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3343
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 329:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3347
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 330:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3351
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 331:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3359
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 332:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3363
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 333:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3369
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 334:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3373
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 335:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3379
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 336:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3383
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 337:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3387
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 338:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3391
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 339:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3397
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 340:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3401
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[3].union.kvOption())
		}
	case 341:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3407
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 342:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3411
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 343:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3415
		{
			sqlVAL.union.val = nil
		}
	case 344:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3427
		{

			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			if sqlDollar[7].union.expr() != nil {
				return unimplementedWithIssue(sqllex, 54580)
			}
			sqlVAL.union.val = &tree.CopyFrom{
				Table:   name,
				Columns: sqlDollar[3].union.nameList(),
				Stdin:   true,
				Options: *sqlDollar[6].union.copyOptions(),
			}
		}
	case 345:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3441
		{
			return unimplemented(sqllex, "copy from unsupported format")
		}
	case 346:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3447
		{
			sqlVAL.union.val = sqlDollar[2].union.copyOptions()
		}
	case 347:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3451
		{
			sqlVAL.union.val = &tree.CopyOptions{}
		}
	case 348:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3457
		{
			sqlVAL.union.val = sqlDollar[1].union.copyOptions()
		}
	case 349:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3461
		{
			if err := sqlDollar[1].union.copyOptions().CombineWith(sqlDollar[2].union.copyOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 350:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3469
		{
			sqlVAL.union.val = &tree.CopyOptions{Destination: sqlDollar[3].union.expr()}
		}
	case 351:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3473
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatBinary}
		}
	case 352:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3477
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatCSV}
		}
	case 353:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3481
		{
			sqlVAL.union.val = &tree.CopyOptions{Delimiter: sqlDollar[2].union.expr()}
		}
	case 354:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3485
		{
			sqlVAL.union.val = &tree.CopyOptions{Null: sqlDollar[2].union.expr()}
		}
	case 356:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3493
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 358:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3494
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 360:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3495
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 362:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3496
		{
			return helpWith(sqllex, "CANCEL ALL JOBS")
		}
	case 363:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3497
		{
			return helpWith(sqllex, "CANCEL")
		}
	case 364:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3507
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.CancelJob,
			}
		}
	case 365:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3515
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 366:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3517
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 367:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3521
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 368:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3524
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 369:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3534
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 370:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3543
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 371:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3551
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 372:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3553
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 373:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3557
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 374:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3560
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 375:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3570
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 376:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3579
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 377:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3587
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 378:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3589
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 379:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3593
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 380:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3596
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 381:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3604
		{
			sqlVAL.union.val = &tree.ControlJobsOfType{Type: sqlDollar[3].str, Command: tree.CancelJob}
		}
	case 382:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3607
		{
			return helpWith(sqllex, "CANCEL ALL JOBS")
		}
	case 383:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3611
		{
			sqlVAL.union.val = &tree.CommentOnDatabase{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 384:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3615
		{
			sqlVAL.union.val = &tree.CommentOnSchema{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 385:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3619
		{
			sqlVAL.union.val = &tree.CommentOnTable{Table: sqlDollar[4].union.unresolvedObjectName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 386:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3623
		{
			varName, err := sqlDollar[4].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[4].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = &tree.CommentOnColumn{ColumnItem: columnItem, Comment: sqlDollar[6].union.strPtr()}
		}
	case 387:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3636
		{
			sqlVAL.union.val = &tree.CommentOnIndex{Index: sqlDollar[4].union.tableIndexName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 388:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3641
		{
			sqlVAL.union.val = &tree.CommentOnConstraint{Constraint: tree.Name(sqlDollar[4].str), Table: sqlDollar[6].union.unresolvedObjectName(), Comment: sqlDollar[8].union.strPtr()}
		}
	case 389:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3644
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "comment on extension")
		}
	case 390:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3645
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "comment on function")
		}
	case 391:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3649
		{
			t := sqlDollar[1].str
			sqlVAL.union.val = &t
		}
	case 392:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3654
		{
			var str *string
			sqlVAL.union.val = str
		}
	case 394:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3666
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 397:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3668
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 399:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3669
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 403:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3672
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 404:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3673
		{
		}
	case 405:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3674
		{
			return helpWith(sqllex, "CREATE")
		}
	case 406:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3681
		{
			sqlVAL.union.val = &tree.CreateExtension{IfNotExists: true, Name: sqlDollar[6].str}
		}
	case 407:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3684
		{
			sqlVAL.union.val = &tree.CreateExtension{Name: sqlDollar[3].str}
		}
	case 408:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3688
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "create extension if not exists with")
		}
	case 409:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3691
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "create extension with")
		}
	case 410:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3694
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 411:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3697
		{
			return unimplemented(sqllex, "create access method")
		}
	case 412:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3698
		{
			return unimplementedWithIssueDetail(sqllex, 74775, "create aggregate")
		}
	case 413:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3699
		{
			return unimplemented(sqllex, "create cast")
		}
	case 414:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3700
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create constraint")
		}
	case 415:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3701
		{
			return unimplemented(sqllex, "create conversion")
		}
	case 416:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3702
		{
			return unimplemented(sqllex, "create def conv")
		}
	case 417:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3703
		{
			return unimplemented(sqllex, "create foreign table")
		}
	case 418:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3704
		{
			return unimplemented(sqllex, "create fdw")
		}
	case 419:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3705
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 420:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3706
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 421:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3707
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create language "+sqlDollar[6].str)
		}
	case 422:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3708
		{
			return unimplementedWithIssue(sqllex, 65017)
		}
	case 423:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3709
		{
			return unimplemented(sqllex, "create publication")
		}
	case 424:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3710
		{
			return unimplemented(sqllex, "create rule")
		}
	case 425:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3711
		{
			return unimplemented(sqllex, "create server")
		}
	case 426:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3712
		{
			return unimplemented(sqllex, "create subscription")
		}
	case 427:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3713
		{
			return unimplementedWithIssueDetail(sqllex, 54113, "create tablespace")
		}
	case 428:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3714
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "create text")
		}
	case 429:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3715
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create trigger")
		}
	case 430:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3718
		{
		}
	case 431:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3719
		{
		}
	case 432:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3722
		{
		}
	case 433:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3723
		{
		}
	case 434:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3726
		{
		}
	case 435:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3727
		{
		}
	case 436:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3730
		{
			return unimplemented(sqllex, "drop access method")
		}
	case 437:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3731
		{
			return unimplementedWithIssueDetail(sqllex, 74775, "drop aggregate")
		}
	case 438:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3732
		{
			return unimplemented(sqllex, "drop cast")
		}
	case 439:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3733
		{
			return unimplemented(sqllex, "drop collation")
		}
	case 440:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3734
		{
			return unimplemented(sqllex, "drop conversion")
		}
	case 441:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3735
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "drop")
		}
	case 442:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3736
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "drop extension if exists")
		}
	case 443:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3737
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "drop extension")
		}
	case 444:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3738
		{
			return unimplemented(sqllex, "drop foreign table")
		}
	case 445:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3739
		{
			return unimplemented(sqllex, "drop fdw")
		}
	case 446:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3740
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop function")
		}
	case 447:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3741
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop language "+sqlDollar[4].str)
		}
	case 448:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3742
		{
			return unimplemented(sqllex, "drop operator")
		}
	case 449:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3743
		{
			return unimplemented(sqllex, "drop publication")
		}
	case 450:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3744
		{
			return unimplemented(sqllex, "drop rule")
		}
	case 451:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3745
		{
			return unimplemented(sqllex, "drop server")
		}
	case 452:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3746
		{
			return unimplemented(sqllex, "drop subscription")
		}
	case 453:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3747
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "drop text")
		}
	case 454:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3748
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "drop")
		}
	case 456:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3751
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 458:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3752
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 460:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3753
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 462:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3754
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 464:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3755
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 465:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3757
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 467:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3758
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 469:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3759
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 471:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3760
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 472:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3770
		{
			sqlVAL.union.val = &tree.CreateStats{
				Name:        tree.Name(sqlDollar[3].str),
				ColumnNames: sqlDollar[4].union.nameList(),
				Table:       sqlDollar[6].union.tblExpr(),
				Options:     *sqlDollar[7].union.createStatsOptions(),
			}
		}
	case 473:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3778
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 474:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3782
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 475:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3786
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 476:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3792
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 477:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3796
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
			}
		}
	case 478:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3805
		{

			sqlVAL.union.val = sqlDollar[3].union.createStatsOptions()
		}
	case 479:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3812
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 480:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3818
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{}
		}
	case 481:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3824
		{
			sqlVAL.union.val = sqlDollar[1].union.createStatsOptions()
		}
	case 482:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3828
		{
			a := sqlDollar[1].union.createStatsOptions()
			b := sqlDollar[2].union.createStatsOptions()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 483:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3839
		{

			value, _ := constant.Float64Val(sqlDollar[2].union.numVal().AsConstantValue())
			if value < 0.0 || value >= 1.0 {
				sqllex.Error("THROTTLING fraction must be between 0 and 1")
				return 1
			}
			sqlVAL.union.val = &tree.CreateStatsOptions{
				Throttling: value,
			}
		}
	case 484:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3851
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 485:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3866
		{
			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				SinkURI: sqlDollar[5].union.expr(),
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 486:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3874
		{

			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 487:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3884
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[1].union.tablePatterns()}
		}
	case 488:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3888
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 489:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3894
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()}
		}
	case 490:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3898
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedObjectName().ToUnresolvedName())
		}
	case 491:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3905
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 492:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3909
		{

			sqlVAL.union.val = nil
		}
	case 493:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3926
		{
			sqlVAL.union.val = &tree.ReplicationStream{
				Targets: sqlDollar[5].union.targetList(),
				SinkURI: sqlDollar[6].union.expr(),
				Options: *sqlDollar[7].union.replicationOptions(),
			}
		}
	case 494:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3937
		{
			sqlVAL.union.val = sqlDollar[2].union.replicationOptions()
		}
	case 495:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3941
		{
			sqlVAL.union.val = sqlDollar[4].union.replicationOptions()
		}
	case 496:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3945
		{
			sqlVAL.union.val = &tree.ReplicationOptions{}
		}
	case 497:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3952
		{
			sqlVAL.union.val = sqlDollar[1].union.replicationOptions()
		}
	case 498:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3956
		{
			if err := sqlDollar[1].union.replicationOptions().CombineWith(sqlDollar[3].union.replicationOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 499:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3965
		{
			sqlVAL.union.val = &tree.ReplicationOptions{Cursor: sqlDollar[3].union.expr()}
		}
	case 500:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3969
		{
			sqlVAL.union.val = &tree.ReplicationOptions{Detached: true}
		}
	case 501:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3982
		{
			sqlVAL.union.val = &tree.Delete{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[4].union.tblExpr(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[6].union.expr()),
				OrderBy:   sqlDollar[7].union.orderBy(),
				Limit:     sqlDollar[8].union.limit(),
				Returning: sqlDollar[9].union.retClause(),
			}
		}
	case 502:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3992
		{
			return helpWith(sqllex, "DELETE")
		}
	case 503:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3995
		{
			return unimplementedWithIssueDetail(sqllex, 40963, "delete using")
		}
	case 504:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3996
		{
		}
	case 505:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4004
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeAll}
		}
	case 506:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4007
		{
			return unimplemented(sqllex, "discard plans")
		}
	case 507:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4008
		{
			return unimplemented(sqllex, "discard sequences")
		}
	case 508:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4009
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 509:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4010
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 510:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4011
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 513:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4020
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 515:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4021
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 516:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4022
		{
		}
	case 517:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4023
		{
			return helpWith(sqllex, "DROP")
		}
	case 519:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4026
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 521:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4027
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 523:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4028
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 525:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4029
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 527:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4030
		{
			return helpWith(sqllex, "DROP SEQUENCE")
		}
	case 529:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4031
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 531:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4032
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 532:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4040
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 533:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4044
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 534:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4048
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[4].union.tableNames(),
				IfExists:       false,
				DropBehavior:   sqlDollar[5].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 535:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4057
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[6].union.tableNames(),
				IfExists:       true,
				DropBehavior:   sqlDollar[7].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 536:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4065
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 537:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4073
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 538:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4077
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 539:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4080
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 540:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4088
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 541:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4092
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 542:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4095
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 543:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4103
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[4].union.newTableIndexNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[5].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 544:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4112
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[6].union.newTableIndexNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[7].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 545:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4120
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 546:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4128
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[3].str),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 547:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4136
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[5].str),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 548:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4143
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 549:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4150
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[3].union.unresolvedObjectNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 550:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4158
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[5].union.unresolvedObjectNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 551:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4165
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 552:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4169
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[1].union.unresolvedObjectNames()}
		}
	case 553:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4175
		{
			sqlVAL.union.val = []*tree.UnresolvedObjectName{sqlDollar[1].union.unresolvedObjectName()}
		}
	case 554:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4179
		{
			sqlVAL.union.val = append(sqlDollar[1].union.unresolvedObjectNames(), sqlDollar[3].union.unresolvedObjectName())
		}
	case 555:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4188
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[3].union.objectNamePrefixList(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 556:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4196
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[5].union.objectNamePrefixList(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 557:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4203
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 558:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4211
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[3].union.roleSpecList(), IfExists: false, IsRole: sqlDollar[2].union.bool()}
		}
	case 559:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4215
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[5].union.roleSpecList(), IfExists: true, IsRole: sqlDollar[2].union.bool()}
		}
	case 560:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4218
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 561:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4222
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 562:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4227
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 563:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4240
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 564:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4245
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 565:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4247
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 566:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4252
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 567:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4256
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 568:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4279
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(nil, sqlDollar[2].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 569:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4286
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 570:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4288
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(sqlDollar[3].union.strs(), sqlDollar[5].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 571:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4296
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 572:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4304
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 573:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4312
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 574:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4320
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 575:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4331
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 580:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4339
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 584:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4342
		{
			return helpWith(sqllex, "DELETE")
		}
	case 587:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4344
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 589:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4345
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 591:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4346
		{
			return helpWith(sqllex, "INSERT")
		}
	case 595:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4349
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 598:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4351
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 600:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4354
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 604:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4359
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 606:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4360
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 608:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4361
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 610:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4366
		{
			return helpWith(sqllex, "DELETE")
		}
	case 612:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4367
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 614:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4368
		{
			return helpWith(sqllex, "INSERT")
		}
	case 615:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4370
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 618:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4374
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 620:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4375
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 621:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4379
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 622:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4383
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 623:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4393
		{
			sqlVAL.union.val = &tree.AlterChangefeed{
				Jobs: sqlDollar[3].union.expr(),
				Cmds: sqlDollar[4].union.alterChangefeedCmds(),
			}
		}
	case 624:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4399
		{
			return helpWith(sqllex, "ALTER CHANGEFEED")
		}
	case 625:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4403
		{
			sqlVAL.union.val = tree.AlterChangefeedCmds{sqlDollar[1].union.alterChangefeedCmd()}
		}
	case 626:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4407
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterChangefeedCmds(), sqlDollar[2].union.alterChangefeedCmd())
		}
	case 627:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4414
		{
			sqlVAL.union.val = &tree.AlterChangefeedAddTarget{
				Targets: sqlDollar[2].union.targetList(),
			}
		}
	case 628:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4421
		{
			sqlVAL.union.val = &tree.AlterChangefeedDropTarget{
				Targets: sqlDollar[2].union.targetList(),
			}
		}
	case 629:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4427
		{
			sqlVAL.union.val = &tree.AlterChangefeedSetOptions{
				Options: sqlDollar[2].union.kvOptions(),
			}
		}
	case 630:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4433
		{
			sqlVAL.union.val = &tree.AlterChangefeedUnsetOptions{
				Options: sqlDollar[2].union.nameList(),
			}
		}
	case 631:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4452
		{
			sqlVAL.union.val = &tree.AlterBackup{
				Backup: sqlDollar[3].union.expr(),
				Cmds:   sqlDollar[4].union.alterBackupCmds(),
			}
		}
	case 632:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4459
		{
			sqlVAL.union.val = &tree.AlterBackup{
				Subdir: sqlDollar[3].union.expr(),
				Backup: sqlDollar[5].union.expr(),
				Cmds:   sqlDollar[6].union.alterBackupCmds(),
			}
		}
	case 633:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4466
		{
			return helpWith(sqllex, "ALTER BACKUP")
		}
	case 634:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4470
		{
			sqlVAL.union.val = tree.AlterBackupCmds{sqlDollar[1].union.alterBackupCmd()}
		}
	case 635:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4474
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterBackupCmds(), sqlDollar[2].union.alterBackupCmd())
		}
	case 636:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4480
		{
			sqlVAL.union.val = &tree.AlterBackupKMS{
				KMSInfo: sqlDollar[2].union.backupKMS(),
			}
		}
	case 637:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4488
		{
			sqlVAL.union.val = tree.BackupKMS{
				NewKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList(),
				OldKMSURI: sqlDollar[7].union.stringOrPlaceholderOptList(),
			}
		}
	case 638:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4501
		{
			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: sqlDollar[5].union.stmt(),
			}
		}
	case 639:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4509
		{

			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: &tree.CannedOptPlan{Plan: sqlDollar[7].str},
			}
		}
	case 640:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4517
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 641:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4521
		{
			sqlVAL.union.val = sqlDollar[2].union.typeReferences()
		}
	case 642:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4525
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference(nil)
		}
	case 643:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4535
		{
			sqlVAL.union.val = &tree.Execute{
				Name:   tree.Name(sqlDollar[2].str),
				Params: sqlDollar[3].union.exprs(),
			}
		}
	case 644:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4542
		{

			sqlVAL.union.val = &tree.Execute{
				Name:        tree.Name(sqlDollar[2].str),
				Params:      sqlDollar[3].union.exprs(),
				DiscardRows: true,
			}
		}
	case 645:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4550
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 646:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4554
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 647:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4558
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 648:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4568
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[2].str)}
		}
	case 649:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4572
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[3].str)}
		}
	case 650:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4576
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 651:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4580
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 652:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4583
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 653:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4606
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.roleSpecList(), Targets: sqlDollar[4].union.targetList(), WithGrantOption: sqlDollar[7].union.bool()}
		}
	case 654:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4610
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.roleSpecList(), AdminOption: false}
		}
	case 655:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4614
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.roleSpecList(), AdminOption: true}
		}
	case 656:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:4618
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.roleSpecList(), WithGrantOption: sqlDollar[8].union.bool()}
		}
	case 657:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:4622
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees:        sqlDollar[7].union.roleSpecList(),
				WithGrantOption: sqlDollar[8].union.bool(),
			}
		}
	case 658:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4633
		{
			return unimplemented(sqllex, "grant privileges on schema with")
		}
	case 659:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:4637
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas:           sqlDollar[8].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees:        sqlDollar[10].union.roleSpecList(),
				WithGrantOption: sqlDollar[11].union.bool(),
			}
		}
	case 660:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4649
		{
			return unimplementedWithIssueDetail(sqllex, 74780, "grant privileges on sequence")
		}
	case 661:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4652
		{
			return helpWith(sqllex, "GRANT")
		}
	case 662:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4675
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.roleSpecList(), Targets: sqlDollar[4].union.targetList(), GrantOptionFor: false}
		}
	case 663:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4679
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[5].union.privilegeList(), Grantees: sqlDollar[9].union.roleSpecList(), Targets: sqlDollar[7].union.targetList(), GrantOptionFor: true}
		}
	case 664:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4683
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.roleSpecList(), AdminOption: false}
		}
	case 665:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4687
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[5].union.nameList(), Members: sqlDollar[7].union.roleSpecList(), AdminOption: true}
		}
	case 666:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4691
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.roleSpecList(), GrantOptionFor: false}
		}
	case 667:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4695
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[5].union.privilegeList(), Targets: sqlDollar[8].union.targetList(), Grantees: sqlDollar[10].union.roleSpecList(), GrantOptionFor: true}
		}
	case 668:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4699
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees:       sqlDollar[7].union.roleSpecList(),
				GrantOptionFor: false,
			}
		}
	case 669:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4710
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[5].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[8].union.objectNamePrefixList(),
				},
				Grantees:       sqlDollar[10].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 670:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4721
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas:           sqlDollar[8].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees:       sqlDollar[10].union.roleSpecList(),
				GrantOptionFor: false,
			}
		}
	case 671:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:4733
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[5].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas:           sqlDollar[11].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees:       sqlDollar[13].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 672:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4745
		{
			return unimplemented(sqllex, "revoke privileges on sequence")
		}
	case 673:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4748
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 674:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4754
		{
			sqlVAL.union.val = privilege.List{privilege.ALL}
		}
	case 675:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4758
		{
			privList, err := privilege.ListFromStrings(sqlDollar[1].union.nameList().ToStrings())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = privList
		}
	case 676:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4768
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 677:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4772
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 683:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4786
		{
			return helpWith(sqllex, "RESET")
		}
	case 685:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4787
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 686:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4795
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}, Reset: true}
		}
	case 687:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4799
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[3].str, Values: tree.Exprs{tree.DefaultVal{}}, Reset: true}
		}
	case 688:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4803
		{
			sqlVAL.union.val = &tree.SetVar{ResetAll: true, Reset: true}
		}
	case 689:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4806
		{
			return helpWith(sqllex, "RESET")
		}
	case 690:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4814
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: tree.DefaultVal{}}
		}
	case 691:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4817
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 692:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4828
		{
			sqlVAL.union.val = &tree.SetVar{Name: "database", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 693:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4831
		{
			return helpWith(sqllex, "USE")
		}
	case 695:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4835
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 696:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4836
		{
		}
	case 697:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4837
		{
			return unimplemented(sqllex, "set constraints")
		}
	case 699:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4841
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 701:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4842
		{
			return helpWith(sqllex, "SET LOCAL")
		}
	case 703:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4843
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 705:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4844
		{
			return helpWith(sqllex, "USE")
		}
	case 708:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4860
		{
			return helpWith(sqllex, "SCRUB")
		}
	case 709:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4875
		{
			sqlVAL.union.val = &tree.Scrub{Typ: tree.ScrubDatabase, Database: tree.Name(sqlDollar[4].str), AsOf: sqlDollar[5].union.asOfClause()}
		}
	case 710:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4878
		{
			return helpWith(sqllex, "SCRUB DATABASE")
		}
	case 711:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4896
		{
			sqlVAL.union.val = &tree.Scrub{
				Typ:     tree.ScrubTable,
				Table:   sqlDollar[4].union.unresolvedObjectName(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: sqlDollar[6].union.scrubOptions(),
			}
		}
	case 712:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4904
		{
			return helpWith(sqllex, "SCRUB TABLE")
		}
	case 713:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4908
		{
			sqlVAL.union.val = sqlDollar[3].union.scrubOptions()
		}
	case 714:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4912
		{
			sqlVAL.union.val = tree.ScrubOptions{}
		}
	case 715:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4918
		{
			sqlVAL.union.val = tree.ScrubOptions{sqlDollar[1].union.scrubOption()}
		}
	case 716:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4922
		{
			sqlVAL.union.val = append(sqlDollar[1].union.scrubOptions(), sqlDollar[3].union.scrubOption())
		}
	case 717:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4928
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{}
		}
	case 718:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4932
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{IndexNames: sqlDollar[3].union.nameList()}
		}
	case 719:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4936
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{}
		}
	case 720:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4940
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{ConstraintNames: sqlDollar[3].union.nameList()}
		}
	case 721:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4944
		{
			sqlVAL.union.val = &tree.ScrubOptionPhysical{}
		}
	case 722:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4955
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: sqlDollar[6].union.expr()}
		}
	case 723:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4958
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 724:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4968
		{
			csettingStmt := sqlDollar[4].union.stmt().(*tree.SetClusterSetting)
			sqlVAL.union.val = &tree.AlterTenantSetClusterSetting{
				SetClusterSetting: *csettingStmt,
				TenantID:          sqlDollar[3].union.expr(),
			}
		}
	case 725:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4976
		{
			csettingStmt := sqlDollar[4].union.stmt().(*tree.SetClusterSetting)
			sqlVAL.union.val = &tree.AlterTenantSetClusterSetting{
				SetClusterSetting: *csettingStmt,
				TenantAll:         true,
			}
		}
	case 726:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4983
		{
			return helpWith(sqllex, "ALTER TENANT")
		}
	case 727:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4984
		{
			return helpWith(sqllex, "ALTER TENANT")
		}
	case 732:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4998
		{
			sqlVAL.union.val = &tree.SetVar{Values: sqlDollar[4].union.exprs()}
		}
	case 733:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5014
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 734:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5017
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 735:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5019
		{
			sqlVAL.union.val = sqlDollar[2].union.stmt()
		}
	case 736:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5022
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 737:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5025
		{
			sqlVAL.union.val = &tree.SetSessionCharacteristics{Modes: sqlDollar[6].union.transactionModes()}
		}
	case 738:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5039
		{
			ret := sqlDollar[3].union.setVar()
			ret.Local = true
			sqlVAL.union.val = ret
		}
	case 739:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5044
		{
			return helpWith(sqllex, "SET LOCAL")
		}
	case 740:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5061
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[3].union.transactionModes()}
		}
	case 741:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5064
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 742:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5066
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[4].union.transactionModes()}
		}
	case 743:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5069
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 744:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5073
		{

			varName := sqlDollar[1].union.strs()
			if len(varName) == 1 && varName[0] == "tracing" {
				sqlVAL.union.val = &tree.SetTracing{Values: sqlDollar[3].union.exprs()}
			} else {
				sqlVAL.union.val = &tree.SetVar{Name: strings.Join(sqlDollar[1].union.strs(), "."), Values: sqlDollar[3].union.exprs()}
			}
		}
	case 746:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5092
		{

			sqlVAL.union.val = &tree.SetVar{Name: "timezone", Values: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 747:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5096
		{
			return unimplemented(sqllex, "set from current")
		}
	case 748:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5100
		{

			sqlVAL.union.val = &tree.SetVar{Name: "search_path", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 749:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5105
		{

			sqlVAL.union.val = &tree.SetVar{Name: "role", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 751:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5114
		{

			sqlVAL.union.val = &tree.SetSessionAuthorizationDefault{}
		}
	case 752:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5119
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 753:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5123
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 755:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5135
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 756:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5140
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 757:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5147
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 758:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5151
		{
			sqlVAL.union.val = append([]string{sqlDollar[1].str}, sqlDollar[2].union.strs()...)
		}
	case 759:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5157
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 760:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5161
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 762:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5168
		{
			sqlVAL.union.val = tree.Expr(&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}})
		}
	case 765:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5189
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 766:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5193
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 767:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5199
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 768:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5203
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 769:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5207
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 770:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5211
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 771:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5215
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 772:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5221
		{
			sqlVAL.union.val = tree.Low
		}
	case 773:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5225
		{
			sqlVAL.union.val = tree.Normal
		}
	case 774:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5229
		{
			sqlVAL.union.val = tree.High
		}
	case 775:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5240
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 776:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5244
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 777:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5248
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 779:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5253
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 780:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5257
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 782:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5272
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 784:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5273
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 786:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5274
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 788:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5275
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 790:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5276
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 792:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5277
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 794:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5278
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 796:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5279
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 798:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5280
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 801:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5282
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 803:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5283
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 805:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5284
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 807:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5285
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 809:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5286
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 812:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5288
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 814:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5289
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 816:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5290
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 819:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5292
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 822:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5294
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 824:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5295
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 826:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5296
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 828:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5297
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 830:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5298
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 832:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5299
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 834:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5300
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 836:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5301
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 838:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5302
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 840:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5303
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 842:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5304
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 844:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5305
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 846:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5306
		{
			return helpWith(sqllex, "SHOW TRANSFER")
		}
	case 848:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5307
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 850:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5308
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 851:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5309
		{
			return helpWith(sqllex, "SHOW")
		}
	case 855:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5312
		{
			return helpWith(sqllex, "SHOW DEFAULT PRIVILEGES")
		}
	case 857:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5321
		{
			sqlVAL.union.val = &tree.CloseCursor{
				All: true,
			}
		}
	case 858:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5327
		{
			sqlVAL.union.val = &tree.CloseCursor{
				Name: tree.Name(sqlDollar[2].str),
			}
		}
	case 859:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5332
		{
			return helpWith(sqllex, "CLOSE")
		}
	case 860:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5342
		{
			sqlVAL.union.val = &tree.DeclareCursor{
				Binary:      sqlDollar[3].union.bool(),
				Name:        tree.Name(sqlDollar[2].str),
				Sensitivity: sqlDollar[4].union.cursorSensitivity(),
				Scroll:      sqlDollar[5].union.cursorScrollOption(),
				Hold:        sqlDollar[7].union.bool(),
				Select:      sqlDollar[9].union.slct(),
			}
		}
	case 861:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5352
		{
			return helpWith(sqllex, "DECLARE")
		}
	case 862:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5356
		{
			sqlVAL.union.val = true
		}
	case 863:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5360
		{
			sqlVAL.union.val = false
		}
	case 864:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5366
		{
			sqlVAL.union.val = tree.Insensitive
		}
	case 865:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5370
		{
			sqlVAL.union.val = tree.Asensitive
		}
	case 866:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5374
		{
			sqlVAL.union.val = tree.UnspecifiedSensitivity
		}
	case 867:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5380
		{
			sqlVAL.union.val = tree.Scroll
		}
	case 868:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5384
		{
			sqlVAL.union.val = tree.NoScroll
		}
	case 869:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5388
		{
			sqlVAL.union.val = tree.UnspecifiedScroll
		}
	case 870:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5394
		{
			sqlVAL.union.val = true
		}
	case 871:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5398
		{
			sqlVAL.union.val = false
		}
	case 872:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5402
		{
			sqlVAL.union.val = false
		}
	case 873:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5412
		{
			sqlVAL.union.val = sqlDollar[2].union.fetchCursor()
		}
	case 874:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5415
		{
			return helpWith(sqllex, "FETCH")
		}
	case 875:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5419
		{
			sqlVAL.union.val = &tree.FetchCursor{
				Name:  tree.Name(sqlDollar[1].str),
				Count: 1,
			}
		}
	case 876:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5426
		{
			sqlVAL.union.val = &tree.FetchCursor{
				Name:  tree.Name(sqlDollar[2].str),
				Count: 1,
			}
		}
	case 877:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5433
		{
			sqlVAL.union.val = &tree.FetchCursor{
				Name:  tree.Name(sqlDollar[3].str),
				Count: sqlDollar[1].union.int64(),
			}
		}
	case 878:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5440
		{
			sqlVAL.union.val = &tree.FetchCursor{
				Name:  tree.Name(sqlDollar[3].str),
				Count: sqlDollar[1].union.int64(),
			}
		}
	case 879:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5447
		{
			sqlVAL.union.val = &tree.FetchCursor{
				Name:  tree.Name(sqlDollar[4].str),
				Count: sqlDollar[2].union.int64() * sqlDollar[1].union.int64(),
			}
		}
	case 880:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5454
		{
			fetchType := tree.FetchAll
			count := sqlDollar[1].union.int64()
			if count < 0 {
				fetchType = tree.FetchBackwardAll
			}
			sqlVAL.union.val = &tree.FetchCursor{
				Name:      tree.Name(sqlDollar[4].str),
				FetchType: fetchType,
			}
		}
	case 881:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5466
		{
			sqlVAL.union.val = &tree.FetchCursor{
				Name:      tree.Name(sqlDollar[4].str),
				FetchType: tree.FetchAbsolute,
				Count:     sqlDollar[2].union.int64(),
			}
		}
	case 882:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5474
		{
			sqlVAL.union.val = &tree.FetchCursor{
				Name:      tree.Name(sqlDollar[4].str),
				FetchType: tree.FetchRelative,
				Count:     sqlDollar[2].union.int64(),
			}
		}
	case 883:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5482
		{
			sqlVAL.union.val = &tree.FetchCursor{
				Name:      tree.Name(sqlDollar[3].str),
				FetchType: tree.FetchFirst,
			}
		}
	case 884:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5489
		{
			sqlVAL.union.val = &tree.FetchCursor{
				Name:      tree.Name(sqlDollar[3].str),
				FetchType: tree.FetchLast,
			}
		}
	case 885:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5497
		{
			sqlVAL.union.val = int64(1)
		}
	case 886:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5498
		{
			sqlVAL.union.val = int64(-1)
		}
	case 887:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5501
		{
			sqlVAL.union.val = sqlDollar[1].union.int64()
		}
	case 888:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5502
		{
			sqlVAL.union.val = int64(1)
		}
	case 889:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5505
		{
			sqlVAL.union.val = int64(1)
		}
	case 890:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5506
		{
			sqlVAL.union.val = int64(-1)
		}
	case 891:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5509
		{
		}
	case 892:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5510
		{
		}
	case 893:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5513
		{
		}
	case 894:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5514
		{
		}
	case 895:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5518
		{

			return purposelyUnimplemented(sqllex, "reindex table", "CockroachDB does not require reindexing.")
		}
	case 896:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5523
		{

			return purposelyUnimplemented(sqllex, "reindex index", "CockroachDB does not require reindexing.")
		}
	case 897:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5528
		{

			return purposelyUnimplemented(sqllex, "reindex schema", "CockroachDB does not require reindexing.")
		}
	case 898:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5533
		{

			return purposelyUnimplemented(sqllex, "reindex database", "CockroachDB does not require reindexing.")
		}
	case 899:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5538
		{

			return purposelyUnimplemented(sqllex, "reindex system", "CockroachDB does not require reindexing.")
		}
	case 900:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5548
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[2].str}
		}
	case 901:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5549
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[3].str}
		}
	case 902:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5550
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 904:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5555
		{
			sqlVAL.str = sqlDollar[1].str + "." + strings.Join(sqlDollar[2].union.strs(), ".")
		}
	case 907:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5565
		{
			sqlVAL.str = "client_encoding"
		}
	case 912:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5571
		{
			sqlVAL.str = "timezone"
		}
	case 913:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5572
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 914:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5576
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 915:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5580
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 916:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5596
		{
			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 917:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5600
		{

			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[7].union.unresolvedObjectName(), UsingJSON: true}
		}
	case 918:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5604
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 919:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5615
		{

			id, err := sqlDollar[3].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ShowHistogram{HistogramID: id}
		}
	case 920:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5623
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 921:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5631
		{
			sqlVAL.union.val = &tree.ShowBackup{
				InCollection: sqlDollar[4].union.expr(),
			}
		}
	case 922:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5637
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupDefaultDetails,
				Path:    sqlDollar[3].union.expr(),
				Options: sqlDollar[4].union.kvOptions(),
			}
		}
	case 923:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5645
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:      tree.BackupDefaultDetails,
				Path:         sqlDollar[3].union.expr(),
				InCollection: sqlDollar[5].union.expr(),
				Options:      sqlDollar[6].union.kvOptions(),
			}
		}
	case 924:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5654
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:              tree.BackupDefaultDetails,
				ShouldIncludeSchemas: true,
				Path:                 sqlDollar[4].union.expr(),
				Options:              sqlDollar[5].union.kvOptions(),
			}
		}
	case 925:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5663
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupRangeDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 926:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5672
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupFileDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 927:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5680
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 928:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5690
		{
			sqlVAL.union.val = &tree.ShowClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), ".")}
		}
	case 929:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5694
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 930:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5697
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 931:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5699
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 932:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5702
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 933:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5704
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 934:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5708
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 935:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5711
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 936:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5715
		{
			sqlVAL.union.val = sqlDollar[1].union.stmt()
		}
	case 937:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5717
		{
			switch t := sqlDollar[1].union.stmt().(type) {
			case *tree.ShowClusterSetting:
				sqlVAL.union.val = &tree.ShowTenantClusterSetting{
					ShowClusterSetting: t,
					TenantID:           sqlDollar[4].union.expr(),
				}
			case *tree.ShowClusterSettingList:
				sqlVAL.union.val = &tree.ShowTenantClusterSettingList{
					ShowClusterSettingList: t,
					TenantID:               sqlDollar[4].union.expr(),
				}
			}
		}
	case 938:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5731
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 939:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5739
		{
			sqlVAL.union.val = &tree.ShowColumns{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 940:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5742
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 941:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5750
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 942:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5754
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsDB: true, Database: tree.Name(sqlDollar[5].str)}
		}
	case 943:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5758
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsIndex: true, Index: sqlDollar[5].union.tableIndexName()}
		}
	case 944:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5762
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 945:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5765
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 946:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5773
		{
			sqlVAL.union.val = &tree.ShowDatabases{WithComment: sqlDollar[3].union.bool()}
		}
	case 947:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5776
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 948:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5782
		{
			sqlVAL.union.val = &tree.ShowDefaultPrivileges{
				Roles: sqlDollar[4].union.roleSpecList(),
			}
		}
	case 949:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5787
		{
			sqlVAL.union.val = &tree.ShowDefaultPrivileges{
				ForAllRoles: true,
			}
		}
	case 950:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5792
		{
			return helpWith(sqllex, "SHOW DEFAULT PRIVILEGES")
		}
	case 951:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5799
		{
			sqlVAL.union.val = &tree.ShowEnums{}
		}
	case 952:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5803
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
			}
		}
	case 953:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5813
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
			}
		}
	case 954:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5822
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 955:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5829
		{
			sqlVAL.union.val = &tree.ShowTypes{}
		}
	case 956:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5832
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 957:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5845
		{
			lst := sqlDollar[3].union.targetListPtr()
			if lst != nil && lst.ForRoles {
				sqlVAL.union.val = &tree.ShowRoleGrants{Roles: lst.Roles, Grantees: sqlDollar[4].union.roleSpecList()}
			} else {
				sqlVAL.union.val = &tree.ShowGrants{Targets: lst, Grantees: sqlDollar[4].union.roleSpecList()}
			}
		}
	case 958:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5853
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 959:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5861
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 960:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5864
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 961:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5866
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 962:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5870
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 963:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5874
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 964:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5877
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 965:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5879
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 966:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5883
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 967:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5886
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 968:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5894
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 969:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5897
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 970:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5899
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 971:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5902
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 972:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5910
		{
			sqlVAL.union.val = &tree.ShowQueries{All: false, Cluster: sqlDollar[2].union.bool()}
		}
	case 973:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5913
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 974:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5915
		{
			sqlVAL.union.val = &tree.ShowQueries{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 975:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5918
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 976:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5922
		{
			sqlVAL.union.val = true
		}
	case 977:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5924
		{
			sqlVAL.union.val = true
		}
	case 978:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5926
		{
			sqlVAL.union.val = false
		}
	case 981:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5943
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: true}
		}
	case 982:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5947
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: false}
		}
	case 983:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5951
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{}
		}
	case 984:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5954
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 985:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5955
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 986:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5956
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 987:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5958
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[3].union.slct()}
		}
	case 988:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5962
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[5].union.slct(), Block: true}
		}
	case 989:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5966
		{
			sqlVAL.union.val = &tree.ShowJobs{Schedules: sqlDollar[3].union.slct()}
		}
	case 990:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5970
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{Jobs: sqlDollar[4].union.slct()}
		}
	case 991:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5973
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 992:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5975
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
			}
		}
	case 993:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5983
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[4].union.expr()}}},
				},
			}
		}
	case 994:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5991
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				Block: true,
			}
		}
	case 995:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5999
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 996:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6000
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 997:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6010
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ExecutorType:   sqlDollar[3].union.executorType(),
			}
		}
	case 998:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6016
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 999:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6018
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: sqlDollar[2].union.scheduleState(),
				ExecutorType:   sqlDollar[4].union.executorType(),
			}
		}
	case 1000:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6024
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 1001:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6026
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ScheduleID:     sqlDollar[3].union.expr(),
			}
		}
	case 1002:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6032
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 1003:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6036
		{
			sqlVAL.union.val = tree.ActiveSchedules
		}
	case 1004:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6040
		{
			sqlVAL.union.val = tree.PausedSchedules
		}
	case 1005:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6046
		{
			sqlVAL.union.val = tree.InvalidExecutor
		}
	case 1006:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6050
		{
			sqlVAL.union.val = tree.ScheduledBackupExecutor
		}
	case 1007:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6054
		{
			sqlVAL.union.val = tree.ScheduledSQLStatsCompactionExecutor
		}
	case 1008:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6065
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceRaw, Compact: sqlDollar[2].union.bool()}
		}
	case 1009:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6068
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 1010:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6070
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceKV, Compact: sqlDollar[2].union.bool()}
		}
	case 1011:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6073
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 1012:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6075
		{

			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceReplica, Compact: sqlDollar[2].union.bool()}
		}
	case 1013:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6079
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 1014:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6082
		{
			sqlVAL.union.val = true
		}
	case 1015:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6083
		{
			sqlVAL.union.val = false
		}
	case 1016:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6091
		{
			sqlVAL.union.val = &tree.ShowSessions{Cluster: sqlDollar[2].union.bool()}
		}
	case 1017:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6094
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 1018:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6096
		{
			sqlVAL.union.val = &tree.ShowSessions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 1019:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6099
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 1020:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6107
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
				WithComment: sqlDollar[7].union.bool()}
		}
	case 1021:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6117
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
				WithComment: sqlDollar[5].union.bool()}
		}
	case 1022:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6127
		{
			sqlVAL.union.val = &tree.ShowTables{WithComment: sqlDollar[3].union.bool()}
		}
	case 1023:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6130
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 1024:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6137
		{
			sqlVAL.union.val = &tree.ShowTransactions{Cluster: sqlDollar[2].union.bool()}
		}
	case 1025:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6140
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 1026:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6142
		{
			sqlVAL.union.val = &tree.ShowTransactions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 1027:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6145
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 1028:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6148
		{
			sqlVAL.union.val = true
		}
	case 1029:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6149
		{
			sqlVAL.union.val = false
		}
	case 1030:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6156
		{
			sqlVAL.union.val = &tree.ShowSchemas{Database: tree.Name(sqlDollar[4].str)}
		}
	case 1031:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6160
		{
			sqlVAL.union.val = &tree.ShowSchemas{}
		}
	case 1032:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6163
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 1033:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6170
		{
			sqlVAL.union.val = &tree.ShowSequences{Database: tree.Name(sqlDollar[4].str)}
		}
	case 1034:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6174
		{
			sqlVAL.union.val = &tree.ShowSequences{}
		}
	case 1035:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6177
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 1036:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6184
		{

			sqlVAL.union.val = &tree.ShowSyntax{Statement: sqlDollar[3].str}
		}
	case 1037:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6188
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 1038:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6192
		{

			sqlVAL.union.val = &tree.ShowCompletions{
				Statement: tree.NewStrVal(sqlDollar[7].str),
				Offset:    sqlDollar[5].union.numVal(),
			}
		}
	case 1039:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6202
		{

			sqlVAL.union.val = &tree.ShowLastQueryStatistics{Columns: sqlDollar[5].union.nameList()}
		}
	case 1040:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6209
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1041:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6213
		{

			sqlVAL.union.val = tree.ShowLastQueryStatisticsDefaultColumns
		}
	case 1042:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6224
		{
			sqlVAL.union.val = &tree.ShowSavepointStatus{}
		}
	case 1043:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6227
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 1044:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6235
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_isolation"}
		}
	case 1045:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6240
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_priority"}
		}
	case 1046:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6245
		{

			sqlVAL.union.val = &tree.ShowTransactionStatus{}
		}
	case 1047:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6249
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 1048:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6256
		{
			sqlVAL.union.val = &tree.ShowTransferState{TransferKey: tree.NewStrVal(sqlDollar[5].str)}
		}
	case 1049:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6260
		{
			sqlVAL.union.val = &tree.ShowTransferState{}
		}
	case 1050:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6263
		{
			return helpWith(sqllex, "SHOW TRANSFER")
		}
	case 1051:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6275
		{
			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[3].union.unresolvedObjectName()}
		}
	case 1052:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6279
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeTable, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 1053:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6284
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeView, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 1054:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6289
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeSequence, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 1055:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6294
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeDatabase, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 1056:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6299
		{
			sqlVAL.union.val = &tree.ShowCreateAllSchemas{}
		}
	case 1057:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6303
		{
			sqlVAL.union.val = &tree.ShowCreateAllTables{}
		}
	case 1058:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6307
		{
			sqlVAL.union.val = &tree.ShowCreateAllTypes{}
		}
	case 1059:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6310
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 1060:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6320
		{
			sqlVAL.union.val = &tree.ShowCreateSchedules{}
		}
	case 1061:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6323
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 1062:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6325
		{
			sqlVAL.union.val = &tree.ShowCreateSchedules{ScheduleID: sqlDollar[4].union.expr()}
		}
	case 1063:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6328
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 1064:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6336
		{
			sqlVAL.union.val = &tree.ShowUsers{}
		}
	case 1065:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6339
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 1066:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6347
		{
			sqlVAL.union.val = &tree.ShowRoles{}
		}
	case 1067:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6350
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 1068:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6360
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[6].str)}}
		}
	case 1069:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6364
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{Database: tree.Name(sqlDollar[6].str)}}
		}
	case 1070:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6368
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 1071:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:6376
		{
			name := sqlDollar[9].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 1072:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6384
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 1073:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:6391
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[9].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 1074:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6397
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 1075:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6399
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 1076:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6402
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 1077:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6404
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 1078:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6407
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 1080:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6411
		{
		}
	case 1081:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6420
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: tree.TableIndexName{Table: name},
			}
		}
	case 1082:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6428
		{
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: sqlDollar[5].union.tableIndexName(),
			}
		}
	case 1083:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6434
		{
			return helpWith(sqllex, "SHOW RANGE")
		}
	case 1084:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6443
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 1085:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6448
		{
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: sqlDollar[5].union.tableIndexName()}
		}
	case 1086:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6452
		{
			sqlVAL.union.val = &tree.ShowRanges{DatabaseName: tree.Name(sqlDollar[5].str)}
		}
	case 1087:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6455
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 1088:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6464
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{}
		}
	case 1089:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6468
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{
				DatabaseName: tree.Name(sqlDollar[6].str),
			}
		}
	case 1090:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6484
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromCluster,
			}
		}
	case 1091:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6490
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
			}
		}
	case 1092:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6496
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromAllDatabases,
			}
		}
	case 1093:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6502
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
				DatabaseName:    tree.Name(sqlDollar[5].str),
			}
		}
	case 1094:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6509
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDefault,
			}
		}
	case 1095:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6514
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 1096:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6518
		{
			sqlVAL.union.val = &tree.ShowVar{Name: "locality"}
		}
	case 1097:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6524
		{

			sqlVAL.union.val = &tree.ShowFingerprints{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 1098:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6531
		{
			sqlVAL.union.val = &tree.ShowFullTableScans{}
		}
	case 1099:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6537
		{
			tmp := sqlDollar[2].union.targetList()
			sqlVAL.union.val = &tmp
		}
	case 1100:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6542
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 1101:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6662
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 1102:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6666
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 1103:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6670
		{

			sqlVAL.union.val = tree.TargetList{
				Tables:   tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}},
				ForRoles: sqlDollar[1].str == "role",
			}
		}
	case 1104:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6709
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{sqlDollar[1].union.unresolvedName()}}
		}
	case 1105:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6713
		{
			remainderPats := sqlDollar[3].union.tablePatterns()
			sqlVAL.union.val = tree.TargetList{Tables: append(tree.TablePatterns{sqlDollar[1].union.unresolvedName()}, remainderPats...)}
		}
	case 1106:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6718
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 1107:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6724
		{
			tenID := uint64(sqlDollar[2].union.int64())
			if tenID == 0 {
				return setErr(sqllex, errors.New("invalid tenant ID"))
			}
			sqlVAL.union.val = tree.TargetList{TenantID: tree.TenantID{Specified: true, TenantID: roachpb.MakeTenantID(tenID)}}
		}
	case 1108:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6732
		{

			if sqlDollar[2].str != "_" {
				return setErr(sqllex, errors.New("invalid syntax"))
			}
			sqlVAL.union.val = tree.TargetList{TenantID: tree.TenantID{Specified: true}}
		}
	case 1109:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6741
		{
			sqlVAL.union.val = tree.TargetList{Databases: sqlDollar[2].union.nameList()}
		}
	case 1110:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6750
		{
			sqlVAL.union.val = tree.TargetList{ForRoles: true, Roles: sqlDollar[2].union.roleSpecList()}
		}
	case 1111:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6754
		{
			sqlVAL.union.val = tree.TargetList{Schemas: sqlDollar[2].union.objectNamePrefixList()}
		}
	case 1112:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6758
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[2].union.unresolvedObjectNames()}
		}
	case 1114:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6765
		{
			sqlVAL.union.val = sqlDollar[2].union.roleSpecList()
		}
	case 1115:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6769
		{
			sqlVAL.union.val = tree.RoleSpecList(nil)
		}
	case 1117:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6782
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1119:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6783
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1121:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6784
		{
			return helpWith(sqllex, "PAUSE ALL JOBS")
		}
	case 1122:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6785
		{
			return helpWith(sqllex, "PAUSE")
		}
	case 1124:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6795
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1126:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6796
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1128:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6797
		{
			return helpWith(sqllex, "RESUME ALL JOBS")
		}
	case 1129:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6798
		{
			return helpWith(sqllex, "RESUME")
		}
	case 1130:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6806
		{
			sqlVAL.union.val = &tree.ControlJobsOfType{Type: sqlDollar[3].str, Command: tree.ResumeJob}
		}
	case 1131:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6809
		{
			return helpWith(sqllex, "RESUME ALL JOBS")
		}
	case 1132:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6819
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
			}
		}
	case 1133:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6828
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
				Reason:  sqlDollar[7].union.expr(),
			}
		}
	case 1134:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6837
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1135:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6839
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 1136:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6843
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob, Reason: sqlDollar[7].union.expr()}
		}
	case 1137:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6847
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 1138:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6850
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1139:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6855
		{
			sqlVAL.union.val = sqlDollar[3].union.slct()
		}
	case 1140:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6859
		{
			sqlVAL.union.val = &tree.Select{
				Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
			}
		}
	case 1141:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6874
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseSchedule,
			}
		}
	case 1142:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6882
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1143:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6884
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.PauseSchedule,
			}
		}
	case 1144:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6890
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1145:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6898
		{
			sqlVAL.union.val = &tree.ControlJobsOfType{Type: sqlDollar[3].str, Command: tree.PauseJob}
		}
	case 1146:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6901
		{
			return helpWith(sqllex, "PAUSE ALL JOBS")
		}
	case 1147:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6910
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
			}
		}
	case 1148:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6916
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
			}
		}
	case 1149:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6923
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:   sqlDollar[3].union.objectNamePrefix(),
				AuthRole: sqlDollar[5].union.roleSpec(),
			}
		}
	case 1150:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6930
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
				AuthRole:    sqlDollar[8].union.roleSpec(),
			}
		}
	case 1151:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6937
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 1152:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6948
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 1153:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6957
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaOwner{
					Owner: sqlDollar[6].union.roleSpec(),
				},
			}
		}
	case 1154:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6965
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 1155:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:7001
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      false,
				Defs:             sqlDollar[6].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[9].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[10].union.storageParams(),
				OnCommit:         sqlDollar[11].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[12].union.locality(),
			}
		}
	case 1156:
		sqlDollar = sqlS[sqlpt-15 : sqlpt+1]
//line sql-gen.y:7016
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      true,
				Defs:             sqlDollar[9].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[12].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[13].union.storageParams(),
				OnCommit:         sqlDollar[14].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[15].union.locality(),
			}
		}
	case 1157:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7033
		{
			sqlVAL.union.val = sqlDollar[1].union.locality()
		}
	case 1158:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7037
		{
			sqlVAL.union.val = (*tree.Locality)(nil)
		}
	case 1160:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7044
		{

			sqlVAL.union.val = nil
		}
	case 1161:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7050
		{
			return unimplemented(sqllex, "create table with oids")
		}
	case 1162:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7056
		{
			sqlVAL.str = ""
		}
	case 1163:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7060
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "create table inherits")
		}
	case 1164:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7066
		{
			sqlVAL.union.val = nil
		}
	case 1165:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7070
		{
			sqlVAL.union.val = sqlDollar[3].union.storageParams()
		}
	case 1166:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7075
		{
			sqlVAL.union.val = tree.CreateTableOnCommitUnset
		}
	case 1167:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7079
		{
			sqlVAL.union.val = tree.CreateTableOnCommitPreserveRows
		}
	case 1168:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7083
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "delete rows")
		}
	case 1169:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7087
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "drop")
		}
	case 1172:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7097
		{
			sqlVAL.union.val = []tree.Name{tree.Name(sqlDollar[1].str)}
		}
	case 1173:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7101
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParamKeys(), tree.Name(sqlDollar[3].str))
		}
	case 1174:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7107
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 1175:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7113
		{
			sqlVAL.union.val = []tree.StorageParam{sqlDollar[1].union.storageParam()}
		}
	case 1176:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7117
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParams(), sqlDollar[3].union.storageParam())
		}
	case 1177:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7123
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Defs:          sqlDollar[5].union.tblDefs(),
				AsSource:      sqlDollar[8].union.slct(),
				StorageParams: sqlDollar[6].union.storageParams(),
				OnCommit:      sqlDollar[10].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 1178:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:7136
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Defs:          sqlDollar[8].union.tblDefs(),
				AsSource:      sqlDollar[11].union.slct(),
				StorageParams: sqlDollar[9].union.storageParams(),
				OnCommit:      sqlDollar[13].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 1179:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7150
		{
		}
	case 1180:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7151
		{
		}
	case 1181:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7152
		{
			return unimplemented(sqllex, "create table as with no data")
		}
	case 1182:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7170
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1183:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7171
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1184:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7172
		{
			sqlVAL.union.val = tree.PersistencePermanent
		}
	case 1186:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7176
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1187:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7177
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1188:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7178
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1189:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7179
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1190:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7180
		{
			sqlVAL.union.val = tree.PersistenceUnlogged
		}
	case 1192:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7185
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1193:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7191
		{
			sqlVAL.union.val = tree.TableDefs{sqlDollar[1].union.tblDef()}
		}
	case 1194:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7195
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1195:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7201
		{
			sqlVAL.union.val = sqlDollar[1].union.colDef()
		}
	case 1198:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7207
		{
			def := sqlDollar[1].union.constraintDef()
			valBehavior := sqlDollar[2].union.validationBehavior()
			if u, ok := def.(*tree.UniqueConstraintTableDef); ok && valBehavior == tree.ValidationSkip {
				typ := "PRIMARY KEY"
				if !u.PrimaryKey {
					typ = "UNIQUE"
				}
				return purposelyUnimplemented(sqllex, "table constraint", typ+" constraints cannot be marked NOT VALID")
			}
			sqlVAL.union.val = def
		}
	case 1199:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7220
		{
			sqlVAL.union.val = &tree.LikeTableDef{
				Name:    sqlDollar[2].union.unresolvedObjectName().ToTableName(),
				Options: sqlDollar[3].union.likeTableOptionList(),
			}
		}
	case 1200:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7229
		{
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), sqlDollar[3].union.likeTableOption())
		}
	case 1201:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7233
		{
			opt := sqlDollar[3].union.likeTableOption()
			opt.Excluded = true
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), opt)
		}
	case 1202:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7239
		{
			sqlVAL.union.val = []tree.LikeTableOption(nil)
		}
	case 1203:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7244
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding comments")
		}
	case 1204:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7245
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptConstraints}
		}
	case 1205:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7246
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptDefaults}
		}
	case 1206:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7247
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding identity")
		}
	case 1207:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7248
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptGenerated}
		}
	case 1208:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7249
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptIndexes}
		}
	case 1209:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7250
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding statistics")
		}
	case 1210:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7251
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding storage")
		}
	case 1211:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7252
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptAll}
		}
	case 1212:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7257
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1214:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7264
		{
			sqlVAL.str = ""
		}
	case 1216:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7271
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1217:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7277
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1218:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7285
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1219:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7291
		{
			sqlVAL.union.val = (*tree.PartitionByIndex)(nil)
		}
	case 1220:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7297
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1221:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7303
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				All:         true,
				PartitionBy: sqlDollar[4].union.partitionBy(),
			}
		}
	case 1223:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7313
		{
			sqlVAL.union.val = (*tree.PartitionByTable)(nil)
		}
	case 1224:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7319
		{
			sqlVAL.union.val = sqlDollar[3].union.partitionBy()
		}
	case 1225:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7325
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				List:   sqlDollar[6].union.listPartitions(),
			}
		}
	case 1226:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7332
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				Range:  sqlDollar[6].union.rangePartitions(),
			}
		}
	case 1227:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7339
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1228:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7345
		{
			sqlVAL.union.val = []tree.ListPartition{sqlDollar[1].union.listPartition()}
		}
	case 1229:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7349
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listPartitions(), sqlDollar[3].union.listPartition())
		}
	case 1230:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7355
		{
			sqlVAL.union.val = tree.ListPartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				Exprs:        sqlDollar[5].union.exprs(),
				Subpartition: sqlDollar[7].union.partitionBy(),
			}
		}
	case 1231:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7365
		{
			sqlVAL.union.val = []tree.RangePartition{sqlDollar[1].union.rangePartition()}
		}
	case 1232:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7369
		{
			sqlVAL.union.val = append(sqlDollar[1].union.rangePartitions(), sqlDollar[3].union.rangePartition())
		}
	case 1233:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7375
		{
			sqlVAL.union.val = tree.RangePartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				From:         sqlDollar[5].union.exprs(),
				To:           sqlDollar[9].union.exprs(),
				Subpartition: sqlDollar[11].union.partitionBy(),
			}
		}
	case 1234:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7389
		{
			typ := sqlDollar[2].union.typeReference()
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), typ, tree.IsReferenceSerialType(typ), sqlDollar[3].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = tableDef
		}
	case 1235:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7400
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1236:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7404
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1237:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7410
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Name: tree.Name(sqlDollar[2].str), Qualification: sqlDollar[3].union.colQualElem()}
		}
	case 1238:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7414
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1239:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7418
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: tree.ColumnCollation(sqlDollar[2].str)}
		}
	case 1240:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7422
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1241:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7426
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[3].str), Create: true}}
		}
	case 1242:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7430
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Create: true}}
		}
	case 1243:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7434
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[6].str), Create: true, IfNotExists: true}}
		}
	case 1244:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7452
		{
			sqlVAL.union.val = tree.NotNullConstraint{}
		}
	case 1245:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7456
		{
			sqlVAL.union.val = tree.NullConstraint{}
		}
	case 1246:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7460
		{
			sqlVAL.union.val = tree.HiddenConstraint{}
		}
	case 1247:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7464
		{
			sqlVAL.union.val = tree.UniqueConstraint{
				WithoutIndex: sqlDollar[2].union.bool(),
			}
		}
	case 1248:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7470
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{
				StorageParams: sqlDollar[3].union.storageParams(),
			}
		}
	case 1249:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7476
		{
			sqlVAL.union.val = tree.ShardedPrimaryKeyConstraint{
				Sharded:       true,
				ShardBuckets:  sqlDollar[5].union.expr(),
				StorageParams: sqlDollar[6].union.storageParams(),
			}
		}
	case 1250:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7484
		{
			sqlVAL.union.val = &tree.ColumnCheckConstraint{Expr: sqlDollar[3].union.expr()}
		}
	case 1251:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7488
		{
			sqlVAL.union.val = &tree.ColumnDefault{Expr: sqlDollar[2].union.expr()}
		}
	case 1252:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7492
		{
			sqlVAL.union.val = &tree.ColumnOnUpdate{Expr: sqlDollar[3].union.expr()}
		}
	case 1253:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7496
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ColumnFKConstraint{
				Table:   name,
				Col:     tree.Name(sqlDollar[3].str),
				Actions: sqlDollar[5].union.referenceActions(),
				Match:   sqlDollar[4].union.compositeKeyMatchMethod(),
			}
		}
	case 1254:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7506
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: false}
		}
	case 1255:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7510
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: true}
		}
	case 1256:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7514
		{
			sqllex.Error("use AS ( <expr> ) STORED or AS ( <expr> ) VIRTUAL")
			return 1
		}
	case 1257:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7519
		{
			sqlVAL.union.val = &tree.GeneratedAlwaysAsIdentity{
				SeqOptions: sqlDollar[4].union.seqOpts(),
			}
		}
	case 1258:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7525
		{
			sqlVAL.union.val = &tree.GeneratedByDefAsIdentity{
				SeqOptions: sqlDollar[4].union.seqOpts(),
			}
		}
	case 1259:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7531
		{
			sqlVAL.union.val = &tree.GeneratedAlwaysAsIdentity{}
		}
	case 1260:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7535
		{
			sqlVAL.union.val = &tree.GeneratedByDefAsIdentity{}
		}
	case 1261:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7541
		{

			sqlVAL.union.val = true
		}
	case 1262:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7546
		{
			sqlVAL.union.val = false
		}
	case 1263:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7551
		{
		}
	case 1265:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7555
		{
		}
	case 1266:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7558
		{
		}
	case 1267:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7562
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[2].str),
				Columns:          sqlDollar[4].union.idxElems(),
				Sharded:          sqlDollar[6].union.shardedIndexDef(),
				Storing:          sqlDollar[7].union.nameList(),
				PartitionByIndex: sqlDollar[8].union.partitionByIndex(),
				StorageParams:    sqlDollar[9].union.storageParams(),
				Predicate:        sqlDollar[10].union.expr(),
			}
		}
	case 1268:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7574
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Name:             tree.Name(sqlDollar[3].str),
					Columns:          sqlDollar[5].union.idxElems(),
					Sharded:          sqlDollar[7].union.shardedIndexDef(),
					Storing:          sqlDollar[8].union.nameList(),
					PartitionByIndex: sqlDollar[9].union.partitionByIndex(),
					StorageParams:    sqlDollar[10].union.storageParams(),
					Predicate:        sqlDollar[11].union.expr(),
				},
			}
		}
	case 1269:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7588
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[3].str),
				Columns:          sqlDollar[5].union.idxElems(),
				Inverted:         true,
				PartitionByIndex: sqlDollar[7].union.partitionByIndex(),
				StorageParams:    sqlDollar[8].union.storageParams(),
				Predicate:        sqlDollar[9].union.expr(),
			}
		}
	case 1270:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7601
		{
			sqlVAL.union.val = &tree.FamilyTableDef{
				Name:    tree.Name(sqlDollar[2].str),
				Columns: sqlDollar[4].union.nameList(),
			}
		}
	case 1271:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7613
		{
			sqlVAL.union.val = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val.(tree.ConstraintTableDef).SetName(tree.Name(sqlDollar[2].str))
		}
	case 1272:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7618
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1273:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7624
		{
			sqlVAL.union.val = &tree.CheckConstraintTableDef{
				Expr: sqlDollar[3].union.expr(),
			}
		}
	case 1274:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7631
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				WithoutIndex: sqlDollar[2].union.bool(),
				IndexTableDef: tree.IndexTableDef{
					Columns:          sqlDollar[4].union.idxElems(),
					Storing:          sqlDollar[6].union.nameList(),
					PartitionByIndex: sqlDollar[7].union.partitionByIndex(),
					Predicate:        sqlDollar[9].union.expr(),
				},
			}
		}
	case 1275:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7643
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:       sqlDollar[4].union.idxElems(),
					Sharded:       sqlDollar[6].union.shardedIndexDef(),
					StorageParams: sqlDollar[7].union.storageParams(),
				},
				PrimaryKey: true,
			}
		}
	case 1276:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7655
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ForeignKeyConstraintTableDef{
				Table:    name,
				FromCols: sqlDollar[4].union.nameList(),
				ToCols:   sqlDollar[8].union.nameList(),
				Match:    sqlDollar[9].union.compositeKeyMatchMethod(),
				Actions:  sqlDollar[10].union.referenceActions(),
			}
		}
	case 1277:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7666
		{
			return unimplementedWithIssueDetail(sqllex, 46657, "add constraint exclude using")
		}
	case 1278:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7673
		{
			sqlVAL.union.val = sqlDollar[2].union.val
		}
	case 1279:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7677
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1280:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7683
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), nil, false, sqlDollar[2].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef
			sqlVAL.union.val = tree.TableDefs{colToTableDef}
		}
	case 1281:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7693
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[3].str), nil, false, sqlDollar[4].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef

			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), colToTableDef)
		}
	case 1282:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7704
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1283:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7708
		{
			var constraintToTableDef tree.TableDef = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), constraintToTableDef)
		}
	case 1284:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7715
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1285:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7721
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:       sqlDollar[4].union.idxElems(),
					StorageParams: sqlDollar[6].union.storageParams(),
				},
				PrimaryKey: true,
			}
		}
	case 1286:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7733
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1287:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7737
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1288:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7743
		{
			sqlVAL.union.val = tree.IndexElem{Column: tree.Name(sqlDollar[1].str)}
		}
	case 1289:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7749
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1290:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7753
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1291:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7759
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1292:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7763
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1293:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7769
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{
				StorageParams: sqlDollar[3].union.storageParams(),
			}
		}
	case 1294:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7776
		{
		}
	case 1295:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7777
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "deferrable")
		}
	case 1296:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7778
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially deferred")
		}
	case 1297:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7779
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially immediate")
		}
	case 1298:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7780
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially deferred")
		}
	case 1299:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7781
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially immediate")
		}
	case 1303:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7799
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1304:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7803
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1305:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7809
		{
			sqlVAL.union.val = &tree.ShardedIndexDef{
				ShardBuckets: sqlDollar[3].union.expr(),
			}
		}
	case 1306:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7815
		{
			sqlVAL.union.val = (*tree.ShardedIndexDef)(nil)
		}
	case 1307:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7821
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 1308:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7825
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 1309:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7831
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1310:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7835
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1311:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7855
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1312:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7859
		{
			sqlVAL.union.val = tree.MatchFull
		}
	case 1313:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7863
		{
			return unimplementedWithIssueDetail(sqllex, 20305, "match partial")
		}
	case 1314:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7867
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1315:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7876
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction()}
		}
	case 1316:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7880
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction()}
		}
	case 1317:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7884
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction(), Delete: sqlDollar[2].union.referenceAction()}
		}
	case 1318:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7888
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction(), Update: sqlDollar[2].union.referenceAction()}
		}
	case 1319:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7892
		{
			sqlVAL.union.val = tree.ReferenceActions{}
		}
	case 1320:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7898
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1321:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7904
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1322:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7912
		{
			sqlVAL.union.val = tree.NoAction
		}
	case 1323:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7916
		{
			sqlVAL.union.val = tree.Restrict
		}
	case 1324:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7920
		{
			sqlVAL.union.val = tree.Cascade
		}
	case 1325:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7924
		{
			sqlVAL.union.val = tree.SetNull
		}
	case 1326:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7928
		{
			sqlVAL.union.val = tree.SetDefault
		}
	case 1327:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7948
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name:        name,
				Persistence: sqlDollar[2].union.persistence(),
				Options:     sqlDollar[5].union.seqOpts(),
			}
		}
	case 1328:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7957
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name: name, Options: sqlDollar[8].union.seqOpts(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
			}
		}
	case 1329:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7965
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 1331:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7969
		{
			sqlVAL.union.val = []tree.SequenceOption(nil)
		}
	case 1332:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7972
		{
			sqlVAL.union.val = []tree.SequenceOption{sqlDollar[1].union.seqOpt()}
		}
	case 1333:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7973
		{
			sqlVAL.union.val = append(sqlDollar[1].union.seqOpts(), sqlDollar[2].union.seqOpt())
		}
	case 1334:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7976
		{

			parsedType := sqlDollar[2].union.colType()
			if parsedType.Family() != types.IntFamily {
				sqllex.Error(fmt.Sprintf("invalid integer type: %s", parsedType.SQLString()))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptAs, AsIntegerType: parsedType}
		}
	case 1335:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7985
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCycle}
		}
	case 1336:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7987
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptNoCycle}
		}
	case 1337:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7988
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: nil}
		}
	case 1338:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7989
		{
			varName, err := sqlDollar[3].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[3].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: columnItem}
		}
	case 1339:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7999
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCache, IntVal: &x}
		}
	case 1340:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8001
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x}
		}
	case 1341:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8003
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x, OptionalWord: true}
		}
	case 1342:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8005
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue, IntVal: &x}
		}
	case 1343:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8007
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue}
		}
	case 1344:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8008
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue, IntVal: &x}
		}
	case 1345:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8010
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue}
		}
	case 1346:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8011
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x}
		}
	case 1347:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8013
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x, OptionalWord: true}
		}
	case 1348:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8015
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptVirtual}
		}
	case 1349:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8023
		{
			sqlVAL.union.val = &tree.Truncate{Tables: sqlDollar[3].union.tableNames(), DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 1350:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8026
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 1351:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8030
		{

			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[2].str), Value: sqlDollar[3].union.expr()}
		}
	case 1352:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8036
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[2].union.expr()}
		}
	case 1353:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8040
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: tree.DNull}
		}
	case 1354:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8050
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[3].union.roleSpec(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1355:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8054
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[6].union.roleSpec(), IfNotExists: true, KVOptions: sqlDollar[7].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1356:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8057
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 1357:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8068
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[3].union.roleSpec(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1358:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8072
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[5].union.roleSpec(), IfExists: true, KVOptions: sqlDollar[6].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1359:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8076
		{
			sqlVAL.union.val = &tree.AlterRoleSet{RoleName: sqlDollar[3].union.roleSpec(), DatabaseName: tree.Name(sqlDollar[4].str), IsRole: sqlDollar[2].union.bool(), SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1360:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8080
		{
			sqlVAL.union.val = &tree.AlterRoleSet{RoleName: sqlDollar[5].union.roleSpec(), IfExists: true, DatabaseName: tree.Name(sqlDollar[6].str), IsRole: sqlDollar[2].union.bool(), SetOrReset: sqlDollar[7].union.setVar()}
		}
	case 1361:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8084
		{
			sqlVAL.union.val = &tree.AlterRoleSet{AllRoles: true, DatabaseName: tree.Name(sqlDollar[4].str), IsRole: true, SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1362:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8088
		{
			sqlVAL.union.val = &tree.AlterRoleSet{AllRoles: true, DatabaseName: tree.Name(sqlDollar[4].str), IsRole: false, SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1363:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8091
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 1364:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8095
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1365:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8099
		{
			sqlVAL.str = ""
		}
	case 1366:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8105
		{
			sqlVAL.union.val = sqlDollar[2].union.setVar()
		}
	case 1367:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8109
		{
			sqlVAL.union.val = &tree.SetVar{ResetAll: true}
		}
	case 1368:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8113
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 1369:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8121
		{
			sqlVAL.union.val = true
		}
	case 1370:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8125
		{

			sqlVAL.union.val = true
		}
	case 1371:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8130
		{
			sqlVAL.union.val = false
		}
	case 1372:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8140
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[6].union.nameList(),
				AsSource:    sqlDollar[8].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: false,
				Replace:     false,
			}
		}
	case 1373:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:8154
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[8].union.nameList(),
				AsSource:    sqlDollar[10].union.slct(),
				Persistence: sqlDollar[4].union.persistence(),
				IfNotExists: false,
				Replace:     true,
			}
		}
	case 1374:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:8166
		{
			name := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[9].union.nameList(),
				AsSource:    sqlDollar[11].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
				Replace:     false,
			}
		}
	case 1375:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8178
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[5].union.nameList(),
				AsSource:     sqlDollar[7].union.slct(),
				Materialized: true,
			}
		}
	case 1376:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:8188
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[8].union.nameList(),
				AsSource:     sqlDollar[10].union.slct(),
				Materialized: true,
				IfNotExists:  true,
			}
		}
	case 1377:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8198
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 1378:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8202
		{
			return unimplementedWithIssue(sqllex, 74083)
		}
	case 1379:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8206
		{
			sqlVAL.union.val = true
		}
	case 1380:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8210
		{
			sqlVAL.union.val = true
		}
	case 1381:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8216
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1382:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8220
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1383:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8224
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1384:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8228
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1385:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8232
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1386:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8236
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1387:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8240
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1388:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8244
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1389:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8248
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1390:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8252
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1391:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8256
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1392:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8260
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1393:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8264
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1394:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8268
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1395:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8272
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1396:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8276
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1397:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8280
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1398:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8284
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1399:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8288
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1400:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8292
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1401:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8296
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1402:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8300
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1403:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8304
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1404:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8308
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1407:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8316
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 1408:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8320
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[2].union.kvOption())
		}
	case 1409:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8326
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 1410:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8330
		{
			sqlVAL.union.val = nil
		}
	case 1411:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8336
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name("valid until"), Value: sqlDollar[3].union.expr()}
		}
	case 1412:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8340
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name("valid until"), Value: tree.DNull}
		}
	case 1413:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8345
		{
		}
	case 1414:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8346
		{
			return unimplemented(sqllex, "create recursive view")
		}
	case 1415:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8355
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:   sqlDollar[3].union.unresolvedObjectName(),
				Variety:    tree.Enum,
				EnumLabels: sqlDollar[7].union.enumValueList(),
			}
		}
	case 1416:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:8363
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:    sqlDollar[6].union.unresolvedObjectName(),
				Variety:     tree.Enum,
				EnumLabels:  sqlDollar[10].union.enumValueList(),
				IfNotExists: true,
			}
		}
	case 1417:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8371
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 1418:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8373
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1419:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8375
		{
			return unimplementedWithIssue(sqllex, 27791)
		}
	case 1420:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8377
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "base")
		}
	case 1421:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8379
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "shell")
		}
	case 1422:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8381
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "create")
		}
	case 1423:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8385
		{
			sqlVAL.union.val = sqlDollar[1].union.enumValueList()
		}
	case 1424:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8389
		{
			sqlVAL.union.val = tree.EnumValueList(nil)
		}
	case 1425:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8395
		{
			sqlVAL.union.val = tree.EnumValueList{tree.EnumValue(sqlDollar[1].str)}
		}
	case 1426:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8399
		{
			sqlVAL.union.val = append(sqlDollar[1].union.enumValueList(), tree.EnumValue(sqlDollar[3].str))
		}
	case 1427:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:8416
		{
			table := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[5].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Columns:          sqlDollar[10].union.idxElems(),
				Sharded:          sqlDollar[12].union.shardedIndexDef(),
				Storing:          sqlDollar[13].union.nameList(),
				PartitionByIndex: sqlDollar[14].union.partitionByIndex(),
				StorageParams:    sqlDollar[15].union.storageParams(),
				Predicate:        sqlDollar[16].union.expr(),
				Inverted:         sqlDollar[8].union.bool(),
				Concurrently:     sqlDollar[4].union.bool(),
			}
		}
	case 1428:
		sqlDollar = sqlS[sqlpt-19 : sqlpt+1]
//line sql-gen.y:8433
		{
			table := sqlDollar[10].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[8].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Sharded:          sqlDollar[15].union.shardedIndexDef(),
				Storing:          sqlDollar[16].union.nameList(),
				PartitionByIndex: sqlDollar[17].union.partitionByIndex(),
				Inverted:         sqlDollar[11].union.bool(),
				StorageParams:    sqlDollar[18].union.storageParams(),
				Predicate:        sqlDollar[19].union.expr(),
				Concurrently:     sqlDollar[4].union.bool(),
			}
		}
	case 1429:
		sqlDollar = sqlS[sqlpt-15 : sqlpt+1]
//line sql-gen.y:8451
		{
			table := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[6].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				Columns:          sqlDollar[10].union.idxElems(),
				Storing:          sqlDollar[12].union.nameList(),
				PartitionByIndex: sqlDollar[13].union.partitionByIndex(),
				StorageParams:    sqlDollar[14].union.storageParams(),
				Predicate:        sqlDollar[15].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
			}
		}
	case 1430:
		sqlDollar = sqlS[sqlpt-18 : sqlpt+1]
//line sql-gen.y:8467
		{
			table := sqlDollar[11].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[9].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Storing:          sqlDollar[15].union.nameList(),
				PartitionByIndex: sqlDollar[16].union.partitionByIndex(),
				StorageParams:    sqlDollar[17].union.storageParams(),
				Predicate:        sqlDollar[18].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
			}
		}
	case 1431:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8483
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 1432:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8487
		{

			switch sqlDollar[2].str {
			case "gin", "gist":
				sqlVAL.union.val = true
			case "btree":
				sqlVAL.union.val = false
			case "hash", "spgist", "brin":
				return unimplemented(sqllex, "index using "+sqlDollar[2].str)
			default:
				sqllex.Error("unrecognized access method: " + sqlDollar[2].str)
				return 1
			}
		}
	case 1433:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8502
		{
			sqlVAL.union.val = false
		}
	case 1434:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8508
		{
			sqlVAL.union.val = true
		}
	case 1435:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8512
		{
			sqlVAL.union.val = false
		}
	case 1436:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8518
		{
			sqlVAL.union.val = true
		}
	case 1437:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8522
		{
			sqlVAL.union.val = false
		}
	case 1438:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8528
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1439:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8532
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1440:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8541
		{
			e := sqlDollar[2].union.idxElem()
			e.Expr = sqlDollar[1].union.expr()
			sqlVAL.union.val = e
		}
	case 1441:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8547
		{
			e := sqlDollar[4].union.idxElem()
			e.Expr = sqlDollar[2].union.expr()
			sqlVAL.union.val = e
		}
	case 1442:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8553
		{
			e := sqlDollar[2].union.idxElem()
			e.Column = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = e
		}
	case 1443:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8561
		{

			opClass := sqlDollar[1].str
			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()
			if opClass != "" {
				if opClass == "gin_trgm_ops" || opClass == "gist_trgm_ops" {
					return unimplementedWithIssueDetail(sqllex, 41285, "index using "+opClass)
				}
				return unimplementedWithIssue(sqllex, 47420)
			}

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = tree.IndexElem{Direction: dir, NullsOrder: nullsOrder}
		}
	case 1444:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8585
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1445:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8586
		{
			sqlVAL.str = ""
		}
	case 1446:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8589
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1447:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8590
		{
			sqlVAL.str = ""
		}
	case 1448:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8594
		{
			sqlVAL.union.val = tree.Ascending
		}
	case 1449:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8598
		{
			sqlVAL.union.val = tree.Descending
		}
	case 1450:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8602
		{
			sqlVAL.union.val = tree.DefaultDirection
		}
	case 1451:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8608
		{
			sqlVAL.union.val = &tree.ReparentDatabase{Name: tree.Name(sqlDollar[3].str), Parent: tree.Name(sqlDollar[9].str)}
		}
	case 1452:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8614
		{
			sqlVAL.union.val = &tree.RenameDatabase{Name: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[6].str)}
		}
	case 1453:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8620
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: false}
		}
	case 1454:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8626
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: false}
		}
	case 1455:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8634
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false,
			}
		}
	case 1456:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8640
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true,
			}
		}
	case 1457:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8648
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Locality: sqlDollar[5].union.locality(),
				IfExists: false,
			}
		}
	case 1458:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8656
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Locality: sqlDollar[7].union.locality(),
				IfExists: true,
			}
		}
	case 1459:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8666
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelGlobal,
			}
		}
	case 1460:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8672
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[6].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1461:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8679
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1462:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8685
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1463:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8691
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[4].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1464:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8698
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1465:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8704
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1466:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8710
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelRow,
			}
		}
	case 1467:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8716
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel:       tree.LocalityLevelRow,
				RegionalByRowColumn: tree.Name(sqlDollar[6].str),
			}
		}
	case 1468:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8725
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.roleSpec(),
				IfExists: false,
			}
		}
	case 1469:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8733
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.roleSpec(),
				IfExists: true,
			}
		}
	case 1470:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8743
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsView: true,
			}
		}
	case 1471:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8749
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[7].str),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1472:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8759
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsView: true,
			}
		}
	case 1473:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8765
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[9].str),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1474:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8777
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.roleSpec(),
				IfExists: false,
				IsView:   true,
			}
		}
	case 1475:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8786
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Owner:          sqlDollar[7].union.roleSpec(),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1476:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8796
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.roleSpec(),
				IfExists: true,
				IsView:   true,
			}
		}
	case 1477:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8805
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Owner:          sqlDollar[9].union.roleSpec(),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1478:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8817
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsSequence: true,
			}
		}
	case 1479:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8823
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsSequence: true,
			}
		}
	case 1480:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8831
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[3].union.unresolvedObjectName(),
				Owner:      sqlDollar[6].union.roleSpec(),
				IfExists:   false,
				IsSequence: true,
			}
		}
	case 1481:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8840
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[5].union.unresolvedObjectName(),
				Owner:      sqlDollar[8].union.roleSpec(),
				IfExists:   true,
				IsSequence: true,
			}
		}
	case 1482:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8851
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: true}
		}
	case 1483:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8857
		{
			name := sqlDollar[4].union.unresolvedObjectName()
			newName := sqlDollar[7].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1484:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8869
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: true}
		}
	case 1485:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8875
		{
			name := sqlDollar[6].union.unresolvedObjectName()
			newName := sqlDollar[9].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1486:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8889
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsSequence: true}
		}
	case 1487:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8895
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsSequence: true}
		}
	case 1488:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8903
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[3].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[6].str), IfExists: false}
		}
	case 1489:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8907
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[5].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[8].str), IfExists: true}
		}
	case 1490:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8919
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				Roles:   sqlDollar[4].union.roleSpecList(),
				Schemas: sqlDollar[5].union.objectNamePrefixList(),
				Grant:   sqlDollar[6].union.abbreviatedGrant(),
				IsGrant: true,
			}
		}
	case 1491:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8928
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				Roles:   sqlDollar[4].union.roleSpecList(),
				Schemas: sqlDollar[5].union.objectNamePrefixList(),
				Revoke:  sqlDollar[6].union.abbreviatedRevoke(),
				IsGrant: false,
			}
		}
	case 1492:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8937
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				ForAllRoles: true,
				Schemas:     sqlDollar[7].union.objectNamePrefixList(),
				Grant:       sqlDollar[8].union.abbreviatedGrant(),
				IsGrant:     true,
			}
		}
	case 1493:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8946
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				ForAllRoles: true,
				Schemas:     sqlDollar[7].union.objectNamePrefixList(),
				Revoke:      sqlDollar[8].union.abbreviatedRevoke(),
				IsGrant:     false,
			}
		}
	case 1494:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8954
		{
			return helpWith(sqllex, "ALTER DEFAULT PRIVILEGES")
		}
	case 1495:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8958
		{
			sqlVAL.union.val = tree.AbbreviatedGrant{
				Privileges:      sqlDollar[2].union.privilegeList(),
				Target:          sqlDollar[4].union.alterDefaultPrivilegesTargetObject(),
				Grantees:        sqlDollar[6].union.roleSpecList(),
				WithGrantOption: sqlDollar[7].union.bool(),
			}
		}
	case 1496:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8969
		{
			sqlVAL.union.val = true
		}
	case 1497:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8973
		{
			sqlVAL.union.val = false
		}
	case 1498:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8979
		{
			sqlVAL.union.val = tree.AbbreviatedRevoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Target:     sqlDollar[4].union.alterDefaultPrivilegesTargetObject(),
				Grantees:   sqlDollar[6].union.roleSpecList(),
			}
		}
	case 1499:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:8987
		{
			sqlVAL.union.val = tree.AbbreviatedRevoke{
				Privileges:     sqlDollar[5].union.privilegeList(),
				Target:         sqlDollar[7].union.alterDefaultPrivilegesTargetObject(),
				Grantees:       sqlDollar[9].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 1500:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8998
		{
			sqlVAL.union.val = tree.Tables
		}
	case 1501:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9002
		{
			sqlVAL.union.val = tree.Sequences
		}
	case 1502:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9006
		{
			sqlVAL.union.val = tree.Types
		}
	case 1503:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9010
		{
			sqlVAL.union.val = tree.Schemas
		}
	case 1504:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9014
		{
			return unimplemented(sqllex, "ALTER DEFAULT PRIVILEGES ... ON FUNCTIONS ...")
		}
	case 1505:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9018
		{
			return unimplemented(sqllex, "ALTER DEFAULT PRIVILEGES ... ON FUNCTIONS ...")
		}
	case 1506:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9024
		{
			sqlVAL.union.val = sqlDollar[3].union.roleSpecList()
		}
	case 1507:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9027
		{
			sqlVAL.union.val = tree.RoleSpecList(nil)
		}
	case 1508:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9033
		{
			sqlVAL.union.val = sqlDollar[3].union.objectNamePrefixList()
		}
	case 1509:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9037
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{}
		}
	case 1510:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9042
		{
		}
	case 1511:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9043
		{
		}
	case 1512:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9046
		{
		}
	case 1513:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9047
		{
		}
	case 1514:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9055
		{
			sqlVAL.union.val = &tree.ReleaseSavepoint{Savepoint: tree.Name(sqlDollar[2].str)}
		}
	case 1515:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9058
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 1516:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9068
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeJob,
			}
		}
	case 1517:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9076
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1518:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9078
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1519:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9082
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1520:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9085
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1521:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9098
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeSchedule,
			}
		}
	case 1522:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9106
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1523:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9108
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.ResumeSchedule,
			}
		}
	case 1524:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9114
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1525:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9127
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.DropSchedule,
			}
		}
	case 1526:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9135
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1527:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9137
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.DropSchedule,
			}
		}
	case 1528:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9143
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1529:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9151
		{
			sqlVAL.union.val = &tree.Savepoint{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1530:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9154
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 1532:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9158
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1534:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9159
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1536:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9160
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1538:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9176
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1539:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9179
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1540:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9181
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1541:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9184
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1542:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9194
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1543:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9197
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1544:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9199
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1545:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9202
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1546:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9206
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1547:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9211
		{
		}
	case 1548:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9212
		{
		}
	case 1549:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9213
		{
		}
	case 1550:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9223
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1551:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9227
		{
			sqlVAL.union.val = &tree.RollbackToSavepoint{Savepoint: tree.Name(sqlDollar[4].str)}
		}
	case 1552:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9230
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1553:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9233
		{
		}
	case 1554:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9234
		{
		}
	case 1555:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9238
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1556:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9242
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1557:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9248
		{
			sqlVAL.union.val = &tree.BeginTransaction{Modes: sqlDollar[1].union.transactionModes()}
		}
	case 1558:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9252
		{
			sqlVAL.union.val = &tree.BeginTransaction{}
		}
	case 1559:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9258
		{
			sqlVAL.union.val = sqlDollar[1].union.transactionModes()
		}
	case 1560:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9262
		{
			a := sqlDollar[1].union.transactionModes()
			b := sqlDollar[3].union.transactionModes()
			err := a.Merge(b)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1561:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9275
		{
		}
	case 1562:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9277
		{
		}
	case 1563:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9281
		{

			sqlVAL.union.val = tree.TransactionModes{Isolation: sqlDollar[1].union.isoLevel()}
		}
	case 1564:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9286
		{
			sqlVAL.union.val = tree.TransactionModes{UserPriority: sqlDollar[1].union.userPriority()}
		}
	case 1565:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9290
		{
			sqlVAL.union.val = tree.TransactionModes{ReadWriteMode: sqlDollar[1].union.readWriteMode()}
		}
	case 1566:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9294
		{
			sqlVAL.union.val = tree.TransactionModes{AsOf: sqlDollar[1].union.asOfClause()}
		}
	case 1567:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9298
		{
			sqlVAL.union.val = tree.TransactionModes{Deferrable: sqlDollar[1].union.deferrableMode()}
		}
	case 1568:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9304
		{
			sqlVAL.union.val = sqlDollar[2].union.userPriority()
		}
	case 1569:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9310
		{
			sqlVAL.union.val = sqlDollar[3].union.isoLevel()
		}
	case 1570:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9316
		{
			sqlVAL.union.val = tree.ReadOnly
		}
	case 1571:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9320
		{
			sqlVAL.union.val = tree.ReadWrite
		}
	case 1572:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9326
		{
			sqlVAL.union.val = tree.Deferrable
		}
	case 1573:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9330
		{
			sqlVAL.union.val = tree.NotDeferrable
		}
	case 1574:
		sqlDollar = sqlS[sqlpt-14 : sqlpt+1]
//line sql-gen.y:9340
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				Name:            tree.Name(sqlDollar[3].str),
				Template:        sqlDollar[5].str,
				Encoding:        sqlDollar[6].str,
				Collate:         sqlDollar[7].str,
				CType:           sqlDollar[8].str,
				ConnectionLimit: sqlDollar[9].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[10].str),
				Regions:         sqlDollar[11].union.nameList(),
				SurvivalGoal:    sqlDollar[12].union.survivalGoal(),
				Placement:       sqlDollar[13].union.dataPlacement(),
				Owner:           sqlDollar[14].union.roleSpec(),
			}
		}
	case 1575:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:9356
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				IfNotExists:     true,
				Name:            tree.Name(sqlDollar[6].str),
				Template:        sqlDollar[8].str,
				Encoding:        sqlDollar[9].str,
				Collate:         sqlDollar[10].str,
				CType:           sqlDollar[11].str,
				ConnectionLimit: sqlDollar[12].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[13].str),
				Regions:         sqlDollar[14].union.nameList(),
				SurvivalGoal:    sqlDollar[15].union.survivalGoal(),
				Placement:       sqlDollar[16].union.dataPlacement(),
			}
		}
	case 1576:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9371
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 1578:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9376
		{
			sqlVAL.str = ""
		}
	case 1579:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9381
		{
			sqlVAL.str = sqlDollar[4].str
		}
	case 1581:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9388
		{
			sqlVAL.union.val = tree.DataPlacementUnspecified
		}
	case 1582:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9394
		{

			sqlVAL.union.val = tree.DataPlacementRestricted
		}
	case 1583:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9399
		{

			sqlVAL.union.val = tree.DataPlacementDefault
		}
	case 1584:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9406
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1585:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9410
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1586:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9416
		{

		}
	case 1588:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9423
		{
			sqlVAL.union.val = tree.SurvivalGoalRegionFailure
		}
	case 1589:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9427
		{
			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1590:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9431
		{

			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1592:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9440
		{
			sqlVAL.union.val = tree.SurvivalGoalDefault
		}
	case 1593:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9446
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1594:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9450
		{
			sqlVAL.str = ""
		}
	case 1595:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9456
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1596:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9460
		{
			sqlVAL.str = ""
		}
	case 1597:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9466
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1598:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9470
		{
			sqlVAL.str = ""
		}
	case 1599:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9476
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1600:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9480
		{
			sqlVAL.str = ""
		}
	case 1601:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9486
		{
			ret, err := sqlDollar[4].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = ret
		}
	case 1602:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9494
		{
			sqlVAL.union.val = int32(-1)
		}
	case 1603:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9500
		{
			sqlVAL.union = sqlDollar[3].union
		}
	case 1604:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9504
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.CurrentUser,
			}
		}
	case 1605:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9511
		{
		}
	case 1606:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9512
		{
		}
	case 1607:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9527
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1608:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9534
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = sqlDollar[6].union.onConflict()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[7].union.retClause()
		}
	case 1609:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9541
		{
			return helpWith(sqllex, "INSERT")
		}
	case 1610:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9552
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = &tree.OnConflict{}
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1611:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9559
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 1612:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9563
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &name
		}
	case 1613:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9572
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &name, As: tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}}
		}
	case 1614:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9577
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1615:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9583
		{
			sqlVAL.union.val = &tree.Insert{Rows: sqlDollar[1].union.slct()}
		}
	case 1616:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9587
		{
			sqlVAL.union.val = &tree.Insert{Columns: sqlDollar[2].union.nameList(), Rows: sqlDollar[4].union.slct()}
		}
	case 1617:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9591
		{
			sqlVAL.union.val = &tree.Insert{Rows: &tree.Select{}}
		}
	case 1618:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9597
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1619:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9601
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1621:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9621
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1622:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9625
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:   tree.NameList(nil),
				DoNothing: true,
			}
		}
	case 1623:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9632
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				DoNothing:        true,
			}
		}
	case 1624:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:9640
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				Exprs:            sqlDollar[10].union.updateExprs(),
				Where:            tree.NewWhere(tree.AstWhere, sqlDollar[11].union.expr()),
			}
		}
	case 1625:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9649
		{
			sqlVAL.union.val = &tree.OnConflict{
				Constraint: tree.Name(sqlDollar[5].str),
				DoNothing:  true,
			}
		}
	case 1626:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:9656
		{
			sqlVAL.union.val = &tree.OnConflict{
				Constraint: tree.Name(sqlDollar[5].str),
				Exprs:      sqlDollar[9].union.updateExprs(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[10].union.expr()),
			}
		}
	case 1627:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9666
		{
			ret := tree.ReturningExprs(sqlDollar[2].union.selExprs())
			sqlVAL.union.val = &ret
		}
	case 1628:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9671
		{
			sqlVAL.union.val = tree.ReturningNothingClause
		}
	case 1629:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9675
		{
			sqlVAL.union.val = tree.AbsentReturningClause
		}
	case 1630:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:9692
		{
			sqlVAL.union.val = &tree.Update{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[3].union.tblExpr(),
				Exprs:     sqlDollar[5].union.updateExprs(),
				From:      sqlDollar[6].union.tblExprs(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[7].union.expr()),
				OrderBy:   sqlDollar[8].union.orderBy(),
				Limit:     sqlDollar[9].union.limit(),
				Returning: sqlDollar[10].union.retClause(),
			}
		}
	case 1631:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9704
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 1632:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9707
		{
			sqlVAL.union.val = sqlDollar[2].union.tblExprs()
		}
	case 1633:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9710
		{
			sqlVAL.union.val = tree.TableExprs{}
		}
	case 1634:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9716
		{
			sqlVAL.union.val = tree.UpdateExprs{sqlDollar[1].union.updateExpr()}
		}
	case 1635:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9720
		{
			sqlVAL.union.val = append(sqlDollar[1].union.updateExprs(), sqlDollar[3].union.updateExpr())
		}
	case 1638:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9733
		{
			sqlVAL.union.val = &tree.UpdateExpr{Names: tree.NameList{tree.Name(sqlDollar[1].str)}, Expr: sqlDollar[3].union.expr()}
		}
	case 1639:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9736
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1640:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9740
		{
			sqlVAL.union.val = &tree.UpdateExpr{Tuple: true, Names: sqlDollar[2].union.nameList(), Expr: sqlDollar[5].union.expr()}
		}
	case 1641:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9751
		{
			sqlVAL.union.val = &tree.ReassignOwnedBy{
				OldRoles: sqlDollar[4].union.roleSpecList(),
				NewRole:  sqlDollar[6].union.roleSpec(),
			}
		}
	case 1642:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9757
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 1643:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9766
		{
			sqlVAL.union.val = &tree.DropOwnedBy{
				Roles:        sqlDollar[4].union.roleSpecList(),
				DropBehavior: sqlDollar[5].union.dropBehavior(),
			}
		}
	case 1644:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9772
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 1646:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9813
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1647:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9819
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: sqlDollar[2].union.slct()}
		}
	case 1648:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9823
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: &tree.Select{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1649:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9838
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1650:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9842
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy()}
		}
	case 1651:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9846
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[3].union.lockingClause()}
		}
	case 1652:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9850
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[3].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1653:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9854
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt()}
		}
	case 1654:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9858
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy()}
		}
	case 1655:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9862
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[5].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1656:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9866
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[5].union.lockingClause()}
		}
	case 1657:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9871
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1658:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9872
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1659:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9875
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1660:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9876
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1661:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9880
		{
			sqlVAL.union.val = tree.LockingClause{sqlDollar[1].union.lockingItem()}
		}
	case 1662:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9884
		{
			sqlVAL.union.val = append(sqlDollar[1].union.lockingClause(), sqlDollar[2].union.lockingItem())
		}
	case 1663:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9890
		{
			sqlVAL.union.val = &tree.LockingItem{
				Strength:   sqlDollar[1].union.lockingStrength(),
				Targets:    sqlDollar[2].union.tableNames(),
				WaitPolicy: sqlDollar[3].union.lockingWaitPolicy(),
			}
		}
	case 1664:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9899
		{
			sqlVAL.union.val = tree.ForUpdate
		}
	case 1665:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9900
		{
			sqlVAL.union.val = tree.ForNoKeyUpdate
		}
	case 1666:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9901
		{
			sqlVAL.union.val = tree.ForShare
		}
	case 1667:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9902
		{
			sqlVAL.union.val = tree.ForKeyShare
		}
	case 1668:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9905
		{
			sqlVAL.union.val = tree.TableNames{}
		}
	case 1669:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9906
		{
			sqlVAL.union.val = sqlDollar[2].union.tableNames()
		}
	case 1670:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9909
		{
			sqlVAL.union.val = tree.LockWaitBlock
		}
	case 1671:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9910
		{
			sqlVAL.union.val = tree.LockWaitSkip
		}
	case 1672:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9911
		{
			sqlVAL.union.val = tree.LockWaitError
		}
	case 1673:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9916
		{
			return helpWith(sqllex, "<SELECTCLAUSE>")
		}
	case 1677:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9951
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1679:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9952
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1681:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9953
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1683:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9975
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:   sqlDollar[3].union.selExprs(),
				From:    sqlDollar[4].union.from(),
				Where:   tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy: sqlDollar[6].union.groupBy(),
				Having:  tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:  sqlDollar[8].union.window(),
			}
		}
	case 1684:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9988
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct: sqlDollar[2].union.bool(),
				Exprs:    sqlDollar[3].union.selExprs(),
				From:     sqlDollar[4].union.from(),
				Where:    tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:  sqlDollar[6].union.groupBy(),
				Having:   tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:   sqlDollar[8].union.window(),
			}
		}
	case 1685:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10002
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct:   true,
				DistinctOn: sqlDollar[2].union.distinctOn(),
				Exprs:      sqlDollar[3].union.selExprs(),
				From:       sqlDollar[4].union.from(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:    sqlDollar[6].union.groupBy(),
				Having:     tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:     sqlDollar[8].union.window(),
			}
		}
	case 1686:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10014
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1687:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10018
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.UnionOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1688:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10027
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.IntersectOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1689:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10036
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.ExceptOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1690:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10051
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:       tree.SelectExprs{tree.StarSelectExpr()},
				From:        tree.From{Tables: tree.TableExprs{sqlDollar[2].union.tblExpr()}},
				TableSelect: true,
			}
		}
	case 1691:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10058
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1692:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10070
		{
			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1693:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10074
		{

			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1694:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10079
		{
			sqlVAL.union.val = &tree.With{Recursive: true, CTEList: sqlDollar[3].union.ctes()}
		}
	case 1695:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10085
		{
			sqlVAL.union.val = []*tree.CTE{sqlDollar[1].union.cte()}
		}
	case 1696:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10089
		{
			sqlVAL.union.val = append(sqlDollar[1].union.ctes(), sqlDollar[3].union.cte())
		}
	case 1697:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10095
		{
			sqlVAL.union.val = true
		}
	case 1698:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10099
		{
			sqlVAL.union.val = false
		}
	case 1699:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10105
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Set: false,
				},
				Stmt: sqlDollar[5].union.stmt(),
			}
		}
	case 1700:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10115
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Materialize: sqlDollar[4].union.bool(),
					Set:         true,
				},
				Stmt: sqlDollar[6].union.stmt(),
			}
		}
	case 1701:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10127
		{
		}
	case 1702:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10128
		{
		}
	case 1703:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10132
		{
			sqlVAL.union.val = sqlDollar[1].union.with()
		}
	case 1704:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10136
		{
			sqlVAL.union.val = nil
		}
	case 1705:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10141
		{
		}
	case 1706:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10142
		{
		}
	case 1707:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10146
		{
			sqlVAL.union.val = true
		}
	case 1708:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10150
		{
			sqlVAL.union.val = false
		}
	case 1709:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10154
		{
			sqlVAL.union.val = false
		}
	case 1710:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10160
		{
			sqlVAL.union.val = true
		}
	case 1711:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10166
		{
			sqlVAL.union.val = tree.DistinctOn(sqlDollar[4].union.exprs())
		}
	case 1712:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10171
		{
		}
	case 1713:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10172
		{
		}
	case 1714:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10175
		{
		}
	case 1715:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10176
		{
		}
	case 1716:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10180
		{
			sqlVAL.union.val = sqlDollar[1].union.orderBy()
		}
	case 1717:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10184
		{
			sqlVAL.union.val = tree.OrderBy(nil)
		}
	case 1718:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10190
		{
			sqlVAL.union.val = tree.OrderBy(sqlDollar[3].union.orders())
		}
	case 1719:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10196
		{
			sqlVAL.union.val = tree.OrderBy([]*tree.Order{sqlDollar[3].union.order()})
		}
	case 1720:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10200
		{
			sqllex.Error("multiple ORDER BY clauses are not supported in this function")
			return 1
		}
	case 1721:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10207
		{
			sqlVAL.union.val = []*tree.Order{sqlDollar[1].union.order()}
		}
	case 1722:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10211
		{
			sqlVAL.union.val = append(sqlDollar[1].union.orders(), sqlDollar[3].union.order())
		}
	case 1723:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10217
		{

			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()
			sqlVAL.union.val = &tree.Order{
				OrderType:  tree.OrderByColumn,
				Expr:       sqlDollar[1].union.expr(),
				Direction:  dir,
				NullsOrder: nullsOrder,
			}
		}
	case 1724:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10229
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{OrderType: tree.OrderByIndex, Direction: sqlDollar[4].union.dir(), Table: name}
		}
	case 1725:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10234
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{
				OrderType: tree.OrderByIndex,
				Direction: sqlDollar[5].union.dir(),
				Table:     name,
				Index:     tree.UnrestrictedName(sqlDollar[4].str),
			}
		}
	case 1726:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10246
		{
			sqlVAL.union.val = tree.NullsFirst
		}
	case 1727:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10250
		{
			sqlVAL.union.val = tree.NullsLast
		}
	case 1728:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10254
		{
			sqlVAL.union.val = tree.DefaultNullsOrder
		}
	case 1729:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10260
		{
			if sqlDollar[1].union.limit() == nil {
				sqlVAL.union.val = sqlDollar[2].union.limit()
			} else {
				sqlVAL.union.val = sqlDollar[1].union.limit()
				sqlVAL.union.val.(*tree.Limit).Offset = sqlDollar[2].union.limit().Offset
			}
		}
	case 1730:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10269
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
			if sqlDollar[2].union.limit() != nil {
				sqlVAL.union.val.(*tree.Limit).Count = sqlDollar[2].union.limit().Count
				sqlVAL.union.val.(*tree.Limit).LimitAll = sqlDollar[2].union.limit().LimitAll
			}
		}
	case 1733:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10280
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
		}
	case 1734:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10281
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1736:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10285
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1737:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10289
		{
			sqlVAL.union.val = &tree.Limit{LimitAll: true}
		}
	case 1738:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10293
		{
			if sqlDollar[2].union.expr() == nil {
				sqlVAL.union.val = (*tree.Limit)(nil)
			} else {
				sqlVAL.union.val = &tree.Limit{Count: sqlDollar[2].union.expr()}
			}
		}
	case 1739:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10307
		{
			sqlVAL.union.val = &tree.Limit{Count: sqlDollar[3].union.expr()}
		}
	case 1740:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10311
		{
			sqlVAL.union.val = &tree.Limit{
				Count: tree.NewNumVal(constant.MakeInt64(1), "", false),
			}
		}
	case 1741:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10319
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1742:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10326
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1746:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10348
		{
		}
	case 1747:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10349
		{
		}
	case 1748:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10352
		{
		}
	case 1749:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10353
		{
		}
	case 1750:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10370
		{
			sqlVAL.union.val = tree.GroupBy(sqlDollar[3].union.exprs())
		}
	case 1751:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10374
		{
			sqlVAL.union.val = tree.GroupBy(nil)
		}
	case 1752:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10379
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1753:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10380
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1754:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10386
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1755:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10387
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "rollup")
		}
	case 1756:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10388
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "cube")
		}
	case 1757:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10389
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "grouping sets")
		}
	case 1758:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10393
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1759:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10397
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1760:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10416
		{
			sqlVAL.union.val = &tree.ValuesClause{Rows: []tree.Exprs{sqlDollar[3].union.exprs()}}
		}
	case 1761:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10419
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1762:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10421
		{
			valNode := sqlDollar[1].union.selectStmt().(*tree.ValuesClause)
			valNode.Rows = append(valNode.Rows, sqlDollar[4].union.exprs())
			sqlVAL.union.val = valNode
		}
	case 1763:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10433
		{
			sqlVAL.union.val = tree.From{Tables: sqlDollar[2].union.tblExprs(), AsOf: sqlDollar[3].union.asOfClause()}
		}
	case 1764:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10436
		{
			return helpWith(sqllex, "<SOURCE>")
		}
	case 1765:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10438
		{
			sqlVAL.union.val = tree.From{}
		}
	case 1766:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10444
		{
			sqlVAL.union.val = tree.TableExprs{sqlDollar[1].union.tblExpr()}
		}
	case 1767:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10448
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblExprs(), sqlDollar[3].union.tblExpr())
		}
	case 1768:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10454
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1769:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10458
		{

			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[4].union.int64())}
		}
	case 1770:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10463
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Ascending}
		}
	case 1771:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10468
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Descending}
		}
	case 1772:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10474
		{
			sqlVAL.union.val = &tree.IndexFlags{NoIndexJoin: true}
		}
	case 1773:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10479
		{
			sqlVAL.union.val = &tree.IndexFlags{NoZigzagJoin: true}
		}
	case 1774:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10484
		{
			sqlVAL.union.val = &tree.IndexFlags{NoFullScan: true}
		}
	case 1775:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10489
		{

			sqlVAL.union.val = &tree.IndexFlags{IgnoreForeignKeys: true}
		}
	case 1776:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10495
		{
			sqlVAL.union.val = &tree.IndexFlags{ForceZigzag: true}
		}
	case 1777:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10500
		{
			sqlVAL.union.val = &tree.IndexFlags{ZigzagIndexes: []tree.UnrestrictedName{tree.UnrestrictedName(sqlDollar[3].str)}}
		}
	case 1778:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10505
		{

			sqlVAL.union.val = &tree.IndexFlags{ZigzagIndexIDs: []tree.IndexID{tree.IndexID(sqlDollar[4].union.int64())}}
		}
	case 1779:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10512
		{
			sqlVAL.union.val = sqlDollar[1].union.indexFlags()
		}
	case 1780:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10517
		{
			a := sqlDollar[1].union.indexFlags()
			b := sqlDollar[3].union.indexFlags()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1781:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10528
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1782:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10532
		{
			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[3].union.int64())}
		}
	case 1783:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10536
		{
			flags := sqlDollar[3].union.indexFlags()
			if err := flags.Check(); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = flags
		}
	case 1784:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10544
		{
			sqlVAL.union.val = (*tree.IndexFlags)(nil)
		}
	case 1785:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10578
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1786:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10588
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1787:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10598
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[1].union.selectStmt()},
				Ordinality: sqlDollar[2].union.bool(),
				As:         sqlDollar[3].union.aliasClause(),
			}
		}
	case 1788:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10606
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[2].union.selectStmt()},
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1789:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10615
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1790:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10619
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1791:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10623
		{
			f := sqlDollar[1].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[2].union.bool(),

				As: sqlDollar[3].union.aliasClause(),
			}
		}
	case 1792:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10634
		{
			f := sqlDollar[2].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1793:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10658
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.StatementSource{Statement: sqlDollar[2].union.stmt()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1794:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10664
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
				Columns: sqlDollar[3].union.tableRefCols(),
				As:      sqlDollar[4].union.aliasClause(),
			}
		}
	case 1795:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10675
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: tree.Exprs{sqlDollar[1].union.expr()}}
		}
	case 1796:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10679
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: sqlDollar[4].union.exprs()}
		}
	case 1797:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10685
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1798:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10687
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1799:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10691
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1800:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10697
		{
		}
	case 1801:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10699
		{
			return unimplemented(sqllex, "ROWS FROM with col_def_list")
		}
	case 1802:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10702
		{
			sqlVAL.union.val = nil
		}
	case 1803:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10703
		{
			sqlVAL.union.val = []tree.ColumnID{}
		}
	case 1804:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10704
		{
			sqlVAL.union.val = sqlDollar[2].union.tableRefCols()
		}
	case 1805:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10708
		{
			sqlVAL.union.val = []tree.ColumnID{tree.ColumnID(sqlDollar[1].union.int64())}
		}
	case 1806:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10712
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tableRefCols(), tree.ColumnID(sqlDollar[3].union.int64()))
		}
	case 1807:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10718
		{
			sqlVAL.union.val = true
		}
	case 1808:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10722
		{
			sqlVAL.union.val = false
		}
	case 1809:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10742
		{
			sqlVAL.union.val = &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}
		}
	case 1810:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10746
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: tree.AstCross, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Hint: sqlDollar[3].str}
		}
	case 1811:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10750
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[2].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Cond: sqlDollar[6].union.joinCond(), Hint: sqlDollar[3].str}
		}
	case 1812:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10754
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[3].union.tblExpr(), Cond: sqlDollar[4].union.joinCond()}
		}
	case 1813:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10758
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[3].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[6].union.tblExpr(), Cond: tree.NaturalJoinCond{}, Hint: sqlDollar[4].str}
		}
	case 1814:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10762
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[4].union.tblExpr(), Cond: tree.NaturalJoinCond{}}
		}
	case 1815:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10768
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str), Cols: sqlDollar[3].union.nameList()}
		}
	case 1816:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10772
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()}
		}
	case 1818:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10779
		{
			sqlVAL.union.val = tree.AliasClause{}
		}
	case 1819:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10785
		{
			sqlVAL.union.val = tree.AsOfClause{Expr: sqlDollar[5].union.expr()}
		}
	case 1821:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10792
		{
			sqlVAL.union.val = tree.AsOfClause{}
		}
	case 1822:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10798
		{
			sqlVAL.str = tree.AstFull
		}
	case 1823:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10802
		{
			sqlVAL.str = tree.AstLeft
		}
	case 1824:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10806
		{
			sqlVAL.str = tree.AstRight
		}
	case 1825:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10810
		{
			sqlVAL.str = tree.AstInner
		}
	case 1826:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10816
		{
		}
	case 1827:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10817
		{
		}
	case 1828:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10841
		{
			sqlVAL.str = tree.AstHash
		}
	case 1829:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10845
		{
			sqlVAL.str = tree.AstMerge
		}
	case 1830:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10849
		{
			sqlVAL.str = tree.AstLookup
		}
	case 1831:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10853
		{
			sqlVAL.str = tree.AstInverted
		}
	case 1832:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10857
		{
			sqlVAL.str = ""
		}
	case 1833:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10870
		{
			sqlVAL.union.val = &tree.UsingJoinCond{Cols: sqlDollar[3].union.nameList()}
		}
	case 1834:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10874
		{
			sqlVAL.union.val = &tree.OnJoinCond{Expr: sqlDollar[2].union.expr()}
		}
	case 1835:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10879
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1836:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10880
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1837:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10881
		{
			sqlVAL.union.val = sqlDollar[2].union.unresolvedObjectName()
		}
	case 1838:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10882
		{
			sqlVAL.union.val = sqlDollar[3].union.unresolvedObjectName()
		}
	case 1839:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10886
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 1840:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10891
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 1841:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10905
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1842:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10909
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str)}
			sqlVAL.union.val = alias
		}
	case 1843:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10915
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = alias
		}
	case 1844:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10921
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 1845:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10931
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[3].union.indexFlags(),
			}
		}
	case 1846:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10941
		{
			sqlVAL.union.val = true
		}
	case 1847:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10945
		{
			sqlVAL.union.val = false
		}
	case 1848:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10951
		{
			sqlVAL.union.val = true
		}
	case 1849:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10955
		{
			sqlVAL.union.val = false
		}
	case 1850:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10961
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1852:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10968
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1853:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10980
		{
			if bounds := sqlDollar[2].union.int32s(); bounds != nil {
				var err error
				sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), bounds)
				if err != nil {
					return setErr(sqllex, err)
				}
			} else {
				sqlVAL.union.val = sqlDollar[1].union.typeReference()
			}
		}
	case 1854:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10993
		{

			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1855:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11001
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1856:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11002
		{
			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1857:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11012
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1858:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11019
		{
			sqlVAL.union.val = []int32{-1}
		}
	case 1859:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11020
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1860:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11022
		{

			bound, err := sqlDollar[2].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = []int32{bound}
		}
	case 1861:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11030
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1862:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11031
		{
			sqlVAL.union.val = []int32(nil)
		}
	case 1864:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11043
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1865:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11050
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1866:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11059
		{

			if sqlDollar[1].str == "char" {
				sqlVAL.union.val = types.QChar
			} else if sqlDollar[1].str == "serial" {
				switch sqllex.(*lexer).nakedIntType.Width() {
				case 32:
					sqlVAL.union.val = &types.Serial4Type
				default:
					sqlVAL.union.val = &types.Serial8Type
				}
			} else {

				var ok bool
				var err error
				var unimp int
				sqlVAL.union.val, ok, unimp = types.TypeForNonKeywordTypeName(sqlDollar[1].str)
				if !ok {
					switch unimp {
					case 0:

						aIdx := sqllex.(*lexer).NewAnnotation()
						sqlVAL.union.val, err = tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
						if err != nil {
							return setErr(sqllex, err)
						}
					case -1:
						return unimplemented(sqllex, "type name "+sqlDollar[1].str)
					default:
						return unimplementedWithIssueDetail(sqllex, unimp, sqlDollar[1].str)
					}
				}
			}
		}
	case 1867:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11099
		{
			id := sqlDollar[2].union.int32()
			sqlVAL.union.val = &tree.OIDTypeReference{OID: oid.Oid(id)}
		}
	case 1868:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11104
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1873:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11111
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "point")
		}
	case 1874:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11112
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "polygon")
		}
	case 1875:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11115
		{
			sqlVAL.union.val = geopb.ShapeType_Point
		}
	case 1876:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11116
		{
			sqlVAL.union.val = geopb.ShapeType_PointM
		}
	case 1877:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11117
		{
			sqlVAL.union.val = geopb.ShapeType_PointZ
		}
	case 1878:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11118
		{
			sqlVAL.union.val = geopb.ShapeType_PointZM
		}
	case 1879:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11119
		{
			sqlVAL.union.val = geopb.ShapeType_LineString
		}
	case 1880:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11120
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringM
		}
	case 1881:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11121
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZ
		}
	case 1882:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11122
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZM
		}
	case 1883:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11123
		{
			sqlVAL.union.val = geopb.ShapeType_Polygon
		}
	case 1884:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11124
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonM
		}
	case 1885:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11125
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZ
		}
	case 1886:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11126
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZM
		}
	case 1887:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11127
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPoint
		}
	case 1888:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11128
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointM
		}
	case 1889:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11129
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZ
		}
	case 1890:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11130
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZM
		}
	case 1891:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11131
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineString
		}
	case 1892:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11132
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringM
		}
	case 1893:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11133
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZ
		}
	case 1894:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11134
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZM
		}
	case 1895:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11135
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygon
		}
	case 1896:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11136
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonM
		}
	case 1897:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11137
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZ
		}
	case 1898:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11138
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZM
		}
	case 1899:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11139
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollection
		}
	case 1900:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11140
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionM
		}
	case 1901:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11141
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZ
		}
	case 1902:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11142
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZM
		}
	case 1903:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11143
		{
			sqlVAL.union.val = geopb.ShapeType_Geometry
		}
	case 1904:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11144
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryM
		}
	case 1905:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11145
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZ
		}
	case 1906:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11146
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZM
		}
	case 1907:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11149
		{
			sqlVAL.union.val = types.Geography
		}
	case 1908:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11150
		{
			sqlVAL.union.val = types.Geometry
		}
	case 1909:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11151
		{
			sqlVAL.union.val = types.Box2D
		}
	case 1910:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11153
		{
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1911:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11157
		{
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1912:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11161
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1913:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11169
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1919:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11195
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), 0)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1920:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11203
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), sqlDollar[4].union.int32())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1921:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11211
		{
			sqlVAL.union.val = nil
		}
	case 1922:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11218
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1923:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11222
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1924:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11226
		{
			sqlVAL.union.val = types.Int2
		}
	case 1925:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11230
		{
			sqlVAL.union.val = types.Int
		}
	case 1926:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11234
		{
			sqlVAL.union.val = types.Float4
		}
	case 1927:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11238
		{
			sqlVAL.union.val = sqlDollar[2].union.colType()
		}
	case 1928:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11242
		{
			sqlVAL.union.val = types.Float
		}
	case 1929:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11246
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1930:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11254
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1931:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11262
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1932:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11270
		{
			sqlVAL.union.val = types.Bool
		}
	case 1933:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11276
		{
			nv := sqlDollar[2].union.numVal()
			prec, err := nv.AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			typ, err := newFloat(prec)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = typ
		}
	case 1934:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11289
		{
			sqlVAL.union.val = types.Float
		}
	case 1935:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11295
		{
			bit, err := newBitType(sqlDollar[4].union.int32(), sqlDollar[2].union.bool())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1936:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11301
		{
			bit, err := newBitType(sqlDollar[3].union.int32(), true)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1937:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11309
		{
			sqlVAL.union.val = types.MakeBit(1)
		}
	case 1938:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11313
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1939:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11317
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1940:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11323
		{
			colTyp := *sqlDollar[1].union.colType()
			n := sqlDollar[3].union.int32()
			if n == 0 {
				sqllex.Error(fmt.Sprintf("length for type %s must be at least 1", colTyp.SQLString()))
				return 1
			}
			sqlVAL.union.val = types.MakeScalar(types.StringFamily, colTyp.Oid(), colTyp.Precision(), n, colTyp.Locale())
		}
	case 1941:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11335
		{
			sqlVAL.union.val = sqlDollar[1].union.colType()
		}
	case 1942:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11341
		{
			sqlVAL.union.val = types.MakeChar(1)
		}
	case 1943:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11345
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1944:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11349
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1945:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11353
		{
			sqlVAL.union.val = types.String
		}
	case 1948:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11362
		{
			sqlVAL.union.val = true
		}
	case 1949:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11363
		{
			sqlVAL.union.val = false
		}
	case 1950:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11368
		{
			sqlVAL.union.val = types.Date
		}
	case 1951:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11372
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimeTZ
			} else {
				sqlVAL.union.val = types.Time
			}
		}
	case 1952:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11380
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimeTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTime(prec)
			}
		}
	case 1953:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11392
		{
			sqlVAL.union.val = types.TimeTZ
		}
	case 1954:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11394
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimeTZ(prec)
		}
	case 1955:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11403
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimestampTZ
			} else {
				sqlVAL.union.val = types.Timestamp
			}
		}
	case 1956:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11411
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimestampTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTimestamp(prec)
			}
		}
	case 1957:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11424
		{
			sqlVAL.union.val = types.TimestampTZ
		}
	case 1958:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11428
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimestampTZ(prec)
		}
	case 1959:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11438
		{
			sqlVAL.union.val = true
		}
	case 1960:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11439
		{
			sqlVAL.union.val = false
		}
	case 1961:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11440
		{
			sqlVAL.union.val = false
		}
	case 1962:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11444
		{
			sqlVAL.union.val = types.Interval
		}
	case 1963:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11448
		{
			sqlVAL.union.val = types.MakeInterval(sqlDollar[2].union.intervalTypeMetadata())
		}
	case 1964:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11452
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeInterval(types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true})
		}
	case 1965:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11463
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_YEAR,
				},
			}
		}
	case 1966:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11471
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1967:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11479
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_DAY,
				},
			}
		}
	case 1968:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11487
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1969:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11495
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1970:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11503
		{
			sqlVAL.union.val = sqlDollar[1].union.intervalTypeMetadata()
		}
	case 1971:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11509
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_YEAR,
					DurationType:     types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1972:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11518
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1973:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11527
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1974:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11536
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_DAY
			sqlVAL.union.val = ret
		}
	case 1975:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11542
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_HOUR,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1976:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11551
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_HOUR
			sqlVAL.union.val = ret
		}
	case 1977:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11557
		{
			sqlVAL.union.val = sqlDollar[3].union.intervalTypeMetadata()
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_MINUTE
			sqlVAL.union.val = ret
		}
	case 1979:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11567
		{
			sqlVAL.union.val = nil
		}
	case 1980:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11573
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
			}
		}
	case 1981:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11581
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
				PrecisionIsSet: true,
				Precision:      prec,
			}
		}
	case 1983:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11618
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1984:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11622
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1985:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11626
		{
			sqlVAL.union.val = &tree.CollateExpr{Expr: sqlDollar[1].union.expr(), Locale: sqlDollar[3].str}
		}
	case 1986:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11630
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("timezone"), Exprs: tree.Exprs{sqlDollar[5].union.expr(), sqlDollar[1].union.expr()}}
		}
	case 1987:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11641
		{

			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1988:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11646
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1989:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11650
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryComplement), Expr: sqlDollar[2].union.expr()}
		}
	case 1990:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11654
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnarySqrt), Expr: sqlDollar[2].union.expr()}
		}
	case 1991:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11658
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryCbrt), Expr: sqlDollar[2].union.expr()}
		}
	case 1992:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11662
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Plus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1993:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11666
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Minus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1994:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11670
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Mult), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1995:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11674
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Div), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1996:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11678
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.FloorDiv), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1997:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11682
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Mod), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1998:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11686
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Pow), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1999:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11690
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitxor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2000:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11694
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitand), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2001:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11698
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2002:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11702
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.LT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2003:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11706
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.GT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2004:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11710
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.JSONExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2005:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11714
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.JSONSomeExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2006:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11718
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.JSONAllExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2007:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11722
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.Contains), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2008:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11726
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.ContainedBy), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2009:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11730
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.EQ), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2010:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11734
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Concat), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2011:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11738
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.LShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2012:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11742
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.RShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2013:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11746
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.JSONFetchVal), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2014:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11750
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.JSONFetchText), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2015:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11754
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.JSONFetchValPath), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2016:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11758
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.JSONFetchTextPath), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2017:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11762
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("json_remove_path"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 2018:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11766
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contained_by_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 2019:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11770
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.Overlaps), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2020:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11774
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contains_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 2021:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11778
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.LE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2022:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11782
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.GE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2023:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11786
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2024:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11790
		{
			var retCode int
			sqlVAL.union.val, retCode = processUnaryQualOp(sqllex, sqlDollar[1].union.op(), sqlDollar[2].union.expr())
			if retCode != 0 {
				return retCode
			}
		}
	case 2025:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11798
		{
			{
				var retCode int
				sqlVAL.union.val, retCode = processBinaryQualOp(sqllex, sqlDollar[2].union.op(), sqlDollar[1].union.expr(), sqlDollar[3].union.expr())
				if retCode != 0 {
					return retCode
				}
			}
		}
	case 2026:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11808
		{
			sqlVAL.union.val = &tree.AndExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2027:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11812
		{
			sqlVAL.union.val = &tree.OrExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2028:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11816
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 2029:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11820
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 2030:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11824
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.Like), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2031:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11828
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 2032:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11832
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotLike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 2033:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11836
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 2034:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11840
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.ILike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2035:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11844
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 2036:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11848
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotILike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 2037:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11852
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 2038:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11856
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.SimilarTo), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 2039:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11860
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 2040:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11864
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotSimilarTo), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 2041:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11868
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[5].union.expr(), sqlDollar[7].union.expr()}}
		}
	case 2042:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11872
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.RegMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2043:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11876
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotRegMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2044:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11880
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.RegIMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2045:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11884
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotRegIMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2046:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11888
		{
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator: treecmp.MakeComparisonOperator(treecmp.EQ),
				Left:     sqlDollar[1].union.expr(),
				Right:    tree.NewNumVal(constant.MakeFloat64(math.NaN()), "NaN", false),
			}
		}
	case 2047:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11896
		{
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator: treecmp.MakeComparisonOperator(treecmp.NE),
				Left:     sqlDollar[1].union.expr(),
				Right:    tree.NewNumVal(constant.MakeFloat64(math.NaN()), "NaN", false),
			}
		}
	case 2048:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11904
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2049:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11908
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2050:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11912
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2051:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11916
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2052:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11919
		{
			return unimplemented(sqllex, "overlaps")
		}
	case 2053:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11921
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 2054:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11925
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 2055:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11929
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 2056:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11933
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 2057:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11937
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 2058:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11941
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 2059:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11945
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 2060:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11949
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 2061:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11953
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 2062:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11957
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 2063:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11961
		{
			sqlVAL.union.val = &tree.RangeCond{Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 2064:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11965
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 2065:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11969
		{
			sqlVAL.union.val = &tree.RangeCond{Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 2066:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11973
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 2067:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11977
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.In), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2068:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11981
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotIn), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 2069:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11985
		{
			op := sqlDollar[3].union.cmpOp()
			subOp := sqlDollar[2].union.op()
			subOpCmp, ok := subOp.(treecmp.ComparisonOperator)
			if !ok {
				sqllex.Error(fmt.Sprintf("%s %s <array> is invalid because %q is not a boolean operator",
					subOp, op, subOp))
				return 1
			}
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator:    op,
				SubOperator: subOpCmp,
				Left:        sqlDollar[1].union.expr(),
				Right:       sqlDollar[4].union.expr(),
			}
		}
	case 2070:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12002
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 2071:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12007
		{
			return unimplemented(sqllex, "UNIQUE predicate")
		}
	case 2073:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12019
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 2074:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12023
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 2075:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12027
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2076:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12031
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 2077:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12035
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryComplement), Expr: sqlDollar[2].union.expr()}
		}
	case 2078:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12039
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Plus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2079:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12043
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Minus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2080:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12047
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Mult), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2081:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12051
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Div), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2082:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12055
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.FloorDiv), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2083:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12059
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Mod), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2084:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12063
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Pow), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2085:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12067
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitxor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2086:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12071
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitand), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2087:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12075
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2088:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12079
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.LT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2089:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12083
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.GT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2090:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12087
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.EQ), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2091:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12091
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Concat), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2092:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12095
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.LShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2093:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12099
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.RShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2094:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12103
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.LE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2095:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12107
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.GE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2096:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12111
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2097:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12115
		{
			var retCode int
			sqlVAL.union.val, retCode = processUnaryQualOp(sqllex, sqlDollar[1].union.op(), sqlDollar[2].union.expr())
			if retCode != 0 {
				return retCode
			}
		}
	case 2098:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12123
		{
			{
				var retCode int
				sqlVAL.union.val, retCode = processBinaryQualOp(sqllex, sqlDollar[2].union.op(), sqlDollar[1].union.expr(), sqlDollar[3].union.expr())
				if retCode != 0 {
					return retCode
				}
			}
		}
	case 2099:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12133
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 2100:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12137
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 2101:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12141
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 2102:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12145
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 2104:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12159
		{
			sqlVAL.union.val = &tree.IndirectionExpr{
				Expr:        sqlDollar[1].union.expr(),
				Indirection: sqlDollar[2].union.arraySubscripts(),
			}
		}
	case 2106:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12167
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[2].union.selectStmt(), Exists: true}
		}
	case 2107:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12203
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 2108:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12207
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 2109:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12211
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 2110:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12215
		{
			sqlVAL.union.val = tree.NewBytesStrVal(sqlDollar[1].str)
		}
	case 2111:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12219
		{
			d, err := tree.ParseDBitArray(sqlDollar[1].str)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 2112:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12224
		{
			return unimplemented(sqllex, sqlDollar[1].union.unresolvedName().String()+"(...) SCONST")
		}
	case 2113:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12226
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2114:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12230
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2115:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12234
		{
			sqlVAL.union.val = tree.MakeDBool(true)
		}
	case 2116:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12238
		{
			sqlVAL.union.val = tree.MakeDBool(false)
		}
	case 2117:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12242
		{
			sqlVAL.union.val = tree.DNull
		}
	case 2118:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12246
		{
			sqlVAL.union.val = tree.Expr(sqlDollar[1].union.unresolvedName())
		}
	case 2119:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12250
		{
			colNum := sqlDollar[2].union.int64()
			if colNum < 1 || colNum > int64(MaxInt) {
				sqllex.Error(fmt.Sprintf("invalid column ordinal: @%d", colNum))
				return 1
			}
			sqlVAL.union.val = tree.NewOrdinalReference(int(colNum - 1))
		}
	case 2120:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12259
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 2121:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12266
		{
			sqlVAL.union.val = &tree.TupleStar{Expr: sqlDollar[2].union.expr()}
		}
	case 2122:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12270
		{
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ColName: tree.Name(sqlDollar[5].str)}
		}
	case 2123:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12274
		{
			idx, err := sqlDollar[6].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			if idx <= 0 {
				err := errors.New("invalid numeric tuple index: indexes must be > 0")
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ByIndex: true, ColIndex: int(idx - 1)}
		}
	case 2124:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12284
		{
			sqlVAL.union.val = &tree.ParenExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 2126:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12289
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 2127:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12293
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 2128:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12297
		{
			sqlVAL.union.val = &tree.ArrayFlatten{Subquery: &tree.Subquery{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 2129:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12301
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.tuple().Exprs}
		}
	case 2130:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12305
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2131:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12308
		{
			return unimplemented(sqllex, "d_expr grouping")
		}
	case 2132:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12312
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName()}
		}
	case 2133:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12316
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: sqlDollar[3].union.exprs(), OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 2134:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12319
		{
			return unimplemented(sqllex, "variadic")
		}
	case 2135:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:12320
		{
			return unimplemented(sqllex, "variadic")
		}
	case 2136:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12322
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.AllFuncType, Exprs: sqlDollar[4].union.exprs(), OrderBy: sqlDollar[5].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 2137:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12328
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.DistinctFuncType, Exprs: sqlDollar[4].union.exprs()}
		}
	case 2138:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12332
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: tree.Exprs{tree.StarExpr()}}
		}
	case 2139:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12335
		{
			return helpWithFunction(sqllex, sqlDollar[1].union.resolvableFuncRefFromName())
		}
	case 2140:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12344
		{
			name := sqlDollar[1].union.unresolvedName()
			if name.NumParts == 1 {
				typName := name.Parts[0]

				if typName == "char" {
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: types.QChar, SyntaxMode: tree.CastPrepend}
				} else if typName == "serial" {
					switch sqllex.(*lexer).nakedIntType.Width() {
					case 32:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial4Type, SyntaxMode: tree.CastPrepend}
					default:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial8Type, SyntaxMode: tree.CastPrepend}
					}
				} else {

					var typ tree.ResolvableTypeReference
					var ok bool
					var err error
					var unimp int
					typ, ok, unimp = types.TypeForNonKeywordTypeName(typName)
					if !ok {
						switch unimp {
						case 0:

							aIdx := sqllex.(*lexer).NewAnnotation()
							typ, err = name.ToUnresolvedObjectName(aIdx)
							if err != nil {
								return setErr(sqllex, err)
							}
						case -1:
							return unimplemented(sqllex, "type name "+typName)
						default:
							return unimplementedWithIssueDetail(sqllex, unimp, typName)
						}
					}
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: typ, SyntaxMode: tree.CastPrepend}
				}
			} else {
				aIdx := sqllex.(*lexer).NewAnnotation()
				res, err := name.ToUnresolvedObjectName(aIdx)
				if err != nil {
					return setErr(sqllex, err)
				}
				sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: res, SyntaxMode: tree.CastPrepend}
			}
		}
	case 2141:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12397
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: sqlDollar[1].union.colType(), SyntaxMode: tree.CastPrepend}
		}
	case 2142:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12410
		{
			f := sqlDollar[1].union.expr().(*tree.FuncExpr)
			w := sqlDollar[2].union.expr().(*tree.FuncExpr)
			if w.AggType != 0 {
				f.AggType = w.AggType
				f.OrderBy = w.OrderBy
			}
			f.Filter = sqlDollar[3].union.expr()
			f.WindowDef = sqlDollar[4].union.windowDef()
			sqlVAL.union.val = f
		}
	case 2143:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12422
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2144:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12431
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2145:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12432
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2146:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12437
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("pg_collation_for"), Exprs: tree.Exprs{sqlDollar[4].union.expr()}}
		}
	case 2147:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12441
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2148:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12445
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2149:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12451
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_database")}
		}
	case 2150:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12455
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2151:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12459
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2152:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12463
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2153:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12467
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2154:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12471
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2155:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12477
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 2156:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12481
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("session_user")}
		}
	case 2157:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12485
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 2158:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12489
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.CastExplicit}
		}
	case 2159:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12493
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.AnnotateExplicit}
		}
	case 2160:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:12497
		{
			sqlVAL.union.val = &tree.IfExpr{Cond: sqlDollar[3].union.expr(), True: sqlDollar[5].union.expr(), Else: sqlDollar[7].union.expr()}
		}
	case 2161:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:12501
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr(), ErrCode: sqlDollar[7].union.expr()}
		}
	case 2162:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12505
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr()}
		}
	case 2163:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12509
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr()}
		}
	case 2164:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12513
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), ErrCode: sqlDollar[5].union.expr()}
		}
	case 2165:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12517
		{
			sqlVAL.union.val = &tree.NullIfExpr{Expr1: sqlDollar[3].union.expr(), Expr2: sqlDollar[5].union.expr()}
		}
	case 2166:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12521
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "IFNULL", Exprs: tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 2167:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12525
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "COALESCE", Exprs: sqlDollar[3].union.exprs()}
		}
	case 2169:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12532
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2170:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12535
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2171:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12537
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2172:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12540
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2173:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12542
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2174:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12546
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2175:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12549
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2176:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12551
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2177:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12555
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2178:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12558
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2179:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12560
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2180:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12564
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2181:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12567
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2182:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12569
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2183:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12573
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2184:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12576
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2185:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12578
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2186:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12581
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2187:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12583
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2188:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12586
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2189:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12588
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2190:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12591
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2191:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12593
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2192:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12596
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2193:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12598
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2194:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12601
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2195:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12603
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("strpos"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2196:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12607
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2197:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12610
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2198:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12611
		{
			return unimplemented(sqllex, "treat")
		}
	case 2199:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12613
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2200:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12617
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ltrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2201:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12621
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("rtrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2202:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12625
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2203:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12629
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2204:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12632
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2205:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12634
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2206:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12637
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2207:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12643
		{
			sqlVAL.union.val = &tree.FuncExpr{OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.OrderedSetAgg}
		}
	case 2208:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12647
		{
			sqlVAL.union.val = &tree.FuncExpr{}
		}
	case 2209:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12653
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 2210:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12657
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2211:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12664
		{
			sqlVAL.union.val = sqlDollar[2].union.window()
		}
	case 2212:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12668
		{
			sqlVAL.union.val = tree.Window(nil)
		}
	case 2213:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12674
		{
			sqlVAL.union.val = tree.Window{sqlDollar[1].union.windowDef()}
		}
	case 2214:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12678
		{
			sqlVAL.union.val = append(sqlDollar[1].union.window(), sqlDollar[3].union.windowDef())
		}
	case 2215:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12684
		{
			n := sqlDollar[3].union.windowDef()
			n.Name = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = n
		}
	case 2216:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12692
		{
			sqlVAL.union.val = sqlDollar[2].union.windowDef()
		}
	case 2217:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12696
		{
			sqlVAL.union.val = &tree.WindowDef{Name: tree.Name(sqlDollar[2].str)}
		}
	case 2218:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12700
		{
			sqlVAL.union.val = (*tree.WindowDef)(nil)
		}
	case 2219:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12707
		{
			sqlVAL.union.val = &tree.WindowDef{
				RefName:    tree.Name(sqlDollar[2].str),
				Partitions: sqlDollar[3].union.exprs(),
				OrderBy:    sqlDollar[4].union.orderBy(),
				Frame:      sqlDollar[5].union.windowFrame(),
			}
		}
	case 2221:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12727
		{
			sqlVAL.str = ""
		}
	case 2222:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12733
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 2223:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12737
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2224:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12743
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      treewindow.RANGE,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2225:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12751
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      treewindow.ROWS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2226:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12759
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      treewindow.GROUPS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2227:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12767
		{
			sqlVAL.union.val = (*tree.WindowFrame)(nil)
		}
	case 2228:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12773
		{
			startBound := sqlDollar[1].union.windowFrameBound()
			switch {
			case startBound.BoundType == treewindow.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.BoundType == treewindow.OffsetFollowing:
				sqllex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound}
		}
	case 2229:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12786
		{
			startBound := sqlDollar[2].union.windowFrameBound()
			endBound := sqlDollar[4].union.windowFrameBound()
			switch {
			case startBound.BoundType == treewindow.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.BoundType == treewindow.UnboundedPreceding:
				sqllex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.BoundType == treewindow.CurrentRow && endBound.BoundType == treewindow.OffsetPreceding:
				sqllex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.BoundType == treewindow.OffsetFollowing && endBound.BoundType == treewindow.OffsetPreceding:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.BoundType == treewindow.OffsetFollowing && endBound.BoundType == treewindow.CurrentRow:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound, EndBound: endBound}
		}
	case 2230:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12814
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: treewindow.UnboundedPreceding}
		}
	case 2231:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12818
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: treewindow.UnboundedFollowing}
		}
	case 2232:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12822
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: treewindow.CurrentRow}
		}
	case 2233:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12826
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  treewindow.OffsetPreceding,
			}
		}
	case 2234:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12833
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  treewindow.OffsetFollowing,
			}
		}
	case 2235:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12842
		{
			sqlVAL.union.val = treewindow.ExcludeCurrentRow
		}
	case 2236:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12846
		{
			sqlVAL.union.val = treewindow.ExcludeGroup
		}
	case 2237:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12850
		{
			sqlVAL.union.val = treewindow.ExcludeTies
		}
	case 2238:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12854
		{

			sqlVAL.union.val = treewindow.NoExclusion
		}
	case 2239:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12859
		{
			sqlVAL.union.val = treewindow.NoExclusion
		}
	case 2240:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12872
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[3].union.exprs(), Row: true}
		}
	case 2241:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12876
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 2243:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12883
		{
			t := sqlDollar[2].union.tuple()
			labels := sqlDollar[4].union.nameList()
			t.Labels = make([]string, len(labels))
			for i, l := range labels {
				t.Labels[i] = string(l)
			}
			sqlVAL.union.val = t
		}
	case 2244:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12895
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Any)
		}
	case 2245:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12899
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Some)
		}
	case 2246:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12903
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.All)
		}
	case 2247:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12919
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Plus)
		}
	case 2248:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12920
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Minus)
		}
	case 2249:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12921
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Mult)
		}
	case 2250:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12922
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Div)
		}
	case 2251:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12923
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Mod)
		}
	case 2252:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12924
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Pow)
		}
	case 2253:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12925
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.LT)
		}
	case 2254:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12926
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.GT)
		}
	case 2255:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12927
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.EQ)
		}
	case 2256:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12928
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.LE)
		}
	case 2257:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12929
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.GE)
		}
	case 2258:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12930
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NE)
		}
	case 2259:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12932
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.JSONExists)
		}
	case 2260:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12933
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Bitand)
		}
	case 2261:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12934
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Bitor)
		}
	case 2262:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12935
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Bitxor)
		}
	case 2263:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12936
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.FloorDiv)
		}
	case 2264:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12937
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Contains)
		}
	case 2265:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12938
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.ContainedBy)
		}
	case 2266:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12939
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.LShift)
		}
	case 2267:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12940
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.RShift)
		}
	case 2268:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12941
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Concat)
		}
	case 2269:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12942
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.JSONFetchVal)
		}
	case 2270:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12943
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.JSONFetchText)
		}
	case 2271:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12944
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.JSONFetchValPath)
		}
	case 2272:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12945
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.JSONFetchTextPath)
		}
	case 2273:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12946
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.JSONSomeExists)
		}
	case 2274:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12947
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.JSONAllExists)
		}
	case 2275:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12948
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NotRegMatch)
		}
	case 2276:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12949
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.RegIMatch)
		}
	case 2277:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12950
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NotRegIMatch)
		}
	case 2278:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12951
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Overlaps)
		}
	case 2279:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12952
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnaryComplement)
		}
	case 2280:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12953
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnarySqrt)
		}
	case 2281:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12954
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnaryCbrt)
		}
	case 2283:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12959
		{

			if sqlDollar[1].str != "pg_catalog" {
				return unimplementedWithIssue(sqllex, 65017)
			}
			sqlVAL.union = sqlDollar[3].union
		}
	case 2284:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12975
		{
			sqlVAL.union = sqlDollar[3].union
		}
	case 2287:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12982
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Like)
		}
	case 2288:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12983
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NotLike)
		}
	case 2289:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12984
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.ILike)
		}
	case 2290:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12985
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NotILike)
		}
	case 2291:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13008
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2292:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13012
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2293:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13018
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2294:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13022
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2295:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13026
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2296:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13037
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2297:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13041
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2298:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13047
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2299:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13051
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2301:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13058
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2302:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13064
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2303:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13068
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2304:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13074
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference{sqlDollar[1].union.typeReference()}
		}
	case 2305:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13078
		{
			sqlVAL.union.val = append(sqlDollar[1].union.typeReferences(), sqlDollar[3].union.typeReference())
		}
	case 2306:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13084
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2307:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13088
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2308:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13094
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2309:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13098
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2310:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13104
		{
			sqlVAL.union.val = tree.Exprs{tree.NewStrVal(strings.ToLower(sqlDollar[1].str)), sqlDollar[3].union.expr()}
		}
	case 2311:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13108
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2320:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13131
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr(), sqlDollar[4].union.expr()}
		}
	case 2321:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13135
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2322:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13139
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2323:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13145
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2324:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13152
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[1].union.expr()}
		}
	case 2325:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13156
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2326:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13173
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2327:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13177
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2328:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13181
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2329:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13185
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), tree.NewDInt(1), sqlDollar[2].union.expr()}
		}
	case 2330:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13189
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2331:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13195
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2332:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13201
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2333:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13207
		{
			sqlVAL.union.val = append(sqlDollar[3].union.exprs(), sqlDollar[1].union.expr())
		}
	case 2334:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13211
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 2335:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13215
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2336:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13221
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 2338:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13233
		{
			sqlVAL.union.val = &tree.CaseExpr{Expr: sqlDollar[2].union.expr(), Whens: sqlDollar[3].union.whens(), Else: sqlDollar[4].union.expr()}
		}
	case 2339:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13240
		{
			sqlVAL.union.val = []*tree.When{sqlDollar[1].union.when()}
		}
	case 2340:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13244
		{
			sqlVAL.union.val = append(sqlDollar[1].union.whens(), sqlDollar[2].union.when())
		}
	case 2341:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13250
		{
			sqlVAL.union.val = &tree.When{Cond: sqlDollar[2].union.expr(), Val: sqlDollar[4].union.expr()}
		}
	case 2342:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13256
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2343:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13260
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2345:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13267
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2346:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13273
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr()}
		}
	case 2347:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13277
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr(), End: sqlDollar[4].union.expr(), Slice: true}
		}
	case 2349:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13284
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2350:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13290
		{
			sqlVAL.union.val = tree.ArraySubscripts{sqlDollar[1].union.arraySubscript()}
		}
	case 2351:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13294
		{
			sqlVAL.union.val = append(sqlDollar[1].union.arraySubscripts(), sqlDollar[2].union.arraySubscript())
		}
	case 2352:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13299
		{
		}
	case 2353:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13300
		{
		}
	case 2354:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13304
		{
			sqlVAL.union.val = tree.SelectExprs{sqlDollar[1].union.selExpr()}
		}
	case 2355:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13308
		{
			sqlVAL.union.val = append(sqlDollar[1].union.selExprs(), sqlDollar[3].union.selExpr())
		}
	case 2356:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13314
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 2357:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13323
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 2358:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13327
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2359:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13331
		{
			sqlVAL.union.val = tree.StarSelectExpr()
		}
	case 2360:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13339
		{
			sqlVAL.union.val = tree.TableIndexNames{sqlDollar[1].union.newTableIndexName()}
		}
	case 2361:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13343
		{
			sqlVAL.union.val = append(sqlDollar[1].union.newTableIndexNames(), sqlDollar[3].union.newTableIndexName())
		}
	case 2362:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13349
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedName()}
		}
	case 2363:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13353
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedName())
		}
	case 2364:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13372
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: tree.UnrestrictedName(sqlDollar[3].str),
			}
		}
	case 2365:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13380
		{

			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			indexName := tree.UnrestrictedName(name.ObjectName)
			name.ObjectName = ""
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: indexName,
			}
		}
	case 2366:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13403
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2368:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13412
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2369:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13416
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2370:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13420
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2371:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13424
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 1}
		}
	case 2372:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13430
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 2373:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13434
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 2378:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13449
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2379:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13453
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2382:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13465
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2383:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13469
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2384:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13478
		{
			val, err := sqlDollar[1].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2385:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13489
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2386:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13498
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2387:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13506
		{
			var t *types.T
			if sqlDollar[3].union.val == nil {
				t = types.Interval
			} else {
				t = types.MakeInterval(sqlDollar[3].union.intervalTypeMetadata())
			}
			sqlVAL.union.val = &tree.CastExpr{
				Expr: tree.NewStrVal(sqlDollar[2].str),
				Type: t,

				SyntaxMode: tree.CastShort,
			}
		}
	case 2388:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13523
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = &tree.CastExpr{
				Expr: tree.NewStrVal(sqlDollar[5].str),
				Type: types.MakeInterval(
					types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true},
				),

				SyntaxMode: tree.CastShort,
			}
		}
	case 2407:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13608
		{
			sqlVAL.union.val = sqlDollar[1].union.nameList()
		}
	case 2409:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13616
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{SchemaName: tree.Name(sqlDollar[1].str), ExplicitSchema: true}
		}
	case 2410:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13620
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{CatalogName: tree.Name(sqlDollar[1].str), SchemaName: tree.Name(sqlDollar[3].str), ExplicitCatalog: true, ExplicitSchema: true}
		}
	case 2411:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13626
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{sqlDollar[1].union.objectNamePrefix()}
		}
	case 2412:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13630
		{
			sqlVAL.union.val = append(sqlDollar[1].union.objectNamePrefixList(), sqlDollar[3].union.objectNamePrefix())
		}
	case 2414:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13638
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{ExplicitSchema: false}
		}
	case 2420:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13665
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2422:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13672
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 2, Parts: tree.NameParts{sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2423:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13676
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 3, Parts: tree.NameParts{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2424:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:13680
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 4, Parts: tree.NameParts{sqlDollar[7].str, sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2426:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:13694
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 4, Parts: tree.NameParts{"", sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2427:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13698
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2428:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13702
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2429:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13715
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2431:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13724
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2435:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13742
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2436:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13755
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2437:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13762
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2445:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13787
		{
			sqlVAL.str = ""
		}
	case 2446:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13793
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 2447:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13797
		{
			sqlVAL.str = ""
		}
	}
	goto sqlstack /* stack new state and value */
}
