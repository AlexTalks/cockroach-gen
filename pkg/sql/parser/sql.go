// Code generated by goyacc. DO NOT EDIT.
// GENERATED FILE DO NOT EDIT
// Code generated by goyacc -p sql -o sql.go.tmp sql-gen.y. DO NOT EDIT.

//line sql-gen.y:24
package parser

import (
	"fmt"
	__yyfmt__ "fmt"
	"go/constant"
	"strings"

	"github.com/cockroachdb/cockroach/pkg/geo/geopb"
	"github.com/cockroachdb/cockroach/pkg/roachpb"
	"github.com/cockroachdb/cockroach/pkg/sql/lex"
	"github.com/cockroachdb/cockroach/pkg/sql/privilege"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree"
	"github.com/cockroachdb/cockroach/pkg/sql/types"
	"github.com/cockroachdb/errors"
)

//line sql-gen.y:24

const MaxUint = ^uint(0)

const MaxInt = int(MaxUint >> 1)

func unimplemented(sqllex sqlLexer, feature string) int {
	sqllex.(*lexer).Unimplemented(feature)
	return 1
}
func purposelyUnimplemented(sqllex sqlLexer, feature string, reason string) int {
	sqllex.(*lexer).PurposelyUnimplemented(feature, reason)
	return 1
}

func setErr(sqllex sqlLexer, err error) int {
	sqllex.(*lexer).setErr(err)
	return 1
}

func unimplementedWithIssue(sqllex sqlLexer, issue int) int {
	sqllex.(*lexer).UnimplementedWithIssue(issue)
	return 1
}

func unimplementedWithIssueDetail(sqllex sqlLexer, issue int, detail string) int {
	sqllex.(*lexer).UnimplementedWithIssueDetail(issue, detail)
	return 1
}

//line sql-gen.y:72

type sqlSymUnion struct {
	val interface{}
}

func (u *sqlSymUnion) numVal() *tree.NumVal {
	return u.val.(*tree.NumVal)
}
func (u *sqlSymUnion) strVal() *tree.StrVal {
	if stmt, ok := u.val.(*tree.StrVal); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) placeholder() *tree.Placeholder {
	return u.val.(*tree.Placeholder)
}
func (u *sqlSymUnion) auditMode() tree.AuditMode {
	return u.val.(tree.AuditMode)
}
func (u *sqlSymUnion) bool() bool {
	return u.val.(bool)
}
func (u *sqlSymUnion) strPtr() *string {
	return u.val.(*string)
}
func (u *sqlSymUnion) strs() []string {
	return u.val.([]string)
}
func (u *sqlSymUnion) newTableIndexName() *tree.TableIndexName {
	tn := u.val.(tree.TableIndexName)
	return &tn
}
func (u *sqlSymUnion) tableIndexName() tree.TableIndexName {
	return u.val.(tree.TableIndexName)
}
func (u *sqlSymUnion) newTableIndexNames() tree.TableIndexNames {
	return u.val.(tree.TableIndexNames)
}
func (u *sqlSymUnion) shardedIndexDef() *tree.ShardedIndexDef {
	return u.val.(*tree.ShardedIndexDef)
}
func (u *sqlSymUnion) nameList() tree.NameList {
	return u.val.(tree.NameList)
}
func (u *sqlSymUnion) unresolvedName() *tree.UnresolvedName {
	return u.val.(*tree.UnresolvedName)
}
func (u *sqlSymUnion) unresolvedObjectName() *tree.UnresolvedObjectName {
	return u.val.(*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) unresolvedObjectNames() []*tree.UnresolvedObjectName {
	return u.val.([]*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) functionReference() tree.FunctionReference {
	return u.val.(tree.FunctionReference)
}
func (u *sqlSymUnion) tablePatterns() tree.TablePatterns {
	return u.val.(tree.TablePatterns)
}
func (u *sqlSymUnion) tableNames() tree.TableNames {
	return u.val.(tree.TableNames)
}
func (u *sqlSymUnion) indexFlags() *tree.IndexFlags {
	return u.val.(*tree.IndexFlags)
}
func (u *sqlSymUnion) arraySubscript() *tree.ArraySubscript {
	return u.val.(*tree.ArraySubscript)
}
func (u *sqlSymUnion) arraySubscripts() tree.ArraySubscripts {
	if as, ok := u.val.(tree.ArraySubscripts); ok {
		return as
	}
	return nil
}
func (u *sqlSymUnion) stmt() tree.Statement {
	if stmt, ok := u.val.(tree.Statement); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) cte() *tree.CTE {
	if cte, ok := u.val.(*tree.CTE); ok {
		return cte
	}
	return nil
}
func (u *sqlSymUnion) ctes() []*tree.CTE {
	return u.val.([]*tree.CTE)
}
func (u *sqlSymUnion) with() *tree.With {
	if with, ok := u.val.(*tree.With); ok {
		return with
	}
	return nil
}
func (u *sqlSymUnion) slct() *tree.Select {
	return u.val.(*tree.Select)
}
func (u *sqlSymUnion) selectStmt() tree.SelectStatement {
	return u.val.(tree.SelectStatement)
}
func (u *sqlSymUnion) colDef() *tree.ColumnTableDef {
	return u.val.(*tree.ColumnTableDef)
}
func (u *sqlSymUnion) constraintDef() tree.ConstraintTableDef {
	return u.val.(tree.ConstraintTableDef)
}
func (u *sqlSymUnion) tblDef() tree.TableDef {
	return u.val.(tree.TableDef)
}
func (u *sqlSymUnion) tblDefs() tree.TableDefs {
	return u.val.(tree.TableDefs)
}
func (u *sqlSymUnion) likeTableOption() tree.LikeTableOption {
	return u.val.(tree.LikeTableOption)
}
func (u *sqlSymUnion) likeTableOptionList() []tree.LikeTableOption {
	return u.val.([]tree.LikeTableOption)
}
func (u *sqlSymUnion) colQual() tree.NamedColumnQualification {
	return u.val.(tree.NamedColumnQualification)
}
func (u *sqlSymUnion) colQualElem() tree.ColumnQualification {
	return u.val.(tree.ColumnQualification)
}
func (u *sqlSymUnion) colQuals() []tree.NamedColumnQualification {
	return u.val.([]tree.NamedColumnQualification)
}
func (u *sqlSymUnion) storageParam() tree.StorageParam {
	return u.val.(tree.StorageParam)
}
func (u *sqlSymUnion) storageParams() []tree.StorageParam {
	if params, ok := u.val.([]tree.StorageParam); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) persistenceType() bool {
	return u.val.(bool)
}
func (u *sqlSymUnion) colType() *types.T {
	if colType, ok := u.val.(*types.T); ok && colType != nil {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) tableRefCols() []tree.ColumnID {
	if refCols, ok := u.val.([]tree.ColumnID); ok {
		return refCols
	}
	return nil
}
func (u *sqlSymUnion) colTypes() []*types.T {
	return u.val.([]*types.T)
}
func (u *sqlSymUnion) int32() int32 {
	return u.val.(int32)
}
func (u *sqlSymUnion) int64() int64 {
	return u.val.(int64)
}
func (u *sqlSymUnion) seqOpt() tree.SequenceOption {
	return u.val.(tree.SequenceOption)
}
func (u *sqlSymUnion) seqOpts() []tree.SequenceOption {
	return u.val.([]tree.SequenceOption)
}
func (u *sqlSymUnion) expr() tree.Expr {
	if expr, ok := u.val.(tree.Expr); ok {
		return expr
	}
	return nil
}
func (u *sqlSymUnion) exprs() tree.Exprs {
	return u.val.(tree.Exprs)
}
func (u *sqlSymUnion) selExpr() tree.SelectExpr {
	return u.val.(tree.SelectExpr)
}
func (u *sqlSymUnion) selExprs() tree.SelectExprs {
	return u.val.(tree.SelectExprs)
}
func (u *sqlSymUnion) retClause() tree.ReturningClause {
	return u.val.(tree.ReturningClause)
}
func (u *sqlSymUnion) aliasClause() tree.AliasClause {
	return u.val.(tree.AliasClause)
}
func (u *sqlSymUnion) asOfClause() tree.AsOfClause {
	return u.val.(tree.AsOfClause)
}
func (u *sqlSymUnion) tblExpr() tree.TableExpr {
	return u.val.(tree.TableExpr)
}
func (u *sqlSymUnion) tblExprs() tree.TableExprs {
	return u.val.(tree.TableExprs)
}
func (u *sqlSymUnion) from() tree.From {
	return u.val.(tree.From)
}
func (u *sqlSymUnion) int32s() []int32 {
	return u.val.([]int32)
}
func (u *sqlSymUnion) joinCond() tree.JoinCond {
	return u.val.(tree.JoinCond)
}
func (u *sqlSymUnion) when() *tree.When {
	return u.val.(*tree.When)
}
func (u *sqlSymUnion) whens() []*tree.When {
	return u.val.([]*tree.When)
}
func (u *sqlSymUnion) lockingClause() tree.LockingClause {
	return u.val.(tree.LockingClause)
}
func (u *sqlSymUnion) lockingItem() *tree.LockingItem {
	return u.val.(*tree.LockingItem)
}
func (u *sqlSymUnion) lockingStrength() tree.LockingStrength {
	return u.val.(tree.LockingStrength)
}
func (u *sqlSymUnion) lockingWaitPolicy() tree.LockingWaitPolicy {
	return u.val.(tree.LockingWaitPolicy)
}
func (u *sqlSymUnion) updateExpr() *tree.UpdateExpr {
	return u.val.(*tree.UpdateExpr)
}
func (u *sqlSymUnion) updateExprs() tree.UpdateExprs {
	return u.val.(tree.UpdateExprs)
}
func (u *sqlSymUnion) limit() *tree.Limit {
	return u.val.(*tree.Limit)
}
func (u *sqlSymUnion) targetList() tree.TargetList {
	return u.val.(tree.TargetList)
}
func (u *sqlSymUnion) targetListPtr() *tree.TargetList {
	return u.val.(*tree.TargetList)
}
func (u *sqlSymUnion) privilegeType() privilege.Kind {
	return u.val.(privilege.Kind)
}
func (u *sqlSymUnion) privilegeList() privilege.List {
	return u.val.(privilege.List)
}
func (u *sqlSymUnion) onConflict() *tree.OnConflict {
	return u.val.(*tree.OnConflict)
}
func (u *sqlSymUnion) orderBy() tree.OrderBy {
	return u.val.(tree.OrderBy)
}
func (u *sqlSymUnion) order() *tree.Order {
	return u.val.(*tree.Order)
}
func (u *sqlSymUnion) orders() []*tree.Order {
	return u.val.([]*tree.Order)
}
func (u *sqlSymUnion) groupBy() tree.GroupBy {
	return u.val.(tree.GroupBy)
}
func (u *sqlSymUnion) windowFrame() *tree.WindowFrame {
	return u.val.(*tree.WindowFrame)
}
func (u *sqlSymUnion) windowFrameBounds() tree.WindowFrameBounds {
	return u.val.(tree.WindowFrameBounds)
}
func (u *sqlSymUnion) windowFrameBound() *tree.WindowFrameBound {
	return u.val.(*tree.WindowFrameBound)
}
func (u *sqlSymUnion) windowFrameExclusion() tree.WindowFrameExclusion {
	return u.val.(tree.WindowFrameExclusion)
}
func (u *sqlSymUnion) distinctOn() tree.DistinctOn {
	return u.val.(tree.DistinctOn)
}
func (u *sqlSymUnion) dir() tree.Direction {
	return u.val.(tree.Direction)
}
func (u *sqlSymUnion) nullsOrder() tree.NullsOrder {
	return u.val.(tree.NullsOrder)
}
func (u *sqlSymUnion) alterTableCmd() tree.AlterTableCmd {
	return u.val.(tree.AlterTableCmd)
}
func (u *sqlSymUnion) alterTableCmds() tree.AlterTableCmds {
	return u.val.(tree.AlterTableCmds)
}
func (u *sqlSymUnion) alterIndexCmd() tree.AlterIndexCmd {
	return u.val.(tree.AlterIndexCmd)
}
func (u *sqlSymUnion) alterIndexCmds() tree.AlterIndexCmds {
	return u.val.(tree.AlterIndexCmds)
}
func (u *sqlSymUnion) isoLevel() tree.IsolationLevel {
	return u.val.(tree.IsolationLevel)
}
func (u *sqlSymUnion) userPriority() tree.UserPriority {
	return u.val.(tree.UserPriority)
}
func (u *sqlSymUnion) readWriteMode() tree.ReadWriteMode {
	return u.val.(tree.ReadWriteMode)
}
func (u *sqlSymUnion) idxElem() tree.IndexElem {
	return u.val.(tree.IndexElem)
}
func (u *sqlSymUnion) idxElems() tree.IndexElemList {
	return u.val.(tree.IndexElemList)
}
func (u *sqlSymUnion) dropBehavior() tree.DropBehavior {
	return u.val.(tree.DropBehavior)
}
func (u *sqlSymUnion) validationBehavior() tree.ValidationBehavior {
	return u.val.(tree.ValidationBehavior)
}
func (u *sqlSymUnion) interleave() *tree.InterleaveDef {
	return u.val.(*tree.InterleaveDef)
}
func (u *sqlSymUnion) partitionBy() *tree.PartitionBy {
	return u.val.(*tree.PartitionBy)
}
func (u *sqlSymUnion) createTableOnCommitSetting() tree.CreateTableOnCommitSetting {
	return u.val.(tree.CreateTableOnCommitSetting)
}
func (u *sqlSymUnion) listPartition() tree.ListPartition {
	return u.val.(tree.ListPartition)
}
func (u *sqlSymUnion) listPartitions() []tree.ListPartition {
	return u.val.([]tree.ListPartition)
}
func (u *sqlSymUnion) rangePartition() tree.RangePartition {
	return u.val.(tree.RangePartition)
}
func (u *sqlSymUnion) rangePartitions() []tree.RangePartition {
	return u.val.([]tree.RangePartition)
}
func (u *sqlSymUnion) setZoneConfig() *tree.SetZoneConfig {
	return u.val.(*tree.SetZoneConfig)
}
func (u *sqlSymUnion) tuples() []*tree.Tuple {
	return u.val.([]*tree.Tuple)
}
func (u *sqlSymUnion) tuple() *tree.Tuple {
	return u.val.(*tree.Tuple)
}
func (u *sqlSymUnion) windowDef() *tree.WindowDef {
	return u.val.(*tree.WindowDef)
}
func (u *sqlSymUnion) window() tree.Window {
	return u.val.(tree.Window)
}
func (u *sqlSymUnion) op() tree.Operator {
	return u.val.(tree.Operator)
}
func (u *sqlSymUnion) cmpOp() tree.ComparisonOperator {
	return u.val.(tree.ComparisonOperator)
}
func (u *sqlSymUnion) intervalTypeMetadata() types.IntervalTypeMetadata {
	return u.val.(types.IntervalTypeMetadata)
}
func (u *sqlSymUnion) kvOption() tree.KVOption {
	return u.val.(tree.KVOption)
}
func (u *sqlSymUnion) kvOptions() []tree.KVOption {
	if colType, ok := u.val.([]tree.KVOption); ok {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) backupOptions() *tree.BackupOptions {
	return u.val.(*tree.BackupOptions)
}
func (u *sqlSymUnion) transactionModes() tree.TransactionModes {
	return u.val.(tree.TransactionModes)
}
func (u *sqlSymUnion) compositeKeyMatchMethod() tree.CompositeKeyMatchMethod {
	return u.val.(tree.CompositeKeyMatchMethod)
}
func (u *sqlSymUnion) referenceAction() tree.ReferenceAction {
	return u.val.(tree.ReferenceAction)
}
func (u *sqlSymUnion) referenceActions() tree.ReferenceActions {
	return u.val.(tree.ReferenceActions)
}
func (u *sqlSymUnion) createStatsOptions() *tree.CreateStatsOptions {
	return u.val.(*tree.CreateStatsOptions)
}
func (u *sqlSymUnion) scrubOptions() tree.ScrubOptions {
	return u.val.(tree.ScrubOptions)
}
func (u *sqlSymUnion) scrubOption() tree.ScrubOption {
	return u.val.(tree.ScrubOption)
}
func (u *sqlSymUnion) resolvableFuncRefFromName() tree.ResolvableFunctionReference {
	return tree.ResolvableFunctionReference{FunctionReference: u.unresolvedName()}
}
func (u *sqlSymUnion) rowsFromExpr() *tree.RowsFromExpr {
	return u.val.(*tree.RowsFromExpr)
}
func (u *sqlSymUnion) stringOrPlaceholderOptList() tree.StringOrPlaceholderOptList {
	return u.val.(tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) listOfStringOrPlaceholderOptList() []tree.StringOrPlaceholderOptList {
	return u.val.([]tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) fullBackupClause() *tree.FullBackupClause {
	return u.val.(*tree.FullBackupClause)
}
func (u *sqlSymUnion) geoShapeType() geopb.ShapeType {
	return u.val.(geopb.ShapeType)
}
func newNameFromStr(s string) *tree.Name {
	return (*tree.Name)(&s)
}
func (u *sqlSymUnion) typeReference() tree.ResolvableTypeReference {
	return u.val.(tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) typeReferences() []tree.ResolvableTypeReference {
	return u.val.([]tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) alterTypeAddValuePlacement() *tree.AlterTypeAddValuePlacement {
	return u.val.(*tree.AlterTypeAddValuePlacement)
}
func (u *sqlSymUnion) scheduleState() tree.ScheduleState {
	return u.val.(tree.ScheduleState)
}
func (u *sqlSymUnion) executorType() tree.ScheduledJobExecutorType {
	return u.val.(tree.ScheduledJobExecutorType)
}

//line sql-gen.y:667
type sqlSymType struct {
	yys   int
	id    int32
	pos   int32
	str   string
	union sqlSymUnion
}

const IDENT = lex.IDENT
const SCONST = lex.SCONST
const BCONST = lex.BCONST
const BITCONST = lex.BITCONST
const ICONST = lex.ICONST
const FCONST = lex.FCONST
const PLACEHOLDER = lex.PLACEHOLDER
const TYPECAST = lex.TYPECAST
const TYPEANNOTATE = lex.TYPEANNOTATE
const DOT_DOT = lex.DOT_DOT
const LESS_EQUALS = lex.LESS_EQUALS
const GREATER_EQUALS = lex.GREATER_EQUALS
const NOT_EQUALS = lex.NOT_EQUALS
const NOT_REGMATCH = lex.NOT_REGMATCH
const REGIMATCH = lex.REGIMATCH
const NOT_REGIMATCH = lex.NOT_REGIMATCH
const ERROR = lex.ERROR
const ABORT = lex.ABORT
const ACTION = lex.ACTION
const ADD = lex.ADD
const ADMIN = lex.ADMIN
const AFTER = lex.AFTER
const AGGREGATE = lex.AGGREGATE
const ALL = lex.ALL
const ALTER = lex.ALTER
const ALWAYS = lex.ALWAYS
const ANALYSE = lex.ANALYSE
const ANALYZE = lex.ANALYZE
const AND = lex.AND
const AND_AND = lex.AND_AND
const ANY = lex.ANY
const ANNOTATE_TYPE = lex.ANNOTATE_TYPE
const ARRAY = lex.ARRAY
const AS = lex.AS
const ASC = lex.ASC
const ASYMMETRIC = lex.ASYMMETRIC
const AT = lex.AT
const ATTRIBUTE = lex.ATTRIBUTE
const AUTHORIZATION = lex.AUTHORIZATION
const AUTOMATIC = lex.AUTOMATIC
const BACKUP = lex.BACKUP
const BEFORE = lex.BEFORE
const BEGIN = lex.BEGIN
const BETWEEN = lex.BETWEEN
const BIGINT = lex.BIGINT
const BIGSERIAL = lex.BIGSERIAL
const BIT = lex.BIT
const BUCKET_COUNT = lex.BUCKET_COUNT
const BOOLEAN = lex.BOOLEAN
const BOTH = lex.BOTH
const BUNDLE = lex.BUNDLE
const BY = lex.BY
const CACHE = lex.CACHE
const CANCEL = lex.CANCEL
const CASCADE = lex.CASCADE
const CASE = lex.CASE
const CAST = lex.CAST
const CBRT = lex.CBRT
const CHANGEFEED = lex.CHANGEFEED
const CHAR = lex.CHAR
const CHARACTER = lex.CHARACTER
const CHARACTERISTICS = lex.CHARACTERISTICS
const CHECK = lex.CHECK
const CLOSE = lex.CLOSE
const CLUSTER = lex.CLUSTER
const COALESCE = lex.COALESCE
const COLLATE = lex.COLLATE
const COLLATION = lex.COLLATION
const COLUMN = lex.COLUMN
const COLUMNS = lex.COLUMNS
const COMMENT = lex.COMMENT
const COMMENTS = lex.COMMENTS
const COMMIT = lex.COMMIT
const COMMITTED = lex.COMMITTED
const COMPACT = lex.COMPACT
const COMPLETE = lex.COMPLETE
const CONCAT = lex.CONCAT
const CONCURRENTLY = lex.CONCURRENTLY
const CONFIGURATION = lex.CONFIGURATION
const CONFIGURATIONS = lex.CONFIGURATIONS
const CONFIGURE = lex.CONFIGURE
const CONFLICT = lex.CONFLICT
const CONSTRAINT = lex.CONSTRAINT
const CONSTRAINTS = lex.CONSTRAINTS
const CONTAINS = lex.CONTAINS
const CONVERSION = lex.CONVERSION
const COPY = lex.COPY
const COVERING = lex.COVERING
const CREATE = lex.CREATE
const CREATEROLE = lex.CREATEROLE
const CROSS = lex.CROSS
const CUBE = lex.CUBE
const CURRENT = lex.CURRENT
const CURRENT_CATALOG = lex.CURRENT_CATALOG
const CURRENT_DATE = lex.CURRENT_DATE
const CURRENT_SCHEMA = lex.CURRENT_SCHEMA
const CURRENT_ROLE = lex.CURRENT_ROLE
const CURRENT_TIME = lex.CURRENT_TIME
const CURRENT_TIMESTAMP = lex.CURRENT_TIMESTAMP
const CURRENT_USER = lex.CURRENT_USER
const CYCLE = lex.CYCLE
const DATA = lex.DATA
const DATABASE = lex.DATABASE
const DATABASES = lex.DATABASES
const DATE = lex.DATE
const DAY = lex.DAY
const DEC = lex.DEC
const DECIMAL = lex.DECIMAL
const DEFAULT = lex.DEFAULT
const DEFAULTS = lex.DEFAULTS
const DEALLOCATE = lex.DEALLOCATE
const DECLARE = lex.DECLARE
const DEFERRABLE = lex.DEFERRABLE
const DEFERRED = lex.DEFERRED
const DELETE = lex.DELETE
const DESC = lex.DESC
const DETACHED = lex.DETACHED
const DISCARD = lex.DISCARD
const DISTINCT = lex.DISTINCT
const DO = lex.DO
const DOMAIN = lex.DOMAIN
const DOUBLE = lex.DOUBLE
const DROP = lex.DROP
const ELSE = lex.ELSE
const ENCODING = lex.ENCODING
const ENCRYPTION_PASSPHRASE = lex.ENCRYPTION_PASSPHRASE
const END = lex.END
const ENUM = lex.ENUM
const ESCAPE = lex.ESCAPE
const EXCEPT = lex.EXCEPT
const EXCLUDE = lex.EXCLUDE
const EXCLUDING = lex.EXCLUDING
const EXISTS = lex.EXISTS
const EXECUTE = lex.EXECUTE
const EXECUTION = lex.EXECUTION
const EXPERIMENTAL = lex.EXPERIMENTAL
const EXPERIMENTAL_FINGERPRINTS = lex.EXPERIMENTAL_FINGERPRINTS
const EXPERIMENTAL_REPLICA = lex.EXPERIMENTAL_REPLICA
const EXPERIMENTAL_AUDIT = lex.EXPERIMENTAL_AUDIT
const EXPIRATION = lex.EXPIRATION
const EXPLAIN = lex.EXPLAIN
const EXPORT = lex.EXPORT
const EXTENSION = lex.EXTENSION
const EXTRACT = lex.EXTRACT
const EXTRACT_DURATION = lex.EXTRACT_DURATION
const FALSE = lex.FALSE
const FAMILY = lex.FAMILY
const FETCH = lex.FETCH
const FETCHVAL = lex.FETCHVAL
const FETCHTEXT = lex.FETCHTEXT
const FETCHVAL_PATH = lex.FETCHVAL_PATH
const FETCHTEXT_PATH = lex.FETCHTEXT_PATH
const FILES = lex.FILES
const FILTER = lex.FILTER
const FIRST = lex.FIRST
const FLOAT = lex.FLOAT
const FLOAT4 = lex.FLOAT4
const FLOAT8 = lex.FLOAT8
const FLOORDIV = lex.FLOORDIV
const FOLLOWING = lex.FOLLOWING
const FOR = lex.FOR
const FORCE_INDEX = lex.FORCE_INDEX
const FOREIGN = lex.FOREIGN
const FROM = lex.FROM
const FULL = lex.FULL
const FUNCTION = lex.FUNCTION
const GENERATED = lex.GENERATED
const GEOGRAPHY = lex.GEOGRAPHY
const GEOMETRY = lex.GEOMETRY
const GEOMETRYCOLLECTION = lex.GEOMETRYCOLLECTION
const GLOBAL = lex.GLOBAL
const GRANT = lex.GRANT
const GRANTS = lex.GRANTS
const GREATEST = lex.GREATEST
const GROUP = lex.GROUP
const GROUPING = lex.GROUPING
const GROUPS = lex.GROUPS
const HAVING = lex.HAVING
const HASH = lex.HASH
const HIGH = lex.HIGH
const HISTOGRAM = lex.HISTOGRAM
const HOUR = lex.HOUR
const IDENTITY = lex.IDENTITY
const IF = lex.IF
const IFERROR = lex.IFERROR
const IFNULL = lex.IFNULL
const IGNORE_FOREIGN_KEYS = lex.IGNORE_FOREIGN_KEYS
const ILIKE = lex.ILIKE
const IMMEDIATE = lex.IMMEDIATE
const IMPORT = lex.IMPORT
const IN = lex.IN
const INCLUDE = lex.INCLUDE
const INCLUDING = lex.INCLUDING
const INCREMENT = lex.INCREMENT
const INCREMENTAL = lex.INCREMENTAL
const INET = lex.INET
const INET_CONTAINED_BY_OR_EQUALS = lex.INET_CONTAINED_BY_OR_EQUALS
const INET_CONTAINS_OR_EQUALS = lex.INET_CONTAINS_OR_EQUALS
const INDEX = lex.INDEX
const INDEXES = lex.INDEXES
const INJECT = lex.INJECT
const INTERLEAVE = lex.INTERLEAVE
const INITIALLY = lex.INITIALLY
const INNER = lex.INNER
const INSERT = lex.INSERT
const INT = lex.INT
const INTEGER = lex.INTEGER
const INTERSECT = lex.INTERSECT
const INTERVAL = lex.INTERVAL
const INTO = lex.INTO
const INVERTED = lex.INVERTED
const IS = lex.IS
const ISERROR = lex.ISERROR
const ISNULL = lex.ISNULL
const ISOLATION = lex.ISOLATION
const JOB = lex.JOB
const JOBS = lex.JOBS
const JOIN = lex.JOIN
const JSON = lex.JSON
const JSONB = lex.JSONB
const JSON_SOME_EXISTS = lex.JSON_SOME_EXISTS
const JSON_ALL_EXISTS = lex.JSON_ALL_EXISTS
const KEY = lex.KEY
const KEYS = lex.KEYS
const KMS = lex.KMS
const KV = lex.KV
const LANGUAGE = lex.LANGUAGE
const LAST = lex.LAST
const LATERAL = lex.LATERAL
const LC_CTYPE = lex.LC_CTYPE
const LC_COLLATE = lex.LC_COLLATE
const LEADING = lex.LEADING
const LEASE = lex.LEASE
const LEAST = lex.LEAST
const LEFT = lex.LEFT
const LESS = lex.LESS
const LEVEL = lex.LEVEL
const LIKE = lex.LIKE
const LIMIT = lex.LIMIT
const LINESTRING = lex.LINESTRING
const LIST = lex.LIST
const LOCAL = lex.LOCAL
const LOCALTIME = lex.LOCALTIME
const LOCALTIMESTAMP = lex.LOCALTIMESTAMP
const LOCKED = lex.LOCKED
const LOGIN = lex.LOGIN
const LOOKUP = lex.LOOKUP
const LOW = lex.LOW
const LSHIFT = lex.LSHIFT
const MATCH = lex.MATCH
const MATERIALIZED = lex.MATERIALIZED
const MERGE = lex.MERGE
const MINVALUE = lex.MINVALUE
const MAXVALUE = lex.MAXVALUE
const MINUTE = lex.MINUTE
const MONTH = lex.MONTH
const MULTILINESTRING = lex.MULTILINESTRING
const MULTIPOINT = lex.MULTIPOINT
const MULTIPOLYGON = lex.MULTIPOLYGON
const NAN = lex.NAN
const NAME = lex.NAME
const NAMES = lex.NAMES
const NATURAL = lex.NATURAL
const NEVER = lex.NEVER
const NEXT = lex.NEXT
const NO = lex.NO
const NOCREATEROLE = lex.NOCREATEROLE
const NOLOGIN = lex.NOLOGIN
const NO_INDEX_JOIN = lex.NO_INDEX_JOIN
const NONE = lex.NONE
const NORMAL = lex.NORMAL
const NOT = lex.NOT
const NOTHING = lex.NOTHING
const NOTNULL = lex.NOTNULL
const NOWAIT = lex.NOWAIT
const NULL = lex.NULL
const NULLIF = lex.NULLIF
const NULLS = lex.NULLS
const NUMERIC = lex.NUMERIC
const OF = lex.OF
const OFF = lex.OFF
const OFFSET = lex.OFFSET
const OID = lex.OID
const OIDS = lex.OIDS
const OIDVECTOR = lex.OIDVECTOR
const ON = lex.ON
const ONLY = lex.ONLY
const OPT = lex.OPT
const OPTION = lex.OPTION
const OPTIONS = lex.OPTIONS
const OR = lex.OR
const ORDER = lex.ORDER
const ORDINALITY = lex.ORDINALITY
const OTHERS = lex.OTHERS
const OUT = lex.OUT
const OUTER = lex.OUTER
const OVER = lex.OVER
const OVERLAPS = lex.OVERLAPS
const OVERLAY = lex.OVERLAY
const OWNED = lex.OWNED
const OWNER = lex.OWNER
const OPERATOR = lex.OPERATOR
const PARENT = lex.PARENT
const PARTIAL = lex.PARTIAL
const PARTITION = lex.PARTITION
const PARTITIONS = lex.PARTITIONS
const PASSWORD = lex.PASSWORD
const PAUSE = lex.PAUSE
const PAUSED = lex.PAUSED
const PHYSICAL = lex.PHYSICAL
const PLACING = lex.PLACING
const PLAN = lex.PLAN
const PLANS = lex.PLANS
const POINT = lex.POINT
const POLYGON = lex.POLYGON
const POSITION = lex.POSITION
const PRECEDING = lex.PRECEDING
const PRECISION = lex.PRECISION
const PREPARE = lex.PREPARE
const PRESERVE = lex.PRESERVE
const PRIMARY = lex.PRIMARY
const PRIORITY = lex.PRIORITY
const PROCEDURAL = lex.PROCEDURAL
const PUBLIC = lex.PUBLIC
const PUBLICATION = lex.PUBLICATION
const QUERIES = lex.QUERIES
const QUERY = lex.QUERY
const RANGE = lex.RANGE
const RANGES = lex.RANGES
const READ = lex.READ
const REAL = lex.REAL
const RECURSIVE = lex.RECURSIVE
const RECURRING = lex.RECURRING
const REF = lex.REF
const REFERENCES = lex.REFERENCES
const REGCLASS = lex.REGCLASS
const REGPROC = lex.REGPROC
const REGPROCEDURE = lex.REGPROCEDURE
const REGNAMESPACE = lex.REGNAMESPACE
const REGTYPE = lex.REGTYPE
const REINDEX = lex.REINDEX
const REMOVE_PATH = lex.REMOVE_PATH
const RENAME = lex.RENAME
const REPEATABLE = lex.REPEATABLE
const REPLACE = lex.REPLACE
const RELEASE = lex.RELEASE
const RESET = lex.RESET
const RESTORE = lex.RESTORE
const RESTRICT = lex.RESTRICT
const RESUME = lex.RESUME
const RETURNING = lex.RETURNING
const RETRY = lex.RETRY
const REVISION_HISTORY = lex.REVISION_HISTORY
const REVOKE = lex.REVOKE
const RIGHT = lex.RIGHT
const ROLE = lex.ROLE
const ROLES = lex.ROLES
const ROLLBACK = lex.ROLLBACK
const ROLLUP = lex.ROLLUP
const ROW = lex.ROW
const ROWS = lex.ROWS
const RSHIFT = lex.RSHIFT
const RULE = lex.RULE
const RUNNING = lex.RUNNING
const SAVEPOINT = lex.SAVEPOINT
const SCATTER = lex.SCATTER
const SCHEDULE = lex.SCHEDULE
const SCHEDULES = lex.SCHEDULES
const SCHEMA = lex.SCHEMA
const SCHEMAS = lex.SCHEMAS
const SCRUB = lex.SCRUB
const SEARCH = lex.SEARCH
const SECOND = lex.SECOND
const SELECT = lex.SELECT
const SEQUENCE = lex.SEQUENCE
const SEQUENCES = lex.SEQUENCES
const SERIALIZABLE = lex.SERIALIZABLE
const SERVER = lex.SERVER
const SESSION = lex.SESSION
const SESSIONS = lex.SESSIONS
const SESSION_USER = lex.SESSION_USER
const SET = lex.SET
const SETTING = lex.SETTING
const SETTINGS = lex.SETTINGS
const SHARE = lex.SHARE
const SHOW = lex.SHOW
const SIMILAR = lex.SIMILAR
const SIMPLE = lex.SIMPLE
const SKIP = lex.SKIP
const SMALLINT = lex.SMALLINT
const SMALLSERIAL = lex.SMALLSERIAL
const SNAPSHOT = lex.SNAPSHOT
const SOME = lex.SOME
const SPLIT = lex.SPLIT
const SQL = lex.SQL
const START = lex.START
const STATISTICS = lex.STATISTICS
const STATUS = lex.STATUS
const STDIN = lex.STDIN
const STRICT = lex.STRICT
const STRING = lex.STRING
const STORAGE = lex.STORAGE
const STORE = lex.STORE
const STORED = lex.STORED
const STORING = lex.STORING
const SUBSTRING = lex.SUBSTRING
const SYMMETRIC = lex.SYMMETRIC
const SYNTAX = lex.SYNTAX
const SYSTEM = lex.SYSTEM
const SQRT = lex.SQRT
const SUBSCRIPTION = lex.SUBSCRIPTION
const TABLE = lex.TABLE
const TABLES = lex.TABLES
const TEMP = lex.TEMP
const TEMPLATE = lex.TEMPLATE
const TEMPORARY = lex.TEMPORARY
const TENANT = lex.TENANT
const TESTING_RELOCATE = lex.TESTING_RELOCATE
const EXPERIMENTAL_RELOCATE = lex.EXPERIMENTAL_RELOCATE
const TEXT = lex.TEXT
const THEN = lex.THEN
const TIES = lex.TIES
const TIME = lex.TIME
const TIMETZ = lex.TIMETZ
const TIMESTAMP = lex.TIMESTAMP
const TIMESTAMPTZ = lex.TIMESTAMPTZ
const TO = lex.TO
const THROTTLING = lex.THROTTLING
const TRAILING = lex.TRAILING
const TRACE = lex.TRACE
const TRANSACTION = lex.TRANSACTION
const TREAT = lex.TREAT
const TRIGGER = lex.TRIGGER
const TRIM = lex.TRIM
const TRUE = lex.TRUE
const TRUNCATE = lex.TRUNCATE
const TRUSTED = lex.TRUSTED
const TYPE = lex.TYPE
const TRACING = lex.TRACING
const UNBOUNDED = lex.UNBOUNDED
const UNCOMMITTED = lex.UNCOMMITTED
const UNION = lex.UNION
const UNIQUE = lex.UNIQUE
const UNKNOWN = lex.UNKNOWN
const UNLOGGED = lex.UNLOGGED
const UNSPLIT = lex.UNSPLIT
const UPDATE = lex.UPDATE
const UPSERT = lex.UPSERT
const UNTIL = lex.UNTIL
const USE = lex.USE
const USER = lex.USER
const USERS = lex.USERS
const USING = lex.USING
const UUID = lex.UUID
const VALID = lex.VALID
const VALIDATE = lex.VALIDATE
const VALUE = lex.VALUE
const VALUES = lex.VALUES
const VARBIT = lex.VARBIT
const VARCHAR = lex.VARCHAR
const VARIADIC = lex.VARIADIC
const VIEW = lex.VIEW
const VARYING = lex.VARYING
const VIRTUAL = lex.VIRTUAL
const WHEN = lex.WHEN
const WHERE = lex.WHERE
const WINDOW = lex.WINDOW
const WITH = lex.WITH
const WITHIN = lex.WITHIN
const WITHOUT = lex.WITHOUT
const WORK = lex.WORK
const WRITE = lex.WRITE
const YEAR = lex.YEAR
const ZONE = lex.ZONE
const NOT_LA = lex.NOT_LA
const WITH_LA = lex.WITH_LA
const AS_LA = lex.AS_LA
const GENERATED_ALWAYS = lex.GENERATED_ALWAYS
const CONTAINED_BY = lex.CONTAINED_BY
const POSTFIXOP = lex.POSTFIXOP
const UMINUS = lex.UMINUS
const HELPTOKEN = lex.HELPTOKEN

var sqlToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENT",
	"SCONST",
	"BCONST",
	"BITCONST",
	"ICONST",
	"FCONST",
	"PLACEHOLDER",
	"TYPECAST",
	"TYPEANNOTATE",
	"DOT_DOT",
	"LESS_EQUALS",
	"GREATER_EQUALS",
	"NOT_EQUALS",
	"NOT_REGMATCH",
	"REGIMATCH",
	"NOT_REGIMATCH",
	"ERROR",
	"ABORT",
	"ACTION",
	"ADD",
	"ADMIN",
	"AFTER",
	"AGGREGATE",
	"ALL",
	"ALTER",
	"ALWAYS",
	"ANALYSE",
	"ANALYZE",
	"AND",
	"AND_AND",
	"ANY",
	"ANNOTATE_TYPE",
	"ARRAY",
	"AS",
	"ASC",
	"ASYMMETRIC",
	"AT",
	"ATTRIBUTE",
	"AUTHORIZATION",
	"AUTOMATIC",
	"BACKUP",
	"BEFORE",
	"BEGIN",
	"BETWEEN",
	"BIGINT",
	"BIGSERIAL",
	"BIT",
	"BUCKET_COUNT",
	"BOOLEAN",
	"BOTH",
	"BUNDLE",
	"BY",
	"CACHE",
	"CANCEL",
	"CASCADE",
	"CASE",
	"CAST",
	"CBRT",
	"CHANGEFEED",
	"CHAR",
	"CHARACTER",
	"CHARACTERISTICS",
	"CHECK",
	"CLOSE",
	"CLUSTER",
	"COALESCE",
	"COLLATE",
	"COLLATION",
	"COLUMN",
	"COLUMNS",
	"COMMENT",
	"COMMENTS",
	"COMMIT",
	"COMMITTED",
	"COMPACT",
	"COMPLETE",
	"CONCAT",
	"CONCURRENTLY",
	"CONFIGURATION",
	"CONFIGURATIONS",
	"CONFIGURE",
	"CONFLICT",
	"CONSTRAINT",
	"CONSTRAINTS",
	"CONTAINS",
	"CONVERSION",
	"COPY",
	"COVERING",
	"CREATE",
	"CREATEROLE",
	"CROSS",
	"CUBE",
	"CURRENT",
	"CURRENT_CATALOG",
	"CURRENT_DATE",
	"CURRENT_SCHEMA",
	"CURRENT_ROLE",
	"CURRENT_TIME",
	"CURRENT_TIMESTAMP",
	"CURRENT_USER",
	"CYCLE",
	"DATA",
	"DATABASE",
	"DATABASES",
	"DATE",
	"DAY",
	"DEC",
	"DECIMAL",
	"DEFAULT",
	"DEFAULTS",
	"DEALLOCATE",
	"DECLARE",
	"DEFERRABLE",
	"DEFERRED",
	"DELETE",
	"DESC",
	"DETACHED",
	"DISCARD",
	"DISTINCT",
	"DO",
	"DOMAIN",
	"DOUBLE",
	"DROP",
	"ELSE",
	"ENCODING",
	"ENCRYPTION_PASSPHRASE",
	"END",
	"ENUM",
	"ESCAPE",
	"EXCEPT",
	"EXCLUDE",
	"EXCLUDING",
	"EXISTS",
	"EXECUTE",
	"EXECUTION",
	"EXPERIMENTAL",
	"EXPERIMENTAL_FINGERPRINTS",
	"EXPERIMENTAL_REPLICA",
	"EXPERIMENTAL_AUDIT",
	"EXPIRATION",
	"EXPLAIN",
	"EXPORT",
	"EXTENSION",
	"EXTRACT",
	"EXTRACT_DURATION",
	"FALSE",
	"FAMILY",
	"FETCH",
	"FETCHVAL",
	"FETCHTEXT",
	"FETCHVAL_PATH",
	"FETCHTEXT_PATH",
	"FILES",
	"FILTER",
	"FIRST",
	"FLOAT",
	"FLOAT4",
	"FLOAT8",
	"FLOORDIV",
	"FOLLOWING",
	"FOR",
	"FORCE_INDEX",
	"FOREIGN",
	"FROM",
	"FULL",
	"FUNCTION",
	"GENERATED",
	"GEOGRAPHY",
	"GEOMETRY",
	"GEOMETRYCOLLECTION",
	"GLOBAL",
	"GRANT",
	"GRANTS",
	"GREATEST",
	"GROUP",
	"GROUPING",
	"GROUPS",
	"HAVING",
	"HASH",
	"HIGH",
	"HISTOGRAM",
	"HOUR",
	"IDENTITY",
	"IF",
	"IFERROR",
	"IFNULL",
	"IGNORE_FOREIGN_KEYS",
	"ILIKE",
	"IMMEDIATE",
	"IMPORT",
	"IN",
	"INCLUDE",
	"INCLUDING",
	"INCREMENT",
	"INCREMENTAL",
	"INET",
	"INET_CONTAINED_BY_OR_EQUALS",
	"INET_CONTAINS_OR_EQUALS",
	"INDEX",
	"INDEXES",
	"INJECT",
	"INTERLEAVE",
	"INITIALLY",
	"INNER",
	"INSERT",
	"INT",
	"INTEGER",
	"INTERSECT",
	"INTERVAL",
	"INTO",
	"INVERTED",
	"IS",
	"ISERROR",
	"ISNULL",
	"ISOLATION",
	"JOB",
	"JOBS",
	"JOIN",
	"JSON",
	"JSONB",
	"JSON_SOME_EXISTS",
	"JSON_ALL_EXISTS",
	"KEY",
	"KEYS",
	"KMS",
	"KV",
	"LANGUAGE",
	"LAST",
	"LATERAL",
	"LC_CTYPE",
	"LC_COLLATE",
	"LEADING",
	"LEASE",
	"LEAST",
	"LEFT",
	"LESS",
	"LEVEL",
	"LIKE",
	"LIMIT",
	"LINESTRING",
	"LIST",
	"LOCAL",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"LOCKED",
	"LOGIN",
	"LOOKUP",
	"LOW",
	"LSHIFT",
	"MATCH",
	"MATERIALIZED",
	"MERGE",
	"MINVALUE",
	"MAXVALUE",
	"MINUTE",
	"MONTH",
	"MULTILINESTRING",
	"MULTIPOINT",
	"MULTIPOLYGON",
	"NAN",
	"NAME",
	"NAMES",
	"NATURAL",
	"NEVER",
	"NEXT",
	"NO",
	"NOCREATEROLE",
	"NOLOGIN",
	"NO_INDEX_JOIN",
	"NONE",
	"NORMAL",
	"NOT",
	"NOTHING",
	"NOTNULL",
	"NOWAIT",
	"NULL",
	"NULLIF",
	"NULLS",
	"NUMERIC",
	"OF",
	"OFF",
	"OFFSET",
	"OID",
	"OIDS",
	"OIDVECTOR",
	"ON",
	"ONLY",
	"OPT",
	"OPTION",
	"OPTIONS",
	"OR",
	"ORDER",
	"ORDINALITY",
	"OTHERS",
	"OUT",
	"OUTER",
	"OVER",
	"OVERLAPS",
	"OVERLAY",
	"OWNED",
	"OWNER",
	"OPERATOR",
	"PARENT",
	"PARTIAL",
	"PARTITION",
	"PARTITIONS",
	"PASSWORD",
	"PAUSE",
	"PAUSED",
	"PHYSICAL",
	"PLACING",
	"PLAN",
	"PLANS",
	"POINT",
	"POLYGON",
	"POSITION",
	"PRECEDING",
	"PRECISION",
	"PREPARE",
	"PRESERVE",
	"PRIMARY",
	"PRIORITY",
	"PROCEDURAL",
	"PUBLIC",
	"PUBLICATION",
	"QUERIES",
	"QUERY",
	"RANGE",
	"RANGES",
	"READ",
	"REAL",
	"RECURSIVE",
	"RECURRING",
	"REF",
	"REFERENCES",
	"REGCLASS",
	"REGPROC",
	"REGPROCEDURE",
	"REGNAMESPACE",
	"REGTYPE",
	"REINDEX",
	"REMOVE_PATH",
	"RENAME",
	"REPEATABLE",
	"REPLACE",
	"RELEASE",
	"RESET",
	"RESTORE",
	"RESTRICT",
	"RESUME",
	"RETURNING",
	"RETRY",
	"REVISION_HISTORY",
	"REVOKE",
	"RIGHT",
	"ROLE",
	"ROLES",
	"ROLLBACK",
	"ROLLUP",
	"ROW",
	"ROWS",
	"RSHIFT",
	"RULE",
	"RUNNING",
	"SAVEPOINT",
	"SCATTER",
	"SCHEDULE",
	"SCHEDULES",
	"SCHEMA",
	"SCHEMAS",
	"SCRUB",
	"SEARCH",
	"SECOND",
	"SELECT",
	"SEQUENCE",
	"SEQUENCES",
	"SERIALIZABLE",
	"SERVER",
	"SESSION",
	"SESSIONS",
	"SESSION_USER",
	"SET",
	"SETTING",
	"SETTINGS",
	"SHARE",
	"SHOW",
	"SIMILAR",
	"SIMPLE",
	"SKIP",
	"SMALLINT",
	"SMALLSERIAL",
	"SNAPSHOT",
	"SOME",
	"SPLIT",
	"SQL",
	"START",
	"STATISTICS",
	"STATUS",
	"STDIN",
	"STRICT",
	"STRING",
	"STORAGE",
	"STORE",
	"STORED",
	"STORING",
	"SUBSTRING",
	"SYMMETRIC",
	"SYNTAX",
	"SYSTEM",
	"SQRT",
	"SUBSCRIPTION",
	"TABLE",
	"TABLES",
	"TEMP",
	"TEMPLATE",
	"TEMPORARY",
	"TENANT",
	"TESTING_RELOCATE",
	"EXPERIMENTAL_RELOCATE",
	"TEXT",
	"THEN",
	"TIES",
	"TIME",
	"TIMETZ",
	"TIMESTAMP",
	"TIMESTAMPTZ",
	"TO",
	"THROTTLING",
	"TRAILING",
	"TRACE",
	"TRANSACTION",
	"TREAT",
	"TRIGGER",
	"TRIM",
	"TRUE",
	"TRUNCATE",
	"TRUSTED",
	"TYPE",
	"TRACING",
	"UNBOUNDED",
	"UNCOMMITTED",
	"UNION",
	"UNIQUE",
	"UNKNOWN",
	"UNLOGGED",
	"UNSPLIT",
	"UPDATE",
	"UPSERT",
	"UNTIL",
	"USE",
	"USER",
	"USERS",
	"USING",
	"UUID",
	"VALID",
	"VALIDATE",
	"VALUE",
	"VALUES",
	"VARBIT",
	"VARCHAR",
	"VARIADIC",
	"VIEW",
	"VARYING",
	"VIRTUAL",
	"WHEN",
	"WHERE",
	"WINDOW",
	"WITH",
	"WITHIN",
	"WITHOUT",
	"WORK",
	"WRITE",
	"YEAR",
	"ZONE",
	"NOT_LA",
	"WITH_LA",
	"AS_LA",
	"GENERATED_ALWAYS",
	"'<'",
	"'>'",
	"'='",
	"'~'",
	"CONTAINED_BY",
	"'?'",
	"POSTFIXOP",
	"'|'",
	"'#'",
	"'&'",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"'%'",
	"'^'",
	"UMINUS",
	"'['",
	"']'",
	"'('",
	"')'",
	"'.'",
	"HELPTOKEN",
	"'@'",
	"','",
	"'{'",
	"'}'",
	"':'",
}
var sqlStatenames = [...]string{}

const sqlEofCode = 1
const sqlErrCode = 2
const sqlInitialStackSize = 16

//line sql-gen.y:11289

//line yacctab:1
var sqlExca = [...]int{
	-1, 0,
	1, 29,
	-2, 1264,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 67,
	430, 188,
	-2, 0,
	-1, 77,
	202, 1072,
	214, 1072,
	230, 308,
	326, 308,
	335, 870,
	366, 308,
	378, 870,
	415, 870,
	440, 308,
	465, 870,
	-2, 0,
	-1, 83,
	230, 312,
	-2, 0,
	-1, 84,
	118, 1264,
	208, 1264,
	450, 1264,
	451, 1264,
	-2, 0,
	-1, 100,
	133, 1235,
	151, 1235,
	164, 1235,
	211, 1235,
	242, 1235,
	285, 1235,
	295, 1235,
	445, 1235,
	-2, 1206,
	-1, 133,
	141, 756,
	229, 756,
	329, 726,
	383, 726,
	433, 756,
	-2, 0,
	-1, 135,
	4, 1266,
	21, 1266,
	22, 1266,
	23, 1266,
	24, 1266,
	25, 1266,
	26, 1266,
	28, 1266,
	29, 1266,
	35, 1266,
	40, 1266,
	41, 1266,
	42, 1266,
	43, 1266,
	44, 1266,
	45, 1266,
	46, 1266,
	47, 1266,
	48, 1266,
	50, 1266,
	51, 1266,
	52, 1266,
	54, 1266,
	55, 1266,
	56, 1266,
	57, 1266,
	58, 1266,
	62, 1266,
	63, 1266,
	64, 1266,
	65, 1266,
	67, 1266,
	68, 1266,
	69, 1266,
	73, 1266,
	74, 1266,
	75, 1266,
	76, 1266,
	77, 1266,
	78, 1266,
	79, 1266,
	82, 1266,
	83, 1266,
	84, 1266,
	85, 1266,
	87, 1266,
	89, 1266,
	90, 1266,
	91, 1266,
	93, 1266,
	95, 1266,
	96, 1266,
	104, 1266,
	105, 1266,
	106, 1266,
	107, 1266,
	109, 1266,
	110, 1266,
	111, 1266,
	113, 1266,
	114, 1266,
	115, 1266,
	117, 1266,
	118, 1266,
	120, 1266,
	121, 1266,
	124, 1266,
	125, 1266,
	126, 1266,
	128, 1266,
	129, 1266,
	131, 1266,
	132, 1266,
	134, 1266,
	135, 1266,
	136, 1266,
	137, 1266,
	138, 1266,
	139, 1266,
	140, 1266,
	141, 1266,
	142, 1266,
	143, 1266,
	144, 1266,
	145, 1266,
	146, 1266,
	147, 1266,
	148, 1266,
	150, 1266,
	156, 1266,
	157, 1266,
	158, 1266,
	159, 1266,
	163, 1266,
	165, 1266,
	169, 1266,
	170, 1266,
	171, 1266,
	172, 1266,
	173, 1266,
	174, 1266,
	176, 1266,
	177, 1266,
	179, 1266,
	180, 1266,
	182, 1266,
	183, 1266,
	184, 1266,
	185, 1266,
	186, 1266,
	187, 1266,
	188, 1266,
	189, 1266,
	190, 1266,
	192, 1266,
	193, 1266,
	195, 1266,
	196, 1266,
	197, 1266,
	198, 1266,
	202, 1266,
	203, 1266,
	204, 1266,
	205, 1266,
	208, 1266,
	209, 1266,
	210, 1266,
	212, 1266,
	214, 1266,
	216, 1266,
	218, 1266,
	219, 1266,
	220, 1266,
	222, 1266,
	226, 1266,
	227, 1266,
	228, 1266,
	229, 1266,
	230, 1266,
	231, 1266,
	233, 1266,
	234, 1266,
	236, 1266,
	237, 1266,
	239, 1266,
	240, 1266,
	243, 1266,
	244, 1266,
	245, 1266,
	248, 1266,
	249, 1266,
	250, 1266,
	251, 1266,
	253, 1266,
	254, 1266,
	255, 1266,
	256, 1266,
	257, 1266,
	258, 1266,
	259, 1266,
	260, 1266,
	261, 1266,
	262, 1266,
	263, 1266,
	265, 1266,
	267, 1266,
	268, 1266,
	269, 1266,
	270, 1266,
	271, 1266,
	272, 1266,
	274, 1266,
	276, 1266,
	278, 1266,
	280, 1266,
	281, 1266,
	282, 1266,
	283, 1266,
	284, 1266,
	287, 1266,
	290, 1266,
	291, 1266,
	292, 1266,
	293, 1266,
	296, 1266,
	297, 1266,
	298, 1266,
	300, 1266,
	302, 1266,
	303, 1266,
	304, 1266,
	305, 1266,
	306, 1266,
	307, 1266,
	308, 1266,
	309, 1266,
	310, 1266,
	311, 1266,
	312, 1266,
	313, 1266,
	315, 1266,
	316, 1266,
	317, 1266,
	318, 1266,
	319, 1266,
	320, 1266,
	321, 1266,
	322, 1266,
	323, 1266,
	325, 1266,
	327, 1266,
	328, 1266,
	329, 1266,
	330, 1266,
	331, 1266,
	332, 1266,
	333, 1266,
	334, 1266,
	335, 1266,
	336, 1266,
	337, 1266,
	344, 1266,
	346, 1266,
	347, 1266,
	348, 1266,
	349, 1266,
	350, 1266,
	351, 1266,
	352, 1266,
	353, 1266,
	355, 1266,
	356, 1266,
	357, 1266,
	359, 1266,
	360, 1266,
	361, 1266,
	362, 1266,
	363, 1266,
	364, 1266,
	366, 1266,
	367, 1266,
	368, 1266,
	369, 1266,
	370, 1266,
	371, 1266,
	372, 1266,
	373, 1266,
	374, 1266,
	375, 1266,
	376, 1266,
	378, 1266,
	379, 1266,
	380, 1266,
	381, 1266,
	382, 1266,
	383, 1266,
	385, 1266,
	386, 1266,
	387, 1266,
	388, 1266,
	389, 1266,
	391, 1266,
	392, 1266,
	393, 1266,
	395, 1266,
	397, 1266,
	398, 1266,
	399, 1266,
	400, 1266,
	401, 1266,
	402, 1266,
	403, 1266,
	404, 1266,
	405, 1266,
	406, 1266,
	407, 1266,
	408, 1266,
	409, 1266,
	411, 1266,
	412, 1266,
	414, 1266,
	416, 1266,
	417, 1266,
	418, 1266,
	419, 1266,
	420, 1266,
	421, 1266,
	422, 1266,
	423, 1266,
	425, 1266,
	426, 1266,
	427, 1266,
	428, 1266,
	429, 1266,
	431, 1266,
	433, 1266,
	434, 1266,
	435, 1266,
	436, 1266,
	437, 1266,
	439, 1266,
	440, 1266,
	441, 1266,
	443, 1266,
	444, 1266,
	447, 1266,
	448, 1266,
	449, 1266,
	450, 1266,
	451, 1266,
	452, 1266,
	453, 1266,
	455, 1266,
	458, 1266,
	459, 1266,
	460, 1266,
	461, 1266,
	462, 1266,
	463, 1266,
	465, 1266,
	466, 1266,
	467, 1266,
	472, 1266,
	473, 1266,
	474, 1266,
	475, 1266,
	476, 1266,
	477, 1266,
	-2, 0,
	-1, 136,
	1, 1140,
	218, 1140,
	325, 1140,
	333, 1140,
	480, 1140,
	504, 1140,
	-2, 0,
	-1, 138,
	1, 1140,
	504, 1140,
	-2, 0,
	-1, 139,
	1, 1140,
	504, 1140,
	-2, 0,
	-1, 140,
	1, 1140,
	430, 1140,
	504, 1140,
	-2, 0,
	-1, 169,
	133, 1234,
	151, 1234,
	164, 1234,
	211, 1234,
	242, 1234,
	285, 1234,
	295, 1234,
	445, 1234,
	-2, 1209,
	-1, 205,
	4, 1273,
	5, 1273,
	6, 1273,
	7, 1273,
	8, 1273,
	9, 1273,
	10, 1273,
	21, 1273,
	22, 1273,
	23, 1273,
	24, 1273,
	25, 1273,
	26, 1273,
	28, 1273,
	29, 1273,
	35, 1273,
	36, 1273,
	40, 1273,
	41, 1273,
	42, 1273,
	43, 1273,
	44, 1273,
	45, 1273,
	46, 1273,
	47, 1273,
	48, 1273,
	50, 1273,
	51, 1273,
	52, 1273,
	54, 1273,
	55, 1273,
	56, 1273,
	57, 1273,
	58, 1273,
	59, 1273,
	60, 1273,
	61, 1273,
	62, 1273,
	63, 1273,
	64, 1273,
	65, 1273,
	67, 1273,
	68, 1273,
	69, 1273,
	71, 1273,
	73, 1273,
	74, 1273,
	75, 1273,
	76, 1273,
	77, 1273,
	78, 1273,
	79, 1273,
	82, 1273,
	83, 1273,
	84, 1273,
	85, 1273,
	87, 1273,
	89, 1273,
	90, 1273,
	91, 1273,
	93, 1273,
	94, 1273,
	95, 1273,
	96, 1273,
	97, 1273,
	98, 1273,
	99, 1273,
	100, 1273,
	101, 1273,
	102, 1273,
	103, 1273,
	104, 1273,
	105, 1273,
	106, 1273,
	107, 1273,
	108, 1273,
	109, 1273,
	110, 1273,
	111, 1273,
	112, 1273,
	113, 1273,
	114, 1273,
	115, 1273,
	117, 1273,
	118, 1273,
	120, 1273,
	121, 1273,
	124, 1273,
	125, 1273,
	126, 1273,
	128, 1273,
	129, 1273,
	131, 1273,
	132, 1273,
	134, 1273,
	135, 1273,
	136, 1273,
	137, 1273,
	138, 1273,
	139, 1273,
	140, 1273,
	141, 1273,
	142, 1273,
	143, 1273,
	144, 1273,
	145, 1273,
	146, 1273,
	147, 1273,
	148, 1273,
	149, 1273,
	150, 1273,
	156, 1273,
	157, 1273,
	158, 1273,
	159, 1273,
	163, 1273,
	165, 1273,
	168, 1273,
	169, 1273,
	170, 1273,
	171, 1273,
	172, 1273,
	173, 1273,
	174, 1273,
	176, 1273,
	177, 1273,
	179, 1273,
	180, 1273,
	182, 1273,
	183, 1273,
	184, 1273,
	185, 1273,
	186, 1273,
	187, 1273,
	188, 1273,
	189, 1273,
	190, 1273,
	191, 1273,
	192, 1273,
	193, 1273,
	195, 1273,
	196, 1273,
	197, 1273,
	198, 1273,
	202, 1273,
	203, 1273,
	204, 1273,
	205, 1273,
	207, 1273,
	208, 1273,
	209, 1273,
	210, 1273,
	212, 1273,
	214, 1273,
	215, 1273,
	216, 1273,
	217, 1273,
	218, 1273,
	219, 1273,
	220, 1273,
	221, 1273,
	222, 1273,
	226, 1273,
	227, 1273,
	228, 1273,
	229, 1273,
	230, 1273,
	231, 1273,
	233, 1273,
	234, 1273,
	236, 1273,
	237, 1273,
	238, 1273,
	239, 1273,
	240, 1273,
	241, 1273,
	243, 1273,
	244, 1273,
	245, 1273,
	246, 1273,
	247, 1273,
	248, 1273,
	249, 1273,
	250, 1273,
	251, 1273,
	253, 1273,
	254, 1273,
	255, 1273,
	256, 1273,
	257, 1273,
	258, 1273,
	259, 1273,
	260, 1273,
	261, 1273,
	262, 1273,
	263, 1273,
	265, 1273,
	266, 1273,
	267, 1273,
	268, 1273,
	269, 1273,
	270, 1273,
	271, 1273,
	272, 1273,
	273, 1273,
	274, 1273,
	275, 1273,
	276, 1273,
	277, 1273,
	278, 1273,
	279, 1273,
	280, 1273,
	281, 1273,
	282, 1273,
	283, 1273,
	284, 1273,
	287, 1273,
	291, 1273,
	292, 1273,
	293, 1273,
	296, 1273,
	297, 1273,
	298, 1273,
	299, 1273,
	300, 1273,
	301, 1273,
	302, 1273,
	303, 1273,
	304, 1273,
	305, 1273,
	306, 1273,
	307, 1273,
	308, 1273,
	309, 1273,
	310, 1273,
	311, 1273,
	312, 1273,
	313, 1273,
	315, 1273,
	316, 1273,
	317, 1273,
	318, 1273,
	319, 1273,
	320, 1273,
	321, 1273,
	322, 1273,
	323, 1273,
	325, 1273,
	327, 1273,
	328, 1273,
	329, 1273,
	330, 1273,
	331, 1273,
	332, 1273,
	333, 1273,
	334, 1273,
	335, 1273,
	336, 1273,
	337, 1273,
	344, 1273,
	346, 1273,
	347, 1273,
	348, 1273,
	349, 1273,
	350, 1273,
	351, 1273,
	352, 1273,
	353, 1273,
	355, 1273,
	356, 1273,
	357, 1273,
	358, 1273,
	359, 1273,
	360, 1273,
	361, 1273,
	362, 1273,
	363, 1273,
	364, 1273,
	366, 1273,
	367, 1273,
	368, 1273,
	369, 1273,
	370, 1273,
	371, 1273,
	372, 1273,
	373, 1273,
	374, 1273,
	375, 1273,
	376, 1273,
	378, 1273,
	379, 1273,
	380, 1273,
	381, 1273,
	382, 1273,
	383, 1273,
	384, 1273,
	385, 1273,
	386, 1273,
	387, 1273,
	388, 1273,
	389, 1273,
	390, 1273,
	391, 1273,
	392, 1273,
	393, 1273,
	395, 1273,
	397, 1273,
	398, 1273,
	399, 1273,
	400, 1273,
	401, 1273,
	402, 1273,
	403, 1273,
	404, 1273,
	405, 1273,
	406, 1273,
	407, 1273,
	408, 1273,
	409, 1273,
	411, 1273,
	412, 1273,
	413, 1273,
	414, 1273,
	416, 1273,
	417, 1273,
	418, 1273,
	419, 1273,
	420, 1273,
	421, 1273,
	422, 1273,
	423, 1273,
	425, 1273,
	426, 1273,
	427, 1273,
	428, 1273,
	429, 1273,
	431, 1273,
	433, 1273,
	434, 1273,
	435, 1273,
	436, 1273,
	437, 1273,
	438, 1273,
	439, 1273,
	440, 1273,
	441, 1273,
	443, 1273,
	444, 1273,
	446, 1273,
	447, 1273,
	448, 1273,
	449, 1273,
	450, 1273,
	451, 1273,
	452, 1273,
	453, 1273,
	454, 1273,
	455, 1273,
	458, 1273,
	459, 1273,
	460, 1273,
	461, 1273,
	462, 1273,
	463, 1273,
	465, 1273,
	466, 1273,
	467, 1273,
	472, 1273,
	473, 1273,
	474, 1273,
	475, 1273,
	476, 1273,
	477, 1273,
	478, 1273,
	485, 1273,
	492, 1273,
	493, 1273,
	494, 1273,
	501, 1273,
	505, 1273,
	-2, 0,
	-1, 605,
	167, 1979,
	430, 1979,
	484, 1979,
	503, 1979,
	-2, 0,
	-1, 606,
	167, 2062,
	430, 2062,
	484, 2062,
	503, 2062,
	-2, 0,
	-1, 607,
	167, 1967,
	430, 1967,
	484, 1967,
	503, 1967,
	-2, 0,
	-1, 609,
	167, 2160,
	430, 2160,
	484, 2160,
	503, 2160,
	-2, 0,
	-1, 611,
	167, 2190,
	430, 2190,
	484, 2190,
	503, 2190,
	-2, 0,
	-1, 618,
	167, 2077,
	430, 2077,
	484, 2077,
	503, 2077,
	-2, 580,
	-1, 648,
	503, 1920,
	506, 1920,
	-2, 810,
	-1, 649,
	503, 1922,
	506, 1922,
	-2, 811,
	-1, 650,
	503, 1921,
	506, 1921,
	-2, 812,
	-1, 651,
	506, 1855,
	-2, 813,
	-1, 673,
	164, 202,
	-2, 0,
	-1, 696,
	465, 1049,
	-2, 871,
	-1, 734,
	4, 1070,
	21, 1070,
	22, 1070,
	23, 1070,
	24, 1070,
	25, 1070,
	26, 1070,
	28, 1070,
	29, 1070,
	35, 1070,
	40, 1070,
	41, 1070,
	42, 1070,
	43, 1070,
	44, 1070,
	45, 1070,
	46, 1070,
	47, 1070,
	48, 1070,
	50, 1070,
	51, 1070,
	52, 1070,
	54, 1070,
	55, 1070,
	56, 1070,
	57, 1070,
	58, 1070,
	62, 1070,
	63, 1070,
	64, 1070,
	65, 1070,
	67, 1070,
	68, 1070,
	69, 1070,
	73, 1070,
	74, 1070,
	75, 1070,
	76, 1070,
	77, 1070,
	78, 1070,
	79, 1070,
	82, 1070,
	83, 1070,
	84, 1070,
	85, 1070,
	87, 1070,
	89, 1070,
	90, 1070,
	91, 1070,
	93, 1070,
	95, 1070,
	96, 1070,
	104, 1070,
	105, 1070,
	106, 1070,
	107, 1070,
	109, 1070,
	110, 1070,
	111, 1070,
	113, 1070,
	114, 1070,
	115, 1070,
	117, 1070,
	118, 1070,
	120, 1070,
	121, 1070,
	124, 1070,
	125, 1070,
	126, 1070,
	128, 1070,
	129, 1070,
	131, 1070,
	132, 1070,
	134, 1070,
	135, 1070,
	136, 1070,
	137, 1070,
	138, 1070,
	139, 1070,
	140, 1070,
	141, 1070,
	142, 1070,
	143, 1070,
	144, 1070,
	145, 1070,
	146, 1070,
	147, 1070,
	148, 1070,
	150, 1070,
	156, 1070,
	157, 1070,
	158, 1070,
	159, 1070,
	163, 1070,
	165, 1070,
	169, 1070,
	170, 1070,
	171, 1070,
	172, 1070,
	173, 1070,
	174, 1070,
	176, 1070,
	177, 1070,
	179, 1070,
	180, 1070,
	182, 1070,
	183, 1070,
	184, 1070,
	185, 1070,
	186, 1070,
	187, 1070,
	188, 1070,
	189, 1070,
	190, 1070,
	192, 1070,
	193, 1070,
	195, 1070,
	196, 1070,
	197, 1070,
	198, 1070,
	202, 1070,
	203, 1070,
	204, 1070,
	205, 1070,
	208, 1070,
	209, 1070,
	210, 1070,
	212, 1070,
	214, 1070,
	216, 1070,
	218, 1070,
	219, 1070,
	220, 1070,
	222, 1070,
	226, 1070,
	227, 1070,
	228, 1070,
	229, 1070,
	230, 1070,
	231, 1070,
	233, 1070,
	234, 1070,
	236, 1070,
	237, 1070,
	239, 1070,
	240, 1070,
	243, 1070,
	244, 1070,
	245, 1070,
	248, 1070,
	249, 1070,
	250, 1070,
	251, 1070,
	253, 1070,
	254, 1070,
	255, 1070,
	256, 1070,
	257, 1070,
	258, 1070,
	259, 1070,
	260, 1070,
	261, 1070,
	262, 1070,
	263, 1070,
	265, 1070,
	267, 1070,
	268, 1070,
	269, 1070,
	270, 1070,
	271, 1070,
	272, 1070,
	274, 1070,
	276, 1070,
	278, 1070,
	280, 1070,
	281, 1070,
	282, 1070,
	283, 1070,
	284, 1070,
	287, 1070,
	291, 1070,
	292, 1070,
	293, 1070,
	296, 1070,
	297, 1070,
	298, 1070,
	300, 1070,
	302, 1070,
	303, 1070,
	304, 1070,
	305, 1070,
	306, 1070,
	307, 1070,
	308, 1070,
	309, 1070,
	310, 1070,
	311, 1070,
	312, 1070,
	313, 1070,
	315, 1070,
	316, 1070,
	317, 1070,
	318, 1070,
	319, 1070,
	320, 1070,
	321, 1070,
	322, 1070,
	323, 1070,
	325, 1070,
	327, 1070,
	328, 1070,
	329, 1070,
	330, 1070,
	331, 1070,
	332, 1070,
	333, 1070,
	334, 1070,
	335, 1070,
	336, 1070,
	337, 1070,
	344, 1070,
	346, 1070,
	347, 1070,
	348, 1070,
	349, 1070,
	350, 1070,
	351, 1070,
	352, 1070,
	353, 1070,
	355, 1070,
	356, 1070,
	357, 1070,
	359, 1070,
	360, 1070,
	361, 1070,
	362, 1070,
	363, 1070,
	364, 1070,
	366, 1070,
	367, 1070,
	368, 1070,
	369, 1070,
	370, 1070,
	371, 1070,
	372, 1070,
	373, 1070,
	374, 1070,
	375, 1070,
	376, 1070,
	378, 1070,
	379, 1070,
	380, 1070,
	381, 1070,
	382, 1070,
	383, 1070,
	385, 1070,
	386, 1070,
	387, 1070,
	388, 1070,
	389, 1070,
	391, 1070,
	392, 1070,
	393, 1070,
	395, 1070,
	397, 1070,
	398, 1070,
	399, 1070,
	400, 1070,
	401, 1070,
	402, 1070,
	403, 1070,
	404, 1070,
	405, 1070,
	406, 1070,
	407, 1070,
	408, 1070,
	409, 1070,
	411, 1070,
	412, 1070,
	414, 1070,
	416, 1070,
	417, 1070,
	418, 1070,
	419, 1070,
	420, 1070,
	421, 1070,
	422, 1070,
	423, 1070,
	425, 1070,
	426, 1070,
	427, 1070,
	428, 1070,
	429, 1070,
	431, 1070,
	433, 1070,
	434, 1070,
	435, 1070,
	436, 1070,
	437, 1070,
	439, 1070,
	440, 1070,
	441, 1070,
	443, 1070,
	444, 1070,
	447, 1070,
	448, 1070,
	449, 1070,
	450, 1070,
	451, 1070,
	452, 1070,
	453, 1070,
	455, 1070,
	458, 1070,
	459, 1070,
	460, 1070,
	461, 1070,
	462, 1070,
	463, 1070,
	465, 1070,
	466, 1070,
	467, 1070,
	472, 1070,
	473, 1070,
	474, 1070,
	475, 1070,
	476, 1070,
	477, 1070,
	-2, 0,
	-1, 811,
	329, 727,
	383, 727,
	-2, 0,
	-1, 812,
	329, 726,
	383, 726,
	-2, 674,
	-1, 816,
	1, 766,
	500, 766,
	502, 766,
	504, 766,
	-2, 0,
	-1, 817,
	1, 809,
	164, 809,
	500, 809,
	502, 809,
	504, 809,
	-2, 0,
	-1, 825,
	1, 730,
	500, 730,
	502, 730,
	504, 730,
	-2, 0,
	-1, 831,
	1, 766,
	500, 766,
	502, 766,
	504, 766,
	-2, 0,
	-1, 832,
	1, 768,
	500, 768,
	502, 768,
	504, 768,
	-2, 0,
	-1, 833,
	1, 771,
	500, 771,
	502, 771,
	504, 771,
	-2, 0,
	-1, 839,
	1, 788,
	500, 788,
	502, 788,
	504, 788,
	-2, 0,
	-1, 840,
	1, 790,
	500, 790,
	502, 790,
	504, 790,
	-2, 0,
	-1, 889,
	151, 1275,
	164, 1275,
	242, 1275,
	285, 1275,
	-2, 1213,
	-1, 904,
	151, 1274,
	164, 1274,
	242, 1274,
	285, 1274,
	-2, 1210,
	-1, 930,
	503, 1919,
	-2, 588,
	-1, 958,
	5, 1911,
	501, 1909,
	-2, 1900,
	-1, 966,
	5, 1932,
	501, 1929,
	-2, 1920,
	-1, 967,
	5, 1933,
	501, 1930,
	-2, 1921,
	-1, 975,
	503, 1917,
	-2, 1899,
	-1, 976,
	501, 2268,
	-2, 1918,
	-1, 999,
	501, 2267,
	-2, 1934,
	-1, 1000,
	5, 1439,
	-2, 2238,
	-1, 1001,
	5, 1440,
	-2, 2239,
	-1, 1002,
	5, 1441,
	-2, 2253,
	-1, 1003,
	5, 1442,
	-2, 2218,
	-1, 1004,
	5, 1443,
	-2, 2251,
	-1, 1005,
	5, 1451,
	-2, 2230,
	-1, 1006,
	5, 1438,
	-2, 2226,
	-1, 1007,
	5, 1438,
	-2, 2225,
	-1, 1008,
	5, 1438,
	-2, 2244,
	-1, 1009,
	5, 1449,
	-2, 2220,
	-1, 1010,
	5, 1454,
	-2, 2219,
	-1, 1011,
	5, 1456,
	-2, 2263,
	-1, 1014,
	5, 1478,
	-2, 2256,
	-1, 1015,
	5, 1470,
	-2, 2257,
	-1, 1016,
	5, 1478,
	-2, 2258,
	-1, 1017,
	5, 1474,
	-2, 2259,
	-1, 1018,
	5, 1425,
	-2, 2231,
	-1, 1019,
	5, 1426,
	-2, 2232,
	-1, 1046,
	5, 1461,
	-2, 2264,
	-1, 1047,
	5, 1462,
	-2, 2254,
	-1, 1048,
	5, 1463,
	466, 1463,
	-2, 2221,
	-1, 1049,
	5, 1464,
	466, 1464,
	-2, 2222,
	-1, 1086,
	501, 1929,
	-2, 1920,
	-1, 1087,
	501, 1930,
	-2, 1921,
	-1, 1116,
	167, 2190,
	430, 2190,
	484, 2190,
	503, 2190,
	-2, 0,
	-1, 1119,
	1, 566,
	504, 566,
	-2, 1148,
	-1, 1244,
	346, 1895,
	385, 1895,
	494, 1895,
	-2, 1893,
	-1, 1256,
	505, 1895,
	-2, 1896,
	-1, 1263,
	1, 1046,
	500, 1046,
	502, 1046,
	504, 1046,
	-2, 1262,
	-1, 1315,
	335, 870,
	465, 870,
	-2, 307,
	-1, 1337,
	1, 1046,
	500, 1046,
	502, 1046,
	504, 1046,
	-2, 1262,
	-1, 1343,
	4, 1070,
	21, 1070,
	22, 1070,
	23, 1070,
	24, 1070,
	25, 1070,
	26, 1070,
	28, 1070,
	29, 1070,
	35, 1070,
	40, 1070,
	41, 1070,
	42, 1070,
	43, 1070,
	44, 1070,
	45, 1070,
	46, 1070,
	47, 1070,
	48, 1070,
	50, 1070,
	51, 1070,
	52, 1070,
	54, 1070,
	55, 1070,
	56, 1070,
	57, 1070,
	58, 1070,
	62, 1070,
	63, 1070,
	64, 1070,
	65, 1070,
	67, 1070,
	68, 1070,
	69, 1070,
	73, 1070,
	74, 1070,
	75, 1070,
	76, 1070,
	77, 1070,
	78, 1070,
	79, 1070,
	82, 1070,
	83, 1070,
	84, 1070,
	85, 1070,
	87, 1070,
	89, 1070,
	90, 1070,
	91, 1070,
	93, 1070,
	95, 1070,
	96, 1070,
	104, 1070,
	105, 1070,
	106, 1070,
	107, 1070,
	109, 1070,
	110, 1070,
	111, 1070,
	113, 1070,
	114, 1070,
	115, 1070,
	117, 1070,
	118, 1070,
	120, 1070,
	121, 1070,
	124, 1070,
	125, 1070,
	126, 1070,
	128, 1070,
	129, 1070,
	131, 1070,
	132, 1070,
	134, 1070,
	135, 1070,
	136, 1070,
	137, 1070,
	138, 1070,
	139, 1070,
	140, 1070,
	141, 1070,
	142, 1070,
	143, 1070,
	144, 1070,
	145, 1070,
	146, 1070,
	147, 1070,
	148, 1070,
	156, 1070,
	157, 1070,
	158, 1070,
	159, 1070,
	163, 1070,
	165, 1070,
	169, 1070,
	170, 1070,
	171, 1070,
	172, 1070,
	173, 1070,
	174, 1070,
	176, 1070,
	177, 1070,
	179, 1070,
	180, 1070,
	182, 1070,
	183, 1070,
	184, 1070,
	185, 1070,
	186, 1070,
	187, 1070,
	188, 1070,
	189, 1070,
	190, 1070,
	192, 1070,
	193, 1070,
	195, 1070,
	196, 1070,
	197, 1070,
	198, 1070,
	203, 1070,
	204, 1070,
	205, 1070,
	208, 1070,
	209, 1070,
	210, 1070,
	212, 1070,
	214, 1070,
	216, 1070,
	218, 1070,
	219, 1070,
	220, 1070,
	222, 1070,
	226, 1070,
	227, 1070,
	228, 1070,
	229, 1070,
	230, 1070,
	231, 1070,
	233, 1070,
	234, 1070,
	236, 1070,
	237, 1070,
	239, 1070,
	240, 1070,
	243, 1070,
	244, 1070,
	245, 1070,
	248, 1070,
	249, 1070,
	250, 1070,
	251, 1070,
	253, 1070,
	254, 1070,
	255, 1070,
	256, 1070,
	257, 1070,
	258, 1070,
	259, 1070,
	260, 1070,
	261, 1070,
	262, 1070,
	263, 1070,
	265, 1070,
	267, 1070,
	268, 1070,
	269, 1070,
	270, 1070,
	271, 1070,
	272, 1070,
	274, 1070,
	278, 1070,
	280, 1070,
	281, 1070,
	282, 1070,
	283, 1070,
	284, 1070,
	287, 1070,
	289, 1070,
	291, 1070,
	292, 1070,
	293, 1070,
	296, 1070,
	297, 1070,
	298, 1070,
	300, 1070,
	302, 1070,
	303, 1070,
	304, 1070,
	305, 1070,
	306, 1070,
	307, 1070,
	308, 1070,
	309, 1070,
	310, 1070,
	311, 1070,
	312, 1070,
	313, 1070,
	315, 1070,
	316, 1070,
	317, 1070,
	318, 1070,
	319, 1070,
	320, 1070,
	321, 1070,
	322, 1070,
	323, 1070,
	325, 1070,
	327, 1070,
	328, 1070,
	329, 1070,
	330, 1070,
	331, 1070,
	332, 1070,
	333, 1070,
	334, 1070,
	335, 1070,
	336, 1070,
	337, 1070,
	344, 1070,
	346, 1070,
	347, 1070,
	348, 1070,
	349, 1070,
	350, 1070,
	351, 1070,
	352, 1070,
	353, 1070,
	355, 1070,
	356, 1070,
	357, 1070,
	359, 1070,
	360, 1070,
	361, 1070,
	362, 1070,
	363, 1070,
	364, 1070,
	366, 1070,
	367, 1070,
	368, 1070,
	369, 1070,
	370, 1070,
	371, 1070,
	372, 1070,
	373, 1070,
	374, 1070,
	375, 1070,
	376, 1070,
	378, 1070,
	379, 1070,
	380, 1070,
	381, 1070,
	382, 1070,
	383, 1070,
	385, 1070,
	386, 1070,
	387, 1070,
	388, 1070,
	389, 1070,
	391, 1070,
	392, 1070,
	393, 1070,
	395, 1070,
	397, 1070,
	398, 1070,
	399, 1070,
	400, 1070,
	401, 1070,
	402, 1070,
	403, 1070,
	404, 1070,
	405, 1070,
	406, 1070,
	407, 1070,
	408, 1070,
	409, 1070,
	411, 1070,
	412, 1070,
	414, 1070,
	416, 1070,
	417, 1070,
	418, 1070,
	419, 1070,
	420, 1070,
	421, 1070,
	422, 1070,
	423, 1070,
	425, 1070,
	426, 1070,
	427, 1070,
	428, 1070,
	429, 1070,
	431, 1070,
	433, 1070,
	434, 1070,
	435, 1070,
	436, 1070,
	437, 1070,
	439, 1070,
	440, 1070,
	441, 1070,
	443, 1070,
	444, 1070,
	447, 1070,
	448, 1070,
	449, 1070,
	450, 1070,
	451, 1070,
	452, 1070,
	453, 1070,
	455, 1070,
	458, 1070,
	459, 1070,
	460, 1070,
	461, 1070,
	462, 1070,
	463, 1070,
	465, 1070,
	466, 1070,
	467, 1070,
	472, 1070,
	473, 1070,
	474, 1070,
	475, 1070,
	476, 1070,
	477, 1070,
	-2, 0,
	-1, 1415,
	1, 443,
	500, 443,
	502, 443,
	504, 443,
	-2, 1233,
	-1, 1418,
	4, 2262,
	11, 2262,
	12, 2262,
	14, 2262,
	15, 2262,
	16, 2262,
	17, 2262,
	18, 2262,
	19, 2262,
	21, 2262,
	22, 2262,
	23, 2262,
	24, 2262,
	25, 2262,
	26, 2262,
	28, 2262,
	29, 2262,
	32, 2262,
	33, 2262,
	35, 2262,
	37, 2262,
	40, 2262,
	41, 2262,
	42, 2262,
	43, 2262,
	44, 2262,
	45, 2262,
	46, 2262,
	47, 2262,
	48, 2262,
	50, 2262,
	51, 2262,
	52, 2262,
	54, 2262,
	55, 2262,
	56, 2262,
	57, 2262,
	58, 2262,
	62, 2262,
	63, 2262,
	64, 2262,
	65, 2262,
	67, 2262,
	68, 2262,
	69, 2262,
	70, 2262,
	73, 2262,
	74, 2262,
	75, 2262,
	76, 2262,
	77, 2262,
	78, 2262,
	79, 2262,
	80, 2262,
	82, 2262,
	83, 2262,
	84, 2262,
	85, 2262,
	87, 2262,
	88, 2262,
	89, 2262,
	90, 2262,
	91, 2262,
	93, 2262,
	94, 2262,
	95, 2262,
	96, 2262,
	104, 2262,
	105, 2262,
	106, 2262,
	107, 2262,
	109, 2262,
	110, 2262,
	111, 2262,
	113, 2262,
	114, 2262,
	115, 2262,
	117, 2262,
	118, 2262,
	120, 2262,
	121, 2262,
	124, 2262,
	125, 2262,
	126, 2262,
	128, 2262,
	129, 2262,
	131, 2262,
	132, 2262,
	134, 2262,
	135, 2262,
	136, 2262,
	137, 2262,
	138, 2262,
	139, 2262,
	140, 2262,
	141, 2262,
	142, 2262,
	143, 2262,
	144, 2262,
	145, 2262,
	146, 2262,
	147, 2262,
	148, 2262,
	152, 2262,
	153, 2262,
	154, 2262,
	155, 2262,
	156, 2262,
	157, 2262,
	158, 2262,
	159, 2262,
	162, 2262,
	163, 2262,
	165, 2262,
	168, 2262,
	169, 2262,
	170, 2262,
	171, 2262,
	172, 2262,
	173, 2262,
	174, 2262,
	176, 2262,
	177, 2262,
	179, 2262,
	180, 2262,
	182, 2262,
	183, 2262,
	184, 2262,
	185, 2262,
	186, 2262,
	187, 2262,
	188, 2262,
	189, 2262,
	190, 2262,
	191, 2262,
	192, 2262,
	193, 2262,
	194, 2262,
	195, 2262,
	196, 2262,
	197, 2262,
	198, 2262,
	200, 2262,
	201, 2262,
	203, 2262,
	204, 2262,
	205, 2262,
	207, 2262,
	208, 2262,
	209, 2262,
	210, 2262,
	212, 2262,
	214, 2262,
	215, 2262,
	216, 2262,
	217, 2262,
	218, 2262,
	219, 2262,
	220, 2262,
	221, 2262,
	222, 2262,
	224, 2262,
	225, 2262,
	226, 2262,
	227, 2262,
	228, 2262,
	229, 2262,
	230, 2262,
	231, 2262,
	233, 2262,
	234, 2262,
	236, 2262,
	237, 2262,
	238, 2262,
	239, 2262,
	240, 2262,
	241, 2262,
	243, 2262,
	244, 2262,
	245, 2262,
	248, 2262,
	249, 2262,
	250, 2262,
	251, 2262,
	252, 2262,
	253, 2262,
	254, 2262,
	255, 2262,
	256, 2262,
	257, 2262,
	258, 2262,
	259, 2262,
	260, 2262,
	261, 2262,
	262, 2262,
	263, 2262,
	265, 2262,
	266, 2262,
	267, 2262,
	268, 2262,
	269, 2262,
	270, 2262,
	271, 2262,
	272, 2262,
	274, 2262,
	277, 2262,
	278, 2262,
	280, 2262,
	281, 2262,
	282, 2262,
	283, 2262,
	284, 2262,
	287, 2262,
	291, 2262,
	292, 2262,
	293, 2262,
	294, 2262,
	296, 2262,
	297, 2262,
	298, 2262,
	300, 2262,
	302, 2262,
	303, 2262,
	304, 2262,
	305, 2262,
	306, 2262,
	307, 2262,
	308, 2262,
	309, 2262,
	310, 2262,
	311, 2262,
	312, 2262,
	313, 2262,
	315, 2262,
	316, 2262,
	317, 2262,
	318, 2262,
	319, 2262,
	320, 2262,
	321, 2262,
	322, 2262,
	323, 2262,
	325, 2262,
	327, 2262,
	328, 2262,
	329, 2262,
	330, 2262,
	331, 2262,
	332, 2262,
	333, 2262,
	334, 2262,
	335, 2262,
	336, 2262,
	337, 2262,
	344, 2262,
	345, 2262,
	346, 2262,
	347, 2262,
	348, 2262,
	349, 2262,
	350, 2262,
	351, 2262,
	352, 2262,
	353, 2262,
	355, 2262,
	356, 2262,
	357, 2262,
	358, 2262,
	359, 2262,
	360, 2262,
	361, 2262,
	362, 2262,
	363, 2262,
	364, 2262,
	365, 2262,
	366, 2262,
	367, 2262,
	368, 2262,
	369, 2262,
	370, 2262,
	371, 2262,
	372, 2262,
	373, 2262,
	374, 2262,
	375, 2262,
	376, 2262,
	378, 2262,
	379, 2262,
	380, 2262,
	381, 2262,
	382, 2262,
	383, 2262,
	385, 2262,
	386, 2262,
	387, 2262,
	388, 2262,
	389, 2262,
	390, 2262,
	391, 2262,
	392, 2262,
	393, 2262,
	395, 2262,
	397, 2262,
	398, 2262,
	399, 2262,
	400, 2262,
	401, 2262,
	402, 2262,
	403, 2262,
	404, 2262,
	405, 2262,
	406, 2262,
	407, 2262,
	408, 2262,
	409, 2262,
	411, 2262,
	412, 2262,
	414, 2262,
	416, 2262,
	417, 2262,
	418, 2262,
	419, 2262,
	420, 2262,
	421, 2262,
	422, 2262,
	423, 2262,
	425, 2262,
	426, 2262,
	427, 2262,
	428, 2262,
	429, 2262,
	431, 2262,
	433, 2262,
	434, 2262,
	435, 2262,
	436, 2262,
	437, 2262,
	439, 2262,
	440, 2262,
	441, 2262,
	443, 2262,
	444, 2262,
	447, 2262,
	448, 2262,
	449, 2262,
	450, 2262,
	451, 2262,
	452, 2262,
	453, 2262,
	455, 2262,
	458, 2262,
	459, 2262,
	460, 2262,
	461, 2262,
	462, 2262,
	463, 2262,
	465, 2262,
	466, 2262,
	467, 2262,
	472, 2262,
	473, 2262,
	474, 2262,
	475, 2262,
	476, 2262,
	477, 2262,
	478, 2262,
	479, 2262,
	482, 2262,
	483, 2262,
	484, 2262,
	485, 2262,
	486, 2262,
	487, 2262,
	489, 2262,
	490, 2262,
	491, 2262,
	492, 2262,
	493, 2262,
	494, 2262,
	495, 2262,
	496, 2262,
	497, 2262,
	499, 2262,
	502, 2262,
	503, 2262,
	505, 2262,
	506, 2262,
	-2, 0,
	-1, 1423,
	167, 2160,
	430, 2160,
	484, 2160,
	503, 2160,
	-2, 0,
	-1, 1471,
	329, 727,
	383, 727,
	-2, 0,
	-1, 1495,
	1, 722,
	500, 722,
	502, 722,
	504, 722,
	-2, 0,
	-1, 1496,
	1, 757,
	500, 757,
	502, 757,
	504, 757,
	-2, 0,
	-1, 1497,
	1, 729,
	500, 729,
	502, 729,
	504, 729,
	-2, 0,
	-1, 1499,
	1, 733,
	500, 733,
	502, 733,
	504, 733,
	-2, 0,
	-1, 1504,
	1, 739,
	500, 739,
	502, 739,
	504, 739,
	-2, 0,
	-1, 1532,
	1, 2210,
	500, 2210,
	502, 2210,
	503, 2210,
	504, 2210,
	-2, 786,
	-1, 1533,
	1, 2157,
	500, 2157,
	502, 2157,
	503, 2157,
	504, 2157,
	-2, 787,
	-1, 1548,
	1, 1143,
	504, 1143,
	-2, 1148,
	-1, 1551,
	151, 1274,
	164, 1274,
	242, 1274,
	285, 1274,
	-2, 1214,
	-1, 1645,
	133, 1235,
	151, 1235,
	164, 1235,
	211, 1235,
	242, 1235,
	285, 1235,
	295, 1235,
	445, 1235,
	-2, 1639,
	-1, 1705,
	502, 1789,
	-2, 0,
	-1, 1740,
	133, 1235,
	151, 1235,
	164, 1235,
	211, 1235,
	242, 1235,
	285, 1235,
	295, 1235,
	445, 1235,
	-2, 1355,
	-1, 1787,
	501, 1466,
	-2, 1454,
	-1, 1820,
	1, 568,
	504, 568,
	-2, 1148,
	-1, 2043,
	1, 724,
	500, 724,
	502, 724,
	504, 724,
	-2, 0,
	-1, 2044,
	1, 759,
	500, 759,
	502, 759,
	504, 759,
	-2, 0,
	-1, 2074,
	1, 741,
	500, 741,
	502, 741,
	504, 741,
	-2, 0,
	-1, 2120,
	363, 1301,
	364, 1301,
	-2, 1499,
	-1, 2151,
	14, 0,
	15, 0,
	16, 0,
	482, 0,
	483, 0,
	484, 0,
	-2, 1519,
	-1, 2152,
	14, 0,
	15, 0,
	16, 0,
	482, 0,
	483, 0,
	484, 0,
	-2, 1520,
	-1, 2153,
	88, 0,
	224, 0,
	225, 0,
	486, 0,
	487, 0,
	-2, 1521,
	-1, 2154,
	88, 0,
	224, 0,
	225, 0,
	486, 0,
	487, 0,
	-2, 1522,
	-1, 2155,
	88, 0,
	224, 0,
	225, 0,
	486, 0,
	487, 0,
	-2, 1523,
	-1, 2156,
	88, 0,
	224, 0,
	225, 0,
	486, 0,
	487, 0,
	-2, 1524,
	-1, 2157,
	88, 0,
	224, 0,
	225, 0,
	486, 0,
	487, 0,
	-2, 1525,
	-1, 2158,
	14, 0,
	15, 0,
	16, 0,
	482, 0,
	483, 0,
	484, 0,
	-2, 1526,
	-1, 2170,
	14, 0,
	15, 0,
	16, 0,
	482, 0,
	483, 0,
	484, 0,
	-2, 1538,
	-1, 2171,
	14, 0,
	15, 0,
	16, 0,
	482, 0,
	483, 0,
	484, 0,
	-2, 1539,
	-1, 2172,
	14, 0,
	15, 0,
	16, 0,
	482, 0,
	483, 0,
	484, 0,
	-2, 1540,
	-1, 2175,
	17, 0,
	18, 0,
	19, 0,
	47, 0,
	191, 0,
	194, 0,
	241, 0,
	390, 0,
	478, 0,
	485, 0,
	-2, 1545,
	-1, 2181,
	17, 0,
	18, 0,
	19, 0,
	47, 0,
	191, 0,
	194, 0,
	241, 0,
	390, 0,
	478, 0,
	485, 0,
	-2, 1549,
	-1, 2183,
	17, 0,
	18, 0,
	19, 0,
	47, 0,
	191, 0,
	194, 0,
	241, 0,
	390, 0,
	478, 0,
	485, 0,
	-2, 1557,
	-1, 2184,
	17, 0,
	18, 0,
	19, 0,
	47, 0,
	191, 0,
	194, 0,
	241, 0,
	390, 0,
	478, 0,
	485, 0,
	-2, 1558,
	-1, 2185,
	17, 0,
	18, 0,
	19, 0,
	47, 0,
	191, 0,
	194, 0,
	241, 0,
	390, 0,
	478, 0,
	485, 0,
	-2, 1559,
	-1, 2186,
	17, 0,
	18, 0,
	19, 0,
	47, 0,
	191, 0,
	194, 0,
	241, 0,
	390, 0,
	478, 0,
	485, 0,
	-2, 1560,
	-1, 2298,
	5, 1932,
	167, 1800,
	501, 1929,
	-2, 1920,
	-1, 2299,
	167, 1801,
	-2, 2214,
	-1, 2300,
	167, 1802,
	-2, 2076,
	-1, 2301,
	167, 1803,
	-2, 1990,
	-1, 2302,
	167, 1804,
	-2, 2032,
	-1, 2303,
	167, 1805,
	-2, 2071,
	-1, 2304,
	167, 1806,
	-2, 2155,
	-1, 2305,
	167, 1807,
	-2, 1622,
	-1, 2374,
	1, 1356,
	2, 1356,
	94, 1356,
	133, 1356,
	151, 1356,
	164, 1356,
	168, 1356,
	178, 1356,
	181, 1356,
	207, 1356,
	211, 1356,
	221, 1356,
	238, 1356,
	242, 1356,
	266, 1356,
	285, 1356,
	289, 1356,
	295, 1356,
	354, 1356,
	358, 1356,
	445, 1356,
	456, 1356,
	469, 1356,
	470, 1356,
	471, 1356,
	480, 1356,
	500, 1356,
	502, 1356,
	504, 1356,
	506, 1356,
	-2, 1355,
	-1, 2387,
	501, 1901,
	-2, 1915,
	-1, 2411,
	501, 1465,
	-2, 1455,
	-1, 2528,
	1, 1046,
	500, 1046,
	502, 1046,
	504, 1046,
	-2, 1262,
	-1, 2688,
	290, 1304,
	-2, 2252,
	-1, 2689,
	290, 1305,
	-2, 2141,
	-1, 2693,
	363, 1866,
	364, 1866,
	-2, 1620,
	-1, 2694,
	363, 1870,
	364, 1870,
	-2, 1621,
	-1, 2695,
	363, 1867,
	364, 1867,
	-2, 1620,
	-1, 2696,
	363, 1871,
	364, 1871,
	-2, 1621,
	-1, 2709,
	17, 0,
	18, 0,
	19, 0,
	47, 0,
	191, 0,
	194, 0,
	241, 0,
	390, 0,
	478, 0,
	485, 0,
	-2, 1547,
	-1, 2710,
	17, 0,
	18, 0,
	19, 0,
	47, 0,
	191, 0,
	194, 0,
	241, 0,
	390, 0,
	478, 0,
	485, 0,
	-2, 1551,
	-1, 2716,
	17, 0,
	18, 0,
	19, 0,
	47, 0,
	191, 0,
	194, 0,
	241, 0,
	390, 0,
	478, 0,
	485, 0,
	-2, 1553,
	-1, 2913,
	218, 1148,
	325, 1148,
	333, 1148,
	480, 1148,
	-2, 565,
	-1, 3036,
	1, 1046,
	500, 1046,
	502, 1046,
	504, 1046,
	-2, 1262,
	-1, 3128,
	17, 0,
	18, 0,
	19, 0,
	47, 0,
	191, 0,
	194, 0,
	241, 0,
	390, 0,
	478, 0,
	485, 0,
	-2, 1555,
	-1, 3135,
	215, 0,
	217, 0,
	277, 0,
	-2, 1574,
	-1, 3202,
	14, 0,
	15, 0,
	16, 0,
	482, 0,
	483, 0,
	484, 0,
	-2, 1603,
	-1, 3203,
	14, 0,
	15, 0,
	16, 0,
	482, 0,
	483, 0,
	484, 0,
	-2, 1604,
	-1, 3204,
	14, 0,
	15, 0,
	16, 0,
	482, 0,
	483, 0,
	484, 0,
	-2, 1605,
	-1, 3208,
	14, 0,
	15, 0,
	16, 0,
	482, 0,
	483, 0,
	484, 0,
	-2, 1609,
	-1, 3209,
	14, 0,
	15, 0,
	16, 0,
	482, 0,
	483, 0,
	484, 0,
	-2, 1610,
	-1, 3210,
	14, 0,
	15, 0,
	16, 0,
	482, 0,
	483, 0,
	484, 0,
	-2, 1611,
	-1, 3256,
	501, 1902,
	-2, 1916,
	-1, 3368,
	503, 2368,
	-2, 1192,
	-1, 3419,
	215, 0,
	217, 0,
	277, 0,
	-2, 1575,
	-1, 3422,
	17, 0,
	18, 0,
	19, 0,
	47, 0,
	191, 0,
	194, 0,
	241, 0,
	390, 0,
	478, 0,
	485, 0,
	-2, 1578,
	-1, 3423,
	17, 0,
	18, 0,
	19, 0,
	47, 0,
	191, 0,
	194, 0,
	241, 0,
	390, 0,
	478, 0,
	485, 0,
	-2, 1580,
	-1, 3622,
	17, 0,
	18, 0,
	19, 0,
	47, 0,
	191, 0,
	194, 0,
	241, 0,
	390, 0,
	478, 0,
	485, 0,
	-2, 1579,
	-1, 3623,
	17, 0,
	18, 0,
	19, 0,
	47, 0,
	191, 0,
	194, 0,
	241, 0,
	390, 0,
	478, 0,
	485, 0,
	-2, 1581,
	-1, 3634,
	215, 0,
	-2, 1612,
	-1, 3778,
	215, 0,
	-2, 1613,
	-1, 3931,
	47, 0,
	191, 0,
	241, 0,
	390, 0,
	478, 0,
	485, 0,
	-2, 2217,
}

const sqlPrivate = 57344

const sqlLast = 100099

var sqlAct = [...]int{

	238, 3708, 3800, 3665, 3554, 3941, 4038, 2610, 3824, 3668,
	3906, 3900, 3402, 2843, 3888, 3870, 3930, 3022, 3885, 3278,
	3942, 3988, 3653, 3943, 2582, 1090, 3167, 3715, 3782, 1281,
	3929, 2844, 3585, 3580, 914, 3611, 3537, 2130, 3051, 3724,
	3360, 1406, 2931, 1266, 931, 1438, 3544, 3567, 3316, 2444,
	3546, 3486, 1774, 969, 1999, 1401, 3590, 3746, 2198, 3044,
	1560, 3018, 3329, 3046, 1872, 3339, 2505, 1125, 650, 2138,
	3120, 1746, 3279, 616, 2330, 2571, 2702, 230, 2619, 2554,
	1241, 2015, 36, 2131, 3639, 2545, 905, 1409, 2621, 1148,
	1079, 965, 650, 2886, 3401, 2866, 3458, 2858, 2826, 2557,
	2629, 1405, 2583, 2618, 2612, 1921, 2566, 748, 2568, 2849,
	2446, 2847, 1920, 913, 160, 3227, 1715, 1882, 2240, 2482,
	3783, 1691, 2022, 2242, 2367, 2211, 2825, 1249, 1653, 2519,
	1479, 1997, 2135, 1915, 2686, 2995, 645, 1899, 1906, 964,
	4, 1132, 2481, 941, 2628, 962, 232, 3709, 2555, 1856,
	231, 2366, 1859, 2348, 1716, 1735, 1548, 2231, 2195, 2369,
	2892, 2102, 2327, 1382, 1846, 2119, 2100, 3020, 1416, 1398,
	2576, 1392, 1070, 967, 1402, 1954, 1335, 2435, 1121, 2234,
	651, 2622, 1073, 584, 1725, 652, 1686, 2356, 2338, 1052,
	2284, 2212, 2294, 1638, 1775, 169, 1562, 170, 160, 600,
	1561, 2101, 1268, 99, 1504, 1437, 570, 1953, 1087, 2103,
	592, 1974, 647, 722, 656, 610, 1358, 1069, 659, 1012,
	696, 960, 1276, 1871, 2124, 742, 943, 1414, 587, 41,
	40, 38, 29, 27, 1050, 595, 1567, 2737, 656, 25,
	806, 1547, 659, 823, 1287, 3241, 1075, 3242, 2845, 2733,
	3061, 1129, 1575, 1576, 1990, 1990, 4096, 1990, 4091, 1990,
	2347, 4079, 3077, 1990, 4078, 2347, 909, 909, 2347, 4055,
	1732, 66, 4053, 3502, 1606, 4049, 3502, 3231, 3971, 1927,
	3965, 1578, 3972, 3077, 2347, 3060, 3963, 67, 3960, 3957,
	2347, 3952, 3961, 3958, 3927, 1927, 2911, 3926, 1927, 1082,
	71, 1927, 958, 3925, 763, 3921, 3920, 2008, 3915, 2008,
	2008, 1577, 3502, 2340, 3913, 3896, 3883, 1067, 3502, 3702,
	3502, 1597, 1106, 3864, 3857, 2746, 1988, 2402, 2347, 1594,
	3856, 2747, 3851, 3850, 2347, 77, 3502, 3502, 3844, 3780,
	3760, 3757, 1927, 2402, 1927, 3502, 3717, 1081, 3685, 3684,
	3718, 1083, 1927, 1927, 2701, 1101, 890, 3676, 889, 1053,
	1053, 1927, 3675, 3645, 3624, 1129, 3502, 1927, 2402, 83,
	3609, 2347, 3598, 3415, 2008, 910, 3077, 3532, 1498, 3521,
	3501, 2347, 98, 2347, 3502, 3421, 3376, 84, 95, 2402,
	3093, 2023, 3865, 1600, 1601, 1602, 1603, 3370, 3337, 3775,
	3251, 3093, 3338, 1583, 3252, 3763, 3249, 3234, 904, 899,
	3250, 2347, 3151, 3147, 3092, 3084, 1927, 2347, 3093, 3085,
	2398, 2798, 2799, 2842, 2816, 2817, 2818, 2347, 2008, 3702,
	2837, 1102, 1575, 1576, 2347, 1054, 85, 3231, 2339, 2836,
	2789, 1605, 1607, 2347, 2790, 2787, 2779, 2777, 2748, 2788,
	2780, 2347, 2347, 2634, 1606, 1927, 2608, 2008, 1575, 1576,
	2011, 1578, 3579, 2607, 2419, 1592, 1593, 2011, 2347, 2401,
	2396, 2390, 2346, 2402, 2347, 1927, 2347, 2347, 2736, 2010,
	1606, 3522, 1280, 2011, 1056, 1927, 1057, 1578, 3085, 2496,
	2813, 1577, 2434, 1598, 1826, 1989, 2551, 1926, 1876, 1575,
	1576, 1597, 2513, 2432, 1711, 1275, 3308, 3123, 3101, 1733,
	1085, 1909, 3062, 1481, 2383, 2798, 2799, 1577, 2816, 2817,
	2818, 2382, 2381, 2380, 2379, 1058, 1055, 1597, 1578, 898,
	897, 3063, 3474, 205, 2400, 1594, 3417, 896, 895, 894,
	893, 1246, 892, 888, 887, 2666, 3948, 886, 1991, 1991,
	885, 1991, 205, 1991, 88, 2798, 2799, 1991, 1577, 884,
	883, 882, 881, 880, 879, 878, 877, 876, 875, 874,
	873, 207, 2804, 1600, 1601, 1602, 1603, 872, 854, 3132,
	804, 803, 802, 1583, 2813, 801, 1604, 1280, 800, 3060,
	207, 799, 798, 168, 91, 797, 94, 796, 795, 1600,
	1601, 1602, 1603, 794, 2820, 793, 1599, 792, 791, 1583,
	790, 789, 788, 787, 786, 967, 785, 206, 84, 967,
	205, 1605, 1607, 784, 2813, 2819, 783, 782, 747, 781,
	780, 779, 133, 1446, 1151, 1102, 206, 778, 1151, 777,
	776, 766, 1271, 765, 761, 760, 199, 1605, 1607, 1131,
	1583, 754, 2339, 1136, 200, 753, 713, 171, 207, 3343,
	3433, 1102, 2814, 712, 672, 967, 2804, 967, 671, 967,
	670, 1592, 1593, 1598, 1271, 662, 171, 661, 660, 2267,
	630, 622, 135, 1301, 621, 620, 604, 226, 225, 224,
	223, 222, 221, 1252, 220, 1257, 172, 219, 1271, 1598,
	2579, 3262, 2596, 2006, 206, 2003, 2804, 1989, 218, 2253,
	217, 2095, 216, 1244, 199, 215, 1256, 1259, 214, 2819,
	2798, 2799, 200, 2816, 2817, 2818, 1279, 1595, 1591, 1263,
	1588, 1586, 1587, 1579, 1580, 1581, 1582, 1584, 1585, 1271,
	967, 213, 1260, 212, 171, 1271, 211, 3245, 1286, 1271,
	1293, 210, 1299, 205, 1340, 1342, 2814, 967, 209, 967,
	208, 1304, 3094, 1271, 2889, 2759, 1604, 2742, 1119, 967,
	2532, 967, 2840, 2562, 1694, 2815, 1259, 1259, 1694, 2406,
	1693, 2798, 2799, 2388, 1693, 1337, 1599, 1736, 2373, 2813,
	2251, 207, 1604, 2841, 1854, 1289, 2814, 1331, 1759, 1664,
	656, 1283, 1697, 1138, 659, 1144, 1692, 1238, 1243, 1089,
	1574, 1271, 1599, 2018, 1259, 3928, 1575, 1576, 1655, 3831,
	3772, 3638, 3663, 1412, 3599, 1114, 3578, 967, 2501, 3766,
	967, 3764, 3594, 3479, 1278, 3456, 1425, 206, 1606, 1277,
	1430, 3455, 1435, 3449, 1500, 1578, 3448, 199, 3447, 3440,
	1439, 205, 1444, 3439, 1449, 200, 3437, 3432, 3429, 160,
	160, 3428, 3336, 133, 3266, 3265, 1295, 3264, 1300, 2815,
	1432, 2804, 3255, 3342, 1662, 1577, 3222, 171, 1655, 3221,
	1451, 3220, 3143, 3139, 3088, 2884, 1419, 1421, 2017, 207,
	2833, 2824, 2810, 2811, 2812, 2797, 1386, 1389, 1463, 2809,
	2807, 2808, 2800, 2801, 2802, 2803, 2805, 2806, 1499, 2815,
	1588, 1586, 1587, 1579, 1580, 1581, 1582, 1584, 1585, 3306,
	967, 967, 967, 967, 967, 967, 967, 2794, 2793, 1361,
	2791, 2786, 2804, 1595, 1591, 206, 1588, 1586, 1587, 1579,
	1580, 1581, 1582, 1584, 1585, 199, 2785, 1417, 910, 3784,
	2784, 967, 2781, 200, 1656, 1288, 1654, 967, 2778, 1450,
	2758, 2814, 1513, 2741, 2734, 205, 2609, 1583, 2374, 205,
	2224, 1574, 1066, 2564, 1965, 171, 1552, 1934, 1573, 2237,
	1579, 1580, 1581, 1582, 1584, 1585, 2810, 2811, 2812, 1932,
	4090, 4047, 4046, 2809, 2807, 2808, 2800, 2801, 2802, 2803,
	2805, 2806, 1431, 207, 3981, 1605, 1607, 207, 205, 3979,
	3970, 1091, 3169, 3823, 1445, 3810, 2207, 3807, 3806, 2838,
	1644, 3805, 2814, 3799, 1436, 2798, 2799, 1413, 1546, 3792,
	3761, 3745, 1289, 2809, 2807, 2808, 2800, 2801, 2802, 2803,
	2805, 2806, 3744, 2201, 3593, 2904, 207, 3732, 1456, 206,
	3729, 1294, 3703, 206, 3681, 2238, 1472, 1598, 205, 199,
	967, 967, 967, 199, 2798, 2799, 967, 200, 3659, 3636,
	66, 200, 3619, 1087, 2815, 1087, 3618, 3606, 3605, 1713,
	3574, 2881, 3571, 3473, 3454, 3391, 67, 3388, 3296, 2578,
	1151, 3295, 206, 171, 3282, 3281, 207, 3237, 967, 71,
	3225, 650, 199, 1549, 3134, 1792, 650, 1557, 1642, 890,
	200, 889, 3095, 3078, 967, 1556, 3037, 1289, 1271, 2984,
	2959, 1762, 2934, 2933, 2906, 2763, 2762, 1551, 2239, 2236,
	2757, 1771, 171, 967, 77, 2815, 1815, 2725, 1696, 1151,
	1722, 1553, 206, 2563, 1570, 1571, 2544, 1700, 2467, 1699,
	1767, 1698, 199, 1695, 910, 1687, 1685, 2413, 1786, 1750,
	200, 1823, 2412, 2385, 1082, 2378, 1082, 1852, 83, 2345,
	1599, 2249, 1769, 1256, 1758, 1714, 2804, 1719, 1720, 2266,
	1709, 98, 171, 2934, 1743, 1817, 84, 95, 1818, 1708,
	160, 2810, 2811, 2812, 1688, 1689, 1707, 1706, 2809, 2807,
	2808, 2800, 2801, 2802, 2803, 2805, 2806, 2798, 2799, 2252,
	3475, 1053, 1081, 1705, 1081, 2804, 1083, 1704, 1083, 1703,
	1702, 1701, 2019, 1682, 1681, 1680, 1575, 1576, 1679, 1678,
	1677, 1744, 1676, 1675, 1674, 85, 1673, 1672, 1671, 1670,
	1765, 205, 1669, 1345, 1668, 205, 2241, 656, 1657, 1643,
	1843, 659, 656, 1575, 1576, 1578, 659, 1741, 1641, 2809,
	2807, 2808, 2800, 2801, 2802, 2803, 2805, 2806, 1636, 1113,
	1104, 3648, 1097, 1820, 3425, 1271, 3261, 1395, 910, 207,
	3248, 3240, 1578, 207, 1151, 1577, 1712, 912, 2404, 205,
	2250, 2745, 1865, 2376, 1588, 1586, 1587, 1579, 1580, 1581,
	1582, 1584, 1585, 3767, 1754, 3765, 1753, 1752, 1751, 1749,
	1748, 1896, 1577, 1770, 1898, 3477, 1747, 1903, 1814, 1738,
	1924, 3662, 926, 3260, 1789, 206, 1780, 207, 1656, 206,
	205, 1772, 2902, 1639, 205, 199, 4044, 2798, 2799, 199,
	3524, 1734, 1677, 200, 1135, 1845, 2235, 200, 2783, 4037,
	3808, 3047, 1133, 88, 1677, 1848, 1845, 1838, 2804, 1845,
	3720, 2962, 1439, 3719, 3705, 171, 3704, 3597, 207, 171,
	1663, 2415, 207, 206, 3523, 1085, 3243, 1085, 3080, 3079,
	3725, 1129, 1876, 199, 1126, 1736, 1544, 3346, 1694, 1666,
	1881, 200, 168, 91, 1693, 94, 1129, 1766, 1134, 205,
	1907, 2782, 205, 2486, 1583, 2707, 2469, 1130, 3294, 870,
	2016, 1480, 1961, 171, 206, 1958, 3716, 3968, 206, 205,
	3640, 1271, 656, 1271, 199, 1271, 659, 747, 199, 1129,
	3953, 133, 200, 3024, 3940, 3023, 200, 207, 1966, 3330,
	207, 1271, 1271, 1481, 1922, 3313, 2845, 3299, 2814, 871,
	1963, 1971, 1271, 3099, 171, 3171, 1278, 207, 171, 3949,
	1471, 1277, 1514, 2751, 1832, 1271, 1271, 1271, 2232, 2411,
	1256, 1065, 1710, 1690, 3016, 1962, 1902, 1319, 1821, 3962,
	3959, 135, 2025, 206, 2510, 650, 206, 3056, 2507, 3273,
	1460, 1127, 3801, 199, 3581, 172, 199, 3882, 1925, 1128,
	3789, 200, 2937, 206, 200, 2024, 2800, 2801, 2802, 2803,
	2805, 2806, 2014, 199, 3289, 1968, 2616, 2575, 3009, 3950,
	1979, 200, 4004, 171, 4005, 3843, 171, 3115, 3701, 1439,
	1945, 3512, 1307, 2915, 868, 2021, 1944, 2903, 2420, 2027,
	866, 864, 2039, 171, 2080, 2035, 2078, 2802, 2803, 2805,
	2806, 862, 2036, 2037, 2038, 859, 4086, 3694, 1120, 3687,
	3332, 2815, 3322, 3321, 967, 3315, 967, 3312, 1977, 1973,
	1361, 1511, 1976, 967, 1976, 3310, 1792, 1792, 1151, 1317,
	967, 967, 967, 967, 967, 967, 967, 967, 967, 967,
	967, 967, 967, 967, 967, 967, 967, 967, 967, 967,
	967, 967, 967, 967, 967, 967, 967, 967, 967, 967,
	967, 967, 967, 967, 967, 1135, 967, 3270, 967, 967,
	967, 967, 2112, 1417, 910, 1417, 910, 1512, 2099, 1786,
	1786, 656, 1981, 1982, 1763, 659, 2313, 850, 2237, 1114,
	967, 2110, 3269, 967, 967, 3326, 1129, 2026, 2012, 1833,
	2013, 967, 1458, 1318, 2756, 967, 2755, 967, 967, 1510,
	2028, 2520, 205, 2754, 908, 1151, 2753, 1873, 2711, 1134,
	1135, 967, 967, 967, 967, 2517, 967, 967, 967, 967,
	967, 967, 967, 967, 2108, 2516, 2807, 2808, 2800, 2801,
	2802, 2803, 2805, 2806, 1126, 1869, 2961, 2057, 2110, 3842,
	207, 3325, 967, 967, 967, 967, 967, 967, 967, 967,
	967, 2074, 1585, 1993, 2238, 967, 1995, 2213, 2214, 1874,
	1875, 2512, 2000, 2503, 1134, 2002, 2495, 1087, 2917, 2005,
	2123, 2213, 2229, 2494, 1151, 2438, 1581, 1582, 1584, 1585,
	2473, 2108, 907, 1087, 2438, 2397, 206, 1870, 2106, 2436,
	2096, 2405, 2182, 1550, 2098, 2104, 199, 2275, 2436, 967,
	1151, 2111, 2097, 890, 200, 2127, 890, 890, 2128, 2129,
	2136, 2137, 1274, 2280, 1126, 2279, 2297, 2297, 2311, 2140,
	2213, 2572, 3617, 2331, 2333, 2228, 171, 2239, 2236, 2337,
	2471, 1351, 1754, 1350, 856, 1789, 1789, 1780, 1780, 2427,
	2361, 1127, 708, 2109, 2232, 1349, 2448, 1348, 2490, 1128,
	3100, 2277, 1453, 2093, 2033, 1326, 2278, 2522, 1082, 2281,
	1372, 2282, 2283, 2806, 2089, 1271, 909, 2798, 2799, 2483,
	2484, 2209, 3525, 2386, 1082, 1943, 2353, 1313, 2521, 2523,
	2483, 2484, 1860, 2483, 2484, 910, 2389, 1861, 2226, 1094,
	2798, 2799, 1743, 2197, 910, 1151, 4004, 628, 910, 2197,
	2109, 1543, 2092, 1509, 1523, 2107, 1081, 2460, 1823, 1473,
	1083, 1053, 2094, 2509, 3276, 3498, 2699, 2084, 2526, 2352,
	1481, 1127, 1081, 1092, 1792, 1469, 1083, 160, 2360, 1128,
	2365, 2293, 709, 2371, 2372, 2306, 2375, 2322, 1575, 1576,
	2914, 2335, 2407, 2508, 3494, 2241, 2451, 2506, 2343, 2344,
	1151, 2050, 2354, 2684, 2399, 3670, 1454, 2358, 2359, 2047,
	1606, 2042, 2107, 2241, 1271, 1741, 3918, 1578, 1696, 2205,
	2976, 1481, 967, 967, 2669, 967, 2203, 1786, 3311, 2440,
	2459, 3946, 1978, 2043, 1459, 1862, 910, 1837, 1836, 1876,
	3495, 1845, 1847, 627, 2466, 2969, 1129, 1577, 2091, 2418,
	1860, 1864, 3285, 2504, 3106, 1861, 860, 1555, 1527, 2975,
	2414, 1244, 860, 860, 2491, 2079, 906, 2077, 2804, 1095,
	3508, 1112, 2548, 861, 1495, 2500, 1256, 860, 1688, 1689,
	2698, 3309, 2024, 3105, 2968, 3616, 2029, 2044, 2663, 2475,
	2417, 2804, 3298, 2470, 2421, 2235, 2511, 2051, 1883, 1271,
	1271, 2528, 1271, 2533, 2493, 1895, 2536, 774, 2538, 3672,
	2472, 2439, 1879, 1866, 1271, 582, 2527, 1887, 2586, 1085,
	2672, 2485, 2487, 2488, 2489, 845, 1129, 2088, 1496, 2453,
	2456, 2462, 2443, 3160, 2722, 1085, 1336, 2529, 663, 1583,
	577, 2604, 1506, 2474, 1894, 1840, 4032, 2577, 903, 2599,
	2577, 1878, 4048, 1862, 2450, 4041, 2492, 4021, 2814, 2633,
	2630, 2720, 967, 656, 4020, 1884, 2395, 659, 2476, 1864,
	3947, 1259, 1259, 706, 2652, 705, 2653, 1605, 1607, 1334,
	1457, 2814, 845, 3297, 2024, 3053, 2603, 2024, 3861, 2024,
	2179, 4058, 2437, 1789, 2632, 1780, 2650, 1278, 2601, 2636,
	2637, 1439, 2530, 3490, 1315, 903, 967, 3491, 2642, 2643,
	2644, 2542, 967, 967, 160, 2615, 3993, 1867, 1910, 1256,
	1371, 2552, 3407, 1917, 711, 710, 2671, 846, 4033, 1598,
	2588, 1866, 2570, 3506, 2674, 3406, 2676, 1312, 2581, 2635,
	4071, 2605, 2638, 2660, 2639, 1842, 2592, 1867, 2593, 2668,
	2594, 2241, 3493, 629, 3945, 2920, 626, 1256, 1888, 1256,
	3054, 2090, 1990, 1867, 2600, 3157, 3496, 967, 967, 2647,
	2606, 2815, 2602, 967, 1524, 2717, 2449, 2617, 1841, 2654,
	1876, 2656, 1093, 2658, 846, 2987, 967, 967, 3802, 1931,
	1930, 2718, 967, 967, 2815, 2723, 3819, 857, 967, 2691,
	2692, 1905, 2667, 3549, 1417, 918, 1919, 967, 967, 967,
	2049, 3286, 3547, 967, 2713, 1455, 1336, 1889, 1890, 4035,
	2196, 1916, 3671, 967, 1904, 3053, 2948, 2916, 2900, 2714,
	1885, 2423, 741, 2670, 2177, 1867, 2364, 2180, 3158, 3859,
	967, 1521, 1599, 2744, 2690, 2425, 1683, 2950, 1918, 3974,
	2681, 3992, 1900, 1522, 2680, 664, 665, 3975, 2679, 1468,
	1470, 1867, 3403, 1647, 1886, 3507, 4039, 1652, 1863, 4014,
	2123, 2685, 3860, 2954, 3492, 2947, 1874, 1875, 2426, 2952,
	2700, 1525, 2739, 2740, 2176, 3563, 847, 2743, 2204, 3629,
	3893, 2735, 767, 2424, 2046, 3822, 2041, 2808, 2800, 2801,
	2802, 2803, 2805, 2806, 1901, 3613, 967, 967, 967, 3499,
	1635, 3550, 2955, 2357, 2595, 967, 967, 967, 2761, 775,
	967, 2800, 2801, 2802, 2803, 2805, 2806, 4059, 2712, 578,
	967, 1087, 1151, 2223, 2951, 2370, 967, 2438, 967, 909,
	3173, 1554, 4069, 847, 3573, 1728, 1087, 2852, 2853, 4040,
	2719, 2454, 3397, 3257, 1107, 1111, 2241, 1526, 3408, 2721,
	1891, 3117, 2682, 755, 1151, 667, 666, 1586, 1587, 1579,
	1580, 1581, 1582, 1584, 1585, 4034, 1087, 3341, 2750, 1151,
	3825, 3944, 4042, 1483, 1731, 2874, 1863, 4003, 4001, 3839,
	3731, 3358, 579, 1792, 2835, 910, 3040, 1151, 2355, 1913,
	1952, 1721, 1860, 1105, 1100, 848, 569, 1861, 3991, 967,
	2854, 1565, 3404, 2126, 3452, 1729, 1877, 2898, 668, 669,
	1834, 3612, 1082, 967, 2864, 1849, 1850, 3121, 1892, 4064,
	580, 3678, 581, 2178, 4072, 1792, 2910, 1082, 3677, 3548,
	2883, 1911, 1897, 2912, 2893, 3657, 1786, 849, 3788, 3549,
	3359, 967, 3211, 3319, 3973, 2862, 1991, 2918, 3547, 3564,
	3272, 2891, 848, 2888, 3041, 3511, 2887, 1082, 3035, 2929,
	1081, 2925, 3510, 2556, 1083, 2921, 2922, 2830, 2831, 2832,
	1912, 2546, 1972, 1964, 2846, 1081, 1957, 2939, 1786, 1083,
	2944, 2945, 2880, 2938, 1151, 1939, 2942, 3156, 2861, 2116,
	2477, 3226, 2863, 1271, 849, 1862, 3871, 2872, 1271, 768,
	769, 2926, 3118, 2875, 2876, 1081, 2964, 1271, 2873, 1083,
	2878, 1864, 2879, 1151, 3826, 2085, 2907, 2908, 1827, 2909,
	650, 2924, 3614, 2598, 3361, 1730, 2956, 2957, 3586, 1256,
	2958, 1271, 2543, 2895, 2896, 2897, 2996, 2990, 1374, 1564,
	2993, 2996, 1271, 1564, 3001, 3003, 1564, 3550, 1831, 3714,
	2985, 3712, 1961, 2967, 2966, 2978, 1087, 2913, 3658, 1559,
	2981, 2982, 1865, 3034, 2983, 3453, 2940, 2919, 3049, 2936,
	756, 757, 2649, 1866, 3021, 2977, 3239, 2901, 2193, 2455,
	2935, 2655, 901, 2657, 845, 2659, 4063, 1635, 3409, 2705,
	1865, 2960, 2953, 2994, 3007, 3212, 1271, 1271, 3004, 2117,
	3058, 2683, 1789, 3213, 1780, 2191, 2971, 903, 2630, 2972,
	2857, 3029, 3545, 2973, 2677, 2980, 1829, 2630, 3030, 2930,
	2974, 3010, 2986, 1085, 1907, 3509, 2034, 2999, 3006, 3036,
	1563, 3069, 1907, 3005, 1563, 3032, 2856, 1563, 1085, 1830,
	1497, 2394, 2478, 2479, 1789, 2349, 1780, 1082, 902, 1151,
	770, 771, 1151, 2475, 1256, 1256, 3014, 3042, 2393, 2392,
	1484, 3410, 2391, 2550, 3901, 907, 656, 3050, 1085, 3902,
	659, 3076, 3795, 1565, 1357, 3548, 3555, 1867, 3827, 1343,
	1565, 3089, 967, 3082, 3083, 1355, 846, 1970, 967, 967,
	2868, 1344, 967, 967, 967, 1081, 967, 3096, 3012, 1083,
	3603, 160, 160, 3055, 4011, 967, 1792, 3112, 2894, 3070,
	3710, 3087, 3064, 2351, 967, 1857, 3091, 967, 2350, 2187,
	3057, 758, 759, 1151, 773, 3879, 2988, 3874, 3074, 3075,
	1256, 2188, 967, 3666, 3868, 2189, 3796, 3655, 3459, 2194,
	1151, 3111, 3228, 3898, 2248, 4013, 3964, 1541, 1539, 3809,
	1792, 1792, 967, 967, 1858, 967, 967, 967, 3136, 1786,
	3635, 3602, 910, 1766, 3451, 3119, 3102, 3331, 3103, 1518,
	3104, 2869, 1516, 967, 3656, 2827, 3108, 967, 1494, 1792,
	1792, 967, 967, 967, 967, 967, 967, 967, 967, 967,
	967, 967, 967, 967, 967, 967, 967, 967, 967, 967,
	3116, 967, 3875, 1786, 1786, 3145, 3146, 3133, 967, 967,
	1792, 3797, 3097, 1492, 1490, 967, 631, 2867, 2792, 1488,
	1486, 1478, 1476, 3667, 975, 2724, 967, 2547, 1863, 1353,
	2502, 2468, 1786, 1786, 2416, 1761, 1757, 1087, 1087, 3141,
	1542, 967, 2871, 1441, 2828, 847, 3114, 2247, 3113, 1559,
	2076, 2665, 2664, 3159, 3161, 3162, 3152, 2641, 1085, 2105,
	1149, 3163, 3168, 1786, 1250, 2087, 1505, 234, 234, 234,
	1151, 572, 573, 2054, 588, 572, 588, 598, 603, 3244,
	1936, 619, 3175, 3183, 3182, 1356, 625, 3184, 3185, 3223,
	3186, 1816, 234, 1667, 2190, 2024, 1354, 1452, 967, 3066,
	3067, 3068, 3188, 2192, 3215, 3071, 1330, 3072, 2989, 3073,
	752, 3190, 1540, 1538, 967, 967, 234, 3531, 3939, 4015,
	636, 3267, 3520, 3867, 2870, 1789, 3899, 1780, 1082, 1082,
	3584, 3536, 160, 3216, 1517, 772, 3483, 1515, 2206, 3357,
	967, 967, 3351, 1493, 2136, 3176, 3235, 3236, 3232, 3233,
	3230, 3324, 3292, 1647, 1568, 3989, 3153, 2292, 2288, 3224,
	3290, 3271, 900, 3045, 848, 967, 1724, 3033, 3025, 1789,
	1789, 1780, 1780, 2136, 3191, 2597, 1081, 1081, 1491, 1489,
	1083, 1083, 2573, 3246, 1487, 1485, 1477, 1475, 2561, 2553,
	1271, 858, 643, 2540, 1352, 2009, 2007, 2004, 1789, 1789,
	1780, 1780, 1792, 2001, 3219, 1996, 849, 2318, 3305, 3307,
	3263, 3247, 2075, 1994, 3300, 3304, 638, 2979, 1992, 1983,
	1935, 1933, 3275, 1923, 572, 572, 3320, 1271, 2286, 1789,
	1908, 1780, 234, 1893, 967, 1880, 1868, 3738, 1768, 3314,
	1728, 4005, 1087, 967, 1062, 2290, 2291, 2289, 1259, 1569,
	3909, 3755, 3000, 3371, 2703, 1786, 3608, 1917, 3601, 3600,
	1271, 1271, 1271, 3543, 2631, 1853, 3379, 1309, 3740, 1063,
	3363, 3366, 2475, 2438, 3347, 2458, 1271, 3327, 2438, 1731,
	3348, 3369, 1151, 1876, 1724, 1536, 1537, 2436, 2045, 3362,
	2586, 1961, 2457, 1726, 3349, 3048, 3334, 2071, 641, 3747,
	1394, 2070, 2285, 2287, 1151, 1969, 3908, 967, 967, 1393,
	1729, 3748, 2052, 967, 967, 1792, 3365, 3395, 967, 967,
	3513, 967, 633, 2630, 3538, 967, 1474, 3774, 3460, 3352,
	863, 865, 867, 1082, 3364, 2704, 967, 3749, 1727, 1085,
	1085, 1575, 1576, 3372, 3383, 637, 3438, 3380, 3381, 3382,
	3367, 2480, 967, 3373, 2461, 1916, 1572, 583, 1728, 4007,
	3396, 2860, 3378, 3999, 1064, 3969, 2539, 3420, 1786, 3386,
	3412, 3384, 3385, 642, 3393, 3389, 697, 2073, 3390, 3411,
	3392, 1081, 738, 1824, 1394, 1083, 640, 3405, 1394, 2507,
	2515, 3109, 635, 2514, 3751, 3424, 2930, 1731, 227, 3318,
	1577, 2497, 1575, 1576, 2499, 3498, 2463, 3866, 3835, 594,
	3750, 1726, 1087, 3832, 4036, 3794, 3707, 2498, 3400, 3317,
	1087, 1789, 2465, 1780, 1151, 3350, 1151, 3752, 1729, 632,
	1730, 1578, 4062, 1087, 3494, 2464, 1575, 1576, 3487, 3340,
	3254, 2580, 566, 1151, 2336, 1819, 1773, 3465, 3901, 3291,
	3664, 3293, 2899, 3902, 3485, 639, 1727, 3834, 1606, 1280,
	3489, 1577, 967, 2798, 2799, 1578, 3728, 3450, 644, 1575,
	1576, 1462, 4017, 2430, 2431, 2428, 2429, 1461, 3430, 634,
	3495, 3504, 2243, 3259, 2430, 2428, 2276, 3695, 1520, 1151,
	3468, 1519, 3505, 3539, 3535, 1577, 1151, 3534, 3426, 3480,
	3481, 3355, 3471, 1082, 3258, 3516, 3517, 3164, 3323, 3462,
	3463, 1082, 1271, 1271, 3464, 3515, 1760, 3467, 3488, 160,
	3514, 3461, 2991, 2887, 1082, 1661, 3472, 1660, 2859, 3466,
	3482, 4050, 4022, 3785, 1789, 3691, 1780, 3503, 1151, 3649,
	3553, 3647, 3570, 1271, 1085, 3476, 3457, 3394, 1730, 3375,
	3335, 1081, 3540, 3551, 3541, 1083, 3333, 3288, 3552, 1081,
	3283, 3542, 3533, 1083, 3065, 1855, 3039, 3038, 3556, 967,
	1961, 2662, 1081, 3530, 2646, 2645, 1083, 3377, 2590, 2565,
	3519, 2541, 2409, 1259, 1151, 2408, 3588, 1583, 3604, 2208,
	3528, 3527, 2072, 3529, 2069, 2068, 967, 967, 967, 1098,
	1439, 3607, 2067, 3565, 3582, 3587, 3591, 3557, 2066, 3575,
	3572, 1986, 1985, 3576, 1151, 1984, 1967, 1947, 2318, 967,
	3589, 1946, 967, 967, 3753, 1605, 1607, 1108, 1942, 3754,
	1941, 3577, 967, 3595, 619, 1792, 1940, 1938, 3596, 1937,
	967, 967, 1535, 3490, 1534, 1381, 1380, 3491, 1379, 1378,
	1377, 1376, 1375, 1373, 1368, 1151, 1367, 234, 1366, 234,
	234, 1247, 1365, 234, 234, 1262, 1364, 1325, 1151, 3620,
	1324, 1323, 1322, 3615, 1321, 1320, 967, 1598, 234, 1314,
	1282, 1308, 1306, 967, 1305, 1142, 1141, 3637, 1786, 1140,
	1139, 967, 3493, 1792, 3625, 1110, 1109, 1045, 2318, 2318,
	1825, 967, 3631, 869, 967, 1311, 3496, 855, 3651, 3669,
	1928, 3497, 967, 1529, 1085, 3642, 82, 1316, 1329, 1151,
	1262, 3646, 1085, 234, 234, 684, 1247, 3643, 3644, 76,
	1914, 3287, 828, 3897, 1302, 1085, 234, 3652, 3690, 3818,
	692, 3881, 3650, 2946, 1370, 2518, 1786, 2053, 1482, 2055,
	2882, 2377, 3858, 3434, 3674, 3673, 234, 234, 234, 3700,
	1247, 234, 1262, 2760, 3781, 1151, 3713, 3628, 1271, 2246,
	3722, 3692, 619, 1665, 234, 234, 3688, 236, 2839, 78,
	951, 997, 3562, 3727, 3561, 3484, 967, 967, 3697, 3274,
	1599, 2620, 3559, 3558, 1777, 3706, 1779, 752, 917, 967,
	967, 3021, 3711, 3739, 1154, 3758, 3759, 1835, 957, 3737,
	1851, 3735, 1844, 3721, 3492, 2410, 967, 1792, 2318, 2318,
	2318, 3726, 2296, 974, 971, 1781, 1783, 973, 972, 3736,
	3734, 3733, 1782, 3741, 1077, 1684, 3742, 3591, 970, 1776,
	967, 3756, 3354, 967, 3353, 2549, 2584, 1360, 830, 3499,
	1839, 2202, 3769, 3798, 1789, 2230, 1780, 2749, 3787, 1658,
	932, 3743, 967, 234, 953, 2227, 1103, 942, 2865, 3779,
	1786, 3762, 3052, 3770, 3771, 1256, 3253, 229, 229, 568,
	234, 3804, 3592, 3786, 2115, 1271, 1271, 3680, 700, 2795,
	2233, 1096, 2319, 2312, 2308, 3773, 2574, 3803, 1545, 1637,
	967, 967, 2585, 1137, 935, 2200, 3821, 1649, 2729, 2125,
	967, 3059, 1789, 967, 1780, 1271, 1587, 1579, 1580, 1581,
	1582, 1584, 1585, 2885, 3811, 1271, 1271, 2403, 3905, 3836,
	3815, 3817, 3838, 3814, 3172, 1951, 1061, 3813, 1060, 1059,
	3849, 3887, 1271, 3833, 3829, 3830, 3828, 3884, 3387, 3019,
	930, 1828, 2422, 1627, 3026, 967, 967, 3841, 3840, 1259,
	3846, 2120, 947, 3845, 1255, 2850, 3847, 3848, 3090, 1327,
	3820, 3726, 3816, 1439, 624, 3854, 959, 3855, 1626, 3853,
	3876, 2525, 2524, 3852, 3791, 3878, 1124, 1123, 967, 967,
	1122, 967, 2928, 3863, 4070, 3284, 204, 2697, 3886, 3889,
	1566, 1558, 201, 203, 2139, 202, 3566, 3967, 3302, 3877,
	3903, 3011, 2726, 2727, 20, 19, 3910, 18, 103, 39,
	17, 3682, 3683, 3891, 116, 132, 131, 130, 129, 3862,
	3895, 128, 134, 3923, 127, 126, 1789, 121, 1780, 3922,
	967, 967, 967, 125, 3696, 3924, 124, 3698, 3699, 123,
	122, 3914, 120, 3907, 3917, 119, 3919, 118, 117, 115,
	3951, 114, 3890, 967, 113, 3894, 3956, 112, 111, 110,
	109, 3935, 3936, 3938, 3937, 108, 572, 107, 106, 105,
	104, 615, 612, 55, 54, 102, 3954, 101, 16, 37,
	14, 2244, 3976, 59, 60, 3911, 3978, 234, 3912, 234,
	2314, 13, 32, 234, 81, 3980, 93, 3985, 92, 33,
	90, 89, 967, 3986, 31, 15, 1282, 1247, 234, 3977,
	234, 87, 86, 3982, 30, 234, 1282, 588, 3990, 28,
	234, 1282, 2821, 2822, 2823, 11, 619, 3996, 3997, 9,
	8, 4009, 3998, 34, 4002, 4006, 4000, 1745, 2586, 12,
	4008, 3886, 5, 165, 3889, 164, 4012, 4010, 167, 163,
	967, 4016, 967, 4019, 166, 4027, 4024, 4030, 4025, 80,
	162, 4031, 161, 79, 4023, 26, 4029, 10, 157, 4026,
	4018, 4028, 3983, 3984, 3723, 3345, 2387, 3987, 74, 159,
	158, 156, 4043, 155, 4045, 154, 75, 72, 153, 152,
	73, 151, 3907, 24, 6, 58, 7, 3812, 3610, 4054,
	4052, 3098, 4051, 4057, 96, 2318, 2318, 967, 967, 97,
	35, 70, 69, 68, 4056, 967, 23, 967, 967, 4066,
	57, 22, 194, 4060, 4073, 193, 4074, 192, 191, 190,
	189, 184, 183, 188, 186, 4076, 185, 187, 4075, 182,
	196, 4077, 195, 198, 181, 179, 175, 4080, 174, 178,
	4085, 4084, 180, 177, 4083, 176, 4089, 4082, 4088, 4087,
	4092, 967, 173, 197, 149, 150, 65, 148, 4097, 147,
	146, 2433, 145, 4093, 144, 143, 4095, 142, 64, 21,
	2, 1, 0, 0, 0, 0, 0, 0, 0, 0,
	234, 4067, 4068, 2318, 2318, 2318, 2318, 2318, 2318, 2318,
	2318, 2318, 2318, 2318, 2318, 2318, 2318, 2318, 2318, 2318,
	2318, 2318, 0, 2318, 2798, 2799, 0, 2816, 2817, 2818,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4094, 0, 0, 0, 0,
	0, 234, 0, 0, 0, 234, 0, 0, 0, 234,
	0, 0, 0, 0, 0, 0, 1575, 1576, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 234, 0, 234,
	0, 234, 0, 0, 0, 572, 0, 0, 1606, 0,
	0, 0, 930, 2813, 0, 1578, 930, 0, 0, 1987,
	0, 0, 3966, 0, 0, 0, 0, 0, 0, 0,
	0, 1235, 0, 0, 0, 1235, 0, 234, 0, 0,
	0, 0, 0, 0, 0, 1577, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 619, 0,
	0, 0, 752, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1146, 0, 0,
	0, 0, 0, 1254, 0, 2804, 0, 234, 0, 1247,
	234, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 619, 0, 0, 0, 0, 0, 0,
	234, 0, 0, 0, 0, 0, 0, 0, 0, 234,
	234, 2687, 234, 0, 234, 0, 234, 1583, 234, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2819, 3129,
	3130, 0, 0, 0, 0, 0, 0, 2081, 0, 0,
	2082, 0, 2083, 0, 0, 0, 1362, 0, 0, 0,
	0, 0, 0, 0, 234, 1605, 1607, 0, 0, 0,
	0, 0, 0, 0, 0, 2814, 1385, 1385, 1385, 0,
	0, 0, 0, 0, 0, 603, 0, 0, 0, 619,
	0, 0, 0, 0, 1426, 1427, 0, 0, 0, 0,
	0, 2314, 2314, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1598, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3192, 3193, 3194,
	3195, 3196, 3197, 3198, 3199, 3200, 3201, 3202, 3203, 3204,
	3205, 3206, 3207, 3208, 3209, 3210, 0, 3214, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1575, 1576, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1606,
	0, 0, 0, 1528, 0, 0, 1578, 0, 2815, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1577, 0, 0, 0,
	0, 2314, 2314, 2314, 0, 0, 1597, 0, 0, 0,
	1599, 0, 0, 0, 1594, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 572, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 234, 0, 0, 0, 0, 0, 0, 1575, 1576,
	572, 1608, 1609, 1610, 1618, 1619, 1620, 234, 2851, 572,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1611,
	1606, 234, 0, 0, 0, 0, 0, 1578, 1600, 1601,
	1602, 1603, 0, 0, 1624, 2810, 2811, 2812, 1583, 0,
	2877, 0, 2809, 2807, 2808, 2800, 2801, 2802, 2803, 2805,
	2806, 0, 0, 0, 0, 2890, 0, 1577, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1597, 0, 0,
	0, 0, 0, 2905, 0, 1594, 1605, 1607, 0, 0,
	0, 588, 0, 0, 0, 0, 0, 1579, 1580, 1581,
	1582, 1584, 1585, 0, 0, 0, 0, 0, 0, 0,
	1592, 1593, 0, 0, 0, 2798, 2799, 1235, 2816, 2817,
	2818, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2447, 3416, 0, 1598, 0,
	0, 0, 0, 234, 0, 0, 0, 0, 0, 1600,
	1601, 1602, 1603, 0, 0, 234, 0, 0, 0, 1583,
	930, 0, 0, 1755, 0, 0, 1235, 0, 234, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1764, 0,
	1254, 0, 0, 234, 2813, 0, 0, 0, 1615, 0,
	0, 1625, 0, 0, 0, 0, 0, 1605, 1607, 0,
	0, 234, 2531, 0, 2318, 0, 0, 0, 0, 2890,
	0, 0, 1621, 0, 1622, 0, 0, 0, 0, 0,
	0, 1592, 1593, 0, 0, 0, 0, 1282, 0, 0,
	234, 1604, 0, 0, 0, 0, 0, 234, 1613, 0,
	0, 0, 0, 2569, 0, 0, 0, 0, 2318, 1598,
	0, 1599, 0, 2447, 0, 572, 0, 0, 2589, 0,
	0, 0, 0, 0, 234, 0, 2804, 234, 0, 234,
	0, 234, 0, 0, 1623, 0, 1247, 0, 234, 234,
	0, 1262, 1262, 0, 0, 0, 0, 0, 0, 0,
	0, 2613, 752, 0, 2447, 2447, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 234, 0,
	0, 1235, 0, 0, 0, 0, 0, 0, 0, 2819,
	0, 0, 0, 0, 234, 1247, 234, 0, 0, 1282,
	0, 1282, 0, 0, 1247, 0, 1247, 0, 1247, 0,
	0, 0, 1604, 0, 0, 1250, 0, 0, 1149, 0,
	0, 0, 1723, 0, 0, 0, 2814, 0, 2314, 2314,
	0, 0, 1599, 234, 234, 234, 234, 1247, 234, 0,
	234, 0, 1595, 1591, 0, 1588, 1586, 1587, 1579, 1580,
	1581, 1582, 1584, 1585, 0, 0, 0, 1616, 2318, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 234, 0, 0, 0, 0, 0, 0, 0, 234,
	0, 1949, 0, 0, 0, 1956, 0, 0, 0, 3149,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3165, 1362, 0, 1975,
	0, 1975, 0, 0, 0, 0, 2314, 2314, 2314, 2314,
	2314, 2314, 2314, 2314, 2314, 2314, 2314, 2314, 2314, 2314,
	2314, 2314, 2314, 2314, 2314, 0, 2314, 0, 0, 2815,
	0, 0, 2318, 2318, 0, 1614, 0, 1254, 0, 1589,
	1590, 1596, 1617, 1595, 1591, 0, 1588, 1586, 1587, 1579,
	1580, 1581, 1582, 1584, 1585, 0, 0, 0, 1282, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3634, 0,
	0, 0, 0, 2798, 2799, 916, 2816, 2817, 2818, 0,
	0, 0, 0, 0, 0, 0, 0, 1956, 0, 0,
	2031, 0, 0, 0, 3138, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2048, 0, 3660, 0, 0, 0, 3256, 0, 0, 0,
	2058, 0, 2060, 0, 2062, 0, 2064, 0, 2065, 0,
	0, 0, 0, 0, 0, 0, 2810, 2811, 2812, 0,
	0, 0, 2813, 2809, 2807, 2808, 2800, 2801, 2802, 2803,
	2805, 2806, 0, 0, 0, 1235, 0, 0, 0, 0,
	0, 0, 0, 0, 2086, 234, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	234, 0, 0, 0, 0, 572, 0, 0, 0, 0,
	572, 0, 0, 572, 0, 0, 572, 572, 0, 0,
	0, 0, 572, 0, 0, 0, 0, 0, 0, 0,
	234, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1282, 0, 2804, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1282, 1235, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3778, 0, 0, 0, 0, 0, 0, 0,
	2447, 2447, 234, 0, 1262, 0, 0, 2447, 0, 0,
	2932, 0, 0, 0, 0, 0, 0, 2819, 2447, 2932,
	0, 2447, 2932, 2932, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 234, 234, 1262, 234, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1235, 0, 0, 2814, 0, 0, 0, 1262, 234,
	1247, 0, 0, 0, 1575, 1576, 0, 0, 0, 0,
	0, 0, 2447, 0, 2992, 2447, 1262, 1235, 0, 2447,
	2447, 1262, 0, 0, 0, 0, 1606, 0, 0, 0,
	0, 0, 0, 1578, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 234, 3015, 0, 0, 3017, 2447,
	0, 0, 234, 0, 0, 0, 234, 0, 1262, 0,
	0, 0, 0, 1577, 0, 0, 0, 0, 0, 0,
	0, 2384, 0, 1597, 0, 2569, 0, 0, 1247, 0,
	234, 1594, 0, 2447, 0, 572, 0, 0, 0, 0,
	2798, 2799, 2447, 2816, 2817, 2818, 0, 0, 0, 0,
	0, 234, 234, 0, 66, 0, 0, 2815, 0, 0,
	0, 3137, 1235, 0, 0, 0, 0, 0, 0, 0,
	67, 0, 0, 0, 0, 3127, 0, 0, 234, 2569,
	0, 0, 2569, 71, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1600, 1601, 1602, 1603, 0,
	0, 0, 3470, 0, 0, 1583, 0, 0, 0, 2813,
	0, 0, 0, 0, 0, 0, 0, 1235, 77, 3478,
	0, 3107, 0, 0, 1247, 234, 0, 234, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1605, 1607, 0, 0, 916, 0, 0,
	0, 916, 83, 0, 0, 0, 0, 0, 0, 0,
	234, 0, 0, 0, 0, 98, 0, 1592, 1593, 0,
	84, 95, 0, 1254, 2810, 2811, 2812, 0, 0, 0,
	0, 2809, 2807, 2808, 2800, 2801, 2802, 2803, 2805, 2806,
	0, 2804, 0, 0, 0, 1598, 0, 1284, 0, 1290,
	0, 1296, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3170, 0, 0, 85,
	1956, 0, 0, 0, 0, 0, 0, 2560, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2819, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2591, 0, 0, 1385, 0, 1385,
	1149, 1385, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1410, 0, 0, 0, 0, 2314, 0, 0,
	0, 2814, 0, 0, 0, 0, 0, 0, 1604, 1428,
	3626, 1433, 0, 0, 0, 0, 0, 0, 2640, 0,
	0, 1442, 0, 1447, 0, 0, 0, 0, 1599, 0,
	0, 234, 234, 0, 2648, 0, 2651, 0, 0, 0,
	0, 2314, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3626, 0, 572, 572, 0, 0, 88, 0, 0,
	0, 0, 0, 0, 2139, 0, 0, 0, 0, 0,
	0, 0, 0, 2673, 1254, 2675, 1254, 0, 2678, 1501,
	0, 0, 1507, 0, 0, 0, 1282, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 168, 91, 0, 94,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1385, 0, 0, 2815, 2139, 0, 0, 0, 2706,
	0, 0, 0, 205, 0, 0, 0, 0, 0, 0,
	0, 747, 0, 0, 0, 133, 619, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1595,
	1591, 0, 1588, 1586, 1587, 1579, 1580, 1581, 1582, 1584,
	1585, 207, 0, 0, 0, 234, 0, 0, 0, 0,
	0, 0, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 0,
	0, 2314, 0, 0, 0, 135, 0, 0, 0, 0,
	0, 234, 0, 0, 0, 0, 0, 0, 0, 172,
	234, 0, 0, 1646, 0, 0, 0, 206, 234, 1659,
	0, 0, 0, 0, 0, 234, 0, 199, 0, 0,
	0, 0, 0, 0, 0, 200, 0, 0, 0, 0,
	0, 2810, 2811, 2812, 0, 2447, 234, 0, 2809, 2807,
	2808, 2800, 2801, 2802, 2803, 2805, 2806, 1422, 0, 1575,
	1576, 0, 2613, 2613, 0, 1618, 1619, 1620, 752, 752,
	2447, 0, 0, 2569, 2569, 0, 0, 752, 2447, 1235,
	0, 1606, 0, 0, 0, 234, 0, 0, 1578, 0,
	0, 0, 0, 0, 0, 1624, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1235, 0, 0, 0, 0, 0, 0, 1577, 0,
	0, 0, 1717, 1717, 1717, 0, 1235, 0, 1597, 0,
	0, 0, 0, 0, 0, 0, 1594, 0, 0, 0,
	0, 0, 0, 0, 1235, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3435, 0, 930, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	930, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 916, 0, 0, 0, 0,
	1600, 1601, 1602, 1603, 0, 0, 0, 0, 0, 0,
	1583, 0, 0, 0, 0, 0, 234, 0, 0, 0,
	0, 0, 1282, 0, 234, 0, 0, 0, 0, 0,
	0, 0, 2923, 0, 0, 0, 0, 234, 0, 1615,
	0, 1235, 1625, 0, 0, 0, 0, 0, 1605, 1607,
	0, 0, 0, 0, 2447, 2447, 2447, 0, 0, 0,
	0, 0, 0, 0, 0, 2963, 2965, 1282, 2560, 0,
	1235, 0, 1592, 1593, 0, 2447, 0, 2932, 0, 0,
	1282, 1282, 234, 1262, 0, 0, 0, 0, 0, 1613,
	0, 0, 0, 0, 1262, 234, 1262, 234, 0, 0,
	1598, 0, 0, 0, 0, 0, 0, 2447, 0, 2447,
	234, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2447, 0, 0, 0, 3568, 0, 0,
	0, 0, 0, 0, 0, 0, 234, 0, 0, 0,
	0, 0, 3027, 234, 0, 0, 3031, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1575, 1576, 0, 1282, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1254, 1254, 1604, 0, 1606, 0, 0, 0, 0,
	0, 0, 1578, 0, 0, 0, 1235, 0, 0, 1235,
	0, 0, 0, 1599, 0, 0, 0, 0, 3086, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1577, 0, 0, 0, 0, 0, 1616, 0,
	0, 0, 1597, 0, 0, 0, 0, 0, 0, 0,
	1594, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3110, 0, 1254, 2447, 0,
	2932, 0, 0, 3654, 0, 0, 0, 0, 0, 0,
	1235, 234, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3126, 0, 0, 1235, 0, 0,
	3122, 0, 0, 0, 0, 0, 0, 619, 0, 0,
	0, 0, 0, 0, 1600, 1601, 1602, 1603, 0, 0,
	0, 0, 0, 0, 1583, 0, 1614, 0, 0, 0,
	0, 0, 0, 1617, 1595, 1591, 0, 1588, 1586, 1587,
	1579, 1580, 1581, 1582, 1584, 1585, 0, 0, 3654, 0,
	0, 0, 0, 0, 0, 0, 2447, 0, 0, 0,
	0, 0, 1605, 1607, 0, 0, 3730, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1282, 0,
	0, 0, 0, 0, 0, 0, 1592, 1593, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 234, 234, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1598, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3170, 2114, 1235, 2118, 0,
	0, 0, 0, 0, 0, 2132, 0, 0, 0, 0,
	3654, 0, 2141, 2142, 2143, 2144, 2145, 2146, 2147, 2148,
	2149, 2150, 2151, 2152, 2153, 2154, 2155, 2156, 2157, 2158,
	2159, 2160, 2161, 2162, 2163, 2164, 2165, 2166, 2167, 2168,
	2169, 2170, 2171, 2172, 2173, 2174, 2175, 0, 2181, 0,
	2183, 2184, 2185, 2186, 0, 0, 234, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2210, 3568, 0, 0, 0, 1604, 0, 0,
	0, 0, 0, 1646, 0, 0, 234, 2225, 0, 0,
	0, 0, 0, 0, 0, 2932, 0, 1599, 0, 0,
	0, 0, 0, 2255, 2258, 2261, 2264, 0, 2268, 2269,
	2270, 2271, 2272, 2273, 2274, 0, 0, 0, 0, 0,
	1282, 0, 1282, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2310, 0, 2321, 2323,
	2328, 0, 0, 0, 0, 0, 0, 3872, 0, 0,
	0, 0, 0, 0, 1282, 0, 0, 234, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 234, 2447, 0,
	0, 2560, 0, 0, 0, 0, 0, 0, 0, 0,
	3344, 0, 0, 0, 234, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3356, 0, 0, 0, 1235,
	0, 0, 0, 0, 0, 0, 0, 0, 1595, 1591,
	3170, 1588, 1586, 1587, 1579, 1580, 1581, 1582, 1584, 1585,
	0, 1235, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1575, 1576, 0, 1608, 1609, 1610,
	1618, 1619, 1620, 0, 976, 3398, 0, 0, 0, 0,
	0, 0, 0, 2447, 0, 1611, 1606, 0, 0, 0,
	0, 0, 0, 1578, 0, 0, 0, 0, 0, 0,
	1624, 0, 0, 0, 3654, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 235, 235, 235,
	0, 0, 0, 1577, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1597, 0, 1282, 0, 2447, 0, 0,
	0, 1594, 235, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1575,
	1576, 1235, 0, 1235, 0, 0, 235, 0, 0, 0,
	0, 0, 0, 0, 2534, 2535, 0, 2537, 0, 0,
	1235, 1606, 0, 0, 0, 0, 0, 0, 1578, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1600, 1601, 1602, 1603, 0,
	0, 0, 0, 0, 0, 1583, 0, 0, 1577, 0,
	0, 0, 0, 0, 0, 0, 1235, 0, 1597, 0,
	0, 0, 0, 1235, 2613, 0, 1594, 0, 0, 0,
	0, 0, 0, 0, 1615, 0, 2613, 1625, 0, 0,
	0, 0, 0, 1605, 1607, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1621, 0,
	1622, 0, 3518, 0, 0, 1235, 0, 1592, 1593, 0,
	2715, 0, 0, 0, 0, 2560, 0, 0, 0, 0,
	0, 0, 0, 0, 1613, 0, 0, 0, 0, 0,
	1600, 1601, 1602, 1603, 0, 1598, 0, 0, 0, 0,
	1583, 0, 0, 0, 2661, 0, 0, 0, 0, 0,
	0, 1235, 0, 0, 0, 0, 2560, 0, 0, 0,
	1623, 0, 0, 3583, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1612, 1605, 1607,
	0, 1235, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1628, 1629, 0, 0, 0, 0,
	0, 0, 1592, 1593, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1235, 0, 0, 0, 0, 0, 1604, 0,
	1598, 0, 0, 0, 0, 1235, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1599, 2709,
	2710, 0, 0, 0, 0, 2716, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 930, 0, 1616, 2730, 2731, 0, 0, 0, 0,
	2225, 0, 0, 0, 0, 0, 1235, 0, 0, 2738,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3661, 0, 0, 0, 2752, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2764, 1604, 0, 0, 0, 0, 0, 0,
	0, 0, 1235, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1599, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1614, 0, 0, 0, 1589, 1590, 1596, 1617, 1595,
	1591, 0, 1588, 1586, 1587, 1579, 1580, 1581, 1582, 1584,
	1585, 0, 0, 0, 0, 3443, 0, 0, 0, 3442,
	0, 0, 0, 0, 0, 0, 0, 2328, 2328, 2328,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1717, 0, 0, 0, 0, 0, 0, 0,
	2855, 3768, 1254, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1595, 1591, 0, 1588, 1586, 1587,
	1579, 1580, 1581, 1582, 1584, 1585, 0, 0, 0, 0,
	0, 0, 1575, 1576, 0, 1608, 1609, 1610, 1618, 1619,
	1620, 916, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1611, 1606, 916, 0, 0, 0, 0,
	0, 1578, 0, 0, 0, 0, 0, 0, 1624, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2949, 0, 0, 3837, 235, 1155, 235,
	235, 1577, 1155, 235, 235, 0, 1155, 0, 0, 0,
	0, 1597, 0, 0, 0, 0, 930, 0, 235, 1594,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1155, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1575,
	1576, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1155, 235, 235, 0, 0, 3880, 0, 0,
	0, 1606, 0, 0, 0, 0, 235, 0, 1578, 0,
	0, 0, 0, 1600, 1601, 1602, 1603, 3904, 0, 0,
	0, 0, 0, 1583, 0, 0, 235, 235, 235, 0,
	0, 235, 0, 1155, 3916, 0, 0, 0, 1577, 1155,
	0, 0, 0, 1155, 235, 235, 0, 0, 1597, 0,
	0, 0, 1615, 0, 0, 1625, 1594, 1155, 0, 0,
	0, 1605, 1607, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1621, 0, 1622, 0,
	0, 0, 0, 0, 0, 1592, 1593, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2708, 0, 1613, 0, 0, 1155, 0, 0, 0, 0,
	0, 0, 0, 1598, 0, 0, 0, 0, 0, 0,
	1600, 1601, 1602, 1603, 0, 743, 0, 0, 0, 0,
	1583, 0, 0, 235, 0, 0, 0, 0, 1623, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	235, 66, 0, 746, 745, 1612, 0, 0, 0, 0,
	66, 0, 0, 0, 2132, 0, 0, 67, 1605, 1607,
	3124, 3125, 0, 0, 3128, 0, 67, 0, 3131, 0,
	71, 0, 0, 0, 0, 0, 0, 3135, 0, 71,
	0, 0, 1592, 1593, 0, 0, 3142, 0, 0, 2855,
	0, 0, 0, 0, 0, 0, 1604, 0, 0, 0,
	0, 0, 0, 0, 3154, 77, 0, 0, 0, 0,
	1598, 0, 0, 0, 77, 0, 1599, 0, 0, 0,
	0, 0, 0, 0, 3177, 3178, 0, 3179, 3180, 3181,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 83,
	0, 1616, 0, 0, 0, 3187, 0, 0, 83, 3189,
	0, 0, 98, 0, 0, 0, 0, 84, 95, 0,
	0, 98, 0, 0, 0, 0, 84, 95, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3217, 3218, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3229, 0,
	0, 0, 0, 1604, 0, 0, 85, 0, 0, 0,
	0, 0, 0, 3238, 0, 85, 0, 0, 0, 0,
	0, 0, 0, 1599, 0, 0, 0, 0, 0, 1614,
	0, 0, 0, 1589, 1590, 1596, 1617, 1595, 1591, 0,
	1588, 1586, 1587, 1579, 1580, 1581, 1582, 1584, 1585, 0,
	0, 0, 0, 2773, 0, 0, 0, 2774, 0, 0,
	0, 0, 0, 235, 0, 0, 0, 0, 0, 0,
	3268, 0, 0, 0, 1155, 0, 0, 0, 235, 235,
	235, 0, 0, 0, 0, 235, 3277, 3280, 0, 0,
	235, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1155, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3301, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1155, 88, 0, 0, 0, 0, 0,
	0, 0, 0, 88, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1595, 1591, 0, 1588, 1586, 1587,
	1579, 1580, 1581, 1582, 1584, 1585, 0, 0, 0, 0,
	0, 0, 0, 168, 91, 0, 94, 0, 0, 0,
	0, 0, 168, 91, 0, 94, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	205, 0, 0, 0, 0, 0, 0, 0, 747, 205,
	0, 0, 133, 0, 0, 0, 1717, 747, 0, 0,
	0, 133, 0, 0, 0, 3374, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 207, 0,
	0, 0, 0, 0, 0, 0, 0, 207, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 135, 0, 0, 0, 0, 0, 0, 1155,
	235, 135, 0, 0, 0, 0, 172, 0, 1155, 0,
	0, 0, 0, 0, 206, 172, 0, 0, 0, 3413,
	3414, 0, 0, 206, 199, 3418, 3419, 0, 0, 0,
	3422, 3423, 200, 199, 0, 0, 0, 3427, 0, 0,
	0, 200, 0, 0, 0, 0, 0, 0, 3431, 0,
	0, 235, 0, 0, 744, 235, 0, 0, 0, 235,
	0, 0, 0, 1420, 3436, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 235, 0, 235,
	0, 235, 0, 730, 0, 0, 0, 1575, 1576, 0,
	1608, 1609, 1610, 1618, 1619, 1620, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 714, 1611, 1606,
	0, 0, 0, 0, 0, 0, 1578, 235, 0, 0,
	0, 0, 0, 1624, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 715, 0, 0, 0, 1155, 1577, 1155, 0, 1155,
	0, 0, 716, 0, 0, 0, 1597, 0, 0, 0,
	0, 0, 0, 0, 1594, 1155, 1155, 0, 0, 0,
	717, 0, 0, 0, 3280, 0, 1155, 235, 0, 0,
	235, 0, 0, 0, 0, 0, 0, 735, 0, 1155,
	1155, 1155, 0, 0, 0, 0, 0, 0, 0, 0,
	235, 0, 0, 0, 0, 718, 0, 0, 0, 235,
	235, 0, 235, 0, 235, 0, 235, 0, 235, 0,
	0, 0, 0, 0, 0, 0, 0, 719, 1600, 1601,
	1602, 1603, 0, 0, 0, 0, 0, 0, 1583, 0,
	0, 0, 0, 0, 0, 0, 0, 720, 0, 0,
	721, 0, 0, 0, 235, 0, 0, 0, 0, 643,
	0, 0, 0, 0, 0, 0, 0, 1615, 0, 0,
	1625, 0, 0, 0, 0, 0, 1605, 1607, 0, 0,
	0, 3280, 0, 734, 0, 0, 0, 0, 0, 0,
	0, 1621, 0, 1622, 0, 0, 0, 0, 0, 0,
	1592, 1593, 1155, 0, 0, 0, 0, 0, 3621, 3622,
	3623, 0, 0, 0, 0, 0, 0, 1613, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1598, 0,
	0, 2132, 0, 0, 3632, 3633, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3641, 1623, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1612, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 723, 963, 0, 1155,
	0, 0, 0, 0, 0, 3280, 0, 0, 0, 0,
	0, 0, 0, 3679, 0, 0, 0, 741, 0, 724,
	0, 0, 0, 3686, 0, 0, 916, 0, 0, 0,
	0, 1604, 0, 0, 3693, 0, 0, 0, 0, 0,
	233, 233, 233, 0, 0, 0, 0, 0, 0, 0,
	642, 1599, 0, 0, 0, 0, 0, 725, 0, 0,
	0, 739, 740, 737, 0, 657, 0, 0, 1155, 732,
	0, 0, 726, 0, 0, 0, 1616, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 657,
	0, 235, 0, 0, 1155, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 727, 733, 0, 3280, 3280,
	0, 0, 0, 0, 728, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 729, 0, 0,
	0, 0, 736, 0, 952, 100, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 644, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 731, 0, 0, 1155,
	0, 0, 3790, 0, 1614, 3793, 0, 0, 1589, 1590,
	1596, 1617, 1595, 1591, 0, 1588, 1586, 1587, 1579, 1580,
	1581, 1582, 1584, 1585, 3280, 0, 0, 0, 2221, 1155,
	0, 0, 2222, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 235, 0, 1084, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 235, 0, 0, 0, 100,
	0, 0, 0, 0, 0, 0, 0, 0, 235, 0,
	0, 0, 3280, 0, 0, 3280, 0, 0, 0, 0,
	0, 0, 0, 235, 1155, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1155, 0,
	0, 235, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2132, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	235, 0, 0, 0, 0, 891, 0, 235, 0, 0,
	0, 0, 0, 0, 0, 0, 911, 0, 0, 0,
	0, 916, 1575, 1576, 0, 1608, 1609, 1610, 1618, 1619,
	1620, 0, 0, 0, 235, 0, 0, 235, 0, 235,
	0, 235, 0, 1611, 1606, 0, 0, 0, 235, 235,
	0, 1578, 1071, 1155, 1155, 0, 1155, 0, 1624, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1155, 0,
	0, 0, 3934, 3934, 3934, 0, 0, 0, 235, 0,
	0, 1577, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1597, 0, 0, 235, 3955, 235, 0, 0, 1594,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 235, 235, 235, 235, 0, 235, 0,
	235, 0, 0, 0, 3934, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1600, 1601, 1602, 1603, 0, 0, 0,
	0, 235, 0, 1583, 0, 0, 0, 0, 0, 235,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3280, 0, 3280, 0, 0, 0, 0, 0,
	0, 0, 1615, 0, 0, 1625, 0, 0, 0, 0,
	0, 1605, 1607, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1621, 0, 1622, 0,
	0, 0, 0, 0, 0, 1592, 1593, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3934,
	4061, 0, 1613, 0, 0, 0, 0, 4065, 0, 0,
	0, 0, 0, 1598, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1623, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1612, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	233, 0, 233, 233, 0, 0, 233, 233, 0, 0,
	0, 0, 0, 0, 0, 0, 1604, 0, 0, 0,
	0, 657, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1599, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1155, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1616, 0, 0, 0, 0, 233, 233, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1155, 233,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1155, 0, 0, 0, 0, 0, 233,
	233, 233, 0, 0, 233, 0, 0, 0, 0, 0,
	0, 1155, 0, 0, 0, 0, 0, 233, 233, 0,
	0, 0, 0, 0, 999, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 235, 0, 0, 0, 0, 0, 0, 1614,
	0, 0, 0, 1589, 1590, 1596, 1617, 1595, 1591, 0,
	1588, 1586, 1587, 1579, 1580, 1581, 1582, 1584, 1585, 0,
	100, 0, 100, 0, 100, 235, 235, 3441, 235, 0,
	0, 0, 0, 0, 0, 235, 0, 0, 141, 0,
	0, 0, 0, 0, 0, 66, 0, 43, 42, 235,
	0, 0, 0, 0, 0, 0, 233, 0, 1155, 0,
	0, 67, 0, 136, 0, 0, 0, 1155, 0, 0,
	0, 0, 1155, 233, 71, 0, 0, 0, 0, 0,
	0, 1155, 0, 0, 61, 0, 0, 1155, 0, 0,
	0, 45, 0, 138, 235, 100, 0, 0, 0, 911,
	100, 100, 235, 0, 0, 1155, 235, 44, 0, 77,
	0, 0, 100, 0, 100, 0, 1155, 0, 0, 0,
	0, 0, 0, 0, 100, 0, 100, 0, 0, 0,
	0, 47, 62, 0, 0, 0, 0, 0, 48, 0,
	0, 0, 0, 83, 0, 0, 0, 139, 0, 0,
	0, 235, 235, 0, 46, 0, 98, 0, 0, 0,
	0, 84, 95, 0, 0, 0, 0, 0, 0, 0,
	1155, 1155, 0, 0, 0, 0, 0, 0, 235, 0,
	100, 0, 1088, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 49, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	85, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1155, 0, 235, 1155, 235, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	235, 0, 0, 0, 0, 0, 0, 0, 891, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1640, 0,
	1739, 0, 1084, 0, 0, 0, 233, 1155, 0, 0,
	0, 0, 0, 0, 0, 1645, 0, 0, 0, 1651,
	0, 233, 1739, 233, 1155, 0, 0, 0, 657, 0,
	0, 0, 0, 657, 0, 0, 0, 0, 88, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 50,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 63, 0, 0, 0, 0, 53, 168, 91, 0,
	94, 0, 0, 0, 51, 0, 0, 0, 140, 0,
	0, 0, 0, 0, 0, 52, 0, 0, 0, 0,
	0, 0, 0, 0, 205, 0, 0, 0, 0, 0,
	0, 0, 56, 0, 0, 0, 133, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 137, 1575, 1576, 0,
	1608, 1609, 1610, 1618, 1619, 1620, 0, 1737, 0, 1740,
	0, 100, 207, 0, 0, 0, 0, 0, 1611, 1606,
	0, 0, 0, 0, 1155, 0, 1578, 0, 0, 0,
	0, 0, 0, 1624, 0, 0, 135, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	172, 0, 0, 0, 0, 0, 1577, 0, 206, 0,
	0, 0, 0, 0, 0, 0, 1597, 0, 199, 0,
	0, 0, 0, 657, 1594, 0, 200, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 171, 0,
	0, 3, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 233, 235, 0, 0, 233, 0,
	0, 0, 233, 0, 0, 0, 0, 0, 1600, 1601,
	1602, 1603, 0, 0, 1155, 0, 0, 0, 1583, 0,
	233, 235, 233, 0, 233, 0, 0, 0, 0, 0,
	235, 0, 0, 0, 0, 0, 0, 0, 235, 0,
	0, 0, 0, 0, 0, 235, 0, 1615, 0, 0,
	1625, 1155, 674, 0, 0, 0, 1605, 1607, 1088, 0,
	233, 0, 1088, 0, 0, 0, 1088, 0, 0, 0,
	0, 1621, 0, 1622, 0, 0, 675, 0, 0, 0,
	1592, 1593, 0, 0, 1155, 1155, 1155, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1613, 1088, 0,
	1155, 0, 0, 0, 0, 235, 1155, 0, 1598, 0,
	676, 0, 694, 0, 0, 0, 0, 0, 0, 0,
	233, 0, 1088, 233, 0, 0, 0, 0, 1155, 0,
	0, 0, 0, 1623, 0, 0, 677, 0, 0, 678,
	0, 0, 0, 233, 0, 0, 0, 0, 0, 0,
	1612, 0, 657, 233, 0, 233, 701, 233, 0, 233,
	0, 233, 679, 1088, 0, 0, 0, 0, 0, 1088,
	0, 0, 0, 1088, 699, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1088, 0, 0,
	0, 0, 0, 0, 0, 0, 680, 233, 239, 0,
	0, 1604, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 681, 0, 0, 682,
	0, 1599, 0, 0, 703, 911, 0, 911, 643, 0,
	0, 0, 0, 0, 0, 1088, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1616, 0, 1155, 0,
	1155, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 649, 1155, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	649, 0, 0, 0, 0, 702, 0, 0, 0, 0,
	0, 0, 235, 0, 685, 0, 0, 0, 0, 0,
	0, 0, 0, 1155, 0, 235, 0, 235, 0, 0,
	1155, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	235, 0, 0, 0, 1614, 0, 1155, 1155, 1589, 1590,
	1596, 1617, 1595, 1591, 683, 1588, 1586, 1587, 1579, 1580,
	1581, 1582, 1584, 1585, 0, 686, 235, 0, 3873, 0,
	0, 0, 1155, 235, 0, 0, 0, 1155, 0, 0,
	0, 0, 891, 0, 0, 891, 891, 0, 687, 0,
	0, 0, 0, 0, 968, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1084, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1155, 642,
	1084, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	673, 0, 695, 0, 233, 0, 0, 0, 0, 0,
	2199, 688, 0, 0, 0, 0, 0, 0, 1155, 0,
	0, 0, 0, 0, 0, 0, 911, 0, 0, 0,
	693, 0, 0, 0, 0, 1645, 0, 0, 0, 1645,
	0, 0, 0, 0, 689, 0, 0, 706, 0, 705,
	0, 0, 0, 690, 0, 0, 0, 0, 0, 1155,
	0, 0, 0, 0, 0, 0, 691, 0, 0, 0,
	0, 698, 1155, 0, 0, 0, 707, 1088, 704, 1088,
	0, 235, 0, 0, 644, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1088, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1793,
	0, 1071, 0, 0, 0, 0, 233, 0, 0, 0,
	0, 0, 1088, 1155, 0, 0, 0, 1740, 233, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 233, 0, 1088, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 233, 0, 100, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1155,
	0, 0, 1155, 0, 657, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 235, 235, 233, 0, 0, 0, 0, 0, 0,
	233, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 233, 0, 0,
	233, 0, 233, 0, 233, 0, 0, 0, 0, 0,
	0, 233, 233, 0, 0, 0, 100, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1088,
	0, 233, 0, 0, 0, 0, 235, 100, 1088, 1155,
	1155, 0, 0, 0, 0, 0, 0, 233, 0, 233,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 100, 235, 0, 100, 1155,
	100, 0, 0, 0, 0, 0, 0, 0, 0, 1155,
	1155, 0, 0, 0, 0, 0, 233, 233, 233, 233,
	0, 233, 0, 233, 0, 0, 1155, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 100,
	0, 0, 100, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 233, 0, 0, 0, 0, 0,
	0, 0, 233, 0, 0, 0, 0, 235, 0, 0,
	0, 0, 0, 0, 0, 100, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 235, 0, 0,
	0, 0, 1152, 0, 0, 0, 1152, 0, 0, 0,
	1272, 0, 0, 0, 235, 1088, 0, 1088, 0, 1088,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1088, 1088, 0, 0, 0,
	0, 0, 1272, 0, 0, 100, 1088, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1088,
	1088, 1088, 0, 0, 0, 0, 1272, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1272, 0, 0,
	0, 0, 0, 1272, 0, 0, 0, 1272, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1272, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2199, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1793, 1793, 1088, 0, 0, 0, 1645, 0, 1084, 1272,
	0, 0, 0, 0, 0, 0, 0, 0, 1153, 0,
	0, 0, 1153, 1084, 0, 0, 1273, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1739, 0, 0, 0, 0, 1273, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1273, 0, 0, 0, 0, 0, 0, 1088,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 233, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1273, 0, 0, 0, 0, 0, 1273,
	0, 0, 0, 1273, 0, 0, 0, 0, 233, 233,
	0, 233, 0, 0, 0, 1071, 0, 1273, 1739, 0,
	0, 1088, 0, 0, 0, 0, 0, 0, 1088, 0,
	1071, 0, 233, 0, 0, 0, 0, 1088, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1088, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1273, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 657, 0, 0,
	0, 0, 0, 0, 0, 233, 0, 0, 0, 233,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1084, 0, 0, 0, 0, 0, 1088,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 233, 233, 0, 0, 100, 100,
	0, 0, 100, 0, 0, 0, 0, 0, 0, 1088,
	0, 0, 0, 0, 0, 0, 0, 0, 1152, 0,
	0, 233, 0, 0, 0, 0, 0, 0, 0, 649,
	0, 0, 100, 100, 649, 0, 100, 0, 1793, 0,
	0, 0, 0, 0, 0, 0, 1272, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1088, 0, 0, 1152, 233, 0,
	233, 0, 0, 0, 0, 0, 0, 0, 1088, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 233, 0, 0, 0, 0, 0, 0,
	1071, 0, 0, 911, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1575, 1576, 0, 1608, 1609, 1610, 1618,
	1619, 1620, 100, 100, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1611, 1606, 0, 0, 0, 0,
	0, 0, 1578, 1088, 1088, 0, 1088, 0, 0, 1624,
	0, 0, 0, 0, 0, 0, 0, 0, 1088, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1577, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1597, 1272, 1153, 0, 0, 0, 0, 0,
	1594, 0, 1152, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1273, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1153, 1084, 1084, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1600, 1601, 1602, 1603, 0, 0,
	0, 0, 0, 0, 1583, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1615, 0, 0, 1625, 0, 0, 0,
	0, 0, 1605, 1607, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1621, 0, 1622,
	0, 0, 0, 0, 0, 0, 1592, 1593, 0, 1272,
	0, 1272, 0, 1272, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1613, 0, 0, 0, 0, 0, 1272,
	1272, 0, 0, 100, 1598, 0, 0, 0, 0, 0,
	1272, 0, 0, 0, 0, 0, 0, 0, 233, 1273,
	0, 1071, 1071, 1272, 1272, 1272, 0, 0, 1153, 1623,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 649, 233, 0, 1612, 0, 0, 0,
	0, 0, 0, 233, 0, 0, 0, 0, 0, 0,
	0, 233, 0, 0, 0, 0, 0, 0, 233, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1084,
	0, 0, 0, 0, 0, 0, 0, 1604, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1599, 0, 0,
	0, 0, 0, 0, 0, 1088, 1088, 0, 233, 0,
	0, 0, 0, 0, 0, 0, 1152, 0, 0, 0,
	1088, 0, 1616, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1088, 0,
	0, 0, 0, 0, 0, 1273, 0, 1273, 0, 1273,
	1088, 0, 0, 1088, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1273, 1273, 1793, 0, 0,
	0, 1088, 0, 0, 0, 0, 1273, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1273,
	1273, 1273, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1152, 0, 0, 1071, 0, 0, 1793,
	1614, 0, 0, 0, 1589, 1590, 1596, 1617, 1595, 1591,
	0, 1588, 1586, 1587, 1579, 1580, 1581, 1582, 1584, 1585,
	0, 0, 0, 0, 0, 0, 0, 0, 3140, 1084,
	0, 0, 100, 0, 0, 0, 0, 1084, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1739, 0, 0, 0, 0, 0, 0, 0, 1088, 0,
	0, 0, 1152, 0, 0, 0, 0, 1088, 0, 0,
	0, 0, 1088, 0, 0, 0, 0, 0, 0, 0,
	0, 1088, 0, 0, 0, 0, 0, 1088, 1152, 0,
	0, 0, 1153, 0, 0, 233, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1088, 0, 0, 233, 0,
	233, 0, 0, 0, 0, 0, 1088, 0, 0, 0,
	0, 0, 0, 233, 0, 0, 0, 0, 0, 0,
	1088, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 233,
	0, 0, 0, 1272, 0, 0, 233, 0, 0, 0,
	100, 0, 0, 0, 0, 0, 1071, 0, 0, 0,
	1088, 1088, 0, 0, 1071, 0, 0, 0, 0, 1153,
	0, 0, 0, 1152, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1088, 0, 0, 1088, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1152, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1153, 0,
	0, 0, 1272, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1153, 100, 0, 0, 0, 0,
	1793, 0, 0, 0, 0, 100, 0, 0, 0, 0,
	0, 0, 0, 0, 233, 0, 0, 1088, 0, 0,
	0, 0, 0, 0, 0, 100, 0, 0, 0, 0,
	0, 0, 0, 0, 1088, 0, 805, 0, 845, 0,
	0, 0, 0, 0, 1793, 1793, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1272, 1272, 1273,
	1272, 812, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1272, 1793, 1793, 0, 0, 824, 810, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1153,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 811, 0, 1793, 0, 0, 814, 0, 0,
	0, 0, 853, 0, 0, 0, 0, 0, 0, 0,
	821, 822, 0, 0, 0, 0, 838, 0, 0, 0,
	0, 1088, 1088, 0, 233, 233, 0, 0, 0, 0,
	846, 816, 0, 0, 1153, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1273, 0,
	0, 0, 0, 0, 1088, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 844, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	817, 0, 0, 0, 0, 0, 0, 0, 809, 233,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 818, 819, 0, 0,
	0, 0, 0, 1273, 1273, 0, 1273, 0, 0, 233,
	0, 0, 2199, 826, 825, 0, 0, 0, 1273, 0,
	0, 820, 0, 0, 0, 835, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 850,
	0, 0, 0, 0, 1088, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1793, 0, 0, 847,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	233, 1088, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1088, 0, 0, 0,
	233, 0, 0, 815, 0, 0, 852, 0, 0, 0,
	0, 0, 0, 0, 1088, 1088, 1088, 233, 0, 0,
	0, 813, 100, 0, 0, 842, 843, 0, 0, 0,
	1088, 0, 0, 0, 0, 0, 1088, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1152, 0, 0, 0, 840, 0, 0, 0, 1088, 0,
	0, 851, 836, 0, 829, 827, 0, 832, 0, 1793,
	0, 0, 0, 833, 0, 0, 807, 0, 848, 0,
	0, 0, 1152, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 808, 0, 0, 1152, 0, 0,
	0, 0, 0, 0, 0, 834, 0, 0, 0, 0,
	831, 0, 0, 0, 0, 1152, 0, 0, 0, 0,
	849, 0, 0, 0, 0, 0, 0, 0, 837, 0,
	0, 0, 0, 1575, 1576, 0, 1608, 1609, 1610, 1618,
	1619, 1620, 0, 0, 0, 0, 0, 100, 0, 839,
	100, 0, 0, 0, 1611, 1606, 0, 0, 0, 0,
	0, 0, 1578, 0, 0, 0, 1088, 0, 0, 1624,
	0, 841, 0, 0, 1088, 0, 0, 0, 1088, 0,
	1088, 0, 0, 0, 0, 0, 0, 1088, 0, 0,
	0, 0, 1577, 0, 0, 0, 0, 1088, 0, 0,
	0, 0, 1597, 0, 0, 0, 0, 0, 0, 0,
	1594, 0, 1152, 0, 0, 0, 0, 0, 0, 0,
	0, 1272, 0, 0, 0, 0, 1272, 0, 0, 0,
	0, 0, 0, 0, 0, 1272, 1153, 0, 0, 0,
	0, 1152, 0, 1088, 0, 0, 0, 0, 649, 0,
	1088, 0, 0, 0, 0, 0, 0, 0, 0, 1272,
	0, 0, 0, 0, 0, 0, 1088, 1088, 1153, 0,
	1272, 0, 0, 0, 1600, 1601, 1602, 1603, 0, 0,
	0, 0, 0, 1153, 1583, 0, 0, 0, 0, 0,
	0, 0, 1088, 0, 0, 0, 0, 1088, 0, 0,
	0, 1153, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1615, 0, 0, 1625, 0, 0, 0,
	0, 0, 1605, 1607, 1272, 1272, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1621, 1088, 1622,
	0, 0, 0, 0, 0, 0, 1592, 1593, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1613, 0, 0, 0, 0, 1088, 0,
	0, 0, 0, 0, 1598, 0, 0, 1152, 0, 0,
	1152, 0, 0, 0, 0, 0, 0, 0, 0, 1793,
	0, 0, 0, 0, 0, 0, 0, 0, 1153, 1623,
	0, 0, 0, 0, 0, 0, 0, 1273, 0, 1088,
	0, 0, 1273, 0, 0, 0, 1612, 0, 0, 0,
	0, 1273, 1088, 0, 0, 0, 0, 1153, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1273, 0, 1793, 0, 0,
	0, 1152, 0, 0, 0, 0, 1273, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1604, 1152, 0,
	0, 0, 0, 1088, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1599, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1273, 1273, 1616, 0, 0, 0, 0, 0, 0, 1088,
	0, 0, 1088, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1153, 0, 0, 1153, 0, 0, 0,
	0, 1793, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1152, 0,
	1614, 0, 0, 0, 1589, 1590, 1596, 1617, 1595, 1591,
	0, 1588, 1586, 1587, 1579, 1580, 1581, 1582, 1584, 1585,
	0, 0, 0, 0, 0, 0, 0, 0, 2776, 0,
	0, 0, 0, 0, 0, 0, 0, 1153, 0, 1088,
	1088, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1153, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1088,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1088,
	1088, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1575, 1576, 1088, 1608, 1609, 1610,
	1618, 1619, 1620, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1611, 1606, 0, 1272, 0,
	0, 0, 0, 1578, 0, 0, 0, 0, 0, 0,
	1624, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1577, 0, 1272, 0, 0, 0, 0,
	0, 0, 0, 1597, 0, 0, 0, 0, 0, 0,
	0, 1594, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1153, 0, 0, 0, 1272, 1272,
	1272, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1272, 0, 0, 0, 0, 0,
	1152, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1152, 0, 0, 1600, 1601, 1602, 1603, 0,
	0, 0, 0, 0, 0, 1583, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1615, 0, 0, 1625, 0, 0,
	0, 0, 0, 1605, 1607, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1621, 0,
	1622, 0, 0, 0, 1273, 0, 0, 1592, 1593, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1613, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1598, 0, 0, 0, 0,
	0, 1273, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1152, 0, 1152, 0, 0, 0, 0, 0,
	1623, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1152, 0, 0, 1273, 1273, 1273, 1612, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1273, 0, 0, 0, 0, 0, 1153, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1152, 1153, 0,
	0, 0, 0, 0, 1152, 0, 0, 0, 1604, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1272, 1272, 0, 0, 0, 0, 0, 0, 1599, 0,
	0, 0, 0, 0, 0, 0, 1575, 1576, 0, 1608,
	1609, 1610, 1618, 1619, 1620, 0, 1152, 0, 0, 0,
	0, 1272, 0, 1616, 0, 0, 0, 1611, 1606, 0,
	0, 0, 0, 0, 0, 1578, 0, 0, 0, 0,
	0, 0, 1624, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1152, 0, 0, 1577, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1597, 0, 0, 0, 0,
	0, 0, 0, 1594, 0, 0, 0, 0, 1153, 0,
	1153, 0, 1152, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1153, 0, 0,
	0, 1614, 0, 0, 0, 1589, 1590, 1596, 1617, 1595,
	1591, 0, 1588, 1586, 1587, 1579, 1580, 1581, 1582, 1584,
	1585, 0, 0, 1152, 0, 0, 0, 0, 0, 2775,
	0, 0, 0, 0, 0, 0, 1152, 1600, 1601, 1602,
	1603, 0, 0, 1153, 0, 0, 0, 1583, 0, 0,
	1153, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1273, 1273, 0, 0,
	0, 0, 0, 0, 0, 0, 1615, 0, 0, 1625,
	0, 0, 0, 0, 0, 1605, 1607, 1152, 0, 0,
	0, 0, 1153, 0, 0, 0, 0, 1273, 0, 0,
	1621, 0, 1622, 0, 0, 0, 0, 0, 0, 1592,
	1593, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1613, 0, 0, 0,
	0, 0, 0, 1152, 0, 0, 1272, 1598, 1153, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1623, 0, 0, 0, 0, 0, 1153, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1612,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1153,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1153, 0, 0, 0, 0, 0, 0, 0,
	1604, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1599, 0, 0, 1272, 1272, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1153, 0, 1616, 0, 0, 0, 0,
	0, 0, 0, 1272, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1272, 1272, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1272, 0, 0, 0, 0, 0, 0, 0, 0, 1153,
	0, 0, 1273, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1614, 0, 0, 0, 1589, 1590, 1596,
	1617, 1595, 1591, 0, 1588, 1586, 1587, 1579, 1580, 1581,
	1582, 1584, 1585, 0, 0, 0, 0, 0, 0, 0,
	0, 2772, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1273,
	1273, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1150, 0, 1273,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1273,
	1273, 0, 0, 0, 243, 244, 245, 246, 247, 248,
	1156, 249, 250, 1157, 1158, 1159, 1273, 1160, 515, 1161,
	1162, 1163, 1164, 251, 252, 254, 253, 255, 256, 257,
	516, 517, 0, 518, 258, 519, 1165, 259, 260, 261,
	262, 263, 1166, 1167, 0, 264, 520, 521, 522, 1168,
	265, 266, 523, 1169, 1236, 1170, 267, 268, 269, 270,
	271, 272, 273, 0, 1171, 275, 276, 277, 274, 1172,
	278, 0, 279, 280, 281, 1173, 282, 1029, 283, 284,
	1174, 1175, 1177, 1176, 1178, 1179, 1180, 285, 286, 287,
	288, 0, 289, 524, 525, 1181, 293, 290, 291, 1182,
	294, 292, 1183, 295, 296, 1184, 1185, 297, 298, 299,
	1186, 300, 301, 1187, 302, 303, 1188, 304, 305, 526,
	306, 307, 308, 310, 312, 309, 313, 314, 315, 316,
	527, 528, 1189, 240, 1190, 0, 0, 0, 0, 317,
	318, 319, 529, 0, 0, 0, 320, 1191, 321, 1192,
	1193, 1030, 322, 323, 530, 531, 324, 325, 1194, 326,
	532, 1195, 533, 327, 1196, 328, 329, 330, 331, 332,
	534, 535, 536, 387, 1032, 333, 334, 1197, 335, 336,
	337, 338, 0, 0, 0, 241, 339, 340, 342, 1198,
	1031, 341, 537, 538, 1199, 539, 1200, 343, 1033, 540,
	1034, 344, 345, 346, 1035, 347, 0, 0, 0, 348,
	349, 350, 351, 352, 353, 1201, 355, 354, 1202, 356,
	541, 1036, 357, 358, 1037, 1203, 359, 360, 361, 1204,
	1205, 362, 363, 364, 365, 0, 366, 367, 369, 371,
	368, 370, 375, 372, 373, 374, 377, 0, 376, 1038,
	378, 379, 380, 383, 384, 382, 1039, 381, 1206, 242,
	1040, 385, 1207, 542, 386, 543, 388, 389, 1208, 0,
	390, 0, 1209, 1210, 392, 393, 394, 1211, 1212, 395,
	396, 544, 1041, 397, 1042, 545, 398, 399, 391, 400,
	401, 402, 403, 404, 405, 406, 407, 1213, 408, 409,
	546, 547, 548, 410, 549, 411, 412, 1214, 413, 0,
	414, 415, 416, 417, 418, 419, 420, 550, 422, 421,
	423, 1215, 0, 0, 0, 0, 0, 424, 0, 426,
	427, 428, 425, 429, 430, 431, 432, 1216, 433, 434,
	435, 1043, 436, 437, 438, 439, 551, 440, 0, 441,
	442, 448, 449, 443, 444, 450, 451, 452, 453, 454,
	1217, 456, 457, 455, 458, 459, 460, 1218, 461, 445,
	446, 462, 463, 1044, 464, 465, 552, 0, 466, 1219,
	467, 468, 469, 470, 447, 471, 476, 553, 472, 473,
	474, 475, 554, 1220, 478, 479, 0, 477, 1221, 480,
	481, 482, 483, 484, 485, 311, 486, 1222, 487, 555,
	556, 557, 558, 1223, 494, 1224, 488, 489, 559, 490,
	560, 1225, 491, 492, 493, 0, 495, 496, 1226, 1227,
	497, 498, 499, 501, 502, 500, 503, 1228, 504, 1229,
	0, 505, 506, 507, 561, 562, 563, 1230, 509, 508,
	564, 1231, 1232, 1233, 1234, 510, 511, 565, 512, 513,
	514, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1150, 0, 0, 0, 0, 0,
	0, 0, 2362, 0, 0, 0, 0, 0, 0, 0,
	2363, 243, 244, 245, 246, 247, 248, 1156, 249, 250,
	1157, 1158, 1159, 0, 1160, 515, 1161, 1162, 1163, 1164,
	251, 252, 254, 253, 255, 256, 257, 516, 517, 0,
	518, 258, 519, 1165, 259, 260, 261, 262, 263, 1166,
	1167, 0, 264, 520, 521, 522, 1168, 265, 266, 523,
	1169, 1236, 1170, 267, 268, 269, 270, 271, 272, 273,
	0, 1171, 275, 276, 277, 274, 1172, 278, 0, 279,
	280, 281, 1173, 282, 1029, 283, 284, 1174, 1175, 1177,
	1176, 1178, 1179, 1180, 285, 286, 287, 288, 0, 289,
	524, 525, 1181, 293, 290, 291, 1182, 294, 292, 1183,
	295, 296, 1184, 1185, 297, 298, 299, 1186, 300, 301,
	1187, 302, 303, 1188, 304, 305, 526, 306, 307, 308,
	310, 312, 309, 313, 314, 315, 316, 527, 528, 1189,
	240, 1190, 0, 0, 0, 0, 317, 318, 319, 529,
	0, 0, 0, 320, 1191, 321, 1192, 1193, 1030, 322,
	323, 530, 531, 324, 325, 1194, 326, 532, 1195, 533,
	327, 1196, 328, 329, 330, 331, 332, 534, 535, 536,
	387, 1032, 333, 334, 1197, 335, 336, 337, 338, 0,
	0, 0, 241, 339, 340, 342, 1198, 1031, 341, 537,
	538, 1199, 539, 1200, 343, 1033, 540, 1034, 344, 345,
	346, 1035, 347, 0, 0, 0, 348, 349, 350, 351,
	352, 353, 1201, 355, 354, 1202, 356, 541, 1036, 357,
	358, 1037, 1203, 359, 360, 361, 1204, 1205, 362, 363,
	364, 365, 0, 366, 367, 369, 371, 368, 370, 375,
	372, 373, 374, 377, 0, 376, 1038, 378, 379, 380,
	383, 384, 382, 1039, 381, 1206, 242, 1040, 385, 1207,
	542, 386, 543, 388, 389, 1208, 0, 390, 0, 1209,
	1210, 392, 393, 394, 1211, 1212, 395, 396, 544, 1041,
	397, 1042, 545, 398, 399, 391, 400, 401, 402, 403,
	404, 405, 406, 407, 1213, 408, 409, 546, 547, 548,
	410, 549, 411, 412, 1214, 413, 0, 414, 415, 416,
	417, 418, 419, 420, 550, 422, 421, 423, 1215, 0,
	0, 0, 0, 0, 424, 0, 426, 427, 428, 425,
	429, 430, 431, 432, 1216, 433, 434, 435, 1043, 436,
	437, 438, 439, 551, 440, 0, 441, 442, 448, 449,
	443, 444, 450, 451, 452, 453, 454, 1217, 456, 457,
	455, 458, 459, 460, 1218, 461, 445, 446, 462, 463,
	1044, 464, 465, 552, 0, 466, 1219, 467, 468, 469,
	470, 447, 471, 476, 553, 472, 473, 474, 475, 554,
	1220, 478, 479, 0, 477, 1221, 480, 481, 482, 483,
	484, 485, 311, 486, 1222, 487, 555, 556, 557, 558,
	1223, 494, 1224, 488, 489, 559, 490, 560, 1225, 491,
	492, 493, 0, 495, 496, 1226, 1227, 497, 498, 499,
	501, 502, 500, 503, 1228, 504, 1229, 0, 505, 506,
	507, 561, 562, 563, 1230, 509, 508, 564, 1231, 1232,
	1233, 1234, 510, 511, 565, 512, 513, 514, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1150,
	0, 0, 0, 0, 3148, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3150, 243, 244, 245, 246,
	247, 248, 1156, 249, 250, 1157, 1158, 1159, 0, 1160,
	515, 1161, 1162, 1163, 1164, 251, 252, 254, 253, 255,
	256, 257, 516, 517, 0, 518, 258, 519, 1165, 259,
	260, 261, 262, 263, 1166, 1167, 0, 264, 520, 521,
	522, 1168, 265, 266, 523, 1169, 1236, 1170, 267, 268,
	269, 270, 271, 272, 273, 0, 1171, 275, 276, 277,
	274, 1172, 278, 0, 279, 280, 281, 1173, 282, 1029,
	283, 284, 1174, 1175, 1177, 1176, 1178, 1179, 1180, 285,
	286, 287, 288, 0, 289, 524, 525, 1181, 293, 290,
	291, 1182, 294, 292, 1183, 295, 296, 1184, 1185, 297,
	298, 299, 1186, 300, 301, 1187, 302, 303, 1188, 304,
	305, 526, 306, 307, 308, 310, 312, 309, 313, 314,
	315, 316, 527, 528, 1189, 240, 1190, 0, 0, 0,
	0, 317, 318, 319, 529, 0, 0, 0, 320, 1191,
	321, 1192, 1193, 1030, 322, 323, 530, 531, 324, 325,
	1194, 326, 532, 1195, 533, 327, 1196, 328, 329, 330,
	331, 332, 534, 535, 536, 387, 1032, 333, 334, 1197,
	335, 336, 337, 338, 0, 0, 0, 241, 339, 340,
	342, 1198, 1031, 341, 537, 538, 1199, 539, 1200, 343,
	1033, 540, 1034, 344, 345, 346, 1035, 347, 0, 0,
	0, 348, 349, 350, 351, 352, 353, 1201, 355, 354,
	1202, 356, 541, 1036, 357, 358, 1037, 1203, 359, 360,
	361, 1204, 1205, 362, 363, 364, 365, 0, 366, 367,
	369, 371, 368, 370, 375, 372, 373, 374, 377, 0,
	376, 1038, 378, 379, 380, 383, 384, 382, 1039, 381,
	1206, 242, 1040, 385, 1207, 542, 386, 543, 388, 389,
	1208, 0, 390, 0, 1209, 1210, 392, 393, 394, 1211,
	1212, 395, 396, 544, 1041, 397, 1042, 545, 398, 399,
	391, 400, 401, 402, 403, 404, 405, 406, 407, 1213,
	408, 409, 546, 547, 548, 410, 549, 411, 412, 1214,
	413, 0, 414, 415, 416, 417, 418, 419, 420, 550,
	422, 421, 423, 1215, 0, 0, 0, 0, 0, 424,
	0, 426, 427, 428, 425, 429, 430, 431, 432, 1216,
	433, 434, 435, 1043, 436, 437, 438, 439, 551, 440,
	0, 441, 442, 448, 449, 443, 444, 450, 451, 452,
	453, 454, 1217, 456, 457, 455, 458, 459, 460, 1218,
	461, 445, 446, 462, 463, 1044, 464, 465, 552, 0,
	466, 1219, 467, 468, 469, 470, 447, 471, 476, 553,
	472, 473, 474, 475, 554, 1220, 478, 479, 0, 477,
	1221, 480, 481, 482, 483, 484, 485, 311, 486, 1222,
	487, 555, 556, 557, 558, 1223, 494, 1224, 488, 489,
	559, 490, 560, 1225, 491, 492, 493, 0, 495, 496,
	1226, 1227, 497, 498, 499, 501, 502, 500, 503, 1228,
	504, 1229, 0, 505, 506, 507, 561, 562, 563, 1230,
	509, 508, 564, 1231, 1232, 1233, 1234, 510, 511, 565,
	512, 513, 514, 0, 0, 0, 0, 0, 1150, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3469, 243, 244, 245, 246, 247,
	248, 1156, 249, 250, 1157, 1158, 1159, 0, 1160, 515,
	1161, 1162, 1163, 1164, 251, 252, 254, 253, 255, 256,
	257, 516, 517, 0, 518, 258, 519, 1165, 259, 260,
	261, 262, 263, 1166, 1167, 0, 264, 520, 521, 522,
	1168, 265, 266, 523, 1169, 1236, 1170, 267, 268, 269,
	270, 271, 272, 273, 0, 1171, 275, 276, 277, 274,
	1172, 278, 0, 279, 280, 281, 1173, 282, 1029, 283,
	284, 1174, 1175, 1177, 1176, 1178, 1179, 1180, 285, 286,
	287, 288, 0, 289, 524, 525, 1181, 293, 290, 291,
	1182, 294, 292, 1183, 295, 296, 1184, 1185, 297, 298,
	299, 1186, 300, 301, 1187, 302, 303, 1188, 304, 305,
	526, 306, 307, 308, 310, 312, 309, 313, 314, 315,
	316, 527, 528, 1189, 240, 1190, 0, 0, 0, 0,
	317, 318, 319, 529, 0, 0, 0, 320, 1191, 321,
	1192, 1193, 1030, 322, 323, 530, 531, 324, 325, 1194,
	326, 532, 1195, 533, 327, 1196, 328, 329, 330, 331,
	332, 534, 535, 536, 387, 1032, 333, 334, 1197, 335,
	336, 337, 338, 0, 0, 0, 241, 339, 340, 342,
	1198, 1031, 341, 537, 538, 1199, 539, 1200, 343, 1033,
	540, 1034, 344, 345, 346, 1035, 347, 0, 0, 0,
	348, 349, 350, 351, 352, 353, 1201, 355, 354, 1202,
	356, 541, 1036, 357, 358, 1037, 1203, 359, 360, 361,
	1204, 1205, 362, 363, 364, 365, 0, 366, 367, 369,
	371, 368, 370, 375, 372, 373, 374, 377, 0, 376,
	1038, 378, 379, 380, 383, 384, 382, 1039, 381, 1206,
	242, 1040, 385, 1207, 542, 386, 543, 388, 389, 1208,
	0, 390, 0, 1209, 1210, 392, 393, 394, 1211, 1212,
	395, 396, 544, 1041, 397, 1042, 545, 398, 399, 391,
	400, 401, 402, 403, 404, 405, 406, 407, 1213, 408,
	409, 546, 547, 548, 410, 549, 411, 412, 1214, 413,
	0, 414, 415, 416, 417, 418, 419, 420, 550, 422,
	421, 423, 1215, 0, 0, 0, 0, 0, 424, 0,
	426, 427, 428, 425, 429, 430, 431, 432, 1216, 433,
	434, 435, 1043, 436, 437, 438, 439, 551, 440, 0,
	441, 442, 448, 449, 443, 444, 450, 451, 452, 453,
	454, 1217, 456, 457, 455, 458, 459, 460, 1218, 461,
	445, 446, 462, 463, 1044, 464, 465, 552, 0, 466,
	1219, 467, 468, 469, 470, 447, 471, 476, 553, 472,
	473, 474, 475, 554, 1220, 478, 479, 0, 477, 1221,
	480, 481, 482, 483, 484, 485, 311, 486, 1222, 487,
	555, 556, 557, 558, 1223, 494, 1224, 488, 489, 559,
	490, 560, 1225, 491, 492, 493, 0, 495, 496, 1226,
	1227, 497, 498, 499, 501, 502, 500, 503, 1228, 504,
	1229, 0, 505, 506, 507, 561, 562, 563, 1230, 509,
	508, 564, 1231, 1232, 1233, 1234, 510, 511, 565, 512,
	513, 514, 1150, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3627, 243,
	244, 245, 246, 247, 248, 1156, 249, 250, 1157, 1158,
	1159, 0, 1160, 515, 1161, 1162, 1163, 1164, 251, 252,
	254, 253, 255, 256, 257, 516, 517, 0, 518, 258,
	519, 1165, 259, 260, 261, 262, 263, 1166, 1167, 0,
	264, 520, 521, 522, 1168, 265, 266, 523, 1169, 1236,
	1170, 267, 268, 269, 270, 271, 272, 273, 0, 1171,
	275, 276, 277, 274, 1172, 278, 0, 279, 280, 281,
	1173, 282, 1029, 283, 284, 1174, 1175, 1177, 1176, 1178,
	1179, 1180, 285, 286, 287, 288, 0, 289, 524, 525,
	1181, 293, 290, 291, 1182, 294, 292, 1183, 295, 296,
	1184, 1185, 297, 298, 299, 1186, 300, 301, 1187, 302,
	303, 1188, 304, 305, 526, 306, 307, 308, 310, 312,
	309, 313, 314, 315, 316, 527, 528, 1189, 240, 1190,
	0, 0, 0, 0, 317, 318, 319, 529, 0, 0,
	0, 320, 1191, 321, 1192, 1193, 1030, 322, 323, 530,
	531, 324, 325, 1194, 326, 532, 1195, 533, 327, 1196,
	328, 329, 330, 331, 332, 534, 535, 536, 387, 1032,
	333, 334, 1197, 335, 336, 337, 338, 0, 0, 0,
	241, 339, 340, 342, 1198, 1031, 341, 537, 538, 1199,
	539, 1200, 343, 1033, 540, 1034, 344, 345, 346, 1035,
	347, 0, 0, 0, 348, 349, 350, 351, 352, 353,
	1201, 355, 354, 1202, 356, 541, 1036, 357, 358, 1037,
	1203, 359, 360, 361, 1204, 1205, 362, 363, 364, 365,
	0, 366, 367, 369, 371, 368, 370, 375, 372, 373,
	374, 377, 0, 376, 1038, 378, 379, 380, 383, 384,
	382, 1039, 381, 1206, 242, 1040, 385, 1207, 542, 386,
	543, 388, 389, 1208, 0, 390, 0, 1209, 1210, 392,
	393, 394, 1211, 1212, 395, 396, 544, 1041, 397, 1042,
	545, 398, 399, 391, 400, 401, 402, 403, 404, 405,
	406, 407, 1213, 408, 409, 546, 547, 548, 410, 549,
	411, 412, 1214, 413, 0, 414, 415, 416, 417, 418,
	419, 420, 550, 422, 421, 423, 1215, 0, 0, 0,
	0, 0, 424, 0, 426, 427, 428, 425, 429, 430,
	431, 432, 1216, 433, 434, 435, 1043, 436, 437, 438,
	439, 551, 440, 0, 441, 442, 448, 449, 443, 444,
	450, 451, 452, 453, 454, 1217, 456, 457, 455, 458,
	459, 460, 1218, 461, 445, 446, 462, 463, 1044, 464,
	465, 552, 0, 466, 1219, 467, 468, 469, 470, 447,
	471, 476, 553, 472, 473, 474, 475, 554, 1220, 478,
	479, 0, 477, 1221, 480, 481, 482, 483, 484, 485,
	311, 486, 1222, 487, 555, 556, 557, 558, 1223, 494,
	1224, 488, 489, 559, 490, 560, 1225, 491, 492, 493,
	0, 495, 496, 1226, 1227, 497, 498, 499, 501, 502,
	500, 503, 1228, 504, 1229, 0, 505, 506, 507, 561,
	562, 563, 1230, 509, 508, 564, 1231, 1232, 1233, 1234,
	510, 511, 565, 512, 513, 514, 1150, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3526, 243, 244, 245, 246, 247, 248, 1156,
	249, 250, 1157, 1158, 1159, 0, 1160, 515, 1161, 1162,
	1163, 1164, 251, 252, 254, 253, 255, 256, 257, 516,
	517, 0, 518, 258, 519, 1165, 259, 260, 261, 262,
	263, 1166, 1167, 0, 264, 520, 521, 522, 1168, 265,
	266, 523, 1169, 1236, 1170, 267, 268, 269, 270, 271,
	272, 273, 0, 1171, 275, 276, 277, 274, 1172, 278,
	0, 279, 280, 281, 1173, 282, 1029, 283, 284, 1174,
	1175, 1177, 1176, 1178, 1179, 1180, 285, 286, 287, 288,
	0, 289, 524, 525, 1181, 293, 290, 291, 1182, 294,
	292, 1183, 295, 296, 1184, 1185, 297, 298, 299, 1186,
	300, 301, 1187, 302, 303, 1188, 304, 305, 526, 306,
	307, 308, 310, 312, 309, 313, 314, 315, 316, 527,
	528, 1189, 240, 1190, 0, 0, 0, 0, 317, 318,
	319, 529, 0, 0, 0, 320, 1191, 321, 1192, 1193,
	1030, 322, 323, 530, 531, 324, 325, 1194, 326, 532,
	1195, 533, 327, 1196, 328, 329, 330, 331, 332, 534,
	535, 536, 387, 1032, 333, 334, 1197, 335, 336, 337,
	338, 0, 0, 0, 241, 339, 340, 342, 1198, 1031,
	341, 537, 538, 1199, 539, 1200, 343, 1033, 540, 1034,
	344, 345, 346, 1035, 347, 0, 0, 0, 348, 349,
	350, 351, 352, 353, 1201, 355, 354, 1202, 356, 541,
	1036, 357, 358, 1037, 1203, 359, 360, 361, 1204, 1205,
	362, 363, 364, 365, 0, 366, 367, 369, 371, 368,
	370, 375, 372, 373, 374, 377, 0, 376, 1038, 378,
	379, 380, 383, 384, 382, 1039, 381, 1206, 242, 1040,
	385, 1207, 542, 386, 543, 388, 389, 1208, 0, 390,
	0, 1209, 1210, 392, 393, 394, 1211, 1212, 395, 396,
	544, 1041, 397, 1042, 545, 398, 399, 391, 400, 401,
	402, 403, 404, 405, 406, 407, 1213, 408, 409, 546,
	547, 548, 410, 549, 411, 412, 1214, 413, 0, 414,
	415, 416, 417, 418, 419, 420, 550, 422, 421, 423,
	1215, 0, 0, 0, 0, 0, 424, 0, 426, 427,
	428, 425, 429, 430, 431, 432, 1216, 433, 434, 435,
	1043, 436, 437, 438, 439, 551, 440, 0, 441, 442,
	448, 449, 443, 444, 450, 451, 452, 453, 454, 1217,
	456, 457, 455, 458, 459, 460, 1218, 461, 445, 446,
	462, 463, 1044, 464, 465, 552, 0, 466, 1219, 467,
	468, 469, 470, 447, 471, 476, 553, 472, 473, 474,
	475, 554, 1220, 478, 479, 0, 477, 1221, 480, 481,
	482, 483, 484, 485, 311, 486, 1222, 487, 555, 556,
	557, 558, 1223, 494, 1224, 488, 489, 559, 490, 560,
	1225, 491, 492, 493, 0, 495, 496, 1226, 1227, 497,
	498, 499, 501, 502, 500, 503, 1228, 504, 1229, 0,
	505, 506, 507, 561, 562, 563, 1230, 509, 508, 564,
	1231, 1232, 1233, 1234, 510, 511, 565, 512, 513, 514,
	1150, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3399, 243, 244, 245,
	246, 247, 248, 1156, 249, 250, 1157, 1158, 1159, 0,
	1160, 515, 1161, 1162, 1163, 1164, 251, 252, 254, 253,
	255, 256, 257, 516, 517, 0, 518, 258, 519, 1165,
	259, 260, 261, 262, 263, 1166, 1167, 0, 264, 520,
	521, 522, 1168, 265, 266, 523, 1169, 1236, 1170, 267,
	268, 269, 270, 271, 272, 273, 0, 1171, 275, 276,
	277, 274, 1172, 278, 0, 279, 280, 281, 1173, 282,
	1029, 283, 284, 1174, 1175, 1177, 1176, 1178, 1179, 1180,
	285, 286, 287, 288, 0, 289, 524, 525, 1181, 293,
	290, 291, 1182, 294, 292, 1183, 295, 296, 1184, 1185,
	297, 298, 299, 1186, 300, 301, 1187, 302, 303, 1188,
	304, 305, 526, 306, 307, 308, 310, 312, 309, 313,
	314, 315, 316, 527, 528, 1189, 240, 1190, 0, 0,
	0, 0, 317, 318, 319, 529, 0, 0, 0, 320,
	1191, 321, 1192, 1193, 1030, 322, 323, 530, 531, 324,
	325, 1194, 326, 532, 1195, 533, 327, 1196, 328, 329,
	330, 331, 332, 534, 535, 536, 387, 1032, 333, 334,
	1197, 335, 336, 337, 338, 0, 0, 0, 241, 339,
	340, 342, 1198, 1031, 341, 537, 538, 1199, 539, 1200,
	343, 1033, 540, 1034, 344, 345, 346, 1035, 347, 0,
	0, 0, 348, 349, 350, 351, 352, 353, 1201, 355,
	354, 1202, 356, 541, 1036, 357, 358, 1037, 1203, 359,
	360, 361, 1204, 1205, 362, 363, 364, 365, 0, 366,
	367, 369, 371, 368, 370, 375, 372, 373, 374, 377,
	0, 376, 1038, 378, 379, 380, 383, 384, 382, 1039,
	381, 1206, 242, 1040, 385, 1207, 542, 386, 543, 388,
	389, 1208, 0, 390, 0, 1209, 1210, 392, 393, 394,
	1211, 1212, 395, 396, 544, 1041, 397, 1042, 545, 398,
	399, 391, 400, 401, 402, 403, 404, 405, 406, 407,
	1213, 408, 409, 546, 547, 548, 410, 549, 411, 412,
	1214, 413, 0, 414, 415, 416, 417, 418, 419, 420,
	550, 422, 421, 423, 1215, 0, 0, 0, 0, 0,
	424, 0, 426, 427, 428, 425, 429, 430, 431, 432,
	1216, 433, 434, 435, 1043, 436, 437, 438, 439, 551,
	440, 0, 441, 442, 448, 449, 443, 444, 450, 451,
	452, 453, 454, 1217, 456, 457, 455, 458, 459, 460,
	1218, 461, 445, 446, 462, 463, 1044, 464, 465, 552,
	0, 466, 1219, 467, 468, 469, 470, 447, 471, 476,
	553, 472, 473, 474, 475, 554, 1220, 478, 479, 0,
	477, 1221, 480, 481, 482, 483, 484, 485, 311, 486,
	1222, 487, 555, 556, 557, 558, 1223, 494, 1224, 488,
	489, 559, 490, 560, 1225, 491, 492, 493, 0, 495,
	496, 1226, 1227, 497, 498, 499, 501, 502, 500, 503,
	1228, 504, 1229, 0, 505, 506, 507, 561, 562, 563,
	1230, 509, 508, 564, 1231, 1232, 1233, 1234, 510, 511,
	565, 512, 513, 514, 1150, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3166, 243, 244, 245, 246, 247, 248, 1156, 249, 250,
	1157, 1158, 1159, 0, 1160, 515, 1161, 1162, 1163, 1164,
	251, 252, 254, 253, 255, 256, 257, 516, 517, 0,
	518, 258, 519, 1165, 259, 260, 261, 262, 263, 1166,
	1167, 0, 264, 520, 521, 522, 1168, 265, 266, 523,
	1169, 1236, 1170, 267, 268, 269, 270, 271, 272, 273,
	0, 1171, 275, 276, 277, 274, 1172, 278, 0, 279,
	280, 281, 1173, 282, 1029, 283, 284, 1174, 1175, 1177,
	1176, 1178, 1179, 1180, 285, 286, 287, 288, 0, 289,
	524, 525, 1181, 293, 290, 291, 1182, 294, 292, 1183,
	295, 296, 1184, 1185, 297, 298, 299, 1186, 300, 301,
	1187, 302, 303, 1188, 304, 305, 526, 306, 307, 308,
	310, 312, 309, 313, 314, 315, 316, 527, 528, 1189,
	240, 1190, 0, 0, 0, 0, 317, 318, 319, 529,
	0, 0, 0, 320, 1191, 321, 1192, 1193, 1030, 322,
	323, 530, 531, 324, 325, 1194, 326, 532, 1195, 533,
	327, 1196, 328, 329, 330, 331, 332, 534, 535, 536,
	387, 1032, 333, 334, 1197, 335, 336, 337, 338, 0,
	0, 0, 241, 339, 340, 342, 1198, 1031, 341, 537,
	538, 1199, 539, 1200, 343, 1033, 540, 1034, 344, 345,
	346, 1035, 347, 0, 0, 0, 348, 349, 350, 351,
	352, 353, 1201, 355, 354, 1202, 356, 541, 1036, 357,
	358, 1037, 1203, 359, 360, 361, 1204, 1205, 362, 363,
	364, 365, 0, 366, 367, 369, 371, 368, 370, 375,
	372, 373, 374, 377, 0, 376, 1038, 378, 379, 380,
	383, 384, 382, 1039, 381, 1206, 242, 1040, 385, 1207,
	542, 386, 543, 388, 389, 1208, 0, 390, 0, 1209,
	1210, 392, 393, 394, 1211, 1212, 395, 396, 544, 1041,
	397, 1042, 545, 398, 399, 391, 400, 401, 402, 403,
	404, 405, 406, 407, 1213, 408, 409, 546, 547, 548,
	410, 549, 411, 412, 1214, 413, 0, 414, 415, 416,
	417, 418, 419, 420, 550, 422, 421, 423, 1215, 0,
	0, 0, 0, 0, 424, 0, 426, 427, 428, 425,
	429, 430, 431, 432, 1216, 433, 434, 435, 1043, 436,
	437, 438, 439, 551, 440, 0, 441, 442, 448, 449,
	443, 444, 450, 451, 452, 453, 454, 1217, 456, 457,
	455, 458, 459, 460, 1218, 461, 445, 446, 462, 463,
	1044, 464, 465, 552, 0, 466, 1219, 467, 468, 469,
	470, 447, 471, 476, 553, 472, 473, 474, 475, 554,
	1220, 478, 479, 0, 477, 1221, 480, 481, 482, 483,
	484, 485, 311, 486, 1222, 487, 555, 556, 557, 558,
	1223, 494, 1224, 488, 489, 559, 490, 560, 1225, 491,
	492, 493, 0, 495, 496, 1226, 1227, 497, 498, 499,
	501, 502, 500, 503, 1228, 504, 1229, 0, 505, 506,
	507, 561, 562, 563, 1230, 509, 508, 564, 1231, 1232,
	1233, 1234, 510, 511, 565, 512, 513, 514, 1150, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3013, 243, 244, 245, 246, 247,
	248, 1156, 249, 250, 1157, 1158, 1159, 0, 1160, 515,
	1161, 1162, 1163, 1164, 251, 252, 254, 253, 255, 256,
	257, 516, 517, 0, 518, 258, 519, 1165, 259, 260,
	261, 262, 263, 1166, 1167, 0, 264, 520, 521, 522,
	1168, 265, 266, 523, 1169, 1236, 1170, 267, 268, 269,
	270, 271, 272, 273, 0, 1171, 275, 276, 277, 274,
	1172, 278, 0, 279, 280, 281, 1173, 282, 1029, 283,
	284, 1174, 1175, 1177, 1176, 1178, 1179, 1180, 285, 286,
	287, 288, 0, 289, 524, 525, 1181, 293, 290, 291,
	1182, 294, 292, 1183, 295, 296, 1184, 1185, 297, 298,
	299, 1186, 300, 301, 1187, 302, 303, 1188, 304, 305,
	526, 306, 307, 308, 310, 312, 309, 313, 314, 315,
	316, 527, 528, 1189, 240, 1190, 0, 0, 0, 0,
	317, 318, 319, 529, 0, 0, 0, 320, 1191, 321,
	1192, 1193, 1030, 322, 323, 530, 531, 324, 325, 1194,
	326, 532, 1195, 533, 327, 1196, 328, 329, 330, 331,
	332, 534, 535, 536, 387, 1032, 333, 334, 1197, 335,
	336, 337, 338, 0, 0, 0, 241, 339, 340, 342,
	1198, 1031, 341, 537, 538, 1199, 539, 1200, 343, 1033,
	540, 1034, 344, 345, 346, 1035, 347, 0, 0, 0,
	348, 349, 350, 351, 352, 353, 1201, 355, 354, 1202,
	356, 541, 1036, 357, 358, 1037, 1203, 359, 360, 361,
	1204, 1205, 362, 363, 364, 365, 0, 366, 367, 369,
	371, 368, 370, 375, 372, 373, 374, 377, 0, 376,
	1038, 378, 379, 380, 383, 384, 382, 1039, 381, 1206,
	242, 1040, 385, 1207, 542, 386, 543, 388, 389, 1208,
	0, 390, 0, 1209, 1210, 392, 393, 394, 1211, 1212,
	395, 396, 544, 1041, 397, 1042, 545, 398, 399, 391,
	400, 401, 402, 403, 404, 405, 406, 407, 1213, 408,
	409, 546, 547, 548, 410, 549, 411, 412, 1214, 413,
	0, 414, 415, 416, 417, 418, 419, 420, 550, 422,
	421, 423, 1215, 0, 0, 0, 0, 0, 424, 0,
	426, 427, 428, 425, 429, 430, 431, 432, 1216, 433,
	434, 435, 1043, 436, 437, 438, 439, 551, 440, 0,
	441, 442, 448, 449, 443, 444, 450, 451, 452, 453,
	454, 1217, 456, 457, 455, 458, 459, 460, 1218, 461,
	445, 446, 462, 463, 1044, 464, 465, 552, 0, 466,
	1219, 467, 468, 469, 470, 447, 471, 476, 553, 472,
	473, 474, 475, 554, 1220, 478, 479, 0, 477, 1221,
	480, 481, 482, 483, 484, 485, 311, 486, 1222, 487,
	555, 556, 557, 558, 1223, 494, 1224, 488, 489, 559,
	490, 560, 1225, 491, 492, 493, 0, 495, 496, 1226,
	1227, 497, 498, 499, 501, 502, 500, 503, 1228, 504,
	1229, 0, 505, 506, 507, 561, 562, 563, 1230, 509,
	508, 564, 1231, 1232, 1233, 1234, 510, 511, 565, 512,
	513, 514, 1150, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2245, 243,
	244, 245, 246, 247, 248, 1156, 249, 250, 1157, 1158,
	1159, 0, 1160, 515, 1161, 1162, 1163, 1164, 251, 252,
	254, 253, 255, 256, 257, 516, 517, 0, 518, 258,
	519, 1165, 259, 260, 261, 262, 263, 1166, 1167, 0,
	264, 520, 521, 522, 1168, 265, 266, 523, 1169, 1236,
	1170, 267, 268, 269, 270, 271, 272, 273, 0, 1171,
	275, 276, 277, 274, 1172, 278, 0, 279, 280, 281,
	1173, 282, 1029, 283, 284, 1174, 1175, 1177, 1176, 1178,
	1179, 1180, 285, 286, 287, 288, 0, 289, 524, 525,
	1181, 293, 290, 291, 1182, 294, 292, 1183, 295, 296,
	1184, 1185, 297, 298, 299, 1186, 300, 301, 1187, 302,
	303, 1188, 304, 305, 526, 306, 307, 308, 310, 312,
	309, 313, 314, 315, 316, 527, 528, 1189, 240, 1190,
	0, 0, 0, 0, 317, 318, 319, 529, 0, 0,
	0, 320, 1191, 321, 1192, 1193, 1030, 322, 323, 530,
	531, 324, 325, 1194, 326, 532, 1195, 533, 327, 1196,
	328, 329, 330, 331, 332, 534, 535, 536, 387, 1032,
	333, 334, 1197, 335, 336, 337, 338, 0, 0, 0,
	241, 339, 340, 342, 1198, 1031, 341, 537, 538, 1199,
	539, 1200, 343, 1033, 540, 1034, 344, 345, 346, 1035,
	347, 0, 0, 0, 348, 349, 350, 351, 352, 353,
	1201, 355, 354, 1202, 356, 541, 1036, 357, 358, 1037,
	1203, 359, 360, 361, 1204, 1205, 362, 363, 364, 365,
	0, 366, 367, 369, 371, 368, 370, 375, 372, 373,
	374, 377, 0, 376, 1038, 378, 379, 380, 383, 384,
	382, 1039, 381, 1206, 242, 1040, 385, 1207, 542, 386,
	543, 388, 389, 1208, 0, 390, 0, 1209, 1210, 392,
	393, 394, 1211, 1212, 395, 396, 544, 1041, 397, 1042,
	545, 398, 399, 391, 400, 401, 402, 403, 404, 405,
	406, 407, 1213, 408, 409, 546, 547, 548, 410, 549,
	411, 412, 1214, 413, 0, 414, 415, 416, 417, 418,
	419, 420, 550, 422, 421, 423, 1215, 0, 0, 0,
	0, 0, 424, 0, 426, 427, 428, 425, 429, 430,
	431, 432, 1216, 433, 434, 435, 1043, 436, 437, 438,
	439, 551, 440, 0, 441, 442, 448, 449, 443, 444,
	450, 451, 452, 453, 454, 1217, 456, 457, 455, 458,
	459, 460, 1218, 461, 445, 446, 462, 463, 1044, 464,
	465, 552, 0, 466, 1219, 467, 468, 469, 470, 447,
	471, 476, 553, 472, 473, 474, 475, 554, 1220, 478,
	479, 0, 477, 1221, 480, 481, 482, 483, 484, 485,
	311, 486, 1222, 487, 555, 556, 557, 558, 1223, 494,
	1224, 488, 489, 559, 490, 560, 1225, 491, 492, 493,
	0, 495, 496, 1226, 1227, 497, 498, 499, 501, 502,
	500, 503, 1228, 504, 1229, 0, 505, 506, 507, 561,
	562, 563, 1230, 509, 508, 564, 1231, 1232, 1233, 1234,
	510, 511, 565, 512, 513, 514, 1248, 0, 1150, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1929, 0, 0, 243, 244, 245, 246, 247,
	248, 1156, 249, 250, 1157, 1158, 1159, 0, 1160, 515,
	1161, 1162, 1163, 1164, 251, 252, 254, 253, 255, 256,
	257, 516, 517, 0, 518, 258, 519, 1165, 259, 260,
	261, 262, 263, 1166, 1167, 0, 264, 520, 521, 522,
	1168, 265, 266, 523, 1169, 1236, 1170, 267, 268, 269,
	270, 271, 272, 273, 0, 1171, 275, 276, 277, 274,
	1172, 278, 0, 279, 280, 281, 1173, 282, 1029, 283,
	284, 1174, 1175, 1177, 1176, 1178, 1179, 1180, 285, 286,
	287, 288, 0, 289, 524, 525, 1181, 293, 290, 291,
	1182, 294, 292, 1183, 295, 296, 1184, 1185, 297, 298,
	299, 1186, 300, 301, 1187, 302, 303, 1188, 304, 305,
	526, 306, 307, 308, 310, 312, 309, 313, 314, 315,
	316, 527, 528, 1189, 240, 1190, 0, 0, 0, 0,
	317, 318, 319, 529, 0, 0, 0, 320, 1191, 321,
	1192, 1193, 1030, 322, 323, 530, 531, 324, 325, 1194,
	326, 532, 1195, 533, 327, 1196, 328, 329, 330, 331,
	332, 534, 535, 536, 387, 1032, 333, 334, 1197, 335,
	336, 337, 338, 0, 0, 0, 241, 339, 340, 342,
	1198, 1031, 341, 537, 538, 1199, 539, 1200, 343, 1033,
	540, 1034, 344, 345, 346, 1035, 347, 0, 0, 0,
	348, 349, 350, 351, 352, 353, 1201, 355, 354, 1202,
	356, 541, 1036, 357, 358, 1037, 1203, 359, 360, 361,
	1204, 1205, 362, 363, 364, 365, 0, 366, 367, 369,
	371, 368, 370, 375, 372, 373, 374, 377, 0, 376,
	1038, 378, 379, 380, 383, 384, 382, 1039, 381, 1206,
	242, 1040, 385, 1207, 542, 386, 543, 388, 389, 1208,
	0, 390, 0, 1209, 1210, 392, 393, 394, 1211, 1212,
	395, 396, 544, 1041, 397, 1042, 545, 398, 399, 391,
	400, 401, 402, 403, 404, 405, 406, 407, 1213, 408,
	409, 546, 547, 548, 410, 549, 411, 412, 1214, 413,
	0, 414, 415, 416, 417, 418, 419, 420, 550, 422,
	421, 423, 1215, 0, 0, 0, 0, 0, 424, 0,
	426, 427, 428, 425, 429, 430, 431, 432, 1216, 433,
	434, 435, 1043, 436, 437, 438, 439, 551, 440, 0,
	441, 442, 448, 449, 443, 444, 450, 451, 452, 453,
	454, 1217, 456, 457, 455, 458, 459, 460, 1218, 461,
	445, 446, 462, 463, 1044, 464, 465, 552, 0, 466,
	1219, 467, 468, 469, 470, 447, 471, 476, 553, 472,
	473, 474, 475, 554, 1220, 478, 479, 0, 477, 1221,
	480, 481, 482, 483, 484, 485, 311, 486, 1222, 487,
	555, 556, 557, 558, 1223, 494, 1224, 488, 489, 559,
	490, 560, 1225, 491, 492, 493, 0, 495, 496, 1226,
	1227, 497, 498, 499, 501, 502, 500, 503, 1228, 504,
	1229, 0, 505, 506, 507, 561, 562, 563, 1230, 509,
	508, 564, 1231, 1232, 1233, 1234, 510, 511, 565, 512,
	513, 514, 1147, 0, 1150, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 243, 244, 245, 246, 247, 248, 1156, 249, 250,
	1157, 1158, 1159, 0, 1160, 515, 1161, 1162, 1163, 1164,
	251, 252, 254, 253, 255, 256, 257, 516, 517, 0,
	518, 258, 519, 1165, 259, 260, 261, 262, 263, 1166,
	1167, 0, 264, 520, 521, 522, 1168, 265, 266, 523,
	1169, 1236, 1170, 267, 268, 269, 270, 271, 272, 273,
	0, 1171, 275, 276, 277, 274, 1172, 278, 0, 279,
	280, 281, 1173, 282, 1029, 283, 284, 1174, 1175, 1177,
	1176, 1178, 1179, 1180, 285, 286, 287, 288, 0, 289,
	524, 525, 1181, 293, 290, 291, 1182, 294, 292, 1183,
	295, 296, 1184, 1185, 297, 298, 299, 1186, 300, 301,
	1187, 302, 303, 1188, 304, 305, 526, 306, 307, 308,
	310, 312, 309, 313, 314, 315, 316, 527, 528, 1189,
	240, 1190, 0, 0, 0, 0, 317, 318, 319, 529,
	0, 0, 0, 320, 1191, 321, 1192, 1193, 1030, 322,
	323, 530, 531, 324, 325, 1194, 326, 532, 1195, 533,
	327, 1196, 328, 329, 330, 331, 332, 534, 535, 536,
	387, 1032, 333, 334, 1197, 335, 336, 337, 338, 0,
	0, 0, 241, 339, 340, 342, 1198, 1031, 341, 537,
	538, 1199, 539, 1200, 343, 1033, 540, 1034, 344, 345,
	346, 1035, 347, 0, 0, 0, 348, 349, 350, 351,
	352, 353, 1201, 355, 354, 1202, 356, 541, 1036, 357,
	358, 1037, 1203, 359, 360, 361, 1204, 1205, 362, 363,
	364, 365, 0, 366, 367, 369, 371, 368, 370, 375,
	372, 373, 374, 377, 0, 376, 1038, 378, 379, 380,
	383, 384, 382, 1039, 381, 1206, 242, 1040, 385, 1207,
	542, 386, 543, 388, 389, 1208, 0, 390, 0, 1209,
	1210, 392, 393, 394, 1211, 1212, 395, 396, 544, 1041,
	397, 1042, 545, 398, 399, 391, 400, 401, 402, 403,
	404, 405, 406, 407, 1213, 408, 409, 546, 547, 548,
	410, 549, 411, 412, 1214, 413, 0, 414, 415, 416,
	417, 418, 419, 420, 550, 422, 421, 423, 1215, 0,
	0, 0, 0, 0, 424, 0, 426, 427, 428, 425,
	429, 430, 431, 432, 1216, 433, 434, 435, 1043, 436,
	437, 438, 439, 551, 440, 0, 441, 442, 448, 449,
	443, 444, 450, 451, 452, 453, 454, 1217, 456, 457,
	455, 458, 459, 460, 1218, 461, 445, 446, 462, 463,
	1044, 464, 465, 552, 0, 466, 1219, 467, 468, 469,
	470, 447, 471, 476, 553, 472, 473, 474, 475, 554,
	1220, 478, 479, 0, 477, 1221, 480, 481, 482, 483,
	484, 485, 311, 486, 1222, 487, 555, 556, 557, 558,
	1223, 494, 1224, 488, 489, 559, 490, 560, 1225, 491,
	492, 493, 0, 495, 496, 1226, 1227, 497, 498, 499,
	501, 502, 500, 503, 1228, 504, 1229, 0, 505, 506,
	507, 561, 562, 563, 1230, 509, 508, 564, 1231, 1232,
	1233, 1234, 510, 511, 565, 512, 513, 514, 1150, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 243, 244, 245, 246, 247,
	248, 1156, 249, 250, 1157, 1158, 1159, 0, 1160, 515,
	1161, 1162, 1163, 1164, 251, 252, 254, 253, 255, 256,
	257, 516, 517, 0, 518, 258, 519, 1165, 259, 260,
	261, 262, 263, 1166, 1167, 0, 264, 520, 521, 522,
	1168, 265, 266, 523, 1169, 1236, 1170, 267, 268, 269,
	270, 271, 272, 273, 0, 1171, 275, 276, 277, 274,
	1172, 278, 0, 279, 280, 281, 1173, 282, 1029, 283,
	284, 1174, 1175, 1177, 1176, 1178, 1179, 1180, 285, 286,
	287, 288, 0, 289, 524, 525, 1181, 293, 290, 291,
	1182, 294, 292, 1183, 295, 296, 1184, 1185, 297, 298,
	299, 1186, 300, 301, 1187, 302, 303, 1188, 304, 305,
	526, 306, 307, 308, 310, 312, 309, 313, 314, 315,
	316, 527, 528, 1189, 240, 1190, 0, 0, 0, 0,
	317, 318, 319, 529, 0, 0, 0, 320, 1191, 321,
	1192, 1193, 1030, 322, 323, 530, 531, 324, 325, 1194,
	326, 532, 1195, 533, 327, 1196, 328, 329, 330, 331,
	332, 534, 535, 536, 387, 1032, 333, 334, 1197, 335,
	336, 337, 338, 0, 0, 0, 241, 339, 340, 342,
	1198, 1031, 341, 537, 538, 1199, 539, 1200, 343, 1033,
	540, 1034, 344, 345, 346, 1035, 347, 0, 0, 0,
	348, 349, 350, 351, 352, 353, 1201, 355, 354, 1202,
	356, 541, 1036, 357, 358, 1037, 1203, 359, 360, 361,
	1204, 1205, 362, 363, 364, 365, 0, 366, 367, 369,
	371, 368, 370, 375, 372, 373, 374, 377, 0, 376,
	1038, 378, 379, 380, 383, 384, 382, 1039, 381, 1206,
	242, 1040, 385, 1207, 542, 386, 543, 388, 389, 1208,
	0, 390, 0, 1209, 1210, 392, 393, 394, 1211, 1212,
	395, 396, 544, 1041, 397, 1042, 545, 398, 399, 391,
	400, 401, 402, 403, 404, 405, 406, 407, 1213, 408,
	409, 546, 547, 548, 410, 549, 411, 412, 1214, 413,
	0, 414, 415, 416, 417, 418, 419, 420, 550, 422,
	421, 423, 1215, 0, 0, 0, 0, 0, 424, 0,
	426, 427, 428, 425, 429, 430, 431, 432, 1216, 433,
	434, 435, 1043, 436, 437, 438, 439, 551, 440, 0,
	441, 442, 448, 449, 443, 444, 450, 451, 452, 453,
	454, 1217, 456, 457, 455, 458, 459, 460, 1218, 461,
	445, 446, 462, 463, 1044, 464, 465, 552, 0, 466,
	1219, 467, 468, 469, 470, 447, 471, 476, 553, 472,
	473, 474, 475, 554, 1220, 478, 479, 0, 477, 1221,
	480, 481, 482, 483, 484, 485, 311, 486, 1222, 487,
	555, 556, 557, 558, 1223, 494, 1224, 488, 489, 559,
	490, 560, 1225, 491, 492, 493, 0, 495, 496, 1226,
	1227, 497, 498, 499, 501, 502, 500, 503, 1228, 504,
	1229, 0, 505, 506, 507, 561, 562, 563, 1230, 509,
	508, 564, 1231, 1232, 1233, 1234, 510, 511, 565, 512,
	513, 514, 2220, 0, 966, 938, 939, 940, 936, 937,
	949, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 243, 244, 245, 246, 247, 248, 2217, 249, 250,
	0, 0, 0, 0, 0, 990, 954, 0, 0, 0,
	251, 252, 254, 253, 255, 256, 257, 516, 1003, 0,
	1010, 258, 1009, 0, 259, 260, 261, 262, 263, 956,
	989, 923, 264, 1048, 1049, 522, 0, 265, 266, 996,
	0, 977, 0, 267, 268, 269, 270, 271, 272, 273,
	0, 0, 275, 276, 277, 274, 0, 278, 0, 279,
	280, 281, 0, 282, 1029, 283, 284, 980, 978, 979,
	986, 982, 981, 985, 285, 286, 287, 288, 1013, 289,
	1007, 1006, 927, 293, 290, 291, 0, 294, 292, 0,
	295, 296, 2218, 0, 297, 998, 299, 0, 300, 301,
	0, 302, 303, 0, 304, 305, 933, 306, 307, 308,
	310, 312, 309, 313, 314, 315, 316, 1020, 1021, 945,
	240, 0, 0, 0, 0, 0, 317, 318, 319, 1005,
	0, 0, 0, 320, 0, 321, 0, 0, 1030, 322,
	323, 1018, 1019, 324, 325, 0, 326, 1027, 0, 955,
	327, 0, 328, 329, 330, 331, 332, 991, 992, 995,
	387, 1032, 333, 334, 0, 335, 336, 337, 338, 0,
	0, 0, 241, 339, 340, 342, 0, 1031, 341, 1000,
	1001, 0, 961, 0, 343, 1033, 993, 1034, 344, 345,
	346, 1035, 347, 0, 0, 0, 348, 349, 350, 351,
	352, 353, 0, 355, 354, 0, 356, 1028, 1036, 357,
	358, 1037, 0, 359, 360, 361, 984, 983, 362, 363,
	364, 365, 0, 366, 367, 369, 371, 368, 370, 375,
	372, 373, 374, 377, 0, 376, 1038, 378, 379, 380,
	383, 384, 382, 1039, 381, 924, 242, 1040, 385, 946,
	994, 386, 1008, 388, 389, 0, 0, 390, 0, 0,
	0, 392, 393, 394, 0, 0, 395, 396, 544, 1041,
	397, 1042, 1022, 398, 399, 391, 400, 401, 402, 403,
	404, 405, 406, 407, 0, 408, 409, 546, 547, 1023,
	410, 549, 411, 412, 0, 413, 0, 414, 415, 416,
	417, 418, 419, 420, 1004, 422, 421, 423, 0, 0,
	0, 0, 0, 0, 424, 0, 426, 427, 428, 425,
	429, 430, 431, 432, 0, 433, 434, 435, 1043, 436,
	437, 438, 439, 934, 440, 0, 441, 442, 448, 449,
	443, 444, 450, 451, 452, 453, 454, 0, 456, 457,
	455, 458, 459, 460, 987, 461, 445, 446, 462, 463,
	1044, 464, 465, 1002, 0, 466, 0, 467, 468, 469,
	470, 447, 471, 476, 1047, 472, 473, 474, 475, 1024,
	0, 478, 479, 922, 477, 0, 480, 481, 482, 483,
	484, 485, 311, 486, 0, 487, 1014, 1015, 1016, 1017,
	0, 494, 0, 488, 489, 1025, 490, 1026, 944, 491,
	492, 493, 0, 495, 496, 0, 928, 497, 498, 499,
	501, 502, 500, 503, 988, 504, 0, 0, 505, 506,
	507, 561, 1011, 1046, 2216, 509, 508, 564, 0, 0,
	0, 0, 510, 511, 565, 512, 513, 514, 925, 0,
	0, 0, 0, 0, 0, 921, 0, 0, 0, 0,
	0, 0, 919, 920, 2219, 0, 0, 0, 0, 0,
	0, 950, 2215, 0, 912, 948, 966, 938, 939, 940,
	936, 937, 949, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 243, 244, 245, 246, 247, 248, 0,
	249, 250, 0, 0, 0, 0, 0, 990, 954, 0,
	0, 0, 251, 252, 254, 253, 255, 256, 257, 516,
	1003, 0, 1010, 258, 1009, 0, 259, 260, 261, 262,
	263, 956, 989, 923, 264, 1048, 1049, 522, 0, 265,
	266, 996, 0, 977, 0, 267, 268, 269, 270, 271,
	272, 273, 0, 0, 275, 276, 277, 274, 0, 278,
	0, 279, 280, 281, 0, 282, 1029, 283, 284, 980,
	978, 979, 986, 982, 981, 985, 285, 286, 287, 288,
	1013, 289, 1007, 1006, 927, 293, 290, 291, 0, 294,
	292, 0, 295, 296, 0, 0, 297, 998, 299, 0,
	300, 301, 0, 302, 303, 0, 304, 305, 933, 306,
	307, 308, 310, 312, 309, 313, 314, 315, 316, 1020,
	1021, 945, 240, 0, 0, 0, 0, 0, 317, 318,
	319, 1005, 0, 0, 0, 320, 0, 321, 0, 0,
	1030, 322, 323, 1018, 1019, 324, 325, 0, 326, 1027,
	0, 955, 327, 0, 328, 329, 330, 331, 332, 991,
	992, 995, 387, 1032, 333, 334, 0, 335, 336, 337,
	338, 0, 0, 0, 241, 339, 340, 342, 0, 1031,
	341, 1000, 1001, 0, 961, 0, 343, 1033, 993, 1034,
	344, 345, 346, 1035, 347, 0, 0, 0, 348, 349,
	350, 351, 352, 353, 0, 355, 354, 0, 356, 1028,
	1036, 357, 358, 1037, 0, 359, 360, 361, 984, 983,
	362, 363, 364, 365, 0, 366, 367, 369, 371, 368,
	370, 375, 372, 373, 374, 377, 0, 376, 1038, 378,
	379, 380, 383, 384, 382, 1039, 381, 924, 242, 1040,
	385, 946, 994, 386, 1008, 388, 389, 0, 0, 390,
	0, 0, 0, 392, 393, 394, 0, 0, 395, 396,
	544, 1041, 397, 1042, 1022, 398, 399, 391, 400, 401,
	402, 403, 404, 405, 406, 407, 0, 408, 409, 546,
	547, 1023, 410, 549, 411, 412, 0, 413, 0, 414,
	415, 416, 417, 418, 419, 420, 1004, 422, 421, 423,
	0, 0, 0, 0, 0, 0, 424, 0, 426, 427,
	428, 425, 429, 430, 431, 432, 0, 433, 434, 435,
	1043, 436, 437, 438, 439, 934, 440, 0, 441, 442,
	448, 449, 443, 444, 450, 451, 452, 453, 454, 205,
	456, 457, 455, 458, 459, 460, 987, 461, 445, 446,
	462, 463, 1044, 464, 465, 1002, 0, 466, 0, 467,
	468, 469, 470, 447, 471, 476, 1047, 472, 473, 474,
	475, 1024, 0, 478, 479, 922, 477, 207, 480, 481,
	482, 483, 484, 485, 311, 486, 0, 487, 1014, 1015,
	1016, 1017, 0, 494, 0, 488, 489, 1025, 490, 1026,
	944, 491, 492, 493, 0, 495, 496, 0, 928, 497,
	498, 499, 501, 502, 500, 503, 988, 504, 0, 0,
	505, 506, 507, 1418, 1011, 1046, 0, 509, 508, 564,
	0, 0, 0, 199, 510, 511, 565, 512, 513, 514,
	925, 200, 0, 0, 0, 0, 0, 921, 0, 0,
	0, 0, 0, 0, 919, 920, 966, 938, 939, 940,
	936, 937, 949, 1650, 1648, 0, 0, 948, 0, 0,
	0, 0, 0, 243, 244, 245, 246, 247, 248, 0,
	249, 250, 0, 0, 0, 0, 0, 990, 954, 0,
	0, 0, 251, 252, 254, 253, 255, 256, 257, 516,
	1003, 0, 1010, 258, 1009, 0, 259, 260, 261, 262,
	263, 956, 989, 923, 264, 1048, 1049, 522, 0, 265,
	266, 996, 0, 977, 0, 267, 268, 269, 270, 271,
	272, 273, 0, 0, 275, 276, 277, 274, 0, 278,
	0, 279, 280, 281, 0, 282, 1029, 283, 284, 980,
	978, 979, 986, 982, 981, 985, 285, 286, 287, 288,
	1013, 289, 1007, 1006, 927, 293, 290, 291, 0, 294,
	292, 0, 295, 296, 0, 0, 297, 998, 299, 0,
	300, 301, 0, 302, 303, 0, 304, 305, 933, 306,
	307, 308, 310, 312, 309, 313, 314, 315, 316, 1020,
	1021, 945, 240, 0, 0, 0, 0, 0, 317, 318,
	319, 1005, 0, 0, 0, 320, 0, 321, 0, 0,
	1030, 322, 323, 1018, 1019, 324, 325, 0, 326, 1027,
	0, 955, 327, 0, 328, 329, 330, 331, 332, 991,
	992, 995, 387, 1032, 333, 334, 0, 335, 336, 337,
	338, 0, 0, 0, 241, 339, 340, 342, 0, 1031,
	341, 1000, 1001, 0, 961, 0, 343, 1033, 993, 1034,
	344, 345, 346, 1035, 347, 0, 0, 0, 348, 349,
	350, 351, 352, 353, 0, 355, 354, 0, 356, 1028,
	1036, 357, 358, 1037, 0, 359, 360, 361, 984, 983,
	362, 363, 364, 365, 0, 366, 367, 369, 371, 368,
	370, 375, 372, 373, 374, 377, 0, 376, 1038, 378,
	379, 380, 383, 384, 382, 1039, 381, 924, 242, 1040,
	385, 946, 994, 386, 1008, 388, 389, 0, 0, 390,
	0, 0, 0, 392, 393, 394, 0, 0, 395, 396,
	544, 1041, 397, 1042, 1022, 398, 399, 391, 400, 401,
	402, 403, 404, 405, 406, 407, 0, 408, 409, 546,
	547, 1023, 410, 549, 411, 412, 0, 413, 0, 414,
	415, 416, 417, 418, 419, 420, 1004, 422, 421, 423,
	0, 0, 0, 0, 0, 0, 424, 0, 426, 427,
	428, 425, 429, 430, 431, 432, 0, 433, 434, 435,
	1043, 436, 437, 438, 439, 934, 440, 0, 441, 442,
	448, 449, 443, 444, 450, 451, 452, 453, 454, 205,
	456, 457, 455, 458, 459, 460, 987, 461, 445, 446,
	462, 463, 1044, 464, 465, 1002, 0, 466, 0, 467,
	468, 469, 470, 447, 471, 476, 1047, 472, 473, 474,
	475, 1024, 0, 478, 479, 922, 477, 207, 480, 481,
	482, 483, 484, 485, 311, 486, 0, 487, 1014, 1015,
	1016, 1017, 0, 494, 0, 488, 489, 1025, 490, 1026,
	944, 491, 492, 493, 0, 495, 496, 0, 928, 497,
	498, 499, 501, 502, 500, 503, 988, 504, 0, 0,
	505, 506, 507, 1418, 1011, 1046, 0, 509, 508, 564,
	0, 0, 0, 199, 510, 511, 565, 512, 513, 514,
	925, 200, 0, 0, 0, 0, 0, 921, 0, 0,
	0, 0, 0, 0, 919, 920, 966, 938, 939, 940,
	936, 937, 949, 1650, 2728, 0, 0, 948, 0, 0,
	0, 0, 0, 243, 244, 245, 246, 247, 248, 0,
	249, 250, 0, 0, 0, 0, 0, 990, 954, 0,
	0, 0, 251, 252, 254, 253, 255, 256, 257, 516,
	1003, 0, 1010, 258, 1009, 0, 259, 260, 261, 262,
	263, 956, 989, 923, 264, 1048, 1049, 522, 0, 265,
	266, 996, 0, 977, 0, 267, 268, 269, 270, 271,
	272, 273, 0, 0, 275, 276, 277, 274, 0, 278,
	0, 279, 280, 281, 0, 282, 1029, 283, 284, 980,
	978, 979, 986, 982, 981, 985, 285, 286, 287, 288,
	1013, 289, 1007, 1006, 927, 293, 290, 291, 0, 294,
	292, 0, 295, 296, 0, 0, 297, 998, 299, 0,
	300, 301, 0, 302, 303, 0, 304, 305, 933, 306,
	307, 308, 310, 312, 309, 313, 314, 315, 316, 1020,
	1021, 945, 240, 0, 0, 0, 0, 0, 317, 318,
	319, 1005, 0, 0, 0, 320, 0, 321, 0, 0,
	1030, 322, 323, 1018, 1019, 324, 325, 0, 326, 1027,
	0, 955, 327, 0, 328, 329, 330, 331, 332, 991,
	992, 995, 387, 1032, 333, 334, 0, 335, 336, 337,
	338, 0, 0, 0, 241, 339, 340, 342, 0, 1031,
	341, 1000, 1001, 0, 961, 0, 343, 1033, 993, 1034,
	344, 345, 346, 1035, 347, 0, 0, 0, 348, 349,
	350, 351, 352, 353, 0, 355, 354, 0, 356, 1028,
	1036, 357, 358, 1037, 0, 359, 360, 361, 984, 983,
	362, 363, 364, 365, 0, 366, 367, 369, 371, 368,
	370, 375, 372, 373, 374, 377, 0, 376, 1038, 378,
	379, 380, 383, 384, 382, 1039, 381, 924, 242, 1040,
	385, 946, 994, 386, 1008, 388, 389, 0, 0, 390,
	0, 0, 0, 392, 393, 394, 0, 0, 395, 396,
	544, 1041, 397, 1042, 1022, 398, 399, 391, 400, 401,
	402, 403, 404, 405, 406, 407, 0, 408, 409, 546,
	547, 1023, 410, 549, 411, 412, 0, 413, 0, 414,
	415, 416, 417, 418, 419, 420, 1004, 422, 421, 423,
	0, 0, 0, 0, 0, 0, 424, 0, 426, 427,
	428, 425, 429, 430, 431, 432, 0, 433, 434, 435,
	1043, 436, 437, 438, 439, 934, 440, 0, 441, 442,
	448, 449, 443, 444, 450, 451, 452, 453, 454, 205,
	456, 457, 455, 458, 459, 460, 987, 461, 445, 446,
	462, 463, 1044, 464, 465, 1002, 0, 466, 0, 467,
	468, 469, 470, 447, 471, 476, 1047, 472, 473, 474,
	475, 1024, 0, 478, 479, 922, 477, 207, 480, 481,
	482, 483, 484, 485, 311, 486, 0, 487, 1014, 1015,
	1016, 1017, 0, 494, 0, 488, 489, 1025, 490, 1026,
	944, 491, 492, 493, 0, 495, 496, 0, 928, 497,
	498, 499, 501, 502, 500, 503, 988, 504, 0, 0,
	505, 506, 507, 1418, 1011, 1046, 0, 509, 508, 564,
	0, 0, 0, 199, 510, 511, 565, 512, 513, 514,
	925, 200, 0, 0, 0, 0, 0, 921, 0, 0,
	0, 0, 0, 0, 919, 920, 966, 938, 939, 940,
	936, 937, 949, 1650, 1648, 0, 0, 948, 0, 0,
	0, 0, 0, 243, 244, 245, 246, 247, 248, 0,
	249, 250, 0, 0, 0, 0, 0, 990, 954, 0,
	0, 0, 251, 252, 254, 253, 255, 256, 257, 516,
	1003, 0, 1010, 258, 1009, 2324, 259, 260, 261, 262,
	263, 956, 989, 923, 264, 1048, 1049, 522, 0, 265,
	266, 996, 0, 977, 0, 267, 268, 269, 270, 271,
	272, 273, 0, 0, 275, 276, 277, 274, 0, 278,
	0, 279, 280, 281, 0, 282, 1029, 283, 284, 980,
	978, 979, 986, 982, 981, 985, 285, 286, 287, 288,
	1013, 289, 1007, 1006, 927, 293, 290, 291, 0, 294,
	292, 0, 295, 296, 0, 0, 297, 998, 299, 0,
	300, 301, 0, 302, 303, 0, 304, 305, 933, 306,
	307, 308, 310, 312, 309, 313, 314, 315, 316, 1020,
	1021, 945, 240, 0, 0, 0, 0, 0, 317, 318,
	319, 1005, 0, 0, 0, 320, 0, 321, 0, 2329,
	1030, 322, 323, 1018, 1019, 324, 325, 0, 326, 1027,
	0, 955, 327, 0, 328, 329, 330, 331, 332, 991,
	992, 995, 387, 1032, 333, 334, 0, 335, 336, 337,
	338, 0, 0, 0, 241, 339, 340, 342, 0, 1031,
	341, 1000, 1001, 0, 961, 0, 343, 1033, 993, 1034,
	344, 345, 346, 1035, 347, 0, 0, 0, 348, 349,
	350, 351, 352, 353, 0, 355, 354, 2325, 356, 1028,
	1036, 357, 358, 1037, 0, 359, 360, 361, 984, 983,
	362, 363, 364, 365, 0, 366, 367, 369, 371, 368,
	370, 375, 372, 373, 374, 377, 0, 376, 1038, 378,
	379, 380, 383, 384, 382, 1039, 381, 924, 242, 1040,
	385, 946, 994, 386, 1008, 388, 389, 0, 0, 390,
	0, 0, 0, 392, 393, 394, 0, 0, 395, 396,
	544, 1041, 397, 1042, 1022, 398, 399, 391, 400, 401,
	402, 403, 404, 405, 406, 407, 0, 408, 409, 546,
	547, 1023, 410, 549, 411, 412, 0, 413, 0, 414,
	415, 416, 417, 418, 419, 420, 1004, 422, 421, 423,
	0, 0, 0, 0, 0, 0, 424, 0, 426, 427,
	428, 425, 429, 430, 431, 432, 0, 433, 434, 435,
	1043, 436, 437, 438, 439, 934, 440, 0, 441, 442,
	448, 449, 443, 444, 450, 451, 452, 453, 454, 0,
	456, 457, 455, 458, 459, 460, 987, 461, 445, 446,
	462, 463, 1044, 464, 465, 1002, 0, 466, 0, 467,
	468, 469, 470, 447, 471, 476, 1047, 472, 473, 474,
	475, 1024, 0, 478, 479, 922, 477, 0, 480, 481,
	482, 483, 484, 485, 311, 486, 0, 487, 1014, 1015,
	1016, 1017, 0, 494, 2326, 488, 489, 1025, 490, 1026,
	944, 491, 492, 493, 0, 495, 496, 0, 928, 497,
	498, 499, 501, 502, 500, 503, 988, 504, 0, 0,
	505, 506, 507, 561, 1011, 1046, 0, 509, 508, 564,
	0, 0, 0, 0, 510, 511, 565, 512, 513, 514,
	925, 0, 0, 0, 0, 0, 0, 921, 0, 0,
	0, 0, 0, 0, 919, 920, 0, 0, 0, 0,
	0, 0, 0, 950, 0, 0, 2265, 948, 966, 938,
	939, 940, 936, 937, 949, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 243, 244, 245, 246, 247,
	248, 0, 249, 250, 0, 0, 0, 0, 0, 990,
	954, 0, 0, 0, 251, 252, 254, 253, 255, 256,
	257, 516, 1003, 0, 1010, 258, 1009, 0, 259, 260,
	261, 262, 263, 956, 989, 923, 264, 1048, 1049, 522,
	0, 265, 266, 996, 0, 977, 0, 267, 268, 269,
	270, 271, 272, 273, 0, 0, 275, 276, 277, 274,
	0, 278, 0, 279, 280, 281, 0, 282, 1029, 283,
	284, 980, 978, 979, 986, 982, 981, 985, 285, 286,
	287, 288, 1013, 289, 1007, 1006, 927, 293, 290, 291,
	0, 294, 292, 0, 295, 296, 0, 0, 297, 998,
	299, 0, 300, 301, 0, 302, 303, 0, 304, 305,
	933, 306, 307, 308, 310, 312, 309, 313, 314, 315,
	316, 1020, 1021, 945, 240, 0, 0, 0, 0, 0,
	317, 318, 319, 1005, 0, 0, 0, 320, 0, 321,
	0, 0, 1030, 322, 323, 1018, 1019, 324, 325, 0,
	326, 1027, 0, 955, 327, 0, 328, 329, 330, 331,
	332, 991, 992, 995, 387, 1032, 333, 334, 0, 335,
	336, 337, 338, 0, 0, 0, 241, 339, 340, 342,
	0, 1031, 341, 1000, 1001, 0, 961, 0, 343, 1033,
	993, 1034, 344, 345, 346, 1035, 347, 0, 0, 0,
	348, 349, 350, 351, 352, 353, 0, 355, 354, 0,
	356, 1028, 1036, 357, 358, 1037, 0, 359, 360, 361,
	984, 983, 362, 363, 364, 365, 0, 366, 367, 369,
	371, 368, 370, 375, 372, 373, 374, 377, 0, 376,
	1038, 378, 379, 380, 383, 384, 382, 1039, 381, 924,
	242, 1040, 385, 946, 994, 386, 1008, 388, 389, 0,
	0, 390, 0, 0, 0, 392, 393, 394, 0, 0,
	395, 396, 544, 1041, 397, 1042, 1022, 398, 399, 391,
	400, 401, 402, 403, 404, 405, 406, 407, 0, 408,
	409, 546, 547, 1023, 410, 549, 411, 412, 0, 413,
	0, 414, 415, 416, 417, 418, 419, 420, 1004, 422,
	421, 423, 0, 0, 0, 0, 0, 0, 424, 0,
	426, 427, 428, 425, 429, 430, 431, 432, 0, 433,
	434, 435, 1043, 436, 437, 438, 439, 934, 440, 0,
	441, 442, 448, 449, 443, 444, 450, 451, 452, 453,
	454, 0, 456, 457, 455, 458, 459, 460, 987, 461,
	445, 446, 462, 463, 1044, 464, 465, 1002, 0, 466,
	0, 467, 468, 469, 470, 447, 471, 476, 1047, 472,
	473, 474, 475, 1024, 0, 478, 479, 922, 477, 0,
	480, 481, 482, 483, 484, 485, 311, 486, 0, 487,
	1014, 1015, 1016, 1017, 0, 494, 0, 488, 489, 1025,
	490, 1026, 944, 491, 492, 493, 0, 495, 496, 0,
	928, 497, 498, 499, 501, 502, 500, 503, 988, 504,
	0, 0, 505, 506, 507, 561, 1011, 1046, 0, 509,
	508, 564, 0, 0, 0, 0, 510, 511, 565, 512,
	513, 514, 925, 0, 0, 0, 0, 0, 0, 921,
	0, 0, 0, 0, 0, 0, 919, 920, 0, 0,
	0, 0, 0, 0, 0, 950, 2263, 0, 2262, 948,
	966, 938, 939, 940, 936, 937, 949, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 243, 244, 245,
	246, 247, 248, 0, 249, 250, 0, 0, 0, 0,
	0, 990, 954, 0, 0, 0, 251, 252, 254, 253,
	255, 256, 257, 516, 1003, 0, 1010, 258, 1009, 0,
	259, 260, 261, 262, 263, 956, 989, 923, 264, 1048,
	1049, 522, 0, 265, 266, 996, 0, 977, 0, 267,
	268, 269, 270, 271, 272, 273, 0, 0, 275, 276,
	277, 274, 0, 278, 0, 279, 280, 281, 0, 282,
	1029, 283, 284, 980, 978, 979, 986, 982, 981, 985,
	285, 286, 287, 288, 1013, 289, 1007, 1006, 927, 293,
	290, 291, 0, 294, 292, 0, 295, 296, 0, 0,
	297, 998, 299, 0, 300, 301, 0, 302, 303, 0,
	304, 305, 933, 306, 307, 308, 310, 312, 309, 313,
	314, 315, 316, 1020, 1021, 945, 240, 0, 0, 0,
	0, 0, 317, 318, 319, 1005, 0, 0, 0, 320,
	0, 321, 0, 0, 1030, 322, 323, 1018, 1019, 324,
	325, 0, 326, 1027, 0, 955, 327, 0, 328, 329,
	330, 331, 332, 991, 992, 995, 387, 1032, 333, 334,
	0, 335, 336, 337, 338, 0, 0, 0, 241, 339,
	340, 342, 0, 1031, 341, 1000, 1001, 0, 961, 0,
	343, 1033, 993, 1034, 344, 345, 346, 1035, 347, 0,
	0, 0, 348, 349, 350, 351, 352, 353, 0, 355,
	354, 0, 356, 1028, 1036, 357, 358, 1037, 0, 359,
	360, 361, 984, 983, 362, 363, 364, 365, 0, 366,
	367, 369, 371, 368, 370, 375, 372, 373, 374, 377,
	0, 376, 1038, 378, 379, 380, 383, 384, 382, 1039,
	381, 924, 242, 1040, 385, 946, 994, 386, 1008, 388,
	389, 0, 0, 390, 0, 0, 0, 392, 393, 394,
	0, 0, 395, 396, 544, 1041, 397, 1042, 1022, 398,
	399, 391, 400, 401, 402, 403, 404, 405, 406, 407,
	0, 408, 409, 546, 547, 1023, 410, 549, 411, 412,
	0, 413, 0, 414, 415, 416, 417, 418, 419, 420,
	1004, 422, 421, 423, 0, 0, 0, 0, 0, 0,
	424, 0, 426, 427, 428, 425, 429, 430, 431, 432,
	0, 433, 434, 435, 1043, 436, 437, 438, 439, 934,
	440, 0, 441, 442, 448, 449, 443, 444, 450, 451,
	452, 453, 454, 0, 456, 457, 455, 458, 459, 460,
	987, 461, 445, 446, 462, 463, 1044, 464, 465, 1002,
	0, 466, 0, 467, 468, 469, 470, 447, 471, 476,
	1047, 472, 473, 474, 475, 1024, 0, 478, 479, 922,
	477, 0, 480, 481, 482, 483, 484, 485, 311, 486,
	0, 487, 1014, 1015, 1016, 1017, 0, 494, 0, 488,
	489, 1025, 490, 1026, 944, 491, 492, 493, 0, 495,
	496, 0, 928, 497, 498, 499, 501, 502, 500, 503,
	988, 504, 0, 0, 505, 506, 507, 561, 1011, 1046,
	0, 509, 508, 564, 0, 0, 0, 0, 510, 511,
	565, 512, 513, 514, 925, 0, 0, 0, 0, 0,
	0, 921, 0, 0, 0, 0, 0, 0, 919, 920,
	0, 0, 0, 0, 0, 0, 0, 950, 2260, 0,
	2259, 948, 966, 938, 939, 940, 936, 937, 949, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 243,
	244, 245, 246, 247, 248, 0, 249, 250, 0, 0,
	0, 0, 0, 990, 954, 0, 0, 0, 251, 252,
	254, 253, 255, 256, 257, 516, 1003, 0, 1010, 258,
	1009, 0, 259, 260, 261, 262, 263, 956, 989, 923,
	264, 1048, 1049, 522, 0, 265, 266, 996, 0, 977,
	0, 267, 268, 269, 270, 271, 272, 273, 0, 0,
	275, 276, 277, 274, 0, 278, 0, 279, 280, 281,
	0, 282, 1029, 283, 284, 980, 978, 979, 986, 982,
	981, 985, 285, 286, 287, 288, 1013, 289, 1007, 1006,
	927, 293, 290, 291, 0, 294, 292, 0, 295, 296,
	0, 0, 297, 998, 299, 0, 300, 301, 0, 302,
	303, 0, 304, 305, 933, 306, 307, 308, 310, 312,
	309, 313, 314, 315, 316, 1020, 1021, 945, 240, 0,
	0, 0, 0, 0, 317, 318, 319, 1005, 0, 0,
	0, 320, 0, 321, 0, 0, 1030, 322, 323, 1018,
	1019, 324, 325, 0, 326, 1027, 0, 955, 327, 0,
	328, 329, 330, 331, 332, 991, 992, 995, 387, 1032,
	333, 334, 0, 335, 336, 337, 338, 0, 0, 0,
	241, 339, 340, 342, 0, 1031, 341, 1000, 1001, 0,
	961, 0, 343, 1033, 993, 1034, 344, 345, 346, 1035,
	347, 0, 0, 0, 348, 349, 350, 351, 352, 353,
	0, 355, 354, 0, 356, 1028, 1036, 357, 358, 1037,
	0, 359, 360, 361, 984, 983, 362, 363, 364, 365,
	0, 366, 367, 369, 371, 368, 370, 375, 372, 373,
	374, 377, 0, 376, 1038, 378, 379, 380, 383, 384,
	382, 1039, 381, 924, 242, 1040, 385, 946, 994, 386,
	1008, 388, 389, 0, 0, 390, 0, 0, 0, 392,
	393, 394, 0, 0, 395, 396, 544, 1041, 397, 1042,
	1022, 398, 399, 391, 400, 401, 402, 403, 404, 405,
	406, 407, 0, 408, 409, 546, 547, 1023, 410, 549,
	411, 412, 0, 413, 0, 414, 415, 416, 417, 418,
	419, 420, 1004, 422, 421, 423, 0, 0, 0, 0,
	0, 0, 424, 0, 426, 427, 428, 425, 429, 430,
	431, 432, 0, 433, 434, 435, 1043, 436, 437, 438,
	439, 934, 440, 0, 441, 442, 448, 449, 443, 444,
	450, 451, 452, 453, 454, 0, 456, 457, 455, 458,
	459, 460, 987, 461, 445, 446, 462, 463, 1044, 464,
	465, 1002, 0, 466, 0, 467, 468, 469, 470, 447,
	471, 476, 1047, 472, 473, 474, 475, 1024, 0, 478,
	479, 922, 477, 0, 480, 481, 482, 483, 484, 485,
	311, 486, 0, 487, 1014, 1015, 1016, 1017, 0, 494,
	0, 488, 489, 1025, 490, 1026, 944, 491, 492, 493,
	0, 495, 496, 0, 928, 497, 498, 499, 501, 502,
	500, 503, 988, 504, 0, 0, 505, 506, 507, 561,
	1011, 1046, 0, 509, 508, 564, 0, 0, 0, 0,
	510, 511, 565, 512, 513, 514, 925, 0, 0, 0,
	0, 0, 0, 921, 0, 0, 0, 0, 0, 0,
	919, 920, 0, 0, 0, 0, 0, 0, 0, 950,
	2257, 0, 2256, 948, 966, 938, 939, 940, 936, 937,
	949, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 243, 244, 245, 246, 247, 248, 0, 249, 250,
	0, 0, 0, 0, 0, 990, 954, 0, 0, 0,
	251, 252, 254, 253, 255, 256, 257, 516, 1003, 0,
	1010, 258, 1009, 0, 259, 260, 261, 262, 263, 956,
	989, 923, 264, 1048, 1049, 522, 0, 265, 266, 996,
	0, 977, 0, 267, 268, 269, 270, 271, 272, 273,
	0, 0, 275, 276, 277, 274, 0, 278, 0, 279,
	280, 281, 0, 282, 1029, 283, 284, 980, 978, 979,
	986, 982, 981, 985, 285, 286, 287, 288, 1013, 289,
	1007, 1006, 927, 293, 290, 291, 0, 294, 292, 0,
	295, 296, 0, 0, 297, 998, 299, 0, 300, 301,
	0, 302, 303, 0, 304, 305, 933, 306, 307, 308,
	310, 312, 309, 313, 314, 315, 316, 1020, 1021, 945,
	240, 0, 0, 0, 0, 0, 317, 318, 319, 1005,
	0, 0, 0, 320, 0, 321, 0, 0, 1030, 322,
	323, 1018, 1019, 324, 325, 0, 326, 1027, 0, 955,
	327, 0, 328, 329, 330, 331, 332, 991, 992, 995,
	387, 1032, 333, 334, 0, 335, 336, 337, 338, 0,
	0, 0, 241, 339, 340, 342, 0, 1031, 341, 1000,
	1001, 0, 961, 0, 343, 1033, 993, 1034, 344, 345,
	346, 1035, 347, 0, 0, 0, 348, 349, 350, 351,
	352, 353, 0, 355, 354, 0, 356, 1028, 1036, 357,
	358, 1037, 0, 359, 360, 361, 984, 983, 362, 363,
	364, 365, 0, 366, 367, 369, 371, 368, 370, 375,
	372, 373, 374, 377, 0, 376, 1038, 378, 379, 380,
	383, 384, 382, 1039, 381, 924, 242, 1040, 385, 946,
	994, 386, 1008, 388, 389, 0, 0, 390, 0, 0,
	0, 392, 393, 394, 0, 0, 395, 396, 544, 1041,
	397, 1042, 1022, 398, 399, 391, 400, 401, 402, 403,
	404, 405, 406, 407, 0, 408, 409, 546, 547, 1023,
	410, 549, 411, 412, 0, 413, 0, 414, 415, 416,
	417, 418, 419, 420, 1004, 422, 421, 423, 0, 0,
	0, 0, 0, 0, 424, 0, 426, 427, 428, 425,
	429, 430, 431, 432, 0, 433, 434, 435, 1043, 436,
	437, 438, 439, 934, 440, 0, 441, 442, 448, 449,
	443, 444, 450, 451, 452, 453, 454, 0, 456, 457,
	455, 458, 459, 460, 987, 461, 445, 446, 462, 463,
	1044, 464, 465, 1002, 0, 466, 0, 467, 468, 469,
	470, 447, 471, 476, 1047, 472, 473, 474, 475, 1024,
	0, 478, 479, 922, 477, 0, 480, 481, 482, 483,
	484, 485, 311, 486, 0, 487, 1014, 1015, 1016, 1017,
	0, 494, 0, 488, 489, 1025, 490, 1026, 944, 491,
	492, 493, 0, 495, 496, 0, 928, 497, 498, 499,
	501, 502, 500, 503, 988, 504, 0, 0, 505, 506,
	507, 561, 1011, 1046, 0, 509, 508, 564, 0, 0,
	0, 0, 510, 511, 565, 512, 513, 514, 925, 0,
	0, 0, 0, 0, 0, 921, 0, 0, 0, 0,
	0, 0, 919, 920, 0, 0, 0, 0, 0, 0,
	0, 950, 2254, 0, 1503, 948, 966, 938, 939, 940,
	936, 937, 949, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 243, 244, 245, 246, 247, 248, 0,
	249, 250, 0, 0, 0, 0, 0, 990, 954, 0,
	0, 0, 251, 252, 254, 253, 255, 256, 257, 516,
	1003, 0, 1010, 258, 1009, 0, 259, 260, 261, 262,
	263, 956, 989, 923, 264, 1048, 1049, 522, 0, 265,
	266, 996, 0, 977, 0, 267, 268, 269, 270, 271,
	272, 273, 0, 0, 275, 276, 277, 274, 0, 278,
	0, 279, 280, 281, 0, 282, 1029, 283, 284, 980,
	978, 979, 986, 982, 981, 985, 285, 286, 287, 288,
	1013, 289, 1007, 1006, 927, 293, 290, 291, 0, 294,
	292, 0, 295, 296, 0, 0, 297, 998, 299, 0,
	300, 301, 0, 302, 303, 0, 304, 305, 933, 306,
	307, 308, 310, 312, 309, 313, 314, 315, 316, 1020,
	1021, 945, 240, 0, 0, 0, 0, 0, 317, 318,
	319, 1005, 0, 0, 0, 320, 0, 321, 0, 0,
	1030, 322, 323, 1018, 1019, 324, 325, 0, 326, 1027,
	0, 955, 327, 0, 328, 329, 330, 331, 332, 991,
	992, 995, 387, 1032, 333, 334, 0, 335, 336, 337,
	338, 0, 0, 0, 241, 339, 340, 342, 0, 1031,
	341, 1000, 1001, 0, 961, 0, 343, 1033, 993, 1034,
	344, 345, 346, 1035, 347, 0, 0, 0, 348, 349,
	350, 351, 352, 353, 0, 355, 354, 0, 356, 1028,
	1036, 357, 358, 1037, 0, 359, 360, 361, 984, 983,
	362, 363, 364, 365, 0, 366, 367, 369, 371, 368,
	370, 375, 372, 373, 374, 377, 0, 376, 1038, 378,
	379, 380, 383, 384, 382, 1039, 381, 924, 242, 1040,
	385, 946, 994, 386, 1008, 388, 389, 0, 0, 390,
	0, 0, 0, 392, 393, 394, 0, 0, 395, 396,
	544, 1041, 397, 1042, 1022, 398, 399, 391, 400, 401,
	402, 403, 404, 405, 406, 407, 0, 408, 409, 546,
	547, 1023, 410, 549, 411, 412, 0, 413, 0, 414,
	415, 416, 417, 418, 419, 420, 1004, 422, 421, 423,
	0, 0, 0, 0, 0, 0, 424, 0, 426, 427,
	428, 425, 429, 430, 431, 432, 0, 433, 434, 435,
	1043, 436, 437, 438, 439, 934, 440, 0, 441, 442,
	448, 449, 443, 444, 450, 451, 452, 453, 454, 0,
	456, 457, 455, 458, 459, 460, 987, 461, 445, 446,
	462, 463, 1044, 464, 465, 1002, 0, 466, 0, 467,
	468, 469, 470, 447, 471, 476, 1047, 472, 473, 474,
	475, 1024, 0, 478, 479, 922, 477, 0, 480, 481,
	482, 483, 484, 485, 311, 486, 0, 487, 1014, 1015,
	1016, 1017, 0, 494, 0, 488, 489, 1025, 490, 1026,
	944, 491, 492, 493, 0, 495, 496, 0, 928, 497,
	498, 499, 501, 502, 500, 503, 988, 504, 0, 0,
	505, 506, 507, 561, 1011, 1046, 0, 509, 508, 564,
	1502, 0, 0, 0, 510, 511, 565, 512, 513, 514,
	925, 0, 0, 0, 0, 0, 0, 921, 0, 0,
	0, 0, 0, 0, 919, 920, 0, 0, 0, 0,
	0, 0, 0, 950, 0, 0, 915, 948, 966, 938,
	939, 940, 936, 937, 949, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 243, 244, 245, 246, 247,
	248, 0, 249, 250, 0, 0, 0, 0, 0, 990,
	954, 0, 0, 0, 251, 252, 254, 253, 255, 256,
	257, 516, 1003, 0, 1010, 258, 1009, 0, 259, 260,
	261, 262, 263, 956, 989, 923, 264, 1048, 1049, 522,
	0, 265, 266, 996, 0, 977, 0, 267, 268, 269,
	270, 271, 272, 273, 0, 0, 275, 276, 277, 274,
	0, 278, 0, 279, 280, 281, 0, 282, 1029, 283,
	284, 980, 978, 979, 986, 982, 981, 985, 285, 286,
	287, 288, 1013, 289, 1007, 1006, 927, 293, 290, 291,
	0, 294, 292, 0, 295, 296, 0, 0, 297, 998,
	299, 0, 300, 301, 0, 302, 303, 0, 304, 305,
	933, 306, 307, 308, 310, 312, 309, 313, 314, 315,
	316, 1020, 1021, 945, 240, 0, 0, 0, 0, 0,
	317, 318, 319, 1005, 0, 0, 0, 320, 0, 321,
	0, 0, 1030, 322, 323, 1018, 1019, 324, 325, 0,
	326, 1027, 0, 955, 327, 0, 328, 329, 330, 331,
	332, 991, 992, 995, 387, 1032, 333, 334, 0, 335,
	336, 337, 338, 0, 0, 0, 241, 339, 340, 342,
	0, 1031, 341, 1000, 1001, 0, 961, 0, 343, 1033,
	993, 1034, 344, 345, 346, 1035, 347, 0, 0, 0,
	348, 349, 350, 351, 352, 353, 0, 355, 354, 0,
	356, 1028, 1036, 357, 358, 1037, 0, 359, 360, 361,
	984, 983, 362, 363, 364, 365, 0, 366, 367, 369,
	371, 368, 370, 375, 372, 373, 374, 377, 0, 376,
	1038, 378, 379, 380, 383, 384, 382, 1039, 381, 924,
	242, 1040, 385, 946, 994, 386, 1008, 388, 389, 0,
	0, 390, 0, 929, 0, 392, 393, 394, 0, 0,
	395, 396, 544, 1041, 397, 1042, 1022, 398, 399, 391,
	400, 401, 402, 403, 404, 405, 406, 407, 0, 408,
	409, 546, 547, 1023, 410, 549, 411, 412, 0, 413,
	0, 414, 415, 416, 417, 418, 419, 420, 1004, 422,
	421, 423, 0, 0, 0, 0, 0, 0, 424, 0,
	426, 427, 428, 425, 429, 430, 431, 432, 0, 433,
	434, 435, 1043, 436, 437, 438, 439, 934, 440, 0,
	441, 442, 448, 449, 443, 444, 450, 451, 452, 453,
	454, 0, 456, 457, 455, 458, 459, 460, 987, 461,
	445, 446, 462, 463, 1044, 464, 465, 1002, 0, 466,
	0, 467, 468, 469, 470, 447, 471, 476, 1047, 472,
	473, 474, 475, 1024, 0, 478, 479, 922, 477, 0,
	480, 481, 482, 483, 484, 485, 311, 486, 0, 487,
	1014, 1015, 1016, 1017, 0, 494, 0, 488, 489, 1025,
	490, 1026, 944, 491, 492, 493, 0, 495, 496, 0,
	928, 497, 498, 499, 501, 502, 500, 503, 988, 504,
	0, 0, 505, 506, 507, 561, 1011, 1046, 0, 509,
	508, 564, 0, 0, 0, 0, 510, 511, 565, 512,
	513, 514, 925, 0, 0, 0, 0, 0, 0, 921,
	0, 0, 0, 0, 0, 0, 919, 920, 966, 938,
	939, 940, 936, 937, 949, 950, 0, 0, 0, 948,
	0, 0, 0, 0, 0, 243, 244, 245, 246, 247,
	248, 0, 249, 250, 0, 0, 0, 0, 0, 990,
	954, 0, 0, 0, 251, 252, 254, 253, 255, 256,
	257, 516, 1003, 0, 1010, 258, 1009, 0, 259, 260,
	261, 262, 263, 956, 989, 923, 264, 1048, 1049, 522,
	0, 265, 266, 996, 0, 977, 0, 267, 268, 269,
	270, 271, 272, 273, 0, 0, 275, 276, 277, 274,
	0, 278, 0, 279, 3892, 281, 0, 282, 1029, 283,
	284, 980, 978, 979, 986, 982, 981, 985, 285, 286,
	287, 288, 1013, 289, 1007, 1006, 927, 293, 290, 291,
	0, 294, 292, 0, 295, 296, 0, 0, 297, 998,
	299, 0, 300, 301, 0, 302, 303, 0, 304, 305,
	933, 306, 307, 308, 310, 312, 309, 313, 314, 315,
	316, 1020, 1021, 945, 240, 0, 0, 0, 0, 0,
	317, 318, 319, 1005, 0, 0, 0, 320, 0, 321,
	0, 0, 1030, 322, 323, 1018, 1019, 324, 325, 0,
	326, 1027, 0, 955, 327, 0, 328, 329, 330, 331,
	332, 991, 992, 995, 387, 1032, 333, 334, 0, 335,
	336, 337, 338, 0, 0, 0, 241, 339, 340, 342,
	0, 1031, 341, 1000, 1001, 0, 961, 0, 343, 1033,
	993, 1034, 344, 345, 346, 1035, 347, 0, 0, 0,
	348, 349, 350, 351, 352, 353, 0, 355, 354, 0,
	356, 1028, 1036, 357, 358, 1037, 0, 359, 360, 361,
	984, 983, 362, 363, 364, 365, 0, 366, 367, 369,
	371, 368, 370, 375, 372, 373, 374, 377, 0, 376,
	1038, 378, 379, 380, 383, 384, 382, 1039, 381, 924,
	242, 1040, 385, 946, 994, 386, 1008, 388, 389, 0,
	0, 390, 0, 929, 0, 392, 393, 394, 0, 0,
	395, 396, 544, 1041, 397, 1042, 1022, 398, 399, 391,
	400, 401, 402, 403, 404, 405, 406, 407, 0, 408,
	409, 546, 547, 1023, 410, 549, 411, 412, 0, 413,
	0, 414, 415, 416, 417, 418, 419, 420, 1004, 422,
	421, 423, 0, 0, 0, 0, 0, 0, 424, 0,
	426, 427, 428, 425, 429, 430, 431, 432, 0, 433,
	434, 435, 1043, 436, 437, 438, 439, 934, 440, 0,
	441, 442, 448, 449, 443, 444, 450, 451, 452, 453,
	454, 0, 456, 457, 455, 458, 459, 460, 987, 461,
	445, 446, 462, 463, 1044, 464, 465, 1002, 0, 466,
	0, 467, 468, 469, 470, 447, 471, 476, 1047, 472,
	473, 474, 475, 1024, 0, 478, 479, 922, 477, 0,
	480, 481, 482, 483, 484, 485, 311, 486, 0, 487,
	1014, 1015, 1016, 1017, 0, 494, 0, 488, 489, 1025,
	490, 1026, 944, 491, 492, 493, 0, 495, 496, 0,
	928, 497, 498, 499, 501, 502, 500, 503, 988, 504,
	0, 0, 505, 506, 507, 561, 1011, 1046, 0, 509,
	508, 564, 0, 0, 0, 0, 510, 511, 565, 512,
	513, 514, 925, 0, 0, 0, 0, 0, 0, 921,
	0, 0, 0, 0, 0, 0, 919, 920, 966, 938,
	939, 940, 936, 937, 949, 950, 0, 0, 0, 948,
	0, 0, 0, 0, 0, 243, 244, 245, 246, 247,
	248, 0, 249, 250, 0, 0, 0, 0, 0, 990,
	954, 0, 0, 0, 251, 252, 254, 253, 255, 256,
	257, 516, 1003, 0, 1010, 258, 1009, 0, 259, 260,
	261, 262, 263, 956, 989, 923, 264, 1048, 1049, 522,
	0, 265, 266, 996, 0, 977, 0, 267, 268, 269,
	270, 271, 272, 273, 0, 0, 275, 276, 277, 274,
	0, 278, 0, 279, 280, 281, 0, 282, 1029, 283,
	284, 980, 978, 979, 986, 982, 981, 985, 285, 286,
	287, 288, 1013, 289, 1007, 1006, 927, 293, 290, 291,
	0, 294, 292, 0, 295, 296, 0, 0, 297, 998,
	299, 0, 300, 301, 0, 302, 303, 0, 304, 305,
	933, 306, 307, 308, 310, 312, 309, 313, 314, 315,
	316, 1020, 1021, 945, 240, 0, 0, 0, 0, 0,
	317, 318, 319, 1005, 0, 0, 0, 320, 0, 321,
	0, 0, 1030, 322, 323, 1018, 1019, 324, 325, 0,
	326, 1027, 0, 955, 327, 0, 328, 329, 330, 331,
	332, 991, 992, 995, 387, 1032, 333, 334, 0, 335,
	336, 337, 338, 0, 0, 0, 2134, 339, 340, 342,
	0, 1031, 341, 1000, 1001, 0, 961, 0, 343, 1033,
	993, 1034, 344, 345, 346, 1035, 347, 0, 0, 0,
	348, 349, 350, 351, 352, 353, 0, 355, 354, 0,
	356, 1028, 1036, 357, 358, 1037, 0, 359, 360, 361,
	984, 983, 362, 363, 364, 365, 0, 366, 367, 369,
	371, 368, 370, 375, 372, 373, 374, 377, 0, 376,
	1038, 378, 379, 380, 383, 384, 382, 1039, 381, 924,
	242, 1040, 385, 946, 994, 386, 1008, 388, 389, 0,
	0, 390, 0, 0, 0, 392, 393, 394, 0, 0,
	395, 396, 544, 1041, 397, 1042, 1022, 398, 399, 391,
	400, 401, 402, 403, 404, 405, 406, 407, 0, 408,
	409, 546, 547, 1023, 410, 549, 411, 412, 2133, 413,
	0, 414, 415, 416, 417, 418, 419, 420, 1004, 422,
	421, 423, 0, 0, 0, 0, 0, 0, 424, 0,
	426, 427, 428, 425, 429, 430, 431, 432, 0, 433,
	434, 435, 1043, 436, 437, 438, 439, 934, 440, 0,
	441, 442, 448, 449, 443, 444, 450, 451, 452, 453,
	454, 0, 456, 457, 455, 458, 459, 460, 987, 461,
	445, 446, 462, 463, 1044, 464, 465, 1002, 0, 466,
	0, 467, 468, 469, 470, 447, 471, 476, 1047, 472,
	473, 474, 475, 1024, 0, 478, 479, 922, 477, 0,
	480, 481, 482, 483, 484, 485, 311, 486, 0, 487,
	1014, 1015, 1016, 1017, 0, 494, 0, 488, 489, 1025,
	490, 1026, 944, 491, 492, 493, 0, 495, 496, 0,
	928, 497, 498, 499, 501, 502, 500, 503, 988, 504,
	0, 0, 505, 506, 507, 561, 1011, 1046, 0, 509,
	508, 564, 0, 0, 0, 0, 510, 511, 565, 512,
	513, 514, 925, 0, 0, 0, 0, 0, 0, 921,
	0, 0, 0, 0, 0, 0, 919, 920, 966, 938,
	939, 940, 936, 937, 949, 950, 0, 0, 0, 948,
	0, 0, 0, 0, 0, 243, 244, 245, 246, 247,
	248, 0, 249, 250, 0, 0, 0, 0, 0, 990,
	954, 0, 0, 0, 251, 252, 254, 253, 255, 256,
	257, 516, 1003, 0, 1010, 258, 1009, 0, 259, 260,
	261, 262, 263, 956, 989, 923, 264, 1048, 1049, 522,
	0, 265, 266, 996, 0, 977, 0, 267, 268, 269,
	270, 271, 272, 273, 0, 0, 275, 276, 277, 274,
	0, 278, 0, 279, 3689, 281, 0, 282, 1029, 283,
	284, 980, 978, 979, 986, 982, 981, 985, 285, 286,
	287, 288, 1013, 289, 1007, 1006, 927, 293, 290, 291,
	0, 294, 292, 0, 295, 296, 0, 0, 297, 998,
	299, 0, 300, 301, 0, 302, 303, 0, 304, 305,
	933, 306, 307, 308, 310, 312, 309, 313, 314, 315,
	316, 1020, 1021, 945, 240, 0, 0, 0, 0, 0,
	317, 318, 319, 1005, 0, 0, 0, 320, 0, 321,
	0, 0, 1030, 322, 323, 1018, 1019, 324, 325, 0,
	326, 1027, 0, 955, 327, 0, 328, 329, 330, 331,
	332, 991, 992, 995, 387, 1032, 333, 334, 0, 335,
	336, 337, 338, 0, 0, 0, 241, 339, 340, 342,
	0, 1031, 341, 1000, 1001, 0, 961, 0, 343, 1033,
	993, 1034, 344, 345, 346, 1035, 347, 0, 0, 0,
	348, 349, 350, 351, 352, 353, 0, 355, 354, 0,
	356, 1028, 1036, 357, 358, 1037, 0, 359, 360, 361,
	984, 983, 362, 363, 364, 365, 0, 366, 367, 369,
	371, 368, 370, 375, 372, 373, 374, 377, 0, 376,
	1038, 378, 379, 380, 383, 384, 382, 1039, 381, 924,
	242, 1040, 385, 946, 994, 386, 1008, 388, 389, 0,
	0, 390, 0, 929, 0, 392, 393, 394, 0, 0,
	395, 396, 544, 1041, 397, 1042, 1022, 398, 399, 391,
	400, 401, 402, 403, 404, 405, 406, 407, 0, 408,
	409, 546, 547, 1023, 410, 549, 411, 412, 0, 413,
	0, 414, 415, 416, 417, 418, 419, 420, 1004, 422,
	421, 423, 0, 0, 0, 0, 0, 0, 424, 0,
	426, 427, 428, 425, 429, 430, 431, 432, 0, 433,
	434, 435, 1043, 436, 437, 438, 439, 934, 440, 0,
	441, 442, 448, 449, 443, 444, 450, 451, 452, 453,
	454, 0, 456, 457, 455, 458, 459, 460, 987, 461,
	445, 446, 462, 463, 1044, 464, 465, 1002, 0, 466,
	0, 467, 468, 469, 470, 447, 471, 476, 1047, 472,
	473, 474, 475, 1024, 0, 478, 479, 922, 477, 0,
	480, 481, 482, 483, 484, 485, 311, 486, 0, 487,
	1014, 1015, 1016, 1017, 0, 494, 0, 488, 489, 1025,
	490, 1026, 944, 491, 492, 493, 0, 495, 496, 0,
	928, 497, 498, 499, 501, 502, 500, 503, 988, 504,
	0, 0, 505, 506, 507, 561, 1011, 1046, 0, 509,
	508, 564, 0, 0, 0, 0, 510, 511, 565, 512,
	513, 514, 925, 0, 0, 0, 0, 0, 0, 921,
	0, 0, 0, 0, 0, 0, 919, 920, 966, 938,
	939, 940, 936, 937, 949, 950, 0, 0, 0, 948,
	0, 0, 0, 0, 0, 243, 244, 245, 246, 247,
	248, 0, 249, 250, 0, 0, 0, 0, 0, 990,
	954, 0, 0, 0, 251, 252, 254, 253, 255, 256,
	257, 516, 1003, 0, 1010, 258, 1009, 0, 259, 260,
	261, 262, 263, 956, 989, 923, 264, 1048, 1049, 522,
	0, 265, 266, 996, 0, 977, 0, 267, 268, 269,
	270, 271, 272, 273, 0, 0, 275, 276, 277, 274,
	0, 278, 0, 279, 280, 281, 0, 282, 1029, 283,
	284, 980, 978, 979, 986, 982, 981, 985, 285, 286,
	287, 288, 1013, 289, 1007, 1006, 927, 293, 290, 291,
	0, 294, 292, 0, 295, 296, 0, 0, 297, 998,
	299, 0, 300, 301, 0, 302, 303, 0, 304, 305,
	933, 306, 307, 308, 310, 312, 309, 313, 314, 315,
	316, 1020, 1021, 945, 240, 0, 0, 0, 0, 0,
	317, 318, 319, 1005, 0, 0, 0, 320, 0, 321,
	0, 0, 1030, 322, 323, 1018, 1019, 324, 325, 0,
	326, 1027, 0, 955, 327, 0, 328, 329, 330, 331,
	332, 991, 992, 995, 387, 1032, 333, 334, 0, 335,
	336, 337, 338, 0, 0, 0, 241, 339, 340, 342,
	0, 1031, 341, 1000, 1001, 0, 961, 0, 343, 1033,
	993, 1034, 344, 345, 346, 1035, 347, 0, 0, 0,
	348, 349, 350, 351, 352, 353, 0, 355, 354, 0,
	356, 1028, 1036, 357, 358, 1037, 0, 359, 360, 361,
	984, 983, 362, 363, 364, 365, 0, 366, 367, 369,
	371, 368, 370, 375, 372, 373, 374, 377, 0, 376,
	1038, 378, 379, 380, 383, 384, 382, 1039, 381, 924,
	3368, 1040, 385, 946, 994, 386, 1008, 388, 389, 0,
	0, 390, 0, 0, 0, 392, 393, 394, 0, 0,
	395, 396, 544, 1041, 397, 1042, 1022, 398, 399, 391,
	400, 401, 402, 403, 404, 405, 406, 407, 0, 408,
	409, 546, 547, 1023, 410, 549, 411, 412, 0, 413,
	0, 414, 415, 416, 417, 418, 419, 420, 1004, 422,
	421, 423, 0, 0, 0, 0, 0, 0, 424, 0,
	426, 427, 428, 425, 429, 430, 431, 432, 0, 433,
	434, 435, 1043, 436, 437, 438, 439, 934, 440, 0,
	441, 442, 448, 449, 443, 444, 450, 451, 452, 453,
	454, 0, 456, 457, 455, 458, 459, 460, 987, 461,
	445, 446, 462, 463, 1044, 464, 465, 1002, 0, 466,
	0, 467, 468, 469, 470, 447, 471, 476, 1047, 472,
	473, 474, 475, 1024, 0, 478, 479, 922, 477, 0,
	480, 481, 482, 483, 484, 485, 311, 486, 0, 487,
	1014, 1015, 1016, 1017, 0, 494, 0, 488, 489, 1025,
	490, 1026, 944, 491, 492, 493, 0, 495, 496, 0,
	928, 497, 498, 499, 501, 502, 500, 503, 988, 504,
	0, 0, 505, 506, 507, 561, 1011, 1046, 0, 509,
	508, 564, 0, 0, 0, 0, 510, 511, 565, 512,
	513, 514, 925, 0, 0, 0, 0, 0, 0, 921,
	0, 0, 0, 0, 0, 0, 919, 920, 1718, 0,
	0, 0, 0, 0, 0, 950, 0, 0, 0, 948,
	966, 938, 939, 940, 936, 937, 949, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 243, 244, 245,
	246, 247, 248, 0, 249, 250, 0, 0, 0, 0,
	0, 990, 954, 0, 0, 0, 251, 252, 254, 253,
	255, 256, 257, 516, 1003, 0, 1010, 258, 1009, 0,
	259, 260, 261, 262, 263, 956, 989, 923, 264, 1048,
	1049, 522, 0, 265, 266, 996, 0, 977, 0, 267,
	268, 269, 270, 271, 272, 273, 0, 0, 275, 276,
	277, 274, 0, 278, 0, 279, 280, 281, 0, 282,
	1029, 283, 284, 980, 978, 979, 986, 982, 981, 985,
	285, 286, 287, 288, 1013, 289, 1007, 1006, 927, 293,
	290, 291, 0, 294, 292, 0, 295, 296, 0, 0,
	297, 998, 299, 0, 300, 301, 0, 302, 303, 0,
	304, 305, 933, 306, 307, 308, 310, 312, 309, 313,
	314, 315, 316, 1020, 1021, 945, 240, 0, 0, 0,
	0, 0, 317, 318, 319, 1005, 0, 0, 0, 320,
	0, 321, 0, 0, 1030, 322, 323, 1018, 1019, 324,
	325, 0, 326, 1027, 0, 955, 327, 0, 328, 329,
	330, 331, 332, 991, 992, 995, 387, 1032, 333, 334,
	0, 335, 336, 337, 338, 0, 0, 0, 241, 339,
	340, 342, 0, 1031, 341, 1000, 1001, 0, 961, 0,
	343, 1033, 993, 1034, 344, 345, 346, 1035, 347, 0,
	0, 0, 348, 349, 350, 351, 352, 353, 0, 355,
	354, 0, 356, 1028, 1036, 357, 358, 1037, 0, 359,
	360, 361, 984, 983, 362, 363, 364, 365, 0, 366,
	367, 369, 371, 368, 370, 375, 372, 373, 374, 377,
	0, 376, 1038, 378, 379, 380, 383, 384, 382, 1039,
	381, 924, 242, 1040, 385, 946, 994, 386, 1008, 388,
	389, 0, 0, 390, 0, 0, 0, 392, 393, 394,
	0, 0, 395, 396, 544, 1041, 397, 1042, 1022, 398,
	399, 391, 400, 401, 402, 403, 404, 405, 406, 407,
	0, 408, 409, 546, 547, 1023, 410, 549, 411, 412,
	0, 413, 0, 414, 415, 416, 417, 418, 419, 420,
	1004, 422, 421, 423, 0, 0, 0, 0, 0, 0,
	424, 0, 426, 427, 428, 425, 429, 430, 431, 432,
	0, 433, 434, 435, 1043, 436, 437, 438, 439, 934,
	440, 0, 441, 442, 448, 449, 443, 444, 450, 451,
	452, 453, 454, 0, 456, 457, 455, 458, 459, 460,
	987, 461, 445, 446, 462, 463, 1044, 464, 465, 1002,
	0, 466, 0, 467, 468, 469, 470, 447, 471, 476,
	1047, 472, 473, 474, 475, 1024, 0, 478, 479, 922,
	477, 0, 480, 481, 482, 483, 484, 485, 311, 486,
	0, 487, 1014, 1015, 1016, 1017, 0, 494, 0, 488,
	489, 1025, 490, 1026, 944, 491, 492, 493, 0, 495,
	496, 0, 928, 497, 498, 499, 501, 502, 500, 503,
	988, 504, 0, 0, 505, 506, 507, 561, 1011, 1046,
	3144, 509, 508, 564, 0, 0, 0, 0, 510, 511,
	565, 512, 513, 514, 925, 0, 0, 0, 0, 0,
	0, 921, 0, 0, 0, 0, 0, 0, 919, 920,
	966, 938, 939, 940, 936, 937, 949, 950, 0, 0,
	0, 948, 0, 0, 0, 0, 0, 243, 244, 245,
	246, 247, 248, 0, 249, 250, 0, 0, 0, 0,
	0, 990, 954, 0, 0, 0, 251, 252, 254, 253,
	255, 256, 257, 516, 1003, 0, 1010, 258, 1009, 0,
	259, 260, 261, 262, 263, 956, 989, 923, 264, 1048,
	1049, 522, 0, 265, 266, 996, 0, 977, 0, 267,
	268, 269, 270, 271, 272, 273, 0, 0, 275, 276,
	277, 274, 0, 278, 0, 279, 280, 281, 0, 282,
	1029, 283, 284, 980, 978, 979, 986, 982, 981, 985,
	285, 286, 287, 288, 1013, 289, 1007, 1006, 927, 293,
	290, 291, 0, 294, 292, 0, 295, 296, 0, 0,
	297, 998, 299, 0, 300, 301, 0, 302, 303, 0,
	304, 305, 933, 306, 307, 308, 310, 312, 309, 313,
	314, 315, 316, 1020, 1021, 945, 240, 0, 0, 0,
	0, 0, 317, 318, 319, 1005, 0, 0, 0, 320,
	0, 321, 0, 0, 1030, 322, 323, 1018, 1019, 324,
	325, 0, 326, 1027, 0, 955, 327, 0, 328, 329,
	330, 331, 332, 991, 992, 995, 387, 1032, 333, 334,
	0, 335, 336, 337, 338, 0, 0, 0, 241, 339,
	340, 342, 0, 1031, 341, 1000, 1001, 0, 961, 0,
	343, 1033, 993, 1034, 344, 345, 346, 1035, 347, 0,
	0, 0, 348, 349, 350, 351, 352, 353, 0, 355,
	354, 0, 356, 1028, 1036, 357, 358, 1037, 0, 359,
	360, 361, 984, 983, 362, 363, 364, 365, 0, 366,
	367, 369, 371, 368, 370, 375, 372, 373, 374, 377,
	0, 376, 1038, 378, 379, 380, 383, 384, 382, 1039,
	381, 924, 242, 1040, 385, 946, 994, 386, 1008, 388,
	389, 0, 0, 390, 0, 929, 0, 392, 393, 394,
	0, 0, 395, 396, 544, 1041, 397, 1042, 1022, 398,
	399, 391, 400, 401, 402, 403, 404, 405, 406, 407,
	0, 408, 409, 546, 547, 1023, 410, 549, 411, 412,
	0, 413, 0, 414, 415, 416, 417, 418, 419, 420,
	1004, 422, 421, 423, 0, 0, 0, 0, 0, 0,
	424, 0, 426, 427, 428, 425, 429, 430, 431, 432,
	0, 433, 434, 435, 1043, 436, 437, 438, 439, 934,
	440, 0, 441, 442, 448, 449, 443, 444, 450, 451,
	452, 453, 454, 0, 456, 457, 455, 458, 459, 460,
	987, 461, 445, 446, 462, 463, 1044, 464, 465, 1002,
	0, 466, 0, 467, 468, 469, 470, 447, 471, 476,
	1047, 472, 473, 474, 475, 1024, 0, 478, 479, 922,
	477, 0, 480, 481, 482, 483, 484, 485, 311, 486,
	0, 487, 1014, 1015, 1016, 1017, 0, 494, 0, 488,
	489, 1025, 490, 1026, 944, 491, 492, 493, 0, 495,
	496, 0, 928, 497, 498, 499, 501, 502, 500, 503,
	988, 504, 0, 0, 505, 506, 507, 561, 1011, 1046,
	0, 509, 508, 564, 0, 0, 0, 0, 510, 511,
	565, 512, 513, 514, 925, 0, 0, 0, 0, 0,
	0, 921, 0, 0, 0, 0, 0, 0, 919, 920,
	966, 938, 939, 940, 936, 937, 949, 950, 0, 0,
	0, 948, 0, 0, 0, 0, 0, 243, 244, 245,
	246, 247, 248, 0, 249, 250, 0, 0, 0, 0,
	0, 990, 954, 0, 0, 0, 251, 252, 254, 253,
	255, 256, 257, 516, 1003, 0, 1010, 258, 1009, 0,
	259, 260, 261, 262, 263, 956, 989, 923, 264, 1048,
	1049, 522, 0, 265, 266, 996, 0, 977, 0, 267,
	268, 269, 270, 271, 272, 273, 0, 0, 275, 276,
	277, 274, 0, 278, 0, 279, 280, 281, 0, 282,
	1029, 283, 284, 980, 978, 979, 986, 982, 981, 985,
	285, 286, 287, 288, 1013, 289, 1007, 1006, 927, 293,
	290, 291, 0, 294, 292, 0, 295, 296, 0, 0,
	297, 998, 299, 0, 300, 301, 0, 302, 303, 0,
	304, 305, 933, 306, 307, 308, 310, 312, 309, 313,
	314, 315, 316, 1020, 1021, 945, 240, 0, 0, 0,
	0, 0, 317, 318, 319, 1005, 0, 0, 0, 320,
	0, 321, 0, 0, 1030, 322, 323, 1018, 1019, 324,
	325, 0, 326, 1027, 0, 955, 327, 0, 328, 329,
	330, 331, 332, 991, 992, 995, 387, 1032, 333, 334,
	0, 335, 336, 337, 338, 0, 0, 0, 241, 339,
	340, 342, 0, 1031, 341, 1000, 1001, 0, 961, 0,
	343, 1033, 993, 1034, 344, 345, 346, 1035, 347, 0,
	0, 0, 348, 349, 350, 351, 352, 353, 0, 355,
	354, 0, 356, 1028, 1036, 357, 358, 1037, 0, 359,
	360, 361, 984, 983, 362, 363, 364, 365, 0, 366,
	367, 369, 371, 368, 370, 375, 372, 373, 374, 377,
	0, 376, 1038, 378, 379, 380, 383, 384, 382, 1039,
	381, 924, 242, 1040, 385, 946, 994, 386, 1008, 388,
	389, 0, 0, 390, 0, 0, 0, 392, 393, 394,
	0, 0, 395, 396, 544, 1041, 397, 1042, 1022, 398,
	399, 391, 400, 401, 402, 403, 404, 405, 406, 407,
	0, 408, 409, 546, 547, 1023, 410, 549, 411, 412,
	0, 413, 0, 414, 415, 416, 417, 418, 419, 420,
	1004, 422, 421, 423, 0, 0, 0, 0, 0, 0,
	424, 0, 426, 427, 428, 425, 429, 430, 431, 432,
	0, 433, 434, 435, 1043, 436, 437, 438, 439, 934,
	440, 0, 441, 442, 448, 449, 443, 444, 450, 451,
	452, 453, 454, 0, 456, 457, 455, 458, 459, 460,
	987, 461, 445, 446, 462, 463, 1044, 464, 465, 1002,
	0, 466, 0, 467, 468, 469, 470, 447, 471, 476,
	1047, 472, 473, 474, 475, 1024, 0, 478, 479, 922,
	477, 0, 480, 481, 482, 483, 484, 485, 311, 486,
	0, 487, 1014, 1015, 1016, 1017, 0, 494, 0, 488,
	489, 1025, 490, 1026, 944, 491, 492, 493, 0, 495,
	496, 0, 928, 497, 498, 499, 501, 502, 500, 503,
	988, 504, 0, 0, 505, 506, 507, 561, 1011, 1046,
	0, 509, 508, 564, 0, 0, 0, 0, 510, 511,
	565, 512, 513, 514, 925, 0, 0, 0, 0, 0,
	0, 921, 0, 0, 0, 0, 0, 0, 919, 920,
	1718, 0, 0, 0, 0, 0, 0, 950, 0, 0,
	0, 948, 966, 938, 939, 940, 936, 937, 949, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 243,
	244, 245, 246, 247, 248, 0, 249, 250, 0, 0,
	0, 0, 0, 990, 954, 0, 0, 0, 251, 252,
	254, 253, 255, 256, 257, 516, 1003, 0, 1010, 258,
	1009, 0, 259, 260, 261, 262, 263, 956, 989, 923,
	264, 1048, 1049, 522, 0, 265, 266, 996, 0, 977,
	0, 267, 268, 269, 270, 271, 272, 273, 0, 0,
	275, 276, 277, 274, 0, 278, 0, 279, 280, 281,
	0, 282, 1029, 283, 284, 980, 978, 979, 986, 982,
	981, 985, 285, 286, 287, 288, 1013, 289, 1007, 1006,
	927, 293, 290, 291, 0, 294, 292, 0, 295, 296,
	0, 0, 297, 998, 299, 0, 300, 301, 0, 302,
	303, 0, 304, 305, 933, 306, 307, 308, 310, 312,
	309, 313, 314, 315, 316, 1020, 1021, 945, 240, 0,
	0, 0, 0, 0, 317, 318, 319, 1005, 0, 0,
	0, 320, 0, 321, 0, 2329, 1030, 322, 323, 1018,
	1019, 324, 325, 0, 326, 1027, 0, 955, 327, 0,
	328, 329, 330, 331, 332, 991, 992, 995, 387, 1032,
	333, 334, 0, 335, 336, 337, 338, 0, 0, 0,
	241, 339, 340, 342, 0, 1031, 341, 1000, 1001, 0,
	961, 0, 343, 1033, 993, 1034, 344, 345, 346, 1035,
	347, 0, 0, 0, 348, 349, 350, 351, 352, 353,
	0, 355, 354, 0, 356, 1028, 1036, 357, 358, 1037,
	0, 359, 360, 361, 984, 983, 362, 363, 364, 365,
	0, 366, 367, 369, 371, 368, 370, 375, 372, 373,
	374, 377, 0, 376, 1038, 378, 379, 380, 383, 384,
	382, 1039, 381, 924, 242, 1040, 385, 946, 994, 386,
	1008, 388, 389, 0, 0, 390, 0, 0, 0, 392,
	393, 394, 0, 0, 395, 396, 544, 1041, 397, 1042,
	1022, 398, 399, 391, 400, 401, 402, 403, 404, 405,
	406, 407, 0, 408, 409, 546, 547, 1023, 410, 549,
	411, 412, 0, 413, 0, 414, 415, 416, 417, 418,
	419, 420, 1004, 422, 421, 423, 0, 0, 0, 0,
	0, 0, 424, 0, 426, 427, 428, 425, 429, 430,
	431, 432, 0, 433, 434, 435, 1043, 436, 437, 438,
	439, 934, 440, 0, 441, 442, 448, 449, 443, 444,
	450, 451, 452, 453, 454, 0, 456, 457, 455, 458,
	459, 460, 987, 461, 445, 446, 462, 463, 1044, 464,
	465, 1002, 0, 466, 0, 467, 468, 469, 470, 447,
	471, 476, 1047, 472, 473, 474, 475, 1024, 0, 478,
	479, 922, 477, 0, 480, 481, 482, 483, 484, 485,
	311, 486, 0, 487, 1014, 1015, 1016, 1017, 0, 494,
	0, 488, 489, 1025, 490, 1026, 944, 491, 492, 493,
	0, 495, 496, 0, 928, 497, 498, 499, 501, 502,
	500, 503, 988, 504, 0, 0, 505, 506, 507, 561,
	1011, 1046, 0, 509, 508, 564, 0, 0, 0, 0,
	510, 511, 565, 512, 513, 514, 925, 0, 0, 0,
	0, 0, 0, 921, 0, 0, 0, 0, 0, 0,
	919, 920, 966, 938, 939, 940, 936, 937, 949, 950,
	0, 0, 0, 948, 0, 0, 0, 0, 0, 243,
	244, 245, 246, 247, 248, 0, 249, 250, 0, 0,
	0, 0, 0, 990, 954, 0, 0, 0, 251, 252,
	254, 253, 255, 256, 257, 516, 1003, 0, 1010, 258,
	1009, 0, 259, 260, 261, 262, 263, 956, 989, 923,
	264, 1048, 1049, 522, 0, 265, 266, 996, 0, 977,
	0, 267, 268, 269, 270, 271, 272, 273, 0, 0,
	275, 276, 277, 274, 0, 278, 0, 279, 280, 281,
	0, 282, 1029, 283, 284, 980, 978, 979, 986, 982,
	981, 985, 285, 286, 287, 288, 1013, 289, 1007, 1006,
	927, 293, 290, 291, 0, 294, 292, 0, 295, 296,
	0, 0, 297, 998, 299, 0, 300, 301, 0, 302,
	303, 0, 304, 305, 933, 306, 307, 308, 310, 312,
	309, 313, 314, 315, 316, 1020, 1021, 945, 240, 0,
	0, 0, 0, 0, 317, 318, 319, 1005, 0, 0,
	0, 320, 0, 321, 0, 0, 1030, 322, 323, 1018,
	1019, 324, 325, 0, 326, 1027, 0, 955, 327, 0,
	328, 329, 330, 331, 332, 991, 992, 995, 387, 1032,
	333, 334, 0, 335, 336, 337, 338, 0, 0, 0,
	241, 339, 340, 342, 0, 1031, 341, 1000, 1001, 0,
	961, 0, 343, 1033, 993, 1034, 344, 345, 346, 1035,
	347, 0, 0, 0, 348, 349, 350, 351, 352, 353,
	0, 355, 354, 0, 356, 1028, 1036, 357, 358, 1037,
	0, 359, 360, 361, 984, 983, 362, 363, 364, 365,
	0, 366, 367, 369, 371, 368, 370, 375, 372, 373,
	374, 377, 0, 376, 1038, 378, 379, 380, 383, 384,
	382, 1039, 381, 924, 242, 1040, 385, 946, 994, 386,
	1008, 388, 389, 0, 0, 390, 0, 0, 0, 392,
	393, 394, 0, 0, 395, 396, 544, 1041, 397, 1042,
	1022, 398, 399, 391, 400, 401, 402, 403, 404, 405,
	406, 407, 0, 408, 409, 546, 547, 1023, 410, 549,
	411, 412, 0, 413, 0, 414, 415, 416, 417, 418,
	419, 420, 1004, 422, 421, 423, 0, 0, 0, 0,
	0, 0, 424, 0, 426, 427, 428, 425, 429, 430,
	431, 432, 0, 433, 434, 435, 1043, 436, 437, 438,
	439, 934, 440, 0, 441, 442, 448, 449, 443, 444,
	450, 451, 452, 453, 454, 0, 456, 457, 455, 458,
	459, 460, 987, 461, 445, 446, 462, 463, 1044, 464,
	465, 1002, 0, 466, 0, 467, 468, 469, 470, 447,
	471, 476, 1047, 472, 473, 474, 475, 1024, 0, 478,
	479, 922, 477, 0, 480, 481, 482, 483, 484, 485,
	311, 486, 0, 487, 1014, 1015, 1016, 1017, 0, 494,
	0, 488, 489, 1025, 490, 1026, 944, 491, 492, 493,
	0, 495, 496, 0, 928, 497, 498, 499, 501, 502,
	500, 503, 988, 504, 0, 0, 505, 506, 507, 561,
	1011, 1046, 0, 509, 508, 564, 0, 0, 0, 0,
	510, 511, 565, 512, 513, 514, 925, 0, 0, 0,
	0, 0, 0, 921, 0, 0, 0, 0, 0, 0,
	919, 920, 0, 0, 0, 0, 0, 0, 0, 950,
	1648, 0, 2334, 948, 966, 938, 939, 940, 936, 937,
	949, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 243, 244, 245, 246, 247, 248, 0, 249, 250,
	0, 0, 0, 0, 0, 990, 954, 0, 0, 0,
	251, 252, 254, 253, 255, 256, 257, 516, 1003, 0,
	1010, 258, 1009, 0, 259, 260, 261, 262, 263, 956,
	989, 923, 264, 1048, 1049, 522, 0, 265, 266, 996,
	0, 977, 0, 267, 268, 269, 270, 271, 272, 273,
	0, 0, 275, 276, 277, 274, 0, 278, 0, 279,
	280, 281, 0, 282, 1029, 283, 284, 980, 978, 979,
	986, 982, 981, 985, 285, 286, 287, 288, 1013, 289,
	1007, 1006, 927, 293, 290, 291, 0, 294, 292, 0,
	295, 296, 0, 0, 297, 998, 299, 0, 300, 301,
	0, 302, 303, 0, 304, 305, 933, 306, 307, 308,
	310, 312, 309, 313, 314, 315, 316, 1020, 1021, 945,
	240, 0, 0, 0, 0, 0, 317, 318, 319, 1005,
	0, 0, 0, 320, 0, 321, 0, 0, 1030, 322,
	323, 1018, 1019, 324, 325, 0, 326, 1027, 0, 955,
	327, 0, 328, 329, 330, 331, 332, 991, 992, 995,
	387, 1032, 333, 334, 0, 335, 336, 337, 338, 0,
	0, 0, 241, 339, 340, 342, 0, 1031, 341, 1000,
	1001, 0, 961, 0, 343, 1033, 993, 1034, 344, 345,
	346, 1035, 347, 0, 0, 0, 348, 349, 350, 351,
	352, 353, 0, 355, 354, 0, 356, 1028, 1036, 357,
	358, 1037, 0, 359, 360, 361, 984, 983, 362, 363,
	364, 365, 0, 366, 367, 369, 371, 368, 370, 375,
	372, 373, 374, 377, 0, 376, 1038, 378, 379, 380,
	383, 384, 382, 1039, 381, 924, 242, 1040, 385, 946,
	994, 386, 1008, 388, 389, 0, 0, 390, 0, 0,
	0, 392, 393, 394, 0, 0, 395, 396, 544, 1041,
	397, 1042, 1022, 398, 399, 391, 400, 401, 402, 403,
	404, 405, 406, 407, 0, 408, 409, 546, 547, 1023,
	410, 549, 411, 412, 0, 413, 0, 414, 415, 416,
	417, 418, 419, 420, 1004, 422, 421, 423, 0, 0,
	0, 0, 0, 0, 424, 0, 426, 427, 428, 425,
	429, 430, 431, 432, 0, 433, 434, 435, 1043, 436,
	437, 438, 439, 934, 440, 0, 441, 442, 448, 449,
	443, 444, 450, 451, 452, 453, 454, 0, 456, 457,
	455, 458, 459, 460, 987, 461, 445, 446, 462, 463,
	1044, 464, 465, 1002, 0, 466, 0, 467, 468, 469,
	470, 447, 471, 476, 1047, 472, 473, 474, 475, 1024,
	0, 478, 479, 922, 477, 0, 480, 481, 482, 483,
	484, 485, 311, 486, 0, 487, 1014, 1015, 1016, 1017,
	0, 494, 0, 488, 489, 1025, 490, 1026, 944, 491,
	492, 493, 0, 495, 496, 0, 928, 497, 498, 499,
	501, 502, 500, 503, 988, 504, 0, 0, 505, 506,
	507, 561, 1011, 1046, 0, 509, 508, 564, 0, 0,
	0, 0, 510, 511, 565, 512, 513, 514, 925, 0,
	0, 0, 0, 0, 0, 921, 0, 0, 0, 0,
	0, 0, 919, 920, 0, 0, 0, 0, 0, 0,
	0, 950, 0, 0, 2332, 948, 966, 938, 939, 940,
	936, 937, 949, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 243, 244, 245, 246, 247, 248, 0,
	249, 250, 0, 0, 0, 0, 0, 990, 954, 0,
	0, 0, 251, 252, 254, 253, 255, 256, 257, 516,
	1003, 0, 1010, 258, 1009, 0, 259, 260, 261, 262,
	263, 956, 989, 923, 264, 1048, 1049, 522, 0, 265,
	266, 996, 0, 977, 0, 267, 268, 269, 270, 271,
	272, 273, 0, 0, 275, 276, 277, 274, 0, 278,
	0, 279, 280, 281, 0, 282, 1029, 283, 284, 980,
	978, 979, 986, 982, 981, 985, 285, 286, 287, 288,
	1013, 289, 1007, 1006, 927, 293, 290, 291, 0, 294,
	292, 0, 295, 296, 0, 0, 297, 998, 299, 0,
	300, 301, 0, 302, 303, 0, 304, 305, 933, 306,
	307, 308, 310, 312, 309, 313, 314, 315, 316, 1020,
	1021, 945, 240, 0, 0, 0, 0, 0, 317, 318,
	319, 1005, 0, 0, 0, 320, 0, 321, 0, 0,
	1030, 322, 323, 1018, 1019, 324, 325, 0, 326, 1027,
	0, 955, 327, 0, 328, 329, 330, 331, 332, 991,
	992, 995, 387, 1032, 333, 334, 0, 335, 336, 337,
	338, 0, 0, 0, 241, 339, 340, 342, 0, 1031,
	341, 1000, 1001, 0, 961, 0, 343, 1033, 993, 1034,
	344, 345, 346, 1035, 347, 0, 0, 0, 348, 349,
	350, 351, 352, 353, 0, 355, 354, 0, 356, 1028,
	1036, 357, 358, 1037, 0, 359, 360, 361, 984, 983,
	362, 363, 364, 365, 0, 366, 367, 369, 371, 368,
	370, 375, 372, 373, 374, 377, 0, 376, 1038, 378,
	379, 380, 383, 384, 382, 1039, 381, 924, 242, 1040,
	385, 946, 994, 386, 1008, 388, 389, 0, 0, 390,
	0, 0, 0, 392, 393, 394, 0, 0, 395, 396,
	544, 1041, 397, 1042, 1022, 398, 399, 391, 400, 401,
	402, 403, 404, 405, 406, 407, 0, 408, 409, 546,
	547, 1023, 410, 549, 411, 412, 0, 413, 0, 414,
	415, 416, 417, 418, 419, 420, 1004, 422, 421, 423,
	0, 0, 0, 0, 0, 0, 424, 0, 426, 427,
	428, 425, 429, 430, 431, 432, 0, 433, 434, 435,
	1043, 436, 437, 438, 439, 934, 440, 0, 441, 442,
	448, 449, 443, 444, 450, 451, 452, 453, 454, 0,
	456, 457, 455, 458, 459, 460, 987, 461, 445, 446,
	462, 463, 1044, 464, 465, 1002, 0, 466, 0, 467,
	468, 469, 470, 447, 471, 476, 1047, 472, 473, 474,
	475, 1024, 0, 478, 479, 922, 477, 0, 480, 481,
	482, 483, 484, 485, 311, 486, 0, 487, 1014, 1015,
	1016, 1017, 0, 494, 0, 488, 489, 1025, 490, 1026,
	944, 491, 492, 493, 0, 495, 496, 0, 928, 497,
	498, 499, 501, 502, 500, 503, 988, 504, 0, 0,
	505, 506, 507, 561, 1011, 1046, 0, 509, 508, 564,
	0, 0, 0, 0, 510, 511, 565, 512, 513, 514,
	925, 0, 0, 0, 0, 0, 0, 921, 0, 0,
	0, 0, 0, 0, 919, 920, 0, 0, 0, 0,
	0, 0, 0, 950, 0, 0, 2320, 948, 966, 938,
	939, 940, 936, 937, 949, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 243, 244, 245, 246, 247,
	248, 0, 249, 250, 0, 0, 0, 0, 0, 990,
	954, 0, 0, 0, 251, 252, 254, 253, 255, 256,
	257, 516, 1003, 0, 1010, 258, 1009, 0, 259, 260,
	261, 262, 263, 956, 989, 923, 264, 1048, 1049, 522,
	0, 265, 266, 996, 0, 977, 0, 267, 268, 269,
	270, 271, 272, 273, 0, 0, 275, 276, 277, 274,
	0, 278, 0, 279, 280, 281, 0, 282, 1029, 283,
	284, 980, 978, 979, 986, 982, 981, 985, 285, 286,
	287, 288, 1013, 289, 1007, 1006, 927, 293, 290, 291,
	0, 294, 292, 0, 295, 296, 0, 0, 297, 998,
	299, 0, 300, 301, 0, 302, 303, 0, 304, 305,
	933, 306, 307, 308, 310, 312, 309, 313, 314, 315,
	316, 1020, 1021, 945, 240, 0, 0, 0, 0, 0,
	317, 318, 319, 1005, 0, 0, 0, 320, 0, 321,
	0, 0, 1030, 322, 323, 1018, 1019, 324, 325, 0,
	326, 1027, 0, 955, 327, 0, 328, 329, 330, 331,
	332, 991, 992, 995, 387, 1032, 333, 334, 0, 335,
	336, 337, 338, 0, 0, 0, 241, 339, 340, 342,
	0, 1031, 341, 1000, 1001, 0, 961, 0, 343, 1033,
	993, 1034, 344, 345, 346, 1035, 347, 0, 0, 0,
	348, 349, 350, 351, 352, 353, 0, 355, 354, 0,
	356, 1028, 1036, 357, 358, 1037, 0, 359, 360, 361,
	984, 983, 362, 363, 364, 365, 0, 366, 367, 369,
	371, 368, 370, 375, 372, 373, 374, 377, 0, 376,
	1038, 378, 379, 380, 383, 384, 382, 1039, 381, 924,
	242, 1040, 385, 946, 994, 386, 1008, 388, 389, 0,
	0, 390, 0, 0, 0, 392, 393, 394, 0, 0,
	395, 396, 544, 1041, 397, 1042, 1022, 398, 399, 391,
	400, 401, 402, 403, 404, 405, 406, 407, 0, 408,
	409, 546, 547, 1023, 410, 549, 411, 412, 0, 413,
	0, 414, 415, 416, 417, 418, 419, 420, 1004, 422,
	421, 423, 0, 0, 0, 0, 0, 0, 424, 0,
	426, 427, 428, 425, 429, 430, 431, 432, 0, 433,
	434, 435, 1043, 436, 437, 438, 439, 934, 440, 0,
	441, 442, 448, 449, 443, 444, 450, 451, 452, 453,
	454, 0, 456, 457, 455, 458, 459, 460, 987, 461,
	445, 446, 462, 463, 1044, 464, 465, 1002, 0, 466,
	0, 467, 468, 469, 470, 447, 471, 476, 1047, 472,
	473, 474, 475, 1024, 0, 478, 479, 922, 477, 0,
	480, 481, 482, 483, 484, 485, 311, 486, 0, 487,
	1014, 1015, 1016, 1017, 0, 494, 0, 488, 489, 1025,
	490, 1026, 944, 491, 492, 493, 0, 495, 496, 0,
	928, 497, 498, 499, 501, 502, 500, 503, 988, 504,
	0, 0, 505, 506, 507, 561, 1011, 1046, 0, 509,
	508, 564, 0, 0, 0, 0, 510, 511, 565, 512,
	513, 514, 925, 0, 0, 0, 0, 0, 0, 921,
	0, 0, 0, 0, 0, 0, 919, 920, 0, 0,
	0, 0, 0, 0, 0, 950, 0, 0, 2309, 948,
	966, 938, 939, 940, 936, 937, 949, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 243, 244, 245,
	246, 247, 248, 0, 249, 250, 0, 0, 0, 0,
	0, 990, 954, 0, 0, 0, 251, 252, 254, 253,
	255, 256, 257, 516, 1003, 0, 1010, 258, 1009, 0,
	259, 260, 261, 262, 263, 956, 989, 923, 264, 1048,
	1049, 522, 0, 265, 266, 996, 0, 977, 0, 267,
	268, 269, 270, 271, 272, 273, 0, 0, 275, 276,
	277, 274, 0, 278, 0, 279, 280, 281, 0, 282,
	1029, 283, 284, 980, 978, 979, 986, 982, 981, 985,
	285, 286, 287, 288, 1013, 289, 1007, 1006, 927, 293,
	290, 291, 0, 294, 292, 0, 295, 296, 0, 0,
	297, 998, 299, 0, 300, 301, 0, 302, 303, 0,
	304, 305, 933, 306, 307, 308, 310, 312, 309, 313,
	314, 315, 316, 1020, 1021, 945, 240, 0, 0, 0,
	0, 0, 317, 318, 319, 1005, 0, 0, 0, 320,
	0, 321, 0, 0, 1030, 322, 323, 1018, 1019, 324,
	325, 0, 326, 1027, 0, 955, 327, 0, 328, 329,
	330, 331, 332, 991, 992, 995, 387, 1032, 333, 334,
	0, 335, 336, 337, 338, 0, 0, 0, 241, 339,
	340, 342, 0, 1031, 341, 1000, 1001, 0, 961, 0,
	343, 1033, 993, 1034, 344, 345, 346, 1035, 347, 0,
	0, 0, 348, 349, 350, 351, 352, 353, 0, 355,
	354, 0, 356, 1028, 1036, 357, 358, 1037, 0, 359,
	360, 361, 984, 983, 362, 363, 364, 365, 0, 366,
	367, 369, 371, 368, 370, 375, 372, 373, 374, 377,
	0, 376, 1038, 378, 379, 380, 383, 384, 382, 1039,
	381, 924, 242, 1040, 385, 946, 994, 386, 1008, 388,
	389, 0, 0, 390, 0, 0, 0, 392, 393, 394,
	0, 0, 395, 396, 544, 1041, 397, 1042, 1022, 398,
	399, 391, 400, 401, 402, 403, 404, 405, 406, 407,
	0, 408, 409, 546, 547, 1023, 410, 549, 411, 412,
	0, 413, 0, 414, 415, 416, 417, 418, 419, 420,
	1004, 422, 421, 423, 0, 0, 0, 0, 0, 0,
	424, 0, 426, 427, 428, 425, 429, 430, 431, 432,
	0, 433, 434, 435, 1043, 436, 437, 438, 439, 934,
	440, 0, 441, 442, 448, 449, 443, 444, 450, 451,
	452, 453, 454, 0, 456, 457, 455, 458, 459, 460,
	987, 461, 445, 446, 462, 463, 1044, 464, 465, 1002,
	0, 466, 0, 467, 468, 469, 470, 447, 471, 476,
	1047, 472, 473, 474, 475, 1024, 0, 478, 479, 922,
	477, 0, 480, 481, 482, 483, 484, 485, 311, 486,
	0, 487, 1014, 1015, 1016, 1017, 0, 494, 0, 488,
	489, 1025, 490, 1026, 944, 491, 492, 493, 0, 495,
	496, 0, 928, 497, 498, 499, 501, 502, 500, 503,
	988, 504, 0, 0, 505, 506, 507, 561, 1011, 1046,
	0, 509, 508, 564, 0, 0, 0, 0, 510, 511,
	565, 512, 513, 514, 925, 0, 0, 0, 0, 0,
	0, 921, 0, 0, 0, 0, 0, 0, 919, 920,
	0, 0, 0, 0, 0, 0, 0, 950, 0, 0,
	2307, 948, 2298, 2305, 939, 940, 936, 937, 949, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 243,
	244, 245, 246, 247, 248, 0, 249, 250, 0, 0,
	0, 0, 0, 990, 954, 0, 0, 0, 251, 252,
	254, 253, 255, 256, 257, 516, 1003, 0, 1010, 258,
	1009, 0, 259, 260, 261, 262, 263, 956, 989, 923,
	264, 1048, 1049, 522, 0, 265, 266, 996, 0, 977,
	0, 267, 268, 269, 270, 271, 272, 273, 0, 0,
	275, 276, 277, 274, 0, 278, 0, 279, 280, 281,
	0, 282, 1029, 283, 284, 980, 978, 979, 986, 982,
	981, 985, 285, 286, 287, 288, 1013, 2301, 1007, 1006,
	927, 293, 290, 291, 0, 294, 292, 0, 295, 296,
	0, 0, 297, 998, 299, 0, 300, 301, 0, 302,
	303, 0, 304, 305, 933, 306, 307, 308, 310, 312,
	309, 313, 314, 315, 316, 1020, 1021, 945, 240, 0,
	0, 0, 0, 0, 317, 318, 319, 1005, 0, 0,
	0, 320, 0, 321, 0, 0, 1030, 322, 323, 1018,
	1019, 324, 325, 0, 326, 1027, 0, 955, 327, 0,
	328, 329, 330, 2302, 332, 991, 992, 995, 387, 1032,
	333, 334, 0, 335, 336, 337, 338, 0, 0, 0,
	241, 339, 340, 342, 0, 1031, 341, 1000, 1001, 0,
	961, 0, 343, 1033, 993, 1034, 344, 345, 346, 1035,
	347, 0, 0, 0, 348, 349, 350, 351, 352, 353,
	0, 355, 354, 0, 356, 1028, 1036, 357, 358, 1037,
	0, 359, 360, 361, 984, 983, 362, 363, 364, 365,
	0, 366, 367, 369, 371, 368, 2303, 2300, 372, 373,
	374, 377, 0, 376, 1038, 378, 379, 380, 383, 384,
	382, 1039, 381, 924, 242, 1040, 385, 946, 994, 386,
	1008, 388, 389, 0, 0, 390, 0, 0, 0, 392,
	393, 394, 0, 0, 395, 396, 544, 1041, 397, 1042,
	1022, 398, 399, 391, 400, 401, 402, 403, 404, 405,
	406, 407, 0, 408, 409, 546, 547, 1023, 410, 549,
	411, 412, 0, 413, 0, 414, 415, 416, 417, 418,
	419, 420, 1004, 422, 421, 423, 0, 0, 0, 0,
	0, 0, 424, 0, 426, 427, 428, 425, 429, 430,
	431, 432, 0, 433, 434, 435, 1043, 436, 437, 438,
	439, 934, 440, 0, 441, 442, 448, 449, 443, 444,
	450, 451, 452, 453, 2304, 0, 456, 457, 455, 458,
	459, 460, 987, 461, 445, 446, 462, 463, 1044, 464,
	465, 1002, 0, 466, 0, 467, 468, 469, 470, 447,
	471, 476, 1047, 472, 473, 474, 475, 1024, 0, 478,
	479, 922, 477, 0, 480, 481, 482, 483, 484, 485,
	311, 486, 0, 487, 1014, 1015, 1016, 1017, 0, 494,
	0, 488, 489, 1025, 490, 1026, 944, 491, 492, 493,
	0, 495, 496, 0, 928, 497, 498, 499, 501, 502,
	500, 503, 988, 504, 0, 0, 505, 506, 507, 561,
	1011, 1046, 0, 509, 508, 564, 0, 0, 0, 0,
	510, 511, 565, 512, 2299, 514, 925, 0, 0, 0,
	0, 0, 0, 921, 0, 0, 0, 0, 0, 0,
	919, 920, 0, 0, 0, 0, 0, 0, 0, 950,
	0, 0, 2295, 948, 2298, 2305, 939, 940, 936, 937,
	949, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 243, 244, 245, 246, 247, 248, 0, 249, 250,
	0, 0, 0, 0, 0, 990, 954, 0, 0, 0,
	251, 252, 254, 253, 255, 256, 257, 516, 1003, 0,
	1010, 258, 1009, 0, 259, 260, 261, 262, 263, 956,
	989, 923, 264, 1048, 1049, 522, 0, 265, 266, 996,
	0, 977, 0, 267, 268, 269, 270, 271, 272, 273,
	0, 0, 275, 276, 277, 274, 0, 278, 0, 279,
	280, 281, 0, 282, 1029, 283, 284, 980, 978, 979,
	986, 982, 981, 985, 285, 286, 287, 288, 1013, 2301,
	1007, 1006, 927, 293, 290, 291, 0, 294, 292, 0,
	295, 296, 0, 0, 297, 998, 299, 0, 300, 301,
	0, 302, 303, 0, 304, 305, 933, 306, 307, 308,
	310, 312, 309, 313, 314, 315, 316, 1020, 1021, 945,
	240, 0, 0, 0, 0, 0, 317, 318, 319, 1005,
	0, 0, 0, 320, 0, 321, 0, 0, 1030, 322,
	323, 1018, 1019, 324, 325, 0, 326, 1027, 0, 955,
	327, 0, 328, 329, 330, 2302, 332, 991, 992, 995,
	387, 1032, 333, 334, 0, 335, 336, 337, 338, 0,
	0, 0, 241, 339, 340, 342, 0, 1031, 341, 1000,
	1001, 0, 961, 0, 343, 1033, 993, 1034, 344, 345,
	346, 1035, 347, 0, 0, 0, 348, 349, 350, 351,
	352, 353, 0, 355, 354, 0, 356, 1028, 1036, 357,
	358, 1037, 0, 359, 360, 361, 984, 983, 362, 363,
	364, 365, 0, 366, 367, 369, 371, 368, 2303, 2300,
	372, 373, 374, 377, 0, 376, 1038, 378, 379, 380,
	383, 384, 382, 1039, 381, 924, 242, 1040, 385, 946,
	994, 386, 1008, 388, 389, 0, 0, 390, 0, 0,
	0, 392, 393, 394, 0, 0, 395, 396, 544, 1041,
	397, 1042, 1022, 398, 399, 391, 400, 401, 402, 403,
	404, 405, 406, 407, 0, 408, 409, 546, 547, 1023,
	410, 549, 411, 412, 0, 413, 0, 414, 415, 416,
	417, 418, 419, 420, 1004, 422, 421, 423, 0, 0,
	0, 0, 0, 0, 424, 0, 426, 427, 428, 425,
	429, 430, 431, 432, 0, 433, 434, 435, 1043, 436,
	437, 438, 439, 934, 440, 0, 441, 442, 448, 449,
	443, 444, 450, 451, 452, 453, 2304, 0, 456, 457,
	455, 458, 459, 460, 987, 461, 445, 446, 462, 463,
	1044, 464, 465, 1002, 0, 466, 0, 467, 468, 469,
	470, 447, 471, 476, 1047, 472, 473, 474, 475, 1024,
	0, 478, 479, 922, 477, 0, 480, 481, 482, 483,
	484, 485, 311, 486, 0, 487, 1014, 1015, 1016, 1017,
	0, 494, 0, 488, 489, 1025, 490, 1026, 944, 491,
	492, 493, 0, 495, 496, 0, 928, 497, 498, 499,
	501, 502, 500, 503, 988, 504, 0, 0, 505, 506,
	507, 561, 1011, 1046, 0, 509, 508, 564, 0, 0,
	0, 0, 510, 511, 565, 512, 2299, 514, 925, 0,
	0, 0, 0, 0, 0, 921, 0, 0, 0, 0,
	0, 0, 919, 920, 966, 938, 939, 940, 936, 937,
	949, 950, 0, 0, 0, 948, 0, 0, 0, 0,
	0, 243, 244, 245, 246, 247, 248, 0, 249, 250,
	0, 0, 0, 0, 0, 990, 954, 0, 0, 0,
	251, 252, 254, 253, 255, 256, 257, 516, 1003, 0,
	1010, 258, 1009, 0, 259, 260, 261, 262, 263, 956,
	989, 923, 264, 1048, 1049, 522, 0, 265, 266, 996,
	0, 977, 0, 267, 268, 269, 270, 271, 272, 273,
	0, 0, 275, 276, 277, 274, 0, 278, 0, 279,
	280, 281, 0, 282, 1029, 283, 284, 980, 978, 979,
	986, 982, 981, 985, 285, 286, 287, 288, 1013, 289,
	1007, 1006, 927, 293, 290, 291, 0, 294, 292, 0,
	295, 296, 0, 0, 297, 998, 299, 0, 300, 301,
	0, 302, 303, 0, 304, 305, 933, 306, 307, 308,
	310, 312, 309, 313, 314, 315, 316, 1020, 1021, 945,
	240, 0, 0, 0, 0, 0, 317, 318, 319, 1005,
	0, 0, 0, 320, 0, 321, 0, 0, 1030, 322,
	323, 1018, 1019, 324, 325, 0, 326, 1027, 0, 955,
	327, 0, 328, 329, 330, 331, 332, 991, 992, 995,
	387, 1032, 333, 334, 0, 335, 336, 337, 338, 0,
	0, 0, 241, 339, 340, 342, 0, 1031, 341, 1000,
	1001, 0, 961, 0, 343, 1033, 993, 1034, 344, 345,
	346, 1035, 347, 0, 0, 0, 348, 349, 350, 351,
	352, 353, 0, 355, 354, 0, 356, 1028, 1036, 357,
	358, 1037, 0, 359, 360, 361, 984, 983, 362, 363,
	364, 365, 0, 366, 367, 369, 371, 368, 370, 375,
	372, 373, 374, 377, 0, 376, 1038, 378, 379, 380,
	383, 384, 382, 1039, 381, 924, 242, 1040, 385, 946,
	994, 386, 1008, 388, 389, 0, 0, 390, 0, 0,
	0, 392, 393, 394, 0, 0, 395, 396, 544, 1041,
	397, 1042, 1022, 398, 399, 391, 400, 401, 402, 403,
	404, 405, 406, 407, 0, 408, 409, 546, 547, 1023,
	410, 549, 411, 412, 0, 413, 0, 414, 415, 416,
	417, 418, 419, 420, 1004, 422, 421, 423, 0, 0,
	0, 0, 0, 0, 424, 0, 426, 427, 428, 425,
	429, 430, 431, 432, 0, 433, 434, 435, 1043, 436,
	437, 438, 439, 934, 440, 0, 441, 442, 448, 449,
	443, 444, 450, 451, 452, 453, 454, 0, 456, 457,
	455, 458, 459, 460, 987, 461, 445, 446, 462, 463,
	1044, 464, 465, 1002, 0, 466, 0, 467, 468, 469,
	470, 447, 471, 476, 1047, 472, 473, 474, 475, 1024,
	0, 478, 479, 922, 477, 0, 480, 481, 482, 483,
	484, 485, 311, 486, 0, 487, 1014, 1015, 1016, 1017,
	0, 494, 0, 488, 489, 1025, 490, 1026, 944, 491,
	492, 493, 0, 495, 496, 0, 928, 497, 498, 499,
	501, 502, 500, 503, 988, 504, 0, 0, 505, 506,
	507, 561, 1011, 1046, 0, 509, 508, 564, 0, 0,
	0, 0, 510, 511, 565, 512, 513, 514, 925, 0,
	0, 0, 0, 0, 0, 921, 0, 0, 0, 0,
	0, 0, 919, 920, 0, 0, 0, 0, 0, 1656,
	0, 950, 0, 0, 0, 948, 966, 938, 939, 940,
	936, 937, 949, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 243, 244, 245, 246, 247, 248, 2113,
	249, 250, 0, 0, 0, 0, 0, 990, 954, 0,
	0, 0, 251, 252, 254, 253, 255, 256, 257, 516,
	1003, 0, 1010, 258, 1009, 0, 259, 260, 261, 262,
	263, 956, 989, 923, 264, 1048, 1049, 522, 0, 265,
	266, 996, 0, 977, 0, 267, 268, 269, 270, 271,
	272, 273, 0, 0, 275, 276, 277, 274, 0, 278,
	0, 279, 280, 281, 0, 282, 1029, 283, 284, 980,
	978, 979, 986, 982, 981, 985, 285, 286, 287, 288,
	1013, 289, 1007, 1006, 927, 293, 290, 291, 0, 294,
	292, 0, 295, 296, 0, 0, 297, 998, 299, 0,
	300, 301, 0, 302, 303, 0, 304, 305, 933, 306,
	307, 308, 310, 312, 309, 313, 314, 315, 316, 1020,
	1021, 945, 240, 0, 0, 0, 0, 0, 317, 318,
	319, 1005, 0, 0, 0, 320, 0, 321, 0, 0,
	1030, 322, 323, 1018, 1019, 324, 325, 0, 326, 1027,
	0, 955, 327, 0, 328, 329, 330, 331, 332, 991,
	992, 995, 387, 1032, 333, 334, 0, 335, 336, 337,
	338, 0, 0, 0, 241, 339, 340, 342, 0, 1031,
	341, 1000, 1001, 0, 961, 0, 343, 1033, 993, 1034,
	344, 345, 346, 1035, 347, 0, 0, 0, 348, 349,
	350, 351, 352, 353, 0, 355, 354, 0, 356, 1028,
	1036, 357, 358, 1037, 0, 359, 360, 361, 984, 983,
	362, 363, 364, 365, 0, 366, 367, 369, 371, 368,
	370, 375, 372, 373, 374, 377, 0, 376, 1038, 378,
	379, 380, 383, 384, 382, 1039, 381, 924, 242, 1040,
	385, 946, 994, 386, 1008, 388, 389, 0, 0, 390,
	0, 0, 0, 392, 393, 394, 0, 0, 395, 396,
	544, 1041, 397, 1042, 1022, 398, 399, 391, 400, 401,
	402, 403, 404, 405, 406, 407, 0, 408, 409, 546,
	547, 1023, 410, 549, 411, 412, 0, 413, 0, 414,
	415, 416, 417, 418, 419, 420, 1004, 422, 421, 423,
	0, 0, 0, 0, 0, 0, 424, 0, 426, 427,
	428, 425, 429, 430, 431, 432, 0, 433, 434, 435,
	1043, 436, 437, 438, 439, 934, 440, 0, 441, 442,
	448, 449, 443, 444, 450, 451, 452, 453, 454, 0,
	456, 457, 455, 458, 459, 460, 987, 461, 445, 446,
	462, 463, 1044, 464, 465, 1002, 0, 466, 0, 467,
	468, 469, 470, 447, 471, 476, 1047, 472, 473, 474,
	475, 1024, 0, 478, 479, 922, 477, 0, 480, 481,
	482, 483, 484, 485, 311, 486, 0, 487, 1014, 1015,
	1016, 1017, 0, 494, 0, 488, 489, 1025, 490, 1026,
	944, 491, 492, 493, 0, 495, 496, 0, 928, 497,
	498, 499, 501, 502, 500, 503, 988, 504, 0, 0,
	505, 506, 507, 561, 1011, 1046, 0, 509, 508, 564,
	0, 0, 0, 0, 510, 511, 565, 512, 513, 514,
	925, 0, 0, 0, 0, 0, 0, 921, 0, 0,
	0, 0, 0, 0, 919, 920, 0, 0, 0, 0,
	0, 0, 0, 950, 0, 0, 1508, 948, 966, 938,
	939, 940, 936, 937, 949, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 243, 244, 245, 246, 247,
	248, 0, 249, 250, 0, 0, 0, 0, 0, 990,
	954, 0, 0, 0, 251, 252, 254, 253, 255, 256,
	257, 516, 1003, 0, 1010, 258, 1009, 0, 259, 260,
	261, 262, 263, 956, 989, 923, 264, 1048, 1049, 522,
	0, 265, 266, 996, 0, 977, 0, 267, 268, 269,
	270, 271, 272, 273, 0, 0, 275, 276, 277, 274,
	0, 278, 0, 279, 280, 281, 0, 282, 1029, 283,
	284, 980, 978, 979, 986, 982, 981, 985, 285, 286,
	287, 288, 1013, 289, 1007, 1006, 927, 293, 290, 291,
	0, 294, 292, 0, 295, 296, 0, 0, 297, 998,
	299, 0, 300, 301, 0, 302, 303, 0, 304, 305,
	933, 306, 307, 308, 310, 312, 309, 313, 314, 315,
	316, 1020, 1021, 945, 240, 0, 0, 0, 0, 0,
	317, 318, 319, 1005, 0, 0, 0, 320, 0, 321,
	0, 0, 1030, 322, 323, 1018, 1019, 324, 325, 0,
	326, 1027, 0, 955, 327, 0, 328, 329, 330, 331,
	332, 991, 992, 995, 387, 1032, 333, 334, 0, 335,
	336, 337, 338, 0, 0, 0, 241, 339, 340, 342,
	0, 1031, 341, 1000, 1001, 0, 961, 0, 343, 1033,
	993, 1034, 344, 345, 346, 1035, 347, 0, 0, 0,
	348, 349, 350, 351, 352, 353, 0, 355, 354, 0,
	356, 1028, 1036, 357, 358, 1037, 0, 359, 360, 361,
	984, 983, 362, 363, 364, 365, 0, 366, 367, 369,
	371, 368, 370, 375, 372, 373, 374, 377, 0, 376,
	1038, 378, 379, 380, 383, 384, 382, 1039, 381, 924,
	242, 1040, 385, 946, 994, 386, 1008, 388, 389, 0,
	0, 390, 0, 0, 0, 392, 393, 394, 0, 0,
	395, 396, 544, 1041, 397, 1042, 1022, 398, 399, 391,
	400, 401, 402, 403, 404, 405, 406, 407, 0, 408,
	409, 546, 547, 1023, 410, 549, 411, 412, 0, 413,
	0, 414, 415, 416, 417, 418, 419, 420, 1004, 422,
	421, 423, 0, 0, 0, 0, 0, 0, 424, 0,
	426, 427, 428, 425, 429, 430, 431, 432, 0, 433,
	434, 435, 1043, 436, 437, 438, 439, 934, 440, 0,
	441, 442, 448, 449, 443, 444, 450, 451, 452, 453,
	454, 0, 456, 457, 455, 458, 459, 460, 987, 461,
	445, 446, 462, 463, 1044, 464, 465, 1002, 0, 466,
	0, 467, 468, 469, 470, 447, 471, 476, 1047, 472,
	473, 474, 475, 1024, 0, 478, 479, 922, 477, 0,
	480, 481, 482, 483, 484, 485, 311, 486, 0, 487,
	1014, 1015, 1016, 1017, 0, 494, 0, 488, 489, 1025,
	490, 1026, 944, 491, 492, 493, 0, 495, 496, 0,
	928, 497, 498, 499, 501, 502, 500, 503, 988, 504,
	0, 0, 505, 506, 507, 561, 1011, 1046, 0, 509,
	508, 564, 0, 0, 0, 0, 510, 511, 565, 512,
	513, 514, 925, 0, 0, 0, 0, 0, 0, 921,
	0, 0, 0, 0, 0, 0, 919, 920, 0, 0,
	0, 0, 0, 0, 0, 950, 0, 0, 1448, 948,
	966, 938, 939, 940, 936, 937, 949, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 243, 244, 245,
	246, 247, 248, 0, 249, 250, 0, 0, 0, 0,
	0, 990, 954, 0, 0, 0, 251, 252, 254, 253,
	255, 256, 257, 516, 1003, 0, 1010, 258, 1009, 0,
	259, 260, 261, 262, 263, 956, 989, 923, 264, 1048,
	1049, 522, 0, 265, 266, 996, 0, 977, 0, 267,
	268, 269, 270, 271, 272, 273, 0, 0, 275, 276,
	277, 274, 0, 278, 0, 279, 280, 281, 0, 282,
	1029, 283, 284, 980, 978, 979, 986, 982, 981, 985,
	285, 286, 287, 288, 1013, 289, 1007, 1006, 927, 293,
	290, 291, 0, 294, 292, 0, 295, 296, 0, 0,
	297, 998, 299, 0, 300, 301, 0, 302, 303, 0,
	304, 305, 933, 306, 307, 308, 310, 312, 309, 313,
	314, 315, 316, 1020, 1021, 945, 240, 0, 0, 0,
	0, 0, 317, 318, 319, 1005, 0, 0, 0, 320,
	0, 321, 0, 0, 1030, 322, 323, 1018, 1019, 324,
	325, 0, 326, 1027, 0, 955, 327, 0, 328, 329,
	330, 331, 332, 991, 992, 995, 387, 1032, 333, 334,
	0, 335, 336, 337, 338, 0, 0, 0, 241, 339,
	340, 342, 0, 1031, 341, 1000, 1001, 0, 961, 0,
	343, 1033, 993, 1034, 344, 345, 346, 1035, 347, 0,
	0, 0, 348, 349, 350, 351, 352, 353, 0, 355,
	354, 0, 356, 1028, 1036, 357, 358, 1037, 0, 359,
	360, 361, 984, 983, 362, 363, 364, 365, 0, 366,
	367, 369, 371, 368, 370, 375, 372, 373, 374, 377,
	0, 376, 1038, 378, 379, 380, 383, 384, 382, 1039,
	381, 924, 242, 1040, 385, 946, 994, 386, 1008, 388,
	389, 0, 0, 390, 0, 0, 0, 392, 393, 394,
	0, 0, 395, 396, 544, 1041, 397, 1042, 1022, 398,
	399, 391, 400, 401, 402, 403, 404, 405, 406, 407,
	0, 408, 409, 546, 547, 1023, 410, 549, 411, 412,
	0, 413, 0, 414, 415, 416, 417, 418, 419, 420,
	1004, 422, 421, 423, 0, 0, 0, 0, 0, 0,
	424, 0, 426, 427, 428, 425, 429, 430, 431, 432,
	0, 433, 434, 435, 1043, 436, 437, 438, 439, 934,
	440, 0, 441, 442, 448, 449, 443, 444, 450, 451,
	452, 453, 454, 0, 456, 457, 455, 458, 459, 460,
	987, 461, 445, 446, 462, 463, 1044, 464, 465, 1002,
	0, 466, 0, 467, 468, 469, 470, 447, 471, 476,
	1047, 472, 473, 474, 475, 1024, 0, 478, 479, 922,
	477, 0, 480, 481, 482, 483, 484, 485, 311, 486,
	0, 487, 1014, 1015, 1016, 1017, 0, 494, 0, 488,
	489, 1025, 490, 1026, 944, 491, 492, 493, 0, 495,
	496, 0, 928, 497, 498, 499, 501, 502, 500, 503,
	988, 504, 0, 0, 505, 506, 507, 561, 1011, 1046,
	0, 509, 508, 564, 0, 0, 0, 0, 510, 511,
	565, 512, 513, 514, 925, 0, 0, 0, 0, 0,
	0, 921, 0, 0, 0, 0, 0, 0, 919, 920,
	0, 0, 0, 0, 0, 0, 0, 950, 0, 0,
	1443, 948, 966, 938, 939, 940, 936, 937, 949, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 243,
	244, 245, 246, 247, 248, 0, 249, 250, 0, 0,
	0, 0, 0, 990, 954, 0, 0, 0, 251, 252,
	254, 253, 255, 256, 257, 516, 1003, 0, 1010, 258,
	1009, 0, 259, 260, 261, 262, 263, 956, 989, 923,
	264, 1048, 1049, 522, 0, 265, 266, 996, 0, 977,
	0, 267, 268, 269, 270, 271, 272, 273, 0, 0,
	275, 276, 277, 274, 0, 278, 0, 279, 280, 281,
	0, 282, 1029, 283, 284, 980, 978, 979, 986, 982,
	981, 985, 285, 286, 287, 288, 1013, 289, 1007, 1006,
	927, 293, 290, 291, 0, 294, 292, 0, 295, 296,
	0, 0, 297, 998, 299, 0, 300, 301, 0, 302,
	303, 0, 304, 305, 933, 306, 307, 308, 310, 312,
	309, 313, 314, 315, 316, 1020, 1021, 945, 240, 0,
	0, 0, 0, 0, 317, 318, 319, 1005, 0, 0,
	0, 320, 0, 321, 0, 0, 1030, 322, 323, 1018,
	1019, 324, 325, 0, 326, 1027, 0, 955, 327, 0,
	328, 329, 330, 331, 332, 991, 992, 995, 387, 1032,
	333, 334, 0, 335, 336, 337, 338, 0, 0, 0,
	241, 339, 340, 342, 0, 1031, 341, 1000, 1001, 0,
	961, 0, 343, 1033, 993, 1034, 344, 345, 346, 1035,
	347, 0, 0, 0, 348, 349, 350, 351, 352, 353,
	0, 355, 354, 0, 356, 1028, 1036, 357, 358, 1037,
	0, 359, 360, 361, 984, 983, 362, 363, 364, 365,
	0, 366, 367, 369, 371, 368, 370, 375, 372, 373,
	374, 377, 0, 376, 1038, 378, 379, 380, 383, 384,
	382, 1039, 381, 924, 242, 1040, 385, 946, 994, 386,
	1008, 388, 389, 0, 0, 390, 0, 0, 0, 392,
	393, 394, 0, 0, 395, 396, 544, 1041, 397, 1042,
	1022, 398, 399, 391, 400, 401, 402, 403, 404, 405,
	406, 407, 0, 408, 409, 546, 547, 1023, 410, 549,
	411, 412, 0, 413, 0, 414, 415, 416, 417, 418,
	419, 420, 1004, 422, 421, 423, 0, 0, 0, 0,
	0, 0, 424, 0, 426, 427, 428, 425, 429, 430,
	431, 432, 0, 433, 434, 435, 1043, 436, 437, 438,
	439, 934, 440, 0, 441, 442, 448, 449, 443, 444,
	450, 451, 452, 453, 454, 0, 456, 457, 455, 458,
	459, 460, 987, 461, 445, 446, 462, 463, 1044, 464,
	465, 1002, 0, 466, 0, 467, 468, 469, 470, 447,
	471, 476, 1047, 472, 473, 474, 475, 1024, 0, 478,
	479, 922, 477, 0, 480, 481, 482, 483, 484, 485,
	311, 486, 0, 487, 1014, 1015, 1016, 1017, 0, 494,
	0, 488, 489, 1025, 490, 1026, 944, 491, 492, 493,
	0, 495, 496, 0, 928, 497, 498, 499, 501, 502,
	500, 503, 988, 504, 0, 0, 505, 506, 507, 561,
	1011, 1046, 0, 509, 508, 564, 0, 0, 0, 0,
	510, 511, 565, 512, 513, 514, 925, 0, 0, 0,
	0, 0, 0, 921, 0, 0, 0, 0, 0, 0,
	919, 920, 0, 0, 0, 0, 0, 0, 0, 950,
	0, 0, 1434, 948, 966, 938, 939, 940, 936, 937,
	949, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 243, 244, 245, 246, 247, 248, 0, 249, 250,
	0, 0, 0, 0, 0, 990, 954, 0, 0, 0,
	251, 252, 254, 253, 255, 256, 257, 516, 1003, 0,
	1010, 258, 1009, 0, 259, 260, 261, 262, 263, 956,
	989, 923, 264, 1048, 1049, 522, 0, 265, 266, 996,
	0, 977, 0, 267, 268, 269, 270, 271, 272, 273,
	0, 0, 275, 276, 277, 274, 0, 278, 0, 279,
	280, 281, 0, 282, 1029, 283, 284, 980, 978, 979,
	986, 982, 981, 985, 285, 286, 287, 288, 1013, 289,
	1007, 1006, 927, 293, 290, 291, 0, 294, 292, 0,
	295, 296, 0, 0, 297, 998, 299, 0, 300, 301,
	0, 302, 303, 0, 304, 305, 933, 306, 307, 308,
	310, 312, 309, 313, 314, 315, 316, 1020, 1021, 945,
	240, 0, 0, 0, 0, 0, 317, 318, 319, 1005,
	0, 0, 0, 320, 0, 321, 0, 0, 1030, 322,
	323, 1018, 1019, 324, 325, 0, 326, 1027, 0, 955,
	327, 0, 328, 329, 330, 331, 332, 991, 992, 995,
	387, 1032, 333, 334, 0, 335, 336, 337, 338, 0,
	0, 0, 241, 339, 340, 342, 0, 1031, 341, 1000,
	1001, 0, 961, 0, 343, 1033, 993, 1034, 344, 345,
	346, 1035, 347, 0, 0, 0, 348, 349, 350, 351,
	352, 353, 0, 355, 354, 0, 356, 1028, 1036, 357,
	358, 1037, 0, 359, 360, 361, 984, 983, 362, 363,
	364, 365, 0, 366, 367, 369, 371, 368, 370, 375,
	372, 373, 374, 377, 0, 376, 1038, 378, 379, 380,
	383, 384, 382, 1039, 381, 924, 242, 1040, 385, 946,
	994, 386, 1008, 388, 389, 0, 0, 390, 0, 0,
	0, 392, 393, 394, 0, 0, 395, 396, 544, 1041,
	397, 1042, 1022, 398, 399, 391, 400, 401, 402, 403,
	404, 405, 406, 407, 0, 408, 409, 546, 547, 1023,
	410, 549, 411, 412, 0, 413, 0, 414, 415, 416,
	417, 418, 419, 420, 1004, 422, 421, 423, 0, 0,
	0, 0, 0, 0, 424, 0, 426, 427, 428, 425,
	429, 430, 431, 432, 0, 433, 434, 435, 1043, 436,
	437, 438, 439, 934, 440, 0, 441, 442, 448, 449,
	443, 444, 450, 451, 452, 453, 454, 0, 456, 457,
	455, 458, 459, 460, 987, 461, 445, 446, 462, 463,
	1044, 464, 465, 1002, 0, 466, 0, 467, 468, 469,
	470, 447, 471, 476, 1047, 472, 473, 474, 475, 1024,
	0, 478, 479, 922, 477, 0, 480, 481, 482, 483,
	484, 485, 311, 486, 0, 487, 1014, 1015, 1016, 1017,
	0, 494, 0, 488, 489, 1025, 490, 1026, 944, 491,
	492, 493, 0, 495, 496, 0, 928, 497, 498, 499,
	501, 502, 500, 503, 988, 504, 0, 0, 505, 506,
	507, 561, 1011, 1046, 0, 509, 508, 564, 0, 0,
	0, 0, 510, 511, 565, 512, 513, 514, 925, 0,
	0, 0, 0, 0, 0, 921, 0, 0, 0, 0,
	0, 0, 919, 920, 0, 0, 0, 0, 0, 0,
	0, 950, 0, 0, 1429, 948, 966, 938, 939, 940,
	936, 937, 949, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 243, 244, 245, 246, 247, 248, 0,
	249, 250, 0, 0, 0, 0, 0, 990, 954, 0,
	0, 0, 251, 252, 254, 253, 255, 256, 257, 516,
	1003, 0, 1010, 258, 1009, 0, 259, 260, 261, 262,
	263, 956, 989, 923, 264, 1048, 1049, 522, 0, 265,
	266, 996, 0, 977, 0, 267, 268, 269, 270, 271,
	272, 273, 0, 0, 275, 276, 277, 274, 0, 278,
	0, 279, 280, 281, 0, 282, 1029, 283, 284, 980,
	978, 979, 986, 982, 981, 985, 285, 286, 287, 288,
	1013, 289, 1007, 1006, 927, 293, 290, 291, 0, 294,
	292, 0, 295, 296, 0, 0, 297, 998, 299, 0,
	300, 301, 0, 302, 303, 0, 304, 305, 933, 306,
	307, 308, 310, 312, 309, 313, 314, 315, 316, 1020,
	1021, 945, 240, 0, 0, 0, 0, 0, 317, 318,
	319, 1005, 0, 0, 0, 320, 0, 321, 0, 0,
	1030, 322, 323, 1018, 1019, 324, 325, 0, 326, 1027,
	0, 955, 327, 0, 328, 329, 330, 331, 332, 991,
	992, 995, 387, 1032, 333, 334, 0, 335, 336, 337,
	338, 0, 0, 0, 241, 339, 340, 342, 0, 1031,
	341, 1000, 1001, 0, 961, 0, 343, 1033, 993, 1034,
	344, 345, 346, 1035, 347, 0, 0, 0, 348, 349,
	350, 351, 352, 353, 0, 355, 354, 0, 356, 1028,
	1036, 357, 358, 1037, 0, 359, 360, 361, 984, 983,
	362, 363, 364, 365, 0, 366, 367, 369, 371, 368,
	370, 375, 372, 373, 374, 377, 0, 376, 1038, 378,
	379, 380, 383, 384, 382, 1039, 381, 924, 242, 1040,
	385, 946, 994, 386, 1008, 388, 389, 0, 0, 390,
	0, 0, 0, 392, 393, 394, 0, 0, 395, 396,
	544, 1041, 397, 1042, 1022, 398, 399, 391, 400, 401,
	402, 403, 404, 405, 406, 407, 0, 408, 409, 546,
	547, 1023, 410, 549, 411, 412, 0, 413, 0, 414,
	415, 416, 417, 418, 419, 420, 1004, 422, 421, 423,
	0, 0, 0, 0, 0, 0, 424, 0, 426, 427,
	428, 425, 429, 430, 431, 432, 0, 433, 434, 435,
	1043, 436, 437, 438, 439, 934, 440, 0, 441, 442,
	448, 449, 443, 444, 450, 451, 452, 453, 454, 0,
	456, 457, 455, 458, 459, 460, 987, 461, 445, 446,
	462, 463, 1044, 464, 465, 1002, 0, 466, 0, 467,
	468, 469, 470, 447, 471, 476, 1047, 472, 473, 474,
	475, 1024, 0, 478, 479, 922, 477, 0, 480, 481,
	482, 483, 484, 485, 311, 486, 0, 487, 1014, 1015,
	1016, 1017, 0, 494, 0, 488, 489, 1025, 490, 1026,
	944, 491, 492, 493, 0, 495, 496, 0, 928, 497,
	498, 499, 501, 502, 500, 503, 988, 504, 0, 0,
	505, 506, 507, 561, 1011, 1046, 0, 509, 508, 564,
	0, 0, 0, 0, 510, 511, 565, 512, 513, 514,
	925, 0, 0, 0, 0, 0, 0, 921, 0, 0,
	0, 0, 0, 0, 919, 920, 0, 0, 0, 0,
	0, 0, 0, 950, 0, 0, 1411, 948, 966, 938,
	939, 940, 936, 937, 949, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 243, 244, 245, 246, 247,
	248, 0, 249, 250, 0, 0, 0, 0, 0, 990,
	954, 0, 0, 0, 251, 252, 254, 253, 255, 256,
	257, 516, 1003, 0, 1010, 258, 1009, 0, 259, 260,
	261, 262, 263, 956, 989, 923, 264, 1048, 1049, 522,
	0, 265, 266, 996, 0, 977, 0, 267, 268, 269,
	270, 271, 272, 273, 0, 0, 275, 276, 277, 274,
	0, 278, 0, 279, 280, 281, 0, 282, 1029, 283,
	284, 980, 978, 979, 986, 982, 981, 985, 285, 286,
	287, 288, 1013, 289, 1007, 1006, 927, 293, 290, 291,
	0, 294, 292, 0, 295, 296, 0, 0, 297, 998,
	299, 0, 300, 301, 0, 302, 303, 0, 304, 305,
	933, 306, 307, 308, 310, 312, 309, 313, 314, 315,
	316, 1020, 1021, 945, 240, 0, 0, 0, 0, 0,
	317, 318, 319, 1005, 0, 0, 0, 320, 0, 321,
	0, 0, 1030, 322, 323, 1018, 1019, 324, 325, 0,
	326, 1027, 0, 955, 327, 0, 328, 329, 330, 331,
	332, 991, 992, 995, 387, 1032, 333, 334, 0, 335,
	336, 337, 338, 0, 0, 0, 241, 339, 340, 342,
	0, 1031, 341, 1000, 1001, 0, 961, 0, 343, 1033,
	993, 1034, 344, 345, 346, 1035, 347, 0, 0, 0,
	348, 349, 350, 351, 352, 353, 0, 355, 354, 0,
	356, 1028, 1036, 357, 358, 1037, 0, 359, 360, 361,
	984, 983, 362, 363, 364, 365, 0, 366, 367, 369,
	371, 368, 370, 375, 372, 373, 374, 377, 0, 376,
	1038, 378, 379, 380, 383, 384, 382, 1039, 381, 924,
	242, 1040, 385, 946, 994, 386, 1008, 388, 389, 0,
	0, 390, 0, 0, 0, 392, 393, 394, 0, 0,
	395, 396, 544, 1041, 397, 1042, 1022, 398, 399, 391,
	400, 401, 402, 403, 404, 405, 406, 407, 0, 408,
	409, 546, 547, 1023, 410, 549, 411, 412, 0, 413,
	0, 414, 415, 416, 417, 418, 419, 420, 1004, 422,
	421, 423, 0, 0, 0, 0, 0, 0, 424, 0,
	426, 427, 428, 425, 429, 430, 431, 432, 0, 433,
	434, 435, 1043, 436, 437, 438, 439, 934, 440, 0,
	441, 442, 448, 449, 443, 444, 450, 451, 452, 453,
	454, 0, 456, 457, 455, 458, 459, 460, 987, 461,
	445, 446, 462, 463, 1044, 464, 465, 1002, 0, 466,
	0, 467, 468, 469, 470, 447, 471, 476, 1047, 472,
	473, 474, 475, 1024, 0, 478, 479, 922, 477, 0,
	480, 481, 482, 483, 484, 485, 311, 486, 0, 487,
	1014, 1015, 1016, 1017, 0, 494, 0, 488, 489, 1025,
	490, 1026, 944, 491, 492, 493, 0, 495, 496, 0,
	928, 497, 498, 499, 501, 502, 500, 503, 988, 504,
	0, 0, 505, 506, 507, 561, 1011, 1046, 0, 509,
	508, 564, 0, 0, 0, 0, 510, 511, 565, 512,
	513, 514, 925, 0, 0, 0, 0, 0, 0, 921,
	0, 0, 0, 0, 0, 0, 919, 920, 0, 0,
	0, 0, 0, 0, 0, 950, 0, 0, 1298, 948,
	966, 938, 939, 940, 936, 937, 949, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 243, 244, 245,
	246, 247, 248, 0, 249, 250, 0, 0, 0, 0,
	0, 990, 954, 0, 0, 0, 251, 252, 254, 253,
	255, 256, 257, 516, 1003, 0, 1010, 258, 1009, 0,
	259, 260, 261, 262, 263, 956, 989, 923, 264, 1048,
	1049, 522, 0, 265, 266, 996, 0, 977, 0, 267,
	268, 269, 270, 271, 272, 273, 0, 0, 275, 276,
	277, 274, 0, 278, 0, 279, 280, 281, 0, 282,
	1029, 283, 284, 980, 978, 979, 986, 982, 981, 985,
	285, 286, 287, 288, 1013, 289, 1007, 1006, 927, 293,
	290, 291, 0, 294, 292, 0, 295, 296, 0, 0,
	297, 998, 299, 0, 300, 301, 0, 302, 303, 0,
	304, 305, 933, 306, 307, 308, 310, 312, 309, 313,
	314, 315, 316, 1020, 1021, 945, 240, 0, 0, 0,
	0, 0, 317, 318, 319, 1005, 0, 0, 0, 320,
	0, 321, 0, 0, 1030, 322, 323, 1018, 1019, 324,
	325, 0, 326, 1027, 0, 955, 327, 0, 328, 329,
	330, 331, 332, 1297, 992, 995, 387, 1032, 333, 334,
	0, 335, 336, 337, 338, 0, 0, 0, 241, 339,
	340, 342, 0, 1031, 341, 1000, 1001, 0, 961, 0,
	343, 1033, 993, 1034, 344, 345, 346, 1035, 347, 0,
	0, 0, 348, 349, 350, 351, 352, 353, 0, 355,
	354, 0, 356, 1028, 1036, 357, 358, 1037, 0, 359,
	360, 361, 984, 983, 362, 363, 364, 365, 0, 366,
	367, 369, 371, 368, 370, 375, 372, 373, 374, 377,
	0, 376, 1038, 378, 379, 380, 383, 384, 382, 1039,
	381, 924, 242, 1040, 385, 946, 994, 386, 1008, 388,
	389, 0, 0, 390, 0, 0, 0, 392, 393, 394,
	0, 0, 395, 396, 544, 1041, 397, 1042, 1022, 398,
	399, 391, 400, 401, 402, 403, 404, 405, 406, 407,
	0, 408, 409, 546, 547, 1023, 410, 549, 411, 412,
	0, 413, 0, 414, 415, 416, 417, 418, 419, 420,
	1004, 422, 421, 423, 0, 0, 0, 0, 0, 0,
	424, 0, 426, 427, 428, 425, 429, 430, 431, 432,
	0, 433, 434, 435, 1043, 436, 437, 438, 439, 934,
	440, 0, 441, 442, 448, 449, 443, 444, 450, 451,
	452, 453, 454, 0, 456, 457, 455, 458, 459, 460,
	987, 461, 445, 446, 462, 463, 1044, 464, 465, 1002,
	0, 466, 0, 467, 468, 469, 470, 447, 471, 476,
	1047, 472, 473, 474, 475, 1024, 0, 478, 479, 922,
	477, 0, 480, 481, 482, 483, 484, 485, 311, 486,
	0, 487, 1014, 1015, 1016, 1017, 0, 494, 0, 488,
	489, 1025, 490, 1026, 944, 491, 492, 493, 0, 495,
	496, 0, 928, 497, 498, 499, 501, 502, 500, 503,
	988, 504, 0, 0, 505, 506, 507, 561, 1011, 1046,
	0, 509, 508, 564, 0, 0, 0, 0, 510, 511,
	565, 512, 513, 514, 925, 0, 0, 0, 0, 0,
	0, 921, 0, 0, 0, 0, 0, 0, 919, 920,
	0, 0, 0, 0, 0, 0, 0, 950, 0, 0,
	1292, 948, 966, 938, 939, 940, 936, 937, 949, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 243,
	244, 245, 246, 247, 248, 0, 249, 250, 0, 0,
	0, 0, 0, 990, 954, 0, 0, 0, 251, 252,
	254, 253, 255, 256, 257, 516, 1003, 0, 1010, 258,
	1009, 0, 259, 260, 261, 262, 263, 956, 989, 923,
	264, 1048, 1049, 522, 0, 265, 266, 996, 0, 977,
	0, 267, 268, 269, 270, 271, 272, 273, 0, 0,
	275, 276, 277, 274, 0, 278, 0, 279, 280, 281,
	0, 282, 1029, 283, 284, 980, 978, 979, 986, 982,
	981, 985, 285, 286, 287, 288, 1013, 289, 1007, 1006,
	927, 293, 290, 291, 0, 294, 292, 0, 295, 296,
	0, 0, 297, 998, 299, 0, 300, 301, 0, 302,
	303, 0, 304, 305, 933, 306, 307, 308, 310, 312,
	309, 313, 314, 315, 316, 1020, 1021, 945, 240, 0,
	0, 0, 0, 0, 317, 318, 319, 1005, 0, 0,
	0, 320, 0, 321, 0, 0, 1030, 322, 323, 1018,
	1019, 324, 325, 0, 326, 1027, 0, 955, 327, 0,
	328, 329, 330, 331, 332, 1291, 992, 995, 387, 1032,
	333, 334, 0, 335, 336, 337, 338, 0, 0, 0,
	241, 339, 340, 342, 0, 1031, 341, 1000, 1001, 0,
	961, 0, 343, 1033, 993, 1034, 344, 345, 346, 1035,
	347, 0, 0, 0, 348, 349, 350, 351, 352, 353,
	0, 355, 354, 0, 356, 1028, 1036, 357, 358, 1037,
	0, 359, 360, 361, 984, 983, 362, 363, 364, 365,
	0, 366, 367, 369, 371, 368, 370, 375, 372, 373,
	374, 377, 0, 376, 1038, 378, 379, 380, 383, 384,
	382, 1039, 381, 924, 242, 1040, 385, 946, 994, 386,
	1008, 388, 389, 0, 0, 390, 0, 0, 0, 392,
	393, 394, 0, 0, 395, 396, 544, 1041, 397, 1042,
	1022, 398, 399, 391, 400, 401, 402, 403, 404, 405,
	406, 407, 0, 408, 409, 546, 547, 1023, 410, 549,
	411, 412, 0, 413, 0, 414, 415, 416, 417, 418,
	419, 420, 1004, 422, 421, 423, 0, 0, 0, 0,
	0, 0, 424, 0, 426, 427, 428, 425, 429, 430,
	431, 432, 0, 433, 434, 435, 1043, 436, 437, 438,
	439, 934, 440, 0, 441, 442, 448, 449, 443, 444,
	450, 451, 452, 453, 454, 0, 456, 457, 455, 458,
	459, 460, 987, 461, 445, 446, 462, 463, 1044, 464,
	465, 1002, 0, 466, 0, 467, 468, 469, 470, 447,
	471, 476, 1047, 472, 473, 474, 475, 1024, 0, 478,
	479, 922, 477, 0, 480, 481, 482, 483, 484, 485,
	311, 486, 0, 487, 1014, 1015, 1016, 1017, 0, 494,
	0, 488, 489, 1025, 490, 1026, 944, 491, 492, 493,
	0, 495, 496, 0, 928, 497, 498, 499, 501, 502,
	500, 503, 988, 504, 0, 0, 505, 506, 507, 561,
	1011, 1046, 0, 509, 508, 564, 0, 0, 0, 0,
	510, 511, 565, 512, 513, 514, 925, 0, 0, 0,
	0, 0, 0, 921, 0, 0, 0, 0, 0, 0,
	919, 920, 0, 0, 0, 0, 0, 0, 0, 950,
	0, 0, 1285, 948, 966, 938, 939, 940, 936, 937,
	949, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 243, 244, 245, 246, 247, 248, 0, 249, 250,
	0, 0, 0, 0, 0, 990, 954, 0, 0, 0,
	251, 252, 254, 253, 255, 256, 257, 516, 1003, 0,
	1010, 258, 1009, 0, 259, 260, 261, 262, 263, 956,
	989, 923, 264, 1048, 1049, 522, 0, 265, 266, 996,
	0, 977, 0, 267, 268, 269, 270, 271, 272, 273,
	0, 0, 275, 276, 277, 274, 0, 278, 0, 279,
	280, 281, 0, 282, 1029, 283, 284, 980, 978, 979,
	986, 982, 981, 985, 285, 286, 287, 288, 1013, 289,
	1007, 1006, 927, 293, 290, 291, 0, 294, 292, 0,
	295, 296, 0, 0, 297, 998, 299, 0, 300, 301,
	0, 302, 303, 0, 304, 305, 933, 306, 307, 308,
	310, 312, 309, 313, 314, 315, 316, 1020, 1021, 945,
	240, 0, 0, 0, 0, 0, 317, 318, 319, 1005,
	0, 0, 0, 320, 0, 321, 0, 0, 1030, 322,
	323, 1018, 1019, 324, 325, 0, 326, 1027, 0, 955,
	327, 0, 328, 329, 330, 331, 332, 991, 992, 995,
	387, 1032, 333, 334, 0, 335, 336, 337, 338, 0,
	0, 0, 241, 339, 340, 342, 0, 1031, 341, 1000,
	1001, 0, 961, 0, 343, 1033, 993, 1034, 344, 345,
	346, 1035, 347, 0, 0, 0, 348, 349, 350, 351,
	352, 353, 0, 355, 354, 0, 356, 1028, 1036, 357,
	358, 1037, 0, 359, 360, 361, 984, 983, 362, 363,
	364, 365, 0, 366, 367, 369, 371, 368, 370, 375,
	372, 373, 374, 377, 0, 376, 1038, 378, 379, 380,
	383, 384, 382, 1039, 381, 924, 242, 1040, 385, 946,
	994, 386, 1008, 388, 389, 0, 0, 390, 0, 0,
	0, 392, 393, 394, 0, 0, 395, 396, 544, 1041,
	397, 1042, 1022, 398, 399, 391, 400, 401, 402, 403,
	404, 405, 406, 407, 0, 408, 409, 546, 547, 1023,
	410, 549, 411, 412, 0, 413, 0, 414, 415, 416,
	417, 418, 419, 420, 1004, 422, 421, 423, 0, 0,
	0, 0, 0, 0, 424, 0, 426, 427, 428, 425,
	429, 430, 431, 432, 0, 433, 434, 435, 1043, 436,
	437, 438, 439, 934, 440, 0, 441, 442, 448, 449,
	443, 444, 450, 451, 452, 453, 454, 0, 456, 457,
	455, 458, 459, 460, 987, 461, 445, 446, 462, 463,
	1044, 464, 465, 1002, 0, 466, 0, 467, 468, 469,
	470, 447, 471, 476, 1047, 472, 473, 474, 475, 1024,
	0, 478, 479, 922, 477, 0, 480, 481, 482, 483,
	484, 485, 311, 486, 0, 487, 1014, 1015, 1016, 1017,
	0, 494, 0, 488, 489, 1025, 490, 1026, 944, 491,
	492, 493, 0, 495, 496, 0, 928, 497, 498, 499,
	501, 502, 500, 503, 988, 504, 0, 0, 505, 506,
	507, 561, 1011, 1046, 0, 509, 508, 564, 0, 0,
	0, 0, 510, 511, 565, 512, 513, 514, 925, 0,
	0, 0, 0, 0, 0, 921, 0, 0, 0, 0,
	0, 0, 919, 920, 966, 938, 939, 940, 936, 937,
	949, 950, 0, 0, 0, 948, 0, 0, 0, 0,
	0, 243, 244, 245, 246, 247, 248, 0, 249, 250,
	0, 0, 0, 0, 0, 990, 954, 0, 0, 0,
	251, 252, 254, 253, 255, 256, 257, 516, 1003, 0,
	1010, 258, 1009, 0, 259, 260, 261, 262, 263, 956,
	989, 923, 264, 1048, 1049, 522, 0, 265, 266, 996,
	0, 977, 0, 267, 268, 269, 270, 271, 272, 273,
	0, 0, 275, 276, 277, 274, 0, 278, 0, 279,
	280, 281, 0, 282, 1029, 283, 284, 980, 978, 979,
	986, 982, 981, 985, 285, 286, 287, 288, 1013, 289,
	1007, 1006, 927, 293, 290, 291, 0, 294, 292, 0,
	295, 296, 0, 0, 297, 998, 299, 0, 300, 301,
	0, 302, 303, 0, 304, 305, 933, 306, 307, 308,
	310, 312, 309, 313, 314, 315, 316, 1020, 1021, 945,
	240, 0, 0, 0, 0, 0, 317, 318, 319, 1005,
	0, 0, 0, 320, 0, 321, 0, 0, 1030, 322,
	323, 1018, 1019, 324, 325, 0, 326, 1027, 0, 955,
	327, 0, 328, 329, 330, 331, 332, 991, 992, 995,
	387, 1032, 333, 334, 0, 335, 336, 337, 338, 0,
	0, 0, 241, 339, 340, 342, 0, 1031, 341, 1000,
	1001, 0, 961, 0, 343, 1033, 993, 1034, 344, 345,
	346, 1035, 347, 0, 0, 0, 348, 349, 350, 351,
	352, 353, 0, 355, 354, 0, 356, 1028, 1036, 357,
	358, 1037, 0, 359, 360, 361, 984, 983, 362, 363,
	364, 365, 0, 366, 367, 369, 371, 368, 370, 375,
	372, 373, 374, 377, 0, 376, 1038, 378, 379, 380,
	383, 384, 382, 1039, 381, 924, 242, 1040, 385, 946,
	994, 386, 1008, 388, 389, 0, 0, 390, 0, 0,
	0, 392, 393, 394, 0, 0, 395, 396, 544, 1041,
	397, 1042, 1022, 398, 399, 391, 400, 401, 402, 403,
	404, 405, 406, 407, 0, 408, 409, 546, 547, 1023,
	410, 549, 411, 412, 0, 413, 0, 414, 415, 416,
	417, 418, 419, 420, 1004, 422, 421, 423, 0, 0,
	0, 0, 0, 0, 424, 0, 426, 427, 428, 425,
	429, 430, 431, 432, 0, 433, 434, 435, 1043, 436,
	437, 438, 439, 934, 440, 0, 441, 442, 448, 449,
	443, 444, 450, 451, 452, 453, 454, 0, 456, 457,
	455, 458, 459, 460, 987, 461, 445, 446, 462, 463,
	1044, 464, 465, 1002, 0, 466, 0, 467, 468, 469,
	470, 447, 471, 476, 1047, 472, 473, 474, 475, 1024,
	0, 478, 479, 922, 477, 0, 480, 481, 482, 483,
	484, 485, 311, 486, 0, 487, 1014, 1015, 1016, 1017,
	0, 494, 0, 488, 489, 1025, 490, 1026, 944, 491,
	492, 493, 0, 495, 496, 0, 928, 497, 498, 499,
	501, 502, 500, 503, 988, 504, 0, 0, 505, 506,
	507, 561, 1011, 1046, 0, 509, 508, 564, 0, 0,
	0, 0, 510, 511, 565, 512, 513, 514, 925, 0,
	0, 0, 0, 0, 0, 921, 0, 0, 0, 0,
	0, 0, 919, 920, 966, 938, 939, 940, 936, 937,
	949, 950, 0, 0, 0, 948, 0, 0, 0, 0,
	0, 243, 244, 245, 246, 247, 248, 0, 249, 250,
	0, 0, 0, 0, 0, 990, 954, 0, 0, 0,
	251, 252, 254, 253, 255, 256, 257, 516, 1003, 0,
	1010, 258, 1009, 0, 259, 260, 261, 262, 263, 956,
	989, 923, 264, 1048, 1049, 522, 0, 265, 266, 996,
	0, 977, 0, 267, 268, 269, 270, 271, 272, 273,
	0, 0, 275, 276, 277, 274, 0, 278, 0, 279,
	280, 281, 0, 282, 1029, 283, 3933, 980, 978, 979,
	986, 982, 981, 985, 285, 286, 287, 288, 1013, 289,
	1007, 1006, 927, 293, 290, 291, 0, 294, 292, 0,
	295, 296, 0, 0, 297, 998, 299, 0, 300, 301,
	0, 302, 303, 0, 304, 305, 933, 306, 307, 308,
	310, 312, 309, 313, 314, 315, 316, 1020, 1021, 945,
	240, 0, 0, 0, 0, 0, 317, 318, 319, 1005,
	0, 0, 0, 320, 0, 321, 0, 0, 1030, 322,
	323, 1018, 1019, 324, 325, 0, 326, 1027, 0, 955,
	327, 0, 328, 329, 330, 331, 332, 991, 992, 995,
	387, 1032, 333, 334, 0, 335, 336, 337, 338, 0,
	0, 0, 241, 339, 340, 342, 0, 1031, 341, 1000,
	1001, 0, 961, 0, 343, 1033, 993, 1034, 344, 345,
	346, 1035, 347, 0, 0, 0, 348, 349, 350, 351,
	352, 353, 0, 355, 354, 0, 356, 1028, 1036, 357,
	358, 1037, 0, 359, 360, 361, 984, 983, 362, 363,
	364, 365, 0, 366, 367, 369, 371, 368, 370, 375,
	372, 373, 374, 377, 0, 376, 1038, 378, 379, 380,
	383, 384, 382, 1039, 381, 924, 242, 1040, 385, 946,
	994, 386, 1008, 388, 389, 0, 0, 390, 0, 0,
	0, 392, 393, 394, 0, 0, 395, 396, 544, 1041,
	397, 1042, 1022, 398, 399, 391, 400, 401, 402, 403,
	404, 405, 406, 407, 0, 408, 409, 546, 547, 1023,
	410, 549, 411, 412, 0, 413, 0, 414, 415, 416,
	417, 418, 419, 420, 1004, 422, 421, 423, 0, 0,
	0, 0, 0, 0, 424, 0, 426, 427, 428, 425,
	429, 430, 431, 432, 0, 433, 434, 435, 1043, 436,
	437, 438, 439, 934, 440, 0, 441, 442, 448, 449,
	443, 444, 450, 451, 452, 453, 454, 0, 456, 457,
	455, 458, 459, 460, 987, 461, 445, 446, 462, 463,
	1044, 464, 465, 1002, 0, 466, 0, 467, 468, 469,
	470, 447, 471, 476, 1047, 472, 473, 474, 475, 1024,
	0, 478, 479, 922, 477, 0, 480, 481, 482, 483,
	484, 485, 311, 486, 0, 487, 1014, 1015, 1016, 1017,
	0, 494, 0, 488, 489, 1025, 490, 1026, 944, 491,
	492, 493, 0, 3932, 496, 0, 928, 497, 498, 499,
	501, 502, 500, 503, 988, 504, 0, 0, 505, 506,
	507, 561, 1011, 1046, 0, 509, 508, 564, 0, 0,
	0, 0, 510, 511, 565, 512, 513, 514, 925, 0,
	0, 0, 0, 0, 0, 921, 0, 0, 0, 0,
	0, 0, 919, 920, 966, 938, 939, 940, 936, 937,
	949, 950, 0, 0, 0, 948, 0, 0, 0, 0,
	0, 243, 244, 245, 246, 247, 248, 0, 249, 250,
	0, 0, 0, 0, 0, 990, 954, 0, 0, 0,
	251, 252, 254, 253, 255, 256, 257, 3931, 1003, 0,
	1010, 258, 1009, 0, 259, 260, 261, 262, 263, 956,
	989, 923, 264, 1048, 1049, 522, 0, 265, 266, 996,
	0, 977, 0, 267, 268, 269, 270, 271, 272, 273,
	0, 0, 275, 276, 277, 274, 0, 278, 0, 279,
	280, 281, 0, 282, 1029, 283, 3933, 980, 978, 979,
	986, 982, 981, 985, 285, 286, 287, 288, 1013, 289,
	1007, 1006, 927, 293, 290, 291, 0, 294, 292, 0,
	295, 296, 0, 0, 297, 998, 299, 0, 300, 301,
	0, 302, 303, 0, 304, 305, 933, 306, 307, 308,
	310, 312, 309, 313, 314, 315, 316, 1020, 1021, 945,
	240, 0, 0, 0, 0, 0, 317, 318, 319, 1005,
	0, 0, 0, 320, 0, 321, 0, 0, 1030, 322,
	323, 1018, 1019, 324, 325, 0, 326, 1027, 0, 955,
	327, 0, 328, 329, 330, 331, 332, 991, 992, 995,
	387, 1032, 333, 334, 0, 335, 336, 337, 338, 0,
	0, 0, 241, 339, 340, 342, 0, 1031, 341, 1000,
	1001, 0, 961, 0, 343, 1033, 993, 1034, 344, 345,
	346, 1035, 347, 0, 0, 0, 348, 349, 350, 351,
	352, 353, 0, 355, 354, 0, 356, 1028, 1036, 357,
	358, 1037, 0, 359, 360, 361, 984, 983, 362, 363,
	364, 365, 0, 366, 367, 369, 371, 368, 370, 375,
	372, 373, 374, 377, 0, 376, 1038, 378, 379, 380,
	383, 384, 382, 1039, 381, 924, 242, 1040, 385, 946,
	994, 386, 1008, 388, 389, 0, 0, 390, 0, 0,
	0, 392, 393, 394, 0, 0, 395, 396, 544, 1041,
	397, 1042, 1022, 398, 399, 391, 400, 401, 402, 403,
	404, 405, 406, 407, 0, 408, 409, 546, 547, 1023,
	410, 549, 411, 412, 0, 413, 0, 414, 415, 416,
	417, 418, 419, 420, 1004, 422, 421, 423, 0, 0,
	0, 0, 0, 0, 424, 0, 426, 427, 428, 425,
	429, 430, 431, 432, 0, 433, 434, 435, 1043, 436,
	437, 438, 439, 934, 440, 0, 441, 442, 448, 449,
	443, 444, 450, 451, 452, 453, 454, 0, 456, 457,
	455, 458, 459, 460, 987, 461, 445, 446, 462, 463,
	1044, 464, 465, 1002, 0, 466, 0, 467, 468, 469,
	470, 447, 471, 476, 1047, 472, 473, 474, 475, 1024,
	0, 478, 479, 922, 477, 0, 480, 481, 482, 483,
	484, 485, 311, 486, 0, 487, 1014, 1015, 1016, 1017,
	0, 494, 0, 488, 489, 1025, 490, 1026, 944, 491,
	492, 493, 0, 3932, 496, 0, 928, 497, 498, 499,
	501, 502, 500, 503, 988, 504, 0, 0, 505, 506,
	507, 561, 1011, 1046, 0, 509, 508, 564, 0, 0,
	0, 0, 510, 511, 565, 512, 513, 514, 925, 0,
	0, 0, 0, 0, 0, 921, 0, 0, 0, 0,
	0, 0, 919, 920, 966, 938, 939, 940, 2695, 2696,
	949, 950, 0, 0, 0, 948, 0, 0, 0, 0,
	0, 243, 244, 245, 246, 247, 248, 0, 249, 250,
	0, 0, 0, 0, 0, 990, 954, 0, 0, 0,
	251, 252, 254, 253, 255, 256, 257, 516, 1003, 0,
	1010, 258, 1009, 0, 259, 260, 261, 262, 263, 956,
	989, 923, 264, 1048, 1049, 522, 0, 265, 266, 996,
	0, 977, 0, 267, 268, 269, 270, 271, 272, 273,
	0, 0, 275, 276, 277, 274, 0, 278, 0, 279,
	280, 281, 0, 282, 1029, 283, 284, 980, 978, 979,
	986, 982, 981, 985, 285, 286, 287, 288, 1013, 289,
	1007, 1006, 927, 293, 290, 291, 0, 294, 292, 0,
	295, 296, 0, 0, 297, 998, 299, 0, 300, 301,
	0, 302, 303, 0, 304, 305, 933, 306, 307, 308,
	310, 312, 309, 313, 314, 315, 316, 1020, 1021, 945,
	240, 0, 0, 0, 0, 0, 317, 318, 319, 1005,
	0, 0, 0, 320, 0, 321, 0, 0, 1030, 322,
	323, 1018, 1019, 324, 325, 0, 326, 1027, 0, 955,
	327, 0, 328, 329, 330, 331, 332, 991, 992, 995,
	387, 1032, 333, 334, 0, 335, 336, 337, 338, 0,
	0, 0, 241, 339, 340, 342, 0, 1031, 341, 1000,
	1001, 0, 961, 0, 343, 1033, 993, 1034, 344, 345,
	346, 1035, 347, 0, 0, 0, 348, 349, 350, 351,
	352, 353, 0, 355, 354, 0, 356, 1028, 1036, 357,
	358, 1037, 0, 359, 360, 361, 984, 983, 362, 363,
	364, 365, 0, 366, 367, 369, 371, 368, 370, 375,
	372, 373, 374, 377, 0, 376, 1038, 378, 379, 380,
	383, 384, 382, 1039, 381, 924, 242, 1040, 385, 946,
	994, 386, 1008, 388, 389, 0, 0, 390, 0, 0,
	0, 392, 393, 394, 0, 0, 395, 396, 544, 1041,
	397, 1042, 1022, 398, 399, 391, 400, 401, 402, 403,
	404, 405, 406, 407, 0, 408, 409, 546, 547, 1023,
	410, 549, 411, 412, 0, 413, 0, 414, 415, 416,
	417, 418, 419, 420, 1004, 422, 421, 423, 0, 0,
	0, 0, 0, 0, 424, 0, 426, 427, 428, 425,
	429, 430, 431, 432, 0, 433, 434, 435, 1043, 436,
	437, 438, 439, 934, 440, 0, 441, 442, 448, 449,
	443, 444, 450, 451, 452, 453, 454, 0, 456, 457,
	455, 458, 459, 460, 987, 461, 445, 446, 462, 463,
	1044, 464, 465, 1002, 0, 466, 0, 467, 468, 469,
	470, 447, 471, 476, 1047, 472, 473, 474, 475, 1024,
	0, 478, 479, 922, 477, 0, 480, 481, 482, 483,
	484, 485, 311, 486, 0, 487, 1014, 1015, 1016, 1017,
	0, 494, 0, 488, 489, 1025, 490, 1026, 944, 491,
	492, 493, 0, 495, 496, 0, 928, 497, 498, 499,
	501, 502, 500, 503, 988, 504, 0, 0, 505, 506,
	507, 561, 1011, 1046, 0, 509, 508, 564, 0, 0,
	0, 0, 510, 511, 565, 512, 513, 514, 925, 0,
	0, 0, 0, 0, 0, 921, 0, 0, 0, 0,
	0, 0, 919, 920, 966, 938, 939, 940, 2693, 2694,
	949, 950, 0, 0, 0, 948, 0, 0, 0, 0,
	0, 243, 244, 245, 246, 247, 248, 0, 249, 250,
	0, 0, 0, 0, 0, 990, 954, 0, 0, 0,
	251, 252, 254, 253, 255, 256, 257, 516, 1003, 0,
	1010, 258, 1009, 0, 259, 260, 261, 262, 263, 956,
	989, 923, 264, 1048, 1049, 522, 0, 265, 266, 996,
	0, 977, 0, 267, 268, 269, 270, 271, 272, 273,
	0, 0, 275, 276, 277, 274, 0, 278, 0, 279,
	280, 281, 0, 282, 1029, 283, 284, 980, 978, 979,
	986, 982, 981, 985, 285, 286, 287, 288, 1013, 289,
	1007, 1006, 927, 293, 290, 291, 0, 294, 292, 0,
	295, 296, 0, 0, 297, 998, 299, 0, 300, 301,
	0, 302, 303, 0, 304, 305, 933, 306, 307, 308,
	310, 312, 309, 313, 314, 315, 316, 1020, 1021, 945,
	240, 0, 0, 0, 0, 0, 317, 318, 319, 1005,
	0, 0, 0, 320, 0, 321, 0, 0, 1030, 322,
	323, 1018, 1019, 324, 325, 0, 326, 1027, 0, 955,
	327, 0, 328, 329, 330, 331, 332, 991, 992, 995,
	387, 1032, 333, 334, 0, 335, 336, 337, 338, 0,
	0, 0, 241, 339, 340, 342, 0, 1031, 341, 1000,
	1001, 0, 961, 0, 343, 1033, 993, 1034, 344, 345,
	346, 1035, 347, 0, 0, 0, 348, 349, 350, 351,
	352, 353, 0, 355, 354, 0, 356, 1028, 1036, 357,
	358, 1037, 0, 359, 360, 361, 984, 983, 362, 363,
	364, 365, 0, 366, 367, 369, 371, 368, 370, 375,
	372, 373, 374, 377, 0, 376, 1038, 378, 379, 380,
	383, 384, 382, 1039, 381, 924, 242, 1040, 385, 946,
	994, 386, 1008, 388, 389, 0, 0, 390, 0, 0,
	0, 392, 393, 394, 0, 0, 395, 396, 544, 1041,
	397, 1042, 1022, 398, 399, 391, 400, 401, 402, 403,
	404, 405, 406, 407, 0, 408, 409, 546, 547, 1023,
	410, 549, 411, 412, 0, 413, 0, 414, 415, 416,
	417, 418, 419, 420, 1004, 422, 421, 423, 0, 0,
	0, 0, 0, 0, 424, 0, 426, 427, 428, 425,
	429, 430, 431, 432, 0, 433, 434, 435, 1043, 436,
	437, 438, 439, 934, 440, 0, 441, 442, 448, 449,
	443, 444, 450, 451, 452, 453, 454, 0, 456, 457,
	455, 458, 459, 460, 987, 461, 445, 446, 462, 463,
	1044, 464, 465, 1002, 0, 466, 0, 467, 468, 469,
	470, 447, 471, 476, 1047, 472, 473, 474, 475, 1024,
	0, 478, 479, 922, 477, 0, 480, 481, 482, 483,
	484, 485, 311, 486, 0, 487, 1014, 1015, 1016, 1017,
	0, 494, 0, 488, 489, 1025, 490, 1026, 944, 491,
	492, 493, 0, 495, 496, 0, 928, 497, 498, 499,
	501, 502, 500, 503, 988, 504, 0, 0, 505, 506,
	507, 561, 1011, 1046, 0, 509, 508, 564, 0, 0,
	0, 0, 510, 511, 565, 512, 513, 514, 925, 0,
	0, 0, 0, 0, 0, 921, 0, 0, 0, 0,
	0, 0, 919, 920, 966, 938, 939, 940, 936, 937,
	949, 950, 0, 0, 0, 948, 0, 0, 0, 0,
	0, 243, 244, 245, 246, 247, 248, 0, 249, 250,
	0, 0, 0, 0, 0, 990, 954, 0, 0, 0,
	251, 252, 254, 253, 255, 256, 257, 516, 1003, 0,
	1010, 258, 1009, 0, 259, 260, 261, 262, 263, 956,
	989, 923, 264, 1048, 1049, 522, 0, 265, 266, 996,
	0, 977, 0, 267, 268, 269, 270, 271, 272, 273,
	0, 0, 275, 276, 277, 274, 0, 278, 0, 279,
	280, 281, 0, 282, 1029, 283, 284, 980, 978, 979,
	986, 982, 981, 985, 285, 286, 287, 288, 1013, 289,
	1007, 1006, 927, 293, 290, 291, 0, 294, 292, 0,
	295, 296, 0, 0, 297, 998, 299, 0, 300, 301,
	0, 302, 303, 0, 304, 305, 933, 306, 307, 308,
	310, 312, 309, 313, 314, 315, 316, 1020, 1021, 945,
	240, 0, 0, 0, 0, 0, 317, 318, 319, 1005,
	0, 0, 0, 320, 0, 321, 0, 0, 1030, 322,
	323, 1018, 1019, 324, 325, 0, 326, 1027, 0, 955,
	327, 0, 328, 329, 330, 331, 332, 991, 992, 995,
	387, 1032, 333, 334, 0, 335, 336, 337, 338, 0,
	0, 0, 241, 339, 340, 342, 0, 1031, 341, 1000,
	1001, 0, 961, 0, 343, 1033, 993, 1034, 344, 345,
	346, 1035, 347, 0, 0, 0, 348, 349, 350, 351,
	352, 353, 0, 355, 354, 0, 356, 1028, 1036, 357,
	358, 1037, 0, 359, 360, 361, 984, 983, 362, 363,
	364, 365, 0, 366, 367, 369, 371, 368, 370, 375,
	372, 373, 374, 377, 0, 376, 1038, 378, 379, 380,
	383, 384, 382, 1039, 381, 924, 242, 1040, 385, 946,
	994, 386, 1008, 388, 389, 0, 0, 390, 0, 0,
	0, 392, 393, 394, 0, 0, 395, 396, 544, 1041,
	397, 1042, 1022, 398, 399, 391, 400, 401, 402, 403,
	404, 405, 406, 407, 0, 408, 409, 546, 547, 1023,
	410, 549, 411, 412, 0, 413, 0, 414, 415, 416,
	417, 418, 419, 420, 1004, 422, 421, 423, 0, 0,
	0, 0, 0, 0, 424, 0, 426, 427, 428, 425,
	429, 430, 431, 432, 0, 433, 434, 435, 1043, 436,
	437, 438, 439, 934, 440, 0, 441, 442, 448, 449,
	443, 444, 450, 451, 452, 453, 454, 0, 456, 457,
	455, 458, 459, 460, 987, 461, 445, 446, 462, 463,
	1044, 464, 465, 1002, 0, 466, 0, 467, 468, 469,
	470, 447, 471, 476, 1047, 472, 473, 474, 475, 1024,
	0, 478, 479, 922, 477, 0, 480, 481, 482, 483,
	484, 485, 311, 486, 0, 487, 1014, 1015, 1016, 1017,
	0, 494, 0, 488, 489, 1025, 490, 1026, 944, 491,
	492, 493, 0, 495, 496, 0, 928, 497, 498, 499,
	501, 502, 500, 503, 988, 504, 0, 0, 505, 506,
	507, 561, 1011, 1046, 0, 509, 508, 564, 0, 0,
	0, 0, 510, 511, 565, 512, 513, 514, 925, 0,
	0, 0, 0, 0, 0, 921, 0, 0, 0, 0,
	0, 0, 2121, 2122, 966, 938, 939, 940, 936, 937,
	949, 950, 0, 0, 0, 948, 0, 0, 0, 0,
	0, 243, 244, 245, 246, 247, 248, 0, 249, 250,
	0, 0, 0, 0, 0, 990, 954, 0, 0, 0,
	251, 252, 254, 253, 255, 256, 257, 516, 1003, 0,
	1010, 258, 1009, 0, 259, 260, 261, 262, 263, 956,
	989, 0, 264, 1048, 1049, 522, 0, 265, 266, 996,
	0, 977, 0, 267, 268, 269, 270, 271, 272, 273,
	0, 0, 275, 276, 277, 274, 0, 278, 0, 279,
	280, 281, 0, 282, 1029, 283, 284, 980, 978, 979,
	986, 982, 981, 985, 285, 286, 287, 288, 1013, 289,
	1007, 1006, 0, 293, 290, 291, 0, 294, 292, 0,
	295, 296, 0, 0, 297, 998, 299, 0, 300, 301,
	0, 302, 303, 0, 304, 305, 933, 306, 307, 308,
	310, 312, 309, 313, 314, 315, 316, 1020, 1021, 945,
	240, 0, 0, 0, 0, 0, 317, 318, 319, 1005,
	0, 0, 0, 320, 0, 321, 0, 0, 1030, 322,
	323, 1018, 1019, 324, 325, 0, 326, 1027, 0, 955,
	327, 0, 328, 329, 330, 331, 332, 991, 992, 995,
	387, 1032, 333, 334, 0, 335, 336, 337, 338, 0,
	0, 0, 241, 339, 340, 342, 0, 1031, 341, 1000,
	1001, 0, 961, 0, 343, 1033, 993, 1034, 344, 345,
	346, 1035, 347, 0, 0, 0, 348, 349, 350, 351,
	352, 353, 0, 355, 354, 0, 356, 1028, 1036, 357,
	358, 1037, 0, 359, 360, 361, 984, 983, 362, 363,
	364, 365, 0, 366, 367, 369, 371, 368, 370, 375,
	372, 373, 374, 377, 0, 376, 1038, 378, 379, 380,
	383, 384, 382, 1039, 381, 0, 242, 1040, 385, 946,
	994, 386, 1008, 388, 389, 0, 0, 390, 0, 0,
	0, 392, 393, 394, 0, 0, 395, 396, 544, 1041,
	397, 1042, 1022, 398, 399, 391, 400, 401, 402, 403,
	404, 405, 406, 407, 0, 408, 409, 546, 547, 1023,
	410, 549, 411, 412, 0, 413, 0, 414, 415, 416,
	417, 418, 419, 420, 1004, 422, 421, 423, 0, 0,
	0, 0, 0, 0, 424, 0, 426, 427, 428, 425,
	429, 430, 431, 432, 0, 433, 434, 435, 1043, 436,
	437, 438, 439, 934, 440, 0, 441, 442, 448, 449,
	443, 444, 450, 451, 452, 453, 454, 0, 456, 457,
	455, 458, 459, 460, 987, 461, 445, 446, 462, 463,
	1044, 464, 465, 1002, 0, 466, 0, 467, 468, 469,
	470, 447, 471, 476, 1047, 472, 473, 474, 475, 1024,
	0, 478, 479, 0, 477, 0, 480, 481, 482, 483,
	484, 485, 311, 486, 0, 487, 1014, 1015, 1016, 1017,
	0, 494, 0, 488, 489, 1025, 490, 1026, 944, 491,
	492, 493, 0, 495, 496, 0, 0, 497, 498, 499,
	501, 502, 500, 503, 988, 504, 0, 0, 505, 506,
	507, 561, 1011, 1046, 0, 509, 508, 564, 0, 0,
	0, 0, 510, 511, 565, 512, 513, 514, 966, 938,
	939, 940, 936, 937, 949, 2317, 0, 0, 0, 0,
	0, 0, 2315, 2316, 0, 243, 244, 245, 246, 247,
	248, 950, 249, 250, 0, 948, 0, 0, 0, 990,
	954, 0, 0, 0, 251, 252, 254, 253, 255, 256,
	257, 516, 1003, 0, 1010, 258, 1009, 0, 259, 260,
	261, 262, 263, 956, 989, 0, 264, 1048, 1049, 522,
	0, 265, 266, 996, 0, 977, 0, 267, 268, 269,
	270, 271, 272, 273, 0, 0, 275, 276, 277, 274,
	0, 278, 0, 279, 280, 281, 0, 282, 1029, 283,
	284, 980, 978, 979, 986, 982, 981, 985, 285, 286,
	287, 288, 1013, 289, 1007, 1006, 0, 293, 290, 291,
	0, 294, 292, 0, 295, 296, 0, 0, 297, 998,
	299, 0, 300, 301, 0, 302, 303, 0, 304, 305,
	933, 306, 307, 308, 310, 312, 309, 313, 314, 315,
	316, 1020, 1021, 945, 240, 0, 0, 0, 0, 0,
	317, 318, 319, 1005, 0, 0, 0, 320, 0, 321,
	0, 0, 1030, 322, 323, 1018, 1019, 324, 325, 0,
	326, 1027, 0, 955, 327, 0, 328, 329, 330, 331,
	332, 991, 992, 995, 387, 1032, 333, 334, 0, 335,
	336, 337, 338, 0, 0, 0, 241, 339, 340, 342,
	0, 1031, 341, 1000, 1001, 0, 961, 0, 343, 1033,
	993, 1034, 344, 345, 346, 1035, 347, 0, 0, 0,
	348, 349, 350, 351, 352, 353, 0, 355, 354, 0,
	356, 1028, 1036, 357, 358, 1037, 0, 359, 360, 361,
	984, 983, 362, 363, 364, 365, 0, 366, 367, 369,
	371, 368, 370, 375, 372, 373, 374, 377, 0, 376,
	1038, 378, 379, 380, 383, 384, 382, 1039, 381, 0,
	242, 1040, 385, 946, 994, 386, 1008, 388, 389, 0,
	0, 390, 0, 0, 0, 392, 393, 394, 0, 0,
	395, 396, 544, 1041, 397, 1042, 1022, 398, 399, 391,
	400, 401, 402, 403, 404, 405, 406, 407, 0, 408,
	409, 546, 547, 1023, 410, 549, 411, 412, 0, 413,
	0, 414, 415, 416, 417, 418, 419, 420, 1004, 422,
	421, 423, 0, 0, 0, 0, 0, 0, 424, 0,
	426, 427, 428, 425, 429, 430, 431, 432, 0, 433,
	434, 435, 1043, 436, 437, 438, 439, 2688, 2689, 0,
	441, 442, 448, 449, 443, 444, 450, 451, 452, 453,
	454, 0, 456, 457, 455, 458, 459, 460, 987, 461,
	445, 446, 462, 463, 1044, 464, 465, 1002, 0, 466,
	0, 467, 468, 469, 470, 447, 471, 476, 1047, 472,
	473, 474, 475, 1024, 0, 478, 479, 0, 477, 0,
	480, 481, 482, 483, 484, 485, 311, 486, 0, 487,
	1014, 1015, 1016, 1017, 0, 494, 0, 488, 489, 1025,
	490, 1026, 944, 491, 492, 493, 0, 495, 496, 0,
	0, 497, 498, 499, 501, 502, 500, 503, 988, 504,
	0, 0, 505, 506, 507, 561, 1011, 1046, 0, 509,
	508, 564, 0, 0, 0, 0, 510, 511, 565, 512,
	513, 514, 966, 938, 939, 940, 936, 937, 949, 0,
	0, 0, 0, 0, 0, 0, 1849, 1850, 0, 243,
	244, 245, 246, 247, 248, 950, 249, 250, 0, 948,
	0, 0, 0, 990, 954, 0, 0, 0, 251, 252,
	254, 253, 255, 256, 257, 0, 1003, 0, 1010, 258,
	1009, 0, 259, 260, 261, 262, 263, 956, 989, 923,
	264, 1048, 1049, 522, 0, 265, 266, 996, 0, 977,
	0, 267, 268, 269, 270, 271, 272, 273, 0, 0,
	275, 276, 277, 274, 0, 278, 0, 279, 280, 281,
	0, 282, 1029, 283, 3933, 980, 978, 979, 986, 982,
	981, 985, 285, 286, 287, 288, 1013, 289, 1007, 1006,
	927, 293, 290, 291, 0, 294, 292, 0, 295, 296,
	0, 0, 297, 998, 299, 0, 300, 301, 0, 302,
	303, 0, 304, 305, 933, 306, 307, 308, 310, 312,
	309, 313, 314, 315, 316, 1020, 1021, 945, 240, 0,
	0, 0, 0, 0, 317, 318, 319, 1005, 0, 0,
	0, 320, 0, 321, 0, 0, 1030, 322, 323, 1018,
	1019, 324, 325, 0, 326, 1027, 0, 955, 327, 0,
	328, 329, 330, 331, 332, 991, 992, 995, 387, 0,
	333, 334, 0, 335, 336, 337, 338, 0, 0, 0,
	241, 339, 340, 342, 0, 1031, 341, 1000, 1001, 0,
	961, 0, 343, 0, 993, 0, 344, 345, 346, 1035,
	347, 0, 0, 0, 348, 349, 350, 351, 352, 353,
	0, 355, 354, 0, 356, 1028, 1036, 357, 358, 0,
	0, 359, 360, 361, 984, 983, 362, 363, 364, 365,
	0, 366, 367, 369, 371, 368, 370, 375, 372, 373,
	374, 377, 0, 376, 1038, 378, 379, 380, 383, 384,
	382, 1039, 381, 924, 242, 0, 385, 946, 994, 386,
	1008, 388, 389, 0, 0, 390, 0, 0, 0, 392,
	393, 394, 0, 0, 395, 396, 544, 1041, 397, 1042,
	1022, 398, 399, 391, 400, 401, 402, 403, 404, 405,
	406, 407, 0, 408, 409, 546, 547, 1023, 410, 549,
	411, 412, 0, 413, 0, 414, 415, 416, 417, 418,
	419, 420, 1004, 422, 421, 423, 0, 0, 0, 0,
	0, 0, 424, 0, 426, 427, 428, 425, 429, 430,
	431, 432, 0, 433, 434, 435, 1043, 436, 437, 438,
	439, 934, 440, 0, 441, 442, 448, 449, 443, 444,
	450, 451, 452, 453, 454, 0, 456, 457, 455, 458,
	459, 460, 987, 461, 445, 446, 462, 463, 0, 464,
	465, 1002, 0, 466, 0, 467, 468, 469, 470, 447,
	471, 476, 1047, 472, 473, 474, 475, 1024, 0, 478,
	479, 922, 477, 0, 480, 481, 482, 483, 484, 485,
	311, 486, 0, 487, 1014, 1015, 1016, 1017, 0, 494,
	0, 488, 489, 1025, 490, 1026, 944, 491, 492, 493,
	0, 3932, 496, 0, 928, 497, 498, 499, 501, 502,
	500, 503, 988, 504, 0, 0, 505, 506, 507, 561,
	1011, 1046, 0, 509, 508, 564, 0, 0, 0, 0,
	510, 511, 565, 512, 513, 514, 966, 938, 939, 940,
	936, 937, 949, 0, 0, 0, 0, 0, 0, 0,
	919, 920, 0, 243, 244, 245, 246, 247, 248, 950,
	249, 250, 0, 948, 0, 0, 0, 990, 954, 0,
	0, 0, 251, 252, 254, 253, 255, 256, 257, 516,
	1003, 0, 1010, 258, 1009, 0, 259, 260, 261, 262,
	263, 0, 989, 0, 264, 1048, 1049, 522, 0, 265,
	266, 996, 0, 977, 0, 267, 268, 269, 270, 271,
	272, 273, 0, 0, 275, 276, 277, 274, 0, 278,
	0, 279, 280, 281, 0, 282, 1029, 283, 284, 980,
	978, 979, 986, 982, 981, 985, 285, 286, 287, 288,
	1013, 289, 1007, 1006, 0, 293, 290, 291, 0, 294,
	292, 0, 295, 296, 0, 0, 297, 998, 299, 0,
	300, 301, 0, 302, 303, 0, 304, 305, 526, 306,
	307, 308, 310, 312, 309, 313, 314, 315, 316, 1020,
	1021, 945, 240, 0, 0, 0, 0, 0, 317, 318,
	319, 1005, 0, 0, 0, 320, 0, 321, 0, 0,
	1030, 322, 323, 1018, 1019, 324, 325, 0, 326, 1027,
	0, 955, 327, 0, 328, 329, 330, 331, 332, 991,
	992, 995, 387, 1032, 333, 334, 0, 335, 336, 337,
	338, 0, 0, 0, 241, 339, 340, 342, 0, 1031,
	341, 1000, 1001, 0, 961, 0, 343, 1033, 993, 1034,
	344, 345, 346, 1035, 347, 0, 0, 0, 348, 349,
	350, 351, 352, 353, 0, 355, 354, 0, 356, 1028,
	1036, 357, 358, 1037, 0, 359, 360, 361, 984, 983,
	362, 363, 364, 365, 0, 366, 367, 369, 371, 368,
	370, 375, 372, 373, 374, 377, 0, 376, 1038, 378,
	379, 380, 383, 384, 382, 1039, 381, 0, 242, 1040,
	385, 946, 994, 386, 1008, 388, 389, 0, 0, 390,
	0, 0, 0, 392, 393, 394, 0, 0, 395, 396,
	544, 1041, 397, 1042, 1022, 398, 399, 391, 400, 401,
	402, 403, 404, 405, 406, 407, 0, 408, 409, 546,
	547, 1023, 410, 549, 411, 412, 0, 413, 0, 414,
	415, 416, 417, 418, 419, 420, 1004, 422, 421, 423,
	0, 0, 0, 0, 0, 0, 424, 0, 426, 427,
	428, 425, 429, 430, 431, 432, 0, 433, 434, 435,
	1043, 436, 437, 438, 439, 934, 440, 0, 441, 442,
	448, 449, 443, 444, 450, 451, 452, 453, 454, 0,
	456, 457, 455, 458, 459, 460, 987, 461, 445, 446,
	462, 463, 1044, 464, 465, 1002, 0, 466, 0, 467,
	468, 469, 470, 447, 471, 476, 1047, 472, 473, 474,
	475, 1024, 0, 478, 479, 0, 477, 0, 480, 481,
	482, 483, 484, 485, 311, 486, 0, 487, 1014, 1015,
	1016, 1017, 0, 494, 0, 488, 489, 1025, 490, 1026,
	944, 491, 492, 493, 0, 495, 496, 0, 0, 497,
	498, 499, 501, 502, 500, 503, 988, 504, 0, 0,
	505, 506, 507, 561, 1011, 1046, 0, 509, 508, 564,
	0, 912, 0, 1086, 510, 511, 565, 512, 513, 514,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	243, 244, 245, 246, 247, 248, 0, 249, 250, 0,
	0, 0, 0, 950, 990, 0, 0, 948, 0, 251,
	252, 254, 253, 255, 256, 257, 516, 517, 0, 518,
	258, 519, 0, 259, 260, 261, 262, 263, 0, 989,
	0, 264, 520, 521, 522, 0, 265, 266, 996, 0,
	977, 0, 267, 268, 269, 270, 271, 272, 273, 0,
	0, 275, 276, 277, 274, 0, 278, 0, 279, 280,
	281, 0, 282, 1029, 283, 284, 980, 978, 979, 986,
	982, 981, 985, 285, 286, 287, 288, 0, 289, 524,
	525, 0, 293, 290, 291, 0, 294, 292, 0, 295,
	296, 0, 0, 297, 298, 299, 0, 300, 301, 0,
	302, 303, 0, 304, 305, 526, 306, 307, 308, 310,
	312, 309, 313, 314, 315, 316, 1020, 1021, 0, 240,
	0, 0, 0, 0, 0, 317, 318, 319, 529, 0,
	0, 0, 320, 0, 321, 0, 0, 1030, 322, 323,
	530, 531, 324, 325, 0, 326, 1027, 0, 533, 327,
	0, 328, 329, 330, 331, 332, 991, 992, 995, 387,
	1032, 333, 334, 0, 335, 336, 337, 338, 0, 0,
	0, 241, 339, 340, 342, 0, 1031, 341, 537, 538,
	0, 539, 0, 343, 1033, 993, 1034, 344, 345, 346,
	1035, 347, 0, 0, 0, 348, 349, 350, 351, 352,
	353, 1072, 355, 354, 0, 356, 1028, 1036, 357, 358,
	1037, 0, 359, 360, 361, 984, 983, 362, 363, 364,
	365, 0, 366, 367, 369, 371, 368, 370, 375, 372,
	373, 374, 377, 0, 376, 1038, 378, 379, 380, 383,
	384, 382, 1039, 381, 0, 242, 1040, 385, 0, 994,
	386, 543, 388, 389, 0, 0, 390, 0, 0, 1078,
	392, 393, 394, 0, 0, 395, 396, 544, 1041, 397,
	1042, 1022, 398, 399, 391, 400, 401, 402, 403, 404,
	405, 406, 407, 0, 408, 409, 546, 547, 1023, 410,
	549, 411, 412, 0, 413, 0, 414, 415, 416, 417,
	418, 419, 420, 550, 422, 421, 423, 0, 0, 0,
	0, 0, 0, 424, 0, 426, 427, 428, 425, 429,
	430, 431, 432, 0, 433, 434, 435, 1043, 436, 437,
	438, 439, 551, 1080, 0, 441, 442, 448, 449, 443,
	444, 450, 451, 452, 453, 454, 205, 456, 457, 455,
	458, 459, 460, 987, 461, 445, 446, 462, 463, 1044,
	464, 465, 552, 0, 466, 0, 467, 468, 469, 470,
	447, 471, 476, 553, 472, 473, 474, 475, 1024, 0,
	478, 479, 0, 477, 207, 480, 481, 482, 483, 484,
	485, 311, 486, 0, 487, 555, 556, 557, 558, 0,
	494, 0, 488, 489, 1025, 490, 1026, 0, 491, 492,
	493, 0, 495, 496, 0, 0, 497, 498, 499, 501,
	502, 500, 503, 988, 504, 0, 0, 505, 506, 507,
	1418, 562, 563, 0, 509, 508, 564, 0, 1086, 0,
	199, 510, 511, 565, 512, 513, 514, 0, 200, 0,
	0, 0, 0, 0, 0, 243, 244, 245, 246, 247,
	248, 0, 249, 250, 0, 0, 0, 0, 1076, 990,
	1742, 0, 0, 0, 251, 252, 254, 253, 255, 256,
	257, 516, 517, 0, 518, 258, 519, 0, 259, 260,
	261, 262, 263, 0, 989, 0, 264, 520, 521, 522,
	0, 265, 266, 996, 0, 977, 0, 267, 268, 269,
	270, 271, 272, 273, 0, 0, 275, 276, 277, 274,
	0, 278, 0, 279, 280, 281, 0, 282, 1029, 283,
	284, 980, 978, 979, 986, 982, 981, 985, 285, 286,
	287, 288, 0, 289, 524, 525, 0, 293, 290, 291,
	0, 294, 292, 0, 295, 296, 0, 0, 297, 298,
	299, 0, 300, 301, 0, 302, 303, 0, 304, 305,
	526, 306, 307, 308, 310, 312, 309, 313, 314, 315,
	316, 1020, 1021, 0, 240, 0, 0, 0, 0, 0,
	317, 318, 319, 529, 0, 0, 0, 320, 0, 321,
	0, 0, 1030, 322, 323, 530, 531, 324, 325, 0,
	326, 1027, 0, 533, 327, 0, 328, 329, 330, 331,
	332, 991, 992, 995, 387, 1032, 333, 334, 0, 335,
	336, 337, 338, 0, 0, 0, 241, 339, 340, 342,
	0, 1031, 341, 537, 538, 0, 539, 0, 343, 1033,
	993, 1034, 344, 345, 346, 1035, 347, 0, 0, 0,
	348, 349, 350, 351, 352, 353, 1072, 355, 354, 0,
	356, 1028, 1036, 357, 358, 1037, 0, 359, 360, 361,
	984, 983, 362, 363, 364, 365, 0, 366, 367, 369,
	371, 368, 370, 375, 372, 373, 374, 377, 0, 376,
	1038, 378, 379, 380, 383, 384, 382, 1039, 381, 0,
	242, 1040, 385, 0, 994, 386, 543, 388, 389, 0,
	0, 390, 0, 0, 1078, 392, 393, 394, 0, 0,
	395, 396, 544, 1041, 397, 1042, 1022, 398, 399, 391,
	400, 401, 402, 403, 404, 405, 406, 407, 0, 408,
	409, 546, 547, 1023, 410, 549, 411, 412, 0, 413,
	0, 414, 415, 416, 417, 418, 419, 420, 550, 422,
	421, 423, 0, 0, 0, 0, 0, 0, 424, 0,
	426, 427, 428, 425, 429, 430, 431, 432, 0, 433,
	434, 435, 1043, 436, 437, 438, 439, 551, 1080, 0,
	441, 442, 448, 449, 443, 444, 450, 451, 452, 453,
	454, 205, 456, 457, 455, 458, 459, 460, 987, 461,
	445, 446, 462, 463, 1044, 464, 465, 552, 0, 466,
	0, 467, 468, 469, 470, 447, 471, 476, 553, 472,
	473, 474, 475, 1024, 0, 478, 479, 0, 477, 207,
	480, 481, 482, 483, 484, 485, 311, 486, 0, 487,
	555, 556, 557, 558, 0, 494, 0, 488, 489, 1025,
	490, 1026, 0, 491, 492, 493, 0, 495, 496, 0,
	0, 497, 498, 499, 501, 502, 500, 503, 988, 504,
	0, 0, 505, 506, 507, 1418, 562, 563, 0, 509,
	508, 564, 0, 0, 0, 199, 510, 511, 565, 512,
	513, 514, 0, 200, 0, 0, 0, 2848, 0, 1086,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1076, 0, 1742, 243, 244, 245, 246,
	247, 248, 0, 249, 250, 0, 0, 0, 0, 0,
	990, 0, 0, 0, 0, 251, 252, 254, 253, 255,
	256, 257, 516, 517, 0, 518, 258, 519, 0, 259,
	260, 261, 262, 263, 0, 989, 0, 264, 520, 521,
	522, 0, 265, 266, 996, 0, 977, 0, 267, 268,
	269, 270, 271, 272, 273, 0, 0, 275, 276, 277,
	274, 0, 278, 0, 279, 280, 281, 0, 282, 1029,
	283, 284, 980, 978, 979, 986, 982, 981, 985, 285,
	286, 287, 288, 0, 289, 524, 525, 0, 293, 290,
	291, 0, 294, 292, 0, 295, 296, 0, 0, 297,
	298, 299, 0, 300, 301, 0, 302, 303, 0, 304,
	305, 526, 306, 307, 308, 310, 312, 309, 313, 314,
	315, 316, 1020, 1021, 0, 240, 0, 0, 0, 0,
	0, 317, 318, 319, 529, 0, 0, 0, 320, 0,
	321, 0, 0, 1030, 322, 323, 530, 531, 324, 325,
	0, 326, 1027, 0, 533, 327, 0, 328, 329, 330,
	331, 332, 991, 992, 995, 387, 1032, 333, 334, 0,
	335, 336, 337, 338, 0, 0, 0, 241, 339, 340,
	342, 0, 1031, 341, 537, 538, 0, 539, 0, 343,
	1033, 993, 1034, 344, 345, 346, 1035, 347, 0, 0,
	0, 348, 349, 350, 351, 352, 353, 1072, 355, 354,
	0, 356, 1028, 1036, 357, 358, 1037, 0, 359, 360,
	361, 984, 983, 362, 363, 364, 365, 0, 366, 367,
	369, 371, 368, 370, 375, 372, 373, 374, 377, 0,
	376, 1038, 378, 379, 380, 383, 384, 382, 1039, 381,
	0, 242, 1040, 385, 0, 994, 386, 543, 388, 389,
	0, 0, 390, 0, 0, 1078, 392, 393, 394, 0,
	0, 395, 396, 544, 1041, 397, 1042, 1022, 398, 399,
	391, 400, 401, 402, 403, 404, 405, 406, 407, 0,
	408, 409, 546, 547, 1023, 410, 549, 411, 412, 0,
	413, 0, 414, 415, 416, 417, 418, 419, 420, 550,
	422, 421, 423, 0, 0, 0, 0, 0, 0, 424,
	0, 426, 427, 428, 425, 429, 430, 431, 432, 0,
	433, 434, 435, 1043, 436, 437, 438, 439, 551, 1080,
	0, 441, 442, 448, 449, 443, 444, 450, 451, 452,
	453, 454, 0, 456, 457, 455, 458, 459, 460, 987,
	461, 445, 446, 462, 463, 1044, 464, 465, 552, 0,
	466, 0, 467, 468, 469, 470, 447, 471, 476, 553,
	472, 473, 474, 475, 1024, 0, 478, 479, 0, 477,
	0, 480, 481, 482, 483, 484, 485, 311, 486, 0,
	487, 555, 556, 557, 558, 0, 494, 0, 488, 489,
	1025, 490, 1026, 0, 491, 492, 493, 0, 495, 496,
	0, 0, 497, 498, 499, 501, 502, 500, 503, 988,
	504, 0, 0, 505, 506, 507, 561, 562, 563, 0,
	509, 508, 564, 0, 1068, 0, 1086, 510, 511, 565,
	512, 513, 514, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 243, 244, 245, 246, 247, 248, 0,
	249, 250, 0, 0, 1076, 0, 1074, 990, 0, 0,
	0, 0, 251, 252, 254, 253, 255, 256, 257, 516,
	517, 0, 518, 258, 519, 0, 259, 260, 261, 262,
	263, 0, 989, 0, 264, 520, 521, 522, 0, 265,
	266, 996, 0, 977, 0, 267, 268, 269, 270, 271,
	272, 273, 0, 0, 275, 276, 277, 274, 0, 278,
	0, 279, 280, 281, 0, 282, 1029, 283, 284, 980,
	978, 979, 986, 982, 981, 985, 285, 286, 287, 288,
	0, 289, 524, 525, 0, 293, 290, 291, 0, 294,
	292, 0, 295, 296, 0, 0, 297, 298, 299, 0,
	300, 301, 0, 302, 303, 0, 304, 305, 526, 306,
	307, 308, 310, 312, 309, 313, 314, 315, 316, 1020,
	1021, 0, 240, 0, 0, 0, 0, 0, 317, 318,
	319, 529, 0, 0, 0, 320, 0, 321, 0, 0,
	1030, 322, 323, 530, 531, 324, 325, 0, 326, 1027,
	0, 533, 327, 0, 328, 329, 330, 331, 332, 991,
	992, 995, 387, 1032, 333, 334, 0, 335, 336, 337,
	338, 0, 0, 0, 241, 339, 340, 342, 0, 1031,
	341, 537, 538, 0, 539, 0, 343, 1033, 993, 1034,
	344, 345, 346, 1035, 347, 0, 0, 0, 348, 349,
	350, 351, 352, 353, 1072, 355, 354, 0, 356, 1028,
	1036, 357, 358, 1037, 0, 359, 360, 361, 984, 983,
	362, 363, 364, 365, 0, 366, 367, 369, 371, 368,
	370, 375, 372, 373, 374, 377, 0, 376, 1038, 378,
	379, 380, 383, 384, 382, 1039, 381, 0, 242, 1040,
	385, 0, 994, 386, 543, 388, 389, 0, 0, 390,
	0, 0, 1078, 392, 393, 394, 0, 0, 395, 396,
	544, 1041, 397, 1042, 1022, 398, 399, 391, 400, 401,
	402, 403, 404, 405, 406, 407, 0, 408, 409, 546,
	547, 1023, 410, 549, 411, 412, 0, 413, 0, 414,
	415, 416, 417, 418, 419, 420, 550, 422, 421, 423,
	0, 0, 0, 0, 0, 0, 424, 0, 426, 427,
	428, 425, 429, 430, 431, 432, 0, 433, 434, 435,
	1043, 436, 437, 438, 439, 551, 1080, 0, 441, 442,
	448, 449, 443, 444, 450, 451, 452, 453, 454, 0,
	456, 457, 455, 458, 459, 460, 987, 461, 445, 446,
	462, 463, 1044, 464, 465, 552, 0, 466, 0, 467,
	468, 469, 470, 447, 471, 476, 553, 472, 473, 474,
	475, 1024, 0, 478, 479, 0, 477, 0, 480, 481,
	482, 483, 484, 485, 311, 486, 0, 487, 555, 556,
	557, 558, 0, 494, 0, 488, 489, 1025, 490, 1026,
	0, 491, 492, 493, 0, 495, 496, 0, 0, 497,
	498, 499, 501, 502, 500, 503, 988, 504, 0, 0,
	505, 506, 507, 561, 562, 563, 0, 509, 508, 564,
	0, 1086, 0, 0, 510, 511, 565, 512, 513, 514,
	0, 0, 0, 0, 0, 0, 0, 0, 243, 244,
	245, 246, 247, 248, 0, 249, 250, 0, 0, 0,
	0, 1076, 990, 1074, 0, 0, 0, 251, 252, 254,
	253, 255, 256, 257, 516, 517, 0, 518, 258, 519,
	0, 259, 260, 261, 262, 263, 0, 989, 0, 264,
	520, 521, 522, 0, 265, 266, 996, 0, 977, 0,
	267, 268, 269, 270, 271, 272, 273, 0, 0, 275,
	276, 277, 274, 0, 278, 0, 279, 280, 281, 0,
	282, 1029, 283, 284, 980, 978, 979, 986, 982, 981,
	985, 285, 286, 287, 288, 0, 289, 524, 525, 0,
	293, 290, 291, 0, 294, 292, 0, 295, 296, 0,
	0, 297, 298, 299, 0, 300, 301, 0, 302, 303,
	0, 304, 305, 526, 306, 307, 308, 310, 312, 309,
	313, 314, 315, 316, 1020, 1021, 0, 240, 0, 0,
	0, 0, 0, 317, 318, 319, 529, 0, 0, 0,
	320, 0, 321, 0, 0, 1030, 322, 323, 530, 531,
	324, 325, 0, 326, 1027, 0, 533, 327, 0, 328,
	329, 330, 331, 332, 991, 992, 995, 387, 1032, 333,
	334, 0, 335, 336, 337, 338, 0, 0, 0, 241,
	339, 340, 342, 0, 1031, 341, 537, 538, 0, 539,
	0, 343, 1033, 993, 1034, 344, 345, 346, 1035, 347,
	0, 0, 0, 348, 349, 350, 351, 352, 353, 1072,
	355, 354, 0, 356, 1028, 1036, 357, 358, 1037, 0,
	359, 360, 361, 984, 983, 362, 363, 364, 365, 0,
	366, 367, 369, 371, 368, 370, 375, 372, 373, 374,
	377, 0, 376, 1038, 378, 379, 380, 383, 384, 382,
	1039, 381, 0, 242, 1040, 385, 0, 994, 386, 543,
	388, 389, 0, 0, 390, 0, 0, 1078, 392, 393,
	394, 0, 0, 395, 396, 544, 1041, 397, 1042, 1022,
	398, 399, 391, 400, 401, 402, 403, 404, 405, 406,
	407, 0, 408, 409, 546, 547, 1023, 410, 549, 411,
	412, 0, 413, 0, 414, 415, 416, 417, 418, 419,
	420, 550, 422, 421, 423, 0, 0, 0, 0, 0,
	0, 424, 0, 426, 427, 428, 425, 429, 430, 431,
	432, 0, 433, 434, 435, 1043, 436, 437, 438, 439,
	551, 1080, 0, 441, 442, 448, 449, 443, 444, 450,
	451, 452, 453, 454, 0, 456, 457, 455, 458, 459,
	460, 987, 461, 445, 446, 462, 463, 1044, 464, 465,
	552, 0, 466, 0, 467, 468, 469, 470, 447, 471,
	476, 553, 472, 473, 474, 475, 1024, 0, 478, 479,
	0, 477, 0, 480, 481, 482, 483, 484, 485, 311,
	486, 0, 487, 555, 556, 557, 558, 0, 494, 0,
	488, 489, 1025, 490, 1026, 0, 491, 492, 493, 0,
	495, 496, 0, 0, 497, 498, 499, 501, 502, 500,
	503, 988, 504, 0, 0, 505, 506, 507, 561, 562,
	563, 0, 509, 508, 564, 0, 1086, 0, 0, 510,
	511, 565, 512, 513, 514, 0, 0, 0, 0, 0,
	0, 0, 0, 243, 244, 245, 246, 247, 248, 0,
	249, 250, 0, 0, 0, 0, 1076, 990, 1074, 0,
	0, 0, 251, 252, 254, 253, 255, 256, 257, 516,
	517, 0, 518, 258, 519, 0, 259, 260, 261, 262,
	263, 0, 989, 0, 264, 520, 521, 522, 0, 265,
	266, 996, 0, 977, 0, 267, 268, 269, 270, 271,
	272, 273, 0, 0, 275, 276, 277, 274, 0, 278,
	0, 279, 280, 281, 0, 282, 1029, 283, 284, 980,
	978, 979, 986, 982, 981, 985, 285, 286, 287, 288,
	0, 289, 524, 525, 0, 293, 290, 291, 0, 294,
	292, 0, 295, 296, 0, 0, 297, 298, 299, 0,
	300, 301, 0, 302, 303, 0, 304, 305, 526, 306,
	307, 308, 310, 312, 309, 313, 314, 315, 316, 1020,
	1021, 0, 240, 0, 0, 0, 0, 0, 317, 318,
	319, 529, 0, 0, 0, 320, 0, 321, 0, 0,
	1030, 322, 323, 530, 531, 324, 325, 0, 326, 1027,
	0, 533, 327, 0, 328, 329, 330, 331, 332, 991,
	992, 995, 387, 1032, 333, 334, 0, 335, 336, 337,
	338, 0, 0, 0, 241, 339, 340, 342, 0, 1031,
	341, 537, 538, 0, 539, 0, 343, 1033, 993, 1034,
	344, 345, 346, 1035, 347, 0, 0, 0, 348, 349,
	350, 351, 352, 353, 0, 355, 354, 0, 356, 1028,
	1036, 357, 358, 1037, 0, 359, 360, 361, 984, 983,
	362, 363, 364, 365, 0, 366, 367, 369, 371, 368,
	370, 375, 372, 373, 374, 377, 0, 376, 1038, 378,
	379, 380, 383, 384, 382, 1039, 381, 0, 242, 1040,
	385, 0, 994, 386, 543, 388, 389, 0, 0, 390,
	0, 0, 0, 392, 393, 394, 0, 0, 395, 396,
	544, 1041, 397, 1042, 1022, 398, 399, 391, 400, 401,
	402, 403, 404, 405, 406, 407, 0, 408, 409, 546,
	547, 1023, 410, 549, 411, 412, 0, 413, 0, 414,
	415, 416, 417, 418, 419, 420, 550, 422, 421, 423,
	0, 0, 0, 0, 0, 0, 424, 0, 426, 427,
	428, 425, 429, 430, 431, 432, 0, 433, 434, 435,
	1043, 436, 437, 438, 439, 551, 1080, 0, 441, 442,
	448, 449, 443, 444, 450, 451, 452, 453, 454, 0,
	456, 457, 455, 458, 459, 460, 987, 461, 445, 446,
	462, 463, 1044, 464, 465, 552, 0, 466, 0, 467,
	468, 469, 470, 447, 471, 476, 553, 472, 473, 474,
	475, 1024, 0, 478, 479, 0, 477, 0, 480, 481,
	482, 483, 484, 485, 311, 486, 0, 487, 555, 556,
	557, 558, 0, 494, 0, 488, 489, 1025, 490, 1026,
	0, 491, 492, 493, 0, 495, 496, 0, 0, 497,
	498, 499, 501, 502, 500, 503, 988, 504, 0, 0,
	505, 506, 507, 561, 562, 563, 0, 509, 508, 564,
	0, 912, 0, 1270, 510, 511, 565, 512, 513, 514,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	243, 244, 245, 246, 247, 248, 0, 249, 250, 0,
	0, 0, 0, 1641, 515, 0, 0, 0, 0, 251,
	252, 254, 253, 255, 256, 257, 516, 517, 0, 518,
	258, 519, 0, 259, 260, 261, 262, 263, 0, 0,
	0, 264, 520, 521, 522, 0, 265, 266, 523, 0,
	1236, 0, 267, 268, 269, 270, 271, 272, 273, 0,
	0, 275, 276, 277, 274, 0, 278, 0, 279, 280,
	281, 0, 282, 1029, 283, 284, 0, 0, 0, 0,
	0, 0, 0, 285, 286, 287, 288, 0, 289, 524,
	525, 0, 293, 290, 291, 0, 294, 292, 0, 295,
	296, 0, 0, 297, 298, 299, 0, 300, 301, 0,
	302, 303, 0, 304, 305, 526, 306, 307, 308, 310,
	312, 309, 313, 314, 315, 316, 527, 528, 0, 240,
	0, 0, 0, 0, 0, 317, 318, 319, 529, 0,
	0, 0, 320, 0, 321, 0, 0, 1030, 322, 323,
	530, 531, 324, 325, 0, 326, 532, 0, 533, 327,
	0, 328, 329, 330, 331, 332, 534, 535, 536, 387,
	1032, 333, 334, 0, 335, 336, 337, 338, 0, 0,
	0, 0, 339, 340, 342, 0, 1031, 341, 537, 538,
	0, 539, 0, 343, 1033, 540, 1034, 344, 345, 346,
	1035, 347, 0, 0, 0, 348, 349, 350, 351, 352,
	353, 0, 355, 354, 0, 356, 541, 1036, 357, 358,
	1037, 0, 359, 360, 361, 0, 0, 362, 363, 364,
	365, 0, 366, 367, 369, 371, 368, 370, 375, 372,
	373, 374, 377, 0, 376, 1038, 378, 379, 380, 383,
	384, 382, 1039, 381, 0, 0, 1040, 385, 0, 542,
	386, 543, 388, 389, 0, 0, 390, 0, 0, 0,
	392, 393, 394, 0, 0, 395, 396, 544, 1041, 397,
	1042, 545, 398, 399, 391, 400, 401, 402, 403, 404,
	405, 406, 407, 0, 408, 409, 546, 547, 548, 410,
	549, 411, 412, 0, 413, 0, 414, 415, 416, 417,
	418, 419, 420, 550, 422, 421, 423, 0, 0, 0,
	0, 0, 0, 424, 0, 426, 427, 428, 425, 429,
	430, 431, 432, 0, 433, 434, 435, 1043, 436, 437,
	438, 439, 551, 440, 0, 441, 442, 448, 449, 443,
	444, 450, 451, 452, 453, 454, 205, 456, 457, 455,
	458, 459, 460, 0, 461, 445, 446, 462, 463, 1044,
	464, 465, 552, 0, 466, 0, 467, 468, 469, 470,
	447, 471, 476, 553, 472, 473, 474, 475, 554, 0,
	478, 479, 0, 477, 207, 480, 481, 482, 483, 484,
	485, 311, 486, 0, 487, 555, 556, 557, 558, 0,
	494, 0, 488, 489, 559, 490, 560, 0, 491, 492,
	493, 0, 495, 496, 0, 0, 497, 498, 499, 501,
	502, 500, 503, 0, 504, 0, 0, 505, 506, 507,
	1418, 562, 563, 0, 509, 508, 564, 0, 0, 0,
	199, 510, 511, 565, 512, 513, 514, 0, 200, 0,
	0, 0, 1415, 0, 1270, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	171, 243, 244, 245, 246, 247, 248, 0, 249, 250,
	0, 0, 0, 0, 0, 515, 0, 0, 0, 0,
	251, 252, 254, 253, 255, 256, 257, 516, 517, 0,
	518, 258, 519, 0, 259, 260, 261, 262, 263, 0,
	0, 0, 264, 520, 521, 522, 0, 265, 266, 523,
	0, 1236, 0, 267, 268, 269, 270, 271, 272, 273,
	0, 0, 275, 276, 277, 274, 0, 278, 0, 279,
	280, 281, 0, 282, 1029, 283, 284, 0, 0, 0,
	0, 0, 0, 0, 285, 286, 287, 288, 0, 289,
	524, 525, 0, 293, 290, 291, 0, 294, 292, 0,
	295, 296, 0, 0, 297, 298, 299, 0, 300, 301,
	0, 302, 303, 0, 304, 305, 526, 306, 307, 308,
	310, 312, 309, 313, 314, 315, 316, 527, 528, 0,
	240, 0, 0, 0, 0, 0, 317, 318, 319, 529,
	0, 0, 0, 320, 0, 321, 0, 0, 1030, 322,
	323, 530, 531, 324, 325, 0, 326, 532, 0, 533,
	327, 0, 328, 329, 330, 331, 332, 534, 535, 536,
	387, 1032, 333, 334, 0, 335, 336, 337, 338, 0,
	0, 0, 0, 339, 340, 342, 0, 1031, 341, 537,
	538, 0, 539, 0, 343, 1033, 540, 1034, 344, 345,
	346, 1035, 347, 0, 0, 0, 348, 349, 350, 351,
	352, 353, 0, 355, 354, 0, 356, 541, 1036, 357,
	358, 1037, 0, 359, 360, 361, 0, 0, 362, 363,
	364, 365, 0, 366, 367, 369, 371, 368, 370, 375,
	372, 373, 374, 377, 0, 376, 1038, 378, 379, 380,
	383, 384, 382, 1039, 381, 0, 0, 1040, 385, 0,
	542, 386, 543, 388, 389, 0, 0, 390, 0, 0,
	0, 392, 393, 394, 0, 0, 395, 396, 544, 1041,
	397, 1042, 545, 398, 399, 391, 400, 401, 402, 403,
	404, 405, 406, 407, 0, 408, 409, 546, 547, 548,
	410, 549, 411, 412, 0, 413, 0, 414, 415, 416,
	417, 418, 419, 420, 550, 422, 421, 423, 0, 0,
	0, 0, 0, 0, 424, 0, 426, 427, 428, 425,
	429, 430, 431, 432, 0, 433, 434, 435, 1043, 436,
	437, 438, 439, 551, 440, 0, 441, 442, 448, 449,
	443, 444, 450, 451, 452, 453, 454, 205, 456, 457,
	455, 458, 459, 460, 0, 461, 445, 446, 462, 463,
	1044, 464, 465, 552, 0, 466, 0, 467, 468, 469,
	470, 447, 471, 476, 553, 472, 473, 474, 475, 554,
	0, 478, 479, 0, 477, 207, 480, 481, 482, 483,
	484, 485, 311, 486, 0, 487, 555, 556, 557, 558,
	0, 494, 0, 488, 489, 559, 490, 560, 0, 491,
	492, 493, 0, 495, 496, 0, 0, 497, 498, 499,
	501, 502, 500, 503, 0, 504, 0, 0, 505, 506,
	507, 1418, 562, 563, 0, 509, 508, 564, 0, 0,
	0, 199, 510, 511, 565, 512, 513, 514, 0, 200,
	0, 0, 0, 0, 0, 1270, 1269, 0, 0, 0,
	0, 1267, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 171, 243, 244, 245, 246, 247, 248, 0, 249,
	250, 0, 0, 0, 0, 0, 515, 0, 0, 0,
	0, 251, 252, 254, 253, 255, 256, 257, 516, 517,
	0, 518, 258, 519, 0, 259, 260, 261, 262, 263,
	0, 0, 0, 264, 520, 521, 522, 0, 265, 266,
	523, 0, 1236, 0, 267, 268, 269, 270, 271, 272,
	273, 0, 0, 275, 276, 277, 274, 0, 278, 0,
	279, 280, 281, 0, 282, 1029, 283, 284, 0, 0,
	0, 0, 0, 0, 0, 285, 286, 287, 288, 0,
	289, 524, 525, 0, 293, 290, 291, 0, 294, 292,
	0, 295, 296, 0, 0, 297, 298, 299, 0, 300,
	301, 0, 302, 303, 0, 304, 305, 526, 306, 307,
	308, 310, 312, 309, 313, 314, 315, 316, 527, 528,
	0, 240, 0, 0, 0, 0, 0, 317, 318, 319,
	529, 0, 0, 0, 320, 0, 321, 0, 0, 1030,
	322, 323, 530, 531, 324, 325, 0, 326, 532, 0,
	533, 327, 0, 328, 329, 330, 331, 332, 534, 535,
	536, 387, 1032, 333, 334, 0, 335, 336, 337, 338,
	0, 0, 0, 0, 339, 340, 342, 0, 1031, 341,
	537, 538, 0, 539, 0, 343, 1033, 540, 1034, 344,
	345, 346, 1035, 347, 0, 0, 0, 348, 349, 350,
	351, 352, 353, 0, 355, 354, 0, 356, 541, 1036,
	357, 358, 1037, 0, 359, 360, 361, 0, 0, 362,
	363, 364, 365, 0, 366, 367, 369, 371, 368, 370,
	375, 372, 373, 374, 377, 0, 376, 1038, 378, 379,
	380, 383, 384, 382, 1039, 381, 0, 0, 1040, 385,
	0, 542, 386, 543, 388, 389, 0, 0, 390, 0,
	0, 0, 392, 393, 394, 0, 0, 395, 396, 544,
	1041, 397, 1042, 545, 398, 399, 391, 400, 401, 402,
	403, 404, 405, 406, 407, 0, 408, 409, 546, 547,
	548, 410, 549, 411, 412, 0, 413, 0, 414, 415,
	416, 417, 418, 419, 420, 550, 422, 421, 423, 0,
	0, 0, 0, 0, 0, 424, 0, 426, 427, 428,
	425, 429, 430, 431, 432, 0, 433, 434, 435, 1043,
	436, 437, 438, 439, 551, 440, 0, 441, 442, 448,
	449, 443, 444, 450, 451, 452, 453, 454, 0, 456,
	457, 455, 458, 459, 460, 0, 461, 445, 446, 462,
	463, 1044, 464, 465, 552, 0, 466, 0, 467, 468,
	469, 470, 447, 471, 476, 553, 472, 473, 474, 475,
	554, 0, 478, 479, 0, 477, 0, 480, 481, 482,
	483, 484, 485, 311, 486, 0, 487, 555, 556, 557,
	558, 0, 494, 0, 488, 489, 559, 490, 560, 0,
	491, 492, 493, 0, 495, 496, 0, 0, 497, 498,
	499, 501, 502, 500, 503, 0, 504, 0, 0, 505,
	506, 507, 561, 562, 563, 0, 509, 508, 564, 0,
	0, 0, 0, 510, 511, 565, 512, 513, 514, 1270,
	1269, 0, 0, 0, 0, 1267, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 243, 244, 245, 246,
	247, 248, 1440, 249, 250, 0, 0, 0, 0, 0,
	515, 0, 0, 0, 0, 251, 252, 254, 253, 255,
	256, 257, 516, 517, 0, 518, 258, 519, 0, 259,
	260, 261, 262, 263, 0, 0, 0, 264, 520, 521,
	522, 0, 265, 266, 523, 0, 1236, 0, 267, 268,
	269, 270, 271, 272, 273, 0, 0, 275, 276, 277,
	274, 0, 278, 0, 279, 280, 281, 0, 282, 1029,
	283, 284, 0, 0, 0, 0, 0, 0, 0, 285,
	286, 287, 288, 0, 289, 524, 525, 0, 293, 290,
	291, 0, 294, 292, 0, 295, 296, 0, 0, 297,
	298, 299, 0, 300, 301, 0, 302, 303, 0, 304,
	305, 526, 306, 307, 308, 310, 312, 309, 313, 314,
	315, 316, 527, 528, 0, 240, 0, 0, 0, 0,
	0, 317, 318, 319, 529, 0, 0, 0, 320, 0,
	321, 0, 0, 1030, 322, 323, 530, 531, 324, 325,
	0, 326, 532, 0, 533, 327, 0, 328, 329, 330,
	331, 332, 534, 535, 536, 387, 1032, 333, 334, 0,
	335, 336, 337, 338, 0, 0, 0, 0, 339, 340,
	342, 0, 1031, 341, 537, 538, 0, 539, 0, 343,
	1033, 540, 1034, 344, 345, 346, 1035, 347, 0, 0,
	0, 348, 349, 350, 351, 352, 353, 0, 355, 354,
	0, 356, 541, 1036, 357, 358, 1037, 0, 359, 360,
	361, 0, 0, 362, 363, 364, 365, 0, 366, 367,
	369, 371, 368, 370, 375, 372, 373, 374, 377, 0,
	376, 1038, 378, 379, 380, 383, 384, 382, 1039, 381,
	0, 0, 1040, 385, 0, 542, 386, 543, 388, 389,
	0, 0, 390, 0, 0, 0, 392, 393, 394, 0,
	0, 395, 396, 544, 1041, 397, 1042, 545, 398, 399,
	391, 400, 401, 402, 403, 404, 405, 406, 407, 0,
	408, 409, 546, 547, 548, 410, 549, 411, 412, 0,
	413, 0, 414, 415, 416, 417, 418, 419, 420, 550,
	422, 421, 423, 0, 0, 0, 0, 0, 0, 424,
	0, 426, 427, 428, 425, 429, 430, 431, 432, 0,
	433, 434, 435, 1043, 436, 437, 438, 439, 551, 440,
	0, 441, 442, 448, 449, 443, 444, 450, 451, 452,
	453, 454, 0, 456, 457, 455, 458, 459, 460, 0,
	461, 445, 446, 462, 463, 1044, 464, 465, 552, 0,
	466, 0, 467, 468, 469, 470, 447, 471, 476, 553,
	472, 473, 474, 475, 554, 0, 478, 479, 0, 477,
	0, 480, 481, 482, 483, 484, 485, 311, 486, 0,
	487, 555, 556, 557, 558, 0, 494, 0, 488, 489,
	559, 490, 560, 0, 491, 492, 493, 0, 495, 496,
	0, 0, 497, 498, 499, 501, 502, 500, 503, 0,
	504, 0, 0, 505, 506, 507, 561, 562, 563, 0,
	509, 508, 564, 0, 0, 0, 0, 510, 511, 565,
	512, 513, 514, 1270, 1269, 0, 0, 0, 0, 1267,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	243, 244, 245, 246, 247, 248, 3081, 249, 250, 0,
	0, 0, 0, 0, 515, 0, 0, 0, 0, 251,
	252, 254, 253, 255, 256, 257, 516, 517, 0, 518,
	258, 519, 0, 259, 260, 261, 262, 263, 0, 0,
	0, 264, 520, 521, 522, 0, 265, 266, 523, 0,
	1236, 0, 267, 268, 269, 270, 271, 272, 273, 0,
	0, 275, 276, 277, 274, 0, 278, 0, 279, 280,
	281, 0, 282, 1029, 283, 284, 0, 0, 0, 0,
	0, 0, 0, 285, 286, 287, 288, 0, 289, 524,
	525, 0, 293, 290, 291, 0, 294, 292, 0, 295,
	296, 0, 0, 297, 298, 299, 0, 300, 301, 0,
	302, 303, 0, 304, 305, 526, 306, 307, 308, 310,
	312, 309, 313, 314, 315, 316, 527, 528, 0, 240,
	0, 0, 0, 0, 0, 317, 318, 319, 529, 0,
	0, 0, 320, 0, 321, 0, 0, 1030, 322, 323,
	530, 531, 324, 325, 0, 326, 532, 0, 533, 327,
	0, 328, 329, 330, 331, 332, 534, 535, 536, 387,
	1032, 333, 334, 0, 335, 336, 337, 338, 0, 0,
	0, 0, 339, 340, 342, 0, 1031, 341, 537, 538,
	0, 539, 0, 343, 1033, 540, 1034, 344, 345, 346,
	1035, 347, 0, 0, 0, 348, 349, 350, 351, 352,
	353, 0, 355, 354, 0, 356, 541, 1036, 357, 358,
	1037, 0, 359, 360, 361, 0, 0, 362, 363, 364,
	365, 0, 366, 367, 369, 371, 368, 370, 375, 372,
	373, 374, 377, 0, 376, 1038, 378, 379, 380, 383,
	384, 382, 1039, 381, 0, 0, 1040, 385, 0, 542,
	386, 543, 388, 389, 0, 0, 390, 0, 0, 0,
	392, 393, 394, 0, 0, 395, 396, 544, 1041, 397,
	1042, 545, 398, 399, 391, 400, 401, 402, 403, 404,
	405, 406, 407, 0, 408, 409, 546, 547, 548, 410,
	549, 411, 412, 0, 413, 0, 414, 415, 416, 417,
	418, 419, 420, 550, 422, 421, 423, 0, 0, 0,
	0, 0, 0, 424, 0, 426, 427, 428, 425, 429,
	430, 431, 432, 0, 433, 434, 435, 1043, 436, 437,
	438, 439, 551, 440, 0, 441, 442, 448, 449, 443,
	444, 450, 451, 452, 453, 454, 0, 456, 457, 455,
	458, 459, 460, 0, 461, 445, 446, 462, 463, 1044,
	464, 465, 552, 0, 466, 0, 467, 468, 469, 470,
	447, 471, 476, 553, 472, 473, 474, 475, 554, 0,
	478, 479, 0, 477, 0, 480, 481, 482, 483, 484,
	485, 311, 486, 0, 487, 555, 556, 557, 558, 0,
	494, 0, 488, 489, 559, 490, 560, 0, 491, 492,
	493, 0, 495, 496, 0, 0, 497, 498, 499, 501,
	502, 500, 503, 0, 504, 0, 0, 505, 506, 507,
	561, 562, 563, 0, 509, 508, 564, 1086, 0, 0,
	0, 510, 511, 565, 512, 513, 514, 0, 0, 0,
	0, 0, 0, 0, 243, 244, 245, 246, 247, 248,
	0, 249, 250, 0, 0, 0, 0, 0, 990, 0,
	1424, 0, 0, 251, 252, 254, 253, 255, 256, 257,
	516, 517, 0, 518, 258, 519, 0, 259, 260, 261,
	262, 263, 0, 989, 0, 264, 520, 521, 522, 0,
	265, 266, 996, 0, 977, 0, 267, 268, 269, 270,
	271, 272, 273, 0, 0, 275, 276, 277, 274, 0,
	278, 0, 279, 280, 281, 0, 282, 1029, 283, 284,
	980, 978, 979, 986, 982, 981, 985, 285, 286, 287,
	288, 0, 289, 524, 525, 0, 293, 290, 291, 0,
	294, 292, 0, 295, 296, 0, 0, 297, 298, 299,
	0, 300, 301, 0, 302, 303, 0, 304, 305, 526,
	306, 307, 308, 310, 312, 309, 313, 314, 315, 316,
	1020, 1021, 0, 240, 0, 0, 0, 0, 0, 317,
	318, 319, 529, 0, 0, 0, 320, 0, 321, 0,
	0, 1030, 322, 323, 530, 531, 324, 325, 0, 326,
	1027, 0, 533, 327, 0, 328, 329, 330, 331, 332,
	991, 992, 995, 387, 1032, 333, 334, 0, 335, 336,
	337, 338, 0, 0, 0, 241, 339, 340, 342, 0,
	1031, 341, 537, 538, 0, 539, 0, 343, 1033, 993,
	1034, 344, 345, 346, 1035, 347, 0, 0, 0, 348,
	349, 350, 351, 352, 353, 0, 355, 354, 0, 356,
	1028, 1036, 357, 358, 1037, 0, 359, 360, 361, 984,
	983, 362, 363, 364, 365, 0, 366, 367, 369, 371,
	368, 370, 375, 372, 373, 374, 377, 0, 376, 1038,
	378, 379, 380, 383, 384, 382, 1039, 381, 0, 242,
	1040, 385, 0, 994, 386, 543, 388, 389, 0, 0,
	390, 0, 0, 0, 392, 393, 394, 0, 0, 395,
	396, 544, 1041, 397, 1042, 1022, 398, 399, 391, 400,
	401, 402, 403, 404, 405, 406, 407, 0, 408, 409,
	546, 547, 1023, 410, 549, 411, 412, 0, 413, 0,
	414, 415, 416, 417, 418, 419, 420, 550, 422, 421,
	423, 0, 0, 0, 0, 0, 0, 424, 0, 426,
	427, 428, 425, 429, 430, 431, 432, 0, 433, 434,
	435, 1043, 436, 437, 438, 439, 551, 440, 0, 441,
	442, 448, 449, 443, 444, 450, 451, 452, 453, 454,
	0, 456, 457, 455, 458, 459, 460, 987, 461, 445,
	446, 462, 463, 1044, 464, 465, 552, 0, 466, 0,
	467, 468, 469, 470, 447, 471, 476, 553, 472, 473,
	474, 475, 1024, 0, 478, 479, 0, 477, 0, 480,
	481, 482, 483, 484, 485, 311, 486, 0, 487, 555,
	556, 557, 558, 0, 494, 0, 488, 489, 1025, 490,
	1026, 0, 491, 492, 493, 0, 495, 496, 0, 0,
	497, 498, 499, 501, 502, 500, 503, 988, 504, 0,
	0, 505, 506, 507, 561, 562, 563, 0, 509, 508,
	564, 912, 0, 237, 0, 510, 511, 565, 512, 513,
	514, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	243, 244, 245, 246, 247, 248, 0, 249, 250, 0,
	0, 0, 0, 0, 515, 0, 0, 0, 0, 251,
	252, 254, 253, 255, 256, 257, 516, 517, 0, 518,
	258, 519, 0, 259, 260, 261, 262, 263, 0, 0,
	0, 264, 520, 521, 522, 0, 265, 266, 523, 0,
	0, 0, 267, 268, 269, 270, 271, 272, 273, 0,
	0, 275, 276, 277, 274, 0, 278, 0, 279, 280,
	281, 0, 282, 0, 283, 284, 0, 0, 0, 0,
	0, 0, 0, 285, 286, 287, 288, 0, 289, 524,
	525, 0, 293, 290, 291, 0, 294, 292, 0, 295,
	296, 0, 0, 297, 298, 299, 0, 300, 301, 0,
	302, 303, 0, 304, 305, 526, 306, 307, 308, 310,
	312, 309, 313, 314, 315, 316, 527, 528, 0, 0,
	0, 0, 0, 0, 0, 317, 318, 319, 529, 0,
	0, 0, 320, 0, 321, 0, 0, 0, 322, 323,
	530, 531, 324, 325, 0, 326, 532, 0, 533, 327,
	0, 328, 329, 330, 331, 332, 534, 535, 536, 387,
	0, 333, 334, 0, 335, 336, 337, 338, 0, 0,
	0, 0, 339, 340, 342, 0, 0, 341, 537, 538,
	0, 539, 0, 343, 0, 540, 0, 344, 345, 346,
	0, 347, 0, 0, 0, 348, 349, 350, 351, 352,
	353, 0, 355, 354, 0, 356, 541, 0, 357, 358,
	0, 0, 359, 360, 361, 0, 0, 362, 363, 364,
	365, 0, 366, 367, 369, 371, 368, 370, 375, 372,
	373, 374, 377, 0, 376, 0, 378, 379, 380, 383,
	384, 382, 0, 381, 0, 0, 0, 385, 0, 542,
	386, 543, 388, 389, 0, 0, 390, 0, 0, 0,
	392, 393, 394, 0, 0, 395, 396, 544, 0, 397,
	0, 545, 398, 399, 391, 400, 401, 402, 403, 404,
	405, 406, 407, 0, 408, 409, 546, 547, 548, 410,
	549, 411, 412, 0, 413, 0, 414, 415, 416, 417,
	418, 419, 420, 550, 422, 421, 423, 0, 0, 0,
	0, 0, 0, 424, 0, 426, 427, 428, 425, 429,
	430, 431, 432, 0, 433, 434, 435, 0, 436, 437,
	438, 439, 551, 440, 0, 441, 442, 448, 449, 443,
	444, 450, 451, 452, 453, 454, 205, 456, 457, 455,
	458, 459, 460, 0, 461, 445, 446, 462, 463, 0,
	464, 465, 552, 0, 466, 0, 467, 468, 469, 470,
	447, 471, 476, 553, 472, 473, 474, 475, 554, 0,
	478, 479, 0, 477, 207, 480, 481, 482, 483, 484,
	485, 311, 486, 0, 487, 555, 556, 557, 558, 0,
	494, 0, 488, 489, 559, 490, 560, 0, 491, 492,
	493, 0, 495, 496, 0, 0, 497, 498, 499, 501,
	502, 500, 503, 0, 504, 0, 0, 505, 506, 507,
	1418, 562, 563, 0, 509, 508, 564, 237, 0, 0,
	199, 510, 511, 565, 512, 513, 514, 0, 200, 0,
	0, 0, 0, 0, 243, 244, 245, 246, 247, 248,
	0, 249, 250, 0, 0, 0, 0, 0, 515, 0,
	171, 0, 0, 251, 252, 254, 253, 255, 256, 257,
	516, 517, 0, 518, 258, 519, 0, 259, 260, 261,
	262, 263, 0, 0, 0, 264, 520, 521, 522, 0,
	265, 266, 523, 0, 0, 0, 267, 268, 269, 270,
	271, 272, 273, 0, 0, 275, 276, 277, 274, 0,
	278, 0, 279, 280, 281, 0, 282, 0, 283, 284,
	0, 0, 0, 0, 0, 0, 0, 285, 286, 287,
	288, 0, 289, 524, 525, 0, 293, 290, 291, 0,
	294, 292, 0, 295, 296, 0, 0, 297, 298, 299,
	0, 300, 301, 0, 302, 303, 0, 304, 305, 526,
	306, 307, 308, 310, 312, 309, 313, 314, 315, 316,
	527, 528, 0, 240, 0, 0, 0, 0, 0, 317,
	318, 319, 529, 0, 0, 0, 320, 0, 321, 0,
	0, 0, 322, 323, 530, 531, 324, 325, 0, 326,
	532, 0, 533, 327, 0, 328, 329, 330, 331, 332,
	534, 535, 536, 387, 0, 333, 334, 0, 335, 336,
	337, 338, 0, 0, 0, 241, 339, 340, 342, 0,
	0, 341, 537, 538, 0, 539, 0, 343, 0, 540,
	0, 344, 345, 346, 0, 347, 0, 0, 0, 348,
	349, 350, 351, 352, 353, 0, 355, 354, 0, 356,
	541, 0, 357, 358, 0, 0, 359, 360, 361, 0,
	0, 362, 363, 364, 365, 0, 366, 367, 369, 371,
	368, 370, 375, 372, 373, 374, 377, 0, 376, 0,
	378, 379, 380, 383, 384, 382, 0, 381, 0, 242,
	0, 385, 0, 542, 386, 543, 388, 389, 0, 0,
	390, 0, 0, 0, 392, 393, 394, 0, 0, 395,
	396, 544, 0, 397, 0, 545, 398, 399, 391, 400,
	401, 402, 403, 404, 405, 406, 407, 0, 408, 409,
	546, 547, 548, 410, 549, 411, 412, 0, 413, 0,
	414, 415, 416, 417, 418, 419, 420, 550, 422, 421,
	423, 0, 0, 0, 0, 0, 0, 424, 0, 426,
	427, 428, 425, 429, 430, 431, 432, 0, 433, 434,
	435, 0, 436, 437, 438, 439, 551, 440, 0, 441,
	442, 448, 449, 443, 444, 450, 451, 452, 453, 454,
	0, 456, 457, 455, 458, 459, 460, 0, 461, 445,
	446, 462, 463, 0, 464, 465, 552, 0, 466, 0,
	467, 468, 469, 470, 447, 471, 476, 553, 472, 473,
	474, 475, 554, 0, 478, 479, 0, 477, 0, 480,
	481, 482, 483, 484, 485, 311, 486, 0, 487, 555,
	556, 557, 558, 0, 494, 0, 488, 489, 559, 490,
	560, 0, 491, 492, 493, 0, 495, 496, 0, 0,
	497, 498, 499, 501, 502, 500, 503, 0, 504, 0,
	0, 505, 506, 507, 561, 562, 563, 0, 509, 508,
	564, 0, 1359, 0, 237, 510, 511, 565, 512, 513,
	514, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 243, 244, 245, 246, 247, 248, 0, 249, 250,
	0, 0, 0, 0, 1756, 515, 0, 0, 0, 0,
	251, 252, 254, 253, 255, 256, 257, 516, 517, 0,
	518, 258, 519, 0, 259, 260, 261, 262, 263, 0,
	0, 0, 264, 520, 521, 522, 0, 265, 266, 523,
	0, 0, 0, 267, 268, 269, 270, 271, 272, 273,
	0, 0, 275, 276, 277, 274, 0, 278, 0, 279,
	280, 281, 0, 282, 0, 283, 284, 0, 0, 0,
	0, 0, 0, 0, 285, 286, 287, 288, 0, 289,
	524, 525, 0, 293, 290, 291, 0, 294, 292, 0,
	295, 296, 0, 0, 297, 298, 299, 0, 300, 301,
	0, 302, 303, 0, 304, 305, 526, 306, 307, 308,
	310, 312, 309, 313, 314, 315, 316, 527, 528, 0,
	240, 0, 0, 0, 0, 0, 317, 318, 319, 529,
	0, 0, 0, 320, 0, 321, 0, 0, 0, 322,
	323, 530, 531, 324, 325, 0, 326, 532, 0, 533,
	327, 0, 328, 329, 330, 331, 332, 534, 535, 536,
	387, 0, 333, 334, 0, 335, 336, 337, 338, 0,
	0, 0, 241, 339, 340, 342, 0, 0, 341, 537,
	538, 0, 539, 0, 343, 0, 540, 0, 344, 345,
	346, 0, 347, 0, 0, 0, 348, 349, 350, 351,
	352, 353, 0, 355, 354, 0, 356, 541, 0, 357,
	358, 0, 0, 359, 360, 361, 0, 0, 362, 363,
	364, 365, 0, 366, 367, 369, 371, 368, 370, 375,
	372, 373, 374, 377, 0, 376, 0, 378, 379, 380,
	383, 384, 382, 0, 381, 0, 242, 0, 385, 0,
	542, 386, 543, 388, 389, 0, 0, 390, 0, 0,
	0, 392, 393, 394, 0, 0, 395, 396, 544, 0,
	397, 0, 545, 398, 399, 391, 400, 401, 402, 403,
	404, 405, 406, 407, 0, 408, 409, 546, 547, 548,
	410, 549, 411, 412, 0, 413, 0, 414, 415, 416,
	417, 418, 419, 420, 550, 422, 421, 423, 0, 0,
	0, 0, 0, 0, 424, 0, 426, 427, 428, 425,
	429, 430, 431, 432, 0, 433, 434, 435, 0, 436,
	437, 438, 439, 551, 440, 0, 441, 442, 448, 449,
	443, 444, 450, 451, 452, 453, 454, 0, 456, 457,
	455, 458, 459, 460, 0, 461, 445, 446, 462, 463,
	0, 464, 465, 552, 0, 466, 0, 467, 468, 469,
	470, 447, 471, 476, 553, 472, 473, 474, 475, 554,
	0, 478, 479, 0, 477, 0, 480, 481, 482, 483,
	484, 485, 311, 486, 0, 487, 555, 556, 557, 558,
	0, 494, 0, 488, 489, 559, 490, 560, 0, 491,
	492, 493, 0, 495, 496, 0, 0, 497, 498, 499,
	501, 502, 500, 503, 0, 504, 0, 0, 505, 506,
	507, 561, 562, 563, 0, 509, 508, 564, 0, 237,
	2614, 0, 510, 511, 565, 512, 513, 514, 0, 0,
	0, 0, 0, 0, 0, 0, 243, 244, 245, 246,
	247, 248, 0, 249, 250, 0, 0, 0, 0, 1363,
	515, 0, 0, 0, 0, 251, 252, 254, 253, 255,
	256, 257, 516, 517, 0, 518, 258, 519, 0, 259,
	260, 261, 262, 263, 0, 0, 0, 264, 520, 521,
	522, 0, 265, 266, 523, 0, 0, 0, 267, 268,
	269, 270, 271, 272, 273, 0, 0, 275, 276, 277,
	274, 0, 278, 0, 279, 280, 281, 0, 282, 0,
	283, 284, 0, 0, 0, 0, 0, 0, 0, 285,
	286, 287, 288, 0, 289, 524, 525, 0, 293, 290,
	291, 0, 294, 292, 0, 295, 296, 0, 0, 297,
	298, 299, 0, 300, 301, 0, 302, 303, 0, 304,
	305, 526, 306, 307, 308, 310, 312, 309, 313, 314,
	315, 316, 527, 528, 0, 0, 0, 0, 0, 0,
	0, 317, 318, 319, 529, 0, 0, 0, 320, 0,
	321, 0, 0, 0, 322, 323, 530, 531, 324, 325,
	0, 326, 532, 0, 533, 327, 0, 328, 329, 330,
	331, 332, 534, 535, 536, 387, 0, 333, 334, 0,
	335, 336, 337, 338, 0, 0, 0, 0, 339, 340,
	342, 0, 0, 341, 537, 538, 0, 539, 0, 343,
	0, 540, 0, 344, 345, 346, 0, 347, 0, 0,
	0, 348, 349, 350, 351, 352, 353, 0, 355, 354,
	0, 356, 541, 0, 357, 358, 0, 0, 359, 360,
	361, 0, 0, 362, 363, 364, 365, 0, 366, 367,
	369, 371, 368, 370, 375, 372, 373, 374, 377, 0,
	376, 0, 378, 379, 380, 383, 384, 382, 0, 381,
	0, 0, 0, 385, 0, 542, 386, 543, 388, 389,
	0, 0, 390, 0, 0, 0, 392, 393, 394, 0,
	0, 395, 396, 544, 0, 397, 0, 545, 398, 399,
	391, 400, 401, 402, 403, 404, 405, 406, 407, 0,
	408, 409, 546, 547, 548, 410, 549, 411, 412, 0,
	413, 0, 414, 415, 416, 417, 418, 419, 420, 550,
	422, 421, 423, 0, 0, 0, 0, 0, 0, 424,
	0, 426, 427, 428, 425, 429, 430, 431, 432, 0,
	433, 434, 435, 0, 436, 437, 438, 439, 551, 440,
	0, 441, 442, 448, 449, 443, 444, 450, 451, 452,
	453, 454, 0, 456, 457, 455, 458, 459, 460, 0,
	461, 445, 446, 462, 463, 0, 464, 465, 552, 0,
	466, 0, 467, 468, 469, 470, 447, 471, 476, 553,
	472, 473, 474, 475, 554, 0, 478, 479, 0, 477,
	0, 480, 481, 482, 483, 484, 485, 311, 486, 0,
	487, 555, 556, 557, 558, 0, 494, 0, 488, 489,
	559, 490, 560, 0, 491, 492, 493, 0, 495, 496,
	0, 0, 497, 498, 499, 501, 502, 500, 503, 0,
	504, 0, 0, 505, 506, 507, 561, 562, 563, 0,
	509, 508, 564, 237, 0, 0, 0, 510, 511, 565,
	512, 513, 514, 0, 0, 0, 0, 0, 0, 0,
	243, 244, 245, 246, 247, 248, 0, 249, 250, 0,
	0, 0, 0, 0, 515, 0, 4081, 0, 0, 251,
	252, 254, 253, 255, 256, 257, 516, 517, 0, 518,
	258, 519, 0, 259, 260, 261, 262, 263, 0, 0,
	0, 264, 520, 521, 522, 0, 265, 266, 523, 0,
	0, 0, 267, 268, 269, 270, 271, 272, 273, 0,
	0, 275, 276, 277, 274, 0, 278, 0, 279, 280,
	281, 0, 282, 0, 283, 284, 0, 0, 0, 0,
	0, 0, 0, 285, 286, 287, 288, 0, 289, 524,
	525, 0, 293, 290, 291, 0, 294, 292, 0, 295,
	296, 0, 0, 297, 298, 299, 0, 300, 301, 0,
	302, 303, 0, 304, 305, 526, 306, 307, 308, 310,
	312, 309, 313, 314, 315, 316, 527, 528, 0, 240,
	0, 0, 0, 0, 0, 317, 318, 319, 529, 0,
	0, 0, 320, 0, 321, 0, 0, 0, 322, 323,
	530, 531, 324, 325, 0, 326, 532, 0, 533, 327,
	0, 328, 329, 330, 331, 332, 534, 535, 536, 387,
	0, 333, 334, 0, 335, 336, 337, 338, 0, 0,
	0, 241, 339, 340, 342, 0, 0, 341, 537, 538,
	0, 539, 0, 343, 0, 540, 0, 344, 345, 346,
	0, 347, 0, 0, 0, 348, 349, 350, 351, 352,
	353, 0, 355, 354, 0, 356, 541, 0, 357, 358,
	0, 0, 359, 360, 361, 0, 0, 362, 363, 364,
	365, 0, 366, 367, 369, 371, 368, 370, 375, 372,
	373, 374, 377, 0, 376, 0, 378, 379, 380, 383,
	384, 382, 0, 381, 0, 242, 0, 385, 0, 542,
	386, 543, 388, 389, 0, 0, 390, 0, 0, 0,
	392, 393, 394, 0, 0, 395, 396, 544, 0, 397,
	0, 545, 398, 399, 391, 400, 401, 402, 403, 404,
	405, 406, 407, 0, 408, 409, 546, 547, 548, 410,
	549, 411, 412, 0, 413, 0, 414, 415, 416, 417,
	418, 419, 420, 550, 422, 421, 423, 0, 0, 0,
	0, 0, 0, 424, 0, 426, 427, 428, 425, 429,
	430, 431, 432, 0, 433, 434, 435, 0, 436, 437,
	438, 439, 551, 440, 0, 441, 442, 448, 449, 443,
	444, 450, 451, 452, 453, 454, 0, 456, 457, 455,
	458, 459, 460, 0, 461, 445, 446, 462, 463, 0,
	464, 465, 552, 0, 466, 0, 467, 468, 469, 470,
	447, 471, 476, 553, 472, 473, 474, 475, 554, 0,
	478, 479, 0, 477, 0, 480, 481, 482, 483, 484,
	485, 311, 486, 0, 487, 555, 556, 557, 558, 0,
	494, 0, 488, 489, 559, 490, 560, 0, 491, 492,
	493, 0, 495, 496, 0, 0, 497, 498, 499, 501,
	502, 500, 503, 0, 504, 0, 0, 505, 506, 507,
	561, 562, 563, 237, 509, 508, 564, 0, 0, 0,
	0, 510, 511, 565, 512, 513, 514, 0, 0, 0,
	243, 244, 245, 246, 247, 248, 0, 249, 250, 0,
	0, 0, 0, 0, 515, 0, 0, 0, 3028, 251,
	252, 254, 253, 255, 256, 257, 516, 517, 0, 518,
	258, 519, 0, 259, 260, 261, 262, 263, 0, 0,
	0, 264, 520, 521, 522, 0, 265, 266, 523, 0,
	0, 0, 267, 268, 269, 270, 271, 272, 273, 0,
	0, 275, 276, 277, 274, 0, 278, 0, 279, 280,
	281, 0, 282, 0, 283, 284, 0, 0, 0, 0,
	0, 0, 0, 285, 286, 287, 288, 0, 289, 524,
	525, 0, 293, 290, 291, 0, 294, 292, 0, 295,
	296, 0, 0, 297, 298, 299, 0, 300, 301, 0,
	302, 303, 0, 304, 305, 526, 306, 307, 308, 310,
	312, 309, 313, 314, 315, 316, 527, 528, 0, 240,
	0, 0, 0, 0, 0, 317, 318, 319, 529, 0,
	0, 0, 320, 0, 321, 0, 0, 0, 322, 323,
	530, 531, 324, 325, 0, 326, 532, 0, 533, 327,
	0, 328, 329, 330, 331, 332, 534, 535, 536, 387,
	0, 333, 334, 0, 335, 336, 337, 338, 0, 0,
	0, 241, 339, 340, 342, 0, 0, 341, 537, 538,
	0, 539, 0, 343, 0, 540, 0, 344, 345, 346,
	0, 347, 0, 0, 0, 348, 349, 350, 351, 352,
	353, 0, 355, 354, 0, 356, 541, 0, 357, 358,
	0, 0, 359, 360, 361, 0, 0, 362, 363, 364,
	365, 0, 366, 367, 369, 371, 368, 370, 375, 372,
	373, 374, 377, 0, 376, 0, 378, 379, 380, 383,
	384, 382, 0, 381, 0, 242, 0, 385, 0, 542,
	386, 543, 388, 389, 0, 0, 390, 0, 0, 0,
	392, 393, 394, 0, 0, 395, 396, 544, 0, 397,
	0, 545, 398, 399, 391, 400, 401, 402, 403, 404,
	405, 406, 407, 0, 408, 409, 546, 547, 548, 410,
	549, 411, 412, 0, 413, 0, 414, 415, 416, 417,
	418, 419, 420, 550, 422, 421, 423, 0, 0, 0,
	0, 0, 0, 424, 0, 426, 427, 428, 425, 429,
	430, 431, 432, 0, 433, 434, 435, 0, 436, 437,
	438, 439, 551, 440, 0, 441, 442, 448, 449, 443,
	444, 450, 451, 452, 453, 454, 0, 456, 457, 455,
	458, 459, 460, 0, 461, 445, 446, 462, 463, 0,
	464, 465, 552, 0, 466, 0, 467, 468, 469, 470,
	447, 471, 476, 553, 472, 473, 474, 475, 554, 0,
	478, 479, 0, 477, 0, 480, 481, 482, 483, 484,
	485, 311, 486, 0, 487, 555, 556, 557, 558, 0,
	494, 0, 488, 489, 559, 490, 560, 0, 491, 492,
	493, 0, 495, 496, 0, 0, 497, 498, 499, 501,
	502, 500, 503, 0, 504, 0, 0, 505, 506, 507,
	561, 562, 563, 237, 509, 508, 564, 0, 0, 0,
	0, 510, 511, 565, 512, 513, 514, 0, 0, 0,
	243, 244, 245, 246, 247, 248, 0, 249, 250, 0,
	0, 0, 0, 0, 515, 0, 0, 0, 1363, 251,
	252, 254, 253, 255, 256, 257, 516, 517, 0, 518,
	258, 519, 0, 259, 260, 261, 262, 263, 0, 0,
	0, 264, 520, 521, 522, 0, 265, 266, 523, 0,
	0, 0, 267, 268, 269, 270, 271, 272, 273, 0,
	0, 275, 276, 277, 274, 0, 278, 0, 279, 280,
	281, 0, 282, 0, 283, 284, 0, 0, 0, 0,
	0, 0, 0, 285, 286, 287, 288, 0, 289, 524,
	525, 0, 293, 290, 291, 0, 294, 292, 0, 295,
	296, 0, 0, 297, 298, 299, 0, 300, 301, 0,
	302, 303, 0, 304, 305, 526, 306, 307, 308, 310,
	312, 309, 313, 314, 315, 316, 527, 528, 0, 0,
	0, 0, 0, 0, 0, 317, 318, 319, 529, 0,
	0, 0, 320, 0, 321, 0, 0, 0, 322, 323,
	530, 531, 324, 325, 0, 326, 532, 0, 533, 327,
	0, 328, 329, 330, 331, 332, 534, 535, 536, 387,
	0, 333, 334, 0, 335, 336, 337, 338, 0, 0,
	0, 0, 339, 340, 342, 0, 0, 341, 537, 538,
	0, 539, 0, 343, 0, 540, 0, 344, 345, 346,
	0, 347, 0, 0, 0, 348, 349, 350, 351, 352,
	353, 0, 355, 354, 0, 356, 541, 0, 357, 358,
	0, 0, 359, 360, 361, 0, 0, 362, 363, 364,
	365, 0, 366, 367, 369, 371, 368, 370, 375, 372,
	373, 374, 377, 0, 376, 0, 378, 379, 380, 383,
	384, 382, 0, 381, 0, 0, 0, 385, 0, 542,
	386, 543, 388, 389, 0, 0, 390, 0, 0, 0,
	392, 393, 394, 0, 0, 395, 396, 544, 0, 397,
	0, 545, 398, 399, 391, 400, 401, 402, 403, 404,
	405, 406, 407, 0, 408, 409, 546, 547, 548, 410,
	549, 411, 412, 0, 413, 0, 414, 415, 416, 417,
	418, 419, 420, 550, 422, 421, 423, 0, 0, 0,
	0, 0, 0, 424, 0, 426, 427, 428, 425, 429,
	430, 431, 432, 0, 433, 434, 435, 0, 436, 437,
	438, 439, 551, 440, 0, 441, 442, 448, 449, 443,
	444, 450, 451, 452, 453, 454, 0, 456, 457, 455,
	458, 459, 460, 0, 461, 445, 446, 462, 463, 0,
	464, 465, 552, 0, 466, 0, 467, 468, 469, 470,
	447, 471, 476, 553, 472, 473, 474, 475, 554, 0,
	478, 479, 0, 477, 0, 480, 481, 482, 483, 484,
	485, 311, 486, 0, 487, 555, 556, 557, 558, 0,
	494, 0, 488, 489, 559, 490, 560, 0, 491, 492,
	493, 0, 495, 496, 0, 0, 497, 498, 499, 501,
	502, 500, 503, 0, 504, 0, 0, 505, 506, 507,
	561, 562, 563, 0, 509, 508, 564, 237, 0, 0,
	0, 510, 511, 565, 512, 513, 514, 0, 0, 0,
	0, 0, 0, 0, 243, 244, 245, 246, 247, 248,
	0, 249, 250, 0, 0, 0, 0, 0, 515, 0,
	2587, 0, 0, 251, 252, 254, 253, 255, 256, 257,
	516, 517, 0, 518, 258, 519, 0, 259, 260, 261,
	262, 263, 0, 0, 0, 264, 520, 521, 522, 0,
	265, 266, 523, 0, 0, 0, 267, 268, 269, 270,
	271, 272, 273, 0, 0, 275, 276, 277, 274, 0,
	278, 0, 279, 280, 281, 0, 282, 0, 283, 284,
	0, 0, 0, 0, 0, 0, 0, 285, 286, 287,
	288, 0, 289, 524, 525, 0, 293, 290, 291, 0,
	294, 292, 0, 295, 296, 0, 0, 297, 298, 299,
	0, 300, 301, 0, 302, 303, 0, 304, 305, 526,
	306, 307, 308, 310, 312, 309, 313, 314, 315, 316,
	527, 528, 0, 0, 0, 0, 0, 0, 0, 317,
	318, 319, 529, 0, 0, 0, 320, 0, 321, 0,
	0, 0, 322, 323, 530, 531, 324, 325, 0, 326,
	532, 0, 533, 327, 0, 328, 329, 330, 331, 332,
	534, 535, 536, 387, 0, 333, 334, 0, 335, 336,
	337, 338, 0, 0, 0, 0, 339, 340, 342, 0,
	0, 341, 537, 538, 0, 539, 0, 343, 0, 540,
	0, 344, 345, 346, 0, 347, 0, 0, 0, 348,
	349, 350, 351, 352, 353, 0, 355, 354, 0, 356,
	541, 0, 357, 358, 0, 0, 359, 360, 361, 0,
	0, 362, 363, 364, 365, 0, 366, 367, 369, 371,
	368, 370, 375, 372, 373, 374, 377, 0, 376, 0,
	378, 379, 380, 383, 384, 382, 0, 381, 0, 0,
	0, 385, 0, 542, 386, 543, 388, 389, 0, 0,
	390, 0, 0, 0, 392, 393, 394, 0, 0, 395,
	396, 544, 0, 397, 0, 545, 398, 399, 391, 400,
	401, 402, 403, 404, 405, 406, 407, 0, 408, 409,
	546, 547, 548, 410, 549, 411, 412, 0, 413, 0,
	414, 415, 416, 417, 418, 419, 420, 550, 422, 421,
	423, 0, 0, 0, 0, 0, 0, 424, 0, 426,
	427, 428, 425, 429, 430, 431, 432, 0, 433, 434,
	435, 0, 436, 437, 438, 439, 551, 440, 0, 441,
	442, 448, 449, 443, 444, 450, 451, 452, 453, 454,
	0, 456, 457, 455, 458, 459, 460, 0, 461, 445,
	446, 462, 463, 0, 464, 465, 552, 0, 466, 0,
	467, 468, 469, 470, 447, 471, 476, 553, 472, 473,
	474, 475, 554, 0, 478, 479, 0, 477, 0, 480,
	481, 482, 483, 484, 485, 311, 486, 0, 487, 555,
	556, 557, 558, 0, 494, 0, 488, 489, 559, 490,
	560, 0, 491, 492, 493, 0, 495, 496, 0, 0,
	497, 498, 499, 501, 502, 500, 503, 0, 504, 0,
	0, 505, 506, 507, 561, 562, 563, 0, 509, 508,
	564, 237, 0, 0, 0, 510, 511, 565, 512, 513,
	514, 0, 0, 0, 0, 0, 0, 0, 243, 244,
	245, 246, 247, 248, 0, 249, 250, 0, 0, 0,
	0, 0, 515, 0, 3169, 0, 0, 251, 252, 254,
	253, 255, 256, 257, 516, 517, 0, 518, 258, 519,
	0, 259, 260, 261, 262, 263, 0, 0, 0, 264,
	520, 521, 522, 0, 265, 266, 523, 0, 0, 0,
	267, 268, 269, 270, 271, 272, 273, 0, 0, 275,
	276, 277, 274, 0, 278, 0, 279, 280, 281, 0,
	282, 0, 283, 284, 0, 0, 0, 0, 0, 0,
	0, 285, 286, 287, 288, 0, 289, 524, 525, 0,
	293, 290, 291, 0, 294, 292, 0, 295, 296, 0,
	0, 297, 298, 299, 0, 300, 301, 0, 302, 303,
	0, 304, 305, 526, 306, 307, 308, 310, 312, 309,
	313, 314, 315, 316, 527, 528, 0, 0, 0, 0,
	0, 0, 0, 317, 318, 319, 529, 0, 0, 0,
	320, 0, 321, 0, 0, 0, 322, 323, 530, 531,
	324, 325, 0, 326, 532, 0, 533, 327, 0, 328,
	329, 330, 331, 332, 534, 535, 536, 387, 0, 333,
	334, 0, 335, 336, 337, 338, 0, 0, 0, 0,
	339, 340, 342, 0, 0, 341, 537, 538, 0, 539,
	0, 343, 0, 540, 0, 344, 345, 346, 0, 347,
	0, 0, 0, 348, 349, 350, 351, 352, 353, 0,
	355, 354, 0, 356, 541, 0, 357, 358, 0, 0,
	359, 360, 361, 0, 0, 362, 363, 364, 365, 0,
	366, 367, 369, 371, 368, 370, 375, 372, 373, 374,
	377, 0, 376, 0, 378, 379, 380, 383, 384, 382,
	0, 381, 0, 0, 0, 385, 0, 542, 386, 543,
	388, 389, 0, 0, 390, 0, 0, 0, 392, 393,
	394, 0, 0, 395, 396, 544, 0, 397, 0, 545,
	398, 399, 391, 400, 401, 402, 403, 404, 405, 406,
	407, 0, 408, 409, 546, 547, 548, 410, 549, 411,
	412, 0, 413, 0, 414, 415, 416, 417, 418, 419,
	420, 550, 422, 421, 423, 0, 0, 0, 0, 0,
	0, 424, 0, 426, 427, 428, 425, 429, 430, 431,
	432, 0, 433, 434, 435, 0, 436, 437, 438, 439,
	551, 440, 0, 441, 442, 448, 449, 443, 444, 450,
	451, 452, 453, 454, 0, 456, 457, 455, 458, 459,
	460, 0, 461, 445, 446, 462, 463, 0, 464, 465,
	552, 0, 466, 0, 467, 468, 469, 470, 447, 471,
	476, 553, 472, 473, 474, 475, 554, 0, 478, 479,
	0, 477, 0, 480, 481, 482, 483, 484, 485, 311,
	486, 0, 487, 555, 556, 557, 558, 0, 494, 0,
	488, 489, 559, 490, 560, 0, 491, 492, 493, 0,
	495, 496, 0, 0, 497, 498, 499, 501, 502, 500,
	503, 0, 504, 0, 0, 505, 506, 507, 561, 562,
	563, 0, 509, 508, 564, 0, 764, 0, 648, 510,
	511, 565, 512, 513, 514, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 243, 244, 245, 246, 247,
	248, 0, 249, 250, 0, 0, 0, 0, 2020, 515,
	0, 0, 0, 0, 251, 252, 254, 253, 255, 256,
	257, 516, 517, 0, 518, 258, 519, 0, 259, 260,
	261, 262, 263, 0, 0, 0, 264, 520, 521, 522,
	0, 265, 266, 523, 0, 0, 0, 267, 268, 269,
	270, 271, 272, 273, 0, 0, 275, 276, 277, 274,
	0, 278, 0, 279, 280, 281, 0, 282, 0, 283,
	284, 0, 0, 0, 0, 0, 0, 0, 285, 286,
	655, 288, 0, 289, 524, 525, 0, 293, 290, 291,
	0, 294, 292, 0, 295, 296, 0, 0, 297, 298,
	299, 0, 300, 301, 0, 302, 303, 0, 304, 305,
	526, 306, 307, 308, 310, 312, 309, 313, 314, 315,
	316, 527, 528, 0, 240, 0, 0, 0, 0, 0,
	317, 318, 319, 529, 0, 0, 0, 320, 0, 321,
	0, 762, 0, 322, 323, 530, 531, 324, 325, 0,
	326, 532, 0, 533, 327, 0, 328, 329, 330, 331,
	332, 534, 535, 536, 387, 0, 333, 334, 0, 335,
	336, 337, 338, 0, 0, 0, 241, 339, 340, 342,
	0, 0, 341, 537, 538, 0, 539, 0, 343, 0,
	540, 0, 344, 345, 346, 0, 347, 0, 0, 0,
	348, 349, 350, 351, 352, 353, 0, 355, 354, 0,
	356, 541, 0, 357, 358, 0, 0, 359, 360, 361,
	0, 0, 362, 363, 364, 365, 0, 366, 367, 369,
	371, 368, 370, 375, 372, 373, 374, 377, 0, 376,
	0, 378, 379, 380, 383, 384, 382, 0, 381, 0,
	242, 0, 385, 0, 542, 386, 543, 388, 389, 0,
	0, 390, 0, 0, 0, 392, 393, 394, 0, 0,
	395, 396, 544, 0, 397, 0, 545, 398, 399, 391,
	400, 401, 402, 403, 404, 405, 406, 407, 0, 408,
	409, 546, 547, 548, 410, 549, 411, 412, 0, 413,
	0, 414, 415, 416, 417, 418, 419, 420, 550, 422,
	421, 423, 0, 0, 0, 0, 0, 0, 424, 0,
	426, 427, 428, 425, 429, 430, 431, 432, 0, 433,
	434, 435, 0, 436, 437, 438, 439, 551, 440, 0,
	441, 442, 448, 449, 443, 444, 450, 451, 452, 453,
	454, 0, 456, 457, 455, 458, 459, 460, 0, 461,
	445, 446, 462, 463, 0, 464, 465, 552, 0, 466,
	0, 467, 468, 469, 470, 447, 471, 476, 553, 472,
	473, 474, 475, 554, 0, 478, 479, 0, 477, 653,
	480, 481, 482, 483, 654, 485, 311, 486, 0, 487,
	555, 556, 557, 558, 0, 494, 0, 488, 489, 559,
	490, 560, 0, 491, 492, 493, 0, 495, 496, 0,
	0, 497, 498, 499, 501, 502, 500, 503, 0, 504,
	0, 0, 505, 506, 507, 561, 562, 563, 0, 509,
	508, 564, 0, 646, 0, 648, 510, 511, 565, 512,
	513, 514, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 243, 244, 245, 246, 247, 248, 658, 249,
	250, 0, 0, 0, 0, 0, 515, 0, 0, 0,
	0, 251, 252, 254, 253, 255, 256, 257, 516, 517,
	0, 518, 258, 519, 0, 259, 260, 261, 262, 263,
	0, 0, 0, 264, 520, 521, 522, 0, 265, 266,
	523, 0, 0, 0, 267, 268, 269, 270, 271, 272,
	273, 0, 0, 275, 276, 277, 274, 0, 278, 0,
	279, 280, 281, 0, 282, 0, 283, 284, 0, 0,
	0, 0, 0, 0, 0, 285, 286, 655, 288, 0,
	289, 524, 525, 0, 293, 290, 291, 0, 294, 292,
	0, 295, 296, 0, 0, 297, 298, 299, 0, 300,
	301, 0, 302, 303, 0, 304, 305, 526, 306, 307,
	308, 310, 312, 309, 313, 314, 315, 316, 527, 528,
	0, 240, 0, 0, 0, 0, 0, 317, 318, 319,
	529, 0, 0, 0, 320, 0, 321, 0, 0, 0,
	322, 323, 530, 531, 324, 325, 0, 326, 532, 0,
	533, 327, 0, 328, 329, 330, 331, 332, 534, 535,
	536, 387, 0, 333, 334, 0, 335, 336, 337, 338,
	0, 0, 0, 241, 339, 340, 342, 0, 0, 341,
	537, 538, 0, 539, 0, 343, 0, 540, 0, 344,
	345, 346, 0, 347, 0, 0, 0, 348, 349, 350,
	351, 352, 353, 0, 355, 354, 0, 356, 541, 0,
	357, 358, 0, 0, 359, 360, 361, 0, 0, 362,
	363, 364, 365, 0, 366, 367, 369, 371, 368, 370,
	375, 372, 373, 374, 377, 0, 376, 0, 378, 379,
	380, 383, 384, 382, 0, 381, 0, 242, 0, 385,
	0, 542, 386, 543, 388, 389, 0, 0, 390, 0,
	0, 0, 392, 393, 394, 0, 0, 395, 396, 544,
	0, 397, 0, 545, 398, 399, 391, 400, 401, 402,
	403, 404, 405, 406, 407, 0, 408, 409, 546, 547,
	548, 410, 549, 411, 412, 0, 413, 0, 414, 415,
	416, 417, 418, 419, 420, 550, 422, 421, 423, 0,
	0, 0, 0, 0, 0, 424, 0, 426, 427, 428,
	425, 429, 430, 431, 432, 0, 433, 434, 435, 0,
	436, 437, 438, 439, 551, 440, 0, 441, 442, 448,
	449, 443, 444, 450, 451, 452, 453, 454, 0, 456,
	457, 455, 458, 459, 460, 0, 461, 445, 446, 462,
	463, 0, 464, 465, 552, 0, 466, 0, 467, 468,
	469, 470, 447, 471, 476, 553, 472, 473, 474, 475,
	554, 0, 478, 479, 0, 477, 653, 480, 481, 482,
	483, 654, 485, 311, 486, 0, 487, 555, 556, 557,
	558, 0, 494, 0, 488, 489, 559, 490, 560, 0,
	491, 492, 493, 0, 495, 496, 0, 0, 497, 498,
	499, 501, 502, 500, 503, 0, 504, 0, 0, 505,
	506, 507, 561, 562, 563, 648, 509, 508, 564, 0,
	0, 0, 0, 510, 511, 565, 512, 513, 514, 0,
	0, 0, 243, 244, 245, 246, 247, 248, 0, 249,
	250, 0, 0, 0, 0, 658, 515, 0, 0, 0,
	0, 251, 252, 254, 253, 255, 256, 257, 516, 517,
	0, 518, 258, 519, 0, 259, 260, 261, 262, 263,
	0, 0, 0, 264, 520, 521, 522, 0, 265, 266,
	523, 0, 0, 0, 267, 268, 269, 270, 271, 272,
	273, 0, 0, 275, 276, 277, 274, 0, 278, 0,
	279, 280, 281, 0, 282, 0, 283, 284, 0, 0,
	0, 0, 0, 0, 0, 285, 286, 655, 288, 0,
	289, 524, 525, 0, 293, 290, 291, 0, 294, 292,
	0, 295, 296, 0, 0, 297, 298, 299, 0, 300,
	301, 0, 302, 303, 0, 304, 305, 526, 306, 307,
	308, 310, 312, 309, 313, 314, 315, 316, 527, 528,
	0, 240, 0, 0, 0, 0, 0, 317, 318, 319,
	529, 0, 0, 0, 320, 0, 321, 0, 0, 0,
	322, 323, 530, 531, 324, 325, 0, 326, 532, 0,
	533, 327, 0, 328, 329, 330, 331, 332, 534, 535,
	536, 387, 0, 333, 334, 0, 335, 336, 337, 338,
	0, 0, 0, 241, 339, 340, 342, 0, 0, 341,
	537, 538, 0, 539, 0, 343, 0, 540, 0, 344,
	345, 346, 0, 347, 0, 0, 0, 348, 349, 350,
	351, 352, 353, 0, 355, 354, 0, 356, 541, 0,
	357, 358, 0, 0, 359, 360, 361, 0, 0, 362,
	363, 364, 365, 0, 366, 367, 369, 371, 368, 370,
	375, 372, 373, 374, 377, 0, 376, 0, 378, 379,
	380, 383, 384, 382, 0, 381, 0, 242, 0, 385,
	0, 542, 386, 543, 388, 389, 0, 0, 390, 0,
	0, 0, 392, 393, 394, 0, 0, 395, 396, 544,
	0, 397, 0, 545, 398, 399, 391, 400, 401, 402,
	403, 404, 405, 406, 407, 0, 408, 409, 546, 547,
	548, 410, 549, 411, 412, 0, 413, 0, 414, 415,
	416, 417, 418, 419, 420, 550, 422, 421, 423, 0,
	0, 0, 0, 0, 0, 424, 0, 426, 427, 428,
	425, 429, 430, 431, 432, 0, 433, 434, 435, 0,
	436, 437, 438, 439, 551, 440, 0, 441, 442, 448,
	449, 443, 444, 450, 451, 452, 453, 454, 0, 456,
	457, 455, 458, 459, 460, 0, 461, 445, 446, 462,
	463, 0, 464, 465, 552, 0, 466, 0, 467, 468,
	469, 470, 447, 471, 476, 553, 472, 473, 474, 475,
	554, 0, 478, 479, 0, 477, 653, 480, 481, 482,
	483, 654, 485, 311, 486, 0, 487, 555, 556, 557,
	558, 0, 494, 0, 488, 489, 559, 490, 560, 0,
	491, 492, 493, 0, 495, 496, 0, 0, 497, 498,
	499, 501, 502, 500, 503, 0, 504, 0, 0, 505,
	506, 507, 561, 562, 563, 648, 509, 508, 564, 0,
	0, 0, 0, 510, 511, 565, 512, 513, 514, 0,
	0, 0, 243, 244, 245, 246, 247, 248, 0, 249,
	250, 0, 0, 0, 0, 658, 515, 0, 0, 0,
	0, 251, 252, 254, 253, 255, 256, 257, 516, 517,
	0, 518, 258, 519, 0, 259, 260, 261, 262, 263,
	0, 0, 0, 264, 520, 521, 522, 0, 265, 266,
	523, 0, 0, 0, 267, 268, 269, 270, 271, 272,
	273, 0, 0, 275, 276, 277, 274, 0, 278, 0,
	279, 280, 281, 0, 282, 0, 283, 284, 0, 0,
	0, 0, 0, 0, 0, 285, 286, 655, 288, 0,
	289, 524, 525, 0, 293, 290, 291, 0, 294, 292,
	0, 295, 296, 0, 0, 297, 298, 299, 0, 300,
	301, 0, 302, 303, 0, 304, 305, 526, 306, 307,
	308, 310, 312, 309, 313, 314, 315, 316, 527, 528,
	0, 240, 0, 0, 0, 0, 0, 317, 318, 319,
	529, 0, 0, 0, 320, 0, 321, 0, 0, 0,
	322, 323, 530, 531, 324, 325, 0, 326, 532, 0,
	533, 327, 0, 328, 329, 330, 331, 332, 534, 535,
	536, 387, 0, 333, 334, 0, 335, 336, 337, 338,
	0, 0, 0, 241, 339, 340, 342, 0, 0, 341,
	537, 538, 0, 539, 0, 343, 0, 540, 0, 344,
	345, 346, 0, 347, 0, 0, 0, 348, 349, 350,
	351, 352, 353, 0, 355, 354, 0, 356, 541, 0,
	357, 358, 0, 0, 359, 360, 361, 0, 0, 362,
	363, 364, 365, 0, 366, 367, 369, 371, 368, 370,
	375, 372, 373, 374, 377, 0, 376, 0, 378, 379,
	380, 383, 384, 382, 0, 381, 0, 242, 0, 385,
	0, 542, 386, 543, 388, 389, 0, 0, 390, 0,
	0, 0, 392, 393, 394, 0, 0, 395, 396, 544,
	0, 397, 0, 545, 398, 399, 391, 400, 401, 402,
	403, 404, 405, 406, 407, 0, 408, 409, 546, 547,
	548, 410, 549, 411, 412, 0, 413, 0, 414, 415,
	416, 417, 418, 419, 420, 550, 422, 421, 423, 0,
	0, 0, 0, 0, 0, 424, 0, 426, 427, 428,
	425, 429, 430, 431, 432, 0, 433, 434, 435, 0,
	2056, 437, 438, 439, 551, 440, 0, 441, 442, 448,
	449, 443, 444, 450, 451, 452, 453, 454, 0, 456,
	457, 455, 458, 459, 460, 0, 461, 445, 446, 462,
	463, 0, 464, 465, 552, 0, 466, 0, 467, 468,
	469, 470, 447, 471, 476, 553, 472, 473, 474, 475,
	554, 0, 478, 479, 0, 477, 653, 480, 481, 482,
	483, 654, 485, 311, 486, 0, 487, 555, 556, 557,
	558, 0, 494, 0, 488, 489, 559, 490, 560, 0,
	491, 492, 493, 0, 495, 496, 0, 0, 497, 498,
	499, 501, 502, 500, 503, 0, 504, 0, 0, 505,
	506, 507, 561, 562, 563, 1791, 509, 508, 564, 0,
	0, 0, 0, 510, 511, 565, 512, 513, 514, 0,
	0, 0, 243, 244, 245, 246, 247, 248, 0, 249,
	250, 0, 0, 0, 0, 658, 0, 0, 0, 0,
	0, 251, 252, 254, 253, 255, 256, 257, 0, 1797,
	0, 1787, 258, 1803, 0, 259, 260, 261, 262, 263,
	0, 0, 0, 264, 1812, 1813, 0, 0, 265, 266,
	0, 0, 1236, 0, 267, 268, 269, 270, 271, 272,
	273, 0, 0, 275, 276, 277, 274, 0, 278, 0,
	279, 280, 281, 0, 282, 1029, 283, 284, 0, 0,
	0, 0, 0, 0, 0, 285, 286, 287, 288, 1013,
	289, 1801, 1800, 0, 293, 290, 291, 0, 294, 292,
	0, 295, 296, 0, 0, 297, 998, 299, 0, 300,
	301, 0, 302, 303, 0, 304, 305, 0, 306, 307,
	308, 310, 312, 309, 313, 314, 315, 316, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 317, 318, 319,
	1799, 0, 0, 0, 320, 0, 321, 0, 0, 1030,
	322, 323, 1808, 1809, 324, 325, 0, 326, 0, 0,
	0, 327, 0, 328, 329, 330, 331, 332, 0, 0,
	0, 387, 1032, 333, 334, 0, 335, 336, 337, 338,
	0, 0, 0, 0, 339, 340, 342, 0, 1031, 341,
	1794, 1795, 0, 1790, 0, 343, 1033, 0, 1034, 344,
	345, 346, 1035, 347, 0, 0, 0, 348, 349, 350,
	351, 352, 353, 0, 355, 354, 0, 356, 0, 1036,
	357, 358, 1037, 0, 359, 360, 361, 0, 0, 362,
	363, 364, 365, 0, 366, 367, 369, 371, 368, 370,
	375, 372, 373, 374, 377, 0, 376, 1038, 378, 379,
	380, 383, 384, 382, 1039, 381, 0, 0, 1040, 385,
	0, 0, 386, 1802, 388, 389, 0, 0, 390, 0,
	0, 0, 392, 393, 394, 0, 0, 395, 396, 0,
	1041, 397, 1042, 0, 398, 399, 391, 400, 401, 402,
	403, 404, 405, 406, 407, 0, 408, 409, 1784, 1785,
	0, 410, 0, 411, 412, 0, 413, 0, 414, 415,
	416, 417, 418, 419, 420, 1798, 422, 421, 423, 0,
	0, 0, 0, 0, 0, 424, 0, 426, 427, 428,
	425, 429, 430, 431, 432, 0, 433, 434, 435, 1043,
	436, 437, 438, 439, 0, 440, 0, 441, 442, 448,
	449, 443, 444, 450, 451, 452, 453, 454, 0, 456,
	457, 455, 458, 459, 460, 0, 461, 445, 446, 462,
	463, 1044, 464, 465, 1796, 0, 466, 0, 467, 468,
	469, 470, 447, 471, 476, 1811, 472, 473, 474, 475,
	0, 0, 478, 479, 0, 477, 0, 480, 481, 482,
	483, 484, 485, 311, 486, 0, 487, 1804, 1805, 1806,
	1807, 0, 494, 0, 488, 489, 0, 490, 0, 0,
	491, 492, 493, 0, 495, 496, 0, 0, 497, 498,
	499, 501, 502, 500, 503, 0, 504, 0, 0, 505,
	506, 507, 0, 1788, 1810, 0, 509, 508, 0, 0,
	0, 0, 0, 510, 511, 0, 512, 513, 514, 1270,
	1269, 0, 0, 0, 0, 1267, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 243, 244, 245, 246,
	247, 248, 0, 249, 250, 0, 1778, 0, 0, 0,
	515, 0, 0, 0, 0, 251, 252, 254, 253, 255,
	256, 257, 516, 517, 0, 518, 258, 519, 0, 259,
	260, 261, 262, 263, 0, 0, 0, 264, 520, 521,
	522, 0, 265, 266, 523, 0, 1236, 0, 267, 268,
	269, 270, 271, 272, 273, 0, 0, 275, 276, 277,
	274, 0, 278, 0, 279, 280, 281, 0, 282, 1029,
	283, 284, 0, 0, 0, 0, 0, 0, 0, 285,
	286, 287, 288, 0, 289, 524, 525, 0, 293, 290,
	291, 0, 294, 292, 0, 295, 296, 0, 0, 297,
	298, 299, 0, 300, 301, 0, 302, 303, 0, 304,
	305, 526, 306, 307, 308, 310, 312, 309, 313, 314,
	315, 316, 527, 528, 0, 240, 0, 0, 0, 0,
	0, 317, 318, 319, 529, 0, 0, 0, 320, 0,
	321, 0, 0, 1030, 322, 323, 530, 531, 324, 325,
	0, 326, 532, 0, 533, 327, 0, 328, 329, 330,
	331, 332, 534, 535, 536, 387, 1032, 333, 334, 0,
	335, 336, 337, 338, 0, 0, 0, 0, 339, 340,
	342, 0, 1031, 341, 537, 538, 0, 539, 0, 343,
	1033, 540, 1034, 344, 345, 346, 1035, 347, 0, 0,
	0, 348, 349, 350, 351, 352, 353, 0, 355, 354,
	0, 356, 541, 1036, 357, 358, 1037, 0, 359, 360,
	361, 0, 0, 362, 363, 364, 365, 0, 366, 367,
	369, 371, 368, 370, 375, 372, 373, 374, 377, 0,
	376, 1038, 378, 379, 380, 383, 384, 382, 1039, 381,
	0, 0, 1040, 385, 3328, 542, 386, 543, 388, 389,
	0, 0, 390, 0, 0, 0, 392, 393, 394, 0,
	0, 395, 396, 544, 1041, 397, 1042, 545, 398, 399,
	391, 400, 401, 402, 403, 404, 405, 406, 407, 0,
	408, 409, 546, 547, 548, 410, 549, 411, 412, 0,
	413, 0, 414, 415, 416, 417, 418, 419, 420, 550,
	422, 421, 423, 0, 0, 0, 0, 0, 0, 424,
	0, 426, 427, 428, 425, 429, 430, 431, 432, 0,
	433, 434, 435, 1043, 436, 437, 438, 439, 551, 440,
	0, 441, 442, 448, 449, 443, 444, 450, 451, 452,
	453, 454, 0, 456, 457, 455, 458, 459, 460, 0,
	461, 445, 446, 462, 463, 1044, 464, 465, 552, 0,
	466, 0, 467, 468, 469, 470, 447, 471, 476, 553,
	472, 473, 474, 475, 554, 0, 478, 479, 0, 477,
	0, 480, 481, 482, 483, 484, 485, 311, 486, 0,
	487, 555, 556, 557, 558, 0, 494, 0, 488, 489,
	559, 490, 560, 0, 491, 492, 493, 0, 495, 496,
	0, 0, 497, 498, 499, 501, 502, 500, 503, 0,
	504, 0, 0, 505, 506, 507, 561, 562, 563, 0,
	509, 508, 564, 0, 0, 0, 0, 510, 511, 565,
	512, 513, 514, 1270, 1269, 0, 0, 0, 0, 1267,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	243, 244, 245, 246, 247, 248, 0, 249, 250, 0,
	0, 0, 0, 0, 515, 0, 0, 0, 0, 251,
	252, 254, 253, 255, 256, 257, 516, 517, 0, 518,
	258, 519, 0, 259, 260, 261, 262, 263, 0, 0,
	0, 264, 520, 521, 522, 0, 265, 266, 523, 0,
	1236, 0, 267, 268, 269, 270, 271, 272, 273, 0,
	0, 275, 276, 277, 274, 0, 278, 0, 279, 280,
	281, 0, 282, 1029, 283, 284, 0, 0, 0, 0,
	0, 0, 0, 285, 286, 287, 288, 0, 289, 524,
	525, 0, 293, 290, 291, 0, 294, 292, 0, 295,
	296, 0, 0, 297, 298, 299, 0, 300, 301, 0,
	302, 303, 0, 304, 305, 526, 306, 307, 308, 310,
	312, 309, 313, 314, 315, 316, 527, 528, 0, 240,
	0, 0, 0, 0, 0, 317, 318, 319, 529, 0,
	0, 0, 320, 0, 321, 0, 0, 1030, 322, 323,
	530, 531, 324, 325, 0, 326, 532, 0, 533, 327,
	0, 328, 329, 330, 331, 332, 534, 535, 536, 387,
	1032, 333, 334, 0, 335, 336, 337, 338, 0, 0,
	0, 0, 339, 340, 342, 0, 1031, 341, 537, 538,
	0, 539, 0, 343, 1033, 540, 1034, 344, 345, 346,
	1035, 347, 0, 0, 0, 348, 349, 350, 351, 352,
	353, 0, 355, 354, 0, 356, 541, 1036, 357, 358,
	1037, 0, 359, 360, 361, 0, 0, 362, 363, 364,
	365, 0, 366, 367, 369, 371, 368, 370, 375, 372,
	373, 374, 377, 0, 376, 1038, 378, 379, 380, 383,
	384, 382, 1039, 381, 0, 0, 1040, 385, 3008, 542,
	386, 543, 388, 389, 0, 0, 390, 0, 0, 0,
	392, 393, 394, 0, 0, 395, 396, 544, 1041, 397,
	1042, 545, 398, 399, 391, 400, 401, 402, 403, 404,
	405, 406, 407, 0, 408, 409, 546, 547, 548, 410,
	549, 411, 412, 0, 413, 0, 414, 415, 416, 417,
	418, 419, 420, 550, 422, 421, 423, 0, 0, 0,
	0, 0, 0, 424, 0, 426, 427, 428, 425, 429,
	430, 431, 432, 0, 433, 434, 435, 1043, 436, 437,
	438, 439, 551, 440, 0, 441, 442, 448, 449, 443,
	444, 450, 451, 452, 453, 454, 0, 456, 457, 455,
	458, 459, 460, 0, 461, 445, 446, 462, 463, 1044,
	464, 465, 552, 0, 466, 0, 467, 468, 469, 470,
	447, 471, 476, 553, 472, 473, 474, 475, 554, 0,
	478, 479, 0, 477, 0, 480, 481, 482, 483, 484,
	485, 311, 486, 0, 487, 555, 556, 557, 558, 0,
	494, 0, 488, 489, 559, 490, 560, 0, 491, 492,
	493, 0, 495, 496, 0, 0, 497, 498, 499, 501,
	502, 500, 503, 0, 504, 0, 0, 505, 506, 507,
	561, 562, 563, 0, 509, 508, 564, 1270, 1269, 0,
	0, 510, 511, 565, 512, 513, 514, 0, 0, 0,
	0, 0, 0, 0, 243, 244, 245, 246, 247, 248,
	0, 249, 250, 0, 0, 0, 0, 0, 515, 0,
	0, 0, 0, 251, 252, 254, 253, 255, 256, 257,
	516, 517, 0, 518, 258, 519, 0, 259, 260, 261,
	262, 263, 0, 0, 0, 264, 520, 521, 522, 0,
	265, 266, 523, 0, 1236, 0, 267, 268, 269, 270,
	271, 272, 273, 0, 0, 275, 276, 277, 274, 0,
	278, 0, 279, 280, 281, 0, 282, 1029, 283, 284,
	0, 0, 0, 0, 0, 0, 2997, 285, 286, 287,
	288, 0, 289, 524, 525, 0, 293, 290, 291, 0,
	294, 292, 0, 295, 296, 0, 0, 297, 298, 299,
	0, 300, 301, 0, 302, 303, 0, 304, 305, 526,
	306, 307, 308, 310, 312, 309, 313, 314, 315, 316,
	527, 528, 0, 240, 0, 0, 0, 0, 0, 317,
	318, 319, 529, 0, 0, 0, 320, 0, 321, 0,
	0, 1030, 322, 323, 530, 531, 324, 325, 0, 326,
	532, 0, 533, 327, 0, 328, 329, 330, 331, 332,
	534, 535, 536, 387, 1032, 333, 334, 0, 335, 336,
	337, 338, 0, 0, 0, 0, 339, 340, 342, 0,
	1031, 341, 537, 538, 0, 539, 0, 343, 1033, 540,
	1034, 344, 345, 346, 1035, 347, 0, 0, 0, 348,
	349, 350, 351, 352, 353, 0, 355, 354, 0, 356,
	541, 1036, 357, 358, 1037, 0, 359, 360, 361, 0,
	0, 362, 363, 364, 365, 0, 366, 367, 369, 371,
	368, 370, 375, 372, 373, 374, 377, 0, 376, 1038,
	378, 379, 380, 383, 384, 382, 1039, 381, 0, 0,
	1040, 385, 0, 542, 386, 543, 388, 389, 0, 0,
	390, 0, 0, 0, 392, 393, 394, 0, 0, 395,
	396, 544, 1041, 397, 1042, 545, 398, 399, 391, 400,
	401, 402, 403, 404, 405, 406, 407, 0, 408, 409,
	546, 547, 548, 410, 549, 411, 412, 0, 413, 0,
	414, 415, 416, 417, 418, 419, 420, 550, 422, 421,
	423, 0, 0, 0, 0, 0, 0, 424, 0, 426,
	427, 428, 425, 429, 430, 431, 432, 0, 433, 434,
	435, 1043, 436, 437, 438, 439, 551, 440, 0, 441,
	442, 448, 449, 443, 444, 450, 451, 452, 453, 454,
	0, 456, 457, 455, 458, 459, 460, 2998, 461, 445,
	446, 462, 463, 1044, 464, 465, 552, 0, 466, 0,
	467, 468, 469, 470, 447, 471, 476, 553, 472, 473,
	474, 475, 554, 0, 478, 479, 0, 477, 0, 480,
	481, 482, 483, 484, 485, 311, 486, 0, 487, 555,
	556, 557, 558, 0, 494, 0, 488, 489, 559, 490,
	560, 0, 491, 492, 493, 0, 495, 496, 0, 0,
	497, 498, 499, 501, 502, 500, 503, 0, 504, 0,
	0, 505, 506, 507, 561, 562, 563, 237, 509, 508,
	564, 0, 0, 0, 0, 510, 511, 565, 512, 513,
	514, 0, 0, 0, 243, 244, 245, 246, 247, 248,
	0, 249, 250, 0, 0, 0, 0, 0, 515, 0,
	0, 0, 0, 251, 252, 254, 253, 255, 256, 257,
	516, 517, 0, 518, 258, 519, 0, 259, 260, 261,
	262, 263, 0, 0, 0, 264, 520, 521, 522, 0,
	265, 266, 523, 0, 0, 0, 267, 268, 269, 270,
	271, 272, 273, 0, 0, 275, 276, 277, 274, 0,
	278, 0, 279, 280, 281, 0, 282, 0, 283, 284,
	0, 0, 0, 0, 0, 0, 0, 285, 286, 287,
	288, 0, 289, 524, 525, 0, 293, 290, 291, 0,
	294, 292, 0, 295, 296, 0, 0, 297, 298, 299,
	0, 300, 301, 0, 302, 303, 0, 304, 305, 526,
	306, 307, 308, 310, 312, 309, 313, 314, 315, 316,
	527, 528, 0, 240, 0, 0, 0, 0, 0, 317,
	318, 319, 529, 0, 0, 0, 320, 0, 321, 0,
	0, 0, 322, 323, 530, 531, 324, 325, 0, 326,
	532, 0, 533, 327, 0, 328, 329, 330, 331, 332,
	534, 535, 536, 387, 0, 333, 334, 0, 335, 336,
	337, 338, 0, 0, 0, 241, 339, 340, 342, 0,
	0, 341, 537, 538, 0, 539, 0, 343, 0, 540,
	0, 344, 345, 346, 0, 347, 0, 0, 0, 348,
	349, 350, 351, 352, 353, 0, 355, 354, 0, 356,
	541, 0, 357, 358, 0, 0, 359, 360, 361, 0,
	0, 362, 363, 364, 365, 0, 366, 367, 369, 371,
	368, 370, 375, 372, 373, 374, 377, 0, 376, 0,
	378, 379, 380, 383, 384, 382, 0, 381, 0, 242,
	0, 385, 0, 542, 386, 543, 388, 389, 0, 0,
	390, 0, 0, 0, 392, 393, 394, 0, 0, 395,
	396, 544, 0, 397, 0, 545, 398, 399, 391, 400,
	401, 402, 403, 404, 405, 406, 407, 0, 408, 409,
	546, 547, 548, 410, 549, 411, 412, 0, 413, 0,
	414, 415, 416, 417, 418, 419, 420, 550, 422, 421,
	423, 0, 0, 0, 0, 0, 0, 424, 0, 426,
	427, 428, 425, 429, 430, 431, 432, 0, 433, 434,
	435, 0, 436, 437, 438, 439, 551, 440, 0, 441,
	442, 448, 449, 443, 444, 450, 451, 452, 453, 454,
	0, 456, 457, 455, 458, 459, 460, 0, 461, 445,
	446, 462, 463, 0, 464, 465, 552, 0, 466, 0,
	467, 468, 469, 470, 447, 471, 476, 553, 472, 473,
	474, 475, 554, 0, 478, 479, 0, 477, 0, 480,
	481, 482, 483, 484, 485, 311, 486, 0, 487, 555,
	556, 557, 558, 0, 494, 0, 488, 489, 559, 490,
	560, 0, 491, 492, 493, 0, 495, 496, 0, 0,
	497, 498, 499, 501, 502, 500, 503, 0, 504, 0,
	0, 505, 506, 507, 561, 562, 563, 0, 509, 508,
	564, 0, 0, 0, 0, 510, 511, 565, 512, 513,
	514, 1467, 0, 1270, 1269, 0, 0, 0, 0, 1267,
	0, 0, 0, 0, 0, 0, 0, 658, 0, 0,
	243, 244, 245, 246, 247, 248, 0, 249, 250, 0,
	0, 0, 0, 0, 515, 0, 0, 0, 0, 251,
	252, 254, 253, 255, 256, 257, 516, 517, 0, 518,
	258, 519, 0, 259, 260, 261, 262, 263, 0, 0,
	0, 264, 520, 521, 522, 0, 265, 266, 523, 0,
	1236, 0, 267, 268, 269, 270, 271, 272, 273, 0,
	0, 275, 276, 277, 274, 0, 278, 0, 279, 280,
	281, 0, 282, 1029, 283, 284, 0, 0, 0, 0,
	0, 0, 0, 285, 286, 287, 288, 0, 289, 524,
	525, 0, 293, 290, 291, 0, 294, 292, 0, 295,
	296, 0, 0, 297, 298, 299, 0, 300, 301, 0,
	302, 303, 0, 304, 305, 526, 306, 307, 308, 310,
	312, 309, 313, 314, 315, 316, 527, 528, 0, 240,
	0, 0, 0, 0, 0, 1466, 318, 319, 529, 0,
	0, 0, 320, 0, 321, 0, 0, 1030, 322, 323,
	530, 531, 324, 325, 0, 326, 532, 0, 533, 327,
	0, 328, 329, 330, 331, 332, 534, 535, 536, 387,
	1032, 333, 334, 0, 335, 336, 337, 338, 0, 0,
	0, 0, 339, 340, 342, 0, 1031, 341, 537, 538,
	0, 539, 0, 343, 1033, 540, 1034, 344, 345, 346,
	1035, 347, 0, 0, 0, 348, 349, 350, 351, 352,
	353, 0, 355, 354, 0, 356, 541, 1036, 357, 358,
	1037, 0, 359, 360, 361, 0, 0, 362, 363, 364,
	365, 0, 366, 367, 369, 371, 368, 370, 375, 372,
	373, 374, 377, 0, 376, 1038, 378, 379, 380, 383,
	384, 382, 1039, 381, 0, 0, 1040, 385, 0, 542,
	386, 543, 388, 389, 0, 0, 390, 0, 0, 0,
	392, 393, 394, 0, 0, 395, 396, 544, 1041, 397,
	1042, 545, 398, 399, 391, 400, 401, 402, 403, 404,
	405, 406, 407, 0, 408, 409, 546, 547, 548, 410,
	549, 411, 412, 0, 413, 0, 414, 415, 416, 417,
	418, 1465, 420, 550, 422, 421, 423, 0, 0, 0,
	0, 0, 0, 424, 0, 426, 427, 428, 425, 429,
	430, 431, 432, 0, 433, 434, 435, 1043, 436, 437,
	438, 439, 551, 440, 0, 441, 442, 448, 449, 443,
	444, 450, 1464, 452, 453, 454, 0, 456, 457, 455,
	458, 459, 460, 0, 461, 445, 446, 462, 463, 1044,
	464, 465, 552, 0, 466, 0, 467, 468, 469, 470,
	447, 471, 476, 553, 472, 473, 474, 475, 554, 0,
	478, 479, 0, 477, 0, 480, 481, 482, 483, 484,
	485, 311, 486, 0, 487, 555, 556, 557, 558, 0,
	494, 0, 488, 489, 559, 490, 560, 0, 491, 492,
	493, 0, 495, 496, 0, 0, 497, 498, 499, 501,
	502, 500, 503, 0, 504, 0, 0, 505, 506, 507,
	561, 562, 563, 0, 509, 508, 564, 0, 0, 0,
	0, 510, 511, 565, 512, 513, 514, 1408, 0, 1270,
	1269, 0, 0, 0, 0, 1267, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 243, 244, 245, 246,
	247, 248, 0, 249, 250, 0, 0, 0, 0, 0,
	515, 0, 0, 0, 0, 251, 252, 254, 253, 255,
	256, 257, 516, 517, 0, 518, 258, 519, 0, 259,
	260, 261, 262, 263, 0, 0, 0, 264, 520, 521,
	522, 0, 265, 266, 523, 0, 1236, 0, 267, 268,
	269, 270, 271, 272, 273, 0, 0, 275, 276, 277,
	274, 0, 278, 0, 279, 280, 281, 0, 282, 1029,
	283, 284, 0, 0, 0, 0, 0, 0, 0, 285,
	286, 287, 288, 0, 289, 524, 525, 0, 293, 290,
	291, 0, 294, 292, 0, 295, 296, 0, 0, 297,
	298, 299, 0, 300, 301, 0, 302, 303, 0, 304,
	305, 526, 306, 307, 308, 310, 312, 309, 313, 314,
	315, 316, 527, 528, 0, 240, 0, 0, 0, 0,
	0, 317, 318, 319, 529, 0, 0, 0, 320, 0,
	321, 0, 0, 1030, 322, 323, 530, 531, 324, 325,
	0, 326, 532, 0, 533, 327, 0, 328, 329, 330,
	331, 332, 1407, 535, 536, 387, 1032, 333, 334, 0,
	335, 336, 337, 338, 0, 0, 0, 0, 339, 340,
	342, 0, 1031, 341, 537, 538, 0, 539, 0, 343,
	1033, 540, 1034, 344, 345, 346, 1035, 347, 0, 0,
	0, 348, 349, 350, 351, 352, 353, 0, 355, 354,
	0, 356, 541, 1036, 357, 358, 1037, 0, 359, 360,
	361, 0, 0, 362, 363, 364, 365, 0, 366, 367,
	369, 371, 368, 370, 375, 372, 373, 374, 377, 0,
	376, 1038, 378, 379, 380, 383, 384, 382, 1039, 381,
	0, 0, 1040, 385, 0, 542, 386, 543, 388, 389,
	0, 0, 390, 0, 0, 0, 392, 393, 394, 0,
	0, 395, 396, 544, 1041, 397, 1042, 545, 398, 399,
	391, 400, 401, 402, 403, 404, 405, 406, 407, 0,
	408, 409, 546, 547, 548, 410, 549, 411, 412, 0,
	413, 0, 414, 415, 416, 417, 418, 419, 420, 550,
	422, 421, 423, 0, 0, 0, 0, 0, 0, 424,
	0, 426, 427, 428, 425, 429, 430, 431, 432, 0,
	433, 434, 435, 1043, 436, 437, 438, 439, 551, 440,
	0, 441, 442, 448, 449, 443, 444, 450, 451, 452,
	453, 454, 0, 456, 457, 455, 458, 459, 460, 0,
	461, 445, 446, 462, 463, 1044, 464, 465, 552, 0,
	466, 0, 467, 468, 469, 470, 447, 471, 476, 553,
	472, 473, 474, 475, 554, 0, 478, 479, 0, 477,
	0, 480, 481, 482, 483, 484, 485, 311, 486, 0,
	487, 555, 556, 557, 558, 0, 494, 0, 488, 489,
	559, 490, 560, 0, 491, 492, 493, 0, 495, 496,
	0, 0, 497, 498, 499, 501, 502, 500, 503, 0,
	504, 0, 0, 505, 506, 507, 561, 562, 563, 0,
	509, 508, 564, 0, 0, 0, 0, 510, 511, 565,
	512, 513, 514, 1339, 0, 1270, 1269, 0, 0, 0,
	0, 1267, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 243, 244, 245, 246, 247, 248, 0, 249,
	250, 0, 0, 0, 0, 0, 515, 0, 0, 0,
	0, 251, 252, 254, 253, 255, 256, 257, 516, 517,
	0, 518, 258, 519, 0, 259, 260, 261, 262, 263,
	0, 0, 0, 264, 520, 521, 522, 0, 265, 266,
	523, 0, 1236, 0, 267, 268, 269, 270, 271, 272,
	273, 0, 0, 275, 276, 277, 274, 0, 278, 0,
	279, 280, 281, 0, 282, 1029, 283, 284, 0, 0,
	0, 0, 0, 0, 0, 285, 286, 287, 288, 0,
	289, 524, 525, 0, 293, 290, 291, 0, 294, 292,
	0, 295, 296, 0, 0, 297, 298, 299, 0, 300,
	301, 0, 302, 303, 0, 304, 305, 526, 306, 307,
	308, 310, 312, 309, 313, 314, 315, 316, 527, 528,
	0, 240, 0, 0, 0, 0, 0, 317, 318, 319,
	529, 0, 0, 0, 320, 0, 321, 0, 0, 1030,
	322, 323, 530, 531, 324, 325, 0, 326, 532, 0,
	533, 327, 0, 328, 329, 330, 331, 332, 1338, 535,
	536, 387, 1032, 333, 334, 0, 335, 336, 337, 338,
	0, 0, 0, 0, 339, 340, 342, 0, 1031, 341,
	537, 538, 0, 539, 0, 343, 1033, 540, 1034, 344,
	345, 346, 1035, 347, 0, 0, 0, 348, 349, 350,
	351, 352, 353, 0, 355, 354, 0, 356, 541, 1036,
	357, 358, 1037, 0, 359, 360, 361, 0, 0, 362,
	363, 364, 365, 0, 366, 367, 369, 371, 368, 370,
	375, 372, 373, 374, 377, 0, 376, 1038, 378, 379,
	380, 383, 384, 382, 1039, 381, 0, 0, 1040, 385,
	0, 542, 386, 543, 388, 389, 0, 0, 390, 0,
	0, 0, 392, 393, 394, 0, 0, 395, 396, 544,
	1041, 397, 1042, 545, 398, 399, 391, 400, 401, 402,
	403, 404, 405, 406, 407, 0, 408, 409, 546, 547,
	548, 410, 549, 411, 412, 0, 413, 0, 414, 415,
	416, 417, 418, 419, 420, 550, 422, 421, 423, 0,
	0, 0, 0, 0, 0, 424, 0, 426, 427, 428,
	425, 429, 430, 431, 432, 0, 433, 434, 435, 1043,
	436, 437, 438, 439, 551, 440, 0, 441, 442, 448,
	449, 443, 444, 450, 451, 452, 453, 454, 0, 456,
	457, 455, 458, 459, 460, 0, 461, 445, 446, 462,
	463, 1044, 464, 465, 552, 0, 466, 0, 467, 468,
	469, 470, 447, 471, 476, 553, 472, 473, 474, 475,
	554, 0, 478, 479, 0, 477, 0, 480, 481, 482,
	483, 484, 485, 311, 486, 0, 487, 555, 556, 557,
	558, 0, 494, 0, 488, 489, 559, 490, 560, 0,
	491, 492, 493, 0, 495, 496, 0, 0, 497, 498,
	499, 501, 502, 500, 503, 0, 504, 0, 0, 505,
	506, 507, 561, 562, 563, 0, 509, 508, 564, 0,
	0, 0, 0, 510, 511, 565, 512, 513, 514, 1303,
	0, 1270, 1269, 0, 0, 0, 0, 1267, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 243, 244,
	245, 246, 247, 248, 0, 249, 250, 0, 0, 0,
	0, 0, 515, 0, 0, 0, 0, 251, 252, 254,
	253, 255, 256, 257, 516, 517, 0, 518, 258, 519,
	0, 259, 260, 261, 262, 263, 0, 0, 0, 264,
	520, 521, 522, 0, 265, 266, 523, 0, 1236, 0,
	267, 268, 269, 270, 271, 272, 273, 0, 0, 275,
	276, 277, 274, 0, 278, 0, 279, 280, 281, 0,
	282, 1029, 283, 284, 0, 0, 0, 0, 0, 0,
	0, 285, 286, 287, 288, 0, 289, 524, 525, 0,
	293, 290, 291, 0, 294, 292, 0, 295, 296, 0,
	0, 297, 298, 299, 0, 300, 301, 0, 302, 303,
	0, 304, 305, 526, 306, 307, 308, 310, 312, 309,
	313, 314, 315, 316, 527, 528, 0, 240, 0, 0,
	0, 0, 0, 317, 318, 319, 529, 0, 0, 0,
	320, 0, 321, 0, 0, 1030, 322, 323, 530, 531,
	324, 325, 0, 326, 532, 0, 533, 327, 0, 328,
	329, 330, 331, 332, 534, 535, 536, 387, 1032, 333,
	334, 0, 335, 336, 337, 338, 0, 0, 0, 0,
	339, 340, 342, 0, 1031, 341, 537, 538, 0, 539,
	0, 343, 1033, 540, 1034, 344, 345, 346, 1035, 347,
	0, 0, 0, 348, 349, 350, 351, 352, 353, 0,
	355, 354, 0, 356, 541, 1036, 357, 358, 1037, 0,
	359, 360, 361, 0, 0, 362, 363, 364, 365, 0,
	366, 367, 369, 371, 368, 370, 375, 372, 373, 374,
	377, 0, 376, 1038, 378, 379, 380, 383, 384, 382,
	1039, 381, 0, 0, 1040, 385, 0, 542, 386, 543,
	388, 389, 0, 0, 390, 0, 0, 0, 392, 393,
	394, 0, 0, 395, 396, 544, 1041, 397, 1042, 545,
	398, 399, 391, 400, 401, 402, 403, 404, 405, 406,
	407, 0, 408, 409, 546, 547, 548, 410, 549, 411,
	412, 0, 413, 0, 414, 415, 416, 417, 418, 419,
	420, 550, 422, 421, 423, 0, 0, 0, 0, 0,
	0, 424, 0, 426, 427, 428, 425, 429, 430, 431,
	432, 0, 433, 434, 435, 1043, 436, 437, 438, 439,
	551, 440, 0, 441, 442, 448, 449, 443, 444, 450,
	451, 452, 453, 454, 0, 456, 457, 455, 458, 459,
	460, 0, 461, 445, 446, 462, 463, 1044, 464, 465,
	552, 0, 466, 0, 467, 468, 469, 470, 447, 471,
	476, 553, 472, 473, 474, 475, 554, 0, 478, 479,
	0, 477, 0, 480, 481, 482, 483, 484, 485, 311,
	486, 0, 487, 555, 556, 557, 558, 0, 494, 0,
	488, 489, 559, 490, 560, 0, 491, 492, 493, 0,
	495, 496, 0, 0, 497, 498, 499, 501, 502, 500,
	503, 0, 504, 0, 0, 505, 506, 507, 561, 562,
	563, 0, 509, 508, 564, 0, 0, 0, 0, 510,
	511, 565, 512, 513, 514, 1265, 0, 1270, 1269, 0,
	0, 0, 0, 1267, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 243, 244, 245, 246, 247, 248,
	0, 249, 250, 0, 0, 0, 0, 0, 515, 0,
	0, 0, 0, 251, 252, 254, 253, 255, 256, 257,
	516, 517, 0, 518, 258, 519, 0, 259, 260, 261,
	262, 263, 0, 0, 0, 264, 520, 521, 522, 0,
	265, 266, 523, 0, 1236, 0, 267, 268, 269, 270,
	271, 272, 273, 0, 0, 275, 276, 277, 274, 0,
	278, 0, 279, 280, 281, 0, 282, 1029, 283, 284,
	0, 0, 0, 0, 0, 0, 0, 285, 286, 287,
	288, 0, 289, 524, 525, 0, 293, 290, 291, 0,
	294, 292, 0, 295, 296, 0, 0, 297, 298, 299,
	0, 300, 301, 0, 302, 303, 0, 304, 305, 526,
	306, 307, 308, 310, 312, 309, 313, 314, 315, 316,
	527, 528, 0, 240, 0, 0, 0, 0, 0, 317,
	318, 319, 529, 0, 0, 0, 320, 0, 321, 0,
	0, 1030, 322, 323, 530, 531, 324, 325, 0, 326,
	532, 0, 533, 327, 0, 328, 329, 330, 331, 332,
	1264, 535, 536, 387, 1032, 333, 334, 0, 335, 336,
	337, 338, 0, 0, 0, 0, 339, 340, 342, 0,
	1031, 341, 537, 538, 0, 539, 0, 343, 1033, 540,
	1034, 344, 345, 346, 1035, 347, 0, 0, 0, 348,
	349, 350, 351, 352, 353, 0, 355, 354, 0, 356,
	541, 1036, 357, 358, 1037, 0, 359, 360, 361, 0,
	0, 362, 363, 364, 365, 0, 366, 367, 369, 371,
	368, 370, 375, 372, 373, 374, 377, 0, 376, 1038,
	378, 379, 380, 383, 384, 382, 1039, 381, 0, 0,
	1040, 385, 0, 542, 386, 543, 388, 389, 0, 0,
	390, 0, 0, 0, 392, 393, 394, 0, 0, 395,
	396, 544, 1041, 397, 1042, 545, 398, 399, 391, 400,
	401, 402, 403, 404, 405, 406, 407, 0, 408, 409,
	546, 547, 548, 410, 549, 411, 412, 0, 413, 0,
	414, 415, 416, 417, 418, 419, 420, 550, 422, 421,
	423, 0, 0, 0, 0, 0, 0, 424, 0, 426,
	427, 428, 425, 429, 430, 431, 432, 0, 433, 434,
	435, 1043, 436, 437, 438, 439, 551, 440, 0, 441,
	442, 448, 449, 443, 444, 450, 451, 452, 453, 454,
	0, 456, 457, 455, 458, 459, 460, 0, 461, 445,
	446, 462, 463, 1044, 464, 465, 552, 0, 466, 0,
	467, 468, 469, 470, 447, 471, 476, 553, 472, 473,
	474, 475, 554, 0, 478, 479, 0, 477, 0, 480,
	481, 482, 483, 484, 485, 311, 486, 0, 487, 555,
	556, 557, 558, 0, 494, 0, 488, 489, 559, 490,
	560, 0, 491, 492, 493, 0, 495, 496, 0, 0,
	497, 498, 499, 501, 502, 500, 503, 0, 504, 0,
	0, 505, 506, 507, 561, 562, 563, 0, 509, 508,
	564, 0, 0, 0, 0, 510, 511, 565, 512, 513,
	514, 1270, 1269, 0, 0, 0, 0, 1267, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 243, 244,
	245, 246, 247, 248, 0, 249, 250, 0, 0, 0,
	0, 0, 515, 0, 0, 0, 0, 251, 252, 254,
	253, 255, 256, 257, 516, 517, 0, 518, 258, 519,
	0, 259, 260, 261, 262, 263, 0, 0, 0, 264,
	520, 521, 522, 0, 265, 266, 523, 0, 1236, 0,
	267, 268, 269, 270, 271, 272, 273, 0, 0, 275,
	276, 277, 274, 0, 278, 0, 279, 280, 281, 0,
	282, 1029, 283, 284, 0, 0, 0, 0, 0, 0,
	0, 285, 286, 287, 288, 0, 289, 524, 525, 0,
	293, 290, 291, 0, 294, 292, 0, 295, 296, 0,
	0, 297, 298, 299, 0, 300, 301, 0, 302, 303,
	0, 304, 305, 526, 306, 307, 308, 310, 312, 309,
	313, 314, 315, 316, 527, 528, 0, 240, 0, 0,
	0, 0, 0, 317, 318, 319, 529, 0, 0, 0,
	320, 0, 321, 0, 0, 1030, 322, 323, 530, 531,
	324, 325, 0, 326, 532, 0, 533, 327, 0, 328,
	329, 330, 331, 332, 534, 535, 536, 387, 1032, 333,
	334, 0, 335, 336, 337, 338, 0, 0, 0, 0,
	339, 340, 342, 0, 1031, 341, 537, 538, 0, 539,
	0, 343, 1033, 540, 1034, 344, 345, 346, 1035, 347,
	0, 0, 0, 348, 349, 350, 351, 352, 353, 0,
	355, 354, 0, 356, 541, 1036, 357, 358, 1037, 0,
	359, 360, 361, 0, 0, 362, 363, 364, 365, 0,
	366, 367, 369, 371, 368, 370, 375, 372, 373, 374,
	377, 0, 376, 1038, 378, 379, 380, 383, 384, 382,
	1039, 381, 0, 0, 1040, 385, 0, 542, 386, 543,
	388, 389, 0, 0, 390, 0, 0, 0, 392, 393,
	394, 0, 0, 395, 396, 544, 1041, 397, 1042, 545,
	398, 399, 391, 400, 401, 402, 403, 404, 405, 406,
	407, 0, 408, 409, 546, 547, 548, 410, 549, 411,
	412, 0, 413, 0, 414, 415, 416, 417, 418, 419,
	420, 550, 422, 421, 423, 0, 0, 0, 0, 0,
	0, 424, 0, 426, 427, 428, 425, 429, 430, 431,
	432, 0, 433, 434, 435, 1043, 436, 437, 438, 439,
	551, 440, 0, 441, 442, 448, 449, 443, 444, 450,
	451, 452, 453, 454, 0, 456, 457, 455, 458, 459,
	460, 0, 461, 445, 446, 462, 463, 1044, 464, 465,
	552, 0, 466, 0, 467, 468, 469, 470, 447, 471,
	476, 553, 472, 473, 474, 475, 554, 0, 478, 479,
	0, 477, 0, 480, 481, 482, 483, 484, 485, 311,
	486, 0, 487, 555, 556, 557, 558, 0, 494, 0,
	488, 489, 559, 490, 560, 0, 491, 492, 493, 0,
	495, 496, 0, 0, 497, 498, 499, 501, 502, 500,
	503, 0, 504, 0, 0, 505, 506, 507, 561, 562,
	563, 0, 509, 508, 564, 1270, 1269, 0, 0, 510,
	511, 565, 512, 513, 514, 0, 0, 0, 0, 0,
	0, 0, 243, 244, 245, 246, 247, 248, 0, 249,
	250, 0, 0, 0, 0, 0, 515, 0, 0, 0,
	0, 251, 252, 254, 253, 255, 256, 257, 516, 517,
	0, 518, 258, 519, 0, 259, 260, 261, 262, 263,
	0, 0, 0, 264, 520, 521, 522, 0, 265, 266,
	523, 0, 1236, 0, 267, 268, 269, 270, 271, 272,
	273, 0, 0, 275, 276, 277, 274, 0, 278, 0,
	279, 280, 281, 0, 282, 1029, 283, 284, 0, 0,
	0, 0, 0, 0, 0, 285, 286, 287, 288, 0,
	289, 524, 525, 1822, 293, 290, 291, 0, 294, 292,
	0, 295, 296, 0, 0, 297, 298, 299, 0, 300,
	301, 0, 302, 303, 0, 304, 305, 526, 306, 307,
	308, 310, 312, 309, 313, 314, 315, 316, 527, 528,
	0, 240, 0, 0, 0, 0, 0, 317, 318, 319,
	529, 0, 0, 0, 320, 0, 321, 0, 0, 1030,
	322, 323, 530, 531, 324, 325, 0, 326, 532, 0,
	533, 327, 0, 328, 329, 330, 331, 332, 534, 535,
	536, 387, 1032, 333, 334, 0, 335, 336, 337, 338,
	0, 0, 0, 0, 339, 340, 342, 0, 1031, 341,
	537, 538, 0, 539, 0, 343, 1033, 540, 1034, 344,
	345, 346, 1035, 347, 0, 0, 0, 348, 349, 350,
	351, 352, 353, 0, 355, 354, 0, 356, 541, 1036,
	357, 358, 1037, 0, 359, 360, 361, 0, 0, 362,
	363, 364, 365, 0, 366, 367, 369, 371, 368, 370,
	375, 372, 373, 374, 377, 0, 376, 1038, 378, 379,
	380, 383, 384, 382, 1039, 381, 0, 0, 1040, 385,
	0, 542, 386, 543, 388, 389, 0, 0, 390, 0,
	0, 0, 392, 393, 394, 0, 0, 395, 396, 544,
	1041, 397, 1042, 545, 398, 399, 391, 400, 401, 402,
	403, 404, 405, 406, 407, 0, 408, 409, 546, 547,
	548, 410, 549, 411, 412, 0, 413, 0, 414, 415,
	416, 417, 418, 419, 420, 550, 422, 421, 423, 0,
	0, 0, 0, 0, 0, 424, 0, 426, 427, 428,
	425, 429, 430, 431, 432, 0, 433, 434, 435, 1043,
	436, 437, 438, 439, 551, 440, 0, 441, 442, 448,
	449, 443, 444, 450, 451, 452, 453, 454, 0, 456,
	457, 455, 458, 459, 460, 0, 461, 445, 446, 462,
	463, 1044, 464, 465, 552, 0, 466, 0, 467, 468,
	469, 470, 447, 471, 476, 553, 472, 473, 474, 475,
	554, 0, 478, 479, 0, 477, 0, 480, 481, 482,
	483, 484, 485, 311, 486, 0, 487, 555, 556, 557,
	558, 0, 494, 0, 488, 489, 559, 490, 560, 0,
	491, 492, 493, 0, 495, 496, 0, 0, 497, 498,
	499, 501, 502, 500, 503, 0, 504, 0, 0, 505,
	506, 507, 561, 562, 563, 0, 509, 508, 564, 1270,
	1269, 0, 0, 510, 511, 565, 512, 513, 514, 0,
	0, 0, 0, 0, 0, 0, 243, 244, 245, 246,
	247, 248, 0, 249, 250, 0, 0, 0, 0, 0,
	515, 0, 0, 0, 0, 251, 252, 254, 253, 255,
	256, 257, 516, 517, 0, 518, 258, 519, 0, 259,
	260, 261, 262, 263, 0, 0, 0, 264, 520, 521,
	522, 0, 265, 266, 523, 0, 1236, 0, 267, 268,
	269, 270, 271, 272, 273, 0, 0, 275, 276, 277,
	274, 0, 278, 0, 279, 280, 281, 0, 282, 1029,
	283, 284, 0, 0, 0, 0, 0, 0, 0, 285,
	286, 287, 288, 0, 289, 524, 525, 0, 293, 290,
	291, 0, 294, 292, 0, 295, 296, 0, 0, 297,
	298, 299, 0, 300, 301, 0, 302, 303, 0, 304,
	305, 526, 306, 307, 308, 310, 312, 309, 313, 314,
	315, 316, 527, 528, 0, 240, 0, 0, 0, 0,
	0, 317, 318, 319, 529, 0, 0, 0, 320, 0,
	321, 0, 0, 1030, 322, 323, 530, 531, 324, 325,
	0, 326, 532, 0, 533, 327, 0, 328, 329, 330,
	331, 332, 534, 535, 536, 387, 1032, 333, 334, 0,
	335, 336, 337, 338, 0, 0, 0, 0, 339, 340,
	342, 0, 1031, 341, 537, 538, 0, 539, 0, 343,
	1033, 540, 1034, 344, 345, 346, 1035, 347, 0, 0,
	0, 348, 349, 350, 351, 352, 353, 0, 355, 354,
	0, 356, 541, 1036, 357, 358, 1037, 0, 359, 360,
	361, 0, 0, 362, 363, 364, 365, 0, 366, 367,
	369, 371, 368, 370, 375, 372, 373, 374, 377, 0,
	376, 1038, 378, 379, 380, 383, 384, 382, 1039, 381,
	0, 0, 1040, 385, 0, 542, 386, 543, 388, 389,
	0, 0, 390, 0, 0, 0, 392, 393, 394, 0,
	0, 395, 396, 544, 1041, 397, 1042, 545, 398, 399,
	391, 400, 401, 402, 403, 404, 405, 406, 407, 0,
	408, 409, 546, 547, 548, 410, 549, 411, 412, 0,
	413, 0, 414, 415, 416, 417, 418, 419, 420, 550,
	422, 421, 423, 0, 0, 0, 0, 0, 0, 424,
	0, 426, 427, 428, 425, 429, 430, 431, 432, 0,
	433, 434, 435, 1043, 436, 437, 438, 439, 551, 440,
	0, 441, 442, 448, 449, 443, 444, 450, 451, 452,
	453, 454, 0, 456, 457, 455, 458, 459, 460, 0,
	461, 445, 446, 462, 463, 1044, 464, 465, 552, 0,
	466, 0, 467, 468, 469, 470, 447, 471, 476, 553,
	472, 473, 474, 475, 554, 0, 478, 479, 0, 477,
	0, 480, 481, 482, 483, 484, 485, 311, 486, 0,
	487, 555, 556, 557, 558, 0, 494, 0, 488, 489,
	559, 490, 560, 0, 491, 492, 493, 0, 495, 496,
	0, 0, 497, 498, 499, 501, 502, 500, 503, 0,
	504, 0, 0, 505, 506, 507, 561, 562, 563, 1270,
	509, 508, 564, 0, 0, 0, 0, 510, 511, 565,
	512, 513, 514, 0, 0, 0, 243, 244, 245, 246,
	247, 248, 0, 249, 250, 0, 0, 0, 0, 0,
	515, 0, 0, 0, 0, 251, 252, 254, 253, 255,
	256, 257, 516, 517, 0, 518, 258, 519, 0, 259,
	260, 261, 262, 263, 0, 0, 0, 264, 520, 521,
	522, 0, 265, 266, 523, 0, 1236, 0, 267, 268,
	269, 270, 271, 272, 273, 0, 0, 275, 276, 277,
	274, 0, 278, 0, 279, 280, 281, 0, 282, 1029,
	283, 284, 0, 0, 0, 0, 0, 0, 0, 285,
	286, 287, 288, 0, 289, 524, 525, 0, 293, 290,
	291, 0, 294, 292, 0, 295, 296, 0, 0, 297,
	298, 299, 0, 300, 301, 0, 302, 303, 0, 304,
	305, 526, 306, 307, 308, 310, 312, 309, 313, 314,
	315, 316, 527, 528, 0, 240, 0, 0, 0, 0,
	0, 317, 318, 319, 529, 0, 0, 0, 320, 0,
	321, 0, 0, 1030, 322, 323, 530, 531, 324, 325,
	0, 326, 532, 0, 533, 327, 0, 328, 329, 330,
	331, 332, 534, 535, 536, 387, 1032, 333, 334, 0,
	335, 336, 337, 338, 0, 0, 0, 0, 339, 340,
	342, 0, 1031, 341, 537, 538, 0, 539, 0, 343,
	1033, 540, 1034, 344, 345, 346, 1035, 347, 0, 0,
	0, 348, 349, 350, 351, 352, 353, 0, 355, 354,
	0, 356, 541, 1036, 357, 358, 1037, 0, 359, 360,
	361, 0, 0, 362, 363, 364, 365, 0, 366, 367,
	369, 371, 368, 370, 375, 372, 373, 374, 377, 0,
	376, 1038, 378, 379, 380, 383, 384, 382, 1039, 381,
	0, 0, 1040, 385, 0, 542, 386, 543, 388, 389,
	0, 0, 390, 0, 0, 0, 392, 393, 394, 0,
	0, 395, 396, 544, 1041, 397, 1042, 545, 398, 399,
	391, 400, 401, 402, 403, 404, 405, 406, 407, 0,
	408, 409, 546, 547, 548, 410, 549, 411, 412, 0,
	413, 0, 414, 415, 416, 417, 418, 419, 420, 550,
	422, 421, 423, 0, 0, 0, 0, 0, 0, 424,
	0, 426, 427, 428, 425, 429, 430, 431, 432, 0,
	433, 434, 435, 1043, 436, 437, 438, 439, 551, 440,
	0, 441, 442, 448, 449, 443, 444, 450, 451, 452,
	453, 454, 0, 456, 457, 455, 458, 459, 460, 0,
	461, 445, 446, 462, 463, 1044, 464, 465, 552, 0,
	466, 0, 467, 468, 469, 470, 447, 471, 476, 553,
	472, 473, 474, 475, 554, 0, 478, 479, 0, 477,
	0, 480, 481, 482, 483, 484, 485, 311, 486, 0,
	487, 555, 556, 557, 558, 0, 494, 0, 488, 489,
	559, 490, 560, 0, 491, 492, 493, 0, 495, 496,
	0, 0, 497, 498, 499, 501, 502, 500, 503, 0,
	504, 0, 0, 505, 506, 507, 561, 562, 563, 237,
	509, 508, 564, 0, 0, 0, 0, 510, 511, 565,
	512, 513, 514, 0, 0, 0, 243, 244, 245, 246,
	247, 248, 0, 249, 250, 0, 0, 0, 0, 0,
	515, 0, 0, 0, 0, 251, 252, 254, 253, 255,
	256, 257, 516, 517, 0, 518, 258, 519, 0, 259,
	260, 261, 262, 263, 0, 0, 0, 264, 520, 521,
	522, 2448, 265, 266, 523, 0, 0, 0, 267, 268,
	269, 270, 271, 272, 273, 0, 0, 275, 276, 277,
	274, 2445, 278, 0, 279, 280, 281, 0, 282, 0,
	283, 284, 0, 0, 0, 0, 0, 0, 0, 285,
	286, 287, 288, 0, 289, 524, 525, 0, 293, 290,
	291, 0, 294, 292, 0, 295, 296, 0, 0, 297,
	298, 299, 0, 300, 301, 0, 302, 303, 0, 2452,
	305, 526, 306, 307, 308, 310, 312, 309, 313, 314,
	315, 316, 527, 528, 0, 2627, 0, 0, 0, 0,
	0, 317, 318, 319, 529, 0, 0, 0, 320, 0,
	321, 2451, 0, 0, 322, 323, 530, 531, 324, 325,
	0, 326, 532, 0, 533, 327, 0, 328, 329, 330,
	331, 332, 534, 535, 536, 387, 0, 333, 334, 0,
	335, 336, 337, 338, 0, 0, 0, 2624, 339, 340,
	342, 0, 0, 341, 537, 538, 0, 539, 0, 2626,
	0, 540, 0, 344, 345, 346, 0, 347, 0, 0,
	0, 348, 349, 350, 351, 352, 353, 0, 355, 354,
	0, 356, 541, 0, 357, 358, 2623, 0, 359, 360,
	361, 0, 0, 362, 363, 364, 365, 0, 366, 367,
	369, 371, 368, 370, 375, 372, 373, 374, 377, 0,
	376, 0, 378, 379, 380, 383, 384, 382, 0, 381,
	0, 0, 0, 385, 0, 542, 386, 543, 388, 389,
	0, 0, 390, 0, 0, 0, 392, 393, 394, 0,
	0, 395, 396, 544, 0, 397, 0, 545, 398, 399,
	391, 400, 401, 402, 403, 404, 405, 406, 407, 0,
	408, 409, 546, 547, 548, 410, 549, 411, 412, 2450,
	413, 0, 414, 415, 416, 417, 418, 419, 420, 550,
	422, 421, 423, 0, 0, 0, 0, 0, 0, 424,
	0, 426, 427, 428, 425, 429, 430, 431, 432, 0,
	433, 434, 435, 0, 436, 437, 438, 439, 551, 440,
	0, 441, 442, 448, 449, 443, 444, 450, 451, 452,
	453, 454, 0, 456, 457, 455, 458, 459, 460, 0,
	461, 445, 446, 462, 463, 0, 464, 465, 552, 0,
	466, 0, 467, 468, 469, 470, 447, 471, 476, 553,
	472, 473, 474, 475, 554, 0, 478, 479, 0, 477,
	0, 480, 481, 482, 483, 484, 485, 311, 486, 0,
	487, 555, 556, 557, 558, 0, 494, 0, 488, 489,
	559, 490, 560, 0, 491, 492, 493, 0, 495, 496,
	0, 2625, 497, 498, 499, 501, 502, 500, 503, 0,
	504, 0, 0, 505, 506, 507, 561, 562, 563, 237,
	509, 508, 564, 0, 0, 0, 0, 510, 511, 565,
	512, 513, 514, 0, 0, 0, 243, 244, 245, 246,
	247, 248, 0, 249, 250, 0, 0, 0, 0, 0,
	515, 0, 0, 0, 0, 251, 252, 254, 253, 255,
	256, 257, 516, 517, 0, 518, 258, 519, 0, 259,
	260, 261, 262, 263, 0, 0, 0, 264, 520, 521,
	522, 2448, 265, 266, 523, 0, 0, 2442, 267, 268,
	269, 270, 271, 272, 273, 0, 0, 275, 276, 277,
	274, 2445, 278, 0, 279, 280, 281, 0, 282, 0,
	283, 284, 0, 0, 0, 0, 0, 0, 0, 285,
	286, 287, 288, 0, 289, 524, 525, 0, 293, 290,
	291, 0, 294, 292, 0, 295, 296, 0, 0, 297,
	298, 299, 0, 300, 301, 0, 302, 303, 0, 2452,
	305, 526, 306, 307, 308, 310, 312, 309, 313, 314,
	315, 316, 527, 528, 0, 0, 0, 0, 0, 0,
	0, 317, 318, 319, 529, 0, 0, 0, 320, 0,
	321, 2451, 0, 0, 322, 323, 530, 531, 324, 325,
	0, 326, 532, 0, 533, 327, 0, 328, 329, 330,
	331, 332, 2441, 535, 536, 387, 0, 333, 334, 0,
	335, 336, 337, 338, 0, 0, 0, 0, 339, 340,
	342, 0, 0, 341, 537, 538, 0, 539, 0, 343,
	0, 540, 0, 344, 345, 346, 0, 347, 0, 0,
	0, 348, 349, 350, 351, 352, 353, 0, 355, 354,
	0, 356, 541, 0, 357, 358, 0, 0, 359, 360,
	361, 0, 0, 362, 363, 364, 365, 0, 366, 367,
	369, 371, 368, 370, 375, 372, 373, 374, 377, 0,
	376, 0, 378, 379, 380, 383, 384, 382, 0, 381,
	0, 0, 0, 385, 0, 542, 386, 543, 388, 389,
	0, 0, 390, 0, 0, 0, 392, 393, 394, 0,
	0, 395, 396, 544, 0, 397, 0, 545, 398, 399,
	391, 400, 401, 402, 403, 404, 405, 406, 407, 0,
	408, 409, 546, 547, 548, 410, 549, 411, 412, 2450,
	413, 0, 414, 415, 416, 417, 418, 419, 420, 550,
	422, 421, 423, 0, 0, 0, 0, 0, 0, 424,
	0, 426, 427, 428, 425, 429, 430, 431, 432, 0,
	433, 434, 435, 0, 436, 437, 438, 439, 551, 440,
	0, 441, 442, 448, 449, 443, 444, 450, 451, 452,
	453, 454, 0, 456, 457, 455, 458, 459, 460, 0,
	461, 445, 446, 462, 463, 0, 464, 465, 552, 0,
	466, 0, 467, 468, 469, 470, 447, 471, 476, 553,
	472, 473, 474, 475, 554, 0, 478, 479, 0, 477,
	0, 480, 481, 482, 483, 484, 485, 311, 486, 0,
	487, 555, 556, 557, 558, 0, 494, 0, 488, 489,
	559, 490, 560, 0, 491, 492, 493, 0, 495, 496,
	0, 2449, 497, 498, 499, 501, 502, 500, 503, 0,
	504, 0, 0, 505, 506, 507, 561, 562, 563, 0,
	509, 508, 564, 1530, 0, 237, 0, 510, 511, 565,
	512, 513, 514, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 243, 244, 245, 246, 247, 248, 0, 249,
	250, 0, 0, 0, 0, 0, 515, 0, 0, 0,
	0, 251, 252, 254, 253, 255, 256, 257, 516, 517,
	0, 518, 258, 519, 0, 259, 260, 261, 262, 263,
	0, 0, 0, 264, 520, 521, 522, 0, 265, 266,
	523, 0, 0, 0, 267, 268, 269, 270, 271, 272,
	273, 0, 0, 275, 276, 277, 274, 0, 278, 0,
	279, 280, 281, 0, 282, 0, 283, 284, 0, 0,
	0, 0, 0, 0, 0, 285, 286, 287, 288, 0,
	289, 524, 525, 0, 293, 290, 291, 0, 294, 292,
	0, 295, 296, 0, 0, 297, 298, 299, 0, 300,
	301, 0, 302, 303, 0, 304, 305, 526, 306, 307,
	308, 310, 312, 309, 313, 314, 315, 316, 527, 528,
	0, 240, 0, 0, 0, 0, 0, 317, 318, 319,
	529, 0, 0, 0, 320, 0, 321, 0, 0, 0,
	322, 323, 530, 531, 324, 325, 0, 326, 532, 0,
	533, 327, 0, 328, 329, 330, 331, 332, 534, 535,
	536, 387, 0, 333, 334, 0, 335, 336, 337, 338,
	0, 0, 0, 241, 339, 340, 342, 0, 0, 341,
	537, 538, 0, 539, 0, 343, 0, 540, 0, 344,
	345, 346, 0, 347, 0, 0, 0, 348, 349, 350,
	351, 352, 353, 0, 355, 354, 0, 356, 541, 0,
	357, 358, 0, 0, 359, 360, 361, 0, 0, 362,
	363, 364, 365, 0, 366, 367, 369, 371, 368, 370,
	375, 372, 373, 374, 377, 0, 376, 0, 378, 379,
	380, 383, 384, 382, 0, 381, 0, 242, 0, 385,
	0, 542, 386, 543, 388, 389, 0, 0, 390, 0,
	0, 0, 392, 393, 394, 0, 0, 395, 396, 544,
	0, 397, 0, 545, 398, 399, 391, 400, 401, 402,
	403, 404, 405, 406, 407, 0, 408, 409, 546, 547,
	548, 410, 549, 411, 412, 0, 413, 0, 414, 415,
	416, 417, 418, 419, 420, 550, 422, 421, 423, 0,
	0, 0, 0, 0, 0, 424, 0, 426, 427, 428,
	425, 429, 430, 431, 432, 0, 433, 434, 435, 0,
	436, 437, 438, 439, 551, 440, 0, 441, 442, 448,
	449, 443, 444, 450, 451, 452, 453, 454, 0, 1533,
	457, 455, 458, 459, 460, 0, 461, 445, 446, 462,
	463, 0, 464, 465, 552, 0, 466, 0, 467, 468,
	469, 470, 447, 471, 476, 553, 472, 473, 474, 475,
	554, 0, 478, 479, 0, 477, 1531, 480, 481, 482,
	483, 484, 485, 311, 486, 0, 487, 555, 556, 557,
	558, 0, 494, 0, 488, 489, 559, 490, 560, 0,
	491, 492, 493, 0, 495, 496, 0, 0, 497, 498,
	499, 501, 502, 500, 503, 0, 504, 0, 0, 505,
	506, 507, 561, 562, 563, 0, 1532, 508, 564, 1240,
	0, 237, 0, 510, 511, 565, 512, 513, 514, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 243, 244,
	245, 246, 247, 248, 0, 249, 250, 0, 0, 0,
	0, 0, 515, 0, 0, 0, 0, 251, 252, 254,
	253, 255, 256, 257, 516, 517, 0, 518, 258, 519,
	0, 259, 260, 261, 262, 263, 0, 0, 0, 264,
	520, 521, 522, 0, 265, 266, 523, 0, 0, 0,
	267, 268, 269, 270, 271, 272, 273, 0, 0, 275,
	276, 277, 274, 0, 278, 0, 279, 280, 281, 0,
	282, 0, 283, 284, 0, 0, 0, 0, 0, 0,
	0, 285, 286, 287, 288, 0, 289, 524, 525, 0,
	293, 290, 291, 0, 294, 292, 0, 295, 296, 0,
	0, 297, 298, 299, 0, 300, 301, 0, 302, 303,
	0, 304, 305, 526, 306, 307, 308, 310, 312, 309,
	313, 314, 315, 316, 527, 528, 0, 240, 0, 0,
	0, 0, 0, 317, 318, 319, 529, 0, 0, 0,
	320, 0, 321, 0, 0, 0, 322, 323, 530, 531,
	324, 325, 0, 326, 532, 0, 533, 327, 0, 328,
	329, 330, 331, 332, 1242, 535, 536, 387, 0, 333,
	334, 0, 335, 336, 337, 338, 0, 0, 0, 241,
	339, 340, 342, 0, 0, 341, 537, 538, 0, 539,
	0, 343, 0, 540, 0, 344, 345, 346, 0, 347,
	0, 0, 0, 348, 349, 350, 351, 352, 353, 0,
	355, 354, 0, 356, 541, 0, 357, 358, 0, 0,
	359, 360, 361, 0, 0, 362, 363, 364, 365, 0,
	366, 367, 369, 371, 368, 370, 375, 372, 373, 374,
	377, 0, 376, 0, 378, 379, 380, 383, 384, 382,
	0, 381, 0, 242, 0, 385, 0, 542, 386, 543,
	388, 389, 0, 0, 390, 0, 0, 1078, 392, 393,
	394, 0, 0, 395, 396, 544, 0, 397, 0, 545,
	398, 399, 391, 400, 401, 402, 403, 404, 405, 406,
	407, 0, 408, 409, 546, 547, 548, 410, 549, 411,
	412, 0, 413, 0, 414, 415, 416, 417, 418, 419,
	420, 550, 422, 421, 423, 0, 0, 0, 0, 0,
	0, 424, 0, 426, 427, 428, 425, 429, 430, 431,
	432, 0, 433, 434, 435, 0, 436, 437, 438, 439,
	551, 440, 0, 441, 442, 448, 449, 443, 444, 450,
	451, 452, 453, 454, 0, 456, 457, 455, 458, 459,
	460, 0, 461, 445, 446, 462, 463, 0, 464, 465,
	552, 0, 466, 0, 467, 468, 469, 470, 447, 471,
	476, 553, 472, 473, 474, 475, 554, 0, 478, 479,
	0, 477, 0, 480, 481, 482, 483, 484, 485, 311,
	486, 0, 487, 555, 556, 557, 558, 0, 494, 0,
	488, 489, 559, 490, 560, 0, 491, 492, 493, 0,
	495, 496, 0, 0, 497, 498, 499, 501, 502, 500,
	503, 0, 504, 0, 0, 505, 506, 507, 561, 562,
	563, 0, 509, 508, 564, 1237, 0, 237, 0, 510,
	511, 565, 512, 513, 514, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 243, 244, 245, 246, 247, 248,
	0, 249, 250, 0, 0, 0, 0, 0, 515, 0,
	0, 0, 0, 251, 252, 254, 253, 255, 256, 257,
	516, 517, 0, 518, 258, 519, 0, 259, 260, 261,
	262, 263, 0, 0, 0, 264, 520, 521, 522, 0,
	265, 266, 523, 0, 0, 0, 267, 268, 269, 270,
	271, 272, 273, 0, 0, 275, 276, 277, 274, 0,
	278, 0, 279, 280, 281, 0, 282, 0, 283, 284,
	0, 0, 0, 0, 0, 0, 0, 285, 286, 287,
	288, 0, 289, 524, 525, 0, 293, 290, 291, 0,
	294, 292, 0, 295, 296, 0, 0, 297, 298, 299,
	0, 300, 301, 0, 302, 303, 0, 304, 305, 526,
	306, 307, 308, 310, 312, 309, 313, 314, 315, 316,
	527, 528, 0, 240, 0, 0, 0, 0, 0, 317,
	318, 319, 529, 0, 0, 0, 320, 0, 321, 0,
	0, 0, 322, 323, 530, 531, 324, 325, 0, 326,
	532, 0, 533, 327, 0, 328, 329, 330, 331, 332,
	1239, 535, 536, 387, 0, 333, 334, 0, 335, 336,
	337, 338, 0, 0, 0, 241, 339, 340, 342, 0,
	0, 341, 537, 538, 0, 539, 0, 343, 0, 540,
	0, 344, 345, 346, 0, 347, 0, 0, 0, 348,
	349, 350, 351, 352, 353, 0, 355, 354, 0, 356,
	541, 0, 357, 358, 0, 0, 359, 360, 361, 0,
	0, 362, 363, 364, 365, 0, 366, 367, 369, 371,
	368, 370, 375, 372, 373, 374, 377, 0, 376, 0,
	378, 379, 380, 383, 384, 382, 0, 381, 0, 242,
	0, 385, 0, 542, 386, 543, 388, 389, 0, 0,
	390, 0, 0, 1078, 392, 393, 394, 0, 0, 395,
	396, 544, 0, 397, 0, 545, 398, 399, 391, 400,
	401, 402, 403, 404, 405, 406, 407, 0, 408, 409,
	546, 547, 548, 410, 549, 411, 412, 0, 413, 0,
	414, 415, 416, 417, 418, 419, 420, 550, 422, 421,
	423, 0, 0, 0, 0, 0, 0, 424, 0, 426,
	427, 428, 425, 429, 430, 431, 432, 0, 433, 434,
	435, 0, 436, 437, 438, 439, 551, 440, 0, 441,
	442, 448, 449, 443, 444, 450, 451, 452, 453, 454,
	0, 456, 457, 455, 458, 459, 460, 0, 461, 445,
	446, 462, 463, 0, 464, 465, 552, 0, 466, 0,
	467, 468, 469, 470, 447, 471, 476, 553, 472, 473,
	474, 475, 554, 0, 478, 479, 0, 477, 0, 480,
	481, 482, 483, 484, 485, 311, 486, 0, 487, 555,
	556, 557, 558, 0, 494, 0, 488, 489, 559, 490,
	560, 0, 491, 492, 493, 0, 495, 496, 0, 0,
	497, 498, 499, 501, 502, 500, 503, 0, 504, 0,
	0, 505, 506, 507, 561, 562, 563, 0, 509, 508,
	564, 1143, 0, 237, 0, 510, 511, 565, 512, 513,
	514, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	243, 244, 245, 246, 247, 248, 0, 249, 250, 0,
	0, 0, 0, 0, 515, 0, 0, 0, 0, 251,
	252, 254, 253, 255, 256, 257, 516, 517, 0, 518,
	258, 519, 0, 259, 260, 261, 262, 263, 0, 0,
	0, 264, 520, 521, 522, 0, 265, 266, 523, 0,
	0, 0, 267, 268, 269, 270, 271, 272, 273, 0,
	0, 275, 276, 277, 274, 0, 278, 0, 279, 280,
	281, 0, 282, 0, 283, 284, 0, 0, 0, 0,
	0, 0, 0, 285, 286, 287, 288, 0, 289, 524,
	525, 0, 293, 290, 291, 0, 294, 292, 0, 295,
	296, 0, 0, 297, 298, 299, 0, 300, 301, 0,
	302, 303, 0, 304, 305, 526, 306, 307, 308, 310,
	312, 309, 313, 314, 315, 316, 527, 528, 0, 240,
	0, 0, 0, 0, 0, 317, 318, 319, 529, 0,
	0, 0, 320, 0, 321, 0, 0, 0, 322, 323,
	530, 531, 324, 325, 0, 326, 532, 0, 533, 327,
	0, 328, 329, 330, 331, 332, 1145, 535, 536, 387,
	0, 333, 334, 0, 335, 336, 337, 338, 0, 0,
	0, 241, 339, 340, 342, 0, 0, 341, 537, 538,
	0, 539, 0, 343, 0, 540, 0, 344, 345, 346,
	0, 347, 0, 0, 0, 348, 349, 350, 351, 352,
	353, 0, 355, 354, 0, 356, 541, 0, 357, 358,
	0, 0, 359, 360, 361, 0, 0, 362, 363, 364,
	365, 0, 366, 367, 369, 371, 368, 370, 375, 372,
	373, 374, 377, 0, 376, 0, 378, 379, 380, 383,
	384, 382, 0, 381, 0, 242, 0, 385, 0, 542,
	386, 543, 388, 389, 0, 0, 390, 0, 0, 1078,
	392, 393, 394, 0, 0, 395, 396, 544, 0, 397,
	0, 545, 398, 399, 391, 400, 401, 402, 403, 404,
	405, 406, 407, 0, 408, 409, 546, 547, 548, 410,
	549, 411, 412, 0, 413, 0, 414, 415, 416, 417,
	418, 419, 420, 550, 422, 421, 423, 0, 0, 0,
	0, 0, 0, 424, 0, 426, 427, 428, 425, 429,
	430, 431, 432, 0, 433, 434, 435, 0, 436, 437,
	438, 439, 551, 440, 0, 441, 442, 448, 449, 443,
	444, 450, 451, 452, 453, 454, 0, 456, 457, 455,
	458, 459, 460, 0, 461, 445, 446, 462, 463, 0,
	464, 465, 552, 0, 466, 0, 467, 468, 469, 470,
	447, 471, 476, 553, 472, 473, 474, 475, 554, 0,
	478, 479, 0, 477, 0, 480, 481, 482, 483, 484,
	485, 311, 486, 0, 487, 555, 556, 557, 558, 0,
	494, 0, 488, 489, 559, 490, 560, 0, 491, 492,
	493, 0, 495, 496, 0, 0, 497, 498, 499, 501,
	502, 500, 503, 0, 504, 0, 0, 505, 506, 507,
	561, 562, 563, 0, 509, 508, 564, 597, 0, 237,
	0, 510, 511, 565, 512, 513, 514, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 243, 244, 245, 596,
	247, 248, 586, 249, 250, 0, 0, 0, 0, 0,
	515, 0, 0, 0, 0, 251, 252, 254, 253, 255,
	256, 257, 516, 517, 0, 518, 258, 519, 0, 259,
	260, 261, 262, 263, 0, 0, 0, 264, 520, 521,
	522, 0, 265, 266, 523, 0, 0, 0, 267, 268,
	269, 270, 271, 272, 273, 0, 0, 275, 276, 277,
	274, 0, 278, 0, 279, 280, 281, 589, 282, 0,
	283, 284, 0, 0, 0, 0, 0, 0, 0, 285,
	286, 287, 288, 0, 289, 524, 525, 0, 293, 290,
	291, 0, 294, 292, 0, 295, 296, 0, 0, 297,
	298, 299, 0, 300, 301, 0, 302, 303, 0, 304,
	305, 526, 306, 307, 308, 310, 312, 309, 313, 314,
	315, 316, 527, 528, 0, 0, 0, 0, 0, 0,
	0, 317, 318, 319, 529, 0, 0, 0, 320, 0,
	321, 0, 0, 0, 322, 323, 530, 531, 324, 325,
	590, 326, 532, 0, 533, 327, 0, 328, 329, 330,
	331, 332, 534, 535, 536, 387, 0, 333, 334, 0,
	335, 336, 337, 338, 0, 0, 0, 0, 339, 340,
	342, 0, 0, 341, 537, 538, 0, 539, 0, 343,
	0, 540, 0, 344, 345, 346, 0, 347, 0, 0,
	0, 348, 349, 350, 351, 352, 353, 0, 355, 354,
	0, 356, 541, 0, 357, 358, 0, 0, 359, 360,
	361, 0, 0, 362, 363, 364, 365, 0, 366, 367,
	369, 371, 368, 370, 375, 372, 373, 374, 377, 0,
	376, 0, 378, 379, 380, 383, 384, 382, 0, 381,
	0, 0, 0, 385, 0, 542, 386, 543, 388, 389,
	0, 0, 390, 0, 0, 0, 392, 393, 394, 0,
	0, 395, 396, 544, 0, 397, 0, 545, 398, 399,
	391, 400, 401, 402, 403, 404, 405, 406, 407, 0,
	408, 409, 546, 547, 548, 410, 549, 411, 412, 0,
	413, 0, 414, 415, 416, 417, 418, 419, 420, 550,
	422, 421, 423, 0, 0, 0, 0, 0, 0, 424,
	0, 426, 427, 428, 425, 429, 430, 431, 432, 0,
	433, 434, 435, 0, 436, 437, 438, 439, 551, 440,
	0, 441, 442, 448, 449, 443, 444, 450, 451, 452,
	453, 454, 591, 456, 457, 455, 458, 459, 460, 0,
	461, 445, 446, 462, 463, 0, 464, 465, 552, 0,
	466, 0, 467, 468, 469, 470, 447, 471, 476, 553,
	472, 473, 474, 475, 554, 0, 478, 479, 0, 477,
	0, 480, 481, 482, 483, 484, 485, 311, 486, 0,
	487, 555, 556, 557, 558, 0, 494, 0, 488, 489,
	559, 490, 560, 0, 491, 492, 493, 0, 495, 496,
	0, 0, 497, 498, 499, 501, 502, 500, 503, 0,
	504, 0, 0, 505, 506, 507, 561, 562, 563, 0,
	509, 508, 564, 585, 0, 237, 0, 510, 511, 565,
	512, 513, 514, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 243, 244, 245, 246, 247, 248, 586, 249,
	250, 0, 0, 0, 0, 0, 515, 0, 0, 0,
	0, 251, 252, 254, 253, 255, 256, 257, 516, 517,
	0, 518, 258, 519, 0, 259, 260, 261, 262, 263,
	0, 0, 0, 264, 520, 521, 522, 0, 265, 266,
	523, 0, 0, 0, 267, 268, 269, 270, 271, 272,
	273, 0, 0, 275, 276, 277, 274, 0, 278, 0,
	279, 280, 281, 589, 282, 0, 283, 284, 0, 0,
	0, 0, 0, 0, 0, 285, 286, 287, 288, 0,
	289, 524, 525, 0, 293, 290, 291, 0, 294, 292,
	0, 295, 296, 0, 0, 297, 298, 299, 0, 300,
	301, 0, 302, 303, 0, 304, 305, 526, 306, 307,
	308, 310, 312, 309, 313, 314, 315, 316, 527, 528,
	0, 0, 0, 0, 0, 0, 0, 317, 318, 319,
	529, 0, 0, 0, 320, 0, 321, 0, 0, 0,
	322, 323, 530, 531, 324, 325, 590, 326, 532, 0,
	533, 327, 0, 328, 329, 330, 331, 332, 534, 535,
	536, 387, 0, 333, 334, 0, 335, 336, 337, 338,
	0, 0, 0, 0, 339, 340, 342, 0, 0, 341,
	537, 538, 0, 539, 0, 343, 0, 540, 0, 344,
	345, 346, 0, 347, 0, 0, 0, 348, 349, 350,
	351, 352, 353, 0, 355, 354, 0, 356, 541, 0,
	357, 358, 0, 0, 359, 360, 361, 0, 0, 362,
	363, 364, 365, 0, 366, 367, 369, 371, 368, 370,
	375, 372, 373, 374, 377, 0, 376, 0, 378, 379,
	380, 383, 384, 382, 0, 381, 0, 0, 0, 385,
	0, 542, 386, 543, 388, 389, 0, 0, 390, 0,
	0, 0, 392, 393, 394, 0, 0, 395, 396, 544,
	0, 397, 0, 545, 398, 399, 391, 400, 401, 402,
	403, 404, 405, 406, 407, 0, 408, 409, 546, 547,
	548, 410, 549, 411, 412, 0, 413, 0, 414, 415,
	416, 417, 418, 419, 420, 550, 422, 421, 423, 0,
	0, 0, 0, 0, 0, 424, 0, 426, 427, 428,
	425, 429, 430, 431, 432, 0, 433, 434, 435, 0,
	436, 437, 438, 439, 551, 440, 0, 441, 442, 448,
	449, 443, 444, 450, 451, 452, 453, 454, 591, 456,
	457, 455, 458, 459, 460, 0, 461, 445, 446, 462,
	463, 0, 464, 465, 552, 0, 466, 0, 467, 468,
	469, 470, 447, 471, 476, 553, 472, 473, 474, 475,
	554, 0, 478, 479, 0, 477, 0, 480, 481, 482,
	483, 484, 485, 311, 486, 0, 487, 555, 556, 557,
	558, 0, 494, 0, 488, 489, 559, 490, 560, 0,
	491, 492, 493, 0, 495, 496, 0, 0, 497, 498,
	499, 501, 502, 500, 503, 0, 504, 0, 0, 505,
	506, 507, 561, 562, 563, 237, 509, 508, 564, 0,
	0, 0, 0, 510, 511, 565, 512, 513, 514, 0,
	0, 0, 243, 244, 245, 246, 247, 248, 0, 249,
	250, 0, 0, 0, 0, 0, 515, 0, 0, 0,
	0, 251, 252, 254, 253, 255, 256, 257, 516, 517,
	0, 518, 258, 519, 0, 259, 260, 261, 262, 263,
	0, 0, 0, 264, 520, 521, 522, 0, 265, 266,
	523, 0, 0, 0, 267, 268, 269, 270, 271, 272,
	273, 0, 0, 275, 276, 277, 274, 0, 278, 0,
	279, 280, 281, 0, 282, 0, 283, 284, 0, 0,
	0, 0, 0, 0, 0, 285, 286, 287, 288, 0,
	289, 524, 525, 0, 293, 290, 291, 0, 294, 292,
	0, 295, 296, 0, 0, 297, 298, 299, 0, 300,
	301, 0, 302, 303, 0, 304, 305, 526, 306, 307,
	308, 310, 312, 309, 313, 314, 315, 316, 527, 528,
	0, 240, 0, 0, 0, 0, 0, 317, 318, 319,
	529, 0, 0, 0, 320, 0, 321, 0, 0, 0,
	322, 323, 530, 531, 324, 325, 0, 326, 532, 0,
	533, 327, 0, 328, 329, 330, 331, 332, 534, 535,
	536, 387, 0, 333, 334, 0, 335, 336, 337, 338,
	0, 0, 0, 241, 339, 340, 342, 0, 0, 341,
	537, 538, 0, 539, 0, 343, 0, 540, 0, 344,
	345, 346, 0, 347, 0, 0, 0, 348, 349, 350,
	351, 352, 353, 0, 355, 354, 0, 356, 541, 0,
	357, 358, 0, 0, 359, 360, 361, 0, 0, 362,
	363, 364, 365, 0, 366, 367, 369, 371, 368, 370,
	375, 372, 373, 374, 377, 0, 376, 0, 378, 379,
	380, 383, 384, 382, 2970, 381, 0, 242, 0, 385,
	0, 542, 386, 543, 388, 389, 0, 0, 390, 0,
	0, 0, 392, 393, 394, 0, 0, 395, 396, 544,
	0, 397, 0, 545, 398, 399, 391, 400, 401, 402,
	403, 404, 405, 406, 407, 0, 408, 409, 546, 547,
	548, 410, 549, 411, 412, 0, 413, 0, 414, 415,
	416, 417, 418, 419, 420, 550, 422, 421, 423, 0,
	0, 0, 0, 0, 0, 424, 0, 426, 427, 428,
	425, 429, 430, 431, 432, 0, 433, 434, 435, 0,
	436, 437, 438, 439, 551, 440, 0, 441, 442, 448,
	449, 443, 444, 450, 451, 452, 453, 454, 0, 456,
	457, 455, 458, 459, 460, 0, 461, 445, 446, 462,
	463, 0, 464, 465, 552, 0, 466, 0, 467, 468,
	469, 470, 447, 471, 476, 553, 472, 473, 474, 475,
	554, 0, 478, 479, 0, 477, 0, 480, 481, 482,
	483, 484, 485, 311, 486, 0, 487, 555, 556, 557,
	558, 0, 494, 0, 488, 489, 559, 490, 560, 0,
	491, 492, 493, 0, 495, 496, 0, 0, 497, 498,
	499, 501, 502, 500, 503, 0, 504, 0, 0, 505,
	506, 507, 561, 562, 563, 237, 509, 508, 564, 0,
	0, 0, 0, 510, 511, 565, 512, 513, 514, 0,
	0, 0, 243, 244, 245, 246, 247, 248, 0, 249,
	250, 0, 0, 0, 0, 0, 515, 0, 0, 0,
	0, 251, 252, 254, 253, 255, 256, 257, 516, 517,
	0, 518, 258, 519, 0, 259, 260, 261, 262, 263,
	0, 0, 0, 264, 520, 521, 522, 0, 265, 266,
	523, 0, 0, 0, 267, 268, 269, 270, 271, 272,
	273, 0, 0, 275, 276, 277, 274, 0, 278, 0,
	279, 280, 281, 0, 282, 0, 283, 284, 0, 0,
	0, 0, 0, 0, 0, 285, 286, 287, 288, 0,
	289, 524, 525, 0, 293, 290, 291, 0, 294, 292,
	0, 295, 296, 0, 0, 297, 298, 299, 0, 300,
	301, 0, 302, 303, 0, 304, 305, 526, 306, 307,
	308, 310, 312, 309, 313, 314, 315, 316, 527, 528,
	0, 240, 0, 0, 0, 0, 0, 317, 318, 319,
	529, 0, 0, 0, 320, 0, 321, 0, 0, 0,
	322, 323, 530, 531, 324, 325, 0, 326, 532, 0,
	533, 327, 0, 328, 329, 330, 331, 332, 534, 535,
	536, 387, 0, 333, 334, 0, 335, 336, 337, 338,
	0, 0, 0, 241, 339, 340, 342, 0, 0, 341,
	537, 538, 0, 539, 0, 343, 0, 540, 0, 344,
	345, 346, 0, 347, 0, 0, 0, 348, 349, 350,
	351, 352, 353, 0, 355, 354, 0, 356, 541, 0,
	357, 358, 0, 0, 359, 360, 361, 0, 0, 362,
	363, 364, 365, 0, 366, 367, 369, 371, 368, 370,
	375, 372, 373, 374, 377, 0, 376, 0, 378, 379,
	380, 383, 384, 382, 0, 381, 0, 242, 0, 385,
	0, 542, 386, 543, 388, 389, 0, 0, 390, 0,
	0, 1078, 392, 393, 394, 0, 0, 395, 396, 544,
	0, 397, 0, 545, 398, 399, 391, 400, 401, 402,
	403, 404, 405, 406, 407, 0, 408, 409, 546, 547,
	548, 410, 549, 411, 412, 0, 413, 0, 414, 415,
	416, 417, 418, 419, 420, 550, 422, 421, 423, 0,
	0, 0, 0, 0, 0, 424, 0, 426, 427, 428,
	425, 429, 430, 431, 432, 0, 433, 434, 435, 0,
	436, 437, 438, 439, 551, 440, 0, 441, 442, 448,
	449, 443, 444, 450, 451, 452, 453, 454, 0, 456,
	457, 455, 458, 459, 460, 0, 461, 445, 446, 462,
	463, 0, 464, 465, 552, 0, 466, 0, 467, 468,
	469, 470, 447, 471, 476, 553, 472, 473, 474, 475,
	554, 0, 478, 479, 0, 477, 0, 480, 481, 482,
	483, 484, 485, 311, 486, 0, 487, 555, 556, 557,
	558, 0, 494, 0, 488, 489, 559, 490, 560, 0,
	491, 492, 493, 0, 495, 496, 0, 0, 497, 498,
	499, 501, 502, 500, 503, 0, 504, 0, 0, 505,
	506, 507, 561, 562, 563, 0, 509, 508, 564, 2559,
	0, 237, 0, 510, 511, 565, 512, 513, 514, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 243, 244,
	245, 246, 247, 248, 0, 249, 250, 0, 0, 0,
	0, 0, 515, 0, 0, 0, 0, 251, 252, 254,
	253, 255, 256, 257, 516, 517, 0, 518, 258, 519,
	0, 259, 260, 261, 262, 263, 0, 0, 0, 264,
	520, 521, 522, 0, 265, 266, 523, 0, 0, 0,
	267, 268, 269, 270, 271, 272, 273, 0, 0, 275,
	276, 277, 274, 0, 278, 0, 279, 280, 281, 0,
	282, 0, 283, 284, 0, 0, 0, 0, 0, 0,
	0, 285, 286, 287, 288, 0, 289, 524, 525, 0,
	293, 290, 291, 0, 294, 292, 0, 295, 296, 0,
	0, 297, 298, 299, 0, 300, 301, 0, 302, 303,
	0, 304, 305, 526, 306, 307, 308, 310, 312, 309,
	313, 314, 315, 316, 527, 528, 0, 240, 0, 0,
	0, 0, 0, 317, 318, 319, 529, 0, 0, 0,
	320, 0, 321, 0, 0, 0, 322, 323, 530, 531,
	324, 325, 0, 326, 532, 0, 533, 327, 0, 328,
	329, 330, 331, 332, 2558, 535, 536, 387, 0, 333,
	334, 0, 335, 336, 337, 338, 0, 0, 0, 241,
	339, 340, 342, 0, 0, 341, 537, 538, 0, 539,
	0, 343, 0, 540, 0, 344, 345, 346, 0, 347,
	0, 0, 0, 348, 349, 350, 351, 352, 353, 0,
	355, 354, 0, 356, 541, 0, 357, 358, 0, 0,
	359, 360, 361, 0, 0, 362, 363, 364, 365, 0,
	366, 367, 369, 371, 368, 370, 375, 372, 373, 374,
	377, 0, 376, 0, 378, 379, 380, 383, 384, 382,
	0, 381, 0, 242, 0, 385, 0, 542, 386, 543,
	388, 389, 0, 0, 390, 0, 0, 0, 392, 393,
	394, 0, 0, 395, 396, 544, 0, 397, 0, 545,
	398, 399, 391, 400, 401, 402, 403, 404, 405, 406,
	407, 0, 408, 409, 546, 547, 548, 410, 549, 411,
	412, 0, 413, 0, 414, 415, 416, 417, 418, 419,
	420, 550, 422, 421, 423, 0, 0, 0, 0, 0,
	0, 424, 0, 426, 427, 428, 425, 429, 430, 431,
	432, 0, 433, 434, 435, 0, 436, 437, 438, 439,
	551, 440, 0, 441, 442, 448, 449, 443, 444, 450,
	451, 452, 453, 454, 0, 456, 457, 455, 458, 459,
	460, 0, 461, 445, 446, 462, 463, 0, 464, 465,
	552, 0, 466, 0, 467, 468, 469, 470, 447, 471,
	476, 553, 472, 473, 474, 475, 554, 0, 478, 479,
	0, 477, 0, 480, 481, 482, 483, 484, 485, 311,
	486, 0, 487, 555, 556, 557, 558, 0, 494, 0,
	488, 489, 559, 490, 560, 0, 491, 492, 493, 0,
	495, 496, 0, 0, 497, 498, 499, 501, 502, 500,
	503, 0, 504, 0, 0, 505, 506, 507, 561, 562,
	563, 0, 509, 508, 564, 2032, 0, 237, 0, 510,
	511, 565, 512, 513, 514, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 243, 244, 245, 246, 247, 248,
	0, 249, 250, 0, 0, 0, 0, 0, 515, 0,
	0, 0, 0, 251, 252, 254, 253, 255, 256, 257,
	516, 517, 0, 518, 258, 519, 0, 259, 260, 261,
	262, 263, 0, 0, 0, 264, 520, 521, 522, 0,
	265, 266, 523, 0, 0, 0, 267, 268, 269, 270,
	271, 272, 273, 0, 0, 275, 276, 277, 274, 0,
	278, 0, 279, 280, 281, 0, 282, 0, 283, 284,
	0, 0, 0, 0, 0, 0, 0, 285, 286, 287,
	288, 0, 289, 524, 525, 0, 293, 290, 291, 0,
	294, 292, 0, 295, 296, 0, 0, 297, 298, 299,
	0, 300, 301, 0, 302, 303, 0, 304, 305, 526,
	306, 307, 308, 310, 312, 309, 313, 314, 315, 316,
	527, 528, 0, 240, 0, 0, 0, 0, 0, 317,
	318, 319, 529, 0, 0, 0, 320, 0, 321, 0,
	0, 0, 322, 323, 530, 531, 324, 325, 0, 326,
	532, 0, 533, 327, 0, 328, 329, 330, 331, 332,
	534, 535, 536, 387, 0, 333, 334, 0, 335, 336,
	337, 338, 0, 0, 0, 241, 339, 340, 342, 0,
	0, 341, 537, 538, 0, 539, 0, 343, 0, 540,
	0, 344, 345, 346, 0, 347, 0, 0, 0, 348,
	349, 350, 351, 352, 353, 0, 355, 354, 0, 356,
	541, 0, 357, 358, 0, 0, 359, 360, 361, 0,
	0, 362, 363, 364, 365, 0, 366, 367, 369, 371,
	368, 370, 375, 372, 373, 374, 377, 0, 376, 0,
	378, 379, 380, 383, 384, 382, 0, 381, 0, 242,
	0, 385, 0, 542, 386, 543, 388, 389, 0, 0,
	390, 0, 0, 0, 392, 393, 394, 0, 0, 395,
	396, 544, 0, 397, 0, 545, 398, 399, 391, 400,
	401, 402, 403, 404, 405, 406, 407, 0, 408, 409,
	546, 547, 548, 410, 549, 411, 412, 0, 413, 0,
	414, 415, 416, 417, 418, 419, 420, 550, 422, 421,
	423, 0, 0, 0, 0, 0, 0, 424, 0, 426,
	427, 428, 425, 429, 430, 431, 432, 0, 433, 434,
	435, 0, 436, 437, 438, 439, 551, 440, 0, 441,
	442, 448, 449, 443, 444, 450, 451, 452, 453, 454,
	0, 456, 457, 455, 458, 459, 460, 0, 461, 445,
	446, 462, 463, 0, 464, 465, 552, 0, 466, 0,
	467, 468, 469, 470, 447, 471, 476, 553, 472, 473,
	474, 475, 554, 0, 478, 479, 0, 477, 0, 480,
	481, 482, 483, 484, 485, 311, 486, 0, 487, 555,
	556, 557, 558, 0, 494, 0, 488, 489, 559, 490,
	560, 0, 491, 492, 493, 0, 495, 496, 0, 0,
	497, 498, 499, 501, 502, 500, 503, 0, 504, 0,
	0, 505, 506, 507, 561, 562, 563, 237, 509, 508,
	564, 0, 0, 0, 0, 510, 511, 565, 512, 513,
	514, 0, 0, 0, 243, 244, 245, 246, 247, 248,
	0, 249, 250, 0, 0, 0, 0, 0, 515, 0,
	0, 0, 0, 251, 252, 254, 253, 255, 256, 257,
	516, 517, 0, 518, 258, 519, 0, 259, 260, 261,
	262, 263, 0, 0, 0, 264, 520, 521, 522, 0,
	265, 266, 523, 0, 0, 0, 267, 268, 269, 270,
	271, 272, 273, 0, 0, 275, 276, 277, 274, 0,
	278, 0, 279, 280, 281, 0, 282, 0, 283, 284,
	0, 0, 0, 0, 0, 0, 0, 285, 286, 287,
	288, 0, 289, 524, 525, 0, 293, 290, 291, 0,
	294, 292, 0, 295, 296, 0, 0, 297, 298, 299,
	0, 300, 301, 0, 302, 303, 0, 304, 305, 526,
	306, 307, 308, 310, 312, 309, 313, 314, 315, 316,
	527, 528, 0, 240, 0, 0, 0, 0, 0, 317,
	318, 319, 529, 0, 0, 0, 320, 0, 321, 0,
	0, 0, 322, 323, 530, 531, 324, 325, 0, 326,
	532, 0, 533, 327, 0, 328, 329, 330, 331, 332,
	534, 535, 536, 387, 0, 333, 334, 0, 335, 336,
	337, 338, 0, 0, 0, 241, 339, 340, 342, 0,
	0, 341, 537, 538, 0, 539, 0, 343, 0, 540,
	0, 344, 345, 346, 0, 347, 0, 0, 0, 348,
	349, 350, 351, 352, 353, 0, 355, 354, 0, 356,
	541, 0, 357, 358, 0, 0, 359, 360, 361, 0,
	0, 362, 363, 364, 365, 0, 366, 367, 369, 371,
	368, 370, 375, 372, 373, 374, 377, 0, 376, 0,
	378, 379, 380, 383, 384, 382, 0, 381, 0, 242,
	0, 385, 0, 542, 386, 543, 388, 389, 0, 0,
	390, 0, 0, 0, 392, 393, 394, 0, 0, 395,
	396, 544, 0, 397, 0, 545, 398, 399, 391, 400,
	401, 402, 403, 404, 405, 406, 407, 0, 408, 409,
	546, 547, 548, 410, 549, 411, 412, 0, 413, 0,
	414, 415, 416, 417, 418, 419, 420, 550, 422, 421,
	423, 0, 0, 0, 0, 0, 0, 424, 0, 426,
	427, 428, 425, 429, 430, 431, 432, 0, 433, 434,
	435, 0, 436, 437, 438, 439, 551, 440, 0, 441,
	442, 448, 449, 443, 444, 450, 451, 452, 453, 454,
	0, 456, 457, 455, 458, 459, 460, 0, 461, 445,
	446, 462, 463, 0, 464, 465, 552, 0, 466, 0,
	467, 468, 469, 470, 447, 471, 476, 553, 472, 473,
	474, 475, 554, 0, 478, 479, 0, 477, 1955, 480,
	481, 482, 483, 484, 485, 311, 486, 0, 487, 555,
	556, 557, 558, 0, 494, 0, 488, 489, 559, 490,
	560, 0, 491, 492, 493, 0, 495, 496, 0, 0,
	497, 498, 499, 501, 502, 500, 503, 0, 504, 0,
	0, 505, 506, 507, 561, 562, 563, 0, 509, 508,
	564, 1960, 0, 237, 0, 510, 511, 565, 512, 513,
	514, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	243, 244, 245, 246, 247, 248, 0, 249, 250, 0,
	0, 0, 0, 0, 515, 0, 0, 0, 0, 251,
	252, 254, 253, 255, 256, 257, 516, 517, 0, 518,
	258, 519, 0, 259, 260, 261, 262, 263, 0, 0,
	0, 264, 520, 521, 522, 0, 265, 266, 523, 0,
	0, 0, 267, 268, 269, 270, 271, 272, 273, 0,
	0, 275, 276, 277, 274, 0, 278, 0, 279, 280,
	281, 0, 282, 0, 283, 284, 0, 0, 0, 0,
	0, 0, 0, 285, 286, 287, 288, 0, 289, 524,
	525, 0, 293, 290, 291, 0, 294, 292, 0, 295,
	296, 0, 0, 297, 298, 299, 0, 300, 301, 0,
	302, 303, 0, 304, 305, 526, 306, 307, 308, 310,
	312, 309, 313, 314, 315, 316, 527, 528, 0, 240,
	0, 0, 0, 0, 0, 317, 318, 319, 529, 0,
	0, 0, 320, 0, 321, 0, 0, 0, 322, 323,
	530, 531, 324, 325, 0, 326, 532, 0, 533, 327,
	0, 328, 329, 330, 331, 332, 1959, 535, 536, 387,
	0, 333, 334, 0, 335, 336, 337, 338, 0, 0,
	0, 241, 339, 340, 342, 0, 0, 341, 537, 538,
	0, 539, 0, 343, 0, 540, 0, 344, 345, 346,
	0, 347, 0, 0, 0, 348, 349, 350, 351, 352,
	353, 0, 355, 354, 0, 356, 541, 0, 357, 358,
	0, 0, 359, 360, 361, 0, 0, 362, 363, 364,
	365, 0, 366, 367, 369, 371, 368, 370, 375, 372,
	373, 374, 377, 0, 376, 0, 378, 379, 380, 383,
	384, 382, 0, 381, 0, 242, 0, 385, 0, 542,
	386, 543, 388, 389, 0, 0, 390, 0, 0, 0,
	392, 393, 394, 0, 0, 395, 396, 544, 0, 397,
	0, 545, 398, 399, 391, 400, 401, 402, 403, 404,
	405, 406, 407, 0, 408, 409, 546, 547, 548, 410,
	549, 411, 412, 0, 413, 0, 414, 415, 416, 417,
	418, 419, 420, 550, 422, 421, 423, 0, 0, 0,
	0, 0, 0, 424, 0, 426, 427, 428, 425, 429,
	430, 431, 432, 0, 433, 434, 435, 0, 436, 437,
	438, 439, 551, 440, 0, 441, 442, 448, 449, 443,
	444, 450, 451, 452, 453, 454, 0, 456, 457, 455,
	458, 459, 460, 0, 461, 445, 446, 462, 463, 0,
	464, 465, 552, 0, 466, 0, 467, 468, 469, 470,
	447, 471, 476, 553, 472, 473, 474, 475, 554, 0,
	478, 479, 0, 477, 0, 480, 481, 482, 483, 484,
	485, 311, 486, 0, 487, 555, 556, 557, 558, 0,
	494, 0, 488, 489, 559, 490, 560, 0, 491, 492,
	493, 0, 495, 496, 0, 0, 497, 498, 499, 501,
	502, 500, 503, 0, 504, 0, 0, 505, 506, 507,
	561, 562, 563, 0, 509, 508, 564, 1948, 0, 237,
	0, 510, 511, 565, 512, 513, 514, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 243, 244, 245, 246,
	247, 248, 0, 249, 250, 0, 0, 0, 0, 0,
	515, 0, 0, 0, 0, 251, 252, 254, 253, 255,
	256, 257, 516, 517, 0, 518, 258, 519, 0, 259,
	260, 261, 262, 263, 0, 0, 0, 264, 520, 521,
	522, 0, 265, 266, 523, 0, 0, 0, 267, 268,
	269, 270, 271, 272, 273, 0, 0, 275, 276, 277,
	274, 0, 278, 0, 279, 280, 281, 0, 282, 0,
	283, 284, 0, 0, 0, 0, 0, 0, 0, 285,
	286, 287, 288, 0, 289, 524, 525, 0, 293, 290,
	291, 0, 294, 292, 0, 295, 296, 0, 0, 297,
	298, 299, 0, 300, 301, 0, 302, 303, 0, 304,
	305, 526, 306, 307, 308, 310, 312, 309, 313, 314,
	315, 316, 527, 528, 0, 240, 0, 0, 0, 0,
	0, 317, 318, 319, 529, 0, 0, 0, 320, 0,
	321, 0, 0, 0, 322, 323, 530, 531, 324, 325,
	0, 326, 532, 0, 533, 327, 0, 328, 329, 330,
	331, 332, 1950, 535, 536, 387, 0, 333, 334, 0,
	335, 336, 337, 338, 0, 0, 0, 241, 339, 340,
	342, 0, 0, 341, 537, 538, 0, 539, 0, 343,
	0, 540, 0, 344, 345, 346, 0, 347, 0, 0,
	0, 348, 349, 350, 351, 352, 353, 0, 355, 354,
	0, 356, 541, 0, 357, 358, 0, 0, 359, 360,
	361, 0, 0, 362, 363, 364, 365, 0, 366, 367,
	369, 371, 368, 370, 375, 372, 373, 374, 377, 0,
	376, 0, 378, 379, 380, 383, 384, 382, 0, 381,
	0, 242, 0, 385, 0, 542, 386, 543, 388, 389,
	0, 0, 390, 0, 0, 0, 392, 393, 394, 0,
	0, 395, 396, 544, 0, 397, 0, 545, 398, 399,
	391, 400, 401, 402, 403, 404, 405, 406, 407, 0,
	408, 409, 546, 547, 548, 410, 549, 411, 412, 0,
	413, 0, 414, 415, 416, 417, 418, 419, 420, 550,
	422, 421, 423, 0, 0, 0, 0, 0, 0, 424,
	0, 426, 427, 428, 425, 429, 430, 431, 432, 0,
	433, 434, 435, 0, 436, 437, 438, 439, 551, 440,
	0, 441, 442, 448, 449, 443, 444, 450, 451, 452,
	453, 454, 0, 456, 457, 455, 458, 459, 460, 0,
	461, 445, 446, 462, 463, 0, 464, 465, 552, 0,
	466, 0, 467, 468, 469, 470, 447, 471, 476, 553,
	472, 473, 474, 475, 554, 0, 478, 479, 0, 477,
	0, 480, 481, 482, 483, 484, 485, 311, 486, 0,
	487, 555, 556, 557, 558, 0, 494, 0, 488, 489,
	559, 490, 560, 0, 491, 492, 493, 0, 495, 496,
	0, 0, 497, 498, 499, 501, 502, 500, 503, 0,
	504, 0, 0, 505, 506, 507, 561, 562, 563, 0,
	509, 508, 564, 1400, 0, 237, 0, 510, 511, 565,
	512, 513, 514, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 243, 244, 245, 246, 247, 248, 0, 249,
	250, 0, 0, 0, 0, 0, 515, 0, 0, 0,
	0, 251, 252, 254, 253, 255, 256, 257, 516, 517,
	0, 518, 258, 519, 0, 259, 260, 261, 262, 263,
	0, 0, 0, 264, 520, 521, 522, 0, 265, 266,
	523, 0, 0, 0, 267, 268, 269, 270, 271, 272,
	273, 0, 0, 275, 276, 277, 274, 0, 278, 0,
	279, 280, 281, 0, 282, 0, 283, 284, 0, 0,
	0, 0, 0, 0, 0, 285, 286, 287, 288, 0,
	289, 524, 525, 0, 293, 290, 291, 0, 294, 292,
	0, 295, 296, 0, 0, 297, 298, 299, 0, 300,
	301, 0, 302, 303, 0, 304, 305, 526, 306, 307,
	308, 310, 312, 309, 313, 314, 315, 316, 527, 528,
	0, 240, 0, 0, 0, 0, 0, 317, 318, 319,
	529, 0, 0, 0, 320, 0, 321, 0, 0, 0,
	322, 323, 530, 531, 324, 325, 0, 326, 532, 0,
	533, 327, 0, 328, 329, 330, 331, 332, 1399, 535,
	536, 387, 0, 333, 334, 0, 335, 336, 337, 338,
	0, 0, 0, 241, 339, 340, 342, 0, 0, 341,
	537, 538, 0, 539, 0, 343, 0, 540, 0, 344,
	345, 346, 0, 347, 0, 0, 0, 348, 349, 350,
	351, 352, 353, 0, 355, 354, 0, 356, 541, 0,
	357, 358, 0, 0, 359, 360, 361, 0, 0, 362,
	363, 364, 365, 0, 366, 367, 369, 371, 368, 370,
	375, 372, 373, 374, 377, 0, 376, 0, 378, 379,
	380, 383, 384, 382, 0, 381, 0, 242, 0, 385,
	0, 542, 386, 543, 388, 389, 0, 0, 390, 0,
	0, 0, 392, 393, 394, 0, 0, 395, 396, 544,
	0, 397, 0, 545, 398, 399, 391, 400, 401, 402,
	403, 404, 405, 406, 407, 0, 408, 409, 546, 547,
	548, 410, 549, 411, 412, 0, 413, 0, 414, 415,
	416, 417, 418, 419, 420, 550, 422, 421, 423, 0,
	0, 0, 0, 0, 0, 424, 0, 426, 427, 428,
	425, 429, 430, 431, 432, 0, 433, 434, 435, 0,
	436, 437, 438, 439, 551, 440, 0, 441, 442, 448,
	449, 443, 444, 450, 451, 452, 453, 454, 0, 456,
	457, 455, 458, 459, 460, 0, 461, 445, 446, 462,
	463, 0, 464, 465, 552, 0, 466, 0, 467, 468,
	469, 470, 447, 471, 476, 553, 472, 473, 474, 475,
	554, 0, 478, 479, 0, 477, 0, 480, 481, 482,
	483, 484, 485, 311, 486, 0, 487, 555, 556, 557,
	558, 0, 494, 0, 488, 489, 559, 490, 560, 0,
	491, 492, 493, 0, 495, 496, 0, 0, 497, 498,
	499, 501, 502, 500, 503, 0, 504, 0, 0, 505,
	506, 507, 561, 562, 563, 0, 509, 508, 564, 1391,
	0, 237, 0, 510, 511, 565, 512, 513, 514, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 243, 244,
	245, 246, 247, 248, 0, 249, 250, 0, 0, 0,
	0, 0, 515, 0, 0, 0, 0, 251, 252, 254,
	253, 255, 256, 257, 516, 517, 0, 518, 258, 519,
	0, 259, 260, 261, 262, 263, 0, 0, 0, 264,
	520, 521, 522, 0, 265, 266, 523, 0, 0, 0,
	267, 268, 269, 270, 271, 272, 273, 0, 0, 275,
	276, 277, 274, 0, 278, 0, 279, 280, 281, 0,
	282, 0, 283, 284, 0, 0, 0, 0, 0, 0,
	0, 285, 286, 287, 288, 0, 289, 524, 525, 0,
	293, 290, 291, 0, 294, 292, 0, 295, 296, 0,
	0, 297, 298, 299, 0, 300, 301, 0, 302, 303,
	0, 304, 305, 526, 306, 307, 308, 310, 312, 309,
	313, 314, 315, 316, 527, 528, 0, 240, 0, 0,
	0, 0, 0, 317, 318, 319, 529, 0, 0, 0,
	320, 0, 321, 0, 0, 0, 322, 323, 530, 531,
	324, 325, 0, 326, 532, 0, 533, 327, 0, 328,
	329, 330, 331, 332, 1390, 535, 536, 387, 0, 333,
	334, 0, 335, 336, 337, 338, 0, 0, 0, 241,
	339, 340, 342, 0, 0, 341, 537, 538, 0, 539,
	0, 343, 0, 540, 0, 344, 345, 346, 0, 347,
	0, 0, 0, 348, 349, 350, 351, 352, 353, 0,
	355, 354, 0, 356, 541, 0, 357, 358, 0, 0,
	359, 360, 361, 0, 0, 362, 363, 364, 365, 0,
	366, 367, 369, 371, 368, 370, 375, 372, 373, 374,
	377, 0, 376, 0, 378, 379, 380, 383, 384, 382,
	0, 381, 0, 242, 0, 385, 0, 542, 386, 543,
	388, 389, 0, 0, 390, 0, 0, 0, 392, 393,
	394, 0, 0, 395, 396, 544, 0, 397, 0, 545,
	398, 399, 391, 400, 401, 402, 403, 404, 405, 406,
	407, 0, 408, 409, 546, 547, 548, 410, 549, 411,
	412, 0, 413, 0, 414, 415, 416, 417, 418, 419,
	420, 550, 422, 421, 423, 0, 0, 0, 0, 0,
	0, 424, 0, 426, 427, 428, 425, 429, 430, 431,
	432, 0, 433, 434, 435, 0, 436, 437, 438, 439,
	551, 440, 0, 441, 442, 448, 449, 443, 444, 450,
	451, 452, 453, 454, 0, 456, 457, 455, 458, 459,
	460, 0, 461, 445, 446, 462, 463, 0, 464, 465,
	552, 0, 466, 0, 467, 468, 469, 470, 447, 471,
	476, 553, 472, 473, 474, 475, 554, 0, 478, 479,
	0, 477, 0, 480, 481, 482, 483, 484, 485, 311,
	486, 0, 487, 555, 556, 557, 558, 0, 494, 0,
	488, 489, 559, 490, 560, 0, 491, 492, 493, 0,
	495, 496, 0, 0, 497, 498, 499, 501, 502, 500,
	503, 0, 504, 0, 0, 505, 506, 507, 561, 562,
	563, 0, 509, 508, 564, 1388, 0, 237, 0, 510,
	511, 565, 512, 513, 514, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 243, 244, 245, 246, 247, 248,
	0, 249, 250, 0, 0, 0, 0, 0, 515, 0,
	0, 0, 0, 251, 252, 254, 253, 255, 256, 257,
	516, 517, 0, 518, 258, 519, 0, 259, 260, 261,
	262, 263, 0, 0, 0, 264, 520, 521, 522, 0,
	265, 266, 523, 0, 0, 0, 267, 268, 269, 270,
	271, 272, 273, 0, 0, 275, 276, 277, 274, 0,
	278, 0, 279, 280, 281, 0, 282, 0, 283, 284,
	0, 0, 0, 0, 0, 0, 0, 285, 286, 287,
	288, 0, 289, 524, 525, 0, 293, 290, 291, 0,
	294, 292, 0, 295, 296, 0, 0, 297, 298, 299,
	0, 300, 301, 0, 302, 303, 0, 304, 305, 526,
	306, 307, 308, 310, 312, 309, 313, 314, 315, 316,
	527, 528, 0, 240, 0, 0, 0, 0, 0, 317,
	318, 319, 529, 0, 0, 0, 320, 0, 321, 0,
	0, 0, 322, 323, 530, 531, 324, 325, 0, 326,
	532, 0, 533, 327, 0, 328, 329, 330, 331, 332,
	1387, 535, 536, 387, 0, 333, 334, 0, 335, 336,
	337, 338, 0, 0, 0, 241, 339, 340, 342, 0,
	0, 341, 537, 538, 0, 539, 0, 343, 0, 540,
	0, 344, 345, 346, 0, 347, 0, 0, 0, 348,
	349, 350, 351, 352, 353, 0, 355, 354, 0, 356,
	541, 0, 357, 358, 0, 0, 359, 360, 361, 0,
	0, 362, 363, 364, 365, 0, 366, 367, 369, 371,
	368, 370, 375, 372, 373, 374, 377, 0, 376, 0,
	378, 379, 380, 383, 384, 382, 0, 381, 0, 242,
	0, 385, 0, 542, 386, 543, 388, 389, 0, 0,
	390, 0, 0, 0, 392, 393, 394, 0, 0, 395,
	396, 544, 0, 397, 0, 545, 398, 399, 391, 400,
	401, 402, 403, 404, 405, 406, 407, 0, 408, 409,
	546, 547, 548, 410, 549, 411, 412, 0, 413, 0,
	414, 415, 416, 417, 418, 419, 420, 550, 422, 421,
	423, 0, 0, 0, 0, 0, 0, 424, 0, 426,
	427, 428, 425, 429, 430, 431, 432, 0, 433, 434,
	435, 0, 436, 437, 438, 439, 551, 440, 0, 441,
	442, 448, 449, 443, 444, 450, 451, 452, 453, 454,
	0, 456, 457, 455, 458, 459, 460, 0, 461, 445,
	446, 462, 463, 0, 464, 465, 552, 0, 466, 0,
	467, 468, 469, 470, 447, 471, 476, 553, 472, 473,
	474, 475, 554, 0, 478, 479, 0, 477, 0, 480,
	481, 482, 483, 484, 485, 311, 486, 0, 487, 555,
	556, 557, 558, 0, 494, 0, 488, 489, 559, 490,
	560, 0, 491, 492, 493, 0, 495, 496, 0, 0,
	497, 498, 499, 501, 502, 500, 503, 0, 504, 0,
	0, 505, 506, 507, 561, 562, 563, 0, 509, 508,
	564, 1384, 0, 237, 0, 510, 511, 565, 512, 513,
	514, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	243, 244, 245, 246, 247, 248, 0, 249, 250, 0,
	0, 0, 0, 0, 515, 0, 0, 0, 0, 251,
	252, 254, 253, 255, 256, 257, 516, 517, 0, 518,
	258, 519, 0, 259, 260, 261, 262, 263, 0, 0,
	0, 264, 520, 521, 522, 0, 265, 266, 523, 0,
	0, 0, 267, 268, 269, 270, 271, 272, 273, 0,
	0, 275, 276, 277, 274, 0, 278, 0, 279, 280,
	281, 0, 282, 0, 283, 284, 0, 0, 0, 0,
	0, 0, 0, 285, 286, 287, 288, 0, 289, 524,
	525, 0, 293, 290, 291, 0, 294, 292, 0, 295,
	296, 0, 0, 297, 298, 299, 0, 300, 301, 0,
	302, 303, 0, 304, 305, 526, 306, 307, 308, 310,
	312, 309, 313, 314, 315, 316, 527, 528, 0, 240,
	0, 0, 0, 0, 0, 317, 318, 319, 529, 0,
	0, 0, 320, 0, 321, 0, 0, 0, 322, 323,
	530, 531, 324, 325, 0, 326, 532, 0, 533, 327,
	0, 328, 329, 330, 331, 332, 1383, 535, 536, 387,
	0, 333, 334, 0, 335, 336, 337, 338, 0, 0,
	0, 241, 339, 340, 342, 0, 0, 341, 537, 538,
	0, 539, 0, 343, 0, 540, 0, 344, 345, 346,
	0, 347, 0, 0, 0, 348, 349, 350, 351, 352,
	353, 0, 355, 354, 0, 356, 541, 0, 357, 358,
	0, 0, 359, 360, 361, 0, 0, 362, 363, 364,
	365, 0, 366, 367, 369, 371, 368, 370, 375, 372,
	373, 374, 377, 0, 376, 0, 378, 379, 380, 383,
	384, 382, 0, 381, 0, 242, 0, 385, 0, 542,
	386, 543, 388, 389, 0, 0, 390, 0, 0, 0,
	392, 393, 394, 0, 0, 395, 396, 544, 0, 397,
	0, 545, 398, 399, 391, 400, 401, 402, 403, 404,
	405, 406, 407, 0, 408, 409, 546, 547, 548, 410,
	549, 411, 412, 0, 413, 0, 414, 415, 416, 417,
	418, 419, 420, 550, 422, 421, 423, 0, 0, 0,
	0, 0, 0, 424, 0, 426, 427, 428, 425, 429,
	430, 431, 432, 0, 433, 434, 435, 0, 436, 437,
	438, 439, 551, 440, 0, 441, 442, 448, 449, 443,
	444, 450, 451, 452, 453, 454, 0, 456, 457, 455,
	458, 459, 460, 0, 461, 445, 446, 462, 463, 0,
	464, 465, 552, 0, 466, 0, 467, 468, 469, 470,
	447, 471, 476, 553, 472, 473, 474, 475, 554, 0,
	478, 479, 0, 477, 0, 480, 481, 482, 483, 484,
	485, 311, 486, 0, 487, 555, 556, 557, 558, 0,
	494, 0, 488, 489, 559, 490, 560, 0, 491, 492,
	493, 0, 495, 496, 0, 0, 497, 498, 499, 501,
	502, 500, 503, 0, 504, 0, 0, 505, 506, 507,
	561, 562, 563, 0, 509, 508, 564, 1341, 0, 237,
	0, 510, 511, 565, 512, 513, 514, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 243, 244, 245, 246,
	247, 248, 0, 249, 250, 0, 0, 0, 0, 0,
	515, 0, 0, 0, 0, 251, 252, 254, 253, 255,
	256, 257, 516, 517, 0, 518, 258, 519, 0, 259,
	260, 261, 262, 263, 0, 0, 0, 264, 520, 521,
	522, 0, 265, 266, 523, 0, 0, 0, 267, 268,
	269, 270, 271, 272, 273, 0, 0, 275, 276, 277,
	274, 0, 278, 0, 279, 280, 281, 0, 282, 0,
	283, 284, 0, 0, 0, 0, 0, 0, 0, 285,
	286, 287, 288, 0, 289, 524, 525, 0, 293, 290,
	291, 0, 294, 292, 0, 295, 296, 0, 0, 297,
	298, 299, 0, 300, 301, 0, 302, 303, 0, 304,
	305, 526, 306, 307, 308, 310, 312, 309, 313, 314,
	315, 316, 527, 528, 0, 240, 0, 0, 0, 0,
	0, 317, 318, 319, 529, 0, 0, 0, 320, 0,
	321, 0, 0, 0, 322, 323, 530, 531, 324, 325,
	0, 326, 532, 0, 533, 327, 0, 328, 329, 330,
	331, 332, 534, 535, 536, 387, 0, 333, 334, 0,
	335, 336, 337, 338, 0, 0, 0, 241, 339, 340,
	342, 0, 0, 341, 537, 538, 0, 539, 0, 343,
	0, 540, 0, 344, 345, 346, 0, 347, 0, 0,
	0, 348, 349, 350, 351, 352, 353, 0, 355, 354,
	0, 356, 541, 0, 357, 358, 0, 0, 359, 360,
	361, 0, 0, 362, 363, 364, 365, 0, 366, 367,
	369, 371, 368, 370, 375, 372, 373, 374, 377, 0,
	376, 0, 378, 379, 380, 383, 384, 382, 0, 381,
	0, 242, 0, 385, 0, 542, 386, 543, 388, 389,
	0, 0, 390, 0, 0, 0, 392, 393, 394, 0,
	0, 395, 396, 544, 0, 397, 0, 545, 398, 399,
	391, 400, 401, 402, 403, 404, 405, 406, 407, 0,
	408, 409, 546, 547, 548, 410, 549, 411, 412, 0,
	413, 0, 414, 415, 416, 417, 418, 419, 420, 550,
	422, 421, 423, 0, 0, 0, 0, 0, 0, 424,
	0, 426, 427, 428, 425, 429, 430, 431, 432, 0,
	433, 434, 435, 0, 436, 437, 438, 439, 551, 440,
	0, 441, 442, 448, 449, 443, 444, 450, 451, 452,
	453, 454, 0, 456, 457, 455, 458, 459, 460, 0,
	461, 445, 446, 462, 463, 0, 464, 465, 552, 0,
	466, 0, 467, 468, 469, 470, 447, 471, 476, 553,
	472, 473, 474, 475, 554, 0, 478, 479, 0, 477,
	0, 480, 481, 482, 483, 484, 485, 311, 486, 0,
	487, 555, 556, 557, 558, 0, 494, 0, 488, 489,
	559, 490, 560, 0, 491, 492, 493, 0, 495, 496,
	0, 0, 497, 498, 499, 501, 502, 500, 503, 0,
	504, 0, 0, 505, 506, 507, 561, 562, 563, 0,
	509, 508, 564, 1258, 0, 237, 0, 510, 511, 565,
	512, 513, 514, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 243, 244, 245, 246, 247, 248, 0, 249,
	250, 0, 0, 0, 0, 0, 515, 0, 0, 0,
	0, 251, 252, 254, 253, 255, 256, 257, 516, 517,
	0, 518, 258, 519, 0, 259, 260, 261, 262, 263,
	0, 0, 0, 264, 520, 521, 522, 0, 265, 266,
	523, 0, 0, 0, 267, 268, 269, 270, 271, 272,
	273, 0, 0, 275, 276, 277, 274, 0, 278, 0,
	279, 280, 281, 0, 282, 0, 283, 284, 0, 0,
	0, 0, 0, 0, 0, 285, 286, 287, 288, 0,
	289, 524, 525, 0, 293, 290, 291, 0, 294, 292,
	0, 295, 296, 0, 0, 297, 298, 299, 0, 300,
	301, 0, 302, 303, 0, 304, 305, 526, 306, 307,
	308, 310, 312, 309, 313, 314, 315, 316, 527, 528,
	0, 240, 0, 0, 0, 0, 0, 317, 318, 319,
	529, 0, 0, 0, 320, 0, 321, 0, 0, 0,
	322, 323, 530, 531, 324, 325, 0, 326, 532, 0,
	533, 327, 0, 328, 329, 330, 331, 332, 534, 535,
	536, 387, 0, 333, 334, 0, 335, 336, 337, 338,
	0, 0, 0, 241, 339, 340, 342, 0, 0, 341,
	537, 538, 0, 539, 0, 343, 0, 540, 0, 344,
	345, 346, 0, 347, 0, 0, 0, 348, 349, 350,
	351, 352, 353, 0, 355, 354, 0, 356, 541, 0,
	357, 358, 0, 0, 359, 360, 361, 0, 0, 362,
	363, 364, 365, 0, 366, 367, 369, 371, 368, 370,
	375, 372, 373, 374, 377, 0, 376, 0, 378, 379,
	380, 383, 384, 382, 0, 381, 0, 242, 0, 385,
	0, 542, 386, 543, 388, 389, 0, 0, 390, 0,
	0, 0, 392, 393, 394, 0, 0, 395, 396, 544,
	0, 397, 0, 545, 398, 399, 391, 400, 401, 402,
	403, 404, 405, 406, 407, 0, 408, 409, 546, 547,
	548, 410, 549, 411, 412, 0, 413, 0, 414, 415,
	416, 417, 418, 419, 420, 550, 422, 421, 423, 0,
	0, 0, 0, 0, 0, 424, 0, 426, 427, 428,
	425, 429, 430, 431, 432, 0, 433, 434, 435, 0,
	436, 437, 438, 439, 551, 440, 0, 441, 442, 448,
	449, 443, 444, 450, 451, 452, 453, 454, 0, 456,
	457, 455, 458, 459, 460, 0, 461, 445, 446, 462,
	463, 0, 464, 465, 552, 0, 466, 0, 467, 468,
	469, 470, 447, 471, 476, 553, 472, 473, 474, 475,
	554, 0, 478, 479, 0, 477, 0, 480, 481, 482,
	483, 484, 485, 311, 486, 0, 487, 555, 556, 557,
	558, 0, 494, 0, 488, 489, 559, 490, 560, 0,
	491, 492, 493, 0, 495, 496, 0, 0, 497, 498,
	499, 501, 502, 500, 503, 0, 504, 0, 0, 505,
	506, 507, 561, 562, 563, 0, 509, 508, 564, 1251,
	0, 237, 0, 510, 511, 565, 512, 513, 514, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 243, 244,
	245, 246, 247, 248, 0, 249, 250, 0, 0, 0,
	0, 0, 515, 0, 0, 0, 0, 251, 252, 254,
	253, 255, 256, 257, 516, 517, 0, 518, 258, 519,
	0, 259, 260, 261, 262, 263, 0, 0, 0, 264,
	520, 521, 522, 0, 265, 266, 523, 0, 0, 0,
	267, 268, 269, 270, 271, 272, 273, 0, 0, 275,
	276, 277, 274, 0, 278, 0, 279, 280, 281, 0,
	282, 0, 283, 284, 0, 0, 0, 0, 0, 0,
	0, 285, 286, 287, 288, 0, 289, 524, 525, 0,
	293, 290, 291, 0, 294, 292, 0, 295, 296, 0,
	0, 297, 298, 299, 0, 300, 301, 0, 302, 303,
	0, 304, 305, 526, 306, 307, 308, 310, 312, 309,
	313, 314, 315, 316, 527, 528, 0, 240, 0, 0,
	0, 0, 0, 317, 318, 319, 529, 0, 0, 0,
	320, 0, 321, 0, 0, 0, 322, 323, 530, 531,
	324, 325, 0, 326, 532, 0, 533, 327, 0, 328,
	329, 330, 331, 332, 1253, 535, 536, 387, 0, 333,
	334, 0, 335, 336, 337, 338, 0, 0, 0, 241,
	339, 340, 342, 0, 0, 341, 537, 538, 0, 539,
	0, 343, 0, 540, 0, 344, 345, 346, 0, 347,
	0, 0, 0, 348, 349, 350, 351, 352, 353, 0,
	355, 354, 0, 356, 541, 0, 357, 358, 0, 0,
	359, 360, 361, 0, 0, 362, 363, 364, 365, 0,
	366, 367, 369, 371, 368, 370, 375, 372, 373, 374,
	377, 0, 376, 0, 378, 379, 380, 383, 384, 382,
	0, 381, 0, 242, 0, 385, 0, 542, 386, 543,
	388, 389, 0, 0, 390, 0, 0, 0, 392, 393,
	394, 0, 0, 395, 396, 544, 0, 397, 0, 545,
	398, 399, 391, 400, 401, 402, 403, 404, 405, 406,
	407, 0, 408, 409, 546, 547, 548, 410, 549, 411,
	412, 0, 413, 0, 414, 415, 416, 417, 418, 419,
	420, 550, 422, 421, 423, 0, 0, 0, 0, 0,
	0, 424, 0, 426, 427, 428, 425, 429, 430, 431,
	432, 0, 433, 434, 435, 0, 436, 437, 438, 439,
	551, 440, 0, 441, 442, 448, 449, 443, 444, 450,
	451, 452, 453, 454, 0, 456, 457, 455, 458, 459,
	460, 0, 461, 445, 446, 462, 463, 0, 464, 465,
	552, 0, 466, 0, 467, 468, 469, 470, 447, 471,
	476, 553, 472, 473, 474, 475, 554, 0, 478, 479,
	0, 477, 0, 480, 481, 482, 483, 484, 485, 311,
	486, 0, 487, 555, 556, 557, 558, 0, 494, 0,
	488, 489, 559, 490, 560, 0, 491, 492, 493, 0,
	495, 496, 0, 0, 497, 498, 499, 501, 502, 500,
	503, 0, 504, 0, 0, 505, 506, 507, 561, 562,
	563, 0, 509, 508, 564, 567, 0, 237, 0, 510,
	511, 565, 512, 513, 514, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 243, 244, 245, 246, 247, 248,
	0, 249, 250, 0, 0, 0, 0, 0, 515, 0,
	0, 0, 0, 251, 252, 254, 253, 255, 256, 257,
	516, 517, 0, 518, 258, 519, 0, 259, 260, 261,
	262, 263, 0, 0, 0, 264, 520, 521, 522, 0,
	265, 266, 523, 0, 0, 0, 267, 268, 269, 270,
	271, 272, 273, 0, 0, 275, 276, 277, 274, 0,
	278, 0, 279, 280, 281, 0, 282, 0, 283, 284,
	0, 0, 0, 0, 0, 0, 0, 285, 286, 287,
	288, 0, 289, 524, 525, 0, 293, 290, 291, 0,
	294, 292, 0, 295, 296, 0, 0, 297, 298, 299,
	0, 300, 301, 0, 302, 303, 0, 304, 305, 526,
	306, 307, 308, 310, 312, 309, 313, 314, 315, 316,
	527, 528, 0, 240, 0, 0, 0, 0, 0, 317,
	318, 319, 529, 0, 0, 0, 320, 0, 321, 0,
	0, 0, 322, 323, 530, 531, 324, 325, 0, 326,
	532, 0, 533, 327, 0, 328, 329, 330, 331, 332,
	534, 535, 536, 387, 0, 333, 334, 0, 335, 336,
	337, 338, 0, 0, 0, 241, 339, 340, 342, 0,
	0, 341, 537, 538, 0, 539, 0, 343, 0, 540,
	0, 344, 345, 346, 0, 347, 0, 0, 0, 348,
	349, 350, 351, 352, 353, 0, 355, 354, 0, 356,
	541, 0, 357, 358, 0, 0, 359, 360, 361, 0,
	0, 362, 363, 364, 365, 0, 366, 367, 369, 371,
	368, 370, 375, 372, 373, 374, 377, 0, 376, 0,
	378, 379, 380, 383, 384, 382, 0, 381, 0, 242,
	0, 385, 0, 542, 386, 543, 388, 389, 0, 0,
	390, 0, 0, 0, 392, 393, 394, 0, 0, 395,
	396, 544, 0, 397, 0, 545, 398, 399, 391, 400,
	401, 402, 403, 404, 405, 406, 407, 0, 408, 409,
	546, 547, 548, 410, 549, 411, 412, 0, 413, 0,
	414, 415, 416, 417, 418, 419, 420, 550, 422, 421,
	423, 0, 0, 0, 0, 0, 0, 424, 0, 426,
	427, 428, 425, 429, 430, 431, 432, 0, 433, 434,
	435, 0, 436, 437, 438, 439, 551, 440, 0, 441,
	442, 448, 449, 443, 444, 450, 451, 452, 453, 454,
	0, 456, 457, 455, 458, 459, 460, 0, 461, 445,
	446, 462, 463, 0, 464, 465, 552, 0, 466, 0,
	467, 468, 469, 470, 447, 471, 476, 553, 472, 473,
	474, 475, 554, 0, 478, 479, 0, 477, 0, 480,
	481, 482, 483, 484, 485, 311, 486, 0, 487, 555,
	556, 557, 558, 0, 494, 0, 488, 489, 559, 490,
	560, 0, 491, 492, 493, 0, 495, 496, 0, 0,
	497, 498, 499, 501, 502, 500, 503, 0, 504, 0,
	0, 505, 506, 507, 561, 562, 563, 0, 509, 508,
	564, 228, 0, 237, 0, 510, 511, 565, 512, 513,
	514, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	243, 244, 245, 246, 247, 248, 0, 249, 250, 0,
	0, 0, 0, 0, 515, 0, 0, 0, 0, 251,
	252, 254, 253, 255, 256, 257, 516, 517, 0, 518,
	258, 519, 0, 259, 260, 261, 262, 263, 0, 0,
	0, 264, 520, 521, 522, 0, 265, 266, 523, 0,
	0, 0, 267, 268, 269, 270, 271, 272, 273, 0,
	0, 275, 276, 277, 274, 0, 278, 0, 279, 280,
	281, 0, 282, 0, 283, 284, 0, 0, 0, 0,
	0, 0, 0, 285, 286, 287, 288, 0, 289, 524,
	525, 0, 293, 290, 291, 0, 294, 292, 0, 295,
	296, 0, 0, 297, 298, 299, 0, 300, 301, 0,
	302, 303, 0, 304, 305, 526, 306, 307, 308, 310,
	312, 309, 313, 314, 315, 316, 527, 528, 0, 240,
	0, 0, 0, 0, 0, 317, 318, 319, 529, 0,
	0, 0, 320, 0, 321, 0, 0, 0, 322, 323,
	530, 531, 324, 325, 0, 326, 532, 0, 533, 327,
	0, 328, 329, 330, 331, 332, 534, 535, 536, 387,
	0, 333, 334, 0, 335, 336, 337, 338, 0, 0,
	0, 241, 339, 340, 342, 0, 0, 341, 537, 538,
	0, 539, 0, 343, 0, 540, 0, 344, 345, 346,
	0, 347, 0, 0, 0, 348, 349, 350, 351, 352,
	353, 0, 355, 354, 0, 356, 541, 0, 357, 358,
	0, 0, 359, 360, 361, 0, 0, 362, 363, 364,
	365, 0, 366, 367, 369, 371, 368, 370, 375, 372,
	373, 374, 377, 0, 376, 0, 378, 379, 380, 383,
	384, 382, 0, 381, 0, 242, 0, 385, 0, 542,
	386, 543, 388, 389, 0, 0, 390, 0, 0, 0,
	392, 393, 394, 0, 0, 395, 396, 544, 0, 397,
	0, 545, 398, 399, 391, 400, 401, 402, 403, 404,
	405, 406, 407, 0, 408, 409, 546, 547, 548, 410,
	549, 411, 412, 0, 413, 0, 414, 415, 416, 417,
	418, 419, 420, 550, 422, 421, 423, 0, 0, 0,
	0, 0, 0, 424, 0, 426, 427, 428, 425, 429,
	430, 431, 432, 0, 433, 434, 435, 0, 436, 437,
	438, 439, 551, 440, 0, 441, 442, 448, 449, 443,
	444, 450, 451, 452, 453, 454, 0, 456, 457, 455,
	458, 459, 460, 0, 461, 445, 446, 462, 463, 0,
	464, 465, 552, 0, 466, 0, 467, 468, 469, 470,
	447, 471, 476, 553, 472, 473, 474, 475, 554, 0,
	478, 479, 0, 477, 0, 480, 481, 482, 483, 484,
	485, 311, 486, 0, 487, 555, 556, 557, 558, 0,
	494, 0, 488, 489, 559, 490, 560, 0, 491, 492,
	493, 0, 495, 496, 0, 0, 497, 498, 499, 501,
	502, 500, 503, 0, 504, 0, 0, 505, 506, 507,
	561, 562, 563, 237, 509, 508, 564, 0, 0, 0,
	0, 510, 511, 565, 512, 513, 514, 0, 0, 0,
	243, 244, 245, 246, 247, 248, 0, 249, 250, 0,
	0, 0, 0, 0, 515, 0, 0, 0, 0, 251,
	252, 254, 253, 255, 256, 257, 516, 517, 0, 518,
	258, 519, 0, 259, 260, 261, 262, 263, 0, 0,
	0, 264, 520, 521, 522, 0, 265, 266, 523, 0,
	0, 0, 267, 268, 269, 270, 271, 272, 273, 0,
	0, 275, 276, 277, 274, 0, 278, 0, 279, 280,
	281, 0, 282, 0, 283, 284, 0, 0, 0, 0,
	0, 0, 0, 285, 286, 287, 288, 0, 289, 524,
	525, 0, 293, 290, 291, 0, 294, 292, 0, 295,
	296, 0, 0, 297, 298, 299, 0, 300, 301, 0,
	302, 303, 0, 304, 305, 526, 306, 307, 308, 310,
	312, 309, 313, 314, 315, 316, 527, 528, 0, 240,
	0, 0, 0, 0, 0, 317, 318, 319, 529, 0,
	0, 0, 320, 0, 321, 0, 0, 0, 322, 323,
	530, 531, 324, 325, 0, 326, 532, 0, 533, 327,
	0, 328, 329, 330, 331, 332, 534, 535, 536, 387,
	0, 333, 334, 0, 335, 336, 337, 338, 0, 0,
	0, 241, 339, 340, 342, 0, 0, 341, 537, 538,
	0, 539, 0, 343, 0, 540, 0, 344, 345, 346,
	0, 347, 0, 0, 0, 348, 349, 350, 351, 352,
	353, 0, 355, 354, 0, 356, 541, 0, 357, 358,
	0, 0, 359, 360, 361, 0, 0, 362, 363, 364,
	365, 0, 366, 367, 369, 371, 368, 370, 375, 372,
	373, 374, 377, 0, 376, 0, 378, 379, 380, 383,
	384, 382, 0, 381, 0, 242, 0, 385, 0, 542,
	386, 543, 388, 389, 0, 0, 390, 0, 0, 0,
	392, 393, 394, 0, 0, 395, 396, 544, 0, 397,
	0, 545, 398, 399, 391, 400, 401, 402, 403, 404,
	405, 406, 407, 0, 408, 409, 546, 547, 548, 410,
	549, 411, 412, 0, 413, 0, 414, 415, 416, 417,
	418, 419, 420, 550, 422, 421, 423, 0, 0, 0,
	0, 0, 0, 424, 0, 426, 427, 428, 425, 429,
	430, 431, 432, 0, 433, 434, 435, 0, 436, 437,
	438, 439, 551, 440, 0, 441, 442, 448, 449, 443,
	444, 450, 451, 452, 453, 454, 0, 456, 457, 455,
	458, 459, 460, 0, 461, 445, 446, 462, 463, 0,
	464, 465, 552, 0, 466, 0, 467, 468, 469, 470,
	447, 471, 476, 553, 472, 473, 474, 475, 554, 0,
	478, 479, 0, 477, 0, 480, 481, 482, 483, 484,
	485, 311, 486, 0, 487, 555, 556, 557, 558, 0,
	494, 0, 488, 489, 559, 490, 560, 0, 491, 492,
	493, 0, 495, 496, 0, 0, 497, 498, 499, 501,
	502, 500, 503, 0, 504, 0, 0, 505, 506, 507,
	561, 562, 563, 237, 509, 508, 564, 0, 0, 0,
	0, 510, 511, 565, 512, 513, 514, 0, 0, 0,
	243, 244, 245, 246, 247, 248, 0, 249, 250, 0,
	0, 0, 0, 0, 515, 0, 0, 0, 0, 251,
	252, 254, 253, 255, 256, 257, 516, 517, 0, 518,
	258, 519, 0, 259, 260, 261, 262, 263, 0, 0,
	0, 264, 520, 521, 522, 0, 265, 266, 523, 0,
	0, 0, 267, 268, 269, 270, 271, 272, 273, 0,
	0, 275, 276, 277, 274, 0, 278, 0, 279, 280,
	281, 589, 282, 0, 283, 284, 0, 0, 0, 0,
	0, 0, 0, 285, 286, 287, 288, 0, 289, 524,
	525, 0, 293, 290, 291, 0, 294, 292, 0, 295,
	296, 0, 0, 297, 298, 299, 0, 300, 301, 0,
	302, 303, 0, 304, 305, 526, 306, 307, 308, 310,
	312, 309, 313, 314, 315, 316, 527, 528, 0, 0,
	0, 0, 0, 0, 0, 317, 318, 319, 529, 0,
	0, 0, 320, 0, 321, 0, 0, 0, 322, 323,
	530, 531, 324, 325, 590, 326, 532, 0, 533, 327,
	0, 328, 329, 330, 331, 332, 534, 535, 536, 387,
	0, 333, 334, 0, 335, 336, 337, 338, 0, 0,
	0, 0, 339, 340, 342, 0, 0, 341, 537, 538,
	0, 539, 0, 343, 0, 540, 0, 344, 345, 346,
	0, 347, 0, 0, 0, 348, 349, 350, 351, 352,
	353, 0, 355, 354, 0, 356, 541, 0, 357, 358,
	0, 0, 359, 360, 361, 0, 0, 362, 363, 364,
	365, 0, 366, 367, 369, 371, 368, 370, 375, 372,
	373, 374, 377, 0, 376, 0, 378, 379, 380, 383,
	384, 382, 0, 381, 0, 0, 0, 385, 0, 542,
	386, 543, 388, 389, 0, 0, 390, 0, 0, 0,
	392, 393, 394, 0, 0, 395, 396, 544, 0, 397,
	0, 545, 398, 399, 391, 400, 401, 402, 403, 404,
	405, 406, 407, 0, 408, 409, 546, 547, 548, 410,
	549, 411, 412, 0, 413, 0, 414, 415, 416, 417,
	418, 419, 420, 550, 422, 421, 423, 0, 0, 0,
	0, 0, 0, 424, 0, 426, 427, 428, 425, 429,
	430, 431, 432, 0, 433, 434, 435, 0, 436, 437,
	438, 439, 551, 440, 0, 441, 442, 448, 449, 443,
	444, 450, 451, 452, 453, 454, 591, 456, 457, 455,
	458, 459, 460, 0, 461, 445, 446, 462, 463, 0,
	464, 465, 552, 0, 466, 0, 467, 468, 469, 470,
	447, 471, 476, 553, 472, 473, 474, 475, 554, 0,
	478, 479, 0, 477, 0, 480, 481, 482, 483, 484,
	485, 311, 486, 0, 487, 555, 556, 557, 558, 0,
	494, 0, 488, 489, 559, 490, 560, 0, 491, 492,
	493, 0, 495, 496, 0, 0, 497, 498, 499, 501,
	502, 500, 503, 0, 504, 0, 0, 505, 506, 507,
	561, 562, 563, 237, 509, 508, 564, 0, 0, 0,
	0, 510, 511, 565, 512, 513, 514, 0, 0, 0,
	243, 244, 245, 246, 247, 248, 0, 249, 250, 0,
	0, 0, 0, 0, 515, 0, 0, 0, 0, 251,
	252, 254, 253, 255, 256, 257, 516, 517, 0, 518,
	258, 519, 0, 259, 260, 261, 262, 263, 0, 0,
	0, 264, 520, 521, 522, 0, 265, 266, 523, 0,
	0, 0, 267, 268, 269, 270, 271, 272, 273, 0,
	0, 275, 276, 277, 274, 0, 278, 0, 279, 280,
	281, 0, 282, 0, 283, 284, 0, 0, 0, 0,
	0, 0, 0, 285, 286, 2063, 288, 0, 289, 524,
	525, 0, 293, 290, 291, 0, 294, 292, 0, 295,
	296, 0, 0, 297, 298, 299, 0, 300, 301, 0,
	302, 303, 0, 304, 305, 526, 306, 307, 308, 310,
	312, 309, 313, 314, 315, 316, 527, 528, 0, 240,
	0, 0, 0, 0, 0, 317, 318, 319, 529, 0,
	0, 0, 320, 0, 321, 0, 0, 0, 322, 323,
	530, 531, 324, 325, 0, 326, 532, 0, 533, 327,
	0, 328, 329, 330, 331, 332, 534, 535, 536, 387,
	0, 333, 334, 0, 335, 336, 337, 338, 0, 0,
	0, 241, 339, 340, 342, 0, 0, 341, 537, 538,
	0, 539, 0, 343, 0, 540, 0, 344, 345, 346,
	0, 347, 0, 0, 0, 348, 349, 350, 351, 352,
	353, 0, 355, 354, 0, 356, 541, 0, 357, 358,
	0, 0, 359, 360, 361, 0, 0, 362, 363, 364,
	365, 0, 366, 367, 369, 371, 368, 370, 375, 372,
	373, 374, 377, 0, 376, 0, 378, 379, 380, 383,
	384, 382, 0, 381, 0, 242, 0, 385, 0, 542,
	386, 543, 388, 389, 0, 0, 390, 0, 0, 0,
	392, 393, 394, 0, 0, 395, 396, 544, 0, 397,
	0, 545, 398, 399, 391, 400, 401, 402, 403, 404,
	405, 406, 407, 0, 408, 409, 546, 547, 548, 410,
	549, 411, 412, 0, 413, 0, 414, 415, 416, 417,
	418, 419, 420, 550, 422, 421, 423, 0, 0, 0,
	0, 0, 0, 424, 0, 426, 427, 428, 425, 429,
	430, 431, 432, 0, 433, 434, 435, 0, 436, 437,
	438, 439, 551, 440, 0, 441, 442, 448, 449, 443,
	444, 450, 451, 452, 453, 454, 0, 456, 457, 455,
	458, 459, 460, 0, 461, 445, 446, 462, 463, 0,
	464, 465, 552, 0, 466, 0, 467, 468, 469, 470,
	447, 471, 476, 553, 472, 473, 474, 475, 554, 0,
	478, 479, 0, 477, 0, 480, 481, 482, 483, 484,
	485, 311, 486, 0, 487, 555, 556, 557, 558, 0,
	494, 0, 488, 489, 559, 490, 560, 0, 491, 492,
	493, 0, 495, 496, 0, 0, 497, 498, 499, 501,
	502, 500, 503, 0, 504, 0, 0, 505, 506, 507,
	561, 562, 563, 237, 509, 508, 564, 0, 0, 0,
	0, 510, 511, 565, 512, 513, 514, 0, 0, 0,
	243, 244, 245, 246, 247, 248, 0, 249, 250, 0,
	0, 0, 0, 0, 515, 0, 0, 0, 0, 251,
	252, 254, 253, 255, 256, 257, 516, 517, 0, 518,
	258, 519, 0, 259, 260, 261, 262, 263, 0, 0,
	0, 264, 520, 521, 522, 0, 265, 266, 523, 0,
	0, 0, 267, 268, 269, 270, 271, 272, 273, 0,
	0, 275, 276, 277, 274, 0, 278, 0, 279, 280,
	281, 0, 282, 0, 283, 284, 0, 0, 0, 0,
	0, 0, 0, 285, 286, 2061, 288, 0, 289, 524,
	525, 0, 293, 290, 291, 0, 294, 292, 0, 295,
	296, 0, 0, 297, 298, 299, 0, 300, 301, 0,
	302, 303, 0, 304, 305, 526, 306, 307, 308, 310,
	312, 309, 313, 314, 315, 316, 527, 528, 0, 240,
	0, 0, 0, 0, 0, 317, 318, 319, 529, 0,
	0, 0, 320, 0, 321, 0, 0, 0, 322, 323,
	530, 531, 324, 325, 0, 326, 532, 0, 533, 327,
	0, 328, 329, 330, 331, 332, 534, 535, 536, 387,
	0, 333, 334, 0, 335, 336, 337, 338, 0, 0,
	0, 241, 339, 340, 342, 0, 0, 341, 537, 538,
	0, 539, 0, 343, 0, 540, 0, 344, 345, 346,
	0, 347, 0, 0, 0, 348, 349, 350, 351, 352,
	353, 0, 355, 354, 0, 356, 541, 0, 357, 358,
	0, 0, 359, 360, 361, 0, 0, 362, 363, 364,
	365, 0, 366, 367, 369, 371, 368, 370, 375, 372,
	373, 374, 377, 0, 376, 0, 378, 379, 380, 383,
	384, 382, 0, 381, 0, 242, 0, 385, 0, 542,
	386, 543, 388, 389, 0, 0, 390, 0, 0, 0,
	392, 393, 394, 0, 0, 395, 396, 544, 0, 397,
	0, 545, 398, 399, 391, 400, 401, 402, 403, 404,
	405, 406, 407, 0, 408, 409, 546, 547, 548, 410,
	549, 411, 412, 0, 413, 0, 414, 415, 416, 417,
	418, 419, 420, 550, 422, 421, 423, 0, 0, 0,
	0, 0, 0, 424, 0, 426, 427, 428, 425, 429,
	430, 431, 432, 0, 433, 434, 435, 0, 436, 437,
	438, 439, 551, 440, 0, 441, 442, 448, 449, 443,
	444, 450, 451, 452, 453, 454, 0, 456, 457, 455,
	458, 459, 460, 0, 461, 445, 446, 462, 463, 0,
	464, 465, 552, 0, 466, 0, 467, 468, 469, 470,
	447, 471, 476, 553, 472, 473, 474, 475, 554, 0,
	478, 479, 0, 477, 0, 480, 481, 482, 483, 484,
	485, 311, 486, 0, 487, 555, 556, 557, 558, 0,
	494, 0, 488, 489, 559, 490, 560, 0, 491, 492,
	493, 0, 495, 496, 0, 0, 497, 498, 499, 501,
	502, 500, 503, 0, 504, 0, 0, 505, 506, 507,
	561, 562, 563, 237, 509, 508, 564, 0, 0, 0,
	0, 510, 511, 565, 512, 513, 514, 0, 0, 0,
	243, 244, 245, 246, 247, 248, 0, 249, 250, 0,
	0, 0, 0, 0, 515, 0, 0, 0, 0, 251,
	252, 254, 253, 255, 256, 257, 516, 517, 0, 518,
	258, 519, 0, 259, 260, 261, 262, 263, 0, 0,
	0, 264, 520, 521, 522, 0, 265, 266, 523, 0,
	0, 0, 267, 268, 269, 270, 271, 272, 273, 0,
	0, 275, 276, 277, 274, 0, 278, 0, 279, 280,
	281, 0, 282, 0, 283, 284, 0, 0, 0, 0,
	0, 0, 0, 285, 286, 2059, 288, 0, 289, 524,
	525, 0, 293, 290, 291, 0, 294, 292, 0, 295,
	296, 0, 0, 297, 298, 299, 0, 300, 301, 0,
	302, 303, 0, 304, 305, 526, 306, 307, 308, 310,
	312, 309, 313, 314, 315, 316, 527, 528, 0, 240,
	0, 0, 0, 0, 0, 317, 318, 319, 529, 0,
	0, 0, 320, 0, 321, 0, 0, 0, 322, 323,
	530, 531, 324, 325, 0, 326, 532, 0, 533, 327,
	0, 328, 329, 330, 331, 332, 534, 535, 536, 387,
	0, 333, 334, 0, 335, 336, 337, 338, 0, 0,
	0, 241, 339, 340, 342, 0, 0, 341, 537, 538,
	0, 539, 0, 343, 0, 540, 0, 344, 345, 346,
	0, 347, 0, 0, 0, 348, 349, 350, 351, 352,
	353, 0, 355, 354, 0, 356, 541, 0, 357, 358,
	0, 0, 359, 360, 361, 0, 0, 362, 363, 364,
	365, 0, 366, 367, 369, 371, 368, 370, 375, 372,
	373, 374, 377, 0, 376, 0, 378, 379, 380, 383,
	384, 382, 0, 381, 0, 242, 0, 385, 0, 542,
	386, 543, 388, 389, 0, 0, 390, 0, 0, 0,
	392, 393, 394, 0, 0, 395, 396, 544, 0, 397,
	0, 545, 398, 399, 391, 400, 401, 402, 403, 404,
	405, 406, 407, 0, 408, 409, 546, 547, 548, 410,
	549, 411, 412, 0, 413, 0, 414, 415, 416, 417,
	418, 419, 420, 550, 422, 421, 423, 0, 0, 0,
	0, 0, 0, 424, 0, 426, 427, 428, 425, 429,
	430, 431, 432, 0, 433, 434, 435, 0, 436, 437,
	438, 439, 551, 440, 0, 441, 442, 448, 449, 443,
	444, 450, 451, 452, 453, 454, 0, 456, 457, 455,
	458, 459, 460, 0, 461, 445, 446, 462, 463, 0,
	464, 465, 552, 0, 466, 0, 467, 468, 469, 470,
	447, 471, 476, 553, 472, 473, 474, 475, 554, 0,
	478, 479, 0, 477, 0, 480, 481, 482, 483, 484,
	485, 311, 486, 0, 487, 555, 556, 557, 558, 0,
	494, 0, 488, 489, 559, 490, 560, 0, 491, 492,
	493, 0, 495, 496, 0, 0, 497, 498, 499, 501,
	502, 500, 503, 0, 504, 0, 0, 505, 506, 507,
	561, 562, 563, 237, 509, 508, 564, 0, 0, 0,
	0, 510, 511, 565, 512, 513, 514, 0, 0, 0,
	243, 244, 245, 246, 247, 248, 0, 249, 250, 0,
	0, 0, 0, 0, 515, 0, 0, 0, 0, 251,
	252, 254, 253, 255, 256, 257, 516, 517, 0, 518,
	258, 519, 0, 259, 260, 261, 262, 263, 0, 0,
	0, 264, 520, 521, 522, 0, 265, 266, 523, 0,
	0, 0, 267, 268, 269, 270, 271, 272, 273, 0,
	0, 275, 276, 277, 274, 0, 278, 0, 279, 280,
	281, 0, 282, 0, 283, 284, 0, 0, 0, 0,
	0, 0, 0, 285, 286, 287, 288, 0, 289, 524,
	525, 0, 293, 290, 291, 0, 294, 292, 0, 295,
	296, 0, 0, 297, 298, 299, 0, 300, 301, 0,
	302, 303, 0, 304, 305, 526, 306, 307, 308, 310,
	312, 309, 313, 314, 315, 316, 527, 528, 0, 240,
	0, 0, 0, 0, 0, 317, 318, 319, 529, 0,
	0, 0, 320, 0, 321, 0, 0, 0, 322, 323,
	530, 531, 324, 325, 0, 326, 532, 0, 533, 327,
	0, 328, 329, 330, 331, 332, 1998, 535, 536, 387,
	0, 333, 334, 0, 335, 336, 337, 338, 0, 0,
	0, 241, 339, 340, 342, 0, 0, 341, 537, 538,
	0, 539, 0, 343, 0, 540, 0, 344, 345, 346,
	0, 347, 0, 0, 0, 348, 349, 350, 351, 352,
	353, 0, 355, 354, 0, 356, 541, 0, 357, 358,
	0, 0, 359, 360, 361, 0, 0, 362, 363, 364,
	365, 0, 366, 367, 369, 371, 368, 370, 375, 372,
	373, 374, 377, 0, 376, 0, 378, 379, 380, 383,
	384, 382, 0, 381, 0, 242, 0, 385, 0, 542,
	386, 543, 388, 389, 0, 0, 390, 0, 0, 0,
	392, 393, 394, 0, 0, 395, 396, 544, 0, 397,
	0, 545, 398, 399, 391, 400, 401, 402, 403, 404,
	405, 406, 407, 0, 408, 409, 546, 547, 548, 410,
	549, 411, 412, 0, 413, 0, 414, 415, 416, 417,
	418, 419, 420, 550, 422, 421, 423, 0, 0, 0,
	0, 0, 0, 424, 0, 426, 427, 428, 425, 429,
	430, 431, 432, 0, 433, 434, 435, 0, 436, 437,
	438, 439, 551, 440, 0, 441, 442, 448, 449, 443,
	444, 450, 451, 452, 453, 454, 0, 456, 457, 455,
	458, 459, 460, 0, 461, 445, 446, 462, 463, 0,
	464, 465, 552, 0, 466, 0, 467, 468, 469, 470,
	447, 471, 476, 553, 472, 473, 474, 475, 554, 0,
	478, 479, 0, 477, 0, 480, 481, 482, 483, 484,
	485, 311, 486, 0, 487, 555, 556, 557, 558, 0,
	494, 0, 488, 489, 559, 490, 560, 0, 491, 492,
	493, 0, 495, 496, 0, 0, 497, 498, 499, 501,
	502, 500, 503, 0, 504, 0, 0, 505, 506, 507,
	561, 562, 563, 0, 509, 508, 564, 751, 0, 237,
	0, 510, 511, 565, 512, 513, 514, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 243, 244, 245, 246,
	247, 248, 0, 249, 250, 0, 0, 0, 0, 0,
	515, 0, 0, 0, 0, 251, 252, 254, 253, 255,
	256, 257, 516, 517, 0, 518, 258, 519, 0, 259,
	260, 261, 262, 263, 0, 0, 0, 264, 520, 521,
	522, 0, 265, 266, 523, 0, 0, 0, 267, 268,
	269, 270, 271, 272, 273, 0, 0, 275, 276, 277,
	274, 0, 278, 0, 279, 280, 281, 0, 282, 0,
	283, 284, 0, 0, 0, 0, 0, 0, 0, 285,
	286, 287, 288, 0, 289, 524, 525, 0, 293, 290,
	291, 0, 294, 292, 0, 295, 296, 0, 0, 297,
	298, 299, 0, 300, 301, 0, 302, 303, 0, 304,
	305, 526, 306, 307, 308, 310, 312, 309, 313, 314,
	315, 316, 527, 528, 0, 0, 0, 0, 0, 0,
	0, 317, 318, 319, 529, 0, 0, 0, 320, 0,
	321, 0, 0, 0, 322, 323, 530, 531, 324, 325,
	0, 326, 532, 0, 533, 327, 0, 328, 329, 330,
	331, 332, 534, 535, 536, 387, 0, 333, 334, 0,
	335, 336, 337, 338, 0, 0, 0, 0, 339, 340,
	342, 0, 0, 341, 537, 538, 0, 539, 750, 343,
	0, 540, 0, 344, 345, 346, 0, 347, 0, 0,
	0, 348, 349, 350, 351, 352, 353, 0, 355, 354,
	0, 356, 541, 0, 357, 358, 0, 0, 359, 360,
	361, 0, 0, 362, 363, 364, 365, 0, 366, 367,
	369, 371, 368, 370, 375, 372, 373, 374, 377, 0,
	376, 0, 378, 379, 380, 383, 384, 382, 0, 381,
	0, 0, 0, 385, 0, 542, 386, 543, 388, 389,
	0, 0, 390, 0, 0, 0, 392, 393, 394, 0,
	0, 395, 396, 544, 0, 397, 0, 545, 398, 399,
	391, 400, 401, 402, 403, 404, 405, 406, 407, 0,
	408, 409, 546, 547, 548, 410, 549, 411, 412, 0,
	413, 0, 414, 415, 416, 417, 418, 419, 420, 550,
	422, 421, 423, 0, 0, 0, 0, 0, 0, 424,
	0, 426, 427, 428, 425, 429, 430, 431, 432, 0,
	433, 434, 435, 0, 436, 437, 438, 439, 551, 440,
	0, 441, 442, 448, 449, 443, 444, 450, 451, 452,
	453, 454, 0, 456, 457, 455, 458, 459, 460, 0,
	461, 445, 446, 462, 463, 0, 464, 465, 552, 0,
	466, 0, 467, 468, 469, 470, 447, 471, 476, 553,
	472, 473, 474, 475, 554, 0, 478, 479, 0, 477,
	749, 480, 481, 482, 483, 484, 485, 311, 486, 0,
	487, 555, 556, 557, 558, 0, 494, 0, 488, 489,
	559, 490, 560, 0, 491, 492, 493, 0, 495, 496,
	0, 0, 497, 498, 499, 501, 502, 500, 503, 0,
	504, 0, 0, 505, 506, 507, 561, 562, 563, 237,
	509, 508, 564, 0, 0, 0, 0, 510, 511, 565,
	512, 513, 514, 0, 0, 0, 243, 244, 245, 246,
	247, 248, 0, 249, 250, 0, 0, 0, 0, 0,
	515, 0, 0, 0, 0, 251, 252, 254, 253, 255,
	256, 257, 516, 517, 0, 518, 258, 519, 0, 259,
	260, 261, 262, 263, 0, 0, 0, 264, 520, 521,
	522, 0, 265, 266, 523, 0, 0, 0, 267, 268,
	269, 270, 271, 272, 273, 0, 0, 275, 276, 277,
	274, 0, 278, 0, 279, 280, 281, 0, 282, 0,
	283, 284, 0, 0, 0, 0, 0, 0, 0, 285,
	286, 287, 288, 0, 289, 524, 525, 0, 293, 290,
	291, 0, 294, 292, 0, 295, 296, 0, 0, 297,
	298, 299, 0, 300, 301, 0, 302, 303, 0, 304,
	305, 526, 306, 307, 308, 310, 312, 309, 313, 314,
	315, 316, 527, 528, 0, 2627, 0, 0, 0, 0,
	0, 317, 318, 319, 529, 0, 0, 0, 320, 0,
	321, 0, 0, 0, 322, 323, 530, 531, 324, 325,
	0, 326, 532, 0, 533, 327, 0, 328, 329, 330,
	331, 332, 534, 535, 536, 387, 0, 333, 334, 0,
	335, 336, 337, 338, 0, 0, 0, 0, 339, 340,
	342, 0, 0, 341, 537, 538, 0, 539, 0, 343,
	0, 540, 0, 344, 345, 346, 0, 347, 0, 0,
	0, 348, 349, 350, 351, 352, 353, 0, 355, 354,
	0, 356, 541, 0, 357, 358, 0, 0, 359, 360,
	361, 0, 0, 362, 363, 364, 365, 0, 366, 367,
	369, 371, 368, 370, 375, 372, 373, 374, 377, 0,
	376, 0, 378, 379, 380, 383, 384, 382, 0, 381,
	0, 0, 0, 385, 0, 542, 386, 543, 388, 389,
	0, 0, 390, 0, 0, 0, 392, 393, 394, 0,
	0, 395, 396, 544, 0, 397, 0, 545, 398, 399,
	391, 400, 401, 402, 403, 404, 405, 406, 407, 0,
	408, 409, 546, 547, 548, 410, 549, 411, 412, 3560,
	413, 0, 414, 415, 416, 417, 418, 419, 420, 550,
	422, 421, 423, 0, 0, 0, 0, 0, 0, 424,
	0, 426, 427, 428, 425, 429, 430, 431, 432, 0,
	433, 434, 435, 0, 436, 437, 438, 439, 551, 440,
	0, 441, 442, 448, 449, 443, 444, 450, 451, 452,
	453, 454, 0, 456, 457, 455, 458, 459, 460, 0,
	461, 445, 446, 462, 463, 0, 464, 465, 552, 0,
	466, 0, 467, 468, 469, 470, 447, 471, 476, 553,
	472, 473, 474, 475, 554, 0, 478, 479, 0, 477,
	0, 480, 481, 482, 483, 484, 485, 311, 486, 0,
	487, 555, 556, 557, 558, 0, 494, 0, 488, 489,
	559, 490, 560, 0, 491, 492, 493, 0, 495, 496,
	0, 0, 497, 498, 499, 501, 502, 500, 503, 0,
	504, 0, 0, 505, 506, 507, 561, 562, 563, 0,
	509, 508, 564, 576, 0, 237, 0, 510, 511, 565,
	512, 513, 514, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 243, 244, 245, 246, 247, 248, 575, 249,
	250, 0, 0, 0, 0, 0, 515, 0, 0, 0,
	0, 251, 252, 254, 253, 255, 256, 257, 516, 517,
	0, 518, 258, 519, 0, 259, 260, 261, 262, 263,
	0, 0, 0, 264, 520, 521, 522, 0, 265, 266,
	523, 0, 0, 0, 267, 268, 269, 270, 271, 272,
	273, 0, 0, 275, 276, 277, 274, 0, 278, 0,
	279, 280, 281, 0, 282, 0, 283, 284, 0, 0,
	0, 0, 0, 0, 0, 285, 286, 287, 288, 0,
	289, 524, 525, 0, 293, 290, 291, 0, 294, 292,
	0, 295, 296, 0, 0, 297, 298, 299, 0, 300,
	301, 0, 302, 303, 0, 304, 305, 526, 306, 307,
	308, 310, 312, 309, 313, 314, 315, 316, 527, 528,
	0, 0, 0, 0, 0, 0, 0, 317, 318, 319,
	529, 0, 0, 0, 320, 0, 321, 0, 0, 0,
	322, 323, 530, 531, 324, 325, 0, 326, 532, 0,
	533, 327, 0, 328, 329, 330, 331, 332, 534, 535,
	536, 387, 0, 333, 334, 0, 335, 336, 337, 338,
	0, 0, 0, 0, 339, 340, 342, 0, 0, 341,
	537, 538, 0, 539, 0, 343, 0, 540, 0, 344,
	345, 346, 0, 347, 0, 0, 0, 348, 349, 350,
	351, 352, 353, 0, 355, 354, 0, 356, 541, 0,
	357, 358, 0, 0, 359, 360, 361, 0, 0, 362,
	363, 364, 365, 0, 366, 367, 369, 371, 368, 370,
	375, 372, 373, 374, 377, 0, 376, 0, 378, 379,
	380, 383, 384, 382, 0, 381, 0, 0, 0, 385,
	0, 542, 386, 543, 388, 389, 0, 0, 390, 0,
	0, 0, 392, 393, 394, 0, 0, 395, 396, 544,
	0, 397, 0, 545, 398, 399, 391, 400, 401, 402,
	403, 404, 405, 406, 407, 0, 408, 409, 546, 547,
	548, 410, 549, 574, 412, 0, 413, 0, 414, 415,
	416, 417, 418, 419, 420, 550, 422, 421, 423, 0,
	0, 0, 0, 0, 0, 424, 0, 426, 427, 428,
	425, 429, 430, 431, 432, 0, 433, 434, 435, 0,
	436, 437, 438, 439, 551, 440, 0, 441, 442, 448,
	449, 443, 444, 450, 451, 452, 453, 454, 0, 456,
	457, 455, 458, 459, 460, 0, 461, 445, 446, 462,
	463, 0, 464, 465, 552, 0, 466, 0, 467, 468,
	469, 470, 447, 471, 476, 553, 472, 473, 474, 475,
	554, 0, 478, 479, 0, 477, 0, 480, 481, 482,
	483, 484, 485, 311, 486, 0, 487, 555, 556, 557,
	558, 0, 494, 0, 488, 489, 559, 490, 560, 0,
	491, 492, 493, 0, 495, 496, 0, 0, 497, 498,
	499, 501, 502, 500, 503, 0, 504, 0, 0, 505,
	506, 507, 561, 562, 563, 0, 509, 508, 564, 237,
	2614, 0, 0, 510, 511, 565, 512, 513, 514, 0,
	0, 0, 0, 0, 0, 0, 243, 244, 245, 246,
	247, 248, 0, 249, 250, 0, 0, 0, 0, 0,
	515, 0, 0, 0, 0, 251, 252, 254, 253, 255,
	256, 257, 516, 517, 0, 518, 258, 519, 0, 259,
	260, 261, 262, 263, 0, 0, 0, 264, 520, 521,
	522, 0, 265, 266, 523, 0, 0, 0, 267, 268,
	269, 270, 271, 272, 273, 0, 0, 275, 276, 277,
	274, 0, 278, 0, 279, 280, 281, 0, 282, 0,
	283, 284, 0, 0, 0, 0, 0, 0, 0, 285,
	286, 287, 288, 0, 289, 524, 525, 0, 293, 290,
	291, 0, 294, 292, 0, 295, 296, 0, 0, 297,
	298, 299, 0, 300, 301, 0, 302, 303, 0, 304,
	305, 526, 306, 307, 308, 310, 312, 309, 313, 314,
	315, 316, 527, 528, 0, 0, 0, 0, 0, 0,
	0, 317, 318, 319, 529, 0, 0, 0, 320, 0,
	321, 0, 0, 0, 322, 323, 530, 531, 324, 325,
	0, 326, 532, 0, 533, 327, 0, 328, 329, 330,
	331, 332, 534, 535, 536, 387, 0, 333, 334, 0,
	335, 336, 337, 338, 0, 0, 0, 0, 339, 340,
	342, 0, 0, 341, 537, 538, 0, 539, 0, 343,
	0, 540, 0, 344, 345, 346, 0, 347, 0, 0,
	0, 348, 349, 350, 351, 352, 353, 0, 355, 354,
	0, 356, 541, 0, 357, 358, 0, 0, 359, 360,
	361, 0, 0, 362, 363, 364, 365, 0, 366, 367,
	369, 371, 368, 370, 375, 372, 373, 374, 377, 0,
	376, 0, 378, 379, 380, 383, 384, 382, 0, 381,
	0, 0, 0, 385, 0, 542, 386, 543, 388, 389,
	0, 0, 390, 0, 0, 0, 392, 393, 394, 0,
	0, 395, 396, 544, 0, 397, 0, 545, 398, 399,
	391, 400, 401, 402, 403, 404, 405, 406, 407, 0,
	408, 409, 546, 547, 548, 410, 549, 411, 412, 0,
	413, 0, 414, 415, 416, 417, 418, 419, 420, 550,
	422, 421, 423, 0, 0, 0, 0, 0, 0, 424,
	0, 426, 427, 428, 425, 429, 430, 431, 432, 0,
	433, 434, 435, 0, 436, 437, 438, 439, 551, 440,
	0, 441, 442, 448, 449, 443, 444, 450, 451, 452,
	453, 454, 0, 456, 457, 455, 458, 459, 460, 0,
	461, 445, 446, 462, 463, 0, 464, 465, 552, 0,
	466, 0, 467, 468, 469, 470, 447, 471, 476, 553,
	472, 473, 474, 475, 554, 0, 478, 479, 0, 477,
	0, 480, 481, 482, 483, 484, 485, 311, 486, 0,
	487, 555, 556, 557, 558, 0, 494, 0, 488, 489,
	559, 490, 560, 0, 491, 492, 493, 0, 495, 496,
	0, 0, 497, 498, 499, 501, 502, 500, 503, 0,
	504, 0, 0, 505, 506, 507, 561, 562, 563, 0,
	509, 508, 564, 237, 3569, 0, 0, 510, 511, 565,
	512, 513, 514, 0, 0, 0, 0, 0, 0, 0,
	243, 244, 245, 246, 247, 248, 0, 249, 250, 0,
	0, 0, 0, 0, 515, 0, 0, 0, 0, 251,
	252, 254, 253, 255, 256, 257, 516, 517, 0, 518,
	258, 519, 0, 259, 260, 261, 262, 263, 0, 0,
	0, 264, 520, 521, 522, 0, 265, 266, 523, 0,
	0, 0, 267, 268, 269, 270, 271, 272, 273, 0,
	0, 275, 276, 277, 274, 0, 278, 0, 279, 280,
	281, 0, 282, 0, 283, 284, 0, 0, 0, 0,
	0, 0, 0, 285, 286, 287, 288, 0, 289, 524,
	525, 0, 293, 290, 291, 0, 294, 292, 0, 295,
	296, 0, 0, 297, 298, 299, 0, 300, 301, 0,
	302, 303, 0, 304, 305, 526, 306, 307, 308, 310,
	312, 309, 313, 314, 315, 316, 527, 528, 0, 0,
	0, 0, 0, 0, 0, 317, 318, 319, 529, 0,
	0, 0, 320, 0, 321, 0, 0, 0, 322, 323,
	530, 531, 324, 325, 0, 326, 532, 0, 533, 327,
	0, 328, 329, 330, 331, 332, 534, 535, 536, 387,
	0, 333, 334, 0, 335, 336, 337, 338, 0, 0,
	0, 0, 339, 340, 342, 0, 0, 341, 537, 538,
	0, 539, 0, 343, 0, 540, 0, 344, 345, 346,
	0, 347, 0, 0, 0, 348, 349, 350, 351, 352,
	353, 0, 355, 354, 0, 356, 541, 0, 357, 358,
	0, 0, 359, 360, 361, 0, 0, 362, 363, 364,
	365, 0, 366, 367, 369, 371, 368, 370, 375, 372,
	373, 374, 377, 0, 376, 0, 378, 379, 380, 383,
	384, 382, 0, 381, 0, 0, 0, 385, 0, 542,
	386, 543, 388, 389, 0, 0, 390, 0, 0, 0,
	392, 393, 394, 0, 0, 395, 396, 544, 0, 397,
	0, 545, 398, 399, 391, 400, 401, 402, 403, 404,
	405, 406, 407, 0, 408, 409, 546, 547, 548, 410,
	549, 411, 412, 0, 413, 0, 414, 415, 416, 417,
	418, 419, 420, 550, 422, 421, 423, 0, 0, 0,
	0, 0, 0, 424, 0, 426, 427, 428, 425, 429,
	430, 431, 432, 0, 433, 434, 435, 0, 436, 437,
	438, 439, 551, 440, 0, 441, 442, 448, 449, 443,
	444, 450, 451, 452, 453, 454, 0, 456, 457, 455,
	458, 459, 460, 0, 461, 445, 446, 462, 463, 0,
	464, 465, 552, 0, 466, 0, 467, 468, 469, 470,
	447, 471, 476, 553, 472, 473, 474, 475, 554, 0,
	478, 479, 0, 477, 0, 480, 481, 482, 483, 484,
	485, 311, 486, 0, 487, 555, 556, 557, 558, 0,
	494, 0, 488, 489, 559, 490, 560, 0, 491, 492,
	493, 0, 495, 496, 0, 0, 497, 498, 499, 501,
	502, 500, 503, 0, 504, 0, 0, 505, 506, 507,
	561, 562, 563, 237, 509, 508, 564, 0, 0, 0,
	0, 510, 511, 565, 512, 513, 514, 0, 0, 0,
	243, 244, 245, 246, 247, 248, 0, 249, 250, 0,
	0, 0, 0, 0, 515, 0, 0, 0, 0, 251,
	252, 254, 253, 255, 256, 257, 516, 517, 0, 518,
	258, 519, 0, 259, 260, 261, 262, 263, 0, 0,
	0, 264, 520, 521, 522, 0, 265, 266, 523, 0,
	0, 0, 267, 268, 269, 270, 271, 272, 273, 0,
	0, 275, 276, 277, 274, 0, 278, 0, 279, 280,
	281, 0, 282, 0, 283, 284, 0, 0, 0, 0,
	0, 0, 0, 285, 286, 287, 288, 0, 289, 524,
	525, 3303, 293, 290, 291, 0, 294, 292, 0, 295,
	296, 0, 0, 297, 298, 299, 0, 300, 301, 0,
	302, 303, 0, 304, 305, 526, 306, 307, 308, 310,
	312, 309, 313, 314, 315, 316, 527, 528, 0, 0,
	0, 0, 0, 0, 0, 317, 318, 319, 529, 0,
	0, 0, 320, 0, 321, 0, 0, 0, 322, 323,
	530, 531, 324, 325, 0, 326, 532, 0, 533, 327,
	0, 328, 329, 330, 331, 332, 534, 535, 536, 387,
	0, 333, 334, 0, 335, 336, 337, 338, 0, 0,
	0, 0, 339, 340, 342, 0, 0, 341, 537, 538,
	0, 539, 0, 343, 0, 540, 0, 344, 345, 346,
	0, 347, 0, 0, 0, 348, 349, 350, 351, 352,
	353, 0, 355, 354, 0, 356, 541, 0, 357, 358,
	0, 0, 359, 360, 361, 0, 0, 362, 363, 364,
	365, 0, 366, 367, 369, 371, 368, 370, 375, 372,
	373, 374, 377, 0, 376, 0, 378, 379, 380, 383,
	384, 382, 0, 381, 0, 0, 0, 385, 0, 542,
	386, 543, 388, 389, 0, 0, 390, 0, 0, 0,
	392, 393, 394, 0, 0, 395, 396, 544, 0, 397,
	0, 545, 398, 399, 391, 400, 401, 402, 403, 404,
	405, 406, 407, 0, 408, 409, 546, 547, 548, 410,
	549, 411, 412, 0, 413, 0, 414, 415, 416, 417,
	418, 419, 420, 550, 422, 421, 423, 0, 0, 0,
	0, 0, 0, 424, 0, 426, 427, 428, 425, 429,
	430, 431, 432, 0, 433, 434, 435, 0, 436, 437,
	438, 439, 551, 440, 0, 441, 442, 448, 449, 443,
	444, 450, 451, 452, 453, 454, 0, 456, 457, 455,
	458, 459, 460, 0, 461, 445, 446, 462, 463, 0,
	464, 465, 552, 0, 466, 0, 467, 468, 469, 470,
	447, 471, 476, 553, 472, 473, 474, 475, 554, 0,
	478, 479, 0, 477, 0, 480, 481, 482, 483, 484,
	485, 311, 486, 0, 487, 555, 556, 557, 558, 0,
	494, 0, 488, 489, 559, 490, 560, 0, 491, 492,
	493, 0, 495, 496, 0, 0, 497, 498, 499, 501,
	502, 500, 503, 0, 504, 0, 0, 505, 506, 507,
	561, 562, 563, 237, 509, 508, 564, 0, 0, 0,
	0, 510, 511, 565, 512, 513, 514, 0, 0, 0,
	243, 244, 245, 246, 247, 248, 0, 249, 250, 0,
	0, 0, 0, 0, 515, 0, 2368, 0, 0, 251,
	252, 254, 253, 255, 256, 257, 516, 517, 0, 518,
	258, 519, 0, 259, 260, 261, 262, 263, 0, 0,
	0, 264, 520, 521, 522, 0, 265, 266, 523, 0,
	0, 0, 267, 268, 269, 270, 271, 272, 273, 0,
	0, 275, 276, 277, 274, 0, 278, 0, 279, 280,
	281, 0, 282, 0, 283, 284, 0, 0, 0, 0,
	0, 0, 0, 285, 286, 287, 288, 0, 289, 524,
	525, 0, 293, 290, 291, 0, 294, 292, 0, 295,
	296, 0, 0, 297, 298, 299, 0, 300, 301, 0,
	302, 303, 0, 304, 305, 526, 306, 307, 308, 310,
	312, 309, 313, 314, 315, 316, 527, 528, 0, 0,
	0, 0, 0, 0, 0, 317, 318, 319, 529, 0,
	0, 0, 320, 0, 321, 0, 0, 0, 322, 323,
	530, 531, 324, 325, 0, 326, 532, 0, 533, 327,
	0, 328, 329, 330, 331, 332, 534, 535, 536, 387,
	0, 333, 334, 0, 335, 336, 337, 338, 0, 0,
	0, 0, 339, 340, 342, 0, 0, 341, 537, 538,
	0, 539, 0, 343, 0, 540, 0, 344, 345, 346,
	0, 347, 0, 0, 0, 348, 349, 350, 351, 352,
	353, 0, 355, 354, 0, 356, 541, 0, 357, 358,
	0, 0, 359, 360, 361, 0, 0, 362, 363, 364,
	365, 0, 366, 367, 369, 371, 368, 370, 375, 372,
	373, 374, 377, 0, 376, 0, 378, 379, 380, 383,
	384, 382, 0, 381, 0, 0, 0, 385, 0, 542,
	386, 543, 388, 389, 0, 0, 390, 0, 0, 0,
	392, 393, 394, 0, 0, 395, 396, 544, 0, 397,
	0, 545, 398, 399, 391, 400, 401, 402, 403, 404,
	405, 406, 407, 0, 408, 409, 546, 547, 548, 410,
	549, 411, 412, 0, 413, 0, 414, 415, 416, 417,
	418, 419, 420, 550, 422, 421, 423, 0, 0, 0,
	0, 0, 0, 424, 0, 426, 427, 428, 425, 429,
	430, 431, 432, 0, 433, 434, 435, 0, 436, 437,
	438, 439, 551, 440, 0, 441, 442, 448, 449, 443,
	444, 450, 451, 452, 453, 454, 0, 456, 457, 455,
	458, 459, 460, 0, 461, 445, 446, 462, 463, 0,
	464, 465, 552, 0, 466, 0, 467, 468, 469, 470,
	447, 471, 476, 553, 472, 473, 474, 475, 554, 0,
	478, 479, 0, 477, 0, 480, 481, 482, 483, 484,
	485, 311, 486, 0, 487, 555, 556, 557, 558, 0,
	494, 0, 488, 489, 559, 490, 560, 0, 491, 492,
	493, 0, 495, 496, 0, 0, 497, 498, 499, 501,
	502, 500, 503, 0, 504, 0, 0, 505, 506, 507,
	561, 562, 563, 0, 509, 508, 564, 237, 2614, 0,
	0, 510, 511, 565, 512, 513, 514, 0, 0, 0,
	0, 0, 0, 0, 243, 244, 245, 246, 247, 248,
	0, 249, 250, 0, 0, 0, 0, 0, 515, 0,
	0, 0, 0, 251, 252, 254, 253, 255, 256, 257,
	516, 517, 0, 518, 258, 519, 0, 259, 260, 261,
	262, 263, 0, 0, 0, 264, 520, 521, 522, 0,
	265, 266, 523, 0, 0, 0, 267, 268, 269, 270,
	271, 272, 273, 0, 0, 275, 276, 277, 274, 0,
	278, 0, 279, 280, 281, 0, 282, 0, 283, 284,
	0, 0, 0, 0, 0, 0, 0, 285, 286, 287,
	288, 0, 289, 524, 525, 0, 293, 290, 291, 0,
	294, 292, 0, 295, 296, 0, 0, 297, 298, 299,
	0, 300, 301, 0, 302, 303, 0, 304, 305, 526,
	306, 307, 308, 310, 312, 309, 313, 314, 315, 316,
	527, 528, 0, 0, 0, 0, 0, 0, 0, 317,
	318, 319, 529, 0, 0, 0, 320, 0, 321, 0,
	0, 0, 322, 323, 530, 531, 324, 325, 0, 326,
	532, 0, 533, 327, 0, 328, 329, 330, 331, 332,
	534, 535, 536, 387, 0, 333, 334, 0, 335, 336,
	337, 338, 0, 0, 0, 0, 339, 340, 342, 0,
	0, 341, 537, 538, 0, 539, 0, 343, 0, 540,
	0, 344, 345, 346, 0, 347, 0, 0, 0, 348,
	349, 350, 351, 352, 353, 0, 355, 354, 0, 356,
	541, 0, 357, 358, 0, 0, 359, 360, 361, 0,
	0, 362, 363, 364, 365, 0, 366, 367, 369, 371,
	368, 370, 375, 372, 373, 374, 377, 0, 376, 0,
	378, 379, 380, 383, 384, 382, 0, 381, 0, 0,
	0, 385, 0, 542, 386, 543, 388, 389, 0, 0,
	390, 0, 0, 0, 392, 393, 2611, 0, 0, 395,
	396, 544, 0, 397, 0, 545, 398, 399, 391, 400,
	401, 402, 403, 404, 405, 406, 407, 0, 408, 409,
	546, 547, 548, 410, 549, 411, 412, 0, 413, 0,
	414, 415, 416, 417, 418, 419, 420, 550, 422, 421,
	423, 0, 0, 0, 0, 0, 0, 424, 0, 426,
	427, 428, 425, 429, 430, 431, 432, 0, 433, 434,
	435, 0, 436, 437, 438, 439, 551, 440, 0, 441,
	442, 448, 449, 443, 444, 450, 451, 452, 453, 454,
	0, 456, 457, 455, 458, 459, 460, 0, 461, 445,
	446, 462, 463, 0, 464, 465, 552, 0, 466, 0,
	467, 468, 469, 470, 447, 471, 476, 553, 472, 473,
	474, 475, 554, 0, 478, 479, 0, 477, 0, 480,
	481, 482, 483, 484, 485, 311, 486, 0, 487, 555,
	556, 557, 558, 0, 494, 0, 488, 489, 559, 490,
	560, 0, 491, 492, 493, 0, 495, 496, 0, 0,
	497, 498, 499, 501, 502, 500, 503, 0, 504, 0,
	0, 505, 506, 507, 561, 562, 563, 237, 509, 508,
	564, 0, 0, 0, 0, 510, 511, 565, 512, 513,
	514, 0, 0, 0, 243, 244, 245, 246, 247, 248,
	2040, 249, 250, 0, 0, 0, 0, 0, 515, 0,
	0, 0, 0, 251, 252, 254, 253, 255, 256, 257,
	516, 517, 0, 518, 258, 519, 0, 259, 260, 261,
	262, 263, 0, 0, 0, 264, 520, 521, 522, 0,
	265, 266, 523, 0, 0, 0, 267, 268, 269, 270,
	271, 272, 273, 0, 0, 275, 276, 277, 274, 0,
	278, 0, 279, 280, 281, 0, 282, 0, 283, 284,
	0, 0, 0, 0, 0, 0, 0, 285, 286, 287,
	288, 0, 289, 524, 525, 0, 293, 290, 291, 0,
	294, 292, 0, 295, 296, 0, 0, 297, 298, 299,
	0, 300, 301, 0, 302, 303, 0, 304, 305, 526,
	306, 307, 308, 310, 312, 309, 313, 314, 315, 316,
	527, 528, 0, 0, 0, 0, 0, 0, 0, 317,
	318, 319, 529, 0, 0, 0, 320, 0, 321, 0,
	0, 0, 322, 323, 530, 531, 324, 325, 0, 326,
	532, 0, 533, 327, 0, 328, 329, 330, 331, 332,
	534, 535, 536, 387, 0, 333, 334, 0, 335, 336,
	337, 338, 0, 0, 0, 0, 339, 340, 342, 0,
	0, 341, 537, 538, 0, 539, 0, 343, 0, 540,
	0, 344, 345, 346, 0, 347, 0, 0, 0, 348,
	349, 350, 351, 352, 353, 0, 355, 354, 0, 356,
	541, 0, 357, 358, 0, 0, 359, 360, 361, 0,
	0, 362, 363, 364, 365, 0, 366, 367, 369, 371,
	368, 370, 375, 372, 373, 374, 377, 0, 376, 0,
	378, 379, 380, 383, 384, 382, 0, 381, 0, 0,
	0, 385, 0, 542, 386, 543, 388, 389, 0, 0,
	390, 0, 0, 0, 392, 393, 394, 0, 0, 395,
	396, 544, 0, 397, 0, 545, 398, 399, 391, 400,
	401, 402, 403, 404, 405, 406, 407, 0, 408, 409,
	546, 547, 548, 410, 549, 411, 412, 0, 413, 0,
	414, 415, 416, 417, 418, 419, 420, 550, 422, 421,
	423, 0, 0, 0, 0, 0, 0, 424, 0, 426,
	427, 428, 425, 429, 430, 431, 432, 0, 433, 434,
	435, 0, 436, 437, 438, 439, 551, 440, 0, 441,
	442, 448, 449, 443, 444, 450, 451, 452, 453, 454,
	0, 456, 457, 455, 458, 459, 460, 0, 461, 445,
	446, 462, 463, 0, 464, 465, 552, 0, 466, 0,
	467, 468, 469, 470, 447, 471, 476, 553, 472, 473,
	474, 475, 554, 0, 478, 479, 0, 477, 0, 480,
	481, 482, 483, 484, 485, 311, 486, 0, 487, 555,
	556, 557, 558, 0, 494, 0, 488, 489, 559, 490,
	560, 0, 491, 492, 493, 0, 495, 496, 0, 0,
	497, 498, 499, 501, 502, 500, 503, 0, 504, 0,
	0, 505, 506, 507, 561, 562, 563, 0, 509, 508,
	564, 2030, 0, 237, 0, 510, 511, 565, 512, 513,
	514, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	243, 244, 245, 246, 247, 248, 0, 249, 250, 0,
	0, 0, 0, 0, 515, 0, 0, 0, 0, 251,
	252, 254, 253, 255, 256, 257, 516, 517, 0, 518,
	258, 519, 0, 259, 260, 261, 262, 263, 0, 0,
	0, 264, 520, 521, 522, 0, 265, 266, 523, 0,
	0, 0, 267, 268, 269, 270, 271, 272, 273, 0,
	0, 275, 276, 277, 274, 0, 278, 0, 279, 280,
	281, 0, 282, 0, 283, 284, 0, 0, 0, 0,
	0, 0, 0, 285, 286, 287, 288, 0, 289, 524,
	525, 0, 293, 290, 291, 0, 294, 292, 0, 295,
	296, 0, 0, 297, 298, 299, 0, 300, 301, 0,
	302, 303, 0, 304, 305, 526, 306, 307, 308, 310,
	312, 309, 313, 314, 315, 316, 527, 528, 0, 0,
	0, 0, 0, 0, 0, 317, 318, 319, 529, 0,
	0, 0, 320, 0, 321, 0, 0, 0, 322, 323,
	530, 531, 324, 325, 0, 326, 532, 0, 533, 327,
	0, 328, 329, 330, 331, 332, 534, 535, 536, 387,
	0, 333, 334, 0, 335, 336, 337, 338, 0, 0,
	0, 0, 339, 340, 342, 0, 0, 341, 537, 538,
	0, 539, 0, 343, 0, 540, 0, 344, 345, 346,
	0, 347, 0, 0, 0, 348, 349, 350, 351, 352,
	353, 0, 355, 354, 0, 356, 541, 0, 357, 358,
	0, 0, 359, 360, 361, 0, 0, 362, 363, 364,
	365, 0, 366, 367, 369, 371, 368, 370, 375, 372,
	373, 374, 377, 0, 376, 0, 378, 379, 380, 383,
	384, 382, 0, 381, 0, 0, 0, 385, 0, 542,
	386, 543, 388, 389, 0, 0, 390, 0, 0, 0,
	392, 393, 394, 0, 0, 395, 396, 544, 0, 397,
	0, 545, 398, 399, 391, 400, 401, 402, 403, 404,
	405, 406, 407, 0, 408, 409, 546, 547, 548, 410,
	549, 411, 412, 0, 413, 0, 414, 415, 416, 417,
	418, 419, 420, 550, 422, 421, 423, 0, 0, 0,
	0, 0, 0, 424, 0, 426, 427, 428, 425, 429,
	430, 431, 432, 0, 433, 434, 435, 0, 436, 437,
	438, 439, 551, 440, 0, 441, 442, 448, 449, 443,
	444, 450, 451, 452, 453, 454, 0, 456, 457, 455,
	458, 459, 460, 0, 461, 445, 446, 462, 463, 0,
	464, 465, 552, 0, 466, 0, 467, 468, 469, 470,
	447, 471, 476, 553, 472, 473, 474, 475, 554, 0,
	478, 479, 0, 477, 0, 480, 481, 482, 483, 484,
	485, 311, 486, 0, 487, 555, 556, 557, 558, 0,
	494, 0, 488, 489, 559, 490, 560, 0, 491, 492,
	493, 0, 495, 496, 0, 0, 497, 498, 499, 501,
	502, 500, 503, 0, 504, 0, 0, 505, 506, 507,
	561, 562, 563, 0, 509, 508, 564, 617, 0, 237,
	0, 510, 511, 565, 512, 513, 514, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 243, 244, 245, 246,
	247, 248, 0, 249, 250, 0, 0, 0, 0, 0,
	515, 0, 0, 0, 0, 251, 252, 1117, 253, 255,
	256, 257, 516, 517, 0, 518, 258, 519, 0, 259,
	260, 261, 262, 263, 0, 0, 0, 264, 520, 521,
	1115, 0, 265, 266, 523, 0, 0, 0, 267, 268,
	269, 270, 271, 272, 273, 0, 0, 275, 276, 277,
	274, 0, 278, 0, 279, 280, 281, 0, 282, 0,
	283, 284, 0, 0, 0, 0, 0, 0, 0, 285,
	286, 287, 288, 0, 289, 524, 525, 0, 293, 290,
	291, 0, 294, 292, 0, 295, 296, 0, 0, 297,
	298, 299, 0, 300, 301, 0, 302, 303, 0, 304,
	305, 526, 306, 307, 308, 310, 312, 309, 313, 314,
	315, 316, 527, 528, 0, 0, 0, 0, 0, 0,
	0, 317, 318, 319, 529, 0, 0, 0, 320, 0,
	321, 0, 0, 0, 322, 323, 530, 531, 324, 325,
	0, 326, 532, 0, 533, 327, 0, 328, 329, 330,
	331, 332, 534, 535, 536, 387, 0, 333, 334, 0,
	335, 336, 337, 338, 0, 0, 0, 0, 339, 340,
	342, 0, 0, 341, 537, 538, 0, 539, 0, 343,
	0, 540, 0, 344, 345, 346, 0, 347, 0, 0,
	0, 348, 349, 350, 351, 352, 353, 0, 355, 354,
	0, 356, 541, 0, 357, 358, 0, 0, 359, 360,
	361, 0, 0, 362, 363, 364, 365, 0, 366, 367,
	369, 371, 368, 370, 375, 372, 373, 374, 377, 0,
	618, 0, 378, 379, 380, 383, 384, 382, 0, 381,
	0, 0, 0, 385, 0, 542, 386, 543, 388, 389,
	0, 0, 390, 0, 0, 0, 392, 393, 394, 0,
	0, 395, 396, 544, 0, 397, 0, 545, 398, 399,
	391, 400, 401, 402, 403, 404, 405, 406, 407, 0,
	408, 409, 546, 547, 548, 410, 549, 411, 412, 0,
	413, 0, 414, 415, 416, 417, 418, 419, 420, 550,
	422, 421, 423, 0, 0, 0, 0, 0, 0, 424,
	0, 426, 427, 428, 425, 429, 430, 431, 432, 0,
	433, 434, 435, 0, 436, 437, 438, 439, 551, 440,
	0, 441, 442, 448, 449, 443, 444, 614, 451, 452,
	453, 454, 0, 456, 457, 455, 458, 1118, 460, 0,
	461, 445, 446, 462, 463, 0, 464, 465, 552, 0,
	466, 0, 467, 468, 469, 470, 447, 471, 476, 553,
	472, 473, 474, 475, 554, 0, 478, 479, 0, 477,
	0, 480, 481, 482, 483, 484, 485, 311, 486, 0,
	487, 613, 556, 557, 558, 0, 494, 0, 488, 489,
	559, 490, 560, 0, 491, 492, 493, 0, 495, 496,
	0, 0, 497, 498, 499, 501, 502, 500, 503, 0,
	504, 0, 0, 505, 506, 507, 561, 562, 563, 0,
	509, 508, 564, 617, 0, 237, 0, 510, 511, 565,
	512, 513, 514, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 243, 244, 245, 246, 247, 248, 0, 249,
	250, 0, 0, 0, 0, 0, 515, 0, 0, 0,
	0, 251, 252, 254, 253, 255, 256, 257, 516, 517,
	0, 518, 258, 519, 0, 259, 260, 261, 262, 263,
	0, 0, 0, 264, 520, 521, 522, 0, 265, 607,
	523, 0, 0, 0, 267, 268, 269, 270, 271, 272,
	273, 0, 0, 275, 276, 277, 274, 0, 278, 0,
	279, 280, 281, 0, 282, 0, 283, 284, 0, 0,
	0, 0, 0, 0, 0, 285, 286, 287, 288, 0,
	289, 524, 525, 0, 293, 290, 291, 0, 294, 292,
	0, 295, 296, 0, 0, 297, 298, 299, 0, 300,
	301, 0, 302, 303, 0, 304, 305, 526, 306, 307,
	308, 310, 312, 309, 313, 314, 315, 316, 527, 528,
	0, 0, 0, 0, 0, 0, 0, 317, 318, 319,
	529, 0, 0, 0, 320, 0, 321, 0, 0, 0,
	322, 323, 530, 531, 324, 325, 0, 326, 532, 0,
	533, 327, 0, 328, 329, 330, 331, 332, 534, 535,
	536, 387, 0, 333, 334, 0, 335, 336, 337, 338,
	0, 0, 0, 0, 339, 340, 342, 0, 0, 341,
	537, 538, 0, 539, 0, 343, 0, 540, 0, 344,
	345, 346, 0, 347, 0, 0, 0, 348, 349, 350,
	351, 352, 353, 0, 355, 354, 0, 356, 541, 0,
	357, 358, 0, 0, 359, 360, 361, 0, 0, 362,
	363, 364, 365, 0, 366, 367, 369, 371, 368, 370,
	375, 372, 373, 374, 377, 0, 618, 0, 378, 379,
	380, 383, 384, 382, 0, 381, 0, 0, 0, 385,
	0, 542, 386, 543, 388, 389, 0, 0, 390, 0,
	0, 0, 392, 393, 394, 0, 0, 395, 396, 544,
	0, 397, 0, 545, 398, 399, 391, 400, 401, 402,
	403, 404, 405, 406, 407, 0, 408, 409, 546, 547,
	548, 410, 549, 411, 412, 0, 413, 0, 414, 415,
	416, 417, 418, 419, 420, 550, 422, 421, 423, 0,
	0, 0, 0, 0, 0, 424, 0, 426, 427, 428,
	425, 429, 430, 431, 432, 0, 433, 434, 435, 0,
	436, 437, 438, 439, 551, 440, 0, 441, 442, 448,
	449, 443, 444, 614, 451, 452, 453, 454, 0, 456,
	457, 455, 458, 1423, 460, 0, 461, 445, 446, 462,
	463, 0, 464, 465, 552, 0, 466, 0, 467, 468,
	469, 470, 447, 471, 476, 553, 472, 473, 474, 475,
	554, 0, 478, 479, 0, 477, 0, 480, 481, 482,
	483, 484, 485, 311, 486, 0, 487, 613, 556, 557,
	558, 0, 494, 0, 488, 489, 559, 490, 560, 0,
	491, 492, 493, 0, 495, 496, 0, 0, 497, 498,
	499, 501, 502, 500, 503, 0, 504, 0, 0, 505,
	506, 507, 561, 562, 563, 0, 509, 508, 564, 1404,
	0, 237, 0, 510, 511, 565, 512, 513, 514, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 243, 244,
	245, 246, 247, 248, 0, 249, 250, 0, 0, 0,
	0, 0, 515, 0, 0, 0, 0, 251, 252, 254,
	253, 255, 256, 257, 516, 517, 0, 518, 258, 519,
	0, 259, 260, 261, 262, 263, 0, 0, 0, 264,
	520, 521, 522, 0, 265, 266, 523, 0, 0, 0,
	267, 268, 269, 270, 271, 272, 273, 0, 0, 275,
	276, 277, 274, 0, 278, 0, 279, 280, 281, 0,
	282, 0, 283, 284, 0, 0, 0, 0, 0, 0,
	0, 285, 286, 287, 288, 0, 289, 524, 525, 0,
	293, 290, 291, 0, 294, 292, 0, 295, 296, 0,
	0, 297, 298, 299, 0, 300, 301, 0, 302, 303,
	0, 304, 305, 526, 306, 307, 308, 310, 312, 309,
	313, 314, 315, 316, 527, 528, 0, 0, 0, 0,
	0, 0, 0, 317, 318, 319, 529, 0, 0, 0,
	320, 0, 321, 0, 0, 0, 322, 323, 530, 531,
	324, 325, 0, 326, 532, 0, 533, 327, 0, 328,
	329, 330, 331, 332, 1403, 535, 536, 387, 0, 333,
	334, 0, 335, 336, 337, 338, 0, 0, 0, 0,
	339, 340, 342, 0, 0, 341, 537, 538, 0, 539,
	0, 343, 0, 540, 0, 344, 345, 346, 0, 347,
	0, 0, 0, 348, 349, 350, 351, 352, 353, 0,
	355, 354, 0, 356, 541, 0, 357, 358, 0, 0,
	359, 360, 361, 0, 0, 362, 363, 364, 365, 0,
	366, 367, 369, 371, 368, 370, 375, 372, 373, 374,
	377, 0, 376, 0, 378, 379, 380, 383, 384, 382,
	0, 381, 0, 0, 0, 385, 0, 542, 386, 543,
	388, 389, 0, 0, 390, 0, 0, 0, 392, 393,
	394, 0, 0, 395, 396, 544, 0, 397, 0, 545,
	398, 399, 391, 400, 401, 402, 403, 404, 405, 406,
	407, 0, 408, 409, 546, 547, 548, 410, 549, 411,
	412, 0, 413, 0, 414, 415, 416, 417, 418, 419,
	420, 550, 422, 421, 423, 0, 0, 0, 0, 0,
	0, 424, 0, 426, 427, 428, 425, 429, 430, 431,
	432, 0, 433, 434, 435, 0, 436, 437, 438, 439,
	551, 440, 0, 441, 442, 448, 449, 443, 444, 450,
	451, 452, 453, 454, 0, 456, 457, 455, 458, 459,
	460, 0, 461, 445, 446, 462, 463, 0, 464, 465,
	552, 0, 466, 0, 467, 468, 469, 470, 447, 471,
	476, 553, 472, 473, 474, 475, 554, 0, 478, 479,
	0, 477, 0, 480, 481, 482, 483, 484, 485, 311,
	486, 0, 487, 555, 556, 557, 558, 0, 494, 0,
	488, 489, 559, 490, 560, 0, 491, 492, 493, 0,
	495, 496, 0, 0, 497, 498, 499, 501, 502, 500,
	503, 0, 504, 0, 0, 505, 506, 507, 561, 562,
	563, 0, 509, 508, 564, 1397, 0, 237, 0, 510,
	511, 565, 512, 513, 514, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 243, 244, 245, 246, 247, 248,
	0, 249, 250, 0, 0, 0, 0, 0, 515, 0,
	0, 0, 0, 251, 252, 254, 253, 255, 256, 257,
	516, 517, 0, 518, 258, 519, 0, 259, 260, 261,
	262, 263, 0, 0, 0, 264, 520, 521, 522, 0,
	265, 266, 523, 0, 0, 0, 267, 268, 269, 270,
	271, 272, 273, 0, 0, 275, 276, 277, 274, 0,
	278, 0, 279, 280, 281, 0, 282, 0, 283, 284,
	0, 0, 0, 0, 0, 0, 0, 285, 286, 287,
	288, 0, 289, 524, 525, 0, 293, 290, 291, 0,
	294, 292, 0, 295, 296, 0, 0, 297, 298, 299,
	0, 300, 301, 0, 302, 303, 0, 304, 305, 526,
	306, 307, 308, 310, 312, 309, 313, 314, 315, 316,
	527, 528, 0, 0, 0, 0, 0, 0, 0, 317,
	318, 319, 529, 0, 0, 0, 320, 0, 321, 0,
	0, 0, 322, 323, 530, 531, 324, 325, 0, 326,
	532, 0, 533, 327, 0, 328, 329, 330, 331, 332,
	1396, 535, 536, 387, 0, 333, 334, 0, 335, 336,
	337, 338, 0, 0, 0, 0, 339, 340, 342, 0,
	0, 341, 537, 538, 0, 539, 0, 343, 0, 540,
	0, 344, 345, 346, 0, 347, 0, 0, 0, 348,
	349, 350, 351, 352, 353, 0, 355, 354, 0, 356,
	541, 0, 357, 358, 0, 0, 359, 360, 361, 0,
	0, 362, 363, 364, 365, 0, 366, 367, 369, 371,
	368, 370, 375, 372, 373, 374, 377, 0, 376, 0,
	378, 379, 380, 383, 384, 382, 0, 381, 0, 0,
	0, 385, 0, 542, 386, 543, 388, 389, 0, 0,
	390, 0, 0, 0, 392, 393, 394, 0, 0, 395,
	396, 544, 0, 397, 0, 545, 398, 399, 391, 400,
	401, 402, 403, 404, 405, 406, 407, 0, 408, 409,
	546, 547, 548, 410, 549, 411, 412, 0, 413, 0,
	414, 415, 416, 417, 418, 419, 420, 550, 422, 421,
	423, 0, 0, 0, 0, 0, 0, 424, 0, 426,
	427, 428, 425, 429, 430, 431, 432, 0, 433, 434,
	435, 0, 436, 437, 438, 439, 551, 440, 0, 441,
	442, 448, 449, 443, 444, 450, 451, 452, 453, 454,
	0, 456, 457, 455, 458, 459, 460, 0, 461, 445,
	446, 462, 463, 0, 464, 465, 552, 0, 466, 0,
	467, 468, 469, 470, 447, 471, 476, 553, 472, 473,
	474, 475, 554, 0, 478, 479, 0, 477, 0, 480,
	481, 482, 483, 484, 485, 311, 486, 0, 487, 555,
	556, 557, 558, 0, 494, 0, 488, 489, 559, 490,
	560, 0, 491, 492, 493, 0, 495, 496, 0, 0,
	497, 498, 499, 501, 502, 500, 503, 0, 504, 0,
	0, 505, 506, 507, 561, 562, 563, 0, 509, 508,
	564, 1347, 0, 237, 0, 510, 511, 565, 512, 513,
	514, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	243, 244, 245, 246, 247, 248, 0, 249, 250, 0,
	0, 0, 0, 0, 515, 0, 0, 0, 0, 251,
	252, 254, 253, 255, 256, 257, 516, 517, 0, 518,
	258, 519, 0, 259, 260, 261, 262, 263, 0, 0,
	0, 264, 520, 521, 522, 0, 265, 266, 523, 0,
	0, 0, 267, 268, 269, 270, 271, 272, 273, 0,
	0, 275, 276, 277, 274, 0, 278, 0, 279, 280,
	281, 0, 282, 0, 283, 284, 0, 0, 0, 0,
	0, 0, 0, 285, 286, 287, 288, 0, 289, 524,
	525, 0, 293, 290, 291, 0, 294, 292, 0, 295,
	296, 0, 0, 297, 298, 299, 0, 300, 301, 0,
	302, 303, 0, 304, 305, 526, 306, 307, 308, 310,
	312, 309, 313, 314, 315, 316, 527, 528, 0, 0,
	0, 0, 0, 0, 0, 317, 318, 319, 529, 0,
	0, 0, 320, 0, 321, 0, 0, 0, 322, 323,
	530, 531, 324, 325, 0, 326, 532, 0, 533, 327,
	0, 328, 329, 330, 331, 332, 1346, 535, 536, 387,
	0, 333, 334, 0, 335, 336, 337, 338, 0, 0,
	0, 0, 339, 340, 342, 0, 0, 341, 537, 538,
	0, 539, 0, 343, 0, 540, 0, 344, 345, 346,
	0, 347, 0, 0, 0, 348, 349, 350, 351, 352,
	353, 0, 355, 354, 0, 356, 541, 0, 357, 358,
	0, 0, 359, 360, 361, 0, 0, 362, 363, 364,
	365, 0, 366, 367, 369, 371, 368, 370, 375, 372,
	373, 374, 377, 0, 376, 0, 378, 379, 380, 383,
	384, 382, 0, 381, 0, 0, 0, 385, 0, 542,
	386, 543, 388, 389, 0, 0, 390, 0, 0, 0,
	392, 393, 394, 0, 0, 395, 396, 544, 0, 397,
	0, 545, 398, 399, 391, 400, 401, 402, 403, 404,
	405, 406, 407, 0, 408, 409, 546, 547, 548, 410,
	549, 411, 412, 0, 413, 0, 414, 415, 416, 417,
	418, 419, 420, 550, 422, 421, 423, 0, 0, 0,
	0, 0, 0, 424, 0, 426, 427, 428, 425, 429,
	430, 431, 432, 0, 433, 434, 435, 0, 436, 437,
	438, 439, 551, 440, 0, 441, 442, 448, 449, 443,
	444, 450, 451, 452, 453, 454, 0, 456, 457, 455,
	458, 459, 460, 0, 461, 445, 446, 462, 463, 0,
	464, 465, 552, 0, 466, 0, 467, 468, 469, 470,
	447, 471, 476, 553, 472, 473, 474, 475, 554, 0,
	478, 479, 0, 477, 0, 480, 481, 482, 483, 484,
	485, 311, 486, 0, 487, 555, 556, 557, 558, 0,
	494, 0, 488, 489, 559, 490, 560, 0, 491, 492,
	493, 0, 495, 496, 0, 0, 497, 498, 499, 501,
	502, 500, 503, 0, 504, 0, 0, 505, 506, 507,
	561, 562, 563, 0, 509, 508, 564, 1333, 0, 237,
	0, 510, 511, 565, 512, 513, 514, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 243, 244, 245, 246,
	247, 248, 0, 249, 250, 0, 0, 0, 0, 0,
	515, 0, 0, 0, 0, 251, 252, 254, 253, 255,
	256, 257, 516, 517, 0, 518, 258, 519, 0, 259,
	260, 261, 262, 263, 0, 0, 0, 264, 520, 521,
	522, 0, 265, 266, 523, 0, 0, 0, 267, 268,
	269, 270, 271, 272, 273, 0, 0, 275, 276, 277,
	274, 0, 278, 0, 279, 280, 281, 0, 282, 0,
	283, 284, 0, 0, 0, 0, 0, 0, 0, 285,
	286, 287, 288, 0, 289, 524, 525, 0, 293, 290,
	291, 0, 294, 292, 0, 295, 296, 0, 0, 297,
	298, 299, 0, 300, 301, 0, 302, 303, 0, 304,
	305, 526, 306, 307, 308, 310, 312, 309, 313, 314,
	315, 316, 527, 528, 0, 0, 0, 0, 0, 0,
	0, 317, 318, 319, 529, 0, 0, 0, 320, 0,
	321, 0, 0, 0, 322, 323, 530, 531, 324, 325,
	0, 326, 532, 0, 533, 327, 0, 328, 329, 330,
	331, 332, 1332, 535, 536, 387, 0, 333, 334, 0,
	335, 336, 337, 338, 0, 0, 0, 0, 339, 340,
	342, 0, 0, 341, 537, 538, 0, 539, 0, 343,
	0, 540, 0, 344, 345, 346, 0, 347, 0, 0,
	0, 348, 349, 350, 351, 352, 353, 0, 355, 354,
	0, 356, 541, 0, 357, 358, 0, 0, 359, 360,
	361, 0, 0, 362, 363, 364, 365, 0, 366, 367,
	369, 371, 368, 370, 375, 372, 373, 374, 377, 0,
	376, 0, 378, 379, 380, 383, 384, 382, 0, 381,
	0, 0, 0, 385, 0, 542, 386, 543, 388, 389,
	0, 0, 390, 0, 0, 0, 392, 393, 394, 0,
	0, 395, 396, 544, 0, 397, 0, 545, 398, 399,
	391, 400, 401, 402, 403, 404, 405, 406, 407, 0,
	408, 409, 546, 547, 548, 410, 549, 411, 412, 0,
	413, 0, 414, 415, 416, 417, 418, 419, 420, 550,
	422, 421, 423, 0, 0, 0, 0, 0, 0, 424,
	0, 426, 427, 428, 425, 429, 430, 431, 432, 0,
	433, 434, 435, 0, 436, 437, 438, 439, 551, 440,
	0, 441, 442, 448, 449, 443, 444, 450, 451, 452,
	453, 454, 0, 456, 457, 455, 458, 459, 460, 0,
	461, 445, 446, 462, 463, 0, 464, 465, 552, 0,
	466, 0, 467, 468, 469, 470, 447, 471, 476, 553,
	472, 473, 474, 475, 554, 0, 478, 479, 0, 477,
	0, 480, 481, 482, 483, 484, 485, 311, 486, 0,
	487, 555, 556, 557, 558, 0, 494, 0, 488, 489,
	559, 490, 560, 0, 491, 492, 493, 0, 495, 496,
	0, 0, 497, 498, 499, 501, 502, 500, 503, 0,
	504, 0, 0, 505, 506, 507, 561, 562, 563, 0,
	509, 508, 564, 1328, 0, 237, 0, 510, 511, 565,
	512, 513, 514, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 243, 244, 245, 246, 247, 248, 0, 249,
	250, 0, 0, 0, 0, 0, 515, 0, 0, 0,
	0, 251, 252, 254, 253, 255, 256, 257, 516, 517,
	0, 518, 258, 519, 0, 259, 260, 261, 262, 263,
	0, 0, 0, 264, 520, 521, 522, 0, 265, 266,
	523, 0, 0, 0, 267, 268, 269, 270, 271, 272,
	273, 0, 0, 275, 276, 277, 274, 0, 278, 0,
	279, 280, 281, 0, 282, 0, 283, 284, 0, 0,
	0, 0, 0, 0, 0, 285, 286, 287, 288, 0,
	289, 524, 525, 0, 293, 290, 291, 0, 294, 292,
	0, 295, 296, 0, 0, 297, 298, 299, 0, 300,
	301, 0, 302, 303, 0, 304, 305, 526, 306, 307,
	308, 310, 312, 309, 313, 314, 315, 316, 527, 528,
	0, 0, 0, 0, 0, 0, 0, 317, 318, 319,
	529, 0, 0, 0, 320, 0, 321, 0, 0, 0,
	322, 323, 530, 531, 324, 325, 0, 326, 532, 0,
	533, 327, 0, 328, 329, 330, 331, 332, 534, 535,
	536, 387, 0, 333, 334, 0, 335, 336, 337, 338,
	0, 0, 0, 0, 339, 340, 342, 0, 0, 341,
	537, 538, 0, 539, 0, 343, 0, 540, 0, 344,
	345, 346, 0, 347, 0, 0, 0, 348, 349, 350,
	351, 352, 353, 0, 355, 354, 0, 356, 541, 0,
	357, 358, 0, 0, 359, 360, 361, 0, 0, 362,
	363, 364, 365, 0, 366, 367, 369, 371, 368, 370,
	375, 372, 373, 374, 377, 0, 376, 0, 378, 379,
	380, 383, 384, 382, 0, 381, 0, 0, 0, 385,
	0, 542, 386, 543, 388, 389, 0, 0, 390, 0,
	0, 0, 392, 393, 394, 0, 0, 395, 396, 544,
	0, 397, 0, 545, 398, 399, 391, 400, 401, 402,
	403, 404, 405, 406, 407, 0, 408, 409, 546, 547,
	548, 410, 549, 411, 412, 0, 413, 0, 414, 415,
	416, 417, 418, 419, 420, 550, 422, 421, 423, 0,
	0, 0, 0, 0, 0, 424, 0, 426, 427, 428,
	425, 429, 430, 431, 432, 0, 433, 434, 435, 0,
	436, 437, 438, 439, 551, 440, 0, 441, 442, 448,
	449, 443, 444, 450, 451, 452, 453, 454, 0, 456,
	457, 455, 458, 459, 460, 0, 461, 445, 446, 462,
	463, 0, 464, 465, 552, 0, 466, 0, 467, 468,
	469, 470, 447, 471, 476, 553, 472, 473, 474, 475,
	554, 0, 478, 479, 0, 477, 0, 480, 481, 482,
	483, 484, 485, 311, 486, 0, 487, 555, 556, 557,
	558, 0, 494, 0, 488, 489, 559, 490, 560, 0,
	491, 492, 493, 0, 495, 496, 0, 0, 497, 498,
	499, 501, 502, 500, 503, 0, 504, 0, 0, 505,
	506, 507, 561, 562, 563, 0, 509, 508, 564, 1261,
	0, 237, 0, 510, 511, 565, 512, 513, 514, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 243, 244,
	245, 246, 247, 248, 0, 249, 250, 0, 0, 0,
	0, 0, 515, 0, 0, 0, 0, 251, 252, 254,
	253, 255, 256, 257, 516, 517, 0, 518, 258, 519,
	0, 259, 260, 261, 262, 263, 0, 0, 0, 264,
	520, 521, 522, 0, 265, 266, 523, 0, 0, 0,
	267, 268, 269, 270, 271, 272, 273, 0, 0, 275,
	276, 277, 274, 0, 278, 0, 279, 280, 281, 0,
	282, 0, 283, 284, 0, 0, 0, 0, 0, 0,
	0, 285, 286, 287, 288, 0, 289, 524, 525, 0,
	293, 290, 291, 0, 294, 292, 0, 295, 296, 0,
	0, 297, 298, 299, 0, 300, 301, 0, 302, 303,
	0, 304, 305, 526, 306, 307, 308, 310, 312, 309,
	313, 314, 315, 316, 527, 528, 0, 0, 0, 0,
	0, 0, 0, 317, 318, 319, 529, 0, 0, 0,
	320, 0, 321, 0, 0, 0, 322, 323, 530, 531,
	324, 325, 0, 326, 532, 0, 533, 327, 0, 328,
	329, 330, 331, 332, 534, 535, 536, 387, 0, 333,
	334, 0, 335, 336, 337, 338, 0, 0, 0, 0,
	339, 340, 342, 0, 0, 341, 537, 538, 0, 539,
	0, 343, 0, 540, 0, 344, 345, 346, 0, 347,
	0, 0, 0, 348, 349, 350, 351, 352, 353, 0,
	355, 354, 0, 356, 541, 0, 357, 358, 0, 0,
	359, 360, 361, 0, 0, 362, 363, 364, 365, 0,
	366, 367, 369, 371, 368, 370, 375, 372, 373, 374,
	377, 0, 376, 0, 378, 379, 380, 383, 384, 382,
	0, 381, 0, 0, 0, 385, 0, 542, 386, 543,
	388, 389, 0, 0, 390, 0, 0, 0, 392, 393,
	394, 0, 0, 395, 396, 544, 0, 397, 0, 545,
	398, 399, 391, 400, 401, 402, 403, 404, 405, 406,
	407, 0, 408, 409, 546, 547, 548, 410, 549, 411,
	412, 0, 413, 0, 414, 415, 416, 417, 418, 419,
	420, 550, 422, 421, 423, 0, 0, 0, 0, 0,
	0, 424, 0, 426, 427, 428, 425, 429, 430, 431,
	432, 0, 433, 434, 435, 0, 436, 437, 438, 439,
	551, 440, 0, 441, 442, 448, 449, 443, 444, 450,
	451, 452, 453, 454, 0, 456, 457, 455, 458, 459,
	460, 0, 461, 445, 446, 462, 463, 0, 464, 465,
	552, 0, 466, 0, 467, 468, 469, 470, 447, 471,
	476, 553, 472, 473, 474, 475, 554, 0, 478, 479,
	0, 477, 0, 480, 481, 482, 483, 484, 485, 311,
	486, 0, 487, 555, 556, 557, 558, 0, 494, 0,
	488, 489, 559, 490, 560, 0, 491, 492, 493, 0,
	495, 496, 0, 0, 497, 498, 499, 501, 502, 500,
	503, 0, 504, 0, 0, 505, 506, 507, 561, 562,
	563, 0, 509, 508, 564, 1245, 0, 237, 0, 510,
	511, 565, 512, 513, 514, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 243, 244, 245, 246, 247, 248,
	0, 249, 250, 0, 0, 0, 0, 0, 515, 0,
	0, 0, 0, 251, 252, 254, 253, 255, 256, 257,
	516, 517, 0, 518, 258, 519, 0, 259, 260, 261,
	262, 263, 0, 0, 0, 264, 520, 521, 522, 0,
	265, 266, 523, 0, 0, 0, 267, 268, 269, 270,
	271, 272, 273, 0, 0, 275, 276, 277, 274, 0,
	278, 0, 279, 280, 281, 0, 282, 0, 283, 284,
	0, 0, 0, 0, 0, 0, 0, 285, 286, 287,
	288, 0, 289, 524, 525, 0, 293, 290, 291, 0,
	294, 292, 0, 295, 296, 0, 0, 297, 298, 299,
	0, 300, 301, 0, 302, 303, 0, 304, 305, 526,
	306, 307, 308, 310, 312, 309, 313, 314, 315, 316,
	527, 528, 0, 0, 0, 0, 0, 0, 0, 317,
	318, 319, 529, 0, 0, 0, 320, 0, 321, 0,
	0, 0, 322, 323, 530, 531, 324, 325, 0, 326,
	532, 0, 533, 327, 0, 328, 329, 330, 331, 332,
	534, 535, 536, 387, 0, 333, 334, 0, 335, 336,
	337, 338, 0, 0, 0, 0, 339, 340, 342, 0,
	0, 341, 537, 538, 0, 539, 0, 343, 0, 540,
	0, 344, 345, 346, 0, 347, 0, 0, 0, 348,
	349, 350, 351, 352, 353, 0, 355, 354, 0, 356,
	541, 0, 357, 358, 0, 0, 359, 360, 361, 0,
	0, 362, 363, 364, 365, 0, 366, 367, 369, 371,
	368, 370, 375, 372, 373, 374, 377, 0, 376, 0,
	378, 379, 380, 383, 384, 382, 0, 381, 0, 0,
	0, 385, 0, 542, 386, 543, 388, 389, 0, 0,
	390, 0, 0, 0, 392, 393, 394, 0, 0, 395,
	396, 544, 0, 397, 0, 545, 398, 399, 391, 400,
	401, 402, 403, 404, 405, 406, 407, 0, 408, 409,
	546, 547, 548, 410, 549, 411, 412, 0, 413, 0,
	414, 415, 416, 417, 418, 419, 420, 550, 422, 421,
	423, 0, 0, 0, 0, 0, 0, 424, 0, 426,
	427, 428, 425, 429, 430, 431, 432, 0, 433, 434,
	435, 0, 436, 437, 438, 439, 551, 440, 0, 441,
	442, 448, 449, 443, 444, 450, 451, 452, 453, 454,
	0, 456, 457, 455, 458, 459, 460, 0, 461, 445,
	446, 462, 463, 0, 464, 465, 552, 0, 466, 0,
	467, 468, 469, 470, 447, 471, 476, 553, 472, 473,
	474, 475, 554, 0, 478, 479, 0, 477, 0, 480,
	481, 482, 483, 484, 485, 311, 486, 0, 487, 555,
	556, 557, 558, 0, 494, 0, 488, 489, 559, 490,
	560, 0, 491, 492, 493, 0, 495, 496, 0, 0,
	497, 498, 499, 501, 502, 500, 503, 0, 504, 0,
	0, 505, 506, 507, 561, 562, 563, 0, 509, 508,
	564, 617, 0, 237, 0, 510, 511, 565, 512, 513,
	514, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	243, 244, 245, 246, 247, 248, 0, 249, 250, 0,
	0, 0, 0, 0, 515, 0, 0, 0, 0, 251,
	252, 1117, 253, 255, 256, 257, 516, 517, 0, 518,
	258, 519, 0, 259, 260, 261, 262, 263, 0, 0,
	0, 264, 520, 521, 1115, 0, 265, 266, 523, 0,
	0, 0, 267, 268, 269, 270, 271, 272, 273, 0,
	0, 275, 276, 277, 274, 0, 278, 0, 279, 280,
	281, 0, 282, 0, 283, 284, 0, 0, 0, 0,
	0, 0, 0, 285, 286, 287, 288, 0, 289, 524,
	525, 0, 293, 290, 291, 0, 294, 292, 0, 295,
	296, 0, 0, 297, 298, 299, 0, 300, 301, 0,
	302, 303, 0, 304, 305, 526, 306, 307, 308, 310,
	312, 309, 313, 314, 315, 316, 527, 528, 0, 0,
	0, 0, 0, 0, 0, 317, 318, 319, 529, 0,
	0, 0, 320, 0, 321, 0, 0, 0, 322, 323,
	530, 531, 324, 325, 0, 326, 532, 0, 533, 327,
	0, 328, 329, 330, 331, 332, 534, 535, 536, 387,
	0, 333, 334, 0, 335, 336, 337, 338, 0, 0,
	0, 0, 339, 340, 342, 0, 0, 341, 537, 538,
	0, 539, 0, 343, 0, 540, 0, 344, 345, 346,
	0, 347, 0, 0, 0, 348, 349, 350, 351, 352,
	353, 0, 355, 354, 0, 356, 541, 0, 357, 358,
	0, 0, 359, 360, 361, 0, 0, 362, 363, 364,
	365, 0, 366, 367, 369, 371, 368, 370, 375, 372,
	373, 374, 377, 0, 618, 0, 378, 379, 380, 383,
	384, 382, 0, 381, 0, 0, 0, 385, 0, 542,
	386, 543, 388, 389, 0, 0, 390, 0, 0, 0,
	392, 393, 394, 0, 0, 395, 396, 544, 0, 397,
	0, 545, 398, 399, 391, 400, 401, 402, 403, 404,
	405, 406, 407, 0, 408, 409, 546, 547, 548, 410,
	549, 411, 412, 0, 413, 0, 414, 415, 416, 417,
	418, 419, 420, 550, 422, 421, 423, 0, 0, 0,
	0, 0, 0, 424, 0, 426, 427, 428, 425, 429,
	430, 431, 432, 0, 433, 434, 435, 0, 436, 437,
	438, 439, 551, 440, 0, 441, 442, 448, 449, 443,
	444, 614, 451, 452, 453, 454, 0, 456, 457, 455,
	458, 1118, 460, 0, 461, 445, 446, 462, 463, 0,
	464, 465, 552, 0, 466, 0, 467, 468, 469, 470,
	447, 471, 476, 553, 472, 473, 474, 475, 554, 0,
	478, 479, 0, 477, 0, 480, 481, 482, 483, 484,
	485, 311, 486, 0, 487, 613, 556, 557, 558, 0,
	494, 0, 488, 1116, 559, 490, 560, 0, 491, 492,
	493, 0, 495, 496, 0, 0, 497, 498, 499, 501,
	502, 500, 503, 0, 504, 0, 0, 505, 506, 507,
	561, 562, 563, 237, 509, 508, 564, 0, 0, 0,
	0, 510, 511, 565, 512, 513, 514, 0, 0, 0,
	243, 244, 245, 246, 247, 248, 1099, 249, 250, 0,
	0, 0, 0, 0, 515, 0, 0, 0, 0, 251,
	252, 254, 253, 255, 256, 257, 516, 517, 0, 518,
	258, 519, 0, 259, 260, 261, 262, 263, 0, 0,
	0, 264, 520, 521, 522, 0, 265, 266, 523, 0,
	0, 0, 267, 268, 269, 270, 271, 272, 273, 0,
	0, 275, 276, 277, 274, 0, 278, 0, 279, 280,
	281, 0, 282, 0, 283, 284, 0, 0, 0, 0,
	0, 0, 0, 285, 286, 287, 288, 0, 289, 524,
	525, 0, 293, 290, 291, 0, 294, 292, 0, 295,
	296, 0, 0, 297, 298, 299, 0, 300, 301, 0,
	302, 303, 0, 304, 305, 526, 306, 307, 308, 310,
	312, 309, 313, 314, 315, 316, 527, 528, 0, 0,
	0, 0, 0, 0, 0, 317, 318, 319, 529, 0,
	0, 0, 320, 0, 321, 0, 0, 0, 322, 323,
	530, 531, 324, 325, 0, 326, 532, 0, 533, 327,
	0, 328, 329, 330, 331, 332, 534, 535, 536, 387,
	0, 333, 334, 0, 335, 336, 337, 338, 0, 0,
	0, 0, 339, 340, 342, 0, 0, 341, 537, 538,
	0, 539, 0, 343, 0, 540, 0, 344, 345, 346,
	0, 347, 0, 0, 0, 348, 349, 350, 351, 352,
	353, 0, 355, 354, 0, 356, 541, 0, 357, 358,
	0, 0, 359, 360, 361, 0, 0, 362, 363, 364,
	365, 0, 366, 367, 369, 371, 368, 370, 375, 372,
	373, 374, 377, 0, 376, 0, 378, 379, 380, 383,
	384, 382, 0, 381, 0, 0, 0, 385, 0, 542,
	386, 543, 388, 389, 0, 0, 390, 0, 0, 0,
	392, 393, 394, 0, 0, 395, 396, 544, 0, 397,
	0, 545, 398, 399, 391, 400, 401, 402, 403, 404,
	405, 406, 407, 0, 408, 409, 546, 547, 548, 410,
	549, 411, 412, 0, 413, 0, 414, 415, 416, 417,
	418, 419, 420, 550, 422, 421, 423, 0, 0, 0,
	0, 0, 0, 424, 0, 426, 427, 428, 425, 429,
	430, 431, 432, 0, 433, 434, 435, 0, 436, 437,
	438, 439, 551, 440, 0, 441, 442, 448, 449, 443,
	444, 450, 451, 452, 453, 454, 0, 456, 457, 455,
	458, 459, 460, 0, 461, 445, 446, 462, 463, 0,
	464, 465, 552, 0, 466, 0, 467, 468, 469, 470,
	447, 471, 476, 553, 472, 473, 474, 475, 554, 0,
	478, 479, 0, 477, 0, 480, 481, 482, 483, 484,
	485, 311, 486, 0, 487, 555, 556, 557, 558, 0,
	494, 0, 488, 489, 559, 490, 560, 0, 491, 492,
	493, 0, 495, 496, 0, 0, 497, 498, 499, 501,
	502, 500, 503, 0, 504, 0, 0, 505, 506, 507,
	561, 562, 563, 237, 509, 508, 564, 0, 0, 0,
	0, 510, 511, 565, 512, 513, 514, 0, 0, 0,
	243, 244, 245, 246, 247, 248, 623, 249, 250, 0,
	0, 0, 0, 0, 515, 0, 0, 0, 0, 251,
	252, 254, 253, 255, 256, 257, 516, 517, 0, 518,
	258, 519, 0, 259, 260, 261, 262, 263, 0, 0,
	0, 264, 520, 521, 522, 0, 265, 266, 523, 0,
	0, 0, 267, 268, 269, 270, 271, 272, 273, 0,
	0, 275, 276, 277, 274, 0, 278, 0, 279, 280,
	281, 0, 282, 0, 283, 284, 0, 0, 0, 0,
	0, 0, 0, 285, 286, 287, 288, 0, 289, 524,
	525, 0, 293, 290, 291, 0, 294, 292, 0, 295,
	296, 0, 0, 297, 298, 299, 0, 300, 301, 0,
	302, 303, 0, 304, 305, 526, 306, 307, 308, 310,
	312, 309, 313, 314, 315, 316, 527, 528, 0, 0,
	0, 0, 0, 0, 0, 317, 318, 319, 529, 0,
	0, 0, 320, 0, 321, 0, 0, 0, 322, 323,
	530, 531, 324, 325, 0, 326, 532, 0, 533, 327,
	0, 328, 329, 330, 331, 332, 534, 535, 536, 387,
	0, 333, 334, 0, 335, 336, 337, 338, 0, 0,
	0, 0, 339, 340, 342, 0, 0, 341, 537, 538,
	0, 539, 0, 343, 0, 540, 0, 344, 345, 346,
	0, 347, 0, 0, 0, 348, 349, 350, 351, 352,
	353, 0, 355, 354, 0, 356, 541, 0, 357, 358,
	0, 0, 359, 360, 361, 0, 0, 362, 363, 364,
	365, 0, 366, 367, 369, 371, 368, 370, 375, 372,
	373, 374, 377, 0, 376, 0, 378, 379, 380, 383,
	384, 382, 0, 381, 0, 0, 0, 385, 0, 542,
	386, 543, 388, 389, 0, 0, 390, 0, 0, 0,
	392, 393, 394, 0, 0, 395, 396, 544, 0, 397,
	0, 545, 398, 399, 391, 400, 401, 402, 403, 404,
	405, 406, 407, 0, 408, 409, 546, 547, 548, 410,
	549, 411, 412, 0, 413, 0, 414, 415, 416, 417,
	418, 419, 420, 550, 422, 421, 423, 0, 0, 0,
	0, 0, 0, 424, 0, 426, 427, 428, 425, 429,
	430, 431, 432, 0, 433, 434, 435, 0, 436, 437,
	438, 439, 551, 440, 0, 441, 442, 448, 449, 443,
	444, 450, 451, 452, 453, 454, 0, 456, 457, 455,
	458, 459, 460, 0, 461, 445, 446, 462, 463, 0,
	464, 465, 552, 0, 466, 0, 467, 468, 469, 470,
	447, 471, 476, 553, 472, 473, 474, 475, 554, 0,
	478, 479, 0, 477, 0, 480, 481, 482, 483, 484,
	485, 311, 486, 0, 487, 555, 556, 557, 558, 0,
	494, 0, 488, 489, 559, 490, 560, 0, 491, 492,
	493, 0, 495, 496, 0, 0, 497, 498, 499, 501,
	502, 500, 503, 0, 504, 0, 0, 505, 506, 507,
	561, 562, 563, 0, 509, 508, 564, 617, 0, 237,
	0, 510, 511, 565, 512, 513, 514, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 243, 244, 245, 246,
	247, 248, 0, 249, 250, 0, 0, 0, 0, 0,
	515, 0, 0, 0, 0, 251, 252, 254, 253, 255,
	256, 257, 516, 517, 0, 518, 258, 519, 0, 259,
	260, 261, 262, 263, 0, 0, 0, 264, 520, 521,
	522, 0, 265, 607, 523, 0, 0, 0, 267, 268,
	269, 270, 271, 272, 273, 0, 0, 275, 276, 277,
	274, 0, 605, 0, 279, 280, 281, 0, 282, 0,
	283, 284, 0, 0, 0, 0, 0, 0, 0, 285,
	286, 287, 288, 0, 289, 524, 525, 0, 293, 290,
	291, 0, 294, 292, 0, 295, 296, 0, 0, 297,
	298, 299, 0, 300, 301, 0, 302, 303, 0, 304,
	305, 526, 306, 307, 308, 310, 312, 309, 313, 314,
	315, 316, 527, 528, 0, 0, 0, 0, 0, 0,
	0, 317, 318, 319, 529, 0, 0, 0, 320, 0,
	321, 0, 0, 0, 322, 323, 530, 531, 324, 325,
	0, 326, 532, 0, 533, 327, 0, 328, 329, 330,
	331, 332, 534, 535, 536, 387, 0, 333, 334, 0,
	335, 336, 337, 338, 0, 0, 0, 0, 339, 340,
	342, 0, 0, 341, 537, 538, 0, 539, 0, 343,
	0, 540, 0, 344, 345, 346, 0, 347, 0, 0,
	0, 348, 349, 350, 351, 352, 353, 0, 355, 354,
	0, 356, 541, 0, 357, 358, 0, 0, 359, 360,
	606, 0, 0, 362, 363, 364, 365, 0, 366, 367,
	369, 371, 368, 370, 375, 372, 373, 374, 377, 0,
	618, 0, 378, 379, 380, 383, 384, 382, 0, 381,
	0, 0, 0, 385, 0, 542, 386, 543, 388, 389,
	0, 0, 390, 0, 0, 0, 392, 393, 394, 0,
	0, 395, 396, 544, 0, 397, 0, 545, 398, 399,
	391, 400, 401, 402, 403, 404, 405, 406, 407, 0,
	408, 409, 546, 547, 548, 410, 549, 411, 412, 0,
	413, 0, 414, 415, 416, 417, 418, 419, 420, 550,
	422, 421, 423, 0, 0, 0, 0, 0, 0, 424,
	0, 426, 427, 428, 425, 429, 430, 431, 432, 0,
	433, 434, 435, 0, 436, 437, 438, 439, 608, 440,
	0, 441, 442, 448, 449, 443, 444, 614, 451, 452,
	453, 454, 0, 456, 457, 455, 458, 609, 460, 0,
	461, 445, 446, 462, 463, 0, 464, 465, 552, 0,
	466, 0, 467, 468, 469, 470, 447, 471, 476, 553,
	472, 473, 474, 475, 554, 0, 478, 479, 0, 477,
	0, 480, 481, 482, 483, 484, 485, 311, 486, 0,
	487, 613, 556, 557, 558, 0, 494, 0, 488, 611,
	559, 490, 560, 0, 491, 492, 493, 0, 495, 496,
	0, 0, 497, 498, 499, 501, 502, 500, 503, 0,
	504, 0, 0, 505, 506, 507, 561, 562, 563, 0,
	509, 508, 564, 601, 0, 237, 0, 510, 511, 565,
	512, 513, 514, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 243, 244, 245, 246, 247, 248, 0, 249,
	250, 0, 0, 0, 0, 0, 515, 0, 0, 0,
	0, 251, 252, 254, 253, 255, 256, 257, 516, 517,
	0, 518, 258, 519, 0, 259, 260, 261, 262, 263,
	0, 0, 0, 264, 520, 521, 522, 0, 265, 266,
	523, 0, 0, 0, 267, 268, 269, 270, 271, 272,
	273, 0, 0, 275, 276, 277, 274, 0, 278, 0,
	279, 280, 281, 0, 282, 0, 283, 284, 0, 0,
	0, 0, 0, 0, 0, 285, 286, 287, 288, 0,
	289, 524, 525, 0, 293, 290, 291, 0, 294, 292,
	0, 295, 296, 0, 0, 297, 298, 299, 0, 300,
	301, 0, 302, 303, 0, 304, 305, 526, 306, 307,
	308, 310, 312, 309, 313, 314, 315, 316, 527, 528,
	0, 0, 0, 0, 0, 0, 0, 317, 318, 319,
	529, 0, 0, 0, 320, 0, 321, 0, 0, 0,
	322, 323, 530, 531, 324, 325, 0, 326, 532, 0,
	533, 327, 0, 328, 329, 330, 331, 332, 534, 535,
	536, 387, 0, 333, 334, 0, 335, 336, 337, 338,
	0, 0, 0, 0, 339, 340, 342, 0, 0, 341,
	537, 538, 0, 539, 0, 343, 0, 540, 0, 344,
	345, 346, 0, 347, 0, 0, 0, 348, 349, 350,
	351, 352, 353, 0, 355, 354, 0, 356, 541, 0,
	357, 358, 0, 0, 359, 360, 361, 0, 0, 362,
	363, 364, 365, 0, 366, 367, 369, 371, 368, 370,
	375, 372, 373, 374, 377, 0, 376, 0, 378, 379,
	380, 383, 384, 382, 0, 381, 0, 0, 0, 385,
	0, 542, 386, 543, 388, 389, 0, 0, 390, 0,
	0, 0, 392, 393, 394, 0, 0, 395, 396, 544,
	0, 397, 0, 545, 398, 399, 391, 400, 401, 402,
	403, 404, 405, 406, 407, 0, 408, 409, 546, 547,
	548, 410, 549, 411, 412, 0, 413, 0, 414, 415,
	416, 417, 418, 419, 420, 550, 422, 421, 423, 0,
	0, 0, 0, 0, 0, 424, 0, 426, 427, 428,
	425, 429, 430, 431, 432, 0, 433, 434, 435, 0,
	436, 437, 438, 439, 551, 440, 0, 441, 442, 602,
	449, 443, 444, 450, 451, 452, 453, 454, 0, 456,
	457, 455, 458, 459, 460, 0, 461, 445, 446, 462,
	463, 0, 464, 465, 552, 0, 466, 0, 467, 468,
	469, 470, 447, 471, 476, 553, 472, 473, 474, 475,
	554, 0, 478, 479, 0, 477, 0, 480, 481, 482,
	483, 484, 485, 311, 486, 0, 487, 555, 556, 557,
	558, 0, 494, 0, 488, 489, 559, 490, 560, 0,
	491, 492, 493, 0, 495, 496, 0, 0, 497, 498,
	499, 501, 502, 500, 503, 0, 504, 0, 0, 505,
	506, 507, 561, 562, 563, 0, 509, 508, 564, 599,
	0, 237, 0, 510, 511, 565, 512, 513, 514, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 243, 244,
	245, 246, 247, 248, 0, 249, 250, 0, 0, 0,
	0, 0, 515, 0, 0, 0, 0, 251, 252, 254,
	253, 255, 256, 257, 516, 517, 0, 518, 258, 519,
	0, 259, 260, 261, 262, 263, 0, 0, 0, 264,
	520, 521, 522, 0, 265, 266, 523, 0, 0, 0,
	267, 268, 269, 270, 271, 272, 273, 0, 0, 275,
	276, 277, 274, 0, 278, 0, 279, 280, 281, 0,
	282, 0, 283, 284, 0, 0, 0, 0, 0, 0,
	0, 285, 286, 287, 288, 0, 289, 524, 525, 0,
	293, 290, 291, 0, 294, 292, 0, 295, 296, 0,
	0, 297, 298, 299, 0, 300, 301, 0, 302, 303,
	0, 304, 305, 526, 306, 307, 308, 310, 312, 309,
	313, 314, 315, 316, 527, 528, 0, 0, 0, 0,
	0, 0, 0, 317, 318, 319, 529, 0, 0, 0,
	320, 0, 321, 0, 0, 0, 322, 323, 530, 531,
	324, 325, 0, 326, 532, 0, 533, 327, 0, 328,
	329, 330, 331, 332, 534, 535, 536, 387, 0, 333,
	334, 0, 335, 336, 337, 338, 0, 0, 0, 0,
	339, 340, 342, 0, 0, 341, 537, 538, 0, 539,
	0, 343, 0, 540, 0, 344, 345, 346, 0, 347,
	0, 0, 0, 348, 349, 350, 351, 352, 353, 0,
	355, 354, 0, 356, 541, 0, 357, 358, 0, 0,
	359, 360, 361, 0, 0, 362, 363, 364, 365, 0,
	366, 367, 369, 371, 368, 370, 375, 372, 373, 374,
	377, 0, 376, 0, 378, 379, 380, 383, 384, 382,
	0, 381, 0, 0, 0, 385, 0, 542, 386, 543,
	388, 389, 0, 0, 390, 0, 0, 0, 392, 393,
	394, 0, 0, 395, 396, 544, 0, 397, 0, 545,
	398, 399, 391, 400, 401, 402, 403, 404, 405, 406,
	407, 0, 408, 409, 546, 547, 548, 410, 549, 411,
	412, 0, 413, 0, 414, 415, 416, 417, 418, 419,
	420, 550, 422, 421, 423, 0, 0, 0, 0, 0,
	0, 424, 0, 426, 427, 428, 425, 429, 430, 431,
	432, 0, 433, 434, 435, 0, 436, 437, 438, 439,
	551, 440, 0, 441, 442, 448, 449, 443, 444, 450,
	451, 452, 453, 454, 0, 456, 457, 455, 458, 459,
	460, 0, 461, 445, 446, 462, 463, 0, 464, 465,
	552, 0, 466, 0, 467, 468, 469, 470, 447, 471,
	476, 553, 472, 473, 474, 475, 554, 0, 478, 479,
	0, 477, 0, 480, 481, 482, 483, 484, 485, 311,
	486, 0, 487, 555, 556, 557, 558, 0, 494, 0,
	488, 489, 559, 490, 560, 0, 491, 492, 493, 0,
	495, 496, 0, 0, 497, 498, 499, 501, 502, 500,
	503, 0, 504, 0, 0, 505, 506, 507, 561, 562,
	563, 0, 509, 508, 564, 593, 0, 237, 0, 510,
	511, 565, 512, 513, 514, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 243, 244, 245, 246, 247, 248,
	0, 249, 250, 0, 0, 0, 0, 0, 515, 0,
	0, 0, 0, 251, 252, 254, 253, 255, 256, 257,
	516, 517, 0, 518, 258, 519, 0, 259, 260, 261,
	262, 263, 0, 0, 0, 264, 520, 521, 522, 0,
	265, 266, 523, 0, 0, 0, 267, 268, 269, 270,
	271, 272, 273, 0, 0, 275, 276, 277, 274, 0,
	278, 0, 279, 280, 281, 0, 282, 0, 283, 284,
	0, 0, 0, 0, 0, 0, 0, 285, 286, 287,
	288, 0, 289, 524, 525, 0, 293, 290, 291, 0,
	294, 292, 0, 295, 296, 0, 0, 297, 298, 299,
	0, 300, 301, 0, 302, 303, 0, 304, 305, 526,
	306, 307, 308, 310, 312, 309, 313, 314, 315, 316,
	527, 528, 0, 0, 0, 0, 0, 0, 0, 317,
	318, 319, 529, 0, 0, 0, 320, 0, 321, 0,
	0, 0, 322, 323, 530, 531, 324, 325, 0, 326,
	532, 0, 533, 327, 0, 328, 329, 330, 331, 332,
	534, 535, 536, 387, 0, 333, 334, 0, 335, 336,
	337, 338, 0, 0, 0, 0, 339, 340, 342, 0,
	0, 341, 537, 538, 0, 539, 0, 343, 0, 540,
	0, 344, 345, 346, 0, 347, 0, 0, 0, 348,
	349, 350, 351, 352, 353, 0, 355, 354, 0, 356,
	541, 0, 357, 358, 0, 0, 359, 360, 361, 0,
	0, 362, 363, 364, 365, 0, 366, 367, 369, 371,
	368, 370, 375, 372, 373, 374, 377, 0, 376, 0,
	378, 379, 380, 383, 384, 382, 0, 381, 0, 0,
	0, 385, 0, 542, 386, 543, 388, 389, 0, 0,
	390, 0, 0, 0, 392, 393, 394, 0, 0, 395,
	396, 544, 0, 397, 0, 545, 398, 399, 391, 400,
	401, 402, 403, 404, 405, 406, 407, 0, 408, 409,
	546, 547, 548, 410, 549, 411, 412, 0, 413, 0,
	414, 415, 416, 417, 418, 419, 420, 550, 422, 421,
	423, 0, 0, 0, 0, 0, 0, 424, 0, 426,
	427, 428, 425, 429, 430, 431, 432, 0, 433, 434,
	435, 0, 436, 437, 438, 439, 551, 440, 0, 441,
	442, 448, 449, 443, 444, 450, 451, 452, 453, 454,
	0, 456, 457, 455, 458, 459, 460, 0, 461, 445,
	446, 462, 463, 0, 464, 465, 552, 0, 466, 0,
	467, 468, 469, 470, 447, 471, 476, 553, 472, 473,
	474, 475, 554, 0, 478, 479, 0, 477, 0, 480,
	481, 482, 483, 484, 485, 311, 486, 0, 487, 555,
	556, 557, 558, 0, 494, 0, 488, 489, 559, 490,
	560, 0, 491, 492, 493, 0, 495, 496, 0, 0,
	497, 498, 499, 501, 502, 500, 503, 0, 504, 0,
	0, 505, 506, 507, 561, 562, 563, 0, 509, 508,
	564, 571, 0, 237, 0, 510, 511, 565, 512, 513,
	514, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	243, 244, 245, 246, 247, 248, 0, 249, 250, 0,
	0, 0, 0, 0, 515, 0, 0, 0, 0, 251,
	252, 254, 253, 255, 256, 257, 516, 517, 0, 518,
	258, 519, 0, 259, 260, 261, 262, 263, 0, 0,
	0, 264, 520, 521, 522, 0, 265, 266, 523, 0,
	0, 0, 267, 268, 269, 270, 271, 272, 273, 0,
	0, 275, 276, 277, 274, 0, 278, 0, 279, 280,
	281, 0, 282, 0, 283, 284, 0, 0, 0, 0,
	0, 0, 0, 285, 286, 287, 288, 0, 289, 524,
	525, 0, 293, 290, 291, 0, 294, 292, 0, 295,
	296, 0, 0, 297, 298, 299, 0, 300, 301, 0,
	302, 303, 0, 304, 305, 526, 306, 307, 308, 310,
	312, 309, 313, 314, 315, 316, 527, 528, 0, 0,
	0, 0, 0, 0, 0, 317, 318, 319, 529, 0,
	0, 0, 320, 0, 321, 0, 0, 0, 322, 323,
	530, 531, 324, 325, 0, 326, 532, 0, 533, 327,
	0, 328, 329, 330, 331, 332, 534, 535, 536, 387,
	0, 333, 334, 0, 335, 336, 337, 338, 0, 0,
	0, 0, 339, 340, 342, 0, 0, 341, 537, 538,
	0, 539, 0, 343, 0, 540, 0, 344, 345, 346,
	0, 347, 0, 0, 0, 348, 349, 350, 351, 352,
	353, 0, 355, 354, 0, 356, 541, 0, 357, 358,
	0, 0, 359, 360, 361, 0, 0, 362, 363, 364,
	365, 0, 366, 367, 369, 371, 368, 370, 375, 372,
	373, 374, 377, 0, 376, 0, 378, 379, 380, 383,
	384, 382, 0, 381, 0, 0, 0, 385, 0, 542,
	386, 543, 388, 389, 0, 0, 390, 0, 0, 0,
	392, 393, 394, 0, 0, 395, 396, 544, 0, 397,
	0, 545, 398, 399, 391, 400, 401, 402, 403, 404,
	405, 406, 407, 0, 408, 409, 546, 547, 548, 410,
	549, 411, 412, 0, 413, 0, 414, 415, 416, 417,
	418, 419, 420, 550, 422, 421, 423, 0, 0, 0,
	0, 0, 0, 424, 0, 426, 427, 428, 425, 429,
	430, 431, 432, 0, 433, 434, 435, 0, 436, 437,
	438, 439, 551, 440, 0, 441, 442, 448, 449, 443,
	444, 450, 451, 452, 453, 454, 0, 456, 457, 455,
	458, 459, 460, 0, 461, 445, 446, 462, 463, 0,
	464, 465, 552, 0, 466, 0, 467, 468, 469, 470,
	447, 471, 476, 553, 472, 473, 474, 475, 554, 0,
	478, 479, 0, 477, 0, 480, 481, 482, 483, 484,
	485, 311, 486, 0, 487, 555, 556, 557, 558, 0,
	494, 0, 488, 489, 559, 490, 560, 0, 491, 492,
	493, 0, 495, 496, 0, 0, 497, 498, 499, 501,
	502, 500, 503, 0, 504, 0, 0, 505, 506, 507,
	561, 562, 563, 237, 509, 508, 564, 0, 0, 0,
	0, 510, 511, 565, 512, 513, 514, 0, 0, 0,
	243, 244, 245, 246, 247, 248, 0, 249, 250, 0,
	0, 0, 0, 0, 515, 0, 0, 0, 0, 251,
	252, 254, 253, 255, 256, 257, 516, 517, 0, 518,
	258, 519, 0, 259, 260, 261, 262, 263, 0, 0,
	0, 264, 520, 521, 522, 0, 265, 266, 523, 0,
	0, 0, 267, 268, 269, 270, 271, 272, 273, 0,
	0, 275, 276, 277, 274, 0, 278, 0, 279, 280,
	281, 0, 282, 0, 283, 284, 0, 0, 0, 0,
	0, 0, 0, 285, 286, 287, 288, 0, 289, 524,
	525, 0, 293, 290, 291, 0, 294, 292, 0, 295,
	296, 0, 0, 297, 298, 299, 0, 300, 301, 0,
	302, 303, 0, 304, 305, 526, 306, 307, 308, 310,
	312, 309, 313, 314, 315, 316, 527, 528, 0, 0,
	0, 0, 0, 0, 0, 317, 318, 319, 529, 0,
	0, 0, 320, 0, 321, 0, 0, 0, 322, 323,
	530, 531, 324, 325, 0, 326, 532, 0, 533, 327,
	0, 328, 329, 330, 331, 332, 534, 535, 536, 387,
	0, 333, 334, 0, 335, 336, 337, 338, 0, 0,
	0, 0, 339, 340, 342, 0, 0, 341, 537, 538,
	0, 539, 0, 343, 0, 540, 0, 344, 345, 346,
	0, 347, 0, 0, 0, 348, 349, 350, 351, 352,
	353, 0, 355, 354, 0, 356, 541, 0, 357, 358,
	0, 0, 359, 360, 361, 0, 0, 362, 363, 364,
	365, 0, 366, 367, 369, 371, 368, 370, 375, 372,
	373, 374, 377, 0, 376, 0, 378, 379, 380, 383,
	384, 382, 0, 381, 0, 0, 0, 385, 0, 542,
	386, 543, 388, 389, 0, 0, 390, 0, 0, 0,
	392, 393, 394, 0, 0, 395, 396, 544, 0, 397,
	0, 545, 398, 399, 391, 400, 401, 402, 403, 404,
	405, 406, 407, 0, 408, 409, 546, 547, 548, 410,
	549, 411, 412, 0, 413, 0, 414, 415, 416, 417,
	418, 419, 420, 550, 422, 421, 423, 0, 0, 0,
	0, 0, 0, 424, 0, 426, 427, 428, 425, 429,
	430, 431, 432, 0, 433, 434, 435, 0, 436, 437,
	438, 439, 551, 440, 0, 441, 442, 448, 449, 443,
	444, 450, 451, 452, 453, 454, 0, 456, 457, 455,
	458, 459, 460, 0, 461, 445, 446, 462, 463, 0,
	464, 465, 552, 0, 466, 0, 467, 468, 469, 470,
	447, 471, 476, 553, 472, 473, 474, 475, 554, 0,
	478, 479, 0, 477, 0, 480, 481, 482, 483, 484,
	485, 311, 486, 0, 487, 555, 556, 557, 558, 0,
	494, 0, 488, 489, 559, 490, 560, 0, 491, 492,
	493, 0, 495, 496, 0, 0, 497, 498, 499, 501,
	502, 500, 503, 0, 504, 0, 0, 505, 506, 507,
	561, 562, 563, 237, 509, 508, 564, 0, 0, 0,
	0, 510, 511, 565, 512, 513, 514, 0, 0, 0,
	243, 244, 245, 246, 247, 248, 0, 249, 250, 0,
	0, 0, 0, 0, 515, 0, 0, 0, 0, 251,
	252, 254, 253, 255, 256, 257, 516, 517, 0, 518,
	258, 519, 0, 259, 260, 261, 262, 263, 0, 0,
	0, 264, 520, 521, 522, 0, 265, 266, 523, 0,
	0, 0, 267, 268, 269, 270, 271, 272, 273, 0,
	0, 275, 276, 277, 274, 0, 278, 0, 279, 280,
	281, 0, 282, 0, 283, 284, 0, 0, 0, 0,
	0, 0, 0, 285, 286, 287, 288, 0, 289, 524,
	525, 0, 293, 290, 291, 0, 294, 292, 0, 295,
	296, 0, 0, 297, 298, 299, 0, 300, 301, 0,
	302, 303, 0, 304, 305, 526, 306, 307, 308, 310,
	312, 309, 313, 314, 315, 316, 527, 528, 0, 0,
	0, 0, 0, 0, 0, 317, 318, 319, 529, 0,
	0, 0, 320, 0, 321, 0, 0, 0, 322, 323,
	530, 531, 324, 325, 0, 326, 532, 0, 533, 327,
	0, 328, 329, 330, 331, 332, 3043, 535, 536, 387,
	0, 333, 334, 0, 335, 336, 337, 338, 0, 0,
	0, 0, 339, 340, 342, 0, 0, 341, 537, 538,
	0, 539, 0, 343, 0, 540, 0, 344, 345, 346,
	0, 347, 0, 0, 0, 348, 349, 350, 351, 352,
	353, 0, 355, 354, 0, 356, 541, 0, 357, 358,
	0, 0, 359, 360, 361, 0, 0, 362, 363, 364,
	365, 0, 366, 367, 369, 371, 368, 370, 375, 372,
	373, 374, 377, 0, 376, 0, 378, 379, 380, 383,
	384, 382, 0, 381, 0, 0, 0, 385, 0, 542,
	386, 543, 388, 389, 0, 0, 390, 0, 0, 0,
	392, 393, 394, 0, 0, 395, 396, 544, 0, 397,
	0, 545, 398, 399, 391, 400, 401, 402, 403, 404,
	405, 406, 407, 0, 408, 409, 546, 547, 548, 410,
	549, 411, 412, 0, 413, 0, 414, 415, 416, 417,
	418, 419, 420, 550, 422, 421, 423, 0, 0, 0,
	0, 0, 0, 424, 0, 426, 427, 428, 425, 429,
	430, 431, 432, 0, 433, 434, 435, 0, 436, 437,
	438, 439, 551, 440, 0, 441, 442, 448, 449, 443,
	444, 450, 451, 452, 453, 454, 0, 456, 457, 455,
	458, 459, 460, 0, 461, 445, 446, 462, 463, 0,
	464, 465, 552, 0, 466, 0, 467, 468, 469, 470,
	447, 471, 476, 553, 472, 473, 474, 475, 554, 0,
	478, 479, 0, 477, 0, 480, 481, 482, 483, 484,
	485, 311, 486, 0, 487, 555, 556, 557, 558, 0,
	494, 0, 488, 489, 559, 490, 560, 0, 491, 492,
	493, 0, 495, 496, 0, 0, 497, 498, 499, 501,
	502, 500, 503, 0, 504, 0, 0, 505, 506, 507,
	561, 562, 563, 237, 509, 508, 564, 0, 0, 0,
	0, 510, 511, 565, 512, 513, 514, 0, 0, 0,
	243, 244, 245, 246, 247, 248, 0, 249, 250, 0,
	0, 0, 0, 0, 515, 0, 0, 0, 0, 251,
	252, 254, 253, 255, 256, 257, 516, 517, 0, 518,
	258, 519, 0, 259, 260, 261, 262, 263, 0, 0,
	0, 264, 520, 521, 522, 0, 265, 266, 523, 0,
	0, 0, 267, 268, 269, 270, 271, 272, 273, 0,
	0, 275, 276, 277, 274, 0, 278, 0, 279, 280,
	281, 0, 282, 0, 283, 284, 0, 0, 0, 0,
	0, 0, 0, 285, 286, 287, 288, 0, 289, 524,
	525, 0, 293, 290, 291, 0, 294, 292, 0, 295,
	296, 0, 0, 297, 298, 299, 0, 300, 301, 0,
	302, 303, 0, 304, 305, 526, 306, 307, 308, 310,
	312, 309, 313, 314, 315, 316, 527, 528, 0, 0,
	0, 0, 0, 0, 0, 317, 318, 319, 529, 0,
	0, 0, 320, 0, 321, 0, 0, 0, 322, 323,
	530, 531, 324, 325, 0, 326, 532, 0, 533, 327,
	0, 328, 329, 330, 331, 332, 3002, 535, 536, 387,
	0, 333, 334, 0, 335, 336, 337, 338, 0, 0,
	0, 0, 339, 340, 342, 0, 0, 341, 537, 538,
	0, 539, 0, 343, 0, 540, 0, 344, 345, 346,
	0, 347, 0, 0, 0, 348, 349, 350, 351, 352,
	353, 0, 355, 354, 0, 356, 541, 0, 357, 358,
	0, 0, 359, 360, 361, 0, 0, 362, 363, 364,
	365, 0, 366, 367, 369, 371, 368, 370, 375, 372,
	373, 374, 377, 0, 376, 0, 378, 379, 380, 383,
	384, 382, 0, 381, 0, 0, 0, 385, 0, 542,
	386, 543, 388, 389, 0, 0, 390, 0, 0, 0,
	392, 393, 394, 0, 0, 395, 396, 544, 0, 397,
	0, 545, 398, 399, 391, 400, 401, 402, 403, 404,
	405, 406, 407, 0, 408, 409, 546, 547, 548, 410,
	549, 411, 412, 0, 413, 0, 414, 415, 416, 417,
	418, 419, 420, 550, 422, 421, 423, 0, 0, 0,
	0, 0, 0, 424, 0, 426, 427, 428, 425, 429,
	430, 431, 432, 0, 433, 434, 435, 0, 436, 437,
	438, 439, 551, 440, 0, 441, 442, 448, 449, 443,
	444, 450, 451, 452, 453, 454, 0, 456, 457, 455,
	458, 459, 460, 0, 461, 445, 446, 462, 463, 0,
	464, 465, 552, 0, 466, 0, 467, 468, 469, 470,
	447, 471, 476, 553, 472, 473, 474, 475, 554, 0,
	478, 479, 0, 477, 0, 480, 481, 482, 483, 484,
	485, 311, 486, 0, 487, 555, 556, 557, 558, 0,
	494, 0, 488, 489, 559, 490, 560, 0, 491, 492,
	493, 0, 495, 496, 0, 0, 497, 498, 499, 501,
	502, 500, 503, 0, 504, 0, 0, 505, 506, 507,
	561, 562, 563, 237, 509, 508, 564, 0, 0, 0,
	0, 510, 511, 565, 512, 513, 514, 0, 0, 0,
	243, 244, 245, 246, 247, 248, 0, 249, 250, 0,
	0, 0, 0, 0, 515, 0, 0, 0, 0, 251,
	252, 254, 253, 255, 256, 257, 516, 517, 0, 518,
	258, 519, 0, 259, 260, 261, 262, 263, 0, 0,
	0, 264, 520, 521, 522, 0, 265, 266, 523, 0,
	0, 0, 267, 268, 269, 270, 271, 272, 273, 0,
	0, 275, 276, 277, 274, 0, 278, 0, 279, 280,
	281, 0, 282, 0, 283, 284, 0, 0, 0, 0,
	0, 0, 0, 285, 286, 287, 288, 0, 289, 524,
	525, 0, 293, 290, 291, 0, 294, 292, 0, 295,
	296, 0, 0, 297, 298, 299, 0, 300, 301, 0,
	302, 303, 0, 304, 305, 526, 306, 307, 308, 310,
	312, 309, 313, 314, 315, 316, 527, 528, 0, 0,
	0, 0, 0, 0, 0, 317, 318, 319, 529, 0,
	0, 0, 320, 0, 321, 0, 0, 0, 322, 323,
	530, 531, 324, 325, 0, 326, 532, 0, 533, 327,
	0, 328, 329, 330, 331, 332, 2943, 535, 536, 387,
	0, 333, 334, 0, 335, 336, 337, 338, 0, 0,
	0, 0, 339, 340, 342, 0, 0, 341, 537, 538,
	0, 539, 0, 343, 0, 540, 0, 344, 345, 346,
	0, 347, 0, 0, 0, 348, 349, 350, 351, 352,
	353, 0, 355, 354, 0, 356, 541, 0, 357, 358,
	0, 0, 359, 360, 361, 0, 0, 362, 363, 364,
	365, 0, 366, 367, 369, 371, 368, 370, 375, 372,
	373, 374, 377, 0, 376, 0, 378, 379, 380, 383,
	384, 382, 0, 381, 0, 0, 0, 385, 0, 542,
	386, 543, 388, 389, 0, 0, 390, 0, 0, 0,
	392, 393, 394, 0, 0, 395, 396, 544, 0, 397,
	0, 545, 398, 399, 391, 400, 401, 402, 403, 404,
	405, 406, 407, 0, 408, 409, 546, 547, 548, 410,
	549, 411, 412, 0, 413, 0, 414, 415, 416, 417,
	418, 419, 420, 550, 422, 421, 423, 0, 0, 0,
	0, 0, 0, 424, 0, 426, 427, 428, 425, 429,
	430, 431, 432, 0, 433, 434, 435, 0, 436, 437,
	438, 439, 551, 440, 0, 441, 442, 448, 449, 443,
	444, 450, 451, 452, 453, 454, 0, 456, 457, 455,
	458, 459, 460, 0, 461, 445, 446, 462, 463, 0,
	464, 465, 552, 0, 466, 0, 467, 468, 469, 470,
	447, 471, 476, 553, 472, 473, 474, 475, 554, 0,
	478, 479, 0, 477, 0, 480, 481, 482, 483, 484,
	485, 311, 486, 0, 487, 555, 556, 557, 558, 0,
	494, 0, 488, 489, 559, 490, 560, 0, 491, 492,
	493, 0, 495, 496, 0, 0, 497, 498, 499, 501,
	502, 500, 503, 0, 504, 0, 0, 505, 506, 507,
	561, 562, 563, 237, 509, 508, 564, 0, 0, 0,
	0, 510, 511, 565, 512, 513, 514, 0, 0, 0,
	243, 244, 245, 246, 247, 248, 0, 249, 250, 0,
	0, 0, 0, 0, 515, 0, 0, 0, 0, 251,
	252, 254, 253, 255, 256, 257, 516, 517, 0, 518,
	258, 519, 0, 259, 260, 261, 262, 263, 0, 0,
	0, 264, 520, 521, 522, 0, 265, 266, 523, 0,
	0, 0, 267, 268, 269, 270, 271, 272, 273, 0,
	0, 275, 276, 277, 274, 0, 278, 0, 279, 280,
	281, 0, 282, 0, 283, 284, 0, 0, 0, 0,
	0, 0, 0, 285, 286, 287, 288, 0, 289, 524,
	525, 0, 293, 290, 291, 0, 294, 292, 0, 295,
	296, 0, 0, 297, 298, 299, 0, 300, 301, 0,
	302, 303, 0, 304, 305, 526, 306, 307, 308, 310,
	312, 309, 313, 314, 315, 316, 527, 528, 0, 0,
	0, 0, 0, 0, 0, 317, 318, 319, 529, 0,
	0, 0, 320, 0, 321, 0, 0, 0, 322, 323,
	530, 531, 324, 325, 0, 326, 532, 0, 533, 327,
	0, 328, 329, 330, 331, 332, 2941, 535, 536, 387,
	0, 333, 334, 0, 335, 336, 337, 338, 0, 0,
	0, 0, 339, 340, 342, 0, 0, 341, 537, 538,
	0, 539, 0, 343, 0, 540, 0, 344, 345, 346,
	0, 347, 0, 0, 0, 348, 349, 350, 351, 352,
	353, 0, 355, 354, 0, 356, 541, 0, 357, 358,
	0, 0, 359, 360, 361, 0, 0, 362, 363, 364,
	365, 0, 366, 367, 369, 371, 368, 370, 375, 372,
	373, 374, 377, 0, 376, 0, 378, 379, 380, 383,
	384, 382, 0, 381, 0, 0, 0, 385, 0, 542,
	386, 543, 388, 389, 0, 0, 390, 0, 0, 0,
	392, 393, 394, 0, 0, 395, 396, 544, 0, 397,
	0, 545, 398, 399, 391, 400, 401, 402, 403, 404,
	405, 406, 407, 0, 408, 409, 546, 547, 548, 410,
	549, 411, 412, 0, 413, 0, 414, 415, 416, 417,
	418, 419, 420, 550, 422, 421, 423, 0, 0, 0,
	0, 0, 0, 424, 0, 426, 427, 428, 425, 429,
	430, 431, 432, 0, 433, 434, 435, 0, 436, 437,
	438, 439, 551, 440, 0, 441, 442, 448, 449, 443,
	444, 450, 451, 452, 453, 454, 0, 456, 457, 455,
	458, 459, 460, 0, 461, 445, 446, 462, 463, 0,
	464, 465, 552, 0, 466, 0, 467, 468, 469, 470,
	447, 471, 476, 553, 472, 473, 474, 475, 554, 0,
	478, 479, 0, 477, 0, 480, 481, 482, 483, 484,
	485, 311, 486, 0, 487, 555, 556, 557, 558, 0,
	494, 0, 488, 489, 559, 490, 560, 0, 491, 492,
	493, 0, 495, 496, 0, 0, 497, 498, 499, 501,
	502, 500, 503, 0, 504, 0, 0, 505, 506, 507,
	561, 562, 563, 237, 509, 508, 564, 0, 0, 0,
	0, 510, 511, 565, 512, 513, 514, 0, 0, 0,
	243, 244, 245, 246, 247, 248, 0, 249, 250, 0,
	0, 0, 0, 0, 515, 0, 0, 0, 0, 251,
	252, 254, 253, 255, 256, 257, 516, 517, 0, 518,
	258, 519, 0, 259, 260, 261, 262, 263, 0, 0,
	0, 264, 520, 521, 522, 0, 265, 266, 523, 0,
	0, 0, 267, 268, 269, 270, 271, 272, 273, 0,
	0, 275, 276, 277, 274, 0, 278, 0, 279, 280,
	281, 0, 282, 0, 283, 284, 0, 0, 0, 0,
	0, 0, 0, 285, 286, 287, 288, 0, 289, 524,
	525, 0, 293, 290, 291, 0, 294, 292, 0, 295,
	296, 0, 0, 297, 298, 299, 0, 300, 301, 0,
	302, 303, 0, 304, 305, 526, 306, 307, 308, 310,
	312, 309, 313, 314, 315, 316, 527, 528, 0, 0,
	0, 0, 0, 0, 0, 317, 318, 319, 529, 0,
	0, 0, 320, 0, 321, 0, 0, 0, 322, 323,
	530, 531, 324, 325, 0, 326, 532, 0, 533, 327,
	0, 328, 329, 330, 331, 332, 2927, 535, 536, 387,
	0, 333, 334, 0, 335, 336, 337, 338, 0, 0,
	0, 0, 339, 340, 342, 0, 0, 341, 537, 538,
	0, 539, 0, 343, 0, 540, 0, 344, 345, 346,
	0, 347, 0, 0, 0, 348, 349, 350, 351, 352,
	353, 0, 355, 354, 0, 356, 541, 0, 357, 358,
	0, 0, 359, 360, 361, 0, 0, 362, 363, 364,
	365, 0, 366, 367, 369, 371, 368, 370, 375, 372,
	373, 374, 377, 0, 376, 0, 378, 379, 380, 383,
	384, 382, 0, 381, 0, 0, 0, 385, 0, 542,
	386, 543, 388, 389, 0, 0, 390, 0, 0, 0,
	392, 393, 394, 0, 0, 395, 396, 544, 0, 397,
	0, 545, 398, 399, 391, 400, 401, 402, 403, 404,
	405, 406, 407, 0, 408, 409, 546, 547, 548, 410,
	549, 411, 412, 0, 413, 0, 414, 415, 416, 417,
	418, 419, 420, 550, 422, 421, 423, 0, 0, 0,
	0, 0, 0, 424, 0, 426, 427, 428, 425, 429,
	430, 431, 432, 0, 433, 434, 435, 0, 436, 437,
	438, 439, 551, 440, 0, 441, 442, 448, 449, 443,
	444, 450, 451, 452, 453, 454, 0, 456, 457, 455,
	458, 459, 460, 0, 461, 445, 446, 462, 463, 0,
	464, 465, 552, 0, 466, 0, 467, 468, 469, 470,
	447, 471, 476, 553, 472, 473, 474, 475, 554, 0,
	478, 479, 0, 477, 0, 480, 481, 482, 483, 484,
	485, 311, 486, 0, 487, 555, 556, 557, 558, 0,
	494, 0, 488, 489, 559, 490, 560, 0, 491, 492,
	493, 0, 495, 496, 0, 0, 497, 498, 499, 501,
	502, 500, 503, 0, 504, 0, 0, 505, 506, 507,
	561, 562, 563, 237, 509, 508, 564, 0, 0, 0,
	0, 510, 511, 565, 512, 513, 514, 0, 0, 0,
	243, 244, 245, 246, 247, 248, 0, 249, 250, 0,
	0, 0, 0, 0, 515, 0, 0, 0, 0, 251,
	252, 254, 253, 255, 256, 257, 516, 517, 0, 518,
	258, 519, 0, 259, 260, 261, 262, 263, 0, 0,
	0, 264, 520, 521, 522, 0, 265, 266, 523, 0,
	0, 0, 267, 268, 269, 270, 271, 272, 273, 0,
	0, 275, 276, 277, 274, 0, 278, 0, 279, 280,
	281, 0, 282, 0, 283, 284, 0, 0, 0, 0,
	0, 0, 0, 285, 286, 287, 288, 0, 289, 524,
	525, 0, 293, 290, 291, 0, 294, 292, 0, 295,
	296, 0, 0, 297, 298, 299, 0, 300, 301, 0,
	302, 303, 0, 304, 305, 526, 306, 307, 308, 310,
	312, 309, 313, 314, 315, 316, 527, 528, 0, 0,
	0, 0, 0, 0, 0, 317, 318, 319, 529, 0,
	0, 0, 320, 0, 321, 0, 0, 0, 322, 323,
	530, 531, 324, 325, 0, 326, 532, 0, 533, 327,
	0, 328, 329, 330, 331, 332, 2567, 535, 536, 387,
	0, 333, 334, 0, 335, 336, 337, 338, 0, 0,
	0, 0, 339, 340, 342, 0, 0, 341, 537, 538,
	0, 539, 0, 343, 0, 540, 0, 344, 345, 346,
	0, 347, 0, 0, 0, 348, 349, 350, 351, 352,
	353, 0, 355, 354, 0, 356, 541, 0, 357, 358,
	0, 0, 359, 360, 361, 0, 0, 362, 363, 364,
	365, 0, 366, 367, 369, 371, 368, 370, 375, 372,
	373, 374, 377, 0, 376, 0, 378, 379, 380, 383,
	384, 382, 0, 381, 0, 0, 0, 385, 0, 542,
	386, 543, 388, 389, 0, 0, 390, 0, 0, 0,
	392, 393, 394, 0, 0, 395, 396, 544, 0, 397,
	0, 545, 398, 399, 391, 400, 401, 402, 403, 404,
	405, 406, 407, 0, 408, 409, 546, 547, 548, 410,
	549, 411, 412, 0, 413, 0, 414, 415, 416, 417,
	418, 419, 420, 550, 422, 421, 423, 0, 0, 0,
	0, 0, 0, 424, 0, 426, 427, 428, 425, 429,
	430, 431, 432, 0, 433, 434, 435, 0, 436, 437,
	438, 439, 551, 440, 0, 441, 442, 448, 449, 443,
	444, 450, 451, 452, 453, 454, 0, 456, 457, 455,
	458, 459, 460, 0, 461, 445, 446, 462, 463, 0,
	464, 465, 552, 0, 466, 0, 467, 468, 469, 470,
	447, 471, 476, 553, 472, 473, 474, 475, 554, 0,
	478, 479, 0, 477, 0, 480, 481, 482, 483, 484,
	485, 311, 486, 0, 487, 555, 556, 557, 558, 0,
	494, 0, 488, 489, 559, 490, 560, 0, 491, 492,
	493, 0, 495, 496, 0, 0, 497, 498, 499, 501,
	502, 500, 503, 0, 504, 0, 0, 505, 506, 507,
	561, 562, 563, 237, 509, 508, 564, 0, 0, 0,
	0, 510, 511, 565, 512, 513, 514, 0, 0, 0,
	243, 244, 245, 246, 247, 248, 0, 249, 250, 0,
	0, 0, 0, 0, 515, 0, 0, 0, 0, 251,
	252, 254, 253, 255, 256, 257, 516, 517, 0, 518,
	258, 519, 0, 259, 260, 261, 262, 263, 0, 0,
	0, 264, 520, 521, 522, 0, 265, 266, 523, 0,
	0, 0, 267, 268, 269, 270, 271, 272, 273, 0,
	0, 275, 276, 277, 274, 0, 278, 0, 279, 280,
	281, 0, 282, 0, 283, 284, 0, 0, 0, 0,
	0, 0, 0, 285, 286, 287, 288, 0, 289, 524,
	525, 0, 293, 290, 291, 0, 294, 292, 0, 295,
	296, 0, 0, 297, 298, 299, 0, 300, 301, 0,
	302, 303, 0, 304, 305, 526, 306, 307, 308, 310,
	312, 309, 313, 314, 315, 316, 527, 528, 0, 0,
	0, 0, 0, 0, 0, 317, 318, 319, 529, 0,
	0, 0, 320, 0, 321, 0, 0, 0, 322, 323,
	530, 531, 324, 325, 0, 326, 532, 0, 533, 327,
	0, 328, 329, 330, 331, 332, 534, 535, 536, 387,
	0, 333, 334, 0, 335, 336, 337, 338, 0, 0,
	0, 0, 339, 340, 342, 0, 0, 341, 537, 538,
	0, 539, 0, 343, 0, 540, 0, 344, 345, 346,
	0, 347, 0, 0, 0, 348, 349, 350, 351, 352,
	353, 0, 355, 354, 0, 356, 541, 0, 357, 358,
	0, 0, 359, 360, 361, 0, 0, 362, 363, 364,
	365, 0, 366, 367, 369, 371, 368, 370, 375, 372,
	373, 374, 377, 0, 376, 0, 378, 379, 380, 383,
	384, 382, 0, 381, 0, 0, 0, 385, 0, 542,
	386, 543, 388, 389, 0, 0, 390, 0, 0, 0,
	392, 393, 394, 0, 0, 395, 396, 544, 0, 397,
	0, 545, 398, 399, 391, 400, 401, 402, 403, 404,
	405, 406, 407, 0, 408, 409, 546, 547, 548, 410,
	549, 411, 412, 0, 413, 0, 414, 415, 416, 417,
	418, 419, 420, 550, 422, 421, 423, 0, 0, 0,
	0, 0, 0, 424, 0, 426, 427, 428, 425, 429,
	430, 431, 432, 0, 433, 434, 435, 0, 436, 437,
	438, 439, 551, 440, 0, 441, 442, 602, 449, 443,
	444, 450, 451, 452, 453, 454, 0, 456, 457, 455,
	458, 459, 460, 0, 461, 445, 446, 462, 463, 0,
	464, 465, 552, 0, 466, 0, 467, 468, 469, 470,
	447, 471, 476, 553, 472, 473, 474, 475, 554, 0,
	478, 479, 0, 477, 0, 480, 481, 482, 483, 484,
	485, 311, 486, 0, 487, 555, 556, 557, 558, 0,
	494, 0, 488, 489, 559, 490, 560, 0, 491, 492,
	493, 0, 495, 496, 0, 0, 497, 498, 499, 501,
	502, 500, 503, 0, 504, 0, 0, 505, 506, 507,
	561, 562, 563, 237, 509, 508, 564, 0, 0, 0,
	0, 510, 511, 565, 512, 513, 514, 0, 0, 0,
	243, 244, 245, 246, 247, 248, 0, 249, 250, 0,
	0, 0, 0, 0, 515, 0, 1980, 0, 0, 251,
	252, 254, 253, 255, 256, 257, 516, 517, 0, 518,
	258, 519, 0, 259, 260, 261, 262, 263, 0, 0,
	0, 264, 520, 521, 522, 0, 265, 266, 523, 0,
	0, 0, 267, 268, 269, 270, 271, 272, 273, 0,
	0, 275, 276, 277, 274, 0, 278, 0, 279, 280,
	281, 0, 282, 0, 283, 284, 0, 0, 0, 0,
	0, 0, 0, 285, 286, 287, 288, 0, 289, 524,
	525, 0, 293, 290, 291, 0, 294, 292, 0, 295,
	296, 0, 0, 297, 298, 299, 0, 300, 301, 0,
	302, 303, 0, 304, 305, 526, 306, 307, 308, 310,
	312, 309, 313, 314, 315, 316, 527, 528, 0, 0,
	0, 0, 0, 0, 0, 317, 318, 319, 529, 0,
	0, 0, 320, 0, 321, 0, 0, 0, 322, 323,
	530, 531, 324, 325, 0, 326, 532, 0, 533, 327,
	0, 328, 329, 330, 331, 332, 534, 535, 536, 387,
	0, 333, 334, 0, 335, 336, 337, 338, 0, 0,
	0, 0, 339, 340, 342, 0, 0, 341, 537, 538,
	0, 539, 0, 343, 0, 540, 0, 344, 345, 346,
	0, 347, 0, 0, 0, 348, 349, 350, 351, 352,
	353, 0, 355, 354, 0, 356, 541, 0, 357, 358,
	0, 0, 359, 360, 361, 0, 0, 362, 363, 364,
	365, 0, 366, 367, 369, 371, 368, 370, 375, 372,
	373, 374, 377, 0, 376, 0, 378, 379, 380, 383,
	384, 382, 0, 381, 0, 0, 0, 385, 0, 542,
	386, 543, 388, 389, 0, 0, 390, 0, 0, 0,
	392, 393, 394, 0, 0, 395, 396, 544, 0, 397,
	0, 545, 398, 399, 391, 400, 401, 402, 403, 404,
	405, 406, 407, 0, 408, 409, 546, 547, 548, 410,
	549, 411, 412, 0, 413, 0, 414, 415, 416, 417,
	418, 419, 420, 550, 422, 421, 423, 0, 0, 0,
	0, 0, 0, 424, 0, 426, 427, 428, 425, 429,
	430, 431, 432, 0, 433, 434, 435, 0, 436, 437,
	438, 439, 551, 440, 0, 441, 442, 448, 449, 443,
	444, 450, 451, 452, 453, 454, 0, 456, 457, 455,
	458, 459, 460, 0, 0, 445, 446, 462, 463, 0,
	464, 465, 552, 0, 466, 0, 467, 468, 469, 470,
	447, 471, 476, 553, 472, 473, 474, 475, 554, 0,
	478, 479, 0, 477, 0, 480, 481, 482, 483, 484,
	485, 311, 486, 0, 487, 555, 556, 557, 558, 0,
	494, 0, 488, 489, 559, 490, 560, 0, 491, 492,
	493, 0, 495, 496, 0, 0, 497, 498, 499, 501,
	502, 500, 503, 0, 504, 0, 0, 505, 506, 507,
	561, 562, 563, 237, 509, 508, 564, 0, 0, 0,
	0, 510, 511, 565, 512, 513, 514, 0, 0, 0,
	243, 244, 245, 246, 247, 248, 0, 249, 250, 0,
	0, 0, 0, 0, 515, 0, 0, 0, 0, 251,
	252, 254, 253, 255, 256, 257, 516, 517, 0, 518,
	258, 519, 0, 259, 260, 261, 262, 263, 0, 0,
	0, 264, 520, 521, 522, 0, 265, 266, 523, 0,
	0, 0, 267, 268, 269, 270, 271, 272, 273, 0,
	0, 275, 276, 277, 274, 0, 278, 0, 279, 280,
	281, 0, 282, 0, 283, 284, 0, 0, 0, 0,
	0, 0, 0, 285, 286, 287, 288, 0, 289, 524,
	525, 0, 293, 290, 291, 0, 294, 292, 0, 295,
	296, 0, 0, 297, 298, 299, 0, 300, 301, 0,
	302, 303, 0, 304, 305, 526, 306, 307, 308, 310,
	312, 309, 313, 314, 315, 316, 527, 528, 0, 0,
	0, 0, 0, 0, 0, 317, 318, 319, 529, 0,
	0, 0, 320, 0, 321, 0, 0, 0, 322, 323,
	530, 531, 324, 325, 0, 326, 532, 0, 533, 327,
	0, 328, 329, 330, 331, 332, 1369, 535, 536, 387,
	0, 333, 334, 0, 335, 336, 337, 338, 0, 0,
	0, 0, 339, 340, 342, 0, 0, 341, 537, 538,
	0, 539, 0, 343, 0, 540, 0, 344, 345, 346,
	0, 347, 0, 0, 0, 348, 349, 350, 351, 352,
	353, 0, 355, 354, 0, 356, 541, 0, 357, 358,
	0, 0, 359, 360, 361, 0, 0, 362, 363, 364,
	365, 0, 366, 367, 369, 371, 368, 370, 375, 372,
	373, 374, 377, 0, 376, 0, 378, 379, 380, 383,
	384, 382, 0, 381, 0, 0, 0, 385, 0, 542,
	386, 543, 388, 389, 0, 0, 390, 0, 0, 0,
	392, 393, 394, 0, 0, 395, 396, 544, 0, 397,
	0, 545, 398, 399, 391, 400, 401, 402, 403, 404,
	405, 406, 407, 0, 408, 409, 546, 547, 548, 410,
	549, 411, 412, 0, 413, 0, 414, 415, 416, 417,
	418, 419, 420, 550, 422, 421, 423, 0, 0, 0,
	0, 0, 0, 424, 0, 426, 427, 428, 425, 429,
	430, 431, 432, 0, 433, 434, 435, 0, 436, 437,
	438, 439, 551, 440, 0, 441, 442, 448, 449, 443,
	444, 450, 451, 452, 453, 454, 0, 456, 457, 455,
	458, 459, 460, 0, 461, 445, 446, 462, 463, 0,
	464, 465, 552, 0, 466, 0, 467, 468, 469, 470,
	447, 471, 476, 553, 472, 473, 474, 475, 554, 0,
	478, 479, 0, 477, 0, 480, 481, 482, 483, 484,
	485, 311, 486, 0, 487, 555, 556, 557, 558, 0,
	494, 0, 488, 489, 559, 490, 560, 0, 491, 492,
	493, 0, 495, 496, 0, 0, 497, 498, 499, 501,
	502, 500, 503, 0, 504, 0, 0, 505, 506, 507,
	561, 562, 563, 237, 509, 508, 564, 0, 0, 0,
	0, 510, 511, 565, 512, 513, 514, 0, 0, 0,
	243, 244, 245, 246, 247, 248, 0, 249, 250, 0,
	0, 0, 0, 0, 515, 0, 0, 0, 0, 251,
	252, 254, 253, 255, 256, 257, 516, 517, 0, 518,
	258, 519, 0, 259, 260, 261, 262, 263, 0, 0,
	0, 264, 520, 521, 522, 0, 265, 266, 523, 0,
	0, 0, 267, 268, 269, 270, 271, 272, 273, 0,
	0, 275, 276, 277, 274, 0, 278, 0, 279, 280,
	281, 0, 282, 0, 283, 284, 0, 0, 0, 0,
	0, 0, 0, 285, 286, 287, 288, 0, 289, 524,
	525, 0, 293, 290, 291, 0, 294, 292, 0, 295,
	296, 0, 0, 297, 298, 299, 0, 300, 301, 0,
	302, 303, 0, 304, 305, 526, 306, 307, 308, 310,
	312, 309, 313, 314, 315, 316, 527, 528, 0, 0,
	0, 0, 0, 0, 0, 317, 318, 319, 529, 0,
	0, 0, 320, 0, 321, 0, 0, 0, 322, 323,
	530, 531, 324, 325, 0, 326, 532, 0, 533, 327,
	0, 328, 329, 330, 331, 332, 1310, 535, 536, 387,
	0, 333, 334, 0, 335, 336, 337, 338, 0, 0,
	0, 0, 339, 340, 342, 0, 0, 341, 537, 538,
	0, 539, 0, 343, 0, 540, 0, 344, 345, 346,
	0, 347, 0, 0, 0, 348, 349, 350, 351, 352,
	353, 0, 355, 354, 0, 356, 541, 0, 357, 358,
	0, 0, 359, 360, 361, 0, 0, 362, 363, 364,
	365, 0, 366, 367, 369, 371, 368, 370, 375, 372,
	373, 374, 377, 0, 376, 0, 378, 379, 380, 383,
	384, 382, 0, 381, 0, 0, 0, 385, 0, 542,
	386, 543, 388, 389, 0, 0, 390, 0, 0, 0,
	392, 393, 394, 0, 0, 395, 396, 544, 0, 397,
	0, 545, 398, 399, 391, 400, 401, 402, 403, 404,
	405, 406, 407, 0, 408, 409, 546, 547, 548, 410,
	549, 411, 412, 0, 413, 0, 414, 415, 416, 417,
	418, 419, 420, 550, 422, 421, 423, 0, 0, 0,
	0, 0, 0, 424, 0, 426, 427, 428, 425, 429,
	430, 431, 432, 0, 433, 434, 435, 0, 436, 437,
	438, 439, 551, 440, 0, 441, 442, 448, 449, 443,
	444, 450, 451, 452, 453, 454, 0, 456, 457, 455,
	458, 459, 460, 0, 461, 445, 446, 462, 463, 0,
	464, 465, 552, 0, 466, 0, 467, 468, 469, 470,
	447, 471, 476, 553, 472, 473, 474, 475, 554, 0,
	478, 479, 0, 477, 0, 480, 481, 482, 483, 484,
	485, 311, 486, 0, 487, 555, 556, 557, 558, 0,
	494, 0, 488, 489, 559, 490, 560, 0, 491, 492,
	493, 0, 495, 496, 0, 0, 497, 498, 499, 501,
	502, 500, 503, 0, 504, 0, 0, 505, 506, 507,
	561, 562, 563, 237, 509, 508, 564, 0, 0, 0,
	0, 510, 511, 565, 512, 513, 514, 0, 0, 0,
	243, 244, 245, 246, 247, 248, 0, 249, 250, 0,
	0, 0, 0, 0, 515, 0, 0, 0, 0, 251,
	252, 254, 253, 255, 256, 257, 516, 517, 0, 518,
	258, 519, 0, 259, 260, 261, 262, 263, 0, 0,
	0, 264, 520, 521, 522, 0, 265, 266, 523, 0,
	0, 0, 267, 268, 269, 270, 271, 272, 273, 0,
	0, 275, 276, 277, 274, 0, 278, 0, 279, 280,
	281, 0, 282, 0, 283, 284, 0, 0, 0, 0,
	0, 0, 0, 285, 286, 287, 288, 0, 289, 524,
	525, 0, 293, 290, 291, 0, 294, 292, 0, 295,
	296, 0, 0, 297, 298, 299, 0, 300, 301, 0,
	302, 303, 0, 304, 305, 526, 306, 307, 308, 310,
	312, 309, 313, 314, 315, 316, 527, 528, 0, 0,
	0, 0, 0, 0, 0, 317, 318, 319, 529, 0,
	0, 0, 320, 0, 321, 0, 0, 0, 322, 323,
	530, 531, 324, 325, 0, 326, 532, 0, 533, 327,
	0, 328, 329, 330, 331, 332, 534, 535, 536, 387,
	0, 333, 334, 0, 335, 336, 337, 338, 0, 0,
	0, 0, 339, 340, 342, 0, 0, 341, 537, 538,
	0, 539, 0, 343, 0, 540, 0, 344, 345, 346,
	0, 347, 0, 0, 0, 348, 349, 350, 351, 352,
	353, 0, 355, 354, 0, 356, 541, 0, 357, 358,
	0, 0, 359, 360, 361, 0, 0, 362, 363, 364,
	365, 0, 366, 367, 369, 371, 368, 370, 375, 372,
	373, 374, 377, 0, 376, 0, 378, 379, 380, 383,
	384, 382, 0, 381, 0, 0, 0, 385, 0, 542,
	386, 543, 388, 389, 0, 0, 390, 0, 0, 0,
	392, 393, 394, 0, 0, 395, 396, 544, 0, 397,
	0, 545, 398, 399, 391, 400, 401, 402, 403, 404,
	405, 406, 407, 0, 408, 409, 546, 547, 548, 410,
	549, 411, 412, 0, 413, 0, 414, 415, 416, 417,
	418, 419, 420, 550, 1051, 421, 423, 0, 0, 0,
	0, 0, 0, 424, 0, 426, 427, 428, 425, 429,
	430, 431, 432, 0, 433, 434, 435, 0, 436, 437,
	438, 439, 551, 440, 0, 441, 442, 448, 449, 443,
	444, 450, 451, 452, 453, 454, 0, 456, 457, 455,
	458, 459, 460, 0, 461, 445, 446, 462, 463, 0,
	464, 465, 552, 0, 466, 0, 467, 468, 469, 470,
	447, 471, 476, 553, 472, 473, 474, 475, 554, 0,
	478, 479, 0, 477, 0, 480, 481, 482, 483, 484,
	485, 311, 486, 0, 487, 555, 556, 557, 558, 0,
	494, 0, 488, 489, 559, 490, 560, 0, 491, 492,
	493, 0, 495, 496, 0, 0, 497, 498, 499, 501,
	502, 500, 503, 0, 504, 0, 0, 505, 506, 507,
	561, 562, 563, 237, 509, 508, 564, 0, 0, 0,
	0, 510, 511, 565, 512, 513, 514, 0, 0, 0,
	243, 244, 245, 246, 247, 248, 0, 249, 250, 0,
	0, 0, 0, 0, 515, 0, 0, 0, 0, 251,
	252, 254, 253, 255, 256, 257, 516, 517, 0, 518,
	258, 519, 0, 259, 260, 261, 262, 263, 0, 0,
	0, 264, 520, 521, 522, 0, 265, 266, 523, 0,
	0, 0, 267, 268, 269, 270, 271, 272, 273, 0,
	0, 275, 276, 277, 274, 0, 278, 0, 279, 280,
	281, 0, 282, 0, 283, 284, 0, 0, 0, 0,
	0, 0, 0, 285, 286, 287, 288, 0, 289, 524,
	525, 0, 293, 290, 291, 0, 294, 292, 0, 295,
	296, 0, 0, 297, 298, 299, 0, 300, 301, 0,
	302, 303, 0, 304, 305, 526, 306, 307, 308, 310,
	312, 309, 313, 314, 315, 316, 527, 528, 0, 0,
	0, 0, 0, 0, 0, 317, 318, 319, 529, 0,
	0, 0, 320, 0, 321, 0, 0, 0, 322, 323,
	530, 531, 324, 325, 0, 326, 532, 0, 533, 0,
	0, 328, 329, 330, 331, 332, 534, 535, 536, 387,
	0, 333, 334, 0, 335, 336, 337, 338, 0, 0,
	0, 0, 339, 340, 342, 0, 0, 341, 537, 538,
	0, 539, 0, 343, 0, 540, 0, 344, 345, 346,
	0, 347, 0, 0, 0, 348, 349, 350, 351, 352,
	353, 0, 355, 354, 0, 356, 541, 0, 357, 358,
	0, 0, 359, 360, 361, 0, 0, 362, 363, 364,
	365, 0, 366, 367, 369, 371, 368, 370, 375, 372,
	373, 374, 377, 0, 376, 0, 378, 379, 380, 383,
	384, 382, 0, 381, 0, 0, 0, 385, 0, 542,
	386, 543, 388, 389, 0, 0, 390, 0, 0, 0,
	392, 393, 394, 0, 0, 395, 396, 544, 0, 397,
	0, 545, 398, 399, 391, 400, 401, 0, 403, 404,
	405, 406, 407, 0, 408, 409, 546, 547, 548, 410,
	549, 411, 412, 0, 413, 0, 414, 415, 416, 417,
	0, 419, 420, 550, 422, 421, 423, 0, 0, 0,
	0, 0, 0, 424, 0, 426, 427, 428, 425, 429,
	430, 431, 432, 0, 433, 434, 435, 0, 436, 437,
	438, 439, 551, 0, 0, 441, 442, 448, 449, 443,
	444, 450, 451, 452, 453, 454, 0, 456, 457, 455,
	458, 459, 460, 0, 461, 445, 446, 462, 463, 0,
	464, 465, 552, 0, 466, 0, 467, 468, 469, 470,
	447, 471, 476, 553, 472, 473, 474, 475, 554, 0,
	478, 479, 0, 477, 0, 480, 481, 482, 483, 484,
	485, 311, 486, 0, 487, 555, 556, 557, 558, 0,
	494, 0, 488, 489, 559, 490, 560, 0, 491, 492,
	493, 0, 495, 496, 0, 0, 497, 498, 499, 501,
	502, 500, 503, 0, 504, 0, 0, 505, 506, 507,
	561, 562, 563, 0, 509, 508, 564, 0, 0, 0,
	0, 510, 511, 565, 512, 513, 514, 1575, 1576, 0,
	1608, 1609, 1610, 1618, 1619, 1620, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1611, 1606,
	0, 0, 0, 0, 0, 0, 1578, 0, 0, 0,
	0, 0, 0, 1624, 0, 0, 0, 0, 0, 0,
	1575, 1576, 0, 1608, 1609, 1610, 1618, 1619, 1620, 0,
	0, 0, 0, 0, 0, 0, 1577, 0, 0, 0,
	0, 1611, 1606, 0, 0, 0, 1597, 0, 0, 1578,
	0, 0, 0, 0, 1594, 0, 1624, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1577,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1597,
	0, 0, 0, 0, 0, 0, 0, 1594, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1600, 1601,
	1602, 1603, 0, 0, 0, 0, 0, 0, 1583, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1615, 0, 0,
	1625, 1600, 1601, 1602, 1603, 0, 1605, 1607, 0, 0,
	0, 1583, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1621, 0, 1622, 0, 0, 0, 0, 0, 0,
	1592, 1593, 0, 0, 0, 0, 0, 0, 0, 0,
	1615, 0, 0, 1625, 0, 0, 0, 1613, 0, 1605,
	1607, 0, 0, 0, 0, 0, 0, 0, 1598, 0,
	0, 0, 0, 0, 1621, 0, 1622, 0, 0, 0,
	0, 0, 0, 1592, 1593, 0, 0, 0, 0, 0,
	0, 0, 0, 1623, 0, 0, 0, 0, 0, 0,
	1613, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1612, 1598, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1623, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1612, 0, 0, 0, 0, 0, 0,
	0, 1604, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1599, 0, 0, 0, 0, 0, 1575, 1576, 0,
	1608, 1609, 1610, 1618, 1619, 1620, 0, 0, 0, 0,
	0, 0, 0, 0, 1604, 0, 1616, 0, 1611, 1606,
	0, 0, 0, 0, 0, 0, 1578, 0, 0, 0,
	0, 0, 0, 1624, 1599, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1577, 0, 0, 1616,
	0, 0, 0, 0, 0, 0, 1597, 0, 0, 0,
	0, 0, 0, 0, 1594, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1614, 0, 0, 0, 1589, 1590,
	1596, 1617, 1595, 1591, 0, 1588, 1586, 1587, 1579, 1580,
	1581, 1582, 1584, 1585, 0, 0, 0, 0, 0, 0,
	0, 0, 2771, 0, 0, 0, 0, 0, 1600, 1601,
	1602, 1603, 0, 0, 0, 0, 0, 1614, 1583, 0,
	0, 1589, 1590, 1596, 1617, 1595, 1591, 0, 1588, 1586,
	1587, 1579, 1580, 1581, 1582, 1584, 1585, 0, 0, 0,
	0, 0, 0, 0, 0, 2770, 0, 1615, 0, 0,
	1625, 0, 0, 0, 0, 0, 1605, 1607, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1621, 0, 1622, 0, 0, 0, 0, 0, 0,
	1592, 1593, 0, 0, 0, 0, 0, 0, 1575, 1576,
	0, 1608, 1609, 1610, 1618, 1619, 1620, 1613, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1598, 1611,
	1606, 0, 0, 0, 0, 0, 0, 1578, 0, 0,
	0, 0, 0, 0, 1624, 0, 0, 0, 0, 0,
	0, 0, 0, 1623, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1577, 0, 0,
	1612, 0, 0, 0, 0, 0, 0, 1597, 0, 0,
	0, 0, 0, 0, 0, 1594, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1604, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1599, 0, 0, 0, 0, 0, 0, 0, 1600,
	1601, 1602, 1603, 0, 0, 0, 0, 0, 0, 1583,
	0, 0, 0, 0, 1575, 1576, 1616, 1608, 1609, 1610,
	1618, 1619, 1620, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1611, 1606, 0, 1615, 0,
	0, 1625, 0, 1578, 0, 0, 0, 1605, 1607, 0,
	1624, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1621, 0, 1622, 0, 0, 0, 0, 0,
	0, 1592, 1593, 1577, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1597, 0, 0, 0, 0, 1613, 0,
	0, 1594, 0, 0, 0, 0, 0, 0, 0, 1598,
	0, 0, 0, 0, 1614, 0, 0, 0, 1589, 1590,
	1596, 1617, 1595, 1591, 0, 1588, 1586, 1587, 1579, 1580,
	1581, 1582, 1584, 1585, 1623, 0, 0, 0, 0, 0,
	0, 0, 2222, 0, 0, 0, 0, 0, 0, 0,
	0, 1612, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1600, 1601, 1602, 1603, 0,
	0, 0, 0, 0, 0, 1583, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1575, 1576, 0,
	1608, 1609, 1610, 1618, 1619, 1620, 0, 0, 0, 0,
	0, 0, 1604, 0, 1615, 0, 0, 1625, 1611, 1606,
	0, 0, 0, 1605, 1607, 0, 1578, 0, 0, 0,
	0, 0, 1599, 1624, 0, 0, 0, 0, 1621, 0,
	1622, 0, 0, 0, 0, 0, 0, 1592, 1593, 0,
	0, 0, 0, 0, 0, 0, 1577, 1616, 0, 0,
	0, 0, 0, 0, 1613, 0, 1597, 0, 0, 0,
	0, 0, 0, 0, 1594, 1598, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1623, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1612, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1600, 1601,
	1602, 1603, 0, 0, 0, 1614, 0, 0, 1583, 1589,
	1590, 1596, 1617, 1595, 1591, 0, 1588, 1586, 1587, 1579,
	1580, 1581, 1582, 1584, 1585, 0, 0, 0, 1604, 3869,
	0, 0, 0, 0, 0, 0, 0, 1615, 0, 0,
	1625, 0, 0, 0, 0, 0, 1605, 1607, 1599, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1621, 0, 1622, 0, 0, 0, 0, 0, 0,
	1592, 1593, 0, 1616, 0, 0, 0, 0, 1575, 1576,
	0, 1608, 1609, 1610, 1618, 1619, 1620, 1613, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1598, 1611,
	1606, 0, 0, 0, 0, 0, 0, 1578, 0, 0,
	0, 0, 0, 0, 1624, 0, 0, 0, 0, 0,
	0, 0, 0, 1623, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1577, 0, 0,
	1612, 0, 0, 0, 0, 0, 0, 1597, 0, 0,
	0, 0, 0, 0, 0, 1594, 0, 0, 0, 0,
	0, 1614, 0, 0, 0, 1589, 1590, 1596, 1617, 1595,
	1591, 0, 1588, 1586, 1587, 1579, 1580, 1581, 1582, 1584,
	1585, 0, 0, 0, 0, 3777, 0, 0, 0, 0,
	0, 1604, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1599, 0, 0, 0, 0, 0, 0, 0, 1600,
	1601, 1602, 1603, 0, 0, 0, 0, 0, 0, 1583,
	0, 0, 0, 0, 1575, 1576, 1616, 1608, 1609, 1610,
	1618, 1619, 1620, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1611, 1606, 0, 1615, 0,
	0, 1625, 0, 1578, 0, 0, 0, 1605, 1607, 0,
	1624, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1621, 0, 1622, 0, 0, 0, 0, 0,
	0, 1592, 1593, 1577, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1597, 0, 0, 0, 0, 1613, 0,
	0, 1594, 0, 0, 0, 0, 0, 0, 0, 1598,
	0, 0, 0, 0, 1614, 0, 0, 0, 1589, 1590,
	1596, 1617, 1595, 1591, 0, 1588, 1586, 1587, 1579, 1580,
	1581, 1582, 1584, 1585, 1623, 0, 0, 0, 3776, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1612, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1600, 1601, 1602, 1603, 0,
	0, 0, 0, 0, 0, 1583, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1575, 1576, 0,
	1608, 1609, 1610, 1618, 1619, 1620, 0, 0, 0, 0,
	0, 0, 1604, 0, 1615, 0, 0, 1625, 1611, 1606,
	0, 0, 0, 1605, 1607, 0, 1578, 0, 0, 0,
	0, 0, 1599, 1624, 0, 0, 0, 0, 1621, 0,
	1622, 0, 0, 0, 0, 0, 0, 1592, 1593, 0,
	0, 0, 0, 0, 0, 0, 1577, 1616, 0, 0,
	0, 0, 0, 0, 1613, 0, 1597, 0, 0, 0,
	0, 0, 0, 0, 1594, 1598, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1623, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1612, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1600, 1601,
	1602, 1603, 0, 0, 0, 1614, 0, 0, 1583, 1589,
	1590, 1596, 1617, 1595, 1591, 0, 1588, 1586, 1587, 1579,
	1580, 1581, 1582, 1584, 1585, 0, 0, 0, 1604, 3630,
	0, 0, 0, 0, 0, 0, 0, 1615, 0, 0,
	1625, 0, 0, 0, 0, 0, 1605, 1607, 1599, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1621, 0, 1622, 0, 0, 0, 0, 0, 0,
	1592, 1593, 0, 1616, 0, 0, 0, 0, 1575, 1576,
	0, 1608, 1609, 1610, 1618, 1619, 1620, 1613, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1598, 1611,
	1606, 0, 0, 0, 0, 0, 0, 1578, 0, 0,
	0, 0, 0, 0, 1624, 0, 0, 0, 0, 0,
	0, 0, 0, 1623, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1577, 0, 0,
	1612, 0, 0, 0, 0, 0, 0, 1597, 0, 0,
	0, 0, 0, 0, 0, 1594, 0, 0, 0, 0,
	0, 1614, 0, 0, 0, 1589, 1590, 1596, 1617, 1595,
	1591, 0, 1588, 1586, 1587, 1579, 1580, 1581, 1582, 1584,
	1585, 0, 0, 0, 0, 3500, 0, 0, 0, 0,
	0, 1604, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1599, 0, 0, 0, 0, 0, 0, 0, 1600,
	1601, 1602, 1603, 0, 0, 0, 0, 0, 0, 1583,
	0, 0, 0, 0, 1575, 1576, 1616, 1608, 1609, 1610,
	1618, 1619, 1620, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1611, 1606, 0, 1615, 0,
	0, 1625, 0, 1578, 0, 0, 0, 1605, 1607, 0,
	1624, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1621, 0, 1622, 0, 0, 0, 0, 0,
	0, 1592, 1593, 1577, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1597, 0, 0, 0, 0, 1613, 0,
	0, 1594, 0, 0, 0, 0, 0, 0, 0, 1598,
	0, 0, 0, 0, 1614, 0, 0, 0, 1589, 1590,
	1596, 1617, 1595, 1591, 0, 1588, 1586, 1587, 1579, 1580,
	1581, 1582, 1584, 1585, 1623, 0, 0, 0, 3446, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1612, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1600, 1601, 1602, 1603, 0,
	0, 0, 0, 0, 0, 1583, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1575, 1576, 0,
	1608, 1609, 1610, 1618, 1619, 1620, 0, 0, 0, 0,
	0, 0, 1604, 0, 1615, 0, 0, 1625, 1611, 1606,
	0, 0, 0, 1605, 1607, 0, 1578, 0, 0, 0,
	0, 0, 1599, 1624, 0, 0, 0, 0, 1621, 0,
	1622, 0, 0, 0, 0, 0, 0, 1592, 1593, 0,
	0, 0, 0, 0, 0, 0, 1577, 1616, 0, 0,
	0, 0, 0, 0, 1613, 0, 1597, 0, 0, 0,
	0, 0, 0, 0, 1594, 1598, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1623, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1612, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1600, 1601,
	1602, 1603, 0, 0, 0, 1614, 0, 0, 1583, 1589,
	1590, 1596, 1617, 1595, 1591, 0, 1588, 1586, 1587, 1579,
	1580, 1581, 1582, 1584, 1585, 0, 0, 0, 1604, 3445,
	0, 0, 0, 0, 0, 0, 0, 1615, 0, 0,
	1625, 0, 0, 0, 0, 0, 1605, 1607, 1599, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1621, 0, 1622, 0, 0, 0, 0, 0, 0,
	1592, 1593, 0, 1616, 0, 0, 0, 0, 1575, 1576,
	0, 1608, 1609, 1610, 1618, 1619, 1620, 1613, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1598, 1611,
	1606, 0, 0, 0, 0, 0, 0, 1578, 0, 0,
	0, 0, 0, 0, 1624, 0, 0, 0, 0, 0,
	0, 0, 0, 1623, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1577, 0, 0,
	1612, 0, 0, 0, 0, 0, 0, 1597, 0, 0,
	0, 0, 0, 0, 0, 1594, 0, 0, 0, 0,
	0, 1614, 0, 0, 0, 1589, 1590, 1596, 1617, 1595,
	1591, 0, 1588, 1586, 1587, 1579, 1580, 1581, 1582, 1584,
	1585, 0, 0, 0, 0, 3444, 0, 0, 0, 0,
	0, 1604, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1599, 0, 0, 0, 0, 0, 0, 0, 1600,
	1601, 1602, 1603, 0, 0, 0, 0, 0, 0, 1583,
	0, 0, 0, 0, 1575, 1576, 1616, 1608, 1609, 1610,
	1618, 1619, 1620, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1611, 1606, 0, 1615, 0,
	0, 1625, 0, 1578, 0, 0, 0, 1605, 1607, 0,
	1624, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1621, 0, 1622, 0, 0, 0, 0, 0,
	0, 1592, 1593, 1577, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1597, 0, 0, 0, 0, 1613, 0,
	0, 1594, 0, 0, 0, 0, 0, 0, 0, 1598,
	0, 0, 0, 0, 1614, 0, 0, 0, 1589, 1590,
	1596, 1617, 1595, 1591, 0, 1588, 1586, 1587, 1579, 1580,
	1581, 1582, 1584, 1585, 1623, 0, 0, 0, 3174, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1612, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1600, 1601, 1602, 1603, 0,
	0, 0, 0, 0, 0, 1583, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1575, 1576, 0,
	1608, 1609, 1610, 1618, 1619, 1620, 0, 0, 0, 0,
	0, 0, 1604, 0, 1615, 0, 0, 1625, 1611, 1606,
	0, 0, 0, 1605, 1607, 0, 1578, 0, 0, 0,
	0, 0, 1599, 1624, 0, 0, 0, 0, 1621, 0,
	1622, 0, 0, 0, 0, 0, 0, 1592, 1593, 0,
	0, 0, 0, 0, 0, 0, 1577, 1616, 0, 0,
	0, 0, 0, 0, 1613, 0, 1597, 0, 0, 0,
	0, 0, 0, 0, 1594, 1598, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1623, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1612, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1600, 1601,
	1602, 1603, 0, 0, 0, 1614, 0, 0, 1583, 1589,
	1590, 1596, 1617, 1595, 1591, 0, 1588, 1586, 1587, 1579,
	1580, 1581, 1582, 1584, 1585, 0, 0, 0, 1604, 2768,
	0, 0, 0, 0, 0, 0, 0, 1615, 0, 0,
	1625, 0, 0, 0, 0, 0, 1605, 1607, 1599, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1621, 0, 1622, 0, 0, 0, 0, 0, 0,
	1592, 1593, 0, 1616, 0, 0, 0, 0, 1575, 1576,
	0, 1608, 1609, 1610, 1618, 1619, 1620, 1613, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1598, 1611,
	1606, 0, 0, 0, 0, 0, 0, 1578, 0, 0,
	0, 0, 0, 0, 1624, 0, 0, 0, 0, 0,
	0, 0, 0, 1623, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1577, 0, 0,
	1612, 0, 0, 0, 0, 0, 0, 1597, 0, 0,
	0, 0, 0, 0, 0, 1594, 0, 0, 0, 0,
	0, 1614, 0, 0, 0, 1589, 1590, 1596, 1617, 1595,
	1591, 0, 1588, 1586, 1587, 1579, 1580, 1581, 1582, 1584,
	1585, 0, 0, 0, 0, 2767, 0, 0, 0, 0,
	0, 1604, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1599, 0, 0, 0, 0, 0, 0, 0, 1600,
	1601, 1602, 1603, 0, 0, 0, 0, 0, 0, 1583,
	0, 0, 0, 0, 1575, 1576, 1616, 1608, 1609, 1610,
	1618, 1619, 1620, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1611, 1606, 0, 1615, 0,
	0, 1625, 0, 1578, 0, 0, 0, 1605, 1607, 0,
	1624, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1621, 0, 1622, 0, 0, 0, 0, 0,
	0, 1592, 1593, 1577, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1597, 0, 0, 0, 0, 1613, 0,
	0, 1594, 0, 0, 0, 0, 0, 0, 0, 1598,
	0, 0, 0, 0, 1614, 0, 0, 0, 1589, 1590,
	1596, 1617, 1595, 1591, 0, 1588, 1586, 1587, 1579, 1580,
	1581, 1582, 1584, 1585, 1623, 0, 0, 0, 2766, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1612, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1600, 1601, 1602, 1603, 0,
	0, 0, 0, 0, 0, 1583, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1604, 0, 1615, 0, 0, 1625, 0, 0,
	0, 0, 0, 1605, 1607, 0, 0, 0, 0, 0,
	0, 0, 1599, 0, 0, 0, 0, 0, 1621, 0,
	1622, 0, 0, 0, 0, 0, 0, 1592, 1593, 0,
	0, 0, 0, 0, 0, 1575, 1576, 1616, 1608, 1609,
	1610, 1618, 1619, 1620, 1613, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1598, 1611, 1606, 0, 0,
	0, 0, 0, 0, 1578, 0, 0, 0, 0, 0,
	0, 1624, 0, 0, 0, 0, 0, 0, 0, 0,
	1623, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1577, 0, 0, 1612, 0, 0,
	0, 0, 0, 0, 1597, 0, 0, 0, 0, 0,
	0, 0, 1594, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1614, 0, 0, 0, 1589,
	1590, 1596, 1617, 1595, 1591, 0, 1588, 1586, 1587, 1579,
	1580, 1581, 1582, 1584, 1585, 0, 0, 0, 1604, 2765,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1599, 0,
	0, 0, 0, 0, 0, 0, 1600, 1601, 1602, 1603,
	0, 0, 0, 0, 0, 0, 1583, 3995, 0, 0,
	0, 0, 0, 1616, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1615, 0, 0, 1625, 0,
	0, 0, 0, 0, 1605, 1607, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1621,
	0, 1622, 0, 0, 0, 0, 0, 0, 1592, 1593,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1613, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1598, 0, 0, 0,
	0, 1614, 0, 0, 0, 1589, 1590, 1596, 1617, 1595,
	1591, 0, 1588, 1586, 1587, 1579, 1580, 1581, 1582, 1584,
	1585, 1623, 0, 2732, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1612, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3994, 0, 1575, 1576, 0, 1608,
	1609, 1610, 1618, 1619, 1620, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1611, 1606, 1604,
	0, 0, 0, 2703, 0, 1578, 0, 0, 0, 0,
	0, 0, 1624, 0, 0, 0, 0, 0, 0, 1599,
	1575, 1576, 0, 1608, 1609, 1610, 1618, 1619, 1620, 0,
	0, 0, 0, 0, 0, 1577, 0, 0, 0, 0,
	0, 1611, 1606, 0, 1616, 1597, 0, 0, 0, 1578,
	0, 0, 0, 1594, 0, 0, 1624, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1577,
	0, 0, 0, 0, 2704, 0, 0, 0, 0, 1597,
	0, 0, 0, 0, 0, 0, 0, 1594, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1600, 1601, 1602,
	1603, 0, 0, 0, 0, 0, 0, 1583, 0, 0,
	0, 0, 1614, 0, 0, 0, 1589, 1590, 1596, 1617,
	1595, 1591, 0, 1588, 1586, 1587, 1579, 1580, 1581, 1582,
	1584, 1585, 0, 0, 0, 0, 1615, 0, 0, 1625,
	0, 1600, 1601, 1602, 1603, 1605, 1607, 0, 0, 0,
	0, 1583, 0, 2828, 0, 0, 2827, 0, 0, 0,
	1621, 0, 1622, 0, 0, 0, 0, 0, 0, 1592,
	1593, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1615, 0, 0, 1625, 0, 0, 1613, 0, 0, 1605,
	1607, 0, 0, 0, 0, 0, 0, 1598, 0, 0,
	0, 0, 0, 0, 1621, 0, 1622, 0, 0, 0,
	0, 0, 0, 1592, 1593, 0, 0, 0, 0, 0,
	0, 0, 1623, 0, 0, 0, 0, 0, 0, 0,
	1613, 0, 0, 0, 0, 0, 0, 0, 0, 1612,
	0, 1598, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1623, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1612, 0, 0, 0, 0, 0, 0,
	1604, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2342, 0, 0, 0, 0, 0,
	1599, 1575, 1576, 0, 1608, 1609, 1610, 1618, 1619, 1620,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1611, 1606, 1604, 1616, 0, 2341, 0, 0,
	1578, 0, 0, 0, 0, 0, 0, 1624, 0, 0,
	0, 0, 0, 0, 1599, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1577, 0, 0, 0, 0, 0, 0, 0, 0, 1616,
	1597, 0, 0, 0, 0, 0, 0, 0, 1594, 1575,
	1576, 0, 1608, 1609, 1610, 1618, 1619, 1620, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1611, 1606, 0, 0, 0, 0, 0, 0, 1578, 0,
	0, 0, 0, 1614, 0, 1624, 0, 1589, 1590, 1596,
	1617, 1595, 1591, 0, 1588, 1586, 1587, 1579, 1580, 1581,
	1582, 1584, 1585, 0, 0, 0, 0, 0, 1577, 0,
	0, 0, 1600, 1601, 1602, 1603, 0, 0, 1597, 0,
	0, 0, 1583, 0, 0, 0, 1594, 1614, 0, 0,
	0, 1589, 1590, 1596, 1617, 1595, 1591, 0, 1588, 1586,
	1587, 1579, 1580, 1581, 1582, 1584, 1585, 0, 0, 0,
	0, 1615, 0, 0, 1625, 0, 0, 0, 0, 0,
	1605, 1607, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1621, 0, 1622, 0, 0,
	0, 0, 0, 0, 1592, 1593, 0, 0, 0, 0,
	1600, 1601, 1602, 1603, 0, 0, 0, 0, 0, 0,
	1583, 1613, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1598, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1615,
	0, 0, 1625, 0, 0, 0, 0, 1623, 1605, 1607,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1621, 1612, 1622, 0, 0, 0, 0,
	0, 0, 1592, 1593, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1613,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1598, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1604, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1623, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1599, 0, 0, 0, 0,
	0, 0, 1612, 909, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1616, 0, 0, 0, 0, 0, 1575, 1576, 0, 1608,
	1609, 1610, 1618, 1619, 1620, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1611, 1606, 0,
	0, 0, 0, 1604, 0, 1578, 0, 0, 0, 0,
	0, 0, 1624, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1599, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1577, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1597, 0, 0, 1616, 0,
	0, 0, 0, 1594, 0, 0, 0, 0, 1614, 0,
	0, 0, 1589, 1590, 1596, 1617, 1595, 1591, 0, 1588,
	1586, 1587, 1579, 1580, 1581, 1582, 1584, 1585, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1600, 1601, 1602,
	1603, 0, 0, 0, 0, 0, 0, 1583, 0, 0,
	0, 0, 0, 0, 0, 0, 1614, 0, 0, 0,
	1589, 1590, 1596, 1617, 1595, 1591, 0, 1588, 1586, 1587,
	1579, 1580, 1581, 1582, 1584, 1585, 1615, 0, 0, 1625,
	0, 0, 0, 0, 0, 1605, 1607, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1621, 0, 1622, 0, 0, 0, 0, 0, 0, 1592,
	1593, 0, 0, 0, 0, 0, 0, 1575, 1576, 0,
	1608, 1609, 1610, 1618, 1619, 1620, 1613, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1598, 1611, 1606,
	0, 0, 0, 0, 0, 0, 1578, 0, 0, 0,
	0, 0, 0, 1624, 0, 0, 0, 0, 0, 0,
	0, 0, 1623, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1577, 0, 0, 1612,
	0, 0, 0, 0, 0, 0, 1597, 0, 0, 0,
	0, 0, 0, 0, 1594, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1604, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1599, 0, 0, 0, 0, 0, 0, 0, 1600, 1601,
	1602, 1603, 0, 0, 0, 0, 0, 0, 1583, 0,
	0, 0, 0, 2834, 0, 1616, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1615, 0, 0,
	1625, 0, 0, 0, 0, 0, 1605, 1607, 0, 3155,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1621, 0, 1622, 0, 0, 0, 0, 0, 0,
	1592, 1593, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1613, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1598, 0,
	0, 0, 0, 1614, 0, 0, 0, 1589, 1590, 1596,
	1617, 1595, 1591, 0, 1588, 1586, 1587, 1579, 1580, 1581,
	1582, 1584, 1585, 1623, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1612, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1575, 1576, 0, 1608, 1609, 1610,
	1618, 1619, 1620, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1611, 1606, 0, 0, 0,
	2829, 1604, 0, 1578, 0, 0, 0, 0, 0, 0,
	1624, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1599, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1575, 1576, 1577, 1608, 1609, 1610, 1618, 1619, 1620,
	0, 0, 0, 1597, 0, 0, 1616, 0, 0, 0,
	0, 1594, 1611, 1606, 0, 0, 0, 0, 0, 0,
	1578, 0, 0, 0, 0, 0, 0, 1624, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1577, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1597, 0, 0, 0, 0, 0, 0, 0, 1594, 0,
	0, 0, 0, 0, 0, 1600, 1601, 1602, 1603, 0,
	0, 0, 0, 0, 0, 1583, 0, 0, 0, 0,
	0, 0, 0, 0, 1614, 0, 0, 0, 1589, 1590,
	1596, 1617, 1595, 1591, 0, 1588, 1586, 1587, 1579, 1580,
	1581, 1582, 1584, 1585, 1615, 0, 0, 1625, 0, 0,
	0, 0, 0, 1605, 1607, 0, 0, 0, 0, 0,
	0, 0, 1600, 1601, 1602, 1603, 0, 0, 1621, 0,
	1622, 0, 1583, 0, 0, 0, 0, 1592, 1593, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1613, 0, 0, 0, 0, 0,
	0, 1615, 0, 0, 1625, 1598, 0, 0, 0, 0,
	1605, 1607, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1621, 0, 1622, 0, 0,
	1623, 0, 0, 0, 1592, 1593, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1612, 0, 0,
	0, 1613, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1598, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1623, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1604, 0,
	0, 0, 0, 0, 1612, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1599, 0,
	0, 0, 0, 0, 2796, 0, 0, 0, 1575, 1576,
	0, 1608, 1609, 1610, 1618, 1619, 1620, 0, 0, 0,
	0, 0, 0, 1616, 0, 0, 0, 0, 0, 1611,
	1606, 0, 0, 0, 2769, 1604, 0, 1578, 0, 0,
	0, 0, 0, 0, 1624, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1599, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1577, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1597, 0, 0,
	1616, 0, 0, 0, 0, 1594, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1614, 0, 0, 0, 1589, 1590, 1596, 1617, 1595,
	1591, 0, 1588, 1586, 1587, 1579, 1580, 1581, 1582, 1584,
	1585, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1600,
	1601, 1602, 1603, 0, 0, 0, 0, 0, 0, 1583,
	0, 0, 0, 0, 0, 0, 0, 0, 1614, 0,
	0, 0, 1589, 1590, 1596, 1617, 1595, 1591, 0, 1588,
	1586, 1587, 1579, 1580, 1581, 1582, 1584, 1585, 1615, 0,
	0, 1625, 0, 0, 0, 0, 0, 1605, 1607, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1621, 0, 1622, 0, 0, 0, 0, 0,
	0, 1592, 1593, 0, 0, 0, 0, 0, 0, 1575,
	1576, 0, 1608, 1609, 1610, 1618, 1619, 1620, 1613, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1598,
	1611, 1606, 0, 0, 0, 0, 0, 0, 1578, 0,
	0, 0, 0, 0, 0, 1624, 0, 0, 0, 0,
	0, 0, 0, 0, 1623, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1577, 0,
	0, 1612, 0, 0, 0, 0, 0, 0, 1597, 0,
	0, 0, 0, 0, 0, 0, 1594, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1604, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1599, 0, 0, 0, 0, 0, 0, 0,
	1600, 1601, 1602, 1603, 0, 0, 0, 0, 0, 0,
	1583, 0, 0, 0, 0, 1575, 1576, 1616, 1608, 1609,
	1610, 1618, 1619, 1620, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1606, 0, 1615,
	0, 0, 1625, 0, 1578, 0, 0, 0, 1605, 1607,
	0, 1624, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1621, 0, 1622, 0, 0, 0, 0,
	0, 0, 1592, 1593, 1577, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1597, 0, 0, 0, 0, 1613,
	0, 0, 1594, 0, 0, 0, 0, 0, 0, 0,
	1598, 0, 0, 0, 0, 1614, 0, 0, 0, 1589,
	1590, 1596, 1617, 1595, 1591, 0, 1588, 1586, 1587, 1579,
	1580, 1581, 1582, 1584, 1585, 1623, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1612, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1600, 1601, 1602, 1603,
	0, 0, 0, 0, 0, 0, 1583, 0, 0, 0,
	0, 0, 1575, 1576, 0, 1608, 1609, 1610, 1618, 1619,
	1620, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1604, 1606, 1615, 0, 0, 1625, 0,
	0, 1578, 0, 0, 1605, 1607, 0, 0, 1624, 0,
	0, 0, 0, 1599, 0, 0, 0, 0, 0, 1621,
	0, 1622, 0, 0, 0, 0, 0, 0, 1592, 1593,
	0, 1577, 0, 0, 0, 0, 0, 0, 1616, 0,
	0, 1597, 0, 0, 0, 1613, 0, 0, 0, 1594,
	0, 0, 0, 0, 0, 0, 1598, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1623, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1600, 1601, 1602, 1603, 0, 0, 0,
	0, 0, 0, 1583, 0, 0, 1614, 0, 0, 0,
	1589, 1590, 1596, 1617, 1595, 1591, 0, 1588, 1586, 1587,
	1579, 1580, 1581, 1582, 1584, 1585, 0, 0, 0, 1604,
	0, 0, 1615, 0, 0, 1625, 0, 0, 0, 0,
	0, 1605, 1607, 0, 0, 0, 0, 0, 0, 1599,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1592, 1593, 0, 0, 0,
	0, 0, 0, 0, 1616, 0, 0, 0, 0, 0,
	0, 0, 1613, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1598, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1614, 0, 0, 0, 1589, 1590, 1596, 1617,
	1595, 1591, 0, 1588, 1586, 1587, 1579, 1580, 1581, 1582,
	1584, 1585, 0, 0, 0, 0, 1604, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1599, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1616, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1614,
	0, 0, 0, 1589, 1590, 1596, 1617, 1595, 1591, 0,
	1588, 1586, 1587, 1579, 1580, 1581, 1582, 1584, 1585,
}
var sqlPact = [...]int{

	9217, -1000, -1000, -1000, -1000, 256, -1000, -1000, 254, 247,
	242, 239, 237, 214, 211, 208, -1000, -1000, -1000, -1000,
	-1000, -1000, 206, -1000, -1000, 204, -1000, 193, 190, 188,
	-1000, -1000, 187, -1000, 186, -1000, -1000, -1000, -1000, 185,
	184, 183, 72259, 71793, 72719, 2127, 87559, 76411, 2023, 64821,
	87093, 64355, 86627, 86161, 182, -1000, 85695, 181, 180, 177,
	-1000, 85229, -1000, 1751, -1000, 176, 2834, 53611, 174, 173,
	171, 2046, 166, -1000, 164, 160, -1000, 9800, 1684, -1000,
	159, 152, -1000, 8111, 7583, 75485, 151, 147, 2371, 141,
	140, 53144, 139, 137, 2300, 2742, -1000, -1000, 1955, -1000,
	-1000, 136, 135, 133, 127, 126, 125, 123, 122, 119,
	-1000, 112, 110, 109, 108, 107, 106, 104, 103, -1000,
	101, 99, 94, 93, 91, 88, 87, 84, 81, 78,
	77, 76, -1000, 11934, 74, 1792, 1553, 1549, 1539, 1538,
	1532, 975, 73, 66, 65, 64, 63, 62, 61, 60,
	59, -1000, 58, 57, 56, 55, 46, 43, 40, 39,
	156, 38, 36, 35, 34, 33, 26, 25, 2600, -1000,
	1531, 1285, 25044, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 93079,
	88019, 22, -20, 21, -1000, 3062, 970, 44732, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 306, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 510, 1777,
	771, -1000, -1000, -1000, 84769, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2125, -75, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 769, -1000, 2124, 155, 2072, -1000, -1000, -1000,
	-1000, -1000, 88019, -1000, -1000, 3514, 3513, 1979, 768, 84309,
	-1000, 1556, -1000, 930, 27996, -1000, 1185, -1000, 27996, 300,
	-1000, -1000, -1000, -1000, -1000, -1000, 3508, 3507, 3504, 3503,
	-1000, -1000, 63889, 19110, 63423, 62957, 83843, 18634, 71327, 70861,
	83377, 59243, -1000, -1000, -1000, 1342, -1000, -1000, -1000, -1000,
	-1000, -1000, -1, 56863, 3271, 88019, -1000, 298, -1000, -1000,
	-1000, -1000, -1000, -1000, 38000, 953, 37498, 864, 36996, 681,
	-1000, -1000, -1000, 58767, -1000, 3502, 3500, 1096, 3499, 2998,
	92619, 1732, 3497, 1766, 1213, 1012, 3493, 3492, 3490, 3489,
	3488, 3485, 1400, 82911, 2762, 82445, 1711, 58291, 70395, 72719,
	2497, 81979, 1388, 1374, -1000, -1000, -1000, -1000, 2847, 2703,
	2692, 49900, -1000, -1000, 3484, 3480, 3476, 3474, 3472, 92159,
	1715, 3471, 2328, 3470, 3469, 3468, 3467, 3466, 3464, 3463,
	-1000, 69929, 69463, 68997, 3127, 81513, 68531, 81047, 57815, 36494,
	1025, -1000, -1000, -1000, 46610, 7592, 5416, 80581, 48039, 72719,
	72719, -1000, -1000, -1000, -1000, -1000, 35992, 868, 35490, 1022,
	-1000, -1000, 47091, 2696, -1000, -1000, -1000, -1000, 34988, 631,
	34486, 957, 88019, -1000, 2753, 1810, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 2088, 1488, 3289,
	57339, 1883, 1392, 3078, 2840, 2839, 1409, 2391, 2838, 2837,
	2832, 2831, 2796, 1655, 2440, 376, 24542, 2722, 1681, 33984,
	1430, 1460, 2790, 2787, 3306, 1921, 1862, 1966, 62491, 3462,
	3460, 3023, 2766, 2765, 2693, -1000, -1000, -1000, -1000, 1384,
	-1000, -1000, -1000, -1000, -1000, 65741, -1000, -1000, 1166, -1000,
	-1000, 1166, -1000, -1000, -1000, -1000, -1000, 1323, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1531,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2031, -1000, 1965, -1000, -1000, 2415, 2947, 2947, 2947, 3121,
	476, 469, -1000, 156, -1000, -1000, 99288, -1000, -1000, 38490,
	38490, 38490, 38490, 38490, 38490, 38490, 2019, -1000, 767, -1000,
	-1000, 834, -1000, 757, 607, -1000, -1000, -1000, -1000, -1000,
	-1000, 748, -1000, -1000, -1000, -1000, -1000, -1000, 3271, -1000,
	21542, -1000, -1000, -1000, 455, 747, 38490, -1000, -1000, 3342,
	3340, 869, -1000, 296, 917, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 2749, 743, 741,
	-1000, 738, 737, 736, 735, 733, -1000, -1000, -1000, 732,
	731, 729, 728, 727, 724, 723, 722, -1000, 1935, -1000,
	-1000, -1000, -1000, -1000, -1000, 655, 654, 654, 654, -1000,
	1007, -1000, -1000, -1000, 305, 652, 301, 650, 648, 646,
	720, 719, 718, 716, 712, 696, 695, 688, 679, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1006, -1000, -1000, -1000, -1000,
	-2, 88019, -1000, 510, -2, -1000, -1000, 674, -1000, 28486,
	28486, 28486, -1000, -1000, 2122, 38490, -1000, 3010, -1000, 4,
	4, 906, 45662, -1000, 43784, 906, 474, 810, 49433, -1000,
	2689, -1000, -1000, 673, 295, -1000, -1000, -1000, -1000, 19584,
	2688, 88019, 88019, 72719, 72719, 72719, 2937, 38490, -1000, -1000,
	54071, 88019, 73179, 3229, 54991, 54071, 88019, 2747, -1000, -1000,
	-1000, 88019, -1000, 38490, -1000, 3228, 1476, 60181, 3161, -12,
	-1000, -1000, -1000, -1000, -1000, -1000, 2298, 2385, 1174, 2147,
	1943, -1000, 27996, 2989, -1000, -1000, -1000, 291, 19584, -1000,
	-1000, -1000, -1000, -1000, 2389, 2920, 1298, -1000, 2143, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1676, 2919,
	-1000, 1971, 2917, 1669, -1000, -1000, 2106, -1000, -1000, 3019,
	-1000, -1000, 1865, 2914, 6, -1000, -1000, 2105, -1000, -1000,
	1912, -1000, -1000, 973, 2907, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 47091, 56863, -9, -1000, -1000, -1000,
	-1000, -21, -1000, 18158, 99288, -1000, -1000, -1000, -1000, 1829,
	99288, 853, -1000, -1000, 2905, -1000, 99288, 841, -1000, -1000,
	2904, -1000, 2736, -1000, -1000, -1000, -1000, 3457, -1000, 3455,
	2230, 3454, 3448, 3446, -1000, 1666, 1916, 3439, -1000, 3435,
	-1000, -1000, -1000, -1000, -1000, -1000, 68065, 2121, -1000, -1000,
	67133, -1000, 2221, -1000, 67599, 1010, -1000, 973, 2218, -1000,
	937, -1000, 3434, 3123, 2505, 973, 2217, -1000, -1000, -1000,
	-1000, -1000, 51289, -1000, 51289, -1000, 51289, -1000, 1557, -1000,
	91699, 4, 4, 3271, -1000, -1000, -1000, -1000, -1000, 2903,
	3433, 3430, 3429, -1000, 88019, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 201, 2902, -1000, -1000, 201, 2897, -1000, 201,
	2889, -1000, 75019, -1000, -1000, 2114, 2887, -1000, 199, 2881,
	-1000, -1000, 197, 2880, -1000, -1000, -78, 2879, -1000, -1000,
	99288, -1000, -1000, -1000, -23, -1000, -1000, -1000, 970, -1000,
	46129, -1000, 46129, 80115, 59717, 939, 721, 52677, 99288, -1000,
	-1000, -1000, -1000, 99288, -1000, -1000, -1000, -115, -1000, -1000,
	59717, 47091, 99288, -1000, -1000, -1000, -1000, 99288, -1000, -1000,
	-1000, 59717, 67133, -1000, 79649, 66673, -1000, -1000, 1399, 2424,
	-1000, -1000, -1000, 939, 59717, 59717, 59717, -1000, 79183, -1000,
	-1000, 1919, 1614, 3025, 1917, 72719, -1000, 1805, -1000, -1000,
	-1000, 3058, 2729, -1000, 54531, 74559, -1000, 74099, -1000, 73639,
	-1000, 72719, -1000, 72719, -1000, 3426, 3420, 3413, -1000, 3412,
	3042, 99288, 3038, -1000, 3410, 3153, 2722, 99288, -1000, 2868,
	1544, 1542, 88019, -1000, -1000, 88019, -1000, 88019, -1000, -1000,
	-1000, 1477, -1000, -1000, 2295, -1000, -1000, -1000, -1000, 72719,
	-1000, -1000, -1000, -1000, -1000, -1000, 2721, -1000, 1622, -1000,
	1756, -1000, 1398, -1000, -1000, 205, -1000, -1000, -12, -1000,
	91239, -1000, 2415, -1000, 88019, -1000, 2408, 2705, 2715, 1415,
	2136, 2412, -1000, 33482, 2351, 40940, 2140, 156, -1000, -1000,
	156, 156, 26024, -1000, -1000, 54991, 54991, 19584, 1353, 38490,
	38490, 38490, 38490, 38490, 38490, 38490, 38490, 38490, 38490, 38490,
	38490, 38490, 38490, 38490, 38490, 38490, 38490, 38490, 38490, 38490,
	38490, 38490, 38490, 38490, 38490, 38490, 38490, 38490, 38490, 38490,
	38490, 38490, 38490, 38490, 2053, 38490, 1322, 38490, 38490, 38490,
	38490, 2476, -1000, -1000, 1820, 542, 1902, -1000, 3278, 3278,
	3278, 488, 488, 99444, 99444, 515, 3407, 834, -1000, 38490,
	-1000, 175, 38490, 20060, -1000, 469, 8106, 2306, -1000, 468,
	20562, -1000, -1000, -1000, 21542, 607, 32980, 38490, 1000, 99288,
	-1000, -1000, 1529, 3294, 17684, 2710, 2586, 670, 788, 707,
	24040, 23538, 23036, 22534, 677, 38490, 38490, 38490, 38490, 38490,
	38490, 38490, 38490, -1000, -1000, 3298, -1000, 3294, -1000, -1000,
	-1000, -1000, 3294, 1349, 1347, 3294, -1000, 3294, 3294, 2805,
	2805, 32490, 31988, 31486, 41430, 30984, 38490, 22032, 30482, 29980,
	-1000, 88019, -2, 3227, 38490, 146, -1000, 97790, -1000, 146,
	146, 668, -30, 99288, 2483, 2483, 45197, 2187, 2024, 2024,
	2024, -1000, 906, 13863, 906, 78259, 2049, 906, 906, 285,
	308, 466, 43319, 3010, 78259, 793, 664, 20, 19, 18,
	-1000, -1000, 17, 10, -1000, -1000, 72719, 662, 20060, 19584,
	280, 1444, -31, 2467, 2464, 2463, -1000, 2446, 1712, -32,
	1315, -51, -1000, 243, -33, -1000, 1252, 276, 3294, -1000,
	-1000, -1000, -1000, -1000, 3403, 3400, -1000, 1003, 661, 656,
	870, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 655,
	654, 654, 654, -1000, 305, 652, 301, 650, 648, 646,
	-1000, -1000, -1000, -1000, 2687, -21, 73179, 914, -38, 1104,
	-12, -1000, -1000, -1000, 60181, 1166, -1000, 1908, -1000, -1000,
	-1000, -1000, -1000, -1000, 1387, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 869, -1000, -1000, -1000, -1000, -1000, -1000, 3287,
	3285, -3, -1000, -1000, 19584, -1000, -14, 1672, 1649, -1000,
	62025, 2275, 3026, 3009, 1555, -1000, 1467, 3119, 65741, 3186,
	3215, 912, -1000, 2684, -1000, -1000, 929, 1588, 1648, 1310,
	65741, 1971, -1000, 54991, -1000, 2406, 3116, 1351, 1348, 1351,
	1351, 1337, -1000, 65741, 1642, 1303, -1000, 1296, -1000, -17,
	3181, 3197, 592, -1000, 2683, 1293, -1000, -1000, 72719, 19584,
	1447, 1443, 1634, 1291, -4, -1000, 3172, 3169, 1255, 1245,
	-1000, 1568, -1000, 59717, 901, -9, 56863, 88019, 267, -1000,
	175, 38490, 38490, 175, 38490, 175, 3142, -1000, -1000, 2877,
	-1000, -1000, -1000, 3399, 1891, 2322, -1000, -1000, -1000, 645,
	2216, 2680, 88019, 2470, -10, 72719, -1000, 2873, 1971, 2208,
	-1000, -1000, 66207, -1000, 2872, 642, 3397, -1000, 90779, -1000,
	3039, 1363, 2866, 1061, 588, 3224, -1000, 588, 51749, -1000,
	88019, -1000, -1000, 88019, -1000, -1000, -1000, 3396, -1000, 72719,
	-1000, -1000, 72719, -1000, 72719, -1000, 72719, 196, 2859, -1000,
	-1000, 88019, -1000, 72719, 72719, -1000, 88019, 88019, 59717, 59717,
	1042, 61105, -39, -46, 464, -1000, 78723, 88019, 1060, 61565,
	88019, 2979, 939, 47091, -1000, -49, -115, 939, 939, 901,
	-1000, 901, -1000, 72719, 2713, -1000, 939, 939, 939, -1000,
	-1000, -1000, -1000, 3393, 3392, -1000, -1000, -1000, 972, 72719,
	88019, 72719, -1000, -1000, 88019, -1000, 88019, -1000, 972, 88019,
	972, 88019, 972, 88019, -1000, -1000, -1000, -1000, -1000, -1000,
	175, 38490, -1000, -1000, 3389, 1616, -1000, 2708, -1000, 2707,
	-1000, 42, -1000, -1000, -1000, -1000, -1000, 1828, 72719, 72719,
	72719, 72719, 88019, 72719, -1000, 65741, -1000, 2408, 2705, -1000,
	-1000, -1000, -1000, -1000, -1000, 1472, 2082, -1000, 2395, -1000,
	1525, -1000, -1000, -1000, 99288, 41904, -1000, -1000, 99288, 1846,
	-1000, 40450, 39960, -1000, -1000, 1598, 72719, 2474, -1000, 2474,
	-152, -1000, 97435, 2383, 72719, -1000, -1000, -1000, -1000, -1000,
	928, 1242, 1242, 1215, 1215, 1215, 1215, 3211, 3245, 4175,
	1887, 5908, 5908, 421, 421, 421, 421, 421, 5908, 805,
	488, 488, 805, 805, 805, 805, 805, 488, 488, 488,
	5908, 5908, 5908, 99444, 4567, 7428, 38490, 38490, 1238, 1814,
	542, 6828, 38490, 4456, 4456, 4456, 4456, -1000, 1922, -1000,
	-1000, -1000, -1000, 2678, 636, 41430, 41430, -1000, -1000, -1000,
	-1000, 21052, 38490, -1000, -1000, -1000, -1000, 29478, -1000, -1000,
	96903, -260, 462, -135, -28, -1000, 38490, 38490, 38490, 461,
	-1000, 264, 38490, 88019, -1000, 94366, 791, -175, -1000, -54,
	1336, -1000, 38490, -1000, -1000, 1236, -1000, 1233, 1226, 1224,
	-1000, 629, 458, -1000, 262, -1000, 2028, 625, 624, 38490,
	-1000, -1000, -1000, -1000, -1000, 96747, -1000, -1000, 96526, -1000,
	-1000, 96363, -1000, -1000, 96207, -1000, -1000, -1000, 99067, 94049,
	94006, 13285, 7321, 12923, 12362, -55, 456, -56, 450, 924,
	871, 448, 444, 429, -57, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -62, 428, -1000, 2671, -135, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 426, -1000, 425, -1000,
	98760, -135, 393, 410, -1000, 41430, 41430, 41430, -1000, 389,
	-1000, 97479, -1000, 98703, 28988, 28988, 28988, 388, 98396, 38490,
	-135, -63, -1000, -72, -1000, -1000, 518, -79, 977, 28486,
	44265, 19584, -1000, 977, 977, 38490, -1000, 38490, 2435, -1000,
	-1000, -1000, 2409, 2892, 2483, 45197, -1000, -1000, -1000, -1000,
	78259, -1000, 3271, 2672, -1000, 78259, -1000, -1000, 88019, 510,
	-1000, 78259, 78259, 19584, 906, -1000, 906, 78259, 579, -1000,
	-1000, -1000, -1000, -1000, 383, 48503, -28, 261, 19584, 939,
	-1000, 2449, 2449, 2449, 2449, -1000, -1000, 88019, 3248, -1000,
	1923, -1000, 54991, -1000, 833, 1037, 19584, -1000, -1000, -1000,
	623, -1000, 3294, 3294, -1000, 3294, 88019, 129, 27996, -1000,
	1166, -1000, -1000, 1456, -1000, 1904, -1000, 1302, -1000, -1000,
	-1000, -1000, 27996, -1000, 1819, 88019, 88019, 72719, -1000, 88019,
	-1000, 2206, 90319, 2204, 54991, 88019, -1000, -1000, 622, 621,
	2374, 2363, 1046, 88019, 88019, 2360, 89859, 89399, 88019, 1952,
	38490, 2013, 1937, 175, 175, -1000, -1000, 175, 619, 1240,
	72719, 72719, 88019, 72719, 1609, -1000, -1000, -1000, -1000, -1000,
	65281, -1000, -1000, 3297, 3296, -1000, 1351, -1000, -1000, -1000,
	1351, 1971, 1584, 88019, 72719, 88019, 1963, 175, 175, -1000,
	-1000, 175, 618, 19584, 1849, -1000, 2741, 88019, 3337, 88019,
	88019, 88019, 56403, 3049, 88939, 88019, 88019, 56403, 1568, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 55939, 1066, 973, 2520,
	-1000, -1000, 17210, -1000, 99288, 99288, -1000, 99288, -1000, 54071,
	88019, -1000, 1009, 88019, 61565, 962, 2852, 50829, -21, 939,
	59717, 72719, -10, 88019, -1000, 1971, 2851, 510, 2203, -1000,
	-1000, 59717, 615, 3385, 3384, -1000, 2117, 2199, -1000, -1000,
	88479, 2855, 867, 88019, 977, 45197, 1881, -1000, 48969, 1026,
	88019, 1741, 83, -1000, -1000, -1000, 28, 88019, -1000, 3382,
	-1000, -1000, 201, 201, 201, -1000, 72719, 72719, 2114, -1000,
	199, -1000, 197, -1000, -78, -1000, -1000, 1042, 1042, 939,
	-223, 612, -1000, 895, 894, 47565, 59717, -87, -1000, -1000,
	-1000, -1000, -1000, 72719, 88019, 682, 2499, 88019, -88, -1000,
	259, 611, -1000, -1000, -1000, 939, 2665, -1000, -1000, 982,
	-1000, 1395, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 3, -21, -21, -1000, 972, -1000, 972, -1000, 972,
	-1000, 99288, -1000, -1000, 1611, 1582, 88019, -1000, 19584, 88019,
	72719, 19584, 72719, 2704, 2702, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1077, -1000, 1846, 2081, -1000, 607, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2274, -1000,
	-11, 26024, 2156, -1000, -1000, 72719, 2, 38490, 38490, 6222,
	5333, 38490, 41430, 41430, -1000, 38490, 447, -1000, -1000, -1000,
	-1000, -1000, 2660, 603, 38490, 54991, 5419, 5082, -1000, 381,
	11142, 805, -1000, 38490, -1000, 380, 27506, -1000, 97868, -29,
	-89, -1000, 14350, -135, -90, -1000, -1000, 829, -1000, 2846,
	-1000, 38490, 98175, 2248, 1990, 1785, 1547, 3294, 3322, 16736,
	-1000, 52213, 986, 2055, 95986, -1000, -1000, -1000, -1000, 54991,
	54991, 38490, 38490, -1000, 38490, 38490, 38490, -1000, -1000, -1000,
	3294, 915, -1000, -1000, -1000, 915, -1000, -1000, 1351, -1000,
	1351, -1000, 38490, -1000, -1000, 2628, 38490, -1000, 54991, 54991,
	41430, 41430, 41430, 41430, 41430, 41430, 41430, 41430, 41430, 41430,
	41430, 41430, 41430, 41430, 41430, 41430, 41430, 41430, 41430, 2340,
	41430, 3272, 3272, 3272, -1000, 2700, 2628, 38490, 38490, 54991,
	379, 377, 374, -1000, 38490, -135, -1000, -1000, 1042, 599,
	-1000, 2257, -1000, 2584, -1000, 38490, -1000, -229, -1000, 3010,
	-1000, -1000, 2584, 2584, -95, 99288, 45197, 45197, -1000, 596,
	38490, 2375, -1000, -1000, 781, -261, -1000, 892, -1000, -1000,
	-1000, -1000, -1000, 510, -1000, -1000, -1000, 244, 78259, 78259,
	780, -1000, -96, -1000, -1000, -102, -1000, 3223, 370, 19584,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -21, 2071,
	3319, -1000, 3295, 824, 776, 198, 3294, 365, 363, 362,
	-21, 88019, -1000, -12, -1000, -1000, -1000, 38490, -1000, -1000,
	3021, 1212, 1187, -1000, -1000, 2845, -1000, 2195, -1000, 1031,
	-1000, 1740, -1000, 38490, 38490, 594, 593, 3378, 1836, 3375,
	1058, 2844, 2114, 2836, 2114, -1000, -1000, 933, -1000, 99288,
	590, 587, -1000, -14, 1663, 1630, 976, -1000, -1000, 38490,
	38490, 77799, -1000, 414, 3019, 1, -1000, -1000, 1619, 1145,
	-1000, -1000, -1000, -1000, 1971, 1566, 1137, -1000, -1000, -1000,
	-1000, 974, -1000, -1000, 38490, -1000, -17, 1135, 3194, 2188,
	72719, 1133, -1000, 1132, -1000, -1000, -1000, -1000, -1000, -1000,
	3168, 2114, 2835, 1260, -1000, -1000, -1000, -1000, -1000, 55465,
	-1000, 968, 2620, -1000, 1130, 3374, 72719, 3368, 360, -104,
	-18, 54991, 3222, 2100, 372, 72719, 916, -1000, 3271, -1000,
	-1000, -1000, -1000, 72719, 3208, 2826, 973, 3316, -1000, -1000,
	72719, 2823, 2112, 2185, 2310, 867, 60645, -1000, 973, 2054,
	-69, -1000, 1741, 27004, 3016, -105, -1000, -1000, -1000, 977,
	51749, 45197, 38490, 3367, -116, -1000, -1000, -1000, -1000, -1000,
	196, -1000, -1000, -1000, -1000, -1000, -1000, 76875, 76875, 59717,
	59717, 59717, 939, 88019, 88019, 61565, -1000, 586, 88019, 88019,
	584, -1000, 88019, 88019, 3365, 59717, -1000, 175, -1000, 2069,
	72719, 16262, -1000, -1000, -1000, -1000, -1000, 972, -1000, -1000,
	1964, 2139, 1964, 1782, 1769, -1000, 2078, -1000, -1000, -1000,
	-1000, 2450, 3036, 19584, 3150, 4456, 38490, 38490, 241, 4674,
	504, 4456, 38490, 38490, 54991, 99601, -117, 38490, 38490, -1000,
	38490, 774, 99288, 3313, 38490, 359, 356, -1000, -1000, -1000,
	3290, -1000, -1000, -1000, 99288, 38490, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 355, -1000, 157, -1000, -1000, -1000, 93539,
	-1000, 38490, 354, 3111, -1000, 351, 347, 8721, 6733, 95823,
	95667, 95446, 346, -1000, -1000, 344, 341, 99288, 2700, 99288,
	-1000, -1000, 1053, 1053, 1326, 1326, 1326, 1326, 3272, 1816,
	1839, 1196, 544, 544, 544, 770, 1014, 1014, 544, 544,
	544, 2617, 2302, 583, 4133, -1000, -1000, 99288, 99288, 339,
	-1000, -1000, -1000, -135, 333, 1042, -1000, 2577, 3093, 99288,
	-1000, 45197, 2577, 2577, -1000, -1000, 2892, 88019, 99288, 45197,
	-1000, 2672, -1000, 14835, -1000, 19584, -1000, -1000, -1000, -1000,
	3271, -1000, 48503, -1000, 582, -1000, 29, -1000, -1000, 710,
	3363, 816, 19584, 331, -1000, -1000, -1000, -21, 99288, 88019,
	88019, 88019, 2820, -1000, 3188, -1000, 1046, 95283, -122, -1000,
	97435, 38490, 88019, -1000, -1000, 1868, 2370, 1090, -1000, 3067,
	88019, -1000, 88019, -1000, -1000, 88019, 88019, 72719, 88019, 2799,
	-123, 99288, -25, -1000, 890, -1000, 1338, -1000, 15788, 88019,
	72719, 88019, 72719, 2794, -125, 19584, -1000, 3312, 3309, 2815,
	3074, 3308, 88019, -1000, 88019, 72719, 2978, -1000, -1000, -1000,
	2339, 59717, 47091, -1000, 510, -1000, 2491, -1000, 75945, 2145,
	175, -1000, 77339, 3360, 581, -1000, 2061, -1000, 580, 1971,
	175, 72719, -1000, 324, -44, -1000, 1038, 19584, 72719, 2814,
	2315, 867, 60645, -1000, 1363, 2412, -1000, -68, -1000, 543,
	175, 2054, -1000, -69, 99288, -1000, 883, -1000, -1000, -130,
	-1000, -1000, 322, -1000, 2974, 2973, -1000, 2585, 38490, 577,
	576, 88019, 2971, -1000, -1000, -132, -1000, 2229, -1000, -1000,
	-1000, -1000, -1000, 19584, 1580, -1000, 575, 571, -1000, -1000,
	-1000, -1000, 3036, 4456, 4456, 38490, 38490, 38490, 4456, 99601,
	-138, -1000, 4456, 4456, -135, -1000, -1000, 97868, -1000, -1000,
	-1000, 99288, -1000, 15314, 1991, -1000, 95127, -1000, 26024, -1000,
	-1000, 38490, 38490, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 41430, 2613, 568, 54991, -1000, -1000, 319, 950, 38490,
	38490, 3010, 950, 950, -1000, -139, -1000, -1000, -1000, 3271,
	29, -1000, -1000, 3359, 19584, 772, -1000, 3357, -1000, -1000,
	-1000, -1000, -1000, 88019, -1000, 88019, -1000, 19584, 88019, 2607,
	2176, -1000, -1000, 2352, 567, 41430, 72719, 820, -1000, 3241,
	2637, 1824, 38490, 2156, -140, -145, 2169, -1000, -1000, 2162,
	38490, -1000, 54991, 553, 2114, 2114, -153, -154, -1000, -1000,
	38490, 1129, 88019, 26514, -1000, 3353, 3019, -1000, -1000, -1000,
	-1000, 38490, 1127, -1000, -1000, -1000, 3302, 2114, 19584, -1000,
	2114, 2114, 3074, 1087, -77, 551, -1000, 882, -1000, -1000,
	880, -78, 968, 3199, 1963, 2536, -1000, -1000, -1000, -1000,
	2345, -1000, -1000, 88019, 2343, 945, -156, -1000, 879, 876,
	-1000, 61565, 962, 949, -1000, -1000, -1000, 510, -1000, 3281,
	549, 88019, 2111, 546, 19584, -1000, 867, 60645, -1000, 2855,
	1741, -1000, 2934, 88019, 3002, -1000, 2412, 542, -1000, 939,
	541, 530, 3044, 3044, -161, 38490, 38490, -162, 529, 939,
	-101, -1000, 804, 802, -1000, -1000, 72719, 72719, 38490, 38490,
	-1000, 4456, 4456, 4456, -1000, 318, -1000, -1000, 2054, 3092,
	-1000, -107, 94906, 94743, 709, 41430, 54991, -163, -1000, -1000,
	88019, 99288, -135, -1000, -1000, -1000, 449, -1000, 3351, -1000,
	-1000, 1838, -1000, -1000, -1000, 88019, 2183, -1000, 1044, 38490,
	4133, 528, 38490, -1000, 3198, -1000, 2486, 2639, 2491, 522,
	-1000, -1000, -1000, -1000, -1000, 1036, 1860, -1000, -1000, 99288,
	3074, 38490, -1000, -1000, 520, 517, 99288, 516, 866, 2602,
	-1000, -1000, -1000, 99288, 514, 3194, -1000, -1000, -1000, -1000,
	2114, 72719, 2093, 2093, 59717, 47091, 1870, 175, 962, -1000,
	1999, 2145, 512, -1000, -1000, 2101, 2429, -1000, 77339, 42852,
	42852, 317, 3196, 949, -1000, 3268, -1000, 3191, -1000, 38490,
	-1000, 72719, 38490, 2110, 60645, -1000, 2310, -1000, 1249, -164,
	88019, 1741, -1000, -1000, 59717, 59717, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1036, -169, -170,
	-1000, 59717, -1000, 2229, -1000, 88019, -1000, 88019, -1000, -1000,
	-172, -178, -1000, 1918, 38490, 26024, -1000, -1000, 709, -179,
	-1000, -114, -1000, 3190, -1000, -1000, -1000, -1000, 2807, 2572,
	94587, 2263, 88019, 9606, -1000, 2630, -1000, -1000, 1963, 88019,
	2491, 2563, 72719, 1041, -186, 1964, 1964, 38490, 25534, 1994,
	38490, -1000, -1000, 3074, -1000, -187, -1000, -1000, 2595, 2679,
	-1000, 2101, 72719, 88019, -1000, 3050, -1000, 2965, -1000, -1000,
	-1000, 2491, 175, -1000, -1000, 175, -188, 1038, -194, 72719,
	-1000, 2315, 1541, -1000, 977, -1000, -1000, -196, -197, 1824,
	1036, 977, -199, -1000, -205, -208, -1000, -1000, 313, 39470,
	39470, 39470, -135, -152, -1000, 88019, 511, 2788, 963, -1000,
	2102, 1773, 44, 1052, -1000, -1000, 2637, -211, -1000, 959,
	510, -1000, 38490, 1036, -213, -1000, 1019, -214, -1000, 1018,
	-216, -1000, 2599, -1000, -222, 2114, -1000, 946, 3141, -1000,
	-1000, -1000, -1000, -1000, 509, -224, -1000, -1000, 2141, -1000,
	1963, 945, -1000, 1036, 508, 1824, 503, -1000, 51749, -1000,
	939, 939, 2491, 1824, -1000, 939, -1000, -1000, -1000, 2841,
	-1000, 42378, 2098, 1763, 97124, 2841, 2841, -1000, -1000, 88019,
	3132, -1000, 2109, 2108, 1406, -1000, -1000, -1000, -1000, -1000,
	-1000, 977, -1000, 3128, 2263, 99288, 2491, -1000, 1964, 2530,
	-1000, 1964, 2598, -1000, 1973, -1000, -1000, -1000, 2800, 3263,
	88019, -1000, 88019, 1710, 1703, 3350, 962, 2101, 1824, 38490,
	2491, 38490, -221, -1000, -1000, 1963, 2491, -1000, -1000, 1960,
	3202, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 865,
	-1000, 2943, -1000, 1072, 2007, 2007, -1000, 852, 2102, -1000,
	-1000, 491, -1000, 490, -1000, 1692, -1000, -1000, -227, -1000,
	-1000, 3349, -1000, 2101, -1000, 2491, -230, 1963, -233, -1000,
	977, 1963, 1738, -1000, -1000, 2040, 38980, 38490, -1000, 3230,
	-1000, -1000, 2327, -1000, 38490, 2637, 38490, 38490, 2059, 2092,
	-1000, -1000, 1963, 1036, 977, 1824, -1000, 977, -1000, -1000,
	-1000, 99288, -1000, -1000, -1000, 99288, -1000, -238, -241, 50365,
	-1000, -1000, -1000, 977, 1824, -1000, 2491, -1000, 1963, 1126,
	-223, 76875, -1000, 2491, 1963, -1000, 489, -244, 1963, 977,
	38490, -1000, 977, -1000, -246, -1000, 1963, -1000,
}
var sqlPgo = [...]int{

	0, 4111, 4110, 4109, 4108, 4107, 4105, 4104, 4102, 4100,
	4099, 4097, 4096, 4095, 4094, 4093, 4092, 4085, 4083, 4082,
	4079, 4078, 4076, 4075, 4074, 4073, 4072, 4070, 4069, 4067,
	4066, 4064, 4063, 4062, 4061, 4060, 4059, 4058, 4057, 4055,
	4052, 4051, 4050, 4046, 4043, 4042, 4041, 4040, 4039, 4034,
	4031, 4028, 35, 4026, 4025, 4024, 4023, 4021, 4020, 4019,
	4018, 4017, 4016, 4015, 4013, 4011, 4010, 4009, 4008, 4005,
	4004, 39, 3998, 239, 3997, 3995, 3993, 3992, 3990, 3989,
	3984, 3979, 3978, 3975, 3973, 3972, 233, 3969, 140, 3967,
	3963, 3960, 3959, 3955, 232, 3949, 3944, 3942, 3941, 244,
	3935, 3934, 3931, 3930, 3929, 3928, 3926, 3924, 3922, 45,
	205, 3921, 82, 3914, 3913, 3910, 3909, 3908, 3907, 3905,
	3904, 3903, 3902, 215, 3901, 231, 3900, 3899, 3898, 3897,
	3895, 3890, 3889, 3888, 3887, 3884, 3881, 3879, 3878, 3877,
	3875, 3872, 3870, 3869, 3866, 3863, 3857, 3855, 3854, 3852,
	3851, 3848, 3847, 3846, 3845, 3844, 240, 160, 3840, 3839,
	230, 229, 3838, 3837, 3835, 3834, 3831, 104, 7, 81,
	3828, 3827, 62, 50, 46, 107, 47, 3826, 17, 203,
	197, 8554, 195, 3825, 3823, 3822, 209, 161, 3821, 196,
	3820, 3817, 3816, 3815, 76, 70, 152, 149, 138, 137,
	326, 3814, 3812, 75, 59, 40, 32, 3810, 3807, 3806,
	2844, 108, 3804, 228, 199, 129, 3802, 3801, 3798, 143,
	3796, 36, 3794, 541, 66, 106, 49, 100, 3789, 120,
	22, 3788, 159, 42, 3785, 127, 89, 69, 8417, 3654,
	3784, 80, 55, 99, 77, 150, 146, 169, 101, 174,
	185, 180, 145, 302, 3782, 211, 3774, 3218, 54, 131,
	3773, 3772, 3771, 61, 167, 85, 3769, 3768, 57, 8,
	4, 1, 147, 12, 94, 18, 3767, 14, 3761, 3759,
	3758, 3756, 25, 144, 3755, 237, 3754, 86, 37, 19,
	3748, 29, 183, 3747, 188, 111, 3743, 3731, 222, 175,
	163, 3729, 74, 191, 3728, 3727, 3725, 3724, 3723, 116,
	24, 102, 3722, 3719, 115, 201, 166, 3718, 38, 3716,
	148, 79, 117, 236, 130, 187, 97, 184, 153, 192,
	3714, 3713, 3712, 162, 3711, 3710, 179, 118, 3709, 3708,
	171, 243, 33, 60, 200, 56, 165, 134, 3704, 170,
	3702, 3696, 3692, 241, 156, 178, 2, 9, 78, 103,
	31, 13, 193, 125, 270, 95, 3688, 4922, 1636, 2215,
	44, 3687, 126, 98, 58, 96, 128, 226, 52, 3686,
	3685, 1322, 3684, 3680, 3679, 3677, 157, 3675, 3671, 3670,
	124, 151, 155, 3668, 83, 72, 10, 109, 217, 246,
	93, 182, 172, 216, 3667, 154, 3666, 67, 122, 3665,
	168, 227, 3664, 3662, 194, 3659, 132, 221, 48, 121,
	3658, 186, 3655, 3652, 3648, 3647, 3646, 3645, 3644, 219,
	190, 3643, 3642, 3635, 119, 164, 3632, 224, 123, 142,
	71, 34, 3630, 73, 2246, 3628, 53, 202, 43, 3627,
	87, 41, 0, 10134, 9174, 6754, 9948, 3624, 3597, 3618,
	3616, 3614, 181, 110, 3613, 3612, 3611, 88, 3609, 65,
	3605, 3604, 51, 3602, 15, 5, 6, 23, 20, 139,
	91, 3601, 3600, 90, 105, 113, 3599, 234, 189, 3598,
	3593, 3589, 3587, 84, 3584, 28, 3583, 26, 3573, 3572,
	30, 16, 21, 3571, 3570, 212, 3569, 207, 3568, 136,
	3567, 3177, 112, 3565, 3563, 223, 64, 3561, 220, 3560,
	3118, 3559, 3554, 11, 3553, 3552, 204, 141, 177, 3551,
	135, 3550, 133, 3549, 3545, 3537, 213, 3536, 3533, 27,
	3531, 3, 3529, 3527, 176, 3011, 3523, 3520, 63, 3517,
	158,
}
var sqlR1 = [...]int{

	0, 1, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	3, 3, 3, 3, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 5, 5, 5, 5, 5, 5, 5, 5,
	5, 5, 11, 11, 7, 7, 7, 8, 8, 8,
	8, 39, 39, 9, 9, 9, 10, 10, 6, 6,
	6, 6, 6, 6, 6, 6, 6, 16, 16, 28,
	28, 17, 17, 30, 30, 18, 18, 31, 31, 515,
	515, 21, 33, 22, 34, 15, 516, 516, 516, 516,
	27, 23, 35, 25, 25, 25, 25, 25, 170, 170,
	170, 170, 20, 20, 29, 29, 197, 197, 196, 196,
	196, 196, 196, 196, 196, 196, 196, 196, 196, 196,
	196, 196, 196, 196, 196, 196, 196, 196, 196, 196,
	514, 514, 199, 199, 198, 193, 193, 517, 517, 200,
	200, 200, 202, 202, 13, 13, 13, 13, 13, 13,
	13, 13, 13, 418, 418, 418, 530, 530, 530, 531,
	531, 532, 532, 532, 532, 532, 41, 41, 509, 509,
	172, 172, 172, 174, 174, 173, 173, 173, 173, 62,
	62, 522, 522, 523, 523, 521, 521, 524, 524, 524,
	171, 171, 171, 108, 108, 108, 109, 109, 110, 110,
	175, 95, 95, 95, 95, 95, 95, 95, 95, 95,
	90, 90, 450, 450, 451, 451, 166, 166, 167, 167,
	167, 167, 168, 168, 169, 169, 169, 55, 43, 43,
	43, 43, 43, 43, 43, 44, 44, 44, 44, 44,
	45, 45, 45, 45, 45, 45, 46, 46, 46, 46,
	46, 46, 53, 53, 53, 53, 157, 157, 56, 56,
	56, 56, 56, 56, 56, 56, 56, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 534, 534, 535,
	535, 536, 536, 537, 537, 537, 537, 537, 537, 537,
	537, 537, 537, 537, 537, 537, 537, 537, 537, 537,
	537, 58, 58, 58, 58, 58, 58, 58, 58, 58,
	58, 58, 58, 58, 58, 58, 58, 58, 58, 68,
	68, 284, 284, 256, 256, 69, 69, 69, 70, 70,
	71, 71, 57, 57, 507, 507, 299, 299, 409, 409,
	73, 73, 319, 319, 74, 74, 74, 74, 74, 74,
	75, 75, 75, 75, 75, 75, 75, 76, 76, 76,
	76, 76, 76, 76, 76, 76, 76, 76, 76, 76,
	76, 83, 83, 83, 84, 84, 84, 81, 81, 81,
	78, 78, 78, 77, 77, 77, 82, 82, 82, 247,
	247, 80, 80, 80, 249, 249, 79, 79, 79, 300,
	300, 85, 85, 85, 85, 257, 86, 86, 86, 86,
	86, 86, 86, 86, 88, 88, 88, 88, 88, 88,
	88, 88, 88, 88, 88, 88, 88, 88, 88, 88,
	88, 88, 88, 88, 88, 88, 88, 88, 88, 88,
	88, 88, 88, 88, 88, 89, 89, 89, 89, 89,
	89, 89, 89, 89, 89, 89, 89, 411, 411, 87,
	87, 87, 379, 379, 91, 91, 91, 334, 334, 92,
	92, 92, 92, 92, 93, 93, 93, 93, 111, 111,
	111, 111, 511, 511, 292, 292, 213, 213, 213, 213,
	101, 101, 101, 101, 102, 102, 102, 103, 103, 162,
	162, 117, 117, 117, 117, 117, 116, 116, 116, 116,
	116, 116, 47, 47, 47, 48, 48, 49, 49, 50,
	50, 51, 51, 52, 52, 52, 52, 52, 119, 119,
	527, 527, 121, 118, 118, 118, 120, 120, 120, 120,
	122, 123, 123, 123, 123, 123, 123, 123, 123, 124,
	124, 443, 443, 308, 308, 441, 441, 459, 459, 442,
	442, 261, 261, 261, 261, 261, 262, 262, 262, 449,
	449, 449, 449, 449, 449, 125, 125, 125, 125, 125,
	125, 125, 125, 125, 125, 125, 125, 125, 125, 125,
	125, 125, 125, 125, 125, 125, 125, 125, 125, 125,
	125, 125, 125, 125, 125, 125, 125, 125, 125, 125,
	125, 125, 125, 125, 125, 125, 125, 125, 125, 125,
	125, 125, 125, 125, 125, 125, 125, 125, 125, 125,
	125, 125, 125, 163, 163, 164, 165, 165, 165, 165,
	144, 144, 144, 156, 156, 156, 156, 156, 156, 156,
	147, 147, 147, 134, 134, 126, 126, 126, 126, 126,
	130, 130, 130, 130, 130, 130, 130, 130, 127, 127,
	136, 136, 136, 136, 136, 131, 131, 133, 133, 135,
	135, 135, 135, 135, 135, 135, 135, 135, 128, 128,
	128, 128, 138, 138, 138, 138, 341, 341, 341, 137,
	137, 137, 137, 137, 137, 137, 137, 137, 137, 155,
	155, 155, 155, 155, 155, 525, 525, 526, 526, 151,
	151, 151, 151, 151, 151, 393, 393, 145, 145, 145,
	145, 150, 150, 150, 150, 324, 324, 142, 142, 142,
	143, 143, 143, 148, 148, 149, 146, 146, 152, 152,
	152, 152, 129, 129, 129, 538, 538, 538, 153, 153,
	141, 141, 154, 154, 154, 154, 154, 154, 154, 154,
	140, 140, 140, 139, 139, 139, 139, 132, 508, 508,
	505, 505, 505, 505, 505, 505, 505, 505, 506, 506,
	510, 510, 96, 96, 96, 96, 96, 104, 104, 104,
	104, 104, 97, 97, 97, 97, 97, 99, 99, 98,
	98, 98, 98, 63, 63, 63, 14, 14, 14, 64,
	64, 178, 178, 178, 178, 269, 269, 269, 269, 176,
	176, 177, 177, 65, 65, 539, 539, 539, 518, 518,
	518, 519, 519, 519, 519, 519, 519, 263, 263, 264,
	264, 359, 359, 359, 359, 359, 267, 267, 267, 268,
	268, 268, 268, 268, 268, 268, 268, 268, 270, 270,
	201, 201, 201, 273, 274, 274, 271, 271, 272, 272,
	272, 276, 276, 275, 278, 278, 277, 358, 468, 468,
	470, 470, 470, 470, 470, 470, 470, 472, 472, 472,
	472, 472, 472, 472, 472, 472, 472, 472, 540, 540,
	466, 466, 466, 467, 462, 462, 463, 463, 463, 463,
	463, 265, 265, 266, 266, 266, 266, 464, 465, 290,
	290, 396, 469, 469, 471, 471, 473, 541, 541, 541,
	541, 541, 541, 542, 542, 542, 357, 357, 356, 356,
	282, 282, 474, 474, 474, 474, 475, 475, 475, 475,
	475, 478, 477, 476, 476, 476, 476, 476, 67, 67,
	67, 321, 321, 320, 320, 322, 322, 322, 322, 322,
	322, 322, 322, 322, 322, 322, 322, 322, 322, 322,
	159, 159, 216, 216, 61, 61, 61, 12, 12, 12,
	520, 520, 520, 66, 66, 66, 66, 215, 215, 215,
	215, 215, 215, 513, 513, 512, 512, 217, 217, 544,
	544, 72, 72, 72, 72, 72, 72, 72, 412, 412,
	413, 413, 60, 60, 60, 60, 60, 342, 342, 340,
	340, 339, 339, 289, 289, 395, 221, 221, 194, 194,
	194, 26, 19, 19, 24, 24, 37, 37, 40, 40,
	36, 36, 38, 38, 32, 32, 528, 528, 529, 529,
	100, 100, 105, 105, 105, 105, 105, 106, 106, 106,
	106, 107, 107, 107, 107, 115, 115, 158, 158, 158,
	158, 158, 158, 158, 42, 42, 42, 42, 54, 54,
	54, 54, 113, 546, 546, 546, 114, 114, 114, 545,
	545, 214, 214, 353, 353, 354, 354, 547, 547, 355,
	355, 355, 355, 208, 207, 209, 209, 59, 59, 59,
	203, 203, 204, 204, 205, 205, 206, 206, 548, 548,
	94, 94, 94, 161, 161, 255, 255, 255, 349, 349,
	349, 283, 283, 227, 227, 352, 352, 350, 350, 350,
	350, 318, 318, 318, 160, 160, 297, 297, 310, 310,
	311, 311, 406, 406, 312, 112, 112, 181, 181, 179,
	179, 179, 179, 179, 179, 179, 179, 186, 186, 187,
	187, 188, 188, 189, 190, 190, 190, 190, 301, 301,
	191, 191, 191, 180, 180, 180, 182, 182, 182, 182,
	182, 182, 182, 185, 185, 185, 185, 192, 192, 192,
	184, 184, 485, 485, 485, 487, 487, 489, 489, 488,
	488, 484, 484, 486, 486, 543, 543, 323, 323, 323,
	280, 281, 279, 279, 287, 287, 285, 286, 286, 288,
	288, 394, 394, 394, 195, 195, 195, 315, 315, 315,
	315, 316, 316, 345, 345, 343, 343, 343, 343, 344,
	344, 346, 346, 346, 347, 347, 348, 348, 314, 314,
	375, 375, 183, 183, 183, 294, 294, 294, 295, 295,
	365, 365, 365, 365, 365, 365, 366, 366, 364, 364,
	364, 364, 397, 397, 397, 397, 397, 397, 397, 397,
	397, 398, 399, 399, 296, 296, 400, 351, 351, 503,
	503, 503, 504, 504, 392, 392, 401, 401, 401, 401,
	401, 401, 390, 390, 391, 391, 407, 408, 408, 327,
	327, 327, 327, 325, 325, 328, 328, 328, 328, 326,
	326, 402, 402, 402, 402, 317, 317, 403, 403, 403,
	403, 404, 360, 361, 361, 414, 414, 414, 414, 416,
	293, 293, 293, 293, 293, 461, 460, 460, 415, 415,
	415, 415, 415, 415, 415, 415, 415, 430, 430, 430,
	430, 430, 430, 430, 430, 431, 431, 431, 431, 431,
	431, 417, 417, 417, 417, 417, 421, 421, 421, 420,
	420, 420, 420, 420, 420, 420, 420, 420, 420, 420,
	422, 422, 427, 427, 428, 428, 428, 423, 424, 429,
	429, 429, 429, 549, 549, 433, 433, 425, 425, 425,
	425, 425, 425, 425, 425, 425, 419, 419, 419, 426,
	426, 426, 336, 336, 336, 336, 336, 336, 336, 336,
	336, 336, 336, 336, 336, 335, 335, 337, 337, 367,
	367, 367, 367, 367, 367, 367, 367, 367, 367, 367,
	367, 367, 367, 367, 367, 367, 367, 367, 367, 367,
	367, 367, 367, 367, 367, 367, 367, 367, 367, 367,
	367, 367, 367, 367, 367, 367, 367, 367, 367, 367,
	367, 367, 367, 367, 367, 367, 367, 367, 367, 367,
	367, 367, 367, 367, 367, 367, 367, 367, 367, 367,
	367, 367, 367, 367, 367, 367, 367, 367, 367, 367,
	367, 367, 367, 367, 367, 367, 367, 367, 367, 367,
	367, 367, 367, 367, 367, 367, 367, 368, 368, 368,
	368, 368, 368, 368, 368, 368, 368, 368, 368, 368,
	368, 368, 368, 368, 368, 368, 368, 368, 368, 368,
	368, 368, 368, 368, 368, 368, 369, 369, 369, 369,
	370, 370, 370, 370, 370, 370, 370, 370, 370, 370,
	370, 370, 370, 370, 370, 370, 370, 370, 370, 370,
	370, 370, 370, 370, 370, 479, 479, 479, 479, 479,
	479, 479, 479, 371, 371, 482, 482, 483, 483, 480,
	480, 480, 480, 480, 480, 480, 480, 480, 480, 480,
	480, 480, 480, 480, 480, 480, 480, 480, 480, 480,
	480, 480, 481, 481, 481, 481, 481, 481, 481, 481,
	481, 481, 481, 481, 481, 481, 481, 481, 481, 481,
	481, 481, 481, 481, 481, 481, 481, 481, 481, 481,
	481, 481, 481, 481, 481, 481, 481, 481, 490, 490,
	491, 491, 493, 493, 494, 494, 495, 496, 496, 496,
	497, 498, 498, 492, 492, 499, 499, 499, 499, 500,
	500, 501, 501, 501, 501, 501, 502, 502, 502, 502,
	502, 381, 381, 382, 382, 388, 388, 388, 260, 260,
	260, 260, 260, 260, 260, 260, 260, 260, 260, 260,
	260, 260, 260, 260, 218, 218, 218, 218, 218, 306,
	306, 304, 304, 304, 307, 307, 305, 305, 303, 303,
	302, 302, 378, 378, 376, 376, 380, 380, 329, 329,
	432, 432, 432, 432, 432, 432, 432, 432, 330, 330,
	330, 338, 331, 331, 332, 332, 332, 332, 332, 372,
	373, 333, 333, 333, 374, 374, 383, 387, 387, 386,
	385, 385, 384, 384, 362, 362, 363, 363, 313, 313,
	550, 550, 309, 309, 405, 405, 405, 405, 259, 259,
	298, 298, 258, 258, 250, 250, 251, 251, 251, 251,
	291, 291, 389, 389, 434, 434, 435, 435, 436, 436,
	437, 437, 438, 439, 440, 377, 377, 237, 236, 224,
	225, 235, 234, 233, 223, 226, 230, 231, 232, 228,
	229, 243, 242, 241, 248, 239, 240, 410, 222, 252,
	252, 253, 253, 253, 254, 254, 254, 254, 219, 219,
	220, 220, 244, 244, 245, 246, 246, 238, 238, 238,
	210, 210, 210, 211, 211, 212, 212, 448, 448, 445,
	445, 445, 446, 446, 446, 447, 447, 447, 447, 444,
	444, 444, 444, 444, 452, 452, 452, 452, 452, 452,
	452, 452, 452, 452, 452, 452, 452, 452, 452, 452,
	452, 452, 452, 452, 452, 452, 452, 452, 452, 452,
	452, 452, 452, 452, 452, 452, 452, 452, 452, 452,
	452, 452, 452, 452, 452, 452, 452, 452, 452, 452,
	452, 452, 452, 452, 452, 452, 452, 452, 452, 452,
	452, 452, 452, 452, 452, 452, 452, 452, 452, 452,
	452, 452, 452, 452, 452, 452, 452, 452, 452, 452,
	452, 452, 452, 452, 452, 452, 452, 452, 452, 452,
	452, 452, 452, 452, 452, 452, 452, 452, 452, 452,
	452, 452, 452, 452, 452, 452, 452, 452, 452, 452,
	452, 452, 452, 452, 452, 452, 452, 452, 452, 452,
	452, 452, 452, 452, 452, 452, 452, 452, 452, 452,
	452, 452, 452, 452, 452, 452, 452, 452, 452, 452,
	452, 452, 452, 452, 452, 452, 452, 452, 452, 452,
	452, 452, 452, 452, 452, 452, 452, 452, 452, 452,
	452, 452, 452, 452, 452, 452, 452, 452, 452, 452,
	452, 452, 452, 452, 452, 452, 452, 452, 452, 452,
	452, 452, 452, 452, 452, 452, 452, 452, 452, 452,
	452, 452, 452, 452, 452, 452, 452, 452, 452, 452,
	452, 452, 452, 452, 452, 452, 452, 452, 452, 452,
	452, 452, 452, 452, 452, 452, 452, 452, 452, 452,
	452, 452, 452, 452, 452, 452, 452, 452, 452, 452,
	452, 452, 452, 452, 452, 452, 452, 452, 452, 452,
	452, 452, 452, 452, 452, 452, 452, 452, 452, 452,
	452, 452, 452, 452, 452, 452, 452, 452, 452, 452,
	452, 452, 452, 452, 452, 452, 452, 452, 452, 452,
	452, 452, 452, 452, 452, 452, 456, 456, 456, 456,
	456, 456, 456, 456, 456, 456, 456, 456, 456, 456,
	456, 456, 456, 456, 456, 456, 456, 456, 456, 456,
	456, 456, 456, 456, 456, 456, 456, 456, 456, 456,
	456, 456, 456, 456, 456, 456, 456, 456, 456, 456,
	456, 456, 456, 456, 456, 456, 456, 453, 453, 454,
	454, 454, 454, 454, 454, 454, 454, 454, 454, 454,
	454, 454, 454, 454, 454, 454, 455, 457, 457, 457,
	457, 457, 457, 457, 457, 457, 457, 457, 457, 457,
	457, 457, 457, 457, 457, 457, 457, 457, 457, 457,
	457, 457, 457, 457, 457, 457, 457, 457, 457, 457,
	457, 457, 457, 457, 457, 457, 457, 457, 457, 457,
	457, 457, 457, 457, 457, 457, 457, 457, 457, 457,
	457, 457, 457, 457, 457, 457, 457, 457, 457, 457,
	457, 457, 457, 457, 457, 457, 457, 457, 457, 457,
	457, 457, 457, 457, 457, 457, 457, 458, 458,
}
var sqlR2 = [...]int{

	0, 1, 1, 1, 1, 2, 1, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 1, 1, 1, 1, 0,
	1, 1, 2, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 1, 3, 1, 1, 3, 1, 1, 1,
	3, 4, 6, 1, 1, 3, 1, 3, 1, 1,
	1, 1, 1, 1, 1, 1, 3, 4, 6, 4,
	6, 6, 9, 6, 9, 6, 5, 6, 5, 1,
	1, 5, 5, 6, 6, 4, 4, 4, 4, 3,
	4, 4, 4, 7, 7, 9, 8, 9, 5, 3,
	5, 7, 4, 12, 4, 12, 1, 3, 5, 5,
	2, 5, 3, 6, 4, 6, 5, 6, 6, 4,
	8, 3, 4, 10, 3, 6, 4, 3, 1, 3,
	2, 1, 1, 3, 1, 3, 2, 2, 0, 1,
	1, 0, 2, 0, 7, 10, 8, 6, 6, 6,
	9, 4, 3, 2, 2, 0, 1, 1, 1, 1,
	3, 6, 4, 6, 7, 9, 7, 2, 0, 1,
	2, 5, 0, 1, 3, 3, 1, 1, 3, 12,
	3, 1, 0, 1, 1, 2, 2, 3, 3, 0,
	5, 7, 0, 5, 6, 2, 1, 3, 1, 3,
	1, 6, 4, 9, 7, 12, 12, 12, 9, 2,
	7, 2, 1, 1, 1, 3, 3, 0, 3, 1,
	3, 1, 1, 3, 2, 5, 0, 6, 1, 2,
	1, 2, 1, 2, 2, 3, 3, 3, 3, 3,
	3, 5, 3, 3, 5, 3, 3, 5, 3, 3,
	5, 3, 6, 6, 6, 6, 1, 1, 1, 2,
	1, 1, 2, 1, 2, 1, 2, 3, 3, 4,
	3, 4, 7, 4, 4, 4, 3, 5, 7, 4,
	3, 3, 4, 3, 3, 3, 3, 2, 0, 1,
	0, 1, 0, 3, 3, 3, 3, 3, 6, 4,
	4, 4, 3, 5, 3, 3, 3, 3, 3, 3,
	3, 1, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 4, 1, 2, 1, 2, 1, 2, 7,
	3, 2, 0, 1, 3, 3, 1, 0, 1, 2,
	2, 1, 6, 5, 1, 2, 1, 3, 2, 0,
	9, 3, 2, 0, 2, 2, 2, 2, 2, 2,
	1, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 4, 6, 3, 4, 6, 3, 4, 6, 3,
	5, 7, 3, 4, 6, 3, 4, 6, 3, 1,
	3, 4, 6, 3, 1, 3, 3, 5, 3, 1,
	3, 2, 2, 2, 2, 1, 2, 2, 5, 3,
	3, 6, 6, 3, 1, 1, 2, 1, 1, 1,
	2, 1, 1, 2, 1, 2, 1, 2, 1, 1,
	1, 2, 1, 1, 2, 1, 1, 1, 1, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 1, 1, 2, 1, 2, 1, 3, 5,
	7, 2, 3, 0, 3, 5, 2, 3, 0, 2,
	3, 2, 3, 2, 6, 4, 7, 2, 6, 4,
	7, 2, 1, 1, 1, 3, 1, 1, 1, 1,
	1, 2, 1, 2, 2, 3, 2, 4, 3, 2,
	2, 1, 2, 1, 3, 3, 1, 2, 1, 2,
	1, 2, 1, 1, 3, 5, 4, 6, 4, 3,
	0, 1, 3, 2, 4, 2, 4, 1, 6, 3,
	1, 1, 5, 3, 2, 6, 3, 3, 4, 4,
	3, 1, 3, 2, 3, 3, 1, 3, 1, 2,
	1, 1, 2, 2, 3, 1, 1, 1, 1, 1,
	3, 2, 2, 1, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 2, 2, 1, 3, 3, 3, 3,
	2, 3, 3, 1, 1, 1, 1, 1, 2, 2,
	5, 7, 3, 3, 3, 4, 5, 5, 5, 3,
	4, 4, 3, 4, 4, 3, 4, 4, 5, 3,
	5, 5, 5, 7, 3, 3, 3, 4, 3, 5,
	3, 6, 5, 6, 3, 5, 6, 3, 4, 3,
	4, 3, 3, 4, 4, 5, 0, 1, 1, 3,
	2, 4, 3, 3, 5, 4, 3, 5, 3, 3,
	4, 4, 5, 3, 3, 1, 1, 0, 2, 5,
	4, 6, 4, 6, 4, 1, 0, 3, 4, 4,
	5, 7, 5, 3, 3, 2, 0, 4, 2, 3,
	4, 2, 3, 3, 3, 4, 3, 3, 4, 3,
	3, 3, 3, 4, 3, 1, 1, 1, 2, 3,
	2, 3, 6, 6, 7, 9, 7, 9, 3, 4,
	10, 10, 3, 5, 5, 5, 3, 5, 2, 0,
	1, 1, 1, 1, 3, 2, 2, 2, 2, 1,
	2, 0, 1, 2, 1, 2, 2, 1, 2, 1,
	2, 2, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 6, 3, 6, 6, 3, 11,
	14, 0, 2, 4, 3, 0, 4, 5, 4, 3,
	3, 1, 3, 10, 13, 0, 2, 3, 1, 1,
	0, 1, 2, 2, 2, 2, 1, 1, 0, 1,
	3, 1, 1, 1, 1, 3, 3, 3, 0, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 8, 0,
	1, 1, 0, 2, 1, 0, 1, 0, 9, 9,
	3, 1, 3, 7, 1, 3, 11, 3, 2, 0,
	3, 1, 2, 2, 3, 2, 6, 2, 1, 1,
	2, 8, 4, 2, 5, 5, 5, 2, 1, 3,
	10, 11, 7, 5, 3, 1, 5, 9, 7, 11,
	3, 3, 0, 2, 4, 3, 3, 1, 5, 1,
	3, 1, 2, 0, 1, 2, 2, 0, 1, 3,
	3, 2, 2, 1, 1, 1, 4, 0, 6, 0,
	3, 0, 2, 2, 2, 0, 1, 1, 2, 2,
	0, 3, 3, 2, 1, 1, 2, 2, 5, 8,
	4, 1, 0, 1, 2, 2, 1, 2, 3, 3,
	2, 2, 3, 2, 2, 2, 2, 2, 3, 1,
	4, 2, 2, 2, 4, 7, 3, 4, 6, 3,
	1, 1, 1, 8, 10, 11, 5, 1, 1, 1,
	1, 1, 1, 1, 2, 2, 0, 3, 3, 0,
	1, 8, 3, 6, 6, 5, 3, 4, 1, 0,
	1, 3, 16, 19, 15, 18, 4, 2, 0, 1,
	0, 1, 0, 1, 3, 3, 2, 0, 1, 1,
	0, 6, 6, 8, 6, 8, 6, 8, 6, 8,
	6, 8, 6, 8, 6, 8, 1, 0, 2, 0,
	2, 2, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 2, 2, 1, 2, 1,
	2, 1, 2, 1, 3, 2, 3, 2, 2, 2,
	2, 2, 2, 1, 1, 0, 2, 4, 2, 1,
	0, 2, 1, 1, 0, 1, 3, 1, 0, 1,
	1, 1, 1, 2, 3, 2, 2, 8, 11, 3,
	3, 0, 3, 0, 3, 0, 3, 0, 1, 0,
	6, 7, 3, 6, 3, 1, 3, 1, 1, 4,
	2, 1, 3, 1, 3, 8, 5, 3, 4, 3,
	0, 2, 2, 0, 10, 3, 2, 0, 1, 3,
	1, 1, 3, 3, 5, 1, 1, 3, 3, 1,
	2, 4, 4, 2, 3, 5, 5, 1, 3, 1,
	0, 1, 2, 3, 2, 4, 2, 3, 0, 2,
	0, 2, 1, 2, 1, 1, 1, 2, 1, 2,
	1, 2, 1, 8, 8, 8, 2, 4, 4, 4,
	2, 2, 2, 2, 3, 1, 3, 1, 2, 6,
	7, 1, 0, 1, 0, 1, 0, 1, 1, 0,
	1, 5, 1, 0, 1, 0, 3, 3, 5, 1,
	3, 3, 4, 5, 2, 2, 0, 2, 2, 1,
	1, 1, 0, 1, 0, 2, 2, 5, 4, 2,
	3, 1, 1, 1, 1, 1, 1, 1, 3, 0,
	2, 0, 4, 2, 5, 3, 2, 0, 1, 3,
	3, 5, 1, 1, 1, 1, 1, 3, 2, 4,
	4, 0, 4, 4, 3, 4, 1, 5, 3, 4,
	5, 5, 1, 5, 1, 3, 2, 0, 3, 0,
	2, 3, 1, 3, 2, 0, 3, 5, 6, 4,
	6, 4, 3, 2, 1, 0, 5, 1, 0, 2,
	2, 2, 1, 1, 0, 1, 1, 1, 0, 4,
	2, 1, 2, 2, 4, 1, 3, 1, 2, 3,
	2, 2, 2, 1, 0, 2, 5, 7, 2, 1,
	2, 4, 3, 5, 0, 1, 3, 5, 1, 2,
	1, 1, 1, 1, 1, 2, 2, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 4, 4, 6,
	6, 1, 1, 1, 1, 1, 3, 5, 0, 1,
	1, 1, 1, 1, 2, 2, 2, 2, 2, 1,
	3, 0, 5, 4, 1, 2, 1, 4, 1, 1,
	2, 1, 1, 1, 1, 1, 0, 1, 2, 5,
	1, 4, 2, 5, 1, 4, 3, 3, 0, 1,
	2, 4, 1, 1, 1, 1, 1, 1, 3, 3,
	3, 3, 3, 3, 3, 1, 0, 1, 4, 1,
	3, 3, 3, 5, 2, 2, 2, 2, 2, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 2, 2, 3, 5, 4, 6, 3,
	5, 4, 6, 4, 6, 5, 7, 3, 3, 3,
	3, 3, 4, 3, 2, 4, 2, 3, 3, 4,
	3, 4, 3, 4, 5, 6, 6, 7, 6, 7,
	6, 7, 3, 4, 4, 1, 3, 1, 3, 3,
	2, 2, 2, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 5, 6, 6, 7, 1, 2, 1, 2,
	1, 1, 1, 1, 1, 6, 1, 1, 1, 1,
	1, 1, 2, 1, 5, 5, 6, 3, 1, 1,
	1, 2, 2, 2, 4, 3, 5, 6, 8, 6,
	5, 4, 3, 2, 2, 4, 1, 1, 1, 5,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 6, 6, 8, 8, 6, 4, 6, 6, 6,
	4, 1, 3, 3, 3, 3, 3, 4, 3, 3,
	4, 3, 3, 4, 3, 3, 4, 3, 3, 3,
	4, 3, 4, 3, 4, 3, 4, 4, 3, 6,
	5, 5, 5, 4, 4, 3, 4, 3, 5, 0,
	5, 0, 2, 0, 1, 3, 3, 2, 2, 0,
	6, 1, 0, 3, 0, 3, 3, 3, 0, 1,
	4, 2, 2, 2, 2, 2, 3, 2, 2, 3,
	0, 4, 1, 1, 5, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 2, 1, 2, 2,
	3, 1, 2, 3, 2, 3, 2, 3, 1, 0,
	1, 3, 1, 3, 3, 3, 1, 3, 3, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 4, 3,
	1, 2, 3, 0, 3, 3, 2, 2, 1, 2,
	2, 3, 2, 1, 1, 1, 5, 1, 2, 4,
	2, 0, 1, 0, 3, 5, 1, 0, 1, 2,
	1, 0, 1, 3, 3, 2, 1, 1, 1, 3,
	1, 3, 3, 1, 1, 1, 1, 5, 3, 1,
	1, 3, 1, 1, 1, 1, 2, 2, 1, 1,
	2, 2, 1, 1, 1, 3, 5, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 5, 7, 1, 7, 5, 3, 1, 1,
	1, 1, 1, 1, 1, 3, 5, 1, 1, 1,
	1, 1, 1, 1, 0, 3, 0, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1,
}
var sqlChk = [...]int{

	-1000, -1, -2, 504, -88, -85, -55, -53, -91, -92,
	-74, -93, -87, -111, -115, -100, -117, -158, -163, -164,
	-165, -3, -41, -43, -56, -73, -75, -86, -95, -94,
	-96, -101, -108, -104, -90, -47, -112, -116, -125, -159,
	-160, -161, 31, 30, 90, 74, 137, 114, 121, 175,
	322, 357, 368, 349, -120, -121, 385, -42, -54, -114,
	-113, 67, 115, 344, -4, -12, 28, 44, -44, -45,
	-46, 57, -61, -58, -68, -62, -533, 92, -486, -76,
	-79, -107, -537, 126, 144, 193, -97, -98, 311, -102,
	-103, 351, -105, -106, 353, 145, -49, -48, 139, -179,
	-181, -118, -119, -162, -126, -127, -128, -129, -130, -131,
	-132, -133, -134, -135, -136, -137, -155, -138, -139, -140,
	-141, -146, -142, -143, -144, -145, -147, -148, -150, -151,
	-152, -153, -154, 389, -149, 439, 46, 399, 76, 130,
	361, 21, -5, -6, -7, -8, -9, -10, -11, -14,
	-13, -57, -59, -60, -63, -64, -65, -72, -66, -67,
	-485, -77, -78, -81, -83, -84, -80, -82, 350, -182,
	-180, 501, 453, -16, -21, -22, -17, -18, -20, -23,
	-19, -24, -28, -33, -34, -30, -31, -29, -32, -35,
	-36, -37, -38, -39, -40, -26, -27, -15, -25, 471,
	479, -185, -183, -184, -192, 377, 461, 415, 504, 504,
	504, 504, 504, 504, 504, 504, 504, 504, 504, 504,
	504, 504, 504, 504, 504, 504, 504, -257, 2, -239,
	-244, -245, -246, -238, -210, -455, -458, 4, -452, -456,
	150, 202, 276, 21, 22, 23, 24, 25, 26, 28,
	29, 40, 41, 43, 42, 44, 45, 46, 51, 54,
	55, 56, 57, 58, 62, 67, 68, 73, 74, 75,
	76, 77, 78, 79, 85, 82, 83, 84, 87, 89,
	90, 91, 93, 95, 96, 104, 105, 106, 107, 109,
	114, 115, 118, 113, 117, 120, 121, 124, 125, 126,
	128, 129, 131, 132, 134, 135, 137, 138, 139, 142,
	140, 422, 141, 143, 144, 145, 146, 156, 157, 158,
	163, 165, 169, 170, 173, 174, 176, 180, 182, 183,
	184, 185, 186, 192, 193, 195, 196, 197, 198, 203,
	204, 208, 205, 214, 218, 219, 220, 222, 226, 227,
	228, 229, 230, 231, 234, 233, 236, 239, 240, 243,
	244, 245, 248, 249, 250, 251, 253, 254, 257, 255,
	258, 256, 260, 261, 262, 259, 265, 263, 267, 268,
	269, 274, 272, 270, 271, 278, 281, 190, 283, 284,
	287, 305, 291, 292, 293, 296, 297, 300, 303, 304,
	306, 307, 308, 309, 310, 311, 312, 313, 315, 316,
	320, 322, 323, 325, 327, 328, 329, 330, 331, 332,
	333, 336, 335, 337, 344, 349, 346, 347, 348, 350,
	351, 352, 353, 355, 356, 357, 359, 360, 361, 362,
	364, 366, 367, 370, 371, 386, 387, 401, 368, 369,
	372, 373, 374, 375, 376, 380, 378, 379, 381, 382,
	383, 385, 388, 389, 391, 392, 395, 397, 398, 399,
	400, 402, 405, 406, 407, 408, 403, 414, 411, 412,
	416, 417, 418, 419, 420, 421, 423, 425, 433, 434,
	436, 439, 440, 441, 431, 443, 444, 447, 448, 449,
	452, 450, 451, 453, 455, 458, 459, 460, 466, 465,
	472, 473, 475, 476, 477, 35, 47, 48, 50, 52,
	63, 64, 65, 69, 110, 111, 136, 147, 148, 159,
	171, 172, 177, 179, 187, 188, 189, 209, 210, 212,
	216, 237, 280, 282, 298, 302, 317, 318, 319, 321,
	334, 363, 393, 404, 409, 426, 427, 428, 429, 435,
	437, 461, 462, 463, 467, 474, -257, 2, -239, 289,
	-232, 2, -210, -210, 322, 27, 2, 27, 316, 379,
	417, 419, 2, -511, -292, 2, 27, -213, -210, 92,
	175, 377, -232, 2, -511, -292, 24, 2, -210, 2,
	-214, 2, 368, -210, 504, 87, 245, 68, 363, 382,
	-123, 434, -122, 426, 372, -124, -443, 2, 265, -210,
	504, 504, 504, 27, -222, -210, 415, 202, 106, 412,
	504, 2, 415, 308, 465, 378, 106, 331, 202, 441,
	372, -520, 359, 178, 454, -509, 2, -505, 4, -456,
	-452, -251, -250, 415, 420, 106, -246, -238, 494, -245,
	504, 504, 504, 2, 219, 220, 330, 329, 382, 383,
	504, 504, 504, 370, 2, 26, 60, 86, 89, 112,
	146, 166, 169, 294, -534, 254, 305, 328, 381, 414,
	423, 436, -519, 400, 62, 372, -518, -520, 441, 124,
	-339, 106, 245, 174, 448, 419, 417, 446, 118, 208,
	451, 450, 504, 504, 26, 60, 71, 89, 124, 146,
	166, 169, -536, 305, 328, 366, 381, 414, 423, 436,
	2, 465, 378, 415, 202, 106, 441, 372, -520, 370,
	371, 326, -88, 2, 501, 31, 30, 385, -175, 415,
	213, 2, -210, 504, 504, 2, 219, 220, 370, 371,
	504, 504, 167, -505, 2, 504, 504, 2, 219, 220,
	370, 371, 213, 2, 62, 374, 504, 504, 504, 504,
	504, 504, 504, 504, 504, 504, 504, 504, 504, 504,
	504, 504, 504, 504, 504, 504, 504, 504, 504, 504,
	504, 504, 504, 504, 504, 2, -156, 382, 400, 184,
	44, 68, 27, 327, 73, 309, 107, 176, 202, 203,
	227, 86, 87, -341, 43, 220, 219, 371, -525, 370,
	-393, 416, 373, 379, 411, 231, 368, 434, 92, 455,
	360, 477, 331, 332, 140, 4, 106, 265, 384, 426,
	245, 367, 312, 78, 504, -543, 2, 415, -545, 2,
	434, 434, 2, -545, 2, -545, 2, -545, 2, -546,
	434, 474, 504, 504, 504, 504, 504, 504, 504, 504,
	504, 504, 504, 504, 504, 504, 504, 504, 504, -180,
	-182, -181, 504, 504, 504, 504, 504, 504, 504, -156,
	382, 2, 68, 27, -285, -287, 445, 211, 133, 295,
	-179, -181, 2, -485, -441, 2, -367, -459, -369, 492,
	493, 485, 413, 61, 275, 478, -381, 112, 446, 289,
	-458, -370, -383, 136, 363, -307, 8, 9, 5, 6,
	7, -219, -371, -377, 438, 149, 279, -254, 505, 10,
	501, -482, -181, -382, 36, 179, 59, -445, -253, -220,
	-417, 212, -252, -238, -479, -480, 4, -452, -453, -446,
	-420, -428, -424, -425, -431, -210, -455, 71, 98, 99,
	97, 102, 101, 247, 246, 103, 100, 384, 454, 60,
	35, 187, 188, 216, 280, 189, 69, -481, 125, -454,
	209, 210, 393, 48, 334, 159, 111, 110, 282, 52,
	50, 462, -429, 108, 426, 427, 428, 429, 171, 172,
	147, 148, 302, 319, 409, 435, 437, 177, 237, 94,
	168, 207, 191, 215, 217, 221, 238, 241, 266, 273,
	277, 299, 301, 358, 390, -549, 463, 404, 63, 64,
	-487, 335, -488, -232, -487, 504, 504, 506, 504, -279,
	-280, -281, 2, 27, 122, 501, 2, -397, 2, -398,
	-402, -181, 232, -401, 501, -399, 499, -239, 290, -483,
	364, -479, -480, -219, -238, -253, 4, -452, -454, 503,
	-282, 501, 106, 415, 72, 202, -334, 501, -210, 27,
	289, 430, 506, -379, 501, 289, 167, 292, -210, 2,
	2, 386, 2, 501, -123, 65, 434, 42, 382, -354,
	2, -355, -207, -208, -209, -407, 218, 325, 333, 480,
	477, -441, -527, 167, 484, 430, -441, -308, 503, 2,
	2, 2, 2, 2, -402, 187, -239, 2, -236, -444,
	4, -452, -456, -453, -457, -455, 27, 30, 31, 32,
	34, 36, 37, 38, 39, 53, 59, 60, 66, 70,
	72, 81, 86, 92, 97, 98, 100, 99, 101, 102,
	103, 112, 116, 119, 122, 123, 127, 130, 133, 149,
	151, 164, 166, 167, 175, 178, 181, 194, 206, 211,
	213, 232, 235, 242, 246, 247, 275, 279, 285, 289,
	290, 294, 295, 314, 324, 338, 354, 377, 384, 396,
	410, 415, 424, 430, 432, 438, 445, 446, 454, 456,
	464, 468, 469, 470, 471, -458, 71, 2, -402, 187,
	2, -241, 187, -402, -244, 2, -223, -210, 2, -235,
	-444, 2, -258, 187, -239, -240, -244, -242, 2, -244,
	-248, 2, -210, -450, 187, 2, -448, 10, -447, 5,
	4, -452, -456, -453, 430, 506, -298, -250, -251, -440,
	8, -291, -210, 503, -367, 2, -112, -99, 2, 164,
	-367, 187, 2, -112, 187, 2, -367, 187, 2, -112,
	187, 2, -522, 2, -450, 2, 2, 436, 2, 89,
	187, -210, 415, 105, 2, 348, -535, 366, 440, 465,
	2, 2, 2, 2, 2, 2, 415, -228, 2, -210,
	164, -248, 187, 2, 378, -544, 335, -450, 187, 2,
	-242, 2, -242, 202, 214, -223, 187, 2, 419, 417,
	419, 417, 167, 2, 213, 2, 213, 2, -403, 2,
	-404, -398, -239, 499, 2, 2, 2, 2, 2, 187,
	-210, 415, 105, 2, 230, 2, 2, 2, 2, 2,
	2, 2, -300, 187, 2, -239, -300, 187, 2, -300,
	187, 2, -340, 2, 81, -223, 187, 2, -247, 187,
	2, -242, -249, 187, 2, -248, -451, 187, 2, -450,
	-367, 2, -112, 2, -411, 2, -410, -447, 461, -88,
	501, -88, 501, 382, 501, -450, -239, -239, -367, 2,
	-112, -99, 2, -367, 2, -112, 2, -110, -109, -450,
	501, 167, -367, 2, -112, -99, 2, -367, 2, -112,
	2, -175, 164, 2, 106, 415, -156, 2, 164, 456,
	2, 8, 2, -450, 373, 332, 156, 2, 386, 2,
	387, 68, -341, 477, 68, 167, 2, 167, 2, -324,
	2, 471, -508, 2, 289, 167, 2, 167, 2, 167,
	2, 167, 2, 167, 2, 329, 383, 220, 2, -112,
	468, -367, 468, 2, -526, 164, 371, -367, 2, 433,
	229, 141, 167, -324, 2, 167, 2, 167, 2, 5,
	2, 330, 401, 2, 218, 325, 401, 2, -239, -538,
	2, 415, 465, 378, 2, 2, 82, 83, 167, 2,
	167, 2, 167, 477, 2, -317, -402, -353, -354, -353,
	430, -285, -287, -156, 386, 2, -186, -315, -188, 164,
	-343, -344, -189, 242, 151, 285, -190, -323, 27, 122,
	-323, -323, 55, 502, 502, 11, 12, 70, 40, 492,
	493, 494, 495, 162, 496, 497, 490, 491, 489, 482,
	483, 487, 224, 225, 88, 486, 484, 80, 252, 365,
	152, 153, 154, 155, 345, 200, 33, 201, 14, 15,
	16, 32, 294, 241, 478, 191, 390, 485, 17, 18,
	19, 215, 217, 277, 47, 194, -218, -260, -367, -367,
	-367, -367, -367, -367, -367, 301, 501, -313, -362, 499,
	-181, 501, 501, 501, -440, -181, -367, -381, 502, -305,
	501, -181, -381, -376, 501, 363, 499, 501, -384, -367,
	5, 5, 5, 501, 503, -490, 472, 164, 501, 501,
	501, 501, 501, 501, 501, 501, 501, 501, 501, 501,
	501, 501, 501, 321, -422, 501, -421, 501, -421, -421,
	466, -419, 501, 479, 473, 501, -419, 501, 501, 501,
	501, 501, 501, 501, 501, 501, 501, 501, 501, 501,
	466, 506, -487, -282, 501, -309, -405, -367, 494, -309,
	-309, 289, -302, -367, 94, -327, 221, 266, 168, 238,
	358, 207, -364, 505, -364, -392, 479, -181, -399, -238,
	-181, -401, 501, -397, -392, -89, -440, -73, -86, -94,
	-112, -125, -160, -161, 494, -239, 501, 167, 501, 503,
	-444, 167, -291, -223, -239, -252, -253, -258, 121, -302,
	-505, -291, -213, 37, -378, -414, -415, -461, 505, -460,
	-417, -427, -423, -426, 317, 318, -446, 50, 462, -429,
	212, 4, -452, -454, 209, 210, 393, 48, 334, 159,
	111, 110, 282, 52, 426, 427, 428, 429, 171, 172,
	463, 404, 63, 64, -505, -291, 164, -443, -302, 37,
	-354, 2, 112, -448, 42, -547, 506, 240, -262, 251,
	274, 183, 290, 475, 283, -449, 5, 4, -377, -389,
	112, 245, 212, -434, -436, 8, -435, 9, -437, 492,
	493, -442, -441, 96, 503, -444, -197, 346, 385, -196,
	23, 28, 126, 459, 142, -272, 204, 308, 136, 397,
	449, -515, -516, 369, 421, 422, 84, 283, 385, 346,
	136, -320, -322, 37, 104, 269, 303, 56, 197, 256,
	257, 399, 467, 136, 385, 346, -516, 346, -516, -199,
	397, 449, -515, -516, 369, 346, -198, -272, 136, 505,
	23, 346, 385, 304, -531, -532, 126, 28, 346, 304,
	-512, -484, 471, 136, -109, -298, 506, 506, -444, 494,
	371, 370, 136, 136, 136, 136, 164, 2, 2, 275,
	2, 2, 2, 169, -518, -536, 2, 2, 2, -239,
	187, -284, 289, -507, -299, 415, -239, 275, -241, 187,
	2, -244, 465, -512, 275, 37, 501, 2, -340, 2,
	202, -484, 275, -403, -255, -239, -398, -255, 385, -232,
	37, -364, -364, 136, 2, 2, 2, -210, -200, 506,
	58, 352, 136, -200, 136, -200, 136, -259, 187, -258,
	-200, 136, -200, 506, 136, -200, 506, 136, 506, 136,
	502, 506, -411, -411, -450, -169, 471, 167, 92, 501,
	501, -175, -408, 506, -407, -451, -110, -450, -507, -223,
	2, -239, 2, 415, 222, -169, -450, -450, -450, -443,
	27, 387, 2, 329, 383, 83, 387, 2, -239, 415,
	106, 202, 74, -510, 164, -506, 359, -505, -239, 106,
	-239, 106, -239, 106, -239, -239, 2, 2, 2, 2,
	79, 79, 2, 44, -526, 164, 2, 433, 2, 433,
	2, -210, -210, -210, 400, 240, -239, 164, 415, 202,
	415, 202, 106, 415, -200, 506, -214, -186, -315, -443,
	-316, -315, -187, -186, -189, 164, 333, 450, 269, 388,
	226, -344, -343, 27, -367, -348, 158, 268, -367, -346,
	-369, 492, 493, -435, -437, -301, 283, -180, -180, -180,
	-288, -394, -367, 324, 202, -416, -414, -414, -237, -444,
	426, -367, -367, -367, -367, -367, -367, -367, -367, -367,
	-367, -367, -367, -367, -367, -367, -367, -367, -367, -367,
	-367, -367, -367, -367, -367, -367, -367, -367, -367, -367,
	-367, -367, -367, -367, -367, -367, 241, 191, 390, 47,
	194, -367, 430, -367, -367, -367, -367, 263, 275, 279,
	438, 149, 447, 122, 283, -550, 410, 39, -374, -181,
	-306, 501, -388, 34, 396, 27, -381, 501, 2, -362,
	-367, -363, -303, -302, -302, 502, 464, 27, 122, 494,
	2, 502, 506, 37, 502, -367, -303, -380, -376, -302,
	-387, -386, 468, -335, -336, 476, 259, 109, 185, 258,
	-337, 376, -438, 8, -444, 494, -491, 157, 178, 501,
	502, 2, 502, 2, 502, -367, 2, 502, -367, 2,
	502, -367, 2, 502, -367, 2, 502, 2, -367, -367,
	-367, -367, -367, -367, -367, -302, 8, -438, -438, 426,
	426, -438, -438, -438, -430, 317, 243, 318, 173, 262,
	260, 261, 172, -430, -329, 2, -432, -302, 4, 476,
	259, 109, 185, 258, 376, 5, -329, 2, -330, 2,
	-367, -302, -331, -368, -369, 492, 493, 485, -381, -332,
	2, -367, -303, -367, 53, 235, 432, -333, -367, 167,
	-302, -302, 2, -302, 2, -488, 37, -302, -294, 506,
	167, 37, 4, -294, -294, 501, 502, 506, -328, 182,
	255, 250, -328, -397, -327, 221, -325, 299, -325, -325,
	-392, -224, 499, 507, -444, -392, -391, -390, 37, -232,
	296, -392, -392, 503, 502, -391, 500, -503, 501, 504,
	504, 504, 504, 504, -239, 501, -302, -444, 503, 402,
	502, 215, 215, 215, 215, 364, 502, 430, 471, -88,
	291, 502, 506, -293, 36, 499, 503, -438, 2, 2,
	-433, 466, 501, 501, -336, 501, 167, -292, -527, 502,
	434, -355, -261, 333, 395, 347, 380, 412, 8, 9,
	8, 9, 506, -444, 506, -528, 86, 430, 72, 372,
	-358, 187, 72, -462, -226, 86, -463, -210, 66, 446,
	324, 166, 134, -528, 86, 324, -528, 86, 86, 385,
	400, 55, -402, 40, 40, 27, -112, 236, 167, 477,
	415, 202, 372, 430, -402, -322, -414, 104, 256, 257,
	55, -439, -434, 492, 493, -439, 55, -439, -439, -439,
	471, -241, -402, 372, 430, 430, 506, 40, 40, 27,
	-112, 236, 167, 430, -258, -224, 460, 41, 460, 430,
	41, 372, 430, 506, 41, 41, 430, 430, -513, -215,
	93, 270, 249, 271, -216, -217, 310, 458, -450, -408,
	-250, -210, 503, -112, -367, -367, -112, -367, -112, 44,
	136, 2, -544, 230, 501, -265, 275, 167, -291, -409,
	213, 506, -299, 136, -321, -320, 275, -243, 187, 2,
	-239, 136, 131, 501, 331, 2, -225, 187, -211, -210,
	-340, -203, 418, 136, -319, 456, -349, -112, 501, 112,
	37, -349, -310, -311, -406, -312, -226, 501, -232, -210,
	2, -239, -300, -300, -300, -200, 506, 136, -223, -242,
	-247, -248, -249, -450, -451, -88, -410, 502, 502, 502,
	-168, 293, -167, -210, 5, -175, 456, -264, -359, -358,
	-466, -467, -462, 241, 202, 446, 214, 150, -283, -227,
	-226, 105, -169, -109, 502, -408, -169, -169, -408, -408,
	-239, 164, -169, -169, -169, 2, 2, -324, -239, -223,
	-258, -239, -291, -291, -324, -223, -324, -223, -324, -223,
	-112, -367, 2, 382, 164, 164, 503, -324, 331, 106,
	415, 308, 202, -239, -258, -239, -258, -223, -239, -402,
	-316, -187, 290, 226, 388, -346, -347, -369, 363, 364,
	-347, 363, 364, 8, 9, 8, 9, -191, 392, 278,
	-300, 506, -194, 38, 119, 226, -239, 477, 132, -367,
	-367, 430, -550, 410, -374, 132, -367, 263, 279, 438,
	149, 447, 122, 283, 167, 501, -368, -368, 502, -304,
	-367, -367, 500, 509, 502, -287, 506, -285, -367, -302,
	-302, 502, 503, -302, -291, 500, 500, 506, 502, -385,
	-386, 127, -367, 430, 430, 430, 430, 501, 502, 503,
	-496, 300, 501, 501, -367, 502, 502, 502, 502, 37,
	506, 506, 506, 502, 506, 506, 506, 502, 502, 502,
	506, 502, 477, 477, 502, 502, 502, 502, 506, 502,
	506, 502, 167, 502, 502, -338, 314, 502, 11, 12,
	492, 493, 494, 495, 162, 496, 497, 490, 491, 489,
	482, 483, 484, 80, 252, 365, 14, 15, 16, 215,
	194, -368, -368, -368, 502, -372, -373, 167, 164, 37,
	-333, -333, -333, 502, 167, -302, 502, 502, 501, -489,
	254, 275, 502, -361, -360, 469, -405, -295, 2, -397,
	-234, -444, -361, -361, -302, -367, 221, 221, -326, 456,
	289, -328, -397, -391, -440, -366, -365, 165, 38, 119,
	272, 190, -391, -232, -282, -391, -391, -444, -392, -392,
	-390, 502, -504, -440, 502, -296, -400, -483, -287, 503,
	-444, -169, -157, 5, 279, -157, -157, -157, -291, 24,
	315, -414, 499, 500, 8, -444, 501, -438, -438, -438,
	-291, 167, -441, -354, 444, 77, 333, 426, -441, -196,
	346, -226, -226, -239, -248, 275, -358, 187, -202, 275,
	-414, -233, -210, 501, 501, 226, 226, 456, -226, -233,
	226, 187, -226, 187, -233, -233, -514, 333, 284, -367,
	244, 331, 276, -197, 346, 385, -112, -112, -112, 501,
	-527, 456, 121, -239, -258, -239, -248, -243, 385, 346,
	273, -252, -439, -439, -320, 385, 346, -248, -241, -223,
	-198, -112, -112, -112, 501, -224, -199, 346, 5, 187,
	-226, 5, -210, -226, -248, -530, -448, 103, 384, -532,
	23, -226, 187, -226, -248, -530, -215, -450, 279, 452,
	-512, -166, 198, 494, -509, -210, 465, -210, -263, -266,
	-264, -226, -178, 473, 471, 136, -256, -239, 499, -169,
	-450, -239, -248, 136, -282, 275, -450, 501, 2, 2,
	289, 275, -225, 187, -204, 128, -548, 484, -223, -361,
	-295, -318, -352, 354, 289, -283, 461, -232, -318, -297,
	506, 167, 484, 503, -283, 2, -200, -200, -200, -258,
	-259, -200, -200, -200, -88, -88, -169, 506, 501, 484,
	484, 501, -450, -450, 502, 506, -239, -225, 202, 202,
	-231, -211, 502, 506, 503, 501, -169, 167, -50, 471,
	415, 505, -324, -324, -324, 382, 382, -210, -235, -223,
	-239, -236, -258, 164, 164, 450, -347, 290, 248, -394,
	-195, 281, -239, 505, -367, -367, 132, 132, -367, -368,
	-368, -367, 132, 167, 501, -367, -378, 32, 32, 502,
	506, -363, -367, 502, 464, -287, -287, 502, 494, -444,
	505, 502, -376, 130, -367, 424, 259, 185, 258, -337,
	258, -337, -337, -438, 5, -444, 494, -497, -229, 501,
	-210, 469, -286, 295, 502, -416, -414, -367, -367, -367,
	-367, -367, -438, -419, -419, -434, -434, -367, -372, -367,
	-416, -414, -368, -368, -368, -368, -368, -368, -368, -368,
	-368, -368, -368, -368, -368, -368, -368, -368, -368, -368,
	-368, 122, 275, 283, -368, -373, -372, -367, -367, -414,
	502, 502, 502, -302, -88, 501, 254, -314, 178, -367,
	-408, 506, -314, -314, 502, -397, -397, 501, -367, 221,
	500, 506, 508, 484, -282, 503, -390, -391, 500, 502,
	506, 502, 506, -351, 37, 502, -444, 292, 5, 8,
	499, 500, 503, -438, 502, 502, 502, -291, -367, 430,
	430, 136, 275, 458, -468, -463, 134, -367, -289, -395,
	-367, 501, 501, 2, -193, 126, 385, -529, 2, 456,
	136, -200, 136, -200, 475, 501, 501, 430, 372, 471,
	-302, -367, -170, 112, -443, -516, 505, -516, 505, 372,
	430, 372, 430, 471, -302, 430, -418, 45, 25, 275,
	-242, 430, 430, -200, 136, 441, 385, -450, 279, -172,
	471, 167, 430, 2, -243, 2, 502, 502, 506, -469,
	37, 287, 501, 287, -239, -69, 471, -407, -440, -241,
	37, 136, -512, -412, -413, 5, -239, 136, 289, 275,
	-205, 234, -548, -448, -484, -287, -318, -309, 276, 85,
	502, -361, -311, -295, -367, 2, 502, -200, -167, -168,
	-450, -450, -450, -169, -175, -175, -359, -267, 501, -225,
	-211, 501, -175, -227, 2, -451, -112, 293, -239, 494,
	-324, -274, -273, 308, 283, -274, 363, 363, 290, 158,
	231, -194, -224, -367, -367, 132, 32, 32, -367, -367,
	-378, 502, -367, -367, -302, 500, 5, -367, 502, 502,
	8, -367, 502, 503, -498, -210, -367, 502, 55, 502,
	502, 506, 506, 502, 502, 502, 502, 502, 502, 502,
	-373, 167, 122, 283, 501, 502, 502, -88, -375, 181,
	55, -397, -375, -375, -326, -291, -397, -365, -224, 499,
	-444, -440, -400, 501, 503, 500, 2, 499, -444, 502,
	-226, -226, -358, 136, -470, 86, -472, 70, 150, 92,
	275, 279, 446, 324, 66, 112, 338, -540, 37, 481,
	502, 502, 506, -194, -289, -291, 275, 407, 112, 275,
	112, 105, 441, 73, -226, -233, -291, -291, -239, -248,
	143, 502, 506, 484, 2, 494, 494, -248, -243, -248,
	-241, 143, 502, -224, 5, 5, 136, -221, 70, 5,
	-226, -226, -242, 105, -174, 293, -173, 129, 356, 120,
	228, -451, -109, -282, -270, 205, -226, -467, -464, -465,
	324, -471, -473, 150, 324, -112, -177, -176, -210, 5,
	2, 501, -265, 293, 500, -321, -112, -243, 502, 506,
	-342, 456, -224, -239, 136, -206, 233, -548, -448, -203,
	-345, -343, -350, 501, 289, -112, -287, 484, 502, 502,
	105, 105, 196, 135, -289, 501, 501, -291, 105, 502,
	-51, -52, 202, 86, 313, -236, 415, 202, 501, 501,
	-194, -367, -367, -367, 502, -287, -444, 494, -492, 308,
	502, -394, -367, -367, -368, 167, 501, -378, 502, -493,
	470, -367, -302, -493, -493, 502, -440, 2, 499, 2,
	-358, -233, -237, -230, -210, 150, 187, 279, 226, 501,
	-368, -239, 501, 2, 29, -541, 116, 206, -357, -542,
	91, 408, 195, -395, -195, 502, 502, 279, 279, -367,
	-414, 501, -200, -200, 502, 502, -367, 430, -443, 90,
	-441, 2, -516, -367, 430, 5, -200, -237, -200, -200,
	-221, 441, 506, 501, 484, 484, -172, 37, -271, -272,
	194, -469, 226, -230, 226, -539, 471, 502, 506, 484,
	484, -263, -178, -70, -71, 431, -407, -282, 5, 501,
	-210, 289, 501, -224, -548, -448, -204, -318, 123, -291,
	86, -345, -374, -169, 501, 501, -268, 75, 87, 113,
	186, 170, 203, 400, 405, 27, -268, 502, -289, -289,
	502, 501, -169, 506, 27, 501, 27, 501, -239, -258,
	-302, -302, 502, -287, 55, 506, 502, 502, -368, -378,
	502, -494, -495, -229, 500, 2, -472, -230, 275, 456,
	-367, -212, 501, -367, 37, 206, 117, 192, -270, 501,
	-356, 456, 338, -221, -289, 501, 501, 501, 484, 167,
	501, -418, -200, -242, -173, -174, -450, -109, -521, 336,
	-112, -178, 306, 501, -269, 289, 105, 269, -176, -370,
	-370, 502, 37, -71, 9, 37, -289, -239, -289, 289,
	-448, -205, 450, 276, 502, -233, -318, -451, -451, -356,
	502, 502, -451, -52, -291, -291, 502, 502, -499, 331,
	364, 180, -302, -288, 502, 506, 37, 136, 182, 502,
	-474, 253, -210, 502, 117, 192, -271, -291, -270, 182,
	-239, -517, 456, 502, -276, -275, -273, -278, -277, -273,
	-302, -441, 90, 306, -302, -221, 502, -524, 168, 267,
	-523, 5, 10, -269, -239, -290, -396, -226, 76, 105,
	-270, -112, -112, 502, -342, 502, -239, -206, 385, -360,
	502, 502, -357, -356, -361, 502, 502, 502, 502, -500,
	-501, 47, 443, 96, -367, -500, -500, -495, -497, 150,
	471, -475, -478, -477, 289, 391, 168, 307, 502, 407,
	467, -541, 502, 471, -282, -367, -356, 502, 506, 461,
	502, 506, 461, 502, 167, 502, -200, -171, 471, 44,
	501, 502, 506, 323, 118, 126, -271, -539, -356, 501,
	-357, 501, -310, -169, -169, -270, -357, -169, -502, 134,
	-501, 320, 163, 363, 320, 163, -502, -502, -230, 51,
	-477, 289, -478, 289, 450, 118, -361, 51, -474, -270,
	-275, 194, -277, 167, 306, 139, -523, 29, -291, -396,
	364, 364, 2, -178, -269, -357, -289, -270, -289, -361,
	-271, -270, 96, 178, 425, 269, 32, 484, -476, 269,
	352, 58, 385, -476, 484, -475, 501, 501, 370, 502,
	2, -269, -270, 502, -271, 502, -361, -271, 363, 297,
	-501, -367, 22, 279, 112, -367, -541, -302, -302, 293,
	-201, 58, 352, -271, -356, -361, -357, -361, 502, 502,
	-168, 501, -361, -357, -270, -271, 430, -168, -270, -271,
	501, 502, -271, -361, -302, -361, 502, -271,
}
var sqlDef = [...]int{

	-2, -2, 1, 2, 3, 4, 6, 7, 8, 10,
	12, 14, 16, 18, 20, 22, 24, 25, 26, 27,
	28, 444, 445, 447, 448, 449, 451, 452, 454, 456,
	458, 459, 460, 462, 463, 465, 466, 467, 468, 469,
	471, 473, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 531, 533, 0, 1117, 1119, 1121,
	1123, 0, 665, 0, 30, 31, 0, -2, 248, 250,
	252, 0, 278, 280, 281, 283, 285, -2, 0, 380,
	381, 383, 385, -2, -2, 0, 822, 824, 0, 520,
	522, 0, 827, 829, 0, 0, 542, 543, 0, 1205,
	-2, 536, 538, 540, 605, 607, 609, 611, 613, 615,
	617, 618, 620, 622, 624, 626, 628, 630, 632, 634,
	635, 637, 639, 641, 643, 645, 647, 649, 651, 653,
	655, 657, 659, -2, 661, -2, -2, 0, -2, -2,
	-2, 1135, 34, 36, 38, 40, 42, 44, 46, 48,
	50, 331, 332, 334, 336, 338, 340, 343, 345, 347,
	1263, 387, 389, 391, 393, 395, 397, 399, 0, -2,
	1275, 0, 0, 52, 53, 54, 55, 56, 57, 58,
	59, 60, 78, 79, 80, 81, 82, 83, 84, 85,
	64, 65, 67, 68, 69, 73, 74, 76, 62, 0,
	0, 1236, 1238, 1240, 1242, -2, 0, 0, 5, 9,
	11, 13, 15, 17, 19, 21, 23, 446, 450, 453,
	455, 457, 461, 464, 470, 472, 474, 431, 432, 435,
	1895, 1912, 1913, 1914, 1917, 1918, 1919, 1920, 1921, 1922,
	2286, 2367, 2368, 1944, 1945, 1946, 1947, 1948, 1949, 1950,
	1951, 1952, 1953, 1954, 1955, 1956, 1957, 1958, 1959, 1960,
	1961, 1962, 1963, 1964, 1965, 1966, 1967, 1968, 1969, 1970,
	1971, 1972, 1973, 1974, 1975, 1976, 1977, 1978, 1979, 1980,
	1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990,
	1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000,
	2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010,
	2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020,
	2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030,
	2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040,
	2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050,
	2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060,
	2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070,
	2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080,
	2081, 2082, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090,
	2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100,
	2101, 2102, 2103, 2104, 2105, 2106, 2107, 2108, 2109, 2110,
	2111, 2112, 2113, 2114, 2115, 2116, 2117, 2118, 2119, 2120,
	2121, 2122, 2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130,
	2131, 2132, 2133, 2134, 2135, 2136, 2137, 2138, 2139, 2140,
	2141, 2142, 2143, 2144, 2145, 2146, 2147, 2148, 2149, 2150,
	2151, 2152, 2153, 2154, 2155, 2156, 2157, 2158, 2159, 2160,
	2161, 2162, 2163, 2164, 2165, 2166, 2167, 2168, 2169, 2170,
	2171, 2172, 2173, 2174, 2175, 2176, 2177, 2178, 2179, 2180,
	2181, 2182, 2183, 2184, 2185, 2186, 2187, 2188, 2189, 2190,
	2191, 2192, 2193, 2194, 2195, 2196, 2197, 2198, 2199, 2200,
	2201, 2202, 2203, 2204, 2205, 2206, 2207, 2208, 2209, 2210,
	2211, 2212, 2213, 2214, 2215, 2216, 2217, 2218, 2219, 2220,
	2221, 2222, 2223, 2224, 2225, 2226, 2227, 2228, 2229, 2230,
	2231, 2232, 2233, 2234, 2235, 2236, 2237, 2238, 2239, 2240,
	2241, 2242, 2243, 2244, 2245, 2246, 2247, 2248, 2249, 2250,
	2251, 2252, 2253, 2254, 2255, 2256, 2257, 2258, 2259, 2260,
	2261, 2262, 2263, 2264, 2265, 2266, 433, 434, 981, 0,
	498, 496, 1888, 499, 2112, 501, 503, 374, 375, 376,
	377, 378, 379, 0, 513, 507, 512, 514, 516, 517,
	518, 519, 493, 491, 0, 513, 1947, 511, 1115, 1116,
	1100, 1101, 2149, 1142, 532, -2, -2, -2, 2252, -2,
	564, -2, 571, 2256, 2151, 576, 0, 578, -2, 581,
	1118, 1120, 1122, 663, 664, 1898, 0, 0, 0, 0,
	32, 33, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1030, 1031, 1032, 0, 187, 189, -2, -2,
	-2, -2, 0, 0, 2185, 1988, 1856, 1914, 1859, 1854,
	249, 251, 253, 254, 0, 0, 0, 0, 0, 0,
	279, 282, 284, -2, 286, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 310, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, -2, 0, 0, 0,
	0, 0, 0, 0, 876, 868, 869, 1071, 0, 0,
	0, 0, 382, 384, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	386, 0, 0, 0, -2, 0, 0, 0, 0, 0,
	0, 311, 436, 437, 0, 1264, 1264, 0, 0, 0,
	0, 229, 220, 823, 825, 826, 0, 0, 0, 0,
	521, 523, 0, 0, 215, 828, 830, 831, 0, 0,
	0, 0, 0, 231, 0, 0, 537, 539, 541, 606,
	608, 610, 612, 614, 616, 619, 621, 623, 625, 627,
	629, 631, 633, 636, 638, 640, 642, 644, 646, 648,
	650, 652, 654, 656, 658, 660, 670, 0, 0, 0,
	0, -2, -2, 0, 0, 0, -2, -2, 0, 0,
	0, 0, 0, 0, 0, -2, 0, 747, 0, 0,
	0, -2, -2, -2, 0, 0, 0, 0, 0, -2,
	-2, 0, 0, 0, 0, 673, 675, 676, 677, 0,
	728, 745, 746, 755, 662, 0, 1021, 1265, 1144, 1125,
	1139, 1144, 1127, 1128, 1129, 1130, 1131, 1136, 1138, 1132,
	1133, 1134, 35, 37, 39, 41, 43, 45, 47, 49,
	51, 333, 335, 337, 339, 341, 344, 346, 348, -2,
	1234, 1235, 388, 390, 392, 394, 396, 398, 400, 524,
	0, 526, 0, 674, -2, 0, 1269, 1269, 1269, 0,
	0, 1235, 1233, 0, 529, 530, 585, 586, 1499, 0,
	0, 0, 0, 0, 0, 0, 1753, 1585, 0, 587,
	-2, 1616, 1618, 2227, 2252, 1752, 1620, 1621, 1622, 1623,
	1624, 0, 1626, 1627, 1628, 1629, 1630, 1631, 0, 1633,
	0, 1638, 1639, 1640, 0, 2234, 1833, 1908, -2, 0,
	0, 2240, 1904, 0, 1719, 1656, -2, -2, 1931, 1910,
	1431, 1432, 1433, 1434, 1435, -2, -2, 2269, 1660, 1661,
	1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 0,
	2216, 2235, 2236, 2241, 2243, 2237, 2224, 1681, 1999, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, 1458, 1467, -2, -2, -2, -2, -2, -2,
	2228, 2229, 2246, 2249, 2255, 2260, 2261, 2233, 2242, 2270,
	2271, 2272, 2273, 2274, 2275, 2276, 2277, 2278, 2279, 2280,
	2281, 2282, 2283, 2284, 2285, 1459, -2, -2, -2, -2,
	1252, 2123, 1255, 981, 1253, 1237, 1239, 0, 1241, 0,
	0, 0, 1246, 1272, 1270, 0, 1313, 1250, 1251, 1331,
	1331, 1355, 0, 1336, 0, 1355, 1264, 1381, 0, 1342,
	2141, 1657, 1658, 0, 1914, 1909, -2, -2, 2267, 0,
	0, 0, 0, 0, 0, 0, 494, 0, 500, 502,
	0, 0, 0, 0, 0, 0, 0, 0, 1141, 534,
	535, 0, 559, 0, 563, 2223, -2, 1955, 2160, -2,
	567, 1145, 1149, 1150, 1151, 1152, 0, 0, 0, 0,
	0, 573, 0, 0, 560, 561, 579, 582, 0, 666,
	667, 668, 669, 61, 0, 2235, 1381, 63, 0, 1878,
	1939, 1940, 1941, 1942, 1943, 2268, 2287, 2288, 2289, 2290,
	2291, 2292, 2293, 2294, 2295, 2296, 2297, 2298, 2299, 2300,
	2301, 2302, 2303, 2304, 2305, 2306, 2307, 2308, 2309, 2310,
	2311, 2312, 2313, 2314, 2315, 2316, 2317, 2318, 2319, 2320,
	2321, 2322, 2323, 2324, 2325, 2326, 2327, 2328, 2329, 2330,
	2331, 2332, 2333, 2334, 2335, 2336, 2337, 2338, 2339, 2340,
	2341, 2342, 2343, 2344, 2345, 2346, 2347, 2348, 2349, 2350,
	2351, 2352, 2353, 2354, 2355, 2356, 2357, 2358, 2359, 2360,
	2361, 2362, 2363, 2364, 2365, 2366, 2269, 66, 0, 2235,
	70, 0, 2235, 0, -2, 75, 0, 1884, 77, 0,
	1881, 86, 0, 2235, 0, 1853, -2, 0, 172, 1892,
	0, 848, 1894, -2, 2235, 1029, 232, 233, 1927, 1928,
	1935, 1936, 1937, 1938, 0, 0, 815, 1850, 1855, 816,
	1874, 817, 1860, 0, 255, 256, 257, 258, 259, 0,
	260, 2235, 262, 263, 0, 265, 266, 2235, 268, 269,
	0, 271, 0, 200, 201, 287, 288, 0, 290, 0,
	2235, 0, 0, 0, 296, -2, 312, 0, 309, 0,
	300, 301, 303, 304, 305, 306, 0, 352, 350, 1889,
	0, 843, 2235, 845, 0, 0, 1050, -2, 2235, 1026,
	1056, 1052, 0, -2, 0, 1262, 2235, 1159, 872, 873,
	874, 875, 0, 371, 0, 1172, 0, 1174, 0, 1195,
	1387, 1331, 1331, 0, 313, 314, 315, 316, 317, 2235,
	0, 0, 0, 322, 0, 324, 325, 326, 327, 328,
	329, 330, 161, 2235, 403, 429, 161, 2235, 406, 161,
	2235, 409, 0, 412, 1069, 161, 2235, 415, 161, 2235,
	418, 419, 161, 2235, 423, 424, 426, 2235, 428, 234,
	1111, 1112, 1113, 1114, 0, -2, 487, 1897, -2, 439,
	0, 440, 0, -2, 0, 246, 0, 0, 832, 833,
	834, 835, 836, 839, 840, 841, 842, 1368, 218, 216,
	0, 0, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109,
	1110, 0, 0, 544, 0, 0, 671, 672, 0, 0,
	682, 683, 684, 246, 2152, 2120, 2018, 689, 0, 692,
	695, -2, 0, 0, 0, 0, 699, 0, 704, 705,
	706, 0, 821, 708, 0, 0, 710, 0, 714, 0,
	717, 0, 719, 0, 721, -2, -2, -2, 732, -2,
	0, 736, 0, 738, -2, 0, 747, 743, 744, 0,
	0, 0, 0, 763, 764, 0, 769, 0, 772, 773,
	774, 0, 776, 777, 0, 779, 780, 781, 782, 0,
	784, 785, -2, -2, 789, 791, 0, 798, 0, 802,
	0, 806, 0, 678, 679, 161, 1385, 1124, -2, 1126,
	0, -2, 0, 525, 0, 528, 1292, 1220, 1217, 0,
	1289, 1290, 1221, 0, 0, 0, 1228, 0, 1267, 1268,
	0, 0, 0, 1207, 1208, 0, 0, 0, 0, 1758,
	1759, 1760, 1761, 1762, 1763, 1766, 1767, 1764, 1765, 1768,
	1769, 0, 0, 0, 0, 0, 1770, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1771, 1772,
	1773, 0, 0, 1775, 0, 1777, 0, 0, 0, 0,
	0, 0, 1564, 1566, 1841, 0, 0, 1774, 1504, 1505,
	1506, 1507, 1508, 1543, 1544, 0, 0, 1617, 1838, 1837,
	1619, 0, 1789, 0, 1632, -2, 0, 1753, 1784, 0,
	0, 1641, 1642, 1643, 0, 0, 1789, 0, 0, 1832,
	1653, 1654, 1496, 0, 0, 1721, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1445, 1444, 0, 1446, 0, 1447, 1448,
	1455, 1468, 0, 0, 0, 0, 1472, 0, 0, 0,
	0, 0, 0, 0, 1813, -2, 0, 0, 0, 0,
	1460, 0, 1254, 0, 0, 1317, 1842, 1846, 1847, 1317,
	1317, 0, 0, 1790, 1378, 1378, 0, 0, 1374, 1374,
	1374, 1372, 1355, 0, 1355, 1365, 0, 1355, 1355, 0,
	-2, 1336, 0, 0, 1365, 0, 1349, 475, 477, 479,
	481, 482, 483, 485, 1382, 1383, 0, 0, 0, 0,
	1915, 0, 0, 0, 0, 0, 1900, 0, 0, 0,
	0, 505, 515, 1264, 0, 1792, 1404, 1408, 0, 1410,
	1411, 1412, 1413, 1414, 0, 0, 1405, -2, 1456, 1458,
	1479, 1932, 1933, 1934, 1439, 1440, 1441, 1442, 1443, 1451,
	1438, 1438, 1438, 1449, 1478, 1470, 1478, 1474, 1425, 1426,
	1461, 1462, 1463, 1464, 0, 509, 0, 0, 0, 0,
	-2, 569, 574, 575, 0, 0, 1147, 0, 1153, 596,
	597, 598, 1155, 1156, 0, 572, 599, 600, 601, 602,
	603, 604, 0, 1862, 1863, 1864, 1865, 1868, 1869, 0,
	0, 570, 589, 577, 0, 583, 87, 1097, 0, 126,
	0, 1097, 1097, 0, 0, 148, 0, 0, 0, 0,
	0, 0, 111, 122, 99, 100, 0, 0, 0, 0,
	0, 71, 1003, 0, 1006, 0, 0, 0, 0, 0,
	0, 0, 1019, 0, 0, 0, 110, 0, 105, 89,
	0, 0, 0, 112, 124, 0, 152, 154, 0, 0,
	0, 0, 0, 0, 171, 179, 0, 0, 0, 0,
	1027, 0, 1261, 0, 1368, 814, 0, 0, 1915, 1858,
	0, 0, 0, 0, 0, 0, 0, 289, 291, 0,
	293, 294, 295, 0, 1049, 0, 302, 299, 342, 952,
	2235, 0, 0, 369, 364, 0, 366, 0, 1002, 2235,
	1000, 1893, 0, 1024, 0, 0, 0, 1057, 1924, 1066,
	1070, 1161, 0, 373, 0, 1175, 1177, 0, 0, 1388,
	0, 1390, 1391, 0, 319, 320, 321, 0, 401, 0,
	159, 160, 0, 404, 0, 407, 0, 161, 2235, 1848,
	413, 0, 416, 0, 0, 421, 0, 0, 0, 0,
	1264, 0, 0, 0, 0, 222, 0, 0, 0, 0,
	0, 0, 246, 0, 1367, 0, 1368, 246, 246, 1368,
	546, 1368, 548, 0, 0, 685, 246, 246, 246, 690,
	691, 693, 694, -2, -2, 799, 696, 697, 766, 0,
	0, 0, 765, 707, 0, 808, 2137, 819, 766, 1988,
	766, 1988, 766, 1988, 718, 720, 723, 758, 731, 735,
	0, 0, 740, 748, -2, 0, 750, 0, 752, 0,
	754, 766, 767, 770, 775, 778, 783, 0, 0, 0,
	0, 0, 0, 0, 1020, 0, 1137, 1292, 1220, 527,
	1211, 1291, 1212, 1219, 1222, 0, 0, 1224, 0, 1226,
	0, 1287, 1288, 1295, 1296, 0, 1306, 1307, 1299, 0,
	-2, 0, 0, 1302, 1303, 1230, 0, 1247, 1248, 1249,
	1276, 1279, 1080, 0, 2367, 1500, 1399, 1501, 1502, 1877,
	0, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517,
	1518, -2, -2, -2, -2, -2, -2, -2, -2, 1527,
	1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537,
	-2, -2, -2, 1541, 1542, -2, 1776, 1778, 0, 1841,
	0, -2, 0, -2, -2, -2, -2, 1561, 0, 1563,
	1568, 1570, 1572, 0, 0, 0, 0, 1840, 1582, 1824,
	1825, 0, 0, 1755, 1756, 1757, 1567, 0, 1586, 1839,
	1836, 0, 0, 1788, 1275, 1645, 0, 0, 0, 0,
	1652, 1637, 1786, 0, 1785, 0, 0, 0, 1796, 0,
	1831, 1827, 0, 1875, 1495, 1482, 1483, 1484, 1485, 1486,
	1487, 1497, 0, 1872, 1901, 1907, 1729, 0, 0, 0,
	1682, 1683, 1684, 1685, 1686, 0, 1688, 1689, 0, 1691,
	1692, 0, 1694, 1695, 0, 1697, 1698, 1699, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1417, 1418, 1419, 1420, 1421,
	1422, 1423, 1424, 0, 0, 1701, 0, 1799, -2, -2,
	-2, -2, -2, -2, -2, -2, 0, 1703, 0, 1705,
	1790, 1810, 0, 0, 1587, 0, 0, 0, 1753, 0,
	1708, 1790, 1818, 0, 0, 0, 0, 0, 1790, 0,
	1823, 0, 1715, 0, 1717, 1256, 0, 0, 1394, 0,
	0, 0, 1845, 1394, 1394, 0, 1312, 0, 0, 1375,
	1376, 1377, 0, 0, 1378, 0, 1369, 1373, 1370, 1371,
	1365, 1328, 0, 0, 1879, 1365, 1334, 1364, 0, 981,
	1354, 1365, 1365, 0, -2, 1338, 1355, 0, 0, 476,
	478, 480, 484, 486, 0, 0, 1275, -2, 0, 246,
	980, 0, 0, 0, 0, 495, 497, 0, 0, 489,
	0, 492, 0, 1395, 1398, 0, 0, 1409, 1415, 1416,
	0, -2, 0, 0, 1480, 0, 0, 0, 0, 562,
	0, 1146, 1154, 0, 593, 0, 595, 0, 1866, 1870,
	1867, 1871, 0, 584, 0, 0, 0, 0, 1096, 0,
	130, 2235, 0, 163, 0, 0, 945, 1885, 0, 0,
	0, 0, 2005, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 96, 101, 0, 0, 0,
	0, 0, 0, 0, 0, 1004, 1005, 1007, 1014, 1016,
	0, 1010, 1873, 0, 0, 1011, 0, 1013, 1015, 1017,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 98,
	102, 0, 0, 0, 0, 1852, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1045, 1043,
	1037, 1038, 1039, 1040, 1041, 1042, 0, 0, -2, 237,
	1851, 1861, 0, 837, 838, 261, 264, 267, 270, 188,
	0, 297, 0, 0, 878, 851, 0, 0, 351, 246,
	0, 0, 365, 0, 998, 1001, 0, 981, 2235, 1036,
	1891, 0, 0, 0, 0, 1055, 0, 2235, 1880, 1923,
	1924, 1163, 1169, 0, 1394, 0, 1193, 1178, 0, 0,
	0, 1193, 1197, 1198, 1200, 1201, 0, 0, 1389, 0,
	323, 430, 161, 161, 161, 410, 0, 0, 161, 420,
	161, 425, 161, 235, 427, 438, 488, 1264, 1264, 246,
	244, 2095, 242, 239, 241, 0, 0, 0, 879, 881,
	882, 883, 884, 0, 1924, 0, 2044, 1924, 0, 1181,
	1183, 0, 213, 219, 217, 246, 0, 363, 545, 550,
	680, 0, 686, 687, 688, 725, 760, 698, 700, 701,
	702, 0, 820, 818, 709, 766, 712, 766, 715, 766,
	734, 737, 742, 749, 0, 0, 0, 762, 0, 0,
	0, 0, 0, 0, 0, 803, 804, 805, 807, 1386,
	1215, 1216, 1218, 0, 1227, 0, 0, 1301, -2, -2,
	1300, 1304, 1305, -2, -2, -2, -2, 1223, 0, 1232,
	1229, 0, 1286, 1078, 1079, 0, 0, 0, 0, -2,
	-2, 0, 0, 0, 1583, 0, -2, 1562, 1565, 1569,
	1571, 1573, 0, 0, 0, 0, 0, 0, 1779, 0,
	1781, 1584, 1834, 1837, 1751, 0, 0, 1274, 1275, 1275,
	0, 1651, 0, 1787, 0, 1794, 1795, 0, 1644, 0,
	1828, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1655, 0, 0, 0, 0, 1687, 1690, 1693, 1696, 0,
	0, 0, 0, 1676, 0, 0, 0, 1680, 1450, 1436,
	0, 1478, 1476, 1477, 1471, 1478, 1475, 1428, 0, 1427,
	0, 1700, 0, 1702, 1704, 0, 0, 1706, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1590, 1591, 1592, 1707, 1816, 1817, 0, 0, 0,
	0, 0, 0, 1713, 0, 1822, 1714, 1716, 1264, 0,
	1257, 0, 1314, 1309, 1393, 0, 1843, 1368, 1316, 1318,
	1844, 1882, 1309, 1309, 0, 1791, 0, 0, 1359, 0,
	0, 0, 1361, 1332, 0, 0, 1326, 0, 1322, 1323,
	1324, 1325, 1333, 981, 1363, 1335, 1339, 1901, 0, 1365,
	0, 1350, 0, 1352, 1384, 0, 1344, 1347, 0, 0,
	1916, 247, 272, 276, 277, 273, 274, 275, 504, 0,
	0, 1793, 0, 1400, 0, 1406, 0, 0, 0, 0,
	508, 0, 558, -2, 591, 592, 594, 0, 590, 127,
	1097, 0, 0, 1082, 1084, 0, 132, 2235, 141, 0,
	919, 0, 1883, 0, 0, 0, 0, 0, 1099, 0,
	0, 2235, 161, 2235, 161, 144, 147, 0, 151, 149,
	0, 0, 910, 88, 1097, 0, 91, 95, 103, 0,
	0, 0, 109, 0, 0, 0, 1086, 1090, 0, 0,
	1008, 1009, 1012, 1018, 72, 0, 0, 1088, 1092, 1081,
	153, 93, 97, 104, 0, 1094, 90, 0, 175, 0,
	0, 0, 167, 0, 168, 169, 176, 177, 178, 180,
	0, 161, 2235, 0, 846, 847, 1044, 1022, 1023, 0,
	1028, 192, 0, 1857, 0, 0, 0, 0, 0, 0,
	877, 963, 0, 0, 0, 0, 357, 353, 0, 362,
	368, 367, 844, 0, 0, 0, -2, 1059, 1053, 1054,
	0, 0, 0, 2235, 1165, 1169, 0, 1168, 1262, 1275,
	372, 1170, 1193, 0, 0, 0, 1180, 1176, 1173, 1394,
	0, 0, 0, 0, 0, 318, 402, 405, 408, 1849,
	161, 414, 417, 422, 441, 442, 221, 0, 0, 0,
	0, 0, 246, 0, 0, 0, 888, 0, 1924, 1924,
	0, 1887, 0, 0, 0, 0, 214, 0, 547, 0,
	0, 0, 711, 713, 716, 751, 753, 766, 792, 793,
	905, 0, 905, 0, 0, 1225, 0, 1298, 1231, 1280,
	1281, 0, 1080, 0, 1503, 1546, 0, 0, -2, 0,
	0, 1550, 0, 0, 0, -2, 0, 0, 0, 1780,
	1782, 0, 1836, 1646, 0, 0, 0, 1650, 1634, 1635,
	0, 1754, 1797, 1826, 1830, 0, 1488, 1489, 1490, 1491,
	1492, 1493, 1494, 0, 1876, 1902, 1906, 1727, 1728, 1732,
	1890, 0, 0, 0, 1659, 0, 0, 0, 0, 0,
	0, 0, 0, 1469, 1473, 0, 0, 1798, 1809, 1811,
	1588, 1589, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600,
	1601, 1602, -2, -2, -2, 1606, 1607, 1608, -2, -2,
	-2, 0, 0, 0, 1812, 1814, 1815, 1819, 1820, 0,
	1710, 1711, 1712, 1821, 0, 1264, 1258, 1311, 0, 1392,
	1315, 0, 1311, 1311, 1271, 1357, 0, 0, 1380, 0,
	1329, 0, 1330, 0, 1362, 0, 1337, 1340, 1341, 1351,
	0, 1343, 0, 1346, 0, 1646, -2, 506, 490, 0,
	0, 1402, 0, 0, 1453, 1457, 1481, 510, 1366, 0,
	0, 0, 0, 162, 917, 944, 0, 0, 0, 1073,
	1080, 0, 0, 950, 134, 0, 0, 0, 142, 0,
	0, 139, 0, 146, 150, 0, 0, 0, 0, 0,
	0, 106, 107, 108, 0, 113, 0, 114, 0, 0,
	0, 0, 0, 0, 0, 0, 164, 0, 0, 0,
	1077, 0, 0, 182, 0, 0, 0, 1047, 1048, 186,
	0, 0, 0, 292, 981, 298, 899, 951, 0, 953,
	0, 852, 0, 0, 952, 349, 0, 356, 0, 1002,
	0, 0, 1025, 0, 1058, 1060, 1068, 0, 0, 0,
	1167, 1169, 0, 1160, 1161, 1294, 1171, 1191, -2, 1190,
	0, 1275, 1199, 1196, 1202, 1203, 0, 411, 243, 0,
	238, 240, 0, 224, 0, 0, 880, 885, 0, 0,
	0, 0, 0, 1182, 1184, 0, 230, 0, 681, 703,
	761, 794, 904, 0, 0, 796, 0, 0, 1297, 1284,
	1285, 1282, 1080, 1548, 1552, 0, 0, 0, 1554, -2,
	0, 1576, -2, -2, 1783, 1835, 1625, 1275, 1647, 1649,
	1636, 1829, 1498, 0, 1734, 1731, 0, 1718, 0, 1671,
	1672, 0, 0, 1675, 1677, 1678, 1679, 1437, 1430, 1429,
	1808, 0, 0, 0, 0, 1709, 1259, 0, 1723, 0,
	0, 1319, 1723, 1723, 1358, 0, 1360, 1327, 1320, 0,
	1902, 1353, 1345, 0, 0, 1396, 1401, 0, 1407, 1452,
	128, 129, 131, 0, 918, 0, 921, 0, 0, 0,
	0, 928, 929, 0, 0, 0, 0, 0, 938, 0,
	967, 977, 0, 1286, 0, 0, 0, 136, 156, 0,
	0, 1098, 0, 0, 161, 161, 0, 0, 1083, 1085,
	0, 0, 0, 0, 116, 0, 0, 1087, 1091, 1089,
	1093, 0, 0, 1095, 173, 174, 0, 161, 0, 166,
	161, 161, 1077, 0, 190, 0, 193, 0, 196, 197,
	0, 236, 192, 0, 907, 0, 963, 955, 956, 957,
	0, 962, 964, 0, 0, 865, 0, 861, 0, 0,
	854, 878, 851, 0, 354, 999, 1033, 981, 1051, 0,
	0, 0, 0, 0, 0, 1157, 1169, 0, 1162, 1163,
	1193, 1293, 0, 0, 0, 1179, 1294, 0, 245, 246,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 246,
	549, 551, 0, 0, 557, 903, 0, 0, 0, 0,
	1283, 1556, -2, -2, 1577, 0, 1903, 1905, 1275, 0,
	1720, 1277, 0, 0, -2, 0, 0, 0, 1260, 1243,
	0, 1310, 1308, 1244, 1245, 1379, 0, 1348, 0, 1403,
	133, 0, 922, 923, 1886, 925, 0, 927, 930, 0,
	933, 1926, 0, 937, 0, 946, 968, 0, 899, 0,
	973, 974, 975, 1074, 1075, 979, 0, 135, 137, 155,
	1077, 0, 138, 145, 0, 0, 92, 0, 0, 1981,
	119, 117, 115, 94, 0, 175, 181, 1076, 170, 183,
	161, 0, 0, 0, 0, 0, 0, 0, 851, 906,
	0, 954, 0, 965, 966, 855, 0, 853, 0, 0,
	0, 0, 0, 355, 358, 0, 361, 0, 1061, 0,
	1067, 0, 0, 0, 0, 1164, 1165, 370, 0, 0,
	0, 1193, 1204, 223, 0, 0, 886, 889, 890, 891,
	892, 893, 894, 895, 896, 897, 887, 979, 0, 0,
	943, 0, 228, 0, 553, 0, 555, 0, 795, 797,
	0, 0, 1648, 1738, 0, 0, 1673, 1674, -2, 0,
	1614, 1722, 1724, 0, 1321, 1397, 920, 924, 0, 0,
	0, 985, 0, 0, 939, 0, 971, 972, 907, 0,
	899, 0, 0, 158, 0, 0, 0, 0, 0, 0,
	0, 165, 184, 1077, 194, 0, 195, 198, 209, 0,
	1034, 855, 0, 0, 863, 0, 866, 0, 862, 859,
	860, 899, 0, 359, 360, 0, 0, 1068, 0, 0,
	1166, 1167, 0, 1186, 1187, 1189, 1194, 0, 0, 977,
	979, 1394, 0, 552, 0, 0, 800, 801, 0, 0,
	0, 0, 1733, 1278, 1615, 0, 0, 0, 0, 932,
	990, 0, 0, 0, 969, 970, 967, 0, 948, 0,
	981, 140, 0, 979, 0, 911, 0, 0, 914, 0,
	0, 120, 1981, 118, 0, 161, 191, 212, 0, 205,
	206, 203, 204, 849, 0, 0, 959, 961, 0, 867,
	907, 865, 1035, 979, 0, 977, 0, 1158, 0, 1188,
	246, 246, 899, 977, 942, 246, 554, 556, 1730, 1750,
	1739, -2, 2196, 1985, 0, 1750, 1750, 1725, 1726, 0,
	0, 934, 986, 987, 0, 982, 983, 984, 1925, 935,
	936, 1394, 976, 0, 985, 157, 899, 908, 0, 0,
	909, 0, 0, 123, 0, 125, 185, 199, 0, 0,
	0, 958, 0, 0, 0, 0, 851, 855, 977, 0,
	899, 0, 1394, 225, 226, 907, 899, 227, 1735, 0,
	0, 1741, 1742, 1743, 1744, 1745, 1736, 1737, 926, 0,
	988, 0, 989, 0, 0, 0, 947, 0, 990, 143,
	912, 0, 915, 0, 121, 0, 207, 208, 0, 960,
	856, 0, 858, 855, 864, 899, 0, 907, 0, 1185,
	1394, 907, 0, 1747, 1748, 0, 0, 0, 991, 0,
	994, 995, 0, 992, 0, 967, 0, 0, 0, 902,
	857, 850, 907, 979, 1394, 977, 940, 1394, 1746, 1749,
	1740, 931, 993, 996, 997, 978, 949, 0, 0, 0,
	898, 900, 901, 1394, 977, 1064, 899, 941, 907, 0,
	210, 0, 1062, 899, 907, 913, 0, 0, 907, 1394,
	0, 211, 1394, 1065, 0, 1063, 907, 916,
}
var sqlTok1 = [...]int{

	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 490, 3, 496, 491, 3,
	501, 502, 494, 492, 506, 493, 503, 495, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 509, 3,
	482, 484, 483, 487, 505, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 499, 3, 500, 497, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 507, 489, 508, 485,
}
var sqlTok2 = [...]int{

	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 243, 244, 245, 246, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257,
}
var sqlTok3 = [...]int{
	57600, 258, 57601, 259, 57602, 260, 57603, 261, 57604, 262,
	57605, 263, 57606, 264, 57607, 265, 57608, 266, 57609, 267,
	57610, 268, 57611, 269, 57612, 270, 57613, 271, 57614, 272,
	57615, 273, 57616, 274, 57617, 275, 57618, 276, 57619, 277,
	57620, 278, 57621, 279, 57622, 280, 57623, 281, 57624, 282,
	57625, 283, 57626, 284, 57627, 285, 57628, 286, 57629, 287,
	57630, 288, 57631, 289, 57632, 290, 57633, 291, 57634, 292,
	57635, 293, 57636, 294, 57637, 295, 57638, 296, 57639, 297,
	57640, 298, 57641, 299, 57642, 300, 57643, 301, 57644, 302,
	57645, 303, 57646, 304, 57647, 305, 57648, 306, 57649, 307,
	57650, 308, 57651, 309, 57652, 310, 57653, 311, 57654, 312,
	57655, 313, 57656, 314, 57657, 315, 57658, 316, 57659, 317,
	57660, 318, 57661, 319, 57662, 320, 57663, 321, 57664, 322,
	57665, 323, 57666, 324, 57667, 325, 57668, 326, 57669, 327,
	57670, 328, 57671, 329, 57672, 330, 57673, 331, 57674, 332,
	57675, 333, 57676, 334, 57677, 335, 57678, 336, 57679, 337,
	57680, 338, 57681, 339, 57682, 340, 57683, 341, 57684, 342,
	57685, 343, 57686, 344, 57687, 345, 57688, 346, 57689, 347,
	57690, 348, 57691, 349, 57692, 350, 57693, 351, 57694, 352,
	57695, 353, 57696, 354, 57697, 355, 57698, 356, 57699, 357,
	57700, 358, 57701, 359, 57702, 360, 57703, 361, 57704, 362,
	57705, 363, 57706, 364, 57707, 365, 57708, 366, 57709, 367,
	57710, 368, 57711, 369, 57712, 370, 57713, 371, 57714, 372,
	57715, 373, 57716, 374, 57717, 375, 57718, 376, 57719, 377,
	57720, 378, 57721, 379, 57722, 380, 57723, 381, 57724, 382,
	57725, 383, 57726, 384, 57727, 385, 57728, 386, 57729, 387,
	57730, 388, 57731, 389, 57732, 390, 57733, 391, 57734, 392,
	57735, 393, 57736, 394, 57737, 395, 57738, 396, 57739, 397,
	57740, 398, 57741, 399, 57742, 400, 57743, 401, 57744, 402,
	57745, 403, 57746, 404, 57747, 405, 57748, 406, 57749, 407,
	57750, 408, 57751, 409, 57752, 410, 57753, 411, 57754, 412,
	57755, 413, 57756, 414, 57757, 415, 57758, 416, 57759, 417,
	57760, 418, 57761, 419, 57762, 420, 57763, 421, 57764, 422,
	57765, 423, 57766, 424, 57767, 425, 57768, 426, 57769, 427,
	57770, 428, 57771, 429, 57772, 430, 57773, 431, 57774, 432,
	57775, 433, 57776, 434, 57777, 435, 57778, 436, 57779, 437,
	57780, 438, 57781, 439, 57782, 440, 57783, 441, 57784, 442,
	57785, 443, 57786, 444, 57787, 445, 57788, 446, 57789, 447,
	57790, 448, 57791, 449, 57792, 450, 57793, 451, 57794, 452,
	57795, 453, 57796, 454, 57797, 455, 57798, 456, 57799, 457,
	57800, 458, 57801, 459, 57802, 460, 57803, 461, 57804, 462,
	57805, 463, 57806, 464, 57807, 465, 57808, 466, 57809, 467,
	57810, 468, 57811, 469, 57812, 470, 57813, 471, 57814, 472,
	57815, 473, 57816, 474, 57817, 475, 57818, 476, 57819, 477,
	57820, 478, 57821, 479, 57822, 480, 57823, 481, 57824, 486,
	57825, 488, 57826, 498, 57827, 504, 0,
}

var sqlErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	sqlDebug        = 0
	sqlErrorVerbose = false
)

type sqlLexer interface {
	Lex(lval *sqlSymType) int
	Error(s string)
}

type sqlParser interface {
	Parse(sqlLexer) int
	Lookahead() int
}

type sqlParserImpl struct {
	lval  sqlSymType
	stack [sqlInitialStackSize]sqlSymType
	char  int
}

func (p *sqlParserImpl) Lookahead() int {
	return p.char
}

func sqlNewParser() sqlParser {
	return &sqlParserImpl{}
}

const sqlFlag = -1000

func sqlTokname(c int) string {
	if c >= 1 && c-1 < len(sqlToknames) {
		if sqlToknames[c-1] != "" {
			return sqlToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func sqlStatname(s int) string {
	if s >= 0 && s < len(sqlStatenames) {
		if sqlStatenames[s] != "" {
			return sqlStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func sqlErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !sqlErrorVerbose {
		return "syntax error"
	}

	for _, e := range sqlErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + sqlTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := sqlPact[state]
	for tok := TOKSTART; tok-1 < len(sqlToknames); tok++ {
		if n := base + tok; n >= 0 && n < sqlLast && sqlChk[sqlAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if sqlDef[state] == -2 {
		i := 0
		for sqlExca[i] != -1 || sqlExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; sqlExca[i] >= 0; i += 2 {
			tok := sqlExca[i]
			if tok < TOKSTART || sqlExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if sqlExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += sqlTokname(tok)
	}
	return res
}

func sqllex1(lex sqlLexer, lval *sqlSymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = sqlTok1[0]
		goto out
	}
	if char < len(sqlTok1) {
		token = sqlTok1[char]
		goto out
	}
	if char >= sqlPrivate {
		if char < sqlPrivate+len(sqlTok2) {
			token = sqlTok2[char-sqlPrivate]
			goto out
		}
	}
	for i := 0; i < len(sqlTok3); i += 2 {
		token = sqlTok3[i+0]
		if token == char {
			token = sqlTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = sqlTok2[1] /* unknown char */
	}
	if sqlDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", sqlTokname(token), uint(char))
	}
	return char, token
}

func sqlParse(sqllex sqlLexer) int {
	return sqlNewParser().Parse(sqllex)
}

func (sqlrcvr *sqlParserImpl) Parse(sqllex sqlLexer) int {
	var sqln int
	var sqlVAL sqlSymType
	var sqlDollar []sqlSymType
	_ = sqlDollar // silence set and not used
	sqlS := sqlrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	sqlstate := 0
	sqlrcvr.char = -1
	sqltoken := -1 // sqlrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		sqlstate = -1
		sqlrcvr.char = -1
		sqltoken = -1
	}()
	sqlp := -1
	goto sqlstack

ret0:
	return 0

ret1:
	return 1

sqlstack:
	/* put a state and value onto the stack */
	if sqlDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", sqlTokname(sqltoken), sqlStatname(sqlstate))
	}

	sqlp++
	if sqlp >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlS[sqlp] = sqlVAL
	sqlS[sqlp].yys = sqlstate

sqlnewstate:
	sqln = sqlPact[sqlstate]
	if sqln <= sqlFlag {
		goto sqldefault /* simple state */
	}
	if sqlrcvr.char < 0 {
		sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
	}
	sqln += sqltoken
	if sqln < 0 || sqln >= sqlLast {
		goto sqldefault
	}
	sqln = sqlAct[sqln]
	if sqlChk[sqln] == sqltoken { /* valid shift */
		sqlrcvr.char = -1
		sqltoken = -1
		sqlVAL = sqlrcvr.lval
		sqlstate = sqln
		if Errflag > 0 {
			Errflag--
		}
		goto sqlstack
	}

sqldefault:
	/* default state action */
	sqln = sqlDef[sqlstate]
	if sqln == -2 {
		if sqlrcvr.char < 0 {
			sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if sqlExca[xi+0] == -1 && sqlExca[xi+1] == sqlstate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			sqln = sqlExca[xi+0]
			if sqln < 0 || sqln == sqltoken {
				break
			}
		}
		sqln = sqlExca[xi+1]
		if sqln < 0 {
			goto ret0
		}
	}
	if sqln == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			sqllex.Error(sqlErrorMessage(sqlstate, sqltoken))
			Nerrs++
			if sqlDebug >= 1 {
				__yyfmt__.Printf("%s", sqlStatname(sqlstate))
				__yyfmt__.Printf(" saw %s\n", sqlTokname(sqltoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for sqlp >= 0 {
				sqln = sqlPact[sqlS[sqlp].yys] + sqlErrCode
				if sqln >= 0 && sqln < sqlLast {
					sqlstate = sqlAct[sqln] /* simulate a shift of "error" */
					if sqlChk[sqlstate] == sqlErrCode {
						goto sqlstack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if sqlDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", sqlS[sqlp].yys)
				}
				sqlp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if sqlDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", sqlTokname(sqltoken))
			}
			if sqltoken == sqlEofCode {
				goto ret1
			}
			sqlrcvr.char = -1
			sqltoken = -1
			goto sqlnewstate /* try again in the same state */
		}
	}

	/* reduction by production sqln */
	if sqlDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", sqln, sqlStatname(sqlstate))
	}

	sqlnt := sqln
	sqlpt := sqlp
	_ = sqlpt // guard against "declared and not used"

	sqlp -= sqlR2[sqln]
	// sqlp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if sqlp+1 >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlVAL = sqlS[sqlp+1]

	/* consult goto table to find next state */
	sqln = sqlR1[sqln]
	sqlg := sqlPgo[sqln]
	sqlj := sqlg + sqlS[sqlp].yys + 1

	if sqlj >= sqlLast {
		sqlstate = sqlAct[sqlg]
	} else {
		sqlstate = sqlAct[sqlj]
		if sqlChk[sqlstate] != -sqln {
			sqlstate = sqlAct[sqlg]
		}
	}
	// dummy call; replaced with literal code
	switch sqlnt {

	case 1:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1196
		{
			sqllex.(*lexer).SetStmt(sqlDollar[1].union.stmt())
		}
	case 2:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1201
		{
			return helpWith(sqllex, "")
		}
	case 5:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1203
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 9:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1206
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 11:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1207
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 13:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1208
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 15:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1209
		{
			return helpWith(sqllex, "GRANT")
		}
	case 17:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1210
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 19:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1211
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 21:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1212
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 23:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1213
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 29:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1220
		{
			sqlVAL.union.val = tree.Statement(nil)
		}
	case 32:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1229
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 33:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1230
		{
			return helpWith(sqllex, "ALTER")
		}
	case 35:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1233
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 37:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1234
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 39:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1235
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 41:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1236
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 43:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1237
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 45:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1238
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 47:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1239
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 49:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1240
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 51:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1241
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 61:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1297
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 63:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1323
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 66:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1336
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 70:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1353
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 71:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1357
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[3].union.unresolvedObjectName(), Options: sqlDollar[4].union.seqOpts(), IfExists: false}
		}
	case 72:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1361
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[5].union.unresolvedObjectName(), Options: sqlDollar[6].union.seqOpts(), IfExists: true}
		}
	case 75:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1375
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 77:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1394
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 86:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1426
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 87:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1430
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[3].union.unresolvedObjectName(), IfExists: false, Cmds: sqlDollar[4].union.alterTableCmds()}
		}
	case 88:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1434
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[5].union.unresolvedObjectName(), IfExists: true, Cmds: sqlDollar[6].union.alterTableCmds()}
		}
	case 89:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1440
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[3].union.tableIndexName(), IfExists: false, Cmds: sqlDollar[4].union.alterIndexCmds()}
		}
	case 90:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1444
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[5].union.tableIndexName(), IfExists: true, Cmds: sqlDollar[6].union.alterIndexCmds()}
		}
	case 91:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1450
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   tree.Expr(nil),
			}
		}
	case 92:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1459
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   sqlDollar[9].union.expr(),
			}
		}
	case 93:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1470
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: tree.Expr(nil)}
		}
	case 94:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1474
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: sqlDollar[9].union.expr()}
		}
	case 95:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1480
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 96:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1488
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				All:          true,
			}
		}
	case 97:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1498
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 98:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1502
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), All: true}
		}
	case 101:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1512
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[5].union.slct(),
			}
		}
	case 102:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1523
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[5].union.slct()}
		}
	case 103:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1530
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:  tree.TableIndexName{Table: name},
				Rows:          sqlDollar[6].union.slct(),
				RelocateLease: true,
			}
		}
	case 104:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1542
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), RelocateLease: true}
		}
	case 105:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1549
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 106:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1557
		{

			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: sqlDollar[4].union.expr()}
		}
	case 107:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1562
		{
			sqlVAL.union.val = &tree.SetZoneConfig{Options: sqlDollar[4].union.kvOptions()}
		}
	case 108:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1566
		{

			sqlVAL.union.val = &tree.SetZoneConfig{SetDefault: true}
		}
	case 109:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1571
		{
			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: tree.DNull}
		}
	case 110:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1577
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{Database: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 111:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1585
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
			}
			sqlVAL.union.val = s
		}
	case 112:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1596
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[3].union.tableIndexName(),
			}
			sqlVAL.union.val = s
		}
	case 113:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1606
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 114:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1616
		{
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 115:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1625
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[9].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			s.AllIndexes = true
			sqlVAL.union.val = s
		}
	case 116:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1636
		{
			err := errors.New("index name should not be specified in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION ... OF INDEX")
			return setErr(sqllex, err)
		}
	case 117:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1642
		{
			err := errors.New("index wildcard unsupported in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION <partition> OF INDEX <tablename>@*")
			return setErr(sqllex, err)
		}
	case 118:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1650
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), "."))}}
		}
	case 119:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1654
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), ".")), Value: sqlDollar[3].union.expr()}}
		}
	case 120:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1658
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), ".")), Value: sqlDollar[5].union.expr()})
		}
	case 121:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1662
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), "."))})
		}
	case 122:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1668
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 123:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:1673
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{
				TableOrIndex: tree.TableIndexName{Table: name},
				From:         sqlDollar[7].union.exprs(),
				To:           sqlDollar[11].union.exprs(),
			}
		}
	case 124:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1684
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName()}
		}
	case 125:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:1688
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName(), From: sqlDollar[7].union.exprs(), To: sqlDollar[11].union.exprs()}
		}
	case 126:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1694
		{
			sqlVAL.union.val = tree.AlterTableCmds{sqlDollar[1].union.alterTableCmd()}
		}
	case 127:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1698
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterTableCmds(), sqlDollar[3].union.alterTableCmd())
		}
	case 128:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1705
		{
			sqlVAL.union.val = &tree.AlterTableRenameColumn{Column: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 129:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1710
		{
			sqlVAL.union.val = &tree.AlterTableRenameConstraint{Constraint: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 130:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1715
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[2].union.colDef()}
		}
	case 131:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1720
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[5].union.colDef()}
		}
	case 132:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1725
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[3].union.colDef()}
		}
	case 133:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1730
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[6].union.colDef()}
		}
	case 134:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1735
		{
			sqlVAL.union.val = &tree.AlterTableSetDefault{Column: tree.Name(sqlDollar[3].str), Default: sqlDollar[4].union.expr()}
		}
	case 135:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1740
		{
			sqlVAL.union.val = &tree.AlterTableDropNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 136:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1745
		{
			sqlVAL.union.val = &tree.AlterTableDropStored{Column: tree.Name(sqlDollar[3].str)}
		}
	case 137:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1750
		{
			sqlVAL.union.val = &tree.AlterTableSetNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 138:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1755
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     true,
				Column:       tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 139:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1764
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     false,
				Column:       tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 140:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1776
		{
			sqlVAL.union.val = &tree.AlterTableAlterColumnType{
				Column:    tree.Name(sqlDollar[3].str),
				ToType:    sqlDollar[6].union.typeReference(),
				Collation: sqlDollar[7].str,
				Using:     sqlDollar[8].union.expr(),
			}
		}
	case 141:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1786
		{
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      sqlDollar[2].union.constraintDef(),
				ValidationBehavior: sqlDollar[3].union.validationBehavior(),
			}
		}
	case 142:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1793
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "alter constraint")
		}
	case 143:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:1797
		{
			sqlVAL.union.val = &tree.AlterTableAlterPrimaryKey{
				Columns:    sqlDollar[7].union.idxElems(),
				Sharded:    sqlDollar[9].union.shardedIndexDef(),
				Interleave: sqlDollar[10].union.interleave(),
			}
		}
	case 144:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1805
		{
			sqlVAL.union.val = &tree.AlterTableValidateConstraint{
				Constraint: tree.Name(sqlDollar[3].str),
			}
		}
	case 145:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1812
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     true,
				Constraint:   tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 146:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1821
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     false,
				Constraint:   tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 147:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1830
		{
			sqlVAL.union.val = &tree.AlterTableSetAudit{Mode: sqlDollar[3].union.auditMode()}
		}
	case 148:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1835
		{
			sqlVAL.union.val = &tree.AlterTablePartitionBy{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 149:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1842
		{

			sqlVAL.union.val = &tree.AlterTableInjectStats{
				Stats: sqlDollar[3].union.expr(),
			}
		}
	case 150:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1850
		{
			sqlVAL.union.val = tree.AuditModeReadWrite
		}
	case 151:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1851
		{
			sqlVAL.union.val = tree.AuditModeDisable
		}
	case 152:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1855
		{
			sqlVAL.union.val = tree.AlterIndexCmds{sqlDollar[1].union.alterIndexCmd()}
		}
	case 153:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1859
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterIndexCmds(), sqlDollar[3].union.alterIndexCmd())
		}
	case 154:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1865
		{
			sqlVAL.union.val = &tree.AlterIndexPartitionBy{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 155:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1873
		{
			sqlVAL.union.val = sqlDollar[3].union.expr()
		}
	case 156:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1877
		{
			sqlVAL.union.val = nil
		}
	case 157:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1883
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 158:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1887
		{
			sqlVAL.union.val = nil
		}
	case 159:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1894
		{
			sqlVAL.union.val = tree.DropCascade
		}
	case 160:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1898
		{
			sqlVAL.union.val = tree.DropRestrict
		}
	case 161:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1902
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 162:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1908
		{
			sqlVAL.union.val = tree.ValidationSkip
		}
	case 163:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1912
		{
			sqlVAL.union.val = tree.ValidationDefault
		}
	case 164:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1937
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      sqlDollar[6].str,
					IfNotExists: false,
					Placement:   sqlDollar[7].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 165:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:1948
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      sqlDollar[9].str,
					IfNotExists: true,
					Placement:   sqlDollar[10].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 166:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1959
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRenameValue{
					OldVal: sqlDollar[6].str,
					NewVal: sqlDollar[8].str,
				},
			}
		}
	case 167:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1969
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRename{
					NewName: sqlDollar[6].str,
				},
			}
		}
	case 168:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1978
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeSetSchema{
					Schema: sqlDollar[6].str,
				},
			}
		}
	case 169:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1987
		{
			return unimplementedWithIssueDetail(sqllex, 48700, "ALTER TYPE OWNER TO")
		}
	case 170:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1991
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 171:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1995
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 172:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1998
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 173:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2002
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      true,
				ExistingVal: sqlDollar[2].str,
			}
		}
	case 174:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2009
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      false,
				ExistingVal: sqlDollar[2].str,
			}
		}
	case 175:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2016
		{
			sqlVAL.union.val = (*tree.AlterTypeAddValuePlacement)(nil)
		}
	case 186:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2061
		{
			backup := &tree.Backup{
				To:              sqlDollar[4].union.stringOrPlaceholderOptList(),
				IncrementalFrom: sqlDollar[6].union.exprs(),
				AsOf:            sqlDollar[5].union.asOfClause(),
				Options:         *sqlDollar[7].union.backupOptions(),
			}

			tl := sqlDollar[2].union.targetListPtr()
			if tl == nil {
				backup.DescriptorCoverage = tree.AllDescriptors
			} else {
				backup.DescriptorCoverage = tree.RequestedDescriptors
				backup.Targets = *tl
			}

			sqlVAL.union.val = backup
		}
	case 187:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2079
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 188:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2083
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 189:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2087
		{
			t := sqlDollar[1].union.targetList()
			sqlVAL.union.val = &t
		}
	case 190:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2095
		{
			sqlVAL.union.val = sqlDollar[2].union.backupOptions()
		}
	case 191:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2099
		{
			sqlVAL.union.val = sqlDollar[4].union.backupOptions()
		}
	case 192:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2103
		{
			sqlVAL.union.val = &tree.BackupOptions{}
		}
	case 193:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2110
		{
			sqlVAL.union.val = sqlDollar[1].union.backupOptions()
		}
	case 194:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2114
		{
			if err := sqlDollar[1].union.backupOptions().CombineWith(sqlDollar[3].union.backupOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 195:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2123
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 196:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2127
		{
			sqlVAL.union.val = &tree.BackupOptions{CaptureRevisionHistory: true}
		}
	case 197:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2131
		{
			sqlVAL.union.val = &tree.BackupOptions{Detached: true}
		}
	case 198:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2135
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 199:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2216
		{
			sqlVAL.union.val = &tree.ScheduledBackup{
				ScheduleName:    sqlDollar[3].union.expr(),
				Recurrence:      sqlDollar[10].union.expr(),
				FullBackup:      sqlDollar[11].union.fullBackupClause(),
				To:              sqlDollar[8].union.stringOrPlaceholderOptList(),
				Targets:         sqlDollar[6].union.targetListPtr(),
				BackupOptions:   *(sqlDollar[9].union.backupOptions()),
				ScheduleOptions: sqlDollar[12].union.kvOptions(),
			}
		}
	case 200:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2227
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 202:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2232
		{
			sqlVAL.union.val = nil
		}
	case 203:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2240
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 204:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2244
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 205:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2252
		{
			sqlVAL.union.val = nil
		}
	case 206:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2258
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 207:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2266
		{
			sqlVAL.union.val = &tree.FullBackupClause{Recurrence: sqlDollar[3].union.expr()}
		}
	case 208:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2270
		{
			sqlVAL.union.val = &tree.FullBackupClause{AlwaysFull: true}
		}
	case 209:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2274
		{
			sqlVAL.union.val = (*tree.FullBackupClause)(nil)
		}
	case 210:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2280
		{
			sqlVAL.union.val = sqlDollar[5].union.kvOptions()
		}
	case 211:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2284
		{
			sqlVAL.union.val = sqlDollar[6].union.kvOptions()
		}
	case 212:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2288
		{
			sqlVAL.union.val = nil
		}
	case 213:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2314
		{
			sqlVAL.union.val = &tree.Restore{DescriptorCoverage: tree.AllDescriptors, From: sqlDollar[3].union.listOfStringOrPlaceholderOptList(), AsOf: sqlDollar[4].union.asOfClause(), Options: sqlDollar[5].union.kvOptions()}
		}
	case 214:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2318
		{
			sqlVAL.union.val = &tree.Restore{Targets: sqlDollar[2].union.targetList(), From: sqlDollar[4].union.listOfStringOrPlaceholderOptList(), AsOf: sqlDollar[5].union.asOfClause(), Options: sqlDollar[6].union.kvOptions()}
		}
	case 215:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2321
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 216:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2325
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList{sqlDollar[1].union.expr()}
		}
	case 217:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2329
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList(sqlDollar[2].union.exprs())
		}
	case 218:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2335
		{
			sqlVAL.union.val = []tree.StringOrPlaceholderOptList{sqlDollar[1].union.stringOrPlaceholderOptList()}
		}
	case 219:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2339
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listOfStringOrPlaceholderOptList(), sqlDollar[3].union.stringOrPlaceholderOptList())
		}
	case 220:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2345
		{
			sqlVAL.str = strings.ToUpper(sqlDollar[1].str)
		}
	case 221:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2382
		{

			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[4].union.expr()}, Options: sqlDollar[6].union.kvOptions()}
		}
	case 222:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2387
		{
			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[3].union.expr()}, Options: sqlDollar[4].union.kvOptions()}
		}
	case 223:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2391
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[7].union.expr()}, Options: sqlDollar[9].union.kvOptions()}
		}
	case 224:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2397
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[6].union.expr()}, Options: sqlDollar[7].union.kvOptions()}
		}
	case 225:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2402
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateFile: sqlDollar[6].union.expr(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 226:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2407
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateDefs: sqlDollar[5].union.tblDefs(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 227:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2412
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: sqlDollar[5].union.nameList(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 228:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2417
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: nil, FileFormat: sqlDollar[4].str, Files: sqlDollar[7].union.exprs(), Options: sqlDollar[9].union.kvOptions()}
		}
	case 229:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2421
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 230:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2437
		{
			sqlVAL.union.val = &tree.Export{Query: sqlDollar[7].union.slct(), FileFormat: sqlDollar[3].str, File: sqlDollar[4].union.expr(), Options: sqlDollar[5].union.kvOptions()}
		}
	case 231:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2440
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 232:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2444
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 233:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2448
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 234:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2456
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 235:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2460
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 236:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2466
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 237:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2470
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 238:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2476
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 239:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2480
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 240:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2484
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 241:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2488
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 242:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2494
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 243:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2498
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[3].union.kvOption())
		}
	case 244:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2504
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 245:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2508
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 246:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2512
		{
			sqlVAL.union.val = nil
		}
	case 247:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2518
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CopyFrom{
				Table:   name,
				Columns: sqlDollar[3].union.nameList(),
				Stdin:   true,
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 249:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2532
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 251:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2533
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 253:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2534
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 254:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2535
		{
			return helpWith(sqllex, "CANCEL")
		}
	case 255:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2545
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.CancelJob,
			}
		}
	case 256:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2553
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 257:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2555
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 258:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2559
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 259:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2562
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 260:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2572
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 261:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2581
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 262:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2589
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 263:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2591
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 264:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2595
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 265:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2598
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 266:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2608
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 267:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2617
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 268:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2625
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 269:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2627
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 270:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2631
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 271:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2634
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 272:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2638
		{
			sqlVAL.union.val = &tree.CommentOnDatabase{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 273:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2642
		{
			sqlVAL.union.val = &tree.CommentOnTable{Table: sqlDollar[4].union.unresolvedObjectName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 274:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2646
		{
			varName, err := sqlDollar[4].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[4].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = &tree.CommentOnColumn{ColumnItem: columnItem, Comment: sqlDollar[6].union.strPtr()}
		}
	case 275:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2659
		{
			sqlVAL.union.val = &tree.CommentOnIndex{Index: sqlDollar[4].union.tableIndexName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 276:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2665
		{
			t := sqlDollar[1].str
			sqlVAL.union.val = &t
		}
	case 277:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2670
		{
			var str *string
			sqlVAL.union.val = str
		}
	case 279:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2682
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 282:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2684
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 284:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2685
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 285:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2686
		{
		}
	case 286:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2687
		{
			return helpWith(sqllex, "CREATE")
		}
	case 287:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2690
		{
			return unimplemented(sqllex, "create aggregate")
		}
	case 288:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2691
		{
			return unimplemented(sqllex, "create cast")
		}
	case 289:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2692
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create constraint")
		}
	case 290:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2693
		{
			return unimplemented(sqllex, "create conversion")
		}
	case 291:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2694
		{
			return unimplemented(sqllex, "create def conv")
		}
	case 292:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2695
		{
			return unimplemented(sqllex, "create extension "+sqlDollar[6].str)
		}
	case 293:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2696
		{
			return unimplemented(sqllex, "create extension "+sqlDollar[3].str)
		}
	case 294:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2697
		{
			return unimplemented(sqllex, "create foreign table")
		}
	case 295:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2698
		{
			return unimplemented(sqllex, "create fdw")
		}
	case 296:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2699
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 297:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2700
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 298:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2701
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create language "+sqlDollar[6].str)
		}
	case 299:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2702
		{
			return unimplementedWithIssue(sqllex, 41649)
		}
	case 300:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2703
		{
			return unimplemented(sqllex, "create operator")
		}
	case 301:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2704
		{
			return unimplemented(sqllex, "create publication")
		}
	case 302:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2705
		{
			return unimplemented(sqllex, "create rule")
		}
	case 303:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2706
		{
			return unimplemented(sqllex, "create server")
		}
	case 304:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2707
		{
			return unimplemented(sqllex, "create subscription")
		}
	case 305:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2708
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "create text")
		}
	case 306:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2709
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create")
		}
	case 307:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2712
		{
		}
	case 308:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2713
		{
		}
	case 309:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2716
		{
		}
	case 310:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2717
		{
		}
	case 311:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2720
		{
		}
	case 312:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2721
		{
		}
	case 313:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2724
		{
			return unimplemented(sqllex, "drop aggregate")
		}
	case 314:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2725
		{
			return unimplemented(sqllex, "drop cast")
		}
	case 315:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2726
		{
			return unimplemented(sqllex, "drop collation")
		}
	case 316:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2727
		{
			return unimplemented(sqllex, "drop conversion")
		}
	case 317:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2728
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "drop")
		}
	case 318:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2729
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[5].str)
		}
	case 319:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2730
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[3].str)
		}
	case 320:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2731
		{
			return unimplemented(sqllex, "drop foreign table")
		}
	case 321:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2732
		{
			return unimplemented(sqllex, "drop fdw")
		}
	case 322:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2733
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop function")
		}
	case 323:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2734
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop language "+sqlDollar[4].str)
		}
	case 324:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2735
		{
			return unimplemented(sqllex, "drop operator")
		}
	case 325:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2736
		{
			return unimplemented(sqllex, "drop publication")
		}
	case 326:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2737
		{
			return unimplemented(sqllex, "drop rule")
		}
	case 327:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2738
		{
			return unimplemented(sqllex, "drop server")
		}
	case 328:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2739
		{
			return unimplemented(sqllex, "drop subscription")
		}
	case 329:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2740
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "drop text")
		}
	case 330:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2741
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "drop")
		}
	case 333:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2745
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 335:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2746
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 337:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2747
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 339:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2748
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 341:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2749
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 342:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2751
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 344:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2752
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 346:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2753
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 348:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2754
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 349:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2764
		{
			sqlVAL.union.val = &tree.CreateStats{
				Name:        tree.Name(sqlDollar[3].str),
				ColumnNames: sqlDollar[4].union.nameList(),
				Table:       sqlDollar[6].union.tblExpr(),
				Options:     *sqlDollar[7].union.createStatsOptions(),
			}
		}
	case 350:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2772
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 351:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2776
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 352:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2780
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 353:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2786
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 354:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2790
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
			}
		}
	case 355:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2799
		{

			sqlVAL.union.val = sqlDollar[3].union.createStatsOptions()
		}
	case 356:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2806
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 357:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2812
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{}
		}
	case 358:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2818
		{
			sqlVAL.union.val = sqlDollar[1].union.createStatsOptions()
		}
	case 359:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2822
		{
			a := sqlDollar[1].union.createStatsOptions()
			b := sqlDollar[2].union.createStatsOptions()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 360:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2833
		{

			value, _ := constant.Float64Val(sqlDollar[2].union.numVal().AsConstantValue())
			if value < 0.0 || value >= 1.0 {
				sqllex.Error("THROTTLING fraction must be between 0 and 1")
				return 1
			}
			sqlVAL.union.val = &tree.CreateStatsOptions{
				Throttling: value,
			}
		}
	case 361:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2845
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 362:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2853
		{
			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				SinkURI: sqlDollar[5].union.expr(),
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 363:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2861
		{

			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 364:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2871
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[1].union.tablePatterns()}
		}
	case 365:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2875
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 366:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2881
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()}
		}
	case 367:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2885
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedObjectName().ToUnresolvedName())
		}
	case 368:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2892
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 369:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2896
		{

			sqlVAL.union.val = nil
		}
	case 370:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2910
		{
			sqlVAL.union.val = &tree.Delete{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[4].union.tblExpr(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[6].union.expr()),
				OrderBy:   sqlDollar[7].union.orderBy(),
				Limit:     sqlDollar[8].union.limit(),
				Returning: sqlDollar[9].union.retClause(),
			}
		}
	case 371:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2920
		{
			return helpWith(sqllex, "DELETE")
		}
	case 372:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2923
		{
			return unimplementedWithIssueDetail(sqllex, 40963, "delete using")
		}
	case 373:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2924
		{
		}
	case 374:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2932
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeAll}
		}
	case 375:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2935
		{
			return unimplemented(sqllex, "discard plans")
		}
	case 376:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2936
		{
			return unimplemented(sqllex, "discard sequences")
		}
	case 377:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2937
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 378:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2938
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 379:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2939
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 382:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2948
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 384:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2949
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 385:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2950
		{
		}
	case 386:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2951
		{
			return helpWith(sqllex, "DROP")
		}
	case 388:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2954
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 390:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2955
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 392:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2956
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 394:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2957
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 396:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2958
		{
			return helpWith(sqllex, "DROP SEQUENCE")
		}
	case 398:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2959
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 400:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2960
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 401:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2968
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 402:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2972
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 403:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2975
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 404:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2983
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 405:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2987
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 406:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2990
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 407:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2998
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 408:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3002
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 409:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3005
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 410:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3013
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[4].union.newTableIndexNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[5].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 411:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3022
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[6].union.newTableIndexNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[7].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 412:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3030
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 413:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3038
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[3].str),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 414:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3046
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[5].str),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 415:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3053
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 416:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3060
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[3].union.unresolvedObjectNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 417:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3068
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[5].union.unresolvedObjectNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 418:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3075
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 419:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3079
		{
			sqlVAL.union.val = []*tree.UnresolvedObjectName{sqlDollar[1].union.unresolvedObjectName()}
		}
	case 420:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3083
		{
			sqlVAL.union.val = append(sqlDollar[1].union.unresolvedObjectNames(), sqlDollar[3].union.unresolvedObjectName())
		}
	case 421:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3092
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[3].union.strs(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 422:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3100
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[5].union.strs(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 423:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3107
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 424:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3111
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 425:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3115
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 426:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3125
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[3].union.exprs(), IfExists: false, IsRole: sqlDollar[2].union.bool()}
		}
	case 427:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3129
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[5].union.exprs(), IfExists: true, IsRole: sqlDollar[2].union.bool()}
		}
	case 428:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3132
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 429:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3136
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 430:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3141
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 431:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3154
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 432:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3159
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 433:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3161
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 434:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3166
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 435:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3170
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 436:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3192
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(nil, sqlDollar[2].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 437:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3199
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 438:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3201
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(sqlDollar[3].union.strs(), sqlDollar[5].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 439:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3209
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"DISTSQL", "ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 440:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3217
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"DISTSQL", "ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 441:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3225
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 442:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3233
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 443:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3244
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 446:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3248
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 450:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3251
		{
			return helpWith(sqllex, "DELETE")
		}
	case 453:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3253
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 455:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3254
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 457:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3255
		{
			return helpWith(sqllex, "INSERT")
		}
	case 461:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3258
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 464:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3260
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 466:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3263
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 470:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3268
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 472:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3269
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 474:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3270
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 476:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3275
		{
			return helpWith(sqllex, "DELETE")
		}
	case 478:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3276
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 480:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3277
		{
			return helpWith(sqllex, "INSERT")
		}
	case 481:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3279
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 484:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3283
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 486:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3284
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 487:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3288
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 488:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3292
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 489:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3302
		{
			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: sqlDollar[5].union.stmt(),
			}
		}
	case 490:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3310
		{

			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: &tree.CannedOptPlan{Plan: sqlDollar[7].str},
			}
		}
	case 491:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3318
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 492:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3322
		{
			sqlVAL.union.val = sqlDollar[2].union.typeReferences()
		}
	case 493:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3326
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference(nil)
		}
	case 494:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3336
		{
			sqlVAL.union.val = &tree.Execute{
				Name:   tree.Name(sqlDollar[2].str),
				Params: sqlDollar[3].union.exprs(),
			}
		}
	case 495:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3343
		{

			sqlVAL.union.val = &tree.Execute{
				Name:        tree.Name(sqlDollar[2].str),
				Params:      sqlDollar[3].union.exprs(),
				DiscardRows: true,
			}
		}
	case 496:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3351
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 497:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3355
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 498:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3359
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 499:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3369
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[2].str)}
		}
	case 500:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3373
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[3].str)}
		}
	case 501:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3377
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 502:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3381
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 503:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3384
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 504:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3404
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 505:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3408
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 506:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3412
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: true}
		}
	case 507:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3415
		{
			return helpWith(sqllex, "GRANT")
		}
	case 508:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3435
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 509:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3439
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 510:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3443
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[5].union.nameList(), Members: sqlDollar[7].union.nameList(), AdminOption: true}
		}
	case 511:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3446
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 512:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3451
		{
			sqlVAL.union.val = privilege.List{privilege.ALL}
		}
	case 513:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3455
		{
			privList, err := privilege.ListFromStrings(sqlDollar[1].union.nameList().ToStrings())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = privList
		}
	case 514:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3465
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 515:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3469
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 521:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3483
		{
			return helpWith(sqllex, "RESET")
		}
	case 523:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3484
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 524:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3492
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 525:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3496
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[3].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 526:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3499
		{
			return helpWith(sqllex, "RESET")
		}
	case 527:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3507
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: tree.DefaultVal{}}
		}
	case 528:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3510
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 529:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3521
		{
			sqlVAL.union.val = &tree.SetVar{Name: "database", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 530:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3524
		{
			return helpWith(sqllex, "USE")
		}
	case 532:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3528
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 533:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3529
		{
		}
	case 534:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3530
		{
			return unimplemented(sqllex, "set constraints")
		}
	case 535:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3531
		{
			return unimplementedWithIssue(sqllex, 32562)
		}
	case 537:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3535
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 539:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3536
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 541:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3537
		{
			return helpWith(sqllex, "USE")
		}
	case 544:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3553
		{
			return helpWith(sqllex, "SCRUB")
		}
	case 545:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3568
		{
			sqlVAL.union.val = &tree.Scrub{Typ: tree.ScrubDatabase, Database: tree.Name(sqlDollar[4].str), AsOf: sqlDollar[5].union.asOfClause()}
		}
	case 546:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3571
		{
			return helpWith(sqllex, "SCRUB DATABASE")
		}
	case 547:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3589
		{
			sqlVAL.union.val = &tree.Scrub{
				Typ:     tree.ScrubTable,
				Table:   sqlDollar[4].union.unresolvedObjectName(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: sqlDollar[6].union.scrubOptions(),
			}
		}
	case 548:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3597
		{
			return helpWith(sqllex, "SCRUB TABLE")
		}
	case 549:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3601
		{
			sqlVAL.union.val = sqlDollar[3].union.scrubOptions()
		}
	case 550:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3605
		{
			sqlVAL.union.val = tree.ScrubOptions{}
		}
	case 551:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3611
		{
			sqlVAL.union.val = tree.ScrubOptions{sqlDollar[1].union.scrubOption()}
		}
	case 552:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3615
		{
			sqlVAL.union.val = append(sqlDollar[1].union.scrubOptions(), sqlDollar[3].union.scrubOption())
		}
	case 553:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3621
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{}
		}
	case 554:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3625
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{IndexNames: sqlDollar[3].union.nameList()}
		}
	case 555:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3629
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{}
		}
	case 556:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3633
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{ConstraintNames: sqlDollar[3].union.nameList()}
		}
	case 557:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3637
		{
			sqlVAL.union.val = &tree.ScrubOptionPhysical{}
		}
	case 558:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3648
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: sqlDollar[6].union.expr()}
		}
	case 559:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3651
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 562:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3661
		{
			sqlVAL.union.val = &tree.SetVar{Values: sqlDollar[4].union.exprs()}
		}
	case 563:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3677
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 564:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3681
		{
			sqlVAL.union.val = sqlDollar[2].union.stmt()
		}
	case 565:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3686
		{
			sqlVAL.union.val = &tree.SetSessionCharacteristics{Modes: sqlDollar[6].union.transactionModes()}
		}
	case 566:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3703
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[3].union.transactionModes()}
		}
	case 567:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3706
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 568:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3708
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[4].union.transactionModes()}
		}
	case 569:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3711
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 570:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3715
		{

			varName := sqlDollar[1].union.strs()
			if len(varName) == 1 && varName[0] == "tracing" {
				sqlVAL.union.val = &tree.SetTracing{Values: sqlDollar[3].union.exprs()}
			} else {
				sqlVAL.union.val = &tree.SetVar{Name: strings.Join(sqlDollar[1].union.strs(), "."), Values: sqlDollar[3].union.exprs()}
			}
		}
	case 572:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3734
		{

			sqlVAL.union.val = &tree.SetVar{Name: "timezone", Values: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 573:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3741
		{

			sqlVAL.union.val = &tree.SetVar{Name: "search_path", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 574:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3746
		{

			sqlVAL.union.val = &tree.SetSessionAuthorizationDefault{}
		}
	case 575:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3751
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 577:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3756
		{
			return unimplemented(sqllex, "set from current")
		}
	case 578:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3757
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 579:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3765
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 580:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3770
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 581:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3777
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 582:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3781
		{
			sqlVAL.union.val = append([]string{sqlDollar[1].str}, sqlDollar[2].union.strs()...)
		}
	case 583:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3787
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 584:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3791
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 586:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3798
		{
			sqlVAL.union.val = tree.Expr(&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}})
		}
	case 589:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3819
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 590:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3823
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 591:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3829
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 592:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3833
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 593:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3837
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 594:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3841
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 595:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3845
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 596:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3851
		{
			sqlVAL.union.val = tree.Low
		}
	case 597:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3855
		{
			sqlVAL.union.val = tree.Normal
		}
	case 598:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3859
		{
			sqlVAL.union.val = tree.High
		}
	case 599:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3870
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 600:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3874
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 601:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3878
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 603:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3883
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 604:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3887
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 606:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3901
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 608:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3902
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 610:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3903
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 612:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3904
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 614:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3905
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 616:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3906
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 619:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3908
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 621:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3909
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 623:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3910
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 625:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3911
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 627:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3912
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 629:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3913
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 631:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3914
		{
			return helpWith(sqllex, "SHOW QUERIES")
		}
	case 633:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3915
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 636:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3917
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 638:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3918
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 640:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3919
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 642:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3920
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 644:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3921
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 646:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3922
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 648:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3923
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 650:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3924
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 652:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3925
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 654:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3926
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 656:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3927
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 658:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3928
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 660:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3930
		{
			return helpWith(sqllex, "SHOW")
		}
	case 662:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3931
		{
			return helpWith(sqllex, "SHOW LAST QUERY STATISTICS")
		}
	case 663:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3936
		{
		}
	case 664:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3937
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 665:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3940
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 666:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3944
		{

			return purposelyUnimplemented(sqllex, "reindex table", "CockroachDB does not require reindexing.")
		}
	case 667:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3949
		{

			return purposelyUnimplemented(sqllex, "reindex index", "CockroachDB does not require reindexing.")
		}
	case 668:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3954
		{

			return purposelyUnimplemented(sqllex, "reindex database", "CockroachDB does not require reindexing.")
		}
	case 669:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3959
		{

			return purposelyUnimplemented(sqllex, "reindex system", "CockroachDB does not require reindexing.")
		}
	case 670:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3969
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[2].str}
		}
	case 671:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3970
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[3].str}
		}
	case 672:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3971
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 676:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3982
		{
			sqlVAL.str = "client_encoding"
		}
	case 678:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3985
		{
			sqlVAL.str = "timezone"
		}
	case 679:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3986
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 680:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4000
		{
			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 681:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4004
		{

			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[7].union.unresolvedObjectName(), UsingJSON: true}
		}
	case 682:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4008
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 683:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4019
		{

			id, err := sqlDollar[3].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ShowHistogram{HistogramID: id}
		}
	case 684:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4027
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 685:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4035
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupDefaultDetails,
				Path:    sqlDollar[3].union.expr(),
				Options: sqlDollar[4].union.kvOptions(),
			}
		}
	case 686:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4043
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:              tree.BackupDefaultDetails,
				ShouldIncludeSchemas: true,
				Path:                 sqlDollar[4].union.expr(),
				Options:              sqlDollar[5].union.kvOptions(),
			}
		}
	case 687:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4052
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupRangeDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 688:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4061
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupFileDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 689:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4069
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 690:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4079
		{
			sqlVAL.union.val = &tree.ShowClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), ".")}
		}
	case 691:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4083
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 692:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4086
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 693:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4088
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 694:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4091
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 695:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4093
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 696:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4097
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 697:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4100
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 698:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4108
		{
			sqlVAL.union.val = &tree.ShowColumns{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 699:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4111
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 700:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4119
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 701:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4123
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsDB: true, Database: tree.Name(sqlDollar[5].str)}
		}
	case 702:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4127
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsIndex: true, Index: sqlDollar[5].union.tableIndexName()}
		}
	case 703:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4131
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 704:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4134
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 705:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4142
		{
			sqlVAL.union.val = &tree.ShowDatabases{WithComment: sqlDollar[3].union.bool()}
		}
	case 706:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4145
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 707:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4158
		{
			lst := sqlDollar[3].union.targetListPtr()
			if lst != nil && lst.ForRoles {
				sqlVAL.union.val = &tree.ShowRoleGrants{Roles: lst.Roles, Grantees: sqlDollar[4].union.nameList()}
			} else {
				sqlVAL.union.val = &tree.ShowGrants{Targets: lst, Grantees: sqlDollar[4].union.nameList()}
			}
		}
	case 708:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4166
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 709:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4174
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 710:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4177
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 711:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4179
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 712:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4183
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 713:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4187
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 714:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4190
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 715:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4192
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 716:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4196
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 717:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4199
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 718:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4207
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 719:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4210
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 720:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4212
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 721:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4215
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 722:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4223
		{
			sqlVAL.union.val = &tree.ShowQueries{All: false, Cluster: sqlDollar[2].union.bool()}
		}
	case 723:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4226
		{
			return helpWith(sqllex, "SHOW QUERIES")
		}
	case 724:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4228
		{
			sqlVAL.union.val = &tree.ShowQueries{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 725:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4231
		{
			return helpWith(sqllex, "SHOW QUERIES")
		}
	case 726:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4235
		{
			sqlVAL.union.val = true
		}
	case 727:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4237
		{
			sqlVAL.union.val = true
		}
	case 728:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4239
		{
			sqlVAL.union.val = false
		}
	case 729:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4249
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: true}
		}
	case 730:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4253
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: false}
		}
	case 731:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4256
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 732:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4257
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 733:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4259
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[3].union.slct()}
		}
	case 734:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4263
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[5].union.slct(), Block: true}
		}
	case 735:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4266
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 736:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4268
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
			}
		}
	case 737:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4276
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				Block: true,
			}
		}
	case 738:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4284
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 739:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4294
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ExecutorType:   sqlDollar[3].union.executorType(),
			}
		}
	case 740:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4300
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 741:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4302
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: sqlDollar[2].union.scheduleState(),
				ExecutorType:   sqlDollar[4].union.executorType(),
			}
		}
	case 742:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4308
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 743:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4310
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ScheduleID:     sqlDollar[3].union.expr(),
			}
		}
	case 744:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4316
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 745:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4320
		{
			sqlVAL.union.val = tree.ActiveSchedules
		}
	case 746:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4324
		{
			sqlVAL.union.val = tree.PausedSchedules
		}
	case 747:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4330
		{
			sqlVAL.union.val = tree.InvalidExecutor
		}
	case 748:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4334
		{
			sqlVAL.union.val = tree.ScheduledBackupExecutor
		}
	case 749:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4345
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceRaw, Compact: sqlDollar[2].union.bool()}
		}
	case 750:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4348
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 751:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4350
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceKV, Compact: sqlDollar[2].union.bool()}
		}
	case 752:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4353
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 753:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4355
		{

			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceReplica, Compact: sqlDollar[2].union.bool()}
		}
	case 754:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4359
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 755:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4362
		{
			sqlVAL.union.val = true
		}
	case 756:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4363
		{
			sqlVAL.union.val = false
		}
	case 757:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4371
		{
			sqlVAL.union.val = &tree.ShowSessions{Cluster: sqlDollar[2].union.bool()}
		}
	case 758:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4374
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 759:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4376
		{
			sqlVAL.union.val = &tree.ShowSessions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 760:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4379
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 761:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4387
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
				WithComment: sqlDollar[7].union.bool()}
		}
	case 762:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4397
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
				WithComment: sqlDollar[5].union.bool()}
		}
	case 763:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4407
		{
			sqlVAL.union.val = &tree.ShowTables{WithComment: sqlDollar[3].union.bool()}
		}
	case 764:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4410
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 765:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4413
		{
			sqlVAL.union.val = true
		}
	case 766:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4414
		{
			sqlVAL.union.val = false
		}
	case 767:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4421
		{
			sqlVAL.union.val = &tree.ShowSchemas{Database: tree.Name(sqlDollar[4].str)}
		}
	case 768:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4425
		{
			sqlVAL.union.val = &tree.ShowSchemas{}
		}
	case 769:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4428
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 770:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4435
		{
			sqlVAL.union.val = &tree.ShowSequences{Database: tree.Name(sqlDollar[4].str)}
		}
	case 771:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4439
		{
			sqlVAL.union.val = &tree.ShowSequences{}
		}
	case 772:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4442
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 773:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4449
		{

			sqlVAL.union.val = &tree.ShowSyntax{Statement: sqlDollar[3].str}
		}
	case 774:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4453
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 775:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4460
		{

			sqlVAL.union.val = &tree.ShowLastQueryStatistics{}
		}
	case 776:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4470
		{
			sqlVAL.union.val = &tree.ShowSavepointStatus{}
		}
	case 777:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4473
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 778:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4481
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_isolation"}
		}
	case 779:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4486
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_priority"}
		}
	case 780:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4491
		{

			sqlVAL.union.val = &tree.ShowTransactionStatus{}
		}
	case 781:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4495
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 782:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4503
		{
			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[3].union.unresolvedObjectName()}
		}
	case 783:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4507
		{

			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 784:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4511
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 788:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4524
		{
			sqlVAL.union.val = &tree.ShowUsers{}
		}
	case 789:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4527
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 790:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4535
		{
			sqlVAL.union.val = &tree.ShowRoles{}
		}
	case 791:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4538
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 792:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4542
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[6].str)}}
		}
	case 793:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4546
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{Database: tree.Name(sqlDollar[6].str)}}
		}
	case 794:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4550
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 795:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4558
		{
			name := sqlDollar[9].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 796:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4566
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 797:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4573
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[9].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 798:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4580
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 799:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4584
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 800:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4595
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: tree.TableIndexName{Table: name},
			}
		}
	case 801:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4603
		{
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: sqlDollar[5].union.tableIndexName(),
			}
		}
	case 802:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4609
		{
			return helpWith(sqllex, "SHOW RANGE")
		}
	case 803:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4618
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 804:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4623
		{
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: sqlDollar[5].union.tableIndexName()}
		}
	case 805:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4627
		{
			sqlVAL.union.val = &tree.ShowRanges{DatabaseName: tree.Name(sqlDollar[5].str)}
		}
	case 806:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4630
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 807:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4634
		{

			sqlVAL.union.val = &tree.ShowFingerprints{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 808:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4641
		{
			tmp := sqlDollar[2].union.targetList()
			sqlVAL.union.val = &tmp
		}
	case 809:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4646
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 810:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4766
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 811:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4770
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 812:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4774
		{

			sqlVAL.union.val = tree.TargetList{
				Tables:   tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}},
				ForRoles: sqlDollar[1].str == "role",
			}
		}
	case 813:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4813
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{sqlDollar[1].union.unresolvedName()}}
		}
	case 814:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4817
		{
			remainderPats := sqlDollar[3].union.tablePatterns()
			sqlVAL.union.val = tree.TargetList{Tables: append(tree.TablePatterns{sqlDollar[1].union.unresolvedName()}, remainderPats...)}
		}
	case 815:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4822
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 816:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4826
		{
			tenID := uint64(sqlDollar[2].union.int64())
			if tenID == 0 {
				return setErr(sqllex, errors.New("invalid tenant ID"))
			}
			sqlVAL.union.val = tree.TargetList{Tenant: roachpb.MakeTenantID(tenID)}
		}
	case 817:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4834
		{
			sqlVAL.union.val = tree.TargetList{Databases: sqlDollar[2].union.nameList()}
		}
	case 818:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4843
		{
			sqlVAL.union.val = tree.TargetList{ForRoles: true, Roles: sqlDollar[2].union.nameList()}
		}
	case 820:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4850
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 821:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4854
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 823:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4867
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 825:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4868
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 826:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4869
		{
			return helpWith(sqllex, "PAUSE")
		}
	case 828:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4879
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 830:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4880
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 831:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4881
		{
			return helpWith(sqllex, "RESUME")
		}
	case 832:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4891
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
			}
		}
	case 833:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4899
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 834:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4901
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 835:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4905
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 836:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4908
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 837:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4913
		{
			sqlVAL.union.val = sqlDollar[3].union.slct()
		}
	case 838:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4917
		{
			sqlVAL.union.val = &tree.Select{
				Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
			}
		}
	case 839:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4932
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseSchedule,
			}
		}
	case 840:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4940
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 841:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4942
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.PauseSchedule,
			}
		}
	case 842:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4948
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 843:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4956
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema: sqlDollar[3].str,
			}
		}
	case 844:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4962
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].str,
				IfNotExists: true,
			}
		}
	case 845:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4968
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 846:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4979
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].str,
				Cmd: &tree.AlterSchemaRename{
					NewName: sqlDollar[6].str,
				},
			}
		}
	case 847:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4988
		{
			return unimplementedWithIssueDetail(sqllex, 50882, "ALTER SCHEMA OWNER TO")
		}
	case 848:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4991
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 849:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5030
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Interleave:    sqlDollar[8].union.interleave(),
				Defs:          sqlDollar[6].union.tblDefs(),
				AsSource:      nil,
				PartitionBy:   sqlDollar[9].union.partitionBy(),
				Temporary:     sqlDollar[2].union.persistenceType(),
				StorageParams: sqlDollar[10].union.storageParams(),
				OnCommit:      sqlDollar[11].union.createTableOnCommitSetting(),
			}
		}
	case 850:
		sqlDollar = sqlS[sqlpt-14 : sqlpt+1]
//line sql-gen.y:5045
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Interleave:    sqlDollar[11].union.interleave(),
				Defs:          sqlDollar[9].union.tblDefs(),
				AsSource:      nil,
				PartitionBy:   sqlDollar[12].union.partitionBy(),
				Temporary:     sqlDollar[2].union.persistenceType(),
				StorageParams: sqlDollar[13].union.storageParams(),
				OnCommit:      sqlDollar[14].union.createTableOnCommitSetting(),
			}
		}
	case 851:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5062
		{
			sqlVAL.union.val = nil
		}
	case 852:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5066
		{

			sqlVAL.union.val = nil
		}
	case 853:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5072
		{

			sqlVAL.union.val = sqlDollar[3].union.storageParams()
		}
	case 854:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5077
		{
			return unimplemented(sqllex, "create table with oids")
		}
	case 855:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5083
		{
			sqlVAL.union.val = tree.CreateTableOnCommitUnset
		}
	case 856:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5087
		{

			sqlVAL.union.val = tree.CreateTableOnCommitPreserveRows
		}
	case 857:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5092
		{

			return unimplementedWithIssueDetail(sqllex, 46556, "delete rows")
		}
	case 858:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5097
		{

			return unimplementedWithIssueDetail(sqllex, 46556, "drop")
		}
	case 859:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5104
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 860:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5108
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 861:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5114
		{
			sqlVAL.union.val = []tree.StorageParam{sqlDollar[1].union.storageParam()}
		}
	case 862:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5118
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParams(), sqlDollar[3].union.storageParam())
		}
	case 863:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5124
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Interleave:    nil,
				Defs:          sqlDollar[5].union.tblDefs(),
				AsSource:      sqlDollar[8].union.slct(),
				StorageParams: sqlDollar[6].union.storageParams(),
				OnCommit:      sqlDollar[10].union.createTableOnCommitSetting(),
			}
		}
	case 864:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:5137
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Interleave:    nil,
				Defs:          sqlDollar[8].union.tblDefs(),
				AsSource:      sqlDollar[11].union.slct(),
				StorageParams: sqlDollar[9].union.storageParams(),
				OnCommit:      sqlDollar[13].union.createTableOnCommitSetting(),
			}
		}
	case 865:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5151
		{
		}
	case 866:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5152
		{
		}
	case 867:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5153
		{
			return unimplemented(sqllex, "create table as with no data")
		}
	case 868:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5171
		{
			sqlVAL.union.val = true
		}
	case 869:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5172
		{
			sqlVAL.union.val = true
		}
	case 870:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5173
		{
			sqlVAL.union.val = false
		}
	case 872:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5177
		{
			sqlVAL.union.val = true
		}
	case 873:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5178
		{
			sqlVAL.union.val = true
		}
	case 874:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5179
		{
			sqlVAL.union.val = true
		}
	case 875:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5180
		{
			sqlVAL.union.val = true
		}
	case 876:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5181
		{
			return unimplemented(sqllex, "create unlogged")
		}
	case 878:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5186
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 879:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5192
		{
			sqlVAL.union.val = tree.TableDefs{sqlDollar[1].union.tblDef()}
		}
	case 880:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5196
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 881:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5202
		{
			sqlVAL.union.val = sqlDollar[1].union.colDef()
		}
	case 884:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5208
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 885:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5212
		{
			sqlVAL.union.val = &tree.LikeTableDef{
				Name:    sqlDollar[2].union.unresolvedObjectName().ToTableName(),
				Options: sqlDollar[3].union.likeTableOptionList(),
			}
		}
	case 886:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5221
		{
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), sqlDollar[3].union.likeTableOption())
		}
	case 887:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5225
		{
			opt := sqlDollar[3].union.likeTableOption()
			opt.Excluded = true
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), opt)
		}
	case 888:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5231
		{
			sqlVAL.union.val = []tree.LikeTableOption(nil)
		}
	case 889:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5236
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding comments")
		}
	case 890:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5237
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptConstraints}
		}
	case 891:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5238
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptDefaults}
		}
	case 892:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5239
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding identity")
		}
	case 893:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5240
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptGenerated}
		}
	case 894:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5241
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptIndexes}
		}
	case 895:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5242
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding statistics")
		}
	case 896:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5243
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding storage")
		}
	case 897:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5244
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptAll}
		}
	case 898:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5249
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.InterleaveDef{
				Parent:       name,
				Fields:       sqlDollar[6].union.nameList(),
				DropBehavior: sqlDollar[8].union.dropBehavior(),
			}
		}
	case 899:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5258
		{
			sqlVAL.union.val = (*tree.InterleaveDef)(nil)
		}
	case 900:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5265
		{

			sqlVAL.union.val = tree.DropCascade
		}
	case 901:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5270
		{

			sqlVAL.union.val = tree.DropRestrict
		}
	case 902:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5275
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 903:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5281
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 905:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5288
		{
			sqlVAL.str = ""
		}
	case 907:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5295
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 908:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5301
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[5].union.nameList(),
				List:   sqlDollar[8].union.listPartitions(),
			}
		}
	case 909:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5308
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[5].union.nameList(),
				Range:  sqlDollar[8].union.rangePartitions(),
			}
		}
	case 910:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5315
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 911:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5321
		{
			sqlVAL.union.val = []tree.ListPartition{sqlDollar[1].union.listPartition()}
		}
	case 912:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5325
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listPartitions(), sqlDollar[3].union.listPartition())
		}
	case 913:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5331
		{
			sqlVAL.union.val = tree.ListPartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				Exprs:        sqlDollar[5].union.exprs(),
				Subpartition: sqlDollar[7].union.partitionBy(),
			}
		}
	case 914:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5341
		{
			sqlVAL.union.val = []tree.RangePartition{sqlDollar[1].union.rangePartition()}
		}
	case 915:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5345
		{
			sqlVAL.union.val = append(sqlDollar[1].union.rangePartitions(), sqlDollar[3].union.rangePartition())
		}
	case 916:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5351
		{
			sqlVAL.union.val = tree.RangePartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				From:         sqlDollar[5].union.exprs(),
				To:           sqlDollar[9].union.exprs(),
				Subpartition: sqlDollar[11].union.partitionBy(),
			}
		}
	case 917:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5365
		{
			typ := sqlDollar[2].union.typeReference()
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), typ, tree.IsReferenceSerialType(typ), sqlDollar[3].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = tableDef
		}
	case 918:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5376
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 919:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5380
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 920:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5386
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Name: tree.Name(sqlDollar[2].str), Qualification: sqlDollar[3].union.colQualElem()}
		}
	case 921:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5390
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 922:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5394
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: tree.ColumnCollation(sqlDollar[2].str)}
		}
	case 923:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5398
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 924:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5402
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[3].str), Create: true}}
		}
	case 925:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5406
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Create: true}}
		}
	case 926:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5410
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[6].str), Create: true, IfNotExists: true}}
		}
	case 927:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5428
		{
			sqlVAL.union.val = tree.NotNullConstraint{}
		}
	case 928:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5432
		{
			sqlVAL.union.val = tree.NullConstraint{}
		}
	case 929:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5436
		{
			sqlVAL.union.val = tree.UniqueConstraint{}
		}
	case 930:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5440
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 931:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5444
		{
			sqlVAL.union.val = tree.ShardedPrimaryKeyConstraint{
				Sharded:      true,
				ShardBuckets: sqlDollar[8].union.expr(),
			}
		}
	case 932:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5451
		{
			sqlVAL.union.val = &tree.ColumnCheckConstraint{Expr: sqlDollar[3].union.expr()}
		}
	case 933:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5455
		{
			sqlVAL.union.val = &tree.ColumnDefault{Expr: sqlDollar[2].union.expr()}
		}
	case 934:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5459
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ColumnFKConstraint{
				Table:   name,
				Col:     tree.Name(sqlDollar[3].str),
				Actions: sqlDollar[5].union.referenceActions(),
				Match:   sqlDollar[4].union.compositeKeyMatchMethod(),
			}
		}
	case 935:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5469
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr()}
		}
	case 936:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5473
		{
			return unimplemented(sqllex, "virtual computed columns")
		}
	case 937:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5477
		{
			sqllex.Error("use AS ( <expr> ) STORED")
			return 1
		}
	case 938:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5484
		{
		}
	case 939:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5485
		{
		}
	case 940:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5490
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:        tree.Name(sqlDollar[2].str),
				Columns:     sqlDollar[4].union.idxElems(),
				Sharded:     sqlDollar[6].union.shardedIndexDef(),
				Storing:     sqlDollar[7].union.nameList(),
				Interleave:  sqlDollar[8].union.interleave(),
				PartitionBy: sqlDollar[9].union.partitionBy(),
				Predicate:   sqlDollar[10].union.expr(),
			}
		}
	case 941:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5502
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Name:        tree.Name(sqlDollar[3].str),
					Columns:     sqlDollar[5].union.idxElems(),
					Sharded:     sqlDollar[7].union.shardedIndexDef(),
					Storing:     sqlDollar[8].union.nameList(),
					Interleave:  sqlDollar[9].union.interleave(),
					PartitionBy: sqlDollar[10].union.partitionBy(),
					Predicate:   sqlDollar[11].union.expr(),
				},
			}
		}
	case 942:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5516
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:      tree.Name(sqlDollar[3].str),
				Columns:   sqlDollar[5].union.idxElems(),
				Inverted:  true,
				Predicate: sqlDollar[7].union.expr(),
			}
		}
	case 943:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5527
		{
			sqlVAL.union.val = &tree.FamilyTableDef{
				Name:    tree.Name(sqlDollar[2].str),
				Columns: sqlDollar[4].union.nameList(),
			}
		}
	case 944:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5539
		{
			sqlVAL.union.val = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val.(tree.ConstraintTableDef).SetName(tree.Name(sqlDollar[2].str))
		}
	case 945:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5544
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 946:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5550
		{
			sqlVAL.union.val = &tree.CheckConstraintTableDef{
				Expr: sqlDollar[3].union.expr(),
			}
		}
	case 947:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5556
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:     sqlDollar[3].union.idxElems(),
					Storing:     sqlDollar[5].union.nameList(),
					Interleave:  sqlDollar[6].union.interleave(),
					PartitionBy: sqlDollar[7].union.partitionBy(),
					Predicate:   sqlDollar[9].union.expr(),
				},
			}
		}
	case 948:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5568
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:    sqlDollar[4].union.idxElems(),
					Sharded:    sqlDollar[6].union.shardedIndexDef(),
					Interleave: sqlDollar[7].union.interleave(),
				},
				PrimaryKey: true,
			}
		}
	case 949:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5580
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ForeignKeyConstraintTableDef{
				Table:    name,
				FromCols: sqlDollar[4].union.nameList(),
				ToCols:   sqlDollar[8].union.nameList(),
				Match:    sqlDollar[9].union.compositeKeyMatchMethod(),
				Actions:  sqlDollar[10].union.referenceActions(),
			}
		}
	case 950:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5591
		{
			return unimplementedWithIssueDetail(sqllex, 46657, "add constraint exclude using")
		}
	case 951:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5598
		{
			sqlVAL.union.val = sqlDollar[2].union.val
		}
	case 952:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5602
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 953:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5608
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), nil, false, sqlDollar[2].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef
			sqlVAL.union.val = tree.TableDefs{colToTableDef}
		}
	case 954:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5618
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[3].str), nil, false, sqlDollar[4].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef

			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), colToTableDef)
		}
	case 955:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5629
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 956:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5633
		{
			var constraintToTableDef tree.TableDef = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), constraintToTableDef)
		}
	case 957:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5640
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 958:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5646
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns: sqlDollar[4].union.idxElems(),
				},
				PrimaryKey: true,
			}
		}
	case 959:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5657
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 960:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5661
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 961:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5667
		{
			sqlVAL.union.val = tree.IndexElem{Column: tree.Name(sqlDollar[1].str)}
		}
	case 962:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5673
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 963:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5677
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 964:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5683
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 965:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5687
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 966:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5693
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 967:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5698
		{
		}
	case 968:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5699
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "deferrable")
		}
	case 969:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5700
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially deferred")
		}
	case 970:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5701
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially immediate")
		}
	case 971:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5702
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially deferred")
		}
	case 972:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5703
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially immediate")
		}
	case 976:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5721
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 977:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5725
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 978:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5731
		{
			sqlVAL.union.val = &tree.ShardedIndexDef{
				ShardBuckets: sqlDollar[6].union.expr(),
			}
		}
	case 979:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5737
		{
			sqlVAL.union.val = (*tree.ShardedIndexDef)(nil)
		}
	case 980:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5743
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 981:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5747
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 982:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5767
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 983:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5771
		{
			sqlVAL.union.val = tree.MatchFull
		}
	case 984:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5775
		{
			return unimplementedWithIssueDetail(sqllex, 20305, "match partial")
		}
	case 985:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5779
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 986:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5788
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction()}
		}
	case 987:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5792
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction()}
		}
	case 988:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5796
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction(), Delete: sqlDollar[2].union.referenceAction()}
		}
	case 989:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5800
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction(), Update: sqlDollar[2].union.referenceAction()}
		}
	case 990:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5804
		{
			sqlVAL.union.val = tree.ReferenceActions{}
		}
	case 991:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5810
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 992:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5816
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 993:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5824
		{
			sqlVAL.union.val = tree.NoAction
		}
	case 994:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5828
		{
			sqlVAL.union.val = tree.Restrict
		}
	case 995:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5832
		{
			sqlVAL.union.val = tree.Cascade
		}
	case 996:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5836
		{
			sqlVAL.union.val = tree.SetNull
		}
	case 997:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5840
		{
			sqlVAL.union.val = tree.SetDefault
		}
	case 998:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5859
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name:      name,
				Temporary: sqlDollar[2].union.persistenceType(),
				Options:   sqlDollar[5].union.seqOpts(),
			}
		}
	case 999:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5868
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name: name, Options: sqlDollar[8].union.seqOpts(),
				Temporary:   sqlDollar[2].union.persistenceType(),
				IfNotExists: true,
			}
		}
	case 1000:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5876
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 1002:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5880
		{
			sqlVAL.union.val = []tree.SequenceOption(nil)
		}
	case 1003:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5883
		{
			sqlVAL.union.val = []tree.SequenceOption{sqlDollar[1].union.seqOpt()}
		}
	case 1004:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5884
		{
			sqlVAL.union.val = append(sqlDollar[1].union.seqOpts(), sqlDollar[2].union.seqOpt())
		}
	case 1005:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5887
		{
			return unimplementedWithIssueDetail(sqllex, 25110, sqlDollar[2].union.typeReference().SQLString())
		}
	case 1006:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5888
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCycle}
		}
	case 1007:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5890
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptNoCycle}
		}
	case 1008:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5891
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: nil}
		}
	case 1009:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5892
		{
			varName, err := sqlDollar[3].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[3].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: columnItem}
		}
	case 1010:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5902
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCache, IntVal: &x}
		}
	case 1011:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5905
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x}
		}
	case 1012:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5907
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x, OptionalWord: true}
		}
	case 1013:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5909
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue, IntVal: &x}
		}
	case 1014:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5911
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue}
		}
	case 1015:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5912
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue, IntVal: &x}
		}
	case 1016:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5914
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue}
		}
	case 1017:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5915
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x}
		}
	case 1018:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5917
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x, OptionalWord: true}
		}
	case 1019:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5919
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptVirtual}
		}
	case 1020:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5927
		{
			sqlVAL.union.val = &tree.Truncate{Tables: sqlDollar[3].union.tableNames(), DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 1021:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5930
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 1022:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5934
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[2].union.expr()}
		}
	case 1023:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5938
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: tree.DNull}
		}
	case 1024:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5948
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1025:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5952
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[6].union.expr(), IfNotExists: true, KVOptions: sqlDollar[7].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1026:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5955
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 1027:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5963
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1028:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5967
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[5].union.expr(), IfExists: true, KVOptions: sqlDollar[6].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1029:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5970
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 1030:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5976
		{
			sqlVAL.union.val = true
		}
	case 1031:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5980
		{

			sqlVAL.union.val = true
		}
	case 1032:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5985
		{
			sqlVAL.union.val = false
		}
	case 1033:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5995
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[6].union.nameList(),
				AsSource:    sqlDollar[8].union.slct(),
				Temporary:   sqlDollar[2].union.persistenceType(),
				IfNotExists: false,
				Replace:     false,
			}
		}
	case 1034:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6009
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[8].union.nameList(),
				AsSource:    sqlDollar[10].union.slct(),
				Temporary:   sqlDollar[4].union.persistenceType(),
				IfNotExists: false,
				Replace:     true,
			}
		}
	case 1035:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6021
		{
			name := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[9].union.nameList(),
				AsSource:    sqlDollar[11].union.slct(),
				Temporary:   sqlDollar[2].union.persistenceType(),
				IfNotExists: true,
				Replace:     false,
			}
		}
	case 1036:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6032
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 1037:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6036
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1038:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6040
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1039:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6044
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1040:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6048
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1043:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6056
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 1044:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6060
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[2].union.kvOption())
		}
	case 1045:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6066
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 1046:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6070
		{
			sqlVAL.union.val = nil
		}
	case 1047:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6076
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: sqlDollar[3].union.expr()}
		}
	case 1048:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6080
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: tree.DNull}
		}
	case 1049:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6085
		{
		}
	case 1050:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6086
		{
			return unimplemented(sqllex, "create recursive view")
		}
	case 1051:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6095
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:   sqlDollar[3].union.unresolvedObjectName(),
				Variety:    tree.Enum,
				EnumLabels: sqlDollar[7].union.strs(),
			}
		}
	case 1052:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6102
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 1053:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6104
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1054:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6106
		{
			return unimplementedWithIssue(sqllex, 27791)
		}
	case 1055:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6108
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "base")
		}
	case 1056:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6110
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "shell")
		}
	case 1057:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6112
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "create")
		}
	case 1058:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6116
		{
			sqlVAL.union.val = sqlDollar[1].union.strs()
		}
	case 1059:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6120
		{
			sqlVAL.union.val = []string(nil)
		}
	case 1060:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6126
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 1061:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6130
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 1062:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:6148
		{
			table := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:         tree.Name(sqlDollar[5].str),
				Table:        table,
				Unique:       sqlDollar[2].union.bool(),
				Columns:      sqlDollar[10].union.idxElems(),
				Sharded:      sqlDollar[12].union.shardedIndexDef(),
				Storing:      sqlDollar[13].union.nameList(),
				Interleave:   sqlDollar[14].union.interleave(),
				PartitionBy:  sqlDollar[15].union.partitionBy(),
				Predicate:    sqlDollar[16].union.expr(),
				Inverted:     sqlDollar[8].union.bool(),
				Concurrently: sqlDollar[4].union.bool(),
			}
		}
	case 1063:
		sqlDollar = sqlS[sqlpt-19 : sqlpt+1]
//line sql-gen.y:6165
		{
			table := sqlDollar[10].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:         tree.Name(sqlDollar[8].str),
				Table:        table,
				Unique:       sqlDollar[2].union.bool(),
				IfNotExists:  true,
				Columns:      sqlDollar[13].union.idxElems(),
				Sharded:      sqlDollar[15].union.shardedIndexDef(),
				Storing:      sqlDollar[16].union.nameList(),
				Interleave:   sqlDollar[17].union.interleave(),
				PartitionBy:  sqlDollar[18].union.partitionBy(),
				Inverted:     sqlDollar[11].union.bool(),
				Predicate:    sqlDollar[19].union.expr(),
				Concurrently: sqlDollar[4].union.bool(),
			}
		}
	case 1064:
		sqlDollar = sqlS[sqlpt-15 : sqlpt+1]
//line sql-gen.y:6183
		{
			table := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:         tree.Name(sqlDollar[6].str),
				Table:        table,
				Unique:       sqlDollar[2].union.bool(),
				Inverted:     true,
				Columns:      sqlDollar[10].union.idxElems(),
				Storing:      sqlDollar[12].union.nameList(),
				Interleave:   sqlDollar[13].union.interleave(),
				PartitionBy:  sqlDollar[14].union.partitionBy(),
				Predicate:    sqlDollar[15].union.expr(),
				Concurrently: sqlDollar[5].union.bool(),
			}
		}
	case 1065:
		sqlDollar = sqlS[sqlpt-18 : sqlpt+1]
//line sql-gen.y:6199
		{
			table := sqlDollar[11].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:         tree.Name(sqlDollar[9].str),
				Table:        table,
				Unique:       sqlDollar[2].union.bool(),
				Inverted:     true,
				IfNotExists:  true,
				Columns:      sqlDollar[13].union.idxElems(),
				Storing:      sqlDollar[15].union.nameList(),
				Interleave:   sqlDollar[16].union.interleave(),
				PartitionBy:  sqlDollar[17].union.partitionBy(),
				Predicate:    sqlDollar[18].union.expr(),
				Concurrently: sqlDollar[5].union.bool(),
			}
		}
	case 1066:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6215
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 1067:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6219
		{

			switch sqlDollar[2].str {
			case "gin", "gist":
				sqlVAL.union.val = true
			case "btree":
				sqlVAL.union.val = false
			case "hash", "spgist", "brin":
				return unimplemented(sqllex, "index using "+sqlDollar[2].str)
			default:
				sqllex.Error("unrecognized access method: " + sqlDollar[2].str)
				return 1
			}
		}
	case 1068:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6234
		{
			sqlVAL.union.val = false
		}
	case 1069:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6240
		{
			sqlVAL.union.val = true
		}
	case 1070:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6244
		{
			sqlVAL.union.val = false
		}
	case 1071:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6250
		{
			sqlVAL.union.val = true
		}
	case 1072:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6254
		{
			sqlVAL.union.val = false
		}
	case 1073:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6260
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1074:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6264
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1075:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6273
		{

			e := sqlDollar[1].union.expr()
			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			if colName, ok := e.(*tree.UnresolvedName); ok && colName.NumParts == 1 {
				sqlVAL.union.val = tree.IndexElem{Column: tree.Name(colName.Parts[0]), Direction: dir, NullsOrder: nullsOrder}
			} else {
				return unimplementedWithIssueDetail(sqllex, 9682, fmt.Sprintf("%T", e))
			}
		}
	case 1076:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6295
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1077:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6296
		{
			sqlVAL.str = ""
		}
	case 1078:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6300
		{
			sqlVAL.union.val = tree.Ascending
		}
	case 1079:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6304
		{
			sqlVAL.union.val = tree.Descending
		}
	case 1080:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6308
		{
			sqlVAL.union.val = tree.DefaultDirection
		}
	case 1081:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6314
		{
			sqlVAL.union.val = &tree.RenameDatabase{Name: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[6].str)}
		}
	case 1082:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6320
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: false}
		}
	case 1083:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6326
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: false}
		}
	case 1084:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6334
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: sqlDollar[6].str, IfExists: false,
			}
		}
	case 1085:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6340
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: sqlDollar[8].str, IfExists: true,
			}
		}
	case 1086:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6348
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: sqlDollar[6].str, IfExists: false, IsView: true,
			}
		}
	case 1087:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6354
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: sqlDollar[8].str, IfExists: true, IsView: true,
			}
		}
	case 1088:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6362
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: sqlDollar[6].str, IfExists: false, IsSequence: true,
			}
		}
	case 1089:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6368
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: sqlDollar[8].str, IfExists: true, IsSequence: true,
			}
		}
	case 1090:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6376
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: true}
		}
	case 1091:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6382
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: true}
		}
	case 1092:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6390
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsSequence: true}
		}
	case 1093:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6396
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsSequence: true}
		}
	case 1094:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6404
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[3].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[6].str), IfExists: false}
		}
	case 1095:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6408
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[5].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[8].str), IfExists: true}
		}
	case 1096:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6413
		{
		}
	case 1097:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6414
		{
		}
	case 1098:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6417
		{
		}
	case 1099:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6418
		{
		}
	case 1100:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6426
		{
			sqlVAL.union.val = &tree.ReleaseSavepoint{Savepoint: tree.Name(sqlDollar[2].str)}
		}
	case 1101:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6429
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 1102:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6439
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeJob,
			}
		}
	case 1103:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6447
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1104:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6449
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1105:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6453
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1106:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6456
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1107:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6469
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeSchedule,
			}
		}
	case 1108:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6477
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1109:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6479
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.ResumeSchedule,
			}
		}
	case 1110:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6485
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1111:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6498
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.DropSchedule,
			}
		}
	case 1112:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6506
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1113:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6508
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.DropSchedule,
			}
		}
	case 1114:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6514
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1115:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6522
		{
			sqlVAL.union.val = &tree.Savepoint{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1116:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6525
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 1118:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6529
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1120:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6530
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1122:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6531
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1124:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6547
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1125:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6550
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1126:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6552
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1127:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6555
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1128:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6565
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1129:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6568
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1130:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6570
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1131:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6573
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1132:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6577
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1133:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6582
		{
		}
	case 1134:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6583
		{
		}
	case 1135:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6584
		{
		}
	case 1136:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6594
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1137:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6598
		{
			sqlVAL.union.val = &tree.RollbackToSavepoint{Savepoint: tree.Name(sqlDollar[4].str)}
		}
	case 1138:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6601
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1139:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6604
		{
		}
	case 1140:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6605
		{
		}
	case 1141:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6609
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1142:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6613
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1143:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6619
		{
			sqlVAL.union.val = &tree.BeginTransaction{Modes: sqlDollar[1].union.transactionModes()}
		}
	case 1144:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6623
		{
			sqlVAL.union.val = &tree.BeginTransaction{}
		}
	case 1145:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6629
		{
			sqlVAL.union.val = sqlDollar[1].union.transactionModes()
		}
	case 1146:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6633
		{
			a := sqlDollar[1].union.transactionModes()
			b := sqlDollar[3].union.transactionModes()
			err := a.Merge(b)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1147:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6646
		{
		}
	case 1148:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6648
		{
		}
	case 1149:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6652
		{

			sqlVAL.union.val = tree.TransactionModes{Isolation: sqlDollar[1].union.isoLevel()}
		}
	case 1150:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6657
		{
			sqlVAL.union.val = tree.TransactionModes{UserPriority: sqlDollar[1].union.userPriority()}
		}
	case 1151:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6661
		{
			sqlVAL.union.val = tree.TransactionModes{ReadWriteMode: sqlDollar[1].union.readWriteMode()}
		}
	case 1152:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6665
		{
			sqlVAL.union.val = tree.TransactionModes{AsOf: sqlDollar[1].union.asOfClause()}
		}
	case 1153:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6671
		{
			sqlVAL.union.val = sqlDollar[2].union.userPriority()
		}
	case 1154:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6677
		{
			sqlVAL.union.val = sqlDollar[3].union.isoLevel()
		}
	case 1155:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6683
		{
			sqlVAL.union.val = tree.ReadOnly
		}
	case 1156:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6687
		{
			sqlVAL.union.val = tree.ReadWrite
		}
	case 1157:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6697
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				Name:     tree.Name(sqlDollar[3].str),
				Template: sqlDollar[5].str,
				Encoding: sqlDollar[6].str,
				Collate:  sqlDollar[7].str,
				CType:    sqlDollar[8].str,
			}
		}
	case 1158:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6707
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				IfNotExists: true,
				Name:        tree.Name(sqlDollar[6].str),
				Template:    sqlDollar[8].str,
				Encoding:    sqlDollar[9].str,
				Collate:     sqlDollar[10].str,
				CType:       sqlDollar[11].str,
			}
		}
	case 1159:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6717
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 1160:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6721
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1161:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6725
		{
			sqlVAL.str = ""
		}
	case 1162:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6731
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1163:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6735
		{
			sqlVAL.str = ""
		}
	case 1164:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6741
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1165:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6745
		{
			sqlVAL.str = ""
		}
	case 1166:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6751
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1167:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6755
		{
			sqlVAL.str = ""
		}
	case 1168:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6760
		{
		}
	case 1169:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6761
		{
		}
	case 1170:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6773
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1171:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6780
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = sqlDollar[6].union.onConflict()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[7].union.retClause()
		}
	case 1172:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6787
		{
			return helpWith(sqllex, "INSERT")
		}
	case 1173:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6798
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = &tree.OnConflict{}
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1174:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6805
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 1175:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6809
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &name
		}
	case 1176:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6818
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &name, As: tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}}
		}
	case 1177:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6823
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1178:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6829
		{
			sqlVAL.union.val = &tree.Insert{Rows: sqlDollar[1].union.slct()}
		}
	case 1179:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6833
		{
			sqlVAL.union.val = &tree.Insert{Columns: sqlDollar[2].union.nameList(), Rows: sqlDollar[4].union.slct()}
		}
	case 1180:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6837
		{
			sqlVAL.union.val = &tree.Insert{Rows: &tree.Select{}}
		}
	case 1181:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6843
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1182:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6847
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1184:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6867
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1185:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6871
		{
			sqlVAL.union.val = &tree.OnConflict{Columns: sqlDollar[3].union.nameList(), Exprs: sqlDollar[7].union.updateExprs(), Where: tree.NewWhere(tree.AstWhere, sqlDollar[8].union.expr())}
		}
	case 1186:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6875
		{
			sqlVAL.union.val = &tree.OnConflict{Columns: sqlDollar[3].union.nameList(), DoNothing: true}
		}
	case 1187:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6881
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1188:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6884
		{
			return unimplementedWithIssue(sqllex, 32557)
		}
	case 1189:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6885
		{
			return unimplementedWithIssue(sqllex, 28161)
		}
	case 1190:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6887
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1191:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6893
		{
			ret := tree.ReturningExprs(sqlDollar[2].union.selExprs())
			sqlVAL.union.val = &ret
		}
	case 1192:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6898
		{
			sqlVAL.union.val = tree.ReturningNothingClause
		}
	case 1193:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6902
		{
			sqlVAL.union.val = tree.AbsentReturningClause
		}
	case 1194:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6919
		{
			sqlVAL.union.val = &tree.Update{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[3].union.tblExpr(),
				Exprs:     sqlDollar[5].union.updateExprs(),
				From:      sqlDollar[6].union.tblExprs(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[7].union.expr()),
				OrderBy:   sqlDollar[8].union.orderBy(),
				Limit:     sqlDollar[9].union.limit(),
				Returning: sqlDollar[10].union.retClause(),
			}
		}
	case 1195:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6931
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 1196:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6934
		{
			sqlVAL.union.val = sqlDollar[2].union.tblExprs()
		}
	case 1197:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6937
		{
			sqlVAL.union.val = tree.TableExprs{}
		}
	case 1198:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6943
		{
			sqlVAL.union.val = tree.UpdateExprs{sqlDollar[1].union.updateExpr()}
		}
	case 1199:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6947
		{
			sqlVAL.union.val = append(sqlDollar[1].union.updateExprs(), sqlDollar[3].union.updateExpr())
		}
	case 1202:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6960
		{
			sqlVAL.union.val = &tree.UpdateExpr{Names: tree.NameList{tree.Name(sqlDollar[1].str)}, Expr: sqlDollar[3].union.expr()}
		}
	case 1203:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6963
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1204:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6967
		{
			sqlVAL.union.val = &tree.UpdateExpr{Tuple: true, Names: sqlDollar[2].union.nameList(), Expr: sqlDollar[5].union.expr()}
		}
	case 1206:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7010
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1207:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7016
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: sqlDollar[2].union.slct()}
		}
	case 1208:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7020
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: &tree.Select{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1209:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7035
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1210:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7039
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy()}
		}
	case 1211:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7043
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[3].union.lockingClause()}
		}
	case 1212:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7047
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[3].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1213:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7051
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt()}
		}
	case 1214:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7055
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy()}
		}
	case 1215:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7059
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[5].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1216:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7063
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[5].union.lockingClause()}
		}
	case 1217:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7068
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1218:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7069
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1219:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7072
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1220:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7073
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1221:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7077
		{
			sqlVAL.union.val = tree.LockingClause{sqlDollar[1].union.lockingItem()}
		}
	case 1222:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7081
		{
			sqlVAL.union.val = append(sqlDollar[1].union.lockingClause(), sqlDollar[2].union.lockingItem())
		}
	case 1223:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7087
		{
			sqlVAL.union.val = &tree.LockingItem{
				Strength:   sqlDollar[1].union.lockingStrength(),
				Targets:    sqlDollar[2].union.tableNames(),
				WaitPolicy: sqlDollar[3].union.lockingWaitPolicy(),
			}
		}
	case 1224:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7096
		{
			sqlVAL.union.val = tree.ForUpdate
		}
	case 1225:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7097
		{
			sqlVAL.union.val = tree.ForNoKeyUpdate
		}
	case 1226:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7098
		{
			sqlVAL.union.val = tree.ForShare
		}
	case 1227:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7099
		{
			sqlVAL.union.val = tree.ForKeyShare
		}
	case 1228:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7102
		{
			sqlVAL.union.val = tree.TableNames{}
		}
	case 1229:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7103
		{
			sqlVAL.union.val = sqlDollar[2].union.tableNames()
		}
	case 1230:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7106
		{
			sqlVAL.union.val = tree.LockWaitBlock
		}
	case 1231:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7107
		{
			sqlVAL.union.val = tree.LockWaitSkip
		}
	case 1232:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7108
		{
			sqlVAL.union.val = tree.LockWaitError
		}
	case 1233:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7113
		{
			return helpWith(sqllex, "<SELECTCLAUSE>")
		}
	case 1237:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7148
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1239:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7149
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1241:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7150
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1243:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7172
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:   sqlDollar[3].union.selExprs(),
				From:    sqlDollar[4].union.from(),
				Where:   tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy: sqlDollar[6].union.groupBy(),
				Having:  tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:  sqlDollar[8].union.window(),
			}
		}
	case 1244:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7185
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct: sqlDollar[2].union.bool(),
				Exprs:    sqlDollar[3].union.selExprs(),
				From:     sqlDollar[4].union.from(),
				Where:    tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:  sqlDollar[6].union.groupBy(),
				Having:   tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:   sqlDollar[8].union.window(),
			}
		}
	case 1245:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7199
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct:   true,
				DistinctOn: sqlDollar[2].union.distinctOn(),
				Exprs:      sqlDollar[3].union.selExprs(),
				From:       sqlDollar[4].union.from(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:    sqlDollar[6].union.groupBy(),
				Having:     tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:     sqlDollar[8].union.window(),
			}
		}
	case 1246:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7211
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1247:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7215
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.UnionOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1248:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7224
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.IntersectOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1249:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7233
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.ExceptOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1250:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7248
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:       tree.SelectExprs{tree.StarSelectExpr()},
				From:        tree.From{Tables: tree.TableExprs{sqlDollar[2].union.tblExpr()}},
				TableSelect: true,
			}
		}
	case 1251:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7255
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1252:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7267
		{
			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1253:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7271
		{

			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1254:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7276
		{
			sqlVAL.union.val = &tree.With{Recursive: true, CTEList: sqlDollar[3].union.ctes()}
		}
	case 1255:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7282
		{
			sqlVAL.union.val = []*tree.CTE{sqlDollar[1].union.cte()}
		}
	case 1256:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7286
		{
			sqlVAL.union.val = append(sqlDollar[1].union.ctes(), sqlDollar[3].union.cte())
		}
	case 1257:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7292
		{
			sqlVAL.union.val = true
		}
	case 1258:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7296
		{
			sqlVAL.union.val = false
		}
	case 1259:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7302
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Set: false,
				},
				Stmt: sqlDollar[5].union.stmt(),
			}
		}
	case 1260:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7312
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Materialize: sqlDollar[4].union.bool(),
					Set:         true,
				},
				Stmt: sqlDollar[6].union.stmt(),
			}
		}
	case 1261:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7324
		{
		}
	case 1262:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7325
		{
		}
	case 1263:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7329
		{
			sqlVAL.union.val = sqlDollar[1].union.with()
		}
	case 1264:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7333
		{
			sqlVAL.union.val = nil
		}
	case 1265:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7338
		{
		}
	case 1266:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7339
		{
		}
	case 1267:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7343
		{
			sqlVAL.union.val = true
		}
	case 1268:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7347
		{
			sqlVAL.union.val = false
		}
	case 1269:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7351
		{
			sqlVAL.union.val = false
		}
	case 1270:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7357
		{
			sqlVAL.union.val = true
		}
	case 1271:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7363
		{
			sqlVAL.union.val = tree.DistinctOn(sqlDollar[4].union.exprs())
		}
	case 1272:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7368
		{
		}
	case 1273:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7369
		{
		}
	case 1274:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7373
		{
			sqlVAL.union.val = sqlDollar[1].union.orderBy()
		}
	case 1275:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7377
		{
			sqlVAL.union.val = tree.OrderBy(nil)
		}
	case 1276:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7383
		{
			sqlVAL.union.val = tree.OrderBy(sqlDollar[3].union.orders())
		}
	case 1277:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7389
		{
			sqlVAL.union.val = tree.OrderBy([]*tree.Order{sqlDollar[3].union.order()})
		}
	case 1278:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7393
		{
			sqllex.Error("multiple ORDER BY clauses are not supported in this function")
			return 1
		}
	case 1279:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7400
		{
			sqlVAL.union.val = []*tree.Order{sqlDollar[1].union.order()}
		}
	case 1280:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7404
		{
			sqlVAL.union.val = append(sqlDollar[1].union.orders(), sqlDollar[3].union.order())
		}
	case 1281:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7410
		{

			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = &tree.Order{
				OrderType:  tree.OrderByColumn,
				Expr:       sqlDollar[1].union.expr(),
				Direction:  dir,
				NullsOrder: nullsOrder,
			}
		}
	case 1282:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7431
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{OrderType: tree.OrderByIndex, Direction: sqlDollar[4].union.dir(), Table: name}
		}
	case 1283:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7436
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{
				OrderType: tree.OrderByIndex,
				Direction: sqlDollar[5].union.dir(),
				Table:     name,
				Index:     tree.UnrestrictedName(sqlDollar[4].str),
			}
		}
	case 1284:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7448
		{
			sqlVAL.union.val = tree.NullsFirst
		}
	case 1285:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7452
		{
			sqlVAL.union.val = tree.NullsLast
		}
	case 1286:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7456
		{
			sqlVAL.union.val = tree.DefaultNullsOrder
		}
	case 1287:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7465
		{
			if sqlDollar[1].union.limit() == nil {
				sqlVAL.union.val = sqlDollar[2].union.limit()
			} else {
				sqlVAL.union.val = sqlDollar[1].union.limit()
				sqlVAL.union.val.(*tree.Limit).Offset = sqlDollar[2].union.limit().Offset
			}
		}
	case 1288:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7474
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
			if sqlDollar[2].union.limit() != nil {
				sqlVAL.union.val.(*tree.Limit).Count = sqlDollar[2].union.limit().Count
				sqlVAL.union.val.(*tree.Limit).LimitAll = sqlDollar[2].union.limit().LimitAll
			}
		}
	case 1291:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7485
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
		}
	case 1292:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7486
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1294:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7490
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1295:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7494
		{
			sqlVAL.union.val = &tree.Limit{LimitAll: true}
		}
	case 1296:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7498
		{
			if sqlDollar[2].union.expr() == nil {
				sqlVAL.union.val = (*tree.Limit)(nil)
			} else {
				sqlVAL.union.val = &tree.Limit{Count: sqlDollar[2].union.expr()}
			}
		}
	case 1297:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7512
		{
			sqlVAL.union.val = &tree.Limit{Count: sqlDollar[3].union.expr()}
		}
	case 1298:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7516
		{
			sqlVAL.union.val = &tree.Limit{
				Count: tree.NewNumVal(constant.MakeInt64(1), "", false),
			}
		}
	case 1299:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7524
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1300:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7531
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1304:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7553
		{
		}
	case 1305:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7554
		{
		}
	case 1306:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7557
		{
		}
	case 1307:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7558
		{
		}
	case 1308:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7575
		{
			sqlVAL.union.val = tree.GroupBy(sqlDollar[3].union.exprs())
		}
	case 1309:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7579
		{
			sqlVAL.union.val = tree.GroupBy(nil)
		}
	case 1310:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7585
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1311:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7589
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1312:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7608
		{
			sqlVAL.union.val = &tree.ValuesClause{Rows: []tree.Exprs{sqlDollar[3].union.exprs()}}
		}
	case 1313:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7611
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1314:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7613
		{
			valNode := sqlDollar[1].union.selectStmt().(*tree.ValuesClause)
			valNode.Rows = append(valNode.Rows, sqlDollar[4].union.exprs())
			sqlVAL.union.val = valNode
		}
	case 1315:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7625
		{
			sqlVAL.union.val = tree.From{Tables: sqlDollar[2].union.tblExprs(), AsOf: sqlDollar[3].union.asOfClause()}
		}
	case 1316:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7628
		{
			return helpWith(sqllex, "<SOURCE>")
		}
	case 1317:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7630
		{
			sqlVAL.union.val = tree.From{}
		}
	case 1318:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7636
		{
			sqlVAL.union.val = tree.TableExprs{sqlDollar[1].union.tblExpr()}
		}
	case 1319:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7640
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblExprs(), sqlDollar[3].union.tblExpr())
		}
	case 1320:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7646
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1321:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7650
		{

			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[4].union.int64())}
		}
	case 1322:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7655
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Ascending}
		}
	case 1323:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7660
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Descending}
		}
	case 1324:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7666
		{
			sqlVAL.union.val = &tree.IndexFlags{NoIndexJoin: true}
		}
	case 1325:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7671
		{

			sqlVAL.union.val = &tree.IndexFlags{IgnoreForeignKeys: true}
		}
	case 1326:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7678
		{
			sqlVAL.union.val = sqlDollar[1].union.indexFlags()
		}
	case 1327:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7683
		{
			a := sqlDollar[1].union.indexFlags()
			b := sqlDollar[3].union.indexFlags()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1328:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7694
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1329:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7698
		{
			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[3].union.int64())}
		}
	case 1330:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7702
		{
			flags := sqlDollar[3].union.indexFlags()
			if err := flags.Check(); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = flags
		}
	case 1331:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7710
		{
			sqlVAL.union.val = (*tree.IndexFlags)(nil)
		}
	case 1332:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7741
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1333:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7751
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1334:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7761
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[1].union.selectStmt()},
				Ordinality: sqlDollar[2].union.bool(),
				As:         sqlDollar[3].union.aliasClause(),
			}
		}
	case 1335:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7769
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[2].union.selectStmt()},
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1336:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7778
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1337:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7782
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1338:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7786
		{
			f := sqlDollar[1].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[2].union.bool(),

				As: sqlDollar[3].union.aliasClause(),
			}
		}
	case 1339:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7797
		{
			f := sqlDollar[2].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1340:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7821
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.StatementSource{Statement: sqlDollar[2].union.stmt()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1341:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7827
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
				Columns: sqlDollar[3].union.tableRefCols(),
				As:      sqlDollar[4].union.aliasClause(),
			}
		}
	case 1342:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7838
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: tree.Exprs{sqlDollar[1].union.expr()}}
		}
	case 1343:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7842
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: sqlDollar[4].union.exprs()}
		}
	case 1344:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7848
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1345:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7850
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1346:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7854
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1347:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7860
		{
		}
	case 1348:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7862
		{
			return unimplemented(sqllex, "ROWS FROM with col_def_list")
		}
	case 1349:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7865
		{
			sqlVAL.union.val = nil
		}
	case 1350:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7866
		{
			sqlVAL.union.val = []tree.ColumnID{}
		}
	case 1351:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7867
		{
			sqlVAL.union.val = sqlDollar[2].union.tableRefCols()
		}
	case 1352:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7871
		{
			sqlVAL.union.val = []tree.ColumnID{tree.ColumnID(sqlDollar[1].union.int64())}
		}
	case 1353:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7875
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tableRefCols(), tree.ColumnID(sqlDollar[3].union.int64()))
		}
	case 1354:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7881
		{
			sqlVAL.union.val = true
		}
	case 1355:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7885
		{
			sqlVAL.union.val = false
		}
	case 1356:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7905
		{
			sqlVAL.union.val = &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}
		}
	case 1357:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7909
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: tree.AstCross, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Hint: sqlDollar[3].str}
		}
	case 1358:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7913
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[2].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Cond: sqlDollar[6].union.joinCond(), Hint: sqlDollar[3].str}
		}
	case 1359:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7917
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[3].union.tblExpr(), Cond: sqlDollar[4].union.joinCond()}
		}
	case 1360:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7921
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[3].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[6].union.tblExpr(), Cond: tree.NaturalJoinCond{}, Hint: sqlDollar[4].str}
		}
	case 1361:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7925
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[4].union.tblExpr(), Cond: tree.NaturalJoinCond{}}
		}
	case 1362:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7931
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str), Cols: sqlDollar[3].union.nameList()}
		}
	case 1363:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7935
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()}
		}
	case 1365:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7942
		{
			sqlVAL.union.val = tree.AliasClause{}
		}
	case 1366:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7948
		{
			sqlVAL.union.val = tree.AsOfClause{Expr: sqlDollar[5].union.expr()}
		}
	case 1368:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7955
		{
			sqlVAL.union.val = tree.AsOfClause{}
		}
	case 1369:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7961
		{
			sqlVAL.str = tree.AstFull
		}
	case 1370:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7965
		{
			sqlVAL.str = tree.AstLeft
		}
	case 1371:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7969
		{
			sqlVAL.str = tree.AstRight
		}
	case 1372:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7973
		{
			sqlVAL.str = tree.AstInner
		}
	case 1373:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7979
		{
		}
	case 1374:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7980
		{
		}
	case 1375:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8001
		{
			sqlVAL.str = tree.AstHash
		}
	case 1376:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8005
		{
			sqlVAL.str = tree.AstMerge
		}
	case 1377:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8009
		{
			sqlVAL.str = tree.AstLookup
		}
	case 1378:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8013
		{
			sqlVAL.str = ""
		}
	case 1379:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8026
		{
			sqlVAL.union.val = &tree.UsingJoinCond{Cols: sqlDollar[3].union.nameList()}
		}
	case 1380:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8030
		{
			sqlVAL.union.val = &tree.OnJoinCond{Expr: sqlDollar[2].union.expr()}
		}
	case 1381:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8035
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1382:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8036
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1383:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8037
		{
			sqlVAL.union.val = sqlDollar[2].union.unresolvedObjectName()
		}
	case 1384:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8038
		{
			sqlVAL.union.val = sqlDollar[3].union.unresolvedObjectName()
		}
	case 1385:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8042
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 1386:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8047
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 1387:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8061
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1388:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8065
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str)}
			sqlVAL.union.val = alias
		}
	case 1389:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8071
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = alias
		}
	case 1390:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8077
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 1391:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8087
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 1392:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8097
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1394:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8104
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1395:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8116
		{
			if bounds := sqlDollar[2].union.int32s(); bounds != nil {
				var err error
				sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), bounds)
				if err != nil {
					return setErr(sqllex, err)
				}
			} else {
				sqlVAL.union.val = sqlDollar[1].union.typeReference()
			}
		}
	case 1396:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8129
		{

			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1397:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8137
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1398:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8138
		{
			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1399:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8148
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1400:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8155
		{
			sqlVAL.union.val = []int32{-1}
		}
	case 1401:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8156
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1402:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8158
		{

			bound, err := sqlDollar[2].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = []int32{bound}
		}
	case 1403:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8166
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1404:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8167
		{
			sqlVAL.union.val = []int32(nil)
		}
	case 1406:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8179
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1407:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8186
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1408:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8195
		{

			if sqlDollar[1].str == "char" {
				sqlVAL.union.val = types.MakeQChar(0)
			} else if sqlDollar[1].str == "serial" {
				switch sqllex.(*lexer).nakedIntType.Width() {
				case 32:
					sqlVAL.union.val = &types.Serial4Type
				default:
					sqlVAL.union.val = &types.Serial8Type
				}
			} else {

				var ok bool
				var err error
				var unimp int
				sqlVAL.union.val, ok, unimp = types.TypeForNonKeywordTypeName(sqlDollar[1].str)
				if !ok {
					switch unimp {
					case 0:

						aIdx := sqllex.(*lexer).NewAnnotation()
						sqlVAL.union.val, err = tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
						if err != nil {
							return setErr(sqllex, err)
						}
					case -1:
						return unimplemented(sqllex, "type name "+sqlDollar[1].str)
					default:
						return unimplementedWithIssueDetail(sqllex, unimp, sqlDollar[1].str)
					}
				}
			}
		}
	case 1409:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8235
		{
			id := sqlDollar[2].union.int32()
			sqlVAL.union.val = &tree.IDTypeReference{ID: uint32(id)}
		}
	case 1410:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8240
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1415:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8247
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "point")
		}
	case 1416:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8248
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "polygon")
		}
	case 1417:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8251
		{
			sqlVAL.union.val = geopb.ShapeType_Point
		}
	case 1418:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8252
		{
			sqlVAL.union.val = geopb.ShapeType_LineString
		}
	case 1419:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8253
		{
			sqlVAL.union.val = geopb.ShapeType_Polygon
		}
	case 1420:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8254
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollection
		}
	case 1421:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8255
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygon
		}
	case 1422:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8256
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineString
		}
	case 1423:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8257
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPoint
		}
	case 1424:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8258
		{
			sqlVAL.union.val = geopb.ShapeType_Geometry
		}
	case 1425:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8261
		{
			sqlVAL.union.val = types.Geography
		}
	case 1426:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8262
		{
			sqlVAL.union.val = types.Geometry
		}
	case 1427:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8264
		{
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1428:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8268
		{
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1429:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8272
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1430:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8280
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1436:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8306
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), 0)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1437:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8314
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), sqlDollar[4].union.int32())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1438:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8322
		{
			sqlVAL.union.val = nil
		}
	case 1439:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8329
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1440:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8333
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1441:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8337
		{
			sqlVAL.union.val = types.Int2
		}
	case 1442:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8341
		{
			sqlVAL.union.val = types.Int
		}
	case 1443:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8345
		{
			sqlVAL.union.val = types.Float4
		}
	case 1444:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8349
		{
			sqlVAL.union.val = sqlDollar[2].union.colType()
		}
	case 1445:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8353
		{
			sqlVAL.union.val = types.Float
		}
	case 1446:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8357
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1447:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8365
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1448:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8373
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1449:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8381
		{
			sqlVAL.union.val = types.Bool
		}
	case 1450:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8387
		{
			nv := sqlDollar[2].union.numVal()
			prec, err := nv.AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			typ, err := newFloat(prec)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = typ
		}
	case 1451:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8400
		{
			sqlVAL.union.val = types.Float
		}
	case 1452:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8406
		{
			bit, err := newBitType(sqlDollar[4].union.int32(), sqlDollar[2].union.bool())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1453:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8412
		{
			bit, err := newBitType(sqlDollar[3].union.int32(), true)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1454:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8420
		{
			sqlVAL.union.val = types.MakeBit(1)
		}
	case 1455:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8424
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1456:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8428
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1457:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8434
		{
			colTyp := *sqlDollar[1].union.colType()
			n := sqlDollar[3].union.int32()
			if n == 0 {
				sqllex.Error(fmt.Sprintf("length for type %s must be at least 1", colTyp.SQLString()))
				return 1
			}
			sqlVAL.union.val = types.MakeScalar(types.StringFamily, colTyp.Oid(), colTyp.Precision(), n, colTyp.Locale())
		}
	case 1458:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8446
		{
			sqlVAL.union.val = sqlDollar[1].union.colType()
		}
	case 1459:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8452
		{
			sqlVAL.union.val = types.MakeChar(1)
		}
	case 1460:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8456
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1461:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8460
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1462:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8464
		{
			sqlVAL.union.val = types.String
		}
	case 1465:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8473
		{
			sqlVAL.union.val = true
		}
	case 1466:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8474
		{
			sqlVAL.union.val = false
		}
	case 1467:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8479
		{
			sqlVAL.union.val = types.Date
		}
	case 1468:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8483
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimeTZ
			} else {
				sqlVAL.union.val = types.Time
			}
		}
	case 1469:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8491
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimeTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTime(prec)
			}
		}
	case 1470:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8503
		{
			sqlVAL.union.val = types.TimeTZ
		}
	case 1471:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8505
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimeTZ(prec)
		}
	case 1472:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8514
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimestampTZ
			} else {
				sqlVAL.union.val = types.Timestamp
			}
		}
	case 1473:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8522
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimestampTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTimestamp(prec)
			}
		}
	case 1474:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8535
		{
			sqlVAL.union.val = types.TimestampTZ
		}
	case 1475:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8539
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimestampTZ(prec)
		}
	case 1476:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8549
		{
			sqlVAL.union.val = true
		}
	case 1477:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8550
		{
			sqlVAL.union.val = false
		}
	case 1478:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8551
		{
			sqlVAL.union.val = false
		}
	case 1479:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8555
		{
			sqlVAL.union.val = types.Interval
		}
	case 1480:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8559
		{
			sqlVAL.union.val = types.MakeInterval(sqlDollar[2].union.intervalTypeMetadata())
		}
	case 1481:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8563
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeInterval(types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true})
		}
	case 1482:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8574
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_YEAR,
				},
			}
		}
	case 1483:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8582
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1484:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8590
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_DAY,
				},
			}
		}
	case 1485:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8598
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1486:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8606
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1487:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8614
		{
			sqlVAL.union.val = sqlDollar[1].union.intervalTypeMetadata()
		}
	case 1488:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8620
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_YEAR,
					DurationType:     types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1489:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8629
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1490:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8638
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1491:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8647
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_DAY
			sqlVAL.union.val = ret
		}
	case 1492:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8653
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_HOUR,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1493:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8662
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_HOUR
			sqlVAL.union.val = ret
		}
	case 1494:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8668
		{
			sqlVAL.union.val = sqlDollar[3].union.intervalTypeMetadata()
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_MINUTE
			sqlVAL.union.val = ret
		}
	case 1496:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8678
		{
			sqlVAL.union.val = nil
		}
	case 1497:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8684
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
			}
		}
	case 1498:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8692
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
				PrecisionIsSet: true,
				Precision:      prec,
			}
		}
	case 1500:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8729
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1501:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8733
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1502:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8737
		{
			sqlVAL.union.val = &tree.CollateExpr{Expr: sqlDollar[1].union.expr(), Locale: sqlDollar[3].str}
		}
	case 1503:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8741
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("timezone"), Exprs: tree.Exprs{sqlDollar[5].union.expr(), sqlDollar[1].union.expr()}}
		}
	case 1504:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8752
		{

			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1505:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8757
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1506:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8761
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryComplement, Expr: sqlDollar[2].union.expr()}
		}
	case 1507:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8765
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnarySqrt, Expr: sqlDollar[2].union.expr()}
		}
	case 1508:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8769
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryCbrt, Expr: sqlDollar[2].union.expr()}
		}
	case 1509:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8773
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Plus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1510:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8777
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Minus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1511:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8781
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mult, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1512:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8785
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Div, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1513:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8789
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.FloorDiv, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1514:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8793
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mod, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1515:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8797
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Pow, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1516:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8801
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitxor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1517:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8805
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitand, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1518:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8809
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1519:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8813
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1520:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8817
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1521:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8821
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1522:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8825
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONSomeExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1523:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8829
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONAllExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1524:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8833
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Contains, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1525:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8837
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.ContainedBy, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1526:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8841
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1527:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8845
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Concat, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1528:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8849
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.LShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1529:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8853
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.RShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1530:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8857
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchVal, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1531:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8861
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchText, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1532:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8865
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchValPath, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1533:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8869
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchTextPath, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1534:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8873
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("json_remove_path"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1535:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8877
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contained_by_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1536:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8881
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Overlaps, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1537:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8885
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contains_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1538:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8889
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1539:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8893
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1540:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8897
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1541:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8901
		{
			sqlVAL.union.val = &tree.AndExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1542:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8905
		{
			sqlVAL.union.val = &tree.OrExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1543:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8909
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1544:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8913
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1545:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8917
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Like, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1546:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8921
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1547:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8925
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotLike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1548:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8929
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1549:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8933
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.ILike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1550:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8937
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1551:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8941
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotILike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1552:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8945
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1553:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8949
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.SimilarTo, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1554:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8953
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1555:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8957
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotSimilarTo, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1556:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8961
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[5].union.expr(), sqlDollar[7].union.expr()}}
		}
	case 1557:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8965
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.RegMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1558:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8969
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotRegMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1559:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8973
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.RegIMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1560:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8977
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotRegIMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1561:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8981
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1562:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8985
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1563:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8989
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1564:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8993
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1565:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8997
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1566:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9001
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1567:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9004
		{
			return unimplemented(sqllex, "overlaps")
		}
	case 1568:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9006
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1569:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9010
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1570:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9014
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1571:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9018
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1572:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9022
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1573:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9026
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1574:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9030
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1575:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9034
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1576:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9038
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1577:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9042
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1578:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9046
		{
			sqlVAL.union.val = &tree.RangeCond{Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1579:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9050
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1580:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9054
		{
			sqlVAL.union.val = &tree.RangeCond{Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1581:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9058
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1582:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9062
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.In, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1583:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9066
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotIn, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1584:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9070
		{
			op := sqlDollar[3].union.cmpOp()
			subOp := sqlDollar[2].union.op()
			subOpCmp, ok := subOp.(tree.ComparisonOperator)
			if !ok {
				sqllex.Error(fmt.Sprintf("%s %s <array> is invalid because %q is not a boolean operator",
					subOp, op, subOp))
				return 1
			}
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator:    op,
				SubOperator: subOpCmp,
				Left:        sqlDollar[1].union.expr(),
				Right:       sqlDollar[4].union.expr(),
			}
		}
	case 1585:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9087
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 1586:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9092
		{
			return unimplemented(sqllex, "UNIQUE predicate")
		}
	case 1588:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9104
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1589:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9108
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1590:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9112
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1591:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9116
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1592:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9120
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryComplement, Expr: sqlDollar[2].union.expr()}
		}
	case 1593:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9124
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Plus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1594:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9128
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Minus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1595:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9132
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mult, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1596:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9136
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Div, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1597:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9140
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.FloorDiv, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1598:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9144
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mod, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1599:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9148
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Pow, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1600:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9152
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitxor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1601:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9156
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitand, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1602:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9160
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1603:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9164
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1604:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9168
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1605:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9172
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1606:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9176
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Concat, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1607:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9180
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.LShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1608:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9184
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.RShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1609:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9188
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1610:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9192
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1611:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9196
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1612:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9200
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1613:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9204
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1614:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9208
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1615:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9212
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1617:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9226
		{
			sqlVAL.union.val = &tree.IndirectionExpr{
				Expr:        sqlDollar[1].union.expr(),
				Indirection: sqlDollar[2].union.arraySubscripts(),
			}
		}
	case 1619:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9234
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[2].union.selectStmt(), Exists: true}
		}
	case 1620:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9270
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1621:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9274
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1622:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9278
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 1623:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9282
		{
			sqlVAL.union.val = tree.NewBytesStrVal(sqlDollar[1].str)
		}
	case 1624:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9286
		{
			d, err := tree.ParseDBitArray(sqlDollar[1].str)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 1625:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9291
		{
			return unimplemented(sqllex, sqlDollar[1].union.unresolvedName().String()+"(...) SCONST")
		}
	case 1626:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9293
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1627:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9297
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1628:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9301
		{
			sqlVAL.union.val = tree.MakeDBool(true)
		}
	case 1629:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9305
		{
			sqlVAL.union.val = tree.MakeDBool(false)
		}
	case 1630:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9309
		{
			sqlVAL.union.val = tree.DNull
		}
	case 1631:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9313
		{
			sqlVAL.union.val = tree.Expr(sqlDollar[1].union.unresolvedName())
		}
	case 1632:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9317
		{
			colNum := sqlDollar[2].union.int64()
			if colNum < 1 || colNum > int64(MaxInt) {
				sqllex.Error(fmt.Sprintf("invalid column ordinal: @%d", colNum))
				return 1
			}
			sqlVAL.union.val = tree.NewOrdinalReference(int(colNum - 1))
		}
	case 1633:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9326
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 1634:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9333
		{
			sqlVAL.union.val = &tree.TupleStar{Expr: sqlDollar[2].union.expr()}
		}
	case 1635:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9337
		{
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ColName: sqlDollar[5].str}
		}
	case 1636:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9341
		{
			idx, err := sqlDollar[6].union.numVal().AsInt32()
			if err != nil || idx <= 0 {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ByIndex: true, ColIndex: int(idx - 1)}
		}
	case 1637:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9347
		{
			sqlVAL.union.val = &tree.ParenExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1639:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9352
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1640:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9356
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 1641:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9360
		{
			sqlVAL.union.val = &tree.ArrayFlatten{Subquery: &tree.Subquery{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1642:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9364
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.tuple().Exprs}
		}
	case 1643:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9368
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1644:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9371
		{
			return unimplemented(sqllex, "d_expr grouping")
		}
	case 1645:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9375
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName()}
		}
	case 1646:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9379
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: sqlDollar[3].union.exprs(), OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 1647:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9382
		{
			return unimplemented(sqllex, "variadic")
		}
	case 1648:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9383
		{
			return unimplemented(sqllex, "variadic")
		}
	case 1649:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9385
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.AllFuncType, Exprs: sqlDollar[4].union.exprs(), OrderBy: sqlDollar[5].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 1650:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9391
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.DistinctFuncType, Exprs: sqlDollar[4].union.exprs()}
		}
	case 1651:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9395
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: tree.Exprs{tree.StarExpr()}}
		}
	case 1652:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9398
		{
			return helpWithFunction(sqllex, sqlDollar[1].union.resolvableFuncRefFromName())
		}
	case 1653:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9407
		{
			name := sqlDollar[1].union.unresolvedName()
			if name.NumParts == 1 {
				typName := name.Parts[0]

				if typName == "char" {
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: types.MakeQChar(0), SyntaxMode: tree.CastPrepend}
				} else if typName == "serial" {
					switch sqllex.(*lexer).nakedIntType.Width() {
					case 32:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial4Type, SyntaxMode: tree.CastPrepend}
					default:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial8Type, SyntaxMode: tree.CastPrepend}
					}
				} else {

					var typ tree.ResolvableTypeReference
					var ok bool
					var err error
					var unimp int
					typ, ok, unimp = types.TypeForNonKeywordTypeName(typName)
					if !ok {
						switch unimp {
						case 0:

							aIdx := sqllex.(*lexer).NewAnnotation()
							typ, err = name.ToUnresolvedObjectName(aIdx)
							if err != nil {
								return setErr(sqllex, err)
							}
						case -1:
							return unimplemented(sqllex, "type name "+typName)
						default:
							return unimplementedWithIssueDetail(sqllex, unimp, typName)
						}
					}
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: typ, SyntaxMode: tree.CastPrepend}
				}
			} else {
				aIdx := sqllex.(*lexer).NewAnnotation()
				res, err := name.ToUnresolvedObjectName(aIdx)
				if err != nil {
					return setErr(sqllex, err)
				}
				sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: res, SyntaxMode: tree.CastPrepend}
			}
		}
	case 1654:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9460
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: sqlDollar[1].union.colType(), SyntaxMode: tree.CastPrepend}
		}
	case 1655:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9473
		{
			f := sqlDollar[1].union.expr().(*tree.FuncExpr)
			w := sqlDollar[2].union.expr().(*tree.FuncExpr)
			if w.AggType != 0 {
				f.AggType = w.AggType
				f.OrderBy = w.OrderBy
			}
			f.Filter = sqlDollar[3].union.expr()
			f.WindowDef = sqlDollar[4].union.windowDef()
			sqlVAL.union.val = f
		}
	case 1656:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9485
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1657:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9494
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1658:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9495
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1659:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9500
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("pg_collation_for"), Exprs: tree.Exprs{sqlDollar[4].union.expr()}}
		}
	case 1660:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9504
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1661:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9508
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1662:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9514
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_database")}
		}
	case 1663:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9518
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1664:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9522
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1665:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9526
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1666:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9530
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1667:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9534
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1668:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9540
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1669:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9544
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1670:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9548
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1671:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9552
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.CastExplicit}
		}
	case 1672:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9556
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.AnnotateExplicit}
		}
	case 1673:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9560
		{
			sqlVAL.union.val = &tree.IfExpr{Cond: sqlDollar[3].union.expr(), True: sqlDollar[5].union.expr(), Else: sqlDollar[7].union.expr()}
		}
	case 1674:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9564
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr(), ErrCode: sqlDollar[7].union.expr()}
		}
	case 1675:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9568
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr()}
		}
	case 1676:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9572
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr()}
		}
	case 1677:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9576
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), ErrCode: sqlDollar[5].union.expr()}
		}
	case 1678:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9580
		{
			sqlVAL.union.val = &tree.NullIfExpr{Expr1: sqlDollar[3].union.expr(), Expr2: sqlDollar[5].union.expr()}
		}
	case 1679:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9584
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "IFNULL", Exprs: tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1680:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9588
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "COALESCE", Exprs: sqlDollar[3].union.exprs()}
		}
	case 1682:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9595
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1683:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9598
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1684:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9600
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1685:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9603
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1686:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9605
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1687:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9609
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1688:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9612
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1689:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9614
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1690:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9618
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1691:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9621
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1692:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9623
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1693:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9627
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1694:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9630
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1695:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9632
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1696:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9636
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1697:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9639
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1698:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9641
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1699:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9644
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1700:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9646
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1701:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9649
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1702:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9651
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1703:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9654
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1704:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9656
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1705:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9659
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1706:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9661
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("strpos"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1707:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9665
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1708:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9668
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1709:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9669
		{
			return unimplemented(sqllex, "treat")
		}
	case 1710:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9671
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1711:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9675
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ltrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1712:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9679
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("rtrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1713:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9683
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1714:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9687
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1715:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9690
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1716:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9692
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1717:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9695
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1718:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9701
		{
			sqlVAL.union.val = &tree.FuncExpr{OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.OrderedSetAgg}
		}
	case 1719:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9705
		{
			sqlVAL.union.val = &tree.FuncExpr{}
		}
	case 1720:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9711
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 1721:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9715
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1722:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9722
		{
			sqlVAL.union.val = sqlDollar[2].union.window()
		}
	case 1723:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9726
		{
			sqlVAL.union.val = tree.Window(nil)
		}
	case 1724:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9732
		{
			sqlVAL.union.val = tree.Window{sqlDollar[1].union.windowDef()}
		}
	case 1725:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9736
		{
			sqlVAL.union.val = append(sqlDollar[1].union.window(), sqlDollar[3].union.windowDef())
		}
	case 1726:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9742
		{
			n := sqlDollar[3].union.windowDef()
			n.Name = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = n
		}
	case 1727:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9750
		{
			sqlVAL.union.val = sqlDollar[2].union.windowDef()
		}
	case 1728:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9754
		{
			sqlVAL.union.val = &tree.WindowDef{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1729:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9758
		{
			sqlVAL.union.val = (*tree.WindowDef)(nil)
		}
	case 1730:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9765
		{
			sqlVAL.union.val = &tree.WindowDef{
				RefName:    tree.Name(sqlDollar[2].str),
				Partitions: sqlDollar[3].union.exprs(),
				OrderBy:    sqlDollar[4].union.orderBy(),
				Frame:      sqlDollar[5].union.windowFrame(),
			}
		}
	case 1732:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9785
		{
			sqlVAL.str = ""
		}
	case 1733:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9791
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 1734:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9795
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 1735:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9801
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.RANGE,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1736:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9809
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.ROWS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1737:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9817
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.GROUPS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1738:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9825
		{
			sqlVAL.union.val = (*tree.WindowFrame)(nil)
		}
	case 1739:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9831
		{
			startBound := sqlDollar[1].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.BoundType == tree.OffsetFollowing:
				sqllex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound}
		}
	case 1740:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9844
		{
			startBound := sqlDollar[2].union.windowFrameBound()
			endBound := sqlDollar[4].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.BoundType == tree.UnboundedPreceding:
				sqllex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.BoundType == tree.CurrentRow && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.CurrentRow:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound, EndBound: endBound}
		}
	case 1741:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9872
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedPreceding}
		}
	case 1742:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9876
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedFollowing}
		}
	case 1743:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9880
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.CurrentRow}
		}
	case 1744:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9884
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetPreceding,
			}
		}
	case 1745:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9891
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetFollowing,
			}
		}
	case 1746:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9900
		{
			sqlVAL.union.val = tree.ExcludeCurrentRow
		}
	case 1747:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9904
		{
			sqlVAL.union.val = tree.ExcludeGroup
		}
	case 1748:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9908
		{
			sqlVAL.union.val = tree.ExcludeTies
		}
	case 1749:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9912
		{

			sqlVAL.union.val = tree.NoExclusion
		}
	case 1750:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9917
		{
			sqlVAL.union.val = tree.NoExclusion
		}
	case 1751:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9930
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[3].union.exprs(), Row: true}
		}
	case 1752:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9934
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 1754:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9941
		{
			t := sqlDollar[2].union.tuple()
			labels := sqlDollar[4].union.nameList()
			t.Labels = make([]string, len(labels))
			for i, l := range labels {
				t.Labels[i] = string(l)
			}
			sqlVAL.union.val = t
		}
	case 1755:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9953
		{
			sqlVAL.union.val = tree.Any
		}
	case 1756:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9957
		{
			sqlVAL.union.val = tree.Some
		}
	case 1757:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9961
		{
			sqlVAL.union.val = tree.All
		}
	case 1758:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9966
		{
			sqlVAL.union.val = tree.Plus
		}
	case 1759:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9967
		{
			sqlVAL.union.val = tree.Minus
		}
	case 1760:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9968
		{
			sqlVAL.union.val = tree.Mult
		}
	case 1761:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9969
		{
			sqlVAL.union.val = tree.Div
		}
	case 1762:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9970
		{
			sqlVAL.union.val = tree.FloorDiv
		}
	case 1763:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9971
		{
			sqlVAL.union.val = tree.Mod
		}
	case 1764:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9972
		{
			sqlVAL.union.val = tree.Bitand
		}
	case 1765:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9973
		{
			sqlVAL.union.val = tree.Bitor
		}
	case 1766:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9974
		{
			sqlVAL.union.val = tree.Pow
		}
	case 1767:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9975
		{
			sqlVAL.union.val = tree.Bitxor
		}
	case 1768:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9976
		{
			sqlVAL.union.val = tree.LT
		}
	case 1769:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9977
		{
			sqlVAL.union.val = tree.GT
		}
	case 1770:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9978
		{
			sqlVAL.union.val = tree.EQ
		}
	case 1771:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9979
		{
			sqlVAL.union.val = tree.LE
		}
	case 1772:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9980
		{
			sqlVAL.union.val = tree.GE
		}
	case 1773:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9981
		{
			sqlVAL.union.val = tree.NE
		}
	case 1775:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9985
		{
			sqlVAL.union.val = tree.Like
		}
	case 1776:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9986
		{
			sqlVAL.union.val = tree.NotLike
		}
	case 1777:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9987
		{
			sqlVAL.union.val = tree.ILike
		}
	case 1778:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9988
		{
			sqlVAL.union.val = tree.NotILike
		}
	case 1779:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10011
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 1780:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10015
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1781:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10021
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1782:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10025
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1783:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10029
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 1784:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10040
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 1785:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10044
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1786:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10050
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1787:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10054
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 1789:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10061
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 1790:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10067
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1791:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10071
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1792:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10077
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference{sqlDollar[1].union.typeReference()}
		}
	case 1793:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10081
		{
			sqlVAL.union.val = append(sqlDollar[1].union.typeReferences(), sqlDollar[3].union.typeReference())
		}
	case 1794:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10087
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1795:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10091
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1796:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10097
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1797:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10101
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1798:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10107
		{
			sqlVAL.union.val = tree.Exprs{tree.NewStrVal(sqlDollar[1].str), sqlDollar[3].union.expr()}
		}
	case 1799:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10111
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1808:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10134
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr(), sqlDollar[4].union.expr()}
		}
	case 1809:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10138
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 1810:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10142
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1811:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10148
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1812:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10155
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[1].union.expr()}
		}
	case 1813:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10159
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 1814:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10176
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 1815:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10180
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[2].union.expr()}
		}
	case 1816:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10184
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr()}
		}
	case 1817:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10188
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), tree.NewDInt(1), sqlDollar[2].union.expr()}
		}
	case 1818:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10192
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1819:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10198
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1820:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10204
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1821:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10210
		{
			sqlVAL.union.val = append(sqlDollar[3].union.exprs(), sqlDollar[1].union.expr())
		}
	case 1822:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10214
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 1823:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10218
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1824:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10224
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1826:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10236
		{
			sqlVAL.union.val = &tree.CaseExpr{Expr: sqlDollar[2].union.expr(), Whens: sqlDollar[3].union.whens(), Else: sqlDollar[4].union.expr()}
		}
	case 1827:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10243
		{
			sqlVAL.union.val = []*tree.When{sqlDollar[1].union.when()}
		}
	case 1828:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10247
		{
			sqlVAL.union.val = append(sqlDollar[1].union.whens(), sqlDollar[2].union.when())
		}
	case 1829:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10253
		{
			sqlVAL.union.val = &tree.When{Cond: sqlDollar[2].union.expr(), Val: sqlDollar[4].union.expr()}
		}
	case 1830:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10259
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1831:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10263
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1833:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10270
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1834:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10276
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr()}
		}
	case 1835:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10280
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr(), End: sqlDollar[4].union.expr(), Slice: true}
		}
	case 1837:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10287
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1838:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10293
		{
			sqlVAL.union.val = tree.ArraySubscripts{sqlDollar[1].union.arraySubscript()}
		}
	case 1839:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10297
		{
			sqlVAL.union.val = append(sqlDollar[1].union.arraySubscripts(), sqlDollar[2].union.arraySubscript())
		}
	case 1840:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10302
		{
		}
	case 1841:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10303
		{
		}
	case 1842:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10307
		{
			sqlVAL.union.val = tree.SelectExprs{sqlDollar[1].union.selExpr()}
		}
	case 1843:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10311
		{
			sqlVAL.union.val = append(sqlDollar[1].union.selExprs(), sqlDollar[3].union.selExpr())
		}
	case 1844:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10317
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1845:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10326
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1846:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10330
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1847:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10334
		{
			sqlVAL.union.val = tree.StarSelectExpr()
		}
	case 1848:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10342
		{
			sqlVAL.union.val = tree.TableIndexNames{sqlDollar[1].union.newTableIndexName()}
		}
	case 1849:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10346
		{
			sqlVAL.union.val = append(sqlDollar[1].union.newTableIndexNames(), sqlDollar[3].union.newTableIndexName())
		}
	case 1850:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10352
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedName()}
		}
	case 1851:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10356
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedName())
		}
	case 1852:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10375
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: tree.UnrestrictedName(sqlDollar[3].str),
			}
		}
	case 1853:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10383
		{

			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			indexName := tree.UnrestrictedName(name.ObjectName)
			name.ObjectName = ""
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: indexName,
			}
		}
	case 1854:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10406
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 1856:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10415
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 1857:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10419
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1858:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10423
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 1859:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10427
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 1}
		}
	case 1860:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10433
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1861:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10437
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1866:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10452
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 1867:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10456
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 1870:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10468
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 1871:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10472
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 1872:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10481
		{
			val, err := sqlDollar[1].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 1873:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10492
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 1874:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10501
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 1875:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10509
		{
			var err error
			var d tree.Datum
			if sqlDollar[3].union.val == nil {
				d, err = tree.ParseDInterval(sqlDollar[2].str)
			} else {
				d, err = tree.ParseDIntervalWithTypeMetadata(sqlDollar[2].str, sqlDollar[3].union.intervalTypeMetadata())
			}
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 1876:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10521
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			d, err := tree.ParseDIntervalWithTypeMetadata(sqlDollar[5].str, types.IntervalTypeMetadata{
				Precision:      prec,
				PrecisionIsSet: true,
			})
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 1899:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10622
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 1901:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10629
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 2, Parts: tree.NameParts{sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1902:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10633
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 3, Parts: tree.NameParts{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1903:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10637
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 4, Parts: tree.NameParts{sqlDollar[7].str, sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1905:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10651
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 4, Parts: tree.NameParts{"", sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1906:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10655
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1907:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10659
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 1908:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10672
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 1910:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10681
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 1914:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10699
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1915:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10712
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1916:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10719
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1924:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10744
		{
			sqlVAL.str = ""
		}
	case 1925:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10750
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1926:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10754
		{
			sqlVAL.str = ""
		}
	}
	goto sqlstack /* stack new state and value */
}
