// Code generated by goyacc. DO NOT EDIT.
// GENERATED FILE DO NOT EDIT
// Code generated by goyacc -p sql -o sql.go.tmp sql-gen.y. DO NOT EDIT.

//line sql-gen.y:24
package parser

import (
	"fmt"
	__yyfmt__ "fmt"
	"go/constant"
	"strings"

	"github.com/cockroachdb/cockroach/pkg/geo/geopb"
	"github.com/cockroachdb/cockroach/pkg/roachpb"
	"github.com/cockroachdb/cockroach/pkg/sql/lex"
	"github.com/cockroachdb/cockroach/pkg/sql/privilege"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree"
	"github.com/cockroachdb/cockroach/pkg/sql/types"
	"github.com/cockroachdb/errors"
	"github.com/lib/pq/oid"
)

//line sql-gen.y:24

const MaxUint = ^uint(0)

const MaxInt = int(MaxUint >> 1)

func unimplemented(sqllex sqlLexer, feature string) int {
	sqllex.(*lexer).Unimplemented(feature)
	return 1
}
func purposelyUnimplemented(sqllex sqlLexer, feature string, reason string) int {
	sqllex.(*lexer).PurposelyUnimplemented(feature, reason)
	return 1
}

func setErr(sqllex sqlLexer, err error) int {
	sqllex.(*lexer).setErr(err)
	return 1
}

func unimplementedWithIssue(sqllex sqlLexer, issue int) int {
	sqllex.(*lexer).UnimplementedWithIssue(issue)
	return 1
}

func unimplementedWithIssueDetail(sqllex sqlLexer, issue int, detail string) int {
	sqllex.(*lexer).UnimplementedWithIssueDetail(issue, detail)
	return 1
}

//line sql-gen.y:73

type sqlSymUnion struct {
	val interface{}
}

func (u *sqlSymUnion) numVal() *tree.NumVal {
	return u.val.(*tree.NumVal)
}
func (u *sqlSymUnion) strVal() *tree.StrVal {
	if stmt, ok := u.val.(*tree.StrVal); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) placeholder() *tree.Placeholder {
	return u.val.(*tree.Placeholder)
}
func (u *sqlSymUnion) auditMode() tree.AuditMode {
	return u.val.(tree.AuditMode)
}
func (u *sqlSymUnion) bool() bool {
	return u.val.(bool)
}
func (u *sqlSymUnion) strPtr() *string {
	return u.val.(*string)
}
func (u *sqlSymUnion) strs() []string {
	return u.val.([]string)
}
func (u *sqlSymUnion) newTableIndexName() *tree.TableIndexName {
	tn := u.val.(tree.TableIndexName)
	return &tn
}
func (u *sqlSymUnion) tableIndexName() tree.TableIndexName {
	return u.val.(tree.TableIndexName)
}
func (u *sqlSymUnion) newTableIndexNames() tree.TableIndexNames {
	return u.val.(tree.TableIndexNames)
}
func (u *sqlSymUnion) shardedIndexDef() *tree.ShardedIndexDef {
	return u.val.(*tree.ShardedIndexDef)
}
func (u *sqlSymUnion) nameList() tree.NameList {
	return u.val.(tree.NameList)
}
func (u *sqlSymUnion) unresolvedName() *tree.UnresolvedName {
	return u.val.(*tree.UnresolvedName)
}
func (u *sqlSymUnion) unresolvedObjectName() *tree.UnresolvedObjectName {
	return u.val.(*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) unresolvedObjectNames() []*tree.UnresolvedObjectName {
	return u.val.([]*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) functionReference() tree.FunctionReference {
	return u.val.(tree.FunctionReference)
}
func (u *sqlSymUnion) tablePatterns() tree.TablePatterns {
	return u.val.(tree.TablePatterns)
}
func (u *sqlSymUnion) tableNames() tree.TableNames {
	return u.val.(tree.TableNames)
}
func (u *sqlSymUnion) indexFlags() *tree.IndexFlags {
	return u.val.(*tree.IndexFlags)
}
func (u *sqlSymUnion) arraySubscript() *tree.ArraySubscript {
	return u.val.(*tree.ArraySubscript)
}
func (u *sqlSymUnion) arraySubscripts() tree.ArraySubscripts {
	if as, ok := u.val.(tree.ArraySubscripts); ok {
		return as
	}
	return nil
}
func (u *sqlSymUnion) stmt() tree.Statement {
	if stmt, ok := u.val.(tree.Statement); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) cte() *tree.CTE {
	if cte, ok := u.val.(*tree.CTE); ok {
		return cte
	}
	return nil
}
func (u *sqlSymUnion) ctes() []*tree.CTE {
	return u.val.([]*tree.CTE)
}
func (u *sqlSymUnion) with() *tree.With {
	if with, ok := u.val.(*tree.With); ok {
		return with
	}
	return nil
}
func (u *sqlSymUnion) slct() *tree.Select {
	return u.val.(*tree.Select)
}
func (u *sqlSymUnion) selectStmt() tree.SelectStatement {
	return u.val.(tree.SelectStatement)
}
func (u *sqlSymUnion) colDef() *tree.ColumnTableDef {
	return u.val.(*tree.ColumnTableDef)
}
func (u *sqlSymUnion) constraintDef() tree.ConstraintTableDef {
	return u.val.(tree.ConstraintTableDef)
}
func (u *sqlSymUnion) tblDef() tree.TableDef {
	return u.val.(tree.TableDef)
}
func (u *sqlSymUnion) tblDefs() tree.TableDefs {
	return u.val.(tree.TableDefs)
}
func (u *sqlSymUnion) likeTableOption() tree.LikeTableOption {
	return u.val.(tree.LikeTableOption)
}
func (u *sqlSymUnion) likeTableOptionList() []tree.LikeTableOption {
	return u.val.([]tree.LikeTableOption)
}
func (u *sqlSymUnion) colQual() tree.NamedColumnQualification {
	return u.val.(tree.NamedColumnQualification)
}
func (u *sqlSymUnion) colQualElem() tree.ColumnQualification {
	return u.val.(tree.ColumnQualification)
}
func (u *sqlSymUnion) colQuals() []tree.NamedColumnQualification {
	return u.val.([]tree.NamedColumnQualification)
}
func (u *sqlSymUnion) storageParam() tree.StorageParam {
	return u.val.(tree.StorageParam)
}
func (u *sqlSymUnion) storageParams() []tree.StorageParam {
	if params, ok := u.val.([]tree.StorageParam); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) persistence() tree.Persistence {
	return u.val.(tree.Persistence)
}
func (u *sqlSymUnion) colType() *types.T {
	if colType, ok := u.val.(*types.T); ok && colType != nil {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) tableRefCols() []tree.ColumnID {
	if refCols, ok := u.val.([]tree.ColumnID); ok {
		return refCols
	}
	return nil
}
func (u *sqlSymUnion) colTypes() []*types.T {
	return u.val.([]*types.T)
}
func (u *sqlSymUnion) int32() int32 {
	return u.val.(int32)
}
func (u *sqlSymUnion) int64() int64 {
	return u.val.(int64)
}
func (u *sqlSymUnion) seqOpt() tree.SequenceOption {
	return u.val.(tree.SequenceOption)
}
func (u *sqlSymUnion) seqOpts() []tree.SequenceOption {
	return u.val.([]tree.SequenceOption)
}
func (u *sqlSymUnion) expr() tree.Expr {
	if expr, ok := u.val.(tree.Expr); ok {
		return expr
	}
	return nil
}
func (u *sqlSymUnion) exprs() tree.Exprs {
	return u.val.(tree.Exprs)
}
func (u *sqlSymUnion) selExpr() tree.SelectExpr {
	return u.val.(tree.SelectExpr)
}
func (u *sqlSymUnion) selExprs() tree.SelectExprs {
	return u.val.(tree.SelectExprs)
}
func (u *sqlSymUnion) retClause() tree.ReturningClause {
	return u.val.(tree.ReturningClause)
}
func (u *sqlSymUnion) aliasClause() tree.AliasClause {
	return u.val.(tree.AliasClause)
}
func (u *sqlSymUnion) asOfClause() tree.AsOfClause {
	return u.val.(tree.AsOfClause)
}
func (u *sqlSymUnion) tblExpr() tree.TableExpr {
	return u.val.(tree.TableExpr)
}
func (u *sqlSymUnion) tblExprs() tree.TableExprs {
	return u.val.(tree.TableExprs)
}
func (u *sqlSymUnion) from() tree.From {
	return u.val.(tree.From)
}
func (u *sqlSymUnion) int32s() []int32 {
	return u.val.([]int32)
}
func (u *sqlSymUnion) joinCond() tree.JoinCond {
	return u.val.(tree.JoinCond)
}
func (u *sqlSymUnion) when() *tree.When {
	return u.val.(*tree.When)
}
func (u *sqlSymUnion) whens() []*tree.When {
	return u.val.([]*tree.When)
}
func (u *sqlSymUnion) lockingClause() tree.LockingClause {
	return u.val.(tree.LockingClause)
}
func (u *sqlSymUnion) lockingItem() *tree.LockingItem {
	return u.val.(*tree.LockingItem)
}
func (u *sqlSymUnion) lockingStrength() tree.LockingStrength {
	return u.val.(tree.LockingStrength)
}
func (u *sqlSymUnion) lockingWaitPolicy() tree.LockingWaitPolicy {
	return u.val.(tree.LockingWaitPolicy)
}
func (u *sqlSymUnion) updateExpr() *tree.UpdateExpr {
	return u.val.(*tree.UpdateExpr)
}
func (u *sqlSymUnion) updateExprs() tree.UpdateExprs {
	return u.val.(tree.UpdateExprs)
}
func (u *sqlSymUnion) limit() *tree.Limit {
	return u.val.(*tree.Limit)
}
func (u *sqlSymUnion) targetList() tree.TargetList {
	return u.val.(tree.TargetList)
}
func (u *sqlSymUnion) targetListPtr() *tree.TargetList {
	return u.val.(*tree.TargetList)
}
func (u *sqlSymUnion) privilegeType() privilege.Kind {
	return u.val.(privilege.Kind)
}
func (u *sqlSymUnion) privilegeList() privilege.List {
	return u.val.(privilege.List)
}
func (u *sqlSymUnion) onConflict() *tree.OnConflict {
	return u.val.(*tree.OnConflict)
}
func (u *sqlSymUnion) orderBy() tree.OrderBy {
	return u.val.(tree.OrderBy)
}
func (u *sqlSymUnion) order() *tree.Order {
	return u.val.(*tree.Order)
}
func (u *sqlSymUnion) orders() []*tree.Order {
	return u.val.([]*tree.Order)
}
func (u *sqlSymUnion) groupBy() tree.GroupBy {
	return u.val.(tree.GroupBy)
}
func (u *sqlSymUnion) windowFrame() *tree.WindowFrame {
	return u.val.(*tree.WindowFrame)
}
func (u *sqlSymUnion) windowFrameBounds() tree.WindowFrameBounds {
	return u.val.(tree.WindowFrameBounds)
}
func (u *sqlSymUnion) windowFrameBound() *tree.WindowFrameBound {
	return u.val.(*tree.WindowFrameBound)
}
func (u *sqlSymUnion) windowFrameExclusion() tree.WindowFrameExclusion {
	return u.val.(tree.WindowFrameExclusion)
}
func (u *sqlSymUnion) distinctOn() tree.DistinctOn {
	return u.val.(tree.DistinctOn)
}
func (u *sqlSymUnion) dir() tree.Direction {
	return u.val.(tree.Direction)
}
func (u *sqlSymUnion) nullsOrder() tree.NullsOrder {
	return u.val.(tree.NullsOrder)
}
func (u *sqlSymUnion) alterTableCmd() tree.AlterTableCmd {
	return u.val.(tree.AlterTableCmd)
}
func (u *sqlSymUnion) alterTableCmds() tree.AlterTableCmds {
	return u.val.(tree.AlterTableCmds)
}
func (u *sqlSymUnion) alterIndexCmd() tree.AlterIndexCmd {
	return u.val.(tree.AlterIndexCmd)
}
func (u *sqlSymUnion) alterIndexCmds() tree.AlterIndexCmds {
	return u.val.(tree.AlterIndexCmds)
}
func (u *sqlSymUnion) isoLevel() tree.IsolationLevel {
	return u.val.(tree.IsolationLevel)
}
func (u *sqlSymUnion) userPriority() tree.UserPriority {
	return u.val.(tree.UserPriority)
}
func (u *sqlSymUnion) readWriteMode() tree.ReadWriteMode {
	return u.val.(tree.ReadWriteMode)
}
func (u *sqlSymUnion) idxElem() tree.IndexElem {
	return u.val.(tree.IndexElem)
}
func (u *sqlSymUnion) idxElems() tree.IndexElemList {
	return u.val.(tree.IndexElemList)
}
func (u *sqlSymUnion) dropBehavior() tree.DropBehavior {
	return u.val.(tree.DropBehavior)
}
func (u *sqlSymUnion) validationBehavior() tree.ValidationBehavior {
	return u.val.(tree.ValidationBehavior)
}
func (u *sqlSymUnion) interleave() *tree.InterleaveDef {
	return u.val.(*tree.InterleaveDef)
}
func (u *sqlSymUnion) partitionBy() *tree.PartitionBy {
	return u.val.(*tree.PartitionBy)
}
func (u *sqlSymUnion) createTableOnCommitSetting() tree.CreateTableOnCommitSetting {
	return u.val.(tree.CreateTableOnCommitSetting)
}
func (u *sqlSymUnion) listPartition() tree.ListPartition {
	return u.val.(tree.ListPartition)
}
func (u *sqlSymUnion) listPartitions() []tree.ListPartition {
	return u.val.([]tree.ListPartition)
}
func (u *sqlSymUnion) rangePartition() tree.RangePartition {
	return u.val.(tree.RangePartition)
}
func (u *sqlSymUnion) rangePartitions() []tree.RangePartition {
	return u.val.([]tree.RangePartition)
}
func (u *sqlSymUnion) setZoneConfig() *tree.SetZoneConfig {
	return u.val.(*tree.SetZoneConfig)
}
func (u *sqlSymUnion) tuples() []*tree.Tuple {
	return u.val.([]*tree.Tuple)
}
func (u *sqlSymUnion) tuple() *tree.Tuple {
	return u.val.(*tree.Tuple)
}
func (u *sqlSymUnion) windowDef() *tree.WindowDef {
	return u.val.(*tree.WindowDef)
}
func (u *sqlSymUnion) window() tree.Window {
	return u.val.(tree.Window)
}
func (u *sqlSymUnion) op() tree.Operator {
	return u.val.(tree.Operator)
}
func (u *sqlSymUnion) cmpOp() tree.ComparisonOperator {
	return u.val.(tree.ComparisonOperator)
}
func (u *sqlSymUnion) intervalTypeMetadata() types.IntervalTypeMetadata {
	return u.val.(types.IntervalTypeMetadata)
}
func (u *sqlSymUnion) kvOption() tree.KVOption {
	return u.val.(tree.KVOption)
}
func (u *sqlSymUnion) kvOptions() []tree.KVOption {
	if colType, ok := u.val.([]tree.KVOption); ok {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) backupOptions() *tree.BackupOptions {
	return u.val.(*tree.BackupOptions)
}
func (u *sqlSymUnion) copyOptions() *tree.CopyOptions {
	return u.val.(*tree.CopyOptions)
}
func (u *sqlSymUnion) restoreOptions() *tree.RestoreOptions {
	return u.val.(*tree.RestoreOptions)
}
func (u *sqlSymUnion) transactionModes() tree.TransactionModes {
	return u.val.(tree.TransactionModes)
}
func (u *sqlSymUnion) compositeKeyMatchMethod() tree.CompositeKeyMatchMethod {
	return u.val.(tree.CompositeKeyMatchMethod)
}
func (u *sqlSymUnion) referenceAction() tree.ReferenceAction {
	return u.val.(tree.ReferenceAction)
}
func (u *sqlSymUnion) referenceActions() tree.ReferenceActions {
	return u.val.(tree.ReferenceActions)
}
func (u *sqlSymUnion) createStatsOptions() *tree.CreateStatsOptions {
	return u.val.(*tree.CreateStatsOptions)
}
func (u *sqlSymUnion) scrubOptions() tree.ScrubOptions {
	return u.val.(tree.ScrubOptions)
}
func (u *sqlSymUnion) scrubOption() tree.ScrubOption {
	return u.val.(tree.ScrubOption)
}
func (u *sqlSymUnion) resolvableFuncRefFromName() tree.ResolvableFunctionReference {
	return tree.ResolvableFunctionReference{FunctionReference: u.unresolvedName()}
}
func (u *sqlSymUnion) rowsFromExpr() *tree.RowsFromExpr {
	return u.val.(*tree.RowsFromExpr)
}
func (u *sqlSymUnion) stringOrPlaceholderOptList() tree.StringOrPlaceholderOptList {
	return u.val.(tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) listOfStringOrPlaceholderOptList() []tree.StringOrPlaceholderOptList {
	return u.val.([]tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) fullBackupClause() *tree.FullBackupClause {
	return u.val.(*tree.FullBackupClause)
}
func (u *sqlSymUnion) geoShapeType() geopb.ShapeType {
	return u.val.(geopb.ShapeType)
}
func newNameFromStr(s string) *tree.Name {
	return (*tree.Name)(&s)
}
func (u *sqlSymUnion) typeReference() tree.ResolvableTypeReference {
	return u.val.(tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) typeReferences() []tree.ResolvableTypeReference {
	return u.val.([]tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) alterTypeAddValuePlacement() *tree.AlterTypeAddValuePlacement {
	return u.val.(*tree.AlterTypeAddValuePlacement)
}
func (u *sqlSymUnion) scheduleState() tree.ScheduleState {
	return u.val.(tree.ScheduleState)
}
func (u *sqlSymUnion) executorType() tree.ScheduledJobExecutorType {
	return u.val.(tree.ScheduledJobExecutorType)
}

//line sql-gen.y:675
type sqlSymType struct {
	yys   int
	id    int32
	pos   int32
	str   string
	union sqlSymUnion
}

const IDENT = lex.IDENT
const SCONST = lex.SCONST
const BCONST = lex.BCONST
const BITCONST = lex.BITCONST
const ICONST = lex.ICONST
const FCONST = lex.FCONST
const PLACEHOLDER = lex.PLACEHOLDER
const TYPECAST = lex.TYPECAST
const TYPEANNOTATE = lex.TYPEANNOTATE
const DOT_DOT = lex.DOT_DOT
const LESS_EQUALS = lex.LESS_EQUALS
const GREATER_EQUALS = lex.GREATER_EQUALS
const NOT_EQUALS = lex.NOT_EQUALS
const NOT_REGMATCH = lex.NOT_REGMATCH
const REGIMATCH = lex.REGIMATCH
const NOT_REGIMATCH = lex.NOT_REGIMATCH
const ERROR = lex.ERROR
const ABORT = lex.ABORT
const ACTION = lex.ACTION
const ADD = lex.ADD
const ADMIN = lex.ADMIN
const AFTER = lex.AFTER
const AGGREGATE = lex.AGGREGATE
const ALL = lex.ALL
const ALTER = lex.ALTER
const ALWAYS = lex.ALWAYS
const ANALYSE = lex.ANALYSE
const ANALYZE = lex.ANALYZE
const AND = lex.AND
const AND_AND = lex.AND_AND
const ANY = lex.ANY
const ANNOTATE_TYPE = lex.ANNOTATE_TYPE
const ARRAY = lex.ARRAY
const AS = lex.AS
const ASC = lex.ASC
const ASYMMETRIC = lex.ASYMMETRIC
const AT = lex.AT
const ATTRIBUTE = lex.ATTRIBUTE
const AUTHORIZATION = lex.AUTHORIZATION
const AUTOMATIC = lex.AUTOMATIC
const BACKUP = lex.BACKUP
const BEFORE = lex.BEFORE
const BEGIN = lex.BEGIN
const BETWEEN = lex.BETWEEN
const BIGINT = lex.BIGINT
const BIGSERIAL = lex.BIGSERIAL
const BINARY = lex.BINARY
const BIT = lex.BIT
const BUCKET_COUNT = lex.BUCKET_COUNT
const BOOLEAN = lex.BOOLEAN
const BOTH = lex.BOTH
const BOX2D = lex.BOX2D
const BUNDLE = lex.BUNDLE
const BY = lex.BY
const CACHE = lex.CACHE
const CANCEL = lex.CANCEL
const CASCADE = lex.CASCADE
const CASE = lex.CASE
const CAST = lex.CAST
const CBRT = lex.CBRT
const CHANGEFEED = lex.CHANGEFEED
const CHAR = lex.CHAR
const CHARACTER = lex.CHARACTER
const CHARACTERISTICS = lex.CHARACTERISTICS
const CHECK = lex.CHECK
const CLOSE = lex.CLOSE
const CLUSTER = lex.CLUSTER
const COALESCE = lex.COALESCE
const COLLATE = lex.COLLATE
const COLLATION = lex.COLLATION
const COLUMN = lex.COLUMN
const COLUMNS = lex.COLUMNS
const COMMENT = lex.COMMENT
const COMMENTS = lex.COMMENTS
const COMMIT = lex.COMMIT
const COMMITTED = lex.COMMITTED
const COMPACT = lex.COMPACT
const COMPLETE = lex.COMPLETE
const CONCAT = lex.CONCAT
const CONCURRENTLY = lex.CONCURRENTLY
const CONFIGURATION = lex.CONFIGURATION
const CONFIGURATIONS = lex.CONFIGURATIONS
const CONFIGURE = lex.CONFIGURE
const CONFLICT = lex.CONFLICT
const CONSTRAINT = lex.CONSTRAINT
const CONSTRAINTS = lex.CONSTRAINTS
const CONTAINS = lex.CONTAINS
const CONVERSION = lex.CONVERSION
const COPY = lex.COPY
const COVERING = lex.COVERING
const CREATE = lex.CREATE
const CREATEROLE = lex.CREATEROLE
const CROSS = lex.CROSS
const CUBE = lex.CUBE
const CURRENT = lex.CURRENT
const CURRENT_CATALOG = lex.CURRENT_CATALOG
const CURRENT_DATE = lex.CURRENT_DATE
const CURRENT_SCHEMA = lex.CURRENT_SCHEMA
const CURRENT_ROLE = lex.CURRENT_ROLE
const CURRENT_TIME = lex.CURRENT_TIME
const CURRENT_TIMESTAMP = lex.CURRENT_TIMESTAMP
const CURRENT_USER = lex.CURRENT_USER
const CYCLE = lex.CYCLE
const DATA = lex.DATA
const DATABASE = lex.DATABASE
const DATABASES = lex.DATABASES
const DATE = lex.DATE
const DAY = lex.DAY
const DEC = lex.DEC
const DECIMAL = lex.DECIMAL
const DEFAULT = lex.DEFAULT
const DEFAULTS = lex.DEFAULTS
const DEALLOCATE = lex.DEALLOCATE
const DECLARE = lex.DECLARE
const DEFERRABLE = lex.DEFERRABLE
const DEFERRED = lex.DEFERRED
const DELETE = lex.DELETE
const DESC = lex.DESC
const DESTINATION = lex.DESTINATION
const DETACHED = lex.DETACHED
const DISCARD = lex.DISCARD
const DISTINCT = lex.DISTINCT
const DO = lex.DO
const DOMAIN = lex.DOMAIN
const DOUBLE = lex.DOUBLE
const DROP = lex.DROP
const ELSE = lex.ELSE
const ENCODING = lex.ENCODING
const ENCRYPTION_PASSPHRASE = lex.ENCRYPTION_PASSPHRASE
const END = lex.END
const ENUM = lex.ENUM
const ENUMS = lex.ENUMS
const ESCAPE = lex.ESCAPE
const EXCEPT = lex.EXCEPT
const EXCLUDE = lex.EXCLUDE
const EXCLUDING = lex.EXCLUDING
const EXISTS = lex.EXISTS
const EXECUTE = lex.EXECUTE
const EXECUTION = lex.EXECUTION
const EXPERIMENTAL = lex.EXPERIMENTAL
const EXPERIMENTAL_FINGERPRINTS = lex.EXPERIMENTAL_FINGERPRINTS
const EXPERIMENTAL_REPLICA = lex.EXPERIMENTAL_REPLICA
const EXPERIMENTAL_AUDIT = lex.EXPERIMENTAL_AUDIT
const EXPIRATION = lex.EXPIRATION
const EXPLAIN = lex.EXPLAIN
const EXPORT = lex.EXPORT
const EXTENSION = lex.EXTENSION
const EXTRACT = lex.EXTRACT
const EXTRACT_DURATION = lex.EXTRACT_DURATION
const FALSE = lex.FALSE
const FAMILY = lex.FAMILY
const FETCH = lex.FETCH
const FETCHVAL = lex.FETCHVAL
const FETCHTEXT = lex.FETCHTEXT
const FETCHVAL_PATH = lex.FETCHVAL_PATH
const FETCHTEXT_PATH = lex.FETCHTEXT_PATH
const FILES = lex.FILES
const FILTER = lex.FILTER
const FIRST = lex.FIRST
const FLOAT = lex.FLOAT
const FLOAT4 = lex.FLOAT4
const FLOAT8 = lex.FLOAT8
const FLOORDIV = lex.FLOORDIV
const FOLLOWING = lex.FOLLOWING
const FOR = lex.FOR
const FORCE_INDEX = lex.FORCE_INDEX
const FOREIGN = lex.FOREIGN
const FROM = lex.FROM
const FULL = lex.FULL
const FUNCTION = lex.FUNCTION
const GENERATED = lex.GENERATED
const GEOGRAPHY = lex.GEOGRAPHY
const GEOMETRY = lex.GEOMETRY
const GEOMETRYCOLLECTION = lex.GEOMETRYCOLLECTION
const GLOBAL = lex.GLOBAL
const GRANT = lex.GRANT
const GRANTS = lex.GRANTS
const GREATEST = lex.GREATEST
const GROUP = lex.GROUP
const GROUPING = lex.GROUPING
const GROUPS = lex.GROUPS
const HAVING = lex.HAVING
const HASH = lex.HASH
const HIGH = lex.HIGH
const HISTOGRAM = lex.HISTOGRAM
const HOUR = lex.HOUR
const IDENTITY = lex.IDENTITY
const IF = lex.IF
const IFERROR = lex.IFERROR
const IFNULL = lex.IFNULL
const IGNORE_FOREIGN_KEYS = lex.IGNORE_FOREIGN_KEYS
const ILIKE = lex.ILIKE
const IMMEDIATE = lex.IMMEDIATE
const IMPORT = lex.IMPORT
const IN = lex.IN
const INCLUDE = lex.INCLUDE
const INCLUDING = lex.INCLUDING
const INCREMENT = lex.INCREMENT
const INCREMENTAL = lex.INCREMENTAL
const INET = lex.INET
const INET_CONTAINED_BY_OR_EQUALS = lex.INET_CONTAINED_BY_OR_EQUALS
const INET_CONTAINS_OR_EQUALS = lex.INET_CONTAINS_OR_EQUALS
const INDEX = lex.INDEX
const INDEXES = lex.INDEXES
const INJECT = lex.INJECT
const INTERLEAVE = lex.INTERLEAVE
const INITIALLY = lex.INITIALLY
const INNER = lex.INNER
const INSERT = lex.INSERT
const INT = lex.INT
const INTEGER = lex.INTEGER
const INTERSECT = lex.INTERSECT
const INTERVAL = lex.INTERVAL
const INTO = lex.INTO
const INTO_DB = lex.INTO_DB
const INVERTED = lex.INVERTED
const IS = lex.IS
const ISERROR = lex.ISERROR
const ISNULL = lex.ISNULL
const ISOLATION = lex.ISOLATION
const JOB = lex.JOB
const JOBS = lex.JOBS
const JOIN = lex.JOIN
const JSON = lex.JSON
const JSONB = lex.JSONB
const JSON_SOME_EXISTS = lex.JSON_SOME_EXISTS
const JSON_ALL_EXISTS = lex.JSON_ALL_EXISTS
const KEY = lex.KEY
const KEYS = lex.KEYS
const KMS = lex.KMS
const KV = lex.KV
const LANGUAGE = lex.LANGUAGE
const LAST = lex.LAST
const LATERAL = lex.LATERAL
const LATEST = lex.LATEST
const LC_CTYPE = lex.LC_CTYPE
const LC_COLLATE = lex.LC_COLLATE
const LEADING = lex.LEADING
const LEASE = lex.LEASE
const LEAST = lex.LEAST
const LEFT = lex.LEFT
const LESS = lex.LESS
const LEVEL = lex.LEVEL
const LIKE = lex.LIKE
const LIMIT = lex.LIMIT
const LINESTRING = lex.LINESTRING
const LIST = lex.LIST
const LOCAL = lex.LOCAL
const LOCALTIME = lex.LOCALTIME
const LOCALTIMESTAMP = lex.LOCALTIMESTAMP
const LOCKED = lex.LOCKED
const LOGIN = lex.LOGIN
const LOOKUP = lex.LOOKUP
const LOW = lex.LOW
const LSHIFT = lex.LSHIFT
const MATCH = lex.MATCH
const MATERIALIZED = lex.MATERIALIZED
const MERGE = lex.MERGE
const MINVALUE = lex.MINVALUE
const MAXVALUE = lex.MAXVALUE
const MINUTE = lex.MINUTE
const MONTH = lex.MONTH
const MULTILINESTRING = lex.MULTILINESTRING
const MULTIPOINT = lex.MULTIPOINT
const MULTIPOLYGON = lex.MULTIPOLYGON
const NAN = lex.NAN
const NAME = lex.NAME
const NAMES = lex.NAMES
const NATURAL = lex.NATURAL
const NEVER = lex.NEVER
const NEXT = lex.NEXT
const NO = lex.NO
const NOCREATEROLE = lex.NOCREATEROLE
const NOLOGIN = lex.NOLOGIN
const NO_INDEX_JOIN = lex.NO_INDEX_JOIN
const NONE = lex.NONE
const NORMAL = lex.NORMAL
const NOT = lex.NOT
const NOTHING = lex.NOTHING
const NOTNULL = lex.NOTNULL
const NOWAIT = lex.NOWAIT
const NULL = lex.NULL
const NULLIF = lex.NULLIF
const NULLS = lex.NULLS
const NUMERIC = lex.NUMERIC
const OF = lex.OF
const OFF = lex.OFF
const OFFSET = lex.OFFSET
const OID = lex.OID
const OIDS = lex.OIDS
const OIDVECTOR = lex.OIDVECTOR
const ON = lex.ON
const ONLY = lex.ONLY
const OPT = lex.OPT
const OPTION = lex.OPTION
const OPTIONS = lex.OPTIONS
const OR = lex.OR
const ORDER = lex.ORDER
const ORDINALITY = lex.ORDINALITY
const OTHERS = lex.OTHERS
const OUT = lex.OUT
const OUTER = lex.OUTER
const OVER = lex.OVER
const OVERLAPS = lex.OVERLAPS
const OVERLAY = lex.OVERLAY
const OWNED = lex.OWNED
const OWNER = lex.OWNER
const OPERATOR = lex.OPERATOR
const PARENT = lex.PARENT
const PARTIAL = lex.PARTIAL
const PARTITION = lex.PARTITION
const PARTITIONS = lex.PARTITIONS
const PASSWORD = lex.PASSWORD
const PAUSE = lex.PAUSE
const PAUSED = lex.PAUSED
const PHYSICAL = lex.PHYSICAL
const PLACING = lex.PLACING
const PLAN = lex.PLAN
const PLANS = lex.PLANS
const POINT = lex.POINT
const POLYGON = lex.POLYGON
const POSITION = lex.POSITION
const PRECEDING = lex.PRECEDING
const PRECISION = lex.PRECISION
const PREPARE = lex.PREPARE
const PRESERVE = lex.PRESERVE
const PRIMARY = lex.PRIMARY
const PRIORITY = lex.PRIORITY
const PROCEDURAL = lex.PROCEDURAL
const PUBLIC = lex.PUBLIC
const PUBLICATION = lex.PUBLICATION
const QUERIES = lex.QUERIES
const QUERY = lex.QUERY
const RANGE = lex.RANGE
const RANGES = lex.RANGES
const READ = lex.READ
const REAL = lex.REAL
const RECURSIVE = lex.RECURSIVE
const RECURRING = lex.RECURRING
const REF = lex.REF
const REFERENCES = lex.REFERENCES
const REFRESH = lex.REFRESH
const REGCLASS = lex.REGCLASS
const REGPROC = lex.REGPROC
const REGPROCEDURE = lex.REGPROCEDURE
const REGNAMESPACE = lex.REGNAMESPACE
const REGTYPE = lex.REGTYPE
const REINDEX = lex.REINDEX
const REMOVE_PATH = lex.REMOVE_PATH
const RENAME = lex.RENAME
const REPEATABLE = lex.REPEATABLE
const REPLACE = lex.REPLACE
const RELEASE = lex.RELEASE
const RESET = lex.RESET
const RESTORE = lex.RESTORE
const RESTRICT = lex.RESTRICT
const RESUME = lex.RESUME
const RETURNING = lex.RETURNING
const RETRY = lex.RETRY
const REVISION_HISTORY = lex.REVISION_HISTORY
const REVOKE = lex.REVOKE
const RIGHT = lex.RIGHT
const ROLE = lex.ROLE
const ROLES = lex.ROLES
const ROLLBACK = lex.ROLLBACK
const ROLLUP = lex.ROLLUP
const ROW = lex.ROW
const ROWS = lex.ROWS
const RSHIFT = lex.RSHIFT
const RULE = lex.RULE
const RUNNING = lex.RUNNING
const SAVEPOINT = lex.SAVEPOINT
const SCATTER = lex.SCATTER
const SCHEDULE = lex.SCHEDULE
const SCHEDULES = lex.SCHEDULES
const SCHEMA = lex.SCHEMA
const SCHEMAS = lex.SCHEMAS
const SCRUB = lex.SCRUB
const SEARCH = lex.SEARCH
const SECOND = lex.SECOND
const SELECT = lex.SELECT
const SEQUENCE = lex.SEQUENCE
const SEQUENCES = lex.SEQUENCES
const SERIALIZABLE = lex.SERIALIZABLE
const SERVER = lex.SERVER
const SESSION = lex.SESSION
const SESSIONS = lex.SESSIONS
const SESSION_USER = lex.SESSION_USER
const SET = lex.SET
const SETTING = lex.SETTING
const SETTINGS = lex.SETTINGS
const SHARE = lex.SHARE
const SHOW = lex.SHOW
const SIMILAR = lex.SIMILAR
const SIMPLE = lex.SIMPLE
const SKIP = lex.SKIP
const SKIP_MISSING_FOREIGN_KEYS = lex.SKIP_MISSING_FOREIGN_KEYS
const SKIP_MISSING_SEQUENCES = lex.SKIP_MISSING_SEQUENCES
const SKIP_MISSING_SEQUENCE_OWNERS = lex.SKIP_MISSING_SEQUENCE_OWNERS
const SKIP_MISSING_VIEWS = lex.SKIP_MISSING_VIEWS
const SMALLINT = lex.SMALLINT
const SMALLSERIAL = lex.SMALLSERIAL
const SNAPSHOT = lex.SNAPSHOT
const SOME = lex.SOME
const SPLIT = lex.SPLIT
const SQL = lex.SQL
const START = lex.START
const STATISTICS = lex.STATISTICS
const STATUS = lex.STATUS
const STDIN = lex.STDIN
const STRICT = lex.STRICT
const STRING = lex.STRING
const STORAGE = lex.STORAGE
const STORE = lex.STORE
const STORED = lex.STORED
const STORING = lex.STORING
const SUBSTRING = lex.SUBSTRING
const SYMMETRIC = lex.SYMMETRIC
const SYNTAX = lex.SYNTAX
const SYSTEM = lex.SYSTEM
const SQRT = lex.SQRT
const SUBSCRIPTION = lex.SUBSCRIPTION
const TABLE = lex.TABLE
const TABLES = lex.TABLES
const TEMP = lex.TEMP
const TEMPLATE = lex.TEMPLATE
const TEMPORARY = lex.TEMPORARY
const TENANT = lex.TENANT
const TESTING_RELOCATE = lex.TESTING_RELOCATE
const EXPERIMENTAL_RELOCATE = lex.EXPERIMENTAL_RELOCATE
const TEXT = lex.TEXT
const THEN = lex.THEN
const TIES = lex.TIES
const TIME = lex.TIME
const TIMETZ = lex.TIMETZ
const TIMESTAMP = lex.TIMESTAMP
const TIMESTAMPTZ = lex.TIMESTAMPTZ
const TO = lex.TO
const THROTTLING = lex.THROTTLING
const TRAILING = lex.TRAILING
const TRACE = lex.TRACE
const TRANSACTION = lex.TRANSACTION
const TREAT = lex.TREAT
const TRIGGER = lex.TRIGGER
const TRIM = lex.TRIM
const TRUE = lex.TRUE
const TRUNCATE = lex.TRUNCATE
const TRUSTED = lex.TRUSTED
const TYPE = lex.TYPE
const TRACING = lex.TRACING
const UNBOUNDED = lex.UNBOUNDED
const UNCOMMITTED = lex.UNCOMMITTED
const UNION = lex.UNION
const UNIQUE = lex.UNIQUE
const UNKNOWN = lex.UNKNOWN
const UNLOGGED = lex.UNLOGGED
const UNSPLIT = lex.UNSPLIT
const UPDATE = lex.UPDATE
const UPSERT = lex.UPSERT
const UNTIL = lex.UNTIL
const USE = lex.USE
const USER = lex.USER
const USERS = lex.USERS
const USING = lex.USING
const UUID = lex.UUID
const VALID = lex.VALID
const VALIDATE = lex.VALIDATE
const VALUE = lex.VALUE
const VALUES = lex.VALUES
const VARBIT = lex.VARBIT
const VARCHAR = lex.VARCHAR
const VARIADIC = lex.VARIADIC
const VIEW = lex.VIEW
const VARYING = lex.VARYING
const VIRTUAL = lex.VIRTUAL
const WHEN = lex.WHEN
const WHERE = lex.WHERE
const WINDOW = lex.WINDOW
const WITH = lex.WITH
const WITHIN = lex.WITHIN
const WITHOUT = lex.WITHOUT
const WORK = lex.WORK
const WRITE = lex.WRITE
const YEAR = lex.YEAR
const ZONE = lex.ZONE
const NOT_LA = lex.NOT_LA
const WITH_LA = lex.WITH_LA
const AS_LA = lex.AS_LA
const GENERATED_ALWAYS = lex.GENERATED_ALWAYS
const CONTAINED_BY = lex.CONTAINED_BY
const POSTFIXOP = lex.POSTFIXOP
const UMINUS = lex.UMINUS
const HELPTOKEN = lex.HELPTOKEN

var sqlToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENT",
	"SCONST",
	"BCONST",
	"BITCONST",
	"ICONST",
	"FCONST",
	"PLACEHOLDER",
	"TYPECAST",
	"TYPEANNOTATE",
	"DOT_DOT",
	"LESS_EQUALS",
	"GREATER_EQUALS",
	"NOT_EQUALS",
	"NOT_REGMATCH",
	"REGIMATCH",
	"NOT_REGIMATCH",
	"ERROR",
	"ABORT",
	"ACTION",
	"ADD",
	"ADMIN",
	"AFTER",
	"AGGREGATE",
	"ALL",
	"ALTER",
	"ALWAYS",
	"ANALYSE",
	"ANALYZE",
	"AND",
	"AND_AND",
	"ANY",
	"ANNOTATE_TYPE",
	"ARRAY",
	"AS",
	"ASC",
	"ASYMMETRIC",
	"AT",
	"ATTRIBUTE",
	"AUTHORIZATION",
	"AUTOMATIC",
	"BACKUP",
	"BEFORE",
	"BEGIN",
	"BETWEEN",
	"BIGINT",
	"BIGSERIAL",
	"BINARY",
	"BIT",
	"BUCKET_COUNT",
	"BOOLEAN",
	"BOTH",
	"BOX2D",
	"BUNDLE",
	"BY",
	"CACHE",
	"CANCEL",
	"CASCADE",
	"CASE",
	"CAST",
	"CBRT",
	"CHANGEFEED",
	"CHAR",
	"CHARACTER",
	"CHARACTERISTICS",
	"CHECK",
	"CLOSE",
	"CLUSTER",
	"COALESCE",
	"COLLATE",
	"COLLATION",
	"COLUMN",
	"COLUMNS",
	"COMMENT",
	"COMMENTS",
	"COMMIT",
	"COMMITTED",
	"COMPACT",
	"COMPLETE",
	"CONCAT",
	"CONCURRENTLY",
	"CONFIGURATION",
	"CONFIGURATIONS",
	"CONFIGURE",
	"CONFLICT",
	"CONSTRAINT",
	"CONSTRAINTS",
	"CONTAINS",
	"CONVERSION",
	"COPY",
	"COVERING",
	"CREATE",
	"CREATEROLE",
	"CROSS",
	"CUBE",
	"CURRENT",
	"CURRENT_CATALOG",
	"CURRENT_DATE",
	"CURRENT_SCHEMA",
	"CURRENT_ROLE",
	"CURRENT_TIME",
	"CURRENT_TIMESTAMP",
	"CURRENT_USER",
	"CYCLE",
	"DATA",
	"DATABASE",
	"DATABASES",
	"DATE",
	"DAY",
	"DEC",
	"DECIMAL",
	"DEFAULT",
	"DEFAULTS",
	"DEALLOCATE",
	"DECLARE",
	"DEFERRABLE",
	"DEFERRED",
	"DELETE",
	"DESC",
	"DESTINATION",
	"DETACHED",
	"DISCARD",
	"DISTINCT",
	"DO",
	"DOMAIN",
	"DOUBLE",
	"DROP",
	"ELSE",
	"ENCODING",
	"ENCRYPTION_PASSPHRASE",
	"END",
	"ENUM",
	"ENUMS",
	"ESCAPE",
	"EXCEPT",
	"EXCLUDE",
	"EXCLUDING",
	"EXISTS",
	"EXECUTE",
	"EXECUTION",
	"EXPERIMENTAL",
	"EXPERIMENTAL_FINGERPRINTS",
	"EXPERIMENTAL_REPLICA",
	"EXPERIMENTAL_AUDIT",
	"EXPIRATION",
	"EXPLAIN",
	"EXPORT",
	"EXTENSION",
	"EXTRACT",
	"EXTRACT_DURATION",
	"FALSE",
	"FAMILY",
	"FETCH",
	"FETCHVAL",
	"FETCHTEXT",
	"FETCHVAL_PATH",
	"FETCHTEXT_PATH",
	"FILES",
	"FILTER",
	"FIRST",
	"FLOAT",
	"FLOAT4",
	"FLOAT8",
	"FLOORDIV",
	"FOLLOWING",
	"FOR",
	"FORCE_INDEX",
	"FOREIGN",
	"FROM",
	"FULL",
	"FUNCTION",
	"GENERATED",
	"GEOGRAPHY",
	"GEOMETRY",
	"GEOMETRYCOLLECTION",
	"GLOBAL",
	"GRANT",
	"GRANTS",
	"GREATEST",
	"GROUP",
	"GROUPING",
	"GROUPS",
	"HAVING",
	"HASH",
	"HIGH",
	"HISTOGRAM",
	"HOUR",
	"IDENTITY",
	"IF",
	"IFERROR",
	"IFNULL",
	"IGNORE_FOREIGN_KEYS",
	"ILIKE",
	"IMMEDIATE",
	"IMPORT",
	"IN",
	"INCLUDE",
	"INCLUDING",
	"INCREMENT",
	"INCREMENTAL",
	"INET",
	"INET_CONTAINED_BY_OR_EQUALS",
	"INET_CONTAINS_OR_EQUALS",
	"INDEX",
	"INDEXES",
	"INJECT",
	"INTERLEAVE",
	"INITIALLY",
	"INNER",
	"INSERT",
	"INT",
	"INTEGER",
	"INTERSECT",
	"INTERVAL",
	"INTO",
	"INTO_DB",
	"INVERTED",
	"IS",
	"ISERROR",
	"ISNULL",
	"ISOLATION",
	"JOB",
	"JOBS",
	"JOIN",
	"JSON",
	"JSONB",
	"JSON_SOME_EXISTS",
	"JSON_ALL_EXISTS",
	"KEY",
	"KEYS",
	"KMS",
	"KV",
	"LANGUAGE",
	"LAST",
	"LATERAL",
	"LATEST",
	"LC_CTYPE",
	"LC_COLLATE",
	"LEADING",
	"LEASE",
	"LEAST",
	"LEFT",
	"LESS",
	"LEVEL",
	"LIKE",
	"LIMIT",
	"LINESTRING",
	"LIST",
	"LOCAL",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"LOCKED",
	"LOGIN",
	"LOOKUP",
	"LOW",
	"LSHIFT",
	"MATCH",
	"MATERIALIZED",
	"MERGE",
	"MINVALUE",
	"MAXVALUE",
	"MINUTE",
	"MONTH",
	"MULTILINESTRING",
	"MULTIPOINT",
	"MULTIPOLYGON",
	"NAN",
	"NAME",
	"NAMES",
	"NATURAL",
	"NEVER",
	"NEXT",
	"NO",
	"NOCREATEROLE",
	"NOLOGIN",
	"NO_INDEX_JOIN",
	"NONE",
	"NORMAL",
	"NOT",
	"NOTHING",
	"NOTNULL",
	"NOWAIT",
	"NULL",
	"NULLIF",
	"NULLS",
	"NUMERIC",
	"OF",
	"OFF",
	"OFFSET",
	"OID",
	"OIDS",
	"OIDVECTOR",
	"ON",
	"ONLY",
	"OPT",
	"OPTION",
	"OPTIONS",
	"OR",
	"ORDER",
	"ORDINALITY",
	"OTHERS",
	"OUT",
	"OUTER",
	"OVER",
	"OVERLAPS",
	"OVERLAY",
	"OWNED",
	"OWNER",
	"OPERATOR",
	"PARENT",
	"PARTIAL",
	"PARTITION",
	"PARTITIONS",
	"PASSWORD",
	"PAUSE",
	"PAUSED",
	"PHYSICAL",
	"PLACING",
	"PLAN",
	"PLANS",
	"POINT",
	"POLYGON",
	"POSITION",
	"PRECEDING",
	"PRECISION",
	"PREPARE",
	"PRESERVE",
	"PRIMARY",
	"PRIORITY",
	"PROCEDURAL",
	"PUBLIC",
	"PUBLICATION",
	"QUERIES",
	"QUERY",
	"RANGE",
	"RANGES",
	"READ",
	"REAL",
	"RECURSIVE",
	"RECURRING",
	"REF",
	"REFERENCES",
	"REFRESH",
	"REGCLASS",
	"REGPROC",
	"REGPROCEDURE",
	"REGNAMESPACE",
	"REGTYPE",
	"REINDEX",
	"REMOVE_PATH",
	"RENAME",
	"REPEATABLE",
	"REPLACE",
	"RELEASE",
	"RESET",
	"RESTORE",
	"RESTRICT",
	"RESUME",
	"RETURNING",
	"RETRY",
	"REVISION_HISTORY",
	"REVOKE",
	"RIGHT",
	"ROLE",
	"ROLES",
	"ROLLBACK",
	"ROLLUP",
	"ROW",
	"ROWS",
	"RSHIFT",
	"RULE",
	"RUNNING",
	"SAVEPOINT",
	"SCATTER",
	"SCHEDULE",
	"SCHEDULES",
	"SCHEMA",
	"SCHEMAS",
	"SCRUB",
	"SEARCH",
	"SECOND",
	"SELECT",
	"SEQUENCE",
	"SEQUENCES",
	"SERIALIZABLE",
	"SERVER",
	"SESSION",
	"SESSIONS",
	"SESSION_USER",
	"SET",
	"SETTING",
	"SETTINGS",
	"SHARE",
	"SHOW",
	"SIMILAR",
	"SIMPLE",
	"SKIP",
	"SKIP_MISSING_FOREIGN_KEYS",
	"SKIP_MISSING_SEQUENCES",
	"SKIP_MISSING_SEQUENCE_OWNERS",
	"SKIP_MISSING_VIEWS",
	"SMALLINT",
	"SMALLSERIAL",
	"SNAPSHOT",
	"SOME",
	"SPLIT",
	"SQL",
	"START",
	"STATISTICS",
	"STATUS",
	"STDIN",
	"STRICT",
	"STRING",
	"STORAGE",
	"STORE",
	"STORED",
	"STORING",
	"SUBSTRING",
	"SYMMETRIC",
	"SYNTAX",
	"SYSTEM",
	"SQRT",
	"SUBSCRIPTION",
	"TABLE",
	"TABLES",
	"TEMP",
	"TEMPLATE",
	"TEMPORARY",
	"TENANT",
	"TESTING_RELOCATE",
	"EXPERIMENTAL_RELOCATE",
	"TEXT",
	"THEN",
	"TIES",
	"TIME",
	"TIMETZ",
	"TIMESTAMP",
	"TIMESTAMPTZ",
	"TO",
	"THROTTLING",
	"TRAILING",
	"TRACE",
	"TRANSACTION",
	"TREAT",
	"TRIGGER",
	"TRIM",
	"TRUE",
	"TRUNCATE",
	"TRUSTED",
	"TYPE",
	"TRACING",
	"UNBOUNDED",
	"UNCOMMITTED",
	"UNION",
	"UNIQUE",
	"UNKNOWN",
	"UNLOGGED",
	"UNSPLIT",
	"UPDATE",
	"UPSERT",
	"UNTIL",
	"USE",
	"USER",
	"USERS",
	"USING",
	"UUID",
	"VALID",
	"VALIDATE",
	"VALUE",
	"VALUES",
	"VARBIT",
	"VARCHAR",
	"VARIADIC",
	"VIEW",
	"VARYING",
	"VIRTUAL",
	"WHEN",
	"WHERE",
	"WINDOW",
	"WITH",
	"WITHIN",
	"WITHOUT",
	"WORK",
	"WRITE",
	"YEAR",
	"ZONE",
	"NOT_LA",
	"WITH_LA",
	"AS_LA",
	"GENERATED_ALWAYS",
	"'<'",
	"'>'",
	"'='",
	"'~'",
	"CONTAINED_BY",
	"'?'",
	"POSTFIXOP",
	"'|'",
	"'#'",
	"'&'",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"'%'",
	"'^'",
	"UMINUS",
	"'['",
	"']'",
	"'('",
	"')'",
	"'.'",
	"HELPTOKEN",
	"'@'",
	"','",
	"'{'",
	"'}'",
	"':'",
}
var sqlStatenames = [...]string{}

const sqlEofCode = 1
const sqlErrCode = 2
const sqlInitialStackSize = 16

//line sql-gen.y:11586

//line yacctab:1
var sqlExca = [...]int{
	-1, 0,
	1, 31,
	-2, 1305,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 69,
	217, 195,
	441, 195,
	-2, 0,
	-1, 79,
	206, 1109,
	219, 1109,
	235, 335,
	332, 335,
	341, 905,
	373, 335,
	385, 905,
	426, 905,
	451, 335,
	476, 905,
	-2, 0,
	-1, 85,
	235, 339,
	-2, 0,
	-1, 86,
	120, 1305,
	212, 1305,
	461, 1305,
	462, 1305,
	-2, 0,
	-1, 102,
	137, 1276,
	155, 1276,
	168, 1276,
	215, 1276,
	248, 1276,
	291, 1276,
	301, 1276,
	456, 1276,
	-2, 1247,
	-1, 136,
	145, 790,
	234, 790,
	335, 759,
	390, 759,
	444, 790,
	-2, 0,
	-1, 138,
	4, 1307,
	21, 1307,
	22, 1307,
	23, 1307,
	24, 1307,
	25, 1307,
	26, 1307,
	28, 1307,
	29, 1307,
	35, 1307,
	40, 1307,
	41, 1307,
	42, 1307,
	43, 1307,
	44, 1307,
	45, 1307,
	46, 1307,
	47, 1307,
	48, 1307,
	50, 1307,
	51, 1307,
	52, 1307,
	53, 1307,
	55, 1307,
	56, 1307,
	57, 1307,
	58, 1307,
	59, 1307,
	60, 1307,
	64, 1307,
	65, 1307,
	66, 1307,
	67, 1307,
	69, 1307,
	70, 1307,
	71, 1307,
	75, 1307,
	76, 1307,
	77, 1307,
	78, 1307,
	79, 1307,
	80, 1307,
	81, 1307,
	84, 1307,
	85, 1307,
	86, 1307,
	87, 1307,
	89, 1307,
	91, 1307,
	92, 1307,
	93, 1307,
	95, 1307,
	97, 1307,
	98, 1307,
	106, 1307,
	107, 1307,
	108, 1307,
	109, 1307,
	111, 1307,
	112, 1307,
	113, 1307,
	115, 1307,
	116, 1307,
	117, 1307,
	119, 1307,
	120, 1307,
	122, 1307,
	123, 1307,
	124, 1307,
	127, 1307,
	128, 1307,
	129, 1307,
	131, 1307,
	132, 1307,
	134, 1307,
	135, 1307,
	136, 1307,
	138, 1307,
	139, 1307,
	140, 1307,
	141, 1307,
	142, 1307,
	143, 1307,
	144, 1307,
	145, 1307,
	146, 1307,
	147, 1307,
	148, 1307,
	149, 1307,
	150, 1307,
	151, 1307,
	152, 1307,
	154, 1307,
	160, 1307,
	161, 1307,
	162, 1307,
	163, 1307,
	167, 1307,
	169, 1307,
	173, 1307,
	174, 1307,
	175, 1307,
	176, 1307,
	177, 1307,
	178, 1307,
	180, 1307,
	181, 1307,
	183, 1307,
	184, 1307,
	186, 1307,
	187, 1307,
	188, 1307,
	189, 1307,
	190, 1307,
	191, 1307,
	192, 1307,
	193, 1307,
	194, 1307,
	196, 1307,
	197, 1307,
	199, 1307,
	200, 1307,
	201, 1307,
	202, 1307,
	206, 1307,
	207, 1307,
	208, 1307,
	209, 1307,
	212, 1307,
	213, 1307,
	214, 1307,
	216, 1307,
	218, 1307,
	219, 1307,
	221, 1307,
	223, 1307,
	224, 1307,
	225, 1307,
	227, 1307,
	231, 1307,
	232, 1307,
	233, 1307,
	234, 1307,
	235, 1307,
	236, 1307,
	238, 1307,
	239, 1307,
	240, 1307,
	242, 1307,
	243, 1307,
	245, 1307,
	246, 1307,
	249, 1307,
	250, 1307,
	251, 1307,
	254, 1307,
	255, 1307,
	256, 1307,
	257, 1307,
	259, 1307,
	260, 1307,
	261, 1307,
	262, 1307,
	263, 1307,
	264, 1307,
	265, 1307,
	266, 1307,
	267, 1307,
	268, 1307,
	269, 1307,
	271, 1307,
	273, 1307,
	274, 1307,
	275, 1307,
	276, 1307,
	277, 1307,
	278, 1307,
	280, 1307,
	282, 1307,
	284, 1307,
	286, 1307,
	287, 1307,
	288, 1307,
	289, 1307,
	290, 1307,
	293, 1307,
	296, 1307,
	297, 1307,
	298, 1307,
	299, 1307,
	302, 1307,
	303, 1307,
	304, 1307,
	306, 1307,
	308, 1307,
	309, 1307,
	310, 1307,
	311, 1307,
	312, 1307,
	313, 1307,
	314, 1307,
	315, 1307,
	316, 1307,
	317, 1307,
	318, 1307,
	319, 1307,
	321, 1307,
	322, 1307,
	323, 1307,
	324, 1307,
	325, 1307,
	326, 1307,
	327, 1307,
	328, 1307,
	329, 1307,
	331, 1307,
	333, 1307,
	334, 1307,
	335, 1307,
	336, 1307,
	337, 1307,
	338, 1307,
	339, 1307,
	340, 1307,
	341, 1307,
	342, 1307,
	343, 1307,
	345, 1307,
	351, 1307,
	353, 1307,
	354, 1307,
	355, 1307,
	356, 1307,
	357, 1307,
	358, 1307,
	359, 1307,
	360, 1307,
	362, 1307,
	363, 1307,
	364, 1307,
	366, 1307,
	367, 1307,
	368, 1307,
	369, 1307,
	370, 1307,
	371, 1307,
	373, 1307,
	374, 1307,
	375, 1307,
	376, 1307,
	377, 1307,
	378, 1307,
	379, 1307,
	380, 1307,
	381, 1307,
	382, 1307,
	383, 1307,
	385, 1307,
	386, 1307,
	387, 1307,
	388, 1307,
	389, 1307,
	390, 1307,
	392, 1307,
	393, 1307,
	394, 1307,
	395, 1307,
	396, 1307,
	398, 1307,
	399, 1307,
	400, 1307,
	401, 1307,
	402, 1307,
	403, 1307,
	404, 1307,
	406, 1307,
	408, 1307,
	409, 1307,
	410, 1307,
	411, 1307,
	412, 1307,
	413, 1307,
	414, 1307,
	415, 1307,
	416, 1307,
	417, 1307,
	418, 1307,
	419, 1307,
	420, 1307,
	422, 1307,
	423, 1307,
	425, 1307,
	427, 1307,
	428, 1307,
	429, 1307,
	430, 1307,
	431, 1307,
	432, 1307,
	433, 1307,
	434, 1307,
	436, 1307,
	437, 1307,
	438, 1307,
	439, 1307,
	440, 1307,
	442, 1307,
	444, 1307,
	445, 1307,
	446, 1307,
	447, 1307,
	448, 1307,
	450, 1307,
	451, 1307,
	452, 1307,
	454, 1307,
	455, 1307,
	458, 1307,
	459, 1307,
	460, 1307,
	461, 1307,
	462, 1307,
	463, 1307,
	464, 1307,
	466, 1307,
	469, 1307,
	470, 1307,
	471, 1307,
	472, 1307,
	473, 1307,
	474, 1307,
	476, 1307,
	477, 1307,
	478, 1307,
	483, 1307,
	484, 1307,
	485, 1307,
	486, 1307,
	487, 1307,
	488, 1307,
	-2, 0,
	-1, 139,
	1, 1181,
	223, 1181,
	331, 1181,
	339, 1181,
	491, 1181,
	515, 1181,
	-2, 0,
	-1, 141,
	1, 1181,
	515, 1181,
	-2, 0,
	-1, 142,
	1, 1181,
	515, 1181,
	-2, 0,
	-1, 143,
	1, 1181,
	441, 1181,
	515, 1181,
	-2, 0,
	-1, 172,
	137, 1275,
	155, 1275,
	168, 1275,
	215, 1275,
	248, 1275,
	291, 1275,
	301, 1275,
	456, 1275,
	-2, 1250,
	-1, 208,
	4, 1314,
	5, 1314,
	6, 1314,
	7, 1314,
	8, 1314,
	9, 1314,
	10, 1314,
	21, 1314,
	22, 1314,
	23, 1314,
	24, 1314,
	25, 1314,
	26, 1314,
	28, 1314,
	29, 1314,
	35, 1314,
	36, 1314,
	40, 1314,
	41, 1314,
	42, 1314,
	43, 1314,
	44, 1314,
	45, 1314,
	46, 1314,
	47, 1314,
	48, 1314,
	50, 1314,
	51, 1314,
	52, 1314,
	53, 1314,
	55, 1314,
	56, 1314,
	57, 1314,
	58, 1314,
	59, 1314,
	60, 1314,
	61, 1314,
	62, 1314,
	63, 1314,
	64, 1314,
	65, 1314,
	66, 1314,
	67, 1314,
	69, 1314,
	70, 1314,
	71, 1314,
	73, 1314,
	75, 1314,
	76, 1314,
	77, 1314,
	78, 1314,
	79, 1314,
	80, 1314,
	81, 1314,
	84, 1314,
	85, 1314,
	86, 1314,
	87, 1314,
	89, 1314,
	91, 1314,
	92, 1314,
	93, 1314,
	95, 1314,
	96, 1314,
	97, 1314,
	98, 1314,
	99, 1314,
	100, 1314,
	101, 1314,
	102, 1314,
	103, 1314,
	104, 1314,
	105, 1314,
	106, 1314,
	107, 1314,
	108, 1314,
	109, 1314,
	110, 1314,
	111, 1314,
	112, 1314,
	113, 1314,
	114, 1314,
	115, 1314,
	116, 1314,
	117, 1314,
	119, 1314,
	120, 1314,
	122, 1314,
	123, 1314,
	124, 1314,
	127, 1314,
	128, 1314,
	129, 1314,
	131, 1314,
	132, 1314,
	134, 1314,
	135, 1314,
	136, 1314,
	138, 1314,
	139, 1314,
	140, 1314,
	141, 1314,
	142, 1314,
	143, 1314,
	144, 1314,
	145, 1314,
	146, 1314,
	147, 1314,
	148, 1314,
	149, 1314,
	150, 1314,
	151, 1314,
	152, 1314,
	153, 1314,
	154, 1314,
	160, 1314,
	161, 1314,
	162, 1314,
	163, 1314,
	167, 1314,
	169, 1314,
	172, 1314,
	173, 1314,
	174, 1314,
	175, 1314,
	176, 1314,
	177, 1314,
	178, 1314,
	180, 1314,
	181, 1314,
	183, 1314,
	184, 1314,
	186, 1314,
	187, 1314,
	188, 1314,
	189, 1314,
	190, 1314,
	191, 1314,
	192, 1314,
	193, 1314,
	194, 1314,
	195, 1314,
	196, 1314,
	197, 1314,
	199, 1314,
	200, 1314,
	201, 1314,
	202, 1314,
	206, 1314,
	207, 1314,
	208, 1314,
	209, 1314,
	211, 1314,
	212, 1314,
	213, 1314,
	214, 1314,
	216, 1314,
	218, 1314,
	219, 1314,
	220, 1314,
	221, 1314,
	222, 1314,
	223, 1314,
	224, 1314,
	225, 1314,
	226, 1314,
	227, 1314,
	231, 1314,
	232, 1314,
	233, 1314,
	234, 1314,
	235, 1314,
	236, 1314,
	238, 1314,
	239, 1314,
	240, 1314,
	242, 1314,
	243, 1314,
	244, 1314,
	245, 1314,
	246, 1314,
	247, 1314,
	249, 1314,
	250, 1314,
	251, 1314,
	252, 1314,
	253, 1314,
	254, 1314,
	255, 1314,
	256, 1314,
	257, 1314,
	259, 1314,
	260, 1314,
	261, 1314,
	262, 1314,
	263, 1314,
	264, 1314,
	265, 1314,
	266, 1314,
	267, 1314,
	268, 1314,
	269, 1314,
	271, 1314,
	272, 1314,
	273, 1314,
	274, 1314,
	275, 1314,
	276, 1314,
	277, 1314,
	278, 1314,
	279, 1314,
	280, 1314,
	281, 1314,
	282, 1314,
	283, 1314,
	284, 1314,
	285, 1314,
	286, 1314,
	287, 1314,
	288, 1314,
	289, 1314,
	290, 1314,
	293, 1314,
	297, 1314,
	298, 1314,
	299, 1314,
	302, 1314,
	303, 1314,
	304, 1314,
	305, 1314,
	306, 1314,
	307, 1314,
	308, 1314,
	309, 1314,
	310, 1314,
	311, 1314,
	312, 1314,
	313, 1314,
	314, 1314,
	315, 1314,
	316, 1314,
	317, 1314,
	318, 1314,
	319, 1314,
	321, 1314,
	322, 1314,
	323, 1314,
	324, 1314,
	325, 1314,
	326, 1314,
	327, 1314,
	328, 1314,
	329, 1314,
	331, 1314,
	333, 1314,
	334, 1314,
	335, 1314,
	336, 1314,
	337, 1314,
	338, 1314,
	339, 1314,
	340, 1314,
	341, 1314,
	342, 1314,
	343, 1314,
	345, 1314,
	351, 1314,
	353, 1314,
	354, 1314,
	355, 1314,
	356, 1314,
	357, 1314,
	358, 1314,
	359, 1314,
	360, 1314,
	362, 1314,
	363, 1314,
	364, 1314,
	365, 1314,
	366, 1314,
	367, 1314,
	368, 1314,
	369, 1314,
	370, 1314,
	371, 1314,
	373, 1314,
	374, 1314,
	375, 1314,
	376, 1314,
	377, 1314,
	378, 1314,
	379, 1314,
	380, 1314,
	381, 1314,
	382, 1314,
	383, 1314,
	385, 1314,
	386, 1314,
	387, 1314,
	388, 1314,
	389, 1314,
	390, 1314,
	391, 1314,
	392, 1314,
	393, 1314,
	394, 1314,
	395, 1314,
	396, 1314,
	397, 1314,
	398, 1314,
	399, 1314,
	400, 1314,
	401, 1314,
	402, 1314,
	403, 1314,
	404, 1314,
	406, 1314,
	408, 1314,
	409, 1314,
	410, 1314,
	411, 1314,
	412, 1314,
	413, 1314,
	414, 1314,
	415, 1314,
	416, 1314,
	417, 1314,
	418, 1314,
	419, 1314,
	420, 1314,
	422, 1314,
	423, 1314,
	424, 1314,
	425, 1314,
	427, 1314,
	428, 1314,
	429, 1314,
	430, 1314,
	431, 1314,
	432, 1314,
	433, 1314,
	434, 1314,
	436, 1314,
	437, 1314,
	438, 1314,
	439, 1314,
	440, 1314,
	442, 1314,
	444, 1314,
	445, 1314,
	446, 1314,
	447, 1314,
	448, 1314,
	449, 1314,
	450, 1314,
	451, 1314,
	452, 1314,
	454, 1314,
	455, 1314,
	457, 1314,
	458, 1314,
	459, 1314,
	460, 1314,
	461, 1314,
	462, 1314,
	463, 1314,
	464, 1314,
	465, 1314,
	466, 1314,
	469, 1314,
	470, 1314,
	471, 1314,
	472, 1314,
	473, 1314,
	474, 1314,
	476, 1314,
	477, 1314,
	478, 1314,
	483, 1314,
	484, 1314,
	485, 1314,
	486, 1314,
	487, 1314,
	488, 1314,
	489, 1314,
	496, 1314,
	503, 1314,
	504, 1314,
	505, 1314,
	512, 1314,
	516, 1314,
	-2, 0,
	-1, 622,
	171, 2022,
	441, 2022,
	495, 2022,
	514, 2022,
	-2, 0,
	-1, 623,
	171, 2109,
	441, 2109,
	495, 2109,
	514, 2109,
	-2, 0,
	-1, 624,
	171, 2010,
	441, 2010,
	495, 2010,
	514, 2010,
	-2, 0,
	-1, 626,
	171, 2208,
	441, 2208,
	495, 2208,
	514, 2208,
	-2, 0,
	-1, 628,
	171, 2242,
	441, 2242,
	495, 2242,
	514, 2242,
	-2, 0,
	-1, 635,
	171, 2124,
	441, 2124,
	495, 2124,
	514, 2124,
	-2, 609,
	-1, 666,
	514, 1962,
	517, 1962,
	-2, 844,
	-1, 667,
	514, 1964,
	517, 1964,
	-2, 845,
	-1, 668,
	514, 1963,
	517, 1963,
	-2, 846,
	-1, 669,
	517, 1897,
	-2, 847,
	-1, 691,
	168, 209,
	-2, 0,
	-1, 713,
	476, 1086,
	-2, 906,
	-1, 753,
	4, 1107,
	21, 1107,
	22, 1107,
	23, 1107,
	24, 1107,
	25, 1107,
	26, 1107,
	28, 1107,
	29, 1107,
	35, 1107,
	40, 1107,
	41, 1107,
	42, 1107,
	43, 1107,
	44, 1107,
	45, 1107,
	46, 1107,
	47, 1107,
	48, 1107,
	50, 1107,
	51, 1107,
	52, 1107,
	53, 1107,
	55, 1107,
	56, 1107,
	57, 1107,
	58, 1107,
	59, 1107,
	60, 1107,
	64, 1107,
	65, 1107,
	66, 1107,
	67, 1107,
	69, 1107,
	70, 1107,
	71, 1107,
	75, 1107,
	76, 1107,
	77, 1107,
	78, 1107,
	79, 1107,
	80, 1107,
	81, 1107,
	84, 1107,
	85, 1107,
	86, 1107,
	87, 1107,
	89, 1107,
	91, 1107,
	92, 1107,
	93, 1107,
	95, 1107,
	97, 1107,
	98, 1107,
	106, 1107,
	107, 1107,
	108, 1107,
	109, 1107,
	111, 1107,
	112, 1107,
	113, 1107,
	115, 1107,
	116, 1107,
	117, 1107,
	119, 1107,
	120, 1107,
	122, 1107,
	123, 1107,
	124, 1107,
	127, 1107,
	128, 1107,
	129, 1107,
	131, 1107,
	132, 1107,
	134, 1107,
	135, 1107,
	136, 1107,
	138, 1107,
	139, 1107,
	140, 1107,
	141, 1107,
	142, 1107,
	143, 1107,
	144, 1107,
	145, 1107,
	146, 1107,
	147, 1107,
	148, 1107,
	149, 1107,
	150, 1107,
	151, 1107,
	152, 1107,
	154, 1107,
	160, 1107,
	161, 1107,
	162, 1107,
	163, 1107,
	167, 1107,
	169, 1107,
	173, 1107,
	174, 1107,
	175, 1107,
	176, 1107,
	177, 1107,
	178, 1107,
	180, 1107,
	181, 1107,
	183, 1107,
	184, 1107,
	186, 1107,
	187, 1107,
	188, 1107,
	189, 1107,
	190, 1107,
	191, 1107,
	192, 1107,
	193, 1107,
	194, 1107,
	196, 1107,
	197, 1107,
	199, 1107,
	200, 1107,
	201, 1107,
	202, 1107,
	206, 1107,
	207, 1107,
	208, 1107,
	209, 1107,
	212, 1107,
	213, 1107,
	214, 1107,
	216, 1107,
	218, 1107,
	219, 1107,
	221, 1107,
	223, 1107,
	224, 1107,
	225, 1107,
	227, 1107,
	231, 1107,
	232, 1107,
	233, 1107,
	234, 1107,
	235, 1107,
	236, 1107,
	238, 1107,
	239, 1107,
	240, 1107,
	242, 1107,
	243, 1107,
	245, 1107,
	246, 1107,
	249, 1107,
	250, 1107,
	251, 1107,
	254, 1107,
	255, 1107,
	256, 1107,
	257, 1107,
	259, 1107,
	260, 1107,
	261, 1107,
	262, 1107,
	263, 1107,
	264, 1107,
	265, 1107,
	266, 1107,
	267, 1107,
	268, 1107,
	269, 1107,
	271, 1107,
	273, 1107,
	274, 1107,
	275, 1107,
	276, 1107,
	277, 1107,
	278, 1107,
	280, 1107,
	282, 1107,
	284, 1107,
	286, 1107,
	287, 1107,
	288, 1107,
	289, 1107,
	290, 1107,
	293, 1107,
	297, 1107,
	298, 1107,
	299, 1107,
	302, 1107,
	303, 1107,
	304, 1107,
	306, 1107,
	308, 1107,
	309, 1107,
	310, 1107,
	311, 1107,
	312, 1107,
	313, 1107,
	314, 1107,
	315, 1107,
	316, 1107,
	317, 1107,
	318, 1107,
	319, 1107,
	321, 1107,
	322, 1107,
	323, 1107,
	324, 1107,
	325, 1107,
	326, 1107,
	327, 1107,
	328, 1107,
	329, 1107,
	331, 1107,
	333, 1107,
	334, 1107,
	335, 1107,
	336, 1107,
	337, 1107,
	338, 1107,
	339, 1107,
	340, 1107,
	341, 1107,
	342, 1107,
	343, 1107,
	345, 1107,
	351, 1107,
	353, 1107,
	354, 1107,
	355, 1107,
	356, 1107,
	357, 1107,
	358, 1107,
	359, 1107,
	360, 1107,
	362, 1107,
	363, 1107,
	364, 1107,
	366, 1107,
	367, 1107,
	368, 1107,
	369, 1107,
	370, 1107,
	371, 1107,
	373, 1107,
	374, 1107,
	375, 1107,
	376, 1107,
	377, 1107,
	378, 1107,
	379, 1107,
	380, 1107,
	381, 1107,
	382, 1107,
	383, 1107,
	385, 1107,
	386, 1107,
	387, 1107,
	388, 1107,
	389, 1107,
	390, 1107,
	392, 1107,
	393, 1107,
	394, 1107,
	395, 1107,
	396, 1107,
	398, 1107,
	399, 1107,
	400, 1107,
	401, 1107,
	402, 1107,
	403, 1107,
	404, 1107,
	406, 1107,
	408, 1107,
	409, 1107,
	410, 1107,
	411, 1107,
	412, 1107,
	413, 1107,
	414, 1107,
	415, 1107,
	416, 1107,
	417, 1107,
	418, 1107,
	419, 1107,
	420, 1107,
	422, 1107,
	423, 1107,
	425, 1107,
	427, 1107,
	428, 1107,
	429, 1107,
	430, 1107,
	431, 1107,
	432, 1107,
	433, 1107,
	434, 1107,
	436, 1107,
	437, 1107,
	438, 1107,
	439, 1107,
	440, 1107,
	442, 1107,
	444, 1107,
	445, 1107,
	446, 1107,
	447, 1107,
	448, 1107,
	450, 1107,
	451, 1107,
	452, 1107,
	454, 1107,
	455, 1107,
	458, 1107,
	459, 1107,
	460, 1107,
	461, 1107,
	462, 1107,
	463, 1107,
	464, 1107,
	466, 1107,
	469, 1107,
	470, 1107,
	471, 1107,
	472, 1107,
	473, 1107,
	474, 1107,
	476, 1107,
	477, 1107,
	478, 1107,
	483, 1107,
	484, 1107,
	485, 1107,
	486, 1107,
	487, 1107,
	488, 1107,
	-2, 0,
	-1, 831,
	335, 760,
	390, 760,
	-2, 0,
	-1, 832,
	335, 759,
	390, 759,
	-2, 705,
	-1, 836,
	1, 800,
	511, 800,
	513, 800,
	515, 800,
	-2, 0,
	-1, 837,
	1, 738,
	511, 738,
	513, 738,
	515, 738,
	-2, 0,
	-1, 838,
	1, 843,
	168, 843,
	511, 843,
	513, 843,
	515, 843,
	-2, 0,
	-1, 846,
	1, 763,
	511, 763,
	513, 763,
	515, 763,
	-2, 0,
	-1, 852,
	1, 800,
	511, 800,
	513, 800,
	515, 800,
	-2, 0,
	-1, 853,
	1, 802,
	511, 802,
	513, 802,
	515, 802,
	-2, 0,
	-1, 854,
	1, 805,
	511, 805,
	513, 805,
	515, 805,
	-2, 0,
	-1, 860,
	1, 822,
	511, 822,
	513, 822,
	515, 822,
	-2, 0,
	-1, 861,
	1, 824,
	511, 824,
	513, 824,
	515, 824,
	-2, 0,
	-1, 910,
	155, 1316,
	168, 1316,
	248, 1316,
	291, 1316,
	-2, 1254,
	-1, 925,
	155, 1315,
	168, 1315,
	248, 1315,
	291, 1315,
	-2, 1251,
	-1, 951,
	514, 1961,
	-2, 617,
	-1, 979,
	5, 1953,
	512, 1951,
	-2, 1942,
	-1, 987,
	5, 1974,
	512, 1971,
	-2, 1962,
	-1, 988,
	5, 1975,
	512, 1972,
	-2, 1963,
	-1, 996,
	514, 1959,
	-2, 1941,
	-1, 997,
	512, 2321,
	-2, 1960,
	-1, 1020,
	512, 2320,
	-2, 1976,
	-1, 1021,
	5, 1481,
	-2, 2291,
	-1, 1022,
	5, 1482,
	-2, 2292,
	-1, 1023,
	5, 1483,
	-2, 2306,
	-1, 1024,
	5, 1484,
	-2, 2270,
	-1, 1025,
	5, 1485,
	-2, 2304,
	-1, 1026,
	5, 1493,
	-2, 2283,
	-1, 1027,
	5, 1480,
	-2, 2279,
	-1, 1028,
	5, 1480,
	-2, 2278,
	-1, 1029,
	5, 1480,
	-2, 2297,
	-1, 1030,
	5, 1491,
	-2, 2272,
	-1, 1031,
	5, 1496,
	-2, 2271,
	-1, 1032,
	5, 1498,
	-2, 2316,
	-1, 1035,
	5, 1520,
	-2, 2309,
	-1, 1036,
	5, 1512,
	-2, 2310,
	-1, 1037,
	5, 1520,
	-2, 2311,
	-1, 1038,
	5, 1516,
	-2, 2312,
	-1, 1039,
	5, 1466,
	-2, 2284,
	-1, 1040,
	5, 1467,
	-2, 2285,
	-1, 1041,
	5, 1468,
	-2, 2273,
	-1, 1068,
	5, 1503,
	-2, 2317,
	-1, 1069,
	5, 1504,
	-2, 2307,
	-1, 1070,
	5, 1505,
	477, 1505,
	-2, 2274,
	-1, 1071,
	5, 1506,
	477, 1506,
	-2, 2275,
	-1, 1108,
	512, 1971,
	-2, 1962,
	-1, 1109,
	512, 1972,
	-2, 1963,
	-1, 1139,
	171, 2242,
	441, 2242,
	495, 2242,
	514, 2242,
	-2, 0,
	-1, 1142,
	1, 595,
	515, 595,
	-2, 1189,
	-1, 1267,
	353, 1937,
	392, 1937,
	505, 1937,
	-2, 1935,
	-1, 1279,
	516, 1937,
	-2, 1938,
	-1, 1286,
	1, 1083,
	511, 1083,
	513, 1083,
	515, 1083,
	-2, 1303,
	-1, 1340,
	341, 905,
	476, 905,
	-2, 334,
	-1, 1361,
	1, 1083,
	511, 1083,
	513, 1083,
	515, 1083,
	-2, 1303,
	-1, 1368,
	4, 1107,
	21, 1107,
	22, 1107,
	23, 1107,
	24, 1107,
	25, 1107,
	26, 1107,
	28, 1107,
	29, 1107,
	35, 1107,
	40, 1107,
	41, 1107,
	42, 1107,
	43, 1107,
	44, 1107,
	45, 1107,
	46, 1107,
	47, 1107,
	48, 1107,
	50, 1107,
	51, 1107,
	52, 1107,
	53, 1107,
	55, 1107,
	56, 1107,
	57, 1107,
	58, 1107,
	59, 1107,
	60, 1107,
	64, 1107,
	65, 1107,
	66, 1107,
	67, 1107,
	69, 1107,
	70, 1107,
	71, 1107,
	75, 1107,
	76, 1107,
	77, 1107,
	78, 1107,
	79, 1107,
	80, 1107,
	81, 1107,
	84, 1107,
	85, 1107,
	86, 1107,
	87, 1107,
	89, 1107,
	91, 1107,
	92, 1107,
	93, 1107,
	95, 1107,
	97, 1107,
	98, 1107,
	106, 1107,
	107, 1107,
	108, 1107,
	109, 1107,
	111, 1107,
	112, 1107,
	113, 1107,
	115, 1107,
	116, 1107,
	117, 1107,
	119, 1107,
	120, 1107,
	122, 1107,
	123, 1107,
	124, 1107,
	127, 1107,
	128, 1107,
	129, 1107,
	131, 1107,
	132, 1107,
	134, 1107,
	135, 1107,
	136, 1107,
	138, 1107,
	139, 1107,
	140, 1107,
	141, 1107,
	142, 1107,
	143, 1107,
	144, 1107,
	145, 1107,
	146, 1107,
	147, 1107,
	148, 1107,
	149, 1107,
	150, 1107,
	151, 1107,
	152, 1107,
	160, 1107,
	161, 1107,
	162, 1107,
	163, 1107,
	167, 1107,
	169, 1107,
	173, 1107,
	174, 1107,
	175, 1107,
	176, 1107,
	177, 1107,
	178, 1107,
	180, 1107,
	181, 1107,
	183, 1107,
	184, 1107,
	186, 1107,
	187, 1107,
	188, 1107,
	189, 1107,
	190, 1107,
	191, 1107,
	192, 1107,
	193, 1107,
	194, 1107,
	196, 1107,
	197, 1107,
	199, 1107,
	200, 1107,
	201, 1107,
	202, 1107,
	207, 1107,
	208, 1107,
	209, 1107,
	212, 1107,
	213, 1107,
	214, 1107,
	216, 1107,
	218, 1107,
	219, 1107,
	221, 1107,
	223, 1107,
	224, 1107,
	225, 1107,
	227, 1107,
	231, 1107,
	232, 1107,
	233, 1107,
	234, 1107,
	235, 1107,
	236, 1107,
	238, 1107,
	239, 1107,
	240, 1107,
	242, 1107,
	243, 1107,
	245, 1107,
	246, 1107,
	249, 1107,
	250, 1107,
	251, 1107,
	254, 1107,
	255, 1107,
	256, 1107,
	257, 1107,
	259, 1107,
	260, 1107,
	261, 1107,
	262, 1107,
	263, 1107,
	264, 1107,
	265, 1107,
	266, 1107,
	267, 1107,
	268, 1107,
	269, 1107,
	271, 1107,
	273, 1107,
	274, 1107,
	275, 1107,
	276, 1107,
	277, 1107,
	278, 1107,
	280, 1107,
	284, 1107,
	286, 1107,
	287, 1107,
	288, 1107,
	289, 1107,
	290, 1107,
	293, 1107,
	295, 1107,
	297, 1107,
	298, 1107,
	299, 1107,
	302, 1107,
	303, 1107,
	304, 1107,
	306, 1107,
	308, 1107,
	309, 1107,
	310, 1107,
	311, 1107,
	312, 1107,
	313, 1107,
	314, 1107,
	315, 1107,
	316, 1107,
	317, 1107,
	318, 1107,
	319, 1107,
	321, 1107,
	322, 1107,
	323, 1107,
	324, 1107,
	325, 1107,
	326, 1107,
	327, 1107,
	328, 1107,
	329, 1107,
	331, 1107,
	333, 1107,
	334, 1107,
	335, 1107,
	336, 1107,
	337, 1107,
	338, 1107,
	339, 1107,
	340, 1107,
	341, 1107,
	342, 1107,
	343, 1107,
	345, 1107,
	351, 1107,
	353, 1107,
	354, 1107,
	355, 1107,
	356, 1107,
	357, 1107,
	358, 1107,
	359, 1107,
	360, 1107,
	362, 1107,
	363, 1107,
	364, 1107,
	366, 1107,
	367, 1107,
	368, 1107,
	369, 1107,
	370, 1107,
	371, 1107,
	373, 1107,
	374, 1107,
	375, 1107,
	376, 1107,
	377, 1107,
	378, 1107,
	379, 1107,
	380, 1107,
	381, 1107,
	382, 1107,
	383, 1107,
	385, 1107,
	386, 1107,
	387, 1107,
	388, 1107,
	389, 1107,
	390, 1107,
	392, 1107,
	393, 1107,
	394, 1107,
	395, 1107,
	396, 1107,
	398, 1107,
	399, 1107,
	400, 1107,
	401, 1107,
	402, 1107,
	403, 1107,
	404, 1107,
	406, 1107,
	408, 1107,
	409, 1107,
	410, 1107,
	411, 1107,
	412, 1107,
	413, 1107,
	414, 1107,
	415, 1107,
	416, 1107,
	417, 1107,
	418, 1107,
	419, 1107,
	420, 1107,
	422, 1107,
	423, 1107,
	425, 1107,
	427, 1107,
	428, 1107,
	429, 1107,
	430, 1107,
	431, 1107,
	432, 1107,
	433, 1107,
	434, 1107,
	436, 1107,
	437, 1107,
	438, 1107,
	439, 1107,
	440, 1107,
	442, 1107,
	444, 1107,
	445, 1107,
	446, 1107,
	447, 1107,
	448, 1107,
	450, 1107,
	451, 1107,
	452, 1107,
	454, 1107,
	455, 1107,
	458, 1107,
	459, 1107,
	460, 1107,
	461, 1107,
	462, 1107,
	463, 1107,
	464, 1107,
	466, 1107,
	469, 1107,
	470, 1107,
	471, 1107,
	472, 1107,
	473, 1107,
	474, 1107,
	476, 1107,
	477, 1107,
	478, 1107,
	483, 1107,
	484, 1107,
	485, 1107,
	486, 1107,
	487, 1107,
	488, 1107,
	-2, 0,
	-1, 1441,
	1, 472,
	511, 472,
	513, 472,
	515, 472,
	-2, 1274,
	-1, 1444,
	4, 2315,
	11, 2315,
	12, 2315,
	14, 2315,
	15, 2315,
	16, 2315,
	17, 2315,
	18, 2315,
	19, 2315,
	21, 2315,
	22, 2315,
	23, 2315,
	24, 2315,
	25, 2315,
	26, 2315,
	28, 2315,
	29, 2315,
	32, 2315,
	33, 2315,
	35, 2315,
	37, 2315,
	40, 2315,
	41, 2315,
	42, 2315,
	43, 2315,
	44, 2315,
	45, 2315,
	46, 2315,
	47, 2315,
	48, 2315,
	50, 2315,
	51, 2315,
	52, 2315,
	53, 2315,
	55, 2315,
	56, 2315,
	57, 2315,
	58, 2315,
	59, 2315,
	60, 2315,
	64, 2315,
	65, 2315,
	66, 2315,
	67, 2315,
	69, 2315,
	70, 2315,
	71, 2315,
	72, 2315,
	75, 2315,
	76, 2315,
	77, 2315,
	78, 2315,
	79, 2315,
	80, 2315,
	81, 2315,
	82, 2315,
	84, 2315,
	85, 2315,
	86, 2315,
	87, 2315,
	89, 2315,
	90, 2315,
	91, 2315,
	92, 2315,
	93, 2315,
	95, 2315,
	96, 2315,
	97, 2315,
	98, 2315,
	106, 2315,
	107, 2315,
	108, 2315,
	109, 2315,
	111, 2315,
	112, 2315,
	113, 2315,
	115, 2315,
	116, 2315,
	117, 2315,
	119, 2315,
	120, 2315,
	122, 2315,
	123, 2315,
	124, 2315,
	127, 2315,
	128, 2315,
	129, 2315,
	131, 2315,
	132, 2315,
	134, 2315,
	135, 2315,
	136, 2315,
	138, 2315,
	139, 2315,
	140, 2315,
	141, 2315,
	142, 2315,
	143, 2315,
	144, 2315,
	145, 2315,
	146, 2315,
	147, 2315,
	148, 2315,
	149, 2315,
	150, 2315,
	151, 2315,
	152, 2315,
	156, 2315,
	157, 2315,
	158, 2315,
	159, 2315,
	160, 2315,
	161, 2315,
	162, 2315,
	163, 2315,
	166, 2315,
	167, 2315,
	169, 2315,
	172, 2315,
	173, 2315,
	174, 2315,
	175, 2315,
	176, 2315,
	177, 2315,
	178, 2315,
	180, 2315,
	181, 2315,
	183, 2315,
	184, 2315,
	186, 2315,
	187, 2315,
	188, 2315,
	189, 2315,
	190, 2315,
	191, 2315,
	192, 2315,
	193, 2315,
	194, 2315,
	195, 2315,
	196, 2315,
	197, 2315,
	198, 2315,
	199, 2315,
	200, 2315,
	201, 2315,
	202, 2315,
	204, 2315,
	205, 2315,
	207, 2315,
	208, 2315,
	209, 2315,
	211, 2315,
	212, 2315,
	213, 2315,
	214, 2315,
	216, 2315,
	218, 2315,
	219, 2315,
	220, 2315,
	221, 2315,
	222, 2315,
	223, 2315,
	224, 2315,
	225, 2315,
	226, 2315,
	227, 2315,
	229, 2315,
	230, 2315,
	231, 2315,
	232, 2315,
	233, 2315,
	234, 2315,
	235, 2315,
	236, 2315,
	238, 2315,
	239, 2315,
	240, 2315,
	242, 2315,
	243, 2315,
	244, 2315,
	245, 2315,
	246, 2315,
	247, 2315,
	249, 2315,
	250, 2315,
	251, 2315,
	254, 2315,
	255, 2315,
	256, 2315,
	257, 2315,
	258, 2315,
	259, 2315,
	260, 2315,
	261, 2315,
	262, 2315,
	263, 2315,
	264, 2315,
	265, 2315,
	266, 2315,
	267, 2315,
	268, 2315,
	269, 2315,
	271, 2315,
	272, 2315,
	273, 2315,
	274, 2315,
	275, 2315,
	276, 2315,
	277, 2315,
	278, 2315,
	280, 2315,
	283, 2315,
	284, 2315,
	286, 2315,
	287, 2315,
	288, 2315,
	289, 2315,
	290, 2315,
	293, 2315,
	297, 2315,
	298, 2315,
	299, 2315,
	300, 2315,
	302, 2315,
	303, 2315,
	304, 2315,
	306, 2315,
	308, 2315,
	309, 2315,
	310, 2315,
	311, 2315,
	312, 2315,
	313, 2315,
	314, 2315,
	315, 2315,
	316, 2315,
	317, 2315,
	318, 2315,
	319, 2315,
	321, 2315,
	322, 2315,
	323, 2315,
	324, 2315,
	325, 2315,
	326, 2315,
	327, 2315,
	328, 2315,
	329, 2315,
	331, 2315,
	333, 2315,
	334, 2315,
	335, 2315,
	336, 2315,
	337, 2315,
	338, 2315,
	339, 2315,
	340, 2315,
	341, 2315,
	342, 2315,
	343, 2315,
	345, 2315,
	351, 2315,
	352, 2315,
	353, 2315,
	354, 2315,
	355, 2315,
	356, 2315,
	357, 2315,
	358, 2315,
	359, 2315,
	360, 2315,
	362, 2315,
	363, 2315,
	364, 2315,
	365, 2315,
	366, 2315,
	367, 2315,
	368, 2315,
	369, 2315,
	370, 2315,
	371, 2315,
	372, 2315,
	373, 2315,
	374, 2315,
	375, 2315,
	376, 2315,
	377, 2315,
	378, 2315,
	379, 2315,
	380, 2315,
	381, 2315,
	382, 2315,
	383, 2315,
	385, 2315,
	386, 2315,
	387, 2315,
	388, 2315,
	389, 2315,
	390, 2315,
	392, 2315,
	393, 2315,
	394, 2315,
	395, 2315,
	396, 2315,
	397, 2315,
	398, 2315,
	399, 2315,
	400, 2315,
	401, 2315,
	402, 2315,
	403, 2315,
	404, 2315,
	406, 2315,
	408, 2315,
	409, 2315,
	410, 2315,
	411, 2315,
	412, 2315,
	413, 2315,
	414, 2315,
	415, 2315,
	416, 2315,
	417, 2315,
	418, 2315,
	419, 2315,
	420, 2315,
	422, 2315,
	423, 2315,
	425, 2315,
	427, 2315,
	428, 2315,
	429, 2315,
	430, 2315,
	431, 2315,
	432, 2315,
	433, 2315,
	434, 2315,
	436, 2315,
	437, 2315,
	438, 2315,
	439, 2315,
	440, 2315,
	442, 2315,
	444, 2315,
	445, 2315,
	446, 2315,
	447, 2315,
	448, 2315,
	450, 2315,
	451, 2315,
	452, 2315,
	454, 2315,
	455, 2315,
	458, 2315,
	459, 2315,
	460, 2315,
	461, 2315,
	462, 2315,
	463, 2315,
	464, 2315,
	466, 2315,
	469, 2315,
	470, 2315,
	471, 2315,
	472, 2315,
	473, 2315,
	474, 2315,
	476, 2315,
	477, 2315,
	478, 2315,
	483, 2315,
	484, 2315,
	485, 2315,
	486, 2315,
	487, 2315,
	488, 2315,
	489, 2315,
	490, 2315,
	493, 2315,
	494, 2315,
	495, 2315,
	496, 2315,
	497, 2315,
	498, 2315,
	500, 2315,
	501, 2315,
	502, 2315,
	503, 2315,
	504, 2315,
	505, 2315,
	506, 2315,
	507, 2315,
	508, 2315,
	510, 2315,
	513, 2315,
	514, 2315,
	516, 2315,
	517, 2315,
	-2, 0,
	-1, 1449,
	171, 2208,
	441, 2208,
	495, 2208,
	514, 2208,
	-2, 0,
	-1, 1497,
	335, 760,
	390, 760,
	-2, 0,
	-1, 1522,
	1, 755,
	511, 755,
	513, 755,
	515, 755,
	-2, 0,
	-1, 1523,
	1, 791,
	511, 791,
	513, 791,
	515, 791,
	-2, 0,
	-1, 1524,
	1, 762,
	511, 762,
	513, 762,
	515, 762,
	-2, 0,
	-1, 1526,
	1, 766,
	511, 766,
	513, 766,
	515, 766,
	-2, 0,
	-1, 1532,
	1, 773,
	511, 773,
	513, 773,
	515, 773,
	-2, 0,
	-1, 1560,
	1, 2262,
	511, 2262,
	513, 2262,
	514, 2262,
	515, 2262,
	-2, 820,
	-1, 1561,
	1, 2205,
	511, 2205,
	513, 2205,
	514, 2205,
	515, 2205,
	-2, 821,
	-1, 1576,
	1, 1184,
	515, 1184,
	-2, 1189,
	-1, 1579,
	155, 1315,
	168, 1315,
	248, 1315,
	291, 1315,
	-2, 1255,
	-1, 1673,
	137, 1276,
	155, 1276,
	168, 1276,
	215, 1276,
	248, 1276,
	291, 1276,
	301, 1276,
	456, 1276,
	-2, 1681,
	-1, 1733,
	513, 1831,
	-2, 0,
	-1, 1768,
	137, 1276,
	155, 1276,
	168, 1276,
	215, 1276,
	248, 1276,
	291, 1276,
	301, 1276,
	456, 1276,
	-2, 1396,
	-1, 1815,
	512, 1508,
	-2, 1496,
	-1, 1850,
	1, 597,
	515, 597,
	-2, 1189,
	-1, 2083,
	1, 757,
	511, 757,
	513, 757,
	515, 757,
	-2, 0,
	-1, 2084,
	1, 793,
	511, 793,
	513, 793,
	515, 793,
	-2, 0,
	-1, 2114,
	1, 775,
	511, 775,
	513, 775,
	515, 775,
	-2, 0,
	-1, 2160,
	370, 1342,
	371, 1342,
	-2, 1541,
	-1, 2191,
	14, 0,
	15, 0,
	16, 0,
	493, 0,
	494, 0,
	495, 0,
	-2, 1561,
	-1, 2192,
	14, 0,
	15, 0,
	16, 0,
	493, 0,
	494, 0,
	495, 0,
	-2, 1562,
	-1, 2193,
	90, 0,
	229, 0,
	230, 0,
	497, 0,
	498, 0,
	-2, 1563,
	-1, 2194,
	90, 0,
	229, 0,
	230, 0,
	497, 0,
	498, 0,
	-2, 1564,
	-1, 2195,
	90, 0,
	229, 0,
	230, 0,
	497, 0,
	498, 0,
	-2, 1565,
	-1, 2196,
	90, 0,
	229, 0,
	230, 0,
	497, 0,
	498, 0,
	-2, 1566,
	-1, 2197,
	90, 0,
	229, 0,
	230, 0,
	497, 0,
	498, 0,
	-2, 1567,
	-1, 2198,
	14, 0,
	15, 0,
	16, 0,
	493, 0,
	494, 0,
	495, 0,
	-2, 1568,
	-1, 2210,
	14, 0,
	15, 0,
	16, 0,
	493, 0,
	494, 0,
	495, 0,
	-2, 1580,
	-1, 2211,
	14, 0,
	15, 0,
	16, 0,
	493, 0,
	494, 0,
	495, 0,
	-2, 1581,
	-1, 2212,
	14, 0,
	15, 0,
	16, 0,
	493, 0,
	494, 0,
	495, 0,
	-2, 1582,
	-1, 2215,
	17, 0,
	18, 0,
	19, 0,
	47, 0,
	195, 0,
	198, 0,
	247, 0,
	397, 0,
	489, 0,
	496, 0,
	-2, 1587,
	-1, 2221,
	17, 0,
	18, 0,
	19, 0,
	47, 0,
	195, 0,
	198, 0,
	247, 0,
	397, 0,
	489, 0,
	496, 0,
	-2, 1591,
	-1, 2223,
	17, 0,
	18, 0,
	19, 0,
	47, 0,
	195, 0,
	198, 0,
	247, 0,
	397, 0,
	489, 0,
	496, 0,
	-2, 1599,
	-1, 2224,
	17, 0,
	18, 0,
	19, 0,
	47, 0,
	195, 0,
	198, 0,
	247, 0,
	397, 0,
	489, 0,
	496, 0,
	-2, 1600,
	-1, 2225,
	17, 0,
	18, 0,
	19, 0,
	47, 0,
	195, 0,
	198, 0,
	247, 0,
	397, 0,
	489, 0,
	496, 0,
	-2, 1601,
	-1, 2226,
	17, 0,
	18, 0,
	19, 0,
	47, 0,
	195, 0,
	198, 0,
	247, 0,
	397, 0,
	489, 0,
	496, 0,
	-2, 1602,
	-1, 2338,
	5, 1974,
	171, 1842,
	512, 1971,
	-2, 1962,
	-1, 2339,
	171, 1843,
	-2, 2266,
	-1, 2340,
	171, 1844,
	-2, 2123,
	-1, 2341,
	171, 1845,
	-2, 2033,
	-1, 2342,
	171, 1846,
	-2, 2077,
	-1, 2343,
	171, 1847,
	-2, 2118,
	-1, 2344,
	171, 1848,
	-2, 2203,
	-1, 2345,
	171, 1849,
	-2, 1664,
	-1, 2414,
	1, 1397,
	2, 1397,
	96, 1397,
	137, 1397,
	155, 1397,
	168, 1397,
	172, 1397,
	182, 1397,
	185, 1397,
	211, 1397,
	215, 1397,
	226, 1397,
	244, 1397,
	248, 1397,
	272, 1397,
	291, 1397,
	295, 1397,
	301, 1397,
	361, 1397,
	365, 1397,
	456, 1397,
	467, 1397,
	480, 1397,
	481, 1397,
	482, 1397,
	491, 1397,
	511, 1397,
	513, 1397,
	515, 1397,
	517, 1397,
	-2, 1396,
	-1, 2427,
	512, 1943,
	-2, 1957,
	-1, 2429,
	1, 271,
	-2, 1303,
	-1, 2451,
	512, 1507,
	-2, 1497,
	-1, 2570,
	1, 1083,
	511, 1083,
	513, 1083,
	515, 1083,
	-2, 1303,
	-1, 2740,
	296, 1345,
	-2, 2305,
	-1, 2741,
	296, 1346,
	-2, 2189,
	-1, 2745,
	370, 1908,
	371, 1908,
	-2, 1662,
	-1, 2746,
	370, 1912,
	371, 1912,
	-2, 1663,
	-1, 2747,
	370, 1909,
	371, 1909,
	-2, 1662,
	-1, 2748,
	370, 1913,
	371, 1913,
	-2, 1663,
	-1, 2761,
	17, 0,
	18, 0,
	19, 0,
	47, 0,
	195, 0,
	198, 0,
	247, 0,
	397, 0,
	489, 0,
	496, 0,
	-2, 1589,
	-1, 2762,
	17, 0,
	18, 0,
	19, 0,
	47, 0,
	195, 0,
	198, 0,
	247, 0,
	397, 0,
	489, 0,
	496, 0,
	-2, 1593,
	-1, 2768,
	17, 0,
	18, 0,
	19, 0,
	47, 0,
	195, 0,
	198, 0,
	247, 0,
	397, 0,
	489, 0,
	496, 0,
	-2, 1595,
	-1, 2966,
	223, 1189,
	331, 1189,
	339, 1189,
	491, 1189,
	-2, 594,
	-1, 3097,
	1, 1083,
	511, 1083,
	513, 1083,
	515, 1083,
	-2, 1303,
	-1, 3204,
	17, 0,
	18, 0,
	19, 0,
	47, 0,
	195, 0,
	198, 0,
	247, 0,
	397, 0,
	489, 0,
	496, 0,
	-2, 1597,
	-1, 3211,
	220, 0,
	222, 0,
	283, 0,
	-2, 1616,
	-1, 3278,
	14, 0,
	15, 0,
	16, 0,
	493, 0,
	494, 0,
	495, 0,
	-2, 1645,
	-1, 3279,
	14, 0,
	15, 0,
	16, 0,
	493, 0,
	494, 0,
	495, 0,
	-2, 1646,
	-1, 3280,
	14, 0,
	15, 0,
	16, 0,
	493, 0,
	494, 0,
	495, 0,
	-2, 1647,
	-1, 3284,
	14, 0,
	15, 0,
	16, 0,
	493, 0,
	494, 0,
	495, 0,
	-2, 1651,
	-1, 3285,
	14, 0,
	15, 0,
	16, 0,
	493, 0,
	494, 0,
	495, 0,
	-2, 1652,
	-1, 3286,
	14, 0,
	15, 0,
	16, 0,
	493, 0,
	494, 0,
	495, 0,
	-2, 1653,
	-1, 3332,
	512, 1944,
	-2, 1958,
	-1, 3461,
	514, 2421,
	-2, 1233,
	-1, 3519,
	220, 0,
	222, 0,
	283, 0,
	-2, 1617,
	-1, 3522,
	17, 0,
	18, 0,
	19, 0,
	47, 0,
	195, 0,
	198, 0,
	247, 0,
	397, 0,
	489, 0,
	496, 0,
	-2, 1620,
	-1, 3523,
	17, 0,
	18, 0,
	19, 0,
	47, 0,
	195, 0,
	198, 0,
	247, 0,
	397, 0,
	489, 0,
	496, 0,
	-2, 1622,
	-1, 3731,
	17, 0,
	18, 0,
	19, 0,
	47, 0,
	195, 0,
	198, 0,
	247, 0,
	397, 0,
	489, 0,
	496, 0,
	-2, 1621,
	-1, 3732,
	17, 0,
	18, 0,
	19, 0,
	47, 0,
	195, 0,
	198, 0,
	247, 0,
	397, 0,
	489, 0,
	496, 0,
	-2, 1623,
	-1, 3743,
	220, 0,
	-2, 1654,
	-1, 3892,
	220, 0,
	-2, 1655,
	-1, 4042,
	47, 0,
	195, 0,
	247, 0,
	397, 0,
	489, 0,
	496, 0,
	-2, 2269,
}

const sqlPrivate = 57344

const sqlLast = 104373

var sqlAct = [...]int{

	242, 3935, 3083, 3656, 2660, 2895, 4052, 3778, 4150, 3775,
	3082, 3820, 4041, 4010, 3997, 3914, 4016, 3982, 4053, 4000,
	4054, 3763, 3358, 3827, 1112, 1306, 3243, 2630, 4100, 3896,
	2054, 2896, 3502, 3688, 3639, 4040, 3683, 935, 2170, 1432,
	3114, 3720, 2984, 3670, 3453, 3396, 3836, 3588, 1427, 3859,
	926, 2063, 1802, 2238, 2038, 1588, 1289, 3693, 3109, 3107,
	3430, 3078, 1464, 3413, 2178, 1903, 3068, 3415, 3196, 2669,
	668, 1803, 633, 3359, 3748, 3160, 1171, 2171, 2370, 3162,
	2682, 2601, 2938, 2619, 2547, 2592, 2754, 2901, 1999, 1774,
	1101, 3334, 2918, 2671, 668, 2485, 1264, 2679, 2878, 2910,
	2631, 3501, 767, 2616, 2061, 1505, 2668, 2614, 3558, 1951,
	2662, 2899, 2487, 2407, 3303, 2877, 1743, 2406, 1952, 2524,
	2280, 1719, 1913, 2175, 3897, 934, 163, 1272, 2251, 1946,
	1463, 3003, 1681, 663, 2561, 101, 2738, 2036, 1937, 983,
	236, 2602, 3821, 2409, 2678, 1092, 2282, 1930, 1155, 1407,
	1886, 235, 1576, 1744, 2388, 1889, 2271, 2140, 2235, 1876,
	2142, 4, 2945, 990, 2159, 3080, 1428, 2624, 947, 2367,
	1424, 1763, 1418, 1359, 1442, 1988, 988, 2672, 1144, 599,
	1269, 669, 670, 2476, 1714, 2274, 2396, 1095, 1074, 2252,
	1753, 585, 1431, 2324, 2378, 607, 172, 1666, 2334, 1590,
	615, 173, 1589, 2141, 1291, 1532, 665, 2523, 1987, 627,
	674, 1109, 163, 1440, 2011, 1760, 740, 1383, 2143, 713,
	1301, 677, 1902, 2164, 602, 1033, 964, 42, 41, 39,
	1097, 30, 610, 28, 674, 1595, 826, 26, 1072, 2789,
	1312, 1575, 2785, 2027, 844, 677, 2027, 3317, 761, 3318,
	2027, 1603, 1604, 2897, 1636, 1637, 1638, 1646, 1647, 1648,
	4213, 930, 2027, 4207, 2387, 2027, 4192, 3141, 1152, 3124,
	2387, 4191, 1639, 1634, 4167, 2387, 1091, 4165, 3604, 4161,
	1606, 3604, 4082, 1962, 2964, 4076, 4083, 1652, 979, 2387,
	3123, 4074, 4071, 4068, 2062, 2387, 4072, 4069, 1089, 4063,
	782, 4038, 4037, 1962, 4036, 1962, 1962, 4031, 2047, 930,
	931, 2047, 1605, 1603, 1604, 1152, 986, 4030, 1123, 985,
	2798, 2047, 1625, 1603, 1604, 4025, 2799, 4023, 3995, 3604,
	1622, 3604, 3604, 3976, 3969, 1634, 3968, 2442, 2387, 3963,
	2387, 3307, 1606, 3604, 3962, 1634, 1075, 1075, 3604, 3956,
	3928, 3894, 1606, 1962, 3648, 2442, 2380, 3876, 234, 3873,
	911, 3490, 3870, 1962, 3829, 910, 3604, 3795, 3830, 3794,
	1128, 1962, 1525, 1962, 1605, 3786, 3785, 3754, 3733, 1962,
	3604, 1962, 2442, 3141, 1605, 3712, 3701, 1472, 3634, 2047,
	3141, 3623, 2387, 2753, 1124, 2387, 1628, 1629, 1630, 1631,
	3603, 3521, 2387, 3469, 3604, 2442, 1611, 3157, 920, 2025,
	3463, 3428, 3327, 925, 3157, 3429, 3328, 3325, 3310, 3227,
	3223, 3326, 2387, 1962, 2387, 1603, 1604, 3156, 3148, 37,
	2894, 3157, 3149, 2889, 2387, 1643, 2888, 2387, 1653, 2841,
	2387, 208, 1076, 2842, 1633, 1635, 2438, 1634, 2839, 2831,
	1305, 2829, 2840, 2832, 1606, 2387, 3977, 2800, 2543, 2685,
	1649, 2387, 1650, 2047, 1078, 3889, 1079, 2658, 1611, 1620,
	1621, 2050, 2657, 3877, 2047, 2460, 2050, 2387, 1611, 2387,
	2441, 1962, 3307, 210, 2442, 2379, 1605, 1641, 2436, 1603,
	1604, 2430, 2387, 2386, 3682, 1962, 2049, 2387, 1626, 1107,
	2050, 3648, 1603, 1604, 3624, 1962, 1633, 1635, 2850, 2851,
	3490, 2277, 3149, 2538, 2475, 1856, 1633, 1635, 1606, 2026,
	1907, 2598, 1961, 1651, 1634, 2788, 2555, 1104, 2473, 209,
	1103, 1606, 1739, 1300, 3388, 3199, 3177, 1761, 1314, 202,
	1640, 1940, 2028, 3125, 1507, 2028, 1458, 203, 2423, 2028,
	1605, 2422, 2421, 1314, 2850, 2851, 2420, 2868, 2869, 2870,
	1626, 2028, 3126, 1605, 2028, 2419, 208, 1080, 1077, 174,
	1626, 919, 3574, 1625, 918, 3517, 2718, 1603, 1604, 917,
	1611, 1622, 916, 915, 1603, 1604, 914, 913, 909, 2278,
	86, 908, 1632, 907, 906, 905, 904, 903, 902, 1634,
	208, 901, 900, 899, 898, 897, 1606, 896, 210, 895,
	894, 893, 1627, 1606, 875, 3123, 824, 823, 1633, 1635,
	822, 821, 820, 819, 818, 2865, 817, 3515, 1313, 816,
	1124, 815, 988, 814, 813, 812, 988, 1644, 1605, 811,
	810, 1326, 210, 809, 1611, 1605, 808, 1628, 1629, 1630,
	1631, 1174, 807, 806, 209, 1174, 805, 1611, 804, 1294,
	803, 802, 801, 2856, 2279, 2276, 800, 799, 798, 1154,
	797, 796, 1626, 1159, 1627, 795, 785, 784, 780, 779,
	1148, 773, 772, 988, 1627, 988, 731, 988, 209, 730,
	690, 689, 1294, 688, 174, 1633, 1635, 981, 202, 680,
	2646, 3533, 2379, 2026, 679, 1280, 203, 2045, 678, 2856,
	1275, 647, 1314, 639, 3342, 1294, 1124, 1305, 638, 2042,
	1620, 1621, 2135, 637, 1320, 621, 230, 229, 174, 1642,
	228, 3321, 1611, 1617, 1618, 1624, 1645, 1623, 1619, 1611,
	1616, 1614, 1615, 1607, 1608, 1609, 1610, 1612, 1613, 1626,
	227, 226, 225, 3543, 208, 2866, 224, 3542, 1294, 988,
	223, 222, 1304, 2871, 1294, 1365, 1367, 221, 1294, 208,
	1633, 1635, 220, 219, 218, 217, 988, 216, 988, 215,
	214, 1142, 1294, 2281, 213, 212, 1627, 211, 988, 3158,
	988, 2941, 1476, 2811, 1314, 1167, 210, 1261, 1266, 2794,
	2579, 2866, 1616, 1614, 1615, 1607, 1608, 1609, 1610, 1612,
	1613, 210, 674, 1614, 1615, 1607, 1608, 1609, 1610, 1612,
	1613, 2850, 2851, 677, 1626, 2610, 208, 2446, 2428, 2413,
	1325, 1294, 2307, 1722, 2892, 1764, 1137, 2293, 136, 1721,
	2291, 1884, 209, 1632, 1787, 1692, 2057, 1308, 988, 1527,
	1283, 988, 202, 1303, 1302, 2893, 1722, 209, 1602, 4059,
	203, 1725, 1721, 1627, 1161, 1111, 4039, 202, 210, 2867,
	3942, 3886, 3880, 2627, 3878, 203, 3773, 3747, 2850, 2851,
	3702, 3681, 174, 3433, 1720, 1683, 3697, 2275, 3581, 3556,
	163, 163, 3555, 3549, 1477, 3548, 3547, 174, 1683, 931,
	1370, 1412, 1415, 3540, 3539, 1355, 2850, 2851, 3537, 2868,
	2869, 2870, 2455, 1319, 209, 2867, 1615, 1607, 1608, 1609,
	1610, 1612, 1613, 2056, 202, 3532, 1445, 1447, 208, 3529,
	3528, 1148, 203, 3427, 1148, 1421, 2850, 2851, 1627, 3346,
	3345, 988, 988, 988, 988, 988, 988, 988, 3344, 2865,
	3386, 3331, 3298, 3297, 174, 3152, 3296, 3219, 1541, 3215,
	2936, 1580, 2885, 2850, 2851, 2876, 2849, 2846, 1443, 2845,
	210, 2843, 988, 2838, 2837, 2836, 2856, 2865, 988, 2833,
	2830, 1607, 1608, 1609, 1610, 1612, 1613, 2810, 1623, 1619,
	2793, 1616, 1614, 1615, 1607, 1608, 1609, 1610, 1612, 1613,
	2852, 2853, 2854, 2855, 2857, 2858, 1386, 2786, 2659, 1690,
	208, 1267, 2414, 2264, 1279, 1282, 209, 1457, 2509, 1602,
	1088, 2002, 1574, 208, 1601, 1684, 202, 1682, 2612, 1471,
	1462, 4206, 1969, 2856, 203, 4159, 2862, 2863, 2864, 4158,
	2247, 3434, 4092, 2861, 2859, 2860, 2852, 2853, 2854, 2855,
	2857, 2858, 210, 4090, 2850, 2851, 174, 4081, 1113, 1672,
	3245, 2856, 1967, 3934, 1482, 210, 3924, 3921, 3920, 1607,
	1608, 1609, 1610, 1612, 1613, 1282, 1282, 1498, 1609, 1610,
	1612, 1613, 988, 988, 988, 2957, 2890, 1528, 988, 3919,
	3913, 2856, 3906, 3874, 3858, 1109, 3857, 1109, 209, 2241,
	1741, 3845, 3434, 3696, 3842, 3791, 208, 931, 202, 3769,
	3745, 209, 1174, 1311, 1282, 1318, 203, 1324, 2856, 3728,
	988, 202, 3727, 668, 1577, 2866, 3709, 1820, 668, 203,
	1585, 911, 3708, 3673, 3649, 3573, 910, 988, 174, 1790,
	1675, 1294, 3554, 208, 1680, 1584, 3491, 3485, 210, 1799,
	1579, 174, 3482, 2866, 1844, 3376, 988, 3375, 1581, 1724,
	208, 3362, 1174, 3361, 1598, 1599, 1750, 3313, 3301, 3210,
	1670, 3159, 1795, 3142, 208, 3100, 3041, 3016, 2987, 2986,
	2959, 2815, 2814, 2866, 1771, 210, 2809, 2777, 2591, 1438,
	1728, 1148, 1727, 1882, 209, 1726, 1723, 1853, 1797, 1747,
	1748, 1715, 210, 2611, 202, 1713, 1456, 1847, 1461, 2856,
	2453, 2452, 203, 1716, 1717, 1848, 210, 1075, 1470, 2425,
	1475, 3898, 2933, 2418, 163, 1603, 1604, 2385, 2289, 1786,
	1742, 209, 931, 1737, 174, 1736, 1735, 1734, 1733, 2867,
	1732, 202, 1731, 1730, 1729, 1710, 1709, 1708, 209, 203,
	1707, 1706, 1705, 1704, 1606, 1703, 1793, 1702, 202, 1701,
	1700, 2987, 209, 674, 2058, 1465, 203, 2867, 674, 1772,
	1699, 2626, 202, 1873, 677, 1698, 1526, 1697, 1696, 677,
	203, 1685, 1671, 1669, 1769, 1664, 1605, 1136, 174, 1126,
	1814, 1119, 1850, 3676, 3577, 1791, 3525, 2867, 3341, 1294,
	1294, 2866, 174, 3324, 1846, 3316, 2797, 2444, 1762, 1174,
	1895, 2416, 1740, 2852, 2853, 2854, 2855, 2857, 2858, 3758,
	3626, 3579, 2850, 2851, 3340, 1766, 1781, 1780, 1779, 1798,
	1777, 1684, 1776, 2955, 1843, 1927, 1775, 1667, 1929, 1782,
	1875, 1934, 1497, 2306, 1875, 4156, 4149, 3922, 2292, 1800,
	3110, 2290, 1817, 3019, 1875, 1158, 3832, 3881, 3831, 3879,
	3700, 1957, 1959, 3651, 3650, 3625, 3576, 2861, 2859, 2860,
	2852, 2853, 2854, 2855, 2857, 2858, 3494, 1878, 962, 3493,
	1868, 3492, 3319, 1107, 3144, 1107, 3772, 1764, 2862, 2863,
	2864, 3143, 1152, 2528, 1572, 2861, 2859, 2860, 2852, 2853,
	2854, 2855, 2857, 2858, 1705, 1794, 1912, 3837, 3437, 1157,
	1862, 1104, 208, 1104, 1103, 2867, 1103, 1152, 1938, 2835,
	1156, 2834, 2759, 1149, 2511, 2861, 2859, 2860, 2852, 2853,
	2854, 2855, 2857, 2858, 1705, 1153, 1851, 3374, 1722, 891,
	3085, 674, 3084, 1955, 1721, 1694, 1506, 1294, 4035, 1294,
	2055, 1294, 677, 3828, 210, 1992, 1152, 2854, 2855, 2857,
	2858, 1143, 4079, 4064, 4051, 1867, 1866, 1294, 1294, 1875,
	1877, 1997, 3069, 2683, 1542, 1507, 1279, 1953, 1294, 892,
	1907, 3393, 1303, 1302, 3379, 3175, 3749, 2897, 3247, 2008,
	2272, 1294, 1294, 1294, 2803, 3076, 2003, 4060, 1933, 2451,
	209, 1738, 1718, 1996, 3063, 1411, 2064, 1439, 1364, 933,
	202, 1297, 668, 1131, 2850, 2851, 1691, 2552, 203, 4073,
	2075, 1960, 4070, 871, 3119, 3353, 3915, 3684, 1778, 2016,
	1087, 1150, 2549, 3994, 3903, 2990, 3369, 1486, 2562, 1151,
	174, 2005, 2666, 2623, 2859, 2860, 2852, 2853, 2854, 2855,
	2857, 2858, 4117, 4116, 3191, 3811, 2060, 4061, 1980, 3614,
	1979, 2030, 3955, 2968, 1332, 2461, 4201, 2079, 3804, 1298,
	3797, 3647, 726, 889, 3402, 1870, 2120, 887, 3401, 885,
	3395, 3392, 931, 883, 931, 1539, 880, 3390, 2956, 1105,
	3406, 3350, 988, 939, 988, 2010, 2014, 2118, 2065, 3349,
	1863, 988, 2018, 2019, 1820, 1820, 1174, 3066, 988, 988,
	988, 988, 988, 988, 988, 988, 988, 988, 988, 988,
	988, 988, 988, 988, 988, 988, 988, 988, 988, 988,
	988, 988, 988, 988, 988, 988, 988, 988, 988, 988,
	988, 988, 988, 1540, 988, 2152, 988, 988, 988, 988,
	3405, 1443, 674, 1443, 1386, 2139, 2013, 1149, 2013, 1137,
	2051, 2069, 2052, 677, 727, 2808, 2807, 1342, 988, 2856,
	1158, 988, 988, 929, 1538, 2176, 2177, 1872, 2806, 988,
	2479, 2805, 1149, 988, 2763, 988, 988, 2068, 2559, 2558,
	1158, 1152, 2554, 1174, 2477, 2545, 3018, 2537, 2564, 988,
	988, 988, 988, 1484, 988, 988, 988, 988, 988, 988,
	988, 988, 1871, 2479, 2536, 2515, 2502, 1995, 2097, 2563,
	2565, 1978, 1613, 2437, 1157, 2222, 1578, 2477, 2277, 2970,
	988, 988, 988, 988, 988, 988, 988, 988, 988, 2150,
	2114, 3954, 2320, 988, 1157, 1343, 2319, 2180, 2620, 2253,
	2254, 928, 1376, 2163, 1375, 1109, 1374, 877, 1373, 2568,
	1499, 2866, 1174, 2253, 2269, 1150, 645, 1814, 1814, 3176,
	1904, 1109, 2429, 1151, 2133, 2073, 1397, 1279, 2468, 2136,
	1350, 2445, 1338, 2148, 2138, 2501, 2144, 988, 1174, 2315,
	1150, 2151, 911, 1299, 4144, 911, 911, 2167, 1151, 2137,
	2168, 2169, 1900, 2736, 2124, 931, 2278, 2237, 2337, 2337,
	2351, 2237, 2253, 4028, 931, 2371, 2373, 2268, 931, 2858,
	2132, 2377, 2032, 3627, 1808, 2034, 1905, 1906, 2532, 1817,
	1817, 2039, 2246, 3726, 2041, 2525, 2526, 930, 2044, 2525,
	2526, 2513, 2393, 2272, 1551, 1479, 2401, 1675, 2087, 2525,
	2526, 3365, 2245, 2129, 1901, 1294, 2500, 2015, 1771, 2243,
	1583, 2082, 2317, 2249, 644, 2426, 2751, 2318, 3182, 3181,
	2321, 3600, 2322, 2323, 2266, 2867, 3780, 2715, 4145, 1135,
	1571, 2279, 2276, 1075, 1537, 1174, 1495, 2721, 1534, 208,
	2415, 208, 2281, 4116, 3646, 793, 2489, 4057, 3391, 1782,
	3389, 2358, 3596, 2149, 3378, 2150, 931, 1148, 2392, 3065,
	2553, 1853, 2569, 729, 728, 1820, 3610, 2551, 2131, 2535,
	1555, 2514, 2333, 2362, 1286, 1152, 1507, 163, 2375, 2346,
	1360, 210, 2400, 210, 2405, 2458, 4153, 2411, 2412, 2967,
	1907, 1174, 2383, 2384, 2398, 2399, 2394, 2550, 3597, 2148,
	1152, 1480, 866, 2447, 1507, 1294, 1724, 1329, 1769, 1483,
	2481, 866, 2548, 2439, 1879, 1880, 3356, 988, 988, 2147,
	988, 4147, 1914, 2083, 1358, 924, 724, 209, 723, 209,
	1361, 2750, 3782, 2134, 924, 2724, 2518, 202, 2090, 202,
	2353, 1752, 927, 1918, 2546, 203, 2459, 203, 2492, 2219,
	2281, 3412, 1485, 3033, 2454, 2860, 2852, 2853, 2854, 2855,
	2857, 2858, 2595, 2146, 1716, 1717, 881, 174, 2119, 174,
	881, 2533, 881, 1435, 2608, 2457, 882, 2774, 2084, 881,
	3236, 1890, 2480, 1451, 2462, 2517, 1891, 4160, 4058, 2117,
	3411, 1915, 3032, 1107, 4133, 2504, 4170, 3377, 1294, 1294,
	3026, 1294, 4132, 3725, 2435, 2772, 867, 2516, 4105, 1107,
	1116, 2512, 2574, 1294, 2576, 867, 2572, 1756, 2484, 2149,
	2534, 1104, 597, 2128, 1103, 2494, 2497, 3507, 1814, 1926,
	2478, 646, 3233, 3608, 643, 2604, 2091, 1104, 2654, 3025,
	1103, 2649, 1910, 2723, 1114, 1396, 1489, 592, 2688, 2689,
	3506, 1337, 674, 3117, 2275, 2571, 1759, 2694, 2695, 2696,
	3116, 2634, 988, 677, 3366, 3592, 2720, 1522, 1925, 3593,
	2704, 1754, 2705, 4056, 4183, 2684, 2027, 2527, 2529, 2530,
	2531, 1909, 4146, 1966, 1965, 2147, 1919, 1892, 2130, 1757,
	1817, 1552, 1340, 1303, 2577, 1950, 2702, 2217, 1907, 2281,
	2220, 4151, 786, 2589, 1894, 2680, 988, 3234, 2491, 2665,
	3916, 2636, 988, 988, 3595, 2599, 3930, 1755, 1898, 3116,
	2686, 2769, 1523, 1360, 2690, 163, 2691, 3001, 3598, 2640,
	2618, 878, 2629, 2643, 2726, 2644, 2728, 2770, 1949, 2765,
	2912, 2775, 1117, 2236, 2699, 774, 2969, 1920, 1921, 2216,
	3973, 3007, 3781, 1549, 2706, 2722, 2708, 1936, 2710, 4104,
	1916, 2655, 794, 2652, 2650, 2479, 1896, 988, 988, 868,
	3609, 2648, 1898, 988, 2667, 2656, 3000, 2719, 868, 2495,
	1935, 760, 2244, 3009, 1941, 4152, 988, 988, 2651, 1948,
	2086, 1711, 988, 988, 1917, 2743, 2744, 2953, 988, 1553,
	1898, 1582, 2464, 2081, 1550, 1443, 3665, 988, 988, 988,
	1758, 3044, 1931, 988, 3503, 3722, 4126, 2466, 4154, 1481,
	1134, 2701, 3738, 988, 2766, 4005, 2281, 1494, 1496, 3933,
	2707, 2731, 2709, 1267, 2711, 2490, 1905, 1906, 3008, 2796,
	988, 3594, 1756, 2233, 1663, 2732, 2742, 2263, 1279, 2733,
	2467, 1808, 1808, 4085, 2813, 2787, 2089, 2397, 4171, 2410,
	930, 3249, 4086, 2729, 1932, 2163, 2752, 4181, 1897, 2465,
	2737, 2231, 1898, 3675, 2358, 3418, 3601, 3497, 3337, 1129,
	1554, 1759, 2508, 3508, 3416, 3418, 2791, 2792, 3936, 869,
	1947, 2795, 3193, 2734, 3416, 1922, 2395, 4055, 869, 2218,
	4115, 2771, 4113, 3971, 3951, 3844, 988, 988, 988, 1592,
	2773, 2973, 2911, 2542, 1757, 988, 988, 988, 4103, 3451,
	988, 1510, 3103, 1986, 787, 788, 1749, 931, 2764, 1127,
	988, 1109, 1174, 3721, 1122, 870, 988, 3972, 988, 2904,
	2905, 584, 593, 3432, 870, 2580, 1109, 1593, 2583, 3552,
	2585, 1282, 1282, 3504, 2358, 2358, 2166, 1908, 1864, 3197,
	4176, 3788, 1115, 1923, 1174, 1928, 2946, 775, 776, 3787,
	3767, 3902, 2519, 4184, 3452, 2028, 1109, 2802, 3399, 1174,
	3600, 2156, 3666, 3352, 2926, 3419, 3104, 2227, 3096, 1861,
	2641, 2625, 2982, 1820, 2625, 3419, 2645, 1174, 2887, 2228,
	1279, 3287, 1591, 2229, 2978, 2609, 594, 2234, 3302, 2603,
	988, 3596, 2593, 2951, 2906, 3589, 2009, 1998, 1991, 1974,
	3232, 2496, 3613, 1105, 988, 1105, 620, 2940, 1893, 3612,
	240, 3587, 2963, 2914, 3983, 1758, 1820, 3591, 1279, 3937,
	1279, 3194, 2916, 2332, 2328, 1593, 3723, 2965, 595, 1592,
	596, 3414, 988, 1294, 2125, 1857, 1752, 3597, 2935, 1859,
	3454, 2971, 4084, 1148, 2954, 3689, 2939, 2590, 2915, 2389,
	1399, 1944, 3826, 2924, 2358, 2358, 2358, 789, 790, 2927,
	2928, 2932, 1860, 2898, 2882, 2883, 2884, 922, 2992, 866,
	2712, 2997, 2998, 2157, 3824, 3509, 1174, 3590, 2944, 2913,
	3768, 2993, 2925, 2979, 2989, 1294, 2988, 2983, 2757, 3004,
	1294, 2920, 924, 3553, 1942, 3417, 2326, 1663, 3021, 1294,
	777, 778, 2974, 2975, 2735, 3417, 1294, 2074, 2520, 2521,
	1174, 4175, 1756, 2330, 2331, 2329, 2930, 668, 2931, 2391,
	2991, 2404, 1591, 2995, 2390, 2948, 2949, 2950, 1294, 2960,
	2961, 3315, 2962, 1943, 3024, 923, 1814, 3288, 1294, 2434,
	2909, 3004, 1808, 2908, 2966, 3289, 3004, 2230, 1895, 3510,
	1524, 1759, 2433, 2432, 1109, 2431, 2232, 3090, 3112, 3095,
	3042, 2972, 1382, 3035, 3423, 2597, 1754, 1592, 3070, 928,
	2325, 2327, 3909, 867, 2921, 3047, 3611, 1895, 3050, 1814,
	1587, 3657, 3055, 3057, 1757, 3010, 951, 3938, 1368, 3153,
	3017, 1380, 3028, 792, 1511, 2007, 1294, 1294, 1817, 1107,
	3121, 1369, 3072, 2977, 3592, 3031, 4123, 3037, 3593, 3822,
	3064, 1938, 1755, 3706, 1107, 3053, 3052, 3081, 1294, 1938,
	3140, 3059, 2919, 2687, 3043, 3060, 2947, 1104, 3776, 2575,
	1103, 3133, 3045, 3991, 3170, 3980, 3559, 3023, 3304, 2288,
	3986, 1817, 1104, 3163, 1107, 1103, 2053, 2923, 3036, 3067,
	3074, 1174, 2680, 3595, 1174, 2517, 3105, 674, 3034, 4009,
	1591, 2680, 1435, 2066, 619, 3113, 3029, 3598, 677, 3910,
	3030, 4125, 1104, 2067, 3705, 1103, 3051, 1569, 1567, 1546,
	1544, 3058, 1521, 4075, 988, 3923, 2076, 2077, 2078, 3765,
	988, 988, 931, 3744, 988, 988, 988, 3171, 988, 3551,
	681, 3118, 3120, 1593, 3422, 1758, 2880, 988, 1820, 3188,
	3127, 3155, 3151, 163, 163, 3134, 988, 3987, 1519, 988,
	3777, 4050, 3130, 3093, 2879, 1174, 3766, 1517, 1515, 3165,
	3187, 2922, 3111, 3209, 988, 3173, 868, 2844, 1513, 1504,
	2776, 1794, 1174, 3178, 3164, 3179, 3911, 3180, 3172, 3138,
	3139, 2594, 1820, 1820, 988, 988, 1502, 988, 988, 988,
	3212, 3195, 2116, 1378, 2544, 2510, 2456, 1789, 1785, 1570,
	1467, 3221, 3222, 3190, 3189, 988, 1587, 1381, 3184, 988,
	3594, 1820, 1820, 988, 988, 988, 988, 988, 988, 988,
	988, 988, 988, 988, 988, 988, 988, 988, 988, 988,
	988, 988, 1279, 988, 3192, 2717, 1379, 2716, 791, 2693,
	988, 988, 1820, 2145, 2127, 3601, 1533, 988, 3046, 2094,
	1971, 1845, 1695, 2176, 3252, 1995, 1478, 1354, 988, 2287,
	3633, 3622, 3185, 4127, 3979, 3687, 3638, 3585, 4101, 1109,
	1109, 3450, 1107, 988, 3217, 3442, 1568, 1566, 1545, 1543,
	3404, 1520, 2176, 3267, 921, 879, 869, 3235, 3237, 3238,
	3372, 3370, 3228, 2358, 2358, 3013, 3014, 3351, 3244, 3015,
	1104, 1814, 1174, 1103, 3099, 3251, 3229, 3108, 3094, 3086,
	3320, 2647, 2642, 3295, 2621, 3259, 3239, 1518, 2607, 3260,
	3261, 2600, 3262, 3264, 3851, 3299, 1516, 1514, 2587, 3038,
	3039, 988, 870, 3040, 3266, 2573, 3291, 1512, 1503, 3258,
	2048, 3166, 3167, 3168, 3169, 1814, 1814, 988, 988, 2046,
	3347, 2043, 682, 683, 3292, 1501, 3311, 3312, 2115, 2040,
	2035, 3868, 1377, 1817, 3306, 1279, 1279, 2033, 2029, 2020,
	1970, 1968, 1954, 1939, 1814, 1814, 163, 988, 988, 3308,
	3309, 2358, 2358, 2358, 2358, 2358, 2358, 2358, 2358, 2358,
	2358, 2358, 2358, 2358, 2358, 2358, 2358, 2358, 2358, 2358,
	1924, 2358, 988, 1911, 3322, 1814, 1899, 1817, 1817, 3323,
	3129, 3860, 3300, 3131, 3132, 1796, 3054, 3336, 3135, 2755,
	3136, 1948, 3137, 3861, 1294, 4117, 4019, 884, 886, 888,
	1596, 3711, 3704, 1084, 3703, 3645, 1817, 1817, 2681, 1890,
	1883, 1334, 1820, 1279, 1891, 2479, 3385, 3387, 2479, 3862,
	3853, 3384, 2499, 3462, 658, 3380, 3400, 3355, 1085, 2477,
	1420, 1907, 2498, 685, 684, 2085, 3343, 1817, 1564, 1565,
	1294, 2006, 951, 1419, 4018, 2111, 951, 988, 2110, 3615,
	3394, 2092, 3640, 1603, 1604, 1109, 988, 1500, 3464, 3335,
	3888, 1258, 3560, 1105, 3538, 1258, 2522, 2503, 3421, 3438,
	1808, 1600, 2756, 4119, 1294, 1294, 1294, 3473, 3864, 1105,
	4111, 4080, 1606, 2983, 2517, 3410, 3459, 686, 687, 598,
	1294, 231, 1947, 3458, 3863, 3425, 3456, 3455, 1597, 3398,
	1603, 1604, 2586, 2113, 714, 3420, 1854, 3477, 1174, 3439,
	757, 3865, 2549, 1808, 1605, 1892, 2557, 2160, 3445, 3397,
	2556, 3440, 1420, 2539, 1420, 2541, 1086, 1107, 1107, 3489,
	1174, 2505, 1894, 988, 988, 2507, 581, 3443, 2540, 988,
	988, 1820, 609, 3978, 988, 988, 3946, 988, 2506, 2634,
	2570, 988, 3943, 3908, 3465, 1104, 1104, 996, 1103, 1103,
	3457, 1605, 988, 3460, 3840, 3819, 3466, 3441, 3431, 3330,
	3098, 2628, 1172, 2376, 1849, 1814, 1273, 1801, 988, 4148,
	3478, 3479, 3472, 2680, 3774, 3487, 3480, 3484, 3409, 3486,
	3483, 2952, 4174, 3520, 1896, 2850, 2851, 1603, 1604, 4011,
	3945, 238, 238, 238, 4012, 587, 588, 3495, 603, 587,
	603, 613, 618, 4011, 3512, 3511, 636, 1305, 4012, 3500,
	3505, 642, 3530, 4129, 2283, 3524, 1488, 238, 2471, 2472,
	2469, 2470, 1487, 3339, 2471, 2469, 2316, 1817, 1109, 1548,
	3841, 3805, 1547, 2653, 1435, 771, 1109, 3641, 3637, 3636,
	1174, 238, 1174, 3526, 3448, 3338, 2354, 3240, 3048, 1109,
	1689, 1688, 4162, 4134, 3899, 3801, 3759, 3756, 3668, 3565,
	3578, 3488, 3468, 1174, 3426, 3424, 3368, 3363, 3128, 3102,
	3101, 2714, 2698, 2697, 2638, 2613, 2588, 2449, 2448, 2248,
	2112, 2109, 988, 3550, 2108, 2107, 1897, 2106, 2023, 2022,
	1898, 2021, 2004, 1981, 1814, 1977, 1976, 1975, 1973, 1972,
	1563, 1562, 1508, 1406, 3606, 3866, 1405, 1404, 3607, 1174,
	3867, 1403, 1402, 1401, 1400, 3561, 1174, 1398, 1393, 1392,
	1391, 3618, 3619, 3566, 3568, 3371, 1282, 3373, 1390, 3011,
	3567, 3572, 3564, 1107, 1389, 3617, 3571, 3562, 3563, 2939,
	1349, 3584, 1348, 1294, 1294, 3575, 1347, 163, 1346, 1345,
	587, 587, 1344, 1339, 1333, 1331, 1817, 1330, 238, 1165,
	1164, 1104, 1163, 1162, 1103, 3582, 3583, 3605, 3012, 1133,
	3655, 1174, 1132, 1995, 3644, 1067, 1294, 1855, 890, 876,
	3779, 3599, 3653, 3557, 1557, 3403, 3616, 84, 1341, 702,
	3680, 78, 1945, 3367, 849, 1808, 4008, 1327, 3929, 3630,
	3635, 709, 3993, 988, 2999, 2560, 3654, 3652, 2093, 3632,
	1509, 2095, 2934, 1294, 1294, 1294, 2417, 3970, 3642, 3534,
	3643, 2812, 3895, 3737, 1174, 3707, 2286, 1693, 2891, 80,
	972, 3710, 3691, 3690, 3694, 3699, 988, 988, 988, 1808,
	1808, 3674, 3677, 3659, 1018, 3658, 1893, 3664, 3444, 3663,
	3586, 3679, 3354, 2670, 1174, 3685, 3661, 3660, 1805, 988,
	3470, 3692, 988, 988, 3471, 1807, 938, 1177, 1808, 1808,
	1865, 978, 988, 1881, 1874, 1820, 3716, 2450, 2336, 995,
	988, 988, 992, 1809, 1811, 994, 993, 3714, 1810, 1712,
	3713, 3621, 991, 1804, 3447, 1174, 3718, 1294, 3734, 1808,
	3724, 3446, 3629, 2596, 3631, 2632, 1385, 851, 1869, 2242,
	1174, 2270, 1258, 2801, 1686, 953, 1107, 974, 988, 3729,
	2267, 1125, 963, 3496, 1107, 988, 952, 3746, 2917, 3115,
	3329, 3695, 2155, 988, 718, 1820, 3740, 1107, 2847, 2273,
	1118, 2359, 2352, 988, 1104, 2348, 988, 1103, 2622, 1573,
	3761, 1665, 1104, 2633, 988, 1103, 951, 3752, 3753, 3751,
	1160, 1174, 1258, 956, 2240, 1104, 1677, 2781, 1103, 2165,
	3122, 1294, 1294, 2937, 3762, 3760, 2443, 4015, 3248, 3755,
	1985, 1083, 1082, 3800, 1081, 3999, 3996, 3481, 3079, 1858,
	2463, 1655, 3087, 968, 3784, 1278, 2902, 3154, 3783, 3810,
	1351, 641, 980, 1654, 2567, 3834, 3790, 3825, 1174, 2566,
	3905, 1294, 1147, 1146, 3802, 1145, 2981, 3798, 4182, 3364,
	207, 2749, 1594, 1788, 3839, 3807, 1586, 204, 206, 988,
	988, 205, 3669, 3815, 3817, 3333, 3814, 2943, 1814, 3823,
	2358, 3818, 3852, 4078, 3382, 3071, 21, 3838, 988, 988,
	20, 3871, 3872, 3856, 3850, 3833, 3813, 19, 105, 40,
	18, 119, 135, 3875, 134, 988, 1820, 3848, 3847, 2739,
	133, 1995, 3849, 1885, 3855, 3694, 3869, 3854, 132, 1105,
	131, 137, 130, 129, 1282, 124, 2358, 128, 127, 3081,
	988, 126, 3846, 988, 1105, 125, 123, 122, 1814, 1808,
	1817, 3883, 3912, 121, 120, 118, 117, 3901, 3887, 1258,
	116, 115, 988, 114, 113, 112, 111, 110, 3893, 109,
	108, 107, 106, 632, 1105, 629, 3884, 3885, 57, 3900,
	56, 104, 103, 17, 3918, 38, 14, 1120, 61, 62,
	16, 13, 33, 83, 95, 3917, 94, 34, 92, 2354,
	2354, 3932, 988, 988, 3061, 91, 32, 15, 89, 3812,
	1817, 88, 31, 988, 29, 1130, 988, 11, 1294, 9,
	8, 3925, 1890, 3170, 636, 35, 1773, 1891, 1294, 1294,
	3927, 3667, 3163, 3091, 12, 3948, 5, 168, 3950, 3940,
	3941, 3678, 167, 3097, 3939, 1294, 170, 238, 166, 238,
	238, 1270, 3944, 238, 238, 1285, 3961, 3838, 169, 988,
	988, 82, 165, 3698, 3953, 3958, 3957, 3959, 3960, 238,
	1963, 1307, 164, 81, 3952, 3966, 27, 3967, 1808, 1814,
	10, 160, 3835, 2358, 3964, 3436, 76, 162, 3990, 3965,
	161, 159, 988, 988, 3988, 988, 1336, 158, 3975, 157,
	77, 3146, 3147, 74, 4013, 156, 155, 75, 1353, 3989,
	1285, 154, 25, 6, 238, 238, 4020, 1270, 3165, 2354,
	2354, 2354, 3998, 4001, 60, 7, 3719, 238, 1892, 3174,
	4003, 98, 4007, 3164, 99, 1395, 4034, 3974, 36, 4032,
	72, 1817, 988, 988, 988, 1894, 71, 238, 4033, 238,
	238, 70, 1270, 238, 1285, 24, 4024, 4027, 4029, 59,
	23, 197, 196, 195, 636, 988, 238, 238, 4062, 194,
	4002, 193, 1105, 4006, 192, 4049, 187, 4048, 4046, 4047,
	186, 4067, 191, 189, 188, 190, 185, 4065, 199, 771,
	198, 201, 184, 182, 178, 177, 3792, 3793, 181, 3161,
	4017, 183, 4087, 4091, 180, 179, 4096, 1896, 176, 4089,
	4098, 4097, 200, 988, 152, 4088, 153, 67, 151, 3806,
	150, 149, 3808, 3809, 148, 4102, 4093, 147, 146, 145,
	66, 4094, 4095, 22, 2, 1, 0, 4099, 4118, 0,
	0, 4121, 4110, 4114, 4112, 4108, 4109, 0, 0, 0,
	0, 0, 0, 4120, 4122, 1279, 1258, 238, 0, 0,
	4136, 988, 4124, 988, 4128, 4139, 0, 4137, 4135, 4141,
	4131, 4143, 3998, 0, 238, 4001, 0, 4130, 4142, 0,
	0, 0, 0, 4138, 0, 4140, 0, 0, 0, 0,
	0, 0, 0, 0, 2634, 0, 4155, 4157, 0, 0,
	3166, 3167, 3168, 3169, 0, 0, 0, 4163, 0, 1897,
	0, 4164, 0, 1898, 0, 4168, 0, 0, 0, 988,
	988, 4166, 0, 0, 0, 4169, 0, 988, 0, 988,
	988, 4172, 0, 0, 0, 0, 0, 4178, 0, 4187,
	1282, 0, 4190, 1258, 4189, 4188, 4185, 0, 0, 4017,
	0, 4186, 1887, 0, 0, 0, 4193, 0, 4195, 0,
	0, 0, 4198, 4197, 4196, 0, 4199, 2179, 0, 4202,
	4204, 4203, 0, 4200, 0, 0, 0, 988, 4209, 0,
	4205, 4211, 68, 0, 0, 4212, 4208, 4214, 0, 0,
	3926, 1888, 0, 0, 0, 4215, 2778, 2779, 69, 0,
	0, 0, 0, 0, 0, 0, 0, 4179, 4180, 0,
	0, 0, 1258, 73, 0, 0, 0, 0, 0, 3931,
	0, 0, 1808, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1258, 0,
	3947, 0, 0, 0, 0, 0, 0, 0, 79, 0,
	0, 0, 0, 0, 2284, 4210, 0, 1105, 1105, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1893,
	0, 587, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1808, 85, 0, 0, 0, 0, 0, 0,
	0, 0, 238, 0, 238, 0, 0, 100, 238, 3407,
	0, 0, 86, 97, 0, 0, 0, 0, 0, 0,
	0, 1307, 1270, 238, 0, 238, 2873, 2874, 2875, 0,
	238, 1307, 603, 0, 0, 238, 1307, 0, 2354, 2354,
	0, 0, 636, 0, 0, 1258, 0, 0, 0, 0,
	0, 0, 0, 4021, 0, 0, 4022, 0, 0, 2427,
	0, 87, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1603, 1604, 0, 3474,
	3475, 3476, 1646, 1647, 1648, 0, 0, 4077, 0, 0,
	0, 1258, 0, 0, 0, 1435, 0, 0, 1634, 0,
	0, 0, 0, 0, 0, 1606, 0, 0, 0, 0,
	0, 0, 1652, 1808, 0, 0, 2354, 2354, 2354, 2354,
	2354, 2354, 2354, 2354, 2354, 2354, 2354, 2354, 2354, 2354,
	2354, 2354, 2354, 2354, 2354, 0, 2354, 1605, 68, 0,
	0, 0, 0, 0, 0, 0, 2474, 1625, 0, 0,
	0, 2440, 0, 0, 69, 1622, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 73,
	0, 90, 0, 1105, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 238, 0, 0, 238, 0,
	0, 0, 0, 0, 79, 0, 0, 0, 0, 0,
	0, 171, 93, 0, 96, 0, 0, 0, 0, 0,
	0, 1628, 1629, 1630, 1631, 0, 0, 0, 0, 0,
	0, 1611, 0, 0, 0, 0, 0, 0, 208, 85,
	0, 0, 1603, 1604, 0, 0, 766, 0, 238, 0,
	136, 0, 238, 100, 0, 0, 238, 0, 86, 97,
	1643, 0, 238, 1653, 1634, 0, 0, 0, 0, 1633,
	1635, 1606, 0, 0, 0, 238, 0, 238, 0, 238,
	210, 0, 0, 587, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1620, 1621, 0, 2024, 0, 0,
	0, 0, 0, 1605, 138, 0, 0, 87, 0, 238,
	0, 0, 1641, 1625, 0, 0, 238, 0, 175, 0,
	0, 1622, 0, 1626, 0, 0, 209, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 202, 0, 0, 0,
	0, 0, 0, 0, 203, 0, 0, 636, 0, 0,
	0, 771, 0, 0, 0, 0, 1105, 0, 1435, 0,
	0, 0, 0, 0, 1105, 0, 174, 3208, 0, 0,
	0, 0, 0, 0, 0, 0, 238, 1105, 1270, 238,
	0, 0, 0, 0, 0, 0, 0, 1628, 1629, 1630,
	1631, 0, 636, 0, 0, 0, 0, 1611, 0, 238,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 238,
	238, 0, 238, 0, 238, 0, 238, 1632, 238, 0,
	0, 0, 0, 0, 0, 3205, 3206, 90, 3715, 0,
	3717, 0, 0, 0, 0, 1633, 1635, 1627, 2121, 0,
	0, 2122, 0, 2123, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 238, 0, 0, 0, 0,
	1620, 1621, 1644, 0, 0, 0, 0, 171, 93, 0,
	96, 0, 0, 0, 0, 0, 618, 0, 0, 0,
	636, 0, 0, 0, 0, 0, 0, 0, 0, 1626,
	0, 0, 0, 0, 208, 0, 0, 0, 0, 0,
	0, 0, 766, 0, 0, 648, 136, 0, 0, 0,
	0, 0, 3757, 3268, 3269, 3270, 3271, 3272, 3273, 3274,
	3275, 3276, 3277, 3278, 3279, 3280, 3281, 3282, 3283, 3284,
	3285, 3286, 1258, 3290, 0, 0, 210, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1642, 1603, 1604, 0, 0, 0,
	138, 1645, 1623, 1619, 1258, 1616, 1614, 1615, 1607, 1608,
	1609, 1610, 1612, 1613, 175, 0, 0, 1634, 0, 1258,
	0, 0, 209, 1632, 1606, 0, 3816, 0, 0, 0,
	0, 0, 202, 0, 0, 0, 0, 1258, 0, 0,
	203, 0, 0, 1627, 0, 0, 0, 0, 0, 0,
	951, 653, 0, 0, 0, 0, 1605, 0, 0, 0,
	1603, 1604, 174, 0, 951, 0, 1625, 0, 0, 0,
	0, 0, 0, 0, 1622, 0, 0, 587, 0, 0,
	0, 0, 1634, 2903, 0, 0, 0, 0, 0, 1606,
	0, 0, 238, 2850, 2851, 0, 2868, 2869, 2870, 0,
	0, 587, 0, 0, 0, 0, 0, 0, 238, 0,
	587, 0, 0, 0, 3516, 2929, 0, 0, 0, 0,
	3203, 1605, 238, 0, 0, 661, 0, 0, 0, 0,
	2942, 1625, 0, 0, 0, 0, 1258, 0, 0, 1622,
	1628, 1629, 1630, 1631, 0, 0, 0, 0, 2958, 655,
	1611, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2865, 0, 0, 0, 1623, 1619,
	1258, 1616, 1614, 1615, 1607, 1608, 1609, 1610, 1612, 1613,
	0, 0, 0, 603, 238, 3202, 0, 0, 1633, 1635,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 659, 0, 1628, 1629, 1630, 1631, 0,
	0, 0, 0, 1620, 1621, 1611, 0, 2850, 2851, 0,
	2868, 2869, 2870, 0, 0, 0, 0, 0, 2488, 0,
	0, 0, 0, 1435, 1435, 0, 0, 238, 3214, 0,
	0, 0, 1626, 0, 0, 0, 0, 0, 2856, 238,
	1435, 0, 0, 1633, 1635, 2354, 0, 650, 0, 0,
	0, 0, 238, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 238, 1620, 1621,
	654, 2942, 0, 0, 0, 0, 0, 0, 2865, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 238,
	2578, 2354, 2871, 0, 0, 0, 0, 1626, 0, 660,
	0, 1258, 0, 0, 1258, 0, 0, 0, 0, 0,
	0, 0, 657, 0, 1307, 0, 0, 238, 652, 0,
	0, 0, 0, 0, 238, 0, 1632, 0, 0, 0,
	2866, 0, 0, 2617, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2488, 0, 587, 1627, 0, 2637, 0,
	0, 0, 0, 0, 238, 0, 0, 238, 0, 649,
	0, 238, 2856, 238, 0, 0, 0, 0, 1270, 0,
	238, 238, 0, 1285, 1285, 1258, 0, 0, 0, 0,
	0, 0, 0, 2663, 771, 656, 2488, 2488, 0, 0,
	0, 1632, 1258, 0, 0, 0, 0, 0, 662, 0,
	0, 238, 0, 0, 0, 0, 0, 0, 0, 651,
	0, 1627, 1273, 0, 0, 1172, 2871, 238, 1270, 238,
	0, 0, 1307, 1099, 1307, 0, 0, 1270, 0, 1270,
	0, 1270, 0, 0, 0, 0, 0, 0, 2354, 0,
	0, 0, 0, 0, 2867, 0, 0, 0, 2850, 2851,
	0, 2868, 2869, 2870, 2866, 0, 238, 238, 238, 238,
	1270, 238, 0, 238, 0, 0, 0, 233, 233, 583,
	0, 1623, 1619, 0, 1616, 1614, 1615, 1607, 1608, 1609,
	1610, 1612, 1613, 0, 0, 0, 3225, 0, 0, 0,
	0, 1603, 1604, 0, 238, 0, 1751, 0, 0, 0,
	0, 0, 238, 3241, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1634, 0, 0, 0, 0, 0, 2865,
	1606, 0, 1258, 0, 0, 0, 0, 0, 1603, 1604,
	0, 0, 0, 0, 0, 0, 1623, 1619, 0, 1616,
	1614, 1615, 1607, 1608, 1609, 1610, 1612, 1613, 0, 0,
	1634, 0, 1605, 0, 0, 0, 0, 1606, 0, 0,
	0, 0, 1625, 0, 0, 2862, 2863, 2864, 2867, 0,
	1622, 0, 2861, 2859, 2860, 2852, 2853, 2854, 2855, 2857,
	2858, 0, 0, 0, 0, 0, 0, 0, 0, 1605,
	0, 1307, 0, 0, 0, 0, 0, 0, 0, 1625,
	0, 0, 0, 2856, 0, 0, 0, 1622, 0, 0,
	0, 0, 0, 0, 0, 0, 2767, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3332, 0, 2872, 1628, 1629, 1630, 1631,
	0, 0, 3743, 0, 0, 0, 1611, 0, 0, 0,
	0, 0, 0, 2760, 0, 0, 0, 2871, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 937, 1628, 1629, 1630, 1631, 0, 0, 0,
	0, 0, 0, 1611, 1633, 1635, 0, 0, 3770, 2862,
	2863, 2864, 0, 0, 0, 2866, 2861, 2859, 2860, 2852,
	2853, 2854, 2855, 2857, 2858, 0, 0, 0, 238, 1620,
	1621, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1633, 1635, 238, 0, 0, 0, 0, 587, 0,
	0, 0, 0, 587, 0, 0, 587, 0, 1626, 587,
	587, 0, 0, 0, 0, 587, 1620, 1621, 0, 0,
	0, 0, 0, 238, 0, 0, 0, 0, 1258, 0,
	0, 0, 0, 0, 0, 1307, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1626, 0, 0, 0, 0,
	1258, 0, 0, 0, 1307, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2488, 2488, 238, 0, 1285, 2867,
	0, 2488, 0, 0, 2985, 0, 0, 0, 0, 0,
	0, 0, 2488, 2985, 0, 2488, 2985, 2985, 0, 0,
	0, 0, 1632, 0, 0, 3892, 0, 0, 0, 0,
	238, 238, 1285, 238, 0, 0, 0, 0, 0, 0,
	0, 0, 1627, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1285, 238, 1270, 0, 0, 0, 1632,
	0, 0, 0, 0, 0, 0, 0, 2488, 0, 3049,
	2488, 1285, 0, 0, 2488, 2488, 1285, 0, 0, 1627,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1258, 238, 1258, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 238, 3075, 0, 0, 3077, 2488,
	0, 0, 238, 1258, 0, 0, 238, 0, 1285, 0,
	2862, 2863, 2864, 0, 0, 0, 0, 2861, 2859, 2860,
	2852, 2853, 2854, 2855, 2857, 2858, 2617, 0, 0, 1270,
	0, 238, 0, 0, 2488, 0, 587, 0, 0, 0,
	0, 0, 0, 2488, 0, 0, 0, 0, 0, 1258,
	238, 0, 0, 0, 238, 238, 1258, 1623, 1619, 0,
	1616, 1614, 1615, 1607, 1608, 1609, 1610, 1612, 1613, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 238, 2617, 0, 0, 2617, 0, 0, 0, 0,
	0, 0, 0, 3570, 1623, 1619, 0, 1616, 1614, 1615,
	1607, 1608, 1609, 1610, 1612, 1613, 0, 0, 0, 0,
	0, 1258, 0, 0, 3580, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 144, 0, 3183, 0, 0, 1270,
	238, 68, 238, 44, 43, 0, 0, 0, 0, 0,
	2850, 2851, 0, 2868, 2869, 2870, 0, 69, 0, 139,
	0, 0, 0, 1169, 0, 0, 0, 0, 0, 1277,
	0, 3213, 73, 0, 1258, 238, 0, 0, 0, 0,
	0, 0, 63, 0, 0, 0, 0, 0, 0, 46,
	0, 141, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1258, 45, 0, 79, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 937, 0,
	0, 2865, 937, 0, 0, 0, 0, 0, 0, 48,
	64, 3246, 0, 0, 0, 0, 0, 49, 0, 0,
	0, 0, 85, 1387, 0, 1258, 142, 0, 0, 0,
	0, 0, 0, 0, 47, 0, 100, 0, 0, 0,
	1258, 86, 97, 1410, 0, 1410, 1410, 0, 0, 1309,
	0, 1315, 0, 1321, 0, 0, 0, 0, 0, 0,
	0, 0, 1452, 1453, 0, 1172, 0, 0, 0, 0,
	0, 0, 50, 0, 0, 0, 951, 0, 0, 0,
	0, 0, 0, 0, 762, 2856, 0, 0, 0, 0,
	87, 1258, 0, 0, 0, 3735, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 238, 238, 0, 0,
	68, 0, 765, 764, 0, 2850, 2851, 0, 2868, 2869,
	2870, 0, 0, 0, 0, 1436, 69, 0, 587, 587,
	0, 0, 0, 0, 0, 0, 3735, 0, 1258, 2871,
	0, 73, 1454, 0, 1459, 0, 0, 0, 0, 0,
	0, 2179, 0, 1556, 1468, 0, 1473, 0, 0, 0,
	0, 0, 1307, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 79, 2866, 0, 0,
	0, 0, 0, 0, 0, 0, 2865, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2179, 0, 0, 0, 0, 0, 0, 0,
	90, 85, 0, 0, 1529, 0, 636, 1535, 0, 0,
	0, 51, 0, 0, 0, 100, 0, 0, 0, 0,
	86, 97, 0, 0, 0, 0, 0, 0, 55, 0,
	0, 0, 0, 0, 65, 238, 0, 0, 0, 54,
	171, 93, 0, 96, 0, 0, 0, 52, 0, 0,
	0, 143, 0, 1285, 238, 0, 0, 0, 53, 0,
	2856, 0, 0, 0, 238, 0, 0, 208, 0, 87,
	0, 0, 951, 951, 238, 58, 0, 0, 0, 136,
	0, 2867, 238, 0, 0, 0, 0, 238, 0, 0,
	0, 238, 0, 140, 0, 0, 0, 1656, 1657, 1658,
	1659, 1660, 1661, 1662, 0, 0, 0, 0, 0, 210,
	0, 2488, 238, 0, 2871, 0, 0, 0, 0, 0,
	0, 0, 68, 0, 0, 0, 0, 0, 1674, 2663,
	2663, 0, 0, 138, 1687, 771, 771, 2488, 69, 0,
	2617, 2617, 0, 0, 771, 2488, 0, 175, 0, 0,
	0, 0, 2866, 73, 0, 209, 0, 0, 0, 0,
	0, 0, 0, 951, 238, 202, 0, 0, 0, 0,
	0, 0, 0, 203, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1783, 0, 0, 0, 79, 90,
	0, 0, 0, 0, 0, 174, 0, 0, 3, 1792,
	0, 1277, 2862, 2863, 2864, 0, 0, 0, 0, 2861,
	2859, 2860, 2852, 2853, 2854, 2855, 2857, 2858, 0, 0,
	0, 0, 0, 85, 0, 0, 0, 0, 0, 171,
	93, 0, 96, 3535, 0, 0, 0, 100, 1745, 1745,
	1745, 0, 86, 97, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 208, 0, 0, 0,
	0, 0, 0, 0, 766, 0, 2867, 0, 136, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 973, 102, 0, 0, 0,
	0, 87, 0, 0, 0, 238, 0, 0, 210, 0,
	0, 1307, 0, 238, 0, 0, 0, 0, 0, 0,
	0, 0, 937, 0, 0, 0, 238, 0, 0, 0,
	0, 0, 138, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 175, 2488, 2488, 2488,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	1307, 0, 0, 0, 202, 0, 0, 0, 2488, 0,
	2985, 0, 203, 1307, 1307, 238, 1285, 0, 0, 0,
	0, 0, 102, 0, 0, 0, 0, 1285, 238, 1285,
	238, 0, 0, 0, 763, 0, 0, 2862, 2863, 2864,
	2488, 0, 2488, 238, 2861, 2859, 2860, 2852, 2853, 2854,
	2855, 2857, 2858, 0, 0, 0, 0, 0, 0, 0,
	0, 90, 0, 0, 0, 0, 0, 2488, 0, 0,
	0, 0, 3671, 0, 0, 0, 0, 0, 0, 0,
	238, 0, 0, 0, 1983, 0, 0, 0, 1990, 238,
	0, 0, 0, 0, 0, 0, 0, 0, 2001, 912,
	0, 171, 93, 0, 96, 0, 0, 0, 0, 0,
	932, 1387, 0, 2012, 0, 2012, 0, 0, 0, 0,
	0, 0, 0, 1307, 0, 0, 0, 0, 208, 0,
	0, 0, 0, 0, 0, 0, 766, 0, 0, 0,
	136, 0, 0, 0, 0, 1410, 1093, 0, 0, 0,
	0, 0, 1277, 0, 0, 0, 0, 0, 0, 1603,
	1604, 0, 1636, 1637, 1638, 1646, 1647, 1648, 0, 0,
	210, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1634, 0, 0, 0, 0, 0, 0, 1606, 0,
	0, 0, 0, 0, 138, 1652, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 175, 0,
	0, 0, 1990, 0, 0, 2071, 209, 0, 0, 0,
	1605, 0, 0, 2488, 0, 2985, 202, 0, 3764, 997,
	1625, 0, 0, 0, 203, 2088, 238, 0, 1622, 0,
	0, 0, 0, 0, 0, 0, 2098, 0, 2100, 0,
	2102, 0, 2104, 0, 2105, 0, 1448, 0, 0, 0,
	0, 0, 636, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 239, 239, 239, 0, 0, 0, 0,
	0, 0, 0, 0, 1285, 238, 0, 0, 0, 0,
	0, 2126, 0, 0, 0, 0, 0, 0, 0, 239,
	0, 0, 0, 3764, 1628, 1629, 1630, 1631, 0, 0,
	0, 2488, 0, 0, 1611, 0, 0, 0, 0, 0,
	0, 0, 3843, 239, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1307, 0, 0, 0, 0, 0,
	0, 0, 0, 1643, 0, 0, 1653, 0, 0, 0,
	0, 0, 1633, 1635, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 238, 238, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1620, 1621, 0,
	0, 0, 0, 0, 0, 0, 0, 3246, 0, 0,
	0, 0, 0, 0, 0, 1641, 0, 0, 2154, 0,
	2158, 0, 0, 3764, 0, 0, 1626, 2172, 0, 0,
	0, 0, 0, 0, 2181, 2182, 2183, 2184, 2185, 2186,
	2187, 2188, 2189, 2190, 2191, 2192, 2193, 2194, 2195, 2196,
	2197, 2198, 2199, 2200, 2201, 2202, 2203, 2204, 2205, 2206,
	2207, 2208, 2209, 2210, 2211, 2212, 2213, 2214, 2215, 238,
	2221, 0, 2223, 2224, 2225, 2226, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3671, 0,
	0, 0, 0, 0, 2250, 0, 0, 0, 0, 0,
	0, 0, 238, 0, 0, 1674, 0, 0, 0, 2265,
	0, 2985, 0, 0, 0, 0, 0, 0, 0, 0,
	1632, 0, 0, 0, 0, 2295, 2298, 2301, 2304, 0,
	2308, 2309, 2310, 2311, 2312, 2313, 2314, 1307, 2424, 1307,
	1627, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2350, 0,
	2361, 2363, 2368, 0, 3984, 1644, 0, 0, 0, 0,
	0, 1307, 0, 0, 238, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 238, 2488, 0, 0, 0, 0, 0, 0, 0,
	2001, 0, 0, 0, 0, 0, 0, 0, 0, 238,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3246, 0, 0, 0, 102,
	0, 102, 0, 102, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1642, 0, 0,
	0, 1617, 1618, 1624, 1645, 1623, 1619, 0, 1616, 1614,
	1615, 1607, 1608, 1609, 1610, 1612, 1613, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2488, 0, 0, 0,
	0, 0, 0, 1277, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3764, 0,
	0, 0, 0, 0, 0, 102, 0, 0, 0, 932,
	102, 102, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 102, 0, 102, 0, 0, 0, 0, 1307,
	0, 2488, 0, 1990, 102, 0, 102, 0, 0, 0,
	2001, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2639, 0, 0, 1410, 0, 0, 0, 1410, 0, 1410,
	0, 0, 0, 2581, 2582, 0, 2584, 0, 0, 0,
	0, 0, 102, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2692, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2663,
	0, 68, 0, 2700, 0, 2703, 0, 0, 0, 0,
	0, 0, 2663, 0, 0, 0, 0, 69, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 73, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2725, 1277, 2727, 1277, 0, 2730, 0, 0,
	912, 0, 0, 0, 0, 0, 0, 0, 0, 239,
	1178, 239, 239, 0, 1178, 239, 239, 79, 1178, 0,
	1668, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1410, 239, 0, 0, 0, 0, 0, 1673, 2758, 0,
	0, 1679, 0, 0, 0, 0, 0, 0, 2713, 0,
	0, 1178, 85, 1603, 1604, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 100, 0, 0, 0,
	0, 86, 97, 0, 1178, 1634, 239, 239, 0, 0,
	0, 0, 1606, 0, 0, 0, 0, 0, 0, 239,
	0, 0, 0, 0, 0, 0, 0, 0, 1656, 1657,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 239,
	0, 239, 239, 0, 1605, 239, 0, 1178, 0, 0,
	87, 0, 0, 1178, 1625, 0, 0, 1178, 239, 239,
	0, 0, 1622, 0, 0, 0, 0, 0, 0, 0,
	0, 1178, 0, 0, 1603, 1604, 0, 1636, 1637, 1638,
	1646, 1647, 1648, 2761, 2762, 0, 0, 0, 0, 2768,
	1765, 0, 1768, 0, 102, 1639, 1634, 0, 0, 0,
	0, 0, 0, 1606, 0, 0, 0, 0, 2782, 2783,
	1652, 0, 0, 0, 2265, 0, 0, 0, 0, 0,
	1178, 0, 0, 2790, 0, 0, 0, 0, 1628, 1629,
	1630, 1631, 0, 0, 0, 1605, 0, 0, 1611, 2804,
	0, 0, 0, 0, 0, 1625, 0, 0, 0, 239,
	0, 0, 0, 1622, 0, 0, 2816, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 239, 1603, 1604, 0,
	90, 0, 0, 0, 0, 0, 1633, 1635, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1634,
	0, 0, 0, 0, 0, 0, 1606, 0, 0, 0,
	0, 1620, 1621, 0, 0, 0, 0, 0, 0, 0,
	171, 93, 0, 96, 0, 0, 0, 0, 0, 1628,
	1629, 1630, 1631, 0, 0, 0, 0, 0, 1605, 1611,
	1626, 2368, 2368, 2368, 0, 0, 0, 208, 1625, 0,
	0, 0, 0, 0, 0, 766, 1745, 0, 0, 136,
	0, 0, 0, 0, 2907, 0, 0, 0, 1643, 0,
	0, 1653, 0, 0, 0, 0, 0, 1633, 1635, 0,
	0, 0, 2976, 0, 0, 0, 0, 0, 0, 210,
	0, 0, 0, 1649, 0, 1650, 0, 0, 0, 0,
	0, 0, 1620, 1621, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 138, 0, 0, 3020, 3022, 0, 2001,
	1641, 0, 1628, 1629, 1630, 1631, 0, 175, 0, 0,
	0, 1626, 1611, 0, 1632, 209, 937, 0, 0, 0,
	0, 0, 0, 0, 0, 202, 0, 0, 0, 0,
	937, 0, 0, 203, 1627, 0, 1651, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1633, 1635, 0, 1640, 0, 1446, 0, 0, 3002, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3088, 0,
	239, 0, 3092, 0, 0, 0, 0, 0, 0, 0,
	0, 1178, 0, 0, 0, 239, 239, 239, 0, 0,
	0, 0, 239, 0, 1626, 1632, 0, 239, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1178, 0, 0, 0, 0, 1627, 1410, 0, 0, 0,
	1277, 1277, 932, 0, 932, 0, 0, 0, 0, 0,
	0, 1178, 0, 0, 0, 0, 0, 0, 0, 0,
	1644, 0, 0, 0, 0, 0, 0, 3150, 0, 1623,
	1619, 0, 1616, 1614, 1615, 1607, 1608, 1609, 1610, 1612,
	1613, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1632, 0,
	0, 0, 0, 0, 0, 0, 3186, 0, 1277, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1627, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3198, 1642, 0, 0, 0, 1617, 1618, 1624, 1645,
	1623, 1619, 0, 1616, 1614, 1615, 1607, 1608, 1609, 1610,
	1612, 1613, 0, 0, 0, 0, 2825, 0, 0, 0,
	2826, 0, 0, 0, 0, 0, 0, 239, 1178, 1178,
	239, 912, 0, 0, 912, 912, 0, 0, 1178, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2172, 0, 0, 0, 0, 0, 3200, 3201, 0, 0,
	3204, 0, 0, 0, 3207, 0, 0, 0, 0, 0,
	239, 0, 0, 3211, 239, 0, 0, 0, 239, 2239,
	0, 0, 3218, 0, 239, 2907, 1616, 1614, 1615, 1607,
	1608, 1609, 1610, 1612, 1613, 932, 0, 239, 0, 239,
	3230, 239, 0, 0, 1673, 0, 0, 0, 1673, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3253, 3254, 0, 3255, 3256, 3257, 0, 0, 0, 0,
	0, 239, 0, 0, 0, 0, 0, 0, 239, 0,
	0, 3263, 0, 0, 0, 3265, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1178, 0, 1178, 0,
	1178, 0, 0, 0, 0, 0, 3293, 3294, 0, 0,
	1093, 0, 0, 0, 0, 0, 1178, 1178, 0, 0,
	0, 0, 0, 0, 3305, 0, 1768, 1178, 239, 0,
	0, 239, 0, 0, 0, 0, 0, 0, 0, 3314,
	1178, 1178, 1178, 0, 0, 0, 0, 0, 0, 0,
	0, 239, 0, 0, 0, 0, 0, 102, 0, 0,
	0, 239, 239, 0, 239, 0, 239, 0, 239, 0,
	239, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 748, 0, 0, 0, 0, 3348, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 239, 0, 0,
	0, 0, 0, 3357, 3360, 0, 732, 0, 0, 0,
	2001, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2001, 0, 0, 984, 0, 0, 0, 0, 0, 0,
	3435, 0, 0, 0, 3381, 0, 0, 0, 0, 0,
	0, 0, 733, 2001, 0, 1178, 0, 3449, 102, 0,
	0, 0, 0, 734, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 237, 237, 237,
	0, 735, 0, 0, 0, 0, 0, 0, 0, 102,
	0, 0, 0, 0, 0, 0, 0, 0, 754, 0,
	0, 0, 0, 675, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 736, 0, 0,
	0, 102, 0, 0, 102, 0, 102, 675, 0, 0,
	3498, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	737, 0, 1178, 1745, 0, 0, 0, 0, 0, 0,
	0, 0, 3467, 0, 0, 0, 0, 0, 0, 0,
	738, 0, 0, 739, 0, 0, 0, 102, 0, 0,
	102, 0, 661, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 753, 0, 0, 0,
	0, 0, 0, 0, 0, 102, 0, 0, 0, 0,
	0, 1178, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3513,
	3514, 0, 0, 0, 239, 3518, 3519, 1178, 0, 0,
	3522, 3523, 0, 0, 1106, 0, 0, 3527, 0, 0,
	750, 0, 0, 0, 0, 0, 0, 0, 3531, 0,
	0, 0, 0, 0, 0, 0, 102, 0, 0, 0,
	0, 0, 0, 0, 3536, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 239, 0, 0, 0,
	0, 741, 0, 0, 1178, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 760, 0, 742, 0, 0, 0, 0, 0,
	0, 3620, 0, 0, 1178, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2001, 0, 0, 0, 0, 239,
	0, 0, 0, 0, 0, 0, 660, 0, 0, 0,
	0, 239, 0, 743, 0, 0, 0, 758, 759, 756,
	0, 0, 0, 0, 239, 751, 2239, 0, 744, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3360, 239,
	1178, 0, 0, 0, 0, 0, 2001, 1673, 0, 0,
	0, 0, 0, 0, 1178, 3686, 0, 0, 0, 0,
	0, 239, 0, 0, 0, 745, 752, 0, 0, 0,
	0, 0, 0, 0, 746, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 747, 0, 239,
	0, 0, 755, 0, 0, 0, 239, 0, 0, 0,
	0, 0, 0, 0, 0, 662, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 749, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 239, 0, 0, 239,
	0, 0, 0, 239, 0, 239, 0, 0, 0, 0,
	0, 0, 239, 239, 0, 0, 0, 1178, 1178, 0,
	1178, 0, 0, 0, 0, 0, 0, 0, 0, 3360,
	0, 0, 1178, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 239, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1093, 0, 0, 239,
	0, 239, 3730, 3731, 3732, 0, 0, 0, 0, 0,
	0, 1093, 3771, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2172, 0, 0, 3741, 3742,
	0, 0, 0, 0, 0, 0, 0, 0, 239, 239,
	239, 239, 0, 239, 0, 239, 3750, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2001, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 239, 0, 0, 0,
	0, 0, 0, 0, 239, 0, 0, 0, 0, 0,
	0, 3360, 0, 0, 0, 0, 0, 0, 0, 3789,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3796,
	0, 0, 937, 0, 0, 0, 0, 0, 0, 0,
	3803, 102, 102, 0, 0, 102, 0, 0, 1020, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3882,
	1277, 0, 0, 237, 0, 237, 237, 0, 0, 237,
	237, 0, 0, 0, 0, 102, 102, 0, 0, 102,
	0, 0, 0, 0, 0, 675, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3360, 3360, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	237, 237, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 237, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1093,
	0, 0, 932, 237, 0, 237, 237, 0, 0, 237,
	0, 0, 0, 0, 0, 0, 3904, 0, 3949, 3907,
	0, 0, 237, 237, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 102, 102, 0, 0, 0, 3360, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1178, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 825,
	0, 866, 0, 0, 0, 0, 0, 0, 937, 937,
	0, 0, 0, 1178, 0, 0, 0, 0, 0, 3360,
	3992, 0, 3360, 0, 832, 0, 0, 0, 1178, 1110,
	0, 0, 0, 0, 0, 0, 0, 4014, 0, 0,
	845, 830, 0, 237, 0, 0, 1178, 0, 0, 0,
	0, 0, 0, 0, 0, 4026, 0, 0, 0, 0,
	237, 0, 0, 0, 0, 0, 2172, 831, 0, 0,
	0, 0, 834, 0, 0, 0, 0, 874, 239, 0,
	0, 0, 0, 0, 0, 842, 843, 0, 0, 0,
	0, 859, 0, 0, 0, 0, 0, 0, 0, 937,
	0, 0, 1178, 0, 0, 867, 836, 0, 0, 0,
	0, 0, 239, 239, 0, 239, 0, 0, 0, 0,
	0, 0, 239, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 837, 0, 0, 0, 239, 0, 0, 0,
	0, 865, 0, 0, 0, 1178, 0, 0, 4045, 4045,
	4045, 0, 0, 0, 1178, 0, 0, 0, 0, 1178,
	0, 0, 0, 0, 0, 0, 0, 0, 1178, 0,
	0, 4066, 0, 239, 0, 1178, 0, 838, 0, 1178,
	0, 0, 0, 0, 0, 829, 239, 0, 0, 0,
	0, 0, 0, 0, 239, 0, 102, 1178, 239, 0,
	0, 0, 0, 839, 840, 0, 0, 1178, 0, 0,
	0, 0, 0, 0, 1093, 1093, 0, 0, 0, 4045,
	0, 847, 846, 0, 0, 0, 0, 0, 0, 841,
	0, 0, 0, 856, 0, 0, 0, 0, 0, 0,
	0, 0, 239, 0, 0, 0, 239, 239, 871, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1178, 1178, 3360, 868, 3360,
	0, 0, 0, 239, 0, 0, 0, 0, 1767, 0,
	1106, 0, 0, 0, 237, 0, 0, 1178, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 237,
	1767, 237, 0, 0, 0, 0, 675, 0, 0, 0,
	0, 675, 835, 0, 0, 873, 0, 0, 0, 0,
	1178, 0, 239, 1178, 239, 4045, 4173, 0, 0, 0,
	833, 0, 0, 4177, 863, 864, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 239, 0, 0,
	0, 0, 0, 0, 861, 0, 0, 0, 0, 0,
	0, 872, 857, 0, 850, 848, 0, 853, 0, 0,
	0, 0, 0, 854, 0, 0, 827, 0, 869, 0,
	0, 0, 0, 0, 1178, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 102, 0, 0, 0, 828, 0,
	0, 1178, 0, 0, 0, 0, 0, 0, 0, 855,
	0, 0, 0, 0, 852, 0, 0, 0, 0, 0,
	1093, 0, 0, 0, 870, 0, 0, 0, 0, 0,
	0, 0, 858, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 860, 0, 0, 0, 0, 0, 1110,
	0, 0, 0, 1110, 0, 0, 0, 1110, 0, 102,
	0, 237, 0, 0, 675, 862, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1110, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1110, 237, 0, 0, 0, 237, 0,
	0, 1178, 237, 0, 0, 0, 0, 0, 237, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 237, 0, 237, 0, 237, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1110, 0, 0, 0,
	0, 0, 1110, 0, 0, 0, 1110, 0, 0, 0,
	0, 0, 0, 0, 0, 237, 0, 0, 0, 0,
	1110, 0, 237, 0, 0, 0, 0, 102, 0, 0,
	0, 0, 0, 1093, 0, 0, 0, 0, 0, 0,
	0, 1093, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 239, 0, 1110,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 237, 1178, 0, 237, 239, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 239, 0, 0, 0,
	0, 0, 0, 0, 0, 237, 239, 0, 0, 0,
	0, 0, 0, 0, 239, 675, 237, 0, 237, 239,
	237, 0, 237, 239, 237, 0, 0, 0, 0, 1178,
	0, 0, 692, 0, 0, 0, 0, 243, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 693, 102, 0, 0,
	0, 237, 0, 1178, 1178, 1178, 0, 102, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1178,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 102,
	0, 0, 694, 0, 711, 0, 239, 1178, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 667, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 695, 1178,
	0, 696, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 667, 0, 0, 0, 0, 0, 0, 719, 0,
	0, 0, 0, 0, 697, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 717, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	698, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	699, 0, 0, 700, 0, 0, 0, 0, 721, 0,
	0, 0, 661, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1110, 0, 1110, 0, 0, 0, 1178,
	0, 1178, 0, 0, 0, 0, 0, 0, 0, 0,
	1110, 0, 0, 0, 0, 0, 0, 0, 1106, 0,
	0, 0, 1178, 0, 0, 1821, 0, 0, 0, 0,
	0, 0, 0, 0, 1106, 0, 0, 0, 0, 1110,
	0, 720, 0, 0, 0, 0, 0, 0, 237, 0,
	715, 0, 0, 0, 0, 0, 0, 239, 0, 0,
	1110, 0, 0, 0, 0, 0, 0, 0, 1178, 0,
	239, 0, 239, 0, 0, 1178, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 239, 2239, 0, 0, 0,
	701, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 703, 1178, 1178, 0, 0, 0, 0, 0, 0,
	237, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 239, 0, 704, 0, 0, 0, 0, 0,
	1178, 239, 0, 989, 0, 1178, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 660, 0, 0, 0,
	0, 0, 0, 237, 0, 0, 0, 691, 0, 712,
	0, 0, 1178, 1178, 1178, 237, 0, 0, 705, 0,
	0, 0, 0, 1178, 0, 0, 0, 0, 237, 0,
	0, 0, 0, 0, 0, 0, 0, 1110, 1110, 0,
	0, 710, 0, 237, 0, 102, 0, 1110, 0, 0,
	0, 0, 0, 1178, 0, 706, 0, 0, 724, 0,
	723, 0, 0, 0, 707, 675, 102, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 708, 0, 0,
	0, 0, 716, 0, 0, 0, 0, 725, 0, 722,
	0, 0, 0, 237, 1178, 662, 1178, 0, 0, 0,
	237, 0, 0, 0, 0, 0, 0, 0, 0, 1178,
	0, 0, 0, 0, 0, 0, 0, 0, 239, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	237, 0, 0, 237, 0, 0, 0, 237, 0, 237,
	0, 0, 0, 0, 0, 0, 237, 237, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1178, 0, 0, 0, 0, 0, 0, 239, 0, 102,
	1178, 1178, 102, 0, 0, 0, 0, 237, 0, 0,
	0, 0, 0, 0, 0, 1110, 0, 1110, 0, 1110,
	0, 0, 0, 237, 0, 237, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1110, 1110, 1178, 0, 0,
	1178, 0, 0, 0, 0, 0, 1110, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1110,
	1110, 1110, 237, 237, 237, 237, 0, 237, 0, 237,
	0, 0, 0, 0, 0, 239, 239, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	237, 0, 0, 0, 0, 0, 0, 0, 237, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1175, 0,
	0, 0, 1175, 0, 0, 0, 1295, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1295,
	0, 239, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1821, 1821, 1110, 0, 0, 0, 0, 0,
	0, 0, 1295, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 239, 0, 0, 1178, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1178, 1178, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1178, 1295, 0, 0, 0, 0,
	0, 1295, 0, 0, 0, 1295, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1295,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1110, 0, 0, 0, 0, 239, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 239, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1295, 0,
	0, 239, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1106, 0, 0, 0, 0, 0,
	0, 0, 0, 1110, 0, 0, 0, 0, 0, 1106,
	1110, 0, 0, 0, 0, 0, 0, 0, 0, 1110,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1110, 0, 0, 1767,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 237, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1110, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 237, 237, 0, 237,
	0, 0, 0, 1110, 1176, 0, 1767, 0, 1176, 0,
	0, 0, 1296, 0, 0, 0, 0, 0, 0, 0,
	237, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1821, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1296, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 237, 0, 1110,
	0, 0, 0, 0, 0, 0, 0, 0, 1296, 0,
	675, 0, 0, 1110, 0, 0, 0, 0, 237, 0,
	0, 0, 237, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1106, 0, 0,
	0, 1296, 0, 0, 0, 0, 0, 1296, 0, 0,
	0, 1296, 0, 0, 0, 0, 237, 0, 0, 1175,
	237, 237, 0, 0, 0, 1296, 0, 0, 0, 0,
	667, 0, 0, 0, 0, 667, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 237, 1295, 0,
	0, 0, 0, 0, 0, 0, 1110, 1110, 0, 1110,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1175,
	0, 1110, 0, 0, 1296, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 237, 0, 237, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 237, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1603,
	1604, 0, 1636, 1637, 1638, 1646, 1647, 1648, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1639, 1634, 0, 0, 0, 0, 0, 0, 1606, 0,
	0, 0, 0, 0, 0, 1652, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1295, 1295, 0, 0,
	0, 0, 0, 0, 0, 0, 1175, 0, 0, 0,
	1605, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1625, 0, 0, 0, 0, 0, 0, 0, 1622, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1106, 1106, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1628, 1629, 1630, 1631, 0, 0,
	0, 0, 0, 0, 1611, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1643, 0, 0, 1653, 0, 0, 0,
	0, 0, 1633, 1635, 1295, 1176, 1295, 0, 1295, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1649, 0,
	1650, 0, 0, 0, 1295, 1295, 0, 1620, 1621, 0,
	0, 0, 0, 0, 1296, 1295, 0, 0, 0, 1110,
	1110, 0, 0, 0, 0, 1641, 0, 0, 1295, 1295,
	1295, 0, 0, 0, 1110, 1176, 1626, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 667,
	0, 237, 1110, 0, 0, 0, 0, 0, 0, 0,
	0, 1651, 0, 0, 1110, 0, 0, 1110, 0, 0,
	237, 0, 0, 0, 0, 0, 0, 0, 1640, 0,
	237, 1821, 0, 0, 0, 1110, 0, 0, 0, 0,
	237, 0, 0, 0, 0, 0, 0, 0, 237, 0,
	0, 0, 0, 237, 0, 0, 0, 237, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1821, 0, 0, 0, 1106, 0,
	1632, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1110, 0, 1175, 0, 0, 0, 0, 0, 0,
	1627, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1296, 1296, 0, 1644, 0, 0, 0, 0,
	237, 0, 1176, 0, 1110, 0, 0, 0, 0, 0,
	0, 0, 0, 1110, 0, 0, 0, 0, 1110, 0,
	0, 0, 0, 0, 0, 0, 0, 1110, 0, 0,
	0, 0, 0, 0, 1110, 0, 0, 0, 1110, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1175, 0, 0, 0, 0, 0, 1110, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1110, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1110, 0, 0, 0, 0, 1642, 0, 0,
	0, 1617, 1618, 1624, 1645, 1623, 1619, 0, 1616, 1614,
	1615, 1607, 1608, 1609, 1610, 1612, 1613, 0, 0, 0,
	0, 2261, 0, 0, 0, 2262, 0, 0, 0, 1175,
	0, 0, 0, 0, 1110, 1110, 0, 0, 0, 0,
	0, 1106, 0, 0, 0, 0, 0, 0, 0, 1106,
	1296, 0, 1296, 0, 1296, 1175, 1110, 0, 0, 0,
	0, 0, 1767, 0, 0, 0, 0, 0, 0, 0,
	1296, 1296, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1296, 0, 0, 0, 0, 0, 0, 0, 1110,
	0, 0, 1110, 0, 1296, 1296, 1296, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 237, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1295, 0, 237, 0, 237, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 237,
	0, 0, 0, 0, 0, 0, 1821, 0, 0, 0,
	0, 0, 1175, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1110, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 237, 0, 0, 0,
	1110, 0, 0, 0, 0, 237, 0, 0, 0, 0,
	1821, 1821, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1175, 1176,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1821,
	1821, 0, 1295, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1821, 0, 0, 0, 0, 0, 0, 0, 1603, 1604,
	0, 1636, 1637, 1638, 1646, 1647, 1648, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1110, 1110, 1639,
	1634, 0, 0, 0, 0, 0, 0, 1606, 0, 0,
	0, 0, 0, 0, 1652, 0, 1176, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1110, 0, 0, 0, 0, 1295, 1295, 0, 1295, 1605,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1625,
	1295, 0, 237, 0, 0, 0, 0, 1622, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1176, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 237, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1176, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1628, 1629, 1630, 1631, 0, 0, 0,
	0, 0, 0, 1611, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1110, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1643, 0, 0, 1653, 0, 0, 0, 0,
	1821, 1633, 1635, 0, 0, 0, 0, 0, 1296, 237,
	237, 0, 0, 0, 0, 0, 0, 1649, 0, 1650,
	0, 0, 0, 0, 0, 0, 1620, 1621, 1110, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1176, 0,
	0, 0, 0, 1110, 1641, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1626, 0, 0, 0, 0,
	0, 0, 1110, 1110, 1110, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1110, 0,
	1651, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1176, 237, 1110, 1640, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1296, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1110, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 237, 1821,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1632,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1627,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1644, 0, 0, 0, 0, 1175,
	237, 1296, 1296, 0, 1296, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1296, 237, 0, 0,
	0, 0, 0, 0, 0, 0, 1110, 0, 0, 0,
	0, 1175, 0, 0, 1110, 237, 0, 0, 1110, 0,
	1110, 0, 0, 0, 0, 0, 1175, 1110, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1110, 0, 0, 1175, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1642, 0, 0, 0,
	1617, 1618, 1624, 1645, 1623, 1619, 0, 1616, 1614, 1615,
	1607, 1608, 1609, 1610, 1612, 1613, 0, 1110, 0, 0,
	3985, 0, 0, 0, 1110, 0, 0, 0, 0, 0,
	1295, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1110, 1110, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1175, 0, 0, 0, 0, 0, 1110,
	0, 0, 1295, 0, 1110, 0, 0, 1295, 0, 0,
	0, 0, 0, 0, 0, 0, 1295, 0, 0, 0,
	0, 0, 0, 1295, 0, 0, 0, 1175, 0, 0,
	0, 0, 0, 0, 667, 0, 0, 0, 0, 0,
	0, 1110, 1110, 1110, 0, 1295, 0, 0, 0, 0,
	0, 0, 1110, 0, 0, 1295, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1603,
	1604, 0, 1636, 1637, 1638, 1646, 1647, 1648, 0, 0,
	0, 0, 1110, 0, 0, 0, 0, 0, 0, 0,
	1639, 1634, 0, 0, 0, 0, 0, 0, 1606, 0,
	0, 0, 0, 1821, 0, 1652, 0, 0, 0, 0,
	0, 0, 0, 1295, 1295, 0, 0, 0, 0, 0,
	0, 0, 0, 1110, 0, 1110, 0, 0, 0, 0,
	1605, 0, 0, 0, 0, 1295, 0, 0, 1110, 0,
	1625, 0, 0, 0, 0, 0, 0, 0, 1622, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1821, 0, 1176, 0, 0, 1175, 0,
	0, 1175, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1110,
	0, 0, 0, 0, 0, 0, 0, 1176, 0, 1110,
	1110, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1176, 0, 1628, 1629, 1630, 1631, 0, 0,
	0, 0, 0, 0, 1611, 0, 0, 0, 0, 0,
	1176, 0, 0, 0, 0, 0, 1110, 0, 0, 1110,
	0, 0, 1175, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1643, 0, 0, 1653, 0, 0, 1175,
	0, 0, 1633, 1635, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1649, 0,
	1650, 0, 0, 0, 0, 0, 1296, 1620, 1621, 0,
	0, 0, 0, 0, 1821, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1641, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1626, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1176,
	0, 0, 0, 0, 0, 0, 0, 0, 1296, 0,
	0, 1651, 0, 1296, 0, 0, 0, 0, 0, 0,
	0, 0, 1296, 0, 0, 0, 0, 0, 1640, 1296,
	0, 0, 0, 1176, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1296, 0, 0, 0, 0, 0, 0, 0, 1175,
	0, 1296, 0, 0, 0, 0, 1110, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1110, 1110, 0, 0,
	1632, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1110, 0, 0, 0, 0, 0, 0,
	1627, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1296,
	1296, 0, 0, 0, 0, 1644, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1296, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1176, 0, 0, 1176, 0, 0,
	0, 1295, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1642, 0, 0,
	0, 1617, 1618, 1624, 1645, 1623, 1619, 1295, 1616, 1614,
	1615, 1607, 1608, 1609, 1610, 1612, 1613, 0, 0, 0,
	0, 0, 0, 0, 0, 3541, 0, 0, 1176, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1295, 1295, 1295, 0, 1176, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1295, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1175, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1175, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1603, 1604,
	0, 1636, 1637, 1638, 1646, 1647, 1648, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1639,
	1634, 0, 0, 0, 0, 0, 0, 1606, 0, 0,
	0, 0, 0, 0, 1652, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1605,
	0, 0, 0, 0, 0, 1176, 0, 0, 0, 1625,
	0, 0, 0, 0, 0, 0, 0, 1622, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1175, 0, 1175,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1175, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1628, 1629, 1630, 1631, 0, 0, 0,
	0, 0, 0, 1611, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1175, 0, 0, 0,
	0, 0, 1643, 1175, 0, 1653, 0, 1296, 0, 0,
	0, 1633, 1635, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1649, 0, 1650,
	1295, 1295, 0, 0, 0, 0, 1620, 1621, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1296, 1641, 0, 0, 0, 1175, 0,
	0, 0, 0, 1295, 0, 1626, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1296, 1296, 1296,
	1651, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1295, 1295, 1295, 1296, 0, 0, 0, 1640, 0, 0,
	0, 1175, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1176, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1175, 0, 1176, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1632,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1627,
	0, 0, 1175, 0, 1295, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1603, 1604, 1175, 1636, 1637,
	1638, 1646, 1647, 1648, 1644, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1639, 1634, 0, 0,
	0, 0, 0, 0, 1606, 0, 0, 0, 0, 0,
	0, 1652, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1175, 0,
	0, 0, 0, 0, 0, 0, 1605, 0, 1295, 1295,
	0, 0, 0, 1176, 0, 1176, 1625, 0, 0, 0,
	0, 0, 0, 0, 1622, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1176, 0, 0, 0,
	0, 0, 0, 0, 0, 1175, 1642, 0, 1295, 0,
	1617, 1618, 1624, 1645, 1623, 1619, 0, 1616, 1614, 1615,
	1607, 1608, 1609, 1610, 1612, 1613, 0, 0, 0, 0,
	0, 0, 0, 0, 3216, 0, 0, 0, 0, 0,
	0, 0, 1176, 0, 0, 0, 0, 0, 0, 1176,
	1628, 1629, 1630, 1631, 0, 0, 0, 0, 0, 0,
	1611, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1296, 1296, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1643,
	0, 0, 1653, 0, 0, 0, 0, 0, 1633, 1635,
	0, 0, 0, 0, 1176, 0, 0, 0, 0, 1296,
	0, 0, 0, 0, 1649, 0, 1650, 0, 0, 0,
	0, 0, 0, 1620, 1621, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1641, 0, 0, 0, 0, 1296, 1296, 1296, 0,
	0, 0, 1626, 0, 0, 0, 0, 1176, 0, 0,
	0, 0, 0, 0, 0, 1295, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1295, 1295, 1651, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1176, 0, 0,
	0, 0, 1295, 0, 1640, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1176, 0,
	1296, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1176, 0, 0, 1632, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1627, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1644, 0, 0, 1176, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1296, 1296, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1176, 0, 0, 1296, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1642, 0, 0, 0, 1617, 1618, 1624,
	1645, 1623, 1619, 0, 1616, 1614, 1615, 1607, 1608, 1609,
	1610, 1612, 1613, 0, 0, 0, 0, 0, 0, 0,
	0, 2828, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1173,
	0, 1296, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1296, 1296, 0, 0, 0, 247, 248, 249, 250,
	251, 252, 1179, 253, 254, 1180, 1181, 1182, 1296, 1183,
	529, 1184, 1185, 1186, 1187, 255, 256, 258, 257, 259,
	260, 261, 530, 531, 0, 262, 532, 263, 533, 1188,
	534, 264, 265, 266, 267, 268, 1189, 1190, 0, 269,
	535, 536, 537, 1191, 270, 271, 538, 1192, 1259, 1193,
	272, 273, 274, 275, 276, 277, 278, 0, 1194, 280,
	281, 282, 279, 1195, 283, 0, 284, 285, 286, 1196,
	287, 1051, 288, 289, 1197, 1198, 1200, 1199, 1201, 1202,
	1203, 290, 291, 292, 293, 0, 294, 539, 540, 1204,
	298, 295, 296, 1205, 299, 297, 1206, 300, 301, 302,
	1207, 1208, 303, 304, 305, 1209, 306, 307, 1210, 308,
	309, 310, 1211, 311, 312, 541, 313, 314, 315, 317,
	319, 316, 320, 321, 322, 323, 542, 543, 1212, 244,
	1213, 0, 0, 0, 0, 324, 325, 326, 544, 0,
	0, 0, 327, 1214, 328, 1215, 1216, 1052, 329, 330,
	545, 546, 331, 332, 1217, 333, 547, 1218, 548, 334,
	1219, 335, 336, 337, 338, 339, 549, 550, 551, 396,
	1054, 340, 341, 1220, 342, 343, 344, 345, 0, 0,
	0, 245, 346, 347, 349, 1221, 1053, 348, 552, 553,
	1222, 554, 1223, 350, 351, 1055, 555, 1056, 352, 353,
	354, 1057, 355, 0, 0, 0, 356, 357, 358, 359,
	360, 361, 1224, 362, 364, 363, 1225, 365, 556, 1058,
	366, 367, 1059, 1226, 368, 369, 370, 1227, 1228, 371,
	372, 373, 374, 0, 375, 376, 378, 380, 377, 379,
	384, 381, 382, 383, 386, 0, 385, 1060, 387, 388,
	389, 392, 393, 391, 1061, 390, 1229, 246, 1062, 394,
	1230, 557, 395, 558, 397, 398, 1231, 0, 399, 0,
	1232, 1233, 401, 402, 403, 1234, 1235, 404, 405, 559,
	1063, 406, 1064, 560, 407, 408, 400, 409, 410, 411,
	412, 413, 414, 415, 416, 1236, 417, 418, 561, 562,
	563, 419, 564, 420, 421, 1237, 422, 0, 423, 424,
	425, 426, 427, 428, 429, 565, 431, 430, 432, 1238,
	433, 0, 0, 0, 0, 0, 434, 0, 436, 437,
	438, 435, 439, 440, 441, 442, 1239, 443, 444, 445,
	1065, 446, 447, 448, 449, 566, 450, 0, 451, 452,
	458, 459, 453, 454, 460, 461, 462, 463, 464, 1240,
	466, 467, 465, 468, 469, 470, 1241, 471, 455, 456,
	472, 473, 1066, 474, 475, 476, 477, 478, 479, 567,
	0, 480, 1242, 481, 482, 483, 484, 457, 485, 490,
	568, 486, 487, 488, 489, 569, 1243, 492, 493, 0,
	491, 1244, 494, 495, 496, 497, 498, 499, 318, 500,
	1245, 501, 570, 571, 572, 573, 1246, 508, 1247, 502,
	503, 574, 504, 575, 1248, 505, 506, 507, 0, 509,
	510, 1249, 1250, 511, 512, 513, 515, 516, 514, 517,
	1251, 518, 1252, 0, 519, 520, 521, 576, 577, 578,
	1253, 523, 522, 579, 1254, 1255, 1256, 1257, 524, 525,
	580, 526, 527, 528, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1173, 0, 0,
	0, 0, 0, 0, 0, 2402, 0, 0, 0, 0,
	0, 0, 0, 2403, 247, 248, 249, 250, 251, 252,
	1179, 253, 254, 1180, 1181, 1182, 0, 1183, 529, 1184,
	1185, 1186, 1187, 255, 256, 258, 257, 259, 260, 261,
	530, 531, 0, 262, 532, 263, 533, 1188, 534, 264,
	265, 266, 267, 268, 1189, 1190, 0, 269, 535, 536,
	537, 1191, 270, 271, 538, 1192, 1259, 1193, 272, 273,
	274, 275, 276, 277, 278, 0, 1194, 280, 281, 282,
	279, 1195, 283, 0, 284, 285, 286, 1196, 287, 1051,
	288, 289, 1197, 1198, 1200, 1199, 1201, 1202, 1203, 290,
	291, 292, 293, 0, 294, 539, 540, 1204, 298, 295,
	296, 1205, 299, 297, 1206, 300, 301, 302, 1207, 1208,
	303, 304, 305, 1209, 306, 307, 1210, 308, 309, 310,
	1211, 311, 312, 541, 313, 314, 315, 317, 319, 316,
	320, 321, 322, 323, 542, 543, 1212, 244, 1213, 0,
	0, 0, 0, 324, 325, 326, 544, 0, 0, 0,
	327, 1214, 328, 1215, 1216, 1052, 329, 330, 545, 546,
	331, 332, 1217, 333, 547, 1218, 548, 334, 1219, 335,
	336, 337, 338, 339, 549, 550, 551, 396, 1054, 340,
	341, 1220, 342, 343, 344, 345, 0, 0, 0, 245,
	346, 347, 349, 1221, 1053, 348, 552, 553, 1222, 554,
	1223, 350, 351, 1055, 555, 1056, 352, 353, 354, 1057,
	355, 0, 0, 0, 356, 357, 358, 359, 360, 361,
	1224, 362, 364, 363, 1225, 365, 556, 1058, 366, 367,
	1059, 1226, 368, 369, 370, 1227, 1228, 371, 372, 373,
	374, 0, 375, 376, 378, 380, 377, 379, 384, 381,
	382, 383, 386, 0, 385, 1060, 387, 388, 389, 392,
	393, 391, 1061, 390, 1229, 246, 1062, 394, 1230, 557,
	395, 558, 397, 398, 1231, 0, 399, 0, 1232, 1233,
	401, 402, 403, 1234, 1235, 404, 405, 559, 1063, 406,
	1064, 560, 407, 408, 400, 409, 410, 411, 412, 413,
	414, 415, 416, 1236, 417, 418, 561, 562, 563, 419,
	564, 420, 421, 1237, 422, 0, 423, 424, 425, 426,
	427, 428, 429, 565, 431, 430, 432, 1238, 433, 0,
	0, 0, 0, 0, 434, 0, 436, 437, 438, 435,
	439, 440, 441, 442, 1239, 443, 444, 445, 1065, 446,
	447, 448, 449, 566, 450, 0, 451, 452, 458, 459,
	453, 454, 460, 461, 462, 463, 464, 1240, 466, 467,
	465, 468, 469, 470, 1241, 471, 455, 456, 472, 473,
	1066, 474, 475, 476, 477, 478, 479, 567, 0, 480,
	1242, 481, 482, 483, 484, 457, 485, 490, 568, 486,
	487, 488, 489, 569, 1243, 492, 493, 0, 491, 1244,
	494, 495, 496, 497, 498, 499, 318, 500, 1245, 501,
	570, 571, 572, 573, 1246, 508, 1247, 502, 503, 574,
	504, 575, 1248, 505, 506, 507, 0, 509, 510, 1249,
	1250, 511, 512, 513, 515, 516, 514, 517, 1251, 518,
	1252, 0, 519, 520, 521, 576, 577, 578, 1253, 523,
	522, 579, 1254, 1255, 1256, 1257, 524, 525, 580, 526,
	527, 528, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1173, 0, 0, 0, 0, 3224, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3226,
	247, 248, 249, 250, 251, 252, 1179, 253, 254, 1180,
	1181, 1182, 0, 1183, 529, 1184, 1185, 1186, 1187, 255,
	256, 258, 257, 259, 260, 261, 530, 531, 0, 262,
	532, 263, 533, 1188, 534, 264, 265, 266, 267, 268,
	1189, 1190, 0, 269, 535, 536, 537, 1191, 270, 271,
	538, 1192, 1259, 1193, 272, 273, 274, 275, 276, 277,
	278, 0, 1194, 280, 281, 282, 279, 1195, 283, 0,
	284, 285, 286, 1196, 287, 1051, 288, 289, 1197, 1198,
	1200, 1199, 1201, 1202, 1203, 290, 291, 292, 293, 0,
	294, 539, 540, 1204, 298, 295, 296, 1205, 299, 297,
	1206, 300, 301, 302, 1207, 1208, 303, 304, 305, 1209,
	306, 307, 1210, 308, 309, 310, 1211, 311, 312, 541,
	313, 314, 315, 317, 319, 316, 320, 321, 322, 323,
	542, 543, 1212, 244, 1213, 0, 0, 0, 0, 324,
	325, 326, 544, 0, 0, 0, 327, 1214, 328, 1215,
	1216, 1052, 329, 330, 545, 546, 331, 332, 1217, 333,
	547, 1218, 548, 334, 1219, 335, 336, 337, 338, 339,
	549, 550, 551, 396, 1054, 340, 341, 1220, 342, 343,
	344, 345, 0, 0, 0, 245, 346, 347, 349, 1221,
	1053, 348, 552, 553, 1222, 554, 1223, 350, 351, 1055,
	555, 1056, 352, 353, 354, 1057, 355, 0, 0, 0,
	356, 357, 358, 359, 360, 361, 1224, 362, 364, 363,
	1225, 365, 556, 1058, 366, 367, 1059, 1226, 368, 369,
	370, 1227, 1228, 371, 372, 373, 374, 0, 375, 376,
	378, 380, 377, 379, 384, 381, 382, 383, 386, 0,
	385, 1060, 387, 388, 389, 392, 393, 391, 1061, 390,
	1229, 246, 1062, 394, 1230, 557, 395, 558, 397, 398,
	1231, 0, 399, 0, 1232, 1233, 401, 402, 403, 1234,
	1235, 404, 405, 559, 1063, 406, 1064, 560, 407, 408,
	400, 409, 410, 411, 412, 413, 414, 415, 416, 1236,
	417, 418, 561, 562, 563, 419, 564, 420, 421, 1237,
	422, 0, 423, 424, 425, 426, 427, 428, 429, 565,
	431, 430, 432, 1238, 433, 0, 0, 0, 0, 0,
	434, 0, 436, 437, 438, 435, 439, 440, 441, 442,
	1239, 443, 444, 445, 1065, 446, 447, 448, 449, 566,
	450, 0, 451, 452, 458, 459, 453, 454, 460, 461,
	462, 463, 464, 1240, 466, 467, 465, 468, 469, 470,
	1241, 471, 455, 456, 472, 473, 1066, 474, 475, 476,
	477, 478, 479, 567, 0, 480, 1242, 481, 482, 483,
	484, 457, 485, 490, 568, 486, 487, 488, 489, 569,
	1243, 492, 493, 0, 491, 1244, 494, 495, 496, 497,
	498, 499, 318, 500, 1245, 501, 570, 571, 572, 573,
	1246, 508, 1247, 502, 503, 574, 504, 575, 1248, 505,
	506, 507, 0, 509, 510, 1249, 1250, 511, 512, 513,
	515, 516, 514, 517, 1251, 518, 1252, 0, 519, 520,
	521, 576, 577, 578, 1253, 523, 522, 579, 1254, 1255,
	1256, 1257, 524, 525, 580, 526, 527, 528, 0, 0,
	0, 0, 0, 1173, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3569,
	247, 248, 249, 250, 251, 252, 1179, 253, 254, 1180,
	1181, 1182, 0, 1183, 529, 1184, 1185, 1186, 1187, 255,
	256, 258, 257, 259, 260, 261, 530, 531, 0, 262,
	532, 263, 533, 1188, 534, 264, 265, 266, 267, 268,
	1189, 1190, 0, 269, 535, 536, 537, 1191, 270, 271,
	538, 1192, 1259, 1193, 272, 273, 274, 275, 276, 277,
	278, 0, 1194, 280, 281, 282, 279, 1195, 283, 0,
	284, 285, 286, 1196, 287, 1051, 288, 289, 1197, 1198,
	1200, 1199, 1201, 1202, 1203, 290, 291, 292, 293, 0,
	294, 539, 540, 1204, 298, 295, 296, 1205, 299, 297,
	1206, 300, 301, 302, 1207, 1208, 303, 304, 305, 1209,
	306, 307, 1210, 308, 309, 310, 1211, 311, 312, 541,
	313, 314, 315, 317, 319, 316, 320, 321, 322, 323,
	542, 543, 1212, 244, 1213, 0, 0, 0, 0, 324,
	325, 326, 544, 0, 0, 0, 327, 1214, 328, 1215,
	1216, 1052, 329, 330, 545, 546, 331, 332, 1217, 333,
	547, 1218, 548, 334, 1219, 335, 336, 337, 338, 339,
	549, 550, 551, 396, 1054, 340, 341, 1220, 342, 343,
	344, 345, 0, 0, 0, 245, 346, 347, 349, 1221,
	1053, 348, 552, 553, 1222, 554, 1223, 350, 351, 1055,
	555, 1056, 352, 353, 354, 1057, 355, 0, 0, 0,
	356, 357, 358, 359, 360, 361, 1224, 362, 364, 363,
	1225, 365, 556, 1058, 366, 367, 1059, 1226, 368, 369,
	370, 1227, 1228, 371, 372, 373, 374, 0, 375, 376,
	378, 380, 377, 379, 384, 381, 382, 383, 386, 0,
	385, 1060, 387, 388, 389, 392, 393, 391, 1061, 390,
	1229, 246, 1062, 394, 1230, 557, 395, 558, 397, 398,
	1231, 0, 399, 0, 1232, 1233, 401, 402, 403, 1234,
	1235, 404, 405, 559, 1063, 406, 1064, 560, 407, 408,
	400, 409, 410, 411, 412, 413, 414, 415, 416, 1236,
	417, 418, 561, 562, 563, 419, 564, 420, 421, 1237,
	422, 0, 423, 424, 425, 426, 427, 428, 429, 565,
	431, 430, 432, 1238, 433, 0, 0, 0, 0, 0,
	434, 0, 436, 437, 438, 435, 439, 440, 441, 442,
	1239, 443, 444, 445, 1065, 446, 447, 448, 449, 566,
	450, 0, 451, 452, 458, 459, 453, 454, 460, 461,
	462, 463, 464, 1240, 466, 467, 465, 468, 469, 470,
	1241, 471, 455, 456, 472, 473, 1066, 474, 475, 476,
	477, 478, 479, 567, 0, 480, 1242, 481, 482, 483,
	484, 457, 485, 490, 568, 486, 487, 488, 489, 569,
	1243, 492, 493, 0, 491, 1244, 494, 495, 496, 497,
	498, 499, 318, 500, 1245, 501, 570, 571, 572, 573,
	1246, 508, 1247, 502, 503, 574, 504, 575, 1248, 505,
	506, 507, 0, 509, 510, 1249, 1250, 511, 512, 513,
	515, 516, 514, 517, 1251, 518, 1252, 0, 519, 520,
	521, 576, 577, 578, 1253, 523, 522, 579, 1254, 1255,
	1256, 1257, 524, 525, 580, 526, 527, 528, 1173, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3736, 247, 248, 249, 250, 251,
	252, 1179, 253, 254, 1180, 1181, 1182, 0, 1183, 529,
	1184, 1185, 1186, 1187, 255, 256, 258, 257, 259, 260,
	261, 530, 531, 0, 262, 532, 263, 533, 1188, 534,
	264, 265, 266, 267, 268, 1189, 1190, 0, 269, 535,
	536, 537, 1191, 270, 271, 538, 1192, 1259, 1193, 272,
	273, 274, 275, 276, 277, 278, 0, 1194, 280, 281,
	282, 279, 1195, 283, 0, 284, 285, 286, 1196, 287,
	1051, 288, 289, 1197, 1198, 1200, 1199, 1201, 1202, 1203,
	290, 291, 292, 293, 0, 294, 539, 540, 1204, 298,
	295, 296, 1205, 299, 297, 1206, 300, 301, 302, 1207,
	1208, 303, 304, 305, 1209, 306, 307, 1210, 308, 309,
	310, 1211, 311, 312, 541, 313, 314, 315, 317, 319,
	316, 320, 321, 322, 323, 542, 543, 1212, 244, 1213,
	0, 0, 0, 0, 324, 325, 326, 544, 0, 0,
	0, 327, 1214, 328, 1215, 1216, 1052, 329, 330, 545,
	546, 331, 332, 1217, 333, 547, 1218, 548, 334, 1219,
	335, 336, 337, 338, 339, 549, 550, 551, 396, 1054,
	340, 341, 1220, 342, 343, 344, 345, 0, 0, 0,
	245, 346, 347, 349, 1221, 1053, 348, 552, 553, 1222,
	554, 1223, 350, 351, 1055, 555, 1056, 352, 353, 354,
	1057, 355, 0, 0, 0, 356, 357, 358, 359, 360,
	361, 1224, 362, 364, 363, 1225, 365, 556, 1058, 366,
	367, 1059, 1226, 368, 369, 370, 1227, 1228, 371, 372,
	373, 374, 0, 375, 376, 378, 380, 377, 379, 384,
	381, 382, 383, 386, 0, 385, 1060, 387, 388, 389,
	392, 393, 391, 1061, 390, 1229, 246, 1062, 394, 1230,
	557, 395, 558, 397, 398, 1231, 0, 399, 0, 1232,
	1233, 401, 402, 403, 1234, 1235, 404, 405, 559, 1063,
	406, 1064, 560, 407, 408, 400, 409, 410, 411, 412,
	413, 414, 415, 416, 1236, 417, 418, 561, 562, 563,
	419, 564, 420, 421, 1237, 422, 0, 423, 424, 425,
	426, 427, 428, 429, 565, 431, 430, 432, 1238, 433,
	0, 0, 0, 0, 0, 434, 0, 436, 437, 438,
	435, 439, 440, 441, 442, 1239, 443, 444, 445, 1065,
	446, 447, 448, 449, 566, 450, 0, 451, 452, 458,
	459, 453, 454, 460, 461, 462, 463, 464, 1240, 466,
	467, 465, 468, 469, 470, 1241, 471, 455, 456, 472,
	473, 1066, 474, 475, 476, 477, 478, 479, 567, 0,
	480, 1242, 481, 482, 483, 484, 457, 485, 490, 568,
	486, 487, 488, 489, 569, 1243, 492, 493, 0, 491,
	1244, 494, 495, 496, 497, 498, 499, 318, 500, 1245,
	501, 570, 571, 572, 573, 1246, 508, 1247, 502, 503,
	574, 504, 575, 1248, 505, 506, 507, 0, 509, 510,
	1249, 1250, 511, 512, 513, 515, 516, 514, 517, 1251,
	518, 1252, 0, 519, 520, 521, 576, 577, 578, 1253,
	523, 522, 579, 1254, 1255, 1256, 1257, 524, 525, 580,
	526, 527, 528, 1173, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3628,
	247, 248, 249, 250, 251, 252, 1179, 253, 254, 1180,
	1181, 1182, 0, 1183, 529, 1184, 1185, 1186, 1187, 255,
	256, 258, 257, 259, 260, 261, 530, 531, 0, 262,
	532, 263, 533, 1188, 534, 264, 265, 266, 267, 268,
	1189, 1190, 0, 269, 535, 536, 537, 1191, 270, 271,
	538, 1192, 1259, 1193, 272, 273, 274, 275, 276, 277,
	278, 0, 1194, 280, 281, 282, 279, 1195, 283, 0,
	284, 285, 286, 1196, 287, 1051, 288, 289, 1197, 1198,
	1200, 1199, 1201, 1202, 1203, 290, 291, 292, 293, 0,
	294, 539, 540, 1204, 298, 295, 296, 1205, 299, 297,
	1206, 300, 301, 302, 1207, 1208, 303, 304, 305, 1209,
	306, 307, 1210, 308, 309, 310, 1211, 311, 312, 541,
	313, 314, 315, 317, 319, 316, 320, 321, 322, 323,
	542, 543, 1212, 244, 1213, 0, 0, 0, 0, 324,
	325, 326, 544, 0, 0, 0, 327, 1214, 328, 1215,
	1216, 1052, 329, 330, 545, 546, 331, 332, 1217, 333,
	547, 1218, 548, 334, 1219, 335, 336, 337, 338, 339,
	549, 550, 551, 396, 1054, 340, 341, 1220, 342, 343,
	344, 345, 0, 0, 0, 245, 346, 347, 349, 1221,
	1053, 348, 552, 553, 1222, 554, 1223, 350, 351, 1055,
	555, 1056, 352, 353, 354, 1057, 355, 0, 0, 0,
	356, 357, 358, 359, 360, 361, 1224, 362, 364, 363,
	1225, 365, 556, 1058, 366, 367, 1059, 1226, 368, 369,
	370, 1227, 1228, 371, 372, 373, 374, 0, 375, 376,
	378, 380, 377, 379, 384, 381, 382, 383, 386, 0,
	385, 1060, 387, 388, 389, 392, 393, 391, 1061, 390,
	1229, 246, 1062, 394, 1230, 557, 395, 558, 397, 398,
	1231, 0, 399, 0, 1232, 1233, 401, 402, 403, 1234,
	1235, 404, 405, 559, 1063, 406, 1064, 560, 407, 408,
	400, 409, 410, 411, 412, 413, 414, 415, 416, 1236,
	417, 418, 561, 562, 563, 419, 564, 420, 421, 1237,
	422, 0, 423, 424, 425, 426, 427, 428, 429, 565,
	431, 430, 432, 1238, 433, 0, 0, 0, 0, 0,
	434, 0, 436, 437, 438, 435, 439, 440, 441, 442,
	1239, 443, 444, 445, 1065, 446, 447, 448, 449, 566,
	450, 0, 451, 452, 458, 459, 453, 454, 460, 461,
	462, 463, 464, 1240, 466, 467, 465, 468, 469, 470,
	1241, 471, 455, 456, 472, 473, 1066, 474, 475, 476,
	477, 478, 479, 567, 0, 480, 1242, 481, 482, 483,
	484, 457, 485, 490, 568, 486, 487, 488, 489, 569,
	1243, 492, 493, 0, 491, 1244, 494, 495, 496, 497,
	498, 499, 318, 500, 1245, 501, 570, 571, 572, 573,
	1246, 508, 1247, 502, 503, 574, 504, 575, 1248, 505,
	506, 507, 0, 509, 510, 1249, 1250, 511, 512, 513,
	515, 516, 514, 517, 1251, 518, 1252, 0, 519, 520,
	521, 576, 577, 578, 1253, 523, 522, 579, 1254, 1255,
	1256, 1257, 524, 525, 580, 526, 527, 528, 1173, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3499, 247, 248, 249, 250, 251,
	252, 1179, 253, 254, 1180, 1181, 1182, 0, 1183, 529,
	1184, 1185, 1186, 1187, 255, 256, 258, 257, 259, 260,
	261, 530, 531, 0, 262, 532, 263, 533, 1188, 534,
	264, 265, 266, 267, 268, 1189, 1190, 0, 269, 535,
	536, 537, 1191, 270, 271, 538, 1192, 1259, 1193, 272,
	273, 274, 275, 276, 277, 278, 0, 1194, 280, 281,
	282, 279, 1195, 283, 0, 284, 285, 286, 1196, 287,
	1051, 288, 289, 1197, 1198, 1200, 1199, 1201, 1202, 1203,
	290, 291, 292, 293, 0, 294, 539, 540, 1204, 298,
	295, 296, 1205, 299, 297, 1206, 300, 301, 302, 1207,
	1208, 303, 304, 305, 1209, 306, 307, 1210, 308, 309,
	310, 1211, 311, 312, 541, 313, 314, 315, 317, 319,
	316, 320, 321, 322, 323, 542, 543, 1212, 244, 1213,
	0, 0, 0, 0, 324, 325, 326, 544, 0, 0,
	0, 327, 1214, 328, 1215, 1216, 1052, 329, 330, 545,
	546, 331, 332, 1217, 333, 547, 1218, 548, 334, 1219,
	335, 336, 337, 338, 339, 549, 550, 551, 396, 1054,
	340, 341, 1220, 342, 343, 344, 345, 0, 0, 0,
	245, 346, 347, 349, 1221, 1053, 348, 552, 553, 1222,
	554, 1223, 350, 351, 1055, 555, 1056, 352, 353, 354,
	1057, 355, 0, 0, 0, 356, 357, 358, 359, 360,
	361, 1224, 362, 364, 363, 1225, 365, 556, 1058, 366,
	367, 1059, 1226, 368, 369, 370, 1227, 1228, 371, 372,
	373, 374, 0, 375, 376, 378, 380, 377, 379, 384,
	381, 382, 383, 386, 0, 385, 1060, 387, 388, 389,
	392, 393, 391, 1061, 390, 1229, 246, 1062, 394, 1230,
	557, 395, 558, 397, 398, 1231, 0, 399, 0, 1232,
	1233, 401, 402, 403, 1234, 1235, 404, 405, 559, 1063,
	406, 1064, 560, 407, 408, 400, 409, 410, 411, 412,
	413, 414, 415, 416, 1236, 417, 418, 561, 562, 563,
	419, 564, 420, 421, 1237, 422, 0, 423, 424, 425,
	426, 427, 428, 429, 565, 431, 430, 432, 1238, 433,
	0, 0, 0, 0, 0, 434, 0, 436, 437, 438,
	435, 439, 440, 441, 442, 1239, 443, 444, 445, 1065,
	446, 447, 448, 449, 566, 450, 0, 451, 452, 458,
	459, 453, 454, 460, 461, 462, 463, 464, 1240, 466,
	467, 465, 468, 469, 470, 1241, 471, 455, 456, 472,
	473, 1066, 474, 475, 476, 477, 478, 479, 567, 0,
	480, 1242, 481, 482, 483, 484, 457, 485, 490, 568,
	486, 487, 488, 489, 569, 1243, 492, 493, 0, 491,
	1244, 494, 495, 496, 497, 498, 499, 318, 500, 1245,
	501, 570, 571, 572, 573, 1246, 508, 1247, 502, 503,
	574, 504, 575, 1248, 505, 506, 507, 0, 509, 510,
	1249, 1250, 511, 512, 513, 515, 516, 514, 517, 1251,
	518, 1252, 0, 519, 520, 521, 576, 577, 578, 1253,
	523, 522, 579, 1254, 1255, 1256, 1257, 524, 525, 580,
	526, 527, 528, 1173, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3242,
	247, 248, 249, 250, 251, 252, 1179, 253, 254, 1180,
	1181, 1182, 0, 1183, 529, 1184, 1185, 1186, 1187, 255,
	256, 258, 257, 259, 260, 261, 530, 531, 0, 262,
	532, 263, 533, 1188, 534, 264, 265, 266, 267, 268,
	1189, 1190, 0, 269, 535, 536, 537, 1191, 270, 271,
	538, 1192, 1259, 1193, 272, 273, 274, 275, 276, 277,
	278, 0, 1194, 280, 281, 282, 279, 1195, 283, 0,
	284, 285, 286, 1196, 287, 1051, 288, 289, 1197, 1198,
	1200, 1199, 1201, 1202, 1203, 290, 291, 292, 293, 0,
	294, 539, 540, 1204, 298, 295, 296, 1205, 299, 297,
	1206, 300, 301, 302, 1207, 1208, 303, 304, 305, 1209,
	306, 307, 1210, 308, 309, 310, 1211, 311, 312, 541,
	313, 314, 315, 317, 319, 316, 320, 321, 322, 323,
	542, 543, 1212, 244, 1213, 0, 0, 0, 0, 324,
	325, 326, 544, 0, 0, 0, 327, 1214, 328, 1215,
	1216, 1052, 329, 330, 545, 546, 331, 332, 1217, 333,
	547, 1218, 548, 334, 1219, 335, 336, 337, 338, 339,
	549, 550, 551, 396, 1054, 340, 341, 1220, 342, 343,
	344, 345, 0, 0, 0, 245, 346, 347, 349, 1221,
	1053, 348, 552, 553, 1222, 554, 1223, 350, 351, 1055,
	555, 1056, 352, 353, 354, 1057, 355, 0, 0, 0,
	356, 357, 358, 359, 360, 361, 1224, 362, 364, 363,
	1225, 365, 556, 1058, 366, 367, 1059, 1226, 368, 369,
	370, 1227, 1228, 371, 372, 373, 374, 0, 375, 376,
	378, 380, 377, 379, 384, 381, 382, 383, 386, 0,
	385, 1060, 387, 388, 389, 392, 393, 391, 1061, 390,
	1229, 246, 1062, 394, 1230, 557, 395, 558, 397, 398,
	1231, 0, 399, 0, 1232, 1233, 401, 402, 403, 1234,
	1235, 404, 405, 559, 1063, 406, 1064, 560, 407, 408,
	400, 409, 410, 411, 412, 413, 414, 415, 416, 1236,
	417, 418, 561, 562, 563, 419, 564, 420, 421, 1237,
	422, 0, 423, 424, 425, 426, 427, 428, 429, 565,
	431, 430, 432, 1238, 433, 0, 0, 0, 0, 0,
	434, 0, 436, 437, 438, 435, 439, 440, 441, 442,
	1239, 443, 444, 445, 1065, 446, 447, 448, 449, 566,
	450, 0, 451, 452, 458, 459, 453, 454, 460, 461,
	462, 463, 464, 1240, 466, 467, 465, 468, 469, 470,
	1241, 471, 455, 456, 472, 473, 1066, 474, 475, 476,
	477, 478, 479, 567, 0, 480, 1242, 481, 482, 483,
	484, 457, 485, 490, 568, 486, 487, 488, 489, 569,
	1243, 492, 493, 0, 491, 1244, 494, 495, 496, 497,
	498, 499, 318, 500, 1245, 501, 570, 571, 572, 573,
	1246, 508, 1247, 502, 503, 574, 504, 575, 1248, 505,
	506, 507, 0, 509, 510, 1249, 1250, 511, 512, 513,
	515, 516, 514, 517, 1251, 518, 1252, 0, 519, 520,
	521, 576, 577, 578, 1253, 523, 522, 579, 1254, 1255,
	1256, 1257, 524, 525, 580, 526, 527, 528, 1173, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3073, 247, 248, 249, 250, 251,
	252, 1179, 253, 254, 1180, 1181, 1182, 0, 1183, 529,
	1184, 1185, 1186, 1187, 255, 256, 258, 257, 259, 260,
	261, 530, 531, 0, 262, 532, 263, 533, 1188, 534,
	264, 265, 266, 267, 268, 1189, 1190, 0, 269, 535,
	536, 537, 1191, 270, 271, 538, 1192, 1259, 1193, 272,
	273, 274, 275, 276, 277, 278, 0, 1194, 280, 281,
	282, 279, 1195, 283, 0, 284, 285, 286, 1196, 287,
	1051, 288, 289, 1197, 1198, 1200, 1199, 1201, 1202, 1203,
	290, 291, 292, 293, 0, 294, 539, 540, 1204, 298,
	295, 296, 1205, 299, 297, 1206, 300, 301, 302, 1207,
	1208, 303, 304, 305, 1209, 306, 307, 1210, 308, 309,
	310, 1211, 311, 312, 541, 313, 314, 315, 317, 319,
	316, 320, 321, 322, 323, 542, 543, 1212, 244, 1213,
	0, 0, 0, 0, 324, 325, 326, 544, 0, 0,
	0, 327, 1214, 328, 1215, 1216, 1052, 329, 330, 545,
	546, 331, 332, 1217, 333, 547, 1218, 548, 334, 1219,
	335, 336, 337, 338, 339, 549, 550, 551, 396, 1054,
	340, 341, 1220, 342, 343, 344, 345, 0, 0, 0,
	245, 346, 347, 349, 1221, 1053, 348, 552, 553, 1222,
	554, 1223, 350, 351, 1055, 555, 1056, 352, 353, 354,
	1057, 355, 0, 0, 0, 356, 357, 358, 359, 360,
	361, 1224, 362, 364, 363, 1225, 365, 556, 1058, 366,
	367, 1059, 1226, 368, 369, 370, 1227, 1228, 371, 372,
	373, 374, 0, 375, 376, 378, 380, 377, 379, 384,
	381, 382, 383, 386, 0, 385, 1060, 387, 388, 389,
	392, 393, 391, 1061, 390, 1229, 246, 1062, 394, 1230,
	557, 395, 558, 397, 398, 1231, 0, 399, 0, 1232,
	1233, 401, 402, 403, 1234, 1235, 404, 405, 559, 1063,
	406, 1064, 560, 407, 408, 400, 409, 410, 411, 412,
	413, 414, 415, 416, 1236, 417, 418, 561, 562, 563,
	419, 564, 420, 421, 1237, 422, 0, 423, 424, 425,
	426, 427, 428, 429, 565, 431, 430, 432, 1238, 433,
	0, 0, 0, 0, 0, 434, 0, 436, 437, 438,
	435, 439, 440, 441, 442, 1239, 443, 444, 445, 1065,
	446, 447, 448, 449, 566, 450, 0, 451, 452, 458,
	459, 453, 454, 460, 461, 462, 463, 464, 1240, 466,
	467, 465, 468, 469, 470, 1241, 471, 455, 456, 472,
	473, 1066, 474, 475, 476, 477, 478, 479, 567, 0,
	480, 1242, 481, 482, 483, 484, 457, 485, 490, 568,
	486, 487, 488, 489, 569, 1243, 492, 493, 0, 491,
	1244, 494, 495, 496, 497, 498, 499, 318, 500, 1245,
	501, 570, 571, 572, 573, 1246, 508, 1247, 502, 503,
	574, 504, 575, 1248, 505, 506, 507, 0, 509, 510,
	1249, 1250, 511, 512, 513, 515, 516, 514, 517, 1251,
	518, 1252, 0, 519, 520, 521, 576, 577, 578, 1253,
	523, 522, 579, 1254, 1255, 1256, 1257, 524, 525, 580,
	526, 527, 528, 1173, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2285,
	247, 248, 249, 250, 251, 252, 1179, 253, 254, 1180,
	1181, 1182, 0, 1183, 529, 1184, 1185, 1186, 1187, 255,
	256, 258, 257, 259, 260, 261, 530, 531, 0, 262,
	532, 263, 533, 1188, 534, 264, 265, 266, 267, 268,
	1189, 1190, 0, 269, 535, 536, 537, 1191, 270, 271,
	538, 1192, 1259, 1193, 272, 273, 274, 275, 276, 277,
	278, 0, 1194, 280, 281, 282, 279, 1195, 283, 0,
	284, 285, 286, 1196, 287, 1051, 288, 289, 1197, 1198,
	1200, 1199, 1201, 1202, 1203, 290, 291, 292, 293, 0,
	294, 539, 540, 1204, 298, 295, 296, 1205, 299, 297,
	1206, 300, 301, 302, 1207, 1208, 303, 304, 305, 1209,
	306, 307, 1210, 308, 309, 310, 1211, 311, 312, 541,
	313, 314, 315, 317, 319, 316, 320, 321, 322, 323,
	542, 543, 1212, 244, 1213, 0, 0, 0, 0, 324,
	325, 326, 544, 0, 0, 0, 327, 1214, 328, 1215,
	1216, 1052, 329, 330, 545, 546, 331, 332, 1217, 333,
	547, 1218, 548, 334, 1219, 335, 336, 337, 338, 339,
	549, 550, 551, 396, 1054, 340, 341, 1220, 342, 343,
	344, 345, 0, 0, 0, 245, 346, 347, 349, 1221,
	1053, 348, 552, 553, 1222, 554, 1223, 350, 351, 1055,
	555, 1056, 352, 353, 354, 1057, 355, 0, 0, 0,
	356, 357, 358, 359, 360, 361, 1224, 362, 364, 363,
	1225, 365, 556, 1058, 366, 367, 1059, 1226, 368, 369,
	370, 1227, 1228, 371, 372, 373, 374, 0, 375, 376,
	378, 380, 377, 379, 384, 381, 382, 383, 386, 0,
	385, 1060, 387, 388, 389, 392, 393, 391, 1061, 390,
	1229, 246, 1062, 394, 1230, 557, 395, 558, 397, 398,
	1231, 0, 399, 0, 1232, 1233, 401, 402, 403, 1234,
	1235, 404, 405, 559, 1063, 406, 1064, 560, 407, 408,
	400, 409, 410, 411, 412, 413, 414, 415, 416, 1236,
	417, 418, 561, 562, 563, 419, 564, 420, 421, 1237,
	422, 0, 423, 424, 425, 426, 427, 428, 429, 565,
	431, 430, 432, 1238, 433, 0, 0, 0, 0, 0,
	434, 0, 436, 437, 438, 435, 439, 440, 441, 442,
	1239, 443, 444, 445, 1065, 446, 447, 448, 449, 566,
	450, 0, 451, 452, 458, 459, 453, 454, 460, 461,
	462, 463, 464, 1240, 466, 467, 465, 468, 469, 470,
	1241, 471, 455, 456, 472, 473, 1066, 474, 475, 476,
	477, 478, 479, 567, 0, 480, 1242, 481, 482, 483,
	484, 457, 485, 490, 568, 486, 487, 488, 489, 569,
	1243, 492, 493, 0, 491, 1244, 494, 495, 496, 497,
	498, 499, 318, 500, 1245, 501, 570, 571, 572, 573,
	1246, 508, 1247, 502, 503, 574, 504, 575, 1248, 505,
	506, 507, 0, 509, 510, 1249, 1250, 511, 512, 513,
	515, 516, 514, 517, 1251, 518, 1252, 0, 519, 520,
	521, 576, 577, 578, 1253, 523, 522, 579, 1254, 1255,
	1256, 1257, 524, 525, 580, 526, 527, 528, 1271, 0,
	1173, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1964, 0, 0, 247, 248, 249,
	250, 251, 252, 1179, 253, 254, 1180, 1181, 1182, 0,
	1183, 529, 1184, 1185, 1186, 1187, 255, 256, 258, 257,
	259, 260, 261, 530, 531, 0, 262, 532, 263, 533,
	1188, 534, 264, 265, 266, 267, 268, 1189, 1190, 0,
	269, 535, 536, 537, 1191, 270, 271, 538, 1192, 1259,
	1193, 272, 273, 274, 275, 276, 277, 278, 0, 1194,
	280, 281, 282, 279, 1195, 283, 0, 284, 285, 286,
	1196, 287, 1051, 288, 289, 1197, 1198, 1200, 1199, 1201,
	1202, 1203, 290, 291, 292, 293, 0, 294, 539, 540,
	1204, 298, 295, 296, 1205, 299, 297, 1206, 300, 301,
	302, 1207, 1208, 303, 304, 305, 1209, 306, 307, 1210,
	308, 309, 310, 1211, 311, 312, 541, 313, 314, 315,
	317, 319, 316, 320, 321, 322, 323, 542, 543, 1212,
	244, 1213, 0, 0, 0, 0, 324, 325, 326, 544,
	0, 0, 0, 327, 1214, 328, 1215, 1216, 1052, 329,
	330, 545, 546, 331, 332, 1217, 333, 547, 1218, 548,
	334, 1219, 335, 336, 337, 338, 339, 549, 550, 551,
	396, 1054, 340, 341, 1220, 342, 343, 344, 345, 0,
	0, 0, 245, 346, 347, 349, 1221, 1053, 348, 552,
	553, 1222, 554, 1223, 350, 351, 1055, 555, 1056, 352,
	353, 354, 1057, 355, 0, 0, 0, 356, 357, 358,
	359, 360, 361, 1224, 362, 364, 363, 1225, 365, 556,
	1058, 366, 367, 1059, 1226, 368, 369, 370, 1227, 1228,
	371, 372, 373, 374, 0, 375, 376, 378, 380, 377,
	379, 384, 381, 382, 383, 386, 0, 385, 1060, 387,
	388, 389, 392, 393, 391, 1061, 390, 1229, 246, 1062,
	394, 1230, 557, 395, 558, 397, 398, 1231, 0, 399,
	0, 1232, 1233, 401, 402, 403, 1234, 1235, 404, 405,
	559, 1063, 406, 1064, 560, 407, 408, 400, 409, 410,
	411, 412, 413, 414, 415, 416, 1236, 417, 418, 561,
	562, 563, 419, 564, 420, 421, 1237, 422, 0, 423,
	424, 425, 426, 427, 428, 429, 565, 431, 430, 432,
	1238, 433, 0, 0, 0, 0, 0, 434, 0, 436,
	437, 438, 435, 439, 440, 441, 442, 1239, 443, 444,
	445, 1065, 446, 447, 448, 449, 566, 450, 0, 451,
	452, 458, 459, 453, 454, 460, 461, 462, 463, 464,
	1240, 466, 467, 465, 468, 469, 470, 1241, 471, 455,
	456, 472, 473, 1066, 474, 475, 476, 477, 478, 479,
	567, 0, 480, 1242, 481, 482, 483, 484, 457, 485,
	490, 568, 486, 487, 488, 489, 569, 1243, 492, 493,
	0, 491, 1244, 494, 495, 496, 497, 498, 499, 318,
	500, 1245, 501, 570, 571, 572, 573, 1246, 508, 1247,
	502, 503, 574, 504, 575, 1248, 505, 506, 507, 0,
	509, 510, 1249, 1250, 511, 512, 513, 515, 516, 514,
	517, 1251, 518, 1252, 0, 519, 520, 521, 576, 577,
	578, 1253, 523, 522, 579, 1254, 1255, 1256, 1257, 524,
	525, 580, 526, 527, 528, 1170, 0, 1173, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 247, 248, 249, 250, 251, 252,
	1179, 253, 254, 1180, 1181, 1182, 0, 1183, 529, 1184,
	1185, 1186, 1187, 255, 256, 258, 257, 259, 260, 261,
	530, 531, 0, 262, 532, 263, 533, 1188, 534, 264,
	265, 266, 267, 268, 1189, 1190, 0, 269, 535, 536,
	537, 1191, 270, 271, 538, 1192, 1259, 1193, 272, 273,
	274, 275, 276, 277, 278, 0, 1194, 280, 281, 282,
	279, 1195, 283, 0, 284, 285, 286, 1196, 287, 1051,
	288, 289, 1197, 1198, 1200, 1199, 1201, 1202, 1203, 290,
	291, 292, 293, 0, 294, 539, 540, 1204, 298, 295,
	296, 1205, 299, 297, 1206, 300, 301, 302, 1207, 1208,
	303, 304, 305, 1209, 306, 307, 1210, 308, 309, 310,
	1211, 311, 312, 541, 313, 314, 315, 317, 319, 316,
	320, 321, 322, 323, 542, 543, 1212, 244, 1213, 0,
	0, 0, 0, 324, 325, 326, 544, 0, 0, 0,
	327, 1214, 328, 1215, 1216, 1052, 329, 330, 545, 546,
	331, 332, 1217, 333, 547, 1218, 548, 334, 1219, 335,
	336, 337, 338, 339, 549, 550, 551, 396, 1054, 340,
	341, 1220, 342, 343, 344, 345, 0, 0, 0, 245,
	346, 347, 349, 1221, 1053, 348, 552, 553, 1222, 554,
	1223, 350, 351, 1055, 555, 1056, 352, 353, 354, 1057,
	355, 0, 0, 0, 356, 357, 358, 359, 360, 361,
	1224, 362, 364, 363, 1225, 365, 556, 1058, 366, 367,
	1059, 1226, 368, 369, 370, 1227, 1228, 371, 372, 373,
	374, 0, 375, 376, 378, 380, 377, 379, 384, 381,
	382, 383, 386, 0, 385, 1060, 387, 388, 389, 392,
	393, 391, 1061, 390, 1229, 246, 1062, 394, 1230, 557,
	395, 558, 397, 398, 1231, 0, 399, 0, 1232, 1233,
	401, 402, 403, 1234, 1235, 404, 405, 559, 1063, 406,
	1064, 560, 407, 408, 400, 409, 410, 411, 412, 413,
	414, 415, 416, 1236, 417, 418, 561, 562, 563, 419,
	564, 420, 421, 1237, 422, 0, 423, 424, 425, 426,
	427, 428, 429, 565, 431, 430, 432, 1238, 433, 0,
	0, 0, 0, 0, 434, 0, 436, 437, 438, 435,
	439, 440, 441, 442, 1239, 443, 444, 445, 1065, 446,
	447, 448, 449, 566, 450, 0, 451, 452, 458, 459,
	453, 454, 460, 461, 462, 463, 464, 1240, 466, 467,
	465, 468, 469, 470, 1241, 471, 455, 456, 472, 473,
	1066, 474, 475, 476, 477, 478, 479, 567, 0, 480,
	1242, 481, 482, 483, 484, 457, 485, 490, 568, 486,
	487, 488, 489, 569, 1243, 492, 493, 0, 491, 1244,
	494, 495, 496, 497, 498, 499, 318, 500, 1245, 501,
	570, 571, 572, 573, 1246, 508, 1247, 502, 503, 574,
	504, 575, 1248, 505, 506, 507, 0, 509, 510, 1249,
	1250, 511, 512, 513, 515, 516, 514, 517, 1251, 518,
	1252, 0, 519, 520, 521, 576, 577, 578, 1253, 523,
	522, 579, 1254, 1255, 1256, 1257, 524, 525, 580, 526,
	527, 528, 1173, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 247,
	248, 249, 250, 251, 252, 1179, 253, 254, 1180, 1181,
	1182, 0, 1183, 529, 1184, 1185, 1186, 1187, 255, 256,
	258, 257, 259, 260, 261, 530, 531, 0, 262, 532,
	263, 533, 1188, 534, 264, 265, 266, 267, 268, 1189,
	1190, 0, 269, 535, 536, 537, 1191, 270, 271, 538,
	1192, 1259, 1193, 272, 273, 274, 275, 276, 277, 278,
	0, 1194, 280, 281, 282, 279, 1195, 283, 0, 284,
	285, 286, 1196, 287, 1051, 288, 289, 1197, 1198, 1200,
	1199, 1201, 1202, 1203, 290, 291, 292, 293, 0, 294,
	539, 540, 1204, 298, 295, 296, 1205, 299, 297, 1206,
	300, 301, 302, 1207, 1208, 303, 304, 305, 1209, 306,
	307, 1210, 308, 309, 310, 1211, 311, 312, 541, 313,
	314, 315, 317, 319, 316, 320, 321, 322, 323, 542,
	543, 1212, 244, 1213, 0, 0, 0, 0, 324, 325,
	326, 544, 0, 0, 0, 327, 1214, 328, 1215, 1216,
	1052, 329, 330, 545, 546, 331, 332, 1217, 333, 547,
	1218, 548, 334, 1219, 335, 336, 337, 338, 339, 549,
	550, 551, 396, 1054, 340, 341, 1220, 342, 343, 344,
	345, 0, 0, 0, 245, 346, 347, 349, 1221, 1053,
	348, 552, 553, 1222, 554, 1223, 350, 351, 1055, 555,
	1056, 352, 353, 354, 1057, 355, 0, 0, 0, 356,
	357, 358, 359, 360, 361, 1224, 362, 364, 363, 1225,
	365, 556, 1058, 366, 367, 1059, 1226, 368, 369, 370,
	1227, 1228, 371, 372, 373, 374, 0, 375, 376, 378,
	380, 377, 379, 384, 381, 382, 383, 386, 0, 385,
	1060, 387, 388, 389, 392, 393, 391, 1061, 390, 1229,
	246, 1062, 394, 1230, 557, 395, 558, 397, 398, 1231,
	0, 399, 0, 1232, 1233, 401, 402, 403, 1234, 1235,
	404, 405, 559, 1063, 406, 1064, 560, 407, 408, 400,
	409, 410, 411, 412, 413, 414, 415, 416, 1236, 417,
	418, 561, 562, 563, 419, 564, 420, 421, 1237, 422,
	0, 423, 424, 425, 426, 427, 428, 429, 565, 431,
	430, 432, 1238, 433, 0, 0, 0, 0, 0, 434,
	0, 436, 437, 438, 435, 439, 440, 441, 442, 1239,
	443, 444, 445, 1065, 446, 447, 448, 449, 566, 450,
	0, 451, 452, 458, 459, 453, 454, 460, 461, 462,
	463, 464, 1240, 466, 467, 465, 468, 469, 470, 1241,
	471, 455, 456, 472, 473, 1066, 474, 475, 476, 477,
	478, 479, 567, 0, 480, 1242, 481, 482, 483, 484,
	457, 485, 490, 568, 486, 487, 488, 489, 569, 1243,
	492, 493, 0, 491, 1244, 494, 495, 496, 497, 498,
	499, 318, 500, 1245, 501, 570, 571, 572, 573, 1246,
	508, 1247, 502, 503, 574, 504, 575, 1248, 505, 506,
	507, 0, 509, 510, 1249, 1250, 511, 512, 513, 515,
	516, 514, 517, 1251, 518, 1252, 0, 519, 520, 521,
	576, 577, 578, 1253, 523, 522, 579, 1254, 1255, 1256,
	1257, 524, 525, 580, 526, 527, 528, 2260, 0, 987,
	959, 960, 961, 957, 958, 970, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 247, 248, 249, 250,
	251, 252, 2257, 253, 254, 0, 0, 0, 0, 0,
	1011, 975, 0, 0, 0, 255, 256, 258, 257, 259,
	260, 261, 530, 1024, 0, 262, 1031, 263, 1030, 0,
	1041, 264, 265, 266, 267, 268, 977, 1010, 944, 269,
	1070, 1071, 537, 0, 270, 271, 1017, 0, 998, 0,
	272, 273, 274, 275, 276, 277, 278, 0, 0, 280,
	281, 282, 279, 0, 283, 0, 284, 285, 286, 0,
	287, 1051, 288, 289, 1001, 999, 1000, 1007, 1003, 1002,
	1006, 290, 291, 292, 293, 1034, 294, 1028, 1027, 948,
	298, 295, 296, 0, 299, 297, 0, 300, 301, 302,
	2258, 0, 303, 1019, 305, 0, 306, 307, 0, 308,
	309, 310, 0, 311, 312, 954, 313, 314, 315, 317,
	319, 316, 320, 321, 322, 323, 1042, 1043, 966, 244,
	0, 0, 0, 0, 0, 324, 325, 326, 1026, 0,
	0, 0, 327, 0, 328, 0, 0, 1052, 329, 330,
	1039, 1040, 331, 332, 0, 333, 1049, 0, 976, 334,
	0, 335, 336, 337, 338, 339, 1012, 1013, 1016, 396,
	1054, 340, 341, 0, 342, 343, 344, 345, 0, 0,
	0, 245, 346, 347, 349, 0, 1053, 348, 1021, 1022,
	0, 982, 0, 350, 351, 1055, 1014, 1056, 352, 353,
	354, 1057, 355, 0, 0, 0, 356, 357, 358, 359,
	360, 361, 0, 362, 364, 363, 0, 365, 1050, 1058,
	366, 367, 1059, 0, 368, 369, 370, 1005, 1004, 371,
	372, 373, 374, 0, 375, 376, 378, 380, 377, 379,
	384, 381, 382, 383, 386, 0, 385, 1060, 387, 388,
	389, 392, 393, 391, 1061, 390, 945, 246, 1062, 394,
	967, 1015, 395, 1029, 397, 398, 0, 0, 399, 0,
	0, 0, 401, 402, 403, 0, 0, 404, 405, 559,
	1063, 406, 1064, 1044, 407, 408, 400, 409, 410, 411,
	412, 413, 414, 415, 416, 0, 417, 418, 561, 562,
	1045, 419, 564, 420, 421, 0, 422, 0, 423, 424,
	425, 426, 427, 428, 429, 1025, 431, 430, 432, 0,
	433, 0, 0, 0, 0, 0, 434, 0, 436, 437,
	438, 435, 439, 440, 441, 442, 0, 443, 444, 445,
	1065, 446, 447, 448, 449, 955, 450, 0, 451, 452,
	458, 459, 453, 454, 460, 461, 462, 463, 464, 0,
	466, 467, 465, 468, 469, 470, 1008, 471, 455, 456,
	472, 473, 1066, 474, 475, 476, 477, 478, 479, 1023,
	0, 480, 0, 481, 482, 483, 484, 457, 485, 490,
	1069, 486, 487, 488, 489, 1046, 0, 492, 493, 943,
	491, 0, 494, 495, 496, 497, 498, 499, 318, 500,
	0, 501, 1035, 1036, 1037, 1038, 0, 508, 0, 502,
	503, 1047, 504, 1048, 965, 505, 506, 507, 0, 509,
	510, 0, 949, 511, 512, 513, 515, 516, 514, 517,
	1009, 518, 0, 0, 519, 520, 521, 576, 1032, 1068,
	2256, 523, 522, 579, 0, 0, 0, 0, 524, 525,
	580, 526, 527, 528, 946, 0, 0, 0, 0, 0,
	0, 942, 0, 0, 0, 0, 0, 0, 940, 941,
	2259, 0, 0, 0, 0, 0, 0, 971, 2255, 0,
	933, 969, 987, 959, 960, 961, 957, 958, 970, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 247,
	248, 249, 250, 251, 252, 0, 253, 254, 0, 0,
	0, 0, 0, 1011, 975, 0, 0, 0, 255, 256,
	258, 257, 259, 260, 261, 530, 1024, 0, 262, 1031,
	263, 1030, 0, 1041, 264, 265, 266, 267, 268, 977,
	1010, 944, 269, 1070, 1071, 537, 0, 270, 271, 1017,
	0, 998, 0, 272, 273, 274, 275, 276, 277, 278,
	0, 0, 280, 281, 282, 279, 0, 283, 0, 284,
	285, 286, 0, 287, 1051, 288, 289, 1001, 999, 1000,
	1007, 1003, 1002, 1006, 290, 291, 292, 293, 1034, 294,
	1028, 1027, 948, 298, 295, 296, 0, 299, 297, 0,
	300, 301, 302, 0, 0, 303, 1019, 305, 0, 306,
	307, 0, 308, 309, 310, 0, 311, 312, 954, 313,
	314, 315, 317, 319, 316, 320, 321, 322, 323, 1042,
	1043, 966, 244, 0, 0, 0, 0, 0, 324, 325,
	326, 1026, 0, 0, 0, 327, 0, 328, 0, 0,
	1052, 329, 330, 1039, 1040, 331, 332, 0, 333, 1049,
	0, 976, 334, 0, 335, 336, 337, 338, 339, 1012,
	1013, 1016, 396, 1054, 340, 341, 0, 342, 343, 344,
	345, 0, 0, 0, 245, 346, 347, 349, 0, 1053,
	348, 1021, 1022, 0, 982, 0, 350, 351, 1055, 1014,
	1056, 352, 353, 354, 1057, 355, 0, 0, 0, 356,
	357, 358, 359, 360, 361, 0, 362, 364, 363, 0,
	365, 1050, 1058, 366, 367, 1059, 0, 368, 369, 370,
	1005, 1004, 371, 372, 373, 374, 0, 375, 376, 378,
	380, 377, 379, 384, 381, 382, 383, 386, 0, 385,
	1060, 387, 388, 389, 392, 393, 391, 1061, 390, 945,
	246, 1062, 394, 967, 1015, 395, 1029, 397, 398, 0,
	0, 399, 0, 0, 0, 401, 402, 403, 0, 0,
	404, 405, 559, 1063, 406, 1064, 1044, 407, 408, 400,
	409, 410, 411, 412, 413, 414, 415, 416, 0, 417,
	418, 561, 562, 1045, 419, 564, 420, 421, 0, 422,
	0, 423, 424, 425, 426, 427, 428, 429, 1025, 431,
	430, 432, 0, 433, 0, 0, 0, 0, 0, 434,
	0, 436, 437, 438, 435, 439, 440, 441, 442, 0,
	443, 444, 445, 1065, 446, 447, 448, 449, 955, 450,
	0, 451, 452, 458, 459, 453, 454, 460, 461, 462,
	463, 464, 208, 466, 467, 465, 468, 469, 470, 1008,
	471, 455, 456, 472, 473, 1066, 474, 475, 476, 477,
	478, 479, 1023, 0, 480, 0, 481, 482, 483, 484,
	457, 485, 490, 1069, 486, 487, 488, 489, 1046, 0,
	492, 493, 943, 491, 210, 494, 495, 496, 497, 498,
	499, 318, 500, 0, 501, 1035, 1036, 1037, 1038, 0,
	508, 0, 502, 503, 1047, 504, 1048, 965, 505, 506,
	507, 0, 509, 510, 0, 949, 511, 512, 513, 515,
	516, 514, 517, 1009, 518, 0, 0, 519, 520, 521,
	1444, 1032, 1068, 0, 523, 522, 579, 0, 0, 0,
	202, 524, 525, 580, 526, 527, 528, 946, 203, 0,
	0, 0, 0, 0, 942, 0, 0, 0, 0, 0,
	0, 940, 941, 987, 959, 960, 961, 957, 958, 970,
	1678, 1676, 0, 0, 969, 0, 0, 0, 0, 0,
	247, 248, 249, 250, 251, 252, 0, 253, 254, 0,
	0, 0, 0, 0, 1011, 975, 0, 0, 0, 255,
	256, 258, 257, 259, 260, 261, 530, 1024, 0, 262,
	1031, 263, 1030, 0, 1041, 264, 265, 266, 267, 268,
	977, 1010, 944, 269, 1070, 1071, 537, 0, 270, 271,
	1017, 0, 998, 0, 272, 273, 274, 275, 276, 277,
	278, 0, 0, 280, 281, 282, 279, 0, 283, 0,
	284, 285, 286, 0, 287, 1051, 288, 289, 1001, 999,
	1000, 1007, 1003, 1002, 1006, 290, 291, 292, 293, 1034,
	294, 1028, 1027, 948, 298, 295, 296, 0, 299, 297,
	0, 300, 301, 302, 0, 0, 303, 1019, 305, 0,
	306, 307, 0, 308, 309, 310, 0, 311, 312, 954,
	313, 314, 315, 317, 319, 316, 320, 321, 322, 323,
	1042, 1043, 966, 244, 0, 0, 0, 0, 0, 324,
	325, 326, 1026, 0, 0, 0, 327, 0, 328, 0,
	0, 1052, 329, 330, 1039, 1040, 331, 332, 0, 333,
	1049, 0, 976, 334, 0, 335, 336, 337, 338, 339,
	1012, 1013, 1016, 396, 1054, 340, 341, 0, 342, 343,
	344, 345, 0, 0, 0, 245, 346, 347, 349, 0,
	1053, 348, 1021, 1022, 0, 982, 0, 350, 351, 1055,
	1014, 1056, 352, 353, 354, 1057, 355, 0, 0, 0,
	356, 357, 358, 359, 360, 361, 0, 362, 364, 363,
	0, 365, 1050, 1058, 366, 367, 1059, 0, 368, 369,
	370, 1005, 1004, 371, 372, 373, 374, 0, 375, 376,
	378, 380, 377, 379, 384, 381, 382, 383, 386, 0,
	385, 1060, 387, 388, 389, 392, 393, 391, 1061, 390,
	945, 246, 1062, 394, 967, 1015, 395, 1029, 397, 398,
	0, 0, 399, 0, 0, 0, 401, 402, 403, 0,
	0, 404, 405, 559, 1063, 406, 1064, 1044, 407, 408,
	400, 409, 410, 411, 412, 413, 414, 415, 416, 0,
	417, 418, 561, 562, 1045, 419, 564, 420, 421, 0,
	422, 0, 423, 424, 425, 426, 427, 428, 429, 1025,
	431, 430, 432, 0, 433, 0, 0, 0, 0, 0,
	434, 0, 436, 437, 438, 435, 439, 440, 441, 442,
	0, 443, 444, 445, 1065, 446, 447, 448, 449, 955,
	450, 0, 451, 452, 458, 459, 453, 454, 460, 461,
	462, 463, 464, 208, 466, 467, 465, 468, 469, 470,
	1008, 471, 455, 456, 472, 473, 1066, 474, 475, 476,
	477, 478, 479, 1023, 0, 480, 0, 481, 482, 483,
	484, 457, 485, 490, 1069, 486, 487, 488, 489, 1046,
	0, 492, 493, 943, 491, 210, 494, 495, 496, 497,
	498, 499, 318, 500, 0, 501, 1035, 1036, 1037, 1038,
	0, 508, 0, 502, 503, 1047, 504, 1048, 965, 505,
	506, 507, 0, 509, 510, 0, 949, 511, 512, 513,
	515, 516, 514, 517, 1009, 518, 0, 0, 519, 520,
	521, 1444, 1032, 1068, 0, 523, 522, 579, 0, 0,
	0, 202, 524, 525, 580, 526, 527, 528, 946, 203,
	0, 0, 0, 0, 0, 942, 0, 0, 0, 0,
	0, 0, 940, 941, 987, 959, 960, 961, 957, 958,
	970, 1678, 2780, 0, 0, 969, 0, 0, 0, 0,
	0, 247, 248, 249, 250, 251, 252, 0, 253, 254,
	0, 0, 0, 0, 0, 1011, 975, 0, 0, 0,
	255, 256, 258, 257, 259, 260, 261, 530, 1024, 0,
	262, 1031, 263, 1030, 0, 1041, 264, 265, 266, 267,
	268, 977, 1010, 944, 269, 1070, 1071, 537, 0, 270,
	271, 1017, 0, 998, 0, 272, 273, 274, 275, 276,
	277, 278, 0, 0, 280, 281, 282, 279, 0, 283,
	0, 284, 285, 286, 0, 287, 1051, 288, 289, 1001,
	999, 1000, 1007, 1003, 1002, 1006, 290, 291, 292, 293,
	1034, 294, 1028, 1027, 948, 298, 295, 296, 0, 299,
	297, 0, 300, 301, 302, 0, 0, 303, 1019, 305,
	0, 306, 307, 0, 308, 309, 310, 0, 311, 312,
	954, 313, 314, 315, 317, 319, 316, 320, 321, 322,
	323, 1042, 1043, 966, 244, 0, 0, 0, 0, 0,
	324, 325, 326, 1026, 0, 0, 0, 327, 0, 328,
	0, 0, 1052, 329, 330, 1039, 1040, 331, 332, 0,
	333, 1049, 0, 976, 334, 0, 335, 336, 337, 338,
	339, 1012, 1013, 1016, 396, 1054, 340, 341, 0, 342,
	343, 344, 345, 0, 0, 0, 245, 346, 347, 349,
	0, 1053, 348, 1021, 1022, 0, 982, 0, 350, 351,
	1055, 1014, 1056, 352, 353, 354, 1057, 355, 0, 0,
	0, 356, 357, 358, 359, 360, 361, 0, 362, 364,
	363, 0, 365, 1050, 1058, 366, 367, 1059, 0, 368,
	369, 370, 1005, 1004, 371, 372, 373, 374, 0, 375,
	376, 378, 380, 377, 379, 384, 381, 382, 383, 386,
	0, 385, 1060, 387, 388, 389, 392, 393, 391, 1061,
	390, 945, 246, 1062, 394, 967, 1015, 395, 1029, 397,
	398, 0, 0, 399, 0, 0, 0, 401, 402, 403,
	0, 0, 404, 405, 559, 1063, 406, 1064, 1044, 407,
	408, 400, 409, 410, 411, 412, 413, 414, 415, 416,
	0, 417, 418, 561, 562, 1045, 419, 564, 420, 421,
	0, 422, 0, 423, 424, 425, 426, 427, 428, 429,
	1025, 431, 430, 432, 0, 433, 0, 0, 0, 0,
	0, 434, 0, 436, 437, 438, 435, 439, 440, 441,
	442, 0, 443, 444, 445, 1065, 446, 447, 448, 449,
	955, 450, 0, 451, 452, 458, 459, 453, 454, 460,
	461, 462, 463, 464, 208, 466, 467, 465, 468, 469,
	470, 1008, 471, 455, 456, 472, 473, 1066, 474, 475,
	476, 477, 478, 479, 1023, 0, 480, 0, 481, 482,
	483, 484, 457, 485, 490, 1069, 486, 487, 488, 489,
	1046, 0, 492, 493, 943, 491, 210, 494, 495, 496,
	497, 498, 499, 318, 500, 0, 501, 1035, 1036, 1037,
	1038, 0, 508, 0, 502, 503, 1047, 504, 1048, 965,
	505, 506, 507, 0, 509, 510, 0, 949, 511, 512,
	513, 515, 516, 514, 517, 1009, 518, 0, 0, 519,
	520, 521, 1444, 1032, 1068, 0, 523, 522, 579, 0,
	0, 0, 202, 524, 525, 580, 526, 527, 528, 946,
	203, 0, 0, 0, 0, 0, 942, 0, 0, 0,
	0, 0, 0, 940, 941, 987, 959, 960, 961, 957,
	958, 970, 1678, 1676, 0, 0, 969, 0, 0, 0,
	0, 0, 247, 248, 249, 250, 251, 252, 0, 253,
	254, 0, 0, 0, 0, 0, 1011, 975, 0, 0,
	0, 255, 256, 258, 257, 259, 260, 261, 530, 1024,
	0, 262, 1031, 263, 1030, 2364, 1041, 264, 265, 266,
	267, 268, 977, 1010, 944, 269, 1070, 1071, 537, 0,
	270, 271, 1017, 0, 998, 0, 272, 273, 274, 275,
	276, 277, 278, 0, 0, 280, 281, 282, 279, 0,
	283, 0, 284, 285, 286, 0, 287, 1051, 288, 289,
	1001, 999, 1000, 1007, 1003, 1002, 1006, 290, 291, 292,
	293, 1034, 294, 1028, 1027, 948, 298, 295, 296, 0,
	299, 297, 0, 300, 301, 302, 0, 0, 303, 1019,
	305, 0, 306, 307, 0, 308, 309, 310, 0, 311,
	312, 954, 313, 314, 315, 317, 319, 316, 320, 321,
	322, 323, 1042, 1043, 966, 244, 0, 0, 0, 0,
	0, 324, 325, 326, 1026, 0, 0, 0, 327, 0,
	328, 0, 2369, 1052, 329, 330, 1039, 1040, 331, 332,
	0, 333, 1049, 0, 976, 334, 0, 335, 336, 337,
	338, 339, 1012, 1013, 1016, 396, 1054, 340, 341, 0,
	342, 343, 344, 345, 0, 0, 0, 245, 346, 347,
	349, 0, 1053, 348, 1021, 1022, 0, 982, 0, 350,
	351, 1055, 1014, 1056, 352, 353, 354, 1057, 355, 0,
	0, 0, 356, 357, 358, 359, 360, 361, 0, 362,
	364, 363, 2365, 365, 1050, 1058, 366, 367, 1059, 0,
	368, 369, 370, 1005, 1004, 371, 372, 373, 374, 0,
	375, 376, 378, 380, 377, 379, 384, 381, 382, 383,
	386, 0, 385, 1060, 387, 388, 389, 392, 393, 391,
	1061, 390, 945, 246, 1062, 394, 967, 1015, 395, 1029,
	397, 398, 0, 0, 399, 0, 0, 0, 401, 402,
	403, 0, 0, 404, 405, 559, 1063, 406, 1064, 1044,
	407, 408, 400, 409, 410, 411, 412, 413, 414, 415,
	416, 0, 417, 418, 561, 562, 1045, 419, 564, 420,
	421, 0, 422, 0, 423, 424, 425, 426, 427, 428,
	429, 1025, 431, 430, 432, 0, 433, 0, 0, 0,
	0, 0, 434, 0, 436, 437, 438, 435, 439, 440,
	441, 442, 0, 443, 444, 445, 1065, 446, 447, 448,
	449, 955, 450, 0, 451, 452, 458, 459, 453, 454,
	460, 461, 462, 463, 464, 0, 466, 467, 465, 468,
	469, 470, 1008, 471, 455, 456, 472, 473, 1066, 474,
	475, 476, 477, 478, 479, 1023, 0, 480, 0, 481,
	482, 483, 484, 457, 485, 490, 1069, 486, 487, 488,
	489, 1046, 0, 492, 493, 943, 491, 0, 494, 495,
	496, 497, 498, 499, 318, 500, 0, 501, 1035, 1036,
	1037, 1038, 0, 508, 2366, 502, 503, 1047, 504, 1048,
	965, 505, 506, 507, 0, 509, 510, 0, 949, 511,
	512, 513, 515, 516, 514, 517, 1009, 518, 0, 0,
	519, 520, 521, 576, 1032, 1068, 0, 523, 522, 579,
	0, 0, 0, 0, 524, 525, 580, 526, 527, 528,
	946, 0, 0, 0, 0, 0, 0, 942, 0, 0,
	0, 0, 0, 0, 940, 941, 0, 0, 0, 0,
	0, 0, 0, 971, 0, 0, 2305, 969, 987, 959,
	960, 961, 957, 958, 970, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 247, 248, 249, 250, 251,
	252, 0, 253, 254, 0, 0, 0, 0, 0, 1011,
	975, 0, 0, 0, 255, 256, 258, 257, 259, 260,
	261, 530, 1024, 0, 262, 1031, 263, 1030, 0, 1041,
	264, 265, 266, 267, 268, 977, 1010, 944, 269, 1070,
	1071, 537, 0, 270, 271, 1017, 0, 998, 0, 272,
	273, 274, 275, 276, 277, 278, 0, 0, 280, 281,
	282, 279, 0, 283, 0, 284, 285, 286, 0, 287,
	1051, 288, 289, 1001, 999, 1000, 1007, 1003, 1002, 1006,
	290, 291, 292, 293, 1034, 294, 1028, 1027, 948, 298,
	295, 296, 0, 299, 297, 0, 300, 301, 302, 0,
	0, 303, 1019, 305, 0, 306, 307, 0, 308, 309,
	310, 0, 311, 312, 954, 313, 314, 315, 317, 319,
	316, 320, 321, 322, 323, 1042, 1043, 966, 244, 0,
	0, 0, 0, 0, 324, 325, 326, 1026, 0, 0,
	0, 327, 0, 328, 0, 0, 1052, 329, 330, 1039,
	1040, 331, 332, 0, 333, 1049, 0, 976, 334, 0,
	335, 336, 337, 338, 339, 1012, 1013, 1016, 396, 1054,
	340, 341, 0, 342, 343, 344, 345, 0, 0, 0,
	245, 346, 347, 349, 0, 1053, 348, 1021, 1022, 0,
	982, 0, 350, 351, 1055, 1014, 1056, 352, 353, 354,
	1057, 355, 0, 0, 0, 356, 357, 358, 359, 360,
	361, 0, 362, 364, 363, 0, 365, 1050, 1058, 366,
	367, 1059, 0, 368, 369, 370, 1005, 1004, 371, 372,
	373, 374, 0, 375, 376, 378, 380, 377, 379, 384,
	381, 382, 383, 386, 0, 385, 1060, 387, 388, 389,
	392, 393, 391, 1061, 390, 945, 246, 1062, 394, 967,
	1015, 395, 1029, 397, 398, 0, 0, 399, 0, 0,
	0, 401, 402, 403, 0, 0, 404, 405, 559, 1063,
	406, 1064, 1044, 407, 408, 400, 409, 410, 411, 412,
	413, 414, 415, 416, 0, 417, 418, 561, 562, 1045,
	419, 564, 420, 421, 0, 422, 0, 423, 424, 425,
	426, 427, 428, 429, 1025, 431, 430, 432, 0, 433,
	0, 0, 0, 0, 0, 434, 0, 436, 437, 438,
	435, 439, 440, 441, 442, 0, 443, 444, 445, 1065,
	446, 447, 448, 449, 955, 450, 0, 451, 452, 458,
	459, 453, 454, 460, 461, 462, 463, 464, 0, 466,
	467, 465, 468, 469, 470, 1008, 471, 455, 456, 472,
	473, 1066, 474, 475, 476, 477, 478, 479, 1023, 0,
	480, 0, 481, 482, 483, 484, 457, 485, 490, 1069,
	486, 487, 488, 489, 1046, 0, 492, 493, 943, 491,
	0, 494, 495, 496, 497, 498, 499, 318, 500, 0,
	501, 1035, 1036, 1037, 1038, 0, 508, 0, 502, 503,
	1047, 504, 1048, 965, 505, 506, 507, 0, 509, 510,
	0, 949, 511, 512, 513, 515, 516, 514, 517, 1009,
	518, 0, 0, 519, 520, 521, 576, 1032, 1068, 0,
	523, 522, 579, 0, 0, 0, 0, 524, 525, 580,
	526, 527, 528, 946, 0, 0, 0, 0, 0, 0,
	942, 0, 0, 0, 0, 0, 0, 940, 941, 0,
	0, 0, 0, 0, 0, 0, 971, 2303, 0, 2302,
	969, 987, 959, 960, 961, 957, 958, 970, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 247, 248,
	249, 250, 251, 252, 0, 253, 254, 0, 0, 0,
	0, 0, 1011, 975, 0, 0, 0, 255, 256, 258,
	257, 259, 260, 261, 530, 1024, 0, 262, 1031, 263,
	1030, 0, 1041, 264, 265, 266, 267, 268, 977, 1010,
	944, 269, 1070, 1071, 537, 0, 270, 271, 1017, 0,
	998, 0, 272, 273, 274, 275, 276, 277, 278, 0,
	0, 280, 281, 282, 279, 0, 283, 0, 284, 285,
	286, 0, 287, 1051, 288, 289, 1001, 999, 1000, 1007,
	1003, 1002, 1006, 290, 291, 292, 293, 1034, 294, 1028,
	1027, 948, 298, 295, 296, 0, 299, 297, 0, 300,
	301, 302, 0, 0, 303, 1019, 305, 0, 306, 307,
	0, 308, 309, 310, 0, 311, 312, 954, 313, 314,
	315, 317, 319, 316, 320, 321, 322, 323, 1042, 1043,
	966, 244, 0, 0, 0, 0, 0, 324, 325, 326,
	1026, 0, 0, 0, 327, 0, 328, 0, 0, 1052,
	329, 330, 1039, 1040, 331, 332, 0, 333, 1049, 0,
	976, 334, 0, 335, 336, 337, 338, 339, 1012, 1013,
	1016, 396, 1054, 340, 341, 0, 342, 343, 344, 345,
	0, 0, 0, 245, 346, 347, 349, 0, 1053, 348,
	1021, 1022, 0, 982, 0, 350, 351, 1055, 1014, 1056,
	352, 353, 354, 1057, 355, 0, 0, 0, 356, 357,
	358, 359, 360, 361, 0, 362, 364, 363, 0, 365,
	1050, 1058, 366, 367, 1059, 0, 368, 369, 370, 1005,
	1004, 371, 372, 373, 374, 0, 375, 376, 378, 380,
	377, 379, 384, 381, 382, 383, 386, 0, 385, 1060,
	387, 388, 389, 392, 393, 391, 1061, 390, 945, 246,
	1062, 394, 967, 1015, 395, 1029, 397, 398, 0, 0,
	399, 0, 0, 0, 401, 402, 403, 0, 0, 404,
	405, 559, 1063, 406, 1064, 1044, 407, 408, 400, 409,
	410, 411, 412, 413, 414, 415, 416, 0, 417, 418,
	561, 562, 1045, 419, 564, 420, 421, 0, 422, 0,
	423, 424, 425, 426, 427, 428, 429, 1025, 431, 430,
	432, 0, 433, 0, 0, 0, 0, 0, 434, 0,
	436, 437, 438, 435, 439, 440, 441, 442, 0, 443,
	444, 445, 1065, 446, 447, 448, 449, 955, 450, 0,
	451, 452, 458, 459, 453, 454, 460, 461, 462, 463,
	464, 0, 466, 467, 465, 468, 469, 470, 1008, 471,
	455, 456, 472, 473, 1066, 474, 475, 476, 477, 478,
	479, 1023, 0, 480, 0, 481, 482, 483, 484, 457,
	485, 490, 1069, 486, 487, 488, 489, 1046, 0, 492,
	493, 943, 491, 0, 494, 495, 496, 497, 498, 499,
	318, 500, 0, 501, 1035, 1036, 1037, 1038, 0, 508,
	0, 502, 503, 1047, 504, 1048, 965, 505, 506, 507,
	0, 509, 510, 0, 949, 511, 512, 513, 515, 516,
	514, 517, 1009, 518, 0, 0, 519, 520, 521, 576,
	1032, 1068, 0, 523, 522, 579, 0, 0, 0, 0,
	524, 525, 580, 526, 527, 528, 946, 0, 0, 0,
	0, 0, 0, 942, 0, 0, 0, 0, 0, 0,
	940, 941, 0, 0, 0, 0, 0, 0, 0, 971,
	2300, 0, 2299, 969, 987, 959, 960, 961, 957, 958,
	970, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 247, 248, 249, 250, 251, 252, 0, 253, 254,
	0, 0, 0, 0, 0, 1011, 975, 0, 0, 0,
	255, 256, 258, 257, 259, 260, 261, 530, 1024, 0,
	262, 1031, 263, 1030, 0, 1041, 264, 265, 266, 267,
	268, 977, 1010, 944, 269, 1070, 1071, 537, 0, 270,
	271, 1017, 0, 998, 0, 272, 273, 274, 275, 276,
	277, 278, 0, 0, 280, 281, 282, 279, 0, 283,
	0, 284, 285, 286, 0, 287, 1051, 288, 289, 1001,
	999, 1000, 1007, 1003, 1002, 1006, 290, 291, 292, 293,
	1034, 294, 1028, 1027, 948, 298, 295, 296, 0, 299,
	297, 0, 300, 301, 302, 0, 0, 303, 1019, 305,
	0, 306, 307, 0, 308, 309, 310, 0, 311, 312,
	954, 313, 314, 315, 317, 319, 316, 320, 321, 322,
	323, 1042, 1043, 966, 244, 0, 0, 0, 0, 0,
	324, 325, 326, 1026, 0, 0, 0, 327, 0, 328,
	0, 0, 1052, 329, 330, 1039, 1040, 331, 332, 0,
	333, 1049, 0, 976, 334, 0, 335, 336, 337, 338,
	339, 1012, 1013, 1016, 396, 1054, 340, 341, 0, 342,
	343, 344, 345, 0, 0, 0, 245, 346, 347, 349,
	0, 1053, 348, 1021, 1022, 0, 982, 0, 350, 351,
	1055, 1014, 1056, 352, 353, 354, 1057, 355, 0, 0,
	0, 356, 357, 358, 359, 360, 361, 0, 362, 364,
	363, 0, 365, 1050, 1058, 366, 367, 1059, 0, 368,
	369, 370, 1005, 1004, 371, 372, 373, 374, 0, 375,
	376, 378, 380, 377, 379, 384, 381, 382, 383, 386,
	0, 385, 1060, 387, 388, 389, 392, 393, 391, 1061,
	390, 945, 246, 1062, 394, 967, 1015, 395, 1029, 397,
	398, 0, 0, 399, 0, 0, 0, 401, 402, 403,
	0, 0, 404, 405, 559, 1063, 406, 1064, 1044, 407,
	408, 400, 409, 410, 411, 412, 413, 414, 415, 416,
	0, 417, 418, 561, 562, 1045, 419, 564, 420, 421,
	0, 422, 0, 423, 424, 425, 426, 427, 428, 429,
	1025, 431, 430, 432, 0, 433, 0, 0, 0, 0,
	0, 434, 0, 436, 437, 438, 435, 439, 440, 441,
	442, 0, 443, 444, 445, 1065, 446, 447, 448, 449,
	955, 450, 0, 451, 452, 458, 459, 453, 454, 460,
	461, 462, 463, 464, 0, 466, 467, 465, 468, 469,
	470, 1008, 471, 455, 456, 472, 473, 1066, 474, 475,
	476, 477, 478, 479, 1023, 0, 480, 0, 481, 482,
	483, 484, 457, 485, 490, 1069, 486, 487, 488, 489,
	1046, 0, 492, 493, 943, 491, 0, 494, 495, 496,
	497, 498, 499, 318, 500, 0, 501, 1035, 1036, 1037,
	1038, 0, 508, 0, 502, 503, 1047, 504, 1048, 965,
	505, 506, 507, 0, 509, 510, 0, 949, 511, 512,
	513, 515, 516, 514, 517, 1009, 518, 0, 0, 519,
	520, 521, 576, 1032, 1068, 0, 523, 522, 579, 0,
	0, 0, 0, 524, 525, 580, 526, 527, 528, 946,
	0, 0, 0, 0, 0, 0, 942, 0, 0, 0,
	0, 0, 0, 940, 941, 0, 0, 0, 0, 0,
	0, 0, 971, 2297, 0, 2296, 969, 987, 959, 960,
	961, 957, 958, 970, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 247, 248, 249, 250, 251, 252,
	0, 253, 254, 0, 0, 0, 0, 0, 1011, 975,
	0, 0, 0, 255, 256, 258, 257, 259, 260, 261,
	530, 1024, 0, 262, 1031, 263, 1030, 0, 1041, 264,
	265, 266, 267, 268, 977, 1010, 944, 269, 1070, 1071,
	537, 0, 270, 271, 1017, 0, 998, 0, 272, 273,
	274, 275, 276, 277, 278, 0, 0, 280, 281, 282,
	279, 0, 283, 0, 284, 285, 286, 0, 287, 1051,
	288, 289, 1001, 999, 1000, 1007, 1003, 1002, 1006, 290,
	291, 292, 293, 1034, 294, 1028, 1027, 948, 298, 295,
	296, 0, 299, 297, 0, 300, 301, 302, 0, 0,
	303, 1019, 305, 0, 306, 307, 0, 308, 309, 310,
	0, 311, 312, 954, 313, 314, 315, 317, 319, 316,
	320, 321, 322, 323, 1042, 1043, 966, 244, 0, 0,
	0, 0, 0, 324, 325, 326, 1026, 0, 0, 0,
	327, 0, 328, 0, 0, 1052, 329, 330, 1039, 1040,
	331, 332, 0, 333, 1049, 0, 976, 334, 0, 335,
	336, 337, 338, 339, 1012, 1013, 1016, 396, 1054, 340,
	341, 0, 342, 343, 344, 345, 0, 0, 0, 245,
	346, 347, 349, 0, 1053, 348, 1021, 1022, 0, 982,
	0, 350, 351, 1055, 1014, 1056, 352, 353, 354, 1057,
	355, 0, 0, 0, 356, 357, 358, 359, 360, 361,
	0, 362, 364, 363, 0, 365, 1050, 1058, 366, 367,
	1059, 0, 368, 369, 370, 1005, 1004, 371, 372, 373,
	374, 0, 375, 376, 378, 380, 377, 379, 384, 381,
	382, 383, 386, 0, 385, 1060, 387, 388, 389, 392,
	393, 391, 1061, 390, 945, 246, 1062, 394, 967, 1015,
	395, 1029, 397, 398, 0, 0, 399, 0, 0, 0,
	401, 402, 403, 0, 0, 404, 405, 559, 1063, 406,
	1064, 1044, 407, 408, 400, 409, 410, 411, 412, 413,
	414, 415, 416, 0, 417, 418, 561, 562, 1045, 419,
	564, 420, 421, 0, 422, 0, 423, 424, 425, 426,
	427, 428, 429, 1025, 431, 430, 432, 0, 433, 0,
	0, 0, 0, 0, 434, 0, 436, 437, 438, 435,
	439, 440, 441, 442, 0, 443, 444, 445, 1065, 446,
	447, 448, 449, 955, 450, 0, 451, 452, 458, 459,
	453, 454, 460, 461, 462, 463, 464, 0, 466, 467,
	465, 468, 469, 470, 1008, 471, 455, 456, 472, 473,
	1066, 474, 475, 476, 477, 478, 479, 1023, 0, 480,
	0, 481, 482, 483, 484, 457, 485, 490, 1069, 486,
	487, 488, 489, 1046, 0, 492, 493, 943, 491, 0,
	494, 495, 496, 497, 498, 499, 318, 500, 0, 501,
	1035, 1036, 1037, 1038, 0, 508, 0, 502, 503, 1047,
	504, 1048, 965, 505, 506, 507, 0, 509, 510, 0,
	949, 511, 512, 513, 515, 516, 514, 517, 1009, 518,
	0, 0, 519, 520, 521, 576, 1032, 1068, 0, 523,
	522, 579, 0, 0, 0, 0, 524, 525, 580, 526,
	527, 528, 946, 0, 0, 0, 0, 0, 0, 942,
	0, 0, 0, 0, 0, 0, 940, 941, 0, 0,
	0, 0, 0, 0, 0, 971, 2294, 0, 1531, 969,
	987, 959, 960, 961, 957, 958, 970, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 247, 248, 249,
	250, 251, 252, 0, 253, 254, 0, 0, 0, 0,
	0, 1011, 975, 0, 0, 0, 255, 256, 258, 257,
	259, 260, 261, 530, 1024, 0, 262, 1031, 263, 1030,
	0, 1041, 264, 265, 266, 267, 268, 977, 1010, 944,
	269, 1070, 1071, 537, 0, 270, 271, 1017, 0, 998,
	0, 272, 273, 274, 275, 276, 277, 278, 0, 0,
	280, 281, 282, 279, 0, 283, 0, 284, 285, 286,
	0, 287, 1051, 288, 289, 1001, 999, 1000, 1007, 1003,
	1002, 1006, 290, 291, 292, 293, 1034, 294, 1028, 1027,
	948, 298, 295, 296, 0, 299, 297, 0, 300, 301,
	302, 0, 0, 303, 1019, 305, 0, 306, 307, 0,
	308, 309, 310, 0, 311, 312, 954, 313, 314, 315,
	317, 319, 316, 320, 321, 322, 323, 1042, 1043, 966,
	244, 0, 0, 0, 0, 0, 324, 325, 326, 1026,
	0, 0, 0, 327, 0, 328, 0, 0, 1052, 329,
	330, 1039, 1040, 331, 332, 0, 333, 1049, 0, 976,
	334, 0, 335, 336, 337, 338, 339, 1012, 1013, 1016,
	396, 1054, 340, 341, 0, 342, 343, 344, 345, 0,
	0, 0, 245, 346, 347, 349, 0, 1053, 348, 1021,
	1022, 0, 982, 0, 350, 351, 1055, 1014, 1056, 352,
	353, 354, 1057, 355, 0, 0, 0, 356, 357, 358,
	359, 360, 361, 0, 362, 364, 363, 0, 365, 1050,
	1058, 366, 367, 1059, 0, 368, 369, 370, 1005, 1004,
	371, 372, 373, 374, 0, 375, 376, 378, 380, 377,
	379, 384, 381, 382, 383, 386, 0, 385, 1060, 387,
	388, 389, 392, 393, 391, 1061, 390, 945, 246, 1062,
	394, 967, 1015, 395, 1029, 397, 398, 0, 0, 399,
	0, 0, 0, 401, 402, 403, 0, 0, 404, 405,
	559, 1063, 406, 1064, 1044, 407, 408, 400, 409, 410,
	411, 412, 413, 414, 415, 416, 0, 417, 418, 561,
	562, 1045, 419, 564, 420, 421, 0, 422, 0, 423,
	424, 425, 426, 427, 428, 429, 1025, 431, 430, 432,
	0, 433, 0, 0, 0, 0, 0, 434, 0, 436,
	437, 438, 435, 439, 440, 441, 442, 0, 443, 444,
	445, 1065, 446, 447, 448, 449, 955, 450, 0, 451,
	452, 458, 459, 453, 454, 460, 461, 462, 463, 464,
	0, 466, 467, 465, 468, 469, 470, 1008, 471, 455,
	456, 472, 473, 1066, 474, 475, 476, 477, 478, 479,
	1023, 0, 480, 0, 481, 482, 483, 484, 457, 485,
	490, 1069, 486, 487, 488, 489, 1046, 0, 492, 493,
	943, 491, 0, 494, 495, 496, 497, 498, 499, 318,
	500, 0, 501, 1035, 1036, 1037, 1038, 0, 508, 0,
	502, 503, 1047, 504, 1048, 965, 505, 506, 507, 0,
	509, 510, 0, 949, 511, 512, 513, 515, 516, 514,
	517, 1009, 518, 0, 0, 519, 520, 521, 576, 1032,
	1068, 0, 523, 522, 579, 1530, 0, 0, 0, 524,
	525, 580, 526, 527, 528, 946, 0, 0, 0, 0,
	0, 0, 942, 0, 0, 0, 0, 0, 0, 940,
	941, 0, 0, 0, 0, 0, 0, 0, 971, 0,
	0, 936, 969, 987, 959, 960, 961, 957, 958, 970,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	247, 248, 249, 250, 251, 252, 0, 253, 254, 0,
	0, 0, 0, 0, 1011, 975, 0, 0, 0, 255,
	256, 258, 257, 259, 260, 261, 530, 1024, 0, 262,
	1031, 263, 1030, 0, 1041, 264, 265, 266, 267, 268,
	977, 1010, 944, 269, 1070, 1071, 537, 0, 270, 271,
	1017, 0, 998, 0, 272, 273, 274, 275, 276, 277,
	278, 0, 0, 280, 281, 282, 279, 0, 283, 0,
	284, 285, 286, 0, 287, 1051, 288, 289, 1001, 999,
	1000, 1007, 1003, 1002, 1006, 290, 291, 292, 293, 1034,
	294, 1028, 1027, 948, 298, 295, 296, 0, 299, 297,
	0, 300, 301, 302, 0, 0, 303, 1019, 305, 0,
	306, 307, 0, 308, 309, 310, 0, 311, 312, 954,
	313, 314, 315, 317, 319, 316, 320, 321, 322, 323,
	1042, 1043, 966, 244, 0, 0, 0, 0, 0, 324,
	325, 326, 1026, 0, 0, 0, 327, 0, 328, 0,
	0, 1052, 329, 330, 1039, 1040, 331, 332, 0, 333,
	1049, 0, 976, 334, 0, 335, 336, 337, 338, 339,
	1012, 1013, 1016, 396, 1054, 340, 341, 0, 342, 343,
	344, 345, 0, 0, 0, 245, 346, 347, 349, 0,
	1053, 348, 1021, 1022, 0, 982, 0, 350, 351, 1055,
	1014, 1056, 352, 353, 354, 1057, 355, 0, 0, 0,
	356, 357, 358, 359, 360, 361, 0, 362, 364, 363,
	0, 365, 1050, 1058, 366, 367, 1059, 0, 368, 369,
	370, 1005, 1004, 371, 372, 373, 374, 0, 375, 376,
	378, 380, 377, 379, 384, 381, 382, 383, 386, 0,
	385, 1060, 387, 388, 389, 392, 393, 391, 1061, 390,
	945, 246, 1062, 394, 967, 1015, 395, 1029, 397, 398,
	0, 0, 399, 0, 950, 0, 401, 402, 403, 0,
	0, 404, 405, 559, 1063, 406, 1064, 1044, 407, 408,
	400, 409, 410, 411, 412, 413, 414, 415, 416, 0,
	417, 418, 561, 562, 1045, 419, 564, 420, 421, 0,
	422, 0, 423, 424, 425, 426, 427, 428, 429, 1025,
	431, 430, 432, 0, 433, 0, 0, 0, 0, 0,
	434, 0, 436, 437, 438, 435, 439, 440, 441, 442,
	0, 443, 444, 445, 1065, 446, 447, 448, 449, 955,
	450, 0, 451, 452, 458, 459, 453, 454, 460, 461,
	462, 463, 464, 0, 466, 467, 465, 468, 469, 470,
	1008, 471, 455, 456, 472, 473, 1066, 474, 475, 476,
	477, 478, 479, 1023, 0, 480, 0, 481, 482, 483,
	484, 457, 485, 490, 1069, 486, 487, 488, 489, 1046,
	0, 492, 493, 943, 491, 0, 494, 495, 496, 497,
	498, 499, 318, 500, 0, 501, 1035, 1036, 1037, 1038,
	0, 508, 0, 502, 503, 1047, 504, 1048, 965, 505,
	506, 507, 0, 509, 510, 0, 949, 511, 512, 513,
	515, 516, 514, 517, 1009, 518, 0, 0, 519, 520,
	521, 576, 1032, 1068, 0, 523, 522, 579, 0, 0,
	0, 0, 524, 525, 580, 526, 527, 528, 946, 0,
	0, 0, 0, 0, 0, 942, 0, 0, 0, 0,
	0, 0, 940, 941, 987, 959, 960, 961, 957, 958,
	970, 971, 0, 0, 0, 969, 0, 0, 0, 0,
	0, 247, 248, 249, 250, 251, 252, 0, 253, 254,
	0, 0, 0, 0, 0, 1011, 975, 0, 0, 0,
	255, 256, 258, 257, 259, 260, 261, 530, 1024, 0,
	262, 1031, 263, 1030, 0, 1041, 264, 265, 266, 267,
	268, 977, 1010, 944, 269, 1070, 1071, 537, 0, 270,
	271, 1017, 0, 998, 0, 272, 273, 274, 275, 276,
	277, 278, 0, 0, 280, 281, 282, 279, 0, 283,
	0, 284, 4004, 286, 0, 287, 1051, 288, 289, 1001,
	999, 1000, 1007, 1003, 1002, 1006, 290, 291, 292, 293,
	1034, 294, 1028, 1027, 948, 298, 295, 296, 0, 299,
	297, 0, 300, 301, 302, 0, 0, 303, 1019, 305,
	0, 306, 307, 0, 308, 309, 310, 0, 311, 312,
	954, 313, 314, 315, 317, 319, 316, 320, 321, 322,
	323, 1042, 1043, 966, 244, 0, 0, 0, 0, 0,
	324, 325, 326, 1026, 0, 0, 0, 327, 0, 328,
	0, 0, 1052, 329, 330, 1039, 1040, 331, 332, 0,
	333, 1049, 0, 976, 334, 0, 335, 336, 337, 338,
	339, 1012, 1013, 1016, 396, 1054, 340, 341, 0, 342,
	343, 344, 345, 0, 0, 0, 245, 346, 347, 349,
	0, 1053, 348, 1021, 1022, 0, 982, 0, 350, 351,
	1055, 1014, 1056, 352, 353, 354, 1057, 355, 0, 0,
	0, 356, 357, 358, 359, 360, 361, 0, 362, 364,
	363, 0, 365, 1050, 1058, 366, 367, 1059, 0, 368,
	369, 370, 1005, 1004, 371, 372, 373, 374, 0, 375,
	376, 378, 380, 377, 379, 384, 381, 382, 383, 386,
	0, 385, 1060, 387, 388, 389, 392, 393, 391, 1061,
	390, 945, 246, 1062, 394, 967, 1015, 395, 1029, 397,
	398, 0, 0, 399, 0, 950, 0, 401, 402, 403,
	0, 0, 404, 405, 559, 1063, 406, 1064, 1044, 407,
	408, 400, 409, 410, 411, 412, 413, 414, 415, 416,
	0, 417, 418, 561, 562, 1045, 419, 564, 420, 421,
	0, 422, 0, 423, 424, 425, 426, 427, 428, 429,
	1025, 431, 430, 432, 0, 433, 0, 0, 0, 0,
	0, 434, 0, 436, 437, 438, 435, 439, 440, 441,
	442, 0, 443, 444, 445, 1065, 446, 447, 448, 449,
	955, 450, 0, 451, 452, 458, 459, 453, 454, 460,
	461, 462, 463, 464, 0, 466, 467, 465, 468, 469,
	470, 1008, 471, 455, 456, 472, 473, 1066, 474, 475,
	476, 477, 478, 479, 1023, 0, 480, 0, 481, 482,
	483, 484, 457, 485, 490, 1069, 486, 487, 488, 489,
	1046, 0, 492, 493, 943, 491, 0, 494, 495, 496,
	497, 498, 499, 318, 500, 0, 501, 1035, 1036, 1037,
	1038, 0, 508, 0, 502, 503, 1047, 504, 1048, 965,
	505, 506, 507, 0, 509, 510, 0, 949, 511, 512,
	513, 515, 516, 514, 517, 1009, 518, 0, 0, 519,
	520, 521, 576, 1032, 1068, 0, 523, 522, 579, 0,
	0, 0, 0, 524, 525, 580, 526, 527, 528, 946,
	0, 0, 0, 0, 0, 0, 942, 0, 0, 0,
	0, 0, 0, 940, 941, 987, 959, 960, 961, 957,
	958, 970, 971, 0, 0, 0, 969, 0, 0, 0,
	0, 0, 247, 248, 249, 250, 251, 252, 0, 253,
	254, 0, 0, 0, 0, 0, 1011, 975, 0, 0,
	0, 255, 256, 258, 257, 259, 260, 261, 530, 1024,
	0, 262, 1031, 263, 1030, 0, 1041, 264, 265, 266,
	267, 268, 977, 1010, 944, 269, 1070, 1071, 537, 0,
	270, 271, 1017, 0, 998, 0, 272, 273, 274, 275,
	276, 277, 278, 0, 0, 280, 281, 282, 279, 0,
	283, 0, 284, 285, 286, 0, 287, 1051, 288, 289,
	1001, 999, 1000, 1007, 1003, 1002, 1006, 290, 291, 292,
	293, 1034, 294, 1028, 1027, 948, 298, 295, 296, 0,
	299, 297, 0, 300, 301, 302, 0, 0, 303, 1019,
	305, 0, 306, 307, 0, 308, 309, 310, 0, 311,
	312, 954, 313, 314, 315, 317, 319, 316, 320, 321,
	322, 323, 1042, 1043, 966, 244, 0, 0, 0, 0,
	0, 324, 325, 326, 1026, 0, 0, 0, 327, 0,
	328, 0, 0, 1052, 329, 330, 1039, 1040, 331, 332,
	0, 333, 1049, 0, 976, 334, 0, 335, 336, 337,
	338, 339, 1012, 1013, 1016, 396, 1054, 340, 341, 0,
	342, 343, 344, 345, 0, 0, 0, 2174, 346, 347,
	349, 0, 1053, 348, 1021, 1022, 0, 982, 0, 350,
	351, 1055, 1014, 1056, 352, 353, 354, 1057, 355, 0,
	0, 0, 356, 357, 358, 359, 360, 361, 0, 362,
	364, 363, 0, 365, 1050, 1058, 366, 367, 1059, 0,
	368, 369, 370, 1005, 1004, 371, 372, 373, 374, 0,
	375, 376, 378, 380, 377, 379, 384, 381, 382, 383,
	386, 0, 385, 1060, 387, 388, 389, 392, 393, 391,
	1061, 390, 945, 246, 1062, 394, 967, 1015, 395, 1029,
	397, 398, 0, 0, 399, 0, 0, 0, 401, 402,
	403, 0, 0, 404, 405, 559, 1063, 406, 1064, 1044,
	407, 408, 400, 409, 410, 411, 412, 413, 414, 415,
	416, 0, 417, 418, 561, 562, 1045, 419, 564, 420,
	421, 2173, 422, 0, 423, 424, 425, 426, 427, 428,
	429, 1025, 431, 430, 432, 0, 433, 0, 0, 0,
	0, 0, 434, 0, 436, 437, 438, 435, 439, 440,
	441, 442, 0, 443, 444, 445, 1065, 446, 447, 448,
	449, 955, 450, 0, 451, 452, 458, 459, 453, 454,
	460, 461, 462, 463, 464, 0, 466, 467, 465, 468,
	469, 470, 1008, 471, 455, 456, 472, 473, 1066, 474,
	475, 476, 477, 478, 479, 1023, 0, 480, 0, 481,
	482, 483, 484, 457, 485, 490, 1069, 486, 487, 488,
	489, 1046, 0, 492, 493, 943, 491, 0, 494, 495,
	496, 497, 498, 499, 318, 500, 0, 501, 1035, 1036,
	1037, 1038, 0, 508, 0, 502, 503, 1047, 504, 1048,
	965, 505, 506, 507, 0, 509, 510, 0, 949, 511,
	512, 513, 515, 516, 514, 517, 1009, 518, 0, 0,
	519, 520, 521, 576, 1032, 1068, 0, 523, 522, 579,
	0, 0, 0, 0, 524, 525, 580, 526, 527, 528,
	946, 0, 0, 0, 0, 0, 0, 942, 0, 0,
	0, 0, 0, 0, 940, 941, 987, 959, 960, 961,
	957, 958, 970, 971, 0, 0, 0, 969, 0, 0,
	0, 0, 0, 247, 248, 249, 250, 251, 252, 0,
	253, 254, 0, 0, 0, 0, 0, 1011, 975, 0,
	0, 0, 255, 256, 258, 257, 259, 260, 261, 530,
	1024, 0, 262, 1031, 263, 1030, 0, 1041, 264, 265,
	266, 267, 268, 977, 1010, 944, 269, 1070, 1071, 537,
	0, 270, 271, 1017, 0, 998, 0, 272, 273, 274,
	275, 276, 277, 278, 0, 0, 280, 281, 282, 279,
	0, 283, 0, 284, 285, 286, 0, 287, 1051, 288,
	289, 1001, 999, 1000, 1007, 1003, 1002, 1006, 290, 291,
	292, 293, 1034, 294, 1028, 1027, 948, 298, 295, 296,
	0, 299, 297, 0, 300, 301, 302, 0, 0, 303,
	1019, 305, 0, 306, 307, 0, 308, 309, 310, 0,
	311, 312, 954, 313, 314, 315, 317, 319, 316, 320,
	321, 322, 323, 1042, 1043, 966, 244, 0, 0, 0,
	0, 0, 324, 325, 326, 1026, 0, 0, 0, 327,
	0, 328, 0, 0, 1052, 329, 330, 1039, 1040, 331,
	332, 0, 333, 1049, 0, 976, 334, 0, 335, 336,
	337, 338, 339, 1012, 1013, 1016, 396, 1054, 340, 341,
	0, 342, 343, 344, 345, 0, 0, 0, 245, 346,
	347, 349, 0, 1053, 348, 1021, 1022, 0, 982, 0,
	350, 351, 1055, 1014, 1056, 352, 353, 354, 1057, 355,
	0, 0, 0, 356, 357, 358, 359, 360, 361, 0,
	362, 364, 363, 0, 365, 1050, 1058, 366, 367, 1059,
	0, 368, 369, 370, 1005, 1004, 371, 372, 373, 374,
	0, 375, 376, 378, 380, 377, 379, 384, 381, 382,
	383, 386, 0, 385, 1060, 387, 388, 389, 392, 393,
	391, 1061, 390, 945, 246, 1062, 394, 967, 1015, 395,
	1029, 397, 398, 0, 0, 399, 0, 950, 0, 401,
	402, 403, 0, 0, 404, 405, 559, 1063, 406, 1064,
	1044, 407, 408, 400, 409, 410, 411, 412, 413, 414,
	415, 416, 0, 417, 418, 561, 562, 1045, 419, 564,
	420, 421, 0, 422, 0, 423, 424, 425, 426, 427,
	428, 429, 1025, 431, 430, 432, 0, 433, 0, 0,
	0, 0, 0, 434, 0, 436, 437, 438, 435, 439,
	440, 441, 442, 0, 443, 444, 445, 1065, 446, 447,
	448, 449, 955, 450, 0, 451, 452, 458, 459, 453,
	454, 460, 461, 462, 463, 464, 0, 466, 467, 465,
	468, 469, 470, 1008, 471, 455, 456, 472, 473, 1066,
	474, 475, 476, 477, 478, 479, 1023, 0, 480, 0,
	481, 482, 483, 484, 457, 485, 490, 1069, 486, 487,
	488, 489, 1046, 0, 492, 493, 943, 491, 0, 494,
	495, 496, 497, 498, 499, 318, 500, 0, 501, 1035,
	1036, 1037, 1038, 0, 508, 0, 502, 503, 1047, 504,
	1048, 965, 505, 506, 507, 0, 509, 510, 0, 949,
	511, 512, 513, 515, 516, 514, 517, 1009, 518, 0,
	0, 519, 520, 521, 576, 1032, 1068, 0, 523, 522,
	579, 0, 0, 0, 0, 524, 525, 580, 526, 527,
	528, 946, 0, 0, 0, 0, 0, 0, 942, 0,
	0, 0, 0, 0, 0, 940, 941, 987, 959, 960,
	961, 957, 958, 970, 971, 0, 0, 0, 969, 0,
	0, 0, 0, 0, 247, 248, 249, 250, 251, 252,
	0, 253, 254, 0, 0, 0, 0, 0, 1011, 975,
	0, 0, 0, 255, 256, 258, 257, 259, 260, 261,
	530, 1024, 0, 262, 1031, 263, 1030, 0, 1041, 264,
	265, 266, 267, 268, 977, 1010, 944, 269, 1070, 1071,
	537, 0, 270, 271, 1017, 0, 998, 0, 272, 273,
	274, 275, 276, 277, 278, 0, 0, 280, 281, 282,
	279, 0, 283, 0, 284, 3799, 286, 0, 287, 1051,
	288, 289, 1001, 999, 1000, 1007, 1003, 1002, 1006, 290,
	291, 292, 293, 1034, 294, 1028, 1027, 948, 298, 295,
	296, 0, 299, 297, 0, 300, 301, 302, 0, 0,
	303, 1019, 305, 0, 306, 307, 0, 308, 309, 310,
	0, 311, 312, 954, 313, 314, 315, 317, 319, 316,
	320, 321, 322, 323, 1042, 1043, 966, 244, 0, 0,
	0, 0, 0, 324, 325, 326, 1026, 0, 0, 0,
	327, 0, 328, 0, 0, 1052, 329, 330, 1039, 1040,
	331, 332, 0, 333, 1049, 0, 976, 334, 0, 335,
	336, 337, 338, 339, 1012, 1013, 1016, 396, 1054, 340,
	341, 0, 342, 343, 344, 345, 0, 0, 0, 245,
	346, 347, 349, 0, 1053, 348, 1021, 1022, 0, 982,
	0, 350, 351, 1055, 1014, 1056, 352, 353, 354, 1057,
	355, 0, 0, 0, 356, 357, 358, 359, 360, 361,
	0, 362, 364, 363, 0, 365, 1050, 1058, 366, 367,
	1059, 0, 368, 369, 370, 1005, 1004, 371, 372, 373,
	374, 0, 375, 376, 378, 380, 377, 379, 384, 381,
	382, 383, 386, 0, 385, 1060, 387, 388, 389, 392,
	393, 391, 1061, 390, 945, 246, 1062, 394, 967, 1015,
	395, 1029, 397, 398, 0, 0, 399, 0, 950, 0,
	401, 402, 403, 0, 0, 404, 405, 559, 1063, 406,
	1064, 1044, 407, 408, 400, 409, 410, 411, 412, 413,
	414, 415, 416, 0, 417, 418, 561, 562, 1045, 419,
	564, 420, 421, 0, 422, 0, 423, 424, 425, 426,
	427, 428, 429, 1025, 431, 430, 432, 0, 433, 0,
	0, 0, 0, 0, 434, 0, 436, 437, 438, 435,
	439, 440, 441, 442, 0, 443, 444, 445, 1065, 446,
	447, 448, 449, 955, 450, 0, 451, 452, 458, 459,
	453, 454, 460, 461, 462, 463, 464, 0, 466, 467,
	465, 468, 469, 470, 1008, 471, 455, 456, 472, 473,
	1066, 474, 475, 476, 477, 478, 479, 1023, 0, 480,
	0, 481, 482, 483, 484, 457, 485, 490, 1069, 486,
	487, 488, 489, 1046, 0, 492, 493, 943, 491, 0,
	494, 495, 496, 497, 498, 499, 318, 500, 0, 501,
	1035, 1036, 1037, 1038, 0, 508, 0, 502, 503, 1047,
	504, 1048, 965, 505, 506, 507, 0, 509, 510, 0,
	949, 511, 512, 513, 515, 516, 514, 517, 1009, 518,
	0, 0, 519, 520, 521, 576, 1032, 1068, 0, 523,
	522, 579, 0, 0, 0, 0, 524, 525, 580, 526,
	527, 528, 946, 0, 0, 0, 0, 0, 0, 942,
	0, 0, 0, 0, 0, 0, 940, 941, 987, 959,
	960, 961, 957, 958, 970, 971, 0, 0, 0, 969,
	0, 0, 0, 0, 0, 247, 248, 249, 250, 251,
	252, 0, 253, 254, 0, 0, 0, 0, 0, 1011,
	975, 0, 0, 0, 255, 256, 258, 257, 259, 260,
	261, 530, 1024, 0, 262, 1031, 263, 1030, 0, 1041,
	264, 265, 266, 267, 268, 977, 1010, 944, 269, 1070,
	1071, 537, 0, 270, 271, 1017, 0, 998, 0, 272,
	273, 274, 275, 276, 277, 278, 0, 0, 280, 281,
	282, 279, 0, 283, 0, 284, 285, 286, 0, 287,
	1051, 288, 289, 1001, 999, 1000, 1007, 1003, 1002, 1006,
	290, 291, 292, 293, 1034, 294, 1028, 1027, 948, 298,
	295, 296, 0, 299, 297, 0, 300, 301, 302, 0,
	0, 303, 1019, 305, 0, 306, 307, 0, 308, 309,
	310, 0, 311, 312, 954, 313, 314, 315, 317, 319,
	316, 320, 321, 322, 323, 1042, 1043, 966, 244, 0,
	0, 0, 0, 0, 324, 325, 326, 1026, 0, 0,
	0, 327, 0, 328, 0, 0, 1052, 329, 330, 1039,
	1040, 331, 332, 0, 333, 1049, 0, 976, 334, 0,
	335, 336, 337, 338, 339, 1012, 1013, 1016, 396, 1054,
	340, 341, 0, 342, 343, 344, 345, 0, 0, 0,
	245, 346, 347, 349, 0, 1053, 348, 1021, 1022, 0,
	982, 0, 350, 351, 1055, 1014, 1056, 352, 353, 354,
	1057, 355, 0, 0, 0, 356, 357, 358, 359, 360,
	361, 0, 362, 364, 363, 0, 365, 1050, 1058, 366,
	367, 1059, 0, 368, 369, 370, 1005, 1004, 371, 372,
	373, 374, 0, 375, 376, 378, 380, 377, 379, 384,
	381, 382, 383, 386, 0, 385, 1060, 387, 388, 389,
	392, 393, 391, 1061, 390, 945, 3461, 1062, 394, 967,
	1015, 395, 1029, 397, 398, 0, 0, 399, 0, 0,
	0, 401, 402, 403, 0, 0, 404, 405, 559, 1063,
	406, 1064, 1044, 407, 408, 400, 409, 410, 411, 412,
	413, 414, 415, 416, 0, 417, 418, 561, 562, 1045,
	419, 564, 420, 421, 0, 422, 0, 423, 424, 425,
	426, 427, 428, 429, 1025, 431, 430, 432, 0, 433,
	0, 0, 0, 0, 0, 434, 0, 436, 437, 438,
	435, 439, 440, 441, 442, 0, 443, 444, 445, 1065,
	446, 447, 448, 449, 955, 450, 0, 451, 452, 458,
	459, 453, 454, 460, 461, 462, 463, 464, 0, 466,
	467, 465, 468, 469, 470, 1008, 471, 455, 456, 472,
	473, 1066, 474, 475, 476, 477, 478, 479, 1023, 0,
	480, 0, 481, 482, 483, 484, 457, 485, 490, 1069,
	486, 487, 488, 489, 1046, 0, 492, 493, 943, 491,
	0, 494, 495, 496, 497, 498, 499, 318, 500, 0,
	501, 1035, 1036, 1037, 1038, 0, 508, 0, 502, 503,
	1047, 504, 1048, 965, 505, 506, 507, 0, 509, 510,
	0, 949, 511, 512, 513, 515, 516, 514, 517, 1009,
	518, 0, 0, 519, 520, 521, 576, 1032, 1068, 0,
	523, 522, 579, 0, 0, 0, 0, 524, 525, 580,
	526, 527, 528, 946, 0, 0, 0, 0, 0, 0,
	942, 0, 0, 0, 0, 0, 0, 940, 941, 1746,
	0, 0, 0, 0, 0, 0, 971, 0, 0, 0,
	969, 987, 959, 960, 961, 957, 958, 970, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 247, 248,
	249, 250, 251, 252, 0, 253, 254, 0, 0, 0,
	0, 0, 1011, 975, 0, 0, 0, 255, 256, 258,
	257, 259, 260, 261, 530, 1024, 0, 262, 1031, 263,
	1030, 0, 1041, 264, 265, 266, 267, 268, 977, 1010,
	944, 269, 1070, 1071, 537, 0, 270, 271, 1017, 0,
	998, 0, 272, 273, 274, 275, 276, 277, 278, 0,
	0, 280, 281, 282, 279, 0, 283, 0, 284, 285,
	286, 0, 287, 1051, 288, 289, 1001, 999, 1000, 1007,
	1003, 1002, 1006, 290, 291, 292, 293, 1034, 294, 1028,
	1027, 948, 298, 295, 296, 0, 299, 297, 0, 300,
	301, 302, 0, 0, 303, 1019, 305, 0, 306, 307,
	0, 308, 309, 310, 0, 311, 312, 954, 313, 314,
	315, 317, 319, 316, 320, 321, 322, 323, 1042, 1043,
	966, 244, 0, 0, 0, 0, 0, 324, 325, 326,
	1026, 0, 0, 0, 327, 0, 328, 0, 0, 1052,
	329, 330, 1039, 1040, 331, 332, 0, 333, 1049, 0,
	976, 334, 0, 335, 336, 337, 338, 339, 1012, 1013,
	1016, 396, 1054, 340, 341, 0, 342, 343, 344, 345,
	0, 0, 0, 245, 346, 347, 349, 0, 1053, 348,
	1021, 1022, 0, 982, 0, 350, 351, 1055, 1014, 1056,
	352, 353, 354, 1057, 355, 0, 0, 0, 356, 357,
	358, 359, 360, 361, 0, 362, 364, 363, 0, 365,
	1050, 1058, 366, 367, 1059, 0, 368, 369, 370, 1005,
	1004, 371, 372, 373, 374, 0, 375, 376, 378, 380,
	377, 379, 384, 381, 382, 383, 386, 0, 385, 1060,
	387, 388, 389, 392, 393, 391, 1061, 390, 945, 246,
	1062, 394, 967, 1015, 395, 1029, 397, 398, 0, 0,
	399, 0, 0, 0, 401, 402, 403, 0, 0, 404,
	405, 559, 1063, 406, 1064, 1044, 407, 408, 400, 409,
	410, 411, 412, 413, 414, 415, 416, 0, 417, 418,
	561, 562, 1045, 419, 564, 420, 421, 0, 422, 0,
	423, 424, 425, 426, 427, 428, 429, 1025, 431, 430,
	432, 0, 433, 0, 0, 0, 0, 0, 434, 0,
	436, 437, 438, 435, 439, 440, 441, 442, 0, 443,
	444, 445, 1065, 446, 447, 448, 449, 955, 450, 0,
	451, 452, 458, 459, 453, 454, 460, 461, 462, 463,
	464, 0, 466, 467, 465, 468, 469, 470, 1008, 471,
	455, 456, 472, 473, 1066, 474, 475, 476, 477, 478,
	479, 1023, 0, 480, 0, 481, 482, 483, 484, 457,
	485, 490, 1069, 486, 487, 488, 489, 1046, 0, 492,
	493, 943, 491, 0, 494, 495, 496, 497, 498, 499,
	318, 500, 0, 501, 1035, 1036, 1037, 1038, 0, 508,
	0, 502, 503, 1047, 504, 1048, 965, 505, 506, 507,
	0, 509, 510, 0, 949, 511, 512, 513, 515, 516,
	514, 517, 1009, 518, 0, 0, 519, 520, 521, 576,
	1032, 1068, 3220, 523, 522, 579, 0, 0, 0, 0,
	524, 525, 580, 526, 527, 528, 946, 0, 0, 0,
	0, 0, 0, 942, 0, 0, 0, 0, 0, 0,
	940, 941, 987, 959, 960, 961, 957, 958, 970, 971,
	0, 0, 0, 969, 0, 0, 0, 0, 0, 247,
	248, 249, 250, 251, 252, 0, 253, 254, 0, 0,
	0, 0, 0, 1011, 975, 0, 0, 0, 255, 256,
	258, 257, 259, 260, 261, 530, 1024, 0, 262, 1031,
	263, 1030, 0, 1041, 264, 265, 266, 267, 268, 977,
	1010, 944, 269, 1070, 1071, 537, 0, 270, 271, 1017,
	0, 998, 0, 272, 273, 274, 275, 276, 277, 278,
	0, 0, 280, 281, 282, 279, 0, 283, 0, 284,
	285, 286, 0, 287, 1051, 288, 289, 1001, 999, 1000,
	1007, 1003, 1002, 1006, 290, 291, 292, 293, 1034, 294,
	1028, 1027, 948, 298, 295, 296, 0, 299, 297, 0,
	300, 301, 302, 0, 0, 303, 1019, 305, 0, 306,
	307, 0, 308, 309, 310, 0, 311, 312, 954, 313,
	314, 315, 317, 319, 316, 320, 321, 322, 323, 1042,
	1043, 966, 244, 0, 0, 0, 0, 0, 324, 325,
	326, 1026, 0, 0, 0, 327, 0, 328, 0, 0,
	1052, 329, 330, 1039, 1040, 331, 332, 0, 333, 1049,
	0, 976, 334, 0, 335, 336, 337, 338, 339, 1012,
	1013, 1016, 396, 1054, 340, 341, 0, 342, 343, 344,
	345, 0, 0, 0, 245, 346, 347, 349, 0, 1053,
	348, 1021, 1022, 0, 982, 0, 350, 351, 1055, 1014,
	1056, 352, 353, 354, 1057, 355, 0, 0, 0, 356,
	357, 358, 359, 360, 361, 0, 362, 364, 363, 0,
	365, 1050, 1058, 366, 367, 1059, 0, 368, 369, 370,
	1005, 1004, 371, 372, 373, 374, 0, 375, 376, 378,
	380, 377, 379, 384, 381, 382, 383, 386, 0, 385,
	1060, 387, 388, 389, 392, 393, 391, 1061, 390, 945,
	246, 1062, 394, 967, 1015, 395, 1029, 397, 398, 0,
	0, 399, 0, 0, 0, 401, 402, 403, 0, 0,
	404, 405, 559, 1063, 406, 1064, 1044, 407, 408, 400,
	409, 410, 411, 412, 413, 414, 415, 416, 0, 417,
	418, 561, 562, 1045, 419, 564, 420, 421, 0, 422,
	0, 423, 424, 425, 426, 427, 428, 429, 1025, 431,
	430, 432, 0, 433, 0, 0, 0, 0, 0, 434,
	0, 436, 437, 438, 435, 439, 440, 441, 442, 0,
	443, 444, 445, 1065, 446, 447, 448, 449, 955, 450,
	0, 451, 452, 458, 459, 453, 454, 460, 461, 462,
	463, 464, 0, 466, 467, 465, 468, 469, 470, 1008,
	471, 455, 456, 472, 473, 1066, 474, 475, 476, 477,
	478, 479, 1023, 0, 480, 0, 481, 482, 483, 484,
	457, 485, 490, 1069, 486, 487, 488, 489, 1046, 0,
	492, 493, 943, 491, 0, 494, 495, 496, 497, 498,
	499, 318, 500, 0, 501, 1035, 1036, 1037, 1038, 0,
	508, 0, 502, 503, 1047, 504, 1048, 965, 505, 506,
	507, 0, 509, 510, 0, 949, 511, 512, 513, 515,
	516, 514, 517, 1009, 518, 0, 0, 519, 520, 521,
	576, 1032, 1068, 0, 523, 522, 579, 0, 0, 0,
	0, 524, 525, 580, 526, 527, 528, 946, 0, 0,
	0, 0, 0, 0, 942, 0, 0, 0, 0, 0,
	0, 940, 941, 1746, 0, 0, 0, 0, 0, 0,
	971, 0, 0, 0, 969, 987, 959, 960, 961, 957,
	958, 970, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 247, 248, 249, 250, 251, 252, 0, 253,
	254, 0, 0, 0, 0, 0, 1011, 975, 0, 0,
	0, 255, 256, 258, 257, 259, 260, 261, 530, 1024,
	0, 262, 1031, 263, 1030, 0, 1041, 264, 265, 266,
	267, 268, 977, 1010, 944, 269, 1070, 1071, 537, 0,
	270, 271, 1017, 0, 998, 0, 272, 273, 274, 275,
	276, 277, 278, 0, 0, 280, 281, 282, 279, 0,
	283, 0, 284, 285, 286, 0, 287, 1051, 288, 289,
	1001, 999, 1000, 1007, 1003, 1002, 1006, 290, 291, 292,
	293, 1034, 294, 1028, 1027, 948, 298, 295, 296, 0,
	299, 297, 0, 300, 301, 302, 0, 0, 303, 1019,
	305, 0, 306, 307, 0, 308, 309, 310, 0, 311,
	312, 954, 313, 314, 315, 317, 319, 316, 320, 321,
	322, 323, 1042, 1043, 966, 244, 0, 0, 0, 0,
	0, 324, 325, 326, 1026, 0, 0, 0, 327, 0,
	328, 0, 2369, 1052, 329, 330, 1039, 1040, 331, 332,
	0, 333, 1049, 0, 976, 334, 0, 335, 336, 337,
	338, 339, 1012, 1013, 1016, 396, 1054, 340, 341, 0,
	342, 343, 344, 345, 0, 0, 0, 245, 346, 347,
	349, 0, 1053, 348, 1021, 1022, 0, 982, 0, 350,
	351, 1055, 1014, 1056, 352, 353, 354, 1057, 355, 0,
	0, 0, 356, 357, 358, 359, 360, 361, 0, 362,
	364, 363, 0, 365, 1050, 1058, 366, 367, 1059, 0,
	368, 369, 370, 1005, 1004, 371, 372, 373, 374, 0,
	375, 376, 378, 380, 377, 379, 384, 381, 382, 383,
	386, 0, 385, 1060, 387, 388, 389, 392, 393, 391,
	1061, 390, 945, 246, 1062, 394, 967, 1015, 395, 1029,
	397, 398, 0, 0, 399, 0, 0, 0, 401, 402,
	403, 0, 0, 404, 405, 559, 1063, 406, 1064, 1044,
	407, 408, 400, 409, 410, 411, 412, 413, 414, 415,
	416, 0, 417, 418, 561, 562, 1045, 419, 564, 420,
	421, 0, 422, 0, 423, 424, 425, 426, 427, 428,
	429, 1025, 431, 430, 432, 0, 433, 0, 0, 0,
	0, 0, 434, 0, 436, 437, 438, 435, 439, 440,
	441, 442, 0, 443, 444, 445, 1065, 446, 447, 448,
	449, 955, 450, 0, 451, 452, 458, 459, 453, 454,
	460, 461, 462, 463, 464, 0, 466, 467, 465, 468,
	469, 470, 1008, 471, 455, 456, 472, 473, 1066, 474,
	475, 476, 477, 478, 479, 1023, 0, 480, 0, 481,
	482, 483, 484, 457, 485, 490, 1069, 486, 487, 488,
	489, 1046, 0, 492, 493, 943, 491, 0, 494, 495,
	496, 497, 498, 499, 318, 500, 0, 501, 1035, 1036,
	1037, 1038, 0, 508, 0, 502, 503, 1047, 504, 1048,
	965, 505, 506, 507, 0, 509, 510, 0, 949, 511,
	512, 513, 515, 516, 514, 517, 1009, 518, 0, 0,
	519, 520, 521, 576, 1032, 1068, 0, 523, 522, 579,
	0, 0, 0, 0, 524, 525, 580, 526, 527, 528,
	946, 0, 0, 0, 0, 0, 0, 942, 0, 0,
	0, 0, 0, 0, 940, 941, 987, 959, 960, 961,
	957, 958, 970, 971, 0, 0, 0, 969, 0, 0,
	0, 0, 0, 247, 248, 249, 250, 251, 252, 0,
	253, 254, 0, 0, 0, 0, 0, 1011, 975, 0,
	0, 0, 255, 256, 258, 257, 259, 260, 261, 530,
	1024, 0, 262, 1031, 263, 1030, 0, 1041, 264, 265,
	266, 267, 268, 977, 1010, 944, 269, 1070, 1071, 537,
	0, 270, 271, 1017, 0, 998, 0, 272, 273, 274,
	275, 276, 277, 278, 0, 0, 280, 281, 282, 279,
	0, 283, 0, 284, 285, 286, 0, 287, 1051, 288,
	289, 1001, 999, 1000, 1007, 1003, 1002, 1006, 290, 291,
	292, 293, 1034, 294, 1028, 1027, 948, 298, 295, 296,
	0, 299, 297, 0, 300, 301, 302, 0, 0, 303,
	1019, 305, 0, 306, 307, 0, 308, 309, 310, 0,
	311, 312, 954, 313, 314, 315, 317, 319, 316, 320,
	321, 322, 323, 1042, 1043, 966, 244, 0, 0, 0,
	0, 0, 324, 325, 326, 1026, 0, 0, 0, 327,
	0, 328, 0, 0, 1052, 329, 330, 1039, 1040, 331,
	332, 0, 333, 1049, 0, 976, 334, 0, 335, 336,
	337, 338, 339, 1012, 1013, 1016, 396, 1054, 340, 341,
	0, 342, 343, 344, 345, 0, 0, 0, 245, 346,
	347, 349, 0, 1053, 348, 1021, 1022, 0, 982, 0,
	350, 351, 1055, 1014, 1056, 352, 353, 354, 1057, 355,
	0, 0, 0, 356, 357, 358, 359, 360, 361, 0,
	362, 364, 363, 0, 365, 1050, 1058, 366, 367, 1059,
	0, 368, 369, 370, 1005, 1004, 371, 372, 373, 374,
	0, 375, 376, 378, 380, 377, 379, 384, 381, 382,
	383, 386, 0, 385, 1060, 387, 388, 389, 392, 393,
	391, 1061, 390, 945, 246, 1062, 394, 967, 1015, 395,
	1029, 397, 398, 0, 0, 399, 0, 0, 0, 401,
	402, 403, 0, 0, 404, 405, 559, 1063, 406, 1064,
	1044, 407, 408, 400, 409, 410, 411, 412, 413, 414,
	415, 416, 0, 417, 418, 561, 562, 1045, 419, 564,
	420, 421, 0, 422, 0, 423, 424, 425, 426, 427,
	428, 429, 1025, 431, 430, 432, 0, 433, 0, 0,
	0, 0, 0, 434, 0, 436, 437, 438, 435, 439,
	440, 441, 442, 0, 443, 444, 445, 1065, 446, 447,
	448, 449, 955, 450, 0, 451, 452, 458, 459, 453,
	454, 460, 461, 462, 463, 464, 0, 466, 467, 465,
	468, 469, 470, 1008, 471, 455, 456, 472, 473, 1066,
	474, 475, 476, 477, 478, 479, 1023, 0, 480, 0,
	481, 482, 483, 484, 457, 485, 490, 1069, 486, 487,
	488, 489, 1046, 0, 492, 493, 943, 491, 0, 494,
	495, 496, 497, 498, 499, 318, 500, 0, 501, 1035,
	1036, 1037, 1038, 0, 508, 0, 502, 503, 1047, 504,
	1048, 965, 505, 506, 507, 0, 509, 510, 0, 949,
	511, 512, 513, 515, 516, 514, 517, 1009, 518, 0,
	0, 519, 520, 521, 576, 1032, 1068, 0, 523, 522,
	579, 0, 0, 0, 0, 524, 525, 580, 526, 527,
	528, 946, 0, 0, 0, 0, 0, 0, 942, 0,
	0, 0, 0, 0, 0, 940, 941, 0, 0, 0,
	0, 0, 0, 0, 971, 1676, 0, 2374, 969, 987,
	959, 960, 961, 957, 958, 970, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 247, 248, 249, 250,
	251, 252, 0, 253, 254, 0, 0, 0, 0, 0,
	1011, 975, 0, 0, 0, 255, 256, 258, 257, 259,
	260, 261, 530, 1024, 0, 262, 1031, 263, 1030, 0,
	1041, 264, 265, 266, 267, 268, 977, 1010, 944, 269,
	1070, 1071, 537, 0, 270, 271, 1017, 0, 998, 0,
	272, 273, 274, 275, 276, 277, 278, 0, 0, 280,
	281, 282, 279, 0, 283, 0, 284, 285, 286, 0,
	287, 1051, 288, 289, 1001, 999, 1000, 1007, 1003, 1002,
	1006, 290, 291, 292, 293, 1034, 294, 1028, 1027, 948,
	298, 295, 296, 0, 299, 297, 0, 300, 301, 302,
	0, 0, 303, 1019, 305, 0, 306, 307, 0, 308,
	309, 310, 0, 311, 312, 954, 313, 314, 315, 317,
	319, 316, 320, 321, 322, 323, 1042, 1043, 966, 244,
	0, 0, 0, 0, 0, 324, 325, 326, 1026, 0,
	0, 0, 327, 0, 328, 0, 0, 1052, 329, 330,
	1039, 1040, 331, 332, 0, 333, 1049, 0, 976, 334,
	0, 335, 336, 337, 338, 339, 1012, 1013, 1016, 396,
	1054, 340, 341, 0, 342, 343, 344, 345, 0, 0,
	0, 245, 346, 347, 349, 0, 1053, 348, 1021, 1022,
	0, 982, 0, 350, 351, 1055, 1014, 1056, 352, 353,
	354, 1057, 355, 0, 0, 0, 356, 357, 358, 359,
	360, 361, 0, 362, 364, 363, 0, 365, 1050, 1058,
	366, 367, 1059, 0, 368, 369, 370, 1005, 1004, 371,
	372, 373, 374, 0, 375, 376, 378, 380, 377, 379,
	384, 381, 382, 383, 386, 0, 385, 1060, 387, 388,
	389, 392, 393, 391, 1061, 390, 945, 246, 1062, 394,
	967, 1015, 395, 1029, 397, 398, 0, 0, 399, 0,
	0, 0, 401, 402, 403, 0, 0, 404, 405, 559,
	1063, 406, 1064, 1044, 407, 408, 400, 409, 410, 411,
	412, 413, 414, 415, 416, 0, 417, 418, 561, 562,
	1045, 419, 564, 420, 421, 0, 422, 0, 423, 424,
	425, 426, 427, 428, 429, 1025, 431, 430, 432, 0,
	433, 0, 0, 0, 0, 0, 434, 0, 436, 437,
	438, 435, 439, 440, 441, 442, 0, 443, 444, 445,
	1065, 446, 447, 448, 449, 955, 450, 0, 451, 452,
	458, 459, 453, 454, 460, 461, 462, 463, 464, 0,
	466, 467, 465, 468, 469, 470, 1008, 471, 455, 456,
	472, 473, 1066, 474, 475, 476, 477, 478, 479, 1023,
	0, 480, 0, 481, 482, 483, 484, 457, 485, 490,
	1069, 486, 487, 488, 489, 1046, 0, 492, 493, 943,
	491, 0, 494, 495, 496, 497, 498, 499, 318, 500,
	0, 501, 1035, 1036, 1037, 1038, 0, 508, 0, 502,
	503, 1047, 504, 1048, 965, 505, 506, 507, 0, 509,
	510, 0, 949, 511, 512, 513, 515, 516, 514, 517,
	1009, 518, 0, 0, 519, 520, 521, 576, 1032, 1068,
	0, 523, 522, 579, 0, 0, 0, 0, 524, 525,
	580, 526, 527, 528, 946, 0, 0, 0, 0, 0,
	0, 942, 0, 0, 0, 0, 0, 0, 940, 941,
	0, 0, 0, 0, 0, 0, 0, 971, 0, 0,
	2372, 969, 987, 959, 960, 961, 957, 958, 970, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 247,
	248, 249, 250, 251, 252, 0, 253, 254, 0, 0,
	0, 0, 0, 1011, 975, 0, 0, 0, 255, 256,
	258, 257, 259, 260, 261, 530, 1024, 0, 262, 1031,
	263, 1030, 0, 1041, 264, 265, 266, 267, 268, 977,
	1010, 944, 269, 1070, 1071, 537, 0, 270, 271, 1017,
	0, 998, 0, 272, 273, 274, 275, 276, 277, 278,
	0, 0, 280, 281, 282, 279, 0, 283, 0, 284,
	285, 286, 0, 287, 1051, 288, 289, 1001, 999, 1000,
	1007, 1003, 1002, 1006, 290, 291, 292, 293, 1034, 294,
	1028, 1027, 948, 298, 295, 296, 0, 299, 297, 0,
	300, 301, 302, 0, 0, 303, 1019, 305, 0, 306,
	307, 0, 308, 309, 310, 0, 311, 312, 954, 313,
	314, 315, 317, 319, 316, 320, 321, 322, 323, 1042,
	1043, 966, 244, 0, 0, 0, 0, 0, 324, 325,
	326, 1026, 0, 0, 0, 327, 0, 328, 0, 0,
	1052, 329, 330, 1039, 1040, 331, 332, 0, 333, 1049,
	0, 976, 334, 0, 335, 336, 337, 338, 339, 1012,
	1013, 1016, 396, 1054, 340, 341, 0, 342, 343, 344,
	345, 0, 0, 0, 245, 346, 347, 349, 0, 1053,
	348, 1021, 1022, 0, 982, 0, 350, 351, 1055, 1014,
	1056, 352, 353, 354, 1057, 355, 0, 0, 0, 356,
	357, 358, 359, 360, 361, 0, 362, 364, 363, 0,
	365, 1050, 1058, 366, 367, 1059, 0, 368, 369, 370,
	1005, 1004, 371, 372, 373, 374, 0, 375, 376, 378,
	380, 377, 379, 384, 381, 382, 383, 386, 0, 385,
	1060, 387, 388, 389, 392, 393, 391, 1061, 390, 945,
	246, 1062, 394, 967, 1015, 395, 1029, 397, 398, 0,
	0, 399, 0, 0, 0, 401, 402, 403, 0, 0,
	404, 405, 559, 1063, 406, 1064, 1044, 407, 408, 400,
	409, 410, 411, 412, 413, 414, 415, 416, 0, 417,
	418, 561, 562, 1045, 419, 564, 420, 421, 0, 422,
	0, 423, 424, 425, 426, 427, 428, 429, 1025, 431,
	430, 432, 0, 433, 0, 0, 0, 0, 0, 434,
	0, 436, 437, 438, 435, 439, 440, 441, 442, 0,
	443, 444, 445, 1065, 446, 447, 448, 449, 955, 450,
	0, 451, 452, 458, 459, 453, 454, 460, 461, 462,
	463, 464, 0, 466, 467, 465, 468, 469, 470, 1008,
	471, 455, 456, 472, 473, 1066, 474, 475, 476, 477,
	478, 479, 1023, 0, 480, 0, 481, 482, 483, 484,
	457, 485, 490, 1069, 486, 487, 488, 489, 1046, 0,
	492, 493, 943, 491, 0, 494, 495, 496, 497, 498,
	499, 318, 500, 0, 501, 1035, 1036, 1037, 1038, 0,
	508, 0, 502, 503, 1047, 504, 1048, 965, 505, 506,
	507, 0, 509, 510, 0, 949, 511, 512, 513, 515,
	516, 514, 517, 1009, 518, 0, 0, 519, 520, 521,
	576, 1032, 1068, 0, 523, 522, 579, 0, 0, 0,
	0, 524, 525, 580, 526, 527, 528, 946, 0, 0,
	0, 0, 0, 0, 942, 0, 0, 0, 0, 0,
	0, 940, 941, 0, 0, 0, 0, 0, 0, 0,
	971, 0, 0, 2360, 969, 987, 959, 960, 961, 957,
	958, 970, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 247, 248, 249, 250, 251, 252, 0, 253,
	254, 0, 0, 0, 0, 0, 1011, 975, 0, 0,
	0, 255, 256, 258, 257, 259, 260, 261, 530, 1024,
	0, 262, 1031, 263, 1030, 0, 1041, 264, 265, 266,
	267, 268, 977, 1010, 944, 269, 1070, 1071, 537, 0,
	270, 271, 1017, 0, 998, 0, 272, 273, 274, 275,
	276, 277, 278, 0, 0, 280, 281, 282, 279, 0,
	283, 0, 284, 285, 286, 0, 287, 1051, 288, 289,
	1001, 999, 1000, 1007, 1003, 1002, 1006, 290, 291, 292,
	293, 1034, 294, 1028, 1027, 948, 298, 295, 296, 0,
	299, 297, 0, 300, 301, 302, 0, 0, 303, 1019,
	305, 0, 306, 307, 0, 308, 309, 310, 0, 311,
	312, 954, 313, 314, 315, 317, 319, 316, 320, 321,
	322, 323, 1042, 1043, 966, 244, 0, 0, 0, 0,
	0, 324, 325, 326, 1026, 0, 0, 0, 327, 0,
	328, 0, 0, 1052, 329, 330, 1039, 1040, 331, 332,
	0, 333, 1049, 0, 976, 334, 0, 335, 336, 337,
	338, 339, 1012, 1013, 1016, 396, 1054, 340, 341, 0,
	342, 343, 344, 345, 0, 0, 0, 245, 346, 347,
	349, 0, 1053, 348, 1021, 1022, 0, 982, 0, 350,
	351, 1055, 1014, 1056, 352, 353, 354, 1057, 355, 0,
	0, 0, 356, 357, 358, 359, 360, 361, 0, 362,
	364, 363, 0, 365, 1050, 1058, 366, 367, 1059, 0,
	368, 369, 370, 1005, 1004, 371, 372, 373, 374, 0,
	375, 376, 378, 380, 377, 379, 384, 381, 382, 383,
	386, 0, 385, 1060, 387, 388, 389, 392, 393, 391,
	1061, 390, 945, 246, 1062, 394, 967, 1015, 395, 1029,
	397, 398, 0, 0, 399, 0, 0, 0, 401, 402,
	403, 0, 0, 404, 405, 559, 1063, 406, 1064, 1044,
	407, 408, 400, 409, 410, 411, 412, 413, 414, 415,
	416, 0, 417, 418, 561, 562, 1045, 419, 564, 420,
	421, 0, 422, 0, 423, 424, 425, 426, 427, 428,
	429, 1025, 431, 430, 432, 0, 433, 0, 0, 0,
	0, 0, 434, 0, 436, 437, 438, 435, 439, 440,
	441, 442, 0, 443, 444, 445, 1065, 446, 447, 448,
	449, 955, 450, 0, 451, 452, 458, 459, 453, 454,
	460, 461, 462, 463, 464, 0, 466, 467, 465, 468,
	469, 470, 1008, 471, 455, 456, 472, 473, 1066, 474,
	475, 476, 477, 478, 479, 1023, 0, 480, 0, 481,
	482, 483, 484, 457, 485, 490, 1069, 486, 487, 488,
	489, 1046, 0, 492, 493, 943, 491, 0, 494, 495,
	496, 497, 498, 499, 318, 500, 0, 501, 1035, 1036,
	1037, 1038, 0, 508, 0, 502, 503, 1047, 504, 1048,
	965, 505, 506, 507, 0, 509, 510, 0, 949, 511,
	512, 513, 515, 516, 514, 517, 1009, 518, 0, 0,
	519, 520, 521, 576, 1032, 1068, 0, 523, 522, 579,
	0, 0, 0, 0, 524, 525, 580, 526, 527, 528,
	946, 0, 0, 0, 0, 0, 0, 942, 0, 0,
	0, 0, 0, 0, 940, 941, 0, 0, 0, 0,
	0, 0, 0, 971, 0, 0, 2349, 969, 987, 959,
	960, 961, 957, 958, 970, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 247, 248, 249, 250, 251,
	252, 0, 253, 254, 0, 0, 0, 0, 0, 1011,
	975, 0, 0, 0, 255, 256, 258, 257, 259, 260,
	261, 530, 1024, 0, 262, 1031, 263, 1030, 0, 1041,
	264, 265, 266, 267, 268, 977, 1010, 944, 269, 1070,
	1071, 537, 0, 270, 271, 1017, 0, 998, 0, 272,
	273, 274, 275, 276, 277, 278, 0, 0, 280, 281,
	282, 279, 0, 283, 0, 284, 285, 286, 0, 287,
	1051, 288, 289, 1001, 999, 1000, 1007, 1003, 1002, 1006,
	290, 291, 292, 293, 1034, 294, 1028, 1027, 948, 298,
	295, 296, 0, 299, 297, 0, 300, 301, 302, 0,
	0, 303, 1019, 305, 0, 306, 307, 0, 308, 309,
	310, 0, 311, 312, 954, 313, 314, 315, 317, 319,
	316, 320, 321, 322, 323, 1042, 1043, 966, 244, 0,
	0, 0, 0, 0, 324, 325, 326, 1026, 0, 0,
	0, 327, 0, 328, 0, 0, 1052, 329, 330, 1039,
	1040, 331, 332, 0, 333, 1049, 0, 976, 334, 0,
	335, 336, 337, 338, 339, 1012, 1013, 1016, 396, 1054,
	340, 341, 0, 342, 343, 344, 345, 0, 0, 0,
	245, 346, 347, 349, 0, 1053, 348, 1021, 1022, 0,
	982, 0, 350, 351, 1055, 1014, 1056, 352, 353, 354,
	1057, 355, 0, 0, 0, 356, 357, 358, 359, 360,
	361, 0, 362, 364, 363, 0, 365, 1050, 1058, 366,
	367, 1059, 0, 368, 369, 370, 1005, 1004, 371, 372,
	373, 374, 0, 375, 376, 378, 380, 377, 379, 384,
	381, 382, 383, 386, 0, 385, 1060, 387, 388, 389,
	392, 393, 391, 1061, 390, 945, 246, 1062, 394, 967,
	1015, 395, 1029, 397, 398, 0, 0, 399, 0, 0,
	0, 401, 402, 403, 0, 0, 404, 405, 559, 1063,
	406, 1064, 1044, 407, 408, 400, 409, 410, 411, 412,
	413, 414, 415, 416, 0, 417, 418, 561, 562, 1045,
	419, 564, 420, 421, 0, 422, 0, 423, 424, 425,
	426, 427, 428, 429, 1025, 431, 430, 432, 0, 433,
	0, 0, 0, 0, 0, 434, 0, 436, 437, 438,
	435, 439, 440, 441, 442, 0, 443, 444, 445, 1065,
	446, 447, 448, 449, 955, 450, 0, 451, 452, 458,
	459, 453, 454, 460, 461, 462, 463, 464, 0, 466,
	467, 465, 468, 469, 470, 1008, 471, 455, 456, 472,
	473, 1066, 474, 475, 476, 477, 478, 479, 1023, 0,
	480, 0, 481, 482, 483, 484, 457, 485, 490, 1069,
	486, 487, 488, 489, 1046, 0, 492, 493, 943, 491,
	0, 494, 495, 496, 497, 498, 499, 318, 500, 0,
	501, 1035, 1036, 1037, 1038, 0, 508, 0, 502, 503,
	1047, 504, 1048, 965, 505, 506, 507, 0, 509, 510,
	0, 949, 511, 512, 513, 515, 516, 514, 517, 1009,
	518, 0, 0, 519, 520, 521, 576, 1032, 1068, 0,
	523, 522, 579, 0, 0, 0, 0, 524, 525, 580,
	526, 527, 528, 946, 0, 0, 0, 0, 0, 0,
	942, 0, 0, 0, 0, 0, 0, 940, 941, 0,
	0, 0, 0, 0, 0, 0, 971, 0, 0, 2347,
	969, 2338, 2345, 960, 961, 957, 958, 970, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 247, 248,
	249, 250, 251, 252, 0, 253, 254, 0, 0, 0,
	0, 0, 1011, 975, 0, 0, 0, 255, 256, 258,
	257, 259, 260, 261, 530, 1024, 0, 262, 1031, 263,
	1030, 0, 1041, 264, 265, 266, 267, 268, 977, 1010,
	944, 269, 1070, 1071, 537, 0, 270, 271, 1017, 0,
	998, 0, 272, 273, 274, 275, 276, 277, 278, 0,
	0, 280, 281, 282, 279, 0, 283, 0, 284, 285,
	286, 0, 287, 1051, 288, 289, 1001, 999, 1000, 1007,
	1003, 1002, 1006, 290, 291, 292, 293, 1034, 2341, 1028,
	1027, 948, 298, 295, 296, 0, 299, 297, 0, 300,
	301, 302, 0, 0, 303, 1019, 305, 0, 306, 307,
	0, 308, 309, 310, 0, 311, 312, 954, 313, 314,
	315, 317, 319, 316, 320, 321, 322, 323, 1042, 1043,
	966, 244, 0, 0, 0, 0, 0, 324, 325, 326,
	1026, 0, 0, 0, 327, 0, 328, 0, 0, 1052,
	329, 330, 1039, 1040, 331, 332, 0, 333, 1049, 0,
	976, 334, 0, 335, 336, 337, 2342, 339, 1012, 1013,
	1016, 396, 1054, 340, 341, 0, 342, 343, 344, 345,
	0, 0, 0, 245, 346, 347, 349, 0, 1053, 348,
	1021, 1022, 0, 982, 0, 350, 351, 1055, 1014, 1056,
	352, 353, 354, 1057, 355, 0, 0, 0, 356, 357,
	358, 359, 360, 361, 0, 362, 364, 363, 0, 365,
	1050, 1058, 366, 367, 1059, 0, 368, 369, 370, 1005,
	1004, 371, 372, 373, 374, 0, 375, 376, 378, 380,
	377, 2343, 2340, 381, 382, 383, 386, 0, 385, 1060,
	387, 388, 389, 392, 393, 391, 1061, 390, 945, 246,
	1062, 394, 967, 1015, 395, 1029, 397, 398, 0, 0,
	399, 0, 0, 0, 401, 402, 403, 0, 0, 404,
	405, 559, 1063, 406, 1064, 1044, 407, 408, 400, 409,
	410, 411, 412, 413, 414, 415, 416, 0, 417, 418,
	561, 562, 1045, 419, 564, 420, 421, 0, 422, 0,
	423, 424, 425, 426, 427, 428, 429, 1025, 431, 430,
	432, 0, 433, 0, 0, 0, 0, 0, 434, 0,
	436, 437, 438, 435, 439, 440, 441, 442, 0, 443,
	444, 445, 1065, 446, 447, 448, 449, 955, 450, 0,
	451, 452, 458, 459, 453, 454, 460, 461, 462, 463,
	2344, 0, 466, 467, 465, 468, 469, 470, 1008, 471,
	455, 456, 472, 473, 1066, 474, 475, 476, 477, 478,
	479, 1023, 0, 480, 0, 481, 482, 483, 484, 457,
	485, 490, 1069, 486, 487, 488, 489, 1046, 0, 492,
	493, 943, 491, 0, 494, 495, 496, 497, 498, 499,
	318, 500, 0, 501, 1035, 1036, 1037, 1038, 0, 508,
	0, 502, 503, 1047, 504, 1048, 965, 505, 506, 507,
	0, 509, 510, 0, 949, 511, 512, 513, 515, 516,
	514, 517, 1009, 518, 0, 0, 519, 520, 521, 576,
	1032, 1068, 0, 523, 522, 579, 0, 0, 0, 0,
	524, 525, 580, 526, 2339, 528, 946, 0, 0, 0,
	0, 0, 0, 942, 0, 0, 0, 0, 0, 0,
	940, 941, 0, 0, 0, 0, 0, 0, 0, 971,
	0, 0, 2335, 969, 2338, 2345, 960, 961, 957, 958,
	970, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 247, 248, 249, 250, 251, 252, 0, 253, 254,
	0, 0, 0, 0, 0, 1011, 975, 0, 0, 0,
	255, 256, 258, 257, 259, 260, 261, 530, 1024, 0,
	262, 1031, 263, 1030, 0, 1041, 264, 265, 266, 267,
	268, 977, 1010, 944, 269, 1070, 1071, 537, 0, 270,
	271, 1017, 0, 998, 0, 272, 273, 274, 275, 276,
	277, 278, 0, 0, 280, 281, 282, 279, 0, 283,
	0, 284, 285, 286, 0, 287, 1051, 288, 289, 1001,
	999, 1000, 1007, 1003, 1002, 1006, 290, 291, 292, 293,
	1034, 2341, 1028, 1027, 948, 298, 295, 296, 0, 299,
	297, 0, 300, 301, 302, 0, 0, 303, 1019, 305,
	0, 306, 307, 0, 308, 309, 310, 0, 311, 312,
	954, 313, 314, 315, 317, 319, 316, 320, 321, 322,
	323, 1042, 1043, 966, 244, 0, 0, 0, 0, 0,
	324, 325, 326, 1026, 0, 0, 0, 327, 0, 328,
	0, 0, 1052, 329, 330, 1039, 1040, 331, 332, 0,
	333, 1049, 0, 976, 334, 0, 335, 336, 337, 2342,
	339, 1012, 1013, 1016, 396, 1054, 340, 341, 0, 342,
	343, 344, 345, 0, 0, 0, 245, 346, 347, 349,
	0, 1053, 348, 1021, 1022, 0, 982, 0, 350, 351,
	1055, 1014, 1056, 352, 353, 354, 1057, 355, 0, 0,
	0, 356, 357, 358, 359, 360, 361, 0, 362, 364,
	363, 0, 365, 1050, 1058, 366, 367, 1059, 0, 368,
	369, 370, 1005, 1004, 371, 372, 373, 374, 0, 375,
	376, 378, 380, 377, 2343, 2340, 381, 382, 383, 386,
	0, 385, 1060, 387, 388, 389, 392, 393, 391, 1061,
	390, 945, 246, 1062, 394, 967, 1015, 395, 1029, 397,
	398, 0, 0, 399, 0, 0, 0, 401, 402, 403,
	0, 0, 404, 405, 559, 1063, 406, 1064, 1044, 407,
	408, 400, 409, 410, 411, 412, 413, 414, 415, 416,
	0, 417, 418, 561, 562, 1045, 419, 564, 420, 421,
	0, 422, 0, 423, 424, 425, 426, 427, 428, 429,
	1025, 431, 430, 432, 0, 433, 0, 0, 0, 0,
	0, 434, 0, 436, 437, 438, 435, 439, 440, 441,
	442, 0, 443, 444, 445, 1065, 446, 447, 448, 449,
	955, 450, 0, 451, 452, 458, 459, 453, 454, 460,
	461, 462, 463, 2344, 0, 466, 467, 465, 468, 469,
	470, 1008, 471, 455, 456, 472, 473, 1066, 474, 475,
	476, 477, 478, 479, 1023, 0, 480, 0, 481, 482,
	483, 484, 457, 485, 490, 1069, 486, 487, 488, 489,
	1046, 0, 492, 493, 943, 491, 0, 494, 495, 496,
	497, 498, 499, 318, 500, 0, 501, 1035, 1036, 1037,
	1038, 0, 508, 0, 502, 503, 1047, 504, 1048, 965,
	505, 506, 507, 0, 509, 510, 0, 949, 511, 512,
	513, 515, 516, 514, 517, 1009, 518, 0, 0, 519,
	520, 521, 576, 1032, 1068, 0, 523, 522, 579, 0,
	0, 0, 0, 524, 525, 580, 526, 2339, 528, 946,
	0, 0, 0, 0, 0, 0, 942, 0, 0, 0,
	0, 0, 0, 940, 941, 987, 959, 960, 961, 957,
	958, 970, 971, 0, 0, 0, 969, 0, 0, 0,
	0, 0, 247, 248, 249, 250, 251, 252, 0, 253,
	254, 0, 0, 0, 0, 0, 1011, 975, 0, 0,
	0, 255, 256, 258, 257, 259, 260, 261, 530, 1024,
	0, 262, 1031, 263, 1030, 0, 1041, 264, 265, 266,
	267, 268, 977, 1010, 944, 269, 1070, 1071, 537, 0,
	270, 271, 1017, 0, 998, 0, 272, 273, 274, 275,
	276, 277, 278, 0, 0, 280, 281, 282, 279, 0,
	283, 0, 284, 285, 286, 0, 287, 1051, 288, 289,
	1001, 999, 1000, 1007, 1003, 1002, 1006, 290, 291, 292,
	293, 1034, 294, 1028, 1027, 948, 298, 295, 296, 0,
	299, 297, 0, 300, 301, 302, 0, 0, 303, 1019,
	305, 0, 306, 307, 0, 308, 309, 310, 0, 311,
	312, 954, 313, 314, 315, 317, 319, 316, 320, 321,
	322, 323, 1042, 1043, 966, 244, 0, 0, 0, 0,
	0, 324, 325, 326, 1026, 0, 0, 0, 327, 0,
	328, 0, 0, 1052, 329, 330, 1039, 1040, 331, 332,
	0, 333, 1049, 0, 976, 334, 0, 335, 336, 337,
	338, 339, 1012, 1013, 1016, 396, 1054, 340, 341, 0,
	342, 343, 344, 345, 0, 0, 0, 245, 346, 347,
	349, 0, 1053, 348, 1021, 1022, 0, 982, 0, 350,
	351, 1055, 1014, 1056, 352, 353, 354, 1057, 355, 0,
	0, 0, 356, 357, 358, 359, 360, 361, 0, 362,
	364, 363, 0, 365, 1050, 1058, 366, 367, 1059, 0,
	368, 369, 370, 1005, 1004, 371, 372, 373, 374, 0,
	375, 376, 378, 380, 377, 379, 384, 381, 382, 383,
	386, 0, 385, 1060, 387, 388, 389, 392, 393, 391,
	1061, 390, 945, 246, 1062, 394, 967, 1015, 395, 1029,
	397, 398, 0, 0, 399, 0, 0, 0, 401, 402,
	403, 0, 0, 404, 405, 559, 1063, 406, 1064, 1044,
	407, 408, 400, 409, 410, 411, 412, 413, 414, 415,
	416, 0, 417, 418, 561, 562, 1045, 419, 564, 420,
	421, 0, 422, 0, 423, 424, 425, 426, 427, 428,
	429, 1025, 431, 430, 432, 0, 433, 0, 0, 0,
	0, 0, 434, 0, 436, 437, 438, 435, 439, 440,
	441, 442, 0, 443, 444, 445, 1065, 446, 447, 448,
	449, 955, 450, 0, 451, 452, 458, 459, 453, 454,
	460, 461, 462, 463, 464, 0, 466, 467, 465, 468,
	469, 470, 1008, 471, 455, 456, 472, 473, 1066, 474,
	475, 476, 477, 478, 479, 1023, 0, 480, 0, 481,
	482, 483, 484, 457, 485, 490, 1069, 486, 487, 488,
	489, 1046, 0, 492, 493, 943, 491, 0, 494, 495,
	496, 497, 498, 499, 318, 500, 0, 501, 1035, 1036,
	1037, 1038, 0, 508, 0, 502, 503, 1047, 504, 1048,
	965, 505, 506, 507, 0, 509, 510, 0, 949, 511,
	512, 513, 515, 516, 514, 517, 1009, 518, 0, 0,
	519, 520, 521, 576, 1032, 1068, 0, 523, 522, 579,
	0, 0, 0, 0, 524, 525, 580, 526, 527, 528,
	946, 0, 0, 0, 0, 0, 0, 942, 0, 0,
	0, 0, 0, 0, 940, 941, 0, 0, 0, 0,
	0, 1684, 0, 971, 0, 0, 0, 969, 987, 959,
	960, 961, 957, 958, 970, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 247, 248, 249, 250, 251,
	252, 2153, 253, 254, 0, 0, 0, 0, 0, 1011,
	975, 0, 0, 0, 255, 256, 258, 257, 259, 260,
	261, 530, 1024, 0, 262, 1031, 263, 1030, 0, 1041,
	264, 265, 266, 267, 268, 977, 1010, 944, 269, 1070,
	1071, 537, 0, 270, 271, 1017, 0, 998, 0, 272,
	273, 274, 275, 276, 277, 278, 0, 0, 280, 281,
	282, 279, 0, 283, 0, 284, 285, 286, 0, 287,
	1051, 288, 289, 1001, 999, 1000, 1007, 1003, 1002, 1006,
	290, 291, 292, 293, 1034, 294, 1028, 1027, 948, 298,
	295, 296, 0, 299, 297, 0, 300, 301, 302, 0,
	0, 303, 1019, 305, 0, 306, 307, 0, 308, 309,
	310, 0, 311, 312, 954, 313, 314, 315, 317, 319,
	316, 320, 321, 322, 323, 1042, 1043, 966, 244, 0,
	0, 0, 0, 0, 324, 325, 326, 1026, 0, 0,
	0, 327, 0, 328, 0, 0, 1052, 329, 330, 1039,
	1040, 331, 332, 0, 333, 1049, 0, 976, 334, 0,
	335, 336, 337, 338, 339, 1012, 1013, 1016, 396, 1054,
	340, 341, 0, 342, 343, 344, 345, 0, 0, 0,
	245, 346, 347, 349, 0, 1053, 348, 1021, 1022, 0,
	982, 0, 350, 351, 1055, 1014, 1056, 352, 353, 354,
	1057, 355, 0, 0, 0, 356, 357, 358, 359, 360,
	361, 0, 362, 364, 363, 0, 365, 1050, 1058, 366,
	367, 1059, 0, 368, 369, 370, 1005, 1004, 371, 372,
	373, 374, 0, 375, 376, 378, 380, 377, 379, 384,
	381, 382, 383, 386, 0, 385, 1060, 387, 388, 389,
	392, 393, 391, 1061, 390, 945, 246, 1062, 394, 967,
	1015, 395, 1029, 397, 398, 0, 0, 399, 0, 0,
	0, 401, 402, 403, 0, 0, 404, 405, 559, 1063,
	406, 1064, 1044, 407, 408, 400, 409, 410, 411, 412,
	413, 414, 415, 416, 0, 417, 418, 561, 562, 1045,
	419, 564, 420, 421, 0, 422, 0, 423, 424, 425,
	426, 427, 428, 429, 1025, 431, 430, 432, 0, 433,
	0, 0, 0, 0, 0, 434, 0, 436, 437, 438,
	435, 439, 440, 441, 442, 0, 443, 444, 445, 1065,
	446, 447, 448, 449, 955, 450, 0, 451, 452, 458,
	459, 453, 454, 460, 461, 462, 463, 464, 0, 466,
	467, 465, 468, 469, 470, 1008, 471, 455, 456, 472,
	473, 1066, 474, 475, 476, 477, 478, 479, 1023, 0,
	480, 0, 481, 482, 483, 484, 457, 485, 490, 1069,
	486, 487, 488, 489, 1046, 0, 492, 493, 943, 491,
	0, 494, 495, 496, 497, 498, 499, 318, 500, 0,
	501, 1035, 1036, 1037, 1038, 0, 508, 0, 502, 503,
	1047, 504, 1048, 965, 505, 506, 507, 0, 509, 510,
	0, 949, 511, 512, 513, 515, 516, 514, 517, 1009,
	518, 0, 0, 519, 520, 521, 576, 1032, 1068, 0,
	523, 522, 579, 0, 0, 0, 0, 524, 525, 580,
	526, 527, 528, 946, 0, 0, 0, 0, 0, 0,
	942, 0, 0, 0, 0, 0, 0, 940, 941, 0,
	0, 0, 0, 0, 0, 0, 971, 0, 0, 1536,
	969, 987, 959, 960, 961, 957, 958, 970, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 247, 248,
	249, 250, 251, 252, 0, 253, 254, 0, 0, 0,
	0, 0, 1011, 975, 0, 0, 0, 255, 256, 258,
	257, 259, 260, 261, 530, 1024, 0, 262, 1031, 263,
	1030, 0, 1041, 264, 265, 266, 267, 268, 977, 1010,
	944, 269, 1070, 1071, 537, 0, 270, 271, 1017, 0,
	998, 0, 272, 273, 274, 275, 276, 277, 278, 0,
	0, 280, 281, 282, 279, 0, 283, 0, 284, 285,
	286, 0, 287, 1051, 288, 289, 1001, 999, 1000, 1007,
	1003, 1002, 1006, 290, 291, 292, 293, 1034, 294, 1028,
	1027, 948, 298, 295, 296, 0, 299, 297, 0, 300,
	301, 302, 0, 0, 303, 1019, 305, 0, 306, 307,
	0, 308, 309, 310, 0, 311, 312, 954, 313, 314,
	315, 317, 319, 316, 320, 321, 322, 323, 1042, 1043,
	966, 244, 0, 0, 0, 0, 0, 324, 325, 326,
	1026, 0, 0, 0, 327, 0, 328, 0, 0, 1052,
	329, 330, 1039, 1040, 331, 332, 0, 333, 1049, 0,
	976, 334, 0, 335, 336, 337, 338, 339, 1012, 1013,
	1016, 396, 1054, 340, 341, 0, 342, 343, 344, 345,
	0, 0, 0, 245, 346, 347, 349, 0, 1053, 348,
	1021, 1022, 0, 982, 0, 350, 351, 1055, 1014, 1056,
	352, 353, 354, 1057, 355, 0, 0, 0, 356, 357,
	358, 359, 360, 361, 0, 362, 364, 363, 0, 365,
	1050, 1058, 366, 367, 1059, 0, 368, 369, 370, 1005,
	1004, 371, 372, 373, 374, 0, 375, 376, 378, 380,
	377, 379, 384, 381, 382, 383, 386, 0, 385, 1060,
	387, 388, 389, 392, 393, 391, 1061, 390, 945, 246,
	1062, 394, 967, 1015, 395, 1029, 397, 398, 0, 0,
	399, 0, 0, 0, 401, 402, 403, 0, 0, 404,
	405, 559, 1063, 406, 1064, 1044, 407, 408, 400, 409,
	410, 411, 412, 413, 414, 415, 416, 0, 417, 418,
	561, 562, 1045, 419, 564, 420, 421, 0, 422, 0,
	423, 424, 425, 426, 427, 428, 429, 1025, 431, 430,
	432, 0, 433, 0, 0, 0, 0, 0, 434, 0,
	436, 437, 438, 435, 439, 440, 441, 442, 0, 443,
	444, 445, 1065, 446, 447, 448, 449, 955, 450, 0,
	451, 452, 458, 459, 453, 454, 460, 461, 462, 463,
	464, 0, 466, 467, 465, 468, 469, 470, 1008, 471,
	455, 456, 472, 473, 1066, 474, 475, 476, 477, 478,
	479, 1023, 0, 480, 0, 481, 482, 483, 484, 457,
	485, 490, 1069, 486, 487, 488, 489, 1046, 0, 492,
	493, 943, 491, 0, 494, 495, 496, 497, 498, 499,
	318, 500, 0, 501, 1035, 1036, 1037, 1038, 0, 508,
	0, 502, 503, 1047, 504, 1048, 965, 505, 506, 507,
	0, 509, 510, 0, 949, 511, 512, 513, 515, 516,
	514, 517, 1009, 518, 0, 0, 519, 520, 521, 576,
	1032, 1068, 0, 523, 522, 579, 0, 0, 0, 0,
	524, 525, 580, 526, 527, 528, 946, 0, 0, 0,
	0, 0, 0, 942, 0, 0, 0, 0, 0, 0,
	940, 941, 0, 0, 0, 0, 0, 0, 0, 971,
	0, 0, 1474, 969, 987, 959, 960, 961, 957, 958,
	970, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 247, 248, 249, 250, 251, 252, 0, 253, 254,
	0, 0, 0, 0, 0, 1011, 975, 0, 0, 0,
	255, 256, 258, 257, 259, 260, 261, 530, 1024, 0,
	262, 1031, 263, 1030, 0, 1041, 264, 265, 266, 267,
	268, 977, 1010, 944, 269, 1070, 1071, 537, 0, 270,
	271, 1017, 0, 998, 0, 272, 273, 274, 275, 276,
	277, 278, 0, 0, 280, 281, 282, 279, 0, 283,
	0, 284, 285, 286, 0, 287, 1051, 288, 289, 1001,
	999, 1000, 1007, 1003, 1002, 1006, 290, 291, 292, 293,
	1034, 294, 1028, 1027, 948, 298, 295, 296, 0, 299,
	297, 0, 300, 301, 302, 0, 0, 303, 1019, 305,
	0, 306, 307, 0, 308, 309, 310, 0, 311, 312,
	954, 313, 314, 315, 317, 319, 316, 320, 321, 322,
	323, 1042, 1043, 966, 244, 0, 0, 0, 0, 0,
	324, 325, 326, 1026, 0, 0, 0, 327, 0, 328,
	0, 0, 1052, 329, 330, 1039, 1040, 331, 332, 0,
	333, 1049, 0, 976, 334, 0, 335, 336, 337, 338,
	339, 1012, 1013, 1016, 396, 1054, 340, 341, 0, 342,
	343, 344, 345, 0, 0, 0, 245, 346, 347, 349,
	0, 1053, 348, 1021, 1022, 0, 982, 0, 350, 351,
	1055, 1014, 1056, 352, 353, 354, 1057, 355, 0, 0,
	0, 356, 357, 358, 359, 360, 361, 0, 362, 364,
	363, 0, 365, 1050, 1058, 366, 367, 1059, 0, 368,
	369, 370, 1005, 1004, 371, 372, 373, 374, 0, 375,
	376, 378, 380, 377, 379, 384, 381, 382, 383, 386,
	0, 385, 1060, 387, 388, 389, 392, 393, 391, 1061,
	390, 945, 246, 1062, 394, 967, 1015, 395, 1029, 397,
	398, 0, 0, 399, 0, 0, 0, 401, 402, 403,
	0, 0, 404, 405, 559, 1063, 406, 1064, 1044, 407,
	408, 400, 409, 410, 411, 412, 413, 414, 415, 416,
	0, 417, 418, 561, 562, 1045, 419, 564, 420, 421,
	0, 422, 0, 423, 424, 425, 426, 427, 428, 429,
	1025, 431, 430, 432, 0, 433, 0, 0, 0, 0,
	0, 434, 0, 436, 437, 438, 435, 439, 440, 441,
	442, 0, 443, 444, 445, 1065, 446, 447, 448, 449,
	955, 450, 0, 451, 452, 458, 459, 453, 454, 460,
	461, 462, 463, 464, 0, 466, 467, 465, 468, 469,
	470, 1008, 471, 455, 456, 472, 473, 1066, 474, 475,
	476, 477, 478, 479, 1023, 0, 480, 0, 481, 482,
	483, 484, 457, 485, 490, 1069, 486, 487, 488, 489,
	1046, 0, 492, 493, 943, 491, 0, 494, 495, 496,
	497, 498, 499, 318, 500, 0, 501, 1035, 1036, 1037,
	1038, 0, 508, 0, 502, 503, 1047, 504, 1048, 965,
	505, 506, 507, 0, 509, 510, 0, 949, 511, 512,
	513, 515, 516, 514, 517, 1009, 518, 0, 0, 519,
	520, 521, 576, 1032, 1068, 0, 523, 522, 579, 0,
	0, 0, 0, 524, 525, 580, 526, 527, 528, 946,
	0, 0, 0, 0, 0, 0, 942, 0, 0, 0,
	0, 0, 0, 940, 941, 0, 0, 0, 0, 0,
	0, 0, 971, 0, 0, 1469, 969, 987, 959, 960,
	961, 957, 958, 970, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 247, 248, 249, 250, 251, 252,
	0, 253, 254, 0, 0, 0, 0, 0, 1011, 975,
	0, 0, 0, 255, 256, 258, 257, 259, 260, 261,
	530, 1024, 0, 262, 1031, 263, 1030, 0, 1041, 264,
	265, 266, 267, 268, 977, 1010, 944, 269, 1070, 1071,
	537, 0, 270, 271, 1017, 0, 998, 0, 272, 273,
	274, 275, 276, 277, 278, 0, 0, 280, 281, 282,
	279, 0, 283, 0, 284, 285, 286, 0, 287, 1051,
	288, 289, 1001, 999, 1000, 1007, 1003, 1002, 1006, 290,
	291, 292, 293, 1034, 294, 1028, 1027, 948, 298, 295,
	296, 0, 299, 297, 0, 300, 301, 302, 0, 0,
	303, 1019, 305, 0, 306, 307, 0, 308, 309, 310,
	0, 311, 312, 954, 313, 314, 315, 317, 319, 316,
	320, 321, 322, 323, 1042, 1043, 966, 244, 0, 0,
	0, 0, 0, 324, 325, 326, 1026, 0, 0, 0,
	327, 0, 328, 0, 0, 1052, 329, 330, 1039, 1040,
	331, 332, 0, 333, 1049, 0, 976, 334, 0, 335,
	336, 337, 338, 339, 1012, 1013, 1016, 396, 1054, 340,
	341, 0, 342, 343, 344, 345, 0, 0, 0, 245,
	346, 347, 349, 0, 1053, 348, 1021, 1022, 0, 982,
	0, 350, 351, 1055, 1014, 1056, 352, 353, 354, 1057,
	355, 0, 0, 0, 356, 357, 358, 359, 360, 361,
	0, 362, 364, 363, 0, 365, 1050, 1058, 366, 367,
	1059, 0, 368, 369, 370, 1005, 1004, 371, 372, 373,
	374, 0, 375, 376, 378, 380, 377, 379, 384, 381,
	382, 383, 386, 0, 385, 1060, 387, 388, 389, 392,
	393, 391, 1061, 390, 945, 246, 1062, 394, 967, 1015,
	395, 1029, 397, 398, 0, 0, 399, 0, 0, 0,
	401, 402, 403, 0, 0, 404, 405, 559, 1063, 406,
	1064, 1044, 407, 408, 400, 409, 410, 411, 412, 413,
	414, 415, 416, 0, 417, 418, 561, 562, 1045, 419,
	564, 420, 421, 0, 422, 0, 423, 424, 425, 426,
	427, 428, 429, 1025, 431, 430, 432, 0, 433, 0,
	0, 0, 0, 0, 434, 0, 436, 437, 438, 435,
	439, 440, 441, 442, 0, 443, 444, 445, 1065, 446,
	447, 448, 449, 955, 450, 0, 451, 452, 458, 459,
	453, 454, 460, 461, 462, 463, 464, 0, 466, 467,
	465, 468, 469, 470, 1008, 471, 455, 456, 472, 473,
	1066, 474, 475, 476, 477, 478, 479, 1023, 0, 480,
	0, 481, 482, 483, 484, 457, 485, 490, 1069, 486,
	487, 488, 489, 1046, 0, 492, 493, 943, 491, 0,
	494, 495, 496, 497, 498, 499, 318, 500, 0, 501,
	1035, 1036, 1037, 1038, 0, 508, 0, 502, 503, 1047,
	504, 1048, 965, 505, 506, 507, 0, 509, 510, 0,
	949, 511, 512, 513, 515, 516, 514, 517, 1009, 518,
	0, 0, 519, 520, 521, 576, 1032, 1068, 0, 523,
	522, 579, 0, 0, 0, 0, 524, 525, 580, 526,
	527, 528, 946, 0, 0, 0, 0, 0, 0, 942,
	0, 0, 0, 0, 0, 0, 940, 941, 0, 0,
	0, 0, 0, 0, 0, 971, 0, 0, 1460, 969,
	987, 959, 960, 961, 957, 958, 970, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 247, 248, 249,
	250, 251, 252, 0, 253, 254, 0, 0, 0, 0,
	0, 1011, 975, 0, 0, 0, 255, 256, 258, 257,
	259, 260, 261, 530, 1024, 0, 262, 1031, 263, 1030,
	0, 1041, 264, 265, 266, 267, 268, 977, 1010, 944,
	269, 1070, 1071, 537, 0, 270, 271, 1017, 0, 998,
	0, 272, 273, 274, 275, 276, 277, 278, 0, 0,
	280, 281, 282, 279, 0, 283, 0, 284, 285, 286,
	0, 287, 1051, 288, 289, 1001, 999, 1000, 1007, 1003,
	1002, 1006, 290, 291, 292, 293, 1034, 294, 1028, 1027,
	948, 298, 295, 296, 0, 299, 297, 0, 300, 301,
	302, 0, 0, 303, 1019, 305, 0, 306, 307, 0,
	308, 309, 310, 0, 311, 312, 954, 313, 314, 315,
	317, 319, 316, 320, 321, 322, 323, 1042, 1043, 966,
	244, 0, 0, 0, 0, 0, 324, 325, 326, 1026,
	0, 0, 0, 327, 0, 328, 0, 0, 1052, 329,
	330, 1039, 1040, 331, 332, 0, 333, 1049, 0, 976,
	334, 0, 335, 336, 337, 338, 339, 1012, 1013, 1016,
	396, 1054, 340, 341, 0, 342, 343, 344, 345, 0,
	0, 0, 245, 346, 347, 349, 0, 1053, 348, 1021,
	1022, 0, 982, 0, 350, 351, 1055, 1014, 1056, 352,
	353, 354, 1057, 355, 0, 0, 0, 356, 357, 358,
	359, 360, 361, 0, 362, 364, 363, 0, 365, 1050,
	1058, 366, 367, 1059, 0, 368, 369, 370, 1005, 1004,
	371, 372, 373, 374, 0, 375, 376, 378, 380, 377,
	379, 384, 381, 382, 383, 386, 0, 385, 1060, 387,
	388, 389, 392, 393, 391, 1061, 390, 945, 246, 1062,
	394, 967, 1015, 395, 1029, 397, 398, 0, 0, 399,
	0, 0, 0, 401, 402, 403, 0, 0, 404, 405,
	559, 1063, 406, 1064, 1044, 407, 408, 400, 409, 410,
	411, 412, 413, 414, 415, 416, 0, 417, 418, 561,
	562, 1045, 419, 564, 420, 421, 0, 422, 0, 423,
	424, 425, 426, 427, 428, 429, 1025, 431, 430, 432,
	0, 433, 0, 0, 0, 0, 0, 434, 0, 436,
	437, 438, 435, 439, 440, 441, 442, 0, 443, 444,
	445, 1065, 446, 447, 448, 449, 955, 450, 0, 451,
	452, 458, 459, 453, 454, 460, 461, 462, 463, 464,
	0, 466, 467, 465, 468, 469, 470, 1008, 471, 455,
	456, 472, 473, 1066, 474, 475, 476, 477, 478, 479,
	1023, 0, 480, 0, 481, 482, 483, 484, 457, 485,
	490, 1069, 486, 487, 488, 489, 1046, 0, 492, 493,
	943, 491, 0, 494, 495, 496, 497, 498, 499, 318,
	500, 0, 501, 1035, 1036, 1037, 1038, 0, 508, 0,
	502, 503, 1047, 504, 1048, 965, 505, 506, 507, 0,
	509, 510, 0, 949, 511, 512, 513, 515, 516, 514,
	517, 1009, 518, 0, 0, 519, 520, 521, 576, 1032,
	1068, 0, 523, 522, 579, 0, 0, 0, 0, 524,
	525, 580, 526, 527, 528, 946, 0, 0, 0, 0,
	0, 0, 942, 0, 0, 0, 0, 0, 0, 940,
	941, 0, 0, 0, 0, 0, 0, 0, 971, 0,
	0, 1455, 969, 987, 959, 960, 961, 957, 958, 970,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	247, 248, 249, 250, 251, 252, 0, 253, 254, 0,
	0, 0, 0, 0, 1011, 975, 0, 0, 0, 255,
	256, 258, 257, 259, 260, 261, 530, 1024, 0, 262,
	1031, 263, 1030, 0, 1041, 264, 265, 266, 267, 268,
	977, 1010, 944, 269, 1070, 1071, 537, 0, 270, 271,
	1017, 0, 998, 0, 272, 273, 274, 275, 276, 277,
	278, 0, 0, 280, 281, 282, 279, 0, 283, 0,
	284, 285, 286, 0, 287, 1051, 288, 289, 1001, 999,
	1000, 1007, 1003, 1002, 1006, 290, 291, 292, 293, 1034,
	294, 1028, 1027, 948, 298, 295, 296, 0, 299, 297,
	0, 300, 301, 302, 0, 0, 303, 1019, 305, 0,
	306, 307, 0, 308, 309, 310, 0, 311, 312, 954,
	313, 314, 315, 317, 319, 316, 320, 321, 322, 323,
	1042, 1043, 966, 244, 0, 0, 0, 0, 0, 324,
	325, 326, 1026, 0, 0, 0, 327, 0, 328, 0,
	0, 1052, 329, 330, 1039, 1040, 331, 332, 0, 333,
	1049, 0, 976, 334, 0, 335, 336, 337, 338, 339,
	1012, 1013, 1016, 396, 1054, 340, 341, 0, 342, 343,
	344, 345, 0, 0, 0, 245, 346, 347, 349, 0,
	1053, 348, 1021, 1022, 0, 982, 0, 350, 351, 1055,
	1014, 1056, 352, 353, 354, 1057, 355, 0, 0, 0,
	356, 357, 358, 359, 360, 361, 0, 362, 364, 363,
	0, 365, 1050, 1058, 366, 367, 1059, 0, 368, 369,
	370, 1005, 1004, 371, 372, 373, 374, 0, 375, 376,
	378, 380, 377, 379, 384, 381, 382, 383, 386, 0,
	385, 1060, 387, 388, 389, 392, 393, 391, 1061, 390,
	945, 246, 1062, 394, 967, 1015, 395, 1029, 397, 398,
	0, 0, 399, 0, 0, 0, 401, 402, 403, 0,
	0, 404, 405, 559, 1063, 406, 1064, 1044, 407, 408,
	400, 409, 410, 411, 412, 413, 414, 415, 416, 0,
	417, 418, 561, 562, 1045, 419, 564, 420, 421, 0,
	422, 0, 423, 424, 425, 426, 427, 428, 429, 1025,
	431, 430, 432, 0, 433, 0, 0, 0, 0, 0,
	434, 0, 436, 437, 438, 435, 439, 440, 441, 442,
	0, 443, 444, 445, 1065, 446, 447, 448, 449, 955,
	450, 0, 451, 452, 458, 459, 453, 454, 460, 461,
	462, 463, 464, 0, 466, 467, 465, 468, 469, 470,
	1008, 471, 455, 456, 472, 473, 1066, 474, 475, 476,
	477, 478, 479, 1023, 0, 480, 0, 481, 482, 483,
	484, 457, 485, 490, 1069, 486, 487, 488, 489, 1046,
	0, 492, 493, 943, 491, 0, 494, 495, 496, 497,
	498, 499, 318, 500, 0, 501, 1035, 1036, 1037, 1038,
	0, 508, 0, 502, 503, 1047, 504, 1048, 965, 505,
	506, 507, 0, 509, 510, 0, 949, 511, 512, 513,
	515, 516, 514, 517, 1009, 518, 0, 0, 519, 520,
	521, 576, 1032, 1068, 0, 523, 522, 579, 0, 0,
	0, 0, 524, 525, 580, 526, 527, 528, 946, 0,
	0, 0, 0, 0, 0, 942, 0, 0, 0, 0,
	0, 0, 940, 941, 0, 0, 0, 0, 0, 0,
	0, 971, 0, 0, 1437, 969, 987, 959, 960, 961,
	957, 958, 970, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 247, 248, 249, 250, 251, 252, 0,
	253, 254, 0, 0, 0, 0, 0, 1011, 975, 0,
	0, 0, 255, 256, 258, 257, 259, 260, 261, 530,
	1024, 0, 262, 1031, 263, 1030, 0, 1041, 264, 265,
	266, 267, 268, 977, 1010, 944, 269, 1070, 1071, 537,
	0, 270, 271, 1017, 0, 998, 0, 272, 273, 274,
	275, 276, 277, 278, 0, 0, 280, 281, 282, 279,
	0, 283, 0, 284, 285, 286, 0, 287, 1051, 288,
	289, 1001, 999, 1000, 1007, 1003, 1002, 1006, 290, 291,
	292, 293, 1034, 294, 1028, 1027, 948, 298, 295, 296,
	0, 299, 297, 0, 300, 301, 302, 0, 0, 303,
	1019, 305, 0, 306, 307, 0, 308, 309, 310, 0,
	311, 312, 954, 313, 314, 315, 317, 319, 316, 320,
	321, 322, 323, 1042, 1043, 966, 244, 0, 0, 0,
	0, 0, 324, 325, 326, 1026, 0, 0, 0, 327,
	0, 328, 0, 0, 1052, 329, 330, 1039, 1040, 331,
	332, 0, 333, 1049, 0, 976, 334, 0, 335, 336,
	337, 338, 339, 1012, 1013, 1016, 396, 1054, 340, 341,
	0, 342, 343, 344, 345, 0, 0, 0, 245, 346,
	347, 349, 0, 1053, 348, 1021, 1022, 0, 982, 0,
	350, 351, 1055, 1014, 1056, 352, 353, 354, 1057, 355,
	0, 0, 0, 356, 357, 358, 359, 360, 361, 0,
	362, 364, 363, 0, 365, 1050, 1058, 366, 367, 1059,
	0, 368, 369, 370, 1005, 1004, 371, 372, 373, 374,
	0, 375, 376, 378, 380, 377, 379, 384, 381, 382,
	383, 386, 0, 385, 1060, 387, 388, 389, 392, 393,
	391, 1061, 390, 945, 246, 1062, 394, 967, 1015, 395,
	1029, 397, 398, 0, 0, 399, 0, 0, 0, 401,
	402, 403, 0, 0, 404, 405, 559, 1063, 406, 1064,
	1044, 407, 408, 400, 409, 410, 411, 412, 413, 414,
	415, 416, 0, 417, 418, 561, 562, 1045, 419, 564,
	420, 421, 0, 422, 0, 423, 424, 425, 426, 427,
	428, 429, 1025, 431, 430, 432, 0, 433, 0, 0,
	0, 0, 0, 434, 0, 436, 437, 438, 435, 439,
	440, 441, 442, 0, 443, 444, 445, 1065, 446, 447,
	448, 449, 955, 450, 0, 451, 452, 458, 459, 453,
	454, 460, 461, 462, 463, 464, 0, 466, 467, 465,
	468, 469, 470, 1008, 471, 455, 456, 472, 473, 1066,
	474, 475, 476, 477, 478, 479, 1023, 0, 480, 0,
	481, 482, 483, 484, 457, 485, 490, 1069, 486, 487,
	488, 489, 1046, 0, 492, 493, 943, 491, 0, 494,
	495, 496, 497, 498, 499, 318, 500, 0, 501, 1035,
	1036, 1037, 1038, 0, 508, 0, 502, 503, 1047, 504,
	1048, 965, 505, 506, 507, 0, 509, 510, 0, 949,
	511, 512, 513, 515, 516, 514, 517, 1009, 518, 0,
	0, 519, 520, 521, 576, 1032, 1068, 0, 523, 522,
	579, 0, 0, 0, 0, 524, 525, 580, 526, 527,
	528, 946, 0, 0, 0, 0, 0, 0, 942, 0,
	0, 0, 0, 0, 0, 940, 941, 0, 0, 0,
	0, 0, 0, 0, 971, 0, 0, 1323, 969, 987,
	959, 960, 961, 957, 958, 970, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 247, 248, 249, 250,
	251, 252, 0, 253, 254, 0, 0, 0, 0, 0,
	1011, 975, 0, 0, 0, 255, 256, 258, 257, 259,
	260, 261, 530, 1024, 0, 262, 1031, 263, 1030, 0,
	1041, 264, 265, 266, 267, 268, 977, 1010, 944, 269,
	1070, 1071, 537, 0, 270, 271, 1017, 0, 998, 0,
	272, 273, 274, 275, 276, 277, 278, 0, 0, 280,
	281, 282, 279, 0, 283, 0, 284, 285, 286, 0,
	287, 1051, 288, 289, 1001, 999, 1000, 1007, 1003, 1002,
	1006, 290, 291, 292, 293, 1034, 294, 1028, 1027, 948,
	298, 295, 296, 0, 299, 297, 0, 300, 301, 302,
	0, 0, 303, 1019, 305, 0, 306, 307, 0, 308,
	309, 310, 0, 311, 312, 954, 313, 314, 315, 317,
	319, 316, 320, 321, 322, 323, 1042, 1043, 966, 244,
	0, 0, 0, 0, 0, 324, 325, 326, 1026, 0,
	0, 0, 327, 0, 328, 0, 0, 1052, 329, 330,
	1039, 1040, 331, 332, 0, 333, 1049, 0, 976, 334,
	0, 335, 336, 337, 338, 339, 1322, 1013, 1016, 396,
	1054, 340, 341, 0, 342, 343, 344, 345, 0, 0,
	0, 245, 346, 347, 349, 0, 1053, 348, 1021, 1022,
	0, 982, 0, 350, 351, 1055, 1014, 1056, 352, 353,
	354, 1057, 355, 0, 0, 0, 356, 357, 358, 359,
	360, 361, 0, 362, 364, 363, 0, 365, 1050, 1058,
	366, 367, 1059, 0, 368, 369, 370, 1005, 1004, 371,
	372, 373, 374, 0, 375, 376, 378, 380, 377, 379,
	384, 381, 382, 383, 386, 0, 385, 1060, 387, 388,
	389, 392, 393, 391, 1061, 390, 945, 246, 1062, 394,
	967, 1015, 395, 1029, 397, 398, 0, 0, 399, 0,
	0, 0, 401, 402, 403, 0, 0, 404, 405, 559,
	1063, 406, 1064, 1044, 407, 408, 400, 409, 410, 411,
	412, 413, 414, 415, 416, 0, 417, 418, 561, 562,
	1045, 419, 564, 420, 421, 0, 422, 0, 423, 424,
	425, 426, 427, 428, 429, 1025, 431, 430, 432, 0,
	433, 0, 0, 0, 0, 0, 434, 0, 436, 437,
	438, 435, 439, 440, 441, 442, 0, 443, 444, 445,
	1065, 446, 447, 448, 449, 955, 450, 0, 451, 452,
	458, 459, 453, 454, 460, 461, 462, 463, 464, 0,
	466, 467, 465, 468, 469, 470, 1008, 471, 455, 456,
	472, 473, 1066, 474, 475, 476, 477, 478, 479, 1023,
	0, 480, 0, 481, 482, 483, 484, 457, 485, 490,
	1069, 486, 487, 488, 489, 1046, 0, 492, 493, 943,
	491, 0, 494, 495, 496, 497, 498, 499, 318, 500,
	0, 501, 1035, 1036, 1037, 1038, 0, 508, 0, 502,
	503, 1047, 504, 1048, 965, 505, 506, 507, 0, 509,
	510, 0, 949, 511, 512, 513, 515, 516, 514, 517,
	1009, 518, 0, 0, 519, 520, 521, 576, 1032, 1068,
	0, 523, 522, 579, 0, 0, 0, 0, 524, 525,
	580, 526, 527, 528, 946, 0, 0, 0, 0, 0,
	0, 942, 0, 0, 0, 0, 0, 0, 940, 941,
	0, 0, 0, 0, 0, 0, 0, 971, 0, 0,
	1317, 969, 987, 959, 960, 961, 957, 958, 970, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 247,
	248, 249, 250, 251, 252, 0, 253, 254, 0, 0,
	0, 0, 0, 1011, 975, 0, 0, 0, 255, 256,
	258, 257, 259, 260, 261, 530, 1024, 0, 262, 1031,
	263, 1030, 0, 1041, 264, 265, 266, 267, 268, 977,
	1010, 944, 269, 1070, 1071, 537, 0, 270, 271, 1017,
	0, 998, 0, 272, 273, 274, 275, 276, 277, 278,
	0, 0, 280, 281, 282, 279, 0, 283, 0, 284,
	285, 286, 0, 287, 1051, 288, 289, 1001, 999, 1000,
	1007, 1003, 1002, 1006, 290, 291, 292, 293, 1034, 294,
	1028, 1027, 948, 298, 295, 296, 0, 299, 297, 0,
	300, 301, 302, 0, 0, 303, 1019, 305, 0, 306,
	307, 0, 308, 309, 310, 0, 311, 312, 954, 313,
	314, 315, 317, 319, 316, 320, 321, 322, 323, 1042,
	1043, 966, 244, 0, 0, 0, 0, 0, 324, 325,
	326, 1026, 0, 0, 0, 327, 0, 328, 0, 0,
	1052, 329, 330, 1039, 1040, 331, 332, 0, 333, 1049,
	0, 976, 334, 0, 335, 336, 337, 338, 339, 1316,
	1013, 1016, 396, 1054, 340, 341, 0, 342, 343, 344,
	345, 0, 0, 0, 245, 346, 347, 349, 0, 1053,
	348, 1021, 1022, 0, 982, 0, 350, 351, 1055, 1014,
	1056, 352, 353, 354, 1057, 355, 0, 0, 0, 356,
	357, 358, 359, 360, 361, 0, 362, 364, 363, 0,
	365, 1050, 1058, 366, 367, 1059, 0, 368, 369, 370,
	1005, 1004, 371, 372, 373, 374, 0, 375, 376, 378,
	380, 377, 379, 384, 381, 382, 383, 386, 0, 385,
	1060, 387, 388, 389, 392, 393, 391, 1061, 390, 945,
	246, 1062, 394, 967, 1015, 395, 1029, 397, 398, 0,
	0, 399, 0, 0, 0, 401, 402, 403, 0, 0,
	404, 405, 559, 1063, 406, 1064, 1044, 407, 408, 400,
	409, 410, 411, 412, 413, 414, 415, 416, 0, 417,
	418, 561, 562, 1045, 419, 564, 420, 421, 0, 422,
	0, 423, 424, 425, 426, 427, 428, 429, 1025, 431,
	430, 432, 0, 433, 0, 0, 0, 0, 0, 434,
	0, 436, 437, 438, 435, 439, 440, 441, 442, 0,
	443, 444, 445, 1065, 446, 447, 448, 449, 955, 450,
	0, 451, 452, 458, 459, 453, 454, 460, 461, 462,
	463, 464, 0, 466, 467, 465, 468, 469, 470, 1008,
	471, 455, 456, 472, 473, 1066, 474, 475, 476, 477,
	478, 479, 1023, 0, 480, 0, 481, 482, 483, 484,
	457, 485, 490, 1069, 486, 487, 488, 489, 1046, 0,
	492, 493, 943, 491, 0, 494, 495, 496, 497, 498,
	499, 318, 500, 0, 501, 1035, 1036, 1037, 1038, 0,
	508, 0, 502, 503, 1047, 504, 1048, 965, 505, 506,
	507, 0, 509, 510, 0, 949, 511, 512, 513, 515,
	516, 514, 517, 1009, 518, 0, 0, 519, 520, 521,
	576, 1032, 1068, 0, 523, 522, 579, 0, 0, 0,
	0, 524, 525, 580, 526, 527, 528, 946, 0, 0,
	0, 0, 0, 0, 942, 0, 0, 0, 0, 0,
	0, 940, 941, 0, 0, 0, 0, 0, 0, 0,
	971, 0, 0, 1310, 969, 987, 959, 960, 961, 957,
	958, 970, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 247, 248, 249, 250, 251, 252, 0, 253,
	254, 0, 0, 0, 0, 0, 1011, 975, 0, 0,
	0, 255, 256, 258, 257, 259, 260, 261, 530, 1024,
	0, 262, 1031, 263, 1030, 0, 1041, 264, 265, 266,
	267, 268, 977, 1010, 944, 269, 1070, 1071, 537, 0,
	270, 271, 1017, 0, 998, 0, 272, 273, 274, 275,
	276, 277, 278, 0, 0, 280, 281, 282, 279, 0,
	283, 0, 284, 285, 286, 0, 287, 1051, 288, 289,
	1001, 999, 1000, 1007, 1003, 1002, 1006, 290, 291, 292,
	293, 1034, 294, 1028, 1027, 948, 298, 295, 296, 0,
	299, 297, 0, 300, 301, 302, 0, 0, 303, 1019,
	305, 0, 306, 307, 0, 308, 309, 310, 0, 311,
	312, 954, 313, 314, 315, 317, 319, 316, 320, 321,
	322, 323, 1042, 1043, 966, 244, 0, 0, 0, 0,
	0, 324, 325, 326, 1026, 0, 0, 0, 327, 0,
	328, 0, 0, 1052, 329, 330, 1039, 1040, 331, 332,
	0, 333, 1049, 0, 976, 334, 0, 335, 336, 337,
	338, 339, 1012, 1013, 1016, 396, 1054, 340, 341, 0,
	342, 343, 344, 345, 0, 0, 0, 245, 346, 347,
	349, 0, 1053, 348, 1021, 1022, 0, 982, 0, 350,
	351, 1055, 1014, 1056, 352, 353, 354, 1057, 355, 0,
	0, 0, 356, 357, 358, 359, 360, 361, 0, 362,
	364, 363, 0, 365, 1050, 1058, 366, 367, 1059, 0,
	368, 369, 370, 1005, 1004, 371, 372, 373, 374, 0,
	375, 376, 378, 380, 377, 379, 384, 381, 382, 383,
	386, 0, 385, 1060, 387, 388, 389, 392, 393, 391,
	1061, 390, 945, 246, 1062, 394, 967, 1015, 395, 1029,
	397, 398, 0, 0, 399, 0, 0, 0, 401, 402,
	403, 0, 0, 404, 405, 559, 1063, 406, 1064, 1044,
	407, 408, 400, 409, 410, 411, 412, 413, 414, 415,
	416, 0, 417, 418, 561, 562, 1045, 419, 564, 420,
	421, 0, 422, 0, 423, 424, 425, 426, 427, 428,
	429, 1025, 431, 430, 432, 0, 433, 0, 0, 0,
	0, 0, 434, 0, 436, 437, 438, 435, 439, 440,
	441, 442, 0, 443, 444, 445, 1065, 446, 447, 448,
	449, 955, 450, 0, 451, 452, 458, 459, 453, 454,
	460, 461, 462, 463, 464, 0, 466, 467, 465, 468,
	469, 470, 1008, 471, 455, 456, 472, 473, 1066, 474,
	475, 476, 477, 478, 479, 1023, 0, 480, 0, 481,
	482, 483, 484, 457, 485, 490, 1069, 486, 487, 488,
	489, 1046, 0, 492, 493, 943, 491, 0, 494, 495,
	496, 497, 498, 499, 318, 500, 0, 501, 1035, 1036,
	1037, 1038, 0, 508, 0, 502, 503, 1047, 504, 1048,
	965, 505, 506, 507, 0, 509, 510, 0, 949, 511,
	512, 513, 515, 516, 514, 517, 1009, 518, 0, 0,
	519, 520, 521, 576, 1032, 1068, 0, 523, 522, 579,
	0, 0, 0, 0, 524, 525, 580, 526, 527, 528,
	946, 0, 0, 0, 0, 0, 0, 942, 0, 0,
	0, 0, 0, 0, 940, 941, 987, 959, 960, 961,
	957, 958, 970, 971, 0, 0, 0, 969, 0, 0,
	0, 0, 0, 247, 248, 249, 250, 251, 252, 0,
	253, 254, 0, 0, 0, 0, 0, 1011, 975, 0,
	0, 0, 255, 256, 258, 257, 259, 260, 261, 530,
	1024, 0, 262, 1031, 263, 1030, 0, 1041, 264, 265,
	266, 267, 268, 977, 1010, 944, 269, 1070, 1071, 537,
	0, 270, 271, 1017, 0, 998, 0, 272, 273, 274,
	275, 276, 277, 278, 0, 0, 280, 281, 282, 279,
	0, 283, 0, 284, 285, 286, 0, 287, 1051, 288,
	289, 1001, 999, 1000, 1007, 1003, 1002, 1006, 290, 291,
	292, 293, 1034, 294, 1028, 1027, 948, 298, 295, 296,
	0, 299, 297, 0, 300, 301, 302, 0, 0, 303,
	1019, 305, 0, 306, 307, 0, 308, 309, 310, 0,
	311, 312, 954, 313, 314, 315, 317, 319, 316, 320,
	321, 322, 323, 1042, 1043, 966, 244, 0, 0, 0,
	0, 0, 324, 325, 326, 1026, 0, 0, 0, 327,
	0, 328, 0, 0, 1052, 329, 330, 1039, 1040, 331,
	332, 0, 333, 1049, 0, 976, 334, 0, 335, 336,
	337, 338, 339, 1012, 1013, 1016, 396, 1054, 340, 341,
	0, 342, 343, 344, 345, 0, 0, 0, 245, 346,
	347, 349, 0, 1053, 348, 1021, 1022, 0, 982, 0,
	350, 351, 1055, 1014, 1056, 352, 353, 354, 1057, 355,
	0, 0, 0, 356, 357, 358, 359, 360, 361, 0,
	362, 364, 363, 0, 365, 1050, 1058, 366, 367, 1059,
	0, 368, 369, 370, 1005, 1004, 371, 372, 373, 374,
	0, 375, 376, 378, 380, 377, 379, 384, 381, 382,
	383, 386, 0, 385, 1060, 387, 388, 389, 392, 393,
	391, 1061, 390, 945, 246, 1062, 394, 967, 1015, 395,
	1029, 397, 398, 0, 0, 399, 0, 0, 0, 401,
	402, 403, 0, 0, 404, 405, 559, 1063, 406, 1064,
	1044, 407, 408, 400, 409, 410, 411, 412, 413, 414,
	415, 416, 0, 417, 418, 561, 562, 1045, 419, 564,
	420, 421, 0, 422, 0, 423, 424, 425, 426, 427,
	428, 429, 1025, 431, 430, 432, 0, 433, 0, 0,
	0, 0, 0, 434, 0, 436, 437, 438, 435, 439,
	440, 441, 442, 0, 443, 444, 445, 1065, 446, 447,
	448, 449, 955, 450, 0, 451, 452, 458, 459, 453,
	454, 460, 461, 462, 463, 464, 0, 466, 467, 465,
	468, 469, 470, 1008, 471, 455, 456, 472, 473, 1066,
	474, 475, 476, 477, 478, 479, 1023, 0, 480, 0,
	481, 482, 483, 484, 457, 485, 490, 1069, 486, 487,
	488, 489, 1046, 0, 492, 493, 943, 491, 0, 494,
	495, 496, 497, 498, 499, 318, 500, 0, 501, 1035,
	1036, 1037, 1038, 0, 508, 0, 502, 503, 1047, 504,
	1048, 965, 505, 506, 507, 0, 509, 510, 0, 949,
	511, 512, 513, 515, 516, 514, 517, 1009, 518, 0,
	0, 519, 520, 521, 576, 1032, 1068, 0, 523, 522,
	579, 0, 0, 0, 0, 524, 525, 580, 526, 527,
	528, 946, 0, 0, 0, 0, 0, 0, 942, 0,
	0, 0, 0, 0, 0, 940, 941, 987, 959, 960,
	961, 957, 958, 970, 971, 0, 0, 0, 969, 0,
	0, 0, 0, 0, 247, 248, 249, 250, 251, 252,
	0, 253, 254, 0, 0, 0, 0, 0, 1011, 975,
	0, 0, 0, 255, 256, 258, 257, 259, 260, 261,
	530, 1024, 0, 262, 1031, 263, 1030, 0, 1041, 264,
	265, 266, 267, 268, 977, 1010, 944, 269, 1070, 1071,
	537, 0, 270, 271, 1017, 0, 998, 0, 272, 273,
	274, 275, 276, 277, 278, 0, 0, 280, 281, 282,
	279, 0, 283, 0, 284, 285, 286, 0, 287, 1051,
	288, 4044, 1001, 999, 1000, 1007, 1003, 1002, 1006, 290,
	291, 292, 293, 1034, 294, 1028, 1027, 948, 298, 295,
	296, 0, 299, 297, 0, 300, 301, 302, 0, 0,
	303, 1019, 305, 0, 306, 307, 0, 308, 309, 310,
	0, 311, 312, 954, 313, 314, 315, 317, 319, 316,
	320, 321, 322, 323, 1042, 1043, 966, 244, 0, 0,
	0, 0, 0, 324, 325, 326, 1026, 0, 0, 0,
	327, 0, 328, 0, 0, 1052, 329, 330, 1039, 1040,
	331, 332, 0, 333, 1049, 0, 976, 334, 0, 335,
	336, 337, 338, 339, 1012, 1013, 1016, 396, 1054, 340,
	341, 0, 342, 343, 344, 345, 0, 0, 0, 245,
	346, 347, 349, 0, 1053, 348, 1021, 1022, 0, 982,
	0, 350, 351, 1055, 1014, 1056, 352, 353, 354, 1057,
	355, 0, 0, 0, 356, 357, 358, 359, 360, 361,
	0, 362, 364, 363, 0, 365, 1050, 1058, 366, 367,
	1059, 0, 368, 369, 370, 1005, 1004, 371, 372, 373,
	374, 0, 375, 376, 378, 380, 377, 379, 384, 381,
	382, 383, 386, 0, 385, 1060, 387, 388, 389, 392,
	393, 391, 1061, 390, 945, 246, 1062, 394, 967, 1015,
	395, 1029, 397, 398, 0, 0, 399, 0, 0, 0,
	401, 402, 403, 0, 0, 404, 405, 559, 1063, 406,
	1064, 1044, 407, 408, 400, 409, 410, 411, 412, 413,
	414, 415, 416, 0, 417, 418, 561, 562, 1045, 419,
	564, 420, 421, 0, 422, 0, 423, 424, 425, 426,
	427, 428, 429, 1025, 431, 430, 432, 0, 433, 0,
	0, 0, 0, 0, 434, 0, 436, 437, 438, 435,
	439, 440, 441, 442, 0, 443, 444, 445, 1065, 446,
	447, 448, 449, 955, 450, 0, 451, 452, 458, 459,
	453, 454, 460, 461, 462, 463, 464, 0, 466, 467,
	465, 468, 469, 470, 1008, 471, 455, 456, 472, 473,
	1066, 474, 475, 476, 477, 478, 479, 1023, 0, 480,
	0, 481, 482, 483, 484, 457, 485, 490, 1069, 486,
	487, 488, 489, 1046, 0, 492, 493, 943, 491, 0,
	494, 495, 496, 497, 498, 499, 318, 500, 0, 501,
	1035, 1036, 1037, 1038, 0, 508, 0, 502, 503, 1047,
	504, 1048, 965, 505, 506, 507, 0, 4043, 510, 0,
	949, 511, 512, 513, 515, 516, 514, 517, 1009, 518,
	0, 0, 519, 520, 521, 576, 1032, 1068, 0, 523,
	522, 579, 0, 0, 0, 0, 524, 525, 580, 526,
	527, 528, 946, 0, 0, 0, 0, 0, 0, 942,
	0, 0, 0, 0, 0, 0, 940, 941, 987, 959,
	960, 961, 957, 958, 970, 971, 0, 0, 0, 969,
	0, 0, 0, 0, 0, 247, 248, 249, 250, 251,
	252, 0, 253, 254, 0, 0, 0, 0, 0, 1011,
	975, 0, 0, 0, 255, 256, 258, 257, 259, 260,
	261, 4042, 1024, 0, 262, 1031, 263, 1030, 0, 1041,
	264, 265, 266, 267, 268, 977, 1010, 944, 269, 1070,
	1071, 537, 0, 270, 271, 1017, 0, 998, 0, 272,
	273, 274, 275, 276, 277, 278, 0, 0, 280, 281,
	282, 279, 0, 283, 0, 284, 285, 286, 0, 287,
	1051, 288, 4044, 1001, 999, 1000, 1007, 1003, 1002, 1006,
	290, 291, 292, 293, 1034, 294, 1028, 1027, 948, 298,
	295, 296, 0, 299, 297, 0, 300, 301, 302, 0,
	0, 303, 1019, 305, 0, 306, 307, 0, 308, 309,
	310, 0, 311, 312, 954, 313, 314, 315, 317, 319,
	316, 320, 321, 322, 323, 1042, 1043, 966, 244, 0,
	0, 0, 0, 0, 324, 325, 326, 1026, 0, 0,
	0, 327, 0, 328, 0, 0, 1052, 329, 330, 1039,
	1040, 331, 332, 0, 333, 1049, 0, 976, 334, 0,
	335, 336, 337, 338, 339, 1012, 1013, 1016, 396, 1054,
	340, 341, 0, 342, 343, 344, 345, 0, 0, 0,
	245, 346, 347, 349, 0, 1053, 348, 1021, 1022, 0,
	982, 0, 350, 351, 1055, 1014, 1056, 352, 353, 354,
	1057, 355, 0, 0, 0, 356, 357, 358, 359, 360,
	361, 0, 362, 364, 363, 0, 365, 1050, 1058, 366,
	367, 1059, 0, 368, 369, 370, 1005, 1004, 371, 372,
	373, 374, 0, 375, 376, 378, 380, 377, 379, 384,
	381, 382, 383, 386, 0, 385, 1060, 387, 388, 389,
	392, 393, 391, 1061, 390, 945, 246, 1062, 394, 967,
	1015, 395, 1029, 397, 398, 0, 0, 399, 0, 0,
	0, 401, 402, 403, 0, 0, 404, 405, 559, 1063,
	406, 1064, 1044, 407, 408, 400, 409, 410, 411, 412,
	413, 414, 415, 416, 0, 417, 418, 561, 562, 1045,
	419, 564, 420, 421, 0, 422, 0, 423, 424, 425,
	426, 427, 428, 429, 1025, 431, 430, 432, 0, 433,
	0, 0, 0, 0, 0, 434, 0, 436, 437, 438,
	435, 439, 440, 441, 442, 0, 443, 444, 445, 1065,
	446, 447, 448, 449, 955, 450, 0, 451, 452, 458,
	459, 453, 454, 460, 461, 462, 463, 464, 0, 466,
	467, 465, 468, 469, 470, 1008, 471, 455, 456, 472,
	473, 1066, 474, 475, 476, 477, 478, 479, 1023, 0,
	480, 0, 481, 482, 483, 484, 457, 485, 490, 1069,
	486, 487, 488, 489, 1046, 0, 492, 493, 943, 491,
	0, 494, 495, 496, 497, 498, 499, 318, 500, 0,
	501, 1035, 1036, 1037, 1038, 0, 508, 0, 502, 503,
	1047, 504, 1048, 965, 505, 506, 507, 0, 4043, 510,
	0, 949, 511, 512, 513, 515, 516, 514, 517, 1009,
	518, 0, 0, 519, 520, 521, 576, 1032, 1068, 0,
	523, 522, 579, 0, 0, 0, 0, 524, 525, 580,
	526, 527, 528, 946, 0, 0, 0, 0, 0, 0,
	942, 0, 0, 0, 0, 0, 0, 940, 941, 987,
	959, 960, 961, 2747, 2748, 970, 971, 0, 0, 0,
	969, 0, 0, 0, 0, 0, 247, 248, 249, 250,
	251, 252, 0, 253, 254, 0, 0, 0, 0, 0,
	1011, 975, 0, 0, 0, 255, 256, 258, 257, 259,
	260, 261, 530, 1024, 0, 262, 1031, 263, 1030, 0,
	1041, 264, 265, 266, 267, 268, 977, 1010, 944, 269,
	1070, 1071, 537, 0, 270, 271, 1017, 0, 998, 0,
	272, 273, 274, 275, 276, 277, 278, 0, 0, 280,
	281, 282, 279, 0, 283, 0, 284, 285, 286, 0,
	287, 1051, 288, 289, 1001, 999, 1000, 1007, 1003, 1002,
	1006, 290, 291, 292, 293, 1034, 294, 1028, 1027, 948,
	298, 295, 296, 0, 299, 297, 0, 300, 301, 302,
	0, 0, 303, 1019, 305, 0, 306, 307, 0, 308,
	309, 310, 0, 311, 312, 954, 313, 314, 315, 317,
	319, 316, 320, 321, 322, 323, 1042, 1043, 966, 244,
	0, 0, 0, 0, 0, 324, 325, 326, 1026, 0,
	0, 0, 327, 0, 328, 0, 0, 1052, 329, 330,
	1039, 1040, 331, 332, 0, 333, 1049, 0, 976, 334,
	0, 335, 336, 337, 338, 339, 1012, 1013, 1016, 396,
	1054, 340, 341, 0, 342, 343, 344, 345, 0, 0,
	0, 245, 346, 347, 349, 0, 1053, 348, 1021, 1022,
	0, 982, 0, 350, 351, 1055, 1014, 1056, 352, 353,
	354, 1057, 355, 0, 0, 0, 356, 357, 358, 359,
	360, 361, 0, 362, 364, 363, 0, 365, 1050, 1058,
	366, 367, 1059, 0, 368, 369, 370, 1005, 1004, 371,
	372, 373, 374, 0, 375, 376, 378, 380, 377, 379,
	384, 381, 382, 383, 386, 0, 385, 1060, 387, 388,
	389, 392, 393, 391, 1061, 390, 945, 246, 1062, 394,
	967, 1015, 395, 1029, 397, 398, 0, 0, 399, 0,
	0, 0, 401, 402, 403, 0, 0, 404, 405, 559,
	1063, 406, 1064, 1044, 407, 408, 400, 409, 410, 411,
	412, 413, 414, 415, 416, 0, 417, 418, 561, 562,
	1045, 419, 564, 420, 421, 0, 422, 0, 423, 424,
	425, 426, 427, 428, 429, 1025, 431, 430, 432, 0,
	433, 0, 0, 0, 0, 0, 434, 0, 436, 437,
	438, 435, 439, 440, 441, 442, 0, 443, 444, 445,
	1065, 446, 447, 448, 449, 955, 450, 0, 451, 452,
	458, 459, 453, 454, 460, 461, 462, 463, 464, 0,
	466, 467, 465, 468, 469, 470, 1008, 471, 455, 456,
	472, 473, 1066, 474, 475, 476, 477, 478, 479, 1023,
	0, 480, 0, 481, 482, 483, 484, 457, 485, 490,
	1069, 486, 487, 488, 489, 1046, 0, 492, 493, 943,
	491, 0, 494, 495, 496, 497, 498, 499, 318, 500,
	0, 501, 1035, 1036, 1037, 1038, 0, 508, 0, 502,
	503, 1047, 504, 1048, 965, 505, 506, 507, 0, 509,
	510, 0, 949, 511, 512, 513, 515, 516, 514, 517,
	1009, 518, 0, 0, 519, 520, 521, 576, 1032, 1068,
	0, 523, 522, 579, 0, 0, 0, 0, 524, 525,
	580, 526, 527, 528, 946, 0, 0, 0, 0, 0,
	0, 942, 0, 0, 0, 0, 0, 0, 940, 941,
	987, 959, 960, 961, 2745, 2746, 970, 971, 0, 0,
	0, 969, 0, 0, 0, 0, 0, 247, 248, 249,
	250, 251, 252, 0, 253, 254, 0, 0, 0, 0,
	0, 1011, 975, 0, 0, 0, 255, 256, 258, 257,
	259, 260, 261, 530, 1024, 0, 262, 1031, 263, 1030,
	0, 1041, 264, 265, 266, 267, 268, 977, 1010, 944,
	269, 1070, 1071, 537, 0, 270, 271, 1017, 0, 998,
	0, 272, 273, 274, 275, 276, 277, 278, 0, 0,
	280, 281, 282, 279, 0, 283, 0, 284, 285, 286,
	0, 287, 1051, 288, 289, 1001, 999, 1000, 1007, 1003,
	1002, 1006, 290, 291, 292, 293, 1034, 294, 1028, 1027,
	948, 298, 295, 296, 0, 299, 297, 0, 300, 301,
	302, 0, 0, 303, 1019, 305, 0, 306, 307, 0,
	308, 309, 310, 0, 311, 312, 954, 313, 314, 315,
	317, 319, 316, 320, 321, 322, 323, 1042, 1043, 966,
	244, 0, 0, 0, 0, 0, 324, 325, 326, 1026,
	0, 0, 0, 327, 0, 328, 0, 0, 1052, 329,
	330, 1039, 1040, 331, 332, 0, 333, 1049, 0, 976,
	334, 0, 335, 336, 337, 338, 339, 1012, 1013, 1016,
	396, 1054, 340, 341, 0, 342, 343, 344, 345, 0,
	0, 0, 245, 346, 347, 349, 0, 1053, 348, 1021,
	1022, 0, 982, 0, 350, 351, 1055, 1014, 1056, 352,
	353, 354, 1057, 355, 0, 0, 0, 356, 357, 358,
	359, 360, 361, 0, 362, 364, 363, 0, 365, 1050,
	1058, 366, 367, 1059, 0, 368, 369, 370, 1005, 1004,
	371, 372, 373, 374, 0, 375, 376, 378, 380, 377,
	379, 384, 381, 382, 383, 386, 0, 385, 1060, 387,
	388, 389, 392, 393, 391, 1061, 390, 945, 246, 1062,
	394, 967, 1015, 395, 1029, 397, 398, 0, 0, 399,
	0, 0, 0, 401, 402, 403, 0, 0, 404, 405,
	559, 1063, 406, 1064, 1044, 407, 408, 400, 409, 410,
	411, 412, 413, 414, 415, 416, 0, 417, 418, 561,
	562, 1045, 419, 564, 420, 421, 0, 422, 0, 423,
	424, 425, 426, 427, 428, 429, 1025, 431, 430, 432,
	0, 433, 0, 0, 0, 0, 0, 434, 0, 436,
	437, 438, 435, 439, 440, 441, 442, 0, 443, 444,
	445, 1065, 446, 447, 448, 449, 955, 450, 0, 451,
	452, 458, 459, 453, 454, 460, 461, 462, 463, 464,
	0, 466, 467, 465, 468, 469, 470, 1008, 471, 455,
	456, 472, 473, 1066, 474, 475, 476, 477, 478, 479,
	1023, 0, 480, 0, 481, 482, 483, 484, 457, 485,
	490, 1069, 486, 487, 488, 489, 1046, 0, 492, 493,
	943, 491, 0, 494, 495, 496, 497, 498, 499, 318,
	500, 0, 501, 1035, 1036, 1037, 1038, 0, 508, 0,
	502, 503, 1047, 504, 1048, 965, 505, 506, 507, 0,
	509, 510, 0, 949, 511, 512, 513, 515, 516, 514,
	517, 1009, 518, 0, 0, 519, 520, 521, 576, 1032,
	1068, 0, 523, 522, 579, 0, 0, 0, 0, 524,
	525, 580, 526, 527, 528, 946, 0, 0, 0, 0,
	0, 0, 942, 0, 0, 0, 0, 0, 0, 940,
	941, 987, 959, 960, 961, 957, 958, 970, 971, 0,
	0, 0, 969, 0, 0, 0, 0, 0, 247, 248,
	249, 250, 251, 252, 0, 253, 254, 0, 0, 0,
	0, 0, 1011, 975, 0, 0, 0, 255, 256, 258,
	257, 259, 260, 261, 530, 1024, 0, 262, 1031, 263,
	1030, 0, 1041, 264, 265, 266, 267, 268, 977, 1010,
	944, 269, 1070, 1071, 537, 0, 270, 271, 1017, 0,
	998, 0, 272, 273, 274, 275, 276, 277, 278, 0,
	0, 280, 281, 282, 279, 0, 283, 0, 284, 285,
	286, 0, 287, 1051, 288, 289, 1001, 999, 1000, 1007,
	1003, 1002, 1006, 290, 291, 292, 293, 1034, 294, 1028,
	1027, 948, 298, 295, 296, 0, 299, 297, 0, 300,
	301, 302, 0, 0, 303, 1019, 305, 0, 306, 307,
	0, 308, 309, 310, 0, 311, 312, 954, 313, 314,
	315, 317, 319, 316, 320, 321, 322, 323, 1042, 1043,
	966, 244, 0, 0, 0, 0, 0, 324, 325, 326,
	1026, 0, 0, 0, 327, 0, 328, 0, 0, 1052,
	329, 330, 1039, 1040, 331, 332, 0, 333, 1049, 0,
	976, 334, 0, 335, 336, 337, 338, 339, 1012, 1013,
	1016, 396, 1054, 340, 341, 0, 342, 343, 344, 345,
	0, 0, 0, 245, 346, 347, 349, 0, 1053, 348,
	1021, 1022, 0, 982, 0, 350, 351, 1055, 1014, 1056,
	352, 353, 354, 1057, 355, 0, 0, 0, 356, 357,
	358, 359, 360, 361, 0, 362, 364, 363, 0, 365,
	1050, 1058, 366, 367, 1059, 0, 368, 369, 370, 1005,
	1004, 371, 372, 373, 374, 0, 375, 376, 378, 380,
	377, 379, 384, 381, 382, 383, 386, 0, 385, 1060,
	387, 388, 389, 392, 393, 391, 1061, 390, 945, 246,
	1062, 394, 967, 1015, 395, 1029, 397, 398, 0, 0,
	399, 0, 0, 0, 401, 402, 403, 0, 0, 404,
	405, 559, 1063, 406, 1064, 1044, 407, 408, 400, 409,
	410, 411, 412, 413, 414, 415, 416, 0, 417, 418,
	561, 562, 1045, 419, 564, 420, 421, 0, 422, 0,
	423, 424, 425, 426, 427, 428, 429, 1025, 431, 430,
	432, 0, 433, 0, 0, 0, 0, 0, 434, 0,
	436, 437, 438, 435, 439, 440, 441, 442, 0, 443,
	444, 445, 1065, 446, 447, 448, 449, 955, 450, 0,
	451, 452, 458, 459, 453, 454, 460, 461, 462, 463,
	464, 0, 466, 467, 465, 468, 469, 470, 1008, 471,
	455, 456, 472, 473, 1066, 474, 475, 476, 477, 478,
	479, 1023, 0, 480, 0, 481, 482, 483, 484, 457,
	485, 490, 1069, 486, 487, 488, 489, 1046, 0, 492,
	493, 943, 491, 0, 494, 495, 496, 497, 498, 499,
	318, 500, 0, 501, 1035, 1036, 1037, 1038, 0, 508,
	0, 502, 503, 1047, 504, 1048, 965, 505, 506, 507,
	0, 509, 510, 0, 949, 511, 512, 513, 515, 516,
	514, 517, 1009, 518, 0, 0, 519, 520, 521, 576,
	1032, 1068, 0, 523, 522, 579, 0, 0, 0, 0,
	524, 525, 580, 526, 527, 528, 946, 0, 0, 0,
	0, 0, 0, 942, 0, 0, 0, 0, 0, 0,
	2161, 2162, 987, 959, 960, 961, 957, 958, 970, 971,
	0, 0, 0, 969, 0, 0, 0, 0, 0, 247,
	248, 249, 250, 251, 252, 0, 253, 254, 0, 0,
	0, 0, 0, 1011, 975, 0, 0, 0, 255, 256,
	258, 257, 259, 260, 261, 530, 1024, 0, 262, 1031,
	263, 1030, 0, 1041, 264, 265, 266, 267, 268, 977,
	1010, 0, 269, 1070, 1071, 537, 0, 270, 271, 1017,
	0, 998, 0, 272, 273, 274, 275, 276, 277, 278,
	0, 0, 280, 281, 282, 279, 0, 283, 0, 284,
	285, 286, 0, 287, 1051, 288, 289, 1001, 999, 1000,
	1007, 1003, 1002, 1006, 290, 291, 292, 293, 1034, 294,
	1028, 1027, 0, 298, 295, 296, 0, 299, 297, 0,
	300, 301, 302, 0, 0, 303, 1019, 305, 0, 306,
	307, 0, 308, 309, 310, 0, 311, 312, 954, 313,
	314, 315, 317, 319, 316, 320, 321, 322, 323, 1042,
	1043, 966, 244, 0, 0, 0, 0, 0, 324, 325,
	326, 1026, 0, 0, 0, 327, 0, 328, 0, 0,
	1052, 329, 330, 1039, 1040, 331, 332, 0, 333, 1049,
	0, 976, 334, 0, 335, 336, 337, 338, 339, 1012,
	1013, 1016, 396, 1054, 340, 341, 0, 342, 343, 344,
	345, 0, 0, 0, 245, 346, 347, 349, 0, 1053,
	348, 1021, 1022, 0, 982, 0, 350, 351, 1055, 1014,
	1056, 352, 353, 354, 1057, 355, 0, 0, 0, 356,
	357, 358, 359, 360, 361, 0, 362, 364, 363, 0,
	365, 1050, 1058, 366, 367, 1059, 0, 368, 369, 370,
	1005, 1004, 371, 372, 373, 374, 0, 375, 376, 378,
	380, 377, 379, 384, 381, 382, 383, 386, 0, 385,
	1060, 387, 388, 389, 392, 393, 391, 1061, 390, 0,
	246, 1062, 394, 967, 1015, 395, 1029, 397, 398, 0,
	0, 399, 0, 0, 0, 401, 402, 403, 0, 0,
	404, 405, 559, 1063, 406, 1064, 1044, 407, 408, 400,
	409, 410, 411, 412, 413, 414, 415, 416, 0, 417,
	418, 561, 562, 1045, 419, 564, 420, 421, 0, 422,
	0, 423, 424, 425, 426, 427, 428, 429, 1025, 431,
	430, 432, 0, 433, 0, 0, 0, 0, 0, 434,
	0, 436, 437, 438, 435, 439, 440, 441, 442, 0,
	443, 444, 445, 1065, 446, 447, 448, 449, 955, 450,
	0, 451, 452, 458, 459, 453, 454, 460, 461, 462,
	463, 464, 0, 466, 467, 465, 468, 469, 470, 1008,
	471, 455, 456, 472, 473, 1066, 474, 475, 476, 477,
	478, 479, 1023, 0, 480, 0, 481, 482, 483, 484,
	457, 485, 490, 1069, 486, 487, 488, 489, 1046, 0,
	492, 493, 0, 491, 0, 494, 495, 496, 497, 498,
	499, 318, 500, 0, 501, 1035, 1036, 1037, 1038, 0,
	508, 0, 502, 503, 1047, 504, 1048, 965, 505, 506,
	507, 0, 509, 510, 0, 0, 511, 512, 513, 515,
	516, 514, 517, 1009, 518, 0, 0, 519, 520, 521,
	576, 1032, 1068, 0, 523, 522, 579, 0, 0, 0,
	0, 524, 525, 580, 526, 527, 528, 987, 959, 960,
	961, 957, 958, 970, 2357, 0, 0, 0, 0, 0,
	0, 2355, 2356, 0, 247, 248, 249, 250, 251, 252,
	971, 253, 254, 0, 969, 0, 0, 0, 1011, 975,
	0, 0, 0, 255, 256, 258, 257, 259, 260, 261,
	530, 1024, 0, 262, 1031, 263, 1030, 0, 1041, 264,
	265, 266, 267, 268, 977, 1010, 0, 269, 1070, 1071,
	537, 0, 270, 271, 1017, 0, 998, 0, 272, 273,
	274, 275, 276, 277, 278, 0, 0, 280, 281, 282,
	279, 0, 283, 0, 284, 285, 286, 0, 287, 1051,
	288, 289, 1001, 999, 1000, 1007, 1003, 1002, 1006, 290,
	291, 292, 293, 1034, 294, 1028, 1027, 0, 298, 295,
	296, 0, 299, 297, 0, 300, 301, 302, 0, 0,
	303, 1019, 305, 0, 306, 307, 0, 308, 309, 310,
	0, 311, 312, 954, 313, 314, 315, 317, 319, 316,
	320, 321, 322, 323, 1042, 1043, 966, 244, 0, 0,
	0, 0, 0, 324, 325, 326, 1026, 0, 0, 0,
	327, 0, 328, 0, 0, 1052, 329, 330, 1039, 1040,
	331, 332, 0, 333, 1049, 0, 976, 334, 0, 335,
	336, 337, 338, 339, 1012, 1013, 1016, 396, 1054, 340,
	341, 0, 342, 343, 344, 345, 0, 0, 0, 245,
	346, 347, 349, 0, 1053, 348, 1021, 1022, 0, 982,
	0, 350, 351, 1055, 1014, 1056, 352, 353, 354, 1057,
	355, 0, 0, 0, 356, 357, 358, 359, 360, 361,
	0, 362, 364, 363, 0, 365, 1050, 1058, 366, 367,
	1059, 0, 368, 369, 370, 1005, 1004, 371, 372, 373,
	374, 0, 375, 376, 378, 380, 377, 379, 384, 381,
	382, 383, 386, 0, 385, 1060, 387, 388, 389, 392,
	393, 391, 1061, 390, 0, 246, 1062, 394, 967, 1015,
	395, 1029, 397, 398, 0, 0, 399, 0, 0, 0,
	401, 402, 403, 0, 0, 404, 405, 559, 1063, 406,
	1064, 1044, 407, 408, 400, 409, 410, 411, 412, 413,
	414, 415, 416, 0, 417, 418, 561, 562, 1045, 419,
	564, 420, 421, 0, 422, 0, 423, 424, 425, 426,
	427, 428, 429, 1025, 431, 430, 432, 0, 433, 0,
	0, 0, 0, 0, 434, 0, 436, 437, 438, 435,
	439, 440, 441, 442, 0, 443, 444, 445, 1065, 446,
	447, 448, 449, 2740, 2741, 0, 451, 452, 458, 459,
	453, 454, 460, 461, 462, 463, 464, 0, 466, 467,
	465, 468, 469, 470, 1008, 471, 455, 456, 472, 473,
	1066, 474, 475, 476, 477, 478, 479, 1023, 0, 480,
	0, 481, 482, 483, 484, 457, 485, 490, 1069, 486,
	487, 488, 489, 1046, 0, 492, 493, 0, 491, 0,
	494, 495, 496, 497, 498, 499, 318, 500, 0, 501,
	1035, 1036, 1037, 1038, 0, 508, 0, 502, 503, 1047,
	504, 1048, 965, 505, 506, 507, 0, 509, 510, 0,
	0, 511, 512, 513, 515, 516, 514, 517, 1009, 518,
	0, 0, 519, 520, 521, 576, 1032, 1068, 0, 523,
	522, 579, 0, 0, 0, 0, 524, 525, 580, 526,
	527, 528, 987, 959, 960, 961, 957, 958, 970, 0,
	0, 0, 0, 0, 0, 0, 1879, 1880, 0, 247,
	248, 249, 250, 251, 252, 971, 253, 254, 0, 969,
	0, 0, 0, 1011, 975, 0, 0, 0, 255, 256,
	258, 257, 259, 260, 261, 0, 1024, 0, 262, 1031,
	263, 1030, 0, 1041, 264, 265, 266, 267, 268, 977,
	1010, 944, 269, 1070, 1071, 537, 0, 270, 271, 1017,
	0, 998, 0, 272, 273, 274, 275, 276, 277, 278,
	0, 0, 280, 281, 282, 279, 0, 283, 0, 284,
	285, 286, 0, 287, 1051, 288, 4044, 1001, 999, 1000,
	1007, 1003, 1002, 1006, 290, 291, 292, 293, 1034, 294,
	1028, 1027, 948, 298, 295, 296, 0, 299, 297, 0,
	300, 301, 302, 0, 0, 303, 1019, 305, 0, 306,
	307, 0, 308, 309, 310, 0, 311, 312, 954, 313,
	314, 315, 317, 319, 316, 320, 321, 322, 323, 1042,
	1043, 966, 244, 0, 0, 0, 0, 0, 324, 325,
	326, 1026, 0, 0, 0, 327, 0, 328, 0, 0,
	1052, 329, 330, 1039, 1040, 331, 332, 0, 333, 1049,
	0, 976, 334, 0, 335, 336, 337, 338, 339, 1012,
	1013, 1016, 396, 0, 340, 341, 0, 342, 343, 344,
	345, 0, 0, 0, 245, 346, 347, 349, 0, 1053,
	348, 1021, 1022, 0, 982, 0, 350, 351, 0, 1014,
	0, 352, 353, 354, 1057, 355, 0, 0, 0, 356,
	357, 358, 359, 360, 361, 0, 362, 364, 363, 0,
	365, 1050, 1058, 366, 367, 0, 0, 368, 369, 370,
	1005, 1004, 371, 372, 373, 374, 0, 375, 376, 378,
	380, 377, 379, 384, 381, 382, 383, 386, 0, 385,
	1060, 387, 388, 389, 392, 393, 391, 1061, 390, 945,
	246, 0, 394, 967, 1015, 395, 1029, 397, 398, 0,
	0, 399, 0, 0, 0, 401, 402, 403, 0, 0,
	404, 405, 559, 1063, 406, 1064, 1044, 407, 408, 400,
	409, 410, 411, 412, 413, 414, 415, 416, 0, 417,
	418, 561, 562, 1045, 419, 564, 420, 421, 0, 422,
	0, 423, 424, 425, 426, 427, 428, 429, 1025, 431,
	430, 432, 0, 433, 0, 0, 0, 0, 0, 434,
	0, 436, 437, 438, 435, 439, 440, 441, 442, 0,
	443, 444, 445, 1065, 446, 447, 448, 449, 955, 450,
	0, 451, 452, 458, 459, 453, 454, 460, 461, 462,
	463, 464, 0, 466, 467, 465, 468, 469, 470, 1008,
	471, 455, 456, 472, 473, 0, 474, 475, 476, 477,
	478, 479, 1023, 0, 480, 0, 481, 482, 483, 484,
	457, 485, 490, 1069, 486, 487, 488, 489, 1046, 0,
	492, 493, 943, 491, 0, 494, 495, 496, 497, 498,
	499, 318, 500, 0, 501, 1035, 1036, 1037, 1038, 0,
	508, 0, 502, 503, 1047, 504, 1048, 965, 505, 506,
	507, 0, 4043, 510, 0, 949, 511, 512, 513, 515,
	516, 514, 517, 1009, 518, 0, 0, 519, 520, 521,
	576, 1032, 1068, 0, 523, 522, 579, 0, 0, 0,
	0, 524, 525, 580, 526, 527, 528, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 933, 0, 1108, 0,
	0, 940, 941, 0, 0, 0, 0, 0, 0, 0,
	971, 0, 0, 0, 969, 247, 248, 249, 250, 251,
	252, 0, 253, 254, 0, 0, 0, 0, 0, 1011,
	0, 0, 0, 0, 255, 256, 258, 257, 259, 260,
	261, 530, 531, 0, 262, 532, 263, 533, 0, 534,
	264, 265, 266, 267, 268, 0, 1010, 0, 269, 535,
	536, 537, 0, 270, 271, 1017, 0, 998, 0, 272,
	273, 274, 275, 276, 277, 278, 0, 0, 280, 281,
	282, 279, 0, 283, 0, 284, 285, 286, 0, 287,
	1051, 288, 289, 1001, 999, 1000, 1007, 1003, 1002, 1006,
	290, 291, 292, 293, 0, 294, 539, 540, 0, 298,
	295, 296, 0, 299, 297, 0, 300, 301, 302, 0,
	0, 303, 304, 305, 0, 306, 307, 0, 308, 309,
	310, 0, 311, 312, 541, 313, 314, 315, 317, 319,
	316, 320, 321, 322, 323, 1042, 1043, 0, 244, 0,
	0, 0, 0, 0, 324, 325, 326, 544, 0, 0,
	0, 327, 0, 328, 0, 0, 1052, 329, 330, 545,
	546, 331, 332, 0, 333, 1049, 0, 548, 334, 0,
	335, 336, 337, 338, 339, 1012, 1013, 1016, 396, 1054,
	340, 341, 0, 342, 343, 344, 345, 0, 0, 0,
	245, 346, 347, 349, 0, 1053, 348, 552, 553, 0,
	554, 0, 350, 351, 1055, 1014, 1056, 352, 353, 354,
	1057, 355, 0, 0, 0, 356, 357, 358, 359, 360,
	361, 1094, 362, 364, 363, 0, 365, 1050, 1058, 366,
	367, 1059, 0, 368, 369, 370, 1005, 1004, 371, 372,
	373, 374, 0, 375, 376, 378, 380, 377, 379, 384,
	381, 382, 383, 386, 0, 385, 1060, 387, 388, 389,
	392, 393, 391, 1061, 390, 0, 246, 1062, 394, 0,
	1015, 395, 558, 397, 398, 0, 0, 399, 0, 0,
	1100, 401, 402, 403, 0, 0, 404, 405, 559, 1063,
	406, 1064, 1044, 407, 408, 400, 409, 410, 411, 412,
	413, 414, 415, 416, 0, 417, 418, 561, 562, 1045,
	419, 564, 420, 421, 0, 422, 0, 423, 424, 425,
	426, 427, 428, 429, 565, 431, 430, 432, 0, 433,
	0, 0, 0, 0, 0, 434, 0, 436, 437, 438,
	435, 439, 440, 441, 442, 0, 443, 444, 445, 1065,
	446, 447, 448, 449, 566, 1102, 0, 451, 452, 458,
	459, 453, 454, 460, 461, 462, 463, 464, 208, 466,
	467, 465, 468, 469, 470, 1008, 471, 455, 456, 472,
	473, 1066, 474, 475, 476, 477, 478, 479, 567, 0,
	480, 0, 481, 482, 483, 484, 457, 485, 490, 568,
	486, 487, 488, 489, 1046, 0, 492, 493, 0, 491,
	210, 494, 495, 496, 497, 498, 499, 318, 500, 0,
	501, 570, 571, 572, 573, 0, 508, 0, 502, 503,
	1047, 504, 1048, 0, 505, 506, 507, 0, 509, 510,
	0, 0, 511, 512, 513, 515, 516, 514, 517, 1009,
	518, 0, 0, 519, 520, 521, 1444, 577, 578, 0,
	523, 522, 579, 0, 1108, 0, 202, 524, 525, 580,
	526, 527, 528, 0, 203, 0, 0, 0, 0, 0,
	0, 247, 248, 249, 250, 251, 252, 0, 253, 254,
	0, 0, 0, 0, 1098, 1011, 1770, 0, 0, 0,
	255, 256, 258, 257, 259, 260, 261, 530, 531, 0,
	262, 532, 263, 533, 0, 534, 264, 265, 266, 267,
	268, 0, 1010, 0, 269, 535, 536, 537, 0, 270,
	271, 1017, 0, 998, 0, 272, 273, 274, 275, 276,
	277, 278, 0, 0, 280, 281, 282, 279, 0, 283,
	0, 284, 285, 286, 0, 287, 1051, 288, 289, 1001,
	999, 1000, 1007, 1003, 1002, 1006, 290, 291, 292, 293,
	0, 294, 539, 540, 0, 298, 295, 296, 0, 299,
	297, 0, 300, 301, 302, 0, 0, 303, 304, 305,
	0, 306, 307, 0, 308, 309, 310, 0, 311, 312,
	541, 313, 314, 315, 317, 319, 316, 320, 321, 322,
	323, 1042, 1043, 0, 244, 0, 0, 0, 0, 0,
	324, 325, 326, 544, 0, 0, 0, 327, 0, 328,
	0, 0, 1052, 329, 330, 545, 546, 331, 332, 0,
	333, 1049, 0, 548, 334, 0, 335, 336, 337, 338,
	339, 1012, 1013, 1016, 396, 1054, 340, 341, 0, 342,
	343, 344, 345, 0, 0, 0, 245, 346, 347, 349,
	0, 1053, 348, 552, 553, 0, 554, 0, 350, 351,
	1055, 1014, 1056, 352, 353, 354, 1057, 355, 0, 0,
	0, 356, 357, 358, 359, 360, 361, 1094, 362, 364,
	363, 0, 365, 1050, 1058, 366, 367, 1059, 0, 368,
	369, 370, 1005, 1004, 371, 372, 373, 374, 0, 375,
	376, 378, 380, 377, 379, 384, 381, 382, 383, 386,
	0, 385, 1060, 387, 388, 389, 392, 393, 391, 1061,
	390, 0, 246, 1062, 394, 0, 1015, 395, 558, 397,
	398, 0, 0, 399, 0, 0, 1100, 401, 402, 403,
	0, 0, 404, 405, 559, 1063, 406, 1064, 1044, 407,
	408, 400, 409, 410, 411, 412, 413, 414, 415, 416,
	0, 417, 418, 561, 562, 1045, 419, 564, 420, 421,
	0, 422, 0, 423, 424, 425, 426, 427, 428, 429,
	565, 431, 430, 432, 0, 433, 0, 0, 0, 0,
	0, 434, 0, 436, 437, 438, 435, 439, 440, 441,
	442, 0, 443, 444, 445, 1065, 446, 447, 448, 449,
	566, 1102, 0, 451, 452, 458, 459, 453, 454, 460,
	461, 462, 463, 464, 208, 466, 467, 465, 468, 469,
	470, 1008, 471, 455, 456, 472, 473, 1066, 474, 475,
	476, 477, 478, 479, 567, 0, 480, 0, 481, 482,
	483, 484, 457, 485, 490, 568, 486, 487, 488, 489,
	1046, 0, 492, 493, 0, 491, 210, 494, 495, 496,
	497, 498, 499, 318, 500, 0, 501, 570, 571, 572,
	573, 0, 508, 0, 502, 503, 1047, 504, 1048, 0,
	505, 506, 507, 0, 509, 510, 0, 0, 511, 512,
	513, 515, 516, 514, 517, 1009, 518, 0, 0, 519,
	520, 521, 1444, 577, 578, 0, 523, 522, 579, 0,
	0, 0, 202, 524, 525, 580, 526, 527, 528, 0,
	203, 0, 0, 0, 2900, 0, 1108, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1098, 0, 1770, 247, 248, 249, 250, 251, 252, 0,
	253, 254, 0, 0, 0, 0, 0, 1011, 0, 0,
	0, 0, 255, 256, 258, 257, 259, 260, 261, 530,
	531, 0, 262, 532, 263, 533, 0, 534, 264, 265,
	266, 267, 268, 0, 1010, 0, 269, 535, 536, 537,
	0, 270, 271, 1017, 0, 998, 0, 272, 273, 274,
	275, 276, 277, 278, 0, 0, 280, 281, 282, 279,
	0, 283, 0, 284, 285, 286, 0, 287, 1051, 288,
	289, 1001, 999, 1000, 1007, 1003, 1002, 1006, 290, 291,
	292, 293, 0, 294, 539, 540, 0, 298, 295, 296,
	0, 299, 297, 0, 300, 301, 302, 0, 0, 303,
	304, 305, 0, 306, 307, 0, 308, 309, 310, 0,
	311, 312, 541, 313, 314, 315, 317, 319, 316, 320,
	321, 322, 323, 1042, 1043, 0, 244, 0, 0, 0,
	0, 0, 324, 325, 326, 544, 0, 0, 0, 327,
	0, 328, 0, 0, 1052, 329, 330, 545, 546, 331,
	332, 0, 333, 1049, 0, 548, 334, 0, 335, 336,
	337, 338, 339, 1012, 1013, 1016, 396, 1054, 340, 341,
	0, 342, 343, 344, 345, 0, 0, 0, 245, 346,
	347, 349, 0, 1053, 348, 552, 553, 0, 554, 0,
	350, 351, 1055, 1014, 1056, 352, 353, 354, 1057, 355,
	0, 0, 0, 356, 357, 358, 359, 360, 361, 1094,
	362, 364, 363, 0, 365, 1050, 1058, 366, 367, 1059,
	0, 368, 369, 370, 1005, 1004, 371, 372, 373, 374,
	0, 375, 376, 378, 380, 377, 379, 384, 381, 382,
	383, 386, 0, 385, 1060, 387, 388, 389, 392, 393,
	391, 1061, 390, 0, 246, 1062, 394, 0, 1015, 395,
	558, 397, 398, 0, 0, 399, 0, 0, 1100, 401,
	402, 403, 0, 0, 404, 405, 559, 1063, 406, 1064,
	1044, 407, 408, 400, 409, 410, 411, 412, 413, 414,
	415, 416, 0, 417, 418, 561, 562, 1045, 419, 564,
	420, 421, 0, 422, 0, 423, 424, 425, 426, 427,
	428, 429, 565, 431, 430, 432, 0, 433, 0, 0,
	0, 0, 0, 434, 0, 436, 437, 438, 435, 439,
	440, 441, 442, 0, 443, 444, 445, 1065, 446, 447,
	448, 449, 566, 1102, 0, 451, 452, 458, 459, 453,
	454, 460, 461, 462, 463, 464, 0, 466, 467, 465,
	468, 469, 470, 1008, 471, 455, 456, 472, 473, 1066,
	474, 475, 476, 477, 478, 479, 567, 0, 480, 0,
	481, 482, 483, 484, 457, 485, 490, 568, 486, 487,
	488, 489, 1046, 0, 492, 493, 0, 491, 0, 494,
	495, 496, 497, 498, 499, 318, 500, 0, 501, 570,
	571, 572, 573, 0, 508, 0, 502, 503, 1047, 504,
	1048, 0, 505, 506, 507, 0, 509, 510, 0, 0,
	511, 512, 513, 515, 516, 514, 517, 1009, 518, 0,
	0, 519, 520, 521, 576, 577, 578, 0, 523, 522,
	579, 0, 1090, 0, 1108, 524, 525, 580, 526, 527,
	528, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 247, 248, 249, 250, 251, 252, 0, 253, 254,
	0, 0, 1098, 0, 1096, 1011, 0, 0, 0, 0,
	255, 256, 258, 257, 259, 260, 261, 530, 531, 0,
	262, 532, 263, 533, 0, 534, 264, 265, 266, 267,
	268, 0, 1010, 0, 269, 535, 536, 537, 0, 270,
	271, 1017, 0, 998, 0, 272, 273, 274, 275, 276,
	277, 278, 0, 0, 280, 281, 282, 279, 0, 283,
	0, 284, 285, 286, 0, 287, 1051, 288, 289, 1001,
	999, 1000, 1007, 1003, 1002, 1006, 290, 291, 292, 293,
	0, 294, 539, 540, 0, 298, 295, 296, 0, 299,
	297, 0, 300, 301, 302, 0, 0, 303, 304, 305,
	0, 306, 307, 0, 308, 309, 310, 0, 311, 312,
	541, 313, 314, 315, 317, 319, 316, 320, 321, 322,
	323, 1042, 1043, 0, 244, 0, 0, 0, 0, 0,
	324, 325, 326, 544, 0, 0, 0, 327, 0, 328,
	0, 0, 1052, 329, 330, 545, 546, 331, 332, 0,
	333, 1049, 0, 548, 334, 0, 335, 336, 337, 338,
	339, 1012, 1013, 1016, 396, 1054, 340, 341, 0, 342,
	343, 344, 345, 0, 0, 0, 245, 346, 347, 349,
	0, 1053, 348, 552, 553, 0, 554, 0, 350, 351,
	1055, 1014, 1056, 352, 353, 354, 1057, 355, 0, 0,
	0, 356, 357, 358, 359, 360, 361, 1094, 362, 364,
	363, 0, 365, 1050, 1058, 366, 367, 1059, 0, 368,
	369, 370, 1005, 1004, 371, 372, 373, 374, 0, 375,
	376, 378, 380, 377, 379, 384, 381, 382, 383, 386,
	0, 385, 1060, 387, 388, 389, 392, 393, 391, 1061,
	390, 0, 246, 1062, 394, 0, 1015, 395, 558, 397,
	398, 0, 0, 399, 0, 0, 1100, 401, 402, 403,
	0, 0, 404, 405, 559, 1063, 406, 1064, 1044, 407,
	408, 400, 409, 410, 411, 412, 413, 414, 415, 416,
	0, 417, 418, 561, 562, 1045, 419, 564, 420, 421,
	0, 422, 0, 423, 424, 425, 426, 427, 428, 429,
	565, 431, 430, 432, 0, 433, 0, 0, 0, 0,
	0, 434, 0, 436, 437, 438, 435, 439, 440, 441,
	442, 0, 443, 444, 445, 1065, 446, 447, 448, 449,
	566, 1102, 0, 451, 452, 458, 459, 453, 454, 460,
	461, 462, 463, 464, 0, 466, 467, 465, 468, 469,
	470, 1008, 471, 455, 456, 472, 473, 1066, 474, 475,
	476, 477, 478, 479, 567, 0, 480, 0, 481, 482,
	483, 484, 457, 485, 490, 568, 486, 487, 488, 489,
	1046, 0, 492, 493, 0, 491, 0, 494, 495, 496,
	497, 498, 499, 318, 500, 0, 501, 570, 571, 572,
	573, 0, 508, 0, 502, 503, 1047, 504, 1048, 0,
	505, 506, 507, 0, 509, 510, 0, 0, 511, 512,
	513, 515, 516, 514, 517, 1009, 518, 0, 0, 519,
	520, 521, 576, 577, 578, 0, 523, 522, 579, 0,
	1108, 0, 0, 524, 525, 580, 526, 527, 528, 0,
	0, 0, 0, 0, 0, 0, 0, 247, 248, 249,
	250, 251, 252, 0, 253, 254, 0, 0, 0, 0,
	1098, 1011, 1096, 0, 0, 0, 255, 256, 258, 257,
	259, 260, 261, 530, 531, 0, 262, 532, 263, 533,
	0, 534, 264, 265, 266, 267, 268, 0, 1010, 0,
	269, 535, 536, 537, 0, 270, 271, 1017, 0, 998,
	0, 272, 273, 274, 275, 276, 277, 278, 0, 0,
	280, 281, 282, 279, 0, 283, 0, 284, 285, 286,
	0, 287, 1051, 288, 289, 1001, 999, 1000, 1007, 1003,
	1002, 1006, 290, 291, 292, 293, 0, 294, 539, 540,
	0, 298, 295, 296, 0, 299, 297, 0, 300, 301,
	302, 0, 0, 303, 304, 305, 0, 306, 307, 0,
	308, 309, 310, 0, 311, 312, 541, 313, 314, 315,
	317, 319, 316, 320, 321, 322, 323, 1042, 1043, 0,
	244, 0, 0, 0, 0, 0, 324, 325, 326, 544,
	0, 0, 0, 327, 0, 328, 0, 0, 1052, 329,
	330, 545, 546, 331, 332, 0, 333, 1049, 0, 548,
	334, 0, 335, 336, 337, 338, 339, 1012, 1013, 1016,
	396, 1054, 340, 341, 0, 342, 343, 344, 345, 0,
	0, 0, 245, 346, 347, 349, 0, 1053, 348, 552,
	553, 0, 554, 0, 350, 351, 1055, 1014, 1056, 352,
	353, 354, 1057, 355, 0, 0, 0, 356, 357, 358,
	359, 360, 361, 1094, 362, 364, 363, 0, 365, 1050,
	1058, 366, 367, 1059, 0, 368, 369, 370, 1005, 1004,
	371, 372, 373, 374, 0, 375, 376, 378, 380, 377,
	379, 384, 381, 382, 383, 386, 0, 385, 1060, 387,
	388, 389, 392, 393, 391, 1061, 390, 0, 246, 1062,
	394, 0, 1015, 395, 558, 397, 398, 0, 0, 399,
	0, 0, 1100, 401, 402, 403, 0, 0, 404, 405,
	559, 1063, 406, 1064, 1044, 407, 408, 400, 409, 410,
	411, 412, 413, 414, 415, 416, 0, 417, 418, 561,
	562, 1045, 419, 564, 420, 421, 0, 422, 0, 423,
	424, 425, 426, 427, 428, 429, 565, 431, 430, 432,
	0, 433, 0, 0, 0, 0, 0, 434, 0, 436,
	437, 438, 435, 439, 440, 441, 442, 0, 443, 444,
	445, 1065, 446, 447, 448, 449, 566, 1102, 0, 451,
	452, 458, 459, 453, 454, 460, 461, 462, 463, 464,
	0, 466, 467, 465, 468, 469, 470, 1008, 471, 455,
	456, 472, 473, 1066, 474, 475, 476, 477, 478, 479,
	567, 0, 480, 0, 481, 482, 483, 484, 457, 485,
	490, 568, 486, 487, 488, 489, 1046, 0, 492, 493,
	0, 491, 0, 494, 495, 496, 497, 498, 499, 318,
	500, 0, 501, 570, 571, 572, 573, 0, 508, 0,
	502, 503, 1047, 504, 1048, 0, 505, 506, 507, 0,
	509, 510, 0, 0, 511, 512, 513, 515, 516, 514,
	517, 1009, 518, 0, 0, 519, 520, 521, 576, 577,
	578, 0, 523, 522, 579, 0, 1108, 0, 0, 524,
	525, 580, 526, 527, 528, 0, 0, 0, 0, 0,
	0, 0, 0, 247, 248, 249, 250, 251, 252, 0,
	253, 254, 0, 0, 0, 0, 1098, 1011, 1096, 0,
	0, 0, 255, 256, 258, 257, 259, 260, 261, 530,
	531, 0, 262, 532, 263, 533, 0, 534, 264, 265,
	266, 267, 268, 0, 1010, 0, 269, 535, 536, 537,
	0, 270, 271, 1017, 0, 998, 0, 272, 273, 274,
	275, 276, 277, 278, 0, 0, 280, 281, 282, 279,
	0, 283, 0, 284, 285, 286, 0, 287, 1051, 288,
	289, 1001, 999, 1000, 1007, 1003, 1002, 1006, 290, 291,
	292, 293, 0, 294, 539, 540, 0, 298, 295, 296,
	0, 299, 297, 0, 300, 301, 302, 0, 0, 303,
	304, 305, 0, 306, 307, 0, 308, 309, 310, 0,
	311, 312, 541, 313, 314, 315, 317, 319, 316, 320,
	321, 322, 323, 1042, 1043, 0, 244, 0, 0, 0,
	0, 0, 324, 325, 326, 544, 0, 0, 0, 327,
	0, 328, 0, 0, 1052, 329, 330, 545, 546, 331,
	332, 0, 333, 1049, 0, 548, 334, 0, 335, 336,
	337, 338, 339, 1012, 1013, 1016, 396, 1054, 340, 341,
	0, 342, 343, 344, 345, 0, 0, 0, 245, 346,
	347, 349, 0, 1053, 348, 552, 553, 0, 554, 0,
	350, 351, 1055, 1014, 1056, 352, 353, 354, 1057, 355,
	0, 0, 0, 356, 357, 358, 359, 360, 361, 0,
	362, 364, 363, 0, 365, 1050, 1058, 366, 367, 1059,
	0, 368, 369, 370, 1005, 1004, 371, 372, 373, 374,
	0, 375, 376, 378, 380, 377, 379, 384, 381, 382,
	383, 386, 0, 385, 1060, 387, 388, 389, 392, 393,
	391, 1061, 390, 0, 246, 1062, 394, 0, 1015, 395,
	558, 397, 398, 0, 0, 399, 0, 0, 0, 401,
	402, 403, 0, 0, 404, 405, 559, 1063, 406, 1064,
	1044, 407, 408, 400, 409, 410, 411, 412, 413, 414,
	415, 416, 0, 417, 418, 561, 562, 1045, 419, 564,
	420, 421, 0, 422, 0, 423, 424, 425, 426, 427,
	428, 429, 565, 431, 430, 432, 0, 433, 0, 0,
	0, 0, 0, 434, 0, 436, 437, 438, 435, 439,
	440, 441, 442, 0, 443, 444, 445, 1065, 446, 447,
	448, 449, 566, 1102, 0, 451, 452, 458, 459, 453,
	454, 460, 461, 462, 463, 464, 0, 466, 467, 465,
	468, 469, 470, 1008, 471, 455, 456, 472, 473, 1066,
	474, 475, 476, 477, 478, 479, 567, 0, 480, 0,
	481, 482, 483, 484, 457, 485, 490, 568, 486, 487,
	488, 489, 1046, 0, 492, 493, 0, 491, 0, 494,
	495, 496, 497, 498, 499, 318, 500, 0, 501, 570,
	571, 572, 573, 0, 508, 0, 502, 503, 1047, 504,
	1048, 0, 505, 506, 507, 0, 509, 510, 0, 0,
	511, 512, 513, 515, 516, 514, 517, 1009, 518, 0,
	0, 519, 520, 521, 576, 577, 578, 0, 523, 522,
	579, 0, 933, 0, 1293, 524, 525, 580, 526, 527,
	528, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 247, 248, 249, 250, 251, 252, 0, 253, 254,
	0, 0, 0, 0, 1669, 529, 0, 0, 0, 0,
	255, 256, 258, 257, 259, 260, 261, 530, 531, 0,
	262, 532, 263, 533, 0, 534, 264, 265, 266, 267,
	268, 0, 0, 0, 269, 535, 536, 537, 0, 270,
	271, 538, 0, 1259, 0, 272, 273, 274, 275, 276,
	277, 278, 0, 0, 280, 281, 282, 279, 0, 283,
	0, 284, 285, 286, 0, 287, 1051, 288, 289, 0,
	0, 0, 0, 0, 0, 0, 290, 291, 292, 293,
	0, 294, 539, 540, 0, 298, 295, 296, 0, 299,
	297, 0, 300, 301, 302, 0, 0, 303, 304, 305,
	0, 306, 307, 0, 308, 309, 310, 0, 311, 312,
	541, 313, 314, 315, 317, 319, 316, 320, 321, 322,
	323, 542, 543, 0, 244, 0, 0, 0, 0, 0,
	324, 325, 326, 544, 0, 0, 0, 327, 0, 328,
	0, 0, 1052, 329, 330, 545, 546, 331, 332, 0,
	333, 547, 0, 548, 334, 0, 335, 336, 337, 338,
	339, 549, 550, 551, 396, 1054, 340, 341, 0, 342,
	343, 344, 345, 0, 0, 0, 0, 346, 347, 349,
	0, 1053, 348, 552, 553, 0, 554, 0, 350, 351,
	1055, 555, 1056, 352, 353, 354, 1057, 355, 0, 0,
	0, 356, 357, 358, 359, 360, 361, 0, 362, 364,
	363, 0, 365, 556, 1058, 366, 367, 1059, 0, 368,
	369, 370, 0, 0, 371, 372, 373, 374, 0, 375,
	376, 378, 380, 377, 379, 384, 381, 382, 383, 386,
	0, 385, 1060, 387, 388, 389, 392, 393, 391, 1061,
	390, 0, 0, 1062, 394, 0, 557, 395, 558, 397,
	398, 0, 0, 399, 0, 0, 0, 401, 402, 403,
	0, 0, 404, 405, 559, 1063, 406, 1064, 560, 407,
	408, 400, 409, 410, 411, 412, 413, 414, 415, 416,
	0, 417, 418, 561, 562, 563, 419, 564, 420, 421,
	0, 422, 0, 423, 424, 425, 426, 427, 428, 429,
	565, 431, 430, 432, 0, 433, 0, 0, 0, 0,
	0, 434, 0, 436, 437, 438, 435, 439, 440, 441,
	442, 0, 443, 444, 445, 1065, 446, 447, 448, 449,
	566, 450, 0, 451, 452, 458, 459, 453, 454, 460,
	461, 462, 463, 464, 208, 466, 467, 465, 468, 469,
	470, 0, 471, 455, 456, 472, 473, 1066, 474, 475,
	476, 477, 478, 479, 567, 0, 480, 0, 481, 482,
	483, 484, 457, 485, 490, 568, 486, 487, 488, 489,
	569, 0, 492, 493, 0, 491, 210, 494, 495, 496,
	497, 498, 499, 318, 500, 0, 501, 570, 571, 572,
	573, 0, 508, 0, 502, 503, 574, 504, 575, 0,
	505, 506, 507, 0, 509, 510, 0, 0, 511, 512,
	513, 515, 516, 514, 517, 0, 518, 0, 0, 519,
	520, 521, 1444, 577, 578, 0, 523, 522, 579, 0,
	0, 0, 202, 524, 525, 580, 526, 527, 528, 0,
	203, 0, 0, 0, 1441, 0, 1293, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 174, 247, 248, 249, 250, 251, 252, 0,
	253, 254, 0, 0, 0, 0, 0, 529, 0, 0,
	0, 0, 255, 256, 258, 257, 259, 260, 261, 530,
	531, 0, 262, 532, 263, 533, 0, 534, 264, 265,
	266, 267, 268, 0, 0, 0, 269, 535, 536, 537,
	0, 270, 271, 538, 0, 1259, 0, 272, 273, 274,
	275, 276, 277, 278, 0, 0, 280, 281, 282, 279,
	0, 283, 0, 284, 285, 286, 0, 287, 1051, 288,
	289, 0, 0, 0, 0, 0, 0, 0, 290, 291,
	292, 293, 0, 294, 539, 540, 0, 298, 295, 296,
	0, 299, 297, 0, 300, 301, 302, 0, 0, 303,
	304, 305, 0, 306, 307, 0, 308, 309, 310, 0,
	311, 312, 541, 313, 314, 315, 317, 319, 316, 320,
	321, 322, 323, 542, 543, 0, 244, 0, 0, 0,
	0, 0, 324, 325, 326, 544, 0, 0, 0, 327,
	0, 328, 0, 0, 1052, 329, 330, 545, 546, 331,
	332, 0, 333, 547, 0, 548, 334, 0, 335, 336,
	337, 338, 339, 549, 550, 551, 396, 1054, 340, 341,
	0, 342, 343, 344, 345, 0, 0, 0, 0, 346,
	347, 349, 0, 1053, 348, 552, 553, 0, 554, 0,
	350, 351, 1055, 555, 1056, 352, 353, 354, 1057, 355,
	0, 0, 0, 356, 357, 358, 359, 360, 361, 0,
	362, 364, 363, 0, 365, 556, 1058, 366, 367, 1059,
	0, 368, 369, 370, 0, 0, 371, 372, 373, 374,
	0, 375, 376, 378, 380, 377, 379, 384, 381, 382,
	383, 386, 0, 385, 1060, 387, 388, 389, 392, 393,
	391, 1061, 390, 0, 0, 1062, 394, 0, 557, 395,
	558, 397, 398, 0, 0, 399, 0, 0, 0, 401,
	402, 403, 0, 0, 404, 405, 559, 1063, 406, 1064,
	560, 407, 408, 400, 409, 410, 411, 412, 413, 414,
	415, 416, 0, 417, 418, 561, 562, 563, 419, 564,
	420, 421, 0, 422, 0, 423, 424, 425, 426, 427,
	428, 429, 565, 431, 430, 432, 0, 433, 0, 0,
	0, 0, 0, 434, 0, 436, 437, 438, 435, 439,
	440, 441, 442, 0, 443, 444, 445, 1065, 446, 447,
	448, 449, 566, 450, 0, 451, 452, 458, 459, 453,
	454, 460, 461, 462, 463, 464, 208, 466, 467, 465,
	468, 469, 470, 0, 471, 455, 456, 472, 473, 1066,
	474, 475, 476, 477, 478, 479, 567, 0, 480, 0,
	481, 482, 483, 484, 457, 485, 490, 568, 486, 487,
	488, 489, 569, 0, 492, 493, 0, 491, 210, 494,
	495, 496, 497, 498, 499, 318, 500, 0, 501, 570,
	571, 572, 573, 0, 508, 0, 502, 503, 574, 504,
	575, 0, 505, 506, 507, 0, 509, 510, 0, 0,
	511, 512, 513, 515, 516, 514, 517, 0, 518, 0,
	0, 519, 520, 521, 1444, 577, 578, 0, 523, 522,
	579, 0, 0, 0, 202, 524, 525, 580, 526, 527,
	528, 0, 203, 0, 0, 0, 0, 0, 1293, 1292,
	0, 0, 0, 0, 1290, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 174, 247, 248, 249, 250, 251,
	252, 0, 253, 254, 0, 0, 0, 0, 0, 529,
	0, 0, 0, 0, 255, 256, 258, 257, 259, 260,
	261, 530, 531, 0, 262, 532, 263, 533, 0, 534,
	264, 265, 266, 267, 268, 0, 0, 0, 269, 535,
	536, 537, 0, 270, 271, 538, 0, 1259, 0, 272,
	273, 274, 275, 276, 277, 278, 0, 0, 280, 281,
	282, 279, 0, 283, 0, 284, 285, 286, 0, 287,
	1051, 288, 289, 0, 0, 0, 0, 0, 0, 0,
	290, 291, 292, 293, 0, 294, 539, 540, 0, 298,
	295, 296, 0, 299, 297, 0, 300, 301, 302, 0,
	0, 303, 304, 305, 0, 306, 307, 0, 308, 309,
	310, 0, 311, 312, 541, 313, 314, 315, 317, 319,
	316, 320, 321, 322, 323, 542, 543, 0, 244, 0,
	0, 0, 0, 0, 324, 325, 326, 544, 0, 0,
	0, 327, 0, 328, 0, 0, 1052, 329, 330, 545,
	546, 331, 332, 0, 333, 547, 0, 548, 334, 0,
	335, 336, 337, 338, 339, 549, 550, 551, 396, 1054,
	340, 341, 0, 342, 343, 344, 345, 0, 0, 0,
	0, 346, 347, 349, 0, 1053, 348, 552, 553, 0,
	554, 0, 350, 351, 1055, 555, 1056, 352, 353, 354,
	1057, 355, 0, 0, 0, 356, 357, 358, 359, 360,
	361, 0, 362, 364, 363, 0, 365, 556, 1058, 366,
	367, 1059, 0, 368, 369, 370, 0, 0, 371, 372,
	373, 374, 0, 375, 376, 378, 380, 377, 379, 384,
	381, 382, 383, 386, 0, 385, 1060, 387, 388, 389,
	392, 393, 391, 1061, 390, 0, 0, 1062, 394, 0,
	557, 395, 558, 397, 398, 0, 0, 399, 0, 0,
	0, 401, 402, 403, 0, 0, 404, 405, 559, 1063,
	406, 1064, 560, 407, 408, 400, 409, 410, 411, 412,
	413, 414, 415, 416, 0, 417, 418, 561, 562, 563,
	419, 564, 420, 421, 0, 422, 0, 423, 424, 425,
	426, 427, 428, 429, 565, 431, 430, 432, 0, 433,
	0, 0, 0, 0, 0, 434, 0, 436, 437, 438,
	435, 439, 440, 441, 442, 0, 443, 444, 445, 1065,
	446, 447, 448, 449, 566, 450, 0, 451, 452, 458,
	459, 453, 454, 460, 461, 462, 463, 464, 0, 466,
	467, 465, 468, 469, 470, 0, 471, 455, 456, 472,
	473, 1066, 474, 475, 476, 477, 478, 479, 567, 0,
	480, 0, 481, 482, 483, 484, 457, 485, 490, 568,
	486, 487, 488, 489, 569, 0, 492, 493, 0, 491,
	0, 494, 495, 496, 497, 498, 499, 318, 500, 0,
	501, 570, 571, 572, 573, 0, 508, 0, 502, 503,
	574, 504, 575, 0, 505, 506, 507, 0, 509, 510,
	0, 0, 511, 512, 513, 515, 516, 514, 517, 0,
	518, 0, 0, 519, 520, 521, 576, 577, 578, 0,
	523, 522, 579, 0, 0, 0, 0, 524, 525, 580,
	526, 527, 528, 1293, 1292, 0, 0, 0, 0, 1290,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	247, 248, 249, 250, 251, 252, 1466, 253, 254, 0,
	0, 0, 0, 0, 529, 0, 0, 0, 0, 255,
	256, 258, 257, 259, 260, 261, 530, 531, 0, 262,
	532, 263, 533, 0, 534, 264, 265, 266, 267, 268,
	0, 0, 0, 269, 535, 536, 537, 0, 270, 271,
	538, 0, 1259, 0, 272, 273, 274, 275, 276, 277,
	278, 0, 0, 280, 281, 282, 279, 0, 283, 0,
	284, 285, 286, 0, 287, 1051, 288, 289, 0, 0,
	0, 0, 0, 0, 0, 290, 291, 292, 293, 0,
	294, 539, 540, 0, 298, 295, 296, 0, 299, 297,
	0, 300, 301, 302, 0, 0, 303, 304, 305, 0,
	306, 307, 0, 308, 309, 310, 0, 311, 312, 541,
	313, 314, 315, 317, 319, 316, 320, 321, 322, 323,
	542, 543, 0, 244, 0, 0, 0, 0, 0, 324,
	325, 326, 544, 0, 0, 0, 327, 0, 328, 0,
	0, 1052, 329, 330, 545, 546, 331, 332, 0, 333,
	547, 0, 548, 334, 0, 335, 336, 337, 338, 339,
	549, 550, 551, 396, 1054, 340, 341, 0, 342, 343,
	344, 345, 0, 0, 0, 0, 346, 347, 349, 0,
	1053, 348, 552, 553, 0, 554, 0, 350, 351, 1055,
	555, 1056, 352, 353, 354, 1057, 355, 0, 0, 0,
	356, 357, 358, 359, 360, 361, 0, 362, 364, 363,
	0, 365, 556, 1058, 366, 367, 1059, 0, 368, 369,
	370, 0, 0, 371, 372, 373, 374, 0, 375, 376,
	378, 380, 377, 379, 384, 381, 382, 383, 386, 0,
	385, 1060, 387, 388, 389, 392, 393, 391, 1061, 390,
	0, 0, 1062, 394, 0, 557, 395, 558, 397, 398,
	0, 0, 399, 0, 0, 0, 401, 402, 403, 0,
	0, 404, 405, 559, 1063, 406, 1064, 560, 407, 408,
	400, 409, 410, 411, 412, 413, 414, 415, 416, 0,
	417, 418, 561, 562, 563, 419, 564, 420, 421, 0,
	422, 0, 423, 424, 425, 426, 427, 428, 429, 565,
	431, 430, 432, 0, 433, 0, 0, 0, 0, 0,
	434, 0, 436, 437, 438, 435, 439, 440, 441, 442,
	0, 443, 444, 445, 1065, 446, 447, 448, 449, 566,
	450, 0, 451, 452, 458, 459, 453, 454, 460, 461,
	462, 463, 464, 0, 466, 467, 465, 468, 469, 470,
	0, 471, 455, 456, 472, 473, 1066, 474, 475, 476,
	477, 478, 479, 567, 0, 480, 0, 481, 482, 483,
	484, 457, 485, 490, 568, 486, 487, 488, 489, 569,
	0, 492, 493, 0, 491, 0, 494, 495, 496, 497,
	498, 499, 318, 500, 0, 501, 570, 571, 572, 573,
	0, 508, 0, 502, 503, 574, 504, 575, 0, 505,
	506, 507, 0, 509, 510, 0, 0, 511, 512, 513,
	515, 516, 514, 517, 0, 518, 0, 0, 519, 520,
	521, 576, 577, 578, 0, 523, 522, 579, 0, 0,
	0, 0, 524, 525, 580, 526, 527, 528, 1293, 1292,
	0, 0, 0, 0, 1290, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 247, 248, 249, 250, 251,
	252, 3145, 253, 254, 0, 0, 0, 0, 0, 529,
	0, 0, 0, 0, 255, 256, 258, 257, 259, 260,
	261, 530, 531, 0, 262, 532, 263, 533, 0, 534,
	264, 265, 266, 267, 268, 0, 0, 0, 269, 535,
	536, 537, 0, 270, 271, 538, 0, 1259, 0, 272,
	273, 274, 275, 276, 277, 278, 0, 0, 280, 281,
	282, 279, 0, 283, 0, 284, 285, 286, 0, 287,
	1051, 288, 289, 0, 0, 0, 0, 0, 0, 0,
	290, 291, 292, 293, 0, 294, 539, 540, 0, 298,
	295, 296, 0, 299, 297, 0, 300, 301, 302, 0,
	0, 303, 304, 305, 0, 306, 307, 0, 308, 309,
	310, 0, 311, 312, 541, 313, 314, 315, 317, 319,
	316, 320, 321, 322, 323, 542, 543, 0, 244, 0,
	0, 0, 0, 0, 324, 325, 326, 544, 0, 0,
	0, 327, 0, 328, 0, 0, 1052, 329, 330, 545,
	546, 331, 332, 0, 333, 547, 0, 548, 334, 0,
	335, 336, 337, 338, 339, 549, 550, 551, 396, 1054,
	340, 341, 0, 342, 343, 344, 345, 0, 0, 0,
	0, 346, 347, 349, 0, 1053, 348, 552, 553, 0,
	554, 0, 350, 351, 1055, 555, 1056, 352, 353, 354,
	1057, 355, 0, 0, 0, 356, 357, 358, 359, 360,
	361, 0, 1958, 364, 363, 0, 365, 556, 1058, 366,
	367, 1059, 0, 368, 369, 370, 0, 0, 371, 372,
	373, 374, 0, 375, 376, 378, 380, 377, 379, 384,
	381, 382, 383, 386, 0, 385, 1060, 387, 388, 389,
	392, 393, 391, 1061, 390, 0, 0, 1062, 394, 0,
	557, 395, 558, 397, 398, 0, 0, 399, 0, 0,
	0, 401, 402, 403, 0, 0, 404, 405, 559, 1063,
	406, 1064, 560, 407, 408, 400, 409, 410, 411, 412,
	413, 414, 415, 416, 0, 417, 418, 561, 562, 563,
	419, 564, 420, 421, 0, 422, 0, 423, 424, 425,
	426, 427, 428, 429, 565, 431, 430, 432, 0, 433,
	0, 0, 0, 0, 0, 434, 0, 436, 437, 438,
	435, 439, 440, 441, 442, 0, 443, 444, 445, 1065,
	446, 447, 448, 449, 566, 450, 0, 451, 452, 458,
	459, 453, 454, 460, 461, 462, 463, 464, 0, 466,
	467, 465, 468, 469, 470, 0, 471, 455, 456, 472,
	473, 1066, 474, 475, 476, 477, 478, 479, 567, 0,
	480, 0, 481, 482, 483, 484, 457, 485, 490, 568,
	486, 487, 488, 489, 569, 0, 492, 493, 0, 491,
	0, 494, 495, 496, 497, 498, 499, 318, 500, 0,
	501, 570, 571, 572, 573, 0, 508, 0, 502, 503,
	574, 504, 575, 0, 505, 506, 507, 0, 509, 510,
	0, 0, 511, 512, 513, 515, 516, 514, 517, 0,
	518, 0, 0, 519, 520, 521, 576, 577, 578, 0,
	523, 522, 579, 0, 0, 0, 0, 524, 525, 580,
	526, 527, 528, 1293, 1292, 0, 0, 0, 0, 1290,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	247, 248, 249, 250, 251, 252, 1466, 253, 254, 0,
	0, 0, 0, 0, 529, 0, 0, 0, 0, 255,
	256, 258, 257, 259, 260, 261, 530, 531, 0, 262,
	532, 263, 533, 0, 534, 264, 265, 266, 267, 268,
	0, 0, 0, 269, 535, 536, 537, 0, 270, 271,
	538, 0, 1259, 0, 272, 273, 274, 275, 276, 277,
	278, 0, 0, 280, 281, 282, 279, 0, 283, 0,
	284, 285, 286, 0, 287, 1051, 288, 289, 0, 0,
	0, 0, 0, 0, 0, 290, 291, 292, 293, 0,
	294, 539, 540, 0, 298, 295, 296, 0, 299, 297,
	0, 300, 301, 302, 0, 0, 303, 304, 305, 0,
	306, 307, 0, 308, 309, 310, 0, 311, 312, 541,
	313, 314, 315, 317, 319, 316, 320, 321, 322, 323,
	542, 543, 0, 244, 0, 0, 0, 0, 0, 324,
	325, 326, 544, 0, 0, 0, 327, 0, 328, 0,
	0, 1052, 329, 330, 545, 546, 331, 332, 0, 333,
	547, 0, 548, 334, 0, 335, 336, 337, 338, 339,
	549, 550, 551, 396, 1054, 340, 341, 0, 342, 343,
	344, 345, 0, 0, 0, 0, 346, 347, 349, 0,
	1053, 348, 552, 553, 0, 554, 0, 350, 351, 1055,
	555, 1056, 352, 353, 354, 1057, 355, 0, 0, 0,
	356, 357, 358, 359, 360, 361, 0, 362, 364, 363,
	0, 365, 556, 1058, 366, 367, 1059, 0, 368, 369,
	370, 0, 0, 371, 372, 373, 374, 0, 375, 376,
	378, 380, 377, 379, 384, 381, 382, 383, 386, 0,
	385, 1060, 387, 388, 389, 392, 393, 391, 1061, 390,
	0, 0, 1062, 394, 0, 557, 395, 558, 397, 398,
	0, 0, 399, 0, 0, 0, 401, 402, 403, 0,
	0, 404, 405, 559, 1063, 406, 1064, 560, 407, 408,
	400, 409, 410, 411, 412, 413, 414, 415, 416, 0,
	417, 418, 561, 562, 563, 419, 564, 420, 421, 0,
	422, 0, 423, 424, 425, 426, 427, 428, 429, 565,
	431, 430, 432, 0, 433, 0, 0, 0, 0, 0,
	434, 0, 436, 437, 438, 435, 439, 440, 441, 442,
	0, 443, 444, 445, 1065, 446, 447, 448, 449, 566,
	450, 0, 451, 452, 458, 459, 453, 454, 460, 461,
	462, 463, 464, 0, 466, 467, 465, 468, 469, 470,
	0, 471, 455, 456, 472, 473, 1066, 474, 475, 476,
	477, 478, 479, 567, 0, 480, 0, 481, 482, 483,
	484, 457, 485, 490, 568, 486, 487, 488, 489, 569,
	0, 492, 493, 0, 491, 0, 494, 495, 496, 497,
	498, 499, 318, 500, 0, 501, 570, 571, 572, 573,
	0, 508, 0, 502, 503, 574, 504, 575, 0, 505,
	506, 507, 0, 509, 510, 0, 0, 511, 512, 513,
	515, 516, 514, 517, 0, 518, 0, 0, 519, 520,
	521, 576, 577, 578, 0, 523, 522, 579, 1108, 0,
	0, 0, 524, 525, 580, 526, 527, 528, 0, 0,
	0, 0, 0, 0, 0, 247, 248, 249, 250, 251,
	252, 0, 253, 254, 0, 0, 0, 0, 0, 1011,
	0, 1450, 0, 0, 255, 256, 258, 257, 259, 260,
	261, 530, 531, 0, 262, 532, 263, 533, 0, 534,
	264, 265, 266, 267, 268, 0, 1010, 0, 269, 535,
	536, 537, 0, 270, 271, 1017, 0, 998, 0, 272,
	273, 274, 275, 276, 277, 278, 0, 0, 280, 281,
	282, 279, 0, 283, 0, 284, 285, 286, 0, 287,
	1051, 288, 289, 1001, 999, 1000, 1007, 1003, 1002, 1006,
	290, 291, 292, 293, 0, 294, 539, 540, 0, 298,
	295, 296, 0, 299, 297, 0, 300, 301, 302, 0,
	0, 303, 304, 305, 0, 306, 307, 0, 308, 309,
	310, 0, 311, 312, 541, 313, 314, 315, 317, 319,
	316, 320, 321, 322, 323, 1042, 1043, 0, 244, 0,
	0, 0, 0, 0, 324, 325, 326, 544, 0, 0,
	0, 327, 0, 328, 0, 0, 1052, 329, 330, 545,
	546, 331, 332, 0, 333, 1049, 0, 548, 334, 0,
	335, 336, 337, 338, 339, 1012, 1013, 1016, 396, 1054,
	340, 341, 0, 342, 343, 344, 345, 0, 0, 0,
	245, 346, 347, 349, 0, 1053, 348, 552, 553, 0,
	554, 0, 350, 351, 1055, 1014, 1056, 352, 353, 354,
	1057, 355, 0, 0, 0, 356, 357, 358, 359, 360,
	361, 0, 362, 364, 363, 0, 365, 1050, 1058, 366,
	367, 1059, 0, 368, 369, 370, 1005, 1004, 371, 372,
	373, 374, 0, 375, 376, 378, 380, 377, 379, 384,
	381, 382, 383, 386, 0, 385, 1060, 387, 388, 389,
	392, 393, 391, 1061, 390, 0, 246, 1062, 394, 0,
	1015, 395, 558, 397, 398, 0, 0, 399, 0, 0,
	0, 401, 402, 403, 0, 0, 404, 405, 559, 1063,
	406, 1064, 1044, 407, 408, 400, 409, 410, 411, 412,
	413, 414, 415, 416, 0, 417, 418, 561, 562, 1045,
	419, 564, 420, 421, 0, 422, 0, 423, 424, 425,
	426, 427, 428, 429, 565, 431, 430, 432, 0, 433,
	0, 0, 0, 0, 0, 434, 0, 436, 437, 438,
	435, 439, 440, 441, 442, 0, 443, 444, 445, 1065,
	446, 447, 448, 449, 566, 450, 0, 451, 452, 458,
	459, 453, 454, 460, 461, 462, 463, 464, 0, 466,
	467, 465, 468, 469, 470, 1008, 471, 455, 456, 472,
	473, 1066, 474, 475, 476, 477, 478, 479, 567, 0,
	480, 0, 481, 482, 483, 484, 457, 485, 490, 568,
	486, 487, 488, 489, 1046, 0, 492, 493, 0, 491,
	0, 494, 495, 496, 497, 498, 499, 318, 500, 0,
	501, 570, 571, 572, 573, 0, 508, 0, 502, 503,
	1047, 504, 1048, 0, 505, 506, 507, 0, 509, 510,
	0, 0, 511, 512, 513, 515, 516, 514, 517, 1009,
	518, 0, 0, 519, 520, 521, 576, 577, 578, 0,
	523, 522, 579, 933, 0, 241, 0, 524, 525, 580,
	526, 527, 528, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 247, 248, 249, 250, 251, 252, 0, 253,
	254, 0, 0, 0, 0, 0, 529, 0, 0, 0,
	0, 255, 256, 258, 257, 259, 260, 261, 530, 531,
	0, 262, 532, 263, 533, 0, 534, 264, 265, 266,
	267, 268, 0, 0, 0, 269, 535, 536, 537, 0,
	270, 271, 538, 0, 0, 0, 272, 273, 274, 275,
	276, 277, 278, 0, 0, 280, 281, 282, 279, 0,
	283, 0, 284, 285, 286, 0, 287, 0, 288, 289,
	0, 0, 0, 0, 0, 0, 0, 290, 291, 292,
	293, 0, 294, 539, 540, 0, 298, 295, 296, 0,
	299, 297, 0, 300, 301, 302, 0, 0, 303, 304,
	305, 0, 306, 307, 0, 308, 309, 310, 0, 311,
	312, 541, 313, 314, 315, 317, 319, 316, 320, 321,
	322, 323, 542, 543, 0, 0, 0, 0, 0, 0,
	0, 324, 325, 326, 544, 0, 0, 0, 327, 0,
	328, 0, 0, 0, 329, 330, 545, 546, 331, 332,
	0, 333, 547, 0, 548, 334, 0, 335, 336, 337,
	338, 339, 549, 550, 551, 396, 0, 340, 341, 0,
	342, 343, 344, 345, 0, 0, 0, 0, 346, 347,
	349, 0, 0, 348, 552, 553, 0, 554, 0, 350,
	351, 0, 555, 0, 352, 353, 354, 0, 355, 0,
	0, 0, 356, 357, 358, 359, 360, 361, 0, 362,
	364, 363, 0, 365, 556, 0, 366, 367, 0, 0,
	368, 369, 370, 0, 0, 371, 372, 373, 374, 0,
	375, 376, 378, 380, 377, 379, 384, 381, 382, 383,
	386, 0, 385, 0, 387, 388, 389, 392, 393, 391,
	0, 390, 0, 0, 0, 394, 0, 557, 395, 558,
	397, 398, 0, 0, 399, 0, 0, 0, 401, 402,
	403, 0, 0, 404, 405, 559, 0, 406, 0, 560,
	407, 408, 400, 409, 410, 411, 412, 413, 414, 415,
	416, 0, 417, 418, 561, 562, 563, 419, 564, 420,
	421, 0, 422, 0, 423, 424, 425, 426, 427, 428,
	429, 565, 431, 430, 432, 0, 433, 0, 0, 0,
	0, 0, 434, 0, 436, 437, 438, 435, 439, 440,
	441, 442, 0, 443, 444, 445, 0, 446, 447, 448,
	449, 566, 450, 0, 451, 452, 458, 459, 453, 454,
	460, 461, 462, 463, 464, 208, 466, 467, 465, 468,
	469, 470, 0, 471, 455, 456, 472, 473, 0, 474,
	475, 476, 477, 478, 479, 567, 0, 480, 0, 481,
	482, 483, 484, 457, 485, 490, 568, 486, 487, 488,
	489, 569, 0, 492, 493, 0, 491, 210, 494, 495,
	496, 497, 498, 499, 318, 500, 0, 501, 570, 571,
	572, 573, 0, 508, 0, 502, 503, 574, 504, 575,
	0, 505, 506, 507, 0, 509, 510, 0, 0, 511,
	512, 513, 515, 516, 514, 517, 0, 518, 0, 0,
	519, 520, 521, 1444, 577, 578, 0, 523, 522, 579,
	241, 0, 0, 202, 524, 525, 580, 526, 527, 528,
	0, 203, 0, 0, 0, 0, 0, 247, 248, 249,
	250, 251, 252, 0, 253, 254, 0, 0, 0, 0,
	0, 529, 0, 174, 0, 0, 255, 256, 258, 257,
	259, 260, 261, 530, 531, 0, 262, 532, 263, 533,
	0, 534, 264, 265, 266, 267, 268, 0, 0, 0,
	269, 535, 536, 537, 0, 270, 271, 538, 0, 0,
	0, 272, 273, 274, 275, 276, 277, 278, 0, 0,
	280, 281, 282, 279, 0, 283, 0, 284, 285, 286,
	0, 287, 0, 288, 289, 0, 0, 0, 0, 0,
	0, 0, 290, 291, 292, 293, 0, 294, 539, 540,
	0, 298, 295, 296, 0, 299, 297, 0, 300, 301,
	302, 0, 0, 303, 304, 305, 0, 306, 307, 0,
	308, 309, 310, 0, 311, 312, 541, 313, 314, 315,
	317, 319, 316, 320, 321, 322, 323, 542, 543, 0,
	244, 0, 0, 0, 0, 0, 324, 325, 326, 544,
	0, 0, 0, 327, 0, 328, 0, 0, 0, 329,
	330, 545, 546, 331, 332, 0, 333, 547, 0, 548,
	334, 0, 335, 336, 337, 338, 339, 549, 550, 551,
	396, 0, 340, 341, 0, 342, 343, 344, 345, 0,
	0, 0, 245, 346, 347, 349, 0, 0, 348, 552,
	553, 0, 554, 0, 350, 351, 0, 555, 0, 352,
	353, 354, 0, 355, 0, 0, 0, 356, 357, 358,
	359, 360, 361, 0, 362, 364, 363, 0, 365, 556,
	0, 366, 367, 0, 0, 368, 369, 370, 0, 0,
	371, 372, 373, 374, 0, 375, 376, 378, 380, 377,
	379, 384, 381, 382, 383, 386, 0, 385, 0, 387,
	388, 389, 392, 393, 391, 0, 390, 0, 246, 0,
	394, 0, 557, 395, 558, 397, 398, 0, 0, 399,
	0, 0, 0, 401, 402, 403, 0, 0, 404, 405,
	559, 0, 406, 0, 560, 407, 408, 400, 409, 410,
	411, 412, 413, 414, 415, 416, 0, 417, 418, 561,
	562, 563, 419, 564, 420, 421, 0, 422, 0, 423,
	424, 425, 426, 427, 428, 429, 565, 431, 430, 432,
	0, 433, 0, 0, 0, 0, 0, 434, 0, 436,
	437, 438, 435, 439, 440, 441, 442, 0, 443, 444,
	445, 0, 446, 447, 448, 449, 566, 450, 0, 451,
	452, 458, 459, 453, 454, 460, 461, 462, 463, 464,
	0, 466, 467, 465, 468, 469, 470, 0, 471, 455,
	456, 472, 473, 0, 474, 475, 476, 477, 478, 479,
	567, 0, 480, 0, 481, 482, 483, 484, 457, 485,
	490, 568, 486, 487, 488, 489, 569, 0, 492, 493,
	0, 491, 0, 494, 495, 496, 497, 498, 499, 318,
	500, 0, 501, 570, 571, 572, 573, 0, 508, 0,
	502, 503, 574, 504, 575, 0, 505, 506, 507, 0,
	509, 510, 0, 0, 511, 512, 513, 515, 516, 514,
	517, 0, 518, 0, 0, 519, 520, 521, 576, 577,
	578, 0, 523, 522, 579, 0, 1384, 0, 241, 524,
	525, 580, 526, 527, 528, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 247, 248, 249, 250, 251,
	252, 0, 253, 254, 0, 0, 0, 0, 1784, 529,
	0, 0, 0, 0, 255, 256, 258, 257, 259, 260,
	261, 530, 531, 0, 262, 532, 263, 533, 0, 534,
	264, 265, 266, 267, 268, 0, 0, 0, 269, 535,
	536, 537, 0, 270, 271, 538, 0, 0, 0, 272,
	273, 274, 275, 276, 277, 278, 0, 0, 280, 281,
	282, 279, 0, 283, 0, 284, 285, 286, 0, 287,
	0, 288, 289, 0, 0, 0, 0, 0, 0, 0,
	290, 291, 292, 293, 0, 294, 539, 540, 0, 298,
	295, 296, 0, 299, 297, 0, 300, 301, 302, 0,
	0, 303, 304, 305, 0, 306, 307, 0, 308, 309,
	310, 0, 311, 312, 541, 313, 314, 315, 317, 319,
	316, 320, 321, 322, 323, 542, 543, 0, 244, 0,
	0, 0, 0, 0, 324, 325, 326, 544, 0, 0,
	0, 327, 0, 328, 0, 0, 0, 329, 330, 545,
	546, 331, 332, 0, 333, 547, 0, 548, 334, 0,
	335, 336, 337, 338, 339, 549, 550, 551, 396, 0,
	340, 341, 0, 342, 343, 344, 345, 0, 0, 0,
	245, 346, 347, 349, 0, 0, 348, 552, 553, 0,
	554, 0, 350, 351, 0, 555, 0, 352, 353, 354,
	0, 355, 0, 0, 0, 356, 357, 358, 359, 360,
	361, 0, 362, 364, 363, 0, 365, 556, 0, 366,
	367, 0, 0, 368, 369, 370, 0, 0, 371, 372,
	373, 374, 0, 375, 376, 378, 380, 377, 379, 384,
	381, 382, 383, 386, 0, 385, 0, 387, 388, 389,
	392, 393, 391, 0, 390, 0, 246, 0, 394, 0,
	557, 395, 558, 397, 398, 0, 0, 399, 0, 0,
	0, 401, 402, 403, 0, 0, 404, 405, 559, 0,
	406, 0, 560, 407, 408, 400, 409, 410, 411, 412,
	413, 414, 415, 416, 0, 417, 418, 561, 562, 563,
	419, 564, 420, 421, 0, 422, 0, 423, 424, 425,
	426, 427, 428, 429, 565, 431, 430, 432, 0, 433,
	0, 0, 0, 0, 0, 434, 0, 436, 437, 438,
	435, 439, 440, 441, 442, 0, 443, 444, 445, 0,
	446, 447, 448, 449, 566, 450, 0, 451, 452, 458,
	459, 453, 454, 460, 461, 462, 463, 464, 0, 466,
	467, 465, 468, 469, 470, 0, 471, 455, 456, 472,
	473, 0, 474, 475, 476, 477, 478, 479, 567, 0,
	480, 0, 481, 482, 483, 484, 457, 485, 490, 568,
	486, 487, 488, 489, 569, 0, 492, 493, 0, 491,
	0, 494, 495, 496, 497, 498, 499, 318, 500, 0,
	501, 570, 571, 572, 573, 0, 508, 0, 502, 503,
	574, 504, 575, 0, 505, 506, 507, 0, 509, 510,
	0, 0, 511, 512, 513, 515, 516, 514, 517, 0,
	518, 0, 0, 519, 520, 521, 576, 577, 578, 0,
	523, 522, 579, 0, 241, 2664, 0, 524, 525, 580,
	526, 527, 528, 0, 0, 0, 0, 0, 0, 0,
	0, 247, 248, 249, 250, 251, 252, 0, 253, 254,
	0, 0, 0, 0, 1388, 529, 0, 0, 0, 0,
	255, 256, 258, 257, 259, 260, 261, 530, 531, 0,
	262, 532, 263, 533, 0, 534, 264, 265, 266, 267,
	268, 0, 0, 0, 269, 535, 536, 537, 0, 270,
	271, 538, 0, 0, 0, 272, 273, 274, 275, 276,
	277, 278, 0, 0, 280, 281, 282, 279, 0, 283,
	0, 284, 285, 286, 0, 287, 0, 288, 289, 0,
	0, 0, 0, 0, 0, 0, 290, 291, 292, 293,
	0, 294, 539, 540, 0, 298, 295, 296, 0, 299,
	297, 0, 300, 301, 302, 0, 0, 303, 304, 305,
	0, 306, 307, 0, 308, 309, 310, 0, 311, 312,
	541, 313, 314, 315, 317, 319, 316, 320, 321, 322,
	323, 542, 543, 0, 0, 0, 0, 0, 0, 0,
	324, 325, 326, 544, 0, 0, 0, 327, 0, 328,
	0, 0, 0, 329, 330, 545, 546, 331, 332, 0,
	333, 547, 0, 548, 334, 0, 335, 336, 337, 338,
	339, 549, 550, 551, 396, 0, 340, 341, 0, 342,
	343, 344, 345, 0, 0, 0, 0, 346, 347, 349,
	0, 0, 348, 552, 553, 0, 554, 0, 350, 351,
	0, 555, 0, 352, 353, 354, 0, 355, 0, 0,
	0, 356, 357, 358, 359, 360, 361, 0, 362, 364,
	363, 0, 365, 556, 0, 366, 367, 0, 0, 368,
	369, 370, 0, 0, 371, 372, 373, 374, 0, 375,
	376, 378, 380, 377, 379, 384, 381, 382, 383, 386,
	0, 385, 0, 387, 388, 389, 392, 393, 391, 0,
	390, 0, 0, 0, 394, 0, 557, 395, 558, 397,
	398, 0, 0, 399, 0, 0, 0, 401, 402, 403,
	0, 0, 404, 405, 559, 0, 406, 0, 560, 407,
	408, 400, 409, 410, 411, 412, 413, 414, 415, 416,
	0, 417, 418, 561, 562, 563, 419, 564, 420, 421,
	0, 422, 0, 423, 424, 425, 426, 427, 428, 429,
	565, 431, 430, 432, 0, 433, 0, 0, 0, 0,
	0, 434, 0, 436, 437, 438, 435, 439, 440, 441,
	442, 0, 443, 444, 445, 0, 446, 447, 448, 449,
	566, 450, 0, 451, 452, 458, 459, 453, 454, 460,
	461, 462, 463, 464, 0, 466, 467, 465, 468, 469,
	470, 0, 471, 455, 456, 472, 473, 0, 474, 475,
	476, 477, 478, 479, 567, 0, 480, 0, 481, 482,
	483, 484, 457, 485, 490, 568, 486, 487, 488, 489,
	569, 0, 492, 493, 0, 491, 0, 494, 495, 496,
	497, 498, 499, 318, 500, 0, 501, 570, 571, 572,
	573, 0, 508, 0, 502, 503, 574, 504, 575, 0,
	505, 506, 507, 0, 509, 510, 0, 0, 511, 512,
	513, 515, 516, 514, 517, 0, 518, 0, 0, 519,
	520, 521, 576, 577, 578, 0, 523, 522, 579, 241,
	0, 0, 0, 524, 525, 580, 526, 527, 528, 0,
	0, 0, 0, 0, 0, 0, 247, 248, 249, 250,
	251, 252, 0, 253, 254, 0, 0, 0, 0, 0,
	529, 0, 4194, 0, 0, 255, 256, 258, 257, 259,
	260, 261, 530, 531, 0, 262, 532, 263, 533, 0,
	534, 264, 265, 266, 267, 268, 0, 0, 0, 269,
	535, 536, 537, 0, 270, 271, 538, 0, 0, 0,
	272, 273, 274, 275, 276, 277, 278, 0, 0, 280,
	281, 282, 279, 0, 283, 0, 284, 285, 286, 0,
	287, 0, 288, 289, 0, 0, 0, 0, 0, 0,
	0, 290, 291, 292, 293, 0, 294, 539, 540, 0,
	298, 295, 296, 0, 299, 297, 0, 300, 301, 302,
	0, 0, 303, 304, 305, 0, 306, 307, 0, 308,
	309, 310, 0, 311, 312, 541, 313, 314, 315, 317,
	319, 316, 320, 321, 322, 323, 542, 543, 0, 244,
	0, 0, 0, 0, 0, 324, 325, 326, 544, 0,
	0, 0, 327, 0, 328, 0, 0, 0, 329, 330,
	545, 546, 331, 332, 0, 333, 547, 0, 548, 334,
	0, 335, 336, 337, 338, 339, 549, 550, 551, 396,
	0, 340, 341, 0, 342, 343, 344, 345, 0, 0,
	0, 245, 346, 347, 349, 0, 0, 348, 552, 553,
	0, 554, 0, 350, 351, 0, 555, 0, 352, 353,
	354, 0, 355, 0, 0, 0, 356, 357, 358, 359,
	360, 361, 0, 362, 364, 363, 0, 365, 556, 0,
	366, 367, 0, 0, 368, 369, 370, 0, 0, 371,
	372, 373, 374, 0, 375, 376, 378, 380, 377, 379,
	384, 381, 382, 383, 386, 0, 385, 0, 387, 388,
	389, 392, 393, 391, 0, 390, 0, 246, 0, 394,
	0, 557, 395, 558, 397, 398, 0, 0, 399, 0,
	0, 0, 401, 402, 403, 0, 0, 404, 405, 559,
	0, 406, 0, 560, 407, 408, 400, 409, 410, 411,
	412, 413, 414, 415, 416, 0, 417, 418, 561, 562,
	563, 419, 564, 420, 421, 0, 422, 0, 423, 424,
	425, 426, 427, 428, 429, 565, 431, 430, 432, 0,
	433, 0, 0, 0, 0, 0, 434, 0, 436, 437,
	438, 435, 439, 440, 441, 442, 0, 443, 444, 445,
	0, 446, 447, 448, 449, 566, 450, 0, 451, 452,
	458, 459, 453, 454, 460, 461, 462, 463, 464, 0,
	466, 467, 465, 468, 469, 470, 0, 471, 455, 456,
	472, 473, 0, 474, 475, 476, 477, 478, 479, 567,
	0, 480, 0, 481, 482, 483, 484, 457, 485, 490,
	568, 486, 487, 488, 489, 569, 0, 492, 493, 0,
	491, 0, 494, 495, 496, 497, 498, 499, 318, 500,
	0, 501, 570, 571, 572, 573, 0, 508, 0, 502,
	503, 574, 504, 575, 0, 505, 506, 507, 0, 509,
	510, 0, 0, 511, 512, 513, 515, 516, 514, 517,
	0, 518, 0, 0, 519, 520, 521, 576, 577, 578,
	241, 523, 522, 579, 0, 0, 0, 0, 524, 525,
	580, 526, 527, 528, 0, 0, 0, 247, 248, 249,
	250, 251, 252, 0, 253, 254, 0, 0, 0, 0,
	0, 529, 0, 0, 0, 3089, 255, 256, 258, 257,
	259, 260, 261, 530, 531, 0, 262, 532, 263, 533,
	0, 534, 264, 265, 266, 267, 268, 0, 0, 0,
	269, 535, 536, 537, 0, 270, 271, 538, 0, 0,
	0, 272, 273, 274, 275, 276, 277, 278, 0, 0,
	280, 281, 282, 279, 0, 283, 0, 284, 285, 286,
	0, 287, 0, 288, 289, 0, 0, 0, 0, 0,
	0, 0, 290, 291, 292, 293, 0, 294, 539, 540,
	0, 298, 295, 296, 0, 299, 297, 0, 300, 301,
	302, 0, 0, 303, 304, 305, 0, 306, 307, 0,
	308, 309, 310, 0, 311, 312, 541, 313, 314, 315,
	317, 319, 316, 320, 321, 322, 323, 542, 543, 0,
	244, 0, 0, 0, 0, 0, 324, 325, 326, 544,
	0, 0, 0, 327, 0, 328, 0, 0, 0, 329,
	330, 545, 546, 331, 332, 0, 333, 547, 0, 548,
	334, 0, 335, 336, 337, 338, 339, 549, 550, 551,
	396, 0, 340, 341, 0, 342, 343, 344, 345, 0,
	0, 0, 245, 346, 347, 349, 0, 0, 348, 552,
	553, 0, 554, 0, 350, 351, 0, 555, 0, 352,
	353, 354, 0, 355, 0, 0, 0, 356, 357, 358,
	359, 360, 361, 0, 362, 364, 363, 0, 365, 556,
	0, 366, 367, 0, 0, 368, 369, 370, 0, 0,
	371, 372, 373, 374, 0, 375, 376, 378, 380, 377,
	379, 384, 381, 382, 383, 386, 0, 385, 0, 387,
	388, 389, 392, 393, 391, 0, 390, 0, 246, 0,
	394, 0, 557, 395, 558, 397, 398, 0, 0, 399,
	0, 0, 0, 401, 402, 403, 0, 0, 404, 405,
	559, 0, 406, 0, 560, 407, 408, 400, 409, 410,
	411, 412, 413, 414, 415, 416, 0, 417, 418, 561,
	562, 563, 419, 564, 420, 421, 0, 422, 0, 423,
	424, 425, 426, 427, 428, 429, 565, 431, 430, 432,
	0, 433, 0, 0, 0, 0, 0, 434, 0, 436,
	437, 438, 435, 439, 440, 441, 442, 0, 443, 444,
	445, 0, 446, 447, 448, 449, 566, 450, 0, 451,
	452, 458, 459, 453, 454, 460, 461, 462, 463, 464,
	0, 466, 467, 465, 468, 469, 470, 0, 471, 455,
	456, 472, 473, 0, 474, 475, 476, 477, 478, 479,
	567, 0, 480, 0, 481, 482, 483, 484, 457, 485,
	490, 568, 486, 487, 488, 489, 569, 0, 492, 493,
	0, 491, 0, 494, 495, 496, 497, 498, 499, 318,
	500, 0, 501, 570, 571, 572, 573, 0, 508, 0,
	502, 503, 574, 504, 575, 0, 505, 506, 507, 0,
	509, 510, 0, 0, 511, 512, 513, 515, 516, 514,
	517, 0, 518, 0, 0, 519, 520, 521, 576, 577,
	578, 241, 523, 522, 579, 0, 0, 0, 0, 524,
	525, 580, 526, 527, 528, 0, 0, 0, 247, 248,
	249, 250, 251, 252, 0, 253, 254, 0, 0, 0,
	0, 0, 529, 0, 0, 0, 1388, 255, 256, 258,
	257, 259, 260, 261, 530, 531, 0, 262, 532, 263,
	533, 0, 534, 264, 265, 266, 267, 268, 0, 0,
	0, 269, 535, 536, 537, 0, 270, 271, 538, 0,
	0, 0, 272, 273, 274, 275, 276, 277, 278, 0,
	0, 280, 281, 282, 279, 0, 283, 0, 284, 285,
	286, 0, 287, 0, 288, 289, 0, 0, 0, 0,
	0, 0, 0, 290, 291, 292, 293, 0, 294, 539,
	540, 0, 298, 295, 296, 0, 299, 297, 0, 300,
	301, 302, 0, 0, 303, 304, 305, 0, 306, 307,
	0, 308, 309, 310, 0, 311, 312, 541, 313, 314,
	315, 317, 319, 316, 320, 321, 322, 323, 542, 543,
	0, 0, 0, 0, 0, 0, 0, 324, 325, 326,
	544, 0, 0, 0, 327, 0, 328, 0, 0, 0,
	329, 330, 545, 546, 331, 332, 0, 333, 547, 0,
	548, 334, 0, 335, 336, 337, 338, 339, 549, 550,
	551, 396, 0, 340, 341, 0, 342, 343, 344, 345,
	0, 0, 0, 0, 346, 347, 349, 0, 0, 348,
	552, 553, 0, 554, 0, 350, 351, 0, 555, 0,
	352, 353, 354, 0, 355, 0, 0, 0, 356, 357,
	358, 359, 360, 361, 0, 362, 364, 363, 0, 365,
	556, 0, 366, 367, 0, 0, 368, 369, 370, 0,
	0, 371, 372, 373, 374, 0, 375, 376, 378, 380,
	377, 379, 384, 381, 382, 383, 386, 0, 385, 0,
	387, 388, 389, 392, 393, 391, 0, 390, 0, 0,
	0, 394, 0, 557, 395, 558, 397, 398, 0, 0,
	399, 0, 0, 0, 401, 402, 403, 0, 0, 404,
	405, 559, 0, 406, 0, 560, 407, 408, 400, 409,
	410, 411, 412, 413, 414, 415, 416, 0, 417, 418,
	561, 562, 563, 419, 564, 420, 421, 0, 422, 0,
	423, 424, 425, 426, 427, 428, 429, 565, 431, 430,
	432, 0, 433, 0, 0, 0, 0, 0, 434, 0,
	436, 437, 438, 435, 439, 440, 441, 442, 0, 443,
	444, 445, 0, 446, 447, 448, 449, 566, 450, 0,
	451, 452, 458, 459, 453, 454, 460, 461, 462, 463,
	464, 0, 466, 467, 465, 468, 469, 470, 0, 471,
	455, 456, 472, 473, 0, 474, 475, 476, 477, 478,
	479, 567, 0, 480, 0, 481, 482, 483, 484, 457,
	485, 490, 568, 486, 487, 488, 489, 569, 0, 492,
	493, 0, 491, 0, 494, 495, 496, 497, 498, 499,
	318, 500, 0, 501, 570, 571, 572, 573, 0, 508,
	0, 502, 503, 574, 504, 575, 0, 505, 506, 507,
	0, 509, 510, 0, 0, 511, 512, 513, 515, 516,
	514, 517, 0, 518, 0, 0, 519, 520, 521, 576,
	577, 578, 0, 523, 522, 579, 241, 0, 0, 0,
	524, 525, 580, 526, 527, 528, 0, 0, 0, 0,
	0, 0, 0, 247, 248, 249, 250, 251, 252, 0,
	253, 254, 0, 0, 0, 0, 0, 529, 0, 2635,
	0, 0, 255, 256, 258, 257, 259, 260, 261, 530,
	531, 0, 262, 532, 263, 533, 0, 534, 264, 265,
	266, 267, 268, 0, 0, 0, 269, 535, 536, 537,
	0, 270, 271, 538, 0, 0, 0, 272, 273, 274,
	275, 276, 277, 278, 0, 0, 280, 281, 282, 279,
	0, 283, 0, 284, 285, 286, 0, 287, 0, 288,
	289, 0, 0, 0, 0, 0, 0, 0, 290, 291,
	292, 293, 0, 294, 539, 540, 0, 298, 295, 296,
	0, 299, 297, 0, 300, 301, 302, 0, 0, 303,
	304, 305, 0, 306, 307, 0, 308, 309, 310, 0,
	311, 312, 541, 313, 314, 315, 317, 319, 316, 320,
	321, 322, 323, 542, 543, 0, 0, 0, 0, 0,
	0, 0, 324, 325, 326, 544, 0, 0, 0, 327,
	0, 328, 0, 0, 0, 329, 330, 545, 546, 331,
	332, 0, 333, 547, 0, 548, 334, 0, 335, 336,
	337, 338, 339, 549, 550, 551, 396, 0, 340, 341,
	0, 342, 343, 344, 345, 0, 0, 0, 0, 346,
	347, 349, 0, 0, 348, 552, 553, 0, 554, 0,
	350, 351, 0, 555, 0, 352, 353, 354, 0, 355,
	0, 0, 0, 356, 357, 358, 359, 360, 361, 0,
	362, 364, 363, 0, 365, 556, 0, 366, 367, 0,
	0, 368, 369, 370, 0, 0, 371, 372, 373, 374,
	0, 375, 376, 378, 380, 377, 379, 384, 381, 382,
	383, 386, 0, 385, 0, 387, 388, 389, 392, 393,
	391, 0, 390, 0, 0, 0, 394, 0, 557, 395,
	558, 397, 398, 0, 0, 399, 0, 0, 0, 401,
	402, 403, 0, 0, 404, 405, 559, 0, 406, 0,
	560, 407, 408, 400, 409, 410, 411, 412, 413, 414,
	415, 416, 0, 417, 418, 561, 562, 563, 419, 564,
	420, 421, 0, 422, 0, 423, 424, 425, 426, 427,
	428, 429, 565, 431, 430, 432, 0, 433, 0, 0,
	0, 0, 0, 434, 0, 436, 437, 438, 435, 439,
	440, 441, 442, 0, 443, 444, 445, 0, 446, 447,
	448, 449, 566, 450, 0, 451, 452, 458, 459, 453,
	454, 460, 461, 462, 463, 464, 0, 466, 467, 465,
	468, 469, 470, 0, 471, 455, 456, 472, 473, 0,
	474, 475, 476, 477, 478, 479, 567, 0, 480, 0,
	481, 482, 483, 484, 457, 485, 490, 568, 486, 487,
	488, 489, 569, 0, 492, 493, 0, 491, 0, 494,
	495, 496, 497, 498, 499, 318, 500, 0, 501, 570,
	571, 572, 573, 0, 508, 0, 502, 503, 574, 504,
	575, 0, 505, 506, 507, 0, 509, 510, 0, 0,
	511, 512, 513, 515, 516, 514, 517, 0, 518, 0,
	0, 519, 520, 521, 576, 577, 578, 0, 523, 522,
	579, 241, 0, 0, 0, 524, 525, 580, 526, 527,
	528, 0, 0, 0, 0, 0, 0, 0, 247, 248,
	249, 250, 251, 252, 0, 253, 254, 0, 0, 0,
	0, 0, 529, 0, 3245, 0, 0, 255, 256, 258,
	257, 259, 260, 261, 530, 531, 0, 262, 532, 263,
	533, 0, 534, 264, 265, 266, 267, 268, 0, 0,
	0, 269, 535, 536, 537, 0, 270, 271, 538, 0,
	0, 0, 272, 273, 274, 275, 276, 277, 278, 0,
	0, 280, 281, 282, 279, 0, 283, 0, 284, 285,
	286, 0, 287, 0, 288, 289, 0, 0, 0, 0,
	0, 0, 0, 290, 291, 292, 293, 0, 294, 539,
	540, 0, 298, 295, 296, 0, 299, 297, 0, 300,
	301, 302, 0, 0, 303, 304, 305, 0, 306, 307,
	0, 308, 309, 310, 0, 311, 312, 541, 313, 314,
	315, 317, 319, 316, 320, 321, 322, 323, 542, 543,
	0, 0, 0, 0, 0, 0, 0, 324, 325, 326,
	544, 0, 0, 0, 327, 0, 328, 0, 0, 0,
	329, 330, 545, 546, 331, 332, 0, 333, 547, 0,
	548, 334, 0, 335, 336, 337, 338, 339, 549, 550,
	551, 396, 0, 340, 341, 0, 342, 343, 344, 345,
	0, 0, 0, 0, 346, 347, 349, 0, 0, 348,
	552, 553, 0, 554, 0, 350, 351, 0, 555, 0,
	352, 353, 354, 0, 355, 0, 0, 0, 356, 357,
	358, 359, 360, 361, 0, 362, 364, 363, 0, 365,
	556, 0, 366, 367, 0, 0, 368, 369, 370, 0,
	0, 371, 372, 373, 374, 0, 375, 376, 378, 380,
	377, 379, 384, 381, 382, 383, 386, 0, 385, 0,
	387, 388, 389, 392, 393, 391, 0, 390, 0, 0,
	0, 394, 0, 557, 395, 558, 397, 398, 0, 0,
	399, 0, 0, 0, 401, 402, 403, 0, 0, 404,
	405, 559, 0, 406, 0, 560, 407, 408, 400, 409,
	410, 411, 412, 413, 414, 415, 416, 0, 417, 418,
	561, 562, 563, 419, 564, 420, 421, 0, 422, 0,
	423, 424, 425, 426, 427, 428, 429, 565, 431, 430,
	432, 0, 433, 0, 0, 0, 0, 0, 434, 0,
	436, 437, 438, 435, 439, 440, 441, 442, 0, 443,
	444, 445, 0, 446, 447, 448, 449, 566, 450, 0,
	451, 452, 458, 459, 453, 454, 460, 461, 462, 463,
	464, 0, 466, 467, 465, 468, 469, 470, 0, 471,
	455, 456, 472, 473, 0, 474, 475, 476, 477, 478,
	479, 567, 0, 480, 0, 481, 482, 483, 484, 457,
	485, 490, 568, 486, 487, 488, 489, 569, 0, 492,
	493, 0, 491, 0, 494, 495, 496, 497, 498, 499,
	318, 500, 0, 501, 570, 571, 572, 573, 0, 508,
	0, 502, 503, 574, 504, 575, 0, 505, 506, 507,
	0, 509, 510, 0, 0, 511, 512, 513, 515, 516,
	514, 517, 0, 518, 0, 0, 519, 520, 521, 576,
	577, 578, 0, 523, 522, 579, 0, 783, 0, 666,
	524, 525, 580, 526, 527, 528, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 247, 248, 249, 250,
	251, 252, 0, 253, 254, 0, 0, 0, 0, 2059,
	529, 0, 0, 0, 0, 255, 256, 258, 257, 259,
	260, 261, 530, 531, 0, 262, 532, 263, 533, 0,
	534, 264, 265, 266, 267, 268, 0, 0, 0, 269,
	535, 536, 537, 0, 270, 271, 538, 0, 0, 0,
	272, 273, 274, 275, 276, 277, 278, 0, 0, 280,
	281, 282, 279, 0, 283, 0, 284, 285, 286, 0,
	287, 0, 288, 289, 0, 0, 0, 0, 0, 0,
	0, 290, 291, 673, 293, 0, 294, 539, 540, 0,
	298, 295, 296, 0, 299, 297, 0, 300, 301, 302,
	0, 0, 303, 304, 305, 0, 306, 307, 0, 308,
	309, 310, 0, 311, 312, 541, 313, 314, 315, 317,
	319, 316, 320, 321, 322, 323, 542, 543, 0, 244,
	0, 0, 0, 0, 0, 324, 325, 326, 544, 0,
	0, 0, 327, 0, 328, 0, 781, 0, 329, 330,
	545, 546, 331, 332, 0, 333, 547, 0, 548, 334,
	0, 335, 336, 337, 338, 339, 549, 550, 551, 396,
	0, 340, 341, 0, 342, 343, 344, 345, 0, 0,
	0, 245, 346, 347, 349, 0, 0, 348, 552, 553,
	0, 554, 0, 350, 351, 0, 555, 0, 352, 353,
	354, 0, 355, 0, 0, 0, 356, 357, 358, 359,
	360, 361, 0, 362, 364, 363, 0, 365, 556, 0,
	366, 367, 0, 0, 368, 369, 370, 0, 0, 371,
	372, 373, 374, 0, 375, 376, 378, 380, 377, 379,
	384, 381, 382, 383, 386, 0, 385, 0, 387, 388,
	389, 392, 393, 391, 0, 390, 0, 246, 0, 394,
	0, 557, 395, 558, 397, 398, 0, 0, 399, 0,
	0, 0, 401, 402, 403, 0, 0, 404, 405, 559,
	0, 406, 0, 560, 407, 408, 400, 409, 410, 411,
	412, 413, 414, 415, 416, 0, 417, 418, 561, 562,
	563, 419, 564, 420, 421, 0, 422, 0, 423, 424,
	425, 426, 427, 428, 429, 565, 431, 430, 432, 0,
	433, 0, 0, 0, 0, 0, 434, 0, 436, 437,
	438, 435, 439, 440, 441, 442, 0, 443, 444, 445,
	0, 446, 447, 448, 449, 566, 450, 0, 451, 452,
	458, 459, 453, 454, 460, 461, 462, 463, 464, 0,
	466, 467, 465, 468, 469, 470, 0, 471, 455, 456,
	472, 473, 0, 474, 475, 476, 477, 478, 479, 567,
	0, 480, 0, 481, 482, 483, 484, 457, 485, 490,
	568, 486, 487, 488, 489, 569, 0, 492, 493, 0,
	491, 671, 494, 495, 496, 497, 672, 499, 318, 500,
	0, 501, 570, 571, 572, 573, 0, 508, 0, 502,
	503, 574, 504, 575, 0, 505, 506, 507, 0, 509,
	510, 0, 0, 511, 512, 513, 515, 516, 514, 517,
	0, 518, 0, 0, 519, 520, 521, 576, 577, 578,
	0, 523, 522, 579, 0, 664, 0, 666, 524, 525,
	580, 526, 527, 528, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 247, 248, 249, 250, 251, 252,
	676, 253, 254, 0, 0, 0, 0, 0, 529, 0,
	0, 0, 0, 255, 256, 258, 257, 259, 260, 261,
	530, 531, 0, 262, 532, 263, 533, 0, 534, 264,
	265, 266, 267, 268, 0, 0, 0, 269, 535, 536,
	537, 0, 270, 271, 538, 0, 0, 0, 272, 273,
	274, 275, 276, 277, 278, 0, 0, 280, 281, 282,
	279, 0, 283, 0, 284, 285, 286, 0, 287, 0,
	288, 289, 0, 0, 0, 0, 0, 0, 0, 290,
	291, 673, 293, 0, 294, 539, 540, 0, 298, 295,
	296, 0, 299, 297, 0, 300, 301, 302, 0, 0,
	303, 304, 305, 0, 306, 307, 0, 308, 309, 310,
	0, 311, 312, 541, 313, 314, 315, 317, 319, 316,
	320, 321, 322, 323, 542, 543, 0, 244, 0, 0,
	0, 0, 0, 324, 325, 326, 544, 0, 0, 0,
	327, 0, 328, 0, 0, 0, 329, 330, 545, 546,
	331, 332, 0, 333, 547, 0, 548, 334, 0, 335,
	336, 337, 338, 339, 549, 550, 551, 396, 0, 340,
	341, 0, 342, 343, 344, 345, 0, 0, 0, 245,
	346, 347, 349, 0, 0, 348, 552, 553, 0, 554,
	0, 350, 351, 0, 555, 0, 352, 353, 354, 0,
	355, 0, 0, 0, 356, 357, 358, 359, 360, 361,
	0, 362, 364, 363, 0, 365, 556, 0, 366, 367,
	0, 0, 368, 369, 370, 0, 0, 371, 372, 373,
	374, 0, 375, 376, 378, 380, 377, 379, 384, 381,
	382, 383, 386, 0, 385, 0, 387, 388, 389, 392,
	393, 391, 0, 390, 0, 246, 0, 394, 0, 557,
	395, 558, 397, 398, 0, 0, 399, 0, 0, 0,
	401, 402, 403, 0, 0, 404, 405, 559, 0, 406,
	0, 560, 407, 408, 400, 409, 410, 411, 412, 413,
	414, 415, 416, 0, 417, 418, 561, 562, 563, 419,
	564, 420, 421, 0, 422, 0, 423, 424, 425, 426,
	427, 428, 429, 565, 431, 430, 432, 0, 433, 0,
	0, 0, 0, 0, 434, 0, 436, 437, 438, 435,
	439, 440, 441, 442, 0, 443, 444, 445, 0, 446,
	447, 448, 449, 566, 450, 0, 451, 452, 458, 459,
	453, 454, 460, 461, 462, 463, 464, 0, 466, 467,
	465, 468, 469, 470, 0, 471, 455, 456, 472, 473,
	0, 474, 475, 476, 477, 478, 479, 567, 0, 480,
	0, 481, 482, 483, 484, 457, 485, 490, 568, 486,
	487, 488, 489, 569, 0, 492, 493, 0, 491, 671,
	494, 495, 496, 497, 672, 499, 318, 500, 0, 501,
	570, 571, 572, 573, 0, 508, 0, 502, 503, 574,
	504, 575, 0, 505, 506, 507, 0, 509, 510, 0,
	0, 511, 512, 513, 515, 516, 514, 517, 0, 518,
	0, 0, 519, 520, 521, 576, 577, 578, 666, 523,
	522, 579, 0, 0, 0, 0, 524, 525, 580, 526,
	527, 528, 0, 0, 0, 247, 248, 249, 250, 251,
	252, 0, 253, 254, 0, 0, 0, 0, 676, 529,
	0, 0, 0, 0, 255, 256, 258, 257, 259, 260,
	261, 530, 531, 0, 262, 532, 263, 533, 0, 534,
	264, 265, 266, 267, 268, 0, 0, 0, 269, 535,
	536, 537, 0, 270, 271, 538, 0, 0, 0, 272,
	273, 274, 275, 276, 277, 278, 0, 0, 280, 281,
	282, 279, 0, 283, 0, 284, 285, 286, 0, 287,
	0, 288, 289, 0, 0, 0, 0, 0, 0, 0,
	290, 291, 673, 293, 0, 294, 539, 540, 0, 298,
	295, 296, 0, 299, 297, 0, 300, 301, 302, 0,
	0, 303, 304, 305, 0, 306, 307, 0, 308, 309,
	310, 0, 311, 312, 541, 313, 314, 315, 317, 319,
	316, 320, 321, 322, 323, 542, 543, 0, 244, 0,
	0, 0, 0, 0, 324, 325, 326, 544, 0, 0,
	0, 327, 0, 328, 0, 0, 0, 329, 330, 545,
	546, 331, 332, 0, 333, 547, 0, 548, 334, 0,
	335, 336, 337, 338, 339, 549, 550, 551, 396, 0,
	340, 341, 0, 342, 343, 344, 345, 0, 0, 0,
	245, 346, 347, 349, 0, 0, 348, 552, 553, 0,
	554, 0, 350, 351, 0, 555, 0, 352, 353, 354,
	0, 355, 0, 0, 0, 356, 357, 358, 359, 360,
	361, 0, 362, 364, 363, 0, 365, 556, 0, 366,
	367, 0, 0, 368, 369, 370, 0, 0, 371, 372,
	373, 374, 0, 375, 376, 378, 380, 377, 379, 384,
	381, 382, 383, 386, 0, 385, 0, 387, 388, 389,
	392, 393, 391, 0, 390, 0, 246, 0, 394, 0,
	557, 395, 558, 397, 398, 0, 0, 399, 0, 0,
	0, 401, 402, 403, 0, 0, 404, 405, 559, 0,
	406, 0, 560, 407, 408, 400, 409, 410, 411, 412,
	413, 414, 415, 416, 0, 417, 418, 561, 562, 563,
	419, 564, 420, 421, 0, 422, 0, 423, 424, 425,
	426, 427, 428, 429, 565, 431, 430, 432, 0, 433,
	0, 0, 0, 0, 0, 434, 0, 436, 437, 438,
	435, 439, 440, 441, 442, 0, 443, 444, 445, 0,
	446, 447, 448, 449, 566, 450, 0, 451, 452, 458,
	459, 453, 454, 460, 461, 462, 463, 464, 0, 466,
	467, 465, 468, 469, 470, 0, 471, 455, 456, 472,
	473, 0, 474, 475, 476, 477, 478, 479, 567, 0,
	480, 0, 481, 482, 483, 484, 457, 485, 490, 568,
	486, 487, 488, 489, 569, 0, 492, 493, 0, 491,
	671, 494, 495, 496, 497, 672, 499, 318, 500, 0,
	501, 570, 571, 572, 573, 0, 508, 0, 502, 503,
	574, 504, 575, 0, 505, 506, 507, 0, 509, 510,
	0, 0, 511, 512, 513, 515, 516, 514, 517, 0,
	518, 0, 0, 519, 520, 521, 576, 577, 578, 666,
	523, 522, 579, 0, 0, 0, 0, 524, 525, 580,
	526, 527, 528, 0, 0, 0, 247, 248, 249, 250,
	251, 252, 0, 253, 254, 0, 0, 0, 0, 676,
	529, 0, 0, 0, 0, 255, 256, 258, 257, 259,
	260, 261, 530, 531, 0, 262, 532, 263, 533, 0,
	534, 264, 265, 266, 267, 268, 0, 0, 0, 269,
	535, 536, 537, 0, 270, 271, 538, 0, 0, 0,
	272, 273, 274, 275, 276, 277, 278, 0, 0, 280,
	281, 282, 279, 0, 283, 0, 284, 285, 286, 0,
	287, 0, 288, 289, 0, 0, 0, 0, 0, 0,
	0, 290, 291, 673, 293, 0, 294, 539, 540, 0,
	298, 295, 296, 0, 299, 297, 0, 300, 301, 302,
	0, 0, 303, 304, 305, 0, 306, 307, 0, 308,
	309, 310, 0, 311, 312, 541, 313, 314, 315, 317,
	319, 316, 320, 321, 322, 323, 542, 543, 0, 244,
	0, 0, 0, 0, 0, 324, 325, 326, 544, 0,
	0, 0, 327, 0, 328, 0, 0, 0, 329, 330,
	545, 546, 331, 332, 0, 333, 547, 0, 548, 334,
	0, 335, 336, 337, 338, 339, 549, 550, 551, 396,
	0, 340, 341, 0, 342, 343, 344, 345, 0, 0,
	0, 245, 346, 347, 349, 0, 0, 348, 552, 553,
	0, 554, 0, 350, 351, 0, 555, 0, 352, 353,
	354, 0, 355, 0, 0, 0, 356, 357, 358, 359,
	360, 361, 0, 362, 364, 363, 0, 365, 556, 0,
	366, 367, 0, 0, 368, 369, 370, 0, 0, 371,
	372, 373, 374, 0, 375, 376, 378, 380, 377, 379,
	384, 381, 382, 383, 386, 0, 385, 0, 387, 388,
	389, 392, 393, 391, 0, 390, 0, 246, 0, 394,
	0, 557, 395, 558, 397, 398, 0, 0, 399, 0,
	0, 0, 401, 402, 403, 0, 0, 404, 405, 559,
	0, 406, 0, 560, 407, 408, 400, 409, 410, 411,
	412, 413, 414, 415, 416, 0, 417, 418, 561, 562,
	563, 419, 564, 420, 421, 0, 422, 0, 423, 424,
	425, 426, 427, 428, 429, 565, 431, 430, 432, 0,
	433, 0, 0, 0, 0, 0, 434, 0, 436, 437,
	438, 435, 439, 440, 441, 442, 0, 443, 444, 445,
	0, 2096, 447, 448, 449, 566, 450, 0, 451, 452,
	458, 459, 453, 454, 460, 461, 462, 463, 464, 0,
	466, 467, 465, 468, 469, 470, 0, 471, 455, 456,
	472, 473, 0, 474, 475, 476, 477, 478, 479, 567,
	0, 480, 0, 481, 482, 483, 484, 457, 485, 490,
	568, 486, 487, 488, 489, 569, 0, 492, 493, 0,
	491, 671, 494, 495, 496, 497, 672, 499, 318, 500,
	0, 501, 570, 571, 572, 573, 0, 508, 0, 502,
	503, 574, 504, 575, 0, 505, 506, 507, 0, 509,
	510, 0, 0, 511, 512, 513, 515, 516, 514, 517,
	0, 518, 0, 0, 519, 520, 521, 576, 577, 578,
	1819, 523, 522, 579, 0, 0, 0, 0, 524, 525,
	580, 526, 527, 528, 0, 0, 0, 247, 248, 249,
	250, 251, 252, 0, 253, 254, 0, 0, 0, 0,
	676, 0, 0, 0, 0, 0, 255, 256, 258, 257,
	259, 260, 261, 0, 1825, 0, 262, 1815, 263, 1831,
	0, 1838, 264, 265, 266, 267, 268, 0, 0, 0,
	269, 1841, 1842, 0, 0, 270, 271, 0, 0, 1259,
	0, 272, 273, 274, 275, 276, 277, 278, 0, 0,
	280, 281, 282, 279, 0, 283, 0, 284, 285, 286,
	0, 287, 1051, 288, 289, 0, 0, 0, 0, 0,
	0, 0, 290, 291, 292, 293, 1034, 294, 1829, 1828,
	0, 298, 295, 296, 0, 299, 297, 0, 300, 301,
	302, 0, 0, 303, 1019, 305, 0, 306, 307, 0,
	308, 309, 310, 0, 311, 312, 0, 313, 314, 315,
	317, 319, 316, 320, 321, 322, 323, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 324, 325, 326, 1827,
	0, 0, 0, 327, 0, 328, 0, 0, 1052, 329,
	330, 1836, 1837, 331, 332, 0, 333, 0, 0, 0,
	334, 0, 335, 336, 337, 338, 339, 0, 0, 0,
	396, 1054, 340, 341, 0, 342, 343, 344, 345, 0,
	0, 0, 0, 346, 347, 349, 0, 1053, 348, 1822,
	1823, 0, 1818, 0, 350, 351, 1055, 0, 1056, 352,
	353, 354, 1057, 355, 0, 0, 0, 356, 357, 358,
	359, 360, 361, 0, 362, 364, 363, 0, 365, 0,
	1058, 366, 367, 1059, 0, 368, 369, 370, 0, 0,
	371, 372, 373, 374, 0, 375, 376, 378, 380, 377,
	379, 384, 381, 382, 383, 386, 0, 385, 1060, 387,
	388, 389, 392, 393, 391, 1061, 390, 0, 0, 1062,
	394, 0, 0, 395, 1830, 397, 398, 0, 0, 399,
	0, 0, 0, 401, 402, 403, 0, 0, 404, 405,
	0, 1063, 406, 1064, 0, 407, 408, 400, 409, 410,
	411, 412, 413, 414, 415, 416, 0, 417, 418, 1812,
	1813, 0, 419, 0, 420, 421, 0, 422, 0, 423,
	424, 425, 426, 427, 428, 429, 1826, 431, 430, 432,
	0, 433, 0, 0, 0, 0, 0, 434, 0, 436,
	437, 438, 435, 439, 440, 441, 442, 0, 443, 444,
	445, 1065, 446, 447, 448, 449, 0, 450, 0, 451,
	452, 458, 459, 453, 454, 460, 461, 462, 463, 464,
	0, 466, 467, 465, 468, 469, 470, 0, 471, 455,
	456, 472, 473, 1066, 474, 475, 476, 477, 478, 479,
	1824, 0, 480, 0, 481, 482, 483, 484, 457, 485,
	490, 1840, 486, 487, 488, 489, 0, 0, 492, 493,
	0, 491, 0, 494, 495, 496, 497, 498, 499, 318,
	500, 0, 501, 1832, 1833, 1834, 1835, 0, 508, 0,
	502, 503, 0, 504, 0, 0, 505, 506, 507, 0,
	509, 510, 0, 0, 511, 512, 513, 515, 516, 514,
	517, 0, 518, 0, 0, 519, 520, 521, 0, 1816,
	1839, 0, 523, 522, 0, 0, 0, 0, 0, 524,
	525, 0, 526, 527, 528, 1293, 1292, 0, 0, 0,
	0, 1290, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 247, 248, 249, 250, 251, 252, 0, 253,
	254, 0, 1806, 0, 0, 0, 529, 0, 0, 0,
	0, 255, 256, 258, 257, 259, 260, 261, 530, 531,
	0, 262, 532, 263, 533, 0, 534, 264, 265, 266,
	267, 268, 0, 0, 0, 269, 535, 536, 537, 0,
	270, 271, 538, 0, 1259, 0, 272, 273, 274, 275,
	276, 277, 278, 0, 0, 280, 281, 282, 279, 0,
	283, 0, 284, 285, 286, 0, 287, 1051, 288, 289,
	0, 0, 0, 0, 0, 0, 0, 290, 291, 292,
	293, 0, 294, 539, 540, 0, 298, 295, 296, 0,
	299, 297, 0, 300, 301, 302, 0, 0, 303, 304,
	305, 0, 306, 307, 0, 308, 309, 310, 0, 311,
	312, 541, 313, 314, 315, 317, 319, 316, 320, 321,
	322, 323, 542, 543, 0, 244, 0, 0, 0, 0,
	0, 324, 325, 326, 544, 0, 0, 0, 327, 0,
	328, 0, 0, 1052, 329, 330, 545, 546, 331, 332,
	0, 333, 547, 0, 548, 334, 0, 335, 336, 337,
	338, 339, 549, 550, 551, 396, 1054, 340, 341, 0,
	342, 343, 344, 345, 0, 0, 0, 0, 346, 347,
	349, 0, 1053, 348, 552, 553, 0, 554, 0, 350,
	351, 1055, 555, 1056, 352, 353, 354, 1057, 355, 0,
	0, 0, 356, 357, 358, 359, 360, 361, 0, 362,
	364, 363, 0, 365, 556, 1058, 366, 367, 1059, 0,
	368, 369, 370, 0, 0, 371, 372, 373, 374, 0,
	375, 376, 378, 380, 377, 379, 384, 381, 382, 383,
	386, 0, 385, 1060, 387, 388, 389, 392, 393, 391,
	1061, 390, 0, 0, 1062, 394, 3408, 557, 395, 558,
	397, 398, 0, 0, 399, 0, 0, 0, 401, 402,
	403, 0, 0, 404, 405, 559, 1063, 406, 1064, 560,
	407, 408, 400, 409, 410, 411, 412, 413, 414, 415,
	416, 0, 417, 418, 561, 562, 563, 419, 564, 420,
	421, 0, 422, 0, 423, 424, 425, 426, 427, 428,
	429, 565, 431, 430, 432, 0, 433, 0, 0, 0,
	0, 0, 434, 0, 436, 437, 438, 435, 439, 440,
	441, 442, 0, 443, 444, 445, 1065, 446, 447, 448,
	449, 566, 450, 0, 451, 452, 458, 459, 453, 454,
	460, 461, 462, 463, 464, 0, 466, 467, 465, 468,
	469, 470, 0, 471, 455, 456, 472, 473, 1066, 474,
	475, 476, 477, 478, 479, 567, 0, 480, 0, 481,
	482, 483, 484, 457, 485, 490, 568, 486, 487, 488,
	489, 569, 0, 492, 493, 0, 491, 0, 494, 495,
	496, 497, 498, 499, 318, 500, 0, 501, 570, 571,
	572, 573, 0, 508, 0, 502, 503, 574, 504, 575,
	0, 505, 506, 507, 0, 509, 510, 0, 0, 511,
	512, 513, 515, 516, 514, 517, 0, 518, 0, 0,
	519, 520, 521, 576, 577, 578, 0, 523, 522, 579,
	0, 0, 0, 0, 524, 525, 580, 526, 527, 528,
	1293, 1292, 0, 0, 0, 0, 1290, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 247, 248, 249,
	250, 251, 252, 0, 253, 254, 0, 0, 0, 0,
	0, 529, 0, 0, 0, 0, 255, 256, 258, 257,
	259, 260, 261, 530, 531, 0, 262, 532, 263, 533,
	0, 534, 264, 265, 266, 267, 268, 0, 0, 0,
	269, 535, 536, 537, 0, 270, 271, 538, 0, 1259,
	0, 272, 273, 274, 275, 276, 277, 278, 0, 0,
	280, 281, 282, 279, 0, 283, 0, 284, 285, 286,
	0, 287, 1051, 288, 289, 0, 0, 0, 0, 0,
	0, 0, 290, 291, 292, 293, 0, 294, 539, 540,
	0, 298, 295, 296, 0, 299, 297, 0, 300, 301,
	302, 0, 0, 303, 304, 305, 0, 306, 307, 0,
	308, 309, 310, 0, 311, 312, 541, 313, 314, 315,
	317, 319, 316, 320, 321, 322, 323, 542, 543, 0,
	244, 0, 0, 0, 0, 0, 324, 325, 326, 544,
	0, 0, 0, 327, 0, 328, 0, 0, 1052, 329,
	330, 545, 546, 331, 332, 0, 333, 547, 0, 548,
	334, 0, 335, 336, 337, 338, 339, 549, 550, 551,
	396, 1054, 340, 341, 0, 342, 343, 344, 345, 0,
	0, 0, 0, 346, 347, 349, 0, 1053, 348, 552,
	553, 0, 554, 0, 350, 351, 1055, 555, 1056, 352,
	353, 354, 1057, 355, 0, 0, 0, 356, 357, 358,
	359, 360, 361, 0, 362, 364, 363, 0, 365, 556,
	1058, 366, 367, 1059, 0, 368, 369, 370, 0, 0,
	371, 372, 373, 374, 0, 375, 376, 378, 380, 377,
	379, 384, 381, 382, 383, 386, 0, 385, 1060, 387,
	388, 389, 392, 393, 391, 1061, 390, 0, 0, 1062,
	394, 3062, 557, 395, 558, 397, 398, 0, 0, 399,
	0, 0, 0, 401, 402, 403, 0, 0, 404, 405,
	559, 1063, 406, 1064, 560, 407, 408, 400, 409, 410,
	411, 412, 413, 414, 415, 416, 0, 417, 418, 561,
	562, 563, 419, 564, 420, 421, 0, 422, 0, 423,
	424, 425, 426, 427, 428, 429, 565, 431, 430, 432,
	0, 433, 0, 0, 0, 0, 0, 434, 0, 436,
	437, 438, 435, 439, 440, 441, 442, 0, 443, 444,
	445, 1065, 446, 447, 448, 449, 566, 450, 0, 451,
	452, 458, 459, 453, 454, 460, 461, 462, 463, 464,
	0, 466, 467, 465, 468, 469, 470, 0, 471, 455,
	456, 472, 473, 1066, 474, 475, 476, 477, 478, 479,
	567, 0, 480, 0, 481, 482, 483, 484, 457, 485,
	490, 568, 486, 487, 488, 489, 569, 0, 492, 493,
	0, 491, 0, 494, 495, 496, 497, 498, 499, 318,
	500, 0, 501, 570, 571, 572, 573, 0, 508, 0,
	502, 503, 574, 504, 575, 0, 505, 506, 507, 0,
	509, 510, 0, 0, 511, 512, 513, 515, 516, 514,
	517, 0, 518, 0, 0, 519, 520, 521, 576, 577,
	578, 0, 523, 522, 579, 1293, 1292, 0, 0, 524,
	525, 580, 526, 527, 528, 0, 0, 0, 0, 0,
	0, 0, 247, 248, 249, 250, 251, 252, 0, 253,
	254, 0, 0, 0, 0, 0, 529, 0, 0, 0,
	0, 255, 256, 258, 257, 259, 260, 261, 530, 531,
	0, 262, 532, 263, 533, 0, 534, 264, 265, 266,
	267, 268, 0, 0, 0, 269, 535, 536, 537, 0,
	270, 271, 538, 0, 1259, 0, 272, 273, 274, 275,
	276, 277, 278, 0, 0, 280, 281, 282, 279, 0,
	283, 0, 284, 285, 286, 0, 287, 1051, 288, 289,
	0, 0, 0, 0, 0, 0, 3005, 290, 291, 292,
	293, 0, 294, 539, 540, 0, 298, 295, 296, 0,
	299, 297, 0, 300, 301, 302, 0, 0, 303, 304,
	305, 0, 306, 307, 0, 308, 309, 310, 0, 311,
	312, 541, 313, 314, 315, 317, 319, 316, 320, 321,
	322, 323, 542, 543, 0, 244, 0, 0, 0, 0,
	0, 324, 325, 326, 544, 0, 0, 0, 327, 0,
	328, 0, 0, 1052, 329, 330, 545, 546, 331, 332,
	0, 333, 547, 0, 548, 334, 0, 335, 336, 337,
	338, 339, 549, 550, 551, 396, 1054, 340, 341, 0,
	342, 343, 344, 345, 0, 0, 0, 0, 346, 347,
	349, 0, 1053, 348, 552, 553, 0, 554, 0, 350,
	351, 1055, 555, 1056, 352, 353, 354, 1057, 355, 0,
	0, 0, 356, 357, 358, 359, 360, 361, 0, 362,
	364, 363, 0, 365, 556, 1058, 366, 367, 1059, 0,
	368, 369, 370, 0, 0, 371, 372, 373, 374, 0,
	375, 376, 378, 380, 377, 379, 384, 381, 382, 383,
	386, 0, 385, 1060, 387, 388, 389, 392, 393, 391,
	1061, 390, 0, 0, 1062, 394, 0, 557, 395, 558,
	397, 398, 0, 0, 399, 0, 0, 0, 401, 402,
	403, 0, 0, 404, 405, 559, 1063, 406, 1064, 560,
	407, 408, 400, 409, 410, 411, 412, 413, 414, 415,
	416, 0, 417, 418, 561, 562, 563, 419, 564, 420,
	421, 0, 422, 0, 423, 424, 425, 426, 427, 428,
	429, 565, 431, 430, 432, 0, 433, 0, 0, 0,
	0, 0, 434, 0, 436, 437, 438, 435, 439, 440,
	441, 442, 0, 443, 444, 445, 1065, 446, 447, 448,
	449, 566, 450, 0, 451, 452, 458, 459, 453, 454,
	460, 461, 462, 463, 464, 0, 466, 467, 465, 468,
	469, 470, 3006, 471, 455, 456, 472, 473, 1066, 474,
	475, 476, 477, 478, 479, 567, 0, 480, 0, 481,
	482, 483, 484, 457, 485, 490, 568, 486, 487, 488,
	489, 569, 0, 492, 493, 0, 491, 0, 494, 495,
	496, 497, 498, 499, 318, 500, 0, 501, 570, 571,
	572, 573, 0, 508, 0, 502, 503, 574, 504, 575,
	0, 505, 506, 507, 0, 509, 510, 0, 0, 511,
	512, 513, 515, 516, 514, 517, 0, 518, 0, 0,
	519, 520, 521, 576, 577, 578, 241, 523, 522, 579,
	0, 0, 0, 0, 524, 525, 580, 526, 527, 528,
	0, 0, 0, 247, 248, 249, 250, 251, 252, 0,
	253, 254, 0, 0, 0, 0, 0, 529, 0, 0,
	0, 0, 255, 256, 258, 257, 259, 260, 261, 530,
	531, 0, 262, 532, 263, 533, 0, 534, 264, 265,
	266, 267, 268, 0, 0, 0, 269, 535, 536, 537,
	0, 270, 271, 538, 0, 0, 0, 272, 273, 274,
	275, 276, 277, 278, 0, 0, 280, 281, 282, 279,
	0, 283, 0, 284, 285, 286, 0, 287, 0, 288,
	289, 0, 0, 0, 0, 0, 0, 0, 290, 291,
	292, 293, 0, 294, 539, 540, 0, 298, 295, 296,
	0, 299, 297, 0, 300, 301, 302, 0, 0, 303,
	304, 305, 0, 306, 307, 0, 308, 309, 310, 0,
	311, 312, 541, 313, 314, 315, 317, 319, 316, 320,
	321, 322, 323, 542, 543, 0, 244, 0, 0, 0,
	0, 0, 324, 325, 326, 544, 0, 0, 0, 327,
	0, 328, 0, 0, 0, 329, 330, 545, 546, 331,
	332, 0, 333, 547, 0, 548, 334, 0, 335, 336,
	337, 338, 339, 549, 550, 551, 396, 0, 340, 341,
	0, 342, 343, 344, 345, 0, 0, 0, 245, 346,
	347, 349, 0, 0, 348, 552, 553, 0, 554, 0,
	350, 351, 0, 555, 0, 352, 353, 354, 0, 355,
	0, 0, 0, 356, 357, 358, 359, 360, 361, 0,
	362, 364, 363, 0, 365, 556, 0, 366, 367, 0,
	0, 368, 369, 370, 0, 0, 371, 372, 373, 374,
	0, 375, 376, 378, 380, 377, 379, 384, 381, 382,
	383, 386, 0, 385, 0, 387, 388, 389, 392, 393,
	391, 0, 390, 0, 246, 0, 394, 0, 557, 395,
	558, 397, 398, 0, 0, 399, 0, 0, 0, 401,
	402, 403, 0, 0, 404, 405, 559, 0, 406, 0,
	560, 407, 408, 400, 409, 410, 411, 412, 413, 414,
	415, 416, 0, 417, 418, 561, 562, 563, 419, 564,
	420, 421, 0, 422, 0, 423, 424, 425, 426, 427,
	428, 429, 565, 431, 430, 432, 0, 433, 0, 0,
	0, 0, 0, 434, 0, 436, 437, 438, 435, 439,
	440, 441, 442, 0, 443, 444, 445, 0, 446, 447,
	448, 449, 566, 450, 0, 451, 452, 458, 459, 453,
	454, 460, 461, 462, 463, 464, 0, 466, 467, 465,
	468, 469, 470, 0, 471, 455, 456, 472, 473, 0,
	474, 475, 476, 477, 478, 479, 567, 0, 480, 0,
	481, 482, 483, 484, 457, 485, 490, 568, 486, 487,
	488, 489, 569, 0, 492, 493, 0, 491, 0, 494,
	495, 496, 497, 498, 499, 318, 500, 0, 501, 570,
	571, 572, 573, 0, 508, 0, 502, 503, 574, 504,
	575, 0, 505, 506, 507, 0, 509, 510, 0, 0,
	511, 512, 513, 515, 516, 514, 517, 0, 518, 0,
	0, 519, 520, 521, 576, 577, 578, 0, 523, 522,
	579, 0, 0, 0, 0, 524, 525, 580, 526, 527,
	528, 1493, 0, 1293, 1292, 0, 0, 0, 0, 1290,
	0, 0, 0, 0, 0, 0, 0, 676, 0, 0,
	247, 248, 249, 250, 251, 252, 0, 253, 254, 0,
	0, 0, 0, 0, 529, 0, 0, 0, 0, 255,
	256, 258, 257, 259, 260, 261, 530, 531, 0, 262,
	532, 263, 533, 0, 534, 264, 265, 266, 267, 268,
	0, 0, 0, 269, 535, 536, 537, 0, 270, 271,
	538, 0, 1259, 0, 272, 273, 274, 275, 276, 277,
	278, 0, 0, 280, 281, 282, 279, 0, 283, 0,
	284, 285, 286, 0, 287, 1051, 288, 289, 0, 0,
	0, 0, 0, 0, 0, 290, 291, 292, 293, 0,
	294, 539, 540, 0, 298, 295, 296, 0, 299, 297,
	0, 300, 301, 302, 0, 0, 303, 304, 305, 0,
	306, 307, 0, 308, 309, 310, 0, 311, 312, 541,
	313, 314, 315, 317, 319, 316, 320, 321, 322, 323,
	542, 543, 0, 244, 0, 0, 0, 0, 0, 1492,
	325, 326, 544, 0, 0, 0, 327, 0, 328, 0,
	0, 1052, 329, 330, 545, 546, 331, 332, 0, 333,
	547, 0, 548, 334, 0, 335, 336, 337, 338, 339,
	549, 550, 551, 396, 1054, 340, 341, 0, 342, 343,
	344, 345, 0, 0, 0, 0, 346, 347, 349, 0,
	1053, 348, 552, 553, 0, 554, 0, 350, 351, 1055,
	555, 1056, 352, 353, 354, 1057, 355, 0, 0, 0,
	356, 357, 358, 359, 360, 361, 0, 362, 364, 363,
	0, 365, 556, 1058, 366, 367, 1059, 0, 368, 369,
	370, 0, 0, 371, 372, 373, 374, 0, 375, 376,
	378, 380, 377, 379, 384, 381, 382, 383, 386, 0,
	385, 1060, 387, 388, 389, 392, 393, 391, 1061, 390,
	0, 0, 1062, 394, 0, 557, 395, 558, 397, 398,
	0, 0, 399, 0, 0, 0, 401, 402, 403, 0,
	0, 404, 405, 559, 1063, 406, 1064, 560, 407, 408,
	400, 409, 410, 411, 412, 413, 414, 415, 416, 0,
	417, 418, 561, 562, 563, 419, 564, 420, 421, 0,
	422, 0, 423, 424, 425, 426, 427, 1491, 429, 565,
	431, 430, 432, 0, 433, 0, 0, 0, 0, 0,
	434, 0, 436, 437, 438, 435, 439, 440, 441, 442,
	0, 443, 444, 445, 1065, 446, 447, 448, 449, 566,
	450, 0, 451, 452, 458, 459, 453, 454, 460, 1490,
	462, 463, 464, 0, 466, 467, 465, 468, 469, 470,
	0, 471, 455, 456, 472, 473, 1066, 474, 475, 476,
	477, 478, 479, 567, 0, 480, 0, 481, 482, 483,
	484, 457, 485, 490, 568, 486, 487, 488, 489, 569,
	0, 492, 493, 0, 491, 0, 494, 495, 496, 497,
	498, 499, 318, 500, 0, 501, 570, 571, 572, 573,
	0, 508, 0, 502, 503, 574, 504, 575, 0, 505,
	506, 507, 0, 509, 510, 0, 0, 511, 512, 513,
	515, 516, 514, 517, 0, 518, 0, 0, 519, 520,
	521, 576, 577, 578, 0, 523, 522, 579, 0, 0,
	0, 0, 524, 525, 580, 526, 527, 528, 1434, 0,
	1293, 1292, 0, 0, 0, 0, 1290, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 247, 248, 249,
	250, 251, 252, 0, 253, 254, 0, 0, 0, 0,
	0, 529, 0, 0, 0, 0, 255, 256, 258, 257,
	259, 260, 261, 530, 531, 0, 262, 532, 263, 533,
	0, 534, 264, 265, 266, 267, 268, 0, 0, 0,
	269, 535, 536, 537, 0, 270, 271, 538, 0, 1259,
	0, 272, 273, 274, 275, 276, 277, 278, 0, 0,
	280, 281, 282, 279, 0, 283, 0, 284, 285, 286,
	0, 287, 1051, 288, 289, 0, 0, 0, 0, 0,
	0, 0, 290, 291, 292, 293, 0, 294, 539, 540,
	0, 298, 295, 296, 0, 299, 297, 0, 300, 301,
	302, 0, 0, 303, 304, 305, 0, 306, 307, 0,
	308, 309, 310, 0, 311, 312, 541, 313, 314, 315,
	317, 319, 316, 320, 321, 322, 323, 542, 543, 0,
	244, 0, 0, 0, 0, 0, 324, 325, 326, 544,
	0, 0, 0, 327, 0, 328, 0, 0, 1052, 329,
	330, 545, 546, 331, 332, 0, 333, 547, 0, 548,
	334, 0, 335, 336, 337, 338, 339, 1433, 550, 551,
	396, 1054, 340, 341, 0, 342, 343, 344, 345, 0,
	0, 0, 0, 346, 347, 349, 0, 1053, 348, 552,
	553, 0, 554, 0, 350, 351, 1055, 555, 1056, 352,
	353, 354, 1057, 355, 0, 0, 0, 356, 357, 358,
	359, 360, 361, 0, 362, 364, 363, 0, 365, 556,
	1058, 366, 367, 1059, 0, 368, 369, 370, 0, 0,
	371, 372, 373, 374, 0, 375, 376, 378, 380, 377,
	379, 384, 381, 382, 383, 386, 0, 385, 1060, 387,
	388, 389, 392, 393, 391, 1061, 390, 0, 0, 1062,
	394, 0, 557, 395, 558, 397, 398, 0, 0, 399,
	0, 0, 0, 401, 402, 403, 0, 0, 404, 405,
	559, 1063, 406, 1064, 560, 407, 408, 400, 409, 410,
	411, 412, 413, 414, 415, 416, 0, 417, 418, 561,
	562, 563, 419, 564, 420, 421, 0, 422, 0, 423,
	424, 425, 426, 427, 428, 429, 565, 431, 430, 432,
	0, 433, 0, 0, 0, 0, 0, 434, 0, 436,
	437, 438, 435, 439, 440, 441, 442, 0, 443, 444,
	445, 1065, 446, 447, 448, 449, 566, 450, 0, 451,
	452, 458, 459, 453, 454, 460, 461, 462, 463, 464,
	0, 466, 467, 465, 468, 469, 470, 0, 471, 455,
	456, 472, 473, 1066, 474, 475, 476, 477, 478, 479,
	567, 0, 480, 0, 481, 482, 483, 484, 457, 485,
	490, 568, 486, 487, 488, 489, 569, 0, 492, 493,
	0, 491, 0, 494, 495, 496, 497, 498, 499, 318,
	500, 0, 501, 570, 571, 572, 573, 0, 508, 0,
	502, 503, 574, 504, 575, 0, 505, 506, 507, 0,
	509, 510, 0, 0, 511, 512, 513, 515, 516, 514,
	517, 0, 518, 0, 0, 519, 520, 521, 576, 577,
	578, 0, 523, 522, 579, 0, 0, 0, 0, 524,
	525, 580, 526, 527, 528, 1363, 0, 1293, 1292, 0,
	0, 0, 0, 1290, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 247, 248, 249, 250, 251, 252,
	0, 253, 254, 0, 0, 0, 0, 0, 529, 0,
	0, 0, 0, 255, 256, 258, 257, 259, 260, 261,
	530, 531, 0, 262, 532, 263, 533, 0, 534, 264,
	265, 266, 267, 268, 0, 0, 0, 269, 535, 536,
	537, 0, 270, 271, 538, 0, 1259, 0, 272, 273,
	274, 275, 276, 277, 278, 0, 0, 280, 281, 282,
	279, 0, 283, 0, 284, 285, 286, 0, 287, 1051,
	288, 289, 0, 0, 0, 0, 0, 0, 0, 290,
	291, 292, 293, 0, 294, 539, 540, 0, 298, 295,
	296, 0, 299, 297, 0, 300, 301, 302, 0, 0,
	303, 304, 305, 0, 306, 307, 0, 308, 309, 310,
	0, 311, 312, 541, 313, 314, 315, 317, 319, 316,
	320, 321, 322, 323, 542, 543, 0, 244, 0, 0,
	0, 0, 0, 324, 325, 326, 544, 0, 0, 0,
	327, 0, 328, 0, 0, 1052, 329, 330, 545, 546,
	331, 332, 0, 333, 547, 0, 548, 334, 0, 335,
	336, 337, 338, 339, 1362, 550, 551, 396, 1054, 340,
	341, 0, 342, 343, 344, 345, 0, 0, 0, 0,
	346, 347, 349, 0, 1053, 348, 552, 553, 0, 554,
	0, 350, 351, 1055, 555, 1056, 352, 353, 354, 1057,
	355, 0, 0, 0, 356, 357, 358, 359, 360, 361,
	0, 362, 364, 363, 0, 365, 556, 1058, 366, 367,
	1059, 0, 368, 369, 370, 0, 0, 371, 372, 373,
	374, 0, 375, 376, 378, 380, 377, 379, 384, 381,
	382, 383, 386, 0, 385, 1060, 387, 388, 389, 392,
	393, 391, 1061, 390, 0, 0, 1062, 394, 0, 557,
	395, 558, 397, 398, 0, 0, 399, 0, 0, 0,
	401, 402, 403, 0, 0, 404, 405, 559, 1063, 406,
	1064, 560, 407, 408, 400, 409, 410, 411, 412, 413,
	414, 415, 416, 0, 417, 418, 561, 562, 563, 419,
	564, 420, 421, 0, 422, 0, 423, 424, 425, 426,
	427, 428, 429, 565, 431, 430, 432, 0, 433, 0,
	0, 0, 0, 0, 434, 0, 436, 437, 438, 435,
	439, 440, 441, 442, 0, 443, 444, 445, 1065, 446,
	447, 448, 449, 566, 450, 0, 451, 452, 458, 459,
	453, 454, 460, 461, 462, 463, 464, 0, 466, 467,
	465, 468, 469, 470, 0, 471, 455, 456, 472, 473,
	1066, 474, 475, 476, 477, 478, 479, 567, 0, 480,
	0, 481, 482, 483, 484, 457, 485, 490, 568, 486,
	487, 488, 489, 569, 0, 492, 493, 0, 491, 0,
	494, 495, 496, 497, 498, 499, 318, 500, 0, 501,
	570, 571, 572, 573, 0, 508, 0, 502, 503, 574,
	504, 575, 0, 505, 506, 507, 0, 509, 510, 0,
	0, 511, 512, 513, 515, 516, 514, 517, 0, 518,
	0, 0, 519, 520, 521, 576, 577, 578, 0, 523,
	522, 579, 0, 0, 0, 0, 524, 525, 580, 526,
	527, 528, 1328, 0, 1293, 1292, 0, 0, 0, 0,
	1290, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 247, 248, 249, 250, 251, 252, 0, 253, 254,
	0, 0, 0, 0, 0, 529, 0, 0, 0, 0,
	255, 256, 258, 257, 259, 260, 261, 530, 531, 0,
	262, 532, 263, 533, 0, 534, 264, 265, 266, 267,
	268, 0, 0, 0, 269, 535, 536, 537, 0, 270,
	271, 538, 0, 1259, 0, 272, 273, 274, 275, 276,
	277, 278, 0, 0, 280, 281, 282, 279, 0, 283,
	0, 284, 285, 286, 0, 287, 1051, 288, 289, 0,
	0, 0, 0, 0, 0, 0, 290, 291, 292, 293,
	0, 294, 539, 540, 0, 298, 295, 296, 0, 299,
	297, 0, 300, 301, 302, 0, 0, 303, 304, 305,
	0, 306, 307, 0, 308, 309, 310, 0, 311, 312,
	541, 313, 314, 315, 317, 319, 316, 320, 321, 322,
	323, 542, 543, 0, 244, 0, 0, 0, 0, 0,
	324, 325, 326, 544, 0, 0, 0, 327, 0, 328,
	0, 0, 1052, 329, 330, 545, 546, 331, 332, 0,
	333, 547, 0, 548, 334, 0, 335, 336, 337, 338,
	339, 549, 550, 551, 396, 1054, 340, 341, 0, 342,
	343, 344, 345, 0, 0, 0, 0, 346, 347, 349,
	0, 1053, 348, 552, 553, 0, 554, 0, 350, 351,
	1055, 555, 1056, 352, 353, 354, 1057, 355, 0, 0,
	0, 356, 357, 358, 359, 360, 361, 0, 362, 364,
	363, 0, 365, 556, 1058, 366, 367, 1059, 0, 368,
	369, 370, 0, 0, 371, 372, 373, 374, 0, 375,
	376, 378, 380, 377, 379, 384, 381, 382, 383, 386,
	0, 385, 1060, 387, 388, 389, 392, 393, 391, 1061,
	390, 0, 0, 1062, 394, 0, 557, 395, 558, 397,
	398, 0, 0, 399, 0, 0, 0, 401, 402, 403,
	0, 0, 404, 405, 559, 1063, 406, 1064, 560, 407,
	408, 400, 409, 410, 411, 412, 413, 414, 415, 416,
	0, 417, 418, 561, 562, 563, 419, 564, 420, 421,
	0, 422, 0, 423, 424, 425, 426, 427, 428, 429,
	565, 431, 430, 432, 0, 433, 0, 0, 0, 0,
	0, 434, 0, 436, 437, 438, 435, 439, 440, 441,
	442, 0, 443, 444, 445, 1065, 446, 447, 448, 449,
	566, 450, 0, 451, 452, 458, 459, 453, 454, 460,
	461, 462, 463, 464, 0, 466, 467, 465, 468, 469,
	470, 0, 471, 455, 456, 472, 473, 1066, 474, 475,
	476, 477, 478, 479, 567, 0, 480, 0, 481, 482,
	483, 484, 457, 485, 490, 568, 486, 487, 488, 489,
	569, 0, 492, 493, 0, 491, 0, 494, 495, 496,
	497, 498, 499, 318, 500, 0, 501, 570, 571, 572,
	573, 0, 508, 0, 502, 503, 574, 504, 575, 0,
	505, 506, 507, 0, 509, 510, 0, 0, 511, 512,
	513, 515, 516, 514, 517, 0, 518, 0, 0, 519,
	520, 521, 576, 577, 578, 0, 523, 522, 579, 0,
	0, 0, 0, 524, 525, 580, 526, 527, 528, 1288,
	0, 1293, 1292, 0, 0, 0, 0, 1290, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 247, 248,
	249, 250, 251, 252, 0, 253, 254, 0, 0, 0,
	0, 0, 529, 0, 0, 0, 0, 255, 256, 258,
	257, 259, 260, 261, 530, 531, 0, 262, 532, 263,
	533, 0, 534, 264, 265, 266, 267, 268, 0, 0,
	0, 269, 535, 536, 537, 0, 270, 271, 538, 0,
	1259, 0, 272, 273, 274, 275, 276, 277, 278, 0,
	0, 280, 281, 282, 279, 0, 283, 0, 284, 285,
	286, 0, 287, 1051, 288, 289, 0, 0, 0, 0,
	0, 0, 0, 290, 291, 292, 293, 0, 294, 539,
	540, 0, 298, 295, 296, 0, 299, 297, 0, 300,
	301, 302, 0, 0, 303, 304, 305, 0, 306, 307,
	0, 308, 309, 310, 0, 311, 312, 541, 313, 314,
	315, 317, 319, 316, 320, 321, 322, 323, 542, 543,
	0, 244, 0, 0, 0, 0, 0, 324, 325, 326,
	544, 0, 0, 0, 327, 0, 328, 0, 0, 1052,
	329, 330, 545, 546, 331, 332, 0, 333, 547, 0,
	548, 334, 0, 335, 336, 337, 338, 339, 1287, 550,
	551, 396, 1054, 340, 341, 0, 342, 343, 344, 345,
	0, 0, 0, 0, 346, 347, 349, 0, 1053, 348,
	552, 553, 0, 554, 0, 350, 351, 1055, 555, 1056,
	352, 353, 354, 1057, 355, 0, 0, 0, 356, 357,
	358, 359, 360, 361, 0, 362, 364, 363, 0, 365,
	556, 1058, 366, 367, 1059, 0, 368, 369, 370, 0,
	0, 371, 372, 373, 374, 0, 375, 376, 378, 380,
	377, 379, 384, 381, 382, 383, 386, 0, 385, 1060,
	387, 388, 389, 392, 393, 391, 1061, 390, 0, 0,
	1062, 394, 0, 557, 395, 558, 397, 398, 0, 0,
	399, 0, 0, 0, 401, 402, 403, 0, 0, 404,
	405, 559, 1063, 406, 1064, 560, 407, 408, 400, 409,
	410, 411, 412, 413, 414, 415, 416, 0, 417, 418,
	561, 562, 563, 419, 564, 420, 421, 0, 422, 0,
	423, 424, 425, 426, 427, 428, 429, 565, 431, 430,
	432, 0, 433, 0, 0, 0, 0, 0, 434, 0,
	436, 437, 438, 435, 439, 440, 441, 442, 0, 443,
	444, 445, 1065, 446, 447, 448, 449, 566, 450, 0,
	451, 452, 458, 459, 453, 454, 460, 461, 462, 463,
	464, 0, 466, 467, 465, 468, 469, 470, 0, 471,
	455, 456, 472, 473, 1066, 474, 475, 476, 477, 478,
	479, 567, 0, 480, 0, 481, 482, 483, 484, 457,
	485, 490, 568, 486, 487, 488, 489, 569, 0, 492,
	493, 0, 491, 0, 494, 495, 496, 497, 498, 499,
	318, 500, 0, 501, 570, 571, 572, 573, 0, 508,
	0, 502, 503, 574, 504, 575, 0, 505, 506, 507,
	0, 509, 510, 0, 0, 511, 512, 513, 515, 516,
	514, 517, 0, 518, 0, 0, 519, 520, 521, 576,
	577, 578, 0, 523, 522, 579, 0, 0, 0, 0,
	524, 525, 580, 526, 527, 528, 1293, 1292, 0, 0,
	0, 0, 1290, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 247, 248, 249, 250, 251, 252, 0,
	253, 254, 0, 0, 0, 0, 0, 529, 0, 0,
	0, 0, 255, 256, 258, 257, 259, 260, 261, 530,
	531, 0, 262, 532, 263, 533, 0, 534, 264, 265,
	266, 267, 268, 0, 0, 0, 269, 535, 536, 537,
	0, 270, 271, 538, 0, 1259, 0, 272, 273, 274,
	275, 276, 277, 278, 0, 0, 280, 281, 282, 279,
	0, 283, 0, 284, 285, 286, 0, 287, 1051, 288,
	289, 0, 0, 0, 0, 0, 0, 0, 290, 291,
	292, 293, 0, 294, 539, 540, 0, 298, 295, 296,
	0, 299, 297, 0, 300, 301, 302, 0, 0, 303,
	304, 305, 0, 306, 307, 0, 308, 309, 310, 0,
	311, 312, 541, 313, 314, 315, 317, 319, 316, 320,
	321, 322, 323, 542, 543, 0, 244, 0, 0, 0,
	0, 0, 324, 325, 326, 544, 0, 0, 0, 327,
	0, 328, 0, 0, 1052, 329, 330, 545, 546, 331,
	332, 0, 333, 547, 0, 548, 334, 0, 335, 336,
	337, 338, 339, 549, 550, 551, 396, 1054, 340, 341,
	0, 342, 343, 344, 345, 0, 0, 0, 0, 346,
	347, 349, 0, 1053, 348, 552, 553, 0, 554, 0,
	350, 351, 1055, 555, 1056, 352, 353, 354, 1057, 355,
	0, 0, 0, 356, 357, 358, 359, 360, 361, 0,
	362, 364, 363, 0, 365, 556, 1058, 366, 367, 1059,
	0, 368, 369, 370, 0, 0, 371, 372, 373, 374,
	0, 375, 376, 378, 380, 377, 379, 384, 381, 382,
	383, 386, 0, 385, 1060, 387, 388, 389, 392, 393,
	391, 1061, 390, 0, 0, 1062, 394, 0, 557, 395,
	558, 397, 398, 0, 0, 399, 0, 0, 0, 401,
	402, 403, 0, 0, 404, 405, 559, 1063, 406, 1064,
	560, 407, 408, 400, 409, 410, 411, 412, 413, 414,
	415, 416, 0, 417, 418, 561, 562, 563, 419, 564,
	420, 421, 0, 422, 0, 423, 424, 425, 426, 427,
	428, 429, 565, 431, 430, 432, 0, 433, 0, 0,
	0, 0, 0, 434, 0, 436, 437, 438, 435, 439,
	440, 441, 442, 0, 443, 444, 445, 1065, 446, 447,
	448, 449, 566, 450, 0, 451, 452, 458, 459, 453,
	454, 460, 461, 462, 463, 464, 0, 466, 467, 465,
	468, 469, 470, 0, 471, 455, 456, 472, 473, 1066,
	474, 475, 476, 477, 478, 479, 567, 0, 480, 0,
	481, 482, 483, 484, 457, 485, 490, 568, 486, 487,
	488, 489, 569, 0, 492, 493, 0, 491, 0, 494,
	495, 496, 497, 498, 499, 318, 500, 0, 501, 570,
	571, 572, 573, 0, 508, 0, 502, 503, 574, 504,
	575, 0, 505, 506, 507, 0, 509, 510, 0, 0,
	511, 512, 513, 515, 516, 514, 517, 0, 518, 0,
	0, 519, 520, 521, 576, 577, 578, 0, 523, 522,
	579, 1293, 1292, 0, 0, 524, 525, 580, 526, 527,
	528, 0, 0, 0, 0, 0, 0, 0, 247, 248,
	249, 250, 251, 252, 0, 253, 254, 0, 0, 0,
	0, 0, 529, 0, 0, 0, 0, 255, 256, 258,
	257, 259, 260, 261, 530, 531, 0, 262, 532, 263,
	533, 0, 534, 264, 265, 266, 267, 268, 0, 0,
	0, 269, 535, 536, 537, 0, 270, 271, 538, 0,
	1259, 0, 272, 273, 274, 275, 276, 277, 278, 0,
	0, 280, 281, 282, 279, 0, 283, 0, 284, 285,
	286, 0, 287, 1051, 288, 289, 0, 0, 0, 0,
	0, 0, 0, 290, 291, 292, 293, 0, 294, 539,
	540, 1852, 298, 295, 296, 0, 299, 297, 0, 300,
	301, 302, 0, 0, 303, 304, 305, 0, 306, 307,
	0, 308, 309, 310, 0, 311, 312, 541, 313, 314,
	315, 317, 319, 316, 320, 321, 322, 323, 542, 543,
	0, 244, 0, 0, 0, 0, 0, 324, 325, 326,
	544, 0, 0, 0, 327, 0, 328, 0, 0, 1052,
	329, 330, 545, 546, 331, 332, 0, 333, 547, 0,
	548, 334, 0, 335, 336, 337, 338, 339, 549, 550,
	551, 396, 1054, 340, 341, 0, 342, 343, 344, 345,
	0, 0, 0, 0, 346, 347, 349, 0, 1053, 348,
	552, 553, 0, 554, 0, 350, 351, 1055, 555, 1056,
	352, 353, 354, 1057, 355, 0, 0, 0, 356, 357,
	358, 359, 360, 361, 0, 362, 364, 363, 0, 365,
	556, 1058, 366, 367, 1059, 0, 368, 369, 370, 0,
	0, 371, 372, 373, 374, 0, 375, 376, 378, 380,
	377, 379, 384, 381, 382, 383, 386, 0, 385, 1060,
	387, 388, 389, 392, 393, 391, 1061, 390, 0, 0,
	1062, 394, 0, 557, 395, 558, 397, 398, 0, 0,
	399, 0, 0, 0, 401, 402, 403, 0, 0, 404,
	405, 559, 1063, 406, 1064, 560, 407, 408, 400, 409,
	410, 411, 412, 413, 414, 415, 416, 0, 417, 418,
	561, 562, 563, 419, 564, 420, 421, 0, 422, 0,
	423, 424, 425, 426, 427, 428, 429, 565, 431, 430,
	432, 0, 433, 0, 0, 0, 0, 0, 434, 0,
	436, 437, 438, 435, 439, 440, 441, 442, 0, 443,
	444, 445, 1065, 446, 447, 448, 449, 566, 450, 0,
	451, 452, 458, 459, 453, 454, 460, 461, 462, 463,
	464, 0, 466, 467, 465, 468, 469, 470, 0, 471,
	455, 456, 472, 473, 1066, 474, 475, 476, 477, 478,
	479, 567, 0, 480, 0, 481, 482, 483, 484, 457,
	485, 490, 568, 486, 487, 488, 489, 569, 0, 492,
	493, 0, 491, 0, 494, 495, 496, 497, 498, 499,
	318, 500, 0, 501, 570, 571, 572, 573, 0, 508,
	0, 502, 503, 574, 504, 575, 0, 505, 506, 507,
	0, 509, 510, 0, 0, 511, 512, 513, 515, 516,
	514, 517, 0, 518, 0, 0, 519, 520, 521, 576,
	577, 578, 0, 523, 522, 579, 1293, 1292, 0, 0,
	524, 525, 580, 526, 527, 528, 0, 0, 0, 0,
	0, 0, 0, 247, 248, 249, 250, 251, 252, 0,
	253, 254, 0, 0, 0, 0, 0, 529, 0, 0,
	0, 0, 255, 256, 258, 257, 259, 260, 261, 530,
	531, 0, 262, 532, 263, 533, 0, 534, 264, 265,
	266, 267, 268, 0, 0, 0, 269, 535, 536, 537,
	0, 270, 271, 538, 0, 1259, 0, 272, 273, 274,
	275, 276, 277, 278, 0, 0, 280, 281, 282, 279,
	0, 283, 0, 284, 285, 286, 0, 287, 1051, 288,
	289, 0, 0, 0, 0, 0, 0, 0, 290, 291,
	292, 293, 0, 294, 539, 540, 0, 298, 295, 296,
	0, 299, 297, 0, 300, 301, 302, 0, 0, 303,
	304, 305, 0, 306, 307, 0, 308, 309, 310, 0,
	311, 312, 541, 313, 314, 315, 317, 319, 316, 320,
	321, 322, 323, 542, 543, 0, 244, 0, 0, 0,
	0, 0, 324, 325, 326, 544, 0, 0, 0, 327,
	0, 328, 0, 0, 1052, 329, 330, 545, 546, 331,
	332, 0, 333, 547, 0, 548, 334, 0, 335, 336,
	337, 338, 339, 549, 550, 551, 396, 1054, 340, 341,
	0, 342, 343, 344, 345, 0, 0, 0, 0, 346,
	347, 349, 0, 1053, 348, 552, 553, 0, 554, 0,
	350, 351, 1055, 555, 1056, 352, 353, 354, 1057, 355,
	0, 0, 0, 356, 357, 358, 359, 360, 361, 0,
	362, 364, 363, 0, 365, 556, 1058, 366, 367, 1059,
	0, 368, 369, 370, 0, 0, 371, 372, 373, 374,
	0, 375, 376, 378, 380, 377, 379, 384, 381, 382,
	383, 386, 0, 385, 1060, 387, 388, 389, 392, 393,
	391, 1061, 390, 0, 0, 1062, 394, 0, 557, 395,
	558, 397, 398, 0, 0, 399, 0, 0, 0, 401,
	402, 403, 0, 0, 404, 405, 559, 1063, 406, 1064,
	560, 407, 408, 400, 409, 410, 411, 412, 413, 414,
	415, 416, 0, 417, 418, 561, 562, 563, 419, 564,
	420, 421, 0, 422, 0, 423, 424, 425, 426, 427,
	428, 429, 565, 431, 430, 432, 0, 433, 0, 0,
	0, 0, 0, 434, 0, 436, 437, 438, 435, 439,
	440, 441, 442, 0, 443, 444, 445, 1065, 446, 447,
	448, 449, 566, 450, 0, 451, 452, 458, 459, 453,
	454, 460, 461, 462, 463, 464, 0, 466, 467, 465,
	468, 469, 470, 0, 471, 455, 456, 472, 473, 1066,
	474, 475, 476, 477, 478, 479, 567, 0, 480, 0,
	481, 482, 483, 484, 457, 485, 490, 568, 486, 487,
	488, 489, 569, 0, 492, 493, 0, 491, 0, 494,
	495, 496, 497, 498, 499, 318, 500, 0, 501, 570,
	571, 572, 573, 0, 508, 0, 502, 503, 574, 504,
	575, 0, 505, 506, 507, 0, 509, 510, 0, 0,
	511, 512, 513, 515, 516, 514, 517, 0, 518, 0,
	0, 519, 520, 521, 576, 577, 578, 1293, 523, 522,
	579, 0, 0, 0, 0, 524, 525, 580, 526, 527,
	528, 0, 0, 0, 247, 248, 249, 250, 251, 252,
	0, 253, 254, 0, 0, 0, 0, 0, 529, 0,
	0, 0, 0, 255, 256, 258, 257, 259, 260, 261,
	530, 531, 0, 262, 532, 263, 533, 0, 534, 264,
	265, 266, 267, 268, 0, 0, 0, 269, 535, 536,
	537, 0, 270, 271, 538, 0, 1259, 0, 272, 273,
	274, 275, 276, 277, 278, 0, 0, 280, 281, 282,
	279, 0, 283, 0, 284, 285, 286, 0, 287, 1051,
	288, 289, 0, 0, 0, 0, 0, 0, 0, 290,
	291, 292, 293, 0, 294, 539, 540, 0, 298, 295,
	296, 0, 299, 297, 0, 300, 301, 302, 0, 0,
	303, 304, 305, 0, 306, 307, 0, 308, 309, 310,
	0, 311, 312, 541, 313, 314, 315, 317, 319, 316,
	320, 321, 322, 323, 542, 543, 0, 244, 0, 0,
	0, 0, 0, 324, 325, 326, 544, 0, 0, 0,
	327, 0, 328, 0, 0, 1052, 329, 330, 545, 546,
	331, 332, 0, 333, 547, 0, 548, 334, 0, 335,
	336, 337, 338, 339, 549, 550, 551, 396, 1054, 340,
	341, 0, 342, 343, 344, 345, 0, 0, 0, 0,
	346, 347, 349, 0, 1053, 348, 552, 553, 0, 554,
	0, 350, 351, 1055, 555, 1056, 352, 353, 354, 1057,
	355, 0, 0, 0, 356, 357, 358, 359, 360, 361,
	0, 362, 364, 363, 0, 365, 556, 1058, 366, 367,
	1059, 0, 368, 369, 370, 0, 0, 371, 372, 373,
	374, 0, 375, 376, 378, 380, 377, 379, 384, 381,
	382, 383, 386, 0, 385, 1060, 387, 388, 389, 392,
	393, 391, 1061, 390, 0, 0, 1062, 394, 0, 557,
	395, 558, 397, 398, 0, 0, 399, 0, 0, 0,
	401, 402, 403, 0, 0, 404, 405, 559, 1063, 406,
	1064, 560, 407, 408, 400, 409, 410, 411, 412, 413,
	414, 415, 416, 0, 417, 418, 561, 562, 563, 419,
	564, 420, 421, 0, 422, 0, 423, 424, 425, 426,
	427, 428, 429, 565, 431, 430, 432, 0, 433, 0,
	0, 0, 0, 0, 434, 0, 436, 437, 438, 435,
	439, 440, 441, 442, 0, 443, 444, 445, 1065, 446,
	447, 448, 449, 566, 450, 0, 451, 452, 458, 459,
	453, 454, 460, 461, 462, 463, 464, 0, 466, 467,
	465, 468, 469, 470, 0, 471, 455, 456, 472, 473,
	1066, 474, 475, 476, 477, 478, 479, 567, 0, 480,
	0, 481, 482, 483, 484, 457, 485, 490, 568, 486,
	487, 488, 489, 569, 0, 492, 493, 0, 491, 0,
	494, 495, 496, 497, 498, 499, 318, 500, 0, 501,
	570, 571, 572, 573, 0, 508, 0, 502, 503, 574,
	504, 575, 0, 505, 506, 507, 0, 509, 510, 0,
	0, 511, 512, 513, 515, 516, 514, 517, 0, 518,
	0, 0, 519, 520, 521, 576, 577, 578, 241, 523,
	522, 579, 0, 0, 0, 0, 524, 525, 580, 526,
	527, 528, 0, 0, 0, 247, 248, 249, 250, 251,
	252, 0, 253, 254, 0, 0, 0, 0, 0, 529,
	0, 0, 0, 0, 255, 256, 258, 257, 259, 260,
	261, 530, 531, 0, 262, 532, 263, 533, 0, 534,
	264, 265, 266, 267, 268, 0, 0, 0, 269, 535,
	536, 537, 2489, 270, 271, 538, 0, 0, 0, 272,
	273, 274, 275, 276, 277, 278, 0, 0, 280, 281,
	282, 279, 2486, 283, 0, 284, 285, 286, 0, 287,
	0, 288, 289, 0, 0, 0, 0, 0, 0, 0,
	290, 291, 292, 293, 0, 294, 539, 540, 0, 298,
	295, 296, 0, 299, 297, 0, 300, 301, 302, 0,
	0, 303, 304, 305, 0, 306, 307, 0, 308, 309,
	310, 0, 2493, 312, 541, 313, 314, 315, 317, 319,
	316, 320, 321, 322, 323, 542, 543, 0, 2677, 0,
	0, 0, 0, 0, 324, 325, 326, 544, 0, 0,
	0, 327, 0, 328, 2492, 0, 0, 329, 330, 545,
	546, 331, 332, 0, 333, 547, 0, 548, 334, 0,
	335, 336, 337, 338, 339, 549, 550, 551, 396, 0,
	340, 341, 0, 342, 343, 344, 345, 0, 0, 0,
	2674, 346, 347, 349, 0, 0, 348, 552, 553, 0,
	554, 0, 350, 2676, 0, 555, 0, 352, 353, 354,
	0, 355, 0, 0, 0, 356, 357, 358, 359, 360,
	361, 0, 362, 364, 363, 0, 365, 556, 0, 366,
	367, 2673, 0, 368, 369, 370, 0, 0, 371, 372,
	373, 374, 0, 375, 376, 378, 380, 377, 379, 384,
	381, 382, 383, 386, 0, 385, 0, 387, 388, 389,
	392, 393, 391, 0, 390, 0, 0, 0, 394, 0,
	557, 395, 558, 397, 398, 0, 0, 399, 0, 0,
	0, 401, 402, 403, 0, 0, 404, 405, 559, 0,
	406, 0, 560, 407, 408, 400, 409, 410, 411, 412,
	413, 414, 415, 416, 0, 417, 418, 561, 562, 563,
	419, 564, 420, 421, 2491, 422, 0, 423, 424, 425,
	426, 427, 428, 429, 565, 431, 430, 432, 0, 433,
	0, 0, 0, 0, 0, 434, 0, 436, 437, 438,
	435, 439, 440, 441, 442, 0, 443, 444, 445, 0,
	446, 447, 448, 449, 566, 450, 0, 451, 452, 458,
	459, 453, 454, 460, 461, 462, 463, 464, 0, 466,
	467, 465, 468, 469, 470, 0, 471, 455, 456, 472,
	473, 0, 474, 475, 476, 477, 478, 479, 567, 0,
	480, 0, 481, 482, 483, 484, 457, 485, 490, 568,
	486, 487, 488, 489, 569, 0, 492, 493, 0, 491,
	0, 494, 495, 496, 497, 498, 499, 318, 500, 0,
	501, 570, 571, 572, 573, 0, 508, 0, 502, 503,
	574, 504, 575, 0, 505, 506, 507, 0, 509, 510,
	0, 2675, 511, 512, 513, 515, 516, 514, 517, 0,
	518, 0, 0, 519, 520, 521, 576, 577, 578, 241,
	523, 522, 579, 0, 0, 0, 0, 524, 525, 580,
	526, 527, 528, 0, 0, 0, 247, 248, 249, 250,
	251, 252, 0, 253, 254, 0, 0, 0, 0, 0,
	529, 0, 0, 0, 0, 255, 256, 258, 257, 259,
	260, 261, 530, 531, 0, 262, 532, 263, 533, 0,
	534, 264, 265, 266, 267, 268, 0, 0, 0, 269,
	535, 536, 537, 2489, 270, 271, 538, 0, 0, 2483,
	272, 273, 274, 275, 276, 277, 278, 0, 0, 280,
	281, 282, 279, 2486, 283, 0, 284, 285, 286, 0,
	287, 0, 288, 289, 0, 0, 0, 0, 0, 0,
	0, 290, 291, 292, 293, 0, 294, 539, 540, 0,
	298, 295, 296, 0, 299, 297, 0, 300, 301, 302,
	0, 0, 303, 304, 305, 0, 306, 307, 0, 308,
	309, 310, 0, 2493, 312, 541, 313, 314, 315, 317,
	319, 316, 320, 321, 322, 323, 542, 543, 0, 0,
	0, 0, 0, 0, 0, 324, 325, 326, 544, 0,
	0, 0, 327, 0, 328, 2492, 0, 0, 329, 330,
	545, 546, 331, 332, 0, 333, 547, 0, 548, 334,
	0, 335, 336, 337, 338, 339, 2482, 550, 551, 396,
	0, 340, 341, 0, 342, 343, 344, 345, 0, 0,
	0, 0, 346, 347, 349, 0, 0, 348, 552, 553,
	0, 554, 0, 350, 351, 0, 555, 0, 352, 353,
	354, 0, 355, 0, 0, 0, 356, 357, 358, 359,
	360, 361, 0, 362, 364, 363, 0, 365, 556, 0,
	366, 367, 0, 0, 368, 369, 370, 0, 0, 371,
	372, 373, 374, 0, 375, 376, 378, 380, 377, 379,
	384, 381, 382, 383, 386, 0, 385, 0, 387, 388,
	389, 392, 393, 391, 0, 390, 0, 0, 0, 394,
	0, 557, 395, 558, 397, 398, 0, 0, 399, 0,
	0, 0, 401, 402, 403, 0, 0, 404, 405, 559,
	0, 406, 0, 560, 407, 408, 400, 409, 410, 411,
	412, 413, 414, 415, 416, 0, 417, 418, 561, 562,
	563, 419, 564, 420, 421, 2491, 422, 0, 423, 424,
	425, 426, 427, 428, 429, 565, 431, 430, 432, 0,
	433, 0, 0, 0, 0, 0, 434, 0, 436, 437,
	438, 435, 439, 440, 441, 442, 0, 443, 444, 445,
	0, 446, 447, 448, 449, 566, 450, 0, 451, 452,
	458, 459, 453, 454, 460, 461, 462, 463, 464, 0,
	466, 467, 465, 468, 469, 470, 0, 471, 455, 456,
	472, 473, 0, 474, 475, 476, 477, 478, 479, 567,
	0, 480, 0, 481, 482, 483, 484, 457, 485, 490,
	568, 486, 487, 488, 489, 569, 0, 492, 493, 0,
	491, 0, 494, 495, 496, 497, 498, 499, 318, 500,
	0, 501, 570, 571, 572, 573, 0, 508, 0, 502,
	503, 574, 504, 575, 0, 505, 506, 507, 0, 509,
	510, 0, 2490, 511, 512, 513, 515, 516, 514, 517,
	0, 518, 0, 0, 519, 520, 521, 576, 577, 578,
	0, 523, 522, 579, 1558, 0, 241, 0, 524, 525,
	580, 526, 527, 528, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 247, 248, 249, 250, 251, 252, 0,
	253, 254, 0, 0, 0, 0, 0, 529, 0, 0,
	0, 0, 255, 256, 258, 257, 259, 260, 261, 530,
	531, 0, 262, 532, 263, 533, 0, 534, 264, 265,
	266, 267, 268, 0, 0, 0, 269, 535, 536, 537,
	0, 270, 271, 538, 0, 0, 0, 272, 273, 274,
	275, 276, 277, 278, 0, 0, 280, 281, 282, 279,
	0, 283, 0, 284, 285, 286, 0, 287, 0, 288,
	289, 0, 0, 0, 0, 0, 0, 0, 290, 291,
	292, 293, 0, 294, 539, 540, 0, 298, 295, 296,
	0, 299, 297, 0, 300, 301, 302, 0, 0, 303,
	304, 305, 0, 306, 307, 0, 308, 309, 310, 0,
	311, 312, 541, 313, 314, 315, 317, 319, 316, 320,
	321, 322, 323, 542, 543, 0, 244, 0, 0, 0,
	0, 0, 324, 325, 326, 544, 0, 0, 0, 327,
	0, 328, 0, 0, 0, 329, 330, 545, 546, 331,
	332, 0, 333, 547, 0, 548, 334, 0, 335, 336,
	337, 338, 339, 549, 550, 551, 396, 0, 340, 341,
	0, 342, 343, 344, 345, 0, 0, 0, 245, 346,
	347, 349, 0, 0, 348, 552, 553, 0, 554, 0,
	350, 351, 0, 555, 0, 352, 353, 354, 0, 355,
	0, 0, 0, 356, 357, 358, 359, 360, 361, 0,
	362, 364, 363, 0, 365, 556, 0, 366, 367, 0,
	0, 368, 369, 370, 0, 0, 371, 372, 373, 374,
	0, 375, 376, 378, 380, 377, 379, 384, 381, 382,
	383, 386, 0, 385, 0, 387, 388, 389, 392, 393,
	391, 0, 390, 0, 246, 0, 394, 0, 557, 395,
	558, 397, 398, 0, 0, 399, 0, 0, 0, 401,
	402, 403, 0, 0, 404, 405, 559, 0, 406, 0,
	560, 407, 408, 400, 409, 410, 411, 412, 413, 414,
	415, 416, 0, 417, 418, 561, 562, 563, 419, 564,
	420, 421, 0, 422, 0, 423, 424, 425, 426, 427,
	428, 429, 565, 431, 430, 432, 0, 433, 0, 0,
	0, 0, 0, 434, 0, 436, 437, 438, 435, 439,
	440, 441, 442, 0, 443, 444, 445, 0, 446, 447,
	448, 449, 566, 450, 0, 451, 452, 458, 459, 453,
	454, 460, 461, 462, 463, 464, 0, 1561, 467, 465,
	468, 469, 470, 0, 471, 455, 456, 472, 473, 0,
	474, 475, 476, 477, 478, 479, 567, 0, 480, 0,
	481, 482, 483, 484, 457, 485, 490, 568, 486, 487,
	488, 489, 569, 0, 492, 493, 0, 491, 1559, 494,
	495, 496, 497, 498, 499, 318, 500, 0, 501, 570,
	571, 572, 573, 0, 508, 0, 502, 503, 574, 504,
	575, 0, 505, 506, 507, 0, 509, 510, 0, 0,
	511, 512, 513, 515, 516, 514, 517, 0, 518, 0,
	0, 519, 520, 521, 576, 577, 578, 0, 1560, 522,
	579, 1263, 0, 241, 0, 524, 525, 580, 526, 527,
	528, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	247, 248, 249, 250, 251, 252, 0, 253, 254, 0,
	0, 0, 0, 0, 529, 0, 0, 0, 0, 255,
	256, 258, 257, 259, 260, 261, 530, 531, 0, 262,
	532, 263, 533, 0, 534, 264, 265, 266, 267, 268,
	0, 0, 0, 269, 535, 536, 537, 0, 270, 271,
	538, 0, 0, 0, 272, 273, 274, 275, 276, 277,
	278, 0, 0, 280, 281, 282, 279, 0, 283, 0,
	284, 285, 286, 0, 287, 0, 288, 289, 0, 0,
	0, 0, 0, 0, 0, 290, 291, 292, 293, 0,
	294, 539, 540, 0, 298, 295, 296, 0, 299, 297,
	0, 300, 301, 302, 0, 0, 303, 304, 305, 0,
	306, 307, 0, 308, 309, 310, 0, 311, 312, 541,
	313, 314, 315, 317, 319, 316, 320, 321, 322, 323,
	542, 543, 0, 244, 0, 0, 0, 0, 0, 324,
	325, 326, 544, 0, 0, 0, 327, 0, 328, 0,
	0, 0, 329, 330, 545, 546, 331, 332, 0, 333,
	547, 0, 548, 334, 0, 335, 336, 337, 338, 339,
	1265, 550, 551, 396, 0, 340, 341, 0, 342, 343,
	344, 345, 0, 0, 0, 245, 346, 347, 349, 0,
	0, 348, 552, 553, 0, 554, 0, 350, 351, 0,
	555, 0, 352, 353, 354, 0, 355, 0, 0, 0,
	356, 357, 358, 359, 360, 361, 0, 362, 364, 363,
	0, 365, 556, 0, 366, 367, 0, 0, 368, 369,
	370, 0, 0, 371, 372, 373, 374, 0, 375, 376,
	378, 380, 377, 379, 384, 381, 382, 383, 386, 0,
	385, 0, 387, 388, 389, 392, 393, 391, 0, 390,
	0, 246, 0, 394, 0, 557, 395, 558, 397, 398,
	0, 0, 399, 0, 0, 1100, 401, 402, 403, 0,
	0, 404, 405, 559, 0, 406, 0, 560, 407, 408,
	400, 409, 410, 411, 412, 413, 414, 415, 416, 0,
	417, 418, 561, 562, 563, 419, 564, 420, 421, 0,
	422, 0, 423, 424, 425, 426, 427, 428, 429, 565,
	431, 430, 432, 0, 433, 0, 0, 0, 0, 0,
	434, 0, 436, 437, 438, 435, 439, 440, 441, 442,
	0, 443, 444, 445, 0, 446, 447, 448, 449, 566,
	450, 0, 451, 452, 458, 459, 453, 454, 460, 461,
	462, 463, 464, 0, 466, 467, 465, 468, 469, 470,
	0, 471, 455, 456, 472, 473, 0, 474, 475, 476,
	477, 478, 479, 567, 0, 480, 0, 481, 482, 483,
	484, 457, 485, 490, 568, 486, 487, 488, 489, 569,
	0, 492, 493, 0, 491, 0, 494, 495, 496, 497,
	498, 499, 318, 500, 0, 501, 570, 571, 572, 573,
	0, 508, 0, 502, 503, 574, 504, 575, 0, 505,
	506, 507, 0, 509, 510, 0, 0, 511, 512, 513,
	515, 516, 514, 517, 0, 518, 0, 0, 519, 520,
	521, 576, 577, 578, 0, 523, 522, 579, 1260, 0,
	241, 0, 524, 525, 580, 526, 527, 528, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 247, 248, 249,
	250, 251, 252, 0, 253, 254, 0, 0, 0, 0,
	0, 529, 0, 0, 0, 0, 255, 256, 258, 257,
	259, 260, 261, 530, 531, 0, 262, 532, 263, 533,
	0, 534, 264, 265, 266, 267, 268, 0, 0, 0,
	269, 535, 536, 537, 0, 270, 271, 538, 0, 0,
	0, 272, 273, 274, 275, 276, 277, 278, 0, 0,
	280, 281, 282, 279, 0, 283, 0, 284, 285, 286,
	0, 287, 0, 288, 289, 0, 0, 0, 0, 0,
	0, 0, 290, 291, 292, 293, 0, 294, 539, 540,
	0, 298, 295, 296, 0, 299, 297, 0, 300, 301,
	302, 0, 0, 303, 304, 305, 0, 306, 307, 0,
	308, 309, 310, 0, 311, 312, 541, 313, 314, 315,
	317, 319, 316, 320, 321, 322, 323, 542, 543, 0,
	244, 0, 0, 0, 0, 0, 324, 325, 326, 544,
	0, 0, 0, 327, 0, 328, 0, 0, 0, 329,
	330, 545, 546, 331, 332, 0, 333, 547, 0, 548,
	334, 0, 335, 336, 337, 338, 339, 1262, 550, 551,
	396, 0, 340, 341, 0, 342, 343, 344, 345, 0,
	0, 0, 245, 346, 347, 349, 0, 0, 348, 552,
	553, 0, 554, 0, 350, 351, 0, 555, 0, 352,
	353, 354, 0, 355, 0, 0, 0, 356, 357, 358,
	359, 360, 361, 0, 362, 364, 363, 0, 365, 556,
	0, 366, 367, 0, 0, 368, 369, 370, 0, 0,
	371, 372, 373, 374, 0, 375, 376, 378, 380, 377,
	379, 384, 381, 382, 383, 386, 0, 385, 0, 387,
	388, 389, 392, 393, 391, 0, 390, 0, 246, 0,
	394, 0, 557, 395, 558, 397, 398, 0, 0, 399,
	0, 0, 1100, 401, 402, 403, 0, 0, 404, 405,
	559, 0, 406, 0, 560, 407, 408, 400, 409, 410,
	411, 412, 413, 414, 415, 416, 0, 417, 418, 561,
	562, 563, 419, 564, 420, 421, 0, 422, 0, 423,
	424, 425, 426, 427, 428, 429, 565, 431, 430, 432,
	0, 433, 0, 0, 0, 0, 0, 434, 0, 436,
	437, 438, 435, 439, 440, 441, 442, 0, 443, 444,
	445, 0, 446, 447, 448, 449, 566, 450, 0, 451,
	452, 458, 459, 453, 454, 460, 461, 462, 463, 464,
	0, 466, 467, 465, 468, 469, 470, 0, 471, 455,
	456, 472, 473, 0, 474, 475, 476, 477, 478, 479,
	567, 0, 480, 0, 481, 482, 483, 484, 457, 485,
	490, 568, 486, 487, 488, 489, 569, 0, 492, 493,
	0, 491, 0, 494, 495, 496, 497, 498, 499, 318,
	500, 0, 501, 570, 571, 572, 573, 0, 508, 0,
	502, 503, 574, 504, 575, 0, 505, 506, 507, 0,
	509, 510, 0, 0, 511, 512, 513, 515, 516, 514,
	517, 0, 518, 0, 0, 519, 520, 521, 576, 577,
	578, 0, 523, 522, 579, 1166, 0, 241, 0, 524,
	525, 580, 526, 527, 528, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 247, 248, 249, 250, 251, 252,
	0, 253, 254, 0, 0, 0, 0, 0, 529, 0,
	0, 0, 0, 255, 256, 258, 257, 259, 260, 261,
	530, 531, 0, 262, 532, 263, 533, 0, 534, 264,
	265, 266, 267, 268, 0, 0, 0, 269, 535, 536,
	537, 0, 270, 271, 538, 0, 0, 0, 272, 273,
	274, 275, 276, 277, 278, 0, 0, 280, 281, 282,
	279, 0, 283, 0, 284, 285, 286, 0, 287, 0,
	288, 289, 0, 0, 0, 0, 0, 0, 0, 290,
	291, 292, 293, 0, 294, 539, 540, 0, 298, 295,
	296, 0, 299, 297, 0, 300, 301, 302, 0, 0,
	303, 304, 305, 0, 306, 307, 0, 308, 309, 310,
	0, 311, 312, 541, 313, 314, 315, 317, 319, 316,
	320, 321, 322, 323, 542, 543, 0, 244, 0, 0,
	0, 0, 0, 324, 325, 326, 544, 0, 0, 0,
	327, 0, 328, 0, 0, 0, 329, 330, 545, 546,
	331, 332, 0, 333, 547, 0, 548, 334, 0, 335,
	336, 337, 338, 339, 1168, 550, 551, 396, 0, 340,
	341, 0, 342, 343, 344, 345, 0, 0, 0, 245,
	346, 347, 349, 0, 0, 348, 552, 553, 0, 554,
	0, 350, 351, 0, 555, 0, 352, 353, 354, 0,
	355, 0, 0, 0, 356, 357, 358, 359, 360, 361,
	0, 362, 364, 363, 0, 365, 556, 0, 366, 367,
	0, 0, 368, 369, 370, 0, 0, 371, 372, 373,
	374, 0, 375, 376, 378, 380, 377, 379, 384, 381,
	382, 383, 386, 0, 385, 0, 387, 388, 389, 392,
	393, 391, 0, 390, 0, 246, 0, 394, 0, 557,
	395, 558, 397, 398, 0, 0, 399, 0, 0, 1100,
	401, 402, 403, 0, 0, 404, 405, 559, 0, 406,
	0, 560, 407, 408, 400, 409, 410, 411, 412, 413,
	414, 415, 416, 0, 417, 418, 561, 562, 563, 419,
	564, 420, 421, 0, 422, 0, 423, 424, 425, 426,
	427, 428, 429, 565, 431, 430, 432, 0, 433, 0,
	0, 0, 0, 0, 434, 0, 436, 437, 438, 435,
	439, 440, 441, 442, 0, 443, 444, 445, 0, 446,
	447, 448, 449, 566, 450, 0, 451, 452, 458, 459,
	453, 454, 460, 461, 462, 463, 464, 0, 466, 467,
	465, 468, 469, 470, 0, 471, 455, 456, 472, 473,
	0, 474, 475, 476, 477, 478, 479, 567, 0, 480,
	0, 481, 482, 483, 484, 457, 485, 490, 568, 486,
	487, 488, 489, 569, 0, 492, 493, 0, 491, 0,
	494, 495, 496, 497, 498, 499, 318, 500, 0, 501,
	570, 571, 572, 573, 0, 508, 0, 502, 503, 574,
	504, 575, 0, 505, 506, 507, 0, 509, 510, 0,
	0, 511, 512, 513, 515, 516, 514, 517, 0, 518,
	0, 0, 519, 520, 521, 576, 577, 578, 0, 523,
	522, 579, 612, 0, 241, 0, 524, 525, 580, 526,
	527, 528, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 247, 248, 249, 611, 251, 252, 601, 253, 254,
	0, 0, 0, 0, 0, 529, 0, 0, 0, 0,
	255, 256, 258, 257, 259, 260, 261, 530, 531, 0,
	262, 532, 263, 533, 0, 534, 264, 265, 266, 267,
	268, 0, 0, 0, 269, 535, 536, 537, 0, 270,
	271, 538, 0, 0, 0, 272, 273, 274, 275, 276,
	277, 278, 0, 0, 280, 281, 282, 279, 0, 283,
	0, 284, 285, 286, 604, 287, 0, 288, 289, 0,
	0, 0, 0, 0, 0, 0, 290, 291, 292, 293,
	0, 294, 539, 540, 0, 298, 295, 296, 0, 299,
	297, 0, 300, 301, 302, 0, 0, 303, 304, 305,
	0, 306, 307, 0, 308, 309, 310, 0, 311, 312,
	541, 313, 314, 315, 317, 319, 316, 320, 321, 322,
	323, 542, 543, 0, 0, 0, 0, 0, 0, 0,
	324, 325, 326, 544, 0, 0, 0, 327, 0, 328,
	0, 0, 0, 329, 330, 545, 546, 331, 332, 605,
	333, 547, 0, 548, 334, 0, 335, 336, 337, 338,
	339, 549, 550, 551, 396, 0, 340, 341, 0, 342,
	343, 344, 345, 0, 0, 0, 0, 346, 347, 349,
	0, 0, 348, 552, 553, 0, 554, 0, 350, 351,
	0, 555, 0, 352, 353, 354, 0, 355, 0, 0,
	0, 356, 357, 358, 359, 360, 361, 0, 362, 364,
	363, 0, 365, 556, 0, 366, 367, 0, 0, 368,
	369, 370, 0, 0, 371, 372, 373, 374, 0, 375,
	376, 378, 380, 377, 379, 384, 381, 382, 383, 386,
	0, 385, 0, 387, 388, 389, 392, 393, 391, 0,
	390, 0, 0, 0, 394, 0, 557, 395, 558, 397,
	398, 0, 0, 399, 0, 0, 0, 401, 402, 403,
	0, 0, 404, 405, 559, 0, 406, 0, 560, 407,
	408, 400, 409, 410, 411, 412, 413, 414, 415, 416,
	0, 417, 418, 561, 562, 563, 419, 564, 420, 421,
	0, 422, 0, 423, 424, 425, 426, 427, 428, 429,
	565, 431, 430, 432, 0, 433, 0, 0, 0, 0,
	0, 434, 0, 436, 437, 438, 435, 439, 440, 441,
	442, 0, 443, 444, 445, 0, 446, 447, 448, 449,
	566, 450, 0, 451, 452, 458, 459, 453, 454, 460,
	461, 462, 463, 464, 606, 466, 467, 465, 468, 469,
	470, 0, 471, 455, 456, 472, 473, 0, 474, 475,
	476, 477, 478, 479, 567, 0, 480, 0, 481, 482,
	483, 484, 457, 485, 490, 568, 486, 487, 488, 489,
	569, 0, 492, 493, 0, 491, 0, 494, 495, 496,
	497, 498, 499, 318, 500, 0, 501, 570, 571, 572,
	573, 0, 508, 0, 502, 503, 574, 504, 575, 0,
	505, 506, 507, 0, 509, 510, 0, 0, 511, 512,
	513, 515, 516, 514, 517, 0, 518, 0, 0, 519,
	520, 521, 576, 577, 578, 0, 523, 522, 579, 600,
	0, 241, 0, 524, 525, 580, 526, 527, 528, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 247, 248,
	249, 250, 251, 252, 601, 253, 254, 0, 0, 0,
	0, 0, 529, 0, 0, 0, 0, 255, 256, 258,
	257, 259, 260, 261, 530, 531, 0, 262, 532, 263,
	533, 0, 534, 264, 265, 266, 267, 268, 0, 0,
	0, 269, 535, 536, 537, 0, 270, 271, 538, 0,
	0, 0, 272, 273, 274, 275, 276, 277, 278, 0,
	0, 280, 281, 282, 279, 0, 283, 0, 284, 285,
	286, 604, 287, 0, 288, 289, 0, 0, 0, 0,
	0, 0, 0, 290, 291, 292, 293, 0, 294, 539,
	540, 0, 298, 295, 296, 0, 299, 297, 0, 300,
	301, 302, 0, 0, 303, 304, 305, 0, 306, 307,
	0, 308, 309, 310, 0, 311, 312, 541, 313, 314,
	315, 317, 319, 316, 320, 321, 322, 323, 542, 543,
	0, 0, 0, 0, 0, 0, 0, 324, 325, 326,
	544, 0, 0, 0, 327, 0, 328, 0, 0, 0,
	329, 330, 545, 546, 331, 332, 605, 333, 547, 0,
	548, 334, 0, 335, 336, 337, 338, 339, 549, 550,
	551, 396, 0, 340, 341, 0, 342, 343, 344, 345,
	0, 0, 0, 0, 346, 347, 349, 0, 0, 348,
	552, 553, 0, 554, 0, 350, 351, 0, 555, 0,
	352, 353, 354, 0, 355, 0, 0, 0, 356, 357,
	358, 359, 360, 361, 0, 362, 364, 363, 0, 365,
	556, 0, 366, 367, 0, 0, 368, 369, 370, 0,
	0, 371, 372, 373, 374, 0, 375, 376, 378, 380,
	377, 379, 384, 381, 382, 383, 386, 0, 385, 0,
	387, 388, 389, 392, 393, 391, 0, 390, 0, 0,
	0, 394, 0, 557, 395, 558, 397, 398, 0, 0,
	399, 0, 0, 0, 401, 402, 403, 0, 0, 404,
	405, 559, 0, 406, 0, 560, 407, 408, 400, 409,
	410, 411, 412, 413, 414, 415, 416, 0, 417, 418,
	561, 562, 563, 419, 564, 420, 421, 0, 422, 0,
	423, 424, 425, 426, 427, 428, 429, 565, 431, 430,
	432, 0, 433, 0, 0, 0, 0, 0, 434, 0,
	436, 437, 438, 435, 439, 440, 441, 442, 0, 443,
	444, 445, 0, 446, 447, 448, 449, 566, 450, 0,
	451, 452, 458, 459, 453, 454, 460, 461, 462, 463,
	464, 606, 466, 467, 465, 468, 469, 470, 0, 471,
	455, 456, 472, 473, 0, 474, 475, 476, 477, 478,
	479, 567, 0, 480, 0, 481, 482, 483, 484, 457,
	485, 490, 568, 486, 487, 488, 489, 569, 0, 492,
	493, 0, 491, 0, 494, 495, 496, 497, 498, 499,
	318, 500, 0, 501, 570, 571, 572, 573, 0, 508,
	0, 502, 503, 574, 504, 575, 0, 505, 506, 507,
	0, 509, 510, 0, 0, 511, 512, 513, 515, 516,
	514, 517, 0, 518, 0, 0, 519, 520, 521, 576,
	577, 578, 241, 523, 522, 579, 0, 0, 0, 0,
	524, 525, 580, 526, 527, 528, 0, 0, 0, 247,
	248, 249, 250, 251, 252, 0, 253, 254, 0, 0,
	0, 0, 0, 529, 0, 0, 0, 0, 255, 256,
	258, 257, 259, 260, 261, 530, 531, 0, 262, 532,
	263, 533, 0, 534, 264, 265, 266, 267, 268, 0,
	0, 0, 269, 535, 536, 537, 0, 270, 271, 538,
	0, 0, 0, 272, 273, 274, 275, 276, 277, 278,
	0, 0, 280, 281, 282, 279, 0, 283, 0, 284,
	285, 286, 0, 287, 0, 288, 289, 0, 0, 0,
	0, 0, 0, 0, 290, 291, 292, 293, 0, 294,
	539, 540, 0, 298, 295, 296, 0, 299, 297, 0,
	300, 301, 302, 0, 0, 303, 304, 305, 0, 306,
	307, 0, 308, 309, 310, 0, 311, 312, 541, 313,
	314, 315, 317, 319, 316, 320, 321, 322, 323, 542,
	543, 0, 244, 0, 0, 0, 0, 0, 324, 325,
	326, 544, 0, 0, 0, 327, 0, 328, 0, 0,
	0, 329, 330, 545, 546, 331, 332, 0, 333, 547,
	0, 548, 334, 0, 335, 336, 337, 338, 339, 549,
	550, 551, 396, 0, 340, 341, 0, 342, 343, 344,
	345, 0, 0, 0, 245, 346, 347, 349, 0, 0,
	348, 552, 553, 0, 554, 0, 350, 351, 0, 555,
	0, 352, 353, 354, 0, 355, 0, 0, 0, 356,
	357, 358, 359, 360, 361, 0, 362, 364, 363, 0,
	365, 556, 0, 366, 367, 0, 0, 368, 369, 370,
	0, 0, 371, 372, 373, 374, 0, 375, 376, 378,
	380, 377, 379, 384, 381, 382, 383, 386, 0, 385,
	0, 387, 388, 389, 392, 393, 391, 0, 390, 0,
	246, 0, 394, 0, 557, 395, 558, 397, 398, 0,
	0, 399, 0, 0, 1100, 401, 402, 403, 0, 0,
	404, 405, 559, 0, 406, 0, 560, 407, 408, 400,
	409, 410, 411, 412, 413, 414, 415, 416, 0, 417,
	418, 561, 562, 563, 419, 564, 420, 421, 0, 422,
	0, 423, 424, 425, 426, 427, 428, 429, 565, 431,
	430, 432, 0, 433, 0, 0, 0, 0, 0, 434,
	0, 436, 437, 438, 435, 439, 440, 441, 442, 0,
	443, 444, 445, 0, 446, 447, 448, 449, 566, 450,
	0, 451, 452, 458, 459, 453, 454, 460, 461, 462,
	463, 464, 0, 466, 467, 465, 468, 469, 470, 0,
	471, 455, 456, 472, 473, 0, 474, 475, 476, 477,
	478, 479, 567, 0, 480, 0, 481, 482, 483, 484,
	457, 485, 490, 568, 486, 487, 488, 489, 569, 0,
	492, 493, 0, 491, 0, 494, 495, 496, 497, 498,
	499, 318, 500, 0, 501, 570, 571, 572, 573, 0,
	508, 0, 502, 503, 574, 504, 575, 0, 505, 506,
	507, 0, 509, 510, 0, 0, 511, 512, 513, 515,
	516, 514, 517, 0, 518, 0, 0, 519, 520, 521,
	576, 577, 578, 241, 523, 522, 579, 0, 0, 0,
	0, 524, 525, 580, 526, 527, 528, 0, 0, 0,
	247, 248, 249, 250, 251, 252, 0, 253, 254, 0,
	0, 0, 0, 0, 529, 0, 0, 0, 0, 255,
	256, 258, 257, 259, 260, 261, 530, 531, 0, 262,
	532, 263, 533, 0, 534, 264, 265, 266, 267, 268,
	0, 0, 0, 269, 535, 536, 537, 0, 270, 271,
	538, 0, 0, 0, 272, 273, 274, 275, 276, 277,
	278, 0, 0, 280, 281, 282, 279, 0, 283, 0,
	284, 285, 286, 0, 287, 0, 288, 289, 0, 0,
	0, 0, 0, 0, 0, 290, 291, 292, 293, 0,
	294, 539, 540, 0, 298, 295, 296, 0, 299, 297,
	0, 300, 301, 302, 0, 0, 303, 304, 305, 0,
	306, 307, 0, 308, 309, 310, 0, 311, 312, 541,
	313, 314, 315, 317, 319, 316, 320, 321, 322, 323,
	542, 543, 0, 244, 0, 0, 0, 0, 0, 324,
	325, 326, 544, 0, 0, 0, 327, 0, 328, 0,
	0, 0, 329, 330, 545, 546, 331, 332, 0, 333,
	547, 0, 548, 334, 0, 335, 336, 337, 338, 339,
	549, 550, 551, 396, 0, 340, 341, 0, 342, 343,
	344, 345, 0, 0, 0, 245, 346, 347, 349, 0,
	0, 348, 552, 553, 0, 554, 0, 350, 351, 0,
	555, 0, 352, 353, 354, 0, 355, 0, 0, 0,
	356, 357, 358, 359, 360, 361, 0, 362, 364, 363,
	0, 365, 556, 0, 366, 367, 0, 0, 368, 369,
	370, 0, 0, 371, 372, 373, 374, 0, 375, 376,
	378, 380, 377, 379, 384, 381, 382, 383, 386, 0,
	385, 0, 387, 388, 389, 392, 393, 391, 3027, 390,
	0, 246, 0, 394, 0, 557, 395, 558, 397, 398,
	0, 0, 399, 0, 0, 0, 401, 402, 403, 0,
	0, 404, 405, 559, 0, 406, 0, 560, 407, 408,
	400, 409, 410, 411, 412, 413, 414, 415, 416, 0,
	417, 418, 561, 562, 563, 419, 564, 420, 421, 0,
	422, 0, 423, 424, 425, 426, 427, 428, 429, 565,
	431, 430, 432, 0, 433, 0, 0, 0, 0, 0,
	434, 0, 436, 437, 438, 435, 439, 440, 441, 442,
	0, 443, 444, 445, 0, 446, 447, 448, 449, 566,
	450, 0, 451, 452, 458, 459, 453, 454, 460, 461,
	462, 463, 464, 0, 466, 467, 465, 468, 469, 470,
	0, 471, 455, 456, 472, 473, 0, 474, 475, 476,
	477, 478, 479, 567, 0, 480, 0, 481, 482, 483,
	484, 457, 485, 490, 568, 486, 487, 488, 489, 569,
	0, 492, 493, 0, 491, 0, 494, 495, 496, 497,
	498, 499, 318, 500, 0, 501, 570, 571, 572, 573,
	0, 508, 0, 502, 503, 574, 504, 575, 0, 505,
	506, 507, 0, 509, 510, 0, 0, 511, 512, 513,
	515, 516, 514, 517, 0, 518, 0, 0, 519, 520,
	521, 576, 577, 578, 0, 523, 522, 579, 2606, 0,
	241, 0, 524, 525, 580, 526, 527, 528, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 247, 248, 249,
	250, 251, 252, 0, 253, 254, 0, 0, 0, 0,
	0, 529, 0, 0, 0, 0, 255, 256, 258, 257,
	259, 260, 261, 530, 531, 0, 262, 532, 263, 533,
	0, 534, 264, 265, 266, 267, 268, 0, 0, 0,
	269, 535, 536, 537, 0, 270, 271, 538, 0, 0,
	0, 272, 273, 274, 275, 276, 277, 278, 0, 0,
	280, 281, 282, 279, 0, 283, 0, 284, 285, 286,
	0, 287, 0, 288, 289, 0, 0, 0, 0, 0,
	0, 0, 290, 291, 292, 293, 0, 294, 539, 540,
	0, 298, 295, 296, 0, 299, 297, 0, 300, 301,
	302, 0, 0, 303, 304, 305, 0, 306, 307, 0,
	308, 309, 310, 0, 311, 312, 541, 313, 314, 315,
	317, 319, 316, 320, 321, 322, 323, 542, 543, 0,
	244, 0, 0, 0, 0, 0, 324, 325, 326, 544,
	0, 0, 0, 327, 0, 328, 0, 0, 0, 329,
	330, 545, 546, 331, 332, 0, 333, 547, 0, 548,
	334, 0, 335, 336, 337, 338, 339, 2605, 550, 551,
	396, 0, 340, 341, 0, 342, 343, 344, 345, 0,
	0, 0, 245, 346, 347, 349, 0, 0, 348, 552,
	553, 0, 554, 0, 350, 351, 0, 555, 0, 352,
	353, 354, 0, 355, 0, 0, 0, 356, 357, 358,
	359, 360, 361, 0, 362, 364, 363, 0, 365, 556,
	0, 366, 367, 0, 0, 368, 369, 370, 0, 0,
	371, 372, 373, 374, 0, 375, 376, 378, 380, 377,
	379, 384, 381, 382, 383, 386, 0, 385, 0, 387,
	388, 389, 392, 393, 391, 0, 390, 0, 246, 0,
	394, 0, 557, 395, 558, 397, 398, 0, 0, 399,
	0, 0, 0, 401, 402, 403, 0, 0, 404, 405,
	559, 0, 406, 0, 560, 407, 408, 400, 409, 410,
	411, 412, 413, 414, 415, 416, 0, 417, 418, 561,
	562, 563, 419, 564, 420, 421, 0, 422, 0, 423,
	424, 425, 426, 427, 428, 429, 565, 431, 430, 432,
	0, 433, 0, 0, 0, 0, 0, 434, 0, 436,
	437, 438, 435, 439, 440, 441, 442, 0, 443, 444,
	445, 0, 446, 447, 448, 449, 566, 450, 0, 451,
	452, 458, 459, 453, 454, 460, 461, 462, 463, 464,
	0, 466, 467, 465, 468, 469, 470, 0, 471, 455,
	456, 472, 473, 0, 474, 475, 476, 477, 478, 479,
	567, 0, 480, 0, 481, 482, 483, 484, 457, 485,
	490, 568, 486, 487, 488, 489, 569, 0, 492, 493,
	0, 491, 0, 494, 495, 496, 497, 498, 499, 318,
	500, 0, 501, 570, 571, 572, 573, 0, 508, 0,
	502, 503, 574, 504, 575, 0, 505, 506, 507, 0,
	509, 510, 0, 0, 511, 512, 513, 515, 516, 514,
	517, 0, 518, 0, 0, 519, 520, 521, 576, 577,
	578, 0, 523, 522, 579, 2072, 0, 241, 0, 524,
	525, 580, 526, 527, 528, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 247, 248, 249, 250, 251, 252,
	0, 253, 254, 0, 0, 0, 0, 0, 529, 0,
	0, 0, 0, 255, 256, 258, 257, 259, 260, 261,
	530, 531, 0, 262, 532, 263, 533, 0, 534, 264,
	265, 266, 267, 268, 0, 0, 0, 269, 535, 536,
	537, 0, 270, 271, 538, 0, 0, 0, 272, 273,
	274, 275, 276, 277, 278, 0, 0, 280, 281, 282,
	279, 0, 283, 0, 284, 285, 286, 0, 287, 0,
	288, 289, 0, 0, 0, 0, 0, 0, 0, 290,
	291, 292, 293, 0, 294, 539, 540, 0, 298, 295,
	296, 0, 299, 297, 0, 300, 301, 302, 0, 0,
	303, 304, 305, 0, 306, 307, 0, 308, 309, 310,
	0, 311, 312, 541, 313, 314, 315, 317, 319, 316,
	320, 321, 322, 323, 542, 543, 0, 244, 0, 0,
	0, 0, 0, 324, 325, 326, 544, 0, 0, 0,
	327, 0, 328, 0, 0, 0, 329, 330, 545, 546,
	331, 332, 0, 333, 547, 0, 548, 334, 0, 335,
	336, 337, 338, 339, 549, 550, 551, 396, 0, 340,
	341, 0, 342, 343, 344, 345, 0, 0, 0, 245,
	346, 347, 349, 0, 0, 348, 552, 553, 0, 554,
	0, 350, 351, 0, 555, 0, 352, 353, 354, 0,
	355, 0, 0, 0, 356, 357, 358, 359, 360, 361,
	0, 362, 364, 363, 0, 365, 556, 0, 366, 367,
	0, 0, 368, 369, 370, 0, 0, 371, 372, 373,
	374, 0, 375, 376, 378, 380, 377, 379, 384, 381,
	382, 383, 386, 0, 385, 0, 387, 388, 389, 392,
	393, 391, 0, 390, 0, 246, 0, 394, 0, 557,
	395, 558, 397, 398, 0, 0, 399, 0, 0, 0,
	401, 402, 403, 0, 0, 404, 405, 559, 0, 406,
	0, 560, 407, 408, 400, 409, 410, 411, 412, 413,
	414, 415, 416, 0, 417, 418, 561, 562, 563, 419,
	564, 420, 421, 0, 422, 0, 423, 424, 425, 426,
	427, 428, 429, 565, 431, 430, 432, 0, 433, 0,
	0, 0, 0, 0, 434, 0, 436, 437, 438, 435,
	439, 440, 441, 442, 0, 443, 444, 445, 0, 446,
	447, 448, 449, 566, 450, 0, 451, 452, 458, 459,
	453, 454, 460, 461, 462, 463, 464, 0, 466, 467,
	465, 468, 469, 470, 0, 471, 455, 456, 472, 473,
	0, 474, 475, 476, 477, 478, 479, 567, 0, 480,
	0, 481, 482, 483, 484, 457, 485, 490, 568, 486,
	487, 488, 489, 569, 0, 492, 493, 0, 491, 0,
	494, 495, 496, 497, 498, 499, 318, 500, 0, 501,
	570, 571, 572, 573, 0, 508, 0, 502, 503, 574,
	504, 575, 0, 505, 506, 507, 0, 509, 510, 0,
	0, 511, 512, 513, 515, 516, 514, 517, 0, 518,
	0, 0, 519, 520, 521, 576, 577, 578, 241, 523,
	522, 579, 0, 0, 0, 0, 524, 525, 580, 526,
	527, 528, 0, 0, 0, 247, 248, 249, 250, 251,
	252, 0, 253, 254, 0, 0, 0, 0, 0, 529,
	0, 0, 0, 0, 255, 256, 258, 257, 259, 260,
	261, 530, 531, 0, 262, 532, 263, 533, 0, 534,
	264, 265, 266, 267, 268, 0, 0, 0, 269, 535,
	536, 537, 0, 270, 271, 538, 0, 0, 0, 272,
	273, 274, 275, 276, 277, 278, 0, 0, 280, 281,
	282, 279, 0, 283, 0, 284, 285, 286, 0, 287,
	0, 288, 289, 0, 0, 0, 0, 0, 0, 0,
	290, 291, 292, 293, 0, 294, 539, 540, 0, 298,
	295, 296, 0, 299, 297, 0, 300, 301, 302, 0,
	0, 303, 304, 305, 0, 306, 307, 0, 308, 309,
	310, 0, 311, 312, 541, 313, 314, 315, 317, 319,
	316, 320, 321, 322, 323, 542, 543, 0, 244, 0,
	0, 0, 0, 0, 324, 325, 326, 544, 0, 0,
	0, 327, 0, 328, 0, 0, 0, 329, 330, 545,
	546, 331, 332, 0, 333, 547, 0, 548, 334, 0,
	335, 336, 337, 338, 339, 549, 550, 551, 396, 0,
	340, 341, 0, 342, 343, 344, 345, 0, 0, 0,
	245, 346, 347, 349, 0, 0, 348, 552, 553, 0,
	554, 0, 350, 351, 0, 555, 0, 352, 353, 354,
	0, 355, 0, 0, 0, 356, 357, 358, 359, 360,
	361, 0, 362, 364, 363, 0, 365, 556, 0, 366,
	367, 0, 0, 368, 369, 370, 0, 0, 371, 372,
	373, 374, 0, 375, 376, 378, 380, 377, 379, 384,
	381, 382, 383, 386, 0, 385, 0, 387, 388, 389,
	392, 393, 391, 0, 390, 0, 246, 0, 394, 0,
	557, 395, 558, 397, 398, 0, 0, 399, 0, 0,
	0, 401, 402, 403, 0, 0, 404, 405, 559, 0,
	406, 0, 560, 407, 408, 400, 409, 410, 411, 412,
	413, 414, 415, 416, 0, 417, 418, 561, 562, 563,
	419, 564, 420, 421, 0, 422, 0, 423, 424, 425,
	426, 427, 428, 429, 565, 431, 430, 432, 0, 433,
	0, 0, 0, 0, 0, 434, 0, 436, 437, 438,
	435, 439, 440, 441, 442, 0, 443, 444, 445, 0,
	446, 447, 448, 449, 566, 450, 0, 451, 452, 458,
	459, 453, 454, 460, 461, 462, 463, 464, 0, 466,
	467, 465, 468, 469, 470, 0, 471, 455, 456, 472,
	473, 0, 474, 475, 476, 477, 478, 479, 567, 0,
	480, 0, 481, 482, 483, 484, 457, 485, 490, 568,
	486, 487, 488, 489, 569, 0, 492, 493, 0, 491,
	1989, 494, 495, 496, 497, 498, 499, 318, 500, 0,
	501, 570, 571, 572, 573, 0, 508, 0, 502, 503,
	574, 504, 575, 0, 505, 506, 507, 0, 509, 510,
	0, 0, 511, 512, 513, 515, 516, 514, 517, 0,
	518, 0, 0, 519, 520, 521, 576, 577, 578, 0,
	523, 522, 579, 1994, 0, 241, 0, 524, 525, 580,
	526, 527, 528, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 247, 248, 249, 250, 251, 252, 0, 253,
	254, 0, 0, 0, 0, 0, 529, 0, 0, 0,
	0, 255, 256, 258, 257, 259, 260, 261, 530, 531,
	0, 262, 532, 263, 533, 0, 534, 264, 265, 266,
	267, 268, 0, 0, 0, 269, 535, 536, 537, 0,
	270, 271, 538, 0, 0, 0, 272, 273, 274, 275,
	276, 277, 278, 0, 0, 280, 281, 282, 279, 0,
	283, 0, 284, 285, 286, 0, 287, 0, 288, 289,
	0, 0, 0, 0, 0, 0, 0, 290, 291, 292,
	293, 0, 294, 539, 540, 0, 298, 295, 296, 0,
	299, 297, 0, 300, 301, 302, 0, 0, 303, 304,
	305, 0, 306, 307, 0, 308, 309, 310, 0, 311,
	312, 541, 313, 314, 315, 317, 319, 316, 320, 321,
	322, 323, 542, 543, 0, 244, 0, 0, 0, 0,
	0, 324, 325, 326, 544, 0, 0, 0, 327, 0,
	328, 0, 0, 0, 329, 330, 545, 546, 331, 332,
	0, 333, 547, 0, 548, 334, 0, 335, 336, 337,
	338, 339, 1993, 550, 551, 396, 0, 340, 341, 0,
	342, 343, 344, 345, 0, 0, 0, 245, 346, 347,
	349, 0, 0, 348, 552, 553, 0, 554, 0, 350,
	351, 0, 555, 0, 352, 353, 354, 0, 355, 0,
	0, 0, 356, 357, 358, 359, 360, 361, 0, 362,
	364, 363, 0, 365, 556, 0, 366, 367, 0, 0,
	368, 369, 370, 0, 0, 371, 372, 373, 374, 0,
	375, 376, 378, 380, 377, 379, 384, 381, 382, 383,
	386, 0, 385, 0, 387, 388, 389, 392, 393, 391,
	0, 390, 0, 246, 0, 394, 0, 557, 395, 558,
	397, 398, 0, 0, 399, 0, 0, 0, 401, 402,
	403, 0, 0, 404, 405, 559, 0, 406, 0, 560,
	407, 408, 400, 409, 410, 411, 412, 413, 414, 415,
	416, 0, 417, 418, 561, 562, 563, 419, 564, 420,
	421, 0, 422, 0, 423, 424, 425, 426, 427, 428,
	429, 565, 431, 430, 432, 0, 433, 0, 0, 0,
	0, 0, 434, 0, 436, 437, 438, 435, 439, 440,
	441, 442, 0, 443, 444, 445, 0, 446, 447, 448,
	449, 566, 450, 0, 451, 452, 458, 459, 453, 454,
	460, 461, 462, 463, 464, 0, 466, 467, 465, 468,
	469, 470, 0, 471, 455, 456, 472, 473, 0, 474,
	475, 476, 477, 478, 479, 567, 0, 480, 0, 481,
	482, 483, 484, 457, 485, 490, 568, 486, 487, 488,
	489, 569, 0, 492, 493, 0, 491, 0, 494, 495,
	496, 497, 498, 499, 318, 500, 0, 501, 570, 571,
	572, 573, 0, 508, 0, 502, 503, 574, 504, 575,
	0, 505, 506, 507, 0, 509, 510, 0, 0, 511,
	512, 513, 515, 516, 514, 517, 0, 518, 0, 0,
	519, 520, 521, 576, 577, 578, 0, 523, 522, 579,
	1982, 0, 241, 0, 524, 525, 580, 526, 527, 528,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 247,
	248, 249, 250, 251, 252, 0, 253, 254, 0, 0,
	0, 0, 0, 529, 0, 0, 0, 0, 255, 256,
	258, 257, 259, 260, 261, 530, 531, 0, 262, 532,
	263, 533, 0, 534, 264, 265, 266, 267, 268, 0,
	0, 0, 269, 535, 536, 537, 0, 270, 271, 538,
	0, 0, 0, 272, 273, 274, 275, 276, 277, 278,
	0, 0, 280, 281, 282, 279, 0, 283, 0, 284,
	285, 286, 0, 287, 0, 288, 289, 0, 0, 0,
	0, 0, 0, 0, 290, 291, 292, 293, 0, 294,
	539, 540, 0, 298, 295, 296, 0, 299, 297, 0,
	300, 301, 302, 0, 0, 303, 304, 305, 0, 306,
	307, 0, 308, 309, 310, 0, 311, 312, 541, 313,
	314, 315, 317, 319, 316, 320, 321, 322, 323, 542,
	543, 0, 244, 0, 0, 0, 0, 0, 324, 325,
	326, 544, 0, 0, 0, 327, 0, 328, 0, 0,
	0, 329, 330, 545, 546, 331, 332, 0, 333, 547,
	0, 548, 334, 0, 335, 336, 337, 338, 339, 1984,
	550, 551, 396, 0, 340, 341, 0, 342, 343, 344,
	345, 0, 0, 0, 245, 346, 347, 349, 0, 0,
	348, 552, 553, 0, 554, 0, 350, 351, 0, 555,
	0, 352, 353, 354, 0, 355, 0, 0, 0, 356,
	357, 358, 359, 360, 361, 0, 362, 364, 363, 0,
	365, 556, 0, 366, 367, 0, 0, 368, 369, 370,
	0, 0, 371, 372, 373, 374, 0, 375, 376, 378,
	380, 377, 379, 384, 381, 382, 383, 386, 0, 385,
	0, 387, 388, 389, 392, 393, 391, 0, 390, 0,
	246, 0, 394, 0, 557, 395, 558, 397, 398, 0,
	0, 399, 0, 0, 0, 401, 402, 403, 0, 0,
	404, 405, 559, 0, 406, 0, 560, 407, 408, 400,
	409, 410, 411, 412, 413, 414, 415, 416, 0, 417,
	418, 561, 562, 563, 419, 564, 420, 421, 0, 422,
	0, 423, 424, 425, 426, 427, 428, 429, 565, 431,
	430, 432, 0, 433, 0, 0, 0, 0, 0, 434,
	0, 436, 437, 438, 435, 439, 440, 441, 442, 0,
	443, 444, 445, 0, 446, 447, 448, 449, 566, 450,
	0, 451, 452, 458, 459, 453, 454, 460, 461, 462,
	463, 464, 0, 466, 467, 465, 468, 469, 470, 0,
	471, 455, 456, 472, 473, 0, 474, 475, 476, 477,
	478, 479, 567, 0, 480, 0, 481, 482, 483, 484,
	457, 485, 490, 568, 486, 487, 488, 489, 569, 0,
	492, 493, 0, 491, 0, 494, 495, 496, 497, 498,
	499, 318, 500, 0, 501, 570, 571, 572, 573, 0,
	508, 0, 502, 503, 574, 504, 575, 0, 505, 506,
	507, 0, 509, 510, 0, 0, 511, 512, 513, 515,
	516, 514, 517, 0, 518, 0, 0, 519, 520, 521,
	576, 577, 578, 241, 523, 522, 579, 0, 0, 0,
	0, 524, 525, 580, 526, 527, 528, 0, 0, 0,
	247, 248, 249, 250, 251, 252, 0, 253, 254, 0,
	0, 0, 0, 0, 529, 0, 0, 0, 0, 255,
	256, 258, 257, 259, 260, 261, 530, 531, 0, 262,
	532, 263, 533, 0, 534, 264, 265, 266, 267, 268,
	0, 0, 0, 269, 535, 536, 537, 0, 270, 271,
	538, 0, 0, 0, 272, 273, 274, 275, 276, 277,
	278, 0, 0, 280, 281, 282, 279, 0, 283, 0,
	284, 285, 286, 0, 287, 0, 288, 289, 0, 0,
	0, 0, 0, 0, 0, 290, 291, 292, 293, 0,
	294, 539, 540, 0, 298, 295, 296, 0, 299, 297,
	0, 300, 301, 302, 0, 0, 303, 304, 305, 0,
	306, 307, 0, 308, 309, 310, 0, 311, 312, 541,
	313, 314, 315, 317, 319, 316, 320, 321, 322, 323,
	542, 543, 0, 244, 0, 0, 0, 0, 0, 324,
	325, 326, 544, 0, 0, 0, 327, 0, 328, 0,
	0, 0, 329, 330, 545, 546, 331, 332, 0, 333,
	547, 0, 548, 334, 0, 335, 336, 337, 338, 339,
	1956, 550, 551, 396, 0, 340, 341, 0, 342, 343,
	344, 345, 0, 0, 0, 245, 346, 347, 349, 0,
	0, 348, 552, 553, 0, 554, 0, 350, 351, 0,
	555, 0, 352, 353, 354, 0, 355, 0, 0, 0,
	356, 357, 358, 359, 360, 361, 0, 362, 364, 363,
	0, 365, 556, 0, 366, 367, 0, 0, 368, 369,
	370, 0, 0, 371, 372, 373, 374, 0, 375, 376,
	378, 380, 377, 379, 384, 381, 382, 383, 386, 0,
	385, 0, 387, 388, 389, 392, 393, 391, 0, 390,
	0, 246, 0, 394, 0, 557, 395, 558, 397, 398,
	0, 0, 399, 0, 0, 1100, 401, 402, 403, 0,
	0, 404, 405, 559, 0, 406, 0, 560, 407, 408,
	400, 409, 410, 411, 412, 413, 414, 415, 416, 0,
	417, 418, 561, 562, 563, 419, 564, 420, 421, 0,
	422, 0, 423, 424, 425, 426, 427, 428, 429, 565,
	431, 430, 432, 0, 433, 0, 0, 0, 0, 0,
	434, 0, 436, 437, 438, 435, 439, 440, 441, 442,
	0, 443, 444, 445, 0, 446, 447, 448, 449, 566,
	450, 0, 451, 452, 458, 459, 453, 454, 460, 461,
	462, 463, 464, 0, 466, 467, 465, 468, 469, 470,
	0, 471, 455, 456, 472, 473, 0, 474, 475, 476,
	477, 478, 479, 567, 0, 480, 0, 481, 482, 483,
	484, 457, 485, 490, 568, 486, 487, 488, 489, 569,
	0, 492, 493, 0, 491, 0, 494, 495, 496, 497,
	498, 499, 318, 500, 0, 501, 570, 571, 572, 573,
	0, 508, 0, 502, 503, 574, 504, 575, 0, 505,
	506, 507, 0, 509, 510, 0, 0, 511, 512, 513,
	515, 516, 514, 517, 0, 518, 0, 0, 519, 520,
	521, 576, 577, 578, 0, 523, 522, 579, 1426, 0,
	241, 0, 524, 525, 580, 526, 527, 528, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 247, 248, 249,
	250, 251, 252, 0, 253, 254, 0, 0, 0, 0,
	0, 529, 0, 0, 0, 0, 255, 256, 258, 257,
	259, 260, 261, 530, 531, 0, 262, 532, 263, 533,
	0, 534, 264, 265, 266, 267, 268, 0, 0, 0,
	269, 535, 536, 537, 0, 270, 271, 538, 0, 0,
	0, 272, 273, 274, 275, 276, 277, 278, 0, 0,
	280, 281, 282, 279, 0, 283, 0, 284, 285, 286,
	0, 287, 0, 288, 289, 0, 0, 0, 0, 0,
	0, 0, 290, 291, 292, 293, 0, 294, 539, 540,
	0, 298, 295, 296, 0, 299, 297, 0, 300, 301,
	302, 0, 0, 303, 304, 305, 0, 306, 307, 0,
	308, 309, 310, 0, 311, 312, 541, 313, 314, 315,
	317, 319, 316, 320, 321, 322, 323, 542, 543, 0,
	244, 0, 0, 0, 0, 0, 324, 325, 326, 544,
	0, 0, 0, 327, 0, 328, 0, 0, 0, 329,
	330, 545, 546, 331, 332, 0, 333, 547, 0, 548,
	334, 0, 335, 336, 337, 338, 339, 1425, 550, 551,
	396, 0, 340, 341, 0, 342, 343, 344, 345, 0,
	0, 0, 245, 346, 347, 349, 0, 0, 348, 552,
	553, 0, 554, 0, 350, 351, 0, 555, 0, 352,
	353, 354, 0, 355, 0, 0, 0, 356, 357, 358,
	359, 360, 361, 0, 362, 364, 363, 0, 365, 556,
	0, 366, 367, 0, 0, 368, 369, 370, 0, 0,
	371, 372, 373, 374, 0, 375, 376, 378, 380, 377,
	379, 384, 381, 382, 383, 386, 0, 385, 0, 387,
	388, 389, 392, 393, 391, 0, 390, 0, 246, 0,
	394, 0, 557, 395, 558, 397, 398, 0, 0, 399,
	0, 0, 0, 401, 402, 403, 0, 0, 404, 405,
	559, 0, 406, 0, 560, 407, 408, 400, 409, 410,
	411, 412, 413, 414, 415, 416, 0, 417, 418, 561,
	562, 563, 419, 564, 420, 421, 0, 422, 0, 423,
	424, 425, 426, 427, 428, 429, 565, 431, 430, 432,
	0, 433, 0, 0, 0, 0, 0, 434, 0, 436,
	437, 438, 435, 439, 440, 441, 442, 0, 443, 444,
	445, 0, 446, 447, 448, 449, 566, 450, 0, 451,
	452, 458, 459, 453, 454, 460, 461, 462, 463, 464,
	0, 466, 467, 465, 468, 469, 470, 0, 471, 455,
	456, 472, 473, 0, 474, 475, 476, 477, 478, 479,
	567, 0, 480, 0, 481, 482, 483, 484, 457, 485,
	490, 568, 486, 487, 488, 489, 569, 0, 492, 493,
	0, 491, 0, 494, 495, 496, 497, 498, 499, 318,
	500, 0, 501, 570, 571, 572, 573, 0, 508, 0,
	502, 503, 574, 504, 575, 0, 505, 506, 507, 0,
	509, 510, 0, 0, 511, 512, 513, 515, 516, 514,
	517, 0, 518, 0, 0, 519, 520, 521, 576, 577,
	578, 0, 523, 522, 579, 1417, 0, 241, 0, 524,
	525, 580, 526, 527, 528, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 247, 248, 249, 250, 251, 252,
	0, 253, 254, 0, 0, 0, 0, 0, 529, 0,
	0, 0, 0, 255, 256, 258, 257, 259, 260, 261,
	530, 531, 0, 262, 532, 263, 533, 0, 534, 264,
	265, 266, 267, 268, 0, 0, 0, 269, 535, 536,
	537, 0, 270, 271, 538, 0, 0, 0, 272, 273,
	274, 275, 276, 277, 278, 0, 0, 280, 281, 282,
	279, 0, 283, 0, 284, 285, 286, 0, 287, 0,
	288, 289, 0, 0, 0, 0, 0, 0, 0, 290,
	291, 292, 293, 0, 294, 539, 540, 0, 298, 295,
	296, 0, 299, 297, 0, 300, 301, 302, 0, 0,
	303, 304, 305, 0, 306, 307, 0, 308, 309, 310,
	0, 311, 312, 541, 313, 314, 315, 317, 319, 316,
	320, 321, 322, 323, 542, 543, 0, 244, 0, 0,
	0, 0, 0, 324, 325, 326, 544, 0, 0, 0,
	327, 0, 328, 0, 0, 0, 329, 330, 545, 546,
	331, 332, 0, 333, 547, 0, 548, 334, 0, 335,
	336, 337, 338, 339, 1416, 550, 551, 396, 0, 340,
	341, 0, 342, 343, 344, 345, 0, 0, 0, 245,
	346, 347, 349, 0, 0, 348, 552, 553, 0, 554,
	0, 350, 351, 0, 555, 0, 352, 353, 354, 0,
	355, 0, 0, 0, 356, 357, 358, 359, 360, 361,
	0, 362, 364, 363, 0, 365, 556, 0, 366, 367,
	0, 0, 368, 369, 370, 0, 0, 371, 372, 373,
	374, 0, 375, 376, 378, 380, 377, 379, 384, 381,
	382, 383, 386, 0, 385, 0, 387, 388, 389, 392,
	393, 391, 0, 390, 0, 246, 0, 394, 0, 557,
	395, 558, 397, 398, 0, 0, 399, 0, 0, 0,
	401, 402, 403, 0, 0, 404, 405, 559, 0, 406,
	0, 560, 407, 408, 400, 409, 410, 411, 412, 413,
	414, 415, 416, 0, 417, 418, 561, 562, 563, 419,
	564, 420, 421, 0, 422, 0, 423, 424, 425, 426,
	427, 428, 429, 565, 431, 430, 432, 0, 433, 0,
	0, 0, 0, 0, 434, 0, 436, 437, 438, 435,
	439, 440, 441, 442, 0, 443, 444, 445, 0, 446,
	447, 448, 449, 566, 450, 0, 451, 452, 458, 459,
	453, 454, 460, 461, 462, 463, 464, 0, 466, 467,
	465, 468, 469, 470, 0, 471, 455, 456, 472, 473,
	0, 474, 475, 476, 477, 478, 479, 567, 0, 480,
	0, 481, 482, 483, 484, 457, 485, 490, 568, 486,
	487, 488, 489, 569, 0, 492, 493, 0, 491, 0,
	494, 495, 496, 497, 498, 499, 318, 500, 0, 501,
	570, 571, 572, 573, 0, 508, 0, 502, 503, 574,
	504, 575, 0, 505, 506, 507, 0, 509, 510, 0,
	0, 511, 512, 513, 515, 516, 514, 517, 0, 518,
	0, 0, 519, 520, 521, 576, 577, 578, 0, 523,
	522, 579, 1414, 0, 241, 0, 524, 525, 580, 526,
	527, 528, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 247, 248, 249, 250, 251, 252, 0, 253, 254,
	0, 0, 0, 0, 0, 529, 0, 0, 0, 0,
	255, 256, 258, 257, 259, 260, 261, 530, 531, 0,
	262, 532, 263, 533, 0, 534, 264, 265, 266, 267,
	268, 0, 0, 0, 269, 535, 536, 537, 0, 270,
	271, 538, 0, 0, 0, 272, 273, 274, 275, 276,
	277, 278, 0, 0, 280, 281, 282, 279, 0, 283,
	0, 284, 285, 286, 0, 287, 0, 288, 289, 0,
	0, 0, 0, 0, 0, 0, 290, 291, 292, 293,
	0, 294, 539, 540, 0, 298, 295, 296, 0, 299,
	297, 0, 300, 301, 302, 0, 0, 303, 304, 305,
	0, 306, 307, 0, 308, 309, 310, 0, 311, 312,
	541, 313, 314, 315, 317, 319, 316, 320, 321, 322,
	323, 542, 543, 0, 244, 0, 0, 0, 0, 0,
	324, 325, 326, 544, 0, 0, 0, 327, 0, 328,
	0, 0, 0, 329, 330, 545, 546, 331, 332, 0,
	333, 547, 0, 548, 334, 0, 335, 336, 337, 338,
	339, 1413, 550, 551, 396, 0, 340, 341, 0, 342,
	343, 344, 345, 0, 0, 0, 245, 346, 347, 349,
	0, 0, 348, 552, 553, 0, 554, 0, 350, 351,
	0, 555, 0, 352, 353, 354, 0, 355, 0, 0,
	0, 356, 357, 358, 359, 360, 361, 0, 362, 364,
	363, 0, 365, 556, 0, 366, 367, 0, 0, 368,
	369, 370, 0, 0, 371, 372, 373, 374, 0, 375,
	376, 378, 380, 377, 379, 384, 381, 382, 383, 386,
	0, 385, 0, 387, 388, 389, 392, 393, 391, 0,
	390, 0, 246, 0, 394, 0, 557, 395, 558, 397,
	398, 0, 0, 399, 0, 0, 0, 401, 402, 403,
	0, 0, 404, 405, 559, 0, 406, 0, 560, 407,
	408, 400, 409, 410, 411, 412, 413, 414, 415, 416,
	0, 417, 418, 561, 562, 563, 419, 564, 420, 421,
	0, 422, 0, 423, 424, 425, 426, 427, 428, 429,
	565, 431, 430, 432, 0, 433, 0, 0, 0, 0,
	0, 434, 0, 436, 437, 438, 435, 439, 440, 441,
	442, 0, 443, 444, 445, 0, 446, 447, 448, 449,
	566, 450, 0, 451, 452, 458, 459, 453, 454, 460,
	461, 462, 463, 464, 0, 466, 467, 465, 468, 469,
	470, 0, 471, 455, 456, 472, 473, 0, 474, 475,
	476, 477, 478, 479, 567, 0, 480, 0, 481, 482,
	483, 484, 457, 485, 490, 568, 486, 487, 488, 489,
	569, 0, 492, 493, 0, 491, 0, 494, 495, 496,
	497, 498, 499, 318, 500, 0, 501, 570, 571, 572,
	573, 0, 508, 0, 502, 503, 574, 504, 575, 0,
	505, 506, 507, 0, 509, 510, 0, 0, 511, 512,
	513, 515, 516, 514, 517, 0, 518, 0, 0, 519,
	520, 521, 576, 577, 578, 0, 523, 522, 579, 1409,
	0, 241, 0, 524, 525, 580, 526, 527, 528, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 247, 248,
	249, 250, 251, 252, 0, 253, 254, 0, 0, 0,
	0, 0, 529, 0, 0, 0, 0, 255, 256, 258,
	257, 259, 260, 261, 530, 531, 0, 262, 532, 263,
	533, 0, 534, 264, 265, 266, 267, 268, 0, 0,
	0, 269, 535, 536, 537, 0, 270, 271, 538, 0,
	0, 0, 272, 273, 274, 275, 276, 277, 278, 0,
	0, 280, 281, 282, 279, 0, 283, 0, 284, 285,
	286, 0, 287, 0, 288, 289, 0, 0, 0, 0,
	0, 0, 0, 290, 291, 292, 293, 0, 294, 539,
	540, 0, 298, 295, 296, 0, 299, 297, 0, 300,
	301, 302, 0, 0, 303, 304, 305, 0, 306, 307,
	0, 308, 309, 310, 0, 311, 312, 541, 313, 314,
	315, 317, 319, 316, 320, 321, 322, 323, 542, 543,
	0, 244, 0, 0, 0, 0, 0, 324, 325, 326,
	544, 0, 0, 0, 327, 0, 328, 0, 0, 0,
	329, 330, 545, 546, 331, 332, 0, 333, 547, 0,
	548, 334, 0, 335, 336, 337, 338, 339, 1408, 550,
	551, 396, 0, 340, 341, 0, 342, 343, 344, 345,
	0, 0, 0, 245, 346, 347, 349, 0, 0, 348,
	552, 553, 0, 554, 0, 350, 351, 0, 555, 0,
	352, 353, 354, 0, 355, 0, 0, 0, 356, 357,
	358, 359, 360, 361, 0, 362, 364, 363, 0, 365,
	556, 0, 366, 367, 0, 0, 368, 369, 370, 0,
	0, 371, 372, 373, 374, 0, 375, 376, 378, 380,
	377, 379, 384, 381, 382, 383, 386, 0, 385, 0,
	387, 388, 389, 392, 393, 391, 0, 390, 0, 246,
	0, 394, 0, 557, 395, 558, 397, 398, 0, 0,
	399, 0, 0, 0, 401, 402, 403, 0, 0, 404,
	405, 559, 0, 406, 0, 560, 407, 408, 400, 409,
	410, 411, 412, 413, 414, 415, 416, 0, 417, 418,
	561, 562, 563, 419, 564, 420, 421, 0, 422, 0,
	423, 424, 425, 426, 427, 428, 429, 565, 431, 430,
	432, 0, 433, 0, 0, 0, 0, 0, 434, 0,
	436, 437, 438, 435, 439, 440, 441, 442, 0, 443,
	444, 445, 0, 446, 447, 448, 449, 566, 450, 0,
	451, 452, 458, 459, 453, 454, 460, 461, 462, 463,
	464, 0, 466, 467, 465, 468, 469, 470, 0, 471,
	455, 456, 472, 473, 0, 474, 475, 476, 477, 478,
	479, 567, 0, 480, 0, 481, 482, 483, 484, 457,
	485, 490, 568, 486, 487, 488, 489, 569, 0, 492,
	493, 0, 491, 0, 494, 495, 496, 497, 498, 499,
	318, 500, 0, 501, 570, 571, 572, 573, 0, 508,
	0, 502, 503, 574, 504, 575, 0, 505, 506, 507,
	0, 509, 510, 0, 0, 511, 512, 513, 515, 516,
	514, 517, 0, 518, 0, 0, 519, 520, 521, 576,
	577, 578, 0, 523, 522, 579, 1366, 0, 241, 0,
	524, 525, 580, 526, 527, 528, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 247, 248, 249, 250, 251,
	252, 0, 253, 254, 0, 0, 0, 0, 0, 529,
	0, 0, 0, 0, 255, 256, 258, 257, 259, 260,
	261, 530, 531, 0, 262, 532, 263, 533, 0, 534,
	264, 265, 266, 267, 268, 0, 0, 0, 269, 535,
	536, 537, 0, 270, 271, 538, 0, 0, 0, 272,
	273, 274, 275, 276, 277, 278, 0, 0, 280, 281,
	282, 279, 0, 283, 0, 284, 285, 286, 0, 287,
	0, 288, 289, 0, 0, 0, 0, 0, 0, 0,
	290, 291, 292, 293, 0, 294, 539, 540, 0, 298,
	295, 296, 0, 299, 297, 0, 300, 301, 302, 0,
	0, 303, 304, 305, 0, 306, 307, 0, 308, 309,
	310, 0, 311, 312, 541, 313, 314, 315, 317, 319,
	316, 320, 321, 322, 323, 542, 543, 0, 244, 0,
	0, 0, 0, 0, 324, 325, 326, 544, 0, 0,
	0, 327, 0, 328, 0, 0, 0, 329, 330, 545,
	546, 331, 332, 0, 333, 547, 0, 548, 334, 0,
	335, 336, 337, 338, 339, 549, 550, 551, 396, 0,
	340, 341, 0, 342, 343, 344, 345, 0, 0, 0,
	245, 346, 347, 349, 0, 0, 348, 552, 553, 0,
	554, 0, 350, 351, 0, 555, 0, 352, 353, 354,
	0, 355, 0, 0, 0, 356, 357, 358, 359, 360,
	361, 0, 362, 364, 363, 0, 365, 556, 0, 366,
	367, 0, 0, 368, 369, 370, 0, 0, 371, 372,
	373, 374, 0, 375, 376, 378, 380, 377, 379, 384,
	381, 382, 383, 386, 0, 385, 0, 387, 388, 389,
	392, 393, 391, 0, 390, 0, 246, 0, 394, 0,
	557, 395, 558, 397, 398, 0, 0, 399, 0, 0,
	0, 401, 402, 403, 0, 0, 404, 405, 559, 0,
	406, 0, 560, 407, 408, 400, 409, 410, 411, 412,
	413, 414, 415, 416, 0, 417, 418, 561, 562, 563,
	419, 564, 420, 421, 0, 422, 0, 423, 424, 425,
	426, 427, 428, 429, 565, 431, 430, 432, 0, 433,
	0, 0, 0, 0, 0, 434, 0, 436, 437, 438,
	435, 439, 440, 441, 442, 0, 443, 444, 445, 0,
	446, 447, 448, 449, 566, 450, 0, 451, 452, 458,
	459, 453, 454, 460, 461, 462, 463, 464, 0, 466,
	467, 465, 468, 469, 470, 0, 471, 455, 456, 472,
	473, 0, 474, 475, 476, 477, 478, 479, 567, 0,
	480, 0, 481, 482, 483, 484, 457, 485, 490, 568,
	486, 487, 488, 489, 569, 0, 492, 493, 0, 491,
	0, 494, 495, 496, 497, 498, 499, 318, 500, 0,
	501, 570, 571, 572, 573, 0, 508, 0, 502, 503,
	574, 504, 575, 0, 505, 506, 507, 0, 509, 510,
	0, 0, 511, 512, 513, 515, 516, 514, 517, 0,
	518, 0, 0, 519, 520, 521, 576, 577, 578, 0,
	523, 522, 579, 1281, 0, 241, 0, 524, 525, 580,
	526, 527, 528, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 247, 248, 249, 250, 251, 252, 0, 253,
	254, 0, 0, 0, 0, 0, 529, 0, 0, 0,
	0, 255, 256, 258, 257, 259, 260, 261, 530, 531,
	0, 262, 532, 263, 533, 0, 534, 264, 265, 266,
	267, 268, 0, 0, 0, 269, 535, 536, 537, 0,
	270, 271, 538, 0, 0, 0, 272, 273, 274, 275,
	276, 277, 278, 0, 0, 280, 281, 282, 279, 0,
	283, 0, 284, 285, 286, 0, 287, 0, 288, 289,
	0, 0, 0, 0, 0, 0, 0, 290, 291, 292,
	293, 0, 294, 539, 540, 0, 298, 295, 296, 0,
	299, 297, 0, 300, 301, 302, 0, 0, 303, 304,
	305, 0, 306, 307, 0, 308, 309, 310, 0, 311,
	312, 541, 313, 314, 315, 317, 319, 316, 320, 321,
	322, 323, 542, 543, 0, 244, 0, 0, 0, 0,
	0, 324, 325, 326, 544, 0, 0, 0, 327, 0,
	328, 0, 0, 0, 329, 330, 545, 546, 331, 332,
	0, 333, 547, 0, 548, 334, 0, 335, 336, 337,
	338, 339, 549, 550, 551, 396, 0, 340, 341, 0,
	342, 343, 344, 345, 0, 0, 0, 245, 346, 347,
	349, 0, 0, 348, 552, 553, 0, 554, 0, 350,
	351, 0, 555, 0, 352, 353, 354, 0, 355, 0,
	0, 0, 356, 357, 358, 359, 360, 361, 0, 362,
	364, 363, 0, 365, 556, 0, 366, 367, 0, 0,
	368, 369, 370, 0, 0, 371, 372, 373, 374, 0,
	375, 376, 378, 380, 377, 379, 384, 381, 382, 383,
	386, 0, 385, 0, 387, 388, 389, 392, 393, 391,
	0, 390, 0, 246, 0, 394, 0, 557, 395, 558,
	397, 398, 0, 0, 399, 0, 0, 0, 401, 402,
	403, 0, 0, 404, 405, 559, 0, 406, 0, 560,
	407, 408, 400, 409, 410, 411, 412, 413, 414, 415,
	416, 0, 417, 418, 561, 562, 563, 419, 564, 420,
	421, 0, 422, 0, 423, 424, 425, 426, 427, 428,
	429, 565, 431, 430, 432, 0, 433, 0, 0, 0,
	0, 0, 434, 0, 436, 437, 438, 435, 439, 440,
	441, 442, 0, 443, 444, 445, 0, 446, 447, 448,
	449, 566, 450, 0, 451, 452, 458, 459, 453, 454,
	460, 461, 462, 463, 464, 0, 466, 467, 465, 468,
	469, 470, 0, 471, 455, 456, 472, 473, 0, 474,
	475, 476, 477, 478, 479, 567, 0, 480, 0, 481,
	482, 483, 484, 457, 485, 490, 568, 486, 487, 488,
	489, 569, 0, 492, 493, 0, 491, 0, 494, 495,
	496, 497, 498, 499, 318, 500, 0, 501, 570, 571,
	572, 573, 0, 508, 0, 502, 503, 574, 504, 575,
	0, 505, 506, 507, 0, 509, 510, 0, 0, 511,
	512, 513, 515, 516, 514, 517, 0, 518, 0, 0,
	519, 520, 521, 576, 577, 578, 0, 523, 522, 579,
	1274, 0, 241, 0, 524, 525, 580, 526, 527, 528,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 247,
	248, 249, 250, 251, 252, 0, 253, 254, 0, 0,
	0, 0, 0, 529, 0, 0, 0, 0, 255, 256,
	258, 257, 259, 260, 261, 530, 531, 0, 262, 532,
	263, 533, 0, 534, 264, 265, 266, 267, 268, 0,
	0, 0, 269, 535, 536, 537, 0, 270, 271, 538,
	0, 0, 0, 272, 273, 274, 275, 276, 277, 278,
	0, 0, 280, 281, 282, 279, 0, 283, 0, 284,
	285, 286, 0, 287, 0, 288, 289, 0, 0, 0,
	0, 0, 0, 0, 290, 291, 292, 293, 0, 294,
	539, 540, 0, 298, 295, 296, 0, 299, 297, 0,
	300, 301, 302, 0, 0, 303, 304, 305, 0, 306,
	307, 0, 308, 309, 310, 0, 311, 312, 541, 313,
	314, 315, 317, 319, 316, 320, 321, 322, 323, 542,
	543, 0, 244, 0, 0, 0, 0, 0, 324, 325,
	326, 544, 0, 0, 0, 327, 0, 328, 0, 0,
	0, 329, 330, 545, 546, 331, 332, 0, 333, 547,
	0, 548, 334, 0, 335, 336, 337, 338, 339, 1276,
	550, 551, 396, 0, 340, 341, 0, 342, 343, 344,
	345, 0, 0, 0, 245, 346, 347, 349, 0, 0,
	348, 552, 553, 0, 554, 0, 350, 351, 0, 555,
	0, 352, 353, 354, 0, 355, 0, 0, 0, 356,
	357, 358, 359, 360, 361, 0, 362, 364, 363, 0,
	365, 556, 0, 366, 367, 0, 0, 368, 369, 370,
	0, 0, 371, 372, 373, 374, 0, 375, 376, 378,
	380, 377, 379, 384, 381, 382, 383, 386, 0, 385,
	0, 387, 388, 389, 392, 393, 391, 0, 390, 0,
	246, 0, 394, 0, 557, 395, 558, 397, 398, 0,
	0, 399, 0, 0, 0, 401, 402, 403, 0, 0,
	404, 405, 559, 0, 406, 0, 560, 407, 408, 400,
	409, 410, 411, 412, 413, 414, 415, 416, 0, 417,
	418, 561, 562, 563, 419, 564, 420, 421, 0, 422,
	0, 423, 424, 425, 426, 427, 428, 429, 565, 431,
	430, 432, 0, 433, 0, 0, 0, 0, 0, 434,
	0, 436, 437, 438, 435, 439, 440, 441, 442, 0,
	443, 444, 445, 0, 446, 447, 448, 449, 566, 450,
	0, 451, 452, 458, 459, 453, 454, 460, 461, 462,
	463, 464, 0, 466, 467, 465, 468, 469, 470, 0,
	471, 455, 456, 472, 473, 0, 474, 475, 476, 477,
	478, 479, 567, 0, 480, 0, 481, 482, 483, 484,
	457, 485, 490, 568, 486, 487, 488, 489, 569, 0,
	492, 493, 0, 491, 0, 494, 495, 496, 497, 498,
	499, 318, 500, 0, 501, 570, 571, 572, 573, 0,
	508, 0, 502, 503, 574, 504, 575, 0, 505, 506,
	507, 0, 509, 510, 0, 0, 511, 512, 513, 515,
	516, 514, 517, 0, 518, 0, 0, 519, 520, 521,
	576, 577, 578, 0, 523, 522, 579, 582, 0, 241,
	0, 524, 525, 580, 526, 527, 528, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 247, 248, 249, 250,
	251, 252, 0, 253, 254, 0, 0, 0, 0, 0,
	529, 0, 0, 0, 0, 255, 256, 258, 257, 259,
	260, 261, 530, 531, 0, 262, 532, 263, 533, 0,
	534, 264, 265, 266, 267, 268, 0, 0, 0, 269,
	535, 536, 537, 0, 270, 271, 538, 0, 0, 0,
	272, 273, 274, 275, 276, 277, 278, 0, 0, 280,
	281, 282, 279, 0, 283, 0, 284, 285, 286, 0,
	287, 0, 288, 289, 0, 0, 0, 0, 0, 0,
	0, 290, 291, 292, 293, 0, 294, 539, 540, 0,
	298, 295, 296, 0, 299, 297, 0, 300, 301, 302,
	0, 0, 303, 304, 305, 0, 306, 307, 0, 308,
	309, 310, 0, 311, 312, 541, 313, 314, 315, 317,
	319, 316, 320, 321, 322, 323, 542, 543, 0, 244,
	0, 0, 0, 0, 0, 324, 325, 326, 544, 0,
	0, 0, 327, 0, 328, 0, 0, 0, 329, 330,
	545, 546, 331, 332, 0, 333, 547, 0, 548, 334,
	0, 335, 336, 337, 338, 339, 549, 550, 551, 396,
	0, 340, 341, 0, 342, 343, 344, 345, 0, 0,
	0, 245, 346, 347, 349, 0, 0, 348, 552, 553,
	0, 554, 0, 350, 351, 0, 555, 0, 352, 353,
	354, 0, 355, 0, 0, 0, 356, 357, 358, 359,
	360, 361, 0, 362, 364, 363, 0, 365, 556, 0,
	366, 367, 0, 0, 368, 369, 370, 0, 0, 371,
	372, 373, 374, 0, 375, 376, 378, 380, 377, 379,
	384, 381, 382, 383, 386, 0, 385, 0, 387, 388,
	389, 392, 393, 391, 0, 390, 0, 246, 0, 394,
	0, 557, 395, 558, 397, 398, 0, 0, 399, 0,
	0, 0, 401, 402, 403, 0, 0, 404, 405, 559,
	0, 406, 0, 560, 407, 408, 400, 409, 410, 411,
	412, 413, 414, 415, 416, 0, 417, 418, 561, 562,
	563, 419, 564, 420, 421, 0, 422, 0, 423, 424,
	425, 426, 427, 428, 429, 565, 431, 430, 432, 0,
	433, 0, 0, 0, 0, 0, 434, 0, 436, 437,
	438, 435, 439, 440, 441, 442, 0, 443, 444, 445,
	0, 446, 447, 448, 449, 566, 450, 0, 451, 452,
	458, 459, 453, 454, 460, 461, 462, 463, 464, 0,
	466, 467, 465, 468, 469, 470, 0, 471, 455, 456,
	472, 473, 0, 474, 475, 476, 477, 478, 479, 567,
	0, 480, 0, 481, 482, 483, 484, 457, 485, 490,
	568, 486, 487, 488, 489, 569, 0, 492, 493, 0,
	491, 0, 494, 495, 496, 497, 498, 499, 318, 500,
	0, 501, 570, 571, 572, 573, 0, 508, 0, 502,
	503, 574, 504, 575, 0, 505, 506, 507, 0, 509,
	510, 0, 0, 511, 512, 513, 515, 516, 514, 517,
	0, 518, 0, 0, 519, 520, 521, 576, 577, 578,
	0, 523, 522, 579, 232, 0, 241, 0, 524, 525,
	580, 526, 527, 528, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 247, 248, 249, 250, 251, 252, 0,
	253, 254, 0, 0, 0, 0, 0, 529, 0, 0,
	0, 0, 255, 256, 258, 257, 259, 260, 261, 530,
	531, 0, 262, 532, 263, 533, 0, 534, 264, 265,
	266, 267, 268, 0, 0, 0, 269, 535, 536, 537,
	0, 270, 271, 538, 0, 0, 0, 272, 273, 274,
	275, 276, 277, 278, 0, 0, 280, 281, 282, 279,
	0, 283, 0, 284, 285, 286, 0, 287, 0, 288,
	289, 0, 0, 0, 0, 0, 0, 0, 290, 291,
	292, 293, 0, 294, 539, 540, 0, 298, 295, 296,
	0, 299, 297, 0, 300, 301, 302, 0, 0, 303,
	304, 305, 0, 306, 307, 0, 308, 309, 310, 0,
	311, 312, 541, 313, 314, 315, 317, 319, 316, 320,
	321, 322, 323, 542, 543, 0, 244, 0, 0, 0,
	0, 0, 324, 325, 326, 544, 0, 0, 0, 327,
	0, 328, 0, 0, 0, 329, 330, 545, 546, 331,
	332, 0, 333, 547, 0, 548, 334, 0, 335, 336,
	337, 338, 339, 549, 550, 551, 396, 0, 340, 341,
	0, 342, 343, 344, 345, 0, 0, 0, 245, 346,
	347, 349, 0, 0, 348, 552, 553, 0, 554, 0,
	350, 351, 0, 555, 0, 352, 353, 354, 0, 355,
	0, 0, 0, 356, 357, 358, 359, 360, 361, 0,
	362, 364, 363, 0, 365, 556, 0, 366, 367, 0,
	0, 368, 369, 370, 0, 0, 371, 372, 373, 374,
	0, 375, 376, 378, 380, 377, 379, 384, 381, 382,
	383, 386, 0, 385, 0, 387, 388, 389, 392, 393,
	391, 0, 390, 0, 246, 0, 394, 0, 557, 395,
	558, 397, 398, 0, 0, 399, 0, 0, 0, 401,
	402, 403, 0, 0, 404, 405, 559, 0, 406, 0,
	560, 407, 408, 400, 409, 410, 411, 412, 413, 414,
	415, 416, 0, 417, 418, 561, 562, 563, 419, 564,
	420, 421, 0, 422, 0, 423, 424, 425, 426, 427,
	428, 429, 565, 431, 430, 432, 0, 433, 0, 0,
	0, 0, 0, 434, 0, 436, 437, 438, 435, 439,
	440, 441, 442, 0, 443, 444, 445, 0, 446, 447,
	448, 449, 566, 450, 0, 451, 452, 458, 459, 453,
	454, 460, 461, 462, 463, 464, 0, 466, 467, 465,
	468, 469, 470, 0, 471, 455, 456, 472, 473, 0,
	474, 475, 476, 477, 478, 479, 567, 0, 480, 0,
	481, 482, 483, 484, 457, 485, 490, 568, 486, 487,
	488, 489, 569, 0, 492, 493, 0, 491, 0, 494,
	495, 496, 497, 498, 499, 318, 500, 0, 501, 570,
	571, 572, 573, 0, 508, 0, 502, 503, 574, 504,
	575, 0, 505, 506, 507, 0, 509, 510, 0, 0,
	511, 512, 513, 515, 516, 514, 517, 0, 518, 0,
	0, 519, 520, 521, 576, 577, 578, 241, 523, 522,
	579, 0, 0, 0, 0, 524, 525, 580, 526, 527,
	528, 0, 0, 0, 247, 248, 249, 250, 251, 252,
	0, 253, 254, 0, 0, 0, 0, 0, 529, 0,
	0, 0, 0, 255, 256, 258, 257, 259, 260, 261,
	530, 531, 0, 262, 532, 263, 533, 0, 534, 264,
	265, 266, 267, 268, 0, 0, 0, 269, 535, 536,
	537, 0, 270, 271, 538, 0, 0, 0, 272, 273,
	274, 275, 276, 277, 278, 0, 0, 280, 281, 282,
	279, 0, 283, 0, 284, 285, 286, 0, 287, 0,
	288, 289, 0, 0, 0, 0, 0, 0, 0, 290,
	291, 292, 293, 0, 294, 539, 540, 0, 298, 295,
	296, 0, 299, 297, 0, 300, 301, 302, 0, 0,
	303, 304, 305, 0, 306, 307, 0, 308, 309, 310,
	0, 311, 312, 541, 313, 314, 315, 317, 319, 316,
	320, 321, 322, 323, 542, 543, 0, 244, 0, 0,
	0, 0, 0, 324, 325, 326, 544, 0, 0, 0,
	327, 0, 328, 0, 0, 0, 329, 330, 545, 546,
	331, 332, 0, 333, 547, 0, 548, 334, 0, 335,
	336, 337, 338, 339, 549, 550, 551, 396, 0, 340,
	341, 0, 342, 343, 344, 345, 0, 0, 0, 245,
	346, 347, 349, 0, 0, 348, 552, 553, 0, 554,
	0, 350, 351, 0, 555, 0, 352, 353, 354, 0,
	355, 0, 0, 0, 356, 357, 358, 359, 360, 361,
	0, 362, 364, 363, 0, 365, 556, 0, 366, 367,
	0, 0, 368, 369, 370, 0, 0, 371, 372, 373,
	374, 0, 375, 376, 378, 380, 377, 379, 384, 381,
	382, 383, 386, 0, 385, 0, 387, 388, 389, 392,
	393, 391, 0, 390, 0, 246, 0, 394, 0, 557,
	395, 558, 397, 398, 0, 0, 399, 0, 0, 0,
	401, 402, 403, 0, 0, 404, 405, 559, 0, 406,
	0, 560, 407, 408, 400, 409, 410, 411, 412, 413,
	414, 415, 416, 0, 417, 418, 561, 562, 563, 419,
	564, 420, 421, 0, 422, 0, 423, 424, 425, 426,
	427, 428, 429, 565, 431, 430, 432, 0, 433, 0,
	0, 0, 0, 0, 434, 0, 436, 437, 438, 435,
	439, 440, 441, 442, 0, 443, 444, 445, 0, 446,
	447, 448, 449, 566, 450, 0, 451, 452, 458, 459,
	453, 454, 460, 461, 462, 463, 464, 0, 466, 467,
	465, 468, 469, 470, 0, 471, 455, 456, 472, 473,
	0, 474, 475, 476, 477, 478, 479, 567, 0, 480,
	0, 481, 482, 483, 484, 457, 485, 490, 568, 486,
	487, 488, 489, 569, 0, 492, 493, 0, 491, 0,
	494, 495, 496, 497, 498, 499, 318, 500, 0, 501,
	570, 571, 572, 573, 0, 508, 0, 502, 503, 574,
	504, 575, 0, 505, 506, 507, 0, 509, 510, 0,
	0, 511, 512, 513, 515, 516, 514, 517, 0, 518,
	0, 0, 519, 520, 521, 576, 577, 578, 241, 523,
	522, 579, 0, 0, 0, 0, 524, 525, 580, 526,
	527, 528, 0, 0, 0, 247, 248, 249, 250, 251,
	252, 0, 253, 254, 0, 0, 0, 0, 0, 529,
	0, 0, 0, 0, 255, 256, 258, 257, 259, 260,
	261, 530, 531, 0, 262, 532, 263, 533, 0, 534,
	264, 265, 266, 267, 268, 0, 0, 0, 269, 535,
	536, 537, 0, 270, 271, 538, 0, 0, 0, 272,
	273, 274, 275, 276, 277, 278, 0, 0, 280, 281,
	282, 279, 0, 283, 0, 284, 285, 286, 604, 287,
	0, 288, 289, 0, 0, 0, 0, 0, 0, 0,
	290, 291, 292, 293, 0, 294, 539, 540, 0, 298,
	295, 296, 0, 299, 297, 0, 300, 301, 302, 0,
	0, 303, 304, 305, 0, 306, 307, 0, 308, 309,
	310, 0, 311, 312, 541, 313, 314, 315, 317, 319,
	316, 320, 321, 322, 323, 542, 543, 0, 0, 0,
	0, 0, 0, 0, 324, 325, 326, 544, 0, 0,
	0, 327, 0, 328, 0, 0, 0, 329, 330, 545,
	546, 331, 332, 605, 333, 547, 0, 548, 334, 0,
	335, 336, 337, 338, 339, 549, 550, 551, 396, 0,
	340, 341, 0, 342, 343, 344, 345, 0, 0, 0,
	0, 346, 347, 349, 0, 0, 348, 552, 553, 0,
	554, 0, 350, 351, 0, 555, 0, 352, 353, 354,
	0, 355, 0, 0, 0, 356, 357, 358, 359, 360,
	361, 0, 362, 364, 363, 0, 365, 556, 0, 366,
	367, 0, 0, 368, 369, 370, 0, 0, 371, 372,
	373, 374, 0, 375, 376, 378, 380, 377, 379, 384,
	381, 382, 383, 386, 0, 385, 0, 387, 388, 389,
	392, 393, 391, 0, 390, 0, 0, 0, 394, 0,
	557, 395, 558, 397, 398, 0, 0, 399, 0, 0,
	0, 401, 402, 403, 0, 0, 404, 405, 559, 0,
	406, 0, 560, 407, 408, 400, 409, 410, 411, 412,
	413, 414, 415, 416, 0, 417, 418, 561, 562, 563,
	419, 564, 420, 421, 0, 422, 0, 423, 424, 425,
	426, 427, 428, 429, 565, 431, 430, 432, 0, 433,
	0, 0, 0, 0, 0, 434, 0, 436, 437, 438,
	435, 439, 440, 441, 442, 0, 443, 444, 445, 0,
	446, 447, 448, 449, 566, 450, 0, 451, 452, 458,
	459, 453, 454, 460, 461, 462, 463, 464, 606, 466,
	467, 465, 468, 469, 470, 0, 471, 455, 456, 472,
	473, 0, 474, 475, 476, 477, 478, 479, 567, 0,
	480, 0, 481, 482, 483, 484, 457, 485, 490, 568,
	486, 487, 488, 489, 569, 0, 492, 493, 0, 491,
	0, 494, 495, 496, 497, 498, 499, 318, 500, 0,
	501, 570, 571, 572, 573, 0, 508, 0, 502, 503,
	574, 504, 575, 0, 505, 506, 507, 0, 509, 510,
	0, 0, 511, 512, 513, 515, 516, 514, 517, 0,
	518, 0, 0, 519, 520, 521, 576, 577, 578, 241,
	523, 522, 579, 0, 0, 0, 0, 524, 525, 580,
	526, 527, 528, 0, 0, 0, 247, 248, 249, 250,
	251, 252, 0, 253, 254, 0, 0, 0, 0, 0,
	529, 0, 0, 0, 0, 255, 256, 258, 257, 259,
	260, 261, 530, 531, 0, 262, 532, 263, 533, 0,
	534, 264, 265, 266, 267, 268, 0, 0, 0, 269,
	535, 536, 537, 0, 270, 271, 538, 0, 0, 0,
	272, 273, 274, 275, 276, 277, 278, 0, 0, 280,
	281, 282, 279, 0, 283, 0, 284, 285, 286, 0,
	287, 0, 288, 289, 0, 0, 0, 0, 0, 0,
	0, 290, 291, 2103, 293, 0, 294, 539, 540, 0,
	298, 295, 296, 0, 299, 297, 0, 300, 301, 302,
	0, 0, 303, 304, 305, 0, 306, 307, 0, 308,
	309, 310, 0, 311, 312, 541, 313, 314, 315, 317,
	319, 316, 320, 321, 322, 323, 542, 543, 0, 244,
	0, 0, 0, 0, 0, 324, 325, 326, 544, 0,
	0, 0, 327, 0, 328, 0, 0, 0, 329, 330,
	545, 546, 331, 332, 0, 333, 547, 0, 548, 334,
	0, 335, 336, 337, 338, 339, 549, 550, 551, 396,
	0, 340, 341, 0, 342, 343, 344, 345, 0, 0,
	0, 245, 346, 347, 349, 0, 0, 348, 552, 553,
	0, 554, 0, 350, 351, 0, 555, 0, 352, 353,
	354, 0, 355, 0, 0, 0, 356, 357, 358, 359,
	360, 361, 0, 362, 364, 363, 0, 365, 556, 0,
	366, 367, 0, 0, 368, 369, 370, 0, 0, 371,
	372, 373, 374, 0, 375, 376, 378, 380, 377, 379,
	384, 381, 382, 383, 386, 0, 385, 0, 387, 388,
	389, 392, 393, 391, 0, 390, 0, 246, 0, 394,
	0, 557, 395, 558, 397, 398, 0, 0, 399, 0,
	0, 0, 401, 402, 403, 0, 0, 404, 405, 559,
	0, 406, 0, 560, 407, 408, 400, 409, 410, 411,
	412, 413, 414, 415, 416, 0, 417, 418, 561, 562,
	563, 419, 564, 420, 421, 0, 422, 0, 423, 424,
	425, 426, 427, 428, 429, 565, 431, 430, 432, 0,
	433, 0, 0, 0, 0, 0, 434, 0, 436, 437,
	438, 435, 439, 440, 441, 442, 0, 443, 444, 445,
	0, 446, 447, 448, 449, 566, 450, 0, 451, 452,
	458, 459, 453, 454, 460, 461, 462, 463, 464, 0,
	466, 467, 465, 468, 469, 470, 0, 471, 455, 456,
	472, 473, 0, 474, 475, 476, 477, 478, 479, 567,
	0, 480, 0, 481, 482, 483, 484, 457, 485, 490,
	568, 486, 487, 488, 489, 569, 0, 492, 493, 0,
	491, 0, 494, 495, 496, 497, 498, 499, 318, 500,
	0, 501, 570, 571, 572, 573, 0, 508, 0, 502,
	503, 574, 504, 575, 0, 505, 506, 507, 0, 509,
	510, 0, 0, 511, 512, 513, 515, 516, 514, 517,
	0, 518, 0, 0, 519, 520, 521, 576, 577, 578,
	241, 523, 522, 579, 0, 0, 0, 0, 524, 525,
	580, 526, 527, 528, 0, 0, 0, 247, 248, 249,
	250, 251, 252, 0, 253, 254, 0, 0, 0, 0,
	0, 529, 0, 0, 0, 0, 255, 256, 258, 257,
	259, 260, 261, 530, 531, 0, 262, 532, 263, 533,
	0, 534, 264, 265, 266, 267, 268, 0, 0, 0,
	269, 535, 536, 537, 0, 270, 271, 538, 0, 0,
	0, 272, 273, 274, 275, 276, 277, 278, 0, 0,
	280, 281, 282, 279, 0, 283, 0, 284, 285, 286,
	0, 287, 0, 288, 289, 0, 0, 0, 0, 0,
	0, 0, 290, 291, 2101, 293, 0, 294, 539, 540,
	0, 298, 295, 296, 0, 299, 297, 0, 300, 301,
	302, 0, 0, 303, 304, 305, 0, 306, 307, 0,
	308, 309, 310, 0, 311, 312, 541, 313, 314, 315,
	317, 319, 316, 320, 321, 322, 323, 542, 543, 0,
	244, 0, 0, 0, 0, 0, 324, 325, 326, 544,
	0, 0, 0, 327, 0, 328, 0, 0, 0, 329,
	330, 545, 546, 331, 332, 0, 333, 547, 0, 548,
	334, 0, 335, 336, 337, 338, 339, 549, 550, 551,
	396, 0, 340, 341, 0, 342, 343, 344, 345, 0,
	0, 0, 245, 346, 347, 349, 0, 0, 348, 552,
	553, 0, 554, 0, 350, 351, 0, 555, 0, 352,
	353, 354, 0, 355, 0, 0, 0, 356, 357, 358,
	359, 360, 361, 0, 362, 364, 363, 0, 365, 556,
	0, 366, 367, 0, 0, 368, 369, 370, 0, 0,
	371, 372, 373, 374, 0, 375, 376, 378, 380, 377,
	379, 384, 381, 382, 383, 386, 0, 385, 0, 387,
	388, 389, 392, 393, 391, 0, 390, 0, 246, 0,
	394, 0, 557, 395, 558, 397, 398, 0, 0, 399,
	0, 0, 0, 401, 402, 403, 0, 0, 404, 405,
	559, 0, 406, 0, 560, 407, 408, 400, 409, 410,
	411, 412, 413, 414, 415, 416, 0, 417, 418, 561,
	562, 563, 419, 564, 420, 421, 0, 422, 0, 423,
	424, 425, 426, 427, 428, 429, 565, 431, 430, 432,
	0, 433, 0, 0, 0, 0, 0, 434, 0, 436,
	437, 438, 435, 439, 440, 441, 442, 0, 443, 444,
	445, 0, 446, 447, 448, 449, 566, 450, 0, 451,
	452, 458, 459, 453, 454, 460, 461, 462, 463, 464,
	0, 466, 467, 465, 468, 469, 470, 0, 471, 455,
	456, 472, 473, 0, 474, 475, 476, 477, 478, 479,
	567, 0, 480, 0, 481, 482, 483, 484, 457, 485,
	490, 568, 486, 487, 488, 489, 569, 0, 492, 493,
	0, 491, 0, 494, 495, 496, 497, 498, 499, 318,
	500, 0, 501, 570, 571, 572, 573, 0, 508, 0,
	502, 503, 574, 504, 575, 0, 505, 506, 507, 0,
	509, 510, 0, 0, 511, 512, 513, 515, 516, 514,
	517, 0, 518, 0, 0, 519, 520, 521, 576, 577,
	578, 241, 523, 522, 579, 0, 0, 0, 0, 524,
	525, 580, 526, 527, 528, 0, 0, 0, 247, 248,
	249, 250, 251, 252, 0, 253, 254, 0, 0, 0,
	0, 0, 529, 0, 0, 0, 0, 255, 256, 258,
	257, 259, 260, 261, 530, 531, 0, 262, 532, 263,
	533, 0, 534, 264, 265, 266, 267, 268, 0, 0,
	0, 269, 535, 536, 537, 0, 270, 271, 538, 0,
	0, 0, 272, 273, 274, 275, 276, 277, 278, 0,
	0, 280, 281, 282, 279, 0, 283, 0, 284, 285,
	286, 0, 287, 0, 288, 289, 0, 0, 0, 0,
	0, 0, 0, 290, 291, 2099, 293, 0, 294, 539,
	540, 0, 298, 295, 296, 0, 299, 297, 0, 300,
	301, 302, 0, 0, 303, 304, 305, 0, 306, 307,
	0, 308, 309, 310, 0, 311, 312, 541, 313, 314,
	315, 317, 319, 316, 320, 321, 322, 323, 542, 543,
	0, 244, 0, 0, 0, 0, 0, 324, 325, 326,
	544, 0, 0, 0, 327, 0, 328, 0, 0, 0,
	329, 330, 545, 546, 331, 332, 0, 333, 547, 0,
	548, 334, 0, 335, 336, 337, 338, 339, 549, 550,
	551, 396, 0, 340, 341, 0, 342, 343, 344, 345,
	0, 0, 0, 245, 346, 347, 349, 0, 0, 348,
	552, 553, 0, 554, 0, 350, 351, 0, 555, 0,
	352, 353, 354, 0, 355, 0, 0, 0, 356, 357,
	358, 359, 360, 361, 0, 362, 364, 363, 0, 365,
	556, 0, 366, 367, 0, 0, 368, 369, 370, 0,
	0, 371, 372, 373, 374, 0, 375, 376, 378, 380,
	377, 379, 384, 381, 382, 383, 386, 0, 385, 0,
	387, 388, 389, 392, 393, 391, 0, 390, 0, 246,
	0, 394, 0, 557, 395, 558, 397, 398, 0, 0,
	399, 0, 0, 0, 401, 402, 403, 0, 0, 404,
	405, 559, 0, 406, 0, 560, 407, 408, 400, 409,
	410, 411, 412, 413, 414, 415, 416, 0, 417, 418,
	561, 562, 563, 419, 564, 420, 421, 0, 422, 0,
	423, 424, 425, 426, 427, 428, 429, 565, 431, 430,
	432, 0, 433, 0, 0, 0, 0, 0, 434, 0,
	436, 437, 438, 435, 439, 440, 441, 442, 0, 443,
	444, 445, 0, 446, 447, 448, 449, 566, 450, 0,
	451, 452, 458, 459, 453, 454, 460, 461, 462, 463,
	464, 0, 466, 467, 465, 468, 469, 470, 0, 471,
	455, 456, 472, 473, 0, 474, 475, 476, 477, 478,
	479, 567, 0, 480, 0, 481, 482, 483, 484, 457,
	485, 490, 568, 486, 487, 488, 489, 569, 0, 492,
	493, 0, 491, 0, 494, 495, 496, 497, 498, 499,
	318, 500, 0, 501, 570, 571, 572, 573, 0, 508,
	0, 502, 503, 574, 504, 575, 0, 505, 506, 507,
	0, 509, 510, 0, 0, 511, 512, 513, 515, 516,
	514, 517, 0, 518, 0, 0, 519, 520, 521, 576,
	577, 578, 241, 523, 522, 579, 0, 0, 0, 0,
	524, 525, 580, 526, 527, 528, 0, 0, 0, 247,
	248, 249, 250, 251, 252, 0, 253, 254, 0, 0,
	0, 0, 0, 529, 0, 0, 0, 0, 255, 256,
	258, 257, 259, 260, 261, 530, 531, 0, 262, 532,
	263, 533, 0, 534, 264, 265, 266, 267, 268, 0,
	0, 0, 269, 535, 536, 537, 0, 270, 271, 538,
	0, 0, 0, 272, 273, 274, 275, 276, 277, 278,
	0, 0, 280, 281, 282, 279, 0, 283, 0, 284,
	285, 286, 0, 287, 0, 288, 289, 0, 0, 0,
	0, 0, 0, 0, 290, 291, 292, 293, 0, 294,
	539, 540, 0, 298, 295, 296, 0, 299, 297, 0,
	300, 301, 302, 0, 0, 303, 304, 305, 0, 306,
	307, 0, 308, 309, 310, 0, 311, 312, 541, 313,
	314, 315, 317, 319, 316, 320, 321, 322, 323, 542,
	543, 0, 244, 0, 0, 0, 0, 0, 324, 325,
	326, 544, 0, 0, 0, 327, 0, 328, 0, 0,
	0, 329, 330, 545, 546, 331, 332, 0, 333, 547,
	0, 548, 334, 0, 335, 336, 337, 338, 339, 2037,
	550, 551, 396, 0, 340, 341, 0, 342, 343, 344,
	345, 0, 0, 0, 245, 346, 347, 349, 0, 0,
	348, 552, 553, 0, 554, 0, 350, 351, 0, 555,
	0, 352, 353, 354, 0, 355, 0, 0, 0, 356,
	357, 358, 359, 360, 361, 0, 362, 364, 363, 0,
	365, 556, 0, 366, 367, 0, 0, 368, 369, 370,
	0, 0, 371, 372, 373, 374, 0, 375, 376, 378,
	380, 377, 379, 384, 381, 382, 383, 386, 0, 385,
	0, 387, 388, 389, 392, 393, 391, 0, 390, 0,
	246, 0, 394, 0, 557, 395, 558, 397, 398, 0,
	0, 399, 0, 0, 0, 401, 402, 403, 0, 0,
	404, 405, 559, 0, 406, 0, 560, 407, 408, 400,
	409, 410, 411, 412, 413, 414, 415, 416, 0, 417,
	418, 561, 562, 563, 419, 564, 420, 421, 0, 422,
	0, 423, 424, 425, 426, 427, 428, 429, 565, 431,
	430, 432, 0, 433, 0, 0, 0, 0, 0, 434,
	0, 436, 437, 438, 435, 439, 440, 441, 442, 0,
	443, 444, 445, 0, 446, 447, 448, 449, 566, 450,
	0, 451, 452, 458, 459, 453, 454, 460, 461, 462,
	463, 464, 0, 466, 467, 465, 468, 469, 470, 0,
	471, 455, 456, 472, 473, 0, 474, 475, 476, 477,
	478, 479, 567, 0, 480, 0, 481, 482, 483, 484,
	457, 485, 490, 568, 486, 487, 488, 489, 569, 0,
	492, 493, 0, 491, 0, 494, 495, 496, 497, 498,
	499, 318, 500, 0, 501, 570, 571, 572, 573, 0,
	508, 0, 502, 503, 574, 504, 575, 0, 505, 506,
	507, 0, 509, 510, 0, 0, 511, 512, 513, 515,
	516, 514, 517, 0, 518, 0, 0, 519, 520, 521,
	576, 577, 578, 241, 523, 522, 579, 0, 0, 0,
	0, 524, 525, 580, 526, 527, 528, 0, 0, 0,
	247, 248, 249, 250, 251, 252, 0, 253, 254, 0,
	0, 0, 0, 0, 529, 0, 0, 0, 0, 255,
	256, 258, 257, 259, 260, 261, 530, 531, 0, 262,
	532, 263, 533, 0, 534, 264, 265, 266, 267, 268,
	0, 0, 0, 269, 535, 536, 537, 0, 270, 271,
	538, 0, 0, 0, 272, 273, 274, 275, 276, 277,
	278, 0, 0, 280, 281, 282, 279, 0, 283, 0,
	284, 285, 286, 0, 287, 0, 288, 289, 0, 0,
	0, 0, 0, 0, 0, 290, 291, 292, 293, 0,
	294, 539, 540, 0, 298, 295, 296, 0, 299, 297,
	0, 300, 301, 302, 0, 0, 303, 304, 305, 0,
	306, 307, 0, 308, 309, 310, 0, 311, 312, 541,
	313, 314, 315, 317, 319, 316, 320, 321, 322, 323,
	542, 543, 0, 244, 0, 0, 0, 0, 0, 324,
	325, 326, 544, 0, 0, 0, 327, 0, 328, 0,
	0, 0, 329, 330, 545, 546, 331, 332, 0, 333,
	547, 0, 548, 334, 0, 335, 336, 337, 338, 339,
	2031, 550, 551, 396, 0, 340, 341, 0, 342, 343,
	344, 345, 0, 0, 0, 245, 346, 347, 349, 0,
	0, 348, 552, 553, 0, 554, 0, 350, 351, 0,
	555, 0, 352, 353, 354, 0, 355, 0, 0, 0,
	356, 357, 358, 359, 360, 361, 0, 362, 364, 363,
	0, 365, 556, 0, 366, 367, 0, 0, 368, 369,
	370, 0, 0, 371, 372, 373, 374, 0, 375, 376,
	378, 380, 377, 379, 384, 381, 382, 383, 386, 0,
	385, 0, 387, 388, 389, 392, 393, 391, 0, 390,
	0, 246, 0, 394, 0, 557, 395, 558, 397, 398,
	0, 0, 399, 0, 0, 0, 401, 402, 403, 0,
	0, 404, 405, 559, 0, 406, 0, 560, 407, 408,
	400, 409, 410, 411, 412, 413, 414, 415, 416, 0,
	417, 418, 561, 562, 563, 419, 564, 420, 421, 0,
	422, 0, 423, 424, 425, 426, 427, 428, 429, 565,
	431, 430, 432, 0, 433, 0, 0, 0, 0, 0,
	434, 0, 436, 437, 438, 435, 439, 440, 441, 442,
	0, 443, 444, 445, 0, 446, 447, 448, 449, 566,
	450, 0, 451, 452, 458, 459, 453, 454, 460, 461,
	462, 463, 464, 0, 466, 467, 465, 468, 469, 470,
	0, 471, 455, 456, 472, 473, 0, 474, 475, 476,
	477, 478, 479, 567, 0, 480, 0, 481, 482, 483,
	484, 457, 485, 490, 568, 486, 487, 488, 489, 569,
	0, 492, 493, 0, 491, 0, 494, 495, 496, 497,
	498, 499, 318, 500, 0, 501, 570, 571, 572, 573,
	0, 508, 0, 502, 503, 574, 504, 575, 0, 505,
	506, 507, 0, 509, 510, 0, 0, 511, 512, 513,
	515, 516, 514, 517, 0, 518, 0, 0, 519, 520,
	521, 576, 577, 578, 241, 523, 522, 579, 0, 0,
	0, 0, 524, 525, 580, 526, 527, 528, 0, 0,
	0, 247, 248, 249, 250, 251, 252, 0, 253, 254,
	0, 0, 0, 0, 0, 529, 0, 0, 0, 0,
	255, 256, 258, 257, 259, 260, 261, 530, 531, 0,
	262, 532, 263, 533, 0, 534, 264, 265, 266, 267,
	268, 0, 0, 0, 269, 535, 536, 537, 0, 270,
	271, 538, 0, 0, 0, 272, 273, 274, 275, 276,
	277, 278, 0, 0, 280, 281, 282, 279, 0, 283,
	0, 284, 285, 286, 0, 287, 0, 288, 289, 0,
	0, 0, 0, 0, 0, 0, 290, 291, 292, 293,
	0, 294, 539, 540, 0, 298, 295, 296, 0, 299,
	297, 0, 300, 301, 302, 0, 0, 303, 304, 305,
	0, 306, 307, 0, 308, 309, 310, 0, 311, 312,
	541, 313, 314, 315, 317, 319, 316, 320, 321, 322,
	323, 542, 543, 0, 244, 0, 0, 0, 0, 0,
	324, 325, 326, 544, 0, 0, 0, 327, 0, 328,
	0, 0, 0, 329, 330, 545, 546, 331, 332, 0,
	333, 547, 0, 548, 334, 0, 335, 336, 337, 338,
	339, 2000, 550, 551, 396, 0, 340, 341, 0, 342,
	343, 344, 345, 0, 0, 0, 245, 346, 347, 349,
	0, 0, 348, 552, 553, 0, 554, 0, 350, 351,
	0, 555, 0, 352, 353, 354, 0, 355, 0, 0,
	0, 356, 357, 358, 359, 360, 361, 0, 362, 364,
	363, 0, 365, 556, 0, 366, 367, 0, 0, 368,
	369, 370, 0, 0, 371, 372, 373, 374, 0, 375,
	376, 378, 380, 377, 379, 384, 381, 382, 383, 386,
	0, 385, 0, 387, 388, 389, 392, 393, 391, 0,
	390, 0, 246, 0, 394, 0, 557, 395, 558, 397,
	398, 0, 0, 399, 0, 0, 0, 401, 402, 403,
	0, 0, 404, 405, 559, 0, 406, 0, 560, 407,
	408, 400, 409, 410, 411, 412, 413, 414, 415, 416,
	0, 417, 418, 561, 562, 563, 419, 564, 420, 421,
	0, 422, 0, 423, 424, 425, 426, 427, 428, 429,
	565, 431, 430, 432, 0, 433, 0, 0, 0, 0,
	0, 434, 0, 436, 437, 438, 435, 439, 440, 441,
	442, 0, 443, 444, 445, 0, 446, 447, 448, 449,
	566, 450, 0, 451, 452, 458, 459, 453, 454, 460,
	461, 462, 463, 464, 0, 466, 467, 465, 468, 469,
	470, 0, 471, 455, 456, 472, 473, 0, 474, 475,
	476, 477, 478, 479, 567, 0, 480, 0, 481, 482,
	483, 484, 457, 485, 490, 568, 486, 487, 488, 489,
	569, 0, 492, 493, 0, 491, 0, 494, 495, 496,
	497, 498, 499, 318, 500, 0, 501, 570, 571, 572,
	573, 0, 508, 0, 502, 503, 574, 504, 575, 0,
	505, 506, 507, 0, 509, 510, 0, 0, 511, 512,
	513, 515, 516, 514, 517, 0, 518, 0, 0, 519,
	520, 521, 576, 577, 578, 0, 523, 522, 579, 770,
	0, 241, 0, 524, 525, 580, 526, 527, 528, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 247, 248,
	249, 250, 251, 252, 0, 253, 254, 0, 0, 0,
	0, 0, 529, 0, 0, 0, 0, 255, 256, 258,
	257, 259, 260, 261, 530, 531, 0, 262, 532, 263,
	533, 0, 534, 264, 265, 266, 267, 268, 0, 0,
	0, 269, 535, 536, 537, 0, 270, 271, 538, 0,
	0, 0, 272, 273, 274, 275, 276, 277, 278, 0,
	0, 280, 281, 282, 279, 0, 283, 0, 284, 285,
	286, 0, 287, 0, 288, 289, 0, 0, 0, 0,
	0, 0, 0, 290, 291, 292, 293, 0, 294, 539,
	540, 0, 298, 295, 296, 0, 299, 297, 0, 300,
	301, 302, 0, 0, 303, 304, 305, 0, 306, 307,
	0, 308, 309, 310, 0, 311, 312, 541, 313, 314,
	315, 317, 319, 316, 320, 321, 322, 323, 542, 543,
	0, 0, 0, 0, 0, 0, 0, 324, 325, 326,
	544, 0, 0, 0, 327, 0, 328, 0, 0, 0,
	329, 330, 545, 546, 331, 332, 0, 333, 547, 0,
	548, 334, 0, 335, 336, 337, 338, 339, 549, 550,
	551, 396, 0, 340, 341, 0, 342, 343, 344, 345,
	0, 0, 0, 0, 346, 347, 349, 0, 0, 348,
	552, 553, 0, 554, 769, 350, 351, 0, 555, 0,
	352, 353, 354, 0, 355, 0, 0, 0, 356, 357,
	358, 359, 360, 361, 0, 362, 364, 363, 0, 365,
	556, 0, 366, 367, 0, 0, 368, 369, 370, 0,
	0, 371, 372, 373, 374, 0, 375, 376, 378, 380,
	377, 379, 384, 381, 382, 383, 386, 0, 385, 0,
	387, 388, 389, 392, 393, 391, 0, 390, 0, 0,
	0, 394, 0, 557, 395, 558, 397, 398, 0, 0,
	399, 0, 0, 0, 401, 402, 403, 0, 0, 404,
	405, 559, 0, 406, 0, 560, 407, 408, 400, 409,
	410, 411, 412, 413, 414, 415, 416, 0, 417, 418,
	561, 562, 563, 419, 564, 420, 421, 0, 422, 0,
	423, 424, 425, 426, 427, 428, 429, 565, 431, 430,
	432, 0, 433, 0, 0, 0, 0, 0, 434, 0,
	436, 437, 438, 435, 439, 440, 441, 442, 0, 443,
	444, 445, 0, 446, 447, 448, 449, 566, 450, 0,
	451, 452, 458, 459, 453, 454, 460, 461, 462, 463,
	464, 0, 466, 467, 465, 468, 469, 470, 0, 471,
	455, 456, 472, 473, 0, 474, 475, 476, 477, 478,
	479, 567, 0, 480, 0, 481, 482, 483, 484, 457,
	485, 490, 568, 486, 487, 488, 489, 569, 0, 492,
	493, 0, 491, 768, 494, 495, 496, 497, 498, 499,
	318, 500, 0, 501, 570, 571, 572, 573, 0, 508,
	0, 502, 503, 574, 504, 575, 0, 505, 506, 507,
	0, 509, 510, 0, 0, 511, 512, 513, 515, 516,
	514, 517, 0, 518, 0, 0, 519, 520, 521, 576,
	577, 578, 241, 523, 522, 579, 0, 0, 0, 0,
	524, 525, 580, 526, 527, 528, 0, 0, 0, 247,
	248, 249, 250, 251, 252, 0, 253, 254, 0, 0,
	0, 0, 0, 529, 0, 0, 0, 0, 255, 256,
	258, 257, 259, 260, 261, 530, 531, 0, 262, 532,
	263, 533, 0, 534, 264, 265, 266, 267, 268, 0,
	0, 0, 269, 535, 536, 537, 0, 270, 271, 538,
	0, 0, 0, 272, 273, 274, 275, 276, 277, 278,
	0, 0, 280, 281, 282, 279, 0, 283, 0, 284,
	285, 286, 0, 287, 0, 288, 289, 0, 0, 0,
	0, 0, 0, 0, 290, 291, 292, 293, 0, 294,
	539, 540, 0, 298, 295, 296, 0, 299, 297, 0,
	300, 301, 302, 0, 0, 303, 304, 305, 0, 306,
	307, 0, 308, 309, 310, 0, 311, 312, 541, 313,
	314, 315, 317, 319, 316, 320, 321, 322, 323, 542,
	543, 0, 2677, 0, 0, 0, 0, 0, 324, 325,
	326, 544, 0, 0, 0, 327, 0, 328, 0, 0,
	0, 329, 330, 545, 546, 331, 332, 0, 333, 547,
	0, 548, 334, 0, 335, 336, 337, 338, 339, 549,
	550, 551, 396, 0, 340, 341, 0, 342, 343, 344,
	345, 0, 0, 0, 0, 346, 347, 349, 0, 0,
	348, 552, 553, 0, 554, 0, 350, 351, 0, 555,
	0, 352, 353, 354, 0, 355, 0, 0, 0, 356,
	357, 358, 359, 360, 361, 0, 362, 364, 363, 0,
	365, 556, 0, 366, 367, 0, 0, 368, 369, 370,
	0, 0, 371, 372, 373, 374, 0, 375, 376, 378,
	380, 377, 379, 384, 381, 382, 383, 386, 0, 385,
	0, 387, 388, 389, 392, 393, 391, 0, 390, 0,
	0, 0, 394, 0, 557, 395, 558, 397, 398, 0,
	0, 399, 0, 0, 0, 401, 402, 403, 0, 0,
	404, 405, 559, 0, 406, 0, 560, 407, 408, 400,
	409, 410, 411, 412, 413, 414, 415, 416, 0, 417,
	418, 561, 562, 563, 419, 564, 420, 421, 3662, 422,
	0, 423, 424, 425, 426, 427, 428, 429, 565, 431,
	430, 432, 0, 433, 0, 0, 0, 0, 0, 434,
	0, 436, 437, 438, 435, 439, 440, 441, 442, 0,
	443, 444, 445, 0, 446, 447, 448, 449, 566, 450,
	0, 451, 452, 458, 459, 453, 454, 460, 461, 462,
	463, 464, 0, 466, 467, 465, 468, 469, 470, 0,
	471, 455, 456, 472, 473, 0, 474, 475, 476, 477,
	478, 479, 567, 0, 480, 0, 481, 482, 483, 484,
	457, 485, 490, 568, 486, 487, 488, 489, 569, 0,
	492, 493, 0, 491, 0, 494, 495, 496, 497, 498,
	499, 318, 500, 0, 501, 570, 571, 572, 573, 0,
	508, 0, 502, 503, 574, 504, 575, 0, 505, 506,
	507, 0, 509, 510, 0, 0, 511, 512, 513, 515,
	516, 514, 517, 0, 518, 0, 0, 519, 520, 521,
	576, 577, 578, 0, 523, 522, 579, 591, 0, 241,
	0, 524, 525, 580, 526, 527, 528, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 247, 248, 249, 250,
	251, 252, 590, 253, 254, 0, 0, 0, 0, 0,
	529, 0, 0, 0, 0, 255, 256, 258, 257, 259,
	260, 261, 530, 531, 0, 262, 532, 263, 533, 0,
	534, 264, 265, 266, 267, 268, 0, 0, 0, 269,
	535, 536, 537, 0, 270, 271, 538, 0, 0, 0,
	272, 273, 274, 275, 276, 277, 278, 0, 0, 280,
	281, 282, 279, 0, 283, 0, 284, 285, 286, 0,
	287, 0, 288, 289, 0, 0, 0, 0, 0, 0,
	0, 290, 291, 292, 293, 0, 294, 539, 540, 0,
	298, 295, 296, 0, 299, 297, 0, 300, 301, 302,
	0, 0, 303, 304, 305, 0, 306, 307, 0, 308,
	309, 310, 0, 311, 312, 541, 313, 314, 315, 317,
	319, 316, 320, 321, 322, 323, 542, 543, 0, 0,
	0, 0, 0, 0, 0, 324, 325, 326, 544, 0,
	0, 0, 327, 0, 328, 0, 0, 0, 329, 330,
	545, 546, 331, 332, 0, 333, 547, 0, 548, 334,
	0, 335, 336, 337, 338, 339, 549, 550, 551, 396,
	0, 340, 341, 0, 342, 343, 344, 345, 0, 0,
	0, 0, 346, 347, 349, 0, 0, 348, 552, 553,
	0, 554, 0, 350, 351, 0, 555, 0, 352, 353,
	354, 0, 355, 0, 0, 0, 356, 357, 358, 359,
	360, 361, 0, 362, 364, 363, 0, 365, 556, 0,
	366, 367, 0, 0, 368, 369, 370, 0, 0, 371,
	372, 373, 374, 0, 375, 376, 378, 380, 377, 379,
	384, 381, 382, 383, 386, 0, 385, 0, 387, 388,
	389, 392, 393, 391, 0, 390, 0, 0, 0, 394,
	0, 557, 395, 558, 397, 398, 0, 0, 399, 0,
	0, 0, 401, 402, 403, 0, 0, 404, 405, 559,
	0, 406, 0, 560, 407, 408, 400, 409, 410, 411,
	412, 413, 414, 415, 416, 0, 417, 418, 561, 562,
	563, 419, 564, 589, 421, 0, 422, 0, 423, 424,
	425, 426, 427, 428, 429, 565, 431, 430, 432, 0,
	433, 0, 0, 0, 0, 0, 434, 0, 436, 437,
	438, 435, 439, 440, 441, 442, 0, 443, 444, 445,
	0, 446, 447, 448, 449, 566, 450, 0, 451, 452,
	458, 459, 453, 454, 460, 461, 462, 463, 464, 0,
	466, 467, 465, 468, 469, 470, 0, 471, 455, 456,
	472, 473, 0, 474, 475, 476, 477, 478, 479, 567,
	0, 480, 0, 481, 482, 483, 484, 457, 485, 490,
	568, 486, 487, 488, 489, 569, 0, 492, 493, 0,
	491, 0, 494, 495, 496, 497, 498, 499, 318, 500,
	0, 501, 570, 571, 572, 573, 0, 508, 0, 502,
	503, 574, 504, 575, 0, 505, 506, 507, 0, 509,
	510, 0, 0, 511, 512, 513, 515, 516, 514, 517,
	0, 518, 0, 0, 519, 520, 521, 576, 577, 578,
	0, 523, 522, 579, 241, 2664, 0, 0, 524, 525,
	580, 526, 527, 528, 0, 0, 0, 0, 0, 0,
	0, 247, 248, 249, 250, 251, 252, 0, 253, 254,
	0, 0, 0, 0, 0, 529, 0, 0, 0, 0,
	255, 256, 258, 257, 259, 260, 261, 530, 531, 0,
	262, 532, 263, 533, 0, 534, 264, 265, 266, 267,
	268, 0, 0, 0, 269, 535, 536, 537, 0, 270,
	271, 538, 0, 0, 0, 272, 273, 274, 275, 276,
	277, 278, 0, 0, 280, 281, 282, 279, 0, 283,
	0, 284, 285, 286, 0, 287, 0, 288, 289, 0,
	0, 0, 0, 0, 0, 0, 290, 291, 292, 293,
	0, 294, 539, 540, 0, 298, 295, 296, 0, 299,
	297, 0, 300, 301, 302, 0, 0, 303, 304, 305,
	0, 306, 307, 0, 308, 309, 310, 0, 311, 312,
	541, 313, 314, 315, 317, 319, 316, 320, 321, 322,
	323, 542, 543, 0, 0, 0, 0, 0, 0, 0,
	324, 325, 326, 544, 0, 0, 0, 327, 0, 328,
	0, 0, 0, 329, 330, 545, 546, 331, 332, 0,
	333, 547, 0, 548, 334, 0, 335, 336, 337, 338,
	339, 549, 550, 551, 396, 0, 340, 341, 0, 342,
	343, 344, 345, 0, 0, 0, 0, 346, 347, 349,
	0, 0, 348, 552, 553, 0, 554, 0, 350, 351,
	0, 555, 0, 352, 353, 354, 0, 355, 0, 0,
	0, 356, 357, 358, 359, 360, 361, 0, 362, 364,
	363, 0, 365, 556, 0, 366, 367, 0, 0, 368,
	369, 370, 0, 0, 371, 372, 373, 374, 0, 375,
	376, 378, 380, 377, 379, 384, 381, 382, 383, 386,
	0, 385, 0, 387, 388, 389, 392, 393, 391, 0,
	390, 0, 0, 0, 394, 0, 557, 395, 558, 397,
	398, 0, 0, 399, 0, 0, 0, 401, 402, 403,
	0, 0, 404, 405, 559, 0, 406, 0, 560, 407,
	408, 400, 409, 410, 411, 412, 413, 414, 415, 416,
	0, 417, 418, 561, 562, 563, 419, 564, 420, 421,
	0, 422, 0, 423, 424, 425, 426, 427, 428, 429,
	565, 431, 430, 432, 0, 433, 0, 0, 0, 0,
	0, 434, 0, 436, 437, 438, 435, 439, 440, 441,
	442, 0, 443, 444, 445, 0, 446, 447, 448, 449,
	566, 450, 0, 451, 452, 458, 459, 453, 454, 460,
	461, 462, 463, 464, 0, 466, 467, 465, 468, 469,
	470, 0, 471, 455, 456, 472, 473, 0, 474, 475,
	476, 477, 478, 479, 567, 0, 480, 0, 481, 482,
	483, 484, 457, 485, 490, 568, 486, 487, 488, 489,
	569, 0, 492, 493, 0, 491, 0, 494, 495, 496,
	497, 498, 499, 318, 500, 0, 501, 570, 571, 572,
	573, 0, 508, 0, 502, 503, 574, 504, 575, 0,
	505, 506, 507, 0, 509, 510, 0, 0, 511, 512,
	513, 515, 516, 514, 517, 0, 518, 0, 0, 519,
	520, 521, 576, 577, 578, 0, 523, 522, 579, 241,
	3672, 0, 0, 524, 525, 580, 526, 527, 528, 0,
	0, 0, 0, 0, 0, 0, 247, 248, 249, 250,
	251, 252, 0, 253, 254, 0, 0, 0, 0, 0,
	529, 0, 0, 0, 0, 255, 256, 258, 257, 259,
	260, 261, 530, 531, 0, 262, 532, 263, 533, 0,
	534, 264, 265, 266, 267, 268, 0, 0, 0, 269,
	535, 536, 537, 0, 270, 271, 538, 0, 0, 0,
	272, 273, 274, 275, 276, 277, 278, 0, 0, 280,
	281, 282, 279, 0, 283, 0, 284, 285, 286, 0,
	287, 0, 288, 289, 0, 0, 0, 0, 0, 0,
	0, 290, 291, 292, 293, 0, 294, 539, 540, 0,
	298, 295, 296, 0, 299, 297, 0, 300, 301, 302,
	0, 0, 303, 304, 305, 0, 306, 307, 0, 308,
	309, 310, 0, 311, 312, 541, 313, 314, 315, 317,
	319, 316, 320, 321, 322, 323, 542, 543, 0, 0,
	0, 0, 0, 0, 0, 324, 325, 326, 544, 0,
	0, 0, 327, 0, 328, 0, 0, 0, 329, 330,
	545, 546, 331, 332, 0, 333, 547, 0, 548, 334,
	0, 335, 336, 337, 338, 339, 549, 550, 551, 396,
	0, 340, 341, 0, 342, 343, 344, 345, 0, 0,
	0, 0, 346, 347, 349, 0, 0, 348, 552, 553,
	0, 554, 0, 350, 351, 0, 555, 0, 352, 353,
	354, 0, 355, 0, 0, 0, 356, 357, 358, 359,
	360, 361, 0, 362, 364, 363, 0, 365, 556, 0,
	366, 367, 0, 0, 368, 369, 370, 0, 0, 371,
	372, 373, 374, 0, 375, 376, 378, 380, 377, 379,
	384, 381, 382, 383, 386, 0, 385, 0, 387, 388,
	389, 392, 393, 391, 0, 390, 0, 0, 0, 394,
	0, 557, 395, 558, 397, 398, 0, 0, 399, 0,
	0, 0, 401, 402, 403, 0, 0, 404, 405, 559,
	0, 406, 0, 560, 407, 408, 400, 409, 410, 411,
	412, 413, 414, 415, 416, 0, 417, 418, 561, 562,
	563, 419, 564, 420, 421, 0, 422, 0, 423, 424,
	425, 426, 427, 428, 429, 565, 431, 430, 432, 0,
	433, 0, 0, 0, 0, 0, 434, 0, 436, 437,
	438, 435, 439, 440, 441, 442, 0, 443, 444, 445,
	0, 446, 447, 448, 449, 566, 450, 0, 451, 452,
	458, 459, 453, 454, 460, 461, 462, 463, 464, 0,
	466, 467, 465, 468, 469, 470, 0, 471, 455, 456,
	472, 473, 0, 474, 475, 476, 477, 478, 479, 567,
	0, 480, 0, 481, 482, 483, 484, 457, 485, 490,
	568, 486, 487, 488, 489, 569, 0, 492, 493, 0,
	491, 0, 494, 495, 496, 497, 498, 499, 318, 500,
	0, 501, 570, 571, 572, 573, 0, 508, 0, 502,
	503, 574, 504, 575, 0, 505, 506, 507, 0, 509,
	510, 0, 0, 511, 512, 513, 515, 516, 514, 517,
	0, 518, 0, 0, 519, 520, 521, 576, 577, 578,
	241, 523, 522, 579, 0, 0, 0, 0, 524, 525,
	580, 526, 527, 528, 0, 0, 0, 247, 248, 249,
	250, 251, 252, 0, 253, 254, 0, 0, 0, 0,
	0, 529, 0, 0, 0, 0, 255, 256, 258, 257,
	259, 260, 261, 530, 531, 0, 262, 532, 263, 533,
	0, 534, 264, 265, 266, 267, 268, 0, 0, 0,
	269, 535, 536, 537, 0, 270, 271, 538, 0, 0,
	0, 272, 273, 274, 275, 276, 277, 278, 0, 0,
	280, 281, 282, 279, 0, 283, 0, 284, 285, 286,
	0, 287, 0, 288, 289, 0, 0, 0, 0, 0,
	0, 0, 290, 291, 292, 293, 0, 294, 539, 540,
	3383, 298, 295, 296, 0, 299, 297, 0, 300, 301,
	302, 0, 0, 303, 304, 305, 0, 306, 307, 0,
	308, 309, 310, 0, 311, 312, 541, 313, 314, 315,
	317, 319, 316, 320, 321, 322, 323, 542, 543, 0,
	0, 0, 0, 0, 0, 0, 324, 325, 326, 544,
	0, 0, 0, 327, 0, 328, 0, 0, 0, 329,
	330, 545, 546, 331, 332, 0, 333, 547, 0, 548,
	334, 0, 335, 336, 337, 338, 339, 549, 550, 551,
	396, 0, 340, 341, 0, 342, 343, 344, 345, 0,
	0, 0, 0, 346, 347, 349, 0, 0, 348, 552,
	553, 0, 554, 0, 350, 351, 0, 555, 0, 352,
	353, 354, 0, 355, 0, 0, 0, 356, 357, 358,
	359, 360, 361, 0, 362, 364, 363, 0, 365, 556,
	0, 366, 367, 0, 0, 368, 369, 370, 0, 0,
	371, 372, 373, 374, 0, 375, 376, 378, 380, 377,
	379, 384, 381, 382, 383, 386, 0, 385, 0, 387,
	388, 389, 392, 393, 391, 0, 390, 0, 0, 0,
	394, 0, 557, 395, 558, 397, 398, 0, 0, 399,
	0, 0, 0, 401, 402, 403, 0, 0, 404, 405,
	559, 0, 406, 0, 560, 407, 408, 400, 409, 410,
	411, 412, 413, 414, 415, 416, 0, 417, 418, 561,
	562, 563, 419, 564, 420, 421, 0, 422, 0, 423,
	424, 425, 426, 427, 428, 429, 565, 431, 430, 432,
	0, 433, 0, 0, 0, 0, 0, 434, 0, 436,
	437, 438, 435, 439, 440, 441, 442, 0, 443, 444,
	445, 0, 446, 447, 448, 449, 566, 450, 0, 451,
	452, 458, 459, 453, 454, 460, 461, 462, 463, 464,
	0, 466, 467, 465, 468, 469, 470, 0, 471, 455,
	456, 472, 473, 0, 474, 475, 476, 477, 478, 479,
	567, 0, 480, 0, 481, 482, 483, 484, 457, 485,
	490, 568, 486, 487, 488, 489, 569, 0, 492, 493,
	0, 491, 0, 494, 495, 496, 497, 498, 499, 318,
	500, 0, 501, 570, 571, 572, 573, 0, 508, 0,
	502, 503, 574, 504, 575, 0, 505, 506, 507, 0,
	509, 510, 0, 0, 511, 512, 513, 515, 516, 514,
	517, 0, 518, 0, 0, 519, 520, 521, 576, 577,
	578, 241, 523, 522, 579, 0, 0, 0, 0, 524,
	525, 580, 526, 527, 528, 0, 0, 0, 247, 248,
	249, 250, 251, 252, 0, 253, 254, 0, 0, 0,
	0, 0, 529, 0, 2408, 0, 0, 255, 256, 258,
	257, 259, 260, 261, 530, 531, 0, 262, 532, 263,
	533, 0, 534, 264, 265, 266, 267, 268, 0, 0,
	0, 269, 535, 536, 537, 0, 270, 271, 538, 0,
	0, 0, 272, 273, 274, 275, 276, 277, 278, 0,
	0, 280, 281, 282, 279, 0, 283, 0, 284, 285,
	286, 0, 287, 0, 288, 289, 0, 0, 0, 0,
	0, 0, 0, 290, 291, 292, 293, 0, 294, 539,
	540, 0, 298, 295, 296, 0, 299, 297, 0, 300,
	301, 302, 0, 0, 303, 304, 305, 0, 306, 307,
	0, 308, 309, 310, 0, 311, 312, 541, 313, 314,
	315, 317, 319, 316, 320, 321, 322, 323, 542, 543,
	0, 0, 0, 0, 0, 0, 0, 324, 325, 326,
	544, 0, 0, 0, 327, 0, 328, 0, 0, 0,
	329, 330, 545, 546, 331, 332, 0, 333, 547, 0,
	548, 334, 0, 335, 336, 337, 338, 339, 549, 550,
	551, 396, 0, 340, 341, 0, 342, 343, 344, 345,
	0, 0, 0, 0, 346, 347, 349, 0, 0, 348,
	552, 553, 0, 554, 0, 350, 351, 0, 555, 0,
	352, 353, 354, 0, 355, 0, 0, 0, 356, 357,
	358, 359, 360, 361, 0, 362, 364, 363, 0, 365,
	556, 0, 366, 367, 0, 0, 368, 369, 370, 0,
	0, 371, 372, 373, 374, 0, 375, 376, 378, 380,
	377, 379, 384, 381, 382, 383, 386, 0, 385, 0,
	387, 388, 389, 392, 393, 391, 0, 390, 0, 0,
	0, 394, 0, 557, 395, 558, 397, 398, 0, 0,
	399, 0, 0, 0, 401, 402, 403, 0, 0, 404,
	405, 559, 0, 406, 0, 560, 407, 408, 400, 409,
	410, 411, 412, 413, 414, 415, 416, 0, 417, 418,
	561, 562, 563, 419, 564, 420, 421, 0, 422, 0,
	423, 424, 425, 426, 427, 428, 429, 565, 431, 430,
	432, 0, 433, 0, 0, 0, 0, 0, 434, 0,
	436, 437, 438, 435, 439, 440, 441, 442, 0, 443,
	444, 445, 0, 446, 447, 448, 449, 566, 450, 0,
	451, 452, 458, 459, 453, 454, 460, 461, 462, 463,
	464, 0, 466, 467, 465, 468, 469, 470, 0, 471,
	455, 456, 472, 473, 0, 474, 475, 476, 477, 478,
	479, 567, 0, 480, 0, 481, 482, 483, 484, 457,
	485, 490, 568, 486, 487, 488, 489, 569, 0, 492,
	493, 0, 491, 0, 494, 495, 496, 497, 498, 499,
	318, 500, 0, 501, 570, 571, 572, 573, 0, 508,
	0, 502, 503, 574, 504, 575, 0, 505, 506, 507,
	0, 509, 510, 0, 0, 511, 512, 513, 515, 516,
	514, 517, 0, 518, 0, 0, 519, 520, 521, 576,
	577, 578, 0, 523, 522, 579, 241, 2664, 0, 0,
	524, 525, 580, 526, 527, 528, 0, 0, 0, 0,
	0, 0, 0, 247, 248, 249, 250, 251, 252, 0,
	253, 254, 0, 0, 0, 0, 0, 529, 0, 0,
	0, 0, 255, 256, 258, 257, 259, 260, 261, 530,
	531, 0, 262, 532, 263, 533, 0, 534, 264, 265,
	266, 267, 268, 0, 0, 0, 269, 535, 536, 537,
	0, 270, 271, 538, 0, 0, 0, 272, 273, 274,
	275, 276, 277, 278, 0, 0, 280, 281, 282, 279,
	0, 283, 0, 284, 285, 286, 0, 287, 0, 288,
	289, 0, 0, 0, 0, 0, 0, 0, 290, 291,
	292, 293, 0, 294, 539, 540, 0, 298, 295, 296,
	0, 299, 297, 0, 300, 301, 302, 0, 0, 303,
	304, 305, 0, 306, 307, 0, 308, 309, 310, 0,
	311, 312, 541, 313, 314, 315, 317, 319, 316, 320,
	321, 322, 323, 542, 543, 0, 0, 0, 0, 0,
	0, 0, 324, 325, 326, 544, 0, 0, 0, 327,
	0, 328, 0, 0, 0, 329, 330, 545, 546, 331,
	332, 0, 333, 547, 0, 548, 334, 0, 335, 336,
	337, 338, 339, 549, 550, 551, 396, 0, 340, 341,
	0, 342, 343, 344, 345, 0, 0, 0, 0, 346,
	347, 349, 0, 0, 348, 552, 553, 0, 554, 0,
	350, 351, 0, 555, 0, 352, 353, 354, 0, 355,
	0, 0, 0, 356, 357, 358, 359, 360, 361, 0,
	362, 364, 363, 0, 365, 556, 0, 366, 367, 0,
	0, 368, 369, 370, 0, 0, 371, 372, 373, 374,
	0, 375, 376, 378, 380, 377, 379, 384, 381, 382,
	383, 386, 0, 385, 0, 387, 388, 389, 392, 393,
	391, 0, 390, 0, 0, 0, 394, 0, 557, 395,
	558, 397, 398, 0, 0, 399, 0, 0, 0, 401,
	402, 2661, 0, 0, 404, 405, 559, 0, 406, 0,
	560, 407, 408, 400, 409, 410, 411, 412, 413, 414,
	415, 416, 0, 417, 418, 561, 562, 563, 419, 564,
	420, 421, 0, 422, 0, 423, 424, 425, 426, 427,
	428, 429, 565, 431, 430, 432, 0, 433, 0, 0,
	0, 0, 0, 434, 0, 436, 437, 438, 435, 439,
	440, 441, 442, 0, 443, 444, 445, 0, 446, 447,
	448, 449, 566, 450, 0, 451, 452, 458, 459, 453,
	454, 460, 461, 462, 463, 464, 0, 466, 467, 465,
	468, 469, 470, 0, 471, 455, 456, 472, 473, 0,
	474, 475, 476, 477, 478, 479, 567, 0, 480, 0,
	481, 482, 483, 484, 457, 485, 490, 568, 486, 487,
	488, 489, 569, 0, 492, 493, 0, 491, 0, 494,
	495, 496, 497, 498, 499, 318, 500, 0, 501, 570,
	571, 572, 573, 0, 508, 0, 502, 503, 574, 504,
	575, 0, 505, 506, 507, 0, 509, 510, 0, 0,
	511, 512, 513, 515, 516, 514, 517, 0, 518, 0,
	0, 519, 520, 521, 576, 577, 578, 241, 523, 522,
	579, 0, 0, 0, 0, 524, 525, 580, 526, 527,
	528, 0, 0, 0, 247, 248, 249, 250, 251, 252,
	2080, 253, 254, 0, 0, 0, 0, 0, 529, 0,
	0, 0, 0, 255, 256, 258, 257, 259, 260, 261,
	530, 531, 0, 262, 532, 263, 533, 0, 534, 264,
	265, 266, 267, 268, 0, 0, 0, 269, 535, 536,
	537, 0, 270, 271, 538, 0, 0, 0, 272, 273,
	274, 275, 276, 277, 278, 0, 0, 280, 281, 282,
	279, 0, 283, 0, 284, 285, 286, 0, 287, 0,
	288, 289, 0, 0, 0, 0, 0, 0, 0, 290,
	291, 292, 293, 0, 294, 539, 540, 0, 298, 295,
	296, 0, 299, 297, 0, 300, 301, 302, 0, 0,
	303, 304, 305, 0, 306, 307, 0, 308, 309, 310,
	0, 311, 312, 541, 313, 314, 315, 317, 319, 316,
	320, 321, 322, 323, 542, 543, 0, 0, 0, 0,
	0, 0, 0, 324, 325, 326, 544, 0, 0, 0,
	327, 0, 328, 0, 0, 0, 329, 330, 545, 546,
	331, 332, 0, 333, 547, 0, 548, 334, 0, 335,
	336, 337, 338, 339, 549, 550, 551, 396, 0, 340,
	341, 0, 342, 343, 344, 345, 0, 0, 0, 0,
	346, 347, 349, 0, 0, 348, 552, 553, 0, 554,
	0, 350, 351, 0, 555, 0, 352, 353, 354, 0,
	355, 0, 0, 0, 356, 357, 358, 359, 360, 361,
	0, 362, 364, 363, 0, 365, 556, 0, 366, 367,
	0, 0, 368, 369, 370, 0, 0, 371, 372, 373,
	374, 0, 375, 376, 378, 380, 377, 379, 384, 381,
	382, 383, 386, 0, 385, 0, 387, 388, 389, 392,
	393, 391, 0, 390, 0, 0, 0, 394, 0, 557,
	395, 558, 397, 398, 0, 0, 399, 0, 0, 0,
	401, 402, 403, 0, 0, 404, 405, 559, 0, 406,
	0, 560, 407, 408, 400, 409, 410, 411, 412, 413,
	414, 415, 416, 0, 417, 418, 561, 562, 563, 419,
	564, 420, 421, 0, 422, 0, 423, 424, 425, 426,
	427, 428, 429, 565, 431, 430, 432, 0, 433, 0,
	0, 0, 0, 0, 434, 0, 436, 437, 438, 435,
	439, 440, 441, 442, 0, 443, 444, 445, 0, 446,
	447, 448, 449, 566, 450, 0, 451, 452, 458, 459,
	453, 454, 460, 461, 462, 463, 464, 0, 466, 467,
	465, 468, 469, 470, 0, 471, 455, 456, 472, 473,
	0, 474, 475, 476, 477, 478, 479, 567, 0, 480,
	0, 481, 482, 483, 484, 457, 485, 490, 568, 486,
	487, 488, 489, 569, 0, 492, 493, 0, 491, 0,
	494, 495, 496, 497, 498, 499, 318, 500, 0, 501,
	570, 571, 572, 573, 0, 508, 0, 502, 503, 574,
	504, 575, 0, 505, 506, 507, 0, 509, 510, 0,
	0, 511, 512, 513, 515, 516, 514, 517, 0, 518,
	0, 0, 519, 520, 521, 576, 577, 578, 0, 523,
	522, 579, 2070, 0, 241, 0, 524, 525, 580, 526,
	527, 528, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 247, 248, 249, 250, 251, 252, 0, 253, 254,
	0, 0, 0, 0, 0, 529, 0, 0, 0, 0,
	255, 256, 258, 257, 259, 260, 261, 530, 531, 0,
	262, 532, 263, 533, 0, 534, 264, 265, 266, 267,
	268, 0, 0, 0, 269, 535, 536, 537, 0, 270,
	271, 538, 0, 0, 0, 272, 273, 274, 275, 276,
	277, 278, 0, 0, 280, 281, 282, 279, 0, 283,
	0, 284, 285, 286, 0, 287, 0, 288, 289, 0,
	0, 0, 0, 0, 0, 0, 290, 291, 292, 293,
	0, 294, 539, 540, 0, 298, 295, 296, 0, 299,
	297, 0, 300, 301, 302, 0, 0, 303, 304, 305,
	0, 306, 307, 0, 308, 309, 310, 0, 311, 312,
	541, 313, 314, 315, 317, 319, 316, 320, 321, 322,
	323, 542, 543, 0, 0, 0, 0, 0, 0, 0,
	324, 325, 326, 544, 0, 0, 0, 327, 0, 328,
	0, 0, 0, 329, 330, 545, 546, 331, 332, 0,
	333, 547, 0, 548, 334, 0, 335, 336, 337, 338,
	339, 549, 550, 551, 396, 0, 340, 341, 0, 342,
	343, 344, 345, 0, 0, 0, 0, 346, 347, 349,
	0, 0, 348, 552, 553, 0, 554, 0, 350, 351,
	0, 555, 0, 352, 353, 354, 0, 355, 0, 0,
	0, 356, 357, 358, 359, 360, 361, 0, 362, 364,
	363, 0, 365, 556, 0, 366, 367, 0, 0, 368,
	369, 370, 0, 0, 371, 372, 373, 374, 0, 375,
	376, 378, 380, 377, 379, 384, 381, 382, 383, 386,
	0, 385, 0, 387, 388, 389, 392, 393, 391, 0,
	390, 0, 0, 0, 394, 0, 557, 395, 558, 397,
	398, 0, 0, 399, 0, 0, 0, 401, 402, 403,
	0, 0, 404, 405, 559, 0, 406, 0, 560, 407,
	408, 400, 409, 410, 411, 412, 413, 414, 415, 416,
	0, 417, 418, 561, 562, 563, 419, 564, 420, 421,
	0, 422, 0, 423, 424, 425, 426, 427, 428, 429,
	565, 431, 430, 432, 0, 433, 0, 0, 0, 0,
	0, 434, 0, 436, 437, 438, 435, 439, 440, 441,
	442, 0, 443, 444, 445, 0, 446, 447, 448, 449,
	566, 450, 0, 451, 452, 458, 459, 453, 454, 460,
	461, 462, 463, 464, 0, 466, 467, 465, 468, 469,
	470, 0, 471, 455, 456, 472, 473, 0, 474, 475,
	476, 477, 478, 479, 567, 0, 480, 0, 481, 482,
	483, 484, 457, 485, 490, 568, 486, 487, 488, 489,
	569, 0, 492, 493, 0, 491, 0, 494, 495, 496,
	497, 498, 499, 318, 500, 0, 501, 570, 571, 572,
	573, 0, 508, 0, 502, 503, 574, 504, 575, 0,
	505, 506, 507, 0, 509, 510, 0, 0, 511, 512,
	513, 515, 516, 514, 517, 0, 518, 0, 0, 519,
	520, 521, 576, 577, 578, 0, 523, 522, 579, 634,
	0, 241, 0, 524, 525, 580, 526, 527, 528, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 247, 248,
	249, 250, 251, 252, 0, 253, 254, 0, 0, 0,
	0, 0, 529, 0, 0, 0, 0, 255, 256, 1140,
	257, 259, 260, 261, 530, 531, 0, 262, 532, 263,
	533, 0, 534, 264, 265, 266, 267, 268, 0, 0,
	0, 269, 535, 536, 1138, 0, 270, 271, 538, 0,
	0, 0, 272, 273, 274, 275, 276, 277, 278, 0,
	0, 280, 281, 282, 279, 0, 283, 0, 284, 285,
	286, 0, 287, 0, 288, 289, 0, 0, 0, 0,
	0, 0, 0, 290, 291, 292, 293, 0, 294, 539,
	540, 0, 298, 295, 296, 0, 299, 297, 0, 300,
	301, 302, 0, 0, 303, 304, 305, 0, 306, 307,
	0, 308, 309, 310, 0, 311, 312, 541, 313, 314,
	315, 317, 319, 316, 320, 321, 322, 323, 542, 543,
	0, 0, 0, 0, 0, 0, 0, 324, 325, 326,
	544, 0, 0, 0, 327, 0, 328, 0, 0, 0,
	329, 330, 545, 546, 331, 332, 0, 333, 547, 0,
	548, 334, 0, 335, 336, 337, 338, 339, 549, 550,
	551, 396, 0, 340, 341, 0, 342, 343, 344, 345,
	0, 0, 0, 0, 346, 347, 349, 0, 0, 348,
	552, 553, 0, 554, 0, 350, 351, 0, 555, 0,
	352, 353, 354, 0, 355, 0, 0, 0, 356, 357,
	358, 359, 360, 361, 0, 362, 364, 363, 0, 365,
	556, 0, 366, 367, 0, 0, 368, 369, 370, 0,
	0, 371, 372, 373, 374, 0, 375, 376, 378, 380,
	377, 379, 384, 381, 382, 383, 386, 0, 635, 0,
	387, 388, 389, 392, 393, 391, 0, 390, 0, 0,
	0, 394, 0, 557, 395, 558, 397, 398, 0, 0,
	399, 0, 0, 0, 401, 402, 403, 0, 0, 404,
	405, 559, 0, 406, 0, 560, 407, 408, 400, 409,
	410, 411, 412, 413, 414, 415, 416, 0, 417, 418,
	561, 562, 563, 419, 564, 420, 421, 0, 422, 0,
	423, 424, 425, 426, 427, 428, 429, 565, 431, 430,
	432, 0, 433, 0, 0, 0, 0, 0, 434, 0,
	436, 437, 438, 435, 439, 440, 441, 442, 0, 443,
	444, 445, 0, 446, 447, 448, 449, 566, 450, 0,
	451, 452, 458, 459, 453, 454, 631, 461, 462, 463,
	464, 0, 466, 467, 465, 468, 1141, 470, 0, 471,
	455, 456, 472, 473, 0, 474, 475, 476, 477, 478,
	479, 567, 0, 480, 0, 481, 482, 483, 484, 457,
	485, 490, 568, 486, 487, 488, 489, 569, 0, 492,
	493, 0, 491, 0, 494, 495, 496, 497, 498, 499,
	318, 500, 0, 501, 630, 571, 572, 573, 0, 508,
	0, 502, 503, 574, 504, 575, 0, 505, 506, 507,
	0, 509, 510, 0, 0, 511, 512, 513, 515, 516,
	514, 517, 0, 518, 0, 0, 519, 520, 521, 576,
	577, 578, 0, 523, 522, 579, 634, 0, 241, 0,
	524, 525, 580, 526, 527, 528, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 247, 248, 249, 250, 251,
	252, 0, 253, 254, 0, 0, 0, 0, 0, 529,
	0, 0, 0, 0, 255, 256, 258, 257, 259, 260,
	261, 530, 531, 0, 262, 532, 263, 533, 0, 534,
	264, 265, 266, 267, 268, 0, 0, 0, 269, 535,
	536, 537, 0, 270, 624, 538, 0, 0, 0, 272,
	273, 274, 275, 276, 277, 278, 0, 0, 280, 281,
	282, 279, 0, 283, 0, 284, 285, 286, 0, 287,
	0, 288, 289, 0, 0, 0, 0, 0, 0, 0,
	290, 291, 292, 293, 0, 294, 539, 540, 0, 298,
	295, 296, 0, 299, 297, 0, 300, 301, 302, 0,
	0, 303, 304, 305, 0, 306, 307, 0, 308, 309,
	310, 0, 311, 312, 541, 313, 314, 315, 317, 319,
	316, 320, 321, 322, 323, 542, 543, 0, 0, 0,
	0, 0, 0, 0, 324, 325, 326, 544, 0, 0,
	0, 327, 0, 328, 0, 0, 0, 329, 330, 545,
	546, 331, 332, 0, 333, 547, 0, 548, 334, 0,
	335, 336, 337, 338, 339, 549, 550, 551, 396, 0,
	340, 341, 0, 342, 343, 344, 345, 0, 0, 0,
	0, 346, 347, 349, 0, 0, 348, 552, 553, 0,
	554, 0, 350, 351, 0, 555, 0, 352, 353, 354,
	0, 355, 0, 0, 0, 356, 357, 358, 359, 360,
	361, 0, 362, 364, 363, 0, 365, 556, 0, 366,
	367, 0, 0, 368, 369, 370, 0, 0, 371, 372,
	373, 374, 0, 375, 376, 378, 380, 377, 379, 384,
	381, 382, 383, 386, 0, 635, 0, 387, 388, 389,
	392, 393, 391, 0, 390, 0, 0, 0, 394, 0,
	557, 395, 558, 397, 398, 0, 0, 399, 0, 0,
	0, 401, 402, 403, 0, 0, 404, 405, 559, 0,
	406, 0, 560, 407, 408, 400, 409, 410, 411, 412,
	413, 414, 415, 416, 0, 417, 418, 561, 562, 563,
	419, 564, 420, 421, 0, 422, 0, 423, 424, 425,
	426, 427, 428, 429, 565, 431, 430, 432, 0, 433,
	0, 0, 0, 0, 0, 434, 0, 436, 437, 438,
	435, 439, 440, 441, 442, 0, 443, 444, 445, 0,
	446, 447, 448, 449, 566, 450, 0, 451, 452, 458,
	459, 453, 454, 631, 461, 462, 463, 464, 0, 466,
	467, 465, 468, 1449, 470, 0, 471, 455, 456, 472,
	473, 0, 474, 475, 476, 477, 478, 479, 567, 0,
	480, 0, 481, 482, 483, 484, 457, 485, 490, 568,
	486, 487, 488, 489, 569, 0, 492, 493, 0, 491,
	0, 494, 495, 496, 497, 498, 499, 318, 500, 0,
	501, 630, 571, 572, 573, 0, 508, 0, 502, 503,
	574, 504, 575, 0, 505, 506, 507, 0, 509, 510,
	0, 0, 511, 512, 513, 515, 516, 514, 517, 0,
	518, 0, 0, 519, 520, 521, 576, 577, 578, 0,
	523, 522, 579, 1430, 0, 241, 0, 524, 525, 580,
	526, 527, 528, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 247, 248, 249, 250, 251, 252, 0, 253,
	254, 0, 0, 0, 0, 0, 529, 0, 0, 0,
	0, 255, 256, 258, 257, 259, 260, 261, 530, 531,
	0, 262, 532, 263, 533, 0, 534, 264, 265, 266,
	267, 268, 0, 0, 0, 269, 535, 536, 537, 0,
	270, 271, 538, 0, 0, 0, 272, 273, 274, 275,
	276, 277, 278, 0, 0, 280, 281, 282, 279, 0,
	283, 0, 284, 285, 286, 0, 287, 0, 288, 289,
	0, 0, 0, 0, 0, 0, 0, 290, 291, 292,
	293, 0, 294, 539, 540, 0, 298, 295, 296, 0,
	299, 297, 0, 300, 301, 302, 0, 0, 303, 304,
	305, 0, 306, 307, 0, 308, 309, 310, 0, 311,
	312, 541, 313, 314, 315, 317, 319, 316, 320, 321,
	322, 323, 542, 543, 0, 0, 0, 0, 0, 0,
	0, 324, 325, 326, 544, 0, 0, 0, 327, 0,
	328, 0, 0, 0, 329, 330, 545, 546, 331, 332,
	0, 333, 547, 0, 548, 334, 0, 335, 336, 337,
	338, 339, 1429, 550, 551, 396, 0, 340, 341, 0,
	342, 343, 344, 345, 0, 0, 0, 0, 346, 347,
	349, 0, 0, 348, 552, 553, 0, 554, 0, 350,
	351, 0, 555, 0, 352, 353, 354, 0, 355, 0,
	0, 0, 356, 357, 358, 359, 360, 361, 0, 362,
	364, 363, 0, 365, 556, 0, 366, 367, 0, 0,
	368, 369, 370, 0, 0, 371, 372, 373, 374, 0,
	375, 376, 378, 380, 377, 379, 384, 381, 382, 383,
	386, 0, 385, 0, 387, 388, 389, 392, 393, 391,
	0, 390, 0, 0, 0, 394, 0, 557, 395, 558,
	397, 398, 0, 0, 399, 0, 0, 0, 401, 402,
	403, 0, 0, 404, 405, 559, 0, 406, 0, 560,
	407, 408, 400, 409, 410, 411, 412, 413, 414, 415,
	416, 0, 417, 418, 561, 562, 563, 419, 564, 420,
	421, 0, 422, 0, 423, 424, 425, 426, 427, 428,
	429, 565, 431, 430, 432, 0, 433, 0, 0, 0,
	0, 0, 434, 0, 436, 437, 438, 435, 439, 440,
	441, 442, 0, 443, 444, 445, 0, 446, 447, 448,
	449, 566, 450, 0, 451, 452, 458, 459, 453, 454,
	460, 461, 462, 463, 464, 0, 466, 467, 465, 468,
	469, 470, 0, 471, 455, 456, 472, 473, 0, 474,
	475, 476, 477, 478, 479, 567, 0, 480, 0, 481,
	482, 483, 484, 457, 485, 490, 568, 486, 487, 488,
	489, 569, 0, 492, 493, 0, 491, 0, 494, 495,
	496, 497, 498, 499, 318, 500, 0, 501, 570, 571,
	572, 573, 0, 508, 0, 502, 503, 574, 504, 575,
	0, 505, 506, 507, 0, 509, 510, 0, 0, 511,
	512, 513, 515, 516, 514, 517, 0, 518, 0, 0,
	519, 520, 521, 576, 577, 578, 0, 523, 522, 579,
	1423, 0, 241, 0, 524, 525, 580, 526, 527, 528,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 247,
	248, 249, 250, 251, 252, 0, 253, 254, 0, 0,
	0, 0, 0, 529, 0, 0, 0, 0, 255, 256,
	258, 257, 259, 260, 261, 530, 531, 0, 262, 532,
	263, 533, 0, 534, 264, 265, 266, 267, 268, 0,
	0, 0, 269, 535, 536, 537, 0, 270, 271, 538,
	0, 0, 0, 272, 273, 274, 275, 276, 277, 278,
	0, 0, 280, 281, 282, 279, 0, 283, 0, 284,
	285, 286, 0, 287, 0, 288, 289, 0, 0, 0,
	0, 0, 0, 0, 290, 291, 292, 293, 0, 294,
	539, 540, 0, 298, 295, 296, 0, 299, 297, 0,
	300, 301, 302, 0, 0, 303, 304, 305, 0, 306,
	307, 0, 308, 309, 310, 0, 311, 312, 541, 313,
	314, 315, 317, 319, 316, 320, 321, 322, 323, 542,
	543, 0, 0, 0, 0, 0, 0, 0, 324, 325,
	326, 544, 0, 0, 0, 327, 0, 328, 0, 0,
	0, 329, 330, 545, 546, 331, 332, 0, 333, 547,
	0, 548, 334, 0, 335, 336, 337, 338, 339, 1422,
	550, 551, 396, 0, 340, 341, 0, 342, 343, 344,
	345, 0, 0, 0, 0, 346, 347, 349, 0, 0,
	348, 552, 553, 0, 554, 0, 350, 351, 0, 555,
	0, 352, 353, 354, 0, 355, 0, 0, 0, 356,
	357, 358, 359, 360, 361, 0, 362, 364, 363, 0,
	365, 556, 0, 366, 367, 0, 0, 368, 369, 370,
	0, 0, 371, 372, 373, 374, 0, 375, 376, 378,
	380, 377, 379, 384, 381, 382, 383, 386, 0, 385,
	0, 387, 388, 389, 392, 393, 391, 0, 390, 0,
	0, 0, 394, 0, 557, 395, 558, 397, 398, 0,
	0, 399, 0, 0, 0, 401, 402, 403, 0, 0,
	404, 405, 559, 0, 406, 0, 560, 407, 408, 400,
	409, 410, 411, 412, 413, 414, 415, 416, 0, 417,
	418, 561, 562, 563, 419, 564, 420, 421, 0, 422,
	0, 423, 424, 425, 426, 427, 428, 429, 565, 431,
	430, 432, 0, 433, 0, 0, 0, 0, 0, 434,
	0, 436, 437, 438, 435, 439, 440, 441, 442, 0,
	443, 444, 445, 0, 446, 447, 448, 449, 566, 450,
	0, 451, 452, 458, 459, 453, 454, 460, 461, 462,
	463, 464, 0, 466, 467, 465, 468, 469, 470, 0,
	471, 455, 456, 472, 473, 0, 474, 475, 476, 477,
	478, 479, 567, 0, 480, 0, 481, 482, 483, 484,
	457, 485, 490, 568, 486, 487, 488, 489, 569, 0,
	492, 493, 0, 491, 0, 494, 495, 496, 497, 498,
	499, 318, 500, 0, 501, 570, 571, 572, 573, 0,
	508, 0, 502, 503, 574, 504, 575, 0, 505, 506,
	507, 0, 509, 510, 0, 0, 511, 512, 513, 515,
	516, 514, 517, 0, 518, 0, 0, 519, 520, 521,
	576, 577, 578, 0, 523, 522, 579, 1372, 0, 241,
	0, 524, 525, 580, 526, 527, 528, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 247, 248, 249, 250,
	251, 252, 0, 253, 254, 0, 0, 0, 0, 0,
	529, 0, 0, 0, 0, 255, 256, 258, 257, 259,
	260, 261, 530, 531, 0, 262, 532, 263, 533, 0,
	534, 264, 265, 266, 267, 268, 0, 0, 0, 269,
	535, 536, 537, 0, 270, 271, 538, 0, 0, 0,
	272, 273, 274, 275, 276, 277, 278, 0, 0, 280,
	281, 282, 279, 0, 283, 0, 284, 285, 286, 0,
	287, 0, 288, 289, 0, 0, 0, 0, 0, 0,
	0, 290, 291, 292, 293, 0, 294, 539, 540, 0,
	298, 295, 296, 0, 299, 297, 0, 300, 301, 302,
	0, 0, 303, 304, 305, 0, 306, 307, 0, 308,
	309, 310, 0, 311, 312, 541, 313, 314, 315, 317,
	319, 316, 320, 321, 322, 323, 542, 543, 0, 0,
	0, 0, 0, 0, 0, 324, 325, 326, 544, 0,
	0, 0, 327, 0, 328, 0, 0, 0, 329, 330,
	545, 546, 331, 332, 0, 333, 547, 0, 548, 334,
	0, 335, 336, 337, 338, 339, 1371, 550, 551, 396,
	0, 340, 341, 0, 342, 343, 344, 345, 0, 0,
	0, 0, 346, 347, 349, 0, 0, 348, 552, 553,
	0, 554, 0, 350, 351, 0, 555, 0, 352, 353,
	354, 0, 355, 0, 0, 0, 356, 357, 358, 359,
	360, 361, 0, 362, 364, 363, 0, 365, 556, 0,
	366, 367, 0, 0, 368, 369, 370, 0, 0, 371,
	372, 373, 374, 0, 375, 376, 378, 380, 377, 379,
	384, 381, 382, 383, 386, 0, 385, 0, 387, 388,
	389, 392, 393, 391, 0, 390, 0, 0, 0, 394,
	0, 557, 395, 558, 397, 398, 0, 0, 399, 0,
	0, 0, 401, 402, 403, 0, 0, 404, 405, 559,
	0, 406, 0, 560, 407, 408, 400, 409, 410, 411,
	412, 413, 414, 415, 416, 0, 417, 418, 561, 562,
	563, 419, 564, 420, 421, 0, 422, 0, 423, 424,
	425, 426, 427, 428, 429, 565, 431, 430, 432, 0,
	433, 0, 0, 0, 0, 0, 434, 0, 436, 437,
	438, 435, 439, 440, 441, 442, 0, 443, 444, 445,
	0, 446, 447, 448, 449, 566, 450, 0, 451, 452,
	458, 459, 453, 454, 460, 461, 462, 463, 464, 0,
	466, 467, 465, 468, 469, 470, 0, 471, 455, 456,
	472, 473, 0, 474, 475, 476, 477, 478, 479, 567,
	0, 480, 0, 481, 482, 483, 484, 457, 485, 490,
	568, 486, 487, 488, 489, 569, 0, 492, 493, 0,
	491, 0, 494, 495, 496, 497, 498, 499, 318, 500,
	0, 501, 570, 571, 572, 573, 0, 508, 0, 502,
	503, 574, 504, 575, 0, 505, 506, 507, 0, 509,
	510, 0, 0, 511, 512, 513, 515, 516, 514, 517,
	0, 518, 0, 0, 519, 520, 521, 576, 577, 578,
	0, 523, 522, 579, 1357, 0, 241, 0, 524, 525,
	580, 526, 527, 528, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 247, 248, 249, 250, 251, 252, 0,
	253, 254, 0, 0, 0, 0, 0, 529, 0, 0,
	0, 0, 255, 256, 258, 257, 259, 260, 261, 530,
	531, 0, 262, 532, 263, 533, 0, 534, 264, 265,
	266, 267, 268, 0, 0, 0, 269, 535, 536, 537,
	0, 270, 271, 538, 0, 0, 0, 272, 273, 274,
	275, 276, 277, 278, 0, 0, 280, 281, 282, 279,
	0, 283, 0, 284, 285, 286, 0, 287, 0, 288,
	289, 0, 0, 0, 0, 0, 0, 0, 290, 291,
	292, 293, 0, 294, 539, 540, 0, 298, 295, 296,
	0, 299, 297, 0, 300, 301, 302, 0, 0, 303,
	304, 305, 0, 306, 307, 0, 308, 309, 310, 0,
	311, 312, 541, 313, 314, 315, 317, 319, 316, 320,
	321, 322, 323, 542, 543, 0, 0, 0, 0, 0,
	0, 0, 324, 325, 326, 544, 0, 0, 0, 327,
	0, 328, 0, 0, 0, 329, 330, 545, 546, 331,
	332, 0, 333, 547, 0, 548, 334, 0, 335, 336,
	337, 338, 339, 1356, 550, 551, 396, 0, 340, 341,
	0, 342, 343, 344, 345, 0, 0, 0, 0, 346,
	347, 349, 0, 0, 348, 552, 553, 0, 554, 0,
	350, 351, 0, 555, 0, 352, 353, 354, 0, 355,
	0, 0, 0, 356, 357, 358, 359, 360, 361, 0,
	362, 364, 363, 0, 365, 556, 0, 366, 367, 0,
	0, 368, 369, 370, 0, 0, 371, 372, 373, 374,
	0, 375, 376, 378, 380, 377, 379, 384, 381, 382,
	383, 386, 0, 385, 0, 387, 388, 389, 392, 393,
	391, 0, 390, 0, 0, 0, 394, 0, 557, 395,
	558, 397, 398, 0, 0, 399, 0, 0, 0, 401,
	402, 403, 0, 0, 404, 405, 559, 0, 406, 0,
	560, 407, 408, 400, 409, 410, 411, 412, 413, 414,
	415, 416, 0, 417, 418, 561, 562, 563, 419, 564,
	420, 421, 0, 422, 0, 423, 424, 425, 426, 427,
	428, 429, 565, 431, 430, 432, 0, 433, 0, 0,
	0, 0, 0, 434, 0, 436, 437, 438, 435, 439,
	440, 441, 442, 0, 443, 444, 445, 0, 446, 447,
	448, 449, 566, 450, 0, 451, 452, 458, 459, 453,
	454, 460, 461, 462, 463, 464, 0, 466, 467, 465,
	468, 469, 470, 0, 471, 455, 456, 472, 473, 0,
	474, 475, 476, 477, 478, 479, 567, 0, 480, 0,
	481, 482, 483, 484, 457, 485, 490, 568, 486, 487,
	488, 489, 569, 0, 492, 493, 0, 491, 0, 494,
	495, 496, 497, 498, 499, 318, 500, 0, 501, 570,
	571, 572, 573, 0, 508, 0, 502, 503, 574, 504,
	575, 0, 505, 506, 507, 0, 509, 510, 0, 0,
	511, 512, 513, 515, 516, 514, 517, 0, 518, 0,
	0, 519, 520, 521, 576, 577, 578, 0, 523, 522,
	579, 1352, 0, 241, 0, 524, 525, 580, 526, 527,
	528, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	247, 248, 249, 250, 251, 252, 0, 253, 254, 0,
	0, 0, 0, 0, 529, 0, 0, 0, 0, 255,
	256, 258, 257, 259, 260, 261, 530, 531, 0, 262,
	532, 263, 533, 0, 534, 264, 265, 266, 267, 268,
	0, 0, 0, 269, 535, 536, 537, 0, 270, 271,
	538, 0, 0, 0, 272, 273, 274, 275, 276, 277,
	278, 0, 0, 280, 281, 282, 279, 0, 283, 0,
	284, 285, 286, 0, 287, 0, 288, 289, 0, 0,
	0, 0, 0, 0, 0, 290, 291, 292, 293, 0,
	294, 539, 540, 0, 298, 295, 296, 0, 299, 297,
	0, 300, 301, 302, 0, 0, 303, 304, 305, 0,
	306, 307, 0, 308, 309, 310, 0, 311, 312, 541,
	313, 314, 315, 317, 319, 316, 320, 321, 322, 323,
	542, 543, 0, 0, 0, 0, 0, 0, 0, 324,
	325, 326, 544, 0, 0, 0, 327, 0, 328, 0,
	0, 0, 329, 330, 545, 546, 331, 332, 0, 333,
	547, 0, 548, 334, 0, 335, 336, 337, 338, 339,
	549, 550, 551, 396, 0, 340, 341, 0, 342, 343,
	344, 345, 0, 0, 0, 0, 346, 347, 349, 0,
	0, 348, 552, 553, 0, 554, 0, 350, 351, 0,
	555, 0, 352, 353, 354, 0, 355, 0, 0, 0,
	356, 357, 358, 359, 360, 361, 0, 362, 364, 363,
	0, 365, 556, 0, 366, 367, 0, 0, 368, 369,
	370, 0, 0, 371, 372, 373, 374, 0, 375, 376,
	378, 380, 377, 379, 384, 381, 382, 383, 386, 0,
	385, 0, 387, 388, 389, 392, 393, 391, 0, 390,
	0, 0, 0, 394, 0, 557, 395, 558, 397, 398,
	0, 0, 399, 0, 0, 0, 401, 402, 403, 0,
	0, 404, 405, 559, 0, 406, 0, 560, 407, 408,
	400, 409, 410, 411, 412, 413, 414, 415, 416, 0,
	417, 418, 561, 562, 563, 419, 564, 420, 421, 0,
	422, 0, 423, 424, 425, 426, 427, 428, 429, 565,
	431, 430, 432, 0, 433, 0, 0, 0, 0, 0,
	434, 0, 436, 437, 438, 435, 439, 440, 441, 442,
	0, 443, 444, 445, 0, 446, 447, 448, 449, 566,
	450, 0, 451, 452, 458, 459, 453, 454, 460, 461,
	462, 463, 464, 0, 466, 467, 465, 468, 469, 470,
	0, 471, 455, 456, 472, 473, 0, 474, 475, 476,
	477, 478, 479, 567, 0, 480, 0, 481, 482, 483,
	484, 457, 485, 490, 568, 486, 487, 488, 489, 569,
	0, 492, 493, 0, 491, 0, 494, 495, 496, 497,
	498, 499, 318, 500, 0, 501, 570, 571, 572, 573,
	0, 508, 0, 502, 503, 574, 504, 575, 0, 505,
	506, 507, 0, 509, 510, 0, 0, 511, 512, 513,
	515, 516, 514, 517, 0, 518, 0, 0, 519, 520,
	521, 576, 577, 578, 0, 523, 522, 579, 1284, 0,
	241, 0, 524, 525, 580, 526, 527, 528, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 247, 248, 249,
	250, 251, 252, 0, 253, 254, 0, 0, 0, 0,
	0, 529, 0, 0, 0, 0, 255, 256, 258, 257,
	259, 260, 261, 530, 531, 0, 262, 532, 263, 533,
	0, 534, 264, 265, 266, 267, 268, 0, 0, 0,
	269, 535, 536, 537, 0, 270, 271, 538, 0, 0,
	0, 272, 273, 274, 275, 276, 277, 278, 0, 0,
	280, 281, 282, 279, 0, 283, 0, 284, 285, 286,
	0, 287, 0, 288, 289, 0, 0, 0, 0, 0,
	0, 0, 290, 291, 292, 293, 0, 294, 539, 540,
	0, 298, 295, 296, 0, 299, 297, 0, 300, 301,
	302, 0, 0, 303, 304, 305, 0, 306, 307, 0,
	308, 309, 310, 0, 311, 312, 541, 313, 314, 315,
	317, 319, 316, 320, 321, 322, 323, 542, 543, 0,
	0, 0, 0, 0, 0, 0, 324, 325, 326, 544,
	0, 0, 0, 327, 0, 328, 0, 0, 0, 329,
	330, 545, 546, 331, 332, 0, 333, 547, 0, 548,
	334, 0, 335, 336, 337, 338, 339, 549, 550, 551,
	396, 0, 340, 341, 0, 342, 343, 344, 345, 0,
	0, 0, 0, 346, 347, 349, 0, 0, 348, 552,
	553, 0, 554, 0, 350, 351, 0, 555, 0, 352,
	353, 354, 0, 355, 0, 0, 0, 356, 357, 358,
	359, 360, 361, 0, 362, 364, 363, 0, 365, 556,
	0, 366, 367, 0, 0, 368, 369, 370, 0, 0,
	371, 372, 373, 374, 0, 375, 376, 378, 380, 377,
	379, 384, 381, 382, 383, 386, 0, 385, 0, 387,
	388, 389, 392, 393, 391, 0, 390, 0, 0, 0,
	394, 0, 557, 395, 558, 397, 398, 0, 0, 399,
	0, 0, 0, 401, 402, 403, 0, 0, 404, 405,
	559, 0, 406, 0, 560, 407, 408, 400, 409, 410,
	411, 412, 413, 414, 415, 416, 0, 417, 418, 561,
	562, 563, 419, 564, 420, 421, 0, 422, 0, 423,
	424, 425, 426, 427, 428, 429, 565, 431, 430, 432,
	0, 433, 0, 0, 0, 0, 0, 434, 0, 436,
	437, 438, 435, 439, 440, 441, 442, 0, 443, 444,
	445, 0, 446, 447, 448, 449, 566, 450, 0, 451,
	452, 458, 459, 453, 454, 460, 461, 462, 463, 464,
	0, 466, 467, 465, 468, 469, 470, 0, 471, 455,
	456, 472, 473, 0, 474, 475, 476, 477, 478, 479,
	567, 0, 480, 0, 481, 482, 483, 484, 457, 485,
	490, 568, 486, 487, 488, 489, 569, 0, 492, 493,
	0, 491, 0, 494, 495, 496, 497, 498, 499, 318,
	500, 0, 501, 570, 571, 572, 573, 0, 508, 0,
	502, 503, 574, 504, 575, 0, 505, 506, 507, 0,
	509, 510, 0, 0, 511, 512, 513, 515, 516, 514,
	517, 0, 518, 0, 0, 519, 520, 521, 576, 577,
	578, 0, 523, 522, 579, 1268, 0, 241, 0, 524,
	525, 580, 526, 527, 528, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 247, 248, 249, 250, 251, 252,
	0, 253, 254, 0, 0, 0, 0, 0, 529, 0,
	0, 0, 0, 255, 256, 258, 257, 259, 260, 261,
	530, 531, 0, 262, 532, 263, 533, 0, 534, 264,
	265, 266, 267, 268, 0, 0, 0, 269, 535, 536,
	537, 0, 270, 271, 538, 0, 0, 0, 272, 273,
	274, 275, 276, 277, 278, 0, 0, 280, 281, 282,
	279, 0, 283, 0, 284, 285, 286, 0, 287, 0,
	288, 289, 0, 0, 0, 0, 0, 0, 0, 290,
	291, 292, 293, 0, 294, 539, 540, 0, 298, 295,
	296, 0, 299, 297, 0, 300, 301, 302, 0, 0,
	303, 304, 305, 0, 306, 307, 0, 308, 309, 310,
	0, 311, 312, 541, 313, 314, 315, 317, 319, 316,
	320, 321, 322, 323, 542, 543, 0, 0, 0, 0,
	0, 0, 0, 324, 325, 326, 544, 0, 0, 0,
	327, 0, 328, 0, 0, 0, 329, 330, 545, 546,
	331, 332, 0, 333, 547, 0, 548, 334, 0, 335,
	336, 337, 338, 339, 549, 550, 551, 396, 0, 340,
	341, 0, 342, 343, 344, 345, 0, 0, 0, 0,
	346, 347, 349, 0, 0, 348, 552, 553, 0, 554,
	0, 350, 351, 0, 555, 0, 352, 353, 354, 0,
	355, 0, 0, 0, 356, 357, 358, 359, 360, 361,
	0, 362, 364, 363, 0, 365, 556, 0, 366, 367,
	0, 0, 368, 369, 370, 0, 0, 371, 372, 373,
	374, 0, 375, 376, 378, 380, 377, 379, 384, 381,
	382, 383, 386, 0, 385, 0, 387, 388, 389, 392,
	393, 391, 0, 390, 0, 0, 0, 394, 0, 557,
	395, 558, 397, 398, 0, 0, 399, 0, 0, 0,
	401, 402, 403, 0, 0, 404, 405, 559, 0, 406,
	0, 560, 407, 408, 400, 409, 410, 411, 412, 413,
	414, 415, 416, 0, 417, 418, 561, 562, 563, 419,
	564, 420, 421, 0, 422, 0, 423, 424, 425, 426,
	427, 428, 429, 565, 431, 430, 432, 0, 433, 0,
	0, 0, 0, 0, 434, 0, 436, 437, 438, 435,
	439, 440, 441, 442, 0, 443, 444, 445, 0, 446,
	447, 448, 449, 566, 450, 0, 451, 452, 458, 459,
	453, 454, 460, 461, 462, 463, 464, 0, 466, 467,
	465, 468, 469, 470, 0, 471, 455, 456, 472, 473,
	0, 474, 475, 476, 477, 478, 479, 567, 0, 480,
	0, 481, 482, 483, 484, 457, 485, 490, 568, 486,
	487, 488, 489, 569, 0, 492, 493, 0, 491, 0,
	494, 495, 496, 497, 498, 499, 318, 500, 0, 501,
	570, 571, 572, 573, 0, 508, 0, 502, 503, 574,
	504, 575, 0, 505, 506, 507, 0, 509, 510, 0,
	0, 511, 512, 513, 515, 516, 514, 517, 0, 518,
	0, 0, 519, 520, 521, 576, 577, 578, 0, 523,
	522, 579, 634, 0, 241, 0, 524, 525, 580, 526,
	527, 528, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 247, 248, 249, 250, 251, 252, 0, 253, 254,
	0, 0, 0, 0, 0, 529, 0, 0, 0, 0,
	255, 256, 1140, 257, 259, 260, 261, 530, 531, 0,
	262, 532, 263, 533, 0, 534, 264, 265, 266, 267,
	268, 0, 0, 0, 269, 535, 536, 1138, 0, 270,
	271, 538, 0, 0, 0, 272, 273, 274, 275, 276,
	277, 278, 0, 0, 280, 281, 282, 279, 0, 283,
	0, 284, 285, 286, 0, 287, 0, 288, 289, 0,
	0, 0, 0, 0, 0, 0, 290, 291, 292, 293,
	0, 294, 539, 540, 0, 298, 295, 296, 0, 299,
	297, 0, 300, 301, 302, 0, 0, 303, 304, 305,
	0, 306, 307, 0, 308, 309, 310, 0, 311, 312,
	541, 313, 314, 315, 317, 319, 316, 320, 321, 322,
	323, 542, 543, 0, 0, 0, 0, 0, 0, 0,
	324, 325, 326, 544, 0, 0, 0, 327, 0, 328,
	0, 0, 0, 329, 330, 545, 546, 331, 332, 0,
	333, 547, 0, 548, 334, 0, 335, 336, 337, 338,
	339, 549, 550, 551, 396, 0, 340, 341, 0, 342,
	343, 344, 345, 0, 0, 0, 0, 346, 347, 349,
	0, 0, 348, 552, 553, 0, 554, 0, 350, 351,
	0, 555, 0, 352, 353, 354, 0, 355, 0, 0,
	0, 356, 357, 358, 359, 360, 361, 0, 362, 364,
	363, 0, 365, 556, 0, 366, 367, 0, 0, 368,
	369, 370, 0, 0, 371, 372, 373, 374, 0, 375,
	376, 378, 380, 377, 379, 384, 381, 382, 383, 386,
	0, 635, 0, 387, 388, 389, 392, 393, 391, 0,
	390, 0, 0, 0, 394, 0, 557, 395, 558, 397,
	398, 0, 0, 399, 0, 0, 0, 401, 402, 403,
	0, 0, 404, 405, 559, 0, 406, 0, 560, 407,
	408, 400, 409, 410, 411, 412, 413, 414, 415, 416,
	0, 417, 418, 561, 562, 563, 419, 564, 420, 421,
	0, 422, 0, 423, 424, 425, 426, 427, 428, 429,
	565, 431, 430, 432, 0, 433, 0, 0, 0, 0,
	0, 434, 0, 436, 437, 438, 435, 439, 440, 441,
	442, 0, 443, 444, 445, 0, 446, 447, 448, 449,
	566, 450, 0, 451, 452, 458, 459, 453, 454, 631,
	461, 462, 463, 464, 0, 466, 467, 465, 468, 1141,
	470, 0, 471, 455, 456, 472, 473, 0, 474, 475,
	476, 477, 478, 479, 567, 0, 480, 0, 481, 482,
	483, 484, 457, 485, 490, 568, 486, 487, 488, 489,
	569, 0, 492, 493, 0, 491, 0, 494, 495, 496,
	497, 498, 499, 318, 500, 0, 501, 630, 571, 572,
	573, 0, 508, 0, 502, 1139, 574, 504, 575, 0,
	505, 506, 507, 0, 509, 510, 0, 0, 511, 512,
	513, 515, 516, 514, 517, 0, 518, 0, 0, 519,
	520, 521, 576, 577, 578, 241, 523, 522, 579, 0,
	0, 0, 0, 524, 525, 580, 526, 527, 528, 0,
	0, 0, 247, 248, 249, 250, 251, 252, 1121, 253,
	254, 0, 0, 0, 0, 0, 529, 0, 0, 0,
	0, 255, 256, 258, 257, 259, 260, 261, 530, 531,
	0, 262, 532, 263, 533, 0, 534, 264, 265, 266,
	267, 268, 0, 0, 0, 269, 535, 536, 537, 0,
	270, 271, 538, 0, 0, 0, 272, 273, 274, 275,
	276, 277, 278, 0, 0, 280, 281, 282, 279, 0,
	283, 0, 284, 285, 286, 0, 287, 0, 288, 289,
	0, 0, 0, 0, 0, 0, 0, 290, 291, 292,
	293, 0, 294, 539, 540, 0, 298, 295, 296, 0,
	299, 297, 0, 300, 301, 302, 0, 0, 303, 304,
	305, 0, 306, 307, 0, 308, 309, 310, 0, 311,
	312, 541, 313, 314, 315, 317, 319, 316, 320, 321,
	322, 323, 542, 543, 0, 0, 0, 0, 0, 0,
	0, 324, 325, 326, 544, 0, 0, 0, 327, 0,
	328, 0, 0, 0, 329, 330, 545, 546, 331, 332,
	0, 333, 547, 0, 548, 334, 0, 335, 336, 337,
	338, 339, 549, 550, 551, 396, 0, 340, 341, 0,
	342, 343, 344, 345, 0, 0, 0, 0, 346, 347,
	349, 0, 0, 348, 552, 553, 0, 554, 0, 350,
	351, 0, 555, 0, 352, 353, 354, 0, 355, 0,
	0, 0, 356, 357, 358, 359, 360, 361, 0, 362,
	364, 363, 0, 365, 556, 0, 366, 367, 0, 0,
	368, 369, 370, 0, 0, 371, 372, 373, 374, 0,
	375, 376, 378, 380, 377, 379, 384, 381, 382, 383,
	386, 0, 385, 0, 387, 388, 389, 392, 393, 391,
	0, 390, 0, 0, 0, 394, 0, 557, 395, 558,
	397, 398, 0, 0, 399, 0, 0, 0, 401, 402,
	403, 0, 0, 404, 405, 559, 0, 406, 0, 560,
	407, 408, 400, 409, 410, 411, 412, 413, 414, 415,
	416, 0, 417, 418, 561, 562, 563, 419, 564, 420,
	421, 0, 422, 0, 423, 424, 425, 426, 427, 428,
	429, 565, 431, 430, 432, 0, 433, 0, 0, 0,
	0, 0, 434, 0, 436, 437, 438, 435, 439, 440,
	441, 442, 0, 443, 444, 445, 0, 446, 447, 448,
	449, 566, 450, 0, 451, 452, 458, 459, 453, 454,
	460, 461, 462, 463, 464, 0, 466, 467, 465, 468,
	469, 470, 0, 471, 455, 456, 472, 473, 0, 474,
	475, 476, 477, 478, 479, 567, 0, 480, 0, 481,
	482, 483, 484, 457, 485, 490, 568, 486, 487, 488,
	489, 569, 0, 492, 493, 0, 491, 0, 494, 495,
	496, 497, 498, 499, 318, 500, 0, 501, 570, 571,
	572, 573, 0, 508, 0, 502, 503, 574, 504, 575,
	0, 505, 506, 507, 0, 509, 510, 0, 0, 511,
	512, 513, 515, 516, 514, 517, 0, 518, 0, 0,
	519, 520, 521, 576, 577, 578, 241, 523, 522, 579,
	0, 0, 0, 0, 524, 525, 580, 526, 527, 528,
	0, 0, 0, 247, 248, 249, 250, 251, 252, 640,
	253, 254, 0, 0, 0, 0, 0, 529, 0, 0,
	0, 0, 255, 256, 258, 257, 259, 260, 261, 530,
	531, 0, 262, 532, 263, 533, 0, 534, 264, 265,
	266, 267, 268, 0, 0, 0, 269, 535, 536, 537,
	0, 270, 271, 538, 0, 0, 0, 272, 273, 274,
	275, 276, 277, 278, 0, 0, 280, 281, 282, 279,
	0, 283, 0, 284, 285, 286, 0, 287, 0, 288,
	289, 0, 0, 0, 0, 0, 0, 0, 290, 291,
	292, 293, 0, 294, 539, 540, 0, 298, 295, 296,
	0, 299, 297, 0, 300, 301, 302, 0, 0, 303,
	304, 305, 0, 306, 307, 0, 308, 309, 310, 0,
	311, 312, 541, 313, 314, 315, 317, 319, 316, 320,
	321, 322, 323, 542, 543, 0, 0, 0, 0, 0,
	0, 0, 324, 325, 326, 544, 0, 0, 0, 327,
	0, 328, 0, 0, 0, 329, 330, 545, 546, 331,
	332, 0, 333, 547, 0, 548, 334, 0, 335, 336,
	337, 338, 339, 549, 550, 551, 396, 0, 340, 341,
	0, 342, 343, 344, 345, 0, 0, 0, 0, 346,
	347, 349, 0, 0, 348, 552, 553, 0, 554, 0,
	350, 351, 0, 555, 0, 352, 353, 354, 0, 355,
	0, 0, 0, 356, 357, 358, 359, 360, 361, 0,
	362, 364, 363, 0, 365, 556, 0, 366, 367, 0,
	0, 368, 369, 370, 0, 0, 371, 372, 373, 374,
	0, 375, 376, 378, 380, 377, 379, 384, 381, 382,
	383, 386, 0, 385, 0, 387, 388, 389, 392, 393,
	391, 0, 390, 0, 0, 0, 394, 0, 557, 395,
	558, 397, 398, 0, 0, 399, 0, 0, 0, 401,
	402, 403, 0, 0, 404, 405, 559, 0, 406, 0,
	560, 407, 408, 400, 409, 410, 411, 412, 413, 414,
	415, 416, 0, 417, 418, 561, 562, 563, 419, 564,
	420, 421, 0, 422, 0, 423, 424, 425, 426, 427,
	428, 429, 565, 431, 430, 432, 0, 433, 0, 0,
	0, 0, 0, 434, 0, 436, 437, 438, 435, 439,
	440, 441, 442, 0, 443, 444, 445, 0, 446, 447,
	448, 449, 566, 450, 0, 451, 452, 458, 459, 453,
	454, 460, 461, 462, 463, 464, 0, 466, 467, 465,
	468, 469, 470, 0, 471, 455, 456, 472, 473, 0,
	474, 475, 476, 477, 478, 479, 567, 0, 480, 0,
	481, 482, 483, 484, 457, 485, 490, 568, 486, 487,
	488, 489, 569, 0, 492, 493, 0, 491, 0, 494,
	495, 496, 497, 498, 499, 318, 500, 0, 501, 570,
	571, 572, 573, 0, 508, 0, 502, 503, 574, 504,
	575, 0, 505, 506, 507, 0, 509, 510, 0, 0,
	511, 512, 513, 515, 516, 514, 517, 0, 518, 0,
	0, 519, 520, 521, 576, 577, 578, 0, 523, 522,
	579, 634, 0, 241, 0, 524, 525, 580, 526, 527,
	528, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	247, 248, 249, 250, 251, 252, 0, 253, 254, 0,
	0, 0, 0, 0, 529, 0, 0, 0, 0, 255,
	256, 258, 257, 259, 260, 261, 530, 531, 0, 262,
	532, 263, 533, 0, 534, 264, 265, 266, 267, 268,
	0, 0, 0, 269, 535, 536, 537, 0, 270, 624,
	538, 0, 0, 0, 272, 273, 274, 275, 276, 277,
	278, 0, 0, 280, 281, 282, 279, 0, 622, 0,
	284, 285, 286, 0, 287, 0, 288, 289, 0, 0,
	0, 0, 0, 0, 0, 290, 291, 292, 293, 0,
	294, 539, 540, 0, 298, 295, 296, 0, 299, 297,
	0, 300, 301, 302, 0, 0, 303, 304, 305, 0,
	306, 307, 0, 308, 309, 310, 0, 311, 312, 541,
	313, 314, 315, 317, 319, 316, 320, 321, 322, 323,
	542, 543, 0, 0, 0, 0, 0, 0, 0, 324,
	325, 326, 544, 0, 0, 0, 327, 0, 328, 0,
	0, 0, 329, 330, 545, 546, 331, 332, 0, 333,
	547, 0, 548, 334, 0, 335, 336, 337, 338, 339,
	549, 550, 551, 396, 0, 340, 341, 0, 342, 343,
	344, 345, 0, 0, 0, 0, 346, 347, 349, 0,
	0, 348, 552, 553, 0, 554, 0, 350, 351, 0,
	555, 0, 352, 353, 354, 0, 355, 0, 0, 0,
	356, 357, 358, 359, 360, 361, 0, 362, 364, 363,
	0, 365, 556, 0, 366, 367, 0, 0, 368, 369,
	623, 0, 0, 371, 372, 373, 374, 0, 375, 376,
	378, 380, 377, 379, 384, 381, 382, 383, 386, 0,
	635, 0, 387, 388, 389, 392, 393, 391, 0, 390,
	0, 0, 0, 394, 0, 557, 395, 558, 397, 398,
	0, 0, 399, 0, 0, 0, 401, 402, 403, 0,
	0, 404, 405, 559, 0, 406, 0, 560, 407, 408,
	400, 409, 410, 411, 412, 413, 414, 415, 416, 0,
	417, 418, 561, 562, 563, 419, 564, 420, 421, 0,
	422, 0, 423, 424, 425, 426, 427, 428, 429, 565,
	431, 430, 432, 0, 433, 0, 0, 0, 0, 0,
	434, 0, 436, 437, 438, 435, 439, 440, 441, 442,
	0, 443, 444, 445, 0, 446, 447, 448, 449, 625,
	450, 0, 451, 452, 458, 459, 453, 454, 631, 461,
	462, 463, 464, 0, 466, 467, 465, 468, 626, 470,
	0, 471, 455, 456, 472, 473, 0, 474, 475, 476,
	477, 478, 479, 567, 0, 480, 0, 481, 482, 483,
	484, 457, 485, 490, 568, 486, 487, 488, 489, 569,
	0, 492, 493, 0, 491, 0, 494, 495, 496, 497,
	498, 499, 318, 500, 0, 501, 630, 571, 572, 573,
	0, 508, 0, 502, 628, 574, 504, 575, 0, 505,
	506, 507, 0, 509, 510, 0, 0, 511, 512, 513,
	515, 516, 514, 517, 0, 518, 0, 0, 519, 520,
	521, 576, 577, 578, 0, 523, 522, 579, 616, 0,
	241, 0, 524, 525, 580, 526, 527, 528, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 247, 248, 249,
	250, 251, 252, 0, 253, 254, 0, 0, 0, 0,
	0, 529, 0, 0, 0, 0, 255, 256, 258, 257,
	259, 260, 261, 530, 531, 0, 262, 532, 263, 533,
	0, 534, 264, 265, 266, 267, 268, 0, 0, 0,
	269, 535, 536, 537, 0, 270, 271, 538, 0, 0,
	0, 272, 273, 274, 275, 276, 277, 278, 0, 0,
	280, 281, 282, 279, 0, 283, 0, 284, 285, 286,
	0, 287, 0, 288, 289, 0, 0, 0, 0, 0,
	0, 0, 290, 291, 292, 293, 0, 294, 539, 540,
	0, 298, 295, 296, 0, 299, 297, 0, 300, 301,
	302, 0, 0, 303, 304, 305, 0, 306, 307, 0,
	308, 309, 310, 0, 311, 312, 541, 313, 314, 315,
	317, 319, 316, 320, 321, 322, 323, 542, 543, 0,
	0, 0, 0, 0, 0, 0, 324, 325, 326, 544,
	0, 0, 0, 327, 0, 328, 0, 0, 0, 329,
	330, 545, 546, 331, 332, 0, 333, 547, 0, 548,
	334, 0, 335, 336, 337, 338, 339, 549, 550, 551,
	396, 0, 340, 341, 0, 342, 343, 344, 345, 0,
	0, 0, 0, 346, 347, 349, 0, 0, 348, 552,
	553, 0, 554, 0, 350, 351, 0, 555, 0, 352,
	353, 354, 0, 355, 0, 0, 0, 356, 357, 358,
	359, 360, 361, 0, 362, 364, 363, 0, 365, 556,
	0, 366, 367, 0, 0, 368, 369, 370, 0, 0,
	371, 372, 373, 374, 0, 375, 376, 378, 380, 377,
	379, 384, 381, 382, 383, 386, 0, 385, 0, 387,
	388, 389, 392, 393, 391, 0, 390, 0, 0, 0,
	394, 0, 557, 395, 558, 397, 398, 0, 0, 399,
	0, 0, 0, 401, 402, 403, 0, 0, 404, 405,
	559, 0, 406, 0, 560, 407, 408, 400, 409, 410,
	411, 412, 413, 414, 415, 416, 0, 417, 418, 561,
	562, 563, 419, 564, 420, 421, 0, 422, 0, 423,
	424, 425, 426, 427, 428, 429, 565, 431, 430, 432,
	0, 433, 0, 0, 0, 0, 0, 434, 0, 436,
	437, 438, 435, 439, 440, 441, 442, 0, 443, 444,
	445, 0, 446, 447, 448, 449, 566, 450, 0, 451,
	452, 617, 459, 453, 454, 460, 461, 462, 463, 464,
	0, 466, 467, 465, 468, 469, 470, 0, 471, 455,
	456, 472, 473, 0, 474, 475, 476, 477, 478, 479,
	567, 0, 480, 0, 481, 482, 483, 484, 457, 485,
	490, 568, 486, 487, 488, 489, 569, 0, 492, 493,
	0, 491, 0, 494, 495, 496, 497, 498, 499, 318,
	500, 0, 501, 570, 571, 572, 573, 0, 508, 0,
	502, 503, 574, 504, 575, 0, 505, 506, 507, 0,
	509, 510, 0, 0, 511, 512, 513, 515, 516, 514,
	517, 0, 518, 0, 0, 519, 520, 521, 576, 577,
	578, 0, 523, 522, 579, 614, 0, 241, 0, 524,
	525, 580, 526, 527, 528, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 247, 248, 249, 250, 251, 252,
	0, 253, 254, 0, 0, 0, 0, 0, 529, 0,
	0, 0, 0, 255, 256, 258, 257, 259, 260, 261,
	530, 531, 0, 262, 532, 263, 533, 0, 534, 264,
	265, 266, 267, 268, 0, 0, 0, 269, 535, 536,
	537, 0, 270, 271, 538, 0, 0, 0, 272, 273,
	274, 275, 276, 277, 278, 0, 0, 280, 281, 282,
	279, 0, 283, 0, 284, 285, 286, 0, 287, 0,
	288, 289, 0, 0, 0, 0, 0, 0, 0, 290,
	291, 292, 293, 0, 294, 539, 540, 0, 298, 295,
	296, 0, 299, 297, 0, 300, 301, 302, 0, 0,
	303, 304, 305, 0, 306, 307, 0, 308, 309, 310,
	0, 311, 312, 541, 313, 314, 315, 317, 319, 316,
	320, 321, 322, 323, 542, 543, 0, 0, 0, 0,
	0, 0, 0, 324, 325, 326, 544, 0, 0, 0,
	327, 0, 328, 0, 0, 0, 329, 330, 545, 546,
	331, 332, 0, 333, 547, 0, 548, 334, 0, 335,
	336, 337, 338, 339, 549, 550, 551, 396, 0, 340,
	341, 0, 342, 343, 344, 345, 0, 0, 0, 0,
	346, 347, 349, 0, 0, 348, 552, 553, 0, 554,
	0, 350, 351, 0, 555, 0, 352, 353, 354, 0,
	355, 0, 0, 0, 356, 357, 358, 359, 360, 361,
	0, 362, 364, 363, 0, 365, 556, 0, 366, 367,
	0, 0, 368, 369, 370, 0, 0, 371, 372, 373,
	374, 0, 375, 376, 378, 380, 377, 379, 384, 381,
	382, 383, 386, 0, 385, 0, 387, 388, 389, 392,
	393, 391, 0, 390, 0, 0, 0, 394, 0, 557,
	395, 558, 397, 398, 0, 0, 399, 0, 0, 0,
	401, 402, 403, 0, 0, 404, 405, 559, 0, 406,
	0, 560, 407, 408, 400, 409, 410, 411, 412, 413,
	414, 415, 416, 0, 417, 418, 561, 562, 563, 419,
	564, 420, 421, 0, 422, 0, 423, 424, 425, 426,
	427, 428, 429, 565, 431, 430, 432, 0, 433, 0,
	0, 0, 0, 0, 434, 0, 436, 437, 438, 435,
	439, 440, 441, 442, 0, 443, 444, 445, 0, 446,
	447, 448, 449, 566, 450, 0, 451, 452, 458, 459,
	453, 454, 460, 461, 462, 463, 464, 0, 466, 467,
	465, 468, 469, 470, 0, 471, 455, 456, 472, 473,
	0, 474, 475, 476, 477, 478, 479, 567, 0, 480,
	0, 481, 482, 483, 484, 457, 485, 490, 568, 486,
	487, 488, 489, 569, 0, 492, 493, 0, 491, 0,
	494, 495, 496, 497, 498, 499, 318, 500, 0, 501,
	570, 571, 572, 573, 0, 508, 0, 502, 503, 574,
	504, 575, 0, 505, 506, 507, 0, 509, 510, 0,
	0, 511, 512, 513, 515, 516, 514, 517, 0, 518,
	0, 0, 519, 520, 521, 576, 577, 578, 0, 523,
	522, 579, 608, 0, 241, 0, 524, 525, 580, 526,
	527, 528, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 247, 248, 249, 250, 251, 252, 0, 253, 254,
	0, 0, 0, 0, 0, 529, 0, 0, 0, 0,
	255, 256, 258, 257, 259, 260, 261, 530, 531, 0,
	262, 532, 263, 533, 0, 534, 264, 265, 266, 267,
	268, 0, 0, 0, 269, 535, 536, 537, 0, 270,
	271, 538, 0, 0, 0, 272, 273, 274, 275, 276,
	277, 278, 0, 0, 280, 281, 282, 279, 0, 283,
	0, 284, 285, 286, 0, 287, 0, 288, 289, 0,
	0, 0, 0, 0, 0, 0, 290, 291, 292, 293,
	0, 294, 539, 540, 0, 298, 295, 296, 0, 299,
	297, 0, 300, 301, 302, 0, 0, 303, 304, 305,
	0, 306, 307, 0, 308, 309, 310, 0, 311, 312,
	541, 313, 314, 315, 317, 319, 316, 320, 321, 322,
	323, 542, 543, 0, 0, 0, 0, 0, 0, 0,
	324, 325, 326, 544, 0, 0, 0, 327, 0, 328,
	0, 0, 0, 329, 330, 545, 546, 331, 332, 0,
	333, 547, 0, 548, 334, 0, 335, 336, 337, 338,
	339, 549, 550, 551, 396, 0, 340, 341, 0, 342,
	343, 344, 345, 0, 0, 0, 0, 346, 347, 349,
	0, 0, 348, 552, 553, 0, 554, 0, 350, 351,
	0, 555, 0, 352, 353, 354, 0, 355, 0, 0,
	0, 356, 357, 358, 359, 360, 361, 0, 362, 364,
	363, 0, 365, 556, 0, 366, 367, 0, 0, 368,
	369, 370, 0, 0, 371, 372, 373, 374, 0, 375,
	376, 378, 380, 377, 379, 384, 381, 382, 383, 386,
	0, 385, 0, 387, 388, 389, 392, 393, 391, 0,
	390, 0, 0, 0, 394, 0, 557, 395, 558, 397,
	398, 0, 0, 399, 0, 0, 0, 401, 402, 403,
	0, 0, 404, 405, 559, 0, 406, 0, 560, 407,
	408, 400, 409, 410, 411, 412, 413, 414, 415, 416,
	0, 417, 418, 561, 562, 563, 419, 564, 420, 421,
	0, 422, 0, 423, 424, 425, 426, 427, 428, 429,
	565, 431, 430, 432, 0, 433, 0, 0, 0, 0,
	0, 434, 0, 436, 437, 438, 435, 439, 440, 441,
	442, 0, 443, 444, 445, 0, 446, 447, 448, 449,
	566, 450, 0, 451, 452, 458, 459, 453, 454, 460,
	461, 462, 463, 464, 0, 466, 467, 465, 468, 469,
	470, 0, 471, 455, 456, 472, 473, 0, 474, 475,
	476, 477, 478, 479, 567, 0, 480, 0, 481, 482,
	483, 484, 457, 485, 490, 568, 486, 487, 488, 489,
	569, 0, 492, 493, 0, 491, 0, 494, 495, 496,
	497, 498, 499, 318, 500, 0, 501, 570, 571, 572,
	573, 0, 508, 0, 502, 503, 574, 504, 575, 0,
	505, 506, 507, 0, 509, 510, 0, 0, 511, 512,
	513, 515, 516, 514, 517, 0, 518, 0, 0, 519,
	520, 521, 576, 577, 578, 0, 523, 522, 579, 586,
	0, 241, 0, 524, 525, 580, 526, 527, 528, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 247, 248,
	249, 250, 251, 252, 0, 253, 254, 0, 0, 0,
	0, 0, 529, 0, 0, 0, 0, 255, 256, 258,
	257, 259, 260, 261, 530, 531, 0, 262, 532, 263,
	533, 0, 534, 264, 265, 266, 267, 268, 0, 0,
	0, 269, 535, 536, 537, 0, 270, 271, 538, 0,
	0, 0, 272, 273, 274, 275, 276, 277, 278, 0,
	0, 280, 281, 282, 279, 0, 283, 0, 284, 285,
	286, 0, 287, 0, 288, 289, 0, 0, 0, 0,
	0, 0, 0, 290, 291, 292, 293, 0, 294, 539,
	540, 0, 298, 295, 296, 0, 299, 297, 0, 300,
	301, 302, 0, 0, 303, 304, 305, 0, 306, 307,
	0, 308, 309, 310, 0, 311, 312, 541, 313, 314,
	315, 317, 319, 316, 320, 321, 322, 323, 542, 543,
	0, 0, 0, 0, 0, 0, 0, 324, 325, 326,
	544, 0, 0, 0, 327, 0, 328, 0, 0, 0,
	329, 330, 545, 546, 331, 332, 0, 333, 547, 0,
	548, 334, 0, 335, 336, 337, 338, 339, 549, 550,
	551, 396, 0, 340, 341, 0, 342, 343, 344, 345,
	0, 0, 0, 0, 346, 347, 349, 0, 0, 348,
	552, 553, 0, 554, 0, 350, 351, 0, 555, 0,
	352, 353, 354, 0, 355, 0, 0, 0, 356, 357,
	358, 359, 360, 361, 0, 362, 364, 363, 0, 365,
	556, 0, 366, 367, 0, 0, 368, 369, 370, 0,
	0, 371, 372, 373, 374, 0, 375, 376, 378, 380,
	377, 379, 384, 381, 382, 383, 386, 0, 385, 0,
	387, 388, 389, 392, 393, 391, 0, 390, 0, 0,
	0, 394, 0, 557, 395, 558, 397, 398, 0, 0,
	399, 0, 0, 0, 401, 402, 403, 0, 0, 404,
	405, 559, 0, 406, 0, 560, 407, 408, 400, 409,
	410, 411, 412, 413, 414, 415, 416, 0, 417, 418,
	561, 562, 563, 419, 564, 420, 421, 0, 422, 0,
	423, 424, 425, 426, 427, 428, 429, 565, 431, 430,
	432, 0, 433, 0, 0, 0, 0, 0, 434, 0,
	436, 437, 438, 435, 439, 440, 441, 442, 0, 443,
	444, 445, 0, 446, 447, 448, 449, 566, 450, 0,
	451, 452, 458, 459, 453, 454, 460, 461, 462, 463,
	464, 0, 466, 467, 465, 468, 469, 470, 0, 471,
	455, 456, 472, 473, 0, 474, 475, 476, 477, 478,
	479, 567, 0, 480, 0, 481, 482, 483, 484, 457,
	485, 490, 568, 486, 487, 488, 489, 569, 0, 492,
	493, 0, 491, 0, 494, 495, 496, 497, 498, 499,
	318, 500, 0, 501, 570, 571, 572, 573, 0, 508,
	0, 502, 503, 574, 504, 575, 0, 505, 506, 507,
	0, 509, 510, 0, 0, 511, 512, 513, 515, 516,
	514, 517, 0, 518, 0, 0, 519, 520, 521, 576,
	577, 578, 241, 523, 522, 579, 0, 0, 0, 0,
	524, 525, 580, 526, 527, 528, 0, 0, 0, 247,
	248, 249, 250, 251, 252, 0, 253, 254, 0, 0,
	0, 0, 0, 529, 0, 0, 0, 0, 255, 256,
	258, 257, 259, 260, 261, 530, 531, 0, 262, 532,
	263, 533, 0, 534, 264, 265, 266, 267, 268, 0,
	0, 0, 269, 535, 536, 537, 0, 270, 271, 538,
	0, 0, 0, 272, 273, 274, 275, 276, 277, 278,
	0, 0, 280, 281, 282, 279, 0, 283, 0, 284,
	285, 286, 0, 287, 0, 288, 289, 0, 0, 0,
	0, 0, 0, 0, 290, 291, 292, 293, 0, 294,
	539, 540, 0, 298, 295, 296, 0, 299, 297, 0,
	300, 301, 302, 0, 0, 303, 304, 305, 0, 306,
	307, 0, 308, 309, 310, 0, 311, 312, 541, 313,
	314, 315, 317, 319, 316, 320, 321, 322, 323, 542,
	543, 0, 0, 0, 0, 0, 0, 0, 324, 325,
	326, 544, 0, 0, 0, 327, 0, 328, 0, 0,
	0, 329, 330, 545, 546, 331, 332, 0, 333, 547,
	0, 548, 334, 0, 335, 336, 337, 338, 339, 549,
	550, 551, 396, 0, 340, 341, 0, 342, 343, 344,
	345, 0, 0, 0, 0, 346, 347, 349, 0, 0,
	348, 552, 553, 0, 554, 0, 350, 351, 0, 555,
	0, 352, 353, 354, 0, 355, 0, 0, 0, 356,
	357, 358, 359, 360, 361, 0, 362, 364, 363, 0,
	365, 556, 0, 366, 367, 0, 0, 368, 369, 370,
	0, 0, 371, 372, 373, 374, 0, 375, 376, 378,
	380, 377, 379, 384, 381, 382, 383, 386, 0, 385,
	0, 387, 388, 389, 392, 393, 391, 0, 390, 0,
	0, 0, 394, 0, 557, 395, 558, 397, 398, 0,
	0, 399, 0, 0, 0, 401, 402, 403, 0, 0,
	404, 405, 559, 0, 406, 0, 560, 407, 408, 400,
	409, 410, 411, 412, 413, 414, 415, 416, 0, 417,
	418, 561, 562, 563, 419, 564, 420, 421, 0, 422,
	0, 423, 424, 425, 426, 427, 428, 429, 565, 431,
	430, 432, 0, 433, 0, 0, 0, 0, 0, 434,
	0, 436, 437, 438, 435, 439, 440, 441, 442, 0,
	443, 444, 445, 0, 446, 447, 448, 449, 566, 450,
	0, 451, 452, 458, 459, 453, 454, 460, 461, 462,
	463, 464, 0, 466, 467, 465, 468, 469, 470, 0,
	471, 455, 456, 472, 473, 0, 474, 475, 476, 477,
	478, 479, 567, 0, 480, 0, 481, 482, 483, 484,
	457, 485, 490, 568, 486, 487, 488, 489, 569, 0,
	492, 493, 0, 491, 0, 494, 495, 496, 497, 498,
	499, 318, 500, 0, 501, 570, 571, 572, 573, 0,
	508, 0, 502, 503, 574, 504, 575, 0, 505, 506,
	507, 0, 509, 510, 0, 0, 511, 512, 513, 515,
	516, 514, 517, 0, 518, 0, 0, 519, 520, 521,
	576, 577, 578, 241, 523, 522, 579, 0, 0, 0,
	0, 524, 525, 580, 526, 527, 528, 0, 0, 0,
	247, 248, 249, 250, 251, 252, 0, 253, 254, 0,
	0, 0, 0, 0, 529, 0, 0, 0, 0, 255,
	256, 258, 257, 259, 260, 261, 530, 531, 0, 262,
	532, 263, 533, 0, 534, 264, 265, 266, 267, 268,
	0, 0, 0, 269, 535, 536, 537, 0, 270, 271,
	538, 0, 0, 0, 272, 273, 274, 275, 276, 277,
	278, 0, 0, 280, 281, 282, 279, 0, 283, 0,
	284, 285, 286, 0, 287, 0, 288, 289, 0, 0,
	0, 0, 0, 0, 0, 290, 291, 292, 293, 0,
	294, 539, 540, 0, 298, 295, 296, 0, 299, 297,
	0, 300, 301, 302, 0, 0, 303, 304, 305, 0,
	306, 307, 0, 308, 309, 310, 0, 311, 312, 541,
	313, 314, 315, 317, 319, 316, 320, 321, 322, 323,
	542, 543, 0, 0, 0, 0, 0, 0, 0, 324,
	325, 326, 544, 0, 0, 0, 327, 0, 328, 0,
	0, 0, 329, 330, 545, 546, 331, 332, 0, 333,
	547, 0, 548, 334, 0, 335, 336, 337, 338, 339,
	3106, 550, 551, 396, 0, 340, 341, 0, 342, 343,
	344, 345, 0, 0, 0, 0, 346, 347, 349, 0,
	0, 348, 552, 553, 0, 554, 0, 350, 351, 0,
	555, 0, 352, 353, 354, 0, 355, 0, 0, 0,
	356, 357, 358, 359, 360, 361, 0, 362, 364, 363,
	0, 365, 556, 0, 366, 367, 0, 0, 368, 369,
	370, 0, 0, 371, 372, 373, 374, 0, 375, 376,
	378, 380, 377, 379, 384, 381, 382, 383, 386, 0,
	385, 0, 387, 388, 389, 392, 393, 391, 0, 390,
	0, 0, 0, 394, 0, 557, 395, 558, 397, 398,
	0, 0, 399, 0, 0, 0, 401, 402, 403, 0,
	0, 404, 405, 559, 0, 406, 0, 560, 407, 408,
	400, 409, 410, 411, 412, 413, 414, 415, 416, 0,
	417, 418, 561, 562, 563, 419, 564, 420, 421, 0,
	422, 0, 423, 424, 425, 426, 427, 428, 429, 565,
	431, 430, 432, 0, 433, 0, 0, 0, 0, 0,
	434, 0, 436, 437, 438, 435, 439, 440, 441, 442,
	0, 443, 444, 445, 0, 446, 447, 448, 449, 566,
	450, 0, 451, 452, 458, 459, 453, 454, 460, 461,
	462, 463, 464, 0, 466, 467, 465, 468, 469, 470,
	0, 471, 455, 456, 472, 473, 0, 474, 475, 476,
	477, 478, 479, 567, 0, 480, 0, 481, 482, 483,
	484, 457, 485, 490, 568, 486, 487, 488, 489, 569,
	0, 492, 493, 0, 491, 0, 494, 495, 496, 497,
	498, 499, 318, 500, 0, 501, 570, 571, 572, 573,
	0, 508, 0, 502, 503, 574, 504, 575, 0, 505,
	506, 507, 0, 509, 510, 0, 0, 511, 512, 513,
	515, 516, 514, 517, 0, 518, 0, 0, 519, 520,
	521, 576, 577, 578, 241, 523, 522, 579, 0, 0,
	0, 0, 524, 525, 580, 526, 527, 528, 0, 0,
	0, 247, 248, 249, 250, 251, 252, 0, 253, 254,
	0, 0, 0, 0, 0, 529, 0, 0, 0, 0,
	255, 256, 258, 257, 259, 260, 261, 530, 531, 0,
	262, 532, 263, 533, 0, 534, 264, 265, 266, 267,
	268, 0, 0, 0, 269, 535, 536, 537, 0, 270,
	271, 538, 0, 0, 0, 272, 273, 274, 275, 276,
	277, 278, 0, 0, 280, 281, 282, 279, 0, 283,
	0, 284, 285, 286, 0, 287, 0, 288, 289, 0,
	0, 0, 0, 0, 0, 0, 290, 291, 292, 293,
	0, 294, 539, 540, 0, 298, 295, 296, 0, 299,
	297, 0, 300, 301, 302, 0, 0, 303, 304, 305,
	0, 306, 307, 0, 308, 309, 310, 0, 311, 312,
	541, 313, 314, 315, 317, 319, 316, 320, 321, 322,
	323, 542, 543, 0, 0, 0, 0, 0, 0, 0,
	324, 325, 326, 544, 0, 0, 0, 327, 0, 328,
	0, 0, 0, 329, 330, 545, 546, 331, 332, 0,
	333, 547, 0, 548, 334, 0, 335, 336, 337, 338,
	339, 3056, 550, 551, 396, 0, 340, 341, 0, 342,
	343, 344, 345, 0, 0, 0, 0, 346, 347, 349,
	0, 0, 348, 552, 553, 0, 554, 0, 350, 351,
	0, 555, 0, 352, 353, 354, 0, 355, 0, 0,
	0, 356, 357, 358, 359, 360, 361, 0, 362, 364,
	363, 0, 365, 556, 0, 366, 367, 0, 0, 368,
	369, 370, 0, 0, 371, 372, 373, 374, 0, 375,
	376, 378, 380, 377, 379, 384, 381, 382, 383, 386,
	0, 385, 0, 387, 388, 389, 392, 393, 391, 0,
	390, 0, 0, 0, 394, 0, 557, 395, 558, 397,
	398, 0, 0, 399, 0, 0, 0, 401, 402, 403,
	0, 0, 404, 405, 559, 0, 406, 0, 560, 407,
	408, 400, 409, 410, 411, 412, 413, 414, 415, 416,
	0, 417, 418, 561, 562, 563, 419, 564, 420, 421,
	0, 422, 0, 423, 424, 425, 426, 427, 428, 429,
	565, 431, 430, 432, 0, 433, 0, 0, 0, 0,
	0, 434, 0, 436, 437, 438, 435, 439, 440, 441,
	442, 0, 443, 444, 445, 0, 446, 447, 448, 449,
	566, 450, 0, 451, 452, 458, 459, 453, 454, 460,
	461, 462, 463, 464, 0, 466, 467, 465, 468, 469,
	470, 0, 471, 455, 456, 472, 473, 0, 474, 475,
	476, 477, 478, 479, 567, 0, 480, 0, 481, 482,
	483, 484, 457, 485, 490, 568, 486, 487, 488, 489,
	569, 0, 492, 493, 0, 491, 0, 494, 495, 496,
	497, 498, 499, 318, 500, 0, 501, 570, 571, 572,
	573, 0, 508, 0, 502, 503, 574, 504, 575, 0,
	505, 506, 507, 0, 509, 510, 0, 0, 511, 512,
	513, 515, 516, 514, 517, 0, 518, 0, 0, 519,
	520, 521, 576, 577, 578, 241, 523, 522, 579, 0,
	0, 0, 0, 524, 525, 580, 526, 527, 528, 0,
	0, 0, 247, 248, 249, 250, 251, 252, 0, 253,
	254, 0, 0, 0, 0, 0, 529, 0, 0, 0,
	0, 255, 256, 258, 257, 259, 260, 261, 530, 531,
	0, 262, 532, 263, 533, 0, 534, 264, 265, 266,
	267, 268, 0, 0, 0, 269, 535, 536, 537, 0,
	270, 271, 538, 0, 0, 0, 272, 273, 274, 275,
	276, 277, 278, 0, 0, 280, 281, 282, 279, 0,
	283, 0, 284, 285, 286, 0, 287, 0, 288, 289,
	0, 0, 0, 0, 0, 0, 0, 290, 291, 292,
	293, 0, 294, 539, 540, 0, 298, 295, 296, 0,
	299, 297, 0, 300, 301, 302, 0, 0, 303, 304,
	305, 0, 306, 307, 0, 308, 309, 310, 0, 311,
	312, 541, 313, 314, 315, 317, 319, 316, 320, 321,
	322, 323, 542, 543, 0, 0, 0, 0, 0, 0,
	0, 324, 325, 326, 544, 0, 0, 0, 327, 0,
	328, 0, 0, 0, 329, 330, 545, 546, 331, 332,
	0, 333, 547, 0, 548, 334, 0, 335, 336, 337,
	338, 339, 2996, 550, 551, 396, 0, 340, 341, 0,
	342, 343, 344, 345, 0, 0, 0, 0, 346, 347,
	349, 0, 0, 348, 552, 553, 0, 554, 0, 350,
	351, 0, 555, 0, 352, 353, 354, 0, 355, 0,
	0, 0, 356, 357, 358, 359, 360, 361, 0, 362,
	364, 363, 0, 365, 556, 0, 366, 367, 0, 0,
	368, 369, 370, 0, 0, 371, 372, 373, 374, 0,
	375, 376, 378, 380, 377, 379, 384, 381, 382, 383,
	386, 0, 385, 0, 387, 388, 389, 392, 393, 391,
	0, 390, 0, 0, 0, 394, 0, 557, 395, 558,
	397, 398, 0, 0, 399, 0, 0, 0, 401, 402,
	403, 0, 0, 404, 405, 559, 0, 406, 0, 560,
	407, 408, 400, 409, 410, 411, 412, 413, 414, 415,
	416, 0, 417, 418, 561, 562, 563, 419, 564, 420,
	421, 0, 422, 0, 423, 424, 425, 426, 427, 428,
	429, 565, 431, 430, 432, 0, 433, 0, 0, 0,
	0, 0, 434, 0, 436, 437, 438, 435, 439, 440,
	441, 442, 0, 443, 444, 445, 0, 446, 447, 448,
	449, 566, 450, 0, 451, 452, 458, 459, 453, 454,
	460, 461, 462, 463, 464, 0, 466, 467, 465, 468,
	469, 470, 0, 471, 455, 456, 472, 473, 0, 474,
	475, 476, 477, 478, 479, 567, 0, 480, 0, 481,
	482, 483, 484, 457, 485, 490, 568, 486, 487, 488,
	489, 569, 0, 492, 493, 0, 491, 0, 494, 495,
	496, 497, 498, 499, 318, 500, 0, 501, 570, 571,
	572, 573, 0, 508, 0, 502, 503, 574, 504, 575,
	0, 505, 506, 507, 0, 509, 510, 0, 0, 511,
	512, 513, 515, 516, 514, 517, 0, 518, 0, 0,
	519, 520, 521, 576, 577, 578, 241, 523, 522, 579,
	0, 0, 0, 0, 524, 525, 580, 526, 527, 528,
	0, 0, 0, 247, 248, 249, 250, 251, 252, 0,
	253, 254, 0, 0, 0, 0, 0, 529, 0, 0,
	0, 0, 255, 256, 258, 257, 259, 260, 261, 530,
	531, 0, 262, 532, 263, 533, 0, 534, 264, 265,
	266, 267, 268, 0, 0, 0, 269, 535, 536, 537,
	0, 270, 271, 538, 0, 0, 0, 272, 273, 274,
	275, 276, 277, 278, 0, 0, 280, 281, 282, 279,
	0, 283, 0, 284, 285, 286, 0, 287, 0, 288,
	289, 0, 0, 0, 0, 0, 0, 0, 290, 291,
	292, 293, 0, 294, 539, 540, 0, 298, 295, 296,
	0, 299, 297, 0, 300, 301, 302, 0, 0, 303,
	304, 305, 0, 306, 307, 0, 308, 309, 310, 0,
	311, 312, 541, 313, 314, 315, 317, 319, 316, 320,
	321, 322, 323, 542, 543, 0, 0, 0, 0, 0,
	0, 0, 324, 325, 326, 544, 0, 0, 0, 327,
	0, 328, 0, 0, 0, 329, 330, 545, 546, 331,
	332, 0, 333, 547, 0, 548, 334, 0, 335, 336,
	337, 338, 339, 2994, 550, 551, 396, 0, 340, 341,
	0, 342, 343, 344, 345, 0, 0, 0, 0, 346,
	347, 349, 0, 0, 348, 552, 553, 0, 554, 0,
	350, 351, 0, 555, 0, 352, 353, 354, 0, 355,
	0, 0, 0, 356, 357, 358, 359, 360, 361, 0,
	362, 364, 363, 0, 365, 556, 0, 366, 367, 0,
	0, 368, 369, 370, 0, 0, 371, 372, 373, 374,
	0, 375, 376, 378, 380, 377, 379, 384, 381, 382,
	383, 386, 0, 385, 0, 387, 388, 389, 392, 393,
	391, 0, 390, 0, 0, 0, 394, 0, 557, 395,
	558, 397, 398, 0, 0, 399, 0, 0, 0, 401,
	402, 403, 0, 0, 404, 405, 559, 0, 406, 0,
	560, 407, 408, 400, 409, 410, 411, 412, 413, 414,
	415, 416, 0, 417, 418, 561, 562, 563, 419, 564,
	420, 421, 0, 422, 0, 423, 424, 425, 426, 427,
	428, 429, 565, 431, 430, 432, 0, 433, 0, 0,
	0, 0, 0, 434, 0, 436, 437, 438, 435, 439,
	440, 441, 442, 0, 443, 444, 445, 0, 446, 447,
	448, 449, 566, 450, 0, 451, 452, 458, 459, 453,
	454, 460, 461, 462, 463, 464, 0, 466, 467, 465,
	468, 469, 470, 0, 471, 455, 456, 472, 473, 0,
	474, 475, 476, 477, 478, 479, 567, 0, 480, 0,
	481, 482, 483, 484, 457, 485, 490, 568, 486, 487,
	488, 489, 569, 0, 492, 493, 0, 491, 0, 494,
	495, 496, 497, 498, 499, 318, 500, 0, 501, 570,
	571, 572, 573, 0, 508, 0, 502, 503, 574, 504,
	575, 0, 505, 506, 507, 0, 509, 510, 0, 0,
	511, 512, 513, 515, 516, 514, 517, 0, 518, 0,
	0, 519, 520, 521, 576, 577, 578, 241, 523, 522,
	579, 0, 0, 0, 0, 524, 525, 580, 526, 527,
	528, 0, 0, 0, 247, 248, 249, 250, 251, 252,
	0, 253, 254, 0, 0, 0, 0, 0, 529, 0,
	0, 0, 0, 255, 256, 258, 257, 259, 260, 261,
	530, 531, 0, 262, 532, 263, 533, 0, 534, 264,
	265, 266, 267, 268, 0, 0, 0, 269, 535, 536,
	537, 0, 270, 271, 538, 0, 0, 0, 272, 273,
	274, 275, 276, 277, 278, 0, 0, 280, 281, 282,
	279, 0, 283, 0, 284, 285, 286, 0, 287, 0,
	288, 289, 0, 0, 0, 0, 0, 0, 0, 290,
	291, 292, 293, 0, 294, 539, 540, 0, 298, 295,
	296, 0, 299, 297, 0, 300, 301, 302, 0, 0,
	303, 304, 305, 0, 306, 307, 0, 308, 309, 310,
	0, 311, 312, 541, 313, 314, 315, 317, 319, 316,
	320, 321, 322, 323, 542, 543, 0, 0, 0, 0,
	0, 0, 0, 324, 325, 326, 544, 0, 0, 0,
	327, 0, 328, 0, 0, 0, 329, 330, 545, 546,
	331, 332, 0, 333, 547, 0, 548, 334, 0, 335,
	336, 337, 338, 339, 2980, 550, 551, 396, 0, 340,
	341, 0, 342, 343, 344, 345, 0, 0, 0, 0,
	346, 347, 349, 0, 0, 348, 552, 553, 0, 554,
	0, 350, 351, 0, 555, 0, 352, 353, 354, 0,
	355, 0, 0, 0, 356, 357, 358, 359, 360, 361,
	0, 362, 364, 363, 0, 365, 556, 0, 366, 367,
	0, 0, 368, 369, 370, 0, 0, 371, 372, 373,
	374, 0, 375, 376, 378, 380, 377, 379, 384, 381,
	382, 383, 386, 0, 385, 0, 387, 388, 389, 392,
	393, 391, 0, 390, 0, 0, 0, 394, 0, 557,
	395, 558, 397, 398, 0, 0, 399, 0, 0, 0,
	401, 402, 403, 0, 0, 404, 405, 559, 0, 406,
	0, 560, 407, 408, 400, 409, 410, 411, 412, 413,
	414, 415, 416, 0, 417, 418, 561, 562, 563, 419,
	564, 420, 421, 0, 422, 0, 423, 424, 425, 426,
	427, 428, 429, 565, 431, 430, 432, 0, 433, 0,
	0, 0, 0, 0, 434, 0, 436, 437, 438, 435,
	439, 440, 441, 442, 0, 443, 444, 445, 0, 446,
	447, 448, 449, 566, 450, 0, 451, 452, 458, 459,
	453, 454, 460, 461, 462, 463, 464, 0, 466, 467,
	465, 468, 469, 470, 0, 471, 455, 456, 472, 473,
	0, 474, 475, 476, 477, 478, 479, 567, 0, 480,
	0, 481, 482, 483, 484, 457, 485, 490, 568, 486,
	487, 488, 489, 569, 0, 492, 493, 0, 491, 0,
	494, 495, 496, 497, 498, 499, 318, 500, 0, 501,
	570, 571, 572, 573, 0, 508, 0, 502, 503, 574,
	504, 575, 0, 505, 506, 507, 0, 509, 510, 0,
	0, 511, 512, 513, 515, 516, 514, 517, 0, 518,
	0, 0, 519, 520, 521, 576, 577, 578, 241, 523,
	522, 579, 0, 0, 0, 0, 524, 525, 580, 526,
	527, 528, 0, 0, 0, 247, 248, 249, 250, 251,
	252, 0, 253, 254, 0, 0, 0, 0, 0, 529,
	0, 0, 0, 0, 255, 256, 258, 257, 259, 260,
	261, 530, 531, 0, 262, 532, 263, 533, 0, 534,
	264, 265, 266, 267, 268, 0, 0, 0, 269, 535,
	536, 537, 0, 270, 271, 538, 0, 0, 0, 272,
	273, 274, 275, 276, 277, 278, 0, 0, 280, 281,
	282, 279, 0, 283, 0, 284, 285, 286, 0, 287,
	0, 288, 289, 0, 0, 0, 0, 0, 0, 0,
	290, 291, 292, 293, 0, 294, 539, 540, 0, 298,
	295, 296, 0, 299, 297, 0, 300, 301, 302, 0,
	0, 303, 304, 305, 0, 306, 307, 0, 308, 309,
	310, 0, 311, 312, 541, 313, 314, 315, 317, 319,
	316, 320, 321, 322, 323, 542, 543, 0, 0, 0,
	0, 0, 0, 0, 324, 325, 326, 544, 0, 0,
	0, 327, 0, 328, 0, 0, 0, 329, 330, 545,
	546, 331, 332, 0, 333, 547, 0, 548, 334, 0,
	335, 336, 337, 338, 339, 2615, 550, 551, 396, 0,
	340, 341, 0, 342, 343, 344, 345, 0, 0, 0,
	0, 346, 347, 349, 0, 0, 348, 552, 553, 0,
	554, 0, 350, 351, 0, 555, 0, 352, 353, 354,
	0, 355, 0, 0, 0, 356, 357, 358, 359, 360,
	361, 0, 362, 364, 363, 0, 365, 556, 0, 366,
	367, 0, 0, 368, 369, 370, 0, 0, 371, 372,
	373, 374, 0, 375, 376, 378, 380, 377, 379, 384,
	381, 382, 383, 386, 0, 385, 0, 387, 388, 389,
	392, 393, 391, 0, 390, 0, 0, 0, 394, 0,
	557, 395, 558, 397, 398, 0, 0, 399, 0, 0,
	0, 401, 402, 403, 0, 0, 404, 405, 559, 0,
	406, 0, 560, 407, 408, 400, 409, 410, 411, 412,
	413, 414, 415, 416, 0, 417, 418, 561, 562, 563,
	419, 564, 420, 421, 0, 422, 0, 423, 424, 425,
	426, 427, 428, 429, 565, 431, 430, 432, 0, 433,
	0, 0, 0, 0, 0, 434, 0, 436, 437, 438,
	435, 439, 440, 441, 442, 0, 443, 444, 445, 0,
	446, 447, 448, 449, 566, 450, 0, 451, 452, 458,
	459, 453, 454, 460, 461, 462, 463, 464, 0, 466,
	467, 465, 468, 469, 470, 0, 471, 455, 456, 472,
	473, 0, 474, 475, 476, 477, 478, 479, 567, 0,
	480, 0, 481, 482, 483, 484, 457, 485, 490, 568,
	486, 487, 488, 489, 569, 0, 492, 493, 0, 491,
	0, 494, 495, 496, 497, 498, 499, 318, 500, 0,
	501, 570, 571, 572, 573, 0, 508, 0, 502, 503,
	574, 504, 575, 0, 505, 506, 507, 0, 509, 510,
	0, 0, 511, 512, 513, 515, 516, 514, 517, 0,
	518, 0, 0, 519, 520, 521, 576, 577, 578, 241,
	523, 522, 579, 0, 0, 0, 0, 524, 525, 580,
	526, 527, 528, 0, 0, 0, 247, 248, 249, 250,
	251, 252, 0, 253, 254, 0, 0, 0, 0, 0,
	529, 0, 0, 0, 0, 255, 256, 258, 257, 259,
	260, 261, 530, 531, 0, 262, 532, 263, 533, 0,
	534, 264, 265, 266, 267, 268, 0, 0, 0, 269,
	535, 536, 537, 0, 270, 271, 538, 0, 0, 0,
	272, 273, 274, 275, 276, 277, 278, 0, 0, 280,
	281, 282, 279, 0, 283, 0, 284, 285, 286, 0,
	287, 0, 288, 289, 0, 0, 0, 0, 0, 0,
	0, 290, 291, 292, 293, 0, 294, 539, 540, 0,
	298, 295, 296, 0, 299, 297, 0, 300, 301, 302,
	0, 0, 303, 304, 305, 0, 306, 307, 0, 308,
	309, 310, 0, 311, 312, 541, 313, 314, 315, 317,
	319, 316, 320, 321, 322, 323, 542, 543, 0, 0,
	0, 0, 0, 0, 0, 324, 325, 326, 544, 0,
	0, 0, 327, 0, 328, 0, 0, 0, 329, 330,
	545, 546, 331, 332, 0, 333, 547, 0, 548, 334,
	0, 335, 336, 337, 338, 339, 549, 550, 551, 396,
	0, 340, 341, 0, 342, 343, 344, 345, 0, 0,
	0, 0, 346, 347, 349, 0, 0, 348, 552, 553,
	0, 554, 0, 350, 351, 0, 555, 0, 352, 353,
	354, 0, 355, 0, 0, 0, 356, 357, 358, 359,
	360, 361, 0, 362, 364, 363, 0, 365, 556, 0,
	366, 367, 0, 0, 368, 369, 370, 0, 0, 371,
	372, 373, 374, 0, 375, 376, 378, 380, 377, 379,
	384, 381, 382, 383, 386, 0, 385, 0, 387, 388,
	389, 392, 393, 391, 0, 390, 0, 0, 0, 394,
	0, 557, 395, 558, 397, 398, 0, 0, 399, 0,
	0, 0, 401, 402, 403, 0, 0, 404, 405, 559,
	0, 406, 0, 560, 407, 408, 400, 409, 410, 411,
	412, 413, 414, 415, 416, 0, 417, 418, 561, 562,
	563, 419, 564, 420, 421, 0, 422, 0, 423, 424,
	425, 426, 427, 428, 429, 565, 431, 430, 432, 0,
	433, 0, 0, 0, 0, 0, 434, 0, 436, 437,
	438, 435, 439, 440, 441, 442, 0, 443, 444, 445,
	0, 446, 447, 448, 449, 566, 450, 0, 451, 452,
	617, 459, 453, 454, 460, 461, 462, 463, 464, 0,
	466, 467, 465, 468, 469, 470, 0, 471, 455, 456,
	472, 473, 0, 474, 475, 476, 477, 478, 479, 567,
	0, 480, 0, 481, 482, 483, 484, 457, 485, 490,
	568, 486, 487, 488, 489, 569, 0, 492, 493, 0,
	491, 0, 494, 495, 496, 497, 498, 499, 318, 500,
	0, 501, 570, 571, 572, 573, 0, 508, 0, 502,
	503, 574, 504, 575, 0, 505, 506, 507, 0, 509,
	510, 0, 0, 511, 512, 513, 515, 516, 514, 517,
	0, 518, 0, 0, 519, 520, 521, 576, 577, 578,
	241, 523, 522, 579, 0, 0, 0, 0, 524, 525,
	580, 526, 527, 528, 0, 0, 0, 247, 248, 249,
	250, 251, 252, 0, 253, 254, 0, 0, 0, 0,
	0, 529, 0, 2017, 0, 0, 255, 256, 258, 257,
	259, 260, 261, 530, 531, 0, 262, 532, 263, 533,
	0, 534, 264, 265, 266, 267, 268, 0, 0, 0,
	269, 535, 536, 537, 0, 270, 271, 538, 0, 0,
	0, 272, 273, 274, 275, 276, 277, 278, 0, 0,
	280, 281, 282, 279, 0, 283, 0, 284, 285, 286,
	0, 287, 0, 288, 289, 0, 0, 0, 0, 0,
	0, 0, 290, 291, 292, 293, 0, 294, 539, 540,
	0, 298, 295, 296, 0, 299, 297, 0, 300, 301,
	302, 0, 0, 303, 304, 305, 0, 306, 307, 0,
	308, 309, 310, 0, 311, 312, 541, 313, 314, 315,
	317, 319, 316, 320, 321, 322, 323, 542, 543, 0,
	0, 0, 0, 0, 0, 0, 324, 325, 326, 544,
	0, 0, 0, 327, 0, 328, 0, 0, 0, 329,
	330, 545, 546, 331, 332, 0, 333, 547, 0, 548,
	334, 0, 335, 336, 337, 338, 339, 549, 550, 551,
	396, 0, 340, 341, 0, 342, 343, 344, 345, 0,
	0, 0, 0, 346, 347, 349, 0, 0, 348, 552,
	553, 0, 554, 0, 350, 351, 0, 555, 0, 352,
	353, 354, 0, 355, 0, 0, 0, 356, 357, 358,
	359, 360, 361, 0, 362, 364, 363, 0, 365, 556,
	0, 366, 367, 0, 0, 368, 369, 370, 0, 0,
	371, 372, 373, 374, 0, 375, 376, 378, 380, 377,
	379, 384, 381, 382, 383, 386, 0, 385, 0, 387,
	388, 389, 392, 393, 391, 0, 390, 0, 0, 0,
	394, 0, 557, 395, 558, 397, 398, 0, 0, 399,
	0, 0, 0, 401, 402, 403, 0, 0, 404, 405,
	559, 0, 406, 0, 560, 407, 408, 400, 409, 410,
	411, 412, 413, 414, 415, 416, 0, 417, 418, 561,
	562, 563, 419, 564, 420, 421, 0, 422, 0, 423,
	424, 425, 426, 427, 428, 429, 565, 431, 430, 432,
	0, 433, 0, 0, 0, 0, 0, 434, 0, 436,
	437, 438, 435, 439, 440, 441, 442, 0, 443, 444,
	445, 0, 446, 447, 448, 449, 566, 450, 0, 451,
	452, 458, 459, 453, 454, 460, 461, 462, 463, 464,
	0, 466, 467, 465, 468, 469, 470, 0, 0, 455,
	456, 472, 473, 0, 474, 475, 476, 477, 478, 479,
	567, 0, 480, 0, 481, 482, 483, 484, 457, 485,
	490, 568, 486, 487, 488, 489, 569, 0, 492, 493,
	0, 491, 0, 494, 495, 496, 497, 498, 499, 318,
	500, 0, 501, 570, 571, 572, 573, 0, 508, 0,
	502, 503, 574, 504, 575, 0, 505, 506, 507, 0,
	509, 510, 0, 0, 511, 512, 513, 515, 516, 514,
	517, 0, 518, 0, 0, 519, 520, 521, 576, 577,
	578, 241, 523, 522, 579, 0, 0, 0, 0, 524,
	525, 580, 526, 527, 528, 0, 0, 0, 247, 248,
	249, 250, 251, 252, 0, 253, 254, 0, 0, 0,
	0, 0, 529, 0, 0, 0, 0, 255, 256, 258,
	257, 259, 260, 261, 530, 531, 0, 262, 532, 263,
	533, 0, 534, 264, 265, 266, 267, 268, 0, 0,
	0, 269, 535, 536, 537, 0, 270, 271, 538, 0,
	0, 0, 272, 273, 274, 275, 276, 277, 278, 0,
	0, 280, 281, 282, 279, 0, 283, 0, 284, 285,
	286, 0, 287, 0, 288, 289, 0, 0, 0, 0,
	0, 0, 0, 290, 291, 292, 293, 0, 294, 539,
	540, 0, 298, 295, 296, 0, 299, 297, 0, 300,
	301, 302, 0, 0, 303, 304, 305, 0, 306, 307,
	0, 308, 309, 310, 0, 311, 312, 541, 313, 314,
	315, 317, 319, 316, 320, 321, 322, 323, 542, 543,
	0, 0, 0, 0, 0, 0, 0, 324, 325, 326,
	544, 0, 0, 0, 327, 0, 328, 0, 0, 0,
	329, 330, 545, 546, 331, 332, 0, 333, 547, 0,
	548, 334, 0, 335, 336, 337, 338, 339, 1394, 550,
	551, 396, 0, 340, 341, 0, 342, 343, 344, 345,
	0, 0, 0, 0, 346, 347, 349, 0, 0, 348,
	552, 553, 0, 554, 0, 350, 351, 0, 555, 0,
	352, 353, 354, 0, 355, 0, 0, 0, 356, 357,
	358, 359, 360, 361, 0, 362, 364, 363, 0, 365,
	556, 0, 366, 367, 0, 0, 368, 369, 370, 0,
	0, 371, 372, 373, 374, 0, 375, 376, 378, 380,
	377, 379, 384, 381, 382, 383, 386, 0, 385, 0,
	387, 388, 389, 392, 393, 391, 0, 390, 0, 0,
	0, 394, 0, 557, 395, 558, 397, 398, 0, 0,
	399, 0, 0, 0, 401, 402, 403, 0, 0, 404,
	405, 559, 0, 406, 0, 560, 407, 408, 400, 409,
	410, 411, 412, 413, 414, 415, 416, 0, 417, 418,
	561, 562, 563, 419, 564, 420, 421, 0, 422, 0,
	423, 424, 425, 426, 427, 428, 429, 565, 431, 430,
	432, 0, 433, 0, 0, 0, 0, 0, 434, 0,
	436, 437, 438, 435, 439, 440, 441, 442, 0, 443,
	444, 445, 0, 446, 447, 448, 449, 566, 450, 0,
	451, 452, 458, 459, 453, 454, 460, 461, 462, 463,
	464, 0, 466, 467, 465, 468, 469, 470, 0, 471,
	455, 456, 472, 473, 0, 474, 475, 476, 477, 478,
	479, 567, 0, 480, 0, 481, 482, 483, 484, 457,
	485, 490, 568, 486, 487, 488, 489, 569, 0, 492,
	493, 0, 491, 0, 494, 495, 496, 497, 498, 499,
	318, 500, 0, 501, 570, 571, 572, 573, 0, 508,
	0, 502, 503, 574, 504, 575, 0, 505, 506, 507,
	0, 509, 510, 0, 0, 511, 512, 513, 515, 516,
	514, 517, 0, 518, 0, 0, 519, 520, 521, 576,
	577, 578, 241, 523, 522, 579, 0, 0, 0, 0,
	524, 525, 580, 526, 527, 528, 0, 0, 0, 247,
	248, 249, 250, 251, 252, 0, 253, 254, 0, 0,
	0, 0, 0, 529, 0, 0, 0, 0, 255, 256,
	258, 257, 259, 260, 261, 530, 531, 0, 262, 532,
	263, 533, 0, 534, 264, 265, 266, 267, 268, 0,
	0, 0, 269, 535, 536, 537, 0, 270, 271, 538,
	0, 0, 0, 272, 273, 274, 275, 276, 277, 278,
	0, 0, 280, 281, 282, 279, 0, 283, 0, 284,
	285, 286, 0, 287, 0, 288, 289, 0, 0, 0,
	0, 0, 0, 0, 290, 291, 292, 293, 0, 294,
	539, 540, 0, 298, 295, 296, 0, 299, 297, 0,
	300, 301, 302, 0, 0, 303, 304, 305, 0, 306,
	307, 0, 308, 309, 310, 0, 311, 312, 541, 313,
	314, 315, 317, 319, 316, 320, 321, 322, 323, 542,
	543, 0, 0, 0, 0, 0, 0, 0, 324, 325,
	326, 544, 0, 0, 0, 327, 0, 328, 0, 0,
	0, 329, 330, 545, 546, 331, 332, 0, 333, 547,
	0, 548, 334, 0, 335, 336, 337, 338, 339, 1335,
	550, 551, 396, 0, 340, 341, 0, 342, 343, 344,
	345, 0, 0, 0, 0, 346, 347, 349, 0, 0,
	348, 552, 553, 0, 554, 0, 350, 351, 0, 555,
	0, 352, 353, 354, 0, 355, 0, 0, 0, 356,
	357, 358, 359, 360, 361, 0, 362, 364, 363, 0,
	365, 556, 0, 366, 367, 0, 0, 368, 369, 370,
	0, 0, 371, 372, 373, 374, 0, 375, 376, 378,
	380, 377, 379, 384, 381, 382, 383, 386, 0, 385,
	0, 387, 388, 389, 392, 393, 391, 0, 390, 0,
	0, 0, 394, 0, 557, 395, 558, 397, 398, 0,
	0, 399, 0, 0, 0, 401, 402, 403, 0, 0,
	404, 405, 559, 0, 406, 0, 560, 407, 408, 400,
	409, 410, 411, 412, 413, 414, 415, 416, 0, 417,
	418, 561, 562, 563, 419, 564, 420, 421, 0, 422,
	0, 423, 424, 425, 426, 427, 428, 429, 565, 431,
	430, 432, 0, 433, 0, 0, 0, 0, 0, 434,
	0, 436, 437, 438, 435, 439, 440, 441, 442, 0,
	443, 444, 445, 0, 446, 447, 448, 449, 566, 450,
	0, 451, 452, 458, 459, 453, 454, 460, 461, 462,
	463, 464, 0, 466, 467, 465, 468, 469, 470, 0,
	471, 455, 456, 472, 473, 0, 474, 475, 476, 477,
	478, 479, 567, 0, 480, 0, 481, 482, 483, 484,
	457, 485, 490, 568, 486, 487, 488, 489, 569, 0,
	492, 493, 0, 491, 0, 494, 495, 496, 497, 498,
	499, 318, 500, 0, 501, 570, 571, 572, 573, 0,
	508, 0, 502, 503, 574, 504, 575, 0, 505, 506,
	507, 0, 509, 510, 0, 0, 511, 512, 513, 515,
	516, 514, 517, 0, 518, 0, 0, 519, 520, 521,
	576, 577, 578, 241, 523, 522, 579, 0, 0, 0,
	0, 524, 525, 580, 526, 527, 528, 0, 0, 0,
	247, 248, 249, 250, 251, 252, 0, 253, 254, 0,
	0, 0, 0, 0, 529, 0, 0, 0, 0, 255,
	256, 258, 257, 259, 260, 261, 530, 531, 0, 262,
	532, 263, 533, 0, 534, 264, 265, 266, 267, 268,
	0, 0, 0, 269, 535, 536, 537, 0, 270, 271,
	538, 0, 0, 0, 272, 273, 274, 275, 276, 277,
	278, 0, 0, 280, 281, 282, 279, 0, 283, 0,
	284, 285, 286, 0, 287, 0, 288, 289, 0, 0,
	0, 0, 0, 0, 0, 290, 291, 292, 293, 0,
	294, 539, 540, 0, 298, 295, 296, 0, 299, 297,
	0, 300, 301, 302, 0, 0, 303, 304, 305, 0,
	306, 307, 0, 308, 309, 310, 0, 311, 312, 541,
	313, 314, 315, 317, 319, 316, 320, 321, 322, 323,
	542, 543, 0, 0, 0, 0, 0, 0, 0, 324,
	325, 326, 544, 0, 0, 0, 327, 0, 328, 0,
	0, 0, 329, 330, 545, 546, 331, 332, 0, 333,
	547, 0, 548, 334, 0, 335, 336, 337, 338, 339,
	549, 550, 551, 396, 0, 340, 341, 0, 342, 343,
	344, 345, 0, 0, 0, 0, 346, 347, 349, 0,
	0, 348, 552, 553, 0, 554, 0, 350, 351, 0,
	555, 0, 352, 353, 354, 0, 355, 0, 0, 0,
	356, 357, 358, 359, 360, 361, 0, 362, 364, 363,
	0, 365, 556, 0, 366, 367, 0, 0, 368, 369,
	370, 0, 0, 371, 372, 373, 374, 0, 375, 376,
	378, 380, 377, 379, 384, 381, 382, 383, 386, 0,
	385, 0, 387, 388, 389, 392, 393, 391, 0, 390,
	0, 0, 0, 394, 0, 557, 395, 558, 397, 398,
	0, 0, 399, 0, 0, 0, 401, 402, 403, 0,
	0, 404, 405, 559, 0, 406, 0, 560, 407, 408,
	400, 409, 410, 411, 412, 413, 414, 415, 416, 0,
	417, 418, 561, 562, 563, 419, 564, 420, 421, 0,
	422, 0, 423, 424, 425, 426, 427, 428, 429, 565,
	1073, 430, 432, 0, 433, 0, 0, 0, 0, 0,
	434, 0, 436, 437, 438, 435, 439, 440, 441, 442,
	0, 443, 444, 445, 0, 446, 447, 448, 449, 566,
	450, 0, 451, 452, 458, 459, 453, 454, 460, 461,
	462, 463, 464, 0, 466, 467, 465, 468, 469, 470,
	0, 471, 455, 456, 472, 473, 0, 474, 475, 476,
	477, 478, 479, 567, 0, 480, 0, 481, 482, 483,
	484, 457, 485, 490, 568, 486, 487, 488, 489, 569,
	0, 492, 493, 0, 491, 0, 494, 495, 496, 497,
	498, 499, 318, 500, 0, 501, 570, 571, 572, 573,
	0, 508, 0, 502, 503, 574, 504, 575, 0, 505,
	506, 507, 0, 509, 510, 0, 0, 511, 512, 513,
	515, 516, 514, 517, 0, 518, 0, 0, 519, 520,
	521, 576, 577, 578, 241, 523, 522, 579, 0, 0,
	0, 0, 524, 525, 580, 526, 527, 528, 0, 0,
	0, 247, 248, 249, 250, 251, 252, 0, 253, 254,
	0, 0, 0, 0, 0, 529, 0, 0, 0, 0,
	255, 256, 258, 257, 259, 260, 261, 530, 531, 0,
	262, 532, 263, 533, 0, 534, 264, 265, 266, 267,
	268, 0, 0, 0, 269, 535, 536, 537, 0, 270,
	271, 538, 0, 0, 0, 272, 273, 274, 275, 276,
	277, 278, 0, 0, 280, 281, 282, 279, 0, 283,
	0, 284, 285, 286, 0, 287, 0, 288, 289, 0,
	0, 0, 0, 0, 0, 0, 290, 291, 292, 293,
	0, 294, 539, 540, 0, 298, 295, 296, 0, 299,
	297, 0, 300, 301, 302, 0, 0, 303, 304, 305,
	0, 306, 307, 0, 308, 309, 310, 0, 311, 312,
	541, 313, 314, 315, 317, 319, 316, 320, 321, 322,
	323, 542, 543, 0, 0, 0, 0, 0, 0, 0,
	324, 325, 326, 544, 0, 0, 0, 327, 0, 328,
	0, 0, 0, 329, 330, 545, 546, 331, 332, 0,
	333, 547, 0, 548, 0, 0, 335, 336, 337, 338,
	339, 549, 550, 551, 396, 0, 340, 341, 0, 342,
	343, 344, 345, 0, 0, 0, 0, 346, 347, 349,
	0, 0, 348, 552, 553, 0, 554, 0, 350, 351,
	0, 555, 0, 352, 353, 354, 0, 355, 0, 0,
	0, 356, 357, 358, 359, 360, 361, 0, 362, 364,
	363, 0, 365, 556, 0, 366, 367, 0, 0, 368,
	369, 370, 0, 0, 371, 372, 373, 374, 0, 375,
	376, 378, 380, 377, 379, 384, 381, 382, 383, 386,
	0, 385, 0, 387, 388, 389, 392, 393, 391, 0,
	390, 0, 0, 0, 394, 0, 557, 395, 558, 397,
	398, 0, 0, 399, 0, 0, 0, 401, 402, 403,
	0, 0, 404, 405, 559, 0, 406, 0, 560, 407,
	408, 400, 409, 410, 0, 412, 413, 414, 415, 416,
	0, 417, 418, 561, 562, 563, 419, 564, 420, 421,
	0, 422, 0, 423, 424, 425, 426, 0, 428, 429,
	565, 431, 430, 432, 0, 433, 0, 0, 0, 0,
	0, 434, 0, 436, 437, 438, 435, 439, 440, 441,
	442, 0, 443, 444, 445, 0, 446, 447, 448, 449,
	566, 0, 0, 451, 452, 458, 459, 453, 454, 460,
	461, 462, 463, 464, 0, 466, 467, 465, 468, 469,
	470, 0, 471, 455, 456, 472, 473, 0, 474, 475,
	476, 477, 478, 479, 567, 0, 480, 0, 481, 482,
	483, 484, 457, 485, 490, 568, 486, 487, 488, 489,
	569, 0, 492, 493, 0, 491, 0, 494, 495, 496,
	497, 498, 499, 318, 500, 0, 501, 570, 571, 572,
	573, 0, 508, 0, 502, 503, 574, 504, 575, 0,
	505, 506, 507, 0, 509, 510, 0, 0, 511, 512,
	513, 515, 516, 514, 517, 0, 518, 0, 0, 519,
	520, 521, 576, 577, 578, 0, 523, 522, 579, 0,
	0, 0, 0, 524, 525, 580, 526, 527, 528, 1603,
	1604, 0, 1636, 1637, 1638, 1646, 1647, 1648, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1639, 1634, 0, 0, 0, 0, 0, 0, 1606, 0,
	0, 0, 0, 0, 0, 1652, 0, 0, 0, 0,
	0, 0, 0, 1603, 1604, 0, 1636, 1637, 1638, 1646,
	1647, 1648, 0, 0, 0, 0, 0, 0, 0, 0,
	1605, 0, 0, 0, 1639, 1634, 0, 0, 0, 0,
	1625, 0, 1606, 0, 0, 0, 0, 0, 1622, 1652,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1605, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1625, 0, 0, 0, 0, 0,
	0, 0, 1622, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1628, 1629, 1630, 1631, 0, 0,
	0, 0, 0, 0, 1611, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1643, 0, 0, 1653, 0, 1628, 1629,
	1630, 1631, 1633, 1635, 0, 0, 0, 0, 1611, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1649, 0,
	1650, 0, 0, 0, 0, 0, 0, 1620, 1621, 0,
	0, 0, 0, 0, 0, 0, 0, 1643, 0, 0,
	1653, 0, 0, 0, 0, 1641, 1633, 1635, 0, 0,
	0, 0, 0, 0, 0, 0, 1626, 0, 0, 0,
	0, 0, 1649, 0, 1650, 0, 0, 0, 0, 0,
	0, 1620, 1621, 0, 0, 0, 0, 0, 0, 0,
	0, 1651, 0, 0, 0, 0, 0, 0, 0, 1641,
	0, 0, 0, 0, 0, 0, 0, 0, 1640, 0,
	1626, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1651, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1640, 0, 0, 0, 0, 0, 0, 0,
	1632, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1627, 1603, 1604, 0, 1636, 1637, 1638, 1646, 1647, 1648,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1639, 1634, 1632, 1644, 0, 0, 0, 0,
	1606, 0, 0, 0, 0, 0, 0, 1652, 0, 0,
	0, 0, 0, 0, 1627, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1605, 0, 0, 0, 0, 0, 0, 1644,
	0, 0, 1625, 0, 0, 0, 0, 0, 0, 0,
	1622, 0, 0, 1603, 1604, 0, 1636, 1637, 1638, 1646,
	1647, 1648, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1639, 1634, 0, 0, 0, 0,
	0, 0, 1606, 0, 0, 0, 0, 1642, 0, 1652,
	0, 1617, 1618, 1624, 1645, 1623, 1619, 0, 1616, 1614,
	1615, 1607, 1608, 1609, 1610, 1612, 1613, 0, 0, 0,
	0, 0, 0, 0, 1605, 2827, 1628, 1629, 1630, 1631,
	0, 0, 0, 0, 1625, 0, 1611, 0, 0, 0,
	0, 1642, 1622, 0, 0, 1617, 1618, 1624, 1645, 1623,
	1619, 0, 1616, 1614, 1615, 1607, 1608, 1609, 1610, 1612,
	1613, 0, 0, 0, 0, 1643, 0, 0, 1653, 2824,
	0, 0, 0, 0, 1633, 1635, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1649, 0, 1650, 0, 0, 0, 0, 0, 0, 1620,
	1621, 0, 0, 0, 0, 0, 0, 0, 1628, 1629,
	1630, 1631, 0, 0, 0, 0, 0, 1641, 1611, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1626, 0,
	0, 0, 0, 1603, 1604, 0, 1636, 1637, 1638, 1646,
	1647, 1648, 0, 0, 0, 0, 0, 1643, 0, 0,
	1653, 0, 0, 1651, 1639, 1634, 1633, 1635, 0, 0,
	0, 0, 1606, 0, 0, 0, 0, 0, 0, 1652,
	1640, 0, 1649, 0, 1650, 0, 0, 0, 0, 0,
	0, 1620, 1621, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1605, 0, 0, 0, 0, 1641,
	0, 0, 0, 0, 1625, 0, 0, 0, 0, 0,
	1626, 0, 1622, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1632, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1651, 0, 0, 0, 0,
	0, 0, 1627, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1640, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1644, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1628, 1629,
	1630, 1631, 0, 0, 0, 0, 0, 0, 1611, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1632, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1643, 0, 0,
	1653, 0, 0, 0, 1627, 0, 1633, 1635, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1649, 0, 1650, 0, 0, 0, 0, 1644,
	0, 1620, 1621, 0, 0, 0, 0, 0, 0, 1642,
	0, 0, 0, 1617, 1618, 1624, 1645, 1623, 1619, 1641,
	1616, 1614, 1615, 1607, 1608, 1609, 1610, 1612, 1613, 0,
	1626, 0, 0, 0, 0, 0, 0, 2823, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1651, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1640, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1642, 0, 0, 0, 1617, 1618, 1624, 1645, 1623,
	1619, 0, 1616, 1614, 1615, 1607, 1608, 1609, 1610, 1612,
	1613, 0, 0, 0, 0, 0, 0, 0, 0, 2822,
	0, 0, 0, 0, 1632, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1627, 1603, 1604, 0, 1636, 1637,
	1638, 1646, 1647, 1648, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1639, 1634, 0, 1644,
	0, 0, 0, 0, 1606, 0, 0, 0, 0, 0,
	0, 1652, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1605, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1625, 0, 0, 0,
	0, 0, 0, 0, 1622, 0, 0, 1603, 1604, 0,
	1636, 1637, 1638, 1646, 1647, 1648, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1639, 1634,
	0, 0, 0, 0, 0, 0, 1606, 0, 0, 0,
	0, 1642, 0, 1652, 0, 1617, 1618, 1624, 1645, 1623,
	1619, 0, 1616, 1614, 1615, 1607, 1608, 1609, 1610, 1612,
	1613, 0, 0, 0, 0, 0, 0, 0, 1605, 2262,
	1628, 1629, 1630, 1631, 0, 0, 0, 0, 1625, 0,
	1611, 0, 0, 0, 0, 0, 1622, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1643,
	0, 0, 1653, 0, 0, 0, 0, 0, 1633, 1635,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1649, 0, 1650, 0, 0, 0,
	0, 0, 0, 1620, 1621, 0, 0, 0, 0, 0,
	0, 0, 1628, 1629, 1630, 1631, 0, 0, 0, 0,
	0, 1641, 1611, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1626, 0, 0, 0, 0, 1603, 1604, 0,
	1636, 1637, 1638, 1646, 1647, 1648, 0, 0, 0, 0,
	0, 1643, 0, 0, 1653, 0, 0, 1651, 1639, 1634,
	1633, 1635, 0, 0, 0, 0, 1606, 0, 0, 0,
	0, 0, 0, 1652, 1640, 0, 1649, 0, 1650, 0,
	0, 0, 0, 0, 0, 1620, 1621, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1605, 0,
	0, 0, 0, 1641, 0, 0, 0, 0, 1625, 0,
	0, 0, 0, 0, 1626, 0, 1622, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1632, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1651,
	0, 0, 0, 0, 0, 0, 1627, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1640, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1644, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1628, 1629, 1630, 1631, 0, 0, 0, 0,
	0, 0, 1611, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1632, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1643, 0, 0, 1653, 0, 0, 0, 1627, 0,
	1633, 1635, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1649, 0, 1650, 0,
	0, 0, 0, 1644, 0, 1620, 1621, 0, 0, 0,
	0, 0, 0, 1642, 0, 0, 0, 1617, 1618, 1624,
	1645, 1623, 1619, 1641, 1616, 1614, 1615, 1607, 1608, 1609,
	1610, 1612, 1613, 0, 1626, 0, 0, 3981, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1651,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1640, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1642, 0, 0, 0, 1617,
	1618, 1624, 1645, 1623, 1619, 0, 1616, 1614, 1615, 1607,
	1608, 1609, 1610, 1612, 1613, 0, 0, 0, 0, 3891,
	0, 0, 0, 0, 0, 0, 0, 0, 1632, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1603, 1604, 1627, 1636,
	1637, 1638, 1646, 1647, 1648, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1639, 1634, 0,
	0, 0, 0, 1644, 0, 1606, 0, 0, 0, 0,
	0, 0, 1652, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1605, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1625, 0, 0,
	0, 0, 0, 0, 0, 1622, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1603,
	1604, 0, 1636, 1637, 1638, 1646, 1647, 1648, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1639, 1634, 0, 0, 0, 1642, 0, 0, 1606, 1617,
	1618, 1624, 1645, 1623, 1619, 1652, 1616, 1614, 1615, 1607,
	1608, 1609, 1610, 1612, 1613, 0, 0, 0, 0, 3890,
	0, 1628, 1629, 1630, 1631, 0, 0, 0, 0, 0,
	1605, 1611, 0, 0, 0, 0, 0, 0, 0, 0,
	1625, 0, 0, 0, 0, 0, 0, 0, 1622, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1643, 0, 0, 1653, 0, 0, 0, 0, 0, 1633,
	1635, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1649, 0, 1650, 0, 0,
	0, 0, 0, 0, 1620, 1621, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1641, 0, 1628, 1629, 1630, 1631, 0, 0,
	0, 0, 0, 1626, 1611, 0, 0, 0, 1603, 1604,
	0, 1636, 1637, 1638, 1646, 1647, 1648, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1651, 1639,
	1634, 0, 0, 1643, 0, 0, 1653, 1606, 0, 0,
	0, 0, 1633, 1635, 1652, 1640, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1649, 0,
	1650, 0, 0, 0, 0, 0, 0, 1620, 1621, 1605,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1625,
	0, 0, 0, 0, 0, 1641, 0, 1622, 0, 0,
	0, 0, 0, 0, 0, 0, 1626, 1632, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1627, 0, 0,
	0, 1651, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1640, 0,
	0, 0, 1644, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1628, 1629, 1630, 1631, 0, 0, 0,
	0, 0, 0, 1611, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1632, 0, 1643, 0, 0, 1653, 0, 0, 0, 0,
	0, 1633, 1635, 0, 0, 0, 0, 0, 0, 0,
	1627, 0, 0, 0, 0, 0, 0, 1649, 0, 1650,
	0, 0, 0, 0, 0, 0, 1620, 1621, 0, 0,
	0, 0, 0, 0, 1642, 1644, 0, 0, 1617, 1618,
	1624, 1645, 1623, 1619, 1641, 1616, 1614, 1615, 1607, 1608,
	1609, 1610, 1612, 1613, 0, 1626, 0, 0, 3739, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1651, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1640, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1642, 0, 0,
	0, 1617, 1618, 1624, 1645, 1623, 1619, 0, 1616, 1614,
	1615, 1607, 1608, 1609, 1610, 1612, 1613, 0, 0, 1632,
	0, 3602, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1603, 1604, 1627,
	1636, 1637, 1638, 1646, 1647, 1648, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1639, 1634,
	0, 0, 0, 0, 1644, 0, 1606, 0, 0, 0,
	0, 0, 0, 1652, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1605, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1625, 0,
	0, 0, 0, 0, 0, 0, 1622, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1603, 1604, 0, 1636, 1637, 1638, 1646, 1647, 1648, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1639, 1634, 0, 0, 0, 1642, 0, 0, 1606,
	1617, 1618, 1624, 1645, 1623, 1619, 1652, 1616, 1614, 1615,
	1607, 1608, 1609, 1610, 1612, 1613, 0, 0, 0, 0,
	3546, 0, 1628, 1629, 1630, 1631, 0, 0, 0, 0,
	0, 1605, 1611, 0, 0, 0, 0, 0, 0, 0,
	0, 1625, 0, 0, 0, 0, 0, 0, 0, 1622,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1643, 0, 0, 1653, 0, 0, 0, 0, 0,
	1633, 1635, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1649, 0, 1650, 0,
	0, 0, 0, 0, 0, 1620, 1621, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1641, 0, 1628, 1629, 1630, 1631, 0,
	0, 0, 0, 0, 1626, 1611, 0, 0, 0, 1603,
	1604, 0, 1636, 1637, 1638, 1646, 1647, 1648, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1651,
	1639, 1634, 0, 0, 1643, 0, 0, 1653, 1606, 0,
	0, 0, 0, 1633, 1635, 1652, 1640, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1649,
	0, 1650, 0, 0, 0, 0, 0, 0, 1620, 1621,
	1605, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1625, 0, 0, 0, 0, 0, 1641, 0, 1622, 0,
	0, 0, 0, 0, 0, 0, 0, 1626, 1632, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1627, 0,
	0, 0, 1651, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1640,
	0, 0, 0, 1644, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1628, 1629, 1630, 1631, 0, 0,
	0, 0, 0, 0, 1611, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1632, 0, 1643, 0, 0, 1653, 0, 0, 0,
	0, 0, 1633, 1635, 0, 0, 0, 0, 0, 0,
	0, 1627, 0, 0, 0, 0, 0, 0, 1649, 0,
	1650, 0, 0, 0, 0, 0, 0, 1620, 1621, 0,
	0, 0, 0, 0, 0, 1642, 1644, 0, 0, 1617,
	1618, 1624, 1645, 1623, 1619, 1641, 1616, 1614, 1615, 1607,
	1608, 1609, 1610, 1612, 1613, 0, 1626, 0, 0, 3545,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1651, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1640, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1642, 0,
	0, 0, 1617, 1618, 1624, 1645, 1623, 1619, 0, 1616,
	1614, 1615, 1607, 1608, 1609, 1610, 1612, 1613, 0, 0,
	1632, 0, 3544, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1603, 1604,
	1627, 1636, 1637, 1638, 1646, 1647, 1648, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1639,
	1634, 0, 0, 0, 0, 1644, 0, 1606, 0, 0,
	0, 0, 0, 0, 1652, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1605,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1625,
	0, 0, 0, 0, 0, 0, 0, 1622, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1603, 1604, 0, 1636, 1637, 1638, 1646, 1647, 1648,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1639, 1634, 0, 0, 0, 1642, 0, 0,
	1606, 1617, 1618, 1624, 1645, 1623, 1619, 1652, 1616, 1614,
	1615, 1607, 1608, 1609, 1610, 1612, 1613, 0, 0, 0,
	0, 3250, 0, 1628, 1629, 1630, 1631, 0, 0, 0,
	0, 0, 1605, 1611, 0, 0, 0, 0, 0, 0,
	0, 0, 1625, 0, 0, 0, 0, 0, 0, 0,
	1622, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1643, 0, 0, 1653, 0, 0, 0, 0,
	0, 1633, 1635, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1649, 0, 1650,
	0, 0, 0, 0, 0, 0, 1620, 1621, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1641, 0, 1628, 1629, 1630, 1631,
	0, 0, 0, 0, 0, 1626, 1611, 0, 0, 0,
	1603, 1604, 0, 1636, 1637, 1638, 1646, 1647, 1648, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1651, 1639, 1634, 0, 0, 1643, 0, 0, 1653, 1606,
	0, 0, 0, 0, 1633, 1635, 1652, 1640, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1649, 0, 1650, 0, 0, 0, 0, 0, 0, 1620,
	1621, 1605, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1625, 0, 0, 0, 0, 0, 1641, 0, 1622,
	0, 0, 0, 0, 0, 0, 0, 0, 1626, 1632,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1627,
	0, 0, 0, 1651, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1640, 0, 0, 0, 1644, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1628, 1629, 1630, 1631, 0,
	0, 0, 0, 0, 0, 1611, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1632, 0, 1643, 0, 0, 1653, 0, 0,
	0, 0, 0, 1633, 1635, 0, 0, 0, 0, 0,
	0, 0, 1627, 0, 0, 0, 0, 0, 0, 1649,
	0, 1650, 0, 0, 0, 0, 0, 0, 1620, 1621,
	0, 0, 0, 0, 0, 0, 1642, 1644, 0, 0,
	1617, 1618, 1624, 1645, 1623, 1619, 1641, 1616, 1614, 1615,
	1607, 1608, 1609, 1610, 1612, 1613, 0, 1626, 0, 0,
	2820, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1651, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1640,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1642,
	0, 0, 0, 1617, 1618, 1624, 1645, 1623, 1619, 0,
	1616, 1614, 1615, 1607, 1608, 1609, 1610, 1612, 1613, 0,
	0, 1632, 0, 2819, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1603,
	1604, 1627, 1636, 1637, 1638, 1646, 1647, 1648, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1639, 1634, 0, 0, 0, 0, 1644, 0, 1606, 0,
	0, 0, 0, 0, 0, 1652, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1605, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1625, 0, 0, 0, 0, 0, 0, 0, 1622, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1603, 1604, 0, 1636, 1637, 1638, 1646, 1647,
	1648, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1639, 1634, 0, 0, 0, 1642, 0,
	0, 1606, 1617, 1618, 1624, 1645, 1623, 1619, 1652, 1616,
	1614, 1615, 1607, 1608, 1609, 1610, 1612, 1613, 0, 0,
	0, 0, 2818, 0, 1628, 1629, 1630, 1631, 0, 0,
	0, 0, 0, 1605, 1611, 0, 0, 0, 0, 0,
	0, 0, 0, 1625, 0, 0, 0, 0, 0, 0,
	0, 1622, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1643, 0, 0, 1653, 0, 0, 0,
	0, 0, 1633, 1635, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1649, 0,
	1650, 0, 0, 0, 0, 0, 0, 1620, 1621, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1641, 0, 1628, 1629, 1630,
	1631, 0, 0, 0, 0, 0, 1626, 1611, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1651, 0, 0, 0, 0, 1643, 0, 0, 1653,
	0, 0, 0, 0, 0, 1633, 1635, 0, 1640, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1649, 0, 1650, 0, 0, 0, 0, 0, 0,
	1620, 1621, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1641, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1626,
	1632, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1627, 0, 0, 0, 1651, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1640, 0, 0, 0, 1644, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1632, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1603, 1604, 1627, 1636, 1637, 1638, 1646, 1647, 1648,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1639, 1634, 0, 0, 0, 1642, 1644, 0,
	1606, 1617, 1618, 1624, 1645, 1623, 1619, 1652, 1616, 1614,
	1615, 1607, 1608, 1609, 1610, 1612, 1613, 0, 0, 0,
	0, 2817, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1605, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1625, 0, 0, 0, 0, 0, 0, 0,
	1622, 0, 0, 1603, 1604, 0, 1636, 1637, 1638, 1646,
	1647, 1648, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1639, 1634, 0, 0, 0, 0,
	2755, 0, 1606, 0, 0, 0, 0, 0, 0, 1652,
	1642, 0, 0, 0, 1617, 1618, 1624, 1645, 1623, 1619,
	0, 1616, 1614, 1615, 1607, 1608, 1609, 1610, 1612, 1613,
	0, 0, 2784, 0, 1605, 0, 1628, 1629, 1630, 1631,
	0, 0, 0, 0, 1625, 0, 1611, 4107, 0, 0,
	0, 0, 1622, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1643, 0, 0, 1653, 0,
	0, 0, 0, 2756, 1633, 1635, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1649, 0, 1650, 0, 0, 0, 0, 0, 0, 1620,
	1621, 0, 0, 0, 0, 0, 0, 0, 1628, 1629,
	1630, 1631, 0, 0, 0, 0, 0, 1641, 1611, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1626, 0,
	0, 0, 0, 1603, 1604, 0, 1636, 1637, 1638, 1646,
	1647, 1648, 0, 0, 0, 0, 0, 1643, 0, 0,
	1653, 0, 0, 1651, 1639, 1634, 1633, 1635, 0, 0,
	0, 0, 1606, 0, 0, 0, 0, 0, 0, 1652,
	1640, 0, 1649, 0, 1650, 0, 0, 0, 0, 0,
	0, 1620, 1621, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1605, 0, 4106, 0, 0, 1641,
	0, 0, 0, 0, 1625, 0, 0, 0, 0, 0,
	1626, 0, 1622, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1632, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1651, 0, 0, 0, 0,
	0, 0, 1627, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1640, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1644, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1628, 1629,
	1630, 1631, 0, 0, 0, 0, 0, 0, 1611, 0,
	2880, 0, 0, 2879, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1632, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1643, 0, 0,
	1653, 0, 0, 0, 1627, 0, 1633, 1635, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1649, 0, 1650, 0, 0, 0, 0, 1644,
	0, 1620, 1621, 0, 0, 0, 0, 0, 0, 1642,
	0, 0, 0, 1617, 1618, 1624, 1645, 1623, 1619, 1641,
	1616, 1614, 1615, 1607, 1608, 1609, 1610, 1612, 1613, 0,
	1626, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1651, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1640, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1642, 0, 0, 0, 1617, 1618, 1624, 1645, 1623,
	1619, 0, 1616, 1614, 1615, 1607, 1608, 1609, 1610, 1612,
	1613, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1632, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2382, 0, 0, 0, 0,
	0, 0, 1603, 1604, 1627, 1636, 1637, 1638, 1646, 1647,
	1648, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1639, 1634, 0, 0, 0, 2381, 1644,
	0, 1606, 0, 0, 0, 0, 0, 0, 1652, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1605, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1625, 0, 0, 0, 0, 0, 0,
	0, 1622, 0, 0, 1603, 1604, 0, 1636, 1637, 1638,
	1646, 1647, 1648, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1639, 1634, 0, 0, 0,
	0, 0, 0, 1606, 0, 0, 0, 0, 0, 0,
	1652, 1642, 0, 0, 0, 1617, 1618, 1624, 1645, 1623,
	1619, 0, 1616, 1614, 1615, 1607, 1608, 1609, 1610, 1612,
	1613, 0, 0, 0, 0, 1605, 0, 1628, 1629, 1630,
	1631, 0, 0, 0, 0, 1625, 0, 1611, 0, 0,
	0, 0, 0, 1622, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1643, 0, 0, 1653,
	0, 0, 0, 0, 0, 1633, 1635, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1649, 0, 1650, 0, 0, 0, 0, 0, 0,
	1620, 1621, 0, 0, 0, 0, 0, 0, 0, 1628,
	1629, 1630, 1631, 0, 0, 0, 0, 0, 1641, 1611,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1626,
	0, 0, 0, 0, 1603, 1604, 0, 1636, 1637, 1638,
	1646, 1647, 1648, 0, 0, 0, 0, 0, 1643, 0,
	0, 1653, 0, 0, 1651, 1639, 1634, 1633, 1635, 0,
	0, 0, 0, 1606, 0, 0, 0, 0, 0, 0,
	1652, 1640, 0, 1649, 0, 1650, 0, 0, 0, 0,
	0, 0, 1620, 1621, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1605, 0, 0, 0, 0,
	1641, 0, 0, 0, 0, 1625, 0, 0, 0, 0,
	0, 1626, 0, 1622, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1632, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1651, 0, 0, 0,
	0, 0, 0, 1627, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1640, 930, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1644, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1628,
	1629, 1630, 1631, 0, 0, 0, 0, 0, 0, 1611,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1632, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1643, 0,
	0, 1653, 0, 0, 0, 1627, 0, 1633, 1635, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1649, 0, 1650, 0, 0, 0, 0,
	1644, 0, 1620, 1621, 0, 0, 0, 0, 0, 0,
	1642, 0, 0, 0, 1617, 1618, 1624, 1645, 1623, 1619,
	1641, 1616, 1614, 1615, 1607, 1608, 1609, 1610, 1612, 1613,
	0, 1626, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1651, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1640, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1642, 0, 0, 0, 1617, 1618, 1624, 1645,
	1623, 1619, 0, 1616, 1614, 1615, 1607, 1608, 1609, 1610,
	1612, 1613, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1632, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1603, 1604, 1627, 1636, 1637, 1638, 1646,
	1647, 1648, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1639, 1634, 0, 0, 0, 0,
	1644, 0, 1606, 0, 0, 0, 0, 0, 0, 1652,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1605, 0, 0, 0, 3231, 0,
	0, 0, 0, 0, 1625, 0, 0, 0, 0, 0,
	0, 0, 1622, 0, 0, 1603, 1604, 0, 1636, 1637,
	1638, 1646, 1647, 1648, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1639, 1634, 0, 0,
	0, 2881, 0, 0, 1606, 0, 0, 0, 0, 0,
	0, 1652, 1642, 0, 0, 0, 1617, 1618, 1624, 1645,
	1623, 1619, 0, 1616, 1614, 1615, 1607, 1608, 1609, 1610,
	1612, 1613, 0, 0, 0, 0, 1605, 0, 1628, 1629,
	1630, 1631, 0, 0, 0, 0, 1625, 0, 1611, 0,
	0, 0, 0, 2886, 1622, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1643, 0, 0,
	1653, 0, 0, 0, 0, 0, 1633, 1635, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1649, 0, 1650, 0, 0, 0, 0, 0,
	0, 1620, 1621, 0, 0, 0, 0, 0, 0, 0,
	1628, 1629, 1630, 1631, 0, 0, 0, 0, 0, 1641,
	1611, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1626, 0, 0, 0, 0, 1603, 1604, 0, 1636, 1637,
	1638, 1646, 1647, 1648, 0, 0, 0, 0, 0, 1643,
	0, 0, 1653, 0, 0, 1651, 1639, 1634, 1633, 1635,
	0, 0, 0, 0, 1606, 0, 0, 0, 0, 0,
	0, 1652, 1640, 0, 1649, 0, 1650, 0, 0, 0,
	0, 0, 0, 1620, 1621, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1605, 0, 0, 0,
	0, 1641, 0, 0, 0, 0, 1625, 0, 0, 0,
	0, 0, 1626, 0, 1622, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1632, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1651, 0, 0,
	0, 0, 0, 0, 1627, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1640, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1644,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1628, 1629, 1630, 1631, 0, 0, 0, 0, 0, 0,
	1611, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1632, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1643,
	0, 0, 1653, 0, 0, 0, 1627, 0, 1633, 1635,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1649, 0, 1650, 0, 0, 0,
	0, 1644, 0, 1620, 1621, 0, 0, 0, 0, 0,
	0, 1642, 0, 0, 0, 1617, 1618, 1624, 1645, 1623,
	1619, 1641, 1616, 1614, 1615, 1607, 1608, 1609, 1610, 1612,
	1613, 0, 1626, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1651, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1640, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1642, 2848, 0, 0, 1617, 1618, 1624,
	1645, 1623, 1619, 0, 1616, 1614, 1615, 1607, 1608, 1609,
	1610, 1612, 1613, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1632, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1603, 1604, 1627, 1636, 1637, 1638,
	1646, 1647, 1648, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1639, 1634, 0, 0, 0,
	2821, 1644, 0, 1606, 0, 0, 0, 0, 0, 0,
	1652, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1605, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1625, 0, 0, 0, 0,
	0, 0, 0, 1622, 0, 0, 1603, 1604, 0, 1636,
	1637, 1638, 1646, 1647, 1648, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1639, 1634, 0,
	0, 0, 0, 0, 0, 1606, 0, 0, 0, 0,
	0, 0, 1652, 1642, 0, 0, 0, 1617, 1618, 1624,
	1645, 1623, 1619, 0, 1616, 1614, 1615, 1607, 1608, 1609,
	1610, 1612, 1613, 0, 0, 0, 0, 1605, 0, 1628,
	1629, 1630, 1631, 0, 0, 0, 0, 1625, 0, 1611,
	0, 0, 0, 0, 0, 1622, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1643, 0,
	0, 1653, 0, 0, 0, 0, 0, 1633, 1635, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1649, 0, 1650, 0, 0, 0, 0,
	0, 0, 1620, 1621, 0, 0, 0, 0, 0, 0,
	0, 1628, 1629, 1630, 1631, 0, 0, 0, 0, 0,
	1641, 1611, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1626, 0, 0, 0, 0, 1603, 1604, 0, 1636,
	1637, 1638, 1646, 1647, 1648, 0, 0, 0, 0, 0,
	1643, 0, 0, 1653, 0, 0, 1651, 1639, 1634, 1633,
	1635, 0, 0, 0, 0, 1606, 0, 0, 0, 0,
	0, 0, 1652, 1640, 0, 1649, 0, 1650, 0, 0,
	0, 0, 0, 0, 1620, 1621, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1605, 0, 0,
	0, 0, 1641, 0, 0, 0, 0, 1625, 0, 0,
	0, 0, 0, 1626, 0, 1622, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1632, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1651, 0,
	0, 0, 0, 0, 0, 1627, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1640, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1644, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1628, 1629, 1630, 1631, 0, 0, 0, 0, 0,
	0, 1611, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1632, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1643, 0, 0, 1653, 0, 0, 0, 1627, 0, 1633,
	1635, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1649, 0, 1650, 0, 0,
	0, 0, 1644, 0, 1620, 1621, 0, 0, 0, 0,
	0, 0, 1642, 0, 0, 0, 1617, 1618, 1624, 1645,
	1623, 1619, 1641, 1616, 1614, 1615, 1607, 1608, 1609, 1610,
	1612, 1613, 0, 1626, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1651, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1642, 0, 0, 0, 1617, 1618,
	1624, 1645, 1623, 1619, 0, 1616, 1614, 1615, 1607, 1608,
	1609, 1610, 1612, 1613, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1632, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1603, 1604, 1627, 1636, 1637,
	1638, 1646, 1647, 1648, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1634, 0, 0,
	0, 0, 1644, 0, 1606, 0, 0, 0, 0, 0,
	0, 1652, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1605, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1625, 0, 0, 0,
	0, 0, 0, 0, 1622, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1642, 0, 0, 0, 1617, 1618,
	1624, 1645, 1623, 1619, 0, 1616, 1614, 1615, 1607, 1608,
	1609, 1610, 1612, 1613, 0, 0, 0, 0, 0, 0,
	1628, 1629, 1630, 1631, 0, 0, 0, 0, 0, 0,
	1611, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1643,
	0, 0, 1653, 0, 0, 0, 0, 0, 1633, 1635,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1649, 0, 1650, 0, 0, 0,
	0, 0, 0, 1620, 1621, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1641, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1626, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1651, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1632, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1627, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1644, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1642, 0, 0, 0, 1617, 1618, 1624,
	1645, 1623, 1619, 0, 1616, 1614, 1615, 1607, 1608, 1609,
	1610, 1612, 1613,
}
var sqlPact = [...]int{

	5923, -1000, -1000, -1000, -1000, 272, -1000, -1000, 270, 269,
	265, 264, 262, 260, 259, 258, 257, -1000, -1000, -1000,
	-1000, -1000, -1000, 252, -1000, -1000, 246, -1000, 245, 241,
	237, -1000, -1000, 236, -1000, 235, -1000, -1000, -1000, -1000,
	215, 212, 211, 74342, 73865, 74813, 2096, 90947, 79535, 2070,
	66257, 90470, 65780, 89993, 89516, 2474, 210, -1000, 89039, 208,
	203, 198, -1000, 88562, -1000, 1658, -1000, 196, 4833, 54783,
	193, 189, 184, 2768, 178, -1000, 176, 175, -1000, 9930,
	1452, -1000, 174, 171, -1000, 8360, 6112, 78587, 167, 166,
	2193, 164, 163, 54305, 162, 161, 2150, 2661, -1000, -1000,
	1831, -1000, -1000, 160, 156, 155, 153, 152, 151, 147,
	146, 145, 143, -1000, 141, 138, 137, 131, 128, 125,
	124, 120, -1000, 119, 118, 116, 114, 111, 109, 108,
	107, 106, 105, 102, 101, -1000, 9217, 99, 1755, 1584,
	1581, 1577, 1575, 1571, 994, 96, 95, 94, 92, 90,
	89, 88, 87, 86, -1000, 83, 82, 81, 80, 79,
	78, 76, 73, 182, 72, 71, 68, 67, 64, 59,
	56, 2535, -1000, 1536, 1507, 25549, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 96599, 91418, 53, -51, 52, -1000, 3071, 1018,
	45210, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 351, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 546, 1986, 779, -1000, -1000, -1000, 88091,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2089, -123,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 777, -1000, 2084,
	199, 2031, -1000, -1000, -1000, -1000, -1000, 91418, -1000, 1037,
	-1000, -1000, 3450, 3447, 1877, 775, 87620, -1000, 1459, -1000,
	947, 27052, -1000, 1249, -1000, 27052, 350, -1000, -1000, -1000,
	-1000, -1000, -1000, 3441, 3440, 3438, 3437, -1000, -1000, 65303,
	19483, 64826, 64349, 87143, 18996, 73388, 72911, 86666, 60547, 1035,
	-1000, -1000, -1000, 1352, -1000, -1000, -1000, -1000, -1000, -1000,
	16, 58112, 3279, 91418, -1000, 333, -1000, -1000, -1000, -1000,
	-1000, -1000, 38791, 626, 38278, 722, 37765, 639, -1000, -1000,
	-1000, 60060, -1000, 3435, 3433, 1117, 3432, 2990, 96128, 1675,
	3431, 1787, 1294, 3430, 3427, 3426, 3424, 3420, 3418, 1354,
	86189, 2729, 85712, 1589, 59573, 1032, 72434, 74813, 2452, 85235,
	1328, 1324, -1000, -1000, -1000, -1000, 2831, 2659, 2630, 50984,
	-1000, -1000, 3412, 3406, 3398, 3397, 3396, 95657, 1669, 3395,
	2285, 3392, 3391, 3390, 3389, 3385, 3384, 3381, -1000, 71957,
	1029, 71480, 71003, 3111, 84758, 70526, 84281, 59086, 37252, 1505,
	-1000, -1000, -1000, 47132, 7383, 6334, 83804, 49079, 74813, 74813,
	-1000, -1000, -1000, -1000, -1000, 36739, 544, 36226, 1028, -1000,
	-1000, 47624, 2669, -1000, -1000, -1000, -1000, 35713, 385, 35200,
	790, 91418, -1000, 2728, 1843, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1957, 1535, 3294,
	58599, 1884, 1272, 3057, 2824, 2807, 1444, 3380, 2369, 2806,
	2796, 2795, 2786, 2750, 1782, 2395, 370, 25036, 2718, 1510,
	34687, 1440, 1472, 2748, 2747, 3307, 1867, 1842, 1918, 63872,
	3379, 3378, 3024, 2746, 2745, 2668, -1000, -1000, -1000, -1000,
	1392, -1000, -1000, -1000, -1000, -1000, 66728, -1000, -1000, 1200,
	-1000, -1000, 1200, -1000, -1000, -1000, -1000, -1000, 1285, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1536, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1948, -1000, 1858, -1000, -1000, 2482, 3043, 3043, 3043,
	3084, 511, 506, -1000, 182, -1000, -1000, 103335, -1000, -1000,
	39292, 39292, 39292, 39292, 39292, 39292, 39292, 1987, -1000, 773,
	-1000, -1000, 827, -1000, 771, 658, -1000, -1000, -1000, -1000,
	-1000, -1000, 770, -1000, -1000, -1000, -1000, -1000, -1000, 3279,
	-1000, 21970, -1000, -1000, -1000, 515, 769, 39292, -1000, -1000,
	3326, 3325, 1004, -1000, 331, 962, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2724, 766,
	765, -1000, 763, 758, 748, 747, 745, -1000, -1000, -1000,
	743, 741, 740, 739, 738, 735, 734, 733, -1000, 1914,
	-1000, -1000, -1000, -1000, -1000, -1000, 693, 689, 689, 689,
	-1000, 1025, -1000, -1000, -1000, 372, 684, 349, 683, 680,
	678, -1000, 732, 731, 730, 728, 726, 725, 724, 723,
	721, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1024, -1000, -1000,
	-1000, -1000, 15, 91418, -1000, 546, 15, -1000, -1000, 718,
	-1000, 29068, 29068, 29068, -1000, -1000, 2081, 39292, -1000, 2410,
	-1000, 21, 21, 897, 46162, -1000, 44240, 897, 442, 834,
	50506, -1000, 2667, -1000, -1000, 717, 330, -1000, -1000, -1000,
	-1000, 19968, 2666, 91418, 91418, 74813, 74813, 74813, 2931, 39292,
	-1000, -1000, 55254, 91418, 75284, 3210, 56196, 55254, 91418, 2723,
	-1000, 3017, -1000, -1000, 91418, -1000, 39292, -1000, 3207, 1434,
	61507, 3134, -2, -1000, -1000, -1000, -1000, -1000, -1000, 2259,
	2252, 1114, 2119, 1461, -1000, 27052, 2982, -1000, -1000, -1000,
	327, 19968, -1000, -1000, -1000, -1000, -1000, 3829, 2906, 1394,
	-1000, 2118, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1739, 2903, -1000, 1935, 2900, 1726, -1000, -1000, 2062,
	-1000, -1000, 3015, -1000, -1000, 1854, 2873, 25, -1000, -1000,
	2211, -1000, -1000, 1835, -1000, -1000, 995, 2872, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 70049, 48594, 47624,
	58112, 5, -1000, -1000, -1000, -1000, -12, -1000, 18509, 103335,
	-1000, -1000, -1000, -1000, 1756, 103335, 922, -1000, -1000, 2871,
	-1000, 103335, 892, -1000, -1000, 2870, -1000, 2722, -1000, -1000,
	-1000, -1000, 3377, -1000, 3376, 2188, 3375, 3374, 3373, -1000,
	1548, 1899, 3371, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	69578, 2078, -1000, -1000, 68624, -1000, 2187, -1000, 69101, 1027,
	-1000, 995, 2186, -1000, 78110, 984, -1000, 3370, 3109, 2459,
	995, 2185, -1000, -1000, -1000, -1000, -1000, 52406, -1000, 52406,
	-1000, 52406, -1000, 1465, -1000, 95186, 21, 21, 3279, -1000,
	-1000, -1000, -1000, -1000, 2869, 3369, 3367, 3366, -1000, 91418,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 186, 2868, -1000,
	-1000, 77639, 186, 2867, -1000, 186, 2860, -1000, 77168, -1000,
	-1000, 2066, 2859, -1000, 202, 2851, -1000, -1000, 190, 2849,
	-1000, -1000, -43, 2840, -1000, -1000, 103335, -1000, -1000, -1000,
	-17, -1000, -1000, -1000, 1018, -1000, 46640, -1000, 46640, 83327,
	61032, 968, 752, 53827, 103335, -1000, -1000, -1000, -1000, 103335,
	-1000, -1000, -1000, -223, -1000, -1000, 61032, 47624, 103335, -1000,
	-1000, -1000, -1000, 103335, -1000, -1000, -1000, 61032, 68624, -1000,
	82850, 68153, -1000, -1000, 1349, 2350, -1000, -1000, -1000, 968,
	61032, 61032, 61032, -1000, 82373, -1000, -1000, 1859, 1638, 3020,
	1846, 74813, -1000, 1880, -1000, -1000, -1000, 3045, -1000, 2721,
	-1000, 55725, 76697, -1000, 76226, -1000, 75755, -1000, 74813, -1000,
	74813, -1000, 3365, 3363, 3362, -1000, 3359, 3037, -1000, 103335,
	3034, -1000, 3358, 3129, 2718, 103335, -1000, 2830, 1595, 1574,
	91418, -1000, -1000, 91418, -1000, 91418, -1000, -1000, -1000, 1393,
	-1000, -1000, 2258, -1000, -1000, -1000, -1000, 74813, -1000, -1000,
	-1000, -1000, -1000, -1000, 2716, -1000, 1647, -1000, 1712, -1000,
	1348, -1000, -1000, 205, -1000, -1000, -2, -1000, 94715, -1000,
	2482, -1000, 91418, -1000, 2204, 2678, 2715, 1674, 2106, 2344,
	-1000, 34174, 2269, 41797, 2117, 182, -1000, -1000, 182, 182,
	26551, -1000, -1000, 56196, 56196, 19968, 1310, 39292, 39292, 39292,
	39292, 39292, 39292, 39292, 39292, 39292, 39292, 39292, 39292, 39292,
	39292, 39292, 39292, 39292, 39292, 39292, 39292, 39292, 39292, 39292,
	39292, 39292, 39292, 39292, 39292, 39292, 39292, 39292, 39292, 39292,
	39292, 39292, 1952, 39292, 1284, 39292, 39292, 39292, 39292, 2168,
	-1000, -1000, 1772, 587, 1825, -1000, 3256, 3256, 3256, 478,
	478, 103864, 103864, 528, 3357, 827, -1000, 39292, -1000, 57,
	39292, 20455, -1000, 506, 11178, 2260, -1000, 500, 20968, -1000,
	-1000, -1000, 21970, 658, 33661, 39292, 1011, 103335, -1000, -1000,
	1617, 3286, 18024, 2738, 2527, 716, 838, 835, 24523, 24010,
	23497, 22984, 830, 39292, 39292, 39292, 39292, 39292, 39292, 39292,
	39292, -1000, -1000, 3298, -1000, 3286, -1000, -1000, -1000, -1000,
	3286, 1309, 1305, 3286, -1000, 3286, 3286, 2317, 2317, 33160,
	32647, 32134, 42298, 31621, 39292, 22471, 31108, 30595, -1000, 91418,
	15, 3206, 39292, 185, -1000, 102031, -1000, 185, 185, 715,
	-20, 103335, 2333, 2333, 45686, 2120, 2002, 2002, 2002, -1000,
	897, 14115, 897, 81427, 2007, 897, 897, 315, 345, 499,
	43764, 2410, 81427, 800, 711, 50, 41, 37, -1000, -1000,
	36, 33, -1000, -1000, 74813, 707, 20455, 19968, 314, 1359,
	-22, 2405, 2403, 2402, -1000, 2389, 1683, -25, 1282, -36,
	-1000, 4184, -33, -1000, 1271, 313, 3286, -1000, -1000, -1000,
	-1000, -1000, 3356, 3355, -1000, 1022, 699, 698, 400, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 693, 689, 689,
	689, -1000, 372, 684, 349, 683, 680, 678, -1000, -1000,
	-1000, -1000, -1000, 2665, -12, 75284, 74813, 914, -38, 1120,
	-2, -1000, -1000, -1000, 61507, 1200, -1000, 1913, -1000, -1000,
	-1000, -1000, -1000, -1000, 1355, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1004, -1000, -1000, -1000, -1000, -1000, -1000, 3292,
	3290, 11, -1000, -1000, 19968, -1000, -3, 1639, 1653, -1000,
	63395, 2141, 3014, 3004, 1464, -1000, 1374, 1275, 3080, 66728,
	3161, 3178, 776, -1000, 2664, -1000, -1000, 936, 1635, 1542,
	1274, 66728, 1935, -1000, 56196, -1000, 2316, 3079, 1332, 1336,
	1332, 1332, 1346, -1000, 66728, 1540, 1273, -1000, 1256, -1000,
	-4, 3153, 3168, 216, -1000, 2663, 1254, -1000, -1000, 74813,
	19968, 1491, 1476, 1531, 1251, 9, -1000, 3149, 3145, 1248,
	1247, -1000, 1443, -1000, 61032, 1713, 2835, 901, 2501, 901,
	5, 58112, 91418, 286, -1000, 57, 39292, 39292, 57, 39292,
	57, 3128, -1000, -1000, 2828, -1000, -1000, -1000, 3354, 1832,
	2282, -1000, -1000, 676, 2181, 2650, 91418, 2418, 4, 74813,
	-1000, 2821, 1935, 2178, -1000, -1000, 67676, -1000, 2818, 546,
	2174, -1000, 691, 3353, -1000, 94244, -1000, 3017, 1319, 2814,
	1076, 759, 3204, -1000, 759, 52877, -1000, 91418, -1000, -1000,
	91418, -1000, -1000, -1000, 3352, -1000, 74813, -1000, -1000, 74813,
	186, 2812, -1000, 74813, -1000, 74813, 183, 2811, -1000, -1000,
	91418, -1000, 74813, 74813, -1000, 91418, 91418, 61032, 61032, 4440,
	62453, -41, -46, 495, -1000, 81902, 91418, 1075, 62924, 91418,
	2971, 991, 47624, -1000, -54, -223, 2495, 968, 968, 901,
	-1000, 901, -1000, 74813, 2711, -1000, 968, 968, 968, -1000,
	-1000, -1000, -1000, 3351, 3350, -1000, -1000, -1000, 993, 74813,
	91418, 74813, -1000, -1000, 91418, -1000, 91418, -1000, 993, 91418,
	993, 91418, 993, 91418, -1000, -1000, -1000, -1000, -1000, -1000,
	57, 39292, -1000, -1000, 3349, 1488, -1000, 2709, -1000, 2707,
	-1000, 62, -1000, -1000, -1000, -1000, -1000, 1779, 74813, 74813,
	74813, 74813, 91418, 74813, -1000, 66728, -1000, 2204, 2678, -1000,
	-1000, -1000, -1000, -1000, -1000, 1508, 2047, -1000, 2343, -1000,
	1408, -1000, -1000, -1000, 103335, 42783, -1000, -1000, 103335, 1875,
	-1000, 41296, 40795, -1000, -1000, 1582, 74813, 2424, -1000, 2424,
	-124, -1000, 101502, 2327, 74813, -1000, -1000, -1000, -1000, -1000,
	934, 573, 573, 1214, 1214, 1214, 1214, 3112, 414, 566,
	312, 4395, 4395, 7686, 7686, 7686, 7686, 7686, 4395, 302,
	478, 478, 302, 302, 302, 302, 302, 478, 478, 478,
	4395, 4395, 4395, 103864, 103505, 5417, 39292, 39292, 1243, 1768,
	587, 5380, 39292, 7502, 7502, 7502, 7502, -1000, 1902, -1000,
	-1000, -1000, -1000, 2639, 675, 42298, 42298, -1000, -1000, -1000,
	-1000, 21469, 39292, -1000, -1000, -1000, -1000, 30082, -1000, -1000,
	101061, -278, 494, -115, 8, -1000, 39292, 39292, 39292, 477,
	-1000, 285, 39292, 91418, -1000, 98162, 795, -191, -1000, -56,
	1364, -1000, 39292, -1000, -1000, 1240, -1000, 1237, 1225, 1224,
	-1000, 674, 474, -1000, 279, -1000, 1998, 670, 669, 39292,
	-1000, -1000, -1000, -1000, -1000, 100968, -1000, -1000, 100609, -1000,
	-1000, 100450, -1000, -1000, 100357, -1000, -1000, -1000, 103253, 97992,
	97910, 97592, 7593, 97548, 13514, -62, 467, -64, 466, 933,
	931, 462, 461, 460, -65, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -74, 458, -1000, 2636, -115, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 456, -1000, 454, -1000,
	102894, -115, 453, 5337, -1000, 42298, 42298, 42298, -1000, 452,
	-1000, 101672, -1000, 102724, 29581, 29581, 29581, 449, 102642, 39292,
	-115, -77, -1000, -80, -1000, -1000, 574, -83, 1007, 29068,
	44732, 19968, -1000, 1007, 1007, 39292, -1000, 39292, 2387, -1000,
	-1000, -1000, 2384, 1895, 2333, 45686, -1000, -1000, -1000, -1000,
	81427, -1000, 3279, 2523, -1000, 81427, -1000, -1000, 91418, 546,
	-1000, 81427, 81427, 19968, 897, -1000, 897, 81427, 709, -1000,
	-1000, -1000, -1000, -1000, 447, 49554, 8, 277, 19968, 995,
	-1000, 2411, 2411, 2411, 2411, -1000, -1000, 91418, 3237, -1000,
	1926, -1000, 56196, -1000, 823, 1077, 19968, -1000, -1000, -1000,
	668, -1000, 3286, 3286, -1000, 3286, 91418, 113, -1000, 27052,
	-1000, 1200, -1000, -1000, 1484, -1000, 1857, -1000, 1292, -1000,
	-1000, -1000, -1000, 27052, -1000, 2008, 91418, 91418, 74813, -1000,
	91418, -1000, 2173, 93773, 2161, 56196, 91418, -1000, -1000, 667,
	666, 2325, 2323, 1068, 91418, 91418, 2320, 93302, 92831, 91418,
	1887, 39292, 57641, 1951, 3056, 57, 57, -1000, -1000, 57,
	665, 1229, 74813, 74813, 91418, 74813, 1697, -1000, -1000, -1000,
	-1000, -1000, 67199, -1000, -1000, 3297, 3296, -1000, 1332, -1000,
	-1000, -1000, 1332, 1935, 1650, 91418, 74813, 91418, 1936, 57,
	57, -1000, -1000, 57, 664, 19968, 1908, -1000, 2697, 91418,
	3323, 91418, 91418, 91418, 57641, 3033, 92360, 91418, 91418, 57641,
	1443, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 57166, 1041,
	995, 1530, 1166, 66728, 990, 47624, 2470, -1000, -1000, 17539,
	-1000, 103335, 103335, -1000, 103335, -1000, 55254, 91418, -1000, 1019,
	91418, 62924, 958, 2809, 51935, -12, 968, 61032, 74813, 4,
	91418, -1000, 1935, 2808, 546, 2157, -1000, 61032, 3203, 2804,
	663, 3348, 3347, -1000, 2077, 2155, -1000, -1000, 91889, 2816,
	855, 91418, 1007, 45686, 1808, -1000, 50031, 1052, 91418, 1749,
	98, -1000, -1000, -1000, 48, 91418, -1000, 3346, -1000, -1000,
	186, -1000, 74813, 186, 186, -1000, 74813, 74813, 2066, -1000,
	202, -1000, 190, -1000, -43, -1000, -1000, 4440, 4440, 968,
	-134, 661, -1000, 896, 889, 48109, 61032, -85, -1000, -1000,
	-1000, -1000, -1000, 74813, 91418, 749, 2453, 91418, -86, -1000,
	275, 659, -1000, 3730, -1000, -1000, 991, 47624, 2634, -1000,
	-1000, 1003, -1000, 1343, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 20, -12, -12, -1000, 993, -1000, 993,
	-1000, 993, -1000, 103335, -1000, -1000, 1480, 1479, 91418, -1000,
	19968, 91418, 74813, 19968, 74813, 2676, 2675, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1093, -1000, 1875, 2046, -1000,
	658, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2237, -1000, 2, 26551, 2122, -1000, -1000, 74813, 19, 39292,
	39292, 4939, 4874, 39292, 42298, 42298, -1000, 39292, 4561, -1000,
	-1000, -1000, -1000, -1000, 2632, 657, 39292, 56196, 5949, 5096,
	-1000, 446, 13137, 302, -1000, 39292, -1000, 444, 28567, -1000,
	102113, -40, -93, -1000, 14613, -115, -94, -1000, -1000, 821,
	-1000, 2813, -1000, 39292, 102283, 2205, 1893, 1766, 1509, 3286,
	3322, 17054, -1000, 53352, 1008, 2010, 99998, -1000, -1000, -1000,
	-1000, 56196, 56196, 39292, 39292, -1000, 39292, 39292, 39292, -1000,
	-1000, -1000, 3286, 954, -1000, -1000, -1000, 954, -1000, -1000,
	1332, -1000, 1332, -1000, 39292, -1000, -1000, 2623, 39292, -1000,
	56196, 56196, 42298, 42298, 42298, 42298, 42298, 42298, 42298, 42298,
	42298, 42298, 42298, 42298, 42298, 42298, 42298, 42298, 42298, 42298,
	42298, 2326, 42298, 3254, 3254, 3254, -1000, 2608, 2623, 39292,
	39292, 56196, 443, 440, 439, -1000, 39292, -115, -1000, -1000,
	4440, 656, -1000, 2198, -1000, 2526, -1000, 39292, -1000, -176,
	-1000, 2410, -1000, -1000, 2526, 2526, -95, 103335, 45686, 45686,
	-1000, 655, 39292, 2375, -1000, -1000, 794, -270, -1000, 887,
	-1000, -1000, -1000, -1000, -1000, 546, -1000, -1000, -1000, 217,
	81427, 81427, 792, -1000, -96, -1000, -1000, -101, -1000, 3202,
	438, 19968, -1000, -1000, 3007, -1000, -1000, -1000, -1000, -1000,
	-1000, -12, 2030, 3320, -1000, 3295, 814, 787, 200, 3286,
	435, 427, 426, -12, 91418, -1000, -2, -1000, -1000, -1000,
	39292, -1000, -1000, 3011, 1158, 1150, -1000, -1000, 2797, -1000,
	2152, -1000, 1056, -1000, 1828, -1000, 39292, 39292, 651, 649,
	3345, 1722, 3344, 1069, 2791, 2066, 2790, 2066, -1000, -1000,
	951, -1000, 103335, -1000, -1000, -1000, -1000, 645, 643, -1000,
	-3, 1606, 1525, 1002, -1000, -1000, 39292, 39292, 80956, -1000,
	434, 3015, 18, -1000, -1000, 1521, 1146, -1000, -1000, -1000,
	-1000, 1935, 1519, 1140, -1000, -1000, -1000, -1000, 999, -1000,
	-1000, 39292, -1000, -4, 1139, 3144, 2147, 74813, 1137, -1000,
	1133, -1000, -1000, -1000, 3141, 2066, 2780, 1198, -1000, -1000,
	-1000, -1000, -1000, 56681, -1000, 91418, 74813, 1648, -1000, 2202,
	901, 990, 2603, -1000, 2417, 3343, 74813, 3342, 420, -102,
	-5, 56196, 3201, -1000, 2100, 590, 74813, 926, -1000, 3279,
	-1000, -1000, -1000, -1000, 74813, 3200, 2775, 995, 57, 74813,
	3319, -1000, -1000, 74813, 2771, 2074, 2143, 2270, 855, 61982,
	-1000, 995, 2009, -35, -1000, 1749, 28054, 3006, -103, -1000,
	-1000, -1000, 1007, 52877, 45686, 39292, 3340, -110, -1000, -1000,
	186, -1000, -1000, -1000, 183, -1000, -1000, -1000, -1000, -1000,
	-1000, 80010, 80010, 61032, 61032, 61032, 968, 91418, 91418, 62924,
	-1000, 640, 91418, 91418, 635, -1000, 91418, 91418, 3339, 61032,
	-7, 634, -1000, 886, 884, 881, -1000, -1000, -1000, -1000,
	-1000, -1000, -223, 57, -1000, 2028, 74813, 16569, -1000, -1000,
	-1000, -1000, -1000, 993, -1000, -1000, 1950, 2114, 1950, 1730,
	1707, -1000, 2037, -1000, -1000, -1000, -1000, 2383, 3021, 19968,
	3159, 7502, 39292, 39292, 491, 4972, 543, 7502, 39292, 39292,
	56196, 6738, -112, 39292, 39292, -1000, 39292, 785, 103335, 3318,
	39292, 417, 416, -1000, -1000, -1000, 3284, -1000, -1000, -1000,
	103335, 39292, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 412,
	-1000, 187, -1000, -1000, -1000, 97070, -1000, 39292, 395, 3077,
	-1000, 391, 390, 12548, 240, 99839, 99746, 99387, 383, -1000,
	-1000, 382, 380, 103335, 2608, 103335, -1000, -1000, 952, 952,
	1311, 1311, 1311, 1311, 3254, 1503, 497, 1043, 867, 867,
	867, 925, 810, 810, 867, 867, 867, 2598, 2274, 630,
	6134, -1000, -1000, 103335, 103335, 379, -1000, -1000, -1000, -115,
	376, 4440, -1000, 2521, 3075, 103335, -1000, 45686, 2521, 2521,
	-1000, -1000, 1895, 91418, 103335, 45686, -1000, 2523, -1000, 15109,
	-1000, 19968, -1000, -1000, -1000, -1000, 3279, -1000, 49554, -1000,
	623, -1000, 58, 3007, -1000, 871, -1000, -1000, -1000, 783,
	3338, 811, 19968, 375, -1000, -1000, -1000, -12, 103335, 91418,
	91418, 91418, 2767, -1000, 2393, -1000, 1068, 99228, -113, -1000,
	101502, 39292, 91418, -1000, -1000, 1802, 2365, 1107, -1000, 3044,
	91418, -1000, 91418, -1000, -1000, 91418, 91418, 74813, 91418, 2754,
	-122, 103335, -13, -1000, 870, -1000, 1318, -1000, 16084, 91418,
	74813, 91418, 74813, 2753, -125, 19968, -1000, 3314, 3313, 2766,
	3050, 3312, 91418, -1000, 91418, 74813, 2968, -1000, -1000, -1000,
	-1000, 1515, 1130, -16, 622, -1000, 869, -1000, -1000, 868,
	990, -1000, 61032, 47624, -1000, 546, -1000, 2442, -1000, 79058,
	2102, 57, -1000, 3336, 80485, 621, -1000, 2024, -1000, 782,
	1935, 57, 74813, -1000, -1000, 546, 368, -23, -1000, 1060,
	19968, 74813, 2765, 2276, 855, 61982, -1000, 1319, 2344, -1000,
	-32, -1000, 591, 57, 2009, -1000, -35, 103335, -1000, 865,
	-1000, -1000, -1000, -127, -1000, -1000, 367, -1000, 2967, 2965,
	-1000, 2544, 39292, 620, 614, 91418, 2964, -1000, -1000, -128,
	2581, 2581, 61032, 47624, 61032, 991, -1000, 2177, -1000, -1000,
	-1000, -1000, -1000, 19968, 1627, -1000, 610, 607, -1000, -1000,
	-1000, -1000, 3021, 7502, 7502, 39292, 39292, 39292, 7502, 6738,
	-135, -1000, 7502, 7502, -115, -1000, -1000, 102113, -1000, -1000,
	-1000, 103335, -1000, 15599, 1958, -1000, 99135, -1000, 26551, -1000,
	-1000, 39292, 39292, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 42298, 2592, 598, 56196, -1000, -1000, 364, 1005, 39292,
	39292, 2410, 1005, 1005, -1000, -136, -1000, -1000, -1000, 3279,
	58, -1000, -1000, 3335, 19968, -1000, 61032, 809, -1000, 3334,
	-1000, -1000, -1000, -1000, -1000, 91418, -1000, 91418, -1000, 19968,
	91418, 2605, 2135, -1000, -1000, 2319, 597, 42298, 74813, 874,
	-1000, 3225, 2580, 1783, 39292, 2122, -137, -138, 2134, -1000,
	-1000, 2126, 39292, -1000, 56196, 593, 2066, 2066, -144, -146,
	-1000, -1000, 39292, 1129, 91418, 27553, -1000, 3333, 3015, -1000,
	-1000, -1000, -1000, 39292, 1127, -1000, -1000, -1000, 3306, 2066,
	19968, -1000, 2066, 2066, 3050, 1103, 91418, 74813, 2212, 2212,
	61032, 47624, -1000, -43, 990, 3198, 1936, 2481, -1000, -1000,
	-1000, -1000, 2313, -1000, -1000, 91418, 2291, 971, -1000, -149,
	-1000, 863, 861, 62924, 958, 965, -1000, -1000, -1000, 546,
	3197, -1000, 3305, 592, 91418, 2060, 589, 19968, -1000, 855,
	61982, -1000, 2816, 1749, -1000, 2838, 91418, 3002, -1000, 2344,
	587, -1000, 968, 584, 582, 2974, 2974, -151, 39292, 39292,
	-154, 581, 968, -1000, -156, -1000, -1000, -1000, -1000, -44,
	-1000, 847, 845, -1000, -1000, 74813, 74813, 39292, 39292, -1000,
	7502, 7502, 7502, -1000, 358, -1000, -1000, 2009, 3073, -1000,
	-52, 98776, 98606, 895, 42298, 56196, -162, -1000, -1000, 91418,
	103335, -115, -1000, -1000, -1000, 710, -1000, -1000, 3332, -1000,
	-1000, 1834, -1000, -1000, -1000, 91418, 2140, -1000, 1067, 39292,
	6134, 580, 39292, -1000, 3186, -1000, 2432, 2620, 2442, 578,
	-1000, -1000, -1000, -1000, -1000, 1059, 1816, -1000, -1000, 103335,
	3050, 39292, -1000, -1000, 577, 556, 103335, 555, 852, 2584,
	-1000, -1000, -1000, 103335, 554, 3144, -1000, -1000, -1000, -1000,
	2066, 74813, -1000, -1000, -1000, -163, -1000, -1000, 1824, 57,
	958, -1000, 1967, 2102, 551, -1000, -1000, 2043, 2382, -1000,
	80485, 27052, 27052, 357, 3185, 965, -1000, 3261, -1000, 3179,
	57, -1000, 39292, -1000, 74813, 39292, 2059, 61982, -1000, 2270,
	-1000, 1280, -164, 91418, 1749, -1000, -1000, 61032, 61032, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1059, -169, -174, -1000, 61032, -1000, -1000, 2177, -1000, 91418,
	-1000, 91418, -1000, -1000, -177, -179, -1000, 2016, 39292, 26551,
	-1000, -1000, 895, -180, -1000, -61, -1000, 3176, -1000, -1000,
	-1000, -1000, 2764, 2519, 98524, 2225, 91418, 11917, -1000, 2591,
	-1000, -1000, 1936, 91418, 2442, 2517, 74813, 1066, -185, 1950,
	1950, 39292, 26050, 1963, 39292, -1000, -1000, 3050, -1000, 2557,
	3278, -1000, 2043, 74813, 91418, -1000, 3036, -1000, 2959, -1000,
	-1000, -1000, 2442, 57, -1000, -1000, 57, -1000, -186, 1060,
	-188, 74813, -1000, 2276, 1421, -1000, 1007, -1000, -1000, -196,
	-206, 1783, 1059, 966, -209, -1000, -211, -212, -1000, -1000,
	353, 40294, 40294, 40294, -115, -124, -1000, 91418, 548, 2637,
	982, -1000, 2052, 1725, 346, 1079, -1000, -1000, 2580, -214,
	-1000, 981, 546, -1000, 39292, 1059, -220, -1000, 1050, -221,
	-1000, 1047, -222, -1000, 2582, -1000, -228, 2066, 980, 3107,
	-1000, -1000, -1000, -1000, 545, -231, -1000, -1000, 2183, -1000,
	1936, 971, -1000, 1059, 541, 1783, 530, -1000, 52877, -1000,
	968, 968, 2442, 1783, 1007, 529, 968, -1000, -1000, -1000,
	2770, -1000, 43268, 2042, 1688, 101420, 2770, 2770, -1000, -1000,
	91418, 3098, -1000, 2057, 2055, 1432, -1000, -1000, -1000, -1000,
	-1000, -1000, 1007, -1000, 3091, 2225, 103335, 2442, -1000, 1950,
	2478, -1000, 1950, 2570, -1000, 1954, -1000, -1000, -1000, 2760,
	3264, 91418, -1000, 91418, 1681, 1673, 3331, 958, 2043, 1783,
	39292, 2442, 39292, -227, -1000, -1000, 1936, 2442, -1000, -1000,
	-1000, 1696, 3217, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 851, -1000, 2945, -1000, 1092, 1876, 1876, -1000, 850,
	2052, -1000, -1000, 527, -1000, 523, -1000, 1660, -1000, -1000,
	-234, -1000, -1000, 3330, -1000, 2043, -1000, 2442, -236, 1936,
	-239, -1000, 966, 1936, 1676, -1000, -1000, 2005, 39793, 39292,
	-1000, 3240, -1000, -1000, 2296, -1000, 39292, 2580, 39292, 39292,
	2018, 2064, -1000, -1000, 1936, 1059, 966, 1783, 1007, 966,
	-1000, -1000, -1000, 103335, -1000, -1000, -1000, 103335, -1000, -242,
	-247, 51460, -1000, -1000, -1000, 966, 1783, 1007, 2442, -1000,
	1007, 1936, 1125, -134, 80010, 1007, 2442, -1000, 1936, -1000,
	-1000, 519, -250, -1000, 1936, 966, 39292, -1000, 966, 1007,
	-253, 1007, -1000, 1936, -1000, -1000,
}
var sqlPgo = [...]int{

	0, 4065, 4064, 4063, 4060, 4059, 4058, 4057, 4054, 4051,
	4050, 4048, 4047, 4046, 4044, 4042, 4038, 4035, 4034, 4031,
	4028, 4025, 4024, 4023, 4022, 4021, 4020, 4018, 4016, 4015,
	4014, 4013, 4012, 4010, 4006, 4004, 4001, 3999, 3993, 3992,
	3991, 3990, 3989, 3985, 3981, 3976, 3970, 3968, 3964, 3961,
	3959, 3956, 41, 3955, 3954, 3943, 3942, 3941, 3937, 3936,
	3935, 3933, 3930, 3929, 3927, 3921, 3920, 3917, 3916, 3915,
	3912, 46, 3911, 237, 3910, 3906, 3903, 3902, 3892, 3891,
	3888, 3878, 3876, 3872, 3867, 3866, 233, 3864, 161, 3856,
	3855, 3850, 3849, 3847, 231, 3844, 3842, 3841, 3838, 240,
	3837, 3836, 3835, 3828, 3827, 3826, 3824, 3823, 3822, 62,
	130, 3821, 3820, 429, 3819, 3818, 3816, 3815, 3813, 3812,
	3811, 3810, 3808, 3805, 209, 3803, 229, 3802, 3801, 3800,
	3799, 3797, 3796, 3795, 3794, 3793, 3791, 3790, 3786, 3785,
	3784, 3783, 3777, 3776, 3775, 3771, 3768, 3767, 3765, 3763,
	3762, 3761, 3760, 3758, 3750, 3744, 3742, 3741, 236, 162,
	3740, 3739, 228, 227, 3738, 3737, 3730, 3726, 3725, 110,
	4, 30, 3724, 3723, 66, 67, 63, 80, 79, 75,
	3717, 91, 3715, 102, 43, 3712, 10, 2, 135, 201,
	6525, 196, 3711, 3708, 3707, 218, 160, 3706, 199, 3702,
	3701, 3700, 3699, 86, 68, 155, 150, 138, 147, 409,
	3698, 3696, 83, 59, 44, 33, 3695, 3693, 3692, 3227,
	103, 3690, 224, 200, 134, 3689, 3684, 3683, 1378, 3682,
	34, 3681, 180, 84, 107, 95, 97, 3680, 124, 21,
	3677, 143, 42, 3676, 127, 76, 64, 8403, 5323, 3675,
	96, 48, 88, 358, 151, 140, 170, 192, 166, 182,
	181, 139, 288, 3673, 214, 3672, 3161, 54, 137, 3671,
	3670, 3669, 61, 165, 85, 3668, 3667, 49, 1, 3,
	11, 142, 32, 101, 14, 3666, 19, 3665, 3664, 3662,
	3661, 24, 144, 3660, 239, 3658, 50, 38, 22, 3657,
	25, 179, 3656, 194, 111, 3653, 3650, 220, 175, 149,
	3649, 78, 189, 3647, 3646, 3644, 3643, 3640, 116, 27,
	100, 3633, 3631, 114, 203, 157, 3629, 40, 3628, 141,
	81, 122, 235, 105, 186, 99, 190, 154, 198, 3625,
	3622, 3621, 169, 3620, 3619, 185, 120, 3618, 3614, 172,
	244, 36, 55, 202, 57, 164, 136, 3612, 167, 3611,
	3610, 3609, 241, 152, 178, 15, 7, 69, 106, 31,
	5, 197, 128, 215, 92, 3608, 5396, 1990, 1593, 3606,
	3602, 115, 98, 53, 108, 132, 226, 52, 3601, 3600,
	168, 3597, 3595, 3594, 3593, 156, 3591, 3589, 3588, 113,
	117, 171, 3587, 77, 73, 16, 87, 276, 230, 82,
	187, 145, 217, 3586, 153, 3585, 51, 104, 3583, 174,
	213, 3581, 3574, 71, 3573, 123, 697, 45, 121, 3572,
	184, 3569, 3568, 3566, 3565, 3564, 3563, 3562, 225, 193,
	3559, 3558, 3557, 119, 159, 3554, 223, 146, 207, 89,
	37, 3553, 72, 2591, 3551, 163, 204, 56, 131, 3550,
	1265, 39, 0, 10273, 9038, 6819, 9937, 3547, 2480, 3546,
	3545, 3538, 177, 112, 3537, 3536, 3533, 93, 3532, 60,
	3530, 3529, 47, 3527, 17, 6, 8, 20, 18, 319,
	316, 3524, 3510, 90, 118, 125, 3509, 238, 188, 3508,
	3507, 3506, 3503, 74, 3502, 29, 3501, 26, 3499, 3497,
	35, 12, 28, 3496, 3492, 206, 3491, 208, 3490, 133,
	3488, 3159, 109, 3485, 3484, 222, 65, 3482, 219, 3481,
	3094, 3481, 3478, 3477, 13, 3476, 3474, 205, 148, 183,
	3473, 3472, 129, 3471, 3469, 3468, 216, 3467, 3464, 23,
	3461, 9, 3460, 3459, 173, 2925, 3458, 3457, 58, 3455,
	158,
}
var sqlR1 = [...]int{

	0, 1, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 3, 3, 3, 3, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 5, 11, 11, 7, 7, 7, 8,
	8, 8, 8, 39, 39, 9, 9, 9, 10, 10,
	6, 6, 6, 6, 6, 6, 6, 6, 6, 16,
	16, 28, 28, 17, 17, 30, 30, 18, 18, 31,
	31, 525, 525, 21, 33, 22, 34, 15, 526, 526,
	526, 526, 27, 23, 35, 25, 25, 25, 25, 25,
	172, 172, 172, 172, 20, 20, 29, 29, 206, 206,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 524, 524, 208, 208, 207, 202, 202,
	527, 527, 209, 209, 209, 211, 211, 13, 13, 13,
	13, 13, 13, 13, 13, 13, 427, 427, 427, 458,
	458, 458, 541, 541, 542, 542, 542, 542, 542, 112,
	112, 41, 41, 41, 41, 519, 519, 174, 174, 174,
	176, 176, 175, 175, 175, 175, 62, 62, 533, 533,
	534, 534, 532, 531, 531, 535, 535, 535, 173, 173,
	173, 108, 108, 108, 108, 109, 109, 110, 110, 177,
	177, 177, 179, 179, 178, 178, 178, 178, 178, 178,
	178, 178, 183, 95, 95, 95, 95, 95, 95, 95,
	95, 95, 90, 90, 460, 460, 461, 461, 168, 168,
	169, 169, 169, 169, 170, 170, 171, 171, 171, 55,
	180, 180, 182, 182, 181, 181, 43, 43, 43, 43,
	43, 43, 43, 44, 44, 44, 44, 44, 45, 45,
	45, 45, 45, 45, 46, 46, 46, 46, 46, 46,
	53, 53, 53, 53, 159, 159, 56, 56, 56, 56,
	56, 56, 56, 56, 56, 543, 543, 543, 543, 543,
	543, 543, 543, 543, 543, 543, 543, 543, 543, 543,
	543, 543, 543, 543, 544, 544, 545, 545, 546, 546,
	547, 547, 547, 547, 547, 547, 547, 547, 547, 547,
	547, 547, 547, 547, 547, 547, 547, 547, 58, 58,
	58, 58, 58, 58, 58, 58, 58, 58, 58, 58,
	58, 58, 58, 58, 58, 58, 68, 68, 293, 293,
	265, 265, 69, 69, 69, 70, 70, 71, 71, 57,
	57, 517, 517, 308, 308, 418, 418, 73, 73, 328,
	328, 74, 74, 74, 74, 74, 74, 75, 75, 75,
	75, 75, 75, 75, 76, 76, 76, 76, 76, 76,
	76, 76, 76, 76, 76, 76, 76, 76, 83, 83,
	83, 83, 83, 84, 84, 84, 81, 81, 81, 78,
	78, 78, 77, 77, 77, 82, 82, 82, 256, 256,
	80, 80, 80, 258, 258, 79, 79, 79, 309, 309,
	85, 85, 85, 85, 266, 86, 86, 86, 86, 86,
	86, 86, 86, 88, 88, 88, 88, 88, 88, 88,
	88, 88, 88, 88, 88, 88, 88, 88, 88, 88,
	88, 88, 88, 88, 88, 88, 88, 88, 88, 88,
	88, 88, 88, 88, 89, 89, 89, 89, 89, 89,
	89, 89, 89, 89, 89, 89, 420, 420, 87, 87,
	87, 388, 388, 91, 91, 91, 343, 343, 92, 92,
	92, 92, 92, 93, 93, 93, 93, 111, 111, 111,
	111, 521, 521, 301, 301, 222, 222, 222, 222, 101,
	101, 101, 101, 102, 102, 102, 103, 103, 164, 164,
	118, 118, 118, 118, 118, 117, 117, 117, 117, 117,
	117, 47, 47, 47, 48, 48, 49, 49, 50, 50,
	51, 51, 52, 52, 52, 52, 52, 120, 120, 538,
	538, 122, 119, 119, 119, 121, 121, 121, 121, 123,
	124, 124, 124, 124, 124, 124, 124, 124, 125, 125,
	452, 452, 317, 317, 450, 450, 469, 469, 451, 451,
	270, 270, 270, 270, 270, 271, 271, 271, 459, 459,
	459, 459, 459, 459, 126, 126, 126, 126, 126, 126,
	126, 126, 126, 126, 126, 126, 126, 126, 126, 126,
	126, 126, 126, 126, 126, 126, 126, 126, 126, 126,
	126, 126, 126, 126, 126, 126, 126, 126, 126, 126,
	126, 126, 126, 126, 126, 126, 126, 126, 126, 126,
	126, 126, 126, 126, 126, 126, 126, 126, 126, 126,
	126, 126, 126, 126, 165, 165, 166, 167, 167, 167,
	167, 146, 146, 146, 158, 158, 158, 158, 158, 158,
	158, 149, 149, 149, 136, 136, 127, 127, 127, 127,
	127, 131, 131, 131, 131, 131, 131, 131, 131, 128,
	128, 138, 138, 138, 138, 138, 132, 132, 133, 133,
	135, 135, 137, 137, 137, 137, 137, 137, 137, 137,
	137, 129, 129, 129, 129, 140, 140, 140, 140, 350,
	350, 350, 139, 139, 139, 139, 139, 139, 139, 139,
	139, 139, 139, 157, 157, 157, 157, 157, 157, 536,
	536, 537, 537, 153, 153, 153, 153, 153, 153, 402,
	402, 147, 147, 147, 147, 152, 152, 152, 152, 333,
	333, 144, 144, 144, 145, 145, 145, 150, 150, 151,
	148, 148, 154, 154, 154, 154, 130, 130, 130, 548,
	548, 548, 155, 155, 143, 143, 156, 156, 156, 156,
	156, 156, 156, 156, 142, 142, 142, 141, 141, 141,
	141, 134, 518, 518, 515, 515, 515, 515, 515, 515,
	515, 515, 516, 516, 520, 520, 96, 96, 96, 96,
	96, 104, 104, 104, 104, 104, 97, 97, 97, 97,
	97, 99, 99, 98, 98, 98, 98, 63, 63, 63,
	14, 14, 14, 64, 64, 186, 186, 186, 187, 187,
	278, 278, 278, 278, 184, 184, 185, 185, 65, 65,
	549, 549, 549, 528, 528, 528, 529, 529, 529, 529,
	529, 529, 272, 272, 273, 273, 368, 368, 368, 368,
	368, 276, 276, 276, 277, 277, 277, 277, 277, 277,
	277, 277, 277, 279, 279, 210, 210, 210, 282, 283,
	283, 280, 280, 281, 281, 281, 285, 285, 284, 287,
	287, 286, 367, 478, 478, 480, 480, 480, 480, 480,
	480, 480, 482, 482, 482, 482, 482, 482, 482, 482,
	482, 482, 482, 550, 550, 476, 476, 476, 477, 472,
	472, 473, 473, 473, 473, 473, 274, 274, 275, 275,
	275, 275, 474, 475, 299, 299, 405, 479, 479, 481,
	481, 483, 551, 551, 551, 551, 551, 551, 552, 552,
	552, 366, 366, 365, 365, 291, 291, 484, 484, 484,
	484, 485, 485, 485, 485, 485, 488, 487, 486, 486,
	486, 486, 486, 67, 67, 67, 330, 330, 329, 329,
	331, 331, 331, 331, 331, 331, 331, 331, 331, 331,
	331, 331, 331, 331, 331, 161, 161, 225, 225, 61,
	61, 61, 12, 12, 12, 530, 530, 530, 66, 66,
	66, 66, 66, 66, 224, 224, 224, 224, 224, 224,
	523, 523, 522, 522, 226, 226, 554, 554, 72, 72,
	72, 72, 72, 72, 72, 421, 421, 422, 422, 60,
	60, 60, 60, 60, 351, 351, 349, 349, 348, 348,
	298, 298, 404, 230, 230, 203, 203, 203, 26, 19,
	19, 24, 24, 37, 37, 37, 37, 40, 40, 36,
	36, 36, 36, 38, 38, 32, 32, 539, 539, 540,
	540, 100, 100, 105, 105, 105, 105, 105, 106, 106,
	106, 106, 107, 107, 107, 107, 116, 116, 160, 160,
	160, 160, 160, 160, 160, 42, 42, 42, 42, 54,
	54, 54, 54, 114, 556, 556, 556, 115, 115, 115,
	555, 555, 223, 223, 362, 362, 363, 363, 557, 557,
	364, 364, 364, 364, 217, 216, 218, 218, 59, 59,
	59, 212, 212, 213, 213, 214, 214, 215, 215, 558,
	558, 94, 94, 94, 163, 163, 264, 264, 264, 358,
	358, 358, 292, 292, 236, 236, 361, 361, 359, 359,
	359, 359, 327, 327, 327, 162, 162, 306, 306, 319,
	319, 320, 320, 415, 415, 321, 113, 113, 190, 190,
	188, 188, 188, 188, 188, 188, 188, 188, 195, 195,
	196, 196, 197, 197, 198, 199, 199, 199, 199, 310,
	310, 200, 200, 200, 189, 189, 189, 191, 191, 191,
	191, 191, 191, 191, 194, 194, 194, 194, 201, 201,
	201, 193, 193, 495, 495, 495, 497, 497, 499, 499,
	498, 498, 494, 494, 496, 496, 553, 553, 332, 332,
	332, 289, 290, 288, 288, 296, 296, 294, 295, 295,
	297, 297, 403, 403, 403, 204, 204, 204, 324, 324,
	324, 324, 325, 325, 354, 354, 352, 352, 352, 352,
	353, 353, 355, 355, 355, 356, 356, 357, 357, 323,
	323, 384, 384, 192, 192, 192, 303, 303, 303, 304,
	304, 374, 374, 374, 374, 374, 374, 375, 375, 373,
	373, 373, 373, 406, 406, 406, 406, 406, 406, 406,
	406, 406, 407, 408, 408, 305, 305, 409, 360, 360,
	513, 513, 513, 514, 514, 401, 401, 410, 410, 410,
	410, 410, 410, 399, 399, 400, 400, 416, 417, 417,
	336, 336, 336, 336, 334, 334, 337, 337, 337, 337,
	335, 335, 411, 411, 411, 411, 326, 326, 412, 412,
	412, 412, 413, 369, 370, 370, 423, 423, 423, 423,
	425, 302, 302, 302, 302, 302, 471, 470, 470, 424,
	424, 424, 424, 424, 424, 424, 424, 424, 439, 439,
	439, 439, 439, 439, 439, 439, 440, 440, 440, 440,
	440, 440, 440, 426, 426, 426, 426, 426, 430, 430,
	430, 429, 429, 429, 429, 429, 429, 429, 429, 429,
	429, 429, 431, 431, 436, 436, 437, 437, 437, 432,
	433, 438, 438, 438, 438, 559, 559, 442, 442, 434,
	434, 434, 434, 434, 434, 434, 434, 434, 428, 428,
	428, 435, 435, 435, 345, 345, 345, 345, 345, 345,
	345, 345, 345, 345, 345, 345, 345, 344, 344, 346,
	346, 376, 376, 376, 376, 376, 376, 376, 376, 376,
	376, 376, 376, 376, 376, 376, 376, 376, 376, 376,
	376, 376, 376, 376, 376, 376, 376, 376, 376, 376,
	376, 376, 376, 376, 376, 376, 376, 376, 376, 376,
	376, 376, 376, 376, 376, 376, 376, 376, 376, 376,
	376, 376, 376, 376, 376, 376, 376, 376, 376, 376,
	376, 376, 376, 376, 376, 376, 376, 376, 376, 376,
	376, 376, 376, 376, 376, 376, 376, 376, 376, 376,
	376, 376, 376, 376, 376, 376, 376, 376, 376, 377,
	377, 377, 377, 377, 377, 377, 377, 377, 377, 377,
	377, 377, 377, 377, 377, 377, 377, 377, 377, 377,
	377, 377, 377, 377, 377, 377, 377, 377, 378, 378,
	378, 378, 379, 379, 379, 379, 379, 379, 379, 379,
	379, 379, 379, 379, 379, 379, 379, 379, 379, 379,
	379, 379, 379, 379, 379, 379, 379, 489, 489, 489,
	489, 489, 489, 489, 489, 380, 380, 492, 492, 493,
	493, 490, 490, 490, 490, 490, 490, 490, 490, 490,
	490, 490, 490, 490, 490, 490, 490, 490, 490, 490,
	490, 490, 490, 490, 491, 491, 491, 491, 491, 491,
	491, 491, 491, 491, 491, 491, 491, 491, 491, 491,
	491, 491, 491, 491, 491, 491, 491, 491, 491, 491,
	491, 491, 491, 491, 491, 491, 491, 491, 491, 491,
	500, 500, 501, 501, 503, 503, 504, 504, 505, 506,
	506, 506, 507, 508, 508, 502, 502, 509, 509, 509,
	509, 510, 510, 511, 511, 511, 511, 511, 512, 512,
	512, 512, 512, 390, 390, 391, 391, 397, 397, 397,
	269, 269, 269, 269, 269, 269, 269, 269, 269, 269,
	269, 269, 269, 269, 269, 269, 227, 227, 227, 227,
	227, 315, 315, 313, 313, 313, 316, 316, 314, 314,
	312, 312, 311, 311, 387, 387, 385, 385, 389, 389,
	338, 338, 441, 441, 441, 441, 441, 441, 441, 441,
	339, 339, 339, 347, 340, 340, 341, 341, 341, 341,
	341, 381, 382, 342, 342, 342, 383, 383, 392, 396,
	396, 395, 394, 394, 393, 393, 371, 371, 372, 372,
	322, 322, 560, 560, 318, 318, 414, 414, 414, 414,
	268, 268, 307, 307, 267, 267, 259, 259, 260, 260,
	260, 260, 300, 300, 398, 398, 443, 443, 444, 444,
	445, 445, 446, 446, 447, 448, 449, 386, 386, 246,
	245, 233, 234, 244, 243, 242, 232, 235, 239, 240,
	241, 237, 238, 252, 251, 250, 257, 248, 249, 419,
	231, 261, 261, 262, 262, 262, 263, 263, 263, 263,
	228, 228, 229, 229, 253, 253, 254, 255, 255, 247,
	247, 247, 219, 219, 219, 220, 220, 221, 221, 457,
	457, 454, 454, 454, 455, 455, 455, 456, 456, 456,
	456, 453, 453, 453, 453, 453, 462, 462, 462, 462,
	462, 462, 462, 462, 462, 462, 462, 462, 462, 462,
	462, 462, 462, 462, 462, 462, 462, 462, 462, 462,
	462, 462, 462, 462, 462, 462, 462, 462, 462, 462,
	462, 462, 462, 462, 462, 462, 462, 462, 462, 462,
	462, 462, 462, 462, 462, 462, 462, 462, 462, 462,
	462, 462, 462, 462, 462, 462, 462, 462, 462, 462,
	462, 462, 462, 462, 462, 462, 462, 462, 462, 462,
	462, 462, 462, 462, 462, 462, 462, 462, 462, 462,
	462, 462, 462, 462, 462, 462, 462, 462, 462, 462,
	462, 462, 462, 462, 462, 462, 462, 462, 462, 462,
	462, 462, 462, 462, 462, 462, 462, 462, 462, 462,
	462, 462, 462, 462, 462, 462, 462, 462, 462, 462,
	462, 462, 462, 462, 462, 462, 462, 462, 462, 462,
	462, 462, 462, 462, 462, 462, 462, 462, 462, 462,
	462, 462, 462, 462, 462, 462, 462, 462, 462, 462,
	462, 462, 462, 462, 462, 462, 462, 462, 462, 462,
	462, 462, 462, 462, 462, 462, 462, 462, 462, 462,
	462, 462, 462, 462, 462, 462, 462, 462, 462, 462,
	462, 462, 462, 462, 462, 462, 462, 462, 462, 462,
	462, 462, 462, 462, 462, 462, 462, 462, 462, 462,
	462, 462, 462, 462, 462, 462, 462, 462, 462, 462,
	462, 462, 462, 462, 462, 462, 462, 462, 462, 462,
	462, 462, 462, 462, 462, 462, 462, 462, 462, 462,
	462, 462, 462, 462, 462, 462, 462, 462, 462, 462,
	462, 462, 462, 462, 462, 462, 462, 462, 462, 462,
	462, 462, 462, 462, 462, 462, 462, 462, 462, 462,
	462, 462, 462, 462, 462, 462, 462, 462, 462, 462,
	462, 462, 462, 462, 462, 462, 462, 462, 466, 466,
	466, 466, 466, 466, 466, 466, 466, 466, 466, 466,
	466, 466, 466, 466, 466, 466, 466, 466, 466, 466,
	466, 466, 466, 466, 466, 466, 466, 466, 466, 466,
	466, 466, 466, 466, 466, 466, 466, 466, 466, 466,
	466, 466, 466, 466, 466, 466, 466, 466, 466, 466,
	463, 463, 464, 464, 464, 464, 464, 464, 464, 464,
	464, 464, 464, 464, 464, 464, 464, 464, 464, 465,
	467, 467, 467, 467, 467, 467, 467, 467, 467, 467,
	467, 467, 467, 467, 467, 467, 467, 467, 467, 467,
	467, 467, 467, 467, 467, 467, 467, 467, 467, 467,
	467, 467, 467, 467, 467, 467, 467, 467, 467, 467,
	467, 467, 467, 467, 467, 467, 467, 467, 467, 467,
	467, 467, 467, 467, 467, 467, 467, 467, 467, 467,
	467, 467, 467, 467, 467, 467, 467, 467, 467, 467,
	467, 467, 467, 467, 467, 467, 467, 467, 467, 467,
	468, 468,
}
var sqlR2 = [...]int{

	0, 1, 1, 1, 1, 2, 1, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 1, 1, 1,
	1, 0, 1, 1, 2, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 3, 1, 3, 1, 1, 3, 1,
	1, 1, 3, 4, 6, 1, 1, 3, 1, 3,
	1, 1, 1, 1, 1, 1, 1, 1, 3, 4,
	6, 4, 6, 6, 9, 6, 9, 6, 5, 6,
	5, 1, 1, 5, 5, 6, 6, 4, 4, 4,
	4, 3, 4, 4, 4, 7, 7, 9, 8, 9,
	5, 3, 5, 7, 4, 12, 4, 12, 1, 3,
	5, 5, 2, 5, 3, 6, 4, 6, 5, 6,
	6, 4, 8, 3, 4, 10, 3, 6, 4, 3,
	1, 3, 3, 2, 1, 1, 3, 1, 3, 2,
	2, 0, 1, 1, 0, 2, 0, 7, 10, 8,
	6, 6, 6, 9, 4, 3, 2, 2, 0, 1,
	1, 1, 1, 3, 6, 4, 6, 7, 9, 5,
	2, 6, 8, 7, 2, 0, 1, 2, 5, 0,
	1, 3, 3, 1, 1, 3, 12, 3, 1, 0,
	1, 1, 2, 2, 1, 3, 3, 0, 5, 7,
	0, 5, 6, 8, 2, 1, 3, 1, 3, 2,
	5, 0, 1, 3, 3, 3, 3, 1, 1, 1,
	1, 1, 1, 6, 4, 9, 7, 12, 12, 12,
	9, 2, 7, 2, 1, 1, 1, 3, 3, 0,
	3, 1, 3, 1, 1, 3, 2, 5, 0, 6,
	2, 0, 1, 2, 3, 1, 1, 2, 1, 2,
	1, 2, 2, 3, 3, 3, 3, 3, 3, 5,
	3, 3, 5, 3, 3, 5, 3, 3, 5, 3,
	6, 6, 6, 6, 1, 1, 1, 2, 1, 1,
	2, 1, 2, 1, 2, 3, 3, 4, 3, 4,
	7, 4, 4, 4, 3, 5, 7, 3, 3, 4,
	3, 3, 3, 3, 2, 0, 1, 0, 1, 0,
	3, 3, 3, 3, 3, 6, 4, 4, 4, 3,
	5, 3, 3, 3, 3, 3, 3, 3, 1, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 4,
	1, 2, 1, 2, 1, 2, 7, 3, 2, 0,
	1, 3, 3, 1, 0, 1, 2, 2, 1, 6,
	5, 1, 2, 1, 3, 2, 0, 9, 3, 2,
	0, 2, 2, 2, 2, 2, 2, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 4, 6,
	5, 7, 3, 4, 6, 3, 4, 6, 3, 5,
	7, 3, 4, 6, 3, 4, 6, 3, 1, 3,
	4, 6, 3, 1, 3, 3, 5, 3, 1, 3,
	2, 2, 2, 2, 1, 2, 2, 5, 3, 3,
	6, 6, 3, 1, 1, 2, 1, 1, 1, 2,
	1, 1, 2, 1, 2, 1, 2, 1, 1, 1,
	2, 1, 1, 2, 1, 1, 1, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 1, 1, 2, 1, 2, 1, 3, 5, 7,
	2, 3, 0, 3, 5, 2, 3, 0, 2, 3,
	2, 3, 2, 6, 4, 7, 2, 6, 4, 7,
	2, 1, 1, 1, 3, 1, 1, 1, 1, 1,
	2, 1, 2, 2, 3, 2, 4, 3, 2, 2,
	1, 2, 1, 3, 3, 1, 2, 1, 2, 1,
	2, 1, 1, 3, 5, 4, 6, 4, 3, 0,
	1, 3, 2, 4, 2, 4, 1, 6, 3, 1,
	1, 5, 3, 2, 6, 3, 3, 4, 4, 3,
	1, 3, 2, 3, 3, 1, 3, 1, 2, 1,
	1, 2, 2, 3, 1, 1, 1, 1, 1, 3,
	2, 2, 1, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 2, 2, 1, 3, 3, 3,
	3, 2, 3, 3, 1, 1, 1, 1, 1, 2,
	2, 5, 7, 3, 3, 3, 4, 5, 5, 5,
	3, 4, 4, 3, 4, 4, 3, 4, 4, 5,
	3, 5, 5, 5, 7, 3, 3, 3, 2, 3,
	4, 3, 5, 3, 6, 5, 6, 3, 5, 6,
	3, 4, 3, 4, 3, 3, 4, 4, 5, 0,
	1, 1, 3, 2, 4, 3, 3, 5, 3, 4,
	3, 5, 3, 3, 4, 4, 5, 3, 3, 1,
	1, 0, 2, 5, 4, 6, 4, 6, 4, 1,
	0, 3, 4, 4, 5, 7, 5, 3, 3, 2,
	0, 4, 2, 3, 4, 2, 3, 3, 3, 4,
	3, 3, 4, 3, 3, 3, 3, 4, 3, 1,
	1, 1, 2, 3, 2, 3, 6, 6, 7, 9,
	7, 9, 3, 4, 10, 10, 3, 5, 5, 5,
	3, 5, 2, 0, 1, 1, 1, 1, 3, 2,
	2, 2, 2, 1, 2, 0, 1, 2, 1, 2,
	2, 1, 2, 1, 2, 2, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 6, 3,
	6, 6, 3, 11, 14, 1, 2, 3, 0, 4,
	0, 4, 5, 4, 3, 3, 1, 3, 10, 13,
	0, 2, 3, 1, 1, 0, 1, 2, 2, 2,
	2, 1, 1, 0, 1, 3, 1, 1, 1, 1,
	3, 3, 3, 0, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 8, 0, 1, 1, 0, 2, 1,
	0, 1, 0, 9, 9, 3, 1, 3, 7, 1,
	3, 11, 3, 2, 0, 3, 1, 2, 2, 3,
	2, 6, 2, 1, 1, 2, 8, 4, 2, 5,
	5, 5, 2, 1, 3, 11, 12, 8, 5, 3,
	1, 5, 9, 7, 11, 3, 3, 0, 2, 4,
	3, 3, 1, 5, 1, 3, 1, 2, 0, 1,
	2, 2, 0, 1, 3, 3, 2, 2, 1, 1,
	1, 4, 0, 6, 0, 3, 0, 2, 2, 2,
	0, 1, 1, 2, 2, 0, 3, 3, 2, 1,
	1, 2, 2, 5, 8, 4, 1, 0, 1, 2,
	2, 1, 2, 3, 3, 2, 2, 3, 2, 2,
	2, 2, 2, 3, 1, 4, 2, 2, 2, 4,
	7, 3, 4, 6, 3, 1, 1, 1, 8, 10,
	11, 7, 10, 5, 1, 1, 1, 1, 1, 1,
	1, 2, 2, 0, 3, 3, 0, 1, 8, 3,
	6, 6, 5, 3, 4, 1, 0, 1, 3, 17,
	20, 16, 19, 4, 2, 0, 1, 0, 1, 0,
	1, 3, 3, 2, 0, 1, 1, 0, 6, 6,
	8, 6, 8, 6, 7, 8, 9, 6, 8, 6,
	7, 8, 9, 6, 8, 6, 8, 1, 0, 2,
	0, 2, 2, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 2, 2, 1, 2,
	1, 2, 1, 2, 1, 3, 2, 3, 2, 2,
	2, 2, 2, 2, 1, 1, 0, 2, 4, 2,
	1, 0, 2, 1, 1, 0, 1, 3, 1, 0,
	1, 1, 1, 1, 2, 3, 2, 2, 8, 11,
	3, 3, 0, 3, 0, 3, 0, 3, 0, 1,
	0, 6, 7, 3, 6, 3, 1, 3, 1, 1,
	4, 2, 1, 3, 1, 3, 8, 5, 3, 4,
	3, 0, 2, 2, 0, 10, 3, 2, 0, 1,
	3, 1, 1, 3, 3, 5, 1, 1, 3, 3,
	1, 2, 4, 4, 2, 3, 5, 5, 1, 3,
	1, 0, 1, 2, 3, 2, 4, 2, 3, 0,
	2, 0, 2, 1, 2, 1, 1, 1, 2, 1,
	2, 1, 2, 1, 8, 8, 8, 2, 4, 4,
	4, 2, 2, 2, 2, 3, 1, 3, 1, 2,
	6, 7, 1, 0, 1, 0, 1, 0, 1, 1,
	0, 1, 5, 1, 0, 1, 0, 3, 3, 5,
	1, 3, 3, 4, 5, 2, 2, 0, 2, 2,
	1, 1, 1, 0, 1, 0, 2, 2, 5, 4,
	2, 3, 1, 1, 1, 1, 1, 1, 1, 3,
	0, 2, 0, 4, 2, 5, 3, 2, 0, 1,
	3, 3, 5, 1, 1, 1, 1, 1, 3, 2,
	4, 4, 0, 4, 4, 3, 4, 1, 5, 3,
	4, 5, 5, 1, 5, 1, 3, 2, 0, 3,
	0, 2, 3, 1, 3, 2, 0, 3, 5, 6,
	4, 6, 4, 3, 2, 1, 0, 5, 1, 0,
	2, 2, 2, 1, 1, 0, 1, 1, 1, 0,
	4, 2, 1, 2, 2, 4, 1, 3, 1, 2,
	3, 2, 2, 2, 1, 0, 2, 5, 7, 2,
	1, 2, 4, 3, 5, 0, 1, 3, 5, 1,
	2, 1, 1, 1, 1, 1, 2, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 4,
	4, 6, 6, 1, 1, 1, 1, 1, 3, 5,
	0, 1, 1, 1, 1, 1, 2, 2, 2, 2,
	2, 1, 3, 0, 5, 4, 1, 2, 1, 4,
	1, 1, 2, 1, 1, 1, 1, 1, 0, 1,
	2, 5, 1, 4, 2, 5, 1, 4, 3, 3,
	0, 1, 2, 4, 1, 1, 1, 1, 1, 1,
	3, 3, 3, 3, 3, 3, 3, 1, 0, 1,
	4, 1, 3, 3, 3, 5, 2, 2, 2, 2,
	2, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 2, 2, 3, 5, 4,
	6, 3, 5, 4, 6, 4, 6, 5, 7, 3,
	3, 3, 3, 3, 4, 3, 2, 4, 2, 3,
	3, 4, 3, 4, 3, 4, 5, 6, 6, 7,
	6, 7, 6, 7, 3, 4, 4, 1, 3, 1,
	3, 3, 2, 2, 2, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 5, 6, 6, 7, 1, 2,
	1, 2, 1, 1, 1, 1, 1, 6, 1, 1,
	1, 1, 1, 1, 2, 1, 5, 5, 6, 3,
	1, 1, 1, 2, 2, 2, 4, 3, 5, 6,
	8, 6, 5, 4, 3, 2, 2, 4, 1, 1,
	1, 5, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 6, 6, 8, 8, 6, 4, 6,
	6, 6, 4, 1, 3, 3, 3, 3, 3, 4,
	3, 3, 4, 3, 3, 4, 3, 3, 4, 3,
	3, 3, 4, 3, 4, 3, 4, 3, 4, 4,
	3, 6, 5, 5, 5, 4, 4, 3, 4, 3,
	5, 0, 5, 0, 2, 0, 1, 3, 3, 2,
	2, 0, 6, 1, 0, 3, 0, 3, 3, 3,
	0, 1, 4, 2, 2, 2, 2, 2, 3, 2,
	2, 3, 0, 4, 1, 1, 5, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 2, 1,
	2, 2, 3, 1, 2, 3, 2, 3, 2, 3,
	1, 0, 1, 3, 1, 3, 3, 3, 1, 3,
	3, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	4, 3, 1, 2, 3, 0, 3, 3, 2, 2,
	1, 2, 2, 3, 2, 1, 1, 1, 5, 1,
	2, 4, 2, 0, 1, 0, 3, 5, 1, 0,
	1, 2, 1, 0, 1, 3, 3, 2, 1, 1,
	1, 3, 1, 3, 3, 1, 1, 1, 1, 5,
	3, 1, 1, 3, 1, 1, 1, 1, 2, 2,
	1, 1, 2, 2, 1, 1, 1, 3, 5, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 3, 5, 7, 1, 7, 5, 3,
	1, 1, 1, 1, 1, 1, 1, 3, 5, 1,
	1, 1, 1, 1, 1, 1, 0, 3, 0, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1,
}
var sqlChk = [...]int{

	-1000, -1, -2, 515, -88, -85, -55, -53, -91, -92,
	-74, -93, -87, -111, -116, -100, -112, -118, -160, -165,
	-166, -167, -3, -41, -43, -56, -73, -75, -86, -95,
	-94, -96, -101, -108, -104, -90, -47, -113, -117, -126,
	-161, -162, -163, 31, 30, 92, 76, 141, 116, 124,
	179, 328, 364, 375, 356, 345, -121, -122, 392, -42,
	-54, -115, -114, 69, 117, 351, -4, -12, 28, 44,
	-44, -45, -46, 59, -61, -58, -68, -62, -543, 94,
	-496, -76, -79, -107, -547, 129, 148, 197, -97, -98,
	317, -102, -103, 358, -105, -106, 360, 149, -49, -48,
	143, -188, -190, -119, -120, -164, -127, -128, -129, -130,
	-131, -132, -133, -134, -135, -136, -137, -138, -139, -157,
	-140, -141, -142, -143, -148, -144, -145, -146, -147, -149,
	-150, -152, -153, -154, -155, -156, 396, -151, 450, 46,
	410, 78, 133, 368, 21, -5, -6, -7, -8, -9,
	-10, -11, -14, -13, -57, -59, -60, -63, -64, -65,
	-72, -66, -67, -495, -77, -78, -81, -83, -84, -80,
	-82, 357, -191, -189, 512, 464, -16, -21, -22, -17,
	-18, -20, -23, -19, -24, -28, -33, -34, -30, -31,
	-29, -32, -35, -36, -37, -38, -39, -40, -26, -27,
	-15, -25, 482, 490, -194, -192, -193, -201, 384, 472,
	426, 515, 515, 515, 515, 515, 515, 515, 515, 515,
	515, 515, 515, 515, 515, 515, 515, 515, 515, 515,
	515, -266, 2, -248, -253, -254, -255, -247, -219, -465,
	-468, 4, -462, -466, 154, 206, 282, 21, 22, 23,
	24, 25, 26, 28, 29, 40, 41, 43, 42, 44,
	45, 46, 50, 52, 56, 57, 58, 59, 60, 64,
	69, 70, 75, 76, 77, 78, 79, 80, 81, 87,
	84, 85, 86, 89, 91, 92, 93, 95, 97, 98,
	106, 107, 108, 109, 111, 116, 117, 120, 115, 119,
	122, 123, 124, 127, 128, 129, 131, 132, 134, 135,
	136, 138, 139, 141, 142, 143, 146, 144, 433, 145,
	147, 148, 149, 150, 160, 161, 162, 167, 169, 173,
	174, 177, 178, 180, 184, 186, 187, 188, 189, 190,
	196, 197, 199, 200, 201, 202, 207, 208, 212, 209,
	218, 219, 223, 224, 225, 227, 231, 232, 233, 234,
	235, 236, 238, 240, 239, 242, 245, 246, 249, 250,
	251, 254, 255, 256, 257, 259, 260, 263, 261, 264,
	262, 266, 267, 268, 265, 271, 269, 273, 274, 275,
	280, 278, 276, 277, 284, 287, 194, 289, 290, 293,
	311, 297, 298, 299, 302, 303, 306, 309, 310, 312,
	313, 314, 315, 316, 317, 318, 319, 321, 322, 326,
	328, 329, 331, 333, 334, 335, 336, 337, 338, 339,
	342, 341, 343, 345, 351, 356, 353, 354, 355, 357,
	358, 359, 360, 362, 363, 364, 366, 367, 368, 369,
	371, 373, 374, 377, 378, 393, 394, 412, 375, 376,
	379, 380, 381, 382, 383, 387, 385, 386, 388, 389,
	390, 392, 395, 396, 398, 399, 400, 401, 402, 403,
	406, 408, 409, 410, 411, 413, 416, 417, 418, 419,
	414, 425, 422, 423, 427, 428, 429, 430, 431, 432,
	434, 436, 444, 445, 447, 450, 451, 452, 442, 454,
	455, 458, 459, 460, 463, 461, 462, 464, 466, 469,
	470, 471, 477, 476, 483, 484, 486, 487, 488, 35,
	47, 48, 51, 53, 55, 65, 66, 67, 71, 112,
	113, 140, 151, 152, 163, 175, 176, 181, 183, 191,
	192, 193, 213, 214, 216, 221, 243, 286, 288, 304,
	308, 323, 324, 325, 327, 340, 370, 404, 415, 420,
	437, 438, 439, 440, 446, 448, 472, 473, 474, 478,
	485, -266, 2, -248, 295, -241, 2, -219, -219, 328,
	27, 2, 27, 322, 386, 428, 430, 2, -521, -301,
	2, 27, -222, -219, 94, 179, 384, -241, 2, -521,
	-301, 24, 2, -219, 2, -223, 2, 375, -219, 260,
	2, 515, 89, 251, 70, 370, 389, -124, 445, -123,
	437, 379, -125, -452, 2, 271, -219, 515, 515, 515,
	27, -231, -219, 426, 206, 108, 423, 515, 2, 426,
	314, 476, 385, 108, 337, 206, 452, 379, -530, 260,
	366, 182, 465, -519, 2, -515, 4, -466, -462, -260,
	-259, 426, 431, 108, -255, -247, 505, -254, 515, 515,
	515, 2, 224, 225, 336, 335, 389, 390, 515, 515,
	515, 377, 2, 26, 62, 88, 91, 114, 150, 170,
	173, 300, -544, 311, 334, 388, 425, 434, 447, -529,
	411, 64, 379, -528, -530, 260, 452, 127, -348, 108,
	251, 178, 459, 430, 428, 457, 120, 212, 462, 461,
	515, 515, 26, 62, 73, 91, 127, 150, 170, 173,
	-546, 311, 334, 373, 388, 425, 434, 447, 2, 476,
	260, 385, 426, 206, 108, 452, 379, -530, 377, 378,
	332, -88, 2, 512, 31, 30, 392, -183, 426, 217,
	2, -219, 515, 515, 2, 224, 225, 377, 378, 515,
	515, 171, -515, 2, 515, 515, 2, 224, 225, 377,
	378, 217, 2, 64, 381, 515, 515, 515, 515, 515,
	515, 515, 515, 515, 515, 515, 515, 515, 515, 515,
	515, 515, 515, 515, 515, 515, 515, 515, 515, 515,
	515, 515, 515, 515, 515, 2, -158, 389, 411, 188,
	44, 70, 27, 333, 75, 315, 109, 135, 180, 206,
	207, 232, 88, 89, -350, 43, 225, 224, 378, -536,
	377, -402, 427, 380, 386, 422, 236, 375, 445, 94,
	466, 367, 488, 337, 338, 144, 4, 108, 271, 391,
	437, 251, 374, 318, 80, 515, -553, 2, 426, -555,
	2, 445, 445, 2, -555, 2, -555, 2, -555, 2,
	-556, 445, 485, 515, 515, 515, 515, 515, 515, 515,
	515, 515, 515, 515, 515, 515, 515, 515, 515, 515,
	-189, -191, -190, 515, 515, 515, 515, 515, 515, 515,
	-158, 389, 2, 70, 27, -294, -296, 456, 215, 137,
	301, -188, -190, 2, -495, -450, 2, -376, -469, -378,
	503, 504, 496, 424, 63, 281, 489, -390, 114, 457,
	295, -468, -379, -392, 140, 370, -316, 8, 9, 5,
	6, 7, -228, -380, -386, 449, 153, 285, -263, 516,
	10, 512, -492, -190, -391, 36, 183, 61, -454, -262,
	-229, -426, 216, -261, -247, -489, -490, 4, -462, -463,
	-455, -429, -437, -433, -434, -440, -219, -465, 73, 100,
	101, 99, 104, 103, 253, 252, 105, 102, 391, 465,
	62, 35, 191, 192, 221, 286, 193, 71, -491, 128,
	-464, 213, 214, 404, 48, 340, 163, 113, 112, 288,
	53, 51, 473, -438, 110, 437, 438, 439, 440, 175,
	176, 55, 151, 152, 308, 325, 420, 446, 448, 181,
	243, 96, 172, 211, 195, 220, 222, 226, 244, 247,
	272, 279, 283, 305, 307, 365, 397, -559, 474, 415,
	65, 66, -497, 341, -498, -241, -497, 515, 515, 517,
	515, -288, -289, -290, 2, 27, 125, 512, 2, -406,
	2, -407, -411, -190, 237, -410, 512, -408, 510, -248,
	296, -493, 371, -489, -490, -228, -247, -262, 4, -462,
	-464, 514, -291, 512, 108, 426, 74, 206, -343, 512,
	-219, 27, 295, 441, 517, -388, 512, 295, 171, 298,
	-219, 476, 2, 2, 393, 2, 512, -124, 67, 445,
	42, 389, -363, 2, -364, -216, -217, -218, -416, 223,
	331, 339, 491, 488, -450, -538, 171, 495, 441, -450,
	-317, 514, 2, 2, 2, 2, 2, -411, 191, -248,
	2, -245, -453, 4, -462, -466, -463, -467, -465, 27,
	30, 31, 32, 34, 36, 37, 38, 39, 54, 61,
	62, 68, 72, 74, 83, 88, 94, 99, 100, 102,
	101, 103, 104, 105, 114, 118, 121, 125, 126, 130,
	133, 137, 153, 155, 168, 170, 171, 179, 182, 185,
	198, 210, 215, 217, 237, 241, 248, 252, 253, 281,
	285, 291, 295, 296, 300, 301, 320, 330, 344, 361,
	384, 391, 407, 421, 426, 435, 441, 443, 449, 456,
	457, 465, 467, 475, 479, 480, 481, 482, -468, 73,
	2, -411, 191, 2, -250, 191, -411, -253, 2, -232,
	-219, 2, -244, -453, 2, -267, 191, -248, -249, -253,
	-251, 2, -253, -257, 2, -219, -460, 191, 2, -457,
	10, -456, 5, 4, -462, -466, -463, 476, 217, 441,
	517, -307, -259, -260, -449, 8, -300, -219, 514, -376,
	2, -113, -99, 2, 168, -376, 191, 2, -113, 191,
	2, -376, 191, 2, -113, 191, 2, -533, 2, -460,
	2, 2, 447, 2, 91, 191, -219, 426, 107, 2,
	355, -545, 373, 451, 2, 2, 2, 2, 2, 2,
	426, -237, 2, -219, 168, -257, 191, 2, 385, -554,
	341, -460, 191, 2, 476, -251, 2, -251, 206, 219,
	-232, 191, 2, 430, 428, 430, 428, 171, 2, 217,
	2, 217, 2, -412, 2, -413, -407, -248, 510, 2,
	2, 2, 2, 2, 191, -219, 426, 107, 2, 235,
	2, 2, 2, 2, 2, 2, 2, -309, 191, 2,
	-248, 476, -309, 191, 2, -309, 191, 2, -349, 2,
	83, -232, 191, 2, -256, 191, 2, -251, -258, 191,
	2, -257, -461, 191, 2, -460, -376, 2, -113, 2,
	-420, 2, -419, -456, 472, -88, 512, -88, 512, 389,
	512, -460, -248, -248, -376, 2, -113, -99, 2, -376,
	2, -113, 2, -110, -109, -460, 512, 171, -376, 2,
	-113, -99, 2, -376, 2, -113, 2, -183, 168, 2,
	108, 426, -158, 2, 168, 467, 2, 8, 2, -460,
	380, 338, 160, 2, 393, 2, 394, 70, -350, 488,
	70, 171, 2, 171, 2, -333, 2, 482, 2, -518,
	2, 295, 171, 2, 171, 2, 171, 2, 171, 2,
	171, 2, 335, 390, 225, 2, -113, 479, -99, -376,
	479, 2, -537, 168, 378, -376, 2, 444, 234, 145,
	171, -333, 2, 171, 2, 171, 2, 5, 2, 336,
	412, 2, 223, 331, 412, 2, -248, -548, 2, 426,
	476, 385, 2, 2, 84, 85, 171, 2, 171, 2,
	171, 488, 2, -326, -411, -362, -363, -362, 441, -294,
	-296, -158, 393, 2, -195, -324, -197, 168, -352, -353,
	-198, 248, 155, 291, -199, -332, 27, 125, -332, -332,
	57, 513, 513, 11, 12, 72, 40, 503, 504, 505,
	506, 166, 507, 508, 501, 502, 500, 493, 494, 498,
	229, 230, 90, 497, 495, 82, 258, 372, 156, 157,
	158, 159, 352, 204, 33, 205, 14, 15, 16, 32,
	300, 247, 489, 195, 397, 496, 17, 18, 19, 220,
	222, 283, 47, 198, -227, -269, -376, -376, -376, -376,
	-376, -376, -376, 307, 512, -322, -371, 510, -190, 512,
	512, 512, -449, -190, -376, -390, 513, -314, 512, -190,
	-390, -385, 512, 370, 510, 512, -393, -376, 5, 5,
	5, 512, 514, -500, 483, 168, 512, 512, 512, 512,
	512, 512, 512, 512, 512, 512, 512, 512, 512, 512,
	512, 327, -431, 512, -430, 512, -430, -430, 477, -428,
	512, 490, 484, 512, -428, 512, 512, 512, 512, 512,
	512, 512, 512, 512, 512, 512, 512, 512, 477, 517,
	-497, -291, 512, -318, -414, -376, 505, -318, -318, 295,
	-311, -376, 96, -336, 226, 272, 172, 244, 365, 211,
	-373, 516, -373, -401, 490, -190, -408, -247, -190, -410,
	512, -406, -401, -89, -449, -73, -86, -94, -113, -126,
	-162, -163, 505, -248, 512, 171, 512, 514, -453, 171,
	-300, -232, -248, -261, -262, -267, 124, -311, -515, -300,
	-222, 37, -387, -423, -424, -471, 516, -470, -426, -436,
	-432, -435, 323, 324, -455, 51, 473, -438, 216, 4,
	-462, -464, 213, 214, 404, 48, 340, 163, 113, 112,
	288, 53, 437, 438, 439, 440, 175, 176, 55, 474,
	415, 65, 66, -515, -300, 168, -349, -452, -311, 37,
	-363, 2, 114, -457, 42, -557, 517, 246, -271, 257,
	280, 187, 296, 486, 289, -459, 5, 4, -386, -398,
	114, 251, 216, -443, -445, 8, -444, 9, -446, 503,
	504, -451, -450, 98, 514, -453, -206, 353, 392, -205,
	23, 28, 129, 470, 146, -281, 208, 310, 314, 140,
	408, 460, -525, -526, 376, 432, 433, 86, 289, 392,
	353, 140, -329, -331, 37, 106, 275, 309, 58, 201,
	262, 263, 410, 478, 140, 392, 353, -526, 353, -526,
	-208, 408, 460, -525, -526, 376, 353, -207, -281, 140,
	516, 23, 353, 392, 310, -541, -542, 129, 28, 353,
	310, -522, -494, 482, 140, -411, 191, -109, 238, -109,
	-307, 517, 517, -453, 505, 378, 377, 140, 140, 140,
	140, 168, 2, 2, 281, 2, 2, 2, 173, -528,
	-546, 2, 2, -248, 191, -293, 295, -517, -308, 426,
	-248, 281, -250, 191, 2, -253, 476, -522, 281, -252,
	191, -248, 37, 512, 2, -349, 2, 206, -494, 281,
	-412, -264, -248, -407, -264, 392, -241, 37, -373, -373,
	140, 2, 2, 2, -219, -209, 517, 60, 359, 140,
	-309, 191, -209, 140, -209, 140, -268, 191, -267, -209,
	140, -209, 517, 140, -209, 517, 140, 517, 140, 513,
	517, -420, -420, -460, -171, 482, 171, 94, 512, 512,
	-183, -417, 517, -416, -461, -110, -460, -460, -517, -232,
	2, -248, 2, 426, 227, -171, -460, -460, -460, -452,
	27, 394, 2, 335, 390, 85, 394, 2, -248, 426,
	108, 206, 76, -520, 168, -516, 366, -515, -248, 108,
	-248, 108, -248, 108, -248, -248, 2, 2, 2, 2,
	81, 81, 2, 44, -537, 168, 2, 444, 2, 444,
	2, -219, -219, -219, 411, 246, -248, 168, 426, 206,
	426, 206, 108, 426, -209, 517, -223, -195, -324, -452,
	-325, -324, -196, -195, -198, 168, 339, 461, 275, 395,
	231, -353, -352, 27, -376, -357, 162, 274, -376, -355,
	-378, 503, 504, -444, -446, -310, 289, -189, -189, -189,
	-297, -403, -376, 330, 206, -425, -423, -423, -246, -453,
	437, -376, -376, -376, -376, -376, -376, -376, -376, -376,
	-376, -376, -376, -376, -376, -376, -376, -376, -376, -376,
	-376, -376, -376, -376, -376, -376, -376, -376, -376, -376,
	-376, -376, -376, -376, -376, -376, 247, 195, 397, 47,
	198, -376, 441, -376, -376, -376, -376, 269, 281, 285,
	449, 153, 458, 125, 289, -560, 421, 39, -383, -190,
	-315, 512, -397, 34, 407, 27, -390, 512, 2, -371,
	-376, -372, -312, -311, -311, 513, 475, 27, 125, 505,
	2, 513, 517, 37, 513, -376, -312, -389, -385, -311,
	-396, -395, 479, -344, -345, 487, 265, 111, 189, 264,
	-346, 383, -447, 8, -453, 505, -501, 161, 182, 512,
	513, 2, 513, 2, 513, -376, 2, 513, -376, 2,
	513, -376, 2, 513, -376, 2, 513, 2, -376, -376,
	-376, -376, -376, -376, -376, -311, 8, -447, -447, 437,
	437, -447, -447, -447, -439, 323, 249, 324, 177, 268,
	266, 267, 176, -439, -338, 2, -441, -311, 4, 487,
	265, 111, 189, 264, 383, 5, -338, 2, -339, 2,
	-376, -311, -340, -377, -378, 503, 504, 496, -390, -341,
	2, -376, -312, -376, 54, 241, 443, -342, -376, 171,
	-311, -311, 2, -311, 2, -498, 37, -311, -303, 517,
	171, 37, 4, -303, -303, 512, 513, 517, -337, 186,
	261, 256, -337, -406, -336, 226, -334, 305, -334, -334,
	-401, -233, 510, 518, -453, -401, -400, -399, 37, -241,
	302, -401, -401, 514, 513, -400, 511, -513, 512, 515,
	515, 515, 515, 515, -248, 512, -311, -453, 514, 413,
	513, 220, 220, 220, 220, 371, 513, 441, 482, -88,
	297, 513, 517, -302, 36, 510, 514, -447, 2, 2,
	-442, 477, 512, 512, -345, 512, 171, -301, -252, -538,
	513, 445, -364, -270, 339, 406, 354, 387, 423, 8,
	9, 8, 9, 517, -453, 517, -539, 88, 441, 74,
	379, -367, 191, 74, -472, -235, 88, -473, -219, 68,
	457, 330, 170, 138, -539, 88, 330, -539, 88, 88,
	392, 411, 441, 57, -411, 40, 40, 27, -113, 242,
	171, 488, 426, 206, 379, 441, -411, -331, -423, 106,
	262, 263, 57, -448, -443, 503, 504, -448, 57, -448,
	-448, -448, 482, -250, -411, 379, 441, 441, 517, 40,
	40, 27, -113, 242, 171, 441, -267, -233, 471, 41,
	471, 441, 41, 379, 441, 517, 41, 41, 441, 441,
	-523, -224, 95, 276, 255, 277, -225, -226, 316, 469,
	-460, 392, 353, 140, -417, 198, -417, -259, -219, 514,
	-113, -376, -376, -113, -376, -113, 44, 140, 2, -554,
	235, 512, -274, 281, 171, -300, -418, 217, 517, -308,
	140, -330, -329, 281, -252, 191, 2, 140, -291, 281,
	134, 512, 337, 2, -234, 191, -220, -219, -349, -212,
	429, 140, -328, 467, -358, -113, 512, 114, 37, -358,
	-319, -320, -415, -321, -235, 512, -241, -219, 2, -248,
	-309, -209, 140, -309, -309, -209, 517, 140, -232, -251,
	-256, -257, -258, -460, -461, -88, -419, 513, 513, 513,
	-170, 299, -169, -219, 5, -183, 467, -273, -368, -367,
	-476, -477, -472, 247, 206, 457, 219, 154, -292, -236,
	-235, 107, -177, 482, -109, 513, -417, 198, -171, -171,
	-417, -417, -248, 168, -171, -171, -171, 2, 2, -333,
	-248, -232, -267, -248, -300, -300, -333, -232, -333, -232,
	-333, -232, -113, -376, 2, 389, 168, 168, 514, -333,
	337, 108, 426, 314, 206, -248, -267, -248, -267, -232,
	-248, -411, -325, -196, 296, 231, 395, -355, -356, -378,
	370, 371, -356, 370, 371, 8, 9, 8, 9, -200,
	399, 284, -309, 517, -203, 38, 121, 231, -248, 488,
	136, -376, -376, 441, -560, 421, -383, 136, -376, 269,
	285, 449, 153, 458, 125, 289, 171, 512, -377, -377,
	513, -313, -376, -376, 511, 520, 513, -296, 517, -294,
	-376, -311, -311, 513, 514, -311, -300, 511, 511, 517,
	513, -394, -395, 130, -376, 441, 441, 441, 441, 512,
	513, 514, -506, 306, 512, 512, -376, 513, 513, 513,
	513, 37, 517, 517, 517, 513, 517, 517, 517, 513,
	513, 513, 517, 513, 488, 488, 513, 513, 513, 513,
	517, 513, 517, 513, 171, 513, 513, -347, 320, 513,
	11, 12, 503, 504, 505, 506, 166, 507, 508, 501,
	502, 500, 493, 494, 495, 82, 258, 372, 14, 15,
	16, 220, 198, -377, -377, -377, 513, -381, -382, 171,
	168, 37, -342, -342, -342, 513, 171, -311, 513, 513,
	512, -499, 260, 281, 513, -370, -369, 480, -414, -304,
	2, -406, -243, -453, -370, -370, -311, -376, 226, 226,
	-335, 467, 295, -337, -406, -400, -449, -375, -374, 169,
	38, 121, 278, 194, -400, -241, -291, -400, -400, -453,
	-401, -401, -399, 513, -514, -449, 513, -305, -409, -493,
	-296, 514, -453, -180, -494, -159, 5, 285, -159, -159,
	-159, -300, 24, 321, -423, 510, 511, 8, -453, 512,
	-447, -447, -447, -300, 171, -450, -363, 455, 79, 339,
	437, -450, -205, 353, -235, -235, -248, -257, 281, -367,
	191, -211, 281, -423, -242, -219, 512, 512, 231, 231,
	467, -235, -242, 231, 191, -235, 191, -242, -242, -524,
	339, 290, -376, -458, -457, 105, 391, 250, 337, 282,
	-206, 353, 392, -113, -113, -113, 512, -538, 467, 124,
	-248, -267, -248, -257, -252, 392, 353, 279, -261, -448,
	-448, -329, 392, 353, -257, -250, -232, -207, -113, -113,
	-113, 512, -233, -208, 353, 5, 191, -235, 5, -219,
	-235, -257, -458, -542, 23, -235, 191, -235, -257, -458,
	-224, -460, 285, 463, -522, 379, 441, -411, -174, 482,
	-109, -168, 202, 505, -519, -219, 476, -219, -272, -275,
	-273, -235, -186, -187, 484, 482, 140, -265, -248, 510,
	-171, -460, -248, -257, 140, -291, 281, -460, 37, 140,
	512, 2, 2, 295, 281, -234, 191, -213, 131, -558,
	495, -232, -370, -304, -327, -361, 361, 295, -292, 472,
	-241, -327, -306, 517, 171, 495, 514, -292, 2, -209,
	-309, -209, -209, -267, -268, -209, -209, -209, -88, -88,
	-171, 517, 512, 495, 495, 512, -460, -460, 513, 517,
	-248, -234, 206, 206, -240, -220, 513, 517, 514, 512,
	-179, 299, -178, 132, 233, 218, 400, 401, 402, 403,
	123, -177, -110, 171, -50, 482, 426, 516, -333, -333,
	-333, 389, 389, -219, -244, -232, -248, -245, -267, 168,
	168, 461, -356, 296, 254, -403, -204, 287, -248, 516,
	-376, -376, 136, 136, -376, -377, -377, -376, 136, 171,
	512, -376, -387, 32, 32, 513, 517, -372, -376, 513,
	475, -296, -296, 513, 505, -453, 516, 513, -385, 133,
	-376, 435, 265, 189, 264, -346, 264, -346, -346, -447,
	5, -453, 505, -507, -238, 512, -219, 480, -295, 301,
	513, -425, -423, -376, -376, -376, -376, -376, -447, -428,
	-428, -443, -443, -376, -381, -376, -425, -423, -377, -377,
	-377, -377, -377, -377, -377, -377, -377, -377, -377, -377,
	-377, -377, -377, -377, -377, -377, -377, 125, 281, 289,
	-377, -382, -381, -376, -376, -423, 513, 513, 513, -311,
	-88, 512, 260, -323, 182, -376, -417, 517, -323, -323,
	513, -406, -406, 512, -376, 226, 511, 517, 519, 495,
	-291, 514, -399, -400, 511, 513, 517, 513, 517, -360,
	37, 513, -453, -182, -181, 122, 50, 298, 5, 8,
	510, 511, 514, -447, 513, 513, 513, -300, -376, 441,
	441, 140, 281, 469, -478, -473, 138, -376, -298, -404,
	-376, 512, 512, 2, -202, 129, 392, -540, 2, 467,
	140, -209, 140, -209, 486, 512, 512, 441, 379, 482,
	-311, -376, -172, 114, -452, -526, 516, -526, 516, 379,
	441, 379, 441, 482, -311, 441, -427, 45, 25, 281,
	-251, 441, 441, -209, 140, 452, 392, -460, 285, -257,
	-252, 392, 353, -176, 299, -175, 132, 363, 123, 233,
	-417, -174, 171, 217, 2, -252, 2, 513, 513, 517,
	-479, 37, 293, 293, 512, -248, -69, 482, -416, -449,
	-250, 37, 140, -522, -113, -252, -421, -422, 5, -248,
	140, 295, 281, -214, 240, -558, -457, -494, -296, -327,
	-318, 282, 87, 513, -370, -320, -304, -376, 2, 513,
	-209, -209, -169, -170, -460, -460, -460, -171, -183, -183,
	-368, -276, 512, -234, -220, 512, -183, -236, 2, -461,
	517, 512, 495, 495, 495, -417, -113, 299, -248, 505,
	-333, -283, -282, 314, 289, -283, 370, 370, 296, 162,
	236, -203, -233, -376, -376, 136, 32, 32, -376, -376,
	-387, 513, -376, -376, -311, 511, 5, -376, 513, 513,
	8, -376, 513, 514, -508, -219, -376, 513, 57, 513,
	513, 517, 517, 513, 513, 513, 513, 513, 513, 513,
	-382, 171, 125, 289, 512, 513, 513, -88, -384, 185,
	57, -406, -384, -384, -335, -300, -406, -374, -233, 510,
	-453, -449, -409, 512, 514, -181, 495, 511, 2, 510,
	-453, 513, -235, -235, -367, 140, -480, 88, -482, 72,
	154, 94, 281, 285, 457, 330, 68, 114, 344, -550,
	37, 492, 513, 513, 517, -203, -298, -300, 281, 418,
	114, 281, 114, 107, 452, 75, -235, -242, -300, -300,
	-248, -257, 147, 513, 517, 495, 2, 505, 505, -257,
	-252, -257, -250, 147, 513, -233, 5, 5, 140, -230,
	72, 5, -235, -235, -251, 107, 379, 441, 517, 512,
	495, 495, -174, -461, -109, -291, -279, 209, -235, -477,
	-474, -475, 330, -481, -483, 154, 330, -113, 2, -185,
	-184, -219, 5, 512, -274, 299, 511, -330, -113, -252,
	-291, 513, 517, -351, 467, -233, -248, 140, -215, 239,
	-558, -457, -212, -354, -352, -359, 512, 295, -113, -296,
	495, 513, 513, 107, 107, 200, 139, -298, 512, 512,
	-300, 107, 513, -178, -179, -460, -109, -460, -177, -51,
	-52, 206, 88, 319, -245, 426, 206, 512, 512, -203,
	-376, -376, -376, 513, -296, -453, 505, -502, 314, 513,
	-403, -376, -376, -377, 171, 512, -387, 513, -503, 481,
	-376, -311, -503, -503, 513, -449, 2, -460, 510, 2,
	-367, -242, -246, -239, -219, 154, 191, 285, 231, 512,
	-377, -248, 512, 2, 29, -551, 118, 210, -366, -552,
	93, 419, 199, -404, -204, 513, 513, 285, 285, -376,
	-423, 512, -209, -209, 513, 513, -376, 441, -452, 92,
	-450, 2, -526, -376, 441, 5, -209, -246, -209, -209,
	-230, 452, -257, -252, -175, -176, -460, -109, -174, 37,
	-280, -281, 198, -479, 231, -239, 231, -549, 482, 513,
	517, 495, 495, -272, -186, -70, -71, 442, -416, -291,
	37, 5, 512, -219, 295, 512, -233, -558, -457, -213,
	-327, 126, -300, 88, -354, -383, -171, 512, 512, -277,
	77, 89, 115, 190, 174, 207, 411, 416, 27, -277,
	513, -298, -298, 513, 512, -171, 513, 517, 27, 512,
	27, 512, -248, -267, -311, -311, 513, -296, 57, 517,
	513, 513, -377, -387, 513, -504, -505, -238, 511, 2,
	-482, -239, 281, 467, -376, -221, 512, -376, 37, 210,
	119, 196, -279, 512, -365, 467, 344, -230, -298, 512,
	512, 512, 495, 171, 512, -427, -209, -251, 513, -532,
	342, -113, -186, 312, 512, -278, 295, 107, 275, -184,
	-450, -450, 513, 37, -71, 9, 37, -113, -298, -248,
	-298, 295, -457, -214, 461, 282, 513, -242, -327, -461,
	-461, -365, 513, 513, -461, -52, -300, -300, 513, 513,
	-509, 337, 371, 184, -311, -297, 513, 517, 37, 140,
	186, 513, -484, 259, -219, 513, 119, 196, -280, -300,
	-279, 186, -248, -527, 467, 513, -285, -284, -282, -287,
	-286, -282, -311, -450, 92, 312, -311, -230, -535, 172,
	-534, 5, 10, -278, -248, -299, -405, -235, 78, 107,
	-279, -113, -113, 513, -351, 513, -248, -215, 392, -369,
	513, 513, -366, -365, -187, 482, 513, 513, 513, 513,
	-510, -511, 47, 454, 98, -376, -510, -510, -505, -507,
	154, 482, -485, -488, -487, 295, 398, 172, 313, 513,
	418, 478, -551, 513, 482, -291, -376, -365, 513, 517,
	472, 513, 517, 472, 513, 171, 513, -209, -173, 482,
	44, 512, 513, 517, 329, 120, 129, -280, -549, -365,
	512, -366, 512, -319, -171, -171, -279, -366, -370, -171,
	-512, 138, -511, 326, 167, 370, 326, 167, -512, -512,
	-239, 52, -487, 295, -488, 295, 461, 120, -370, 52,
	-484, -279, -284, 198, -286, 171, 312, 143, -534, 29,
	-300, -405, 371, 371, 2, -186, -278, -366, -298, -279,
	-298, -370, -280, -279, 98, 182, 436, 275, 32, 495,
	-486, 275, 359, 60, 392, -486, 495, -485, 512, 512,
	377, 513, 2, -278, -279, 513, -280, 513, -187, -280,
	370, 303, -511, -376, 22, 285, 114, -376, -551, -311,
	-311, 299, -210, 60, 359, -280, -365, -187, -366, -370,
	-187, 513, 513, -170, 512, -187, -366, -370, -279, -370,
	-280, 441, -170, -370, -279, -280, 512, 513, -280, -187,
	-311, -187, -370, 513, -370, -280,
}
var sqlDef = [...]int{

	-2, -2, 1, 2, 3, 4, 6, 7, 8, 10,
	12, 14, 16, 18, 20, 22, 24, 26, 27, 28,
	29, 30, 473, 474, 476, 477, 478, 480, 481, 483,
	485, 487, 488, 489, 491, 492, 494, 495, 496, 497,
	498, 500, 502, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 560, 562, 0, 1158,
	1160, 1162, 1164, 0, 696, 0, 32, 33, 0, -2,
	276, 278, 280, 0, 306, 308, 309, 311, 313, -2,
	0, 407, 408, 410, 412, -2, -2, 0, 856, 858,
	0, 549, 551, 0, 861, 863, 0, 0, 571, 572,
	0, 1246, -2, 565, 567, 569, 634, 636, 638, 640,
	642, 644, 646, 648, 649, 651, 653, 655, 657, 659,
	661, 663, 665, 666, 668, 670, 672, 674, 676, 678,
	680, 682, 684, 686, 688, 690, -2, 692, -2, -2,
	0, -2, -2, -2, 1176, 36, 38, 40, 42, 44,
	46, 48, 50, 52, 358, 359, 361, 363, 365, 367,
	370, 372, 374, 1304, 414, 416, 418, 420, 422, 424,
	426, 0, -2, 1316, 0, 0, 54, 55, 56, 57,
	58, 59, 60, 61, 62, 80, 81, 82, 83, 84,
	85, 86, 87, 66, 67, 69, 70, 71, 75, 76,
	78, 64, 0, 0, 1277, 1279, 1281, 1283, -2, 0,
	0, 5, 9, 11, 13, 15, 17, 19, 21, 23,
	25, 475, 479, 482, 484, 486, 490, 493, 499, 501,
	503, 460, 461, 464, 1937, 1954, 1955, 1956, 1959, 1960,
	1961, 1962, 1963, 1964, 2339, 2420, 2421, 1986, 1987, 1988,
	1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998,
	1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008,
	2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018,
	2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028,
	2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038,
	2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048,
	2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058,
	2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068,
	2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078,
	2079, 2080, 2081, 2082, 2083, 2084, 2085, 2086, 2087, 2088,
	2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098,
	2099, 2100, 2101, 2102, 2103, 2104, 2105, 2106, 2107, 2108,
	2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2117, 2118,
	2119, 2120, 2121, 2122, 2123, 2124, 2125, 2126, 2127, 2128,
	2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136, 2137, 2138,
	2139, 2140, 2141, 2142, 2143, 2144, 2145, 2146, 2147, 2148,
	2149, 2150, 2151, 2152, 2153, 2154, 2155, 2156, 2157, 2158,
	2159, 2160, 2161, 2162, 2163, 2164, 2165, 2166, 2167, 2168,
	2169, 2170, 2171, 2172, 2173, 2174, 2175, 2176, 2177, 2178,
	2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186, 2187, 2188,
	2189, 2190, 2191, 2192, 2193, 2194, 2195, 2196, 2197, 2198,
	2199, 2200, 2201, 2202, 2203, 2204, 2205, 2206, 2207, 2208,
	2209, 2210, 2211, 2212, 2213, 2214, 2215, 2216, 2217, 2218,
	2219, 2220, 2221, 2222, 2223, 2224, 2225, 2226, 2227, 2228,
	2229, 2230, 2231, 2232, 2233, 2234, 2235, 2236, 2237, 2238,
	2239, 2240, 2241, 2242, 2243, 2244, 2245, 2246, 2247, 2248,
	2249, 2250, 2251, 2252, 2253, 2254, 2255, 2256, 2257, 2258,
	2259, 2260, 2261, 2262, 2263, 2264, 2265, 2266, 2267, 2268,
	2269, 2270, 2271, 2272, 2273, 2274, 2275, 2276, 2277, 2278,
	2279, 2280, 2281, 2282, 2283, 2284, 2285, 2286, 2287, 2288,
	2289, 2290, 2291, 2292, 2293, 2294, 2295, 2296, 2297, 2298,
	2299, 2300, 2301, 2302, 2303, 2304, 2305, 2306, 2307, 2308,
	2309, 2310, 2311, 2312, 2313, 2314, 2315, 2316, 2317, 2318,
	2319, 462, 463, 1016, 0, 527, 525, 1930, 528, 2159,
	530, 532, 401, 402, 403, 404, 405, 406, 0, 542,
	536, 541, 543, 545, 546, 547, 548, 522, 520, 0,
	542, 1989, 540, 1156, 1157, 1141, 1142, 2197, 1183, 0,
	190, 561, -2, -2, -2, 2305, -2, 593, -2, 600,
	2309, 2199, 605, 0, 607, -2, 610, 1159, 1161, 1163,
	694, 695, 1940, 0, 0, 0, 0, 34, 35, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1065, 1066, 1067, 0, 194, 196, -2, -2, -2, -2,
	0, 0, 2237, 2031, 1898, 1956, 1901, 1896, 277, 279,
	281, 282, 0, 0, 0, 0, 0, 0, 307, 310,
	312, -2, 314, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 337, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, -2, 0, 0, 0, 0, 0, 0,
	0, 0, 911, 903, 904, 1108, 0, 0, 0, 0,
	409, 411, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 413, 0,
	0, 0, 0, -2, 0, 0, 0, 0, 0, 0,
	338, 465, 466, 0, 1305, 1305, 0, 0, 0, 0,
	251, 242, 857, 859, 860, 0, 0, 0, 0, 550,
	552, 0, 0, 224, 862, 864, 865, 0, 0, 0,
	0, 0, 253, 0, 0, 566, 568, 570, 635, 637,
	639, 641, 643, 645, 647, 650, 652, 654, 656, 658,
	660, 662, 664, 667, 669, 671, 673, 675, 677, 679,
	681, 683, 685, 687, 689, 691, 701, 0, 0, 0,
	0, -2, -2, 0, 0, 0, -2, -2, -2, 0,
	0, 0, 0, 0, 0, 0, -2, 0, 781, 0,
	0, 0, -2, -2, -2, 0, 0, 0, 0, 0,
	-2, -2, 0, 0, 0, 0, 704, 706, 707, 708,
	0, 761, 779, 780, 789, 693, 0, 1056, 1306, 1185,
	1166, 1180, 1185, 1168, 1169, 1170, 1171, 1172, 1177, 1179,
	1173, 1174, 1175, 37, 39, 41, 43, 45, 47, 49,
	51, 53, 360, 362, 364, 366, 368, 371, 373, 375,
	-2, 1275, 1276, 415, 417, 419, 421, 423, 425, 427,
	553, 0, 555, 0, 705, -2, 0, 1310, 1310, 1310,
	0, 0, 1276, 1274, 0, 558, 559, 614, 615, 1541,
	0, 0, 0, 0, 0, 0, 0, 1795, 1627, 0,
	616, -2, 1658, 1660, 2280, 2305, 1794, 1662, 1663, 1664,
	1665, 1666, 0, 1668, 1669, 1670, 1671, 1672, 1673, 0,
	1675, 0, 1680, 1681, 1682, 0, 2287, 1875, 1950, -2,
	0, 0, 2293, 1946, 0, 1761, 1698, -2, -2, 1973,
	1952, 1473, 1474, 1475, 1476, 1477, -2, -2, 2322, 1702,
	1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712,
	0, 2268, 2288, 2289, 2294, 2296, 2290, 2277, 1723, 2043,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, 1500, 1509, -2, -2, -2, -2, -2,
	-2, -2, 2281, 2282, 2299, 2302, 2308, 2313, 2314, 2286,
	2295, 2323, 2324, 2325, 2326, 2327, 2328, 2329, 2330, 2331,
	2332, 2333, 2334, 2335, 2336, 2337, 2338, 1501, -2, -2,
	-2, -2, 1293, 2170, 1296, 1016, 1294, 1278, 1280, 0,
	1282, 0, 0, 0, 1287, 1313, 1311, 0, 1354, 1291,
	1292, 1372, 1372, 1396, 0, 1377, 0, 1396, 1305, 1422,
	0, 1383, 2189, 1699, 1700, 0, 1956, 1951, -2, -2,
	2320, 0, 0, 0, 0, 0, 0, 0, 523, 0,
	529, 531, 0, 0, 0, 0, 0, 0, 0, 0,
	1182, 1107, 563, 564, 0, 588, 0, 592, 2276, -2,
	1997, 2208, -2, 596, 1186, 1190, 1191, 1192, 1193, 0,
	0, 0, 0, 0, 602, 0, 0, 589, 590, 608,
	611, 0, 697, 698, 699, 700, 63, 0, 2288, 1422,
	65, 0, 1920, 1981, 1982, 1983, 1984, 1985, 2321, 2340,
	2341, 2342, 2343, 2344, 2345, 2346, 2347, 2348, 2349, 2350,
	2351, 2352, 2353, 2354, 2355, 2356, 2357, 2358, 2359, 2360,
	2361, 2362, 2363, 2364, 2365, 2366, 2367, 2368, 2369, 2370,
	2371, 2372, 2373, 2374, 2375, 2376, 2377, 2378, 2379, 2380,
	2381, 2382, 2383, 2384, 2385, 2386, 2387, 2388, 2389, 2390,
	2391, 2392, 2393, 2394, 2395, 2396, 2397, 2398, 2399, 2400,
	2401, 2402, 2403, 2404, 2405, 2406, 2407, 2408, 2409, 2410,
	2411, 2412, 2413, 2414, 2415, 2416, 2417, 2418, 2419, 2322,
	68, 0, 2288, 72, 0, 2288, 0, -2, 77, 0,
	1926, 79, 0, 1923, 88, 0, 2288, 0, 1895, -2,
	0, 175, 1934, 0, 882, 1936, -2, 2288, 1064, 254,
	255, 1969, 1970, 1977, 1978, 1979, 1980, 0, 0, 0,
	0, 849, 1892, 1897, 850, 1916, 851, 1902, 0, 283,
	284, 285, 286, 287, 0, 288, 2288, 290, 291, 0,
	293, 294, 2288, 296, 297, 0, 299, 0, 207, 208,
	315, 316, 0, 318, 0, 2288, 0, 0, 0, 324,
	-2, 339, 0, 336, 327, 328, 330, 331, 332, 333,
	0, 379, 377, 1931, 0, 877, 2288, 879, 0, 0,
	1087, -2, 2288, 1061, 0, 1093, 1089, 0, -2, 0,
	1303, 2288, 1200, 907, 908, 909, 910, 0, 398, 0,
	1213, 0, 1215, 0, 1236, 1428, 1372, 1372, 0, 340,
	341, 342, 343, 344, 2288, 0, 0, 0, 349, 0,
	351, 352, 353, 354, 355, 356, 357, 164, 2288, 432,
	458, 0, 164, 2288, 435, 164, 2288, 438, 0, 441,
	1106, 164, 2288, 444, 164, 2288, 447, 448, 164, 2288,
	452, 453, 455, 2288, 457, 256, 1152, 1153, 1154, 1155,
	0, -2, 516, 1939, -2, 468, 0, 469, 0, -2,
	0, 268, 0, 0, 866, 867, 868, 869, 870, 873,
	874, 875, 876, 1409, 227, 225, 0, 0, 1143, 1144,
	1145, 1146, 1147, 1148, 1149, 1150, 1151, 0, 0, 573,
	0, 0, 702, 703, 0, 0, 713, 714, 715, 268,
	2200, 2167, 2063, 720, 0, 723, 726, -2, 0, 0,
	0, 0, 730, 0, 735, 736, 737, 0, 739, 855,
	741, 0, 0, 743, 0, 747, 0, 750, 0, 752,
	0, 754, -2, -2, -2, 765, -2, 0, 768, 770,
	0, 772, -2, 0, 781, 777, 778, 0, 0, 0,
	0, 797, 798, 0, 803, 0, 806, 807, 808, 0,
	810, 811, 0, 813, 814, 815, 816, 0, 818, 819,
	-2, -2, 823, 825, 0, 832, 0, 836, 0, 840,
	0, 709, 710, 164, 1426, 1165, -2, 1167, 0, -2,
	0, 554, 0, 557, 1333, 1261, 1258, 0, 1330, 1331,
	1262, 0, 0, 0, 1269, 0, 1308, 1309, 0, 0,
	0, 1248, 1249, 0, 0, 0, 0, 1800, 1801, 1802,
	1803, 1804, 1805, 1808, 1809, 1806, 1807, 1810, 1811, 0,
	0, 0, 0, 0, 1812, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1813, 1814, 1815, 0,
	0, 1817, 0, 1819, 0, 0, 0, 0, 0, 0,
	1606, 1608, 1883, 0, 0, 1816, 1546, 1547, 1548, 1549,
	1550, 1585, 1586, 0, 0, 1659, 1880, 1879, 1661, 0,
	1831, 0, 1674, -2, 0, 1795, 1826, 0, 0, 1683,
	1684, 1685, 0, 0, 1831, 0, 0, 1874, 1695, 1696,
	1538, 0, 0, 1763, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1487, 1486, 0, 1488, 0, 1489, 1490, 1497, 1510,
	0, 0, 0, 0, 1514, 0, 0, 0, 0, 0,
	0, 0, 1855, -2, 0, 0, 0, 0, 1502, 0,
	1295, 0, 0, 1358, 1884, 1888, 1889, 1358, 1358, 0,
	0, 1832, 1419, 1419, 0, 0, 1415, 1415, 1415, 1413,
	1396, 0, 1396, 1406, 0, 1396, 1396, 0, -2, 1377,
	0, 0, 1406, 0, 1390, 504, 506, 508, 510, 511,
	512, 514, 1423, 1424, 0, 0, 0, 0, 1957, 0,
	0, 0, 0, 0, 1942, 0, 0, 0, 0, 534,
	544, 1305, 0, 1834, 1445, 1449, 0, 1451, 1452, 1453,
	1454, 1455, 0, 0, 1446, -2, 1498, 1500, 1521, 1974,
	1975, 1976, 1481, 1482, 1483, 1484, 1485, 1493, 1480, 1480,
	1480, 1491, 1520, 1512, 1520, 1516, 1466, 1467, 1468, 1503,
	1504, 1505, 1506, 0, 538, 0, 0, 0, 0, 0,
	-2, 598, 603, 604, 0, 0, 1188, 0, 1194, 625,
	626, 627, 1196, 1197, 0, 601, 628, 629, 630, 631,
	632, 633, 0, 1904, 1905, 1906, 1907, 1910, 1911, 0,
	0, 599, 618, 606, 0, 612, 89, 1138, 0, 128,
	0, 1138, 1138, 0, 0, 150, 0, 0, 0, 0,
	0, 0, 0, 113, 124, 101, 102, 0, 0, 0,
	0, 0, 73, 1038, 0, 1041, 0, 0, 0, 0,
	0, 0, 0, 1054, 0, 0, 0, 112, 0, 107,
	91, 0, 0, 0, 114, 126, 0, 155, 157, 0,
	0, 0, 0, 0, 0, 174, 182, 0, 0, 0,
	0, 1062, 0, 1302, 0, 0, 2288, 1409, 2101, 1409,
	848, 0, 0, 1957, 1900, 0, 0, 0, 0, 0,
	0, 0, 317, 319, 0, 321, 322, 323, 0, 1086,
	0, 329, 369, 987, 2288, 0, 0, 396, 391, 0,
	393, 0, 1037, 2288, 1035, 1935, 0, 1059, 0, 1016,
	2288, 1933, 0, 0, 1094, 1966, 1103, 1107, 1202, 0,
	400, 0, 1216, 1218, 0, 0, 1429, 0, 1431, 1432,
	0, 346, 347, 348, 0, 428, 0, 162, 163, 0,
	164, 2288, 433, 0, 436, 0, 164, 2288, 1890, 442,
	0, 445, 0, 0, 450, 0, 0, 0, 0, 1305,
	0, 0, 0, 0, 244, 0, 0, 0, 0, 0,
	0, 231, 0, 1408, 0, 1409, 225, 268, 268, 1409,
	575, 1409, 577, 0, 0, 716, 268, 268, 268, 721,
	722, 724, 725, -2, -2, 833, 727, 728, 800, 0,
	0, 0, 799, 740, 0, 842, 2185, 853, 800, 2031,
	800, 2031, 800, 2031, 751, 753, 756, 792, 764, 769,
	0, 0, 774, 782, -2, 0, 784, 0, 786, 0,
	788, 800, 801, 804, 809, 812, 817, 0, 0, 0,
	0, 0, 0, 0, 1055, 0, 1178, 1333, 1261, 556,
	1252, 1332, 1253, 1260, 1263, 0, 0, 1265, 0, 1267,
	0, 1328, 1329, 1336, 1337, 0, 1347, 1348, 1340, 0,
	-2, 0, 0, 1343, 1344, 1271, 0, 1288, 1289, 1290,
	1317, 1320, 1117, 0, 2420, 1542, 1440, 1543, 1544, 1919,
	0, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559,
	1560, -2, -2, -2, -2, -2, -2, -2, -2, 1569,
	1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579,
	-2, -2, -2, 1583, 1584, -2, 1818, 1820, 0, 1883,
	0, -2, 0, -2, -2, -2, -2, 1603, 0, 1605,
	1610, 1612, 1614, 0, 0, 0, 0, 1882, 1624, 1866,
	1867, 0, 0, 1797, 1798, 1799, 1609, 0, 1628, 1881,
	1878, 0, 0, 1830, 1316, 1687, 0, 0, 0, 0,
	1694, 1679, 1828, 0, 1827, 0, 0, 0, 1838, 0,
	1873, 1869, 0, 1917, 1537, 1524, 1525, 1526, 1527, 1528,
	1529, 1539, 0, 1914, 1943, 1949, 1771, 0, 0, 0,
	1724, 1725, 1726, 1727, 1728, 0, 1730, 1731, 0, 1733,
	1734, 0, 1736, 1737, 0, 1739, 1740, 1741, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1458, 1459, 1460, 1461, 1462,
	1463, 1464, 1465, 0, 0, 1743, 0, 1841, -2, -2,
	-2, -2, -2, -2, -2, -2, 0, 1745, 0, 1747,
	1832, 1852, 0, 0, 1629, 0, 0, 0, 1795, 0,
	1750, 1832, 1860, 0, 0, 0, 0, 0, 1832, 0,
	1865, 0, 1757, 0, 1759, 1297, 0, 0, 1435, 0,
	0, 0, 1887, 1435, 1435, 0, 1353, 0, 0, 1416,
	1417, 1418, 0, 0, 1419, 0, 1410, 1414, 1411, 1412,
	1406, 1369, 0, 0, 1921, 1406, 1375, 1405, 0, 1016,
	1395, 1406, 1406, 0, -2, 1379, 1396, 0, 0, 505,
	507, 509, 513, 515, 0, 0, 1316, -2, 0, -2,
	1015, 0, 0, 0, 0, 524, 526, 0, 0, 518,
	0, 521, 0, 1436, 1439, 0, 0, 1450, 1456, 1457,
	0, -2, 0, 0, 1522, 0, 0, 0, 189, 0,
	591, 0, 1187, 1195, 0, 622, 0, 624, 0, 1908,
	1912, 1909, 1913, 0, 613, 0, 0, 0, 0, 1137,
	0, 132, 2288, 0, 166, 0, 0, 980, 1927, 0,
	0, 0, 0, 2050, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 98, 103, 0,
	0, 0, 0, 0, 0, 0, 0, 1039, 1040, 1042,
	1049, 1051, 0, 1045, 1915, 0, 0, 1046, 0, 1048,
	1050, 1052, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 100, 104, 0, 0, 0, 0, 1894, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1082, 1080, 1074, 1075, 1076, 1077, 1078, 1079, 0, 0,
	-2, 0, 0, 0, 199, 0, 259, 1893, 1903, 0,
	871, 872, 289, 292, 295, 298, 195, 0, 325, 0,
	0, 913, 888, 0, 0, 378, 268, 0, 0, 392,
	0, 1033, 1036, 0, 1016, 2288, 1073, 0, 0, 0,
	0, 0, 0, 1092, 0, 2288, 1922, 1965, 1966, 1204,
	1210, 0, 1435, 0, 1234, 1219, 0, 0, 0, 1234,
	1238, 1239, 1241, 1242, 0, 0, 1430, 0, 350, 459,
	164, 430, 0, 164, 164, 439, 0, 0, 164, 449,
	164, 454, 164, 257, 456, 467, 517, 1305, 1305, 268,
	266, 2142, 264, 261, 263, 0, 0, 0, 914, 916,
	917, 918, 919, 0, 1966, 0, 2090, 1966, 0, 1222,
	1224, 0, 221, 0, 228, 226, 231, 0, 0, 390,
	574, 579, 711, 0, 717, 718, 719, 758, 794, 729,
	731, 732, 733, 0, 854, 852, 742, 800, 745, 800,
	748, 800, 767, 771, 776, 783, 0, 0, 0, 796,
	0, 0, 0, 0, 0, 0, 0, 837, 838, 839,
	841, 1427, 1256, 1257, 1259, 0, 1268, 0, 0, 1342,
	-2, -2, 1341, 1345, 1346, -2, -2, -2, -2, 1264,
	0, 1273, 1270, 0, 1327, 1115, 1116, 0, 0, 0,
	0, -2, -2, 0, 0, 0, 1625, 0, -2, 1604,
	1607, 1611, 1613, 1615, 0, 0, 0, 0, 0, 0,
	1821, 0, 1823, 1626, 1876, 1879, 1793, 0, 0, 1315,
	1316, 1316, 0, 1693, 0, 1829, 0, 1836, 1837, 0,
	1686, 0, 1870, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1697, 0, 0, 0, 0, 1729, 1732, 1735,
	1738, 0, 0, 0, 0, 1718, 0, 0, 0, 1722,
	1492, 1478, 0, 1520, 1518, 1519, 1513, 1520, 1517, 1470,
	0, 1469, 0, 1742, 0, 1744, 1746, 0, 0, 1748,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1632, 1633, 1634, 1749, 1858, 1859, 0,
	0, 0, 0, 0, 0, 1755, 0, 1864, 1756, 1758,
	1305, 0, 1298, 0, 1355, 1350, 1434, 0, 1885, 1409,
	1357, 1359, 1886, 1924, 1350, 1350, 0, 1833, 0, 0,
	1400, 0, 0, 0, 1402, 1373, 0, 0, 1367, 0,
	1363, 1364, 1365, 1366, 1374, 1016, 1404, 1376, 1380, 1943,
	0, 1406, 0, 1391, 0, 1393, 1425, 0, 1385, 1388,
	0, 0, 1958, 269, 0, 300, 304, 305, 301, 302,
	303, 533, 0, 0, 1835, 0, 1441, 0, 1447, 0,
	0, 0, 0, 537, 0, 587, -2, 620, 621, 623,
	0, 619, 129, 1138, 0, 0, 1119, 1121, 0, 134,
	2288, 143, 0, 954, 0, 1925, 0, 0, 0, 0,
	0, 1140, 0, 0, 2288, 164, 2288, 164, 146, 149,
	0, 154, 151, 152, 179, 180, 181, 0, 0, 945,
	90, 1138, 0, 93, 97, 105, 0, 0, 0, 111,
	0, 0, 0, 1123, 1129, 0, 0, 1043, 1044, 1047,
	1053, 74, 0, 0, 1127, 1133, 1118, 156, 95, 99,
	106, 0, 1135, 92, 0, 178, 0, 0, 0, 170,
	0, 171, 172, 183, 0, 164, 2288, 0, 880, 881,
	1081, 1057, 1058, 0, 1063, 0, 0, 0, 191, 0,
	1409, 199, 0, 1899, 0, 0, 0, 0, 0, 0,
	912, 998, 0, 885, 0, 0, 0, 384, 380, 0,
	389, 395, 394, 878, 0, 0, 0, -2, 0, 0,
	1096, 1090, 1091, 0, 0, 0, 2288, 1206, 1210, 0,
	1209, 1303, 1316, 399, 1211, 1234, 0, 0, 0, 1221,
	1217, 1214, 1435, 0, 0, 0, 0, 0, 345, 429,
	164, 434, 437, 1891, 164, 443, 446, 451, 470, 471,
	243, 0, 0, 0, 0, 0, 268, 0, 0, 0,
	923, 0, 1966, 1966, 0, 1929, 0, 0, 0, 0,
	229, 0, 232, 0, 0, 0, 237, 238, 239, 240,
	241, 222, 1409, 0, 576, 0, 0, 0, 744, 746,
	749, 785, 787, 800, 826, 827, 940, 0, 940, 0,
	0, 1266, 0, 1339, 1272, 1321, 1322, 0, 1117, 0,
	1545, 1588, 0, 0, -2, 0, 0, 1592, 0, 0,
	0, -2, 0, 0, 0, 1822, 1824, 0, 1878, 1688,
	0, 0, 0, 1692, 1676, 1677, 0, 1796, 1839, 1868,
	1872, 0, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 0,
	1918, 1944, 1948, 1769, 1770, 1774, 1932, 0, 0, 0,
	1701, 0, 0, 0, 0, 0, 0, 0, 0, 1511,
	1515, 0, 0, 1840, 1851, 1853, 1630, 1631, 1635, 1636,
	1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, -2, -2,
	-2, 1648, 1649, 1650, -2, -2, -2, 0, 0, 0,
	1854, 1856, 1857, 1861, 1862, 0, 1752, 1753, 1754, 1863,
	0, 1305, 1299, 1352, 0, 1433, 1356, 0, 1352, 1352,
	1312, 1398, 0, 0, 1421, 0, 1370, 0, 1371, 0,
	1403, 0, 1378, 1381, 1382, 1392, 0, 1384, 0, 1387,
	0, 1688, -2, 270, 272, 0, 275, 535, 519, 0,
	0, 1443, 0, 0, 1495, 1499, 1523, 539, 1407, 0,
	0, 0, 0, 165, 952, 979, 0, 0, 0, 1110,
	1117, 0, 0, 985, 136, 0, 0, 0, 144, 0,
	0, 141, 0, 148, 153, 0, 0, 0, 0, 0,
	0, 108, 109, 110, 0, 115, 0, 116, 0, 0,
	0, 0, 0, 0, 0, 0, 167, 0, 0, 0,
	1114, 0, 0, 185, 0, 0, 0, 1084, 1085, 1124,
	1130, 0, 0, 197, 0, 200, 0, 203, 204, 0,
	199, 193, 0, 0, 320, 1016, 326, 934, 986, 0,
	988, 0, 886, 0, 0, 987, 376, 0, 383, 0,
	1037, 0, 0, 1060, 1071, 1016, 0, 1095, 1097, 1105,
	0, 0, 0, 1208, 1210, 0, 1201, 1202, 1335, 1212,
	1232, -2, 1231, 0, 1316, 1240, 1237, 1243, 1244, 0,
	431, 440, 265, 0, 260, 262, 0, 246, 0, 0,
	915, 920, 0, 0, 0, 0, 0, 1223, 1225, 0,
	0, 0, 0, 0, 0, 231, 252, 0, 712, 734,
	795, 828, 939, 0, 0, 830, 0, 0, 1338, 1325,
	1326, 1323, 1117, 1590, 1594, 0, 0, 0, 1596, -2,
	0, 1618, -2, -2, 1825, 1877, 1667, 1316, 1689, 1691,
	1678, 1871, 1540, 0, 1776, 1773, 0, 1760, 0, 1713,
	1714, 0, 0, 1717, 1719, 1720, 1721, 1479, 1472, 1471,
	1850, 0, 0, 0, 0, 1751, 1300, 0, 1765, 0,
	0, 1360, 1765, 1765, 1399, 0, 1401, 1368, 1361, 0,
	1944, 1394, 1386, 0, 0, 273, 0, 1437, 1442, 0,
	1448, 1494, 130, 131, 133, 0, 953, 0, 956, 0,
	0, 0, 0, 963, 964, 0, 0, 0, 0, 0,
	973, 0, 1002, 1012, 0, 1327, 0, 0, 0, 138,
	159, 0, 0, 1139, 0, 0, 164, 164, 0, 0,
	1120, 1122, 0, 0, 0, 0, 118, 0, 0, 1125,
	1131, 1128, 1134, 0, 0, 1136, 176, 177, 0, 164,
	0, 169, 164, 164, 1114, 0, 0, 0, 0, 0,
	0, 0, 192, 258, 199, 0, 942, 0, 998, 990,
	991, 992, 0, 997, 999, 0, 0, 900, 887, 0,
	896, 0, 0, 913, 888, 0, 381, 1034, 1068, 1016,
	0, 1088, 0, 0, 0, 0, 0, 0, 1198, 1210,
	0, 1203, 1204, 1234, 1334, 0, 0, 0, 1220, 1335,
	0, 267, 268, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 268, 233, 0, 234, 235, 236, 223, 578,
	580, 0, 0, 586, 938, 0, 0, 0, 0, 1324,
	1598, -2, -2, 1619, 0, 1945, 1947, 1316, 0, 1762,
	1318, 0, 0, -2, 0, 0, 0, 1301, 1284, 0,
	1351, 1349, 1285, 1286, 1420, 0, 1389, 274, 0, 1444,
	135, 0, 957, 958, 1928, 960, 0, 962, 965, 0,
	968, 1968, 0, 972, 0, 981, 1003, 0, 934, 0,
	1008, 1009, 1010, 1111, 1112, 1014, 0, 137, 139, 158,
	1114, 0, 140, 147, 0, 0, 94, 0, 0, 2024,
	121, 119, 117, 96, 0, 178, 184, 1113, 173, 186,
	164, 0, 1126, 1132, 201, 0, 202, 205, 0, 0,
	888, 941, 0, 989, 0, 1000, 1001, 890, 0, 889,
	0, 0, 0, 0, 0, 382, 385, 0, 388, 0,
	0, 1098, 0, 1104, 0, 0, 0, 0, 1205, 1206,
	397, 0, 0, 0, 1234, 1245, 245, 0, 0, 921,
	924, 925, 926, 927, 928, 929, 930, 931, 932, 922,
	1014, 0, 0, 978, 0, 250, 230, 0, 582, 0,
	584, 0, 829, 831, 0, 0, 1690, 1780, 0, 0,
	1715, 1716, -2, 0, 1656, 1764, 1766, 0, 1362, 1438,
	955, 959, 0, 0, 0, 1020, 0, 0, 974, 0,
	1006, 1007, 942, 0, 934, 0, 0, 161, 0, 0,
	0, 0, 0, 0, 0, 168, 187, 1114, 198, 217,
	0, 1069, 890, 0, 0, 898, 0, 901, 0, 897,
	894, 895, 934, 0, 386, 387, 0, 1072, 0, 1105,
	0, 0, 1207, 1208, 0, 1227, 1228, 1230, 1235, 0,
	0, 1012, 1014, 888, 0, 581, 0, 0, 834, 835,
	0, 0, 0, 0, 1775, 1319, 1657, 0, 0, 0,
	0, 967, 1025, 0, 0, 0, 1004, 1005, 1002, 0,
	983, 0, 1016, 142, 0, 1014, 0, 946, 0, 0,
	949, 0, 0, 122, 2024, 120, 0, 164, 220, 0,
	212, 210, 211, 883, 0, 0, 994, 996, 0, 902,
	942, 900, 1070, 1014, 0, 1012, 0, 1199, 0, 1229,
	268, 268, 934, 1012, 1435, 0, 268, 583, 585, 1772,
	1792, 1781, -2, 2248, 2028, 0, 1792, 1792, 1767, 1768,
	0, 0, 969, 1021, 1022, 0, 1017, 1018, 1019, 1967,
	970, 971, 1435, 1011, 0, 1020, 160, 934, 943, 0,
	0, 944, 0, 0, 125, 0, 127, 188, 206, 0,
	0, 0, 993, 0, 0, 0, 0, 888, 890, 1012,
	0, 934, 0, 1435, 247, 248, 942, 934, 977, 249,
	1777, 0, 0, 1783, 1784, 1785, 1786, 1787, 1778, 1779,
	961, 0, 1023, 0, 1024, 0, 0, 0, 982, 0,
	1025, 145, 947, 0, 950, 0, 123, 0, 215, 216,
	0, 995, 891, 0, 893, 890, 899, 934, 0, 942,
	0, 1226, 888, 942, 0, 1789, 1790, 0, 0, 0,
	1026, 0, 1029, 1030, 0, 1027, 0, 1002, 0, 0,
	0, 937, 892, 884, 942, 1014, 888, 1012, 1435, 888,
	1788, 1791, 1782, 966, 1028, 1031, 1032, 1013, 984, 0,
	0, 0, 933, 935, 936, 888, 1012, 1435, 934, 975,
	1435, 942, 0, 218, 0, 1435, 934, 1101, 942, 976,
	948, 0, 0, 1099, 942, 888, 0, 219, 888, 1435,
	0, 1435, 1102, 942, 1100, 951,
}
var sqlTok1 = [...]int{

	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 501, 3, 507, 502, 3,
	512, 513, 505, 503, 517, 504, 514, 506, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 520, 3,
	493, 495, 494, 498, 516, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 510, 3, 511, 508, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 518, 500, 519, 496,
}
var sqlTok2 = [...]int{

	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 243, 244, 245, 246, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257,
}
var sqlTok3 = [...]int{
	57600, 258, 57601, 259, 57602, 260, 57603, 261, 57604, 262,
	57605, 263, 57606, 264, 57607, 265, 57608, 266, 57609, 267,
	57610, 268, 57611, 269, 57612, 270, 57613, 271, 57614, 272,
	57615, 273, 57616, 274, 57617, 275, 57618, 276, 57619, 277,
	57620, 278, 57621, 279, 57622, 280, 57623, 281, 57624, 282,
	57625, 283, 57626, 284, 57627, 285, 57628, 286, 57629, 287,
	57630, 288, 57631, 289, 57632, 290, 57633, 291, 57634, 292,
	57635, 293, 57636, 294, 57637, 295, 57638, 296, 57639, 297,
	57640, 298, 57641, 299, 57642, 300, 57643, 301, 57644, 302,
	57645, 303, 57646, 304, 57647, 305, 57648, 306, 57649, 307,
	57650, 308, 57651, 309, 57652, 310, 57653, 311, 57654, 312,
	57655, 313, 57656, 314, 57657, 315, 57658, 316, 57659, 317,
	57660, 318, 57661, 319, 57662, 320, 57663, 321, 57664, 322,
	57665, 323, 57666, 324, 57667, 325, 57668, 326, 57669, 327,
	57670, 328, 57671, 329, 57672, 330, 57673, 331, 57674, 332,
	57675, 333, 57676, 334, 57677, 335, 57678, 336, 57679, 337,
	57680, 338, 57681, 339, 57682, 340, 57683, 341, 57684, 342,
	57685, 343, 57686, 344, 57687, 345, 57688, 346, 57689, 347,
	57690, 348, 57691, 349, 57692, 350, 57693, 351, 57694, 352,
	57695, 353, 57696, 354, 57697, 355, 57698, 356, 57699, 357,
	57700, 358, 57701, 359, 57702, 360, 57703, 361, 57704, 362,
	57705, 363, 57706, 364, 57707, 365, 57708, 366, 57709, 367,
	57710, 368, 57711, 369, 57712, 370, 57713, 371, 57714, 372,
	57715, 373, 57716, 374, 57717, 375, 57718, 376, 57719, 377,
	57720, 378, 57721, 379, 57722, 380, 57723, 381, 57724, 382,
	57725, 383, 57726, 384, 57727, 385, 57728, 386, 57729, 387,
	57730, 388, 57731, 389, 57732, 390, 57733, 391, 57734, 392,
	57735, 393, 57736, 394, 57737, 395, 57738, 396, 57739, 397,
	57740, 398, 57741, 399, 57742, 400, 57743, 401, 57744, 402,
	57745, 403, 57746, 404, 57747, 405, 57748, 406, 57749, 407,
	57750, 408, 57751, 409, 57752, 410, 57753, 411, 57754, 412,
	57755, 413, 57756, 414, 57757, 415, 57758, 416, 57759, 417,
	57760, 418, 57761, 419, 57762, 420, 57763, 421, 57764, 422,
	57765, 423, 57766, 424, 57767, 425, 57768, 426, 57769, 427,
	57770, 428, 57771, 429, 57772, 430, 57773, 431, 57774, 432,
	57775, 433, 57776, 434, 57777, 435, 57778, 436, 57779, 437,
	57780, 438, 57781, 439, 57782, 440, 57783, 441, 57784, 442,
	57785, 443, 57786, 444, 57787, 445, 57788, 446, 57789, 447,
	57790, 448, 57791, 449, 57792, 450, 57793, 451, 57794, 452,
	57795, 453, 57796, 454, 57797, 455, 57798, 456, 57799, 457,
	57800, 458, 57801, 459, 57802, 460, 57803, 461, 57804, 462,
	57805, 463, 57806, 464, 57807, 465, 57808, 466, 57809, 467,
	57810, 468, 57811, 469, 57812, 470, 57813, 471, 57814, 472,
	57815, 473, 57816, 474, 57817, 475, 57818, 476, 57819, 477,
	57820, 478, 57821, 479, 57822, 480, 57823, 481, 57824, 482,
	57825, 483, 57826, 484, 57827, 485, 57828, 486, 57829, 487,
	57830, 488, 57831, 489, 57832, 490, 57833, 491, 57834, 492,
	57835, 497, 57836, 499, 57837, 509, 57838, 515, 0,
}

var sqlErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	sqlDebug        = 0
	sqlErrorVerbose = false
)

type sqlLexer interface {
	Lex(lval *sqlSymType) int
	Error(s string)
}

type sqlParser interface {
	Parse(sqlLexer) int
	Lookahead() int
}

type sqlParserImpl struct {
	lval  sqlSymType
	stack [sqlInitialStackSize]sqlSymType
	char  int
}

func (p *sqlParserImpl) Lookahead() int {
	return p.char
}

func sqlNewParser() sqlParser {
	return &sqlParserImpl{}
}

const sqlFlag = -1000

func sqlTokname(c int) string {
	if c >= 1 && c-1 < len(sqlToknames) {
		if sqlToknames[c-1] != "" {
			return sqlToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func sqlStatname(s int) string {
	if s >= 0 && s < len(sqlStatenames) {
		if sqlStatenames[s] != "" {
			return sqlStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func sqlErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !sqlErrorVerbose {
		return "syntax error"
	}

	for _, e := range sqlErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + sqlTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := sqlPact[state]
	for tok := TOKSTART; tok-1 < len(sqlToknames); tok++ {
		if n := base + tok; n >= 0 && n < sqlLast && sqlChk[sqlAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if sqlDef[state] == -2 {
		i := 0
		for sqlExca[i] != -1 || sqlExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; sqlExca[i] >= 0; i += 2 {
			tok := sqlExca[i]
			if tok < TOKSTART || sqlExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if sqlExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += sqlTokname(tok)
	}
	return res
}

func sqllex1(lex sqlLexer, lval *sqlSymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = sqlTok1[0]
		goto out
	}
	if char < len(sqlTok1) {
		token = sqlTok1[char]
		goto out
	}
	if char >= sqlPrivate {
		if char < sqlPrivate+len(sqlTok2) {
			token = sqlTok2[char-sqlPrivate]
			goto out
		}
	}
	for i := 0; i < len(sqlTok3); i += 2 {
		token = sqlTok3[i+0]
		if token == char {
			token = sqlTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = sqlTok2[1] /* unknown char */
	}
	if sqlDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", sqlTokname(token), uint(char))
	}
	return char, token
}

func sqlParse(sqllex sqlLexer) int {
	return sqlNewParser().Parse(sqllex)
}

func (sqlrcvr *sqlParserImpl) Parse(sqllex sqlLexer) int {
	var sqln int
	var sqlVAL sqlSymType
	var sqlDollar []sqlSymType
	_ = sqlDollar // silence set and not used
	sqlS := sqlrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	sqlstate := 0
	sqlrcvr.char = -1
	sqltoken := -1 // sqlrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		sqlstate = -1
		sqlrcvr.char = -1
		sqltoken = -1
	}()
	sqlp := -1
	goto sqlstack

ret0:
	return 0

ret1:
	return 1

sqlstack:
	/* put a state and value onto the stack */
	if sqlDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", sqlTokname(sqltoken), sqlStatname(sqlstate))
	}

	sqlp++
	if sqlp >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlS[sqlp] = sqlVAL
	sqlS[sqlp].yys = sqlstate

sqlnewstate:
	sqln = sqlPact[sqlstate]
	if sqln <= sqlFlag {
		goto sqldefault /* simple state */
	}
	if sqlrcvr.char < 0 {
		sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
	}
	sqln += sqltoken
	if sqln < 0 || sqln >= sqlLast {
		goto sqldefault
	}
	sqln = sqlAct[sqln]
	if sqlChk[sqln] == sqltoken { /* valid shift */
		sqlrcvr.char = -1
		sqltoken = -1
		sqlVAL = sqlrcvr.lval
		sqlstate = sqln
		if Errflag > 0 {
			Errflag--
		}
		goto sqlstack
	}

sqldefault:
	/* default state action */
	sqln = sqlDef[sqlstate]
	if sqln == -2 {
		if sqlrcvr.char < 0 {
			sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if sqlExca[xi+0] == -1 && sqlExca[xi+1] == sqlstate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			sqln = sqlExca[xi+0]
			if sqln < 0 || sqln == sqltoken {
				break
			}
		}
		sqln = sqlExca[xi+1]
		if sqln < 0 {
			goto ret0
		}
	}
	if sqln == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			sqllex.Error(sqlErrorMessage(sqlstate, sqltoken))
			Nerrs++
			if sqlDebug >= 1 {
				__yyfmt__.Printf("%s", sqlStatname(sqlstate))
				__yyfmt__.Printf(" saw %s\n", sqlTokname(sqltoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for sqlp >= 0 {
				sqln = sqlPact[sqlS[sqlp].yys] + sqlErrCode
				if sqln >= 0 && sqln < sqlLast {
					sqlstate = sqlAct[sqln] /* simulate a shift of "error" */
					if sqlChk[sqlstate] == sqlErrCode {
						goto sqlstack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if sqlDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", sqlS[sqlp].yys)
				}
				sqlp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if sqlDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", sqlTokname(sqltoken))
			}
			if sqltoken == sqlEofCode {
				goto ret1
			}
			sqlrcvr.char = -1
			sqltoken = -1
			goto sqlnewstate /* try again in the same state */
		}
	}

	/* reduction by production sqln */
	if sqlDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", sqln, sqlStatname(sqlstate))
	}

	sqlnt := sqln
	sqlpt := sqlp
	_ = sqlpt // guard against "declared and not used"

	sqlp -= sqlR2[sqln]
	// sqlp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if sqlp+1 >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlVAL = sqlS[sqlp+1]

	/* consult goto table to find next state */
	sqln = sqlR1[sqln]
	sqlg := sqlPgo[sqln]
	sqlj := sqlg + sqlS[sqlp].yys + 1

	if sqlj >= sqlLast {
		sqlstate = sqlAct[sqlg]
	} else {
		sqlstate = sqlAct[sqlj]
		if sqlChk[sqlstate] != -sqln {
			sqlstate = sqlAct[sqlg]
		}
	}
	// dummy call; replaced with literal code
	switch sqlnt {

	case 1:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1209
		{
			sqllex.(*lexer).SetStmt(sqlDollar[1].union.stmt())
		}
	case 2:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1214
		{
			return helpWith(sqllex, "")
		}
	case 5:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1216
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 9:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1219
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 11:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1220
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 13:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1221
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 15:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1222
		{
			return helpWith(sqllex, "GRANT")
		}
	case 17:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1223
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 19:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1224
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 21:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1225
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 23:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1226
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 25:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1227
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 31:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1234
		{
			sqlVAL.union.val = tree.Statement(nil)
		}
	case 34:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1243
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 35:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1244
		{
			return helpWith(sqllex, "ALTER")
		}
	case 37:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1247
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 39:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1248
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 41:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1249
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 43:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1250
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 45:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1251
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 47:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1252
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 49:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1253
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 51:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1254
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 53:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1255
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 63:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1311
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 65:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1337
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 68:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1350
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 72:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1367
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 73:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1371
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[3].union.unresolvedObjectName(), Options: sqlDollar[4].union.seqOpts(), IfExists: false}
		}
	case 74:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1375
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[5].union.unresolvedObjectName(), Options: sqlDollar[6].union.seqOpts(), IfExists: true}
		}
	case 77:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1389
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 79:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1408
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 88:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1440
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 89:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1444
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[3].union.unresolvedObjectName(), IfExists: false, Cmds: sqlDollar[4].union.alterTableCmds()}
		}
	case 90:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1448
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[5].union.unresolvedObjectName(), IfExists: true, Cmds: sqlDollar[6].union.alterTableCmds()}
		}
	case 91:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1454
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[3].union.tableIndexName(), IfExists: false, Cmds: sqlDollar[4].union.alterIndexCmds()}
		}
	case 92:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1458
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[5].union.tableIndexName(), IfExists: true, Cmds: sqlDollar[6].union.alterIndexCmds()}
		}
	case 93:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1464
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   tree.Expr(nil),
			}
		}
	case 94:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1473
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   sqlDollar[9].union.expr(),
			}
		}
	case 95:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1484
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: tree.Expr(nil)}
		}
	case 96:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1488
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: sqlDollar[9].union.expr()}
		}
	case 97:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1494
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 98:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1502
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				All:          true,
			}
		}
	case 99:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1512
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 100:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1516
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), All: true}
		}
	case 103:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1526
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[5].union.slct(),
			}
		}
	case 104:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1537
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[5].union.slct()}
		}
	case 105:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1544
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:  tree.TableIndexName{Table: name},
				Rows:          sqlDollar[6].union.slct(),
				RelocateLease: true,
			}
		}
	case 106:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1556
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), RelocateLease: true}
		}
	case 107:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1563
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 108:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1571
		{

			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: sqlDollar[4].union.expr()}
		}
	case 109:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1576
		{
			sqlVAL.union.val = &tree.SetZoneConfig{Options: sqlDollar[4].union.kvOptions()}
		}
	case 110:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1580
		{

			sqlVAL.union.val = &tree.SetZoneConfig{SetDefault: true}
		}
	case 111:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1585
		{
			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: tree.DNull}
		}
	case 112:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1591
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{Database: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 113:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1599
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
			}
			sqlVAL.union.val = s
		}
	case 114:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1610
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[3].union.tableIndexName(),
			}
			sqlVAL.union.val = s
		}
	case 115:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1620
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 116:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1630
		{
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 117:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1639
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[9].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			s.AllIndexes = true
			sqlVAL.union.val = s
		}
	case 118:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1650
		{
			err := errors.New("index name should not be specified in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION ... OF INDEX")
			return setErr(sqllex, err)
		}
	case 119:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1656
		{
			err := errors.New("index wildcard unsupported in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION <partition> OF INDEX <tablename>@*")
			return setErr(sqllex, err)
		}
	case 120:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1664
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), "."))}}
		}
	case 121:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1668
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), ".")), Value: sqlDollar[3].union.expr()}}
		}
	case 122:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1672
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), ".")), Value: sqlDollar[5].union.expr()})
		}
	case 123:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1676
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), "."))})
		}
	case 124:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1682
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 125:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:1687
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{
				TableOrIndex: tree.TableIndexName{Table: name},
				From:         sqlDollar[7].union.exprs(),
				To:           sqlDollar[11].union.exprs(),
			}
		}
	case 126:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1698
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName()}
		}
	case 127:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:1702
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName(), From: sqlDollar[7].union.exprs(), To: sqlDollar[11].union.exprs()}
		}
	case 128:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1708
		{
			sqlVAL.union.val = tree.AlterTableCmds{sqlDollar[1].union.alterTableCmd()}
		}
	case 129:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1712
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterTableCmds(), sqlDollar[3].union.alterTableCmd())
		}
	case 130:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1719
		{
			sqlVAL.union.val = &tree.AlterTableRenameColumn{Column: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 131:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1724
		{
			sqlVAL.union.val = &tree.AlterTableRenameConstraint{Constraint: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 132:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1729
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[2].union.colDef()}
		}
	case 133:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1734
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[5].union.colDef()}
		}
	case 134:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1739
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[3].union.colDef()}
		}
	case 135:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1744
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[6].union.colDef()}
		}
	case 136:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1749
		{
			sqlVAL.union.val = &tree.AlterTableSetDefault{Column: tree.Name(sqlDollar[3].str), Default: sqlDollar[4].union.expr()}
		}
	case 137:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1754
		{
			sqlVAL.union.val = &tree.AlterTableDropNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 138:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1759
		{
			sqlVAL.union.val = &tree.AlterTableDropStored{Column: tree.Name(sqlDollar[3].str)}
		}
	case 139:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1764
		{
			sqlVAL.union.val = &tree.AlterTableSetNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 140:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1769
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     true,
				Column:       tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 141:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1778
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     false,
				Column:       tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 142:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1790
		{
			sqlVAL.union.val = &tree.AlterTableAlterColumnType{
				Column:    tree.Name(sqlDollar[3].str),
				ToType:    sqlDollar[6].union.typeReference(),
				Collation: sqlDollar[7].str,
				Using:     sqlDollar[8].union.expr(),
			}
		}
	case 143:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1800
		{
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      sqlDollar[2].union.constraintDef(),
				ValidationBehavior: sqlDollar[3].union.validationBehavior(),
			}
		}
	case 144:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1807
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "alter constraint")
		}
	case 145:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:1811
		{
			sqlVAL.union.val = &tree.AlterTableAlterPrimaryKey{
				Columns:    sqlDollar[7].union.idxElems(),
				Sharded:    sqlDollar[9].union.shardedIndexDef(),
				Interleave: sqlDollar[10].union.interleave(),
			}
		}
	case 146:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1819
		{
			sqlVAL.union.val = &tree.AlterTableValidateConstraint{
				Constraint: tree.Name(sqlDollar[3].str),
			}
		}
	case 147:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1826
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     true,
				Constraint:   tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 148:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1835
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     false,
				Constraint:   tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 149:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1844
		{
			sqlVAL.union.val = &tree.AlterTableSetAudit{Mode: sqlDollar[3].union.auditMode()}
		}
	case 150:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1849
		{
			sqlVAL.union.val = &tree.AlterTablePartitionBy{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 151:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1856
		{

			sqlVAL.union.val = &tree.AlterTableInjectStats{
				Stats: sqlDollar[3].union.expr(),
			}
		}
	case 152:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1864
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Owner: sqlDollar[3].str,
			}
		}
	case 153:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1871
		{
			sqlVAL.union.val = tree.AuditModeReadWrite
		}
	case 154:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1872
		{
			sqlVAL.union.val = tree.AuditModeDisable
		}
	case 155:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1876
		{
			sqlVAL.union.val = tree.AlterIndexCmds{sqlDollar[1].union.alterIndexCmd()}
		}
	case 156:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1880
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterIndexCmds(), sqlDollar[3].union.alterIndexCmd())
		}
	case 157:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1886
		{
			sqlVAL.union.val = &tree.AlterIndexPartitionBy{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 158:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1894
		{
			sqlVAL.union.val = sqlDollar[3].union.expr()
		}
	case 159:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1898
		{
			sqlVAL.union.val = nil
		}
	case 160:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1904
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 161:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1908
		{
			sqlVAL.union.val = nil
		}
	case 162:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1915
		{
			sqlVAL.union.val = tree.DropCascade
		}
	case 163:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1919
		{
			sqlVAL.union.val = tree.DropRestrict
		}
	case 164:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1923
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 165:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1929
		{
			sqlVAL.union.val = tree.ValidationSkip
		}
	case 166:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1933
		{
			sqlVAL.union.val = tree.ValidationDefault
		}
	case 167:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1958
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      sqlDollar[6].str,
					IfNotExists: false,
					Placement:   sqlDollar[7].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 168:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:1969
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      sqlDollar[9].str,
					IfNotExists: true,
					Placement:   sqlDollar[10].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 169:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1980
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRenameValue{
					OldVal: sqlDollar[6].str,
					NewVal: sqlDollar[8].str,
				},
			}
		}
	case 170:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1990
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRename{
					NewName: sqlDollar[6].str,
				},
			}
		}
	case 171:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1999
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeSetSchema{
					Schema: sqlDollar[6].str,
				},
			}
		}
	case 172:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2008
		{
			return unimplementedWithIssueDetail(sqllex, 48700, "ALTER TYPE OWNER TO")
		}
	case 173:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2012
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 174:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2016
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 175:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2019
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 176:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2023
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      true,
				ExistingVal: sqlDollar[2].str,
			}
		}
	case 177:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2030
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      false,
				ExistingVal: sqlDollar[2].str,
			}
		}
	case 178:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2037
		{
			sqlVAL.union.val = (*tree.AlterTypeAddValuePlacement)(nil)
		}
	case 189:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2063
		{
			sqlVAL.union.val = &tree.RefreshMaterializedView{Name: sqlDollar[5].union.unresolvedObjectName(), Concurrently: sqlDollar[4].union.bool()}
		}
	case 190:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2066
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 191:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2093
		{
			sqlVAL.union.val = &tree.Backup{
				Targets: sqlDollar[2].union.targetListPtr(),
				To:      sqlDollar[4].union.stringOrPlaceholderOptList(),
				Nested:  true,
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *sqlDollar[6].union.backupOptions(),
			}
		}
	case 192:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2103
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: true,
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 193:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2114
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:         sqlDollar[2].union.targetListPtr(),
				To:              sqlDollar[4].union.stringOrPlaceholderOptList(),
				IncrementalFrom: sqlDollar[6].union.exprs(),
				AsOf:            sqlDollar[5].union.asOfClause(),
				Options:         *sqlDollar[7].union.backupOptions(),
			}
		}
	case 194:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2123
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 195:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2127
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 196:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2131
		{
			t := sqlDollar[1].union.targetList()
			sqlVAL.union.val = &t
		}
	case 197:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2139
		{
			sqlVAL.union.val = sqlDollar[2].union.backupOptions()
		}
	case 198:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2143
		{
			sqlVAL.union.val = sqlDollar[4].union.backupOptions()
		}
	case 199:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2147
		{
			sqlVAL.union.val = &tree.BackupOptions{}
		}
	case 200:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2154
		{
			sqlVAL.union.val = sqlDollar[1].union.backupOptions()
		}
	case 201:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2158
		{
			if err := sqlDollar[1].union.backupOptions().CombineWith(sqlDollar[3].union.backupOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 202:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2167
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 203:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2171
		{
			sqlVAL.union.val = &tree.BackupOptions{CaptureRevisionHistory: true}
		}
	case 204:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2175
		{
			sqlVAL.union.val = &tree.BackupOptions{Detached: true}
		}
	case 205:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2179
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 206:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2260
		{
			sqlVAL.union.val = &tree.ScheduledBackup{
				ScheduleName:    sqlDollar[3].union.expr(),
				Recurrence:      sqlDollar[10].union.expr(),
				FullBackup:      sqlDollar[11].union.fullBackupClause(),
				To:              sqlDollar[8].union.stringOrPlaceholderOptList(),
				Targets:         sqlDollar[6].union.targetListPtr(),
				BackupOptions:   *(sqlDollar[9].union.backupOptions()),
				ScheduleOptions: sqlDollar[12].union.kvOptions(),
			}
		}
	case 207:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2271
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 209:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2276
		{
			sqlVAL.union.val = nil
		}
	case 210:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2284
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 211:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2288
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 212:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2298
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 213:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2304
		{
			sqlVAL.union.val = nil
		}
	case 215:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2313
		{
			sqlVAL.union.val = &tree.FullBackupClause{Recurrence: sqlDollar[3].union.expr()}
		}
	case 216:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2317
		{
			sqlVAL.union.val = &tree.FullBackupClause{AlwaysFull: true}
		}
	case 217:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2321
		{
			sqlVAL.union.val = (*tree.FullBackupClause)(nil)
		}
	case 218:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2327
		{
			sqlVAL.union.val = sqlDollar[5].union.kvOptions()
		}
	case 219:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2331
		{
			sqlVAL.union.val = sqlDollar[6].union.kvOptions()
		}
	case 220:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2335
		{
			sqlVAL.union.val = nil
		}
	case 221:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2366
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				From:               sqlDollar[3].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[4].union.asOfClause(),
				Options:            *(sqlDollar[5].union.restoreOptions()),
			}
		}
	case 222:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2375
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[4].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *(sqlDollar[6].union.restoreOptions()),
			}
		}
	case 223:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2384
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				Subdir:  sqlDollar[4].union.expr(),
				From:    sqlDollar[6].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[7].union.asOfClause(),
				Options: *(sqlDollar[8].union.restoreOptions()),
			}
		}
	case 224:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2393
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 225:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2397
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList{sqlDollar[1].union.expr()}
		}
	case 226:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2401
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList(sqlDollar[2].union.exprs())
		}
	case 227:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2407
		{
			sqlVAL.union.val = []tree.StringOrPlaceholderOptList{sqlDollar[1].union.stringOrPlaceholderOptList()}
		}
	case 228:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2411
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listOfStringOrPlaceholderOptList(), sqlDollar[3].union.stringOrPlaceholderOptList())
		}
	case 229:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2418
		{
			sqlVAL.union.val = sqlDollar[2].union.restoreOptions()
		}
	case 230:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2422
		{
			sqlVAL.union.val = sqlDollar[4].union.restoreOptions()
		}
	case 231:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2426
		{
			sqlVAL.union.val = &tree.RestoreOptions{}
		}
	case 232:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2433
		{
			sqlVAL.union.val = sqlDollar[1].union.restoreOptions()
		}
	case 233:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2437
		{
			if err := sqlDollar[1].union.restoreOptions().CombineWith(sqlDollar[3].union.restoreOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 234:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2446
		{
			sqlVAL.union.val = &tree.RestoreOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 235:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2450
		{
			sqlVAL.union.val = &tree.RestoreOptions{DecryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 236:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2454
		{
			sqlVAL.union.val = &tree.RestoreOptions{IntoDB: sqlDollar[3].union.expr()}
		}
	case 237:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2458
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingFKs: true}
		}
	case 238:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2462
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequences: true}
		}
	case 239:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2466
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequenceOwners: true}
		}
	case 240:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2470
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingViews: true}
		}
	case 241:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2474
		{
			sqlVAL.union.val = &tree.RestoreOptions{Detached: true}
		}
	case 242:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2480
		{
			sqlVAL.str = strings.ToUpper(sqlDollar[1].str)
		}
	case 243:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2517
		{

			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[4].union.expr()}, Options: sqlDollar[6].union.kvOptions()}
		}
	case 244:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2522
		{
			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[3].union.expr()}, Options: sqlDollar[4].union.kvOptions()}
		}
	case 245:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2526
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[7].union.expr()}, Options: sqlDollar[9].union.kvOptions()}
		}
	case 246:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2532
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[6].union.expr()}, Options: sqlDollar[7].union.kvOptions()}
		}
	case 247:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2537
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateFile: sqlDollar[6].union.expr(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 248:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2542
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateDefs: sqlDollar[5].union.tblDefs(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 249:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2547
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: sqlDollar[5].union.nameList(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 250:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2552
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: nil, FileFormat: sqlDollar[4].str, Files: sqlDollar[7].union.exprs(), Options: sqlDollar[9].union.kvOptions()}
		}
	case 251:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2556
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 252:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2572
		{
			sqlVAL.union.val = &tree.Export{Query: sqlDollar[7].union.slct(), FileFormat: sqlDollar[3].str, File: sqlDollar[4].union.expr(), Options: sqlDollar[5].union.kvOptions()}
		}
	case 253:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2575
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 254:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2579
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 255:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2583
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 256:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2591
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 257:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2595
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 258:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2601
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 259:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2605
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 260:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2611
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 261:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2615
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 262:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2619
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 263:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2623
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 264:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2629
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 265:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2633
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[3].union.kvOption())
		}
	case 266:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2639
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 267:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2643
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 268:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2647
		{
			sqlVAL.union.val = nil
		}
	case 269:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2659
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CopyFrom{
				Table:   name,
				Columns: sqlDollar[3].union.nameList(),
				Stdin:   true,
				Options: *sqlDollar[6].union.copyOptions(),
			}
		}
	case 270:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2671
		{
			sqlVAL.union.val = sqlDollar[2].union.copyOptions()
		}
	case 271:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2675
		{
			sqlVAL.union.val = &tree.CopyOptions{}
		}
	case 272:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2681
		{
			sqlVAL.union.val = sqlDollar[1].union.copyOptions()
		}
	case 273:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2685
		{
			if err := sqlDollar[1].union.copyOptions().CombineWith(sqlDollar[2].union.copyOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 274:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2693
		{
			sqlVAL.union.val = &tree.CopyOptions{Destination: sqlDollar[3].union.expr()}
		}
	case 275:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2697
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatBinary}
		}
	case 277:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2705
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 279:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2706
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 281:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2707
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 282:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2708
		{
			return helpWith(sqllex, "CANCEL")
		}
	case 283:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2718
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.CancelJob,
			}
		}
	case 284:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2726
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 285:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2728
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 286:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2732
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 287:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2735
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 288:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2745
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 289:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2754
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 290:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2762
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 291:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2764
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 292:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2768
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 293:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2771
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 294:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2781
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 295:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2790
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 296:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2798
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 297:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2800
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 298:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2804
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 299:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2807
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 300:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2811
		{
			sqlVAL.union.val = &tree.CommentOnDatabase{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 301:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2815
		{
			sqlVAL.union.val = &tree.CommentOnTable{Table: sqlDollar[4].union.unresolvedObjectName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 302:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2819
		{
			varName, err := sqlDollar[4].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[4].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = &tree.CommentOnColumn{ColumnItem: columnItem, Comment: sqlDollar[6].union.strPtr()}
		}
	case 303:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2832
		{
			sqlVAL.union.val = &tree.CommentOnIndex{Index: sqlDollar[4].union.tableIndexName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 304:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2838
		{
			t := sqlDollar[1].str
			sqlVAL.union.val = &t
		}
	case 305:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2843
		{
			var str *string
			sqlVAL.union.val = str
		}
	case 307:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2855
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 310:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2857
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 312:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2858
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 313:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2859
		{
		}
	case 314:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2860
		{
			return helpWith(sqllex, "CREATE")
		}
	case 315:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2863
		{
			return unimplemented(sqllex, "create aggregate")
		}
	case 316:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2864
		{
			return unimplemented(sqllex, "create cast")
		}
	case 317:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2865
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create constraint")
		}
	case 318:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2866
		{
			return unimplemented(sqllex, "create conversion")
		}
	case 319:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2867
		{
			return unimplemented(sqllex, "create def conv")
		}
	case 320:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2868
		{
			return unimplemented(sqllex, "create extension "+sqlDollar[6].str)
		}
	case 321:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2869
		{
			return unimplemented(sqllex, "create extension "+sqlDollar[3].str)
		}
	case 322:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2870
		{
			return unimplemented(sqllex, "create foreign table")
		}
	case 323:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2871
		{
			return unimplemented(sqllex, "create fdw")
		}
	case 324:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2872
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 325:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2873
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 326:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2874
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create language "+sqlDollar[6].str)
		}
	case 327:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2875
		{
			return unimplemented(sqllex, "create operator")
		}
	case 328:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2876
		{
			return unimplemented(sqllex, "create publication")
		}
	case 329:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2877
		{
			return unimplemented(sqllex, "create rule")
		}
	case 330:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2878
		{
			return unimplemented(sqllex, "create server")
		}
	case 331:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2879
		{
			return unimplemented(sqllex, "create subscription")
		}
	case 332:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2880
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "create text")
		}
	case 333:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2881
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create")
		}
	case 334:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2884
		{
		}
	case 335:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2885
		{
		}
	case 336:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2888
		{
		}
	case 337:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2889
		{
		}
	case 338:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2892
		{
		}
	case 339:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2893
		{
		}
	case 340:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2896
		{
			return unimplemented(sqllex, "drop aggregate")
		}
	case 341:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2897
		{
			return unimplemented(sqllex, "drop cast")
		}
	case 342:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2898
		{
			return unimplemented(sqllex, "drop collation")
		}
	case 343:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2899
		{
			return unimplemented(sqllex, "drop conversion")
		}
	case 344:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2900
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "drop")
		}
	case 345:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2901
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[5].str)
		}
	case 346:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2902
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[3].str)
		}
	case 347:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2903
		{
			return unimplemented(sqllex, "drop foreign table")
		}
	case 348:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2904
		{
			return unimplemented(sqllex, "drop fdw")
		}
	case 349:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2905
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop function")
		}
	case 350:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2906
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop language "+sqlDollar[4].str)
		}
	case 351:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2907
		{
			return unimplemented(sqllex, "drop operator")
		}
	case 352:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2908
		{
			return unimplemented(sqllex, "drop publication")
		}
	case 353:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2909
		{
			return unimplemented(sqllex, "drop rule")
		}
	case 354:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2910
		{
			return unimplemented(sqllex, "drop server")
		}
	case 355:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2911
		{
			return unimplemented(sqllex, "drop subscription")
		}
	case 356:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2912
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "drop text")
		}
	case 357:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2913
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "drop")
		}
	case 360:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2917
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 362:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2918
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 364:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2919
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 366:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2920
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 368:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2921
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 369:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2923
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 371:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2924
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 373:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2925
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 375:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2926
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 376:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2936
		{
			sqlVAL.union.val = &tree.CreateStats{
				Name:        tree.Name(sqlDollar[3].str),
				ColumnNames: sqlDollar[4].union.nameList(),
				Table:       sqlDollar[6].union.tblExpr(),
				Options:     *sqlDollar[7].union.createStatsOptions(),
			}
		}
	case 377:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2944
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 378:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2948
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 379:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2952
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 380:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2958
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 381:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2962
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
			}
		}
	case 382:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2971
		{

			sqlVAL.union.val = sqlDollar[3].union.createStatsOptions()
		}
	case 383:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2978
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 384:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2984
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{}
		}
	case 385:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2990
		{
			sqlVAL.union.val = sqlDollar[1].union.createStatsOptions()
		}
	case 386:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2994
		{
			a := sqlDollar[1].union.createStatsOptions()
			b := sqlDollar[2].union.createStatsOptions()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 387:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3005
		{

			value, _ := constant.Float64Val(sqlDollar[2].union.numVal().AsConstantValue())
			if value < 0.0 || value >= 1.0 {
				sqllex.Error("THROTTLING fraction must be between 0 and 1")
				return 1
			}
			sqlVAL.union.val = &tree.CreateStatsOptions{
				Throttling: value,
			}
		}
	case 388:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3017
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 389:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3025
		{
			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				SinkURI: sqlDollar[5].union.expr(),
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 390:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3033
		{

			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 391:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3043
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[1].union.tablePatterns()}
		}
	case 392:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3047
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 393:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3053
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()}
		}
	case 394:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3057
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedObjectName().ToUnresolvedName())
		}
	case 395:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3064
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 396:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3068
		{

			sqlVAL.union.val = nil
		}
	case 397:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3082
		{
			sqlVAL.union.val = &tree.Delete{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[4].union.tblExpr(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[6].union.expr()),
				OrderBy:   sqlDollar[7].union.orderBy(),
				Limit:     sqlDollar[8].union.limit(),
				Returning: sqlDollar[9].union.retClause(),
			}
		}
	case 398:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3092
		{
			return helpWith(sqllex, "DELETE")
		}
	case 399:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3095
		{
			return unimplementedWithIssueDetail(sqllex, 40963, "delete using")
		}
	case 400:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3096
		{
		}
	case 401:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3104
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeAll}
		}
	case 402:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3107
		{
			return unimplemented(sqllex, "discard plans")
		}
	case 403:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3108
		{
			return unimplemented(sqllex, "discard sequences")
		}
	case 404:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3109
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 405:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3110
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 406:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3111
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 409:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3120
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 411:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3121
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 412:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3122
		{
		}
	case 413:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3123
		{
			return helpWith(sqllex, "DROP")
		}
	case 415:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3126
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 417:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3127
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 419:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3128
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 421:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3129
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 423:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3130
		{
			return helpWith(sqllex, "DROP SEQUENCE")
		}
	case 425:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3131
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 427:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3132
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 428:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3140
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 429:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3144
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 430:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3148
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[4].union.tableNames(),
				IfExists:       false,
				DropBehavior:   sqlDollar[5].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 431:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3157
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[6].union.tableNames(),
				IfExists:       true,
				DropBehavior:   sqlDollar[7].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 432:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3165
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 433:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3173
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 434:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3177
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 435:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3180
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 436:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3188
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 437:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3192
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 438:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3195
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 439:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3203
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[4].union.newTableIndexNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[5].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 440:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3212
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[6].union.newTableIndexNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[7].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 441:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3220
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 442:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3228
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[3].str),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 443:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3236
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[5].str),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 444:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3243
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 445:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3250
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[3].union.unresolvedObjectNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 446:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3258
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[5].union.unresolvedObjectNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 447:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3265
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 448:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3269
		{
			sqlVAL.union.val = []*tree.UnresolvedObjectName{sqlDollar[1].union.unresolvedObjectName()}
		}
	case 449:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3273
		{
			sqlVAL.union.val = append(sqlDollar[1].union.unresolvedObjectNames(), sqlDollar[3].union.unresolvedObjectName())
		}
	case 450:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3282
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[3].union.strs(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 451:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3290
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[5].union.strs(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 452:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3297
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 453:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3301
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 454:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3305
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 455:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3315
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[3].union.exprs(), IfExists: false, IsRole: sqlDollar[2].union.bool()}
		}
	case 456:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3319
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[5].union.exprs(), IfExists: true, IsRole: sqlDollar[2].union.bool()}
		}
	case 457:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3322
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 458:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3326
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 459:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3331
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 460:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3344
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 461:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3349
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 462:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3351
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 463:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3356
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 464:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3360
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 465:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3382
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(nil, sqlDollar[2].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 466:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3389
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 467:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3391
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(sqlDollar[3].union.strs(), sqlDollar[5].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 468:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3399
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"DISTSQL", "ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 469:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3407
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"DISTSQL", "ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 470:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3415
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 471:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3423
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 472:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3434
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 475:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3438
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 479:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3441
		{
			return helpWith(sqllex, "DELETE")
		}
	case 482:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3443
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 484:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3444
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 486:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3445
		{
			return helpWith(sqllex, "INSERT")
		}
	case 490:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3448
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 493:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3450
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 495:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3453
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 499:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3458
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 501:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3459
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 503:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3460
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 505:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3465
		{
			return helpWith(sqllex, "DELETE")
		}
	case 507:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3466
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 509:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3467
		{
			return helpWith(sqllex, "INSERT")
		}
	case 510:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3469
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 513:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3473
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 515:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3474
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 516:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3478
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 517:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3482
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 518:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3492
		{
			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: sqlDollar[5].union.stmt(),
			}
		}
	case 519:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3500
		{

			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: &tree.CannedOptPlan{Plan: sqlDollar[7].str},
			}
		}
	case 520:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3508
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 521:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3512
		{
			sqlVAL.union.val = sqlDollar[2].union.typeReferences()
		}
	case 522:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3516
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference(nil)
		}
	case 523:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3526
		{
			sqlVAL.union.val = &tree.Execute{
				Name:   tree.Name(sqlDollar[2].str),
				Params: sqlDollar[3].union.exprs(),
			}
		}
	case 524:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3533
		{

			sqlVAL.union.val = &tree.Execute{
				Name:        tree.Name(sqlDollar[2].str),
				Params:      sqlDollar[3].union.exprs(),
				DiscardRows: true,
			}
		}
	case 525:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3541
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 526:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3545
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 527:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3549
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 528:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3559
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[2].str)}
		}
	case 529:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3563
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[3].str)}
		}
	case 530:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3567
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 531:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3571
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 532:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3574
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 533:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3594
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 534:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3598
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 535:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3602
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: true}
		}
	case 536:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3605
		{
			return helpWith(sqllex, "GRANT")
		}
	case 537:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3625
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 538:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3629
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 539:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3633
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[5].union.nameList(), Members: sqlDollar[7].union.nameList(), AdminOption: true}
		}
	case 540:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3636
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 541:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3641
		{
			sqlVAL.union.val = privilege.List{privilege.ALL}
		}
	case 542:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3645
		{
			privList, err := privilege.ListFromStrings(sqlDollar[1].union.nameList().ToStrings())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = privList
		}
	case 543:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3655
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 544:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3659
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 550:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3673
		{
			return helpWith(sqllex, "RESET")
		}
	case 552:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3674
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 553:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3682
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 554:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3686
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[3].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 555:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3689
		{
			return helpWith(sqllex, "RESET")
		}
	case 556:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3697
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: tree.DefaultVal{}}
		}
	case 557:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3700
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 558:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3711
		{
			sqlVAL.union.val = &tree.SetVar{Name: "database", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 559:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3714
		{
			return helpWith(sqllex, "USE")
		}
	case 561:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3718
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 562:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3719
		{
		}
	case 563:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3720
		{
			return unimplemented(sqllex, "set constraints")
		}
	case 564:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3721
		{
			return unimplementedWithIssue(sqllex, 32562)
		}
	case 566:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3725
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 568:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3726
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 570:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3727
		{
			return helpWith(sqllex, "USE")
		}
	case 573:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3743
		{
			return helpWith(sqllex, "SCRUB")
		}
	case 574:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3758
		{
			sqlVAL.union.val = &tree.Scrub{Typ: tree.ScrubDatabase, Database: tree.Name(sqlDollar[4].str), AsOf: sqlDollar[5].union.asOfClause()}
		}
	case 575:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3761
		{
			return helpWith(sqllex, "SCRUB DATABASE")
		}
	case 576:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3779
		{
			sqlVAL.union.val = &tree.Scrub{
				Typ:     tree.ScrubTable,
				Table:   sqlDollar[4].union.unresolvedObjectName(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: sqlDollar[6].union.scrubOptions(),
			}
		}
	case 577:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3787
		{
			return helpWith(sqllex, "SCRUB TABLE")
		}
	case 578:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3791
		{
			sqlVAL.union.val = sqlDollar[3].union.scrubOptions()
		}
	case 579:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3795
		{
			sqlVAL.union.val = tree.ScrubOptions{}
		}
	case 580:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3801
		{
			sqlVAL.union.val = tree.ScrubOptions{sqlDollar[1].union.scrubOption()}
		}
	case 581:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3805
		{
			sqlVAL.union.val = append(sqlDollar[1].union.scrubOptions(), sqlDollar[3].union.scrubOption())
		}
	case 582:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3811
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{}
		}
	case 583:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3815
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{IndexNames: sqlDollar[3].union.nameList()}
		}
	case 584:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3819
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{}
		}
	case 585:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3823
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{ConstraintNames: sqlDollar[3].union.nameList()}
		}
	case 586:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3827
		{
			sqlVAL.union.val = &tree.ScrubOptionPhysical{}
		}
	case 587:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3838
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: sqlDollar[6].union.expr()}
		}
	case 588:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3841
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 591:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3851
		{
			sqlVAL.union.val = &tree.SetVar{Values: sqlDollar[4].union.exprs()}
		}
	case 592:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3867
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 593:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3871
		{
			sqlVAL.union.val = sqlDollar[2].union.stmt()
		}
	case 594:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3876
		{
			sqlVAL.union.val = &tree.SetSessionCharacteristics{Modes: sqlDollar[6].union.transactionModes()}
		}
	case 595:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3893
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[3].union.transactionModes()}
		}
	case 596:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3896
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 597:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3898
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[4].union.transactionModes()}
		}
	case 598:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3901
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 599:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3905
		{

			varName := sqlDollar[1].union.strs()
			if len(varName) == 1 && varName[0] == "tracing" {
				sqlVAL.union.val = &tree.SetTracing{Values: sqlDollar[3].union.exprs()}
			} else {
				sqlVAL.union.val = &tree.SetVar{Name: strings.Join(sqlDollar[1].union.strs(), "."), Values: sqlDollar[3].union.exprs()}
			}
		}
	case 601:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3924
		{

			sqlVAL.union.val = &tree.SetVar{Name: "timezone", Values: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 602:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3931
		{

			sqlVAL.union.val = &tree.SetVar{Name: "search_path", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 603:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3936
		{

			sqlVAL.union.val = &tree.SetSessionAuthorizationDefault{}
		}
	case 604:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3941
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 606:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3946
		{
			return unimplemented(sqllex, "set from current")
		}
	case 607:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3947
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 608:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3955
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 609:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3960
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 610:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3967
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 611:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3971
		{
			sqlVAL.union.val = append([]string{sqlDollar[1].str}, sqlDollar[2].union.strs()...)
		}
	case 612:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3977
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 613:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3981
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 615:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3988
		{
			sqlVAL.union.val = tree.Expr(&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}})
		}
	case 618:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4009
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 619:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4013
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 620:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4019
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 621:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4023
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 622:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4027
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 623:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4031
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 624:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4035
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 625:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4041
		{
			sqlVAL.union.val = tree.Low
		}
	case 626:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4045
		{
			sqlVAL.union.val = tree.Normal
		}
	case 627:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4049
		{
			sqlVAL.union.val = tree.High
		}
	case 628:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4060
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 629:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4064
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 630:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4068
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 632:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4073
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 633:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4077
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 635:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4091
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 637:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4092
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 639:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4093
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 641:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4094
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 643:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4095
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 645:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4096
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 647:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4097
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 650:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4099
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 652:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4100
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 654:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4101
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 656:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4102
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 658:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4103
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 660:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4104
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 662:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4105
		{
			return helpWith(sqllex, "SHOW QUERIES")
		}
	case 664:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4106
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 667:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4108
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 669:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4109
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 671:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4110
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 673:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4111
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 675:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4112
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 677:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4113
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 679:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4114
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 681:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4115
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 683:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4116
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 685:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4117
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 687:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4118
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 689:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4119
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 691:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4121
		{
			return helpWith(sqllex, "SHOW")
		}
	case 693:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4122
		{
			return helpWith(sqllex, "SHOW LAST QUERY STATISTICS")
		}
	case 694:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4127
		{
		}
	case 695:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4128
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 696:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4131
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 697:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4135
		{

			return purposelyUnimplemented(sqllex, "reindex table", "CockroachDB does not require reindexing.")
		}
	case 698:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4140
		{

			return purposelyUnimplemented(sqllex, "reindex index", "CockroachDB does not require reindexing.")
		}
	case 699:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4145
		{

			return purposelyUnimplemented(sqllex, "reindex database", "CockroachDB does not require reindexing.")
		}
	case 700:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4150
		{

			return purposelyUnimplemented(sqllex, "reindex system", "CockroachDB does not require reindexing.")
		}
	case 701:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4160
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[2].str}
		}
	case 702:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4161
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[3].str}
		}
	case 703:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4162
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 707:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4173
		{
			sqlVAL.str = "client_encoding"
		}
	case 709:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4176
		{
			sqlVAL.str = "timezone"
		}
	case 710:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4177
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 711:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4191
		{
			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 712:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4195
		{

			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[7].union.unresolvedObjectName(), UsingJSON: true}
		}
	case 713:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4199
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 714:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4210
		{

			id, err := sqlDollar[3].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ShowHistogram{HistogramID: id}
		}
	case 715:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4218
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 716:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4226
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupDefaultDetails,
				Path:    sqlDollar[3].union.expr(),
				Options: sqlDollar[4].union.kvOptions(),
			}
		}
	case 717:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4234
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:              tree.BackupDefaultDetails,
				ShouldIncludeSchemas: true,
				Path:                 sqlDollar[4].union.expr(),
				Options:              sqlDollar[5].union.kvOptions(),
			}
		}
	case 718:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4243
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupRangeDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 719:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4252
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupFileDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 720:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4260
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 721:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4270
		{
			sqlVAL.union.val = &tree.ShowClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), ".")}
		}
	case 722:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4274
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 723:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4277
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 724:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4279
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 725:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4282
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 726:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4284
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 727:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4288
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 728:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4291
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 729:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4299
		{
			sqlVAL.union.val = &tree.ShowColumns{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 730:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4302
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 731:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4310
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 732:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4314
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsDB: true, Database: tree.Name(sqlDollar[5].str)}
		}
	case 733:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4318
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsIndex: true, Index: sqlDollar[5].union.tableIndexName()}
		}
	case 734:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4322
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 735:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4325
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 736:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4333
		{
			sqlVAL.union.val = &tree.ShowDatabases{WithComment: sqlDollar[3].union.bool()}
		}
	case 737:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4336
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 738:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4343
		{
			sqlVAL.union.val = &tree.ShowEnums{}
		}
	case 739:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4346
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 740:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4359
		{
			lst := sqlDollar[3].union.targetListPtr()
			if lst != nil && lst.ForRoles {
				sqlVAL.union.val = &tree.ShowRoleGrants{Roles: lst.Roles, Grantees: sqlDollar[4].union.nameList()}
			} else {
				sqlVAL.union.val = &tree.ShowGrants{Targets: lst, Grantees: sqlDollar[4].union.nameList()}
			}
		}
	case 741:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4367
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 742:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4375
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 743:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4378
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 744:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4380
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 745:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4384
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 746:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4388
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 747:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4391
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 748:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4393
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 749:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4397
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 750:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4400
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 751:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4408
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 752:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4411
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 753:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4413
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 754:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4416
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 755:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4424
		{
			sqlVAL.union.val = &tree.ShowQueries{All: false, Cluster: sqlDollar[2].union.bool()}
		}
	case 756:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4427
		{
			return helpWith(sqllex, "SHOW QUERIES")
		}
	case 757:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4429
		{
			sqlVAL.union.val = &tree.ShowQueries{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 758:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4432
		{
			return helpWith(sqllex, "SHOW QUERIES")
		}
	case 759:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4436
		{
			sqlVAL.union.val = true
		}
	case 760:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4438
		{
			sqlVAL.union.val = true
		}
	case 761:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4440
		{
			sqlVAL.union.val = false
		}
	case 762:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4451
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: true}
		}
	case 763:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4455
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: false}
		}
	case 764:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4458
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 765:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4459
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 766:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4461
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[3].union.slct()}
		}
	case 767:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4465
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[5].union.slct(), Block: true}
		}
	case 768:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4469
		{
			sqlVAL.union.val = &tree.ShowJobs{Schedules: sqlDollar[3].union.slct()}
		}
	case 769:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4472
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 770:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4474
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
			}
		}
	case 771:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4482
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				Block: true,
			}
		}
	case 772:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4490
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 773:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4500
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ExecutorType:   sqlDollar[3].union.executorType(),
			}
		}
	case 774:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4506
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 775:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4508
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: sqlDollar[2].union.scheduleState(),
				ExecutorType:   sqlDollar[4].union.executorType(),
			}
		}
	case 776:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4514
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 777:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4516
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ScheduleID:     sqlDollar[3].union.expr(),
			}
		}
	case 778:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4522
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 779:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4526
		{
			sqlVAL.union.val = tree.ActiveSchedules
		}
	case 780:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4530
		{
			sqlVAL.union.val = tree.PausedSchedules
		}
	case 781:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4536
		{
			sqlVAL.union.val = tree.InvalidExecutor
		}
	case 782:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4540
		{
			sqlVAL.union.val = tree.ScheduledBackupExecutor
		}
	case 783:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4551
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceRaw, Compact: sqlDollar[2].union.bool()}
		}
	case 784:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4554
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 785:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4556
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceKV, Compact: sqlDollar[2].union.bool()}
		}
	case 786:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4559
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 787:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4561
		{

			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceReplica, Compact: sqlDollar[2].union.bool()}
		}
	case 788:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4565
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 789:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4568
		{
			sqlVAL.union.val = true
		}
	case 790:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4569
		{
			sqlVAL.union.val = false
		}
	case 791:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4577
		{
			sqlVAL.union.val = &tree.ShowSessions{Cluster: sqlDollar[2].union.bool()}
		}
	case 792:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4580
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 793:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4582
		{
			sqlVAL.union.val = &tree.ShowSessions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 794:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4585
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 795:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4593
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
				WithComment: sqlDollar[7].union.bool()}
		}
	case 796:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4603
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
				WithComment: sqlDollar[5].union.bool()}
		}
	case 797:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4613
		{
			sqlVAL.union.val = &tree.ShowTables{WithComment: sqlDollar[3].union.bool()}
		}
	case 798:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4616
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 799:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4619
		{
			sqlVAL.union.val = true
		}
	case 800:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4620
		{
			sqlVAL.union.val = false
		}
	case 801:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4627
		{
			sqlVAL.union.val = &tree.ShowSchemas{Database: tree.Name(sqlDollar[4].str)}
		}
	case 802:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4631
		{
			sqlVAL.union.val = &tree.ShowSchemas{}
		}
	case 803:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4634
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 804:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4641
		{
			sqlVAL.union.val = &tree.ShowSequences{Database: tree.Name(sqlDollar[4].str)}
		}
	case 805:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4645
		{
			sqlVAL.union.val = &tree.ShowSequences{}
		}
	case 806:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4648
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 807:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4655
		{

			sqlVAL.union.val = &tree.ShowSyntax{Statement: sqlDollar[3].str}
		}
	case 808:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4659
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 809:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4666
		{

			sqlVAL.union.val = &tree.ShowLastQueryStatistics{}
		}
	case 810:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4676
		{
			sqlVAL.union.val = &tree.ShowSavepointStatus{}
		}
	case 811:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4679
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 812:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4687
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_isolation"}
		}
	case 813:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4692
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_priority"}
		}
	case 814:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4697
		{

			sqlVAL.union.val = &tree.ShowTransactionStatus{}
		}
	case 815:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4701
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 816:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4709
		{
			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[3].union.unresolvedObjectName()}
		}
	case 817:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4713
		{

			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 818:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4717
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 822:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4730
		{
			sqlVAL.union.val = &tree.ShowUsers{}
		}
	case 823:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4733
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 824:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4741
		{
			sqlVAL.union.val = &tree.ShowRoles{}
		}
	case 825:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4744
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 826:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4748
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[6].str)}}
		}
	case 827:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4752
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{Database: tree.Name(sqlDollar[6].str)}}
		}
	case 828:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4756
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 829:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4764
		{
			name := sqlDollar[9].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 830:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4772
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 831:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4779
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[9].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 832:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4786
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 833:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4790
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 834:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4801
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: tree.TableIndexName{Table: name},
			}
		}
	case 835:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4809
		{
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: sqlDollar[5].union.tableIndexName(),
			}
		}
	case 836:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4815
		{
			return helpWith(sqllex, "SHOW RANGE")
		}
	case 837:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4824
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 838:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4829
		{
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: sqlDollar[5].union.tableIndexName()}
		}
	case 839:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4833
		{
			sqlVAL.union.val = &tree.ShowRanges{DatabaseName: tree.Name(sqlDollar[5].str)}
		}
	case 840:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4836
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 841:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4840
		{

			sqlVAL.union.val = &tree.ShowFingerprints{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 842:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4847
		{
			tmp := sqlDollar[2].union.targetList()
			sqlVAL.union.val = &tmp
		}
	case 843:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4852
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 844:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4972
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 845:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4976
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 846:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4980
		{

			sqlVAL.union.val = tree.TargetList{
				Tables:   tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}},
				ForRoles: sqlDollar[1].str == "role",
			}
		}
	case 847:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5019
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{sqlDollar[1].union.unresolvedName()}}
		}
	case 848:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5023
		{
			remainderPats := sqlDollar[3].union.tablePatterns()
			sqlVAL.union.val = tree.TargetList{Tables: append(tree.TablePatterns{sqlDollar[1].union.unresolvedName()}, remainderPats...)}
		}
	case 849:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5028
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 850:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5032
		{
			tenID := uint64(sqlDollar[2].union.int64())
			if tenID == 0 {
				return setErr(sqllex, errors.New("invalid tenant ID"))
			}
			sqlVAL.union.val = tree.TargetList{Tenant: roachpb.MakeTenantID(tenID)}
		}
	case 851:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5040
		{
			sqlVAL.union.val = tree.TargetList{Databases: sqlDollar[2].union.nameList()}
		}
	case 852:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5049
		{
			sqlVAL.union.val = tree.TargetList{ForRoles: true, Roles: sqlDollar[2].union.nameList()}
		}
	case 854:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5056
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 855:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5060
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 857:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5073
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 859:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5074
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 860:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5075
		{
			return helpWith(sqllex, "PAUSE")
		}
	case 862:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5085
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 864:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5086
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 865:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5087
		{
			return helpWith(sqllex, "RESUME")
		}
	case 866:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5097
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
			}
		}
	case 867:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5105
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 868:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5107
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 869:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5111
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 870:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5114
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 871:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5119
		{
			sqlVAL.union.val = sqlDollar[3].union.slct()
		}
	case 872:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5123
		{
			sqlVAL.union.val = &tree.Select{
				Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
			}
		}
	case 873:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5138
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseSchedule,
			}
		}
	case 874:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5146
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 875:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5148
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.PauseSchedule,
			}
		}
	case 876:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5154
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 877:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5162
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema: sqlDollar[3].str,
			}
		}
	case 878:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5168
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].str,
				IfNotExists: true,
			}
		}
	case 879:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5174
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 880:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5185
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].str,
				Cmd: &tree.AlterSchemaRename{
					NewName: sqlDollar[6].str,
				},
			}
		}
	case 881:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5194
		{
			return unimplementedWithIssueDetail(sqllex, 50882, "ALTER SCHEMA OWNER TO")
		}
	case 882:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5197
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 883:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5236
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Interleave:    sqlDollar[8].union.interleave(),
				Defs:          sqlDollar[6].union.tblDefs(),
				AsSource:      nil,
				PartitionBy:   sqlDollar[9].union.partitionBy(),
				Persistence:   sqlDollar[2].union.persistence(),
				StorageParams: sqlDollar[10].union.storageParams(),
				OnCommit:      sqlDollar[11].union.createTableOnCommitSetting(),
			}
		}
	case 884:
		sqlDollar = sqlS[sqlpt-14 : sqlpt+1]
//line sql-gen.y:5251
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Interleave:    sqlDollar[11].union.interleave(),
				Defs:          sqlDollar[9].union.tblDefs(),
				AsSource:      nil,
				PartitionBy:   sqlDollar[12].union.partitionBy(),
				Persistence:   sqlDollar[2].union.persistence(),
				StorageParams: sqlDollar[13].union.storageParams(),
				OnCommit:      sqlDollar[14].union.createTableOnCommitSetting(),
			}
		}
	case 886:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5269
		{

			sqlVAL.union.val = nil
		}
	case 887:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5275
		{
			return unimplemented(sqllex, "create table with oids")
		}
	case 888:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5281
		{
			sqlVAL.union.val = nil
		}
	case 889:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5285
		{

			sqlVAL.union.val = sqlDollar[3].union.storageParams()
		}
	case 890:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5292
		{
			sqlVAL.union.val = tree.CreateTableOnCommitUnset
		}
	case 891:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5296
		{

			sqlVAL.union.val = tree.CreateTableOnCommitPreserveRows
		}
	case 892:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5301
		{

			return unimplementedWithIssueDetail(sqllex, 46556, "delete rows")
		}
	case 893:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5306
		{

			return unimplementedWithIssueDetail(sqllex, 46556, "drop")
		}
	case 894:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5313
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 895:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5317
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 896:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5323
		{
			sqlVAL.union.val = []tree.StorageParam{sqlDollar[1].union.storageParam()}
		}
	case 897:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5327
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParams(), sqlDollar[3].union.storageParam())
		}
	case 898:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5333
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Interleave:    nil,
				Defs:          sqlDollar[5].union.tblDefs(),
				AsSource:      sqlDollar[8].union.slct(),
				StorageParams: sqlDollar[6].union.storageParams(),
				OnCommit:      sqlDollar[10].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 899:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:5347
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Interleave:    nil,
				Defs:          sqlDollar[8].union.tblDefs(),
				AsSource:      sqlDollar[11].union.slct(),
				StorageParams: sqlDollar[9].union.storageParams(),
				OnCommit:      sqlDollar[13].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 900:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5362
		{
		}
	case 901:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5363
		{
		}
	case 902:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5364
		{
			return unimplemented(sqllex, "create table as with no data")
		}
	case 903:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5382
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 904:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5383
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 905:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5384
		{
			sqlVAL.union.val = tree.PersistencePermanent
		}
	case 907:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5388
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 908:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5389
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 909:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5390
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 910:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5391
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 911:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5392
		{
			sqlVAL.union.val = tree.PersistenceUnlogged
		}
	case 913:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5397
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 914:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5403
		{
			sqlVAL.union.val = tree.TableDefs{sqlDollar[1].union.tblDef()}
		}
	case 915:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5407
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 916:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5413
		{
			sqlVAL.union.val = sqlDollar[1].union.colDef()
		}
	case 919:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5419
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 920:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5423
		{
			sqlVAL.union.val = &tree.LikeTableDef{
				Name:    sqlDollar[2].union.unresolvedObjectName().ToTableName(),
				Options: sqlDollar[3].union.likeTableOptionList(),
			}
		}
	case 921:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5432
		{
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), sqlDollar[3].union.likeTableOption())
		}
	case 922:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5436
		{
			opt := sqlDollar[3].union.likeTableOption()
			opt.Excluded = true
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), opt)
		}
	case 923:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5442
		{
			sqlVAL.union.val = []tree.LikeTableOption(nil)
		}
	case 924:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5447
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding comments")
		}
	case 925:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5448
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptConstraints}
		}
	case 926:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5449
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptDefaults}
		}
	case 927:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5450
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding identity")
		}
	case 928:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5451
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptGenerated}
		}
	case 929:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5452
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptIndexes}
		}
	case 930:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5453
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding statistics")
		}
	case 931:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5454
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding storage")
		}
	case 932:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5455
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptAll}
		}
	case 933:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5460
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.InterleaveDef{
				Parent:       name,
				Fields:       sqlDollar[6].union.nameList(),
				DropBehavior: sqlDollar[8].union.dropBehavior(),
			}
		}
	case 934:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5469
		{
			sqlVAL.union.val = (*tree.InterleaveDef)(nil)
		}
	case 935:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5476
		{

			sqlVAL.union.val = tree.DropCascade
		}
	case 936:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5481
		{

			sqlVAL.union.val = tree.DropRestrict
		}
	case 937:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5486
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 938:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5492
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 940:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5499
		{
			sqlVAL.str = ""
		}
	case 942:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5506
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 943:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5512
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[5].union.nameList(),
				List:   sqlDollar[8].union.listPartitions(),
			}
		}
	case 944:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5519
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[5].union.nameList(),
				Range:  sqlDollar[8].union.rangePartitions(),
			}
		}
	case 945:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5526
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 946:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5532
		{
			sqlVAL.union.val = []tree.ListPartition{sqlDollar[1].union.listPartition()}
		}
	case 947:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5536
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listPartitions(), sqlDollar[3].union.listPartition())
		}
	case 948:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5542
		{
			sqlVAL.union.val = tree.ListPartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				Exprs:        sqlDollar[5].union.exprs(),
				Subpartition: sqlDollar[7].union.partitionBy(),
			}
		}
	case 949:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5552
		{
			sqlVAL.union.val = []tree.RangePartition{sqlDollar[1].union.rangePartition()}
		}
	case 950:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5556
		{
			sqlVAL.union.val = append(sqlDollar[1].union.rangePartitions(), sqlDollar[3].union.rangePartition())
		}
	case 951:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5562
		{
			sqlVAL.union.val = tree.RangePartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				From:         sqlDollar[5].union.exprs(),
				To:           sqlDollar[9].union.exprs(),
				Subpartition: sqlDollar[11].union.partitionBy(),
			}
		}
	case 952:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5576
		{
			typ := sqlDollar[2].union.typeReference()
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), typ, tree.IsReferenceSerialType(typ), sqlDollar[3].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = tableDef
		}
	case 953:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5587
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 954:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5591
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 955:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5597
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Name: tree.Name(sqlDollar[2].str), Qualification: sqlDollar[3].union.colQualElem()}
		}
	case 956:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5601
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 957:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5605
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: tree.ColumnCollation(sqlDollar[2].str)}
		}
	case 958:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5609
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 959:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5613
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[3].str), Create: true}}
		}
	case 960:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5617
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Create: true}}
		}
	case 961:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5621
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[6].str), Create: true, IfNotExists: true}}
		}
	case 962:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5639
		{
			sqlVAL.union.val = tree.NotNullConstraint{}
		}
	case 963:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5643
		{
			sqlVAL.union.val = tree.NullConstraint{}
		}
	case 964:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5647
		{
			sqlVAL.union.val = tree.UniqueConstraint{}
		}
	case 965:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5651
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 966:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5655
		{
			sqlVAL.union.val = tree.ShardedPrimaryKeyConstraint{
				Sharded:      true,
				ShardBuckets: sqlDollar[8].union.expr(),
			}
		}
	case 967:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5662
		{
			sqlVAL.union.val = &tree.ColumnCheckConstraint{Expr: sqlDollar[3].union.expr()}
		}
	case 968:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5666
		{
			sqlVAL.union.val = &tree.ColumnDefault{Expr: sqlDollar[2].union.expr()}
		}
	case 969:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5670
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ColumnFKConstraint{
				Table:   name,
				Col:     tree.Name(sqlDollar[3].str),
				Actions: sqlDollar[5].union.referenceActions(),
				Match:   sqlDollar[4].union.compositeKeyMatchMethod(),
			}
		}
	case 970:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5680
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr()}
		}
	case 971:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5684
		{
			return unimplemented(sqllex, "virtual computed columns")
		}
	case 972:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5688
		{
			sqllex.Error("use AS ( <expr> ) STORED")
			return 1
		}
	case 973:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5695
		{
		}
	case 974:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5696
		{
		}
	case 975:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5701
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:          tree.Name(sqlDollar[2].str),
				Columns:       sqlDollar[4].union.idxElems(),
				Sharded:       sqlDollar[6].union.shardedIndexDef(),
				Storing:       sqlDollar[7].union.nameList(),
				Interleave:    sqlDollar[8].union.interleave(),
				PartitionBy:   sqlDollar[9].union.partitionBy(),
				StorageParams: sqlDollar[10].union.storageParams(),
				Predicate:     sqlDollar[11].union.expr(),
			}
		}
	case 976:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:5714
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Name:          tree.Name(sqlDollar[3].str),
					Columns:       sqlDollar[5].union.idxElems(),
					Sharded:       sqlDollar[7].union.shardedIndexDef(),
					Storing:       sqlDollar[8].union.nameList(),
					Interleave:    sqlDollar[9].union.interleave(),
					PartitionBy:   sqlDollar[10].union.partitionBy(),
					StorageParams: sqlDollar[11].union.storageParams(),
					Predicate:     sqlDollar[12].union.expr(),
				},
			}
		}
	case 977:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5729
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:          tree.Name(sqlDollar[3].str),
				Columns:       sqlDollar[5].union.idxElems(),
				Inverted:      true,
				StorageParams: sqlDollar[7].union.storageParams(),
				Predicate:     sqlDollar[8].union.expr(),
			}
		}
	case 978:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5741
		{
			sqlVAL.union.val = &tree.FamilyTableDef{
				Name:    tree.Name(sqlDollar[2].str),
				Columns: sqlDollar[4].union.nameList(),
			}
		}
	case 979:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5753
		{
			sqlVAL.union.val = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val.(tree.ConstraintTableDef).SetName(tree.Name(sqlDollar[2].str))
		}
	case 980:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5758
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 981:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5764
		{
			sqlVAL.union.val = &tree.CheckConstraintTableDef{
				Expr: sqlDollar[3].union.expr(),
			}
		}
	case 982:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5770
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:     sqlDollar[3].union.idxElems(),
					Storing:     sqlDollar[5].union.nameList(),
					Interleave:  sqlDollar[6].union.interleave(),
					PartitionBy: sqlDollar[7].union.partitionBy(),
					Predicate:   sqlDollar[9].union.expr(),
				},
			}
		}
	case 983:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5782
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:    sqlDollar[4].union.idxElems(),
					Sharded:    sqlDollar[6].union.shardedIndexDef(),
					Interleave: sqlDollar[7].union.interleave(),
				},
				PrimaryKey: true,
			}
		}
	case 984:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5794
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ForeignKeyConstraintTableDef{
				Table:    name,
				FromCols: sqlDollar[4].union.nameList(),
				ToCols:   sqlDollar[8].union.nameList(),
				Match:    sqlDollar[9].union.compositeKeyMatchMethod(),
				Actions:  sqlDollar[10].union.referenceActions(),
			}
		}
	case 985:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5805
		{
			return unimplementedWithIssueDetail(sqllex, 46657, "add constraint exclude using")
		}
	case 986:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5812
		{
			sqlVAL.union.val = sqlDollar[2].union.val
		}
	case 987:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5816
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 988:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5822
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), nil, false, sqlDollar[2].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef
			sqlVAL.union.val = tree.TableDefs{colToTableDef}
		}
	case 989:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5832
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[3].str), nil, false, sqlDollar[4].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef

			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), colToTableDef)
		}
	case 990:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5843
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 991:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5847
		{
			var constraintToTableDef tree.TableDef = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), constraintToTableDef)
		}
	case 992:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5854
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 993:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5860
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns: sqlDollar[4].union.idxElems(),
				},
				PrimaryKey: true,
			}
		}
	case 994:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5871
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 995:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5875
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 996:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5881
		{
			sqlVAL.union.val = tree.IndexElem{Column: tree.Name(sqlDollar[1].str)}
		}
	case 997:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5887
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 998:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5891
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 999:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5897
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1000:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5901
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1001:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5907
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 1002:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5912
		{
		}
	case 1003:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5913
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "deferrable")
		}
	case 1004:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5914
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially deferred")
		}
	case 1005:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5915
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially immediate")
		}
	case 1006:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5916
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially deferred")
		}
	case 1007:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5917
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially immediate")
		}
	case 1011:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5935
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1012:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5939
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1013:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5945
		{
			sqlVAL.union.val = &tree.ShardedIndexDef{
				ShardBuckets: sqlDollar[6].union.expr(),
			}
		}
	case 1014:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5951
		{
			sqlVAL.union.val = (*tree.ShardedIndexDef)(nil)
		}
	case 1015:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5957
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1016:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5961
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1017:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5981
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1018:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5985
		{
			sqlVAL.union.val = tree.MatchFull
		}
	case 1019:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5989
		{
			return unimplementedWithIssueDetail(sqllex, 20305, "match partial")
		}
	case 1020:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5993
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1021:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6002
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction()}
		}
	case 1022:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6006
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction()}
		}
	case 1023:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6010
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction(), Delete: sqlDollar[2].union.referenceAction()}
		}
	case 1024:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6014
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction(), Update: sqlDollar[2].union.referenceAction()}
		}
	case 1025:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6018
		{
			sqlVAL.union.val = tree.ReferenceActions{}
		}
	case 1026:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6024
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1027:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6030
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1028:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6038
		{
			sqlVAL.union.val = tree.NoAction
		}
	case 1029:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6042
		{
			sqlVAL.union.val = tree.Restrict
		}
	case 1030:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6046
		{
			sqlVAL.union.val = tree.Cascade
		}
	case 1031:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6050
		{
			sqlVAL.union.val = tree.SetNull
		}
	case 1032:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6054
		{
			sqlVAL.union.val = tree.SetDefault
		}
	case 1033:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6073
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name:        name,
				Persistence: sqlDollar[2].union.persistence(),
				Options:     sqlDollar[5].union.seqOpts(),
			}
		}
	case 1034:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6082
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name: name, Options: sqlDollar[8].union.seqOpts(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
			}
		}
	case 1035:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6090
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 1037:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6094
		{
			sqlVAL.union.val = []tree.SequenceOption(nil)
		}
	case 1038:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6097
		{
			sqlVAL.union.val = []tree.SequenceOption{sqlDollar[1].union.seqOpt()}
		}
	case 1039:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6098
		{
			sqlVAL.union.val = append(sqlDollar[1].union.seqOpts(), sqlDollar[2].union.seqOpt())
		}
	case 1040:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6101
		{
			return unimplementedWithIssueDetail(sqllex, 25110, sqlDollar[2].union.typeReference().SQLString())
		}
	case 1041:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6102
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCycle}
		}
	case 1042:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6104
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptNoCycle}
		}
	case 1043:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6105
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: nil}
		}
	case 1044:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6106
		{
			varName, err := sqlDollar[3].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[3].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: columnItem}
		}
	case 1045:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6116
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCache, IntVal: &x}
		}
	case 1046:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6119
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x}
		}
	case 1047:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6121
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x, OptionalWord: true}
		}
	case 1048:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6123
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue, IntVal: &x}
		}
	case 1049:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6125
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue}
		}
	case 1050:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6126
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue, IntVal: &x}
		}
	case 1051:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6128
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue}
		}
	case 1052:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6129
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x}
		}
	case 1053:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6131
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x, OptionalWord: true}
		}
	case 1054:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6133
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptVirtual}
		}
	case 1055:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6141
		{
			sqlVAL.union.val = &tree.Truncate{Tables: sqlDollar[3].union.tableNames(), DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 1056:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6144
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 1057:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6148
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[2].union.expr()}
		}
	case 1058:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6152
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: tree.DNull}
		}
	case 1059:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6162
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1060:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6166
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[6].union.expr(), IfNotExists: true, KVOptions: sqlDollar[7].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1061:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6169
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 1062:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6177
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1063:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6181
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[5].union.expr(), IfExists: true, KVOptions: sqlDollar[6].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1064:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6184
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 1065:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6190
		{
			sqlVAL.union.val = true
		}
	case 1066:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6194
		{

			sqlVAL.union.val = true
		}
	case 1067:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6199
		{
			sqlVAL.union.val = false
		}
	case 1068:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6209
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[6].union.nameList(),
				AsSource:    sqlDollar[8].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: false,
				Replace:     false,
			}
		}
	case 1069:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6223
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[8].union.nameList(),
				AsSource:    sqlDollar[10].union.slct(),
				Persistence: sqlDollar[4].union.persistence(),
				IfNotExists: false,
				Replace:     true,
			}
		}
	case 1070:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6235
		{
			name := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[9].union.nameList(),
				AsSource:    sqlDollar[11].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
				Replace:     false,
			}
		}
	case 1071:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6247
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[5].union.nameList(),
				AsSource:     sqlDollar[7].union.slct(),
				Materialized: true,
			}
		}
	case 1072:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6257
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[8].union.nameList(),
				AsSource:     sqlDollar[10].union.slct(),
				Materialized: true,
				IfNotExists:  true,
			}
		}
	case 1073:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6267
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 1074:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6271
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1075:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6275
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1076:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6279
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1077:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6283
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1080:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6291
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 1081:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6295
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[2].union.kvOption())
		}
	case 1082:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6301
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 1083:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6305
		{
			sqlVAL.union.val = nil
		}
	case 1084:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6311
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: sqlDollar[3].union.expr()}
		}
	case 1085:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6315
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: tree.DNull}
		}
	case 1086:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6320
		{
		}
	case 1087:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6321
		{
			return unimplemented(sqllex, "create recursive view")
		}
	case 1088:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6330
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:   sqlDollar[3].union.unresolvedObjectName(),
				Variety:    tree.Enum,
				EnumLabels: sqlDollar[7].union.strs(),
			}
		}
	case 1089:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6337
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 1090:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6339
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1091:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6341
		{
			return unimplementedWithIssue(sqllex, 27791)
		}
	case 1092:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6343
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "base")
		}
	case 1093:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6345
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "shell")
		}
	case 1094:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6347
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "create")
		}
	case 1095:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6351
		{
			sqlVAL.union.val = sqlDollar[1].union.strs()
		}
	case 1096:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6355
		{
			sqlVAL.union.val = []string(nil)
		}
	case 1097:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6361
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 1098:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6365
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 1099:
		sqlDollar = sqlS[sqlpt-17 : sqlpt+1]
//line sql-gen.y:6385
		{
			table := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:          tree.Name(sqlDollar[5].str),
				Table:         table,
				Unique:        sqlDollar[2].union.bool(),
				Columns:       sqlDollar[10].union.idxElems(),
				Sharded:       sqlDollar[12].union.shardedIndexDef(),
				Storing:       sqlDollar[13].union.nameList(),
				Interleave:    sqlDollar[14].union.interleave(),
				PartitionBy:   sqlDollar[15].union.partitionBy(),
				StorageParams: sqlDollar[16].union.storageParams(),
				Predicate:     sqlDollar[17].union.expr(),
				Inverted:      sqlDollar[8].union.bool(),
				Concurrently:  sqlDollar[4].union.bool(),
			}
		}
	case 1100:
		sqlDollar = sqlS[sqlpt-20 : sqlpt+1]
//line sql-gen.y:6403
		{
			table := sqlDollar[10].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:          tree.Name(sqlDollar[8].str),
				Table:         table,
				Unique:        sqlDollar[2].union.bool(),
				IfNotExists:   true,
				Columns:       sqlDollar[13].union.idxElems(),
				Sharded:       sqlDollar[15].union.shardedIndexDef(),
				Storing:       sqlDollar[16].union.nameList(),
				Interleave:    sqlDollar[17].union.interleave(),
				PartitionBy:   sqlDollar[18].union.partitionBy(),
				Inverted:      sqlDollar[11].union.bool(),
				StorageParams: sqlDollar[19].union.storageParams(),
				Predicate:     sqlDollar[20].union.expr(),
				Concurrently:  sqlDollar[4].union.bool(),
			}
		}
	case 1101:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:6422
		{
			table := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:          tree.Name(sqlDollar[6].str),
				Table:         table,
				Unique:        sqlDollar[2].union.bool(),
				Inverted:      true,
				Columns:       sqlDollar[10].union.idxElems(),
				Storing:       sqlDollar[12].union.nameList(),
				Interleave:    sqlDollar[13].union.interleave(),
				PartitionBy:   sqlDollar[14].union.partitionBy(),
				StorageParams: sqlDollar[15].union.storageParams(),
				Predicate:     sqlDollar[16].union.expr(),
				Concurrently:  sqlDollar[5].union.bool(),
			}
		}
	case 1102:
		sqlDollar = sqlS[sqlpt-19 : sqlpt+1]
//line sql-gen.y:6439
		{
			table := sqlDollar[11].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:          tree.Name(sqlDollar[9].str),
				Table:         table,
				Unique:        sqlDollar[2].union.bool(),
				Inverted:      true,
				IfNotExists:   true,
				Columns:       sqlDollar[13].union.idxElems(),
				Storing:       sqlDollar[15].union.nameList(),
				Interleave:    sqlDollar[16].union.interleave(),
				PartitionBy:   sqlDollar[17].union.partitionBy(),
				StorageParams: sqlDollar[18].union.storageParams(),
				Predicate:     sqlDollar[19].union.expr(),
				Concurrently:  sqlDollar[5].union.bool(),
			}
		}
	case 1103:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6456
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 1104:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6460
		{

			switch sqlDollar[2].str {
			case "gin", "gist":
				sqlVAL.union.val = true
			case "btree":
				sqlVAL.union.val = false
			case "hash", "spgist", "brin":
				return unimplemented(sqllex, "index using "+sqlDollar[2].str)
			default:
				sqllex.Error("unrecognized access method: " + sqlDollar[2].str)
				return 1
			}
		}
	case 1105:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6475
		{
			sqlVAL.union.val = false
		}
	case 1106:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6481
		{
			sqlVAL.union.val = true
		}
	case 1107:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6485
		{
			sqlVAL.union.val = false
		}
	case 1108:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6491
		{
			sqlVAL.union.val = true
		}
	case 1109:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6495
		{
			sqlVAL.union.val = false
		}
	case 1110:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6501
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1111:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6505
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1112:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6514
		{

			e := sqlDollar[1].union.expr()
			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			if colName, ok := e.(*tree.UnresolvedName); ok && colName.NumParts == 1 {
				sqlVAL.union.val = tree.IndexElem{Column: tree.Name(colName.Parts[0]), Direction: dir, NullsOrder: nullsOrder}
			} else {
				return unimplementedWithIssueDetail(sqllex, 9682, fmt.Sprintf("%T", e))
			}
		}
	case 1113:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6536
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1114:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6537
		{
			sqlVAL.str = ""
		}
	case 1115:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6541
		{
			sqlVAL.union.val = tree.Ascending
		}
	case 1116:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6545
		{
			sqlVAL.union.val = tree.Descending
		}
	case 1117:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6549
		{
			sqlVAL.union.val = tree.DefaultDirection
		}
	case 1118:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6555
		{
			sqlVAL.union.val = &tree.RenameDatabase{Name: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[6].str)}
		}
	case 1119:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6561
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: false}
		}
	case 1120:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6567
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: false}
		}
	case 1121:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6575
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: sqlDollar[6].str, IfExists: false,
			}
		}
	case 1122:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6581
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: sqlDollar[8].str, IfExists: true,
			}
		}
	case 1123:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6589
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: sqlDollar[6].str, IfExists: false, IsView: true,
			}
		}
	case 1124:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6595
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Schema:         sqlDollar[7].str,
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1125:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6605
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: sqlDollar[8].str, IfExists: true, IsView: true,
			}
		}
	case 1126:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:6611
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Schema:         sqlDollar[9].str,
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1127:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6623
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: sqlDollar[6].str, IfExists: false, IsSequence: true,
			}
		}
	case 1128:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6629
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: sqlDollar[8].str, IfExists: true, IsSequence: true,
			}
		}
	case 1129:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6637
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: true}
		}
	case 1130:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6643
		{
			name := sqlDollar[4].union.unresolvedObjectName()
			newName := sqlDollar[7].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1131:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6655
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: true}
		}
	case 1132:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:6661
		{
			name := sqlDollar[6].union.unresolvedObjectName()
			newName := sqlDollar[9].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1133:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6675
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsSequence: true}
		}
	case 1134:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6681
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsSequence: true}
		}
	case 1135:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6689
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[3].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[6].str), IfExists: false}
		}
	case 1136:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6693
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[5].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[8].str), IfExists: true}
		}
	case 1137:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6698
		{
		}
	case 1138:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6699
		{
		}
	case 1139:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6702
		{
		}
	case 1140:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6703
		{
		}
	case 1141:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6711
		{
			sqlVAL.union.val = &tree.ReleaseSavepoint{Savepoint: tree.Name(sqlDollar[2].str)}
		}
	case 1142:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6714
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 1143:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6724
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeJob,
			}
		}
	case 1144:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6732
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1145:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6734
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1146:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6738
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1147:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6741
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1148:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6754
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeSchedule,
			}
		}
	case 1149:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6762
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1150:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6764
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.ResumeSchedule,
			}
		}
	case 1151:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6770
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1152:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6783
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.DropSchedule,
			}
		}
	case 1153:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6791
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1154:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6793
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.DropSchedule,
			}
		}
	case 1155:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6799
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1156:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6807
		{
			sqlVAL.union.val = &tree.Savepoint{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1157:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6810
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 1159:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6814
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1161:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6815
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1163:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6816
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1165:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6832
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1166:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6835
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1167:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6837
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1168:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6840
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1169:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6850
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1170:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6853
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1171:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6855
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1172:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6858
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1173:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6862
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1174:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6867
		{
		}
	case 1175:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6868
		{
		}
	case 1176:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6869
		{
		}
	case 1177:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6879
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1178:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6883
		{
			sqlVAL.union.val = &tree.RollbackToSavepoint{Savepoint: tree.Name(sqlDollar[4].str)}
		}
	case 1179:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6886
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1180:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6889
		{
		}
	case 1181:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6890
		{
		}
	case 1182:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6894
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1183:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6898
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1184:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6904
		{
			sqlVAL.union.val = &tree.BeginTransaction{Modes: sqlDollar[1].union.transactionModes()}
		}
	case 1185:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6908
		{
			sqlVAL.union.val = &tree.BeginTransaction{}
		}
	case 1186:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6914
		{
			sqlVAL.union.val = sqlDollar[1].union.transactionModes()
		}
	case 1187:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6918
		{
			a := sqlDollar[1].union.transactionModes()
			b := sqlDollar[3].union.transactionModes()
			err := a.Merge(b)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1188:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6931
		{
		}
	case 1189:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6933
		{
		}
	case 1190:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6937
		{

			sqlVAL.union.val = tree.TransactionModes{Isolation: sqlDollar[1].union.isoLevel()}
		}
	case 1191:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6942
		{
			sqlVAL.union.val = tree.TransactionModes{UserPriority: sqlDollar[1].union.userPriority()}
		}
	case 1192:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6946
		{
			sqlVAL.union.val = tree.TransactionModes{ReadWriteMode: sqlDollar[1].union.readWriteMode()}
		}
	case 1193:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6950
		{
			sqlVAL.union.val = tree.TransactionModes{AsOf: sqlDollar[1].union.asOfClause()}
		}
	case 1194:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6956
		{
			sqlVAL.union.val = sqlDollar[2].union.userPriority()
		}
	case 1195:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6962
		{
			sqlVAL.union.val = sqlDollar[3].union.isoLevel()
		}
	case 1196:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6968
		{
			sqlVAL.union.val = tree.ReadOnly
		}
	case 1197:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6972
		{
			sqlVAL.union.val = tree.ReadWrite
		}
	case 1198:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6982
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				Name:     tree.Name(sqlDollar[3].str),
				Template: sqlDollar[5].str,
				Encoding: sqlDollar[6].str,
				Collate:  sqlDollar[7].str,
				CType:    sqlDollar[8].str,
			}
		}
	case 1199:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6992
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				IfNotExists: true,
				Name:        tree.Name(sqlDollar[6].str),
				Template:    sqlDollar[8].str,
				Encoding:    sqlDollar[9].str,
				Collate:     sqlDollar[10].str,
				CType:       sqlDollar[11].str,
			}
		}
	case 1200:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7002
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 1201:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7006
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1202:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7010
		{
			sqlVAL.str = ""
		}
	case 1203:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7016
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1204:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7020
		{
			sqlVAL.str = ""
		}
	case 1205:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7026
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1206:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7030
		{
			sqlVAL.str = ""
		}
	case 1207:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7036
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1208:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7040
		{
			sqlVAL.str = ""
		}
	case 1209:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7045
		{
		}
	case 1210:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7046
		{
		}
	case 1211:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7058
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1212:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7065
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = sqlDollar[6].union.onConflict()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[7].union.retClause()
		}
	case 1213:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7072
		{
			return helpWith(sqllex, "INSERT")
		}
	case 1214:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7083
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = &tree.OnConflict{}
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1215:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7090
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 1216:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7094
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &name
		}
	case 1217:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7103
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &name, As: tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}}
		}
	case 1218:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7108
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1219:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7114
		{
			sqlVAL.union.val = &tree.Insert{Rows: sqlDollar[1].union.slct()}
		}
	case 1220:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7118
		{
			sqlVAL.union.val = &tree.Insert{Columns: sqlDollar[2].union.nameList(), Rows: sqlDollar[4].union.slct()}
		}
	case 1221:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7122
		{
			sqlVAL.union.val = &tree.Insert{Rows: &tree.Select{}}
		}
	case 1222:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7128
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1223:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7132
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1225:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7152
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1226:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7156
		{
			sqlVAL.union.val = &tree.OnConflict{Columns: sqlDollar[3].union.nameList(), Exprs: sqlDollar[7].union.updateExprs(), Where: tree.NewWhere(tree.AstWhere, sqlDollar[8].union.expr())}
		}
	case 1227:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7160
		{
			sqlVAL.union.val = &tree.OnConflict{Columns: sqlDollar[3].union.nameList(), DoNothing: true}
		}
	case 1228:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7166
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1229:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7169
		{
			return unimplementedWithIssue(sqllex, 32557)
		}
	case 1230:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7170
		{
			return unimplementedWithIssue(sqllex, 28161)
		}
	case 1231:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7172
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1232:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7178
		{
			ret := tree.ReturningExprs(sqlDollar[2].union.selExprs())
			sqlVAL.union.val = &ret
		}
	case 1233:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7183
		{
			sqlVAL.union.val = tree.ReturningNothingClause
		}
	case 1234:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7187
		{
			sqlVAL.union.val = tree.AbsentReturningClause
		}
	case 1235:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7204
		{
			sqlVAL.union.val = &tree.Update{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[3].union.tblExpr(),
				Exprs:     sqlDollar[5].union.updateExprs(),
				From:      sqlDollar[6].union.tblExprs(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[7].union.expr()),
				OrderBy:   sqlDollar[8].union.orderBy(),
				Limit:     sqlDollar[9].union.limit(),
				Returning: sqlDollar[10].union.retClause(),
			}
		}
	case 1236:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7216
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 1237:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7219
		{
			sqlVAL.union.val = sqlDollar[2].union.tblExprs()
		}
	case 1238:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7222
		{
			sqlVAL.union.val = tree.TableExprs{}
		}
	case 1239:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7228
		{
			sqlVAL.union.val = tree.UpdateExprs{sqlDollar[1].union.updateExpr()}
		}
	case 1240:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7232
		{
			sqlVAL.union.val = append(sqlDollar[1].union.updateExprs(), sqlDollar[3].union.updateExpr())
		}
	case 1243:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7245
		{
			sqlVAL.union.val = &tree.UpdateExpr{Names: tree.NameList{tree.Name(sqlDollar[1].str)}, Expr: sqlDollar[3].union.expr()}
		}
	case 1244:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7248
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1245:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7252
		{
			sqlVAL.union.val = &tree.UpdateExpr{Tuple: true, Names: sqlDollar[2].union.nameList(), Expr: sqlDollar[5].union.expr()}
		}
	case 1247:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7295
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1248:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7301
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: sqlDollar[2].union.slct()}
		}
	case 1249:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7305
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: &tree.Select{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1250:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7320
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1251:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7324
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy()}
		}
	case 1252:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7328
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[3].union.lockingClause()}
		}
	case 1253:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7332
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[3].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1254:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7336
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt()}
		}
	case 1255:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7340
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy()}
		}
	case 1256:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7344
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[5].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1257:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7348
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[5].union.lockingClause()}
		}
	case 1258:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7353
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1259:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7354
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1260:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7357
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1261:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7358
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1262:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7362
		{
			sqlVAL.union.val = tree.LockingClause{sqlDollar[1].union.lockingItem()}
		}
	case 1263:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7366
		{
			sqlVAL.union.val = append(sqlDollar[1].union.lockingClause(), sqlDollar[2].union.lockingItem())
		}
	case 1264:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7372
		{
			sqlVAL.union.val = &tree.LockingItem{
				Strength:   sqlDollar[1].union.lockingStrength(),
				Targets:    sqlDollar[2].union.tableNames(),
				WaitPolicy: sqlDollar[3].union.lockingWaitPolicy(),
			}
		}
	case 1265:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7381
		{
			sqlVAL.union.val = tree.ForUpdate
		}
	case 1266:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7382
		{
			sqlVAL.union.val = tree.ForNoKeyUpdate
		}
	case 1267:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7383
		{
			sqlVAL.union.val = tree.ForShare
		}
	case 1268:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7384
		{
			sqlVAL.union.val = tree.ForKeyShare
		}
	case 1269:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7387
		{
			sqlVAL.union.val = tree.TableNames{}
		}
	case 1270:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7388
		{
			sqlVAL.union.val = sqlDollar[2].union.tableNames()
		}
	case 1271:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7391
		{
			sqlVAL.union.val = tree.LockWaitBlock
		}
	case 1272:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7392
		{
			sqlVAL.union.val = tree.LockWaitSkip
		}
	case 1273:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7393
		{
			sqlVAL.union.val = tree.LockWaitError
		}
	case 1274:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7398
		{
			return helpWith(sqllex, "<SELECTCLAUSE>")
		}
	case 1278:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7433
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1280:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7434
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1282:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7435
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1284:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7457
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:   sqlDollar[3].union.selExprs(),
				From:    sqlDollar[4].union.from(),
				Where:   tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy: sqlDollar[6].union.groupBy(),
				Having:  tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:  sqlDollar[8].union.window(),
			}
		}
	case 1285:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7470
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct: sqlDollar[2].union.bool(),
				Exprs:    sqlDollar[3].union.selExprs(),
				From:     sqlDollar[4].union.from(),
				Where:    tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:  sqlDollar[6].union.groupBy(),
				Having:   tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:   sqlDollar[8].union.window(),
			}
		}
	case 1286:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7484
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct:   true,
				DistinctOn: sqlDollar[2].union.distinctOn(),
				Exprs:      sqlDollar[3].union.selExprs(),
				From:       sqlDollar[4].union.from(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:    sqlDollar[6].union.groupBy(),
				Having:     tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:     sqlDollar[8].union.window(),
			}
		}
	case 1287:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7496
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1288:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7500
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.UnionOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1289:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7509
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.IntersectOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1290:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7518
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.ExceptOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1291:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7533
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:       tree.SelectExprs{tree.StarSelectExpr()},
				From:        tree.From{Tables: tree.TableExprs{sqlDollar[2].union.tblExpr()}},
				TableSelect: true,
			}
		}
	case 1292:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7540
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1293:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7552
		{
			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1294:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7556
		{

			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1295:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7561
		{
			sqlVAL.union.val = &tree.With{Recursive: true, CTEList: sqlDollar[3].union.ctes()}
		}
	case 1296:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7567
		{
			sqlVAL.union.val = []*tree.CTE{sqlDollar[1].union.cte()}
		}
	case 1297:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7571
		{
			sqlVAL.union.val = append(sqlDollar[1].union.ctes(), sqlDollar[3].union.cte())
		}
	case 1298:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7577
		{
			sqlVAL.union.val = true
		}
	case 1299:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7581
		{
			sqlVAL.union.val = false
		}
	case 1300:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7587
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Set: false,
				},
				Stmt: sqlDollar[5].union.stmt(),
			}
		}
	case 1301:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7597
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Materialize: sqlDollar[4].union.bool(),
					Set:         true,
				},
				Stmt: sqlDollar[6].union.stmt(),
			}
		}
	case 1302:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7609
		{
		}
	case 1303:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7610
		{
		}
	case 1304:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7614
		{
			sqlVAL.union.val = sqlDollar[1].union.with()
		}
	case 1305:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7618
		{
			sqlVAL.union.val = nil
		}
	case 1306:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7623
		{
		}
	case 1307:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7624
		{
		}
	case 1308:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7628
		{
			sqlVAL.union.val = true
		}
	case 1309:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7632
		{
			sqlVAL.union.val = false
		}
	case 1310:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7636
		{
			sqlVAL.union.val = false
		}
	case 1311:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7642
		{
			sqlVAL.union.val = true
		}
	case 1312:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7648
		{
			sqlVAL.union.val = tree.DistinctOn(sqlDollar[4].union.exprs())
		}
	case 1313:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7653
		{
		}
	case 1314:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7654
		{
		}
	case 1315:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7658
		{
			sqlVAL.union.val = sqlDollar[1].union.orderBy()
		}
	case 1316:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7662
		{
			sqlVAL.union.val = tree.OrderBy(nil)
		}
	case 1317:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7668
		{
			sqlVAL.union.val = tree.OrderBy(sqlDollar[3].union.orders())
		}
	case 1318:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7674
		{
			sqlVAL.union.val = tree.OrderBy([]*tree.Order{sqlDollar[3].union.order()})
		}
	case 1319:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7678
		{
			sqllex.Error("multiple ORDER BY clauses are not supported in this function")
			return 1
		}
	case 1320:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7685
		{
			sqlVAL.union.val = []*tree.Order{sqlDollar[1].union.order()}
		}
	case 1321:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7689
		{
			sqlVAL.union.val = append(sqlDollar[1].union.orders(), sqlDollar[3].union.order())
		}
	case 1322:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7695
		{

			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = &tree.Order{
				OrderType:  tree.OrderByColumn,
				Expr:       sqlDollar[1].union.expr(),
				Direction:  dir,
				NullsOrder: nullsOrder,
			}
		}
	case 1323:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7716
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{OrderType: tree.OrderByIndex, Direction: sqlDollar[4].union.dir(), Table: name}
		}
	case 1324:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7721
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{
				OrderType: tree.OrderByIndex,
				Direction: sqlDollar[5].union.dir(),
				Table:     name,
				Index:     tree.UnrestrictedName(sqlDollar[4].str),
			}
		}
	case 1325:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7733
		{
			sqlVAL.union.val = tree.NullsFirst
		}
	case 1326:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7737
		{
			sqlVAL.union.val = tree.NullsLast
		}
	case 1327:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7741
		{
			sqlVAL.union.val = tree.DefaultNullsOrder
		}
	case 1328:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7750
		{
			if sqlDollar[1].union.limit() == nil {
				sqlVAL.union.val = sqlDollar[2].union.limit()
			} else {
				sqlVAL.union.val = sqlDollar[1].union.limit()
				sqlVAL.union.val.(*tree.Limit).Offset = sqlDollar[2].union.limit().Offset
			}
		}
	case 1329:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7759
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
			if sqlDollar[2].union.limit() != nil {
				sqlVAL.union.val.(*tree.Limit).Count = sqlDollar[2].union.limit().Count
				sqlVAL.union.val.(*tree.Limit).LimitAll = sqlDollar[2].union.limit().LimitAll
			}
		}
	case 1332:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7770
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
		}
	case 1333:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7771
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1335:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7775
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1336:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7779
		{
			sqlVAL.union.val = &tree.Limit{LimitAll: true}
		}
	case 1337:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7783
		{
			if sqlDollar[2].union.expr() == nil {
				sqlVAL.union.val = (*tree.Limit)(nil)
			} else {
				sqlVAL.union.val = &tree.Limit{Count: sqlDollar[2].union.expr()}
			}
		}
	case 1338:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7797
		{
			sqlVAL.union.val = &tree.Limit{Count: sqlDollar[3].union.expr()}
		}
	case 1339:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7801
		{
			sqlVAL.union.val = &tree.Limit{
				Count: tree.NewNumVal(constant.MakeInt64(1), "", false),
			}
		}
	case 1340:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7809
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1341:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7816
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1345:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7838
		{
		}
	case 1346:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7839
		{
		}
	case 1347:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7842
		{
		}
	case 1348:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7843
		{
		}
	case 1349:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7860
		{
			sqlVAL.union.val = tree.GroupBy(sqlDollar[3].union.exprs())
		}
	case 1350:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7864
		{
			sqlVAL.union.val = tree.GroupBy(nil)
		}
	case 1351:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7870
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1352:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7874
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1353:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7893
		{
			sqlVAL.union.val = &tree.ValuesClause{Rows: []tree.Exprs{sqlDollar[3].union.exprs()}}
		}
	case 1354:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7896
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1355:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7898
		{
			valNode := sqlDollar[1].union.selectStmt().(*tree.ValuesClause)
			valNode.Rows = append(valNode.Rows, sqlDollar[4].union.exprs())
			sqlVAL.union.val = valNode
		}
	case 1356:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7910
		{
			sqlVAL.union.val = tree.From{Tables: sqlDollar[2].union.tblExprs(), AsOf: sqlDollar[3].union.asOfClause()}
		}
	case 1357:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7913
		{
			return helpWith(sqllex, "<SOURCE>")
		}
	case 1358:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7915
		{
			sqlVAL.union.val = tree.From{}
		}
	case 1359:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7921
		{
			sqlVAL.union.val = tree.TableExprs{sqlDollar[1].union.tblExpr()}
		}
	case 1360:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7925
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblExprs(), sqlDollar[3].union.tblExpr())
		}
	case 1361:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7931
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1362:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7935
		{

			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[4].union.int64())}
		}
	case 1363:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7940
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Ascending}
		}
	case 1364:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7945
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Descending}
		}
	case 1365:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7951
		{
			sqlVAL.union.val = &tree.IndexFlags{NoIndexJoin: true}
		}
	case 1366:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7956
		{

			sqlVAL.union.val = &tree.IndexFlags{IgnoreForeignKeys: true}
		}
	case 1367:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7963
		{
			sqlVAL.union.val = sqlDollar[1].union.indexFlags()
		}
	case 1368:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7968
		{
			a := sqlDollar[1].union.indexFlags()
			b := sqlDollar[3].union.indexFlags()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1369:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7979
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1370:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7983
		{
			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[3].union.int64())}
		}
	case 1371:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7987
		{
			flags := sqlDollar[3].union.indexFlags()
			if err := flags.Check(); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = flags
		}
	case 1372:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7995
		{
			sqlVAL.union.val = (*tree.IndexFlags)(nil)
		}
	case 1373:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8026
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1374:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8036
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1375:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8046
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[1].union.selectStmt()},
				Ordinality: sqlDollar[2].union.bool(),
				As:         sqlDollar[3].union.aliasClause(),
			}
		}
	case 1376:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8054
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[2].union.selectStmt()},
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1377:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8063
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1378:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8067
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1379:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8071
		{
			f := sqlDollar[1].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[2].union.bool(),

				As: sqlDollar[3].union.aliasClause(),
			}
		}
	case 1380:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8082
		{
			f := sqlDollar[2].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1381:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8106
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.StatementSource{Statement: sqlDollar[2].union.stmt()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1382:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8112
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
				Columns: sqlDollar[3].union.tableRefCols(),
				As:      sqlDollar[4].union.aliasClause(),
			}
		}
	case 1383:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8123
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: tree.Exprs{sqlDollar[1].union.expr()}}
		}
	case 1384:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8127
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: sqlDollar[4].union.exprs()}
		}
	case 1385:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8133
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1386:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8135
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1387:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8139
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1388:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8145
		{
		}
	case 1389:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8147
		{
			return unimplemented(sqllex, "ROWS FROM with col_def_list")
		}
	case 1390:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8150
		{
			sqlVAL.union.val = nil
		}
	case 1391:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8151
		{
			sqlVAL.union.val = []tree.ColumnID{}
		}
	case 1392:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8152
		{
			sqlVAL.union.val = sqlDollar[2].union.tableRefCols()
		}
	case 1393:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8156
		{
			sqlVAL.union.val = []tree.ColumnID{tree.ColumnID(sqlDollar[1].union.int64())}
		}
	case 1394:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8160
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tableRefCols(), tree.ColumnID(sqlDollar[3].union.int64()))
		}
	case 1395:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8166
		{
			sqlVAL.union.val = true
		}
	case 1396:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8170
		{
			sqlVAL.union.val = false
		}
	case 1397:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8190
		{
			sqlVAL.union.val = &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}
		}
	case 1398:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8194
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: tree.AstCross, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Hint: sqlDollar[3].str}
		}
	case 1399:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8198
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[2].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Cond: sqlDollar[6].union.joinCond(), Hint: sqlDollar[3].str}
		}
	case 1400:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8202
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[3].union.tblExpr(), Cond: sqlDollar[4].union.joinCond()}
		}
	case 1401:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8206
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[3].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[6].union.tblExpr(), Cond: tree.NaturalJoinCond{}, Hint: sqlDollar[4].str}
		}
	case 1402:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8210
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[4].union.tblExpr(), Cond: tree.NaturalJoinCond{}}
		}
	case 1403:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8216
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str), Cols: sqlDollar[3].union.nameList()}
		}
	case 1404:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8220
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()}
		}
	case 1406:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8227
		{
			sqlVAL.union.val = tree.AliasClause{}
		}
	case 1407:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8233
		{
			sqlVAL.union.val = tree.AsOfClause{Expr: sqlDollar[5].union.expr()}
		}
	case 1409:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8240
		{
			sqlVAL.union.val = tree.AsOfClause{}
		}
	case 1410:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8246
		{
			sqlVAL.str = tree.AstFull
		}
	case 1411:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8250
		{
			sqlVAL.str = tree.AstLeft
		}
	case 1412:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8254
		{
			sqlVAL.str = tree.AstRight
		}
	case 1413:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8258
		{
			sqlVAL.str = tree.AstInner
		}
	case 1414:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8264
		{
		}
	case 1415:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8265
		{
		}
	case 1416:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8286
		{
			sqlVAL.str = tree.AstHash
		}
	case 1417:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8290
		{
			sqlVAL.str = tree.AstMerge
		}
	case 1418:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8294
		{
			sqlVAL.str = tree.AstLookup
		}
	case 1419:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8298
		{
			sqlVAL.str = ""
		}
	case 1420:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8311
		{
			sqlVAL.union.val = &tree.UsingJoinCond{Cols: sqlDollar[3].union.nameList()}
		}
	case 1421:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8315
		{
			sqlVAL.union.val = &tree.OnJoinCond{Expr: sqlDollar[2].union.expr()}
		}
	case 1422:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8320
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1423:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8321
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1424:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8322
		{
			sqlVAL.union.val = sqlDollar[2].union.unresolvedObjectName()
		}
	case 1425:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8323
		{
			sqlVAL.union.val = sqlDollar[3].union.unresolvedObjectName()
		}
	case 1426:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8327
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 1427:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8332
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 1428:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8346
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1429:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8350
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str)}
			sqlVAL.union.val = alias
		}
	case 1430:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8356
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = alias
		}
	case 1431:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8362
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 1432:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8372
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 1433:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8382
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1435:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8389
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1436:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8401
		{
			if bounds := sqlDollar[2].union.int32s(); bounds != nil {
				var err error
				sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), bounds)
				if err != nil {
					return setErr(sqllex, err)
				}
			} else {
				sqlVAL.union.val = sqlDollar[1].union.typeReference()
			}
		}
	case 1437:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8414
		{

			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1438:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8422
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1439:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8423
		{
			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1440:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8433
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1441:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8440
		{
			sqlVAL.union.val = []int32{-1}
		}
	case 1442:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8441
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1443:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8443
		{

			bound, err := sqlDollar[2].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = []int32{bound}
		}
	case 1444:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8451
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1445:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8452
		{
			sqlVAL.union.val = []int32(nil)
		}
	case 1447:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8464
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1448:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8471
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1449:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8480
		{

			if sqlDollar[1].str == "char" {
				sqlVAL.union.val = types.MakeQChar(0)
			} else if sqlDollar[1].str == "serial" {
				switch sqllex.(*lexer).nakedIntType.Width() {
				case 32:
					sqlVAL.union.val = &types.Serial4Type
				default:
					sqlVAL.union.val = &types.Serial8Type
				}
			} else {

				var ok bool
				var err error
				var unimp int
				sqlVAL.union.val, ok, unimp = types.TypeForNonKeywordTypeName(sqlDollar[1].str)
				if !ok {
					switch unimp {
					case 0:

						aIdx := sqllex.(*lexer).NewAnnotation()
						sqlVAL.union.val, err = tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
						if err != nil {
							return setErr(sqllex, err)
						}
					case -1:
						return unimplemented(sqllex, "type name "+sqlDollar[1].str)
					default:
						return unimplementedWithIssueDetail(sqllex, unimp, sqlDollar[1].str)
					}
				}
			}
		}
	case 1450:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8520
		{
			id := sqlDollar[2].union.int32()
			sqlVAL.union.val = &tree.OIDTypeReference{OID: oid.Oid(id)}
		}
	case 1451:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8525
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1456:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8532
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "point")
		}
	case 1457:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8533
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "polygon")
		}
	case 1458:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8536
		{
			sqlVAL.union.val = geopb.ShapeType_Point
		}
	case 1459:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8537
		{
			sqlVAL.union.val = geopb.ShapeType_LineString
		}
	case 1460:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8538
		{
			sqlVAL.union.val = geopb.ShapeType_Polygon
		}
	case 1461:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8539
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollection
		}
	case 1462:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8540
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygon
		}
	case 1463:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8541
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineString
		}
	case 1464:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8542
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPoint
		}
	case 1465:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8543
		{
			sqlVAL.union.val = geopb.ShapeType_Geometry
		}
	case 1466:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8546
		{
			sqlVAL.union.val = types.Geography
		}
	case 1467:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8547
		{
			sqlVAL.union.val = types.Geometry
		}
	case 1468:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8548
		{
			sqlVAL.union.val = types.Box2D
		}
	case 1469:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8550
		{
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1470:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8554
		{
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1471:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8558
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1472:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8566
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1478:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8592
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), 0)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1479:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8600
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), sqlDollar[4].union.int32())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1480:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8608
		{
			sqlVAL.union.val = nil
		}
	case 1481:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8615
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1482:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8619
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1483:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8623
		{
			sqlVAL.union.val = types.Int2
		}
	case 1484:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8627
		{
			sqlVAL.union.val = types.Int
		}
	case 1485:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8631
		{
			sqlVAL.union.val = types.Float4
		}
	case 1486:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8635
		{
			sqlVAL.union.val = sqlDollar[2].union.colType()
		}
	case 1487:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8639
		{
			sqlVAL.union.val = types.Float
		}
	case 1488:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8643
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1489:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8651
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1490:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8659
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1491:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8667
		{
			sqlVAL.union.val = types.Bool
		}
	case 1492:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8673
		{
			nv := sqlDollar[2].union.numVal()
			prec, err := nv.AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			typ, err := newFloat(prec)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = typ
		}
	case 1493:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8686
		{
			sqlVAL.union.val = types.Float
		}
	case 1494:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8692
		{
			bit, err := newBitType(sqlDollar[4].union.int32(), sqlDollar[2].union.bool())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1495:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8698
		{
			bit, err := newBitType(sqlDollar[3].union.int32(), true)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1496:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8706
		{
			sqlVAL.union.val = types.MakeBit(1)
		}
	case 1497:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8710
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1498:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8714
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1499:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8720
		{
			colTyp := *sqlDollar[1].union.colType()
			n := sqlDollar[3].union.int32()
			if n == 0 {
				sqllex.Error(fmt.Sprintf("length for type %s must be at least 1", colTyp.SQLString()))
				return 1
			}
			sqlVAL.union.val = types.MakeScalar(types.StringFamily, colTyp.Oid(), colTyp.Precision(), n, colTyp.Locale())
		}
	case 1500:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8732
		{
			sqlVAL.union.val = sqlDollar[1].union.colType()
		}
	case 1501:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8738
		{
			sqlVAL.union.val = types.MakeChar(1)
		}
	case 1502:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8742
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1503:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8746
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1504:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8750
		{
			sqlVAL.union.val = types.String
		}
	case 1507:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8759
		{
			sqlVAL.union.val = true
		}
	case 1508:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8760
		{
			sqlVAL.union.val = false
		}
	case 1509:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8765
		{
			sqlVAL.union.val = types.Date
		}
	case 1510:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8769
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimeTZ
			} else {
				sqlVAL.union.val = types.Time
			}
		}
	case 1511:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8777
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimeTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTime(prec)
			}
		}
	case 1512:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8789
		{
			sqlVAL.union.val = types.TimeTZ
		}
	case 1513:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8791
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimeTZ(prec)
		}
	case 1514:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8800
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimestampTZ
			} else {
				sqlVAL.union.val = types.Timestamp
			}
		}
	case 1515:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8808
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimestampTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTimestamp(prec)
			}
		}
	case 1516:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8821
		{
			sqlVAL.union.val = types.TimestampTZ
		}
	case 1517:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8825
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimestampTZ(prec)
		}
	case 1518:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8835
		{
			sqlVAL.union.val = true
		}
	case 1519:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8836
		{
			sqlVAL.union.val = false
		}
	case 1520:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8837
		{
			sqlVAL.union.val = false
		}
	case 1521:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8841
		{
			sqlVAL.union.val = types.Interval
		}
	case 1522:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8845
		{
			sqlVAL.union.val = types.MakeInterval(sqlDollar[2].union.intervalTypeMetadata())
		}
	case 1523:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8849
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeInterval(types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true})
		}
	case 1524:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8860
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_YEAR,
				},
			}
		}
	case 1525:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8868
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1526:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8876
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_DAY,
				},
			}
		}
	case 1527:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8884
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1528:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8892
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1529:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8900
		{
			sqlVAL.union.val = sqlDollar[1].union.intervalTypeMetadata()
		}
	case 1530:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8906
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_YEAR,
					DurationType:     types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1531:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8915
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1532:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8924
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1533:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8933
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_DAY
			sqlVAL.union.val = ret
		}
	case 1534:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8939
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_HOUR,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1535:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8948
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_HOUR
			sqlVAL.union.val = ret
		}
	case 1536:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8954
		{
			sqlVAL.union.val = sqlDollar[3].union.intervalTypeMetadata()
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_MINUTE
			sqlVAL.union.val = ret
		}
	case 1538:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8964
		{
			sqlVAL.union.val = nil
		}
	case 1539:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8970
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
			}
		}
	case 1540:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8978
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
				PrecisionIsSet: true,
				Precision:      prec,
			}
		}
	case 1542:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9015
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1543:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9019
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1544:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9023
		{
			sqlVAL.union.val = &tree.CollateExpr{Expr: sqlDollar[1].union.expr(), Locale: sqlDollar[3].str}
		}
	case 1545:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9027
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("timezone"), Exprs: tree.Exprs{sqlDollar[5].union.expr(), sqlDollar[1].union.expr()}}
		}
	case 1546:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9038
		{

			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1547:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9043
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1548:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9047
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryComplement, Expr: sqlDollar[2].union.expr()}
		}
	case 1549:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9051
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnarySqrt, Expr: sqlDollar[2].union.expr()}
		}
	case 1550:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9055
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryCbrt, Expr: sqlDollar[2].union.expr()}
		}
	case 1551:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9059
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Plus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1552:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9063
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Minus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1553:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9067
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mult, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1554:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9071
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Div, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1555:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9075
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.FloorDiv, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1556:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9079
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mod, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1557:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9083
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Pow, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1558:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9087
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitxor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1559:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9091
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitand, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1560:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9095
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1561:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9099
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1562:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9103
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1563:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9107
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1564:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9111
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONSomeExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1565:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9115
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONAllExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1566:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9119
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Contains, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1567:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9123
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.ContainedBy, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1568:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9127
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1569:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9131
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Concat, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1570:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9135
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.LShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1571:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9139
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.RShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1572:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9143
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchVal, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1573:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9147
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchText, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1574:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9151
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchValPath, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1575:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9155
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchTextPath, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1576:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9159
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("json_remove_path"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1577:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9163
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contained_by_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1578:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9167
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Overlaps, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1579:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9171
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contains_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1580:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9175
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1581:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9179
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1582:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9183
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1583:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9187
		{
			sqlVAL.union.val = &tree.AndExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1584:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9191
		{
			sqlVAL.union.val = &tree.OrExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1585:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9195
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1586:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9199
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1587:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9203
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Like, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1588:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9207
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1589:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9211
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotLike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1590:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9215
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1591:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9219
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.ILike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1592:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9223
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1593:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9227
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotILike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1594:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9231
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1595:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9235
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.SimilarTo, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1596:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9239
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1597:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9243
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotSimilarTo, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1598:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9247
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[5].union.expr(), sqlDollar[7].union.expr()}}
		}
	case 1599:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9251
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.RegMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1600:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9255
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotRegMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1601:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9259
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.RegIMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1602:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9263
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotRegIMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1603:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9267
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1604:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9271
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1605:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9275
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1606:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9279
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1607:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9283
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1608:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9287
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1609:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9290
		{
			return unimplemented(sqllex, "overlaps")
		}
	case 1610:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9292
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1611:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9296
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1612:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9300
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1613:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9304
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1614:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9308
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1615:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9312
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1616:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9316
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1617:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9320
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1618:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9324
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1619:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9328
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1620:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9332
		{
			sqlVAL.union.val = &tree.RangeCond{Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1621:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9336
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1622:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9340
		{
			sqlVAL.union.val = &tree.RangeCond{Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1623:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9344
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1624:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9348
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.In, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1625:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9352
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotIn, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1626:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9356
		{
			op := sqlDollar[3].union.cmpOp()
			subOp := sqlDollar[2].union.op()
			subOpCmp, ok := subOp.(tree.ComparisonOperator)
			if !ok {
				sqllex.Error(fmt.Sprintf("%s %s <array> is invalid because %q is not a boolean operator",
					subOp, op, subOp))
				return 1
			}
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator:    op,
				SubOperator: subOpCmp,
				Left:        sqlDollar[1].union.expr(),
				Right:       sqlDollar[4].union.expr(),
			}
		}
	case 1627:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9373
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 1628:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9378
		{
			return unimplemented(sqllex, "UNIQUE predicate")
		}
	case 1630:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9390
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1631:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9394
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1632:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9398
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1633:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9402
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1634:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9406
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryComplement, Expr: sqlDollar[2].union.expr()}
		}
	case 1635:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9410
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Plus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1636:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9414
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Minus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1637:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9418
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mult, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1638:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9422
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Div, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1639:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9426
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.FloorDiv, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1640:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9430
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mod, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1641:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9434
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Pow, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1642:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9438
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitxor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1643:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9442
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitand, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1644:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9446
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1645:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9450
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1646:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9454
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1647:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9458
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1648:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9462
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Concat, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1649:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9466
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.LShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1650:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9470
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.RShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1651:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9474
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1652:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9478
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1653:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9482
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1654:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9486
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1655:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9490
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1656:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9494
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1657:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9498
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1659:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9512
		{
			sqlVAL.union.val = &tree.IndirectionExpr{
				Expr:        sqlDollar[1].union.expr(),
				Indirection: sqlDollar[2].union.arraySubscripts(),
			}
		}
	case 1661:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9520
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[2].union.selectStmt(), Exists: true}
		}
	case 1662:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9556
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1663:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9560
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1664:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9564
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 1665:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9568
		{
			sqlVAL.union.val = tree.NewBytesStrVal(sqlDollar[1].str)
		}
	case 1666:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9572
		{
			d, err := tree.ParseDBitArray(sqlDollar[1].str)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 1667:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9577
		{
			return unimplemented(sqllex, sqlDollar[1].union.unresolvedName().String()+"(...) SCONST")
		}
	case 1668:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9579
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1669:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9583
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1670:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9587
		{
			sqlVAL.union.val = tree.MakeDBool(true)
		}
	case 1671:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9591
		{
			sqlVAL.union.val = tree.MakeDBool(false)
		}
	case 1672:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9595
		{
			sqlVAL.union.val = tree.DNull
		}
	case 1673:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9599
		{
			sqlVAL.union.val = tree.Expr(sqlDollar[1].union.unresolvedName())
		}
	case 1674:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9603
		{
			colNum := sqlDollar[2].union.int64()
			if colNum < 1 || colNum > int64(MaxInt) {
				sqllex.Error(fmt.Sprintf("invalid column ordinal: @%d", colNum))
				return 1
			}
			sqlVAL.union.val = tree.NewOrdinalReference(int(colNum - 1))
		}
	case 1675:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9612
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 1676:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9619
		{
			sqlVAL.union.val = &tree.TupleStar{Expr: sqlDollar[2].union.expr()}
		}
	case 1677:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9623
		{
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ColName: sqlDollar[5].str}
		}
	case 1678:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9627
		{
			idx, err := sqlDollar[6].union.numVal().AsInt32()
			if err != nil || idx <= 0 {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ByIndex: true, ColIndex: int(idx - 1)}
		}
	case 1679:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9633
		{
			sqlVAL.union.val = &tree.ParenExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1681:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9638
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1682:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9642
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 1683:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9646
		{
			sqlVAL.union.val = &tree.ArrayFlatten{Subquery: &tree.Subquery{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1684:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9650
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.tuple().Exprs}
		}
	case 1685:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9654
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1686:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9657
		{
			return unimplemented(sqllex, "d_expr grouping")
		}
	case 1687:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9661
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName()}
		}
	case 1688:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9665
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: sqlDollar[3].union.exprs(), OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 1689:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9668
		{
			return unimplemented(sqllex, "variadic")
		}
	case 1690:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9669
		{
			return unimplemented(sqllex, "variadic")
		}
	case 1691:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9671
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.AllFuncType, Exprs: sqlDollar[4].union.exprs(), OrderBy: sqlDollar[5].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 1692:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9677
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.DistinctFuncType, Exprs: sqlDollar[4].union.exprs()}
		}
	case 1693:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9681
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: tree.Exprs{tree.StarExpr()}}
		}
	case 1694:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9684
		{
			return helpWithFunction(sqllex, sqlDollar[1].union.resolvableFuncRefFromName())
		}
	case 1695:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9693
		{
			name := sqlDollar[1].union.unresolvedName()
			if name.NumParts == 1 {
				typName := name.Parts[0]

				if typName == "char" {
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: types.MakeQChar(0), SyntaxMode: tree.CastPrepend}
				} else if typName == "serial" {
					switch sqllex.(*lexer).nakedIntType.Width() {
					case 32:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial4Type, SyntaxMode: tree.CastPrepend}
					default:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial8Type, SyntaxMode: tree.CastPrepend}
					}
				} else {

					var typ tree.ResolvableTypeReference
					var ok bool
					var err error
					var unimp int
					typ, ok, unimp = types.TypeForNonKeywordTypeName(typName)
					if !ok {
						switch unimp {
						case 0:

							aIdx := sqllex.(*lexer).NewAnnotation()
							typ, err = name.ToUnresolvedObjectName(aIdx)
							if err != nil {
								return setErr(sqllex, err)
							}
						case -1:
							return unimplemented(sqllex, "type name "+typName)
						default:
							return unimplementedWithIssueDetail(sqllex, unimp, typName)
						}
					}
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: typ, SyntaxMode: tree.CastPrepend}
				}
			} else {
				aIdx := sqllex.(*lexer).NewAnnotation()
				res, err := name.ToUnresolvedObjectName(aIdx)
				if err != nil {
					return setErr(sqllex, err)
				}
				sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: res, SyntaxMode: tree.CastPrepend}
			}
		}
	case 1696:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9746
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: sqlDollar[1].union.colType(), SyntaxMode: tree.CastPrepend}
		}
	case 1697:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9759
		{
			f := sqlDollar[1].union.expr().(*tree.FuncExpr)
			w := sqlDollar[2].union.expr().(*tree.FuncExpr)
			if w.AggType != 0 {
				f.AggType = w.AggType
				f.OrderBy = w.OrderBy
			}
			f.Filter = sqlDollar[3].union.expr()
			f.WindowDef = sqlDollar[4].union.windowDef()
			sqlVAL.union.val = f
		}
	case 1698:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9771
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1699:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9780
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1700:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9781
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1701:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9786
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("pg_collation_for"), Exprs: tree.Exprs{sqlDollar[4].union.expr()}}
		}
	case 1702:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9790
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1703:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9794
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1704:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9800
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_database")}
		}
	case 1705:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9804
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1706:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9808
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1707:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9812
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1708:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9816
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1709:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9820
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1710:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9826
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1711:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9830
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1712:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9834
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1713:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9838
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.CastExplicit}
		}
	case 1714:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9842
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.AnnotateExplicit}
		}
	case 1715:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9846
		{
			sqlVAL.union.val = &tree.IfExpr{Cond: sqlDollar[3].union.expr(), True: sqlDollar[5].union.expr(), Else: sqlDollar[7].union.expr()}
		}
	case 1716:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9850
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr(), ErrCode: sqlDollar[7].union.expr()}
		}
	case 1717:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9854
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr()}
		}
	case 1718:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9858
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr()}
		}
	case 1719:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9862
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), ErrCode: sqlDollar[5].union.expr()}
		}
	case 1720:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9866
		{
			sqlVAL.union.val = &tree.NullIfExpr{Expr1: sqlDollar[3].union.expr(), Expr2: sqlDollar[5].union.expr()}
		}
	case 1721:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9870
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "IFNULL", Exprs: tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1722:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9874
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "COALESCE", Exprs: sqlDollar[3].union.exprs()}
		}
	case 1724:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9881
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1725:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9884
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1726:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9886
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1727:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9889
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1728:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9891
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1729:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9895
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1730:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9898
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1731:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9900
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1732:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9904
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1733:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9907
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1734:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9909
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1735:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9913
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1736:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9916
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1737:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9918
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1738:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9922
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1739:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9925
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1740:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9927
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1741:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9930
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1742:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9932
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1743:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9935
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1744:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9937
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1745:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9940
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1746:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9942
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1747:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9945
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1748:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9947
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("strpos"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1749:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9951
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1750:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9954
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1751:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9955
		{
			return unimplemented(sqllex, "treat")
		}
	case 1752:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9957
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1753:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9961
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ltrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1754:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9965
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("rtrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1755:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9969
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1756:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9973
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1757:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9976
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1758:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9978
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1759:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9981
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1760:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9987
		{
			sqlVAL.union.val = &tree.FuncExpr{OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.OrderedSetAgg}
		}
	case 1761:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9991
		{
			sqlVAL.union.val = &tree.FuncExpr{}
		}
	case 1762:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9997
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 1763:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10001
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1764:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10008
		{
			sqlVAL.union.val = sqlDollar[2].union.window()
		}
	case 1765:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10012
		{
			sqlVAL.union.val = tree.Window(nil)
		}
	case 1766:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10018
		{
			sqlVAL.union.val = tree.Window{sqlDollar[1].union.windowDef()}
		}
	case 1767:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10022
		{
			sqlVAL.union.val = append(sqlDollar[1].union.window(), sqlDollar[3].union.windowDef())
		}
	case 1768:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10028
		{
			n := sqlDollar[3].union.windowDef()
			n.Name = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = n
		}
	case 1769:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10036
		{
			sqlVAL.union.val = sqlDollar[2].union.windowDef()
		}
	case 1770:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10040
		{
			sqlVAL.union.val = &tree.WindowDef{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1771:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10044
		{
			sqlVAL.union.val = (*tree.WindowDef)(nil)
		}
	case 1772:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10051
		{
			sqlVAL.union.val = &tree.WindowDef{
				RefName:    tree.Name(sqlDollar[2].str),
				Partitions: sqlDollar[3].union.exprs(),
				OrderBy:    sqlDollar[4].union.orderBy(),
				Frame:      sqlDollar[5].union.windowFrame(),
			}
		}
	case 1774:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10071
		{
			sqlVAL.str = ""
		}
	case 1775:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10077
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 1776:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10081
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 1777:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10087
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.RANGE,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1778:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10095
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.ROWS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1779:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10103
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.GROUPS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1780:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10111
		{
			sqlVAL.union.val = (*tree.WindowFrame)(nil)
		}
	case 1781:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10117
		{
			startBound := sqlDollar[1].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.BoundType == tree.OffsetFollowing:
				sqllex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound}
		}
	case 1782:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10130
		{
			startBound := sqlDollar[2].union.windowFrameBound()
			endBound := sqlDollar[4].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.BoundType == tree.UnboundedPreceding:
				sqllex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.BoundType == tree.CurrentRow && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.CurrentRow:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound, EndBound: endBound}
		}
	case 1783:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10158
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedPreceding}
		}
	case 1784:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10162
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedFollowing}
		}
	case 1785:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10166
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.CurrentRow}
		}
	case 1786:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10170
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetPreceding,
			}
		}
	case 1787:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10177
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetFollowing,
			}
		}
	case 1788:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10186
		{
			sqlVAL.union.val = tree.ExcludeCurrentRow
		}
	case 1789:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10190
		{
			sqlVAL.union.val = tree.ExcludeGroup
		}
	case 1790:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10194
		{
			sqlVAL.union.val = tree.ExcludeTies
		}
	case 1791:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10198
		{

			sqlVAL.union.val = tree.NoExclusion
		}
	case 1792:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10203
		{
			sqlVAL.union.val = tree.NoExclusion
		}
	case 1793:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10216
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[3].union.exprs(), Row: true}
		}
	case 1794:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10220
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 1796:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10227
		{
			t := sqlDollar[2].union.tuple()
			labels := sqlDollar[4].union.nameList()
			t.Labels = make([]string, len(labels))
			for i, l := range labels {
				t.Labels[i] = string(l)
			}
			sqlVAL.union.val = t
		}
	case 1797:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10239
		{
			sqlVAL.union.val = tree.Any
		}
	case 1798:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10243
		{
			sqlVAL.union.val = tree.Some
		}
	case 1799:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10247
		{
			sqlVAL.union.val = tree.All
		}
	case 1800:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10252
		{
			sqlVAL.union.val = tree.Plus
		}
	case 1801:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10253
		{
			sqlVAL.union.val = tree.Minus
		}
	case 1802:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10254
		{
			sqlVAL.union.val = tree.Mult
		}
	case 1803:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10255
		{
			sqlVAL.union.val = tree.Div
		}
	case 1804:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10256
		{
			sqlVAL.union.val = tree.FloorDiv
		}
	case 1805:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10257
		{
			sqlVAL.union.val = tree.Mod
		}
	case 1806:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10258
		{
			sqlVAL.union.val = tree.Bitand
		}
	case 1807:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10259
		{
			sqlVAL.union.val = tree.Bitor
		}
	case 1808:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10260
		{
			sqlVAL.union.val = tree.Pow
		}
	case 1809:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10261
		{
			sqlVAL.union.val = tree.Bitxor
		}
	case 1810:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10262
		{
			sqlVAL.union.val = tree.LT
		}
	case 1811:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10263
		{
			sqlVAL.union.val = tree.GT
		}
	case 1812:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10264
		{
			sqlVAL.union.val = tree.EQ
		}
	case 1813:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10265
		{
			sqlVAL.union.val = tree.LE
		}
	case 1814:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10266
		{
			sqlVAL.union.val = tree.GE
		}
	case 1815:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10267
		{
			sqlVAL.union.val = tree.NE
		}
	case 1817:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10271
		{
			sqlVAL.union.val = tree.Like
		}
	case 1818:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10272
		{
			sqlVAL.union.val = tree.NotLike
		}
	case 1819:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10273
		{
			sqlVAL.union.val = tree.ILike
		}
	case 1820:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10274
		{
			sqlVAL.union.val = tree.NotILike
		}
	case 1821:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10297
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 1822:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10301
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1823:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10307
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1824:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10311
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1825:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10315
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 1826:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10326
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 1827:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10330
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1828:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10336
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1829:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10340
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 1831:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10347
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 1832:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10353
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1833:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10357
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1834:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10363
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference{sqlDollar[1].union.typeReference()}
		}
	case 1835:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10367
		{
			sqlVAL.union.val = append(sqlDollar[1].union.typeReferences(), sqlDollar[3].union.typeReference())
		}
	case 1836:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10373
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1837:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10377
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1838:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10383
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1839:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10387
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1840:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10393
		{
			sqlVAL.union.val = tree.Exprs{tree.NewStrVal(sqlDollar[1].str), sqlDollar[3].union.expr()}
		}
	case 1841:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10397
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1850:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10420
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr(), sqlDollar[4].union.expr()}
		}
	case 1851:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10424
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 1852:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10428
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1853:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10434
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1854:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10441
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[1].union.expr()}
		}
	case 1855:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10445
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 1856:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10462
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 1857:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10466
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[2].union.expr()}
		}
	case 1858:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10470
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr()}
		}
	case 1859:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10474
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), tree.NewDInt(1), sqlDollar[2].union.expr()}
		}
	case 1860:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10478
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1861:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10484
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1862:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10490
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1863:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10496
		{
			sqlVAL.union.val = append(sqlDollar[3].union.exprs(), sqlDollar[1].union.expr())
		}
	case 1864:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10500
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 1865:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10504
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1866:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10510
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1868:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10522
		{
			sqlVAL.union.val = &tree.CaseExpr{Expr: sqlDollar[2].union.expr(), Whens: sqlDollar[3].union.whens(), Else: sqlDollar[4].union.expr()}
		}
	case 1869:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10529
		{
			sqlVAL.union.val = []*tree.When{sqlDollar[1].union.when()}
		}
	case 1870:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10533
		{
			sqlVAL.union.val = append(sqlDollar[1].union.whens(), sqlDollar[2].union.when())
		}
	case 1871:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10539
		{
			sqlVAL.union.val = &tree.When{Cond: sqlDollar[2].union.expr(), Val: sqlDollar[4].union.expr()}
		}
	case 1872:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10545
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1873:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10549
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1875:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10556
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1876:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10562
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr()}
		}
	case 1877:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10566
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr(), End: sqlDollar[4].union.expr(), Slice: true}
		}
	case 1879:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10573
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1880:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10579
		{
			sqlVAL.union.val = tree.ArraySubscripts{sqlDollar[1].union.arraySubscript()}
		}
	case 1881:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10583
		{
			sqlVAL.union.val = append(sqlDollar[1].union.arraySubscripts(), sqlDollar[2].union.arraySubscript())
		}
	case 1882:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10588
		{
		}
	case 1883:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10589
		{
		}
	case 1884:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10593
		{
			sqlVAL.union.val = tree.SelectExprs{sqlDollar[1].union.selExpr()}
		}
	case 1885:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10597
		{
			sqlVAL.union.val = append(sqlDollar[1].union.selExprs(), sqlDollar[3].union.selExpr())
		}
	case 1886:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10603
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1887:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10612
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1888:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10616
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1889:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10620
		{
			sqlVAL.union.val = tree.StarSelectExpr()
		}
	case 1890:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10628
		{
			sqlVAL.union.val = tree.TableIndexNames{sqlDollar[1].union.newTableIndexName()}
		}
	case 1891:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10632
		{
			sqlVAL.union.val = append(sqlDollar[1].union.newTableIndexNames(), sqlDollar[3].union.newTableIndexName())
		}
	case 1892:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10638
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedName()}
		}
	case 1893:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10642
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedName())
		}
	case 1894:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10661
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: tree.UnrestrictedName(sqlDollar[3].str),
			}
		}
	case 1895:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10669
		{

			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			indexName := tree.UnrestrictedName(name.ObjectName)
			name.ObjectName = ""
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: indexName,
			}
		}
	case 1896:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10692
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 1898:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10701
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 1899:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10705
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1900:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10709
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 1901:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10713
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 1}
		}
	case 1902:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10719
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1903:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10723
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1908:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10738
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 1909:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10742
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 1912:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10754
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 1913:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10758
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 1914:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10767
		{
			val, err := sqlDollar[1].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 1915:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10778
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 1916:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10787
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 1917:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10795
		{
			var err error
			var d tree.Datum
			if sqlDollar[3].union.val == nil {
				d, err = tree.ParseDInterval(sqlDollar[2].str)
			} else {
				d, err = tree.ParseDIntervalWithTypeMetadata(sqlDollar[2].str, sqlDollar[3].union.intervalTypeMetadata())
			}
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 1918:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10807
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			d, err := tree.ParseDIntervalWithTypeMetadata(sqlDollar[5].str, types.IntervalTypeMetadata{
				Precision:      prec,
				PrecisionIsSet: true,
			})
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 1941:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10908
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 1943:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10915
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 2, Parts: tree.NameParts{sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1944:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10919
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 3, Parts: tree.NameParts{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1945:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10923
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 4, Parts: tree.NameParts{sqlDollar[7].str, sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1947:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10937
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 4, Parts: tree.NameParts{"", sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1948:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10941
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1949:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10945
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 1950:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10958
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 1952:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10967
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 1956:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10985
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1957:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10998
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1958:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11005
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1966:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11030
		{
			sqlVAL.str = ""
		}
	case 1967:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11036
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1968:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11040
		{
			sqlVAL.str = ""
		}
	}
	goto sqlstack /* stack new state and value */
}
